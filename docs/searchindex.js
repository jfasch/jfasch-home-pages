Search.setIndex({"docnames": ["about/myself/contact", "about/myself/cv-de", "about/myself/index", "about/myself/projects-de", "about/myself/skills-de", "about/site/courses/angebot-2023-10-12", "about/site/courses/index", "about/site/courses/samples/detail/2021-04-12/Notebook", "about/site/courses/samples/detail/2021-04-12/index", "about/site/courses/samples/detail/2021-04-12/notebook-wrapper", "about/site/courses/samples/detail/index", "about/site/courses/samples/index", "about/site/courses/templates", "about/site/index", "about/site/opentraining/index", "about/site/opentraining/misc/draft-topics/index", "about/site/opentraining/misc/index", "about/site/opentraining/misc/s5/index", "about/site/opentraining/misc/s5/tests/index", "about/site/opentraining/misc/s5/tests/test-slides", "about/site/opentraining/misc/screencast", "about/site/opentraining/misc/topics-to-write", "about/site/opentraining/netidee/index", "about/site/opentraining/netidee/netidee-antrag", "about/site/opentraining/netidee/netidee-video-2min", "about/site/opentraining/usecases/agenda-subtract-known", "about/site/opentraining/usecases/duration", "about/site/opentraining/usecases/index", "about/site/opentraining/usecases/linking", "about/site/opentraining/usecases/menu", "about/site/opentraining/usecases/slides", "about/site/recipes/camera-ssh", "about/site/recipes/emoji", "about/site/recipes/index", "about/site/recipes/isoamsa", "about/site/recipes/isoamsr", "about/site/recipes/isonum", "about/site/recipes/layout-test", "about/site/recipes/mathml", "about/site/recipes/rst-cheatsheet", "about/site/recipes/sphinxish", "about/site/work-in-progress/2022-04-13/index", "about/site/work-in-progress/2022-04-13/seminar/block-before-googletest", "about/site/work-in-progress/2022-04-13/seminar/clean-code-craftsmanship", "about/site/work-in-progress/2022-04-13/seminar/enter-googletest", "about/site/work-in-progress/2022-04-13/seminar/index", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/find-error", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-existing-files", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-store-content-on-read", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/csv", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/other-indexes", "about/site/work-in-progress/2022-04-13/seminar/tasks/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-interface", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-monolithic", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/pass-store-in-ctor", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/store-enum-switch", "about/site/work-in-progress/blink/glt2023/index", "about/site/work-in-progress/blink/glt2023/installation", "about/site/work-in-progress/blink/glt2023/pycon-2023", "about/site/work-in-progress/blink/glt2023/screenplay", "about/site/work-in-progress/blink/glt2023/submission", "about/site/work-in-progress/blink/glt2024/index", "about/site/work-in-progress/blink/glt2024/submission", "about/site/work-in-progress/blink/glt2024/talk-sketch", "about/site/work-in-progress/blink/index", "about/site/work-in-progress/blog-queue/hochkoenig/index", "about/site/work-in-progress/blog-queue/index", "about/site/work-in-progress/blog-queue/sphinx", "about/site/work-in-progress/fh-joanneum/2019/cxx", "about/site/work-in-progress/fh-joanneum/2019/cxx_build", "about/site/work-in-progress/fh-joanneum/2019/cxx_iface", "about/site/work-in-progress/fh-joanneum/2019/cxx_oo_basics", "about/site/work-in-progress/fh-joanneum/2019/cxx_unittest", "about/site/work-in-progress/fh-joanneum/2019/ec", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-1", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-2", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race_fixed", "about/site/work-in-progress/fh-joanneum/2019/git", "about/site/work-in-progress/fh-joanneum/2019/index", "about/site/work-in-progress/fh-joanneum/2019/linux", "about/site/work-in-progress/fh-joanneum/2019/linux_basics", "about/site/work-in-progress/fh-joanneum/2019/linux_dev_mgmt", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor_parallel", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_led_display", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_sensors", "about/site/work-in-progress/fh-joanneum/2019/linux_gpio", "about/site/work-in-progress/fh-joanneum/2019/mt", "about/site/work-in-progress/fh-joanneum/2019/mt_lock", "about/site/work-in-progress/fh-joanneum/2019/mt_wait", "about/site/work-in-progress/fh-joanneum/2019/py_basics", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_avg_display", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_sensors", "about/site/work-in-progress/fh-joanneum/2019/py_web", "about/site/work-in-progress/fh-joanneum/2019/py_web_sensors", "about/site/work-in-progress/fh-joanneum/2019/python", "about/site/work-in-progress/fh-joanneum/2020/index", "about/site/work-in-progress/fh-joanneum/2020/ss2022", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-08", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10-homework", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-21", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-22,24", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-28", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-04-01", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/index", "about/site/work-in-progress/fh-joanneum/2020/ws2022", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-code-general", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-yesno", "about/site/work-in-progress/fh-joanneum/2020/ws2022/lab-exam-2023-01-17", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30-solved", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/exam-2024-01-26", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/exam-2024-02-02", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/exam-2024-02-02-sample", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/index", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/index", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-const", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-param-passing", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-solid--hysteresis-with-display", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-solid--sensor-with-id", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-virtual-method", "about/site/work-in-progress/fh-joanneum/2021/git/git", "about/site/work-in-progress/fh-joanneum/2021/index", "about/site/work-in-progress/fh-joanneum/2021/ss2023", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-basic-integration", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-display", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-full-integration", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-csv-sink", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-integration", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-mqtt-sink", "about/site/work-in-progress/fh-joanneum/2021/tasks/display-infrastructure", "about/site/work-in-progress/fh-joanneum/2021/tasks/group", "about/site/work-in-progress/fh-joanneum/2021/tasks/libgpiod-switch", "about/site/work-in-progress/fh-joanneum/2021/tasks/mqtt-tkinter", "about/site/work-in-progress/fh-joanneum/2021/tasks/pwm-display", "about/site/work-in-progress/fh-joanneum/2021/tasks/sensor-interface", "about/site/work-in-progress/fh-joanneum/2021/tasks/sensor-w1", "about/site/work-in-progress/fh-joanneum/2021/tasks/switch-interface", "about/site/work-in-progress/fh-joanneum/2021/tasks/sysfs-gpio-switch", "about/site/work-in-progress/fh-joanneum/2021/ws2023-2024", "about/site/work-in-progress/fh-joanneum/2022/index", "about/site/work-in-progress/fh-joanneum/2022/ss2024/index", "about/site/work-in-progress/fh-joanneum/2022/ss2024/material", "about/site/work-in-progress/fh-joanneum/2022/ss2024/syllabus", "about/site/work-in-progress/fh-joanneum/index", "about/site/work-in-progress/git", "about/site/work-in-progress/index", "about/site/work-in-progress/packaging/index", "about/site/work-in-progress/project-xxx/audio-chip", "about/site/work-in-progress/project-xxx/debian-config", "about/site/work-in-progress/project-xxx/debian-kernel-package", "about/site/work-in-progress/project-xxx/hardware-bringup", "about/site/work-in-progress/project-xxx/index", "about/site/work-in-progress/project-xxx/kernel-upgrade-dirty", "about/site/work-in-progress/project-xxx/wait-hardware", "about/site/work-in-progress/project-xxx/yocto-kernel", "about/site/work-in-progress/python-training", "about/site/work-in-progress/screencast", "about/site/work-in-progress/seo", "about/site/work-in-progress/stacks", "about/site/work-in-progress/todo-misc", "about/site/work-in-progress/web", "blog/2010/07/beagleboard-how-to-repair-nand-also-known-as-40w", "blog/2011/01/porting-to-linux-there-s-always-a-better-way", "blog/2011/01/saving-solid-state-disk-life--gentoo", "blog/2012/04/Why-ps-sucks", "blog/2020/02/fedora-kernel-build", "blog/2020/03/custom-domain-gh-pages", "blog/2020/03/ms-teams-on-linux", "blog/2020/03/sphinx-gh-pages", "blog/2020/04/bbb", "blog/2020/09/traunstein", "blog/2021/08/grintovec", "blog/2021/09/xps13-shim-mok-brick/index", "blog/2022/09/cross-raspi", "blog/index", "index", "trainings/codex", "trainings/exercises", "trainings/index", "trainings/log/detail/2013-10-01/index", "trainings/log/detail/2015-11-30/index", "trainings/log/detail/2019-10-28/LiveHacking", "trainings/log/detail/2019-10-28/index", "trainings/log/detail/2019-11-12/code/BigPlan", "trainings/log/detail/2019-11-12/code/LiveHacking", "trainings/log/detail/2019-11-12/index", "trainings/log/detail/2020-01-10/Proposal", "trainings/log/detail/2020-01-10/index", "trainings/log/detail/2020-03-30/code/exercise-string/index", "trainings/log/detail/2020-03-30/index", "trainings/log/detail/2020-03-30/install-googletest", "trainings/log/detail/2020-03-30/setup", "trainings/log/detail/2020-03-30/vs-code", "trainings/log/detail/2020-05-12/code/index", "trainings/log/detail/2020-05-12/index", "trainings/log/detail/2020-05-18/Livehacking", "trainings/log/detail/2020-05-18/code/index", "trainings/log/detail/2020-05-18/index", "trainings/log/detail/2020-09-07/index", "trainings/log/detail/2020-09-28/index", "trainings/log/detail/2020-10-19/Notebook", "trainings/log/detail/2020-10-19/index", "trainings/log/detail/2020-11-03/index", "trainings/log/detail/2020-11-23/index", "trainings/log/detail/2020-11-30/index", "trainings/log/detail/2021-01-13/Notebook", "trainings/log/detail/2021-01-13/index", "trainings/log/detail/2021-01-13/notebook-wrapper", "trainings/log/detail/2021-02-22/index", "trainings/log/detail/2021-03-08/index", "trainings/log/detail/2021-03-15/Notebook", "trainings/log/detail/2021-03-15/index", "trainings/log/detail/2021-03-22/Notebook", "trainings/log/detail/2021-03-22/index", "trainings/log/detail/2021-03-29/index", "trainings/log/detail/2021-04-12/Notebook", "trainings/log/detail/2021-04-12/index", "trainings/log/detail/2021-04-12/notebook-wrapper", "trainings/log/detail/2021-05-03/Notebook", "trainings/log/detail/2021-05-03/index", "trainings/log/detail/2021-05-03/notebook-wrapper", "trainings/log/detail/2021-05-25/Notebook", "trainings/log/detail/2021-05-25/index", "trainings/log/detail/2021-06-14/index", "trainings/log/detail/2021-07-12/index", "trainings/log/detail/2021-08-02/index", "trainings/log/detail/2021-08-02/notebook", "trainings/log/detail/2021-08-23/Notebook", "trainings/log/detail/2021-08-23/exercises/sap-cleaned", "trainings/log/detail/2021-08-23/index", "trainings/log/detail/2021-08-23/notebook-wrapper", "trainings/log/detail/2021-08-31/Notebook", "trainings/log/detail/2021-08-31/index", "trainings/log/detail/2021-08-31/notebook-wrapper", "trainings/log/detail/2021-11-17/Notebook", "trainings/log/detail/2021-11-17/index", "trainings/log/detail/2021-11-17/notebook-wrapper", "trainings/log/detail/2021-12-01/2021-12-01", "trainings/log/detail/2021-12-01/index", "trainings/log/detail/2021-12-01/notebook-wrapper", "trainings/log/detail/2021-12-06/index", "trainings/log/detail/2022-01-17/index", "trainings/log/detail/2022-01-17/notebook", "trainings/log/detail/2022-01-17/notebook-wrapper", "trainings/log/detail/2022-02-23/Notebook", "trainings/log/detail/2022-02-23/index", "trainings/log/detail/2022-02-23/notebook-wrapper", "trainings/log/detail/2022-03-15/Notebook", "trainings/log/detail/2022-03-15/index", "trainings/log/detail/2022-03-15/notebook-wrapper", "trainings/log/detail/2022-03-23/Notebook", "trainings/log/detail/2022-03-23/index", "trainings/log/detail/2022-03-23/notebook-wrapper", "trainings/log/detail/2022-04-05/index", "trainings/log/detail/2022-04-05/notebook", "trainings/log/detail/2022-04-05/notebook-wrapper", "trainings/log/detail/2022-04-25/index", "trainings/log/detail/2022-04-25/notebook", "trainings/log/detail/2022-04-25/notebook-wrapper", "trainings/log/detail/2022-05-02/index", "trainings/log/detail/2022-05-02/notebook", "trainings/log/detail/2022-05-02/notebook-wrapper", "trainings/log/detail/2022-05-16/index", "trainings/log/detail/2022-05-16/notebook", "trainings/log/detail/2022-05-16/notebook-wrapper", "trainings/log/detail/2022-06-14/2022-05-11", "trainings/log/detail/2022-06-14/index", "trainings/log/detail/2022-07-26/index", "trainings/log/detail/2022-10-03/index", "trainings/log/detail/2022-10-11/index", "trainings/log/detail/2022-10-24/index", "trainings/log/detail/2022-11-07/index", "trainings/log/detail/2022-11-07/notebook", "trainings/log/detail/2022-11-07/notebook-wrapper", "trainings/log/detail/2022-11-16/index", "trainings/log/detail/2022-11-16/notebook", "trainings/log/detail/2022-11-16/notebook-wrapper", "trainings/log/detail/2023-01-23/index", "trainings/log/detail/2023-02-13/index", "trainings/log/detail/2023-03-13-Python-SAP/Demo/demo-notebook", "trainings/log/detail/2023-03-13-Python-SAP/demo", "trainings/log/detail/2023-03-13-Python-SAP/index", "trainings/log/detail/2023-03-13-Python-SAP/notebook", "trainings/log/detail/2023-03-13-Python-SAP/notebook-wrapper", "trainings/log/detail/2023-03-13-Python-SAP/original-agenda", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/index", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/sap-dataset", "trainings/log/detail/2023-03-20--C++-embedded/index", "trainings/log/detail/2023-03-28--Python-Clean-Code/index", "trainings/log/detail/2023-04-18--C++-embedded/index", "trainings/log/detail/2023-04-24--Python-Advanced/agenda", "trainings/log/detail/2023-04-24--Python-Advanced/index", "trainings/log/detail/2023-04-24--Python-Advanced/notebook", "trainings/log/detail/2023-04-24--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-05-15--Python-Basics/agenda", "trainings/log/detail/2023-05-15--Python-Basics/index", "trainings/log/detail/2023-05-15--Python-Basics/notebook", "trainings/log/detail/2023-05-15--Python-Basics/notebook-wrapper", "trainings/log/detail/2023-05-23--Linux-Basics/agenda", "trainings/log/detail/2023-05-23--Linux-Basics/index", "trainings/log/detail/2023-06-20--Python-Basics/agenda", "trainings/log/detail/2023-06-20--Python-Basics/index", "trainings/log/detail/2023-06-20--Python-Basics/notebook", "trainings/log/detail/2023-06-20--Python-Basics/notebook-wrapper", "trainings/log/detail/2023-07-03--CMake/agenda", "trainings/log/detail/2023-07-03--CMake/index", "trainings/log/detail/2023-09-25--Python-Advanced/index", "trainings/log/detail/2023-09-25--Python-Advanced/notebook", "trainings/log/detail/2023-09-25--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-10-09--Python-Advanced/index", "trainings/log/detail/2023-10-09--Python-Advanced/notebook", "trainings/log/detail/2023-10-09--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-10-24--Python-Advanced/agenda", "trainings/log/detail/2023-10-24--Python-Advanced/index", "trainings/log/detail/2023-10-24--Python-Advanced/notebook", "trainings/log/detail/2023-10-24--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-11-22--Python-Advanced/agenda", "trainings/log/detail/2023-11-22--Python-Advanced/index", "trainings/log/detail/2023-11-22--Python-Advanced/notebook", "trainings/log/detail/2023-11-22--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-11-27--CMake/agenda", "trainings/log/detail/2023-11-27--CMake/index", "trainings/log/detail/2023-11-29--Python-Basics/agenda", "trainings/log/detail/2023-11-29--Python-Basics/index", "trainings/log/detail/2023-11-29--Python-Basics/notebook", "trainings/log/detail/2023-11-29--Python-Basics/notebook-wrapper", "trainings/log/detail/2023-12-04--C++-Advanced/agenda", "trainings/log/detail/2023-12-04--C++-Advanced/index", "trainings/log/detail/2023-12-18--Python-Basics/agenda", "trainings/log/detail/2023-12-18--Python-Basics/index", "trainings/log/detail/2023-12-18--Python-Basics/notebook", "trainings/log/detail/2023-12-18--Python-Basics/notebook-wrapper", "trainings/log/detail/2023-XX-XX-C++-embedded/index", "trainings/log/detail/2023-XX-XX-Python-SAP/index", "trainings/log/detail/2024-01-15--Python-Advanced/agenda", "trainings/log/detail/2024-01-15--Python-Advanced/index", "trainings/log/detail/2024-01-15--Python-Advanced/notebook", "trainings/log/detail/2024-01-15--Python-Advanced/notebook-wrapper", "trainings/log/detail/2024-01-29--Python-Basics/agenda", "trainings/log/detail/2024-01-29--Python-Basics/index", "trainings/log/detail/2024-01-29--Python-Basics/notebook", "trainings/log/detail/2024-01-29--Python-Basics/notebook-wrapper", "trainings/log/detail/FH-ECE-19/EC1/2021-05-12/screenplay-checker", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-abc", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-oo", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-unittest", "trainings/log/detail/FH-ECE-19/EC1/Exercises/fh-group", "trainings/log/detail/FH-ECE-19/EC1/Exercises/file-read", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-20-G2", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-21", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Checker-Explanations", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Datatypes", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Functions", "trainings/log/detail/FH-ECE-19/EC1/cloud-computer", "trainings/log/detail/FH-ECE-19/EC1/formales", "trainings/log/detail/FH-ECE-19/EC1/index", "trainings/log/detail/FH-ECE-19/EC1/log", "trainings/log/detail/FH-ECE-19/EC1/lv-de", "trainings/log/detail/FH-ECE-19/EC1/lv-en", "trainings/log/detail/FH-ECE-19/EC1/plan", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-07", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-12", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-28", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-15", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-29", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-12-14", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-10", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-12", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-02-15", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/index", "trainings/log/detail/FH-ECE-19/EC2/index", "trainings/log/detail/FH-ECE-19/EC2/test-material", "trainings/log/detail/FH-ECE-19/index", "trainings/log/detail/index", "trainings/log/index", "trainings/material/index", "trainings/material/soup/c/010-introduction/000-installation/topic", "trainings/material/soup/c/010-introduction/010-introduction/topic", "trainings/material/soup/c/010-introduction/020-getting-started/topic", "trainings/material/soup/c/010-introduction/030-variables-and-arithmetic-expressions/topic", "trainings/material/soup/c/010-introduction/040-exercise-fahrenheit-float/topic", "trainings/material/soup/c/010-introduction/050-the-for-statement/topic", "trainings/material/soup/c/010-introduction/060-exercise-fahrenheit-for/topic", "trainings/material/soup/c/010-introduction/070-symbolic-constants/topic", "trainings/material/soup/c/010-introduction/080-exercise-fahrenheit-cpp/topic", "trainings/material/soup/c/010-introduction/090-character-input-and-output/topic", "trainings/material/soup/c/010-introduction/100-exercise-wc/topic", "trainings/material/soup/c/010-introduction/110-arrays/topic", "trainings/material/soup/c/010-introduction/120-exercise-histogram/topic", "trainings/material/soup/c/010-introduction/130-functions/topic", "trainings/material/soup/c/010-introduction/140-exercise-power-declaration/topic", "trainings/material/soup/c/010-introduction/150-character-arrays/topic", "trainings/material/soup/c/010-introduction/160-exercise-string-read-line/topic", "trainings/material/soup/c/010-introduction/170-external-variables-and-scope/topic", "trainings/material/soup/c/010-introduction/group", "trainings/material/soup/c/020-types-operators-expressions/010-introduction/topic", "trainings/material/soup/c/020-types-operators-expressions/020-variable-names/topic", "trainings/material/soup/c/020-types-operators-expressions/030-data-types-and-sizes/topic", "trainings/material/soup/c/020-types-operators-expressions/040-constants/topic", "trainings/material/soup/c/020-types-operators-expressions/050-declarations/topic", "trainings/material/soup/c/020-types-operators-expressions/060-arithmetic-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/070-relational-and-logical-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/080-type-conversions/topic", "trainings/material/soup/c/020-types-operators-expressions/090-increment-and-decrement-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/100-exercise-string-reduce/topic", "trainings/material/soup/c/020-types-operators-expressions/110-bitwise-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/120-assignment-operators-and-expressions/topic", "trainings/material/soup/c/020-types-operators-expressions/130-conditional-expressions/topic", "trainings/material/soup/c/020-types-operators-expressions/140-precedence-and-order-of-evaluation/topic", "trainings/material/soup/c/020-types-operators-expressions/group", "trainings/material/soup/c/030-program-flow/010-statements-and-blocks/topic", "trainings/material/soup/c/030-program-flow/020-if-else/topic", "trainings/material/soup/c/030-program-flow/030-else-if/topic", "trainings/material/soup/c/030-program-flow/040-switch/topic", "trainings/material/soup/c/030-program-flow/050-loops-while-and-for/topic", "trainings/material/soup/c/030-program-flow/060-loops-do-while/topic", "trainings/material/soup/c/030-program-flow/070-break-and-continue/topic", "trainings/material/soup/c/030-program-flow/080-goto-and-labels/topic", "trainings/material/soup/c/030-program-flow/group", "trainings/material/soup/c/040-functions-and-program-structure/010-basics-of-functions/topic", "trainings/material/soup/c/040-functions-and-program-structure/020-external-variables/topic", "trainings/material/soup/c/040-functions-and-program-structure/030-header-files/topic", "trainings/material/soup/c/040-functions-and-program-structure/040-static-variables/topic", "trainings/material/soup/c/040-functions-and-program-structure/050-c-preprocessor/topic", "trainings/material/soup/c/040-functions-and-program-structure/060-c-preprocessor-advanced/topic", "trainings/material/soup/c/040-functions-and-program-structure/group", "trainings/material/soup/c/050-pointers-and-arrays/010-pointers-and-addresses/topic", "trainings/material/soup/c/050-pointers-and-arrays/020-pointers-and-function-arguments/topic", "trainings/material/soup/c/050-pointers-and-arrays/030-exercise-swap/topic", "trainings/material/soup/c/050-pointers-and-arrays/040-pointers-and-arrays/topic", "trainings/material/soup/c/050-pointers-and-arrays/050-command-line-arguments/topic", "trainings/material/soup/c/050-pointers-and-arrays/group", "trainings/material/soup/c/060-structures/010-basics-of-structures/topic", "trainings/material/soup/c/060-structures/020-structures-and-functions/topic", "trainings/material/soup/c/060-structures/030-typedef/topic", "trainings/material/soup/c/060-structures/group", "trainings/material/soup/c/070-memory/010-malloc/topic", "trainings/material/soup/c/070-memory/020-exercise-linked-list/topic", "trainings/material/soup/c/070-memory/group", "trainings/material/soup/c/080-advanced-language-features/010-volatile/topic", "trainings/material/soup/c/080-advanced-language-features/020-atomic/topic", "trainings/material/soup/c/080-advanced-language-features/030-alignment/topic", "trainings/material/soup/c/080-advanced-language-features/group", "trainings/material/soup/c/090-program-sanity/010-introduction/topic", "trainings/material/soup/c/090-program-sanity/020-integral-types/topic", "trainings/material/soup/c/090-program-sanity/030-discrete-values/topic", "trainings/material/soup/c/090-program-sanity/040-static/topic", "trainings/material/soup/c/090-program-sanity/050-const/topic", "trainings/material/soup/c/090-program-sanity/060-struct-initialization/topic", "trainings/material/soup/c/090-program-sanity/070-explicit-type-safety/topic", "trainings/material/soup/c/090-program-sanity/080-valgrind/topic", "trainings/material/soup/c/090-program-sanity/group", "trainings/material/soup/c/100-performance/010-introduction/topic", "trainings/material/soup/c/100-performance/020-computebound/topic", "trainings/material/soup/c/100-performance/030-memory/topic", "trainings/material/soup/c/100-performance/group", "trainings/material/soup/c/110-profiling/010-introduction/topic", "trainings/material/soup/c/110-profiling/020-gprof/topic", "trainings/material/soup/c/110-profiling/030-callgrind/topic", "trainings/material/soup/c/110-profiling/040-oprofile/topic", "trainings/material/soup/c/110-profiling/group", "trainings/material/soup/c/group", "trainings/material/soup/clean-code/book-messages", "trainings/material/soup/clean-code/craft-sw", "trainings/material/soup/clean-code/group", "trainings/material/soup/clean-code/intro-python/livehacking", "trainings/material/soup/cmake/basics", "trainings/material/soup/cmake/configure_file", "trainings/material/soup/cmake/cxx-and-rants", "trainings/material/soup/cmake/external-dependencies", "trainings/material/soup/cmake/group", "trainings/material/soup/cmake/installation", "trainings/material/soup/cmake/libraries", "trainings/material/soup/cmake/optional-code-approach-1", "trainings/material/soup/cmake/optional-code-approach-2", "trainings/material/soup/cmake/optional-code-problem", "trainings/material/soup/cmake/shared-libraries", "trainings/material/soup/cmake/structure", "trainings/material/soup/cmake/targets-properties", "trainings/material/soup/cmake/testing", "trainings/material/soup/cxx-code/index", "trainings/material/soup/cxx-design-patterns/abstract-factory/abstract-factory", "trainings/material/soup/cxx-design-patterns/adapter/adapter", "trainings/material/soup/cxx-design-patterns/command/command", "trainings/material/soup/cxx-design-patterns/command/socialdb", "trainings/material/soup/cxx-design-patterns/composite/composite", "trainings/material/soup/cxx-design-patterns/decorator/decorator", "trainings/material/soup/cxx-design-patterns/group", "trainings/material/soup/cxx-design-patterns/heating-screenplay/heating-screenplay", "trainings/material/soup/cxx-design-patterns/interpreter/interpreter", "trainings/material/soup/cxx-design-patterns/observer/observer", "trainings/material/soup/cxx-design-patterns/oo-principles", "trainings/material/soup/cxx-design-patterns/proxy/proxy", "trainings/material/soup/cxx-design-patterns/sensor-hierarchy", "trainings/material/soup/cxx-design-patterns/singleton/singleton", "trainings/material/soup/cxx-design-patterns/uml/uml", "trainings/material/soup/cxx-exercises/design-patterns/abstract-factory", "trainings/material/soup/cxx-exercises/design-patterns/adapter", "trainings/material/soup/cxx-exercises/design-patterns/command", "trainings/material/soup/cxx-exercises/design-patterns/composite", "trainings/material/soup/cxx-exercises/design-patterns/decorator", "trainings/material/soup/cxx-exercises/design-patterns/group", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-and-adapter", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-basic", "trainings/material/soup/cxx-exercises/design-patterns/observer", "trainings/material/soup/cxx-exercises/design-patterns/proxy-remote", "trainings/material/soup/cxx-exercises/design-patterns/proxy-round", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible-strict", "trainings/material/soup/cxx-exercises/design-patterns/singleton-inflexible", "trainings/material/soup/cxx-exercises/design-patterns/solutions/abstract-factory", "trainings/material/soup/cxx-exercises/design-patterns/solutions/adapter", "trainings/material/soup/cxx-exercises/design-patterns/solutions/command", "trainings/material/soup/cxx-exercises/design-patterns/solutions/composite", "trainings/material/soup/cxx-exercises/design-patterns/solutions/decorator", "trainings/material/soup/cxx-exercises/design-patterns/solutions/group", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-and-adapter", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-basic", "trainings/material/soup/cxx-exercises/design-patterns/solutions/observer", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-remote", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-round", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible-strict", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-inflexible", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-loop-function", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-no-polymorphism", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-random-sensor", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/group", "trainings/material/soup/cxx-exercises/group", "trainings/material/soup/cxx-exercises/nopoly-display-led-stripe/display-led-stripe-nopoly", "trainings/material/soup/cxx-exercises/nopoly-hysteresis/hysteresis-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensor-avg/sensor-avg-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-const-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-mock-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-random-nopoly", "trainings/material/soup/cxx-exercises/nopoly-switch-mock/switch-mock-nopoly", "trainings/material/soup/cxx-exercises/oo-shapes/shapes", "trainings/material/soup/cxx-exercises/project-setup", "trainings/material/soup/cxx-exercises/sensor-interface/sensor-interface", "trainings/material/soup/cxx-exercises/sensor-w1-factory/sensor-w1-factory", "trainings/material/soup/cxx-exercises/sensor-w1/sensor-w1", "trainings/material/soup/cxx-exercises/stl/algo", "trainings/material/soup/cxx-exercises/stl/filter-generic", "trainings/material/soup/cxx-exercises/stl/filter-greater-10", "trainings/material/soup/cxx-exercises/stl/filter-odd", "trainings/material/soup/cxx-exercises/stl/group", "trainings/material/soup/cxx-exercises/stl/map", "trainings/material/soup/cxx-exercises/stl/sensor-repository/group", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-no-overwrite", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-sunny", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-not-found", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-sunny", "trainings/material/soup/cxx-exercises/stl/sensor-repository/no-memleak", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-not-found", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-sunny", "trainings/material/soup/cxx-exercises/stl/sensor-repository/size-const", "trainings/material/soup/cxx-exercises/stl/uniq", "trainings/material/soup/cxx-exercises/stl/vector", "trainings/material/soup/cxx-todo/index", "trainings/material/soup/cxx/cxx_class_templates/code/index", "trainings/material/soup/cxx/cxx_class_templates/screenplay", "trainings/material/soup/cxx/cxx_class_templates/topic", "trainings/material/soup/cxx/cxx_dynamic_memory/code/index", "trainings/material/soup/cxx/cxx_dynamic_memory/screenplay", "trainings/material/soup/cxx/cxx_dynamic_memory/topic", "trainings/material/soup/cxx/cxx_global_initialization/code/index", "trainings/material/soup/cxx/cxx_global_initialization/screenplay", "trainings/material/soup/cxx/cxx_global_initialization/topic", "trainings/material/soup/cxx/cxx_inheritance_virtual/code/index", "trainings/material/soup/cxx/cxx_inheritance_virtual/screenplay", "trainings/material/soup/cxx/cxx_inheritance_virtual/topic", "trainings/material/soup/cxx/cxx_ownership_raii/code/index", "trainings/material/soup/cxx/cxx_ownership_raii/screenplay", "trainings/material/soup/cxx/cxx_ownership_raii/topic", "trainings/material/soup/cxx/cxx_stl_container_intro/code/index", "trainings/material/soup/cxx/cxx_stl_container_intro/screenplay", "trainings/material/soup/cxx/cxx_stl_container_intro/topic", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/code/index", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/screenplay", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/topic", "trainings/material/soup/cxx/group", "trainings/material/soup/cxx03/001-introduction/topic", "trainings/material/soup/cxx03/020-data-encapsulation/c", "trainings/material/soup/cxx03/020-data-encapsulation/copy-basics", "trainings/material/soup/cxx03/020-data-encapsulation/cpp-introduction", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-custom", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-default", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-dtor", "trainings/material/soup/cxx03/020-data-encapsulation/group", "trainings/material/soup/cxx03/020-data-encapsulation/initializer-list", "trainings/material/soup/cxx03/020-data-encapsulation/object-copy", "trainings/material/soup/cxx03/030-functions-and-methods/010-overloading/topic", "trainings/material/soup/cxx03/030-functions-and-methods/020-methods/topic", "trainings/material/soup/cxx03/030-functions-and-methods/030-const/topic", "trainings/material/soup/cxx03/030-functions-and-methods/040-this/topic", "trainings/material/soup/cxx03/030-functions-and-methods/050-references/topic", "trainings/material/soup/cxx03/030-functions-and-methods/060-static/topic", "trainings/material/soup/cxx03/030-functions-and-methods/065-static-member-variables/topic", "trainings/material/soup/cxx03/030-functions-and-methods/070-operators/topic", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-cuboid", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point3d", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-rectangle", "trainings/material/soup/cxx03/030-functions-and-methods/group", "trainings/material/soup/cxx03/040-exceptions/010-basics/topic", "trainings/material/soup/cxx03/040-exceptions/020-try-catch/topic", "trainings/material/soup/cxx03/040-exceptions/group", "trainings/material/soup/cxx03/050-templates/010-function-templates/topic", "trainings/material/soup/cxx03/050-templates/020-class-templates/topic", "trainings/material/soup/cxx03/050-templates/group", "trainings/material/soup/cxx03/060-stl/010-basics/algo-copy", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-algo", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-basics", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-difference", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-out-of-range", "trainings/material/soup/cxx03/060-stl/010-basics/topic", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/topic", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-and-copy", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-basic", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-pointer-arith", "trainings/material/soup/cxx03/060-stl/020-algorithm/binary_search", "trainings/material/soup/cxx03/060-stl/020-algorithm/copy", "trainings/material/soup/cxx03/060-stl/020-algorithm/find", "trainings/material/soup/cxx03/060-stl/020-algorithm/find_if", "trainings/material/soup/cxx03/060-stl/020-algorithm/for_each", "trainings/material/soup/cxx03/060-stl/020-algorithm/group", "trainings/material/soup/cxx03/060-stl/020-algorithm/lower_bound", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse_copy", "trainings/material/soup/cxx03/060-stl/020-algorithm/sort", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/basics", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/group", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/list", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/vector", "trainings/material/soup/cxx03/060-stl/050-associative-containers/basics", "trainings/material/soup/cxx03/060-stl/050-associative-containers/group", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-init-fill", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-insert", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-remove", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-search", "trainings/material/soup/cxx03/060-stl/050-associative-containers/multimap", "trainings/material/soup/cxx03/060-stl/allocators/allocator_basics", "trainings/material/soup/cxx03/060-stl/allocators/group", "trainings/material/soup/cxx03/060-stl/exercises/group", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/exercise", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/group", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/solution", "trainings/material/soup/cxx03/060-stl/group", "trainings/material/soup/cxx03/070-dynamic-memory/000-todo/topic", "trainings/material/soup/cxx03/070-dynamic-memory/group", "trainings/material/soup/cxx03/100-inheritance-oo-design/basics", "trainings/material/soup/cxx03/100-inheritance-oo-design/destructor", "trainings/material/soup/cxx03/100-inheritance-oo-design/group", "trainings/material/soup/cxx03/100-inheritance-oo-design/interface", "trainings/material/soup/cxx03/100-inheritance-oo-design/polymorphism", "trainings/material/soup/cxx03/100-inheritance-oo-design/private-protected", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-destructor", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-method", "trainings/material/soup/cxx03/900-standard-library-miscellanea/group", "trainings/material/soup/cxx03/900-standard-library-miscellanea/string/topic", "trainings/material/soup/cxx03/exercises-misc/american-flag/exercise", "trainings/material/soup/cxx03/exercises-misc/fh-questions", "trainings/material/soup/cxx03/exercises-misc/group", "trainings/material/soup/cxx03/exercises-misc/sum-integers-from-stdin/exercise", "trainings/material/soup/cxx03/exercises-userdb/group", "trainings/material/soup/cxx03/exercises-userdb/user-access-methods/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-const-members/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-const/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-default-ctor/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-simple-method/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-to-cxx-ctor/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-insert/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-find_if/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-notfound-exception/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-search/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-vector/exercise", "trainings/material/soup/cxx03/group", "trainings/material/soup/cxx11/010-introduction/group", "trainings/material/soup/cxx11/010-introduction/history", "trainings/material/soup/cxx11/010-introduction/overview-livehacking", "trainings/material/soup/cxx11/020-new-language-features/010-strongly-typed-enums/topic", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/group", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/implementor-view", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/intro", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/mess", "trainings/material/soup/cxx11/020-new-language-features/050-delegating-ctor/topic", "trainings/material/soup/cxx11/020-new-language-features/055-constexpr/topic", "trainings/material/soup/cxx11/020-new-language-features/060-move/afterword", "trainings/material/soup/cxx11/020-new-language-features/060-move/group", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-smartptr-move", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-string-move", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-using-string-move", "trainings/material/soup/cxx11/020-new-language-features/060-move/overview", "trainings/material/soup/cxx11/020-new-language-features/070-miscellaneous/topic", "trainings/material/soup/cxx11/020-new-language-features/auto", "trainings/material/soup/cxx11/020-new-language-features/concepts/group", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-1-conceptless", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-2-conceptless-error", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-3-concept-integral", "trainings/material/soup/cxx11/020-new-language-features/concepts/links", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-1-good-old-func", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-2-need-template", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-4-concept-has-size", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-5-concept-index-ret-double", "trainings/material/soup/cxx11/020-new-language-features/coroutines/group", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibo-generator", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibonacci", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-h", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-hello", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/simplest", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-iter", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-next", "trainings/material/soup/cxx11/020-new-language-features/default", "trainings/material/soup/cxx11/020-new-language-features/delete", "trainings/material/soup/cxx11/020-new-language-features/final", "trainings/material/soup/cxx11/020-new-language-features/group", "trainings/material/soup/cxx11/020-new-language-features/lambda/group", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-capture", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor-pitfall", "trainings/material/soup/cxx11/020-new-language-features/modules", "trainings/material/soup/cxx11/020-new-language-features/override", "trainings/material/soup/cxx11/020-new-language-features/range-based-for", "trainings/material/soup/cxx11/020-new-language-features/range-based-for-map", "trainings/material/soup/cxx11/020-new-language-features/ranges/good-bad", "trainings/material/soup/cxx11/020-new-language-features/ranges/group", "trainings/material/soup/cxx11/020-new-language-features/ranges/intro", "trainings/material/soup/cxx11/020-new-language-features/ranges/links", "trainings/material/soup/cxx11/020-new-language-features/structured-binding", "trainings/material/soup/cxx11/030-smart-pointers/040-closing-words/topic", "trainings/material/soup/cxx11/030-smart-pointers/group", "trainings/material/soup/cxx11/030-smart-pointers/introduction", "trainings/material/soup/cxx11/030-smart-pointers/introduction-livehack", "trainings/material/soup/cxx11/030-smart-pointers/sharedptr", "trainings/material/soup/cxx11/030-smart-pointers/uniqueptr", "trainings/material/soup/cxx11/030-smart-pointers/weakptr", "trainings/material/soup/cxx11/035-perfect-forwarding/topic", "trainings/material/soup/cxx11/040-bind-function/010-bind/topic", "trainings/material/soup/cxx11/040-bind-function/020-function/topic", "trainings/material/soup/cxx11/040-bind-function/group", "trainings/material/soup/cxx11/050-multithreading/010-introduction/topic", "trainings/material/soup/cxx11/050-multithreading/020-thread/topic", "trainings/material/soup/cxx11/050-multithreading/030-race-conditions/topic", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/atomics", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/mutex", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/scoped-locking", "trainings/material/soup/cxx11/050-multithreading/condition-variable", "trainings/material/soup/cxx11/050-multithreading/group", "trainings/material/soup/cxx11/050-multithreading/promise-future", "trainings/material/soup/cxx11/100-miscellaneous/010-chrono/topic", "trainings/material/soup/cxx11/100-miscellaneous/any-variant-optional/variant", "trainings/material/soup/cxx11/100-miscellaneous/group", "trainings/material/soup/cxx11/drafts/crtp", "trainings/material/soup/cxx11/drafts/embedded-problems/allocator", "trainings/material/soup/cxx11/drafts/embedded-problems/classic-virtual", "trainings/material/soup/cxx11/drafts/embedded-problems/group", "trainings/material/soup/cxx11/drafts/embedded-problems/related-no-virtual", "trainings/material/soup/cxx11/drafts/embedded-problems/type-erasure", "trainings/material/soup/cxx11/drafts/embedded-problems/unrelated", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-automatic-visit", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-manual-if", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-manual-visit", "trainings/material/soup/cxx11/drafts/embedded-problems/why-replace-virtual", "trainings/material/soup/cxx11/drafts/group", "trainings/material/soup/cxx11/exercises/bag-copy", "trainings/material/soup/cxx11/exercises/bag-shared", "trainings/material/soup/cxx11/exercises/bag-unique", "trainings/material/soup/cxx11/exercises/group", "trainings/material/soup/cxx11/filesystem/topic", "trainings/material/soup/cxx11/group", "trainings/material/soup/graph", "trainings/material/soup/index", "trainings/material/soup/kernel/cdev-auto/screenplay", "trainings/material/soup/kernel/cdev-auto/slides", "trainings/material/soup/kernel/cdev-auto/topic", "trainings/material/soup/kernel/cdev-file-operations/screenplay", "trainings/material/soup/kernel/cdev-file-operations/slides", "trainings/material/soup/kernel/cdev-file-operations/topic", "trainings/material/soup/kernel/cdev-first-functionality/slides", "trainings/material/soup/kernel/cdev-first-functionality/topic", "trainings/material/soup/kernel/cdev-manual/screenplay", "trainings/material/soup/kernel/cdev-manual/slides", "trainings/material/soup/kernel/cdev-manual/topic", "trainings/material/soup/kernel/cdev-multiple-devices/slides", "trainings/material/soup/kernel/cdev-multiple-devices/topic", "trainings/material/soup/kernel/cdev-refactoring/screenplay", "trainings/material/soup/kernel/cdev-refactoring/slides", "trainings/material/soup/kernel/cdev-refactoring/topic", "trainings/material/soup/kernel/dma/slides", "trainings/material/soup/kernel/dma/topic", "trainings/material/soup/kernel/fedora-kernel-build/screenplay", "trainings/material/soup/kernel/fedora-kernel-build/topic", "trainings/material/soup/kernel/fedora-module-build/screenplay", "trainings/material/soup/kernel/fedora-module-build/topic", "trainings/material/soup/kernel/group", "trainings/material/soup/kernel/hello-world/slides", "trainings/material/soup/kernel/hello-world/topic", "trainings/material/soup/kernel/interrupt-coding/slides", "trainings/material/soup/kernel/interrupt-coding/topic", "trainings/material/soup/kernel/interrupt/slides", "trainings/material/soup/kernel/interrupt/topic", "trainings/material/soup/kernel/iomemory/slides", "trainings/material/soup/kernel/iomemory/topic", "trainings/material/soup/kernel/kmalloc/slides", "trainings/material/soup/kernel/kmalloc/topic", "trainings/material/soup/kernel/list/slides", "trainings/material/soup/kernel/list/topic", "trainings/material/soup/kernel/mutex-coding/slides", "trainings/material/soup/kernel/mutex-coding/topic", "trainings/material/soup/kernel/mutex/slides", "trainings/material/soup/kernel/mutex/topic", "trainings/material/soup/kernel/netdev/slides", "trainings/material/soup/kernel/netdev/topic", "trainings/material/soup/kernel/pci/slides", "trainings/material/soup/kernel/pci/topic", "trainings/material/soup/kernel/process-vs-atomic/slides", "trainings/material/soup/kernel/process-vs-atomic/topic", "trainings/material/soup/kernel/raspi-kernel-build/story", "trainings/material/soup/kernel/raspi-kernel-build/topic", "trainings/material/soup/kernel/sample-project", "trainings/material/soup/kernel/spinlock-coding/slides", "trainings/material/soup/kernel/spinlock-coding/topic", "trainings/material/soup/kernel/spinlock/slides", "trainings/material/soup/kernel/spinlock/topic", "trainings/material/soup/kernel/stub-sysprog-dup/topic", "trainings/material/soup/kernel/time_timer-coding/slides", "trainings/material/soup/kernel/time_timer-coding/topic", "trainings/material/soup/kernel/time_timer/slides", "trainings/material/soup/kernel/time_timer/topic", "trainings/material/soup/kernel/todo", "trainings/material/soup/kernel/usermem/screenplay", "trainings/material/soup/kernel/usermem/slides", "trainings/material/soup/kernel/usermem/topic", "trainings/material/soup/kernel/waitqueue/screenplay", "trainings/material/soup/kernel/waitqueue/slides", "trainings/material/soup/kernel/waitqueue/topic", "trainings/material/soup/kernel/workqueue/screenplay", "trainings/material/soup/kernel/workqueue/slides", "trainings/material/soup/kernel/workqueue/topic", "trainings/material/soup/linux/basics/archiving-compression/exercises", "trainings/material/soup/linux/basics/archiving-compression/group", "trainings/material/soup/linux/basics/archiving-compression/gzip", "trainings/material/soup/linux/basics/archiving-compression/overview", "trainings/material/soup/linux/basics/archiving-compression/tar", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G1", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G2", "trainings/material/soup/linux/basics/exercises/group", "trainings/material/soup/linux/basics/group", "trainings/material/soup/linux/basics/intro/demo-everything-is-a-file", "trainings/material/soup/linux/basics/intro/environment", "trainings/material/soup/linux/basics/intro/exercises/fh-questions", "trainings/material/soup/linux/basics/intro/group", "trainings/material/soup/linux/basics/intro/login", "trainings/material/soup/linux/basics/intro/overview", "trainings/material/soup/linux/basics/intro/process", "trainings/material/soup/linux/basics/intro/process-tree", "trainings/material/soup/linux/basics/intro/wsl", "trainings/material/soup/linux/basics/io-redirection-pipes/exercises", "trainings/material/soup/linux/basics/io-redirection-pipes/group", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection-swap-stdout-stderr", "trainings/material/soup/linux/basics/io-redirection-pipes/pipes", "trainings/material/soup/linux/basics/permissions/basics", "trainings/material/soup/linux/basics/permissions/exercises/credentials", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions-nocheat", "trainings/material/soup/linux/basics/permissions/exercises/group", "trainings/material/soup/linux/basics/permissions/exercises/private-directory", "trainings/material/soup/linux/basics/permissions/exercises/private-directory-question", "trainings/material/soup/linux/basics/permissions/exercises/public-directory", "trainings/material/soup/linux/basics/permissions/exercises/public-directory-question", "trainings/material/soup/linux/basics/permissions/exercises/shared-file", "trainings/material/soup/linux/basics/permissions/group", "trainings/material/soup/linux/basics/permissions/setuid", "trainings/material/soup/linux/basics/permissions/setuid-livedemo", "trainings/material/soup/linux/basics/permissions/sticky", "trainings/material/soup/linux/basics/permissions/umask", "trainings/material/soup/linux/basics/shell/commandline", "trainings/material/soup/linux/basics/shell/configfiles", "trainings/material/soup/linux/basics/shell/cp", "trainings/material/soup/linux/basics/shell/cwd", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/copy-tree", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-copy-files", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-create-files", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-move-files", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/group", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/mkdir-p-rm-r", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-rf", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-tree", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/verify-hierarchy", "trainings/material/soup/linux/basics/shell/exercises/fh-questions", "trainings/material/soup/linux/basics/shell/exercises/group", "trainings/material/soup/linux/basics/shell/exercises/ls/dev-types", "trainings/material/soup/linux/basics/shell/exercises/ls/etc-passwd-size", "trainings/material/soup/linux/basics/shell/exercises/ls/group", "trainings/material/soup/linux/basics/shell/exercises/ls/home-permissions", "trainings/material/soup/linux/basics/shell/file_dir_create_rm", "trainings/material/soup/linux/basics/shell/group", "trainings/material/soup/linux/basics/shell/links", "trainings/material/soup/linux/basics/shell/ls", "trainings/material/soup/linux/basics/shell/mv", "trainings/material/soup/linux/basics/shell/paths", "trainings/material/soup/linux/basics/text-tools/cat", "trainings/material/soup/linux/basics/text-tools/cut", "trainings/material/soup/linux/basics/text-tools/exercises", "trainings/material/soup/linux/basics/text-tools/find", "trainings/material/soup/linux/basics/text-tools/grep", "trainings/material/soup/linux/basics/text-tools/group", "trainings/material/soup/linux/basics/text-tools/head-tail", "trainings/material/soup/linux/basics/text-tools/less", "trainings/material/soup/linux/basics/text-tools/overview", "trainings/material/soup/linux/drafts/group", "trainings/material/soup/linux/drafts/yocto", "trainings/material/soup/linux/group", "trainings/material/soup/linux/hardware/brushless-motor/topic", "trainings/material/soup/linux/hardware/can/10-intro", "trainings/material/soup/linux/hardware/can/20-interfaces", "trainings/material/soup/linux/hardware/can/30-programming", "trainings/material/soup/linux/hardware/can/40-harware", "trainings/material/soup/linux/hardware/can/group", "trainings/material/soup/linux/hardware/group", "trainings/material/soup/linux/hardware/i2c/topic", "trainings/material/soup/linux/hardware/pwm/topic", "trainings/material/soup/linux/hardware/w1/topic", "trainings/material/soup/linux/ssh/basics", "trainings/material/soup/linux/ssh/exercises/copy-file", "trainings/material/soup/linux/ssh/exercises/copy-tree", "trainings/material/soup/linux/ssh/exercises/group", "trainings/material/soup/linux/ssh/exercises/pubkey", "trainings/material/soup/linux/ssh/group", "trainings/material/soup/linux/ssh/key-pair", "trainings/material/soup/linux/ssh/links", "trainings/material/soup/linux/ssh/portforwarding", "trainings/material/soup/linux/ssh/scp", "trainings/material/soup/linux/ssh/sshfs", "trainings/material/soup/linux/sysprog/basics/errorhandling", "trainings/material/soup/linux/sysprog/basics/group", "trainings/material/soup/linux/sysprog/basics/syscalls", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-file", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-network", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-timer", "trainings/material/soup/linux/sysprog/blocking-io/group", "trainings/material/soup/linux/sysprog/file-io/basics", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-copy", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-hole", "trainings/material/soup/linux/sysprog/file-io/duplicate", "trainings/material/soup/linux/sysprog/file-io/example-O_CREAT", "trainings/material/soup/linux/sysprog/file-io/example-O_EXCL", "trainings/material/soup/linux/sysprog/file-io/example-O_RDONLY", "trainings/material/soup/linux/sysprog/file-io/example-O_WRONLY", "trainings/material/soup/linux/sysprog/file-io/exercise-sensor-read", "trainings/material/soup/linux/sysprog/file-io/group", "trainings/material/soup/linux/sysprog/file-io/misc", "trainings/material/soup/linux/sysprog/group", "trainings/material/soup/linux/sysprog/intro-hw/get", "trainings/material/soup/linux/sysprog/intro-hw/group", "trainings/material/soup/linux/sysprog/intro-hw/sysfs-gpio", "trainings/material/soup/linux/sysprog/intro-hw/watch", "trainings/material/soup/linux/sysprog/posix-threads/010-introduction/topic", "trainings/material/soup/linux/sysprog/posix-threads/020-lifecycle/topic", "trainings/material/soup/linux/sysprog/posix-threads/030-exercise-pthcreate-race-condition/topic", "trainings/material/soup/linux/sysprog/posix-threads/040-mutex/topic", "trainings/material/soup/linux/sysprog/posix-threads/050-exercise-mutex/topic", "trainings/material/soup/linux/sysprog/posix-threads/060-condition-variable/topic", "trainings/material/soup/linux/sysprog/posix-threads/070-exercise-condition-variable/topic", "trainings/material/soup/linux/sysprog/posix-threads/080-miscellaneous/topic", "trainings/material/soup/linux/sysprog/posix-threads/090-last-warning/topic", "trainings/material/soup/linux/sysprog/posix-threads/group", "trainings/material/soup/linux/sysprog/posix-threads/locked-trylock", "trainings/material/soup/linux/sysprog/process/commandline", "trainings/material/soup/linux/sysprog/process/group", "trainings/material/soup/linux/sysprog/process/tree", "trainings/material/soup/linux/sysprog/scheduling/basics", "trainings/material/soup/linux/sysprog/scheduling/group", "trainings/material/soup/linux/sysprog/scheduling/processes-and-threads", "trainings/material/soup/linux/sysprog/scheduling/questions", "trainings/material/soup/linux/sysprog/scheduling/realtime", "trainings/material/soup/linux/sysprog/scheduling/realtime-api", "trainings/material/soup/linux/sysprog/scheduling/wakup-latency", "trainings/material/soup/linux/sysprog/sysprog_events/code/index", "trainings/material/soup/linux/sysprog/sysprog_events/screenplay", "trainings/material/soup/linux/sysprog/sysprog_events/topic", "trainings/material/soup/linux/sysprog/sysprog_ipc/code/index", "trainings/material/soup/linux/sysprog/sysprog_ipc/screenplay", "trainings/material/soup/linux/sysprog/sysprog_ipc/slides", "trainings/material/soup/linux/sysprog/sysprog_ipc/topic", "trainings/material/soup/linux/sysprog/sysprog_signals/code/index", "trainings/material/soup/linux/sysprog/sysprog_signals/screenplay", "trainings/material/soup/linux/sysprog/sysprog_signals/slides", "trainings/material/soup/linux/sysprog/sysprog_signals/topic", "trainings/material/soup/linux/toolchain/basics/topic", "trainings/material/soup/linux/toolchain/cmake/cross", "trainings/material/soup/linux/toolchain/cmake/local", "trainings/material/soup/linux/toolchain/cross/basics", "trainings/material/soup/linux/toolchain/cross/group", "trainings/material/soup/linux/toolchain/exercises/cross-build", "trainings/material/soup/linux/toolchain/exercises/fh-2022-questions", "trainings/material/soup/linux/toolchain/exercises/group", "trainings/material/soup/linux/toolchain/exercises/native-build", "trainings/material/soup/linux/toolchain/exercises/raspberry-toolchain", "trainings/material/soup/linux/toolchain/group", "trainings/material/soup/linux/toolchain/raspberry-pi/group", "trainings/material/soup/linux/toolchain/raspberry-pi/linaro", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-details", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-docker-fedora", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-setup", "trainings/material/soup/linux/toolchain/separate-compilation/topic", "trainings/material/soup/linux/toolchain/shared-libraries/topic", "trainings/material/soup/linux/toolchain/static-library/topic", "trainings/material/soup/python/advanced/closures/topic", "trainings/material/soup/python/advanced/comprehensions/topic", "trainings/material/soup/python/advanced/context-mgr/topic", "trainings/material/soup/python/advanced/decorators/topic", "trainings/material/soup/python/advanced/exceptions/topic", "trainings/material/soup/python/advanced/exec/topic", "trainings/material/soup/python/advanced/group", "trainings/material/soup/python/advanced/iteration-generation/iteration-generation/topic", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/fibonacci-generator", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/iterator-protocol", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/topic", "trainings/material/soup/python/advanced/iteration-generation/topic", "trainings/material/soup/python/advanced/modules", "trainings/material/soup/python/advanced/multithreading/basics", "trainings/material/soup/python/advanced/multithreading/group", "trainings/material/soup/python/advanced/multithreading/mutex", "trainings/material/soup/python/advanced/multithreading/questions", "trainings/material/soup/python/advanced/oo/abc/topic", "trainings/material/soup/python/advanced/oo/classes-and-dicts/topic", "trainings/material/soup/python/advanced/oo/constructor/topic", "trainings/material/soup/python/advanced/oo/group", "trainings/material/soup/python/advanced/oo/inheritance/topic", "trainings/material/soup/python/advanced/oo/methods/topic", "trainings/material/soup/python/advanced/oo/namedtuple/topic", "trainings/material/soup/python/advanced/oo/operator-overloading/topic", "trainings/material/soup/python/advanced/oo/properties/topic", "trainings/material/soup/python/advanced/oo/str-repr/topic", "trainings/material/soup/python/advanced/starargs/topic", "trainings/material/soup/python/basics/group", "trainings/material/soup/python/basics/installation", "trainings/material/soup/python/basics/python_0110_blahblah/topic", "trainings/material/soup/python/basics/python_0120_helloworld/topic", "trainings/material/soup/python/basics/python_0125_running/topic", "trainings/material/soup/python/basics/python_0130_syntax_etc/topic", "trainings/material/soup/python/basics/python_0139_commandline_argv/topic", "trainings/material/soup/python/basics/python_0140_variables/topic", "trainings/material/soup/python/basics/python_0150_datatypes_overview/topic", "trainings/material/soup/python/basics/python_0150_datatypes_overview_compound/topic", "trainings/material/soup/python/basics/python_0160_boolean/topic", "trainings/material/soup/python/basics/python_0170_if/topic", "trainings/material/soup/python/basics/python_0193_while/topic", "trainings/material/soup/python/basics/python_0200_sequential_types/topic", "trainings/material/soup/python/basics/python_0210_indexing_slicing/topic", "trainings/material/soup/python/basics/python_0220_for/topic", "trainings/material/soup/python/basics/python_0225_range/topic", "trainings/material/soup/python/basics/python_0250_refs_flat_deep_copy/topic", "trainings/material/soup/python/basics/python_0270_functions/screenplay-scoping", "trainings/material/soup/python/basics/python_0270_functions/slideshow", "trainings/material/soup/python/basics/python_0270_functions/topic", "trainings/material/soup/python/basics/python_0300_strings/topic", "trainings/material/soup/python/basics/python_0310_strings_formatting/topic", "trainings/material/soup/python/basics/python_0320_strings_methods/topic", "trainings/material/soup/python/basics/python_0400_lists/topic", "trainings/material/soup/python/basics/python_0450_dictionaries/topic", "trainings/material/soup/python/basics/python_0460_sets/topic", "trainings/material/soup/python/basics/python_0500_files/topic", "trainings/material/soup/python/basics/python_1000_function_objects/topic", "trainings/material/soup/python/drafts/argparse/topic", "trainings/material/soup/python/drafts/group", "trainings/material/soup/python/drafts/matplotlib/topic", "trainings/material/soup/python/drafts/setuptools/topic", "trainings/material/soup/python/exercises/csv/csv-db", "trainings/material/soup/python/exercises/csv/csv-module", "trainings/material/soup/python/exercises/csv/group", "trainings/material/soup/python/exercises/group", "trainings/material/soup/python/exercises/herdt/boolean", "trainings/material/soup/python/exercises/herdt/exercise_while_even_numbers", "trainings/material/soup/python/exercises/herdt/greet", "trainings/material/soup/python/exercises/herdt/group", "trainings/material/soup/python/exercises/herdt/max_numbers", "trainings/material/soup/python/exercises/herdt/swap", "trainings/material/soup/python/exercises/herdt/username_password", "trainings/material/soup/python/exercises/legacy/cmdline_digit", "trainings/material/soup/python/exercises/legacy/dict_keyerror", "trainings/material/soup/python/exercises/legacy/distill", "trainings/material/soup/python/exercises/legacy/fibonacci-generator", "trainings/material/soup/python/exercises/legacy/for_primeness", "trainings/material/soup/python/exercises/legacy/group", "trainings/material/soup/python/exercises/legacy/join_function", "trainings/material/soup/python/exercises/legacy/max_numbers", "trainings/material/soup/python/exercises/legacy/max_numbers_function", "trainings/material/soup/python/exercises/legacy/mixed_list_executable", "trainings/material/soup/python/exercises/legacy/mixed_list_interactive", "trainings/material/soup/python/exercises/legacy/passwd", "trainings/material/soup/python/exercises/legacy/primeness_function", "trainings/material/soup/python/exercises/legacy/revert", "trainings/material/soup/python/exercises/legacy/string-rightjustify", "trainings/material/soup/python/exercises/legacy/uniq_function", "trainings/material/soup/python/exercises/legacy/uniq_generator", "trainings/material/soup/python/exercises/legacy/wc", "trainings/material/soup/python/exercises/legacy/while_primeness", "trainings/material/soup/python/exercises/sensors/group", "trainings/material/soup/python/exercises/sensors/project-setup", "trainings/material/soup/python/exercises/sensors/sensor-const", "trainings/material/soup/python/exercises/userdb/csvdictreader", "trainings/material/soup/python/exercises/userdb/csvdictreader-function", "trainings/material/soup/python/exercises/userdb/csvreader", "trainings/material/soup/python/exercises/userdb/csvreader-function", "trainings/material/soup/python/exercises/userdb/group", "trainings/material/soup/python/exercises/userdb/mqtt-publish-csv", "trainings/material/soup/python/exercises/userdb/user-class-person", "trainings/material/soup/python/exercises/userdb/user_json", "trainings/material/soup/python/exercises/userdb/userdb_csv", "trainings/material/soup/python/graph", "trainings/material/soup/python/group", "trainings/material/soup/python/link-collection", "trainings/material/soup/python/misc/ai/group", "trainings/material/soup/python/misc/ai/k-means", "trainings/material/soup/python/misc/ai/linear-regression/code", "trainings/material/soup/python/misc/ai/linear-regression/history_data", "trainings/material/soup/python/misc/ai/linear-regression/linear_regression", "trainings/material/soup/python/misc/ai/linear-regression/topic", "trainings/material/soup/python/misc/ai/machine-learning-intro", "trainings/material/soup/python/misc/csv/topic", "trainings/material/soup/python/misc/db/dbapi2", "trainings/material/soup/python/misc/db/group", "trainings/material/soup/python/misc/db/postgres", "trainings/material/soup/python/misc/db/sqlite3", "trainings/material/soup/python/misc/encoding/topic", "trainings/material/soup/python/misc/group", "trainings/material/soup/python/misc/import", "trainings/material/soup/python/misc/mqtt/topic", "trainings/material/soup/python/misc/pandas/add_row", "trainings/material/soup/python/misc/pandas/basics", "trainings/material/soup/python/misc/pandas/filters", "trainings/material/soup/python/misc/pandas/group", "trainings/material/soup/python/misc/pandas/iloc", "trainings/material/soup/python/misc/pandas/indexes", "trainings/material/soup/python/misc/pandas/loc", "trainings/material/soup/python/misc/pandas/mod_col", "trainings/material/soup/python/misc/python_5550_xml_etree/topic", "trainings/material/soup/python/misc/vscode", "trainings/material/soup/python/swdev/group", "trainings/material/soup/python/swdev/pip/screenplay", "trainings/material/soup/python/swdev/pip/slides", "trainings/material/soup/python/swdev/pip/topic", "trainings/material/soup/python/swdev/pypi", "trainings/material/soup/python/swdev/pytest/group", "trainings/material/soup/python/swdev/pytest/intro", "trainings/material/soup/python/swdev/unittest", "trainings/material/soup/python/swdev/venv/screenplay", "trainings/material/soup/python/swdev/venv/slides", "trainings/material/soup/python/swdev/venv/topic", "trainings/material/soup/unittest/group", "trainings/material/soup/unittest/unittest_gtest_basics/code/index", "trainings/material/soup/unittest/unittest_gtest_basics/screenplay", "trainings/material/soup/unittest/unittest_gtest_basics/topic", "trainings/material/soup/unittest/unittest_gtest_cmake/screenplay", "trainings/material/soup/unittest/unittest_gtest_cmake/topic", "trainings/material/soup/unittest/unittest_gtest_fixture/code/index", "trainings/material/soup/unittest/unittest_gtest_fixture/screenplay", "trainings/material/soup/unittest/unittest_gtest_fixture/topic", "trainings/org", "trainings/repertoire/_hidden/kettner-lfs-2013-09-16", "trainings/repertoire/bash", "trainings/repertoire/c-like/c", "trainings/repertoire/c-like/c-advanced", "trainings/repertoire/c-like/cxx", "trainings/repertoire/c-like/cxx11", "trainings/repertoire/c-like/index", "trainings/repertoire/cmake", "trainings/repertoire/design-patterns/design-patterns", "trainings/repertoire/embedded", "trainings/repertoire/kernel-programming-basics", "trainings/repertoire/linux-basics", "trainings/repertoire/make", "trainings/repertoire/python/advanced", "trainings/repertoire/python/basics", "trainings/repertoire/python/herdt", "trainings/repertoire/raspi-hands-on", "trainings/repertoire/svn", "trainings/repertoire/sysprog/basics", "trainings/repertoire/sysprog/fortgeschrittenes", "trainings/repertoire/sysprog/index", "trainings/repertoire/sysprog/multithreading", "trainings/repertoire/sysprog/network", "trainings/repertoire/unittests"], "filenames": ["about/myself/contact.rst", "about/myself/cv-de.rst", "about/myself/index.rst", "about/myself/projects-de.rst", "about/myself/skills-de.rst", "about/site/courses/angebot-2023-10-12.rst", "about/site/courses/index.rst", "about/site/courses/samples/detail/2021-04-12/Notebook.ipynb", "about/site/courses/samples/detail/2021-04-12/index.rst", "about/site/courses/samples/detail/2021-04-12/notebook-wrapper.rst", "about/site/courses/samples/detail/index.rst", "about/site/courses/samples/index.rst", "about/site/courses/templates.rst", "about/site/index.rst", "about/site/opentraining/index.rst", "about/site/opentraining/misc/draft-topics/index.rst", "about/site/opentraining/misc/index.rst", "about/site/opentraining/misc/s5/index.rst", "about/site/opentraining/misc/s5/tests/index.rst", "about/site/opentraining/misc/s5/tests/test-slides.rst", "about/site/opentraining/misc/screencast.rst", "about/site/opentraining/misc/topics-to-write.rst", "about/site/opentraining/netidee/index.rst", "about/site/opentraining/netidee/netidee-antrag.rst", "about/site/opentraining/netidee/netidee-video-2min.rst", "about/site/opentraining/usecases/agenda-subtract-known.rst", "about/site/opentraining/usecases/duration.rst", "about/site/opentraining/usecases/index.rst", "about/site/opentraining/usecases/linking.rst", "about/site/opentraining/usecases/menu.rst", "about/site/opentraining/usecases/slides.rst", "about/site/recipes/camera-ssh.rst", "about/site/recipes/emoji.rst", "about/site/recipes/index.rst", "about/site/recipes/isoamsa.rst", "about/site/recipes/isoamsr.rst", "about/site/recipes/isonum.rst", "about/site/recipes/layout-test.rst", "about/site/recipes/mathml.rst", "about/site/recipes/rst-cheatsheet.rst", "about/site/recipes/sphinxish.rst", "about/site/work-in-progress/2022-04-13/index.rst", "about/site/work-in-progress/2022-04-13/seminar/block-before-googletest.rst", "about/site/work-in-progress/2022-04-13/seminar/clean-code-craftsmanship.rst", "about/site/work-in-progress/2022-04-13/seminar/enter-googletest.rst", "about/site/work-in-progress/2022-04-13/seminar/index.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/find-error.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-existing-files.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-store-content-on-read.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/csv.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/other-indexes.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-interface.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-monolithic.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/pass-store-in-ctor.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/store-enum-switch.rst", "about/site/work-in-progress/blink/glt2023/index.rst", "about/site/work-in-progress/blink/glt2023/installation.rst", "about/site/work-in-progress/blink/glt2023/pycon-2023.rst", "about/site/work-in-progress/blink/glt2023/screenplay.rst", "about/site/work-in-progress/blink/glt2023/submission.rst", "about/site/work-in-progress/blink/glt2024/index.rst", "about/site/work-in-progress/blink/glt2024/submission.rst", "about/site/work-in-progress/blink/glt2024/talk-sketch.rst", "about/site/work-in-progress/blink/index.rst", "about/site/work-in-progress/blog-queue/hochkoenig/index.rst", "about/site/work-in-progress/blog-queue/index.rst", "about/site/work-in-progress/blog-queue/sphinx.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_build.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_iface.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_oo_basics.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_unittest.rst", "about/site/work-in-progress/fh-joanneum/2019/ec.rst", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-1.rst", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-2.rst", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race.rst", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race_fixed.rst", "about/site/work-in-progress/fh-joanneum/2019/git.rst", "about/site/work-in-progress/fh-joanneum/2019/index.rst", "about/site/work-in-progress/fh-joanneum/2019/linux.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_basics.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_dev_mgmt.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor_parallel.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_led_display.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_sensors.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_gpio.rst", "about/site/work-in-progress/fh-joanneum/2019/mt.rst", "about/site/work-in-progress/fh-joanneum/2019/mt_lock.rst", "about/site/work-in-progress/fh-joanneum/2019/mt_wait.rst", "about/site/work-in-progress/fh-joanneum/2019/py_basics.rst", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_avg_display.rst", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_sensors.rst", "about/site/work-in-progress/fh-joanneum/2019/py_web.rst", "about/site/work-in-progress/fh-joanneum/2019/py_web_sensors.rst", "about/site/work-in-progress/fh-joanneum/2019/python.rst", "about/site/work-in-progress/fh-joanneum/2020/index.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-08.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10-homework.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-21.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-22,24.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-28.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-04-01.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/index.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-code-general.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-yesno.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022/lab-exam-2023-01-17.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30-solved.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/exam-2024-01-26.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/exam-2024-02-02.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/exam-2024-02-02-sample.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/index.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/index.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-const.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-param-passing.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-solid--hysteresis-with-display.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-solid--sensor-with-id.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-virtual-method.rst", "about/site/work-in-progress/fh-joanneum/2021/git/git.rst", "about/site/work-in-progress/fh-joanneum/2021/index.rst", "about/site/work-in-progress/fh-joanneum/2021/ss2023.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-basic-integration.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-display.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-full-integration.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-csv-sink.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-integration.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-mqtt-sink.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/display-infrastructure.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/group.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/libgpiod-switch.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/mqtt-tkinter.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/pwm-display.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/sensor-interface.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/sensor-w1.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/switch-interface.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/sysfs-gpio-switch.rst", "about/site/work-in-progress/fh-joanneum/2021/ws2023-2024.rst", "about/site/work-in-progress/fh-joanneum/2022/index.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/index.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/material.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/syllabus.rst", "about/site/work-in-progress/fh-joanneum/index.rst", "about/site/work-in-progress/git.rst", "about/site/work-in-progress/index.rst", "about/site/work-in-progress/packaging/index.rst", "about/site/work-in-progress/project-xxx/audio-chip.rst", "about/site/work-in-progress/project-xxx/debian-config.rst", "about/site/work-in-progress/project-xxx/debian-kernel-package.rst", "about/site/work-in-progress/project-xxx/hardware-bringup.rst", "about/site/work-in-progress/project-xxx/index.rst", "about/site/work-in-progress/project-xxx/kernel-upgrade-dirty.rst", "about/site/work-in-progress/project-xxx/wait-hardware.rst", "about/site/work-in-progress/project-xxx/yocto-kernel.rst", "about/site/work-in-progress/python-training.rst", "about/site/work-in-progress/screencast.rst", "about/site/work-in-progress/seo.rst", "about/site/work-in-progress/stacks.rst", "about/site/work-in-progress/todo-misc.rst", "about/site/work-in-progress/web.rst", "blog/2010/07/beagleboard-how-to-repair-nand-also-known-as-40w.rst", "blog/2011/01/porting-to-linux-there-s-always-a-better-way.rst", "blog/2011/01/saving-solid-state-disk-life--gentoo.rst", "blog/2012/04/Why-ps-sucks.rst", "blog/2020/02/fedora-kernel-build.rst", "blog/2020/03/custom-domain-gh-pages.rst", "blog/2020/03/ms-teams-on-linux.rst", "blog/2020/03/sphinx-gh-pages.rst", "blog/2020/04/bbb.rst", "blog/2020/09/traunstein.rst", "blog/2021/08/grintovec.rst", "blog/2021/09/xps13-shim-mok-brick/index.rst", "blog/2022/09/cross-raspi.rst", "blog/index.rst", "index.rst", "trainings/codex.rst", "trainings/exercises.rst", "trainings/index.rst", "trainings/log/detail/2013-10-01/index.rst", "trainings/log/detail/2015-11-30/index.rst", "trainings/log/detail/2019-10-28/LiveHacking.ipynb", "trainings/log/detail/2019-10-28/index.rst", "trainings/log/detail/2019-11-12/code/BigPlan.ipynb", "trainings/log/detail/2019-11-12/code/LiveHacking.ipynb", "trainings/log/detail/2019-11-12/index.rst", "trainings/log/detail/2020-01-10/Proposal.rst", "trainings/log/detail/2020-01-10/index.rst", "trainings/log/detail/2020-03-30/code/exercise-string/index.rst", "trainings/log/detail/2020-03-30/index.rst", "trainings/log/detail/2020-03-30/install-googletest.rst", "trainings/log/detail/2020-03-30/setup.rst", "trainings/log/detail/2020-03-30/vs-code.rst", "trainings/log/detail/2020-05-12/code/index.rst", "trainings/log/detail/2020-05-12/index.rst", "trainings/log/detail/2020-05-18/Livehacking.ipynb", "trainings/log/detail/2020-05-18/code/index.rst", "trainings/log/detail/2020-05-18/index.rst", "trainings/log/detail/2020-09-07/index.rst", "trainings/log/detail/2020-09-28/index.rst", "trainings/log/detail/2020-10-19/Notebook.ipynb", "trainings/log/detail/2020-10-19/index.rst", "trainings/log/detail/2020-11-03/index.rst", "trainings/log/detail/2020-11-23/index.rst", "trainings/log/detail/2020-11-30/index.rst", "trainings/log/detail/2021-01-13/Notebook.ipynb", "trainings/log/detail/2021-01-13/index.rst", "trainings/log/detail/2021-01-13/notebook-wrapper.rst", "trainings/log/detail/2021-02-22/index.rst", "trainings/log/detail/2021-03-08/index.rst", "trainings/log/detail/2021-03-15/Notebook.ipynb", "trainings/log/detail/2021-03-15/index.rst", "trainings/log/detail/2021-03-22/Notebook.ipynb", "trainings/log/detail/2021-03-22/index.rst", "trainings/log/detail/2021-03-29/index.rst", "trainings/log/detail/2021-04-12/Notebook.ipynb", "trainings/log/detail/2021-04-12/index.rst", "trainings/log/detail/2021-04-12/notebook-wrapper.rst", "trainings/log/detail/2021-05-03/Notebook.ipynb", "trainings/log/detail/2021-05-03/index.rst", "trainings/log/detail/2021-05-03/notebook-wrapper.rst", "trainings/log/detail/2021-05-25/Notebook.ipynb", "trainings/log/detail/2021-05-25/index.rst", "trainings/log/detail/2021-06-14/index.rst", "trainings/log/detail/2021-07-12/index.rst", "trainings/log/detail/2021-08-02/index.rst", "trainings/log/detail/2021-08-02/notebook.ipynb", "trainings/log/detail/2021-08-23/Notebook.ipynb", "trainings/log/detail/2021-08-23/exercises/sap-cleaned.rst", "trainings/log/detail/2021-08-23/index.rst", "trainings/log/detail/2021-08-23/notebook-wrapper.rst", "trainings/log/detail/2021-08-31/Notebook.ipynb", "trainings/log/detail/2021-08-31/index.rst", "trainings/log/detail/2021-08-31/notebook-wrapper.rst", "trainings/log/detail/2021-11-17/Notebook.ipynb", "trainings/log/detail/2021-11-17/index.rst", "trainings/log/detail/2021-11-17/notebook-wrapper.rst", "trainings/log/detail/2021-12-01/2021-12-01.ipynb", "trainings/log/detail/2021-12-01/index.rst", "trainings/log/detail/2021-12-01/notebook-wrapper.rst", "trainings/log/detail/2021-12-06/index.rst", "trainings/log/detail/2022-01-17/index.rst", "trainings/log/detail/2022-01-17/notebook.ipynb", "trainings/log/detail/2022-01-17/notebook-wrapper.rst", "trainings/log/detail/2022-02-23/Notebook.ipynb", "trainings/log/detail/2022-02-23/index.rst", "trainings/log/detail/2022-02-23/notebook-wrapper.rst", "trainings/log/detail/2022-03-15/Notebook.ipynb", "trainings/log/detail/2022-03-15/index.rst", "trainings/log/detail/2022-03-15/notebook-wrapper.rst", "trainings/log/detail/2022-03-23/Notebook.ipynb", "trainings/log/detail/2022-03-23/index.rst", "trainings/log/detail/2022-03-23/notebook-wrapper.rst", "trainings/log/detail/2022-04-05/index.rst", "trainings/log/detail/2022-04-05/notebook.ipynb", "trainings/log/detail/2022-04-05/notebook-wrapper.rst", "trainings/log/detail/2022-04-25/index.rst", "trainings/log/detail/2022-04-25/notebook.ipynb", "trainings/log/detail/2022-04-25/notebook-wrapper.rst", "trainings/log/detail/2022-05-02/index.rst", "trainings/log/detail/2022-05-02/notebook.ipynb", "trainings/log/detail/2022-05-02/notebook-wrapper.rst", "trainings/log/detail/2022-05-16/index.rst", "trainings/log/detail/2022-05-16/notebook.ipynb", "trainings/log/detail/2022-05-16/notebook-wrapper.rst", "trainings/log/detail/2022-06-14/2022-05-11.rst", "trainings/log/detail/2022-06-14/index.rst", "trainings/log/detail/2022-07-26/index.rst", "trainings/log/detail/2022-10-03/index.rst", "trainings/log/detail/2022-10-11/index.rst", "trainings/log/detail/2022-10-24/index.rst", "trainings/log/detail/2022-11-07/index.rst", "trainings/log/detail/2022-11-07/notebook.ipynb", "trainings/log/detail/2022-11-07/notebook-wrapper.rst", "trainings/log/detail/2022-11-16/index.rst", "trainings/log/detail/2022-11-16/notebook.ipynb", "trainings/log/detail/2022-11-16/notebook-wrapper.rst", "trainings/log/detail/2023-01-23/index.rst", "trainings/log/detail/2023-02-13/index.rst", "trainings/log/detail/2023-03-13-Python-SAP/Demo/demo-notebook.ipynb", "trainings/log/detail/2023-03-13-Python-SAP/demo.rst", "trainings/log/detail/2023-03-13-Python-SAP/index.rst", "trainings/log/detail/2023-03-13-Python-SAP/notebook.ipynb", "trainings/log/detail/2023-03-13-Python-SAP/notebook-wrapper.rst", "trainings/log/detail/2023-03-13-Python-SAP/original-agenda.rst", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/index.rst", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/sap-dataset.ipynb", "trainings/log/detail/2023-03-20--C++-embedded/index.rst", "trainings/log/detail/2023-03-28--Python-Clean-Code/index.rst", "trainings/log/detail/2023-04-18--C++-embedded/index.rst", "trainings/log/detail/2023-04-24--Python-Advanced/agenda.rst", "trainings/log/detail/2023-04-24--Python-Advanced/index.rst", "trainings/log/detail/2023-04-24--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-04-24--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-05-15--Python-Basics/agenda.rst", "trainings/log/detail/2023-05-15--Python-Basics/index.rst", "trainings/log/detail/2023-05-15--Python-Basics/notebook.ipynb", "trainings/log/detail/2023-05-15--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/2023-05-23--Linux-Basics/agenda.rst", "trainings/log/detail/2023-05-23--Linux-Basics/index.rst", "trainings/log/detail/2023-06-20--Python-Basics/agenda.rst", "trainings/log/detail/2023-06-20--Python-Basics/index.rst", "trainings/log/detail/2023-06-20--Python-Basics/notebook.ipynb", "trainings/log/detail/2023-06-20--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/2023-07-03--CMake/agenda.rst", "trainings/log/detail/2023-07-03--CMake/index.rst", "trainings/log/detail/2023-09-25--Python-Advanced/index.rst", "trainings/log/detail/2023-09-25--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-09-25--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-10-09--Python-Advanced/index.rst", "trainings/log/detail/2023-10-09--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-10-09--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-10-24--Python-Advanced/agenda.rst", "trainings/log/detail/2023-10-24--Python-Advanced/index.rst", "trainings/log/detail/2023-10-24--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-10-24--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-11-22--Python-Advanced/agenda.rst", "trainings/log/detail/2023-11-22--Python-Advanced/index.rst", "trainings/log/detail/2023-11-22--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-11-22--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-11-27--CMake/agenda.rst", "trainings/log/detail/2023-11-27--CMake/index.rst", "trainings/log/detail/2023-11-29--Python-Basics/agenda.rst", "trainings/log/detail/2023-11-29--Python-Basics/index.rst", "trainings/log/detail/2023-11-29--Python-Basics/notebook.ipynb", "trainings/log/detail/2023-11-29--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/2023-12-04--C++-Advanced/agenda.rst", "trainings/log/detail/2023-12-04--C++-Advanced/index.rst", "trainings/log/detail/2023-12-18--Python-Basics/agenda.rst", "trainings/log/detail/2023-12-18--Python-Basics/index.rst", "trainings/log/detail/2023-12-18--Python-Basics/notebook.ipynb", "trainings/log/detail/2023-12-18--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/2023-XX-XX-C++-embedded/index.rst", "trainings/log/detail/2023-XX-XX-Python-SAP/index.rst", "trainings/log/detail/2024-01-15--Python-Advanced/agenda.rst", "trainings/log/detail/2024-01-15--Python-Advanced/index.rst", "trainings/log/detail/2024-01-15--Python-Advanced/notebook.ipynb", "trainings/log/detail/2024-01-15--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2024-01-29--Python-Basics/agenda.rst", "trainings/log/detail/2024-01-29--Python-Basics/index.rst", "trainings/log/detail/2024-01-29--Python-Basics/notebook.ipynb", "trainings/log/detail/2024-01-29--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/FH-ECE-19/EC1/2021-05-12/screenplay-checker.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-abc.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-oo.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-unittest.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/fh-group.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/file-read.rst", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-20-G2.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-21.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Checker-Explanations.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Datatypes.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Functions.ipynb", "trainings/log/detail/FH-ECE-19/EC1/cloud-computer.rst", "trainings/log/detail/FH-ECE-19/EC1/formales.rst", "trainings/log/detail/FH-ECE-19/EC1/index.rst", "trainings/log/detail/FH-ECE-19/EC1/log.rst", "trainings/log/detail/FH-ECE-19/EC1/lv-de.rst", "trainings/log/detail/FH-ECE-19/EC1/lv-en.rst", "trainings/log/detail/FH-ECE-19/EC1/plan.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-07.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-12.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-28.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-15.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-29.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-12-14.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-10.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-12.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-02-15.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/index.rst", "trainings/log/detail/FH-ECE-19/EC2/index.rst", "trainings/log/detail/FH-ECE-19/EC2/test-material.rst", "trainings/log/detail/FH-ECE-19/index.rst", "trainings/log/detail/index.rst", "trainings/log/index.rst", "trainings/material/index.rst", "trainings/material/soup/c/010-introduction/000-installation/topic.rst", "trainings/material/soup/c/010-introduction/010-introduction/topic.rst", "trainings/material/soup/c/010-introduction/020-getting-started/topic.rst", "trainings/material/soup/c/010-introduction/030-variables-and-arithmetic-expressions/topic.rst", "trainings/material/soup/c/010-introduction/040-exercise-fahrenheit-float/topic.rst", "trainings/material/soup/c/010-introduction/050-the-for-statement/topic.rst", "trainings/material/soup/c/010-introduction/060-exercise-fahrenheit-for/topic.rst", "trainings/material/soup/c/010-introduction/070-symbolic-constants/topic.rst", "trainings/material/soup/c/010-introduction/080-exercise-fahrenheit-cpp/topic.rst", "trainings/material/soup/c/010-introduction/090-character-input-and-output/topic.rst", "trainings/material/soup/c/010-introduction/100-exercise-wc/topic.rst", "trainings/material/soup/c/010-introduction/110-arrays/topic.rst", "trainings/material/soup/c/010-introduction/120-exercise-histogram/topic.rst", "trainings/material/soup/c/010-introduction/130-functions/topic.rst", "trainings/material/soup/c/010-introduction/140-exercise-power-declaration/topic.rst", "trainings/material/soup/c/010-introduction/150-character-arrays/topic.rst", "trainings/material/soup/c/010-introduction/160-exercise-string-read-line/topic.rst", "trainings/material/soup/c/010-introduction/170-external-variables-and-scope/topic.rst", "trainings/material/soup/c/010-introduction/group.rst", "trainings/material/soup/c/020-types-operators-expressions/010-introduction/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/020-variable-names/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/030-data-types-and-sizes/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/040-constants/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/050-declarations/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/060-arithmetic-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/070-relational-and-logical-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/080-type-conversions/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/090-increment-and-decrement-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/100-exercise-string-reduce/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/110-bitwise-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/120-assignment-operators-and-expressions/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/130-conditional-expressions/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/140-precedence-and-order-of-evaluation/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/group.rst", "trainings/material/soup/c/030-program-flow/010-statements-and-blocks/topic.rst", "trainings/material/soup/c/030-program-flow/020-if-else/topic.rst", "trainings/material/soup/c/030-program-flow/030-else-if/topic.rst", "trainings/material/soup/c/030-program-flow/040-switch/topic.rst", "trainings/material/soup/c/030-program-flow/050-loops-while-and-for/topic.rst", "trainings/material/soup/c/030-program-flow/060-loops-do-while/topic.rst", "trainings/material/soup/c/030-program-flow/070-break-and-continue/topic.rst", "trainings/material/soup/c/030-program-flow/080-goto-and-labels/topic.rst", "trainings/material/soup/c/030-program-flow/group.rst", "trainings/material/soup/c/040-functions-and-program-structure/010-basics-of-functions/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/020-external-variables/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/030-header-files/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/040-static-variables/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/050-c-preprocessor/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/060-c-preprocessor-advanced/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/group.rst", "trainings/material/soup/c/050-pointers-and-arrays/010-pointers-and-addresses/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/020-pointers-and-function-arguments/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/030-exercise-swap/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/040-pointers-and-arrays/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/050-command-line-arguments/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/group.rst", "trainings/material/soup/c/060-structures/010-basics-of-structures/topic.rst", "trainings/material/soup/c/060-structures/020-structures-and-functions/topic.rst", "trainings/material/soup/c/060-structures/030-typedef/topic.rst", "trainings/material/soup/c/060-structures/group.rst", "trainings/material/soup/c/070-memory/010-malloc/topic.rst", "trainings/material/soup/c/070-memory/020-exercise-linked-list/topic.rst", "trainings/material/soup/c/070-memory/group.rst", "trainings/material/soup/c/080-advanced-language-features/010-volatile/topic.rst", "trainings/material/soup/c/080-advanced-language-features/020-atomic/topic.rst", "trainings/material/soup/c/080-advanced-language-features/030-alignment/topic.rst", "trainings/material/soup/c/080-advanced-language-features/group.rst", "trainings/material/soup/c/090-program-sanity/010-introduction/topic.rst", "trainings/material/soup/c/090-program-sanity/020-integral-types/topic.rst", "trainings/material/soup/c/090-program-sanity/030-discrete-values/topic.rst", "trainings/material/soup/c/090-program-sanity/040-static/topic.rst", "trainings/material/soup/c/090-program-sanity/050-const/topic.rst", "trainings/material/soup/c/090-program-sanity/060-struct-initialization/topic.rst", "trainings/material/soup/c/090-program-sanity/070-explicit-type-safety/topic.rst", "trainings/material/soup/c/090-program-sanity/080-valgrind/topic.rst", "trainings/material/soup/c/090-program-sanity/group.rst", "trainings/material/soup/c/100-performance/010-introduction/topic.rst", "trainings/material/soup/c/100-performance/020-computebound/topic.rst", "trainings/material/soup/c/100-performance/030-memory/topic.rst", "trainings/material/soup/c/100-performance/group.rst", "trainings/material/soup/c/110-profiling/010-introduction/topic.rst", "trainings/material/soup/c/110-profiling/020-gprof/topic.rst", "trainings/material/soup/c/110-profiling/030-callgrind/topic.rst", "trainings/material/soup/c/110-profiling/040-oprofile/topic.rst", "trainings/material/soup/c/110-profiling/group.rst", "trainings/material/soup/c/group.rst", "trainings/material/soup/clean-code/book-messages.rst", "trainings/material/soup/clean-code/craft-sw.rst", "trainings/material/soup/clean-code/group.rst", "trainings/material/soup/clean-code/intro-python/livehacking.rst", "trainings/material/soup/cmake/basics.rst", "trainings/material/soup/cmake/configure_file.rst", "trainings/material/soup/cmake/cxx-and-rants.rst", "trainings/material/soup/cmake/external-dependencies.rst", "trainings/material/soup/cmake/group.rst", "trainings/material/soup/cmake/installation.rst", "trainings/material/soup/cmake/libraries.rst", "trainings/material/soup/cmake/optional-code-approach-1.rst", "trainings/material/soup/cmake/optional-code-approach-2.rst", "trainings/material/soup/cmake/optional-code-problem.rst", "trainings/material/soup/cmake/shared-libraries.rst", "trainings/material/soup/cmake/structure.rst", "trainings/material/soup/cmake/targets-properties.rst", "trainings/material/soup/cmake/testing.rst", "trainings/material/soup/cxx-code/index.rst", "trainings/material/soup/cxx-design-patterns/abstract-factory/abstract-factory.rst", "trainings/material/soup/cxx-design-patterns/adapter/adapter.rst", "trainings/material/soup/cxx-design-patterns/command/command.rst", "trainings/material/soup/cxx-design-patterns/command/socialdb.rst", "trainings/material/soup/cxx-design-patterns/composite/composite.rst", "trainings/material/soup/cxx-design-patterns/decorator/decorator.rst", "trainings/material/soup/cxx-design-patterns/group.rst", "trainings/material/soup/cxx-design-patterns/heating-screenplay/heating-screenplay.rst", "trainings/material/soup/cxx-design-patterns/interpreter/interpreter.rst", "trainings/material/soup/cxx-design-patterns/observer/observer.rst", "trainings/material/soup/cxx-design-patterns/oo-principles.rst", "trainings/material/soup/cxx-design-patterns/proxy/proxy.rst", "trainings/material/soup/cxx-design-patterns/sensor-hierarchy.rst", "trainings/material/soup/cxx-design-patterns/singleton/singleton.rst", "trainings/material/soup/cxx-design-patterns/uml/uml.rst", "trainings/material/soup/cxx-exercises/design-patterns/abstract-factory.rst", "trainings/material/soup/cxx-exercises/design-patterns/adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/command.rst", "trainings/material/soup/cxx-exercises/design-patterns/composite.rst", "trainings/material/soup/cxx-exercises/design-patterns/decorator.rst", "trainings/material/soup/cxx-exercises/design-patterns/group.rst", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-and-adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-basic.rst", "trainings/material/soup/cxx-exercises/design-patterns/observer.rst", "trainings/material/soup/cxx-exercises/design-patterns/proxy-remote.rst", "trainings/material/soup/cxx-exercises/design-patterns/proxy-round.rst", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible.rst", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible-strict.rst", "trainings/material/soup/cxx-exercises/design-patterns/singleton-inflexible.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/abstract-factory.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/command.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/composite.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/decorator.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/group.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-and-adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-basic.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/observer.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-remote.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-round.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible-strict.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-inflexible.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-loop-function.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-no-polymorphism.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-random-sensor.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/group.rst", "trainings/material/soup/cxx-exercises/group.rst", "trainings/material/soup/cxx-exercises/nopoly-display-led-stripe/display-led-stripe-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-hysteresis/hysteresis-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensor-avg/sensor-avg-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-const-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-mock-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-random-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-switch-mock/switch-mock-nopoly.rst", "trainings/material/soup/cxx-exercises/oo-shapes/shapes.rst", "trainings/material/soup/cxx-exercises/project-setup.rst", "trainings/material/soup/cxx-exercises/sensor-interface/sensor-interface.rst", "trainings/material/soup/cxx-exercises/sensor-w1-factory/sensor-w1-factory.rst", "trainings/material/soup/cxx-exercises/sensor-w1/sensor-w1.rst", "trainings/material/soup/cxx-exercises/stl/algo.rst", "trainings/material/soup/cxx-exercises/stl/filter-generic.rst", "trainings/material/soup/cxx-exercises/stl/filter-greater-10.rst", "trainings/material/soup/cxx-exercises/stl/filter-odd.rst", "trainings/material/soup/cxx-exercises/stl/group.rst", "trainings/material/soup/cxx-exercises/stl/map.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/group.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-no-overwrite.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-sunny.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-not-found.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-sunny.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/no-memleak.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-not-found.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-sunny.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/size-const.rst", "trainings/material/soup/cxx-exercises/stl/uniq.rst", "trainings/material/soup/cxx-exercises/stl/vector.rst", "trainings/material/soup/cxx-todo/index.rst", "trainings/material/soup/cxx/cxx_class_templates/code/index.rst", "trainings/material/soup/cxx/cxx_class_templates/screenplay.rst", "trainings/material/soup/cxx/cxx_class_templates/topic.rst", "trainings/material/soup/cxx/cxx_dynamic_memory/code/index.rst", "trainings/material/soup/cxx/cxx_dynamic_memory/screenplay.rst", "trainings/material/soup/cxx/cxx_dynamic_memory/topic.rst", "trainings/material/soup/cxx/cxx_global_initialization/code/index.rst", "trainings/material/soup/cxx/cxx_global_initialization/screenplay.rst", "trainings/material/soup/cxx/cxx_global_initialization/topic.rst", "trainings/material/soup/cxx/cxx_inheritance_virtual/code/index.rst", "trainings/material/soup/cxx/cxx_inheritance_virtual/screenplay.rst", "trainings/material/soup/cxx/cxx_inheritance_virtual/topic.rst", "trainings/material/soup/cxx/cxx_ownership_raii/code/index.rst", "trainings/material/soup/cxx/cxx_ownership_raii/screenplay.rst", "trainings/material/soup/cxx/cxx_ownership_raii/topic.rst", "trainings/material/soup/cxx/cxx_stl_container_intro/code/index.rst", "trainings/material/soup/cxx/cxx_stl_container_intro/screenplay.rst", "trainings/material/soup/cxx/cxx_stl_container_intro/topic.rst", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/code/index.rst", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/screenplay.rst", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/topic.rst", "trainings/material/soup/cxx/group.rst", "trainings/material/soup/cxx03/001-introduction/topic.rst", "trainings/material/soup/cxx03/020-data-encapsulation/c.rst", "trainings/material/soup/cxx03/020-data-encapsulation/copy-basics.rst", "trainings/material/soup/cxx03/020-data-encapsulation/cpp-introduction.rst", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-custom.rst", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-default.rst", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-dtor.rst", "trainings/material/soup/cxx03/020-data-encapsulation/group.rst", "trainings/material/soup/cxx03/020-data-encapsulation/initializer-list.rst", "trainings/material/soup/cxx03/020-data-encapsulation/object-copy.rst", "trainings/material/soup/cxx03/030-functions-and-methods/010-overloading/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/020-methods/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/030-const/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/040-this/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/050-references/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/060-static/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/065-static-member-variables/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/070-operators/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-cuboid.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point3d.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-rectangle.rst", "trainings/material/soup/cxx03/030-functions-and-methods/group.rst", "trainings/material/soup/cxx03/040-exceptions/010-basics/topic.rst", "trainings/material/soup/cxx03/040-exceptions/020-try-catch/topic.rst", "trainings/material/soup/cxx03/040-exceptions/group.rst", "trainings/material/soup/cxx03/050-templates/010-function-templates/topic.rst", "trainings/material/soup/cxx03/050-templates/020-class-templates/topic.rst", "trainings/material/soup/cxx03/050-templates/group.rst", "trainings/material/soup/cxx03/060-stl/010-basics/algo-copy.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-algo.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-basics.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-difference.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-out-of-range.rst", "trainings/material/soup/cxx03/060-stl/010-basics/topic.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/topic.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-and-copy.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-basic.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-pointer-arith.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/binary_search.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/copy.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/find.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/find_if.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/for_each.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/group.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/lower_bound.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse_copy.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/sort.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/basics.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/group.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/list.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/vector.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/basics.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/group.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-init-fill.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-insert.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-remove.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-search.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/multimap.rst", "trainings/material/soup/cxx03/060-stl/allocators/allocator_basics.rst", "trainings/material/soup/cxx03/060-stl/allocators/group.rst", "trainings/material/soup/cxx03/060-stl/exercises/group.rst", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/exercise.rst", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/group.rst", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/solution.rst", "trainings/material/soup/cxx03/060-stl/group.rst", "trainings/material/soup/cxx03/070-dynamic-memory/000-todo/topic.rst", "trainings/material/soup/cxx03/070-dynamic-memory/group.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/basics.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/destructor.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/group.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/interface.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/polymorphism.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/private-protected.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-destructor.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-method.rst", "trainings/material/soup/cxx03/900-standard-library-miscellanea/group.rst", "trainings/material/soup/cxx03/900-standard-library-miscellanea/string/topic.rst", "trainings/material/soup/cxx03/exercises-misc/american-flag/exercise.rst", "trainings/material/soup/cxx03/exercises-misc/fh-questions.rst", "trainings/material/soup/cxx03/exercises-misc/group.rst", "trainings/material/soup/cxx03/exercises-misc/sum-integers-from-stdin/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/group.rst", "trainings/material/soup/cxx03/exercises-userdb/user-access-methods/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-const-members/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-const/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-default-ctor/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-simple-method/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-to-cxx-ctor/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-insert/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-find_if/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-notfound-exception/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-search/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-vector/exercise.rst", "trainings/material/soup/cxx03/group.rst", "trainings/material/soup/cxx11/010-introduction/group.rst", "trainings/material/soup/cxx11/010-introduction/history.rst", "trainings/material/soup/cxx11/010-introduction/overview-livehacking.rst", "trainings/material/soup/cxx11/020-new-language-features/010-strongly-typed-enums/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/group.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/implementor-view.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/mess.rst", "trainings/material/soup/cxx11/020-new-language-features/050-delegating-ctor/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/055-constexpr/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/afterword.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/group.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-smartptr-move.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-string-move.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-using-string-move.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/overview.rst", "trainings/material/soup/cxx11/020-new-language-features/070-miscellaneous/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/auto.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/group.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-1-conceptless.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-2-conceptless-error.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-3-concept-integral.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/links.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-1-good-old-func.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-2-need-template.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-4-concept-has-size.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-5-concept-index-ret-double.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/group.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibo-generator.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibonacci.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-h.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-hello.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/simplest.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-iter.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-next.rst", "trainings/material/soup/cxx11/020-new-language-features/default.rst", "trainings/material/soup/cxx11/020-new-language-features/delete.rst", "trainings/material/soup/cxx11/020-new-language-features/final.rst", "trainings/material/soup/cxx11/020-new-language-features/group.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/group.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-capture.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor-pitfall.rst", "trainings/material/soup/cxx11/020-new-language-features/modules.rst", "trainings/material/soup/cxx11/020-new-language-features/override.rst", "trainings/material/soup/cxx11/020-new-language-features/range-based-for.rst", "trainings/material/soup/cxx11/020-new-language-features/range-based-for-map.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/good-bad.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/group.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/links.rst", "trainings/material/soup/cxx11/020-new-language-features/structured-binding.rst", "trainings/material/soup/cxx11/030-smart-pointers/040-closing-words/topic.rst", "trainings/material/soup/cxx11/030-smart-pointers/group.rst", "trainings/material/soup/cxx11/030-smart-pointers/introduction.rst", "trainings/material/soup/cxx11/030-smart-pointers/introduction-livehack.rst", "trainings/material/soup/cxx11/030-smart-pointers/sharedptr.rst", "trainings/material/soup/cxx11/030-smart-pointers/uniqueptr.rst", "trainings/material/soup/cxx11/030-smart-pointers/weakptr.rst", "trainings/material/soup/cxx11/035-perfect-forwarding/topic.rst", "trainings/material/soup/cxx11/040-bind-function/010-bind/topic.rst", "trainings/material/soup/cxx11/040-bind-function/020-function/topic.rst", "trainings/material/soup/cxx11/040-bind-function/group.rst", "trainings/material/soup/cxx11/050-multithreading/010-introduction/topic.rst", "trainings/material/soup/cxx11/050-multithreading/020-thread/topic.rst", "trainings/material/soup/cxx11/050-multithreading/030-race-conditions/topic.rst", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/atomics.rst", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/mutex.rst", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/scoped-locking.rst", "trainings/material/soup/cxx11/050-multithreading/condition-variable.rst", "trainings/material/soup/cxx11/050-multithreading/group.rst", "trainings/material/soup/cxx11/050-multithreading/promise-future.rst", "trainings/material/soup/cxx11/100-miscellaneous/010-chrono/topic.rst", "trainings/material/soup/cxx11/100-miscellaneous/any-variant-optional/variant.rst", "trainings/material/soup/cxx11/100-miscellaneous/group.rst", "trainings/material/soup/cxx11/drafts/crtp.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/allocator.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/classic-virtual.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/group.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/related-no-virtual.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/type-erasure.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/unrelated.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-automatic-visit.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-manual-if.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-manual-visit.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/why-replace-virtual.rst", "trainings/material/soup/cxx11/drafts/group.rst", "trainings/material/soup/cxx11/exercises/bag-copy.rst", "trainings/material/soup/cxx11/exercises/bag-shared.rst", "trainings/material/soup/cxx11/exercises/bag-unique.rst", "trainings/material/soup/cxx11/exercises/group.rst", "trainings/material/soup/cxx11/filesystem/topic.rst", "trainings/material/soup/cxx11/group.rst", "trainings/material/soup/graph.rst", "trainings/material/soup/index.rst", "trainings/material/soup/kernel/cdev-auto/screenplay.rst", "trainings/material/soup/kernel/cdev-auto/slides.rst", "trainings/material/soup/kernel/cdev-auto/topic.rst", "trainings/material/soup/kernel/cdev-file-operations/screenplay.rst", "trainings/material/soup/kernel/cdev-file-operations/slides.rst", "trainings/material/soup/kernel/cdev-file-operations/topic.rst", "trainings/material/soup/kernel/cdev-first-functionality/slides.rst", "trainings/material/soup/kernel/cdev-first-functionality/topic.rst", "trainings/material/soup/kernel/cdev-manual/screenplay.rst", "trainings/material/soup/kernel/cdev-manual/slides.rst", "trainings/material/soup/kernel/cdev-manual/topic.rst", "trainings/material/soup/kernel/cdev-multiple-devices/slides.rst", "trainings/material/soup/kernel/cdev-multiple-devices/topic.rst", "trainings/material/soup/kernel/cdev-refactoring/screenplay.rst", "trainings/material/soup/kernel/cdev-refactoring/slides.rst", "trainings/material/soup/kernel/cdev-refactoring/topic.rst", "trainings/material/soup/kernel/dma/slides.rst", "trainings/material/soup/kernel/dma/topic.rst", "trainings/material/soup/kernel/fedora-kernel-build/screenplay.rst", "trainings/material/soup/kernel/fedora-kernel-build/topic.rst", "trainings/material/soup/kernel/fedora-module-build/screenplay.rst", "trainings/material/soup/kernel/fedora-module-build/topic.rst", "trainings/material/soup/kernel/group.rst", "trainings/material/soup/kernel/hello-world/slides.rst", "trainings/material/soup/kernel/hello-world/topic.rst", "trainings/material/soup/kernel/interrupt-coding/slides.rst", "trainings/material/soup/kernel/interrupt-coding/topic.rst", "trainings/material/soup/kernel/interrupt/slides.rst", "trainings/material/soup/kernel/interrupt/topic.rst", "trainings/material/soup/kernel/iomemory/slides.rst", "trainings/material/soup/kernel/iomemory/topic.rst", "trainings/material/soup/kernel/kmalloc/slides.rst", "trainings/material/soup/kernel/kmalloc/topic.rst", "trainings/material/soup/kernel/list/slides.rst", "trainings/material/soup/kernel/list/topic.rst", "trainings/material/soup/kernel/mutex-coding/slides.rst", "trainings/material/soup/kernel/mutex-coding/topic.rst", "trainings/material/soup/kernel/mutex/slides.rst", "trainings/material/soup/kernel/mutex/topic.rst", "trainings/material/soup/kernel/netdev/slides.rst", "trainings/material/soup/kernel/netdev/topic.rst", "trainings/material/soup/kernel/pci/slides.rst", "trainings/material/soup/kernel/pci/topic.rst", "trainings/material/soup/kernel/process-vs-atomic/slides.rst", "trainings/material/soup/kernel/process-vs-atomic/topic.rst", "trainings/material/soup/kernel/raspi-kernel-build/story.rst", "trainings/material/soup/kernel/raspi-kernel-build/topic.rst", "trainings/material/soup/kernel/sample-project.rst", "trainings/material/soup/kernel/spinlock-coding/slides.rst", "trainings/material/soup/kernel/spinlock-coding/topic.rst", "trainings/material/soup/kernel/spinlock/slides.rst", "trainings/material/soup/kernel/spinlock/topic.rst", "trainings/material/soup/kernel/stub-sysprog-dup/topic.rst", "trainings/material/soup/kernel/time_timer-coding/slides.rst", "trainings/material/soup/kernel/time_timer-coding/topic.rst", "trainings/material/soup/kernel/time_timer/slides.rst", "trainings/material/soup/kernel/time_timer/topic.rst", "trainings/material/soup/kernel/todo.rst", "trainings/material/soup/kernel/usermem/screenplay.rst", "trainings/material/soup/kernel/usermem/slides.rst", "trainings/material/soup/kernel/usermem/topic.rst", "trainings/material/soup/kernel/waitqueue/screenplay.rst", "trainings/material/soup/kernel/waitqueue/slides.rst", "trainings/material/soup/kernel/waitqueue/topic.rst", "trainings/material/soup/kernel/workqueue/screenplay.rst", "trainings/material/soup/kernel/workqueue/slides.rst", "trainings/material/soup/kernel/workqueue/topic.rst", "trainings/material/soup/linux/basics/archiving-compression/exercises.rst", "trainings/material/soup/linux/basics/archiving-compression/group.rst", "trainings/material/soup/linux/basics/archiving-compression/gzip.rst", "trainings/material/soup/linux/basics/archiving-compression/overview.rst", "trainings/material/soup/linux/basics/archiving-compression/tar.rst", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G1.rst", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G2.rst", "trainings/material/soup/linux/basics/exercises/group.rst", "trainings/material/soup/linux/basics/group.rst", "trainings/material/soup/linux/basics/intro/demo-everything-is-a-file.rst", "trainings/material/soup/linux/basics/intro/environment.rst", "trainings/material/soup/linux/basics/intro/exercises/fh-questions.rst", "trainings/material/soup/linux/basics/intro/group.rst", "trainings/material/soup/linux/basics/intro/login.rst", "trainings/material/soup/linux/basics/intro/overview.rst", "trainings/material/soup/linux/basics/intro/process.rst", "trainings/material/soup/linux/basics/intro/process-tree.rst", "trainings/material/soup/linux/basics/intro/wsl.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/exercises.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/group.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection-swap-stdout-stderr.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/pipes.rst", "trainings/material/soup/linux/basics/permissions/basics.rst", "trainings/material/soup/linux/basics/permissions/exercises/credentials.rst", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions.rst", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions-nocheat.rst", "trainings/material/soup/linux/basics/permissions/exercises/group.rst", "trainings/material/soup/linux/basics/permissions/exercises/private-directory.rst", "trainings/material/soup/linux/basics/permissions/exercises/private-directory-question.rst", "trainings/material/soup/linux/basics/permissions/exercises/public-directory.rst", "trainings/material/soup/linux/basics/permissions/exercises/public-directory-question.rst", "trainings/material/soup/linux/basics/permissions/exercises/shared-file.rst", "trainings/material/soup/linux/basics/permissions/group.rst", "trainings/material/soup/linux/basics/permissions/setuid.rst", "trainings/material/soup/linux/basics/permissions/setuid-livedemo.rst", "trainings/material/soup/linux/basics/permissions/sticky.rst", "trainings/material/soup/linux/basics/permissions/umask.rst", "trainings/material/soup/linux/basics/shell/commandline.rst", "trainings/material/soup/linux/basics/shell/configfiles.rst", "trainings/material/soup/linux/basics/shell/cp.rst", "trainings/material/soup/linux/basics/shell/cwd.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/copy-tree.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-copy-files.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-create-files.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-move-files.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/group.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/mkdir-p-rm-r.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-rf.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-tree.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/verify-hierarchy.rst", "trainings/material/soup/linux/basics/shell/exercises/fh-questions.rst", "trainings/material/soup/linux/basics/shell/exercises/group.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/dev-types.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/etc-passwd-size.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/group.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/home-permissions.rst", "trainings/material/soup/linux/basics/shell/file_dir_create_rm.rst", "trainings/material/soup/linux/basics/shell/group.rst", "trainings/material/soup/linux/basics/shell/links.rst", "trainings/material/soup/linux/basics/shell/ls.rst", "trainings/material/soup/linux/basics/shell/mv.rst", "trainings/material/soup/linux/basics/shell/paths.rst", "trainings/material/soup/linux/basics/text-tools/cat.rst", "trainings/material/soup/linux/basics/text-tools/cut.rst", "trainings/material/soup/linux/basics/text-tools/exercises.rst", "trainings/material/soup/linux/basics/text-tools/find.rst", "trainings/material/soup/linux/basics/text-tools/grep.rst", "trainings/material/soup/linux/basics/text-tools/group.rst", "trainings/material/soup/linux/basics/text-tools/head-tail.rst", "trainings/material/soup/linux/basics/text-tools/less.rst", "trainings/material/soup/linux/basics/text-tools/overview.rst", "trainings/material/soup/linux/drafts/group.rst", "trainings/material/soup/linux/drafts/yocto.rst", "trainings/material/soup/linux/group.rst", "trainings/material/soup/linux/hardware/brushless-motor/topic.rst", "trainings/material/soup/linux/hardware/can/10-intro.rst", "trainings/material/soup/linux/hardware/can/20-interfaces.rst", "trainings/material/soup/linux/hardware/can/30-programming.rst", "trainings/material/soup/linux/hardware/can/40-harware.rst", "trainings/material/soup/linux/hardware/can/group.rst", "trainings/material/soup/linux/hardware/group.rst", "trainings/material/soup/linux/hardware/i2c/topic.rst", "trainings/material/soup/linux/hardware/pwm/topic.rst", "trainings/material/soup/linux/hardware/w1/topic.rst", "trainings/material/soup/linux/ssh/basics.rst", "trainings/material/soup/linux/ssh/exercises/copy-file.rst", "trainings/material/soup/linux/ssh/exercises/copy-tree.rst", "trainings/material/soup/linux/ssh/exercises/group.rst", "trainings/material/soup/linux/ssh/exercises/pubkey.rst", "trainings/material/soup/linux/ssh/group.rst", "trainings/material/soup/linux/ssh/key-pair.rst", "trainings/material/soup/linux/ssh/links.rst", "trainings/material/soup/linux/ssh/portforwarding.rst", "trainings/material/soup/linux/ssh/scp.rst", "trainings/material/soup/linux/ssh/sshfs.rst", "trainings/material/soup/linux/sysprog/basics/errorhandling.rst", "trainings/material/soup/linux/sysprog/basics/group.rst", "trainings/material/soup/linux/sysprog/basics/syscalls.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-file.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-network.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-timer.rst", "trainings/material/soup/linux/sysprog/blocking-io/group.rst", "trainings/material/soup/linux/sysprog/file-io/basics.rst", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-copy.rst", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-hole.rst", "trainings/material/soup/linux/sysprog/file-io/duplicate.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_CREAT.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_EXCL.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_RDONLY.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_WRONLY.rst", "trainings/material/soup/linux/sysprog/file-io/exercise-sensor-read.rst", "trainings/material/soup/linux/sysprog/file-io/group.rst", "trainings/material/soup/linux/sysprog/file-io/misc.rst", "trainings/material/soup/linux/sysprog/group.rst", "trainings/material/soup/linux/sysprog/intro-hw/get.rst", "trainings/material/soup/linux/sysprog/intro-hw/group.rst", "trainings/material/soup/linux/sysprog/intro-hw/sysfs-gpio.rst", "trainings/material/soup/linux/sysprog/intro-hw/watch.rst", "trainings/material/soup/linux/sysprog/posix-threads/010-introduction/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/020-lifecycle/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/030-exercise-pthcreate-race-condition/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/040-mutex/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/050-exercise-mutex/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/060-condition-variable/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/070-exercise-condition-variable/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/080-miscellaneous/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/090-last-warning/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/group.rst", "trainings/material/soup/linux/sysprog/posix-threads/locked-trylock.rst", "trainings/material/soup/linux/sysprog/process/commandline.rst", "trainings/material/soup/linux/sysprog/process/group.rst", "trainings/material/soup/linux/sysprog/process/tree.rst", "trainings/material/soup/linux/sysprog/scheduling/basics.rst", "trainings/material/soup/linux/sysprog/scheduling/group.rst", "trainings/material/soup/linux/sysprog/scheduling/processes-and-threads.rst", "trainings/material/soup/linux/sysprog/scheduling/questions.rst", "trainings/material/soup/linux/sysprog/scheduling/realtime.rst", "trainings/material/soup/linux/sysprog/scheduling/realtime-api.rst", "trainings/material/soup/linux/sysprog/scheduling/wakup-latency.rst", "trainings/material/soup/linux/sysprog/sysprog_events/code/index.rst", "trainings/material/soup/linux/sysprog/sysprog_events/screenplay.rst", "trainings/material/soup/linux/sysprog/sysprog_events/topic.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/code/index.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/screenplay.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/slides.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/topic.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/code/index.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/screenplay.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/slides.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/topic.rst", "trainings/material/soup/linux/toolchain/basics/topic.rst", "trainings/material/soup/linux/toolchain/cmake/cross.rst", "trainings/material/soup/linux/toolchain/cmake/local.rst", "trainings/material/soup/linux/toolchain/cross/basics.rst", "trainings/material/soup/linux/toolchain/cross/group.rst", "trainings/material/soup/linux/toolchain/exercises/cross-build.rst", "trainings/material/soup/linux/toolchain/exercises/fh-2022-questions.rst", "trainings/material/soup/linux/toolchain/exercises/group.rst", "trainings/material/soup/linux/toolchain/exercises/native-build.rst", "trainings/material/soup/linux/toolchain/exercises/raspberry-toolchain.rst", "trainings/material/soup/linux/toolchain/group.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/group.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/linaro.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-details.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-docker-fedora.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-setup.rst", "trainings/material/soup/linux/toolchain/separate-compilation/topic.rst", "trainings/material/soup/linux/toolchain/shared-libraries/topic.rst", "trainings/material/soup/linux/toolchain/static-library/topic.rst", "trainings/material/soup/python/advanced/closures/topic.rst", "trainings/material/soup/python/advanced/comprehensions/topic.rst", "trainings/material/soup/python/advanced/context-mgr/topic.rst", "trainings/material/soup/python/advanced/decorators/topic.rst", "trainings/material/soup/python/advanced/exceptions/topic.rst", "trainings/material/soup/python/advanced/exec/topic.rst", "trainings/material/soup/python/advanced/group.rst", "trainings/material/soup/python/advanced/iteration-generation/iteration-generation/topic.rst", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/fibonacci-generator.rst", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/iterator-protocol.rst", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/topic.rst", "trainings/material/soup/python/advanced/iteration-generation/topic.rst", "trainings/material/soup/python/advanced/modules.rst", "trainings/material/soup/python/advanced/multithreading/basics.rst", "trainings/material/soup/python/advanced/multithreading/group.rst", "trainings/material/soup/python/advanced/multithreading/mutex.rst", "trainings/material/soup/python/advanced/multithreading/questions.rst", "trainings/material/soup/python/advanced/oo/abc/topic.rst", "trainings/material/soup/python/advanced/oo/classes-and-dicts/topic.rst", "trainings/material/soup/python/advanced/oo/constructor/topic.rst", "trainings/material/soup/python/advanced/oo/group.rst", "trainings/material/soup/python/advanced/oo/inheritance/topic.rst", "trainings/material/soup/python/advanced/oo/methods/topic.rst", "trainings/material/soup/python/advanced/oo/namedtuple/topic.rst", "trainings/material/soup/python/advanced/oo/operator-overloading/topic.rst", "trainings/material/soup/python/advanced/oo/properties/topic.rst", "trainings/material/soup/python/advanced/oo/str-repr/topic.rst", "trainings/material/soup/python/advanced/starargs/topic.rst", "trainings/material/soup/python/basics/group.rst", "trainings/material/soup/python/basics/installation.rst", "trainings/material/soup/python/basics/python_0110_blahblah/topic.rst", "trainings/material/soup/python/basics/python_0120_helloworld/topic.rst", "trainings/material/soup/python/basics/python_0125_running/topic.rst", "trainings/material/soup/python/basics/python_0130_syntax_etc/topic.rst", "trainings/material/soup/python/basics/python_0139_commandline_argv/topic.rst", "trainings/material/soup/python/basics/python_0140_variables/topic.rst", "trainings/material/soup/python/basics/python_0150_datatypes_overview/topic.rst", "trainings/material/soup/python/basics/python_0150_datatypes_overview_compound/topic.rst", "trainings/material/soup/python/basics/python_0160_boolean/topic.rst", "trainings/material/soup/python/basics/python_0170_if/topic.rst", "trainings/material/soup/python/basics/python_0193_while/topic.rst", "trainings/material/soup/python/basics/python_0200_sequential_types/topic.rst", "trainings/material/soup/python/basics/python_0210_indexing_slicing/topic.rst", "trainings/material/soup/python/basics/python_0220_for/topic.rst", "trainings/material/soup/python/basics/python_0225_range/topic.rst", "trainings/material/soup/python/basics/python_0250_refs_flat_deep_copy/topic.rst", "trainings/material/soup/python/basics/python_0270_functions/screenplay-scoping.rst", "trainings/material/soup/python/basics/python_0270_functions/slideshow.rst", "trainings/material/soup/python/basics/python_0270_functions/topic.rst", "trainings/material/soup/python/basics/python_0300_strings/topic.rst", "trainings/material/soup/python/basics/python_0310_strings_formatting/topic.rst", "trainings/material/soup/python/basics/python_0320_strings_methods/topic.rst", "trainings/material/soup/python/basics/python_0400_lists/topic.rst", "trainings/material/soup/python/basics/python_0450_dictionaries/topic.rst", "trainings/material/soup/python/basics/python_0460_sets/topic.rst", "trainings/material/soup/python/basics/python_0500_files/topic.rst", "trainings/material/soup/python/basics/python_1000_function_objects/topic.rst", "trainings/material/soup/python/drafts/argparse/topic.rst", "trainings/material/soup/python/drafts/group.rst", "trainings/material/soup/python/drafts/matplotlib/topic.rst", "trainings/material/soup/python/drafts/setuptools/topic.rst", "trainings/material/soup/python/exercises/csv/csv-db.rst", "trainings/material/soup/python/exercises/csv/csv-module.rst", "trainings/material/soup/python/exercises/csv/group.rst", "trainings/material/soup/python/exercises/group.rst", "trainings/material/soup/python/exercises/herdt/boolean.rst", "trainings/material/soup/python/exercises/herdt/exercise_while_even_numbers.rst", "trainings/material/soup/python/exercises/herdt/greet.rst", "trainings/material/soup/python/exercises/herdt/group.rst", "trainings/material/soup/python/exercises/herdt/max_numbers.rst", "trainings/material/soup/python/exercises/herdt/swap.rst", "trainings/material/soup/python/exercises/herdt/username_password.rst", "trainings/material/soup/python/exercises/legacy/cmdline_digit.rst", "trainings/material/soup/python/exercises/legacy/dict_keyerror.rst", "trainings/material/soup/python/exercises/legacy/distill.rst", "trainings/material/soup/python/exercises/legacy/fibonacci-generator.rst", "trainings/material/soup/python/exercises/legacy/for_primeness.rst", "trainings/material/soup/python/exercises/legacy/group.rst", "trainings/material/soup/python/exercises/legacy/join_function.rst", "trainings/material/soup/python/exercises/legacy/max_numbers.rst", "trainings/material/soup/python/exercises/legacy/max_numbers_function.rst", "trainings/material/soup/python/exercises/legacy/mixed_list_executable.rst", "trainings/material/soup/python/exercises/legacy/mixed_list_interactive.rst", "trainings/material/soup/python/exercises/legacy/passwd.rst", "trainings/material/soup/python/exercises/legacy/primeness_function.rst", "trainings/material/soup/python/exercises/legacy/revert.rst", "trainings/material/soup/python/exercises/legacy/string-rightjustify.rst", "trainings/material/soup/python/exercises/legacy/uniq_function.rst", "trainings/material/soup/python/exercises/legacy/uniq_generator.rst", "trainings/material/soup/python/exercises/legacy/wc.rst", "trainings/material/soup/python/exercises/legacy/while_primeness.rst", "trainings/material/soup/python/exercises/sensors/group.rst", "trainings/material/soup/python/exercises/sensors/project-setup.rst", "trainings/material/soup/python/exercises/sensors/sensor-const.rst", "trainings/material/soup/python/exercises/userdb/csvdictreader.rst", "trainings/material/soup/python/exercises/userdb/csvdictreader-function.rst", "trainings/material/soup/python/exercises/userdb/csvreader.rst", "trainings/material/soup/python/exercises/userdb/csvreader-function.rst", "trainings/material/soup/python/exercises/userdb/group.rst", "trainings/material/soup/python/exercises/userdb/mqtt-publish-csv.rst", "trainings/material/soup/python/exercises/userdb/user-class-person.rst", "trainings/material/soup/python/exercises/userdb/user_json.rst", "trainings/material/soup/python/exercises/userdb/userdb_csv.rst", "trainings/material/soup/python/graph.rst", "trainings/material/soup/python/group.rst", "trainings/material/soup/python/link-collection.rst", "trainings/material/soup/python/misc/ai/group.rst", "trainings/material/soup/python/misc/ai/k-means.rst", "trainings/material/soup/python/misc/ai/linear-regression/code.rst", "trainings/material/soup/python/misc/ai/linear-regression/history_data.rst", "trainings/material/soup/python/misc/ai/linear-regression/linear_regression.ipynb", "trainings/material/soup/python/misc/ai/linear-regression/topic.rst", "trainings/material/soup/python/misc/ai/machine-learning-intro.rst", "trainings/material/soup/python/misc/csv/topic.rst", "trainings/material/soup/python/misc/db/dbapi2.rst", "trainings/material/soup/python/misc/db/group.rst", "trainings/material/soup/python/misc/db/postgres.rst", "trainings/material/soup/python/misc/db/sqlite3.rst", "trainings/material/soup/python/misc/encoding/topic.rst", "trainings/material/soup/python/misc/group.rst", "trainings/material/soup/python/misc/import.rst", "trainings/material/soup/python/misc/mqtt/topic.rst", "trainings/material/soup/python/misc/pandas/add_row.rst", "trainings/material/soup/python/misc/pandas/basics.rst", "trainings/material/soup/python/misc/pandas/filters.rst", "trainings/material/soup/python/misc/pandas/group.rst", "trainings/material/soup/python/misc/pandas/iloc.rst", "trainings/material/soup/python/misc/pandas/indexes.rst", "trainings/material/soup/python/misc/pandas/loc.rst", "trainings/material/soup/python/misc/pandas/mod_col.rst", "trainings/material/soup/python/misc/python_5550_xml_etree/topic.rst", "trainings/material/soup/python/misc/vscode.rst", "trainings/material/soup/python/swdev/group.rst", "trainings/material/soup/python/swdev/pip/screenplay.rst", "trainings/material/soup/python/swdev/pip/slides.rst", "trainings/material/soup/python/swdev/pip/topic.rst", "trainings/material/soup/python/swdev/pypi.rst", "trainings/material/soup/python/swdev/pytest/group.rst", "trainings/material/soup/python/swdev/pytest/intro.rst", "trainings/material/soup/python/swdev/unittest.rst", "trainings/material/soup/python/swdev/venv/screenplay.rst", "trainings/material/soup/python/swdev/venv/slides.rst", "trainings/material/soup/python/swdev/venv/topic.rst", "trainings/material/soup/unittest/group.rst", "trainings/material/soup/unittest/unittest_gtest_basics/code/index.rst", "trainings/material/soup/unittest/unittest_gtest_basics/screenplay.rst", "trainings/material/soup/unittest/unittest_gtest_basics/topic.rst", "trainings/material/soup/unittest/unittest_gtest_cmake/screenplay.rst", "trainings/material/soup/unittest/unittest_gtest_cmake/topic.rst", "trainings/material/soup/unittest/unittest_gtest_fixture/code/index.rst", "trainings/material/soup/unittest/unittest_gtest_fixture/screenplay.rst", "trainings/material/soup/unittest/unittest_gtest_fixture/topic.rst", "trainings/org.rst", "trainings/repertoire/_hidden/kettner-lfs-2013-09-16.rst", "trainings/repertoire/bash.rst", "trainings/repertoire/c-like/c.rst", "trainings/repertoire/c-like/c-advanced.rst", "trainings/repertoire/c-like/cxx.rst", "trainings/repertoire/c-like/cxx11.rst", "trainings/repertoire/c-like/index.rst", "trainings/repertoire/cmake.rst", "trainings/repertoire/design-patterns/design-patterns.rst", "trainings/repertoire/embedded.rst", "trainings/repertoire/kernel-programming-basics.rst", "trainings/repertoire/linux-basics.rst", "trainings/repertoire/make.rst", "trainings/repertoire/python/advanced.rst", "trainings/repertoire/python/basics.rst", "trainings/repertoire/python/herdt.rst", "trainings/repertoire/raspi-hands-on.rst", "trainings/repertoire/svn.rst", "trainings/repertoire/sysprog/basics.rst", "trainings/repertoire/sysprog/fortgeschrittenes.rst", "trainings/repertoire/sysprog/index.rst", "trainings/repertoire/sysprog/multithreading.rst", "trainings/repertoire/sysprog/network.rst", "trainings/repertoire/unittests.rst"], "titles": ["Kontakt", "Curriculum Vitae", "\u00dcber Mich", "Projekte", "Skills", "Angebot: In-House Schulungen", "Course Material", "Einleitung", "Python Basics (2021-xx-xx - 2021-yy-yy)", "Programmierung Grundlagen (Jupyter Notebook)", "Details", "Course List", "Templates for Course Descriptions", "About This Site", "OpenTraining", "Draft Topics", "Miscellaneous", "S5 Integration", "S5 Slide Tests", "Level 1 Heading", "Screencasts", "Topics to be Written", "Netidee F\u00f6rderantrag", "Netidee F\u00f6rderantrag: OpenTraining", "Video Screenplay", "Use Case: Custom Training, Subtract Known", "Use Case: Calculate Minimum Training Duration", "Use Cases", "Use Case: Use Training Material From Other Sites", "Use Case: Menu to Choose From", "Use Case: Slide Show Material as Plain-Text Files", "Sending A V4L Camera Device Output Over SSH", "Emoji Codes (<code class=\"docutils literal notranslate\"><span class=\"pre\">sphinxemoji</span></code>)", "Recipes", "<code class=\"docutils literal notranslate\"><span class=\"pre\">isoamsa.txt</span></code>: Added Mathematical Symbols: Arrows", "<code class=\"docutils literal notranslate\"><span class=\"pre\">isoamsr.txt</span></code>: Added Mathematical Symbols: Relations", "<code class=\"docutils literal notranslate\"><span class=\"pre\">isonum.txt</span></code>: Added Mathematical Symbols: Binary Operators", "Layout Test Page", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mmlalias.txt</span></code>: MathML aliases for entities from other sets", "reStructuredText Cheat Sheet", "Sphinxish", "Seminar on \u201cClean Code\u201d (2022-04-13)", "Live Hacking Before (Formal) Unit Testing", "Clean Code: Messages From The Book", "Live Hacking: Switch To <code class=\"docutils literal notranslate\"><span class=\"pre\">googletest</span></code>", "Is Software A Craft? Software Is A Craft!", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB::find()</span></code> Crashes If User Not Found", "Bugs", "Existing Files Are Overwritten", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB::read()</span></code>: What If Done Twice?", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB</span></code>: Alternative Output Format - CSV", "Features", "Search By Other Indexes", "Backlog: What Needs To Change, Or We Will All Die", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BackingStore</span></code> Has Too Many Responsibilities \u27f6 Interface", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB</span></code> Has Too Many Responsibilities \u27f6 <code class=\"docutils literal notranslate\"><span class=\"pre\">BackingStore</span></code>", "Refactoring", "Load From BackingStore in Constructor", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB::{read,write}()</span></code>: <code class=\"docutils literal notranslate\"><span class=\"pre\">bool</span></code>, Really?", "Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "Installation Notes", "Submission: Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "Screenplay: Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "GLT 2023 Submission: Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "Pointless Blinking: Evolution", "GLT 2024 Submission: Pointless Blinking: Evolution", "Talk Sketch: Pointless Blinking: Evolution", "Pointless Blinking", "Hochk\u00f6nig", "Blog", "Sphinx", "C++", "C++: Building with CMake", "C++: Interfaces", "C++: OO Basics", "C++: Unit Testing", "Graph", "Embedded Computing 1", "Embedded Computing 2", "EX: Race Conditions", "EX: Avoiding Race Condition", "Git Introduction", "Embedded Computing (STECE-2019)", "Linux", "Introduction to Linux and Unix", "Linux Hardware Device Management", "EX: Averaging Sensor", "EX: Averaging Sensor (parallel)", "EX: LED Temperature Display", "EX: Temperature Sensors", "GPIO", "Multithreading", "Avoiding Race Conditions: Semaphore/Mutex", "Communication: Waiting for Something", "Python Basics", "EX: Averaging Sensor, Display", "EX: Temperature Sensors", "Simple Web Programming", "Sensors Web Pages", "Python", "Embedded Computing STECE-2020)", "SS2022", "2022-03-08", "2022-03-10", "2022-03-10 (Homework until 2022-03-21)", "2022-03-21", "2022-03-22, 2022-03-24 (KU)", "2022-03-28", "2022-04-01", "SS2022: Logs", "WS2022", "FH Joanneum (Embedded Computing): WS2022/2023 (Questions About Code)", "FH Joanneum (Embedded Computing): WS2022/2023 (Yes/No Questions)", "Lab Exam 2023-01-17", "SS2023: Exam 2023-06-30 (Handout)", "SS2023: Exam 2023-06-30 (Solved)", "Exam: Embedded Computing 2 (2024-01-26)", "Exam: Embedded Computing 2 (2024-02-02)", "WS2023/2024: Exam 2024-02-02 (Sample)", "Exam WS2023/2024", "Questions 2024", "<code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code> Objects", "Parameter Passing", "SOLID: Hysteresis With Display", "SOLID: Sensor Has ID", "To Be Or Not To Be Virtual", "Working with Git In Our <code class=\"docutils literal notranslate\"><span class=\"pre\">FH-ECE21</span></code> Project", "Embedded Computing (STECE-2021)", "SS2023", "(DONE) Boiling Pot (The Beginning)", "Boiling Pot: Basic Integration", "Boiling Pot: Display, And Status Reporting", "Boiling Pot: Full Integration (Display And IoT)", "(DONE) Data Logger", "Data Logger: CSV Sink", "Data Logger: Integration", "Data Logger: MQTT Sink", "Display Interface/Infrastructure", "WS2023/24: Group Project - Tasks", "<code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> Switch", "Python MQTT Subscriber", "Temperature Display: LED Via A PWM Controller", "(DONE) Sensor Interface", "(DONE) Onewire Sensor", "(DONE) Switch Interface", "SysFS GPIO Switch", "WS2023/24", "Embedded Computing (STECE-2022)", "Embedded Computing 1 (STECE-2022): Summer", "Embedded Computing 1 (STECE-2022): Material", "Embedded Computing 1 (STECE-2022): Syllabus", "Embedded Computing (FH Joanneum Graz)", "Git Notes", "Work in Progress", "Packaging this Site on PyPI", "Audio Chip Bringup", "Get Debian 10 Kernel Config", "Finish: Debian Kernel Package etc.", "Yocto Kernel Bringup on Customer Hardware", "I2S Audio for a Kontron SMARC Module", "Dirty Upgrade Path", "Wait for Customer Hardware", "Extract Kernel from Intel Yocto BSP", "Python Training Improvements", "Creating Screencasts", "SEO", "Stacks (Hanging)", "Miscellaneous To Do", "Learning The Web", "Beagleboard: How to Repair NAND (also known as 40W)", "Porting to Linux (There\u2019s Always A Better Way)", "Saving Solid State Disk Life (Gentoo)", "\u201cWhy <code class=\"docutils literal notranslate\"><span class=\"pre\">ps</span></code> Sucks\u201d or \u201cCounting Memory Consumption\u201d", "Patching and Building the Fedora Kernel", "Adding a Custom Domain to a Github Pages Project Site", "Using Microsoft Teams on Linux", "Deploying Sphinx Generated Documentation to Github Pages", "Using BigBlueButton for Online Training", "Traunstein via Zierlersteig", "Grintovec (via Plan\u0161arsko Jezero, \u010ce\u0161ka Ko\u010da)", "How to Brick a \u20ac1399 Dell XPS 13", "Building A Cross Toolchain For The Raspberry Pi, Using <code class=\"docutils literal notranslate\"><span class=\"pre\">crosstool-ng</span></code>", "Posts", "Linux und Open Source", "Richtlinien zur Ver\u00f6ffentlichung von Kursmaterial", "Exercises", "Courses: Overview", "Qualivision, Z\u00fcrich, 1.10.2013", "Kursnotizen: Linux Embedded 2015-11-30", "Live Hacking", "Python Individualtraining (5 Tage, beginnend 28.10.2019)", "Goals of this Training", "Random Live Hacking", "Python (12.11.2019 - 14.11.2019 in Graz)", "Proposal", "IPC in Linux (10.1.2020 in Graz)", "\u00dcbung: handgestrickter String, um die Fallen von C++ lustvoll zu erleiden", "C++ f\u00fcr Embedded C Programmierer (30.3.2020 - 3.4.2020 Baden W\u00fcrttemberg)", "Installing <code class=\"docutils literal notranslate\"><span class=\"pre\">googletest</span></code> By Hand", "Software Setup, Build", "Argh: Using This Site With Visual Studio Code", "Code", "Python Grundlagen (13.5.2020 - 14.5.2020 bei einer Firma in Graz)", "Python Schulung 18. und 19.5.2020", "Code", "Python Individualtraining (18.5.2020 - 19.5.2020)", "Python Advanced (7.9.2020 - 10.9.2020)", "Python Basics (28.9.2020 - 30.9.2020)", "Iterables", "Python Basic and Advanced (19.10.2020 - 22.10.2020)", "Linux on Raspberry Pi", "Python Basics (23.11.2020 - 25.11.2020)", "Linux Basics (30.11.2020 - 3.12.2020)", "6 Grundlegende Sprachelemente", "Programmierung Grundlagen (13. und 14.1.2021)", "Programmierung Grundlagen (Jupyter Notebook)", "Python Basics (22.2.2021 - 24.2.2021)", "Linux Kernel Driver Development Basics (14.12.2020)", "Python Advanced", "2021-03-15", "Hallo Jupyter Notebook", "Python Basic and Advanced (22.3.2021 - 25.3.2021)", "Linux Basics, Shell Scripting (2021-03-29)", "Einleitung", "Programmierung Grundlagen (12. und 13.4.2021)", "Programmierung Grundlagen (Jupyter Notebook)", "Syntax etc.", "Python Grundlagen (2021-05-03 - 2021-05-05)", "Python Grundlagen (Jupyter Notebook)", "Das <code class=\"docutils literal notranslate\"><span class=\"pre\">with</span></code> Statement", "Python Advanced (2021-05-25 - 2021-05-27)", "Programmieren mit C (2021-06-14 - 2021-06-18)", "The C++ Programming Language (2021-07-12 - 2021-07-16)", "Programmierung Grundlagen, anhand von Python (2. und 3.8.2021)", "Datenstrukturen", "Compound Datatypes", "Read a Cleaned-Up SAP Export", "Python Grundlagen (2021-08-23 - 2021-08-25)", "Jupyter Notebook", "Initial Terminology", "Python Basics (2021-08-31 - 2021-09-01)", "Python Grundlagen (Jupyter Notebook)", "2021-11-17", "Python Basics (2021-11-17 - 2021-11-19)", "Python Grundlagen (Jupyter Notebook)", "Notebook", "Python Advanced (2021-12-01 - 2021-12-03)", "Python Grundlagen (Jupyter Notebook)", "C/C++ Programming (2021-12-06 - 2021-12-10, 2022-01-24 - 2022-02-04)", "Programmierung Grundlagen, anhand von Python (2022-01-17 - 2022-01-10)", "2022-01-17", "Programmierung Grundlagen (Jupyter Notebook)", "Datatypes", "Python Basics (2022-02-23 - 2022-02-25)", "Jupyter Notebook", "Wiederholung", "Python Advanced (2022-03-15 - 2022-03-17, 2022-03-31)", "Jupyter Notebook", "Hello World", "Python (2022-03-23, 2022-03-30, 2022-04-19 - 2022-03-21)", "Jupyter Notebook", "Programmierung Grundlagen, anhand von Python (2022-04-05 - 2022-04-08)", "BlahBlah", "Programmierung Grundlagen (Jupyter Notebook)", "Python Basics (2022-04-25 - 2022-04-27)", "BlahBlah", "Python Grundlagen (Jupyter Notebook)", "Python (2022-05-02 - 2022-05-05)", "Hello Jupyter Notebook", "Python Grundlagen (Jupyter Notebook)", "Python Advanced (2022-05-16 - 2022-05-18)", "Assert", "Python Grundlagen (Jupyter Notebook)", "Vorbesprechung 2022-05-11", "C++: A New Language Starting In 2011", "C++: A New Language Starting In 2011", "Linux Basics (2022-10-03 - 2022-10-05)", "C++: A New Language Starting In 2011 (2022-10-11 - 2022-10-13)", "Design- and Architectural Patterns With C++ (2022-10-24 - 2022-10-26)", "Python: Tour-De-Force (2022-11-07 - 2022-11-10, 2022-12-01)", "Python (2022-10-17)", "Python Grundlagen (Jupyter Notebook)", "Python (2022-11-16 - 2022-11-18)", "Python (2022-11-16 - 2022-11-18)", "Python Grundlagen (Jupyter Notebook)", "Linux Basics (2023-01-23 - 2023-01-26)", "Embedded Linux Systems Programming (2023-02-13 - 2023-02-17)", "Whetting Your Appetite (Jupyter Notebook)", "Whetting Your Appetite (Livehacking Demo)", "Python For SAP Developers (2023-03-13 - 2023-03-15)", "2023-03-13", "Python For SAP Developers (Jupyter Notebook)", "Original Agenda: Python For SAP Developers (2023-03-13 - 2023-03-15)", "Hacking About On A SAP Test Dataset", "Some Usecases On A Test Dataset From SAP", "C++ For Embedded Developers (2023-03-20 - 2023-03-23)", "Clean Code Development With Python (2023-03-28 - 2023-03-29)", "C++ For Embedded Developers (2023-04-18 - 2023-04-20)", "Agenda: Python Advanced (2023-04-24 - 2023-04-26)", "Python Advanced (2023-04-24 - 2023-04-26)", "Jupyter Notebook: Python Advanced (2023-04-24 - 2023-04-26)", "Jupyter Notebook (Structure): Python Advanced (2023-04-24 - 2023-04-26)", "Agenda: Python Basics (2023-05-15 - 2023-05-17)", "Python Basics (2023-05-15 - 2023-05-17)", "Python Basics (2023-05-15 - 2023-05-17)", "Python Grundlagen (Jupyter Notebook)", "Agenda: Linux Basics (2023-05-23 - 2023-05-25)", "Linux Basics (2023-05-23 - 2023-05-25)", "Agenda: Python Basics (2023-06-20 - 2023-06-22)", "Python Basics (2023-06-20 - 2023-06-22)", "Python Basics (2023-06-20 - 2023-06-22)", "Python Basics (Jupyter Notebook)", "Agenda: CMake (2023-07-03)", "CMake: An Introduction (2023-07-18)", "Python Advanced (2023-09-25 - 2023-09-27)", "Python Advanced (2023-09-25 - 2023-09-27)", "Python Advanced, Jupyter Notebook (2023-09-25 - 2023-09-27)", "Python Advanced (2023-10-09 - 2023-10-11)", "Python Advanced (2023-10-09 - 2023-10-09)", "Python Advanced, Jupyter Notebook (2023-09-25 - 2023-09-27)", "Agenda: Python Advanced (2023-10-24 - 2023-10-26)", "Python Advanced (2023-10-24 - 2023-10-26)", "Jupyter Notebook: Python Advanced", "Jupyter Notebook (Structure): Python Advanced (2023-10-24 - 2023-10-26)", "Agenda: Python Advanced (2023-11-22 - 2023-11-24)", "Python Advanced (2023-11-22 - 2023-22-24)", "Jupyter Notebook: Python Advanced (2023-11-22 - 2023-11-24)", "Jupyter Notebook (Structure): Python Advanced (2023-11-22 - 2023-11-24)", "Agenda: CMake (2023-11-27)", "CMake: An Introduction (2023-11-27)", "Agenda: Python Basics (2023-11-29 - 2023-12-01)", "Python Basics (2023-11-29 - 2023-12-01)", "Python Basics (2023-11-29 - 2023-12-01)", "Python Basics (Jupyter Notebook)", "Agenda: C++: Advanced Topics", "C++: Advanced Topics (2023-12-04 - 2023-12-06)", "Agenda: Python Basics (2023-12-18 - 2023-12-20)", "Python Basics (2023-12-18 - 2023-12-20)", "Python Basics (2023-12-18 - 2023-12-20)", "Python Basics (2023-12-18 - 2023-12-20)", "C++ For Embedded Developers (Beginning of 2023)", "Python/SAP", "Agenda: Python Advanced (2024-01-15 - 2024-01-17)", "Python Advanced (2024-01-15 - 2024-01-17)", "Python Advanced (2023-01-15 - 2024-01-17)", "Python Advanced (2024-01-15 - 2024-01-17)", "Agenda: Python Basics (2024-01-29 - 2024-01-31)", "Python Basics (2024-01-29 - 2024-01-31)", "Python Basics (2024-01-29 - 2024-01-31)", "Jupyter Notebook: Python Basics (2024-01-29 - 2024-01-31)", "Screenplay Checker", "GPIO: Blinklicht", "GPIO: Blinklicht Interface", "GPIO: Object Oriented Blinklicht", "GPIO: Blinklicht Unittests", "ECE19: Exercises and Custom Topics", "Reading a File", "2021-05-20 (G2)", "2021-05-21", "Tuple Unpacking", "Basics", "An Example", "Cloud Computer, SSH Login", "Formalit\u00e4ten", "Embedded Computing 1 (ECE 19)", "Daily Log", "Embedded Computing 1 (Deutsch)", "Embedded Computing 1 (English)", "Plan for Summer 2021", "2021-10-07", "2021-10-12 (Bringing Newcomers Up-to-Date)", "2021-10-28", "2021-11-15", "2021-11-29", "2021-12-1{4,5}", "2022-01-10", "2022-01-12", "2022-02-15", "Agenda/Log", "Embedded Computing 2 (ECE 19)", "Exam Material Overview", "Embedded Computing 1+2, ECE 19", "Details", "Bisher Gehaltene", "Training Material: Overview and Download", "Installation", "Introduction", "Hello World", "Variables and Arithmetic", "Exercise: A Better Fahrenheit Table", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> Loops", "Exercise: Fahrenheit Table Using <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code>", "Symbolic Constants", "Exercise: Fahrenheit Table Using Macros", "Character I/O", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">wc</span></code> For The Poor", "Arrays", "Exercise: Character Histogram", "Functions", "Exercise: Forward Declaration", "Character Arrays", "Exercise: Read Line Into String from <code class=\"docutils literal notranslate\"><span class=\"pre\">stdin</span></code>", "Lifetime of Variables", "Introduction", "Type System", "Variable Names", "Data Types, Sizes", "Constants", "Variable Definitions", "Arithmetic Operators", "Relational and Logical Operators", "Type Conversions", "Increment, Decrement", "Exercise: Copy and Reduce String", "Bit-Operators", "Assignment with Calculation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">?:</span></code> - Conditional Expression", "Precedence, Associativity", "Types, Operators, Expressions", "Statements and Blocks", "<code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code> - <code class=\"docutils literal notranslate\"><span class=\"pre\">else</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">else</span></code> - <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">switch</span></code>", "Loops: <code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code>", "Loops: <code class=\"docutils literal notranslate\"><span class=\"pre\">do</span> <span class=\"pre\">-</span> <span class=\"pre\">while</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">break</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">continue</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">goto</span></code> and Labels", "Program Flow", "Basics", "Extern/Global Variables", "Header Files", "Static Variables", "C Preprocessor: Basics", "C Preprocessor: More", "Functions and Program Structure", "Pointers and Addresses", "Pointers as Function Parameters", "Exercise: Function That Swaps Two Variables", "Pointers and Arrays", "Commandline Arguments", "Pointers and Arrays", "<code class=\"docutils literal notranslate\"><span class=\"pre\">struct</span></code>: Basics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">struct</span></code>: Functions", "<code class=\"docutils literal notranslate\"><span class=\"pre\">typedef</span></code>: Type Alias", "Structures", "Dynamic Memory", "Singly Linked List", "Memory", "Volatile", "Compiler Intrinsics", "Alignment", "Advanced Language Features", "Sanity and Readabilty", "Know Your Integers", "Discrete Values - <code class=\"docutils literal notranslate\"><span class=\"pre\">enum</span></code>", "Visibility - <code class=\"docutils literal notranslate\"><span class=\"pre\">static</span></code>", "Correctness - <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "Struct Initialization", "Explict Type Safety", "<code class=\"docutils literal notranslate\"><span class=\"pre\">valgrind</span></code>", "Program Sanity", "Optimization", "Optimizations: Compute Bound Code", "Optimizations: Memory Optimizations", "Performance", "Introduction", "GNU Profiler - <code class=\"docutils literal notranslate\"><span class=\"pre\">gprof</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">callgrind</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">oprofile</span></code>", "Profiling", "The C Programming Language", "Messages From The Book", "What\u2019s There? What Have We Accomplished?", "Is Software A Craft? Software Is A Craft! \u27f6 <em>Clean Code</em>", "A Typical Project (Livehacking Screenplay: My Own Bookkeeping Effort)", "Basics: Boilerplate, And Executables", "\u201cConfigured\u201d Header Files", "C++, Debug/Release, CMake \u201cProgramming\u201d, Rants", "External Dependencies", "CMake: An Introduction", "Installation (\u201cDeployment\u201d)", "Libraries, And <em>Dependencies</em>", "Optional Code, Approach 1: Optional <code class=\"docutils literal notranslate\"><span class=\"pre\">blacklist</span></code>, C Macro  (Global Flags)", "Optional Code, Approach 2: Pushing Optionality Down In Module <em>Interface</em>", "Optional Code: Problem Definition, <code class=\"docutils literal notranslate\"><span class=\"pre\">OPTION()</span></code>", "Shared Libraries (Preview)", "Structure - Subdirectories, Dependencies, and Include Paths", "Targets, Properties, And More", "Running Tests", "C++ Code", "Abstract Factory", "Adapter", "Command", "SocialDB Source Code", "Composite", "Decorator", "Design Patterns With C++", "Case Study/Livehacking: Heating Control (Reading Sensors)", "Interpreter", "Observer", "OO Design Principles", "Proxy", "Exercise Foundation: <code class=\"docutils literal notranslate\"><span class=\"pre\">Sensor</span></code> Hierarchy", "Singleton", "UML Short Introduction", "Exercise: Abstract Factory", "Exercise: Adapter", "Exercise: Command", "Exercise: Composite", "Exercise: Decorator", "Exercises: Design Patterns", "Exercise: Interpreter Combined With Adapter (And A Proxy)", "Exercise: Arithmetic Expression Interpreter", "Exercise: Adapter", "Exercise: Proxy (Remote Thermometer)", "Exercise: Proxy (Rounding Thermometer)", "Exercise: Singleton (Flexible)", "Exercise: Singleton (Flexible <em>And</em> Strict)", "Exercise: Singleton (Inflexible)", "Solution: Abstract Factory", "Solution: Adapter", "Solution: Command", "Solution: Composite", "Solution: Decorator", "Solutions", "Solution: Interpreter Combined With Adapter (And A Proxy)", "Solution: Arithmetic Expression Interpreter", "Solution: Observer", "Solution: Proxy (Remote Thermometer)", "Solution: Proxy (Rounding Thermometer)", "Solution: Singleton (Flexible)", "Solution: Singleton (Flexible <em>And</em> Strict)", "Solution: Singleton (Inflexible)", "Exercise (FH): Introducing a Sensor Class", "Exercise (FH): Extract Measurement Loop Into Function", "Exercise (FH): Replace Sensor", "Exercise (FH): Write A Sensor Class: <code class=\"docutils literal notranslate\"><span class=\"pre\">RandomSensor</span></code>", "FH Sensor OO (First Try)", "C++ Exercises", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">LEDStripeDisplay_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">Hysteresis_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">AveragingSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">ConstantSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">MockSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">RandomSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: Mocking Switch (Non-Polymorphic)", "OO Basics, Interfaces (Shapes)", "Working On Exercise Projects", "Exercise: Sensor Interface", "Exercise: OneWire Sensor Factory", "Exercise: OneWire Sensor Class", "Exercise: Algorithms", "Exercise: Generic Filter", "Exercise: Filter Elements Greater Than 10", "Exercise: Filter Odd Elements", "C++ Exercises: Standard Template Library", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::map&lt;&gt;</span></code>", "Exercises: Sensor Repository (<code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code>)", "Insert - Not Overwriting Existing Elements", "Insert - Sunny Case", "Lookup - Not Found", "Lookup - Sunny Case", "Memory Leaks?", "Remove - Not Found", "Remove - Sunny Case", "<code class=\"docutils literal notranslate\"><span class=\"pre\">.size()</span></code> Is <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "Exercise: Uniquify A Sequence", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector&lt;&gt;</span></code>", "C++: TODO List", "Code: C++: Class Templates", "Screenplay: C++: Class Templates", "C++: Class Templates", "Code: C++: Dynamic Memory", "Screenplay: C++: Dynamic Memory", "C++: Dynamic Memory", "Code: C++: Global Objects Initialization", "Screenplay: C++: Global Objects Initialization", "C++: Global Objects Initialization", "Code: C++: Inheritance, Interfaces, <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>", "Screenplay: C++: Inheritance, Interfaces, <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>", "C++: Inheritance, Interfaces, <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>", "Code: C++: Ownership/RAII", "Screenplay: C++: Ownership/RAII", "C++: Ownership/RAII", "Code: C++: STL Containers (Intro)", "Screenplay: C++: STL Containers (Intro)", "C++: STL Containers (Intro)", "Code: C++: Templates vs. Interfaces", "Screenplay: C++: Templates vs. Interfaces", "C++: Templates vs. Interfaces", "C++: Miscellaneous Live-Hacking", "Introduction", "Object Oriented Programming In Good Ol\u2019 C", "Copy Constructor, Assignment Operator", "Classes and Objects", "Custom Constructor", "Default Constructor", "More Constructors, Destructors", "Data Encapsulation", "Constructors: Member Initialization", "Object Copy (And Resource Management): There Be Dragons", "Overloading", "Methods", "<code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">this</span></code>", "References", "<code class=\"docutils literal notranslate\"><span class=\"pre\">static</span></code> Methods", "<code class=\"docutils literal notranslate\"><span class=\"pre\">static</span></code> Member Variables", "Operator Overloading", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">cuboid</span></code>", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">point</span></code>", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">point3d</span></code>", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">rectangle</span></code>", "Functions and Methods", "Basics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">try</span></code> - <code class=\"docutils literal notranslate\"><span class=\"pre\">catch</span></code>", "Exceptions", "Function Templates", "Class Templates", "C++ Template Basics", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::copy&lt;&gt;()</span></code> From <code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;algorithm&gt;</span></code>", "Screenplay: Pointer Arithmetic, And Algorithms", "Screenplay: Pointer Arithmetic Basics", "Screenplay: Pointer Difference", "Screenplay: Out Of Range Errors", "Standard Template Library: Basics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code> (And <code class=\"docutils literal notranslate\"><span class=\"pre\">std::copy()</span></code>)", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">std::copy()</span></code>", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code> Basics", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code>, And Pointer Arithmetics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">binary_search&lt;&gt;</span></code>: On Sorted Sequence", "<code class=\"docutils literal notranslate\"><span class=\"pre\">copy&lt;&gt;</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find&lt;&gt;</span></code>: Sequential Search, by Equality", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find_if&lt;&gt;</span></code>: Sequential Search, Customizable", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for_each&lt;&gt;</span></code>", "Algorithms", "<code class=\"docutils literal notranslate\"><span class=\"pre\">lower_bound&lt;&gt;</span></code>: On Sorted Sequence", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reverse&lt;&gt;</span></code>: Reversing In-Place", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reverse_copy&lt;&gt;</span></code>: Copying <em>and</em> Reversing", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sort&lt;&gt;</span></code>", "Sequential Containers", "Sequential Containers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">list&lt;&gt;</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">vector&lt;&gt;</span></code>", "Associative Containers", "Associative Containers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code>", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code> Initialization And Inserting", "Screenplay: Inserting Elements", "Screenplay: Removing (Erasing) Elements", "Screenplay: Searching", "<code class=\"docutils literal notranslate\"><span class=\"pre\">multimap&lt;&gt;</span></code>", "Allocator Basics", "Allocators", "STL: Exercises", "Exercise: Reverse a String", "Exercise: Reverse A String", "Solution: Reverse a String", "Standard Template Library", "Dynamic Memory (To Be Done)", "Dynamic Memory Allocation, Resource Management", "Inheritance Basics", "Destructors And Inheritance", "Inheritance And Object Oriented Design", "C++ \u201cInterfaces\u201d", "<em>Polymorphic</em> Usage Of Objects", "Inheritance: <code class=\"docutils literal notranslate\"><span class=\"pre\">private</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">protected</span></code> (Implementation Inheritance)", "Virtual Destructors", "Virtual Methods", "The Standard Library: Miscellaneous Topics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::string</span></code>", "Exercise: Paint the American Flag Onto Standard Output", "FH/Moodle Quiz: C++", "Exercises: Miscellaneous", "Exercise: Sum of Integers Coming From <code class=\"docutils literal notranslate\"><span class=\"pre\">cin</span></code>", "Exercises: User Database", "Exercise: Access Methods for Members", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code> Members", "Exercise: Use <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "Exercise: Default Constructor (was: Arrays of Objects)", "Exercise: Simple Method (Users Age By <code class=\"docutils literal notranslate\"><span class=\"pre\">n</span></code> Years)", "Exercise: Transform <code class=\"docutils literal notranslate\"><span class=\"pre\">struct</span> <span class=\"pre\">User</span></code> Into A Class", "Exercise: Insert a User into UserDB", "Exercise: Search a User By Lastname (<code class=\"docutils literal notranslate\"><span class=\"pre\">std::find_if</span></code>)", "Exercise: Search, \u201cUser Not Found\u201d Exception", "Exercise: Search a User By Lastname", "Exercise: Use std::vector in UserDB", "C++", "Introduction", "History, Background", "A Live-Hacked Tour Around The New C++", "Strongly Typed <code class=\"docutils literal notranslate\"><span class=\"pre\">enum</span></code>", "Brace Initialization (Uniform Initialization)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::initializer_list</span></code>: Brace Initialization, Implementor\u2019s View", "Brace Initialization: Introduction", "Brace Initialization: A Mess", "Delegating Constructor", "<code class=\"docutils literal notranslate\"><span class=\"pre\">constexpr</span></code>", "Afterword, Further Reading", "Move Semantics, Rvalue References", "<code class=\"docutils literal notranslate\"><span class=\"pre\">SmartPtr</span></code> With Move Semantics", "Implementing Move Semantics (<code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">String</span></code>, Live Hacked)", "Using Move Semantics In Own Code", "Lvalues, Rvalues, And Moving", "Miscellaneous", "Duck Typing (Err, <code class=\"docutils literal notranslate\"><span class=\"pre\">auto</span></code>) Without A Duck", "Concepts", "Concepts: Overview", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toolcase-1-conceptless.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toolcase-2-conceptless-error.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toolcase-3-concept-integral.cpp</span></code>", "Concepts: Links", "Writing Your Own Concepts", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-1-good-old-func.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-2-need-template.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-4-concept-has-size.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-5-concept-index-ret-double.cpp</span></code>", "Coroutines", "Coroutines: An Overview", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fibo-generator.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fibonacci.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">generator.h</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">generator-hello.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">simplest.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">suspend.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">suspend-iter.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">suspend-next.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">=</span> <span class=\"pre\">default</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">=</span> <span class=\"pre\">delete</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">final</span></code>", "New Language Features", "Lambda", "Lambda", "Lambda: More Capturing", "Live Hacking: Handwritten Functors (Too Much Boilerplate)", "Live Hacking: Handwritten Functors, And Capturing By Reference (Pitfalls)", "Modules", "<code class=\"docutils literal notranslate\"><span class=\"pre\">override</span></code>", "Range Based <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> Loops: Introduction", "Case Study: Range Based <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> On <code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code>", "Ranges And Views: Good Or Bad?", "Ranges", "Ranges: Overview", "Ranges And Views: Links", "Tuple Unpacking (Err, Structured Binding)", "Smart Pointers: Closing Words", "Smart Pointers (<code class=\"docutils literal notranslate\"><span class=\"pre\">std::unique_ptr</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">std::shared_ptr</span></code>)", "Introduction", "(Trying To) Handwrite A Smart Pointer Class in C++ Before C++11", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::shared_ptr</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::unique_ptr</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::weak_ptr</span></code>", "Perfect Forwarding", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::bind</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::function</span></code>", "Functions, Functions", "Threads Introduction", "Threads in C++", "Race Conditions", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::atomic</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::mutex</span></code> And Friends", "Scoped Locking", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::condition_variable</span></code> (Live Hacking Multithreaded Queue)", "Multithreading", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::promise</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">std::future</span></code> (And Some <code class=\"docutils literal notranslate\"><span class=\"pre\">std::chrono</span></code>) (Some Live Hacking)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::chrono</span></code>", "New-Style Union: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::variant</span></code>", "Miscellaneous", "CRTP", "std::vector&lt;&gt;: Allocators (<em>Very</em> Incomplete)", "Classic Virtual", "Embedded Problems? Code Bloat? Type Erasure? Solutions?", "Non-Virtual, But Related", "Type Erasure (Static vs. Dynamic Polymorphism), CRTP", "Unrelated (Duck-Typed)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::variant</span></code> (Automatic Virtual Dispatch Using Template Method)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::variant</span></code> (Manual Virtual Dispatch, Using <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code>)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::variant</span></code> (Manual Virtual Dispatch, Using <code class=\"docutils literal notranslate\"><span class=\"pre\">std::visit</span></code>)", "Why Replace <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>?", "Drafts", "Exercise: Bag Of Items, By Copy", "Exercise: Bag Of Items, By Shared Reference", "Exercise: Bag Of Items, By Unique Reference", "Exercises", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::filesystem</span></code>", "The New C++ (11-\u2026)", "Generated Topic Graph", "Topics", "Modern Character Devices (Screenplay)", "Modern Character Devices (Slideshow)", "Modern Character Devices", "File Operations on Character Devices (Screenplay)", "File Operations on Character Devices (Slideshow)", "File Operations on Character Devices", "Coding: First Functionality (Slideshow)", "Coding: First Functionality", "Character Device Basics (Livehacking Screenplay)", "Character Device Basics (Slideshow)", "Character Device Basics", "Coding: Multiple Devices (Slideshow)", "Coding: Multiple Devices", "Coding: Refactoring (Screenplay)", "Coding: Refactoring (Slideshow)", "Coding: Refactoring", "DMA (Slideshow)", "DMA", "Building a Fedora Kernel (Screenplay)", "Fedora: Building the Kernel", "Fedora: Building External Kernel Modules (Screenplay)", "Fedora: Building External Kernel Modules", "Linux Kernel Driver Development", "Module Loading, Hello World (Slideshow)", "Module Loading, Hello World", "Coding: Raspi GPIO Interrupts (Slideshow)", "Coding: Raspi GPIO Interrupts", "Interrupts (Slideshow)", "Interrupts", "IO Memory (Slideshow)", "IO Memory", "Dynamic Memory: <code class=\"docutils literal notranslate\"><span class=\"pre\">kmalloc()</span></code> (Slideshow)", "Dynamic Memory: <code class=\"docutils literal notranslate\"><span class=\"pre\">kmalloc()</span></code>", "Doubly Linked Lists (Slideshow)", "Doubly Linked Lists", "Coding: Fix Race Condition (Mutex) (Slideshow)", "Coding: Fix Race Condition (Mutex)", "Mutex (and RT Mutex) (Slideshow)", "Mutex (and RT Mutex)", "Network Devices (Slideshow)", "Network Devices", "PCI (Slideshow)", "PCI", "Process vs.Atomic Context (Slideshow)", "Process vs.Atomic Context", "Rasperry Pi: Kernel Build", "Raspberry Pi: Building the Kernel", "Sample Code Maintenance", "Coding: Fix <em>Sleep While Atomic</em> (Slideshow)", "Coding: Fix <em>Sleep While Atomic</em>", "Spinlock (vs. Mutex) (Slideshow)", "Spinlock (vs. Mutex)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">dup()</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">fork()</span></code>, and Reference Counting (Stub)", "Coding: Timed Event (Slideshow)", "Coding: Timed Event", "Timer Management (Slideshow)", "Timer Management", "To Do List", "Accessing Userspace Memory (Screenplay)", "Accessing Userspace Memory (Slideshow)", "Accessing Userspace Memory", "Waiting for Something (Screenplay)", "Waiting for Something (Slideshow)", "Waiting for Something", "Workqueue (Screenplay)", "Workqueue (Slideshow)", "Workqueue", "Exercises: Archiving And Compression", "Archiving and Compression", "<code class=\"docutils literal notranslate\"><span class=\"pre\">gzip</span></code>", "Archiving and Compression", "<code class=\"docutils literal notranslate\"><span class=\"pre\">tar</span></code>", "Exam (ECE/SS2022/G1): Do A Lot With Files And Directories", "Exam (ECE/SS2022/G2): Do A Lot With Files And Directories", "Exercises/Exams: Linux Basics", "Linux Basics", "Everything Is A File (Live Demo)", "Environment (Variables)", "FH/Moodle Quiz: Linux Basics", "Introduction: Concepts and Terminology", "Login? What Is That?", "Overview", "Processes, Scheduling, Address Spaces", "Process Hierarchy (Parent, Child Process)", "Windows Subsystem for Linux (WSL)", "Exercises: IO-Redirection, Pipes", "I/O Redirection And Pipes", "I/O Redirection", "I/O Redirection: Swap <code class=\"docutils literal notranslate\"><span class=\"pre\">stdout</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">stderr</span></code>", "Pipes", "Permissions: Mode, User and Group Ownership", "Exercise: Determine Your User Credentials", "FH/Moodle Quiz: Permissions", "FH/Moodle Quiz: Permissions", "Exercises: File System Permissions", "Exercise: Create Private Directory", "Question: Private Directory", "Exercise: Create Public Directory", "Question: Public Directory", "Exercise: Create Group-Shared File", "File System Permissions", "SetUID Programs: <code class=\"docutils literal notranslate\"><span class=\"pre\">passwd</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">sudo</span></code>, \u2026", "SetUID: Live Demo", "Ugly Hack: Sticky Bit", "Default Permissions: <code class=\"docutils literal notranslate\"><span class=\"pre\">umask</span></code>", "Commandline", "Shell Configuration File: <code class=\"docutils literal notranslate\"><span class=\"pre\">~/.bashrc</span></code>", "Copying: <code class=\"docutils literal notranslate\"><span class=\"pre\">cp</span></code>", "Current Working Directory", "Exercise: Copy Directory Tree", "Exercise: Copy Files", "Exercise: Create Files (I/O Redirection)", "Exercise: Move Files", "Exercises: Create/Copy/Move/Remove", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">mkdir</span></code>", "Exercise: Funny Stuff", "Exercise: Remove Directory Tree", "Exercise: Verify, Repeat", "FH/Moodle Quiz: Shell", "The Shell - Exercises", "Exercise: File Types in <code class=\"docutils literal notranslate\"><span class=\"pre\">/dev</span></code>", "Exercise: Size of <code class=\"docutils literal notranslate\"><span class=\"pre\">/etc/passwd</span></code>", "Exercises: The <code class=\"docutils literal notranslate\"><span class=\"pre\">ls</span></code> Command", "Exercise: Permissions of Home Directory", "Creating And Removing Files and Directories", "The Shell (Bash - \u201cBourne Again Shell\u201d)", "Symbolic Links, Hard Links", "Directory Listings: The <code class=\"docutils literal notranslate\"><span class=\"pre\">ls</span></code> Command", "Moving and Renaming: <code class=\"docutils literal notranslate\"><span class=\"pre\">mv</span></code>", "Absolute and Relative Paths", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cat</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cut</span></code>", "Exercises: Inspecting Text Files", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">grep</span></code>", "Tools: Inspecting Text Files", "<code class=\"docutils literal notranslate\"><span class=\"pre\">head</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">tail</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">less</span></code>", "Overview", "Drafts", "Yocto", "Linux", "Controlling a Brushless Motor With Raspberry Pi", "CAN/Linux Basics", "CAN Interfaces", "Programming", "Hardware, Kernel", "CAN Bus With Linux And Python", "Linux Hardware Interfaces", "Linux and I2C (using LM73 Temperature Sensor as Slave)", "PWM Userspace Interface (using PCA9685)", "Linux and OneWire (using DS18B20 Temperature Sensor as Slave)", "SSH: Basics", "Exercise: Copy a File To Remote Machine, And Verify", "Exercise: Copy a Tree To Remote Machine (And Adjust Permissions)", "Exercises: SSH", "Exercise: Create SSH Key Pair", "SSH: Secure Shell", "SSH: Public Key Authentication", "SSH: Links", "SSH: Port Forwarding", "SSH: Secure Copy (<code class=\"docutils literal notranslate\"><span class=\"pre\">scp</span></code>)", "SSH File System (<code class=\"docutils literal notranslate\"><span class=\"pre\">sshfs</span></code>)", "Error Handling", "Linux Systems Programming: Basics", "System Calls vs. Library Functions", "Blocking I/O: What is That? (\u201cEverything is a file\u201d)", "Blocking I/O (On A File): What is That?", "Blocking I/O: On A Network Socket", "Blocking I/O: On A Timer? WTF?", "Blocking I/O: What Is That?", "File I/O: Basics", "Exercise: Copy A File", "Exercise: Create File With Hole", "Duplicating (Whats Going On?)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_CREAT</span></code>: Creating A File", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_EXCL</span></code>: Creating A File, But Failing If It Already Exists", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_RDONLY</span></code>: Reading a File", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_WRONLY</span></code>: Writing A File (Which Must Exist)", "Exercise: Read Temperature From Onewire Sensor", "File I/O", "Miscellaneous", "Linux Systems Programming", "Get Value Of GPIO", "Introductory Live Hacking, Hardware-Wise (<code class=\"docutils literal notranslate\"><span class=\"pre\">sysfs</span></code> GPIO)", "Intro: <code class=\"docutils literal notranslate\"><span class=\"pre\">sysfs</span></code> GPIO", "Interrupts In Userspace", "Basics", "Thread Life Cycle", "Thread Creation, Race Condition", "Synchronization", "Mutex: Solve Load/Modify/Store Conflict", "Communication: Condition Variable", "Condition Variable: Message Queue", "Miscellaneous", "Last Warning", "POSIX Threads", "Trylock/islocked", "Process: Arguments, Exit Status", "Processes", "The Process Tree (And Environment, And <code class=\"docutils literal notranslate\"><span class=\"pre\">procfs</span></code>)", "Scheduling (and Multitasking)", "Scheduling", "Tasks? Processes? Threads?", "Scheduling: Exam Questions", "Realtime", "Realtime API", "Wakeup Latency, CPU Frequency (Gotcha)", "Code: Sysprog: Event Driven Programming", "Screenplay: Sysprog: POSIX IPC", "Sysprog: Events", "Code: Sysprog: POSIX IPC", "Screenplay: Sysprog: POSIX IPC", "Slides: Sysprog: POSIX IPC", "Sysprog: POSIX IPC", "Code: Sysprog: Signals", "Screenplay: Sysprog: Signals", "Slides: Sysprog: Signals", "Sysprog: Signals", "Toolchain: Basics", "CMake: Cross Build", "CMake: Local Build", "Cross Development", "Cross Development", "Exercise: Build Software Package (Cross, Raspberry)", "FH/Moodle Quiz: Toolchain", "Exercises: Toolchain", "Exercise: Build Software Package (Native)", "Exercise: Install And Check Raspberry Toolchain", "Toolchain, And Cross Development", "Case Study: Raspberry Toolchain", "Linaro Toolchain For The Pi (Defunct)", "Building A Cross Toolchain For The Raspberry Pi, Using <code class=\"docutils literal notranslate\"><span class=\"pre\">crosstool-ng</span></code>", "Building A Toolchain <em>On</em> Fedora <em>For</em> Ubuntu 18.04 (WSL)", "Cross Toolchain Setup", "Zooming In: Separate Compilation, and Linking <em>Statically</em>", "Shared Libraries (Shared Objects)", "Object Code Archives/Static Libraries", "Closures", "Comprehensions (List, Dictionary, Set)", "Context Managers: The <code class=\"docutils literal notranslate\"><span class=\"pre\">with</span></code> Statement", "Decorators", "Exception Handling", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">exec()</span></code> Function", "Python: More Language Features", "Iteration, Comprehensions, and Generators", "Implementing A Fibonacci Number Generator", "The Iterator Protocol", "Iteration, Generators, And <code class=\"docutils literal notranslate\"><span class=\"pre\">yield</span></code>", "Iterating Intelligently: Generators, and the Iterator Protocol", "Modules and Packages", "Multithreading (Python)", "Multithreading", "Race Conditions, and Mutexes", "Multithreading: Exam Questions", "Abstract Base Classes (<code class=\"docutils literal notranslate\"><span class=\"pre\">abc</span></code>), And Duck Typing", "Classes And Dictionaries", "Constructor", "Object Oriented Programming", "Inheritance", "Methods", "<code class=\"docutils literal notranslate\"><span class=\"pre\">collections.namedtuple</span></code>", "Operator Overloading", "Properties", "<code class=\"docutils literal notranslate\"><span class=\"pre\">str()</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">repr()</span></code>", "Positional and Keyword Arguments", "Python: The Language Fundamentals", "Python Installation", "Blahblah", "Hello World", "Running Python Programs", "Syntax etc.", "Commandline Arguments (<code class=\"docutils literal notranslate\"><span class=\"pre\">sys.argv</span></code>)", "Variables", "Datatypes", "Compound Datatypes", "Boolean", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code> Statement", "<code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code> Loops", "Sequential Datatypes", "Indexing and Slicing", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> Loops", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">range</span></code> Function", "References, (Im)mutability", "Functions: Global and Local Scope (Livehacking Screenplay)", "Functions (Slideshow)", "Functions", "More About Strings", "String Formatting", "Miscellaneous String Methods", "More About Lists", "More About Dictionaries", "More About Sets", "File I/O", "Function Objects", "Commandline Parsing with <code class=\"docutils literal notranslate\"><span class=\"pre\">argparse</span></code>", "Python: Draft Topics", "Matplotlib", "Package Installation (<code class=\"docutils literal notranslate\"><span class=\"pre\">setuptools</span></code>)", "Exercise: Read CSV File, Write into Sqlite3 Database", "Exercise: Read CSV File", "CSV and Databases", "Exercises", "Exercise: Boolean Expressions", "Exercise: Even Numbers (<code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code>)", "Exercise: Greeting, Depending on Time of Day", "Exercises (External)", "Exercise: Determine Maximum of Two Numbers", "Exercise: Swap Two Variables", "Exercise: Username/Password Check", "Exercise: Digit to English Word", "Exercise: Dictionary: Errors?", "Exercise: Eliminate Empty/Comment-Only Lines", "Exercise: Generator: Fibonacci", "Exercise: Primeness (<code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code>)", "Exercises (Legacy)", "Exercise: Functions: <code class=\"docutils literal notranslate\"><span class=\"pre\">join()</span></code>", "Exercise: Determine Maximum of Two Numbers", "Exercise: Determine Maximum of Two Numbers (Function)", "Exercise: Mixed List (Executable Program)", "Exercise: Mixed List (Interactive Interpreter)", "Exercise: Parsing <code class=\"docutils literal notranslate\"><span class=\"pre\">/etc/passwd</span></code>", "Exercise: Primeness (Function)", "Exercise: Reverting Lines of a File", "Exercise: String (Right-Justify)", "Exercise: Function: <code class=\"docutils literal notranslate\"><span class=\"pre\">uniq()</span></code>", "Exercise: Generator: <code class=\"docutils literal notranslate\"><span class=\"pre\">uniq()</span></code>", "Exercise: Counting Lines, Words, Characters", "Exercise: Primeness (<code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code>)", "Sensors, And Data Acquisition (Exercise Series)", "Project Setup", "Exercise: Basic \u201cSensor\u201d", "Exercise: Read CSV File (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.dictreader</span></code>)", "Exercise: Refactoring - Extract CSV Reading Into Function (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.dictreader</span></code>)", "Exercise: Read CSV File (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.reader</span></code>)", "Exercise: Refactoring - Extract CSV Reading Into Function (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.reader</span></code>)", "User Database (Exercise Series)", "Exercise: MQTT: Publish User Records", "Exercise: Away From Raw Dictionaries", "Exercise: Convert User Record To JSON And Back", "Exercise: Refactoring - Extract Both CSV Formats Into Module", "Python: All Material, Interrelated", "Python Programming: From Absolute Beginner to Advanced Productivity", "Python Links", "Machine Learning, Artificial Intelligence", "K-Means", "Linear Regression: Running Code (<em>no Notebook!</em>)", "Weather History Dataset", "Linear Regression: Jupyter Notebook", "Linear Regression", "Machine Learning: Concepts and Terminology", "CSV Files", "DBAPI 2", "Databases", "DBAPI 2: PostgreSQL", "DBAPI 2: <code class=\"docutils literal notranslate\"><span class=\"pre\">sqlite3</span></code>", "Encoding", "Python: Miscellaneous Topics", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">import</span></code> Statement (incomplete)", "MQTT", "Pandas: Adding Rows", "Pandas: Basics (<code class=\"docutils literal notranslate\"><span class=\"pre\">DataFrame</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">Series</span></code>)", "Pandas: Filters", "Pandas", "Pandas: Selecting Rows (And Columns) With <code class=\"docutils literal notranslate\"><span class=\"pre\">iloc[]</span></code>", "Pandas: Indexes", "Pandas: Selecting Rows (And Columns) With <code class=\"docutils literal notranslate\"><span class=\"pre\">loc[]</span></code>", "Pandas: Adding/Modifying Columns", "XML: ElementTree (<code class=\"docutils literal notranslate\"><span class=\"pre\">etree</span></code>)", "Visual Studio Code for Python Programming", "Python: Project/Package Management", "Python Package Index (Livehacking Screenplay)", "Python Package Index (Slideshow)", "Python Package Index", "Packaging, PyPI Upload (Link Collection)", "PyTest", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pytest</span></code> Introduction, By Example", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">unittest</span></code> Module", "Virtual Environments (Livehacking Screenplay)", "Virtual Environments (Slideshow)", "Virtual Environments", "Unit Testing With <code class=\"docutils literal notranslate\"><span class=\"pre\">googletest</span></code>", "Code: Unittest: GTest Basics", "Screenplay: Unittest: GTest Basics", "Unittest: GTest Basics", "Screenplay: Unittest: GTest and CMake", "Unittest: GTest and CMake", "Code: Unittest: GTest Fixtures", "Screenplay: Unittest: GTest Fixtures", "Unittest: GTest Fixtures", "Organisatorisches: Buchung, Kursablauf", "Linux from Scratch, 16.9.2013, M\u00fcnchen", "Shell Scripting/Bourne Again Shell (Bash)", "C: Einf\u00fchrung", "C f\u00fcr Fortgeschrittene", "C++: Einf\u00fchrung und \u00dcberblick", "An Introduction to Modern C++, In Three Days", "C and C++ Programming", "CMake", "Design Patterns For C++ Developers", "Embedded Software Development: Hardware, Realtime, and Memory Management", "Linux Kernel Driver Development", "Linux Basics: Eine Einf\u00fchrung Anhand von Beispielen", "GNU Make: Die Mutter aller Build Tools", "Advanced Python", "Basic Python", "Herdt", "Eine Woche mit dem Raspberry Pi", "Subversion (SVN)", "Linux Systems Programming: Introduction", "Linux Systems Programming: Virtual Memory, IPC, Shared Libraries", "Linux Systems Programming", "Linux Systems Programming: Multithreading", "Linux Systems Programming: Network Programming", "Unittesting and Test Driven Development"], "terms": {"di": [0, 23, 184, 187, 255, 474, 1120, 1122, 1126, 1128], "j\u00f6rg": [0, 23, 150, 188, 222, 230, 234, 249, 252, 255, 265, 268, 283, 304, 310, 322, 325, 326, 332, 338, 344, 348, 356, 357, 359, 361, 426, 500, 1028, 1031, 1069, 1093, 1120, 1121, 1122, 1123, 1126, 1127, 1128], "faschingbau": [0, 12, 23, 37, 50, 61, 63, 65, 150, 152, 169, 176, 177, 185, 203, 206, 207, 209, 210, 211, 212, 222, 229, 234, 235, 242, 245, 250, 252, 255, 258, 262, 265, 268, 271, 283, 290, 300, 304, 310, 315, 322, 325, 326, 332, 338, 344, 356, 357, 359, 362, 365, 370, 426, 457, 474, 479, 492, 499, 500, 533, 549, 605, 651, 680, 681, 682, 683, 684, 685, 702, 860, 861, 868, 870, 875, 889, 905, 918, 924, 949, 986, 1028, 1031, 1032, 1044, 1045, 1047, 1048, 1049, 1051, 1052, 1054, 1060, 1082, 1086, 1109, 1120, 1121, 1122, 1123, 1126, 1127, 1128, 1130, 1139, 1145, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1158, 1178, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202], "offic": [0, 32, 175, 191], "co": [0, 12, 32, 37, 152, 166, 177, 206, 207, 209, 210, 211, 212, 273, 290, 294, 365, 370, 472, 479, 698, 1032, 1054, 1130, 1145, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1158, 1176, 1178, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202], "43": [0, 7, 173, 180, 192, 203, 213, 218, 220, 223, 226, 229, 234, 235, 239, 242, 245, 250, 252, 258, 262, 265, 268, 271, 280, 283, 287, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 357, 359, 360, 449, 462, 474, 633, 703, 753, 781, 915, 924, 937, 939, 978, 1041], "0": [0, 5, 7, 21, 23, 32, 60, 62, 111, 114, 115, 118, 123, 124, 125, 126, 133, 137, 141, 145, 150, 154, 156, 166, 169, 171, 172, 173, 175, 181, 185, 189, 190, 191, 192, 193, 203, 206, 208, 210, 213, 218, 220, 221, 222, 223, 226, 229, 230, 231, 234, 235, 239, 242, 243, 245, 248, 250, 252, 255, 258, 261, 262, 265, 268, 270, 271, 273, 275, 280, 283, 286, 287, 288, 290, 294, 298, 299, 300, 304, 310, 320, 322, 326, 332, 338, 344, 348, 351, 357, 358, 359, 360, 361, 362, 365, 387, 388, 390, 392, 394, 396, 397, 398, 400, 407, 408, 410, 411, 412, 420, 423, 425, 426, 432, 433, 435, 438, 453, 454, 455, 456, 458, 459, 462, 463, 466, 468, 472, 474, 475, 478, 482, 483, 485, 488, 491, 492, 497, 499, 502, 504, 511, 512, 514, 516, 517, 518, 519, 521, 522, 523, 526, 527, 530, 531, 532, 536, 539, 540, 544, 546, 547, 548, 549, 550, 558, 564, 565, 573, 576, 582, 585, 592, 593, 594, 596, 597, 600, 601, 602, 603, 605, 607, 608, 609, 610, 611, 612, 615, 620, 621, 622, 623, 624, 625, 627, 628, 629, 630, 631, 633, 634, 637, 638, 639, 643, 647, 648, 649, 650, 651, 655, 657, 661, 662, 664, 665, 667, 668, 670, 672, 674, 679, 680, 681, 682, 683, 684, 685, 686, 690, 694, 695, 698, 701, 702, 703, 705, 707, 708, 709, 710, 712, 713, 714, 715, 716, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 732, 734, 735, 737, 739, 740, 742, 744, 748, 749, 751, 752, 753, 754, 759, 762, 764, 766, 770, 772, 774, 776, 780, 784, 788, 791, 792, 796, 799, 811, 813, 823, 846, 847, 849, 864, 868, 870, 875, 878, 889, 890, 893, 915, 917, 918, 919, 924, 930, 933, 937, 938, 939, 948, 950, 953, 955, 956, 957, 959, 960, 962, 963, 964, 965, 966, 969, 971, 973, 974, 980, 988, 989, 991, 993, 994, 995, 997, 1000, 1001, 1004, 1005, 1007, 1008, 1010, 1019, 1022, 1023, 1025, 1027, 1029, 1030, 1033, 1035, 1039, 1041, 1043, 1056, 1059, 1060, 1061, 1062, 1066, 1068, 1070, 1073, 1075, 1076, 1077, 1081, 1083, 1085, 1086, 1088, 1091, 1092, 1093, 1098, 1100, 1109, 1119, 1126, 1128, 1134, 1135, 1136, 1143, 1144, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1159, 1164, 1166, 1171, 1176], "664": [0, 245, 878], "5783814": 0, "gpg": 0, "kei": [0, 9, 32, 42, 101, 105, 106, 112, 128, 165, 167, 169, 181, 189, 198, 203, 208, 210, 211, 213, 218, 220, 222, 225, 226, 227, 229, 234, 235, 237, 239, 240, 242, 243, 245, 250, 252, 253, 255, 258, 262, 265, 267, 268, 272, 276, 279, 280, 283, 285, 286, 290, 300, 303, 304, 306, 307, 309, 310, 322, 326, 332, 337, 339, 344, 348, 359, 362, 365, 370, 398, 446, 646, 648, 651, 690, 739, 786, 860, 861, 868, 925, 929, 941, 942, 943, 945, 950, 1031, 1035, 1044, 1062, 1063, 1079, 1088, 1098, 1099, 1121, 1123, 1131, 1139, 1152, 1153, 1159, 1184, 1190], "prankergass": [0, 229, 250, 905], "33": [0, 7, 167, 180, 192, 203, 208, 213, 218, 220, 223, 226, 229, 234, 235, 239, 242, 245, 250, 252, 255, 258, 262, 265, 271, 280, 283, 287, 290, 294, 300, 304, 310, 322, 326, 332, 338, 344, 348, 359, 360, 361, 474, 495, 864, 905, 1007, 1135, 1136], "8020": [0, 229, 245, 250, 288, 474, 860, 861, 899, 905], "graz": [0, 1, 3, 23, 61, 63, 65, 153, 211, 229, 288, 321, 324, 382, 474, 860, 861, 899, 905, 1130], "uid": [0, 250, 255, 258, 326, 344, 365, 370, 784, 860, 861, 868, 878, 950, 965, 1021, 1109], "vat": [0, 214, 1194], "atu63522469": 0, "write": [0, 13, 16, 27, 29, 37, 43, 48, 53, 54, 55, 56, 57, 61, 62, 63, 70, 74, 82, 101, 118, 122, 125, 129, 133, 134, 136, 137, 139, 141, 145, 146, 170, 171, 172, 181, 186, 190, 203, 206, 207, 209, 210, 211, 222, 227, 229, 230, 231, 232, 237, 239, 240, 243, 246, 248, 250, 256, 258, 267, 270, 277, 279, 286, 296, 303, 309, 321, 334, 351, 354, 356, 365, 367, 369, 371, 376, 392, 395, 396, 401, 413, 415, 437, 448, 452, 458, 459, 462, 472, 474, 497, 500, 512, 514, 517, 528, 537, 538, 549, 550, 552, 557, 568, 574, 579, 585, 590, 592, 593, 596, 606, 608, 655, 662, 671, 674, 676, 690, 695, 706, 718, 730, 739, 745, 754, 768, 774, 780, 784, 785, 786, 792, 794, 804, 806, 813, 817, 833, 849, 860, 861, 864, 870, 875, 876, 878, 879, 880, 881, 887, 889, 891, 894, 912, 924, 926, 929, 933, 937, 938, 939, 946, 953, 955, 956, 957, 960, 962, 963, 964, 965, 967, 968, 969, 970, 971, 973, 974, 977, 981, 987, 991, 1000, 1001, 1004, 1005, 1009, 1012, 1015, 1033, 1044, 1049, 1050, 1054, 1077, 1078, 1083, 1088, 1089, 1090, 1092, 1095, 1096, 1097, 1098, 1100, 1101, 1104, 1105, 1107, 1109, 1111, 1112, 1113, 1115, 1116, 1120, 1122, 1125, 1129, 1131, 1144, 1155, 1164, 1165, 1166, 1184, 1185, 1197], "review": [0, 171, 194, 205, 299, 389], "http": [0, 3, 4, 8, 13, 20, 23, 32, 37, 39, 44, 60, 61, 63, 65, 66, 89, 110, 126, 128, 140, 154, 156, 166, 174, 175, 176, 177, 181, 185, 187, 189, 197, 198, 199, 200, 206, 207, 210, 211, 219, 224, 230, 232, 233, 239, 245, 246, 248, 255, 258, 262, 270, 275, 277, 286, 289, 295, 296, 297, 299, 303, 309, 313, 314, 317, 321, 323, 325, 329, 331, 335, 337, 343, 347, 364, 365, 370, 385, 533, 547, 568, 610, 670, 743, 747, 752, 769, 773, 789, 804, 806, 810, 833, 834, 932, 934, 937, 973, 1019, 1021, 1076, 1086, 1142, 1144, 1159, 1160], "g": [0, 32, 48, 62, 101, 128, 141, 146, 173, 177, 181, 185, 190, 191, 193, 203, 218, 222, 231, 235, 239, 242, 245, 250, 252, 255, 258, 262, 280, 286, 294, 310, 335, 344, 387, 407, 411, 414, 417, 422, 428, 429, 430, 432, 435, 450, 454, 462, 466, 467, 474, 475, 477, 480, 486, 487, 500, 504, 512, 533, 546, 549, 592, 596, 597, 626, 646, 664, 665, 694, 698, 701, 703, 712, 732, 753, 761, 765, 770, 784, 792, 811, 833, 852, 871, 878, 893, 915, 922, 925, 932, 950, 959, 969, 989, 991, 993, 1004, 1005, 1007, 1008, 1009, 1010, 1021, 1026, 1028, 1030, 1038, 1050, 1052, 1053, 1071, 1076, 1077, 1140, 1144, 1155, 1166, 1171, 1187], "page": [0, 33, 39, 60, 76, 78, 82, 110, 128, 146, 165, 166, 167, 169, 170, 172, 173, 177, 182, 202, 207, 210, 231, 256, 286, 312, 328, 348, 372, 396, 397, 400, 445, 456, 496, 533, 786, 792, 811, 817, 819, 831, 857, 860, 861, 877, 926, 930, 939, 950, 960, 963, 991, 1138], "r": [0, 7, 13, 31, 32, 38, 43, 60, 173, 175, 176, 180, 181, 189, 191, 192, 193, 202, 203, 206, 208, 209, 213, 218, 220, 223, 226, 229, 231, 235, 236, 239, 242, 245, 248, 250, 252, 255, 258, 262, 265, 268, 270, 271, 280, 283, 287, 288, 290, 300, 304, 310, 322, 326, 332, 335, 338, 344, 348, 357, 360, 365, 374, 386, 407, 432, 462, 474, 481, 495, 514, 515, 544, 548, 612, 639, 742, 750, 784, 797, 806, 811, 829, 833, 834, 864, 870, 875, 878, 889, 892, 893, 895, 915, 922, 930, 937, 938, 939, 941, 942, 950, 961, 964, 965, 973, 1007, 1008, 1009, 1019, 1021, 1022, 1029, 1050, 1055, 1058, 1064, 1075, 1081, 1086, 1118, 1144, 1166, 1202], "ctb02zug3crheb0": 0, "geboren": [1, 23], "am": [1, 3, 7, 17, 32, 37, 61, 63, 69, 111, 152, 170, 171, 172, 173, 175, 176, 177, 178, 179, 189, 202, 214, 223, 259, 263, 290, 332, 344, 603, 740, 833, 872, 921, 926, 939, 948, 950, 965, 1075, 1178, 1179, 1181, 1194, 1197, 1201], "19": [1, 7, 23, 128, 180, 182, 191, 192, 193, 202, 208, 211, 213, 218, 220, 222, 223, 226, 229, 234, 235, 239, 242, 245, 246, 250, 252, 255, 258, 262, 265, 268, 271, 280, 283, 287, 290, 294, 300, 304, 310, 315, 322, 326, 332, 338, 344, 348, 358, 359, 360, 362, 370, 373, 382, 450, 474, 481, 750, 784, 893, 915, 939, 1010, 1019, 1051, 1057, 1120, 1121, 1122, 1123, 1126, 1127, 1128, 1130, 1135, 1136, 1140, 1148, 1159, 1164, 1166], "6": [1, 7, 32, 60, 62, 113, 126, 149, 171, 173, 181, 185, 187, 190, 191, 192, 193, 203, 208, 210, 215, 218, 220, 221, 223, 226, 229, 230, 231, 233, 236, 238, 239, 242, 243, 245, 250, 252, 255, 258, 262, 265, 269, 271, 280, 283, 287, 290, 294, 300, 304, 310, 318, 322, 326, 332, 338, 344, 348, 357, 358, 360, 361, 365, 389, 390, 412, 449, 455, 466, 511, 512, 551, 552, 553, 554, 566, 585, 592, 594, 597, 600, 601, 604, 606, 609, 610, 611, 612, 630, 631, 632, 633, 639, 670, 671, 707, 753, 766, 784, 889, 912, 915, 919, 924, 930, 937, 938, 939, 953, 961, 974, 1007, 1019, 1021, 1024, 1029, 1030, 1033, 1039, 1043, 1062, 1063, 1066, 1068, 1070, 1077, 1086, 1092, 1109, 1116, 1120, 1121, 1122, 1123, 1126, 1127, 1128, 1135, 1136, 1140, 1144, 1159, 1164, 1165, 1166, 1171, 1195], "1966": [1, 23, 211, 245, 255, 265, 268, 1120, 1121, 1122, 1123, 1126, 1127, 1128, 1140], "diplom": [1, 23], "au": [1, 5, 8, 23, 32, 150, 178, 179, 187, 188, 189, 193, 203, 214, 224, 226, 233, 249, 252, 258, 259, 261, 273, 310, 326, 360, 365, 366, 383, 1179, 1181, 1182, 1183, 1188, 1194, 1197], "technisch": [1, 23, 383, 1196], "mathematik": [1, 23], "an": [1, 3, 5, 13, 17, 21, 23, 28, 31, 38, 40, 43, 45, 46, 48, 54, 55, 57, 58, 61, 63, 65, 73, 77, 78, 82, 86, 87, 89, 96, 111, 112, 114, 115, 118, 122, 125, 128, 133, 136, 141, 144, 145, 146, 158, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 200, 202, 203, 206, 208, 209, 210, 213, 221, 222, 226, 227, 229, 230, 231, 232, 234, 237, 239, 242, 243, 246, 247, 248, 250, 253, 255, 256, 258, 262, 268, 270, 271, 275, 277, 279, 286, 289, 292, 294, 295, 296, 297, 299, 303, 304, 314, 317, 321, 325, 332, 334, 343, 348, 351, 352, 376, 382, 384, 388, 390, 394, 397, 398, 411, 420, 428, 432, 435, 438, 439, 450, 453, 454, 455, 456, 458, 461, 468, 472, 474, 478, 481, 487, 490, 491, 492, 495, 496, 500, 501, 502, 511, 512, 514, 515, 516, 517, 533, 535, 539, 544, 546, 548, 549, 552, 553, 554, 566, 568, 592, 593, 595, 597, 600, 601, 602, 606, 608, 609, 610, 611, 612, 625, 630, 643, 646, 649, 650, 655, 661, 664, 665, 672, 677, 681, 683, 684, 685, 686, 690, 691, 694, 698, 702, 711, 717, 730, 732, 740, 742, 749, 750, 752, 753, 754, 760, 770, 771, 784, 785, 786, 787, 792, 797, 799, 802, 804, 811, 833, 841, 846, 859, 860, 861, 865, 866, 870, 878, 887, 892, 893, 896, 899, 918, 920, 930, 937, 939, 941, 942, 947, 950, 955, 956, 957, 958, 960, 964, 965, 966, 967, 971, 973, 974, 980, 986, 988, 989, 992, 993, 994, 995, 1001, 1005, 1007, 1008, 1013, 1017, 1022, 1023, 1026, 1027, 1030, 1036, 1037, 1038, 1042, 1043, 1047, 1048, 1050, 1052, 1053, 1054, 1058, 1059, 1060, 1062, 1066, 1072, 1081, 1082, 1083, 1086, 1088, 1101, 1107, 1108, 1109, 1125, 1131, 1133, 1135, 1136, 1137, 1138, 1143, 1144, 1147, 1152, 1153, 1157, 1159, 1164, 1165, 1167, 1176, 1178, 1179, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1195, 1197, 1198, 1202], "der": [1, 3, 5, 7, 8, 11, 68, 166, 178, 179, 180, 184, 187, 188, 189, 190, 193, 195, 197, 203, 205, 214, 215, 216, 219, 220, 223, 224, 226, 229, 233, 249, 250, 252, 258, 261, 262, 265, 273, 322, 348, 357, 365, 370, 1178, 1180, 1181, 1182, 1183, 1188, 1190, 1191, 1194, 1195, 1196, 1197, 1198, 1200, 1201, 1202], "tu": [1, 23], "iicm": [1, 23], "1993": [1, 23], "universit\u00e4tsassist": [1, 23], "ebendort": [1, 23], "bi": [1, 3, 23, 32, 178, 179, 203, 213, 310, 338, 1179, 1198], "1998": [1, 3, 23, 181, 189, 245, 591], "vorlesungen": 1, "programmieren": [1, 5, 150, 189, 193, 366, 382, 1183, 1188, 1191, 1195, 1197, 1201, 1202], "basi": [1, 3, 5, 7, 24, 82, 194, 202, 223, 232, 246, 258, 292, 360, 435, 1187, 1198, 1199], "c": [1, 3, 4, 6, 9, 12, 21, 23, 38, 42, 43, 62, 69, 76, 77, 78, 82, 89, 91, 110, 113, 127, 136, 146, 150, 155, 165, 166, 169, 170, 171, 172, 173, 176, 183, 186, 188, 190, 198, 199, 203, 208, 209, 215, 218, 220, 225, 226, 229, 230, 239, 242, 243, 245, 249, 250, 252, 255, 258, 262, 265, 270, 271, 280, 283, 290, 296, 300, 304, 310, 313, 321, 322, 326, 329, 332, 338, 344, 348, 351, 360, 364, 366, 367, 372, 378, 379, 382, 384, 385, 386, 387, 388, 390, 394, 396, 398, 399, 400, 403, 406, 408, 410, 411, 412, 414, 418, 422, 423, 426, 427, 428, 429, 430, 434, 436, 438, 439, 440, 444, 445, 447, 448, 450, 451, 452, 454, 455, 456, 458, 459, 460, 462, 463, 464, 466, 467, 468, 469, 475, 478, 479, 480, 481, 484, 485, 486, 491, 492, 494, 495, 500, 504, 510, 512, 515, 521, 533, 536, 539, 540, 541, 542, 543, 545, 546, 548, 549, 551, 557, 591, 593, 595, 596, 597, 598, 602, 603, 604, 608, 609, 611, 613, 616, 621, 626, 628, 629, 633, 635, 639, 641, 643, 645, 646, 647, 648, 651, 653, 654, 655, 657, 658, 660, 661, 662, 663, 665, 668, 669, 670, 671, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 692, 698, 699, 703, 704, 705, 706, 707, 711, 717, 718, 729, 730, 731, 733, 734, 735, 736, 737, 738, 741, 742, 743, 744, 746, 747, 749, 750, 752, 753, 754, 755, 756, 758, 763, 764, 767, 768, 769, 770, 771, 774, 783, 784, 786, 787, 789, 792, 796, 797, 801, 802, 806, 808, 811, 813, 823, 833, 835, 836, 841, 849, 852, 857, 859, 865, 870, 872, 875, 890, 893, 915, 921, 924, 930, 931, 937, 938, 939, 951, 955, 956, 957, 962, 963, 964, 965, 966, 975, 978, 983, 991, 994, 996, 997, 1000, 1003, 1004, 1005, 1007, 1008, 1009, 1015, 1017, 1019, 1023, 1024, 1025, 1026, 1028, 1029, 1053, 1061, 1062, 1070, 1071, 1075, 1081, 1088, 1142, 1143, 1147, 1165, 1166, 1173, 1176, 1186, 1188, 1189, 1191, 1197, 1198, 1199, 1200, 1201, 1202], "und": [1, 3, 4, 5, 6, 7, 8, 37, 39, 150, 163, 178, 179, 184, 188, 189, 193, 195, 197, 205, 209, 215, 219, 221, 223, 228, 230, 234, 239, 250, 254, 255, 260, 262, 266, 272, 273, 290, 300, 310, 326, 339, 349, 360, 361, 365, 370, 382, 384, 420, 428, 873, 920, 921, 940, 1178, 1179, 1180, 1181, 1182, 1186, 1188, 1190, 1191, 1195, 1196, 1197, 1198, 1200, 1201, 1202], "\u00fcbertragungsprotokol": [1, 183], "forschungst\u00e4tigkeit": 1, "volltextsuch": 1, "hyperwav": [1, 3, 23], "2001": [1, 3, 23, 239, 245, 255, 258, 283], "leitung": 1, "serverprogrammierung": 1, "oo": [1, 43, 76, 77, 78, 82, 110, 128, 183, 206, 219, 221, 230, 249, 257, 260, 286, 290, 296, 298, 299, 303, 369, 378, 379, 474, 496, 538, 590, 591, 598, 661, 662, 665, 667, 668, 690, 754, 786, 825, 835, 1032, 1046, 1184, 1187], "design": [1, 3, 20, 23, 53, 57, 78, 82, 84, 86, 89, 110, 166, 167, 170, 183, 186, 206, 232, 233, 249, 295, 297, 373, 382, 384, 411, 441, 461, 462, 465, 473, 482, 489, 490, 491, 492, 494, 495, 497, 499, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 538, 546, 548, 590, 591, 597, 599, 615, 687, 736, 749, 753, 754, 756, 771, 784, 785, 786, 787, 938, 1007, 1126, 1165, 1183, 1186], "analys": [1, 3, 183, 1181], "ration": [1, 3, 38, 176], "rose": [1, 3, 32], "f\u00fcr": [1, 3, 5, 68, 150, 178, 179, 184, 188, 190, 193, 214, 215, 226, 233, 249, 261, 273, 287, 365, 370, 382, 384, 895, 1178, 1179, 1181, 1188, 1194, 1195, 1197, 1200], "java": [1, 9, 213, 214, 225, 237, 246, 338, 651, 664, 749, 754, 761, 1043, 1056, 1062, 1071, 1194, 1202], "releasemanag": [1, 3, 23, 183, 1196], "cv": [1, 3, 23, 32, 166, 240, 1196], "subvers": [1, 3, 384, 915], "systemnah": [1, 3, 5, 23, 165, 183, 997, 1000, 1004, 1197], "programmierung": [1, 3, 4, 5, 6, 8, 23, 163, 183, 237, 264, 273, 382, 1179, 1180, 1181, 1183, 1188, 1195, 1197, 1200], "unter": [1, 3, 23, 68, 150, 179, 187, 188, 205, 213, 366, 921, 1179, 1180, 1183, 1188, 1191, 1195, 1198, 1200, 1201], "unix": [1, 76, 77, 78, 82, 101, 127, 150, 167, 170, 199, 222, 286, 351, 365, 366, 367, 378, 379, 383, 400, 454, 500, 674, 765, 784, 786, 790, 792, 825, 858, 859, 860, 875, 877, 889, 917, 920, 926, 930, 933, 938, 950, 975, 991, 1001, 1057, 1081, 1109, 1179, 1180, 1182, 1186, 1188, 1190, 1191, 1195, 1197, 1198, 1199, 1201], "window": [1, 3, 32, 101, 102, 107, 108, 128, 149, 158, 170, 175, 177, 187, 189, 202, 210, 227, 241, 243, 245, 256, 259, 270, 275, 277, 279, 285, 286, 298, 314, 320, 351, 362, 365, 368, 370, 383, 395, 462, 756, 759, 786, 863, 867, 893, 929, 959, 975, 980, 1055, 1057, 1058, 1081, 1131, 1166], "nt": 1, "salomon": [1, 3, 23], "friesach": [1, 3, 23], "bei": [1, 3, 5, 23, 178, 179, 184, 188, 193, 197, 203, 205, 214, 215, 218, 220, 258, 273, 357, 382, 993, 1178, 1179, 1194, 1196], "2006": [1, 3, 23, 245], "magicdraw": 1, "datenbankdesign": [1, 3], "einer": [1, 3, 150, 178, 179, 184, 189, 197, 203, 205, 214, 215, 220, 227, 360, 382, 921, 993, 1178, 1179, 1183, 1194, 1195, 1200], "objektrelationalen": [1, 3], "datenbankschnittstel": [1, 3], "sp\u00e4ter": [1, 178, 188, 259, 1181], "softwarearchitekt": 1, "leiter": [1, 23], "abteilung": [1, 214, 1194], "forschung": 1, "entwicklung": [1, 3, 4, 150, 366, 1190, 1196], "atron": [1, 3, 23], "unterpremst\u00e4tten": [1, 3, 23], "2010": [1, 3, 23, 166, 182, 245, 1056], "enterpris": 1, "architect": [1, 482, 1158], "softwarearchitektur": [1, 3, 23], "versionsmanag": 1, "ibm": 1, "clearcas": [1, 176, 1196], "massgeblich": 1, "portierung": [1, 3, 4, 183], "spielautomatensoftwar": 1, "von": [1, 3, 4, 5, 6, 7, 8, 68, 150, 152, 178, 179, 187, 188, 197, 205, 209, 210, 212, 214, 215, 218, 221, 223, 224, 226, 235, 252, 259, 264, 271, 280, 287, 322, 338, 344, 349, 365, 366, 370, 382, 384, 858, 920, 921, 1178, 1179, 1180, 1181, 1182, 1183, 1186, 1188, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201], "enea": [1, 3, 170], "os": [1, 3, 170], "nach": [1, 3, 4, 5, 150, 178, 179, 183, 184, 189, 193, 197, 213, 214, 220, 258, 259, 265, 344, 383, 855, 1178, 1194], "linux": [1, 3, 4, 6, 24, 37, 39, 43, 60, 61, 62, 63, 69, 76, 77, 78, 82, 88, 89, 90, 91, 102, 107, 108, 110, 127, 130, 146, 150, 155, 162, 165, 166, 167, 169, 171, 172, 173, 177, 180, 181, 182, 187, 194, 197, 202, 209, 231, 232, 239, 245, 248, 255, 258, 259, 262, 267, 270, 275, 277, 279, 288, 295, 297, 298, 314, 320, 334, 338, 351, 362, 364, 365, 366, 367, 371, 372, 378, 379, 382, 384, 426, 448, 456, 465, 468, 485, 496, 510, 538, 539, 540, 541, 542, 543, 544, 545, 548, 549, 550, 576, 590, 757, 763, 784, 785, 786, 787, 789, 790, 792, 793, 795, 797, 798, 800, 802, 803, 804, 805, 806, 807, 809, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 827, 828, 829, 830, 832, 833, 834, 837, 838, 839, 842, 843, 844, 847, 848, 850, 851, 853, 854, 856, 858, 859, 860, 861, 867, 869, 871, 874, 877, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 893, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 913, 921, 923, 926, 930, 932, 933, 934, 938, 940, 941, 942, 943, 944, 945, 946, 948, 949, 950, 953, 955, 956, 957, 958, 959, 960, 965, 967, 968, 971, 972, 973, 974, 976, 984, 987, 990, 992, 997, 1000, 1001, 1004, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1021, 1022, 1023, 1024, 1025, 1055, 1057, 1119, 1144, 1164, 1167, 1180, 1181, 1182, 1183, 1186, 1188, 1191, 1195], "beteiligt": [1, 23], "seit": [1, 5, 23, 197, 203, 213, 218, 1179, 1188], "april": [1, 3, 23], "selbstst\u00e4ndig": [1, 23], "fh": [1, 23, 101, 110, 113, 114, 115, 127, 128, 145, 146, 153, 175, 222, 362, 364, 365, 370, 371, 373, 538, 549, 570, 590, 598, 613, 673, 687, 786, 863, 867, 882, 888, 907, 913, 929, 1014, 1017, 1173], "joanneum": [1, 153, 175, 1173], "kapfenberg": 1, "2011": [1, 3, 5, 166, 167, 182, 295, 297, 382, 386, 591, 690], "2015": [1, 23, 230, 256, 294, 325, 382, 697, 1131], "lehrveranstaltung": [1, 366], "im": [1, 3, 5, 8, 29, 32, 38, 94, 150, 178, 179, 188, 189, 193, 197, 202, 203, 205, 206, 209, 211, 214, 215, 218, 220, 224, 226, 227, 233, 234, 237, 240, 241, 243, 246, 249, 253, 254, 255, 261, 262, 264, 266, 267, 269, 282, 284, 289, 291, 292, 296, 298, 299, 302, 303, 305, 308, 309, 311, 320, 321, 323, 324, 325, 327, 330, 336, 337, 342, 343, 345, 346, 347, 349, 351, 352, 353, 354, 355, 356, 365, 370, 786, 1032, 1054, 1088, 1089, 1090, 1100, 1103, 1111, 1112, 1114, 1115, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1136, 1144, 1145, 1166, 1179, 1182, 1188, 1190, 1194, 1195, 1197, 1198, 1201, 1202], "lehrgang": 1, "softwar": [1, 5, 13, 23, 24, 41, 72, 77, 78, 82, 89, 101, 108, 128, 139, 145, 150, 169, 177, 180, 181, 186, 197, 203, 209, 213, 222, 239, 245, 246, 255, 256, 258, 283, 295, 297, 298, 299, 312, 328, 362, 383, 384, 450, 482, 490, 491, 500, 502, 668, 754, 786, 787, 817, 864, 877, 929, 930, 937, 938, 953, 1005, 1014, 1017, 1086, 1133, 1186, 1187, 1189, 1202], "avl": [1, 23, 167], "2018": [1, 23, 173, 245, 695], "2019": [1, 40, 151, 166, 208, 230, 279, 303, 321, 324, 325, 382, 568, 695, 736, 915, 1130, 1131, 1133], "linuxexpert": [1, 23], "architekt": [1, 23], "build": [1, 4, 17, 28, 40, 42, 44, 50, 76, 77, 78, 82, 88, 91, 101, 108, 112, 128, 150, 154, 160, 166, 170, 175, 176, 182, 186, 197, 200, 210, 231, 248, 251, 275, 277, 279, 286, 295, 297, 300, 307, 312, 313, 328, 329, 334, 368, 371, 372, 383, 384, 387, 428, 441, 456, 468, 480, 481, 482, 484, 486, 496, 510, 516, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 568, 573, 576, 590, 681, 718, 738, 748, 762, 786, 790, 793, 795, 798, 800, 802, 803, 810, 812, 813, 814, 818, 824, 829, 830, 835, 837, 842, 848, 851, 854, 890, 929, 938, 939, 963, 964, 965, 966, 980, 999, 1003, 1007, 1010, 1014, 1017, 1018, 1022, 1069, 1080, 1086, 1159, 1164, 1170, 1174, 1179, 1184, 1186], "manag": [1, 5, 14, 23, 29, 62, 72, 76, 77, 78, 82, 98, 101, 112, 150, 169, 171, 180, 185, 186, 194, 197, 199, 202, 206, 209, 210, 216, 217, 221, 226, 227, 230, 232, 242, 248, 251, 256, 258, 259, 265, 268, 283, 290, 297, 299, 300, 303, 304, 307, 325, 326, 332, 334, 335, 338, 344, 349, 368, 369, 371, 378, 379, 383, 384, 445, 462, 473, 491, 504, 562, 568, 593, 598, 687, 698, 699, 701, 730, 735, 746, 747, 749, 750, 751, 755, 763, 783, 785, 786, 804, 810, 817, 819, 842, 848, 851, 854, 864, 868, 869, 924, 929, 938, 946, 958, 991, 992, 1005, 1021, 1032, 1041, 1060, 1084, 1088, 1129, 1130, 1131, 1132, 1133, 1137, 1145, 1147, 1159, 1161, 1163, 1164, 1168, 1173, 1184, 1186, 1189, 1196], "schittstel": 1, "zum": [1, 3, 5, 150, 178, 179, 188, 193, 197, 203, 213, 226, 233, 250, 310, 383, 1179, 1181, 1182, 1183, 1195, 1198, 1200], "weiser": 1, "alter": [1, 205, 206, 256, 279, 383, 594, 602, 920, 1131], "mann": 1, "2020": [1, 23, 128, 146, 151, 166, 167, 173, 177, 178, 182, 185, 189, 208, 210, 245, 382, 549, 550, 698, 711, 860, 861, 940, 949, 967, 1056, 1130, 1135, 1173, 1195], "embed": [1, 3, 4, 5, 23, 76, 91, 108, 119, 153, 165, 166, 167, 170, 172, 186, 210, 212, 235, 334, 363, 368, 370, 382, 384, 756, 766, 779, 785, 786, 821, 833, 871, 893, 939, 950, 991, 1007, 1034, 1075, 1180, 1181, 1182, 1186, 1187, 1190, 1191, 1195, 1199], "comput": [1, 23, 28, 29, 32, 76, 88, 91, 105, 119, 141, 153, 173, 212, 262, 271, 295, 297, 321, 322, 350, 363, 365, 368, 370, 382, 391, 464, 469, 470, 495, 592, 602, 605, 611, 644, 740, 753, 765, 786, 855, 862, 930, 938, 940, 941, 948, 975, 989, 992, 1056, 1144, 1159, 1189], "electron": [1, 175, 383, 938], "engin": [1, 150, 173, 246, 248, 314, 317, 383, 454, 458, 462, 472, 503, 536, 544, 938, 1054, 1202], "kontakt": [2, 23], "curriculum": [2, 5], "vita": [2, 5], "skill": [2, 89, 166, 991, 1054], "projekt": [2, 167, 188, 1191, 1195], "stand": [3, 180, 229, 368, 833, 939, 1023, 1139], "j\u00e4nner": [3, 23], "2014": [3, 167, 188, 209, 245, 279, 294, 303, 325, 935, 1131], "devicedriv": 3, "die": [3, 5, 7, 8, 37, 45, 46, 47, 51, 55, 56, 61, 63, 65, 68, 150, 166, 179, 184, 187, 188, 189, 190, 193, 197, 203, 205, 213, 214, 216, 218, 220, 223, 224, 226, 229, 233, 242, 249, 252, 255, 258, 261, 262, 265, 290, 318, 344, 360, 365, 366, 370, 383, 384, 518, 532, 786, 920, 921, 993, 1131, 1178, 1179, 1180, 1181, 1182, 1183, 1188, 1190, 1194, 1195, 1196, 1197, 1198, 1200, 1201, 1202], "pci": [3, 217, 786, 810, 811, 872, 929, 937, 973, 1189], "hardwar": [3, 5, 65, 69, 73, 76, 77, 78, 82, 84, 141, 145, 155, 159, 169, 170, 173, 183, 186, 245, 246, 258, 295, 298, 299, 320, 324, 351, 366, 367, 368, 383, 384, 400, 411, 414, 450, 468, 472, 542, 543, 544, 545, 549, 765, 786, 813, 833, 864, 869, 870, 929, 930, 931, 932, 935, 938, 954, 956, 957, 970, 973, 1005, 1178, 1187, 1189, 1195], "ein": [3, 5, 7, 8, 37, 150, 178, 179, 184, 187, 188, 189, 190, 193, 195, 197, 205, 209, 210, 212, 213, 214, 216, 218, 220, 221, 223, 224, 226, 227, 229, 233, 235, 239, 242, 243, 249, 250, 252, 255, 258, 259, 261, 262, 265, 273, 280, 283, 290, 300, 304, 310, 318, 322, 326, 332, 338, 348, 357, 360, 365, 370, 383, 384, 428, 556, 859, 920, 921, 993, 1061, 1178, 1179, 1180, 1181, 1182, 1183, 1186, 1188, 1191, 1194, 1196, 1197, 1198, 1199, 1200, 1201, 1202], "messger\u00e4teherstel": 3, "de": [3, 5, 7, 8, 32, 37, 150, 166, 178, 180, 184, 187, 188, 193, 197, 203, 205, 213, 214, 223, 224, 233, 249, 258, 261, 265, 365, 382, 459, 752, 769, 773, 855, 857, 921, 934, 1130, 1156, 1178, 1179, 1180, 1181, 1183, 1188, 1190, 1194, 1195, 1197, 1198, 1200, 1201, 1202], "untenstehenden": 3, "zeit": [3, 5, 179, 214, 332, 1179, 1181, 1201], "dato": 3, "ort": 3, "raum": [3, 193], "anbindung": 3, "verschieden": [3, 23, 203, 383, 1180, 1181, 1182, 1188, 1195, 1200], "hardwareinterfac": 3, "i2c": [3, 4, 69, 82, 85, 89, 155, 158, 170, 171, 197, 210, 286, 368, 371, 376, 383, 489, 519, 578, 579, 587, 786, 833, 929, 936, 938, 973, 1188, 1195], "spi": [3, 4, 82, 170, 188, 197, 383, 578, 579, 587, 931, 932, 933, 938, 973, 1188, 1195], "can": [3, 12, 17, 29, 57, 58, 65, 72, 79, 84, 87, 112, 114, 115, 128, 129, 136, 140, 164, 167, 169, 170, 171, 172, 174, 175, 176, 177, 181, 185, 186, 187, 190, 192, 194, 198, 199, 200, 202, 206, 207, 208, 222, 229, 231, 239, 242, 245, 246, 248, 255, 258, 262, 265, 268, 286, 289, 292, 294, 295, 297, 300, 304, 310, 312, 325, 326, 328, 332, 338, 351, 357, 359, 362, 365, 370, 376, 383, 388, 390, 394, 398, 402, 408, 411, 422, 426, 432, 433, 436, 443, 448, 450, 454, 455, 456, 457, 458, 461, 462, 466, 467, 468, 472, 474, 475, 477, 483, 485, 486, 492, 497, 500, 501, 504, 511, 512, 516, 517, 518, 530, 534, 543, 550, 576, 582, 592, 594, 599, 601, 602, 607, 608, 615, 626, 630, 646, 647, 652, 661, 665, 668, 672, 677, 682, 684, 685, 686, 695, 697, 700, 701, 702, 703, 707, 712, 736, 739, 740, 742, 748, 749, 752, 753, 754, 757, 760, 762, 766, 782, 784, 786, 792, 804, 819, 823, 827, 831, 833, 838, 841, 847, 859, 860, 861, 864, 865, 866, 868, 870, 871, 872, 873, 875, 876, 878, 883, 885, 887, 889, 891, 893, 894, 929, 930, 936, 937, 938, 939, 942, 944, 946, 948, 949, 950, 957, 959, 963, 967, 976, 978, 989, 992, 993, 1001, 1005, 1009, 1019, 1024, 1026, 1028, 1029, 1030, 1031, 1033, 1034, 1035, 1038, 1041, 1042, 1043, 1050, 1051, 1053, 1054, 1059, 1062, 1063, 1066, 1071, 1073, 1079, 1081, 1083, 1086, 1088, 1095, 1105, 1116, 1126, 1127, 1128, 1130, 1136, 1138, 1143, 1144, 1150, 1152, 1157, 1159, 1164, 1184, 1186, 1188, 1195, 1199, 1201], "custom": [3, 27, 29, 32, 39, 101, 155, 159, 163, 166, 170, 173, 175, 176, 182, 186, 199, 207, 209, 211, 239, 245, 248, 255, 258, 259, 286, 288, 295, 297, 322, 351, 352, 353, 354, 356, 364, 365, 383, 472, 477, 496, 510, 538, 541, 544, 546, 548, 568, 590, 592, 598, 663, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 699, 718, 720, 730, 735, 746, 755, 763, 771, 783, 785, 786, 806, 833, 949, 980, 1005, 1130, 1172], "firmwar": [3, 130, 132, 146, 158, 170, 171, 173, 180, 189, 930, 937, 973], "kunden": [3, 5, 23, 184, 288, 383, 1178], "dezemb": [3, 23], "2012": [3, 23, 166, 182, 245], "backport": 3, "integr": [3, 16, 23, 38, 43, 65, 126, 138, 146, 167, 175, 177, 185, 197, 202, 222, 312, 321, 328, 367, 372, 373, 374, 462, 488, 491, 495, 707, 786, 806, 815, 872, 893, 930, 932, 938, 939, 1156, 1164, 1167, 1186, 1188, 1195], "touchcontrol": 3, "driver": [3, 5, 82, 89, 155, 158, 170, 173, 175, 183, 186, 187, 286, 366, 367, 382, 384, 468, 786, 787, 789, 790, 792, 793, 794, 795, 796, 797, 798, 800, 802, 803, 804, 805, 807, 808, 809, 812, 813, 814, 816, 817, 818, 820, 822, 824, 826, 827, 828, 830, 832, 833, 834, 837, 839, 842, 844, 848, 851, 854, 864, 869, 872, 929, 938, 939, 959, 973, 1179, 1199, 1201], "systemintegrationsfirma": 3, "stuttgart": 3, "mai": [3, 43, 69, 112, 114, 115, 129, 145, 158, 170, 174, 176, 181, 185, 229, 239, 245, 252, 255, 258, 262, 268, 295, 304, 332, 348, 398, 405, 407, 411, 420, 477, 481, 514, 599, 652, 750, 760, 764, 784, 815, 817, 825, 833, 866, 875, 880, 881, 893, 938, 939, 961, 963, 964, 965, 967, 1022, 1023, 1031, 1073, 1156, 1166], "2013": [3, 23, 166, 382], "python": [3, 4, 6, 7, 10, 13, 21, 23, 24, 28, 29, 40, 60, 65, 67, 69, 76, 78, 82, 89, 95, 96, 138, 153, 154, 165, 166, 167, 183, 185, 186, 189, 191, 199, 214, 215, 219, 222, 223, 224, 226, 229, 231, 238, 239, 245, 254, 255, 258, 262, 265, 286, 288, 297, 351, 352, 353, 354, 355, 356, 360, 361, 364, 366, 367, 372, 373, 374, 378, 379, 380, 382, 384, 396, 548, 689, 707, 726, 738, 744, 761, 786, 787, 893, 915, 929, 931, 936, 937, 978, 1026, 1027, 1028, 1029, 1031, 1033, 1034, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1046, 1050, 1051, 1057, 1061, 1065, 1066, 1072, 1074, 1076, 1077, 1079, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1132, 1133, 1134, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1162, 1163, 1164, 1166, 1167, 1168, 1184, 1188, 1194, 1195, 1202], "programm": [3, 61, 63, 188, 189, 193, 202, 213, 218, 222, 226, 258, 283, 295, 296, 297, 324, 338, 360, 366, 383, 432, 445, 452, 458, 462, 592, 594, 595, 664, 698, 732, 735, 869, 875, 926, 938, 959, 993, 1054, 1055, 1059, 1081, 1138, 1145, 1158, 1181, 1184, 1189, 1197, 1198, 1200, 1202], "zur": [3, 178, 193, 197, 205, 215, 226, 360, 365, 370, 383, 993, 1179, 1181, 1182, 1183, 1195, 1200, 1201, 1202], "IT": [3, 286, 288, 383, 596], "wie": [3, 5, 150, 178, 179, 187, 188, 189, 193, 197, 203, 205, 213, 218, 221, 228, 252, 348, 360, 383, 1178, 1179, 1181, 1182, 1183, 1188, 1191, 1195, 1196, 1198, 1200, 1201], "beispiel": [3, 5, 23, 150, 189, 213, 214, 236, 242, 263, 383, 1181, 1182, 1183, 1194, 1195, 1197, 1198, 1200, 1202], "e": [3, 5, 7, 32, 37, 38, 42, 48, 62, 101, 128, 140, 141, 146, 173, 175, 176, 177, 178, 179, 181, 184, 185, 187, 188, 189, 191, 192, 193, 197, 203, 205, 213, 214, 218, 220, 222, 223, 226, 229, 230, 231, 234, 235, 239, 242, 243, 245, 248, 250, 252, 255, 258, 259, 262, 265, 268, 271, 280, 283, 286, 287, 290, 292, 294, 300, 304, 310, 322, 326, 332, 335, 338, 344, 348, 358, 359, 360, 361, 365, 370, 383, 387, 404, 407, 411, 414, 417, 422, 432, 435, 450, 454, 458, 461, 462, 474, 475, 477, 480, 486, 487, 491, 500, 504, 512, 517, 521, 533, 546, 549, 550, 585, 592, 596, 597, 607, 615, 626, 646, 664, 665, 679, 684, 691, 694, 698, 701, 712, 718, 732, 753, 762, 764, 765, 770, 784, 792, 811, 852, 859, 860, 861, 870, 871, 875, 876, 877, 878, 893, 915, 922, 937, 938, 939, 950, 959, 969, 971, 989, 992, 993, 1004, 1005, 1007, 1009, 1010, 1021, 1026, 1030, 1038, 1050, 1052, 1053, 1071, 1076, 1077, 1100, 1140, 1144, 1149, 1152, 1155, 1158, 1164, 1166, 1178, 1179, 1181, 1183, 1187, 1188, 1194, 1195, 1197, 1198, 1200, 1202], "bill": [3, 290], "email": [3, 32, 42, 152, 171, 177, 181, 186, 210, 226, 290, 376, 946, 1144, 1148, 1149, 1150, 1152, 1153, 1154], "kommunik": [3, 23, 1195, 1198, 1200, 1201, 1202], "extrakt": 3, "attach": [3, 191, 239, 245, 255, 258, 495, 815, 938, 991, 1138], "signaturverifik": 3, "informationssystem": 3, "februar": 3, "juni": 3, "vollautomatisch": 3, "instal": [3, 29, 32, 45, 59, 94, 101, 102, 108, 128, 145, 149, 154, 166, 167, 170, 171, 175, 197, 200, 206, 207, 209, 211, 222, 237, 239, 240, 243, 245, 248, 253, 255, 258, 259, 267, 270, 279, 282, 289, 292, 295, 296, 297, 302, 303, 307, 308, 309, 313, 314, 324, 329, 330, 331, 336, 337, 342, 346, 347, 403, 418, 427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 478, 479, 485, 496, 510, 538, 539, 540, 541, 542, 543, 544, 545, 548, 555, 557, 562, 590, 598, 613, 616, 619, 635, 641, 645, 654, 657, 658, 663, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 692, 699, 730, 746, 755, 763, 771, 783, 785, 786, 806, 813, 829, 833, 834, 872, 929, 932, 937, 939, 1004, 1006, 1009, 1012, 1014, 1017, 1038, 1054, 1058, 1084, 1129, 1142, 1149, 1159, 1160, 1167, 1172, 1174], "serveranlagen": 3, "herstel": 3, "radar\u00fcberwachungssystemen": 3, "septemb": 3, "unterschleissheim": 3, "m\u00fcnchen": 3, "instandhaltungsarbeiten": 3, "hauseigenen": 3, "system": [3, 5, 14, 23, 37, 45, 77, 82, 84, 101, 105, 106, 112, 114, 115, 128, 141, 150, 166, 167, 170, 171, 176, 177, 181, 183, 185, 186, 187, 188, 194, 197, 199, 200, 210, 222, 227, 230, 237, 239, 242, 243, 247, 248, 253, 255, 256, 258, 265, 268, 274, 275, 276, 283, 285, 290, 295, 300, 303, 304, 306, 326, 332, 338, 345, 362, 365, 366, 367, 368, 369, 370, 376, 378, 379, 382, 384, 418, 427, 434, 438, 440, 444, 447, 451, 458, 459, 460, 464, 465, 469, 470, 472, 477, 480, 482, 495, 496, 503, 516, 538, 549, 590, 625, 668, 692, 730, 763, 764, 765, 783, 784, 785, 786, 789, 792, 804, 806, 825, 831, 833, 863, 864, 865, 866, 867, 868, 869, 871, 872, 873, 876, 877, 879, 880, 881, 883, 884, 885, 886, 887, 890, 893, 919, 920, 924, 929, 933, 938, 939, 940, 945, 951, 955, 956, 957, 958, 960, 963, 965, 968, 969, 971, 972, 973, 974, 984, 987, 990, 992, 993, 995, 1001, 1004, 1005, 1007, 1008, 1009, 1030, 1031, 1042, 1058, 1086, 1131, 1166, 1180, 1187, 1189, 1190], "auf": [3, 5, 8, 23, 68, 150, 166, 171, 179, 184, 187, 188, 189, 193, 197, 203, 205, 213, 214, 218, 224, 226, 233, 234, 249, 252, 259, 261, 273, 348, 360, 365, 366, 370, 383, 921, 1178, 1179, 1180, 1181, 1182, 1183, 1188, 1190, 1191, 1194, 1198, 1201, 1202], "gentoo": [3, 166, 169, 182, 468, 1179], "updat": [3, 44, 140, 145, 169, 171, 185, 189, 217, 242, 250, 265, 275, 277, 283, 290, 295, 297, 304, 310, 322, 338, 344, 348, 365, 372, 547, 549, 610, 843, 991, 1021, 1022, 1023, 1024, 1025, 1079, 1081, 1155, 1167, 1173, 1196], "betriebssystem": [3, 1188, 1190, 1195, 1197], "usb": [3, 4, 62, 169, 170, 171, 173, 383, 461, 811, 864, 1188], "touchscreen": 3, "cheat": [3, 33, 69, 210, 222, 465, 718, 893], "detect": [3, 32, 110, 190, 202, 430, 433, 467, 475, 573, 600, 703, 728, 749, 827, 938, 939, 965, 974, 997, 1008, 1009, 1110], "m\u00fcnzeinwurf": 3, "via": [3, 17, 62, 89, 131, 137, 138, 150, 170, 173, 177, 182, 191, 206, 207, 229, 235, 256, 258, 286, 289, 292, 295, 304, 321, 364, 371, 383, 492, 497, 517, 602, 626, 737, 751, 786, 813, 833, 836, 864, 869, 875, 890, 926, 937, 948, 949, 956, 963, 973, 994, 1001, 1019, 1085, 1184], "gpio": [3, 4, 61, 63, 65, 69, 76, 77, 78, 82, 88, 128, 129, 130, 132, 137, 138, 139, 149, 167, 286, 295, 325, 355, 368, 370, 374, 786, 810, 835, 837, 842, 848, 851, 854, 929, 934, 938, 970, 974, 1188, 1195], "interrupt": [3, 62, 90, 114, 115, 188, 217, 286, 468, 786, 804, 810, 825, 827, 828, 830, 831, 835, 836, 837, 841, 842, 845, 848, 851, 852, 854, 864, 866, 869, 872, 929, 934, 951, 953, 954, 955, 956, 957, 958, 970, 972, 973, 989, 992, 993, 995, 1004, 1005, 1188, 1189, 1195], "m\u00e4rz": 3, "firma": [3, 184, 193, 288, 382, 1178, 1188, 1195], "spielo": 3, "intern": [3, 57, 88, 129, 133, 134, 139, 145, 203, 208, 231, 239, 242, 243, 245, 255, 258, 289, 292, 321, 358, 372, 401, 431, 446, 461, 477, 486, 491, 605, 646, 693, 736, 780, 784, 811, 819, 845, 937, 938, 939, 980, 1031, 1035, 1079, 1088, 1144, 1149], "datenkonvertierung": 3, "einem": [3, 5, 23, 150, 178, 188, 189, 193, 197, 203, 205, 213, 214, 218, 220, 226, 252, 258, 265, 280, 365, 366, 370, 383, 1179, 1181, 1183, 1188, 1197, 1201, 1202], "konvertierung": [3, 23, 1181], "asterix": 3, "format": [3, 17, 23, 29, 30, 31, 42, 51, 53, 54, 55, 56, 94, 133, 134, 136, 152, 173, 189, 190, 192, 193, 200, 207, 209, 211, 214, 218, 227, 230, 237, 238, 240, 246, 251, 252, 256, 258, 259, 264, 267, 268, 279, 282, 283, 288, 302, 303, 304, 308, 309, 311, 317, 320, 321, 324, 325, 330, 331, 332, 337, 339, 342, 343, 346, 347, 388, 389, 394, 430, 474, 786, 787, 833, 864, 870, 893, 953, 1007, 1046, 1054, 1090, 1100, 1103, 1111, 1112, 1114, 1115, 1124, 1125, 1126, 1127, 1129, 1131, 1136, 1147, 1159, 1194, 1198], "zweck": [3, 203, 1195], "extern": [3, 13, 21, 23, 29, 62, 89, 169, 173, 177, 199, 202, 209, 231, 232, 237, 248, 253, 258, 267, 288, 303, 313, 321, 329, 365, 370, 398, 402, 428, 430, 432, 434, 440, 444, 447, 451, 455, 460, 464, 469, 470, 479, 480, 576, 692, 730, 736, 783, 785, 786, 790, 793, 795, 798, 800, 803, 806, 810, 811, 812, 814, 818, 824, 830, 833, 837, 842, 843, 848, 851, 854, 929, 939, 989, 1055, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1129, 1131, 1171, 1173, 1181, 1188, 1195], "datenquellen": 3, "export": [3, 40, 60, 141, 145, 170, 181, 206, 231, 232, 235, 237, 338, 351, 736, 789, 865, 894, 930, 938, 971, 973, 974, 1019, 1021, 1024, 1122, 1139], "daten": [3, 203, 205, 218, 228, 233, 318, 993, 1201], "soap": [3, 32], "ip": [3, 152, 174, 177, 187, 194, 222, 348, 362, 365, 371, 376, 573, 585, 932, 950, 956, 992, 1159, 1188, 1195, 1199, 1201], "kamera": 3, "einen": [3, 5, 23, 178, 179, 189, 193, 197, 203, 205, 213, 226, 262, 383, 651, 920, 1178, 1179, 1180, 1181, 1183, 1190, 1198, 1200, 1201, 1202], "videomautsystemen": 3, "implement": [3, 16, 23, 24, 28, 42, 50, 53, 54, 55, 61, 62, 63, 73, 86, 88, 89, 101, 114, 115, 118, 124, 126, 128, 144, 155, 170, 172, 175, 190, 198, 206, 208, 226, 231, 232, 239, 245, 249, 252, 253, 255, 260, 262, 277, 283, 292, 295, 296, 297, 298, 299, 304, 320, 324, 335, 352, 353, 358, 365, 376, 399, 401, 433, 443, 445, 446, 462, 472, 477, 484, 487, 488, 490, 491, 492, 494, 495, 496, 499, 500, 502, 511, 512, 516, 517, 518, 533, 537, 539, 540, 541, 542, 543, 545, 546, 547, 551, 552, 553, 554, 556, 558, 563, 566, 567, 591, 593, 597, 601, 609, 610, 611, 612, 617, 646, 652, 661, 663, 664, 665, 672, 680, 681, 682, 683, 684, 685, 686, 687, 693, 698, 699, 700, 702, 712, 727, 728, 729, 730, 736, 737, 739, 748, 752, 754, 756, 762, 777, 780, 781, 784, 785, 786, 792, 799, 802, 819, 847, 864, 866, 870, 872, 930, 937, 939, 950, 953, 959, 975, 980, 1001, 1025, 1029, 1030, 1035, 1036, 1037, 1043, 1047, 1071, 1106, 1110, 1119, 1126, 1131, 1140, 1143, 1147, 1184, 1189], "gige": 3, "vision": [3, 288, 383], "clientlibrari": 3, "softwarebasiert": 3, "kamerasimul": 3, "t\u00e4tigkeiten": 3, "hardwareteil": 3, "rs232": [3, 4, 210], "lagesensor": 3, "anpassung": 3, "cryptsetup": 3, "filesystemverschl\u00fcsselung": 3, "anforderungen": [3, 1178], "applik": [3, 187], "august": [3, 23], "logistik": 3, "autom": [3, 209, 222, 253, 267, 309, 383, 930, 941, 948, 1021, 1023, 1031, 1131], "beteiligten": 3, "protokol": [3, 4, 1188, 1195, 1200], "server": [3, 152, 174, 177, 183, 189, 210, 222, 233, 242, 258, 265, 268, 279, 283, 290, 300, 304, 326, 332, 338, 344, 468, 514, 528, 859, 933, 946, 948, 956, 1001, 1143, 1159, 1176, 1195], "zu": [3, 6, 8, 150, 178, 179, 184, 187, 188, 193, 197, 203, 214, 215, 218, 220, 224, 233, 234, 249, 250, 259, 261, 265, 273, 280, 365, 370, 383, 855, 1178, 1179, 1180, 1181, 1182, 1183, 1188, 1191, 1194, 1195, 1196, 1197, 1198, 1200, 1201, 1202], "sp": [3, 700], "tcp": [3, 170, 177, 194, 210, 315, 931, 956, 1147, 1188, 1195, 1199, 1201], "autonomen": 3, "fahrzeugen": 3, "kundenapplikationen": 3, "autonom": [3, 212, 930, 1138], "fahrzeug": 3, "mikrocontrol": 3, "seriel": [3, 4, 1188, 1190], "beratend": 3, "versionskontrol": [3, 23, 183, 1196], "architektur": [3, 23, 183, 383], "2008": [3, 181, 245, 1056], "ylog": [3, 23], "gmbh": [3, 23, 474], "dobl": [3, 23], "heizsystem": 3, "parametrisierung": 3, "anlag": [3, 218], "mit": [3, 4, 5, 7, 8, 23, 166, 178, 179, 187, 188, 189, 193, 195, 197, 205, 209, 210, 214, 215, 216, 219, 220, 223, 224, 226, 233, 234, 235, 236, 249, 258, 259, 261, 262, 265, 273, 304, 348, 361, 365, 366, 370, 382, 384, 920, 1086, 1178, 1180, 1181, 1182, 1183, 1188, 1190, 1194, 1196, 1197, 1198, 1200, 1201, 1202], "iar": 3, "arm": [3, 169, 181, 222, 406, 813, 833, 834, 937, 950, 1004, 1007, 1008, 1019], "workbench": 3, "segger": [3, 170], "embo": [3, 170], "vba": 3, "excel": [3, 82, 171, 209, 235, 1122, 1136], "verteilung": 3, "microsoft": [3, 11, 176, 177, 180, 182, 186, 197, 205, 275, 277, 286, 295, 297, 383, 385, 433, 449, 872, 1122, 1178], "net": [3, 23, 39, 43, 128, 146, 156, 187, 188, 213, 265, 271, 338, 473, 549, 550, 827, 833, 860, 861, 921, 956, 1144], "versionskontrollinfrastruktur": 3, "assoziiert": [3, 189, 1197, 1198], "script": [3, 38, 60, 160, 163, 166, 169, 171, 176, 177, 186, 201, 209, 210, 212, 237, 239, 245, 255, 258, 285, 286, 306, 356, 365, 382, 384, 466, 474, 485, 736, 833, 875, 878, 893, 1021, 1032, 1058, 1059, 1083, 1086, 1166, 1179, 1190], "shell": [3, 4, 32, 101, 103, 105, 108, 128, 150, 186, 190, 209, 210, 212, 250, 258, 276, 285, 306, 326, 338, 350, 351, 364, 365, 366, 367, 370, 382, 384, 386, 468, 474, 496, 510, 538, 539, 540, 541, 542, 543, 544, 545, 548, 590, 763, 784, 785, 786, 833, 856, 860, 861, 862, 863, 866, 867, 868, 870, 871, 874, 875, 877, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 893, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 908, 909, 910, 911, 921, 922, 923, 926, 929, 930, 940, 941, 942, 943, 944, 952, 958, 959, 960, 968, 970, 973, 974, 984, 987, 990, 992, 1007, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1021, 1057, 1058, 1060, 1081, 1083, 1109, 1171, 1179, 1186, 1188, 1190, 1191, 1195, 1196, 1197, 1199], "oststeiermark": 3, "erweiterung": [3, 383], "buildumgebung": 3, "cmake": [3, 4, 5, 44, 69, 76, 77, 78, 82, 91, 101, 110, 128, 167, 176, 181, 186, 197, 200, 232, 248, 275, 277, 295, 297, 368, 382, 384, 385, 476, 478, 480, 481, 484, 485, 486, 487, 488, 496, 510, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 590, 610, 786, 787, 929, 1017, 1169, 1191], "www": [3, 20, 23, 61, 63, 65, 89, 166, 176, 185, 187, 207, 210, 211, 283, 385, 752, 789, 804, 810, 834, 973, 1142, 1144], "org": [3, 4, 23, 60, 66, 156, 162, 166, 169, 173, 177, 181, 187, 189, 200, 210, 213, 230, 239, 245, 246, 255, 258, 262, 283, 296, 323, 348, 369, 385, 789, 804, 806, 810, 833, 834, 973, 1019, 1021, 1055, 1076, 1086, 1125, 1142, 1159, 1160], "confix": [3, 167], "2009": [3, 1131], "schulungen": [3, 6, 23, 166, 167, 184], "dem": [3, 5, 8, 23, 150, 178, 179, 187, 188, 189, 193, 197, 210, 214, 224, 233, 236, 249, 250, 259, 261, 273, 304, 344, 365, 370, 383, 384, 993, 1178, 1179, 1180, 1182, 1183, 1188, 1190, 1197, 1198, 1200], "umkrei": 3, "softwareentwicklung": [3, 4, 183], "nicht": [3, 5, 7, 23, 37, 150, 178, 179, 184, 187, 193, 197, 214, 215, 218, 223, 226, 245, 250, 252, 258, 265, 271, 290, 300, 360, 365, 383, 921, 1179, 1180, 1181, 1182, 1183, 1188, 1190, 1191, 1194, 1195, 1196, 1197, 1200, 1201, 1202], "from": [3, 5, 8, 13, 21, 27, 33, 34, 35, 36, 39, 44, 53, 54, 56, 60, 62, 69, 72, 77, 78, 82, 85, 86, 88, 90, 94, 101, 102, 103, 105, 106, 107, 110, 113, 114, 115, 118, 128, 129, 130, 131, 132, 134, 135, 140, 145, 149, 152, 159, 163, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 183, 185, 186, 187, 189, 190, 192, 193, 198, 202, 203, 206, 207, 209, 210, 211, 212, 214, 220, 221, 222, 227, 229, 230, 231, 232, 234, 236, 237, 239, 243, 245, 246, 252, 253, 255, 256, 259, 260, 262, 265, 267, 270, 274, 275, 277, 279, 280, 282, 285, 288, 292, 295, 296, 297, 298, 299, 302, 304, 306, 307, 308, 309, 314, 317, 320, 322, 324, 325, 330, 331, 332, 334, 335, 336, 337, 342, 343, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 358, 362, 364, 365, 367, 368, 369, 370, 372, 373, 386, 387, 393, 395, 396, 400, 403, 406, 409, 410, 411, 414, 418, 425, 427, 428, 433, 434, 440, 441, 444, 447, 448, 450, 451, 452, 454, 456, 460, 461, 462, 464, 468, 469, 470, 472, 473, 475, 476, 480, 483, 484, 485, 486, 488, 490, 491, 492, 497, 501, 511, 515, 517, 533, 534, 535, 536, 538, 541, 544, 546, 547, 548, 549, 550, 568, 576, 579, 585, 590, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603, 605, 607, 608, 610, 611, 621, 625, 626, 643, 655, 662, 665, 667, 673, 676, 683, 687, 690, 691, 692, 694, 698, 703, 707, 712, 718, 724, 729, 730, 742, 744, 748, 749, 750, 751, 754, 756, 762, 764, 768, 776, 781, 782, 783, 784, 785, 786, 787, 788, 789, 792, 802, 804, 808, 813, 815, 821, 825, 833, 834, 835, 836, 841, 843, 845, 853, 858, 859, 860, 861, 864, 865, 868, 869, 870, 872, 875, 876, 877, 883, 885, 890, 892, 893, 894, 895, 896, 898, 899, 912, 917, 925, 926, 929, 930, 932, 933, 934, 935, 938, 939, 942, 946, 950, 953, 954, 955, 956, 957, 960, 963, 965, 966, 968, 970, 973, 976, 981, 986, 987, 992, 993, 995, 1004, 1005, 1010, 1019, 1021, 1023, 1025, 1030, 1031, 1032, 1035, 1038, 1039, 1040, 1041, 1042, 1043, 1046, 1050, 1053, 1054, 1055, 1058, 1059, 1062, 1065, 1074, 1077, 1078, 1080, 1081, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1127, 1128, 1129, 1132, 1133, 1134, 1135, 1137, 1139, 1141, 1143, 1144, 1145, 1146, 1147, 1151, 1152, 1153, 1156, 1158, 1159, 1161, 1163, 1164, 1166, 1168, 1171, 1173, 1176, 1187, 1194], "scratch": [3, 42, 202, 937, 1138], "mathia": [3, 1179], "kettner": [3, 166], "novemb": [3, 23], "bodenseo": [3, 1195], "singen": 3, "bodense": [3, 1195], "spielesoftwar": 3, "entwurf": [3, 23], "systemschnittstellen": [3, 1197], "driverentwicklung": [3, 183], "powerpc": 3, "vanilla": [3, 173], "kernel": [3, 4, 5, 43, 60, 69, 82, 114, 115, 152, 155, 159, 160, 165, 166, 167, 169, 170, 172, 180, 181, 182, 183, 186, 188, 203, 210, 242, 255, 258, 265, 268, 283, 286, 290, 300, 304, 326, 332, 338, 344, 351, 371, 382, 384, 426, 448, 461, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 798, 800, 802, 803, 804, 805, 812, 813, 814, 816, 818, 819, 820, 821, 822, 823, 824, 826, 828, 829, 830, 831, 832, 837, 839, 842, 844, 845, 846, 847, 848, 851, 853, 854, 858, 864, 868, 870, 871, 872, 877, 921, 926, 929, 933, 935, 936, 938, 939, 950, 953, 956, 957, 959, 962, 973, 975, 976, 989, 991, 992, 995, 1000, 1004, 1005, 1007, 1179, 1188, 1199], "abteilungsleitung": 3, "ag": [3, 32, 175, 177, 189, 203, 245, 248, 290, 359, 457, 675, 676, 677, 678, 679, 681, 682, 683, 684, 685, 686, 687, 786, 858, 1007, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156], "realtim": [4, 5, 82, 84, 150, 183, 186, 187, 286, 366, 367, 378, 379, 384, 762, 764, 786, 831, 835, 838, 841, 852, 929, 933, 938, 939, 970, 989, 990, 992, 1001, 1198, 1199, 1200], "hardwareintegr": [4, 183], "netzwerkprogrammierung": [4, 1188, 1201], "multithread": [4, 29, 61, 63, 76, 77, 78, 79, 82, 165, 166, 170, 172, 183, 202, 206, 237, 246, 256, 273, 295, 297, 325, 374, 378, 379, 383, 384, 449, 459, 690, 718, 756, 785, 786, 978, 983, 992, 1005, 1006, 1032, 1041, 1129, 1131, 1184, 1188, 1199], "kerneldriv": 4, "rs485": 4, "In": [4, 6, 7, 23, 42, 44, 50, 62, 65, 101, 107, 108, 110, 114, 115, 127, 128, 145, 146, 150, 158, 169, 170, 171, 172, 174, 176, 179, 181, 183, 185, 186, 194, 198, 203, 208, 215, 218, 222, 223, 231, 239, 245, 248, 252, 255, 256, 258, 259, 262, 270, 286, 295, 297, 304, 313, 329, 335, 348, 350, 360, 365, 382, 406, 420, 473, 475, 478, 479, 485, 490, 495, 496, 497, 510, 511, 512, 514, 516, 517, 533, 536, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 550, 555, 557, 590, 594, 597, 598, 601, 605, 606, 613, 616, 619, 635, 641, 645, 654, 657, 658, 663, 668, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 690, 691, 699, 703, 707, 712, 730, 737, 740, 746, 750, 755, 757, 763, 771, 783, 784, 785, 786, 794, 799, 806, 831, 833, 845, 862, 865, 866, 875, 877, 879, 883, 885, 887, 889, 904, 905, 929, 931, 937, 939, 942, 946, 949, 956, 964, 967, 970, 972, 980, 986, 991, 993, 1001, 1008, 1012, 1013, 1014, 1015, 1017, 1028, 1029, 1031, 1035, 1038, 1039, 1043, 1044, 1050, 1051, 1055, 1058, 1072, 1073, 1076, 1077, 1078, 1088, 1089, 1099, 1108, 1114, 1119, 1127, 1131, 1140, 1143, 1147, 1152, 1153, 1155, 1156, 1166, 1167, 1181, 1185, 1188, 1195, 1197], "userspac": [4, 85, 89, 90, 141, 146, 155, 170, 171, 242, 258, 265, 268, 283, 286, 290, 300, 304, 326, 332, 338, 344, 383, 461, 468, 786, 791, 802, 810, 811, 819, 825, 831, 835, 841, 845, 849, 851, 869, 871, 929, 932, 936, 939, 950, 970, 972, 973, 991, 995, 1001, 1188, 1189], "host": [4, 112, 169, 176, 181, 338, 362, 376, 813, 834, 931, 937, 1008, 1010, 1019, 1142, 1147, 1159], "devic": [4, 33, 73, 76, 77, 78, 82, 88, 93, 123, 129, 146, 150, 155, 169, 170, 175, 188, 209, 217, 299, 366, 367, 368, 533, 549, 550, 760, 762, 764, 784, 786, 795, 802, 803, 804, 810, 811, 814, 815, 817, 824, 833, 835, 837, 842, 848, 849, 851, 852, 854, 866, 869, 872, 875, 915, 929, 938, 950, 953, 959, 967, 973, 992, 995, 996, 998, 1001, 1017, 1042, 1179, 1188, 1189, 1190, 1195], "libusb": [4, 170], "gadgetf": [4, 170], "modbu": [4, 187], "verschiedenen": [4, 23, 197, 214, 1181, 1182, 1194, 1200], "rto": [4, 170], "yocto": [4, 155, 159, 160, 181, 786, 833, 927, 1010, 1179], "programmiersprachen": [4, 8, 214, 224, 233, 249, 261, 1183, 1200], "incl": [4, 23, 167, 1190], "buildsystem": 4, "autoconf": [4, 60, 181], "automak": [4, 176, 181, 1021, 1191], "meson": [4, 176, 181, 999, 1003, 1021], "ninja": [4, 32, 181, 475, 1009, 1021], "make": [4, 13, 17, 43, 44, 45, 60, 62, 69, 72, 74, 82, 84, 113, 130, 131, 133, 141, 146, 155, 160, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 185, 186, 190, 191, 194, 198, 199, 202, 206, 207, 208, 212, 221, 222, 229, 231, 232, 243, 246, 258, 262, 275, 277, 299, 304, 307, 312, 321, 328, 365, 368, 384, 417, 429, 433, 441, 448, 450, 452, 462, 468, 472, 475, 476, 477, 481, 483, 484, 486, 488, 490, 491, 492, 495, 511, 512, 517, 518, 535, 548, 550, 562, 568, 573, 579, 597, 608, 610, 612, 615, 627, 662, 664, 677, 690, 698, 703, 707, 744, 749, 750, 754, 764, 771, 780, 781, 794, 801, 802, 806, 808, 811, 813, 833, 834, 850, 862, 872, 876, 878, 899, 912, 931, 932, 937, 938, 939, 960, 963, 965, 986, 989, 991, 993, 995, 1000, 1004, 1007, 1019, 1021, 1022, 1023, 1024, 1028, 1032, 1035, 1038, 1050, 1081, 1088, 1101, 1109, 1136, 1149, 1186, 1187, 1197], "perl": [4, 181, 732, 922, 1058], "leider": [4, 178, 245, 258, 265, 280, 1179, 1181], "objektorientiert": [4, 383, 1183], "ooa": 4, "ood": 4, "unit": [4, 76, 77, 78, 82, 86, 88, 101, 110, 128, 129, 136, 149, 150, 172, 190, 205, 206, 209, 210, 221, 230, 248, 262, 287, 288, 295, 299, 312, 328, 374, 378, 379, 455, 474, 475, 488, 514, 537, 543, 547, 576, 607, 736, 764, 765, 786, 787, 939, 991, 1073, 1081, 1131, 1143, 1165, 1186, 1187], "test": [4, 16, 17, 33, 40, 76, 77, 78, 82, 86, 88, 101, 128, 131, 144, 146, 150, 166, 170, 172, 173, 175, 176, 177, 183, 186, 189, 190, 196, 197, 198, 201, 205, 206, 209, 221, 227, 230, 243, 245, 246, 248, 258, 275, 277, 297, 304, 313, 325, 329, 335, 374, 376, 378, 384, 385, 397, 459, 472, 473, 479, 483, 490, 491, 492, 493, 494, 495, 496, 499, 500, 502, 503, 512, 514, 515, 537, 539, 540, 541, 542, 543, 544, 545, 546, 548, 551, 552, 553, 554, 556, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 573, 585, 587, 592, 593, 594, 605, 606, 608, 609, 611, 612, 670, 681, 682, 683, 684, 685, 686, 695, 697, 700, 701, 702, 733, 739, 744, 748, 749, 750, 751, 753, 766, 780, 781, 782, 784, 786, 787, 791, 823, 833, 836, 838, 841, 849, 893, 931, 932, 937, 960, 1015, 1023, 1054, 1063, 1073, 1077, 1080, 1100, 1125, 1131, 1137, 1138, 1143, 1151, 1170, 1172, 1174, 1177, 1187], "driven": [4, 45, 75, 82, 86, 170, 183, 186, 197, 206, 221, 248, 286, 288, 314, 317, 384, 472, 499, 609, 611, 612, 991, 997, 998, 1156, 1164, 1187], "develop": [4, 5, 21, 45, 75, 77, 82, 84, 86, 107, 108, 126, 150, 171, 173, 175, 176, 177, 181, 183, 186, 194, 197, 205, 206, 209, 214, 221, 227, 232, 233, 240, 242, 243, 248, 253, 278, 283, 288, 313, 314, 317, 329, 364, 366, 367, 376, 382, 384, 450, 462, 468, 472, 477, 485, 496, 510, 538, 539, 540, 541, 542, 543, 544, 545, 548, 549, 550, 590, 609, 611, 612, 665, 689, 763, 785, 786, 787, 790, 793, 795, 796, 798, 800, 803, 805, 806, 807, 809, 812, 814, 816, 818, 820, 822, 824, 826, 828, 830, 832, 833, 834, 837, 839, 842, 844, 848, 851, 854, 863, 866, 867, 869, 872, 929, 931, 932, 952, 958, 960, 968, 970, 984, 987, 990, 992, 1008, 1009, 1012, 1013, 1014, 1015, 1016, 1018, 1024, 1056, 1086, 1088, 1131, 1164, 1165, 1186, 1199], "gui": [4, 129, 145, 169, 175, 181, 185, 248, 372, 373, 872, 975, 1197], "gtk": [4, 166], "qt": 4, "fast": [5, 43, 126, 177, 185, 209, 231, 246, 248, 262, 271, 321, 462, 568, 740, 754, 1079, 1160, 1196], "40": [5, 7, 23, 110, 150, 166, 173, 180, 192, 203, 213, 218, 220, 223, 226, 229, 234, 235, 239, 242, 245, 250, 252, 255, 258, 262, 265, 268, 270, 271, 280, 283, 287, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 357, 360, 396, 474, 495, 497, 511, 581, 582, 603, 749, 750, 751, 784, 915, 934, 937, 938, 939, 1019, 1033, 1034, 1058], "jahren": 5, "wesentlichen": [5, 23, 205, 1180], "programmier": [5, 37, 382, 383, 1182, 1183, 1188, 1190, 1191, 1196, 1197], "bin": [5, 13, 23, 50, 62, 126, 128, 129, 133, 136, 139, 141, 145, 166, 169, 171, 181, 190, 193, 203, 220, 230, 239, 242, 245, 250, 255, 258, 262, 265, 268, 280, 283, 288, 290, 300, 304, 326, 332, 338, 344, 348, 365, 373, 475, 476, 477, 478, 480, 481, 482, 483, 486, 488, 533, 548, 549, 811, 833, 865, 868, 870, 875, 878, 889, 893, 894, 918, 919, 924, 937, 939, 955, 962, 965, 971, 985, 986, 995, 1007, 1008, 1009, 1019, 1021, 1024, 1028, 1034, 1058, 1085, 1086, 1109, 1118, 1119, 1134, 1147, 1159, 1164, 1166, 1178], "ich": [5, 23, 68, 178, 179, 187, 188, 189, 193, 203, 213, 221, 252, 304, 365, 383, 1142, 1178, 1179, 1188, 1195, 1196, 1202], "heut": [5, 383, 1183, 1198], "feinen": 5, "situat": [5, 124, 126, 158, 170, 172, 181, 202, 229, 546, 547, 550, 562, 624, 701, 827, 833, 884, 886, 930, 946, 965, 993, 1010, 1019, 1022, 1023, 1071, 1179, 1184], "repertoir": [5, 8, 28, 185, 214, 224, 496], "schulungsmateri": [5, 23], "anbieten": 5, "k\u00f6nnen": [5, 23, 150, 184, 187, 197, 203, 215, 228, 365, 366, 370, 383, 921, 1178, 1180, 1181, 1191, 1201, 1202], "da": [5, 7, 8, 68, 178, 179, 184, 187, 188, 189, 190, 197, 205, 209, 213, 214, 218, 221, 223, 224, 226, 230, 233, 234, 235, 239, 242, 249, 250, 252, 255, 258, 259, 261, 263, 271, 273, 280, 290, 300, 304, 322, 325, 332, 334, 338, 348, 357, 360, 365, 370, 383, 921, 1178, 1179, 1180, 1181, 1182, 1183, 1188, 1190, 1194, 1195, 1196, 1197, 1198, 1201, 1202], "sich": [5, 23, 37, 150, 178, 179, 184, 187, 188, 189, 193, 203, 205, 213, 234, 252, 255, 265, 366, 1178, 1179, 1181, 1182, 1183, 1188, 1191, 1195, 1196, 1197, 1200, 1201, 1202], "jahrelangen": 5, "erfahrung": [5, 259, 1180], "entwickelt": [5, 197, 1188, 1195, 1197], "hat": [5, 8, 23, 37, 150, 173, 178, 179, 187, 188, 189, 190, 193, 197, 203, 205, 213, 214, 218, 220, 224, 235, 255, 310, 322, 358, 365, 383, 1057, 1178, 1181, 1183, 1188, 1195, 1196, 1197, 1200, 1201, 1202], "al": [5, 8, 23, 32, 101, 150, 178, 179, 184, 187, 188, 189, 193, 195, 197, 205, 214, 215, 222, 224, 226, 234, 252, 253, 255, 263, 267, 309, 366, 383, 600, 749, 858, 894, 915, 920, 921, 953, 1131, 1178, 1181, 1183, 1188, 1194, 1195, 1196, 1197, 1200], "einzelunternehm": [5, 23], "werd": [5, 1178], "erster": 5, "lini": 5, "firmen": [5, 23], "gebucht": [5, 11, 179, 193, 205, 383], "um": [5, 23, 32, 150, 178, 179, 187, 189, 193, 197, 203, 213, 214, 252, 265, 280, 344, 383, 1178, 1180, 1181, 1182, 1183, 1188, 1194, 1198], "mitarbeit": [5, 23], "weiterzubilden": 5, "entwickeln": [5, 197], "oder": [5, 23, 150, 166, 187, 193, 197, 203, 214, 215, 220, 234, 243, 252, 259, 893, 921, 1156, 1178, 1181, 1182, 1188, 1191, 1194, 1195, 1196, 1198, 1201, 1202], "damit": [5, 23, 178, 203, 233, 259, 365, 370, 383, 1179, 1197, 1201], "arbeiten": [5, 23, 203, 214, 1194], "softwaretest": 5, "produktingenieur": 5, "program": [5, 8, 29, 30, 42, 61, 63, 76, 77, 78, 80, 82, 88, 89, 94, 101, 105, 114, 115, 118, 119, 124, 127, 128, 129, 133, 136, 139, 141, 145, 146, 150, 163, 165, 166, 167, 169, 170, 171, 172, 175, 177, 180, 181, 183, 185, 188, 190, 191, 193, 194, 198, 205, 206, 207, 209, 210, 211, 216, 221, 222, 227, 230, 231, 237, 239, 240, 243, 246, 249, 253, 256, 259, 260, 261, 267, 272, 276, 285, 288, 289, 292, 295, 297, 305, 306, 307, 309, 313, 329, 331, 337, 339, 350, 351, 352, 353, 354, 355, 356, 362, 364, 365, 366, 367, 368, 369, 370, 371, 376, 378, 379, 382, 384, 389, 391, 392, 395, 397, 398, 400, 401, 402, 403, 406, 408, 411, 413, 418, 431, 440, 444, 445, 447, 449, 451, 452, 459, 461, 464, 466, 467, 468, 469, 473, 474, 475, 479, 480, 484, 485, 488, 490, 496, 500, 510, 511, 512, 516, 517, 518, 533, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 548, 550, 555, 557, 579, 585, 590, 591, 597, 598, 613, 616, 619, 635, 641, 645, 654, 655, 657, 658, 663, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 692, 699, 730, 732, 735, 740, 745, 746, 750, 755, 757, 763, 771, 783, 785, 786, 787, 791, 802, 804, 813, 833, 847, 849, 850, 863, 865, 866, 867, 868, 869, 870, 873, 875, 876, 877, 888, 893, 896, 922, 926, 929, 930, 932, 935, 936, 937, 938, 946, 950, 953, 955, 956, 957, 958, 959, 960, 963, 964, 965, 966, 968, 972, 973, 977, 981, 984, 987, 990, 991, 992, 993, 997, 998, 1000, 1005, 1006, 1008, 1015, 1019, 1021, 1024, 1025, 1026, 1031, 1032, 1034, 1040, 1041, 1042, 1043, 1054, 1057, 1061, 1062, 1065, 1066, 1069, 1073, 1074, 1076, 1083, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1132, 1133, 1134, 1136, 1137, 1138, 1140, 1141, 1143, 1144, 1145, 1147, 1151, 1158, 1159, 1161, 1163, 1164, 1168, 1171, 1180, 1181, 1182, 1183, 1184, 1186, 1187, 1189, 1190, 1191], "gem\u00e4\u00df": [5, 23, 179], "herkunft": [5, 1202], "mein": [5, 23, 178, 179, 184, 188, 189, 203, 213, 214, 233, 338, 344, 383, 932, 1000, 1179, 1194], "muttersprach": [5, 23], "ist": [5, 7, 8, 150, 178, 179, 184, 187, 188, 189, 193, 197, 205, 213, 214, 218, 220, 223, 224, 226, 229, 233, 235, 239, 242, 243, 248, 249, 250, 252, 255, 258, 261, 265, 271, 280, 290, 304, 322, 332, 338, 348, 357, 360, 361, 365, 370, 383, 428, 993, 1149, 1178, 1179, 1180, 1181, 1182, 1183, 1188, 1191, 1194, 1195, 1196, 1197, 1198, 1200, 1201, 1202], "umfasst": [5, 179], "weiterf\u00fchrend": [5, 23], "materi": [5, 8, 12, 13, 14, 17, 23, 27, 69, 101, 110, 148, 163, 166, 167, 170, 184, 185, 202, 205, 206, 207, 209, 211, 212, 214, 216, 217, 221, 224, 227, 230, 232, 233, 236, 237, 240, 243, 246, 248, 249, 261, 264, 267, 270, 274, 275, 277, 279, 282, 289, 292, 298, 299, 303, 309, 313, 314, 317, 320, 321, 324, 325, 329, 331, 337, 343, 347, 365, 373, 383, 475, 477, 478, 479, 480, 481, 483, 484, 486, 488, 490, 491, 492, 493, 494, 495, 497, 499, 502, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 546, 548, 551, 552, 553, 554, 556, 558, 559, 560, 561, 563, 564, 565, 566, 567, 590, 670, 750, 784, 787, 935, 946, 971, 974, 1031, 1032, 1034, 1054, 1055, 1083, 1133, 1145, 1146, 1158, 1169, 1173, 1181, 1183, 1186, 1188, 1189, 1195], "stark": 5, "gefragt": 5, "sind": [5, 7, 23, 150, 178, 179, 188, 189, 193, 197, 205, 214, 215, 220, 223, 226, 242, 259, 338, 365, 370, 383, 920, 921, 993, 1178, 1181, 1182, 1183, 1188, 1190, 1191, 1194, 1195, 1197, 1198, 1201, 1202], "letzter": 5, "betreffend": 5, "neuen": [5, 1183], "standard": [5, 34, 35, 36, 38, 110, 128, 150, 162, 177, 198, 202, 207, 209, 211, 232, 239, 245, 254, 255, 258, 262, 273, 286, 288, 312, 328, 335, 356, 365, 366, 367, 368, 370, 386, 387, 388, 394, 395, 400, 401, 405, 450, 538, 557, 576, 590, 591, 635, 641, 645, 652, 653, 654, 655, 657, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 707, 712, 738, 740, 742, 743, 784, 786, 873, 876, 877, 893, 926, 940, 956, 962, 965, 978, 981, 1005, 1035, 1054, 1055, 1071, 1144, 1156, 1160, 1174, 1180, 1181, 1183, 1184, 1185, 1186, 1190], "absolut": [5, 8, 29, 69, 94, 103, 128, 168, 172, 177, 183, 186, 193, 203, 206, 207, 209, 211, 222, 227, 231, 239, 245, 246, 253, 255, 256, 258, 259, 262, 267, 270, 276, 279, 282, 285, 286, 289, 292, 298, 299, 303, 306, 307, 309, 314, 317, 320, 321, 324, 325, 331, 337, 343, 347, 351, 352, 353, 354, 355, 356, 362, 364, 365, 368, 383, 468, 496, 510, 538, 539, 540, 541, 542, 543, 544, 545, 548, 590, 760, 763, 785, 786, 787, 831, 843, 859, 860, 861, 862, 863, 866, 867, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 893, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 913, 929, 949, 952, 958, 960, 968, 970, 984, 987, 990, 992, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1024, 1032, 1039, 1040, 1041, 1042, 1046, 1054, 1065, 1074, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1132, 1133, 1137, 1138, 1141, 1144, 1145, 1147, 1151, 1154, 1156, 1158, 1161, 1163, 1168], "beginn": [5, 8, 29, 32, 82, 94, 167, 168, 178, 183, 186, 197, 203, 206, 207, 209, 211, 222, 237, 240, 241, 243, 246, 253, 256, 259, 263, 270, 282, 289, 292, 298, 299, 309, 314, 317, 320, 321, 324, 325, 331, 337, 343, 347, 351, 352, 353, 354, 355, 356, 364, 365, 368, 410, 718, 786, 787, 1032, 1039, 1040, 1041, 1042, 1046, 1054, 1056, 1062, 1065, 1074, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1132, 1133, 1137, 1138, 1141, 1144, 1145, 1147, 1151, 1158, 1161, 1163, 1168], "advanc": [5, 8, 29, 82, 94, 167, 177, 183, 186, 191, 194, 197, 207, 211, 219, 222, 227, 237, 242, 243, 253, 267, 289, 309, 331, 337, 347, 351, 352, 353, 354, 355, 356, 364, 365, 366, 367, 368, 382, 460, 462, 464, 469, 470, 622, 692, 730, 765, 783, 785, 786, 787, 974, 1031, 1032, 1034, 1039, 1040, 1041, 1042, 1046, 1054, 1056, 1065, 1074, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1132, 1133, 1136, 1137, 1138, 1141, 1144, 1145, 1147, 1151, 1158, 1161, 1163, 1168, 1171, 1185], "product": [5, 8, 29, 38, 43, 82, 89, 94, 172, 183, 186, 206, 207, 209, 211, 227, 246, 253, 256, 259, 267, 270, 279, 282, 289, 292, 294, 298, 299, 303, 309, 314, 317, 320, 321, 324, 325, 331, 337, 343, 347, 351, 352, 353, 354, 355, 356, 364, 365, 368, 468, 472, 488, 771, 786, 787, 930, 939, 1010, 1024, 1032, 1039, 1040, 1041, 1042, 1046, 1054, 1065, 1074, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1132, 1133, 1137, 1138, 1141, 1144, 1145, 1147, 1151, 1158, 1161, 1163, 1168], "gro\u00dfe": [5, 37, 203, 1197], "thema": [5, 23, 188, 205, 259, 273, 365, 370, 1178], "einfach": [5, 189, 203, 214, 218, 300, 1182, 1183, 1188, 1194, 1196, 1198, 1200, 1202], "doch": [5, 226, 300, 310, 383, 1200], "m\u00e4chtig": 5, "vermutlich": [5, 203, 1200], "grund": [5, 1181, 1188], "warum": [5, 7, 23, 214, 215, 223, 265, 1188, 1194, 1195, 1200, 1202], "gern": [5, 203, 1178, 1188, 1195], "nachgefragt": 5, "werden": [5, 8, 37, 150, 178, 179, 184, 187, 188, 189, 197, 203, 205, 214, 215, 218, 224, 233, 234, 249, 261, 273, 921, 1178, 1179, 1180, 1181, 1182, 1183, 1188, 1190, 1191, 1194, 1195, 1197, 1198, 1200, 1201, 1202], "deren": [5, 23, 187, 209, 1183, 1196, 1200, 1201], "kernkompetenz": 5, "liegt": [5, 23, 178, 189, 193, 262, 1182, 1198], "sondern": [5, 189, 203, 214, 1179, 1188, 1191, 1194, 1201], "eher": [5, 178, 214, 1180, 1194], "beiwerk": 5, "ihrem": [5, 23, 1178], "eigentlichen": 5, "job": [5, 181, 202, 212, 271, 455, 930, 955, 956, 957, 1026, 1044, 1056, 1060, 1136, 1164], "schreiben": [5, 193, 215, 365, 366, 370, 1181, 1198, 1200], "physik": [5, 193], "z": [5, 38, 113, 189, 190, 193, 203, 213, 245, 246, 258, 261, 283, 310, 338, 348, 395, 405, 416, 417, 478, 611, 674, 744, 859, 920, 1005, 1057, 1179, 1188, 1190, 1195], "b": [5, 7, 21, 31, 32, 38, 62, 77, 78, 111, 118, 122, 125, 152, 173, 185, 189, 190, 191, 193, 203, 208, 213, 218, 220, 223, 226, 229, 236, 239, 242, 243, 245, 250, 252, 255, 258, 262, 265, 268, 271, 280, 283, 287, 290, 300, 304, 310, 315, 322, 326, 332, 338, 344, 348, 357, 359, 360, 361, 397, 405, 407, 416, 432, 446, 449, 462, 592, 594, 602, 603, 609, 610, 611, 612, 617, 661, 662, 667, 668, 697, 703, 737, 744, 754, 784, 833, 864, 876, 893, 915, 920, 921, 937, 938, 939, 978, 994, 1023, 1029, 1038, 1041, 1053, 1061, 1062, 1068, 1071, 1073, 1075, 1076, 1081, 1144, 1147, 1159, 1179, 1188, 1190, 1195], "guter": [5, 1179], "ersatz": [5, 214, 1194], "matlab": [5, 191, 193, 246, 383, 1130, 1133], "tester": [5, 167, 1164, 1190], "basic": [5, 10, 28, 29, 31, 76, 77, 78, 81, 82, 87, 101, 105, 107, 110, 114, 115, 128, 132, 133, 134, 135, 138, 141, 145, 146, 166, 167, 170, 172, 177, 180, 185, 186, 191, 194, 197, 206, 219, 232, 237, 248, 256, 258, 261, 262, 286, 288, 295, 296, 297, 305, 313, 323, 327, 329, 335, 364, 365, 366, 367, 368, 370, 372, 376, 382, 384, 434, 440, 444, 447, 451, 460, 462, 464, 466, 467, 469, 470, 477, 479, 480, 487, 494, 496, 497, 510, 538, 539, 540, 541, 542, 543, 544, 545, 548, 555, 557, 568, 584, 585, 590, 616, 624, 629, 641, 645, 653, 654, 657, 658, 662, 663, 664, 675, 682, 683, 684, 685, 686, 687, 692, 695, 696, 698, 701, 703, 730, 747, 763, 771, 781, 783, 785, 786, 790, 793, 795, 800, 803, 810, 814, 824, 833, 835, 837, 842, 848, 851, 853, 854, 856, 860, 861, 867, 869, 874, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 913, 923, 929, 935, 936, 941, 942, 943, 944, 945, 955, 956, 957, 958, 960, 965, 968, 970, 978, 984, 987, 990, 992, 1000, 1003, 1004, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1024, 1062, 1090, 1117, 1118, 1129, 1130, 1139, 1145, 1151, 1152, 1154, 1169, 1173, 1185, 1186, 1199], "einf\u00fchrung": [5, 193, 197, 210, 212, 384, 1054, 1180, 1185, 1186, 1188, 1197, 1199], "anhand": [5, 6, 188, 197, 210, 212, 214, 215, 264, 382, 384, 1180, 1186, 1194, 1199], "beispielen": [5, 8, 184, 210, 212, 214, 224, 233, 249, 261, 383, 384, 1186, 1199], "memori": [5, 42, 43, 49, 55, 77, 82, 84, 101, 113, 114, 115, 150, 165, 169, 170, 171, 173, 175, 182, 186, 190, 191, 192, 195, 197, 202, 208, 209, 217, 221, 222, 226, 239, 245, 248, 255, 258, 273, 295, 297, 299, 304, 321, 324, 349, 383, 384, 386, 400, 406, 428, 429, 435, 448, 450, 451, 453, 459, 460, 462, 464, 468, 469, 470, 497, 512, 514, 516, 517, 518, 520, 522, 523, 530, 531, 538, 555, 557, 558, 582, 590, 591, 596, 597, 607, 625, 626, 627, 643, 662, 672, 687, 690, 692, 701, 728, 730, 735, 742, 747, 749, 750, 751, 771, 783, 784, 785, 786, 795, 800, 803, 805, 810, 814, 824, 828, 829, 830, 833, 835, 837, 838, 842, 845, 851, 854, 864, 869, 871, 877, 929, 946, 955, 975, 977, 978, 991, 992, 1024, 1028, 1041, 1042, 1055, 1062, 1143, 1181, 1182, 1185, 1189, 1190, 1199], "weiter": [5, 23, 37, 178, 179, 203, 205, 214, 228, 252, 270, 300, 348, 921, 1178, 1188, 1194, 1195, 1197, 1198, 1202], "standbein": [5, 1188], "mehreren": [5, 150, 203, 219, 1201], "auspr\u00e4gungen": 5, "commandlin": [5, 8, 29, 31, 42, 84, 94, 103, 128, 163, 166, 188, 190, 210, 212, 222, 224, 227, 231, 237, 248, 249, 253, 259, 260, 261, 264, 267, 282, 289, 292, 298, 302, 303, 308, 309, 320, 330, 331, 336, 337, 342, 343, 346, 347, 365, 366, 367, 368, 369, 383, 440, 444, 447, 451, 460, 464, 469, 470, 473, 475, 485, 496, 510, 536, 538, 539, 540, 541, 542, 543, 544, 545, 548, 590, 692, 730, 763, 783, 785, 786, 802, 833, 856, 860, 861, 862, 863, 866, 867, 873, 874, 875, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 894, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 913, 923, 929, 930, 938, 952, 958, 960, 968, 970, 984, 986, 987, 990, 992, 1006, 1007, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1025, 1054, 1084, 1087, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1097, 1098, 1100, 1102, 1103, 1104, 1105, 1106, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1180, 1188, 1190, 1191, 1195, 1196, 1197], "konzept": [5, 23, 383, 1188, 1190, 1197], "zielpublikum": 5, "deckt": 5, "ungef\u00e4hr": [5, 178], "mehr": [5, 11, 23, 178, 187, 189, 213, 219, 239, 348, 383, 1178, 1179, 1181, 1183, 1188, 1195, 1196, 1197, 1202], "kernentwickl": 5, "themen": [5, 23, 184, 195, 197, 1188], "applikationsentwicklung": 5, "direkt": [5, 23, 197, 1181, 1197], "systemschnittstel": 5, "schritt": 5, "geht": [5, 7, 8, 23, 68, 178, 179, 187, 189, 197, 203, 213, 214, 218, 223, 224, 233, 234, 249, 255, 261, 271, 344, 360, 383, 921], "nur": [5, 23, 150, 178, 184, 188, 189, 193, 203, 205, 213, 214, 218, 220, 228, 250, 348, 360, 383, 1180, 1181, 1188, 1191, 1194, 1195, 1196, 1198, 1200, 1201, 1202], "mutig": 5, "pool": [5, 87, 231, 853, 992, 994], "absprach": [5, 1178], "individuel": [5, 23, 205, 1178], "zusammengestellt": 5, "schulungsverlauf": 5, "meisten": [5, 23, 197, 203, 383, 1179, 1200], "recht": [5, 7, 68, 134, 178, 179, 189, 197, 203, 214, 223, 338, 1194, 1195], "dynamisch": [5, 197, 228, 1181, 1183, 1198], "teilnehm": [5, 184, 193, 197, 205, 383, 1188, 1195], "haben": [5, 178, 179, 188, 193, 197, 205, 213, 214, 226, 383, 651, 1179, 1180, 1181, 1182, 1183, 1188, 1194, 1196, 1197, 1198, 1201], "oft": [5, 23, 178, 203, 205, 1182], "bed\u00fcrfniss": [5, 23, 205], "vorab": [5, 184, 197, 233], "bekannt": [5, 23, 203, 1183], "waren": [5, 188, 193, 1179, 1183], "wodurch": [5, 23], "auch": [5, 23, 150, 178, 179, 184, 189, 193, 203, 215, 218, 220, 226, 229, 234, 255, 259, 265, 290, 344, 360, 361, 383, 1178, 1179, 1180, 1181, 1182, 1188, 1191, 1195, 1200, 1202], "mal": [5, 179, 193, 203, 214, 265, 332, 383, 1179, 1183, 1194], "agenda": [5, 23, 27, 194, 299, 303, 307, 309, 313, 321, 325, 329, 331, 332, 335, 337, 343, 347], "abgewichen": 5, "wird": [5, 7, 23, 150, 178, 179, 184, 187, 188, 189, 197, 203, 213, 214, 220, 223, 252, 338, 344, 348, 365, 370, 383, 1178, 1179, 1182, 1183, 1188, 1190, 1191, 1194, 1195, 1196, 1197, 1198, 1200, 1201, 1202], "verh\u00e4ltni": 5, "vortrag": [5, 188, 1178], "\u00fcbungen": [5, 8, 150, 184, 197, 205, 214, 215, 224, 233, 249, 261, 383, 1181, 1188, 1190, 1194, 1197], "ca": [5, 23, 32, 178, 180, 773, 1159], "50": [5, 7, 110, 113, 180, 191, 203, 208, 213, 218, 220, 223, 226, 229, 235, 239, 242, 245, 250, 252, 258, 262, 265, 268, 271, 280, 283, 287, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 357, 360, 361, 366, 367, 457, 459, 475, 546, 581, 582, 915, 937, 938, 939, 1033, 1056, 1076, 1088, 1135, 1136, 1148, 1164], "kleiner": [5, 7, 223, 920], "den": [5, 150, 179, 187, 188, 189, 193, 197, 203, 205, 213, 214, 219, 226, 233, 262, 310, 365, 366, 370, 383, 855, 1179, 1180, 1181, 1182, 1183, 1188, 1191, 1194, 1195, 1201, 1202], "teilnehmern": [5, 383, 1202], "pc": [5, 82, 112, 166, 222, 286, 351, 368, 371, 550, 931, 932, 938, 1179], "erledigt": 5, "speziel": [5, 184, 213, 214, 273, 1191, 1194, 1197, 1201], "fortgeschrittenen": 5, "programmierthemen": 5, "gruppenprojekt": 5, "gegenstand": [5, 1178], "denen": [5, 23, 178, 1188], "zusammenarbeiten": 5, "austauschmedium": 5, "solch": 5, "set": [5, 9, 14, 21, 29, 33, 61, 63, 69, 82, 89, 94, 112, 128, 129, 152, 170, 171, 172, 173, 174, 175, 176, 177, 181, 185, 186, 187, 190, 191, 202, 203, 206, 207, 209, 210, 211, 214, 215, 219, 220, 221, 225, 227, 228, 231, 233, 237, 238, 240, 241, 243, 244, 246, 247, 249, 251, 253, 254, 255, 260, 261, 263, 264, 266, 267, 269, 275, 277, 279, 281, 282, 284, 286, 288, 289, 291, 292, 295, 296, 297, 299, 301, 302, 303, 305, 308, 309, 311, 314, 317, 320, 321, 323, 324, 325, 327, 330, 331, 333, 336, 337, 339, 342, 343, 345, 346, 347, 349, 365, 370, 372, 383, 385, 400, 406, 423, 428, 429, 438, 441, 453, 454, 462, 468, 476, 477, 478, 480, 482, 484, 485, 487, 492, 495, 497, 512, 517, 526, 527, 531, 540, 541, 546, 547, 548, 549, 566, 594, 595, 609, 610, 611, 612, 625, 694, 703, 718, 748, 749, 764, 784, 786, 804, 817, 819, 829, 833, 838, 843, 865, 872, 878, 894, 930, 932, 937, 939, 946, 951, 953, 959, 967, 971, 975, 980, 988, 989, 992, 993, 1004, 1006, 1007, 1008, 1019, 1022, 1028, 1031, 1032, 1035, 1044, 1045, 1054, 1055, 1058, 1062, 1067, 1086, 1108, 1119, 1126, 1127, 1129, 1131, 1133, 1136, 1137, 1138, 1140, 1144, 1158, 1159, 1171, 1173, 1176, 1187, 1194], "gew\u00f6hnlich": [5, 23], "github": [5, 8, 23, 42, 44, 69, 101, 110, 113, 128, 152, 154, 166, 167, 177, 181, 182, 184, 185, 188, 190, 197, 198, 199, 209, 211, 216, 217, 221, 222, 224, 231, 232, 233, 237, 239, 240, 243, 246, 248, 249, 253, 256, 259, 261, 264, 267, 270, 274, 275, 277, 278, 279, 282, 286, 289, 295, 296, 297, 299, 303, 307, 309, 313, 314, 317, 321, 325, 329, 331, 335, 337, 343, 347, 348, 364, 369, 370, 371, 372, 379, 384, 385, 537, 568, 610, 789, 792, 794, 797, 799, 802, 811, 813, 823, 825, 833, 834, 835, 836, 841, 845, 932, 937, 939, 1007, 1008, 1009, 1011, 1017, 1021, 1023, 1024, 1025], "endprodukt": 5, "bleibt": [5, 23, 1198], "homepag": [5, 13, 174, 176, 184, 187, 188, 202, 229, 237, 239, 274, 275, 277, 459, 1019, 1164], "erhalten": 5, "hier": [5, 8, 17, 23, 68, 178, 179, 184, 187, 188, 190, 193, 197, 205, 209, 213, 214, 220, 224, 230, 233, 234, 243, 249, 252, 261, 262, 304, 322, 383, 1178, 1181, 1188, 1194, 1195, 1197, 1198, 1200], "mix": [5, 29, 209, 216, 227, 230, 237, 240, 243, 244, 248, 250, 253, 282, 289, 302, 303, 308, 309, 311, 330, 331, 336, 337, 342, 343, 346, 347, 411, 450, 453, 454, 456, 458, 601, 786, 1059, 1062, 1078, 1081, 1090, 1100, 1103, 1104, 1105, 1106, 1110, 1111, 1112, 1113, 1114, 1115, 1129, 1130, 1144, 1149, 1155, 1199], "j\u00fcngeren": 5, "2023": [5, 59, 65, 100, 110, 127, 128, 287, 288, 291, 294, 305, 311, 322, 333, 343, 345, 382, 473, 474, 743], "10": [5, 7, 31, 62, 101, 106, 109, 110, 113, 128, 159, 166, 172, 173, 178, 180, 181, 191, 192, 203, 208, 210, 214, 215, 218, 220, 223, 226, 227, 229, 234, 235, 236, 237, 239, 240, 242, 243, 245, 250, 252, 255, 258, 262, 265, 267, 268, 270, 271, 281, 283, 288, 290, 297, 298, 299, 300, 303, 304, 309, 310, 315, 319, 322, 326, 332, 338, 344, 348, 351, 358, 359, 360, 361, 364, 378, 379, 382, 394, 396, 398, 400, 408, 426, 433, 450, 452, 466, 476, 486, 516, 536, 538, 539, 541, 544, 547, 552, 555, 575, 576, 581, 582, 584, 585, 590, 600, 603, 605, 612, 679, 680, 686, 690, 697, 701, 702, 728, 740, 749, 750, 751, 752, 762, 786, 823, 833, 841, 862, 864, 870, 889, 893, 895, 915, 917, 921, 924, 932, 937, 938, 939, 956, 965, 973, 1000, 1003, 1007, 1008, 1009, 1021, 1022, 1028, 1033, 1034, 1044, 1062, 1063, 1070, 1092, 1093, 1113, 1119, 1130, 1131, 1135, 1136, 1159, 1164, 1176, 1194], "09": [5, 101, 126, 166, 173, 182, 206, 222, 287, 322, 332, 362, 382, 474, 477, 915, 938, 939, 963, 1058, 1135], "11": [5, 7, 40, 62, 110, 128, 166, 167, 182, 191, 192, 197, 198, 202, 203, 208, 209, 210, 214, 215, 218, 220, 223, 226, 229, 232, 234, 235, 236, 239, 244, 245, 246, 250, 252, 255, 258, 262, 265, 268, 271, 274, 275, 280, 284, 287, 290, 294, 300, 304, 310, 318, 321, 322, 333, 334, 338, 344, 348, 357, 358, 359, 360, 361, 368, 371, 378, 379, 382, 384, 386, 400, 466, 468, 482, 494, 547, 575, 584, 585, 591, 593, 594, 596, 600, 602, 603, 609, 611, 621, 626, 628, 633, 646, 647, 648, 651, 664, 688, 692, 695, 698, 699, 704, 705, 706, 707, 717, 729, 730, 731, 732, 733, 734, 735, 737, 740, 741, 744, 746, 749, 750, 752, 753, 755, 762, 763, 764, 767, 769, 771, 783, 784, 786, 787, 858, 871, 915, 924, 978, 983, 1007, 1008, 1009, 1057, 1063, 1068, 1086, 1120, 1122, 1126, 1128, 1130, 1133, 1135, 1136, 1147, 1164, 1176, 1183, 1184, 1185, 1194], "introduct": [5, 29, 76, 77, 78, 82, 101, 102, 103, 110, 128, 146, 149, 150, 183, 186, 231, 232, 246, 248, 256, 259, 267, 270, 276, 278, 279, 285, 286, 288, 295, 298, 299, 303, 306, 314, 317, 320, 321, 324, 347, 364, 369, 373, 382, 384, 418, 427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 510, 538, 539, 540, 541, 542, 543, 544, 545, 548, 555, 557, 568, 590, 598, 613, 616, 619, 635, 641, 645, 654, 657, 658, 663, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 690, 692, 699, 711, 718, 730, 746, 755, 763, 771, 783, 785, 786, 787, 835, 856, 860, 861, 862, 863, 866, 874, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 913, 923, 928, 929, 941, 942, 943, 944, 945, 952, 958, 960, 968, 970, 973, 984, 987, 990, 992, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1054, 1127, 1128, 1129, 1138, 1158, 1163, 1185, 1199], "07": [5, 101, 110, 128, 166, 180, 182, 193, 206, 235, 236, 270, 275, 287, 288, 294, 310, 364, 378, 379, 382, 480, 860, 861, 937, 1058, 1086, 1130, 1135], "18": [5, 7, 62, 173, 180, 181, 185, 191, 192, 208, 213, 218, 220, 223, 226, 229, 230, 234, 235, 239, 242, 243, 245, 251, 252, 258, 262, 265, 268, 271, 280, 284, 286, 287, 290, 294, 300, 304, 310, 315, 322, 326, 332, 344, 348, 358, 360, 361, 364, 382, 600, 665, 729, 737, 749, 786, 797, 806, 833, 870, 876, 878, 912, 915, 929, 939, 963, 965, 999, 1010, 1017, 1018, 1019, 1022, 1050, 1051, 1086, 1093, 1135, 1136], "For": [5, 40, 126, 128, 168, 169, 170, 174, 177, 180, 182, 183, 185, 186, 191, 194, 199, 200, 202, 206, 222, 227, 230, 237, 240, 243, 248, 258, 261, 263, 267, 275, 277, 278, 279, 303, 309, 314, 325, 376, 382, 384, 396, 397, 403, 418, 427, 434, 440, 444, 447, 449, 451, 460, 464, 469, 470, 487, 512, 568, 593, 600, 604, 617, 626, 646, 692, 730, 737, 740, 744, 749, 754, 783, 785, 786, 804, 819, 833, 860, 861, 870, 893, 929, 930, 938, 939, 940, 949, 953, 980, 1001, 1008, 1009, 1010, 1017, 1018, 1022, 1055, 1056, 1066, 1073, 1081, 1104, 1109, 1131, 1134, 1136, 1138], "04": [5, 101, 109, 128, 149, 153, 166, 177, 180, 182, 197, 198, 222, 270, 286, 287, 290, 294, 322, 362, 364, 382, 475, 786, 929, 1010, 1017, 1018, 1022, 1135, 1164], "20": [5, 7, 8, 23, 62, 116, 117, 166, 173, 175, 180, 189, 190, 191, 192, 203, 208, 213, 214, 218, 220, 223, 224, 226, 229, 234, 235, 239, 242, 245, 250, 252, 255, 258, 262, 265, 268, 270, 271, 280, 283, 287, 290, 294, 296, 300, 304, 311, 314, 315, 317, 322, 326, 332, 344, 348, 360, 361, 364, 382, 388, 390, 392, 408, 432, 472, 512, 540, 541, 546, 575, 576, 581, 582, 584, 585, 600, 697, 700, 701, 702, 711, 718, 740, 742, 743, 748, 749, 750, 751, 773, 852, 858, 878, 893, 915, 930, 937, 938, 939, 993, 1010, 1019, 1033, 1034, 1058, 1077, 1085, 1086, 1112, 1135, 1136, 1164, 1166, 1173], "clean": [5, 53, 62, 137, 153, 185, 237, 256, 382, 450, 461, 462, 465, 471, 592, 690, 787, 1007, 1009, 1019, 1028, 1081, 1130], "code": [5, 21, 23, 28, 29, 33, 40, 42, 53, 55, 62, 69, 74, 77, 84, 89, 107, 108, 112, 118, 121, 128, 145, 153, 155, 163, 167, 169, 170, 171, 172, 173, 176, 177, 184, 185, 188, 190, 193, 194, 195, 197, 198, 199, 202, 205, 206, 207, 209, 211, 216, 221, 222, 226, 230, 231, 232, 237, 239, 240, 242, 245, 248, 253, 255, 256, 258, 259, 267, 277, 279, 282, 286, 288, 289, 292, 295, 297, 300, 302, 303, 304, 308, 309, 310, 313, 314, 317, 320, 321, 325, 329, 330, 331, 332, 334, 335, 336, 337, 342, 346, 347, 350, 351, 360, 365, 370, 382, 385, 392, 394, 398, 402, 408, 422, 428, 433, 449, 450, 454, 456, 458, 464, 465, 467, 468, 469, 470, 471, 475, 477, 478, 479, 481, 486, 487, 488, 490, 491, 492, 494, 495, 496, 497, 499, 500, 502, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 551, 552, 553, 554, 556, 558, 559, 560, 561, 563, 564, 565, 566, 567, 571, 573, 574, 576, 577, 579, 580, 582, 583, 585, 586, 588, 589, 590, 591, 592, 593, 594, 596, 600, 601, 602, 603, 605, 606, 607, 608, 609, 610, 611, 612, 618, 620, 621, 622, 623, 624, 627, 628, 629, 630, 631, 633, 634, 637, 638, 639, 643, 647, 648, 649, 650, 651, 655, 661, 662, 664, 665, 667, 668, 670, 676, 679, 683, 684, 690, 691, 695, 697, 699, 700, 701, 703, 705, 707, 718, 727, 728, 729, 730, 732, 733, 734, 735, 737, 739, 744, 748, 749, 751, 752, 753, 754, 762, 764, 766, 768, 770, 772, 774, 775, 776, 777, 779, 780, 781, 782, 784, 785, 786, 787, 792, 797, 810, 811, 825, 831, 833, 838, 845, 848, 849, 851, 854, 872, 899, 929, 930, 938, 939, 954, 955, 971, 974, 978, 982, 991, 995, 997, 998, 1000, 1002, 1004, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1014, 1015, 1017, 1019, 1030, 1031, 1033, 1034, 1035, 1039, 1041, 1050, 1052, 1055, 1056, 1058, 1059, 1065, 1066, 1067, 1073, 1077, 1078, 1079, 1086, 1106, 1110, 1129, 1133, 1145, 1147, 1156, 1158, 1164, 1165, 1167, 1171, 1172, 1173, 1176, 1177, 1184, 1189, 1197, 1198, 1202], "With": [5, 29, 67, 116, 117, 119, 120, 127, 146, 158, 171, 177, 197, 258, 267, 286, 288, 289, 292, 297, 304, 312, 314, 317, 321, 325, 328, 342, 346, 347, 382, 423, 452, 468, 478, 488, 489, 498, 510, 524, 538, 590, 699, 730, 785, 786, 787, 833, 862, 863, 929, 936, 937, 968, 970, 987, 1005, 1008, 1019, 1050, 1054, 1129, 1145, 1149, 1151, 1153, 1160, 1184, 1186, 1187, 1189], "03": [5, 101, 109, 128, 149, 166, 167, 175, 180, 182, 189, 197, 232, 253, 255, 258, 287, 288, 291, 294, 300, 313, 332, 361, 364, 368, 382, 384, 466, 473, 474, 475, 536, 568, 585, 591, 593, 594, 596, 600, 601, 603, 605, 608, 689, 895, 1019, 1135, 1173, 1183], "28": [5, 7, 23, 101, 109, 129, 166, 173, 180, 181, 191, 192, 203, 208, 213, 218, 220, 223, 226, 229, 234, 235, 239, 242, 245, 250, 252, 255, 258, 262, 265, 268, 271, 280, 283, 287, 290, 294, 300, 304, 310, 322, 326, 332, 338, 344, 348, 359, 360, 361, 378, 379, 382, 474, 486, 533, 549, 550, 573, 582, 665, 712, 823, 875, 915, 939, 967, 1008, 1009, 1021, 1088, 1135, 1176], "29": [5, 7, 101, 110, 150, 180, 181, 191, 192, 203, 208, 213, 218, 220, 223, 226, 229, 234, 235, 239, 242, 245, 250, 252, 258, 262, 265, 268, 271, 280, 283, 287, 290, 294, 300, 304, 310, 322, 326, 333, 338, 344, 357, 360, 364, 378, 379, 382, 474, 752, 797, 937, 939, 1007, 1010, 1019, 1135], "sap": [5, 237, 288, 382, 1151], "13": [5, 6, 7, 62, 110, 153, 163, 173, 175, 182, 189, 191, 192, 203, 208, 211, 215, 218, 220, 223, 226, 229, 234, 236, 239, 242, 243, 245, 250, 252, 255, 258, 262, 265, 268, 271, 280, 283, 287, 288, 291, 294, 300, 304, 310, 315, 322, 326, 332, 338, 344, 348, 360, 361, 382, 466, 473, 478, 481, 592, 707, 749, 797, 875, 915, 938, 963, 973, 993, 1021, 1028, 1030, 1071, 1082, 1135, 1136, 1159, 1194], "15": [5, 7, 60, 62, 110, 126, 128, 166, 169, 177, 180, 189, 191, 192, 200, 203, 206, 208, 214, 215, 218, 220, 222, 223, 226, 229, 234, 235, 239, 242, 245, 250, 252, 253, 255, 258, 262, 265, 268, 271, 280, 283, 287, 290, 294, 300, 305, 310, 314, 315, 317, 322, 326, 332, 338, 348, 358, 360, 361, 362, 364, 371, 378, 379, 382, 474, 540, 541, 558, 559, 560, 561, 563, 564, 667, 727, 750, 772, 774, 776, 784, 862, 876, 930, 964, 973, 1043, 1134, 1135, 1136, 1156, 1159, 1194], "02": [5, 101, 110, 119, 127, 128, 150, 166, 173, 180, 182, 189, 193, 219, 229, 256, 270, 287, 288, 294, 378, 379, 382, 466, 474, 475, 939, 1007, 1008, 1009, 1019, 1021, 1135], "17": [5, 7, 62, 100, 110, 128, 175, 181, 185, 189, 191, 192, 203, 208, 210, 213, 218, 220, 223, 226, 229, 234, 235, 239, 244, 246, 247, 251, 252, 253, 255, 258, 262, 265, 271, 274, 275, 281, 283, 287, 290, 294, 300, 305, 310, 314, 315, 317, 322, 326, 332, 338, 348, 357, 360, 361, 382, 600, 648, 689, 698, 707, 728, 740, 750, 769, 784, 797, 833, 864, 915, 939, 955, 961, 991, 995, 1022, 1051, 1093, 1135, 1136, 1144, 1156], "tour": [5, 178, 237, 274, 275, 277, 297, 334, 335, 382, 383, 536, 688, 785, 786, 1130, 1184, 1185], "forc": [5, 31, 35, 169, 171, 175, 198, 258, 382, 383, 457, 472, 500, 596, 868, 946, 975, 1009, 1130, 1184], "2022": [5, 101, 109, 110, 151, 153, 182, 245, 251, 255, 258, 274, 275, 281, 284, 332, 378, 379, 382, 474, 485, 547, 718, 743, 747, 768, 771, 784, 893, 895, 1009, 1019, 1086, 1130], "12": [5, 6, 7, 8, 40, 62, 110, 126, 128, 152, 166, 175, 180, 181, 182, 191, 192, 196, 203, 208, 214, 215, 218, 220, 223, 226, 229, 230, 234, 235, 236, 239, 242, 243, 247, 250, 252, 255, 258, 262, 265, 268, 270, 271, 280, 283, 286, 287, 288, 290, 294, 300, 304, 310, 315, 318, 321, 322, 324, 326, 333, 344, 348, 359, 360, 364, 378, 379, 382, 450, 474, 475, 483, 568, 701, 707, 740, 784, 864, 875, 878, 893, 915, 917, 924, 937, 939, 941, 965, 973, 991, 1007, 1019, 1021, 1022, 1028, 1030, 1031, 1034, 1043, 1062, 1073, 1130, 1133, 1135, 1136, 1152, 1153, 1159, 1170, 1194], "01": [5, 62, 100, 101, 109, 110, 119, 127, 128, 166, 167, 175, 180, 182, 189, 193, 211, 222, 229, 236, 245, 251, 258, 270, 287, 288, 290, 294, 333, 362, 364, 378, 379, 382, 461, 474, 475, 488, 575, 576, 765, 862, 889, 939, 993, 995, 1022, 1119, 1130, 1135, 1164], "A": [5, 13, 20, 23, 27, 28, 29, 33, 38, 39, 40, 41, 60, 65, 69, 73, 77, 78, 82, 86, 88, 89, 101, 102, 112, 113, 114, 115, 118, 122, 128, 129, 131, 133, 134, 135, 136, 137, 138, 145, 149, 157, 169, 172, 173, 174, 175, 177, 182, 185, 186, 187, 190, 191, 192, 206, 208, 209, 210, 218, 222, 229, 231, 233, 239, 242, 245, 249, 255, 256, 258, 262, 270, 276, 278, 282, 285, 286, 297, 299, 304, 306, 307, 310, 317, 320, 321, 324, 338, 351, 357, 362, 366, 367, 382, 387, 390, 391, 403, 404, 405, 418, 423, 427, 433, 434, 436, 439, 440, 444, 447, 448, 449, 450, 451, 454, 456, 457, 458, 460, 462, 464, 469, 470, 472, 478, 485, 488, 489, 490, 494, 495, 498, 500, 510, 512, 524, 537, 538, 547, 549, 555, 590, 595, 596, 601, 603, 604, 605, 654, 655, 657, 658, 661, 672, 675, 676, 677, 678, 679, 680, 682, 683, 684, 685, 686, 687, 688, 692, 694, 707, 718, 728, 730, 733, 738, 739, 740, 744, 746, 750, 752, 756, 765, 771, 782, 783, 784, 785, 786, 787, 794, 808, 810, 827, 850, 862, 863, 866, 867, 872, 875, 876, 880, 881, 886, 890, 896, 926, 929, 936, 937, 939, 954, 958, 959, 962, 968, 970, 975, 976, 977, 978, 987, 992, 993, 1004, 1005, 1008, 1010, 1015, 1017, 1018, 1019, 1022, 1023, 1030, 1031, 1035, 1036, 1037, 1038, 1039, 1041, 1042, 1043, 1044, 1061, 1062, 1069, 1071, 1076, 1082, 1086, 1087, 1088, 1093, 1116, 1119, 1122, 1133, 1137, 1139, 1140, 1143, 1147, 1150, 1151, 1157, 1159, 1165, 1166, 1176, 1184, 1185, 1186, 1187, 1189, 1199], "new": [5, 16, 32, 42, 44, 49, 50, 55, 62, 69, 82, 111, 126, 133, 134, 167, 170, 172, 173, 174, 175, 176, 177, 180, 185, 197, 202, 222, 239, 243, 245, 255, 258, 262, 270, 280, 297, 303, 304, 321, 351, 376, 382, 384, 411, 441, 445, 446, 454, 458, 472, 475, 495, 497, 515, 519, 531, 533, 537, 546, 548, 549, 558, 559, 560, 561, 563, 564, 568, 574, 582, 591, 592, 597, 600, 646, 648, 659, 661, 662, 667, 684, 688, 692, 694, 695, 699, 700, 701, 703, 706, 717, 728, 731, 735, 737, 739, 741, 742, 746, 747, 748, 749, 750, 751, 755, 756, 763, 765, 767, 771, 775, 776, 777, 783, 786, 787, 790, 827, 833, 841, 865, 889, 912, 930, 933, 937, 939, 962, 963, 964, 973, 975, 976, 982, 994, 1025, 1044, 1059, 1062, 1071, 1110, 1135, 1136, 1153, 1159, 1164, 1183, 1184, 1185, 1187], "languag": [5, 12, 29, 43, 61, 63, 82, 94, 128, 146, 150, 166, 191, 193, 205, 206, 207, 209, 211, 214, 216, 221, 222, 224, 227, 229, 230, 231, 233, 249, 253, 256, 259, 261, 264, 289, 292, 295, 296, 297, 324, 351, 352, 353, 354, 355, 356, 365, 368, 382, 384, 386, 388, 400, 403, 414, 418, 427, 432, 434, 440, 444, 445, 447, 460, 464, 469, 472, 477, 479, 496, 510, 511, 512, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 555, 557, 590, 591, 598, 603, 605, 613, 616, 618, 619, 635, 641, 645, 654, 657, 658, 663, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 692, 694, 699, 706, 707, 717, 731, 736, 738, 741, 746, 750, 753, 754, 755, 763, 770, 771, 783, 785, 786, 787, 865, 922, 930, 931, 1007, 1009, 1026, 1035, 1039, 1040, 1041, 1042, 1043, 1046, 1051, 1055, 1059, 1061, 1062, 1065, 1074, 1082, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1132, 1133, 1137, 1141, 1144, 1145, 1147, 1151, 1156, 1158, 1161, 1163, 1168, 1173, 1181, 1184, 1185, 1186, 1187, 1189], "start": [5, 8, 42, 114, 115, 133, 134, 164, 166, 169, 170, 171, 172, 175, 180, 181, 185, 189, 194, 199, 206, 207, 209, 210, 211, 212, 214, 216, 217, 218, 221, 222, 224, 227, 231, 232, 237, 243, 252, 258, 259, 268, 270, 283, 286, 288, 290, 292, 295, 297, 299, 304, 307, 322, 324, 325, 332, 335, 338, 344, 348, 351, 368, 382, 385, 392, 395, 396, 405, 408, 422, 445, 466, 467, 480, 488, 492, 495, 502, 568, 579, 585, 651, 662, 667, 670, 690, 742, 765, 784, 794, 833, 846, 860, 861, 865, 866, 869, 871, 872, 893, 894, 906, 915, 917, 930, 956, 957, 966, 969, 976, 977, 981, 985, 986, 989, 991, 994, 1000, 1004, 1007, 1021, 1026, 1033, 1038, 1039, 1041, 1042, 1050, 1060, 1061, 1067, 1077, 1093, 1100, 1101, 1119, 1138, 1140, 1148, 1149, 1153, 1156, 1164, 1172, 1184, 1187], "schluss": [5, 7, 178, 203, 223], "noch": [5, 7, 178, 179, 189, 193, 197, 203, 213, 214, 218, 220, 223, 226, 229, 239, 252, 258, 259, 262, 283, 290, 383, 1183, 1194, 1201], "talk": [5, 42, 45, 50, 64, 65, 67, 88, 128, 129, 145, 170, 174, 185, 190, 194, 202, 206, 209, 214, 246, 248, 249, 325, 367, 472, 473, 735, 744, 833, 852, 930, 935, 939, 946, 1176], "heurigen": 5, "grazer": [5, 59, 188, 209, 325, 935], "linuxtagen": [5, 188], "pointless": [5, 153, 283, 297, 304, 321, 325, 334, 454, 601], "blink": [5, 60, 145, 153, 297, 300, 321, 325, 351, 354, 930, 971, 974], "sollt": [5, 23, 178, 179, 184, 187, 226, 1181, 1200], "interess": [5, 23, 259, 1179, 1190], "anderen": [5, 23, 203, 213, 218, 220, 383, 1178, 1179, 1181, 1183, 1202], "themenkomplex": 5, "bestehen": [5, 1197], "biet": 5, "folgend": [5, 150, 184, 203, 214, 259, 1194], "preisgestaltung": 5, "all": [5, 23, 24, 29, 35, 40, 42, 45, 46, 47, 51, 55, 56, 57, 60, 61, 63, 69, 74, 84, 92, 114, 115, 127, 129, 133, 145, 146, 157, 163, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 184, 185, 186, 190, 191, 192, 197, 199, 202, 203, 205, 206, 208, 213, 218, 222, 228, 230, 231, 239, 242, 245, 246, 250, 255, 256, 258, 275, 277, 280, 283, 286, 288, 295, 297, 304, 321, 325, 350, 352, 353, 360, 376, 388, 392, 402, 406, 407, 410, 411, 412, 423, 431, 432, 438, 448, 450, 452, 454, 455, 458, 461, 462, 465, 467, 472, 474, 475, 476, 477, 478, 481, 482, 486, 487, 490, 491, 495, 497, 500, 502, 503, 511, 512, 517, 518, 539, 541, 549, 550, 568, 596, 597, 600, 602, 607, 625, 626, 643, 648, 661, 662, 676, 684, 686, 701, 703, 705, 718, 728, 732, 737, 738, 740, 750, 751, 754, 757, 759, 762, 777, 786, 792, 794, 801, 804, 806, 811, 819, 823, 825, 829, 831, 833, 841, 847, 850, 859, 860, 861, 865, 866, 868, 869, 871, 873, 875, 876, 877, 878, 893, 894, 905, 912, 915, 917, 919, 920, 921, 922, 924, 930, 931, 932, 933, 937, 938, 939, 949, 950, 954, 956, 959, 965, 967, 976, 983, 989, 992, 993, 994, 1005, 1009, 1015, 1019, 1024, 1025, 1029, 1030, 1031, 1042, 1050, 1055, 1056, 1060, 1062, 1075, 1076, 1079, 1080, 1081, 1086, 1092, 1093, 1109, 1110, 1126, 1130, 1131, 1140, 1144, 1153, 1159, 1164, 1166, 1171, 1178, 1179, 1181, 1183, 1187, 1188, 1195, 1196, 1199, 1202], "onlin": [5, 11, 23, 150, 175, 182, 184, 185, 197, 202, 205, 383], "gehalten": [5, 8, 166, 193, 205, 214, 224, 233, 249, 261, 1178, 1183, 1194], "klarerweis": 5, "tagsatz": 5, "anf\u00e4llt": 5, "schulung": [5, 23, 165, 178, 179, 193, 202, 205, 383, 384, 789, 792, 797, 802, 811, 819, 997, 1000, 1004, 1032, 1034, 1054, 1130, 1145, 1158, 1178, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1189, 1190, 1191, 1199], "980": [5, 242, 245, 258, 265, 268, 690], "reisekosten": [5, 23], "auto": [5, 134, 167, 179, 187, 191, 197, 273, 335, 492, 497, 521, 522, 526, 527, 530, 531, 532, 585, 593, 602, 603, 626, 648, 649, 651, 692, 693, 700, 707, 710, 712, 715, 718, 719, 720, 722, 723, 724, 725, 726, 730, 732, 733, 734, 735, 740, 742, 744, 749, 750, 751, 753, 764, 770, 772, 774, 775, 776, 780, 781, 782, 783, 784, 785, 786, 833, 1004, 1184, 1195, 1200], "42": [5, 7, 21, 42, 60, 134, 136, 187, 189, 190, 192, 203, 213, 218, 220, 223, 226, 229, 234, 235, 239, 242, 245, 250, 252, 255, 258, 262, 265, 268, 271, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 357, 360, 361, 407, 433, 435, 436, 438, 441, 449, 454, 456, 462, 476, 486, 491, 495, 512, 514, 543, 544, 548, 549, 550, 551, 552, 553, 554, 566, 573, 585, 592, 600, 601, 605, 607, 633, 636, 639, 646, 670, 674, 694, 695, 703, 705, 733, 740, 753, 754, 764, 766, 770, 772, 774, 776, 780, 781, 782, 796, 878, 915, 924, 932, 978, 986, 1000, 1007, 1008, 1009, 1029, 1030, 1031, 1038, 1041, 1059, 1061, 1062, 1071, 1072, 1073, 1076, 1095, 1176], "per": [5, 50, 82, 176, 203, 321, 356, 376, 406, 445, 450, 539, 770, 823, 829, 843, 847, 852, 853, 865, 869, 889, 915, 982, 991, 1008, 1177, 1202], "kilomet": [5, 172, 732, 893], "anderweitig": 5, "aufwand": [5, 23], "\u00fcbernachtung": [5, 178], "sampl": [6, 119, 127, 128, 136, 170, 181, 227, 230, 231, 243, 247, 253, 259, 262, 279, 295, 321, 338, 351, 468, 536, 762, 980, 1000, 1083], "log": [6, 100, 134, 167, 175, 176, 185, 192, 197, 200, 209, 229, 239, 245, 255, 258, 286, 288, 300, 317, 338, 364, 477, 478, 497, 754, 796, 833, 862, 869, 871, 893, 930, 932, 940, 944, 946, 949, 950, 1130, 1133, 1159, 1173], "record": [6, 29, 40, 53, 146, 165, 166, 174, 176, 177, 203, 214, 215, 221, 231, 236, 243, 259, 279, 294, 314, 317, 356, 368, 467, 468, 786, 932, 1026, 1031, 1046, 1088, 1090, 1109, 1120, 1121, 1122, 1123, 1124, 1126, 1129, 1139, 1194], "grundlagen": [6, 8, 23, 150, 163, 264, 303, 382, 1181, 1183, 1190, 1191, 1194, 1195, 1197, 1198, 1201], "4": [6, 7, 8, 32, 60, 62, 110, 113, 116, 117, 126, 150, 162, 167, 169, 173, 175, 181, 189, 190, 191, 192, 193, 196, 203, 208, 210, 214, 215, 218, 220, 223, 226, 229, 230, 234, 235, 236, 237, 239, 240, 242, 243, 245, 250, 252, 253, 255, 258, 262, 265, 267, 268, 271, 279, 280, 283, 287, 288, 290, 294, 300, 303, 304, 309, 310, 315, 322, 326, 332, 337, 338, 344, 348, 358, 359, 360, 362, 365, 378, 379, 382, 396, 412, 432, 435, 438, 455, 459, 462, 463, 473, 474, 476, 494, 497, 536, 540, 541, 542, 543, 544, 546, 548, 549, 551, 567, 569, 585, 592, 594, 602, 603, 606, 608, 609, 610, 611, 612, 624, 625, 633, 643, 693, 695, 697, 712, 713, 714, 716, 718, 727, 729, 733, 740, 742, 753, 766, 784, 833, 834, 871, 919, 922, 924, 932, 937, 938, 939, 961, 974, 991, 995, 1027, 1028, 1030, 1037, 1039, 1043, 1050, 1051, 1053, 1062, 1063, 1068, 1071, 1072, 1073, 1077, 1078, 1082, 1083, 1085, 1086, 1088, 1092, 1105, 1109, 1120, 1122, 1126, 1128, 1131, 1135, 1136, 1138, 1144, 1148, 1149, 1150, 1152, 1153, 1155, 1159, 1164, 1179, 1194], "2021": [6, 10, 23, 151, 163, 180, 182, 218, 220, 229, 235, 236, 239, 244, 247, 270, 362, 364, 378, 379, 382, 568, 711, 736, 771, 889, 893, 915, 916, 993, 1007, 1021, 1057, 1173], "templat": [6, 69, 78, 110, 150, 197, 232, 273, 295, 300, 335, 367, 368, 476, 538, 557, 590, 591, 635, 641, 645, 646, 653, 654, 655, 657, 675, 682, 683, 684, 685, 686, 687, 694, 700, 705, 708, 709, 710, 711, 715, 716, 718, 721, 748, 752, 754, 762, 764, 770, 771, 772, 774, 776, 784, 785, 786, 978, 1183, 1185], "descript": [6, 8, 31, 39, 64, 67, 110, 126, 154, 172, 173, 185, 186, 202, 206, 207, 209, 210, 211, 212, 217, 232, 237, 239, 243, 245, 248, 255, 258, 262, 274, 275, 278, 312, 313, 328, 329, 384, 477, 487, 495, 505, 506, 507, 508, 509, 513, 523, 547, 742, 749, 750, 751, 760, 762, 764, 784, 833, 845, 857, 859, 868, 893, 895, 915, 922, 925, 926, 939, 951, 959, 1009, 1021, 1072, 1086, 1109, 1166, 1187], "sidebar": [6, 17, 69, 167, 845], "metadata": [6, 28, 39, 166, 185, 283, 865, 868, 938, 941, 967, 1029, 1189], "angebot": [6, 184], "hous": [6, 32, 170], "meiner": [6, 23, 259, 383, 1179], "person": [6, 23, 118, 122, 177, 207, 226, 229, 268, 270, 272, 279, 283, 290, 321, 322, 372, 457, 492, 493, 496, 521, 605, 664, 771, 946, 1044, 1045, 1047, 1048, 1049, 1051, 1052, 1126, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1164, 1165], "schwerpunk": 6, "schulungsstil": 6, "preis": 6, "einr\u00fcckung": [7, 215, 223], "wichtig": [7, 223, 273, 365, 370, 1202], "1": [7, 32, 39, 42, 50, 60, 62, 76, 78, 91, 110, 113, 114, 115, 119, 124, 126, 127, 145, 147, 152, 162, 163, 166, 171, 173, 176, 177, 179, 180, 181, 185, 186, 188, 189, 190, 191, 192, 193, 198, 199, 200, 203, 205, 208, 215, 218, 219, 220, 223, 226, 229, 230, 234, 235, 236, 239, 242, 245, 248, 250, 252, 255, 258, 262, 265, 268, 270, 271, 275, 280, 283, 287, 288, 290, 294, 300, 304, 310, 313, 315, 318, 322, 326, 329, 332, 337, 338, 344, 348, 350, 351, 357, 358, 359, 360, 361, 362, 363, 365, 368, 370, 378, 379, 382, 396, 397, 419, 426, 435, 439, 441, 449, 466, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 488, 490, 491, 511, 512, 518, 528, 536, 537, 540, 544, 546, 548, 549, 550, 552, 556, 558, 559, 560, 561, 562, 563, 564, 569, 572, 575, 578, 581, 584, 585, 587, 592, 593, 594, 600, 602, 606, 608, 609, 610, 611, 612, 617, 622, 624, 630, 631, 632, 633, 634, 639, 643, 655, 657, 665, 667, 670, 674, 684, 690, 691, 693, 694, 695, 697, 700, 701, 703, 705, 707, 709, 710, 712, 714, 715, 716, 718, 719, 720, 727, 733, 735, 738, 739, 740, 742, 744, 745, 748, 749, 751, 752, 753, 762, 766, 770, 772, 773, 774, 776, 782, 784, 786, 791, 796, 802, 806, 811, 833, 850, 859, 860, 861, 864, 865, 866, 868, 869, 870, 871, 872, 875, 876, 877, 878, 879, 883, 885, 887, 889, 890, 894, 895, 896, 912, 915, 916, 917, 918, 919, 921, 922, 924, 925, 926, 928, 930, 937, 938, 940, 941, 949, 950, 951, 953, 955, 956, 957, 959, 960, 961, 963, 964, 965, 966, 971, 973, 974, 986, 988, 989, 991, 993, 995, 996, 997, 1000, 1003, 1004, 1006, 1007, 1010, 1019, 1021, 1022, 1023, 1024, 1026, 1027, 1029, 1030, 1031, 1034, 1035, 1037, 1039, 1041, 1043, 1044, 1050, 1051, 1053, 1055, 1056, 1057, 1058, 1060, 1063, 1064, 1065, 1066, 1067, 1070, 1072, 1073, 1078, 1083, 1085, 1086, 1088, 1093, 1096, 1099, 1109, 1113, 1116, 1119, 1120, 1122, 1126, 1127, 1128, 1134, 1135, 1136, 1137, 1143, 1148, 1149, 1150, 1152, 1153, 1154, 1158, 1159, 1164, 1165, 1166, 1171, 1175, 1178, 1184, 1186, 1187, 1191, 1194, 1196, 1201], "i": [7, 12, 13, 14, 17, 21, 27, 28, 29, 30, 31, 32, 38, 39, 40, 41, 42, 43, 49, 53, 54, 55, 57, 60, 61, 62, 63, 65, 69, 70, 72, 73, 82, 84, 86, 88, 89, 91, 93, 94, 95, 101, 102, 103, 104, 108, 110, 111, 112, 113, 114, 115, 118, 119, 123, 124, 126, 127, 128, 129, 133, 136, 137, 139, 140, 141, 145, 146, 149, 155, 157, 158, 163, 164, 166, 167, 169, 170, 173, 174, 175, 176, 177, 180, 181, 185, 186, 187, 190, 191, 192, 193, 194, 197, 198, 199, 200, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 218, 220, 221, 222, 223, 226, 227, 230, 231, 232, 234, 235, 237, 240, 241, 242, 243, 246, 247, 248, 249, 251, 252, 253, 256, 257, 259, 260, 261, 262, 264, 266, 269, 270, 271, 275, 276, 277, 279, 280, 282, 283, 285, 286, 287, 288, 289, 290, 292, 294, 295, 296, 297, 298, 299, 301, 302, 303, 305, 306, 308, 310, 312, 314, 315, 317, 318, 320, 321, 322, 324, 325, 326, 328, 330, 331, 332, 334, 336, 337, 339, 342, 343, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 360, 361, 362, 365, 368, 370, 371, 373, 376, 378, 379, 383, 384, 386, 387, 388, 389, 390, 396, 397, 398, 400, 402, 403, 404, 406, 407, 410, 411, 412, 414, 415, 417, 418, 419, 422, 423, 424, 425, 426, 427, 429, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 487, 488, 490, 492, 494, 495, 496, 497, 500, 503, 504, 511, 512, 514, 515, 516, 517, 518, 531, 533, 534, 536, 538, 539, 540, 541, 542, 543, 544, 547, 548, 549, 550, 551, 552, 555, 557, 562, 566, 568, 573, 576, 579, 582, 585, 590, 591, 593, 594, 595, 596, 597, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 615, 617, 620, 621, 625, 626, 627, 628, 629, 630, 631, 633, 634, 639, 643, 646, 647, 648, 650, 652, 655, 657, 662, 664, 665, 670, 671, 672, 674, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686, 689, 690, 691, 692, 694, 695, 697, 698, 700, 701, 702, 704, 707, 712, 713, 714, 715, 716, 718, 729, 730, 733, 734, 738, 739, 742, 743, 744, 748, 750, 751, 752, 754, 756, 760, 762, 763, 764, 765, 770, 772, 774, 780, 783, 784, 785, 786, 787, 788, 789, 792, 794, 797, 799, 801, 802, 804, 808, 811, 815, 819, 821, 823, 825, 827, 829, 831, 833, 834, 835, 840, 841, 843, 845, 846, 847, 849, 850, 858, 859, 860, 861, 862, 863, 865, 866, 867, 870, 871, 872, 873, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 890, 892, 893, 894, 895, 896, 897, 898, 900, 901, 904, 905, 907, 908, 909, 913, 915, 917, 920, 922, 925, 926, 929, 930, 931, 932, 933, 935, 936, 937, 938, 940, 941, 942, 943, 944, 945, 946, 948, 953, 960, 963, 965, 967, 970, 971, 973, 974, 975, 976, 977, 978, 980, 981, 983, 984, 987, 990, 991, 992, 993, 994, 995, 1000, 1001, 1004, 1005, 1008, 1009, 1010, 1011, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1027, 1028, 1029, 1030, 1032, 1033, 1034, 1035, 1038, 1039, 1041, 1042, 1043, 1044, 1045, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1076, 1077, 1078, 1079, 1080, 1082, 1083, 1085, 1086, 1088, 1089, 1090, 1091, 1093, 1100, 1103, 1106, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1118, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1139, 1140, 1143, 1144, 1145, 1146, 1147, 1149, 1150, 1153, 1154, 1156, 1157, 1158, 1159, 1160, 1164, 1165, 1166, 1167, 1169, 1171, 1173, 1177, 1179, 1181, 1184, 1186, 1187, 1188, 1189, 1197, 1198, 1199, 1201], "41": [7, 175, 180, 191, 192, 203, 213, 218, 220, 223, 226, 229, 231, 234, 235, 239, 242, 245, 250, 252, 258, 262, 265, 268, 271, 280, 283, 287, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 357, 359, 360, 497, 753, 784, 823, 915, 938, 1043, 1086, 1088, 1135, 1166], "print": [7, 62, 166, 189, 190, 192, 193, 203, 206, 208, 209, 213, 218, 220, 221, 222, 223, 226, 229, 230, 234, 235, 236, 239, 242, 243, 245, 250, 252, 255, 258, 261, 262, 265, 268, 271, 280, 283, 287, 288, 290, 300, 304, 310, 315, 321, 322, 326, 332, 337, 338, 344, 348, 357, 358, 359, 360, 361, 391, 395, 397, 466, 477, 621, 648, 671, 718, 732, 740, 742, 870, 871, 877, 893, 895, 896, 937, 985, 995, 1026, 1029, 1030, 1031, 1033, 1034, 1035, 1039, 1041, 1043, 1044, 1047, 1049, 1052, 1057, 1058, 1059, 1060, 1065, 1066, 1069, 1070, 1071, 1072, 1073, 1075, 1076, 1081, 1082, 1096, 1098, 1108, 1109, 1110, 1112, 1113, 1119, 1134, 1139, 1143, 1147, 1156], "ja": [7, 23, 179, 203, 220, 223, 226, 239, 242, 271, 338], "basta": [7, 170, 223, 1062], "2": [7, 29, 32, 42, 50, 60, 62, 76, 108, 110, 119, 126, 127, 129, 150, 163, 166, 171, 173, 179, 180, 181, 187, 189, 190, 191, 192, 193, 204, 208, 214, 215, 218, 219, 223, 226, 229, 230, 234, 235, 236, 239, 244, 245, 250, 252, 255, 256, 258, 262, 265, 268, 270, 271, 280, 283, 287, 288, 290, 294, 300, 304, 310, 313, 315, 318, 322, 326, 329, 332, 338, 344, 348, 351, 357, 358, 359, 360, 361, 362, 365, 366, 367, 368, 374, 382, 395, 396, 408, 414, 415, 435, 439, 466, 472, 473, 474, 475, 478, 479, 480, 484, 485, 486, 487, 488, 490, 512, 536, 537, 540, 546, 548, 549, 552, 556, 558, 559, 560, 561, 563, 564, 568, 583, 585, 592, 593, 594, 600, 602, 603, 606, 608, 609, 610, 611, 612, 617, 622, 626, 630, 631, 632, 633, 634, 639, 643, 647, 648, 649, 650, 655, 665, 670, 690, 693, 694, 695, 697, 700, 703, 705, 707, 708, 710, 712, 715, 716, 718, 728, 729, 732, 733, 738, 739, 740, 742, 744, 745, 748, 749, 750, 751, 752, 753, 762, 764, 766, 773, 784, 786, 792, 833, 860, 861, 868, 871, 872, 875, 876, 877, 889, 912, 915, 918, 919, 924, 926, 928, 930, 934, 937, 938, 950, 953, 955, 956, 957, 959, 960, 963, 964, 965, 966, 967, 969, 971, 973, 974, 986, 988, 991, 993, 995, 1006, 1007, 1022, 1024, 1026, 1027, 1029, 1030, 1032, 1035, 1037, 1039, 1043, 1047, 1050, 1051, 1053, 1054, 1055, 1056, 1057, 1058, 1060, 1063, 1064, 1065, 1067, 1072, 1073, 1078, 1083, 1085, 1087, 1088, 1089, 1090, 1092, 1096, 1099, 1109, 1113, 1116, 1119, 1120, 1121, 1122, 1123, 1126, 1127, 1128, 1129, 1131, 1134, 1135, 1136, 1141, 1148, 1149, 1150, 1152, 1153, 1154, 1158, 1159, 1164, 1165, 1166, 1170, 1171, 1178, 1186, 1187, 1194, 1197, 1198, 1200, 1201, 1202], "1234": [7, 32, 223, 226, 236, 245, 250, 252, 304, 332, 344, 360, 948, 956, 1005, 1062], "3": [7, 32, 60, 62, 110, 113, 114, 115, 116, 117, 119, 127, 133, 150, 152, 166, 175, 180, 181, 185, 187, 189, 190, 191, 192, 193, 200, 202, 203, 208, 214, 215, 218, 219, 220, 223, 226, 229, 230, 234, 236, 238, 239, 244, 245, 248, 250, 252, 255, 258, 262, 265, 267, 269, 270, 271, 273, 280, 283, 287, 288, 290, 294, 300, 304, 310, 315, 317, 318, 323, 326, 332, 338, 344, 348, 358, 359, 360, 361, 365, 366, 367, 370, 382, 396, 408, 409, 410, 423, 432, 433, 454, 455, 463, 466, 468, 473, 474, 475, 478, 483, 494, 511, 512, 536, 537, 541, 544, 546, 547, 548, 549, 551, 552, 553, 554, 558, 559, 560, 561, 563, 564, 566, 568, 585, 592, 594, 600, 601, 602, 604, 605, 606, 608, 609, 610, 611, 612, 617, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 633, 634, 639, 655, 665, 670, 672, 693, 694, 695, 697, 705, 707, 708, 712, 713, 714, 715, 716, 718, 733, 738, 740, 742, 744, 749, 750, 752, 753, 766, 769, 784, 791, 797, 833, 871, 876, 890, 893, 915, 917, 919, 924, 926, 932, 934, 937, 938, 939, 941, 950, 951, 953, 955, 956, 957, 960, 964, 965, 966, 974, 975, 976, 980, 986, 988, 991, 994, 995, 996, 999, 1001, 1004, 1005, 1007, 1008, 1009, 1027, 1029, 1030, 1032, 1035, 1037, 1039, 1043, 1050, 1053, 1054, 1055, 1056, 1057, 1060, 1061, 1063, 1065, 1067, 1068, 1071, 1073, 1078, 1079, 1080, 1082, 1085, 1086, 1088, 1105, 1109, 1113, 1119, 1120, 1122, 1126, 1128, 1131, 1134, 1135, 1136, 1139, 1142, 1148, 1149, 1150, 1152, 1153, 1155, 1159, 1164, 1165, 1166, 1173, 1178, 1180, 1182, 1184, 1187, 1190, 1194], "decim": [7, 223, 258, 262, 304, 332, 348, 351, 388, 474, 1062, 1076], "5": [7, 32, 60, 62, 116, 117, 118, 124, 134, 136, 141, 150, 162, 166, 173, 175, 181, 191, 192, 193, 198, 201, 204, 208, 214, 215, 218, 220, 221, 223, 226, 227, 229, 230, 233, 235, 236, 237, 239, 240, 242, 243, 245, 250, 252, 253, 255, 258, 262, 265, 267, 268, 270, 271, 275, 279, 280, 283, 287, 290, 294, 300, 303, 304, 309, 310, 315, 318, 322, 326, 332, 337, 338, 344, 348, 351, 357, 359, 360, 365, 370, 378, 379, 382, 388, 390, 395, 412, 414, 423, 450, 455, 459, 468, 473, 477, 480, 491, 494, 497, 512, 520, 536, 539, 541, 546, 547, 549, 550, 551, 552, 553, 554, 566, 567, 572, 585, 592, 593, 594, 600, 604, 605, 608, 609, 611, 612, 633, 643, 670, 690, 694, 697, 698, 700, 701, 707, 709, 710, 712, 727, 728, 740, 742, 749, 750, 751, 753, 766, 776, 784, 806, 811, 834, 862, 864, 915, 919, 924, 930, 937, 938, 939, 955, 957, 965, 974, 991, 1007, 1019, 1027, 1029, 1030, 1033, 1035, 1039, 1043, 1050, 1051, 1056, 1061, 1062, 1063, 1067, 1068, 1070, 1076, 1078, 1082, 1083, 1086, 1109, 1113, 1120, 1122, 1126, 1128, 1131, 1135, 1136, 1139, 1144, 1155, 1159, 1164, 1166, 1171, 1175, 1181, 1183, 1188, 1189, 1194, 1195], "hexadecim": [7, 223, 262, 407, 938, 1062, 1075, 1076], "16": [7, 62, 166, 175, 177, 178, 180, 189, 191, 192, 197, 198, 203, 208, 213, 218, 220, 223, 226, 229, 234, 235, 239, 242, 245, 250, 252, 255, 258, 262, 265, 268, 271, 280, 284, 287, 290, 294, 300, 304, 310, 315, 322, 326, 332, 338, 344, 348, 357, 358, 359, 360, 361, 365, 370, 371, 382, 406, 450, 457, 468, 475, 612, 670, 749, 811, 823, 915, 932, 937, 939, 950, 955, 956, 964, 973, 1007, 1009, 1021, 1022, 1027, 1034, 1037, 1062, 1088, 1135, 1136, 1166], "7": [7, 32, 42, 62, 167, 170, 173, 175, 180, 187, 190, 191, 192, 193, 203, 208, 215, 218, 220, 221, 223, 226, 227, 229, 233, 235, 236, 237, 239, 240, 242, 245, 250, 252, 255, 258, 262, 265, 267, 268, 270, 271, 279, 280, 283, 287, 288, 290, 294, 300, 304, 309, 310, 315, 318, 322, 326, 332, 338, 344, 348, 350, 359, 360, 365, 370, 371, 382, 396, 400, 414, 441, 450, 474, 475, 478, 483, 491, 511, 512, 536, 539, 544, 548, 549, 551, 552, 553, 554, 566, 573, 581, 585, 592, 600, 601, 605, 607, 608, 609, 611, 632, 636, 639, 648, 665, 674, 694, 702, 727, 728, 729, 733, 740, 766, 780, 781, 782, 864, 865, 876, 877, 893, 915, 924, 937, 938, 939, 956, 964, 988, 991, 1000, 1001, 1004, 1005, 1008, 1009, 1030, 1033, 1039, 1043, 1051, 1056, 1061, 1062, 1063, 1066, 1068, 1070, 1071, 1086, 1098, 1116, 1119, 1131, 1135, 1136, 1139, 1144, 1155, 1164], "0x1234": [7, 223, 1062], "4660": [7, 223, 245, 1062], "8": [7, 32, 62, 113, 166, 172, 173, 177, 181, 189, 190, 191, 192, 193, 197, 202, 203, 206, 208, 215, 218, 220, 221, 223, 226, 227, 229, 230, 235, 236, 237, 239, 240, 242, 243, 245, 249, 250, 252, 255, 258, 262, 265, 267, 268, 271, 279, 280, 283, 286, 287, 290, 294, 300, 304, 307, 309, 310, 315, 318, 321, 322, 326, 332, 338, 344, 348, 357, 358, 359, 360, 365, 382, 406, 450, 462, 468, 474, 478, 480, 483, 511, 543, 578, 585, 592, 597, 600, 605, 609, 611, 612, 701, 749, 766, 784, 806, 829, 833, 864, 870, 878, 915, 917, 924, 930, 931, 932, 933, 937, 938, 1007, 1024, 1030, 1033, 1039, 1062, 1063, 1068, 1076, 1081, 1085, 1086, 1092, 1128, 1131, 1135, 1136, 1142, 1159, 1166], "bin\u00e4r": [7, 23, 223, 226], "9": [7, 8, 32, 60, 62, 126, 166, 171, 175, 178, 185, 189, 190, 191, 192, 193, 201, 203, 205, 208, 209, 210, 211, 212, 215, 216, 218, 220, 221, 222, 223, 224, 226, 227, 229, 230, 231, 233, 235, 236, 237, 239, 242, 243, 245, 250, 252, 255, 258, 259, 262, 265, 268, 270, 271, 280, 283, 286, 287, 290, 294, 295, 297, 300, 304, 310, 315, 322, 326, 332, 338, 344, 348, 357, 358, 360, 361, 365, 370, 382, 388, 390, 396, 405, 408, 466, 474, 491, 511, 520, 539, 585, 587, 603, 612, 702, 712, 740, 766, 811, 889, 912, 915, 937, 938, 939, 955, 991, 1027, 1037, 1043, 1056, 1057, 1063, 1068, 1070, 1078, 1082, 1086, 1093, 1098, 1135, 1136, 1144, 1153, 1159, 1164], "0b100110": [7, 223, 252, 1062], "38": [7, 23, 166, 173, 180, 192, 203, 213, 218, 220, 223, 226, 229, 234, 235, 239, 242, 245, 250, 252, 255, 258, 262, 265, 268, 271, 280, 283, 287, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 357, 360, 361, 495, 511, 536, 603, 749, 784, 915, 1010, 1019, 1135, 1136], "arithmet": [7, 112, 190, 223, 228, 248, 251, 263, 278, 295, 365, 389, 403, 410, 411, 417, 418, 427, 433, 434, 440, 444, 447, 449, 450, 451, 460, 464, 469, 470, 489, 498, 510, 511, 524, 538, 586, 590, 620, 624, 625, 628, 633, 690, 692, 730, 739, 740, 783, 785, 786], "man": [7, 32, 37, 128, 170, 172, 178, 179, 187, 193, 197, 203, 205, 213, 214, 220, 223, 226, 231, 233, 235, 246, 252, 259, 262, 286, 307, 326, 365, 370, 372, 383, 480, 573, 582, 594, 756, 784, 792, 811, 859, 860, 861, 864, 865, 868, 875, 876, 877, 878, 879, 883, 885, 887, 890, 894, 895, 896, 912, 915, 916, 918, 919, 921, 922, 924, 925, 939, 946, 949, 950, 951, 953, 955, 956, 957, 959, 960, 962, 963, 964, 965, 966, 969, 975, 976, 978, 980, 982, 983, 986, 988, 994, 1001, 1004, 1005, 1007, 1023, 1024, 1179, 1180, 1181, 1183, 1191, 1194, 1196, 1197, 1198, 1200, 1201, 1202], "behaviour": [7, 223, 231, 819, 965, 1081], "erzwingen": [7, 203, 215, 223], "floor": [7, 38, 215, 223, 226, 230, 242, 243, 245, 250, 252, 258, 262, 332, 360, 1050, 1062], "divis": [7, 36, 38, 215, 223, 226, 242, 245, 250, 252, 258, 360, 388, 409, 511, 512, 526, 1050, 1062, 1116], "modul": [7, 12, 21, 23, 29, 69, 153, 160, 166, 173, 175, 180, 192, 198, 200, 202, 205, 206, 207, 208, 209, 216, 217, 223, 226, 230, 232, 237, 239, 240, 243, 245, 246, 249, 250, 252, 253, 255, 256, 258, 259, 261, 262, 264, 265, 269, 270, 273, 279, 281, 282, 283, 288, 290, 298, 299, 302, 304, 308, 309, 312, 313, 314, 317, 322, 324, 326, 328, 329, 330, 331, 332, 337, 338, 342, 343, 344, 346, 347, 348, 350, 351, 360, 366, 367, 368, 370, 376, 383, 428, 472, 474, 478, 479, 485, 487, 488, 500, 689, 730, 785, 786, 789, 790, 792, 793, 795, 797, 798, 799, 800, 802, 803, 810, 813, 814, 818, 824, 829, 830, 834, 835, 837, 842, 845, 848, 851, 854, 929, 930, 937, 939, 1031, 1032, 1046, 1055, 1056, 1059, 1060, 1071, 1073, 1079, 1082, 1083, 1084, 1087, 1088, 1089, 1090, 1124, 1125, 1126, 1127, 1129, 1130, 1132, 1133, 1137, 1140, 1141, 1143, 1144, 1145, 1146, 1147, 1158, 1159, 1161, 1163, 1164, 1167, 1168, 1174, 1186, 1188, 1189, 1195, 1199, 1202], "restklassen": [7, 223], "rest": [7, 17, 40, 177, 179, 189, 213, 223, 226, 230, 232, 250, 258, 290, 304, 322, 325, 360, 386, 396, 421, 475, 623, 624, 685, 742, 821, 872, 933, 963, 991, 1050, 1053, 1077, 1106, 1110, 1139, 1154, 1186, 1202], "14": [7, 62, 163, 167, 180, 191, 192, 203, 208, 215, 218, 220, 222, 223, 226, 229, 230, 234, 235, 239, 242, 243, 245, 250, 252, 255, 258, 262, 265, 268, 270, 271, 274, 280, 283, 287, 290, 294, 300, 304, 310, 321, 322, 324, 326, 332, 338, 344, 348, 357, 358, 360, 361, 362, 382, 474, 485, 486, 488, 497, 591, 665, 689, 701, 740, 742, 750, 752, 784, 875, 878, 890, 915, 917, 937, 938, 939, 941, 956, 965, 995, 1007, 1008, 1009, 1028, 1030, 1044, 1130, 1135, 1136, 1183, 1194], "oper": [7, 29, 33, 34, 35, 38, 77, 82, 84, 101, 112, 141, 145, 169, 170, 172, 176, 188, 189, 191, 194, 197, 202, 206, 207, 208, 209, 211, 215, 220, 223, 228, 229, 230, 231, 232, 237, 239, 243, 244, 247, 250, 252, 253, 257, 260, 263, 266, 268, 271, 273, 283, 290, 295, 296, 297, 298, 299, 300, 303, 304, 320, 324, 325, 327, 332, 338, 343, 344, 351, 365, 370, 388, 396, 406, 412, 427, 432, 433, 434, 438, 440, 441, 444, 447, 449, 451, 453, 456, 460, 462, 464, 469, 470, 492, 493, 512, 532, 538, 550, 555, 557, 585, 590, 591, 592, 597, 598, 602, 605, 609, 610, 611, 612, 613, 616, 617, 619, 625, 633, 634, 635, 641, 645, 646, 649, 654, 657, 658, 670, 675, 682, 683, 684, 685, 686, 687, 690, 692, 698, 700, 701, 703, 707, 712, 714, 715, 716, 718, 721, 725, 728, 730, 732, 733, 734, 735, 740, 742, 749, 750, 753, 760, 764, 766, 775, 776, 777, 783, 784, 785, 786, 795, 800, 803, 804, 810, 814, 824, 833, 835, 837, 842, 848, 849, 851, 854, 860, 861, 864, 893, 899, 924, 925, 929, 937, 938, 939, 950, 955, 956, 957, 958, 959, 960, 971, 974, 978, 980, 1000, 1004, 1008, 1021, 1024, 1032, 1035, 1042, 1043, 1046, 1063, 1067, 1071, 1076, 1077, 1082, 1096, 1129, 1131, 1140, 1149, 1171, 1176, 1183, 1189], "preced": [7, 35, 38, 223, 245, 250, 258, 263, 266, 388, 394, 409, 410, 418, 423, 427, 432, 434, 438, 440, 442, 444, 447, 451, 460, 464, 469, 470, 621, 625, 692, 730, 783, 785, 786, 893, 942], "implizit": [7, 203, 223, 300, 1181, 1198], "klammerung": [7, 223, 921], "durch": [7, 150, 178, 179, 187, 193, 197, 205, 213, 223, 255, 265, 348, 365, 370, 383, 921, 1178, 1179, 1181], "pr\u00e4zedenz": [7, 203, 215, 223], "6666666666666665": [7, 223], "frage": [7, 179, 189, 193, 220, 223, 226, 232, 252, 383, 1188, 1195, 1202], "6665": [7, 223], "6667": [7, 223], "ieee": [7, 223], "floatingpoint": [7, 223, 409, 410, 533, 833, 1108], "representaion": [7, 223], "true": [7, 35, 38, 50, 58, 62, 114, 115, 118, 122, 123, 124, 125, 171, 173, 175, 180, 189, 190, 191, 192, 202, 203, 208, 213, 218, 220, 221, 223, 226, 229, 230, 234, 235, 239, 242, 243, 245, 250, 252, 255, 256, 258, 262, 265, 268, 271, 280, 283, 287, 290, 294, 300, 304, 310, 315, 322, 326, 332, 338, 344, 348, 351, 357, 360, 394, 410, 411, 423, 435, 438, 478, 536, 600, 608, 633, 661, 672, 674, 695, 718, 719, 720, 721, 723, 724, 725, 726, 751, 760, 762, 764, 766, 784, 821, 823, 853, 866, 893, 906, 974, 980, 985, 986, 989, 991, 992, 1000, 1001, 1004, 1013, 1028, 1034, 1035, 1039, 1041, 1042, 1043, 1044, 1047, 1050, 1063, 1064, 1066, 1067, 1068, 1071, 1077, 1080, 1081, 1144, 1148, 1150, 1155, 1170, 1171, 1173], "zahlen": [7, 213, 214, 223, 1181, 1194], "vergleichen": [7, 203, 223], "21": [7, 101, 103, 106, 109, 110, 128, 177, 180, 191, 192, 203, 208, 211, 213, 218, 220, 223, 226, 229, 234, 235, 239, 242, 245, 250, 252, 258, 262, 265, 268, 271, 280, 283, 287, 290, 294, 300, 304, 310, 315, 322, 326, 332, 338, 344, 348, 360, 364, 382, 474, 784, 823, 875, 915, 938, 939, 950, 1021, 1030, 1135, 1136], "ab": [7, 23, 32, 178, 180, 203, 213, 214, 223, 258, 262, 265, 280, 283, 304, 332, 592, 594, 602, 611, 697, 753, 1136, 1188, 1194], "0001": [7, 173, 191, 223], "aber": [7, 23, 37, 179, 187, 189, 193, 203, 213, 214, 218, 221, 223, 252, 255, 258, 310, 383, 921, 1179, 1181, 1183, 1190, 1197, 1201, 1202], "unendlich": [7, 8, 214, 223, 224], "lang": [7, 175, 178, 179, 188, 223, 356, 357, 374, 383, 477, 1180, 1196, 1201], "22": [7, 62, 101, 109, 110, 128, 172, 175, 180, 182, 191, 192, 203, 208, 210, 213, 218, 219, 220, 223, 226, 229, 230, 234, 235, 239, 242, 243, 245, 250, 252, 258, 262, 265, 268, 271, 280, 283, 287, 290, 294, 300, 304, 311, 314, 315, 317, 322, 332, 338, 344, 348, 357, 359, 360, 361, 382, 784, 878, 915, 939, 940, 948, 949, 964, 1008, 1009, 1093, 1130, 1135, 1136, 1195], "1000000": [7, 172, 203, 223, 300, 338, 360, 466, 930, 938], "23": [7, 62, 128, 173, 180, 181, 182, 188, 191, 192, 193, 203, 208, 210, 213, 218, 220, 223, 226, 229, 234, 235, 239, 242, 245, 250, 252, 255, 256, 258, 261, 262, 265, 271, 280, 283, 287, 290, 294, 300, 304, 310, 315, 322, 326, 332, 338, 344, 348, 382, 438, 474, 477, 718, 768, 878, 915, 937, 938, 1019, 1088, 1093, 1135, 1136, 1166, 1173], "32": [7, 180, 181, 187, 189, 192, 203, 208, 213, 218, 220, 223, 226, 229, 232, 234, 235, 239, 242, 245, 250, 252, 255, 258, 262, 265, 268, 271, 280, 283, 287, 290, 294, 300, 304, 310, 322, 326, 332, 338, 344, 348, 360, 388, 390, 406, 411, 450, 491, 497, 520, 536, 549, 829, 858, 864, 889, 915, 931, 933, 1008, 1009, 1019, 1086], "4294967295": [7, 223, 242, 250, 258], "24": [7, 62, 101, 109, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 145, 173, 180, 188, 191, 192, 193, 203, 208, 213, 218, 220, 223, 226, 229, 234, 235, 239, 242, 245, 250, 252, 255, 258, 262, 265, 268, 271, 280, 283, 287, 290, 294, 304, 310, 315, 322, 332, 338, 344, 348, 357, 358, 360, 361, 382, 485, 683, 685, 707, 749, 750, 786, 833, 860, 861, 915, 937, 1024, 1050, 1135, 1136], "64": [7, 172, 175, 180, 203, 208, 213, 218, 220, 223, 226, 229, 231, 232, 235, 239, 242, 245, 250, 252, 255, 258, 262, 265, 268, 271, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 360, 365, 370, 394, 406, 411, 435, 450, 456, 459, 485, 829, 971, 974, 997, 1004, 1007, 1024, 1088, 1135, 1179], "18446744073709551615": [7, 203, 213, 223, 226, 239, 242, 250, 252, 258, 262, 265, 268, 290, 322, 344, 360], "overflow": [7, 42, 44, 50, 172, 213, 223, 239, 242, 243, 245, 248, 249, 255, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344, 411, 413, 449, 458, 870], "wenn": [7, 23, 178, 179, 184, 189, 197, 203, 205, 213, 214, 220, 223, 259, 265, 300, 920, 1178, 1180, 1181, 1188, 1190, 1191, 1194, 1197, 1202], "verwendet": [7, 23, 193, 197, 203, 223, 265, 344, 1179, 1181, 1191, 1195, 1197, 1202], "wert": [7, 23, 214, 215, 220, 223, 255, 258, 262, 265, 271, 300, 304, 310, 1194, 1202], "w\u00e4re": [7, 187, 213, 223, 259, 1183, 1190], "dort": [7, 68, 150, 179, 187, 189, 197, 213, 214, 223, 383, 1194, 1200, 1202], "25": [7, 62, 101, 180, 181, 191, 192, 193, 203, 208, 213, 218, 220, 223, 226, 229, 234, 235, 239, 242, 245, 250, 252, 255, 256, 258, 261, 262, 265, 268, 270, 271, 280, 283, 287, 290, 294, 300, 304, 310, 317, 322, 326, 332, 338, 344, 348, 351, 360, 361, 382, 584, 585, 707, 744, 768, 813, 915, 939, 1007, 1033, 1076, 1120, 1122, 1126, 1128, 1135, 1136, 1148, 1149, 1150, 1152, 1153, 1154, 1155], "18446744073709551616": [7, 203, 213, 223, 226, 239, 242, 250, 252, 262, 265, 283, 290, 300, 304, 310, 322, 326, 332, 338, 360], "26": [7, 119, 127, 173, 175, 180, 181, 182, 191, 192, 203, 213, 218, 220, 223, 226, 229, 234, 235, 239, 242, 245, 250, 252, 255, 258, 262, 265, 268, 271, 275, 280, 283, 287, 290, 294, 304, 310, 315, 322, 326, 332, 338, 344, 348, 360, 364, 382, 584, 585, 712, 728, 893, 915, 939, 971, 973, 974, 1007, 1009, 1030, 1050, 1135, 1136, 1159, 1195], "1000": [7, 23, 203, 213, 223, 226, 229, 239, 242, 245, 250, 252, 258, 262, 265, 268, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 357, 360, 549, 550, 568, 643, 690, 764, 843, 868, 870, 875, 889, 890, 917, 918, 922, 924, 950, 957, 965, 986, 991, 995, 1021, 1028, 1077, 1109], "10715086071862673209484250490600018105614048117055336074437503883703510511249361224931983788156958581275946729175531468251871452856923140435984577574698574803934567774824230985421074605062371141877954182153046474983581941267398767559165543946077062914571196477686542167660429831652624386837205668069376": [7, 203, 213, 223, 226, 239, 262, 265, 283, 310, 338], "27": [7, 62, 101, 128, 180, 182, 191, 192, 203, 213, 218, 220, 222, 223, 226, 229, 234, 235, 239, 242, 245, 250, 252, 255, 258, 261, 262, 265, 268, 270, 271, 280, 283, 287, 290, 294, 300, 304, 310, 317, 322, 326, 332, 338, 344, 348, 357, 359, 360, 362, 382, 474, 548, 573, 740, 915, 937, 939, 1007, 1135, 1148, 1149, 1150, 1152, 1153, 1154, 1155], "10000": [7, 45, 223, 242, 245, 258, 290, 332, 1031, 1047], "19950631168807583848837421626835850838234968318861924548520089498529438830221946631919961684036194597899331129423209124271556491349413781117593785932096323957855730046793794526765246551266059895520550086918193311542508608460618104685509074866089624888090489894838009253941633257850621568309473902556912388065225096643874441046759871626985453222868538161694315775629640762836880760732228535091641476183956381458969463899410840960536267821064621427333394036525565649530603142680234969400335934316651459297773279665775606172582031407994198179607378245683762280037302885487251900834464581454650557929601414833921615734588139257095379769119277800826957735674444123062018757836325502728323789270710373802866393031428133241401624195671690574061419654342324638801248856147305207431992259611796250130992860241708340807605932320161268492288496255841312844061536738951487114256315111089745514203313820202931640957596464756010405845841566072044962867016515061920631004186422275908670900574606417856951911456055068251250406007519842261898059237118054444788072906395242548339221982707404473162376760846613033778706039803413197133493654622700563169937455508241780972810983291314403571877524768509857276937926433221599399876886660808368837838027643282775172273657572744784112294389733810861607423253291974813120197604178281965697475898164531258434135959862784130128185406283476649088690521047580882615823961985770122407044330583075869039319604603404973156583208672105913300903752823415539745394397715257455290510212310947321610753474825740775273986348298498340756937955646638621874569499279016572103701364433135817214311791398222983845847334440270964182851005072927748364550578634501100852987812389473928699540834346158807043959118985815145779177143619698728131459483783202081474982171858011389071228250905826817436220577475921417653715687725614904582904992461028630081535583308130101987675856234343538955409175623400844887526162643568648833519463720377293240094456246923254350400678027273837755376406726898636241037491410966718557050759098100246789880178271925953381282421954028302759408448955014676668389697996886241636313376393903373455801407636741877711055384225739499110186468219696581651485130494222369947714763069155468217682876200362777257723781365331611196811280792669481887201298643660768551639860534602297871557517947385246369446923087894265948217008051120322365496288169035739121368338393591756418733850510970271613915439590991598154654417336311656936031122249937969999226781732358023111862644575299135758175008199839236284615249881088960232244362173771618086357015468484058622329792853875623486556440536962622018963571028812361567512543338303270029097668650568557157505516727518899194129711337690149916181315171544007728650573189557450920330185304847113818315407324053319038462084036421763703911550639789000742853672196280903477974533320468368795868580237952218629120080742819551317948157624448298518461509704888027274721574688131594750409732115080498190455803416826949787141316063210686391511681774304792596709376": [7, 223, 242, 258, 290, 332], "hallo": [7, 203, 213, 218, 221, 223, 226, 234, 242, 245, 252, 255, 258, 262, 265, 271, 283, 287, 290, 310, 322, 326, 332, 338, 360, 408, 600, 784, 864, 912, 940, 953, 956, 962], "39": [7, 167, 180, 189, 191, 192, 203, 208, 213, 218, 220, 222, 223, 226, 229, 234, 235, 239, 242, 245, 250, 252, 255, 258, 262, 265, 268, 271, 280, 283, 287, 290, 294, 300, 304, 310, 315, 318, 322, 326, 332, 338, 344, 348, 357, 358, 359, 360, 361, 362, 511, 665, 712, 878, 1007, 1043, 1135, 1136], "30": [7, 23, 62, 101, 110, 113, 127, 128, 166, 167, 172, 180, 182, 192, 202, 203, 208, 213, 218, 220, 222, 223, 226, 229, 234, 235, 239, 242, 245, 250, 252, 255, 258, 262, 265, 268, 271, 280, 283, 290, 294, 300, 304, 307, 310, 322, 326, 332, 338, 344, 348, 357, 359, 360, 362, 382, 395, 409, 474, 536, 540, 575, 576, 581, 582, 584, 585, 701, 702, 749, 750, 751, 771, 773, 889, 915, 921, 937, 938, 939, 995, 1021, 1033, 1034, 1086, 1135, 1139, 1147, 1164, 1173], "eingebettet": [7, 223], "34": [7, 180, 181, 189, 192, 203, 208, 213, 218, 220, 222, 223, 226, 229, 230, 234, 235, 239, 242, 243, 245, 250, 252, 255, 258, 262, 265, 268, 270, 271, 280, 283, 287, 288, 290, 294, 300, 304, 310, 315, 318, 322, 326, 332, 338, 344, 348, 359, 360, 361, 362, 497, 511, 515, 516, 517, 518, 530, 531, 532, 630, 631, 632, 633, 634, 639, 671, 890, 893, 915, 1043, 1062, 1135, 1136], "31": [7, 110, 128, 173, 175, 180, 192, 203, 208, 213, 218, 220, 223, 226, 229, 234, 235, 239, 242, 245, 250, 252, 253, 255, 258, 262, 265, 268, 271, 280, 283, 287, 290, 294, 300, 304, 310, 322, 326, 332, 338, 344, 359, 360, 382, 446, 474, 481, 727, 915, 973, 1005, 1022, 1056, 1088, 1135], "eingenbettet": [7, 223], "mississippi": [7, 223, 226, 235, 239, 242, 250, 252, 258, 262, 268, 271, 283, 290, 304, 310, 322, 326, 332, 338, 344, 348, 670], "count": [7, 29, 62, 91, 93, 126, 133, 170, 182, 185, 223, 226, 227, 230, 235, 239, 242, 245, 250, 252, 255, 258, 262, 268, 271, 283, 289, 290, 304, 310, 322, 326, 332, 338, 344, 348, 394, 395, 396, 397, 410, 466, 522, 548, 576, 690, 740, 765, 786, 789, 792, 793, 794, 795, 797, 800, 803, 804, 810, 814, 824, 837, 842, 848, 851, 854, 864, 873, 893, 915, 926, 929, 959, 962, 969, 980, 1001, 1077, 1090, 1100, 1103, 1111, 1114, 1129, 1136, 1144, 1184], "ss": [7, 32, 223, 226, 235, 239, 242, 250, 252, 258, 262, 268, 271, 283, 290, 304, 310, 322, 326, 332, 338, 344, 348, 670], "35": [7, 166, 180, 192, 203, 210, 213, 218, 220, 223, 226, 229, 234, 235, 239, 242, 245, 250, 252, 255, 258, 262, 265, 268, 271, 280, 283, 287, 290, 294, 300, 304, 310, 322, 326, 332, 338, 344, 348, 357, 359, 360, 361, 511, 540, 683, 685, 701, 1135], "find": [7, 17, 42, 44, 47, 48, 53, 69, 128, 169, 170, 171, 172, 176, 181, 186, 198, 199, 200, 210, 212, 223, 226, 230, 232, 235, 239, 243, 245, 248, 250, 252, 255, 258, 262, 265, 268, 271, 276, 283, 285, 288, 290, 295, 297, 304, 306, 307, 310, 312, 322, 324, 326, 328, 332, 334, 338, 344, 348, 350, 359, 365, 370, 453, 459, 466, 478, 486, 493, 500, 521, 526, 527, 530, 531, 532, 533, 538, 555, 556, 585, 590, 593, 607, 609, 611, 612, 633, 635, 646, 649, 651, 654, 658, 670, 683, 685, 687, 690, 733, 737, 782, 786, 799, 838, 859, 860, 861, 863, 868, 872, 873, 875, 876, 877, 879, 893, 920, 923, 926, 929, 938, 939, 950, 978, 1007, 1010, 1024, 1054, 1058, 1069, 1077, 1137, 1174, 1186, 1188, 1189, 1190, 1195], "36": [7, 118, 124, 166, 171, 175, 180, 192, 203, 213, 218, 220, 223, 226, 229, 234, 235, 239, 242, 245, 250, 252, 255, 258, 262, 265, 271, 280, 283, 287, 290, 294, 300, 304, 310, 322, 326, 332, 338, 344, 348, 357, 360, 365, 370, 478, 491, 497, 515, 539, 542, 543, 544, 548, 549, 550, 700, 749, 750, 751, 766, 784, 915, 937, 1043, 1119], "37": [7, 134, 136, 180, 191, 192, 203, 204, 208, 213, 218, 220, 223, 226, 229, 231, 234, 235, 239, 242, 245, 250, 252, 255, 258, 262, 265, 268, 271, 280, 283, 287, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 359, 360, 361, 515, 770, 772, 774, 776, 1043, 1135, 1148, 1149, 1150, 1152, 1153, 1154, 1155], "capit": [7, 38, 223, 226, 235, 242, 252, 258, 283, 304, 359, 893, 1088], "zeil": [7, 189, 203, 213, 220, 223, 226, 229, 235, 239, 258, 262, 280, 283, 322, 326, 338, 360], "nnoch": [7, 220, 223, 239], "some": [7, 17, 21, 110, 157, 169, 170, 171, 172, 174, 177, 180, 181, 185, 191, 194, 199, 202, 206, 209, 211, 222, 223, 229, 231, 239, 245, 246, 251, 257, 258, 262, 274, 275, 277, 283, 286, 289, 290, 292, 296, 298, 299, 306, 324, 325, 331, 332, 334, 383, 407, 441, 452, 468, 491, 497, 568, 593, 595, 615, 633, 646, 649, 703, 712, 740, 748, 750, 760, 763, 785, 786, 792, 797, 806, 821, 829, 833, 850, 852, 870, 875, 930, 938, 939, 960, 963, 989, 991, 993, 1001, 1030, 1032, 1059, 1075, 1081, 1127, 1145, 1164, 1186, 1187], "name": [7, 23, 39, 40, 57, 69, 114, 115, 116, 117, 118, 126, 128, 133, 146, 152, 162, 166, 169, 170, 172, 173, 174, 177, 184, 185, 190, 192, 194, 199, 202, 203, 206, 209, 211, 213, 218, 223, 226, 229, 230, 241, 243, 244, 245, 248, 250, 252, 255, 260, 262, 265, 280, 283, 287, 288, 290, 294, 304, 326, 332, 338, 344, 348, 350, 356, 359, 360, 361, 376, 398, 412, 418, 426, 427, 433, 434, 440, 444, 447, 451, 452, 455, 457, 460, 464, 466, 468, 469, 470, 472, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 495, 497, 512, 516, 517, 518, 523, 526, 530, 531, 532, 547, 549, 552, 557, 562, 594, 604, 606, 608, 672, 685, 691, 692, 702, 703, 712, 730, 732, 736, 742, 750, 783, 784, 785, 786, 789, 797, 801, 811, 815, 827, 829, 853, 859, 860, 861, 864, 872, 873, 875, 878, 879, 893, 899, 915, 921, 926, 933, 937, 938, 939, 941, 942, 949, 950, 953, 955, 959, 967, 1000, 1004, 1007, 1008, 1009, 1019, 1021, 1022, 1024, 1025, 1026, 1029, 1031, 1038, 1043, 1045, 1048, 1052, 1053, 1055, 1056, 1060, 1061, 1069, 1071, 1073, 1075, 1076, 1077, 1082, 1086, 1088, 1093, 1109, 1110, 1120, 1126, 1128, 1136, 1139, 1142, 1143, 1144, 1149, 1150, 1152, 1153, 1154, 1155, 1164, 1171, 1173, 1183, 1187, 1189, 1190], "directori": [7, 17, 44, 60, 101, 103, 104, 106, 113, 128, 141, 145, 166, 169, 170, 171, 172, 181, 185, 196, 201, 204, 210, 222, 223, 229, 230, 231, 232, 239, 242, 243, 245, 255, 258, 270, 275, 276, 277, 285, 286, 298, 299, 303, 306, 307, 312, 320, 324, 328, 338, 349, 350, 351, 365, 370, 376, 378, 379, 432, 466, 468, 473, 476, 480, 482, 484, 486, 487, 489, 492, 494, 496, 510, 511, 533, 536, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 569, 572, 575, 578, 581, 584, 587, 590, 681, 763, 785, 786, 811, 833, 835, 855, 859, 862, 863, 864, 866, 867, 868, 870, 872, 873, 875, 876, 877, 879, 880, 881, 882, 887, 888, 890, 892, 893, 898, 899, 900, 901, 902, 903, 905, 906, 907, 908, 909, 910, 913, 917, 922, 929, 937, 938, 939, 941, 946, 950, 952, 955, 958, 965, 966, 967, 968, 970, 973, 975, 984, 987, 990, 992, 996, 999, 1003, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1021, 1022, 1023, 1024, 1030, 1038, 1058, 1109, 1118, 1119, 1166, 1170, 1175, 1186, 1190, 1199], "multilin": [7, 213, 223, 238, 241, 245, 250, 258, 262, 322, 333, 365, 433, 1031, 1059], "jetzt": [7, 178, 189, 193, 203, 213, 220, 223, 233, 262, 318, 338, 348], "l": [7, 32, 38, 60, 62, 103, 128, 173, 177, 181, 189, 190, 192, 193, 198, 203, 208, 213, 218, 220, 221, 222, 223, 226, 229, 234, 235, 239, 242, 245, 248, 250, 252, 255, 258, 262, 265, 268, 271, 276, 280, 283, 285, 286, 290, 300, 304, 306, 307, 310, 322, 326, 332, 335, 338, 344, 348, 357, 359, 360, 365, 370, 438, 439, 446, 450, 462, 467, 468, 474, 481, 484, 485, 500, 512, 538, 585, 590, 609, 639, 690, 763, 784, 785, 786, 797, 811, 833, 834, 860, 861, 862, 863, 864, 866, 867, 870, 872, 875, 876, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 897, 900, 901, 904, 905, 907, 908, 909, 911, 912, 913, 917, 922, 926, 929, 930, 932, 937, 938, 939, 940, 941, 948, 950, 955, 956, 958, 960, 961, 963, 964, 965, 968, 970, 973, 976, 984, 987, 990, 991, 992, 1001, 1005, 1007, 1008, 1009, 1010, 1019, 1021, 1022, 1027, 1029, 1050, 1058, 1060, 1063, 1064, 1068, 1070, 1078, 1086, 1113, 1173, 1190], "44": [7, 166, 173, 180, 192, 203, 213, 218, 220, 223, 226, 229, 234, 235, 239, 242, 245, 250, 252, 255, 258, 262, 265, 268, 271, 280, 283, 287, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 357, 360, 771, 939, 1159], "45": [7, 29, 51, 53, 55, 56, 76, 77, 78, 91, 94, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 145, 159, 162, 175, 178, 180, 192, 202, 203, 206, 208, 213, 218, 220, 223, 226, 227, 229, 235, 239, 242, 245, 250, 252, 258, 262, 265, 268, 271, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 351, 352, 353, 354, 355, 356, 359, 360, 365, 370, 403, 418, 427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 479, 496, 510, 538, 539, 540, 541, 542, 543, 544, 545, 548, 555, 557, 590, 598, 613, 616, 619, 630, 631, 632, 633, 634, 635, 639, 641, 645, 654, 657, 658, 663, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 692, 699, 706, 717, 730, 731, 741, 746, 755, 763, 767, 771, 783, 784, 785, 786, 790, 793, 795, 798, 800, 803, 805, 809, 810, 812, 814, 816, 818, 824, 826, 828, 830, 837, 839, 842, 844, 848, 851, 854, 856, 860, 861, 862, 863, 866, 867, 874, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 913, 923, 929, 936, 941, 942, 943, 944, 945, 952, 958, 960, 968, 970, 972, 984, 987, 990, 992, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1032, 1039, 1040, 1041, 1042, 1046, 1054, 1065, 1074, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1135, 1137, 1141, 1144, 1145, 1147, 1151, 1158, 1161, 1163, 1168, 1169], "46": [7, 180, 203, 208, 213, 218, 220, 223, 226, 229, 235, 239, 242, 245, 250, 252, 255, 258, 262, 265, 268, 271, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 357, 360, 769, 915, 939, 955, 1135, 1136], "47": [7, 173, 175, 180, 203, 208, 213, 218, 220, 223, 226, 229, 235, 239, 242, 245, 250, 252, 258, 262, 265, 268, 271, 280, 283, 287, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 357, 360, 361, 740, 926, 991, 1019, 1076, 1135], "try": [7, 27, 128, 133, 141, 166, 169, 170, 172, 177, 189, 192, 202, 203, 206, 210, 213, 218, 220, 223, 226, 229, 232, 235, 237, 239, 242, 245, 248, 250, 252, 255, 258, 262, 265, 267, 268, 270, 271, 274, 275, 277, 279, 280, 283, 286, 287, 290, 297, 298, 299, 300, 303, 304, 310, 321, 322, 326, 332, 334, 338, 344, 348, 351, 358, 359, 360, 361, 365, 369, 370, 380, 458, 462, 488, 492, 499, 516, 521, 530, 538, 546, 555, 557, 590, 598, 616, 619, 635, 641, 645, 650, 654, 657, 658, 675, 677, 679, 682, 683, 684, 685, 686, 687, 718, 726, 730, 740, 746, 750, 764, 766, 780, 782, 784, 785, 786, 838, 841, 938, 959, 1004, 1028, 1035, 1088, 1131, 1137, 1148, 1149, 1153, 1166], "except": [7, 21, 29, 43, 46, 60, 62, 78, 114, 115, 171, 175, 181, 189, 190, 197, 202, 203, 206, 207, 209, 211, 213, 218, 220, 223, 226, 230, 231, 232, 235, 237, 239, 242, 243, 246, 247, 250, 252, 256, 257, 260, 262, 265, 267, 268, 272, 280, 283, 287, 290, 298, 299, 300, 303, 304, 310, 320, 321, 322, 324, 325, 326, 332, 338, 344, 348, 350, 352, 358, 359, 360, 361, 365, 370, 378, 379, 398, 450, 453, 487, 492, 493, 500, 527, 538, 555, 557, 590, 619, 635, 641, 645, 654, 657, 658, 662, 675, 682, 683, 685, 686, 687, 691, 694, 718, 726, 747, 749, 750, 761, 766, 786, 801, 833, 866, 871, 937, 991, 1005, 1028, 1032, 1035, 1038, 1041, 1044, 1054, 1056, 1059, 1077, 1079, 1129, 1131, 1148, 1153, 1166, 1176, 1183], "index": [7, 13, 23, 29, 39, 51, 53, 94, 114, 115, 166, 167, 176, 189, 191, 196, 201, 203, 204, 206, 207, 209, 211, 215, 216, 218, 221, 223, 226, 227, 229, 230, 232, 235, 237, 240, 242, 243, 245, 246, 248, 249, 251, 252, 253, 256, 258, 259, 261, 263, 264, 265, 267, 268, 270, 279, 280, 282, 283, 288, 289, 290, 292, 294, 296, 298, 299, 302, 303, 304, 308, 309, 311, 314, 317, 320, 321, 322, 324, 325, 326, 330, 331, 332, 336, 337, 338, 342, 343, 344, 346, 347, 348, 365, 372, 396, 412, 438, 466, 474, 569, 572, 575, 578, 581, 584, 585, 587, 625, 626, 628, 633, 672, 712, 740, 752, 766, 786, 829, 996, 999, 1003, 1054, 1055, 1067, 1070, 1077, 1083, 1084, 1085, 1086, 1088, 1090, 1103, 1109, 1114, 1129, 1131, 1132, 1133, 1135, 1136, 1137, 1145, 1147, 1149, 1151, 1152, 1154, 1158, 1168, 1170, 1175], "out": [7, 31, 44, 45, 50, 55, 62, 69, 79, 89, 110, 118, 124, 126, 128, 130, 133, 141, 145, 156, 162, 163, 166, 167, 169, 170, 171, 172, 173, 175, 176, 177, 180, 181, 185, 190, 191, 198, 199, 202, 206, 209, 210, 218, 223, 226, 231, 239, 245, 246, 248, 255, 258, 262, 266, 295, 321, 322, 344, 348, 351, 365, 371, 376, 387, 408, 426, 432, 433, 441, 452, 459, 466, 467, 468, 472, 474, 475, 480, 485, 488, 490, 492, 517, 518, 533, 536, 546, 562, 568, 585, 592, 594, 608, 623, 665, 668, 703, 718, 737, 740, 753, 764, 782, 801, 802, 811, 833, 841, 846, 860, 861, 864, 868, 872, 875, 879, 889, 920, 926, 930, 937, 938, 939, 956, 957, 973, 991, 994, 1004, 1005, 1007, 1019, 1024, 1031, 1035, 1075, 1076, 1083, 1109, 1112, 1139, 1144, 1146, 1152, 1154, 1155, 1159, 1165, 1184], "rang": [7, 29, 42, 62, 94, 112, 128, 129, 177, 190, 191, 192, 197, 206, 209, 211, 214, 215, 218, 221, 223, 226, 227, 230, 237, 238, 240, 241, 243, 244, 245, 248, 249, 251, 253, 254, 257, 258, 263, 264, 266, 267, 269, 271, 273, 281, 282, 283, 289, 291, 292, 299, 300, 302, 303, 305, 308, 309, 311, 320, 322, 324, 325, 326, 330, 331, 332, 335, 336, 337, 339, 342, 343, 345, 346, 347, 349, 357, 411, 438, 454, 456, 502, 536, 539, 540, 544, 568, 584, 585, 621, 623, 626, 629, 730, 780, 783, 785, 786, 797, 930, 937, 986, 992, 995, 1027, 1030, 1032, 1037, 1039, 1041, 1043, 1053, 1054, 1062, 1066, 1083, 1087, 1088, 1089, 1090, 1100, 1102, 1103, 1104, 1106, 1110, 1111, 1112, 1113, 1114, 1115, 1129, 1141, 1144, 1152, 1154, 1183, 1184, 1194], "48": [7, 173, 180, 189, 203, 208, 213, 218, 220, 223, 226, 229, 235, 242, 245, 250, 252, 255, 258, 262, 265, 268, 271, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 357, 360, 361, 937], "append": [7, 189, 190, 191, 192, 193, 203, 208, 210, 213, 218, 220, 221, 222, 223, 226, 229, 234, 235, 236, 239, 242, 243, 245, 250, 252, 255, 258, 262, 265, 268, 271, 280, 283, 287, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 360, 361, 474, 477, 567, 585, 627, 643, 655, 682, 794, 806, 821, 833, 860, 861, 875, 878, 899, 912, 937, 946, 959, 995, 1027, 1033, 1034, 1047, 1063, 1068, 1071, 1073, 1078, 1081, 1082, 1108, 1156, 1159], "one": [7, 21, 27, 32, 40, 44, 45, 50, 61, 62, 63, 70, 84, 88, 89, 110, 114, 115, 126, 128, 129, 132, 133, 137, 141, 145, 146, 152, 158, 160, 164, 169, 170, 171, 172, 173, 174, 176, 177, 180, 181, 185, 190, 191, 192, 194, 199, 202, 203, 206, 208, 210, 213, 218, 220, 221, 222, 223, 226, 229, 231, 232, 239, 242, 245, 250, 252, 253, 255, 256, 258, 261, 262, 265, 268, 270, 280, 283, 286, 289, 290, 292, 294, 296, 300, 304, 309, 310, 312, 321, 326, 328, 332, 338, 344, 348, 350, 351, 356, 357, 362, 365, 371, 383, 388, 395, 406, 411, 413, 421, 426, 428, 429, 433, 436, 438, 443, 446, 454, 455, 456, 458, 462, 466, 468, 474, 475, 477, 478, 480, 482, 486, 487, 490, 491, 492, 497, 499, 500, 502, 503, 511, 516, 518, 536, 539, 541, 542, 546, 547, 549, 568, 579, 585, 596, 597, 605, 606, 608, 609, 610, 611, 612, 623, 624, 632, 643, 646, 650, 665, 672, 689, 690, 693, 694, 695, 698, 707, 718, 737, 739, 740, 748, 750, 751, 752, 753, 754, 760, 762, 764, 771, 784, 794, 801, 808, 811, 821, 827, 833, 841, 849, 853, 858, 859, 860, 866, 875, 877, 878, 893, 912, 926, 930, 932, 933, 934, 937, 938, 939, 940, 942, 946, 949, 950, 956, 957, 959, 960, 963, 966, 967, 969, 975, 976, 977, 978, 980, 983, 986, 989, 991, 992, 993, 1000, 1004, 1007, 1010, 1013, 1019, 1022, 1023, 1025, 1026, 1028, 1030, 1031, 1033, 1039, 1041, 1042, 1044, 1055, 1056, 1059, 1060, 1061, 1063, 1067, 1068, 1070, 1072, 1073, 1077, 1079, 1081, 1082, 1089, 1099, 1102, 1109, 1110, 1135, 1136, 1137, 1138, 1140, 1144, 1145, 1147, 1149, 1155, 1156, 1157, 1160, 1164, 1166, 1171, 1173, 1186, 1189], "49": [7, 180, 189, 203, 208, 213, 218, 220, 223, 226, 229, 235, 239, 242, 245, 250, 252, 258, 262, 265, 268, 271, 280, 283, 287, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 357, 360, 361, 733, 878, 1019, 1033], "extend": [7, 65, 171, 172, 203, 220, 221, 223, 228, 234, 239, 242, 245, 250, 252, 258, 262, 265, 268, 280, 283, 290, 296, 300, 304, 310, 332, 338, 344, 348, 360, 495, 502, 511, 536, 609, 611, 612, 664, 794, 865, 1063, 1068, 1078, 1136, 1148], "slice": [7, 29, 94, 191, 193, 202, 206, 207, 209, 211, 216, 219, 220, 223, 230, 242, 243, 245, 246, 249, 253, 254, 260, 261, 263, 264, 265, 267, 279, 282, 284, 289, 292, 299, 302, 303, 305, 308, 309, 311, 320, 321, 324, 325, 330, 331, 336, 337, 342, 343, 346, 347, 786, 831, 992, 1054, 1067, 1071, 1090, 1103, 1114, 1129, 1145, 1149, 1151, 1153], "inclus": [7, 209, 223, 250, 262, 432, 625, 1092, 1152], "exclus": [7, 197, 223, 245, 262, 299, 414, 625, 760, 959, 992, 1041, 1077, 1081, 1092, 1152], "51": [7, 180, 203, 208, 213, 218, 220, 223, 226, 229, 235, 239, 242, 245, 250, 252, 258, 262, 265, 268, 271, 280, 283, 287, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 357, 360, 647, 648, 649, 650, 915, 917, 1135], "l\u00f6schen": [7, 213, 219, 223, 365], "52": [7, 180, 189, 203, 208, 213, 218, 220, 223, 226, 229, 235, 239, 242, 245, 250, 252, 258, 262, 265, 268, 271, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 360, 361, 939, 1135], "del": [7, 38, 189, 192, 193, 203, 218, 220, 223, 226, 234, 239, 242, 245, 250, 252, 258, 262, 265, 268, 271, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 358, 360, 1038, 1063, 1079], "53": [7, 173, 203, 208, 213, 218, 220, 223, 226, 229, 235, 239, 242, 245, 250, 252, 258, 262, 265, 268, 271, 280, 283, 287, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 357, 360, 372, 516, 517, 743, 813, 915, 937, 1007, 1019, 1135, 1136], "iter": [7, 24, 29, 62, 133, 134, 190, 193, 197, 202, 206, 207, 209, 211, 214, 215, 219, 221, 223, 227, 228, 230, 231, 233, 237, 238, 240, 241, 243, 244, 246, 247, 248, 249, 251, 253, 254, 257, 260, 262, 264, 265, 269, 281, 284, 290, 298, 299, 301, 305, 310, 320, 323, 324, 325, 327, 333, 339, 344, 349, 350, 365, 371, 423, 425, 438, 474, 499, 549, 568, 585, 627, 628, 629, 633, 636, 643, 646, 648, 650, 655, 705, 712, 721, 742, 780, 786, 956, 1028, 1032, 1034, 1043, 1056, 1066, 1080, 1081, 1087, 1088, 1089, 1090, 1103, 1114, 1126, 1129, 1131, 1141, 1143, 1153, 1156, 1194], "mittel": [7, 11, 23, 193, 203, 205, 221, 223, 228, 383, 1178, 1181, 1190, 1198], "54": [7, 180, 189, 203, 208, 213, 218, 220, 223, 226, 229, 235, 239, 242, 245, 250, 252, 255, 258, 262, 265, 268, 271, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 357, 359, 360, 372, 647, 648, 649, 650, 750, 823, 915, 937, 1019, 1135], "element": [7, 8, 35, 38, 110, 113, 114, 115, 128, 190, 192, 193, 203, 208, 209, 214, 215, 218, 220, 221, 223, 224, 226, 229, 233, 234, 235, 239, 242, 243, 245, 249, 251, 252, 258, 261, 262, 265, 269, 290, 294, 297, 300, 309, 322, 359, 360, 396, 423, 438, 446, 450, 453, 538, 552, 555, 557, 566, 585, 590, 622, 623, 624, 625, 626, 627, 628, 629, 630, 632, 636, 640, 643, 647, 650, 672, 690, 693, 695, 712, 726, 740, 742, 786, 794, 1001, 1033, 1035, 1052, 1063, 1068, 1069, 1078, 1080, 1113, 1139, 1156, 1164, 1187, 1194], "55": [7, 180, 189, 203, 208, 213, 218, 220, 223, 226, 229, 235, 239, 242, 245, 250, 252, 258, 262, 265, 268, 271, 280, 283, 287, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 357, 359, 360, 361, 372, 449, 474, 680, 681, 682, 683, 685, 784, 1007, 1088], "def": [7, 62, 189, 190, 193, 203, 208, 209, 213, 218, 220, 221, 223, 226, 229, 230, 235, 236, 239, 242, 243, 245, 250, 252, 255, 258, 262, 265, 268, 271, 280, 283, 288, 290, 300, 304, 310, 315, 318, 322, 326, 332, 338, 344, 348, 360, 361, 474, 732, 985, 1028, 1029, 1030, 1033, 1034, 1035, 1038, 1039, 1041, 1043, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1059, 1062, 1072, 1073, 1078, 1082, 1113, 1119, 1126, 1127, 1128, 1147, 1153, 1155, 1164, 1165], "is_integ": [7, 223, 280, 344], "elem": [7, 189, 193, 203, 208, 213, 218, 220, 223, 235, 242, 245, 250, 255, 280, 283, 290, 300, 304, 310, 326, 332, 338, 344, 348, 552, 649, 651, 698, 718, 720, 722, 725, 739, 740, 742, 762, 1035, 1078, 1082], "type": [7, 29, 50, 82, 87, 104, 114, 115, 146, 162, 163, 166, 169, 170, 173, 175, 177, 185, 189, 190, 193, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 219, 220, 222, 223, 226, 229, 230, 231, 234, 235, 239, 244, 247, 248, 250, 252, 257, 260, 262, 266, 268, 270, 271, 273, 281, 283, 286, 287, 290, 298, 299, 300, 303, 304, 310, 315, 319, 320, 321, 323, 324, 325, 326, 331, 332, 335, 338, 343, 345, 348, 357, 358, 359, 360, 365, 367, 368, 376, 398, 409, 410, 417, 422, 427, 428, 432, 434, 438, 440, 441, 444, 447, 448, 449, 450, 451, 454, 456, 457, 459, 460, 464, 469, 470, 474, 490, 492, 501, 504, 512, 518, 548, 552, 573, 582, 592, 594, 600, 601, 605, 607, 608, 618, 626, 655, 661, 665, 668, 670, 672, 674, 680, 692, 693, 698, 703, 704, 712, 718, 729, 730, 732, 737, 738, 739, 740, 749, 750, 752, 753, 754, 759, 769, 770, 772, 776, 777, 779, 781, 782, 783, 784, 785, 786, 789, 792, 794, 799, 802, 821, 833, 859, 863, 875, 878, 890, 893, 896, 907, 909, 910, 913, 921, 929, 930, 932, 937, 941, 946, 955, 956, 959, 962, 963, 964, 965, 966, 976, 988, 997, 1000, 1004, 1005, 1007, 1024, 1026, 1029, 1032, 1035, 1039, 1044, 1045, 1046, 1053, 1057, 1059, 1061, 1062, 1063, 1067, 1069, 1070, 1071, 1076, 1077, 1079, 1081, 1083, 1096, 1107, 1108, 1126, 1129, 1131, 1136, 1140, 1144, 1149, 1150, 1152, 1159, 1164, 1166, 1184, 1185], "int": [7, 21, 46, 111, 114, 115, 118, 121, 124, 125, 141, 172, 181, 190, 192, 203, 209, 213, 218, 220, 221, 223, 226, 230, 231, 236, 239, 242, 243, 245, 248, 250, 252, 255, 258, 262, 265, 268, 271, 280, 283, 289, 290, 292, 300, 304, 310, 318, 322, 326, 332, 337, 338, 344, 348, 358, 360, 361, 387, 388, 390, 392, 394, 396, 397, 398, 400, 401, 402, 406, 407, 408, 410, 411, 412, 416, 426, 428, 429, 430, 431, 432, 433, 435, 436, 438, 439, 441, 442, 443, 446, 448, 449, 453, 454, 455, 456, 457, 458, 462, 463, 497, 504, 511, 512, 516, 517, 518, 519, 522, 525, 526, 528, 530, 531, 532, 534, 536, 544, 546, 548, 550, 551, 552, 553, 554, 556, 566, 568, 573, 576, 582, 585, 592, 594, 595, 596, 597, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 615, 617, 618, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 643, 646, 647, 648, 649, 650, 651, 655, 657, 661, 662, 665, 667, 668, 670, 671, 672, 674, 679, 680, 681, 682, 683, 684, 685, 686, 690, 691, 693, 694, 697, 703, 704, 705, 707, 708, 709, 710, 712, 713, 714, 715, 716, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 732, 733, 734, 735, 737, 738, 739, 740, 742, 744, 751, 752, 753, 754, 757, 759, 762, 764, 766, 770, 772, 774, 776, 784, 789, 792, 797, 799, 804, 811, 813, 815, 817, 821, 825, 827, 829, 838, 843, 850, 870, 890, 933, 937, 951, 953, 955, 956, 957, 959, 962, 963, 964, 965, 966, 969, 971, 974, 976, 978, 980, 982, 988, 991, 994, 995, 997, 1000, 1001, 1004, 1005, 1007, 1019, 1023, 1025, 1050, 1061, 1062, 1070, 1071, 1073, 1076, 1082, 1083, 1098, 1121, 1123, 1126, 1127, 1171, 1176], "return": [7, 21, 27, 62, 111, 118, 121, 124, 125, 166, 169, 171, 172, 173, 177, 181, 189, 190, 193, 203, 207, 209, 211, 213, 218, 220, 221, 223, 226, 229, 230, 231, 235, 236, 239, 242, 243, 245, 248, 250, 252, 255, 258, 262, 265, 268, 272, 273, 280, 283, 288, 290, 294, 300, 304, 315, 318, 321, 322, 326, 332, 339, 344, 348, 360, 361, 387, 388, 390, 394, 396, 398, 407, 416, 426, 432, 438, 439, 441, 448, 449, 452, 453, 455, 456, 458, 462, 474, 481, 490, 491, 492, 493, 497, 499, 502, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 536, 543, 544, 548, 549, 552, 568, 576, 582, 585, 592, 593, 594, 596, 597, 600, 601, 602, 603, 605, 606, 607, 608, 609, 610, 611, 615, 617, 618, 620, 621, 622, 623, 624, 625, 627, 628, 629, 630, 631, 633, 634, 637, 638, 639, 643, 646, 647, 648, 649, 650, 651, 657, 661, 662, 665, 667, 668, 674, 678, 679, 680, 681, 682, 683, 684, 685, 686, 690, 695, 697, 698, 705, 707, 708, 709, 710, 712, 713, 714, 715, 716, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 732, 733, 734, 735, 736, 737, 740, 742, 747, 748, 750, 751, 752, 753, 754, 760, 762, 764, 770, 772, 774, 775, 776, 777, 780, 781, 782, 784, 789, 796, 804, 811, 815, 823, 825, 847, 849, 853, 870, 890, 937, 951, 953, 955, 956, 957, 959, 960, 962, 963, 964, 965, 966, 971, 974, 975, 976, 986, 988, 991, 997, 1000, 1001, 1004, 1005, 1007, 1019, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1033, 1034, 1035, 1043, 1047, 1048, 1050, 1051, 1052, 1073, 1075, 1077, 1078, 1079, 1082, 1088, 1104, 1106, 1110, 1113, 1114, 1121, 1123, 1126, 1150, 1152, 1153, 1155, 1164, 1171, 1176], "els": [7, 21, 43, 50, 62, 114, 115, 123, 129, 145, 170, 172, 173, 176, 185, 190, 193, 203, 206, 209, 213, 221, 223, 226, 229, 230, 231, 235, 239, 242, 243, 246, 247, 248, 250, 254, 255, 260, 262, 265, 269, 271, 280, 282, 283, 288, 290, 300, 304, 310, 322, 332, 339, 344, 349, 350, 361, 372, 394, 400, 411, 416, 427, 433, 434, 440, 444, 447, 451, 452, 460, 464, 469, 470, 474, 482, 483, 497, 521, 528, 531, 585, 608, 632, 633, 643, 650, 664, 684, 692, 697, 730, 751, 753, 760, 764, 783, 785, 786, 815, 825, 849, 860, 861, 866, 885, 887, 890, 896, 917, 938, 951, 954, 959, 985, 986, 988, 991, 993, 1031, 1038, 1050, 1051, 1054, 1065, 1073, 1079, 1153, 1183], "fals": [7, 46, 114, 115, 118, 122, 123, 125, 173, 175, 189, 190, 203, 208, 213, 218, 220, 221, 223, 226, 229, 235, 239, 242, 243, 245, 250, 252, 255, 258, 262, 265, 268, 271, 280, 283, 287, 290, 294, 300, 304, 310, 315, 322, 326, 332, 338, 344, 348, 359, 374, 390, 394, 411, 448, 474, 608, 633, 665, 672, 695, 707, 760, 764, 766, 853, 866, 893, 985, 986, 991, 993, 1013, 1028, 1043, 1047, 1050, 1063, 1064, 1066, 1067, 1071, 1149, 1150, 1153, 1155, 1171], "56": [7, 166, 180, 203, 208, 213, 218, 220, 223, 226, 229, 235, 239, 242, 245, 250, 252, 258, 262, 265, 268, 271, 280, 283, 287, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 357, 359, 360, 372, 411, 515, 603, 784, 912, 937, 939, 1135, 1148, 1149, 1150, 1152, 1153, 1154, 1155], "x": [7, 23, 32, 42, 60, 62, 118, 121, 122, 125, 175, 181, 189, 190, 191, 193, 203, 213, 218, 220, 222, 223, 226, 229, 239, 242, 245, 246, 250, 252, 258, 262, 265, 268, 270, 271, 280, 283, 287, 290, 299, 300, 304, 326, 332, 338, 344, 348, 361, 365, 407, 410, 411, 417, 432, 433, 435, 438, 441, 442, 446, 448, 456, 458, 462, 485, 536, 546, 583, 592, 593, 594, 595, 597, 599, 600, 601, 602, 603, 604, 606, 608, 610, 611, 618, 625, 633, 693, 694, 695, 697, 712, 714, 715, 716, 733, 744, 753, 859, 860, 861, 864, 868, 870, 875, 878, 880, 881, 889, 890, 915, 918, 922, 924, 930, 937, 938, 939, 955, 965, 971, 973, 974, 982, 986, 1007, 1008, 1009, 1010, 1015, 1019, 1021, 1022, 1027, 1028, 1056, 1058, 1064, 1072, 1073, 1075, 1076, 1077, 1080, 1081, 1085, 1109, 1136, 1153, 1164, 1165, 1171], "filter": [7, 29, 110, 113, 128, 187, 190, 223, 230, 243, 260, 283, 289, 292, 296, 297, 304, 321, 323, 326, 333, 338, 342, 346, 347, 538, 555, 590, 748, 749, 786, 858, 877, 926, 1129, 1145, 1151, 1154, 1171], "57": [7, 166, 180, 203, 208, 213, 218, 220, 223, 226, 229, 235, 239, 242, 245, 250, 252, 258, 262, 265, 268, 271, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 357, 360, 361, 481, 486, 915, 937, 950, 1008, 1009, 1135], "zero": [7, 32, 38, 166, 172, 188, 190, 191, 193, 203, 213, 221, 223, 226, 239, 245, 250, 252, 255, 258, 262, 265, 280, 304, 338, 344, 365, 387, 396, 414, 739, 749, 753, 792, 804, 819, 864, 893, 908, 915, 939, 959, 980, 986, 989, 992, 995, 1000, 1001, 1067], "two": [7, 12, 17, 29, 32, 34, 35, 36, 38, 42, 44, 54, 73, 89, 110, 137, 158, 160, 163, 164, 169, 170, 171, 172, 185, 190, 191, 192, 198, 202, 203, 208, 213, 214, 216, 218, 220, 221, 223, 226, 227, 229, 231, 232, 233, 237, 239, 240, 243, 245, 248, 249, 250, 252, 253, 258, 259, 261, 262, 264, 266, 267, 268, 280, 282, 283, 286, 288, 289, 290, 298, 300, 302, 303, 304, 308, 309, 310, 314, 317, 326, 330, 331, 332, 336, 337, 338, 342, 343, 344, 346, 347, 348, 351, 357, 365, 371, 374, 383, 384, 395, 402, 432, 438, 440, 441, 444, 446, 447, 450, 451, 453, 455, 458, 460, 464, 469, 470, 472, 473, 474, 475, 484, 487, 500, 502, 512, 516, 517, 536, 546, 548, 568, 576, 579, 585, 601, 606, 608, 625, 648, 690, 691, 692, 693, 694, 730, 736, 739, 740, 742, 749, 752, 754, 783, 785, 786, 831, 833, 836, 898, 900, 920, 930, 932, 937, 938, 939, 956, 959, 960, 967, 977, 978, 986, 991, 1000, 1005, 1015, 1025, 1033, 1039, 1042, 1045, 1050, 1053, 1054, 1060, 1063, 1066, 1077, 1079, 1081, 1087, 1090, 1092, 1093, 1094, 1097, 1099, 1100, 1103, 1104, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1126, 1129, 1130, 1136, 1138, 1144, 1152, 1165, 1171, 1184, 1194, 1199], "58": [7, 173, 180, 203, 208, 213, 218, 220, 223, 226, 229, 235, 239, 242, 245, 250, 252, 258, 262, 265, 268, 271, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 360, 365, 370, 372, 474, 939, 1008, 1009, 1019, 1135, 1136], "59": [7, 180, 203, 208, 213, 218, 220, 223, 226, 229, 235, 239, 242, 245, 250, 252, 258, 262, 265, 268, 271, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 357, 360, 372, 1009, 1010, 1019, 1135], "three": [7, 12, 32, 36, 38, 43, 62, 114, 115, 133, 171, 183, 186, 190, 191, 202, 203, 206, 207, 213, 218, 220, 221, 223, 229, 237, 239, 242, 245, 250, 252, 255, 258, 262, 265, 268, 280, 283, 288, 289, 290, 292, 298, 299, 300, 304, 309, 310, 322, 326, 332, 338, 344, 348, 365, 383, 452, 627, 672, 866, 875, 878, 893, 930, 937, 939, 959, 991, 1000, 1035, 1045, 1063, 1067, 1077, 1079, 1081, 1093, 1099, 1130, 1131, 1185, 1199], "60": [7, 62, 110, 150, 180, 203, 208, 213, 218, 220, 223, 226, 229, 235, 239, 242, 245, 250, 252, 258, 262, 265, 268, 270, 271, 280, 283, 287, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 359, 360, 516, 517, 518, 530, 531, 532, 539, 875, 937, 938, 939, 1033, 1135, 1136], "61": [7, 62, 150, 180, 191, 203, 208, 213, 218, 220, 223, 226, 229, 235, 242, 245, 250, 252, 258, 262, 265, 271, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 357, 360, 365, 370, 1135, 1136], "62": [7, 180, 203, 208, 213, 218, 220, 223, 226, 229, 235, 239, 242, 245, 250, 252, 258, 262, 265, 268, 271, 280, 283, 287, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 360, 875, 1088, 1135], "63": [7, 180, 203, 208, 213, 218, 220, 223, 226, 229, 235, 242, 245, 250, 252, 258, 262, 265, 268, 271, 280, 283, 287, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 357, 360, 365, 370, 1088, 1135], "k": [7, 29, 172, 191, 193, 203, 206, 218, 220, 223, 226, 230, 231, 242, 245, 250, 252, 255, 258, 265, 268, 280, 283, 289, 290, 300, 310, 320, 322, 324, 326, 332, 338, 344, 348, 366, 367, 386, 514, 647, 690, 752, 770, 786, 893, 940, 975, 1129, 1132, 1138, 1145, 1164], "v": [7, 20, 23, 31, 32, 92, 126, 136, 152, 166, 170, 177, 191, 194, 197, 203, 207, 209, 211, 215, 217, 218, 221, 222, 223, 228, 230, 231, 232, 233, 239, 242, 243, 245, 246, 248, 249, 251, 257, 260, 261, 263, 266, 268, 272, 279, 280, 283, 286, 291, 299, 301, 305, 309, 310, 316, 322, 326, 332, 335, 338, 344, 348, 351, 365, 462, 486, 491, 512, 538, 572, 590, 647, 667, 690, 694, 698, 703, 704, 705, 712, 713, 714, 715, 716, 721, 724, 725, 726, 732, 738, 739, 740, 763, 766, 769, 771, 782, 785, 786, 795, 800, 803, 805, 810, 814, 816, 820, 824, 825, 826, 828, 830, 833, 835, 837, 841, 842, 844, 848, 851, 854, 859, 863, 866, 867, 870, 893, 895, 922, 929, 952, 958, 960, 968, 970, 984, 987, 990, 992, 1000, 1001, 1007, 1050, 1073, 1166, 1167, 1179, 1181, 1198, 1200], "65": [7, 203, 208, 213, 218, 220, 223, 226, 229, 235, 239, 242, 245, 250, 252, 258, 262, 265, 268, 271, 280, 283, 287, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 357, 360, 680, 995, 1135, 1136], "item": [7, 170, 190, 192, 203, 208, 213, 218, 220, 223, 226, 229, 230, 234, 235, 239, 242, 243, 245, 250, 252, 255, 258, 262, 265, 268, 270, 274, 275, 277, 280, 283, 288, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 359, 450, 454, 456, 475, 739, 783, 785, 786, 1000, 1001, 1035, 1036, 1037, 1043, 1069, 1076, 1079, 1081, 1119, 1164], "66": [7, 173, 180, 203, 208, 213, 218, 220, 223, 226, 229, 235, 242, 245, 250, 252, 258, 262, 265, 268, 271, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 360, 670, 1088, 1135, 1136], "": [7, 8, 14, 20, 23, 31, 35, 37, 38, 40, 43, 44, 45, 48, 55, 60, 61, 62, 63, 65, 69, 70, 82, 93, 108, 112, 113, 126, 128, 133, 141, 145, 146, 156, 166, 167, 169, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 187, 190, 191, 192, 194, 196, 197, 199, 200, 202, 203, 206, 208, 209, 213, 214, 218, 220, 221, 222, 223, 224, 226, 229, 231, 232, 235, 236, 239, 242, 243, 245, 246, 248, 249, 250, 252, 255, 256, 258, 262, 265, 268, 271, 274, 275, 277, 280, 283, 286, 287, 288, 289, 290, 292, 295, 296, 297, 298, 299, 300, 304, 307, 310, 312, 314, 317, 320, 321, 322, 324, 326, 328, 332, 334, 335, 337, 338, 344, 348, 350, 351, 359, 360, 362, 365, 368, 369, 383, 385, 398, 400, 406, 411, 432, 433, 436, 445, 450, 452, 454, 455, 456, 457, 458, 462, 473, 474, 475, 477, 478, 480, 482, 483, 486, 487, 490, 491, 492, 494, 495, 496, 497, 500, 501, 512, 514, 515, 517, 518, 522, 533, 535, 546, 547, 548, 549, 552, 558, 560, 561, 569, 572, 575, 576, 578, 581, 584, 587, 594, 596, 597, 600, 601, 604, 605, 607, 608, 617, 627, 637, 638, 648, 655, 657, 662, 664, 667, 668, 670, 674, 677, 681, 691, 692, 694, 696, 698, 701, 702, 703, 704, 707, 711, 712, 718, 727, 730, 732, 735, 739, 740, 742, 744, 748, 749, 750, 752, 754, 762, 764, 765, 766, 770, 772, 774, 775, 776, 777, 782, 784, 785, 786, 792, 801, 804, 806, 811, 817, 819, 829, 838, 841, 853, 858, 859, 860, 861, 864, 865, 868, 870, 871, 875, 876, 877, 879, 883, 885, 887, 889, 890, 891, 893, 895, 896, 912, 915, 916, 918, 919, 921, 922, 924, 925, 926, 930, 933, 937, 938, 939, 940, 941, 948, 949, 950, 951, 953, 954, 955, 956, 957, 959, 960, 962, 963, 964, 965, 966, 967, 969, 971, 973, 974, 976, 977, 978, 982, 983, 986, 988, 991, 992, 993, 995, 996, 997, 999, 1001, 1003, 1004, 1005, 1010, 1019, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1033, 1034, 1036, 1037, 1038, 1042, 1043, 1050, 1054, 1055, 1056, 1059, 1063, 1064, 1070, 1073, 1076, 1077, 1080, 1081, 1088, 1093, 1100, 1111, 1118, 1119, 1120, 1122, 1130, 1137, 1139, 1140, 1143, 1144, 1147, 1154, 1155, 1156, 1157, 1158, 1159, 1164, 1165, 1170, 1173, 1175, 1176, 1179, 1184, 1186, 1189, 1202], "rot": [7, 223, 234], "gruen": [7, 223], "blau": [7, 223, 234], "67": [7, 180, 191, 203, 213, 218, 220, 223, 226, 229, 235, 242, 245, 250, 252, 258, 262, 265, 268, 271, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 360, 365, 370, 474, 539, 995, 1076, 1088, 1135, 1136], "69": [7, 60, 175, 180, 203, 208, 213, 218, 220, 223, 226, 229, 235, 239, 242, 245, 250, 252, 258, 262, 265, 268, 271, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 360, 1135, 1136, 1155], "schwarz": [7, 223, 234], "70": [7, 60, 150, 172, 180, 203, 208, 210, 213, 218, 220, 223, 226, 229, 235, 242, 245, 250, 252, 258, 262, 265, 268, 271, 280, 283, 287, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 360, 474, 539, 937, 938, 939, 1033, 1135, 1136, 1164], "add": [7, 23, 42, 44, 49, 65, 69, 126, 133, 135, 146, 152, 154, 165, 166, 170, 171, 172, 176, 177, 181, 185, 190, 199, 202, 203, 206, 209, 218, 220, 221, 223, 226, 229, 231, 235, 239, 242, 243, 245, 250, 255, 258, 262, 265, 268, 274, 275, 280, 283, 286, 290, 294, 300, 304, 310, 315, 317, 322, 326, 332, 335, 338, 344, 348, 365, 371, 413, 414, 453, 454, 462, 475, 476, 482, 485, 492, 494, 495, 511, 512, 516, 521, 522, 533, 541, 548, 550, 568, 582, 592, 605, 606, 608, 610, 679, 680, 681, 690, 698, 718, 729, 740, 748, 762, 764, 799, 801, 802, 806, 813, 821, 823, 833, 846, 849, 859, 932, 937, 938, 939, 967, 991, 993, 995, 1001, 1006, 1019, 1021, 1028, 1029, 1051, 1055, 1063, 1081, 1086, 1153, 1164, 1165, 1171], "71": [7, 150, 180, 203, 208, 213, 218, 220, 223, 226, 229, 235, 242, 245, 250, 252, 258, 262, 265, 268, 271, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 360, 365, 370, 1008, 1009, 1135, 1136], "72": [7, 180, 203, 208, 213, 218, 220, 223, 226, 229, 235, 242, 245, 250, 252, 258, 262, 265, 268, 271, 280, 283, 287, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 357, 360, 365, 370, 600, 924, 1019, 1088, 1135, 1136], "remov": [7, 57, 103, 113, 128, 133, 134, 176, 177, 190, 192, 203, 218, 223, 229, 235, 243, 245, 250, 252, 258, 262, 265, 269, 270, 276, 283, 285, 286, 300, 304, 306, 307, 310, 321, 322, 326, 332, 338, 348, 477, 478, 496, 510, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 555, 556, 557, 562, 566, 585, 590, 620, 626, 643, 676, 698, 751, 762, 763, 764, 781, 784, 785, 786, 794, 811, 821, 829, 852, 859, 860, 861, 862, 863, 866, 867, 880, 881, 883, 885, 886, 887, 888, 890, 891, 897, 898, 899, 900, 902, 903, 905, 907, 913, 929, 940, 950, 952, 958, 960, 963, 968, 970, 973, 984, 987, 990, 992, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1023, 1033, 1053, 1063, 1078, 1079, 1080, 1113], "73": [7, 180, 191, 203, 213, 218, 220, 223, 226, 229, 235, 242, 245, 250, 252, 258, 262, 265, 271, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 357, 360, 1135], "74": [7, 173, 175, 180, 203, 213, 218, 220, 223, 226, 229, 235, 242, 245, 250, 252, 258, 262, 265, 268, 271, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 360, 915, 924, 1088, 1135, 1136], "75": [7, 180, 203, 213, 218, 220, 223, 226, 229, 231, 235, 239, 242, 245, 250, 252, 258, 262, 265, 268, 271, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 360, 474, 1135, 1136], "sum": [7, 38, 62, 203, 223, 227, 228, 242, 243, 245, 248, 250, 258, 261, 262, 265, 268, 283, 290, 332, 338, 344, 348, 423, 438, 453, 455, 456, 458, 522, 548, 568, 592, 606, 608, 621, 625, 673, 687, 770, 772, 774, 776, 786, 992, 1050, 1066, 1149], "100": [7, 32, 126, 150, 169, 170, 175, 185, 189, 190, 203, 213, 220, 223, 226, 229, 235, 239, 242, 245, 250, 252, 255, 258, 261, 262, 265, 268, 270, 271, 280, 283, 286, 287, 288, 290, 294, 300, 304, 310, 321, 322, 326, 332, 338, 344, 348, 360, 361, 365, 370, 423, 429, 430, 472, 475, 488, 497, 530, 531, 539, 558, 620, 621, 622, 623, 624, 626, 627, 628, 629, 643, 690, 707, 728, 804, 843, 889, 892, 915, 932, 971, 993, 995, 999, 1000, 1008, 1009, 1034, 1066, 1070, 1088, 1119, 1164], "5050": [7, 203, 223, 245, 258, 265, 290, 332, 338, 344, 348], "bestimmen": [7, 223], "maximum": [7, 29, 163, 203, 213, 214, 216, 218, 221, 223, 226, 227, 233, 237, 239, 240, 242, 243, 245, 249, 250, 252, 253, 255, 258, 259, 261, 262, 264, 266, 267, 282, 283, 289, 290, 302, 303, 304, 308, 309, 330, 331, 336, 337, 338, 342, 343, 344, 346, 347, 348, 361, 413, 686, 764, 786, 794, 870, 930, 995, 1001, 1073, 1090, 1092, 1093, 1094, 1097, 1100, 1103, 1104, 1110, 1111, 1112, 1113, 1114, 1115, 1129, 1130, 1134, 1135, 1136, 1137, 1159, 1194], "zwei": [7, 68, 150, 179, 189, 197, 203, 215, 218, 220, 223, 226, 239, 242, 250, 255, 258, 262, 268, 290, 310, 318, 322, 326, 348, 360, 556, 647, 648, 649, 650, 920, 1181, 1198], "inlin": [7, 146, 191, 197, 209, 223, 239, 268, 271, 273, 295, 322, 326, 332, 433, 455, 458, 579, 594, 608, 647, 684, 736, 754, 770, 772, 774, 775, 776, 777, 784, 1027, 1106], "ohn": [7, 23, 187, 189, 197, 223, 226, 338, 855, 921, 1180, 1200, 1201, 1202], "funktion": [7, 23, 193, 197, 203, 214, 215, 216, 220, 223, 226, 229, 250, 252, 255, 258, 290, 322, 360, 1194], "666": [7, 42, 50, 111, 118, 124, 134, 136, 189, 190, 203, 213, 218, 220, 223, 226, 229, 235, 239, 242, 245, 250, 252, 255, 258, 262, 265, 268, 271, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 356, 357, 358, 360, 361, 396, 476, 495, 550, 551, 552, 553, 554, 558, 559, 560, 561, 563, 564, 566, 573, 585, 592, 596, 605, 607, 630, 631, 632, 633, 634, 636, 639, 647, 650, 670, 674, 703, 705, 712, 714, 715, 716, 720, 740, 744, 747, 749, 754, 757, 770, 772, 774, 780, 781, 782, 791, 792, 1026, 1030, 1072, 1073, 1076, 1176], "var1": [7, 213, 223, 1096], "var2": [7, 213, 223, 1096], "6712": [7, 223, 245], "isn": [7, 169, 185, 223, 289, 292, 373, 387, 438, 625, 629, 668, 691, 718, 738, 937, 1075, 1171], "fehler": [7, 197, 203, 223, 365, 370], "link": [7, 13, 17, 27, 32, 44, 69, 107, 108, 128, 134, 139, 163, 166, 167, 169, 170, 176, 177, 178, 179, 180, 181, 187, 189, 197, 203, 210, 223, 246, 248, 276, 277, 285, 286, 294, 299, 306, 307, 312, 328, 338, 365, 378, 379, 428, 441, 447, 451, 455, 460, 464, 469, 470, 475, 478, 480, 481, 486, 496, 510, 533, 538, 539, 540, 541, 542, 543, 544, 545, 548, 568, 575, 576, 590, 605, 692, 698, 706, 730, 740, 741, 783, 784, 785, 786, 794, 795, 799, 800, 803, 811, 814, 823, 824, 833, 835, 837, 842, 848, 851, 854, 863, 913, 915, 920, 929, 938, 945, 975, 978, 980, 1007, 1008, 1009, 1010, 1012, 1013, 1014, 1015, 1017, 1019, 1025, 1130, 1158, 1168, 1171, 1178, 1179, 1186], "\u212c": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 77, 78, 101, 110, 119, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 206, 207, 209, 210, 211, 212, 214, 216, 217, 224, 227, 230, 231, 232, 233, 237, 240, 243, 246, 248, 249, 253, 256, 259, 261, 264, 270, 274, 275, 276, 277, 278, 285, 286, 288, 295, 296, 297, 298, 299, 306, 307, 312, 313, 314, 317, 320, 321, 324, 325, 328, 329, 334, 335, 340, 350, 351, 352, 353, 354, 356, 365, 372, 373, 374, 375, 376, 377, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 445, 446, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 465, 466, 467, 468, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 511, 512, 519, 520, 521, 522, 523, 525, 526, 527, 533, 534, 535, 536, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 617, 618, 625, 626, 627, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 655, 657, 659, 661, 662, 664, 665, 666, 667, 668, 670, 671, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 689, 690, 691, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 706, 707, 711, 712, 717, 718, 727, 728, 729, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 759, 760, 761, 762, 764, 765, 766, 770, 772, 774, 775, 776, 777, 784, 788, 789, 791, 792, 794, 796, 797, 799, 801, 802, 804, 810, 811, 813, 815, 817, 819, 821, 823, 825, 827, 829, 831, 835, 836, 838, 840, 841, 843, 846, 847, 849, 850, 852, 853, 855, 857, 858, 859, 864, 865, 868, 869, 870, 871, 872, 873, 875, 876, 877, 878, 889, 890, 891, 892, 893, 894, 895, 896, 912, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 926, 931, 932, 933, 934, 937, 940, 946, 947, 948, 949, 950, 951, 953, 954, 955, 956, 957, 958, 959, 962, 963, 964, 965, 966, 969, 971, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 985, 986, 988, 989, 991, 993, 994, 995, 1007, 1008, 1009, 1010, 1015, 1019, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1033, 1035, 1038, 1039, 1041, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1086, 1087, 1088, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1139, 1140, 1142, 1143, 1144, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1160, 1164, 1165, 1166, 1167, 1194], "\u2145": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 77, 78, 101, 110, 119, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 206, 207, 209, 210, 211, 212, 214, 216, 217, 224, 227, 230, 231, 232, 233, 237, 240, 243, 246, 248, 249, 253, 256, 259, 261, 264, 270, 274, 275, 276, 277, 278, 285, 286, 288, 295, 296, 297, 298, 299, 306, 307, 312, 313, 314, 317, 320, 321, 324, 325, 328, 329, 334, 335, 340, 350, 351, 352, 353, 354, 356, 365, 372, 373, 374, 375, 376, 377, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 445, 446, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 465, 466, 467, 468, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 511, 512, 519, 520, 521, 522, 523, 525, 526, 527, 533, 534, 535, 536, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 617, 618, 625, 626, 627, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 655, 657, 659, 661, 662, 664, 665, 666, 667, 668, 670, 671, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 689, 690, 691, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 706, 707, 711, 712, 717, 718, 727, 728, 729, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 759, 760, 761, 762, 764, 765, 766, 770, 772, 774, 775, 776, 777, 784, 788, 789, 791, 792, 794, 796, 797, 799, 801, 802, 804, 810, 811, 813, 815, 817, 819, 821, 823, 825, 827, 829, 831, 835, 836, 838, 840, 841, 843, 846, 847, 849, 850, 852, 853, 855, 857, 858, 859, 864, 865, 868, 869, 870, 871, 872, 873, 875, 876, 877, 878, 889, 890, 891, 892, 893, 894, 895, 896, 912, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 926, 931, 932, 933, 934, 937, 940, 946, 947, 948, 949, 950, 951, 953, 954, 955, 956, 957, 958, 959, 962, 963, 964, 965, 966, 969, 971, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 985, 986, 988, 989, 991, 993, 994, 995, 1007, 1008, 1009, 1010, 1015, 1019, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1033, 1035, 1038, 1039, 1041, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1086, 1087, 1088, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1139, 1140, 1142, 1143, 1144, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1160, 1164, 1165, 1166, 1167, 1194], "\u212d": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 77, 78, 101, 110, 119, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 206, 207, 209, 210, 211, 212, 214, 216, 217, 224, 227, 230, 231, 232, 233, 237, 240, 243, 246, 248, 249, 253, 256, 259, 261, 264, 270, 274, 275, 276, 277, 278, 285, 286, 288, 295, 296, 297, 298, 299, 306, 307, 312, 313, 314, 317, 320, 321, 324, 325, 328, 329, 334, 335, 340, 350, 351, 352, 353, 354, 356, 365, 372, 373, 374, 375, 376, 377, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 445, 446, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 465, 466, 467, 468, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 511, 512, 519, 520, 521, 522, 523, 525, 526, 527, 533, 534, 535, 536, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 617, 618, 625, 626, 627, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 655, 657, 659, 661, 662, 664, 665, 666, 667, 668, 670, 671, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 689, 690, 691, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 706, 707, 711, 712, 717, 718, 727, 728, 729, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 759, 760, 761, 762, 764, 765, 766, 770, 772, 774, 775, 776, 777, 784, 788, 789, 791, 792, 794, 796, 797, 799, 801, 802, 804, 810, 811, 813, 815, 817, 819, 821, 823, 825, 827, 829, 831, 835, 836, 838, 840, 841, 843, 846, 847, 849, 850, 852, 853, 855, 857, 858, 859, 864, 865, 868, 869, 870, 871, 872, 873, 875, 876, 877, 878, 889, 890, 891, 892, 893, 894, 895, 896, 912, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 926, 931, 932, 933, 934, 937, 940, 946, 947, 948, 949, 950, 951, 953, 954, 955, 956, 957, 958, 959, 962, 963, 964, 965, 966, 969, 971, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 985, 986, 988, 989, 991, 993, 994, 995, 1007, 1008, 1009, 1010, 1015, 1019, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1033, 1035, 1038, 1039, 1041, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1086, 1087, 1088, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1139, 1140, 1142, 1143, 1144, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1160, 1164, 1165, 1166, 1167, 1194], "\u2102": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 77, 78, 101, 110, 119, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 206, 207, 209, 210, 211, 212, 214, 216, 217, 224, 227, 230, 231, 232, 233, 237, 240, 243, 246, 248, 249, 253, 256, 259, 261, 264, 270, 274, 275, 276, 277, 278, 285, 286, 288, 295, 296, 297, 298, 299, 306, 307, 312, 313, 314, 317, 320, 321, 324, 325, 328, 329, 334, 335, 340, 350, 351, 352, 353, 354, 356, 365, 372, 373, 374, 375, 376, 377, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 445, 446, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 465, 466, 467, 468, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 511, 512, 519, 520, 521, 522, 523, 525, 526, 527, 533, 534, 535, 536, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 617, 618, 625, 626, 627, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 655, 657, 659, 661, 662, 664, 665, 666, 667, 668, 670, 671, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 689, 690, 691, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 706, 707, 711, 712, 717, 718, 727, 728, 729, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 759, 760, 761, 762, 764, 765, 766, 770, 772, 774, 775, 776, 777, 784, 788, 789, 791, 792, 794, 796, 797, 799, 801, 802, 804, 810, 811, 813, 815, 817, 819, 821, 823, 825, 827, 829, 831, 835, 836, 838, 840, 841, 843, 846, 847, 849, 850, 852, 853, 855, 857, 858, 859, 864, 865, 868, 869, 870, 871, 872, 873, 875, 876, 877, 878, 889, 890, 891, 892, 893, 894, 895, 896, 912, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 926, 931, 932, 933, 934, 937, 940, 946, 947, 948, 949, 950, 951, 953, 954, 955, 956, 957, 958, 959, 962, 963, 964, 965, 966, 969, 971, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 985, 986, 988, 989, 991, 993, 994, 995, 1007, 1008, 1009, 1010, 1015, 1019, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1033, 1035, 1038, 1039, 1041, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1086, 1087, 1088, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1139, 1140, 1142, 1143, 1144, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1160, 1164, 1165, 1166, 1167, 1194], "\u2146": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 77, 78, 101, 110, 119, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 206, 207, 209, 210, 211, 212, 214, 216, 217, 224, 227, 230, 231, 232, 233, 237, 240, 243, 246, 248, 249, 253, 256, 259, 261, 264, 270, 274, 275, 276, 277, 278, 285, 286, 288, 295, 296, 297, 298, 299, 306, 307, 312, 313, 314, 317, 320, 321, 324, 325, 328, 329, 334, 335, 340, 350, 351, 352, 353, 354, 356, 365, 372, 373, 374, 375, 376, 377, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 445, 446, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 465, 466, 467, 468, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 511, 512, 519, 520, 521, 522, 523, 525, 526, 527, 533, 534, 535, 536, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 617, 618, 625, 626, 627, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 655, 657, 659, 661, 662, 664, 665, 666, 667, 668, 670, 671, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 689, 690, 691, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 706, 707, 711, 712, 717, 718, 727, 728, 729, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 759, 760, 761, 762, 764, 765, 766, 770, 772, 774, 775, 776, 777, 784, 788, 789, 791, 792, 794, 796, 797, 799, 801, 802, 804, 810, 811, 813, 815, 817, 819, 821, 823, 825, 827, 829, 831, 835, 836, 838, 840, 841, 843, 846, 847, 849, 850, 852, 853, 855, 857, 858, 859, 864, 865, 868, 869, 870, 871, 872, 873, 875, 876, 877, 878, 889, 890, 891, 892, 893, 894, 895, 896, 912, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 926, 931, 932, 933, 934, 937, 940, 946, 947, 948, 949, 950, 951, 953, 954, 955, 956, 957, 958, 959, 962, 963, 964, 965, 966, 969, 971, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 985, 986, 988, 989, 991, 993, 994, 995, 1007, 1008, 1009, 1010, 1015, 1019, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1033, 1035, 1038, 1039, 1041, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1086, 1087, 1088, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1139, 1140, 1142, 1143, 1144, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1160, 1164, 1165, 1166, 1167, 1194], "\u03dd": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 77, 78, 101, 110, 119, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 206, 207, 209, 210, 211, 212, 214, 216, 217, 224, 227, 230, 231, 232, 233, 237, 240, 243, 246, 248, 249, 253, 256, 259, 261, 264, 270, 274, 275, 276, 277, 278, 285, 286, 288, 295, 296, 297, 298, 299, 306, 307, 312, 313, 314, 317, 320, 321, 324, 325, 328, 329, 334, 335, 340, 350, 351, 352, 353, 354, 356, 365, 372, 373, 374, 375, 376, 377, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 445, 446, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 465, 466, 467, 468, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 511, 512, 519, 520, 521, 522, 523, 525, 526, 527, 533, 534, 535, 536, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 617, 618, 625, 626, 627, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 655, 657, 659, 661, 662, 664, 665, 666, 667, 668, 670, 671, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 689, 690, 691, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 706, 707, 711, 712, 717, 718, 727, 728, 729, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 759, 760, 761, 762, 764, 765, 766, 770, 772, 774, 775, 776, 777, 784, 788, 789, 791, 792, 794, 796, 797, 799, 801, 802, 804, 810, 811, 813, 815, 817, 819, 821, 823, 825, 827, 829, 831, 835, 836, 838, 840, 841, 843, 846, 847, 849, 850, 852, 853, 855, 857, 858, 859, 864, 865, 868, 869, 870, 871, 872, 873, 875, 876, 877, 878, 889, 890, 891, 892, 893, 894, 895, 896, 912, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 926, 931, 932, 933, 934, 937, 940, 946, 947, 948, 949, 950, 951, 953, 954, 955, 956, 957, 958, 959, 962, 963, 964, 965, 966, 969, 971, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 985, 986, 988, 989, 991, 993, 994, 995, 1007, 1008, 1009, 1010, 1015, 1019, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1033, 1035, 1038, 1039, 1041, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1086, 1087, 1088, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1139, 1140, 1142, 1143, 1144, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1160, 1164, 1165, 1166, 1167, 1194], "\u2130": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 77, 78, 101, 110, 119, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 206, 207, 209, 210, 211, 212, 214, 216, 217, 224, 227, 230, 231, 232, 233, 237, 240, 243, 246, 248, 249, 253, 256, 259, 261, 264, 270, 274, 275, 276, 277, 278, 285, 286, 288, 295, 296, 297, 298, 299, 306, 307, 312, 313, 314, 317, 320, 321, 324, 325, 328, 329, 334, 335, 340, 350, 351, 352, 353, 354, 356, 365, 372, 373, 374, 375, 376, 377, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 445, 446, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 465, 466, 467, 468, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 511, 512, 519, 520, 521, 522, 523, 525, 526, 527, 533, 534, 535, 536, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 617, 618, 625, 626, 627, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 655, 657, 659, 661, 662, 664, 665, 666, 667, 668, 670, 671, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 689, 690, 691, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 706, 707, 711, 712, 717, 718, 727, 728, 729, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 759, 760, 761, 762, 764, 765, 766, 770, 772, 774, 775, 776, 777, 784, 788, 789, 791, 792, 794, 796, 797, 799, 801, 802, 804, 810, 811, 813, 815, 817, 819, 821, 823, 825, 827, 829, 831, 835, 836, 838, 840, 841, 843, 846, 847, 849, 850, 852, 853, 855, 857, 858, 859, 864, 865, 868, 869, 870, 871, 872, 873, 875, 876, 877, 878, 889, 890, 891, 892, 893, 894, 895, 896, 912, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 926, 931, 932, 933, 934, 937, 940, 946, 947, 948, 949, 950, 951, 953, 954, 955, 956, 957, 958, 959, 962, 963, 964, 965, 966, 969, 971, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 985, 986, 988, 989, 991, 993, 994, 995, 1007, 1008, 1009, 1010, 1015, 1019, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1033, 1035, 1038, 1039, 1041, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1086, 1087, 1088, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1139, 1140, 1142, 1143, 1144, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1160, 1164, 1165, 1166, 1167, 1194], "\u2147": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 77, 78, 101, 110, 119, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 206, 207, 209, 210, 211, 212, 214, 216, 217, 224, 227, 230, 231, 232, 233, 237, 240, 243, 246, 248, 249, 253, 256, 259, 261, 264, 270, 274, 275, 276, 277, 278, 285, 286, 288, 295, 296, 297, 298, 299, 306, 307, 312, 313, 314, 317, 320, 321, 324, 325, 328, 329, 334, 335, 340, 350, 351, 352, 353, 354, 356, 365, 372, 373, 374, 375, 376, 377, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 445, 446, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 465, 466, 467, 468, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 511, 512, 519, 520, 521, 522, 523, 525, 526, 527, 533, 534, 535, 536, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 617, 618, 625, 626, 627, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 655, 657, 659, 661, 662, 664, 665, 666, 667, 668, 670, 671, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 689, 690, 691, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 706, 707, 711, 712, 717, 718, 727, 728, 729, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 759, 760, 761, 762, 764, 765, 766, 770, 772, 774, 775, 776, 777, 784, 788, 789, 791, 792, 794, 796, 797, 799, 801, 802, 804, 810, 811, 813, 815, 817, 819, 821, 823, 825, 827, 829, 831, 835, 836, 838, 840, 841, 843, 846, 847, 849, 850, 852, 853, 855, 857, 858, 859, 864, 865, 868, 869, 870, 871, 872, 873, 875, 876, 877, 878, 889, 890, 891, 892, 893, 894, 895, 896, 912, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 926, 931, 932, 933, 934, 937, 940, 946, 947, 948, 949, 950, 951, 953, 954, 955, 956, 957, 958, 959, 962, 963, 964, 965, 966, 969, 971, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 985, 986, 988, 989, 991, 993, 994, 995, 1007, 1008, 1009, 1010, 1015, 1019, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1033, 1035, 1038, 1039, 1041, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1086, 1087, 1088, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1139, 1140, 1142, 1143, 1144, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1160, 1164, 1165, 1166, 1167, 1194], "\u2131": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 77, 78, 101, 110, 119, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 206, 207, 209, 210, 211, 212, 214, 216, 217, 224, 227, 230, 231, 232, 233, 237, 240, 243, 246, 248, 249, 253, 256, 259, 261, 264, 270, 274, 275, 276, 277, 278, 285, 286, 288, 295, 296, 297, 298, 299, 306, 307, 312, 313, 314, 317, 320, 321, 324, 325, 328, 329, 334, 335, 340, 350, 351, 352, 353, 354, 356, 365, 372, 373, 374, 375, 376, 377, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 445, 446, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 465, 466, 467, 468, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 511, 512, 519, 520, 521, 522, 523, 525, 526, 527, 533, 534, 535, 536, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 617, 618, 625, 626, 627, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 655, 657, 659, 661, 662, 664, 665, 666, 667, 668, 670, 671, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 689, 690, 691, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 706, 707, 711, 712, 717, 718, 727, 728, 729, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 759, 760, 761, 762, 764, 765, 766, 770, 772, 774, 775, 776, 777, 784, 788, 789, 791, 792, 794, 796, 797, 799, 801, 802, 804, 810, 811, 813, 815, 817, 819, 821, 823, 825, 827, 829, 831, 835, 836, 838, 840, 841, 843, 846, 847, 849, 850, 852, 853, 855, 857, 858, 859, 864, 865, 868, 869, 870, 871, 872, 873, 875, 876, 877, 878, 889, 890, 891, 892, 893, 894, 895, 896, 912, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 926, 931, 932, 933, 934, 937, 940, 946, 947, 948, 949, 950, 951, 953, 954, 955, 956, 957, 958, 959, 962, 963, 964, 965, 966, 969, 971, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 985, 986, 988, 989, 991, 993, 994, 995, 1007, 1008, 1009, 1010, 1015, 1019, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1033, 1035, 1038, 1039, 1041, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1086, 1087, 1088, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1139, 1140, 1142, 1143, 1144, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1160, 1164, 1165, 1166, 1167, 1194], "\u02c7": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 77, 78, 101, 110, 119, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 206, 207, 209, 210, 211, 212, 214, 216, 217, 224, 227, 230, 231, 232, 233, 237, 240, 243, 246, 248, 249, 253, 256, 259, 261, 264, 270, 274, 275, 276, 277, 278, 285, 286, 288, 295, 296, 297, 298, 299, 306, 307, 312, 313, 314, 317, 320, 321, 324, 325, 328, 329, 334, 335, 340, 350, 351, 352, 353, 354, 356, 365, 372, 373, 374, 375, 376, 377, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 445, 446, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 465, 466, 467, 468, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 511, 512, 519, 520, 521, 522, 523, 525, 526, 527, 533, 534, 535, 536, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 617, 618, 625, 626, 627, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 655, 657, 659, 661, 662, 664, 665, 666, 667, 668, 670, 671, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 689, 690, 691, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 706, 707, 711, 712, 717, 718, 727, 728, 729, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 759, 760, 761, 762, 764, 765, 766, 770, 772, 774, 775, 776, 777, 784, 788, 789, 791, 792, 794, 796, 797, 799, 801, 802, 804, 810, 811, 813, 815, 817, 819, 821, 823, 825, 827, 829, 831, 835, 836, 838, 840, 841, 843, 846, 847, 849, 850, 852, 853, 855, 857, 858, 859, 864, 865, 868, 869, 870, 871, 872, 873, 875, 876, 877, 878, 889, 890, 891, 892, 893, 894, 895, 896, 912, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 926, 931, 932, 933, 934, 937, 940, 946, 947, 948, 949, 950, 951, 953, 954, 955, 956, 957, 958, 959, 962, 963, 964, 965, 966, 969, 971, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 985, 986, 988, 989, 991, 993, 994, 995, 1007, 1008, 1009, 1010, 1015, 1019, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1033, 1035, 1038, 1039, 1041, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1086, 1087, 1088, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1139, 1140, 1142, 1143, 1144, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1160, 1164, 1165, 1166, 1167, 1194], "\u210f": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 77, 78, 101, 110, 119, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 206, 207, 209, 210, 211, 212, 214, 216, 217, 224, 227, 230, 231, 232, 233, 237, 240, 243, 246, 248, 249, 253, 256, 259, 261, 264, 270, 274, 275, 276, 277, 278, 285, 286, 288, 295, 296, 297, 298, 299, 306, 307, 312, 313, 314, 317, 320, 321, 324, 325, 328, 329, 334, 335, 340, 350, 351, 352, 353, 354, 356, 365, 372, 373, 374, 375, 376, 377, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 445, 446, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 465, 466, 467, 468, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 511, 512, 519, 520, 521, 522, 523, 525, 526, 527, 533, 534, 535, 536, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 617, 618, 625, 626, 627, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 655, 657, 659, 661, 662, 664, 665, 666, 667, 668, 670, 671, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 689, 690, 691, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 706, 707, 711, 712, 717, 718, 727, 728, 729, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 759, 760, 761, 762, 764, 765, 766, 770, 772, 774, 775, 776, 777, 784, 788, 789, 791, 792, 794, 796, 797, 799, 801, 802, 804, 810, 811, 813, 815, 817, 819, 821, 823, 825, 827, 829, 831, 835, 836, 838, 840, 841, 843, 846, 847, 849, 850, 852, 853, 855, 857, 858, 859, 864, 865, 868, 869, 870, 871, 872, 873, 875, 876, 877, 878, 889, 890, 891, 892, 893, 894, 895, 896, 912, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 926, 931, 932, 933, 934, 937, 940, 946, 947, 948, 949, 950, 951, 953, 954, 955, 956, 957, 958, 959, 962, 963, 964, 965, 966, 969, 971, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 985, 986, 988, 989, 991, 993, 994, 995, 1007, 1008, 1009, 1010, 1015, 1019, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1033, 1035, 1038, 1039, 1041, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1086, 1087, 1088, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1139, 1140, 1142, 1143, 1144, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1160, 1164, 1165, 1166, 1167, 1194], "\u210b": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 77, 78, 101, 110, 119, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 206, 207, 209, 210, 211, 212, 214, 216, 217, 224, 227, 230, 231, 232, 233, 237, 240, 243, 246, 248, 249, 253, 256, 259, 261, 264, 270, 274, 275, 276, 277, 278, 285, 286, 288, 295, 296, 297, 298, 299, 306, 307, 312, 313, 314, 317, 320, 321, 324, 325, 328, 329, 334, 335, 340, 350, 351, 352, 353, 354, 356, 365, 372, 373, 374, 375, 376, 377, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 445, 446, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 465, 466, 467, 468, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 511, 512, 519, 520, 521, 522, 523, 525, 526, 527, 533, 534, 535, 536, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 617, 618, 625, 626, 627, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 655, 657, 659, 661, 662, 664, 665, 666, 667, 668, 670, 671, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 689, 690, 691, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 706, 707, 711, 712, 717, 718, 727, 728, 729, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 759, 760, 761, 762, 764, 765, 766, 770, 772, 774, 775, 776, 777, 784, 788, 789, 791, 792, 794, 796, 797, 799, 801, 802, 804, 810, 811, 813, 815, 817, 819, 821, 823, 825, 827, 829, 831, 835, 836, 838, 840, 841, 843, 846, 847, 849, 850, 852, 853, 855, 857, 858, 859, 864, 865, 868, 869, 870, 871, 872, 873, 875, 876, 877, 878, 889, 890, 891, 892, 893, 894, 895, 896, 912, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 926, 931, 932, 933, 934, 937, 940, 946, 947, 948, 949, 950, 951, 953, 954, 955, 956, 957, 958, 959, 962, 963, 964, 965, 966, 969, 971, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 985, 986, 988, 989, 991, 993, 994, 995, 1007, 1008, 1009, 1010, 1015, 1019, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1033, 1035, 1038, 1039, 1041, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1086, 1087, 1088, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1139, 1140, 1142, 1143, 1144, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1160, 1164, 1165, 1166, 1167, 1194], "\u2111": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 77, 78, 101, 110, 119, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 206, 207, 209, 210, 211, 212, 214, 216, 217, 224, 227, 230, 231, 232, 233, 237, 240, 243, 246, 248, 249, 253, 256, 259, 261, 264, 270, 274, 275, 276, 277, 278, 285, 286, 288, 295, 296, 297, 298, 299, 306, 307, 312, 313, 314, 317, 320, 321, 324, 325, 328, 329, 334, 335, 340, 350, 351, 352, 353, 354, 356, 365, 372, 373, 374, 375, 376, 377, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 445, 446, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 465, 466, 467, 468, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 511, 512, 519, 520, 521, 522, 523, 525, 526, 527, 533, 534, 535, 536, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 617, 618, 625, 626, 627, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 655, 657, 659, 661, 662, 664, 665, 666, 667, 668, 670, 671, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 689, 690, 691, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 706, 707, 711, 712, 717, 718, 727, 728, 729, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 759, 760, 761, 762, 764, 765, 766, 770, 772, 774, 775, 776, 777, 784, 788, 789, 791, 792, 794, 796, 797, 799, 801, 802, 804, 810, 811, 813, 815, 817, 819, 821, 823, 825, 827, 829, 831, 835, 836, 838, 840, 841, 843, 846, 847, 849, 850, 852, 853, 855, 857, 858, 859, 864, 865, 868, 869, 870, 871, 872, 873, 875, 876, 877, 878, 889, 890, 891, 892, 893, 894, 895, 896, 912, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 926, 931, 932, 933, 934, 937, 940, 946, 947, 948, 949, 950, 951, 953, 954, 955, 956, 957, 958, 959, 962, 963, 964, 965, 966, 969, 971, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 985, 986, 988, 989, 991, 993, 994, 995, 1007, 1008, 1009, 1010, 1015, 1019, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1033, 1035, 1038, 1039, 1041, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1086, 1087, 1088, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1139, 1140, 1142, 1143, 1144, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1160, 1164, 1165, 1166, 1167, 1194], "\u2148": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 77, 78, 101, 110, 119, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 206, 207, 209, 210, 211, 212, 214, 216, 217, 224, 227, 230, 231, 232, 233, 237, 240, 243, 246, 248, 249, 253, 256, 259, 261, 264, 270, 274, 275, 276, 277, 278, 285, 286, 288, 295, 296, 297, 298, 299, 306, 307, 312, 313, 314, 317, 320, 321, 324, 325, 328, 329, 334, 335, 340, 350, 351, 352, 353, 354, 356, 365, 372, 373, 374, 375, 376, 377, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 445, 446, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 465, 466, 467, 468, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 511, 512, 519, 520, 521, 522, 523, 525, 526, 527, 533, 534, 535, 536, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 617, 618, 625, 626, 627, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 655, 657, 659, 661, 662, 664, 665, 666, 667, 668, 670, 671, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 689, 690, 691, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 706, 707, 711, 712, 717, 718, 727, 728, 729, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 759, 760, 761, 762, 764, 765, 766, 770, 772, 774, 775, 776, 777, 784, 788, 789, 791, 792, 794, 796, 797, 799, 801, 802, 804, 810, 811, 813, 815, 817, 819, 821, 823, 825, 827, 829, 831, 835, 836, 838, 840, 841, 843, 846, 847, 849, 850, 852, 853, 855, 857, 858, 859, 864, 865, 868, 869, 870, 871, 872, 873, 875, 876, 877, 878, 889, 890, 891, 892, 893, 894, 895, 896, 912, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 926, 931, 932, 933, 934, 937, 940, 946, 947, 948, 949, 950, 951, 953, 954, 955, 956, 957, 958, 959, 962, 963, 964, 965, 966, 969, 971, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 985, 986, 988, 989, 991, 993, 994, 995, 1007, 1008, 1009, 1010, 1015, 1019, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1033, 1035, 1038, 1039, 1041, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1086, 1087, 1088, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1139, 1140, 1142, 1143, 1144, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1160, 1164, 1165, 1166, 1167, 1194], "\u2110": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 77, 78, 101, 110, 119, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 206, 207, 209, 210, 211, 212, 214, 216, 217, 224, 227, 230, 231, 232, 233, 237, 240, 243, 246, 248, 249, 253, 256, 259, 261, 264, 270, 274, 275, 276, 277, 278, 285, 286, 288, 295, 296, 297, 298, 299, 306, 307, 312, 313, 314, 317, 320, 321, 324, 325, 328, 329, 334, 335, 340, 350, 351, 352, 353, 354, 356, 365, 372, 373, 374, 375, 376, 377, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 445, 446, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 465, 466, 467, 468, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 511, 512, 519, 520, 521, 522, 523, 525, 526, 527, 533, 534, 535, 536, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 617, 618, 625, 626, 627, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 655, 657, 659, 661, 662, 664, 665, 666, 667, 668, 670, 671, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 689, 690, 691, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 706, 707, 711, 712, 717, 718, 727, 728, 729, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 759, 760, 761, 762, 764, 765, 766, 770, 772, 774, 775, 776, 777, 784, 788, 789, 791, 792, 794, 796, 797, 799, 801, 802, 804, 810, 811, 813, 815, 817, 819, 821, 823, 825, 827, 829, 831, 835, 836, 838, 840, 841, 843, 846, 847, 849, 850, 852, 853, 855, 857, 858, 859, 864, 865, 868, 869, 870, 871, 872, 873, 875, 876, 877, 878, 889, 890, 891, 892, 893, 894, 895, 896, 912, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 926, 931, 932, 933, 934, 937, 940, 946, 947, 948, 949, 950, 951, 953, 954, 955, 956, 957, 958, 959, 962, 963, 964, 965, 966, 969, 971, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 985, 986, 988, 989, 991, 993, 994, 995, 1007, 1008, 1009, 1010, 1015, 1019, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1033, 1035, 1038, 1039, 1041, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1086, 1087, 1088, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1139, 1140, 1142, 1143, 1144, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1160, 1164, 1165, 1166, 1167, 1194], "\u2124": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 77, 78, 101, 110, 119, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 206, 207, 209, 210, 211, 212, 214, 216, 217, 224, 227, 230, 231, 232, 233, 237, 240, 243, 246, 248, 249, 253, 256, 259, 261, 264, 270, 274, 275, 276, 277, 278, 285, 286, 288, 295, 296, 297, 298, 299, 306, 307, 312, 313, 314, 317, 320, 321, 324, 325, 328, 329, 334, 335, 340, 350, 351, 352, 353, 354, 356, 365, 372, 373, 374, 375, 376, 377, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 445, 446, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 465, 466, 467, 468, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 511, 512, 519, 520, 521, 522, 523, 525, 526, 527, 533, 534, 535, 536, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 617, 618, 625, 626, 627, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 655, 657, 659, 661, 662, 664, 665, 666, 667, 668, 670, 671, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 689, 690, 691, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 706, 707, 711, 712, 717, 718, 727, 728, 729, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 759, 760, 761, 762, 764, 765, 766, 770, 772, 774, 775, 776, 777, 784, 788, 789, 791, 792, 794, 796, 797, 799, 801, 802, 804, 810, 811, 813, 815, 817, 819, 821, 823, 825, 827, 829, 831, 835, 836, 838, 840, 841, 843, 846, 847, 849, 850, 852, 853, 855, 857, 858, 859, 864, 865, 868, 869, 870, 871, 872, 873, 875, 876, 877, 878, 889, 890, 891, 892, 893, 894, 895, 896, 912, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 926, 931, 932, 933, 934, 937, 940, 946, 947, 948, 949, 950, 951, 953, 954, 955, 956, 957, 958, 959, 962, 963, 964, 965, 966, 969, 971, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 985, 986, 988, 989, 991, 993, 994, 995, 1007, 1008, 1009, 1010, 1015, 1019, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1033, 1035, 1038, 1039, 1041, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1086, 1087, 1088, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1139, 1140, 1142, 1143, 1144, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1160, 1164, 1165, 1166, 1167, 1194], "\u2112": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 77, 78, 101, 110, 119, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 206, 207, 209, 210, 211, 212, 214, 216, 217, 224, 227, 230, 231, 232, 233, 237, 240, 243, 246, 248, 249, 253, 256, 259, 261, 264, 270, 274, 275, 276, 277, 278, 285, 286, 288, 295, 296, 297, 298, 299, 306, 307, 312, 313, 314, 317, 320, 321, 324, 325, 328, 329, 334, 335, 340, 350, 351, 352, 353, 354, 356, 365, 372, 373, 374, 375, 376, 377, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 445, 446, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 465, 466, 467, 468, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 511, 512, 519, 520, 521, 522, 523, 525, 526, 527, 533, 534, 535, 536, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 617, 618, 625, 626, 627, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 655, 657, 659, 661, 662, 664, 665, 666, 667, 668, 670, 671, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 689, 690, 691, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 706, 707, 711, 712, 717, 718, 727, 728, 729, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 759, 760, 761, 762, 764, 765, 766, 770, 772, 774, 775, 776, 777, 784, 788, 789, 791, 792, 794, 796, 797, 799, 801, 802, 804, 810, 811, 813, 815, 817, 819, 821, 823, 825, 827, 829, 831, 835, 836, 838, 840, 841, 843, 846, 847, 849, 850, 852, 853, 855, 857, 858, 859, 864, 865, 868, 869, 870, 871, 872, 873, 875, 876, 877, 878, 889, 890, 891, 892, 893, 894, 895, 896, 912, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 926, 931, 932, 933, 934, 937, 940, 946, 947, 948, 949, 950, 951, 953, 954, 955, 956, 957, 958, 959, 962, 963, 964, 965, 966, 969, 971, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 985, 986, 988, 989, 991, 993, 994, 995, 1007, 1008, 1009, 1010, 1015, 1019, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1033, 1035, 1038, 1039, 1041, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1086, 1087, 1088, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1139, 1140, 1142, 1143, 1144, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1160, 1164, 1165, 1166, 1167, 1194], "\u2133": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 77, 78, 101, 110, 119, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 206, 207, 209, 210, 211, 212, 214, 216, 217, 224, 227, 230, 231, 232, 233, 237, 240, 243, 246, 248, 249, 253, 256, 259, 261, 264, 270, 274, 275, 276, 277, 278, 285, 286, 288, 295, 296, 297, 298, 299, 306, 307, 312, 313, 314, 317, 320, 321, 324, 325, 328, 329, 334, 335, 340, 350, 351, 352, 353, 354, 356, 365, 372, 373, 374, 375, 376, 377, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 445, 446, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 465, 466, 467, 468, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 511, 512, 519, 520, 521, 522, 523, 525, 526, 527, 533, 534, 535, 536, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 617, 618, 625, 626, 627, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 655, 657, 659, 661, 662, 664, 665, 666, 667, 668, 670, 671, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 689, 690, 691, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 706, 707, 711, 712, 717, 718, 727, 728, 729, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 759, 760, 761, 762, 764, 765, 766, 770, 772, 774, 775, 776, 777, 784, 788, 789, 791, 792, 794, 796, 797, 799, 801, 802, 804, 810, 811, 813, 815, 817, 819, 821, 823, 825, 827, 829, 831, 835, 836, 838, 840, 841, 843, 846, 847, 849, 850, 852, 853, 855, 857, 858, 859, 864, 865, 868, 869, 870, 871, 872, 873, 875, 876, 877, 878, 889, 890, 891, 892, 893, 894, 895, 896, 912, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 926, 931, 932, 933, 934, 937, 940, 946, 947, 948, 949, 950, 951, 953, 954, 955, 956, 957, 958, 959, 962, 963, 964, 965, 966, 969, 971, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 985, 986, 988, 989, 991, 993, 994, 995, 1007, 1008, 1009, 1010, 1015, 1019, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1033, 1035, 1038, 1039, 1041, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1086, 1087, 1088, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1139, 1140, 1142, 1143, 1144, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1160, 1164, 1165, 1166, 1167, 1194], "\u2115": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 77, 78, 101, 110, 119, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 206, 207, 209, 210, 211, 212, 214, 216, 217, 224, 227, 230, 231, 232, 233, 237, 240, 243, 246, 248, 249, 253, 256, 259, 261, 264, 270, 274, 275, 276, 277, 278, 285, 286, 288, 295, 296, 297, 298, 299, 306, 307, 312, 313, 314, 317, 320, 321, 324, 325, 328, 329, 334, 335, 340, 350, 351, 352, 353, 354, 356, 365, 372, 373, 374, 375, 376, 377, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 445, 446, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 465, 466, 467, 468, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 511, 512, 519, 520, 521, 522, 523, 525, 526, 527, 533, 534, 535, 536, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 617, 618, 625, 626, 627, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 655, 657, 659, 661, 662, 664, 665, 666, 667, 668, 670, 671, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 689, 690, 691, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 706, 707, 711, 712, 717, 718, 727, 728, 729, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 759, 760, 761, 762, 764, 765, 766, 770, 772, 774, 775, 776, 777, 784, 788, 789, 791, 792, 794, 796, 797, 799, 801, 802, 804, 810, 811, 813, 815, 817, 819, 821, 823, 825, 827, 829, 831, 835, 836, 838, 840, 841, 843, 846, 847, 849, 850, 852, 853, 855, 857, 858, 859, 864, 865, 868, 869, 870, 871, 872, 873, 875, 876, 877, 878, 889, 890, 891, 892, 893, 894, 895, 896, 912, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 926, 931, 932, 933, 934, 937, 940, 946, 947, 948, 949, 950, 951, 953, 954, 955, 956, 957, 958, 959, 962, 963, 964, 965, 966, 969, 971, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 985, 986, 988, 989, 991, 993, 994, 995, 1007, 1008, 1009, 1010, 1015, 1019, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1033, 1035, 1038, 1039, 1041, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1086, 1087, 1088, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1139, 1140, 1142, 1143, 1144, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1160, 1164, 1165, 1166, 1167, 1194], "\u2134": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 77, 78, 101, 110, 119, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 206, 207, 209, 210, 211, 212, 214, 216, 217, 224, 227, 230, 231, 232, 233, 237, 240, 243, 246, 248, 249, 253, 256, 259, 261, 264, 270, 274, 275, 276, 277, 278, 285, 286, 288, 295, 296, 297, 298, 299, 306, 307, 312, 313, 314, 317, 320, 321, 324, 325, 328, 329, 334, 335, 340, 350, 351, 352, 353, 354, 356, 365, 372, 373, 374, 375, 376, 377, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 445, 446, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 465, 466, 467, 468, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 511, 512, 519, 520, 521, 522, 523, 525, 526, 527, 533, 534, 535, 536, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 617, 618, 625, 626, 627, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 655, 657, 659, 661, 662, 664, 665, 666, 667, 668, 670, 671, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 689, 690, 691, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 706, 707, 711, 712, 717, 718, 727, 728, 729, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 759, 760, 761, 762, 764, 765, 766, 770, 772, 774, 775, 776, 777, 784, 788, 789, 791, 792, 794, 796, 797, 799, 801, 802, 804, 810, 811, 813, 815, 817, 819, 821, 823, 825, 827, 829, 831, 835, 836, 838, 840, 841, 843, 846, 847, 849, 850, 852, 853, 855, 857, 858, 859, 864, 865, 868, 869, 870, 871, 872, 873, 875, 876, 877, 878, 889, 890, 891, 892, 893, 894, 895, 896, 912, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 926, 931, 932, 933, 934, 937, 940, 946, 947, 948, 949, 950, 951, 953, 954, 955, 956, 957, 958, 959, 962, 963, 964, 965, 966, 969, 971, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 985, 986, 988, 989, 991, 993, 994, 995, 1007, 1008, 1009, 1010, 1015, 1019, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1033, 1035, 1038, 1039, 1041, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1086, 1087, 1088, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1139, 1140, 1142, 1143, 1144, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1160, 1164, 1165, 1166, 1167, 1194], "\u210c": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 77, 78, 101, 110, 119, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 206, 207, 209, 210, 211, 212, 214, 216, 217, 224, 227, 230, 231, 232, 233, 237, 240, 243, 246, 248, 249, 253, 256, 259, 261, 264, 270, 274, 275, 276, 277, 278, 285, 286, 288, 295, 296, 297, 298, 299, 306, 307, 312, 313, 314, 317, 320, 321, 324, 325, 328, 329, 334, 335, 340, 350, 351, 352, 353, 354, 356, 365, 372, 373, 374, 375, 376, 377, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 445, 446, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 465, 466, 467, 468, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 511, 512, 519, 520, 521, 522, 523, 525, 526, 527, 533, 534, 535, 536, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 617, 618, 625, 626, 627, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 655, 657, 659, 661, 662, 664, 665, 666, 667, 668, 670, 671, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 689, 690, 691, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 706, 707, 711, 712, 717, 718, 727, 728, 729, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 759, 760, 761, 762, 764, 765, 766, 770, 772, 774, 775, 776, 777, 784, 788, 789, 791, 792, 794, 796, 797, 799, 801, 802, 804, 810, 811, 813, 815, 817, 819, 821, 823, 825, 827, 829, 831, 835, 836, 838, 840, 841, 843, 846, 847, 849, 850, 852, 853, 855, 857, 858, 859, 864, 865, 868, 869, 870, 871, 872, 873, 875, 876, 877, 878, 889, 890, 891, 892, 893, 894, 895, 896, 912, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 926, 931, 932, 933, 934, 937, 940, 946, 947, 948, 949, 950, 951, 953, 954, 955, 956, 957, 958, 959, 962, 963, 964, 965, 966, 969, 971, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 985, 986, 988, 989, 991, 993, 994, 995, 1007, 1008, 1009, 1010, 1015, 1019, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1033, 1035, 1038, 1039, 1041, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1086, 1087, 1088, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1139, 1140, 1142, 1143, 1144, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1160, 1164, 1165, 1166, 1167, 1194], "\u2119": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 77, 78, 101, 110, 119, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 206, 207, 209, 210, 211, 212, 214, 216, 217, 224, 227, 230, 231, 232, 233, 237, 240, 243, 246, 248, 249, 253, 256, 259, 261, 264, 270, 274, 275, 276, 277, 278, 285, 286, 288, 295, 296, 297, 298, 299, 306, 307, 312, 313, 314, 317, 320, 321, 324, 325, 328, 329, 334, 335, 340, 350, 351, 352, 353, 354, 356, 365, 372, 373, 374, 375, 376, 377, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 445, 446, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 465, 466, 467, 468, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 511, 512, 519, 520, 521, 522, 523, 525, 526, 527, 533, 534, 535, 536, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 617, 618, 625, 626, 627, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 655, 657, 659, 661, 662, 664, 665, 666, 667, 668, 670, 671, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 689, 690, 691, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 706, 707, 711, 712, 717, 718, 727, 728, 729, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 759, 760, 761, 762, 764, 765, 766, 770, 772, 774, 775, 776, 777, 784, 788, 789, 791, 792, 794, 796, 797, 799, 801, 802, 804, 810, 811, 813, 815, 817, 819, 821, 823, 825, 827, 829, 831, 835, 836, 838, 840, 841, 843, 846, 847, 849, 850, 852, 853, 855, 857, 858, 859, 864, 865, 868, 869, 870, 871, 872, 873, 875, 876, 877, 878, 889, 890, 891, 892, 893, 894, 895, 896, 912, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 926, 931, 932, 933, 934, 937, 940, 946, 947, 948, 949, 950, 951, 953, 954, 955, 956, 957, 958, 959, 962, 963, 964, 965, 966, 969, 971, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 985, 986, 988, 989, 991, 993, 994, 995, 1007, 1008, 1009, 1010, 1015, 1019, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1033, 1035, 1038, 1039, 1041, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1086, 1087, 1088, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1139, 1140, 1142, 1143, 1144, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1160, 1164, 1165, 1166, 1167, 1194], "\u210d": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 77, 78, 101, 110, 119, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 206, 207, 209, 210, 211, 212, 214, 216, 217, 224, 227, 230, 231, 232, 233, 237, 240, 243, 246, 248, 249, 253, 256, 259, 261, 264, 270, 274, 275, 276, 277, 278, 285, 286, 288, 295, 296, 297, 298, 299, 306, 307, 312, 313, 314, 317, 320, 321, 324, 325, 328, 329, 334, 335, 340, 350, 351, 352, 353, 354, 356, 365, 372, 373, 374, 375, 376, 377, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 445, 446, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 465, 466, 467, 468, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 511, 512, 519, 520, 521, 522, 523, 525, 526, 527, 533, 534, 535, 536, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 617, 618, 625, 626, 627, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 655, 657, 659, 661, 662, 664, 665, 666, 667, 668, 670, 671, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 689, 690, 691, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 706, 707, 711, 712, 717, 718, 727, 728, 729, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 759, 760, 761, 762, 764, 765, 766, 770, 772, 774, 775, 776, 777, 784, 788, 789, 791, 792, 794, 796, 797, 799, 801, 802, 804, 810, 811, 813, 815, 817, 819, 821, 823, 825, 827, 829, 831, 835, 836, 838, 840, 841, 843, 846, 847, 849, 850, 852, 853, 855, 857, 858, 859, 864, 865, 868, 869, 870, 871, 872, 873, 875, 876, 877, 878, 889, 890, 891, 892, 893, 894, 895, 896, 912, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 926, 931, 932, 933, 934, 937, 940, 946, 947, 948, 949, 950, 951, 953, 954, 955, 956, 957, 958, 959, 962, 963, 964, 965, 966, 969, 971, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 985, 986, 988, 989, 991, 993, 994, 995, 1007, 1008, 1009, 1010, 1015, 1019, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1033, 1035, 1038, 1039, 1041, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1086, 1087, 1088, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1139, 1140, 1142, 1143, 1144, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1160, 1164, 1165, 1166, 1167, 1194], "\u211a": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 77, 78, 101, 110, 119, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 206, 207, 209, 210, 211, 212, 214, 216, 217, 224, 227, 230, 231, 232, 233, 237, 240, 243, 246, 248, 249, 253, 256, 259, 261, 264, 270, 274, 275, 276, 277, 278, 285, 286, 288, 295, 296, 297, 298, 299, 306, 307, 312, 313, 314, 317, 320, 321, 324, 325, 328, 329, 334, 335, 340, 350, 351, 352, 353, 354, 356, 365, 372, 373, 374, 375, 376, 377, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 445, 446, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 465, 466, 467, 468, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 511, 512, 519, 520, 521, 522, 523, 525, 526, 527, 533, 534, 535, 536, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 617, 618, 625, 626, 627, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 655, 657, 659, 661, 662, 664, 665, 666, 667, 668, 670, 671, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 689, 690, 691, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 706, 707, 711, 712, 717, 718, 727, 728, 729, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 759, 760, 761, 762, 764, 765, 766, 770, 772, 774, 775, 776, 777, 784, 788, 789, 791, 792, 794, 796, 797, 799, 801, 802, 804, 810, 811, 813, 815, 817, 819, 821, 823, 825, 827, 829, 831, 835, 836, 838, 840, 841, 843, 846, 847, 849, 850, 852, 853, 855, 857, 858, 859, 864, 865, 868, 869, 870, 871, 872, 873, 875, 876, 877, 878, 889, 890, 891, 892, 893, 894, 895, 896, 912, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 926, 931, 932, 933, 934, 937, 940, 946, 947, 948, 949, 950, 951, 953, 954, 955, 956, 957, 958, 959, 962, 963, 964, 965, 966, 969, 971, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 985, 986, 988, 989, 991, 993, 994, 995, 1007, 1008, 1009, 1010, 1015, 1019, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1033, 1035, 1038, 1039, 1041, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1086, 1087, 1088, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1139, 1140, 1142, 1143, 1144, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1160, 1164, 1165, 1166, 1167, 1194], "\u211c": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 77, 78, 101, 110, 119, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 206, 207, 209, 210, 211, 212, 214, 216, 217, 224, 227, 230, 231, 232, 233, 237, 240, 243, 246, 248, 249, 253, 256, 259, 261, 264, 270, 274, 275, 276, 277, 278, 285, 286, 288, 295, 296, 297, 298, 299, 306, 307, 312, 313, 314, 317, 320, 321, 324, 325, 328, 329, 334, 335, 340, 350, 351, 352, 353, 354, 356, 365, 372, 373, 374, 375, 376, 377, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 445, 446, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 465, 466, 467, 468, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 511, 512, 519, 520, 521, 522, 523, 525, 526, 527, 533, 534, 535, 536, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 617, 618, 625, 626, 627, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 655, 657, 659, 661, 662, 664, 665, 666, 667, 668, 670, 671, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 689, 690, 691, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 706, 707, 711, 712, 717, 718, 727, 728, 729, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 759, 760, 761, 762, 764, 765, 766, 770, 772, 774, 775, 776, 777, 784, 788, 789, 791, 792, 794, 796, 797, 799, 801, 802, 804, 810, 811, 813, 815, 817, 819, 821, 823, 825, 827, 829, 831, 835, 836, 838, 840, 841, 843, 846, 847, 849, 850, 852, 853, 855, 857, 858, 859, 864, 865, 868, 869, 870, 871, 872, 873, 875, 876, 877, 878, 889, 890, 891, 892, 893, 894, 895, 896, 912, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 926, 931, 932, 933, 934, 937, 940, 946, 947, 948, 949, 950, 951, 953, 954, 955, 956, 957, 958, 959, 962, 963, 964, 965, 966, 969, 971, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 985, 986, 988, 989, 991, 993, 994, 995, 1007, 1008, 1009, 1010, 1015, 1019, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1033, 1035, 1038, 1039, 1041, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1086, 1087, 1088, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1139, 1140, 1142, 1143, 1144, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1160, 1164, 1165, 1166, 1167, 1194], "\u211b": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 77, 78, 101, 110, 119, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 206, 207, 209, 210, 211, 212, 214, 216, 217, 224, 227, 230, 231, 232, 233, 237, 240, 243, 246, 248, 249, 253, 256, 259, 261, 264, 270, 274, 275, 276, 277, 278, 285, 286, 288, 295, 296, 297, 298, 299, 306, 307, 312, 313, 314, 317, 320, 321, 324, 325, 328, 329, 334, 335, 340, 350, 351, 352, 353, 354, 356, 365, 372, 373, 374, 375, 376, 377, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 445, 446, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 465, 466, 467, 468, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 511, 512, 519, 520, 521, 522, 523, 525, 526, 527, 533, 534, 535, 536, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 617, 618, 625, 626, 627, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 655, 657, 659, 661, 662, 664, 665, 666, 667, 668, 670, 671, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 689, 690, 691, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 706, 707, 711, 712, 717, 718, 727, 728, 729, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 759, 760, 761, 762, 764, 765, 766, 770, 772, 774, 775, 776, 777, 784, 788, 789, 791, 792, 794, 796, 797, 799, 801, 802, 804, 810, 811, 813, 815, 817, 819, 821, 823, 825, 827, 829, 831, 835, 836, 838, 840, 841, 843, 846, 847, 849, 850, 852, 853, 855, 857, 858, 859, 864, 865, 868, 869, 870, 871, 872, 873, 875, 876, 877, 878, 889, 890, 891, 892, 893, 894, 895, 896, 912, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 926, 931, 932, 933, 934, 937, 940, 946, 947, 948, 949, 950, 951, 953, 954, 955, 956, 957, 958, 959, 962, 963, 964, 965, 966, 969, 971, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 985, 986, 988, 989, 991, 993, 994, 995, 1007, 1008, 1009, 1010, 1015, 1019, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1033, 1035, 1038, 1039, 1041, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1086, 1087, 1088, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1139, 1140, 1142, 1143, 1144, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1160, 1164, 1165, 1166, 1167, 1194], "\u211d": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 77, 78, 101, 110, 119, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 206, 207, 209, 210, 211, 212, 214, 216, 217, 224, 227, 230, 231, 232, 233, 237, 240, 243, 246, 248, 249, 253, 256, 259, 261, 264, 270, 274, 275, 276, 277, 278, 285, 286, 288, 295, 296, 297, 298, 299, 306, 307, 312, 313, 314, 317, 320, 321, 324, 325, 328, 329, 334, 335, 340, 350, 351, 352, 353, 354, 356, 365, 372, 373, 374, 375, 376, 377, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 445, 446, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 465, 466, 467, 468, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 511, 512, 519, 520, 521, 522, 523, 525, 526, 527, 533, 534, 535, 536, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 617, 618, 625, 626, 627, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 655, 657, 659, 661, 662, 664, 665, 666, 667, 668, 670, 671, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 689, 690, 691, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 706, 707, 711, 712, 717, 718, 727, 728, 729, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 759, 760, 761, 762, 764, 765, 766, 770, 772, 774, 775, 776, 777, 784, 788, 789, 791, 792, 794, 796, 797, 799, 801, 802, 804, 810, 811, 813, 815, 817, 819, 821, 823, 825, 827, 829, 831, 835, 836, 838, 840, 841, 843, 846, 847, 849, 850, 852, 853, 855, 857, 858, 859, 864, 865, 868, 869, 870, 871, 872, 873, 875, 876, 877, 878, 889, 890, 891, 892, 893, 894, 895, 896, 912, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 926, 931, 932, 933, 934, 937, 940, 946, 947, 948, 949, 950, 951, 953, 954, 955, 956, 957, 958, 959, 962, 963, 964, 965, 966, 969, 971, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 985, 986, 988, 989, 991, 993, 994, 995, 1007, 1008, 1009, 1010, 1015, 1019, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1033, 1035, 1038, 1039, 1041, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1086, 1087, 1088, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1139, 1140, 1142, 1143, 1144, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1160, 1164, 1165, 1166, 1167, 1194], "\u03f5": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 77, 78, 101, 110, 119, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 206, 207, 209, 210, 211, 212, 214, 216, 217, 224, 227, 230, 231, 232, 233, 237, 240, 243, 246, 248, 249, 253, 256, 259, 261, 264, 270, 274, 275, 276, 277, 278, 285, 286, 288, 295, 296, 297, 298, 299, 306, 307, 312, 313, 314, 317, 320, 321, 324, 325, 328, 329, 334, 335, 340, 350, 351, 352, 353, 354, 356, 365, 372, 373, 374, 375, 376, 377, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 445, 446, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 465, 466, 467, 468, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 511, 512, 519, 520, 521, 522, 523, 525, 526, 527, 533, 534, 535, 536, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 617, 618, 625, 626, 627, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 655, 657, 659, 661, 662, 664, 665, 666, 667, 668, 670, 671, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 689, 690, 691, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 706, 707, 711, 712, 717, 718, 727, 728, 729, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 759, 760, 761, 762, 764, 765, 766, 770, 772, 774, 775, 776, 777, 784, 788, 789, 791, 792, 794, 796, 797, 799, 801, 802, 804, 810, 811, 813, 815, 817, 819, 821, 823, 825, 827, 829, 831, 835, 836, 838, 840, 841, 843, 846, 847, 849, 850, 852, 853, 855, 857, 858, 859, 864, 865, 868, 869, 870, 871, 872, 873, 875, 876, 877, 878, 889, 890, 891, 892, 893, 894, 895, 896, 912, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 926, 931, 932, 933, 934, 937, 940, 946, 947, 948, 949, 950, 951, 953, 954, 955, 956, 957, 958, 959, 962, 963, 964, 965, 966, 969, 971, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 985, 986, 988, 989, 991, 993, 994, 995, 1007, 1008, 1009, 1010, 1015, 1019, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1033, 1035, 1038, 1039, 1041, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1086, 1087, 1088, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1139, 1140, 1142, 1143, 1144, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1160, 1164, 1165, 1166, 1167, 1194], "\u03d5": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 77, 78, 101, 110, 119, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 206, 207, 209, 210, 211, 212, 214, 216, 217, 224, 227, 230, 231, 232, 233, 237, 240, 243, 246, 248, 249, 253, 256, 259, 261, 264, 270, 274, 275, 276, 277, 278, 285, 286, 288, 295, 296, 297, 298, 299, 306, 307, 312, 313, 314, 317, 320, 321, 324, 325, 328, 329, 334, 335, 340, 350, 351, 352, 353, 354, 356, 365, 372, 373, 374, 375, 376, 377, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 445, 446, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 465, 466, 467, 468, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 511, 512, 519, 520, 521, 522, 523, 525, 526, 527, 533, 534, 535, 536, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 617, 618, 625, 626, 627, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 655, 657, 659, 661, 662, 664, 665, 666, 667, 668, 670, 671, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 689, 690, 691, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 706, 707, 711, 712, 717, 718, 727, 728, 729, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 759, 760, 761, 762, 764, 765, 766, 770, 772, 774, 775, 776, 777, 784, 788, 789, 791, 792, 794, 796, 797, 799, 801, 802, 804, 810, 811, 813, 815, 817, 819, 821, 823, 825, 827, 829, 831, 835, 836, 838, 840, 841, 843, 846, 847, 849, 850, 852, 853, 855, 857, 858, 859, 864, 865, 868, 869, 870, 871, 872, 873, 875, 876, 877, 878, 889, 890, 891, 892, 893, 894, 895, 896, 912, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 926, 931, 932, 933, 934, 937, 940, 946, 947, 948, 949, 950, 951, 953, 954, 955, 956, 957, 958, 959, 962, 963, 964, 965, 966, 969, 971, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 985, 986, 988, 989, 991, 993, 994, 995, 1007, 1008, 1009, 1010, 1015, 1019, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1033, 1035, 1038, 1039, 1041, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1086, 1087, 1088, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1139, 1140, 1142, 1143, 1144, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1160, 1164, 1165, 1166, 1167, 1194], "\u03c5": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 77, 78, 101, 110, 119, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 206, 207, 209, 210, 211, 212, 214, 216, 217, 224, 227, 230, 231, 232, 233, 237, 240, 243, 246, 248, 249, 253, 256, 259, 261, 264, 270, 274, 275, 276, 277, 278, 285, 286, 288, 295, 296, 297, 298, 299, 306, 307, 312, 313, 314, 317, 320, 321, 324, 325, 328, 329, 334, 335, 340, 350, 351, 352, 353, 354, 356, 365, 372, 373, 374, 375, 376, 377, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 445, 446, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 465, 466, 467, 468, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 511, 512, 519, 520, 521, 522, 523, 525, 526, 527, 533, 534, 535, 536, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 617, 618, 625, 626, 627, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 655, 657, 659, 661, 662, 664, 665, 666, 667, 668, 670, 671, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 689, 690, 691, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 706, 707, 711, 712, 717, 718, 727, 728, 729, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 759, 760, 761, 762, 764, 765, 766, 770, 772, 774, 775, 776, 777, 784, 788, 789, 791, 792, 794, 796, 797, 799, 801, 802, 804, 810, 811, 813, 815, 817, 819, 821, 823, 825, 827, 829, 831, 835, 836, 838, 840, 841, 843, 846, 847, 849, 850, 852, 853, 855, 857, 858, 859, 864, 865, 868, 869, 870, 871, 872, 873, 875, 876, 877, 878, 889, 890, 891, 892, 893, 894, 895, 896, 912, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 926, 931, 932, 933, 934, 937, 940, 946, 947, 948, 949, 950, 951, 953, 954, 955, 956, 957, 958, 959, 962, 963, 964, 965, 966, 969, 971, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 985, 986, 988, 989, 991, 993, 994, 995, 1007, 1008, 1009, 1010, 1015, 1019, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1033, 1035, 1038, 1039, 1041, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1086, 1087, 1088, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1139, 1140, 1142, 1143, 1144, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1160, 1164, 1165, 1166, 1167, 1194], "\u03b5": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 77, 78, 101, 110, 119, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 206, 207, 209, 210, 211, 212, 214, 216, 217, 224, 227, 230, 231, 232, 233, 237, 240, 243, 246, 248, 249, 253, 256, 259, 261, 264, 270, 274, 275, 276, 277, 278, 285, 286, 288, 295, 296, 297, 298, 299, 306, 307, 312, 313, 314, 317, 320, 321, 324, 325, 328, 329, 334, 335, 340, 350, 351, 352, 353, 354, 356, 365, 372, 373, 374, 375, 376, 377, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 445, 446, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 465, 466, 467, 468, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 511, 512, 519, 520, 521, 522, 523, 525, 526, 527, 533, 534, 535, 536, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 617, 618, 625, 626, 627, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 655, 657, 659, 661, 662, 664, 665, 666, 667, 668, 670, 671, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 689, 690, 691, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 706, 707, 711, 712, 717, 718, 727, 728, 729, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 759, 760, 761, 762, 764, 765, 766, 770, 772, 774, 775, 776, 777, 784, 788, 789, 791, 792, 794, 796, 797, 799, 801, 802, 804, 810, 811, 813, 815, 817, 819, 821, 823, 825, 827, 829, 831, 835, 836, 838, 840, 841, 843, 846, 847, 849, 850, 852, 853, 855, 857, 858, 859, 864, 865, 868, 869, 870, 871, 872, 873, 875, 876, 877, 878, 889, 890, 891, 892, 893, 894, 895, 896, 912, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 926, 931, 932, 933, 934, 937, 940, 946, 947, 948, 949, 950, 951, 953, 954, 955, 956, 957, 958, 959, 962, 963, 964, 965, 966, 969, 971, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 985, 986, 988, 989, 991, 993, 994, 995, 1007, 1008, 1009, 1010, 1015, 1019, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1033, 1035, 1038, 1039, 1041, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1086, 1087, 1088, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1139, 1140, 1142, 1143, 1144, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1160, 1164, 1165, 1166, 1167, 1194], "\u03f0": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 77, 78, 101, 110, 119, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 206, 207, 209, 210, 211, 212, 214, 216, 217, 224, 227, 230, 231, 232, 233, 237, 240, 243, 246, 248, 249, 253, 256, 259, 261, 264, 270, 274, 275, 276, 277, 278, 285, 286, 288, 295, 296, 297, 298, 299, 306, 307, 312, 313, 314, 317, 320, 321, 324, 325, 328, 329, 334, 335, 340, 350, 351, 352, 353, 354, 356, 365, 372, 373, 374, 375, 376, 377, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 445, 446, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 465, 466, 467, 468, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 511, 512, 519, 520, 521, 522, 523, 525, 526, 527, 533, 534, 535, 536, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 617, 618, 625, 626, 627, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 655, 657, 659, 661, 662, 664, 665, 666, 667, 668, 670, 671, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 689, 690, 691, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 706, 707, 711, 712, 717, 718, 727, 728, 729, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 759, 760, 761, 762, 764, 765, 766, 770, 772, 774, 775, 776, 777, 784, 788, 789, 791, 792, 794, 796, 797, 799, 801, 802, 804, 810, 811, 813, 815, 817, 819, 821, 823, 825, 827, 829, 831, 835, 836, 838, 840, 841, 843, 846, 847, 849, 850, 852, 853, 855, 857, 858, 859, 864, 865, 868, 869, 870, 871, 872, 873, 875, 876, 877, 878, 889, 890, 891, 892, 893, 894, 895, 896, 912, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 926, 931, 932, 933, 934, 937, 940, 946, 947, 948, 949, 950, 951, 953, 954, 955, 956, 957, 958, 959, 962, 963, 964, 965, 966, 969, 971, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 985, 986, 988, 989, 991, 993, 994, 995, 1007, 1008, 1009, 1010, 1015, 1019, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1033, 1035, 1038, 1039, 1041, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1086, 1087, 1088, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1139, 1140, 1142, 1143, 1144, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1160, 1164, 1165, 1166, 1167, 1194], "\u03c6": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 77, 78, 101, 110, 119, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 206, 207, 209, 210, 211, 212, 214, 216, 217, 224, 227, 230, 231, 232, 233, 237, 240, 243, 246, 248, 249, 253, 256, 259, 261, 264, 270, 274, 275, 276, 277, 278, 285, 286, 288, 295, 296, 297, 298, 299, 306, 307, 312, 313, 314, 317, 320, 321, 324, 325, 328, 329, 334, 335, 340, 350, 351, 352, 353, 354, 356, 365, 372, 373, 374, 375, 376, 377, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 445, 446, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 465, 466, 467, 468, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 511, 512, 519, 520, 521, 522, 523, 525, 526, 527, 533, 534, 535, 536, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 617, 618, 625, 626, 627, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 655, 657, 659, 661, 662, 664, 665, 666, 667, 668, 670, 671, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 689, 690, 691, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 706, 707, 711, 712, 717, 718, 727, 728, 729, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 759, 760, 761, 762, 764, 765, 766, 770, 772, 774, 775, 776, 777, 784, 788, 789, 791, 792, 794, 796, 797, 799, 801, 802, 804, 810, 811, 813, 815, 817, 819, 821, 823, 825, 827, 829, 831, 835, 836, 838, 840, 841, 843, 846, 847, 849, 850, 852, 853, 855, 857, 858, 859, 864, 865, 868, 869, 870, 871, 872, 873, 875, 876, 877, 878, 889, 890, 891, 892, 893, 894, 895, 896, 912, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 926, 931, 932, 933, 934, 937, 940, 946, 947, 948, 949, 950, 951, 953, 954, 955, 956, 957, 958, 959, 962, 963, 964, 965, 966, 969, 971, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 985, 986, 988, 989, 991, 993, 994, 995, 1007, 1008, 1009, 1010, 1015, 1019, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1033, 1035, 1038, 1039, 1041, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1086, 1087, 1088, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1139, 1140, 1142, 1143, 1144, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1160, 1164, 1165, 1166, 1167, 1194], "\u03d6": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 77, 78, 101, 110, 119, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 206, 207, 209, 210, 211, 212, 214, 216, 217, 224, 227, 230, 231, 232, 233, 237, 240, 243, 246, 248, 249, 253, 256, 259, 261, 264, 270, 274, 275, 276, 277, 278, 285, 286, 288, 295, 296, 297, 298, 299, 306, 307, 312, 313, 314, 317, 320, 321, 324, 325, 328, 329, 334, 335, 340, 350, 351, 352, 353, 354, 356, 365, 372, 373, 374, 375, 376, 377, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 445, 446, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 465, 466, 467, 468, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 511, 512, 519, 520, 521, 522, 523, 525, 526, 527, 533, 534, 535, 536, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 617, 618, 625, 626, 627, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 655, 657, 659, 661, 662, 664, 665, 666, 667, 668, 670, 671, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 689, 690, 691, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 706, 707, 711, 712, 717, 718, 727, 728, 729, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 759, 760, 761, 762, 764, 765, 766, 770, 772, 774, 775, 776, 777, 784, 788, 789, 791, 792, 794, 796, 797, 799, 801, 802, 804, 810, 811, 813, 815, 817, 819, 821, 823, 825, 827, 829, 831, 835, 836, 838, 840, 841, 843, 846, 847, 849, 850, 852, 853, 855, 857, 858, 859, 864, 865, 868, 869, 870, 871, 872, 873, 875, 876, 877, 878, 889, 890, 891, 892, 893, 894, 895, 896, 912, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 926, 931, 932, 933, 934, 937, 940, 946, 947, 948, 949, 950, 951, 953, 954, 955, 956, 957, 958, 959, 962, 963, 964, 965, 966, 969, 971, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 985, 986, 988, 989, 991, 993, 994, 995, 1007, 1008, 1009, 1010, 1015, 1019, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1033, 1035, 1038, 1039, 1041, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1086, 1087, 1088, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1139, 1140, 1142, 1143, 1144, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1160, 1164, 1165, 1166, 1167, 1194], "\u03f1": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 77, 78, 101, 110, 119, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 206, 207, 209, 210, 211, 212, 214, 216, 217, 224, 227, 230, 231, 232, 233, 237, 240, 243, 246, 248, 249, 253, 256, 259, 261, 264, 270, 274, 275, 276, 277, 278, 285, 286, 288, 295, 296, 297, 298, 299, 306, 307, 312, 313, 314, 317, 320, 321, 324, 325, 328, 329, 334, 335, 340, 350, 351, 352, 353, 354, 356, 365, 372, 373, 374, 375, 376, 377, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 445, 446, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 465, 466, 467, 468, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 511, 512, 519, 520, 521, 522, 523, 525, 526, 527, 533, 534, 535, 536, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 617, 618, 625, 626, 627, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 655, 657, 659, 661, 662, 664, 665, 666, 667, 668, 670, 671, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 689, 690, 691, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 706, 707, 711, 712, 717, 718, 727, 728, 729, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 759, 760, 761, 762, 764, 765, 766, 770, 772, 774, 775, 776, 777, 784, 788, 789, 791, 792, 794, 796, 797, 799, 801, 802, 804, 810, 811, 813, 815, 817, 819, 821, 823, 825, 827, 829, 831, 835, 836, 838, 840, 841, 843, 846, 847, 849, 850, 852, 853, 855, 857, 858, 859, 864, 865, 868, 869, 870, 871, 872, 873, 875, 876, 877, 878, 889, 890, 891, 892, 893, 894, 895, 896, 912, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 926, 931, 932, 933, 934, 937, 940, 946, 947, 948, 949, 950, 951, 953, 954, 955, 956, 957, 958, 959, 962, 963, 964, 965, 966, 969, 971, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 985, 986, 988, 989, 991, 993, 994, 995, 1007, 1008, 1009, 1010, 1015, 1019, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1033, 1035, 1038, 1039, 1041, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1086, 1087, 1088, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1139, 1140, 1142, 1143, 1144, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1160, 1164, 1165, 1166, 1167, 1194], "\u03c2": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 77, 78, 101, 110, 119, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 206, 207, 209, 210, 211, 212, 214, 216, 217, 224, 227, 230, 231, 232, 233, 237, 240, 243, 246, 248, 249, 253, 256, 259, 261, 264, 270, 274, 275, 276, 277, 278, 285, 286, 288, 295, 296, 297, 298, 299, 306, 307, 312, 313, 314, 317, 320, 321, 324, 325, 328, 329, 334, 335, 340, 350, 351, 352, 353, 354, 356, 365, 372, 373, 374, 375, 376, 377, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 445, 446, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 465, 466, 467, 468, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 511, 512, 519, 520, 521, 522, 523, 525, 526, 527, 533, 534, 535, 536, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 617, 618, 625, 626, 627, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 655, 657, 659, 661, 662, 664, 665, 666, 667, 668, 670, 671, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 689, 690, 691, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 706, 707, 711, 712, 717, 718, 727, 728, 729, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 759, 760, 761, 762, 764, 765, 766, 770, 772, 774, 775, 776, 777, 784, 788, 789, 791, 792, 794, 796, 797, 799, 801, 802, 804, 810, 811, 813, 815, 817, 819, 821, 823, 825, 827, 829, 831, 835, 836, 838, 840, 841, 843, 846, 847, 849, 850, 852, 853, 855, 857, 858, 859, 864, 865, 868, 869, 870, 871, 872, 873, 875, 876, 877, 878, 889, 890, 891, 892, 893, 894, 895, 896, 912, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 926, 931, 932, 933, 934, 937, 940, 946, 947, 948, 949, 950, 951, 953, 954, 955, 956, 957, 958, 959, 962, 963, 964, 965, 966, 969, 971, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 985, 986, 988, 989, 991, 993, 994, 995, 1007, 1008, 1009, 1010, 1015, 1019, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1033, 1035, 1038, 1039, 1041, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1086, 1087, 1088, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1139, 1140, 1142, 1143, 1144, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1160, 1164, 1165, 1166, 1167, 1194], "\u03d1": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 77, 78, 101, 110, 119, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 206, 207, 209, 210, 211, 212, 214, 216, 217, 224, 227, 230, 231, 232, 233, 237, 240, 243, 246, 248, 249, 253, 256, 259, 261, 264, 270, 274, 275, 276, 277, 278, 285, 286, 288, 295, 296, 297, 298, 299, 306, 307, 312, 313, 314, 317, 320, 321, 324, 325, 328, 329, 334, 335, 340, 350, 351, 352, 353, 354, 356, 365, 372, 373, 374, 375, 376, 377, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 445, 446, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 465, 466, 467, 468, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 511, 512, 519, 520, 521, 522, 523, 525, 526, 527, 533, 534, 535, 536, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 617, 618, 625, 626, 627, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 655, 657, 659, 661, 662, 664, 665, 666, 667, 668, 670, 671, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 689, 690, 691, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 706, 707, 711, 712, 717, 718, 727, 728, 729, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 759, 760, 761, 762, 764, 765, 766, 770, 772, 774, 775, 776, 777, 784, 788, 789, 791, 792, 794, 796, 797, 799, 801, 802, 804, 810, 811, 813, 815, 817, 819, 821, 823, 825, 827, 829, 831, 835, 836, 838, 840, 841, 843, 846, 847, 849, 850, 852, 853, 855, 857, 858, 859, 864, 865, 868, 869, 870, 871, 872, 873, 875, 876, 877, 878, 889, 890, 891, 892, 893, 894, 895, 896, 912, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 926, 931, 932, 933, 934, 937, 940, 946, 947, 948, 949, 950, 951, 953, 954, 955, 956, 957, 958, 959, 962, 963, 964, 965, 966, 969, 971, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 985, 986, 988, 989, 991, 993, 994, 995, 1007, 1008, 1009, 1010, 1015, 1019, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1033, 1035, 1038, 1039, 1041, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1086, 1087, 1088, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1139, 1140, 1142, 1143, 1144, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1160, 1164, 1165, 1166, 1167, 1194], "\u2128": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 77, 78, 101, 110, 119, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 206, 207, 209, 210, 211, 212, 214, 216, 217, 224, 227, 230, 231, 232, 233, 237, 240, 243, 246, 248, 249, 253, 256, 259, 261, 264, 270, 274, 275, 276, 277, 278, 285, 286, 288, 295, 296, 297, 298, 299, 306, 307, 312, 313, 314, 317, 320, 321, 324, 325, 328, 329, 334, 335, 340, 350, 351, 352, 353, 354, 356, 365, 372, 373, 374, 375, 376, 377, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 445, 446, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 465, 466, 467, 468, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 511, 512, 519, 520, 521, 522, 523, 525, 526, 527, 533, 534, 535, 536, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 617, 618, 625, 626, 627, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 655, 657, 659, 661, 662, 664, 665, 666, 667, 668, 670, 671, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 689, 690, 691, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 706, 707, 711, 712, 717, 718, 727, 728, 729, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 759, 760, 761, 762, 764, 765, 766, 770, 772, 774, 775, 776, 777, 784, 788, 789, 791, 792, 794, 796, 797, 799, 801, 802, 804, 810, 811, 813, 815, 817, 819, 821, 823, 825, 827, 829, 831, 835, 836, 838, 840, 841, 843, 846, 847, 849, 850, 852, 853, 855, 857, 858, 859, 864, 865, 868, 869, 870, 871, 872, 873, 875, 876, 877, 878, 889, 890, 891, 892, 893, 894, 895, 896, 912, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 926, 931, 932, 933, 934, 937, 940, 946, 947, 948, 949, 950, 951, 953, 954, 955, 956, 957, 958, 959, 962, 963, 964, 965, 966, 969, 971, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 985, 986, 988, 989, 991, 993, 994, 995, 1007, 1008, 1009, 1010, 1015, 1019, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1033, 1035, 1038, 1039, 1041, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1086, 1087, 1088, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1139, 1140, 1142, 1143, 1144, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1160, 1164, 1165, 1166, 1167, 1194], "mittwoch": [8, 214, 216, 224], "00": [8, 126, 172, 173, 175, 180, 185, 193, 197, 205, 206, 207, 209, 210, 211, 212, 214, 216, 218, 220, 222, 224, 227, 231, 237, 239, 245, 255, 258, 259, 286, 287, 294, 295, 297, 358, 466, 474, 488, 743, 765, 769, 773, 784, 860, 861, 915, 937, 938, 939, 991, 1010, 1019, 1057, 1164], "cours": [8, 13, 40, 67, 108, 146, 152, 166, 167, 168, 169, 170, 172, 185, 198, 199, 209, 217, 221, 227, 232, 237, 248, 259, 276, 278, 286, 295, 297, 298, 312, 313, 321, 324, 325, 328, 329, 365, 383, 384, 386, 435, 436, 452, 479, 490, 496, 502, 547, 784, 808, 833, 845, 860, 861, 922, 931, 960, 967, 1009, 1031, 1032, 1054, 1086, 1118, 1127, 1131, 1144, 1145, 1158, 1184, 1187, 1199], "tectrain": [8, 11, 193, 205, 214, 216, 224, 227, 230, 231, 232, 233, 237, 249, 261, 383], "html": [8, 17, 18, 23, 39, 40, 167, 176, 189, 197, 214, 224, 227, 230, 234, 237, 240, 243, 246, 262, 293, 348, 360, 670, 789, 804, 810, 893, 915, 1001, 1005, 1076, 1142], "download": [8, 17, 62, 69, 110, 158, 169, 175, 177, 181, 185, 190, 193, 202, 209, 214, 222, 224, 227, 230, 231, 232, 237, 240, 243, 253, 256, 259, 261, 264, 267, 270, 279, 282, 289, 293, 300, 317, 337, 343, 347, 356, 385, 475, 478, 539, 540, 541, 542, 543, 544, 545, 548, 549, 594, 679, 681, 685, 686, 708, 709, 710, 713, 714, 715, 716, 718, 719, 720, 721, 722, 723, 724, 725, 726, 740, 742, 893, 895, 915, 917, 930, 937, 938, 939, 949, 1015, 1021, 1055, 1088, 1100, 1109, 1119, 1120, 1122, 1133, 1135, 1137, 1159], "repositori": [8, 23, 81, 101, 113, 126, 152, 157, 166, 173, 176, 184, 188, 197, 199, 206, 207, 217, 222, 224, 227, 231, 232, 233, 237, 240, 243, 248, 249, 253, 256, 259, 261, 264, 270, 278, 286, 296, 297, 299, 303, 309, 313, 314, 317, 321, 325, 329, 331, 335, 337, 343, 347, 350, 364, 365, 370, 538, 555, 590, 786, 833, 1173, 1178], "kurssprach": [8, 214, 224, 233, 249, 261], "kurs": [8, 23, 167, 184, 205, 216, 224, 233, 249, 261, 1178, 1179, 1180, 1188, 1195, 1202], "viel": [8, 23, 188, 193, 197, 203, 214, 224, 233, 239, 249, 250, 261, 280, 1181, 1182, 1188, 1196, 1197], "spezifisch": [8, 214, 224, 233, 249, 261, 1179, 1198, 1201], "unterrichtet": [8, 214, 224, 233, 249, 261], "themenreihenfolg": [8, 214, 224, 233, 249, 261], "herdt": [8, 163, 224, 233, 249, 261], "skriptum": [8, 214, 224, 233, 249, 261, 1194], "\u00fcbernommen": [8, 214, 224, 233, 249, 261], "etwa": [8, 23, 178, 179, 188, 193, 203, 205, 214, 224, 226, 233, 249, 261, 383, 1179, 1181, 1188, 1194, 1195, 1197, 1202], "allgemein": [8, 214, 224, 233, 249, 261, 1194], "allgemeinen": [8, 214, 218, 224, 233, 249, 261, 1197], "dadurch": [8, 214, 224, 233, 249, 261, 383, 1181, 1201], "verwirrend": [8, 214, 224, 233, 249, 261, 1194], "weswegen": [8, 214, 224, 233, 249, 261], "vielen": [8, 23, 188, 213, 224, 233, 249, 261, 383, 1188, 1190], "f\u00e4llen": [8, 23, 150, 214, 224, 233, 249, 261], "ausnahmen": [8, 150, 214, 224, 233, 249, 261], "gemacht": [8, 23, 178, 184, 214, 224, 233, 249, 261, 1194, 1202], "kursstruktur": [8, 224], "sieh": [8, 23, 150, 187, 188, 189, 193, 197, 203, 214, 216, 219, 224, 233, 249, 261, 383, 1179, 1180, 1194], "jjj": [8, 139, 167, 211, 216, 224, 246, 294, 299, 374, 788, 789, 790, 794, 802], "hello": [8, 29, 62, 94, 163, 181, 203, 209, 213, 214, 216, 220, 224, 226, 227, 231, 233, 235, 237, 239, 240, 243, 245, 248, 249, 250, 252, 253, 259, 260, 261, 262, 264, 265, 267, 269, 282, 283, 289, 292, 300, 302, 303, 308, 309, 322, 330, 331, 332, 336, 337, 342, 343, 346, 347, 348, 351, 352, 353, 354, 355, 356, 360, 361, 365, 400, 403, 407, 418, 427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 488, 597, 600, 670, 692, 698, 701, 718, 723, 724, 725, 726, 730, 783, 785, 786, 790, 793, 795, 798, 800, 803, 810, 814, 818, 824, 830, 835, 837, 842, 845, 848, 851, 854, 860, 861, 864, 865, 897, 899, 904, 905, 912, 929, 940, 962, 986, 1007, 1008, 1009, 1019, 1021, 1023, 1024, 1025, 1032, 1039, 1040, 1041, 1042, 1046, 1054, 1058, 1059, 1065, 1068, 1070, 1074, 1075, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1141, 1144, 1145, 1151, 1155, 1158, 1180, 1194], "py": [8, 17, 21, 32, 40, 62, 69, 154, 166, 185, 189, 190, 193, 201, 202, 203, 206, 207, 209, 211, 221, 224, 230, 236, 239, 243, 245, 246, 249, 250, 253, 255, 256, 258, 259, 261, 262, 268, 270, 282, 288, 289, 290, 298, 299, 303, 304, 309, 320, 321, 326, 339, 347, 348, 350, 365, 474, 732, 937, 993, 995, 1028, 1031, 1033, 1034, 1038, 1039, 1041, 1057, 1058, 1060, 1066, 1083, 1085, 1086, 1087, 1088, 1092, 1093, 1095, 1096, 1098, 1100, 1105, 1109, 1111, 1113, 1115, 1116, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1133, 1134, 1139, 1147, 1152, 1153, 1164, 1165], "swap": [8, 29, 172, 208, 214, 224, 226, 233, 245, 248, 249, 261, 266, 267, 276, 285, 286, 306, 307, 348, 440, 444, 447, 451, 460, 464, 469, 470, 568, 692, 730, 783, 785, 786, 819, 863, 874, 875, 929, 1061, 1090, 1092, 1093, 1094, 1095, 1097, 1129, 1194, 1198], "exercis": [8, 29, 82, 97, 101, 106, 108, 110, 128, 129, 141, 144, 145, 146, 167, 189, 197, 202, 209, 210, 214, 216, 221, 224, 227, 233, 237, 240, 243, 244, 246, 249, 253, 256, 259, 261, 264, 266, 267, 276, 278, 285, 289, 291, 292, 306, 307, 311, 325, 329, 336, 350, 351, 352, 353, 354, 356, 364, 367, 370, 378, 379, 396, 403, 418, 427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 489, 497, 537, 558, 559, 560, 561, 563, 564, 565, 570, 590, 657, 658, 672, 692, 730, 758, 785, 786, 787, 794, 856, 860, 861, 863, 867, 874, 884, 886, 888, 913, 923, 929, 945, 968, 970, 979, 987, 1006, 1013, 1054, 1055, 1089, 1118, 1129, 1130, 1164, 1184, 1187, 1189, 1194, 1199], "greet": [8, 29, 203, 214, 224, 227, 233, 239, 240, 249, 250, 252, 258, 259, 261, 264, 267, 282, 283, 361, 484, 786, 1008, 1009, 1015, 1025, 1090, 1092, 1094, 1097, 1129, 1194], "depend": [8, 13, 28, 29, 62, 82, 118, 123, 124, 128, 146, 163, 166, 167, 170, 171, 177, 181, 200, 202, 214, 224, 227, 232, 233, 239, 240, 245, 246, 249, 255, 258, 259, 261, 264, 267, 282, 299, 307, 313, 329, 365, 380, 388, 404, 406, 414, 417, 433, 450, 462, 468, 472, 476, 480, 483, 487, 490, 497, 503, 537, 549, 575, 577, 585, 665, 691, 739, 762, 784, 786, 792, 845, 856, 863, 867, 874, 877, 888, 913, 923, 930, 938, 956, 1008, 1019, 1023, 1025, 1032, 1054, 1055, 1057, 1090, 1094, 1103, 1129, 1158, 1159, 1189, 1191, 1194], "time": [8, 29, 36, 38, 43, 53, 62, 77, 80, 89, 93, 102, 114, 115, 126, 128, 129, 133, 141, 146, 149, 160, 169, 170, 171, 172, 174, 175, 177, 190, 191, 194, 202, 206, 208, 209, 210, 214, 220, 222, 224, 227, 229, 231, 232, 233, 239, 240, 242, 245, 246, 249, 250, 258, 259, 261, 264, 265, 267, 268, 282, 283, 286, 289, 290, 292, 295, 296, 298, 299, 300, 304, 307, 317, 320, 321, 324, 326, 331, 332, 337, 338, 344, 351, 372, 383, 400, 408, 422, 428, 431, 454, 456, 461, 462, 465, 466, 467, 468, 472, 477, 488, 490, 491, 494, 500, 549, 579, 592, 599, 601, 642, 643, 697, 704, 718, 732, 740, 742, 753, 760, 764, 784, 786, 804, 806, 810, 811, 813, 825, 831, 833, 835, 848, 851, 854, 858, 864, 865, 866, 872, 873, 877, 893, 924, 929, 930, 937, 938, 939, 949, 959, 965, 966, 967, 971, 974, 975, 977, 980, 983, 989, 991, 992, 993, 994, 995, 1000, 1022, 1023, 1029, 1033, 1039, 1042, 1043, 1054, 1055, 1056, 1059, 1066, 1069, 1072, 1073, 1090, 1092, 1094, 1097, 1129, 1135, 1144, 1149, 1159, 1189, 1194, 1200], "dai": [8, 12, 29, 171, 172, 174, 180, 183, 186, 189, 190, 194, 208, 214, 224, 227, 233, 235, 244, 249, 258, 259, 261, 264, 267, 282, 290, 294, 317, 371, 373, 374, 383, 473, 478, 479, 490, 511, 786, 850, 889, 954, 991, 1032, 1054, 1061, 1070, 1090, 1092, 1094, 1097, 1129, 1130, 1137, 1158, 1185, 1186, 1187, 1189, 1194, 1199], "hen": [8, 224], "vehikelkauf": [8, 224], "datentypen": [8, 193, 197, 214, 215, 221, 224, 255, 273, 366, 1181, 1194, 1201], "\u00fcbersicht": [8, 214, 224, 227, 237, 240, 243], "git": [8, 13, 23, 60, 69, 76, 77, 78, 82, 127, 128, 129, 145, 153, 157, 162, 174, 176, 184, 197, 198, 199, 202, 219, 221, 222, 224, 246, 248, 259, 270, 275, 277, 295, 296, 297, 371, 372, 378, 379, 475, 536, 547, 610, 786, 808, 833, 834, 893, 932, 937, 1021, 1022, 1086, 1173, 1178], "scm": [8, 60, 173, 197, 224, 806], "com": [8, 13, 20, 23, 37, 42, 44, 50, 89, 110, 126, 128, 140, 152, 154, 166, 175, 176, 177, 181, 185, 197, 198, 199, 200, 206, 207, 210, 211, 219, 224, 226, 232, 246, 248, 258, 270, 275, 277, 283, 286, 289, 290, 295, 296, 297, 299, 303, 309, 313, 314, 317, 321, 325, 329, 331, 335, 337, 343, 347, 364, 365, 370, 376, 385, 533, 547, 568, 610, 630, 631, 632, 633, 634, 636, 637, 638, 639, 642, 651, 670, 752, 833, 834, 893, 932, 937, 940, 948, 949, 1021, 1086, 1144, 1148, 1149, 1150, 1152, 1153, 1154, 1155], "pep": [8, 166, 214, 224, 296, 298, 299, 320, 321], "The": [8, 13, 17, 29, 30, 40, 49, 53, 57, 61, 62, 63, 65, 69, 82, 88, 94, 103, 110, 111, 112, 113, 114, 115, 123, 128, 130, 131, 132, 133, 134, 136, 138, 139, 145, 146, 149, 150, 153, 163, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 182, 185, 186, 187, 190, 191, 193, 194, 198, 199, 200, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 221, 222, 224, 227, 230, 233, 237, 238, 239, 240, 243, 244, 245, 248, 249, 252, 253, 255, 256, 258, 261, 262, 264, 267, 269, 272, 274, 275, 276, 277, 279, 282, 285, 288, 289, 292, 295, 297, 299, 302, 303, 305, 306, 308, 309, 325, 327, 330, 331, 332, 336, 337, 339, 342, 343, 346, 347, 349, 351, 352, 353, 354, 355, 356, 362, 365, 366, 367, 368, 370, 371, 382, 383, 384, 387, 389, 397, 403, 411, 413, 415, 416, 417, 418, 423, 427, 431, 434, 440, 444, 447, 450, 451, 454, 460, 462, 464, 469, 473, 475, 477, 490, 491, 492, 495, 496, 501, 510, 511, 512, 514, 516, 518, 533, 536, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 550, 552, 555, 557, 590, 591, 593, 597, 598, 600, 609, 610, 611, 612, 613, 616, 619, 627, 635, 641, 645, 654, 657, 658, 663, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 691, 692, 695, 699, 701, 706, 711, 717, 730, 731, 740, 741, 742, 746, 755, 762, 763, 767, 771, 780, 783, 784, 786, 787, 794, 796, 806, 808, 811, 827, 833, 835, 838, 856, 858, 860, 861, 862, 863, 866, 867, 870, 871, 874, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 890, 892, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 908, 909, 911, 923, 929, 933, 937, 938, 939, 952, 954, 958, 960, 963, 964, 965, 966, 968, 970, 973, 977, 978, 980, 981, 984, 987, 990, 991, 992, 1001, 1004, 1005, 1008, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1021, 1022, 1023, 1024, 1025, 1026, 1030, 1032, 1033, 1036, 1037, 1040, 1041, 1042, 1044, 1045, 1046, 1053, 1055, 1057, 1059, 1060, 1067, 1071, 1074, 1078, 1079, 1081, 1082, 1083, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1137, 1138, 1140, 1141, 1144, 1145, 1147, 1151, 1153, 1158, 1161, 1164, 1166, 1168, 1171, 1181, 1183, 1184, 1185, 1187, 1194], "zen": [8, 173, 214, 224, 252, 263, 296, 707], "corei": [8, 191, 202, 205, 206, 209, 211, 214, 216, 222, 224, 227, 230, 237, 240, 243, 253, 256, 267, 270, 279, 303, 309, 337, 365, 370, 1131, 1149, 1150, 1152, 1153, 1154, 1155, 1157, 1167], "schaefer": [8, 211, 214, 216, 222, 224], "youtub": [8, 20, 177, 191, 202, 205, 207, 209, 211, 214, 216, 224, 231, 298, 299, 320, 324, 338, 351], "channel": [8, 141, 175, 191, 214, 224, 930, 938, 1000], "trainer": [8, 12, 23, 24, 61, 63, 65, 177, 196, 197, 202, 214, 224, 275, 277, 295, 477, 479, 547, 594, 742, 938, 1032, 1039, 1054, 1055, 1130, 1145, 1157, 1158, 1164, 1184, 1189], "hacker": [8, 214, 224, 1189], "schier": [8, 214, 224], "anzahl": [8, 214, 224], "sehr": [8, 23, 37, 150, 178, 179, 193, 197, 203, 205, 213, 214, 218, 224, 255, 383, 1179, 1181, 1188, 1191, 1194, 1195, 1197, 1202], "guten": [8, 193, 203, 205, 214, 224, 258, 262, 383, 1183], "tutori": [8, 177, 191, 202, 205, 210, 214, 222, 224, 230, 231, 233, 240, 243, 253, 256, 279, 309, 321, 337, 351, 365, 370, 893, 939, 1083, 1085, 1149, 1150, 1152, 1153, 1154, 1155, 1157, 1167], "stil": [8, 214, 224], "besser": [8, 23, 178, 189, 213, 214, 224, 234, 1194], "ander": [8, 193, 203, 214, 224, 234, 242, 255, 360, 365, 370, 374, 383, 859, 1179, 1180, 1183, 1188, 1191, 1196, 1200, 1201], "auswahl": [8, 214, 224], "einleitung": [9, 225], "datatyp": [9, 29, 94, 163, 202, 206, 209, 214, 215, 216, 219, 221, 225, 227, 228, 233, 237, 238, 240, 241, 243, 244, 246, 247, 248, 249, 251, 253, 254, 259, 260, 261, 263, 264, 266, 269, 279, 281, 284, 291, 299, 301, 305, 311, 321, 323, 325, 327, 333, 339, 345, 349, 351, 352, 353, 354, 355, 356, 365, 370, 404, 411, 596, 625, 693, 786, 1000, 1032, 1037, 1039, 1040, 1041, 1042, 1046, 1054, 1065, 1074, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1141, 1144, 1145, 1151, 1158, 1194], "number": [9, 24, 27, 29, 36, 53, 57, 61, 62, 63, 65, 72, 82, 84, 86, 88, 89, 114, 115, 126, 129, 133, 135, 145, 160, 163, 169, 171, 172, 175, 177, 180, 181, 185, 188, 190, 193, 199, 202, 206, 209, 212, 213, 214, 216, 221, 222, 225, 227, 228, 230, 233, 237, 239, 240, 242, 243, 245, 246, 249, 251, 252, 253, 255, 258, 259, 261, 263, 264, 266, 267, 268, 270, 275, 277, 279, 282, 283, 289, 290, 295, 296, 297, 298, 299, 300, 302, 303, 304, 308, 309, 312, 320, 321, 324, 325, 326, 328, 330, 331, 332, 336, 337, 338, 342, 343, 346, 347, 348, 351, 356, 365, 372, 383, 388, 390, 392, 394, 396, 397, 398, 404, 408, 410, 411, 422, 433, 449, 453, 458, 462, 466, 472, 474, 484, 502, 503, 511, 536, 544, 546, 549, 551, 562, 568, 595, 615, 623, 626, 633, 649, 674, 683, 686, 695, 707, 733, 740, 742, 784, 786, 792, 794, 801, 804, 813, 815, 827, 829, 835, 843, 847, 858, 866, 873, 899, 918, 920, 922, 924, 926, 938, 949, 950, 953, 957, 958, 959, 964, 965, 966, 967, 986, 991, 992, 1000, 1001, 1005, 1007, 1010, 1030, 1031, 1033, 1035, 1036, 1037, 1047, 1059, 1060, 1061, 1066, 1067, 1077, 1078, 1079, 1081, 1082, 1090, 1093, 1094, 1097, 1100, 1101, 1103, 1104, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1125, 1129, 1130, 1131, 1134, 1139, 1157, 1159, 1164, 1177, 1186, 1189, 1194], "integ": [9, 38, 79, 80, 92, 188, 190, 192, 207, 208, 209, 211, 215, 219, 225, 228, 232, 239, 242, 243, 245, 248, 251, 254, 255, 256, 258, 263, 266, 272, 284, 291, 304, 311, 323, 327, 333, 339, 349, 365, 388, 389, 394, 404, 407, 409, 410, 411, 422, 433, 435, 437, 438, 449, 450, 454, 460, 464, 469, 470, 511, 512, 515, 533, 568, 596, 622, 625, 673, 687, 691, 692, 694, 730, 733, 759, 783, 785, 786, 792, 967, 977, 978, 979, 986, 1026, 1039, 1042, 1070, 1076, 1082, 1108, 1152, 1154, 1181, 1185, 1200], "string": [9, 29, 42, 50, 58, 94, 101, 110, 118, 122, 133, 134, 167, 172, 197, 207, 208, 209, 211, 214, 215, 218, 221, 225, 227, 228, 230, 231, 233, 237, 238, 240, 241, 243, 244, 246, 247, 248, 249, 251, 253, 254, 257, 259, 260, 261, 263, 264, 266, 269, 272, 274, 275, 277, 279, 281, 282, 284, 288, 289, 291, 292, 294, 302, 303, 305, 308, 309, 311, 320, 321, 323, 324, 325, 327, 330, 331, 333, 334, 335, 336, 337, 339, 342, 343, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 361, 365, 370, 376, 389, 392, 396, 403, 412, 418, 427, 433, 434, 440, 444, 447, 451, 456, 460, 464, 469, 470, 474, 482, 493, 497, 499, 514, 516, 517, 518, 521, 523, 526, 527, 528, 530, 531, 532, 533, 549, 550, 551, 556, 567, 568, 576, 582, 585, 591, 593, 596, 597, 600, 615, 617, 634, 637, 638, 639, 643, 646, 647, 648, 649, 650, 651, 654, 658, 669, 671, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 690, 692, 693, 694, 696, 698, 699, 703, 718, 722, 724, 725, 726, 727, 730, 732, 734, 735, 739, 749, 750, 751, 752, 754, 766, 771, 783, 784, 785, 786, 865, 956, 967, 971, 974, 978, 986, 991, 1000, 1004, 1031, 1032, 1035, 1043, 1052, 1054, 1059, 1067, 1081, 1088, 1089, 1090, 1095, 1100, 1103, 1104, 1105, 1108, 1111, 1114, 1115, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1142, 1143, 1144, 1145, 1147, 1150, 1181, 1194], "compound": [9, 29, 94, 163, 206, 209, 214, 215, 216, 225, 227, 233, 237, 238, 240, 241, 243, 244, 246, 247, 249, 251, 253, 254, 259, 260, 261, 263, 264, 266, 267, 269, 281, 282, 289, 292, 299, 301, 302, 303, 305, 308, 309, 311, 320, 321, 323, 324, 325, 327, 330, 331, 336, 337, 339, 342, 343, 345, 346, 347, 349, 351, 352, 353, 354, 355, 356, 365, 388, 419, 438, 786, 1032, 1039, 1040, 1041, 1042, 1046, 1054, 1087, 1088, 1089, 1090, 1098, 1099, 1100, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1141, 1144, 1145, 1151, 1158, 1194], "list": [9, 27, 29, 37, 62, 94, 103, 128, 154, 163, 166, 167, 170, 177, 181, 192, 197, 199, 202, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 218, 221, 222, 225, 227, 228, 230, 233, 237, 238, 240, 241, 243, 244, 246, 247, 248, 249, 251, 253, 254, 255, 260, 261, 263, 264, 266, 267, 269, 271, 275, 276, 279, 281, 282, 284, 285, 286, 289, 291, 292, 295, 296, 297, 301, 302, 303, 305, 306, 307, 308, 309, 311, 320, 321, 323, 324, 325, 326, 330, 331, 333, 336, 337, 339, 342, 343, 345, 346, 347, 349, 350, 357, 360, 362, 365, 369, 370, 371, 383, 441, 447, 451, 452, 460, 464, 466, 468, 469, 470, 474, 475, 478, 487, 494, 496, 497, 536, 538, 546, 549, 582, 584, 586, 590, 594, 595, 600, 625, 641, 654, 658, 677, 687, 692, 695, 730, 738, 744, 749, 762, 763, 783, 784, 785, 786, 787, 795, 799, 800, 803, 810, 811, 814, 824, 835, 837, 841, 842, 848, 851, 854, 859, 860, 861, 862, 863, 866, 867, 873, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 897, 900, 901, 904, 905, 907, 908, 909, 910, 911, 913, 921, 929, 938, 958, 960, 962, 968, 970, 978, 980, 984, 987, 990, 992, 1007, 1009, 1024, 1028, 1031, 1032, 1035, 1036, 1037, 1050, 1052, 1054, 1055, 1061, 1062, 1067, 1068, 1069, 1070, 1073, 1079, 1081, 1082, 1083, 1088, 1090, 1100, 1103, 1104, 1105, 1106, 1110, 1111, 1112, 1113, 1114, 1115, 1121, 1123, 1126, 1128, 1129, 1130, 1131, 1136, 1139, 1149, 1152, 1156, 1166, 1171, 1178, 1181, 1194, 1195], "arrai": [9, 101, 112, 128, 193, 214, 215, 220, 225, 227, 231, 232, 234, 240, 248, 253, 258, 267, 270, 274, 275, 295, 303, 309, 348, 388, 397, 403, 407, 418, 427, 434, 444, 447, 451, 453, 455, 456, 459, 460, 464, 469, 470, 548, 551, 574, 582, 585, 623, 624, 626, 628, 630, 633, 634, 639, 643, 655, 675, 682, 683, 684, 685, 686, 687, 690, 692, 730, 738, 753, 770, 783, 785, 786, 804, 865, 870, 986, 1063, 1067, 1079, 1131, 1134, 1136, 1159, 1194], "javascript": [9, 23, 168, 203, 213, 225, 234, 258, 263, 1026, 1072], "std": [9, 42, 50, 58, 110, 112, 113, 114, 115, 118, 122, 124, 125, 128, 133, 134, 137, 181, 197, 198, 225, 273, 286, 295, 297, 476, 477, 482, 490, 493, 495, 497, 499, 504, 511, 514, 516, 517, 518, 521, 522, 523, 526, 527, 528, 529, 530, 531, 532, 533, 536, 538, 539, 544, 546, 548, 549, 550, 552, 553, 554, 555, 566, 568, 576, 586, 590, 593, 594, 596, 601, 602, 603, 607, 615, 617, 621, 622, 623, 624, 625, 630, 631, 632, 633, 634, 636, 637, 638, 642, 643, 645, 648, 649, 650, 651, 654, 655, 658, 659, 661, 662, 665, 667, 668, 669, 671, 672, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 687, 692, 694, 697, 698, 699, 700, 701, 703, 704, 705, 707, 708, 709, 710, 712, 713, 714, 715, 716, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 730, 732, 734, 735, 737, 742, 745, 748, 752, 755, 757, 763, 767, 770, 772, 774, 780, 782, 783, 785, 786, 937, 971, 974, 978, 986, 988, 1000, 1004, 1136, 1171, 1176, 1184], "vector": [9, 13, 110, 112, 114, 115, 128, 133, 134, 137, 197, 225, 231, 248, 274, 275, 288, 294, 295, 297, 335, 348, 495, 497, 521, 522, 538, 539, 546, 552, 553, 554, 555, 566, 584, 586, 590, 594, 596, 601, 606, 630, 632, 633, 634, 636, 639, 641, 654, 658, 672, 674, 675, 682, 683, 684, 685, 687, 693, 694, 698, 703, 704, 705, 712, 713, 714, 715, 716, 718, 738, 739, 742, 771, 780, 782, 786, 1004, 1060, 1138, 1155, 1176], "dictionari": [9, 29, 62, 94, 192, 202, 207, 208, 209, 211, 214, 215, 216, 219, 221, 225, 227, 228, 233, 237, 238, 240, 241, 243, 244, 246, 247, 249, 251, 253, 254, 257, 260, 261, 263, 264, 266, 267, 269, 272, 279, 281, 282, 284, 289, 291, 292, 296, 298, 299, 301, 302, 303, 305, 308, 309, 311, 314, 317, 320, 321, 323, 324, 325, 327, 330, 331, 333, 336, 337, 339, 342, 343, 345, 346, 347, 349, 365, 370, 373, 739, 786, 1032, 1035, 1039, 1040, 1041, 1042, 1045, 1046, 1050, 1054, 1088, 1090, 1098, 1103, 1108, 1109, 1114, 1117, 1118, 1119, 1121, 1123, 1124, 1129, 1131, 1139, 1149, 1156, 1158, 1194], "valu": [9, 58, 65, 88, 112, 128, 129, 133, 134, 140, 145, 146, 149, 170, 172, 174, 185, 187, 189, 190, 191, 203, 207, 209, 211, 213, 218, 220, 225, 226, 227, 229, 230, 231, 232, 234, 235, 237, 239, 240, 242, 243, 245, 246, 248, 250, 252, 253, 255, 258, 262, 265, 267, 268, 279, 280, 283, 286, 288, 290, 300, 303, 304, 309, 310, 322, 326, 332, 335, 337, 339, 344, 348, 351, 359, 365, 387, 392, 394, 396, 397, 407, 410, 411, 412, 420, 422, 423, 431, 433, 435, 436, 441, 452, 456, 458, 460, 464, 469, 470, 474, 477, 482, 484, 487, 492, 495, 497, 511, 512, 514, 517, 521, 523, 526, 528, 529, 531, 542, 543, 544, 546, 549, 556, 568, 585, 594, 595, 596, 599, 605, 608, 646, 648, 650, 651, 692, 694, 695, 701, 703, 712, 718, 721, 724, 725, 726, 730, 739, 750, 764, 780, 783, 785, 786, 789, 792, 811, 813, 815, 817, 833, 843, 865, 878, 929, 938, 959, 967, 969, 970, 972, 973, 974, 977, 980, 986, 989, 1000, 1001, 1004, 1005, 1024, 1026, 1028, 1031, 1035, 1039, 1041, 1043, 1050, 1061, 1062, 1063, 1071, 1073, 1076, 1078, 1079, 1083, 1088, 1091, 1096, 1098, 1101, 1108, 1110, 1131, 1134, 1136, 1139, 1142, 1143, 1149, 1150, 1153, 1154, 1155, 1171], "map": [9, 32, 34, 42, 61, 63, 110, 112, 113, 133, 134, 172, 179, 197, 203, 217, 219, 221, 225, 227, 228, 230, 231, 234, 242, 243, 245, 260, 274, 275, 277, 283, 295, 297, 304, 323, 334, 337, 338, 365, 468, 493, 497, 526, 530, 531, 532, 538, 549, 555, 584, 586, 590, 645, 648, 649, 650, 651, 654, 658, 687, 690, 694, 698, 704, 730, 749, 750, 751, 753, 785, 786, 817, 829, 991, 1000, 1001, 1049, 1053, 1062, 1063, 1082, 1138, 1188, 1198], "mathematisch": [9, 225, 283], "mengen": [9, 214, 215, 225, 1194], "while": [9, 13, 29, 53, 54, 62, 94, 118, 124, 163, 174, 176, 177, 185, 191, 202, 206, 207, 209, 210, 211, 212, 214, 215, 216, 218, 220, 221, 222, 225, 226, 227, 229, 230, 233, 234, 235, 237, 239, 240, 243, 244, 245, 248, 249, 251, 253, 254, 256, 257, 259, 260, 261, 262, 264, 266, 267, 269, 279, 282, 283, 289, 291, 292, 296, 298, 302, 303, 304, 308, 309, 310, 320, 321, 322, 324, 330, 331, 333, 336, 337, 339, 342, 343, 345, 346, 347, 349, 351, 352, 353, 354, 355, 356, 357, 365, 368, 370, 388, 390, 394, 396, 398, 405, 410, 412, 426, 427, 433, 434, 438, 440, 444, 447, 448, 451, 453, 455, 460, 462, 464, 469, 470, 480, 492, 497, 511, 518, 536, 585, 621, 625, 626, 629, 631, 633, 636, 651, 674, 680, 690, 692, 703, 718, 719, 720, 726, 730, 751, 762, 764, 780, 783, 785, 786, 810, 813, 821, 823, 833, 835, 841, 842, 848, 851, 854, 866, 870, 877, 929, 930, 937, 938, 950, 955, 956, 957, 958, 965, 974, 980, 985, 986, 989, 991, 997, 1000, 1004, 1019, 1024, 1032, 1033, 1034, 1035, 1039, 1042, 1054, 1055, 1059, 1064, 1069, 1081, 1087, 1088, 1089, 1090, 1094, 1100, 1102, 1103, 1104, 1106, 1110, 1111, 1112, 1113, 1114, 1115, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1137, 1138, 1141, 1145, 1158, 1181, 1185, 1187, 1189, 1194], "function": [9, 21, 29, 38, 50, 61, 62, 63, 82, 84, 86, 94, 101, 114, 115, 128, 129, 146, 163, 167, 170, 172, 181, 189, 202, 203, 205, 206, 207, 209, 210, 211, 212, 214, 215, 216, 218, 221, 222, 225, 227, 228, 230, 231, 233, 237, 238, 240, 241, 243, 244, 245, 246, 248, 249, 251, 253, 254, 255, 256, 259, 260, 261, 263, 264, 265, 269, 272, 273, 280, 282, 284, 286, 288, 289, 291, 292, 295, 297, 298, 299, 300, 302, 303, 305, 308, 309, 310, 316, 323, 325, 326, 333, 339, 345, 349, 350, 360, 361, 367, 368, 370, 383, 387, 388, 394, 397, 401, 402, 403, 408, 413, 417, 418, 426, 427, 428, 429, 431, 433, 438, 440, 441, 444, 445, 446, 447, 449, 451, 452, 453, 455, 460, 462, 464, 466, 469, 470, 473, 481, 487, 495, 500, 512, 533, 537, 538, 549, 552, 553, 554, 555, 557, 566, 579, 585, 590, 594, 597, 600, 602, 603, 604, 605, 611, 616, 619, 621, 635, 641, 645, 654, 657, 658, 665, 668, 671, 672, 673, 675, 676, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 692, 694, 695, 698, 699, 707, 710, 716, 718, 727, 728, 729, 730, 732, 734, 735, 740, 746, 750, 752, 753, 763, 770, 771, 772, 774, 775, 776, 783, 784, 785, 786, 797, 800, 803, 804, 810, 814, 817, 821, 824, 827, 833, 835, 837, 842, 848, 849, 851, 852, 853, 854, 863, 866, 867, 929, 937, 950, 952, 958, 959, 960, 967, 968, 970, 975, 976, 977, 983, 984, 986, 987, 990, 992, 1005, 1007, 1015, 1025, 1032, 1035, 1036, 1037, 1038, 1046, 1054, 1056, 1059, 1060, 1064, 1066, 1087, 1088, 1089, 1090, 1093, 1096, 1097, 1100, 1101, 1102, 1103, 1108, 1111, 1112, 1114, 1115, 1116, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1136, 1141, 1147, 1160, 1164, 1176, 1184, 1185, 1186, 1194], "xx": [10, 239, 270, 304, 310, 326, 332, 348], "yy": 10, "kur": [11, 23, 188, 190, 193, 205, 383, 1179, 1180, 1181, 1182, 1183, 1188, 1190, 1191, 1197, 1198, 1200], "fand": [11, 205, 383], "team": [11, 126, 129, 146, 177, 182, 185, 186, 197, 205, 206, 207, 222, 231, 256, 298, 383, 872, 878, 885, 887, 1033, 1130, 1178, 1186], "statt": [11, 23, 150, 205, 383, 1195, 1196, 1202], "wurd": [11, 179, 193, 197, 203, 205, 214, 365, 370, 383, 1183, 1194, 1195, 1201], "\u00fcber": [11, 23, 150, 178, 179, 184, 188, 189, 193, 197, 205, 214, 215, 219, 228, 233, 259, 366, 383, 1178, 1188, 1194, 1195, 1200, 1201], "meinen": [11, 23, 205, 233, 249, 261, 383], "partner": [11, 23, 205, 383, 1178], "durat": [12, 27, 175, 185, 445, 479, 549, 760, 764, 765, 1032, 1054, 1130, 1158, 1186, 1187, 1189, 1199], "each": [12, 40, 62, 80, 110, 114, 115, 134, 137, 170, 171, 172, 185, 191, 209, 210, 222, 239, 242, 245, 255, 258, 262, 295, 297, 304, 350, 356, 362, 365, 370, 438, 463, 466, 468, 492, 500, 533, 547, 548, 604, 690, 765, 771, 784, 821, 829, 833, 860, 866, 887, 891, 893, 937, 938, 939, 977, 981, 989, 1023, 1035, 1038, 1043, 1049, 1109, 1130, 1136, 1138, 1139, 1140, 1155, 1159, 1189, 1199], "about": [12, 23, 29, 30, 39, 42, 43, 44, 45, 46, 49, 62, 69, 72, 79, 84, 87, 88, 94, 101, 126, 128, 145, 146, 158, 163, 164, 166, 170, 171, 172, 174, 177, 185, 194, 198, 199, 202, 206, 207, 208, 209, 210, 211, 214, 221, 222, 227, 230, 231, 232, 233, 237, 239, 240, 243, 246, 247, 248, 249, 251, 253, 255, 256, 258, 259, 261, 263, 264, 267, 276, 279, 281, 282, 284, 285, 286, 292, 296, 297, 302, 303, 306, 308, 309, 311, 320, 321, 324, 325, 330, 331, 333, 335, 336, 339, 342, 343, 345, 346, 349, 351, 352, 353, 354, 355, 356, 365, 367, 370, 376, 406, 411, 420, 422, 450, 453, 454, 456, 462, 466, 468, 472, 486, 492, 585, 594, 595, 618, 625, 691, 700, 704, 705, 735, 739, 744, 753, 754, 784, 786, 802, 804, 833, 843, 852, 860, 861, 879, 896, 930, 937, 938, 939, 950, 954, 960, 975, 992, 1000, 1026, 1032, 1033, 1035, 1042, 1043, 1050, 1054, 1062, 1073, 1081, 1088, 1089, 1090, 1100, 1103, 1111, 1112, 1114, 1115, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1138, 1144, 1145, 1146, 1147, 1151, 1159, 1164, 1173, 1186, 1187, 1194, 1199], "book": [12, 29, 32, 166, 170, 175, 185, 186, 197, 206, 231, 253, 289, 298, 299, 383, 473, 479, 893, 1032, 1054, 1130, 1145, 1158, 1185, 1187, 1189, 1199], "separ": [12, 38, 82, 107, 108, 128, 170, 197, 199, 209, 229, 242, 248, 258, 262, 265, 268, 283, 286, 289, 290, 292, 300, 304, 312, 326, 328, 332, 338, 344, 395, 433, 454, 474, 477, 484, 496, 500, 510, 538, 539, 540, 541, 542, 543, 544, 545, 548, 568, 585, 590, 615, 736, 764, 784, 786, 801, 802, 835, 869, 873, 878, 924, 926, 929, 939, 975, 991, 1007, 1009, 1012, 1013, 1014, 1015, 1017, 1025, 1030, 1087, 1104, 1109, 1130, 1139, 1171, 1181, 1186, 1199], "requir": [12, 13, 27, 37, 39, 42, 60, 93, 112, 126, 128, 162, 166, 170, 171, 172, 175, 177, 181, 190, 198, 200, 202, 206, 210, 218, 229, 232, 243, 246, 248, 250, 255, 256, 270, 286, 295, 297, 298, 321, 376, 387, 420, 450, 452, 475, 484, 487, 495, 515, 517, 537, 546, 549, 568, 617, 630, 646, 683, 694, 700, 701, 707, 710, 715, 716, 740, 747, 776, 777, 930, 938, 939, 950, 955, 991, 993, 1000, 1019, 1024, 1032, 1045, 1054, 1055, 1073, 1082, 1083, 1086, 1139, 1145, 1158, 1159, 1164, 1166, 1167, 1173, 1185, 1187, 1189, 1199, 1202], "particip": [12, 175, 177, 199, 202, 286, 317, 533, 932, 1055, 1069, 1089, 1199], "should": [12, 37, 43, 45, 55, 57, 81, 84, 126, 129, 130, 133, 145, 146, 166, 171, 172, 175, 177, 181, 185, 192, 198, 202, 206, 231, 232, 246, 252, 258, 262, 286, 321, 324, 326, 351, 356, 371, 372, 386, 411, 433, 448, 458, 462, 472, 477, 484, 490, 495, 500, 501, 503, 504, 512, 549, 593, 600, 602, 698, 701, 703, 707, 718, 762, 792, 811, 823, 825, 829, 833, 858, 877, 893, 900, 905, 937, 938, 939, 946, 965, 981, 992, 1030, 1039, 1043, 1051, 1062, 1096, 1100, 1109, 1137, 1147, 1159, 1164, 1165, 1199], "fluent": [12, 309, 366, 367, 1131, 1199], "target": [12, 17, 40, 62, 112, 171, 173, 181, 222, 231, 313, 329, 367, 456, 459, 475, 478, 479, 485, 488, 501, 605, 786, 806, 808, 813, 833, 895, 960, 985, 1009, 1010, 1019, 1021, 1028, 1032, 1039, 1041, 1054, 1138, 1145, 1158, 1166, 1189], "audienc": [12, 170, 172, 202, 207, 324, 1032, 1054, 1086, 1145, 1158, 1184, 1189], "english": [12, 29, 110, 163, 190, 209, 216, 227, 237, 240, 249, 253, 259, 261, 264, 266, 267, 282, 289, 294, 302, 303, 308, 309, 321, 330, 331, 336, 337, 342, 343, 346, 347, 363, 364, 365, 370, 479, 786, 1032, 1054, 1090, 1100, 1103, 1104, 1106, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1129, 1130, 1144, 1145, 1158], "german": [12, 14, 479, 1032, 1054, 1130, 1144, 1145, 1147, 1158], "see": [12, 13, 23, 27, 29, 31, 42, 43, 45, 46, 50, 53, 55, 57, 62, 69, 81, 82, 89, 93, 103, 110, 126, 128, 129, 131, 133, 134, 135, 136, 137, 139, 141, 144, 145, 146, 155, 156, 158, 163, 166, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 185, 187, 190, 191, 192, 200, 202, 206, 207, 216, 221, 222, 226, 229, 231, 232, 237, 239, 242, 243, 245, 246, 248, 249, 255, 258, 262, 267, 270, 279, 283, 286, 288, 292, 294, 295, 296, 297, 299, 303, 304, 312, 313, 321, 325, 328, 329, 340, 347, 351, 356, 365, 368, 369, 371, 376, 379, 384, 387, 396, 397, 398, 400, 406, 423, 436, 442, 445, 455, 461, 474, 475, 480, 484, 485, 486, 487, 491, 492, 495, 496, 497, 505, 506, 507, 508, 509, 513, 516, 517, 533, 536, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 556, 557, 566, 567, 568, 576, 582, 585, 590, 592, 593, 594, 595, 600, 602, 603, 608, 609, 611, 626, 630, 643, 657, 661, 662, 664, 665, 677, 681, 683, 684, 686, 690, 693, 698, 700, 701, 702, 703, 705, 712, 718, 732, 733, 735, 738, 739, 740, 742, 744, 748, 749, 750, 751, 752, 753, 762, 764, 770, 772, 774, 775, 776, 777, 781, 784, 787, 789, 792, 794, 796, 797, 799, 801, 802, 804, 806, 808, 811, 813, 819, 821, 823, 825, 827, 829, 833, 836, 840, 841, 847, 849, 859, 860, 861, 865, 868, 871, 872, 889, 893, 894, 896, 897, 899, 902, 904, 920, 930, 937, 938, 939, 960, 963, 965, 966, 967, 971, 974, 976, 978, 981, 988, 1000, 1004, 1007, 1008, 1009, 1010, 1015, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1035, 1043, 1044, 1047, 1048, 1050, 1053, 1055, 1057, 1060, 1068, 1071, 1072, 1073, 1083, 1086, 1089, 1098, 1102, 1105, 1116, 1127, 1128, 1134, 1136, 1139, 1144, 1145, 1147, 1149, 1152, 1153, 1154, 1158, 1161, 1164, 1169, 1171, 1176, 1186, 1187, 1189, 1199], "also": [12, 13, 23, 27, 31, 57, 62, 69, 126, 129, 131, 134, 136, 137, 139, 141, 144, 145, 166, 171, 172, 174, 175, 177, 178, 180, 181, 182, 189, 191, 192, 193, 194, 197, 199, 200, 202, 203, 206, 212, 214, 232, 239, 245, 255, 256, 258, 262, 268, 274, 275, 277, 286, 288, 295, 296, 297, 303, 304, 313, 321, 325, 329, 351, 383, 474, 475, 480, 485, 492, 501, 511, 514, 516, 517, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 556, 557, 567, 592, 593, 594, 595, 600, 602, 608, 626, 643, 646, 661, 662, 664, 690, 698, 701, 702, 703, 705, 718, 729, 732, 735, 738, 739, 740, 742, 744, 748, 750, 753, 754, 762, 764, 770, 775, 776, 777, 784, 823, 833, 838, 859, 871, 877, 878, 893, 897, 899, 902, 904, 924, 930, 940, 949, 950, 963, 967, 971, 978, 988, 1009, 1010, 1017, 1022, 1024, 1026, 1028, 1029, 1030, 1032, 1035, 1043, 1047, 1053, 1055, 1059, 1062, 1072, 1073, 1076, 1086, 1098, 1102, 1105, 1116, 1136, 1137, 1145, 1149, 1152, 1153, 1154, 1158, 1161, 1164, 1186, 1188, 1194, 1195, 1199], "train": [12, 13, 14, 23, 29, 30, 32, 37, 65, 69, 110, 153, 165, 166, 171, 175, 182, 183, 185, 193, 194, 197, 198, 199, 202, 205, 229, 239, 245, 255, 258, 288, 295, 297, 300, 312, 328, 338, 373, 383, 475, 477, 478, 479, 480, 481, 483, 484, 486, 488, 490, 491, 492, 493, 494, 495, 497, 499, 502, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 546, 548, 551, 552, 553, 554, 556, 558, 559, 560, 561, 563, 564, 565, 566, 567, 590, 670, 750, 784, 787, 789, 792, 797, 802, 808, 811, 819, 940, 946, 948, 949, 950, 971, 974, 997, 1000, 1004, 1031, 1032, 1034, 1054, 1055, 1083, 1086, 1089, 1133, 1134, 1137, 1138, 1145, 1158, 1169, 1173, 1178, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202], "sourc": [13, 23, 28, 30, 39, 60, 69, 72, 77, 90, 114, 115, 128, 146, 169, 170, 171, 172, 175, 176, 177, 181, 185, 187, 188, 190, 191, 198, 211, 216, 221, 239, 245, 253, 255, 258, 262, 267, 275, 277, 279, 282, 283, 286, 307, 314, 428, 429, 432, 467, 476, 477, 478, 480, 481, 482, 483, 485, 486, 487, 496, 547, 550, 551, 665, 698, 701, 707, 712, 718, 748, 801, 831, 834, 845, 877, 893, 894, 926, 967, 1007, 1008, 1010, 1011, 1013, 1017, 1019, 1021, 1022, 1023, 1024, 1025, 1062, 1118, 1127, 1166, 1173, 1179, 1189, 1196], "under": [13, 21, 35, 55, 137, 141, 145, 169, 170, 172, 177, 198, 209, 211, 321, 383, 497, 512, 549, 869, 870, 937, 938, 939, 940, 941, 942, 949, 950, 992, 1007, 1031, 1038, 1045, 1079, 1164], "why": [13, 24, 28, 45, 50, 69, 70, 73, 119, 123, 124, 127, 128, 146, 166, 170, 171, 176, 182, 202, 206, 207, 209, 211, 222, 231, 251, 289, 292, 298, 299, 320, 334, 365, 368, 369, 372, 386, 398, 404, 411, 414, 432, 443, 448, 449, 454, 458, 461, 468, 473, 511, 534, 593, 608, 626, 639, 665, 668, 684, 690, 691, 707, 738, 754, 757, 771, 782, 801, 813, 829, 833, 864, 870, 873, 930, 983, 986, 1004, 1019, 1021, 1029, 1030, 1033, 1079, 1081, 1131, 1136, 1146, 1154], "appli": [13, 80, 87, 167, 172, 211, 229, 288, 294, 321, 332, 415, 450, 456, 474, 605, 705, 740, 771, 806, 833, 873, 876, 893, 937, 938, 963, 1024, 1150], "websit": [13, 23, 171, 185, 1160, 1173], "contain": [13, 17, 29, 35, 38, 60, 110, 111, 112, 114, 115, 126, 128, 166, 167, 173, 176, 181, 185, 190, 192, 197, 198, 200, 202, 203, 206, 209, 211, 229, 231, 232, 239, 245, 255, 256, 258, 262, 269, 270, 273, 274, 275, 288, 295, 304, 321, 338, 350, 351, 360, 367, 368, 374, 376, 413, 432, 446, 466, 468, 474, 476, 477, 481, 495, 511, 533, 536, 538, 547, 548, 549, 555, 556, 557, 590, 591, 593, 601, 610, 627, 630, 643, 654, 658, 672, 681, 686, 687, 693, 698, 738, 750, 753, 771, 780, 781, 782, 784, 786, 789, 794, 802, 804, 806, 827, 829, 833, 853, 860, 861, 864, 873, 875, 898, 899, 900, 905, 912, 937, 938, 939, 946, 967, 975, 976, 991, 1001, 1007, 1010, 1015, 1019, 1024, 1031, 1033, 1038, 1055, 1077, 1080, 1086, 1088, 1100, 1109, 1113, 1128, 1131, 1133, 1137, 1139, 1142, 1144, 1149, 1159, 1160, 1164, 1170, 1171, 1183, 1184], "give": [13, 27, 40, 53, 61, 63, 114, 115, 133, 163, 167, 169, 170, 172, 177, 180, 191, 194, 198, 199, 206, 211, 222, 230, 262, 267, 279, 295, 297, 325, 384, 398, 399, 414, 430, 433, 441, 466, 472, 474, 477, 492, 544, 546, 562, 579, 615, 630, 676, 684, 707, 736, 833, 859, 866, 884, 886, 938, 939, 958, 959, 971, 974, 993, 995, 1000, 1001, 1007, 1010, 1019, 1028, 1031, 1054, 1071, 1083, 1131, 1135, 1136, 1159, 1164, 1166, 1184, 1187, 1189], "structur": [13, 29, 69, 82, 93, 112, 133, 170, 185, 207, 221, 248, 249, 256, 258, 259, 261, 264, 267, 270, 273, 282, 289, 292, 299, 303, 309, 313, 314, 317, 321, 325, 329, 331, 335, 337, 343, 365, 369, 371, 373, 388, 398, 406, 411, 440, 442, 446, 447, 451, 460, 463, 464, 469, 470, 474, 475, 479, 487, 494, 512, 537, 547, 566, 615, 648, 681, 690, 692, 730, 783, 785, 786, 821, 823, 827, 831, 833, 853, 889, 920, 956, 962, 978, 983, 1001, 1071, 1073, 1113, 1119, 1156, 1158, 1165, 1172, 1184], "much": [13, 27, 35, 38, 62, 65, 84, 133, 137, 139, 144, 169, 170, 171, 172, 177, 180, 185, 194, 200, 202, 206, 207, 208, 210, 232, 243, 245, 246, 248, 250, 256, 270, 271, 274, 275, 277, 289, 292, 298, 299, 320, 321, 324, 334, 335, 368, 400, 411, 422, 458, 462, 472, 487, 512, 591, 601, 607, 626, 647, 667, 690, 691, 700, 701, 705, 718, 730, 731, 732, 736, 738, 740, 750, 754, 774, 775, 777, 785, 786, 789, 804, 811, 819, 821, 827, 829, 833, 872, 873, 922, 930, 933, 936, 938, 950, 992, 1001, 1004, 1005, 1007, 1009, 1019, 1026, 1029, 1030, 1043, 1044, 1049, 1050, 1053, 1062, 1079, 1131, 1137, 1138, 1164, 1166, 1184], "like": [13, 21, 27, 28, 30, 39, 43, 45, 55, 61, 62, 63, 69, 81, 82, 118, 124, 128, 129, 133, 134, 136, 139, 141, 144, 146, 163, 169, 170, 171, 172, 174, 175, 177, 180, 181, 185, 190, 193, 194, 198, 199, 200, 202, 206, 208, 211, 221, 222, 229, 231, 232, 239, 245, 246, 248, 249, 255, 258, 271, 273, 275, 277, 283, 286, 288, 289, 292, 295, 297, 321, 324, 348, 351, 356, 368, 376, 397, 400, 404, 426, 428, 433, 438, 450, 454, 462, 465, 472, 478, 482, 484, 487, 490, 491, 492, 512, 536, 546, 547, 548, 549, 550, 562, 568, 576, 579, 585, 594, 597, 600, 604, 605, 606, 608, 629, 646, 655, 662, 664, 667, 670, 671, 680, 681, 689, 690, 693, 694, 700, 701, 718, 736, 738, 739, 749, 750, 753, 754, 760, 775, 777, 782, 784, 787, 789, 791, 794, 802, 804, 806, 811, 817, 823, 825, 827, 829, 833, 838, 846, 849, 853, 861, 864, 865, 869, 870, 872, 875, 893, 895, 898, 900, 905, 922, 930, 931, 933, 937, 938, 939, 940, 949, 950, 954, 958, 960, 963, 967, 973, 975, 976, 994, 1001, 1005, 1007, 1009, 1010, 1023, 1026, 1028, 1030, 1033, 1035, 1043, 1048, 1053, 1055, 1057, 1059, 1061, 1063, 1067, 1071, 1073, 1076, 1077, 1080, 1083, 1085, 1088, 1096, 1099, 1109, 1110, 1113, 1119, 1120, 1121, 1122, 1123, 1125, 1130, 1133, 1136, 1138, 1139, 1147, 1149, 1150, 1155, 1164, 1165, 1166, 1171, 1173, 1184, 1189], "topic": [13, 16, 27, 28, 29, 61, 63, 73, 82, 94, 101, 110, 116, 117, 128, 149, 163, 167, 172, 176, 177, 190, 194, 207, 210, 211, 212, 214, 222, 227, 237, 240, 246, 256, 258, 259, 274, 275, 279, 297, 299, 303, 325, 351, 352, 353, 354, 356, 364, 365, 370, 371, 376, 378, 379, 382, 384, 568, 609, 611, 670, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 784, 833, 835, 845, 856, 863, 865, 867, 874, 879, 883, 885, 887, 888, 913, 923, 936, 938, 941, 942, 944, 960, 1010, 1019, 1020, 1024, 1032, 1037, 1054, 1055, 1059, 1086, 1088, 1089, 1090, 1100, 1103, 1111, 1114, 1115, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1138, 1144, 1158, 1161, 1164, 1168, 1186, 1187, 1194], "other": [13, 27, 29, 33, 39, 40, 51, 53, 61, 62, 63, 82, 84, 86, 114, 115, 126, 145, 152, 158, 170, 171, 172, 173, 174, 177, 181, 185, 194, 198, 202, 206, 207, 209, 210, 211, 222, 230, 239, 245, 246, 255, 258, 262, 283, 304, 311, 312, 321, 324, 328, 348, 351, 368, 372, 376, 396, 402, 411, 420, 438, 441, 452, 468, 472, 475, 477, 483, 484, 487, 488, 489, 495, 576, 591, 593, 594, 600, 602, 603, 606, 607, 608, 618, 646, 668, 691, 700, 701, 732, 736, 748, 750, 752, 754, 765, 766, 771, 784, 786, 804, 823, 825, 859, 866, 869, 870, 886, 891, 893, 895, 915, 932, 937, 938, 939, 942, 946, 949, 958, 959, 965, 966, 978, 983, 986, 992, 1001, 1005, 1007, 1009, 1019, 1026, 1028, 1030, 1039, 1042, 1043, 1044, 1047, 1050, 1053, 1057, 1059, 1060, 1061, 1062, 1068, 1069, 1073, 1075, 1077, 1079, 1080, 1093, 1109, 1136, 1140, 1143, 1145, 1147, 1164, 1176, 1184, 1186, 1187, 1189, 1199], "exampl": [13, 17, 24, 29, 39, 40, 69, 82, 91, 126, 128, 129, 146, 163, 164, 166, 169, 170, 171, 172, 177, 180, 181, 185, 189, 190, 191, 194, 198, 202, 206, 208, 210, 221, 229, 231, 235, 239, 242, 245, 246, 248, 254, 255, 256, 259, 260, 261, 263, 267, 270, 279, 286, 288, 289, 292, 296, 298, 299, 303, 304, 312, 314, 317, 320, 321, 324, 328, 334, 347, 353, 356, 365, 373, 376, 389, 395, 396, 397, 405, 411, 463, 475, 486, 487, 488, 495, 499, 501, 511, 512, 514, 516, 536, 537, 549, 568, 604, 606, 608, 617, 626, 633, 671, 680, 698, 707, 712, 727, 728, 732, 733, 737, 740, 744, 750, 754, 784, 786, 792, 804, 811, 833, 860, 861, 865, 870, 890, 893, 903, 915, 922, 930, 937, 938, 939, 940, 949, 953, 960, 963, 964, 965, 966, 967, 975, 982, 1001, 1004, 1006, 1007, 1008, 1009, 1010, 1011, 1017, 1023, 1024, 1025, 1026, 1029, 1030, 1031, 1035, 1042, 1049, 1052, 1054, 1055, 1056, 1058, 1066, 1071, 1080, 1086, 1088, 1104, 1109, 1127, 1128, 1129, 1137, 1138, 1144, 1146, 1152, 1153, 1158, 1163, 1171, 1173, 1186, 1187], "here": [13, 14, 62, 72, 77, 78, 81, 82, 84, 85, 89, 110, 118, 124, 126, 133, 156, 158, 167, 169, 170, 172, 173, 175, 176, 177, 180, 181, 185, 190, 192, 198, 199, 200, 202, 206, 208, 211, 221, 222, 226, 229, 230, 231, 232, 237, 240, 248, 249, 253, 256, 258, 262, 275, 277, 279, 283, 286, 288, 292, 295, 297, 304, 307, 322, 337, 340, 351, 356, 362, 365, 368, 369, 371, 384, 387, 452, 454, 461, 468, 483, 484, 490, 492, 512, 517, 528, 531, 534, 536, 547, 549, 551, 566, 568, 576, 590, 593, 594, 597, 603, 609, 611, 615, 627, 655, 661, 681, 683, 684, 690, 701, 707, 712, 718, 728, 732, 737, 740, 742, 748, 750, 753, 762, 776, 787, 801, 806, 808, 811, 823, 829, 833, 859, 893, 930, 932, 937, 938, 939, 946, 950, 957, 963, 967, 973, 978, 991, 1000, 1004, 1005, 1016, 1019, 1023, 1025, 1028, 1029, 1030, 1031, 1043, 1046, 1050, 1055, 1058, 1059, 1066, 1072, 1082, 1083, 1089, 1110, 1113, 1130, 1136, 1137, 1138, 1139, 1144, 1164, 1166, 1169, 1173, 1187, 1189], "discuss": [13, 42, 50, 128, 202, 206, 207, 209, 211, 246, 256, 292, 296, 297, 320, 335, 365, 369, 372, 373, 376, 378, 379, 383, 485, 573, 576, 579, 582, 585, 588, 758, 764, 813, 846, 893, 1000, 1004, 1033, 1171, 1173, 1176, 1187], "over": [13, 33, 34, 35, 38, 42, 60, 69, 93, 101, 133, 134, 146, 163, 166, 167, 169, 170, 172, 174, 175, 180, 190, 194, 202, 206, 208, 209, 210, 221, 226, 229, 231, 232, 239, 244, 245, 246, 248, 251, 254, 282, 286, 289, 292, 298, 299, 315, 320, 324, 335, 350, 365, 368, 411, 422, 423, 438, 452, 472, 482, 490, 500, 514, 591, 597, 625, 643, 655, 683, 690, 738, 739, 757, 780, 833, 930, 934, 938, 940, 946, 967, 981, 989, 992, 1007, 1019, 1021, 1026, 1029, 1066, 1079, 1083], "lwn": [13, 39, 187, 813, 825, 843, 1179], "attribut": [13, 124, 167, 170, 172, 187, 206, 220, 226, 230, 239, 242, 245, 250, 252, 257, 258, 262, 265, 268, 272, 273, 280, 283, 287, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 358, 360, 369, 376, 450, 466, 468, 480, 495, 762, 784, 865, 871, 892, 896, 963, 975, 976, 993, 994, 1001, 1005, 1029, 1030, 1043, 1045, 1056, 1082, 1136, 1200], "sharealik": 13, "cc": [13, 23, 32, 152, 188, 196, 197, 198, 275, 475, 497, 546, 548, 549, 569, 572, 575, 576, 578, 579, 581, 582, 584, 585, 587, 610, 748, 749, 754, 811, 999, 1000, 1003, 1004, 1009, 1170, 1171, 1173, 1175, 1176], "BY": [13, 23, 35, 718], "sa": [13, 23, 32, 991], "don": [13, 24, 58, 60, 82, 88, 128, 133, 141, 158, 163, 169, 170, 171, 172, 175, 176, 177, 185, 200, 202, 206, 210, 221, 222, 232, 239, 243, 245, 246, 248, 255, 258, 310, 322, 373, 397, 438, 450, 453, 454, 456, 462, 468, 472, 474, 491, 548, 576, 582, 591, 592, 607, 608, 615, 625, 661, 668, 698, 701, 703, 718, 732, 733, 745, 754, 759, 764, 801, 806, 825, 833, 838, 868, 893, 895, 900, 906, 917, 930, 933, 937, 938, 942, 950, 954, 955, 956, 957, 976, 977, 978, 983, 1004, 1005, 1010, 1031, 1039, 1041, 1055, 1058, 1062, 1086, 1140, 1146, 1153, 1159, 1170, 1176], "t": [13, 24, 43, 50, 58, 60, 62, 69, 82, 88, 128, 133, 141, 145, 158, 163, 167, 169, 171, 172, 175, 176, 177, 180, 181, 185, 187, 189, 200, 202, 203, 206, 209, 210, 213, 218, 220, 221, 222, 226, 232, 235, 239, 242, 243, 245, 246, 248, 250, 252, 255, 256, 258, 262, 265, 268, 271, 277, 280, 283, 288, 289, 290, 292, 294, 300, 304, 310, 322, 325, 326, 332, 338, 344, 348, 351, 357, 359, 360, 362, 373, 385, 387, 388, 390, 396, 397, 407, 422, 428, 430, 433, 438, 448, 450, 452, 453, 454, 456, 462, 468, 472, 474, 477, 491, 544, 546, 548, 568, 576, 582, 591, 592, 594, 601, 607, 608, 615, 617, 618, 625, 629, 661, 668, 690, 691, 693, 698, 700, 701, 703, 707, 708, 709, 710, 718, 721, 732, 733, 738, 744, 745, 748, 749, 750, 752, 754, 757, 759, 762, 764, 792, 801, 806, 813, 825, 827, 833, 838, 850, 853, 859, 860, 861, 868, 870, 893, 894, 895, 899, 900, 906, 912, 915, 917, 930, 933, 937, 938, 939, 942, 946, 950, 954, 955, 956, 957, 964, 976, 977, 978, 983, 993, 1000, 1001, 1004, 1005, 1007, 1008, 1010, 1019, 1022, 1025, 1031, 1032, 1039, 1041, 1043, 1055, 1058, 1061, 1062, 1063, 1069, 1075, 1079, 1081, 1082, 1083, 1086, 1088, 1135, 1140, 1144, 1146, 1153, 1159, 1170, 1171, 1176, 1186], "want": [13, 17, 27, 29, 30, 45, 50, 60, 62, 82, 88, 129, 134, 139, 141, 145, 152, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 185, 190, 193, 198, 202, 206, 209, 210, 221, 222, 229, 232, 239, 246, 250, 252, 286, 288, 289, 292, 314, 351, 362, 376, 398, 410, 426, 454, 466, 468, 472, 476, 477, 492, 495, 516, 535, 544, 549, 568, 579, 592, 597, 600, 608, 633, 668, 684, 698, 703, 718, 739, 744, 750, 752, 753, 754, 772, 784, 789, 808, 833, 838, 868, 870, 872, 875, 890, 893, 894, 912, 930, 933, 937, 938, 939, 950, 954, 955, 956, 957, 962, 976, 991, 993, 994, 995, 1004, 1007, 1009, 1019, 1021, 1023, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1034, 1038, 1045, 1050, 1054, 1061, 1070, 1073, 1083, 1087, 1089, 1125, 1130, 1140, 1144, 1145, 1147, 1149, 1153, 1164, 1166, 1167, 1171, 1184, 1189], "anybodi": [13, 69, 170, 175, 202, 221, 222, 455, 965, 976, 1176], "monei": [13, 171, 174, 177, 245, 872, 1088], "my": [13, 17, 24, 28, 32, 39, 61, 62, 63, 69, 101, 126, 152, 158, 167, 169, 170, 171, 173, 174, 176, 177, 180, 181, 185, 198, 202, 206, 209, 222, 229, 256, 270, 272, 286, 296, 338, 362, 365, 370, 383, 462, 473, 495, 549, 585, 603, 614, 668, 750, 771, 784, 817, 829, 833, 835, 861, 868, 883, 885, 890, 896, 917, 930, 937, 939, 941, 942, 949, 950, 955, 956, 957, 966, 1001, 1031, 1034, 1043, 1062, 1085, 1125, 1147, 1152, 1153, 1164, 1184], "without": [13, 123, 169, 170, 171, 172, 180, 181, 206, 250, 314, 335, 398, 422, 429, 455, 458, 462, 467, 472, 483, 495, 500, 512, 579, 585, 591, 597, 661, 668, 690, 691, 692, 718, 730, 736, 738, 739, 744, 750, 756, 757, 764, 783, 785, 786, 804, 817, 833, 872, 873, 915, 939, 941, 950, 976, 995, 1000, 1001, 1005, 1028, 1029, 1032, 1033, 1035, 1042, 1043, 1044, 1046, 1048, 1050, 1057, 1062, 1079, 1164, 1166, 1184, 1189], "modif": [13, 55, 110, 146, 185, 248, 398, 400, 406, 411, 442, 472, 495, 500, 547, 605, 765, 784, 806, 833, 878, 894, 915, 1042, 1062, 1079, 1140, 1176], "back": [13, 29, 32, 62, 70, 126, 171, 172, 175, 181, 206, 208, 210, 235, 243, 248, 259, 261, 279, 294, 314, 317, 448, 463, 514, 539, 568, 588, 608, 622, 627, 665, 698, 712, 747, 754, 766, 786, 801, 806, 815, 833, 835, 864, 896, 930, 937, 950, 991, 1001, 1007, 1026, 1033, 1046, 1050, 1062, 1090, 1124, 1125, 1126, 1129, 1155], "m": [13, 23, 32, 38, 60, 65, 154, 156, 171, 172, 173, 175, 177, 180, 185, 198, 203, 208, 213, 222, 226, 235, 236, 237, 239, 243, 258, 262, 268, 270, 275, 287, 322, 332, 348, 361, 365, 366, 367, 372, 386, 474, 497, 543, 546, 547, 548, 549, 585, 610, 718, 740, 749, 801, 802, 808, 811, 843, 870, 872, 893, 937, 950, 995, 1048, 1085, 1086, 1093, 1118, 1119, 1136, 1146, 1159, 1164, 1166, 1171], "lawyer": 13, "understand": [13, 128, 169, 170, 172, 176, 177, 180, 181, 185, 194, 202, 206, 231, 258, 289, 292, 295, 297, 298, 299, 314, 317, 320, 324, 367, 376, 404, 452, 461, 468, 500, 536, 677, 698, 707, 728, 739, 833, 872, 878, 930, 1050, 1088, 1131, 1136, 1137, 1154, 1184, 1185, 1186], "permit": [13, 172, 177, 222, 286, 362, 573, 594, 601, 937, 948, 992, 1056, 1156], "exactli": [13, 82, 170, 172, 194, 200, 229, 299, 356, 390, 430, 536, 547, 625, 701, 738, 833, 939, 964, 965, 1005, 1023, 1139, 1158], "gnu": [13, 181, 186, 222, 231, 362, 368, 384, 469, 470, 475, 477, 600, 749, 786, 813, 834, 893, 1008, 1009, 1019, 1021, 1023, 1182, 1186], "free": [13, 32, 176, 181, 197, 222, 362, 445, 459, 497, 574, 594, 600, 602, 662, 681, 682, 684, 685, 701, 728, 747, 748, 749, 769, 797, 804, 835, 955, 956, 957, 969, 992, 1005, 1007, 1137, 1147, 1156, 1181], "document": [13, 24, 40, 42, 69, 82, 90, 128, 133, 167, 170, 172, 174, 181, 182, 188, 191, 198, 210, 222, 228, 229, 237, 239, 244, 245, 246, 248, 255, 258, 262, 275, 277, 279, 288, 295, 297, 300, 321, 323, 341, 348, 351, 356, 365, 372, 373, 448, 449, 452, 459, 475, 476, 477, 478, 480, 483, 484, 485, 486, 487, 488, 500, 547, 566, 607, 611, 625, 626, 670, 681, 683, 693, 698, 705, 707, 712, 728, 729, 735, 737, 740, 742, 749, 750, 751, 753, 760, 761, 762, 764, 766, 780, 784, 804, 806, 829, 833, 834, 841, 845, 859, 865, 872, 879, 883, 885, 887, 917, 918, 919, 921, 922, 924, 925, 933, 937, 938, 939, 973, 980, 988, 1021, 1023, 1024, 1028, 1030, 1031, 1035, 1039, 1041, 1043, 1049, 1066, 1076, 1077, 1127, 1139, 1142, 1149, 1150, 1153, 1155, 1162, 1165, 1172, 1173, 1192, 1193], "ago": [13, 172, 176, 232, 858], "wa": [13, 37, 53, 69, 82, 126, 134, 141, 146, 166, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 185, 187, 189, 190, 191, 193, 197, 198, 203, 205, 206, 209, 213, 219, 220, 226, 229, 232, 235, 236, 246, 248, 250, 252, 259, 262, 271, 283, 290, 296, 299, 304, 322, 334, 338, 365, 370, 383, 386, 433, 458, 478, 582, 590, 591, 600, 601, 646, 675, 682, 683, 684, 685, 686, 687, 694, 698, 701, 756, 784, 786, 808, 815, 823, 829, 868, 890, 920, 922, 930, 939, 966, 986, 1005, 1030, 1062, 1136, 1150, 1153, 1159, 1164, 1166, 1169, 1179, 1181, 1182, 1183, 1184, 1196, 1202], "debian": [13, 82, 158, 159, 160, 177, 181, 185, 187, 199, 210, 222, 307, 362, 383, 562, 786, 833, 932, 1009, 1021, 1166, 1171], "resolut": [13, 260, 262, 455, 703, 765, 811, 843, 939], "us": [13, 14, 17, 21, 24, 39, 40, 45, 48, 54, 60, 61, 62, 63, 65, 69, 72, 74, 75, 78, 81, 82, 85, 86, 88, 89, 90, 92, 93, 101, 110, 111, 128, 129, 130, 132, 133, 134, 135, 136, 139, 141, 144, 145, 146, 149, 162, 163, 165, 166, 167, 169, 170, 172, 173, 176, 180, 182, 185, 187, 190, 194, 196, 197, 199, 202, 206, 208, 209, 221, 222, 227, 230, 237, 239, 240, 242, 243, 246, 247, 249, 253, 255, 256, 258, 262, 265, 267, 268, 270, 275, 277, 279, 283, 286, 288, 289, 290, 292, 294, 295, 296, 297, 298, 299, 300, 303, 304, 309, 312, 317, 320, 321, 324, 325, 326, 328, 332, 334, 335, 338, 344, 350, 351, 356, 362, 365, 368, 370, 371, 374, 383, 394, 397, 398, 401, 402, 403, 406, 408, 417, 418, 420, 422, 423, 427, 428, 429, 432, 433, 434, 436, 440, 441, 444, 447, 451, 455, 456, 460, 462, 463, 464, 468, 469, 470, 472, 474, 475, 477, 482, 483, 484, 485, 488, 490, 491, 493, 494, 497, 500, 501, 502, 504, 511, 514, 515, 516, 534, 536, 537, 539, 540, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 562, 566, 567, 568, 569, 572, 575, 578, 581, 584, 587, 592, 594, 595, 599, 600, 603, 605, 607, 608, 609, 611, 612, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 634, 637, 638, 639, 643, 646, 647, 648, 649, 650, 651, 655, 661, 664, 665, 667, 668, 671, 672, 674, 675, 677, 679, 680, 681, 682, 683, 684, 685, 687, 689, 690, 692, 693, 694, 695, 697, 699, 701, 705, 707, 712, 718, 720, 727, 728, 730, 732, 733, 735, 737, 740, 745, 749, 750, 751, 752, 754, 756, 760, 762, 765, 770, 771, 780, 783, 784, 785, 786, 791, 792, 794, 796, 799, 801, 802, 804, 806, 808, 811, 813, 817, 819, 821, 825, 827, 829, 833, 834, 836, 838, 846, 847, 849, 852, 853, 859, 860, 861, 864, 868, 869, 872, 873, 875, 877, 879, 885, 890, 893, 895, 898, 899, 900, 902, 912, 918, 920, 924, 929, 930, 933, 934, 936, 940, 941, 942, 949, 950, 953, 959, 960, 963, 964, 965, 967, 971, 973, 974, 976, 978, 979, 980, 982, 983, 986, 988, 989, 992, 993, 996, 999, 1000, 1001, 1003, 1004, 1005, 1007, 1010, 1017, 1018, 1021, 1022, 1023, 1024, 1025, 1029, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1042, 1043, 1048, 1050, 1052, 1054, 1055, 1056, 1058, 1062, 1064, 1066, 1070, 1071, 1072, 1073, 1076, 1079, 1081, 1083, 1086, 1088, 1091, 1092, 1093, 1096, 1097, 1098, 1102, 1104, 1107, 1108, 1109, 1110, 1114, 1116, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1130, 1131, 1133, 1134, 1136, 1137, 1138, 1139, 1140, 1143, 1144, 1147, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1164, 1167, 1170, 1171, 1173, 1175, 1176, 1184, 1186, 1187, 1189], "gfdl": 13, "becaus": [13, 17, 38, 60, 70, 84, 126, 164, 169, 170, 172, 181, 185, 194, 202, 206, 208, 222, 232, 239, 245, 255, 258, 390, 411, 450, 459, 462, 465, 472, 474, 483, 492, 495, 512, 546, 549, 592, 593, 600, 603, 643, 665, 684, 740, 748, 751, 802, 813, 831, 833, 872, 912, 930, 937, 938, 939, 948, 959, 960, 963, 966, 980, 986, 1001, 1004, 1005, 1028, 1031, 1057, 1087, 1144, 1159, 1166, 1171, 1184], "too": [13, 27, 53, 56, 62, 84, 141, 170, 172, 177, 186, 199, 202, 218, 229, 231, 248, 258, 262, 265, 274, 275, 277, 288, 290, 298, 299, 304, 320, 322, 334, 335, 407, 452, 462, 472, 486, 492, 591, 605, 712, 714, 718, 730, 731, 732, 738, 744, 750, 774, 784, 785, 786, 831, 833, 838, 865, 930, 939, 940, 946, 963, 976, 993, 1009, 1028, 1029, 1030, 1033, 1079, 1083, 1160, 1184], "restrict": [13, 171, 200, 210, 450, 455, 484, 492, 499, 534, 615, 784, 831, 860, 861, 949, 1144], "articl": [13, 185, 187, 813, 825, 843, 937, 939, 1019], "describ": [13, 69, 111, 128, 130, 132, 167, 169, 170, 171, 172, 175, 177, 180, 181, 196, 222, 258, 262, 270, 296, 304, 307, 362, 495, 504, 550, 569, 572, 575, 578, 581, 584, 587, 740, 754, 833, 843, 866, 893, 939, 944, 996, 999, 1003, 1008, 1016, 1022, 1023, 1052, 1136, 1170, 1173, 1175], "pretti": [13, 171, 172, 194, 208, 212, 231, 248, 258, 462, 477, 625, 682, 757, 1026, 1156], "same": [13, 17, 24, 28, 31, 39, 40, 43, 44, 69, 133, 146, 170, 171, 172, 174, 176, 177, 180, 181, 185, 190, 191, 192, 194, 202, 203, 208, 211, 222, 230, 234, 239, 245, 248, 255, 256, 258, 261, 262, 280, 289, 292, 298, 299, 304, 320, 321, 322, 332, 348, 352, 353, 362, 369, 394, 398, 409, 410, 411, 428, 429, 433, 438, 441, 450, 452, 456, 458, 462, 463, 466, 467, 477, 495, 499, 502, 503, 514, 533, 534, 542, 546, 566, 568, 575, 577, 591, 594, 600, 603, 606, 625, 628, 634, 643, 646, 647, 648, 672, 683, 691, 696, 703, 705, 707, 710, 712, 736, 737, 740, 752, 753, 754, 760, 801, 802, 806, 811, 813, 815, 823, 825, 831, 833, 849, 865, 871, 877, 893, 894, 896, 920, 930, 937, 938, 939, 940, 949, 950, 956, 962, 976, 977, 978, 991, 995, 1001, 1005, 1007, 1023, 1029, 1030, 1033, 1038, 1039, 1042, 1044, 1048, 1050, 1066, 1068, 1071, 1076, 1078, 1079, 1080, 1113, 1121, 1123, 1137, 1139, 1140, 1143, 1144, 1147, 1149, 1152, 1153, 1154, 1164, 1166, 1171], "issu": [13, 170, 173, 180, 181, 232, 297, 298, 299, 320, 335, 338, 385, 398, 456, 969, 995, 1004, 1021, 1039], "how": [13, 23, 24, 37, 42, 45, 50, 69, 74, 75, 79, 81, 82, 85, 86, 88, 89, 90, 91, 92, 95, 108, 126, 128, 133, 140, 141, 156, 158, 166, 167, 170, 173, 175, 176, 177, 181, 182, 185, 190, 192, 194, 198, 199, 205, 206, 207, 208, 209, 210, 211, 222, 227, 229, 230, 231, 237, 239, 240, 242, 243, 245, 246, 248, 251, 253, 256, 267, 270, 274, 275, 279, 286, 289, 292, 294, 295, 296, 297, 298, 299, 303, 309, 312, 314, 320, 321, 324, 325, 328, 351, 367, 368, 372, 383, 398, 404, 429, 436, 438, 439, 450, 452, 454, 456, 461, 465, 472, 474, 476, 483, 497, 503, 533, 536, 544, 547, 568, 585, 592, 600, 601, 604, 615, 625, 664, 668, 674, 684, 690, 712, 749, 752, 753, 754, 764, 768, 780, 781, 787, 794, 796, 797, 811, 823, 833, 838, 849, 860, 861, 866, 873, 893, 912, 920, 926, 930, 937, 938, 939, 947, 955, 956, 957, 960, 963, 966, 967, 973, 986, 989, 992, 993, 995, 1000, 1004, 1005, 1017, 1019, 1021, 1023, 1036, 1037, 1054, 1055, 1058, 1072, 1075, 1089, 1127, 1128, 1131, 1136, 1137, 1150, 1152, 1153, 1156, 1164, 1167, 1173, 1176, 1186, 1187, 1189], "do": [13, 27, 32, 40, 43, 45, 50, 58, 61, 62, 63, 65, 82, 87, 89, 93, 95, 101, 128, 129, 136, 141, 145, 146, 153, 169, 170, 171, 172, 173, 174, 175, 176, 177, 181, 185, 186, 187, 189, 190, 191, 194, 198, 199, 202, 206, 207, 210, 220, 221, 222, 230, 232, 239, 242, 246, 248, 250, 252, 253, 256, 258, 261, 262, 268, 270, 272, 275, 277, 286, 289, 292, 321, 322, 351, 353, 360, 362, 365, 367, 401, 420, 422, 423, 425, 426, 427, 432, 433, 434, 440, 441, 444, 447, 450, 451, 458, 460, 464, 469, 470, 472, 474, 476, 492, 497, 500, 503, 511, 512, 533, 535, 547, 568, 576, 582, 585, 591, 593, 605, 609, 611, 612, 615, 652, 665, 668, 682, 683, 684, 692, 698, 703, 707, 729, 730, 736, 740, 742, 748, 749, 750, 752, 753, 754, 782, 783, 785, 786, 806, 810, 821, 825, 829, 831, 833, 858, 862, 863, 866, 870, 873, 877, 878, 887, 889, 894, 898, 900, 929, 930, 933, 937, 938, 939, 941, 942, 948, 950, 954, 955, 956, 957, 958, 959, 965, 976, 977, 979, 983, 989, 991, 992, 995, 997, 1000, 1005, 1023, 1024, 1026, 1028, 1030, 1031, 1032, 1035, 1044, 1054, 1055, 1056, 1059, 1062, 1066, 1072, 1073, 1086, 1088, 1107, 1131, 1137, 1138, 1145, 1146, 1153, 1156, 1164, 1171, 1173, 1189], "choos": [13, 27, 169, 170, 181, 194, 202, 585, 833, 930, 937, 939, 1022, 1055, 1062, 1075, 1137, 1144, 1166], "altogeth": [13, 180, 229, 298, 299, 320, 701, 841, 1033], "have": [13, 27, 28, 30, 37, 43, 50, 69, 73, 84, 86, 88, 106, 114, 115, 128, 129, 133, 137, 141, 144, 146, 152, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 185, 190, 191, 192, 194, 198, 199, 200, 202, 206, 209, 210, 221, 222, 227, 229, 230, 231, 232, 239, 242, 243, 245, 246, 253, 258, 262, 265, 275, 277, 279, 286, 288, 289, 292, 295, 296, 298, 299, 303, 304, 324, 325, 351, 356, 365, 368, 370, 397, 398, 402, 411, 430, 432, 452, 454, 457, 458, 462, 466, 468, 473, 475, 478, 482, 483, 487, 490, 491, 492, 496, 499, 500, 512, 533, 536, 546, 549, 558, 585, 591, 595, 599, 601, 603, 608, 609, 611, 612, 643, 649, 665, 672, 677, 683, 684, 685, 689, 690, 694, 702, 705, 707, 718, 727, 732, 736, 737, 739, 742, 745, 749, 750, 753, 754, 781, 797, 801, 802, 804, 806, 811, 813, 825, 833, 836, 841, 849, 858, 866, 870, 872, 875, 876, 878, 885, 900, 920, 930, 937, 938, 939, 940, 942, 946, 948, 950, 954, 955, 957, 962, 967, 969, 975, 983, 1000, 1004, 1005, 1008, 1009, 1017, 1021, 1022, 1025, 1026, 1028, 1031, 1039, 1043, 1044, 1048, 1058, 1061, 1062, 1066, 1073, 1080, 1091, 1095, 1105, 1110, 1126, 1131, 1136, 1138, 1139, 1140, 1144, 1147, 1149, 1153, 1156, 1159, 1164, 1166, 1171, 1173, 1186, 1187], "idea": [13, 14, 140, 169, 170, 230, 243, 252, 262, 295, 297, 298, 299, 314, 317, 324, 456, 680, 702, 740, 748, 768, 833, 930, 965, 975, 995, 1019, 1030, 1054, 1062, 1189], "choosealicens": 13, "appear": [13, 126, 170, 171, 172, 173, 174, 175, 176, 177, 180, 190, 194, 198, 200, 202, 203, 222, 231, 258, 298, 299, 320, 387, 430, 433, 477, 478, 495, 566, 607, 750, 771, 829, 833, 841, 857, 937, 938, 939, 950, 1008, 1030, 1102, 1103, 1113, 1122, 1148, 1153], "help": [13, 29, 130, 169, 170, 172, 173, 181, 185, 203, 222, 226, 231, 239, 245, 250, 252, 255, 258, 262, 265, 268, 270, 283, 290, 295, 299, 304, 322, 326, 332, 338, 344, 348, 356, 360, 365, 383, 433, 454, 456, 458, 459, 468, 477, 594, 597, 603, 690, 703, 738, 748, 750, 804, 872, 932, 937, 1022, 1054, 1057, 1083, 1086, 1156, 1164, 1171, 1186], "happen": [13, 27, 114, 115, 126, 129, 145, 169, 170, 172, 185, 202, 206, 210, 229, 248, 312, 328, 370, 438, 450, 454, 458, 472, 477, 597, 614, 686, 718, 732, 735, 757, 796, 829, 833, 850, 865, 866, 870, 939, 963, 965, 975, 980, 1004, 1042, 1043, 1082, 1096, 1099, 1113, 1130, 1136, 1164, 1173, 1186], "clone": [13, 60, 81, 113, 128, 152, 162, 172, 173, 176, 197, 199, 202, 219, 231, 232, 248, 275, 277, 307, 314, 317, 365, 370, 533, 536, 610, 806, 833, 834, 937, 1021, 1022], "jfasch": [13, 40, 43, 60, 110, 126, 128, 146, 152, 166, 167, 173, 174, 175, 180, 181, 185, 189, 198, 199, 200, 203, 206, 219, 229, 239, 242, 245, 246, 248, 250, 255, 258, 265, 268, 270, 275, 277, 283, 286, 288, 289, 290, 295, 296, 297, 299, 300, 303, 304, 309, 313, 314, 317, 321, 325, 326, 329, 331, 332, 335, 337, 338, 343, 344, 347, 364, 365, 370, 373, 475, 477, 478, 480, 481, 483, 484, 486, 488, 497, 533, 547, 548, 549, 550, 568, 610, 670, 748, 749, 750, 784, 806, 808, 833, 859, 860, 861, 864, 865, 868, 870, 875, 878, 889, 894, 895, 896, 912, 915, 917, 918, 922, 924, 926, 937, 940, 948, 949, 950, 955, 961, 963, 964, 965, 986, 991, 1007, 1008, 1009, 1010, 1019, 1021, 1022, 1023, 1024, 1025, 1028, 1030, 1031, 1034, 1058, 1077, 1083, 1086, 1109, 1152, 1153, 1164, 1166], "home": [13, 32, 40, 42, 43, 50, 60, 69, 104, 126, 152, 166, 167, 171, 173, 174, 175, 177, 181, 185, 198, 199, 200, 203, 222, 229, 239, 242, 243, 245, 250, 255, 258, 265, 268, 270, 275, 277, 283, 286, 288, 290, 300, 304, 326, 332, 338, 344, 373, 468, 475, 477, 478, 480, 481, 483, 484, 486, 488, 497, 547, 548, 549, 550, 610, 670, 703, 748, 749, 750, 784, 786, 808, 833, 859, 860, 861, 863, 868, 870, 872, 873, 875, 878, 883, 885, 887, 889, 890, 893, 894, 896, 897, 898, 899, 900, 904, 907, 910, 913, 915, 917, 918, 924, 929, 940, 941, 946, 948, 949, 986, 988, 1004, 1007, 1008, 1009, 1019, 1021, 1022, 1023, 1024, 1025, 1028, 1031, 1034, 1083, 1109, 1118, 1152, 1153, 1164, 1166], "built": [13, 28, 128, 135, 169, 170, 172, 173, 176, 181, 198, 203, 205, 206, 214, 215, 227, 230, 239, 245, 250, 253, 255, 256, 258, 262, 270, 279, 283, 286, 288, 303, 312, 321, 325, 328, 332, 338, 348, 400, 404, 428, 449, 475, 483, 486, 487, 511, 533, 646, 703, 759, 764, 802, 806, 808, 833, 937, 939, 950, 1008, 1009, 1010, 1015, 1023, 1028, 1031, 1035, 1051, 1066, 1082, 1131, 1137, 1138, 1155, 1164, 1166, 1167, 1182, 1186, 1194], "wonder": [13, 801, 819, 846, 1033], "gener": [13, 23, 24, 29, 39, 69, 72, 73, 82, 84, 85, 113, 114, 115, 163, 167, 170, 174, 177, 182, 189, 192, 202, 206, 207, 209, 210, 211, 212, 221, 229, 237, 238, 239, 243, 244, 246, 247, 248, 249, 251, 253, 254, 255, 259, 260, 261, 262, 267, 268, 282, 284, 288, 297, 302, 304, 308, 309, 311, 323, 325, 330, 331, 333, 335, 336, 337, 339, 342, 343, 344, 346, 347, 348, 368, 371, 388, 398, 400, 406, 411, 422, 432, 450, 456, 459, 461, 462, 465, 475, 476, 477, 481, 536, 538, 544, 547, 555, 590, 597, 601, 617, 625, 626, 629, 680, 698, 701, 728, 742, 748, 754, 762, 813, 815, 817, 836, 866, 877, 893, 930, 932, 937, 950, 975, 1004, 1005, 1007, 1010, 1021, 1022, 1028, 1029, 1030, 1032, 1050, 1056, 1058, 1059, 1060, 1066, 1070, 1087, 1088, 1089, 1090, 1103, 1129, 1131, 1138, 1140, 1141, 1143, 1144, 1153, 1159, 1164, 1187, 1188, 1195], "content": [13, 27, 39, 49, 50, 57, 62, 126, 202, 209, 210, 211, 222, 230, 248, 250, 258, 280, 286, 326, 357, 432, 435, 437, 550, 593, 643, 651, 739, 835, 838, 859, 860, 861, 875, 878, 880, 881, 915, 918, 926, 938, 942, 965, 1007, 1062, 1081, 1087, 1100, 1130, 1150, 1166, 1199], "which": [13, 14, 17, 28, 57, 65, 72, 82, 84, 87, 93, 114, 115, 118, 119, 123, 124, 127, 129, 145, 155, 162, 163, 166, 167, 169, 170, 171, 172, 173, 175, 176, 177, 181, 185, 190, 192, 198, 199, 200, 202, 206, 208, 210, 222, 229, 231, 239, 243, 245, 246, 258, 261, 262, 270, 271, 288, 289, 292, 294, 299, 304, 317, 321, 334, 383, 401, 406, 407, 413, 417, 438, 450, 462, 472, 473, 474, 475, 477, 480, 482, 483, 490, 492, 503, 533, 534, 535, 536, 539, 541, 542, 543, 544, 545, 547, 562, 573, 579, 592, 599, 601, 605, 607, 615, 662, 672, 676, 677, 683, 684, 686, 695, 701, 702, 740, 744, 745, 753, 754, 766, 774, 782, 784, 786, 802, 811, 833, 835, 853, 859, 866, 870, 872, 875, 876, 877, 878, 884, 886, 889, 893, 906, 917, 920, 929, 930, 933, 937, 938, 939, 950, 959, 960, 963, 965, 967, 968, 970, 975, 980, 987, 989, 991, 992, 1000, 1005, 1008, 1013, 1021, 1025, 1028, 1030, 1032, 1042, 1043, 1047, 1055, 1059, 1062, 1071, 1102, 1121, 1123, 1126, 1128, 1144, 1146, 1147, 1149, 1152, 1166, 1171, 1184], "differ": [13, 35, 38, 61, 63, 73, 80, 85, 89, 92, 157, 169, 170, 175, 177, 181, 191, 198, 202, 206, 218, 242, 243, 286, 288, 294, 295, 297, 304, 322, 334, 351, 386, 398, 406, 411, 412, 428, 429, 432, 450, 456, 458, 462, 472, 474, 491, 492, 536, 547, 549, 568, 575, 576, 585, 594, 595, 599, 605, 607, 608, 617, 621, 626, 665, 668, 672, 694, 707, 710, 737, 752, 765, 770, 784, 806, 811, 825, 831, 833, 853, 858, 864, 868, 869, 871, 890, 915, 930, 933, 937, 939, 946, 957, 965, 967, 980, 989, 991, 992, 1012, 1017, 1022, 1024, 1025, 1030, 1043, 1050, 1058, 1071, 1075, 1080, 1081, 1082, 1140, 1149, 1166, 1167, 1187, 1189], "so": [13, 17, 23, 32, 37, 39, 49, 55, 65, 70, 126, 129, 134, 146, 157, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 189, 190, 191, 192, 193, 194, 198, 199, 200, 202, 203, 214, 215, 220, 228, 230, 231, 232, 241, 242, 243, 272, 286, 294, 296, 300, 312, 324, 328, 338, 344, 348, 351, 360, 365, 368, 383, 397, 401, 402, 410, 412, 428, 438, 439, 441, 450, 454, 456, 458, 459, 463, 473, 475, 478, 480, 485, 486, 490, 512, 514, 533, 549, 562, 601, 608, 612, 625, 648, 655, 664, 671, 680, 729, 739, 744, 747, 748, 750, 765, 792, 794, 797, 802, 806, 808, 811, 833, 846, 858, 872, 873, 875, 877, 883, 885, 887, 893, 897, 904, 930, 936, 937, 938, 939, 942, 944, 946, 954, 957, 960, 965, 967, 975, 993, 995, 1004, 1007, 1008, 1009, 1010, 1021, 1023, 1024, 1033, 1034, 1038, 1050, 1055, 1057, 1062, 1079, 1081, 1083, 1085, 1095, 1099, 1105, 1109, 1136, 1139, 1147, 1154, 1157, 1164, 1166, 1170, 1171, 1173, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1186, 1188, 1194, 1197, 1202], "ye": [13, 32, 50, 60, 118, 121, 172, 173, 176, 181, 222, 362, 648, 757, 860, 861, 878, 880, 881, 939, 950, 1007, 1075, 1108], "realli": [13, 21, 43, 50, 53, 55, 56, 69, 146, 171, 172, 173, 175, 177, 191, 202, 206, 209, 491, 707, 744, 754, 766, 786, 825, 938, 939, 950, 973, 1131, 1138, 1144], "great": [13, 82, 175, 177, 232, 252, 262, 472, 591, 606, 762, 833, 938, 1184, 1189], "static": [13, 23, 69, 101, 107, 108, 114, 115, 128, 170, 172, 174, 176, 177, 187, 197, 231, 232, 239, 245, 248, 255, 258, 262, 286, 295, 297, 304, 365, 371, 434, 440, 444, 447, 449, 451, 458, 460, 462, 464, 469, 470, 475, 480, 481, 485, 487, 496, 510, 518, 530, 531, 532, 533, 534, 538, 539, 540, 541, 542, 543, 544, 545, 548, 555, 557, 576, 585, 590, 594, 597, 608, 613, 616, 619, 635, 639, 641, 645, 654, 657, 658, 675, 682, 683, 684, 685, 686, 687, 692, 701, 730, 732, 734, 735, 739, 750, 753, 759, 764, 770, 771, 772, 774, 775, 776, 777, 783, 784, 785, 786, 792, 811, 829, 833, 835, 929, 975, 978, 980, 982, 991, 997, 1004, 1008, 1009, 1010, 1012, 1013, 1014, 1015, 1017, 1142, 1176, 1179, 1181, 1182, 1183], "It": [13, 21, 39, 43, 45, 55, 61, 63, 65, 82, 134, 141, 145, 158, 169, 170, 171, 172, 175, 176, 177, 180, 181, 190, 192, 194, 198, 199, 203, 208, 209, 222, 231, 232, 239, 245, 248, 255, 258, 262, 270, 275, 277, 286, 289, 292, 295, 321, 334, 378, 379, 395, 406, 410, 428, 433, 456, 458, 472, 490, 495, 500, 503, 512, 514, 536, 539, 540, 547, 548, 594, 674, 686, 703, 704, 740, 750, 771, 786, 797, 833, 860, 861, 872, 875, 890, 929, 930, 938, 939, 960, 965, 967, 968, 970, 983, 987, 992, 1008, 1009, 1019, 1024, 1029, 1031, 1042, 1050, 1054, 1055, 1088, 1104, 1109, 1113, 1116, 1122, 1137, 1143, 1155, 1164, 1165, 1184, 1186, 1187, 1189], "let": [13, 17, 42, 61, 62, 63, 129, 133, 170, 171, 172, 175, 176, 177, 180, 185, 192, 193, 194, 199, 200, 232, 246, 250, 252, 258, 262, 289, 292, 294, 296, 299, 314, 317, 325, 454, 462, 472, 474, 476, 483, 486, 490, 492, 494, 499, 512, 518, 535, 546, 547, 549, 552, 568, 582, 592, 593, 605, 609, 611, 612, 662, 668, 674, 680, 690, 707, 735, 739, 744, 748, 802, 806, 825, 833, 841, 868, 877, 890, 895, 930, 937, 938, 950, 963, 965, 966, 980, 989, 991, 1007, 1009, 1019, 1022, 1023, 1029, 1031, 1035, 1072, 1079, 1081, 1088, 1096, 1118, 1126, 1131, 1138, 1139, 1144, 1147, 1164, 1184], "me": [13, 23, 32, 37, 61, 63, 65, 128, 164, 169, 170, 171, 172, 175, 176, 177, 180, 181, 185, 198, 199, 200, 202, 206, 229, 231, 232, 256, 307, 325, 365, 454, 456, 457, 472, 475, 579, 603, 668, 703, 744, 750, 806, 868, 895, 930, 938, 939, 950, 954, 1007, 1010, 1019, 1035, 1038, 1079, 1131, 1135, 1165], "focu": [13, 173, 177, 180, 194, 202, 206, 289, 292, 461, 465, 497, 689, 718, 930, 938, 940, 1055, 1138, 1158, 1187], "myself": [13, 166, 167, 177, 198, 206, 221, 237, 806, 868, 890, 895, 912], "ey": [13, 32, 37, 255, 258, 268, 290, 332, 338, 344, 348, 1066], "toward": [13, 202, 371, 454, 514, 643], "consist": [13, 27, 202, 217, 258, 324, 356, 373, 387, 390, 428, 430, 468, 539, 547, 592, 893, 967, 1001, 1055, 1056, 1059, 1100, 1109, 1133, 1154], "won": [13, 145, 180, 181, 258, 288, 351, 385, 452, 477, 546, 548, 594, 744, 750, 801, 813, 938, 950, 957, 1010, 1032, 1081], "break": [13, 36, 38, 163, 193, 202, 203, 208, 215, 221, 222, 230, 242, 245, 251, 252, 255, 258, 261, 262, 265, 268, 283, 290, 304, 332, 338, 344, 348, 357, 422, 426, 427, 434, 440, 444, 447, 451, 454, 458, 460, 462, 464, 469, 470, 472, 633, 664, 674, 676, 683, 692, 718, 726, 730, 751, 764, 771, 783, 785, 786, 823, 955, 956, 965, 991, 997, 1004, 1035, 1043, 1081, 1144], "move": [13, 54, 62, 103, 118, 122, 128, 141, 154, 158, 167, 171, 181, 199, 207, 210, 221, 232, 248, 273, 276, 285, 286, 297, 306, 307, 341, 350, 365, 368, 472, 473, 486, 530, 539, 568, 593, 594, 601, 602, 603, 604, 606, 652, 698, 718, 730, 740, 742, 746, 749, 751, 752, 755, 762, 763, 764, 782, 783, 785, 786, 802, 835, 857, 860, 861, 862, 863, 896, 897, 898, 899, 902, 903, 904, 905, 907, 913, 929, 930, 954, 955, 992, 1025, 1062, 1160, 1183, 1184, 1185, 1192, 1193], "around": [13, 24, 37, 61, 63, 65, 102, 128, 133, 136, 149, 170, 171, 172, 177, 181, 191, 202, 206, 230, 256, 267, 274, 275, 277, 297, 325, 334, 335, 411, 486, 500, 502, 511, 536, 592, 688, 691, 693, 743, 745, 785, 786, 833, 838, 965, 980, 1001, 1004, 1025, 1031, 1047, 1051, 1053, 1075, 1127, 1131, 1133, 1137, 1138, 1149, 1150, 1153], "last": [13, 61, 63, 126, 128, 166, 170, 171, 172, 187, 192, 202, 203, 209, 221, 222, 229, 237, 239, 242, 245, 246, 255, 258, 268, 283, 288, 290, 304, 326, 356, 362, 369, 371, 438, 456, 620, 622, 623, 624, 625, 629, 632, 721, 724, 725, 726, 784, 786, 833, 893, 896, 899, 915, 924, 926, 929, 957, 962, 970, 979, 984, 986, 991, 1006, 1017, 1028, 1029, 1030, 1031, 1035, 1039, 1043, 1044, 1050, 1051, 1056, 1064, 1072, 1073, 1077, 1079, 1082, 1083, 1093, 1120, 1126, 1128, 1139, 1144, 1152, 1153, 1165, 1172, 1202], "least": [13, 24, 37, 61, 63, 69, 85, 172, 180, 194, 198, 200, 202, 209, 210, 229, 231, 232, 246, 248, 258, 262, 288, 292, 294, 304, 306, 386, 404, 410, 411, 424, 450, 453, 454, 462, 478, 490, 562, 647, 690, 740, 742, 749, 754, 757, 766, 796, 829, 831, 865, 930, 932, 940, 978, 1001, 1005, 1026, 1035, 1039, 1055, 1056, 1066, 1089, 1137, 1172], "ha": [13, 21, 24, 27, 28, 43, 45, 53, 56, 62, 82, 114, 115, 116, 117, 118, 119, 120, 122, 126, 127, 129, 136, 139, 141, 145, 157, 167, 169, 170, 171, 172, 173, 174, 175, 177, 180, 181, 185, 190, 192, 194, 198, 199, 202, 206, 208, 209, 210, 220, 222, 226, 227, 229, 230, 232, 239, 242, 245, 248, 250, 252, 253, 255, 258, 262, 265, 268, 271, 279, 280, 283, 286, 287, 288, 289, 290, 292, 294, 295, 297, 300, 303, 304, 310, 312, 321, 322, 325, 326, 328, 332, 335, 338, 341, 344, 348, 351, 358, 360, 362, 371, 385, 394, 397, 407, 410, 411, 420, 423, 431, 432, 439, 445, 446, 449, 453, 455, 456, 462, 468, 472, 474, 477, 483, 485, 486, 487, 488, 490, 491, 492, 495, 500, 501, 504, 512, 517, 531, 533, 543, 566, 576, 591, 593, 594, 595, 596, 599, 600, 601, 604, 605, 608, 615, 625, 646, 647, 664, 665, 668, 677, 678, 683, 684, 686, 695, 697, 700, 703, 712, 713, 714, 718, 727, 728, 729, 732, 740, 748, 750, 753, 754, 756, 762, 766, 784, 786, 787, 797, 802, 827, 829, 831, 833, 843, 846, 847, 849, 853, 860, 864, 865, 866, 868, 870, 871, 872, 878, 889, 891, 896, 922, 930, 936, 937, 938, 939, 948, 950, 953, 959, 965, 975, 977, 978, 980, 988, 989, 991, 992, 993, 994, 1001, 1005, 1007, 1021, 1023, 1024, 1026, 1028, 1029, 1030, 1033, 1035, 1038, 1043, 1044, 1045, 1051, 1053, 1055, 1058, 1061, 1062, 1066, 1071, 1072, 1076, 1093, 1113, 1128, 1130, 1131, 1137, 1138, 1139, 1140, 1144, 1152, 1153, 1155, 1157, 1164, 1166, 1171, 1173, 1184, 1186, 1187, 1189, 1192, 1193], "extens": [13, 14, 23, 28, 32, 37, 40, 165, 180, 202, 229, 231, 239, 245, 255, 258, 338, 351, 432, 472, 500, 591, 729, 784, 787, 858, 870, 1007, 1038, 1055, 1058, 1159, 1164], "interfac": [13, 53, 56, 65, 76, 77, 78, 82, 84, 86, 89, 110, 118, 123, 124, 129, 130, 131, 132, 133, 134, 136, 138, 139, 141, 145, 146, 166, 167, 170, 187, 189, 190, 197, 206, 232, 246, 248, 260, 278, 279, 286, 295, 313, 325, 329, 354, 355, 365, 366, 367, 371, 374, 383, 384, 472, 478, 479, 484, 489, 490, 491, 492, 495, 496, 502, 510, 514, 516, 517, 538, 542, 544, 568, 590, 615, 663, 665, 687, 729, 736, 737, 753, 754, 770, 771, 785, 786, 929, 930, 935, 937, 939, 973, 1007, 1029, 1143, 1183, 1188, 1189, 1195, 1198, 1201], "lot": [13, 69, 73, 96, 101, 167, 169, 170, 172, 177, 181, 199, 202, 206, 222, 299, 368, 404, 453, 458, 462, 468, 482, 585, 662, 786, 817, 827, 833, 862, 863, 872, 893, 929, 938, 955, 1007, 1022, 1050, 1055, 1077, 1133, 1185], "littl": [13, 27, 44, 172, 174, 177, 180, 181, 190, 202, 230, 239, 245, 246, 248, 255, 258, 280, 286, 297, 383, 433, 461, 462, 473, 602, 605, 608, 664, 670, 750, 753, 789, 930, 932, 938, 986, 1008, 1078, 1147], "maintain": [13, 28, 30, 54, 74, 84, 167, 169, 170, 177, 199, 208, 229, 231, 239, 243, 245, 255, 258, 267, 365, 379, 458, 472, 640, 690, 701, 811, 833, 841, 843, 845, 976, 1007, 1008, 1009, 1011, 1017, 1022, 1023, 1024, 1025, 1073, 1136, 1186], "packag": [13, 21, 23, 29, 32, 60, 101, 108, 128, 150, 153, 159, 160, 166, 171, 185, 200, 202, 203, 206, 207, 209, 216, 221, 227, 229, 230, 231, 237, 239, 243, 245, 246, 249, 253, 255, 256, 258, 259, 261, 264, 267, 270, 288, 298, 299, 303, 307, 312, 317, 321, 324, 325, 328, 331, 338, 343, 347, 365, 366, 367, 368, 372, 383, 384, 475, 477, 480, 481, 786, 806, 929, 937, 938, 1009, 1014, 1017, 1032, 1055, 1062, 1084, 1085, 1087, 1088, 1089, 1090, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1137, 1141, 1145, 1146, 1147, 1152, 1153, 1163, 1164, 1165, 1167, 1168, 1173, 1186], "virtual": [13, 29, 73, 84, 110, 111, 116, 117, 118, 119, 120, 123, 124, 127, 137, 141, 146, 166, 172, 175, 177, 197, 202, 206, 217, 221, 237, 253, 256, 259, 270, 275, 277, 279, 286, 295, 296, 297, 298, 299, 303, 314, 317, 320, 321, 324, 325, 331, 335, 343, 347, 372, 383, 384, 487, 491, 493, 496, 497, 502, 504, 510, 514, 519, 521, 522, 523, 526, 527, 528, 529, 530, 531, 538, 548, 588, 590, 615, 662, 663, 664, 687, 729, 737, 748, 750, 754, 785, 786, 792, 864, 869, 872, 931, 937, 939, 948, 957, 973, 991, 1001, 1055, 1058, 1084, 1085, 1086, 1129, 1131, 1132, 1133, 1137, 1145, 1147, 1158, 1161, 1164, 1183, 1190, 1199], "environ": [13, 21, 29, 69, 79, 82, 101, 108, 128, 149, 158, 166, 170, 181, 185, 206, 212, 221, 222, 227, 237, 240, 243, 253, 256, 259, 270, 276, 279, 285, 298, 299, 303, 306, 307, 314, 317, 320, 321, 324, 325, 331, 338, 343, 347, 348, 366, 367, 378, 379, 497, 517, 531, 546, 547, 548, 549, 610, 748, 749, 771, 786, 863, 867, 871, 872, 893, 894, 913, 929, 930, 970, 987, 992, 1008, 1017, 1018, 1019, 1024, 1026, 1038, 1058, 1060, 1084, 1085, 1086, 1129, 1131, 1132, 1133, 1137, 1138, 1145, 1147, 1152, 1153, 1158, 1159, 1161, 1164, 1165, 1171, 1175, 1177], "repo": [13, 126, 152, 181, 185, 197, 200, 211, 338, 351, 356, 365, 369, 370, 558, 559, 560, 561, 563, 564, 565, 806, 833, 835, 1021, 1173], "creat": [13, 17, 21, 24, 39, 42, 44, 54, 60, 61, 62, 63, 81, 103, 105, 106, 113, 118, 122, 128, 132, 133, 153, 156, 163, 166, 170, 171, 172, 174, 177, 180, 181, 185, 187, 189, 190, 191, 206, 207, 208, 209, 210, 211, 222, 227, 235, 240, 245, 246, 248, 253, 255, 258, 262, 267, 270, 275, 276, 277, 285, 286, 294, 297, 298, 299, 303, 304, 306, 307, 309, 314, 317, 321, 324, 325, 365, 370, 389, 466, 468, 474, 475, 488, 490, 492, 495, 496, 497, 510, 511, 512, 516, 518, 519, 533, 536, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 590, 592, 595, 606, 646, 648, 664, 679, 682, 684, 693, 695, 718, 732, 735, 744, 750, 751, 763, 764, 771, 781, 782, 784, 785, 786, 789, 792, 796, 797, 802, 804, 806, 808, 811, 817, 829, 833, 862, 863, 864, 865, 866, 867, 873, 875, 876, 880, 881, 882, 884, 886, 888, 891, 897, 898, 900, 902, 903, 904, 905, 907, 913, 929, 937, 938, 939, 941, 942, 943, 945, 946, 948, 950, 952, 958, 959, 960, 967, 968, 969, 970, 975, 976, 977, 983, 984, 987, 990, 991, 992, 999, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1022, 1023, 1028, 1029, 1031, 1033, 1035, 1039, 1043, 1044, 1045, 1047, 1061, 1062, 1071, 1072, 1073, 1082, 1085, 1086, 1087, 1099, 1107, 1108, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1131, 1133, 1134, 1135, 1137, 1140, 1143, 1147, 1156, 1164, 1166, 1167, 1186], "popul": [13, 172, 176, 262, 295, 789], "yourself": [13, 170, 177, 181, 192, 248, 417, 593, 610, 615, 838, 895, 978, 1001, 1054, 1189], "root": [13, 38, 62, 84, 128, 152, 169, 175, 177, 180, 181, 192, 197, 198, 199, 206, 210, 220, 242, 248, 258, 262, 265, 268, 283, 286, 290, 300, 304, 326, 332, 338, 344, 350, 351, 356, 385, 452, 461, 465, 468, 477, 485, 491, 549, 611, 667, 784, 797, 833, 834, 835, 864, 868, 870, 889, 893, 905, 906, 912, 915, 917, 918, 919, 921, 922, 924, 930, 937, 938, 939, 941, 942, 946, 955, 960, 965, 973, 993, 1007, 1010, 1019, 1021, 1030, 1109, 1118, 1119, 1156, 1164], "activ": [13, 175, 185, 187, 210, 270, 690, 813, 815, 819, 827, 868, 870, 925, 1085, 1164, 1166], "txt": [13, 33, 42, 44, 126, 128, 133, 146, 165, 172, 188, 189, 193, 196, 197, 198, 199, 200, 229, 231, 236, 239, 248, 249, 258, 270, 280, 314, 317, 348, 356, 357, 397, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 488, 533, 546, 547, 548, 549, 550, 569, 572, 575, 576, 578, 581, 584, 587, 681, 784, 804, 859, 860, 861, 873, 877, 887, 897, 898, 899, 900, 904, 905, 912, 933, 937, 938, 939, 973, 996, 999, 1003, 1008, 1009, 1019, 1030, 1077, 1100, 1118, 1166, 1167, 1170, 1173, 1175], "fedorish": [13, 806, 950, 1147], "your": [13, 43, 69, 106, 113, 128, 145, 169, 170, 172, 173, 174, 175, 176, 177, 180, 181, 185, 186, 199, 202, 205, 206, 210, 222, 230, 231, 248, 256, 262, 275, 277, 279, 286, 289, 292, 334, 351, 362, 371, 373, 417, 452, 460, 462, 464, 469, 470, 472, 481, 491, 495, 516, 533, 536, 547, 549, 550, 607, 681, 682, 684, 685, 692, 698, 706, 730, 771, 783, 785, 786, 808, 825, 833, 838, 859, 860, 861, 863, 870, 872, 873, 882, 883, 884, 885, 886, 887, 888, 894, 897, 898, 899, 900, 902, 911, 929, 930, 937, 939, 941, 942, 946, 950, 965, 967, 1019, 1022, 1033, 1044, 1050, 1055, 1059, 1100, 1114, 1118, 1119, 1131, 1136, 1147, 1157, 1159, 1164, 1165, 1166, 1173, 1189], "mileag": [13, 275, 277, 1147, 1164], "might": [13, 27, 60, 61, 63, 126, 134, 139, 145, 169, 170, 171, 173, 175, 177, 180, 181, 185, 198, 200, 202, 210, 231, 239, 245, 250, 255, 258, 289, 292, 295, 321, 351, 376, 448, 462, 472, 477, 486, 487, 492, 495, 516, 549, 599, 608, 727, 737, 750, 751, 752, 784, 808, 819, 823, 829, 833, 875, 930, 937, 938, 939, 950, 955, 964, 986, 993, 1004, 1019, 1022, 1030, 1039, 1042, 1055, 1133, 1147, 1164, 1167, 1171], "vari": [13, 239, 245, 255, 258, 262, 275, 277, 298, 299, 320, 324, 388, 462, 646, 765, 833, 939, 1024, 1143, 1147, 1164, 1184], "dnf": [13, 60, 136, 166, 173, 181, 185, 199, 338, 385, 478, 485, 562, 806, 834, 932, 950, 1009, 1021, 1147, 1171, 1173], "pandoc": 13, "graphviz": [13, 481, 1009], "dia": [13, 242, 300, 915, 1088], "gtest": [13, 44, 69, 128, 197, 198, 199, 200, 385, 490, 491, 492, 494, 495, 497, 499, 512, 514, 515, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 556, 558, 559, 560, 561, 563, 564, 565, 566, 567, 585, 592, 593, 594, 605, 606, 608, 609, 610, 611, 612, 670, 695, 697, 700, 701, 702, 733, 739, 744, 748, 749, 750, 751, 753, 766, 780, 781, 782, 784, 786, 1169], "devel": [13, 136, 166, 181, 199, 478, 480, 485, 806, 1171, 1173], "markdown": [13, 23, 360, 1086], "handl": [13, 21, 29, 46, 78, 133, 164, 170, 190, 202, 206, 207, 209, 211, 217, 230, 232, 237, 239, 243, 246, 247, 255, 260, 267, 279, 286, 296, 303, 304, 314, 317, 325, 330, 336, 342, 346, 365, 370, 372, 378, 379, 386, 426, 433, 438, 454, 458, 478, 538, 568, 590, 605, 615, 648, 652, 674, 683, 684, 685, 718, 720, 747, 750, 762, 763, 785, 786, 792, 796, 815, 827, 863, 866, 867, 929, 937, 952, 954, 955, 956, 957, 958, 959, 960, 962, 965, 967, 968, 970, 978, 984, 987, 990, 992, 995, 1001, 1004, 1032, 1050, 1055, 1056, 1071, 1081, 1129, 1131, 1183, 1189, 1198], "jupyt": [13, 185, 190, 191, 193, 202, 203, 205, 213, 253, 255, 256, 258, 259, 288, 289, 292, 293, 299, 303, 309, 314, 317, 321, 325, 331, 338, 348, 365, 370, 915, 1055, 1133, 1134, 1138, 1194], "notebook": [13, 32, 185, 189, 190, 191, 193, 202, 205, 213, 246, 253, 256, 258, 259, 261, 264, 267, 270, 279, 282, 288, 289, 292, 293, 299, 303, 309, 314, 317, 321, 325, 331, 332, 337, 343, 347, 348, 350, 370, 1055, 1133, 1138, 1194], "those": [13, 24, 82, 126, 137, 146, 163, 170, 171, 177, 180, 185, 200, 202, 206, 211, 229, 231, 232, 239, 243, 248, 249, 250, 252, 258, 262, 294, 295, 296, 297, 299, 314, 350, 362, 365, 371, 376, 397, 452, 462, 472, 474, 476, 477, 478, 491, 492, 495, 496, 562, 605, 627, 668, 671, 678, 693, 728, 744, 752, 754, 784, 799, 802, 833, 860, 861, 877, 878, 930, 937, 938, 939, 1004, 1023, 1024, 1025, 1026, 1030, 1031, 1032, 1038, 1043, 1054, 1095, 1105, 1126, 1136, 1144, 1145, 1150, 1152, 1164, 1186, 1187, 1189], "funki": [13, 17, 172], "graph": [13, 29, 82, 91, 146, 240, 253, 267, 270, 303, 309, 365, 372, 467, 481, 487, 1009, 1023, 1024, 1131, 1137], "histor": [13, 24, 82, 172, 194, 398, 411, 456, 689, 792, 871, 950, 1005, 1122, 1176], "baggag": [13, 398, 411, 689, 1005, 1122], "convert": [13, 17, 29, 42, 163, 191, 221, 229, 235, 239, 242, 245, 248, 252, 255, 258, 259, 262, 279, 304, 314, 317, 332, 350, 411, 433, 458, 468, 476, 481, 491, 546, 661, 668, 702, 703, 786, 787, 967, 1007, 1046, 1088, 1090, 1095, 1102, 1105, 1124, 1125, 1126, 1129, 1144], "draw": [13, 167, 210, 321, 373, 408, 544, 742, 790, 794, 802, 823, 846], "svg": [13, 167], "ani": [13, 39, 45, 49, 123, 146, 154, 163, 166, 169, 170, 171, 172, 175, 177, 181, 185, 190, 194, 205, 208, 210, 222, 229, 231, 239, 245, 255, 258, 262, 273, 274, 275, 283, 299, 304, 321, 334, 351, 372, 373, 406, 450, 458, 472, 495, 500, 542, 543, 544, 545, 549, 550, 562, 579, 597, 600, 626, 664, 672, 677, 690, 693, 695, 712, 718, 736, 737, 740, 749, 750, 751, 753, 754, 762, 784, 791, 792, 804, 806, 825, 833, 843, 850, 860, 861, 870, 873, 880, 881, 884, 885, 886, 893, 905, 915, 930, 937, 938, 939, 942, 965, 976, 980, 1000, 1026, 1028, 1029, 1030, 1031, 1035, 1042, 1043, 1050, 1053, 1062, 1067, 1069, 1080, 1081, 1086, 1110, 1112, 1127, 1138, 1153, 1154, 1158, 1159, 1171, 1184, 1189], "That": [13, 88, 102, 103, 126, 128, 129, 133, 137, 169, 170, 171, 172, 175, 180, 181, 185, 194, 202, 206, 209, 248, 272, 276, 278, 292, 295, 297, 376, 440, 441, 444, 447, 451, 460, 464, 469, 470, 478, 491, 492, 502, 514, 516, 518, 534, 536, 549, 596, 600, 682, 692, 730, 756, 762, 763, 783, 785, 786, 860, 861, 863, 864, 866, 867, 869, 870, 879, 882, 883, 884, 885, 886, 887, 888, 893, 929, 930, 938, 941, 942, 943, 944, 945, 948, 966, 970, 984, 990, 992, 1017, 1018, 1029, 1055, 1062, 1121, 1123, 1128, 1157, 1164, 1174, 1184], "sloppili": [13, 963], "track": [13, 126, 173, 177, 185, 209, 229, 239, 245, 255, 258, 749, 806, 833, 834, 838, 870, 1042], "opentrain": [13, 22, 28, 154, 167, 207, 214, 232, 373, 384, 1164, 1194], "recip": [13, 39, 162, 166, 170, 171, 366, 367, 452, 617], "sphinx": [14, 17, 23, 39, 69, 166, 167, 182, 371, 787, 1164], "togeth": [14, 24, 43, 50, 108, 110, 114, 115, 133, 137, 160, 177, 180, 181, 185, 190, 200, 202, 206, 210, 222, 231, 248, 275, 277, 294, 295, 297, 312, 321, 324, 328, 373, 383, 429, 462, 463, 539, 549, 568, 590, 608, 609, 611, 612, 762, 764, 797, 810, 833, 860, 861, 919, 920, 938, 939, 969, 983, 1007, 1013, 1017, 1019, 1022, 1026, 1104, 1137, 1157, 1159, 1167, 1169, 1171, 1184, 1186], "form": [14, 29, 172, 177, 190, 194, 218, 239, 245, 246, 255, 258, 295, 297, 384, 449, 465, 504, 512, 514, 553, 554, 566, 664, 787, 833, 838, 841, 865, 915, 939, 1066, 1085, 1088, 1121, 1123, 1126, 1127, 1133, 1139, 1159, 1164, 1184], "short": [14, 32, 35, 43, 66, 110, 146, 170, 177, 185, 198, 202, 206, 209, 210, 211, 221, 222, 239, 243, 244, 245, 250, 253, 255, 256, 260, 278, 294, 295, 296, 297, 298, 299, 388, 404, 406, 411, 415, 416, 441, 450, 496, 510, 538, 550, 590, 595, 599, 786, 829, 835, 838, 872, 893, 918, 937, 939, 950, 957, 967, 989, 994, 1027, 1041, 1064, 1067, 1083, 1155, 1164, 1166, 1184], "video": [14, 22, 164, 173, 175, 177, 188, 202, 205, 206, 209, 214, 227, 230, 231, 253, 297, 300, 303, 473, 740, 930, 938, 1131, 1138, 1147], "explain": [14, 62, 69, 101, 133, 164, 169, 175, 181, 194, 202, 206, 208, 232, 243, 248, 250, 252, 253, 261, 262, 299, 350, 380, 383, 452, 462, 582, 873, 893, 896, 930, 939, 995, 1078, 1131, 1164, 1189], "case": [14, 24, 43, 101, 108, 110, 113, 126, 131, 134, 146, 169, 170, 171, 174, 177, 180, 181, 185, 191, 194, 206, 208, 210, 212, 232, 245, 246, 252, 258, 262, 265, 274, 275, 277, 278, 286, 289, 292, 304, 321, 324, 334, 373, 395, 402, 421, 423, 454, 456, 474, 477, 480, 489, 496, 500, 503, 538, 546, 547, 549, 555, 557, 576, 590, 597, 607, 646, 652, 672, 684, 690, 707, 718, 730, 737, 740, 748, 762, 772, 774, 784, 785, 786, 806, 833, 846, 849, 861, 865, 868, 875, 889, 905, 922, 929, 930, 939, 949, 950, 956, 967, 986, 991, 1005, 1012, 1014, 1017, 1019, 1021, 1023, 1030, 1031, 1061, 1062, 1073, 1077, 1100, 1139, 1155, 1164, 1172, 1187], "netide": 14, "f\u00f6rderantrag": 14, "miscellan": [14, 29, 94, 153, 214, 227, 230, 237, 240, 241, 243, 249, 251, 253, 254, 259, 260, 261, 264, 267, 269, 277, 282, 284, 288, 289, 292, 302, 303, 305, 308, 311, 325, 330, 333, 335, 336, 337, 339, 342, 343, 346, 347, 349, 351, 352, 353, 354, 355, 356, 365, 373, 384, 496, 510, 538, 539, 540, 541, 542, 543, 544, 545, 548, 555, 557, 671, 672, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 699, 730, 746, 755, 763, 771, 783, 785, 786, 787, 929, 959, 960, 965, 968, 970, 984, 987, 1032, 1054, 1084, 1088, 1089, 1090, 1100, 1103, 1111, 1112, 1114, 1115, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1132, 1133, 1137, 1138, 1144, 1147, 1151, 1158, 1161, 1168, 1183, 1184, 1185, 1194], "s5": [16, 23, 166, 1001, 1005, 1198], "slide": [16, 23, 24, 27, 37, 166, 167, 170, 188, 195, 197, 202, 206, 210, 211, 212, 221, 222, 231, 232, 248, 274, 275, 286, 376, 379, 384, 585, 845, 1002, 1006, 1103, 1144, 1180, 1181, 1182, 1190, 1191, 1197, 1198, 1200, 1201, 1202], "work": [16, 24, 27, 40, 42, 43, 44, 57, 60, 75, 82, 84, 102, 103, 108, 110, 113, 127, 129, 131, 145, 146, 150, 152, 155, 156, 166, 169, 170, 171, 173, 175, 176, 177, 180, 181, 185, 194, 198, 199, 200, 209, 210, 212, 222, 227, 229, 231, 239, 240, 243, 245, 246, 248, 253, 255, 258, 262, 267, 276, 279, 285, 286, 288, 289, 292, 299, 300, 303, 304, 306, 307, 309, 337, 338, 351, 365, 370, 371, 373, 378, 379, 384, 385, 429, 430, 450, 452, 462, 472, 474, 475, 477, 478, 480, 481, 483, 484, 486, 488, 491, 492, 495, 496, 497, 510, 536, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 585, 590, 610, 639, 646, 679, 681, 683, 691, 693, 695, 738, 744, 748, 749, 750, 754, 756, 763, 782, 785, 786, 787, 796, 801, 811, 813, 817, 831, 833, 838, 841, 855, 859, 860, 861, 862, 863, 866, 867, 868, 870, 872, 877, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 893, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 913, 915, 917, 926, 929, 930, 938, 942, 946, 950, 952, 957, 958, 960, 963, 966, 968, 970, 975, 984, 987, 989, 990, 992, 1005, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1022, 1024, 1030, 1053, 1056, 1057, 1058, 1077, 1083, 1085, 1086, 1108, 1118, 1119, 1131, 1138, 1147, 1149, 1150, 1152, 1153, 1155, 1164, 1173, 1184, 1189, 1190, 1196], "progress": [16, 145, 166, 384, 787, 895, 1173], "web": [16, 23, 76, 78, 82, 153, 167, 177, 206, 209, 230, 233, 279, 303, 325, 786, 1131, 1138, 1144, 1147], "note": [16, 32, 36, 40, 44, 59, 62, 126, 128, 141, 145, 150, 153, 155, 169, 170, 172, 177, 190, 191, 202, 221, 229, 231, 242, 243, 245, 270, 299, 304, 321, 324, 325, 356, 357, 474, 478, 480, 484, 514, 562, 585, 594, 595, 601, 606, 665, 707, 727, 728, 729, 740, 742, 748, 749, 750, 752, 792, 833, 850, 860, 861, 920, 938, 956, 967, 1019, 1072, 1075, 1077, 1081, 1136, 1147, 1149, 1152, 1171], "screencast": [16, 23, 153, 1131], "written": [16, 42, 43, 82, 110, 129, 136, 169, 170, 175, 185, 208, 258, 367, 429, 432, 448, 456, 458, 462, 475, 512, 602, 668, 681, 701, 787, 872, 959, 966, 1001, 1008, 1009, 1017, 1049, 1056, 1086, 1186], "draft": [16, 29, 202, 785, 786, 929, 1083, 1129, 1130, 1145], "convers": [17, 209, 221, 228, 231, 232, 239, 244, 245, 248, 251, 254, 255, 260, 263, 266, 284, 295, 297, 301, 305, 311, 323, 327, 331, 333, 339, 345, 365, 389, 404, 418, 427, 434, 440, 444, 447, 451, 458, 460, 464, 469, 470, 474, 511, 573, 661, 665, 689, 691, 692, 694, 730, 783, 785, 786, 836, 1081, 1098, 1102, 1105, 1116], "old": [17, 29, 134, 167, 170, 172, 175, 200, 210, 242, 243, 258, 290, 300, 304, 329, 384, 407, 446, 467, 472, 495, 568, 621, 628, 633, 648, 680, 686, 689, 694, 695, 736, 754, 765, 790, 796, 806, 825, 930, 938, 994, 1070, 1076, 1088, 1109, 1155, 1185], "latex": [17, 23, 24, 568], "beamer": [17, 23, 24], "To": [17, 29, 45, 46, 47, 51, 55, 56, 60, 82, 106, 116, 117, 119, 120, 126, 127, 134, 153, 169, 170, 172, 174, 185, 194, 198, 202, 217, 229, 239, 245, 255, 258, 259, 262, 266, 274, 275, 277, 279, 299, 314, 317, 321, 398, 401, 456, 468, 492, 537, 550, 646, 660, 671, 687, 689, 730, 746, 781, 785, 786, 806, 810, 821, 833, 862, 868, 929, 930, 937, 938, 943, 945, 958, 967, 1023, 1032, 1046, 1090, 1096, 1119, 1124, 1125, 1126, 1129, 1137, 1144], "put": [17, 58, 73, 84, 137, 141, 163, 169, 170, 171, 198, 206, 321, 324, 474, 478, 482, 483, 546, 590, 676, 700, 736, 762, 802, 810, 823, 825, 850, 930, 938, 967, 992, 1007, 1022, 1025, 1030, 1088, 1169], "more": [17, 21, 27, 29, 43, 45, 61, 63, 65, 69, 73, 82, 86, 94, 101, 105, 110, 118, 124, 128, 129, 132, 133, 136, 146, 163, 167, 170, 171, 174, 175, 177, 180, 181, 183, 185, 191, 192, 194, 199, 202, 206, 207, 208, 209, 210, 211, 212, 214, 216, 221, 222, 227, 229, 230, 231, 232, 233, 237, 240, 243, 244, 246, 247, 248, 249, 251, 252, 253, 256, 259, 260, 261, 263, 264, 266, 270, 274, 275, 276, 277, 281, 284, 285, 295, 296, 297, 304, 306, 307, 311, 313, 321, 325, 329, 333, 334, 335, 339, 345, 349, 351, 352, 353, 354, 355, 356, 368, 370, 376, 383, 384, 395, 400, 404, 407, 411, 421, 422, 423, 432, 434, 440, 441, 444, 447, 451, 452, 457, 458, 460, 462, 464, 466, 467, 468, 469, 470, 474, 477, 479, 480, 483, 496, 503, 510, 512, 516, 517, 528, 533, 538, 546, 548, 568, 585, 590, 594, 598, 647, 661, 662, 663, 675, 676, 677, 678, 679, 680, 682, 683, 684, 685, 686, 687, 689, 692, 699, 700, 711, 718, 727, 730, 731, 739, 740, 742, 744, 746, 747, 749, 750, 753, 755, 763, 764, 783, 784, 785, 786, 789, 792, 804, 806, 811, 817, 819, 821, 825, 827, 829, 833, 859, 864, 869, 893, 896, 926, 930, 932, 936, 937, 938, 939, 950, 956, 959, 962, 965, 976, 978, 989, 993, 995, 1001, 1005, 1007, 1008, 1009, 1017, 1019, 1023, 1024, 1025, 1031, 1033, 1035, 1039, 1040, 1041, 1042, 1046, 1049, 1050, 1054, 1055, 1057, 1061, 1062, 1073, 1084, 1087, 1088, 1089, 1090, 1100, 1102, 1103, 1109, 1111, 1112, 1114, 1115, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1136, 1137, 1138, 1140, 1141, 1144, 1145, 1147, 1150, 1154, 1158, 1159, 1161, 1163, 1165, 1166, 1168, 1173, 1177, 1184, 1186, 1187, 1194], "precis": [17, 202, 206, 262, 279, 303, 325, 332, 348, 388, 406, 670, 765, 833, 1076, 1131], "restructuredtext": [17, 23, 32, 33, 34, 35, 36, 38, 787], "turn": [17, 79, 114, 115, 170, 172, 175, 180, 181, 202, 206, 222, 231, 248, 294, 365, 462, 477, 478, 514, 539, 540, 697, 712, 889, 930, 937, 938, 939, 1007, 1009, 1013, 1023, 1031, 1036, 1037, 1047, 1049, 1157], "rst2s5": 17, "tool": [17, 32, 60, 72, 128, 177, 181, 186, 202, 210, 212, 222, 232, 258, 276, 285, 300, 305, 306, 323, 338, 365, 368, 370, 383, 384, 385, 430, 465, 467, 468, 472, 664, 718, 736, 786, 857, 863, 864, 877, 929, 939, 950, 953, 1008, 1009, 1017, 1021, 1055, 1056, 1059, 1086, 1150, 1158, 1182, 1184, 1186, 1188, 1195], "thi": [17, 24, 28, 29, 30, 31, 39, 40, 43, 44, 45, 50, 53, 54, 57, 60, 61, 62, 63, 65, 69, 73, 81, 82, 88, 89, 93, 94, 101, 108, 110, 113, 114, 115, 118, 124, 126, 128, 137, 146, 153, 160, 164, 167, 169, 170, 171, 173, 174, 175, 176, 185, 187, 189, 190, 192, 194, 196, 197, 198, 199, 202, 206, 207, 208, 209, 210, 211, 212, 222, 229, 231, 232, 239, 242, 243, 245, 248, 250, 252, 253, 255, 258, 261, 262, 268, 271, 275, 277, 279, 286, 294, 295, 297, 299, 304, 314, 317, 321, 322, 324, 332, 335, 341, 348, 351, 356, 365, 368, 371, 383, 384, 386, 390, 397, 398, 411, 420, 421, 445, 449, 450, 452, 453, 454, 456, 461, 462, 472, 476, 477, 482, 483, 484, 488, 494, 502, 503, 514, 516, 518, 536, 538, 547, 548, 551, 552, 553, 554, 555, 556, 557, 558, 562, 563, 566, 567, 568, 569, 572, 575, 576, 578, 579, 581, 582, 584, 585, 587, 590, 592, 593, 594, 596, 597, 600, 602, 603, 605, 608, 613, 616, 619, 621, 623, 624, 627, 635, 639, 641, 645, 647, 652, 654, 655, 657, 658, 662, 665, 668, 672, 674, 675, 676, 677, 678, 679, 680, 682, 683, 684, 685, 686, 687, 690, 699, 700, 701, 712, 718, 720, 721, 724, 725, 726, 727, 728, 729, 730, 735, 738, 740, 742, 743, 746, 748, 750, 752, 753, 754, 755, 762, 763, 764, 765, 770, 771, 783, 784, 785, 786, 787, 792, 797, 802, 806, 808, 815, 829, 833, 838, 845, 853, 860, 861, 864, 865, 872, 875, 877, 878, 887, 889, 890, 893, 898, 900, 930, 935, 936, 937, 938, 939, 942, 949, 950, 956, 963, 964, 965, 966, 967, 971, 974, 983, 986, 995, 996, 999, 1000, 1003, 1005, 1008, 1009, 1011, 1017, 1019, 1020, 1021, 1022, 1023, 1025, 1026, 1027, 1028, 1029, 1032, 1035, 1037, 1039, 1041, 1043, 1050, 1053, 1054, 1055, 1057, 1059, 1066, 1069, 1071, 1072, 1073, 1076, 1077, 1079, 1081, 1082, 1083, 1087, 1103, 1118, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1144, 1145, 1146, 1147, 1148, 1149, 1153, 1156, 1158, 1159, 1164, 1166, 1169, 1170, 1171, 1173, 1175, 1176, 1184, 1186, 1187, 1189, 1192, 1193, 1199], "sens": [17, 82, 172, 174, 191, 194, 199, 202, 221, 487, 495, 512, 597, 608, 615, 662, 690, 703, 794, 833, 872, 939, 963, 986, 993, 1000, 1050, 1080, 1136, 1187], "entir": [17, 24, 30, 84, 114, 115, 163, 167, 170, 171, 172, 175, 181, 185, 194, 199, 206, 209, 227, 230, 231, 239, 253, 256, 259, 262, 274, 275, 277, 279, 289, 296, 299, 303, 309, 314, 317, 321, 325, 331, 337, 343, 402, 431, 435, 442, 445, 450, 458, 466, 474, 492, 698, 729, 749, 833, 860, 861, 866, 890, 895, 904, 912, 930, 937, 939, 942, 948, 965, 976, 1009, 1038, 1042, 1056, 1061, 1062, 1079, 1081, 1100, 1131, 1164, 1167, 1170, 1187], "site": [17, 23, 27, 39, 60, 69, 145, 153, 166, 167, 170, 182, 185, 197, 198, 199, 203, 229, 239, 245, 255, 258, 321, 338, 607, 753, 872, 1135, 1152, 1153, 1159, 1166, 1173], "massag": [17, 32, 160, 181, 199, 275, 277, 787, 937, 1009], "itself": [17, 27, 133, 136, 146, 170, 172, 198, 202, 208, 239, 245, 255, 258, 304, 332, 354, 400, 432, 468, 477, 483, 511, 512, 534, 549, 595, 602, 661, 738, 753, 762, 765, 808, 811, 833, 853, 859, 860, 861, 875, 893, 922, 992, 1005, 1019, 1047, 1050, 1055, 1076, 1116, 1157, 1173], "upon": [17, 27, 73, 101, 172, 173, 202, 206, 210, 217, 256, 288, 295, 314, 317, 334, 454, 472, 500, 552, 568, 607, 625, 748, 765, 806, 939, 1005, 1093, 1157, 1164, 1184], "you": [17, 21, 43, 58, 61, 63, 113, 126, 128, 129, 133, 134, 136, 139, 141, 145, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 185, 186, 190, 191, 192, 194, 198, 199, 202, 206, 208, 209, 210, 222, 227, 229, 230, 231, 232, 239, 242, 245, 246, 248, 252, 253, 255, 256, 258, 262, 270, 279, 286, 289, 292, 295, 297, 299, 303, 325, 334, 351, 356, 362, 365, 368, 370, 373, 396, 397, 410, 426, 452, 456, 472, 514, 533, 534, 535, 536, 540, 543, 546, 547, 549, 582, 593, 594, 600, 605, 608, 609, 611, 612, 626, 647, 655, 662, 668, 676, 677, 681, 698, 704, 732, 742, 753, 781, 782, 784, 806, 808, 825, 833, 838, 859, 860, 861, 864, 865, 868, 872, 873, 879, 883, 885, 887, 893, 894, 895, 897, 898, 899, 900, 904, 905, 930, 933, 937, 938, 939, 940, 941, 942, 944, 946, 949, 950, 954, 956, 960, 965, 967, 975, 976, 977, 978, 979, 983, 1007, 1008, 1009, 1010, 1012, 1015, 1019, 1022, 1023, 1026, 1031, 1032, 1041, 1043, 1054, 1055, 1059, 1062, 1075, 1081, 1088, 1097, 1099, 1114, 1118, 1119, 1128, 1131, 1137, 1144, 1147, 1153, 1164, 1165, 1166, 1173, 1176, 1184, 1189], "view": [17, 62, 175, 176, 180, 191, 193, 206, 208, 274, 275, 279, 286, 334, 335, 348, 383, 400, 402, 465, 692, 730, 739, 741, 785, 786, 860, 861, 870, 877, 930, 939, 941, 1062, 1130, 1184, 1187, 1189], "state": [17, 45, 123, 128, 133, 166, 177, 182, 202, 210, 232, 239, 242, 245, 255, 256, 258, 405, 422, 454, 472, 539, 540, 544, 545, 592, 698, 732, 762, 791, 829, 850, 864, 922, 932, 976, 980, 991, 992, 1029, 1035], "rather": [17, 69, 89, 141, 145, 146, 170, 172, 173, 174, 175, 176, 177, 180, 181, 185, 194, 198, 202, 206, 222, 231, 249, 250, 324, 351, 376, 388, 430, 462, 463, 472, 490, 541, 542, 543, 544, 545, 550, 585, 592, 594, 608, 615, 626, 646, 671, 677, 691, 712, 762, 764, 806, 833, 838, 870, 872, 918, 930, 937, 938, 939, 941, 948, 953, 976, 977, 1004, 1008, 1023, 1048, 1055, 1058, 1066, 1106, 1107, 1110, 1121, 1123, 1138, 1145, 1166, 1171, 1184, 1186], "huge": [17, 176, 181, 191, 503, 739, 811, 829, 1054, 1056, 1160], "tabl": [17, 39, 62, 69, 146, 163, 167, 169, 202, 208, 209, 226, 234, 239, 245, 246, 248, 249, 252, 253, 255, 258, 265, 270, 304, 384, 388, 403, 417, 418, 422, 423, 427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 670, 692, 730, 739, 783, 785, 786, 872, 1079, 1088, 1120, 1122, 1143, 1144], "isnot": 17, "big": [17, 108, 146, 167, 170, 171, 177, 202, 206, 226, 232, 246, 253, 256, 299, 325, 365, 411, 456, 468, 547, 597, 627, 690, 754, 953, 1131, 1143, 1199], "fat": [17, 146, 167, 169, 173, 177, 246, 684, 754, 864, 1143], "sai": [17, 24, 69, 70, 110, 137, 146, 158, 169, 170, 171, 172, 174, 175, 176, 177, 180, 181, 185, 190, 191, 202, 206, 243, 248, 270, 289, 292, 296, 298, 299, 320, 321, 351, 365, 456, 462, 468, 478, 488, 492, 501, 512, 518, 533, 535, 547, 576, 585, 594, 604, 652, 665, 677, 686, 690, 718, 722, 724, 725, 726, 728, 733, 740, 743, 744, 749, 792, 806, 833, 872, 875, 877, 912, 930, 937, 939, 950, 954, 965, 967, 977, 989, 1000, 1004, 1010, 1019, 1022, 1023, 1029, 1033, 1055, 1071, 1083, 1088, 1118, 1139, 1173, 1187], "file": [17, 27, 29, 34, 35, 36, 38, 40, 44, 47, 50, 53, 54, 55, 56, 72, 82, 84, 89, 94, 95, 101, 102, 103, 104, 105, 106, 107, 108, 110, 112, 113, 114, 115, 126, 128, 129, 133, 134, 141, 145, 149, 150, 154, 157, 162, 163, 166, 167, 169, 170, 171, 172, 175, 176, 181, 185, 189, 192, 194, 196, 197, 198, 199, 201, 202, 204, 206, 207, 209, 210, 211, 212, 217, 219, 220, 221, 222, 227, 230, 231, 232, 235, 236, 237, 240, 241, 243, 244, 245, 246, 248, 249, 252, 253, 255, 256, 259, 260, 261, 262, 264, 266, 269, 270, 274, 275, 276, 279, 283, 285, 288, 289, 291, 292, 298, 299, 301, 305, 306, 310, 312, 313, 320, 321, 324, 325, 327, 328, 329, 333, 336, 339, 345, 348, 350, 351, 352, 353, 354, 355, 362, 365, 366, 367, 368, 369, 370, 376, 378, 379, 383, 394, 397, 398, 428, 429, 431, 432, 433, 434, 440, 444, 447, 451, 455, 460, 464, 466, 468, 469, 470, 473, 475, 477, 479, 480, 481, 486, 487, 490, 496, 510, 533, 534, 536, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 569, 572, 575, 577, 578, 581, 584, 587, 590, 595, 597, 609, 610, 611, 612, 618, 670, 674, 681, 684, 692, 707, 730, 736, 740, 750, 763, 783, 784, 785, 786, 789, 794, 795, 799, 800, 802, 803, 810, 811, 814, 824, 829, 835, 837, 840, 842, 848, 849, 851, 854, 857, 858, 859, 862, 863, 865, 866, 867, 869, 870, 872, 873, 875, 876, 877, 878, 879, 880, 881, 883, 884, 885, 886, 889, 891, 892, 893, 897, 901, 902, 903, 904, 905, 907, 910, 913, 918, 921, 926, 929, 930, 933, 937, 938, 939, 940, 942, 943, 945, 946, 952, 953, 956, 957, 958, 967, 970, 971, 974, 975, 981, 984, 987, 990, 992, 996, 998, 999, 1000, 1003, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1021, 1023, 1024, 1025, 1030, 1031, 1032, 1035, 1038, 1043, 1046, 1049, 1054, 1058, 1060, 1062, 1073, 1079, 1082, 1083, 1089, 1090, 1100, 1103, 1114, 1115, 1118, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1136, 1144, 1145, 1152, 1153, 1156, 1159, 1164, 1165, 1166, 1167, 1170, 1172, 1175, 1181, 1186, 1188, 1189, 1190, 1197, 1198, 1199, 1201], "rst": [17, 23, 32, 34, 35, 36, 38, 128, 154, 166, 189, 196, 201, 204, 210, 258, 268, 332, 373, 569, 572, 575, 578, 581, 584, 587, 996, 999, 1003, 1170, 1175], "render": [17, 40, 175, 338, 348], "dure": [17, 27, 45, 46, 108, 110, 160, 169, 170, 171, 172, 176, 177, 181, 185, 190, 202, 206, 258, 368, 431, 435, 436, 450, 462, 467, 511, 518, 544, 547, 628, 646, 703, 742, 829, 833, 838, 865, 871, 937, 939, 948, 1009, 1023, 1024, 1043, 1056, 1058, 1073, 1157, 1164], "regular": [17, 170, 194, 205, 219, 235, 242, 243, 250, 269, 270, 272, 274, 275, 284, 303, 304, 333, 339, 390, 456, 474, 605, 607, 739, 784, 821, 833, 878, 912, 915, 917, 926, 939, 950, 1000, 1001, 1043, 1073, 1075, 1131], "process": [17, 28, 60, 62, 69, 77, 82, 84, 101, 103, 114, 115, 128, 149, 150, 175, 180, 187, 194, 200, 202, 209, 210, 212, 246, 276, 285, 298, 299, 306, 320, 367, 368, 375, 380, 433, 439, 468, 477, 496, 510, 538, 539, 540, 541, 542, 543, 544, 545, 548, 590, 757, 763, 784, 785, 786, 795, 800, 803, 805, 810, 814, 816, 819, 820, 823, 824, 825, 826, 828, 830, 833, 837, 838, 839, 842, 844, 847, 848, 850, 851, 853, 854, 860, 861, 862, 863, 864, 867, 868, 869, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 892, 894, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 913, 929, 938, 941, 942, 943, 944, 945, 948, 952, 953, 954, 958, 959, 960, 962, 963, 965, 967, 968, 970, 975, 976, 977, 984, 989, 990, 992, 993, 994, 1001, 1004, 1005, 1007, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1024, 1025, 1034, 1042, 1055, 1056, 1060, 1110, 1176, 1189, 1198, 1199], "mean": [17, 29, 77, 78, 114, 115, 128, 133, 170, 172, 175, 177, 191, 193, 194, 206, 226, 229, 230, 243, 245, 258, 262, 289, 304, 312, 320, 324, 328, 350, 351, 388, 409, 410, 411, 433, 452, 457, 462, 516, 594, 602, 605, 606, 672, 718, 740, 744, 752, 753, 786, 792, 808, 868, 875, 878, 880, 881, 889, 930, 937, 938, 939, 966, 973, 989, 993, 995, 1023, 1026, 1035, 1050, 1058, 1061, 1075, 1076, 1081, 1109, 1129, 1132, 1136, 1138, 1139, 1145, 1150, 1171, 1186, 1189], "specif": [17, 62, 126, 173, 239, 245, 246, 255, 258, 304, 310, 321, 351, 385, 433, 450, 462, 492, 539, 542, 544, 547, 693, 736, 750, 784, 792, 806, 829, 833, 859, 869, 930, 937, 939, 953, 959, 975, 976, 1001, 1007, 1019, 1030, 1038, 1039, 1140, 1156, 1164, 1199, 1200], "markup": [17, 39], "class": [17, 21, 29, 42, 44, 55, 58, 62, 73, 74, 77, 78, 89, 96, 101, 110, 111, 112, 114, 115, 118, 121, 122, 123, 124, 125, 128, 129, 133, 134, 136, 137, 139, 141, 145, 146, 150, 177, 188, 189, 190, 192, 197, 206, 207, 208, 209, 211, 213, 214, 226, 230, 232, 239, 242, 243, 245, 246, 250, 254, 256, 257, 260, 262, 265, 268, 270, 272, 274, 275, 277, 282, 283, 287, 289, 290, 292, 296, 297, 298, 299, 301, 302, 303, 304, 308, 310, 320, 321, 322, 324, 325, 326, 330, 332, 334, 335, 336, 337, 338, 342, 343, 344, 346, 347, 349, 351, 353, 359, 360, 367, 368, 369, 376, 402, 448, 472, 474, 482, 490, 491, 492, 493, 494, 496, 497, 499, 500, 504, 510, 511, 512, 514, 515, 517, 518, 519, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 548, 549, 555, 557, 562, 568, 576, 579, 582, 588, 590, 591, 592, 593, 595, 596, 597, 598, 599, 600, 603, 604, 606, 608, 613, 615, 616, 619, 625, 634, 635, 641, 645, 651, 654, 657, 658, 663, 664, 665, 667, 668, 672, 673, 675, 676, 677, 678, 679, 680, 682, 683, 684, 685, 686, 687, 694, 695, 696, 697, 698, 699, 700, 703, 707, 712, 714, 715, 716, 718, 720, 721, 724, 725, 726, 727, 728, 729, 730, 732, 733, 735, 737, 744, 746, 749, 750, 753, 754, 755, 762, 763, 764, 770, 771, 772, 774, 776, 780, 781, 782, 783, 785, 786, 788, 930, 937, 938, 939, 971, 973, 974, 1028, 1030, 1032, 1038, 1039, 1040, 1041, 1042, 1045, 1046, 1051, 1052, 1053, 1054, 1056, 1059, 1061, 1062, 1070, 1090, 1117, 1118, 1119, 1124, 1126, 1129, 1144, 1158, 1164, 1165, 1176, 1184, 1194], "handout": [17, 127, 128], "warn": [17, 32, 40, 146, 166, 181, 222, 232, 283, 295, 362, 373, 398, 422, 453, 454, 456, 477, 491, 546, 548, 592, 596, 647, 691, 703, 786, 802, 808, 811, 870, 929, 959, 970, 984, 1006, 1030, 1081, 1159], "produc": [17, 112, 190, 192, 231, 245, 344, 450, 462, 467, 718, 724, 726, 762, 764, 950, 980, 981, 999, 1007, 1010, 1023, 1036, 1037, 1070, 1073, 1075, 1139], "error": [17, 21, 27, 29, 46, 69, 92, 101, 129, 133, 134, 145, 166, 169, 170, 171, 172, 175, 176, 185, 189, 192, 200, 203, 206, 209, 216, 227, 231, 237, 239, 242, 246, 247, 248, 252, 255, 258, 262, 265, 267, 270, 279, 280, 283, 286, 289, 292, 303, 304, 317, 322, 350, 365, 370, 372, 376, 395, 398, 400, 407, 411, 425, 426, 432, 438, 439, 441, 454, 455, 456, 459, 476, 477, 478, 480, 481, 482, 483, 486, 493, 497, 516, 517, 518, 530, 538, 549, 568, 585, 590, 592, 594, 595, 599, 600, 601, 602, 603, 605, 607, 615, 618, 623, 665, 667, 668, 677, 684, 691, 694, 698, 700, 701, 702, 703, 707, 727, 728, 729, 737, 740, 742, 744, 749, 750, 752, 763, 764, 766, 784, 785, 786, 789, 796, 811, 821, 825, 829, 833, 849, 863, 866, 867, 873, 876, 929, 930, 938, 940, 952, 954, 955, 956, 957, 958, 959, 967, 968, 970, 978, 984, 986, 987, 990, 991, 992, 1000, 1004, 1005, 1009, 1010, 1019, 1024, 1030, 1060, 1061, 1072, 1073, 1077, 1081, 1083, 1090, 1103, 1129, 1131, 1138, 1159, 1164, 1166, 1171, 1184], "output": [17, 23, 33, 40, 51, 53, 55, 56, 60, 62, 89, 90, 111, 119, 127, 139, 145, 146, 166, 172, 174, 175, 176, 189, 192, 198, 210, 211, 222, 231, 239, 245, 248, 249, 255, 258, 286, 350, 365, 370, 388, 389, 394, 395, 396, 397, 401, 433, 467, 468, 474, 475, 476, 516, 518, 533, 548, 551, 552, 553, 554, 566, 568, 576, 579, 605, 655, 673, 674, 687, 735, 740, 748, 786, 791, 846, 857, 864, 873, 876, 877, 878, 889, 893, 915, 919, 920, 925, 926, 930, 940, 951, 959, 962, 965, 973, 976, 977, 981, 1001, 1004, 1005, 1007, 1037, 1076, 1081, 1082, 1092, 1093, 1095, 1096, 1097, 1098, 1100, 1105, 1111, 1113, 1115, 1120, 1121, 1122, 1123, 1134, 1137, 1138, 1143, 1147, 1156, 1159, 1172, 1179, 1195], "must": [17, 39, 43, 44, 114, 115, 128, 134, 173, 177, 192, 198, 202, 203, 205, 206, 209, 213, 214, 227, 229, 231, 239, 245, 246, 253, 255, 256, 258, 279, 304, 321, 388, 405, 408, 422, 430, 448, 450, 465, 472, 474, 478, 484, 495, 500, 501, 514, 517, 518, 531, 532, 546, 549, 552, 553, 554, 566, 576, 602, 603, 605, 607, 617, 618, 652, 665, 672, 679, 686, 694, 695, 697, 698, 718, 742, 744, 756, 760, 786, 811, 817, 825, 831, 838, 860, 861, 877, 887, 895, 929, 940, 946, 949, 959, 960, 963, 968, 970, 978, 987, 989, 991, 1001, 1007, 1010, 1025, 1030, 1031, 1048, 1053, 1059, 1072, 1073, 1075, 1076, 1078, 1081, 1110, 1131, 1165, 1176], "role": [17, 39, 69, 173, 177, 468, 549, 930], "somewher": [17, 191, 210, 222, 229, 262, 274, 275, 350, 362, 433, 450, 452, 472, 497, 518, 585, 718, 976, 1033, 1058, 1144], "top": [17, 28, 32, 34, 35, 38, 39, 50, 169, 170, 172, 173, 185, 191, 193, 194, 210, 212, 239, 245, 248, 255, 258, 475, 836, 845, 930, 950, 989, 991, 1030, 1038, 1060, 1106, 1110, 1184, 1188, 1190, 1195], "insid": [17, 35, 39, 42, 50, 128, 133, 146, 169, 170, 198, 200, 222, 239, 245, 255, 258, 275, 295, 297, 312, 321, 328, 350, 365, 394, 398, 408, 426, 429, 431, 432, 450, 455, 474, 536, 547, 552, 600, 606, 608, 764, 784, 794, 804, 872, 902, 912, 937, 939, 962, 976, 995, 1021, 1026, 1029, 1038, 1075, 1081, 1149, 1152, 1156, 1167, 1186, 1189], "ideal": [17, 181, 197, 239, 245, 255, 258, 275, 277, 461, 477, 488, 495, 543, 664, 718, 792, 811, 829, 833, 926, 946, 1010, 1050, 1052], "slideshow": [17, 23, 249, 261, 288, 298, 309, 317, 320, 324, 330, 331, 336, 337, 342, 343, 346, 347, 790, 793, 795, 798, 800, 803, 805, 812, 814, 816, 818, 820, 822, 824, 826, 828, 830, 832, 837, 839, 842, 844, 848, 851, 854, 1074, 1161, 1168], "manual": [17, 60, 62, 129, 139, 141, 145, 167, 177, 185, 208, 209, 239, 240, 245, 248, 255, 258, 288, 290, 396, 397, 400, 407, 445, 450, 474, 591, 633, 683, 690, 701, 727, 739, 740, 771, 772, 774, 775, 785, 786, 788, 789, 792, 833, 860, 861, 930, 937, 938, 960, 963, 976, 978, 980, 1021, 1023, 1028, 1036, 1037, 1041, 1045, 1086], "theme": [17, 69, 357, 1062, 1081], "url": [17, 167, 174, 176, 185, 197, 547, 1029, 1086], "_static": 17, "ui": [17, 32, 65, 177, 411, 670], "default": [17, 23, 58, 60, 101, 114, 115, 123, 126, 128, 136, 137, 170, 171, 176, 177, 181, 187, 198, 207, 209, 211, 218, 220, 231, 239, 242, 245, 248, 251, 254, 255, 258, 262, 265, 268, 273, 276, 283, 285, 286, 290, 294, 295, 297, 300, 304, 306, 307, 326, 332, 335, 338, 344, 358, 365, 411, 422, 454, 462, 468, 474, 475, 477, 480, 484, 487, 493, 496, 510, 512, 521, 522, 538, 548, 590, 592, 593, 598, 599, 602, 603, 627, 646, 647, 663, 668, 670, 672, 675, 676, 677, 678, 680, 682, 683, 684, 685, 686, 687, 690, 691, 698, 699, 728, 730, 746, 755, 760, 762, 763, 764, 770, 771, 776, 783, 785, 786, 829, 857, 860, 861, 863, 875, 888, 893, 912, 924, 925, 929, 930, 932, 937, 938, 940, 946, 949, 963, 967, 973, 976, 978, 980, 992, 1004, 1006, 1008, 1010, 1021, 1050, 1052, 1058, 1077, 1079, 1081, 1086, 1122, 1139, 1149, 1152, 1154, 1159, 1164, 1166, 1184], "given": [17, 39, 61, 63, 73, 85, 106, 110, 111, 114, 115, 118, 121, 122, 155, 170, 172, 175, 177, 181, 191, 239, 245, 255, 258, 262, 286, 294, 295, 297, 304, 332, 348, 351, 398, 413, 456, 515, 544, 547, 549, 568, 592, 661, 672, 697, 784, 794, 804, 815, 833, 870, 875, 884, 886, 893, 915, 937, 1017, 1029, 1116, 1125, 1131, 1133, 1139, 1150, 1153, 1187, 1199], "path": [17, 21, 101, 103, 128, 134, 158, 159, 166, 175, 198, 202, 210, 213, 230, 241, 242, 243, 247, 250, 254, 255, 258, 276, 285, 286, 306, 307, 310, 312, 313, 328, 329, 332, 339, 344, 349, 350, 351, 356, 358, 365, 370, 432, 468, 474, 476, 479, 480, 482, 496, 510, 538, 539, 540, 541, 542, 543, 544, 545, 548, 549, 550, 590, 615, 747, 763, 785, 786, 797, 811, 823, 833, 859, 860, 861, 862, 863, 866, 867, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 893, 894, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 913, 929, 949, 952, 958, 959, 960, 968, 969, 970, 984, 986, 987, 988, 990, 992, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1021, 1028, 1038, 1055, 1058, 1119, 1159, 1164, 1166, 1174, 1186], "commit": [17, 46, 81, 126, 152, 173, 176, 184, 185, 227, 231, 232, 243, 246, 256, 373, 806, 1131, 1140, 1143, 1164, 1196], "place": [17, 55, 128, 141, 158, 167, 171, 172, 174, 175, 176, 177, 185, 190, 199, 203, 226, 242, 248, 258, 294, 295, 388, 404, 426, 433, 450, 473, 482, 486, 490, 514, 516, 530, 549, 562, 607, 621, 623, 624, 635, 646, 654, 657, 658, 668, 687, 753, 756, 764, 781, 784, 786, 811, 833, 862, 883, 884, 885, 886, 937, 938, 946, 992, 1022, 1024, 1033, 1063, 1072, 1076, 1078, 1096, 1153, 1166], "_download": 17, "7a046b2e956b892f20b3485964f7b2cf": 17, "rel": [17, 82, 103, 128, 170, 177, 206, 222, 243, 276, 285, 286, 306, 307, 383, 496, 510, 538, 539, 540, 541, 542, 543, 544, 545, 548, 590, 707, 712, 763, 785, 786, 833, 860, 861, 862, 863, 866, 867, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 913, 929, 937, 949, 952, 958, 960, 968, 970, 984, 987, 990, 992, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1024, 1135, 1136, 1143, 1156], "up": [17, 21, 27, 32, 34, 35, 38, 43, 45, 53, 82, 126, 137, 141, 145, 160, 167, 169, 170, 171, 173, 175, 177, 180, 185, 189, 190, 221, 227, 232, 237, 239, 243, 245, 255, 258, 270, 275, 277, 286, 295, 321, 334, 350, 368, 372, 378, 379, 446, 453, 462, 463, 468, 472, 476, 477, 497, 546, 547, 548, 549, 562, 585, 609, 610, 611, 612, 615, 662, 667, 732, 735, 748, 749, 762, 784, 792, 796, 801, 802, 804, 815, 817, 825, 829, 833, 834, 872, 893, 894, 912, 925, 930, 932, 937, 938, 939, 946, 956, 989, 995, 1000, 1005, 1007, 1010, 1019, 1028, 1031, 1042, 1046, 1052, 1075, 1088, 1092, 1109, 1114, 1126, 1131, 1136, 1139, 1147, 1159, 1165, 1171, 1176, 1187], "uri": 17, "well": [17, 42, 69, 170, 172, 175, 176, 177, 181, 194, 198, 206, 229, 231, 258, 294, 296, 304, 312, 321, 328, 351, 411, 433, 462, 472, 500, 540, 546, 549, 550, 573, 593, 597, 608, 622, 690, 697, 704, 727, 740, 750, 754, 858, 877, 893, 926, 933, 938, 939, 950, 963, 965, 983, 1007, 1009, 1022, 1030, 1031, 1034, 1038, 1041, 1045, 1048, 1051, 1062, 1066, 1076, 1134, 1136, 1144, 1160, 1186], "blah": [19, 23, 39, 61, 69, 152, 170, 173, 192, 203, 210, 213, 218, 226, 229, 235, 239, 245, 246, 248, 250, 255, 258, 265, 268, 280, 287, 290, 300, 304, 322, 332, 338, 357, 358, 365, 373, 376, 456, 703, 766, 784, 789, 797, 956, 957, 1000, 1001, 1026, 1061, 1067, 1086, 1147], "watch": [20, 32, 171, 172, 173, 191, 198, 202, 206, 207, 211, 297, 299, 303, 473, 740, 930, 938, 974, 1034, 1055, 1157], "w5g8k7a2gbg": 20, "bore": [20, 231, 253, 267, 283, 309, 893, 1001, 1005, 1062, 1131], "good": [20, 27, 29, 43, 101, 128, 167, 169, 170, 171, 172, 177, 185, 194, 202, 206, 209, 227, 230, 231, 239, 243, 248, 249, 250, 252, 253, 256, 262, 277, 279, 289, 292, 295, 297, 303, 304, 325, 334, 384, 407, 411, 452, 456, 458, 466, 467, 472, 495, 496, 510, 538, 539, 540, 541, 542, 543, 544, 545, 548, 555, 557, 573, 590, 594, 598, 599, 613, 616, 619, 635, 641, 645, 648, 654, 657, 658, 663, 667, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 699, 701, 730, 741, 746, 752, 755, 761, 763, 765, 771, 774, 783, 785, 786, 790, 792, 825, 833, 838, 858, 872, 876, 926, 930, 938, 939, 963, 965, 982, 991, 994, 995, 1001, 1004, 1030, 1043, 1061, 1062, 1073, 1076, 1078, 1081, 1093, 1103, 1130, 1131, 1138, 1157, 1186], "j2hzby8e4yq": 20, "pov": 20, "classmethod": [21, 283], "staticmethod": [21, 283], "member": [21, 35, 38, 43, 57, 62, 114, 115, 128, 185, 191, 192, 193, 203, 208, 230, 248, 260, 273, 288, 295, 304, 335, 369, 441, 450, 457, 494, 536, 538, 541, 544, 568, 582, 590, 592, 593, 595, 596, 597, 598, 604, 608, 609, 611, 613, 646, 647, 651, 672, 675, 678, 679, 680, 682, 683, 684, 685, 686, 687, 690, 698, 702, 703, 712, 718, 728, 744, 750, 771, 782, 784, 786, 794, 799, 801, 821, 829, 833, 846, 852, 859, 860, 861, 876, 877, 878, 879, 880, 881, 887, 922, 926, 937, 965, 1019, 1080, 1156, 1176], "final": [21, 38, 42, 60, 82, 110, 166, 192, 202, 206, 209, 229, 231, 239, 245, 246, 255, 260, 273, 279, 303, 325, 335, 474, 547, 549, 614, 615, 664, 690, 701, 730, 771, 785, 786, 796, 827, 833, 860, 861, 926, 938, 939, 1007, 1024, 1028, 1041, 1093, 1109, 1131, 1184], "exec": [21, 29, 177, 202, 211, 242, 256, 257, 265, 272, 284, 288, 290, 298, 299, 300, 304, 311, 320, 324, 331, 333, 786, 921, 926, 959, 962, 983, 1007, 1032, 1129, 1197], "dict": [21, 189, 202, 203, 207, 218, 220, 221, 226, 229, 243, 244, 245, 246, 249, 251, 254, 255, 256, 260, 266, 280, 283, 290, 300, 304, 310, 315, 322, 326, 332, 337, 339, 345, 348, 357, 360, 365, 690, 1028, 1031, 1043, 1044, 1053, 1079], "There": [21, 45, 55, 57, 69, 72, 85, 101, 137, 167, 169, 171, 172, 173, 174, 177, 181, 182, 198, 199, 203, 205, 206, 209, 213, 214, 227, 232, 248, 251, 252, 253, 256, 262, 289, 292, 295, 296, 297, 298, 299, 320, 321, 335, 351, 386, 396, 402, 411, 426, 429, 450, 452, 459, 462, 473, 474, 478, 487, 492, 517, 518, 568, 576, 593, 598, 643, 668, 686, 687, 699, 701, 707, 730, 735, 746, 750, 754, 755, 763, 783, 785, 786, 806, 833, 838, 864, 893, 930, 937, 938, 983, 993, 1004, 1005, 1056, 1062, 1073, 1131, 1140, 1165, 1171], "half": [21, 36, 170, 171, 172, 232, 458, 477, 831, 872, 938, 991, 1028], "heart": [21, 32, 38, 160, 477, 872, 1137], "split": [21, 167, 190, 193, 226, 230, 235, 236, 239, 242, 243, 245, 250, 254, 260, 268, 271, 283, 288, 290, 304, 310, 326, 333, 338, 344, 348, 356, 365, 450, 474, 496, 568, 1028, 1137], "pimp": 21, "elabor": [21, 181, 246, 256, 452, 475, 938], "namespac": [21, 202, 239, 245, 252, 255, 258, 262, 273, 283, 497, 499, 514, 550, 551, 552, 553, 554, 556, 566, 567, 585, 607, 615, 620, 621, 622, 623, 624, 630, 631, 633, 634, 637, 638, 639, 643, 657, 674, 680, 681, 690, 705, 727, 737, 740, 762, 764, 765, 937, 971, 974, 986, 988, 1038], "__init__": [21, 62, 166, 189, 190, 201, 203, 206, 208, 226, 229, 230, 242, 243, 245, 252, 255, 258, 262, 268, 271, 280, 283, 290, 300, 304, 322, 326, 344, 348, 474, 1028, 1029, 1030, 1038, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1164], "__all__": [21, 258, 262], "etc": [21, 23, 29, 62, 94, 104, 128, 159, 163, 167, 171, 175, 184, 187, 188, 192, 199, 206, 209, 213, 214, 216, 219, 220, 227, 228, 230, 231, 233, 237, 240, 242, 243, 245, 249, 250, 253, 259, 260, 261, 262, 264, 265, 267, 269, 272, 282, 283, 286, 289, 290, 292, 300, 302, 303, 305, 308, 309, 325, 326, 330, 331, 332, 336, 337, 338, 342, 343, 344, 346, 347, 351, 352, 353, 354, 355, 356, 365, 370, 373, 383, 406, 411, 467, 477, 485, 499, 582, 670, 732, 738, 765, 784, 786, 792, 806, 833, 845, 855, 863, 865, 868, 870, 873, 875, 876, 877, 878, 889, 893, 896, 907, 910, 912, 913, 915, 917, 918, 919, 920, 921, 922, 924, 926, 929, 939, 940, 941, 949, 950, 953, 954, 955, 960, 966, 975, 986, 1000, 1001, 1005, 1007, 1028, 1030, 1032, 1039, 1040, 1041, 1042, 1046, 1054, 1065, 1074, 1077, 1081, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1141, 1144, 1145, 1151, 1156, 1158, 1179, 1180, 1188, 1190, 1194, 1195, 1198, 1200], "user": [21, 23, 29, 31, 47, 53, 62, 65, 69, 88, 105, 106, 114, 115, 128, 134, 154, 156, 166, 167, 169, 170, 171, 172, 174, 175, 177, 185, 192, 198, 201, 202, 203, 206, 210, 217, 226, 229, 231, 233, 242, 248, 250, 255, 256, 258, 259, 261, 262, 265, 268, 270, 279, 280, 283, 286, 289, 290, 292, 300, 304, 307, 314, 315, 317, 321, 326, 332, 334, 338, 344, 350, 362, 365, 374, 430, 461, 472, 474, 475, 477, 482, 490, 500, 517, 518, 538, 552, 568, 590, 593, 594, 600, 607, 651, 655, 674, 676, 677, 678, 679, 686, 687, 703, 707, 739, 750, 763, 785, 786, 792, 794, 804, 806, 831, 833, 846, 847, 860, 861, 863, 867, 871, 872, 873, 877, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 893, 917, 921, 924, 929, 930, 931, 940, 946, 953, 958, 959, 960, 963, 965, 968, 970, 975, 984, 987, 988, 990, 992, 993, 1004, 1007, 1021, 1023, 1024, 1025, 1028, 1045, 1046, 1083, 1090, 1092, 1093, 1097, 1109, 1110, 1116, 1121, 1123, 1126, 1128, 1129, 1142, 1147, 1150, 1154, 1157, 1166, 1173, 1184], "import": [21, 29, 62, 69, 158, 166, 172, 177, 180, 190, 191, 192, 193, 202, 203, 206, 208, 209, 214, 218, 220, 221, 222, 230, 234, 235, 236, 241, 242, 243, 245, 250, 252, 255, 258, 262, 265, 268, 271, 274, 275, 280, 283, 287, 288, 289, 290, 292, 294, 300, 304, 310, 315, 318, 322, 326, 332, 337, 338, 344, 348, 358, 360, 388, 404, 474, 477, 478, 615, 632, 698, 736, 750, 753, 771, 786, 815, 833, 875, 893, 930, 933, 937, 946, 958, 985, 995, 1006, 1027, 1028, 1029, 1031, 1039, 1041, 1043, 1049, 1050, 1053, 1059, 1060, 1061, 1062, 1063, 1064, 1066, 1071, 1075, 1083, 1084, 1085, 1086, 1119, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1136, 1137, 1139, 1142, 1143, 1145, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1158, 1159, 1161, 1164, 1165, 1168, 1171, 1189, 1194], "pythonpath": [21, 40, 60, 202, 288, 1038, 1086], "goto": [21, 427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786, 1004], "orgi": [21, 482, 694], "perspect": [21, 38, 177, 199], "alwai": [21, 43, 69, 84, 126, 166, 167, 172, 182, 199, 206, 229, 251, 262, 288, 289, 292, 334, 357, 365, 370, 388, 406, 432, 433, 445, 457, 458, 462, 463, 465, 466, 482, 483, 502, 512, 542, 591, 597, 607, 626, 629, 685, 690, 694, 705, 729, 738, 742, 745, 749, 754, 792, 811, 829, 833, 838, 859, 893, 894, 937, 938, 939, 953, 959, 965, 993, 1004, 1009, 1019, 1024, 1030, 1058, 1062, 1076, 1131, 1136, 1137, 1138, 1164, 1165, 1184], "valgrind": [21, 101, 197, 231, 383, 460, 464, 465, 467, 469, 470, 497, 562, 572, 574, 582, 585, 600, 735, 748, 749, 786, 1181, 1182], "supervis": [21, 1138], "hack": [21, 53, 61, 63, 101, 146, 164, 167, 185, 193, 197, 202, 206, 207, 231, 232, 246, 248, 256, 267, 274, 275, 276, 277, 285, 297, 298, 306, 307, 314, 317, 321, 334, 335, 365, 369, 373, 374, 376, 383, 384, 432, 475, 496, 497, 510, 536, 538, 539, 540, 541, 542, 543, 544, 545, 548, 555, 557, 568, 610, 625, 626, 646, 688, 699, 730, 731, 732, 736, 748, 763, 771, 784, 785, 786, 787, 863, 888, 889, 929, 970, 1017, 1055, 1151, 1157, 1164, 1183, 1184, 1198], "someth": [21, 43, 55, 65, 70, 76, 77, 78, 82, 87, 88, 91, 133, 141, 163, 169, 170, 172, 173, 175, 177, 181, 185, 191, 198, 202, 210, 218, 220, 221, 222, 232, 242, 246, 253, 268, 271, 295, 297, 314, 317, 334, 360, 423, 424, 438, 492, 514, 547, 549, 585, 596, 600, 605, 608, 615, 639, 683, 684, 685, 695, 698, 712, 742, 750, 752, 753, 780, 781, 782, 786, 794, 806, 810, 821, 829, 833, 835, 838, 853, 905, 929, 930, 933, 937, 938, 939, 954, 955, 963, 965, 966, 978, 989, 991, 992, 1004, 1019, 1026, 1028, 1029, 1031, 1035, 1052, 1059, 1061, 1066, 1076, 1082, 1113, 1138, 1189], "malloc": [21, 197, 445, 446, 459, 574, 819, 953, 1005, 1007, 1181], "seomth": 21, "cleanup": [21, 170, 189, 376, 591, 667, 703, 747, 1005, 1028, 1165], "obviou": [21, 57, 123, 177, 185, 191, 252, 262, 289, 292, 362, 433, 452, 474, 549, 591, 698, 707, 748, 754, 771, 959, 1001, 1026, 1062, 1073, 1187], "lead": [21, 114, 115, 118, 122, 133, 170, 172, 176, 177, 194, 231, 258, 262, 286, 304, 324, 392, 400, 410, 482, 672, 684, 833, 859, 872, 938, 991, 1000, 1001, 1019, 1046, 1072, 1083, 1093, 1144, 1158], "sever": [21, 91, 128, 170, 230, 231, 430, 499, 504, 678, 689, 831, 889, 930, 1030, 1056, 1067], "duplic": [21, 42, 49, 101, 129, 133, 145, 190, 203, 248, 256, 266, 288, 350, 392, 394, 455, 456, 499, 558, 566, 579, 600, 607, 618, 696, 753, 786, 840, 876, 929, 965, 968, 970, 987, 1113, 1164, 1166], "when": [21, 28, 30, 43, 62, 65, 69, 79, 84, 114, 115, 136, 141, 146, 157, 158, 167, 169, 170, 171, 172, 175, 177, 185, 187, 199, 202, 208, 231, 232, 239, 243, 245, 246, 248, 255, 256, 258, 261, 262, 275, 277, 286, 294, 295, 297, 304, 312, 328, 335, 351, 356, 365, 376, 383, 390, 398, 400, 406, 411, 422, 429, 433, 448, 453, 454, 455, 456, 457, 462, 472, 474, 477, 480, 484, 487, 488, 491, 492, 496, 516, 518, 549, 550, 594, 596, 597, 600, 608, 630, 646, 661, 662, 665, 667, 672, 674, 679, 683, 685, 690, 693, 695, 697, 698, 701, 718, 732, 737, 740, 745, 749, 750, 753, 757, 760, 762, 764, 784, 801, 804, 811, 815, 827, 829, 831, 833, 847, 866, 868, 872, 875, 877, 889, 893, 915, 926, 938, 939, 946, 950, 954, 955, 959, 962, 963, 981, 983, 989, 992, 993, 995, 1000, 1004, 1005, 1007, 1009, 1024, 1028, 1029, 1030, 1035, 1039, 1042, 1048, 1050, 1055, 1058, 1061, 1062, 1064, 1066, 1071, 1072, 1073, 1083, 1122, 1139, 1144, 1149, 1159, 1164, 1166, 1173, 1184, 1186, 1187], "void": [21, 42, 44, 55, 58, 111, 123, 125, 133, 137, 139, 141, 145, 172, 173, 181, 213, 231, 243, 365, 387, 388, 390, 394, 396, 398, 402, 408, 412, 426, 428, 429, 430, 431, 433, 436, 438, 439, 442, 445, 446, 448, 449, 455, 456, 459, 475, 482, 491, 492, 493, 497, 499, 503, 512, 521, 522, 526, 527, 530, 531, 532, 534, 546, 548, 549, 550, 573, 585, 592, 594, 595, 596, 597, 600, 601, 602, 603, 604, 605, 607, 608, 615, 621, 625, 634, 647, 661, 664, 665, 668, 670, 671, 680, 682, 690, 691, 696, 700, 703, 704, 718, 720, 721, 723, 724, 725, 726, 728, 729, 732, 733, 734, 735, 736, 737, 739, 740, 742, 747, 748, 749, 750, 752, 754, 757, 759, 762, 764, 766, 784, 794, 797, 804, 811, 813, 815, 817, 819, 827, 829, 838, 843, 847, 853, 870, 890, 951, 955, 956, 957, 959, 969, 976, 978, 980, 982, 986, 991, 997, 1000, 1001, 1004, 1005, 1007, 1019, 1023, 1025, 1176], "f": [21, 31, 38, 43, 62, 113, 128, 140, 156, 171, 172, 173, 181, 193, 203, 208, 209, 214, 215, 218, 220, 226, 227, 229, 230, 236, 238, 239, 242, 243, 245, 249, 251, 252, 255, 258, 262, 265, 267, 269, 271, 279, 280, 283, 287, 290, 295, 300, 304, 309, 311, 318, 322, 326, 333, 338, 344, 348, 357, 359, 361, 376, 402, 407, 417, 419, 428, 431, 436, 455, 456, 458, 462, 466, 474, 491, 597, 601, 617, 691, 697, 703, 704, 733, 754, 757, 792, 797, 859, 870, 877, 893, 912, 919, 921, 922, 937, 938, 939, 940, 962, 993, 995, 1000, 1015, 1019, 1022, 1026, 1028, 1029, 1030, 1031, 1043, 1045, 1047, 1048, 1051, 1052, 1053, 1072, 1073, 1081, 1088, 1093, 1126, 1128, 1131, 1139, 1164, 1194], "alloc": [21, 136, 172, 173, 190, 192, 231, 239, 242, 245, 255, 258, 280, 400, 429, 445, 450, 453, 456, 459, 497, 581, 583, 597, 599, 600, 607, 626, 631, 638, 643, 654, 658, 662, 687, 698, 701, 735, 740, 749, 750, 754, 784, 786, 789, 792, 794, 819, 821, 835, 838, 870, 876, 955, 956, 957, 977, 1037, 1088], "variabl": [21, 29, 91, 93, 94, 101, 108, 114, 115, 166, 171, 172, 181, 185, 189, 191, 192, 198, 202, 203, 206, 207, 208, 209, 211, 214, 215, 216, 221, 222, 227, 228, 230, 231, 233, 237, 240, 241, 243, 244, 245, 248, 249, 251, 253, 259, 260, 261, 262, 264, 266, 267, 269, 273, 276, 281, 282, 283, 285, 286, 289, 292, 295, 299, 301, 302, 303, 305, 306, 307, 308, 309, 315, 320, 321, 322, 324, 325, 327, 330, 331, 333, 336, 337, 339, 342, 343, 345, 346, 347, 349, 351, 352, 353, 354, 355, 356, 365, 367, 368, 387, 389, 390, 398, 403, 411, 418, 422, 423, 426, 427, 428, 432, 434, 435, 438, 440, 444, 445, 447, 448, 450, 451, 452, 458, 459, 460, 462, 464, 469, 470, 476, 478, 482, 484, 503, 511, 517, 526, 531, 536, 577, 582, 597, 605, 606, 613, 625, 665, 672, 687, 692, 698, 701, 703, 730, 732, 744, 763, 782, 783, 784, 785, 786, 802, 821, 833, 863, 864, 867, 870, 894, 913, 929, 970, 975, 978, 982, 983, 984, 989, 1007, 1017, 1018, 1019, 1024, 1026, 1028, 1031, 1032, 1038, 1039, 1040, 1041, 1042, 1046, 1054, 1058, 1060, 1065, 1069, 1071, 1073, 1074, 1077, 1082, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1138, 1141, 1144, 1145, 1151, 1153, 1158, 1159, 1185, 1187, 1194, 1200], "filenam": [21, 42, 50, 55, 58, 169, 189, 193, 218, 236, 239, 242, 243, 245, 250, 255, 258, 268, 283, 286, 299, 300, 304, 332, 338, 348, 357, 474, 533, 536, 550, 784, 833, 859, 860, 922, 960, 963, 964, 965, 966, 967, 971, 974, 1000, 1028, 1038, 1083, 1088, 1100, 1109, 1111, 1115, 1121, 1123], "getenv": [21, 531, 988], "fopen": 21, "read": [21, 29, 43, 47, 53, 55, 56, 57, 77, 78, 87, 89, 128, 149, 169, 170, 171, 172, 173, 175, 177, 180, 181, 185, 198, 202, 206, 207, 209, 211, 217, 227, 230, 237, 240, 243, 245, 246, 248, 250, 256, 258, 259, 264, 265, 267, 270, 277, 278, 279, 282, 286, 288, 290, 296, 300, 302, 303, 304, 307, 308, 309, 326, 330, 331, 332, 334, 335, 337, 338, 342, 343, 344, 346, 347, 350, 351, 352, 353, 354, 355, 365, 369, 371, 376, 395, 396, 403, 411, 418, 427, 434, 440, 444, 447, 448, 450, 451, 452, 454, 456, 459, 460, 464, 468, 469, 470, 473, 489, 496, 517, 533, 538, 549, 550, 573, 579, 590, 593, 594, 596, 599, 602, 605, 651, 655, 674, 677, 689, 692, 699, 707, 730, 744, 752, 780, 783, 784, 785, 786, 792, 806, 817, 833, 835, 859, 860, 861, 864, 870, 875, 876, 877, 878, 880, 881, 884, 893, 894, 926, 929, 933, 937, 938, 939, 946, 951, 953, 954, 956, 957, 960, 963, 966, 968, 969, 970, 971, 973, 974, 981, 983, 987, 991, 997, 1000, 1001, 1004, 1005, 1024, 1030, 1031, 1046, 1049, 1051, 1059, 1067, 1089, 1090, 1100, 1109, 1119, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1137, 1139, 1147, 1154, 1197], "onli": [21, 29, 42, 43, 65, 93, 112, 114, 115, 128, 129, 133, 136, 146, 160, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 180, 181, 185, 190, 191, 198, 202, 206, 208, 209, 227, 229, 232, 239, 242, 245, 248, 249, 250, 252, 255, 256, 258, 259, 261, 262, 267, 269, 270, 271, 282, 283, 286, 288, 289, 295, 299, 302, 304, 308, 309, 312, 321, 328, 330, 336, 337, 342, 343, 346, 347, 356, 359, 373, 380, 390, 396, 398, 399, 400, 402, 407, 408, 410, 415, 422, 423, 426, 428, 430, 431, 432, 433, 449, 450, 454, 455, 456, 457, 458, 467, 472, 474, 475, 477, 478, 481, 483, 486, 487, 491, 492, 493, 495, 503, 511, 512, 514, 516, 517, 518, 530, 531, 546, 547, 550, 553, 554, 568, 579, 592, 593, 594, 595, 597, 599, 601, 602, 605, 607, 608, 614, 628, 630, 646, 647, 651, 661, 662, 664, 668, 672, 676, 677, 684, 686, 690, 697, 701, 703, 707, 712, 718, 728, 732, 735, 739, 740, 744, 745, 749, 750, 756, 758, 760, 762, 764, 770, 774, 776, 777, 786, 789, 791, 794, 797, 802, 813, 819, 829, 833, 838, 841, 846, 850, 858, 859, 860, 861, 868, 871, 875, 877, 878, 883, 889, 893, 894, 915, 922, 930, 931, 932, 937, 938, 939, 940, 950, 955, 956, 959, 961, 962, 963, 967, 969, 973, 975, 978, 983, 986, 989, 991, 992, 993, 994, 1000, 1001, 1004, 1005, 1007, 1008, 1019, 1023, 1024, 1028, 1029, 1030, 1033, 1039, 1043, 1045, 1048, 1050, 1051, 1056, 1057, 1058, 1059, 1061, 1062, 1063, 1064, 1066, 1067, 1071, 1076, 1077, 1081, 1083, 1086, 1090, 1095, 1103, 1105, 1106, 1109, 1110, 1114, 1116, 1129, 1131, 1136, 1137, 1138, 1140, 1143, 1152, 1156, 1157, 1164, 1170, 1171, 1173, 1176, 1184, 1186, 1189, 1201], "bullshit": [21, 69, 214, 226, 262, 477, 740, 1194], "everyon": [21, 69, 170, 175, 185, 206, 472, 677, 728, 880, 881, 891, 993], "get": [21, 55, 62, 101, 114, 115, 158, 159, 166, 167, 170, 172, 173, 180, 181, 189, 202, 203, 206, 208, 213, 220, 221, 222, 229, 231, 232, 239, 242, 245, 246, 248, 251, 252, 255, 258, 265, 271, 275, 277, 280, 283, 286, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 360, 365, 368, 370, 385, 411, 456, 465, 488, 492, 497, 512, 521, 526, 603, 610, 682, 690, 700, 718, 724, 744, 745, 748, 749, 750, 751, 753, 766, 776, 784, 786, 794, 799, 806, 833, 835, 849, 852, 866, 868, 872, 873, 893, 929, 939, 946, 949, 955, 956, 957, 970, 972, 977, 994, 1001, 1005, 1022, 1028, 1041, 1044, 1050, 1054, 1062, 1079, 1149, 1156, 1166, 1171, 1176, 1189], "point": [21, 34, 36, 38, 40, 60, 93, 101, 110, 113, 116, 117, 118, 121, 126, 128, 146, 169, 170, 171, 172, 174, 175, 176, 177, 180, 181, 185, 190, 191, 192, 193, 197, 202, 206, 207, 208, 209, 211, 229, 231, 232, 239, 242, 245, 248, 255, 258, 263, 266, 288, 297, 304, 321, 322, 324, 348, 351, 371, 372, 373, 376, 387, 388, 389, 394, 400, 402, 404, 406, 410, 432, 435, 438, 441, 442, 445, 446, 456, 458, 487, 492, 495, 502, 503, 511, 534, 536, 548, 568, 569, 570, 593, 595, 597, 599, 600, 601, 603, 604, 606, 609, 613, 624, 625, 633, 648, 649, 662, 667, 668, 687, 690, 693, 695, 697, 701, 707, 718, 740, 744, 749, 753, 765, 784, 786, 829, 833, 862, 870, 872, 876, 877, 893, 930, 931, 939, 949, 953, 956, 959, 992, 1005, 1008, 1021, 1025, 1026, 1027, 1029, 1033, 1041, 1067, 1071, 1073, 1076, 1138, 1140, 1142, 1144, 1164, 1166, 1173, 1176, 1181, 1185], "unobvi": [21, 833], "best": [21, 30, 39, 48, 57, 133, 170, 171, 172, 181, 194, 251, 398, 430, 452, 459, 462, 463, 472, 551, 595, 600, 664, 729, 742, 762, 821, 823, 825, 829, 831, 870, 893, 915, 931, 938, 939, 975, 989, 993, 1021, 1035, 1041, 1078, 1083, 1085, 1142, 1152], "resourc": [21, 84, 101, 114, 115, 170, 172, 175, 187, 197, 232, 248, 289, 292, 297, 334, 335, 368, 376, 504, 568, 582, 593, 597, 598, 662, 687, 698, 699, 701, 730, 735, 746, 747, 749, 750, 755, 762, 763, 783, 785, 786, 817, 819, 827, 866, 870, 871, 938, 955, 956, 957, 975, 989, 992, 1028, 1081], "leaki": 21, "erron": [21, 459, 1093], "worst": [21, 170, 430, 939, 991, 1004, 1184, 1187], "extract": [21, 29, 55, 101, 159, 163, 230, 256, 259, 264, 267, 279, 282, 302, 303, 308, 309, 330, 331, 337, 342, 343, 346, 347, 414, 433, 537, 538, 568, 579, 590, 784, 786, 833, 846, 859, 1021, 1046, 1068, 1090, 1124, 1125, 1126, 1127, 1129, 1137], "common": [21, 24, 162, 170, 227, 243, 244, 256, 262, 267, 338, 433, 442, 473, 548, 626, 753, 770, 774, 784, 858, 930, 931, 939, 963, 1000, 1030, 1035, 1036, 1037, 1053, 1062, 1063, 1067, 1073, 1077, 1080, 1131, 1139, 1140, 1164, 1187], "hm": [21, 32, 62, 210, 220, 239, 242, 245, 252, 357, 823, 849, 850, 957, 1050, 1135, 1166, 1171, 1173], "end": [21, 23, 32, 37, 42, 110, 164, 169, 172, 173, 175, 177, 180, 202, 203, 208, 209, 214, 218, 222, 242, 243, 245, 246, 248, 258, 262, 265, 268, 282, 283, 304, 310, 317, 322, 338, 344, 348, 356, 357, 394, 397, 401, 422, 438, 450, 454, 455, 456, 458, 461, 462, 465, 495, 517, 518, 526, 527, 530, 531, 532, 582, 585, 597, 621, 623, 625, 626, 627, 629, 630, 632, 633, 634, 636, 637, 639, 643, 646, 650, 651, 657, 674, 690, 718, 721, 725, 732, 738, 739, 740, 742, 747, 748, 761, 762, 825, 831, 833, 849, 876, 877, 878, 893, 921, 925, 926, 937, 939, 955, 956, 957, 959, 965, 981, 1000, 1033, 1053, 1057, 1059, 1066, 1069, 1073, 1077, 1081, 1152, 1154, 1156, 1159, 1194, 1197], "sketch": [21, 64, 67, 133, 146, 167, 173, 202, 209, 210, 222, 231, 232, 299, 321, 369, 373, 435, 436, 446, 458, 690, 790, 802, 1000], "clearest": 21, "ach": 21, "bad": [21, 43, 134, 166, 169, 172, 179, 194, 202, 227, 233, 249, 250, 252, 261, 262, 277, 298, 299, 320, 334, 411, 454, 458, 472, 614, 680, 730, 741, 748, 766, 785, 786, 801, 813, 838, 841, 950, 951, 976, 978, 982, 983, 1004, 1023, 1028, 1030, 1043, 1044, 1055, 1062, 1073, 1103, 1131, 1184], "earliest": 21, "noth": [21, 43, 62, 133, 160, 169, 170, 172, 175, 180, 185, 199, 210, 229, 242, 268, 321, 386, 425, 432, 456, 474, 481, 585, 664, 698, 705, 718, 732, 735, 801, 811, 829, 831, 865, 915, 930, 938, 939, 954, 956, 978, 1000, 1005, 1031, 1038, 1050, 1071, 1073, 1079, 1164, 1171, 1173], "jump": [21, 45, 108, 169, 422, 426, 585, 732, 735, 742, 872, 925, 1004, 1139], "outest": 21, "level": [21, 82, 170, 171, 181, 239, 245, 255, 258, 279, 312, 328, 376, 400, 426, 432, 472, 475, 477, 478, 484, 492, 500, 711, 712, 784, 815, 817, 829, 836, 845, 869, 930, 937, 946, 950, 1009, 1017, 1030, 1038, 1050, 1071, 1081, 1106, 1110, 1140, 1143, 1153, 1159, 1186], "cleanup_stage1": 21, "screenplai": [22, 59, 163, 172, 193, 197, 249, 261, 270, 288, 296, 298, 309, 317, 320, 321, 324, 325, 330, 331, 336, 337, 342, 343, 346, 347, 365, 473, 489, 497, 568, 571, 574, 577, 580, 583, 586, 589, 625, 626, 646, 790, 793, 798, 803, 807, 809, 845, 848, 851, 854, 998, 1002, 1006, 1074, 1161, 1168, 1172, 1174, 1177], "dies": [23, 150, 178, 179, 184, 187, 188, 189, 197, 203, 213, 214, 218, 226, 233, 250, 252, 258, 259, 262, 365, 370, 383, 1179, 1181, 1182, 1183, 1188, 1194, 1195, 1197, 1201, 1202], "einreichungsunterlagen": 23, "diesem": [23, 179, 213, 1181, 1198], "formular": 23, "projekten": [23, 1195, 1196], "mehrer": [23, 150, 1188], "projektpartn": 23, "muss": [23, 193, 203, 213, 218, 259, 365, 370, 1179, 1181, 1188, 1195], "federf\u00fchrend": 23, "auftreten": 23, "projektleitung": 23, "projektabwicklung": 23, "seiten": 23, "f\u00f6rdergeb": 23, "erfolgtausschlie\u00dflich": 23, "federf\u00fchrenden": 23, "antragstel": 23, "s\u00e4mtlich": 23, "weiterenprojektpartn": 23, "innen": 23, "zus\u00e4tzlich": [23, 150, 178], "anzugeben": 23, "aufteilung": 23, "f\u00f6rdersumm": 23, "erfolgen": [23, 184, 214], "soll": [23, 179, 205, 234, 273, 1178], "punkt": [23, 150, 179, 189, 205, 215, 259], "erfolgreichemf\u00f6rderantrag": 23, "anschluss": 23, "f\u00f6rdervertrag": 23, "erstellt": 23, "derzuerkannten": 23, "\u00fcberweisungen": 23, "f\u00f6rderraten": 23, "anteil": 23, "dieprojektpartn": 23, "fall": [23, 150, 179, 188, 202, 205, 213, 218, 262, 273, 414, 422, 540, 712, 718, 815, 973, 974, 991, 1133, 1153], "allenprojektpartn": 23, "unterschreiben": 23, "verbindlich": 23, "vereinbart": 23, "privatperson": 23, "organis": [23, 231], "uni": 23, "contemporari": 23, "open": [23, 34, 35, 38, 39, 42, 48, 49, 54, 62, 72, 118, 123, 124, 128, 146, 169, 170, 173, 177, 185, 187, 191, 193, 207, 209, 211, 220, 229, 230, 232, 236, 239, 242, 243, 245, 250, 253, 258, 265, 268, 270, 283, 286, 288, 290, 295, 297, 300, 304, 326, 332, 338, 344, 348, 357, 372, 411, 472, 474, 480, 799, 827, 835, 860, 861, 869, 870, 872, 875, 877, 918, 937, 946, 954, 955, 960, 963, 965, 966, 969, 971, 974, 975, 997, 1000, 1004, 1007, 1024, 1030, 1031, 1100, 1126, 1128, 1139, 1164, 1179, 1196, 1197], "wer": [23, 178], "unser": [23, 206, 214, 1179], "motiv": [23, 28, 101, 872, 891, 989, 1036, 1037], "300": [23, 189, 191, 203, 239, 242, 245, 250, 252, 258, 262, 265, 283, 304, 310, 326, 332, 338, 344, 348, 357, 388, 390, 392, 408, 432, 620, 621, 622, 623, 624, 626, 627, 628, 629, 643, 806], "zeichen": [23, 252], "lebe": 23, "einerseit": [23, 184], "kleineren": [23, 150], "gr\u00f6\u00dferen": [23, 1196], "andererseit": [23, 184], "haupts\u00e4chlich": [23, 214, 1194], "unternehmen": 23, "halt": [23, 114, 115, 213, 242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344, 866, 924, 939], "bringen": [23, 1179], "schulungsunterlagen": [23, 1178], "wartbarkeit": 23, "nichtverf\u00fcgbarkeit": 23, "problem": [23, 45, 57, 84, 111, 123, 128, 133, 158, 170, 177, 186, 189, 191, 193, 194, 200, 202, 203, 206, 207, 209, 211, 222, 226, 231, 248, 250, 256, 270, 275, 277, 288, 292, 295, 296, 298, 299, 307, 312, 313, 321, 324, 328, 329, 334, 335, 351, 372, 383, 411, 422, 432, 433, 436, 450, 456, 458, 474, 479, 503, 518, 562, 568, 603, 617, 630, 662, 665, 689, 762, 768, 779, 785, 786, 833, 872, 932, 993, 1017, 1019, 1023, 1028, 1033, 1035, 1038, 1039, 1050, 1062, 1076, 1126, 1131, 1133, 1137, 1156, 1164, 1165, 1179, 1186, 1187], "darstellt": 23, "wen": 23, "nutzen": [23, 1197], "400": [23, 167, 172, 189, 203, 213, 242, 245, 287, 304, 322, 338, 348, 474, 643, 1088, 1091], "stellen": [23, 184], "kursverlauf": 23, "vorhandenem": 23, "zusammen": [23, 150, 1178], "bereiten": [23, 213], "kursergebniss": 23, "editoren": 23, "kreieren": 23, "warten": 23, "kursmateri": 23, "endbenutz": 23, "konsumieren": 23, "usecas": [23, 950, 1053], "gel\u00f6st": [23, 203], "500": [23, 213, 220, 239, 242, 245, 287, 332, 338, 348, 643, 930, 957, 1088, 1091], "hierarchisch": 23, "gruppierung": 23, "einzelthemen": 23, "zuwenig": 23, "bauen": [23, 1181, 1191, 1200], "aufeinand": [23, 920], "explizit": [23, 187, 197, 203, 213, 273, 300, 1181, 1182, 1198], "abh\u00e4ngigkeitsbeziehungen": [23, 1191], "fehlen": 23, "extrem": [23, 170, 229, 250, 258, 265, 268, 290, 365, 370, 433, 472, 625, 694, 742, 833, 860, 861, 1143, 1179, 1191], "verringert": 23, "zusammenarbeit": [23, 1178], "trainern": 23, "fehlend": [23, 189], "aggregierbarkeit": 23, "bzw": [23, 178, 187, 193, 197, 219, 383, 1188, 1195, 1197], "referenzierbarkeit": 23, "fremdunterlagen": 23, "analog": [23, 203, 1000, 1149], "librari": [23, 62, 75, 78, 82, 89, 101, 107, 108, 110, 112, 114, 115, 128, 146, 150, 170, 172, 181, 189, 191, 193, 198, 199, 200, 207, 209, 211, 230, 232, 239, 245, 255, 258, 262, 274, 275, 286, 288, 312, 313, 328, 329, 335, 366, 367, 368, 383, 384, 387, 388, 397, 405, 428, 445, 455, 462, 468, 478, 479, 483, 484, 486, 487, 496, 510, 533, 536, 538, 539, 540, 541, 542, 543, 544, 545, 548, 550, 557, 576, 590, 591, 635, 641, 645, 653, 654, 655, 657, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 707, 712, 738, 763, 784, 785, 786, 811, 863, 866, 867, 929, 950, 951, 952, 957, 958, 960, 967, 968, 970, 975, 978, 984, 987, 990, 992, 1004, 1007, 1008, 1009, 1010, 1012, 1013, 1014, 1015, 1017, 1019, 1054, 1056, 1071, 1073, 1076, 1143, 1160, 1173, 1181, 1183, 1185, 1186, 1197, 1199], "anfangen": 23, "geben": [23, 1182, 1183], "trainingsunterlagen": 23, "ging": [23, 178, 383], "funktioniert": [23, 203, 252], "projektergebni": 23, "basiert": [23, 273, 1179, 1182, 1191, 1198], "popul\u00e4ren": 23, "dokumentationstool": 23, "gestaltet": [23, 197, 1178, 1188], "eigentlich": [23, 189, 203, 1179, 1182], "kern": 23, "begleitet": [23, 205], "meinem": [23, 179, 188, 214, 921, 1194], "eigenen": [23, 1188, 1195], "quasi": [23, 150, 193, 197], "spin": [23, 762, 836, 870], "off": [23, 129, 136, 169, 171, 172, 175, 180, 191, 202, 222, 265, 411, 414, 453, 461, 462, 477, 483, 484, 539, 540, 545, 585, 665, 718, 753, 827, 838, 864, 889, 917, 930, 937, 939, 965, 974, 983, 993, 1000, 1059, 1077, 1111, 1136, 1189], "anwendbar": [23, 1201], "klarer": 23, "bezug": [23, 259], "f\u00f6rdervoraussetzung": 23, "bitt": [23, 178, 197, 203, 213, 214, 348, 1178, 1194], "gehen": 23, "folgenden": [23, 150, 197, 383, 921], "ausschlie\u00dflich": 23, "jene": 23, "aspekt": [23, 1180, 1188, 1195, 1198], "klaren": 23, "mehrwert": 23, "technologi": [23, 242, 991, 1007, 1088], "infrastruktur": [23, 1179, 1188, 1195], "sozial": 23, "gesellschaft": 23, "umwelt": 23, "wirtschaftlich": [23, 205], "wissenschaftlich": 23, "kooperationen": 23, "regionalpolitik": 23, "framework": [23, 82, 187, 197, 206, 232, 248, 488, 547, 937, 939, 1157, 1164, 1165, 1200, 1202], "jeglich": [23, 1188], "art": [23, 32, 45, 1019, 1187], "konsistenzgecheckt": 23, "crossreferenc": 23, "webseiten": 23, "hinweg": [23, 214, 1194], "erm\u00f6glicht": [23, 205, 383], "gesellschaftlich": 23, "\u00f6ffentlich": [23, 184, 1178], "verf\u00fcgbarkeit": 23, "erleichterung": 23, "machen": [23, 178, 189, 193, 203, 252, 360, 383, 1179, 1182, 1183, 1188, 1202], "commun": [23, 62, 76, 77, 78, 82, 85, 87, 91, 126, 155, 158, 170, 185, 194, 202, 217, 286, 321, 362, 371, 372, 448, 492, 763, 764, 785, 786, 792, 833, 845, 866, 929, 930, 937, 938, 939, 954, 959, 970, 975, 984, 991, 994, 1000, 1005, 1039, 1127, 1130, 1147, 1184, 1187, 1189, 1198, 1199], "trainerinnen": 23, "kann": [23, 37, 178, 179, 187, 193, 197, 203, 213, 226, 233, 273, 326, 365, 370, 383, 1178, 1179, 1181, 1183, 1188, 1195, 1196, 1197, 1200, 1202], "sch\u00f6pfen": 23, "trainerinnenn": 23, "gegeneinand": 23, "genau": [23, 187, 189, 203, 360, 921, 1181, 1198, 1200, 1201], "die_der": 23, "adressat_in": 23, "je": [23, 32, 179, 213], "konkret": 23, "eingrenzen": 23, "desto": 23, "dieser": [23, 37, 178, 197, 213, 265, 360, 383, 1178, 1179, 1180, 1188, 1190, 1191, 1197, 1198], "adressat_innen": 23, "ber\u00fccksichtigen": 23, "wahrscheinlich": [23, 193, 1188, 1195], "deshalb": 23, "nachhaltig": 23, "wirkung": 23, "weil": [23, 189, 203, 205, 226, 265, 322, 383, 1179, 1181, 1183], "speziellen": 23, "konzepten": 23, "unterschiedlich": [23, 214, 259, 1194], "zielgruppen": 23, "beziehung": [23, 197], "zueinand": 23, "stehen": [23, 203, 1200], "anbieter_innen": 23, "nachfrager_innen": 23, "drei": [23, 150, 178, 189, 197, 203, 213, 218, 220, 239, 242, 250, 252, 255, 258, 265, 268, 283, 290, 300, 304, 310, 322, 326, 344, 348, 360], "angeben": 23, "m\u00f6glichst": 23, "erheblich": 23, "ihrer": [23, 250, 365, 370, 1188, 1195], "jeweiligen": [23, 1178], "sein": [23, 179, 187, 188, 205, 213, 214, 226, 252, 290, 1179, 1181, 1194, 1195, 1197, 1200, 1201, 1202], "dann": [23, 179, 189, 197, 203, 214, 252, 258, 259, 265, 300, 383, 1179, 1191, 1194, 1202], "einzelnen": 23, "aussieht": [23, 1180], "erst": [23, 197, 213, 226, 252, 259, 265, 283, 322, 338, 360, 1179, 1181], "bestandteil": [23, 1200], "n": [23, 35, 38, 40, 50, 62, 115, 125, 172, 181, 189, 190, 191, 197, 203, 213, 218, 220, 221, 229, 231, 234, 235, 236, 239, 242, 243, 245, 248, 250, 252, 255, 258, 262, 265, 268, 280, 283, 290, 294, 300, 304, 322, 326, 332, 338, 344, 348, 356, 357, 358, 360, 365, 387, 388, 390, 394, 396, 398, 400, 402, 407, 410, 420, 422, 428, 429, 433, 438, 446, 450, 455, 474, 475, 482, 549, 582, 601, 607, 625, 671, 672, 675, 676, 678, 679, 682, 683, 684, 685, 686, 687, 695, 697, 712, 786, 811, 847, 866, 870, 880, 890, 893, 906, 922, 924, 925, 939, 951, 953, 954, 955, 956, 957, 963, 964, 966, 991, 997, 1001, 1004, 1007, 1013, 1019, 1023, 1025, 1050, 1051, 1053, 1068, 1070, 1075, 1076, 1081, 1082, 1126, 1128, 1164, 1176], "l\u00f6sen": 23, "wollen": [23, 37, 218, 383, 1183, 1188, 1191, 1195, 1197], "hilfestellung": 23, "abgrenzung": 23, "organisationen": 23, "privatpersonen": 23, "bestimmt": 23, "branch": [23, 50, 54, 60, 126, 162, 173, 176, 185, 289, 292, 426, 467, 468, 776, 806, 833, 835, 845, 937, 939, 1066, 1196, 1202], "gruppen": 23, "staatlich": 23, "verwaltung": 23, "privat": [23, 57, 106, 111, 118, 123, 124, 128, 146, 172, 184, 185, 197, 199, 206, 207, 210, 230, 243, 248, 260, 279, 295, 297, 317, 364, 365, 370, 482, 486, 491, 493, 497, 499, 504, 514, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 536, 576, 582, 591, 595, 597, 599, 600, 602, 603, 604, 606, 608, 618, 633, 634, 651, 661, 663, 664, 676, 687, 690, 693, 694, 696, 697, 700, 701, 712, 714, 715, 716, 718, 720, 721, 724, 725, 726, 727, 733, 734, 735, 748, 749, 750, 753, 754, 762, 764, 770, 772, 774, 776, 786, 827, 862, 863, 868, 882, 888, 929, 946, 1051, 1159, 1176, 1198], "verein": 23, "npo": 23, "wissenschaft": 23, "universit\u00e4t": 23, "fachhochschulen": 23, "richtungen": 23, "regionen": 23, "stadt": [23, 235], "land": [23, 480, 771], "bezirk": 23, "gemeinden": 23, "interessensgruppen": 23, "selbstvermarkter_innen": 23, "landwirtschaft": 23, "handwerk": 23, "u": [23, 32, 34, 35, 36, 38, 42, 53, 61, 63, 128, 152, 172, 175, 180, 190, 200, 203, 206, 208, 214, 231, 242, 246, 250, 252, 255, 258, 280, 287, 304, 324, 410, 441, 466, 750, 802, 808, 843, 870, 878, 889, 890, 892, 893, 917, 930, 937, 939, 958, 995, 1004, 1007, 1017, 1025, 1062, 1064, 1088, 1139, 1143, 1147, 1159, 1164, 1171, 1187, 1194], "altersgrupp": 23, "genderspezifisch": 23, "frauen": 23, "region": [23, 170, 789, 817], "grupp": [23, 218, 374, 921], "sch\u00fcler_innen": 23, "lehrer_innen": 23, "thematisch": 23, "deutsch": [23, 234, 363, 364, 1178], "fl\u00fcchtling": 23, "posit": [23, 29, 62, 126, 177, 203, 206, 207, 209, 211, 213, 218, 226, 230, 239, 246, 250, 255, 256, 258, 265, 268, 279, 282, 289, 292, 294, 296, 298, 299, 302, 304, 308, 310, 314, 317, 320, 321, 324, 325, 326, 332, 338, 351, 396, 433, 446, 585, 626, 633, 642, 643, 766, 786, 893, 930, 938, 954, 955, 959, 1000, 1028, 1029, 1032, 1073, 1074, 1076, 1077, 1078, 1129, 1144, 1152, 1166, 1171], "zielgruppentyp": 23, "350": [23, 242, 245, 290, 304, 332, 338, 344, 348, 1088], "bereitet": 23, "vor": [23, 178, 179, 193, 203, 215, 250, 348, 1191, 1200], "lt": [23, 32, 35, 36, 172, 177, 189, 192, 197, 198, 203, 208, 213, 218, 220, 226, 229, 234, 239, 242, 245, 250, 252, 255, 258, 262, 265, 268, 271, 280, 283, 287, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 359, 360, 361, 538, 555, 557, 590, 635, 641, 645, 654, 657, 658, 687, 786], "zielvorgaben": 23, "basierend": [23, 189, 1178, 1183], "existierendem": 23, "f\u00fchrt": [23, 179, 1198], "jederzeit": [23, 184, 193, 383], "\u00fcberblick": [23, 193, 197, 259, 273, 383, 384, 1178, 1186, 1188, 1194, 1195, 1198, 1200], "behaltend": 23, "behandelten": 23, "fragen": [23, 205, 221, 365, 370, 383, 1178, 1188, 1195], "antworten": [23, 205], "info": [23, 180, 287, 288, 338, 462, 466, 467, 468, 474, 475, 477, 600, 749, 808, 938, 978, 1008, 1009, 1164], "bed\u00fcrfni": [23, 178], "schulungsagenden": 23, "erstellen": [23, 383, 1183, 1188], "zeitaufw\u00e4ndig": 23, "fehlertr\u00e4chtig": 23, "vom": [23, 68, 178, 187, 188, 189, 203, 213, 214, 233, 258, 262, 1188, 1194, 1195, 1202], "erwartet": [23, 179, 203], "w\u00e4hrend": [23, 150, 1178], "einzugehen": [23, 205, 1201], "geplanten": [23, 1178], "verlassen": [23, 855], "birgt": 23, "chao": [23, 891, 1062], "teilnehmerinnen": 23, "\u00fcbersichtlich": 23, "nachbearbeitung": 23, "hinterlassen": [23, 178], "absch\u00e4tzung": 23, "zielgruppengr\u00f6\u00df": 23, "affinem": 23, "background": [23, 181, 274, 275, 277, 334, 335, 688, 692, 718, 730, 757, 783, 785, 786, 808, 871, 938, 976, 985, 991, 1039], "inklus": [23, 190, 203, 213, 226, 338, 1178, 1183, 1188], "betroffen": 23, "eu": [23, 32], "20000": [23, 169, 245], "erkennung": 23, "abstand": 23, "erfordert": [23, 1188], "vgl": [23, 203, 1198, 1201], "frosch": 23, "wassergla": 23, "selbst": [23, 37, 193, 203, 213, 855, 1178, 1179, 1188, 1191, 1197, 1202], "umstellung": 23, "zus\u00e4tzlichen": 23, "bedeutet": [23, 334], "besten": [23, 193, 259, 1181], "einsatz": [23, 1179], "erw\u00e4gung": 23, "ziehen": 23, "angegebenen": [23, 150], "erheblichen": [23, 1181], "bed\u00fcrfnissen": 23, "kenntni": 23, "erlangt": 23, "mitgli": 23, "editor": [23, 30, 62, 185, 202, 351, 918, 1055, 1059, 1138, 1157], "verfasst": 23, "identisch": 23, "obig": 23, "behebt": 23, "inkonsistenzen": 23, "baut": [23, 1179, 1197], "neue": [23, 203, 213, 245, 273, 322, 338, 360, 383, 1198], "verliert": [23, 1202], "aufbaubeziehungen": 23, "verlangt": [23, 1178], "grundlag": 23, "folienmateri": 23, "meist": [23, 1197], "powerpoint": [23, 30], "propriet\u00e4r": 23, "formaten": 23, "praktisch": [23, 150, 189, 1178], "unm\u00f6glich": 23, "macht": [23, 187, 189, 193, 197, 203, 209, 213, 255, 259, 360, 1181, 1188, 1195, 1202], "artefakttypen": 23, "livehack": [23, 24, 59, 128, 163, 189, 195, 197, 206, 207, 214, 233, 246, 248, 249, 261, 270, 275, 277, 278, 286, 289, 296, 298, 303, 309, 314, 317, 320, 321, 324, 325, 330, 331, 336, 337, 342, 343, 346, 347, 365, 383, 473, 489, 496, 568, 784, 786, 798, 835, 1074, 1161, 1168, 1194], "st\u00fcckwerk": 23, "trainerin": 23, "oben": [23, 134, 150, 178, 203, 214, 220, 1194], "zielt": 23, "darauf": [23, 178, 189, 1178, 1181], "transpar": [23, 29, 37, 817, 819, 869, 1144], "wiederzuverwenden": 23, "sodass": [23, 37, 197, 1197, 1202], "aufgebrochen": 23, "schwer": [23, 193, 203, 383, 1188, 1195, 1200], "abzusch\u00e4tzen": 23, "abzielt": 23, "weg": [23, 178, 179, 189, 193, 205, 218, 233, 273, 383, 1179, 1181, 1182, 1183, 1195], "dorthin": 23, "m\u00fcssen": [23, 150, 203, 365, 370, 1188, 1195], "unterst\u00fctzt": [23, 1202], "kursf\u00fchrung": [23, 383], "fragt": [23, 179], "unklarheiten": 23, "weist": [23, 178], "etwaig": 23, "verwandt": [23, 1181], "hin": [23, 383], "plausibl": [23, 172], "realistisch": 23, "bzgl": 23, "kursdauer": 23, "strukturierten": [23, 214], "langweiligen": 23, "tatsachen": 23, "entsprechend": 23, "hunderttausend": 23, "allerd": [23, 203, 205, 1182, 1183, 1197, 1202], "keinen": [23, 178, 322, 1181], "einfluss": 23, "wahl": [23, 1202], "gespr\u00e4ch": 23, "betroffenen": 23, "assoziieren": 23, "metadaten": 23, "setzt": [23, 150, 187, 1179, 1188], "vorau": 23, "beziehungen": 23, "passt": [23, 213, 214, 1194], "ganz": [23, 178, 179, 188, 189, 193, 203, 205, 219, 220, 234, 251, 252, 348, 383, 1182, 1183, 1197], "gut": [23, 150, 178, 179, 203, 214, 383, 701, 1178, 1194], "y": [23, 115, 152, 181, 190, 191, 193, 220, 229, 235, 236, 242, 243, 245, 246, 258, 268, 271, 280, 283, 290, 300, 304, 310, 326, 332, 344, 348, 411, 417, 435, 438, 441, 442, 446, 458, 462, 474, 536, 546, 592, 593, 594, 595, 597, 599, 600, 601, 602, 603, 604, 606, 608, 610, 611, 618, 625, 633, 672, 693, 694, 695, 697, 712, 714, 715, 716, 733, 744, 753, 801, 802, 833, 834, 866, 880, 893, 895, 906, 912, 937, 938, 939, 1013, 1021, 1027, 1085, 1088, 1136], "algorithmen": [23, 273, 1183], "automatisch": [23, 1198, 1202], "berechnen": 23, "semiautomatisch": 23, "kursnavig": 23, "nachbereitung": 23, "plaintext": 23, "artefakt": [23, 1183], "text": [23, 27, 39, 40, 59, 166, 180, 191, 202, 205, 210, 211, 218, 230, 231, 236, 243, 250, 252, 270, 273, 276, 283, 285, 304, 306, 348, 407, 481, 786, 863, 925, 929, 956, 1007, 1055, 1062, 1068, 1077, 1086, 1109, 1143, 1150, 1155, 1157, 1191], "restrukturierung": 23, "o": [23, 29, 32, 38, 62, 82, 89, 94, 101, 102, 104, 111, 114, 115, 128, 141, 145, 149, 152, 163, 170, 172, 173, 180, 181, 189, 193, 197, 207, 209, 210, 211, 213, 218, 220, 221, 227, 230, 231, 235, 237, 240, 241, 242, 243, 246, 247, 248, 249, 254, 255, 259, 260, 261, 262, 264, 266, 269, 271, 273, 276, 280, 282, 285, 286, 287, 289, 290, 292, 295, 296, 299, 301, 302, 303, 305, 306, 308, 310, 320, 322, 324, 325, 330, 331, 332, 336, 337, 339, 342, 343, 345, 346, 349, 350, 351, 352, 353, 354, 355, 356, 365, 370, 372, 383, 385, 387, 403, 418, 427, 433, 434, 438, 440, 444, 447, 450, 451, 460, 462, 464, 466, 467, 469, 470, 474, 475, 481, 486, 500, 527, 538, 549, 590, 608, 692, 730, 756, 762, 763, 764, 783, 784, 785, 786, 801, 802, 810, 811, 833, 840, 859, 860, 861, 862, 863, 864, 866, 867, 869, 870, 878, 890, 893, 897, 898, 900, 901, 904, 905, 907, 913, 921, 922, 926, 929, 930, 937, 938, 950, 960, 963, 964, 965, 966, 967, 970, 975, 976, 984, 987, 990, 991, 992, 1001, 1007, 1008, 1009, 1013, 1015, 1019, 1023, 1024, 1025, 1028, 1030, 1032, 1033, 1034, 1038, 1054, 1057, 1060, 1062, 1068, 1076, 1083, 1088, 1089, 1090, 1100, 1103, 1111, 1114, 1115, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1136, 1144, 1145, 1159, 1164, 1171, 1181, 1188, 1201], "konsistent": 23, "referenzierung": 23, "fremdmateri": 23, "speisekart": 23, "unterst\u00fctzung": 23, "themenauswahl": [23, 1178], "korrekt": [23, 1181], "vorbereitet": [23, 383], "ma\u00dfnahmen": 23, "sicherstellung": 23, "geplant": 23, "beispielsweis": [23, 184, 1201], "rahmen": 23, "webplattform": 23, "entsteht": 23, "erh\u00f6hung": 23, "sichtbarkeit": [23, 1181, 1198], "aktuel": 23, "inhalt": [23, 203, 205, 235, 366, 855, 1178, 1202], "wartung": 23, "performanceverbesserungen": 23, "plane": [23, 191, 193, 1133], "kein": [23, 150, 188, 189, 193, 203, 213, 220, 235, 271, 290, 348, 360, 383, 1196], "impactmein": 23, "sicherzustellen": 23, "erkl\u00e4rung": [23, 227], "erkl\u00e4ren": [23, 1181], "gew\u00fcnscht": [23, 203], "erreicht": [23, 178, 179, 1195], "hatt": [23, 178, 179, 193, 203, 205], "button": [23, 65, 128, 169, 177, 256, 930], "gew\u00e4hlt": [23, 178, 179], "dzugeh\u00f6rig": 23, "textfeld": 23, "l\u00e4sst": [23, 1197], "bearbeiten": 23, "daher": [23, 1202], "konvertiert": 23, "unten": [23, 134, 179, 193, 203, 1179], "beschriebenen": 23, "kan\u00e4len": 23, "promot": [23, 174], "angab": 23, "quellen": 23, "literatur": [23, 231, 605], "lightweight": [23, 160, 185, 202, 206, 222, 256, 258, 270, 693, 751, 754, 1131, 1143, 1184], "daringfirebal": 23, "project": [23, 24, 29, 30, 38, 42, 53, 61, 63, 65, 66, 69, 72, 110, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 145, 152, 160, 166, 167, 170, 171, 173, 175, 176, 177, 182, 189, 191, 193, 199, 202, 206, 209, 216, 221, 230, 249, 253, 256, 259, 286, 289, 296, 303, 335, 369, 370, 376, 378, 383, 384, 454, 461, 465, 473, 475, 476, 477, 480, 481, 483, 485, 488, 489, 490, 496, 536, 537, 546, 549, 609, 611, 612, 756, 786, 833, 872, 928, 930, 932, 937, 938, 949, 967, 1007, 1008, 1009, 1022, 1023, 1031, 1034, 1084, 1090, 1117, 1119, 1129, 1130, 1132, 1133, 1137, 1145, 1147, 1161, 1163, 1167, 1168, 1173], "docutil": [23, 32, 34, 35, 36, 38], "sourceforg": 23, "io": [23, 32, 55, 62, 95, 141, 145, 170, 174, 176, 191, 193, 207, 209, 210, 211, 212, 219, 221, 222, 230, 231, 244, 260, 276, 283, 285, 291, 306, 307, 321, 327, 333, 353, 365, 368, 370, 372, 387, 591, 784, 786, 810, 829, 830, 845, 863, 866, 874, 929, 938, 939, 992, 1000, 1021, 1028, 1081, 1180, 1188, 1190, 1195, 1197, 1201], "generatoren": [23, 193, 260, 383], "staticgen": 23, "learn": [23, 29, 69, 72, 74, 79, 81, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 153, 170, 172, 190, 191, 193, 202, 206, 210, 231, 240, 320, 324, 349, 351, 366, 368, 472, 736, 786, 875, 930, 938, 992, 1054, 1055, 1129, 1133, 1137, 1145, 1166], "moodl": [23, 110, 113, 114, 115, 128, 150, 177, 369, 371, 372, 673, 687, 786, 863, 867, 882, 888, 907, 913, 929, 1014, 1017], "schoologi": 23, "eduongo": 23, "produkt": 23, "dienstleistungen": 23, "recherch": [23, 193], "hinblick": [23, 1190], "ihnen": [23, 179, 920, 1178, 1188, 1195], "nennen": 23, "beschreiben": 23, "st\u00e4rken": [23, 1181], "schw\u00e4chen": [23, 1183], "konkurrierenden": 23, "relevant": [23, 193, 383, 1201], "anbiet": 23, "ziel": [23, 1179, 1195], "allumfassend": 23, "eh": [23, 32, 203, 213, 218, 226, 252, 258, 262, 265, 310, 332], "vielmehr": 23, "bietet": [23, 184, 187, 1197], "beim": [23, 178, 179, 189, 193, 203, 1181], "verfassen": 23, "kernthema": 23, "zwischen": [23, 187, 203, 213, 220, 226, 383, 1181, 1182, 1183, 1195, 1202], "benutz": [23, 1198], "vorgaben": 23, "existiert": [23, 203, 215], "wald": 23, "dass": [23, 178, 179, 187, 189, 193, 197, 203, 214, 218, 220, 234, 365, 370, 383, 1178, 1181, 1182, 1183, 1188, 1194, 1195, 1198, 1202], "beisteuert": 23, "eben": [23, 184, 187, 213], "\u00fcbergreifend": 23, "definiert": [23, 189, 203, 1178, 1181], "ansatz": 23, "mir": [23, 178, 179, 193, 203, 214, 218, 250, 365, 370, 383, 1181, 1194], "verfolgt": [23, 1195], "essentiel": 23, "gesundheit": 23, "unterlagen": [23, 166, 233, 249, 261, 383], "licht": 23, "lesen": [23, 187, 188, 189, 203, 215, 365, 370], "einig": [23, 179, 190, 205, 383, 1181, 1188], "plugin": [23, 172, 500, 737, 1021], "helfen": 23, "lieblo": 23, "halbherzig": 23, "On": [23, 101, 105, 110, 113, 114, 115, 128, 152, 170, 172, 185, 206, 222, 232, 248, 264, 266, 274, 275, 277, 280, 286, 292, 295, 334, 348, 365, 450, 456, 465, 468, 500, 538, 546, 635, 654, 658, 687, 690, 730, 738, 757, 785, 786, 811, 834, 838, 863, 866, 867, 929, 931, 937, 939, 946, 950, 951, 954, 958, 965, 968, 970, 987, 995, 1005, 1010, 1017, 1018, 1022, 1060, 1147, 1151, 1166, 1184], "zentral": [23, 166], "ergebni": [23, 255], "niemand": 23, "doc": [23, 37, 39, 69, 129, 141, 145, 174, 176, 189, 190, 192, 222, 230, 237, 239, 245, 254, 255, 258, 262, 265, 280, 323, 350, 362, 365, 370, 373, 374, 385, 585, 789, 804, 810, 813, 893, 915, 973, 1076, 1142], "show": [23, 24, 27, 29, 43, 58, 62, 66, 123, 128, 137, 141, 146, 169, 170, 172, 173, 177, 198, 206, 209, 210, 222, 231, 239, 245, 248, 255, 256, 258, 286, 298, 299, 312, 320, 328, 334, 335, 348, 350, 351, 369, 371, 372, 373, 376, 435, 475, 477, 486, 517, 533, 539, 585, 674, 771, 796, 815, 817, 849, 860, 861, 893, 915, 918, 920, 922, 930, 932, 937, 938, 939, 958, 989, 991, 995, 1000, 1004, 1017, 1019, 1027, 1066, 1083, 1085, 1136, 1137, 1159, 1166, 1173, 1186], "revealj": 23, "option": [23, 31, 82, 164, 170, 171, 172, 176, 180, 185, 189, 194, 210, 222, 246, 258, 262, 270, 273, 274, 275, 283, 288, 292, 304, 312, 313, 321, 324, 328, 329, 334, 338, 365, 385, 394, 395, 411, 422, 423, 462, 475, 478, 479, 487, 488, 494, 521, 549, 771, 786, 802, 853, 857, 860, 861, 869, 921, 939, 940, 942, 950, 963, 967, 1001, 1009, 1065, 1083, 1086, 1159, 1166, 1173, 1181, 1186, 1199], "webslid": 23, "tv": [23, 32, 177], "sicht": [23, 188, 259, 1181], "entscheidend": 23, "usp": 23, "vorteilhaft": 23, "unterscheidet": [23, 1181], "600": [23, 239, 245, 643], "kernfeatur": 23, "inbeziehungsetzen": 23, "dessen": [23, 188, 203, 300, 383, 1179, 1183, 1196], "versagen": 23, "implementierung": 23, "solcher": [23, 187, 203], "featur": [23, 29, 42, 46, 55, 56, 65, 82, 84, 126, 128, 146, 175, 177, 187, 198, 203, 206, 207, 209, 211, 216, 221, 230, 239, 245, 248, 255, 256, 258, 259, 261, 262, 301, 334, 367, 383, 384, 460, 464, 469, 470, 472, 473, 475, 664, 689, 692, 699, 706, 717, 731, 741, 742, 746, 750, 755, 763, 782, 783, 785, 786, 825, 833, 930, 938, 939, 959, 991, 1001, 1008, 1009, 1025, 1039, 1040, 1041, 1042, 1046, 1049, 1056, 1068, 1069, 1084, 1087, 1088, 1089, 1090, 1103, 1114, 1117, 1118, 1119, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1132, 1133, 1134, 1137, 1141, 1145, 1147, 1149, 1158, 1161, 1163, 1164, 1168, 1179, 1181, 1182, 1184, 1188, 1195], "indem": [23, 213, 366, 1188], "foku": [23, 383], "schulbetrieb": 23, "legen": [23, 920], "ferner": 23, "schwere": 23, "abh\u00e4ngigkeiten": [23, 1191], "fett": [23, 203, 220], "datenbanken": [23, 226, 383], "webserv": [23, 938], "hintergrund": [23, 213], "redaktionel": 23, "arbeit": [23, 193, 1179], "offlin": 23, "laptop": [23, 171, 173, 180, 949], "zug": 23, "erledigen": [23, 1179], "einschr\u00e4nkung": 23, "geserv": 23, "erarbeitet": [23, 1178], "sinn": [23, 197, 1181], "prinzip": [23, 1198, 1200, 1202], "kostenlo": 23, "genutzt": [23, 187], "weiterentwickelt": [23, 1183, 1188], "f\u00f6rderbedingungen": 23, "projektseit": 23, "ver\u00f6ffentlichen": 23, "nachvollziehbar": 23, "strukturieren": 23, "f\u00f6rderzusag": 23, "hinwei": 23, "verpflichtend": 23, "gesondert": 23, "erw\u00e4hnen": 23, "projektzwischenbericht": 23, "projektzusammenfassung": 23, "projektendbericht": 23, "entwicklerdokument": 23, "anwenderdokument": 23, "dienstleistungsbeschreibung": 23, "abh\u00e4ngig": 23, "dokument": [23, 150, 188, 203, 214, 235, 250, 262, 322, 360, 1196], "externkommunik": 23, "erreichung": 23, "nachhaltigkeit": 23, "projektergebnistyp": 23, "haupteigenschaften": 23, "funktionalit\u00e4t": [23, 203], "sourcecod": [23, 187], "bestehend": 23, "unabh\u00e4ngigem": 23, "unitgetestetem": 23, "core": [23, 61, 63, 169, 170, 172, 173, 202, 205, 209, 214, 227, 242, 253, 256, 258, 265, 268, 283, 287, 290, 300, 304, 326, 332, 338, 344, 388, 400, 445, 489, 490, 497, 502, 516, 517, 548, 600, 605, 698, 728, 748, 804, 808, 833, 870, 908, 924, 989, 992, 993, 1004, 1005, 1021, 1088, 1131, 1136, 1149, 1150, 1152, 1153, 1164, 1199], "reih": [23, 184, 197, 205], "direct": [23, 37, 39, 62, 128, 145, 167, 170, 231, 289, 292, 351, 422, 433, 468, 481, 608, 754, 792, 869, 926, 953, 955, 971, 973, 974, 1009, 1023, 1050, 1136, 1144, 1153, 1186, 1189], "generierten": 23, "kursagenda": 23, "graphen": 23, "lizenz": 23, "gpl": [23, 600, 749, 789], "pypi": [23, 66, 153, 166, 202, 206, 221, 237, 253, 279, 1158, 1159, 1164], "installierbar": 23, "paket": [23, 187, 1179], "generiert": [23, 203], "readthedoc": [23, 32, 39], "gehostet": 23, "verf\u00fcgbar": [23, 993, 1191], "obigen": 23, "bisherigen": [23, 1183], "aktuellen": [23, 213], "bereich": [23, 193, 383], "umfeld": 23, "projektantrag": 23, "bisher": [23, 166, 1178], "softwarebasi": 23, "grundlegend": [23, 215, 1183, 1188, 1195, 1197, 1200], "semiprofessionel": 23, "visualisierung": 23, "plan": [23, 42, 60, 169, 193, 202, 237, 246, 256, 321, 364, 365, 369, 373, 379, 472, 588, 698, 756, 833, 1164, 1171], "kurz": [23, 178, 179, 203, 205, 214, 219, 234, 259, 1180, 1194, 1197], "lebensl\u00e4uf": 23, "projektbeteiligten": 23, "sowi": [23, 1191], "ver\u00f6ffentlichungen": 23, "b\u00fccher": 23, "fachartikel": 23, "patent": 23, "vortr\u00e4g": 23, "gebiet": [23, 179, 1200], "projektinhalt": 23, "verdeutlichen": [23, 1179], "teamleitung": 23, "softwareprojekt": 23, "stefan": [23, 188], "walkner": 23, "1983": [23, 591], "hallein": 23, "master": [23, 60, 152, 173, 176, 185, 366, 367, 829, 833, 922, 934], "scienc": [23, 28, 82, 177, 191, 202, 206, 211, 240, 309, 323, 345, 367, 591, 644, 1056, 1135, 1136, 1137, 1138], "salzburg": 23, "consult": [23, 61, 63, 65, 167, 170, 183, 221, 239, 245, 255, 258, 262, 371, 497], "isamberth": 23, "adnet": 23, "2000": [23, 226, 229, 245, 250, 262, 283, 474, 500, 993], "2002": [23, 245, 600, 749], "divers": [23, 194, 1180], "2005": [23, 591], "2007": 23, "entwicklungsleit": 23, "nextsens": 23, "2016": [23, 205, 206, 227, 230, 245, 253, 279, 286, 294, 303, 325, 1131], "programmiererfahrung": [23, 1188, 1195, 1202], "bash": [23, 103, 128, 167, 177, 186, 210, 220, 222, 242, 250, 258, 265, 268, 276, 283, 285, 286, 290, 297, 300, 304, 306, 326, 332, 338, 344, 365, 366, 367, 370, 372, 384, 496, 510, 538, 539, 540, 541, 542, 543, 544, 545, 548, 590, 740, 743, 763, 784, 785, 786, 856, 860, 861, 862, 863, 865, 866, 867, 868, 870, 871, 874, 875, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 893, 894, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 918, 923, 924, 929, 952, 955, 958, 960, 962, 965, 968, 970, 971, 984, 986, 987, 990, 992, 1007, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1021, 1028, 1109, 1179, 1190], "davon": [23, 178, 189, 1181, 1200], "teamleit": 23, "m\u00f6chten": [23, 1202], "ggf": 23, "kennenlernen": 23, "knackig": [23, 166], "darstellung": 23, "handelnden": 23, "personen": 23, "sendung": 23, "minuten": [23, 921], "millionen": 23, "ihren": [23, 203, 215], "antrag": 23, "nochmal": 23, "vorgelesen": 23, "bekommen": [23, 197, 383, 1178, 1191], "un": [23, 197, 205, 383, 811, 917, 1050, 1179], "hintergrundmusik": 23, "windger\u00e4usch": 23, "gerad": [23, 179, 213, 214, 383, 1181, 1194], "f\u00f6rdern": 23, "sollen": 23, "animiert": 23, "produktvideo": 23, "interessieren": 23, "sicher": [23, 189, 193], "mindesten": [23, 189], "vier": [23, 189, 203, 213, 218, 220, 235, 239, 242, 250, 252, 255, 262, 268, 280, 283, 287, 290, 300, 310, 322, 326, 338, 348, 360, 1188, 1201], "monat": 23, "einreichschluss": 23, "uneingeschr\u00e4nkt": 23, "aufrufbar": 23, "youtu": [23, 743, 747], "hobyb1zukdi": 23, "projektrisiken": 23, "sehen": [23, 179], "wenig": [23, 188, 203, 273, 383, 1179], "pflegen": 23, "frontalen": 23, "vortragsstil": 23, "starker": 23, "paradigmenwechsel": 23, "wechsel": 23, "jahrelang": 23, "gewohnten": 23, "verfahrensweisen": 23, "abrupt": 23, "gro\u00dfer": 23, "monolithisch": 23, "zerhacken": 23, "welchen": 23, "bewerten": 23, "messen": 23, "zielerreichung": 23, "kriterium": 23, "arbeitserleichterung": 23, "minimal": [23, 203], "erfolg": [23, 1181], "mindestkriterien": 23, "positiven": 23, "projekterfolg": 23, "jedenfal": 23, "abgedeckt": 23, "ausgezeichnet": 23, "kriterien": [23, 184, 197, 921], "angestrebten": 23, "ausgezeichneten": 23, "anerkennen": 23, "gesteigerten": 23, "effekt": [23, 203, 214, 1194, 1202], "bekundet": 23, "medien": [23, 1201], "berichtet": 23, "migrat": [23, 197], "zehn": [23, 213], "migrieren": 23, "verwenden": [23, 184, 197, 203, 209, 213, 218, 1201], "untereinand": 23, "zutun": 23, "zusammenzuarbeiten": 23, "kooperationspartner_innen": 23, "dienstleister_innen": 23, "mitwirkend": 23, "zielgruppenvertreter_innen": 23, "werbeagentur": 23, "schaar": 23, "logo": 23, "webdesign": 23, "wof\u00fcr": 23, "arbeitsstunden": 23, "geld": 23, "allem": [23, 178, 193, 203, 383, 1200], "eingesetzt": [23, 1179, 1196], "basisarbeit": 23, "workflow": [23, 126, 197, 231, 246, 806, 1001, 1196], "datenstrukturen": [23, 215, 233, 254, 1183], "zeitgem\u00e4\u00df": 23, "interakt": [23, 1081], "know": [23, 42, 61, 63, 69, 73, 84, 88, 146, 167, 169, 170, 171, 172, 175, 176, 177, 185, 190, 191, 194, 198, 199, 202, 206, 210, 221, 222, 229, 232, 289, 292, 296, 321, 367, 398, 400, 406, 411, 428, 438, 450, 452, 454, 456, 460, 461, 462, 464, 468, 469, 470, 472, 481, 487, 491, 492, 504, 541, 549, 576, 592, 594, 600, 602, 606, 625, 662, 665, 668, 689, 690, 692, 701, 703, 705, 728, 730, 739, 748, 750, 754, 764, 783, 785, 786, 788, 804, 811, 833, 872, 893, 930, 933, 937, 939, 950, 955, 957, 966, 976, 1004, 1025, 1033, 1038, 1039, 1050, 1055, 1058, 1061, 1062, 1081, 1088, 1126, 1130, 1164, 1189], "welchem": [23, 189], "umfang": 23, "sachressourcen": 23, "ben\u00f6tigt": [23, 150, 214, 215, 1194], "zugekauft": 23, "backendprogrammierung": 23, "programmiersprach": [23, 1180, 1183, 1195, 1197], "200": [23, 166, 167, 189, 191, 203, 220, 222, 229, 236, 239, 242, 245, 250, 252, 258, 262, 265, 268, 280, 283, 287, 294, 304, 310, 322, 326, 332, 338, 344, 348, 357, 362, 620, 621, 622, 623, 624, 626, 627, 628, 629, 643, 697, 811, 991, 1105], "stunden": 23, "webprogrammierung": 23, "css": [23, 167, 168], "150": [23, 189, 203, 213, 220, 229, 239, 242, 245, 250, 252, 258, 262, 265, 268, 271, 280, 283, 300, 304, 310, 322, 326, 332, 338, 344, 348, 690], "kreativarbeit": 23, "erreichen": [23, 1195, 1198], "pers\u00f6nlich": [23, 383], "freund": 23, "ebenfal": [23, 150, 1196], "t\u00e4tig": 23, "mich": [23, 178, 193, 213, 221, 383, 1178], "ermutigt": 23, "\u00fcberhaupt": [23, 1188, 1195, 1202], "starten": [23, 1200], "repr\u00e4sent": 23, "post": [23, 70, 97, 166, 170, 172, 174, 175, 176, 177, 180, 231, 246, 295, 398, 412, 496, 592, 930, 999, 1001, 1004, 1130], "facebookseit": 23, "relevanten": 23, "foren": 23, "linkedin": 23, "typisch": [23, 214, 1181], "projektbeginn": 23, "abschluss": [23, 179, 365], "oktob": 23, "projektdau": 23, "\u00fcberschreiten": 23, "mitarbeiter_innen": 23, "stundenanzahl": 23, "jeweilig": 23, "stundens\u00e4tz": 23, "senior": 23, "junior": 23, "programmierer_in": 23, "designer_in": 23, "contentmanager_in": 23, "projektmanager_in": 23, "assistenz": 23, "administr": [23, 177, 870, 937, 946, 953, 992], "sachbearbeiter_in": 23, "social": [23, 45, 492, 499, 503, 516, 517, 518, 521, 527, 530, 531, 532], "media": [23, 82, 187, 833, 938], "spzialist_in": 23, "firmeneigent\u00fcmer_innen": 23, "gesellschafter_innen": 23, "vereinsfunktion\u00e4r_innen": 23, "betr\u00e4gt": 23, "f\u00f6rderbar": 23, "stundensatz": 23, "brutto": 23, "nachweislich": 23, "angestellt": 23, "projektmitarbeiter_innen": 23, "errechnet": 23, "vollzeitvertrag": 23, "jahresstundenteil": 23, "1720": [23, 245], "teilzeitbesch\u00e4ftigten": 23, "aliquot": [23, 150], "reduziert": [23, 193, 348], "dienstgeberanteil": 23, "faktor": 23, "ber\u00fccksichtigt": 23, "kalkul": 23, "jahresbruttogehalt": 23, "hohe": 23, "risiko": 23, "h\u00f6herer": 23, "eigenmittelanteil": 23, "bedingung": 23, "festgelegt": 23, "erh\u00f6hen": 23, "gemeinkosten": 23, "gef\u00f6rdert": 23, "antr\u00e4gen": 23, "diplomarbeiten": 23, "betrag": 23, "8000": [23, 245], "frontendprogrammierung": 23, "4500": [23, 245], "sachkosten": 23, "projektbedingt": 23, "betriebskosten": 23, "unmittelbar": 23, "projektt\u00e4tigkeit": 23, "entstehen": [23, 357], "leistungen": 23, "reisen": 23, "gliedern": 23, "rechnung": [23, 179, 287], "enthalten": 23, "umsatzsteu": 23, "darf": [23, 365], "kostenabrechnung": 23, "f\u00f6rdernehmer_in": 23, "vorsteuerabzugsberechtigt": 23, "13500": [23, 245], "beantragt": 23, "differenz": [23, 265], "aufgliedern": 23, "eigenmittel": 23, "f\u00f6rderungseinrichtungen": 23, "fremdmittel": 23, "kredit": 23, "leas": 23, "pro": [23, 206, 770, 921, 1024], "bono": 23, "beitrag": 23, "restfinanzierung": 23, "gesamtbetrag": 23, "ber\u00fccksichtigten": 23, "einzelkosten": 23, "achtung": 23, "gesamtprojektkosten": 23, "h\u00f6her": 23, "auszuf\u00fcllen": 23, "leer": [23, 220, 226, 234, 290], "bleiben": [23, 179, 203, 213, 1188, 1195, 1198], "reich": [23, 203], "nein": [23, 214, 220, 226, 271, 280, 338, 1194], "neben": [23, 193], "antr\u00e4g": 23, "oderstipendium": 23, "laufenden": 23, "call": [23, 32, 42, 50, 62, 70, 114, 115, 118, 122, 123, 134, 145, 166, 169, 170, 171, 172, 173, 175, 180, 187, 190, 192, 200, 206, 208, 229, 237, 239, 245, 250, 253, 255, 260, 262, 267, 268, 271, 286, 288, 290, 303, 304, 312, 321, 326, 328, 365, 370, 372, 383, 387, 394, 398, 399, 402, 413, 429, 431, 435, 441, 442, 445, 455, 458, 459, 467, 475, 478, 490, 497, 501, 516, 517, 518, 534, 538, 543, 546, 547, 549, 550, 562, 576, 590, 594, 597, 600, 602, 606, 615, 661, 662, 665, 667, 668, 672, 674, 679, 686, 694, 695, 703, 707, 718, 721, 724, 725, 726, 727, 737, 740, 748, 753, 754, 762, 763, 764, 766, 770, 785, 786, 787, 801, 811, 813, 815, 819, 821, 823, 825, 827, 829, 831, 833, 838, 841, 847, 852, 853, 859, 863, 866, 867, 868, 869, 871, 873, 876, 877, 890, 893, 929, 933, 941, 951, 952, 955, 956, 957, 958, 960, 962, 968, 969, 970, 975, 976, 983, 984, 986, 987, 990, 991, 992, 1001, 1004, 1005, 1007, 1009, 1026, 1028, 1029, 1030, 1035, 1041, 1043, 1044, 1045, 1047, 1048, 1050, 1051, 1052, 1072, 1073, 1077, 1079, 1082, 1083, 1088, 1106, 1110, 1131, 1136, 1144, 1147, 1152, 1153, 1165, 1166, 1167, 1186, 1190, 1198, 1199, 1201], "weiteren": 23, "stipendium": 23, "imlaufenden": 23, "habe": [23, 178, 179, 188, 193, 209, 338, 383], "zuge": [23, 150], "projektantragsstellung": 23, "rundschreiben": 23, "expert": [23, 28, 174, 175, 180, 549, 872, 893, 939, 1135], "group": [23, 29, 105, 106, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 145, 146, 163, 185, 190, 202, 207, 209, 218, 221, 222, 229, 235, 242, 250, 259, 262, 268, 271, 283, 297, 304, 307, 310, 332, 338, 344, 365, 378, 379, 383, 394, 419, 462, 463, 538, 568, 786, 833, 860, 861, 863, 866, 867, 868, 879, 880, 881, 882, 883, 884, 885, 886, 888, 889, 915, 919, 920, 921, 922, 926, 929, 937, 949, 950, 958, 959, 960, 965, 968, 970, 984, 987, 992, 1005, 1028, 1109, 1164], "wirtschaftkamm": 23, "nehmen": [23, 179, 1180], "larg": [24, 30, 38, 82, 172, 175, 177, 202, 221, 222, 231, 242, 248, 289, 292, 441, 450, 452, 456, 462, 463, 502, 727, 736, 784, 827, 833, 1007, 1031, 1033, 1035, 1055, 1062, 1088, 1109, 1145, 1149, 1153, 1171], "amount": [24, 110, 114, 115, 170, 171, 172, 175, 181, 202, 209, 237, 287, 288, 462, 474, 605, 727, 728, 864, 866, 950, 967, 1055], "pdf": [24, 37, 195, 197, 202, 206, 209, 210, 212, 262, 276, 285, 286, 306, 307, 329, 364, 365, 368, 370, 373, 384, 893, 915, 916, 939, 971, 1009, 1103, 1180, 1181, 1182, 1190, 1191, 1197, 1198, 1200, 1201, 1202], "Not": [24, 43, 47, 53, 84, 113, 116, 117, 119, 120, 127, 172, 173, 174, 177, 180, 202, 205, 206, 246, 248, 249, 250, 263, 272, 299, 303, 402, 411, 433, 445, 448, 450, 456, 472, 475, 538, 555, 557, 590, 597, 599, 601, 606, 607, 675, 687, 707, 718, 722, 724, 725, 726, 744, 751, 754, 760, 765, 784, 786, 796, 804, 811, 815, 817, 931, 969, 989, 991, 993, 995, 1005, 1028, 1030, 1035, 1036, 1037, 1038, 1048, 1050, 1062, 1071, 1076, 1131, 1135, 1140, 1154, 1156, 1172, 1184], "satisfi": [24, 32, 206, 491, 607, 695, 707, 740], "colleagu": [24, 28, 181, 222, 452, 664, 1033, 1050, 1062], "aren": [24, 167, 252, 262, 703, 894, 983, 993], "either": [24, 39, 42, 43, 170, 172, 180, 181, 286, 289, 292, 450, 517, 690, 698, 701, 762, 860, 861, 890, 893, 925, 939, 1030, 1097, 1147, 1184], "nobodi": [24, 43, 170, 172, 191, 202, 242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344, 453, 455, 592, 633, 705, 788, 860, 861, 870, 885, 887, 893, 894, 946, 954, 1083, 1137, 1167, 1173], "doe": [24, 38, 45, 48, 49, 60, 73, 82, 87, 88, 114, 115, 118, 122, 126, 128, 146, 166, 169, 170, 171, 174, 175, 176, 177, 180, 181, 185, 190, 198, 202, 206, 208, 220, 229, 232, 245, 262, 265, 271, 289, 290, 292, 295, 297, 299, 321, 334, 338, 365, 376, 392, 398, 406, 410, 411, 412, 413, 420, 429, 430, 439, 442, 445, 446, 448, 450, 452, 454, 456, 461, 462, 463, 466, 467, 468, 472, 474, 475, 476, 480, 486, 487, 490, 492, 495, 500, 504, 512, 514, 516, 542, 543, 544, 545, 546, 549, 550, 573, 582, 585, 592, 593, 594, 597, 600, 602, 603, 605, 608, 631, 638, 646, 652, 661, 664, 665, 671, 672, 679, 690, 695, 696, 698, 705, 707, 727, 729, 737, 738, 740, 744, 748, 749, 750, 753, 754, 756, 760, 761, 766, 782, 784, 796, 797, 801, 802, 804, 811, 825, 833, 838, 849, 859, 868, 872, 873, 875, 878, 926, 930, 937, 938, 939, 950, 955, 956, 958, 962, 965, 976, 980, 983, 989, 991, 992, 1001, 1005, 1007, 1008, 1009, 1010, 1015, 1019, 1023, 1024, 1026, 1028, 1029, 1030, 1031, 1033, 1035, 1044, 1048, 1050, 1051, 1055, 1058, 1061, 1079, 1080, 1081, 1100, 1108, 1110, 1137, 1139, 1140, 1142, 1149, 1150, 1153, 1154, 1155, 1157, 1159, 1164, 1184, 1186], "even": [24, 29, 61, 63, 65, 82, 126, 158, 170, 171, 172, 177, 181, 191, 192, 202, 206, 209, 210, 214, 216, 221, 227, 229, 230, 232, 233, 242, 246, 249, 250, 253, 256, 259, 261, 262, 264, 267, 268, 279, 289, 292, 303, 304, 322, 325, 332, 338, 344, 429, 438, 452, 458, 462, 490, 495, 591, 599, 602, 648, 695, 737, 740, 747, 756, 784, 786, 825, 833, 870, 889, 930, 938, 955, 956, 989, 991, 992, 1008, 1027, 1039, 1050, 1076, 1079, 1090, 1093, 1094, 1129, 1131, 1152, 1159, 1166, 1186, 1194], "tech": [24, 45, 169], "although": [24, 29, 82, 141, 145, 170, 172, 176, 181, 192, 202, 208, 232, 252, 262, 383, 546, 690, 691, 732, 754, 872, 875, 946, 1026, 1031, 1088, 1137], "gain": [24, 177, 289, 292, 462, 833, 872], "incred": 24, "momentum": 24, "expect": [24, 38, 50, 169, 172, 218, 239, 245, 246, 255, 258, 265, 290, 304, 322, 324, 326, 439, 477, 492, 535, 600, 665, 718, 727, 740, 806, 817, 930, 938, 939, 978, 995, 1004, 1050, 1060, 1073, 1103, 1113, 1136, 1170, 1171, 1174], "context": [24, 29, 61, 63, 114, 115, 170, 191, 194, 206, 209, 211, 213, 220, 251, 255, 256, 258, 262, 265, 271, 279, 283, 288, 298, 299, 300, 303, 310, 314, 317, 320, 321, 324, 325, 332, 383, 449, 511, 512, 526, 594, 600, 728, 749, 784, 786, 795, 800, 803, 805, 810, 813, 814, 815, 816, 819, 820, 824, 825, 826, 828, 829, 830, 837, 838, 839, 841, 842, 843, 844, 847, 848, 851, 853, 854, 866, 870, 929, 930, 953, 993, 1004, 1005, 1032, 1041, 1129, 1140], "defin": [24, 53, 129, 133, 136, 137, 141, 144, 146, 163, 173, 190, 192, 207, 209, 211, 213, 218, 226, 229, 230, 232, 239, 243, 245, 248, 252, 255, 258, 262, 270, 272, 283, 294, 304, 321, 322, 334, 338, 344, 360, 371, 392, 397, 402, 407, 408, 411, 428, 429, 430, 431, 432, 433, 446, 454, 455, 456, 458, 462, 475, 476, 481, 482, 483, 500, 504, 512, 533, 534, 546, 568, 576, 593, 594, 595, 597, 599, 600, 602, 603, 606, 607, 608, 615, 618, 639, 643, 664, 671, 690, 691, 700, 701, 702, 703, 704, 707, 727, 732, 736, 745, 748, 753, 754, 777, 792, 794, 806, 870, 890, 930, 931, 939, 950, 957, 975, 997, 1007, 1009, 1023, 1025, 1029, 1031, 1033, 1045, 1050, 1062, 1072, 1127, 1140, 1144, 1176, 1184, 1186, 1189], "solv": [24, 45, 84, 93, 127, 128, 167, 170, 171, 200, 202, 206, 207, 209, 211, 222, 227, 240, 248, 253, 256, 267, 270, 292, 296, 303, 307, 309, 312, 324, 328, 351, 432, 474, 483, 689, 763, 768, 771, 785, 786, 833, 872, 929, 970, 984, 1017, 1019, 1021, 1050, 1126, 1131, 1137, 1186, 1187], "provid": [24, 27, 37, 58, 69, 72, 170, 172, 173, 174, 176, 177, 180, 181, 185, 198, 239, 245, 246, 255, 258, 262, 296, 312, 328, 448, 477, 482, 483, 492, 503, 511, 664, 727, 754, 833, 869, 872, 912, 938, 939, 946, 960, 992, 1001, 1033, 1042, 1060, 1073, 1136, 1158, 1166, 1186], "depth": [24, 202, 206, 227, 239, 245, 255, 256, 258, 452, 752, 1035, 1131, 1135, 1136], "repres": [24, 170, 172, 194, 239, 245, 255, 258, 262, 283, 294, 351, 461, 495, 512, 514, 601, 784, 804, 829, 866, 869, 937, 939, 967, 1062, 1088, 1126, 1130, 1149, 1156, 1189], "own": [24, 28, 40, 43, 69, 114, 115, 170, 171, 173, 174, 180, 185, 198, 202, 248, 272, 277, 286, 296, 321, 334, 335, 452, 458, 473, 487, 495, 512, 517, 581, 582, 591, 681, 682, 684, 685, 699, 703, 706, 718, 728, 730, 742, 750, 765, 784, 785, 786, 833, 866, 868, 869, 878, 880, 881, 889, 890, 912, 922, 937, 938, 950, 957, 975, 980, 991, 992, 1004, 1023, 1030, 1047, 1052, 1053, 1055, 1138, 1171, 1186, 1187, 1189], "yield": [24, 29, 189, 190, 203, 206, 207, 209, 218, 230, 237, 243, 247, 249, 251, 252, 258, 262, 267, 269, 279, 282, 283, 290, 298, 299, 300, 303, 304, 309, 311, 322, 325, 326, 332, 338, 342, 343, 344, 347, 348, 433, 502, 511, 718, 721, 724, 725, 726, 786, 1028, 1032, 1034, 1035, 1037, 1056, 1066, 1087, 1088, 1089, 1090, 1103, 1114, 1129, 1141], "multipl": [24, 35, 36, 61, 63, 80, 110, 114, 115, 170, 171, 173, 187, 202, 206, 209, 229, 230, 231, 243, 245, 262, 297, 321, 388, 390, 394, 395, 398, 407, 409, 412, 421, 428, 432, 450, 455, 468, 473, 480, 512, 526, 539, 594, 607, 665, 672, 685, 712, 718, 740, 742, 749, 757, 760, 764, 765, 784, 786, 802, 804, 810, 814, 815, 823, 824, 825, 833, 835, 837, 838, 841, 842, 848, 851, 854, 866, 869, 870, 873, 875, 880, 881, 926, 929, 938, 959, 975, 980, 1000, 1013, 1050, 1061, 1062, 1075, 1076, 1081, 1131, 1156], "artifact": [24, 176, 180, 194, 199, 312, 328, 468, 794, 1007, 1008, 1009, 1019, 1173, 1186], "complet": [24, 42, 62, 65, 82, 128, 129, 145, 166, 169, 170, 191, 202, 210, 218, 227, 240, 243, 246, 253, 267, 268, 270, 297, 303, 309, 314, 321, 334, 350, 351, 432, 449, 462, 475, 487, 539, 548, 593, 594, 668, 737, 752, 784, 827, 833, 860, 861, 871, 933, 939, 954, 991, 1028, 1032, 1054, 1055, 1131, 1136, 1137, 1139, 1145, 1147, 1158, 1159, 1176, 1184], "prepar": [27, 126, 128, 144, 166, 169, 202, 259, 365, 383, 496, 537, 568, 630, 667, 1000, 1024, 1127, 1136, 1165], "base": [27, 29, 30, 42, 45, 53, 82, 84, 101, 111, 125, 128, 141, 146, 162, 170, 172, 173, 185, 192, 197, 202, 203, 206, 209, 210, 213, 217, 220, 222, 232, 246, 248, 251, 255, 256, 260, 265, 267, 273, 280, 283, 288, 290, 294, 295, 296, 297, 298, 299, 304, 309, 320, 321, 322, 324, 325, 326, 332, 335, 338, 343, 344, 348, 361, 365, 369, 376, 398, 406, 433, 450, 468, 473, 474, 492, 496, 501, 502, 504, 511, 536, 548, 552, 568, 579, 621, 623, 624, 625, 626, 628, 629, 633, 665, 667, 668, 670, 712, 729, 730, 737, 742, 749, 753, 765, 770, 772, 774, 776, 780, 783, 785, 786, 806, 813, 817, 829, 833, 835, 884, 886, 926, 930, 989, 1001, 1005, 1007, 1008, 1021, 1022, 1024, 1032, 1039, 1041, 1046, 1047, 1087, 1093, 1109, 1129, 1138, 1139, 1153, 1183, 1184, 1187], "exist": [27, 38, 46, 47, 53, 55, 56, 113, 114, 115, 163, 166, 176, 181, 210, 222, 229, 295, 299, 350, 362, 365, 368, 450, 472, 474, 490, 495, 515, 518, 538, 549, 555, 557, 590, 600, 648, 683, 685, 694, 748, 784, 786, 833, 860, 861, 866, 868, 875, 884, 886, 895, 899, 900, 912, 929, 937, 939, 950, 955, 959, 965, 968, 970, 987, 994, 1001, 1019, 1023, 1024, 1029, 1030, 1039, 1044, 1079, 1081, 1099, 1140, 1148, 1149, 1159, 1164, 1166], "navig": [27, 1156], "through": [27, 34, 38, 60, 77, 82, 108, 167, 169, 170, 172, 177, 181, 185, 198, 202, 206, 208, 211, 222, 230, 231, 232, 237, 243, 296, 298, 299, 314, 317, 320, 325, 372, 376, 383, 402, 422, 441, 461, 465, 478, 487, 518, 540, 543, 609, 611, 612, 661, 662, 665, 668, 690, 705, 707, 732, 740, 744, 750, 754, 804, 831, 864, 872, 920, 930, 938, 939, 948, 1001, 1004, 1005, 1030, 1035, 1038, 1053, 1055, 1058, 1093, 1138, 1153, 1184, 1185, 1189], "deviat": [27, 177, 190, 198, 207, 231, 262, 383, 833], "after": [27, 43, 166, 167, 170, 171, 172, 177, 180, 190, 199, 202, 209, 222, 229, 239, 245, 255, 258, 261, 262, 268, 283, 288, 295, 297, 304, 332, 348, 351, 390, 398, 399, 432, 452, 459, 478, 480, 516, 517, 540, 547, 599, 602, 615, 650, 698, 700, 701, 703, 712, 718, 765, 784, 811, 815, 821, 873, 876, 893, 894, 926, 937, 977, 995, 1000, 1001, 1004, 1007, 1026, 1028, 1030, 1055, 1056, 1060, 1096, 1109, 1127, 1135, 1144, 1156, 1165, 1166, 1171], "writeup": [27, 181, 1019], "what": [27, 28, 43, 44, 46, 47, 48, 51, 55, 56, 57, 58, 61, 63, 69, 73, 82, 87, 90, 91, 101, 102, 103, 108, 111, 125, 128, 133, 134, 141, 146, 167, 169, 170, 171, 172, 173, 174, 175, 176, 181, 185, 189, 190, 191, 192, 193, 194, 196, 198, 202, 203, 206, 207, 208, 209, 210, 211, 212, 221, 229, 231, 232, 246, 247, 248, 257, 262, 270, 276, 286, 289, 292, 296, 298, 299, 312, 317, 320, 328, 332, 334, 335, 350, 351, 357, 365, 368, 370, 372, 373, 376, 387, 395, 400, 410, 411, 413, 426, 435, 438, 445, 448, 450, 452, 453, 456, 457, 458, 462, 466, 468, 473, 474, 477, 482, 484, 491, 493, 495, 516, 517, 527, 533, 535, 544, 547, 568, 569, 572, 575, 578, 581, 584, 585, 587, 597, 600, 602, 603, 604, 605, 606, 608, 615, 618, 625, 661, 668, 677, 695, 698, 701, 707, 712, 718, 728, 739, 740, 748, 749, 750, 754, 757, 761, 763, 764, 770, 782, 784, 785, 786, 794, 797, 801, 804, 806, 811, 829, 836, 841, 846, 859, 860, 861, 863, 864, 866, 867, 869, 870, 872, 873, 875, 877, 878, 879, 882, 883, 884, 885, 886, 887, 888, 893, 908, 909, 911, 929, 930, 937, 938, 939, 941, 942, 943, 944, 945, 956, 957, 963, 964, 965, 966, 968, 970, 975, 976, 977, 978, 979, 984, 987, 990, 992, 993, 995, 996, 999, 1000, 1001, 1003, 1005, 1008, 1017, 1018, 1022, 1024, 1025, 1026, 1028, 1030, 1032, 1033, 1036, 1037, 1041, 1042, 1050, 1054, 1055, 1073, 1079, 1083, 1088, 1091, 1099, 1126, 1130, 1138, 1140, 1147, 1156, 1164, 1166, 1170, 1171, 1173, 1175, 1186, 1189], "collect": [27, 29, 166, 169, 171, 214, 221, 230, 236, 237, 254, 256, 257, 258, 270, 279, 281, 288, 296, 298, 299, 303, 314, 317, 320, 321, 324, 325, 337, 343, 347, 348, 350, 461, 468, 579, 625, 740, 749, 761, 786, 833, 864, 936, 1017, 1028, 1032, 1038, 1046, 1080, 1086, 1090, 1119, 1124, 1126, 1129, 1130, 1145, 1158, 1159, 1164, 1166, 1194], "question": [27, 29, 32, 35, 36, 38, 106, 127, 128, 140, 172, 177, 185, 190, 202, 206, 208, 230, 231, 232, 242, 243, 245, 246, 248, 268, 365, 372, 379, 407, 436, 442, 454, 473, 476, 480, 484, 537, 601, 661, 668, 756, 760, 786, 811, 825, 841, 860, 861, 863, 882, 888, 912, 929, 937, 939, 950, 954, 970, 989, 990, 1023, 1031, 1032, 1035, 1040, 1129, 1131], "ask": [27, 170, 175, 177, 185, 202, 205, 206, 271, 303, 365, 372, 472, 491, 492, 514, 533, 585, 597, 608, 729, 751, 889, 944, 946, 1050, 1131], "answer": [27, 45, 118, 174, 177, 190, 202, 206, 208, 209, 232, 243, 250, 322, 332, 372, 476, 480, 537, 661, 668, 670, 740, 745, 764, 797, 841, 860, 861, 866, 878, 880, 881, 884, 886, 937, 939, 946, 950, 989, 992, 1023, 1030, 1031, 1035, 1042, 1059, 1062, 1131], "cover": [27, 82, 85, 129, 163, 177, 194, 202, 206, 210, 212, 230, 231, 243, 256, 295, 297, 325, 472, 491, 777, 937, 939, 1021, 1030, 1032, 1055, 1103, 1126, 1131, 1135, 1136, 1158, 1164, 1187, 1189], "been": [27, 61, 63, 65, 126, 169, 170, 171, 172, 174, 175, 176, 181, 185, 190, 191, 202, 210, 239, 245, 255, 258, 289, 292, 294, 304, 321, 362, 371, 431, 445, 446, 475, 486, 495, 512, 568, 727, 787, 829, 847, 853, 858, 868, 872, 876, 896, 930, 937, 939, 950, 959, 969, 980, 1005, 1008, 1009, 1026, 1033, 1071, 1166, 1184, 1186, 1187], "further": [27, 167, 169, 176, 180, 196, 245, 277, 292, 321, 334, 335, 373, 438, 449, 487, 549, 569, 572, 575, 578, 581, 584, 587, 699, 730, 776, 785, 786, 804, 827, 833, 915, 940, 976, 996, 999, 1003, 1038, 1170, 1175, 1189], "inform": [27, 28, 29, 110, 169, 172, 173, 175, 180, 189, 190, 191, 193, 198, 218, 239, 245, 255, 258, 283, 298, 299, 320, 324, 325, 449, 459, 466, 467, 477, 486, 754, 784, 792, 804, 868, 893, 926, 930, 937, 939, 941, 973, 1029, 1057, 1131, 1139, 1144, 1159, 1166], "internet": [27, 69, 82, 169, 171, 174, 175, 177, 198, 210, 218, 246, 259, 298, 299, 314, 320, 324, 362, 474, 930, 931, 933, 991, 1031, 1187, 1201], "subtract": [27, 118, 239, 262, 294, 409, 512, 526, 740, 892, 992, 1042, 1050, 1062], "known": [27, 166, 171, 182, 222, 239, 245, 255, 258, 275, 277, 295, 312, 328, 362, 408, 410, 422, 429, 456, 462, 627, 804, 893, 1022, 1138, 1186, 1187], "calcul": [27, 86, 89, 172, 206, 230, 239, 262, 408, 410, 418, 427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 511, 541, 546, 548, 692, 697, 730, 757, 783, 785, 786, 975, 992, 1033, 1035, 1106, 1138, 1143, 1164], "minimum": [27, 62, 262, 712, 771, 833, 1028, 1134, 1135, 1136, 1137], "come": [27, 43, 82, 114, 115, 126, 134, 141, 145, 166, 167, 169, 170, 171, 172, 175, 176, 177, 180, 181, 192, 198, 199, 202, 222, 248, 275, 277, 288, 295, 296, 321, 334, 356, 362, 386, 388, 389, 405, 432, 468, 475, 512, 546, 628, 665, 668, 673, 687, 739, 742, 744, 754, 764, 786, 801, 833, 864, 866, 870, 876, 889, 893, 930, 937, 938, 939, 965, 991, 1019, 1030, 1031, 1035, 1053, 1054, 1055, 1056, 1062, 1073, 1081, 1083, 1088, 1093, 1111, 1122, 1139, 1142, 1147, 1160, 1187], "she": [27, 229, 665, 698, 868, 870, 1075, 1083], "who": [27, 29, 45, 133, 167, 170, 174, 177, 181, 200, 202, 248, 258, 283, 314, 383, 458, 462, 472, 477, 500, 517, 549, 670, 740, 750, 806, 833, 841, 860, 861, 868, 872, 878, 889, 930, 938, 939, 954, 965, 1007, 1024, 1026, 1032, 1054, 1130, 1145, 1157, 1164, 1184, 1187, 1189], "repetit": [27, 283, 893, 1184], "prone": [27, 407, 595, 605, 625, 698, 742, 821, 1009, 1077, 1171, 1184], "possibl": [27, 60, 61, 63, 110, 125, 126, 128, 146, 152, 157, 160, 169, 170, 177, 180, 185, 192, 202, 206, 222, 232, 239, 245, 248, 250, 255, 256, 258, 275, 277, 286, 295, 298, 299, 304, 321, 325, 335, 397, 408, 411, 428, 441, 448, 454, 458, 462, 463, 466, 472, 478, 487, 490, 492, 495, 500, 504, 512, 514, 549, 582, 592, 594, 595, 600, 607, 608, 626, 643, 684, 690, 691, 698, 712, 716, 729, 740, 748, 749, 750, 754, 811, 838, 868, 877, 902, 931, 932, 937, 938, 948, 951, 980, 1028, 1029, 1030, 1038, 1043, 1051, 1053, 1062, 1071, 1076, 1078, 1079, 1081, 1130, 1131, 1140, 1152], "abl": [27, 28, 30, 43, 169, 170, 172, 173, 175, 177, 185, 202, 222, 229, 311, 452, 458, 484, 491, 495, 549, 697, 707, 860, 861, 878, 884, 886, 887, 930, 938, 939, 965, 1001, 1032, 1143, 1189], "fix": [27, 46, 62, 69, 80, 111, 145, 166, 170, 183, 185, 206, 227, 232, 242, 243, 248, 267, 270, 297, 298, 299, 320, 365, 390, 413, 456, 472, 474, 480, 517, 550, 562, 573, 585, 591, 610, 626, 676, 683, 704, 786, 801, 806, 810, 813, 814, 834, 835, 841, 842, 848, 851, 854, 877, 929, 933, 953, 963, 994, 1004, 1024, 1026, 1029, 1056, 1088, 1131], "inconsist": [27, 592, 1154], "easi": [27, 72, 133, 158, 170, 172, 173, 174, 175, 176, 177, 181, 190, 191, 194, 206, 252, 262, 335, 411, 426, 452, 468, 690, 707, 749, 770, 813, 815, 819, 831, 838, 872, 937, 938, 939, 966, 983, 1001, 1010, 1024, 1050, 1054, 1062, 1071, 1073, 1137, 1164, 1165, 1189], "plain": [27, 136, 172, 232, 376, 568, 604, 607, 686, 739, 754, 836, 938, 1029, 1042], "happi": [27, 69, 175, 202, 456, 600, 1136], "clear": [27, 43, 170, 172, 177, 189, 222, 232, 261, 322, 366, 367, 433, 458, 462, 477, 487, 493, 499, 606, 661, 694, 712, 749, 833, 841, 869, 872, 893, 953, 1027, 1042, 1062, 1064, 1135, 1136, 1166], "front": [27, 82, 167, 177, 202, 258, 304, 462, 643, 762, 1187], "later": [27, 84, 129, 145, 169, 170, 173, 180, 191, 202, 324, 388, 392, 398, 400, 402, 458, 462, 468, 475, 594, 595, 597, 609, 611, 612, 646, 701, 732, 735, 792, 794, 796, 801, 817, 819, 829, 836, 875, 937, 959, 975, 976, 978, 989, 993, 1043, 1051, 1061, 1064, 1066, 1144, 1150], "menu": [27, 166, 210, 833, 1179], "mine": [28, 169, 170, 173, 181, 198, 202, 206, 383, 582, 833], "hi": [28, 45, 185, 190, 202, 206, 209, 227, 253, 256, 455, 544, 1043, 1131], "data": [28, 29, 49, 74, 77, 82, 93, 112, 114, 115, 138, 146, 170, 171, 172, 173, 177, 180, 189, 191, 193, 202, 206, 207, 211, 219, 221, 226, 236, 239, 240, 245, 246, 248, 255, 258, 262, 268, 283, 287, 288, 289, 290, 292, 295, 297, 298, 299, 304, 309, 312, 314, 317, 323, 326, 328, 332, 338, 345, 348, 367, 368, 383, 397, 411, 418, 427, 434, 440, 441, 444, 446, 447, 451, 456, 460, 461, 463, 464, 469, 470, 473, 480, 496, 510, 538, 539, 540, 541, 542, 543, 544, 545, 548, 549, 555, 557, 566, 590, 591, 593, 597, 600, 613, 616, 618, 619, 630, 635, 641, 645, 654, 657, 658, 663, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 692, 696, 699, 730, 742, 746, 754, 755, 763, 764, 771, 783, 784, 785, 786, 788, 791, 792, 823, 827, 831, 838, 846, 864, 870, 875, 877, 885, 931, 933, 937, 938, 939, 940, 950, 954, 956, 964, 969, 975, 978, 981, 983, 995, 1019, 1028, 1030, 1035, 1039, 1042, 1055, 1056, 1067, 1069, 1070, 1071, 1079, 1090, 1118, 1119, 1129, 1133, 1134, 1135, 1137, 1139, 1140, 1144, 1145, 1149, 1150, 1153, 1155, 1156, 1159, 1164, 1185, 1186, 1200], "convinc": [28, 411], "him": [28, 202, 206, 209, 227, 230, 253, 279, 303, 325, 739, 980, 1131], "wai": [28, 43, 50, 61, 62, 63, 69, 84, 85, 160, 166, 167, 169, 172, 177, 181, 182, 185, 191, 194, 198, 203, 205, 206, 208, 209, 210, 213, 214, 222, 227, 230, 242, 243, 248, 251, 252, 253, 255, 256, 260, 262, 270, 274, 275, 288, 289, 292, 296, 298, 299, 320, 321, 353, 357, 407, 411, 415, 416, 426, 432, 448, 449, 450, 458, 474, 475, 482, 492, 494, 495, 499, 515, 517, 536, 546, 550, 562, 568, 576, 592, 593, 600, 605, 608, 646, 648, 674, 680, 691, 707, 728, 738, 750, 754, 768, 789, 802, 811, 825, 827, 833, 860, 861, 869, 875, 877, 880, 881, 930, 938, 939, 950, 957, 965, 991, 994, 1004, 1005, 1009, 1015, 1019, 1030, 1042, 1047, 1053, 1056, 1057, 1060, 1071, 1075, 1076, 1078, 1081, 1083, 1088, 1116, 1131, 1149, 1157, 1164, 1171, 1189], "go": [28, 40, 42, 60, 61, 62, 63, 69, 84, 101, 139, 145, 167, 170, 173, 174, 176, 177, 199, 202, 209, 213, 222, 231, 232, 248, 289, 292, 294, 324, 368, 472, 474, 492, 533, 694, 732, 744, 750, 762, 786, 794, 797, 801, 833, 835, 864, 876, 893, 895, 929, 930, 937, 938, 965, 968, 970, 975, 983, 987, 1007, 1010, 1024, 1055, 1089], "relev": [28, 172, 245, 270, 398, 487, 549, 754, 833, 846, 937, 938, 1030, 1130, 1146, 1159], "part": [28, 43, 84, 96, 110, 128, 163, 170, 171, 172, 173, 175, 177, 180, 191, 194, 202, 209, 210, 211, 232, 258, 270, 289, 292, 304, 367, 374, 388, 411, 445, 472, 495, 500, 514, 535, 549, 592, 690, 762, 784, 804, 811, 833, 853, 860, 861, 893, 928, 930, 937, 938, 939, 940, 955, 1007, 1054, 1055, 1068, 1073, 1075, 1121, 1123, 1137, 1138, 1149, 1150, 1152, 1153, 1154, 1155, 1174], "natur": [28, 38, 79, 170, 172, 177, 202, 256, 262, 304, 383, 388, 406, 450, 491, 492, 644, 646, 690, 750, 938, 1066], "straighforward": 28, "approach": [28, 35, 38, 169, 170, 209, 313, 329, 390, 474, 478, 479, 487, 748, 776, 786, 872, 938, 991, 993, 1148], "would": [28, 57, 108, 111, 118, 121, 122, 146, 169, 171, 172, 174, 175, 181, 190, 192, 199, 202, 206, 208, 221, 232, 245, 258, 262, 297, 299, 335, 422, 441, 448, 450, 461, 462, 476, 477, 480, 487, 490, 548, 562, 566, 600, 604, 606, 608, 655, 662, 671, 695, 701, 740, 750, 762, 782, 784, 833, 836, 860, 861, 884, 886, 889, 915, 938, 939, 949, 950, 966, 975, 983, 1004, 1023, 1024, 1028, 1030, 1031, 1051, 1062, 1066, 1070, 1073, 1079, 1083, 1088, 1109, 1136, 1139, 1149, 1156], "copi": [28, 36, 42, 50, 74, 101, 103, 105, 106, 118, 122, 128, 132, 136, 141, 145, 160, 162, 166, 170, 171, 172, 173, 176, 181, 185, 191, 197, 200, 210, 217, 220, 232, 242, 248, 254, 258, 262, 265, 268, 274, 275, 276, 277, 280, 285, 286, 290, 294, 295, 297, 304, 306, 307, 310, 322, 335, 344, 368, 398, 400, 412, 418, 427, 432, 434, 436, 440, 441, 444, 447, 451, 460, 464, 469, 470, 485, 517, 518, 531, 532, 533, 538, 555, 567, 568, 570, 579, 584, 586, 588, 590, 591, 592, 598, 608, 609, 611, 612, 621, 625, 635, 643, 652, 654, 657, 658, 670, 672, 678, 681, 684, 687, 692, 693, 694, 698, 699, 700, 718, 730, 732, 742, 746, 750, 751, 755, 763, 782, 783, 784, 785, 786, 808, 813, 833, 834, 849, 859, 860, 861, 862, 863, 864, 873, 893, 899, 900, 902, 903, 904, 905, 907, 913, 929, 940, 943, 945, 950, 962, 967, 968, 969, 970, 977, 978, 983, 987, 1000, 1017, 1018, 1019, 1021, 1023, 1024, 1028, 1029, 1063, 1078, 1081, 1144, 1148, 1153, 1166, 1171, 1173, 1184, 1196], "dumb": [28, 45, 190, 221, 350, 804, 978, 980], "reason": [28, 60, 146, 157, 172, 185, 191, 202, 231, 250, 362, 445, 452, 454, 456, 462, 465, 478, 490, 609, 611, 612, 646, 690, 733, 752, 801, 817, 829, 833, 884, 886, 983, 991, 992, 1005, 1019, 1024, 1062, 1071, 1073, 1136], "ar": [28, 32, 43, 45, 47, 53, 55, 56, 57, 58, 60, 61, 62, 63, 69, 72, 82, 84, 85, 93, 110, 112, 113, 114, 115, 118, 123, 124, 126, 133, 141, 146, 154, 157, 163, 164, 167, 169, 172, 173, 174, 176, 177, 180, 181, 185, 186, 187, 190, 191, 192, 194, 198, 200, 202, 206, 207, 208, 209, 210, 211, 222, 229, 230, 231, 232, 239, 242, 243, 245, 246, 248, 249, 251, 253, 254, 255, 256, 258, 262, 266, 270, 275, 277, 279, 286, 288, 289, 292, 294, 295, 296, 297, 299, 304, 307, 312, 316, 321, 322, 325, 326, 328, 335, 350, 351, 352, 356, 362, 365, 367, 368, 370, 371, 387, 389, 390, 392, 395, 397, 398, 400, 402, 405, 406, 409, 410, 411, 417, 420, 423, 428, 429, 432, 436, 438, 439, 441, 442, 443, 448, 449, 450, 452, 453, 456, 459, 462, 465, 472, 473, 475, 477, 480, 481, 486, 487, 490, 491, 492, 502, 512, 514, 517, 536, 539, 546, 547, 548, 549, 550, 553, 557, 562, 566, 576, 582, 585, 592, 593, 594, 595, 597, 600, 601, 604, 605, 606, 608, 615, 618, 625, 626, 627, 630, 640, 646, 647, 652, 655, 662, 664, 665, 667, 668, 672, 678, 679, 680, 681, 685, 691, 693, 694, 695, 698, 701, 702, 703, 707, 712, 729, 732, 733, 738, 739, 740, 742, 744, 748, 749, 750, 751, 753, 754, 756, 759, 761, 765, 766, 784, 786, 788, 789, 792, 802, 804, 806, 811, 817, 819, 821, 825, 827, 829, 831, 833, 838, 852, 859, 860, 861, 864, 866, 868, 869, 871, 872, 873, 875, 876, 878, 879, 884, 886, 893, 894, 896, 906, 911, 915, 917, 920, 930, 931, 937, 938, 939, 940, 946, 948, 950, 953, 955, 956, 959, 960, 967, 973, 975, 976, 978, 980, 981, 983, 986, 992, 993, 994, 995, 1000, 1004, 1005, 1007, 1008, 1009, 1010, 1013, 1015, 1019, 1021, 1022, 1024, 1025, 1026, 1028, 1030, 1031, 1033, 1035, 1039, 1042, 1043, 1044, 1045, 1049, 1051, 1054, 1055, 1058, 1059, 1060, 1061, 1062, 1064, 1067, 1071, 1079, 1081, 1082, 1083, 1085, 1093, 1098, 1126, 1130, 1131, 1136, 1137, 1138, 1139, 1140, 1143, 1144, 1145, 1147, 1149, 1150, 1153, 1155, 1156, 1158, 1164, 1166, 1167, 1170, 1171, 1174, 1186, 1187, 1189], "need": [28, 43, 45, 46, 47, 51, 55, 56, 60, 62, 108, 129, 131, 133, 136, 146, 170, 171, 172, 175, 177, 181, 185, 186, 191, 202, 209, 210, 212, 222, 232, 246, 248, 270, 314, 353, 365, 395, 397, 400, 420, 428, 429, 448, 454, 455, 461, 465, 467, 468, 472, 475, 477, 480, 482, 485, 487, 491, 492, 514, 544, 546, 547, 548, 549, 579, 585, 591, 592, 607, 627, 647, 661, 668, 672, 701, 707, 736, 750, 753, 759, 764, 766, 772, 786, 792, 806, 808, 821, 825, 829, 833, 872, 876, 889, 894, 930, 931, 932, 933, 937, 938, 939, 946, 950, 956, 957, 960, 963, 974, 978, 989, 1010, 1019, 1023, 1024, 1025, 1029, 1034, 1047, 1055, 1056, 1058, 1061, 1070, 1075, 1086, 1087, 1136, 1137, 1144, 1158, 1166, 1187], "mechan": [28, 32, 93, 157, 170, 171, 194, 202, 206, 217, 232, 286, 490, 668, 980, 1001, 1039, 1131, 1159, 1184, 1189, 1199], "where": [28, 53, 93, 113, 126, 128, 146, 155, 156, 166, 169, 170, 171, 172, 173, 175, 177, 180, 185, 190, 191, 198, 199, 202, 203, 206, 229, 230, 231, 232, 239, 242, 245, 246, 248, 255, 258, 262, 270, 279, 286, 304, 312, 321, 325, 328, 365, 370, 371, 406, 410, 420, 428, 429, 431, 432, 433, 446, 450, 461, 463, 473, 483, 496, 503, 534, 536, 547, 562, 568, 585, 604, 665, 668, 672, 690, 748, 749, 753, 771, 827, 831, 833, 845, 875, 876, 890, 893, 896, 917, 922, 930, 937, 938, 939, 946, 951, 957, 959, 962, 965, 966, 982, 992, 993, 1000, 1004, 1005, 1008, 1019, 1023, 1024, 1031, 1033, 1035, 1038, 1060, 1062, 1072, 1113, 1131, 1138, 1143, 1164, 1186, 1189], "could": [28, 50, 57, 114, 115, 128, 133, 141, 145, 166, 167, 170, 171, 175, 177, 181, 191, 200, 202, 208, 222, 231, 232, 242, 252, 258, 286, 296, 298, 299, 317, 320, 332, 383, 411, 455, 476, 478, 491, 492, 516, 549, 600, 608, 672, 684, 690, 703, 704, 712, 727, 737, 752, 787, 804, 833, 846, 872, 890, 938, 939, 946, 957, 963, 1000, 1062, 1113, 1127, 1143, 1153, 1159, 1171, 1184], "exchang": [28, 82, 199, 242, 332, 337, 339, 472, 500, 516, 546, 700, 701, 804, 877, 995, 1088, 1096], "meta": [28, 39, 162, 177, 833, 845, 893], "retriev": [28, 181, 718, 833, 1035, 1083], "check": [28, 29, 38, 92, 101, 108, 123, 126, 133, 155, 169, 170, 172, 173, 174, 175, 176, 181, 185, 190, 202, 206, 210, 214, 239, 245, 248, 255, 258, 262, 286, 299, 350, 373, 376, 398, 413, 422, 424, 425, 430, 438, 445, 449, 457, 459, 475, 539, 540, 562, 573, 585, 592, 600, 607, 608, 625, 646, 684, 700, 701, 712, 749, 784, 786, 806, 808, 813, 833, 849, 850, 852, 929, 930, 937, 938, 960, 965, 971, 974, 978, 1008, 1009, 1014, 1017, 1019, 1026, 1055, 1060, 1073, 1083, 1086, 1090, 1092, 1094, 1110, 1116, 1129, 1159, 1164, 1173, 1184, 1194], "everyth": [28, 42, 43, 102, 128, 141, 149, 163, 170, 176, 177, 194, 202, 206, 210, 221, 229, 247, 248, 276, 285, 286, 289, 292, 306, 307, 321, 324, 376, 383, 400, 420, 423, 448, 462, 468, 472, 533, 591, 592, 594, 601, 605, 610, 615, 665, 707, 736, 740, 756, 763, 784, 785, 786, 802, 811, 831, 835, 838, 863, 866, 867, 869, 870, 894, 915, 929, 930, 931, 937, 938, 939, 956, 958, 959, 970, 983, 984, 990, 992, 995, 1005, 1027, 1033, 1038, 1042, 1138, 1153, 1197, 1198, 1199, 1201], "clearli": [28, 43, 131, 185, 202, 450, 697, 718, 745, 833, 852, 966, 1031, 1062, 1083, 1186], "intersphinx": [28, 167], "spinx": 28, "possibli": [29, 81, 89, 135, 170, 202, 474, 608, 684, 698, 707, 712, 727, 739, 749, 761, 762, 878, 915, 938, 986, 1021, 1147], "arrang": [29, 88, 114, 115, 174, 317, 549, 754, 866, 926], "subgroup": [29, 35, 38, 568], "refer": [29, 70, 94, 101, 114, 115, 128, 134, 146, 169, 175, 176, 190, 192, 197, 206, 209, 211, 214, 215, 226, 227, 229, 231, 232, 237, 240, 241, 243, 244, 246, 247, 248, 253, 254, 255, 258, 262, 264, 266, 267, 269, 273, 281, 282, 284, 289, 291, 292, 296, 297, 299, 302, 303, 305, 308, 309, 311, 312, 320, 321, 323, 324, 325, 328, 330, 335, 336, 337, 339, 342, 343, 345, 346, 347, 349, 351, 352, 353, 354, 355, 356, 365, 429, 435, 442, 481, 538, 546, 555, 557, 568, 590, 591, 592, 593, 608, 609, 611, 612, 613, 616, 619, 635, 641, 645, 654, 657, 658, 659, 667, 672, 675, 678, 679, 682, 683, 684, 685, 686, 687, 698, 718, 730, 731, 739, 742, 746, 750, 755, 763, 783, 784, 785, 786, 792, 793, 795, 797, 800, 803, 810, 814, 824, 833, 837, 842, 845, 848, 851, 854, 876, 906, 915, 929, 930, 937, 938, 962, 1001, 1007, 1023, 1026, 1031, 1032, 1054, 1081, 1082, 1088, 1089, 1090, 1100, 1103, 1111, 1112, 1114, 1115, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1144, 1145, 1164, 1166, 1184, 1185, 1186, 1194], "veri": [29, 35, 37, 38, 65, 66, 169, 170, 172, 191, 202, 206, 209, 211, 222, 227, 230, 253, 256, 279, 303, 325, 376, 383, 404, 411, 421, 422, 442, 458, 459, 461, 467, 474, 477, 492, 579, 590, 603, 618, 636, 664, 693, 694, 732, 735, 738, 749, 752, 771, 833, 838, 843, 871, 872, 931, 936, 938, 939, 956, 957, 973, 978, 993, 1007, 1035, 1043, 1059, 1062, 1066, 1067, 1073, 1077, 1081, 1086, 1131, 1138, 1139, 1160, 1169, 1176, 1184], "unawar": [29, 185, 202, 209], "simpli": [29, 60, 133, 164, 170, 173, 175, 177, 181, 185, 194, 258, 259, 298, 299, 320, 321, 411, 453, 495, 533, 600, 609, 611, 612, 661, 671, 682, 718, 739, 740, 745, 750, 764, 811, 865, 878, 937, 959, 963, 1007, 1023, 1031], "interest": [29, 126, 171, 172, 185, 191, 202, 210, 365, 477, 492, 1030, 1032, 1150], "catalog": [29, 1187], "chapter": [29, 42, 146, 222, 231, 239, 245, 255, 258, 259, 347, 568, 893], "subchapt": 29, "cluster_python": [29, 94, 227, 351, 352, 353, 354, 355, 356, 365, 786, 1032, 1039, 1040, 1041, 1042, 1046, 1054, 1065, 1074, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1132, 1133, 1137, 1138, 1141, 1144, 1145, 1147, 1151, 1158, 1161, 1163, 1168], "cluster_python_bas": [29, 94, 227, 351, 352, 353, 354, 355, 356, 365, 786, 1032, 1039, 1040, 1041, 1042, 1046, 1054, 1065, 1074, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1141, 1144, 1145, 1151, 1158], "fundament": [29, 61, 63, 77, 94, 193, 202, 205, 207, 209, 211, 214, 216, 221, 224, 227, 230, 233, 243, 249, 253, 261, 264, 351, 352, 353, 354, 355, 356, 365, 383, 384, 472, 502, 786, 811, 1032, 1039, 1040, 1041, 1042, 1046, 1065, 1074, 1079, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1141, 1144, 1145, 1151, 1158, 1159], "cluster_python_advanc": [29, 786, 1032, 1039, 1040, 1041, 1042, 1046, 1084, 1087, 1088, 1089, 1090, 1103, 1114, 1117, 1118, 1119, 1124, 1125, 1126, 1127, 1128, 1129, 1132, 1133, 1137, 1141, 1145, 1147, 1158, 1161, 1163, 1168], "cluster_python_advanced_oo": [29, 786, 1032, 1039, 1040, 1041, 1042, 1046, 1090, 1117, 1118, 1119, 1124, 1126, 1129, 1158], "object": [29, 62, 74, 77, 78, 82, 94, 101, 107, 108, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 122, 126, 127, 128, 129, 133, 134, 137, 146, 150, 163, 185, 187, 190, 192, 197, 202, 209, 218, 220, 221, 226, 229, 230, 232, 235, 237, 239, 242, 243, 246, 247, 248, 249, 250, 254, 255, 260, 261, 263, 265, 268, 272, 280, 284, 286, 287, 289, 290, 292, 294, 297, 300, 304, 310, 316, 322, 326, 332, 335, 337, 338, 344, 348, 352, 354, 355, 358, 360, 365, 366, 367, 368, 402, 428, 455, 473, 475, 480, 481, 485, 486, 487, 492, 494, 496, 501, 510, 512, 518, 536, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 555, 557, 562, 568, 582, 590, 591, 593, 595, 598, 599, 601, 603, 604, 609, 611, 612, 613, 615, 616, 619, 635, 641, 645, 646, 647, 654, 657, 658, 661, 662, 664, 667, 668, 672, 673, 675, 676, 677, 678, 680, 681, 682, 683, 684, 685, 686, 687, 690, 698, 699, 701, 702, 712, 718, 730, 732, 734, 735, 739, 740, 745, 746, 748, 750, 751, 754, 755, 761, 763, 764, 770, 771, 776, 780, 781, 783, 784, 785, 786, 876, 929, 1007, 1008, 1009, 1012, 1013, 1014, 1015, 1017, 1023, 1026, 1028, 1029, 1031, 1032, 1035, 1039, 1040, 1041, 1042, 1043, 1045, 1047, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1062, 1071, 1073, 1079, 1080, 1090, 1117, 1118, 1119, 1124, 1126, 1129, 1136, 1150, 1152, 1154, 1155, 1156, 1158, 1164, 1184, 1185, 1187, 1189], "orient": [29, 74, 77, 78, 82, 101, 128, 146, 190, 209, 221, 230, 232, 237, 243, 246, 249, 260, 261, 270, 272, 284, 289, 292, 295, 297, 335, 337, 352, 354, 355, 365, 366, 367, 400, 473, 496, 510, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 555, 557, 590, 591, 598, 613, 616, 619, 635, 641, 645, 654, 657, 658, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 699, 730, 746, 754, 755, 763, 771, 783, 785, 786, 1032, 1039, 1040, 1041, 1042, 1056, 1090, 1117, 1118, 1119, 1124, 1126, 1129, 1158, 1164, 1185, 1187], "cluster_python_advanced_multithread": [29, 786, 1032, 1039, 1040, 1041, 1042, 1129], "cluster_python_exercis": [29, 227, 365, 786, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129], "cluster_python_exercises_legaci": [29, 227, 365, 786, 1090, 1098, 1099, 1100, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1129], "legaci": [29, 227, 365, 495, 786, 1090, 1098, 1099, 1100, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1129, 1179], "cluster_python_exercises_herdt": [29, 786, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1129], "cluster_python_exercises_sensor": [29, 786, 1090, 1117, 1118, 1119, 1129], "sensor": [29, 73, 76, 77, 78, 82, 85, 88, 101, 110, 113, 116, 117, 118, 119, 120, 123, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 140, 144, 145, 146, 149, 197, 206, 210, 246, 267, 278, 286, 295, 298, 299, 314, 317, 320, 324, 335, 338, 365, 369, 371, 489, 494, 496, 504, 510, 511, 514, 515, 519, 525, 528, 534, 538, 539, 540, 541, 542, 543, 544, 555, 558, 559, 560, 561, 562, 563, 564, 565, 590, 598, 663, 700, 749, 750, 751, 775, 777, 786, 833, 929, 936, 968, 970, 987, 1043, 1090, 1118, 1129, 1195], "And": [29, 101, 103, 106, 107, 108, 110, 128, 138, 149, 170, 171, 172, 174, 177, 200, 206, 209, 229, 232, 237, 239, 248, 250, 259, 267, 274, 275, 276, 278, 279, 281, 282, 284, 285, 288, 292, 302, 303, 305, 306, 308, 313, 322, 327, 329, 330, 333, 336, 337, 339, 342, 343, 346, 347, 349, 473, 479, 485, 489, 496, 498, 510, 524, 538, 539, 540, 541, 542, 543, 544, 545, 548, 551, 555, 567, 568, 590, 598, 620, 628, 633, 643, 646, 654, 658, 664, 687, 699, 730, 731, 732, 741, 746, 753, 755, 763, 774, 783, 784, 785, 786, 856, 862, 863, 866, 867, 871, 875, 883, 885, 887, 888, 897, 898, 899, 900, 901, 902, 903, 904, 905, 907, 913, 923, 929, 936, 943, 945, 952, 958, 960, 965, 968, 970, 974, 984, 987, 990, 992, 995, 1007, 1009, 1011, 1012, 1013, 1014, 1015, 1018, 1030, 1032, 1037, 1040, 1041, 1042, 1046, 1047, 1071, 1087, 1088, 1089, 1090, 1103, 1114, 1124, 1125, 1126, 1129, 1141, 1145, 1151, 1158, 1184], "acquisit": [29, 133, 170, 197, 298, 299, 314, 317, 320, 321, 324, 582, 786, 1086, 1090, 1118, 1119, 1129], "seri": [29, 104, 171, 242, 246, 287, 288, 289, 290, 292, 294, 296, 321, 326, 332, 452, 473, 502, 786, 942, 1056, 1088, 1090, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1136, 1145, 1150, 1151, 1152, 1154, 1155, 1199], "cluster_python_exercises_userdb": [29, 786, 1090, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129], "databas": [29, 42, 43, 55, 82, 167, 189, 190, 209, 231, 237, 242, 243, 246, 248, 249, 252, 256, 270, 298, 299, 320, 356, 492, 493, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 786, 889, 920, 941, 1049, 1088, 1090, 1109, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1145, 1149, 1160, 1176], "cluster_python_exercises_csv": [29, 786, 1087, 1088, 1089, 1090, 1129], "csv": [29, 44, 51, 53, 54, 55, 56, 82, 110, 133, 135, 138, 206, 209, 218, 221, 227, 231, 232, 235, 237, 239, 240, 243, 244, 246, 250, 253, 256, 258, 264, 265, 268, 283, 287, 288, 290, 293, 294, 298, 299, 305, 310, 314, 317, 320, 322, 326, 332, 338, 344, 348, 473, 786, 875, 878, 893, 915, 1043, 1046, 1049, 1083, 1090, 1124, 1125, 1126, 1127, 1129, 1131, 1134, 1135, 1136, 1137, 1145], "cluster_python_db": [29, 786, 1087, 1089, 1090, 1129, 1141], "cluster_python_misc": [29, 94, 227, 351, 352, 353, 354, 355, 356, 365, 786, 1032, 1054, 1084, 1088, 1089, 1090, 1100, 1103, 1111, 1114, 1115, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1132, 1133, 1137, 1138, 1144, 1145, 1147, 1151, 1158, 1161, 1168], "cluster_python_misc_ai": [29, 786, 1129, 1132, 1133, 1137, 1138, 1145], "machin": [29, 106, 114, 115, 128, 162, 172, 177, 191, 206, 222, 229, 230, 239, 240, 243, 245, 255, 258, 312, 320, 324, 328, 338, 364, 368, 388, 404, 406, 414, 422, 450, 454, 468, 549, 550, 786, 833, 860, 861, 866, 869, 872, 922, 929, 943, 944, 945, 946, 948, 949, 950, 992, 1007, 1010, 1017, 1031, 1129, 1133, 1137, 1145, 1186], "artifici": [29, 206, 231, 289, 320, 324, 450, 684, 786, 950, 1023, 1129, 1133, 1137, 1138, 1145], "intellig": [29, 170, 206, 246, 282, 289, 292, 302, 308, 320, 324, 342, 343, 371, 786, 804, 1028, 1032, 1129, 1133, 1137, 1138, 1145], "cluster_python_misc_panda": [29, 786, 1129, 1145, 1151], "panda": [29, 191, 202, 221, 227, 240, 253, 267, 270, 288, 291, 303, 320, 322, 324, 327, 331, 333, 344, 383, 474, 786, 1055, 1129, 1131, 1134, 1137, 1145], "cluster_python_draft": [29, 786, 1084, 1129], "cluster_python_swdev": [29, 786, 1084, 1129, 1132, 1133, 1137, 1145, 1147, 1158, 1161, 1163, 1168], "cluster_python_swdev_pytest": [29, 786, 1129, 1158, 1163], "pytest": [29, 246, 256, 259, 267, 270, 279, 288, 296, 298, 303, 314, 317, 320, 321, 324, 325, 343, 373, 474, 786, 1119, 1127, 1128, 1129, 1158], "python_python_5550_xml_etre": [29, 786, 1129], "xml": [29, 133, 166, 167, 317, 338, 786, 1129, 1145], "elementtre": [29, 270, 786, 1129, 1145], "etre": [29, 270, 786, 1129, 1145], "python_basics_python_0220_for": [29, 94, 227, 351, 352, 353, 354, 355, 356, 365, 786, 1032, 1054, 1087, 1088, 1089, 1090, 1100, 1103, 1104, 1106, 1110, 1111, 1112, 1113, 1114, 1115, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1141, 1145], "loop": [29, 32, 34, 38, 42, 61, 63, 93, 94, 101, 114, 115, 128, 133, 137, 146, 158, 163, 170, 185, 194, 206, 209, 211, 214, 215, 216, 219, 227, 229, 230, 231, 233, 237, 240, 243, 248, 249, 251, 253, 254, 259, 261, 263, 264, 266, 267, 269, 279, 282, 289, 292, 299, 302, 303, 308, 309, 317, 321, 325, 330, 331, 333, 335, 336, 337, 342, 343, 346, 347, 349, 351, 352, 353, 354, 355, 356, 357, 365, 370, 388, 391, 394, 403, 406, 418, 425, 426, 427, 434, 440, 444, 447, 448, 451, 452, 460, 464, 469, 470, 537, 538, 579, 590, 621, 626, 683, 690, 692, 718, 730, 753, 764, 783, 785, 786, 821, 831, 836, 850, 864, 866, 870, 877, 933, 955, 956, 957, 965, 991, 995, 1001, 1004, 1005, 1032, 1033, 1036, 1037, 1042, 1054, 1087, 1088, 1089, 1090, 1092, 1094, 1100, 1102, 1103, 1104, 1106, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1141, 1145, 1147, 1183, 1184, 1185, 1194], "gt": [29, 32, 35, 36, 53, 55, 56, 76, 77, 78, 91, 94, 129, 130, 131, 132, 134, 136, 137, 138, 139, 145, 159, 189, 192, 203, 208, 213, 220, 226, 227, 229, 234, 239, 242, 245, 250, 252, 255, 258, 262, 265, 268, 271, 280, 283, 287, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 351, 352, 353, 354, 355, 356, 359, 360, 365, 403, 418, 427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 479, 496, 510, 538, 539, 540, 541, 542, 543, 544, 545, 548, 555, 557, 590, 598, 613, 616, 619, 635, 641, 645, 654, 657, 658, 663, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 692, 699, 706, 730, 731, 741, 746, 755, 763, 771, 783, 785, 786, 790, 793, 795, 798, 800, 803, 805, 809, 810, 812, 814, 816, 818, 824, 826, 828, 830, 837, 839, 842, 844, 848, 851, 854, 856, 860, 861, 862, 863, 866, 867, 874, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 913, 923, 929, 936, 941, 942, 943, 944, 945, 952, 958, 960, 968, 970, 972, 984, 987, 990, 992, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1032, 1039, 1040, 1041, 1042, 1046, 1054, 1065, 1074, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1132, 1133, 1137, 1141, 1144, 1145, 1147, 1151, 1158, 1161, 1163, 1168, 1169], "python_basics_python_0450_dictionari": [29, 94, 786, 1032, 1054, 1090, 1103, 1114, 1129], "python_advanced_modul": [29, 786, 1032, 1084, 1087, 1088, 1089, 1090, 1124, 1125, 1126, 1127, 1128, 1129, 1132, 1133, 1137, 1141, 1145, 1147, 1158, 1161, 1163, 1168], "python_basics_python_0270_funct": [29, 94, 227, 786, 1032, 1054, 1074, 1087, 1088, 1089, 1090, 1100, 1103, 1104, 1106, 1110, 1111, 1112, 1113, 1114, 1115, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1141], "python_basics_python_0140_vari": [29, 94, 227, 351, 352, 353, 354, 355, 356, 365, 786, 1032, 1039, 1040, 1041, 1042, 1046, 1054, 1065, 1074, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1141, 1144, 1145, 1151, 1158], "python_basics_python_0150_datatypes_overview": [29, 94, 227, 351, 352, 353, 354, 355, 356, 365, 786, 1032, 1039, 1040, 1041, 1042, 1046, 1054, 1065, 1074, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1141, 1144, 1145, 1151, 1158], "python_basics_python_0130_syntax_etc": [29, 94, 227, 351, 352, 353, 354, 355, 356, 365, 786, 1032, 1039, 1040, 1041, 1042, 1046, 1054, 1065, 1074, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1141, 1144, 1145, 1151, 1158], "syntax": [29, 72, 94, 163, 193, 202, 209, 210, 212, 214, 215, 216, 221, 227, 228, 233, 237, 240, 243, 249, 253, 255, 259, 260, 261, 264, 267, 269, 280, 282, 289, 291, 292, 302, 303, 305, 308, 309, 330, 331, 333, 334, 336, 337, 342, 343, 345, 346, 347, 351, 352, 353, 354, 355, 356, 365, 512, 591, 592, 695, 712, 739, 752, 786, 921, 1027, 1029, 1030, 1031, 1032, 1039, 1040, 1041, 1042, 1046, 1054, 1056, 1065, 1073, 1074, 1076, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1141, 1144, 1145, 1151, 1158, 1184, 1194], "python_basics_python_0310_strings_format": [29, 94, 227, 786, 1054, 1090, 1100, 1103, 1111, 1112, 1114, 1115, 1129], "python_basics_python_0300_str": [29, 94, 227, 351, 352, 353, 354, 355, 356, 365, 786, 1032, 1054, 1088, 1089, 1090, 1100, 1103, 1111, 1112, 1114, 1115, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1144, 1145], "python_basics_instal": [29, 94, 786, 1054, 1129], "python_basics_python_0250_refs_flat_deep_copi": [29, 94, 227, 351, 352, 353, 354, 355, 356, 365, 786, 1032, 1054, 1088, 1089, 1090, 1100, 1103, 1111, 1112, 1114, 1115, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1144, 1145], "mutabl": [29, 94, 202, 206, 207, 209, 211, 214, 215, 221, 227, 228, 237, 240, 241, 243, 244, 245, 246, 251, 253, 254, 257, 260, 264, 266, 267, 269, 272, 282, 284, 289, 291, 292, 296, 298, 299, 301, 302, 303, 305, 308, 309, 311, 320, 321, 323, 324, 325, 327, 330, 333, 336, 337, 342, 343, 345, 346, 347, 349, 351, 352, 353, 354, 355, 356, 365, 740, 786, 1032, 1054, 1063, 1067, 1088, 1089, 1090, 1100, 1103, 1111, 1112, 1114, 1115, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1144, 1145, 1194], "python_basics_python_0150_datatypes_overview_compound": [29, 94, 227, 351, 352, 353, 354, 355, 356, 365, 786, 1032, 1039, 1040, 1041, 1042, 1046, 1054, 1087, 1088, 1089, 1090, 1098, 1099, 1100, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1141, 1144, 1145, 1151, 1158], "python_basics_python_0400_list": [29, 94, 786, 1054, 1129], "python_basics_python_0320_strings_method": [29, 94, 227, 351, 352, 353, 354, 355, 356, 365, 786, 1032, 1054, 1088, 1089, 1090, 1100, 1103, 1111, 1112, 1114, 1115, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1144, 1145], "method": [29, 42, 43, 54, 55, 57, 62, 69, 73, 74, 77, 94, 101, 110, 111, 114, 115, 125, 133, 139, 141, 145, 146, 175, 206, 207, 208, 209, 211, 214, 227, 228, 230, 232, 237, 240, 241, 243, 248, 249, 251, 253, 254, 257, 259, 260, 261, 262, 264, 267, 269, 279, 282, 284, 288, 289, 292, 294, 296, 297, 298, 299, 302, 303, 305, 308, 309, 311, 314, 317, 320, 321, 323, 324, 325, 327, 330, 331, 333, 335, 336, 337, 339, 342, 343, 345, 346, 347, 349, 351, 352, 353, 354, 355, 356, 365, 369, 370, 446, 472, 492, 494, 496, 500, 510, 517, 518, 536, 538, 543, 548, 549, 550, 555, 557, 562, 568, 581, 583, 590, 591, 592, 595, 604, 616, 618, 619, 635, 641, 645, 651, 654, 657, 658, 661, 662, 663, 664, 667, 672, 673, 675, 678, 679, 682, 683, 684, 685, 686, 687, 690, 699, 712, 729, 730, 733, 737, 746, 754, 755, 763, 764, 770, 771, 777, 780, 781, 783, 784, 785, 786, 794, 796, 801, 802, 811, 813, 823, 835, 846, 978, 1028, 1029, 1032, 1035, 1039, 1043, 1044, 1045, 1046, 1047, 1051, 1054, 1059, 1068, 1071, 1088, 1089, 1090, 1100, 1103, 1111, 1112, 1114, 1115, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1136, 1140, 1144, 1145, 1150, 1153, 1155, 1187, 1194, 1201], "python_basics_python_0120_helloworld": [29, 94, 227, 351, 352, 353, 354, 355, 356, 365, 786, 1032, 1039, 1040, 1041, 1042, 1046, 1054, 1065, 1074, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1141, 1144, 1145, 1151, 1158], "world": [29, 82, 94, 135, 163, 166, 167, 170, 175, 181, 200, 209, 213, 214, 216, 220, 227, 231, 233, 235, 237, 239, 240, 243, 245, 248, 249, 250, 252, 253, 259, 260, 261, 262, 264, 265, 267, 270, 282, 283, 289, 292, 302, 303, 308, 309, 322, 330, 331, 332, 336, 337, 342, 343, 346, 347, 348, 351, 352, 353, 354, 355, 356, 360, 365, 398, 403, 407, 418, 427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 475, 480, 488, 511, 516, 518, 689, 692, 730, 756, 764, 783, 785, 786, 790, 793, 795, 798, 800, 803, 810, 814, 818, 824, 830, 835, 837, 842, 845, 848, 851, 854, 871, 884, 896, 929, 967, 978, 993, 994, 1007, 1019, 1021, 1023, 1024, 1025, 1032, 1039, 1040, 1041, 1042, 1046, 1054, 1058, 1059, 1065, 1068, 1070, 1074, 1075, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1136, 1141, 1144, 1145, 1151, 1158, 1180, 1184, 1194], "python_basics_python_0500_fil": [29, 94, 227, 351, 352, 353, 354, 355, 356, 365, 786, 1032, 1054, 1088, 1089, 1090, 1100, 1103, 1111, 1114, 1115, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1145], "python_misc_encod": [29, 94, 227, 351, 352, 353, 354, 355, 356, 365, 786, 1032, 1054, 1088, 1089, 1090, 1100, 1103, 1111, 1114, 1115, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1144, 1145], "encod": [29, 43, 94, 189, 206, 207, 209, 211, 227, 230, 237, 239, 242, 245, 246, 249, 255, 256, 258, 264, 266, 269, 283, 287, 288, 290, 303, 304, 311, 321, 322, 324, 325, 327, 332, 338, 344, 350, 351, 352, 353, 354, 355, 356, 370, 474, 786, 1032, 1054, 1062, 1067, 1081, 1088, 1089, 1090, 1100, 1103, 1111, 1114, 1115, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1139, 1145, 1147], "python_basics_python_0160_boolean": [29, 94, 227, 351, 352, 353, 354, 355, 356, 365, 786, 1032, 1054, 1065, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1100, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1141, 1145], "boolean": [29, 58, 88, 94, 190, 191, 207, 209, 211, 214, 215, 216, 227, 233, 237, 240, 241, 243, 244, 245, 249, 251, 253, 254, 259, 260, 261, 263, 264, 266, 267, 282, 289, 292, 302, 303, 308, 309, 330, 331, 333, 336, 337, 339, 342, 343, 346, 347, 348, 351, 352, 353, 354, 355, 356, 365, 370, 394, 417, 433, 786, 980, 1032, 1054, 1062, 1065, 1066, 1077, 1087, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1100, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1141, 1143, 1145, 1194], "python_basics_python_0200_sequential_typ": [29, 94, 227, 351, 352, 353, 354, 355, 356, 365, 786, 1032, 1054, 1087, 1088, 1089, 1090, 1100, 1103, 1104, 1106, 1110, 1111, 1112, 1113, 1114, 1115, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1141, 1144, 1145, 1151], "sequenti": [29, 62, 94, 110, 112, 206, 207, 209, 211, 214, 215, 216, 219, 227, 232, 237, 240, 243, 248, 249, 251, 253, 261, 263, 264, 267, 271, 279, 282, 289, 292, 295, 297, 299, 300, 302, 303, 308, 309, 320, 321, 324, 325, 330, 331, 333, 335, 336, 337, 342, 343, 346, 347, 349, 351, 352, 353, 354, 355, 356, 365, 370, 463, 538, 551, 555, 590, 625, 635, 643, 654, 658, 687, 786, 937, 939, 969, 1032, 1037, 1054, 1087, 1088, 1089, 1090, 1100, 1103, 1104, 1106, 1110, 1111, 1112, 1113, 1114, 1115, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1141, 1144, 1145, 1151, 1194], "python_basics_python_0193_whil": [29, 94, 227, 351, 352, 353, 354, 355, 356, 365, 786, 1032, 1054, 1087, 1088, 1089, 1090, 1092, 1094, 1100, 1103, 1104, 1106, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1141, 1145], "python_basics_python_0170_if": [29, 94, 227, 351, 352, 353, 354, 355, 356, 365, 786, 1032, 1054, 1065, 1087, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1097, 1100, 1103, 1104, 1105, 1106, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1141, 1145], "statement": [29, 54, 94, 114, 115, 118, 122, 190, 202, 206, 207, 208, 209, 214, 216, 221, 227, 230, 231, 233, 237, 240, 243, 249, 253, 259, 261, 264, 267, 273, 279, 282, 289, 292, 296, 298, 299, 302, 303, 308, 309, 314, 317, 320, 321, 324, 325, 330, 331, 336, 337, 342, 343, 346, 347, 351, 352, 353, 354, 355, 356, 365, 370, 387, 390, 394, 407, 420, 422, 423, 426, 427, 432, 434, 440, 444, 447, 451, 454, 460, 464, 469, 470, 646, 672, 691, 692, 730, 783, 785, 786, 794, 866, 906, 992, 1013, 1027, 1030, 1032, 1033, 1038, 1042, 1044, 1054, 1061, 1064, 1066, 1073, 1084, 1087, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1097, 1100, 1103, 1104, 1105, 1106, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1132, 1133, 1137, 1141, 1145, 1147, 1158, 1161, 1164, 1168, 1194], "python_basics_python_0460_set": [29, 94, 786, 1054, 1129], "python_basics_python_0125_run": [29, 94, 227, 365, 786, 1054, 1084, 1087, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1097, 1098, 1100, 1103, 1104, 1105, 1106, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129], "run": [29, 42, 61, 62, 63, 94, 101, 112, 114, 115, 141, 160, 163, 166, 169, 170, 171, 172, 173, 176, 177, 180, 181, 189, 201, 202, 209, 210, 222, 227, 231, 232, 237, 242, 250, 258, 259, 262, 265, 268, 270, 275, 282, 283, 286, 289, 290, 292, 300, 302, 303, 304, 308, 309, 313, 322, 326, 329, 330, 331, 332, 336, 337, 338, 342, 343, 344, 346, 347, 350, 365, 368, 390, 408, 450, 453, 461, 462, 466, 467, 479, 480, 492, 497, 516, 517, 518, 546, 548, 549, 550, 572, 599, 612, 621, 633, 690, 748, 749, 784, 786, 806, 821, 831, 833, 834, 843, 866, 868, 870, 871, 872, 873, 889, 890, 893, 894, 924, 937, 938, 939, 940, 948, 950, 958, 960, 976, 989, 991, 992, 993, 995, 1000, 1005, 1007, 1010, 1015, 1017, 1019, 1023, 1028, 1039, 1042, 1054, 1055, 1057, 1084, 1087, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1097, 1098, 1100, 1103, 1104, 1105, 1106, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1133, 1147, 1159, 1165, 1170, 1171, 1176, 1189], "python_basics_python_0139_commandline_argv": [29, 94, 227, 365, 786, 1054, 1084, 1087, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1097, 1098, 1100, 1103, 1104, 1105, 1106, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129], "argument": [29, 57, 62, 94, 101, 128, 149, 163, 169, 172, 175, 189, 190, 203, 206, 218, 227, 230, 237, 239, 243, 245, 246, 248, 249, 251, 253, 255, 256, 259, 260, 261, 262, 264, 267, 282, 283, 286, 289, 292, 296, 298, 299, 302, 303, 304, 308, 309, 317, 320, 321, 324, 325, 326, 330, 331, 336, 337, 342, 343, 346, 347, 365, 387, 388, 433, 440, 444, 447, 451, 460, 464, 469, 470, 474, 536, 568, 592, 602, 603, 692, 707, 727, 730, 740, 752, 783, 784, 785, 786, 791, 792, 893, 915, 929, 963, 965, 967, 970, 987, 1025, 1028, 1032, 1054, 1056, 1057, 1074, 1082, 1084, 1087, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1097, 1098, 1100, 1102, 1103, 1104, 1105, 1106, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1142, 1164, 1166], "sy": [29, 32, 94, 129, 141, 145, 171, 188, 190, 192, 193, 218, 220, 221, 227, 230, 236, 239, 243, 245, 250, 253, 255, 258, 259, 261, 262, 264, 265, 267, 280, 282, 283, 288, 289, 292, 298, 302, 303, 304, 308, 309, 320, 324, 326, 330, 331, 336, 337, 338, 342, 343, 346, 347, 348, 350, 351, 358, 365, 461, 474, 533, 549, 550, 786, 788, 792, 813, 890, 919, 930, 937, 938, 939, 955, 956, 957, 959, 963, 964, 965, 966, 967, 969, 971, 973, 974, 988, 995, 997, 1000, 1004, 1021, 1031, 1038, 1053, 1054, 1073, 1081, 1083, 1084, 1087, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1097, 1098, 1100, 1102, 1103, 1104, 1105, 1106, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1156, 1164, 1179], "argv": [29, 42, 50, 94, 172, 189, 190, 193, 203, 221, 227, 230, 231, 236, 239, 243, 245, 248, 249, 253, 255, 258, 259, 261, 264, 267, 282, 288, 289, 292, 298, 302, 303, 308, 309, 320, 324, 330, 331, 336, 337, 338, 342, 343, 346, 347, 350, 358, 365, 439, 474, 475, 497, 536, 786, 937, 963, 964, 965, 966, 967, 971, 974, 988, 995, 1004, 1025, 1031, 1038, 1054, 1083, 1084, 1087, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1097, 1098, 1100, 1102, 1103, 1104, 1105, 1106, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1171, 1176], "python_basics_python_0110_blahblah": [29, 94, 227, 351, 352, 353, 354, 355, 356, 365, 786, 1032, 1039, 1040, 1041, 1042, 1046, 1054, 1065, 1074, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1141, 1144, 1145, 1151, 1158], "blahblah": [29, 94, 209, 214, 216, 227, 233, 237, 240, 243, 249, 253, 259, 260, 261, 263, 264, 266, 267, 269, 282, 289, 292, 302, 303, 308, 309, 330, 331, 333, 336, 337, 338, 342, 343, 346, 347, 351, 352, 353, 354, 355, 356, 365, 786, 1032, 1039, 1040, 1041, 1042, 1046, 1054, 1065, 1074, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1141, 1144, 1145, 1151, 1158, 1194], "python_basics_python_1000_function_object": [29, 94, 786, 1054, 1129], "python_basics_python_0210_indexing_sl": [29, 94, 786, 1054, 1090, 1103, 1114, 1129, 1145, 1151], "python_basics_python_0225_rang": [29, 94, 227, 786, 1032, 1054, 1087, 1088, 1089, 1090, 1100, 1103, 1104, 1106, 1110, 1111, 1112, 1113, 1114, 1115, 1129, 1141], "python_advanced_stararg": [29, 786, 1032, 1129], "keyword": [29, 39, 62, 154, 165, 203, 206, 207, 208, 209, 211, 230, 232, 246, 251, 256, 258, 279, 282, 283, 289, 292, 296, 298, 299, 302, 304, 308, 314, 317, 320, 321, 324, 325, 365, 432, 462, 605, 606, 608, 626, 677, 737, 786, 982, 1028, 1029, 1030, 1032, 1056, 1072, 1074, 1086, 1129, 1142, 1181, 1183], "python_advanced_context_mgr": [29, 786, 1032, 1129], "python_advanced_except": [29, 786, 1032, 1129], "python_advanced_iteration_gener": [29, 786, 1032, 1129], "comprehens": [29, 62, 72, 190, 191, 203, 206, 209, 215, 229, 230, 231, 238, 243, 244, 246, 247, 248, 251, 254, 260, 263, 279, 282, 284, 291, 296, 302, 303, 308, 309, 320, 321, 323, 324, 325, 330, 331, 333, 336, 337, 339, 342, 343, 345, 346, 347, 735, 786, 804, 821, 829, 1032, 1037, 1129, 1150], "python_advanced_oo_classes_and_dict": [29, 786, 1032, 1039, 1040, 1041, 1042, 1046, 1090, 1117, 1118, 1119, 1124, 1126, 1129, 1158], "python_advanced_oo_inherit": [29, 786, 1032, 1039, 1040, 1041, 1042, 1046, 1129, 1158], "inherit": [29, 69, 73, 77, 110, 146, 187, 197, 206, 230, 243, 260, 262, 295, 296, 297, 298, 299, 303, 320, 321, 324, 325, 335, 343, 374, 496, 510, 538, 546, 548, 588, 590, 591, 615, 664, 667, 687, 729, 771, 785, 786, 825, 865, 868, 871, 892, 894, 1001, 1030, 1032, 1040, 1041, 1042, 1043, 1046, 1048, 1051, 1129, 1158, 1200], "python_advanced_python_1010_generators_yield": [29, 786, 1032, 1087, 1088, 1089, 1090, 1103, 1114, 1129, 1141], "python_advanced_closur": [29, 786, 1032, 1129], "closur": [29, 61, 62, 63, 189, 202, 206, 214, 215, 230, 243, 246, 256, 289, 292, 321, 325, 734, 786, 1029, 1032, 1072, 1074, 1129, 1194], "python_advanced_comprehens": [29, 786, 1032, 1129], "python_advanced_exec": [29, 786, 1032, 1129], "python_advanced_decor": [29, 786, 1032, 1129], "decor": [29, 61, 63, 65, 190, 202, 205, 206, 221, 230, 246, 256, 270, 325, 489, 496, 510, 524, 538, 590, 786, 1028, 1032, 1043, 1050, 1051, 1053, 1074, 1129, 1131, 1164, 1187], "python_advanced_oo_method": [29, 786, 1032, 1046, 1090, 1117, 1118, 1119, 1129], "python_advanced_oo_namedtupl": [29, 786, 1032, 1046, 1090, 1124, 1126, 1129], "namedtupl": [29, 206, 214, 221, 236, 237, 239, 245, 255, 258, 279, 296, 298, 299, 303, 314, 317, 320, 321, 324, 325, 337, 343, 347, 348, 786, 1032, 1046, 1090, 1124, 1126, 1129, 1149, 1194], "python_advanced_oo_operator_overload": [29, 786, 1032, 1046, 1129], "overload": [29, 101, 146, 189, 197, 206, 232, 260, 295, 296, 297, 298, 299, 320, 324, 325, 327, 334, 343, 458, 538, 546, 555, 557, 590, 592, 613, 616, 617, 619, 625, 635, 641, 645, 646, 654, 657, 658, 672, 673, 675, 676, 678, 679, 680, 682, 683, 684, 685, 686, 687, 698, 699, 703, 730, 746, 755, 763, 783, 785, 786, 792, 1032, 1046, 1129, 1150, 1183], "python_advanced_oo_properti": [29, 786, 1032, 1046, 1129], "properti": [29, 40, 190, 206, 230, 243, 260, 262, 279, 283, 296, 298, 299, 303, 313, 314, 317, 320, 321, 324, 325, 329, 337, 343, 347, 369, 478, 479, 480, 485, 488, 786, 1032, 1046, 1129, 1170, 1173], "python_advanced_oo_str_repr": [29, 786, 1032, 1046, 1129], "str": [29, 189, 192, 203, 213, 218, 220, 221, 226, 229, 231, 239, 242, 245, 250, 252, 255, 258, 262, 265, 268, 271, 279, 280, 282, 283, 287, 288, 289, 290, 292, 294, 296, 298, 299, 300, 302, 303, 304, 308, 310, 314, 315, 317, 318, 320, 321, 322, 324, 325, 326, 330, 332, 336, 337, 338, 342, 343, 344, 346, 348, 350, 356, 359, 360, 361, 365, 438, 456, 474, 523, 528, 609, 610, 611, 612, 727, 739, 786, 1030, 1032, 1044, 1046, 1047, 1050, 1059, 1061, 1062, 1073, 1077, 1081, 1088, 1096, 1098, 1129, 1144, 1150, 1155, 1156], "repr": [29, 220, 239, 245, 255, 258, 262, 265, 268, 279, 282, 283, 289, 292, 296, 298, 299, 302, 303, 304, 308, 314, 315, 317, 320, 321, 324, 325, 330, 336, 342, 343, 346, 786, 1030, 1032, 1046, 1047, 1129], "python_advanced_oo_abc": [29, 786, 1032, 1046, 1129], "abstract": [29, 64, 67, 82, 88, 206, 246, 278, 295, 296, 297, 298, 299, 320, 321, 324, 325, 343, 369, 433, 472, 474, 489, 496, 500, 502, 504, 510, 512, 524, 538, 548, 590, 625, 664, 665, 742, 774, 786, 866, 870, 939, 954, 1032, 1046, 1129, 1187, 1189], "abc": [29, 32, 189, 203, 206, 208, 213, 218, 220, 226, 229, 231, 235, 239, 242, 245, 246, 250, 252, 255, 258, 262, 265, 268, 271, 279, 280, 283, 290, 296, 298, 299, 300, 304, 310, 314, 317, 320, 321, 322, 324, 325, 326, 332, 338, 343, 344, 348, 352, 360, 474, 548, 617, 638, 655, 657, 774, 786, 1032, 1046, 1062, 1129, 1153], "duck": [29, 32, 205, 206, 260, 279, 296, 298, 299, 303, 320, 321, 324, 325, 335, 343, 489, 548, 690, 692, 730, 738, 739, 744, 750, 771, 776, 783, 785, 786, 1032, 1039, 1046, 1129, 1131, 1136, 1184], "python_advanced_oo_constructor": [29, 786, 1032, 1039, 1040, 1041, 1042, 1046, 1129, 1158], "constructor": [29, 43, 53, 56, 74, 101, 114, 115, 123, 128, 133, 136, 139, 141, 145, 146, 197, 203, 209, 229, 230, 232, 243, 248, 256, 260, 279, 282, 284, 289, 292, 295, 296, 297, 298, 299, 300, 302, 303, 308, 314, 317, 320, 321, 324, 325, 330, 335, 336, 337, 342, 343, 346, 347, 367, 368, 369, 442, 496, 510, 536, 538, 541, 544, 548, 549, 568, 577, 583, 590, 591, 592, 598, 615, 646, 662, 663, 672, 675, 676, 677, 678, 680, 681, 682, 683, 684, 685, 686, 687, 690, 698, 699, 700, 702, 728, 730, 746, 749, 750, 751, 755, 760, 761, 762, 763, 764, 771, 783, 785, 786, 792, 794, 825, 978, 1032, 1039, 1040, 1041, 1042, 1044, 1046, 1047, 1048, 1062, 1129, 1158, 1164, 1176, 1184], "python_advanced_multithreading_exam_quest": [29, 786, 1032, 1040, 1042, 1129], "exam": [29, 100, 101, 110, 231, 247, 276, 285, 306, 367, 379, 786, 863, 929, 970, 990, 1032, 1040, 1129], "python_advanced_multithreading_bas": [29, 786, 1032, 1039, 1040, 1041, 1042, 1129], "python_advanced_multithreading_mutex": [29, 786, 1032, 1040, 1041, 1042, 1129], "race": [29, 76, 77, 78, 82, 91, 170, 188, 248, 274, 275, 277, 286, 297, 298, 299, 320, 321, 324, 334, 373, 374, 380, 449, 459, 568, 740, 756, 763, 785, 786, 810, 814, 835, 837, 842, 846, 848, 851, 854, 929, 959, 969, 970, 975, 983, 984, 990, 1032, 1040, 1042, 1129, 1189, 1199, 1200], "condit": [29, 76, 77, 78, 82, 91, 93, 145, 170, 181, 188, 229, 248, 268, 274, 275, 277, 286, 297, 298, 299, 320, 321, 324, 334, 373, 374, 380, 388, 390, 394, 417, 418, 420, 421, 423, 425, 427, 434, 440, 444, 447, 449, 451, 459, 460, 464, 469, 470, 477, 482, 483, 484, 568, 585, 674, 692, 730, 740, 750, 756, 763, 764, 783, 785, 786, 810, 814, 835, 837, 842, 846, 848, 850, 851, 854, 929, 959, 965, 969, 970, 975, 983, 984, 986, 990, 1032, 1040, 1042, 1065, 1066, 1081, 1129, 1135, 1150, 1189, 1199, 1200], "mutex": [29, 76, 77, 78, 80, 82, 91, 93, 188, 217, 248, 273, 274, 275, 277, 286, 297, 298, 299, 320, 321, 324, 334, 373, 374, 380, 568, 757, 759, 761, 762, 763, 785, 786, 810, 814, 831, 835, 836, 837, 842, 848, 851, 852, 854, 929, 970, 975, 980, 983, 984, 1032, 1040, 1042, 1129, 1184, 1189, 1200], "python_exercises_legacy_function_prim": [29, 227, 786, 1090, 1100, 1103, 1104, 1110, 1111, 1112, 1113, 1114, 1115, 1129], "prime": [29, 38, 189, 190, 209, 213, 214, 216, 221, 227, 233, 237, 249, 253, 256, 261, 267, 282, 289, 302, 303, 308, 309, 330, 331, 336, 337, 342, 343, 346, 347, 349, 450, 786, 1090, 1100, 1103, 1104, 1106, 1111, 1112, 1113, 1114, 1115, 1129, 1194], "python_exercises_legacy_max_numbers_funct": [29, 227, 786, 1090, 1100, 1103, 1104, 1106, 1110, 1111, 1112, 1113, 1114, 1115, 1129], "determin": [29, 106, 128, 163, 169, 193, 198, 200, 208, 209, 214, 216, 221, 227, 233, 237, 239, 240, 243, 249, 253, 259, 261, 264, 266, 267, 282, 289, 302, 303, 308, 309, 330, 331, 336, 337, 342, 343, 346, 347, 668, 702, 703, 740, 786, 841, 863, 882, 883, 884, 885, 886, 887, 888, 925, 929, 938, 956, 993, 994, 1024, 1090, 1092, 1093, 1094, 1097, 1100, 1103, 1104, 1110, 1111, 1112, 1113, 1114, 1115, 1129, 1159, 1194], "python_exercises_legacy_uniq_funct": [29, 227, 786, 1090, 1100, 1103, 1104, 1111, 1112, 1113, 1114, 1115, 1129], "uniq": [29, 189, 190, 207, 209, 221, 227, 237, 240, 243, 249, 253, 259, 261, 264, 282, 289, 302, 303, 308, 309, 325, 330, 331, 336, 337, 342, 343, 346, 347, 566, 786, 926, 1090, 1100, 1103, 1104, 1111, 1112, 1115, 1129], "python_exercises_legacy_while_prim": [29, 227, 786, 1090, 1100, 1103, 1104, 1106, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1129], "python_exercises_legacy_cmdline_digit": [29, 227, 365, 786, 1090, 1098, 1100, 1103, 1104, 1106, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1129], "digit": [29, 163, 189, 190, 209, 216, 221, 227, 237, 240, 249, 253, 258, 259, 261, 262, 264, 266, 267, 282, 289, 302, 303, 304, 308, 309, 321, 330, 331, 332, 336, 337, 342, 343, 346, 347, 348, 350, 370, 396, 405, 786, 1090, 1100, 1103, 1104, 1106, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1129], "word": [29, 43, 69, 163, 170, 190, 198, 202, 206, 209, 216, 221, 227, 231, 237, 240, 248, 249, 253, 256, 258, 259, 261, 264, 266, 267, 274, 275, 277, 282, 289, 296, 302, 303, 304, 308, 309, 321, 330, 331, 334, 335, 336, 337, 342, 343, 346, 347, 365, 370, 395, 448, 490, 495, 568, 668, 746, 755, 763, 785, 786, 873, 875, 922, 994, 1090, 1100, 1103, 1104, 1106, 1110, 1111, 1112, 1113, 1114, 1116, 1129], "python_exercises_legacy_distil": [29, 227, 786, 1090, 1100, 1103, 1114, 1129], "elimin": [29, 58, 163, 227, 249, 256, 258, 259, 261, 267, 282, 289, 302, 308, 309, 330, 336, 337, 342, 343, 346, 347, 517, 562, 690, 753, 771, 772, 786, 926, 1033, 1090, 1103, 1114, 1129], "empti": [29, 38, 42, 48, 50, 170, 173, 180, 188, 208, 210, 227, 239, 242, 249, 250, 256, 258, 259, 261, 262, 265, 267, 268, 271, 282, 283, 288, 289, 290, 300, 302, 304, 308, 309, 326, 330, 332, 336, 337, 338, 342, 343, 344, 346, 347, 360, 394, 446, 585, 594, 595, 599, 609, 611, 627, 628, 646, 664, 684, 690, 739, 749, 750, 762, 784, 786, 796, 833, 860, 861, 873, 877, 887, 924, 933, 946, 980, 1000, 1038, 1079, 1090, 1103, 1104, 1108, 1114, 1129], "comment": [29, 34, 35, 36, 38, 44, 123, 124, 163, 172, 207, 227, 228, 230, 243, 249, 251, 255, 256, 259, 261, 266, 267, 282, 289, 291, 302, 308, 309, 330, 336, 337, 342, 343, 346, 347, 365, 388, 433, 452, 480, 517, 518, 546, 786, 938, 1076, 1090, 1103, 1114, 1129, 1144], "line": [29, 34, 35, 36, 38, 62, 126, 134, 166, 167, 170, 172, 175, 185, 189, 192, 193, 206, 210, 220, 222, 226, 227, 229, 230, 235, 236, 239, 240, 242, 243, 245, 246, 248, 249, 250, 253, 255, 256, 258, 259, 261, 262, 265, 267, 268, 270, 271, 282, 283, 288, 289, 290, 292, 296, 300, 302, 303, 304, 308, 309, 310, 322, 326, 330, 332, 336, 337, 338, 342, 343, 344, 346, 347, 348, 356, 365, 388, 394, 395, 403, 407, 410, 412, 418, 427, 429, 434, 440, 444, 447, 451, 456, 460, 463, 464, 466, 469, 470, 474, 477, 480, 487, 517, 518, 668, 671, 674, 692, 730, 783, 785, 786, 802, 806, 813, 815, 833, 860, 861, 864, 873, 875, 877, 899, 920, 922, 924, 925, 926, 930, 934, 937, 938, 939, 981, 991, 1022, 1028, 1029, 1030, 1033, 1034, 1035, 1043, 1044, 1050, 1051, 1058, 1072, 1073, 1075, 1077, 1079, 1081, 1082, 1083, 1088, 1090, 1103, 1109, 1114, 1128, 1129, 1131, 1134, 1139, 1144, 1152, 1153, 1165], "python_exercises_legacy_revert": [29, 227, 786, 1090, 1100, 1103, 1111, 1114, 1129], "revert": [29, 145, 170, 227, 786, 811, 829, 991, 1050, 1090, 1100, 1103, 1114, 1129], "python_exercises_legacy_mixed_list_interact": [29, 227, 786, 1090, 1100, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1129], "interact": [29, 62, 89, 139, 141, 145, 166, 177, 209, 210, 216, 227, 237, 239, 240, 243, 245, 253, 255, 258, 263, 282, 283, 289, 302, 303, 308, 309, 311, 330, 331, 336, 337, 342, 343, 346, 347, 786, 893, 941, 946, 949, 959, 1021, 1056, 1090, 1099, 1100, 1103, 1104, 1105, 1106, 1107, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1129, 1136, 1144], "interpret": [29, 62, 166, 172, 190, 191, 202, 206, 209, 216, 227, 230, 237, 239, 240, 243, 245, 253, 255, 258, 262, 278, 279, 282, 288, 289, 302, 303, 304, 308, 309, 311, 320, 321, 325, 330, 331, 336, 337, 342, 343, 346, 347, 365, 450, 485, 489, 496, 500, 510, 524, 538, 590, 786, 833, 917, 939, 960, 1007, 1008, 1055, 1056, 1057, 1058, 1088, 1090, 1099, 1100, 1103, 1104, 1105, 1106, 1107, 1110, 1111, 1112, 1113, 1114, 1115, 1129, 1131, 1144, 1166, 1187], "python_exercises_legacy_python_1011_generators_yield": [29, 786, 1090, 1103, 1129], "fibonacci": [29, 190, 193, 209, 230, 243, 282, 296, 298, 299, 303, 309, 320, 321, 324, 697, 719, 786, 1035, 1036, 1037, 1090, 1103, 1129], "python_exercises_legacy_uniq_gener": [29, 786, 1090, 1103, 1114, 1129], "python_exercises_legacy_for_prim": [29, 227, 786, 1090, 1100, 1103, 1104, 1106, 1110, 1111, 1112, 1113, 1114, 1115, 1129], "python_exercises_legacy_passwd": [29, 786, 1090, 1103, 1114, 1129], "pars": [29, 189, 226, 227, 237, 238, 240, 243, 249, 253, 258, 259, 261, 267, 270, 298, 303, 320, 324, 351, 356, 369, 786, 1084, 1090, 1103, 1114, 1129, 1131, 1156], "passwd": [29, 104, 105, 128, 210, 220, 229, 242, 243, 245, 249, 250, 253, 258, 259, 261, 265, 267, 268, 276, 283, 285, 286, 290, 300, 304, 306, 307, 326, 332, 338, 344, 784, 786, 863, 865, 868, 870, 873, 875, 877, 888, 907, 910, 912, 913, 915, 918, 920, 924, 926, 929, 930, 940, 941, 949, 950, 954, 955, 960, 966, 986, 1000, 1028, 1030, 1077, 1081, 1090, 1103, 1114, 1129, 1159], "python_exercises_legacy_mixed_list_execut": [29, 227, 786, 1090, 1100, 1103, 1104, 1105, 1106, 1107, 1110, 1111, 1112, 1113, 1114, 1115, 1129], "execut": [29, 44, 62, 112, 114, 115, 128, 163, 166, 170, 172, 180, 181, 185, 190, 197, 202, 209, 216, 222, 227, 237, 239, 240, 243, 245, 253, 255, 258, 282, 289, 302, 303, 308, 309, 312, 313, 328, 329, 330, 331, 336, 337, 342, 343, 346, 347, 350, 351, 358, 365, 387, 388, 422, 424, 428, 450, 455, 459, 468, 476, 479, 480, 492, 511, 514, 521, 528, 533, 547, 576, 600, 615, 718, 784, 786, 831, 833, 859, 860, 861, 868, 870, 875, 880, 881, 889, 893, 940, 949, 978, 991, 1005, 1007, 1008, 1009, 1010, 1013, 1017, 1019, 1023, 1025, 1031, 1035, 1039, 1042, 1055, 1065, 1066, 1069, 1088, 1090, 1100, 1103, 1104, 1105, 1106, 1110, 1111, 1112, 1113, 1114, 1115, 1129, 1140, 1143, 1172, 1174, 1186, 1197, 1198], "python_exercises_legacy_wc": [29, 227, 786, 1090, 1100, 1103, 1111, 1114, 1115, 1129], "charact": [29, 172, 188, 213, 218, 222, 227, 231, 235, 242, 248, 258, 265, 268, 286, 289, 304, 310, 326, 388, 389, 395, 403, 406, 412, 413, 418, 427, 434, 440, 444, 447, 450, 451, 455, 457, 460, 464, 469, 470, 655, 692, 730, 783, 784, 785, 786, 795, 800, 803, 810, 814, 824, 827, 835, 837, 842, 848, 849, 851, 854, 873, 875, 893, 915, 929, 937, 992, 1042, 1061, 1075, 1076, 1077, 1081, 1083, 1090, 1093, 1100, 1103, 1111, 1114, 1129, 1144, 1171], "python_exercises_legacy_python_0350_exercis": [29, 227, 786, 1090, 1100, 1103, 1111, 1112, 1114, 1115, 1129], "right": [29, 34, 35, 36, 38, 42, 62, 84, 88, 133, 163, 169, 170, 172, 175, 190, 210, 221, 222, 227, 232, 237, 250, 252, 258, 262, 270, 283, 296, 304, 347, 351, 357, 389, 409, 410, 411, 417, 428, 458, 488, 539, 547, 594, 609, 611, 612, 690, 702, 718, 744, 749, 754, 766, 786, 794, 813, 817, 833, 852, 875, 876, 878, 893, 948, 978, 1028, 1050, 1061, 1067, 1090, 1100, 1103, 1111, 1114, 1115, 1129], "justifi": [29, 190, 202, 227, 237, 258, 304, 389, 756, 786, 1055, 1090, 1100, 1103, 1111, 1114, 1115, 1129], "python_exercises_legacy_max_numb": [29, 227, 786, 1090, 1100, 1103, 1104, 1105, 1106, 1110, 1111, 1112, 1113, 1114, 1115, 1129], "python_exercises_legacy_dict_keyerror": [29, 786, 1090, 1099, 1103, 1129], "python_exercises_legacy_join_funct": [29, 227, 786, 1090, 1100, 1103, 1104, 1111, 1112, 1114, 1115, 1129], "join": [29, 35, 62, 181, 209, 227, 229, 230, 235, 237, 239, 242, 243, 245, 250, 254, 260, 268, 283, 290, 300, 304, 310, 326, 333, 338, 344, 349, 350, 359, 474, 567, 690, 751, 757, 762, 764, 786, 976, 981, 1004, 1090, 1100, 1103, 1111, 1112, 1114, 1115, 1129, 1164], "python_exercises_herdt_max_numb": [29, 786, 1090, 1092, 1093, 1094, 1095, 1097, 1129], "python_exercises_herdt_swap": [29, 786, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1129], "python_exercises_herdt_boolean": [29, 786, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1129], "express": [29, 61, 63, 189, 205, 206, 208, 209, 219, 229, 238, 243, 244, 246, 250, 269, 270, 272, 273, 274, 275, 278, 279, 284, 303, 304, 309, 322, 333, 339, 388, 390, 394, 398, 407, 408, 410, 411, 412, 415, 417, 420, 422, 423, 425, 427, 433, 434, 440, 444, 447, 451, 460, 464, 469, 470, 474, 489, 498, 510, 511, 514, 518, 524, 525, 538, 546, 590, 592, 670, 692, 703, 707, 712, 730, 783, 785, 786, 893, 926, 1007, 1027, 1037, 1043, 1064, 1066, 1073, 1075, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1127, 1128, 1129, 1131, 1152, 1183, 1184, 1185], "python_exercises_herdt_while_even_numb": [29, 786, 1090, 1092, 1094, 1129], "python_exercises_herdt_username_password": [29, 786, 1090, 1092, 1094, 1097, 1129], "usernam": [29, 185, 214, 222, 243, 362, 786, 860, 868, 877, 940, 950, 1077, 1090, 1092, 1094, 1109, 1129, 1194], "password": [29, 177, 180, 185, 210, 214, 222, 243, 362, 365, 370, 786, 868, 890, 930, 940, 941, 946, 1090, 1092, 1094, 1109, 1129, 1142, 1194], "python_exercises_herdt_greet": [29, 786, 1090, 1092, 1093, 1094, 1097, 1129], "python_exercises_sensors_sensor_const": [29, 786, 1090, 1117, 1118, 1119, 1129], "python_exercises_sensors_project_setup": [29, 786, 1090, 1117, 1118, 1119, 1129], "setup": [29, 110, 128, 141, 154, 158, 167, 185, 197, 201, 202, 240, 242, 258, 265, 268, 270, 275, 277, 283, 286, 290, 300, 304, 326, 332, 338, 344, 362, 365, 370, 371, 456, 489, 503, 514, 516, 530, 544, 547, 549, 550, 683, 685, 786, 801, 827, 924, 929, 937, 939, 954, 956, 967, 1004, 1008, 1012, 1014, 1017, 1018, 1028, 1035, 1043, 1086, 1090, 1117, 1129, 1165, 1175, 1177], "python_exercises_userdb_csvread": [29, 786, 1090, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129], "reader": [29, 167, 242, 256, 259, 264, 267, 279, 282, 302, 303, 308, 309, 330, 331, 337, 338, 342, 343, 346, 347, 455, 474, 497, 786, 877, 1043, 1046, 1073, 1090, 1120, 1121, 1124, 1125, 1126, 1127, 1128, 1129], "python_misc_csv": [29, 786, 1088, 1089, 1090, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1145], "python_exercises_userdb_csvdictread": [29, 786, 1090, 1120, 1121, 1124, 1125, 1126, 1127, 1128, 1129], "dictread": [29, 221, 242, 243, 256, 259, 264, 267, 279, 282, 302, 303, 308, 309, 326, 330, 331, 337, 342, 343, 346, 347, 786, 1046, 1088, 1090, 1124, 1125, 1126, 1127, 1128, 1129], "python_exercises_userdb_csvdictreader_funct": [29, 786, 1090, 1121, 1124, 1125, 1126, 1127, 1128, 1129], "refactor": [29, 43, 55, 141, 167, 256, 259, 264, 267, 279, 282, 298, 302, 303, 308, 309, 330, 331, 337, 342, 343, 346, 347, 433, 473, 490, 737, 786, 794, 800, 810, 814, 824, 835, 837, 842, 848, 851, 854, 929, 1046, 1090, 1124, 1125, 1126, 1127, 1129], "Into": [29, 101, 248, 253, 256, 259, 264, 267, 279, 282, 288, 302, 303, 308, 309, 330, 331, 337, 342, 343, 346, 347, 403, 418, 427, 433, 434, 440, 444, 447, 451, 460, 464, 468, 469, 470, 537, 538, 590, 675, 676, 677, 678, 679, 680, 682, 683, 684, 685, 686, 687, 692, 730, 783, 785, 786, 1021, 1046, 1090, 1124, 1125, 1126, 1127, 1129], "python_exercises_userdb_mqtt_publish_csv": [29, 786, 1090, 1124, 1125, 1129], "mqtt": [29, 126, 132, 133, 135, 138, 219, 221, 235, 237, 246, 259, 260, 264, 298, 299, 314, 317, 320, 371, 374, 376, 786, 1046, 1086, 1090, 1124, 1127, 1129, 1145], "publish": [29, 126, 136, 174, 176, 185, 246, 258, 259, 279, 321, 362, 371, 373, 786, 1046, 1090, 1124, 1127, 1129, 1131, 1162], "python_exercises_userdb_user_json": [29, 786, 1090, 1124, 1125, 1126, 1127, 1129], "json": [29, 82, 89, 96, 128, 133, 136, 167, 203, 209, 219, 233, 237, 238, 246, 247, 255, 258, 259, 263, 266, 272, 281, 314, 316, 317, 319, 321, 324, 338, 385, 786, 1046, 1090, 1124, 1125, 1126, 1129, 1147, 1160], "python_exercises_userdb_csvreader_funct": [29, 786, 1090, 1123, 1124, 1129], "python_exercises_userdb_user_class_person": [29, 786, 1090, 1124, 1126, 1129], "awai": [29, 62, 81, 88, 169, 170, 171, 175, 194, 210, 231, 237, 245, 279, 282, 302, 303, 308, 314, 317, 330, 336, 337, 342, 346, 354, 486, 749, 786, 872, 893, 1004, 1028, 1046, 1090, 1124, 1129], "raw": [29, 62, 141, 215, 218, 221, 226, 238, 241, 250, 254, 260, 274, 275, 279, 281, 282, 286, 288, 302, 303, 308, 311, 314, 317, 321, 330, 336, 337, 342, 346, 350, 360, 386, 474, 475, 481, 504, 511, 549, 629, 750, 786, 869, 1046, 1062, 1067, 1083, 1090, 1124, 1129], "python_exercises_userdb_userdb_modul": [29, 786, 1090, 1124, 1125, 1126, 1127, 1128, 1129], "both": [29, 54, 62, 89, 128, 129, 131, 137, 141, 145, 160, 170, 172, 177, 190, 202, 208, 229, 245, 248, 256, 259, 262, 264, 267, 279, 282, 294, 302, 303, 308, 309, 330, 331, 337, 342, 343, 346, 347, 466, 472, 474, 475, 500, 546, 548, 568, 600, 608, 681, 737, 748, 786, 804, 827, 833, 872, 973, 977, 981, 994, 1017, 1023, 1030, 1043, 1046, 1050, 1057, 1064, 1071, 1075, 1080, 1090, 1093, 1096, 1102, 1124, 1125, 1126, 1127, 1129, 1137, 1164, 1171, 1184], "python_exercises_csv_csv_modul": [29, 786, 1088, 1089, 1090, 1129], "python_exercises_csv_csv_db": [29, 786, 1087, 1089, 1090, 1129], "sqlite3": [29, 89, 206, 237, 243, 249, 256, 786, 1089, 1090, 1129, 1140, 1141, 1145], "python_db_sqlite3": [29, 786, 1087, 1089, 1090, 1129, 1141], "dbapi": [29, 206, 237, 249, 786, 1087, 1089, 1090, 1129, 1141], "python_db_postgr": [29, 786, 1129, 1141], "postgresql": [29, 786, 1129, 1140, 1141], "python_db_dbapi2": [29, 786, 1087, 1089, 1090, 1129, 1141], "python_misc_vscod": [29, 786, 1129, 1145], "visual": [29, 82, 108, 197, 202, 206, 207, 209, 211, 222, 231, 232, 237, 240, 253, 259, 267, 270, 282, 286, 289, 292, 296, 302, 303, 308, 309, 330, 331, 336, 337, 342, 346, 347, 365, 370, 385, 786, 872, 938, 1009, 1055, 1088, 1129, 1145], "studio": [29, 108, 197, 202, 206, 207, 209, 211, 222, 231, 232, 237, 240, 253, 259, 267, 282, 286, 289, 292, 296, 302, 303, 308, 309, 330, 331, 336, 337, 342, 346, 347, 365, 370, 385, 786, 872, 1055, 1129, 1145], "python_misc_mqtt": [29, 786, 1129, 1145, 1147], "python_swdev_venv": [29, 786, 1084, 1129, 1132, 1133, 1137, 1145, 1147, 1158, 1168], "python_misc_import": [29, 786, 1084, 1129, 1132, 1133, 1137, 1145, 1147, 1158, 1161, 1168], "incomplet": [29, 118, 121, 200, 239, 245, 255, 258, 262, 483, 590, 665, 771, 786, 936, 1084, 1129, 1132, 1133, 1137, 1145, 1147, 1158, 1161, 1168, 1169], "python_misc_ai_machine_learning_intro": [29, 786, 1129, 1132, 1133, 1137, 1138, 1145], "concept": [29, 82, 101, 102, 103, 127, 128, 149, 150, 170, 180, 194, 202, 206, 208, 210, 212, 222, 273, 276, 285, 286, 289, 306, 320, 324, 367, 368, 383, 386, 433, 456, 496, 510, 538, 539, 540, 541, 542, 543, 544, 545, 548, 590, 632, 689, 730, 740, 763, 785, 786, 856, 860, 861, 862, 863, 866, 872, 874, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 913, 923, 929, 941, 942, 943, 944, 945, 952, 958, 960, 968, 970, 974, 984, 987, 990, 992, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1061, 1069, 1079, 1129, 1132, 1133, 1137, 1144, 1145, 1147, 1199], "terminologi": [29, 102, 103, 128, 149, 150, 176, 194, 206, 241, 276, 285, 286, 289, 306, 320, 324, 423, 496, 510, 538, 539, 540, 541, 542, 543, 544, 545, 548, 590, 605, 763, 785, 786, 856, 860, 861, 862, 863, 866, 874, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 913, 922, 923, 929, 941, 942, 943, 944, 945, 952, 958, 960, 968, 970, 984, 987, 990, 991, 992, 1006, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1129, 1132, 1133, 1137, 1145, 1202], "python_misc_ai_k_mean": [29, 786, 1129, 1132, 1133, 1145], "python_misc_ai_linear_regress": [29, 786, 1129, 1132, 1133, 1137, 1145], "linear": [29, 191, 193, 203, 206, 208, 226, 234, 289, 320, 324, 441, 463, 615, 740, 786, 869, 938, 1004, 1066, 1129, 1132, 1133, 1138, 1145], "regress": [29, 206, 258, 289, 320, 324, 786, 1129, 1132, 1133, 1138, 1145], "python_misc_pandas_add_row": [29, 786, 1129, 1145, 1151], "ad": [29, 32, 33, 39, 89, 129, 133, 146, 176, 180, 181, 182, 185, 190, 210, 222, 232, 288, 289, 292, 296, 321, 342, 346, 347, 362, 413, 432, 454, 481, 491, 495, 500, 609, 611, 612, 647, 701, 737, 776, 777, 786, 802, 937, 939, 989, 993, 994, 1029, 1047, 1062, 1081, 1129, 1145, 1151, 1152, 1156, 1165], "row": [29, 171, 193, 209, 229, 242, 246, 248, 250, 262, 287, 288, 289, 292, 296, 309, 321, 322, 326, 332, 342, 344, 346, 347, 421, 463, 786, 873, 978, 1030, 1049, 1069, 1088, 1120, 1122, 1129, 1136, 1139, 1143, 1145, 1149, 1150, 1151, 1155], "python_misc_pandas_mod_col": [29, 786, 1129, 1145, 1151], "modifi": [29, 42, 79, 92, 114, 115, 129, 133, 144, 146, 172, 177, 185, 188, 190, 210, 229, 286, 288, 289, 292, 296, 297, 298, 299, 320, 321, 342, 346, 347, 376, 391, 393, 399, 436, 448, 455, 472, 474, 476, 485, 495, 497, 500, 516, 517, 537, 546, 549, 550, 552, 553, 554, 566, 579, 582, 592, 599, 602, 603, 605, 608, 620, 672, 676, 678, 681, 684, 698, 712, 735, 740, 752, 763, 765, 780, 781, 784, 785, 786, 806, 821, 841, 860, 861, 873, 878, 929, 942, 946, 951, 970, 978, 984, 1022, 1023, 1029, 1031, 1042, 1063, 1106, 1110, 1128, 1129, 1145, 1151, 1153, 1196, 1200], "column": [29, 62, 118, 122, 125, 163, 172, 175, 190, 193, 239, 258, 287, 288, 289, 290, 292, 296, 321, 322, 326, 332, 342, 344, 346, 347, 463, 474, 786, 873, 878, 889, 1088, 1100, 1112, 1129, 1136, 1139, 1145, 1151], "python_misc_pandas_filt": [29, 786, 1129, 1145, 1151], "python_misc_pandas_bas": [29, 786, 1129, 1145, 1151], "datafram": [29, 288, 289, 290, 292, 296, 299, 321, 326, 342, 346, 347, 474, 786, 1129, 1134, 1137, 1145, 1148, 1150, 1151, 1152, 1154, 1155], "python_misc_pandas_index": [29, 786, 1129, 1145, 1151], "python_misc_pandas_iloc": [29, 786, 1129, 1145, 1151], "select": [29, 62, 169, 170, 172, 176, 229, 234, 242, 259, 289, 292, 321, 342, 346, 347, 411, 433, 786, 833, 877, 934, 939, 973, 974, 993, 996, 998, 1001, 1021, 1088, 1129, 1134, 1143, 1145, 1151, 1153, 1164, 1172, 1199, 1201], "iloc": [29, 289, 290, 292, 294, 296, 321, 326, 342, 346, 347, 474, 786, 1129, 1145, 1149, 1151, 1154], "python_misc_pandas_loc": [29, 786, 1129, 1145, 1151], "loc": [29, 190, 283, 287, 288, 289, 290, 292, 294, 296, 321, 342, 346, 347, 449, 786, 978, 1041, 1129, 1145, 1148, 1149, 1150, 1151, 1152], "python_drafts_setuptool": [29, 786, 1084, 1129], "setuptool": [29, 60, 166, 279, 314, 324, 786, 1084, 1129, 1166], "python_swdev_pip": [29, 786, 1084, 1129, 1132, 1133, 1137, 1145, 1147, 1158, 1161, 1168], "python_drafts_matplotlib": [29, 786, 1084, 1129], "matplotlib": [29, 202, 221, 240, 241, 253, 267, 268, 270, 272, 303, 322, 327, 331, 333, 344, 374, 786, 1027, 1084, 1129, 1131, 1137], "python_drafts_argpars": [29, 786, 1084, 1129], "argpars": [29, 246, 267, 298, 320, 324, 351, 786, 1084, 1129], "python_swdev_unittest": [29, 786, 1129, 1158], "unittest": [29, 69, 128, 166, 167, 183, 186, 197, 199, 202, 205, 206, 216, 219, 230, 232, 237, 279, 288, 299, 355, 365, 373, 374, 383, 384, 784, 786, 1073, 1129, 1131, 1158, 1169], "python_swdev_pytest_intro": [29, 786, 1129, 1158, 1163], "By": [29, 51, 53, 170, 172, 177, 181, 185, 197, 203, 239, 245, 246, 248, 255, 256, 258, 259, 263, 267, 270, 274, 275, 277, 279, 288, 296, 298, 299, 303, 314, 317, 320, 321, 324, 334, 335, 347, 373, 405, 432, 455, 458, 675, 676, 678, 679, 682, 684, 686, 687, 730, 731, 783, 785, 786, 802, 875, 924, 937, 973, 992, 1008, 1019, 1043, 1050, 1127, 1128, 1129, 1138, 1158, 1163], "As": [30, 46, 72, 84, 128, 167, 170, 172, 177, 181, 187, 199, 202, 206, 237, 250, 312, 328, 368, 385, 423, 454, 457, 533, 535, 549, 600, 605, 607, 608, 685, 768, 806, 833, 859, 868, 937, 938, 946, 948, 965, 993, 1001, 1023, 1029, 1050, 1055, 1059, 1116, 1120, 1133, 1174, 1186], "follow": [30, 39, 43, 82, 110, 111, 113, 118, 121, 122, 123, 124, 125, 131, 134, 160, 169, 170, 172, 173, 174, 175, 177, 185, 190, 194, 198, 199, 202, 206, 210, 211, 222, 239, 245, 255, 256, 258, 262, 271, 275, 277, 294, 295, 297, 303, 304, 362, 384, 386, 389, 406, 407, 420, 423, 450, 452, 454, 456, 461, 462, 465, 473, 475, 480, 490, 491, 494, 495, 511, 512, 514, 515, 516, 517, 518, 536, 539, 540, 543, 544, 546, 547, 548, 549, 550, 562, 568, 594, 609, 610, 611, 612, 665, 672, 674, 679, 681, 682, 685, 686, 689, 707, 740, 780, 781, 784, 794, 796, 802, 833, 859, 860, 861, 866, 868, 870, 872, 884, 886, 887, 893, 897, 905, 906, 930, 937, 938, 939, 960, 963, 964, 965, 966, 975, 992, 1001, 1005, 1007, 1013, 1015, 1017, 1019, 1021, 1022, 1023, 1026, 1030, 1031, 1035, 1042, 1061, 1075, 1083, 1088, 1091, 1096, 1100, 1102, 1106, 1109, 1110, 1113, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1153, 1157, 1166, 1187], "version": [30, 60, 119, 127, 169, 173, 175, 176, 177, 180, 183, 185, 198, 199, 200, 202, 209, 218, 220, 229, 230, 239, 243, 245, 249, 255, 258, 265, 270, 273, 282, 288, 294, 295, 296, 297, 304, 337, 358, 373, 433, 472, 473, 475, 476, 478, 485, 488, 585, 682, 684, 685, 732, 736, 748, 771, 781, 806, 808, 825, 833, 834, 849, 893, 937, 938, 1008, 1009, 1019, 1021, 1022, 1024, 1055, 1056, 1062, 1086, 1159, 1166, 1167, 1173, 1179], "control": [30, 45, 61, 62, 63, 65, 90, 129, 131, 137, 138, 145, 146, 169, 176, 183, 185, 188, 199, 202, 207, 209, 210, 211, 212, 221, 222, 237, 240, 253, 258, 264, 278, 335, 366, 367, 368, 370, 373, 411, 425, 426, 472, 475, 489, 496, 539, 540, 543, 549, 591, 786, 806, 831, 833, 838, 893, 929, 931, 932, 936, 937, 939, 955, 1004, 1009, 1028, 1031, 1039, 1051, 1064, 1066, 1150, 1165, 1167, 1185, 1195, 1201], "done": [30, 42, 46, 47, 50, 53, 55, 56, 57, 62, 79, 88, 91, 95, 106, 114, 115, 130, 131, 132, 134, 135, 136, 137, 138, 139, 141, 145, 146, 157, 162, 166, 167, 169, 171, 172, 174, 175, 176, 177, 180, 185, 190, 191, 194, 198, 202, 209, 231, 246, 250, 256, 258, 274, 275, 277, 289, 292, 299, 304, 322, 351, 357, 368, 374, 389, 390, 438, 445, 446, 448, 450, 461, 472, 474, 475, 476, 480, 514, 533, 547, 550, 592, 604, 605, 633, 647, 655, 660, 684, 685, 687, 690, 697, 718, 721, 725, 726, 736, 742, 750, 754, 762, 764, 786, 792, 802, 804, 823, 825, 833, 835, 860, 861, 865, 866, 868, 869, 877, 889, 912, 930, 931, 933, 938, 939, 955, 956, 957, 967, 981, 989, 995, 1004, 1008, 1009, 1017, 1021, 1023, 1030, 1033, 1034, 1035, 1053, 1062, 1073, 1081, 1082, 1083, 1086, 1089, 1110, 1143, 1164, 1189], "No": [30, 43, 62, 84, 118, 121, 160, 166, 170, 172, 176, 177, 185, 212, 229, 245, 246, 262, 288, 376, 396, 398, 412, 428, 432, 439, 450, 455, 467, 472, 476, 477, 480, 482, 485, 486, 487, 488, 500, 546, 585, 595, 596, 608, 615, 625, 640, 643, 661, 679, 689, 691, 694, 698, 701, 705, 749, 750, 757, 764, 811, 813, 815, 817, 831, 833, 838, 850, 869, 875, 877, 880, 881, 896, 904, 912, 915, 931, 933, 939, 953, 960, 965, 966, 975, 976, 978, 980, 989, 993, 1001, 1004, 1010, 1024, 1026, 1043, 1050, 1056, 1059, 1062, 1063, 1071, 1075, 1079, 1081, 1138, 1139, 1143, 1144, 1153, 1156, 1164, 1166, 1172], "proprietari": 30, "accept": [30, 32, 59, 145, 172, 198, 294, 472, 474, 740, 750, 752, 801, 933, 959, 1029, 1053, 1199, 1201], "proven": [30, 461, 465, 609, 611, 612, 701], "difficult": [30, 72, 229, 417, 435, 585, 819, 831, 993], "ffmpeg": 31, "video4linux2": 31, "640x480": [31, 1027], "dev": [31, 62, 104, 136, 170, 171, 181, 187, 188, 198, 199, 242, 248, 258, 265, 268, 283, 286, 290, 295, 297, 300, 304, 326, 332, 338, 371, 461, 480, 544, 786, 788, 789, 791, 797, 804, 813, 827, 829, 833, 846, 863, 864, 873, 875, 876, 893, 907, 910, 913, 915, 929, 932, 937, 938, 939, 962, 969, 989, 992, 995, 997, 1000, 1001, 1021, 1171, 1173, 1189], "video0": 31, "500k": 31, "matroska": 31, "mk": [31, 32], "disabl": [31, 170, 173, 175, 181, 239, 245, 255, 258, 433, 825, 831, 836, 838, 993, 1159, 1179], "audio": [31, 153, 158, 172, 177, 786, 1188], "appar": [31, 57, 60, 62, 69, 70, 172, 174, 175, 177, 181, 231, 242, 294, 477, 491, 662, 707, 718, 750, 801, 937, 995, 1144], "next": [31, 39, 42, 62, 102, 128, 149, 166, 171, 172, 177, 185, 190, 192, 203, 208, 210, 218, 222, 229, 235, 239, 242, 243, 245, 248, 250, 252, 255, 258, 262, 268, 274, 275, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 350, 357, 371, 405, 423, 425, 446, 474, 512, 516, 530, 540, 549, 585, 622, 698, 711, 718, 720, 742, 823, 833, 852, 877, 893, 925, 937, 939, 959, 969, 989, 1008, 1034, 1035, 1038, 1066, 1069, 1136, 1172], "mention": [31, 146, 170, 171, 198, 202, 206, 232, 256, 298, 299, 320, 321, 325, 535, 549, 733, 845, 938, 1026, 1131, 1147], "frame": [31, 164, 175, 187, 209, 239, 245, 255, 258, 288, 294, 326, 445, 458, 462, 512, 703, 931, 932, 1149], "size": [31, 104, 113, 133, 169, 171, 172, 189, 191, 197, 239, 240, 245, 248, 253, 255, 258, 262, 267, 270, 286, 303, 304, 309, 365, 396, 413, 418, 427, 434, 438, 440, 444, 445, 447, 450, 451, 453, 458, 459, 460, 462, 464, 469, 470, 492, 493, 499, 538, 550, 551, 555, 556, 557, 558, 559, 563, 564, 567, 573, 585, 590, 592, 596, 600, 605, 609, 611, 612, 625, 626, 627, 628, 633, 638, 639, 643, 647, 649, 650, 655, 657, 684, 686, 692, 695, 696, 701, 712, 713, 714, 716, 730, 740, 749, 753, 754, 762, 770, 783, 784, 785, 786, 792, 804, 819, 829, 849, 858, 863, 864, 870, 877, 907, 910, 913, 915, 921, 925, 929, 933, 938, 959, 961, 1000, 1001, 1007, 1024, 1027, 1131, 1144], "input": [31, 40, 65, 72, 90, 136, 190, 191, 192, 193, 203, 206, 209, 211, 233, 239, 245, 248, 255, 258, 261, 262, 283, 286, 365, 370, 394, 395, 401, 425, 433, 456, 461, 473, 551, 552, 553, 554, 566, 605, 655, 674, 697, 784, 804, 859, 877, 908, 926, 930, 940, 956, 959, 971, 973, 974, 981, 1037, 1052, 1081, 1093, 1097, 1098, 1110, 1113, 1116, 1122, 1125, 1133, 1134, 1137, 1138, 1195], "rate": [31, 180, 202, 262, 321, 454, 852, 991], "hz": [31, 843], "bitrat": [31, 932], "If": [31, 43, 45, 47, 53, 55, 56, 57, 93, 126, 128, 146, 169, 170, 171, 172, 175, 176, 177, 185, 186, 194, 202, 239, 245, 252, 255, 258, 262, 270, 275, 277, 286, 292, 304, 321, 365, 370, 411, 420, 450, 462, 482, 484, 490, 540, 546, 547, 562, 592, 597, 661, 668, 684, 685, 698, 703, 749, 753, 754, 762, 764, 786, 806, 811, 825, 833, 838, 850, 859, 868, 872, 875, 893, 894, 902, 905, 929, 930, 937, 938, 939, 940, 946, 960, 968, 970, 978, 983, 987, 1000, 1022, 1023, 1035, 1043, 1045, 1055, 1062, 1070, 1072, 1083, 1108, 1136, 1139, 1153, 1165, 1184], "instead": [31, 58, 62, 133, 140, 146, 163, 169, 170, 171, 172, 190, 191, 199, 231, 248, 250, 258, 288, 304, 350, 371, 376, 413, 462, 490, 533, 536, 550, 612, 628, 684, 686, 703, 707, 749, 750, 764, 771, 801, 802, 811, 864, 893, 915, 938, 980, 1000, 1007, 1009, 1019, 1025, 1056, 1102, 1114, 1126, 1150, 1171], "stdout": [31, 146, 189, 222, 226, 230, 239, 245, 255, 258, 268, 276, 283, 285, 286, 306, 307, 321, 350, 358, 360, 365, 369, 371, 661, 786, 857, 859, 863, 874, 875, 918, 921, 924, 929, 959, 1004, 1031, 1081, 1083, 1088, 1093, 1097, 1100, 1115, 1147, 1156, 1190], "hold": [31, 133, 169, 171, 190, 206, 208, 209, 229, 256, 388, 400, 420, 492, 622, 677, 684, 735, 740, 754, 762, 766, 771, 797, 831, 835, 836, 930, 937, 993, 1031, 1044, 1066, 1114, 1136], "mplayer": [31, 300, 338], "stdin": [31, 42, 222, 230, 239, 245, 248, 255, 258, 358, 365, 397, 403, 418, 427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786, 859, 875, 876, 908, 959, 1079, 1081, 1082, 1093, 1144, 1156, 1190], "unicod": [32, 34, 35, 36, 38, 230, 239, 243, 245, 255, 258, 280, 304, 338, 400, 1061, 1067, 1081, 1144], "sphinxemojicod": 32, "pip": [32, 60, 154, 166, 202, 206, 227, 256, 270, 959, 1055, 1085, 1086, 1118, 1131, 1147, 1158, 1159, 1160, 1164, 1166, 1167], "conf": [32, 69, 171, 173, 175, 338, 485, 833, 939, 1031], "grimac": 32, "astonish": 32, "rolling_ey": 32, "face_with_raised_eyebrow": 32, "flush": [32, 283, 549, 792, 804], "innoc": [32, 176, 455, 756, 872, 1006, 1050], "kiss": 32, "kissing_heart": 32, "middle_fing": 32, "metal": [32, 82, 84, 91, 93, 170, 383, 930, 938, 939], "muscl": 32, "nerd": [32, 893], "ok_hand": 32, "penguin": 32, "pig": [32, 450], "point_up": 32, "sleep": [32, 62, 118, 124, 170, 245, 274, 275, 298, 299, 320, 351, 423, 432, 762, 786, 810, 813, 815, 825, 835, 838, 842, 848, 850, 851, 854, 929, 930, 938, 967, 971, 974, 989, 991, 992, 995, 1000, 1039], "sunglass": 32, "think": [32, 42, 43, 73, 170, 171, 185, 208, 232, 334, 433, 454, 455, 458, 544, 548, 595, 615, 690, 698, 700, 749, 860, 861, 864, 954, 1000, 1062], "thumbsdown": 32, "thumbsup": 32, "wink": 32, "1_tone1": 32, "1_tone2": 32, "1_tone3": 32, "1_tone4": 32, "1_tone5": 32, "1st_place_med": 32, "2nd_place_med": 32, "3rd_place_med": 32, "8ball": 32, "abacu": 32, "abcd": [32, 220, 226, 242, 262, 304], "ac": [32, 180, 218], "accordion": 32, "adhesive_bandag": 32, "admission_ticket": 32, "adult": [32, 1051], "adult_dark_skin_ton": 32, "adult_light_skin_ton": 32, "adult_medium_dark_skin_ton": 32, "adult_medium_light_skin_ton": 32, "adult_medium_skin_ton": 32, "adult_tone1": 32, "adult_tone2": 32, "adult_tone3": 32, "adult_tone4": 32, "adult_tone5": 32, "ae": [32, 180], "aerial_tramwai": 32, "af": [32, 180], "afghanistan": 32, "ai": [32, 206, 1138, 1145], "airplan": [32, 930], "airplane_arriv": 32, "airplane_departur": 32, "airplane_smal": 32, "aland_island": 32, "alarm_clock": 32, "albania": 32, "alemb": 32, "algeria": 32, "alien": 32, "ambul": 32, "american_samoa": 32, "amphora": 32, "anatomical_heart": 32, "anchor": 32, "andorra": 32, "angel": [32, 294], "angel_tone1": 32, "angel_tone2": 32, "angel_tone3": 32, "angel_tone4": 32, "angel_tone5": 32, "anger": 32, "anger_right": 32, "angola": 32, "angri": 32, "anguilla": 32, "anguish": 32, "ant": 32, "antarctica": 32, "antigua_barbuda": 32, "ao": 32, "appl": [32, 1007, 1073], "aq": 32, "aquariu": 32, "archeri": 32, "argentina": 32, "ari": [32, 35, 38], "armenia": 32, "arrow_backward": 32, "arrow_double_down": 32, "arrow_double_up": 32, "arrow_down": 32, "arrow_down_smal": 32, "arrow_forward": 32, "arrow_heading_down": 32, "arrow_heading_up": 32, "arrow_left": 32, "arrow_lower_left": 32, "arrow_lower_right": 32, "arrow_right": 32, "arrow_right_hook": 32, "arrow_up": 32, "arrow_up_down": 32, "arrow_up_smal": 32, "arrow_upper_left": 32, "arrow_upper_right": 32, "arrows_clockwis": 32, "arrows_counterclockwis": 32, "articulated_lorri": 32, "artificial_satellit": 32, "artist": 32, "artist_dark_skin_ton": 32, "artist_light_skin_ton": 32, "artist_medium_dark_skin_ton": 32, "artist_medium_light_skin_ton": 32, "artist_medium_skin_ton": 32, "artist_tone1": 32, "artist_tone2": 32, "artist_tone3": 32, "artist_tone4": 32, "artist_tone5": 32, "aruba": 32, "ascens": 32, "astronaut": 32, "astronaut_dark_skin_ton": 32, "astronaut_light_skin_ton": 32, "astronaut_medium_dark_skin_ton": 32, "astronaut_medium_light_skin_ton": 32, "astronaut_medium_skin_ton": 32, "astronaut_tone1": 32, "astronaut_tone2": 32, "astronaut_tone3": 32, "astronaut_tone4": 32, "astronaut_tone5": 32, "athletic_sho": 32, "atm": 32, "atom": [32, 69, 80, 92, 193, 248, 273, 274, 275, 277, 286, 297, 334, 335, 568, 700, 749, 762, 763, 785, 786, 795, 800, 803, 805, 810, 813, 814, 816, 819, 820, 824, 825, 826, 828, 830, 835, 838, 839, 842, 843, 844, 848, 851, 853, 854, 929, 969, 979, 980, 1042, 1184], "atom_symbol": 32, "australia": 32, "austria": [32, 170, 383], "auto_rickshaw": 32, "avocado": 32, "aw": 32, "ax": [32, 191, 1027], "az": 32, "azerbaijan": 32, "ba": [32, 180], "babi": 32, "baby_bottl": 32, "baby_chick": 32, "baby_symbol": 32, "baby_tone1": 32, "baby_tone2": 32, "baby_tone3": 32, "baby_tone4": 32, "baby_tone5": 32, "back_of_hand": 32, "back_of_hand_tone1": 32, "back_of_hand_tone2": 32, "back_of_hand_tone3": 32, "back_of_hand_tone4": 32, "back_of_hand_tone5": 32, "bacon": 32, "badger": 32, "badminton": 32, "bagel": 32, "baggage_claim": 32, "baguette_bread": 32, "bahama": 32, "bahrain": 32, "balance_scal": 32, "bald": 32, "ballet_sho": 32, "balloon": 32, "ballot_box": 32, "ballot_box_with_ballot": 32, "ballot_box_with_check": 32, "bamboo": 32, "banana": 32, "bangbang": 32, "bangladesh": 32, "banjo": 32, "bank": [32, 474], "bar_chart": 32, "barbado": 32, "barber": 32, "basebal": 32, "basket": 32, "basketbal": 32, "basketball_man": 32, "basketball_play": 32, "basketball_player_tone1": 32, "basketball_player_tone2": 32, "basketball_player_tone3": 32, "basketball_player_tone4": 32, "basketball_player_tone5": 32, "basketball_woman": 32, "bat": [32, 1166], "bath": 32, "bath_tone1": 32, "bath_tone2": 32, "bath_tone3": 32, "bath_tone4": 32, "bath_tone5": 32, "bathtub": 32, "batteri": [32, 93, 202, 365, 930, 1054, 1055, 1056, 1082, 1160], "bb": [32, 162, 173, 937], "bd": [32, 180], "beach": 32, "beach_umbrella": 32, "beach_with_umbrella": 32, "bear": [32, 978, 1154], "bearded_person": 32, "bearded_person_dark_skin_ton": 32, "bearded_person_light_skin_ton": 32, "bearded_person_medium_dark_skin_ton": 32, "bearded_person_medium_light_skin_ton": 32, "bearded_person_medium_skin_ton": 32, "bearded_person_tone1": 32, "bearded_person_tone2": 32, "bearded_person_tone3": 32, "bearded_person_tone4": 32, "bearded_person_tone5": 32, "beaver": 32, "bed": 32, "bee": 32, "beer": [32, 452], "beetl": 32, "belaru": 32, "belgium": 32, "beliz": 32, "bell": [32, 1050, 1053], "bell_pepp": 32, "bellhop": 32, "bellhop_bel": 32, "benin": 32, "bento": 32, "bermuda": 32, "beverage_box": 32, "bf": [32, 180], "bg": [32, 474], "bh": 32, "bhutan": 32, "bicyclist": 32, "bicyclist_tone1": 32, "bicyclist_tone2": 32, "bicyclist_tone3": 32, "bicyclist_tone4": 32, "bicyclist_tone5": 32, "bike": 32, "biking_man": 32, "biking_woman": 32, "bikini": 32, "billed_cap": 32, "biohazard": 32, "biohazard_sign": 32, "bird": 32, "birthdai": [32, 211, 680], "bison": [32, 181, 813, 937, 1021], "bj": 32, "bl": 32, "black_cat": 32, "black_circl": 32, "black_flag": 32, "black_heart": 32, "black_jok": 32, "black_large_squar": 32, "black_medium_small_squar": 32, "black_medium_squar": 32, "black_nib": 32, "black_small_squar": 32, "black_square_button": 32, "blond": 32, "haired_man": 32, "haired_man_dark_skin_ton": 32, "haired_man_light_skin_ton": 32, "haired_man_medium_dark_skin_ton": 32, "haired_man_medium_light_skin_ton": 32, "haired_man_medium_skin_ton": 32, "haired_man_tone1": 32, "haired_man_tone2": 32, "haired_man_tone3": 32, "haired_man_tone4": 32, "haired_man_tone5": 32, "haired_woman": 32, "haired_woman_dark_skin_ton": 32, "haired_woman_light_skin_ton": 32, "haired_woman_medium_dark_skin_ton": 32, "haired_woman_medium_light_skin_ton": 32, "haired_woman_medium_skin_ton": 32, "haired_woman_tone1": 32, "haired_woman_tone2": 32, "haired_woman_tone3": 32, "haired_woman_tone4": 32, "haired_woman_tone5": 32, "blond_haired_person": 32, "blond_haired_person_tone1": 32, "blond_haired_person_tone2": 32, "blond_haired_person_tone3": 32, "blond_haired_person_tone4": 32, "blond_haired_person_tone5": 32, "blonde_man": 32, "blonde_woman": 32, "blossom": 32, "blowfish": 32, "blue_book": 32, "blue_car": 32, "blue_circl": 32, "blue_heart": 32, "blue_squar": 32, "blueberri": 32, "blush": 32, "bm": 32, "bn": 32, "bo": [32, 1044], "boar": 32, "boat": 32, "bolivia": 32, "bomb": 32, "bone": 32, "bookmark": [32, 1143], "bookmark_tab": 32, "boom": [32, 718, 735], "boomerang": 32, "boot": [32, 160, 171, 173, 177, 189, 290, 468, 765, 806, 811, 829, 833, 843, 871, 937, 938, 939, 1179], "bosnia_herzegovina": 32, "botswana": 32, "bottle_with_popping_cork": 32, "bouquet": 32, "bouvet_island": 32, "bow": 32, "bow_and_arrow": 32, "bow_tone1": 32, "bow_tone2": 32, "bow_tone3": 32, "bow_tone4": 32, "bow_tone5": 32, "bowing_man": 32, "bowing_woman": 32, "bowl_with_spoon": 32, "bowl": 32, "boxing_glov": 32, "boi": 32, "boy_tone1": 32, "boy_tone2": 32, "boy_tone3": 32, "boy_tone4": 32, "boy_tone5": 32, "bq": 32, "br": [32, 268, 326], "brain": [32, 61, 63], "brazil": 32, "bread": 32, "breast_feed": 32, "breast_feeding_dark_skin_ton": 32, "breast_feeding_light_skin_ton": 32, "breast_feeding_medium_dark_skin_ton": 32, "breast_feeding_medium_light_skin_ton": 32, "breast_feeding_medium_skin_ton": 32, "breast_feeding_tone1": 32, "breast_feeding_tone2": 32, "breast_feeding_tone3": 32, "breast_feeding_tone4": 32, "breast_feeding_tone5": 32, "brick": [32, 169, 182], "bride_with_veil": 32, "bride_with_veil_tone1": 32, "bride_with_veil_tone2": 32, "bride_with_veil_tone3": 32, "bride_with_veil_tone4": 32, "bride_with_veil_tone5": 32, "bridge_at_night": 32, "briefcas": 32, "brief": [32, 466, 893], "british_indian_ocean_territori": 32, "british_virgin_island": 32, "broccoli": 32, "broken_heart": 32, "broom": 32, "brown_circl": 32, "brown_heart": 32, "brown_squar": 32, "brunei": 32, "bt": 32, "bubble_tea": 32, "bucket": [32, 804], "bug": [32, 46, 55, 56, 111, 171, 172, 173, 213, 232, 248, 259, 374, 430, 432, 433, 448, 453, 455, 459, 472, 477, 482, 573, 575, 577, 585, 591, 592, 595, 600, 662, 665, 718, 728, 747, 764, 786, 823, 951, 982, 991, 992, 1024, 1044, 1045, 1059, 1062], "building_construct": 32, "bulb": 32, "bulgaria": 32, "bullettrain_front": 32, "bullettrain_sid": 32, "burkina_faso": 32, "burrito": 32, "burundi": 32, "bu": [32, 85, 129, 217, 242, 258, 265, 267, 268, 283, 286, 290, 300, 304, 326, 332, 338, 344, 490, 504, 519, 533, 549, 550, 786, 804, 829, 893, 929, 931, 936, 937, 938, 967, 973, 1029, 1130, 1188, 1195, 1199, 1201], "business_suit_levit": 32, "busstop": 32, "bust_in_silhouett": 32, "busts_in_silhouett": 32, "butter": 32, "butterfli": 32, "bv": 32, "bw": 32, "bz": 32, "cactu": 32, "cake": 32, "calendar": 32, "calendar_spir": 32, "call_m": 32, "call_me_hand": 32, "call_me_hand_tone1": 32, "call_me_hand_tone2": 32, "call_me_hand_tone3": 32, "call_me_hand_tone4": 32, "call_me_hand_tone5": 32, "call_me_tone1": 32, "call_me_tone2": 32, "call_me_tone3": 32, "call_me_tone4": 32, "call_me_tone5": 32, "cambodia": 32, "camel": 32, "camera": [32, 33, 146, 175, 177, 938], "camera_flash": 32, "camera_with_flash": 32, "cameroon": 32, "camp": 32, "canada": 32, "canary_island": 32, "cancer": 32, "candl": 32, "candi": 32, "canned_food": 32, "cano": 32, "cape_verd": 32, "capital_abcd": 32, "capricorn": 32, "car": [32, 288, 474, 930], "card_box": 32, "card_file_box": 32, "card_index": 32, "card_index_divid": 32, "caribbean_netherland": 32, "carousel_hors": 32, "carpentry_saw": 32, "carrot": 32, "cartwheel": 32, "cartwheel_tone1": 32, "cartwheel_tone2": 32, "cartwheel_tone3": 32, "cartwheel_tone4": 32, "cartwheel_tone5": 32, "cat2": 32, "cat": [32, 172, 176, 210, 222, 276, 285, 286, 288, 306, 307, 350, 351, 450, 474, 549, 786, 791, 796, 813, 833, 849, 860, 861, 863, 864, 873, 875, 877, 905, 912, 920, 921, 923, 924, 926, 929, 930, 937, 938, 939, 940, 964, 966, 967, 971, 995, 1001, 1004, 1190], "cayman_island": 32, "cd": [32, 60, 156, 173, 174, 176, 177, 180, 181, 185, 198, 199, 232, 242, 262, 270, 275, 277, 351, 365, 370, 475, 547, 550, 610, 806, 808, 833, 834, 857, 859, 860, 861, 864, 870, 878, 883, 885, 893, 917, 930, 937, 938, 946, 959, 1008, 1009, 1021, 1022, 1086], "central_african_republ": 32, "ceuta_melilla": 32, "cf": [32, 332, 859, 976], "cg": 32, "ch": 32, "chad": 32, "chain": [32, 163, 169, 180, 190, 252, 269, 452, 838, 986], "chair": [32, 202], "champagn": 32, "champagne_glass": 32, "chart": [32, 216, 231, 240, 253, 267, 270, 303, 309, 1131, 1138], "chart_with_downwards_trend": 32, "chart_with_upwards_trend": 32, "checkered_flag": 32, "chees": 32, "cheese_wedg": 32, "cherri": 32, "cherry_blossom": 32, "chess_pawn": 32, "chestnut": 32, "chicken": 32, "child": [32, 103, 187, 276, 285, 286, 306, 307, 784, 786, 863, 865, 867, 868, 879, 882, 883, 884, 885, 886, 887, 888, 897, 898, 899, 902, 904, 905, 929, 941, 942, 943, 944, 945, 970, 976, 983, 988, 1005, 1017, 1018, 1048, 1156], "child_dark_skin_ton": 32, "child_light_skin_ton": 32, "child_medium_dark_skin_ton": 32, "child_medium_light_skin_ton": 32, "child_medium_skin_ton": 32, "child_tone1": 32, "child_tone2": 32, "child_tone3": 32, "child_tone4": 32, "child_tone5": 32, "children_cross": 32, "chile": 32, "china": 32, "chipmunk": 32, "chocolate_bar": 32, "chopstick": 32, "christmas_island": 32, "christmas_tre": 32, "church": 32, "ci": [32, 1164], "cinema": 32, "circus_t": 32, "city_dusk": 32, "city_sunris": 32, "city_sunset": 32, "cityscap": 32, "ck": 32, "cl": [32, 258, 283, 1047, 1048], "clamp": 32, "clap": 32, "clap_tone1": 32, "clap_tone2": 32, "clap_tone3": 32, "clap_tone4": 32, "clap_tone5": 32, "clapper": 32, "classical_build": 32, "clinking_glass": 32, "clipboard": 32, "clipperton_island": 32, "clock1030": 32, "clock10": 32, "clock1130": 32, "clock11": 32, "clock1230": 32, "clock12": 32, "clock130": 32, "clock1": 32, "clock230": 32, "clock2": 32, "clock330": 32, "clock3": 32, "clock430": 32, "clock4": 32, "clock530": 32, "clock5": 32, "clock630": 32, "clock6": 32, "clock730": 32, "clock7": 32, "clock830": 32, "clock8": 32, "clock930": 32, "clock9": 32, "clock": [32, 140, 245, 246, 461, 937], "closed_book": 32, "closed_lock_with_kei": 32, "closed_umbrella": 32, "cloud": [32, 105, 177, 222, 246, 364, 365, 368, 693, 695, 946, 1135, 1136, 1159], "cloud_lightn": 32, "cloud_rain": 32, "cloud_snow": 32, "cloud_tornado": 32, "cloud_with_lightn": 32, "cloud_with_lightning_and_rain": 32, "cloud_with_rain": 32, "cloud_with_snow": 32, "cloud_with_tornado": 32, "clown": 32, "clown_fac": 32, "club": [32, 38], "cm": 32, "cn": [32, 180], "coat": 32, "cockroach": 32, "cocktail": 32, "coconut": [32, 294], "cocos_island": 32, "coffe": [32, 173, 665, 937], "coffin": 32, "coin": 32, "cold_fac": 32, "cold_sweat": 32, "colombia": 32, "comet": 32, "comoro": 32, "compass": 32, "compress": [32, 126, 171, 185, 276, 285, 286, 306, 786, 857, 863, 929, 1017, 1018, 1019, 1022], "computer_mous": 32, "confetti_bal": 32, "confound": 32, "confus": [32, 170, 174, 202, 231, 407, 415, 461, 608, 618, 694, 705, 1073, 1157], "congo": 32, "congo_brazzavil": 32, "congo_kinshasa": 32, "congratul": 32, "construct": [32, 202, 208, 289, 292, 410, 423, 433, 462, 472, 576, 627, 646, 647, 703, 751, 1045, 1052, 1069, 1080], "construction_sit": 32, "construction_work": 32, "construction_worker_man": 32, "construction_worker_tone1": 32, "construction_worker_tone2": 32, "construction_worker_tone3": 32, "construction_worker_tone4": 32, "construction_worker_tone5": 32, "construction_worker_woman": 32, "control_knob": 32, "convenience_stor": 32, "cook": [32, 286], "cook_dark_skin_ton": 32, "cook_island": 32, "cook_light_skin_ton": 32, "cook_medium_dark_skin_ton": 32, "cook_medium_light_skin_ton": 32, "cook_medium_skin_ton": 32, "cook_tone1": 32, "cook_tone2": 32, "cook_tone3": 32, "cook_tone4": 32, "cook_tone5": 32, "cooki": [32, 815, 829], "cool": [32, 65, 69, 156, 171, 172, 175, 177, 185, 190, 191, 202, 203, 206, 221, 286, 299, 383, 468, 474, 502, 511, 648, 690, 691, 707, 710, 729, 739, 742, 764, 833, 889, 939, 1024, 1028, 1031, 1048, 1067, 1081, 1131, 1138, 1143, 1184], "cop": 32, "cop_tone1": 32, "cop_tone2": 32, "cop_tone3": 32, "cop_tone4": 32, "cop_tone5": 32, "copyright": [32, 36, 181, 222, 239, 245, 255, 258, 283, 358, 362, 600, 749, 1057], "corn": 32, "costa_rica": 32, "cote_divoir": 32, "couch": 32, "couch_and_lamp": 32, "coupl": [32, 43, 146, 169, 170, 171, 172, 177, 190, 202, 206, 386, 423, 457, 462, 738, 926, 961, 980], "couple_mm": 32, "couple_with_heart": 32, "couple_with_heart_dark_skin_ton": 32, "couple_with_heart_light_skin_ton": 32, "couple_with_heart_man_man": 32, "couple_with_heart_man_man_dark_skin_ton": 32, "couple_with_heart_man_man_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_man_man_dark_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_man_man_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_man_man_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_man_man_light_skin_ton": 32, "couple_with_heart_man_man_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_man_man_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_man_man_light_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_man_man_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_man_man_medium_dark_skin_ton": 32, "couple_with_heart_man_man_medium_dark_skin_tone_dark_skin_ton": 32, "couple_with_heart_man_man_medium_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_man_man_medium_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_man_man_medium_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_man_man_medium_light_skin_ton": 32, "couple_with_heart_man_man_medium_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_man_man_medium_light_skin_tone_light_skin_ton": 32, "couple_with_heart_man_man_medium_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_man_man_medium_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_man_man_medium_skin_ton": 32, "couple_with_heart_man_man_medium_skin_tone_dark_skin_ton": 32, "couple_with_heart_man_man_medium_skin_tone_light_skin_ton": 32, "couple_with_heart_man_man_medium_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_man_man_medium_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_man_man_tone1": 32, "couple_with_heart_man_man_tone1_tone2": 32, "couple_with_heart_man_man_tone1_tone3": 32, "couple_with_heart_man_man_tone1_tone4": 32, "couple_with_heart_man_man_tone1_tone5": 32, "couple_with_heart_man_man_tone2": 32, "couple_with_heart_man_man_tone2_tone1": 32, "couple_with_heart_man_man_tone2_tone3": 32, "couple_with_heart_man_man_tone2_tone4": 32, "couple_with_heart_man_man_tone2_tone5": 32, "couple_with_heart_man_man_tone3": 32, "couple_with_heart_man_man_tone3_tone1": 32, "couple_with_heart_man_man_tone3_tone2": 32, "couple_with_heart_man_man_tone3_tone4": 32, "couple_with_heart_man_man_tone3_tone5": 32, "couple_with_heart_man_man_tone4": 32, "couple_with_heart_man_man_tone4_tone1": 32, "couple_with_heart_man_man_tone4_tone2": 32, "couple_with_heart_man_man_tone4_tone3": 32, "couple_with_heart_man_man_tone4_tone5": 32, "couple_with_heart_man_man_tone5": 32, "couple_with_heart_man_man_tone5_tone1": 32, "couple_with_heart_man_man_tone5_tone2": 32, "couple_with_heart_man_man_tone5_tone3": 32, "couple_with_heart_man_man_tone5_tone4": 32, "couple_with_heart_medium_dark_skin_ton": 32, "couple_with_heart_medium_light_skin_ton": 32, "couple_with_heart_medium_skin_ton": 32, "couple_with_heart_mm": 32, "couple_with_heart_person_person_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_person_person_dark_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_person_person_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_person_person_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_person_person_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_person_person_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_person_person_light_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_person_person_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_person_person_medium_dark_skin_tone_dark_skin_ton": 32, "couple_with_heart_person_person_medium_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_person_person_medium_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_person_person_medium_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_person_person_medium_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_person_person_medium_light_skin_tone_light_skin_ton": 32, "couple_with_heart_person_person_medium_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_person_person_medium_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_person_person_medium_skin_tone_dark_skin_ton": 32, "couple_with_heart_person_person_medium_skin_tone_light_skin_ton": 32, "couple_with_heart_person_person_medium_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_person_person_medium_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_person_person_tone1_tone2": 32, "couple_with_heart_person_person_tone1_tone3": 32, "couple_with_heart_person_person_tone1_tone4": 32, "couple_with_heart_person_person_tone1_tone5": 32, "couple_with_heart_person_person_tone2_tone1": 32, "couple_with_heart_person_person_tone2_tone3": 32, "couple_with_heart_person_person_tone2_tone4": 32, "couple_with_heart_person_person_tone2_tone5": 32, "couple_with_heart_person_person_tone3_tone1": 32, "couple_with_heart_person_person_tone3_tone2": 32, "couple_with_heart_person_person_tone3_tone4": 32, "couple_with_heart_person_person_tone3_tone5": 32, "couple_with_heart_person_person_tone4_tone1": 32, "couple_with_heart_person_person_tone4_tone2": 32, "couple_with_heart_person_person_tone4_tone3": 32, "couple_with_heart_person_person_tone4_tone5": 32, "couple_with_heart_person_person_tone5_tone1": 32, "couple_with_heart_person_person_tone5_tone2": 32, "couple_with_heart_person_person_tone5_tone3": 32, "couple_with_heart_person_person_tone5_tone4": 32, "couple_with_heart_tone1": 32, "couple_with_heart_tone2": 32, "couple_with_heart_tone3": 32, "couple_with_heart_tone4": 32, "couple_with_heart_tone5": 32, "couple_with_heart_woman_man": 32, "couple_with_heart_woman_man_dark_skin_ton": 32, "couple_with_heart_woman_man_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_man_dark_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_man_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_man_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_man_light_skin_ton": 32, "couple_with_heart_woman_man_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_man_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_man_light_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_man_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_man_medium_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_dark_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_man_medium_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_man_medium_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_man_medium_light_skin_ton": 32, "couple_with_heart_woman_man_medium_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_light_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_man_medium_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_man_medium_skin_ton": 32, "couple_with_heart_woman_man_medium_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_man_medium_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_man_tone1": 32, "couple_with_heart_woman_man_tone1_tone2": 32, "couple_with_heart_woman_man_tone1_tone3": 32, "couple_with_heart_woman_man_tone1_tone4": 32, "couple_with_heart_woman_man_tone1_tone5": 32, "couple_with_heart_woman_man_tone2": 32, "couple_with_heart_woman_man_tone2_tone1": 32, "couple_with_heart_woman_man_tone2_tone3": 32, "couple_with_heart_woman_man_tone2_tone4": 32, "couple_with_heart_woman_man_tone2_tone5": 32, "couple_with_heart_woman_man_tone3": 32, "couple_with_heart_woman_man_tone3_tone1": 32, "couple_with_heart_woman_man_tone3_tone2": 32, "couple_with_heart_woman_man_tone3_tone4": 32, "couple_with_heart_woman_man_tone3_tone5": 32, "couple_with_heart_woman_man_tone4": 32, "couple_with_heart_woman_man_tone4_tone1": 32, "couple_with_heart_woman_man_tone4_tone2": 32, "couple_with_heart_woman_man_tone4_tone3": 32, "couple_with_heart_woman_man_tone4_tone5": 32, "couple_with_heart_woman_man_tone5": 32, "couple_with_heart_woman_man_tone5_tone1": 32, "couple_with_heart_woman_man_tone5_tone2": 32, "couple_with_heart_woman_man_tone5_tone3": 32, "couple_with_heart_woman_man_tone5_tone4": 32, "couple_with_heart_woman_woman": 32, "couple_with_heart_woman_woman_dark_skin_ton": 32, "couple_with_heart_woman_woman_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_woman_dark_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_woman_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_woman_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_woman_light_skin_ton": 32, "couple_with_heart_woman_woman_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_woman_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_woman_light_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_woman_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_woman_medium_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_dark_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_woman_medium_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_woman_medium_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_woman_medium_light_skin_ton": 32, "couple_with_heart_woman_woman_medium_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_light_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_woman_medium_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_woman_medium_skin_ton": 32, "couple_with_heart_woman_woman_medium_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_woman_medium_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_woman_tone1": 32, "couple_with_heart_woman_woman_tone1_tone2": 32, "couple_with_heart_woman_woman_tone1_tone3": 32, "couple_with_heart_woman_woman_tone1_tone4": 32, "couple_with_heart_woman_woman_tone1_tone5": 32, "couple_with_heart_woman_woman_tone2": 32, "couple_with_heart_woman_woman_tone2_tone1": 32, "couple_with_heart_woman_woman_tone2_tone3": 32, "couple_with_heart_woman_woman_tone2_tone4": 32, "couple_with_heart_woman_woman_tone2_tone5": 32, "couple_with_heart_woman_woman_tone3": 32, "couple_with_heart_woman_woman_tone3_tone1": 32, "couple_with_heart_woman_woman_tone3_tone2": 32, "couple_with_heart_woman_woman_tone3_tone4": 32, "couple_with_heart_woman_woman_tone3_tone5": 32, "couple_with_heart_woman_woman_tone4": 32, "couple_with_heart_woman_woman_tone4_tone1": 32, "couple_with_heart_woman_woman_tone4_tone2": 32, "couple_with_heart_woman_woman_tone4_tone3": 32, "couple_with_heart_woman_woman_tone4_tone5": 32, "couple_with_heart_woman_woman_tone5": 32, "couple_with_heart_woman_woman_tone5_tone1": 32, "couple_with_heart_woman_woman_tone5_tone2": 32, "couple_with_heart_woman_woman_tone5_tone3": 32, "couple_with_heart_woman_woman_tone5_tone4": 32, "couple_with_heart_ww": 32, "couple_ww": 32, "couplekiss": 32, "couplekiss_man_man": 32, "couplekiss_man_woman": 32, "couplekiss_mm": 32, "couplekiss_woman_woman": 32, "couplekiss_ww": 32, "cow2": 32, "cow": 32, "cowboi": 32, "cowboy_hat_fac": 32, "cp": [32, 103, 128, 171, 173, 176, 210, 212, 276, 285, 286, 306, 307, 365, 370, 786, 833, 860, 861, 862, 863, 864, 893, 897, 898, 900, 901, 904, 905, 907, 913, 929, 937, 949, 960, 1021, 1190], "cr": [32, 1081], "crab": 32, "crayon": 32, "credit_card": 32, "crescent_moon": 32, "cricket": 32, "cricket_bat_bal": 32, "cricket_gam": 32, "croatia": 32, "crocodil": 32, "croissant": 32, "cross": [32, 38, 69, 107, 108, 110, 136, 150, 169, 182, 206, 300, 312, 313, 328, 329, 366, 367, 368, 496, 510, 538, 539, 540, 541, 542, 543, 544, 545, 548, 549, 550, 590, 763, 785, 786, 863, 866, 867, 929, 952, 958, 960, 967, 968, 970, 984, 987, 990, 992, 1009, 1013, 1014, 1015, 1016, 1018, 1021, 1186], "crossed_fing": 32, "crossed_flag": 32, "crossed_sword": 32, "crown": 32, "cruise_ship": 32, "cry": [32, 170], "crying_cat_fac": 32, "crystal_bal": 32, "cu": 32, "cuba": 32, "cucumb": 32, "cup_with_straw": 32, "cupcak": 32, "cupid": 32, "curacao": 32, "curling_ston": 32, "curly_hair": 32, "curly_loop": 32, "currency_exchang": 32, "curri": [32, 231], "custard": 32, "cut_of_meat": 32, "cw": 32, "cx": 32, "cy": 32, "cyclon": 32, "cypru": 32, "cz": 32, "czech_republ": 32, "dagger": [32, 38], "dagger_knif": 32, "dancer": 32, "dancer_tone1": 32, "dancer_tone2": 32, "dancer_tone3": 32, "dancer_tone4": 32, "dancer_tone5": 32, "dancing_men": 32, "dancing_women": 32, "dango": 32, "dark_sunglass": 32, "dart": 32, "dash": [32, 34, 35, 38, 634], "date": [32, 126, 149, 167, 173, 181, 185, 202, 208, 238, 270, 286, 288, 331, 378, 379, 474, 834, 1026, 1120, 1122, 1126, 1128, 1135, 1140], "deaf_man": 32, "deaf_man_dark_skin_ton": 32, "deaf_man_light_skin_ton": 32, "deaf_man_medium_dark_skin_ton": 32, "deaf_man_medium_light_skin_ton": 32, "deaf_man_medium_skin_ton": 32, "deaf_man_tone1": 32, "deaf_man_tone2": 32, "deaf_man_tone3": 32, "deaf_man_tone4": 32, "deaf_man_tone5": 32, "deaf_person": 32, "deaf_person_dark_skin_ton": 32, "deaf_person_light_skin_ton": 32, "deaf_person_medium_dark_skin_ton": 32, "deaf_person_medium_light_skin_ton": 32, "deaf_person_medium_skin_ton": 32, "deaf_person_tone1": 32, "deaf_person_tone2": 32, "deaf_person_tone3": 32, "deaf_person_tone4": 32, "deaf_person_tone5": 32, "deaf_woman": 32, "deaf_woman_dark_skin_ton": 32, "deaf_woman_light_skin_ton": 32, "deaf_woman_medium_dark_skin_ton": 32, "deaf_woman_medium_light_skin_ton": 32, "deaf_woman_medium_skin_ton": 32, "deaf_woman_tone1": 32, "deaf_woman_tone2": 32, "deaf_woman_tone3": 32, "deaf_woman_tone4": 32, "deaf_woman_tone5": 32, "deciduous_tre": 32, "deer": 32, "denmark": 32, "department_stor": 32, "derelict_hous": 32, "derelict_house_build": 32, "desert": 32, "desert_island": 32, "desktop": [32, 158, 170, 175, 231, 300, 915, 992, 1188, 1195], "desktop_comput": 32, "detective_tone1": 32, "detective_tone2": 32, "detective_tone3": 32, "detective_tone4": 32, "detective_tone5": 32, "dg": 32, "diamond_shape_with_a_dot_insid": 32, "diamond": [32, 34, 38, 230, 243], "diego_garcia": 32, "digit_eight": 32, "digit_f": 32, "digit_four": 32, "digit_nin": 32, "digit_on": 32, "digit_seven": 32, "digit_six": 32, "digit_thre": 32, "digit_two": 32, "digit_zero": 32, "disappoint": 32, "disappointed_reliev": 32, "disguised_fac": 32, "divid": [32, 35, 36, 38, 262, 1138], "diving_mask": 32, "diya_lamp": 32, "dizzi": 32, "dizzy_fac": 32, "dj": 32, "djibouti": 32, "dk": 32, "dm": 32, "dna": 32, "do_not_litt": 32, "dodo": 32, "dog2": 32, "dog": [32, 450], "dollar": [32, 36], "doll": 32, "dolphin": 32, "dominica": 32, "dominican_republ": 32, "door": [32, 248, 568, 823, 1041], "double_vertical_bar": 32, "doughnut": 32, "dove": 32, "dove_of_peac": 32, "dragon": [32, 101, 232, 248, 295, 297, 335, 568, 592, 593, 598, 687, 699, 701, 730, 735, 746, 750, 755, 763, 783, 785, 786, 1004], "dragon_fac": 32, "dress": [32, 167], "dromedary_camel": 32, "drool": 32, "drooling_fac": 32, "drop_of_blood": 32, "droplet": 32, "drum": 32, "drum_with_drumstick": 32, "dumpl": 32, "dvd": 32, "dz": 32, "mail": [32, 167, 242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344, 924, 1144, 1178], "ea": [32, 180], "eagl": [32, 242, 1088], "ear": 32, "ear_of_ric": 32, "ear_tone1": 32, "ear_tone2": 32, "ear_tone3": 32, "ear_tone4": 32, "ear_tone5": 32, "ear_with_hearing_aid": 32, "ear_with_hearing_aid_dark_skin_ton": 32, "ear_with_hearing_aid_light_skin_ton": 32, "ear_with_hearing_aid_medium_dark_skin_ton": 32, "ear_with_hearing_aid_medium_light_skin_ton": 32, "ear_with_hearing_aid_medium_skin_ton": 32, "ear_with_hearing_aid_tone1": 32, "ear_with_hearing_aid_tone2": 32, "ear_with_hearing_aid_tone3": 32, "ear_with_hearing_aid_tone4": 32, "ear_with_hearing_aid_tone5": 32, "earth_africa": 32, "earth_america": 32, "earth_asia": 32, "ec": [32, 101, 180, 222, 362, 365, 370, 373, 382, 786, 862, 863, 893, 929], "ecuador": 32, "ee": [32, 180], "eg": [32, 35, 133], "egg": [32, 60, 1075], "eggplant": 32, "egypt": 32, "eight": [32, 137, 172, 190, 203, 213, 221, 250, 252, 338, 365, 939, 1144], "eight_pointed_black_star": 32, "eight_spoked_asterisk": 32, "eject": 32, "eject_symbol": 32, "el_salvador": 32, "electric_plug": 32, "eleph": 32, "elev": 32, "elf": [32, 178, 181, 213, 229, 239, 480, 576, 976, 1007, 1008, 1024, 1058, 1198], "elf_dark_skin_ton": 32, "elf_light_skin_ton": 32, "elf_medium_dark_skin_ton": 32, "elf_medium_light_skin_ton": 32, "elf_medium_skin_ton": 32, "elf_tone1": 32, "elf_tone2": 32, "elf_tone3": 32, "elf_tone4": 32, "elf_tone5": 32, "england": 32, "envelop": [32, 833], "envelope_with_arrow": 32, "equatorial_guinea": 32, "er": [32, 179, 188, 203, 205, 213, 250, 1179, 1180, 1181], "eritrea": 32, "estonia": 32, "et": [32, 101, 600, 749, 953, 1008, 1009, 1050], "ethiopia": 32, "euro": [32, 516, 517, 518, 530, 531, 532], "european_castl": 32, "european_post_offic": 32, "european_union": 32, "evergreen_tre": 32, "exclam": [32, 36], "expecting_woman": 32, "expecting_woman_tone1": 32, "expecting_woman_tone2": 32, "expecting_woman_tone3": 32, "expecting_woman_tone4": 32, "expecting_woman_tone5": 32, "exploding_head": 32, "expressionless": 32, "eye_in_speech_bubbl": 32, "eye_speech_bubbl": 32, "eyeglass": 32, "face_exh": 32, "face_in_cloud": 32, "face_palm": 32, "face_palm_tone1": 32, "face_palm_tone2": 32, "face_palm_tone3": 32, "face_palm_tone4": 32, "face_palm_tone5": 32, "face_vomit": 32, "face_with_cowboy_hat": 32, "face_with_hand_over_mouth": 32, "face_with_head_bandag": 32, "face_with_monocl": 32, "face_with_rolling_ey": 32, "face_with_spiral_ey": 32, "face_with_symbols_over_mouth": 32, "face_with_thermomet": 32, "facepalm": 32, "facepalm_tone1": 32, "facepalm_tone2": 32, "facepalm_tone3": 32, "facepalm_tone4": 32, "facepalm_tone5": 32, "factori": [32, 110, 230, 243, 278, 297, 374, 489, 496, 510, 524, 538, 590, 786, 959, 1187], "factory_work": 32, "factory_worker_dark_skin_ton": 32, "factory_worker_light_skin_ton": 32, "factory_worker_medium_dark_skin_ton": 32, "factory_worker_medium_light_skin_ton": 32, "factory_worker_medium_skin_ton": 32, "factory_worker_tone1": 32, "factory_worker_tone2": 32, "factory_worker_tone3": 32, "factory_worker_tone4": 32, "factory_worker_tone5": 32, "fairi": 32, "fairy_dark_skin_ton": 32, "fairy_light_skin_ton": 32, "fairy_medium_dark_skin_ton": 32, "fairy_medium_light_skin_ton": 32, "fairy_medium_skin_ton": 32, "fairy_tone1": 32, "fairy_tone2": 32, "fairy_tone3": 32, "fairy_tone4": 32, "fairy_tone5": 32, "falafel": 32, "falkland_island": 32, "fallen_leaf": 32, "famili": [32, 194, 933, 939], "family_man_boi": 32, "family_man_boy_boi": 32, "family_man_girl": 32, "family_man_girl_boi": 32, "family_man_girl_girl": 32, "family_man_man_boi": 32, "family_man_man_boy_boi": 32, "family_man_man_girl": 32, "family_man_man_girl_boi": 32, "family_man_man_girl_girl": 32, "family_man_woman_boi": 32, "family_man_woman_boy_boi": 32, "family_man_woman_girl": 32, "family_man_woman_girl_boi": 32, "family_man_woman_girl_girl": 32, "family_mmb": 32, "family_mmbb": 32, "family_mmg": 32, "family_mmgb": 32, "family_mmgg": 32, "family_mwbb": 32, "family_mwg": 32, "family_mwgb": 32, "family_mwgg": 32, "family_woman_boi": 32, "family_woman_boy_boi": 32, "family_woman_girl": 32, "family_woman_girl_boi": 32, "family_woman_girl_girl": 32, "family_woman_woman_boi": 32, "family_woman_woman_boy_boi": 32, "family_woman_woman_girl": 32, "family_woman_woman_girl_boi": 32, "family_woman_woman_girl_girl": 32, "family_wwb": 32, "family_wwbb": 32, "family_wwg": 32, "family_wwgb": 32, "family_wwgg": 32, "farmer": 32, "farmer_dark_skin_ton": 32, "farmer_light_skin_ton": 32, "farmer_medium_dark_skin_ton": 32, "farmer_medium_light_skin_ton": 32, "farmer_medium_skin_ton": 32, "farmer_tone1": 32, "farmer_tone2": 32, "farmer_tone3": 32, "farmer_tone4": 32, "farmer_tone5": 32, "faroe_island": 32, "fast_forward": 32, "fax": 32, "fear": [32, 288, 967], "feather": 32, "feet": 32, "female_detect": 32, "female_sign": 32, "fencer": 32, "fenc": 32, "ferris_wheel": 32, "ferri": 32, "fi": [32, 963, 971, 986], "field_hockei": 32, "fiji": 32, "file_cabinet": 32, "file_fold": 32, "film_fram": 32, "film_projector": 32, "film_strip": 32, "fingers_cross": 32, "fingers_crossed_tone1": 32, "fingers_crossed_tone2": 32, "fingers_crossed_tone3": 32, "fingers_crossed_tone4": 32, "fingers_crossed_tone5": 32, "finland": 32, "fire": [32, 43, 62, 452], "fire_engin": 32, "fire_extinguish": 32, "firecrack": 32, "firefight": 32, "firefighter_dark_skin_ton": 32, "firefighter_light_skin_ton": 32, "firefighter_medium_dark_skin_ton": 32, "firefighter_medium_light_skin_ton": 32, "firefighter_medium_skin_ton": 32, "firefighter_tone1": 32, "firefighter_tone2": 32, "firefighter_tone3": 32, "firefighter_tone4": 32, "firefighter_tone5": 32, "firework": 32, "first_plac": 32, "first_place_med": 32, "first_quarter_moon": 32, "first_quarter_moon_with_fac": 32, "fish": [32, 34, 1166], "fish_cak": 32, "fishing_pole_and_fish": 32, "fist": 32, "fist_left": 32, "fist_oncom": 32, "fist_rais": 32, "fist_right": 32, "fist_tone1": 32, "fist_tone2": 32, "fist_tone3": 32, "fist_tone4": 32, "fist_tone5": 32, "five": [32, 36, 62, 118, 123, 124, 170, 190, 203, 213, 221, 242, 252, 258, 268, 283, 304, 322, 326, 334, 338, 344, 348, 365, 383, 1088, 1130], "fj": 32, "fk": 32, "flag_ac": 32, "flag_ad": 32, "flag_a": 32, "flag_af": 32, "flag_ag": 32, "flag_ai": 32, "flag_al": 32, "flag_am": 32, "flag_ao": 32, "flag_aq": 32, "flag_ar": 32, "flag_at": 32, "flag_au": 32, "flag_aw": 32, "flag_ax": 32, "flag_az": 32, "flag_ba": 32, "flag_bb": 32, "flag_bd": 32, "flag_b": 32, "flag_bf": 32, "flag_bg": 32, "flag_bh": 32, "flag_bi": 32, "flag_bj": 32, "flag_bl": 32, "flag_black": 32, "flag_bm": 32, "flag_bn": 32, "flag_bo": 32, "flag_bq": 32, "flag_br": 32, "flag_bt": 32, "flag_bv": 32, "flag_bw": 32, "flag_bz": 32, "flag_ca": 32, "flag_cc": 32, "flag_cd": 32, "flag_cf": 32, "flag_cg": 32, "flag_ch": 32, "flag_ci": 32, "flag_ck": 32, "flag_cl": 32, "flag_cm": 32, "flag_cn": 32, "flag_co": 32, "flag_cp": 32, "flag_cr": 32, "flag_cu": 32, "flag_cv": 32, "flag_cw": 32, "flag_cx": 32, "flag_cz": 32, "flag_d": 32, "flag_dg": 32, "flag_dj": 32, "flag_dk": 32, "flag_dm": 32, "flag_do": 32, "flag_dz": 32, "flag_ea": 32, "flag_ec": 32, "flag_e": 32, "flag_eg": 32, "flag_eh": 32, "flag_er": 32, "flag_": 32, "flag_et": 32, "flag_eu": 32, "flag_fi": 32, "flag_fj": 32, "flag_fk": 32, "flag_fm": 32, "flag_fo": 32, "flag_fr": 32, "flag_ga": 32, "flag_gb": 32, "flag_gd": 32, "flag_g": 32, "flag_gf": 32, "flag_gg": 32, "flag_gh": 32, "flag_gi": 32, "flag_gl": 32, "flag_gm": 32, "flag_gn": 32, "flag_gp": 32, "flag_gq": 32, "flag_gr": 32, "flag_gt": 32, "flag_gu": 32, "flag_gw": 32, "flag_hk": 32, "flag_hm": 32, "flag_hn": 32, "flag_hr": 32, "flag_ht": 32, "flag_hu": 32, "flag_ic": 32, "flag_id": 32, "flag_i": 32, "flag_il": 32, "flag_im": 32, "flag_in": 32, "flag_io": 32, "flag_iq": 32, "flag_ir": 32, "flag_it": 32, "flag_j": 32, "flag_jm": 32, "flag_jo": 32, "flag_jp": 32, "flag_k": 32, "flag_kg": 32, "flag_kh": 32, "flag_ki": 32, "flag_km": 32, "flag_kn": 32, "flag_kp": 32, "flag_kr": 32, "flag_kw": 32, "flag_kz": 32, "flag_la": 32, "flag_lb": 32, "flag_lc": 32, "flag_li": 32, "flag_lk": 32, "flag_lr": 32, "flag_l": 32, "flag_lt": 32, "flag_lu": 32, "flag_lv": 32, "flag_ma": 32, "flag_mc": 32, "flag_md": 32, "flag_m": 32, "flag_mf": 32, "flag_mg": 32, "flag_mh": 32, "flag_mk": 32, "flag_ml": 32, "flag_mm": 32, "flag_mn": 32, "flag_mo": 32, "flag_mp": 32, "flag_mq": 32, "flag_mr": 32, "flag_mt": 32, "flag_mu": 32, "flag_mv": 32, "flag_mw": 32, "flag_mx": 32, "flag_mi": 32, "flag_mz": 32, "flag_na": 32, "flag_nc": 32, "flag_n": 32, "flag_nf": 32, "flag_ng": 32, "flag_ni": 32, "flag_nl": 32, "flag_no": 32, "flag_np": 32, "flag_nr": 32, "flag_nu": 32, "flag_nz": 32, "flag_om": 32, "flag_pa": 32, "flag_p": 32, "flag_pf": 32, "flag_pg": 32, "flag_ph": 32, "flag_pk": 32, "flag_pl": 32, "flag_pm": 32, "flag_pn": 32, "flag_pr": 32, "flag_pt": 32, "flag_pw": 32, "flag_pi": 32, "flag_qa": 32, "flag_r": 32, "flag_ro": 32, "flag_ru": 32, "flag_rw": 32, "flag_sa": 32, "flag_sb": 32, "flag_sc": 32, "flag_sd": 32, "flag_s": 32, "flag_sg": 32, "flag_sh": 32, "flag_si": 32, "flag_sj": 32, "flag_sk": 32, "flag_sl": 32, "flag_sm": 32, "flag_sn": 32, "flag_so": 32, "flag_sr": 32, "flag_ss": 32, "flag_st": 32, "flag_sv": 32, "flag_sx": 32, "flag_sz": 32, "flag_ta": 32, "flag_tc": 32, "flag_td": 32, "flag_tf": 32, "flag_tg": 32, "flag_th": 32, "flag_tj": 32, "flag_tk": 32, "flag_tl": 32, "flag_tm": 32, "flag_tn": 32, "flag_to": 32, "flag_tr": 32, "flag_tt": 32, "flag_tv": 32, "flag_tw": 32, "flag_tz": 32, "flag_ua": 32, "flag_ug": 32, "flag_um": 32, "flag_u": 32, "flag_ui": 32, "flag_uz": 32, "flag_va": 32, "flag_vc": 32, "flag_v": 32, "flag_vg": 32, "flag_vi": 32, "flag_vn": 32, "flag_vu": 32, "flag_wf": 32, "flag_whit": 32, "flag_w": 32, "flag_xk": 32, "flag_y": 32, "flag_yt": 32, "flag_za": 32, "flag_zm": 32, "flag_zw": 32, "flag": [32, 48, 170, 172, 187, 198, 209, 239, 245, 248, 252, 255, 258, 283, 286, 297, 299, 313, 329, 358, 477, 478, 479, 484, 487, 673, 687, 764, 786, 792, 801, 815, 838, 841, 843, 931, 933, 962, 963, 964, 966, 980, 1001, 1005, 1066], "flame": [32, 173], "flamingo": 32, "flan": 32, "flashlight": 32, "flatbread": 32, "fleur": 32, "li": [32, 166, 262, 626], "fleur_de_li": 32, "flight_arriv": 32, "flight_departur": 32, "floppy_disk": 32, "flower_playing_card": 32, "fly": [32, 859, 930], "flying_disc": 32, "flying_sauc": 32, "fm": 32, "fo": 32, "fog": 32, "foggi": 32, "fondu": 32, "foot": [32, 73, 426, 895], "foot_dark_skin_ton": 32, "foot_light_skin_ton": 32, "foot_medium_dark_skin_ton": 32, "foot_medium_light_skin_ton": 32, "foot_medium_skin_ton": 32, "foot_tone1": 32, "foot_tone2": 32, "foot_tone3": 32, "foot_tone4": 32, "foot_tone5": 32, "footbal": 32, "footprint": [32, 202, 1055], "fork_and_knif": 32, "fork_and_knife_with_pl": 32, "fork_knife_pl": 32, "fortune_cooki": 32, "fountain": 32, "fountain_pen": 32, "four": [32, 35, 69, 169, 174, 190, 202, 203, 206, 213, 220, 221, 229, 245, 250, 252, 262, 265, 268, 279, 283, 286, 300, 303, 304, 310, 325, 326, 332, 338, 344, 348, 365, 833, 899, 1069, 1077, 1130, 1131, 1139, 1164, 1187], "four_leaf_clov": 32, "fox": [32, 450], "fox_fac": 32, "fr": [32, 181], "frame_photo": 32, "frame_with_pictur": 32, "framed_pictur": 32, "franc": 32, "french_bread": 32, "french_guiana": 32, "french_polynesia": 32, "french_southern_territori": 32, "fried_egg": 32, "fried_shrimp": 32, "fri": 32, "frog": 32, "frowning2": 32, "frown": [32, 35, 73, 1184], "frowning_fac": 32, "frowning_man": 32, "frowning_woman": 32, "fuelpump": 32, "full_moon": 32, "full_moon_with_fac": 32, "funeral_urn": 32, "ga": [32, 338], "gabon": 32, "gambia": 32, "game_di": 32, "garlic": 32, "gay_pride_flag": 32, "gb": [32, 961], "gd": 32, "ge": [32, 35], "gear": 32, "gem": 32, "gemini": 32, "geni": 32, "georgia": 32, "germani": [32, 170, 171, 383], "gf": 32, "gg": [32, 35, 38], "gh": [32, 166, 1153], "ghana": 32, "ghost": 32, "gi": [32, 166, 253], "gibraltar": 32, "gift": [32, 206, 237], "gift_heart": 32, "giraff": 32, "girl": 32, "girl_tone1": 32, "girl_tone2": 32, "girl_tone3": 32, "girl_tone4": 32, "girl_tone5": 32, "gl": [32, 35], "glass_of_milk": 32, "globe_with_meridian": 32, "glove": 32, "gm": 32, "gn": 32, "goal": [32, 42, 72, 170, 289, 292, 350, 474, 484, 753, 772, 860, 861, 1023, 1032], "goal_net": 32, "goat": 32, "goggl": 32, "golf": 32, "golfer": 32, "golfing_man": 32, "golfing_woman": 32, "gorilla": 32, "gp": 32, "gq": 32, "gr": [32, 310, 326, 1144], "grandma": 32, "grandma_tone1": 32, "grandma_tone2": 32, "grandma_tone3": 32, "grandma_tone4": 32, "grandma_tone5": 32, "grape": 32, "great_britain": 32, "greec": 32, "green_appl": 32, "green_book": 32, "green_circl": 32, "green_heart": 32, "green_salad": 32, "green_squar": 32, "greenland": 32, "grenada": 32, "grey_exclam": 32, "grey_quest": 32, "grin": 32, "gu": 32, "guadeloup": 32, "guam": 32, "guard": [32, 232, 248, 482, 761, 762, 764], "guard_tone1": 32, "guard_tone2": 32, "guard_tone3": 32, "guard_tone4": 32, "guard_tone5": 32, "guardsman": 32, "guardsman_tone1": 32, "guardsman_tone2": 32, "guardsman_tone3": 32, "guardsman_tone4": 32, "guardsman_tone5": 32, "guardswoman": 32, "guatemala": 32, "guernsei": 32, "guide_dog": 32, "guinea": 32, "guinea_bissau": 32, "guitar": 32, "gun": 32, "guyana": 32, "gw": 32, "gy": 32, "haircut": 32, "haircut_man": 32, "haircut_tone1": 32, "haircut_tone2": 32, "haircut_tone3": 32, "haircut_tone4": 32, "haircut_tone5": 32, "haircut_woman": 32, "haiti": 32, "hamburg": 32, "hammer": [32, 170, 246, 286, 813, 823], "hammer_and_pick": 32, "hammer_and_wrench": 32, "hammer_pick": 32, "hamster": 32, "hand": [32, 166, 178, 185, 190, 197, 206, 221, 232, 248, 267, 294, 373, 400, 411, 430, 432, 495, 514, 582, 593, 609, 611, 612, 738, 877, 893, 938, 939, 955, 983, 1017, 1035, 1050, 1057, 1184, 1190, 1202], "hand_splai": 32, "hand_splayed_tone1": 32, "hand_splayed_tone2": 32, "hand_splayed_tone3": 32, "hand_splayed_tone4": 32, "hand_splayed_tone5": 32, "hand_with_index_and_middle_finger_cross": 32, "hand_with_index_and_middle_fingers_crossed_tone1": 32, "hand_with_index_and_middle_fingers_crossed_tone2": 32, "hand_with_index_and_middle_fingers_crossed_tone3": 32, "hand_with_index_and_middle_fingers_crossed_tone4": 32, "hand_with_index_and_middle_fingers_crossed_tone5": 32, "handbag": 32, "handbal": 32, "handball_tone1": 32, "handball_tone2": 32, "handball_tone3": 32, "handball_tone4": 32, "handball_tone5": 32, "handshak": [32, 762], "handshake_tone1": 32, "handshake_tone2": 32, "handshake_tone3": 32, "handshake_tone4": 32, "handshake_tone5": 32, "hankei": 32, "hash": [32, 202, 208, 209, 220, 226, 239, 245, 246, 249, 253, 255, 258, 262, 283, 290, 304, 344, 365, 485, 833, 1079, 1159], "hatched_chick": 32, "hatching_chick": 32, "head_bandag": 32, "headphon": 32, "headston": 32, "health_work": 32, "health_worker_dark_skin_ton": 32, "health_worker_light_skin_ton": 32, "health_worker_medium_dark_skin_ton": 32, "health_worker_medium_light_skin_ton": 32, "health_worker_medium_skin_ton": 32, "health_worker_tone1": 32, "health_worker_tone2": 32, "health_worker_tone3": 32, "health_worker_tone4": 32, "health_worker_tone5": 32, "hear_no_evil": 32, "heart_decor": 32, "heart_exclam": 32, "heart_ey": 32, "heart_eyes_cat": 32, "heart_on_fir": 32, "heartbeat": 32, "heartpuls": 32, "heavy_check_mark": 32, "heavy_division_sign": 32, "heavy_dollar_sign": 32, "heavy_heart_exclam": 32, "heavy_heart_exclamation_mark_orna": 32, "heavy_minus_sign": 32, "heavy_multiplication_x": 32, "heavy_plus_sign": 32, "hedgehog": 32, "helicopt": 32, "helmet_with_cross": 32, "helmet_with_white_cross": 32, "herb": 32, "hibiscu": 32, "high_bright": 32, "high_heel": 32, "hiking_boot": 32, "hindu_templ": 32, "hippopotamu": 32, "hk": 32, "hn": 32, "hocho": 32, "hockei": 32, "hole": [32, 248, 786, 929, 959, 968, 969, 970, 987, 1000], "hondura": 32, "honey_pot": 32, "hong_kong": 32, "hook": [32, 34, 38, 221, 239, 245, 255, 258, 288, 321, 466, 501, 757, 792], "hors": 32, "horse_rac": 32, "horse_racing_tone1": 32, "horse_racing_tone2": 32, "horse_racing_tone3": 32, "horse_racing_tone4": 32, "horse_racing_tone5": 32, "hospit": 32, "hot_dog": 32, "hot_fac": 32, "hot_pepp": 32, "hotdog": 32, "hotel": [32, 175, 383], "hotspr": 32, "hourglass": 32, "hourglass_flowing_sand": 32, "house_abandon": 32, "house_build": 32, "house_with_garden": 32, "hr": 32, "ht": 32, "hu": [32, 356, 357, 374], "hug": 32, "hugging_fac": 32, "hungari": 32, "hush": 32, "hut": 32, "ic": [32, 411, 492, 521, 1183], "ice_cream": 32, "ice_cub": 32, "ice_hockei": 32, "ice_sk": 32, "icecream": 32, "iceland": 32, "id": [32, 42, 46, 111, 114, 115, 116, 117, 118, 119, 120, 127, 172, 175, 185, 189, 192, 202, 203, 213, 220, 226, 239, 242, 245, 252, 255, 256, 258, 265, 268, 272, 280, 283, 290, 296, 300, 304, 310, 315, 322, 327, 332, 338, 344, 348, 360, 481, 516, 517, 518, 530, 531, 532, 549, 797, 829, 831, 853, 860, 861, 866, 868, 877, 878, 879, 889, 896, 917, 919, 920, 931, 937, 939, 946, 965, 975, 1017, 1044, 1055, 1071, 1109, 1120, 1121, 1122, 1123, 1126, 1127, 1128, 1137, 1139, 1157, 1200], "ideograph_advantag": 32, "ie": 32, "il": [32, 180], "imp": 32, "inbox_trai": 32, "incoming_envelop": 32, "india": [32, 230, 279, 303, 325, 1131], "indonesia": 32, "infin": [32, 133, 209, 258, 331, 345, 1036, 1037], "information_desk_person": 32, "information_desk_person_tone1": 32, "information_desk_person_tone2": 32, "information_desk_person_tone3": 32, "information_desk_person_tone4": 32, "information_desk_person_tone5": 32, "\u2139": 32, "information_sourc": 32, "interrobang": 32, "iphon": 32, "iq": 32, "ir": [32, 893], "iran": 32, "iraq": 32, "ireland": 32, "island": 32, "isle_of_man": 32, "israel": [32, 230, 279, 1131], "itali": 32, "izakaya_lantern": 32, "jack_o_lantern": 32, "jamaica": 32, "japan": 32, "japanese_castl": 32, "japanese_goblin": 32, "japanese_ogr": 32, "jean": 32, "jersei": 32, "jigsaw": 32, "jm": 32, "jo": [32, 213, 226, 239, 242, 252, 255, 258, 262, 265, 304, 310, 338], "jordan": 32, "joi": 32, "joy_cat": 32, "joystick": 32, "jp": 32, "judg": 32, "judge_dark_skin_ton": 32, "judge_light_skin_ton": 32, "judge_medium_dark_skin_ton": 32, "judge_medium_light_skin_ton": 32, "judge_medium_skin_ton": 32, "judge_tone1": 32, "judge_tone2": 32, "judge_tone3": 32, "judge_tone4": 32, "judge_tone5": 32, "juggler": 32, "juggler_tone1": 32, "juggler_tone2": 32, "juggler_tone3": 32, "juggler_tone4": 32, "juggler_tone5": 32, "juggl": 32, "juggling_tone1": 32, "juggling_tone2": 32, "juggling_tone3": 32, "juggling_tone4": 32, "juggling_tone5": 32, "kaaba": 32, "kangaroo": 32, "karate_uniform": 32, "kayak": 32, "kazakhstan": 32, "ke": 32, "kenya": 32, "key2": 32, "keyboard": [32, 365, 875, 925], "keycap_ten": 32, "kg": 32, "kh": 32, "ki": [32, 211], "kick_scoot": 32, "kimono": 32, "kiribati": 32, "kiss_dark_skin_ton": 32, "kiss_light_skin_ton": 32, "kiss_man_man_dark_skin_ton": 32, "kiss_man_man_dark_skin_tone_light_skin_ton": 32, "kiss_man_man_dark_skin_tone_medium_dark_skin_ton": 32, "kiss_man_man_dark_skin_tone_medium_light_skin_ton": 32, "kiss_man_man_dark_skin_tone_medium_skin_ton": 32, "kiss_man_man_light_skin_ton": 32, "kiss_man_man_light_skin_tone_dark_skin_ton": 32, "kiss_man_man_light_skin_tone_medium_dark_skin_ton": 32, "kiss_man_man_light_skin_tone_medium_light_skin_ton": 32, "kiss_man_man_light_skin_tone_medium_skin_ton": 32, "kiss_man_man_medium_dark_skin_ton": 32, "kiss_man_man_medium_dark_skin_tone_dark_skin_ton": 32, "kiss_man_man_medium_dark_skin_tone_light_skin_ton": 32, "kiss_man_man_medium_dark_skin_tone_medium_light_skin_ton": 32, "kiss_man_man_medium_dark_skin_tone_medium_skin_ton": 32, "kiss_man_man_medium_light_skin_ton": 32, "kiss_man_man_medium_light_skin_tone_dark_skin_ton": 32, "kiss_man_man_medium_light_skin_tone_light_skin_ton": 32, "kiss_man_man_medium_light_skin_tone_medium_dark_skin_ton": 32, "kiss_man_man_medium_light_skin_tone_medium_skin_ton": 32, "kiss_man_man_medium_skin_ton": 32, "kiss_man_man_medium_skin_tone_dark_skin_ton": 32, "kiss_man_man_medium_skin_tone_light_skin_ton": 32, "kiss_man_man_medium_skin_tone_medium_dark_skin_ton": 32, "kiss_man_man_medium_skin_tone_medium_light_skin_ton": 32, "kiss_man_man_tone1": 32, "kiss_man_man_tone1_tone2": 32, "kiss_man_man_tone1_tone3": 32, "kiss_man_man_tone1_tone4": 32, "kiss_man_man_tone1_tone5": 32, "kiss_man_man_tone2": 32, "kiss_man_man_tone2_tone1": 32, "kiss_man_man_tone2_tone3": 32, "kiss_man_man_tone2_tone4": 32, "kiss_man_man_tone2_tone5": 32, "kiss_man_man_tone3": 32, "kiss_man_man_tone3_tone1": 32, "kiss_man_man_tone3_tone2": 32, "kiss_man_man_tone3_tone4": 32, "kiss_man_man_tone3_tone5": 32, "kiss_man_man_tone4": 32, "kiss_man_man_tone4_tone1": 32, "kiss_man_man_tone4_tone2": 32, "kiss_man_man_tone4_tone3": 32, "kiss_man_man_tone4_tone5": 32, "kiss_man_man_tone5": 32, "kiss_man_man_tone5_tone1": 32, "kiss_man_man_tone5_tone2": 32, "kiss_man_man_tone5_tone3": 32, "kiss_man_man_tone5_tone4": 32, "kiss_medium_dark_skin_ton": 32, "kiss_medium_light_skin_ton": 32, "kiss_medium_skin_ton": 32, "kiss_mm": 32, "kiss_person_person_dark_skin_tone_light_skin_ton": 32, "kiss_person_person_dark_skin_tone_medium_dark_skin_ton": 32, "kiss_person_person_dark_skin_tone_medium_light_skin_ton": 32, "kiss_person_person_dark_skin_tone_medium_skin_ton": 32, "kiss_person_person_light_skin_tone_dark_skin_ton": 32, "kiss_person_person_light_skin_tone_medium_dark_skin_ton": 32, "kiss_person_person_light_skin_tone_medium_light_skin_ton": 32, "kiss_person_person_light_skin_tone_medium_skin_ton": 32, "kiss_person_person_medium_dark_skin_tone_dark_skin_ton": 32, "kiss_person_person_medium_dark_skin_tone_light_skin_ton": 32, "kiss_person_person_medium_dark_skin_tone_medium_light_skin_ton": 32, "kiss_person_person_medium_dark_skin_tone_medium_skin_ton": 32, "kiss_person_person_medium_light_skin_tone_dark_skin_ton": 32, "kiss_person_person_medium_light_skin_tone_light_skin_ton": 32, "kiss_person_person_medium_light_skin_tone_medium_dark_skin_ton": 32, "kiss_person_person_medium_light_skin_tone_medium_skin_ton": 32, "kiss_person_person_medium_skin_tone_dark_skin_ton": 32, "kiss_person_person_medium_skin_tone_light_skin_ton": 32, "kiss_person_person_medium_skin_tone_medium_dark_skin_ton": 32, "kiss_person_person_medium_skin_tone_medium_light_skin_ton": 32, "kiss_person_person_tone1_tone2": 32, "kiss_person_person_tone1_tone3": 32, "kiss_person_person_tone1_tone4": 32, "kiss_person_person_tone1_tone5": 32, "kiss_person_person_tone2_tone1": 32, "kiss_person_person_tone2_tone3": 32, "kiss_person_person_tone2_tone4": 32, "kiss_person_person_tone2_tone5": 32, "kiss_person_person_tone3_tone1": 32, "kiss_person_person_tone3_tone2": 32, "kiss_person_person_tone3_tone4": 32, "kiss_person_person_tone3_tone5": 32, "kiss_person_person_tone4_tone1": 32, "kiss_person_person_tone4_tone2": 32, "kiss_person_person_tone4_tone3": 32, "kiss_person_person_tone4_tone5": 32, "kiss_person_person_tone5_tone1": 32, "kiss_person_person_tone5_tone2": 32, "kiss_person_person_tone5_tone3": 32, "kiss_person_person_tone5_tone4": 32, "kiss_tone1": 32, "kiss_tone2": 32, "kiss_tone3": 32, "kiss_tone4": 32, "kiss_tone5": 32, "kiss_woman_man": 32, "kiss_woman_man_dark_skin_ton": 32, "kiss_woman_man_dark_skin_tone_light_skin_ton": 32, "kiss_woman_man_dark_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_man_dark_skin_tone_medium_light_skin_ton": 32, "kiss_woman_man_dark_skin_tone_medium_skin_ton": 32, "kiss_woman_man_light_skin_ton": 32, "kiss_woman_man_light_skin_tone_dark_skin_ton": 32, "kiss_woman_man_light_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_man_light_skin_tone_medium_light_skin_ton": 32, "kiss_woman_man_light_skin_tone_medium_skin_ton": 32, "kiss_woman_man_medium_dark_skin_ton": 32, "kiss_woman_man_medium_dark_skin_tone_dark_skin_ton": 32, "kiss_woman_man_medium_dark_skin_tone_light_skin_ton": 32, "kiss_woman_man_medium_dark_skin_tone_medium_light_skin_ton": 32, "kiss_woman_man_medium_dark_skin_tone_medium_skin_ton": 32, "kiss_woman_man_medium_light_skin_ton": 32, "kiss_woman_man_medium_light_skin_tone_dark_skin_ton": 32, "kiss_woman_man_medium_light_skin_tone_light_skin_ton": 32, "kiss_woman_man_medium_light_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_man_medium_light_skin_tone_medium_skin_ton": 32, "kiss_woman_man_medium_skin_ton": 32, "kiss_woman_man_medium_skin_tone_dark_skin_ton": 32, "kiss_woman_man_medium_skin_tone_light_skin_ton": 32, "kiss_woman_man_medium_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_man_medium_skin_tone_medium_light_skin_ton": 32, "kiss_woman_man_tone1": 32, "kiss_woman_man_tone1_tone2": 32, "kiss_woman_man_tone1_tone3": 32, "kiss_woman_man_tone1_tone4": 32, "kiss_woman_man_tone1_tone5": 32, "kiss_woman_man_tone2": 32, "kiss_woman_man_tone2_tone1": 32, "kiss_woman_man_tone2_tone3": 32, "kiss_woman_man_tone2_tone4": 32, "kiss_woman_man_tone2_tone5": 32, "kiss_woman_man_tone3": 32, "kiss_woman_man_tone3_tone1": 32, "kiss_woman_man_tone3_tone2": 32, "kiss_woman_man_tone3_tone4": 32, "kiss_woman_man_tone3_tone5": 32, "kiss_woman_man_tone4": 32, "kiss_woman_man_tone4_tone1": 32, "kiss_woman_man_tone4_tone2": 32, "kiss_woman_man_tone4_tone3": 32, "kiss_woman_man_tone4_tone5": 32, "kiss_woman_man_tone5": 32, "kiss_woman_man_tone5_tone1": 32, "kiss_woman_man_tone5_tone2": 32, "kiss_woman_man_tone5_tone3": 32, "kiss_woman_man_tone5_tone4": 32, "kiss_woman_woman_dark_skin_ton": 32, "kiss_woman_woman_dark_skin_tone_light_skin_ton": 32, "kiss_woman_woman_dark_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_woman_dark_skin_tone_medium_light_skin_ton": 32, "kiss_woman_woman_dark_skin_tone_medium_skin_ton": 32, "kiss_woman_woman_light_skin_ton": 32, "kiss_woman_woman_light_skin_tone_dark_skin_ton": 32, "kiss_woman_woman_light_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_woman_light_skin_tone_medium_light_skin_ton": 32, "kiss_woman_woman_light_skin_tone_medium_skin_ton": 32, "kiss_woman_woman_medium_dark_skin_ton": 32, "kiss_woman_woman_medium_dark_skin_tone_dark_skin_ton": 32, "kiss_woman_woman_medium_dark_skin_tone_light_skin_ton": 32, "kiss_woman_woman_medium_dark_skin_tone_medium_light_skin_ton": 32, "kiss_woman_woman_medium_dark_skin_tone_medium_skin_ton": 32, "kiss_woman_woman_medium_light_skin_ton": 32, "kiss_woman_woman_medium_light_skin_tone_dark_skin_ton": 32, "kiss_woman_woman_medium_light_skin_tone_light_skin_ton": 32, "kiss_woman_woman_medium_light_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_woman_medium_light_skin_tone_medium_skin_ton": 32, "kiss_woman_woman_medium_skin_ton": 32, "kiss_woman_woman_medium_skin_tone_dark_skin_ton": 32, "kiss_woman_woman_medium_skin_tone_light_skin_ton": 32, "kiss_woman_woman_medium_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_woman_medium_skin_tone_medium_light_skin_ton": 32, "kiss_woman_woman_tone1": 32, "kiss_woman_woman_tone1_tone2": 32, "kiss_woman_woman_tone1_tone3": 32, "kiss_woman_woman_tone1_tone4": 32, "kiss_woman_woman_tone1_tone5": 32, "kiss_woman_woman_tone2": 32, "kiss_woman_woman_tone2_tone1": 32, "kiss_woman_woman_tone2_tone3": 32, "kiss_woman_woman_tone2_tone4": 32, "kiss_woman_woman_tone2_tone5": 32, "kiss_woman_woman_tone3": 32, "kiss_woman_woman_tone3_tone1": 32, "kiss_woman_woman_tone3_tone2": 32, "kiss_woman_woman_tone3_tone4": 32, "kiss_woman_woman_tone3_tone5": 32, "kiss_woman_woman_tone4": 32, "kiss_woman_woman_tone4_tone1": 32, "kiss_woman_woman_tone4_tone2": 32, "kiss_woman_woman_tone4_tone3": 32, "kiss_woman_woman_tone4_tone5": 32, "kiss_woman_woman_tone5": 32, "kiss_woman_woman_tone5_tone1": 32, "kiss_woman_woman_tone5_tone2": 32, "kiss_woman_woman_tone5_tone3": 32, "kiss_woman_woman_tone5_tone4": 32, "kiss_ww": 32, "kissing_cat": 32, "kissing_closed_ey": 32, "kissing_smiling_ey": 32, "kite": 32, "kiwi": 32, "kiwi_fruit": 32, "kiwifruit": 32, "km": [32, 191, 193, 348], "kn": 32, "knife": [32, 792, 959, 1184], "knot": 32, "koala": 32, "koko": 32, "korea": 32, "kosovo": 32, "kp": 32, "kr": 32, "kuwait": 32, "kw": [32, 239, 245, 255, 258], "ky": 32, "kyrgyzstan": 32, "kz": 32, "la": 32, "lab_coat": 32, "label": [32, 39, 40, 58, 191, 193, 240, 253, 267, 270, 303, 309, 348, 422, 427, 434, 440, 444, 447, 451, 454, 460, 464, 469, 470, 691, 692, 730, 783, 785, 786, 813, 1131, 1138, 1150, 1153], "lacross": 32, "ladder": 32, "lady_beetl": 32, "lao": 32, "large_blue_circl": 32, "large_blue_diamond": 32, "large_orange_diamond": 32, "last_quarter_moon": 32, "last_quarter_moon_with_fac": 32, "latin_cross": 32, "latvia": 32, "laugh": 32, "lb": 32, "lc": [32, 207], "leafy_green": 32, "leav": [32, 49, 69, 123, 167, 170, 171, 177, 180, 210, 239, 262, 299, 376, 594, 596, 605, 606, 621, 623, 624, 781, 784, 796, 801, 811, 833, 938, 963, 983, 1071, 1144], "lebanon": 32, "ledger": 32, "left_facing_fist": 32, "left_facing_fist_tone1": 32, "left_facing_fist_tone2": 32, "left_facing_fist_tone3": 32, "left_facing_fist_tone4": 32, "left_facing_fist_tone5": 32, "left_fist": 32, "left_fist_tone1": 32, "left_fist_tone2": 32, "left_fist_tone3": 32, "left_fist_tone4": 32, "left_fist_tone5": 32, "left_luggag": 32, "left_right_arrow": 32, "left_speech_bubbl": 32, "leftwards_arrow_with_hook": 32, "leg": [32, 35], "leg_dark_skin_ton": 32, "leg_light_skin_ton": 32, "leg_medium_dark_skin_ton": 32, "leg_medium_light_skin_ton": 32, "leg_medium_skin_ton": 32, "leg_tone1": 32, "leg_tone2": 32, "leg_tone3": 32, "leg_tone4": 32, "leg_tone5": 32, "lemon": 32, "leo": [32, 356, 357, 374], "leopard": 32, "lesotho": 32, "level_slid": 32, "levit": 32, "levitate_tone1": 32, "levitate_tone2": 32, "levitate_tone3": 32, "levitate_tone4": 32, "levitate_tone5": 32, "liar": 32, "liberia": 32, "libra": 32, "libya": 32, "liechtenstein": 32, "lifter": 32, "lifter_tone1": 32, "lifter_tone2": 32, "lifter_tone3": 32, "lifter_tone4": 32, "lifter_tone5": 32, "light_rail": 32, "linked_paperclip": 32, "lion": 32, "lion_fac": 32, "lip": 32, "lipstick": 32, "lithuania": 32, "lizard": 32, "lk": 32, "llama": 32, "lobster": 32, "lock": [32, 170, 172, 202, 206, 239, 245, 248, 255, 258, 274, 275, 277, 286, 307, 320, 321, 334, 338, 374, 448, 488, 568, 751, 757, 760, 762, 763, 781, 785, 786, 823, 831, 836, 841, 870, 946, 978, 983, 985, 993, 1000, 1041, 1131, 1184, 1196, 1199], "lock_with_ink_pen": 32, "lollipop": 32, "long_drum": 32, "loud_sound": 32, "loudspeak": 32, "love_hotel": 32, "love_lett": 32, "love_you_gestur": 32, "love_you_gesture_dark_skin_ton": 32, "love_you_gesture_light_skin_ton": 32, "love_you_gesture_medium_dark_skin_ton": 32, "love_you_gesture_medium_light_skin_ton": 32, "love_you_gesture_medium_skin_ton": 32, "love_you_gesture_tone1": 32, "love_you_gesture_tone2": 32, "love_you_gesture_tone3": 32, "love_you_gesture_tone4": 32, "love_you_gesture_tone5": 32, "low_bright": 32, "lower_left_ballpoint_pen": 32, "lower_left_crayon": 32, "lower_left_fountain_pen": 32, "lower_left_paintbrush": 32, "lr": 32, "lu": 32, "luggag": 32, "lung": 32, "luxembourg": 32, "lv": 32, "ly": 32, "lying_fac": 32, "ma": 32, "macau": 32, "macedonia": 32, "madagascar": 32, "mag": 32, "mag_right": 32, "mage": 32, "mage_dark_skin_ton": 32, "mage_light_skin_ton": 32, "mage_medium_dark_skin_ton": 32, "mage_medium_light_skin_ton": 32, "mage_medium_skin_ton": 32, "mage_tone1": 32, "mage_tone2": 32, "mage_tone3": 32, "mage_tone4": 32, "mage_tone5": 32, "magic_wand": 32, "magnet": 32, "mahjong": 32, "mailbox": 32, "mailbox_clos": 32, "mailbox_with_mail": 32, "mailbox_with_no_mail": 32, "malawi": 32, "malaysia": 32, "maldiv": 32, "male_danc": 32, "male_dancer_tone1": 32, "male_dancer_tone2": 32, "male_dancer_tone3": 32, "male_dancer_tone4": 32, "male_dancer_tone5": 32, "male_detect": 32, "male_sign": 32, "mali": 32, "malta": 32, "mammoth": 32, "man_artist": 32, "man_artist_dark_skin_ton": 32, "man_artist_light_skin_ton": 32, "man_artist_medium_dark_skin_ton": 32, "man_artist_medium_light_skin_ton": 32, "man_artist_medium_skin_ton": 32, "man_artist_tone1": 32, "man_artist_tone2": 32, "man_artist_tone3": 32, "man_artist_tone4": 32, "man_artist_tone5": 32, "man_astronaut": 32, "man_astronaut_dark_skin_ton": 32, "man_astronaut_light_skin_ton": 32, "man_astronaut_medium_dark_skin_ton": 32, "man_astronaut_medium_light_skin_ton": 32, "man_astronaut_medium_skin_ton": 32, "man_astronaut_tone1": 32, "man_astronaut_tone2": 32, "man_astronaut_tone3": 32, "man_astronaut_tone4": 32, "man_astronaut_tone5": 32, "man_bald": 32, "man_bald_dark_skin_ton": 32, "man_bald_light_skin_ton": 32, "man_bald_medium_dark_skin_ton": 32, "man_bald_medium_light_skin_ton": 32, "man_bald_medium_skin_ton": 32, "man_bald_tone1": 32, "man_bald_tone2": 32, "man_bald_tone3": 32, "man_bald_tone4": 32, "man_bald_tone5": 32, "man_beard": 32, "man_bik": 32, "man_biking_dark_skin_ton": 32, "man_biking_light_skin_ton": 32, "man_biking_medium_dark_skin_ton": 32, "man_biking_medium_light_skin_ton": 32, "man_biking_medium_skin_ton": 32, "man_biking_tone1": 32, "man_biking_tone2": 32, "man_biking_tone3": 32, "man_biking_tone4": 32, "man_biking_tone5": 32, "man_bouncing_bal": 32, "man_bouncing_ball_dark_skin_ton": 32, "man_bouncing_ball_light_skin_ton": 32, "man_bouncing_ball_medium_dark_skin_ton": 32, "man_bouncing_ball_medium_light_skin_ton": 32, "man_bouncing_ball_medium_skin_ton": 32, "man_bouncing_ball_tone1": 32, "man_bouncing_ball_tone2": 32, "man_bouncing_ball_tone3": 32, "man_bouncing_ball_tone4": 32, "man_bouncing_ball_tone5": 32, "man_bow": 32, "man_bowing_dark_skin_ton": 32, "man_bowing_light_skin_ton": 32, "man_bowing_medium_dark_skin_ton": 32, "man_bowing_medium_light_skin_ton": 32, "man_bowing_medium_skin_ton": 32, "man_bowing_tone1": 32, "man_bowing_tone2": 32, "man_bowing_tone3": 32, "man_bowing_tone4": 32, "man_bowing_tone5": 32, "man_cartwheel": 32, "man_cartwheeling_dark_skin_ton": 32, "man_cartwheeling_light_skin_ton": 32, "man_cartwheeling_medium_dark_skin_ton": 32, "man_cartwheeling_medium_light_skin_ton": 32, "man_cartwheeling_medium_skin_ton": 32, "man_cartwheeling_tone1": 32, "man_cartwheeling_tone2": 32, "man_cartwheeling_tone3": 32, "man_cartwheeling_tone4": 32, "man_cartwheeling_tone5": 32, "man_climb": 32, "man_climbing_dark_skin_ton": 32, "man_climbing_light_skin_ton": 32, "man_climbing_medium_dark_skin_ton": 32, "man_climbing_medium_light_skin_ton": 32, "man_climbing_medium_skin_ton": 32, "man_climbing_tone1": 32, "man_climbing_tone2": 32, "man_climbing_tone3": 32, "man_climbing_tone4": 32, "man_climbing_tone5": 32, "man_construction_work": 32, "man_construction_worker_dark_skin_ton": 32, "man_construction_worker_light_skin_ton": 32, "man_construction_worker_medium_dark_skin_ton": 32, "man_construction_worker_medium_light_skin_ton": 32, "man_construction_worker_medium_skin_ton": 32, "man_construction_worker_tone1": 32, "man_construction_worker_tone2": 32, "man_construction_worker_tone3": 32, "man_construction_worker_tone4": 32, "man_construction_worker_tone5": 32, "man_cook": 32, "man_cook_dark_skin_ton": 32, "man_cook_light_skin_ton": 32, "man_cook_medium_dark_skin_ton": 32, "man_cook_medium_light_skin_ton": 32, "man_cook_medium_skin_ton": 32, "man_cook_tone1": 32, "man_cook_tone2": 32, "man_cook_tone3": 32, "man_cook_tone4": 32, "man_cook_tone5": 32, "man_curly_hair": 32, "man_curly_haired_dark_skin_ton": 32, "man_curly_haired_light_skin_ton": 32, "man_curly_haired_medium_dark_skin_ton": 32, "man_curly_haired_medium_light_skin_ton": 32, "man_curly_haired_medium_skin_ton": 32, "man_curly_haired_tone1": 32, "man_curly_haired_tone2": 32, "man_curly_haired_tone3": 32, "man_curly_haired_tone4": 32, "man_curly_haired_tone5": 32, "man_danc": 32, "man_dancing_tone1": 32, "man_dancing_tone2": 32, "man_dancing_tone3": 32, "man_dancing_tone4": 32, "man_dancing_tone5": 32, "man_dark_skin_tone_beard": 32, "man_detect": 32, "man_detective_dark_skin_ton": 32, "man_detective_light_skin_ton": 32, "man_detective_medium_dark_skin_ton": 32, "man_detective_medium_light_skin_ton": 32, "man_detective_medium_skin_ton": 32, "man_detective_tone1": 32, "man_detective_tone2": 32, "man_detective_tone3": 32, "man_detective_tone4": 32, "man_detective_tone5": 32, "man_elf": 32, "man_elf_dark_skin_ton": 32, "man_elf_light_skin_ton": 32, "man_elf_medium_dark_skin_ton": 32, "man_elf_medium_light_skin_ton": 32, "man_elf_medium_skin_ton": 32, "man_elf_tone1": 32, "man_elf_tone2": 32, "man_elf_tone3": 32, "man_elf_tone4": 32, "man_elf_tone5": 32, "man_facepalm": 32, "man_facepalming_dark_skin_ton": 32, "man_facepalming_light_skin_ton": 32, "man_facepalming_medium_dark_skin_ton": 32, "man_facepalming_medium_light_skin_ton": 32, "man_facepalming_medium_skin_ton": 32, "man_facepalming_tone1": 32, "man_facepalming_tone2": 32, "man_facepalming_tone3": 32, "man_facepalming_tone4": 32, "man_facepalming_tone5": 32, "man_factory_work": 32, "man_factory_worker_dark_skin_ton": 32, "man_factory_worker_light_skin_ton": 32, "man_factory_worker_medium_dark_skin_ton": 32, "man_factory_worker_medium_light_skin_ton": 32, "man_factory_worker_medium_skin_ton": 32, "man_factory_worker_tone1": 32, "man_factory_worker_tone2": 32, "man_factory_worker_tone3": 32, "man_factory_worker_tone4": 32, "man_factory_worker_tone5": 32, "man_fairi": 32, "man_fairy_dark_skin_ton": 32, "man_fairy_light_skin_ton": 32, "man_fairy_medium_dark_skin_ton": 32, "man_fairy_medium_light_skin_ton": 32, "man_fairy_medium_skin_ton": 32, "man_fairy_tone1": 32, "man_fairy_tone2": 32, "man_fairy_tone3": 32, "man_fairy_tone4": 32, "man_fairy_tone5": 32, "man_farm": 32, "man_farmer_dark_skin_ton": 32, "man_farmer_light_skin_ton": 32, "man_farmer_medium_dark_skin_ton": 32, "man_farmer_medium_light_skin_ton": 32, "man_farmer_medium_skin_ton": 32, "man_farmer_tone1": 32, "man_farmer_tone2": 32, "man_farmer_tone3": 32, "man_farmer_tone4": 32, "man_farmer_tone5": 32, "man_feeding_babi": 32, "man_feeding_baby_dark_skin_ton": 32, "man_feeding_baby_light_skin_ton": 32, "man_feeding_baby_medium_dark_skin_ton": 32, "man_feeding_baby_medium_light_skin_ton": 32, "man_feeding_baby_medium_skin_ton": 32, "man_feeding_baby_tone1": 32, "man_feeding_baby_tone2": 32, "man_feeding_baby_tone3": 32, "man_feeding_baby_tone4": 32, "man_feeding_baby_tone5": 32, "man_firefight": 32, "man_firefighter_dark_skin_ton": 32, "man_firefighter_light_skin_ton": 32, "man_firefighter_medium_dark_skin_ton": 32, "man_firefighter_medium_light_skin_ton": 32, "man_firefighter_medium_skin_ton": 32, "man_firefighter_tone1": 32, "man_firefighter_tone2": 32, "man_firefighter_tone3": 32, "man_firefighter_tone4": 32, "man_firefighter_tone5": 32, "man_frown": 32, "man_frowning_dark_skin_ton": 32, "man_frowning_light_skin_ton": 32, "man_frowning_medium_dark_skin_ton": 32, "man_frowning_medium_light_skin_ton": 32, "man_frowning_medium_skin_ton": 32, "man_frowning_tone1": 32, "man_frowning_tone2": 32, "man_frowning_tone3": 32, "man_frowning_tone4": 32, "man_frowning_tone5": 32, "man_geni": 32, "man_gesturing_no": 32, "man_gesturing_no_dark_skin_ton": 32, "man_gesturing_no_light_skin_ton": 32, "man_gesturing_no_medium_dark_skin_ton": 32, "man_gesturing_no_medium_light_skin_ton": 32, "man_gesturing_no_medium_skin_ton": 32, "man_gesturing_no_tone1": 32, "man_gesturing_no_tone2": 32, "man_gesturing_no_tone3": 32, "man_gesturing_no_tone4": 32, "man_gesturing_no_tone5": 32, "man_gesturing_ok": 32, "man_gesturing_ok_dark_skin_ton": 32, "man_gesturing_ok_light_skin_ton": 32, "man_gesturing_ok_medium_dark_skin_ton": 32, "man_gesturing_ok_medium_light_skin_ton": 32, "man_gesturing_ok_medium_skin_ton": 32, "man_gesturing_ok_tone1": 32, "man_gesturing_ok_tone2": 32, "man_gesturing_ok_tone3": 32, "man_gesturing_ok_tone4": 32, "man_gesturing_ok_tone5": 32, "man_getting_face_massag": 32, "man_getting_face_massage_dark_skin_ton": 32, "man_getting_face_massage_light_skin_ton": 32, "man_getting_face_massage_medium_dark_skin_ton": 32, "man_getting_face_massage_medium_light_skin_ton": 32, "man_getting_face_massage_medium_skin_ton": 32, "man_getting_face_massage_tone1": 32, "man_getting_face_massage_tone2": 32, "man_getting_face_massage_tone3": 32, "man_getting_face_massage_tone4": 32, "man_getting_face_massage_tone5": 32, "man_getting_haircut": 32, "man_getting_haircut_dark_skin_ton": 32, "man_getting_haircut_light_skin_ton": 32, "man_getting_haircut_medium_dark_skin_ton": 32, "man_getting_haircut_medium_light_skin_ton": 32, "man_getting_haircut_medium_skin_ton": 32, "man_getting_haircut_tone1": 32, "man_getting_haircut_tone2": 32, "man_getting_haircut_tone3": 32, "man_getting_haircut_tone4": 32, "man_getting_haircut_tone5": 32, "man_golf": 32, "man_golfing_dark_skin_ton": 32, "man_golfing_light_skin_ton": 32, "man_golfing_medium_dark_skin_ton": 32, "man_golfing_medium_light_skin_ton": 32, "man_golfing_medium_skin_ton": 32, "man_golfing_tone1": 32, "man_golfing_tone2": 32, "man_golfing_tone3": 32, "man_golfing_tone4": 32, "man_golfing_tone5": 32, "man_guard": 32, "man_guard_dark_skin_ton": 32, "man_guard_light_skin_ton": 32, "man_guard_medium_dark_skin_ton": 32, "man_guard_medium_light_skin_ton": 32, "man_guard_medium_skin_ton": 32, "man_guard_tone1": 32, "man_guard_tone2": 32, "man_guard_tone3": 32, "man_guard_tone4": 32, "man_guard_tone5": 32, "man_health_work": 32, "man_health_worker_dark_skin_ton": 32, "man_health_worker_light_skin_ton": 32, "man_health_worker_medium_dark_skin_ton": 32, "man_health_worker_medium_light_skin_ton": 32, "man_health_worker_medium_skin_ton": 32, "man_health_worker_tone1": 32, "man_health_worker_tone2": 32, "man_health_worker_tone3": 32, "man_health_worker_tone4": 32, "man_health_worker_tone5": 32, "man_in_business_suit_levit": 32, "man_in_business_suit_levitating_dark_skin_ton": 32, "man_in_business_suit_levitating_light_skin_ton": 32, "man_in_business_suit_levitating_medium_dark_skin_ton": 32, "man_in_business_suit_levitating_medium_light_skin_ton": 32, "man_in_business_suit_levitating_medium_skin_ton": 32, "man_in_business_suit_levitating_tone1": 32, "man_in_business_suit_levitating_tone2": 32, "man_in_business_suit_levitating_tone3": 32, "man_in_business_suit_levitating_tone4": 32, "man_in_business_suit_levitating_tone5": 32, "man_in_lotus_posit": 32, "man_in_lotus_position_dark_skin_ton": 32, "man_in_lotus_position_light_skin_ton": 32, "man_in_lotus_position_medium_dark_skin_ton": 32, "man_in_lotus_position_medium_light_skin_ton": 32, "man_in_lotus_position_medium_skin_ton": 32, "man_in_lotus_position_tone1": 32, "man_in_lotus_position_tone2": 32, "man_in_lotus_position_tone3": 32, "man_in_lotus_position_tone4": 32, "man_in_lotus_position_tone5": 32, "man_in_manual_wheelchair": 32, "man_in_manual_wheelchair_dark_skin_ton": 32, "man_in_manual_wheelchair_light_skin_ton": 32, "man_in_manual_wheelchair_medium_dark_skin_ton": 32, "man_in_manual_wheelchair_medium_light_skin_ton": 32, "man_in_manual_wheelchair_medium_skin_ton": 32, "man_in_manual_wheelchair_tone1": 32, "man_in_manual_wheelchair_tone2": 32, "man_in_manual_wheelchair_tone3": 32, "man_in_manual_wheelchair_tone4": 32, "man_in_manual_wheelchair_tone5": 32, "man_in_motorized_wheelchair": 32, "man_in_motorized_wheelchair_dark_skin_ton": 32, "man_in_motorized_wheelchair_light_skin_ton": 32, "man_in_motorized_wheelchair_medium_dark_skin_ton": 32, "man_in_motorized_wheelchair_medium_light_skin_ton": 32, "man_in_motorized_wheelchair_medium_skin_ton": 32, "man_in_motorized_wheelchair_tone1": 32, "man_in_motorized_wheelchair_tone2": 32, "man_in_motorized_wheelchair_tone3": 32, "man_in_motorized_wheelchair_tone4": 32, "man_in_motorized_wheelchair_tone5": 32, "man_in_steamy_room": 32, "man_in_steamy_room_dark_skin_ton": 32, "man_in_steamy_room_light_skin_ton": 32, "man_in_steamy_room_medium_dark_skin_ton": 32, "man_in_steamy_room_medium_light_skin_ton": 32, "man_in_steamy_room_medium_skin_ton": 32, "man_in_steamy_room_tone1": 32, "man_in_steamy_room_tone2": 32, "man_in_steamy_room_tone3": 32, "man_in_steamy_room_tone4": 32, "man_in_steamy_room_tone5": 32, "man_in_tuxedo": 32, "man_in_tuxedo_dark_skin_ton": 32, "man_in_tuxedo_light_skin_ton": 32, "man_in_tuxedo_medium_dark_skin_ton": 32, "man_in_tuxedo_medium_light_skin_ton": 32, "man_in_tuxedo_medium_skin_ton": 32, "man_in_tuxedo_tone1": 32, "man_in_tuxedo_tone2": 32, "man_in_tuxedo_tone3": 32, "man_in_tuxedo_tone4": 32, "man_in_tuxedo_tone5": 32, "man_judg": 32, "man_judge_dark_skin_ton": 32, "man_judge_light_skin_ton": 32, "man_judge_medium_dark_skin_ton": 32, "man_judge_medium_light_skin_ton": 32, "man_judge_medium_skin_ton": 32, "man_judge_tone1": 32, "man_judge_tone2": 32, "man_judge_tone3": 32, "man_judge_tone4": 32, "man_judge_tone5": 32, "man_juggl": 32, "man_juggling_dark_skin_ton": 32, "man_juggling_light_skin_ton": 32, "man_juggling_medium_dark_skin_ton": 32, "man_juggling_medium_light_skin_ton": 32, "man_juggling_medium_skin_ton": 32, "man_juggling_tone1": 32, "man_juggling_tone2": 32, "man_juggling_tone3": 32, "man_juggling_tone4": 32, "man_juggling_tone5": 32, "man_kneel": 32, "man_kneeling_dark_skin_ton": 32, "man_kneeling_light_skin_ton": 32, "man_kneeling_medium_dark_skin_ton": 32, "man_kneeling_medium_light_skin_ton": 32, "man_kneeling_medium_skin_ton": 32, "man_kneeling_tone1": 32, "man_kneeling_tone2": 32, "man_kneeling_tone3": 32, "man_kneeling_tone4": 32, "man_kneeling_tone5": 32, "man_lifting_weight": 32, "man_lifting_weights_dark_skin_ton": 32, "man_lifting_weights_light_skin_ton": 32, "man_lifting_weights_medium_dark_skin_ton": 32, "man_lifting_weights_medium_light_skin_ton": 32, "man_lifting_weights_medium_skin_ton": 32, "man_lifting_weights_tone1": 32, "man_lifting_weights_tone2": 32, "man_lifting_weights_tone3": 32, "man_lifting_weights_tone4": 32, "man_lifting_weights_tone5": 32, "man_light_skin_tone_beard": 32, "man_mag": 32, "man_mage_dark_skin_ton": 32, "man_mage_light_skin_ton": 32, "man_mage_medium_dark_skin_ton": 32, "man_mage_medium_light_skin_ton": 32, "man_mage_medium_skin_ton": 32, "man_mage_tone1": 32, "man_mage_tone2": 32, "man_mage_tone3": 32, "man_mage_tone4": 32, "man_mage_tone5": 32, "man_mechan": 32, "man_mechanic_dark_skin_ton": 32, "man_mechanic_light_skin_ton": 32, "man_mechanic_medium_dark_skin_ton": 32, "man_mechanic_medium_light_skin_ton": 32, "man_mechanic_medium_skin_ton": 32, "man_mechanic_tone1": 32, "man_mechanic_tone2": 32, "man_mechanic_tone3": 32, "man_mechanic_tone4": 32, "man_mechanic_tone5": 32, "man_medium_dark_skin_tone_beard": 32, "man_medium_light_skin_tone_beard": 32, "man_medium_skin_tone_beard": 32, "man_mountain_bik": 32, "man_mountain_biking_dark_skin_ton": 32, "man_mountain_biking_light_skin_ton": 32, "man_mountain_biking_medium_dark_skin_ton": 32, "man_mountain_biking_medium_light_skin_ton": 32, "man_mountain_biking_medium_skin_ton": 32, "man_mountain_biking_tone1": 32, "man_mountain_biking_tone2": 32, "man_mountain_biking_tone3": 32, "man_mountain_biking_tone4": 32, "man_mountain_biking_tone5": 32, "man_office_work": 32, "man_office_worker_dark_skin_ton": 32, "man_office_worker_light_skin_ton": 32, "man_office_worker_medium_dark_skin_ton": 32, "man_office_worker_medium_light_skin_ton": 32, "man_office_worker_medium_skin_ton": 32, "man_office_worker_tone1": 32, "man_office_worker_tone2": 32, "man_office_worker_tone3": 32, "man_office_worker_tone4": 32, "man_office_worker_tone5": 32, "man_pilot": 32, "man_pilot_dark_skin_ton": 32, "man_pilot_light_skin_ton": 32, "man_pilot_medium_dark_skin_ton": 32, "man_pilot_medium_light_skin_ton": 32, "man_pilot_medium_skin_ton": 32, "man_pilot_tone1": 32, "man_pilot_tone2": 32, "man_pilot_tone3": 32, "man_pilot_tone4": 32, "man_pilot_tone5": 32, "man_playing_handbal": 32, "man_playing_handball_dark_skin_ton": 32, "man_playing_handball_light_skin_ton": 32, "man_playing_handball_medium_dark_skin_ton": 32, "man_playing_handball_medium_light_skin_ton": 32, "man_playing_handball_medium_skin_ton": 32, "man_playing_handball_tone1": 32, "man_playing_handball_tone2": 32, "man_playing_handball_tone3": 32, "man_playing_handball_tone4": 32, "man_playing_handball_tone5": 32, "man_playing_water_polo": 32, "man_playing_water_polo_dark_skin_ton": 32, "man_playing_water_polo_light_skin_ton": 32, "man_playing_water_polo_medium_dark_skin_ton": 32, "man_playing_water_polo_medium_light_skin_ton": 32, "man_playing_water_polo_medium_skin_ton": 32, "man_playing_water_polo_tone1": 32, "man_playing_water_polo_tone2": 32, "man_playing_water_polo_tone3": 32, "man_playing_water_polo_tone4": 32, "man_playing_water_polo_tone5": 32, "man_police_offic": 32, "man_police_officer_dark_skin_ton": 32, "man_police_officer_light_skin_ton": 32, "man_police_officer_medium_dark_skin_ton": 32, "man_police_officer_medium_light_skin_ton": 32, "man_police_officer_medium_skin_ton": 32, "man_police_officer_tone1": 32, "man_police_officer_tone2": 32, "man_police_officer_tone3": 32, "man_police_officer_tone4": 32, "man_police_officer_tone5": 32, "man_pout": 32, "man_pouting_dark_skin_ton": 32, "man_pouting_light_skin_ton": 32, "man_pouting_medium_dark_skin_ton": 32, "man_pouting_medium_light_skin_ton": 32, "man_pouting_medium_skin_ton": 32, "man_pouting_tone1": 32, "man_pouting_tone2": 32, "man_pouting_tone3": 32, "man_pouting_tone4": 32, "man_pouting_tone5": 32, "man_raising_hand": 32, "man_raising_hand_dark_skin_ton": 32, "man_raising_hand_light_skin_ton": 32, "man_raising_hand_medium_dark_skin_ton": 32, "man_raising_hand_medium_light_skin_ton": 32, "man_raising_hand_medium_skin_ton": 32, "man_raising_hand_tone1": 32, "man_raising_hand_tone2": 32, "man_raising_hand_tone3": 32, "man_raising_hand_tone4": 32, "man_raising_hand_tone5": 32, "man_red_hair": 32, "man_red_haired_dark_skin_ton": 32, "man_red_haired_light_skin_ton": 32, "man_red_haired_medium_dark_skin_ton": 32, "man_red_haired_medium_light_skin_ton": 32, "man_red_haired_medium_skin_ton": 32, "man_red_haired_tone1": 32, "man_red_haired_tone2": 32, "man_red_haired_tone3": 32, "man_red_haired_tone4": 32, "man_red_haired_tone5": 32, "man_rowing_boat": 32, "man_rowing_boat_dark_skin_ton": 32, "man_rowing_boat_light_skin_ton": 32, "man_rowing_boat_medium_dark_skin_ton": 32, "man_rowing_boat_medium_light_skin_ton": 32, "man_rowing_boat_medium_skin_ton": 32, "man_rowing_boat_tone1": 32, "man_rowing_boat_tone2": 32, "man_rowing_boat_tone3": 32, "man_rowing_boat_tone4": 32, "man_rowing_boat_tone5": 32, "man_run": 32, "man_running_dark_skin_ton": 32, "man_running_light_skin_ton": 32, "man_running_medium_dark_skin_ton": 32, "man_running_medium_light_skin_ton": 32, "man_running_medium_skin_ton": 32, "man_running_tone1": 32, "man_running_tone2": 32, "man_running_tone3": 32, "man_running_tone4": 32, "man_running_tone5": 32, "man_scientist": 32, "man_scientist_dark_skin_ton": 32, "man_scientist_light_skin_ton": 32, "man_scientist_medium_dark_skin_ton": 32, "man_scientist_medium_light_skin_ton": 32, "man_scientist_medium_skin_ton": 32, "man_scientist_tone1": 32, "man_scientist_tone2": 32, "man_scientist_tone3": 32, "man_scientist_tone4": 32, "man_scientist_tone5": 32, "man_shrug": 32, "man_shrugging_dark_skin_ton": 32, "man_shrugging_light_skin_ton": 32, "man_shrugging_medium_dark_skin_ton": 32, "man_shrugging_medium_light_skin_ton": 32, "man_shrugging_medium_skin_ton": 32, "man_shrugging_tone1": 32, "man_shrugging_tone2": 32, "man_shrugging_tone3": 32, "man_shrugging_tone4": 32, "man_shrugging_tone5": 32, "man_sing": 32, "man_singer_dark_skin_ton": 32, "man_singer_light_skin_ton": 32, "man_singer_medium_dark_skin_ton": 32, "man_singer_medium_light_skin_ton": 32, "man_singer_medium_skin_ton": 32, "man_singer_tone1": 32, "man_singer_tone2": 32, "man_singer_tone3": 32, "man_singer_tone4": 32, "man_singer_tone5": 32, "man_stand": 32, "man_standing_dark_skin_ton": 32, "man_standing_light_skin_ton": 32, "man_standing_medium_dark_skin_ton": 32, "man_standing_medium_light_skin_ton": 32, "man_standing_medium_skin_ton": 32, "man_standing_tone1": 32, "man_standing_tone2": 32, "man_standing_tone3": 32, "man_standing_tone4": 32, "man_standing_tone5": 32, "man_stud": 32, "man_student_dark_skin_ton": 32, "man_student_light_skin_ton": 32, "man_student_medium_dark_skin_ton": 32, "man_student_medium_light_skin_ton": 32, "man_student_medium_skin_ton": 32, "man_student_tone1": 32, "man_student_tone2": 32, "man_student_tone3": 32, "man_student_tone4": 32, "man_student_tone5": 32, "man_superhero": 32, "man_superhero_dark_skin_ton": 32, "man_superhero_light_skin_ton": 32, "man_superhero_medium_dark_skin_ton": 32, "man_superhero_medium_light_skin_ton": 32, "man_superhero_medium_skin_ton": 32, "man_superhero_tone1": 32, "man_superhero_tone2": 32, "man_superhero_tone3": 32, "man_superhero_tone4": 32, "man_superhero_tone5": 32, "man_supervillain": 32, "man_supervillain_dark_skin_ton": 32, "man_supervillain_light_skin_ton": 32, "man_supervillain_medium_dark_skin_ton": 32, "man_supervillain_medium_light_skin_ton": 32, "man_supervillain_medium_skin_ton": 32, "man_supervillain_tone1": 32, "man_supervillain_tone2": 32, "man_supervillain_tone3": 32, "man_supervillain_tone4": 32, "man_supervillain_tone5": 32, "man_surf": 32, "man_surfing_dark_skin_ton": 32, "man_surfing_light_skin_ton": 32, "man_surfing_medium_dark_skin_ton": 32, "man_surfing_medium_light_skin_ton": 32, "man_surfing_medium_skin_ton": 32, "man_surfing_tone1": 32, "man_surfing_tone2": 32, "man_surfing_tone3": 32, "man_surfing_tone4": 32, "man_surfing_tone5": 32, "man_swim": 32, "man_swimming_dark_skin_ton": 32, "man_swimming_light_skin_ton": 32, "man_swimming_medium_dark_skin_ton": 32, "man_swimming_medium_light_skin_ton": 32, "man_swimming_medium_skin_ton": 32, "man_swimming_tone1": 32, "man_swimming_tone2": 32, "man_swimming_tone3": 32, "man_swimming_tone4": 32, "man_swimming_tone5": 32, "man_teach": 32, "man_teacher_dark_skin_ton": 32, "man_teacher_light_skin_ton": 32, "man_teacher_medium_dark_skin_ton": 32, "man_teacher_medium_light_skin_ton": 32, "man_teacher_medium_skin_ton": 32, "man_teacher_tone1": 32, "man_teacher_tone2": 32, "man_teacher_tone3": 32, "man_teacher_tone4": 32, "man_teacher_tone5": 32, "man_technologist": 32, "man_technologist_dark_skin_ton": 32, "man_technologist_light_skin_ton": 32, "man_technologist_medium_dark_skin_ton": 32, "man_technologist_medium_light_skin_ton": 32, "man_technologist_medium_skin_ton": 32, "man_technologist_tone1": 32, "man_technologist_tone2": 32, "man_technologist_tone3": 32, "man_technologist_tone4": 32, "man_technologist_tone5": 32, "man_tipping_hand": 32, "man_tipping_hand_dark_skin_ton": 32, "man_tipping_hand_light_skin_ton": 32, "man_tipping_hand_medium_dark_skin_ton": 32, "man_tipping_hand_medium_light_skin_ton": 32, "man_tipping_hand_medium_skin_ton": 32, "man_tipping_hand_tone1": 32, "man_tipping_hand_tone2": 32, "man_tipping_hand_tone3": 32, "man_tipping_hand_tone4": 32, "man_tipping_hand_tone5": 32, "man_tone1": 32, "man_tone1_beard": 32, "man_tone2": 32, "man_tone2_beard": 32, "man_tone3": 32, "man_tone3_beard": 32, "man_tone4": 32, "man_tone4_beard": 32, "man_tone5": 32, "man_tone5_beard": 32, "man_vampir": 32, "man_vampire_dark_skin_ton": 32, "man_vampire_light_skin_ton": 32, "man_vampire_medium_dark_skin_ton": 32, "man_vampire_medium_light_skin_ton": 32, "man_vampire_medium_skin_ton": 32, "man_vampire_tone1": 32, "man_vampire_tone2": 32, "man_vampire_tone3": 32, "man_vampire_tone4": 32, "man_vampire_tone5": 32, "man_walk": 32, "man_walking_dark_skin_ton": 32, "man_walking_light_skin_ton": 32, "man_walking_medium_dark_skin_ton": 32, "man_walking_medium_light_skin_ton": 32, "man_walking_medium_skin_ton": 32, "man_walking_tone1": 32, "man_walking_tone2": 32, "man_walking_tone3": 32, "man_walking_tone4": 32, "man_walking_tone5": 32, "man_wearing_turban": 32, "man_wearing_turban_dark_skin_ton": 32, "man_wearing_turban_light_skin_ton": 32, "man_wearing_turban_medium_dark_skin_ton": 32, "man_wearing_turban_medium_light_skin_ton": 32, "man_wearing_turban_medium_skin_ton": 32, "man_wearing_turban_tone1": 32, "man_wearing_turban_tone2": 32, "man_wearing_turban_tone3": 32, "man_wearing_turban_tone4": 32, "man_wearing_turban_tone5": 32, "man_white_hair": 32, "man_white_haired_dark_skin_ton": 32, "man_white_haired_light_skin_ton": 32, "man_white_haired_medium_dark_skin_ton": 32, "man_white_haired_medium_light_skin_ton": 32, "man_white_haired_medium_skin_ton": 32, "man_white_haired_tone1": 32, "man_white_haired_tone2": 32, "man_white_haired_tone3": 32, "man_white_haired_tone4": 32, "man_white_haired_tone5": 32, "man_with_chinese_cap": 32, "man_with_chinese_cap_tone1": 32, "man_with_chinese_cap_tone2": 32, "man_with_chinese_cap_tone3": 32, "man_with_chinese_cap_tone4": 32, "man_with_chinese_cap_tone5": 32, "man_with_gua_pi_mao": 32, "man_with_gua_pi_mao_tone1": 32, "man_with_gua_pi_mao_tone2": 32, "man_with_gua_pi_mao_tone3": 32, "man_with_gua_pi_mao_tone4": 32, "man_with_gua_pi_mao_tone5": 32, "man_with_probing_can": 32, "man_with_probing_cane_dark_skin_ton": 32, "man_with_probing_cane_light_skin_ton": 32, "man_with_probing_cane_medium_dark_skin_ton": 32, "man_with_probing_cane_medium_light_skin_ton": 32, "man_with_probing_cane_medium_skin_ton": 32, "man_with_probing_cane_tone1": 32, "man_with_probing_cane_tone2": 32, "man_with_probing_cane_tone3": 32, "man_with_probing_cane_tone4": 32, "man_with_probing_cane_tone5": 32, "man_with_turban": 32, "man_with_turban_tone1": 32, "man_with_turban_tone2": 32, "man_with_turban_tone3": 32, "man_with_turban_tone4": 32, "man_with_turban_tone5": 32, "man_with_veil": 32, "man_with_veil_dark_skin_ton": 32, "man_with_veil_light_skin_ton": 32, "man_with_veil_medium_dark_skin_ton": 32, "man_with_veil_medium_light_skin_ton": 32, "man_with_veil_medium_skin_ton": 32, "man_with_veil_tone1": 32, "man_with_veil_tone2": 32, "man_with_veil_tone3": 32, "man_with_veil_tone4": 32, "man_with_veil_tone5": 32, "man_zombi": 32, "mango": 32, "mans_sho": 32, "mantelpiece_clock": 32, "mantlepiece_clock": 32, "manual_wheelchair": 32, "maple_leaf": 32, "marshall_island": 32, "martial_arts_uniform": 32, "martiniqu": 32, "mask": [32, 191, 262, 414, 829, 880, 881, 892, 975, 1004, 1006], "massage_man": 32, "massage_tone1": 32, "massage_tone2": 32, "massage_tone3": 32, "massage_tone4": 32, "massage_tone5": 32, "massage_woman": 32, "mate": [32, 256, 885], "mauritania": 32, "mauritiu": 32, "mayott": 32, "mc": [32, 173, 288, 474], "md": [32, 154, 385, 834], "meat_on_bon": 32, "mechanic_dark_skin_ton": 32, "mechanic_light_skin_ton": 32, "mechanic_medium_dark_skin_ton": 32, "mechanic_medium_light_skin_ton": 32, "mechanic_medium_skin_ton": 32, "mechanic_tone1": 32, "mechanic_tone2": 32, "mechanic_tone3": 32, "mechanic_tone4": 32, "mechanic_tone5": 32, "mechanical_arm": 32, "mechanical_leg": 32, "medal": 32, "medal_militari": 32, "medal_sport": 32, "medical_symbol": 32, "mega": [32, 1028], "melon": 32, "memo": 32, "men_holding_hands_dark_skin_ton": 32, "men_holding_hands_dark_skin_tone_light_skin_ton": 32, "men_holding_hands_dark_skin_tone_medium_dark_skin_ton": 32, "men_holding_hands_dark_skin_tone_medium_light_skin_ton": 32, "men_holding_hands_dark_skin_tone_medium_skin_ton": 32, "men_holding_hands_light_skin_ton": 32, "men_holding_hands_light_skin_tone_dark_skin_ton": 32, "men_holding_hands_light_skin_tone_medium_dark_skin_ton": 32, "men_holding_hands_light_skin_tone_medium_light_skin_ton": 32, "men_holding_hands_light_skin_tone_medium_skin_ton": 32, "men_holding_hands_medium_dark_skin_ton": 32, "men_holding_hands_medium_dark_skin_tone_dark_skin_ton": 32, "men_holding_hands_medium_dark_skin_tone_light_skin_ton": 32, "men_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 32, "men_holding_hands_medium_dark_skin_tone_medium_skin_ton": 32, "men_holding_hands_medium_light_skin_ton": 32, "men_holding_hands_medium_light_skin_tone_dark_skin_ton": 32, "men_holding_hands_medium_light_skin_tone_light_skin_ton": 32, "men_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 32, "men_holding_hands_medium_light_skin_tone_medium_skin_ton": 32, "men_holding_hands_medium_skin_ton": 32, "men_holding_hands_medium_skin_tone_dark_skin_ton": 32, "men_holding_hands_medium_skin_tone_light_skin_ton": 32, "men_holding_hands_medium_skin_tone_medium_dark_skin_ton": 32, "men_holding_hands_medium_skin_tone_medium_light_skin_ton": 32, "men_holding_hands_tone1": 32, "men_holding_hands_tone1_tone2": 32, "men_holding_hands_tone1_tone3": 32, "men_holding_hands_tone1_tone4": 32, "men_holding_hands_tone1_tone5": 32, "men_holding_hands_tone2": 32, "men_holding_hands_tone2_tone1": 32, "men_holding_hands_tone2_tone3": 32, "men_holding_hands_tone2_tone4": 32, "men_holding_hands_tone2_tone5": 32, "men_holding_hands_tone3": 32, "men_holding_hands_tone3_tone1": 32, "men_holding_hands_tone3_tone2": 32, "men_holding_hands_tone3_tone4": 32, "men_holding_hands_tone3_tone5": 32, "men_holding_hands_tone4": 32, "men_holding_hands_tone4_tone1": 32, "men_holding_hands_tone4_tone2": 32, "men_holding_hands_tone4_tone3": 32, "men_holding_hands_tone4_tone5": 32, "men_holding_hands_tone5": 32, "men_holding_hands_tone5_tone1": 32, "men_holding_hands_tone5_tone2": 32, "men_holding_hands_tone5_tone3": 32, "men_holding_hands_tone5_tone4": 32, "men_with_bunny_ears_parti": 32, "men_wrestl": 32, "mending_heart": 32, "menorah": 32, "men": [32, 412, 468, 591], "mermaid": 32, "mermaid_dark_skin_ton": 32, "mermaid_light_skin_ton": 32, "mermaid_medium_dark_skin_ton": 32, "mermaid_medium_light_skin_ton": 32, "mermaid_medium_skin_ton": 32, "mermaid_tone1": 32, "mermaid_tone2": 32, "mermaid_tone3": 32, "mermaid_tone4": 32, "mermaid_tone5": 32, "merman": 32, "merman_dark_skin_ton": 32, "merman_light_skin_ton": 32, "merman_medium_dark_skin_ton": 32, "merman_medium_light_skin_ton": 32, "merman_medium_skin_ton": 32, "merman_tone1": 32, "merman_tone2": 32, "merman_tone3": 32, "merman_tone4": 32, "merman_tone5": 32, "merperson": 32, "merperson_dark_skin_ton": 32, "merperson_light_skin_ton": 32, "merperson_medium_dark_skin_ton": 32, "merperson_medium_light_skin_ton": 32, "merperson_medium_skin_ton": 32, "merperson_tone1": 32, "merperson_tone2": 32, "merperson_tone3": 32, "merperson_tone4": 32, "merperson_tone5": 32, "metal_tone1": 32, "metal_tone2": 32, "metal_tone3": 32, "metal_tone4": 32, "metal_tone5": 32, "metro": 32, "mexico": 32, "mf": [32, 242, 1088], "mg": 32, "mh": 32, "microb": 32, "micronesia": 32, "microphone2": 32, "microphon": [32, 175, 177], "microscop": 32, "middle_finger_tone1": 32, "middle_finger_tone2": 32, "middle_finger_tone3": 32, "middle_finger_tone4": 32, "middle_finger_tone5": 32, "military_helmet": 32, "military_med": 32, "milk": 32, "milk_glass": 32, "milky_wai": 32, "minibu": 32, "minidisc": 32, "mirror": 32, "ml": 32, "mm": [32, 473], "mn": 32, "mo": [32, 582], "mobile_phon": 32, "mobile_phone_off": 32, "moldova": 32, "monaco": 32, "money_mouth": 32, "money_mouth_fac": 32, "money_with_w": 32, "moneybag": 32, "mongolia": 32, "monkei": 32, "monkey_fac": 32, "monorail": 32, "montenegro": 32, "montserrat": 32, "moon": 32, "moon_cak": 32, "morocco": 32, "mortar_board": 32, "mosqu": 32, "mosquito": 32, "mother_christma": 32, "mother_christmas_tone1": 32, "mother_christmas_tone2": 32, "mother_christmas_tone3": 32, "mother_christmas_tone4": 32, "mother_christmas_tone5": 32, "motor_boat": 32, "motor_scoot": 32, "motorbik": 32, "motorboat": 32, "motorcycl": 32, "motorized_wheelchair": 32, "motorwai": 32, "mount_fuji": 32, "mountain": 32, "mountain_bicyclist": 32, "mountain_bicyclist_tone1": 32, "mountain_bicyclist_tone2": 32, "mountain_bicyclist_tone3": 32, "mountain_bicyclist_tone4": 32, "mountain_bicyclist_tone5": 32, "mountain_biking_man": 32, "mountain_biking_woman": 32, "mountain_cablewai": 32, "mountain_railwai": 32, "mountain_snow": 32, "mouse2": 32, "mous": [32, 170, 175, 348, 893, 1069, 1077], "mouse_three_button": 32, "mouse_trap": 32, "movie_camera": 32, "moyai": 32, "mozambiqu": 32, "mp": [32, 38], "mq": [32, 999, 1000], "mr": [32, 128, 239, 250, 258, 262, 1093], "mrs_clau": 32, "mrs_claus_tone1": 32, "mrs_claus_tone2": 32, "mrs_claus_tone3": 32, "mrs_claus_tone4": 32, "mrs_claus_tone5": 32, "mt": [32, 374, 1003, 1004], "mu": [32, 262], "muscle_tone1": 32, "muscle_tone2": 32, "muscle_tone3": 32, "muscle_tone4": 32, "muscle_tone5": 32, "mushroom": 32, "musical_keyboard": 32, "musical_not": 32, "musical_scor": 32, "mute": 32, "mv": [32, 103, 128, 210, 212, 276, 285, 286, 306, 307, 365, 370, 786, 806, 863, 900, 913, 929, 1190], "mw": 32, "mx": 32, "mx_clau": 32, "mx_claus_dark_skin_ton": 32, "mx_claus_light_skin_ton": 32, "mx_claus_medium_dark_skin_ton": 32, "mx_claus_medium_light_skin_ton": 32, "mx_claus_medium_skin_ton": 32, "mx_claus_tone1": 32, "mx_claus_tone2": 32, "mx_claus_tone3": 32, "mx_claus_tone4": 32, "mx_claus_tone5": 32, "myanmar": 32, "mz": 32, "na": [32, 239, 242, 245, 258, 265, 283, 338], "nail_car": 32, "nail_care_tone1": 32, "nail_care_tone2": 32, "nail_care_tone3": 32, "nail_care_tone4": 32, "nail_care_tone5": 32, "name_badg": 32, "namibia": 32, "national_park": 32, "nauru": 32, "nauseated_fac": 32, "nazar_amulet": 32, "nc": [32, 210, 212, 285, 306, 307, 394, 956], "ne": [32, 592, 610, 612, 971], "neckti": 32, "negative_squared_cross_mark": 32, "nepal": 32, "nerd_fac": 32, "nesting_dol": 32, "netherland": [32, 171, 1056], "neutral_fac": 32, "new_caledonia": 32, "new_moon": 32, "new_moon_with_fac": 32, "new_zealand": 32, "newspaper2": 32, "newspap": [32, 43], "newspaper_rol": 32, "next_track": 32, "next_track_button": 32, "nf": [32, 242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344, 950], "ng": [32, 171, 182, 286, 786, 929, 1008, 1010, 1017, 1018, 1019], "ni": 32, "nicaragua": 32, "niger": 32, "nigeria": 32, "night_with_star": 32, "nine": [32, 190, 203, 213, 221, 239, 250, 338, 365], "ninja_dark_skin_ton": 32, "ninja_light_skin_ton": 32, "ninja_medium_dark_skin_ton": 32, "ninja_medium_light_skin_ton": 32, "ninja_medium_skin_ton": 32, "ninja_tone1": 32, "ninja_tone2": 32, "ninja_tone3": 32, "ninja_tone4": 32, "ninja_tone5": 32, "niue": 32, "nl": [32, 394], "no_bel": 32, "no_bicycl": 32, "no_entri": 32, "no_entry_sign": 32, "no_good": 32, "no_good_man": 32, "no_good_tone1": 32, "no_good_tone2": 32, "no_good_tone3": 32, "no_good_tone4": 32, "no_good_tone5": 32, "no_good_woman": 32, "no_mobile_phon": 32, "no_mouth": 32, "no_pedestrian": 32, "no_smok": 32, "non": [32, 82, 128, 129, 144, 146, 152, 166, 172, 173, 180, 197, 210, 232, 250, 258, 262, 267, 286, 295, 297, 304, 326, 428, 450, 468, 484, 487, 538, 581, 583, 590, 592, 595, 603, 607, 608, 647, 662, 697, 703, 744, 748, 749, 764, 771, 785, 786, 819, 825, 838, 849, 870, 873, 875, 915, 940, 941, 949, 967, 982, 986, 993, 1001, 1026, 1030, 1042, 1043, 1066, 1079, 1099, 1116, 1152, 1153, 1158, 1172, 1187], "potable_wat": 32, "norfolk_island": 32, "north_korea": 32, "northern_mariana_island": 32, "norwai": 32, "nose": 32, "nose_tone1": 32, "nose_tone2": 32, "nose_tone3": 32, "nose_tone4": 32, "nose_tone5": 32, "notebook_with_decorative_cov": 32, "notepad_spir": 32, "np": [32, 193, 220, 288, 322, 474, 1134, 1153], "nr": [32, 218, 262, 792], "nu": 32, "nut_and_bolt": 32, "nz": 32, "o2": [32, 462], "ocean": 32, "octagonal_sign": 32, "octopu": 32, "oden": 32, "office_work": 32, "office_worker_dark_skin_ton": 32, "office_worker_light_skin_ton": 32, "office_worker_medium_dark_skin_ton": 32, "office_worker_medium_light_skin_ton": 32, "office_worker_medium_skin_ton": 32, "office_worker_tone1": 32, "office_worker_tone2": 32, "office_worker_tone3": 32, "office_worker_tone4": 32, "office_worker_tone5": 32, "oil": 32, "oil_drum": 32, "ok": [32, 53, 69, 134, 169, 171, 172, 176, 185, 202, 218, 248, 288, 361, 402, 438, 456, 458, 488, 497, 547, 548, 549, 594, 602, 605, 610, 615, 625, 677, 684, 695, 703, 718, 737, 740, 749, 750, 766, 847, 938, 965, 983, 1010, 1021, 1039, 1042, 1055, 1171], "ok_hand_tone1": 32, "ok_hand_tone2": 32, "ok_hand_tone3": 32, "ok_hand_tone4": 32, "ok_hand_tone5": 32, "ok_man": 32, "ok_woman": 32, "ok_woman_tone1": 32, "ok_woman_tone2": 32, "ok_woman_tone3": 32, "ok_woman_tone4": 32, "ok_woman_tone5": 32, "old_kei": 32, "older_adult": 32, "older_adult_dark_skin_ton": 32, "older_adult_light_skin_ton": 32, "older_adult_medium_dark_skin_ton": 32, "older_adult_medium_light_skin_ton": 32, "older_adult_medium_skin_ton": 32, "older_adult_tone1": 32, "older_adult_tone2": 32, "older_adult_tone3": 32, "older_adult_tone4": 32, "older_adult_tone5": 32, "older_man": 32, "older_man_tone1": 32, "older_man_tone2": 32, "older_man_tone3": 32, "older_man_tone4": 32, "older_man_tone5": 32, "older_woman": 32, "older_woman_tone1": 32, "older_woman_tone2": 32, "older_woman_tone3": 32, "older_woman_tone4": 32, "older_woman_tone5": 32, "oliv": [32, 234], "om": [32, 728], "om_symbol": 32, "oman": 32, "oncoming_automobil": 32, "oncoming_bu": 32, "oncoming_police_car": 32, "oncoming_taxi": 32, "one_piece_swimsuit": 32, "onion": 32, "open_file_fold": 32, "open_hand": 32, "open_hands_tone1": 32, "open_hands_tone2": 32, "open_hands_tone3": 32, "open_hands_tone4": 32, "open_hands_tone5": 32, "open_mouth": 32, "open_umbrella": 32, "ophiuchu": 32, "orange_book": 32, "orange_circl": 32, "orange_heart": 32, "orange_squar": 32, "orangutan": 32, "orthodox_cross": 32, "otter": 32, "outbox_trai": 32, "owl": 32, "ox": 32, "oyster": 32, "pa": [32, 239, 245, 255, 258, 438, 622, 624, 625], "paella": 32, "page_facing_up": 32, "page_with_curl": 32, "pager": [32, 925], "paintbrush": 32, "pakistan": 32, "palau": 32, "palestinian_territori": 32, "palm_tre": 32, "palms_up_togeth": 32, "palms_up_together_dark_skin_ton": 32, "palms_up_together_light_skin_ton": 32, "palms_up_together_medium_dark_skin_ton": 32, "palms_up_together_medium_light_skin_ton": 32, "palms_up_together_medium_skin_ton": 32, "palms_up_together_tone1": 32, "palms_up_together_tone2": 32, "palms_up_together_tone3": 32, "palms_up_together_tone4": 32, "palms_up_together_tone5": 32, "panama": 32, "pancak": 32, "panda_fac": 32, "paperclip": 32, "papua_new_guinea": 32, "parachut": 32, "paraguai": 32, "parasol_on_ground": 32, "park": 32, "parrot": 32, "part_alternation_mark": 32, "partly_sunni": 32, "partying_fac": 32, "passenger_ship": 32, "passport_control": 32, "pause_button": 32, "paw_print": 32, "pe": 32, "peac": 32, "peace_symbol": 32, "peach": 32, "peacock": 32, "peanut": 32, "pear": 32, "pen": 32, "pen_ballpoint": 32, "pen_fountain": 32, "pencil2": 32, "pencil": 32, "pensiv": 32, "people_holding_hand": 32, "people_holding_hands_dark_skin_ton": 32, "people_holding_hands_dark_skin_tone_light_skin_ton": 32, "people_holding_hands_dark_skin_tone_medium_dark_skin_ton": 32, "people_holding_hands_dark_skin_tone_medium_light_skin_ton": 32, "people_holding_hands_dark_skin_tone_medium_skin_ton": 32, "people_holding_hands_light_skin_ton": 32, "people_holding_hands_light_skin_tone_dark_skin_ton": 32, "people_holding_hands_light_skin_tone_medium_dark_skin_ton": 32, "people_holding_hands_light_skin_tone_medium_light_skin_ton": 32, "people_holding_hands_light_skin_tone_medium_skin_ton": 32, "people_holding_hands_medium_dark_skin_ton": 32, "people_holding_hands_medium_dark_skin_tone_dark_skin_ton": 32, "people_holding_hands_medium_dark_skin_tone_light_skin_ton": 32, "people_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 32, "people_holding_hands_medium_dark_skin_tone_medium_skin_ton": 32, "people_holding_hands_medium_light_skin_ton": 32, "people_holding_hands_medium_light_skin_tone_dark_skin_ton": 32, "people_holding_hands_medium_light_skin_tone_light_skin_ton": 32, "people_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 32, "people_holding_hands_medium_light_skin_tone_medium_skin_ton": 32, "people_holding_hands_medium_skin_ton": 32, "people_holding_hands_medium_skin_tone_dark_skin_ton": 32, "people_holding_hands_medium_skin_tone_light_skin_ton": 32, "people_holding_hands_medium_skin_tone_medium_dark_skin_ton": 32, "people_holding_hands_medium_skin_tone_medium_light_skin_ton": 32, "people_holding_hands_tone1": 32, "people_holding_hands_tone1_tone2": 32, "people_holding_hands_tone1_tone3": 32, "people_holding_hands_tone1_tone4": 32, "people_holding_hands_tone1_tone5": 32, "people_holding_hands_tone2": 32, "people_holding_hands_tone2_tone1": 32, "people_holding_hands_tone2_tone3": 32, "people_holding_hands_tone2_tone4": 32, "people_holding_hands_tone2_tone5": 32, "people_holding_hands_tone3": 32, "people_holding_hands_tone3_tone1": 32, "people_holding_hands_tone3_tone2": 32, "people_holding_hands_tone3_tone4": 32, "people_holding_hands_tone3_tone5": 32, "people_holding_hands_tone4": 32, "people_holding_hands_tone4_tone1": 32, "people_holding_hands_tone4_tone2": 32, "people_holding_hands_tone4_tone3": 32, "people_holding_hands_tone4_tone5": 32, "people_holding_hands_tone5": 32, "people_holding_hands_tone5_tone1": 32, "people_holding_hands_tone5_tone2": 32, "people_holding_hands_tone5_tone3": 32, "people_holding_hands_tone5_tone4": 32, "people_hug": 32, "people_with_bunny_ears_parti": 32, "people_wrestl": 32, "performing_art": 32, "persever": 32, "person_bald": 32, "person_bik": 32, "person_biking_tone1": 32, "person_biking_tone2": 32, "person_biking_tone3": 32, "person_biking_tone4": 32, "person_biking_tone5": 32, "person_bouncing_bal": 32, "person_bouncing_ball_tone1": 32, "person_bouncing_ball_tone2": 32, "person_bouncing_ball_tone3": 32, "person_bouncing_ball_tone4": 32, "person_bouncing_ball_tone5": 32, "person_bow": 32, "person_bowing_tone1": 32, "person_bowing_tone2": 32, "person_bowing_tone3": 32, "person_bowing_tone4": 32, "person_bowing_tone5": 32, "person_climb": 32, "person_climbing_dark_skin_ton": 32, "person_climbing_light_skin_ton": 32, "person_climbing_medium_dark_skin_ton": 32, "person_climbing_medium_light_skin_ton": 32, "person_climbing_medium_skin_ton": 32, "person_climbing_tone1": 32, "person_climbing_tone2": 32, "person_climbing_tone3": 32, "person_climbing_tone4": 32, "person_climbing_tone5": 32, "person_curly_hair": 32, "person_dark_skin_tone_bald": 32, "person_dark_skin_tone_curly_hair": 32, "person_dark_skin_tone_red_hair": 32, "person_dark_skin_tone_white_hair": 32, "person_doing_cartwheel": 32, "person_doing_cartwheel_tone1": 32, "person_doing_cartwheel_tone2": 32, "person_doing_cartwheel_tone3": 32, "person_doing_cartwheel_tone4": 32, "person_doing_cartwheel_tone5": 32, "person_facepalm": 32, "person_facepalming_tone1": 32, "person_facepalming_tone2": 32, "person_facepalming_tone3": 32, "person_facepalming_tone4": 32, "person_facepalming_tone5": 32, "person_feeding_babi": 32, "person_feeding_baby_dark_skin_ton": 32, "person_feeding_baby_light_skin_ton": 32, "person_feeding_baby_medium_dark_skin_ton": 32, "person_feeding_baby_medium_light_skin_ton": 32, "person_feeding_baby_medium_skin_ton": 32, "person_feeding_baby_tone1": 32, "person_feeding_baby_tone2": 32, "person_feeding_baby_tone3": 32, "person_feeding_baby_tone4": 32, "person_feeding_baby_tone5": 32, "person_fenc": 32, "person_frown": 32, "person_frowning_tone1": 32, "person_frowning_tone2": 32, "person_frowning_tone3": 32, "person_frowning_tone4": 32, "person_frowning_tone5": 32, "person_gesturing_no": 32, "person_gesturing_no_tone1": 32, "person_gesturing_no_tone2": 32, "person_gesturing_no_tone3": 32, "person_gesturing_no_tone4": 32, "person_gesturing_no_tone5": 32, "person_gesturing_ok": 32, "person_gesturing_ok_tone1": 32, "person_gesturing_ok_tone2": 32, "person_gesturing_ok_tone3": 32, "person_gesturing_ok_tone4": 32, "person_gesturing_ok_tone5": 32, "person_getting_haircut": 32, "person_getting_haircut_tone1": 32, "person_getting_haircut_tone2": 32, "person_getting_haircut_tone3": 32, "person_getting_haircut_tone4": 32, "person_getting_haircut_tone5": 32, "person_getting_massag": 32, "person_getting_massage_tone1": 32, "person_getting_massage_tone2": 32, "person_getting_massage_tone3": 32, "person_getting_massage_tone4": 32, "person_getting_massage_tone5": 32, "person_golf": 32, "person_golfing_dark_skin_ton": 32, "person_golfing_light_skin_ton": 32, "person_golfing_medium_dark_skin_ton": 32, "person_golfing_medium_light_skin_ton": 32, "person_golfing_medium_skin_ton": 32, "person_golfing_tone1": 32, "person_golfing_tone2": 32, "person_golfing_tone3": 32, "person_golfing_tone4": 32, "person_golfing_tone5": 32, "person_in_bed_dark_skin_ton": 32, "person_in_bed_light_skin_ton": 32, "person_in_bed_medium_dark_skin_ton": 32, "person_in_bed_medium_light_skin_ton": 32, "person_in_bed_medium_skin_ton": 32, "person_in_bed_tone1": 32, "person_in_bed_tone2": 32, "person_in_bed_tone3": 32, "person_in_bed_tone4": 32, "person_in_bed_tone5": 32, "person_in_lotus_posit": 32, "person_in_lotus_position_dark_skin_ton": 32, "person_in_lotus_position_light_skin_ton": 32, "person_in_lotus_position_medium_dark_skin_ton": 32, "person_in_lotus_position_medium_light_skin_ton": 32, "person_in_lotus_position_medium_skin_ton": 32, "person_in_lotus_position_tone1": 32, "person_in_lotus_position_tone2": 32, "person_in_lotus_position_tone3": 32, "person_in_lotus_position_tone4": 32, "person_in_lotus_position_tone5": 32, "person_in_manual_wheelchair": 32, "person_in_manual_wheelchair_dark_skin_ton": 32, "person_in_manual_wheelchair_light_skin_ton": 32, "person_in_manual_wheelchair_medium_dark_skin_ton": 32, "person_in_manual_wheelchair_medium_light_skin_ton": 32, "person_in_manual_wheelchair_medium_skin_ton": 32, "person_in_manual_wheelchair_tone1": 32, "person_in_manual_wheelchair_tone2": 32, "person_in_manual_wheelchair_tone3": 32, "person_in_manual_wheelchair_tone4": 32, "person_in_manual_wheelchair_tone5": 32, "person_in_motorized_wheelchair": 32, "person_in_motorized_wheelchair_dark_skin_ton": 32, "person_in_motorized_wheelchair_light_skin_ton": 32, "person_in_motorized_wheelchair_medium_dark_skin_ton": 32, "person_in_motorized_wheelchair_medium_light_skin_ton": 32, "person_in_motorized_wheelchair_medium_skin_ton": 32, "person_in_motorized_wheelchair_tone1": 32, "person_in_motorized_wheelchair_tone2": 32, "person_in_motorized_wheelchair_tone3": 32, "person_in_motorized_wheelchair_tone4": 32, "person_in_motorized_wheelchair_tone5": 32, "person_in_steamy_room": 32, "person_in_steamy_room_dark_skin_ton": 32, "person_in_steamy_room_light_skin_ton": 32, "person_in_steamy_room_medium_dark_skin_ton": 32, "person_in_steamy_room_medium_light_skin_ton": 32, "person_in_steamy_room_medium_skin_ton": 32, "person_in_steamy_room_tone1": 32, "person_in_steamy_room_tone2": 32, "person_in_steamy_room_tone3": 32, "person_in_steamy_room_tone4": 32, "person_in_steamy_room_tone5": 32, "person_in_tuxedo": 32, "person_in_tuxedo_tone1": 32, "person_in_tuxedo_tone2": 32, "person_in_tuxedo_tone3": 32, "person_in_tuxedo_tone4": 32, "person_in_tuxedo_tone5": 32, "person_juggl": 32, "person_juggling_tone1": 32, "person_juggling_tone2": 32, "person_juggling_tone3": 32, "person_juggling_tone4": 32, "person_juggling_tone5": 32, "person_kneel": 32, "person_kneeling_dark_skin_ton": 32, "person_kneeling_light_skin_ton": 32, "person_kneeling_medium_dark_skin_ton": 32, "person_kneeling_medium_light_skin_ton": 32, "person_kneeling_medium_skin_ton": 32, "person_kneeling_tone1": 32, "person_kneeling_tone2": 32, "person_kneeling_tone3": 32, "person_kneeling_tone4": 32, "person_kneeling_tone5": 32, "person_lifting_weight": 32, "person_lifting_weights_tone1": 32, "person_lifting_weights_tone2": 32, "person_lifting_weights_tone3": 32, "person_lifting_weights_tone4": 32, "person_lifting_weights_tone5": 32, "person_light_skin_tone_bald": 32, "person_light_skin_tone_curly_hair": 32, "person_light_skin_tone_red_hair": 32, "person_light_skin_tone_white_hair": 32, "person_medium_dark_skin_tone_bald": 32, "person_medium_dark_skin_tone_curly_hair": 32, "person_medium_dark_skin_tone_red_hair": 32, "person_medium_dark_skin_tone_white_hair": 32, "person_medium_light_skin_tone_bald": 32, "person_medium_light_skin_tone_curly_hair": 32, "person_medium_light_skin_tone_red_hair": 32, "person_medium_light_skin_tone_white_hair": 32, "person_medium_skin_tone_bald": 32, "person_medium_skin_tone_curly_hair": 32, "person_medium_skin_tone_red_hair": 32, "person_medium_skin_tone_white_hair": 32, "person_mountain_bik": 32, "person_mountain_biking_tone1": 32, "person_mountain_biking_tone2": 32, "person_mountain_biking_tone3": 32, "person_mountain_biking_tone4": 32, "person_mountain_biking_tone5": 32, "person_playing_handbal": 32, "person_playing_handball_tone1": 32, "person_playing_handball_tone2": 32, "person_playing_handball_tone3": 32, "person_playing_handball_tone4": 32, "person_playing_handball_tone5": 32, "person_playing_water_polo": 32, "person_playing_water_polo_tone1": 32, "person_playing_water_polo_tone2": 32, "person_playing_water_polo_tone3": 32, "person_playing_water_polo_tone4": 32, "person_playing_water_polo_tone5": 32, "person_pout": 32, "person_pouting_tone1": 32, "person_pouting_tone2": 32, "person_pouting_tone3": 32, "person_pouting_tone4": 32, "person_pouting_tone5": 32, "person_raising_hand": 32, "person_raising_hand_tone1": 32, "person_raising_hand_tone2": 32, "person_raising_hand_tone3": 32, "person_raising_hand_tone4": 32, "person_raising_hand_tone5": 32, "person_red_hair": 32, "person_rowing_boat": 32, "person_rowing_boat_tone1": 32, "person_rowing_boat_tone2": 32, "person_rowing_boat_tone3": 32, "person_rowing_boat_tone4": 32, "person_rowing_boat_tone5": 32, "person_run": 32, "person_running_tone1": 32, "person_running_tone2": 32, "person_running_tone3": 32, "person_running_tone4": 32, "person_running_tone5": 32, "person_shrug": 32, "person_shrugging_tone1": 32, "person_shrugging_tone2": 32, "person_shrugging_tone3": 32, "person_shrugging_tone4": 32, "person_shrugging_tone5": 32, "person_stand": 32, "person_standing_dark_skin_ton": 32, "person_standing_light_skin_ton": 32, "person_standing_medium_dark_skin_ton": 32, "person_standing_medium_light_skin_ton": 32, "person_standing_medium_skin_ton": 32, "person_standing_tone1": 32, "person_standing_tone2": 32, "person_standing_tone3": 32, "person_standing_tone4": 32, "person_standing_tone5": 32, "person_surf": 32, "person_surfing_tone1": 32, "person_surfing_tone2": 32, "person_surfing_tone3": 32, "person_surfing_tone4": 32, "person_surfing_tone5": 32, "person_swim": 32, "person_swimming_tone1": 32, "person_swimming_tone2": 32, "person_swimming_tone3": 32, "person_swimming_tone4": 32, "person_swimming_tone5": 32, "person_tipping_hand": 32, "person_tipping_hand_tone1": 32, "person_tipping_hand_tone2": 32, "person_tipping_hand_tone3": 32, "person_tipping_hand_tone4": 32, "person_tipping_hand_tone5": 32, "person_tone1_bald": 32, "person_tone1_curly_hair": 32, "person_tone1_red_hair": 32, "person_tone1_white_hair": 32, "person_tone2_bald": 32, "person_tone2_curly_hair": 32, "person_tone2_red_hair": 32, "person_tone2_white_hair": 32, "person_tone3_bald": 32, "person_tone3_curly_hair": 32, "person_tone3_red_hair": 32, "person_tone3_white_hair": 32, "person_tone4_bald": 32, "person_tone4_curly_hair": 32, "person_tone4_red_hair": 32, "person_tone4_white_hair": 32, "person_tone5_bald": 32, "person_tone5_curly_hair": 32, "person_tone5_red_hair": 32, "person_tone5_white_hair": 32, "person_walk": 32, "person_walking_tone1": 32, "person_walking_tone2": 32, "person_walking_tone3": 32, "person_walking_tone4": 32, "person_walking_tone5": 32, "person_wearing_turban": 32, "person_wearing_turban_tone1": 32, "person_wearing_turban_tone2": 32, "person_wearing_turban_tone3": 32, "person_wearing_turban_tone4": 32, "person_wearing_turban_tone5": 32, "person_white_hair": 32, "person_with_bal": 32, "person_with_ball_tone1": 32, "person_with_ball_tone2": 32, "person_with_ball_tone3": 32, "person_with_ball_tone4": 32, "person_with_ball_tone5": 32, "person_with_blond_hair": 32, "person_with_blond_hair_tone1": 32, "person_with_blond_hair_tone2": 32, "person_with_blond_hair_tone3": 32, "person_with_blond_hair_tone4": 32, "person_with_blond_hair_tone5": 32, "person_with_pouting_fac": 32, "person_with_pouting_face_tone1": 32, "person_with_pouting_face_tone2": 32, "person_with_pouting_face_tone3": 32, "person_with_pouting_face_tone4": 32, "person_with_pouting_face_tone5": 32, "person_with_probing_can": 32, "person_with_probing_cane_dark_skin_ton": 32, "person_with_probing_cane_light_skin_ton": 32, "person_with_probing_cane_medium_dark_skin_ton": 32, "person_with_probing_cane_medium_light_skin_ton": 32, "person_with_probing_cane_medium_skin_ton": 32, "person_with_probing_cane_tone1": 32, "person_with_probing_cane_tone2": 32, "person_with_probing_cane_tone3": 32, "person_with_probing_cane_tone4": 32, "person_with_probing_cane_tone5": 32, "person_with_veil": 32, "person_with_veil_tone1": 32, "person_with_veil_tone2": 32, "person_with_veil_tone3": 32, "person_with_veil_tone4": 32, "person_with_veil_tone5": 32, "peru": 32, "petri_dish": 32, "pf": [32, 173, 766], "pg": [32, 466], "ph": 32, "philippin": 32, "phone": 32, "pick": [32, 82, 163, 173, 180, 231, 476, 549, 989, 1019, 1024], "pickup_truck": 32, "pie": 32, "pig2": 32, "pig_nos": 32, "pill": 32, "pilot": 32, "pilot_dark_skin_ton": 32, "pilot_light_skin_ton": 32, "pilot_medium_dark_skin_ton": 32, "pilot_medium_light_skin_ton": 32, "pilot_medium_skin_ton": 32, "pilot_tone1": 32, "pilot_tone2": 32, "pilot_tone3": 32, "pilot_tone4": 32, "pilot_tone5": 32, "pinched_fing": 32, "pinched_fingers_dark_skin_ton": 32, "pinched_fingers_light_skin_ton": 32, "pinched_fingers_medium_dark_skin_ton": 32, "pinched_fingers_medium_light_skin_ton": 32, "pinched_fingers_medium_skin_ton": 32, "pinched_fingers_tone1": 32, "pinched_fingers_tone2": 32, "pinched_fingers_tone3": 32, "pinched_fingers_tone4": 32, "pinched_fingers_tone5": 32, "pinching_hand": 32, "pinching_hand_dark_skin_ton": 32, "pinching_hand_light_skin_ton": 32, "pinching_hand_medium_dark_skin_ton": 32, "pinching_hand_medium_light_skin_ton": 32, "pinching_hand_medium_skin_ton": 32, "pinching_hand_tone1": 32, "pinching_hand_tone2": 32, "pinching_hand_tone3": 32, "pinching_hand_tone4": 32, "pinching_hand_tone5": 32, "pineappl": [32, 294], "ping_pong": 32, "pirate_flag": 32, "pisc": 32, "pitcairn_island": 32, "pizza": 32, "pi\u00f1ata": 32, "pk": 32, "pl": 32, "placard": 32, "place_of_worship": 32, "plate_with_cutleri": 32, "play_or_pause_button": 32, "play_paus": 32, "pleading_fac": 32, "plunger": 32, "pm": [32, 38, 338], "pn": 32, "point_down": 32, "point_down_tone1": 32, "point_down_tone2": 32, "point_down_tone3": 32, "point_down_tone4": 32, "point_down_tone5": 32, "point_left": 32, "point_left_tone1": 32, "point_left_tone2": 32, "point_left_tone3": 32, "point_left_tone4": 32, "point_left_tone5": 32, "point_right": 32, "point_right_tone1": 32, "point_right_tone2": 32, "point_right_tone3": 32, "point_right_tone4": 32, "point_right_tone5": 32, "point_up_2": 32, "point_up_2_tone1": 32, "point_up_2_tone2": 32, "point_up_2_tone3": 32, "point_up_2_tone4": 32, "point_up_2_tone5": 32, "point_up_tone1": 32, "point_up_tone2": 32, "point_up_tone3": 32, "point_up_tone4": 32, "point_up_tone5": 32, "poland": 32, "polar_bear": 32, "police_car": 32, "police_offic": 32, "police_officer_tone1": 32, "police_officer_tone2": 32, "police_officer_tone3": 32, "police_officer_tone4": 32, "police_officer_tone5": 32, "policeman": 32, "policewoman": 32, "poo": 32, "poodl": 32, "poop": 32, "popcorn": 32, "portug": 32, "post_offic": 32, "postal_horn": 32, "postbox": 32, "potato": 32, "potted_pl": 32, "pouch": 32, "poultry_leg": 32, "pound": [32, 36], "pound_symbol": 32, "pouting_cat": 32, "pouting_man": 32, "pouting_woman": 32, "pr": [32, 35, 258, 273], "prai": 32, "pray_tone1": 32, "pray_tone2": 32, "pray_tone3": 32, "pray_tone4": 32, "pray_tone5": 32, "prayer_bead": 32, "pregnant_woman": 32, "pregnant_woman_tone1": 32, "pregnant_woman_tone2": 32, "pregnant_woman_tone3": 32, "pregnant_woman_tone4": 32, "pregnant_woman_tone5": 32, "pretzel": 32, "previous_track": 32, "previous_track_button": 32, "princ": 32, "prince_tone1": 32, "prince_tone2": 32, "prince_tone3": 32, "prince_tone4": 32, "prince_tone5": 32, "princess": 32, "princess_tone1": 32, "princess_tone2": 32, "princess_tone3": 32, "princess_tone4": 32, "princess_tone5": 32, "printer": 32, "probing_can": 32, "projector": 32, "p": [32, 38, 62, 118, 121, 128, 146, 166, 170, 171, 175, 176, 182, 198, 210, 212, 213, 229, 242, 258, 262, 288, 290, 348, 398, 432, 438, 441, 442, 445, 446, 450, 521, 546, 547, 549, 550, 592, 594, 597, 602, 603, 604, 605, 606, 608, 610, 611, 625, 633, 693, 696, 697, 700, 702, 705, 714, 715, 716, 718, 720, 721, 724, 725, 726, 732, 734, 735, 744, 748, 753, 764, 781, 784, 797, 833, 852, 860, 861, 870, 893, 895, 912, 915, 922, 932, 940, 949, 956, 967, 976, 991, 1004, 1019, 1026, 1028, 1088, 1166, 1190], "pt": [32, 752, 864, 991], "pud": 32, "puerto_rico": 32, "punch": 32, "punch_tone1": 32, "punch_tone2": 32, "punch_tone3": 32, "punch_tone4": 32, "punch_tone5": 32, "purple_circl": 32, "purple_heart": 32, "purple_squar": 32, "purs": 32, "pushpin": 32, "put_litter_in_its_plac": 32, "pw": 32, "qa": 32, "qatar": 32, "rabbit2": 32, "rabbit": 32, "raccoon": 32, "race_car": 32, "racehors": 32, "racing_car": 32, "racing_motorcycl": 32, "radio": 32, "radio_button": 32, "radioact": 32, "radioactive_sign": 32, "rage": 32, "railroad_track": 32, "railway_car": 32, "railway_track": 32, "rainbow": 32, "rainbow_flag": 32, "raised_back_of_hand": 32, "raised_back_of_hand_tone1": 32, "raised_back_of_hand_tone2": 32, "raised_back_of_hand_tone3": 32, "raised_back_of_hand_tone4": 32, "raised_back_of_hand_tone5": 32, "raised_hand": 32, "raised_hand_tone1": 32, "raised_hand_tone2": 32, "raised_hand_tone3": 32, "raised_hand_tone4": 32, "raised_hand_tone5": 32, "raised_hand_with_fingers_splai": 32, "raised_hand_with_fingers_splayed_tone1": 32, "raised_hand_with_fingers_splayed_tone2": 32, "raised_hand_with_fingers_splayed_tone3": 32, "raised_hand_with_fingers_splayed_tone4": 32, "raised_hand_with_fingers_splayed_tone5": 32, "raised_hand_with_part_between_middle_and_ring_fing": 32, "raised_hand_with_part_between_middle_and_ring_fingers_tone1": 32, "raised_hand_with_part_between_middle_and_ring_fingers_tone2": 32, "raised_hand_with_part_between_middle_and_ring_fingers_tone3": 32, "raised_hand_with_part_between_middle_and_ring_fingers_tone4": 32, "raised_hand_with_part_between_middle_and_ring_fingers_tone5": 32, "raised_hands_tone1": 32, "raised_hands_tone2": 32, "raised_hands_tone3": 32, "raised_hands_tone4": 32, "raised_hands_tone5": 32, "raising_hand": 32, "raising_hand_man": 32, "raising_hand_tone1": 32, "raising_hand_tone2": 32, "raising_hand_tone3": 32, "raising_hand_tone4": 32, "raising_hand_tone5": 32, "raising_hand_woman": 32, "ram": [32, 172, 173, 177, 295, 833, 869, 871, 955], "ramen": 32, "rat": 32, "razor": 32, "re": [32, 38, 62, 126, 133, 135, 172, 177, 209, 218, 221, 222, 232, 235, 242, 243, 245, 250, 252, 258, 262, 268, 270, 271, 280, 283, 287, 303, 304, 310, 332, 338, 344, 365, 370, 428, 474, 475, 484, 492, 517, 547, 594, 600, 718, 740, 802, 838, 847, 852, 894, 983, 1004, 1019, 1023, 1028, 1033, 1052, 1075, 1126, 1131, 1153], "receipt": 32, "record_button": 32, "recycl": 32, "red_car": 32, "red_circl": 32, "red_envelop": 32, "red_hair": 32, "red_squar": 32, "regional_indicator_a": 32, "regional_indicator_b": 32, "regional_indicator_c": 32, "regional_indicator_d": 32, "regional_indicator_": 32, "regional_indicator_f": 32, "regional_indicator_g": 32, "regional_indicator_h": 32, "regional_indicator_i": 32, "regional_indicator_j": 32, "regional_indicator_k": 32, "regional_indicator_l": 32, "regional_indicator_m": 32, "regional_indicator_n": 32, "regional_indicator_o": 32, "regional_indicator_p": 32, "regional_indicator_q": 32, "regional_indicator_r": 32, "regional_indicator_t": 32, "regional_indicator_u": 32, "regional_indicator_v": 32, "regional_indicator_w": 32, "regional_indicator_x": 32, "regional_indicator_z": 32, "regist": [32, 36, 38, 170, 180, 188, 213, 217, 245, 258, 304, 351, 414, 448, 499, 527, 548, 550, 557, 789, 796, 804, 811, 817, 829, 920, 937, 953, 957, 1058, 1147], "relax": 32, "reliev": [32, 57], "reminder_ribbon": 32, "repeat": [32, 43, 104, 128, 146, 160, 176, 231, 286, 372, 462, 474, 610, 786, 833, 863, 893, 897, 901, 904, 907, 912, 913, 929, 942, 969, 1066], "repeat_on": 32, "rescue_worker_helmet": 32, "restroom": 32, "reunion": 32, "reversed_hand_with_middle_finger_extend": 32, "reversed_hand_with_middle_finger_extended_tone1": 32, "reversed_hand_with_middle_finger_extended_tone2": 32, "reversed_hand_with_middle_finger_extended_tone3": 32, "reversed_hand_with_middle_finger_extended_tone4": 32, "reversed_hand_with_middle_finger_extended_tone5": 32, "revolving_heart": 32, "rewind": [32, 357, 740], "rhino": 32, "rhinocero": 32, "ribbon": 32, "rice": 32, "rice_bal": 32, "rice_crack": 32, "rice_scen": 32, "right_anger_bubbl": 32, "right_facing_fist": 32, "right_facing_fist_tone1": 32, "right_facing_fist_tone2": 32, "right_facing_fist_tone3": 32, "right_facing_fist_tone4": 32, "right_facing_fist_tone5": 32, "right_fist": 32, "right_fist_tone1": 32, "right_fist_tone2": 32, "right_fist_tone3": 32, "right_fist_tone4": 32, "right_fist_tone5": 32, "ring": [32, 35, 38, 893], "ringed_planet": 32, "ro": 32, "robot": [32, 258], "robot_fac": 32, "rock": [32, 299, 472, 1023, 1025, 1160], "rocket": [32, 177], "rofl": 32, "roll_ey": 32, "roll_of_pap": 32, "rolled_up_newspap": 32, "roller_coast": 32, "roller_sk": 32, "rolling_on_the_floor_laugh": 32, "romania": 32, "rooster": 32, "rosett": 32, "rotating_light": 32, "round_pushpin": 32, "rowboat": 32, "rowboat_tone1": 32, "rowboat_tone2": 32, "rowboat_tone3": 32, "rowboat_tone4": 32, "rowboat_tone5": 32, "rowing_man": 32, "rowing_woman": 32, "ru": 32, "rugby_footbal": 32, "runner": [32, 44, 1171, 1202], "runner_tone1": 32, "runner_tone2": 32, "runner_tone3": 32, "runner_tone4": 32, "runner_tone5": 32, "running_man": 32, "running_shirt_with_sash": 32, "running_woman": 32, "russia": [32, 1144], "rw": [32, 60, 62, 171, 172, 181, 189, 258, 268, 481, 784, 789, 797, 864, 875, 878, 889, 892, 912, 915, 930, 937, 938, 939, 941, 950, 961, 964, 965, 973, 1001, 1007, 1008, 1009, 1019, 1021, 1022, 1058, 1086], "rwanda": 32, "safety_pin": 32, "safety_vest": 32, "sagittariu": 32, "sailboat": 32, "saint_martin": 32, "sake": 32, "salad": 32, "salt": [32, 889], "samoa": 32, "san_marino": 32, "sandal": 32, "sandwich": 32, "santa": 32, "santa_tone1": 32, "santa_tone2": 32, "santa_tone3": 32, "santa_tone4": 32, "santa_tone5": 32, "sao_tome_princip": 32, "sari": 32, "satellit": 32, "satellite_orbit": 32, "saudi": 32, "saudi_arabia": 32, "saudiarabia": 32, "sauropod": 32, "saxophon": 32, "sb": [32, 287], "sc": [32, 35], "scale": [32, 82, 202, 248, 262, 462, 937, 1010, 1023], "scarf": 32, "school": [32, 262, 533, 568, 1153, 1185], "school_satchel": 32, "scientist": [32, 202, 1055, 1136, 1137, 1138, 1145], "scientist_dark_skin_ton": 32, "scientist_light_skin_ton": 32, "scientist_medium_dark_skin_ton": 32, "scientist_medium_light_skin_ton": 32, "scientist_medium_skin_ton": 32, "scientist_tone1": 32, "scientist_tone2": 32, "scientist_tone3": 32, "scientist_tone4": 32, "scientist_tone5": 32, "scissor": 32, "scooter": 32, "scorpion": 32, "scorpiu": 32, "scotland": 32, "scream": [32, 231, 893], "scream_cat": 32, "screwdriv": 32, "scroll": [32, 176, 533], "sd": [32, 242, 258, 262, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344, 833], "se": [32, 597], "seal": 32, "seat": 32, "second_plac": 32, "second_place_med": 32, "secret": [32, 677, 698, 946, 1030, 1142], "see_no_evil": 32, "seedl": 32, "selfi": 32, "selfie_tone1": 32, "selfie_tone2": 32, "selfie_tone3": 32, "selfie_tone4": 32, "selfie_tone5": 32, "seneg": 32, "serbia": 32, "service_dog": 32, "seven": [32, 36, 88, 190, 203, 213, 221, 250, 338, 344, 365, 1098, 1109], "sewing_needl": 32, "seychel": 32, "sg": 32, "sh": [32, 60, 177, 181, 270, 806, 860, 861, 878, 939, 961, 971, 1118], "shaking_hand": 32, "shaking_hands_tone1": 32, "shaking_hands_tone2": 32, "shaking_hands_tone3": 32, "shaking_hands_tone4": 32, "shaking_hands_tone5": 32, "shallow_pan_of_food": 32, "shamrock": 32, "shark": 32, "shaved_ic": 32, "sheep": 32, "shelled_peanut": 32, "shield": [32, 170], "shinto_shrin": 32, "ship": [32, 175], "shirt": [32, 43, 167], "shit": [32, 229], "shop": [32, 294], "shopping_bag": 32, "shopping_cart": 32, "shopping_trollei": 32, "shower": 32, "shrimp": 32, "shrug": 32, "shrug_tone1": 32, "shrug_tone2": 32, "shrug_tone3": 32, "shrug_tone4": 32, "shrug_tone5": 32, "shushing_fac": 32, "si": 32, "sick": [32, 496], "sierra_leon": 32, "sign_of_the_horn": 32, "sign_of_the_horns_tone1": 32, "sign_of_the_horns_tone2": 32, "sign_of_the_horns_tone3": 32, "sign_of_the_horns_tone4": 32, "sign_of_the_horns_tone5": 32, "signal_strength": 32, "singapor": 32, "singer": 32, "singer_dark_skin_ton": 32, "singer_light_skin_ton": 32, "singer_medium_dark_skin_ton": 32, "singer_medium_light_skin_ton": 32, "singer_medium_skin_ton": 32, "singer_tone1": 32, "singer_tone2": 32, "singer_tone3": 32, "singer_tone4": 32, "singer_tone5": 32, "sint_maarten": 32, "six": [32, 190, 203, 213, 221, 239, 338, 344, 365, 1066], "six_pointed_star": 32, "sj": 32, "sk": 32, "skateboard": 32, "skeleton": [32, 173, 185, 475, 862], "ski": 32, "skier": 32, "skull": 32, "skull_and_crossbon": 32, "skull_crossbon": 32, "skunk": 32, "sl": [32, 357, 991], "sled": 32, "sleeping_accommod": 32, "sleeping_b": 32, "sleepi": 32, "sleuth_or_spi": 32, "sleuth_or_spy_tone1": 32, "sleuth_or_spy_tone2": 32, "sleuth_or_spy_tone3": 32, "sleuth_or_spy_tone4": 32, "sleuth_or_spy_tone5": 32, "slight_frown": 32, "slight_smil": 32, "slightly_frowning_fac": 32, "slightly_smiling_fac": 32, "slot_machin": 32, "sloth": 32, "slovakia": 32, "slovenia": [32, 237], "sm": 32, "small_airplan": 32, "small_blue_diamond": 32, "small_orange_diamond": 32, "small_red_triangl": 32, "small_red_triangle_down": 32, "smile": [32, 35], "smile_cat": 32, "smilei": [32, 62], "smiley_cat": 32, "smiling_face_with_3_heart": 32, "smiling_face_with_tear": 32, "smiling_imp": 32, "smirk": 32, "smirk_cat": 32, "smoke": 32, "sn": 32, "snail": 32, "snake": 32, "sneez": 32, "sneezing_fac": 32, "snow_capped_mountain": 32, "snowboard": 32, "snowboarder_dark_skin_ton": 32, "snowboarder_light_skin_ton": 32, "snowboarder_medium_dark_skin_ton": 32, "snowboarder_medium_light_skin_ton": 32, "snowboarder_medium_skin_ton": 32, "snowboarder_tone1": 32, "snowboarder_tone2": 32, "snowboarder_tone3": 32, "snowboarder_tone4": 32, "snowboarder_tone5": 32, "snowflak": 32, "snowman2": 32, "snowman": 32, "snowman_with_snow": 32, "sob": 32, "soccer": 32, "sock": 32, "softbal": 32, "solomon_island": 32, "somalia": 32, "soon": [32, 171, 172, 177, 597, 684, 833, 939, 991, 1005, 1147], "sound": [32, 61, 63, 169, 173, 176, 177, 246, 754, 875, 930, 938, 939, 1165], "south_africa": 32, "south_georgia_south_sandwich_island": 32, "south_sudan": 32, "space_invad": 32, "spade": [32, 38], "spaghetti": [32, 133, 462, 473], "spain": 32, "sparkl": 32, "sparkler": 32, "sparkling_heart": 32, "speak_no_evil": 32, "speaker": [32, 771], "speaking_head": 32, "speaking_head_in_silhouett": 32, "speech_balloon": 32, "speech_left": 32, "speedboat": 32, "spider": 32, "spider_web": 32, "spiral_calendar": 32, "spiral_calendar_pad": 32, "spiral_note_pad": 32, "spiral_notepad": 32, "spong": 32, "spoon": 32, "sports_med": 32, "spy": 32, "spy_tone1": 32, "spy_tone2": 32, "spy_tone3": 32, "spy_tone4": 32, "spy_tone5": 32, "squeeze_bottl": 32, "squid": 32, "sr": [32, 242, 1088], "sri_lanka": 32, "st": [32, 236, 474, 1001, 1003, 1004], "st_barthelemi": 32, "st_helena": 32, "st_kitts_nevi": 32, "st_lucia": 32, "st_pierre_miquelon": 32, "st_vincent_grenadin": 32, "stadium": 32, "star2": 32, "star": [32, 38, 634, 939, 1021], "star_and_cresc": 32, "star_of_david": 32, "star_struck": 32, "station": 32, "statue_of_liberti": 32, "steam_locomot": 32, "stethoscop": 32, "stew": 32, "stop_button": 32, "stop_sign": 32, "stopwatch": 32, "straight_rul": 32, "strawberri": 32, "stuck_out_tongu": 32, "stuck_out_tongue_closed_ey": 32, "stuck_out_tongue_winking_ey": 32, "student": [32, 105, 110, 128, 146, 177, 270, 350, 351, 356, 357, 365, 1031, 1166], "student_dark_skin_ton": 32, "student_light_skin_ton": 32, "student_medium_dark_skin_ton": 32, "student_medium_light_skin_ton": 32, "student_medium_skin_ton": 32, "student_tone1": 32, "student_tone2": 32, "student_tone3": 32, "student_tone4": 32, "student_tone5": 32, "studio_microphon": 32, "stuffed_flatbread": 32, "stuffed_pita": 32, "sudan": 32, "sun_behind_large_cloud": 32, "sun_behind_rain_cloud": 32, "sun_behind_small_cloud": 32, "sun_with_fac": 32, "sunflow": 32, "sunni": [32, 113, 289, 292, 538, 549, 555, 557, 590, 786, 986, 1030], "sunris": 32, "sunrise_over_mountain": 32, "superhero": 32, "superhero_dark_skin_ton": 32, "superhero_light_skin_ton": 32, "superhero_medium_dark_skin_ton": 32, "superhero_medium_light_skin_ton": 32, "superhero_medium_skin_ton": 32, "superhero_tone1": 32, "superhero_tone2": 32, "superhero_tone3": 32, "superhero_tone4": 32, "superhero_tone5": 32, "supervillain": 32, "supervillain_dark_skin_ton": 32, "supervillain_light_skin_ton": 32, "supervillain_medium_dark_skin_ton": 32, "supervillain_medium_light_skin_ton": 32, "supervillain_medium_skin_ton": 32, "supervillain_tone1": 32, "supervillain_tone2": 32, "supervillain_tone3": 32, "supervillain_tone4": 32, "supervillain_tone5": 32, "surfer": 32, "surfer_tone1": 32, "surfer_tone2": 32, "surfer_tone3": 32, "surfer_tone4": 32, "surfer_tone5": 32, "surfing_man": 32, "surfing_woman": 32, "surinam": 32, "sushi": 32, "suspension_railwai": 32, "sv": [32, 516, 517], "swan": 32, "swaziland": 32, "sweat": 32, "sweat_drop": 32, "sweat_smil": 32, "sweden": 32, "sweet_potato": 32, "swimmer": 32, "swimmer_tone1": 32, "swimmer_tone2": 32, "swimmer_tone3": 32, "swimmer_tone4": 32, "swimmer_tone5": 32, "swimming_man": 32, "swimming_woman": 32, "switzerland": 32, "sx": 32, "symbol": [32, 33, 38, 128, 181, 210, 231, 239, 245, 248, 255, 258, 276, 285, 286, 306, 307, 403, 418, 427, 434, 440, 444, 447, 451, 454, 455, 460, 464, 469, 470, 692, 730, 736, 783, 784, 785, 786, 789, 808, 811, 833, 863, 878, 893, 913, 915, 929, 938, 1038], "synagogu": 32, "syria": 32, "syring": 32, "sz": [32, 172, 175], "t_rex": 32, "ta": 32, "table_tenni": 32, "taco": 32, "tada": 32, "taiwan": 32, "tajikistan": 32, "takeout_box": 32, "tamal": 32, "tanabata_tre": 32, "tangerin": 32, "tanzania": 32, "tauru": 32, "taxi": 32, "tc": 32, "td": [32, 234], "tea": 32, "teacher": [32, 110, 175, 478, 480, 860, 861, 1019], "teacher_dark_skin_ton": 32, "teacher_light_skin_ton": 32, "teacher_medium_dark_skin_ton": 32, "teacher_medium_light_skin_ton": 32, "teacher_medium_skin_ton": 32, "teacher_tone1": 32, "teacher_tone2": 32, "teacher_tone3": 32, "teacher_tone4": 32, "teacher_tone5": 32, "teapot": 32, "technologist": 32, "technologist_dark_skin_ton": 32, "technologist_light_skin_ton": 32, "technologist_medium_dark_skin_ton": 32, "technologist_medium_light_skin_ton": 32, "technologist_medium_skin_ton": 32, "technologist_tone1": 32, "technologist_tone2": 32, "technologist_tone3": 32, "technologist_tone4": 32, "technologist_tone5": 32, "teddy_bear": 32, "telephon": 32, "telephone_receiv": 32, "telescop": 32, "ten": [32, 172, 193, 213, 252, 258, 344, 924], "tenni": 32, "tent": 32, "test_tub": 32, "tf": [32, 265, 859, 1028], "tg": 32, "th": [32, 206, 234, 396, 438, 547, 625, 1068, 1077], "thailand": 32, "thermomet": [32, 73, 86, 88, 89, 197, 206, 258, 278, 369, 371, 372, 374, 489, 496, 499, 501, 510, 511, 524, 538, 578, 579, 587, 590, 665, 668, 786, 939], "thermometer_fac": 32, "thinking_fac": 32, "third_plac": 32, "third_place_med": 32, "thong_sand": 32, "thought_balloon": 32, "thread": [32, 61, 63, 69, 87, 93, 95, 175, 187, 188, 197, 202, 206, 217, 239, 245, 246, 248, 255, 258, 273, 274, 275, 277, 286, 295, 297, 321, 334, 335, 375, 378, 379, 380, 468, 497, 514, 528, 591, 732, 740, 749, 751, 758, 760, 763, 764, 785, 786, 815, 825, 831, 845, 853, 929, 951, 970, 978, 980, 981, 983, 985, 989, 990, 992, 1003, 1004, 1005, 1041, 1042, 1131, 1173, 1183, 1184, 1185, 1187, 1199, 1200, 1201], "three_button_mous": 32, "thumbdown": 32, "thumbdown_tone1": 32, "thumbdown_tone2": 32, "thumbdown_tone3": 32, "thumbdown_tone4": 32, "thumbdown_tone5": 32, "thumbsdown_tone1": 32, "thumbsdown_tone2": 32, "thumbsdown_tone3": 32, "thumbsdown_tone4": 32, "thumbsdown_tone5": 32, "thumbsup_tone1": 32, "thumbsup_tone2": 32, "thumbsup_tone3": 32, "thumbsup_tone4": 32, "thumbsup_tone5": 32, "thumbup": 32, "thumbup_tone1": 32, "thumbup_tone2": 32, "thumbup_tone3": 32, "thumbup_tone4": 32, "thumbup_tone5": 32, "thunder_cloud_and_rain": 32, "thunder_cloud_rain": 32, "ticket": 32, "tiger2": 32, "tiger": 32, "timer": [32, 61, 63, 69, 128, 140, 194, 295, 453, 765, 786, 810, 835, 842, 848, 851, 852, 854, 866, 869, 929, 938, 954, 958, 970, 989, 995, 997, 1005, 1198, 1201], "timer_clock": 32, "timor_lest": 32, "tipping_hand_man": 32, "tipping_hand_woman": 32, "tired_fac": 32, "tj": 32, "tk": 32, "tl": [32, 175], "tm": 32, "tn": [32, 210], "togo": 32, "toilet": [32, 248, 568, 823, 1041], "tokelau": 32, "tokyo_tow": 32, "tomato": 32, "tone1": 32, "tone2": 32, "tone3": 32, "tone4": 32, "tone5": 32, "tonga": 32, "tongu": [32, 1184], "toolbox": [32, 191], "tooth": 32, "toothbrush": 32, "tophat": 32, "tornado": 32, "tr": [32, 234], "track_next": 32, "track_previ": 32, "trackbal": 32, "tractor": 32, "traffic_light": 32, "train2": 32, "tram": 32, "transgender_flag": 32, "transgender_symbol": 32, "triangular_flag_on_post": 32, "triangular_rul": 32, "trident": 32, "trinidad_tobago": 32, "tristan_da_cunha": 32, "triumph": 32, "trolleybu": 32, "trophi": 32, "tropical_drink": 32, "tropical_fish": 32, "truck": 32, "trumpet": 32, "tt": 32, "tulip": 32, "tumbler_glass": 32, "tunisia": 32, "turkei": 32, "turkmenistan": 32, "turks_caicos_island": 32, "turtl": 32, "tuvalu": 32, "tuxedo_tone1": 32, "tuxedo_tone2": 32, "tuxedo_tone3": 32, "tuxedo_tone4": 32, "tuxedo_tone5": 32, "tw": 32, "twisted_rightwards_arrow": 32, "two_heart": 32, "two_men_holding_hand": 32, "two_women_holding_hand": 32, "tz": 32, "u5272": 32, "u5408": 32, "u55b6": 32, "u6307": 32, "u6708": 32, "u6709": 32, "u6e80": 32, "u7121": 32, "u7533": 32, "u7981": 32, "u7a7a": 32, "ua": [32, 237, 246, 321], "ug": 32, "uganda": 32, "ukrain": 32, "umbrella2": 32, "umbrella": 32, "umbrella_on_ground": 32, "unamus": 32, "underag": 32, "unicorn": 32, "unicorn_fac": 32, "united_arab_emir": 32, "united_n": 32, "united_st": 32, "unlock": [32, 760, 762, 764, 825, 831, 978, 1196], "upside_down": 32, "upside_down_fac": 32, "urn": 32, "uruguai": 32, "us_virgin_island": 32, "uz": 32, "uzbekistan": 32, "v_tone1": 32, "v_tone2": 32, "v_tone3": 32, "v_tone4": 32, "v_tone5": 32, "va": [32, 289, 292], "vampir": 32, "vampire_dark_skin_ton": 32, "vampire_light_skin_ton": 32, "vampire_medium_dark_skin_ton": 32, "vampire_medium_light_skin_ton": 32, "vampire_medium_skin_ton": 32, "vampire_tone1": 32, "vampire_tone2": 32, "vampire_tone3": 32, "vampire_tone4": 32, "vampire_tone5": 32, "vanuatu": 32, "vatican_c": 32, "vc": [32, 152, 176], "ve": [32, 170, 172, 875, 1165], "venezuela": 32, "vertical_traffic_light": 32, "vg": 32, "vh": 32, "vi": [32, 766], "vibration_mod": 32, "video_camera": 32, "video_gam": 32, "vietnam": 32, "violin": 32, "virgo": 32, "vn": 32, "volcano": 32, "volleybal": 32, "vu": 32, "vulcan": 32, "vulcan_salut": 32, "vulcan_tone1": 32, "vulcan_tone2": 32, "vulcan_tone3": 32, "vulcan_tone4": 32, "vulcan_tone5": 32, "waffl": 32, "wale": 32, "walk": [32, 169, 189, 202, 298, 299, 320, 347, 349, 372, 383, 690, 707, 877, 939, 1043], "walking_man": 32, "walking_tone1": 32, "walking_tone2": 32, "walking_tone3": 32, "walking_tone4": 32, "walking_tone5": 32, "walking_woman": 32, "wallis_futuna": 32, "waning_crescent_moon": 32, "waning_gibbous_moon": 32, "wastebasket": 32, "water_buffalo": 32, "water_polo": 32, "water_polo_tone1": 32, "water_polo_tone2": 32, "water_polo_tone3": 32, "water_polo_tone4": 32, "water_polo_tone5": 32, "watermelon": [32, 294], "wave": [32, 34, 38, 286, 303], "wave_tone1": 32, "wave_tone2": 32, "wave_tone3": 32, "wave_tone4": 32, "wave_tone5": 32, "waving_black_flag": 32, "waving_white_flag": 32, "wavy_dash": 32, "waxing_crescent_moon": 32, "waxing_gibbous_moon": 32, "wc": [32, 230, 231, 248, 268, 403, 418, 427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 474, 692, 730, 783, 785, 786, 873, 876, 926, 940, 1115], "weari": 32, "wed": [32, 229], "weight_lift": 32, "weight_lifter_tone1": 32, "weight_lifter_tone2": 32, "weight_lifter_tone3": 32, "weight_lifter_tone4": 32, "weight_lifter_tone5": 32, "weight_lifting_man": 32, "weight_lifting_woman": 32, "western_sahara": 32, "wf": 32, "whale2": 32, "whale": 32, "wheel_of_dharma": 32, "wheelchair": 32, "whiski": 32, "white_check_mark": 32, "white_circl": 32, "white_flag": 32, "white_flow": 32, "white_frowning_fac": 32, "white_hair": 32, "white_heart": 32, "white_large_squar": 32, "white_medium_small_squar": 32, "white_medium_squar": 32, "white_small_squar": 32, "white_square_button": 32, "white_sun_behind_cloud": 32, "white_sun_behind_cloud_with_rain": 32, "white_sun_cloud": 32, "white_sun_rain_cloud": 32, "white_sun_small_cloud": 32, "white_sun_with_small_cloud": 32, "wilted_flow": 32, "wilted_ros": 32, "wind_blowing_fac": 32, "wind_chim": 32, "wind_fac": 32, "wine_glass": 32, "wolf": 32, "woman": 32, "woman_and_man_holding_hands_dark_skin_ton": 32, "woman_and_man_holding_hands_dark_skin_tone_light_skin_ton": 32, "woman_and_man_holding_hands_dark_skin_tone_medium_dark_skin_ton": 32, "woman_and_man_holding_hands_dark_skin_tone_medium_light_skin_ton": 32, "woman_and_man_holding_hands_dark_skin_tone_medium_skin_ton": 32, "woman_and_man_holding_hands_light_skin_ton": 32, "woman_and_man_holding_hands_light_skin_tone_dark_skin_ton": 32, "woman_and_man_holding_hands_light_skin_tone_medium_dark_skin_ton": 32, "woman_and_man_holding_hands_light_skin_tone_medium_light_skin_ton": 32, "woman_and_man_holding_hands_light_skin_tone_medium_skin_ton": 32, "woman_and_man_holding_hands_medium_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_dark_skin_tone_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_dark_skin_tone_light_skin_ton": 32, "woman_and_man_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 32, "woman_and_man_holding_hands_medium_dark_skin_tone_medium_skin_ton": 32, "woman_and_man_holding_hands_medium_light_skin_ton": 32, "woman_and_man_holding_hands_medium_light_skin_tone_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_light_skin_tone_light_skin_ton": 32, "woman_and_man_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_light_skin_tone_medium_skin_ton": 32, "woman_and_man_holding_hands_medium_skin_ton": 32, "woman_and_man_holding_hands_medium_skin_tone_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_skin_tone_light_skin_ton": 32, "woman_and_man_holding_hands_medium_skin_tone_medium_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_skin_tone_medium_light_skin_ton": 32, "woman_and_man_holding_hands_tone1": 32, "woman_and_man_holding_hands_tone1_tone2": 32, "woman_and_man_holding_hands_tone1_tone3": 32, "woman_and_man_holding_hands_tone1_tone4": 32, "woman_and_man_holding_hands_tone1_tone5": 32, "woman_and_man_holding_hands_tone2": 32, "woman_and_man_holding_hands_tone2_tone1": 32, "woman_and_man_holding_hands_tone2_tone3": 32, "woman_and_man_holding_hands_tone2_tone4": 32, "woman_and_man_holding_hands_tone2_tone5": 32, "woman_and_man_holding_hands_tone3": 32, "woman_and_man_holding_hands_tone3_tone1": 32, "woman_and_man_holding_hands_tone3_tone2": 32, "woman_and_man_holding_hands_tone3_tone4": 32, "woman_and_man_holding_hands_tone3_tone5": 32, "woman_and_man_holding_hands_tone4": 32, "woman_and_man_holding_hands_tone4_tone1": 32, "woman_and_man_holding_hands_tone4_tone2": 32, "woman_and_man_holding_hands_tone4_tone3": 32, "woman_and_man_holding_hands_tone4_tone5": 32, "woman_and_man_holding_hands_tone5": 32, "woman_and_man_holding_hands_tone5_tone1": 32, "woman_and_man_holding_hands_tone5_tone2": 32, "woman_and_man_holding_hands_tone5_tone3": 32, "woman_and_man_holding_hands_tone5_tone4": 32, "woman_artist": 32, "woman_artist_dark_skin_ton": 32, "woman_artist_light_skin_ton": 32, "woman_artist_medium_dark_skin_ton": 32, "woman_artist_medium_light_skin_ton": 32, "woman_artist_medium_skin_ton": 32, "woman_artist_tone1": 32, "woman_artist_tone2": 32, "woman_artist_tone3": 32, "woman_artist_tone4": 32, "woman_artist_tone5": 32, "woman_astronaut": 32, "woman_astronaut_dark_skin_ton": 32, "woman_astronaut_light_skin_ton": 32, "woman_astronaut_medium_dark_skin_ton": 32, "woman_astronaut_medium_light_skin_ton": 32, "woman_astronaut_medium_skin_ton": 32, "woman_astronaut_tone1": 32, "woman_astronaut_tone2": 32, "woman_astronaut_tone3": 32, "woman_astronaut_tone4": 32, "woman_astronaut_tone5": 32, "woman_bald": 32, "woman_bald_dark_skin_ton": 32, "woman_bald_light_skin_ton": 32, "woman_bald_medium_dark_skin_ton": 32, "woman_bald_medium_light_skin_ton": 32, "woman_bald_medium_skin_ton": 32, "woman_bald_tone1": 32, "woman_bald_tone2": 32, "woman_bald_tone3": 32, "woman_bald_tone4": 32, "woman_bald_tone5": 32, "woman_beard": 32, "woman_bik": 32, "woman_biking_dark_skin_ton": 32, "woman_biking_light_skin_ton": 32, "woman_biking_medium_dark_skin_ton": 32, "woman_biking_medium_light_skin_ton": 32, "woman_biking_medium_skin_ton": 32, "woman_biking_tone1": 32, "woman_biking_tone2": 32, "woman_biking_tone3": 32, "woman_biking_tone4": 32, "woman_biking_tone5": 32, "woman_bouncing_bal": 32, "woman_bouncing_ball_dark_skin_ton": 32, "woman_bouncing_ball_light_skin_ton": 32, "woman_bouncing_ball_medium_dark_skin_ton": 32, "woman_bouncing_ball_medium_light_skin_ton": 32, "woman_bouncing_ball_medium_skin_ton": 32, "woman_bouncing_ball_tone1": 32, "woman_bouncing_ball_tone2": 32, "woman_bouncing_ball_tone3": 32, "woman_bouncing_ball_tone4": 32, "woman_bouncing_ball_tone5": 32, "woman_bow": 32, "woman_bowing_dark_skin_ton": 32, "woman_bowing_light_skin_ton": 32, "woman_bowing_medium_dark_skin_ton": 32, "woman_bowing_medium_light_skin_ton": 32, "woman_bowing_medium_skin_ton": 32, "woman_bowing_tone1": 32, "woman_bowing_tone2": 32, "woman_bowing_tone3": 32, "woman_bowing_tone4": 32, "woman_bowing_tone5": 32, "woman_cartwheel": 32, "woman_cartwheeling_dark_skin_ton": 32, "woman_cartwheeling_light_skin_ton": 32, "woman_cartwheeling_medium_dark_skin_ton": 32, "woman_cartwheeling_medium_light_skin_ton": 32, "woman_cartwheeling_medium_skin_ton": 32, "woman_cartwheeling_tone1": 32, "woman_cartwheeling_tone2": 32, "woman_cartwheeling_tone3": 32, "woman_cartwheeling_tone4": 32, "woman_cartwheeling_tone5": 32, "woman_climb": 32, "woman_climbing_dark_skin_ton": 32, "woman_climbing_light_skin_ton": 32, "woman_climbing_medium_dark_skin_ton": 32, "woman_climbing_medium_light_skin_ton": 32, "woman_climbing_medium_skin_ton": 32, "woman_climbing_tone1": 32, "woman_climbing_tone2": 32, "woman_climbing_tone3": 32, "woman_climbing_tone4": 32, "woman_climbing_tone5": 32, "woman_construction_work": 32, "woman_construction_worker_dark_skin_ton": 32, "woman_construction_worker_light_skin_ton": 32, "woman_construction_worker_medium_dark_skin_ton": 32, "woman_construction_worker_medium_light_skin_ton": 32, "woman_construction_worker_medium_skin_ton": 32, "woman_construction_worker_tone1": 32, "woman_construction_worker_tone2": 32, "woman_construction_worker_tone3": 32, "woman_construction_worker_tone4": 32, "woman_construction_worker_tone5": 32, "woman_cook": 32, "woman_cook_dark_skin_ton": 32, "woman_cook_light_skin_ton": 32, "woman_cook_medium_dark_skin_ton": 32, "woman_cook_medium_light_skin_ton": 32, "woman_cook_medium_skin_ton": 32, "woman_cook_tone1": 32, "woman_cook_tone2": 32, "woman_cook_tone3": 32, "woman_cook_tone4": 32, "woman_cook_tone5": 32, "woman_curly_hair": 32, "woman_curly_haired_dark_skin_ton": 32, "woman_curly_haired_light_skin_ton": 32, "woman_curly_haired_medium_dark_skin_ton": 32, "woman_curly_haired_medium_light_skin_ton": 32, "woman_curly_haired_medium_skin_ton": 32, "woman_curly_haired_tone1": 32, "woman_curly_haired_tone2": 32, "woman_curly_haired_tone3": 32, "woman_curly_haired_tone4": 32, "woman_curly_haired_tone5": 32, "woman_dark_skin_tone_beard": 32, "woman_detect": 32, "woman_detective_dark_skin_ton": 32, "woman_detective_light_skin_ton": 32, "woman_detective_medium_dark_skin_ton": 32, "woman_detective_medium_light_skin_ton": 32, "woman_detective_medium_skin_ton": 32, "woman_detective_tone1": 32, "woman_detective_tone2": 32, "woman_detective_tone3": 32, "woman_detective_tone4": 32, "woman_detective_tone5": 32, "woman_elf": 32, "woman_elf_dark_skin_ton": 32, "woman_elf_light_skin_ton": 32, "woman_elf_medium_dark_skin_ton": 32, "woman_elf_medium_light_skin_ton": 32, "woman_elf_medium_skin_ton": 32, "woman_elf_tone1": 32, "woman_elf_tone2": 32, "woman_elf_tone3": 32, "woman_elf_tone4": 32, "woman_elf_tone5": 32, "woman_facepalm": 32, "woman_facepalming_dark_skin_ton": 32, "woman_facepalming_light_skin_ton": 32, "woman_facepalming_medium_dark_skin_ton": 32, "woman_facepalming_medium_light_skin_ton": 32, "woman_facepalming_medium_skin_ton": 32, "woman_facepalming_tone1": 32, "woman_facepalming_tone2": 32, "woman_facepalming_tone3": 32, "woman_facepalming_tone4": 32, "woman_facepalming_tone5": 32, "woman_factory_work": 32, "woman_factory_worker_dark_skin_ton": 32, "woman_factory_worker_light_skin_ton": 32, "woman_factory_worker_medium_dark_skin_ton": 32, "woman_factory_worker_medium_light_skin_ton": 32, "woman_factory_worker_medium_skin_ton": 32, "woman_factory_worker_tone1": 32, "woman_factory_worker_tone2": 32, "woman_factory_worker_tone3": 32, "woman_factory_worker_tone4": 32, "woman_factory_worker_tone5": 32, "woman_fairi": 32, "woman_fairy_dark_skin_ton": 32, "woman_fairy_light_skin_ton": 32, "woman_fairy_medium_dark_skin_ton": 32, "woman_fairy_medium_light_skin_ton": 32, "woman_fairy_medium_skin_ton": 32, "woman_fairy_tone1": 32, "woman_fairy_tone2": 32, "woman_fairy_tone3": 32, "woman_fairy_tone4": 32, "woman_fairy_tone5": 32, "woman_farm": 32, "woman_farmer_dark_skin_ton": 32, "woman_farmer_light_skin_ton": 32, "woman_farmer_medium_dark_skin_ton": 32, "woman_farmer_medium_light_skin_ton": 32, "woman_farmer_medium_skin_ton": 32, "woman_farmer_tone1": 32, "woman_farmer_tone2": 32, "woman_farmer_tone3": 32, "woman_farmer_tone4": 32, "woman_farmer_tone5": 32, "woman_feeding_babi": 32, "woman_feeding_baby_dark_skin_ton": 32, "woman_feeding_baby_light_skin_ton": 32, "woman_feeding_baby_medium_dark_skin_ton": 32, "woman_feeding_baby_medium_light_skin_ton": 32, "woman_feeding_baby_medium_skin_ton": 32, "woman_feeding_baby_tone1": 32, "woman_feeding_baby_tone2": 32, "woman_feeding_baby_tone3": 32, "woman_feeding_baby_tone4": 32, "woman_feeding_baby_tone5": 32, "woman_firefight": 32, "woman_firefighter_dark_skin_ton": 32, "woman_firefighter_light_skin_ton": 32, "woman_firefighter_medium_dark_skin_ton": 32, "woman_firefighter_medium_light_skin_ton": 32, "woman_firefighter_medium_skin_ton": 32, "woman_firefighter_tone1": 32, "woman_firefighter_tone2": 32, "woman_firefighter_tone3": 32, "woman_firefighter_tone4": 32, "woman_firefighter_tone5": 32, "woman_frown": 32, "woman_frowning_dark_skin_ton": 32, "woman_frowning_light_skin_ton": 32, "woman_frowning_medium_dark_skin_ton": 32, "woman_frowning_medium_light_skin_ton": 32, "woman_frowning_medium_skin_ton": 32, "woman_frowning_tone1": 32, "woman_frowning_tone2": 32, "woman_frowning_tone3": 32, "woman_frowning_tone4": 32, "woman_frowning_tone5": 32, "woman_geni": 32, "woman_gesturing_no": 32, "woman_gesturing_no_dark_skin_ton": 32, "woman_gesturing_no_light_skin_ton": 32, "woman_gesturing_no_medium_dark_skin_ton": 32, "woman_gesturing_no_medium_light_skin_ton": 32, "woman_gesturing_no_medium_skin_ton": 32, "woman_gesturing_no_tone1": 32, "woman_gesturing_no_tone2": 32, "woman_gesturing_no_tone3": 32, "woman_gesturing_no_tone4": 32, "woman_gesturing_no_tone5": 32, "woman_gesturing_ok": 32, "woman_gesturing_ok_dark_skin_ton": 32, "woman_gesturing_ok_light_skin_ton": 32, "woman_gesturing_ok_medium_dark_skin_ton": 32, "woman_gesturing_ok_medium_light_skin_ton": 32, "woman_gesturing_ok_medium_skin_ton": 32, "woman_gesturing_ok_tone1": 32, "woman_gesturing_ok_tone2": 32, "woman_gesturing_ok_tone3": 32, "woman_gesturing_ok_tone4": 32, "woman_gesturing_ok_tone5": 32, "woman_getting_face_massag": 32, "woman_getting_face_massage_dark_skin_ton": 32, "woman_getting_face_massage_light_skin_ton": 32, "woman_getting_face_massage_medium_dark_skin_ton": 32, "woman_getting_face_massage_medium_light_skin_ton": 32, "woman_getting_face_massage_medium_skin_ton": 32, "woman_getting_face_massage_tone1": 32, "woman_getting_face_massage_tone2": 32, "woman_getting_face_massage_tone3": 32, "woman_getting_face_massage_tone4": 32, "woman_getting_face_massage_tone5": 32, "woman_getting_haircut": 32, "woman_getting_haircut_dark_skin_ton": 32, "woman_getting_haircut_light_skin_ton": 32, "woman_getting_haircut_medium_dark_skin_ton": 32, "woman_getting_haircut_medium_light_skin_ton": 32, "woman_getting_haircut_medium_skin_ton": 32, "woman_getting_haircut_tone1": 32, "woman_getting_haircut_tone2": 32, "woman_getting_haircut_tone3": 32, "woman_getting_haircut_tone4": 32, "woman_getting_haircut_tone5": 32, "woman_golf": 32, "woman_golfing_dark_skin_ton": 32, "woman_golfing_light_skin_ton": 32, "woman_golfing_medium_dark_skin_ton": 32, "woman_golfing_medium_light_skin_ton": 32, "woman_golfing_medium_skin_ton": 32, "woman_golfing_tone1": 32, "woman_golfing_tone2": 32, "woman_golfing_tone3": 32, "woman_golfing_tone4": 32, "woman_golfing_tone5": 32, "woman_guard": 32, "woman_guard_dark_skin_ton": 32, "woman_guard_light_skin_ton": 32, "woman_guard_medium_dark_skin_ton": 32, "woman_guard_medium_light_skin_ton": 32, "woman_guard_medium_skin_ton": 32, "woman_guard_tone1": 32, "woman_guard_tone2": 32, "woman_guard_tone3": 32, "woman_guard_tone4": 32, "woman_guard_tone5": 32, "woman_health_work": 32, "woman_health_worker_dark_skin_ton": 32, "woman_health_worker_light_skin_ton": 32, "woman_health_worker_medium_dark_skin_ton": 32, "woman_health_worker_medium_light_skin_ton": 32, "woman_health_worker_medium_skin_ton": 32, "woman_health_worker_tone1": 32, "woman_health_worker_tone2": 32, "woman_health_worker_tone3": 32, "woman_health_worker_tone4": 32, "woman_health_worker_tone5": 32, "woman_in_lotus_posit": 32, "woman_in_lotus_position_dark_skin_ton": 32, "woman_in_lotus_position_light_skin_ton": 32, "woman_in_lotus_position_medium_dark_skin_ton": 32, "woman_in_lotus_position_medium_light_skin_ton": 32, "woman_in_lotus_position_medium_skin_ton": 32, "woman_in_lotus_position_tone1": 32, "woman_in_lotus_position_tone2": 32, "woman_in_lotus_position_tone3": 32, "woman_in_lotus_position_tone4": 32, "woman_in_lotus_position_tone5": 32, "woman_in_manual_wheelchair": 32, "woman_in_manual_wheelchair_dark_skin_ton": 32, "woman_in_manual_wheelchair_light_skin_ton": 32, "woman_in_manual_wheelchair_medium_dark_skin_ton": 32, "woman_in_manual_wheelchair_medium_light_skin_ton": 32, "woman_in_manual_wheelchair_medium_skin_ton": 32, "woman_in_manual_wheelchair_tone1": 32, "woman_in_manual_wheelchair_tone2": 32, "woman_in_manual_wheelchair_tone3": 32, "woman_in_manual_wheelchair_tone4": 32, "woman_in_manual_wheelchair_tone5": 32, "woman_in_motorized_wheelchair": 32, "woman_in_motorized_wheelchair_dark_skin_ton": 32, "woman_in_motorized_wheelchair_light_skin_ton": 32, "woman_in_motorized_wheelchair_medium_dark_skin_ton": 32, "woman_in_motorized_wheelchair_medium_light_skin_ton": 32, "woman_in_motorized_wheelchair_medium_skin_ton": 32, "woman_in_motorized_wheelchair_tone1": 32, "woman_in_motorized_wheelchair_tone2": 32, "woman_in_motorized_wheelchair_tone3": 32, "woman_in_motorized_wheelchair_tone4": 32, "woman_in_motorized_wheelchair_tone5": 32, "woman_in_steamy_room": 32, "woman_in_steamy_room_dark_skin_ton": 32, "woman_in_steamy_room_light_skin_ton": 32, "woman_in_steamy_room_medium_dark_skin_ton": 32, "woman_in_steamy_room_medium_light_skin_ton": 32, "woman_in_steamy_room_medium_skin_ton": 32, "woman_in_steamy_room_tone1": 32, "woman_in_steamy_room_tone2": 32, "woman_in_steamy_room_tone3": 32, "woman_in_steamy_room_tone4": 32, "woman_in_steamy_room_tone5": 32, "woman_in_tuxedo": 32, "woman_in_tuxedo_dark_skin_ton": 32, "woman_in_tuxedo_light_skin_ton": 32, "woman_in_tuxedo_medium_dark_skin_ton": 32, "woman_in_tuxedo_medium_light_skin_ton": 32, "woman_in_tuxedo_medium_skin_ton": 32, "woman_in_tuxedo_tone1": 32, "woman_in_tuxedo_tone2": 32, "woman_in_tuxedo_tone3": 32, "woman_in_tuxedo_tone4": 32, "woman_in_tuxedo_tone5": 32, "woman_judg": 32, "woman_judge_dark_skin_ton": 32, "woman_judge_light_skin_ton": 32, "woman_judge_medium_dark_skin_ton": 32, "woman_judge_medium_light_skin_ton": 32, "woman_judge_medium_skin_ton": 32, "woman_judge_tone1": 32, "woman_judge_tone2": 32, "woman_judge_tone3": 32, "woman_judge_tone4": 32, "woman_judge_tone5": 32, "woman_juggl": 32, "woman_juggling_dark_skin_ton": 32, "woman_juggling_light_skin_ton": 32, "woman_juggling_medium_dark_skin_ton": 32, "woman_juggling_medium_light_skin_ton": 32, "woman_juggling_medium_skin_ton": 32, "woman_juggling_tone1": 32, "woman_juggling_tone2": 32, "woman_juggling_tone3": 32, "woman_juggling_tone4": 32, "woman_juggling_tone5": 32, "woman_kneel": 32, "woman_kneeling_dark_skin_ton": 32, "woman_kneeling_light_skin_ton": 32, "woman_kneeling_medium_dark_skin_ton": 32, "woman_kneeling_medium_light_skin_ton": 32, "woman_kneeling_medium_skin_ton": 32, "woman_kneeling_tone1": 32, "woman_kneeling_tone2": 32, "woman_kneeling_tone3": 32, "woman_kneeling_tone4": 32, "woman_kneeling_tone5": 32, "woman_lifting_weight": 32, "woman_lifting_weights_dark_skin_ton": 32, "woman_lifting_weights_light_skin_ton": 32, "woman_lifting_weights_medium_dark_skin_ton": 32, "woman_lifting_weights_medium_light_skin_ton": 32, "woman_lifting_weights_medium_skin_ton": 32, "woman_lifting_weights_tone1": 32, "woman_lifting_weights_tone2": 32, "woman_lifting_weights_tone3": 32, "woman_lifting_weights_tone4": 32, "woman_lifting_weights_tone5": 32, "woman_light_skin_tone_beard": 32, "woman_mag": 32, "woman_mage_dark_skin_ton": 32, "woman_mage_light_skin_ton": 32, "woman_mage_medium_dark_skin_ton": 32, "woman_mage_medium_light_skin_ton": 32, "woman_mage_medium_skin_ton": 32, "woman_mage_tone1": 32, "woman_mage_tone2": 32, "woman_mage_tone3": 32, "woman_mage_tone4": 32, "woman_mage_tone5": 32, "woman_mechan": 32, "woman_mechanic_dark_skin_ton": 32, "woman_mechanic_light_skin_ton": 32, "woman_mechanic_medium_dark_skin_ton": 32, "woman_mechanic_medium_light_skin_ton": 32, "woman_mechanic_medium_skin_ton": 32, "woman_mechanic_tone1": 32, "woman_mechanic_tone2": 32, "woman_mechanic_tone3": 32, "woman_mechanic_tone4": 32, "woman_mechanic_tone5": 32, "woman_medium_dark_skin_tone_beard": 32, "woman_medium_light_skin_tone_beard": 32, "woman_medium_skin_tone_beard": 32, "woman_mountain_bik": 32, "woman_mountain_biking_dark_skin_ton": 32, "woman_mountain_biking_light_skin_ton": 32, "woman_mountain_biking_medium_dark_skin_ton": 32, "woman_mountain_biking_medium_light_skin_ton": 32, "woman_mountain_biking_medium_skin_ton": 32, "woman_mountain_biking_tone1": 32, "woman_mountain_biking_tone2": 32, "woman_mountain_biking_tone3": 32, "woman_mountain_biking_tone4": 32, "woman_mountain_biking_tone5": 32, "woman_office_work": 32, "woman_office_worker_dark_skin_ton": 32, "woman_office_worker_light_skin_ton": 32, "woman_office_worker_medium_dark_skin_ton": 32, "woman_office_worker_medium_light_skin_ton": 32, "woman_office_worker_medium_skin_ton": 32, "woman_office_worker_tone1": 32, "woman_office_worker_tone2": 32, "woman_office_worker_tone3": 32, "woman_office_worker_tone4": 32, "woman_office_worker_tone5": 32, "woman_pilot": 32, "woman_pilot_dark_skin_ton": 32, "woman_pilot_light_skin_ton": 32, "woman_pilot_medium_dark_skin_ton": 32, "woman_pilot_medium_light_skin_ton": 32, "woman_pilot_medium_skin_ton": 32, "woman_pilot_tone1": 32, "woman_pilot_tone2": 32, "woman_pilot_tone3": 32, "woman_pilot_tone4": 32, "woman_pilot_tone5": 32, "woman_playing_handbal": 32, "woman_playing_handball_dark_skin_ton": 32, "woman_playing_handball_light_skin_ton": 32, "woman_playing_handball_medium_dark_skin_ton": 32, "woman_playing_handball_medium_light_skin_ton": 32, "woman_playing_handball_medium_skin_ton": 32, "woman_playing_handball_tone1": 32, "woman_playing_handball_tone2": 32, "woman_playing_handball_tone3": 32, "woman_playing_handball_tone4": 32, "woman_playing_handball_tone5": 32, "woman_playing_water_polo": 32, "woman_playing_water_polo_dark_skin_ton": 32, "woman_playing_water_polo_light_skin_ton": 32, "woman_playing_water_polo_medium_dark_skin_ton": 32, "woman_playing_water_polo_medium_light_skin_ton": 32, "woman_playing_water_polo_medium_skin_ton": 32, "woman_playing_water_polo_tone1": 32, "woman_playing_water_polo_tone2": 32, "woman_playing_water_polo_tone3": 32, "woman_playing_water_polo_tone4": 32, "woman_playing_water_polo_tone5": 32, "woman_police_offic": 32, "woman_police_officer_dark_skin_ton": 32, "woman_police_officer_light_skin_ton": 32, "woman_police_officer_medium_dark_skin_ton": 32, "woman_police_officer_medium_light_skin_ton": 32, "woman_police_officer_medium_skin_ton": 32, "woman_police_officer_tone1": 32, "woman_police_officer_tone2": 32, "woman_police_officer_tone3": 32, "woman_police_officer_tone4": 32, "woman_police_officer_tone5": 32, "woman_pout": 32, "woman_pouting_dark_skin_ton": 32, "woman_pouting_light_skin_ton": 32, "woman_pouting_medium_dark_skin_ton": 32, "woman_pouting_medium_light_skin_ton": 32, "woman_pouting_medium_skin_ton": 32, "woman_pouting_tone1": 32, "woman_pouting_tone2": 32, "woman_pouting_tone3": 32, "woman_pouting_tone4": 32, "woman_pouting_tone5": 32, "woman_raising_hand": 32, "woman_raising_hand_dark_skin_ton": 32, "woman_raising_hand_light_skin_ton": 32, "woman_raising_hand_medium_dark_skin_ton": 32, "woman_raising_hand_medium_light_skin_ton": 32, "woman_raising_hand_medium_skin_ton": 32, "woman_raising_hand_tone1": 32, "woman_raising_hand_tone2": 32, "woman_raising_hand_tone3": 32, "woman_raising_hand_tone4": 32, "woman_raising_hand_tone5": 32, "woman_red_hair": 32, "woman_red_haired_dark_skin_ton": 32, "woman_red_haired_light_skin_ton": 32, "woman_red_haired_medium_dark_skin_ton": 32, "woman_red_haired_medium_light_skin_ton": 32, "woman_red_haired_medium_skin_ton": 32, "woman_red_haired_tone1": 32, "woman_red_haired_tone2": 32, "woman_red_haired_tone3": 32, "woman_red_haired_tone4": 32, "woman_red_haired_tone5": 32, "woman_rowing_boat": 32, "woman_rowing_boat_dark_skin_ton": 32, "woman_rowing_boat_light_skin_ton": 32, "woman_rowing_boat_medium_dark_skin_ton": 32, "woman_rowing_boat_medium_light_skin_ton": 32, "woman_rowing_boat_medium_skin_ton": 32, "woman_rowing_boat_tone1": 32, "woman_rowing_boat_tone2": 32, "woman_rowing_boat_tone3": 32, "woman_rowing_boat_tone4": 32, "woman_rowing_boat_tone5": 32, "woman_run": 32, "woman_running_dark_skin_ton": 32, "woman_running_light_skin_ton": 32, "woman_running_medium_dark_skin_ton": 32, "woman_running_medium_light_skin_ton": 32, "woman_running_medium_skin_ton": 32, "woman_running_tone1": 32, "woman_running_tone2": 32, "woman_running_tone3": 32, "woman_running_tone4": 32, "woman_running_tone5": 32, "woman_scientist": 32, "woman_scientist_dark_skin_ton": 32, "woman_scientist_light_skin_ton": 32, "woman_scientist_medium_dark_skin_ton": 32, "woman_scientist_medium_light_skin_ton": 32, "woman_scientist_medium_skin_ton": 32, "woman_scientist_tone1": 32, "woman_scientist_tone2": 32, "woman_scientist_tone3": 32, "woman_scientist_tone4": 32, "woman_scientist_tone5": 32, "woman_shrug": 32, "woman_shrugging_dark_skin_ton": 32, "woman_shrugging_light_skin_ton": 32, "woman_shrugging_medium_dark_skin_ton": 32, "woman_shrugging_medium_light_skin_ton": 32, "woman_shrugging_medium_skin_ton": 32, "woman_shrugging_tone1": 32, "woman_shrugging_tone2": 32, "woman_shrugging_tone3": 32, "woman_shrugging_tone4": 32, "woman_shrugging_tone5": 32, "woman_sing": 32, "woman_singer_dark_skin_ton": 32, "woman_singer_light_skin_ton": 32, "woman_singer_medium_dark_skin_ton": 32, "woman_singer_medium_light_skin_ton": 32, "woman_singer_medium_skin_ton": 32, "woman_singer_tone1": 32, "woman_singer_tone2": 32, "woman_singer_tone3": 32, "woman_singer_tone4": 32, "woman_singer_tone5": 32, "woman_stand": 32, "woman_standing_dark_skin_ton": 32, "woman_standing_light_skin_ton": 32, "woman_standing_medium_dark_skin_ton": 32, "woman_standing_medium_light_skin_ton": 32, "woman_standing_medium_skin_ton": 32, "woman_standing_tone1": 32, "woman_standing_tone2": 32, "woman_standing_tone3": 32, "woman_standing_tone4": 32, "woman_standing_tone5": 32, "woman_stud": 32, "woman_student_dark_skin_ton": 32, "woman_student_light_skin_ton": 32, "woman_student_medium_dark_skin_ton": 32, "woman_student_medium_light_skin_ton": 32, "woman_student_medium_skin_ton": 32, "woman_student_tone1": 32, "woman_student_tone2": 32, "woman_student_tone3": 32, "woman_student_tone4": 32, "woman_student_tone5": 32, "woman_superhero": 32, "woman_superhero_dark_skin_ton": 32, "woman_superhero_light_skin_ton": 32, "woman_superhero_medium_dark_skin_ton": 32, "woman_superhero_medium_light_skin_ton": 32, "woman_superhero_medium_skin_ton": 32, "woman_superhero_tone1": 32, "woman_superhero_tone2": 32, "woman_superhero_tone3": 32, "woman_superhero_tone4": 32, "woman_superhero_tone5": 32, "woman_supervillain": 32, "woman_supervillain_dark_skin_ton": 32, "woman_supervillain_light_skin_ton": 32, "woman_supervillain_medium_dark_skin_ton": 32, "woman_supervillain_medium_light_skin_ton": 32, "woman_supervillain_medium_skin_ton": 32, "woman_supervillain_tone1": 32, "woman_supervillain_tone2": 32, "woman_supervillain_tone3": 32, "woman_supervillain_tone4": 32, "woman_supervillain_tone5": 32, "woman_surf": 32, "woman_surfing_dark_skin_ton": 32, "woman_surfing_light_skin_ton": 32, "woman_surfing_medium_dark_skin_ton": 32, "woman_surfing_medium_light_skin_ton": 32, "woman_surfing_medium_skin_ton": 32, "woman_surfing_tone1": 32, "woman_surfing_tone2": 32, "woman_surfing_tone3": 32, "woman_surfing_tone4": 32, "woman_surfing_tone5": 32, "woman_swim": 32, "woman_swimming_dark_skin_ton": 32, "woman_swimming_light_skin_ton": 32, "woman_swimming_medium_dark_skin_ton": 32, "woman_swimming_medium_light_skin_ton": 32, "woman_swimming_medium_skin_ton": 32, "woman_swimming_tone1": 32, "woman_swimming_tone2": 32, "woman_swimming_tone3": 32, "woman_swimming_tone4": 32, "woman_swimming_tone5": 32, "woman_teach": 32, "woman_teacher_dark_skin_ton": 32, "woman_teacher_light_skin_ton": 32, "woman_teacher_medium_dark_skin_ton": 32, "woman_teacher_medium_light_skin_ton": 32, "woman_teacher_medium_skin_ton": 32, "woman_teacher_tone1": 32, "woman_teacher_tone2": 32, "woman_teacher_tone3": 32, "woman_teacher_tone4": 32, "woman_teacher_tone5": 32, "woman_technologist": 32, "woman_technologist_dark_skin_ton": 32, "woman_technologist_light_skin_ton": 32, "woman_technologist_medium_dark_skin_ton": 32, "woman_technologist_medium_light_skin_ton": 32, "woman_technologist_medium_skin_ton": 32, "woman_technologist_tone1": 32, "woman_technologist_tone2": 32, "woman_technologist_tone3": 32, "woman_technologist_tone4": 32, "woman_technologist_tone5": 32, "woman_tipping_hand": 32, "woman_tipping_hand_dark_skin_ton": 32, "woman_tipping_hand_light_skin_ton": 32, "woman_tipping_hand_medium_dark_skin_ton": 32, "woman_tipping_hand_medium_light_skin_ton": 32, "woman_tipping_hand_medium_skin_ton": 32, "woman_tipping_hand_tone1": 32, "woman_tipping_hand_tone2": 32, "woman_tipping_hand_tone3": 32, "woman_tipping_hand_tone4": 32, "woman_tipping_hand_tone5": 32, "woman_tone1": 32, "woman_tone1_beard": 32, "woman_tone2": 32, "woman_tone2_beard": 32, "woman_tone3": 32, "woman_tone3_beard": 32, "woman_tone4": 32, "woman_tone4_beard": 32, "woman_tone5": 32, "woman_tone5_beard": 32, "woman_vampir": 32, "woman_vampire_dark_skin_ton": 32, "woman_vampire_light_skin_ton": 32, "woman_vampire_medium_dark_skin_ton": 32, "woman_vampire_medium_light_skin_ton": 32, "woman_vampire_medium_skin_ton": 32, "woman_vampire_tone1": 32, "woman_vampire_tone2": 32, "woman_vampire_tone3": 32, "woman_vampire_tone4": 32, "woman_vampire_tone5": 32, "woman_walk": 32, "woman_walking_dark_skin_ton": 32, "woman_walking_light_skin_ton": 32, "woman_walking_medium_dark_skin_ton": 32, "woman_walking_medium_light_skin_ton": 32, "woman_walking_medium_skin_ton": 32, "woman_walking_tone1": 32, "woman_walking_tone2": 32, "woman_walking_tone3": 32, "woman_walking_tone4": 32, "woman_walking_tone5": 32, "woman_wearing_turban": 32, "woman_wearing_turban_dark_skin_ton": 32, "woman_wearing_turban_light_skin_ton": 32, "woman_wearing_turban_medium_dark_skin_ton": 32, "woman_wearing_turban_medium_light_skin_ton": 32, "woman_wearing_turban_medium_skin_ton": 32, "woman_wearing_turban_tone1": 32, "woman_wearing_turban_tone2": 32, "woman_wearing_turban_tone3": 32, "woman_wearing_turban_tone4": 32, "woman_wearing_turban_tone5": 32, "woman_white_hair": 32, "woman_white_haired_dark_skin_ton": 32, "woman_white_haired_light_skin_ton": 32, "woman_white_haired_medium_dark_skin_ton": 32, "woman_white_haired_medium_light_skin_ton": 32, "woman_white_haired_medium_skin_ton": 32, "woman_white_haired_tone1": 32, "woman_white_haired_tone2": 32, "woman_white_haired_tone3": 32, "woman_white_haired_tone4": 32, "woman_white_haired_tone5": 32, "woman_with_headscarf": 32, "woman_with_headscarf_dark_skin_ton": 32, "woman_with_headscarf_light_skin_ton": 32, "woman_with_headscarf_medium_dark_skin_ton": 32, "woman_with_headscarf_medium_light_skin_ton": 32, "woman_with_headscarf_medium_skin_ton": 32, "woman_with_headscarf_tone1": 32, "woman_with_headscarf_tone2": 32, "woman_with_headscarf_tone3": 32, "woman_with_headscarf_tone4": 32, "woman_with_headscarf_tone5": 32, "woman_with_probing_can": 32, "woman_with_probing_cane_dark_skin_ton": 32, "woman_with_probing_cane_light_skin_ton": 32, "woman_with_probing_cane_medium_dark_skin_ton": 32, "woman_with_probing_cane_medium_light_skin_ton": 32, "woman_with_probing_cane_medium_skin_ton": 32, "woman_with_probing_cane_tone1": 32, "woman_with_probing_cane_tone2": 32, "woman_with_probing_cane_tone3": 32, "woman_with_probing_cane_tone4": 32, "woman_with_probing_cane_tone5": 32, "woman_with_turban": 32, "woman_with_veil": 32, "woman_with_veil_dark_skin_ton": 32, "woman_with_veil_light_skin_ton": 32, "woman_with_veil_medium_dark_skin_ton": 32, "woman_with_veil_medium_light_skin_ton": 32, "woman_with_veil_medium_skin_ton": 32, "woman_with_veil_tone1": 32, "woman_with_veil_tone2": 32, "woman_with_veil_tone3": 32, "woman_with_veil_tone4": 32, "woman_with_veil_tone5": 32, "woman_zombi": 32, "womans_cloth": 32, "womans_flat_sho": 32, "womans_hat": 32, "women_holding_hands_dark_skin_ton": 32, "women_holding_hands_dark_skin_tone_light_skin_ton": 32, "women_holding_hands_dark_skin_tone_medium_dark_skin_ton": 32, "women_holding_hands_dark_skin_tone_medium_light_skin_ton": 32, "women_holding_hands_dark_skin_tone_medium_skin_ton": 32, "women_holding_hands_light_skin_ton": 32, "women_holding_hands_light_skin_tone_dark_skin_ton": 32, "women_holding_hands_light_skin_tone_medium_dark_skin_ton": 32, "women_holding_hands_light_skin_tone_medium_light_skin_ton": 32, "women_holding_hands_light_skin_tone_medium_skin_ton": 32, "women_holding_hands_medium_dark_skin_ton": 32, "women_holding_hands_medium_dark_skin_tone_dark_skin_ton": 32, "women_holding_hands_medium_dark_skin_tone_light_skin_ton": 32, "women_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 32, "women_holding_hands_medium_dark_skin_tone_medium_skin_ton": 32, "women_holding_hands_medium_light_skin_ton": 32, "women_holding_hands_medium_light_skin_tone_dark_skin_ton": 32, "women_holding_hands_medium_light_skin_tone_light_skin_ton": 32, "women_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 32, "women_holding_hands_medium_light_skin_tone_medium_skin_ton": 32, "women_holding_hands_medium_skin_ton": 32, "women_holding_hands_medium_skin_tone_dark_skin_ton": 32, "women_holding_hands_medium_skin_tone_light_skin_ton": 32, "women_holding_hands_medium_skin_tone_medium_dark_skin_ton": 32, "women_holding_hands_medium_skin_tone_medium_light_skin_ton": 32, "women_holding_hands_tone1": 32, "women_holding_hands_tone1_tone2": 32, "women_holding_hands_tone1_tone3": 32, "women_holding_hands_tone1_tone4": 32, "women_holding_hands_tone1_tone5": 32, "women_holding_hands_tone2": 32, "women_holding_hands_tone2_tone1": 32, "women_holding_hands_tone2_tone3": 32, "women_holding_hands_tone2_tone4": 32, "women_holding_hands_tone2_tone5": 32, "women_holding_hands_tone3": 32, "women_holding_hands_tone3_tone1": 32, "women_holding_hands_tone3_tone2": 32, "women_holding_hands_tone3_tone4": 32, "women_holding_hands_tone3_tone5": 32, "women_holding_hands_tone4": 32, "women_holding_hands_tone4_tone1": 32, "women_holding_hands_tone4_tone2": 32, "women_holding_hands_tone4_tone3": 32, "women_holding_hands_tone4_tone5": 32, "women_holding_hands_tone5": 32, "women_holding_hands_tone5_tone1": 32, "women_holding_hands_tone5_tone2": 32, "women_holding_hands_tone5_tone3": 32, "women_holding_hands_tone5_tone4": 32, "women_with_bunny_ears_parti": 32, "women_wrestl": 32, "women": 32, "wood": 32, "woozy_fac": 32, "world_map": 32, "worm": [32, 485], "worri": [32, 453], "worship_symbol": 32, "wrench": 32, "wrestler": 32, "wrestlers_tone1": 32, "wrestlers_tone2": 32, "wrestlers_tone3": 32, "wrestlers_tone4": 32, "wrestlers_tone5": 32, "wrestl": 32, "wrestling_tone1": 32, "wrestling_tone2": 32, "wrestling_tone3": 32, "wrestling_tone4": 32, "wrestling_tone5": 32, "writing_hand": 32, "writing_hand_tone1": 32, "writing_hand_tone2": 32, "writing_hand_tone3": 32, "writing_hand_tone4": 32, "writing_hand_tone5": 32, "w": [32, 40, 206, 210, 213, 235, 239, 245, 255, 258, 265, 286, 300, 366, 367, 386, 474, 609, 670, 878, 892, 938, 939, 973, 1028, 1068, 1081, 1126, 1128, 1156, 1159, 1164], "xk": 32, "yarn": 32, "yawning_fac": 32, "yellow_circl": 32, "yellow_heart": 32, "yellow_squar": 32, "yemen": 32, "yen": [32, 36], "yin_yang": 32, "yo_yo": 32, "yt": 32, "yum": [32, 338], "za": [32, 310, 338, 405], "zambia": 32, "zany_fac": 32, "zap": 32, "zebra": 32, "zimbabw": 32, "zipper_mouth": 32, "zipper_mouth_fac": 32, "zm": 32, "zombi": 32, "zw": 32, "zzz": [32, 344], "sheet": [33, 69, 171, 210, 222, 369, 371, 372, 718, 893, 937, 938], "layout": [33, 166, 187, 260, 450, 463, 1164], "emoji": 33, "sphinxemoji": 33, "mmlalia": 33, "mathml": 33, "alias": [33, 338, 406, 894], "entiti": [33, 170, 414, 428, 455, 472, 492, 500, 607, 802, 991, 1144], "isoamsa": 33, "mathemat": [33, 262, 1080], "arrow": [33, 35, 36, 38, 77, 78, 893, 1023], "isoamsr": 33, "relat": [33, 73, 158, 191, 202, 206, 227, 231, 286, 299, 418, 427, 434, 438, 440, 444, 447, 451, 460, 464, 469, 470, 477, 592, 692, 730, 747, 771, 783, 784, 785, 786, 801, 810, 858, 936, 991, 1001, 1131, 1164, 1165], "isonum": 33, "binari": [33, 42, 50, 54, 55, 58, 80, 91, 92, 166, 170, 176, 230, 231, 239, 243, 245, 246, 248, 253, 255, 258, 268, 373, 417, 450, 462, 630, 707, 770, 811, 825, 833, 878, 1007, 1010, 1023, 1035, 1062, 1067, 1144], "sphinxish": 33, "send": [33, 105, 128, 146, 152, 167, 170, 181, 206, 207, 209, 210, 211, 212, 245, 246, 265, 267, 268, 286, 307, 365, 370, 514, 857, 873, 889, 932, 933, 937, 946, 956, 1004, 1006, 1127, 1144], "v4l": [33, 146], "ssh": [33, 101, 105, 106, 128, 146, 150, 152, 167, 177, 181, 210, 242, 258, 265, 268, 276, 283, 285, 290, 300, 304, 306, 326, 332, 338, 344, 351, 364, 365, 371, 372, 378, 379, 383, 549, 550, 786, 859, 860, 861, 868, 915, 924, 929, 930, 941, 942, 967, 1017, 1018, 1019, 1188, 1190, 1195], "taken": [34, 35, 36, 38, 40, 77, 78, 132, 169, 173, 174, 181, 230, 452, 484, 549, 558, 605, 760, 836, 858, 868, 893, 1007, 1058, 1144], "definit": [34, 35, 36, 38, 111, 118, 121, 122, 123, 136, 146, 166, 170, 172, 173, 175, 177, 190, 199, 202, 203, 208, 222, 229, 231, 295, 297, 313, 329, 365, 386, 387, 388, 418, 427, 430, 433, 434, 440, 444, 447, 451, 457, 458, 459, 460, 462, 463, 464, 469, 470, 477, 479, 483, 491, 492, 514, 536, 576, 594, 595, 596, 601, 602, 608, 609, 611, 620, 623, 624, 646, 672, 681, 692, 702, 718, 730, 732, 745, 749, 753, 783, 785, 786, 811, 833, 894, 938, 939, 1007, 1026, 1033, 1039, 1044, 1055, 1059, 1072, 1073, 1076, 1140, 1154, 1171, 1181, 1184], "includ": [34, 35, 36, 38, 44, 111, 118, 124, 125, 162, 172, 177, 181, 185, 187, 198, 202, 209, 221, 222, 231, 232, 239, 243, 245, 246, 248, 255, 258, 262, 283, 297, 304, 313, 325, 329, 362, 373, 387, 388, 390, 394, 396, 398, 429, 430, 445, 450, 453, 455, 459, 466, 475, 476, 478, 479, 480, 482, 487, 490, 491, 492, 493, 494, 495, 497, 499, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 536, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 556, 558, 559, 560, 561, 563, 564, 565, 566, 567, 576, 582, 585, 592, 593, 594, 596, 600, 601, 602, 603, 605, 606, 607, 608, 609, 610, 611, 612, 617, 620, 621, 622, 623, 624, 625, 627, 628, 629, 630, 631, 633, 634, 637, 638, 639, 643, 647, 648, 649, 650, 651, 657, 661, 662, 665, 667, 668, 670, 674, 679, 680, 681, 682, 683, 684, 685, 686, 689, 690, 691, 693, 695, 697, 700, 701, 702, 703, 705, 707, 708, 709, 710, 713, 714, 715, 716, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 732, 733, 734, 735, 737, 739, 740, 742, 744, 748, 749, 750, 751, 752, 753, 754, 757, 759, 762, 764, 765, 766, 770, 772, 774, 776, 780, 781, 782, 784, 786, 792, 797, 802, 804, 811, 813, 815, 817, 819, 821, 825, 827, 829, 838, 843, 847, 850, 853, 870, 890, 893, 899, 926, 931, 933, 937, 953, 955, 956, 957, 959, 962, 963, 964, 965, 966, 969, 971, 974, 982, 986, 988, 991, 997, 1000, 1004, 1007, 1010, 1019, 1022, 1023, 1025, 1027, 1055, 1056, 1081, 1082, 1154, 1160, 1166, 1171, 1173, 1176, 1186], "substitut": [34, 35, 36, 38, 110, 118, 123, 124, 146, 222, 258, 304, 362, 456, 472, 476, 707, 950, 1143], "angzarr": 34, "0237c": 34, "angl": [34, 36, 38, 1187], "WITH": [34, 35, 38, 956], "downward": [34, 35, 36, 38, 484], "zigzag": 34, "cirmid": 34, "02aef": 34, "vertic": [34, 35, 36, 38, 407], "circl": [34, 35, 38, 232, 568, 873], "abov": [34, 35, 38, 82, 128, 133, 170, 172, 173, 174, 175, 177, 181, 185, 189, 208, 211, 222, 231, 239, 245, 255, 258, 262, 321, 376, 423, 446, 456, 466, 492, 512, 514, 536, 539, 540, 549, 550, 575, 585, 602, 603, 607, 608, 627, 671, 733, 794, 827, 833, 843, 860, 861, 877, 905, 937, 938, 939, 963, 967, 993, 1000, 1023, 1031, 1062, 1076, 1147, 1153, 1164, 1171], "cudarrl": 34, "02938": 34, "side": [34, 190, 212, 286, 295, 402, 411, 452, 514, 546, 585, 609, 611, 612, 762, 813, 817, 872, 893, 941, 1031, 1064, 1110, 1136, 1138, 1147], "arc": 34, "clockwis": [34, 38], "cudarrr": 34, "02935": 34, "rightward": [34, 35, 36, 38], "THEN": 34, "curv": [34, 35], "cularr": 34, "021b6": [34, 38], "anticlockwis": [34, 38], "semicircl": [34, 38], "cularrp": 34, "0293d": 34, "plu": [34, 35, 36, 38, 69, 171, 177, 239, 245, 255, 258, 271, 423, 550, 576, 608, 610, 612, 833, 959], "curarr": 34, "021b7": [34, 38], "curarrm": 34, "0293c": 34, "minu": [34, 35, 36, 38, 250, 610, 753], "darr": [34, 36], "021a1": 34, "head": [34, 38, 40, 60, 126, 171, 173, 176, 210, 212, 222, 276, 285, 294, 306, 307, 762, 786, 863, 919, 920, 923, 926, 929, 954, 955, 1022, 1088], "021d3": [34, 38], "doubl": [34, 35, 36, 38, 118, 123, 124, 134, 137, 232, 248, 252, 258, 373, 388, 406, 407, 408, 411, 430, 450, 459, 491, 497, 502, 504, 511, 520, 522, 523, 528, 529, 530, 531, 532, 533, 536, 544, 546, 548, 549, 550, 561, 592, 594, 600, 602, 603, 607, 611, 643, 670, 694, 697, 700, 703, 707, 712, 713, 714, 715, 728, 747, 748, 750, 753, 762, 770, 772, 774, 775, 776, 777, 833, 893, 937, 1031, 1051, 1075, 1152], "darr2": 34, "021ca": [34, 38], "pair": [34, 38, 105, 106, 133, 134, 185, 227, 237, 240, 243, 248, 252, 253, 258, 265, 267, 279, 280, 303, 309, 337, 344, 493, 497, 500, 550, 568, 646, 647, 648, 651, 693, 739, 740, 744, 786, 797, 802, 929, 941, 942, 943, 945, 1025, 1035, 1079, 1131, 1142, 1159], "ddarr": 34, "ddotrahd": 34, "02911": 34, "dot": [34, 35, 36, 38, 174, 466, 481, 486, 915, 1009], "stem": [34, 802], "dfisht": 34, "0297f": 34, "down": [34, 35, 38, 169, 170, 173, 198, 275, 313, 329, 371, 392, 433, 478, 479, 490, 497, 539, 546, 547, 548, 549, 568, 610, 643, 668, 690, 707, 732, 749, 771, 786, 801, 802, 833, 879, 925, 932, 939, 1007, 1010, 1171, 1176], "tail": [34, 38, 171, 210, 212, 222, 276, 285, 306, 307, 762, 786, 821, 863, 920, 923, 926, 929, 1156], "dhar": 34, "02965": 34, "harpoon": [34, 38], "barb": [34, 38], "left": [34, 35, 36, 38, 62, 88, 114, 115, 133, 169, 170, 172, 190, 221, 232, 258, 304, 409, 410, 417, 423, 495, 539, 546, 592, 595, 599, 607, 608, 665, 672, 698, 875, 876, 893, 937, 946, 965, 1007, 1035, 1039, 1050, 1051, 1062, 1076, 1130, 1136, 1154], "besid": [34, 35, 38, 185], "dharl": 34, "021c3": [34, 38], "leftward": [34, 35, 36, 38], "dharr": 34, "021c2": [34, 38], "dlarr": 34, "02199": [34, 38], "south": [34, 38], "west": [34, 38, 179], "drarr": 34, "02198": [34, 38], "east": [34, 38], "duarr": 34, "021f5": [34, 38], "OF": [34, 35, 38, 173, 740], "upward": [34, 36, 38], "duhar": 34, "0296f": [34, 38], "dzigrarr": 34, "027ff": 34, "long": [34, 35, 38, 53, 141, 169, 170, 171, 172, 173, 177, 180, 198, 202, 210, 222, 239, 243, 245, 248, 255, 258, 266, 294, 365, 383, 394, 404, 406, 407, 411, 415, 416, 443, 450, 452, 461, 465, 467, 468, 487, 492, 549, 594, 595, 600, 605, 670, 740, 749, 759, 770, 772, 774, 776, 784, 792, 804, 813, 815, 831, 833, 838, 843, 847, 872, 893, 915, 939, 950, 956, 959, 989, 997, 1026, 1033, 1073, 1083, 1131, 1138, 1149, 1156, 1184], "squiggl": 34, "erarr": 34, "02971": 34, "equal": [34, 35, 36, 38, 172, 194, 206, 222, 229, 232, 258, 262, 294, 295, 304, 316, 332, 388, 394, 410, 417, 422, 433, 458, 461, 538, 544, 551, 555, 590, 635, 654, 658, 685, 687, 753, 786, 868, 872, 926, 950, 989, 993, 994, 1062, 1116, 1171], "sign": [34, 35, 36, 38, 173, 180, 185, 248, 404, 406, 414, 458, 472, 496, 670, 733, 806, 1062, 1076, 1136, 1181, 1182], "harr": 34, "021d4": [34, 38], "02194": [34, 38], "harrcir": 34, "02948": 34, "small": [34, 38, 43, 110, 169, 171, 172, 202, 222, 226, 282, 321, 331, 386, 458, 462, 495, 547, 592, 704, 749, 930, 931, 937, 969, 1001, 1054, 1077, 1143, 1171], "harrw": 34, "021ad": [34, 38], "hoarr": 34, "021ff": 34, "imof": 34, "022b7": 34, "imag": [34, 35, 38, 164, 166, 169, 170, 171, 172, 180, 193, 255, 258, 262, 280, 344, 348, 365, 371, 468, 474, 481, 600, 811, 833, 930, 1133, 1138], "laarr": 34, "021da": [34, 38], "tripl": [34, 35, 38, 61, 63], "larr": [34, 36], "0219e": [34, 38], "larr2": 34, "021c7": [34, 38], "larrbf": 34, "0291f": 34, "bar": [34, 35, 36, 38, 176, 197, 217, 240, 253, 258, 267, 270, 300, 303, 304, 309, 322, 326, 332, 338, 344, 348, 374, 474, 539, 754, 1029, 1071, 1131], "TO": [34, 35, 38, 1086], "black": [34, 38, 175, 226, 234, 246, 249, 646, 1019], "larrf": 34, "0291d": 34, "larrhk": 34, "021a9": [34, 38], "larrlp": 34, "021ab": [34, 38], "larrpl": 34, "02939": 34, "larrsim": 34, "02973": 34, "tild": [34, 35, 38], "larrtl": 34, "021a2": [34, 38], "latail": 34, "0291b": 34, "02919": 34, "lbarr": 34, "0290e": 34, "0290c": 34, "ldca": 34, "02936": 34, "ldrdhar": 34, "02967": 34, "ldrushar": 34, "0294b": 34, "ldsh": 34, "021b2": 34, "tip": [34, 38, 227, 237, 240, 243, 267, 279, 303, 309, 1131], "lfisht": 34, "0297c": 34, "lhar": 34, "02962": 34, "lhard": 34, "021bd": [34, 38], "lharu": 34, "021bc": [34, 38], "lharul": 34, "0296a": 34, "llarr": 34, "llhard": 34, "0296b": 34, "below": [34, 35, 38, 136, 144, 166, 170, 171, 172, 175, 177, 181, 190, 202, 211, 229, 262, 275, 321, 397, 399, 466, 473, 484, 517, 531, 539, 540, 546, 549, 684, 686, 700, 712, 732, 733, 749, 753, 762, 764, 781, 782, 784, 806, 827, 868, 872, 876, 893, 930, 939, 960, 1004, 1007, 1171], "loarr": 34, "021fd": 34, "lrarr": 34, "021c6": [34, 38], "lrarr2": 34, "lrhar": 34, "021cb": [34, 38], "lrhar2": 34, "lrhard": 34, "0296d": 34, "lsh": [34, 38], "021b0": [34, 38], "lurdshar": 34, "0294a": 34, "luruhar": 34, "02966": 34, "02905": 34, "021a6": [34, 38], "midcir": 34, "02af0": 34, "mumap": 34, "022b8": [34, 38], "multimap": [34, 38, 295, 568, 645, 654, 658, 687, 786], "nearhk": 34, "02924": 34, "north": [34, 38], "nearr": 34, "021d7": 34, "02197": [34, 38], "nesear": 34, "02928": [34, 38], "AND": [34, 35, 38, 394, 410, 433, 596, 921, 1050], "nharr": 34, "021ce": [34, 38], "stroke": [34, 38], "021ae": [34, 38], "nlarr": 34, "021cd": [34, 38], "0219a": [34, 38], "nrarr": 34, "021cf": [34, 38], "0219b": [34, 38], "nrarrc": 34, "02933": 34, "00338": [34, 38], "directli": [34, 40, 133, 166, 185, 271, 296, 351, 490, 607, 676, 804, 817, 829, 836, 847, 939, 949, 953, 1007, 1030, 1050, 1058, 1121, 1123, 1150], "slash": [34, 38, 917, 1001], "nrarrw": 34, "0219d": [34, 38], "nvharr": 34, "02904": 34, "nvlarr": 34, "02902": 34, "nvrarr": 34, "02903": 34, "nwarhk": 34, "02923": 34, "nwarr": 34, "021d6": 34, "02196": [34, 38], "nwnear": 34, "02927": 34, "olarr": 34, "021ba": [34, 38], "orarr": 34, "021bb": [34, 38], "origof": 34, "022b6": 34, "origin": [34, 35, 38, 60, 62, 126, 152, 167, 173, 175, 180, 185, 191, 203, 235, 239, 245, 248, 250, 255, 258, 283, 294, 299, 303, 304, 306, 307, 309, 313, 321, 325, 329, 331, 335, 337, 343, 347, 432, 448, 492, 495, 546, 593, 601, 602, 603, 631, 682, 683, 685, 686, 744, 748, 751, 753, 764, 806, 833, 834, 857, 860, 861, 876, 890, 1028, 1133, 1144, 1166], "raarr": 34, "021db": [34, 38], "rarr": [34, 36], "021a0": [34, 38], "rarr2": 34, "021c9": [34, 38], "rarrap": 34, "02975": 34, "almost": [34, 35, 38, 61, 63, 172, 185, 194, 231, 411, 459, 461, 482, 597, 662, 690, 738, 754, 1001], "rarrbf": 34, "02920": 34, "rarrc": 34, "rarrf": 34, "0291e": 34, "rarrhk": 34, "021aa": [34, 38], "rarrlp": 34, "021ac": [34, 38], "rarrpl": 34, "02945": 34, "rarrsim": 34, "02974": 34, "rarrtl": 34, "02916": 34, "021a3": [34, 38], "rarrw": 34, "ratail": 34, "0291c": 34, "0291a": 34, "rbarr": 34, "02910": [34, 38], "0290f": [34, 38], "0290d": [34, 38], "rdca": 34, "02937": 34, "rdldhar": 34, "02969": 34, "rdsh": 34, "021b3": 34, "rfisht": 34, "0297d": 34, "rhar": 34, "02964": 34, "rhard": 34, "021c1": [34, 38], "rharu": 34, "021c0": [34, 38], "rharul": 34, "0296c": 34, "rlarr": 34, "021c4": [34, 38], "rlarr2": 34, "rlhar": 34, "021cc": [34, 38], "rlhar2": 34, "roarr": 34, "021fe": 34, "rrarr": 34, "rsh": [34, 38, 608, 940], "021b1": [34, 38], "ruluhar": 34, "02968": 34, "searhk": 34, "02925": [34, 38], "searr": 34, "021d8": 34, "seswar": 34, "02929": [34, 38], "simrarr": 34, "02972": 34, "slarr": 34, "02190": [34, 36, 38], "srarr": 34, "02192": [34, 36, 38], "swarhk": 34, "02926": [34, 38], "swarr": 34, "021d9": 34, "swnwar": 34, "0292a": 34, "uarr": [34, 36], "0219f": 34, "021d1": [34, 38], "uarr2": 34, "021c8": [34, 38], "uarrocir": 34, "02949": 34, "udarr": 34, "021c5": [34, 38], "udhar": 34, "0296e": [34, 38], "ufisht": 34, "0297e": 34, "uhar": 34, "02963": 34, "uharl": 34, "021bf": [34, 38], "uharr": 34, "021be": [34, 38], "uuarr": 34, "varr": 34, "021d5": [34, 38], "02195": [34, 38], "xharr": 34, "027fa": [34, 38], "027f7": [34, 38], "xlarr": 34, "027f8": [34, 38], "027f5": [34, 38], "xmap": 34, "027fc": [34, 38], "xrarr": 34, "027f9": [34, 38], "027f6": [34, 38], "zigrarr": 34, "021dd": 34, "ap": [35, 963], "02a70": 35, "approxim": [35, 38, 172, 268], "OR": [35, 38, 245, 394, 410, 433, 450, 921, 1050], "0224a": [35, 38], "apid": 35, "0224b": 35, "asymp": 35, "02248": [35, 38], "barv": 35, "02ae7": 35, "tack": [35, 38], "overbar": 35, "bcong": 35, "0224c": [35, 38], "bepsi": 35, "003f6": [35, 38], "greek": [35, 38], "revers": [35, 36, 38, 215, 242, 248, 265, 283, 290, 295, 304, 310, 332, 338, 348, 391, 568, 575, 576, 635, 639, 654, 658, 687, 732, 786, 788, 827, 866, 930, 991, 1078, 1111], "lunat": [35, 38], "epsilon": [35, 38], "bowti": 35, "022c8": 35, "bsim": 35, "0223d": [35, 38], "bsime": 35, "022cd": [35, 38], "bsolhsub": 35, "0005c": [35, 36], "02282": [35, 38], "solidu": [35, 36], "subset": [35, 38, 258, 1010, 1023, 1080], "bump": 35, "0224e": [35, 38], "geometr": [35, 38, 262], "equival": [35, 38, 82, 96, 110, 113, 258, 419, 423, 438, 443, 604, 681, 857, 859, 894, 926, 959, 1039, 1061, 1071, 1081], "02aae": 35, "bumpi": 35, "0224f": [35, 38], "between": [35, 38, 73, 93, 107, 141, 170, 171, 172, 174, 180, 181, 191, 206, 218, 231, 239, 242, 245, 250, 252, 255, 258, 262, 265, 280, 283, 290, 304, 309, 322, 332, 335, 338, 344, 351, 361, 395, 398, 411, 433, 438, 445, 458, 463, 472, 483, 504, 514, 536, 544, 608, 625, 684, 740, 750, 754, 765, 787, 788, 792, 838, 864, 865, 870, 930, 937, 967, 977, 991, 992, 993, 994, 1001, 1005, 1039, 1050, 1060, 1062, 1073, 1137, 1189], "cire": 35, "02257": [35, 38], "colon": [35, 36, 38, 1109], "02237": [35, 38], "proport": [35, 38, 171], "02a74": 35, "02254": [35, 38], "congdot": 35, "02a6d": 35, "congruent": [35, 38], "csub": 35, "02acf": 35, "close": [35, 54, 118, 123, 124, 146, 175, 181, 190, 202, 220, 229, 230, 243, 250, 274, 275, 277, 300, 304, 332, 334, 335, 438, 472, 477, 550, 568, 718, 746, 755, 763, 785, 786, 876, 937, 955, 956, 957, 959, 960, 962, 963, 964, 965, 966, 969, 971, 974, 1000, 1004, 1028, 1140, 1197], "csube": 35, "02ad1": 35, "csup": 35, "02ad0": 35, "superset": [35, 38, 1080, 1183], "csupe": 35, "02ad2": 35, "cuepr": 35, "022de": [35, 38], "cuesc": 35, "022df": [35, 38], "succe": [35, 38, 811, 912, 941, 1030], "cupr": 35, "0227c": [35, 38], "dashv": 35, "02ae4": [35, 38], "turnstil": [35, 38], "022a3": [35, 38], "easter": [35, 222], "02a6e": 35, "asterisk": [35, 36, 38], "ecir": 35, "02256": [35, 38], "IN": [35, 38, 174], "ecolon": 35, "02255": [35, 38], "eddot": 35, "02a77": [35, 38], "edot": 35, "02251": [35, 38], "efdot": 35, "02252": [35, 38], "THE": [35, 38, 956], "02a9a": 35, "greater": [35, 36, 38, 110, 128, 297, 410, 538, 544, 552, 555, 590, 732, 786, 819, 1062], "than": [35, 36, 38, 43, 69, 72, 110, 126, 128, 136, 145, 146, 166, 170, 171, 175, 177, 180, 181, 185, 202, 206, 209, 213, 222, 229, 232, 239, 245, 250, 252, 255, 258, 262, 289, 292, 297, 321, 324, 351, 410, 411, 430, 432, 461, 462, 463, 474, 475, 477, 483, 490, 538, 546, 552, 555, 590, 594, 606, 609, 611, 612, 677, 690, 701, 727, 740, 764, 786, 789, 804, 819, 825, 829, 833, 893, 918, 922, 930, 938, 948, 949, 956, 959, 976, 1004, 1008, 1023, 1024, 1039, 1044, 1061, 1062, 1106, 1110, 1140, 1147, 1150, 1166, 1184], "02a96": [35, 38], "slant": [35, 38], "egsdot": 35, "02a98": 35, "el": [35, 218, 229, 265], "02a99": 35, "less": [35, 36, 38, 61, 63, 82, 166, 170, 171, 172, 177, 181, 231, 245, 262, 276, 285, 286, 292, 306, 307, 388, 410, 411, 415, 458, 461, 492, 544, 648, 668, 694, 740, 742, 764, 786, 804, 806, 833, 863, 877, 893, 920, 923, 924, 926, 929, 959, 1044, 1062, 1081, 1159, 1160, 1173, 1184, 1190], "02a95": [35, 38], "elsdot": 35, "02a97": 35, "equest": 35, "0225f": [35, 38], "equivdd": 35, "02a78": 35, "erdot": 35, "02253": [35, 38], "esdot": 35, "02250": [35, 38], "limit": [35, 38, 62, 170, 171, 187, 209, 239, 245, 255, 258, 304, 411, 453, 646, 690, 833, 870, 975, 994, 1036, 1037, 1062, 1135, 1157], "esim": 35, "02a73": 35, "02242": [35, 38], "fork": [35, 43, 145, 172, 187, 191, 786, 792, 793, 795, 800, 803, 810, 814, 824, 837, 842, 848, 851, 854, 929, 962, 975, 983, 1001, 1197], "022d4": [35, 38], "pitchfork": [35, 38], "forkv": 35, "02ad9": 35, "02322": 35, "gap": 35, "02a86": [35, 38], "02267": [35, 38], "gel": 35, "02a8c": [35, 38], "022db": [35, 38], "02a7e": [35, 38], "gescc": 35, "02aa9": 35, "gesdot": 35, "02a80": 35, "gesdoto": 35, "02a82": 35, "gesdotol": 35, "02a84": 35, "gesl": 35, "0fe00": [35, 38], "02a94": 35, "022d9": [35, 38], "02277": [35, 38], "gla": 35, "02aa5": 35, "gle": 35, "02a92": 35, "glj": 35, "02aa4": 35, "overlap": [35, 258, 262, 304, 784, 817, 1042], "gsdot": 35, "022d7": [35, 38], "gsim": 35, "02273": [35, 38], "gsime": 35, "02a8e": 35, "similar": [35, 61, 63, 134, 170, 172, 202, 206, 210, 212, 243, 256, 270, 413, 420, 491, 518, 547, 548, 579, 591, 600, 718, 753, 754, 781, 782, 804, 819, 833, 877, 1023, 1025, 1131], "gsiml": 35, "02a90": 35, "0226b": [35, 38], "gtcc": 35, "02aa7": 35, "gtcir": 35, "02a7a": 35, "gtdot": 35, "gtquest": 35, "02a7c": 35, "mark": [35, 36, 38, 229, 270, 366, 367, 407, 429, 729, 737, 849, 1039, 1041, 1159], "gtrarr": 35, "02978": 35, "homtht": 35, "0223b": 35, "homothet": 35, "lap": 35, "02a85": [35, 38], "lat": 35, "02aab": 35, "larger": [35, 72, 82, 202, 209, 232, 249, 262, 312, 328, 459, 462, 474, 512, 592, 609, 611, 804, 853, 875, 937, 939, 1004, 1024, 1037, 1186], "late": [35, 170, 172, 295, 297, 753, 754, 939, 995, 1039, 1056, 1073, 1187], "02aad": 35, "ldot": 35, "022d6": [35, 38], "le": [35, 512], "02266": [35, 38], "02a8b": [35, 38], "022da": [35, 38], "02a7d": [35, 38], "lescc": 35, "02aa8": 35, "lesdot": 35, "02a7f": 35, "lesdoto": 35, "02a81": 35, "lesdotor": 35, "02a83": 35, "lesg": 35, "02a93": 35, "lg": [35, 310, 326, 1144], "02276": [35, 38], "lge": 35, "02a91": 35, "ll": [35, 38, 61, 63, 65, 128, 169, 170, 171, 173, 175, 177, 180, 185, 186, 198, 200, 210, 212, 226, 255, 258, 286, 289, 292, 533, 547, 609, 611, 612, 833, 859, 930, 939, 950, 965, 1012, 1015, 1021, 1054, 1147], "022d8": 35, "lsim": 35, "02272": [35, 38], "lsime": 35, "02a8d": 35, "lsimg": 35, "02a8f": 35, "0226a": [35, 38], "ltcc": 35, "02aa6": 35, "ltcir": 35, "02a79": 35, "ltdot": 35, "ltlarr": 35, "02976": 35, "ltquest": 35, "02a7b": 35, "ltrie": 35, "022b4": [35, 38], "normal": [35, 38, 92, 158, 170, 172, 177, 185, 188, 193, 202, 262, 450, 477, 482, 487, 606, 608, 849, 865, 870, 991, 1005, 1058, 1137, 1150, 1164, 1176], "mcomma": 35, "02a29": 35, "comma": [35, 36, 208, 221, 242, 322, 1139], "mddot": 35, "0223a": 35, "mid": 35, "02223": [35, 38], "mlcp": 35, "02adb": 35, "transvers": 35, "intersect": [35, 38, 226, 250, 322, 1080], "model": [35, 126, 273, 288, 294, 297, 449, 1062, 1134, 1137, 1156], "022a7": 35, "mstpo": 35, "0223e": 35, "invert": [35, 36, 62, 202, 973], "lazi": [35, 239, 245, 255, 258, 402, 749], "02abb": 35, "0227a": [35, 38], "prap": 35, "02ab7": [35, 38], "prcue": 35, "pre": [35, 172, 202, 231, 412, 594, 596, 600, 646, 647, 648, 698, 739, 740, 893, 1055, 1070, 1143], "02ab3": 35, "02aaf": [35, 38], "singl": [35, 36, 38, 44, 61, 62, 63, 88, 110, 114, 115, 118, 123, 124, 128, 133, 136, 146, 152, 170, 172, 190, 229, 230, 239, 243, 245, 251, 252, 255, 258, 262, 286, 388, 394, 406, 407, 419, 465, 468, 472, 474, 477, 503, 516, 601, 655, 729, 740, 748, 750, 761, 792, 802, 804, 866, 868, 869, 870, 893, 898, 899, 900, 902, 918, 930, 938, 942, 978, 989, 991, 992, 1001, 1004, 1008, 1010, 1013, 1019, 1023, 1024, 1025, 1038, 1075, 1076, 1083, 1098, 1104, 1137, 1144, 1152, 1155, 1159, 1164, 1165, 1172], "prsim": 35, "0227e": [35, 38], "prurel": 35, "022b0": 35, "ratio": [35, 262], "02236": 35, "rtrie": 35, "022b5": [35, 38], "AS": [35, 38, 956], "rtriltri": 35, "029ce": 35, "triangl": [35, 38, 568], "samalg": 35, "02210": [35, 38], "coproduct": [35, 38], "02abc": 35, "0227b": [35, 38], "scap": 35, "02ab8": [35, 38], "sccue": 35, "0227d": [35, 38], "sce": 35, "02ab4": 35, "02ab0": [35, 38], "scsim": 35, "0227f": [35, 38], "sdote": 35, "02a66": 35, "sfrown": 35, "simg": 35, "02a9e": 35, "02aa0": 35, "siml": 35, "02a9d": 35, "02a9f": 35, "smid": 35, "02323": 35, "smt": 35, "02aaa": 35, "smaller": [35, 248, 262, 388, 450, 459, 474, 1025], "smte": 35, "02aac": 35, "spar": [35, 288, 474], "02225": [35, 38], "parallel": [35, 38, 61, 63, 76, 77, 78, 82, 95, 176, 199, 202, 206, 208, 243, 298, 299, 320, 482, 762, 786, 823, 825, 833, 836, 869, 877, 978, 989, 992, 1039, 1041, 1042, 1126, 1131, 1188, 1189, 1196, 1200], "sqsub": 35, "0228f": [35, 38], "squar": [35, 36, 38, 62, 190, 203, 213, 229, 235, 242, 245, 250, 252, 258, 262, 271, 283, 297, 304, 322, 326, 332, 338, 344, 500, 611, 1033, 1082, 1085, 1152], "sqsube": 35, "02291": [35, 38], "sqsup": 35, "02290": [35, 38], "sqsupe": 35, "02292": [35, 38], "ssmile": 35, "sub": [35, 246, 258, 304, 495, 512, 592, 771, 1029, 1068, 1077, 1083, 1173], "022d0": [35, 38], "sube": 35, "02ac5": [35, 38], "subedot": 35, "02ac3": 35, "submult": 35, "02ac1": 35, "subplu": 35, "02abf": 35, "subrarr": 35, "02979": 35, "subsim": 35, "02ac7": 35, "subsub": 35, "02ad5": 35, "subsup": 35, "02ad3": 35, "sup": [35, 963], "022d1": [35, 38], "supdsub": 35, "02ad8": 35, "supe": 35, "02ac6": [35, 38], "supedot": 35, "02ac4": 35, "suphsol": 35, "02283": [35, 38], "0002f": [35, 36], "suphsub": 35, "02ad7": 35, "suplarr": 35, "0297b": 35, "supmult": 35, "02ac2": 35, "supplu": 35, "02ac0": 35, "supsim": 35, "02ac8": 35, "supsub": 35, "02ad4": 35, "supsup": 35, "02ad6": 35, "thkap": 35, "thksim": 35, "0223c": [35, 38], "topfork": 35, "02ada": 35, "tee": [35, 877], "trie": 35, "0225c": [35, 38], "delta": [35, 38, 126, 185, 235], "twixt": 35, "0226c": [35, 38], "vbar": 35, "02aeb": 35, "02ae8": 35, "underbar": 35, "vbarv": 35, "02ae9": 35, "vdash": 35, "022ab": 35, "022a9": 35, "022a8": [35, 38], "022a2": [35, 38], "vdashl": 35, "02ae6": 35, "veebar": 35, "022bb": 35, "xor": [35, 1050], "vltri": 35, "022b2": [35, 38], "vprop": 35, "0221d": [35, 38], "vrtri": 35, "022b3": [35, 38], "vvdash": 35, "022aa": 35, "\u00bd": 36, "\u00bc": 36, "\u215b": 36, "\u00be": 36, "\u215c": 36, "\u215d": 36, "\u215e": 36, "_": [36, 39, 62, 190, 191, 226, 239, 242, 243, 245, 252, 255, 258, 265, 268, 280, 304, 326, 348, 357, 405, 474, 604, 727, 823, 893, 995, 1021, 1039, 1041], "\u00b5": 36, "\u03c9": 36, "\u00aa": 36, "\u00ba": 36, "\u00b9": 36, "\u00b2": 36, "\u00b3": 36, "amp": [36, 242], "00026": 36, "ampersand": [36, 703], "apo": 36, "00027": 36, "apostroph": 36, "ast": [36, 512], "0002a": 36, "brvbar": 36, "000a6": 36, "broken": [36, 448, 449, 718, 825, 838, 1043, 1109, 1139], "bsol": 36, "cent": 36, "000a2": 36, "0003a": 36, "0002c": 36, "commat": 36, "00040": 36, "commerci": [36, 177, 811, 872], "AT": 36, "000a9": 36, "curren": 36, "000a4": 36, "currenc": [36, 288, 474], "02193": [36, 38], "deg": 36, "000b0": 36, "degre": [36, 491, 502, 533, 644, 939, 1056], "000f7": [36, 38], "00024": 36, "0003d": 36, "excl": 36, "00021": 36, "frac12": 36, "000bd": 36, "vulgar": 36, "fraction": [36, 262, 351], "ONE": [36, 691], "frac14": 36, "000bc": 36, "quarter": 36, "frac18": 36, "0215b": 36, "eighth": 36, "frac34": 36, "000be": 36, "frac38": 36, "0215c": 36, "frac58": 36, "0215d": 36, "frac78": 36, "0215e": 36, "0003e": 36, "horbar": 36, "02015": 36, "horizont": [36, 407], "hyphen": 36, "02010": 36, "iexcl": 36, "000a1": 36, "iquest": 36, "000bf": 36, "laquo": 36, "000ab": 36, "quotat": [36, 38], "lcub": 36, "0007b": [36, 38], "curli": [36, 38], "bracket": [36, 38, 1059], "ldquo": 36, "0201c": [36, 38], "lowbar": 36, "0005f": 36, "low": [36, 123, 129, 166, 213, 242, 262, 279, 400, 432, 468, 472, 477, 500, 523, 536, 539, 540, 544, 748, 750, 815, 829, 869, 937, 993, 1009, 1088, 1186], "lpar": 36, "00028": 36, "parenthesi": 36, "lsqb": 36, "0005b": [36, 38], "lsquo": 36, "02018": [36, 38], "0003c": 36, "micro": [36, 239, 245, 255, 258], "000b5": 36, "middot": 36, "000b7": [36, 38], "middl": [36, 38, 39, 62, 180, 191, 246, 262, 314, 317, 347, 348, 452, 472, 539, 568, 811, 930, 940, 946, 1007, 1041], "nbsp": [36, 348], "000a0": [36, 38], "NO": [36, 38, 146, 181, 222, 362, 671, 939, 1004], "space": [36, 38, 62, 82, 103, 114, 115, 128, 149, 166, 170, 171, 172, 177, 190, 193, 217, 231, 258, 276, 283, 285, 286, 304, 306, 307, 356, 367, 368, 376, 395, 414, 416, 435, 496, 501, 510, 514, 538, 539, 540, 541, 542, 543, 544, 545, 548, 590, 599, 608, 643, 763, 785, 786, 794, 831, 846, 860, 861, 862, 863, 867, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 907, 908, 909, 910, 911, 913, 929, 938, 941, 942, 943, 944, 945, 952, 956, 957, 958, 959, 960, 968, 970, 975, 983, 984, 986, 987, 990, 992, 1000, 1007, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1024, 1039, 1042, 1076], "000ac": 36, "NOT": [36, 38, 200, 394, 433, 478, 517, 518, 531, 532, 804, 921, 1150], "num": [36, 175, 189, 190, 203, 213, 229, 243, 245, 250, 252, 258, 262, 280, 283, 322, 326, 344, 348, 438, 623, 625, 707, 708, 709, 710, 719, 739, 770, 772, 774, 776, 921, 926, 1034, 1139], "00023": 36, "ohm": 36, "02126": 36, "ordf": 36, "000aa": 36, "feminin": 36, "ordin": [36, 258, 265, 268, 304, 310, 326, 332, 338, 1144], "indic": [36, 221, 239, 245, 250, 255, 258, 294, 646, 794], "ordm": 36, "000ba": 36, "masculin": 36, "para": 36, "000b6": 36, "pilcrow": 36, "percnt": 36, "00025": 36, "percent": [36, 262], "period": [36, 88, 137, 141, 187, 210, 466, 599, 765, 843, 930, 938, 957, 967, 989, 991, 1004, 1159], "0002e": 36, "full": [36, 138, 146, 188, 233, 237, 283, 411, 426, 454, 459, 562, 573, 608, 712, 749, 762, 786, 872, 877, 938, 980, 986, 1031, 1050, 1083, 1139, 1147], "stop": [36, 164, 175, 231, 258, 295, 297, 299, 304, 322, 332, 350, 477, 517, 531, 827, 930, 1005, 1030, 1153, 1171], "0002b": 36, "plusmn": 36, "000b1": [36, 38], "000a3": 36, "quest": 36, "0003f": 36, "quot": [36, 190, 238, 241, 245, 252, 258, 266, 407, 858, 921, 922, 940, 1075], "00022": 36, "raquo": 36, "000bb": 36, "rcub": 36, "0007d": [36, 38], "rdquo": 36, "0201d": [36, 38], "reg": 36, "000ae": [36, 38], "rpar": 36, "00029": 36, "rsqb": 36, "0005d": [36, 38], "rsquo": 36, "02019": [36, 38], "sect": 36, "000a7": 36, "section": [36, 38, 92, 170, 174, 175, 176, 185, 194, 207, 231, 289, 292, 295, 383, 576, 594, 676, 761, 823, 825, 893, 936, 937, 953, 1007, 1008, 1009, 1011, 1017, 1023, 1024, 1025, 1164], "semi": [36, 290, 324, 504, 748, 975, 1026], "0003b": 36, "semicolon": [36, 477, 1139], "shy": 36, "000ad": 36, "soft": [36, 167, 372, 831], "sol": 36, "sung": 36, "0266a": 36, "sup1": 36, "000b9": 36, "superscript": 36, "sup2": 36, "000b2": 36, "sup3": 36, "000b3": 36, "000d7": 36, "trade": 36, "02122": 36, "02191": [36, 38], "verbar": 36, "0007c": [36, 38], "000a5": 36, "lorem": 37, "ipsum": 37, "h\u00f6dlmoser": 37, "anywai": [37, 43, 53, 60, 169, 171, 172, 181, 200, 202, 222, 231, 232, 258, 414, 462, 468, 472, 478, 594, 600, 609, 611, 612, 690, 698, 701, 705, 739, 740, 750, 825, 833, 872, 893, 983, 1039, 1150, 1164], "hmm": [37, 167, 176, 189, 200, 579, 712, 1004], "annoi": [37, 43, 351, 474, 690, 1164], "thing": [37, 40, 42, 43, 49, 104, 141, 163, 169, 170, 172, 173, 174, 175, 176, 177, 181, 190, 194, 198, 201, 202, 206, 210, 222, 239, 245, 246, 248, 255, 258, 268, 321, 331, 354, 412, 428, 432, 456, 462, 465, 472, 496, 500, 568, 575, 576, 592, 594, 601, 606, 608, 630, 690, 712, 729, 753, 762, 784, 792, 797, 829, 833, 858, 872, 877, 926, 930, 931, 958, 963, 986, 991, 1007, 1019, 1023, 1024, 1030, 1044, 1058, 1081, 1171, 1189], "thin": [37, 38], "border": 37, "anfrag": [37, 1180, 1181, 1182, 1183, 1188, 1190, 1191, 1195, 1196, 1197, 1198, 1200, 1201, 1202], "dauer": [37, 1180, 1181, 1182, 1183, 1188, 1190, 1191, 1195, 1196, 1197, 1198, 1200, 1201, 1202], "tage": [37, 195, 197, 205, 382, 1180, 1181, 1182, 1183, 1188, 1190, 1191, 1195, 1197, 1198, 1200, 1201, 1202], "sysprog": [37, 166, 167, 286, 384, 786, 840, 845, 929, 970, 971, 974, 1197, 1198, 1200, 1201], "catcher": 37, "somehow": [37, 42, 134, 141, 145, 154, 171, 324, 606, 841, 1159, 1160], "einf\u00fchrungskur": [37, 1180, 1197, 1198, 1200, 1201], "richtet": [37, 1182, 1197], "kennen": [37, 150, 366, 1197], "lernen": [37, 1197], "zusammenh\u00e4ng": [37, 1197], "grundpfeil": [37, 1197], "erkl\u00e4rt": [37, 190, 193, 197, 1181, 1197, 1201, 1202], "bild": [37, 193, 1197], "orientieren": [37, 1197], "zurechtfinden": [37, 150, 366, 1197], "somedai": 37, "better": [37, 57, 60, 69, 118, 119, 127, 145, 164, 166, 167, 171, 175, 181, 182, 192, 202, 203, 205, 206, 208, 209, 210, 213, 214, 227, 231, 237, 239, 240, 242, 243, 248, 249, 250, 252, 253, 256, 259, 262, 267, 271, 279, 286, 299, 303, 309, 347, 391, 403, 411, 418, 427, 432, 433, 434, 440, 444, 447, 451, 452, 460, 462, 464, 469, 470, 473, 477, 482, 483, 488, 490, 568, 595, 603, 617, 630, 647, 670, 682, 685, 690, 692, 730, 742, 753, 783, 785, 786, 833, 912, 938, 939, 959, 975, 978, 1004, 1005, 1033, 1044, 1062, 1076, 1088, 1127, 1128, 1131, 1136, 1138, 1143, 1149, 1164, 1173], "yet": [37, 82, 160, 170, 177, 180, 190, 192, 259, 260, 270, 283, 321, 429, 462, 490, 499, 512, 514, 549, 550, 562, 568, 661, 764, 833, 850, 860, 861, 938, 946, 950, 1004, 1031, 1061, 1088, 1155, 1164, 1173], "redefin": 37, "wrap": [37, 62, 229, 267, 321, 511, 750, 756, 833, 1156], "look": [37, 42, 43, 45, 61, 63, 69, 86, 93, 106, 128, 133, 141, 146, 163, 164, 169, 170, 171, 172, 173, 175, 177, 180, 185, 190, 198, 202, 206, 209, 221, 227, 231, 256, 286, 289, 292, 295, 296, 314, 317, 321, 335, 350, 383, 446, 454, 462, 468, 472, 474, 477, 478, 485, 533, 548, 549, 562, 579, 605, 617, 629, 681, 694, 718, 750, 756, 757, 787, 792, 802, 829, 833, 860, 861, 865, 869, 872, 883, 885, 890, 897, 905, 920, 931, 937, 938, 946, 963, 973, 1000, 1001, 1024, 1028, 1038, 1055, 1058, 1096, 1100, 1109, 1131, 1138, 1139, 1150, 1166, 1184, 1187], "mdbootstrap": 37, "jqueri": 37, "icon": 37, "longrightarrow": 38, "rightarrow": 38, "doubleleftrightarrow": 38, "02220": 38, "applyfunct": 38, "02061": 38, "applic": [38, 62, 82, 98, 141, 155, 170, 175, 187, 200, 222, 317, 321, 324, 362, 383, 458, 461, 468, 549, 626, 629, 697, 738, 871, 931, 938, 950, 975, 1138], "approx": [38, 1119, 1164], "approxeq": 38, "assign": [38, 101, 190, 191, 192, 197, 203, 213, 220, 228, 239, 242, 245, 248, 250, 254, 255, 260, 262, 266, 290, 294, 295, 297, 322, 327, 338, 345, 349, 365, 371, 372, 394, 411, 417, 418, 427, 434, 440, 441, 444, 447, 451, 456, 458, 460, 464, 469, 470, 504, 511, 517, 518, 526, 531, 532, 594, 595, 598, 605, 661, 670, 677, 687, 691, 692, 694, 698, 705, 728, 730, 735, 744, 750, 782, 783, 785, 786, 937, 939, 978, 989, 992, 994, 1071, 1082, 1153, 1155], "backcong": 38, "backepsilon": 38, "backprim": 38, "02035": 38, "backsim": 38, "backsimeq": 38, "backslash": [38, 407, 917, 1075], "02216": 38, "barwedg": 38, "02305": 38, "02235": 38, "bernoulli": 38, "0212c": 38, "bigcap": 38, "022c2": 38, "bigcirc": 38, "025ef": 38, "bigcup": 38, "022c3": 38, "union": [38, 226, 234, 250, 322, 450, 767, 771, 774, 775, 776, 777, 785, 786, 1080, 1185], "bigodot": 38, "02a00": 38, "bigoplu": 38, "02a01": 38, "bigotim": 38, "02a02": 38, "bigsqcup": 38, "02a06": 38, "bigstar": 38, "02605": 38, "bigtriangledown": 38, "025bd": 38, "white": [38, 294, 396], "bigtriangleup": 38, "025b3": 38, "biguplu": 38, "02a04": 38, "bigve": 38, "022c1": 38, "logic": [38, 129, 172, 354, 402, 418, 427, 432, 434, 440, 444, 447, 451, 456, 460, 464, 469, 470, 497, 514, 692, 730, 783, 785, 786, 1150], "bigwedg": 38, "022c0": 38, "bkarow": 38, "blacklozeng": 38, "029eb": 38, "lozeng": 38, "blacksquar": 38, "025aa": 38, "blacktriangl": 38, "025b4": 38, "blacktriangledown": 38, "025be": 38, "blacktriangleleft": 38, "025c2": 38, "blacktriangleright": 38, "025b8": 38, "bot": [38, 1164], "022a5": 38, "boxminu": 38, "0229f": 38, "boxplu": 38, "0229e": 38, "boxtim": 38, "022a0": 38, "breve": 38, "002d8": 38, "bullet": [38, 172, 1138], "02022": 38, "bumpeq": 38, "capitaldifferentiald": 38, "02145": 38, "struck": 38, "ital": 38, "d": [38, 89, 101, 111, 125, 128, 170, 171, 172, 173, 189, 192, 200, 203, 208, 213, 218, 220, 226, 229, 232, 235, 236, 240, 242, 243, 245, 250, 252, 255, 258, 262, 265, 268, 280, 283, 286, 290, 299, 300, 303, 304, 310, 318, 322, 326, 332, 338, 344, 348, 357, 359, 360, 365, 388, 395, 396, 398, 402, 429, 433, 462, 472, 474, 488, 495, 500, 594, 600, 607, 661, 662, 667, 668, 670, 674, 700, 737, 749, 750, 762, 764, 806, 827, 841, 857, 860, 861, 870, 872, 876, 877, 890, 893, 894, 915, 919, 921, 926, 932, 937, 938, 939, 951, 956, 1004, 1007, 1029, 1031, 1057, 1063, 1068, 1070, 1071, 1075, 1076, 1079, 1099], "caylei": 38, "0212d": 38, "letter": [38, 69, 405, 1061], "cedilla": 38, "000b8": 38, "centerdot": 38, "checkmark": 38, "02713": 38, "circeq": 38, "circlearrowleft": 38, "circlearrowright": 38, "circledast": 38, "0229b": 38, "circledcirc": 38, "0229a": 38, "circleddash": 38, "0229d": 38, "circledot": 38, "02299": 38, "circledr": 38, "024c8": 38, "latin": [38, 249, 310, 326], "circleminu": 38, "02296": 38, "circleplu": 38, "02295": 38, "circletim": 38, "02297": 38, "clockwisecontourintegr": 38, "02232": 38, "contour": 38, "closecurlydoublequot": 38, "closecurlyquot": 38, "clubsuit": 38, "02663": 38, "suit": [38, 44, 101, 133, 166, 206, 275, 279, 373, 450, 459, 490, 491, 492, 494, 495, 497, 499, 512, 514, 515, 533, 546, 547, 548, 549, 550, 609, 610, 611, 612, 701, 702, 739, 748, 749, 780, 781, 782, 784, 1165, 1172, 1187, 1202], "coloneq": 38, "complement": [38, 110, 411], "02201": 38, "complex": [38, 73, 170, 181, 185, 202, 208, 228, 245, 250, 252, 258, 262, 266, 268, 283, 290, 304, 332, 365, 386, 429, 441, 456, 765, 937, 938, 962, 978, 1001, 1062, 1071, 1177, 1187], "02102": 38, "02261": 38, "ident": [38, 254, 304, 316, 585, 1050, 1052, 1071], "contourintegr": 38, "0222e": 38, "counterclockwisecontourintegr": 38, "02233": 38, "cupcap": 38, "0224d": 38, "curlyeqprec": 38, "curlyeqsucc": 38, "curlyve": 38, "022ce": 38, "curlywedg": 38, "022cf": 38, "curvearrowleft": 38, "curvearrowright": 38, "dbkarow": 38, "ddagger": 38, "02021": 38, "ddotseq": 38, "02207": 38, "nabla": 38, "diacriticalacut": 38, "000b4": 38, "acut": 38, "accent": 38, "diacriticaldot": 38, "002d9": 38, "diacriticaldoubleacut": 38, "002dd": 38, "diacriticalgrav": 38, "00060": 38, "grave": 38, "diacriticaltild": 38, "002dc": 38, "022c4": 38, "diamondsuit": 38, "02666": 38, "differentiald": 38, "02146": 38, "digamma": 38, "003dd": 38, "div": [38, 462, 512], "divideontim": 38, "022c7": 38, "doteq": 38, "doteqdot": 38, "dotequ": 38, "dotminu": 38, "02238": 38, "dotplu": 38, "02214": 38, "dotsquar": 38, "022a1": 38, "doublebarwedg": 38, "02306": 38, "doublecontourintegr": 38, "0222f": 38, "surfac": [38, 202, 869, 937, 938, 1136, 1138], "doubledot": 38, "000a8": 38, "diaeresi": 38, "doubledownarrow": 38, "doubleleftarrow": 38, "021d0": 38, "doubleleftte": 38, "doublelongleftarrow": 38, "doublelongleftrightarrow": 38, "doublelongrightarrow": 38, "doublerightarrow": 38, "021d2": 38, "doublerightte": 38, "doubleuparrow": 38, "doubleupdownarrow": 38, "doubleverticalbar": 38, "downarrow": 38, "downarrowuparrow": 38, "downdownarrow": 38, "downharpoonleft": 38, "downharpoonright": 38, "downleftvector": 38, "downrightvector": 38, "downte": 38, "022a4": 38, "downteearrow": 38, "021a7": 38, "drbkarow": 38, "02208": 38, "emptyset": 38, "02205": 38, "eqcirc": 38, "eqcolon": 38, "eqsim": 38, "eqslantgtr": 38, "eqslantless": 38, "equaltild": 38, "equilibrium": 38, "02203": 38, "THERE": [38, 596], "02130": 38, "exponential": 38, "02147": 38, "fallingdotseq": 38, "foral": [38, 1082], "02200": 38, "FOR": [38, 181, 203, 210], "fouriertrf": 38, "02131": 38, "geq": 38, "02265": 38, "geqq": 38, "geqslant": 38, "ggg": 38, "gnapprox": 38, "02a8a": 38, "gneq": 38, "02a88": 38, "gneqq": 38, "02269": 38, "BUT": 38, "greaterequ": 38, "greaterequalless": 38, "greaterfullequ": 38, "greaterless": 38, "greaterslantequ": 38, "greatertild": 38, "gtrapprox": 38, "gtrdot": 38, "gtreqless": 38, "gtreqqless": 38, "gtrless": 38, "gtrsim": 38, "gvertneqq": 38, "hacek": 38, "002c7": 38, "caron": 38, "hbar": 38, "0210f": 38, "planck": 38, "constant": [38, 231, 239, 245, 248, 249, 250, 255, 258, 262, 300, 321, 394, 402, 403, 408, 418, 422, 427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 535, 642, 692, 703, 730, 740, 742, 783, 785, 786], "pi": [38, 67, 82, 110, 128, 146, 182, 186, 212, 242, 245, 286, 325, 371, 382, 384, 408, 435, 438, 456, 546, 549, 550, 605, 625, 705, 766, 786, 810, 814, 837, 842, 848, 851, 854, 929, 936, 938, 939, 950, 995, 1008, 1010, 1017, 1018, 1021, 1062], "heartsuit": 38, "02665": 38, "hilbertspac": 38, "0210b": 38, "h": [38, 42, 44, 101, 118, 124, 128, 137, 141, 142, 143, 144, 146, 172, 177, 193, 196, 198, 203, 209, 213, 218, 231, 232, 239, 242, 243, 250, 252, 262, 275, 286, 297, 332, 335, 344, 348, 387, 388, 390, 394, 396, 398, 406, 429, 430, 432, 438, 445, 453, 455, 459, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 490, 491, 492, 493, 494, 495, 497, 499, 502, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 556, 558, 559, 560, 561, 563, 564, 565, 566, 567, 569, 575, 576, 578, 579, 582, 585, 587, 592, 593, 594, 595, 600, 601, 602, 603, 605, 606, 607, 608, 609, 610, 611, 612, 670, 679, 680, 681, 682, 683, 684, 685, 686, 695, 697, 700, 701, 702, 718, 719, 722, 733, 736, 739, 740, 744, 748, 749, 750, 751, 753, 762, 764, 766, 770, 772, 774, 775, 776, 777, 780, 781, 782, 784, 792, 797, 801, 802, 804, 811, 813, 815, 817, 819, 821, 825, 827, 829, 838, 843, 846, 847, 850, 852, 853, 859, 870, 877, 890, 893, 915, 921, 931, 933, 937, 953, 955, 956, 957, 959, 960, 962, 963, 964, 965, 966, 969, 971, 974, 988, 991, 995, 997, 999, 1000, 1004, 1005, 1007, 1008, 1009, 1010, 1015, 1019, 1022, 1023, 1025, 1068, 1083, 1159, 1166, 1171, 1173, 1176], "hksearow": 38, "hkswarow": 38, "hookleftarrow": 38, "hookrightarrow": 38, "hslash": 38, "humpdownhump": 38, "humpequ": 38, "iiiint": 38, "02a0c": 38, "quadrupl": 38, "iiint": 38, "0222d": 38, "02111": 38, "imaginaryi": 38, "02148": 38, "imaglin": 38, "02110": 38, "imagpart": 38, "impli": [38, 754, 1159], "02124": 38, "0222b": 38, "interc": 38, "022ba": 38, "intercal": 38, "intprod": 38, "02a3c": 38, "interior": 38, "invisiblecomma": 38, "02063": 38, "invis": [38, 518], "invisibletim": 38, "02062": 38, "langl": 38, "02329": 38, "laplacetrf": 38, "02112": 38, "lbrace": 38, "lbrack": 38, "leftanglebracket": 38, "leftarrow": 38, "leftarrowbar": 38, "021e4": 38, "leftarrowrightarrow": 38, "leftarrowtail": 38, "leftceil": 38, "02308": 38, "ceil": [38, 230, 243, 262, 332], "leftdoublebracket": 38, "0301a": 38, "leftdownvector": 38, "leftfloor": 38, "0230a": 38, "leftharpoondown": 38, "leftharpoonup": 38, "leftleftarrow": 38, "leftrightarrow": 38, "leftrightharpoon": 38, "leftrightsquigarrow": 38, "leftte": 38, "leftteearrow": 38, "021a4": 38, "leftthreetim": 38, "022cb": 38, "semidirect": 38, "lefttriangl": 38, "lefttriangleequ": 38, "leftupvector": 38, "leftvector": 38, "leq": 38, "02264": 38, "leqq": 38, "leqslant": 38, "lessapprox": 38, "lessdot": 38, "lesseqgtr": 38, "lesseqqgtr": 38, "lessequalgreat": 38, "lessfullequ": 38, "lessgreat": 38, "lessgtr": 38, "lesssim": 38, "lessslantequ": 38, "lesstild": 38, "llcorner": 38, "0231e": 38, "bottom": [38, 217, 321, 533, 546, 831, 893, 912, 930, 1030], "corner": [38, 231, 294, 383, 395, 475, 487, 546, 762], "lleftarrow": 38, "lmoustach": 38, "023b0": 38, "upper": [38, 203, 226, 250, 252, 258, 268, 283, 290, 304, 326, 338, 350, 359, 388, 392, 408, 432, 992, 1092], "lower": [38, 172, 226, 239, 245, 250, 255, 258, 262, 268, 283, 304, 350, 359, 388, 392, 408, 432, 492, 636, 993, 1001, 1050, 1155], "lnapprox": 38, "02a89": 38, "lneq": 38, "02a87": 38, "lneqq": 38, "02268": 38, "longleftarrow": 38, "longleftrightarrow": 38, "longmapsto": 38, "looparrowleft": 38, "looparrowright": 38, "lowerleftarrow": 38, "lowerrightarrow": 38, "025ca": 38, "lrcorner": 38, "0231f": 38, "lvertneqq": 38, "maltes": 38, "02720": 38, "mapsto": 38, "measuredangl": 38, "02221": 38, "measur": [38, 101, 133, 136, 146, 172, 262, 295, 299, 321, 331, 458, 465, 511, 515, 537, 538, 539, 540, 541, 542, 543, 544, 548, 549, 590, 668, 770, 786, 792, 859, 868, 959, 1000, 1024, 1136, 1138], "mellintrf": 38, "02133": 38, "minusplu": 38, "02213": 38, "napprox": 38, "02249": 38, "0266e": 38, "music": [38, 172, 300], "02115": 38, "nearrow": 38, "negativemediumspac": 38, "0200b": 38, "width": [38, 239, 245, 248, 249, 255, 258, 280, 288, 304, 388, 411, 500, 585, 609, 930, 1001, 1076, 1139, 1188, 1195], "negativethickspac": 38, "negativethinspac": 38, "negativeverythinspac": 38, "nestedgreatergreat": 38, "nestedlessless": 38, "nexist": 38, "02204": 38, "ngeq": 38, "02271": 38, "neither": [38, 190, 490, 517, 531, 701, 878, 880, 881, 963, 1072], "nor": [38, 190, 246, 517, 531, 601, 701, 878, 880, 881, 930, 950, 963, 1072], "ngeqq": 38, "ngeqslant": 38, "ngtr": 38, "0226f": 38, "nleftarrow": 38, "nleftrightarrow": 38, "nleq": 38, "02270": 38, "nleqq": 38, "nleqslant": 38, "nless": 38, "0226e": 38, "nonbreakingspac": 38, "notcongru": 38, "02262": 38, "notdoubleverticalbar": 38, "02226": 38, "notel": 38, "02209": 38, "notequ": 38, "02260": 38, "notequaltild": 38, "notexist": 38, "notgreat": 38, "notgreaterequ": 38, "notgreaterfullequ": 38, "notgreatergreat": 38, "notgreaterless": 38, "02279": 38, "notgreaterslantequ": 38, "notgreatertild": 38, "02275": 38, "nothumpdownhump": 38, "notlefttriangl": 38, "022ea": 38, "notlefttriangleequ": 38, "022ec": 38, "notless": 38, "notlessequ": 38, "notlessgreat": 38, "02278": 38, "notlessless": 38, "notlessslantequ": 38, "notlesstild": 38, "02274": 38, "notpreced": 38, "02280": 38, "notprecedesequ": 38, "notprecedesslantequ": 38, "022e0": 38, "notreverseel": 38, "0220c": 38, "notrighttriangl": 38, "022eb": 38, "notrighttriangleequ": 38, "022ed": 38, "notsquaresubsetequ": 38, "022e2": 38, "notsquaresupersetequ": 38, "022e3": 38, "notsubset": 38, "020d2": 38, "notsubsetequ": 38, "02288": 38, "notsucce": 38, "02281": 38, "notsucceedsequ": 38, "notsucceedsslantequ": 38, "022e1": 38, "notsuperset": 38, "notsupersetequ": 38, "02289": 38, "nottild": 38, "02241": 38, "nottildeequ": 38, "02244": 38, "asymptot": 38, "nottildefullequ": 38, "02247": 38, "actual": [38, 42, 43, 48, 60, 65, 172, 175, 180, 185, 202, 229, 239, 245, 248, 255, 258, 262, 289, 292, 294, 324, 368, 492, 502, 661, 668, 690, 748, 792, 930, 938, 962, 1005, 1028, 1044, 1053, 1086, 1134, 1136, 1138, 1157, 1171], "nottildetild": 38, "notverticalbar": 38, "02224": 38, "nparallel": 38, "nprec": 38, "npreceq": 38, "nrightarrow": 38, "nshortmid": 38, "nshortparallel": 38, "nsimeq": 38, "nsubset": 38, "nsubseteq": 38, "nsubseteqq": 38, "nsucc": 38, "nsucceq": 38, "nsupset": 38, "nsupseteq": 38, "nsupseteqq": 38, "ntriangleleft": 38, "ntrianglelefteq": 38, "ntriangleright": 38, "ntrianglerighteq": 38, "nwarrow": 38, "oint": 38, "opencurlydoublequot": 38, "opencurlyquot": 38, "orderof": 38, "02134": 38, "partiald": 38, "02202": 38, "partial": [38, 118, 122, 296, 325, 811, 1135], "differenti": [38, 73, 684, 752, 833, 878, 937, 1062, 1130, 1144], "plusminu": 38, "poincareplan": 38, "0210c": 38, "prec": 38, "precapprox": 38, "preccurlyeq": 38, "precedesequ": 38, "precedesslantequ": 38, "precedestild": 38, "preceq": 38, "precnapprox": 38, "02ab9": 38, "precneqq": 38, "02ab5": 38, "precnsim": 38, "022e8": 38, "precsim": 38, "02119": 38, "propto": 38, "quaternion": 38, "0210d": 38, "questeq": 38, "rangl": 38, "0232a": 38, "0211a": 38, "q": [38, 128, 210, 262, 432, 438, 592, 610, 611, 625, 753, 870, 893, 925, 1000, 1159], "rbrace": 38, "rbrack": 38, "0211c": 38, "realin": 38, "0211b": 38, "realpart": 38, "real": [38, 77, 129, 135, 139, 141, 144, 145, 146, 161, 177, 180, 185, 188, 190, 206, 227, 240, 245, 246, 253, 255, 258, 262, 267, 270, 280, 288, 294, 303, 309, 321, 344, 351, 412, 461, 468, 482, 488, 494, 511, 533, 541, 542, 543, 544, 545, 549, 591, 592, 597, 712, 727, 745, 748, 794, 833, 870, 871, 893, 930, 938, 950, 991, 1077, 1131, 1134, 1136, 1165, 1184, 1187], "0211d": 38, "reverseel": 38, "0220b": 38, "reverseequilibrium": 38, "reverseupequilibrium": 38, "rightanglebracket": 38, "rightarrowbar": 38, "021e5": 38, "rightarrowleftarrow": 38, "rightarrowtail": 38, "rightceil": 38, "02309": 38, "rightdoublebracket": 38, "0301b": 38, "rightdownvector": 38, "rightfloor": 38, "0230b": 38, "rightharpoondown": 38, "rightharpoonup": 38, "rightleftarrow": 38, "rightleftharpoon": 38, "rightrightarrow": 38, "rightsquigarrow": 38, "rightte": 38, "rightteearrow": 38, "rightthreetim": 38, "022cc": 38, "righttriangl": 38, "righttriangleequ": 38, "rightupvector": 38, "rightvector": 38, "risingdotseq": 38, "rmoustach": 38, "023b1": 38, "rrightarrow": 38, "searrow": 38, "setminu": 38, "shortdownarrow": 38, "shortleftarrow": 38, "shortmid": 38, "shortparallel": 38, "shortrightarrow": 38, "shortuparrow": 38, "simeq": 38, "02243": 38, "smallcircl": 38, "02218": 38, "smallsetminu": 38, "spadesuit": 38, "02660": 38, "sqrt": [38, 230, 243, 332, 592, 594, 602, 603, 611, 697, 712, 713, 714, 715, 716, 753], "0221a": 38, "sqsubset": 38, "sqsubseteq": 38, "sqsupset": 38, "sqsupseteq": 38, "025a1": 38, "squareintersect": 38, "02293": 38, "cap": [38, 242, 1088], "squaresubset": 38, "squaresubsetequ": 38, "squaresuperset": 38, "squaresupersetequ": 38, "squareunion": 38, "02294": 38, "cup": [38, 300, 338], "022c6": 38, "straightepsilon": 38, "003f5": 38, "straightphi": 38, "003d5": 38, "phi": 38, "subseteq": 38, "02286": 38, "subseteqq": 38, "subsetequ": 38, "subsetneq": 38, "0228a": 38, "subsetneqq": 38, "02acb": 38, "succ": 38, "succapprox": 38, "succcurlyeq": 38, "succeedsequ": 38, "succeedsslantequ": 38, "succeedstild": 38, "succeq": 38, "succnapprox": 38, "02aba": 38, "succneqq": 38, "02ab6": 38, "succnsim": 38, "022e9": 38, "succsim": 38, "suchthat": 38, "02211": 38, "summat": 38, "supersetequ": 38, "02287": 38, "supset": 38, "supseteq": 38, "supseteqq": 38, "supsetneq": 38, "0228b": 38, "supsetneqq": 38, "02acc": 38, "swarrow": 38, "therefor": [38, 160, 170], "02234": 38, "thickapprox": 38, "thicksim": 38, "thinspac": 38, "02009": 38, "tildeequ": 38, "tildefullequ": 38, "02245": 38, "tildetild": 38, "toea": 38, "tosa": 38, "025b5": 38, "triangledown": 38, "025bf": 38, "triangleleft": 38, "025c3": 38, "trianglelefteq": 38, "triangleq": 38, "triangleright": 38, "025b9": 38, "trianglerighteq": 38, "tripledot": 38, "020db": 38, "combin": [38, 89, 112, 114, 115, 173, 191, 222, 278, 417, 428, 433, 450, 458, 489, 498, 510, 524, 538, 590, 625, 664, 742, 786, 815, 873, 875, 877, 893, 915, 926, 963, 964, 966, 1013, 1066, 1081, 1097, 1150, 1184], "twoheadleftarrow": 38, "twoheadrightarrow": 38, "ulcorn": 38, "0231c": 38, "unionplu": 38, "0228e": 38, "multiset": 38, "uparrow": 38, "uparrowdownarrow": 38, "updownarrow": 38, "upequilibrium": 38, "upharpoonleft": 38, "upharpoonright": 38, "upperleftarrow": 38, "upperrightarrow": 38, "upsilon": 38, "003c5": 38, "upte": 38, "upteearrow": 38, "021a5": 38, "upuparrow": 38, "urcorn": 38, "0231d": 38, "varepsilon": 38, "003b5": 38, "varkappa": 38, "003f0": 38, "kappa": 38, "varnoth": 38, "varphi": 38, "003c6": 38, "varpi": 38, "003d6": 38, "varpropto": 38, "varrho": 38, "003f1": 38, "rho": 38, "varsigma": 38, "003c2": 38, "sigma": [38, 262], "varsubsetneq": 38, "variant": [38, 118, 122, 214, 230, 243, 273, 274, 275, 334, 388, 404, 521, 585, 738, 742, 744, 767, 771, 774, 785, 786, 811, 1191, 1194], "varsubsetneqq": 38, "varsupsetneq": 38, "varsupsetneqq": 38, "vartheta": 38, "003d1": 38, "theta": 38, "vartriangleleft": 38, "vartriangleright": 38, "vee": 38, "02228": 38, "vert": 38, "02016": 38, "verticalbar": 38, "verticaltild": 38, "02240": 38, "wreath": 38, "verythinspac": 38, "0200a": 38, "hair": 38, "wedg": 38, "02227": 38, "wp": 38, "02118": 38, "wr": 38, "zeetrf": 38, "02128": 38, "restructured text": 39, "cheat sheet": 39, "restructur": 39, "guid": [39, 154, 175, 185, 206, 231, 385, 465, 543, 695, 804, 819, 872], "author": [39, 173, 180, 258, 608, 806, 937, 1086, 1140], "overridden": [39, 411, 662, 729, 1164], "titl": [39, 40, 166, 176, 240, 253, 258, 267, 270, 303, 304, 309, 1047, 1131, 1136], "favorit": [39, 202, 206, 209, 227, 231, 253, 256, 351, 833, 939, 991, 1055, 1131], "__": [39, 187, 189, 197, 304, 743, 747, 1051], "ref": [39, 128, 150, 185, 274, 275, 690, 705, 749, 781], "uniqu": [39, 185, 232, 274, 275, 277, 549, 568, 750, 762, 781, 783, 785, 786, 939, 953, 967, 1026, 1079, 1083, 1153], "across": [39, 43, 170, 177, 187, 239, 245, 255, 258, 288, 297, 321, 383, 411, 431, 455, 490, 495, 514, 577, 753, 764, 784, 860, 861, 872, 890, 937, 939, 959, 967, 1001, 1062, 1073, 1140], "tree": [39, 42, 104, 106, 128, 149, 160, 162, 171, 173, 176, 181, 185, 198, 199, 206, 230, 243, 246, 249, 253, 286, 314, 317, 441, 463, 468, 480, 512, 547, 549, 646, 649, 786, 808, 811, 825, 835, 858, 860, 861, 863, 877, 893, 894, 901, 905, 907, 913, 922, 929, 938, 943, 945, 950, 970, 978, 987, 1010, 1015, 1035, 1047, 1138, 1156, 1164, 1166], "_dummi": 39, "dummi": [39, 176, 371, 372, 813, 852, 1171], "One": [39, 43, 61, 62, 63, 80, 84, 86, 101, 110, 119, 127, 170, 172, 181, 198, 209, 230, 248, 269, 270, 295, 348, 351, 365, 376, 392, 432, 445, 454, 457, 466, 468, 473, 479, 484, 490, 549, 568, 576, 591, 610, 615, 625, 630, 695, 729, 754, 764, 833, 838, 864, 866, 869, 877, 893, 937, 938, 939, 963, 975, 980, 991, 992, 1000, 1005, 1010, 1042, 1066, 1139, 1140, 1144, 1149, 1186, 1200], "a_footnot": 39, "footer": 39, "block": [39, 102, 114, 115, 150, 169, 170, 171, 172, 210, 212, 230, 237, 239, 243, 245, 255, 258, 267, 270, 279, 300, 303, 321, 350, 365, 370, 374, 388, 390, 408, 427, 433, 434, 440, 444, 447, 451, 459, 460, 462, 464, 469, 470, 497, 597, 600, 692, 718, 730, 749, 760, 761, 762, 763, 764, 783, 784, 785, 786, 819, 835, 845, 849, 863, 864, 866, 867, 869, 870, 915, 929, 938, 962, 969, 970, 975, 980, 984, 985, 990, 992, 1000, 1001, 1004, 1006, 1028, 1030, 1056, 1059, 1066, 1069, 1131], "rubric": 39, "nbsphinx": 40, "capabl": [40, 82, 170, 171, 177, 759, 833, 859, 922, 930, 938, 991, 1157, 1187], "nice": [40, 167, 170, 187, 210, 232, 297, 467, 468, 488, 536, 603, 690, 852, 859, 932, 938, 989, 1052, 1088, 1136, 1138, 1147, 1153, 1167], "few": [40, 129, 170, 171, 172, 173, 176, 177, 202, 206, 239, 386, 456, 707, 833, 871, 1030, 1034, 1165, 1189], "keep": [40, 43, 114, 115, 171, 172, 185, 194, 206, 209, 213, 229, 262, 335, 351, 376, 400, 456, 462, 463, 672, 712, 825, 833, 838, 857, 872, 875, 931, 983, 1019, 1022, 1042, 1059, 1136, 1137, 1184], "mind": [40, 134, 170, 171, 389, 756, 1059], "though": [40, 43, 45, 53, 72, 169, 170, 175, 177, 180, 181, 185, 186, 191, 198, 202, 206, 208, 209, 227, 230, 232, 243, 245, 246, 248, 253, 256, 270, 279, 288, 289, 292, 303, 324, 325, 351, 392, 402, 411, 423, 428, 490, 491, 492, 495, 504, 512, 514, 547, 548, 549, 568, 592, 594, 595, 599, 602, 605, 608, 609, 611, 612, 625, 626, 661, 668, 690, 698, 700, 707, 712, 718, 735, 739, 744, 749, 750, 753, 760, 772, 774, 787, 788, 792, 811, 825, 864, 871, 872, 875, 878, 912, 926, 930, 937, 938, 939, 949, 957, 959, 986, 991, 993, 995, 1001, 1010, 1028, 1030, 1031, 1034, 1039, 1041, 1048, 1050, 1058, 1062, 1075, 1100, 1131, 1138, 1139, 1152, 1159, 1160, 1164, 1166, 1184, 1187], "toplevel": [40, 44, 113, 128, 146, 198, 231, 280, 476, 478, 482, 483, 484, 486, 533, 806, 834, 859, 1028, 1173], "begin": [40, 42, 43, 126, 130, 131, 132, 136, 138, 139, 145, 146, 152, 169, 170, 180, 208, 229, 230, 242, 245, 258, 262, 274, 275, 279, 296, 304, 325, 382, 388, 396, 408, 411, 432, 438, 455, 456, 458, 488, 495, 585, 595, 608, 621, 623, 625, 626, 627, 629, 630, 632, 633, 634, 636, 637, 638, 639, 643, 646, 657, 690, 705, 718, 721, 725, 732, 738, 739, 742, 756, 786, 859, 893, 917, 925, 951, 959, 1035, 1059, 1081, 1131, 1165], "deeper": [40, 171, 202, 289, 292, 477, 986], "trail": [40, 174, 258, 300, 304, 322, 356, 357], "underscor": [40, 405, 1031, 1038, 1051, 1061], "ipynb": [40, 189, 209, 219, 221, 258, 268, 289, 293, 299, 303, 309, 314, 317, 321, 325, 331, 332, 337, 343, 347, 1133, 1137], "labels_": [40, 191, 193, 348], "result": [40, 82, 129, 134, 145, 163, 172, 181, 187, 189, 209, 213, 229, 239, 245, 248, 255, 258, 262, 271, 280, 300, 304, 395, 411, 446, 453, 455, 456, 462, 492, 517, 521, 608, 636, 697, 703, 712, 740, 804, 949, 995, 1023, 1035, 1050, 1064, 1070, 1082, 1139], "cluster": [40, 193, 348, 1133, 1138], "membership": [40, 191, 208, 209, 251, 504, 1063, 1080], "sequenc": [40, 110, 113, 118, 122, 163, 190, 191, 193, 203, 209, 230, 232, 241, 243, 244, 245, 248, 251, 255, 258, 262, 280, 295, 297, 304, 310, 349, 387, 441, 492, 538, 553, 554, 555, 590, 635, 654, 658, 674, 687, 695, 742, 786, 992, 1035, 1036, 1037, 1053, 1062, 1063, 1068, 1070, 1073, 1077, 1078, 1101, 1113, 1144, 1187], "bring": [40, 45, 126, 134, 146, 163, 170, 172, 180, 181, 202, 206, 209, 212, 248, 286, 289, 292, 295, 297, 321, 324, 373, 378, 379, 383, 568, 607, 646, 670, 681, 689, 829, 833, 845, 937, 938, 939, 1008, 1055, 1103, 1126, 1144, 1184, 1187], "bigplan": [40, 193, 1133], "686": [40, 191, 245, 348, 1021], "unknown": [40, 288, 474, 771, 789, 938, 1044], "cmd": [40, 176, 827, 852, 1166], "color": [40, 175, 193, 348, 915, 1133, 1159], "tmp": [40, 152, 166, 171, 173, 176, 213, 226, 229, 245, 250, 258, 262, 265, 268, 270, 275, 277, 280, 283, 290, 300, 304, 310, 326, 332, 338, 344, 348, 397, 439, 462, 475, 480, 481, 488, 549, 550, 670, 747, 766, 811, 833, 855, 859, 864, 873, 877, 878, 891, 892, 893, 895, 897, 898, 900, 902, 905, 912, 915, 916, 921, 942, 949, 960, 961, 963, 964, 966, 991, 997, 1030, 1081, 1087, 1143, 1165, 1166], "craft": [41, 53, 256, 298, 299, 472, 517, 754, 787], "tar": [42, 60, 113, 128, 157, 166, 181, 210, 212, 276, 285, 286, 306, 307, 468, 786, 833, 855, 856, 858, 863, 929, 1015, 1017, 1018, 1019, 1021, 1022, 1028, 1086, 1166, 1190], "xz": [42, 60, 173, 181, 286, 461, 1015, 1019, 1021, 1022], "push": [42, 81, 152, 174, 176, 185, 188, 231, 246, 256, 313, 329, 371, 433, 478, 479, 490, 514, 624, 627, 762, 786, 833, 975, 993, 1106, 1110, 1164], "cmakelist": [42, 44, 126, 128, 133, 146, 196, 197, 198, 199, 200, 231, 248, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 488, 533, 546, 547, 548, 549, 550, 569, 572, 575, 576, 578, 581, 584, 587, 681, 996, 999, 1003, 1008, 1009, 1170, 1173, 1175], "src": [42, 170, 171, 173, 231, 245, 275, 277, 283, 371, 400, 412, 462, 486, 487, 497, 533, 536, 546, 547, 548, 549, 551, 610, 627, 748, 749, 859, 877, 921, 1081, 1086, 1164], "load": [42, 43, 53, 56, 62, 79, 92, 169, 180, 181, 188, 189, 193, 209, 217, 218, 234, 235, 239, 245, 255, 258, 262, 265, 271, 280, 297, 298, 299, 315, 318, 320, 321, 338, 348, 448, 468, 480, 763, 785, 786, 789, 790, 792, 793, 795, 798, 800, 801, 803, 808, 810, 813, 814, 818, 824, 827, 829, 830, 833, 835, 837, 842, 845, 848, 851, 854, 869, 929, 938, 939, 970, 978, 984, 1007, 1024, 1131, 1149, 1189, 1198, 1200], "store": [42, 57, 62, 79, 92, 110, 133, 137, 169, 171, 188, 190, 198, 199, 229, 232, 239, 297, 298, 299, 320, 321, 396, 448, 492, 674, 718, 732, 735, 742, 763, 770, 772, 776, 785, 786, 799, 833, 872, 885, 929, 946, 970, 978, 984, 1008, 1026, 1030, 1031, 1035, 1079, 1109, 1143, 1159, 1200], "search": [42, 51, 53, 110, 163, 165, 166, 170, 191, 194, 200, 202, 208, 209, 218, 229, 230, 232, 235, 239, 242, 243, 245, 248, 249, 250, 253, 255, 258, 271, 280, 283, 287, 290, 295, 300, 304, 310, 312, 328, 332, 338, 344, 432, 459, 462, 474, 538, 549, 551, 555, 590, 635, 640, 654, 658, 675, 687, 786, 811, 875, 893, 925, 986, 1008, 1021, 1038, 1067, 1137, 1164, 1186], "payload": [42, 794, 821, 931, 933], "primari": [42, 170, 181, 202, 288, 289, 292, 466, 831, 860, 861, 868, 870, 1109], "insert": [42, 62, 113, 126, 164, 169, 185, 189, 206, 208, 213, 243, 245, 248, 250, 252, 258, 262, 265, 283, 304, 310, 322, 338, 348, 365, 429, 446, 450, 466, 493, 499, 521, 527, 538, 555, 556, 557, 568, 585, 590, 626, 627, 640, 650, 651, 675, 683, 684, 685, 687, 694, 701, 703, 718, 739, 782, 784, 786, 811, 817, 827, 829, 833, 893, 937, 950, 981, 991, 1063, 1078, 1079, 1087, 1143, 1164], "const": [42, 58, 74, 101, 111, 113, 114, 115, 116, 117, 118, 119, 120, 122, 124, 125, 127, 128, 133, 146, 197, 232, 248, 295, 297, 334, 400, 408, 412, 430, 432, 438, 446, 458, 460, 462, 464, 469, 470, 475, 491, 492, 493, 494, 495, 497, 499, 514, 515, 521, 522, 523, 526, 527, 528, 530, 531, 532, 538, 542, 546, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 566, 567, 568, 576, 581, 583, 585, 590, 592, 593, 594, 595, 597, 599, 600, 606, 607, 608, 609, 610, 611, 612, 613, 615, 616, 618, 619, 625, 629, 631, 632, 633, 634, 635, 641, 645, 647, 650, 651, 654, 657, 658, 661, 664, 665, 668, 670, 671, 672, 675, 676, 679, 680, 682, 683, 684, 685, 686, 687, 694, 696, 697, 698, 699, 700, 701, 702, 703, 712, 713, 714, 715, 716, 718, 720, 721, 724, 725, 726, 727, 728, 730, 732, 733, 734, 735, 737, 738, 740, 742, 746, 748, 749, 750, 751, 752, 755, 763, 764, 766, 772, 776, 780, 781, 782, 783, 784, 785, 786, 789, 792, 797, 813, 815, 819, 827, 829, 843, 847, 853, 951, 959, 963, 964, 965, 966, 969, 971, 974, 976, 978, 980, 988, 994, 997, 1000, 1001, 1005, 1025, 1043, 1119, 1142, 1176, 1182, 1183], "care": [42, 46, 48, 84, 146, 169, 170, 172, 175, 177, 202, 210, 242, 356, 388, 411, 420, 422, 438, 462, 463, 486, 517, 518, 593, 607, 625, 668, 739, 740, 744, 753, 776, 777, 780, 787, 811, 823, 825, 833, 838, 859, 860, 861, 938, 946, 950, 962, 975, 983, 1009, 1031, 1055, 1059, 1071, 1078, 1081, 1082, 1088, 1111, 1135, 1143, 1156, 1166], "dump": [42, 170, 189, 218, 234, 235, 245, 258, 262, 265, 271, 280, 315, 318, 321, 497, 516, 517, 600, 605, 728, 748, 871, 1004, 1005], "db": [42, 50, 180, 206, 231, 232, 233, 237, 243, 256, 271, 478, 492, 493, 499, 521, 527, 682, 683, 684, 685, 686, 754, 1087], "pull": [42, 44, 50, 62, 81, 128, 129, 145, 174, 185, 222, 231, 232, 246, 350, 373, 474, 478, 490, 607, 690, 806, 833, 1035, 1038, 1155], "paramet": [42, 58, 62, 114, 115, 116, 117, 118, 119, 120, 123, 127, 133, 141, 169, 172, 177, 187, 190, 197, 198, 202, 207, 208, 209, 211, 213, 221, 222, 226, 229, 230, 231, 232, 239, 243, 245, 248, 249, 251, 254, 255, 258, 265, 268, 289, 290, 292, 294, 339, 351, 356, 365, 387, 396, 398, 402, 413, 417, 432, 433, 438, 440, 441, 444, 447, 451, 452, 458, 460, 464, 469, 470, 473, 475, 480, 536, 546, 552, 568, 582, 592, 594, 597, 601, 604, 605, 608, 612, 617, 618, 672, 678, 692, 695, 702, 718, 730, 732, 737, 750, 762, 771, 783, 785, 786, 791, 792, 799, 813, 836, 841, 846, 849, 852, 853, 873, 875, 938, 953, 976, 986, 1001, 1009, 1022, 1026, 1031, 1045, 1048, 1053, 1060, 1076, 1083, 1088, 1098, 1104, 1106, 1110, 1116, 1125, 1136, 1139, 1142, 1149, 1152, 1153, 1155, 1180, 1181], "entri": [42, 134, 167, 171, 172, 176, 234, 245, 387, 487, 503, 646, 648, 668, 821, 859, 872, 876, 877, 878, 915, 921, 953, 959, 973, 1024, 1031, 1079, 1142, 1173], "o_creat": [42, 786, 929, 959, 960, 964, 968, 970, 987, 1000], "o_trunc": [42, 48, 959], "o_wronli": [42, 786, 929, 959, 960, 962, 963, 964, 968, 969, 970, 971, 974, 987, 1000], "0666": [42, 892, 963, 964, 1000], "assert": [42, 46, 206, 230, 243, 255, 258, 272, 288, 321, 323, 474, 497, 639, 680, 683, 685, 691, 764, 957, 969, 971, 974, 1000, 1004, 1005, 1043, 1119, 1126, 1127, 1128, 1164, 1170, 1171, 1173, 1181], "ing": [42, 965], "mode": [42, 105, 128, 173, 185, 187, 222, 230, 239, 242, 243, 245, 255, 258, 262, 265, 283, 286, 290, 304, 307, 321, 338, 462, 538, 590, 763, 785, 786, 792, 825, 831, 859, 860, 861, 863, 866, 867, 870, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 893, 929, 932, 939, 953, 958, 959, 960, 968, 970, 984, 987, 990, 992, 1000, 1001, 1056, 1058, 1159], "binaryus": 42, "hton": [42, 956], "arpa": [42, 956], "inet": [42, 187, 956], "again": [42, 103, 128, 169, 170, 172, 175, 177, 181, 185, 186, 198, 202, 206, 208, 209, 210, 222, 231, 256, 261, 270, 276, 279, 285, 286, 303, 306, 309, 325, 365, 366, 367, 370, 371, 376, 383, 384, 433, 474, 496, 500, 510, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 585, 590, 592, 594, 607, 608, 612, 622, 701, 712, 754, 762, 763, 781, 784, 785, 786, 853, 856, 860, 861, 862, 863, 866, 867, 874, 877, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 923, 929, 939, 946, 949, 952, 954, 956, 957, 958, 960, 965, 968, 970, 971, 980, 984, 986, 987, 990, 992, 1001, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1028, 1048, 1053, 1071, 1076, 1081, 1131, 1149, 1152, 1184], "od": [42, 258], "hardwir": [42, 62, 335, 794, 955, 1048], "enter": [42, 114, 115, 137, 203, 210, 239, 244, 245, 255, 258, 267, 268, 270, 271, 288, 321, 322, 350, 365, 370, 390, 585, 608, 667, 701, 707, 718, 750, 811, 833, 849, 866, 889, 991, 992, 1066, 1118], "joerg": [42, 50, 152, 189, 203, 204, 206, 207, 209, 211, 218, 222, 226, 229, 235, 242, 245, 248, 250, 252, 255, 258, 262, 265, 268, 271, 280, 283, 290, 297, 299, 300, 304, 310, 315, 322, 326, 332, 338, 344, 348, 359, 362, 457, 484, 492, 499, 533, 549, 551, 567, 605, 639, 651, 670, 680, 681, 682, 683, 685, 702, 860, 861, 868, 870, 875, 889, 905, 918, 924, 949, 986, 1044, 1045, 1047, 1048, 1049, 1051, 1052, 1060, 1082, 1086, 1109, 1126, 1139, 1148, 1149, 1150, 1152, 1153, 1154, 1155], "huber": [42, 252, 258, 1139], "caro": [42, 242, 252, 255, 262, 265, 268, 271, 280, 283, 290, 304, 322, 332, 348, 492, 499, 551, 567, 639, 651, 683, 685, 1047, 1049, 1069, 1120, 1122, 1126, 1128, 1148, 1149, 1150, 1152, 1153, 1154, 1155], "johanna": [42, 242, 252, 255, 262, 265, 283, 290, 304, 322, 332, 348, 492, 551, 567, 639, 651, 1069, 1120, 1122, 1126, 1128, 1148, 1149, 1150, 1152, 1153, 1154, 1155], "bodi": [42, 50, 55, 114, 115, 176, 387, 388, 390, 394, 423, 433, 462, 552, 585, 594, 595, 599, 602, 672, 690, 691, 694, 753, 1035, 1165], "compil": [42, 43, 69, 107, 108, 112, 114, 115, 118, 121, 128, 171, 172, 181, 190, 197, 198, 199, 218, 232, 235, 248, 255, 271, 280, 283, 286, 287, 295, 304, 310, 312, 328, 332, 335, 338, 344, 373, 385, 398, 407, 408, 417, 420, 422, 429, 430, 439, 441, 448, 451, 454, 455, 456, 457, 458, 460, 461, 462, 464, 465, 466, 467, 469, 470, 474, 478, 481, 483, 486, 487, 490, 496, 510, 512, 517, 518, 531, 532, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 576, 582, 585, 590, 592, 595, 597, 601, 603, 607, 618, 646, 665, 672, 677, 679, 690, 691, 692, 693, 695, 697, 698, 700, 701, 703, 705, 707, 712, 715, 718, 727, 728, 730, 736, 739, 740, 742, 744, 748, 749, 783, 785, 786, 801, 802, 817, 929, 937, 1008, 1009, 1012, 1013, 1014, 1015, 1017, 1031, 1056, 1061, 1073, 1075, 1171, 1173, 1181, 1182, 1184, 1185, 1186, 1197], "still": [42, 54, 60, 158, 164, 169, 170, 171, 172, 180, 181, 190, 191, 192, 232, 242, 248, 286, 288, 356, 376, 385, 436, 448, 474, 477, 483, 536, 558, 579, 582, 600, 601, 622, 628, 661, 676, 701, 718, 735, 739, 744, 748, 749, 751, 752, 753, 796, 801, 833, 836, 876, 890, 912, 937, 938, 939, 989, 991, 993, 1004, 1026, 1034, 1037, 1043, 1056, 1059, 1062, 1086, 1122, 1145, 1153, 1173, 1181], "funni": [42, 44, 50, 104, 128, 202, 286, 495, 786, 863, 901, 907, 913, 929, 1008], "temp": [42, 44, 258, 374, 748, 749, 750], "got": [42, 45, 170, 180, 232, 304, 326, 338, 432, 704, 959, 1032], "overwritten": [42, 47, 53, 55, 56, 627, 786, 960, 1038], "suspect": [42, 172, 174], "inmem": 42, "loos": [42, 43, 206, 222, 386, 411, 458, 823], "foolishli": 42, "main": [42, 50, 62, 111, 118, 124, 125, 137, 163, 172, 175, 176, 181, 209, 231, 243, 255, 256, 258, 275, 286, 294, 297, 299, 312, 314, 317, 321, 328, 365, 385, 387, 388, 390, 394, 396, 398, 399, 413, 428, 429, 430, 432, 436, 448, 455, 459, 462, 463, 466, 468, 474, 475, 477, 481, 497, 511, 516, 517, 518, 533, 534, 536, 544, 546, 548, 549, 568, 576, 579, 582, 596, 600, 601, 603, 605, 607, 608, 610, 620, 621, 622, 623, 624, 627, 628, 629, 630, 631, 633, 634, 637, 638, 639, 643, 647, 648, 649, 650, 651, 657, 661, 662, 665, 667, 668, 674, 679, 680, 681, 682, 683, 684, 685, 686, 690, 695, 705, 708, 709, 710, 713, 714, 715, 716, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 732, 734, 735, 737, 740, 742, 748, 749, 751, 752, 753, 754, 757, 762, 764, 784, 794, 801, 802, 804, 833, 870, 872, 890, 937, 939, 940, 953, 955, 956, 957, 963, 964, 965, 966, 971, 974, 975, 977, 981, 986, 988, 991, 992, 997, 1000, 1001, 1004, 1007, 1015, 1019, 1025, 1039, 1042, 1057, 1121, 1123, 1171, 1176, 1189], "chang": [42, 45, 46, 47, 51, 55, 56, 81, 84, 128, 130, 137, 144, 145, 169, 172, 174, 175, 176, 177, 180, 181, 185, 193, 206, 222, 231, 262, 270, 372, 411, 448, 450, 454, 457, 458, 462, 472, 475, 490, 535, 541, 546, 547, 549, 550, 601, 626, 683, 737, 762, 768, 784, 786, 806, 811, 859, 868, 870, 872, 890, 899, 902, 917, 930, 932, 937, 938, 949, 953, 974, 1004, 1007, 1022, 1038, 1062, 1071, 1110, 1121, 1123, 1126, 1149, 1153, 1167, 1184], "errorhandl": 42, "just": [42, 46, 62, 73, 88, 112, 135, 136, 141, 160, 169, 170, 171, 172, 173, 174, 176, 177, 181, 185, 192, 194, 198, 202, 209, 232, 243, 246, 271, 312, 321, 328, 353, 394, 413, 438, 441, 450, 468, 472, 477, 487, 492, 533, 536, 546, 548, 549, 550, 573, 592, 593, 594, 600, 603, 604, 605, 608, 627, 655, 662, 668, 672, 676, 690, 697, 701, 703, 704, 718, 733, 736, 750, 752, 754, 770, 784, 791, 796, 804, 806, 813, 817, 823, 825, 833, 849, 872, 893, 896, 897, 926, 930, 938, 939, 954, 956, 957, 963, 964, 966, 975, 976, 986, 993, 1001, 1019, 1026, 1029, 1030, 1033, 1035, 1053, 1054, 1060, 1061, 1062, 1069, 1073, 1081, 1082, 1136, 1137, 1144, 1149, 1150, 1154, 1155, 1160, 1164, 1176, 1186], "silent": [42, 69, 252, 262, 694, 937], "truncat": [42, 258, 304, 388, 409, 511, 875, 959, 1081], "faschingb": 42, "echo": [42, 171, 222, 258, 286, 351, 549, 674, 806, 815, 833, 860, 861, 864, 865, 873, 877, 887, 896, 899, 903, 912, 930, 932, 937, 938, 939, 940, 960, 962, 971, 973, 974, 986, 989, 995, 1004, 1166], "success": [42, 199, 239, 245, 255, 258, 449, 478, 707, 760, 811, 815, 905, 1097], "failur": [42, 43, 239, 245, 255, 258, 270, 275, 304, 350, 458, 468, 474, 488, 546, 550, 1164, 1165, 1172, 1173, 1176], "renam": [42, 50, 57, 62, 70, 103, 126, 128, 163, 229, 276, 285, 286, 306, 307, 585, 737, 786, 801, 802, 863, 900, 913, 929, 1025, 1143], "most": [43, 44, 57, 61, 63, 69, 91, 124, 126, 166, 169, 170, 172, 173, 176, 181, 192, 194, 200, 202, 206, 208, 230, 239, 242, 245, 246, 255, 256, 258, 262, 268, 288, 290, 304, 324, 325, 326, 350, 386, 394, 423, 426, 433, 448, 450, 456, 461, 462, 466, 467, 477, 491, 504, 547, 607, 608, 646, 698, 742, 747, 750, 756, 771, 811, 819, 833, 838, 858, 860, 861, 864, 871, 895, 926, 930, 937, 939, 951, 959, 965, 978, 993, 1001, 1004, 1005, 1007, 1028, 1029, 1030, 1035, 1042, 1043, 1044, 1050, 1051, 1059, 1061, 1062, 1063, 1066, 1069, 1072, 1073, 1077, 1079, 1082, 1083, 1088, 1130, 1131, 1140, 1144, 1148, 1152, 1153, 1158, 1160, 1164, 1165, 1171, 1186, 1187, 1189], "somebodi": [43, 177, 185, 198, 232, 400, 457, 478, 576, 600, 652, 712, 718, 729, 760, 823, 841, 995], "concis": [43, 169, 202, 206, 256, 325, 366, 367, 477, 833, 1131], "longer": [43, 185, 995, 1056, 1184], "necessari": [43, 60, 145, 163, 171, 177, 181, 190, 199, 213, 229, 232, 289, 292, 324, 325, 390, 400, 432, 472, 474, 478, 490, 536, 595, 599, 667, 693, 694, 728, 738, 750, 762, 829, 833, 868, 937, 939, 940, 955, 993, 1004, 1024, 1051, 1058, 1062, 1086, 1143, 1164], "gosh": [43, 166, 411, 456, 458, 652, 735, 983, 1028, 1029, 1035, 1062], "hungarian": [43, 452], "notat": [43, 197, 237, 253, 258, 263, 304, 452, 765, 938, 1044], "userdb": [43, 47, 48, 51, 53, 54, 56, 57, 232, 234, 248, 256, 303, 314, 317, 675, 683, 684, 685, 687, 786, 1120, 1121, 1122, 1123, 1128], "bolt": [43, 232], "onto": [43, 61, 63, 126, 134, 137, 180, 191, 232, 248, 321, 514, 596, 673, 687, 750, 786, 833, 918, 930, 938, 957, 989, 1012, 1019], "unclear": [43, 539, 1005], "semant": [43, 49, 85, 170, 194, 274, 275, 277, 295, 334, 443, 457, 458, 512, 593, 646, 652, 691, 698, 730, 746, 749, 750, 751, 752, 755, 763, 783, 785, 786, 792, 797, 825, 1004, 1005, 1062, 1140, 1184], "backingstor": [43, 53, 56, 786], "mangl": [43, 229, 230, 243, 260, 1056], "prefix": [43, 60, 166, 181, 239, 243, 245, 255, 258, 304, 358, 604, 634, 690, 833, 1019, 1021, 1028, 1050, 1051, 1076, 1083, 1166], "m_": 43, "enough": [43, 173, 177, 194, 202, 252, 262, 295, 304, 376, 400, 491, 667, 937, 950, 978, 1008, 1030, 1047, 1055, 1076, 1144, 1149, 1156, 1158, 1165, 1186], "take": [43, 48, 90, 106, 114, 115, 129, 134, 136, 163, 164, 169, 170, 171, 174, 175, 176, 177, 180, 185, 187, 190, 191, 193, 198, 202, 203, 208, 209, 210, 230, 243, 248, 250, 258, 262, 268, 292, 331, 350, 351, 356, 365, 395, 432, 435, 452, 454, 461, 463, 467, 468, 472, 473, 475, 490, 491, 514, 515, 517, 518, 536, 546, 549, 562, 568, 582, 594, 601, 605, 608, 610, 648, 672, 690, 695, 702, 703, 712, 740, 742, 748, 752, 762, 776, 777, 796, 823, 833, 859, 860, 861, 937, 967, 995, 1019, 1025, 1029, 1033, 1055, 1071, 1072, 1088, 1095, 1098, 1100, 1104, 1105, 1106, 1109, 1110, 1111, 1113, 1115, 1125, 1130, 1138, 1139, 1144, 1149, 1159, 1166], "dogmat": [43, 248, 383, 1144], "switch": [43, 45, 54, 58, 61, 63, 114, 115, 123, 126, 128, 129, 130, 131, 132, 136, 137, 138, 141, 171, 175, 177, 189, 190, 231, 239, 245, 255, 256, 258, 335, 351, 352, 354, 371, 374, 377, 407, 421, 425, 427, 434, 440, 444, 447, 449, 451, 460, 464, 467, 469, 470, 474, 477, 490, 504, 538, 539, 540, 590, 651, 691, 692, 730, 772, 774, 783, 785, 786, 813, 831, 838, 847, 850, 852, 866, 870, 930, 933, 991, 1024, 1181, 1185], "bool": [43, 50, 53, 55, 56, 123, 139, 145, 213, 220, 242, 245, 248, 250, 252, 255, 258, 265, 268, 283, 287, 288, 290, 294, 304, 332, 338, 482, 484, 551, 552, 556, 558, 563, 592, 594, 608, 609, 610, 611, 612, 630, 633, 639, 648, 695, 707, 708, 709, 710, 718, 721, 725, 732, 762, 764, 766, 786, 846, 853, 991, 997, 1004, 1062, 1088, 1150, 1155], "wear": [43, 167, 171], "incorrect": [43, 239, 245, 255, 258, 262, 411, 430, 1156], "metaphor": 43, "But": [43, 170, 171, 172, 175, 186, 222, 231, 321, 394, 400, 429, 432, 438, 441, 454, 456, 462, 472, 591, 592, 600, 605, 606, 607, 625, 643, 661, 662, 700, 703, 739, 748, 752, 754, 771, 785, 786, 815, 817, 833, 843, 860, 861, 915, 929, 937, 938, 939, 946, 960, 968, 970, 975, 983, 987, 1010, 1024, 1026, 1047, 1050, 1056, 1136, 1139, 1150], "support": [43, 82, 134, 171, 173, 177, 181, 190, 194, 206, 218, 220, 239, 242, 245, 250, 252, 255, 258, 262, 265, 280, 283, 290, 322, 332, 338, 344, 361, 430, 454, 468, 474, 591, 592, 594, 698, 750, 754, 770, 780, 784, 789, 825, 915, 937, 938, 939, 949, 1001, 1007, 1035, 1043, 1050, 1056, 1073, 1086, 1136, 1138, 1153, 1171], "copy_process": 43, "law": [43, 222, 362, 405, 450, 1030, 1155], "tdd": [43, 128, 201, 206, 216, 256, 298, 314, 317, 321, 335, 384, 1164], "until": [43, 55, 101, 102, 103, 106, 109, 114, 115, 128, 133, 141, 145, 149, 158, 160, 170, 172, 174, 176, 221, 230, 242, 261, 279, 299, 325, 422, 428, 453, 456, 550, 610, 674, 718, 724, 762, 764, 801, 821, 831, 841, 843, 849, 866, 870, 877, 893, 905, 912, 954, 955, 956, 957, 980, 994, 1001, 1005, 1034, 1035, 1056, 1064, 1066, 1131], "fail": [43, 44, 166, 170, 172, 180, 181, 185, 197, 202, 232, 258, 275, 307, 350, 376, 475, 478, 488, 492, 497, 499, 546, 677, 698, 700, 707, 712, 766, 784, 786, 811, 833, 912, 929, 939, 960, 965, 968, 970, 985, 986, 987, 1004, 1024, 1028, 1030, 1039, 1081, 1097, 1153, 1165, 1166, 1170, 1172, 1174], "suffici": [43, 130, 185, 190, 202, 351, 599, 627, 668, 672, 683, 691, 771, 806, 915, 1005, 1053, 1055, 1083, 1165], "pass": [43, 44, 48, 55, 57, 58, 62, 114, 115, 116, 117, 119, 120, 123, 127, 190, 198, 202, 207, 208, 209, 211, 218, 229, 231, 235, 239, 245, 248, 250, 252, 255, 258, 262, 265, 268, 270, 271, 275, 280, 283, 288, 289, 292, 300, 304, 322, 344, 348, 350, 376, 396, 398, 400, 411, 432, 436, 439, 441, 458, 488, 490, 495, 497, 536, 546, 547, 548, 549, 551, 552, 592, 602, 603, 609, 610, 611, 612, 621, 672, 678, 702, 732, 740, 745, 749, 752, 780, 781, 782, 799, 836, 877, 937, 963, 966, 977, 986, 1009, 1026, 1028, 1029, 1030, 1031, 1043, 1044, 1045, 1047, 1053, 1071, 1073, 1081, 1083, 1119, 1148, 1164, 1171], "current": [43, 103, 113, 128, 133, 156, 158, 171, 172, 173, 175, 177, 180, 181, 185, 210, 232, 239, 245, 255, 258, 276, 283, 285, 286, 304, 306, 307, 357, 376, 379, 384, 433, 466, 474, 490, 492, 496, 510, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 590, 680, 684, 749, 750, 763, 771, 785, 786, 802, 833, 841, 855, 859, 860, 861, 862, 863, 866, 867, 868, 870, 876, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 893, 894, 897, 898, 899, 900, 901, 902, 903, 904, 905, 907, 908, 909, 910, 911, 913, 915, 917, 929, 938, 952, 958, 959, 960, 968, 970, 975, 977, 984, 987, 990, 991, 992, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1024, 1029, 1034, 1055, 1058, 1066, 1069, 1190], "initi": [43, 45, 62, 114, 115, 118, 122, 126, 128, 139, 152, 169, 170, 173, 177, 185, 187, 197, 202, 206, 211, 217, 226, 230, 231, 241, 242, 243, 258, 262, 265, 268, 273, 283, 290, 295, 297, 300, 304, 317, 326, 332, 338, 344, 388, 390, 397, 441, 446, 456, 460, 464, 466, 469, 470, 492, 494, 512, 517, 518, 531, 532, 536, 538, 539, 540, 541, 542, 543, 546, 568, 582, 585, 590, 594, 595, 596, 598, 603, 605, 607, 609, 611, 626, 627, 628, 633, 646, 651, 672, 677, 679, 680, 681, 686, 687, 701, 712, 730, 738, 749, 750, 752, 764, 783, 785, 786, 791, 794, 796, 797, 804, 811, 819, 829, 833, 860, 861, 869, 894, 924, 938, 939, 954, 957, 975, 978, 991, 1000, 1001, 1007, 1042, 1045, 1075, 1136, 1140, 1184, 1189], "mess": [43, 170, 256, 275, 277, 332, 334, 335, 692, 730, 785, 786, 1062, 1075, 1165], "roughli": [43, 69, 172, 177, 321, 461, 858, 991, 1000], "took": [43, 169, 176, 206, 1096], "our": [43, 53, 61, 63, 74, 81, 108, 127, 128, 139, 141, 145, 146, 152, 171, 172, 174, 176, 181, 185, 192, 206, 221, 222, 231, 232, 246, 248, 286, 297, 299, 335, 365, 458, 461, 472, 483, 491, 495, 500, 512, 516, 533, 544, 549, 683, 686, 806, 813, 833, 937, 938, 963, 966, 991, 1001, 1005, 1007, 1019, 1022, 1025, 1031, 1128, 1136, 1139], "craftsmanship": [43, 45], "anoth": [43, 62, 82, 126, 169, 170, 171, 172, 176, 177, 180, 181, 185, 192, 194, 199, 202, 208, 209, 232, 239, 245, 248, 255, 260, 262, 268, 283, 286, 289, 292, 295, 321, 402, 420, 421, 435, 443, 455, 462, 473, 490, 491, 494, 499, 514, 517, 518, 531, 532, 536, 541, 550, 602, 605, 606, 608, 690, 695, 718, 742, 750, 754, 764, 771, 776, 777, 821, 833, 859, 860, 861, 866, 875, 877, 889, 926, 937, 939, 949, 950, 964, 978, 980, 992, 1000, 1005, 1022, 1025, 1026, 1029, 1030, 1047, 1054, 1062, 1078, 1082, 1087, 1139, 1147, 1153, 1156, 1164, 1187], "isol": [43, 54, 200, 202, 206, 256, 270, 937, 991, 992, 1042, 1131, 1143, 1159, 1175, 1177], "wrong": [43, 82, 118, 170, 172, 295, 411, 433, 452, 668, 754, 806, 963, 978, 992, 1026, 1030, 1042, 1061, 1125, 1136], "oracl": [43, 1140], "conduct": [43, 1164], "serious": 43, "safeti": [43, 146, 248, 454, 457, 460, 464, 469, 470, 473, 568, 691, 761, 786, 792, 930, 1004, 1005, 1028], "architectur": [43, 112, 167, 177, 229, 382, 406, 433, 450, 473, 754, 794, 930, 957, 1007, 1008, 1017, 1019, 1187], "treat": [43, 85, 262, 398, 428, 875], "them": [43, 62, 70, 114, 115, 163, 167, 169, 170, 172, 175, 176, 177, 180, 181, 185, 190, 191, 192, 199, 202, 206, 207, 209, 211, 227, 229, 232, 243, 267, 270, 279, 299, 309, 321, 428, 450, 481, 492, 496, 512, 548, 609, 611, 612, 665, 672, 674, 677, 690, 740, 754, 833, 859, 865, 866, 872, 875, 900, 912, 939, 946, 991, 992, 1001, 1004, 1007, 1008, 1019, 1024, 1029, 1030, 1031, 1032, 1053, 1055, 1077, 1109, 1112, 1131, 1137, 1144, 1155, 1171], "carefulli": [43, 172, 185, 458, 517, 707, 1137], "independ": [43, 62, 250, 262, 400, 433, 605, 917, 931, 939, 1009], "self": [43, 61, 62, 63, 65, 170, 171, 181, 189, 190, 197, 203, 206, 208, 226, 229, 230, 242, 243, 245, 252, 255, 260, 262, 268, 271, 283, 290, 300, 304, 310, 322, 326, 348, 466, 474, 592, 594, 698, 700, 701, 735, 748, 754, 760, 794, 825, 829, 988, 1024, 1028, 1029, 1030, 1039, 1043, 1044, 1047, 1048, 1049, 1050, 1051, 1052, 1062, 1152, 1153, 1165, 1170, 1171, 1173, 1184], "valid": [43, 169, 172, 180, 258, 261, 304, 376, 431, 438, 454, 458, 617, 625, 649, 684, 698, 735, 738, 764, 846, 1061, 1062, 1076, 1077, 1093, 1098, 1152, 1153, 1159], "first": [43, 53, 60, 62, 91, 133, 160, 167, 169, 172, 173, 175, 176, 177, 181, 185, 190, 200, 202, 209, 229, 242, 243, 250, 252, 256, 258, 262, 286, 288, 299, 304, 321, 350, 356, 362, 386, 394, 417, 432, 433, 438, 446, 462, 463, 474, 475, 476, 477, 478, 480, 481, 482, 483, 485, 486, 488, 538, 579, 585, 590, 592, 598, 600, 604, 623, 624, 625, 629, 648, 651, 683, 685, 690, 712, 719, 720, 739, 740, 742, 780, 781, 782, 786, 800, 803, 810, 814, 824, 833, 835, 837, 842, 848, 851, 854, 871, 872, 873, 878, 889, 893, 899, 915, 917, 920, 924, 926, 929, 930, 937, 938, 956, 960, 980, 988, 991, 994, 1000, 1008, 1009, 1023, 1024, 1025, 1026, 1030, 1031, 1035, 1042, 1044, 1048, 1056, 1057, 1058, 1059, 1061, 1062, 1071, 1072, 1075, 1081, 1082, 1088, 1111, 1120, 1126, 1128, 1137, 1139, 1147, 1165, 1171, 1184, 1189], "debug": [43, 170, 171, 199, 229, 239, 245, 255, 258, 309, 313, 329, 365, 370, 383, 433, 459, 462, 466, 467, 468, 476, 478, 479, 495, 573, 718, 735, 786, 791, 813, 815, 875, 893, 959, 983, 1004, 1081, 1159, 1182, 1185, 1190, 1199], "fact": [43, 53, 170, 171, 202, 321, 430, 438, 462, 472, 833, 878, 963, 1001, 1140], "hard": [43, 74, 82, 89, 128, 133, 141, 145, 160, 170, 172, 175, 176, 181, 186, 191, 198, 202, 209, 231, 246, 252, 262, 276, 285, 286, 306, 307, 321, 411, 430, 459, 472, 500, 576, 784, 786, 833, 863, 869, 872, 913, 915, 929, 932, 938, 1019, 1028, 1030, 1050, 1067, 1081, 1133, 1154, 1184, 1200], "principl": [43, 53, 54, 87, 110, 118, 123, 124, 146, 166, 172, 181, 296, 297, 298, 299, 473, 496, 497, 786, 833, 937, 939, 950, 1010, 1139], "mayb": [43, 45, 57, 58, 60, 62, 82, 128, 133, 160, 163, 170, 171, 172, 175, 176, 185, 198, 202, 229, 245, 246, 296, 297, 298, 299, 314, 368, 371, 373, 374, 475, 494, 495, 496, 528, 581, 582, 652, 700, 782, 938, 1022, 1044, 1173], "overview": [43, 102, 128, 149, 166, 177, 194, 210, 212, 227, 231, 243, 276, 277, 285, 289, 292, 295, 297, 306, 307, 323, 379, 383, 496, 510, 538, 539, 540, 541, 542, 543, 544, 545, 548, 590, 610, 706, 717, 730, 741, 763, 785, 786, 856, 860, 861, 862, 863, 866, 867, 874, 876, 877, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 893, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 913, 923, 929, 941, 942, 943, 944, 945, 952, 953, 956, 958, 960, 968, 970, 984, 987, 990, 992, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1022, 1054, 1131, 1184, 1185, 1187, 1189], "respons": [43, 53, 56, 93, 118, 123, 124, 141, 146, 155, 169, 180, 185, 233, 472, 514, 528, 536, 594, 602, 750, 786, 829, 841, 938, 939, 962, 991, 992, 1058, 1138, 1189], "googl": [44, 165, 170, 177, 179, 191, 194, 197, 198, 202, 203, 206, 227, 232, 385, 547, 748, 749, 922, 1056, 1131, 1171, 1173, 1202], "cloner": 44, "init": [44, 152, 169, 171, 187, 191, 268, 275, 277, 338, 396, 423, 521, 522, 544, 547, 575, 592, 610, 628, 788, 796, 801, 821, 823, 835, 869, 921, 1005], "cpp": [44, 50, 101, 126, 128, 129, 130, 131, 132, 133, 136, 137, 146, 181, 196, 206, 231, 232, 248, 275, 286, 295, 297, 385, 476, 477, 478, 483, 490, 491, 492, 494, 495, 497, 499, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 530, 531, 532, 537, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 556, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 592, 593, 594, 595, 596, 600, 601, 603, 605, 606, 607, 608, 609, 610, 611, 612, 620, 621, 622, 623, 624, 627, 628, 629, 630, 631, 633, 634, 637, 638, 639, 643, 647, 648, 649, 650, 651, 657, 661, 662, 665, 667, 668, 670, 674, 679, 680, 681, 682, 683, 684, 685, 686, 690, 695, 697, 700, 701, 702, 705, 707, 712, 718, 727, 728, 729, 732, 733, 734, 735, 736, 737, 739, 740, 742, 744, 748, 749, 750, 751, 752, 753, 762, 764, 766, 770, 772, 774, 776, 780, 781, 782, 784, 937, 967, 971, 974, 986, 988, 991, 1007], "assert_eq": [44, 490, 492, 495, 499, 512, 539, 540, 546, 549, 550, 551, 552, 553, 554, 556, 558, 559, 560, 563, 564, 565, 566, 567, 585, 592, 593, 594, 605, 606, 608, 609, 610, 611, 612, 670, 695, 697, 700, 701, 702, 733, 744, 748, 749, 750, 751, 753, 766, 780, 781, 782, 784, 1171, 1176], "test_f": [44, 514, 549, 550, 784, 1176], "simplefixtur": 44, "public": [44, 55, 105, 106, 111, 118, 121, 122, 123, 124, 125, 128, 133, 137, 141, 167, 180, 185, 222, 230, 243, 271, 276, 285, 286, 294, 300, 306, 307, 362, 365, 370, 446, 482, 483, 484, 486, 491, 493, 497, 499, 502, 503, 504, 514, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 536, 549, 550, 562, 576, 582, 591, 592, 593, 595, 596, 597, 599, 600, 601, 602, 603, 604, 606, 607, 608, 615, 618, 633, 634, 651, 661, 662, 664, 665, 667, 668, 676, 677, 682, 684, 685, 690, 693, 694, 695, 696, 697, 700, 701, 703, 712, 714, 715, 716, 718, 720, 721, 724, 725, 726, 727, 728, 729, 733, 734, 735, 737, 748, 749, 750, 753, 754, 762, 764, 770, 772, 774, 776, 784, 786, 797, 801, 862, 863, 868, 882, 888, 929, 941, 942, 943, 944, 945, 950, 1051, 1056, 1176], "myfirstsuit": 44, "test_find": 44, "wtf": [44, 53, 128, 208, 239, 244, 245, 248, 250, 268, 307, 585, 600, 786, 929, 954, 958, 970, 1004, 1006, 1029], "tallk": 44, "morph": [44, 62, 197, 206, 231, 232, 297, 570, 582, 585, 588, 594, 690, 742, 835, 1033], "fixtur": [44, 197, 206, 298, 299, 314, 320, 321, 324, 325, 335, 373, 503, 514, 550, 786, 1169, 1202], "trivial": [44, 170, 181, 312, 328, 412, 428, 585, 602, 698, 703, 754, 838, 846, 939, 955, 991, 1186], "tempfil": [44, 1028], "crap": [44, 171, 246, 288, 344, 349, 458, 474, 477, 652, 691, 771, 939, 1004], "null": [44, 62, 123, 171, 172, 173, 188, 213, 229, 242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 387, 400, 407, 435, 446, 456, 461, 474, 549, 605, 704, 791, 797, 804, 829, 864, 873, 875, 876, 893, 908, 915, 957, 962, 969, 976, 978, 980, 982, 988, 991, 992, 997, 1000, 1004], "deriv": [44, 111, 125, 129, 145, 192, 246, 258, 325, 352, 376, 550, 568, 594, 664, 665, 667, 668, 729, 737, 770, 1030, 1043, 1176], "seminar": [45, 153], "psycho": 45, "rule": [45, 171, 177, 202, 252, 258, 262, 295, 334, 373, 388, 407, 409, 410, 411, 426, 432, 450, 461, 462, 463, 465, 473, 475, 500, 512, 517, 618, 664, 698, 701, 705, 707, 727, 753, 754, 872, 893, 954, 1030, 1053, 1061, 1062, 1072, 1081, 1144, 1191], "dont": [45, 262, 472, 806], "scenario": [45, 172, 185, 194, 202, 206, 395, 516, 668, 762, 992, 993, 1000], "robert": [45, 500], "martin": [45, 472, 473, 500], "someon": [45, 130, 202, 243, 258, 265, 268, 299, 372, 607, 762, 825, 890, 896, 917, 939, 963, 1007, 1055], "mistak": [45, 170, 176, 177, 227, 243, 267, 937, 1131, 1144], "kill": [45, 171, 172, 248, 893, 947, 976, 995, 1004, 1005, 1034, 1190], "peopl": [45, 62, 167, 170, 172, 174, 175, 177, 185, 190, 202, 231, 265, 383, 472, 500, 518, 707, 833, 872, 1039, 1055, 1083, 1138, 1140], "polit": [45, 740], "thei": [45, 55, 69, 82, 126, 158, 169, 170, 171, 172, 173, 174, 175, 176, 177, 181, 190, 192, 194, 198, 210, 232, 239, 243, 245, 248, 255, 258, 262, 304, 312, 328, 376, 402, 408, 428, 456, 459, 462, 468, 472, 473, 477, 486, 491, 492, 512, 517, 518, 546, 548, 568, 585, 595, 600, 626, 630, 662, 690, 691, 694, 701, 702, 749, 750, 756, 792, 806, 825, 833, 858, 868, 872, 894, 930, 937, 938, 939, 950, 975, 1004, 1005, 1010, 1025, 1035, 1043, 1050, 1053, 1103, 1126, 1133, 1136, 1137, 1144, 1147, 1150, 1164, 1170, 1186, 1189], "regul": 45, "ethic": 45, "everi": [45, 53, 61, 62, 63, 82, 93, 114, 115, 134, 163, 170, 176, 206, 229, 258, 299, 397, 454, 468, 472, 495, 500, 516, 535, 536, 605, 615, 667, 689, 691, 696, 784, 804, 817, 833, 858, 866, 868, 870, 871, 887, 894, 896, 938, 953, 988, 991, 1004, 1005, 1024, 1026, 1035, 1071, 1089, 1100, 1111, 1137, 1171, 1186], "particular": [45, 126, 169, 181, 202, 441, 466, 492, 516, 568, 784, 879, 1054, 1055], "electr": 45, "seem": [45, 158, 169, 171, 172, 191, 296, 491, 937, 939, 1004, 1186], "adher": [45, 875], "immedi": [45, 62, 170, 171, 176, 177, 248, 289, 292, 295, 297, 351, 433, 643, 757, 762, 815, 825, 829, 930, 980, 989, 992, 994, 1075, 1171], "survei": [45, 191], "had": [45, 126, 169, 171, 172, 176, 177, 181, 185, 190, 202, 206, 235, 237, 256, 402, 441, 512, 579, 591, 676, 690, 827, 860, 861, 872, 897, 937, 950, 1021, 1055, 1062, 1081, 1150, 1154], "life": [45, 139, 145, 166, 177, 182, 185, 188, 190, 198, 597, 727, 748, 763, 785, 786, 833, 872, 929, 970, 984, 990, 1056, 1077, 1134], "accomplish": [45, 57, 82, 210, 296, 298, 299, 458, 473, 937], "befor": [45, 129, 133, 141, 145, 166, 170, 171, 173, 174, 175, 177, 180, 185, 190, 206, 209, 213, 231, 258, 274, 275, 277, 298, 299, 304, 320, 321, 322, 325, 332, 334, 390, 398, 399, 408, 428, 477, 549, 579, 585, 624, 650, 665, 691, 703, 718, 730, 735, 736, 746, 750, 751, 756, 757, 762, 764, 765, 784, 785, 786, 797, 811, 821, 827, 833, 859, 895, 930, 939, 978, 993, 995, 1007, 1030, 1035, 1053, 1096, 1121, 1123, 1127, 1136, 1149, 1153, 1156, 1165, 1166, 1172], "formal": [45, 180, 194, 231, 232, 321, 324, 539, 1165], "googletest": [45, 69, 101, 197, 199, 200, 232, 275, 277, 312, 328, 488, 497, 533, 546, 548, 549, 610, 748, 749, 750, 784, 786, 787, 1171, 1173, 1186], "messag": [45, 133, 165, 167, 175, 176, 185, 188, 194, 200, 208, 209, 235, 239, 242, 245, 255, 258, 265, 268, 283, 290, 298, 299, 300, 304, 326, 332, 338, 344, 353, 365, 370, 473, 476, 478, 497, 602, 618, 677, 707, 712, 732, 734, 735, 744, 754, 762, 786, 808, 833, 866, 870, 875, 929, 951, 970, 980, 984, 1059, 1073, 1083, 1125, 1166, 1170, 1172, 1198, 1199, 1200], "saniti": [45, 464, 469, 470, 473, 477, 481, 607, 692, 730, 783, 785, 786], "perform": [45, 118, 122, 170, 176, 185, 187, 209, 228, 229, 258, 299, 326, 371, 412, 415, 438, 445, 450, 458, 461, 462, 465, 468, 469, 470, 476, 585, 625, 643, 646, 668, 689, 703, 745, 771, 786, 817, 995, 1012, 1022, 1023, 1081, 1164, 1182, 1185], "delici": [45, 53], "fearlessli": [45, 53], "backlog": [45, 46, 47, 51, 55, 56, 786], "Or": [45, 46, 47, 51, 55, 56, 116, 117, 119, 120, 127, 129, 145, 170, 277, 334, 457, 473, 576, 704, 730, 741, 785, 786, 924, 950, 960, 986, 1061, 1075, 1152, 1156], "Will": [45, 46, 47, 51, 55, 56, 170, 203, 262, 351, 786, 794, 1007, 1073, 1159, 1173, 1179, 1198], "high": [46, 53, 123, 129, 191, 231, 245, 262, 472, 500, 523, 536, 540, 544, 748, 750, 765, 815, 827, 831, 843, 852], "speed": [46, 53, 160, 165, 170, 239, 243, 245, 255, 258, 262, 326, 463, 753, 827, 833, 993, 995, 1135, 1136], "hype": [46, 771], "we": [46, 47, 50, 51, 55, 56, 60, 61, 63, 72, 129, 133, 137, 141, 144, 145, 146, 152, 160, 169, 170, 172, 173, 174, 175, 176, 177, 181, 185, 186, 189, 190, 191, 192, 193, 194, 198, 199, 202, 206, 207, 208, 209, 210, 212, 221, 222, 229, 230, 231, 232, 236, 239, 242, 243, 245, 246, 248, 275, 277, 279, 286, 289, 292, 294, 296, 298, 299, 317, 321, 324, 325, 351, 368, 371, 372, 376, 387, 402, 413, 420, 428, 441, 450, 452, 456, 458, 461, 466, 473, 475, 483, 484, 490, 491, 492, 495, 497, 499, 502, 511, 512, 516, 517, 533, 534, 535, 536, 544, 547, 548, 549, 579, 585, 594, 606, 630, 661, 665, 682, 683, 684, 685, 686, 690, 701, 712, 718, 744, 745, 750, 753, 764, 768, 786, 794, 797, 801, 802, 806, 808, 811, 829, 833, 835, 841, 849, 860, 861, 875, 876, 890, 896, 897, 912, 930, 937, 938, 939, 946, 950, 955, 956, 957, 963, 964, 965, 966, 978, 991, 1000, 1017, 1021, 1022, 1023, 1031, 1050, 1055, 1081, 1083, 1087, 1089, 1118, 1125, 1126, 1127, 1131, 1136, 1137, 1138, 1139, 1146, 1147, 1153, 1156, 1172, 1173, 1189], "did": [46, 171, 172, 174, 176, 177, 180, 181, 189, 198, 202, 209, 294, 452, 456, 472, 497, 535, 683, 752, 754, 781, 806, 811, 833, 872, 930, 941, 950, 1031, 1184], "consequ": [46, 169, 170, 289, 292, 432, 453, 456, 457, 500, 963, 1050, 1150, 1184], "unsign": [46, 118, 124, 141, 243, 248, 404, 406, 414, 443, 446, 450, 458, 504, 519, 534, 548, 549, 550, 600, 670, 671, 680, 728, 762, 764, 770, 772, 774, 776, 784, 789, 792, 797, 804, 813, 815, 817, 823, 829, 838, 843, 847, 959, 1000, 1001, 1181, 1182], "introduc": [46, 58, 82, 101, 231, 248, 256, 297, 312, 328, 454, 462, 474, 490, 495, 517, 535, 536, 537, 538, 568, 590, 676, 786, 852, 1004, 1033, 1059, 1073, 1138, 1186], "throw": [46, 133, 174, 177, 248, 492, 516, 517, 521, 527, 528, 530, 531, 532, 550, 568, 646, 684, 726, 747, 750, 761, 764, 1176], "notfounderror": 46, "cbda1e98040d084c31ff6e83f04d78dbebf5c1c2": 46, "cluster_clean_cod": [46, 47, 51, 53, 55, 56, 786], "cluster_clean_code_bug": [46, 47, 53, 55, 56, 786], "clean_code_bugs_find_error": [46, 47, 53, 786], "twice": [47, 53, 55, 56, 57, 170, 394, 433, 455, 475, 698, 701, 760, 786, 853, 893, 930, 946, 978, 1023], "crash": [47, 53, 62, 114, 115, 168, 170, 171, 172, 175, 227, 229, 239, 245, 255, 258, 383, 423, 430, 516, 600, 627, 672, 748, 786, 991, 1005, 1131], "found": [47, 53, 112, 113, 134, 157, 166, 169, 181, 190, 202, 235, 239, 242, 245, 248, 250, 252, 255, 258, 268, 283, 290, 304, 312, 322, 326, 328, 332, 338, 344, 348, 351, 365, 459, 468, 478, 480, 488, 526, 530, 531, 532, 538, 549, 551, 555, 556, 557, 585, 590, 630, 633, 636, 646, 650, 651, 675, 683, 685, 687, 695, 781, 786, 804, 865, 868, 875, 922, 939, 1007, 1010, 1019, 1024, 1030, 1038, 1047, 1077, 1109, 1135, 1138, 1174, 1186], "clean_code_bugs_overwrite_existing_fil": [47, 53, 55, 56, 786], "clean_code_bugs_overwrite_store_content_on_read": [47, 53, 55, 56, 786], "explicitli": [48, 171, 172, 176, 202, 242, 252, 262, 295, 410, 411, 429, 467, 473, 517, 594, 597, 605, 646, 695, 698, 701, 754, 766, 864, 992, 1001, 1029, 1039, 1058, 1144, 1152], "solut": [48, 69, 128, 175, 177, 185, 186, 194, 196, 202, 221, 231, 232, 237, 240, 243, 248, 253, 259, 275, 278, 289, 298, 299, 303, 309, 334, 335, 347, 432, 433, 436, 455, 458, 476, 489, 516, 538, 568, 590, 596, 597, 617, 654, 656, 658, 665, 679, 687, 702, 707, 712, 738, 754, 779, 785, 786, 894, 895, 912, 975, 980, 993, 994, 1010, 1035, 1071, 1102, 1114, 1144, 1187], "force_overwrit": 48, "descriptor": [48, 170, 194, 226, 258, 262, 283, 304, 322, 372, 597, 792, 813, 849, 869, 875, 876, 933, 955, 956, 957, 1001], "mani": [49, 53, 56, 61, 63, 65, 93, 118, 124, 146, 170, 172, 176, 177, 194, 199, 202, 218, 229, 250, 260, 265, 286, 290, 294, 295, 297, 303, 322, 351, 372, 376, 400, 412, 414, 423, 438, 452, 454, 459, 474, 475, 487, 488, 491, 494, 499, 502, 541, 568, 615, 625, 644, 646, 665, 677, 689, 690, 698, 718, 739, 744, 752, 760, 786, 792, 794, 811, 819, 825, 829, 833, 859, 869, 870, 872, 873, 926, 938, 956, 957, 976, 986, 989, 1004, 1005, 1007, 1017, 1026, 1028, 1030, 1035, 1044, 1054, 1059, 1062, 1065, 1069, 1077, 1081, 1083, 1087, 1136, 1138, 1139, 1140, 1144, 1153, 1171, 1184, 1187], "overwrit": [49, 113, 516, 517, 530, 538, 555, 557, 590, 600, 646, 648, 677, 786, 833, 895, 900, 912, 964, 1079], "present": [49, 60, 146, 167, 173, 177, 181, 185, 190, 203, 258, 304, 312, 321, 328, 484, 596, 829, 833, 868, 939, 950, 969, 1030, 1113, 1153, 1186], "continu": [50, 53, 62, 65, 93, 103, 110, 114, 115, 126, 129, 146, 163, 171, 180, 181, 193, 202, 203, 206, 215, 220, 221, 222, 251, 256, 262, 268, 278, 362, 426, 427, 433, 434, 440, 444, 447, 451, 456, 460, 464, 469, 470, 472, 474, 477, 478, 495, 609, 611, 612, 672, 692, 700, 730, 781, 782, 783, 784, 785, 786, 930, 932, 936, 942, 965, 966, 1004, 1005, 1010, 1021, 1028, 1035, 1039, 1072, 1075, 1093, 1138, 1153, 1171], "expected_cont": 50, "fill": [50, 172, 173, 185, 207, 258, 259, 304, 414, 690, 694, 739, 749, 804, 829, 833, 899, 956, 1033], "strategi": [50, 242, 448, 938, 1088, 1164], "hurri": [50, 433], "read_fil": 50, "compar": [50, 128, 230, 232, 243, 258, 299, 304, 411, 453, 467, 468, 477, 546, 592, 749, 941, 976, 1073, 1078, 1102, 1106, 1136], "binaryfil": 50, "doesn": [50, 172, 175, 283, 332, 428, 430, 433, 448, 462, 744, 792, 853, 860, 861, 895, 899, 912, 1008, 1019, 1075], "belong": [50, 199, 202, 400, 420, 446, 473, 568, 592, 606, 608, 878, 886, 965, 1046, 1060], "test_write_csv": 50, "test_read_csv": [50, 1128], "ah": [50, 61, 63, 176, 192, 229, 231, 245, 647, 1007, 1083, 1147], "altern": [51, 53, 55, 56, 62, 69, 72, 82, 87, 145, 169, 170, 177, 203, 222, 248, 309, 338, 407, 484, 592, 601, 615, 626, 629, 698, 747, 753, 774, 786, 833, 872, 893, 933, 937, 939, 951, 959, 965, 976, 982, 1000, 1007, 1055, 1075, 1078, 1152, 1156, 1159, 1166, 1176, 1179, 1195, 1196, 1198, 1201], "cluster_clean_code_featur": [51, 53, 55, 56, 786], "clean_code_features_csv": [51, 53, 55, 56, 786], "clean_code_features_other_index": [51, 53, 786], "establish": [53, 75, 210, 222, 286, 298, 299, 320, 324, 362, 472, 833, 991, 1187], "were": [53, 126, 145, 163, 170, 172, 176, 185, 202, 206, 383, 432, 488, 591, 600, 601, 627, 694, 733, 860, 861, 939, 966, 1021, 1029, 1053, 1062, 1081, 1086, 1144, 1150, 1184], "occas": [53, 93, 171, 749], "ourselv": [53, 202, 930], "gather": [53, 177, 209, 298, 299, 320, 321, 324, 350, 466, 468, 1115], "wreak": [53, 114, 115, 448, 672], "havoc": [53, 114, 115, 448, 672], "shoehorn": 53, "violat": [53, 118, 123, 124, 146, 170, 472, 500, 728, 750, 847, 991, 1005], "nearli": [53, 202, 208, 450, 983], "solid": [53, 116, 117, 118, 119, 120, 127, 146, 166, 182, 295, 297, 473, 500, 1182, 1183, 1197, 1198, 1200, 1201], "chanc": [53, 170, 172, 207, 452, 472, 788, 833, 958, 1189], "cluster_clean_code_refactor": [53, 55, 56, 786], "clean_code_refactoring_store_enum_switch": [53, 55, 56, 786], "clean_code_refactoring_backingstore_interfac": [53, 56, 786], "clean_code_refactoring_backingstore_monolith": [53, 55, 56, 786], "clean_code_refactoring_pass_store_in_ctor": [53, 56, 786], "now": [54, 60, 126, 169, 170, 171, 172, 173, 174, 176, 177, 185, 189, 198, 208, 218, 235, 242, 248, 252, 262, 270, 290, 294, 315, 351, 352, 365, 428, 441, 456, 461, 486, 492, 499, 512, 517, 539, 540, 547, 606, 630, 633, 639, 643, 651, 694, 745, 750, 765, 766, 791, 811, 833, 841, 843, 849, 865, 868, 930, 937, 938, 939, 965, 966, 974, 1019, 1021, 1026, 1029, 1044, 1047, 1071, 1126, 1136, 1138, 1156, 1165, 1184], "violatin": 54, "respect": [54, 61, 63, 69, 123, 163, 171, 185, 232, 294, 296, 357, 404, 452, 472, 517, 535, 594, 601, 664, 698, 749, 750, 864, 872, 937, 991, 1005, 1050], "mainli": [55, 170, 206, 295, 304, 646, 784, 973, 1033], "bugfix": 55, "ongo": [55, 126, 993], "scene": [55, 1007, 1050], "pleas": [55, 128, 171, 172, 175, 177, 181, 198, 202, 206, 207, 209, 210, 211, 212, 222, 248, 275, 277, 286, 307, 348, 356, 398, 432, 462, 550, 607, 609, 610, 611, 612, 872, 930, 938, 939, 954, 983, 1001, 1009, 1010, 1055, 1157], "wait": [55, 76, 77, 78, 82, 87, 91, 141, 145, 159, 170, 171, 172, 173, 174, 176, 217, 321, 351, 662, 690, 757, 765, 786, 810, 825, 831, 835, 838, 841, 843, 866, 869, 877, 929, 930, 956, 958, 962, 974, 986, 989, 992, 999, 1001, 1004, 1079, 1147, 1171, 1189, 1197], "unnecessarili": [55, 73, 1001], "conflict": [55, 79, 81, 126, 129, 145, 297, 298, 299, 320, 398, 449, 601, 691, 763, 785, 786, 789, 792, 802, 929, 938, 970, 978, 984, 1004, 1038, 1167], "rip": [55, 173, 474, 533, 991, 1146], "detail": [55, 88, 167, 172, 175, 180, 184, 185, 197, 203, 217, 228, 229, 231, 232, 239, 245, 255, 259, 260, 262, 266, 288, 299, 338, 345, 349, 365, 472, 477, 500, 537, 547, 549, 597, 749, 811, 893, 937, 939, 993, 1025, 1133, 1173, 1182], "instanc": [55, 57, 111, 114, 115, 136, 177, 218, 226, 230, 239, 242, 243, 250, 252, 257, 260, 262, 265, 280, 283, 290, 304, 322, 332, 338, 344, 361, 376, 490, 495, 503, 514, 516, 517, 518, 530, 531, 532, 535, 548, 661, 672, 679, 684, 732, 735, 794, 799, 802, 1000, 1001, 1028, 1030, 1044, 1045, 1047, 1050, 1073], "its": [55, 57, 61, 63, 69, 88, 91, 112, 114, 115, 123, 141, 164, 169, 170, 171, 172, 174, 175, 176, 177, 180, 181, 187, 192, 194, 198, 199, 200, 202, 222, 229, 230, 232, 239, 243, 245, 255, 258, 262, 271, 286, 288, 289, 292, 295, 297, 304, 321, 356, 367, 398, 420, 431, 433, 448, 450, 452, 459, 461, 483, 491, 495, 514, 517, 518, 533, 534, 535, 536, 541, 546, 549, 591, 592, 593, 595, 597, 602, 632, 672, 690, 702, 712, 738, 757, 784, 797, 806, 811, 833, 838, 860, 861, 864, 866, 870, 875, 880, 881, 893, 894, 915, 917, 938, 941, 942, 949, 959, 960, 965, 980, 986, 989, 991, 992, 993, 1001, 1023, 1028, 1030, 1033, 1038, 1043, 1047, 1053, 1061, 1071, 1073, 1078, 1082, 1088, 1136, 1138, 1157, 1164, 1166, 1184, 1186, 1187, 1189], "replac": [55, 62, 101, 133, 175, 220, 231, 239, 242, 243, 245, 246, 248, 255, 258, 290, 304, 321, 350, 392, 407, 448, 474, 537, 538, 590, 623, 624, 683, 690, 718, 735, 749, 764, 771, 784, 786, 836, 939, 979, 991, 1005, 1029], "symptom": [57, 180], "mismatch": [57, 574], "onc": [57, 118, 123, 124, 129, 169, 171, 172, 175, 176, 177, 180, 185, 190, 191, 350, 368, 390, 415, 424, 432, 462, 475, 491, 492, 493, 497, 502, 514, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 547, 549, 607, 625, 626, 680, 721, 732, 742, 760, 770, 772, 774, 775, 776, 777, 784, 794, 797, 829, 930, 939, 981, 1004, 1005, 1024, 1030, 1031, 1032, 1066, 1087, 1096, 1109, 1140, 1143, 1166], "sync": [57, 146, 171, 242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344, 448, 452, 833, 924], "imho": [57, 729], "forbidden": [58, 450], "accord": [58, 62, 128, 141, 169, 172, 258, 681, 877, 893, 926, 930, 938, 939], "uncl": [58, 383], "bob": [58, 258, 383, 472], "enum": [58, 231, 232, 335, 407, 422, 460, 464, 469, 470, 474, 477, 692, 730, 772, 774, 783, 785, 786, 792, 794, 802, 991, 1184], "submiss": [59, 64, 67], "submit": [59, 113, 827], "linuxtag": [59, 209, 325, 935], "pure": [60, 73, 136, 177, 365, 428, 501, 664, 690, 729, 754, 872, 1062, 1184], "local": [60, 150, 170, 171, 173, 176, 185, 198, 202, 203, 210, 211, 215, 231, 232, 246, 248, 249, 255, 258, 261, 262, 283, 286, 298, 300, 309, 312, 320, 321, 324, 325, 328, 330, 331, 336, 337, 338, 342, 343, 344, 346, 347, 351, 365, 398, 402, 426, 428, 445, 483, 487, 496, 510, 512, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 590, 597, 615, 698, 701, 703, 732, 786, 806, 833, 838, 860, 861, 865, 915, 929, 937, 939, 940, 941, 942, 948, 950, 956, 967, 975, 1017, 1019, 1026, 1029, 1074, 1159, 1186, 1187, 1200], "easili": [60, 146, 164, 171, 177, 351, 407, 426, 459, 472, 491, 664, 740, 815, 831, 959, 989, 995, 1025, 1038, 1070, 1184], "guess": [60, 252, 262, 288, 452, 457, 707, 946, 1001], "autotool": [60, 181], "portabl": [60, 194, 400, 462, 757, 975, 982, 1001, 1005, 1062, 1140], "configur": [60, 61, 62, 63, 72, 77, 82, 86, 88, 89, 90, 108, 126, 128, 133, 139, 141, 145, 146, 155, 156, 169, 171, 172, 175, 177, 200, 210, 276, 285, 286, 295, 306, 307, 313, 314, 317, 321, 329, 365, 371, 475, 479, 480, 482, 483, 495, 497, 502, 539, 540, 541, 549, 786, 806, 813, 833, 847, 863, 864, 865, 868, 877, 913, 926, 929, 930, 938, 950, 957, 971, 973, 1001, 1008, 1009, 1021, 1031, 1101, 1139, 1143, 1152, 1159, 1187], "archiv": [60, 107, 108, 128, 181, 182, 210, 212, 276, 285, 286, 306, 468, 481, 487, 496, 510, 538, 539, 540, 541, 542, 543, 544, 545, 548, 590, 786, 863, 893, 929, 1009, 1012, 1014, 1015, 1017, 1018, 1019, 1024, 1028, 1159], "m4": 60, "macro": [60, 248, 313, 329, 392, 403, 406, 418, 427, 434, 440, 444, 447, 451, 454, 460, 464, 469, 470, 478, 479, 483, 484, 487, 692, 730, 736, 783, 785, 786, 802, 821, 835, 875, 953, 959, 965, 975, 1009, 1081, 1171, 1176, 1181, 1185], "stock": [60, 242, 243, 1087, 1088], "sudo": [60, 105, 128, 136, 166, 173, 175, 177, 185, 199, 210, 248, 276, 285, 286, 295, 297, 306, 307, 338, 478, 485, 562, 786, 863, 888, 890, 929, 930, 939, 993, 1021, 1166], "pwd": [60, 113, 126, 198, 275, 277, 338, 365, 370, 481, 547, 549, 610, 808, 811, 860, 861, 870, 915, 917, 930, 1008, 1009, 1022, 1024, 1164], "pub": [60, 173, 210, 806, 946, 1125], "lib": [60, 128, 166, 175, 181, 209, 229, 232, 242, 258, 265, 268, 283, 290, 297, 300, 304, 326, 332, 338, 344, 480, 546, 811, 823, 829, 833, 924, 939, 1004, 1008, 1010, 1019, 1021, 1159, 1166], "remot": [60, 106, 108, 150, 173, 175, 177, 185, 222, 231, 278, 351, 489, 510, 524, 538, 590, 786, 806, 833, 834, 838, 859, 862, 929, 938, 940, 943, 944, 945, 948, 956, 1019, 1031, 1187, 1188, 1195], "v0": 60, "v1": [60, 288, 497, 512, 694], "v2": [60, 62, 177, 197, 288, 497, 512, 694], "autotooleri": 60, "autogen": 60, "step": [60, 62, 169, 170, 176, 177, 181, 185, 206, 245, 248, 249, 275, 277, 290, 294, 299, 322, 388, 390, 392, 408, 432, 474, 477, 494, 537, 547, 585, 610, 615, 748, 833, 860, 861, 1007, 1015, 1152, 1153, 1165], "noconfigur": 60, "suppress": [60, 176, 222, 466, 491, 600, 749, 912, 1159], "absorb": [60, 163, 208, 471, 473, 701, 1088], "Be": [60, 101, 116, 117, 119, 120, 127, 248, 295, 297, 335, 351, 405, 438, 547, 568, 593, 598, 660, 687, 699, 701, 730, 732, 735, 746, 755, 763, 783, 785, 786, 859, 1004, 1019], "awar": [60, 351, 449, 482, 993], "enabl": [60, 169, 175, 202, 210, 231, 239, 245, 255, 258, 286, 296, 411, 462, 488, 495, 517, 573, 831, 833, 838, 885, 930, 934, 938, 950, 993, 1017, 1021, 1031, 1189], "mkdir": [60, 104, 128, 156, 171, 176, 180, 198, 199, 275, 277, 286, 365, 370, 547, 549, 550, 610, 784, 786, 833, 860, 861, 862, 863, 897, 898, 899, 900, 901, 904, 905, 907, 913, 929, 946, 950, 1000, 1019, 1021, 1022, 1028], "dist": [60, 154, 753, 1086], "406332": 60, "apr": [60, 62, 229, 239, 268, 358, 1008, 1009, 1022], "transfer": [60, 170, 232, 235, 312, 328, 351, 468, 550, 600, 701, 804, 833, 846, 847, 859, 860, 861, 920, 940, 946, 949, 1147, 1184, 1186], "scp": [60, 101, 105, 128, 156, 181, 210, 276, 285, 286, 306, 307, 549, 550, 786, 806, 860, 861, 929, 940, 941, 942, 943, 945, 950, 967, 1017, 1018, 1019], "192": [60, 203, 210, 242, 245, 250, 252, 255, 258, 262, 265, 268, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 371, 806, 868, 950, 1201], "168": [60, 203, 210, 213, 220, 229, 242, 245, 250, 252, 255, 258, 262, 265, 268, 271, 280, 283, 300, 304, 310, 322, 326, 332, 338, 344, 348, 371, 806, 868, 950, 1019, 1201], "82": [60, 180, 189, 203, 213, 218, 220, 226, 229, 235, 242, 245, 250, 252, 258, 262, 265, 268, 271, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 360, 1088, 1135, 1136], "prerequisit": [60, 108, 248, 806, 937, 1058], "apt": [60, 136, 181, 185, 199, 248, 295, 297, 562, 813, 932, 937, 939, 950, 1009, 1021, 1166, 1171], "python3": [60, 62, 90, 154, 166, 181, 190, 203, 209, 229, 239, 245, 255, 258, 262, 338, 985, 995, 1021, 1031, 1058, 1152, 1153, 1159, 1166], "along": [60, 171, 177, 230, 243, 383, 432, 502, 784, 878, 986, 1007, 1038], "omit": [60, 62, 176, 185, 190, 239, 245, 255, 258, 259, 262, 332, 348, 369, 413, 450, 462, 474, 494, 668, 690, 737, 811, 827, 876, 937, 938, 939, 946, 962, 963, 967, 978, 1028, 1031, 1083, 1164], "bind": [60, 146, 171, 273, 295, 297, 325, 335, 410, 417, 648, 690, 703, 730, 754, 755, 757, 763, 785, 786, 933, 1007, 1039, 1043, 1062, 1073, 1150, 1184, 1199, 1201], "cxx": [60, 167, 475, 490, 491, 492, 493, 494, 495, 497, 499, 502, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 546, 548, 551, 552, 553, 554, 556, 558, 559, 560, 561, 563, 564, 565, 566, 567, 784, 1008, 1009], "xf": [60, 181, 859, 1021], "ld_library_path": [60, 480, 1024], "gpiod": [60, 62, 64, 67, 813], "py3": [60, 154, 166, 1086], "aarch64": [60, 181, 1019], "born": [61, 63, 65, 871, 1056], "bound": [61, 62, 63, 65, 248, 252, 283, 295, 310, 449, 459, 464, 469, 470, 574, 602, 604, 606, 624, 703, 786, 871, 875, 931, 992, 995, 1048, 1069, 1092, 1152], "employe": [61, 63, 65, 197, 229, 1047], "year": [61, 63, 65, 169, 170, 171, 172, 176, 181, 202, 242, 248, 290, 294, 472, 591, 675, 676, 678, 679, 682, 683, 684, 685, 686, 687, 689, 736, 786, 1088], "emploi": [61, 63, 65, 171, 181, 206, 433, 833], "pattern": [61, 63, 86, 110, 146, 166, 167, 183, 186, 205, 206, 232, 235, 258, 297, 338, 373, 382, 384, 472, 489, 490, 491, 492, 494, 495, 497, 499, 500, 501, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 538, 590, 753, 754, 771, 786, 787, 893, 922, 989, 1036, 1037, 1171, 1191], "led": [61, 63, 76, 77, 78, 82, 95, 130, 131, 132, 137, 138, 146, 188, 210, 286, 351, 374, 539, 786, 792, 930, 938], "hei": [61, 63, 170, 210, 262, 607, 608, 868, 954, 1076, 1144], "reinvent": [61, 63, 230, 279, 1131], "wheel": [61, 63, 129, 154, 166, 835, 870, 965, 1159], "admit": [61, 63, 177], "notori": [61, 63], "fun": [61, 63, 135, 170, 175, 228, 230, 266, 295, 383, 496, 733, 833, 872, 930, 937, 938, 1035, 1047, 1059, 1075, 1130, 1131, 1158, 1165, 1184], "live": [61, 63, 74, 101, 102, 128, 133, 149, 167, 171, 175, 193, 197, 202, 206, 211, 222, 230, 231, 232, 233, 246, 248, 256, 267, 274, 275, 276, 277, 279, 285, 287, 288, 295, 296, 297, 298, 299, 303, 306, 307, 321, 325, 334, 335, 365, 369, 373, 374, 376, 383, 384, 385, 445, 462, 474, 475, 480, 496, 501, 510, 512, 514, 536, 538, 539, 540, 541, 542, 543, 544, 545, 548, 555, 557, 568, 625, 626, 646, 688, 699, 730, 731, 732, 749, 763, 784, 785, 786, 787, 797, 833, 863, 866, 867, 872, 888, 889, 929, 970, 1038, 1055, 1088, 1131, 1157, 1165, 1183, 1184, 1198], "session": [61, 63, 166, 175, 177, 195, 202, 206, 210, 214, 239, 245, 255, 258, 270, 274, 275, 277, 288, 296, 371, 835, 864, 865, 947, 958, 1119, 1131, 1157, 1164, 1194], "simpl": [61, 63, 76, 78, 79, 82, 90, 126, 157, 166, 170, 174, 175, 177, 180, 181, 185, 190, 194, 197, 198, 202, 206, 209, 232, 248, 250, 252, 258, 262, 314, 317, 386, 387, 394, 433, 435, 449, 452, 459, 474, 475, 476, 477, 478, 482, 483, 485, 495, 593, 600, 601, 639, 667, 675, 676, 678, 679, 682, 683, 684, 685, 686, 687, 707, 740, 750, 759, 786, 792, 806, 813, 825, 833, 835, 843, 869, 922, 930, 931, 937, 938, 967, 973, 975, 978, 993, 1001, 1004, 1008, 1009, 1010, 1015, 1031, 1035, 1055, 1056, 1064, 1083, 1131, 1137, 1139, 1155, 1170, 1171], "thu": [61, 63, 170, 171, 172, 208, 417, 492, 806, 811, 853, 860, 963, 1143, 1189], "techniqu": [61, 63, 73, 74, 75, 452, 462, 548, 672, 933], "usag": [61, 63, 69, 84, 110, 118, 124, 129, 146, 150, 172, 177, 222, 232, 243, 256, 270, 295, 297, 298, 320, 335, 351, 371, 383, 433, 458, 459, 466, 477, 481, 487, 496, 497, 510, 536, 537, 538, 590, 600, 607, 608, 626, 661, 663, 664, 667, 668, 687, 689, 701, 712, 718, 732, 739, 771, 785, 786, 835, 870, 893, 922, 925, 940, 971, 974, 989, 1025, 1030, 1033, 1083, 1125, 1127, 1159, 1166, 1173, 1184], "At": [61, 63, 141, 170, 171, 174, 177, 181, 185, 202, 206, 232, 242, 246, 248, 282, 397, 426, 430, 462, 490, 748, 825, 1026, 1043, 1131], "flow": [61, 63, 171, 202, 207, 209, 210, 211, 212, 216, 221, 222, 237, 240, 253, 264, 366, 367, 368, 370, 406, 426, 434, 440, 444, 447, 451, 460, 462, 464, 469, 470, 692, 730, 739, 783, 785, 786, 1004, 1039, 1064, 1066, 1073, 1150, 1185], "event": [61, 62, 63, 90, 136, 140, 173, 194, 230, 239, 243, 245, 255, 258, 286, 298, 299, 468, 718, 762, 769, 773, 786, 801, 802, 810, 835, 836, 848, 849, 850, 851, 854, 866, 870, 929, 933, 958, 970, 973, 989, 992, 993, 997, 1001, 1042, 1147, 1156, 1189, 1198, 1200, 1201], "save": [61, 62, 63, 89, 166, 169, 170, 182, 190, 193, 239, 245, 255, 258, 289, 292, 295, 348, 414, 416, 690, 721, 724, 725, 726, 877, 895, 949, 958, 995, 1024, 1028, 1034, 1044, 1077, 1136, 1166, 1184], "schedul": [61, 62, 63, 69, 103, 114, 115, 128, 140, 149, 150, 170, 187, 210, 212, 276, 285, 286, 306, 378, 379, 490, 496, 510, 538, 539, 540, 541, 542, 543, 544, 545, 548, 590, 763, 785, 786, 815, 825, 831, 838, 853, 860, 861, 862, 863, 867, 869, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 907, 908, 909, 910, 911, 913, 929, 941, 942, 943, 944, 945, 952, 958, 960, 968, 970, 975, 984, 986, 987, 991, 995, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1143, 1179, 1189, 1190, 1200], "overhead": [61, 63, 462, 468, 579, 588, 753, 754], "usual": [61, 63, 88, 112, 128, 170, 171, 177, 180, 185, 190, 200, 202, 262, 296, 312, 328, 388, 428, 429, 455, 468, 472, 478, 480, 485, 490, 504, 512, 518, 547, 592, 608, 649, 703, 738, 739, 753, 762, 765, 784, 792, 804, 806, 811, 821, 827, 829, 833, 847, 849, 853, 869, 871, 875, 894, 930, 931, 938, 959, 973, 991, 992, 1007, 1008, 1009, 1010, 1019, 1028, 1029, 1030, 1031, 1035, 1038, 1041, 1042, 1048, 1050, 1052, 1053, 1055, 1058, 1064, 1069, 1130, 1137, 1138, 1144, 1166, 1167, 1173, 1186], "exhibit": [61, 63, 248, 684, 939, 960, 965], "glitch": [61, 63, 172, 177, 938, 939], "caus": [61, 63, 170, 173, 185, 239, 245, 255, 258, 262, 939, 986, 991, 1153], "hiccup": [61, 63, 177, 288, 1009], "twist": [61, 63, 817], "amazingli": [61, 63, 877], "multi": [62, 1137, 1144], "chmod": [62, 177, 365, 860, 861, 878, 883, 885, 887, 890, 942, 946], "snippet": [62, 118, 121, 190, 209, 331, 350, 655, 938, 1031], "subdirectori": [62, 146, 176, 185, 197, 199, 222, 313, 329, 475, 479, 480, 533, 547, 786, 808, 859, 860, 861, 873, 883, 885, 902, 917, 921, 938, 939, 1019, 1119, 1171], "stuff": [62, 74, 82, 104, 128, 137, 169, 172, 176, 185, 190, 202, 206, 209, 222, 231, 232, 253, 267, 286, 288, 309, 351, 369, 468, 474, 576, 623, 784, 786, 792, 801, 833, 863, 893, 901, 907, 913, 929, 937, 967, 1028, 1030, 1086, 1126, 1131, 1133, 1164], "strace": [62, 101, 170, 172, 383, 791, 796, 849, 956, 962, 975, 991, 1000, 1197], "pid": [62, 170, 172, 173, 467, 852, 865, 869, 871, 975, 991, 994, 1000, 1004, 1005], "4677": 62, "11hello": 62, "clock_gettime64": 62, "clock_monoton": [62, 765, 957, 991], "tv_sec": [62, 991], "164646": 62, "tv_nsec": [62, 991], "833862215": 62, "_newselect": 62, "tv_usec": 62, "500000": [62, 932, 938, 1136], "unfinish": [62, 172], "4679": 62, "resum": [62, 720, 721, 724, 725, 726, 829, 991], "timeout": [62, 760, 762, 764, 956, 1159], "mi": [62, 250], "845864201": 62, "4678": [62, 245], "fd": [62, 180, 242, 286, 550, 792, 937, 951, 955, 956, 957, 959, 963, 964, 965, 966, 969, 971, 974, 997, 1000, 1004, 1088], "fourth": 62, "involv": [62, 82, 170, 173, 177, 180, 232, 286, 298, 299, 320, 371, 448, 456, 462, 468, 533, 600, 602, 691, 804, 833, 930, 1008, 1017, 1019], "occasion": [62, 158, 185, 202, 231, 248, 458, 472, 482, 684, 833, 877, 1055, 1069, 1145], "due": [62, 177, 202, 490, 754, 1159], "weird": [62, 286, 331, 339, 458, 728, 766, 792, 817, 986, 1004], "gil": [62, 202, 206, 298, 299, 320, 321, 324, 1131], "jitter": [62, 993, 995], "heavi": [62, 194, 202, 500, 939, 1055, 1189], "usr": [62, 170, 171, 175, 181, 190, 193, 198, 200, 222, 229, 230, 239, 242, 245, 255, 258, 262, 265, 268, 283, 288, 290, 300, 304, 326, 332, 338, 344, 362, 365, 475, 477, 478, 480, 481, 485, 707, 740, 750, 784, 806, 833, 859, 865, 877, 889, 921, 924, 937, 939, 985, 995, 1004, 1007, 1008, 1009, 1010, 1019, 1022, 1024, 1031, 1034, 1058, 1119, 1134, 1147, 1159, 1166, 1173], "env": [62, 166, 171, 193, 288, 985, 995, 1058, 1085, 1119, 1134, 1147], "hello_left": 62, "hello_right": 62, "rjust": [62, 190, 258, 304], "hello_middl": 62, "center": [62, 193, 235, 250, 252, 258, 262, 283, 290, 304, 322, 326, 332, 338, 344, 348, 359, 466, 546], "t1": [62, 189, 252, 262, 283, 287, 304, 326, 338, 976], "t2": [62, 189, 245, 252, 262, 283, 326, 338, 976], "t3": 62, "async": [62, 65, 170, 202, 206, 239, 245, 255, 256, 258, 321, 325, 718, 983, 1006, 1131, 1199], "await": [62, 321], "epoll_wait": 62, "201": [62, 173, 203, 220, 229, 242, 245, 250, 252, 255, 258, 262, 265, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348], "multiplex": [62, 938, 957, 991, 1201], "create_task": 62, "sysf": [62, 128, 129, 130, 132, 138, 139, 149, 167, 217, 286, 352, 353, 549, 786, 789, 790, 835, 929, 930, 937, 939, 970, 971, 974, 1188, 1195], "unmaintain": [62, 276, 285, 286, 329, 384, 1009, 1073, 1181], "immun": [62, 607, 765], "hotplug": [62, 937], "reset": [62, 169, 497, 499, 749, 750, 751, 784, 1153, 1200], "pullup": 62, "pulldown": 62, "rpi": [62, 152, 181, 351, 833, 834, 937], "hope": [62, 170, 172, 175, 177, 181], "major": [62, 175, 188, 239, 245, 255, 258, 295, 297, 472, 476, 607, 792, 799, 864, 992, 1056, 1062, 1077], "releas": [62, 173, 199, 313, 329, 338, 433, 479, 750, 761, 762, 764, 786, 792, 806, 930, 937, 980, 985, 1021, 1024, 1056, 1165, 1196], "ton": [62, 748, 872, 934, 959, 991, 995, 1184], "bartosz": 62, "golaszewski": 62, "gpiochip0": [62, 813, 973], "ioctl": [62, 286, 454, 799, 801, 827, 835, 836, 841, 847, 933, 937], "crw": [62, 797, 864, 915, 937, 938, 939], "254": [62, 191, 242, 245, 250, 252, 255, 262, 265, 283, 290, 300, 304, 310, 326, 338, 344, 348], "request": [62, 97, 102, 129, 145, 171, 172, 175, 232, 234, 259, 265, 321, 338, 473, 492, 514, 528, 697, 698, 701, 702, 791, 835, 959, 974, 1164], "request_lin": 62, "consum": [62, 146, 172, 175, 192, 242, 321, 466, 483, 512, 762, 764, 858, 866, 873, 980, 981, 992, 997, 999, 1001, 1004, 1031, 1053, 1062, 1088, 1143, 1189], "mytest": 62, "config": [62, 101, 133, 134, 159, 160, 166, 171, 173, 175, 181, 189, 283, 300, 304, 369, 376, 385, 549, 750, 786, 806, 834, 915, 937, 938, 939, 946, 1021, 1031, 1159], "lineset": 62, "set_valu": [62, 764], "all_io": 62, "transform": [62, 70, 190, 205, 206, 209, 211, 221, 226, 227, 229, 230, 237, 248, 250, 253, 256, 279, 286, 288, 297, 303, 321, 334, 350, 462, 553, 554, 566, 568, 621, 675, 676, 677, 678, 679, 680, 682, 683, 684, 685, 686, 687, 718, 742, 786, 1017, 1037, 1081, 1114, 1131], "ntime": [62, 1041], "task": [62, 81, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 145, 185, 227, 240, 253, 267, 270, 273, 303, 309, 369, 372, 374, 375, 378, 379, 380, 383, 786, 860, 861, 878, 920, 929, 937, 940, 955, 970, 976, 989, 990, 992, 993, 1131, 1164], "interv": [62, 93, 133, 209, 239, 245, 246, 255, 258, 262, 283, 321, 369, 534, 536, 549, 550, 690, 764, 765, 957, 967, 991, 995], "none": [62, 141, 154, 166, 169, 170, 175, 180, 189, 191, 203, 213, 220, 221, 230, 235, 236, 239, 242, 245, 251, 252, 255, 258, 262, 265, 271, 280, 283, 287, 288, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 360, 452, 453, 474, 477, 597, 683, 685, 956, 973, 1001, 1028, 1031, 1053, 1079, 1086, 1156, 1171], "itertool": [62, 267, 269, 321, 1035], "cram": [62, 163, 200, 801, 991, 1028, 1144], "goe": [62, 69, 89, 126, 136, 173, 175, 190, 295, 462, 497, 562, 665, 685, 694, 744, 797, 833, 875, 876, 962, 989, 995, 1005, 1008, 1015, 1058, 1061, 1081], "stuff_raw": 62, "mod": [62, 258, 283, 303, 811], "sidewai": [62, 206, 209, 264, 378, 379, 1036, 1037], "numpi": [62, 202, 206, 221, 240, 246, 253, 288, 294, 322, 324, 327, 349, 474, 1055, 1130, 1134, 1137, 1145, 1149, 1159, 1166], "transpos": [62, 893], "col": 62, "tolist": 62, "outsid": [62, 258, 501, 514, 594, 602, 607, 749, 750, 823, 894, 976, 992, 1031], "instanti": [62, 137, 229, 369, 492, 503, 517, 518, 531, 532, 533, 536, 618, 647, 665, 686, 712, 718, 740, 753, 754, 1043, 1044, 1134], "coro": [62, 718, 720, 721, 723, 724, 725, 726], "cannot": [62, 65, 114, 115, 166, 170, 171, 172, 177, 181, 192, 193, 199, 200, 202, 209, 229, 262, 289, 292, 326, 351, 428, 429, 432, 433, 452, 454, 456, 459, 462, 480, 483, 495, 518, 546, 585, 594, 597, 599, 602, 603, 626, 661, 662, 664, 665, 667, 668, 672, 691, 694, 697, 703, 729, 739, 740, 744, 750, 752, 762, 764, 771, 829, 833, 838, 853, 870, 875, 878, 889, 904, 912, 948, 992, 1001, 1023, 1024, 1025, 1029, 1031, 1043, 1048, 1055, 1063, 1064, 1070, 1071, 1081, 1150, 1152, 1153, 1164, 1189], "stuff_raw2": 62, "05": [62, 101, 128, 173, 180, 185, 229, 264, 287, 294, 305, 314, 317, 364, 382, 481, 1135], "runtimeerror": [62, 193, 229, 283, 350, 1028, 1030], "reus": [62, 126, 185, 191, 1023, 1073], "alreadi": [62, 84, 128, 137, 170, 171, 173, 181, 192, 194, 202, 206, 262, 289, 292, 445, 456, 462, 494, 514, 516, 527, 530, 549, 566, 646, 786, 792, 806, 813, 821, 831, 833, 836, 853, 929, 937, 938, 939, 946, 959, 960, 962, 967, 968, 970, 987, 1022, 1028, 1055, 1081, 1159, 1164, 1166, 1173], "bare": [62, 82, 84, 91, 93, 112, 152, 170, 383, 930, 938], "create_coro": 62, "ctor": [62, 197, 206, 255, 304, 337, 546, 568, 576, 593, 596, 597, 600, 610, 612, 647, 670, 694, 695, 697, 701, 702, 727, 735, 750, 766, 852], "nest": [62, 166, 230, 243, 252, 262, 269, 273, 290, 300, 396, 425, 426, 452, 712, 764, 780, 838, 1028, 1071], "_blink": 62, "coro_cr": 62, "creator": [62, 164, 181], "create_factory_for_blink": 62, "blinkfunc": 62, "blink_func": 62, "stuff_decorator_stage1": 62, "stage1": 62, "stararg": [62, 1029, 1032, 1053], "func": [62, 229, 239, 245, 255, 258, 289, 303, 552, 621, 690, 705, 712, 753, 1029, 1033], "becom": [62, 72, 82, 93, 96, 136, 141, 145, 170, 172, 198, 210, 289, 292, 312, 314, 317, 328, 411, 441, 443, 450, 453, 474, 490, 494, 533, 694, 749, 750, 751, 833, 870, 889, 922, 938, 939, 946, 989, 992, 993, 1028, 1034, 1064, 1165, 1171, 1186, 1187], "obsolet": [62, 202, 1055], "prog": [62, 243, 350], "demo": [62, 101, 102, 126, 128, 136, 146, 149, 170, 193, 197, 202, 205, 207, 210, 211, 214, 222, 229, 237, 240, 243, 246, 248, 253, 259, 276, 279, 282, 285, 286, 306, 307, 365, 383, 475, 476, 480, 481, 485, 488, 536, 544, 674, 751, 786, 863, 866, 867, 888, 889, 929, 958, 1000, 1009, 1055, 1137, 1170, 1190, 1194], "opposit": [62, 174, 426, 939, 992, 1144], "futur": [62, 128, 144, 177, 242, 262, 274, 275, 277, 286, 334, 356, 378, 379, 450, 514, 684, 718, 760, 762, 763, 785, 786, 843, 1184], "glt": [64, 67, 167], "2024": [64, 67, 127, 149, 150, 245, 382], "biographi": [64, 67, 230, 279, 325, 1131], "asyncio": [64, 65, 67, 202, 206, 256, 297, 325, 718, 1131], "textual": [64, 65, 67, 200, 202, 547], "stori": [65, 170, 171, 172, 176, 177, 181, 198, 199, 231, 294, 443, 576, 594, 608, 771, 808, 811, 834, 872, 933, 950], "pointlessli": 65, "light": [65, 88, 180, 872, 1054, 1164], "focus": [65, 177], "beauti": [65, 191, 205, 206, 209, 227, 229, 230, 237, 248, 252, 253, 256, 262, 279, 303, 365, 438, 568, 626, 975, 1032, 1081, 1088, 1131], "love": [65, 296, 1126], "creativ": [65, 169, 247], "edit": [65, 150, 173, 175, 176, 185, 217, 222, 258, 286, 386, 546, 806, 833, 938, 1086, 1157, 1197], "debounc": 65, "libgpiod": [65, 67, 138, 145, 152, 167, 325, 351, 353, 786], "toolkit": [65, 1054], "termin": [65, 133, 169, 171, 175, 189, 200, 222, 268, 270, 286, 289, 292, 295, 297, 299, 387, 390, 394, 397, 400, 407, 419, 425, 448, 468, 474, 486, 490, 516, 517, 549, 568, 597, 718, 724, 751, 757, 849, 868, 871, 875, 876, 877, 893, 915, 925, 926, 959, 977, 981, 986, 991, 1003, 1004, 1005, 1060, 1062, 1066, 1081, 1093, 1110, 1138, 1144, 1147, 1195], "perfectli": [65, 192, 248], "simul": [65, 140, 202, 371, 372, 549], "cute": [65, 1137], "imageview": 66, "raspberri": [67, 82, 101, 108, 110, 136, 152, 165, 182, 186, 212, 286, 325, 368, 370, 371, 382, 384, 550, 786, 810, 814, 833, 837, 842, 848, 851, 854, 929, 936, 938, 939, 950, 995, 1008, 1010, 1014, 1017, 1019, 1021, 1032, 1054, 1058, 1145, 1147, 1158, 1179, 1188], "evolut": [67, 230, 279, 325, 893, 1131], "steig": [68, 178], "normalweg": 68, "w\u00e4r": 68, "umst\u00e4nden": [68, 1179, 1183, 1198], "renat": 68, "beschreibung": [68, 214, 216, 224, 227, 230, 231, 233, 249, 261, 921], "bergfex": 68, "reden": 68, "sie": [68, 178, 184, 189, 193, 250, 255, 322, 360, 366, 383, 855, 920, 1178, 1180, 1181, 1182, 1188, 1198, 1200, 1201, 1202], "tagen": [68, 1188], "wir": [68, 188, 193, 197, 203, 205, 213, 214, 219, 233, 252, 258, 265, 318, 383, 651, 1179, 1194, 1195], "w\u00fcrden": 68, "denk": [68, 178, 234, 1198], "beiden": [68, 189, 203, 250, 258, 265], "h\u00fctten": [68, 179], "schlafen": 68, "hochk\u00f6nig": 69, "cite": [69, 177, 191, 202, 324], "complain": [69, 172, 181, 185, 199, 412, 585, 600, 601, 808, 836, 946], "subrepo": 69, "whole": [69, 249, 261, 262, 264, 267, 270, 279, 282, 321, 350, 474, 703, 712, 754, 808, 811, 833, 878, 960, 1029, 1100, 1187], "subtitl": 69, "fight": [69, 872], "against": [69, 172, 181, 222, 230, 242, 243, 432, 474, 478, 482, 533, 549, 765, 806, 808, 813, 817, 825, 868, 965, 1010, 1015, 1025, 1039, 1097, 1164, 1189], "fake": [69, 937], "simplest": [69, 208, 270, 475, 492, 625, 632, 739, 760, 838, 868, 922, 986, 1019, 1057, 1062, 1164, 1172], "unprofession": [69, 174], "populist": 69, "gtest_discover_test": 69, "robust": 69, "sentenc": 69, "implicitli": [69, 226, 231, 242, 439, 489, 597, 605, 695, 703, 796, 963, 1028, 1060, 1144], "gtest_add_test": 69, "scan": [69, 239, 262, 265, 332, 937, 939], "primit": [69, 170, 214, 215, 295, 1037, 1184, 1194], "sort": [69, 89, 110, 112, 157, 170, 197, 203, 211, 215, 230, 232, 242, 243, 248, 250, 252, 253, 258, 266, 280, 283, 290, 295, 304, 310, 332, 338, 348, 462, 463, 466, 467, 477, 568, 626, 644, 654, 658, 687, 728, 732, 740, 753, 762, 764, 786, 873, 877, 915, 926, 939, 1030, 1078, 1079, 1133, 1159], "port": [69, 136, 166, 167, 172, 177, 182, 242, 276, 285, 306, 307, 321, 351, 383, 786, 866, 872, 920, 929, 940, 945, 949, 967, 1088, 1143, 1147, 1159, 1188, 1195], "trap": [69, 171, 232, 445, 450, 468, 596, 1183, 1185], "hehe": [69, 202, 209], "html_sidebar": 69, "rtd": [69, 167], "linkcheck": 69, "admonit": 69, "matrix": [69, 191, 193, 294, 372, 374, 463], "thoma": [69, 164], "cokela": 69, "ablog": 69, "couldn": [69, 177, 181, 206, 209, 348, 1069], "figur": [69, 128, 156, 162, 167, 175, 176, 191, 246, 1027], "piec": [69, 82, 163, 171, 452, 568, 620, 938, 969], "especi": [69, 90, 96, 126, 136, 171, 175, 194, 202, 286, 365, 383, 385, 411, 422, 452, 472, 694, 808, 939], "feed": [69, 88, 167, 1136], "blog_baseurl": 69, "nicer": [69, 993], "pour": [69, 490, 859], "tag": [69, 173, 175, 178, 179, 203, 219, 221, 263, 477, 485, 806, 1021, 1024, 1196], "resolv": [70, 81, 126, 181, 185, 239, 242, 245, 248, 255, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344, 429, 455, 604, 950, 1007, 1010, 1135, 1136], "buildenviron": 70, "resolve_refer": 70, "builder": [70, 242, 1088], "get_and_resolve_doctre": 70, "apply_post_transform": 70, "addnod": 70, "docstr": [70, 166, 226, 229, 239, 245, 251, 263, 266, 269, 291, 323, 345, 365, 1059], "emit": [70, 88, 517, 518, 875], "doctre": 70, "increasingli": 72, "whose": [72, 181, 239, 245, 255, 258, 294, 304, 378, 379, 512, 582, 685, 686, 930, 1031, 1164, 1171], "mainten": [72, 407, 433, 452, 1024], "easier": [72, 84, 89, 96, 191, 232, 474, 500, 605, 689, 833, 1184], "never": [72, 114, 115, 170, 171, 172, 177, 190, 252, 258, 262, 304, 322, 411, 432, 448, 459, 462, 472, 490, 512, 591, 672, 750, 771, 772, 774, 776, 872, 930, 953, 978, 1008], "simpler": [72, 181, 232, 296, 299, 390, 449, 483, 629, 829, 833, 938, 950], "wors": [72, 158, 173, 258, 458, 474, 712, 955, 1167], "makefil": [72, 101, 232, 275, 277, 475, 486, 802, 806, 834, 835, 1012, 1015, 1017, 1024, 1025], "everytbodi": 73, "runtim": [73, 170, 181, 203, 207, 231, 255, 258, 338, 387, 408, 456, 466, 467, 480, 485, 516, 517, 530, 544, 579, 588, 628, 646, 647, 690, 732, 739, 753, 754, 976, 1007, 1043, 1061, 1073, 1137, 1138], "dispatch": [73, 321, 338, 579, 588, 664, 667, 668, 770, 771, 772, 774, 785, 786], "hell": [73, 222, 256, 458, 491, 704, 735, 757, 823, 858, 983, 1144], "destructor": [73, 74, 101, 110, 136, 146, 232, 248, 269, 295, 297, 335, 367, 368, 496, 510, 538, 548, 562, 568, 577, 583, 590, 591, 592, 593, 598, 600, 615, 663, 664, 675, 676, 677, 678, 679, 680, 682, 683, 684, 685, 686, 687, 699, 703, 730, 746, 755, 761, 763, 766, 771, 783, 785, 786, 794, 825, 838, 850, 1176], "opportun": [73, 177, 180, 190, 202, 221, 462, 681, 1044, 1187], "shoot": [73, 895], "oneself": [73, 1189], "encapsul": [74, 77, 230, 243, 248, 295, 297, 321, 351, 472, 492, 496, 510, 536, 538, 539, 540, 541, 542, 543, 544, 545, 548, 555, 557, 568, 590, 591, 613, 616, 619, 635, 641, 645, 654, 657, 658, 663, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 690, 699, 730, 746, 755, 763, 771, 783, 785, 786, 802, 835, 1001, 1056, 1185], "hide": [74, 231, 243, 299, 1056], "fanci": [74, 1076, 1137, 1157], "whatnot": [74, 246, 762, 833, 930, 938, 956, 986], "boost": [75, 248, 485, 488, 568, 718, 994, 1202], "feel": [75, 170, 172, 181, 202, 585, 682, 684, 685, 690, 975, 993, 1055], "cluster_ecpropos": [76, 77, 78, 91, 786], "cluster_ecproposal_ec1": [76, 77, 78, 91, 786], "cluster_ecproposal_ec1_linux": [76, 77, 78, 786], "cluster_ecproposal_ec1_cxx": [76, 77, 78, 91, 786], "cluster_ecproposal_ec1_mt": [76, 77, 78, 91, 786], "cluster_ecproposal_ec2": [76, 78, 786], "cluster_ecproposal_ec2_python": [76, 78, 786], "ecproposal_ec1_git": [76, 77, 78, 786], "ecproposal_ec1_linux_dev_mgmt": [76, 77, 78, 786], "ecproposal_ec1_linux_bas": [76, 77, 78, 786], "ecproposal_ec1_linux_gpio": [76, 77, 78, 786], "ecproposal_ec1_linux_exercise_led_displai": [76, 77, 78, 786], "ex": [76, 77, 78, 82, 91, 158, 230, 243, 562, 579, 740, 786, 878, 893, 1166], "temperatur": [76, 77, 78, 82, 86, 95, 98, 101, 118, 123, 124, 128, 129, 130, 131, 136, 137, 138, 146, 149, 206, 239, 286, 321, 334, 335, 371, 374, 389, 391, 393, 491, 497, 502, 523, 537, 538, 539, 540, 541, 542, 543, 544, 548, 549, 550, 561, 579, 590, 668, 700, 770, 772, 774, 776, 786, 833, 929, 936, 968, 970, 987, 1043, 1119, 1134, 1135, 1136, 1137], "displai": [76, 77, 78, 82, 116, 117, 119, 120, 127, 129, 138, 146, 175, 239, 245, 255, 258, 283, 286, 288, 290, 295, 300, 304, 326, 332, 338, 344, 374, 466, 539, 786, 868, 915, 924, 937, 991, 1166], "ecproposal_ec1_linux_exercise_avg_sensor": [76, 77, 78, 786], "averag": [76, 77, 78, 82, 88, 89, 206, 242, 246, 262, 297, 321, 495, 511, 541, 548, 786, 995, 1088], "ecproposal_ec1_cxx_unittest": [76, 77, 78, 786], "ecproposal_ec1_linux_exercise_avg_sensor_parallel": [76, 77, 78, 786], "ecproposal_ec1_mt_wait": [76, 77, 78, 91, 786], "ecproposal_ec1_mt_exercise_mt_race_fix": [76, 77, 78, 91, 786], "avoid": [76, 77, 78, 82, 91, 170, 177, 185, 262, 398, 433, 511, 546, 548, 558, 592, 596, 647, 786, 831, 922, 938, 1185], "ecproposal_ec1_linux_exercise_sensor": [76, 77, 78, 786], "ecproposal_ec1_cxx_ifac": [76, 77, 78, 786], "ecproposal_ec1_cxx_build": [76, 77, 78, 91, 786], "ecproposal_ec1_cxx_oo_bas": [76, 77, 78, 786], "ecproposal_ec1_mt_lock": [76, 77, 78, 91, 786], "semaphor": [76, 77, 78, 80, 82, 91, 93, 165, 194, 195, 217, 239, 245, 255, 258, 383, 762, 786, 825, 980, 1189, 1199], "ecproposal_ec1_mt_exercise_mt_rac": [76, 77, 78, 91, 786], "ecproposal_ec2_python_exercise_avg_displai": [76, 78, 786], "ecproposal_ec2_python_exercise_sensor": [76, 78, 786], "ecproposal_ec2_python_flask": [76, 78, 786], "ecproposal_ec2_python_web_sensor": [76, 78, 786], "ecproposal_ec2_python_bas": [76, 78, 786], "qualiti": [77, 177, 231, 294, 938, 1158], "assur": 77, "characterist": 77, "polymorph": [78, 110, 128, 129, 144, 229, 230, 243, 295, 297, 299, 314, 317, 474, 496, 510, 538, 590, 663, 664, 667, 668, 687, 748, 753, 770, 771, 772, 785, 786, 1184, 1187], "concurr": [78, 202, 206, 256, 325, 740, 823, 1039, 1131], "increment": [79, 188, 231, 245, 248, 271, 294, 390, 394, 398, 418, 427, 434, 438, 440, 444, 447, 451, 460, 464, 469, 470, 568, 585, 692, 730, 783, 785, 786, 865, 977, 978, 979, 1000, 1001, 1039], "lossi": 79, "access": [80, 82, 92, 114, 115, 118, 124, 133, 167, 171, 172, 173, 175, 177, 190, 200, 210, 217, 229, 239, 242, 245, 248, 255, 258, 265, 268, 283, 286, 290, 300, 304, 314, 326, 331, 332, 338, 344, 351, 365, 368, 370, 402, 441, 462, 463, 501, 517, 542, 543, 544, 545, 568, 591, 603, 605, 608, 609, 611, 612, 626, 651, 665, 672, 675, 678, 679, 682, 683, 684, 685, 686, 687, 701, 718, 733, 737, 749, 786, 791, 801, 804, 810, 821, 829, 833, 835, 851, 866, 869, 878, 880, 881, 904, 929, 939, 948, 949, 955, 959, 963, 965, 969, 973, 977, 991, 992, 1000, 1005, 1026, 1031, 1038, 1039, 1042, 1061, 1068, 1070, 1083, 1099, 1135, 1152, 1166, 1189], "flavor": [80, 91, 170, 475, 739, 744], "stash": 81, "suffic": [81, 177, 400, 450], "purpos": [81, 82, 84, 133, 144, 163, 171, 175, 181, 202, 221, 239, 245, 255, 258, 270, 283, 368, 396, 474, 486, 593, 625, 665, 754, 833, 866, 875, 938, 960, 965, 986, 1007, 1025, 1055, 1136, 1165, 1188, 1195], "unifi": [82, 141, 209, 618], "intention": [82, 231, 304, 705], "power": [82, 93, 169, 171, 186, 191, 231, 248, 366, 367, 368, 386, 398, 399, 441, 450, 833, 843, 850, 864, 930, 934, 937, 938, 939, 958, 973, 991, 995, 1032, 1050, 1054, 1056, 1062, 1067, 1079, 1154], "being": [82, 85, 129, 158, 170, 173, 174, 180, 194, 202, 208, 229, 258, 262, 321, 335, 365, 411, 438, 455, 491, 494, 579, 603, 646, 748, 750, 754, 756, 762, 784, 815, 829, 833, 868, 950, 965, 991, 1038, 1045, 1055, 1058, 1135, 1173, 1176, 1189], "address": [82, 103, 110, 114, 115, 128, 129, 149, 170, 172, 173, 174, 177, 210, 217, 222, 229, 231, 232, 248, 250, 276, 285, 286, 297, 306, 307, 348, 362, 367, 368, 376, 429, 431, 440, 444, 447, 450, 451, 459, 460, 464, 469, 470, 490, 496, 501, 504, 510, 512, 514, 519, 538, 539, 540, 541, 542, 543, 544, 545, 548, 549, 590, 600, 605, 692, 702, 703, 730, 744, 763, 783, 785, 786, 813, 817, 829, 831, 860, 861, 862, 863, 866, 867, 869, 873, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 907, 908, 909, 910, 911, 913, 929, 931, 933, 938, 939, 941, 942, 943, 944, 945, 950, 952, 956, 958, 960, 967, 968, 970, 975, 983, 984, 986, 987, 990, 992, 1000, 1007, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1024, 1039, 1042, 1135, 1136, 1155, 1164], "crucial": [82, 170, 194, 465, 627], "mmu": [82, 170, 804, 847, 870, 991], "sophist": [82, 239, 491, 512, 549, 686], "permiss": [82, 101, 104, 105, 106, 128, 150, 205, 206, 210, 212, 222, 229, 245, 265, 276, 285, 300, 303, 306, 321, 351, 360, 365, 366, 367, 368, 370, 538, 590, 676, 763, 784, 785, 786, 792, 833, 860, 861, 863, 866, 867, 870, 876, 879, 883, 884, 885, 886, 887, 889, 890, 891, 895, 907, 910, 912, 913, 915, 929, 930, 940, 943, 945, 946, 949, 950, 955, 958, 959, 960, 963, 965, 966, 968, 970, 984, 987, 990, 992, 993, 1005, 1030, 1131, 1159, 1166, 1190, 1199], "nativ": [82, 101, 108, 128, 169, 175, 177, 203, 239, 275, 277, 295, 372, 786, 833, 929, 1008, 1012, 1014, 1017, 1140, 1143, 1149], "varieti": [82, 468, 869, 1007, 1187], "storag": [82, 175, 180, 475, 703, 833, 869, 930, 938, 955, 975, 1200], "underli": [82, 230, 237, 253, 262, 303, 365, 370, 740, 939, 1131, 1136, 1140], "platform": [82, 177, 230, 239, 243, 245, 255, 258, 262, 270, 288, 338, 358, 367, 385, 813, 833, 938, 939, 973, 991, 1119, 1164, 1166], "offer": [82, 170, 180, 221, 296, 426, 603, 607], "popular": [82, 181, 194, 198, 421, 698, 858, 939, 991, 1007, 1023, 1049, 1133, 1139, 1147, 1160, 1187], "often": [82, 93, 169, 170, 171, 172, 202, 252, 262, 289, 292, 312, 328, 407, 417, 438, 477, 492, 504, 618, 740, 833, 893, 969, 1035, 1055, 1069, 1186, 1187], "appropri": [82, 130, 141, 157, 163, 170, 180, 185, 190, 222, 262, 407, 421, 433, 548, 754, 829, 937, 949, 1000, 1137, 1143, 1187], "prototyp": [82, 351, 398, 490, 552, 585, 701, 833, 930, 938, 951, 1028, 1143], "higher": [82, 170, 181, 239, 245, 255, 258, 784, 831, 930, 992, 994, 1001, 1009, 1017, 1143, 1186], "fulli": [82, 174, 177, 181, 206, 454, 549, 1001], "distribut": [82, 175, 180, 185, 197, 202, 222, 232, 250, 262, 362, 490, 536, 544, 757, 804, 833, 871, 872, 993, 1055], "en": [82, 175, 187, 197, 258, 286, 670], "vogu": 82, "serial": [82, 169, 170, 180, 210, 245, 246, 258, 866, 868, 1188, 1195], "groundwork": 82, "lai": 82, "instruct": [82, 169, 173, 177, 200, 231, 286, 295, 297, 462, 533, 749, 764, 979, 991, 1022, 1119], "consolid": [82, 202], "makeri": 82, "everybodi": [82, 175, 296, 454, 500, 594, 633, 676, 864, 1058, 1062, 1164, 1184], "clarifi": 82, "earli": [82, 169, 202, 206, 211, 296, 838, 850, 865, 993, 1026, 1043, 1081, 1186], "matter": [82, 169, 174, 175, 177, 185, 202, 208, 210, 392, 436, 468, 475, 482, 492, 592, 593, 605, 608, 694, 733, 740, 750, 752, 808, 833, 835, 878, 889, 931, 937, 939, 950, 1030, 1055, 1156, 1166, 1176, 1187], "rewrit": [82, 84, 170, 474], "translat": [82, 95, 96, 190, 203, 221, 258, 262, 265, 268, 304, 739, 1098], "flask": [82, 97, 167, 206, 209, 1029], "network": [82, 114, 115, 156, 165, 166, 167, 170, 177, 187, 188, 210, 212, 217, 242, 258, 265, 268, 279, 283, 285, 286, 290, 300, 304, 306, 321, 326, 332, 338, 344, 367, 383, 384, 468, 501, 786, 787, 810, 850, 866, 868, 869, 871, 929, 932, 933, 938, 939, 940, 950, 954, 955, 958, 959, 970, 989, 1195, 1199], "oppos": [84, 128, 169, 209, 243, 250, 260, 295, 433, 477, 482, 579, 917, 931, 938, 946, 980, 993, 1000, 1005, 1024, 1050, 1061, 1062, 1144, 1152], "ahead": [84, 185, 472, 1045], "optimz": 84, "donald": [84, 461], "knuth": [84, 461], "prematur": [84, 461, 465], "optim": [84, 171, 283, 295, 326, 448, 464, 465, 469, 470, 477, 771, 786, 817, 1143, 1183, 1185], "evil": [84, 248, 402, 452, 461, 465, 477, 605], "knowledg": [85, 89, 289, 292, 295, 549, 683, 685, 833, 931, 939, 1032, 1054, 1158], "onewir": [85, 89, 101, 110, 128, 129, 130, 138, 146, 149, 286, 297, 334, 365, 368, 537, 538, 590, 786, 929, 936, 937, 968, 970, 987], "protocol": [85, 162, 175, 208, 209, 219, 241, 244, 246, 247, 251, 254, 257, 260, 269, 282, 284, 289, 292, 298, 299, 301, 302, 305, 308, 320, 321, 323, 324, 325, 327, 331, 333, 339, 342, 343, 371, 374, 406, 414, 501, 514, 791, 920, 931, 933, 937, 939, 940, 948, 949, 969, 1028, 1032, 1036, 1043], "aspect": [85, 133, 202, 206, 232, 256, 295, 297, 325, 497, 864, 937, 939, 1131, 1158, 1164, 1189], "regard": [85, 177, 202, 351, 893, 1055, 1062, 1160, 1164], "filesystem": [85, 89, 110, 128, 169, 172, 181, 210, 212, 222, 273, 338, 365, 370, 549, 785, 786, 833, 859, 938, 950, 966, 973, 991, 1010, 1164, 1190, 1195, 1197, 1201], "hwmon": [85, 89, 129, 371, 374], "composit": [86, 110, 132, 135, 146, 206, 232, 278, 296, 297, 314, 489, 496, 510, 524, 538, 590, 786, 1035, 1187], "mock": [86, 128, 129, 144, 145, 146, 296, 298, 299, 320, 324, 335, 352, 354, 538, 539, 540, 541, 543, 579, 590, 786, 1171], "pin": [88, 145, 286, 351, 930, 934, 937, 938], "linearli": [88, 262, 632, 869], "cold": [88, 221], "hot": [88, 172, 463, 466, 815], "queri": [88, 1063], "said": [88, 114, 115, 172, 185, 202, 289, 292, 299, 512, 625, 672, 756, 762, 794, 930, 938, 939, 950, 977, 992, 1035, 1055, 1075, 1144, 1157], "ds18s20": [89, 371, 1164], "datasheet": [89, 155, 829, 930, 939], "lm73": [89, 286, 371, 374, 786, 929, 936, 939], "ti": [89, 169, 472, 550, 594, 751], "hoc": [89, 232, 432], "report": [89, 129, 132, 138, 146, 169, 172, 173, 185, 187, 189, 376, 458, 468, 591, 786, 951, 986, 1171, 1173], "experi": [89, 158, 177, 202, 472, 477, 576, 938, 939, 1165], "subsystem": [90, 101, 102, 107, 108, 128, 149, 188, 210, 217, 222, 259, 275, 277, 279, 285, 286, 295, 297, 298, 314, 320, 786, 811, 829, 843, 863, 867, 869, 929, 930, 937, 938, 939, 973, 989, 1030, 1164, 1188, 1189, 1195], "deprec": [90, 145, 299, 659, 959, 973, 1184], "foremost": 91, "osen": [91, 93, 180, 756, 784, 991], "recurs": [91, 92, 206, 230, 239, 245, 255, 258, 760, 825, 838, 877, 878, 893, 905, 915, 922, 942, 949, 986, 1067, 1071, 1184], "mother": [92, 112, 186, 248, 568, 1048, 1184], "protect": [92, 146, 170, 172, 222, 230, 242, 295, 297, 413, 432, 530, 531, 591, 594, 605, 661, 663, 664, 687, 762, 786, 817, 825, 831, 870, 912, 938, 979, 980, 991, 1039, 1042, 1051, 1176, 1189], "critic": [92, 170, 180, 468, 761, 823, 825, 1159], "kind": [92, 123, 170, 172, 180, 185, 190, 202, 206, 239, 245, 246, 255, 256, 258, 270, 286, 298, 299, 320, 324, 497, 549, 597, 644, 694, 703, 748, 762, 864, 930, 937, 938, 1039, 1131, 1157, 1158, 1189], "poll": [93, 176, 187, 825, 827, 850, 973, 978, 980, 997, 1001, 1188, 1195, 1199, 1201], "second": [93, 169, 172, 173, 177, 189, 202, 208, 229, 235, 239, 243, 245, 250, 255, 258, 262, 288, 290, 351, 386, 396, 450, 466, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 526, 530, 531, 532, 536, 539, 549, 585, 600, 648, 650, 651, 690, 719, 720, 739, 750, 751, 764, 765, 780, 781, 782, 843, 870, 875, 878, 938, 957, 960, 967, 991, 1000, 1004, 1008, 1009, 1023, 1024, 1025, 1075, 1083, 1159, 1171, 1184], "readi": [93, 169, 930, 1164], "rare": [93, 175, 192, 206, 475, 485, 547, 549, 600, 698, 749, 915, 937, 954, 1066, 1070, 1083, 1165], "btw": [93, 174, 180, 202, 208, 222, 229, 249, 252, 365, 449, 802, 868, 1120, 1122], "increas": [93, 172, 462, 930, 993, 995, 1023, 1187], "tight": [93, 194, 406, 764, 836, 1156], "bui": [93, 170, 491], "bigger": [93, 170, 202, 462, 1137], "avail": [93, 136, 141, 146, 169, 170, 172, 173, 175, 181, 185, 194, 198, 202, 222, 231, 239, 245, 255, 258, 312, 320, 321, 324, 328, 384, 476, 478, 483, 487, 492, 517, 518, 718, 754, 760, 764, 806, 833, 838, 865, 889, 930, 934, 937, 938, 989, 992, 993, 1010, 1021, 1026, 1031, 1038, 1062, 1080, 1081, 1130, 1139, 1156, 1159, 1166, 1167, 1186, 1189], "intro": [97, 128, 145, 146, 149, 167, 197, 221, 231, 240, 253, 254, 267, 270, 289, 292, 297, 303, 309, 321, 590, 690, 698, 718, 742, 786, 929, 953, 970, 972, 974, 1131, 1185, 1187, 1199], "rout": [97, 206, 1029], "jinja2": 97, "ss2022": [100, 786, 862, 863, 929], "ws2022": 100, "lab": [100, 110, 128, 365], "vo": [101, 110, 128, 371], "ku": [101, 109, 110, 128], "g1": [101, 786, 862, 863, 929], "g2": [101, 365, 786, 862, 863, 929], "08": [101, 103, 109, 128, 173, 180, 181, 182, 236, 239, 264, 268, 294, 332, 382, 486, 930, 937, 939, 961, 1022, 1135], "cont": [101, 128, 240, 303], "command": [101, 103, 126, 128, 166, 169, 174, 180, 210, 222, 227, 237, 239, 245, 246, 253, 255, 258, 267, 270, 276, 278, 285, 286, 303, 306, 307, 351, 365, 370, 383, 433, 454, 465, 477, 487, 488, 489, 496, 510, 514, 524, 538, 547, 590, 600, 749, 763, 785, 786, 833, 859, 860, 861, 862, 863, 866, 867, 868, 870, 871, 872, 873, 875, 877, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 895, 896, 897, 898, 900, 901, 902, 904, 905, 907, 908, 909, 911, 913, 921, 926, 929, 938, 939, 940, 941, 942, 949, 953, 958, 960, 968, 970, 984, 986, 987, 990, 991, 992, 993, 1007, 1008, 1015, 1019, 1023, 1083, 1131, 1159, 1166, 1173, 1187], "wsl": [101, 102, 107, 108, 128, 149, 259, 279, 285, 298, 314, 320, 786, 863, 867, 929, 1010, 1017, 1018, 1022], "homework": [101, 106, 109, 128, 149, 172], "sshf": [101, 105, 128, 276, 285, 286, 306, 307, 372, 786, 929, 940, 945, 1010, 1019], "toolchain": [101, 107, 108, 110, 112, 127, 128, 136, 150, 165, 182, 197, 199, 286, 383, 474, 475, 481, 496, 510, 538, 539, 540, 541, 542, 543, 544, 545, 548, 549, 550, 590, 763, 785, 786, 834, 863, 866, 867, 929, 952, 958, 960, 967, 968, 970, 984, 987, 990, 992, 1009, 1010, 1011, 1012, 1015, 1023, 1024, 1025, 1056, 1179, 1181, 1182, 1183, 1191, 1197, 1199], "bashrc": [101, 108, 128, 169, 181, 242, 276, 285, 286, 300, 306, 307, 338, 786, 863, 865, 913, 915, 929, 949, 1019, 1021], "studi": [101, 108, 231, 274, 275, 277, 278, 286, 334, 489, 496, 690, 730, 785, 786, 929, 1012, 1014, 1017], "ds18b20": [101, 128, 130, 146, 149, 286, 334, 365, 786, 929, 936, 967], "slave": [101, 128, 130, 146, 149, 286, 334, 786, 929, 934, 936, 967], "redirect": [101, 104, 128, 171, 174, 210, 212, 222, 239, 245, 255, 258, 276, 285, 286, 306, 350, 365, 370, 786, 860, 861, 862, 863, 877, 897, 898, 900, 901, 904, 905, 907, 913, 926, 929, 959, 1081, 1180, 1190, 1197], "pipe": [101, 170, 175, 177, 190, 210, 212, 222, 276, 285, 286, 288, 306, 350, 365, 370, 784, 786, 863, 870, 875, 915, 920, 929, 959, 1003, 1004, 1005, 1019, 1081, 1180, 1190, 1197], "06": [101, 110, 127, 128, 180, 211, 255, 274, 287, 294, 311, 314, 317, 364, 382, 474, 485, 568, 784, 1058, 1135], "past": [101, 170, 174, 175, 232, 248, 438, 623, 625, 629, 632, 636, 701, 806, 808, 872, 1126, 1130, 1181], "2p": [101, 108], "3p": [101, 108], "5p": [101, 108], "pointer": [101, 112, 123, 128, 137, 146, 173, 197, 273, 334, 357, 366, 367, 368, 383, 396, 398, 400, 441, 442, 444, 445, 447, 449, 450, 451, 460, 464, 469, 470, 504, 549, 562, 579, 584, 586, 591, 592, 594, 602, 609, 611, 620, 624, 628, 632, 633, 636, 642, 646, 659, 692, 699, 700, 701, 728, 730, 735, 737, 739, 744, 749, 751, 754, 755, 763, 766, 770, 771, 774, 776, 781, 782, 783, 785, 786, 792, 799, 804, 815, 821, 850, 853, 951, 977, 1005, 1081, 1181, 1182, 1183, 1184, 1185, 1187], "exit": [101, 128, 149, 166, 170, 172, 200, 221, 239, 245, 248, 255, 258, 280, 286, 321, 358, 383, 387, 439, 481, 488, 497, 600, 667, 747, 749, 786, 796, 801, 835, 929, 939, 955, 956, 957, 959, 960, 965, 967, 970, 971, 987, 997, 1004, 1005, 1024, 1030, 1038, 1039, 1057, 1060, 1073, 1083, 1093, 1110, 1159, 1166], "statu": [101, 128, 129, 138, 146, 149, 166, 171, 173, 185, 239, 245, 248, 255, 258, 270, 280, 286, 383, 387, 439, 477, 481, 488, 667, 784, 786, 835, 849, 929, 960, 965, 967, 970, 987, 991, 1004, 1024, 1060, 1086, 1145], "yai": [101, 166, 242, 250, 252, 265, 271, 290, 300, 332, 344, 348, 633, 684, 690, 986], "ol": [101, 128, 248, 295, 297, 304, 374, 496, 510, 538, 539, 540, 541, 542, 543, 544, 545, 548, 555, 557, 590, 594, 598, 613, 616, 619, 635, 641, 645, 654, 657, 658, 663, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 699, 730, 742, 746, 752, 755, 763, 771, 774, 783, 785, 786, 926, 1001, 1076, 1081, 1103], "randomsensor": [101, 146, 497, 502, 511, 523, 537, 538, 544, 548, 558, 559, 560, 561, 563, 564, 590, 748, 749, 750, 751, 786, 1043], "rectangl": [101, 163, 500, 568, 597, 613, 687, 786], "mystr": [101, 196, 248], "point3d": [101, 613, 687, 786], "cuboid": [101, 613, 687, 786], "hierarchi": [103, 110, 114, 115, 118, 124, 133, 206, 207, 209, 211, 229, 230, 243, 246, 258, 276, 285, 286, 306, 307, 317, 376, 463, 490, 491, 492, 495, 496, 510, 511, 515, 517, 538, 548, 590, 786, 863, 866, 867, 868, 879, 882, 883, 884, 885, 886, 887, 888, 893, 899, 905, 912, 929, 941, 942, 943, 944, 945, 970, 988, 1017, 1018], "parent": [103, 113, 114, 115, 172, 185, 187, 276, 285, 286, 306, 307, 784, 786, 813, 863, 865, 866, 867, 868, 869, 878, 879, 882, 883, 884, 885, 886, 887, 888, 896, 897, 898, 899, 900, 902, 904, 905, 906, 917, 929, 941, 942, 943, 944, 945, 970, 976, 1017, 1018], "login": [103, 128, 146, 175, 177, 210, 222, 276, 338, 364, 365, 786, 860, 861, 863, 864, 865, 867, 869, 870, 871, 879, 882, 883, 884, 885, 886, 887, 888, 894, 929, 930, 938, 941, 942, 943, 944, 945, 946, 948, 950, 967, 1017, 1018, 1109, 1179, 1188, 1195], "bourn": [103, 128, 186, 210, 212, 276, 285, 286, 306, 365, 366, 367, 370, 383, 384, 496, 510, 538, 539, 540, 541, 542, 543, 544, 545, 548, 590, 763, 784, 785, 786, 856, 860, 861, 862, 863, 866, 867, 874, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 923, 929, 952, 958, 960, 968, 970, 971, 984, 987, 990, 992, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018], "verifi": [104, 106, 128, 141, 145, 158, 180, 186, 198, 210, 222, 286, 376, 585, 603, 786, 863, 868, 897, 900, 901, 904, 907, 913, 929, 942, 943, 945, 1097, 1134, 1137, 1159], "joke": [104, 170], "mostli": [104, 118, 123, 124, 256, 383, 388, 394, 406, 422, 452, 461, 606, 647, 749, 754, 801, 869, 872, 893, 959, 986, 989, 1010, 1186], "secur": [105, 128, 150, 173, 175, 177, 222, 242, 248, 276, 285, 306, 338, 364, 786, 860, 861, 866, 868, 871, 889, 893, 929, 930, 940, 941, 942, 943, 944, 948, 959, 967, 1017, 1018, 1024, 1026, 1058, 1088], "account": [105, 114, 115, 128, 175, 177, 197, 202, 206, 207, 242, 248, 258, 265, 268, 283, 287, 288, 290, 300, 304, 326, 332, 338, 344, 365, 370, 395, 468, 474, 672, 690, 806, 937, 950, 1055, 1135], "authent": [105, 128, 210, 222, 231, 276, 285, 286, 306, 307, 362, 365, 786, 860, 861, 929, 940, 941, 942, 943, 944, 945, 950, 1097], "ownership": [105, 128, 197, 232, 286, 307, 321, 538, 558, 562, 568, 590, 703, 745, 748, 749, 763, 785, 786, 860, 861, 863, 866, 867, 870, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 929, 958, 959, 960, 968, 970, 984, 987, 990, 992, 1184, 1187], "setuid": [105, 128, 210, 276, 285, 286, 306, 307, 786, 863, 868, 888, 929], "quick": [106, 128, 202, 209, 227, 231, 237, 246, 253, 267, 279, 309, 517, 754, 920, 930, 1131, 1157], "credenti": [106, 128, 177, 270, 786, 861, 862, 863, 868, 882, 883, 884, 885, 886, 887, 888, 929, 946, 975, 1028], "share": [106, 107, 110, 114, 115, 128, 152, 165, 170, 172, 177, 181, 185, 194, 195, 197, 198, 200, 203, 222, 232, 239, 242, 245, 255, 258, 262, 265, 268, 273, 274, 275, 277, 283, 286, 290, 300, 304, 313, 326, 329, 332, 334, 338, 344, 362, 383, 384, 428, 455, 456, 462, 468, 475, 479, 486, 487, 491, 503, 548, 568, 576, 690, 751, 753, 754, 762, 764, 783, 785, 786, 811, 815, 831, 838, 862, 863, 866, 872, 882, 885, 886, 888, 924, 929, 938, 962, 975, 977, 983, 989, 995, 1007, 1010, 1017, 1019, 1039, 1042, 1173, 1188, 1189, 1197, 1199], "adjust": [106, 160, 164, 786, 833, 929, 938, 943, 945, 1001, 1008], "ubuntu": [107, 136, 171, 177, 181, 185, 197, 198, 199, 200, 210, 275, 277, 286, 383, 786, 872, 929, 932, 950, 1009, 1010, 1017, 1018, 1022, 1166, 1171], "zoom": [107, 108, 128, 177, 186, 202, 286, 300, 383, 475, 496, 510, 538, 539, 540, 541, 542, 543, 544, 545, 548, 590, 786, 915, 929, 1009, 1012, 1013, 1014, 1015, 1017, 1178], "recap": [108, 128, 206, 210, 219, 248, 295, 296, 323, 365, 586, 1037], "endeavor": 108, "hoop": [108, 872, 1004], "doze": [108, 176, 231, 232, 245, 365, 372, 450, 784, 872, 917, 1075, 1081, 1166], "pictur": [108, 167, 170, 191, 202, 206, 299, 300, 462, 468, 547, 845, 893, 895, 915, 930, 949, 953, 1199], "fit": [108, 181, 186, 191, 193, 348, 406, 411, 491, 615, 690, 712, 792, 833, 930, 1134, 1136, 1145], "theori": [110, 206, 435, 462, 1136], "Of": [110, 128, 146, 172, 175, 205, 206, 256, 274, 275, 277, 279, 286, 295, 297, 335, 496, 510, 538, 548, 590, 623, 663, 664, 674, 687, 771, 783, 785, 786, 862, 877, 924, 929, 967, 970, 972, 1037, 1131, 1144, 1187], "ece20": [110, 113, 533, 549, 610, 860, 861, 868], "uml": [110, 146, 278, 296, 298, 299, 496, 510, 538, 548, 590, 786], "foundat": [110, 253, 283, 496, 510, 538, 590, 786, 833, 1195], "adapt": [110, 146, 173, 206, 278, 296, 489, 496, 498, 499, 510, 514, 524, 528, 538, 590, 754, 786, 938, 939, 1187], "syllabu": [110, 148, 373], "vote": 110, "beurteilungsschema": 110, "grade": [110, 113, 128, 146, 369, 379, 1164], "total": [110, 113, 116, 117, 126, 172, 181, 185, 189, 242, 258, 268, 275, 461, 466, 474, 488, 497, 512, 546, 547, 548, 549, 600, 610, 749, 915, 917, 930, 937, 938, 939, 950, 973, 1001, 1008, 1009, 1010, 1019, 1022, 1086, 1088, 1171], "compos": [110, 132, 133, 152, 186, 248, 321, 400, 492, 671, 833, 1021, 1024, 1033, 1047, 1093, 1144], "practic": [110, 243, 252, 262, 435, 472, 625, 664, 701, 736, 743, 937, 963, 1005, 1139, 1184, 1187], "theoret": [110, 367, 386, 757], "semest": [110, 113, 150, 369, 371], "addition": [110, 169, 172, 411, 495, 512], "deliv": [110, 170, 933, 1004, 1005], "variou": [110, 172, 248, 274, 275, 748, 762, 764, 833, 865, 1189], "weight": [110, 193, 202, 457, 827, 939, 1055], "decid": [110, 171, 172, 177, 202, 256, 461, 491, 552, 566, 630, 829, 833, 853, 937, 1038, 1055], "excerpt": [110, 206, 209, 367, 368, 1088, 1145], "w1": [110, 118, 124, 128, 129, 143, 286, 335, 533, 549, 550, 967], "soup": [110, 167, 475, 477, 478, 480, 481, 483, 484, 486, 488, 490, 491, 492, 493, 494, 495, 497, 499, 502, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 546, 548, 551, 552, 553, 554, 556, 558, 559, 560, 561, 563, 564, 565, 566, 567, 670, 750, 784, 971, 974, 1031, 1034, 1083, 1164, 1173], "armv8": [110, 181, 286, 550, 1008, 1021, 1022], "rpi4": [110, 181, 286, 550, 1008, 1021, 1022], "gnueabihf": [110, 181, 286, 550, 833, 1008, 1019, 1021, 1022], "shape": [110, 163, 191, 193, 232, 294, 295, 326, 348, 538, 568, 590, 610, 690, 786, 833, 959, 1136, 1139, 1149], "algorithm": [110, 171, 180, 191, 239, 245, 253, 255, 258, 266, 268, 274, 275, 295, 304, 462, 538, 555, 579, 586, 590, 617, 628, 630, 631, 633, 634, 637, 638, 654, 657, 658, 687, 732, 740, 742, 753, 757, 786, 1110, 1133, 1137], "find_if": [110, 112, 232, 248, 295, 334, 632, 635, 654, 658, 675, 684, 687, 753, 786], "customiz": [110, 295, 635, 654, 658, 687, 786], "binary_search": [110, 112, 232, 248, 295, 635, 654, 658, 687, 786], "associ": [110, 181, 199, 207, 209, 211, 227, 232, 286, 289, 292, 295, 297, 335, 409, 410, 418, 423, 427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 538, 539, 555, 557, 590, 625, 654, 658, 687, 690, 692, 718, 730, 783, 785, 786, 792, 799, 857, 931, 959, 1031, 1061, 1062, 1063, 1079, 1081, 1138, 1187], "hour": [110, 175, 177, 202, 206, 239, 261, 279, 290, 303, 325, 371, 1093, 1131, 1138], "sent": [110, 170, 171, 210, 315, 468, 514, 873, 981, 1001, 1005, 1147], "015": 110, "voluntari": 110, "odd": [110, 128, 262, 297, 450, 538, 552, 555, 590, 786, 938, 1033, 1035], "char": [111, 172, 188, 231, 248, 258, 304, 388, 395, 400, 401, 404, 406, 407, 408, 411, 412, 425, 430, 433, 438, 439, 446, 450, 456, 457, 459, 475, 493, 497, 527, 531, 536, 550, 551, 582, 597, 600, 601, 605, 615, 655, 670, 671, 685, 701, 703, 728, 735, 752, 766, 784, 789, 792, 797, 813, 815, 827, 853, 937, 951, 955, 956, 959, 963, 964, 965, 966, 969, 971, 974, 988, 991, 997, 1000, 1001, 1004, 1025, 1070, 1076, 1142, 1171, 1176], "cout": [111, 118, 121, 124, 125, 133, 181, 476, 482, 497, 511, 516, 517, 518, 530, 531, 532, 533, 536, 544, 548, 549, 576, 594, 596, 601, 603, 607, 620, 621, 622, 623, 624, 627, 628, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 643, 647, 648, 649, 650, 651, 657, 661, 662, 665, 667, 668, 671, 674, 681, 684, 690, 695, 705, 707, 708, 709, 710, 713, 714, 715, 716, 718, 719, 720, 722, 723, 724, 725, 726, 727, 732, 734, 735, 737, 738, 740, 742, 751, 752, 753, 754, 762, 764, 765, 770, 772, 774, 776, 876, 937, 971, 974, 986, 988, 1000, 1004, 1171], "endl": [111, 118, 121, 124, 181, 476, 497, 511, 516, 517, 518, 530, 531, 532, 533, 536, 544, 548, 549, 576, 594, 596, 601, 603, 607, 608, 615, 620, 621, 622, 623, 624, 627, 628, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 643, 647, 648, 649, 650, 651, 657, 661, 662, 665, 667, 668, 671, 674, 681, 684, 690, 705, 707, 708, 709, 710, 713, 714, 715, 716, 718, 719, 720, 722, 723, 724, 725, 726, 727, 732, 734, 735, 737, 738, 740, 742, 751, 752, 753, 754, 762, 764, 765, 770, 772, 774, 776, 937, 971, 974, 986, 988, 1000, 1004, 1171], "constitut": 111, "_id": [111, 118, 124], "objectcontain": 111, "add_object": 111, "_contain": [111, 740], "push_back": [111, 521, 522, 585, 626, 627, 628, 633, 636, 639, 643, 647, 694, 695, 698, 703, 762, 1004, 1176], "fragment": [111, 463, 1035, 1171], "iostream": [111, 118, 124, 125, 239, 245, 255, 258, 497, 511, 516, 517, 518, 526, 530, 531, 532, 533, 536, 544, 548, 576, 594, 596, 601, 603, 607, 608, 620, 621, 622, 623, 624, 627, 628, 629, 630, 631, 633, 634, 637, 638, 639, 643, 647, 648, 649, 650, 651, 657, 661, 662, 665, 667, 668, 674, 680, 681, 682, 683, 684, 685, 690, 695, 705, 708, 709, 710, 713, 714, 715, 716, 718, 719, 720, 722, 723, 724, 725, 726, 727, 732, 734, 735, 737, 740, 742, 751, 752, 753, 754, 762, 764, 770, 772, 774, 776, 784, 937, 971, 974, 978, 986, 988, 1000, 1004, 1005, 1171], "my_vector": 111, "sysroot": [112, 181, 1008, 1022], "intel": [112, 155, 159, 173, 786, 1007], "header": [112, 166, 198, 232, 248, 273, 303, 312, 313, 328, 329, 432, 433, 434, 440, 444, 447, 451, 455, 460, 464, 469, 470, 474, 479, 480, 481, 486, 487, 497, 618, 692, 707, 712, 730, 736, 783, 785, 786, 877, 934, 939, 1008, 1010, 1019, 1088, 1121, 1125, 1126, 1128, 1136, 1139, 1186], "match": [112, 169, 176, 205, 218, 235, 242, 243, 245, 250, 258, 268, 270, 271, 280, 283, 303, 304, 310, 321, 332, 338, 344, 430, 474, 549, 703, 707, 727, 740, 744, 868, 877, 950, 1010, 1030, 1076, 1131, 1171], "linker": [112, 114, 115, 165, 197, 312, 328, 429, 455, 462, 466, 467, 478, 485, 607, 618, 833, 1007, 1010, 1013, 1017, 1024, 1181, 1182, 1183, 1186, 1191, 1197], "uniquifi": [113, 297, 538, 555, 590, 786], "lookup": [113, 134, 190, 207, 220, 239, 245, 250, 255, 258, 272, 304, 457, 512, 538, 555, 557, 590, 705, 786, 1043, 1072, 1079, 1109, 1144, 1153, 1201], "leak": [113, 172, 445, 459, 497, 517, 518, 538, 555, 557, 558, 574, 582, 585, 590, 591, 597, 662, 736, 747, 749, 786, 1031], "sure": [113, 169, 170, 171, 172, 173, 175, 176, 177, 180, 181, 210, 222, 229, 246, 248, 288, 362, 456, 491, 492, 495, 514, 517, 518, 547, 573, 670, 744, 781, 833, 938, 939, 960, 964, 1019, 1031, 1187], "gz": [113, 166, 833, 834, 857, 858, 859, 1086, 1166], "whatev": [113, 134, 141, 145, 169, 170, 172, 177, 193, 208, 268, 351, 468, 514, 593, 693, 718, 784, 898, 900, 950, 955, 991, 993, 1061, 1128, 1136, 1143, 1144, 1166], "quiz": [114, 115, 128, 673, 687, 786, 863, 867, 882, 888, 907, 913, 929, 1014, 1017], "servic": [114, 115, 166, 175, 176, 177, 210, 242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344, 468, 474, 757, 825, 831, 836, 866, 869, 920, 939, 948, 950, 957, 993, 1060], "owner": [114, 115, 171, 210, 365, 370, 750, 792, 833, 866, 880, 881, 889, 915, 950, 978], "dimension": [114, 115, 191, 712, 866, 1136, 1137], "identifi": [114, 115, 171, 180, 239, 245, 255, 258, 304, 411, 433, 454, 456, 466, 681, 791, 831, 866, 937, 939, 1077, 1138], "pthread": [114, 115, 170, 181, 187, 239, 245, 255, 258, 756, 762, 866, 975, 980, 983, 991, 1005, 1010], "timeslic": [114, 115, 170, 866, 989, 994], "suspend": [114, 115, 170, 171, 344, 718, 720, 760, 829, 864, 866, 877, 980, 1005], "favor": [114, 115, 866, 992, 1184], "fair": [114, 115, 170, 831, 866, 992, 994], "ensur": [114, 115, 258, 492, 540, 866], "evenli": [114, 115, 250, 866], "cpu": [114, 115, 135, 169, 170, 173, 177, 180, 203, 213, 217, 297, 344, 376, 380, 448, 449, 461, 463, 468, 626, 757, 764, 786, 804, 817, 831, 838, 843, 853, 864, 866, 869, 873, 929, 937, 938, 939, 953, 970, 978, 980, 990, 991, 992, 993, 994, 1041, 1058, 1189], "infinit": [114, 115, 170, 190, 209, 239, 243, 245, 248, 250, 255, 258, 266, 299, 303, 423, 441, 448, 866, 870, 989, 992, 1035, 1036, 1037, 1066, 1101], "illus": [114, 115, 866, 870, 989, 992, 1189], "action": [114, 115, 180, 209, 265, 475, 481, 593, 672, 892, 893, 954, 959, 991, 1004, 1006, 1138, 1159], "undefin": [114, 115, 231, 404, 411, 438, 481, 599, 607, 631, 638, 643, 667, 672, 703, 732, 1004], "behavior": [114, 115, 133, 170, 172, 175, 207, 229, 231, 258, 411, 631, 638, 643, 672, 703, 720, 866, 960, 964, 1005, 1008, 1028, 1033, 1050], "declar": [114, 115, 230, 231, 243, 248, 387, 403, 418, 427, 432, 434, 440, 441, 444, 447, 448, 451, 454, 455, 456, 460, 462, 464, 469, 470, 475, 595, 605, 665, 672, 681, 682, 692, 703, 712, 728, 730, 750, 783, 785, 786, 939, 959, 963, 965, 966, 992, 1173], "promis": [114, 115, 172, 274, 275, 277, 286, 334, 398, 456, 514, 582, 594, 603, 672, 718, 720, 721, 724, 725, 762, 763, 785, 786, 1004, 1056, 1184], "caller": [114, 115, 172, 248, 398, 400, 436, 442, 466, 468, 605, 672, 684, 701, 750, 752, 757, 760, 825, 836, 976, 980, 1031, 1110], "uniniti": [114, 115, 459, 585, 592, 594, 595, 596, 599, 672, 788], "guarante": [114, 115, 170, 208, 239, 258, 450, 495, 672, 797, 804, 938, 939, 992, 993, 1001, 1028], "contigu": [114, 115, 463, 626, 643, 672, 819, 969, 1152], "vec": [114, 115, 592, 594, 601, 608, 609, 610, 611, 612, 672], "hysteresi": [116, 117, 119, 120, 127, 129, 139, 144, 145, 146, 335, 374, 540], "_x": [118, 121, 536, 594, 595, 597, 599, 601, 602, 603, 604, 606, 608, 618, 633, 697, 712, 714, 715, 716], "firstnam": [118, 122, 128, 146, 203, 229, 242, 250, 252, 255, 258, 262, 265, 268, 270, 271, 280, 283, 290, 304, 310, 315, 322, 338, 351, 356, 492, 493, 521, 527, 536, 537, 550, 605, 651, 677, 681, 683, 685, 702, 860, 861, 897, 898, 900, 902, 905, 1031, 1044, 1045, 1047, 1048, 1049, 1051, 1052, 1060, 1120, 1121, 1122, 1123, 1126, 1127, 1128, 1139, 1148, 1149, 1150, 1152, 1153, 1154, 1155], "lastnam": [118, 122, 128, 146, 203, 232, 242, 248, 250, 252, 255, 258, 262, 265, 268, 270, 271, 283, 290, 304, 310, 315, 322, 338, 351, 356, 492, 493, 521, 527, 536, 537, 550, 605, 651, 675, 677, 681, 684, 687, 702, 786, 860, 861, 897, 898, 900, 902, 905, 1031, 1044, 1045, 1047, 1048, 1049, 1051, 1052, 1060, 1120, 1121, 1122, 1123, 1126, 1127, 1128, 1139, 1148, 1149, 1150, 1152, 1153, 1154, 1155], "chosen": [118, 122, 181, 477, 930, 937, 939, 965, 969, 989, 993, 1137, 1150], "shorter": [118, 122, 190, 1038, 1049, 1081, 1130], "temporari": [118, 122, 171, 180, 197, 239, 245, 248, 255, 258, 298, 299, 320, 324, 477, 549, 550, 698, 702, 703, 718, 732, 740, 784, 877, 1007, 1033, 1114], "consid": [118, 123, 124, 170, 172, 202, 206, 230, 239, 245, 255, 256, 258, 262, 286, 304, 325, 426, 453, 454, 462, 514, 668, 893, 937, 992, 1047, 1055, 1131, 1158, 1159, 1186], "imagin": [118, 124, 170, 172, 452, 457, 458, 490, 503, 833, 872, 889, 930, 939, 978, 1005], "w1sensor": [118, 124, 146, 534, 535, 536, 537, 549], "pragma": [118, 123, 124, 450, 491, 493, 497, 502, 514, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 549, 607, 624, 627, 721, 770, 772, 774, 775, 776, 777, 784], "get_temperatur": [118, 123, 124, 206, 258, 321, 491, 494, 495, 497, 502, 504, 514, 515, 520, 522, 523, 525, 528, 529, 533, 536, 541, 542, 543, 544, 548, 549, 550, 561, 579, 700, 748, 749, 750, 751, 770, 772, 774, 775, 776, 777, 1043, 1119], "unus": [118, 124, 456, 491, 546, 548, 592, 596, 607, 646, 647, 700, 811, 870, 986, 1000], "cstdint": [118, 124, 691, 719, 720], "uint64_t": [118, 124, 406, 443, 549, 719, 720, 754, 957, 1000], "w1_address": [118, 124], "_w1_address": [118, 124], "overrid": [118, 124, 125, 146, 166, 230, 243, 258, 273, 335, 491, 497, 499, 504, 519, 521, 522, 523, 525, 526, 528, 550, 664, 665, 729, 730, 770, 785, 786, 1028, 1043, 1176], "physic": [118, 124, 172, 175, 210, 217, 298, 299, 320, 324, 463, 668, 817, 869, 938, 957, 961, 991, 992], "samp": [118, 124], "unistd": [118, 124, 172, 453, 550, 582, 890, 937, 953, 955, 956, 957, 959, 962, 963, 964, 965, 966, 969, 971, 974, 988, 991, 997, 1000, 1004], "0xdeadbe": [118, 124], "correct": [118, 169, 177, 181, 209, 229, 231, 242, 365, 411, 448, 452, 453, 460, 463, 464, 469, 470, 472, 500, 568, 600, 665, 667, 668, 700, 745, 748, 756, 786, 876, 880, 881, 905, 937, 938, 939, 992, 1034, 1042, 1136, 1159], "liskov": [118, 123, 124, 472], "segreg": [118, 123, 124, 146, 472], "invers": [118, 123, 124, 146, 262, 380, 472, 490, 497, 797, 992, 993, 1200], "question2": [119, 127], "set_stat": [123, 139, 145, 335], "nullptr": [123, 530, 531, 549, 560, 564, 690, 700, 701, 748, 749, 750, 762, 764, 766, 781, 782, 974, 1184], "_sensor": [123, 497, 504, 522, 523, 525, 528, 529, 750], "_switch": [123, 504], "_displai": 123, "_low": 123, "_high": 123, "current_temperatur": 123, "obvious": [124, 172, 173, 175, 181, 193, 388, 452, 456, 483, 512, 576, 602, 608, 646, 661, 662, 690, 701, 735, 739, 744, 771, 784, 831, 833, 846, 869, 870, 876, 890, 938, 939, 949, 965, 966, 993, 1005, 1007, 1023, 1044, 1047, 1186], "remain": [124, 170, 171, 181, 190, 203, 250, 258, 304, 553, 554, 566, 595, 643, 649, 680, 686, 691, 753, 761, 815, 946, 994, 1005, 1007, 1106, 1109, 1110, 1113, 1121, 1123, 1139, 1173], "carri": [126, 172, 177, 192, 454, 486, 495, 512, 784, 937, 994, 1007, 1030], "norm": [126, 248, 1144], "meantim": [126, 497, 954], "fresh": [126, 171], "made": [126, 133, 145, 163, 164, 169, 170, 171, 173, 176, 177, 181, 185, 222, 237, 262, 286, 321, 365, 397, 435, 436, 438, 441, 472, 492, 496, 512, 518, 718, 817, 833, 864, 865, 870, 930, 937, 963, 969, 974, 992, 1010, 1035, 1042, 1052, 1088, 1136], "arbitrari": [126, 170, 191, 258, 262, 392, 408, 426, 462, 477, 615, 642, 643, 695, 753, 765, 792, 934, 959, 963, 991, 1031, 1067, 1081, 1109], "sinc": [126, 152, 181, 187, 232, 238, 269, 361, 462, 465, 594, 602, 603, 633, 646, 689, 690, 718, 739, 744, 750, 765, 784, 833, 937, 950, 957, 963, 966, 978, 993, 1000, 1061, 1185], "whichev": 126, "enumer": [126, 185, 191, 193, 203, 209, 214, 215, 219, 221, 227, 228, 230, 251, 255, 260, 266, 280, 284, 301, 304, 323, 333, 345, 348, 407, 454, 474, 691, 794, 829, 939, 1194], "pack": [126, 181, 185, 231, 547, 568, 859, 893, 931, 933], "unpack": [126, 185, 189, 209, 215, 219, 221, 226, 230, 234, 239, 242, 247, 251, 252, 258, 263, 265, 269, 270, 281, 286, 288, 291, 300, 304, 322, 325, 327, 333, 335, 345, 348, 350, 365, 730, 785, 786, 833, 859, 931, 933, 937, 1008, 1015, 1021, 1022, 1061, 1079, 1184], "kib": [126, 185], "222": [126, 203, 242, 245, 250, 252, 258, 262, 265, 268, 280, 283, 300, 304, 310, 326, 332, 338, 344, 348, 481], "addit": [126, 172, 190, 202, 229, 258, 261, 350, 409, 456, 477, 511, 512, 526, 548, 594, 606, 612, 683, 833, 870, 946, 1050, 1062, 1078, 1080, 1159], "checkout": [126, 152, 162, 173, 185, 199, 806, 833, 834, 1196], "previou": [126, 174, 190, 321, 533, 585, 601, 683, 893, 925, 965, 1032, 1034, 1054, 1056, 1100, 1158], "9bfda12": 126, "mosquitto": [126, 242, 246, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 1125, 1147], "client": [126, 136, 152, 175, 177, 188, 233, 237, 265, 279, 472, 500, 501, 514, 753, 754, 933, 946, 948, 956, 1001, 1143, 1159], "smoothli": 126, "forward": [126, 185, 248, 274, 275, 276, 285, 306, 307, 334, 403, 418, 427, 433, 434, 440, 444, 447, 451, 460, 464, 469, 470, 655, 692, 699, 730, 740, 783, 785, 786, 833, 893, 917, 925, 929, 930, 940, 945, 1184], "diverg": [126, 991], "00aea42": 126, "delet": [126, 197, 209, 239, 258, 273, 283, 304, 335, 360, 459, 490, 493, 532, 549, 558, 562, 574, 582, 597, 600, 659, 662, 667, 690, 700, 701, 702, 730, 735, 747, 748, 749, 750, 766, 776, 785, 786, 811, 841, 870, 1140, 1166, 1183, 1184], "footnot": [126, 173, 175, 176, 177, 180, 181, 186, 193, 199, 202, 205, 289, 292, 491, 518, 562, 609, 611, 612, 625, 655, 674, 802, 804, 865, 872, 887, 937, 938, 939, 960, 963, 1023, 1055, 1058, 1088, 1122, 1137, 1184, 1187], "term": [126, 133, 170, 172, 194, 222, 262, 295, 297, 362, 462, 605, 608, 672, 750, 753, 866, 939, 958, 992, 1004, 1136, 1171], "ss2023": 127, "ws2023": [127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 145, 786], "ece21": [127, 128, 145, 146], "bouncem": [128, 146, 549, 550, 860, 861], "procf": [128, 149, 210, 212, 286, 786, 871, 929, 970, 987, 1188, 1195], "umask": [128, 276, 285, 286, 306, 307, 365, 370, 786, 863, 888, 912, 929, 963, 975], "diff": [128, 226, 245, 338, 592, 594, 1050, 1190], "raspi": [128, 166, 300, 365, 371, 786, 810, 833, 834, 835, 837, 842, 848, 851, 854, 929, 931, 932, 933, 934, 937, 938, 939, 1021, 1022], "spirit": [128, 426], "readm": [128, 154, 189, 295, 297, 937, 938], "modular": [128, 202, 207, 209, 237, 256, 288, 367, 368, 398, 475, 1007, 1034], "plc": 128, "sallok": 128, "constantsensor_nopoli": [128, 146, 538, 544, 590, 786], "randomsensor_nopoli": [128, 146, 538, 590, 786], "labexam": 128, "hysteresis_nopoli": [128, 129, 146, 538, 539, 590, 786], "upload": [128, 176, 893, 1086, 1158], "j": [128, 167, 175, 181, 218, 233, 235, 245, 250, 252, 255, 258, 262, 265, 268, 280, 283, 290, 304, 310, 322, 326, 338, 412, 415, 432, 456, 463, 512, 605, 694, 705, 753, 843, 859, 1015, 1019, 1035, 1144, 1150], "bz2": [128, 171, 468, 833, 855, 858, 1028], "influenc": [128, 1008, 1184], "felber": 128, "vscode": [128, 200, 371, 385, 915], "folder": [128, 176], "comprehend": [128, 256, 411, 417, 1004], "workspacefold": 128, "suppli": [128, 172, 210, 550, 552, 596, 792, 833, 849, 868, 930, 934, 937, 939, 954, 963, 1092], "cpprefer": [128, 630, 631, 632, 633, 634, 636, 637, 638, 639, 642, 651, 670], "averagingsensor_nopoli": [128, 146, 538, 590, 786], "toolcas": [128, 141, 146, 295, 297, 707], "mocksensor_nopoli": [128, 146, 538, 539, 540, 541, 590, 786], "specifi": [128, 170, 187, 258, 270, 304, 406, 474, 483, 536, 539, 544, 547, 596, 676, 690, 705, 729, 740, 833, 893, 950, 963, 967, 993, 1005, 1058, 1073, 1081, 1085, 1102, 1121, 1123, 1152, 1154, 1159], "hint": [128, 141, 185, 258, 270, 299, 389, 492, 552, 562, 566, 677, 860, 861, 873, 942, 991], "target_link_librari": [128, 198, 478, 480, 481, 482, 483, 487, 533, 569, 572, 578, 584, 587, 1003, 1008, 1009, 1170, 1173, 1175], "inter": [128, 170, 188, 194, 992, 1188, 1195, 1198, 1200], "likewis": [128, 245, 579, 610, 859, 878, 949, 965, 1015, 1136, 1173], "ledstripedisplay_nopoli": [128, 146, 538, 590, 786], "somewhat": [129, 190, 231, 462, 495], "02131d959eaa": [129, 533, 549, 550, 967], "heat": [129, 278, 489, 496, 540, 549, 786, 939, 1135, 1136], "hwmon2": [129, 344, 937], "temp1_input": [129, 937, 939], "boilingpot": [129, 131], "knob": [129, 1059], "steer": 129, "desir": [129, 175, 239, 245, 255, 258, 407, 411, 422, 544, 594, 596, 602, 684, 831, 964, 966, 1138], "hardcod": [129, 171, 369, 568, 792, 796, 1097], "ledstripedisplai": [129, 139, 141, 144, 145], "unreason": 129, "cluster_fh2021": [129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 145, 786], "fh2021_boiling_pot": [129, 130, 131, 132, 138, 145, 786], "fh2021_sensor_interfac": [129, 130, 131, 132, 138, 145, 786], "fh2021_switch_interfac": [129, 130, 131, 132, 137, 138, 139, 145, 786], "fh2021_sysfs_gpio_switch": [129, 130, 132, 138, 145, 786], "breadboard": [130, 132, 939, 1188, 1195], "acrobat": [130, 132], "boilingpot_suit": 131, "status_report": 131, "percentage_displai": 131, "fh2021_pwm_displai": [131, 137, 138, 141, 786], "pwm": [131, 132, 137, 138, 146, 286, 295, 786, 833, 929, 930, 936, 973, 1188, 1195], "fh2021_display_infrastructur": [131, 137, 138, 786], "infrastructur": [131, 132, 138, 146, 170, 467, 786, 789, 1001], "fh2021_boiling_pot_displai": [131, 138, 786], "stripe": [132, 137, 141, 539], "style": [133, 166, 170, 175, 239, 245, 248, 255, 258, 297, 458, 473, 474, 568, 593, 594, 599, 633, 667, 670, 681, 690, 695, 726, 742, 767, 771, 775, 776, 777, 785, 786, 801, 850, 973, 1059, 1100, 1125, 1136], "reusabl": 133, "compon": [133, 230, 243, 335, 465, 917, 992], "dedic": [133, 170, 171, 202, 207, 256, 286, 289, 292, 458, 474, 801, 871, 872, 937, 938, 939, 973, 975, 1009, 1027, 1038, 1071, 1187], "constrain": [133, 771, 871], "decoupl": [133, 246, 490, 991], "sink": [133, 135, 138, 298, 299, 314, 317, 320, 324, 786], "datalogg": [133, 299, 321], "target_include_directori": [133, 483, 484, 486, 487], "announc": [133, 372, 483, 484, 661, 937, 938], "anyon": [133, 170, 582, 804], "node": [133, 163, 175, 180, 190, 446, 466, 483, 646, 789, 792, 796, 802, 811, 1023, 1147, 1164], "startlog": 133, "uint16_t": [133, 406], "special": [133, 163, 170, 217, 250, 252, 258, 262, 286, 387, 439, 500, 511, 514, 517, 518, 562, 585, 590, 703, 705, 759, 782, 859, 870, 875, 931, 953, 959, 981, 1005, 1024, 1029, 1048, 1050, 1058, 1067, 1069, 1073, 1133, 1138, 1169, 1189, 1190], "unif": [133, 591], "leftov": 133, "gettim": 133, "defer": [133, 170, 472, 831, 853], "timestamp": [133, 235, 245, 265, 294, 298, 299, 320, 322, 324, 326, 332, 474, 754, 794, 895, 915, 949, 1000], "sinkfil": 133, "sinkmock": 133, "usabl": [133, 258, 304, 416, 495, 546, 701, 940], "sensorconfig": [133, 146, 325], "sensorvalu": [133, 134, 136, 511, 525], "runtime_error": [133, 516, 517, 528, 530, 531, 532, 550, 764], "logger_suit": 133, "loggerbasictest": 133, "sensor_values_suit": 133, "sensor_config_suit": 133, "duplicate_sensor": 133, "outlook": [133, 146, 872], "prebuilt": [133, 937], "order": [133, 157, 163, 169, 175, 176, 180, 181, 190, 202, 203, 206, 208, 239, 245, 250, 260, 262, 265, 295, 312, 328, 391, 417, 428, 450, 462, 477, 492, 511, 566, 568, 575, 577, 640, 686, 784, 788, 804, 817, 833, 922, 930, 937, 939, 955, 994, 1019, 1035, 1055, 1103, 1113, 1186], "acquisitionloop": [133, 321, 325], "n_iter": 133, "doit": [133, 242, 497], "write_measur": [133, 321], "mockingsink": 133, "receiv": [133, 171, 190, 245, 248, 286, 315, 398, 514, 605, 703, 792, 804, 825, 833, 893, 930, 933, 939, 946, 954, 959, 981, 989, 1004, 1005, 1028, 1031, 1081, 1112, 1127, 1144], "yaml": 133, "ini": [133, 154, 175, 189, 373, 376, 1164], "fh2021_datalogg": [133, 134, 135, 136, 138, 786], "predecessor": [134, 136, 256, 264, 270, 314, 317], "sinklogg": [134, 136], "csvsink": [134, 321], "logfil": [134, 171, 209, 875, 926], "linksoben": 134, "rechtsunten": 134, "addmeasur": 134, "rememb": [134, 175, 176, 191, 198, 208, 229, 417, 450, 500, 626, 627, 661, 664, 701, 702, 750, 829, 833, 875, 890, 893, 912, 937, 946, 948, 1029, 1095, 1105], "csvname": [134, 243, 288, 474], "valuenam": 134, "_config": 134, "sensor_valu": 134, "getmeasur": 134, "rotat": [134, 171, 930, 955], "backup": [134, 176, 210, 475, 862, 864, 946, 1149], "fh2021_datalogger_csv_sink": [134, 138, 786], "boil": [135, 136, 139, 145, 786, 833], "pot": [135, 136, 139, 145, 786], "struct": [136, 173, 197, 231, 232, 248, 349, 433, 438, 444, 445, 446, 447, 450, 451, 454, 456, 458, 460, 464, 469, 470, 492, 497, 514, 549, 550, 594, 595, 600, 602, 604, 605, 625, 675, 676, 677, 678, 679, 680, 682, 683, 684, 685, 686, 687, 690, 692, 693, 694, 695, 702, 718, 721, 723, 724, 725, 726, 730, 735, 753, 754, 764, 766, 774, 775, 777, 783, 784, 785, 786, 792, 794, 797, 799, 801, 802, 804, 817, 821, 823, 825, 827, 829, 835, 836, 841, 843, 846, 850, 852, 853, 931, 933, 937, 956, 957, 969, 980, 991, 994, 1000, 1001, 1004, 1005, 1185], "sensor_config": 136, "getallmeasur": 136, "localhost": [136, 1142, 1147], "1883": [136, 1147], "transport": [136, 194, 246, 248, 547, 764, 1127, 1147], "sensor1": [136, 280, 497, 770, 772, 774, 776, 777], "sensor2": [136, 497, 770, 772, 774, 776, 777], "api": [136, 170, 177, 194, 217, 231, 258, 376, 380, 786, 789, 796, 804, 811, 815, 827, 929, 970, 982, 990, 993, 1001, 1086, 1142, 1160, 1188, 1189], "burden": [136, 474, 607, 1033, 1165], "handmad": 136, "fedora": [136, 166, 175, 181, 182, 185, 199, 286, 338, 562, 786, 790, 793, 795, 798, 800, 803, 810, 812, 813, 814, 818, 824, 830, 834, 837, 842, 848, 851, 854, 889, 893, 929, 932, 1009, 1010, 1017, 1018, 1019, 1022, 1147, 1171], "mosquitto_new": 136, "mosquitto_connect": 136, "mosquitto_destroi": 136, "prohibit": [136, 602], "wide": [136, 177, 181, 388, 389, 865, 946, 1001, 1007], "iot": [136, 138, 146, 246, 286, 786], "broadcast": [136, 762, 931, 938, 980, 1005, 1201], "flexibl": [136, 278, 483, 489, 503, 510, 524, 538, 590, 636, 786, 976, 991, 1007, 1008, 1009, 1024, 1025, 1076, 1179], "fh2021_datalogger_mqtt_sink": [136, 138, 786], "percentag": [137, 141, 466], "show_percentag": [137, 141], "wire": [137, 930, 940, 1019], "connect": [137, 155, 170, 177, 190, 210, 222, 243, 286, 315, 362, 370, 371, 446, 764, 864, 926, 930, 931, 938, 939, 948, 953, 959, 973, 1140, 1142, 1147, 1159, 1187, 1199, 1201], "shown": [137, 175, 208, 356, 915, 1001, 1144], "src_demo": [137, 141], "logger": [138, 146, 299, 317, 321, 324, 754, 786], "fh2021_mqtt_tkinter": [138, 140, 786], "subscrib": [138, 167, 246, 258, 786], "fh2021_boiling_pot_full_integr": [138, 786], "fh2021_boiling_pot_basic_integr": [138, 786], "fh2021_sensor_w1": [138, 786], "fh2021_libgpiod_switch": [138, 139, 786], "fh2021_datalogger_integr": [138, 786], "mockswitch": [139, 144, 145], "libgpiodswitch": 139, "tkinter": 140, "stackoverflow": [140, 365, 370, 448], "2400262": 140, "random": [140, 146, 188, 190, 206, 218, 230, 242, 243, 246, 250, 252, 255, 258, 263, 265, 268, 290, 299, 332, 338, 344, 348, 360, 365, 408, 495, 497, 502, 511, 537, 548, 558, 559, 560, 561, 563, 564, 565, 595, 748, 864, 939, 950, 969, 997, 1031, 1043, 1066, 1138, 1147], "pca9685": [141, 146, 286, 786, 929, 930, 936], "pwmchip0": [141, 930, 938], "pwm0": [141, 930, 938], "danc": [141, 176, 549, 853, 1023], "phase": [141, 218, 516, 530, 1001, 1035], "cumbersom": [141, 172, 174, 209, 603, 626, 694, 738, 789, 975, 1001, 1171], "percentagedisplai": 141, "round": [141, 170, 237, 242, 252, 262, 278, 283, 332, 334, 348, 489, 496, 497, 499, 501, 510, 511, 524, 538, 590, 786, 994, 1200], "hood": [141, 172, 1007], "relationship": [141, 335, 365, 504, 537, 579, 661, 754, 976, 1009, 1023, 1039, 1043, 1137], "pwmdisplai": 141, "pwm_control": 141, "bit": [141, 145, 164, 169, 170, 172, 175, 177, 180, 181, 202, 203, 206, 213, 232, 243, 245, 246, 252, 276, 279, 285, 286, 289, 292, 306, 307, 325, 360, 365, 370, 376, 388, 394, 400, 406, 411, 418, 427, 434, 435, 440, 444, 447, 450, 451, 460, 464, 469, 470, 533, 547, 608, 692, 727, 730, 740, 750, 783, 784, 785, 786, 829, 833, 852, 863, 864, 888, 890, 892, 929, 930, 931, 933, 938, 940, 963, 991, 1008, 1017, 1027, 1067, 1131, 1144, 1179, 1184], "pwm5": 141, "visibl": [141, 145, 185, 211, 231, 297, 351, 398, 400, 402, 426, 428, 459, 460, 464, 469, 470, 534, 683, 786, 804, 937, 939, 1001, 1072, 1100, 1140], "10000000": [141, 172, 245, 414, 977, 1033, 1041], "set_percentag": 141, "duti": [141, 930, 938], "duty_cycl": [141, 930, 938], "unbuff": 141, "automat": [141, 145, 158, 172, 174, 176, 177, 185, 220, 222, 226, 232, 239, 245, 255, 258, 262, 295, 297, 402, 411, 438, 455, 458, 462, 474, 503, 504, 593, 596, 661, 665, 703, 732, 771, 785, 786, 789, 804, 833, 937, 939, 966, 1028, 1081, 1088, 1093], "serv": [144, 174, 176, 423, 1137, 1165, 1199], "ground": [144, 938, 939], "mocksensor": [144, 146], "upstream": [145, 173, 176, 181, 185, 811], "sysfsgpioswitch": 145, "wherea": 145, "gpio20": 145, "voltag": [145, 930, 937], "constructur": 145, "proid": 145, "lifecycl": 145, "avg": [146, 258, 338, 455, 494, 511, 522, 541, 548, 770, 772, 774, 776], "lifetim": [146, 171, 229, 231, 248, 260, 403, 418, 427, 434, 440, 444, 445, 447, 451, 460, 464, 469, 470, 504, 597, 680, 692, 703, 730, 783, 785, 786, 1026], "averagingsensor": [146, 494, 522], "scheme": [146, 258, 304, 321, 324, 606, 1026, 1030], "constantsensor": [146, 494, 497, 502, 514, 515, 523, 535, 542, 548, 558, 559, 560, 561, 563, 564, 700, 748, 749, 750, 751, 1043, 1119], "meet": [146, 175, 177, 202, 450, 877, 1019, 1032], "liskow": [146, 500], "gcc": [146, 171, 172, 198, 218, 220, 239, 245, 255, 258, 358, 385, 387, 411, 428, 432, 450, 453, 454, 456, 466, 467, 475, 477, 576, 624, 627, 759, 833, 834, 870, 890, 955, 956, 957, 963, 964, 965, 966, 975, 978, 1008, 1019, 1021, 1022, 1023, 1024, 1025, 1057, 1173, 1179], "cycl": [146, 232, 267, 472, 474, 718, 749, 763, 785, 786, 929, 930, 938, 970, 984, 990], "todai": [146, 171, 222, 230, 246, 279, 296, 312, 325, 328, 374, 400, 1131, 1186, 1189], "minut": [146, 170, 176, 177, 202, 206, 209, 246, 939, 1131, 1147], "suppos": [146, 185, 206, 262, 350, 514, 811, 833, 850, 872, 930, 978, 1125, 1164], "deploi": [146, 182, 210, 365, 370, 490, 823, 860, 861, 938, 939, 944, 946, 950], "leddisplai": 146, "pwmcontrol": 146, "minor": [146, 177, 181, 239, 245, 255, 258, 288, 792, 799, 864], "tweak": [146, 1164], "standup": 146, "followup": [146, 253, 314, 317, 535, 1120], "bonu": 146, "donat": [146, 931], "relai": 146, "board": [146, 169, 171, 833, 937], "cooker": 146, "gapher": 146, "tape": 146, "coordin": [146, 546, 592, 594, 601, 602, 712, 955], "notic": [146, 169, 170, 172, 185, 239, 245, 255, 258, 458, 477, 478, 535, 782, 873, 977, 979, 1039, 1153], "wikipedia": [146, 187, 248, 462, 605, 939, 950, 994, 1026, 1144], "dir": [152, 203, 222, 230, 243, 252, 255, 262, 280, 283, 303, 304, 322, 344, 348, 350, 358, 439, 474, 475, 481, 486, 878, 1008, 1009, 1021, 1044, 1159, 1166], "wo": [152, 178, 188, 189, 197, 203, 205, 383, 1181, 1182, 1200], "jf": [152, 163, 177, 214, 215, 273, 290, 365, 370, 384, 514, 528, 808, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1189, 1194], "aon": 152, "biz": 152, "svn": [152, 166, 232, 383, 384], "recommend": [152, 181, 202, 210, 222, 255, 462, 615, 646, 833, 893, 938, 1086, 1140, 1148], "lokalen": 152, "fetch": [152, 171, 185, 833, 976, 1004], "myremot": 152, "orig": [152, 173, 220], "stia": 152, "improv": [153, 462, 465, 477, 733, 748, 784, 1026], "stack": [153, 191, 192, 193, 200, 214, 215, 233, 239, 242, 245, 255, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344, 456, 462, 512, 596, 627, 747, 866, 870, 938, 963, 975, 1194], "hang": [153, 213, 592, 836, 859], "seo": [153, 845], "blog": [153, 166, 170, 173, 180, 185, 752], "i2": [153, 155, 160, 265, 300, 786], "kontron": [153, 162, 786], "smarc": [153, 162, 786], "proper": [154, 170, 198, 448, 808, 833, 965, 1050], "manifest": [154, 1019, 1167], "cfg": [154, 162, 338], "author_email": 154, "classifi": [154, 1086, 1133], "tox": 154, "travi": 154, "yml": 154, "upgrad": [154, 158, 159, 189, 786, 1159, 1166], "zip": [154, 162, 166, 230, 250, 256, 270, 283, 333, 338, 893, 899, 915], "zipfil": [154, 230], "99": [154, 180, 189, 203, 213, 220, 226, 229, 235, 242, 245, 250, 252, 255, 258, 262, 265, 268, 271, 280, 283, 287, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 360, 365, 370, 466, 994, 1070, 1105, 1135], "999": [154, 242, 245, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338], "whl": [154, 166, 1086, 1159], "uninstal": [154, 480, 1159, 1164], "pypa": 154, "sampleproject": 154, "devicetre": [155, 938], "signal": [155, 166, 167, 195, 297, 383, 466, 764, 786, 804, 825, 870, 929, 930, 938, 970, 975, 983, 991, 992, 997, 1001, 1190, 1197, 1198, 1201], "audio_mck": 155, "i2s0_ck": 155, "i2s0_lrck": 155, "i2s0_sdout": 155, "alsa": [155, 173, 338], "tlv320dac3203irg": 155, "tlv320dac3203": 155, "drive": [155, 288, 452, 540, 938, 959, 1138], "suggest": [155, 169, 170, 172, 174, 176, 177, 185, 194, 202, 209, 210, 211, 212, 275, 277, 295, 297, 426, 1055, 1083, 1164], "tlv320aic32x4": 155, "compat": [155, 175, 191, 294, 601, 691, 707, 784, 789, 808, 1010, 1056, 1079, 1144, 1159, 1160], "tlv320aic31xxsw": 155, "tlv320aic31xx": 155, "wget": [156, 175, 177, 181, 300, 1019, 1021], "cdimag": 156, "amd64": [156, 222, 362, 406], "iso": [156, 230, 248, 249, 265, 268, 288, 310, 322, 326, 386, 474, 591, 607, 857], "netinst": 156, "img": [156, 191, 193, 348, 461, 833, 937], "qcow2": 156, "virtualdebian": 156, "30g": [156, 177], "kvm": [156, 173], "hda": 156, "cdrom": 156, "2048": [156, 180, 245], "nic": 156, "sic": [156, 181], "box": [156, 160, 202, 930, 937, 1055], "deliveri": [157, 161, 170, 1003, 1006], "outcom": [158, 206, 211, 297, 833, 892, 893, 1015, 1087], "dirti": [158, 159, 172, 186, 432, 497, 786], "forget": [158, 163, 170, 171, 172, 246, 397, 400, 445, 474, 1140, 1146, 1165, 1184], "graphic": [158, 467, 868, 869, 938], "plug": [158, 171, 173, 496], "monitor": [158, 173, 187], "4k": [158, 172, 991, 1000], "dual": [158, 160], "gnome": [158, 170, 175, 242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344, 468, 833, 868, 924, 992], "applianc": [158, 172, 468], "x11": [158, 338], "wayland": [158, 175], "benchmark": 158, "glxgear": 158, "su": [158, 1021], "pect": 158, "cluster_project_xxx": [159, 786], "project_xxx_dirty_upgrad": [159, 786], "project_xxx_yocto_kernel": [159, 786], "bsp": [159, 786], "project_xxx_debian_config": [159, 786], "project_xxx_wait_hardwar": [159, 786], "project_xxx_debian_kernel_packag": [159, 786], "finish": [159, 202, 221, 757, 786, 843, 1042], "project_xxx_audio_chip": [159, 786], "chip": [159, 188, 242, 786, 930, 934, 937, 955, 957, 991, 1088], "bringup": [159, 160, 786], "project_xxx_hardware_bringup": [159, 786], "shot": [160, 177, 426, 690, 764, 784], "dac": 160, "massacr": [160, 189, 248, 365, 426, 432, 458, 482, 690, 1038], "distro": [160, 480, 1062, 1173], "bootload": [160, 169, 180, 468, 869, 937, 939], "oldconfig": [160, 171, 806, 813, 833, 834], "qemu": [160, 242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344], "grub": [160, 180, 338], "stabl": [160, 177, 181, 472, 811, 833, 872, 991, 1023, 1025, 1086, 1160], "yoctoproject": 162, "v5": [162, 173], "bsp_smarc": 162, "sxal4_smarc": 162, "sxal_r1": 162, "0_combin": 162, "sxal4_5": 162, "sxal4": 162, "inc": [162, 173, 294, 449, 486, 487, 759, 978, 1041], "filesextrapaths_prepend": 162, "thisdir": 162, "linux_vers": 162, "linux_version_extens": 162, "linux_kernel_typ": 162, "kbranch": 162, "kmeta": 162, "lic_files_chksum": 162, "md5": 162, "bbea815ee2795b2f4230826c0c6b8814": 162, "srcrev_machine_pn": 162, "3604bc07c035939266d78d65084c6cd54ffc6d56": 162, "srcrev_meta_pn": 162, "8d42b14fe517ef036dc4e7b290f16d142f4f1d39": 162, "src_uri": 162, "bareclon": 162, "cach": [162, 166, 171, 297, 300, 338, 448, 462, 467, 468, 626, 643, 771, 915, 992, 1159, 1166, 1182], "destsuffix": 162, "scc": 162, "pv": 162, "srcpv": 162, "include_patch": 162, "patch": [162, 181, 182, 993, 1021, 1179], "compatible_machin": 162, "therebi": [163, 202, 698, 924, 1004, 1050, 1088], "simplifi": 163, "fine": [163, 172, 177, 206, 477, 478, 593, 705, 707, 813, 843, 950, 954, 1022, 1039, 1051, 1060, 1066, 1081, 1144], "grain": [163, 177, 474, 477, 843, 1051, 1066], "surround": [163, 691, 732, 744], "cut": [163, 191, 209, 222, 262, 276, 285, 306, 307, 411, 446, 786, 823, 863, 877, 923, 926, 929, 939], "linewis": 163, "wherev": [163, 390], "obs studio": 164, "video edit": 164, "screen record": 164, "These": [164, 172, 174, 175, 239, 245, 255, 258, 477, 490, 806, 833, 937, 1009], "offici": [164, 206, 207, 210, 211, 212, 217, 590, 1021, 1169], "jonathan": [164, 366, 367, 771, 1179], "himself": [164, 939], "paus": [164, 172, 991, 1004], "meanwhil": 164, "freez": [164, 1159, 1167], "photo": 164, "length": [164, 226, 229, 239, 245, 255, 258, 287, 294, 304, 326, 332, 344, 474, 546, 597, 609, 670, 804, 817, 829, 931, 933, 959, 969, 1001, 1136, 1144, 1148, 1155], "grab": [164, 930, 938], "neil": 165, "patel": 165, "insight": [165, 169, 477, 1019, 1158], "consol": [165, 222, 868, 871, 926, 1110, 1190], "crawlabl": 165, "dn": [165, 174, 177, 242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344, 1201], "domain": [165, 166, 176, 177, 182, 458, 472, 484, 992, 1130, 1133, 1199, 1201], "ipc": [165, 166, 167, 170, 382, 384, 784, 786, 929, 970, 998, 1199], "queue": [165, 166, 171, 180, 181, 188, 194, 214, 215, 217, 246, 274, 275, 277, 286, 298, 299, 320, 321, 324, 334, 514, 763, 785, 786, 827, 835, 853, 866, 870, 929, 970, 980, 984, 1194, 1198, 1199, 1200], "pydbu": 166, "openh": [166, 167, 188, 229], "traceback": [166, 192, 239, 245, 255, 258, 268, 288, 290, 304, 326, 1028, 1029, 1030, 1035, 1043, 1044, 1050, 1051, 1072, 1073, 1077, 1079, 1082, 1083, 1144, 1152, 1153, 1165], "recent": [166, 169, 172, 177, 192, 200, 239, 245, 255, 258, 268, 288, 290, 304, 326, 386, 833, 912, 1028, 1029, 1030, 1035, 1043, 1044, 1050, 1051, 1072, 1073, 1077, 1079, 1082, 1083, 1144, 1152, 1153, 1165], "oh_test": 166, "easysuit": 166, "oh_dbus_easysuit": 166, "easysuite_error": 166, "error_suit": 166, "dbusheatingerror": 166, "modulenotfounderror": [166, 283, 288, 1030], "research": [166, 169, 170, 283, 1137], "pygobject": 166, "714": [166, 245], "kb": [166, 172, 1166], "venv": [166, 203, 229, 239, 245, 255, 256, 258, 270, 300, 338, 372, 373, 915, 1085, 1118, 1131, 1146, 1158, 1164, 1166, 1167], "standalon": [166, 450, 703, 1004, 1171], "ss_9wmug": 166, "__env_pip__": 166, "ignor": [166, 187, 199, 258, 304, 376, 412, 432, 462, 484, 492, 624, 627, 690, 705, 718, 740, 791, 875, 938, 963, 1005, 1028, 1159], "9lrqmi4l": 166, "overlai": [166, 833, 937, 938], "locat": [166, 167, 171, 176, 181, 202, 239, 245, 255, 258, 262, 312, 328, 365, 383, 435, 448, 456, 462, 490, 512, 605, 625, 701, 749, 808, 833, 937, 938, 939, 959, 977, 1001, 1008, 1028, 1135, 1152, 1186], "pycairo": 166, "cwd": [166, 338, 547, 784, 859, 870, 896, 915, 917, 921, 1009], "821": [166, 245], "py2": 166, "344": [166, 245, 258, 290, 304, 322, 332, 338, 344], "517": [166, 245, 290, 338], "tmpabab356k_in_process": 166, "build_wheel": 166, "tmpt1yod7mc": 166, "o4u45fjc": 166, "pycairo_33865a19ad6b4a719885f07926efe16d": 166, "bdist_wheel": [166, 1086], "build_pi": 166, "x86_64": [166, 173, 175, 222, 229, 338, 362, 385, 411, 549, 610, 806, 811, 1010, 1019], "cairo": 166, "pyi": 166, "build_ext": 166, "pkg": 166, "perhap": [166, 262, 802, 1139], "pkg_config_path": 166, "gobject": 166, "introspect": [166, 991], "cp39": 166, "linux_x86_64": 166, "lib64": [166, 198, 203, 229, 239, 245, 255, 258, 262, 338, 468, 478, 480, 485, 1007, 1010, 1024, 1031, 1152, 1153, 1159, 1173], "_vendor": 166, "pep517": 166, "in_process": 166, "_in_process": 166, "tmpf2wjv23h": 166, "4rtfumdz": 166, "pygobject_beef4432e2454eb0b7facc57fadf42b8": 166, "pygtkcompat": 166, "generictreemodel": 166, "_signalhelp": 166, "_propertyhelp": 166, "_ossighelp": 166, "_option": 166, "_gtktemplat": 166, "_error": [166, 521], "_constant": 166, "keysym": 166, "pango": 166, "gio": 166, "gdkpixbuf": 166, "gdk": 166, "glib": 166, "gimarshallingtest": 166, "tmp56g_ixbz": 166, "bvay4iv4": 166, "pygobject_6777f13e15934fb2b13139399b143557": 166, "todo": [166, 211, 246, 274, 275, 378, 379, 548, 690, 771, 787], "summari": [166, 207, 497, 600, 749, 1164], "c1": [166, 180, 495, 609, 694], "misc": [166, 167, 189, 190, 349, 568, 802, 846, 1183], "w3school": 166, "howto": [166, 167, 804], "howto_css_image_transpar": 166, "asp": 166, "titelseit": 166, "mitt": 166, "howto_js_read_mor": 166, "subdir": [166, 348, 784, 1028], "gegen": [166, 1179], "clutter": [166, 199], "404": [166, 176, 245, 252, 290, 304, 322, 338, 348], "prio": [166, 208, 993, 994, 1000], "beagleboard": [166, 171, 182], "repair": [166, 182, 242], "nand": [166, 182], "40w": [166, 182], "suck": [166, 167, 182], "disk": [166, 169, 170, 173, 177, 182, 461, 869, 870, 890, 919, 954, 955, 1024, 1081, 1179], "contact": [166, 1186], "ssl": [166, 177, 338, 1159], "certif": [166, 177, 180, 227, 1159], "070": [166, 690], "fortgeschritten": [166, 384, 1181], "700": [166, 245, 643, 751, 946], "lf": [166, 229, 528, 1081], "descr": [166, 250, 326, 344], "050": [166, 690, 1003, 1004], "080": [166, 670, 690], "020": [166, 245, 286, 670, 690, 999, 1000, 1003, 1004], "060": [166, 167, 206, 373, 690], "_hidden": 166, "010": [166, 332, 690, 892, 996, 997, 999, 1000, 1003, 1004], "190": [166, 203, 220, 229, 242, 245, 250, 252, 255, 258, 262, 265, 268, 271, 280, 283, 290, 300, 304, 310, 322, 326, 338, 344, 348], "propos": [166, 458, 536], "030": [166, 690, 700, 750, 999, 1000, 1003, 1004], "040": [166, 332, 690, 999, 1000, 1003, 1004], "central": [167, 199, 232, 321, 324, 386, 430, 490, 784, 1024, 1069, 1081, 1187], "rstjinja": 167, "105": [167, 189, 203, 213, 218, 220, 226, 239, 242, 245, 250, 252, 258, 262, 265, 268, 271, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 360, 365, 370, 995], "110": [167, 174, 189, 203, 213, 220, 226, 235, 239, 242, 245, 250, 252, 258, 262, 265, 268, 280, 283, 287, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 360, 530, 531, 690, 892, 999, 1000], "cxx_class_templ": [167, 590, 786], "cxx_dynamic_memori": [167, 590, 786], "cxx_global_initi": [167, 590, 786], "cxx_inheritance_virtu": [167, 590, 786], "cxx_ownership_raii": [167, 590, 786], "cxx_stl_container_intro": [167, 590, 786], "cxx_templates_vs_interfac": [167, 590, 786], "maj": [167, 790], "min": [167, 283, 768, 790, 1136], "cdev": [167, 789, 790, 792, 796, 797, 802], "fop": [167, 790, 797], "devtmpf": [167, 789, 790, 835], "dynam": [167, 197, 205, 206, 239, 245, 255, 256, 258, 301, 383, 447, 451, 460, 464, 469, 470, 480, 511, 548, 579, 588, 590, 597, 662, 664, 667, 668, 687, 692, 701, 730, 754, 770, 771, 772, 783, 785, 786, 790, 795, 800, 803, 805, 810, 814, 824, 828, 830, 835, 837, 842, 848, 851, 854, 859, 870, 929, 978, 980, 989, 1007, 1008, 1047, 1061, 1082, 1131, 1185, 1189], "sysprog_ev": 167, "sysprog_ipc": 167, "sysprog_sign": 167, "unittest_gtest_bas": [167, 786, 1169], "unittest_gtest_fixtur": [167, 786, 1169], "brows": [167, 169, 185, 872, 938], "blender": 167, "corda": 167, "figclass": 167, "homebrain": [167, 288, 300, 915, 916], "literalinclud": 167, "within": [167, 172, 248, 258, 304, 383, 539, 540, 544, 549, 594, 665, 728, 797, 930, 1042, 1059, 1071, 1155], "045": [167, 286, 332], "tex": 167, "055": 167, "056": 167, "910": [167, 245, 915], "virtmem": 167, "fart": 167, "ungern": 167, "lost": [167, 177, 242, 248, 459, 568, 690, 749, 946, 980, 983, 1000, 1042, 1164, 1165, 1171], "he": [167, 171, 185, 193, 202, 206, 209, 222, 227, 230, 232, 253, 256, 279, 298, 299, 303, 320, 325, 703, 705, 740, 743, 948, 981, 994, 1005, 1047, 1075, 1131, 1157], "friend": [169, 170, 217, 238, 274, 275, 277, 286, 297, 334, 335, 468, 531, 608, 763, 764, 785, 786, 804, 825, 930, 1173], "alia": [169, 174, 222, 248, 444, 447, 451, 460, 464, 469, 470, 478, 692, 730, 783, 785, 786, 893, 894, 1021], "rm": [169, 171, 175, 176, 210, 212, 365, 370, 940, 950, 1166], "rf": [169, 171, 893, 903, 1166], "variat": [169, 752, 838, 875], "thereof": [169, 286, 294, 495, 612, 1047], "happili": [169, 170, 248, 458, 607], "stage3": 169, "decad": [169, 177, 194, 833, 937, 939, 950, 1029, 1187], "busybox": [169, 170], "initramf": [169, 858], "resid": [169, 172], "flash": [169, 172, 177, 468, 871, 930, 991], "eras": [169, 527, 585, 646, 751, 780, 890], "hit": [169, 171, 172, 191, 194, 232, 784, 893, 922, 925, 1159], "sole": 169, "liter": [169, 192, 208, 213, 220, 230, 238, 239, 243, 250, 255, 258, 262, 265, 274, 275, 283, 290, 304, 322, 326, 332, 334, 338, 344, 357, 361, 365, 392, 400, 407, 456, 511, 526, 546, 690, 703, 833, 1005, 1062, 1075, 1079], "told": [169, 172, 478, 517, 930], "reboot": [169, 171, 188, 833, 894, 937, 938, 939], "fatal": [169, 197, 476, 486, 833, 1172], "saw": [169, 172, 202, 231, 376, 413, 594, 963, 965], "115200": 169, "8n1": 169, "remaind": [169, 170, 173, 175, 198, 202, 286, 811, 833, 930, 938, 1009], "recov": [169, 189], "fauxpa": 169, "explan": [169, 172, 198, 202, 209, 232, 263, 323, 365, 466, 487, 568, 768, 833, 864, 930, 938, 965, 995, 1000, 1134, 1137, 1166], "annot": [169, 230, 279, 319, 467, 591, 1131], "beagl": 169, "omap": 169, "rom": 169, "stage": [169, 185, 231, 1138], "processor": [169, 170, 229, 230, 243, 406, 450, 643, 754, 833, 838, 975, 992, 1007], "sram": 169, "dram": 169, "latter": [169, 172, 991, 1031, 1071, 1138], "abil": [169, 690], "press": [169, 813, 850, 893, 930], "wrote": [169, 172, 373, 1184], "ones": [169, 185, 192, 194, 258, 296, 304, 394, 462, 938, 939, 1064, 1148], "revis": [169, 173, 176, 273, 591, 689, 1184], "slightli": [169, 181, 202, 231, 248, 249, 568, 1059], "season": 169, "c4": [169, 180], "valuabl": [169, 466, 860, 861, 1023, 1025, 1031], "c3": [169, 173, 180], "angstrom": 169, "mlo": 169, "ift": 169, "fdisk": [169, 1179], "obvoiusli": 169, "fat32": [169, 833], "fat16": 169, "partit": [169, 170, 171, 258, 304, 833], "mount": [169, 171, 286, 371, 789, 833, 864, 973, 1000, 1001, 1010, 1019, 1021], "sector": [169, 242, 1088], "intend": [169, 175, 176, 177, 187, 222, 239, 245, 255, 258, 477, 806, 938, 965, 966, 1086], "slot": [169, 969, 1050], "partli": [169, 171, 454], "meaning": [169, 177, 815], "scr": 169, "omap3": 169, "mmc1": 169, "arch": [169, 173, 813, 833, 834, 937], "mach": [169, 231, 236, 252], "omap2": 169, "omap3beagl": 169, "Near": 169, "offset": [169, 784, 804, 962, 1024], "128k": 169, "0x80000": 169, "byte": [169, 172, 185, 187, 189, 239, 245, 255, 258, 265, 268, 283, 304, 310, 326, 332, 338, 344, 350, 365, 388, 396, 406, 407, 438, 441, 450, 453, 459, 463, 497, 592, 597, 600, 605, 612, 625, 749, 784, 847, 864, 870, 893, 924, 931, 937, 954, 955, 956, 959, 961, 963, 964, 965, 966, 989, 992, 997, 1000, 1004, 1056, 1062, 1067, 1081, 1144], "reli": [169, 202, 739, 843, 1062], "ecc": [169, 173], "nandecc": 169, "hw": 169, "80000": 169, "0x0": [169, 937], "0x60000": 169, "unlik": [169, 222, 273, 754, 761, 930, 1070, 1149, 1189], "intermedi": [169, 190, 495, 1007, 1056], "nevertheless": [169, 170, 177, 289, 292, 833], "0x20000": 169, "fatload": 169, "80200000": 169, "20392": 169, "131072": [169, 791], "40000": 169, "0x40000": 169, "60000": 169, "incarn": [169, 177, 432, 738], "choic": [169, 170, 171, 194, 230, 243, 262, 462, 472, 482, 547, 595, 664, 749, 937, 991, 1019, 1147], "finger": [169, 180, 462, 872, 930], "sw": [169, 545], "0x1e0000": 169, "1e0000": 169, "0x240000": 169, "275928": 169, "1966080": 169, "prompt": [169, 177, 180, 190, 222, 233, 261, 270, 865, 893, 895, 946, 1056, 1057, 1093, 1097, 1110, 1116, 1166], "280000": 169, "400000": [169, 938, 1136], "month": [170, 232, 242, 290, 294, 407], "met": [170, 454, 939], "microcontrol": [170, 423, 930, 938, 991], "clue": 170, "minim": [170, 172, 181, 190, 456, 462, 615, 915, 1019, 1030], "vxwork": 170, "ce": [170, 180, 1021], "quit": [170, 172, 175, 297, 433, 448, 450, 668, 683, 834, 893, 894, 925, 930, 938, 981, 1004, 1019], "blob": [170, 286, 297, 385, 568, 833], "presenc": [170, 172, 484, 1189], "probabl": [170, 176, 202, 262, 292, 357, 483, 488, 593, 698, 833, 845, 893, 939, 991, 1067, 1081, 1144, 1147], "sooner": [170, 185, 458, 836], "chose": [170, 181, 248, 684, 917, 950, 1019], "opinion": [170, 181, 202, 256, 784, 872, 1039], "unless": [170, 252, 258, 262, 304, 662, 695, 859, 915, 976, 1062, 1081, 1152], "hire": 170, "cheap": [170, 172, 475, 605, 698, 703, 739, 740, 838, 1184], "misl": 170, "posix": [170, 172, 195, 756, 763, 765, 785, 786, 870, 929, 959, 970, 976, 980, 982, 990, 998, 1081, 1198, 1199], "tell": [170, 171, 172, 175, 176, 177, 185, 199, 246, 455, 626, 859, 939, 1007], "pitfal": [170, 254, 274, 275, 277, 334, 335, 365, 626, 705, 730, 731, 732, 750, 785, 786, 930, 1184], "seen": [170, 172, 177, 190, 203, 231, 398, 417, 455, 490, 500, 804, 829, 858, 978, 1138, 1142, 1176], "didn": [170, 171, 172, 181, 202, 206, 222, 232, 256, 325, 833, 912, 964, 1081, 1083, 1131, 1135], "rtoss": 170, "commonli": [170, 239, 262, 289, 292, 504, 765, 784, 819, 853, 895, 959, 1007, 1156], "tear": [170, 275, 497, 546, 547, 548, 549, 610, 749, 802, 1007, 1171], "notif": [170, 175, 194, 762, 934, 1005], "dread": 170, "segment": [170, 172, 430, 539, 605, 728, 748, 991, 1001], "fault": [170, 172, 378, 379, 430, 605, 748, 991], "arriv": [170, 825, 850, 989, 1004], "handler": [170, 239, 245, 255, 258, 297, 304, 317, 466, 813, 815, 843, 975, 991, 1003, 1006], "pai": [170, 294, 461, 484, 864], "attent": [170, 226, 242, 250, 396, 417, 419, 448, 467, 477, 627, 632, 701, 732, 735, 825, 993, 1028, 1154, 1176], "safe": [170, 239, 245, 246, 255, 258, 268, 458, 698, 740, 742, 750, 764, 946, 951, 975, 978, 983, 1006], "pthread_": 170, "trick": [170, 227, 237, 240, 243, 267, 279, 303, 309, 433, 1131], "asynchron": [170, 239, 245, 255, 258, 325, 351, 954, 971, 974, 1004, 1005], "sigwait": [170, 1004], "sigwaitinfo": 170, "sigtimedwait": 170, "caught": [170, 239, 245, 255, 258, 465, 615], "synchron": [170, 242, 248, 258, 265, 268, 283, 290, 298, 299, 300, 304, 320, 321, 324, 326, 332, 338, 344, 757, 763, 785, 786, 924, 929, 954, 970, 976, 977, 984, 990, 991, 1001, 1003, 1006, 1189], "signalfd": [170, 959, 997, 1198, 1199], "Its": [170, 172, 175, 546, 922, 992], "emb": 170, "among": [170, 194, 202, 239, 245, 255, 258, 455, 749, 878, 937, 959, 965, 989, 1005, 1055, 1139, 1140, 1164, 1187], "epol": [170, 973, 997, 1001, 1199, 1201], "err": [170, 209, 229, 294, 335, 549, 646, 690, 692, 730, 738, 750, 783, 785, 786, 797, 827, 829, 864, 931, 933, 937, 1050, 1153], "naiv": [170, 190, 245, 248, 312, 328, 450, 483, 492, 584, 586, 600, 667, 748, 782, 841, 975, 995, 1006, 1036, 1037, 1138, 1143, 1176, 1186], "intra": 170, "oss": 170, "synchronis": [170, 975, 1200], "pthread_mutex_init": [170, 762, 978], "critical_sect": 170, "closest": [170, 698], "pendant": [170, 585, 792], "expir": [170, 843, 957, 989, 991, 1005], "sometim": [170, 185, 262, 422, 438, 462, 599, 689, 864, 871, 964, 976, 1021, 1027, 1058, 1164], "setitim": 170, "timer_cr": [170, 991], "drawback": [170, 432, 449, 454, 459, 503, 626, 946], "unfortun": [170, 171, 194, 231, 517, 930, 1149], "straightforward": [170, 249, 712, 750, 801, 1033, 1050, 1068, 1136], "nanosleep": [170, 764, 991], "timerfd_cr": [170, 957, 959, 1198, 1199], "conjunct": 170, "emul": [170, 275, 277, 295, 450, 459, 465], "stupid": [170, 172, 229, 245, 248, 250, 407, 432, 438, 456, 462, 472, 698, 753, 850, 912, 954, 1035, 1081], "screw": [170, 652], "otherwis": [170, 171, 256, 258, 262, 299, 304, 332, 348, 356, 411, 422, 448, 458, 608, 646, 703, 732, 739, 754, 760, 804, 817, 825, 833, 841, 860, 861, 946, 975, 980, 986, 1001, 1030, 1059, 1062, 1079, 1081, 1100, 1111, 1153, 1176], "millisecond": [170, 239, 245, 255, 258, 751, 765, 841, 938], "etern": 170, "nowadai": [170, 172, 174, 175, 231, 298, 299, 320, 388, 406, 808, 843, 868, 871, 959, 1005, 1144], "moder": [170, 177, 237], "tri": [170, 171, 172, 181, 185, 191, 202, 250, 348, 376, 547, 677, 760, 784, 930, 939, 992, 1184], "achiev": [170, 229, 262, 668, 989, 1042], "albeit": [170, 512, 738, 986, 1067, 1184], "lose": [170, 221, 232, 252, 255, 258, 268, 332, 338, 344, 1066], "wealth": 170, "socket": [170, 188, 209, 279, 784, 786, 866, 869, 929, 954, 958, 959, 970, 1001, 1005, 1159, 1198, 1199, 1201], "uart": [170, 454, 866], "previous": [170, 239, 245, 255, 258, 262, 1005, 1184], "regardless": [170, 433, 938], "surpris": [170, 172, 286, 456, 661, 1026, 1050], "alon": [170, 171, 172, 185, 295, 297, 462, 466, 707, 1071, 1138, 1189], "advantag": [170, 454, 605], "regularli": [170, 459], "buffer": [170, 258, 283, 298, 299, 304, 320, 324, 394, 523, 528, 703, 849, 877, 951, 954, 955, 956, 957, 965, 1004, 1081], "ttys0": 170, "stream": [170, 175, 177, 217, 243, 258, 283, 591, 608, 877, 931, 989, 1035, 1156, 1201], "eventfd": [170, 959, 997, 1198, 1199], "complic": [170, 171, 180, 209, 252, 262, 404, 423, 462, 487, 618, 701, 707, 727, 792, 829, 931, 939, 1004, 1007, 1035, 1147, 1186, 1189], "unregist": [170, 499], "callback": [170, 206, 239, 245, 255, 258, 374, 718, 843, 852, 1147], "comfort": [170, 222, 368, 742, 937, 1156], "excit": 170, "hundr": [170, 172, 177, 280, 283, 959], "panel": 170, "deal": [170, 246, 456, 602, 833, 939, 1060, 1133, 1144, 1184, 1189], "touch": [170, 176, 202, 239, 245, 255, 258, 474, 878, 887, 892, 937, 960, 966, 1189], "stai": [170, 194, 206, 237, 1004], "harder": [170, 754, 940], "buggi": [170, 600, 728, 740, 991], "examin": [170, 172, 458, 608, 749, 776, 893, 986], "debugg": [170, 239, 245, 255, 256, 258, 495, 1182, 1197], "gdb": [170, 222, 383, 1182], "spidev": 170, "bluntli": 170, "whether": [170, 190, 258, 262, 283, 294, 304, 397, 461, 552, 597, 630, 784, 829, 938, 1110, 1116, 1159], "deadlin": 170, "howev": [170, 180, 199, 262, 491, 806, 808, 930, 973, 975], "sched_setschedul": [170, 187, 994], "pthread_attr_setschedparam": [170, 994], "runnabl": [170, 831, 992, 993, 994], "prioriti": [170, 187, 258, 825, 831, 833, 835, 870, 992, 993, 1001, 1200], "anymor": [170, 176, 181, 194, 231, 248, 474, 478, 607, 701, 703, 712, 736, 749, 750, 754, 868, 937, 980, 991, 993, 1024, 1062, 1064, 1153], "potenti": [170, 475, 605, 712, 760, 950, 1030, 1042, 1087], "harm": [170, 426, 454, 750, 752, 1030], "polici": [170, 175, 187, 338, 474, 490, 664, 668, 811, 992, 993, 1200], "sched_fifo": [170, 993, 994, 1179], "sched_rr": [170, 172, 994, 1179], "robin": [170, 237, 994, 1200], "manner": [170, 432, 833, 937], "troubl": 170, "trigger": [170, 376, 815, 819, 937, 1050, 1140], "certain": [170, 202, 209, 453, 458, 516, 539, 540, 718, 740, 829, 864, 877, 980, 1007, 1055], "circumst": [170, 992], "deadlock": [170, 568, 760, 761, 825, 838, 978, 992, 993], "inspect": [170, 172, 239, 245, 255, 258, 276, 285, 296, 306, 321, 786, 863, 929, 950], "deploy": [150, 170, 202, 206, 227, 313, 329, 479, 485, 786, 808, 1131], "uclibc": 170, "investig": 170, "spend": [170, 177, 191, 202, 206, 227, 230, 253, 279, 303, 325, 461, 1131], "browser": [171, 177, 189, 200, 233], "significantli": [171, 1004], "decreas": [171, 172, 450, 893, 995], "week": [171, 186, 452], "forth": [171, 463, 864, 937, 950, 1062], "spare": 171, "volum": 171, "undertak": 171, "indirectli": [171, 749], "pocket": 171, "purchas": [171, 262], "corsair": 171, "120": [171, 189, 203, 213, 220, 235, 239, 242, 245, 250, 252, 255, 258, 262, 265, 268, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 609, 690, 999, 1000], "overhaul": 171, "reserv": [171, 177, 194, 206, 242, 258, 283, 304, 405, 627, 797, 829, 889, 994, 1088], "livecd": 171, "ssd": [171, 461, 955], "vanish": 171, "gone": [171, 192, 242, 718, 750, 813, 836, 894, 983], "nowher": [171, 310, 560], "depart": 171, "unusu": 171, "cope": 171, "bet": 171, "themselv": [171, 432, 472, 512], "aggress": 171, "harddisk": 171, "treatment": [171, 262, 893, 1024], "proud": 171, "120g": 171, "fresher": 171, "plenti": [171, 173, 466], "4g": [171, 172], "shouldn": [171, 690, 833, 1079], "hibern": 171, "fstab": [171, 338], "room": [171, 177, 206, 321, 492, 643, 827, 939, 1144, 1187], "swapon": 171, "sda1": 171, "swapoff": 171, "overal": 171, "mitig": [171, 827], "perfect": [171, 177, 185, 231, 279, 334, 386, 643, 699, 730, 753, 785, 786, 1033, 1086, 1131, 1162, 1184], "portag": [171, 833, 922], "openoffic": 171, "tmpdir": [171, 296, 325, 474, 549, 784, 1028, 1126, 1128, 1164], "500m": 171, "2g": 171, "6g": 171, "throwawai": 171, "1tb": 171, "sdc1": [171, 864], "mnt": [171, 864, 872, 1001], "emerg": 171, "umount": 171, "runnung": 171, "offend": [171, 173, 175, 185, 517, 991], "candid": [171, 190, 231, 462, 707, 727, 740, 1030, 1102], "destin": [171, 413, 480, 585, 626, 701, 949, 956], "app": [171, 175, 991, 1143], "admin": [171, 177, 365, 944, 948], "cron": [171, 876, 1060], "rc": [171, 338, 930], "grep": [171, 175, 181, 210, 212, 222, 276, 285, 306, 307, 786, 852, 857, 863, 868, 870, 875, 877, 889, 920, 923, 926, 929, 937, 939, 940, 976, 986, 991, 1147, 1188, 1190, 1195], "tune": [171, 172, 181, 462, 860, 861, 883, 885, 887, 894, 942, 1059], "exce": [171, 206, 794, 991, 1001], "20m": [171, 930, 989], "compresscmd": 171, "bzip2": [171, 181, 210, 212, 858, 859, 1021], "compressopt": 171, "compressext": 171, "missingok": 171, "sharedscript": 171, "postrot": 171, "reload": [171, 210], "endscript": 171, "adjac": [171, 372, 749, 804], "sda": [171, 937, 939], "cfq": 171, "noop": [171, 932], "believ": [171, 177, 930, 939, 967], "r5": 171, "menuconfig": [171, 181, 833, 937, 1021], "xorg": [171, 175], "emerge_log_dir": 171, "unionf": 171, "fuse": [171, 173, 338, 940, 950], "persist": [171, 187, 402, 406, 414, 484, 894, 938], "held": [172, 314, 317, 383, 771, 791, 825, 838], "compani": [172, 175, 176, 177, 212, 222, 262, 288, 299, 314, 472, 490, 491, 872, 1086, 1133], "z\u00fcrich": [172, 382], "hardcor": 172, "attitud": [172, 177, 296], "began": 172, "dive": [172, 289, 292, 1145], "inevit": [172, 383, 742], "came": [172, 239, 243, 245, 255, 258, 890, 896, 937, 1062, 1114, 1184], "mb": [172, 871], "heap": [172, 445, 497, 597, 600, 652, 732, 749, 794, 819], "128": [172, 175, 189, 203, 213, 220, 226, 229, 235, 239, 242, 245, 248, 250, 252, 255, 258, 262, 265, 268, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 461, 605, 937, 965, 1022, 1144], "dead": [172, 181, 462], "attempt": [172, 177, 200, 258, 384, 698, 700, 771, 1159], "reject": [172, 185], "proof": [172, 194, 450, 461, 465, 495, 579], "evid": 172, "fortun": [172, 177, 462, 474, 703, 1136], "overnight": [172, 237], "night": [172, 206], "instinct": 172, "defens": [172, 404, 405], "grow": [172, 626, 870, 1023], "growth": [172, 242, 1088], "handi": [172, 1195], "tricki": 172, "alloca": 172, "essenti": [172, 199, 248, 295, 297, 680], "stdio": [172, 231, 243, 387, 388, 390, 394, 396, 398, 429, 455, 475, 601, 607, 870, 890, 937, 955, 956, 957, 959, 960, 963, 964, 965, 966, 978, 991, 997, 1000, 1004, 1005, 1007, 1010, 1019, 1023, 1025, 1081], "stdlib": [172, 445, 459, 937, 955, 956, 957, 988, 997, 1004], "size_t": [172, 445, 458, 493, 573, 582, 585, 628, 633, 639, 643, 649, 670, 684, 696, 701, 712, 713, 714, 715, 716, 780, 781, 782, 784, 792, 819, 951, 959, 969, 1001, 1004], "stack_growth": 172, "argc": [172, 439, 497, 536, 937, 963, 964, 965, 966, 971, 974, 988, 1004, 1025, 1171, 1176], "mem": [172, 188, 582, 797], "fprintf": [172, 420, 433, 951, 991, 1025], "stderr": [172, 221, 230, 239, 245, 255, 258, 268, 276, 285, 286, 306, 307, 358, 365, 420, 433, 477, 786, 863, 874, 875, 929, 951, 959, 991, 1025, 1060, 1073, 1081, 1190], "atoi": [172, 967], "printf": [172, 181, 231, 243, 387, 388, 390, 396, 398, 402, 428, 429, 432, 433, 455, 475, 601, 607, 870, 890, 953, 957, 997, 1004, 1005, 1007, 1019, 1023, 1025, 1070, 1076], "getpid": [172, 1004], "memset": [172, 956, 991, 1000, 1004], "24299": 172, "vsz": 172, "rss": 172, "3944": [172, 245], "986": [172, 242, 245, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344, 924], "188": [172, 203, 220, 229, 242, 245, 250, 252, 255, 258, 262, 265, 280, 283, 290, 300, 304, 310, 322, 326, 338, 344, 348], "320": [172, 245, 255, 258, 283, 290, 304, 310, 322, 338, 344, 348], "exact": [172, 222, 262, 362, 426, 737, 754, 806, 808, 1159], "glibc": [172, 813, 1019, 1021, 1022, 1179], "presum": 172, "assum": [172, 258, 262, 304, 456, 603, 764, 811, 893, 937, 939, 950, 1022, 1091, 1166], "writabl": [172, 456, 878, 893, 965], "eater": [172, 995], "1k": 172, "furthermor": 172, "188k": 172, "anyth": [172, 176, 177, 202, 229, 245, 249, 272, 294, 295, 372, 472, 483, 487, 504, 539, 614, 683, 703, 780, 781, 782, 930, 942, 950, 954, 960, 989, 1023, 1028, 1029, 1030, 1073, 1081, 1136, 1153, 1157], "proce": [172, 180, 259, 292, 371, 549], "million": [172, 208, 490, 668, 833, 1033], "24908": 172, "4800": [172, 245], "1200": [172, 245, 643], "1044": [172, 245], "1376": [172, 245], "grown": [172, 175], "reflect": [172, 833, 992, 1022, 1023, 1050], "greedi": 172, "24960": 172, "8mb": 172, "barrier": [172, 448, 749, 764, 817], "ulimit": [172, 870], "8192": [172, 245, 433, 870], "8000000": 172, "25018": 172, "11632": [172, 245], "2908": [172, 245], "7876": [172, 245], "8236": [172, 245], "demand": [172, 175, 192, 292, 456, 833, 884, 886, 1035, 1070], "magic": [172, 174, 338, 439, 474, 718, 792, 833, 1035, 1164], "bother": [172, 950, 954], "pthread_attr_setstacks": 172, "2mb": 172, "rlimit_stack": 172, "pthread_creat": [172, 976, 991], "nthread": 172, "act": [172, 229, 557, 627, 939, 950, 953, 1005, 1041], "shut": [172, 801, 833], "sit": [172, 248, 371, 502, 877, 937, 938, 948, 950, 954, 1004, 1147], "stack_limit": 172, "thread_func": 172, "arg": [172, 189, 203, 229, 230, 239, 243, 245, 255, 256, 258, 262, 268, 283, 304, 322, 475, 792, 976, 1028, 1032, 1053, 1060, 1083, 1173, 1179], "pthread_attr_t": [172, 976, 994], "attr": [172, 187, 976, 978, 980, 994, 1000, 1001], "pthread_attr_init": 172, "ld": [172, 338, 481, 485, 576, 594, 667, 811, 833, 860, 861, 878, 891, 915, 997, 1007, 1008, 1019, 1024], "strerror": [172, 245, 951, 960, 991, 1004], "p_attr": 172, "pthread_t": [172, 976, 991, 994], "rv": [172, 218, 280, 338, 344], "31524": 172, "825840": 172, "206460": 172, "819936": 172, "1404": [172, 245], "800mb": 172, "writeabl": [172, 889, 912], "worth": [172, 833, 939, 1059, 1130, 1184, 1199], "eaten": 172, "field": [172, 175, 177, 189, 194, 200, 236, 243, 250, 258, 268, 271, 288, 290, 294, 304, 338, 357, 376, 389, 772, 774, 868, 873, 892, 926, 1077, 1088, 1109, 1138, 1139], "alleg": 172, "wast": [172, 180, 181, 458, 745, 762, 1144], "moment": [172, 206, 458, 490, 492, 686, 735], "771": [172, 245, 332], "766604": 172, "aha": [172, 192, 203, 350, 796, 813, 938, 1144, 1171], "hasn": [172, 175, 176, 185, 827, 850, 1061], "effect": [172, 176, 197, 366, 367, 402, 452, 462, 514, 661, 788, 817, 889, 894, 937, 949, 950, 992, 1006, 1031, 1043, 1064, 1110, 1138, 1158, 1166], "4096": [172, 189, 245, 784, 860, 861, 930, 937, 938, 939, 950, 973, 1000], "1026": [172, 245], "invalid": [172, 213, 220, 250, 255, 256, 258, 262, 265, 283, 290, 297, 304, 322, 326, 332, 338, 344, 361, 376, 459, 517, 528, 531, 585, 600, 683, 684, 685, 698, 701, 707, 748, 750, 764, 791, 980, 1083], "insist": [172, 202, 607, 1173], "pthread_stack_min": 172, "16384": [172, 177, 245, 937, 938, 939], "1125": 172, "7840": [172, 245], "1960": [172, 245], "1936": [172, 245], "risk": [172, 490, 930, 948, 993, 1058], "512": [172, 245, 290, 322, 338, 348, 463, 870], "513": [172, 245, 290, 338, 749], "2212": [172, 245], "4210920": 172, "1052730": 172, "4205016": 172, "4576": [172, 245], "misunderstand": [172, 758], "overcommit": 172, "kept": [172, 177, 202, 208, 433, 448, 870, 931, 1007, 1035], "plai": [172, 180, 222, 450, 468, 833, 930, 1048, 1051, 1138], "stutter": 172, "4353": 172, "red": [172, 173, 218, 220, 226, 234, 246, 249, 262, 294, 358, 646, 930, 1057, 1147], "chili": 172, "pepper": 172, "overli": [172, 876, 1034], "adob": 172, "riddanc": 172, "8462": [172, 245], "3284640": 172, "821160": 172, "3278736": 172, "3064580": 172, "lie": [172, 740], "constraint": [172, 180, 707, 710, 712, 939], "800": [172, 213, 245, 643, 1091], "4000000": 172, "11338": [172, 245], "900": [172, 245, 643], "12156": [172, 245], "shrink": [172, 626], "inadvert": 172, "3mb": 172, "nois": 172, "henc": [172, 177, 549, 603, 647, 955, 959, 1007], "14386": [172, 245], "child_stack": 172, "0x7f5813f22ff0": 172, "clone_vm": 172, "clone_f": 172, "clone_fil": 172, "clone_sigha": 172, "14413": 172, "mmap": [172, 999, 1001, 1198], "8392704": 172, "prot_read": [172, 1000], "prot_writ": [172, 1000], "map_priv": [172, 1000], "map_anonym": 172, "map_stack": 172, "0x7fd14f9af000": 172, "mprotect": 172, "0x7fd14f1ae000": 172, "prot_non": 172, "placehold": [172, 518, 550, 705, 754, 939], "proc": [172, 242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344, 796, 813, 815, 817, 833, 834, 959, 976, 1000, 1004, 1197], "7fd14f1af000": 172, "7fd14f9af000": 172, "00000000": 172, "7fd14f9b0000": 172, "topmost": [172, 1164], "pseudo": [172, 190], "redund": [172, 433, 462], "smap": 172, "7fd14f1ae000": 172, "pss": 172, "shared_clean": 172, "shared_dirti": 172, "private_clean": 172, "private_dirti": 172, "referenc": [172, 190, 213, 321, 324, 489, 607, 749, 750, 751, 967, 1173], "anonym": [172, 492, 806, 1000], "anonhugepag": 172, "kernelpages": 172, "mmupages": 172, "miss": [172, 191, 198, 200, 202, 218, 245, 250, 255, 262, 321, 324, 365, 422, 467, 468, 476, 478, 486, 548, 579, 600, 691, 727, 808, 811, 957, 991, 1009, 1032], "shallow": [172, 242, 254, 344, 693], "extent": [172, 202, 209, 222, 362, 453, 458, 833, 1007, 1055], "8k": [172, 877], "swamp": 172, "panic": [172, 185, 841, 893], "meaningless": 172, "global": [172, 173, 191, 197, 202, 206, 211, 215, 218, 231, 239, 242, 245, 248, 249, 255, 258, 261, 272, 275, 283, 295, 298, 300, 304, 309, 313, 320, 324, 325, 329, 330, 331, 336, 337, 342, 343, 344, 346, 347, 360, 365, 411, 428, 434, 440, 444, 447, 451, 455, 458, 460, 464, 465, 469, 470, 478, 479, 484, 497, 503, 512, 546, 547, 548, 549, 590, 597, 610, 692, 730, 733, 748, 749, 759, 783, 785, 786, 802, 939, 975, 978, 982, 983, 985, 1007, 1028, 1031, 1039, 1041, 1074, 1088, 1131, 1159, 1167, 1171], "dig": [172, 174], "thorough": [172, 181, 1054, 1138, 1157, 1199], "counter": [172, 255, 390, 396, 397, 406, 462, 467, 468, 592, 701, 1000], "delai": [172, 239, 245, 255, 258, 938], "substanti": 172, "overcom": [172, 321, 365, 452], "beforehand": 172, "mlock": [172, 1198], "mlockal": [172, 1198], "contradictori": 172, "lengthi": 172, "felt": 172, "lucki": [172, 600], "agre": [172, 202, 206, 371, 500, 992, 1137], "glad": 172, "outdat": [173, 181, 833, 1159], "halfwai": 173, "procedur": [173, 181, 398, 742, 930, 1088], "thunderbolt": 173, "hdmi": 173, "unplug": 173, "oop": [173, 1183], "feb": [173, 218, 220, 222, 362, 407, 915, 973, 1019, 1030], "derefer": [173, 605], "0000000000000080": 173, "supervisor": 173, "error_cod": 173, "0x0000": 173, "pgd": 173, "p4d": 173, "0000": [173, 258, 304, 939], "smp": [173, 222, 229, 362], "pti": 173, "281": [173, 242, 245, 250, 252, 255, 258, 262, 265, 283, 290, 304, 310, 322, 332, 338, 344], "comm": 173, "kworker": 173, "taint": 173, "fc31": 173, "asustek": 173, "zenbook": 173, "ux391ua": 173, "bio": 173, "204": [173, 203, 229, 242, 245, 250, 252, 255, 258, 262, 265, 268, 280, 283, 290, 304, 310, 322, 326, 332, 338, 344, 348, 497], "workqueu": [173, 786, 810, 835, 848, 851, 929], "ucsi_connector_chang": 173, "typec_ucsi": 173, "0010": 173, "ucsi_displayport_remove_partn": 173, "0xa": 173, "0x20": [173, 823], "c7": [173, 180, 1159], "83": [173, 180, 189, 203, 213, 218, 220, 226, 229, 235, 239, 242, 245, 250, 252, 255, 258, 262, 265, 268, 271, 280, 283, 287, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 360, 784, 834, 1135, 1136], "5b": [173, 180], "e9": [173, 180], "6d": [173, 180, 389, 390], "f3": [173, 180], "3d": [173, 180, 191], "fb": [173, 180], "2e": [173, 180, 694], "0f": [173, 180], "1f": [173, 180], "84": [173, 180, 189, 203, 213, 218, 220, 226, 229, 235, 239, 242, 245, 250, 252, 255, 258, 262, 265, 268, 271, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 360, 365, 370, 1135, 1136], "90": [150, 173, 180, 189, 213, 218, 220, 226, 229, 235, 242, 245, 250, 252, 258, 262, 265, 268, 271, 280, 283, 287, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 360, 474, 1135, 1136, 1164], "85": [173, 180, 189, 203, 213, 218, 220, 226, 229, 235, 242, 245, 250, 252, 258, 262, 265, 268, 271, 280, 283, 287, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 360, 1008, 1009, 1135, 1136, 1171], "ff": [173, 180, 383, 773, 939], "8b": 173, "78": [173, 180, 203, 213, 218, 220, 226, 229, 235, 242, 245, 250, 252, 258, 262, 265, 271, 280, 283, 287, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 360, 546, 1135, 1136], "c6": 173, "rsp": [173, 242, 1088], "0018": 173, "ffff9daa002d3df8": 173, "eflag": 173, "00010202": 173, "rax": 173, "0000000000000008": 173, "rbx": 173, "ffff901f4ce35710": 173, "rcx": 173, "0000000000003c7d": 173, "rdx": 173, "0000000000003c7c": 173, "rsi": [173, 893], "0000000000000001": 173, "rdi": 173, "rbp": 173, "0000000000000000": [173, 1025], "r08": 173, "ffffffffbc7dbe60": 173, "r09": 173, "ffff9daa002d3cf0": 173, "r10": 173, "ffff901f54951a18": 173, "r11": 173, "ffff901f56a68a78": 173, "r12": 173, "r13": 173, "r14": 173, "ffff901f4ce35860": 173, "r15": 173, "ffff901f4ce355d8": 173, "ffff901f56a00000": 173, "knlg": 173, "cr0": 173, "0000000080050033": 173, "cr2": 173, "cr3": 173, "000000028fbbc003": 173, "cr4": 173, "00000000003606f0": 173, "trace": [173, 192, 239, 245, 255, 258, 477, 823], "ucsi_unregister_altmod": 173, "0x77": 173, "0x90": [173, 823], "ucsi_unregister_partn": 173, "0x13": 173, "0x30": [173, 414], "0x247": 173, "0x340": 173, "process_one_work": 173, "0x1b5": 173, "0x360": 173, "worker_thread": 173, "0x50": 173, "0x3c0": 173, "kthread": 173, "0xf9": 173, "0x130": 173, "kthread_park": 173, "ret_from_fork": 173, "0x35": 173, "0x40": [173, 938], "cdc_ether": 173, "usbnet": 173, "r8152": 173, "mii": 173, "rc_cec": 173, "typec_displayport": 173, "uinput": 173, "rfcomm": 173, "ccm": 173, "xt_checksum": 173, "xt_masquerad": 173, "nf_nat_tftp": 173, "nf_conntrack_tftp": 173, "tun": [173, 178, 193, 197, 213, 220, 259, 1181, 1182, 1183], "bridg": 173, "stp": 173, "llc": 173, "nf_conntrack_netbios_n": 173, "nf_conntrack_broadcast": 173, "xt_ct": 173, "ip6t_reject": 173, "nf_reject_ipv6": 173, "ip6t_rpfilt": 173, "ipt_reject": 173, "nf_reject_ipv4": 173, "xt_conntrack": 173, "ebtable_nat": 173, "ebtable_brout": 173, "ip6table_nat": 173, "ip6table_mangl": 173, "ip6table_raw": 173, "ip6table_secur": 173, "iptable_nat": 173, "nf_nat": 173, "iptable_mangl": 173, "iptable_raw": 173, "iptable_secur": 173, "nf_conntrack": 173, "nf_defrag_ipv6": 173, "nf_defrag_ipv4": 173, "libcrc32c": 173, "ip_set": 173, "nfnetlink": 173, "ebtable_filt": 173, "ebtabl": 173, "ip6table_filt": 173, "ip6_tabl": 173, "iptable_filt": 173, "cmac": 173, "bnep": 173, "sunrpc": 173, "vfat": [173, 833, 864], "snd_hda_codec_hdmi": 173, "snd_soc_skl": 173, "snd_soc_sst_ipc": 173, "snd_soc_sst_dsp": 173, "snd_hda_ext_cor": 173, "x86_pkg_temp_therm": 173, "intel_powerclamp": 173, "snd_soc_acpi_intel_match": 173, "coretemp": 173, "snd_soc_acpi": 173, "kvm_intel": 173, "snd_soc_cor": 173, "snd_hda_codec_realtek": 173, "snd_hda_codec_gener": 173, "snd_compress": 173, "ledtrig_audio": 173, "ac97_bu": 173, "snd_pcm_dmaengin": 173, "iwlmvm": 173, "snd_hda_intel": 173, "snd_intel_dspcfg": 173, "irqbypass": 173, "snd_hda_codec": 173, "uvcvideo": 173, "mac80211": 173, "btusb": 173, "itco_wdt": 173, "btrtl": 173, "crct10dif_pclmul": 173, "videobuf2_vmalloc": 173, "itco_vendor_support": 173, "videobuf2_memop": 173, "mei_hdcp": 173, "btbcm": 173, "btintel": 173, "crc32_pclmul": 173, "intel_rapl_msr": 173, "snd_hda_cor": 173, "videobuf2_v4l2": 173, "libarc4": 173, "ghash_clmulni_intel": 173, "videobuf2_common": 173, "snd_hwdep": 173, "intel_cst": 173, "bluetooth": [173, 338, 1188, 1201], "snd_seq": 173, "asus_nb_wmi": 173, "iwlwifi": 173, "videodev": 173, "snd_seq_devic": 173, "intel_uncor": 173, "asus_wmi": 173, "snd_pcm": 173, "intel_rapl_perf": 173, "cdc_acm": 173, "sparse_keymap": 173, "wmi_bmof": 173, "ecdh_gener": 173, "cfg80211": 173, "intel_wmi_thunderbolt": 173, "pcspkr": 173, "snd_timer": 173, "snd": 173, "i2c_i801": 173, "soundcor": 173, "joydev": 173, "idma64": 173, "intel_xhci_usb_role_switch": 173, "mei_m": 173, "ucsi_acpi": 173, "processor_thermal_devic": 173, "intel_rapl_common": 173, "mei": [173, 245], "intel_soc_dts_iosf": 173, "intel_pch_therm": 173, "typec": 173, "int3403_therm": 173, "int340x_thermal_zon": 173, "int3400_therm": 173, "acpi_thermal_rel": 173, "acpi_pad": 173, "binfmt_misc": 173, "ip_tabl": 173, "rfkill": 173, "i915": 173, "i2c_algo_bit": 173, "drm_kms_helper": 173, "hid_multitouch": 173, "drm": 173, "nvme": 173, "crc32c_intel": 173, "nvme_cor": 173, "serio_raw": 173, "wmi": 173, "i2c_hid": 173, "76d248e576fee192": 173, "deferenc": 173, "dp": 173, "ness": [173, 209, 294], "ucsi": 173, "displayport": 173, "linu": [173, 825, 833], "typec_altmod": 173, "alt": [173, 203, 893, 921, 1181, 1188, 1195], "ucsi_dp": 173, "typec_altmode_get_drvdata": 173, "271": [173, 242, 245, 250, 252, 258, 283, 290, 304, 310, 332, 338, 344, 348], "bugzilla": 173, "1785972": 173, "john": [173, 462], "stebbin": 173, "roundtrip": 173, "wiki": [173, 187, 298, 299, 320, 324, 806, 833], "explod": [173, 348, 808, 1070], "jwboyer": [173, 806], "f31": 173, "quiet": [173, 206, 1159], "4382f76bc8ef9fce5e7e96d4cdb0c073564ad249": 173, "josh": 173, "boyer": 173, "fedoraproject": [173, 806], "mon": 173, "rpmdevtool": [173, 806], "koji": 173, "rpmdev": 173, "setuptre": 173, "spec": [173, 258, 806, 829], "srpm": 173, "unam": [173, 806, 811, 829, 833, 834], "correspond": [173, 185, 258, 387, 430, 938, 1015, 1023, 1062, 1098, 1133, 1159], "kenrel": 173, "ivh": [173, 175], "crypto": [173, 338], "ccp": 173, "sha": 173, "drop": [173, 185, 321, 493, 512, 521, 742, 749, 751, 852, 1000, 1005], "zips": 173, "ko": [173, 802, 811, 833], "endif": [173, 430, 432, 433, 475, 477, 482, 483, 576, 585, 594, 600, 602, 603, 643, 701, 702, 748, 764, 1007, 1023, 1025, 1173], "buildid": [173, 806, 1008], "primary_target": 173, "825": [173, 245], "asoc": 173, "patch601": 173, "patch999": 173, "roedel": [173, 547, 550, 1009, 1022, 1118, 1166], "patienc": [173, 202, 1055], "oldpackag": 173, "uefi": [173, 180], "market": [174, 177, 242, 286, 294, 1088], "intent": [174, 176, 180, 181, 495, 750, 754, 806, 963, 965, 966], "remark": 174, "organ": [174, 199, 428, 463, 474, 502, 643, 869, 955, 1022], "numer": [174, 191, 207, 209, 211, 245, 255, 258, 262, 294, 304, 344, 477, 649, 950], "enforc": [174, 232, 450, 472, 607, 792, 939], "cname": [174, 176], "propag": [174, 404, 462, 478, 483, 486, 487, 668, 718, 940], "1100": [174, 239, 245, 262, 643], "3600": [174, 245], "185": [174, 203, 220, 242, 245, 250, 252, 258, 262, 265, 268, 271, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348], "199": [174, 203, 220, 242, 245, 250, 252, 255, 258, 262, 265, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 833, 1088], "109": [174, 189, 203, 213, 218, 220, 226, 239, 242, 245, 250, 252, 258, 262, 265, 268, 280, 283, 287, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 360, 365, 370], "153": [174, 189, 203, 213, 220, 229, 242, 245, 250, 252, 258, 262, 265, 268, 271, 280, 283, 300, 304, 310, 322, 326, 332, 338, 344, 348, 372], "111": [174, 189, 191, 203, 213, 220, 226, 242, 245, 250, 252, 255, 258, 262, 265, 268, 280, 283, 287, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 360], "108": [174, 189, 203, 213, 220, 226, 229, 235, 242, 245, 250, 252, 255, 258, 262, 265, 268, 280, 283, 287, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 360], "strip": [174, 193, 202, 236, 238, 239, 242, 250, 254, 255, 260, 262, 268, 271, 283, 290, 300, 304, 310, 326, 332, 338, 344, 348, 365, 374, 771, 1007, 1008, 1010, 1019, 1038, 1111, 1156], "breviti": 174, "fqdn": 174, "qualifi": [174, 456, 602, 603, 740], "surf": 174, "consequenti": [174, 177, 180, 208, 864, 937, 1027, 1048, 1173], "microsoft team": 175, "chrome": 175, "google chrom": 175, "confer": [175, 177, 206, 230, 253, 279, 325, 771], "virtual classroom": 175, "classroom": [175, 177], "remote train": 175, "dr": [175, 1022], "chromium": [175, 210, 338], "frequent": [175, 177, 185, 202, 262, 918, 938, 1055, 1076], "face": [175, 177, 202, 252, 262, 756], "travel": [175, 893], "corona": [175, 177, 202], "viru": [175, 177], "conferenc": 175, "dramat": 175, "march": 175, "spent": [175, 461, 765, 1029, 1137], "weston": 175, "invest": [175, 177, 181, 262], "smooth": 175, "layer": [175, 275, 277, 295, 792, 864, 938, 950, 960, 969], "cornercas": 175, "hover": 175, "sharer": 175, "gdm": [175, 242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344, 868, 924], "daemon": [175, 222, 242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344, 468, 868, 871, 918, 919, 922, 924, 940, 948, 953, 955, 985, 1041], "uncom": [175, 517, 518, 712, 937], "waylanden": 175, "defaultsess": 175, "deb": [175, 307], "5153": 175, "thank": [175, 256, 283, 704, 740, 815, 975, 1136], "marjan": 175, "javorka": 175, "fashion": 175, "efl": [175, 852, 940, 991], "61762": 175, "1670": [175, 245], "80": [150, 175, 180, 189, 203, 213, 218, 220, 226, 229, 235, 239, 242, 245, 250, 252, 258, 262, 265, 268, 271, 280, 283, 287, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 360, 466, 539, 915, 991, 1021, 1033, 1088, 1135, 1136, 1164], "947213": 175, "61764": 175, "98775": 175, "zygot": 175, "sandbox": [175, 202, 206, 256, 270, 288, 1131, 1166, 1167], "61800": 175, "239615": 175, "gpu": 175, "sharedarraybuff": 175, "sparerendererforsiteperprocess": 175, "prefer": [175, 252, 262, 406, 462, 504, 608, 695, 703, 707, 825, 877, 1083], "kaaaaaaaaacaaabaaqaaaaaaaaaaagaaaaaaaaaaaaaiaaaaaaaaaagaaaaaaaaa": 175, "token": [175, 232, 248, 392, 432, 868, 981, 1086, 1181], "4327801531638606376": 175, "61825": 175, "420846": 175, "autoplai": 175, "gestur": 175, "12993561460135093079": 175, "asar": 175, "agent": [175, 946, 1138], "mozilla": [175, 300, 915], "applewebkit": 175, "537": [175, 245, 332, 338, 348], "khtml": 175, "gecko": 175, "microsoftteam": 175, "preview": [175, 260, 313, 329, 479, 786], "3497": 175, "safari": 175, "webview": 175, "preload": 175, "preload_notif": 175, "fff": 175, "eyjjci5jb21wyw55ijoirwxly3ryb24ilcjjci5kdw1wcyi6iiisimnylmvuywjszwqiomzhbhnllcjjci5wcm9kdwn0ijoirwxly3ryb24ilcjjci5zzxnzaw9uijoiiiwiy3iudxjsijoiiiwiy3iudmvyc2lvbii6iny0ljiumtiifq": 175, "raster": 175, "v8_context_snapshot_data": 175, "v8_natives_data": 175, "101": [175, 189, 203, 213, 220, 226, 235, 242, 245, 250, 252, 255, 258, 262, 265, 271, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 360, 365, 370, 1066, 1135, 1136], "msteam": 175, "notificationsmanag": 175, "61973": 175, "790018": 175, "432557619363765409": 175, "mainwindow": 175, "62033": 175, "1259666": 175, "5585537623314398260": 175, "pluginhost": 175, "wish": [175, 177, 185, 206, 466, 475, 614, 681, 762, 1054, 1149, 1150, 1166], "insan": [175, 314, 864], "killal": [175, 995, 1005], "63500": 175, "298385": 175, "63502": 175, "blood": 175, "pressur": [175, 239], "rise": [175, 540, 815, 973, 974, 991], "wipe": 175, "logout": 175, "pop": [175, 188, 250, 252, 265, 280, 290, 300, 310, 322, 338, 344, 348, 433, 624, 627, 762, 1053, 1078], "morn": [175, 211, 221, 239, 248, 250, 256, 325, 1093], "webassembli": 175, "blow": 175, "water": [175, 294], "tab": [175, 176, 189, 258, 286, 304, 356, 407, 833, 893, 1075, 1100, 1190], "firefox": [175, 338, 468, 976, 1005, 1143], "dom": [175, 234], "gave": [175, 177, 190, 202, 935, 1136], "3987": 175, "132": [175, 189, 191, 203, 213, 220, 229, 242, 245, 250, 252, 255, 258, 262, 265, 268, 280, 283, 300, 304, 310, 322, 326, 332, 338, 344, 348], "plagu": 175, "invent": [175, 400, 432, 492, 514, 515, 1186, 1187], "game": [175, 242, 258, 265, 268, 283, 290, 300, 304, 321, 326, 332, 338, 344, 889, 953, 1069], "pornwatch": 175, "teamview": 175, "webpag": 176, "properli": [176, 686, 764, 833, 1019], "retrospect": 176, "jekyl": 176, "bend": [176, 544], "companion": [176, 294], "pollut": [176, 433, 456, 462, 495, 691, 1009], "distinguish": [176, 601, 754, 865, 1019], "handwritten": [176, 274, 275, 277, 334, 335, 600, 700, 730, 731, 732, 748, 785, 786], "remind": 176, "pile": [176, 185, 502, 1005], "incomprehens": [176, 256, 664, 771, 1184], "blame": [176, 939], "technic": [176, 177, 199, 335, 487, 491, 591, 646, 690, 1035, 1144, 1176], "nojekyl": 176, "eof": [176, 226, 229, 248, 249, 265, 357, 394, 395, 396, 397, 410, 674, 835, 849, 955, 956, 959, 965, 997, 1004, 1057], "doctyp": 176, "constel": 176, "machineri": [176, 298, 299, 320, 324], "eventu": [176, 185, 465, 973, 1022], "click": [176, 177], "cri": [176, 753], "haven": [176, 177, 202, 568, 930, 937], "subdomain": 176, "afterthough": 176, "preserv": [176, 187, 208, 265, 450, 860, 861, 895, 949, 1156], "_build": 176, "restor": [176, 185, 192, 239, 245, 255, 258, 806, 1005, 1028], "shini": 176, "nervous": 176, "marketinges": [176, 286], "familiar": [176, 202, 258, 367, 368, 757, 938, 1055], "big blue button": 177, "strongli": [177, 239, 245, 255, 258, 289, 292, 335, 548, 646, 692, 730, 783, 785, 786, 1184], "shame": 177, "pursu": 177, "collabor": [177, 187, 194, 199, 206, 279], "moreov": 177, "teach": [177, 202, 383], "trust": [177, 180, 242, 298, 299, 320, 338, 348, 698, 946, 948, 1088, 1159, 1176], "benefit": [177, 289, 292, 295, 297, 456, 1126], "beat": [177, 252, 262, 771, 1130], "talent": [177, 383], "whiteboard": [177, 1000], "chat": 177, "breakout": [177, 937], "stabil": [177, 497, 939, 1160], "thousand": [177, 283, 332, 864], "curiou": [177, 1131], "curious": 177, "licens": [177, 283, 484, 789, 1057, 1086], "lgpl": 177, "blindsid": 177, "govern": [177, 819, 959], "html5": 177, "exception": [177, 939], "modern": [177, 181, 183, 186, 194, 197, 202, 209, 231, 253, 478, 752, 771, 786, 793, 795, 800, 803, 810, 814, 824, 835, 837, 842, 848, 851, 854, 929, 1007, 1026, 1056, 1131, 1157, 1185, 1187], "heavili": [177, 199, 202, 286, 288, 383, 548, 743, 833, 930, 939, 1055], "webrtc": 177, "pain": [177, 833, 1010, 1019], "death": [177, 229, 1005], "firewal": [177, 210, 948], "busi": [177, 321, 472, 482, 607, 838, 850, 862, 897, 899, 904, 905], "indefinit": [177, 680], "vm": [177, 368], "encrypt": [177, 868, 889, 940, 948, 949, 950, 1109, 1147], "bbb": [177, 189, 250, 268, 338], "provis": 177, "gcp": 177, "expertis": [177, 549], "n1": [177, 203, 262], "accordingli": [177, 210, 536, 546, 549, 579, 937, 939, 1024, 1059, 1062, 1156], "500gb": 177, "10gb": 177, "spars": [177, 252, 262, 610, 612, 829], "mandatori": [177, 939, 1056], "issuanc": 177, "udp": [177, 931, 933, 1199, 1201], "32768": 177, "clickabl": 177, "7443": 177, "755": [177, 245, 365, 878, 1058], "xenial": 177, "220": [177, 203, 218, 229, 239, 242, 245, 250, 252, 258, 262, 265, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348], "hostnam": [177, 338, 1159], "certbot": 177, "greenlight": 177, "letsencrypt": 177, "docker": [177, 181, 338], "bundl": [177, 200, 1143, 1159], "rake": 177, "succesfulli": 177, "screenshot": [177, 200, 365], "tryout": [177, 939], "kid": [177, 222, 240, 351], "layman": 177, "knew": [177, 206, 705, 1024], "reproduc": [177, 180, 296, 459, 939], "thought": [177, 433, 745, 833, 1144], "fred": [177, 931, 1031], "dixon": 177, "leader": 177, "aka": [177, 222, 245, 248, 250, 270, 568, 752], "canva": 177, "bradlei": 177, "schreffler": 177, "upfront": 177, "far": [177, 202, 210, 231, 237, 245, 248, 288, 402, 417, 438, 439, 441, 452, 456, 461, 486, 615, 625, 690, 753, 811, 875, 939, 1033, 1055, 1136, 1184], "exhaust": [177, 989, 992, 1035], "heard": 177, "tast": [177, 392, 608, 664, 690, 733, 753], "era": 177, "budget": [177, 226], "advertis": [177, 743], "viabl": 177, "shout": [177, 732, 735], "loud": [177, 411, 626, 694, 732, 738, 739], "gmunden": [178, 383], "traunse": 178, "hike": [178, 179, 206], "bergsteigen": [178, 179], "climb": [178, 179, 206, 237], "klettern": [178, 179], "outdoor": [178, 179], "donnerstag": 178, "geistigen": 178, "ersch\u00f6pfung": 178, "k\u00f6rperlich": 178, "erfahren": [178, 179, 383, 1182], "dazu": [178, 187, 188, 193, 197, 214, 365, 370, 383, 1180, 1194, 1202], "ausgesucht": [178, 179], "zwar": [178, 1179, 1183, 1195], "lo": [178, 179, 220, 258, 294, 544, 813, 1043], "gmundner": [178, 206], "h\u00fctte": [178, 179, 206], "n\u00e4chsten": 178, "naturfreundesteig": 178, "zusammenfassung": [178, 184], "wunsch": 178, "vollend": 178, "erf\u00fcllt": 178, "unversichert": 178, "unmarkiert": 178, "leicht": [178, 214, 1179, 1194, 1200, 1201], "panik": 178, "geraten": 178, "h\u00e4nde": [178, 179], "braucht": [178, 179], "fingern\u00e4gel": 178, "z\u00e4hne": 178, "mitunt": [178, 179, 1191], "verkoffert": 178, "augen": [178, 265], "offenhalten": 178, "jeder": [150, 178, 1178, 1181, 1182, 1201], "spur": 178, "folgen": [178, 214, 215, 1181, 1194], "fr\u00fcher": [178, 259], "umdrehen": 178, "sackgass": 178, "erweist": 178, "vielleicht": [178, 203, 214, 265, 1183, 1194], "weggehen": 178, "stirnlamp": 178, "mitnehmen": 178, "war": [178, 188, 193, 195, 203, 214, 218, 383, 472, 1179, 1181, 1183, 1194, 1200, 1201], "sch\u00f6nsten": 178, "jemal": 178, "zuletzt": 178, "traumhaften": 178, "gegend": 178, "immer": [150, 178, 179, 193, 197, 203, 205, 218, 290, 1179, 1183, 1190, 1200], "griffweit": 178, "erscheint": 178, "paar": [178, 188, 203, 205, 213, 220, 252, 365, 370, 1179, 1202], "eindr\u00fcck": 178, "m\u00fcder": 178, "abklatsch": 178, "erinnerungen": 178, "hirn": 178, "eingebrannt": 178, "einstieg": [178, 214, 1194], "traunsteinstra\u00df": 178, "hundert": [178, 189, 262], "meter": 178, "s\u00fcdlich": 178, "hoisn": [178, 206], "wirt": [178, 206], "markiert": [178, 179], "wanderweg": [178, 179], "wegweisern": [178, 179], "bergauf": [178, 179], "kupp": 178, "klamm": 178, "einsteigt": 178, "bergab": 178, "touristisch": 178, "erschlossen": 178, "trifft": 178, "familien": 178, "kindern": [178, 1195], "rechter": 178, "felsstock": 178, "adlerhorst": 178, "sieht": [178, 189, 193, 203], "rau": [178, 252], "touristenzon": 178, "rauf": 178, "schart": 178, "durchschnaufen": 178, "einstellen": 178, "gen\u00fcsslich": 178, "h\u00f6henmet": 178, "verspeisen": 178, "steinmanderl": 178, "verfehlen": 178, "erkennbar": [178, 189, 1197], "kamm": 178, "r\u00fcber": 178, "traunsteinfelsen": 178, "erstreckt": [178, 179], "sch\u00f6nste": 178, "teil": [150, 178, 188, 197, 205, 1179, 1181], "meditativ": 178, "wundersch\u00f6n": [178, 179], "steil": 178, "voll": 178, "zecken": 178, "schon": [178, 179, 188, 203, 205, 213, 243, 383, 1181, 1183, 1188, 1195, 1197, 1200], "bl\u00fcht": 178, "rinnen": 178, "leichtest": [178, 189], "dahin": [178, 1179], "wieder": [178, 203, 205, 213, 218, 220, 234, 1181, 1195], "vertun": 178, "manderl": 178, "aufstellen": 178, "nachwelt": 178, "nemesi": 178, "bergverr\u00fcckten": 178, "gleich": [178, 189, 203, 213, 214, 218, 220, 252, 300, 332, 338, 348, 360, 1179, 1194, 1201], "schl\u00fcsselstel": 178, "quert": 178, "latschen": 178, "\u00f6fter": [178, 179], "festhalten": 178, "gel\u00e4nd": 178, "einsam": 178, "bohrhaken": 178, "verrotteten": 178, "schuhband": 178, "festh\u00e4lt": 178, "runterfallen": 178, "glaub": [178, 187, 188], "stell": [178, 203, 234], "umgehen": [178, 1188], "querung": 178, "hierher": 178, "st\u00fcck": 178, "reinzum\u00fcnden": 178, "scheint": [178, 187], "gibt": [178, 179, 184, 187, 189, 190, 193, 203, 214, 215, 226, 252, 360, 1178, 1179, 1180, 1181, 1183, 1188, 1194, 1200], "foto": [178, 895], "mittendrin": 178, "besch\u00e4ftigt": 178, "hose": 178, "kacken": 178, "gesagt": [178, 193, 203, 213, 383, 1179], "manderln": 178, "aufnahmen": 178, "zunehmenden": 178, "sonnenuntergang": 178, "unvergesslich": 178, "nacht": [178, 179], "geworden": 178, "halten": [178, 179], "zumindest": [150, 178, 203, 1181], "hinauf": 178, "stund": [178, 920, 1202], "gekostet": 178, "exklus": [178, 203, 213], "schneck": 178, "j\u00e4gerbrot": 178, "schein": 178, "ausstieg": 178, "hernlersteig": 178, "m\u00fcndet": 178, "gmundnerh\u00fctt": 178, "gem\u00fctlich": [178, 179], "nett": [178, 179, 193, 304, 383, 1188, 1195], "wirtsleut": 178, "h\u00fcttenruh": 178, "ansitzen": 178, "schweinsbraten": 178, "reinkommt": 178, "k\u00fcche": 178, "geputzt": 178, "backerbsen": 178, "morgen": [178, 258, 262], "hochnebel": 178, "blick": [178, 179, 1180], "flugzeug": 178, "gipfel": [178, 179], "dolin": 178, "nebel": 178, "dabei": [178, 189, 193, 229, 348, 383, 1178], "verziehen": 178, "r\u00fcckweg": 178, "hoisnwirt": 178, "miesweg": 178, "karibik": 178, "steiner alpen": 179, "kamni\u0161ke alp": 179, "kamni\u0161ko savinjskih alp": 179, "alten": [179, 1183], "tradit": [179, 242, 245, 458, 473, 609, 611, 612, 614, 634, 875, 939, 1078, 1109, 1198], "bleiburg": [179, 237], "k\u00e4rnten": [179, 383], "umliegenden": 179, "bergen": 179, "interessantesten": 179, "2558m": [179, 237], "steiner": 179, "alpen": 179, "davor": [179, 221], "gekannt": 179, "nun": [179, 197, 203, 226, 233, 258, 651], "gesehen": [179, 203, 209, 243], "steht": [179, 203, 213, 214, 1191, 1194], "fest": [150, 179], "n\u00e4chste": [179, 197], "jahr": [179, 203], "\u00fcberschreitung": 179, "soweit": [179, 1188, 1195], "h\u00f6chst": 179, "interessant": [179, 1180], "steinhaufen": 179, "unge\u00fcbt": 179, "verloren": [179, 218, 221], "h\u00f6henangst": 179, "schauen": [179, 214, 1194], "helm": 179, "schaden": 179, "schottersurf": 179, "kommen": [179, 184, 252, 365, 370, 383, 921], "ihr": [179, 184, 188, 193, 203, 348, 855, 1178, 1180, 1182, 1183, 1188, 1195, 1201], "artikel": [179, 187], "rein": [179, 189, 214, 1194, 1195], "ins": [179, 188, 383, 759, 1179, 1195], "eisenkappel": 179, "seebergsattel": 179, "openstreetmap": 179, "klein": [179, 188, 189, 193, 1179, 1181, 1182], "dorf": 179, "uhren": 179, "stehengeblieben": 179, "scheinen": 179, "parkplatz": 179, "geparkt": 179, "wissend": 179, "hinten": 179, "tal": 179, "beginnt": [179, 213, 1202], "ahnen": 179, "stetig": 179, "verzagen": 179, "eingang": [179, 1179], "kar": 179, "pl\u00f6tzlich": 179, "freundlich": 179, "vorhanden": [179, 1188, 1195], "fr\u00fchst\u00fcck": 179, "lager": [179, 294], "respektvol": 179, "erklimmenden": 179, "zieht": 179, "haltend": 179, "wand": 179, "wiederum": [179, 203], "gilt": [150, 179, 193, 234, 383], "mittlerweil": [179, 1179, 1196], "akzeptiert": 179, "deswegen": [179, 213, 218, 1181], "schliesslich": [179, 1179], "stehend": 179, "denn": [179, 203, 213, 1200, 1202], "hinaufkomm": 179, "passiert": [179, 203, 220], "anf\u00e4ngern": 179, "geschehen": [179, 338], "jung": [179, 383], "izola": 179, "slowenien": 179, "stellten": 179, "ankam": 179, "ob": [179, 187, 213, 1183, 1202], "beantwortet": 179, "adoptivs\u00f6hn": 179, "gewonnen": 179, "nachbarberg": 179, "ko\u010dna": 179, "sichtlich": 179, "spa\u00df": [179, 259, 1197], "abstieg": 179, "erweitert": 179, "rund": 179, "fertig": [179, 213, 230, 258, 338, 711, 718], "empfehl": [179, 1179], "runterzugehen": 179, "raufgekommen": 179, "ostseitigen": 179, "westseitig": 179, "sch\u00f6ner": [179, 203], "langen": 179, "grat": 179, "felst\u00fcrm": 179, "daf\u00fcr": [179, 197, 203, 213, 214, 1179], "anstrengend": 179, "200m": 179, "pulverhangerl": 179, "zur\u00fcck": [179, 203, 215, 1188, 1195], "wohlverdient": 179, "la\u0161ko": 179, "geschmack": 179, "schroff": 179, "selektiv": 179, "jedermann": 179, "kett": 179, "2000m": 179, "umschlossen": 179, "gletschergeformten": 179, "karen": 179, "steilen": 179, "w\u00e4nden": 179, "ost": 179, "richtung": [179, 1190], "schlafm\u00f6glichkeiten": 179, "biwak": 179, "einladung": 179, "\u00fcberquerung": 179, "dringend": 179, "f\u00e4llig": [179, 383], "fu\u00dfnoten": [179, 1178], "belieben": 179, "gummi": 179, "reifen": 179, "fahren": 179, "mehrplatzlag": 179, "reserviert": 179, "h\u00fcttenschl\u00e4fer": 179, "ohrenst\u00f6psel": 179, "f\u00e4lle": 179, "eingetreten": 179, "fassen": [179, 258], "typ": [179, 215, 226, 236, 921, 1143], "geschnarcht": 179, "geschrien": 179, "modules sign": 180, "secure boot": 180, "shim": 180, "dell xps 13": 180, "unresolv": [180, 808, 811, 1007], "upset": [180, 743], "tendenc": 180, "vendor": [180, 181, 488, 490, 549, 829, 833, 937, 967], "efi": [180, 338], "implementor": [180, 274, 275, 277, 334, 335, 692, 730, 739, 785, 786, 792, 1164, 1184], "shine": 180, "stuck": 180, "cryptographi": 180, "third": [180, 217, 229, 258, 304, 478, 606, 608, 719, 720, 811, 813, 878, 920, 963], "parti": [180, 185, 496, 608, 804, 811, 959, 1000, 1147], "signatur": [180, 226, 258, 262, 283, 304, 594, 690, 737, 753, 754, 1001], "openssl": [180, 889], "req": 180, "x509": 180, "newkei": 180, "rsa": [180, 946], "keyout": 180, "xps13": 180, "priv": [180, 827], "outform": 180, "36500": [180, 549], "subj": 180, "passphras": [180, 210, 946], "expiri": 180, "0x2": 180, "97": [180, 189, 203, 213, 218, 220, 226, 229, 242, 245, 250, 252, 255, 258, 262, 265, 271, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 360, 365, 370, 466, 1135], "e5": 180, "ef": 180, "88": [180, 189, 203, 213, 218, 220, 226, 229, 231, 235, 242, 245, 250, 252, 255, 258, 262, 265, 268, 271, 280, 283, 287, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 360, 365, 370, 468, 1075, 1135, 1136, 1171], "3a": 180, "b3": 180, "9c": 180, "1b": 180, "a4": 180, "d7": 180, "sha256withrsaencrypt": 180, "issuer": [180, 492], "sep": [180, 181, 209, 229, 242, 245, 250, 258, 262, 265, 283, 304, 322, 338, 349, 474, 671, 915, 937, 939, 950, 1007], "gmt": 180, "aug": [180, 245, 930, 938], "2121": 180, "subject": [180, 475, 794, 831, 1164], "rsaencrypt": 180, "modulu": [180, 239, 245, 255, 258], "b5": 180, "2d": [180, 232, 608, 1076], "5c": 180, "6f": [180, 338, 995], "b0": 180, "95": [180, 189, 203, 213, 218, 220, 226, 229, 235, 239, 242, 245, 250, 252, 255, 258, 262, 265, 268, 271, 280, 283, 287, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 360, 1135, 1136], "f6": 180, "9e": 180, "9d": 180, "0d": 180, "bc": [180, 813, 937], "f5": 180, "6e": 180, "fe": [180, 474], "94": [180, 189, 213, 218, 220, 226, 229, 235, 242, 245, 250, 252, 258, 262, 265, 268, 271, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 360, 517, 518, 1135], "2b": [180, 939], "e6": 180, "b2": 180, "a0": [180, 938], "f8": 180, "7d": 180, "1c": 180, "2c": 180, "9f": 180, "4d": [180, 1076], "86": [180, 189, 203, 213, 218, 220, 226, 229, 235, 242, 245, 250, 252, 258, 262, 265, 268, 271, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 360, 1135, 1136], "e3": [180, 511], "dd": [180, 864, 893, 1179], "7b": 180, "3f": 180, "aa": 180, "b8": 180, "a5": [180, 938], "d5": 180, "0b": 180, "81": [150, 180, 189, 191, 203, 213, 218, 220, 226, 229, 231, 235, 242, 245, 250, 252, 258, 262, 265, 268, 271, 280, 283, 287, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 360, 1009, 1033, 1135, 1136], "d1": [180, 252, 315, 338, 665], "e8": 180, "dc": [180, 492], "c5": 180, "d2": [180, 252, 315, 344, 665], "c2": [180, 495, 609, 694], "0a": [180, 394], "a1": [180, 242, 287, 1088], "e1": [180, 230, 243, 511, 691], "89": [180, 189, 203, 213, 218, 220, 226, 229, 235, 239, 242, 245, 250, 252, 255, 258, 262, 265, 268, 271, 280, 283, 287, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 360, 466, 937, 938, 939, 1009, 1135, 1136], "4c": 180, "4a": 180, "77": [180, 203, 211, 213, 218, 220, 222, 226, 229, 235, 239, 242, 245, 250, 252, 258, 262, 265, 268, 271, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 360, 362, 365, 370, 1135, 1136], "a9": 180, "68": [180, 203, 208, 213, 218, 220, 226, 229, 235, 239, 242, 245, 250, 252, 258, 262, 265, 268, 271, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 357, 360, 915, 1135, 1136], "b6": 180, "a8": 180, "9b": 180, "d8": 180, "7f": [180, 939], "e2": [180, 230, 243, 511, 691], "a3": 180, "79": [180, 203, 213, 218, 220, 226, 229, 235, 239, 242, 245, 250, 252, 258, 262, 265, 268, 271, 280, 283, 287, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 360, 365, 370, 1135, 1136], "f4": 180, "96": [180, 189, 203, 213, 218, 220, 226, 229, 239, 242, 245, 250, 252, 258, 262, 265, 268, 271, 280, 283, 287, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 360, 466, 1008, 1009, 1135, 1136], "4f": [180, 1076], "1d": 180, "7e": 180, "4e": 180, "0e": 180, "d9": 180, "8c": 180, "d3": [180, 665], "c8": 180, "f7": 180, "8e": 180, "d6": 180, "3b": 180, "1e": 180, "4b": [180, 939, 995], "5e": [180, 1062], "5f": [180, 766], "7c": 180, "expon": [180, 1062], "65537": 180, "0x10001": 180, "x509v3": 180, "98": [180, 189, 203, 213, 220, 226, 229, 235, 242, 245, 250, 252, 255, 258, 262, 265, 268, 271, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 360, 365, 370, 591, 628, 1009], "0c": [180, 939], "keyid": 180, "c0": 180, "8f": 180, "b1": 180, "b7": 180, "9a": 180, "fa": 180, "7a": 180, "df": [180, 206, 322, 326, 332, 344, 474], "a6": 180, "c9": 180, "76": [180, 203, 213, 218, 220, 226, 229, 231, 235, 242, 245, 250, 252, 258, 262, 265, 268, 271, 280, 283, 287, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 360, 365, 370, 485, 486, 750, 784, 1088, 1135, 1136], "f0": 180, "b4": 180, "f9": 180, "eb": 180, "f1": 180, "6c": [180, 939], "2f": [180, 390, 1076], "5a": 180, "e0": 180, "d0": 180, "93": [180, 189, 203, 213, 218, 220, 226, 229, 235, 239, 242, 245, 250, 252, 258, 262, 265, 271, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 360, 1135], "8d": 180, "2a": 180, "fc": [180, 491, 492], "1a": 180, "b9": 180, "cb": [180, 655], "miidbtccae2gawibagiuarax5e9vn4g6eclb5bocbruks9cwdqyjkozihvcnaqel": 180, "bqawetepma0ga1ueawwgamzhc2nomcaxdtixmdkwnzeyntc1nloydzixmjewode0": 180, "mti1nzu2wjarmq8wdqydvqqddazqzmfzy2gwggeima0gcsqgsib3dqebaquaa4ib": 180, "dwawggekaoibaqc1lvzqb2aw15x2nlvnnmth6qxdnq1xvokb9vbu6zx": 180, "wl72mzqr": 180, "5rkvwabpeph9hcwdnwcm9mjnhupdexi": 180, "hmszvaowukuzi2kflrpvc": 180, "79gwnr4": 180, "jc": 180, "xdlzwnekcnuhsogjwxxttbydsghpd8q": 180, "valspcvotvjdokib4eyxnavjbdjdldd": 180, "rb8ueftirkn5abigzdoortik9jy1v2ocui5zqu8dkg4vph4mtkp": 180, "nb3kgq7zt5ym": 180, "b8ce2f": 180, "ettmprmfi94x": 180, "7i5tuqrbsylistict": 180, "rf1kw6": 180, "zuzvmwyow9cyzwc5rar": 180, "ys0exg3v": 180, "hyjl7vaxa23rb": 180, "xyiuztxqunxragmbaagjuzbrmb0ga1uddgqwbbqk": 180, "p1jr3huijl4otbwyvngmdz1idzafbgnvhsmegdawgbqkp1jr3huijl4otbwyvngm": 180, "dz1idzapbgnvhrmbaf8ebtadaqh": 180, "ma0gcsqgsib3dqebcwuaa4ibaqa5yke5gyfa": 180, "h49rsbdpobkbr5rv0hz693pljj02mn9hprusmgbygdujyx6odqbzcfah8ko0": 180, "xra": 180, "kdtflvc7uuvwtp": 180, "envqn8vx6twkd0r7maeyze8q6w2y1p1xcbrbwhmhemi": 180, "tjjadwenms9xosesipxkduey9oa6ep6indatkyt2lrw5tyagfocnxyiniybsvdtw": 180, "yqfvxbjphkw": 180, "dintokuzmazeiq3j0hi8o789xdyxlf2snsdshq5huaz67c5brli": 180, "ahemjzbycfiiq65b5x": 180, "y7aq": 180, "eg70tffm4fd8iys4tyxajdhcarqvfpdxazkhx": 180, "rk": 180, "b3lljngstu2g": 180, "mokutil": 180, "mokmanag": 180, "bloodi": [180, 1004, 1144], "fan": [180, 202, 206, 232, 256, 325, 1131], "highest": [180, 239, 245, 255, 258, 304, 417, 462, 938, 994], "melt": 180, "7390": [180, 245], "cross develop": 181, "raspberry pi": [181, 930, 931, 932, 933, 934, 937, 938, 939], "crosstool-ng": 181, "c++": [181, 183, 1183, 1184, 1185, 1187], "sadli": [181, 232, 456, 802, 937, 971, 974, 1008, 1030], "linaro": [181, 786, 929, 1017, 1018], "libstdc": [181, 1019, 1021], "unsatisfi": 181, "libpthread": [181, 1010], "feedback": [181, 197, 200, 209, 210, 211], "thankfulli": 181, "gperf": [181, 1021], "flex": [181, 813, 937, 1021], "texinfo": [181, 1021], "help2man": [181, 1021], "libtool": [181, 1021], "ncurs": [181, 806], "unzip": [181, 834, 1021], "rsync": [181, 1021], "diffutil": 181, "libncurses5": [181, 1021], "gawk": [181, 1021], "util": [181, 188, 209, 338, 489, 495, 514, 528, 643, 698, 701, 703, 784, 1021, 1028, 1159], "ct": [181, 1021], "zlib": [181, 1021], "extra": [181, 203, 213, 239, 423, 484, 576, 747, 833], "prior": [181, 859, 875, 900, 937, 1007, 1023, 1077], "bootstrap": [181, 1021, 1166], "latest": [181, 789, 804, 810, 1159], "yann": 181, "morin": 181, "warranti": [181, 222, 362], "merchant": 181, "rpi3": 181, "armv7": 181, "rpi2": 181, "23179": 181, "libc": [181, 1007, 1024], "glibc_2": [181, 1007], "ldd": [181, 478, 480, 1024], "0xb6e06000": 181, "invok": [181, 211, 230, 243, 351, 356, 492, 594, 606, 665, 695, 986, 1008, 1045, 1057, 1058, 1083], "rpt2": 181, "rpi1": 181, "deb10u1": 181, "quirk": [181, 930], "werror": [181, 398, 411, 454, 477, 492, 499, 784, 801, 802, 1173], "behind": [181, 221, 411, 462, 492, 514, 624, 833, 948, 1007, 1050, 1148], "glibcxx_3": 181, "libgcc_": 181, "downgrad": 181, "cmake_find_root_path": [181, 1008], "cmake_sysroot": [181, 1008], "viewpoint": 181, "bye": [181, 718, 722, 724, 725, 726, 1144], "relocat": 181, "fragil": 181, "sdk": 181, "buildroot": 181, "encount": [181, 210, 258, 262, 938, 939, 965], "ct_prefix": 181, "categori": [182, 194, 474, 1133], "crosstool": [182, 286, 786, 929, 1008, 1010, 1017, 1018, 1019], "1399": 182, "dell": 182, "xp": [182, 472], "grintovec": [182, 237], "plan\u0161arsko": 182, "jezero": 182, "\u010de\u0161ka": [182, 237], "ko\u010da": [182, 237], "traunstein": [182, 206, 383], "zierlersteig": [182, 206], "bigbluebutton": [182, 186, 1178], "consumpt": 182, "buildmanag": 183, "embeddedentwicklung": 183, "anpassungen": 183, "paketen": 183, "rootfilesystem": [183, 1010], "dient": 184, "vermarktung": 184, "referenz": [184, 273], "kursteilnehm": [184, 383], "beendigung": 184, "entstandenen": 184, "zur\u00fcckgreifen": 184, "finden": [184, 188, 197, 1178], "sofern": 184, "kund": [184, 197], "w\u00fcnscht": 184, "abstufungen": 184, "\u00f6ffentlichkeit": [184, 1195], "besprochen": 184, "hierbei": 184, "anwendung": [150, 184, 1200], "g\u00e4nzlich": 184, "abgesehen": 184, "ausdr\u00fccklich": 184, "zustimmt": 184, "namen": [184, 203, 213, 262, 322, 921, 1202], "individuen": 184, "prinzipiel": 184, "erw\u00e4hnt": [184, 197], "erlaubni": 184, "sollten": [184, 252, 290], "vorgehen": [184, 270, 1195, 1202], "anbietet": 184, "nie": [184, 193, 205, 383, 1183], "zug\u00e4nglich": 184, "onlinekursen": 184, "m\u00f6glichkeit": [150, 184, 187, 205, 1181, 1200, 1201], "\u00fcbungsmateri": 184, "zustimmen": 184, "einzeln": [184, 197], "keinesfal": 184, "ver\u00f6ffentlicht": 184, "verschiedenst": 184, "m\u00f6glichkeiten": [184, 197, 1197, 1200], "entstanden": [184, 197, 205], "nichtsdestotrotz": [184, 1181], "verf\u00fcgung": [150, 184, 203, 1183, 1200], "accompani": [185, 206, 295, 297, 1134, 1189], "privaci": [185, 202, 206, 207], "guidelin": [185, 202, 321, 939], "certainli": [185, 965], "redhat": [185, 307, 338, 468], "gitk": [185, 893], "traine": [185, 212], "respositori": [185, 197], "user1": 185, "user2": 185, "user3": 185, "untrack": 185, "beast": 185, "similarli": 185, "unstag": 185, "accident": [185, 605, 737, 817, 860, 861, 900, 964, 1072], "7434a5b": 185, "100755": 185, "cowork": 185, "employ": [185, 472], "favourit": 185, "869": [185, 245, 332], "124": [185, 189, 203, 210, 213, 220, 226, 229, 239, 242, 245, 250, 252, 255, 258, 262, 265, 268, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 1088], "a4b9666": 185, "bf5bb75": 185, "went": [185, 206], "retri": [185, 951, 1050, 1159], "noon": [185, 325, 993, 1081], "lack": [185, 452, 477, 549, 683, 685, 939, 1019], "unavoid": 185, "her": [185, 189, 214, 258, 261, 685, 868, 889, 1097, 1139, 1194], "confid": 185, "merg": [185, 231, 835, 993, 1079, 1196], "gentl": [186, 1185], "tinker": 186, "solder": 186, "sysv": [187, 1008], "grace": [187, 299, 757], "sigterm": [187, 1004, 1005], "sigkil": 187, "beeinflussen": 187, "shutdown": [187, 242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 335, 338, 344, 373, 811, 924, 1001, 1039], "herausgefunden": [187, 193, 383], "nachfolgend": [187, 1179], "manpag": 187, "verhindern": 187, "genehm": 187, "systemd": [187, 242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344, 833, 871, 924, 939, 1004, 1179], "inhibit": [187, 334, 690, 728], "children": [187, 466], "vererbt": 187, "attributen": 187, "setprior": 187, "execv": [187, 962, 1007], "sched_reset_on_fork": 187, "ORed": 187, "privileg": [187, 242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344, 889, 924], "playback": 187, "prevent": [187, 190, 239, 245, 248, 255, 258, 286, 448, 454, 458, 870, 959, 964, 993, 1004, 1030, 1042, 1072], "evad": 187, "rlimit_rttim": 187, "getr": 187, "anstel": 187, "prozessen": 187, "teilen": 187, "prozess": [187, 366, 1188, 1190, 1197, 1198, 1201], "startenden": 187, "gestarteten": 187, "weitergegeben": 187, "ausser": [187, 214, 360, 1194], "unterbunden": 187, "pthread_attr_setinheritsch": 187, "pthread_inherit_sch": 187, "pthread_explicit_sch": 187, "newli": [187, 454], "sowa": [187, 193, 383, 1179], "\u00e4hnlich": [187, 218], "filter_driv": 187, "offenbar": [187, 203, 383, 1181], "miser": [187, 643], "netzwerkdrivern": 187, "hoher": 187, "interruptlast": 187, "verbessern": 187, "n\u00f6tig": [187, 1190], "diesbez\u00fcglich": 187, "\u00fcberlegt": 187, "schaltet": 187, "netzwerkdriv": 187, "30107": 187, "linuxfound": 187, "workgroup": 187, "napi": [187, 217, 827], "implementationen": 187, "libmodbu": 187, "freemodbu": 187, "konfiguriert": [187, 188], "jumbo": 187, "jumbo_fram": 187, "mtu": [187, 932], "1500": [187, 245], "eth0": 187, "9000": [187, 245], "ifconfig": [187, 827], "abgelegt": 187, "konfigur": [187, 189], "ifac": [187, 517, 531, 754], "vorsicht": [187, 213, 921], "routern": 187, "fragmentieren": 187, "tracerout": 187, "netzwerkverbindung": 187, "g\u00fcte": 187, "wissen": [150, 187, 383, 1181, 1188], "sar": 187, "sysstat": 187, "schmerzvol": 187, "netter": 187, "ausprogrammiert": 188, "konflikt": [188, 1196], "parallelen": [188, 1200], "demonstr": [188, 190, 210, 282, 544, 593, 1133, 1137, 1176], "mutter": [188, 383, 384, 1200], "aller": [188, 197, 383, 384, 1179, 1200], "danach": [188, 1178], "hilf": [188, 213, 365, 370, 1190], "gefixt": 188, "kommunk": 188, "variablen": [188, 189, 214, 215, 218, 221, 226, 254, 272, 273, 357, 360, 366, 1180, 1190, 1191, 1194], "frontal": 188, "vorgef\u00fchrt": 188, "diskuss": [188, 197, 219, 383], "dank": [188, 193, 383, 1179], "beispielcod": 188, "h\u00e4ndisch": [188, 1182], "zweier": [188, 214, 1194], "bewundern": 188, "k\u00f6nnt": 188, "euch": 188, "erinnern": [188, 383], "blinken": 188, "liess": 188, "irgendwo": [188, 262], "hatten": [188, 193, 383], "edg": [188, 232, 815, 973, 974], "kleinen": 188, "empf": 188, "unbedingt": [188, 203, 1179], "beispielprogramm": 188, "horcht": 188, "gesprochen": 188, "ausf\u00fchrlich": [188, 273], "schamlos": 188, "eigenwerbung": 188, "\u00fcberbleibsel": 188, "ehemaligen": 188, "socketcan": [188, 931, 932], "absorbiert": 188, "worden": [188, 197, 1179], "enth\u00e4lt": [188, 203], "schnuckelig": 188, "aufzeichnen": 188, "replai": [188, 932], "folien": [188, 197, 205, 1178], "freitag": [188, 1179], "kerneldrivertag": 188, "sorri": [188, 194, 872], "emanuel": 188, "beispieldriv": 188, "han": 188, "findet": [150, 188], "angeboten": [188, 1178], "promin": [188, 747, 829], "implementiert": [188, 203, 234, 1188, 1202], "gute": [188, 205, 1188, 1195], "anfang": [188, 189, 197, 348], "mcp2515": [188, 833], "angesprochen": [188, 205], "fortgeschrittener": [188, 205], "einpflegt": 188, "agiert": 188, "mcp251x": 188, "at91": 188, "soc": [188, 937, 938, 939, 973], "deinem": 188, "stecker": 188, "verbaut": 188, "at91_can": 188, "lacht": 188, "zeilenweisen": 189, "nutzdaten": [189, 242], "extrahieren": [189, 216], "wollend": [189, 1195], "spalt": 189, "offensichtlich": [189, 1182], "separiert": 189, "felder": 189, "antwort": [189, 290, 332], "stdtype": 189, "gscheitesten": 189, "aufeinanderfolgend": 189, "whitespac": [189, 250, 258, 304, 396, 1077, 1100, 1156], "nimmt": [189, 214, 226, 250, 252, 258, 290, 1181, 1194], "tupl": [189, 202, 207, 209, 211, 215, 219, 221, 227, 228, 230, 234, 237, 240, 241, 243, 244, 246, 247, 251, 253, 254, 255, 260, 263, 266, 267, 269, 279, 281, 284, 287, 288, 291, 301, 303, 305, 309, 310, 322, 325, 327, 333, 335, 337, 339, 345, 348, 350, 365, 521, 730, 785, 786, 1035, 1053, 1054, 1061, 1062, 1067, 1076, 1079, 1108, 1131, 1184], "weiss": [189, 193, 203, 322, 1197, 1202], "rauskommen": 189, "aaa": [189, 250, 262, 268, 304, 338], "tbbb": 189, "tccc": 189, "feld0": 189, "feld1": 189, "feld2": 189, "ccc": [189, 268], "optional": [189, 1181], "splittet": 189, "bearbeitet": [189, 1201], "manuel": [189, 213, 218], "ddd": 189, "eee": 189, "maxsplit": [189, 258, 304, 474], "restfield": 189, "len": [189, 190, 191, 193, 203, 213, 218, 220, 221, 226, 229, 230, 234, 235, 239, 242, 245, 250, 252, 255, 258, 262, 265, 268, 280, 283, 290, 300, 304, 311, 322, 326, 332, 338, 344, 348, 357, 360, 474, 829, 933, 1034, 1047, 1060, 1062, 1068, 1070, 1077, 1079, 1081, 1082, 1126, 1144, 1148, 1152, 1155], "10101010": 189, "switchnumb": 189, "rsplit": [189, 258, 304, 474, 1077], "l1": [189, 192, 203, 220, 226, 229, 239, 242, 245, 250, 252, 258, 262, 265, 268, 271, 280, 283, 287, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 512], "l2": [189, 192, 203, 220, 226, 229, 234, 239, 242, 245, 252, 258, 262, 265, 268, 271, 280, 283, 287, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348], "\u00e4nderung": [189, 203, 1202], "87": [189, 203, 213, 218, 220, 226, 229, 235, 242, 245, 250, 252, 258, 262, 265, 268, 271, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 360, 365, 370, 1088, 1135, 1136], "zeigen": [189, 920], "dasselb": 189, "objekt": [189, 203, 213, 304], "140070310441600": 189, "ver\u00e4ndert": 189, "91": [150, 189, 203, 213, 218, 220, 226, 229, 235, 239, 242, 245, 250, 252, 255, 258, 262, 265, 271, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 360, 365, 370, 1135, 1136], "140070371015728": 189, "92": [189, 190, 213, 218, 220, 222, 226, 229, 235, 242, 245, 250, 252, 255, 258, 262, 265, 268, 271, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 360, 365, 370, 917, 1135, 1136], "attributeerror": [189, 203, 239, 245, 250, 252, 255, 258, 262, 265, 268, 271, 280, 283, 287, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 1030, 1043, 1044, 1051], "gottseidank": 189, "alternativ": [189, 348], "aufruf": [189, 203, 209, 213, 258, 361], "paaren": 189, "keyerror": [189, 192, 203, 213, 220, 229, 239, 242, 245, 250, 252, 255, 258, 265, 268, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 360, 1030, 1079, 1153], "nix": [189, 190, 203, 221, 229, 250, 252, 255, 280, 300, 332, 338, 360, 550], "umstaendlich": 189, "102": [189, 203, 213, 218, 220, 226, 235, 239, 242, 245, 250, 252, 255, 258, 262, 265, 268, 271, 280, 283, 287, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 360, 365, 370], "103": [189, 203, 213, 220, 226, 235, 242, 245, 250, 252, 255, 258, 262, 265, 268, 271, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 360], "104": [189, 191, 203, 213, 218, 220, 226, 239, 242, 245, 250, 252, 255, 258, 262, 265, 268, 271, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 360, 1088], "106": [189, 203, 213, 218, 220, 226, 229, 235, 239, 242, 245, 250, 252, 255, 258, 262, 265, 268, 280, 283, 287, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 360, 915], "setdefault": [189, 230, 250, 265, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 1079], "107": [189, 203, 213, 218, 220, 222, 226, 229, 242, 245, 250, 252, 258, 262, 265, 268, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 360, 362, 461], "meinvoelligsinnlosertyp": 189, "sinnlose_addit": 189, "sinnlobj": 189, "112": [189, 203, 210, 213, 218, 220, 226, 235, 239, 242, 245, 250, 252, 258, 262, 265, 268, 280, 283, 287, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 360, 915], "113": [189, 203, 213, 218, 220, 226, 229, 239, 242, 245, 250, 252, 258, 262, 265, 268, 271, 280, 283, 287, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 497], "__main__": [189, 193, 203, 208, 226, 229, 239, 242, 243, 245, 250, 252, 255, 258, 262, 265, 268, 271, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 360, 365, 1031, 1034, 1038, 1044, 1052, 1159, 1165], "0x7f64a8934890": 189, "114": [189, 191, 203, 213, 220, 226, 235, 239, 242, 245, 250, 252, 258, 262, 265, 268, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348], "115": [189, 203, 213, 218, 220, 226, 239, 242, 245, 250, 252, 258, 262, 265, 268, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348], "116": [189, 203, 213, 220, 226, 235, 239, 242, 245, 250, 252, 255, 258, 262, 265, 268, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348], "nochwenigersinnvol": 189, "der_absolute_unsinn": 189, "super": [189, 205, 206, 213, 227, 229, 230, 245, 253, 256, 260, 279, 283, 294, 303, 325, 344, 511, 1028, 1030, 1047, 1131, 1138], "unsinn": 189, "uebertreibs_jetzt_bitt": 189, "117": [189, 203, 213, 220, 226, 239, 242, 245, 250, 252, 255, 258, 262, 265, 268, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348], "118": [189, 203, 213, 220, 235, 239, 242, 245, 250, 252, 255, 258, 262, 265, 268, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 915, 1088], "0x7f64a894a790": 189, "119": [189, 203, 213, 220, 222, 229, 242, 245, 250, 252, 258, 262, 265, 268, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 362], "121": [189, 191, 203, 213, 220, 226, 229, 235, 242, 245, 250, 252, 258, 262, 265, 268, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348], "1335": 189, "122": [189, 191, 203, 213, 218, 220, 226, 229, 239, 242, 245, 250, 252, 255, 258, 262, 265, 268, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 1009], "819508": 189, "123": [189, 203, 213, 220, 221, 226, 229, 235, 239, 242, 245, 250, 252, 255, 258, 262, 265, 268, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 407, 932, 1088, 1095, 1165], "uptim": 189, "timedelta": [189, 208, 235, 237, 290], "358": [189, 245, 290, 304, 322, 332, 338, 348, 468], "125": [189, 213, 218, 220, 226, 229, 239, 242, 245, 250, 252, 258, 262, 265, 268, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348], "irgendwann_einmal_gewesen": 189, "834972": 189, "126": [189, 203, 213, 218, 220, 226, 229, 242, 245, 250, 252, 255, 258, 262, 265, 268, 280, 283, 300, 304, 310, 322, 326, 332, 338, 344, 348], "datetime_from_batteri": 189, "840837": 189, "127": [189, 203, 213, 218, 220, 226, 229, 235, 242, 245, 250, 252, 258, 262, 265, 268, 280, 283, 300, 304, 310, 322, 326, 332, 338, 344, 348, 948, 956], "846889": 189, "woher": [189, 252], "ausschauen": 189, "sinnlo": [189, 252], "sinnlos": [189, 226, 304], "repraesent": 189, "129": [189, 203, 213, 220, 222, 229, 239, 242, 245, 250, 252, 255, 258, 262, 265, 268, 271, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 362], "130": [189, 203, 213, 220, 235, 242, 245, 250, 252, 255, 258, 262, 265, 268, 280, 283, 290, 294, 300, 304, 310, 322, 326, 332, 338, 344, 348, 690, 806, 1075], "completedprocess": [189, 258, 268], "returncod": [189, 258, 268], "erfolgreich": 189, "beendet": [189, 1200], "schau": 189, "du": [189, 203, 258, 265, 271, 956, 961], "verwendest": 189, "anzuzeigen": [189, 344], "cell": [189, 202, 349, 930, 1028, 1029, 1030, 1035, 1043, 1044, 1050, 1051, 1055, 1072, 1073, 1077, 1136, 1152, 1153], "gesendet": 189, "ausf\u00fchrt": 189, "krieg": 189, "131": [189, 203, 213, 220, 229, 235, 242, 245, 250, 252, 258, 262, 265, 268, 280, 283, 300, 304, 310, 322, 326, 332, 338, 344, 348, 740], "capture_output": [189, 268], "ndrwxrwxr": [189, 268], "mar": [189, 258, 407, 860, 861, 864, 878, 890, 912, 915, 917, 941, 955, 965, 1007, 1010, 1019], "2607": 189, "33768": 189, "ndrwxr": 189, "xr": [189, 485, 860, 861, 878, 880, 881, 889, 890, 915, 930, 937, 938, 939, 1007, 1019, 1021, 1022, 1058], "switchzeug": 189, "keiner": [189, 203, 322, 1183], "seinen": [189, 203], "formuliert": [189, 197], "logisch": [189, 213], "irgendwa": [189, 235, 250, 252], "konverti": 189, "musst": 189, "dich": 189, "festlegen": 189, "133": [189, 203, 213, 220, 242, 245, 250, 252, 258, 262, 265, 268, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348], "stdout_as_utf8": 189, "utf": [189, 230, 239, 242, 243, 245, 249, 255, 258, 268, 290, 304, 310, 322, 326, 332, 338, 344, 1062, 1081, 1128], "134": [189, 203, 213, 220, 229, 242, 245, 250, 252, 255, 258, 262, 265, 268, 271, 280, 283, 300, 304, 310, 322, 326, 332, 338, 344, 348, 749], "135": [189, 203, 213, 220, 229, 242, 245, 250, 252, 258, 262, 265, 268, 271, 280, 283, 300, 304, 310, 322, 326, 332, 338, 344, 348], "drwxrwxr": [189, 268, 915, 973, 1008, 1009, 1010, 1019, 1021], "drwxr": [189, 860, 861, 878, 915, 930, 937, 938, 939, 1019, 1021], "136": [189, 191, 203, 213, 220, 229, 242, 245, 250, 252, 255, 258, 262, 265, 268, 280, 283, 300, 304, 310, 322, 326, 332, 338, 344, 348, 486], "fuer": [189, 250, 255, 262], "listdir": [189, 296, 300, 332, 338, 349, 372, 474], "ipynb_checkpoint": [189, 268, 332], "gitignor": [189, 475, 1009], "137": [189, 200, 203, 213, 220, 242, 245, 250, 252, 255, 258, 262, 265, 268, 271, 280, 283, 300, 304, 310, 322, 326, 332, 338, 344, 348], "rekurs": 189, "iterieren": [189, 193, 203, 218, 226], "dirpath": 189, "dirnam": [189, 242, 245, 296, 474, 549, 784, 1164], "checkpoint": [189, 239, 245, 255, 258], "itg": 189, "scope": [189, 197, 203, 214, 215, 218, 249, 261, 274, 275, 277, 286, 298, 309, 320, 324, 325, 330, 331, 334, 336, 337, 342, 343, 346, 347, 365, 402, 408, 512, 562, 582, 595, 597, 606, 691, 732, 744, 747, 762, 763, 785, 786, 1029, 1074, 1184, 1194, 1198], "getter": [189, 603, 651], "setter": [189, 229, 1051], "fibo": [189, 190, 209, 229, 243, 718, 720, 1034], "listcomprehens": 189, "generatorexpress": [189, 190], "switchdb": 189, "schema": [189, 270, 592, 1087], "michi": 189, "pyexec": 189, "ifadminstatu": 189, "ifdescr": 189, "iflastchang": 189, "snmpenginetim": 189, "ifoperstatu": 189, "fein": [189, 213], "helferlein": 189, "hochtrabend": 189, "nennt": 189, "funktional": 189, "138": [189, 203, 213, 220, 229, 242, 245, 250, 252, 258, 262, 265, 268, 280, 283, 300, 304, 310, 322, 326, 332, 338, 344, 348, 1088], "139": [189, 203, 213, 220, 229, 242, 245, 250, 252, 258, 262, 265, 268, 280, 283, 300, 304, 310, 322, 326, 332, 338, 344, 348], "140": [189, 203, 213, 220, 229, 242, 245, 250, 252, 255, 258, 262, 265, 268, 271, 280, 283, 287, 300, 304, 310, 322, 326, 332, 338, 344, 348, 690], "l_quadrat": 189, "141": [189, 203, 213, 220, 242, 245, 250, 252, 258, 262, 265, 268, 271, 280, 283, 300, 304, 310, 322, 326, 332, 338, 344, 348, 407, 915], "kompliziert": [189, 203, 255, 258, 280, 1179, 1198], "anm": 189, "versionen": [189, 259], "aufgebaut": 189, "rausnehmen": 189, "konfigurationsfil": 189, "configpars": 189, "142": [189, 203, 213, 220, 229, 242, 245, 250, 252, 258, 262, 265, 268, 280, 283, 287, 300, 304, 310, 322, 326, 332, 338, 344, 348, 950, 995], "143": [189, 203, 213, 220, 229, 242, 245, 250, 252, 255, 258, 262, 265, 268, 271, 280, 283, 300, 304, 310, 322, 326, 332, 338, 344, 348], "liste_als_str": 189, "144": [189, 203, 213, 220, 229, 236, 242, 245, 250, 252, 255, 258, 262, 265, 268, 271, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 486], "145": [189, 203, 213, 220, 229, 242, 245, 250, 252, 255, 258, 262, 265, 268, 271, 280, 283, 300, 304, 310, 322, 326, 332, 338, 344, 348, 1149], "herbert": 189, "146": [189, 203, 213, 220, 229, 242, 245, 250, 252, 258, 262, 265, 268, 271, 280, 283, 300, 304, 310, 322, 326, 332, 338, 344, 348], "heraussen": 189, "147": [189, 203, 213, 220, 229, 242, 245, 250, 252, 255, 258, 262, 265, 268, 280, 283, 300, 304, 310, 322, 326, 332, 338, 344, 348, 868], "148": [189, 203, 213, 220, 229, 242, 245, 250, 252, 258, 262, 265, 268, 271, 280, 283, 300, 304, 310, 322, 326, 332, 338, 344, 348, 609], "149": [189, 203, 213, 220, 242, 245, 250, 252, 255, 258, 262, 265, 268, 271, 280, 283, 300, 304, 310, 322, 326, 332, 338, 344, 348], "151": [189, 203, 213, 220, 229, 242, 245, 250, 252, 258, 262, 265, 268, 271, 280, 283, 300, 304, 310, 322, 326, 332, 338, 344, 348, 372], "152": [189, 203, 213, 220, 229, 242, 245, 250, 252, 258, 262, 265, 268, 280, 283, 300, 304, 310, 322, 326, 332, 338, 344, 348, 372, 1153], "mein_dict": 189, "gerhard": 189, "175": [189, 203, 220, 229, 242, 245, 250, 252, 255, 258, 262, 265, 268, 280, 283, 304, 310, 322, 326, 332, 338, 344, 348], "154": [189, 203, 213, 220, 229, 242, 245, 250, 252, 258, 262, 265, 268, 280, 283, 300, 304, 310, 322, 326, 332, 338, 344, 348, 915], "dict_as_json_str": 189, "155": [189, 203, 213, 220, 229, 242, 245, 250, 252, 255, 258, 262, 265, 268, 271, 280, 283, 300, 304, 310, 322, 326, 332, 338, 344, 348, 372], "gelesenes_dict_von_json": 189, "nahm": 190, "woch": [190, 210, 383, 384, 1179], "anspruch": 190, "platz": 190, "gesammelten": 190, "notizen": 190, "schnell": [190, 193, 213, 234, 259, 1182], "sachen": [190, 216], "is_prim": [190, 213, 216, 221, 1110], "divisor": [190, 221, 348, 784, 1102], "unmodifi": [190, 203, 239, 250, 495, 546, 592, 606, 937, 939, 1030, 1043, 1113], "randomnumb": 190, "howmani": 190, "randrang": [190, 218, 242, 250, 252, 255, 258, 262, 265, 268, 290, 332, 338, 344, 348, 360, 1031, 1066], "prev": [190, 823], "cur": [190, 310, 412], "fibonum": 190, "tend": [190, 289, 292, 299, 462, 806, 872, 1022], "input_list_str": 190, "input_list": [190, 265, 1113], "__n": [190, 784], "__lt__": [190, 252, 255, 258, 262, 280, 283, 304, 322, 344], "rh": [190, 239, 243, 258, 348, 400, 442, 458, 512, 526, 592, 606, 608, 732], "__le__": [190, 252, 255, 258, 262, 280, 283, 304, 322, 344, 1050], "__eq__": [190, 252, 255, 258, 262, 280, 283, 304, 322, 344, 1050], "__iadd__": 190, "iadd": 190, "__add__": [190, 255, 258, 262, 280, 304, 322, 344, 1050], "new_numb": [190, 245], "__radd__": [190, 255, 262, 280, 344, 1050], "radd": 190, "lh": [190, 239, 243, 348, 400, 442, 458, 512, 526, 582, 592, 606, 608, 732, 864], "makesnosens": 190, "__number": 190, "input_numb": 190, "numnber": 190, "list_of_squar": 190, "compehens": 190, "effort": [190, 262, 296, 455, 456, 473, 938], "local_assign": 190, "read_global_vari": 190, "enclos": [190, 258, 425], "local_shadows_glob": 190, "explicit_global_assign": 190, "creation": [190, 299, 321, 756, 758, 763, 785, 786, 892, 929, 959, 970, 975, 984, 990, 1001, 1010, 1072, 1081, 1082, 1166], "captur": [190, 273, 274, 275, 277, 297, 334, 335, 350, 365, 730, 731, 734, 785, 786, 930, 1026, 1184], "create_funct": 190, "inner_funct": 190, "whic": 190, "f_one": 190, "f_two": 190, "launch": [190, 206], "discov": [190, 202, 209], "area": [190, 199, 232, 262, 829, 938, 1195, 1201], "scikit": [191, 193, 240, 349, 1166], "manipul": [191, 477, 626, 749, 784, 831, 937, 950, 959, 994, 1006, 1069, 1087], "appreci": [191, 242, 872, 1088], "spectral": [191, 1133], "mat": 191, "scipi": [191, 193, 221, 240, 1166], "loadmat": [191, 193], "sklearn": [191, 193, 348, 1134, 1136, 1166], "pixel": [191, 348], "rgb": [191, 193, 348, 374], "dimens": [191, 193, 1136, 1187], "xkcd": 191, "schafer": [191, 202, 205, 206, 209, 227, 230, 237, 240, 243, 253, 256, 267, 270, 279, 303, 309, 337, 365, 370, 1131, 1149, 1150, 1152, 1153, 1154, 1155, 1157, 1167], "keith": [191, 202, 206, 227, 240, 253, 267, 270, 303, 309, 1131], "galli": [191, 202, 206, 227, 240, 253, 267, 270, 303, 309, 1131], "sci": 191, "kit": [191, 374], "spyder": [191, 202, 1055], "pycharm": [191, 202, 296, 1055], "retain": [191, 431, 1073], "invoc": [191, 512], "comparison": [191, 208, 231, 245, 248, 258, 266, 304, 407, 411, 417, 568, 732, 1064, 1106], "misfeatur": 191, "png": [191, 193, 338, 348, 481, 1009, 1133], "imgfil": 191, "veggi": [191, 193, 348, 1133], "pillow": [191, 193], "welcom": 191, "cooper": [191, 757], "477x686": 191, "imgarrai": [191, 193], "ndim": [191, 1136], "477": [191, 245, 290, 338, 348], "dtype": [191, 193, 287, 290, 294, 326, 332, 344, 348, 1136, 1149, 1150, 1152, 1153, 1154, 1155], "uint8": [191, 348], "255": [191, 226, 242, 245, 250, 252, 255, 258, 262, 265, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 986], "172": [191, 203, 220, 242, 245, 250, 252, 255, 258, 262, 265, 268, 271, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 457], "nrow": [191, 193], "ncol": [191, 193], "reshap": [191, 193, 227, 240, 253, 267, 270, 303, 309, 348, 1131, 1134, 1136], "irrelev": [191, 208, 213, 246, 407, 449, 472, 878, 1062, 1144], "colorspac": 191, "mpl_toolkit": 191, "mplot3d": 191, "axes3d": 191, "pyplot": [191, 220, 239, 268, 271, 322, 326, 332, 344, 1027, 1085, 1136], "plt": [191, 220, 239, 268, 271, 322, 326, 332, 344, 1027, 1085, 1136], "fig": 191, "add_subplot": 191, "set_xlabel": 191, "set_ylabel": 191, "set_zlabel": 191, "ndindex": 191, "scatter": [191, 804], "rgb_linear": [191, 348], "n_cluster": [191, 193, 348], "copy_x": 191, "max_it": 191, "n_init": 191, "n_job": 191, "precompute_dist": 191, "random_st": [191, 1134, 1136], "tol": 191, "verbos": [191, 198, 477, 750, 859, 893, 895, 1066, 1159], "cluster_cent": 191, "int32": [191, 348, 458], "327222": 191, "cluster_centers_": [191, 193, 348], "20529747": 191, "50360681": 191, "3796182": 191, "94408609": 191, "75471018": 191, "53133237": 191, "226": [191, 203, 222, 242, 245, 250, 252, 255, 258, 262, 265, 268, 283, 290, 300, 304, 310, 322, 326, 338, 344, 348, 362], "64913628": 191, "76939951": 191, "92569235": 191, "71464963": 191, "47333306": 191, "60640492": 191, "8888303": 191, "92275244": 191, "84313209": 191, "157": [191, 203, 213, 220, 242, 245, 250, 252, 258, 262, 265, 268, 280, 283, 300, 304, 310, 322, 326, 332, 338, 344, 348], "30685398": 191, "43988931": 191, "03959132": 191, "225": [191, 203, 242, 245, 250, 252, 258, 262, 265, 268, 283, 290, 304, 310, 326, 332, 338, 344, 348, 481, 1088], "55934051": 191, "182": [191, 203, 220, 242, 245, 250, 252, 255, 258, 262, 265, 271, 280, 283, 300, 304, 310, 322, 326, 332, 338, 344, 348], "98255893": 191, "3232048": 191, "241": [191, 242, 245, 250, 252, 255, 258, 265, 268, 283, 300, 304, 310, 326, 338, 344, 348, 1088], "37322907": 191, "159": [191, 203, 213, 220, 242, 245, 250, 252, 255, 258, 262, 265, 268, 280, 283, 300, 304, 310, 322, 326, 332, 338, 344, 348], "54158234": 191, "51775529": 191, "idx": [191, 193, 258, 344, 348], "cube": [191, 348], "concaten": [191, 193, 230, 242, 243, 250, 258, 304, 332, 348, 359, 407, 473, 918, 1067, 1075], "axi": [191, 193, 294, 348, 1152, 1153], "reduced_img": [191, 193, 348], "fromarrai": [191, 193, 348], "float": [192, 203, 207, 209, 211, 213, 220, 221, 226, 229, 239, 242, 243, 245, 248, 250, 252, 255, 258, 263, 266, 280, 283, 288, 300, 304, 310, 321, 323, 326, 332, 338, 344, 348, 360, 361, 388, 389, 390, 394, 404, 406, 407, 411, 441, 450, 455, 474, 502, 511, 617, 618, 707, 766, 937, 995, 1005, 1043, 1061, 1076, 1083, 1088, 1181, 1185], "franziska": [192, 193], "baseexcept": [192, 229, 258, 262, 283, 1030], "callabl": [192, 206, 242, 255, 265, 268, 283, 290, 300, 304, 311, 338, 690, 732, 754, 762, 1044, 1045, 1082], "forev": [192, 432, 433], "rescu": [192, 250, 605, 626, 748, 750, 833, 1028], "pooh": [192, 618], "hex": [192, 203, 213, 220, 235, 245, 255, 268, 280, 283, 290, 300, 310, 326, 332, 338, 348, 360, 376, 549, 939, 1076], "0x7f03d41165f0": 192, "nonexist": 192, "react": [192, 207, 209, 211, 312, 328, 454, 615, 937, 954, 1030, 1186], "ensu": 192, "catch": [192, 232, 248, 271, 297, 350, 376, 492, 499, 521, 538, 555, 557, 590, 616, 619, 635, 641, 645, 650, 654, 657, 658, 675, 682, 683, 684, 685, 686, 687, 718, 726, 764, 766, 784, 786, 1005], "jessa": [192, 213, 220, 242, 271, 322], "verdammt": [192, 365], "ipython": [192, 229, 239, 245, 255, 258, 283, 300, 338, 915], "bd3a1af9b474": 192, "issubclass": [192, 229, 245, 258, 283], "rais": [192, 193, 207, 209, 211, 229, 230, 239, 243, 245, 246, 250, 252, 255, 256, 258, 262, 270, 271, 304, 321, 350, 376, 1028, 1035, 1041, 1051, 1077, 1079, 1152, 1153], "bummer": [192, 245, 764, 1075], "peter": [192, 215, 252, 262, 356, 357, 1068], "paul": [192, 356, 357, 1068], "mari": [192, 1068], "pet": 192, "bloh": [192, 229], "blech": [192, 300, 703, 1147], "range_iter": [192, 203, 218, 235, 242, 250, 252, 255, 258, 268, 280, 283, 290, 300, 348], "0x7f03d402e570": 192, "stopiter": [192, 203, 218, 229, 235, 239, 242, 245, 250, 252, 255, 258, 262, 268, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 718, 726, 1030, 1035], "beantwortung": [193, 383], "herrschaft": [193, 383], "gestellt": [150, 193, 203, 383, 1183], "schulungsr\u00e4umen": [193, 383], "platzhirsch": [193, 383], "schlagen": [193, 383], "spass": [193, 383, 1188, 1190, 1195], "unglaublich": [193, 383], "lustig": [193, 214, 383, 1179, 1190], "vermittelt": [193, 383, 1200], "gelernt": [193, 383, 1188], "anwend": [193, 383], "beachten": [193, 214, 383, 1194], "zudem": [193, 383], "kursleit": [193, 383], "sympathisch": [193, 383], "kompet": [193, 383], "w\u00fcrde": [193, 203, 383], "weiterempfehlen": [193, 383], "wiederholen": [150, 193, 383], "christoph": [193, 235, 383], "jemand": [193, 383], "lassen": [193, 203, 214, 383, 1182, 1188, 1194, 1198, 1202], "bevor": [193, 1188, 1195, 1202], "anf\u00e4ngerthemen": 193, "vorbei": [193, 252, 258, 1191], "herumzureiten": 193, "gehackt": [193, 233], "zeug": [193, 322, 1197], "chef": 193, "vorgespr\u00e4ch": 193, "\u00fcbungsbeispiel": [193, 203], "mitgegeben": 193, "ausgehend": [193, 214, 383], "spektralbild": 193, "sagt": [193, 250], "verwend": [193, 226, 383], "clusteringalgorithmu": 193, "kategorisieren": 193, "abgebildeten": 193, "st\u00fccke": [193, 197], "erkennen": [193, 1183], "hab": 193, "erlaubt": [193, 203, 1179], "kursvorbereitung": 193, "appet": 193, "reduzieren": 193, "farbredukt": 193, "farben": 193, "bilddaten": 193, "interoperiert": 193, "nahtlo": [193, 1188, 1195], "zufal": [193, 219, 1182], "alpha": [193, 258, 304, 348, 1086], "ausgangsbild": 193, "abzuschneiden": 193, "restoren": 193, "algorithmu": [193, 213, 258, 262, 265], "reduc": [193, 348, 418, 427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 490, 692, 730, 783, 785, 786, 939, 1133], "acht": [193, 213, 214, 258, 290, 310, 338, 1194], "\u00fcberschaubar": 193, "ausdrucksst\u00e4rk": 193, "bemerkbar": 193, "wegschneiden": 193, "pil": [193, 348], "kmean": [193, 348], "nrgba": 193, "disregard": [193, 411], "arbitrarili": [193, 792, 965, 969, 1028], "linear_rgb": 193, "rgba": 193, "ergeben": 193, "testprogramm": 193, "imndata": 193, "teilzeitmitarbeiterin": 193, "studiert": 193, "folgendem": [193, 235, 1202], "bekackten": 193, "inputformat": 193, "parsen": [193, 218], "zwischendurch": 193, "gruppenarbeit": 193, "h2o": 193, "dat": 193, "mass": [193, 299], "0000000e": 193, "2662399e": 193, "5994910e": 193, "4391972e": 193, "0048070e": 193, "0078250e": 193, "hessian": 193, "hartre": 193, "bohr": 193, "kamu": 193, "05054e": 193, "61610e": 193, "00000e": 193, "20781e": 193, "08051e": 193, "83024e": 193, "06829e": 193, "42629e": 193, "65256e": 193, "52600e": 193, "69570e": 193, "91733e": 193, "04388e": 193, "34292e": 193, "04780e": 193, "63758e": 193, "19019e": 193, "41217e": 193, "11622e": 193, "21912e": 193, "11752e": 193, "04198e": 193, "36702e": 193, "14839e": 193, "71613e": 193, "96373e": 193, "40456e": 193, "21369e": 193, "24236e": 193, "60956e": 193, "84350e": 193, "29686e": 193, "92365e": 193, "einigen": [193, 214, 383], "runden": [193, 203], "nachdenken": 193, "einigerma\u00dfen": 193, "zufrieden": 193, "load_dat": 193, "matrix_lin": 193, "readlin": [193, 220, 222, 229, 230, 242, 243, 249, 258, 265, 290, 300, 326, 332, 338, 344, 357, 893, 1081], "vergeigt": 193, "matrix_el": 193, "unnecessari": [193, 402, 432], "triangular": 193, "max": [193, 203, 221, 226, 239, 245, 248, 250, 252, 255, 260, 265, 283, 337, 338, 348, 416, 432, 568, 617, 870, 931, 1136], "row_no": 193, "__name__": [193, 229, 230, 243, 252, 258, 262, 283, 300, 304, 358, 365, 1029, 1031, 1034, 1038], "bildverarbeitung": 193, "ahnung": [193, 235], "beeeeeep": 194, "broad": [194, 491, 1138, 1184, 1185], "histori": [194, 230, 248, 274, 275, 277, 279, 325, 334, 335, 411, 688, 692, 694, 730, 783, 785, 786, 792, 835, 864, 870, 921, 1131, 1137, 1143, 1186, 1190, 1197], "responsibl": [194, 992, 1164], "sane": [194, 338, 376, 870, 1139, 1164], "interfer": [194, 462, 475, 938], "paradigm": [194, 869, 877, 930, 938, 1199], "breakag": [194, 813], "nontrivi": [194, 202, 206, 367, 1055, 1158], "inappropri": [194, 389, 394, 495, 791], "conclus": [194, 202, 209, 831], "awkward": 194, "encourag": [194, 792], "hear": 194, "predat": [194, 796, 922, 1001], "doubt": [194, 239, 245, 255, 258, 262, 749, 1062], "schulungsbeschreibung": [195, 1178], "drehbuch": 195, "workshop": 195, "infolgedessen": 195, "virtuel": [195, 259, 1188, 1198, 1199], "konzipiert": [195, 205, 383], "add_subdirectori": [196, 482, 486, 999, 1173], "group1": 196, "group2": 196, "montag": [197, 205, 206, 227, 231, 1179], "vorbereitung": [197, 383, 1181], "mitbringen": 197, "teilzunehmen": 197, "stattfinden": [197, 273], "folgt": 197, "hierzu": 197, "privatheitsrichtlinien": 197, "bauanleitung": 197, "ausprobieren": 197, "willkommen": 197, "schulungsbeschreibungen": 197, "raii": [197, 299, 590, 786], "stl": [197, 374, 438, 551, 552, 553, 554, 556, 558, 559, 560, 561, 563, 564, 565, 566, 567, 590, 591, 629, 633, 655, 657, 658, 672, 687, 698, 786, 1183, 1184, 1185], "scott": [197, 697, 752], "meyer": [197, 500, 752], "primer": [197, 1171], "sonstig": 197, "argh": [197, 433, 684, 712, 1030, 1159, 1171], "kursanforderung": 197, "erg\u00e4nzend": 197, "lasst": 197, "testgetrieben": 197, "testcas": [197, 1165], "aufgab": [197, 203, 233, 1191], "hacken": 197, "diskutieren": 197, "niederschrift": 197, "geschehenen": 197, "geh\u00f6renden": 197, "privaten": 197, "verl\u00e4uft": 197, "ansehen": 197, "clonen": 197, "wann": [197, 205], "zugeh\u00f6rigen": 197, "entspricht": 197, "unbetr\u00e4chtlich": 197, "gcc5": 197, "laufen": [197, 1179], "darau": [197, 205], "installationsanleitung": 197, "benutzung": [197, 365, 370], "zuerst": [197, 1202], "aggreg": [197, 463, 474, 592, 845, 1149, 1171], "klassen": [197, 203, 209, 366, 1183], "konstruktoren": [197, 221, 273, 366, 1183], "methoden": [197, 203, 215, 360, 1183], "referenzen": [197, 203, 214, 215, 273, 1183, 1194], "klass": [197, 226, 322], "\u00e4quival": 197, "\u00fcbergab": 197, "langsam": [197, 203, 252], "ausbauen": 197, "dynmem": 197, "demonstrieren": 197, "alloziert": [197, 203, 220], "konstruktor": 197, "destruktor": 197, "vermeiden": [197, 203, 1200], "dtor": [197, 490, 576, 662, 667, 698, 701, 735], "ausflug": [197, 213, 254], "capac": [197, 643], "\u00fcbung": [197, 214, 215, 1194], "handgestrickt": 197, "fallen": [197, 1182, 1183], "lustvol": 197, "erleiden": 197, "teufel": [197, 1182], "smart": [197, 273, 295, 334, 366, 367, 368, 383, 472, 549, 659, 699, 700, 730, 750, 755, 763, 771, 783, 785, 786, 1184, 1187], "shared_ptr": [197, 232, 248, 274, 275, 277, 295, 297, 334, 335, 504, 568, 659, 690, 699, 730, 745, 751, 752, 755, 763, 783, 785, 786, 1184], "unique_ptr": [197, 232, 248, 274, 275, 277, 295, 297, 334, 335, 490, 497, 504, 530, 531, 568, 659, 698, 699, 730, 745, 748, 755, 763, 782, 783, 784, 785, 786, 1184], "demonstriert": 197, "vorgriff": 197, "sortieren": [197, 1183], "employeerecord": 197, "parametrisierbarem": 197, "koordinatentyp": 197, "102ff": 197, "arten": [197, 1181], "containern": 197, "pointerarithmetik": 197, "wiederholung": [150, 197, 214, 221, 257, 1194], "iteratoren": [197, 260], "laufzeitverhalten": [197, 215], "verbesserungen": 197, "gegen\u00fcb": [197, 1181], "6ff": 197, "lambda": [197, 229, 230, 243, 245, 248, 260, 273, 280, 297, 300, 305, 322, 326, 338, 474, 568, 633, 705, 730, 735, 740, 742, 754, 757, 762, 785, 786, 1026, 1183, 1184, 1185], "gegen\u00fcberstellung": 197, "sort_algorithm_reverse_lambda": 197, "vererbung": [197, 1183], "fallstudi": 197, "livegehackt": 197, "angebunden": 197, "komplex": [197, 250, 252, 258, 265, 290, 1200], "aufbauen": 197, "vergleichbaren": 197, "anbinden": 197, "wurden": [197, 205], "eigen": [197, 216, 1183, 1188, 1195, 1200, 1201], "kapitel": [197, 365, 370, 1181], "behandelt": [197, 1178], "vorbeigehen": 197, "dcmake_cxx_flag": 198, "dcmake_install_prefix": [198, 480], "libgtest": [198, 199, 295, 297, 1171, 1173], "claim": [198, 400, 609, 611, 612, 868, 961], "simlp": 198, "concret": [198, 206, 232, 295, 490, 497, 502, 517, 579, 665, 667, 762, 770, 1043, 1138], "find_packag": [198, 200, 1173], "add_execut": [198, 475, 481, 487, 533, 569, 572, 575, 578, 581, 584, 587, 681, 996, 1003, 1008, 1009, 1170, 1173, 1175], "add_test": [198, 488, 572, 1170, 1173], "emphasi": 198, "ultim": [198, 229, 249, 600, 765, 938], "luke": [198, 258, 1173], "thetoplevel": 198, "findgtest": [198, 200, 1173], "gtest_root": 198, "dgtest_root": 198, "paranoidli": 198, "bitrot": [199, 1173], "var": [199, 203, 242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344, 526, 833, 865, 895, 915, 920, 921, 924, 1021], "libgmock": [199, 295, 297], "gmock": [199, 1171], "dcmake_build_typ": [199, 477], "loudli": [199, 600, 836, 946], "flathub": 200, "appstream": [200, 338], "visualstudio": [200, 259, 385], "flatpakref": 200, "stone": 200, "snap": 200, "hate": [200, 594], "findpackagehandlestandardarg": 200, "gtest_librari": 200, "gtest_include_dir": 200, "gtest_main_librari": 200, "378": [200, 242, 245, 252, 290, 332, 338, 348, 1088], "_fphsa_failure_messag": 200, "197": [200, 203, 220, 229, 242, 245, 250, 252, 255, 258, 262, 265, 271, 283, 300, 304, 310, 322, 326, 332, 338, 344, 348], "find_package_handle_standard_arg": 200, "occur": [200, 262, 392, 407, 412, 413, 459, 483, 566, 760, 831, 893, 922, 992, 1076, 1077, 1081, 1189], "gessmann": 200, "cpoint_demo": 200, "cmakefil": [200, 475, 481, 486, 1008, 1009], "cmakeoutput": 200, "sigh": [200, 232, 549, 752, 1122], "jail": 200, "dict_extensions_suit": 201, "thing_suit": 201, "xsv": 201, "dict_extens": 201, "wednesdai": [202, 210, 292], "thursdai": [202, 206], "publicli": [202, 582], "freedom": [202, 462, 668], "spontan": 202, "cost": 202, "agil": [202, 216, 472, 1158], "methodologi": 202, "formul": [202, 298, 474, 707, 765, 956, 1187], "diadact": [202, 1055], "anaconda": [202, 296, 338, 1055], "dictat": [202, 312, 328, 411, 450, 1001, 1055, 1056, 1140, 1157, 1159, 1186], "volumin": [202, 1055], "nodepad": [202, 1055], "configurabilti": [202, 1157], "eclips": [202, 1055, 1147], "pydev": [202, 1055], "seemingli": [202, 206, 1007, 1055, 1131], "strang": [202, 937, 1055], "emac": [202, 222, 300, 893, 915, 1007, 1055, 1157], "immutabilii": 202, "crisi": 202, "slept": 202, "lunch": 202, "squeez": 202, "Such": [202, 281, 1007, 1164], "takeawai": 202, "nonverb": 202, "antenna": 202, "Being": [202, 876, 917, 939, 1071], "stubborn": 202, "greybeard": 202, "distutil": 202, "azur": 202, "devop": [202, 1054], "heavyweight": [202, 371, 754], "reach": [202, 250, 674, 749, 772, 774, 792, 797, 864, 965, 1076], "afternoon": [202, 325], "simplic": [202, 512, 864, 931, 954, 1028], "paral": 202, "imposs": [202, 262, 458, 494, 718, 729, 831, 983], "expand": [202, 258, 304, 432, 433, 936, 965, 1007, 1009], "entertain": [202, 206, 227, 230, 253, 279, 303, 325, 1131], "david": [202, 205, 206, 214, 227, 230, 253, 279, 294, 298, 299, 303, 320, 324, 325, 366, 367, 698, 747], "beazlei": [202, 205, 206, 214, 227, 230, 253, 279, 298, 299, 303, 320, 324, 325, 366, 367], "freelanc": 202, "raymond": [202, 205, 206, 209, 213, 214, 227, 230, 237, 253, 256, 279, 303, 325], "hetting": [202, 205, 206, 209, 213, 214, 227, 230, 237, 253, 256, 279, 303, 325], "bias": 202, "humor": [202, 937, 1076], "emphas": [202, 209, 231, 585, 788, 796, 813, 1159], "dissect": [202, 206, 294, 735, 1035, 1131], "multiprocess": [202, 206, 256, 298, 299, 325, 1131, 1188, 1195, 1199], "truli": [202, 206, 1131], "chri": [202, 206, 227, 1131], "wilcox": [202, 206, 227, 1131], "frontier": [202, 206, 279, 303, 325, 1131], "whop": [202, 206, 279, 303, 325, 1022, 1131, 1138], "covid": 202, "apart": [202, 262, 299, 425, 691, 931, 1033], "ipykernel_launch": [203, 255, 258, 338], "57bd7d77": 203, "6e54": 203, "4dcd": 203, "b7a8": 203, "452f82f88569": 203, "welt": [203, 213, 226, 360, 383, 1179, 1200], "doku": [203, 213, 280], "aeh": 203, "__doc__": [203, 226, 229, 239, 242, 245, 250, 252, 255, 258, 262, 265, 268, 271, 280, 283, 290, 304, 322, 326, 332, 338, 344, 358, 360, 1031, 1059, 1082], "interaktiven": 203, "modu": 203, "formatierung": [203, 213, 273], "\u00fcbernimmt": 203, "nachdem": [203, 213], "welch": [150, 203, 243], "hamma": 203, "bieten": [203, 1198], "sech": [203, 213, 226, 258, 265, 290, 304], "zurueck": [203, 262, 300], "objektidentit\u00e4t": [203, 221], "0x7fe9d8578dc0": 203, "referenzieren": 203, "wechselt": 203, "zeigt": [203, 213, 1195], "identit\u00e4t": 203, "0x7fe9c4454d90": 203, "listen": [203, 209, 214, 215, 219, 254, 273, 326, 365, 817, 932, 948, 1147, 1194, 1199, 1201], "ausdrucksstark": 203, "trotzdem": [203, 1188, 1195], "lesbar": [203, 252], "beid": [203, 218, 234, 338, 1202], "modifizieren": 203, "modifik": 203, "sichtbar": [203, 383], "gerechnet": 203, "valueerror": [203, 213, 229, 235, 242, 250, 252, 255, 258, 262, 265, 268, 271, 283, 290, 304, 322, 326, 332, 338, 344, 348, 1030, 1077], "typeerror": [203, 239, 242, 245, 250, 252, 255, 258, 262, 265, 268, 280, 283, 290, 300, 304, 322, 326, 332, 338, 344, 359, 1029, 1030, 1043, 1050, 1073, 1082, 1152, 1153], "gel\u00f6scht": 203, "retten": 203, "uff": 203, "140641996429568": 203, "\u00e4ndern": [203, 215, 1202], "erzeugt": [203, 213], "operanden": 203, "unver\u00e4ndert": 203, "new_l": [203, 258, 1063], "140641996429632": 203, "hurra": [203, 220, 283], "killerfeatur": 203, "abcabc": [203, 242], "sequentiel": [203, 213, 252, 257, 1183], "suche": 203, "Suche": [203, 215, 226, 234, 252], "umst\u00e4ndlich": [203, 213], "andrea": [203, 204, 262, 711, 718], "pfeifer": 203, "gefundener_us": 203, "glauben": 203, "klammern": 203, "begrenz": 203, "interpretiert": 203, "overriden": 203, "ausdruck": 203, "evaluierungsreihenfolg": 203, "9223372036854775808": 203, "einstellig": 203, "schreibt": [203, 921, 1202], "datenmengen": 203, "abzulegen": 203, "sucht": 203, "solchen": [150, 203, 213], "vorstellungsvermoegen": 203, "milliarden": 203, "sebastian": 203, "hugo": [203, 245], "machma": 203, "behandeln": 203, "nichtvorhandensein": 203, "ausnahm": 203, "regel": 203, "mim": 203, "victor": 203, "festzustellen": 203, "evaluiert": 203, "aufgerufen": 203, "operand": [203, 220, 239, 242, 268, 409, 410, 411, 417, 608, 609, 611, 612, 707, 740, 1050, 1064], "bereit": [203, 214, 1178, 1183, 1194], "gesamtergebni": 203, "jaja": [203, 258], "rechten": 203, "sparen": 203, "potschert": [203, 215, 218, 221, 245, 252, 265, 332, 344], "berechnung": [203, 252], "summ": [203, 226, 252, 258, 262, 265, 290, 315, 338, 344, 348], "einzig": [203, 518, 532, 1197, 1200], "iteriert": [203, 213], "bildet": [203, 258], "primitiveren": 203, "intelligenteren": 203, "0x7fe9c43c3c90": 203, "letzt": [203, 218, 263], "schleif": [203, 214, 215, 219, 1194], "jede": [203, 365, 370, 1178, 1201, 1202], "selb": [203, 213], "k\u00fcrzer": 203, "vergleicht": 203, "objektidentit\u00e4ten": 203, "objektinhalt": 203, "modifiziert": 203, "kopieren": [203, 365, 370, 1183], "vermeintlich": 203, "modifiktionen": 203, "sch\u00fctzen": 203, "l3": [203, 220, 252, 258, 268, 280, 290, 300, 310, 332, 512], "kopi": [203, 252], "klar": [203, 213, 1179], "geschachtelt": [203, 214, 215, 1194], "gleicher": 203, "referenziert": [203, 213], "erachtet": 203, "ersparst": 203, "kopien": 203, "ran": [203, 275, 325, 480, 497, 546, 547, 548, 549, 610, 749, 1024, 1171], "parametern": [203, 226], "beliebigen": [203, 921], "definieren": 203, "vergleichbar": [150, 203], "unterst\u00fctzen": 203, "ihn": [203, 262], "\u00e4pfel": 203, "birnen": 203, "verglichen": 203, "hingegen": [203, 213, 1197], "php": [203, 233, 249, 752], "falschem": 203, "uebergeben": 203, "vergleich": [203, 226, 234, 263, 273], "aepfeln": 203, "140641996137808": 203, "add_to_list": 203, "__defaults__": [203, 252, 262, 283, 304, 1073], "meine_list": [203, 213], "defaultwert": 203, "benutzt": [203, 1188], "allerhand": 203, "seiteneffekten": 203, "aufpassen": 203, "ewig": 203, "existierend": 203, "unf\u00e4ll": 203, "wechselwirkungen": 203, "eventuellen": 203, "globalen": [203, 213], "156": [203, 213, 220, 242, 245, 250, 252, 255, 258, 262, 265, 268, 280, 283, 300, 304, 310, 322, 326, 332, 338, 344, 348], "erzwingt": 203, "158": [203, 213, 220, 229, 242, 245, 250, 252, 255, 258, 262, 265, 268, 271, 280, 283, 287, 300, 304, 310, 322, 326, 332, 338, 344, 348], "160": [203, 213, 220, 229, 242, 245, 250, 252, 258, 262, 265, 280, 283, 294, 300, 304, 310, 322, 326, 332, 338, 344, 348, 479, 786], "gesucht": 203, "genauer": 203, "n\u00e4chst\u00e4u\u00dferen": 203, "162": [203, 213, 220, 242, 245, 250, 252, 255, 258, 262, 265, 268, 280, 283, 300, 304, 310, 322, 326, 332, 338, 344, 348], "nirgend": 203, "163": [203, 213, 220, 236, 242, 245, 250, 252, 258, 262, 265, 268, 280, 283, 300, 304, 310, 322, 326, 332, 338, 344, 348], "gibtsnetglob": 203, "gibtsnet": 203, "164": [203, 213, 220, 229, 242, 245, 250, 252, 258, 262, 265, 268, 280, 283, 300, 304, 310, 322, 326, 332, 338, 344, 348], "nameerror": [203, 218, 252, 258, 283, 304, 310, 338, 344, 1030, 1072], "aufgabenstellung": 203, "kandidat": 203, "ersten": [203, 205, 218, 310, 357, 1180, 1200, 1202], "unsportlich": 203, "zweiten": [203, 205, 310], "unnachhaltig": 203, "dritten": [203, 310], "gelegenheit": 203, "gab": [203, 205], "erz\u00e4hlen": [203, 1181], "165": [203, 213, 220, 242, 245, 250, 252, 255, 258, 262, 265, 268, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 1088], "seq": [203, 221, 283, 338, 348, 823, 995, 1033], "fromkei": [203, 249, 254, 266, 338], "166": [203, 213, 220, 242, 245, 250, 252, 258, 262, 265, 280, 283, 300, 304, 310, 322, 326, 332, 338, 344, 348], "167": [203, 213, 220, 242, 245, 250, 252, 255, 258, 262, 265, 268, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348], "xxx": [203, 220, 242, 250, 252, 258, 268, 290, 322, 326, 332, 338, 344, 359, 361, 441, 517], "kksvjhbsk": 203, "sgkysdudsvvc": 203, "dict_kei": [203, 271, 300, 1079], "diesmal": 203, "169": [203, 213, 220, 229, 242, 245, 250, 252, 255, 258, 262, 265, 271, 280, 283, 300, 304, 310, 322, 326, 332, 338, 344, 348], "170": [203, 220, 229, 236, 242, 245, 250, 252, 255, 258, 262, 265, 268, 280, 283, 300, 304, 310, 322, 326, 332, 338, 344, 348], "irgendein": [203, 235], "171": [203, 220, 222, 229, 242, 245, 250, 252, 258, 262, 265, 268, 271, 280, 283, 300, 304, 310, 322, 326, 332, 338, 344, 348, 362], "sonst": [203, 213, 250, 252, 265], "kategori": 203, "number_str": 203, "173": [203, 220, 242, 245, 250, 252, 255, 258, 262, 265, 268, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 924], "ihm": [203, 205, 214], "174": [203, 220, 242, 245, 250, 252, 255, 258, 262, 265, 271, 280, 283, 300, 304, 310, 322, 326, 332, 338, 344, 348, 915], "176": [203, 220, 242, 245, 250, 252, 255, 258, 262, 265, 268, 280, 283, 304, 310, 322, 326, 332, 338, 344, 348], "177": [203, 220, 242, 245, 250, 252, 258, 262, 265, 268, 280, 283, 300, 304, 310, 322, 326, 332, 338, 344, 348], "178": [203, 220, 229, 242, 245, 250, 252, 258, 262, 265, 271, 280, 283, 300, 304, 310, 322, 326, 332, 338, 344, 348], "179": [203, 210, 220, 242, 245, 250, 252, 255, 258, 262, 265, 268, 271, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348], "180": [203, 220, 242, 245, 250, 252, 255, 258, 262, 265, 268, 271, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 474, 817], "181": [203, 220, 242, 245, 250, 252, 258, 262, 265, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 474, 1153], "heisst": [203, 215, 219, 220, 1182, 1188], "sequenz": 203, "kopiert": 203, "unterschi": [203, 220, 226, 250], "sobald": [203, 205], "183": [203, 220, 229, 242, 245, 250, 252, 258, 262, 265, 268, 271, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348], "\u00fcbergeben": 203, "184": [203, 220, 242, 245, 250, 252, 255, 258, 262, 265, 271, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348], "it1": 203, "it2": 203, "multipli": [203, 230, 243, 262, 304, 697], "n2": [203, 262], "combined_iter": 203, "186": [203, 220, 229, 242, 245, 250, 252, 255, 258, 262, 265, 268, 271, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348], "schlecht": 203, "simplen": 203, "transformationen": 203, "generieren": 203, "quadratzahlen": [203, 252], "187": [203, 242, 245, 250, 252, 258, 262, 265, 268, 271, 280, 283, 290, 300, 304, 310, 322, 326, 338, 344, 348], "quadrat": 203, "naeherung": 203, "performant": 203, "gen_squar": 203, "189": [203, 220, 242, 245, 250, 252, 255, 258, 262, 265, 271, 280, 283, 300, 304, 310, 322, 326, 338, 344, 348], "syntaktisch": [203, 226], "191": [203, 220, 229, 242, 245, 250, 252, 258, 262, 265, 268, 271, 280, 283, 300, 304, 310, 322, 326, 338, 344, 348], "genexpr": [203, 229, 322, 332, 338], "0x7fe9c43f2900": 203, "193": [203, 220, 229, 242, 245, 250, 252, 258, 262, 265, 268, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348], "194": [203, 220, 229, 242, 245, 250, 252, 255, 258, 262, 265, 271, 280, 283, 290, 304, 310, 322, 326, 332, 338, 344, 348], "195": [203, 220, 242, 245, 250, 252, 255, 258, 262, 265, 271, 283, 304, 310, 322, 326, 332, 338, 344, 348], "indent": [203, 218, 236, 243, 249, 258, 259, 420, 1053, 1056, 1066, 1156], "196": [203, 220, 229, 242, 245, 250, 252, 255, 258, 262, 265, 271, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348], "userlist": 203, "nochwa": [203, 252, 290, 348], "dropdown": 203, "dropdownlist": 203, "fehleranf\u00e4llig": 203, "198": [203, 220, 229, 242, 245, 250, 252, 255, 258, 262, 265, 271, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348], "202": [203, 220, 229, 239, 242, 245, 250, 252, 255, 258, 262, 265, 268, 280, 283, 290, 304, 310, 322, 326, 338, 344, 348, 474, 497], "203": [203, 220, 229, 231, 242, 245, 250, 252, 255, 258, 262, 265, 280, 283, 304, 310, 322, 326, 332, 338, 344, 348], "205": [203, 229, 242, 245, 250, 252, 255, 258, 262, 265, 268, 280, 283, 300, 304, 310, 322, 326, 332, 338, 344, 348], "206": [203, 242, 245, 250, 252, 258, 262, 265, 268, 280, 283, 304, 310, 322, 326, 332, 338, 344, 348], "207": [203, 229, 242, 245, 250, 252, 258, 262, 265, 268, 283, 304, 310, 326, 332, 338, 344, 348], "208": [203, 242, 245, 250, 252, 258, 262, 265, 268, 283, 304, 310, 322, 326, 332, 338, 344, 348], "209": [203, 229, 242, 245, 250, 252, 258, 262, 265, 268, 280, 283, 304, 310, 322, 326, 332, 338, 344, 348], "user_a": 203, "user_b": 203, "n\u00e4herung": 203, "nackten": [203, 1181], "210": [203, 229, 242, 245, 250, 252, 258, 262, 265, 283, 290, 304, 310, 322, 326, 332, 338, 344, 348], "hantiert": [203, 1182], "anderem": [203, 1188, 1195], "211": [203, 229, 242, 245, 250, 252, 258, 262, 265, 268, 280, 283, 300, 304, 310, 326, 332, 338, 344, 348], "reviewten": 203, "funktionsaufruf": [203, 265], "sonder": 203, "stackoverflowprogrammierung": 203, "entgegenwirken": 203, "ausholen": 203, "212": [203, 229, 242, 245, 250, 252, 255, 258, 262, 265, 268, 280, 283, 304, 310, 322, 332, 338, 344, 348], "veloc": [203, 229, 361, 1073], "length_m": [203, 229, 361, 1073], "time_": [203, 229, 361, 1073], "213": [203, 242, 245, 250, 252, 255, 258, 262, 265, 268, 280, 283, 304, 310, 332, 338, 344, 348], "spiel": 203, "214": [203, 242, 245, 250, 252, 258, 262, 265, 268, 280, 283, 304, 310, 322, 332, 338, 344, 348], "liegen": 203, "positionel": 203, "215": [203, 242, 245, 250, 252, 258, 262, 265, 268, 280, 283, 290, 304, 310, 332, 338, 344, 348], "param": [203, 213, 226, 243, 271, 304, 703, 752, 753, 938, 994], "216": [203, 229, 242, 245, 250, 252, 258, 262, 265, 280, 283, 290, 304, 310, 322, 326, 332, 338, 344, 348], "217": [203, 242, 245, 250, 252, 255, 258, 262, 265, 268, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348], "218": [203, 242, 245, 250, 252, 255, 258, 262, 265, 268, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348], "219": [203, 229, 242, 245, 250, 252, 258, 262, 265, 268, 280, 283, 300, 304, 310, 322, 332, 338, 344, 348], "entpacken": 203, "positionellen": 203, "221": [203, 229, 242, 245, 250, 252, 258, 262, 265, 268, 280, 283, 290, 300, 304, 310, 322, 326, 338, 344, 348], "kwarg": [203, 229, 256, 258, 262, 283, 304, 1028, 1032, 1053], "explizi": 203, "rauskletzeln": 203, "223": [203, 242, 245, 250, 252, 255, 258, 262, 265, 268, 283, 290, 304, 310, 322, 326, 332, 338, 344, 348, 1144], "celebrate_another_birthdai": 203, "224": [203, 242, 245, 250, 252, 255, 258, 262, 265, 268, 283, 290, 304, 310, 326, 332, 338, 344, 348], "227": [203, 242, 245, 250, 252, 258, 262, 265, 268, 283, 290, 300, 304, 310, 322, 332, 338, 344, 348], "228": [203, 242, 245, 250, 252, 255, 258, 262, 265, 268, 283, 290, 304, 310, 322, 332, 338, 344, 348], "zeiterfassung": 204, "__pycache__": [204, 230, 243], "supp": 204, "cpython": [204, 229, 239, 245, 255, 258], "pyc": 204, "dienstag": 205, "anleitung": 205, "offen": [205, 383, 1178], "vorwissen": [205, 1183], "konkreten": [205, 383], "aufgabenstellungen": 205, "dienstgeb": 205, "mitgebracht": 205, "quickstart": [205, 1189], "vorgetragen": [150, 205], "wenngleich": [205, 383, 1188, 1198, 1200, 1201], "un\u00fcblichen": 205, "reihenfolg": [205, 1179], "verbrachten": 205, "firmenprojekt": 205, "entspringenden": 205, "festgehalten": 205, "empfehlungen": 205, "weitergehen": 205, "k\u00f6nnte": [205, 1202], "idiomat": [205, 206, 209, 227, 230, 237, 253, 256, 279, 303, 1131], "lieblingsphras": 205, "bringt": [205, 1181, 1200], "forgiv": [205, 206, 303, 1131], "eafp": [205, 206, 303, 1131], "begriff": [205, 219], "viertelstund": 205, "regex": [205, 218, 243, 245, 270, 271, 280, 303, 310, 338, 1075, 1131], "unumg\u00e4nglich": [205, 1196], "textuel": 205, "analysieren": 205, "hero": [205, 206, 227, 230, 253, 279, 303, 325, 1131], "unterhaltsamen": 205, "keynot": [205, 206, 227, 230, 253, 256, 279, 303, 325, 1131], "konferenz": 205, "pydata": [205, 206, 227, 230, 253, 279, 303, 325, 1131], "chicago": [205, 206, 227, 230, 253, 279, 303, 325, 1131], "witzig": 205, "kommt": [150, 205, 220, 230, 233, 259, 1191, 1200, 1202], "selten": 205, "l\u00e4nge": 205, "ganzen": [205, 214, 1194], "abend": 205, "totalschaden": 205, "\u00fcbertragen": 205, "jedem": 205, "angemeldet": 205, "experienc": [206, 295, 297, 324, 383, 1059, 1189], "machinelearn": 206, "fuzzi": [206, 245], "improvis": 206, "shall": 206, "jango": 206, "rush": 206, "strong": [206, 256, 410, 1138, 1140], "claus": [206, 209, 239, 245, 255, 260, 282, 712, 1033, 1066, 1069], "whet": [206, 289], "appetit": [206, 289], "__dict__": [206, 226, 229, 230, 242, 243, 252, 255, 258, 262, 271, 283, 300, 304, 322, 344, 1044, 1050], "con": [206, 770, 918, 1024], "fiction": 206, "get_temperature_celsiu": 206, "competitor": 206, "eana": 206, "get_temperature_fahrenheit": 206, "eanaadapt": 206, "unserthermomet": 206, "revisit": [206, 248, 256, 279, 297, 321, 625], "shift": [206, 247, 450, 462, 594, 643, 938, 1050], "visitor": [206, 766, 775, 777], "gang": [206, 1187], "idiom": [206, 591, 728], "classic": [206, 449, 500, 591, 771, 785, 786, 825, 1187], "travers": [206, 463, 736, 748, 1030, 1035, 1071], "convolut": 206, "__call__": [206, 252, 262, 283, 304, 310, 1029], "__str__": [206, 229, 230, 243, 252, 255, 258, 262, 280, 283, 304, 321, 322, 344, 376, 1030], "__repr__": [206, 252, 255, 258, 262, 280, 283, 304, 322, 344], "poor": [206, 248, 403, 418, 427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786, 823, 930, 960, 1005], "deleg": [206, 335, 600, 730, 785, 786, 1184], "deck": [206, 231, 568], "sensordata": 206, "sensordata_test": 206, "historydata": 206, "slowli": [206, 585, 690, 815, 930], "csvreport": 206, "csv2sqlite3": 206, "frontend": [206, 601, 1007, 1025, 1160], "flaskerl": 206, "reiter": [206, 227, 246, 248, 253, 256, 373, 602, 1131], "phrase": [206, 209, 227, 250, 252, 253, 256, 258, 283, 860, 861, 1048, 1131], "impress": [206, 448], "brought": [206, 462, 1039], "cloth": 206, "extraordinari": 206, "mondai": [207, 209, 211, 212, 237, 286, 292, 295, 297], "preliminari": [207, 209, 210, 211, 212], "homogen": [207, 383], "versu": [207, 209, 211], "immut": [207, 209, 211, 213, 214, 221, 228, 230, 241, 242, 243, 245, 251, 257, 260, 266, 272, 281, 289, 291, 292, 305, 322, 326, 333, 339, 360, 432, 1054, 1061, 1062, 1063, 1067, 1194], "datastructur": [207, 231, 249, 1067], "exercise4": 207, "uh2ebfw8oym": [207, 211], "f26namfjggw": 207, "5qqq3yzbkp8": 207, "ugharkscop9uthgcoaec": 207, "pairwis": [208, 242, 607], "vale": 208, "bewar": [208, 411, 937, 1005, 1136, 1138], "cheaper": [208, 462, 609, 611, 612, 690], "memorywis": 208, "johann": 208, "syntact": [208, 229, 419, 562, 602, 690, 742], "sugar": [208, 690, 742], "allow": [208, 209, 229, 258, 405, 472, 677, 750, 784, 815, 838, 1093, 1164, 1184], "retval": [208, 458, 648, 976], "dlc": 208, "msg1": 208, "readabl": [208, 252, 262, 296, 398, 429, 433, 453, 454, 455, 462, 472, 474, 533, 647, 668, 683, 691, 694, 729, 740, 742, 748, 753, 754, 868, 878, 884, 889, 893, 915, 940, 1007, 1033, 1052, 1073, 1081, 1083, 1102], "0x7f41f5ff26a0": 208, "msglist": 208, "0x7f41f5ff4160": 208, "0x7f41f5ff41c0": 208, "291130": 208, "now_timestamp": 208, "1603884859": 208, "3412576": 208, "fromtimestamp": 208, "341258": 208, "372": [208, 245, 252, 290, 338, 348], "45259": 208, "microsecond": [208, 453, 870], "programmverweis": 209, "xy": [209, 252, 255, 290, 610, 1071], "zab": 209, "eventcodefil": 209, "definedlisaev": 209, "event_id": 209, "bla": [209, 332, 338], "blubb": 209, "verbessert": 209, "stringformatierung": 209, "ctype": 209, "headerfil": [209, 921], "lst": [209, 245, 875, 1179], "callbackfunc": 209, "datetim": [209, 230, 236, 237, 238, 243, 291, 294, 331, 332, 1088], "observ": [209, 278, 296, 350, 489, 496, 510, 513, 524, 538, 590, 786, 1036, 1037, 1143, 1187], "longish": 209, "resurrect": [209, 475, 893], "outputsequ": 209, "resist": 209, "uncondition": [209, 836, 1030], "suitabl": [209, 258, 304, 806, 930, 979, 1043, 1052], "analysi": [209, 462, 771, 1133, 1136, 1149], "cp1252": [209, 1125, 1126, 1128], "csvlog": 209, "csv_reader": 209, "recv": [209, 210, 933], "tuesdai": [210, 292, 307], "246": [210, 242, 245, 250, 252, 255, 258, 265, 283, 300, 304, 310, 332, 338, 344, 348, 1144], "corpor": [210, 283], "commandin": [210, 212], "comress": [210, 212], "gzip": [210, 212, 276, 285, 306, 307, 786, 833, 856, 858, 859, 863, 929, 1017, 1018, 1190], "diagnos": [210, 212, 366, 367, 1188, 1195], "netstat": [210, 212, 285, 306, 307, 1147, 1188, 1195], "netcat": [210, 212, 285, 306, 307], "subshel": [210, 212, 222], "telnetd": 210, "insecur": [210, 946], "proto": 210, "foreign": [210, 286, 433], "34490": 210, "56062": 210, "sshd": [210, 242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344, 865, 869, 871, 924, 940, 950], "systemctl": [210, 1021, 1147], "freedesktop": 210, "systemd1": 210, "quickli": [210, 297, 312, 324, 325, 328, 368, 432, 492, 938, 1186], "unprivileg": 210, "putti": [210, 222, 362], "puttygen": 210, "id_rsa": [210, 946], "authorized_kei": [210, 946], "trivia": 210, "hoorai": [210, 255, 268, 290, 344, 1066], "idiot": 210, "blinker": 210, "briana": 210, "mac": [210, 227, 243, 893, 1057, 1131, 1167], "wakeup": [211, 248, 325, 344, 376, 380, 762, 786, 829, 929, 938, 957, 970, 980, 990, 992], "patrick": 211, "1996": [211, 245], "wagna": 211, "gernot": 211, "1982": [211, 245], "birthplac": 211, "txt2json": 211, "equip": [212, 286, 373, 930, 1188, 1195], "wobei": [150, 213], "deppert": [213, 226, 360], "sidestep": 213, "builtin_function_or_method": [213, 283, 310, 332], "sozusagen": 213, "genauso": [213, 1178], "aufrufen": [213, 921], "zaehler": 213, "initialwert": 213, "zaehlen": 213, "naechsten": 213, "schleifendurchlauf": 213, "locker": [213, 831], "mein_integ": 213, "1024": [213, 245, 864, 870, 893, 955], "sch\u00fctzt": 213, "passen": [213, 280], "gehandhabt": 213, "1267650600228229401496703205376": [213, 239, 242, 250, 262, 268, 290], "hoch": 213, "rechnen": [213, 365, 370], "tut": [213, 322, 360, 1181], "ausschliesslich": [213, 1190], "ganzzahldivis": 213, "ganzzahligen": 213, "resultat": 213, "gleichen": [213, 1188, 1201], "vorrang": 213, "ghi": [213, 252, 338, 344], "viert": 213, "nwelt": 213, "nwie": 213, "linefe": [213, 222, 243, 250, 394, 395, 1075, 1081, 1111, 1156], "bedeutung": [213, 1183, 1190], "unangetastet": 213, "glump": 213, "nebenlaeufigkeitsdemo": 213, "ebenlaeufigkeitsdemo": 213, "l\u00f6sung": [213, 226, 235, 383, 932], "formatierungsm\u00f6glichkeit": 213, "pfx_var1": 213, "pfx_var2": 213, "ausgab": [213, 1181], "notwendig": [213, 1180, 1196, 1197], "abzubrechen": 213, "ignorieren": [213, 214, 220, 1194], "gefunden": [213, 283, 921], "value1": [213, 1091], "501": [213, 245, 338, 348, 1091], "value2": [213, 1091], "799": [213, 242, 245, 1088, 1091], "value3": [213, 1091], "sprachen": [213, 214, 1181, 1194], "neg": [213, 258, 262, 332, 348, 411, 453, 458, 670, 811, 924, 1171], "indiz": 213, "erscheinen": 213, "komisch": 213, "bequem": 213, "mapping_t": 213, "f\u00fcnf": [213, 1188], "sieben": [213, 226, 252, 648], "neun": [213, 338, 348], "explicit": [213, 232, 239, 243, 252, 260, 262, 408, 417, 445, 458, 462, 475, 517, 518, 531, 532, 568, 594, 596, 597, 621, 647, 690, 691, 700, 707, 712, 720, 727, 732, 747, 750, 804, 959, 973, 1005, 1025, 1026, 1056, 1059, 1062, 1139, 1152], "implicit": [213, 239, 252, 262, 398, 404, 408, 573, 689, 691, 707, 893, 962, 1048, 1062], "primzahlen": 213, "checken": 213, "primzahl": [213, 214, 1194], "checkenden": 213, "zahl": [213, 220, 226, 251, 252, 255, 265, 360], "probier": 213, "gach": [213, 252], "teiler": 213, "teiler_kandidaten": 213, "prim": 213, "gleichema\u00dfen": 213, "vollst\u00e4ndigkeit": 213, "halber": 213, "startend": [213, 252], "schrittweit": 213, "0x7f24f2ac0e50": 213, "ablegen": 213, "0x7f24f2ac0e70": 213, "arschlangsam": 213, "num_comparison": 213, "datenstruktur": [213, 234], "suchen": [213, 234, 920, 1183, 1190], "einf\u00fcgen": [213, 1188], "optimiert": [213, 226], "perfekt": 213, "einitreten": 213, "himmi": 213, "list_reverseiter": [213, 242, 265, 290], "0x7f24ec31d190": 213, "bricht": 213, "beinhart": 213, "liefert": [213, 1190], "lieber": 213, "zweit": [213, 226, 252, 283, 322, 338, 360, 1188], "po": [213, 252, 258, 262, 283, 288, 300, 304, 326, 332, 348, 474, 550, 643, 670], "wirklichkeit": 213, "ordin\u00e4r": 213, "alternativen": 213, "fruit": 213, "gemma": 213, "divisor_candid": [213, 348], "161": [213, 220, 242, 245, 250, 252, 255, 258, 262, 265, 268, 280, 283, 300, 304, 310, 322, 326, 332, 338, 344, 348], "wegen": 213, "dogma": 213, "zugewiesen": 213, "meine_vari": 213, "eine_vari": [213, 290, 300, 332], "angelegt": 213, "streng": 213, "obigem": 213, "dazusagen": 213, "noch_eine_globale_vari": 213, "increment_diese_vari": 213, "offiziel": [214, 216, 224, 227, 230, 231, 233, 249, 261], "leitfaden": 214, "kommentar": [214, 215, 226, 290, 360, 1194], "platziert": [214, 234], "hackereien": 214, "gleicherma\u00dfen": 214, "sogenannten": 214, "semantik": [214, 215, 1194], "sprach": [214, 215, 1181, 1182, 1183, 1194, 1195, 1202], "standarddatentypen": [214, 215, 1194], "literal": [214, 215, 273, 1194], "python2": [214, 252, 1194], "endg\u00fcltig": [214, 1194], "rausl\u00f6schen": [214, 1194], "konstanten": [214, 215, 1194], "typen": [214, 220, 1190, 1194, 1200], "operatoren": [214, 215, 921, 1183, 1194], "angeschnitten": [214, 1194], "vertiefung": [214, 230, 1194], "nocheinm": [214, 383, 1194], "ausdr\u00fcck": [214, 215, 273, 1194], "operatorrangfolgen": [214, 215, 1194], "grundlegenden": [214, 366, 1190, 1194], "sprachelementen": [214, 1194], "rede": [214, 1194], "syntaxdiagramm": [214, 1194], "gespritzt": [214, 1194], "gesamt": [214, 1194], "sperrig": [214, 1194], "n\u00fctzt": [214, 1194], "menschlich": [214, 1194], "abzubilden": [214, 1194], "tabel": [214, 1194], "anweisungen": [214, 215, 1194], "gro\u00dfen": [214, 1194], "fisch": [214, 1194], "instruktiv": [214, 1194], "bedingungen": [214, 215, 1180, 1194], "verzweigungen": [214, 215, 1194], "bedingt": [214, 215, 1181, 1194], "anweisung": [214, 215, 1194], "formulierungen": [214, 1194], "mehrfach": [214, 215, 1194], "fallauswahl": [214, 215, 1194], "benutzereingaben": [214, 1194], "\u00fcberpr\u00fcfen": [214, 1194], "schleifenkonstrukt": [214, 1194], "weitgehend": [214, 1194], "unserem": [214, 1194], "vehikel": [214, 1194], "hilfreich": [214, 1190, 1194], "klarstellung": [214, 1194], "fu\u00dfgesteuert": [214, 215, 1194], "z\u00e4hlergesteuert": [214, 215, 1194], "auslassen": [214, 1194], "kopfgesteuert": [214, 215, 1194], "gewinnt": [214, 1194], "konsol": [214, 1194], "anzeigen": [214, 1190, 1194], "voraussetzung": [214, 1194], "ausblick": [214, 1194], "schnell\u00fcbersicht": [214, 215, 1194], "sprunganweisungen": [214, 215, 1194], "endlosschleifen": [214, 215, 1194], "naja": [214, 1194], "reinschauen": [214, 1194], "mager": [214, 1194], "ausgelassen": [214, 1194], "eindimensional": [214, 215, 1194], "gefolgt": [214, 252, 1194], "zeichenketten": [214, 215, 1194], "tupel": [214, 215, 218, 1194], "besonder": [214, 215, 1194], "stapel": [214, 215, 1194], "schlangen": [214, 215, 1194], "tempo": [214, 1194], "schauma": [214, 220, 1194], "fallt": [214, 1194], "gscheit": [214, 221, 332, 1194], "gemeinsam": [214, 1178, 1180, 1194, 1197], "dr\u00fcber": [214, 1194], "vielzahl": [214, 1194, 1198, 1201], "l\u00f6sungsm\u00f6glichkeiten": [214, 1194], "eingegangen": [214, 1178, 1194, 1198], "pythonischst": [214, 1194], "bestritten": [214, 1194], "unterprogramm": [214, 215, 1194], "parameter\u00fcbergab": [214, 215, 1194], "r\u00fcckgabewert": [214, 215, 1194], "inner": [214, 215, 235, 344, 474, 1029, 1194], "standardbibliotheken": [214, 215, 1194], "funktionalit\u00e4ten": [214, 215, 1194], "berechnet": [214, 250, 258, 1194], "satz": 214, "gepr\u00e4gt": 214, "konferenzen": 214, "definitiv": 214, "sehenswert": 214, "anf\u00e4nger": [214, 1197], "hochinteress": 214, "sprachelement": 215, "elementar": 215, "beliebig": [215, 250, 1195], "gro\u00df": [215, 1200], "vergleichsoperatoren": 215, "strichrechnung": 215, "modulo": [215, 226, 239, 245, 250, 258, 360, 409, 1050, 1062], "un\u00e4rer": 215, "negat": [215, 239, 262, 922, 1050, 1062, 1080], "konvertierungen": [215, 1181], "pr\u00e4zendenzregeln": 215, "vertauschen": [215, 226, 360], "kontrollstrukturen": [215, 251, 1181], "verzweigung": 215, "schleifen": [215, 273, 1180], "versuch": [215, 227, 338, 344], "hybrid": [215, 664], "supergscheit": 215, "prozeduren": 215, "funktionen": [215, 219, 273, 366, 1180, 1181, 1183, 1191], "funktionspoint": 215, "funktionsobjekt": 215, "primzahlenbeispiel": 215, "laufzeitfehl": 215, "lokal": [215, 226, 272, 273, 1201], "zuweisen": 215, "fehlerfal": 215, "anschliessend": 216, "interaktiv": 216, "uebungen": 216, "idealerweis": [216, 290], "ueblichen": 216, "negoti": 217, "deiniti": [217, 811, 1189], "unload": [217, 813, 827, 829, 1189], "synchronizt": 217, "spinlock": [217, 786, 810, 825, 831, 835, 837, 841, 842, 848, 851, 852, 854, 929, 993, 1189], "rcu": 217, "halv": 217, "softirq": 217, "tasklet": [217, 831], "irss": 217, "kmalloc": [217, 786, 795, 800, 803, 804, 805, 810, 814, 823, 824, 828, 830, 837, 842, 845, 848, 851, 854, 929], "dma": [217, 786, 810, 828, 830, 872, 929, 954, 955, 956, 1189], "coher": [217, 804], "20201125": [218, 220], "unbekannten": 218, "lookup_t": [218, 221, 360], "12345": [218, 250, 262, 290, 338, 1165], "noch_eine_list": 218, "gesamte_list": 218, "vorl\u00e4ufig": 218, "letz": 218, "indented_text": 218, "nebenbei": [218, 220, 360], "eine_zum_sterben_verurteilte_vari": 218, "ein_set": 218, "sequenzen": 218, "grottenlangsam": 218, "subscript": [218, 252, 322, 344, 438, 625, 646, 650, 1152], "multiple_return_valu": 218, "xyz": [218, 220, 226, 245, 252, 283], "mein_formatierter_str": 218, "my_rang": [218, 258, 304, 310, 332], "retlist": 218, "zeichenkett": 218, "funktionieren": [218, 1183, 1201], "my_list": [218, 229, 271], "airms_eth": 218, "simplizistisch": 218, "bl\u00f6d": 218, "i_oder_v": 218, "iv": 218, "rms_eth": 218, "vorcompilieren": 218, "acirms_eth": 218, "my_regex": 218, "zeilennumm": 218, "dazuhaben": 218, "meine_zu_sendenden_daten": 218, "345": [218, 239, 245, 258, 290, 322, 332, 338, 344, 348], "234": [218, 242, 245, 250, 252, 255, 258, 262, 265, 268, 283, 300, 304, 310, 322, 326, 332, 338, 344, 348, 360], "meine_zu_sendenden_daten_in_string_form": 218, "ueblicherweis": 218, "ueber": 218, "verschickt": 218, "empfangen": [218, 233], "geschrieben": [218, 1201], "empfaeng": 218, "empfangenen": 218, "natuerlich": 218, "zurueckkonvertieren": 218, "meine_empfangenen_daten_python_form": 218, "gegangen": [218, 271], "wurscht": [218, 258, 332, 921], "returnwerten": 219, "containerdatentypen": 219, "untypisiert": 219, "zeilen": [220, 262, 1190], "neiner": 220, "nund": [220, 239], "nb": 220, "stoppt": 220, "newlin": [220, 222, 235, 258, 283, 300, 356, 387, 394, 407, 1059, 1075], "ndrin": 220, "drin": [220, 221, 226, 262, 290, 300, 338, 360, 365], "zuviel": [220, 1183], "mischt": 220, "unsupport": [220, 242, 268, 1050], "140546731085392": 220, "0x7fd395fb0e50": 220, "0x7fd3900395b0": 220, "new_t": [220, 1063], "0x7fd390052800": 220, "667": [220, 242, 245, 265, 271, 585], "2923750584022716461": 220, "529344067295497451": 220, "unhash": [220, 280, 290, 304, 332, 344], "fuenf": [220, 242, 252, 280, 290, 304, 322, 338, 348, 360], "verschluckt": 220, "6000000": 220, "elementen": [220, 234], "nonetyp": [220, 230, 244, 245, 300, 310, 322, 338, 344], "_io": [220, 239, 242, 245, 255, 258, 290, 304, 338, 357, 835], "textiowrapp": [220, 239, 242, 245, 255, 258, 290, 304, 338, 357, 1028], "oi": 220, "456": [220, 221, 245, 252, 290, 338, 407], "hansi": [220, 258, 262, 265], "linspac": [220, 326], "11111111": 220, "22222222": 220, "33333333": 220, "44444444": 220, "55555556": 220, "66666667": 220, "77777778": 220, "88888889": 220, "sin": 220, "8961922": 220, "79522006": 220, "19056796": 220, "96431712": 220, "66510151": 220, "37415123": 220, "99709789": 220, "51060568": 220, "54402111": 220, "plot": [220, 239, 268, 271, 322, 326, 332, 344, 1027, 1085, 1137, 1138], "line2d": [220, 268, 271, 322, 326, 332, 344], "0x7fd35cd3ef40": 220, "splev": 220, "splrep": 220, "spline": 220, "represent": [220, 239, 258, 348, 736, 843, 937, 938], "spl": 220, "evalu": [220, 239, 244, 250, 260, 390, 410, 415, 417, 425, 432, 433, 511, 512, 525, 526, 697, 707, 876, 893, 1030, 1064, 1066, 1073, 1171], "x2": [220, 262], "y2": 220, "0x7fd341a486d0": 220, "speicher": [221, 1181, 1188, 1195], "sch\u00fctze": 221, "gemischten": 221, "operationen": [221, 1200], "interpol": [221, 262, 1136], "lag": 221, "gib": [221, 300], "depp": [221, 250], "ret_l": 221, "uniq_l": 221, "read_excel": [221, 1136], "invit": [222, 664], "effici": [222, 267, 321, 422, 461, 463, 465, 626, 630, 640, 643, 745, 877, 924, 926, 1035, 1138, 1149, 1152, 1189], "expans": [222, 921, 922, 1180], "ecdsa": [222, 362], "fingerprint": [222, 362, 941, 992], "sha256": [222, 362, 941], "in22o4vcd400x0bb4flcb5": [222, 362], "vqnrvkvoirgfqq6mapo": [222, 362], "perman": [222, 362], "individu": [222, 362, 414, 472], "sat": [222, 362], "straight": [222, 712, 1153], "startung": 222, "standpoint": 222, "suboptim": [222, 271], "pwned": 222, "hidden": [222, 503, 698, 806, 1007], "clumsi": [222, 248, 249, 289, 292, 488, 492, 592, 600, 608, 621, 648, 690, 753, 1027, 1028, 1044, 1045, 1152, 1184], "clumsier": 222, "dumpbin": 222, "hmoe": 222, "frcoll": 222, "bunch": [222, 754, 860, 1019, 1043], "oom": [222, 242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344, 1034], "killer": [222, 242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344, 1068], "amoc": 222, "snapshot": [222, 732, 765, 871, 1019], "tinkernut": 222, "raspberi": 222, "awesom": [222, 1164], "tunnel": [222, 288, 940, 948, 959], "centric": [222, 1189], "virtualbox": [222, 872], "cygwin": [222, 275, 277, 295, 872], "assort": 222, "nano": 222, "univers": [222, 297, 549, 959, 1056, 1189], "scripe": 222, "voellig": 226, "wohl": [226, 310, 1181, 1202], "selbsterklaerend": 226, "printet": 226, "builtin": [226, 232, 239, 245, 246, 255, 258, 262, 283, 304, 321, 322, 332, 338, 348, 893, 1031], "accur": [226, 258, 262, 283, 304, 467], "__weakref__": [226, 242, 252, 255, 258, 262, 271, 283, 304, 322], "weak": [226, 258, 262, 283, 304, 322, 751, 1138], "_abc": [226, 239, 245, 255, 258], "_1": [226, 753, 754], "a123": 226, "vernichten": 226, "laufzeit": 226, "140032702361168": 226, "refcount": [226, 749, 751, 1028, 1184], "dezim": 226, "oktal": 226, "0o755": [226, 262, 360], "493": [226, 245, 262, 338, 348], "0b11": [226, 262, 265], "sql": [226, 237, 249, 1140, 1143], "0b11111111": 226, "ordnung": 226, "uhrzeit": 226, "vormittag": 226, "6666666666666666": [226, 262], "nda": [226, 280], "python_dir": 226, "jan": [226, 255, 258, 356, 357, 374, 407, 771, 797, 889, 915, 973, 1007, 1021, 1058], "lowercas": [226, 258, 304, 893, 940, 1076, 1093, 1098], "140032636418048": 226, "ein_iterierbares_d": 226, "extraw\u00fcrschtl": 226, "sex": [226, 239, 261, 262, 1093], "diver": 226, "translation_t": [226, 262, 265, 268, 338], "bag": [226, 274, 275, 277, 475, 485, 783, 785, 786, 1001, 1063], "green": [226, 262, 514, 549, 550, 610, 930], "blue": [226, 234, 242, 262, 1088], "mengenoperationen": 226, "set1": 226, "set2": 226, "symm_diff": 226, "lisa": 226, "eugeni": [226, 229], "okan": 226, "mcguir": 226, "sinner": 226, "vornam": [226, 234, 235], "nachnam": [226, 234, 235], "persnr": 226, "personalnumm": 226, "5000": [226, 239, 245, 1047], "4000": [226, 245], "3000": [226, 239, 245, 265, 304], "15000": [226, 245], "uppercas": [226, 258, 304, 893, 1076, 1093], "verfuegbar": 226, "restlichen": 226, "gehaelt": 226, "konstant": [226, 234, 257], "unexpect": [226, 452], "pcap": [227, 247], "certifi": 227, "math": [227, 230, 240, 242, 243, 245, 253, 262, 267, 270, 303, 309, 332, 592, 594, 1056, 1131], "statist": [227, 240, 253, 262, 267, 270, 303, 309, 466, 995, 1115, 1131, 1136, 1164], "undo": [227, 893, 1131], "brad": [227, 1131], "traversi": [227, 1131], "evaluierung": 228, "eval": [228, 256, 257, 266, 284, 298, 299, 304, 311, 320, 323, 324, 1052], "openfil": 229, "hanld": 229, "soemth": [229, 847], "zf": [229, 338], "namelist": 229, "zipdemo": 229, "extracted_nam": 229, "isinst": [229, 230, 243, 245, 258, 271, 283, 1050, 1153], "superclass": [229, 230, 243, 258], "subclass": [229, 230, 243, 258, 262, 1030, 1047], "class1": 229, "class2": 229, "salari": 229, "selina": 229, "orgl": 229, "8010": [229, 245, 474], "birth": [229, 255, 268, 592, 784, 1120, 1121, 1122, 1123, 1126, 1127, 1128], "1622102062": 229, "4778333": 229, "019427776336669922": 229, "009679079055786133": 229, "daniel": [229, 232, 356, 357, 374], "ortner": 229, "num_employe": 229, "__first": 229, "__last": 229, "__address": 229, "_person__first": 229, "_person__last": 229, "_person__address": 229, "_first": 229, "_last": 229, "_address": 229, "do_debug": 229, "val": [229, 258, 753, 938], "ueberhaupt": 229, "l_float": 229, "0x7fd9881b04a0": 229, "functool": [229, 296], "wrapper": [229, 258, 268, 273, 310, 332, 495, 693, 718, 953, 1001, 1029, 1050, 1133], "komplexen": 229, "testfil": 229, "nzeil": [229, 258, 326], "seek": [229, 304, 338, 357], "nth_fibo": 229, "accomod": 229, "0x7fd9801cec10": 229, "0x7fd9801b8d60": 229, "0x7fd9801b4900": 229, "0x7fd98014cd40": 229, "gen": [229, 304], "sequenceno": 229, "kv_pair": 229, "permissionerror": [229, 245, 265, 283, 300, 1030], "deni": [229, 245, 265, 300, 338, 517, 531, 876, 912, 940, 948, 960, 965, 966, 1030, 1159], "eacc": 229, "filenotfounderror": [229, 245, 283, 1030], "64bit": 229, "utc": 229, "python_implement": [229, 230, 243], "python_version_tupl": [229, 230, 243], "python39": 229, "dynload": [229, 338], "isfil": [229, 350, 474], "isdir": [229, 474], "my_path": 229, "hopefulli": 229, "the_except": 229, "__class__": [229, 252, 255, 258, 262, 271, 280, 283, 304, 322, 344], "__bases__": [229, 230, 243, 260], "distrust": 229, "guido": [229, 1155], "incompet": 229, "precondit": [229, 862], "abdefg": 229, "beg": [229, 433, 1031], "bdefg": 229, "stringifi": 229, "0x7ffa9c2ac3a0": 229, "formatstr": 229, "ding": [229, 259, 1000], "formatierter_str": 229, "oserror": [230, 258, 283, 1030], "errno": [230, 243, 245, 265, 300, 458, 811, 960, 975, 1004, 1005, 1022, 1030, 1159], "assertionerror": [230, 255, 271, 283, 322, 1030, 1043, 1164, 1165], "jjjj": [230, 378, 379, 471], "line_count": 230, "aud": 230, "qualifii": [230, 243], "trunc": [230, 243], "hypot": [230, 243], "seed": [230, 243, 262, 544], "ascii": [230, 243, 258, 265, 268, 283, 304, 310, 326, 332, 338, 394, 397, 400, 406, 1061, 1062, 1075, 1081, 1139], "codepoint": [230, 243], "escap": [230, 243, 250, 258, 280, 387, 1139], "ord": [230, 243, 262, 283, 1070], "chr": [230, 243, 283], "isxxx": [230, 243], "rfind": [230, 243, 258, 304, 310, 344, 1077], "grammar": [230, 243], "instrospect": [230, 243], "hasattr": [230, 243, 258, 271, 283, 1044, 1050], "__module__": [230, 242, 243, 252, 255, 258, 262, 271, 283, 304, 322], "bytearrai": [230, 243, 258, 283], "histogram": [230, 231, 248, 403, 418, 427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 578, 579, 587, 692, 730, 783, 785, 786], "defaultdict": [230, 256, 257, 281], "make_histogram": [230, 579, 588], "fileobj": 230, "stringio": [230, 258], "8859": [230, 248, 249, 265, 268, 288, 310, 322, 326, 474], "pycon": [230, 256, 279, 303, 325, 1131], "2017": [230, 256, 279, 325, 600, 698, 749, 1131], "metaprogram": [230, 257, 279, 707, 1043, 1131, 1185], "contract": [230, 232, 279, 1131], "unauthor": [230, 279, 325, 1131], "lesson": [230, 279, 325, 362, 368, 473, 736, 1023, 1131], "evolv": [230, 279, 325, 733, 1131], "assembli": [230, 279, 303, 325, 1007, 1009, 1131, 1186], "revolv": [230, 256, 325, 1131, 1137], "mro": [230, 256, 260, 325, 1131], "cpa": 231, "fahr": [231, 388, 390], "tomorrow": [231, 246, 372, 373], "correctli": [231, 321, 351, 450, 937, 960, 1083, 1139], "consecut": [231, 413, 742, 926], "becam": [231, 317], "44ff": 231, "gig": 231, "upcom": 231, "msi": 231, "wswitch": [231, 454, 691, 802], "wall": [231, 245, 246, 411, 461, 477, 765, 801, 802, 1173], "77ff": 231, "skip": [231, 258, 357, 475, 477, 808, 938, 1008, 1009, 1030, 1166], "89ff": 231, "alongsid": [231, 827], "num_us": 231, "199ff": 231, "204ff": 231, "208ff": 231, "220ff": 231, "222ff": 231, "db_get_user_at_index": 231, "298ff": 231, "strcpy": [231, 248, 400, 446, 582, 597, 600, 701, 735, 933, 991], "strlen": [231, 400, 425, 453, 597, 600, 701, 735, 971, 974, 1004], "bahavior": 231, "dest": [231, 400], "strtol": 231, "stringif": [231, 1181], "db_error_str": 231, "sexi": [231, 983], "caleb": 231, "discret": [232, 262, 321, 460, 464, 469, 470, 692, 730, 783, 785, 786], "bleed": 232, "rect": [232, 441, 568], "sphere": [232, 568], "preprocessor": [232, 248, 407, 434, 440, 444, 447, 451, 456, 460, 464, 469, 470, 689, 692, 730, 783, 785, 786, 1007, 1171, 1185], "julia": 232, "yesterdai": [232, 248, 256, 296], "distanc": [232, 594, 602, 603, 623, 740, 753], "has_lastnam": 232, "botton": 232, "mingw": [232, 275, 277, 295, 372, 385, 872], "resembl": 232, "tortur": 232, "functor": [232, 274, 275, 277, 334, 335, 634, 730, 731, 785, 786], "rudimentarili": [232, 1060, 1134], "gotten": [232, 766], "recourc": 232, "outright": [232, 288, 448, 1035, 1066], "geniu": [232, 288, 625, 1035, 1066], "livehackingli": 232, "zuordnung": [233, 249, 261], "bissl": 233, "commandlineargument": [233, 1180], "stoff": [150, 233], "summenbeispiel": 233, "showcas": 233, "datenbank": 233, "formulieren": 233, "verbindung": [233, 1178, 1188, 1195, 1201], "schicken": [233, 1178], "schickman": 233, "muessen": 233, "verwandlen": 233, "fractal": [233, 249], "schatzi": 234, "zeitkomplexit\u00e4t": 234, "foreach": 234, "assozi": [234, 1183], "color_transl": 234, "gelb": 234, "yellow": 234, "hashtabl": [234, 1153], "englisch": [234, 1178], "sack": 234, "my_color": 234, "her_color": 234, "pink": 234, "gr\u00fcn": 234, "beig": 234, "vereiningungsmeng": 234, "schnittmeng": 234, "symmetrisch": 234, "differenzmeng": 234, "sei": 234, "gewesen": 234, "waer": [234, 310], "1037190666": [234, 250, 252, 258, 262, 265, 268, 271, 492, 499, 516, 517, 518, 530, 531, 532, 651, 1044], "6666010185": 234, "schwarzbauer": 234, "json_string_fuer_den_brows": 234, "response_dict": 234, "svnr": [234, 242, 245, 252, 258, 262, 265, 268, 270, 271, 310, 493, 499, 521, 527, 1044, 1148], "pprint": [234, 236, 243, 245, 280, 1031, 1139], "formatieren": 234, "endlich": 234, "transfer_string_in_php_am_serv": 234, "u00f6rg": 234, "transfer_string_in_js_am_brows": 234, "response_dict_am_brows": 234, "verwandeln": [234, 1197], "schlussendlich": 234, "geeignet": [234, 1179], "platzieren": 234, "meine_t": 234, "sozialversicherungsnumm": 234, "simmer": 235, "mein_str": 235, "sq": [235, 242, 245, 252, 262, 283, 304, 322, 326, 338], "docu": 235, "nmehrzeilig": 235, "nvon": 235, "mehrzeilig": 235, "deppertem": 235, "irrelevant": 235, "quargel": [235, 236], "190666": 235, "inkorrekt": 235, "geburtsdatum": 235, "endswith": [235, 250, 252, 258, 268, 283, 287, 290, 304, 310, 326, 332, 338, 344, 348, 1077], "sss": 235, "isalpha": [235, 239, 250, 252, 258, 262, 283, 304, 310, 332, 348, 1077], "isidentifi": [235, 239, 252, 258, 268, 283, 304, 310, 1077], "islow": [235, 258, 268, 283, 304, 338, 344, 1077], "arg1": 235, "arg2": 235, "arg3": 235, "abcblah": 235, "blahabcbcabcc": 235, "lah": 235, "rstrip": [235, 239, 243, 250, 254, 255, 258, 268, 283, 300, 304, 310, 326, 344, 348, 356, 365], "lstrip": [235, 250, 254, 258, 283, 304, 310, 344, 348, 365], "wieviel": [235, 1188, 1195], "995237": 235, "datestr": 235, "dt": [235, 332, 833, 937], "strptime": [235, 236, 237, 243, 332], "uuid": 235, "msg_aussi": 235, "sea": [235, 250, 283, 361, 711], "oida": [235, 252, 255, 304, 477], "msgid": 235, "uuid4": 235, "345654325678": 235, "json_aussi": 235, "6563515ef0824d42b459389cefd09127": 235, "json_eini": 235, "sender": [235, 1005], "msg_eini": 235, "sauberestextfil": 236, "12345678": 236, "2270": [236, 245], "20333": 236, "360": [236, 245, 322, 332, 338, 344, 348], "91011121": 236, "30333": 236, "36756788": 236, "1112": [236, 245], "1244": [236, 245], "31333": 236, "45011121": 236, "44444": 236, "340": [236, 245, 252, 258, 290, 304, 332, 338, 344, 348], "sauber": 236, "read_sauberes_text_fil": 236, "item1": [236, 332], "item13": 236, "werk": 236, "lort": 236, "charg": [236, 496, 503, 516, 517, 518, 530, 531, 532], "sonderbestandsnumm": 236, "materialkurztext": 236, "lagerplatz": 236, "verfueg_bestand": 236, "bme": 236, "we_datum": 236, "verf\u00fcg": 236, "bestand": 236, "datum": [236, 1138], "api2": 237, "opc": [237, 246, 321], "rrdtool": 237, "rrd": 237, "subprocess": [237, 253, 258, 267, 269, 279, 303, 350, 365, 370, 1131], "commmon": [239, 433], "140576769461632": 239, "simplicit": 239, "inputfil": [239, 474], "450": [239, 245, 252, 287, 290, 338, 348], "paragraph": [239, 487], "highli": [239, 383, 549], "pathnam": [239, 245, 255, 258, 792, 959, 963, 1075], "displayhook": [239, 245, 255, 258, 358], "excepthook": [239, 245, 255, 258, 358], "uncaught": [239, 245, 255, 258, 568], "systemexit": [239, 245, 255, 258, 280, 283, 358, 1030], "behav": [239, 245, 248, 255, 258, 547, 568, 694, 749, 750, 781, 849, 875, 995], "last_typ": [239, 245, 255, 258, 358], "last_valu": [239, 245, 255, 258, 358, 718, 721, 724, 725, 726], "last_traceback": [239, 245, 255, 258, 358], "builtin_module_nam": [239, 245, 255, 258, 358], "pertain": [239, 245, 255, 258], "exec_prefix": [239, 245, 255, 258, 358], "float_info": [239, 245, 255, 258, 358], "float_repr_styl": [239, 245, 255, 258, 358], "hash_info": [239, 245, 255, 258, 358], "hexvers": [239, 245, 255, 258, 358], "int_info": [239, 245, 255, 258, 358], "maxsiz": [239, 245, 255, 258, 358], "largest": [239, 245, 255, 258, 450], "maxunicod": [239, 245, 255, 258, 358], "thread_info": [239, 245, 255, 258, 358], "version_info": [239, 245, 255, 258, 358], "__stdin__": [239, 245, 255, 258, 358], "__stdout__": [239, 245, 255, 258, 358], "__stderr__": [239, 245, 255, 258, 358], "__displayhook__": [239, 245, 255, 258, 358], "__excepthook__": [239, 245, 255, 258, 358], "screen": [239, 245, 255, 258, 869, 875, 893], "exc_info": [239, 245, 255, 258, 358], "getdlopenflag": [239, 245, 255, 258, 358], "dlopen": [239, 245, 255, 258, 1198], "getprofil": [239, 245, 255, 258, 358], "profil": [239, 245, 255, 258, 338, 383, 461, 467, 470, 786, 833, 865, 1182, 1185], "getrefcount": [239, 245, 255, 258, 265, 358], "getrecursionlimit": [239, 245, 255, 258, 358], "getsizeof": [239, 245, 255, 258, 280, 283, 326, 348, 358], "gettrac": [239, 245, 255, 258, 358], "setdlopenflag": [239, 245, 255, 258, 358], "setprofil": [239, 245, 255, 258, 358], "setrecursionlimit": [239, 245, 255, 258, 358], "settrac": [239, 245, 255, 258, 358], "__breakpointhook__": [239, 245, 255, 258, 358], "breakpointhook": [239, 245, 255, 258, 358], "breakpoint": [239, 245, 255, 258, 283], "exctyp": [239, 245, 255, 258], "__unraisablehook__": [239, 245, 255, 258, 358], "unraisablehook": [239, 245, 255, 258, 358], "unrais": [239, 245, 255, 258], "exc_typ": [239, 245, 255, 258, 1028], "exc_valu": [239, 245, 255, 258, 1028], "exc_traceback": [239, 245, 255, 258, 1028], "err_msg": [239, 245, 255, 258], "addaudithook": [239, 245, 255, 258, 358], "audit": [239, 245, 255, 258, 338, 358], "call_trac": [239, 245, 255, 258, 358], "afterward": [239, 245, 255, 258, 412, 462, 599, 749, 750, 751, 764, 829, 1001, 1165], "older": [239, 245, 255, 258, 858, 1001], "get_asyncgen_hook": [239, 245, 255, 258, 358], "firstit": [239, 245, 255, 258], "get_coroutine_origin_tracking_depth": [239, 245, 255, 258, 358], "coroutin": [239, 245, 255, 258, 334, 720, 721, 723, 724, 725, 726, 730, 785, 786, 1131], "getallocatedblock": [239, 245, 255, 258, 358], "getdefaultencod": [239, 245, 255, 258, 304, 358], "getfilesystemencodeerror": [239, 245, 255, 258, 358], "getfilesystemencod": [239, 245, 255, 258, 358], "getswitchinterv": [239, 245, 255, 258, 358], "setswitchinterv": [239, 245, 255, 258, 358], "is_fin": [239, 245, 255, 258, 358], "set_asyncgen_hook": [239, 245, 255, 258, 358], "set_coroutine_origin_tracking_depth": [239, 245, 255, 258, 358], "cr_origin": [239, 245, 255, 258], "rtld_global": [239, 245, 255, 258], "rtld_xxx": [239, 245, 255, 258], "rtld_lazi": [239, 245, 255, 258], "frequenc": [239, 245, 255, 258, 262, 298, 299, 320, 324, 351, 376, 380, 786, 929, 930, 938, 970, 990, 992], "uninterrupt": [239, 245, 255, 258, 825], "workload": [239, 245, 255, 258], "typic": [239, 245, 255, 258, 286, 296, 312, 324, 328, 433, 473, 477, 494, 518, 547, 674, 804, 853, 878, 1008, 1053, 1063, 1184, 1186], "005": [239, 245, 255, 258], "abiflag": [239, 245, 255, 258, 358], "api_vers": [239, 245, 255, 258, 358], "1013": [239, 245, 255, 258], "ipyk": 239, "base_exec_prefix": [239, 245, 255, 258, 358], "base_prefix": [239, 245, 255, 258, 358], "_ast": [239, 245, 255, 258], "_codec": [239, 245, 255, 258], "_collect": [239, 245, 255, 258], "_f": [239, 245, 255, 258], "byteord": [239, 245, 255, 258, 280, 358, 931], "foundati": [239, 245, 255, 258], "emati": [239, 245, 255, 258], "ipykernel": [239, 245, 255, 258, 283], "zmqshelldisplayhook": [239, 245, 255, 258], "dont_write_bytecod": [239, 245, 255, 258, 358], "opt": [239, 245, 255, 258, 338, 439], "ation": [239, 245, 255, 258], "7976931348623157e": [239, 245, 255, 258], "308": [239, 245, 252, 255, 258, 300, 310, 322, 332, 338, 344], "max_": [239, 245, 255, 258], "epsilo": [239, 245, 255, 258], "2305843009213693": [239, 245, 255, 258], "iphash2": [239, 245, 255, 258], "50922736": 239, "cache_tag": [239, 245, 255, 258], "xv": [239, 245, 255, 258], "bits_per_digit": [239, 245, 255, 258], "sizeof_digit": [239, 245, 255, 258], "syntaxerror": [239, 255, 262, 283, 1030], "eol": [239, 262], "9223372036854775807": [239, 245, 255, 258, 784], "1114111": [239, 245, 255, 258], "meta_path": [239, 245, 255, 258, 358], "_frozen_importlib": [239, 245, 255, 258, 283], "builtinimport": [239, 245, 255, 258, 283], "_fro": [239, 245, 255, 258], "homepa": 239, "path_hook": [239, 245, 255, 258, 358], "zipimport": [239, 245, 255, 258], "filefind": [239, 245, 255, 258], "path_importer_cach": [239, 245, 255, 258, 358], "jfa": [239, 245, 255, 258], "platlibdir": [239, 245, 255, 258, 358], "ps1": [239, 245, 255, 258, 358, 1166], "ps2": [239, 245, 255, 258, 358], "ps3": [239, 245, 255, 258, 358], "pycache_prefix": [239, 245, 255, 258, 358], "outstream": [239, 245, 255, 258], "versio": [239, 245, 255, 258], "202103": 239, "releaselev": [239, 245, 255, 258], "warnopt": [239, 245, 255, 258, 358], "isdigit": [239, 250, 258, 262, 283, 290, 304, 310, 338, 348, 1077], "pp": [239, 290, 438, 625], "list_of_str": 239, "tensorflow": 240, "kesselfal": 240, "rettenbachklamm": 240, "hochtor": 240, "hochschwab": 240, "_a": [242, 258, 283], "_123": 242, "140575811317328": 242, "140575811316208": 242, "0xffffffff": [242, 243, 348, 411], "4294967296": [242, 250], "0x48": [242, 937], "330": [242, 245, 258, 283, 290, 304, 322, 332, 338, 344], "332": [242, 245, 258, 290, 304, 322, 338, 344], "333": [242, 245, 258, 290, 304, 332, 338, 344, 361], "334": [242, 245, 258, 290, 332, 338, 344], "dstr": 242, "777": [242, 245, 332], "aliv": [242, 431, 983, 1026], "bcd": 242, "dusan": 242, "alex": [242, 256, 1048], "mist": [242, 290], "span": [242, 268, 271, 273, 280, 304, 338, 388, 407, 431, 808], "141592653589793": [242, 245], "roll": [242, 261, 282, 298, 299, 1066, 1181], "dice": [242, 261, 282, 298, 299, 1066], "win": [242, 258, 268, 332, 344, 924, 991, 1066], "rnd": [242, 265], "convention": 242, "wise": [242, 286, 456, 600, 672, 703, 771, 784, 786, 801, 811, 831, 929, 970, 1030], "resultset": [242, 245, 1143], "sbin": [242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344, 865, 869, 871, 918, 924, 955, 965], "nologin": [242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344, 918, 924, 955, 965], "adm": [242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344, 919, 922, 924], "lp": [242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344, 924], "spool": [242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344, 924], "lpd": [242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344, 924], "ftp": [242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344, 920, 1021], "65534": [242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344], "apach": [242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344], "httpd": [242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344], "coredump": [242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344, 924, 1004], "997": [242, 245, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344], "dumper": [242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344, 924], "998": [242, 245, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344], "996": [242, 245, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344], "timesync": [242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344, 924], "995": [242, 245, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344], "tss": [242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344], "tpm": [242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344], "dbu": [242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344, 871], "polkitd": [242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344, 871], "994": [242, 245, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344], "avahi": [242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344, 871], "mdn": [242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344], "unbound": [242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344, 1062], "992": [242, 245, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344], "dnsmasq": [242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344, 871], "991": [242, 245, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344], "dhcp": [242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344], "nm": [242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344, 468, 601, 833, 1019, 1025], "openconnect": [242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344], "993": [242, 245, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344], "989": [242, 245, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344], "networkmanag": [242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344, 468, 871], "usbmuxd": [242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344], "gluster": [242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344], "988": [242, 245, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344], "glusterf": [242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344], "rtkit": [242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344], "realtimekit": [242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344], "pipewir": [242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344], "987": [242, 245, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344], "geoclu": [242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344], "990": [242, 245, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344], "chroni": [242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344], "984": [242, 245, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344, 924], "saslauth": [242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344], "saslauthd": [242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344], "radvd": [242, 258, 265, 268], "rpc": [242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344], "rpcbind": [242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344], "openvpn": [242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344], "982": [242, 245, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344, 924], "981": [242, 245, 258, 265, 268, 344], "spawn": [242, 258, 265, 268, 283, 290, 300, 304, 321, 326, 332, 338, 344], "colord": [242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344], "985": [242, 245, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344, 924], "rpcuser": [242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344], "abrt": [242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344, 871, 924], "flatpak": [242, 258, 265, 268, 283, 290, 300, 304, 307, 326, 332, 338, 344, 924], "979": [242, 245, 258, 265, 268], "helper": [242, 258, 262, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344, 406, 600, 664, 712, 753, 827, 924, 1156, 1159], "983": [242, 245, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344, 924], "978": [242, 245, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 924], "vboxadd": [242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344, 924], "tcpdump": [242, 258, 265, 268, 283, 290, 300, 304, 326, 332, 338, 344, 924], "974": [242, 245, 258, 265, 268], "broker": [242, 246, 258, 265, 268, 283, 290, 300, 304, 321, 326, 332, 338, 871, 1125], "mappingproxi": [242, 258, 271], "229": [242, 245, 250, 252, 258, 262, 265, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348], "230": [242, 245, 250, 252, 255, 258, 262, 265, 268, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348], "231": [242, 245, 250, 252, 255, 258, 262, 265, 283, 290, 304, 310, 326, 332, 338, 344, 348, 516, 517, 518, 530, 531, 532], "232": [242, 245, 250, 252, 255, 258, 262, 265, 268, 283, 304, 310, 326, 332, 338, 344, 348], "233": [242, 245, 250, 252, 258, 262, 265, 268, 283, 290, 300, 304, 310, 326, 332, 338, 344, 348], "inputlist": [242, 1033], "ret": [242, 245, 250, 474, 712, 997, 1033, 1078], "235": [242, 245, 250, 252, 255, 258, 262, 265, 268, 283, 290, 300, 304, 310, 322, 326, 338, 344, 348], "236": [242, 245, 250, 252, 255, 258, 262, 265, 268, 283, 304, 310, 322, 326, 332, 338, 344, 348, 459], "237": [242, 245, 250, 252, 258, 262, 265, 268, 283, 300, 304, 310, 326, 332, 338, 344, 348], "238": [242, 245, 250, 252, 255, 258, 262, 265, 268, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348], "239": [242, 245, 250, 252, 258, 262, 265, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348], "240": [242, 245, 250, 252, 255, 258, 262, 265, 268, 283, 300, 304, 310, 326, 332, 338, 344, 348], "242": [242, 245, 250, 252, 255, 258, 265, 268, 283, 300, 304, 310, 322, 326, 332, 338, 344, 348], "243": [242, 245, 250, 252, 258, 265, 268, 283, 300, 304, 310, 322, 332, 338, 344, 348], "244": [242, 245, 250, 252, 255, 258, 265, 268, 283, 304, 310, 322, 332, 338, 344, 348], "245": [242, 245, 250, 252, 265, 283, 300, 304, 310, 322, 332, 338, 344, 348], "247": [242, 245, 250, 252, 258, 262, 265, 283, 300, 304, 310, 326, 332, 338, 344, 348], "248": [242, 245, 250, 252, 255, 262, 265, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348], "249": [242, 245, 250, 252, 258, 262, 265, 268, 283, 290, 304, 310, 322, 326, 332, 338, 344, 348], "250": [242, 245, 250, 252, 258, 262, 265, 268, 283, 290, 294, 300, 304, 310, 332, 338, 344, 348, 922], "251": [242, 245, 250, 252, 255, 258, 262, 265, 283, 290, 300, 304, 310, 322, 326, 338, 344, 348], "252": [242, 245, 250, 252, 255, 262, 265, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 1144], "253": [242, 245, 250, 252, 255, 258, 265, 268, 283, 290, 304, 310, 326, 338, 344, 348], "256": [242, 245, 250, 252, 258, 265, 268, 283, 290, 300, 304, 310, 326, 332, 338, 344, 348, 397, 605, 1133, 1144], "257": [242, 245, 250, 252, 255, 258, 262, 265, 268, 283, 290, 300, 304, 310, 332, 338, 344, 348], "258": [242, 245, 250, 252, 255, 258, 262, 265, 283, 290, 300, 304, 310, 338, 344, 348], "0x7fda5444e6a0": 242, "259": [242, 245, 250, 252, 255, 258, 265, 283, 290, 300, 304, 310, 332, 338, 344, 348], "260": [242, 245, 250, 252, 255, 258, 265, 283, 290, 300, 304, 310, 322, 332, 338, 344, 348], "261": [242, 245, 250, 252, 258, 262, 268, 283, 290, 300, 304, 310, 338, 344, 348], "262": [242, 245, 250, 252, 258, 268, 283, 290, 300, 304, 310, 322, 332, 338, 344, 348], "263": [242, 245, 250, 252, 258, 262, 265, 268, 283, 290, 300, 304, 310, 322, 338, 344, 348], "264": [242, 245, 250, 252, 255, 258, 265, 268, 283, 290, 304, 310, 322, 332, 338, 344, 348], "265": [242, 245, 250, 252, 258, 265, 283, 290, 304, 310, 322, 332, 338, 344, 348], "266": [242, 245, 250, 252, 255, 258, 262, 268, 283, 304, 310, 338, 344, 348], "267": [242, 245, 250, 252, 255, 258, 265, 268, 283, 290, 304, 310, 322, 338, 344, 348], "268": [242, 245, 250, 252, 258, 265, 268, 283, 290, 304, 310, 332, 338, 344, 348], "269": [242, 245, 250, 252, 255, 258, 262, 265, 283, 290, 300, 304, 310, 338, 344, 348, 1009], "270": [242, 245, 250, 252, 258, 262, 265, 283, 290, 300, 304, 310, 322, 332, 338, 344, 348], "other_map": 242, "272": [242, 245, 250, 252, 255, 258, 262, 265, 283, 290, 300, 304, 310, 322, 338, 344, 348], "273": [242, 245, 250, 252, 258, 262, 283, 290, 304, 310, 332, 338, 344, 348, 540, 558, 559, 560, 561, 563, 564, 772, 774, 776, 1043], "274": [242, 245, 250, 252, 255, 258, 262, 265, 283, 290, 300, 304, 310, 332, 338, 344, 348], "140575811316304": 242, "275": [242, 245, 250, 252, 258, 262, 265, 283, 290, 300, 304, 310, 322, 338, 344, 348], "276": [242, 245, 250, 252, 255, 265, 283, 290, 300, 304, 310, 322, 338, 344, 348], "277": [242, 245, 250, 252, 255, 258, 262, 265, 283, 300, 304, 310, 332, 338, 344], "278": [242, 245, 250, 252, 258, 265, 283, 290, 304, 310, 322, 332, 338, 344], "279": [242, 245, 250, 252, 255, 258, 262, 265, 283, 290, 304, 310, 322, 338, 344], "280": [242, 245, 250, 252, 255, 258, 262, 283, 290, 304, 310, 322, 338, 344, 1008, 1009], "140575692459008": 242, "282": [242, 245, 250, 252, 255, 258, 262, 265, 283, 290, 304, 310, 322, 338, 344], "283": [242, 245, 250, 252, 255, 258, 262, 265, 283, 304, 310, 338, 344], "284": [242, 245, 250, 252, 258, 262, 265, 283, 287, 310, 322, 332, 338, 344], "elementwis": 242, "285": [242, 245, 250, 252, 255, 258, 283, 290, 304, 310, 322, 338, 344], "286": [242, 245, 250, 252, 255, 258, 262, 283, 304, 310, 322, 338, 344], "287": [242, 245, 250, 252, 255, 258, 262, 265, 283, 290, 310, 322, 332, 338, 344], "140575692438848": 242, "288": [242, 245, 250, 252, 258, 262, 265, 283, 290, 304, 310, 322, 332, 338, 344], "140575692448960": 242, "289": [242, 245, 250, 252, 258, 283, 290, 304, 310, 322, 332, 338, 344], "290": [242, 245, 250, 252, 258, 283, 290, 304, 310, 338, 344], "292": [242, 245, 250, 258, 262, 283, 290, 300, 304, 338, 344], "293": [242, 245, 250, 252, 258, 283, 290, 300, 304, 310, 338, 344], "295": [242, 245, 250, 252, 258, 262, 283, 290, 300, 304, 338, 344], "296": [242, 245, 250, 252, 258, 283, 290, 300, 304, 310, 338, 344], "298": [242, 245, 250, 258, 262, 283, 290, 300, 304, 310, 332, 338, 344], "deep": [242, 254, 322, 707, 712, 995], "301": [242, 245, 250, 255, 258, 262, 283, 290, 300, 304, 310, 322, 338, 344], "302": [242, 245, 250, 252, 258, 262, 283, 290, 304, 310, 322, 338, 344, 1088], "deepcopi": [242, 252, 265, 290, 310, 322, 1071], "303": [242, 245, 250, 252, 255, 258, 290, 304, 310, 322, 332, 338, 344, 1009], "304": [242, 245, 250, 252, 255, 258, 262, 322, 338, 344], "305": [242, 245, 255, 258, 283, 300, 304, 310, 322, 338, 344], "314": [242, 245, 252, 255, 258, 283, 290, 300, 304, 310, 332, 338, 344], "315": [242, 245, 258, 283, 304, 310, 332, 338, 344], "rdr": [242, 243, 326, 474, 497, 1139], "delimit": [242, 243, 258, 287, 288, 304, 326, 332, 344, 621, 919, 1059, 1139], "fund_nam": [242, 243, 1088], "fund_isin": [242, 243, 1088], "fund_tick": [242, 243, 1088], "as_of_d": [242, 243, 1088], "fund_in_univers": [242, 243, 1088], "fund_of_fund": [242, 243, 1088], "fund_holdings_count": [242, 243, 1088], "fund_holding_funds_count": [242, 243, 1088], "american": [242, 248, 673, 687, 786, 1088, 1144], "fund": [242, 1088], "balanc": [242, 246, 441, 1088], "us0240711020": [242, 1088], "abalx": [242, 1088], "20210103": [242, 1088], "084": [242, 1088], "dodg": [242, 1088], "cox": [242, 1088], "us2562011047": [242, 1088], "dodbx": [242, 1088], "410": [242, 245, 290, 304, 338, 348, 1088], "us2562191062": [242, 1088], "dodgx": [242, 1088], "franklin": [242, 1088], "incom": [242, 258, 321, 1088, 1147], "us3534963000": [242, 1088], "fkinx": [242, 1088], "america": [242, 1088], "us3998741066": [242, 1088], "agthx": [242, 1088], "price": [242, 262, 467, 490, 1088], "us7414791092": [242, 1088], "prgfx": [242, 1088], "fidel": [242, 1088], "puritan": [242, 1088], "us3163451079": [242, 1088], "fpurx": [242, 1088], "contrafund": [242, 1088], "us3160711095": [242, 1088], "fcntx": [242, 1088], "363": [242, 245, 290, 304, 322, 332, 338, 344, 348, 1088], "us77954m1053": [242, 1088], "prwcx": [242, 1088], "westburi": [242, 1088], "us6804141090": [242, 1088], "owlsx": [242, 1088], "us1401931035": [242, 1088], "caibx": [242, 1088], "582": [242, 245, 338, 1088], "harbor": [242, 1088], "institut": [242, 243, 503, 518, 1088], "us4115115044": [242, 1088], "hacax": [242, 1088], "us77954q1067": [242, 1088], "trbcx": [242, 1088], "dreyfu": [242, 1088], "treasuri": [242, 1088], "cash": [242, 1088], "inst": [242, 1088], "us2619411083": [242, 1088], "dirxx": [242, 1088], "blackrock": [242, 1088], "us09251t5092": [242, 1088], "malox": [242, 1088], "us3163453059": [242, 1088], "flpsx": [242, 1088], "liquid": [242, 1088], "us09248u5517": [242, 1088], "tttxx": [242, 1088], "dfa": [242, 1088], "portfolio": [242, 262, 1088], "us2332038841": [242, 1088], "dfgbx": [242, 1088], "feder": [242, 1088], "herm": [242, 1088], "us60934n6821": [242, 1088], "utixx": [242, 1088], "oakmark": [242, 1088], "investor": [242, 262, 1088], "us4138382027": [242, 1088], "oakix": [242, 1088], "asset": [242, 1088], "us00767h4939": [242, 1088], "787": [242, 245, 1088], "fpa": [242, 1088], "crescent": [242, 1088], "us30254t7596": [242, 1088], "fpacx": [242, 1088], "us3534968058": [242, 1088], "fcisx": [242, 1088], "us5529836943": [242, 1088], "meiix": [242, 1088], "goldman": [242, 1088], "sach": [242, 1088, 1202], "instrument": [242, 465, 467, 937, 1088], "us38142b5003": [242, 1088], "ftixx": [242, 1088], "schwab": [242, 1088], "us8085098551": [242, 1088], "swppx": [242, 1088], "508": [242, 245, 290, 322, 338, 1088], "templeton": [242, 1088], "bond": [242, 1088], "advisor": [242, 1088], "us8802084009": [242, 1088], "tgbax": [242, 1088], "us32008f6060": [242, 1088], "sgiix": [242, 1088], "ishar": [242, 1088], "etf": [242, 1088], "us4642872000": [242, 1088], "ivv": [242, 1088], "507": [242, 245, 322, 1088], "vanguard": [242, 1088], "admir": [242, 1088], "us9229087104": [242, 1088], "vfiax": [242, 1088], "510": [242, 245, 322, 332, 338, 1088], "us9229087286": [242, 1088], "vtsax": [242, 1088], "370": [242, 245, 290, 304, 332, 338, 344, 348, 1088], "spdr": [242, 1088], "midcap": [242, 1088], "us78467y1073": [242, 1088], "mdy": [242, 1088], "dow": [242, 1088], "jone": [242, 366, 367, 1088], "industri": [242, 833, 1088], "us78467x1090": [242, 1088], "health": [242, 1088], "us81369y2090": [242, 1088], "xlv": [242, 1088], "discretionari": [242, 1088], "us81369y4070": [242, 1088], "xly": [242, 1088], "energi": [242, 1088], "us81369y5069": [242, 1088], "xle": [242, 1088], "financi": [242, 1088], "us81369y6059": [242, 1088], "xlf": [242, 1088], "us81369y8030": [242, 1088], "xlk": [242, 1088], "invesco": [242, 1088], "qqq": [242, 1088], "us46090e1038": [242, 1088], "us2562061034": [242, 1088], "dodfx": [242, 1088], "msci": [242, 1088], "eaf": [242, 1088], "us4642874659": [242, 1088], "efa": [242, 1088], "897": [242, 245, 1088], "jpmorgan": [242, 1088], "sec": [242, 488, 991, 1088, 1159], "mny": [242, 1088], "mkt": [242, 1088], "us4812a28358": [242, 1088], "jtsxx": [242, 1088], "eql": [242, 1088], "wght": [242, 1088], "us46137v3574": [242, 1088], "us4812a03757": [242, 1088], "cjtxx": [242, 1088], "us00143w8753": [242, 1088], "odvyx": [242, 1088], "dividend": [242, 1088], "us78464a7634": [242, 1088], "sdy": [242, 1088], "equiti": [242, 1088], "us2332033719": [242, 1088], "dfiex": [242, 1088], "888": [242, 245, 1088], "edgewood": [242, 1088], "us0075w07594": [242, 1088], "egfix": [242, 1088], "prudenti": [242, 1088], "us00767h7585": [242, 1088], "r6": [242, 1088], "us55273h3536": [242, 1088], "meikx": [242, 1088], "327": [242, 245, 258, 283, 290, 300, 332, 338, 344, 348], "328": [242, 245, 252, 258, 290, 338, 344, 348], "geschieht": [243, 383, 920], "wunder": 243, "groesser": 243, "jave": 243, "shorthand": [243, 398, 912, 1044], "lin": 243, "lout": 243, "faster": [243, 262, 321, 450, 462, 995, 1001], "outputlist": 243, "getus": [243, 1109], "userdatabas": [243, 1109], "userid": [243, 255], "groupid": 243, "loginshel": [243, 344], "userrecord": 243, "dens": [243, 252, 262], "pratic": 243, "_fix_float_numb": 243, "fieldnam": [243, 1139], "_fix_bool": 243, "elif": [243, 250, 326, 396, 433, 474, 1050, 1065, 1066], "_fix_dat": 243, "read_stock": [243, 1088], "csvfile": [243, 1043], "converted_record": 243, "dbname": [243, 1142], "stmt": 243, "predefin": [243, 965, 1000, 1005, 1177], "circuit": [244, 250, 260, 938, 1064, 1188, 1195], "windows_path": [245, 250], "festplatt": [245, 1198], "eue": [245, 322, 338, 360], "lehrer": 245, "50923504": 245, "202107": 245, "140106795875920": 245, "140106669190640": 245, "669": [245, 262], "140106669191024": 245, "0j": 245, "copied_l": [245, 252], "140106669249856": 245, "copied_t": 245, "tuple_containing_one_el": 245, "tran": 245, "satan": [245, 255], "queen": [245, 265, 1120, 1122, 1126, 1128, 1139], "10000000000": [245, 300, 360], "prod": 245, "resultset_to_local_db": 245, "my_local_db": 245, "basenam": 245, "normalized_path": 245, "normpath": [245, 252, 1038], "291": [245, 250, 258, 283, 300, 310, 322, 332, 338, 344, 466], "294": [245, 250, 258, 283, 300, 304, 310, 338, 344], "297": [245, 250, 252, 258, 262, 304, 332, 338, 344], "299": [245, 250, 255, 258, 262, 283, 290, 300, 304, 310, 332, 338, 344], "306": [245, 255, 262, 283, 300, 304, 310, 322, 332, 338, 344], "307": [245, 252, 258, 283, 300, 304, 310, 322, 332, 338, 344], "309": [245, 252, 255, 258, 290, 300, 304, 310, 322, 326, 338, 344, 348], "310": [245, 252, 255, 258, 304, 310, 322, 338, 344, 411], "311": [245, 252, 283, 304, 310, 332, 338, 344], "312": [245, 252, 258, 283, 290, 300, 310, 332, 338, 344], "313": [245, 252, 258, 290, 304, 310, 332, 338, 344], "316": [245, 252, 255, 258, 283, 304, 322, 332, 338, 344], "317": [245, 252, 255, 283, 290, 300, 304, 322, 332, 338, 344], "318": [245, 255, 258, 290, 304, 332, 338, 344], "319": [245, 252, 255, 258, 283, 300, 304, 322, 332, 338, 344], "321": [245, 255, 258, 290, 300, 304, 310, 322, 338, 344, 348], "322": [245, 255, 258, 290, 310, 322, 332, 338, 344], "323": [245, 252, 255, 258, 283, 304, 310, 322, 332, 338, 344], "324": [245, 255, 258, 283, 300, 304, 310, 322, 332, 338, 344, 549], "325": [245, 252, 258, 290, 300, 310, 332, 338, 344], "326": [245, 252, 258, 283, 300, 310, 322, 332, 338, 344], "329": [245, 258, 283, 290, 322, 338, 344, 348], "331": [245, 252, 258, 283, 304, 338, 344, 348], "335": [245, 252, 258, 290, 304, 332, 338, 344], "336": [245, 252, 258, 304, 332, 338, 344, 481], "337": [245, 258, 290, 304, 332, 338, 344, 348], "338": [245, 252, 290, 304, 332, 338, 344], "339": [245, 252, 258, 304, 332, 338, 344, 348], "341": [245, 252, 258, 290, 304, 322, 332, 338, 344, 348], "342": [245, 252, 258, 290, 310, 332, 338, 344], "343": [245, 258, 290, 304, 322, 338, 344, 348], "346": [245, 258, 304, 322, 332, 338, 344, 647, 648, 649, 650], "347": [245, 290, 304, 322, 332, 338, 344], "348": [245, 258, 322, 332, 338, 344], "349": [245, 258, 304, 322, 332, 338, 344, 461], "351": [245, 252, 258, 304, 332, 338, 344], "352": [245, 252, 258, 290, 304, 332, 338, 344], "353": [245, 252, 258, 290, 304, 332, 338, 344], "354": [245, 258, 304, 332, 338, 344, 495], "355": [245, 290, 304, 332, 338, 344, 348], "356": [245, 265, 304, 322, 338, 344, 348], "357": [245, 290, 304, 322, 332, 338, 344, 348], "359": [245, 304, 332, 338], "361": [245, 304, 322, 332, 338, 348], "362": [245, 290, 304, 322, 332, 338], "364": [245, 304, 338, 344, 348], "365": [245, 322, 338, 344], "366": [245, 290, 304, 338, 344, 348], "367": [245, 304, 322, 332, 338, 344, 348], "368": [245, 304, 332, 338, 344, 348], "369": [245, 290, 304, 332, 338], "371": [245, 290, 332, 338, 344, 348], "373": [245, 252, 290, 322, 332, 338, 348], "374": [245, 252, 304, 322, 338, 348], "375": [245, 252, 262, 290, 304, 322, 332, 338, 348, 461], "376": [245, 290, 304, 322, 332, 338, 348], "377": [245, 252, 290, 304, 322, 332, 338], "379": [245, 290, 304, 322, 332, 338], "380": [245, 290, 304, 322, 338], "381": [245, 252, 290, 304, 338], "382": [245, 290, 304, 322, 338], "383": [245, 252, 290, 294, 322, 332, 338], "384": [245, 290, 304, 322, 332, 338, 348], "385": [245, 290, 304, 322, 338, 348], "386": [245, 290, 304, 322, 338, 348], "387": [245, 338, 348], "388": [245, 290, 304, 322, 338, 348], "389": [245, 322, 338, 348], "390": [245, 304, 322, 338, 348], "391": [245, 290, 322, 338], "392": [245, 290, 338, 348], "393": [245, 252, 290, 304, 322, 338, 348], "394": [245, 252, 290, 304, 322, 338, 348], "395": [245, 252, 290, 304, 322, 332, 338, 348], "396": [245, 252, 290, 338, 348, 878], "397": [245, 252, 304, 322, 338, 348], "398": [245, 252, 304, 338, 348], "399": [245, 252, 304, 322, 338, 348], "401": [245, 252, 290, 304, 338, 348], "402": [245, 290, 322, 338, 348], "403": [245, 252, 304, 322, 338, 348], "405": [245, 304, 338, 348], "406": [245, 252, 290, 304, 322, 338], "407": [245, 290, 304, 322, 338, 348], "408": [245, 252, 290, 304, 322, 338, 348], "409": [245, 252, 290, 304, 322, 332, 338, 348], "411": [245, 252, 290, 304, 332, 338], "412": [245, 304, 338], "413": [245, 252, 290, 304, 338], "414": [245, 252, 290, 304, 322, 338], "415": [245, 304, 322, 338], "416": [245, 252, 290, 322, 338], "417": [245, 252, 290, 304, 338], "418": [245, 252, 290, 322, 338, 348], "419": [245, 252, 290, 304, 322, 338], "420": [245, 252, 290, 304, 322, 338], "421": [245, 252, 290, 304, 322, 338], "422": [245, 252, 332, 338, 348], "423": [245, 290, 304, 322, 338, 348, 784], "424": [245, 252, 290, 304, 338, 348], "425": [245, 290, 338], "426": [245, 322], "427": [245, 252, 290, 322, 338, 348], "428": [245, 252, 290, 322, 338, 348], "429": [245, 290, 322, 338, 348], "430": [245, 252, 290, 322, 338, 348], "431": [245, 290, 322, 332, 338, 348, 784], "432": [245, 252, 290, 322, 348], "433": [245, 290, 322, 332, 348], "434": [245, 290, 338, 348], "435": [245, 348], "436": [245, 290, 322, 338, 348], "437": [245, 252, 290, 322, 332, 338, 348], "438": [245, 252, 322, 338, 348], "439": [245, 290, 338, 348], "440": [245, 252, 290, 338, 348], "441": [245, 252, 290, 338, 348], "442": [245, 252, 290, 332, 348], "443": [245, 252, 322, 338, 348], "444": [245, 252, 322, 338, 348], "445": [245, 252, 322, 332, 338, 348], "446": [245, 290, 348], "447": [245, 252, 290, 322, 332, 338, 348], "448": [245, 290, 338, 348], "449": [245, 252, 338], "451": [245, 252, 322, 338], "452": [245, 252, 290, 338, 348], "453": [245, 252, 322, 338, 348], "454": [245, 252, 290, 338, 348], "455": [245, 252, 338, 348], "457": 245, "458": [245, 290, 338, 348], "459": [245, 332], "460": [245, 290], "461": [245, 290, 348], "462": [245, 290, 348], "463": [245, 338], "464": [245, 290, 338, 348], "465": [245, 290, 294, 332, 338, 348], "466": [245, 290, 348], "467": [245, 290, 332, 338, 348], "468": [245, 290, 338, 348], "469": [245, 290, 338, 348, 750], "470": [245, 290, 338], "471": [245, 290, 332, 338, 348], "472": [245, 290, 338, 348], "473": [245, 338], "474": [245, 290, 338, 348], "475": [245, 290, 338, 348], "476": [245, 290, 332, 338, 348], "478": [245, 348], "479": [245, 290, 338, 348], "480": [245, 290, 338, 348], "481": [245, 290, 338], "482": [245, 290, 332, 348], "483": [245, 290, 332, 338, 348], "484": [245, 348], "485": [245, 348], "486": [245, 290, 338, 348], "487": [245, 290, 338, 348], "488": [245, 290, 338, 348], "489": 245, "490": [245, 338, 915], "491": [245, 338], "492": [245, 338, 348], "494": [245, 290, 338], "495": [245, 348], "496": [245, 348], "497": [245, 290, 338], "498": [245, 290, 338], "499": [245, 338, 348], "502": [245, 290, 338, 348], "503": [245, 338], "504": [245, 290], "505": [245, 258, 290, 338], "506": [245, 290, 338], "509": [245, 322, 348], "511": [245, 322, 332, 338], "514": [245, 338], "515": [245, 290, 338, 749], "516": [245, 290], "518": [245, 290, 338, 348], "519": [245, 338, 348], "520": [245, 290, 348], "521": [245, 290, 348, 769, 773], "522": 245, "523": 245, "524": [245, 290], "525": [245, 290, 338], "526": 245, "527": [245, 338], "528": 245, "529": [245, 332, 338], "530": 245, "531": [245, 290, 338, 348], "532": [245, 348, 784], "533": [245, 338, 348], "534": [245, 338, 348], "535": [245, 338, 348], "536": [245, 915], "538": [245, 338], "539": [245, 338], "540": [245, 332, 348], "541": [245, 338], "542": [245, 338], "543": [245, 348], "544": [245, 332, 338, 348], "545": [245, 332, 338], "546": [245, 338], "547": [245, 338, 348], "548": [245, 294, 338], "549": [245, 338], "550": [245, 338], "551": 245, "552": [245, 332, 338, 348], "553": [245, 332, 338, 348], "554": [245, 917], "555": [245, 348], "556": [245, 332], "557": [245, 338], "558": [245, 338], "559": [245, 338], "560": [245, 348], "561": [245, 338, 348], "562": [245, 338, 348], "563": [245, 338, 348], "564": [245, 338, 348], "565": [245, 338], "566": 245, "567": [245, 338, 348], "568": [245, 348], "569": [245, 338, 348], "570": 245, "571": 245, "572": 245, "573": 245, "574": [245, 338], "575": [245, 338], "576": 245, "577": [245, 338], "578": [245, 338], "579": [245, 338], "580": [245, 338], "581": [245, 338], "583": [245, 332], "584": 245, "585": [245, 338], "586": 245, "587": 245, "588": [245, 326, 338], "589": [245, 338], "590": [245, 338], "591": [245, 332], "592": 245, "593": [245, 338], "594": [245, 332], "595": [245, 338], "596": [245, 1021], "597": 245, "598": 245, "599": 245, "601": 245, "602": 245, "603": 245, "604": 245, "605": 245, "606": 245, "607": [245, 332], "608": 245, "609": [245, 332], "610": [245, 915], "611": 245, "612": [245, 878], "613": 245, "614": 245, "615": [245, 332], "616": 245, "617": 245, "618": 245, "619": 245, "620": 245, "621": 245, "622": 245, "623": 245, "624": 245, "625": [245, 262], "626": 245, "627": 245, "628": 245, "629": 245, "630": 245, "631": 245, "632": 245, "633": 245, "634": 245, "635": 245, "636": 245, "637": 245, "638": 245, "639": 245, "640": [245, 600], "641": 245, "642": 245, "643": 245, "644": [245, 1058], "645": 245, "646": 245, "647": 245, "648": 245, "649": 245, "650": [245, 332], "651": 245, "652": 245, "653": 245, "654": 245, "655": [245, 332], "656": 245, "657": [245, 332], "658": 245, "659": 245, "660": 245, "661": 245, "662": 245, "663": 245, "665": [245, 332], "668": [245, 332, 1062], "670": 245, "671": [245, 332], "672": 245, "673": 245, "674": 245, "675": 245, "676": 245, "677": 245, "678": 245, "679": 245, "680": [245, 332], "681": [245, 332], "682": [245, 915], "683": 245, "684": 245, "685": 245, "687": 245, "688": 245, "689": 245, "690": 245, "691": 245, "692": 245, "693": 245, "694": 245, "695": [245, 332], "696": 245, "697": [245, 332], "698": [245, 915, 955], "699": 245, "701": [245, 332], "702": 245, "703": [245, 298, 299, 320], "704": 245, "705": 245, "706": [245, 332], "707": 245, "708": [245, 258], "709": 245, "710": [245, 600], "711": 245, "712": 245, "713": 245, "715": [245, 674], "716": [245, 332], "717": 245, "718": 245, "719": 245, "720": 245, "721": 245, "722": 245, "723": 245, "724": 245, "725": 245, "726": 245, "727": [245, 332], "728": 245, "729": 245, "730": [245, 287], "731": 245, "732": 245, "733": 245, "734": 245, "735": 245, "736": 245, "737": 245, "738": 245, "739": 245, "740": 245, "741": 245, "742": 245, "743": 245, "744": 245, "745": 245, "746": [245, 332, 1009], "747": 245, "748": 245, "749": 245, "750": 245, "751": 245, "752": 245, "753": 245, "754": 245, "756": 245, "757": 245, "758": 245, "759": 245, "760": 245, "761": 245, "762": 245, "763": 245, "764": 245, "765": 245, "766": 245, "767": 245, "768": [245, 332], "769": 245, "770": [245, 332], "772": 245, "773": 245, "774": [245, 332], "775": 245, "776": 245, "778": 245, "779": 245, "780": 245, "781": [245, 332], "782": [245, 294], "783": 245, "784": 245, "785": 245, "786": 245, "788": [245, 332], "789": [245, 252], "790": 245, "791": [245, 749], "792": 245, "793": 245, "794": 245, "795": 245, "796": 245, "797": 245, "798": 245, "801": [245, 287], "802": 245, "803": 245, "804": [245, 332], "805": 245, "806": 245, "807": 245, "808": 245, "809": [245, 326], "810": 245, "811": [245, 332], "812": [245, 332], "813": [245, 332], "814": 245, "815": [245, 262], "816": [245, 268, 332], "817": 245, "818": 245, "819": 245, "820": 245, "822": 245, "823": 245, "824": 245, "826": 245, "827": [245, 332], "828": [245, 294, 332], "829": 245, "830": 245, "831": 245, "832": 245, "833": 245, "834": 245, "835": 245, "836": 245, "837": 245, "838": 245, "839": [245, 332], "840": 245, "841": 245, "842": 245, "843": 245, "844": [245, 332], "845": 245, "846": 245, "847": 245, "848": 245, "849": 245, "850": 245, "851": 245, "852": 245, "853": 245, "854": 245, "855": 245, "856": 245, "857": 245, "858": 245, "859": 245, "860": 245, "861": 245, "862": [245, 332], "863": 245, "864": 245, "865": 245, "866": 245, "867": 245, "868": 245, "870": 245, "871": 245, "872": 245, "873": 245, "874": [245, 497], "875": 245, "876": 245, "877": [245, 332], "878": 245, "879": [245, 461], "880": 245, "881": [245, 332], "882": 245, "883": [245, 332], "884": 245, "885": 245, "886": 245, "887": [245, 332], "889": 245, "890": 245, "891": [245, 332], "892": 245, "893": 245, "894": 245, "895": 245, "896": 245, "898": [245, 332], "899": 245, "901": 245, "902": [245, 915], "903": 245, "904": 245, "905": 245, "906": 245, "907": 245, "908": 245, "909": [245, 332], "911": 245, "912": 245, "913": 245, "914": 245, "915": 245, "916": 245, "917": [245, 294], "918": [245, 332], "919": 245, "920": 245, "921": [245, 332], "922": [245, 332], "923": 245, "924": 245, "925": 245, "926": [245, 332], "927": 245, "928": 245, "929": [245, 332], "930": 245, "931": 245, "932": 245, "933": [245, 332], "934": 245, "935": [245, 332], "936": 245, "937": 245, "938": 245, "939": [245, 332], "940": [245, 332], "941": [245, 332], "942": 245, "943": 245, "944": 245, "945": 245, "946": [245, 332], "947": 245, "948": 245, "949": [245, 332], "950": 245, "951": [245, 326], "952": 245, "953": 245, "954": 245, "955": 245, "956": 245, "957": 245, "958": 245, "959": 245, "960": 245, "961": 245, "962": 245, "963": 245, "964": [245, 332], "965": 245, "966": 245, "967": [245, 332], "968": 245, "969": 245, "970": 245, "971": [245, 332], "972": 245, "973": 245, "975": 245, "976": [245, 283, 290, 300, 304, 326, 332, 338], "977": [245, 283, 290, 300, 304, 326, 332, 338, 924], "timeaxi": 245, "myrang": 245, "1002": [245, 647, 648, 649, 650, 878], "1004": 245, "1006": 245, "1008": 245, "1010": 245, "1012": 245, "1014": 245, "1016": 245, "1018": 245, "1020": [245, 860, 861, 868], "1022": 245, "1028": 245, "1030": 245, "1032": 245, "1034": 245, "1036": 245, "1038": 245, "1040": 245, "1042": [245, 995], "1046": 245, "1048": 245, "1050": 245, "1052": 245, "1054": 245, "1056": 245, "1058": 245, "1060": 245, "1062": 245, "1064": 245, "1066": 245, "1068": [245, 294], "1070": [245, 294], "1072": [245, 294], "1074": 245, "1076": 245, "1078": 245, "1080": 245, "1082": 245, "1084": 245, "1086": 245, "1088": 245, "1090": 245, "1092": 245, "1094": 245, "1096": 245, "1098": 245, "1102": 245, "1104": 245, "1106": 245, "1108": 245, "1110": 245, "1114": 245, "1116": 245, "1118": 245, "1120": 245, "1122": 245, "1124": 245, "1126": 245, "1128": 245, "1130": 245, "1132": 245, "1134": 245, "1136": 245, "1138": 245, "1140": 245, "1142": 245, "1144": 245, "1146": 245, "1148": 245, "1150": [245, 1152, 1153], "1152": [245, 1152, 1153], "1154": 245, "1156": 245, "1158": 245, "1160": 245, "1162": 245, "1164": 245, "1166": 245, "1168": 245, "1170": 245, "1172": 245, "1174": 245, "1176": 245, "1178": 245, "1180": 245, "1182": 245, "1184": 245, "1186": 245, "1188": 245, "1190": 245, "1192": 245, "1194": 245, "1196": 245, "1198": 245, "1202": 245, "1204": 245, "1206": 245, "1208": 245, "1210": 245, "1212": 245, "1214": 245, "1216": 245, "1218": 245, "1220": 245, "1222": 245, "1224": 245, "1226": 245, "1228": 245, "1230": 245, "1232": 245, "1236": 245, "1238": 245, "1240": 245, "1242": 245, "1246": 245, "1248": 245, "1250": 245, "1252": 245, "1254": [245, 516, 517, 518, 530, 531, 532], "1256": 245, "1258": 245, "1260": [245, 481], "1262": 245, "1264": 245, "1266": 245, "1268": 245, "1270": 245, "1272": 245, "1274": 245, "1276": 245, "1278": 245, "1280": 245, "1282": 245, "1284": 245, "1286": 245, "1288": 245, "1290": 245, "1292": 245, "1294": 245, "1296": 245, "1298": 245, "1300": 245, "1302": 245, "1304": 245, "1306": 245, "1308": 245, "1310": 245, "1312": 245, "1314": 245, "1316": 245, "1318": 245, "1320": 245, "1322": 245, "1324": 245, "1326": 245, "1328": 245, "1330": 245, "1332": 245, "1334": 245, "1336": 245, "1338": 245, "1340": 245, "1342": [245, 1153], "1344": 245, "1346": 245, "1348": 245, "1350": 245, "1352": [245, 965], "1354": 245, "1356": 245, "1358": 245, "1360": 245, "1362": 245, "1364": 245, "1366": 245, "1368": 245, "1370": 245, "1372": 245, "1374": 245, "1378": 245, "1380": 245, "1382": 245, "1384": 245, "1386": 245, "1388": 245, "1390": 245, "1392": [245, 497, 1153], "1394": 245, "1396": 245, "1398": 245, "1400": 245, "1402": 245, "1406": 245, "1408": 245, "1410": 245, "1412": 245, "1414": 245, "1416": [245, 1076], "1418": 245, "1420": 245, "1422": 245, "1424": 245, "1426": 245, "1428": 245, "1430": 245, "1432": 245, "1434": 245, "1436": 245, "1438": 245, "1440": 245, "1442": 245, "1444": 245, "1446": 245, "1448": 245, "1450": 245, "1452": 245, "1454": 245, "1456": 245, "1458": 245, "1460": 245, "1462": 245, "1464": 245, "1466": 245, "1468": 245, "1470": 245, "1472": 245, "1474": 245, "1476": 245, "1478": 245, "1480": 245, "1482": 245, "1484": 245, "1486": 245, "1488": 245, "1490": 245, "1492": 245, "1494": 245, "1496": 245, "1498": 245, "1502": 245, "1504": 245, "1506": 245, "1508": 245, "1510": 245, "1512": 245, "1514": 245, "1516": 245, "1518": 245, "1520": 245, "1522": 245, "1524": 245, "1526": 245, "1528": 245, "1530": 245, "1532": 245, "1534": 245, "1536": [245, 1007], "1538": 245, "1540": 245, "1542": 245, "1544": 245, "1546": 245, "1548": 245, "1550": 245, "1552": 245, "1554": 245, "1556": 245, "1558": [245, 876], "1560": 245, "1562": 245, "1564": 245, "1566": 245, "1568": 245, "1570": 245, "1572": 245, "1574": 245, "1576": 245, "1578": 245, "1580": 245, "1582": 245, "1584": 245, "1586": 245, "1588": 245, "1590": 245, "1592": 245, "1594": 245, "1596": 245, "1598": 245, "1600": 245, "1602": 245, "1604": [245, 1001], "1606": 245, "1608": 245, "1610": 245, "1612": 245, "1614": 245, "1616": 245, "1618": 245, "1620": 245, "1622": 245, "1624": 245, "1626": 245, "1628": 245, "1630": 245, "1632": 245, "1634": [245, 516, 517], "1636": 245, "1638": 245, "1640": 245, "1642": 245, "1644": 245, "1646": [245, 1152], "1648": 245, "1650": 245, "1652": 245, "1654": 245, "1656": 245, "1658": 245, "1660": 245, "1662": 245, "1664": 245, "1666": 245, "1668": 245, "1672": 245, "1674": 245, "1676": 245, "1678": 245, "1680": 245, "1682": 245, "1684": 245, "1686": 245, "1688": [245, 1008, 1009], "1690": 245, "1692": 245, "1694": 245, "1696": 245, "1698": 245, "1700": 245, "1702": 245, "1704": 245, "1706": [245, 1019], "1708": 245, "1710": 245, "1712": 245, "1714": [245, 1152], "1716": [245, 1152], "1718": 245, "1722": 245, "1724": 245, "1726": 245, "1728": 245, "1730": 245, "1732": 245, "1734": 245, "1736": 245, "1738": 245, "1740": 245, "1742": 245, "1744": 245, "1746": 245, "1748": 245, "1750": 245, "1752": 245, "1754": 245, "1756": 245, "1758": 245, "1760": 245, "1762": 245, "1764": [245, 304], "1766": 245, "1768": 245, "1770": 245, "1772": 245, "1774": 245, "1776": 245, "1778": 245, "1780": 245, "1782": 245, "1784": 245, "1786": 245, "1788": 245, "1790": 245, "1792": 245, "1794": 245, "1796": 245, "1798": 245, "1800": [245, 1007], "1802": 245, "1804": 245, "1806": 245, "1808": 245, "1810": 245, "1812": 245, "1814": 245, "1816": 245, "1818": 245, "1820": 245, "1822": 245, "1824": 245, "1826": 245, "1828": 245, "1830": 245, "1832": 245, "1834": 245, "1836": 245, "1838": 245, "1840": 245, "1842": 245, "1844": 245, "1846": 245, "1848": 245, "1850": 245, "1852": 245, "1854": 245, "1856": 245, "1858": 245, "1860": 245, "1862": 245, "1864": 245, "1866": 245, "1868": 245, "1870": 245, "1872": 245, "1874": 245, "1876": 245, "1878": 245, "1880": 245, "1882": 245, "1884": 245, "1886": 245, "1888": 245, "1890": 245, "1892": 245, "1894": 245, "1896": 245, "1898": 245, "1900": [245, 255, 1120, 1122, 1126, 1128], "1902": 245, "1904": 245, "1906": 245, "1908": 245, "1910": 245, "1912": 245, "1914": 245, "1916": 245, "1918": 245, "1920": 245, "1922": 245, "1924": 245, "1926": 245, "1928": 245, "1930": 245, "1932": 245, "1934": 245, "1938": 245, "1940": 245, "1942": 245, "1944": 245, "1946": 245, "1948": 245, "1950": 245, "1952": 245, "1954": [245, 1086], "1956": [245, 1056], "1958": 245, "1962": 245, "1964": 245, "1968": [245, 426], "1970": [245, 765], "1972": 245, "1974": 245, "1976": 245, "1978": [245, 386], "1980": [245, 591, 1007], "1984": 245, "1986": [245, 1120, 1122, 1126, 1128], "1988": [245, 386, 500], "1990": [245, 591], "1992": 245, "1994": 245, "2004": 245, "2026": 245, "2028": 245, "2030": 245, "2032": 245, "2034": 245, "2036": 245, "2038": 245, "2040": 245, "2042": 245, "2044": 245, "2046": 245, "2050": 245, "2052": 245, "2054": 245, "2056": 245, "2058": 245, "2060": 245, "2062": 245, "2064": 245, "2066": 245, "2068": 245, "2070": 245, "2072": 245, "2074": 245, "2076": 245, "2078": 245, "2080": 245, "2082": 245, "2084": 245, "2086": 245, "2088": 245, "2090": 245, "2092": 245, "2094": 245, "2096": 245, "2098": 245, "2100": 245, "2102": 245, "2104": 245, "2106": 245, "2108": 245, "2110": 245, "2112": 245, "2114": 245, "2116": 245, "2118": 245, "2120": 245, "2122": 245, "2124": 245, "2126": 245, "2128": 245, "2130": 245, "2132": 245, "2134": 245, "2136": 245, "2138": 245, "2140": 245, "2142": 245, "2144": 245, "2146": 245, "2148": 245, "2150": 245, "2152": 245, "2154": 245, "2156": 245, "2158": 245, "2160": 245, "2162": 245, "2164": 245, "2166": 245, "2168": 245, "2170": 245, "2172": 245, "2174": 245, "2176": 245, "2178": 245, "2180": 245, "2182": 245, "2184": 245, "2186": 245, "2188": 245, "2190": 245, "2192": 245, "2194": 245, "2196": [245, 784], "2198": 245, "2200": 245, "2202": 245, "2204": 245, "2206": 245, "2208": 245, "2210": 245, "2214": 245, "2216": 245, "2218": 245, "2220": 245, "2222": 245, "2224": 245, "2226": 245, "2228": 245, "2230": 245, "2232": 245, "2234": 245, "2236": 245, "2238": 245, "2240": 245, "2242": 245, "2244": 245, "2246": 245, "2248": 245, "2250": 245, "2252": 245, "2254": 245, "2256": 245, "2258": 245, "2260": 245, "2262": 245, "2264": 245, "2266": 245, "2268": 245, "2272": 245, "2274": 245, "2276": 245, "2278": 245, "2280": 245, "2282": 245, "2284": 245, "2286": 245, "2288": 245, "2290": 245, "2292": 245, "2294": 245, "2296": 245, "2298": 245, "2300": 245, "2302": 245, "2304": 245, "2306": 245, "2308": 245, "2310": 245, "2312": 245, "2314": 245, "2316": 245, "2318": 245, "2320": 245, "2322": 245, "2324": 245, "2326": 245, "2328": 245, "2330": 245, "2332": [245, 915], "2334": 245, "2336": 245, "2338": 245, "2340": 245, "2342": 245, "2344": 245, "2346": 245, "2348": 245, "2350": 245, "2352": 245, "2354": 245, "2356": 245, "2358": 245, "2360": 245, "2362": 245, "2364": 245, "2366": 245, "2368": 245, "2370": 245, "2372": 245, "2374": 245, "2376": 245, "2378": 245, "2380": 245, "2382": 245, "2384": 245, "2386": 245, "2388": 245, "2390": 245, "2392": 245, "2394": 245, "2396": 245, "2398": 245, "2400": 245, "2402": 245, "2404": 245, "2406": 245, "2408": 245, "2410": 245, "2412": 245, "2414": 245, "2416": 245, "2418": 245, "2420": 245, "2422": 245, "2424": 245, "2426": 245, "2428": 245, "2430": 245, "2432": 245, "2434": 245, "2436": 245, "2438": 245, "2440": [245, 326, 332, 338], "2442": 245, "2444": 245, "2446": 245, "2448": 245, "2450": 245, "2452": 245, "2454": 245, "2456": 245, "2458": 245, "2460": [245, 740], "2462": 245, "2464": 245, "2466": 245, "2468": 245, "2470": 245, "2472": 245, "2474": 245, "2476": 245, "2478": 245, "2480": 245, "2482": 245, "2484": 245, "2486": 245, "2488": 245, "2490": 245, "2492": 245, "2494": 245, "2496": 245, "2498": 245, "2500": 245, "2502": 245, "2504": 245, "2506": 245, "2508": 245, "2510": 245, "2512": 245, "2514": 245, "2516": 245, "2518": 245, "2520": 245, "2522": 245, "2524": 245, "2526": 245, "2528": 245, "2530": 245, "2532": 245, "2534": 245, "2536": 245, "2538": 245, "2540": 245, "2542": 245, "2544": 245, "2546": 245, "2548": 245, "2550": 245, "2552": 245, "2554": 245, "2556": 245, "2558": 245, "2560": 245, "2562": 245, "2564": 245, "2566": 245, "2568": 245, "2570": 245, "2572": 245, "2574": 245, "2576": 245, "2578": 245, "2580": 245, "2582": 245, "2584": 245, "2586": 245, "2588": 245, "2590": 245, "2592": 245, "2594": 245, "2596": 245, "2598": 245, "2600": 245, "2602": 245, "2604": 245, "2606": 245, "2608": 245, "2610": 245, "2612": 245, "2614": 245, "2616": 245, "2618": 245, "2620": 245, "2622": 245, "2624": 245, "2626": 245, "2628": 245, "2630": 245, "2632": 245, "2634": 245, "2636": 245, "2638": 245, "2640": [245, 304], "2642": 245, "2644": 245, "2646": 245, "2648": 245, "2650": 245, "2652": 245, "2654": 245, "2656": 245, "2658": 245, "2660": 245, "2662": 245, "2664": 245, "2666": 245, "2668": 245, "2670": 245, "2672": 245, "2674": 245, "2676": 245, "2678": 245, "2680": 245, "2682": 245, "2684": 245, "2686": 245, "2688": 245, "2690": 245, "2692": 245, "2694": 245, "2696": 245, "2698": 245, "2700": 245, "2702": 245, "2704": 245, "2706": [245, 250], "2708": 245, "2710": 245, "2712": 245, "2714": 245, "2716": 245, "2718": 245, "2720": 245, "2722": 245, "2724": 245, "2726": 245, "2728": 245, "2730": [245, 300], "2732": 245, "2734": 245, "2736": 245, "2738": 245, "2740": 245, "2742": 245, "2744": 245, "2746": [245, 915, 941, 965], "2748": [245, 265, 283, 290, 322, 326, 332, 338], "2750": 245, "2752": 245, "2754": 245, "2756": 245, "2758": 245, "2760": 245, "2762": 245, "2764": 245, "2766": 245, "2768": 245, "2770": 245, "2772": 245, "2774": 245, "2776": 245, "2778": 245, "2780": 245, "2782": 245, "2784": 245, "2786": 245, "2788": 245, "2790": 245, "2792": 245, "2794": 245, "2796": 245, "2798": 245, "2800": [245, 288, 474], "2802": [245, 474], "2804": 245, "2806": 245, "2808": 245, "2810": 245, "2812": 245, "2814": 245, "2816": 245, "2818": 245, "2820": 245, "2822": 245, "2824": 245, "2826": 245, "2828": [245, 468], "2830": 245, "2832": 245, "2834": 245, "2836": 245, "2838": 245, "2840": 245, "2842": 245, "2844": 245, "2846": 245, "2848": 245, "2850": 245, "2852": 245, "2854": 245, "2856": 245, "2858": 245, "2860": 245, "2862": 245, "2864": 245, "2866": 245, "2868": 245, "2870": 245, "2872": 245, "2874": 245, "2876": 245, "2878": 245, "2880": 245, "2882": 245, "2884": 245, "2886": 245, "2888": 245, "2890": 245, "2892": 245, "2894": 245, "2896": 245, "2898": 245, "2900": 245, "2902": 245, "2904": 245, "2906": 245, "2910": 245, "2912": 245, "2914": 245, "2916": 245, "2918": 245, "2920": 245, "2922": 245, "2924": 245, "2926": 245, "2928": 245, "2930": 245, "2932": 245, "2934": 245, "2936": 245, "2938": 245, "2940": 245, "2942": 245, "2944": 245, "2946": 245, "2948": 245, "2950": 245, "2952": 245, "2954": 245, "2956": 245, "2958": 245, "2960": 245, "2962": 245, "2964": 245, "2966": 245, "2968": 245, "2970": 245, "2972": 245, "2974": 245, "2976": 245, "2978": 245, "2980": 245, "2982": 245, "2984": 245, "2986": 245, "2988": 245, "2990": 245, "2992": 245, "2994": 245, "2996": 245, "2998": 245, "3002": 245, "3004": 245, "3006": 245, "3008": 245, "3010": 245, "3012": 245, "3014": 245, "3016": 245, "3018": 245, "3020": 245, "3022": 245, "3024": 245, "3026": 245, "3028": 245, "3030": 245, "3032": 245, "3034": 245, "3036": 245, "3038": 245, "3040": 245, "3042": 245, "3044": 245, "3046": 245, "3048": 245, "3050": 245, "3052": 245, "3054": 245, "3056": 245, "3058": 245, "3060": 245, "3062": 245, "3064": 245, "3066": 245, "3068": 245, "3070": 245, "3072": 245, "3074": 245, "3076": 245, "3078": 245, "3080": 245, "3082": 245, "3084": 245, "3086": 245, "3088": 245, "3090": 245, "3092": 245, "3094": 245, "3096": 245, "3098": 245, "3100": 245, "3102": 245, "3104": 245, "3106": 245, "3108": 245, "3110": [245, 294], "3112": 245, "3114": 245, "3116": 245, "3118": 245, "3120": 245, "3122": 245, "3124": 245, "3126": 245, "3128": 245, "3130": 245, "3132": 245, "3134": 245, "3136": 245, "3138": 245, "3140": 245, "3142": 245, "3144": 245, "3146": 245, "3148": 245, "3150": 245, "3152": 245, "3154": 245, "3156": 245, "3158": 245, "3160": 245, "3162": 245, "3164": 245, "3166": 245, "3168": 245, "3170": 245, "3172": 245, "3174": 245, "3176": 245, "3178": 245, "3180": 245, "3182": 245, "3184": 245, "3186": 245, "3188": 245, "3190": 245, "3192": 245, "3194": 245, "3196": 245, "3198": 245, "3200": 245, "3202": 245, "3204": 245, "3206": 245, "3208": 245, "3210": 245, "3212": 245, "3214": 245, "3216": 245, "3218": 245, "3220": 245, "3222": 245, "3224": 245, "3226": 245, "3228": 245, "3230": 245, "3232": 245, "3234": 245, "3236": 245, "3238": 245, "3240": 245, "3242": 245, "3244": 245, "3246": 245, "3248": 245, "3250": 245, "3252": 245, "3254": 245, "3256": 245, "3258": 245, "3260": 245, "3262": 245, "3264": 245, "3266": 245, "3268": 245, "3270": 245, "3272": 245, "3274": 245, "3276": 245, "3278": 245, "3280": 245, "3282": 245, "3284": 245, "3286": 245, "3288": 245, "3290": 245, "3292": 245, "3294": 245, "3296": 245, "3298": 245, "3300": 245, "3302": 245, "3304": 245, "3306": 245, "3308": 245, "3310": 245, "3312": 245, "3314": 245, "3316": 245, "3318": 245, "3320": 245, "3322": 245, "3324": 245, "3326": 245, "3328": 245, "3330": 245, "3332": 245, "3334": 245, "3336": 245, "3338": 245, "3340": 245, "3342": 245, "3344": 245, "3346": 245, "3348": 245, "3350": 245, "3352": 245, "3354": 245, "3356": 245, "3358": 245, "3360": 245, "3362": 245, "3364": 245, "3366": 245, "3368": 245, "3370": 245, "3372": 245, "3374": 245, "3376": 245, "3378": 245, "3380": 245, "3382": 245, "3384": 245, "3386": 245, "3388": 245, "3390": 245, "3392": 245, "3394": 245, "3396": 245, "3398": 245, "3400": 245, "3402": 245, "3404": 245, "3406": 245, "3408": 245, "3410": 245, "3412": 245, "3414": 245, "3416": 245, "3418": 245, "3420": 245, "3422": 245, "3424": 245, "3426": 245, "3428": 245, "3430": 245, "3432": 245, "3434": 245, "3436": 245, "3438": 245, "3440": 245, "3442": 245, "3444": 245, "3446": 245, "3448": 245, "3450": 245, "3452": 245, "3454": 245, "3456": 245, "3458": 245, "3460": 245, "3462": 245, "3464": 245, "3466": 245, "3468": 245, "3470": 245, "3472": 245, "3474": 245, "3476": 245, "3478": 245, "3480": 245, "3482": 245, "3484": 245, "3486": 245, "3488": 245, "3490": 245, "3492": 245, "3494": 245, "3496": 245, "3498": 245, "3500": 245, "3502": 245, "3504": 245, "3506": 245, "3508": 245, "3510": 245, "3512": 245, "3514": 245, "3516": 245, "3518": 245, "3520": 245, "3522": 245, "3524": 245, "3526": 245, "3528": 245, "3530": 245, "3532": 245, "3534": 245, "3536": 245, "3538": 245, "3540": 245, "3542": 245, "3544": 245, "3546": 245, "3548": 245, "3550": 245, "3552": 245, "3554": 245, "3556": 245, "3558": 245, "3560": 245, "3562": 245, "3564": 245, "3566": 245, "3568": 245, "3570": 245, "3572": 245, "3574": 245, "3576": 245, "3578": 245, "3580": 245, "3582": 245, "3584": 245, "3586": 245, "3588": 245, "3590": 245, "3592": 245, "3594": 245, "3596": 245, "3598": 245, "3602": 245, "3604": 245, "3606": 245, "3608": 245, "3610": 245, "3612": 245, "3614": 245, "3616": 245, "3618": 245, "3620": 245, "3622": 245, "3624": 245, "3626": 245, "3628": 245, "3630": 245, "3632": 245, "3634": 245, "3636": 245, "3638": 245, "3640": 245, "3642": 245, "3644": 245, "3646": 245, "3648": 245, "3650": 245, "3652": 245, "3654": 245, "3656": 245, "3658": 245, "3660": 245, "3662": 245, "3664": 245, "3666": 245, "3668": 245, "3670": 245, "3672": 245, "3674": 245, "3676": 245, "3678": 245, "3680": 245, "3682": 245, "3684": 245, "3686": 245, "3688": 245, "3690": 245, "3692": 245, "3694": 245, "3696": 245, "3698": 245, "3700": 245, "3702": 245, "3704": 245, "3706": 245, "3708": 245, "3710": 245, "3712": 245, "3714": 245, "3716": 245, "3718": 245, "3720": 245, "3722": [245, 962], "3724": 245, "3726": 245, "3728": 245, "3730": 245, "3732": 245, "3734": 245, "3736": 245, "3738": 245, "3740": 245, "3742": 245, "3744": 245, "3746": 245, "3748": 245, "3750": 245, "3752": 245, "3754": 245, "3756": 245, "3758": 245, "3760": 245, "3762": 245, "3764": 245, "3766": 245, "3768": 245, "3770": [245, 294], "3772": 245, "3774": 245, "3776": 245, "3778": 245, "3780": 245, "3782": 245, "3784": 245, "3786": 245, "3788": 245, "3790": [245, 1153], "3792": [245, 1153], "3794": [245, 1153], "3796": [245, 1153], "3798": [245, 1153], "3800": [245, 1153], "3802": [245, 1153], "3804": 245, "3806": 245, "3808": 245, "3810": 245, "3812": 245, "3814": 245, "3816": 245, "3818": 245, "3820": 245, "3822": 245, "3824": 245, "3826": 245, "3828": 245, "3830": 245, "3832": 245, "3834": 245, "3836": 245, "3838": 245, "3840": 245, "3842": 245, "3844": 245, "3846": 245, "3848": 245, "3850": 245, "3852": 245, "3854": 245, "3856": 245, "3858": 245, "3860": 245, "3862": 245, "3864": 245, "3866": 245, "3868": 245, "3870": 245, "3872": 245, "3874": 245, "3876": 245, "3878": 245, "3880": 245, "3882": 245, "3884": 245, "3886": 245, "3888": 245, "3890": 245, "3892": 245, "3894": 245, "3896": 245, "3898": 245, "3900": 245, "3902": 245, "3904": 245, "3906": 245, "3908": 245, "3910": 245, "3912": 245, "3914": 245, "3916": 245, "3918": 245, "3920": 245, "3922": 245, "3924": 245, "3926": 245, "3928": 245, "3930": 245, "3932": 245, "3934": 245, "3936": 245, "3938": 245, "3940": 245, "3942": 245, "3946": 245, "3948": 245, "3950": 245, "3952": 245, "3954": 245, "3956": 245, "3958": 245, "3960": 245, "3962": 245, "3964": 245, "3966": 245, "3968": 245, "3970": 245, "3972": 245, "3974": 245, "3976": 245, "3978": 245, "3980": 245, "3982": 245, "3984": 245, "3986": 245, "3988": 245, "3990": 245, "3992": 245, "3994": 245, "3996": 245, "3998": 245, "4002": 245, "4004": 245, "4006": 245, "4008": 245, "4010": 245, "4012": 245, "4014": 245, "4016": 245, "4018": 245, "4020": 245, "4022": 245, "4024": 245, "4026": 245, "4028": 245, "4030": 245, "4032": 245, "4034": 245, "4036": 245, "4038": 245, "4040": 245, "4042": 245, "4044": 245, "4046": 245, "4048": 245, "4050": 245, "4052": 245, "4054": 245, "4056": 245, "4058": 245, "4060": 245, "4062": 245, "4064": 245, "4066": 245, "4068": 245, "4070": 245, "4072": 245, "4074": 245, "4076": 245, "4078": 245, "4080": 245, "4082": 245, "4084": 245, "4086": 245, "4088": 245, "4090": 245, "4092": 245, "4094": 245, "4098": 245, "4100": 245, "4102": 245, "4104": 245, "4106": 245, "4108": 245, "4110": 245, "4112": 245, "4114": 245, "4116": 245, "4118": 245, "4120": 245, "4122": 245, "4124": 245, "4126": 245, "4128": 245, "4130": 245, "4132": 245, "4134": 245, "4136": 245, "4138": 245, "4140": 245, "4142": 245, "4144": 245, "4146": 245, "4148": 245, "4150": 245, "4152": 245, "4154": 245, "4156": 245, "4158": 245, "4160": 245, "4162": 245, "4164": 245, "4166": 245, "4168": 245, "4170": 245, "4172": 245, "4174": 245, "4176": 245, "4178": 245, "4180": 245, "4182": 245, "4184": 245, "4186": 245, "4188": 245, "4190": 245, "4192": 245, "4194": 245, "4196": 245, "4198": 245, "4200": 245, "4202": 245, "4204": 245, "4206": 245, "4208": 245, "4210": 245, "4212": 245, "4214": 245, "4216": 245, "4218": 245, "4220": 245, "4222": 245, "4224": 245, "4226": 245, "4228": 245, "4230": 245, "4232": 245, "4234": [245, 1153], "4236": [245, 1153], "4238": [245, 1153], "4240": 245, "4242": 245, "4244": 245, "4246": 245, "4248": 245, "4250": 245, "4252": 245, "4254": 245, "4256": 245, "4258": 245, "4260": 245, "4262": 245, "4264": 245, "4266": 245, "4268": 245, "4270": 245, "4272": 245, "4274": 245, "4276": 245, "4278": 245, "4280": 245, "4282": 245, "4284": 245, "4286": 245, "4288": 245, "4290": 245, "4292": 245, "4294": 245, "4296": 245, "4298": 245, "4300": 245, "4302": 245, "4304": 245, "4306": 245, "4308": 245, "4310": 245, "4312": 245, "4314": 245, "4316": 245, "4318": 245, "4320": 245, "4322": 245, "4324": 245, "4326": 245, "4328": 245, "4330": 245, "4332": 245, "4334": 245, "4336": 245, "4338": 245, "4340": 245, "4342": 245, "4344": 245, "4346": 245, "4348": 245, "4350": 245, "4352": 245, "4354": 245, "4356": 245, "4358": 245, "4360": 245, "4362": 245, "4364": 245, "4366": 245, "4368": 245, "4370": 245, "4372": 245, "4374": 245, "4376": 245, "4378": 245, "4380": 245, "4382": 245, "4384": 245, "4386": 245, "4388": 245, "4390": 245, "4392": 245, "4394": 245, "4396": 245, "4398": 245, "4400": 245, "4402": 245, "4404": 245, "4406": 245, "4408": 245, "4410": 245, "4412": 245, "4414": 245, "4416": 245, "4418": 245, "4420": 245, "4422": 245, "4424": 245, "4426": 245, "4428": 245, "4430": 245, "4432": 245, "4434": 245, "4436": 245, "4438": 245, "4440": 245, "4442": 245, "4444": 245, "4446": 245, "4448": 245, "4450": 245, "4452": 245, "4454": 245, "4456": 245, "4458": 245, "4460": 245, "4462": 245, "4464": 245, "4466": 245, "4468": 245, "4470": 245, "4472": 245, "4474": 245, "4476": 245, "4478": 245, "4480": 245, "4482": 245, "4484": 245, "4486": 245, "4488": 245, "4490": 245, "4492": 245, "4494": 245, "4496": 245, "4498": 245, "4502": 245, "4504": 245, "4506": 245, "4508": 245, "4510": 245, "4512": 245, "4514": 245, "4516": 245, "4518": 245, "4520": 245, "4522": 245, "4524": 245, "4526": 245, "4528": 245, "4530": 245, "4532": 245, "4534": 245, "4536": 245, "4538": 245, "4540": 245, "4542": 245, "4544": 245, "4546": 245, "4548": 245, "4550": 245, "4552": 245, "4554": 245, "4556": 245, "4558": 245, "4560": 245, "4562": 245, "4564": 245, "4566": 245, "4568": 245, "4570": 245, "4572": 245, "4574": 245, "4578": 245, "4580": 245, "4582": 245, "4584": 245, "4586": 245, "4588": 245, "4590": 245, "4592": 245, "4594": 245, "4596": 245, "4598": 245, "4600": 245, "4602": 245, "4604": 245, "4606": 245, "4608": 245, "4610": 245, "4612": 245, "4614": 245, "4616": 245, "4618": 245, "4620": 245, "4622": 245, "4624": 245, "4626": 245, "4628": [245, 258], "4630": [245, 468], "4632": 245, "4634": 245, "4636": 245, "4638": 245, "4640": 245, "4642": 245, "4644": 245, "4646": 245, "4648": 245, "4650": 245, "4652": 245, "4654": 245, "4656": 245, "4658": 245, "4662": 245, "4664": 245, "4666": 245, "4668": 245, "4670": 245, "4672": 245, "4674": 245, "4676": 245, "4680": 245, "4682": 245, "4684": 245, "4686": 245, "4688": 245, "4690": 245, "4692": 245, "4694": 245, "4696": 245, "4698": 245, "4700": 245, "4702": 245, "4704": 245, "4706": 245, "4708": 245, "4710": 245, "4712": 245, "4714": 245, "4716": 245, "4718": 245, "4720": 245, "4722": 245, "4724": 245, "4726": 245, "4728": 245, "4730": 245, "4732": 245, "4734": 245, "4736": 245, "4738": 245, "4740": 245, "4742": 245, "4744": 245, "4746": 245, "4748": 245, "4750": 245, "4752": 245, "4754": 245, "4756": 245, "4758": 245, "4760": 245, "4762": 245, "4764": 245, "4766": 245, "4768": 245, "4770": 245, "4772": 245, "4774": 245, "4776": 245, "4778": 245, "4780": 245, "4782": 245, "4784": 245, "4786": 245, "4788": 245, "4790": 245, "4792": 245, "4794": 245, "4796": 245, "4798": 245, "4802": 245, "4804": 245, "4806": 245, "4808": 245, "4810": 245, "4812": 245, "4814": 245, "4816": 245, "4818": 245, "4820": 245, "4822": 245, "4824": 245, "4826": 245, "4828": 245, "4830": 245, "4832": 245, "4834": 245, "4836": 245, "4838": 245, "4840": 245, "4842": 245, "4844": 245, "4846": 245, "4848": 245, "4850": 245, "4852": 245, "4854": 245, "4856": 245, "4858": 245, "4860": 245, "4862": 245, "4864": 245, "4866": [245, 255], "4868": 245, "4870": 245, "4872": 245, "4874": 245, "4876": 245, "4878": 245, "4880": 245, "4882": [245, 878], "4884": 245, "4886": 245, "4888": 245, "4890": 245, "4892": 245, "4894": 245, "4896": 245, "4898": 245, "4900": 245, "4902": 245, "4904": 245, "4906": 245, "4908": 245, "4910": 245, "4912": 245, "4914": 245, "4916": 245, "4918": 245, "4920": 245, "4922": 245, "4924": 245, "4926": [245, 258], "4928": 245, "4930": 245, "4932": 245, "4934": 245, "4936": 245, "4938": 245, "4940": 245, "4942": 245, "4944": 245, "4946": 245, "4948": 245, "4950": [245, 262], "4952": 245, "4954": 245, "4956": 245, "4958": 245, "4960": 245, "4962": 245, "4964": 245, "4966": 245, "4968": 245, "4970": 245, "4972": 245, "4974": 245, "4976": 245, "4978": 245, "4980": 245, "4982": 245, "4984": 245, "4986": 245, "4988": 245, "4990": 245, "4992": 245, "4994": 245, "4996": 245, "4998": 245, "5002": 245, "5004": 245, "5006": 245, "5008": 245, "5010": 245, "5012": 245, "5014": 245, "5016": 245, "5018": 245, "5020": 245, "5022": 245, "5024": 245, "5026": 245, "5028": 245, "5030": 245, "5032": 245, "5034": 245, "5036": 245, "5038": 245, "5040": 245, "5042": 245, "5044": 245, "5046": 245, "5048": 245, "5052": 245, "5054": 245, "5056": 245, "5058": 245, "5060": 245, "5062": 245, "5064": 245, "5066": 245, "5068": 245, "5070": 245, "5072": 245, "5074": 245, "5076": 245, "5078": 245, "5080": [245, 915], "5082": 245, "5084": 245, "5086": 245, "5088": 245, "5090": 245, "5092": 245, "5094": 245, "5096": 245, "5098": 245, "5100": 245, "5102": 245, "5104": 245, "5106": 245, "5108": 245, "5110": 245, "5112": 245, "5114": 245, "5116": 245, "5118": 245, "5120": 245, "5122": 245, "5124": 245, "5126": 245, "5128": 245, "5130": 245, "5132": 245, "5134": 245, "5136": 245, "5138": 245, "5140": 245, "5142": 245, "5144": 245, "5146": 245, "5148": 245, "5150": 245, "5152": 245, "5154": 245, "5156": 245, "5158": 245, "5160": 245, "5162": 245, "5164": 245, "5166": 245, "5168": 245, "5170": 245, "5172": 245, "5174": 245, "5176": 245, "5178": 245, "5180": 245, "5182": 245, "5184": 245, "5186": 245, "5188": 245, "5190": 245, "5192": 245, "5194": 245, "5196": 245, "5198": 245, "5200": 245, "5202": 245, "5204": 245, "5206": 245, "5208": 245, "5210": 245, "5212": 245, "5214": 245, "5216": 245, "5218": 245, "5220": 245, "5222": 245, "5224": 245, "5226": 245, "5228": 245, "5230": 245, "5232": 245, "5234": 245, "5236": 245, "5238": 245, "5240": 245, "5242": 245, "5244": 245, "5246": 245, "5248": 245, "5250": 245, "5252": 245, "5254": 245, "5256": 245, "5258": 245, "5260": 245, "5262": 245, "5264": 245, "5266": 245, "5268": 245, "5270": 245, "5272": 245, "5274": 245, "5276": 245, "5278": 245, "5280": 245, "5282": 245, "5284": 245, "5286": 245, "5288": 245, "5290": 245, "5292": 245, "5294": 245, "5296": 245, "5298": 245, "5300": 245, "5302": 245, "5304": 245, "5306": 245, "5308": 245, "5310": 245, "5312": 245, "5314": 245, "5316": 245, "5318": 245, "5320": 245, "5322": 245, "5324": 245, "5326": 245, "5328": 245, "5330": 245, "5332": 245, "5334": 245, "5336": 245, "5338": 245, "5340": 245, "5342": 245, "5344": 245, "5346": 245, "5348": 245, "5350": 245, "5352": 245, "5354": 245, "5356": 245, "5358": 245, "5360": 245, "5362": [245, 288, 474], "5364": 245, "5366": 245, "5368": 245, "5370": 245, "5372": 245, "5374": 245, "5376": 245, "5378": 245, "5380": 245, "5382": 245, "5384": 245, "5386": 245, "5388": 245, "5390": 245, "5392": 245, "5394": 245, "5396": 245, "5398": 245, "5400": 245, "5402": 245, "5404": 245, "5406": 245, "5408": 245, "5410": [245, 468], "5412": 245, "5414": 245, "5416": 245, "5418": 245, "5420": 245, "5422": 245, "5424": 245, "5426": 245, "5428": 245, "5430": 245, "5432": 245, "5434": 245, "5436": 245, "5438": 245, "5440": 245, "5442": 245, "5444": 245, "5446": 245, "5448": 245, "5450": 245, "5452": 245, "5454": 245, "5456": 245, "5458": 245, "5460": 245, "5462": 245, "5464": 245, "5466": 245, "5468": 245, "5470": 245, "5472": 245, "5474": 245, "5476": 245, "5478": 245, "5480": 245, "5482": 245, "5484": 245, "5486": 245, "5488": 245, "5490": 245, "5492": 245, "5494": 245, "5496": 245, "5498": 245, "5500": 245, "5502": 245, "5504": 245, "5506": 245, "5508": 245, "5510": 245, "5512": 245, "5514": 245, "5516": 245, "5518": 245, "5520": 245, "5522": 245, "5524": 245, "5526": 245, "5528": 245, "5530": 245, "5532": 245, "5534": 245, "5536": 245, "5538": 245, "5540": 245, "5542": 245, "5544": 245, "5546": 245, "5548": 245, "5550": 245, "5552": 245, "5554": 245, "5556": 245, "5558": 245, "5560": 245, "5562": 245, "5564": 245, "5566": 245, "5568": 245, "5570": 245, "5572": 245, "5574": 245, "5576": 245, "5578": 245, "5580": 245, "5582": 245, "5584": 245, "5586": 245, "5588": 245, "5590": 245, "5592": 245, "5594": 245, "5596": 245, "5598": 245, "5600": 245, "5602": 245, "5604": 245, "5606": 245, "5608": 245, "5610": 245, "5612": 245, "5614": 245, "5616": 245, "5618": 245, "5620": 245, "5622": 245, "5624": 245, "5626": 245, "5628": 245, "5630": 245, "5632": 245, "5634": 245, "5636": 245, "5638": 245, "5640": 245, "5642": 245, "5644": 245, "5646": 245, "5648": 245, "5650": 245, "5652": 245, "5654": 245, "5656": 245, "5658": 245, "5660": 245, "5662": 245, "5664": 245, "5666": 245, "5668": 245, "5670": 245, "5672": 245, "5674": 245, "5676": 245, "5678": [245, 948], "5680": 245, "5682": 245, "5684": 245, "5686": 245, "5688": 245, "5690": 245, "5692": 245, "5694": 245, "5696": 245, "5698": 245, "5700": 245, "5702": 245, "5704": 245, "5706": 245, "5708": 245, "5710": 245, "5712": 245, "5714": 245, "5716": 245, "5718": 245, "5720": 245, "5722": 245, "5724": 245, "5726": 245, "5728": 245, "5730": 245, "5732": 245, "5734": 245, "5736": 245, "5738": 245, "5740": 245, "5742": 245, "5744": 245, "5746": 245, "5748": 245, "5750": 245, "5752": 245, "5754": 245, "5756": 245, "5758": 245, "5760": 245, "5762": 245, "5764": 245, "5766": 245, "5768": 245, "5770": 245, "5772": 245, "5774": 245, "5776": 245, "5778": 245, "5780": 245, "5782": 245, "5784": 245, "5786": 245, "5788": 245, "5790": 245, "5792": 245, "5794": 245, "5796": 245, "5798": 245, "5800": 245, "5802": 245, "5804": 245, "5806": 245, "5808": 245, "5810": 245, "5812": 245, "5814": 245, "5816": 245, "5818": 245, "5820": 245, "5822": 245, "5824": 245, "5826": 245, "5828": 245, "5830": 245, "5832": [245, 255], "5834": 245, "5836": 245, "5838": 245, "5840": 245, "5842": 245, "5844": 245, "5846": 245, "5848": 245, "5850": 245, "5852": 245, "5854": 245, "5856": 245, "5858": 245, "5860": 245, "5862": 245, "5864": 245, "5866": 245, "5868": 245, "5870": 245, "5872": 245, "5874": 245, "5876": 245, "5878": 245, "5880": 245, "5882": 245, "5884": 245, "5886": 245, "5888": 245, "5890": 245, "5892": 245, "5894": 245, "5896": 245, "5898": 245, "5900": 245, "5902": 245, "5904": 245, "5906": 245, "5908": 245, "5910": 245, "5912": 245, "5914": 245, "5916": 245, "5918": 245, "5920": 245, "5922": 245, "5924": 245, "5926": 245, "5928": 245, "5930": 245, "5932": 245, "5934": 245, "5936": 245, "5938": 245, "5940": 245, "5942": 245, "5944": 245, "5946": 245, "5948": 245, "5950": 245, "5952": 245, "5954": 245, "5956": 245, "5958": 245, "5960": 245, "5962": 245, "5964": 245, "5966": 245, "5968": 245, "5970": 245, "5972": 245, "5974": 245, "5976": 245, "5978": 245, "5980": 245, "5982": 245, "5984": 245, "5986": 245, "5988": 245, "5990": 245, "5992": 245, "5994": 245, "5996": 245, "5998": 245, "6000": [245, 1047], "6002": 245, "6004": 245, "6006": 245, "6008": 245, "6010": 245, "6012": 245, "6014": 245, "6016": 245, "6018": 245, "6020": 245, "6022": 245, "6024": 245, "6026": 245, "6028": 245, "6030": 245, "6032": 245, "6034": 245, "6036": 245, "6038": 245, "6040": 245, "6042": 245, "6044": 245, "6046": 245, "6048": 245, "6050": 245, "6052": 245, "6054": 245, "6056": 245, "6058": 245, "6060": 245, "6062": 245, "6064": 245, "6066": 245, "6068": 245, "6070": 245, "6072": 245, "6074": 245, "6076": 245, "6078": 245, "6080": 245, "6082": 245, "6084": 245, "6086": 245, "6088": 245, "6090": 245, "6092": 245, "6094": 245, "6096": 245, "6098": 245, "6100": 245, "6102": 245, "6104": 245, "6106": 245, "6108": 245, "6110": 245, "6112": 245, "6114": 245, "6116": 245, "6118": 245, "6120": 245, "6122": 245, "6124": 245, "6126": 245, "6128": 245, "6130": 245, "6132": 245, "6134": 245, "6136": 245, "6138": 245, "6140": 245, "6142": 245, "6144": 245, "6146": 245, "6148": 245, "6150": 245, "6152": 245, "6154": 245, "6156": 245, "6158": 245, "6160": 245, "6162": 245, "6164": 245, "6166": 245, "6168": 245, "6170": 245, "6172": 245, "6174": 245, "6176": 245, "6178": 245, "6180": 245, "6182": 245, "6184": 245, "6186": 245, "6188": 245, "6190": 245, "6192": 245, "6194": 245, "6196": 245, "6198": 245, "6200": 245, "6202": 245, "6204": 245, "6206": 245, "6208": 245, "6210": 245, "6212": 245, "6214": 245, "6216": 245, "6218": 245, "6220": 245, "6222": 245, "6224": 245, "6226": 245, "6228": 245, "6230": 245, "6232": 245, "6234": 245, "6236": 245, "6238": 245, "6240": 245, "6242": 245, "6244": 245, "6246": 245, "6248": 245, "6250": 245, "6252": 245, "6254": 245, "6256": 245, "6258": 245, "6260": 245, "6262": 245, "6264": 245, "6266": 245, "6268": 245, "6270": 245, "6272": 245, "6274": 245, "6276": 245, "6278": 245, "6280": 245, "6282": 245, "6284": 245, "6286": 245, "6288": 245, "6290": 245, "6292": 245, "6294": 245, "6296": 245, "6298": 245, "6300": 245, "6302": 245, "6304": 245, "6306": 245, "6308": 245, "6310": 245, "6312": 245, "6314": 245, "6316": 245, "6318": 245, "6320": 245, "6322": 245, "6324": 245, "6326": 245, "6328": 245, "6330": 245, "6332": 245, "6334": 245, "6336": 245, "6338": 245, "6340": 245, "6342": 245, "6344": 245, "6346": 245, "6348": 245, "6350": 245, "6352": 245, "6354": 245, "6356": 245, "6358": 245, "6360": 245, "6362": 245, "6364": 245, "6366": 245, "6368": 245, "6370": 245, "6372": 245, "6374": 245, "6376": 245, "6378": 245, "6380": 245, "6382": 245, "6384": 245, "6386": 245, "6388": 245, "6390": 245, "6392": 245, "6394": 245, "6396": 245, "6398": 245, "6400": 245, "6402": 245, "6404": 245, "6406": 245, "6408": 245, "6410": 245, "6412": 245, "6414": 245, "6416": 245, "6418": 245, "6420": 245, "6422": 245, "6424": 245, "6426": 245, "6428": 245, "6430": 245, "6432": 245, "6434": 245, "6436": 245, "6438": 245, "6440": 245, "6442": 245, "6444": 245, "6446": 245, "6448": 245, "6450": 245, "6452": 245, "6454": 245, "6456": 245, "6458": 245, "6460": 245, "6462": 245, "6464": 245, "6466": 245, "6468": 245, "6470": 245, "6472": 245, "6474": 245, "6476": 245, "6478": 245, "6480": 245, "6482": 245, "6484": 245, "6486": 245, "6488": 245, "6490": 245, "6492": 245, "6494": 245, "6496": 245, "6498": 245, "6500": 245, "6502": 245, "6504": 245, "6506": 245, "6508": 245, "6510": 245, "6512": 245, "6514": 245, "6516": 245, "6518": 245, "6520": 245, "6522": 245, "6524": 245, "6526": 245, "6528": 245, "6530": 245, "6532": 245, "6534": 245, "6536": 245, "6538": 245, "6540": 245, "6542": 245, "6544": 245, "6546": 245, "6548": 245, "6550": [245, 1031], "6552": 245, "6554": 245, "6556": 245, "6558": 245, "6560": 245, "6562": 245, "6564": 245, "6566": 245, "6568": 245, "6570": 245, "6572": 245, "6574": 245, "6576": 245, "6578": 245, "6580": 245, "6582": 245, "6584": 245, "6586": 245, "6588": 245, "6590": 245, "6592": 245, "6594": 245, "6596": 245, "6598": 245, "6600": 245, "6602": 245, "6604": 245, "6606": 245, "6608": 245, "6610": 245, "6612": 245, "6614": 245, "6616": 245, "6618": 245, "6620": 245, "6622": 245, "6624": 245, "6626": 245, "6628": 245, "6630": 245, "6632": 245, "6634": 245, "6636": 245, "6638": 245, "6640": 245, "6642": 245, "6644": 245, "6646": 245, "6648": 245, "6650": 245, "6652": 245, "6654": 245, "6656": 245, "6658": 245, "6660": 245, "6662": 245, "6664": 245, "6666": 245, "6668": 245, "6670": 245, "6672": 245, "6674": 245, "6676": 245, "6678": 245, "6680": 245, "6682": 245, "6684": 245, "6686": 245, "6688": 245, "6690": 245, "6692": 245, "6694": 245, "6696": 245, "6698": 245, "6700": 245, "6702": 245, "6704": 245, "6706": 245, "6708": 245, "6710": 245, "6714": 245, "6716": [245, 268], "6718": 245, "6720": 245, "6722": 245, "6724": 245, "6726": 245, "6728": 245, "6730": 245, "6732": 245, "6734": 245, "6736": 245, "6738": 245, "6740": 245, "6742": 245, "6744": 245, "6746": 245, "6748": 245, "6750": 245, "6752": 245, "6754": 245, "6756": 245, "6758": 245, "6760": 245, "6762": 245, "6764": 245, "6766": 245, "6768": 245, "6770": 245, "6772": 245, "6774": 245, "6776": 245, "6778": 245, "6780": 245, "6782": 245, "6784": 245, "6786": 245, "6788": 245, "6790": 245, "6792": 245, "6794": 245, "6796": 245, "6798": 245, "6800": 245, "6802": 245, "6804": 245, "6806": 245, "6808": 245, "6810": 245, "6812": 245, "6814": 245, "6816": 245, "6818": 245, "6820": 245, "6822": 245, "6824": 245, "6826": 245, "6828": 245, "6830": 245, "6832": 245, "6834": 245, "6836": 245, "6838": 245, "6840": 245, "6842": 245, "6844": 245, "6846": 245, "6848": 245, "6850": 245, "6852": 245, "6854": 245, "6856": 245, "6858": [245, 294], "6860": 245, "6862": 245, "6864": 245, "6866": 245, "6868": 245, "6870": 245, "6872": 245, "6874": 245, "6876": 245, "6878": 245, "6880": 245, "6882": 245, "6884": 245, "6886": 245, "6888": 245, "6890": 245, "6892": 245, "6894": 245, "6896": 245, "6898": 245, "6900": 245, "6902": 245, "6904": 245, "6906": 245, "6908": 245, "6910": 245, "6912": 245, "6914": 245, "6916": 245, "6918": 245, "6920": 245, "6922": 245, "6924": 245, "6926": 245, "6928": 245, "6930": 245, "6932": 245, "6934": 245, "6936": 245, "6938": 245, "6940": 245, "6942": 245, "6944": 245, "6946": 245, "6948": 245, "6950": 245, "6952": 245, "6954": 245, "6956": 245, "6958": 245, "6960": 245, "6962": 245, "6964": 245, "6966": 245, "6968": 245, "6970": 245, "6972": 245, "6974": 245, "6976": 245, "6978": 245, "6980": 245, "6982": 245, "6984": 245, "6986": 245, "6988": 245, "6990": 245, "6992": 245, "6994": 245, "6996": 245, "6998": 245, "7000": 245, "7002": 245, "7004": 245, "7006": 245, "7008": 245, "7010": 245, "7012": 245, "7014": 245, "7016": 245, "7018": 245, "7020": 245, "7022": 245, "7024": 245, "7026": 245, "7028": 245, "7030": 245, "7032": 245, "7034": 245, "7036": 245, "7038": 245, "7040": 245, "7042": 245, "7044": 245, "7046": 245, "7048": 245, "7050": 245, "7052": 245, "7054": 245, "7056": 245, "7058": 245, "7060": 245, "7062": 245, "7064": 245, "7066": 245, "7068": 245, "7070": 245, "7072": 245, "7074": 245, "7076": 245, "7078": 245, "7080": [245, 1153], "7082": 245, "7084": 245, "7086": 245, "7088": [245, 1153], "7090": 245, "7092": 245, "7094": 245, "7096": 245, "7098": 245, "7100": 245, "7102": 245, "7104": 245, "7106": 245, "7108": 245, "7110": 245, "7112": 245, "7114": 245, "7116": 245, "7118": 245, "7120": 245, "7122": 245, "7124": 245, "7126": 245, "7128": 245, "7130": 245, "7132": 245, "7134": 245, "7136": 245, "7138": 245, "7140": 245, "7142": 245, "7144": 245, "7146": 245, "7148": 245, "7150": 245, "7152": 245, "7154": 245, "7156": 245, "7158": 245, "7160": 245, "7162": 245, "7164": 245, "7166": 245, "7168": 245, "7170": 245, "7172": 245, "7174": 245, "7176": 245, "7178": 245, "7180": 245, "7182": 245, "7184": 245, "7186": 245, "7188": 245, "7190": 245, "7192": 245, "7194": 245, "7196": 245, "7198": 245, "7200": 245, "7202": 245, "7204": 245, "7206": 245, "7208": 245, "7210": 245, "7212": 245, "7214": 245, "7216": 245, "7218": 245, "7220": 245, "7222": 245, "7224": 245, "7226": 245, "7228": 245, "7230": 245, "7232": 245, "7234": 245, "7236": 245, "7238": 245, "7240": 245, "7242": 245, "7244": 245, "7246": 245, "7248": 245, "7250": 245, "7252": 245, "7254": 245, "7256": 245, "7258": 245, "7260": 245, "7262": 245, "7264": 245, "7266": 245, "7268": 245, "7270": 245, "7272": 245, "7274": 245, "7276": 245, "7278": 245, "7280": 245, "7282": 245, "7284": 245, "7286": 245, "7288": 245, "7290": 245, "7292": 245, "7294": 245, "7296": 245, "7298": 245, "7300": 245, "7302": 245, "7304": 245, "7306": 245, "7308": 245, "7310": 245, "7312": 245, "7314": 245, "7316": 245, "7318": 245, "7320": 245, "7322": 245, "7324": 245, "7326": 245, "7328": 245, "7330": 245, "7332": 245, "7334": 245, "7336": 245, "7338": 245, "7340": 245, "7342": 245, "7344": 245, "7346": 245, "7348": 245, "7350": 245, "7352": 245, "7354": 245, "7356": 245, "7358": 245, "7360": 245, "7362": 245, "7364": 245, "7366": 245, "7368": 245, "7370": 245, "7372": 245, "7374": 245, "7376": 245, "7378": 245, "7380": 245, "7382": 245, "7384": 245, "7386": 245, "7388": 245, "7392": 245, "7394": 245, "7396": 245, "7398": 245, "7400": 245, "7402": 245, "7404": 245, "7406": 245, "7408": 245, "7410": 245, "7412": 245, "7414": 245, "7416": 245, "7418": 245, "7420": 245, "7422": 245, "7424": 245, "7426": 245, "7428": 245, "7430": 245, "7432": 245, "7434": 245, "7436": 245, "7438": 245, "7440": 245, "7442": 245, "7444": 245, "7446": 245, "7448": 245, "7450": 245, "7452": 245, "7454": 245, "7456": 245, "7458": 245, "7460": 245, "7462": 245, "7464": 245, "7466": 245, "7468": 245, "7470": 245, "7472": 245, "7474": 245, "7476": 245, "7478": 245, "7480": 245, "7482": 245, "7484": 245, "7486": 245, "7488": 245, "7490": 245, "7492": 245, "7494": 245, "7496": 245, "7498": 245, "7500": 245, "7502": 245, "7504": 245, "7506": 245, "7508": 245, "7510": 245, "7512": 245, "7514": 245, "7516": 245, "7518": 245, "7520": 245, "7522": 245, "7524": 245, "7526": 245, "7528": 245, "7530": 245, "7532": 245, "7534": 245, "7536": 245, "7538": 245, "7540": 245, "7542": 245, "7544": 245, "7546": 245, "7548": 245, "7550": 245, "7552": 245, "7554": 245, "7556": 245, "7558": 245, "7560": 245, "7562": 245, "7564": 245, "7566": 245, "7568": 245, "7570": 245, "7572": 245, "7574": 245, "7576": 245, "7578": 245, "7580": 245, "7582": 245, "7584": 245, "7586": 245, "7588": 245, "7590": 245, "7592": 245, "7594": 245, "7596": 245, "7598": 245, "7600": 245, "7602": 245, "7604": 245, "7606": 245, "7608": 245, "7610": 245, "7612": 245, "7614": 245, "7616": 245, "7618": 245, "7620": 245, "7622": 245, "7624": 245, "7626": 245, "7628": 245, "7630": 245, "7632": 245, "7634": 245, "7636": 245, "7638": 245, "7640": 245, "7642": 245, "7644": 245, "7646": 245, "7648": 245, "7650": 245, "7652": 245, "7654": 245, "7656": 245, "7658": 245, "7660": 245, "7662": 245, "7664": 245, "7666": 245, "7668": 245, "7670": 245, "7672": 245, "7674": 245, "7676": 245, "7678": 245, "7680": 245, "7682": 245, "7684": 245, "7686": 245, "7688": 245, "7690": 245, "7692": 245, "7694": 245, "7696": 245, "7698": 245, "7700": 245, "7702": 245, "7704": 245, "7706": 245, "7708": 245, "7710": 245, "7712": 245, "7714": 245, "7716": 245, "7718": 245, "7720": 245, "7722": 245, "7724": 245, "7726": 245, "7728": 245, "7730": 245, "7732": 245, "7734": 245, "7736": 245, "7738": 245, "7740": 245, "7742": 245, "7744": 245, "7746": 245, "7748": 245, "7750": 245, "7752": 245, "7754": 245, "7756": 245, "7758": 245, "7760": 245, "7762": 245, "7764": 245, "7766": 245, "7768": 245, "7770": 245, "7772": 245, "7774": 245, "7776": 245, "7778": 245, "7780": 245, "7782": 245, "7784": 245, "7786": 245, "7788": 245, "7790": 245, "7792": 245, "7794": 245, "7796": 245, "7798": 245, "7800": 245, "7802": 245, "7804": 245, "7806": 245, "7808": 245, "7810": 245, "7812": 245, "7814": 245, "7816": 245, "7818": 245, "7820": 245, "7822": 245, "7824": 245, "7826": 245, "7828": 245, "7830": 245, "7832": 245, "7834": 245, "7836": 245, "7838": 245, "7842": 245, "7844": 245, "7846": 245, "7848": 245, "7850": 245, "7852": 245, "7854": 245, "7856": 245, "7858": 245, "7860": 245, "7862": 245, "7864": 245, "7866": 245, "7868": 245, "7870": 245, "7872": 245, "7874": 245, "7878": 245, "7880": 245, "7882": 245, "7884": 245, "7886": 245, "7888": 245, "7890": 245, "7892": 245, "7894": 245, "7896": 245, "7898": 245, "7900": 245, "7902": 245, "7904": 245, "7906": 245, "7908": 245, "7910": 245, "7912": 245, "7914": 245, "7916": 245, "7918": 245, "7920": 245, "7922": 245, "7924": 245, "7926": 245, "7928": 245, "7930": 245, "7932": 245, "7934": 245, "7936": 245, "7938": 245, "7940": 245, "7942": 245, "7944": 245, "7946": 245, "7948": 245, "7950": 245, "7952": 245, "7954": 245, "7956": 245, "7958": 245, "7960": 245, "7962": 245, "7964": 245, "7966": 245, "7968": 245, "7970": 245, "7972": 245, "7974": 245, "7976": 245, "7978": 245, "7980": 245, "7982": 245, "7984": 245, "7986": 245, "7988": 245, "7990": 245, "7992": 245, "7994": 245, "7996": 245, "7998": 245, "8002": 245, "8004": 245, "8006": 245, "8008": 245, "8012": 245, "8014": 245, "8016": 245, "8018": 245, "8022": 245, "8024": 245, "8026": 245, "8028": 245, "8030": 245, "8032": 245, "8034": 245, "8036": 245, "8038": 245, "8040": 245, "8042": 245, "8044": 245, "8046": 245, "8048": 245, "8050": 245, "8052": 245, "8054": 245, "8056": 245, "8058": 245, "8060": 245, "8062": 245, "8064": 245, "8066": 245, "8068": 245, "8070": 245, "8072": 245, "8074": 245, "8076": 245, "8078": 245, "8080": 245, "8082": 245, "8084": 245, "8086": 245, "8088": 245, "8090": 245, "8092": 245, "8094": 245, "8096": 245, "8098": 245, "8100": 245, "8102": [245, 1008, 1009], "8104": 245, "8106": 245, "8108": 245, "8110": 245, "8112": 245, "8114": 245, "8116": 245, "8118": 245, "8120": 245, "8122": 245, "8124": 245, "8126": 245, "8128": 245, "8130": 245, "8132": 245, "8134": 245, "8136": 245, "8138": 245, "8140": 245, "8142": 245, "8144": 245, "8146": 245, "8148": 245, "8150": 245, "8152": 245, "8154": 245, "8156": 245, "8158": 245, "8160": 245, "8162": 245, "8164": 245, "8166": 245, "8168": 245, "8170": 245, "8172": 245, "8174": 245, "8176": 245, "8178": 245, "8180": 245, "8182": 245, "8184": 245, "8186": 245, "8188": 245, "8190": 245, "8194": 245, "8196": 245, "8198": 245, "8200": 245, "8202": 245, "8204": 245, "8206": 245, "8208": 245, "8210": 245, "8212": 245, "8214": 245, "8216": 245, "8218": 245, "8220": 245, "8222": 245, "8224": 245, "8226": 245, "8228": 245, "8230": 245, "8232": 245, "8234": 245, "8238": 245, "8240": 245, "8242": 245, "8244": 245, "8246": 245, "8248": 245, "8250": 245, "8252": 245, "8254": 245, "8256": 245, "8258": 245, "8260": [245, 833], "8262": 245, "8264": 245, "8266": 245, "8268": 245, "8270": 245, "8272": 245, "8274": 245, "8276": 245, "8278": 245, "8280": 245, "8282": 245, "8284": 245, "8286": 245, "8288": 245, "8290": 245, "8292": 245, "8294": 245, "8296": 245, "8298": 245, "8300": 245, "8302": 245, "8304": 245, "8306": 245, "8308": 245, "8310": 245, "8312": 245, "8314": 245, "8316": 245, "8318": 245, "8320": 245, "8322": 245, "8324": 245, "8326": 245, "8328": 245, "8330": 245, "8332": 245, "8334": 245, "8336": 245, "8338": 245, "8340": 245, "8342": 245, "8344": 245, "8346": 245, "8348": 245, "8350": 245, "8352": 245, "8354": 245, "8356": 245, "8358": 245, "8360": 245, "8362": 245, "8364": 245, "8366": 245, "8368": 245, "8370": 245, "8372": 245, "8374": 245, "8376": 245, "8378": 245, "8380": 245, "8382": 245, "8384": 245, "8386": 245, "8388": 245, "8390": 245, "8392": 245, "8394": 245, "8396": 245, "8398": 245, "8400": 245, "8402": 245, "8404": 245, "8406": 245, "8408": [245, 1031], "8410": 245, "8412": 245, "8414": 245, "8416": 245, "8418": 245, "8420": 245, "8422": 245, "8424": 245, "8426": 245, "8428": 245, "8430": 245, "8432": 245, "8434": 245, "8436": 245, "8438": 245, "8440": 245, "8442": 245, "8444": 245, "8446": 245, "8448": 245, "8450": 245, "8452": 245, "8454": 245, "8456": 245, "8458": 245, "8460": 245, "8464": 245, "8466": 245, "8468": 245, "8470": 245, "8472": 245, "8474": 245, "8476": 245, "8478": 245, "8480": 245, "8482": 245, "8484": 245, "8486": 245, "8488": 245, "8490": 245, "8492": 245, "8494": 245, "8496": 245, "8498": 245, "8500": 245, "8502": 245, "8504": 245, "8506": 245, "8508": 245, "8510": 245, "8512": 245, "8514": 245, "8516": 245, "8518": 245, "8520": 245, "8522": 245, "8524": 245, "8526": 245, "8528": 245, "8530": 245, "8532": 245, "8534": 245, "8536": 245, "8538": 245, "8540": 245, "8542": 245, "8544": 245, "8546": 245, "8548": 245, "8550": 245, "8552": 245, "8554": 245, "8556": 245, "8558": 245, "8560": 245, "8562": 245, "8564": 245, "8566": 245, "8568": 245, "8570": 245, "8572": 245, "8574": 245, "8576": 245, "8578": 245, "8580": 245, "8582": 245, "8584": 245, "8586": 245, "8588": 245, "8590": 245, "8592": 245, "8594": 245, "8596": 245, "8598": 245, "8600": 245, "8602": 245, "8604": 245, "8606": 245, "8608": 245, "8610": 245, "8612": 245, "8614": 245, "8616": 245, "8618": 245, "8620": 245, "8622": 245, "8624": 245, "8626": 245, "8628": 245, "8630": 245, "8632": 245, "8634": 245, "8636": 245, "8638": 245, "8640": 245, "8642": 245, "8644": 245, "8646": 245, "8648": 245, "8650": 245, "8652": 245, "8654": 245, "8656": 245, "8658": 245, "8660": 245, "8662": 245, "8664": 245, "8666": 245, "8668": 245, "8670": 245, "8672": 245, "8674": 245, "8676": 245, "8678": 245, "8680": 245, "8682": 245, "8684": 245, "8686": 245, "8688": 245, "8690": 245, "8692": 245, "8694": 245, "8696": 245, "8698": 245, "8700": 245, "8702": 245, "8704": 245, "8706": 245, "8708": 245, "8710": 245, "8712": 245, "8714": 245, "8716": 245, "8718": 245, "8720": 245, "8722": 245, "8724": 245, "8726": 245, "8728": 245, "8730": 245, "8732": 245, "8734": 245, "8736": 245, "8738": 245, "8740": 245, "8742": 245, "8744": 245, "8746": 245, "8748": 245, "8750": 245, "8752": 245, "8754": 245, "8756": 245, "8758": 245, "8760": 245, "8762": 245, "8764": 245, "8766": 245, "8768": 245, "8770": 245, "8772": 245, "8774": 245, "8776": 245, "8778": 245, "8780": 245, "8782": 245, "8784": 245, "8786": 245, "8788": 245, "8790": 245, "8792": 245, "8794": 245, "8796": 245, "8798": 245, "8800": 245, "8802": 245, "8804": 245, "8806": 245, "8808": 245, "8810": 245, "8812": 245, "8814": 245, "8816": 245, "8818": 245, "8820": 245, "8822": 245, "8824": 245, "8826": 245, "8828": 245, "8830": 245, "8832": 245, "8834": 245, "8836": 245, "8838": 245, "8840": 245, "8842": 245, "8844": 245, "8846": 245, "8848": 245, "8850": 245, "8852": 245, "8854": 245, "8856": 245, "8858": 245, "8860": 245, "8862": 245, "8864": 245, "8866": 245, "8868": 245, "8870": 245, "8872": 245, "8874": 245, "8876": 245, "8878": 245, "8880": 245, "8882": 245, "8884": 245, "8886": 245, "8888": 245, "8890": 245, "8892": 245, "8894": 245, "8896": 245, "8898": 245, "8900": 245, "8902": 245, "8904": 245, "8906": 245, "8908": 245, "8910": 245, "8912": 245, "8914": 245, "8916": 245, "8918": 245, "8920": 245, "8922": 245, "8924": 245, "8926": 245, "8928": 245, "8930": 245, "8932": 245, "8934": 245, "8936": 245, "8938": 245, "8940": 245, "8942": 245, "8944": 245, "8946": 245, "8948": 245, "8950": 245, "8952": 245, "8954": 245, "8956": 245, "8958": 245, "8960": 245, "8962": 245, "8964": 245, "8966": 245, "8968": 245, "8970": 245, "8972": 245, "8974": 245, "8976": 245, "8978": 245, "8980": 245, "8982": 245, "8984": 245, "8986": 245, "8988": 245, "8990": 245, "8992": 245, "8994": 245, "8996": 245, "8998": 245, "9002": 245, "9004": 245, "9006": 245, "9008": 245, "9010": 245, "9012": 245, "9014": 245, "9016": 245, "9018": 245, "9020": 245, "9022": 245, "9024": 245, "9026": 245, "9028": 245, "9030": 245, "9032": 245, "9034": 245, "9036": 245, "9038": 245, "9040": 245, "9042": 245, "9044": 245, "9046": 245, "9048": 245, "9050": 245, "9052": 245, "9054": 245, "9056": 245, "9058": 245, "9060": 245, "9062": 245, "9064": 245, "9066": 245, "9068": 245, "9070": 245, "9072": 245, "9074": 245, "9076": 245, "9078": 245, "9080": 245, "9082": 245, "9084": 245, "9086": 245, "9088": 245, "9090": 245, "9092": 245, "9094": 245, "9096": 245, "9098": 245, "9100": 245, "9102": 245, "9104": 245, "9106": 245, "9108": 245, "9110": 245, "9112": 245, "9114": 245, "9116": 245, "9118": 245, "9120": 245, "9122": 245, "9124": 245, "9126": 245, "9128": 245, "9130": 245, "9132": 245, "9134": 245, "9136": 245, "9138": 245, "9140": 245, "9142": 245, "9144": 245, "9146": 245, "9148": 245, "9150": 245, "9152": 245, "9154": 245, "9156": 245, "9158": 245, "9160": 245, "9162": 245, "9164": 245, "9166": 245, "9168": 245, "9170": 245, "9172": 245, "9174": 245, "9176": 245, "9178": 245, "9180": 245, "9182": 245, "9184": 245, "9186": 245, "9188": 245, "9190": 245, "9192": 245, "9194": 245, "9196": 245, "9198": 245, "9200": 245, "9202": 245, "9204": 245, "9206": 245, "9208": 245, "9210": 245, "9212": 245, "9214": 245, "9216": 245, "9218": 245, "9220": 245, "9222": 245, "9224": 245, "9226": 245, "9228": 245, "9230": 245, "9232": 245, "9234": 245, "9236": 245, "9238": 245, "9240": 245, "9242": 245, "9244": 245, "9246": 245, "9248": 245, "9250": 245, "9252": 245, "9254": 245, "9256": 245, "9258": 245, "9260": 245, "9262": 245, "9264": 245, "9266": 245, "9268": 245, "9270": 245, "9272": 245, "9274": 245, "9276": 245, "9278": 245, "9280": 245, "9282": 245, "9284": 245, "9286": 245, "9288": 245, "9290": 245, "9292": 245, "9294": 245, "9296": 245, "9298": 245, "9300": 245, "9302": 245, "9304": 245, "9306": 245, "9308": 245, "9310": 245, "9312": 245, "9314": 245, "9316": 245, "9318": 245, "9320": 245, "9322": 245, "9324": 245, "9326": 245, "9328": 245, "9330": 245, "9332": 245, "9334": 245, "9336": 245, "9338": 245, "9340": 245, "9342": 245, "9344": 245, "9346": 245, "9348": 245, "9350": 245, "9352": 245, "9354": 245, "9356": 245, "9358": 245, "9360": 245, "9362": 245, "9364": 245, "9366": 245, "9368": 245, "9370": 245, "9372": 245, "9374": 245, "9376": 245, "9378": 245, "9380": 245, "9382": 245, "9384": 245, "9386": 245, "9388": 245, "9390": 245, "9392": 245, "9394": [245, 893], "9396": 245, "9398": 245, "9400": 245, "9402": 245, "9404": 245, "9406": 245, "9408": 245, "9410": 245, "9412": 245, "9414": 245, "9416": 245, "9418": 245, "9420": 245, "9422": 245, "9424": 245, "9426": 245, "9428": 245, "9430": 245, "9432": 245, "9434": 245, "9436": 245, "9438": 245, "9440": 245, "9442": 245, "9444": 245, "9446": 245, "9448": 245, "9450": 245, "9452": 245, "9454": 245, "9456": 245, "9458": 245, "9460": 245, "9462": 245, "9464": 245, "9466": 245, "9468": 245, "9470": 245, "9472": 245, "9474": 245, "9476": 245, "9478": 245, "9480": 245, "9482": 245, "9484": 245, "9486": 245, "9488": 245, "9490": 245, "9492": 245, "9494": 245, "9496": 245, "9498": 245, "9500": 245, "9502": 245, "9504": 245, "9506": 245, "9508": 245, "9510": 245, "9512": 245, "9514": 245, "9516": 245, "9518": 245, "9520": 245, "9522": 245, "9524": 245, "9526": 245, "9528": 245, "9530": 245, "9532": 245, "9534": 245, "9536": 245, "9538": 245, "9540": 245, "9542": 245, "9544": 245, "9546": 245, "9548": 245, "9550": 245, "9552": 245, "9554": 245, "9556": 245, "9558": 245, "9560": 245, "9562": 245, "9564": 245, "9566": 245, "9568": 245, "9570": 245, "9572": 245, "9574": 245, "9576": 245, "9578": 245, "9580": 245, "9582": 245, "9584": 245, "9586": 245, "9588": 245, "9590": 245, "9592": 245, "9594": 245, "9596": 245, "9598": 245, "9600": 245, "9602": 245, "9604": 245, "9606": 245, "9608": 245, "9610": 245, "9612": 245, "9614": 245, "9616": 245, "9618": 245, "9620": 245, "9622": 245, "9624": 245, "9626": 245, "9628": 245, "9630": 245, "9632": 245, "9634": 245, "9636": 245, "9638": 245, "9640": 245, "9642": 245, "9644": 245, "9646": 245, "9648": 245, "9650": 245, "9652": 245, "9654": 245, "9656": 245, "9658": 245, "9660": 245, "9662": 245, "9664": 245, "9666": 245, "9668": 245, "9670": 245, "9672": 245, "9674": 245, "9676": 245, "9678": 245, "9680": 245, "9682": 245, "9684": 245, "9686": 245, "9688": 245, "9690": 245, "9692": 245, "9694": 245, "9696": 245, "9698": 245, "9700": 245, "9702": 245, "9704": 245, "9706": 245, "9708": 245, "9710": 245, "9712": 245, "9714": 245, "9716": 245, "9718": 245, "9720": 245, "9722": 245, "9724": 245, "9726": 245, "9728": 245, "9730": 245, "9732": 245, "9734": 245, "9736": 245, "9738": 245, "9740": 245, "9742": 245, "9744": 245, "9746": 245, "9748": 245, "9750": 245, "9752": 245, "9754": 245, "9756": 245, "9758": 245, "9760": 245, "9762": 245, "9764": 245, "9766": 245, "9768": [245, 255], "9770": 245, "9772": 245, "9774": 245, "9776": 245, "9778": 245, "9780": 245, "9782": 245, "9784": 245, "9786": 245, "9788": 245, "9790": 245, "9792": 245, "9794": 245, "9796": 245, "9798": 245, "9800": 245, "9802": 245, "9804": 245, "9806": 245, "9808": 245, "9810": 245, "9812": 245, "9814": 245, "9816": 245, "9818": 245, "9820": 245, "9822": 245, "9824": 245, "9826": 245, "9828": 245, "9830": 245, "9832": 245, "9834": 245, "9836": 245, "9838": 245, "9840": 245, "9842": 245, "9844": 245, "9846": 245, "9848": 245, "9850": 245, "9852": 245, "9854": 245, "9856": 245, "9858": 245, "9860": 245, "9862": 245, "9864": 245, "9866": 245, "9868": 245, "9870": 245, "9872": 245, "9874": 245, "9876": 245, "9878": 245, "9880": 245, "9882": 245, "9884": 245, "9886": 245, "9888": 245, "9890": 245, "9892": 245, "9894": 245, "9896": 245, "9898": 245, "9900": 245, "9902": 245, "9904": 245, "9906": 245, "9908": 245, "9910": 245, "9912": 245, "9914": 245, "9916": 245, "9918": 245, "9920": 245, "9922": 245, "9924": 245, "9926": 245, "9928": 245, "9930": 245, "9932": 245, "9934": 245, "9936": 245, "9938": 245, "9940": 245, "9942": 245, "9944": 245, "9946": 245, "9948": 245, "9950": 245, "9952": 245, "9954": 245, "9956": 245, "9958": 245, "9960": 245, "9962": 245, "9964": 245, "9966": 245, "9968": 245, "9970": 245, "9972": 245, "9974": 245, "9976": 245, "9978": 245, "9980": 245, "9982": 245, "9984": 245, "9986": 245, "9988": 245, "9990": 245, "9992": 245, "9994": 245, "9996": 245, "9998": 245, "10002": 245, "10004": 245, "10006": 245, "10008": 245, "10010": 245, "10012": 245, "10014": 245, "10016": 245, "10018": 245, "10020": 245, "10022": 245, "10024": 245, "10026": 245, "10028": 245, "10030": 245, "10032": 245, "10034": 245, "10036": 245, "10038": 245, "10040": 245, "10042": 245, "10044": 245, "10046": 245, "10048": 245, "10050": 245, "10052": 245, "10054": 245, "10056": 245, "10058": 245, "10060": 245, "10062": 245, "10064": 245, "10066": 245, "10068": 245, "10070": 245, "10072": 245, "10074": 245, "10076": 245, "10078": 245, "10080": 245, "10082": 245, "10084": 245, "10086": 245, "10088": 245, "10090": 245, "10092": 245, "10094": 245, "10096": 245, "10098": 245, "10100": 245, "10102": 245, "10104": 245, "10106": 245, "10108": 245, "10110": 245, "10112": 245, "10114": 245, "10116": 245, "10118": 245, "10120": 245, "10122": 245, "10124": 245, "10126": 245, "10128": 245, "10130": 245, "10132": 245, "10134": 245, "10136": 245, "10138": 245, "10140": 245, "10142": 245, "10144": 245, "10146": 245, "10148": 245, "10150": 245, "10152": 245, "10154": 245, "10156": 245, "10158": 245, "10160": 245, "10162": 245, "10164": 245, "10166": 245, "10168": 245, "10170": 245, "10172": 245, "10174": 245, "10176": 245, "10178": 245, "10180": 245, "10182": 245, "10184": 245, "10186": 245, "10188": 245, "10190": 245, "10192": 245, "10194": 245, "10196": 245, "10198": 245, "10200": 245, "10202": 245, "10204": 245, "10206": 245, "10208": 245, "10210": 245, "10212": 245, "10214": 245, "10216": 245, "10218": 245, "10220": 245, "10222": 245, "10224": 245, "10226": [245, 294], "10228": 245, "10230": 245, "10232": 245, "10234": 245, "10236": 245, "10238": 245, "10240": 245, "10242": 245, "10244": 245, "10246": 245, "10248": 245, "10250": 245, "10252": 245, "10254": 245, "10256": 245, "10258": 245, "10260": 245, "10262": 245, "10264": 245, "10266": 245, "10268": 245, "10270": 245, "10272": 245, "10274": 245, "10276": 245, "10278": 245, "10280": 245, "10282": 245, "10284": 245, "10286": 245, "10288": 245, "10290": 245, "10292": 245, "10294": 245, "10296": 245, "10298": 245, "10300": 245, "10302": 245, "10304": 245, "10306": 245, "10308": 245, "10310": 245, "10312": 245, "10314": 245, "10316": 245, "10318": 245, "10320": 245, "10322": 245, "10324": 245, "10326": 245, "10328": 245, "10330": 245, "10332": 245, "10334": 245, "10336": 245, "10338": 245, "10340": 245, "10342": 245, "10344": 245, "10346": 245, "10348": 245, "10350": 245, "10352": 245, "10354": 245, "10356": 245, "10358": 245, "10360": 245, "10362": 245, "10364": 245, "10366": 245, "10368": 245, "10370": 245, "10372": 245, "10374": 245, "10376": 245, "10378": 245, "10380": 245, "10382": 245, "10384": 245, "10386": 245, "10388": 245, "10390": 245, "10392": 245, "10394": 245, "10396": 245, "10398": 245, "10400": 245, "10402": 245, "10404": 245, "10406": 245, "10408": 245, "10410": 245, "10412": 245, "10414": 245, "10416": 245, "10418": 245, "10420": 245, "10422": 245, "10424": 245, "10426": 245, "10428": 245, "10430": 245, "10432": 245, "10434": 245, "10436": 245, "10438": 245, "10440": 245, "10442": 245, "10444": 245, "10446": 245, "10448": 245, "10450": 245, "10452": 245, "10454": 245, "10456": 245, "10458": 245, "10460": 245, "10462": 245, "10464": 245, "10466": 245, "10468": 245, "10470": 245, "10472": 245, "10474": 245, "10476": 245, "10478": 245, "10480": 245, "10482": 245, "10484": 245, "10486": 245, "10488": 245, "10490": 245, "10492": 245, "10494": 245, "10496": 245, "10498": 245, "10500": 245, "10502": 245, "10504": 245, "10506": 245, "10508": 245, "10510": 245, "10512": 245, "10514": 245, "10516": 245, "10518": 245, "10520": 245, "10522": 245, "10524": 245, "10526": 245, "10528": 245, "10530": 245, "10532": 245, "10534": 245, "10536": 245, "10538": 245, "10540": 245, "10542": 245, "10544": 245, "10546": 245, "10548": 245, "10550": 245, "10552": [245, 1019], "10554": 245, "10556": 245, "10558": 245, "10560": 245, "10562": 245, "10564": 245, "10566": 245, "10568": 245, "10570": 245, "10572": 245, "10574": 245, "10576": 245, "10578": 245, "10580": 245, "10582": 245, "10584": 245, "10586": 245, "10588": 245, "10590": 245, "10592": 245, "10594": 245, "10596": 245, "10598": 245, "10600": 245, "10602": 245, "10604": 245, "10606": 245, "10608": 245, "10610": 245, "10612": 245, "10614": 245, "10616": 245, "10618": 245, "10620": 245, "10622": 245, "10624": 245, "10626": 245, "10628": 245, "10630": 245, "10632": 245, "10634": 245, "10636": 245, "10638": 245, "10640": 245, "10642": 245, "10644": 245, "10646": 245, "10648": 245, "10650": 245, "10652": 245, "10654": 245, "10656": 245, "10658": 245, "10660": 245, "10662": 245, "10664": 245, "10666": 245, "10668": 245, "10670": 245, "10672": 245, "10674": 245, "10676": 245, "10678": 245, "10680": 245, "10682": 245, "10684": 245, "10686": 245, "10688": 245, "10690": 245, "10692": 245, "10694": 245, "10696": 245, "10698": 245, "10700": 245, "10702": 245, "10704": 245, "10706": 245, "10708": 245, "10710": 245, "10712": 245, "10714": 245, "10716": 245, "10718": 245, "10720": 245, "10722": 245, "10724": 245, "10726": 245, "10728": 245, "10730": 245, "10732": 245, "10734": 245, "10736": 245, "10738": 245, "10740": 245, "10742": 245, "10744": 245, "10746": 245, "10748": 245, "10750": 245, "10752": 245, "10754": 245, "10756": 245, "10758": 245, "10760": 245, "10762": 245, "10764": 245, "10766": 245, "10768": 245, "10770": 245, "10772": 245, "10774": 245, "10776": 245, "10778": 245, "10780": 245, "10782": 245, "10784": 245, "10786": 245, "10788": 245, "10790": 245, "10792": 245, "10794": 245, "10796": 245, "10798": 245, "10800": 245, "10802": 245, "10804": 245, "10806": 245, "10808": 245, "10810": 245, "10812": 245, "10814": 245, "10816": 245, "10818": 245, "10820": 245, "10822": 245, "10824": 245, "10826": 245, "10828": 245, "10830": 245, "10832": 245, "10834": 245, "10836": 245, "10838": 245, "10840": 245, "10842": 245, "10844": 245, "10846": 245, "10848": 245, "10850": 245, "10852": 245, "10854": 245, "10856": 245, "10858": 245, "10860": 245, "10862": 245, "10864": 245, "10866": 245, "10868": 245, "10870": 245, "10872": 245, "10874": 245, "10876": 245, "10878": 245, "10880": 245, "10882": 245, "10884": 245, "10886": 245, "10888": 245, "10890": 245, "10892": 245, "10894": 245, "10896": 245, "10898": 245, "10900": 245, "10902": 245, "10904": 245, "10906": 245, "10908": 245, "10910": 245, "10912": 245, "10914": 245, "10916": 245, "10918": 245, "10920": 245, "10922": 245, "10924": 245, "10926": 245, "10928": 245, "10930": 245, "10932": 245, "10934": 245, "10936": 245, "10938": 245, "10940": 245, "10942": 245, "10944": 245, "10946": 245, "10948": 245, "10950": 245, "10952": 245, "10954": 245, "10956": 245, "10958": 245, "10960": 245, "10962": 245, "10964": 245, "10966": 245, "10968": 245, "10970": 245, "10972": 245, "10974": 245, "10976": 245, "10978": 245, "10980": 245, "10982": 245, "10984": 245, "10986": 245, "10988": 245, "10990": 245, "10992": 245, "10994": 245, "10996": 245, "10998": 245, "11000": 245, "11002": 245, "11004": 245, "11006": 245, "11008": 245, "11010": 245, "11012": 245, "11014": 245, "11016": 245, "11018": 245, "11020": 245, "11022": 245, "11024": 245, "11026": 245, "11028": 245, "11030": 245, "11032": 245, "11034": 245, "11036": 245, "11038": 245, "11040": 245, "11042": 245, "11044": 245, "11046": 245, "11048": 245, "11050": 245, "11052": 245, "11054": 245, "11056": 245, "11058": 245, "11060": 245, "11062": 245, "11064": 245, "11066": 245, "11068": 245, "11070": 245, "11072": 245, "11074": 245, "11076": 245, "11078": 245, "11080": 245, "11082": 245, "11084": 245, "11086": 245, "11088": 245, "11090": 245, "11092": 245, "11094": 245, "11096": 245, "11098": 245, "11100": 245, "11102": 245, "11104": 245, "11106": 245, "11108": 245, "11110": 245, "11112": 245, "11114": 245, "11116": 245, "11118": 245, "11120": 245, "11122": 245, "11124": 245, "11126": 245, "11128": 245, "11130": 245, "11132": 245, "11134": 245, "11136": 245, "11138": 245, "11140": 245, "11142": 245, "11144": 245, "11146": 245, "11148": 245, "11150": 245, "11152": 245, "11154": 245, "11156": 245, "11158": 245, "11160": 245, "11162": 245, "11164": 245, "11166": 245, "11168": 245, "11170": 245, "11172": 245, "11174": 245, "11176": 245, "11178": 245, "11180": 245, "11182": 245, "11184": 245, "11186": 245, "11188": 245, "11190": 245, "11192": 245, "11194": 245, "11196": 245, "11198": 245, "11200": 245, "11202": 245, "11204": 245, "11206": 245, "11208": 245, "11210": 245, "11212": 245, "11214": 245, "11216": 245, "11218": 245, "11220": 245, "11222": 245, "11224": 245, "11226": 245, "11228": 245, "11230": 245, "11232": 245, "11234": 245, "11236": 245, "11238": 245, "11240": 245, "11242": 245, "11244": 245, "11246": 245, "11248": 245, "11250": 245, "11252": 245, "11254": 245, "11256": 245, "11258": 245, "11260": 245, "11262": 245, "11264": 245, "11266": 245, "11268": 245, "11270": 245, "11272": 245, "11274": 245, "11276": 245, "11278": 245, "11280": 245, "11282": 245, "11284": 245, "11286": 245, "11288": 245, "11290": 245, "11292": 245, "11294": 245, "11296": 245, "11298": 245, "11300": 245, "11302": 245, "11304": 245, "11306": 245, "11308": 245, "11310": 245, "11312": 245, "11314": 245, "11316": 245, "11318": 245, "11320": 245, "11322": 245, "11324": 245, "11326": 245, "11328": 245, "11330": 245, "11332": 245, "11334": 245, "11336": 245, "11340": 245, "11342": 245, "11344": 245, "11346": 245, "11348": [245, 294], "11350": 245, "11352": 245, "11354": 245, "11356": 245, "11358": 245, "11360": 245, "11362": 245, "11364": 245, "11366": 245, "11368": 245, "11370": 245, "11372": 245, "11374": 245, "11376": 245, "11378": 245, "11380": 245, "11382": 245, "11384": 245, "11386": 245, "11388": 245, "11390": 245, "11392": 245, "11394": 245, "11396": 245, "11398": 245, "11400": 245, "11402": 245, "11404": 245, "11406": 245, "11408": 245, "11410": 245, "11412": 245, "11414": 245, "11416": 245, "11418": 245, "11420": 245, "11422": 245, "11424": 245, "11426": 245, "11428": 245, "11430": 245, "11432": 245, "11434": 245, "11436": 245, "11438": 245, "11440": 245, "11442": 245, "11444": 245, "11446": 245, "11448": 245, "11450": 245, "11452": 245, "11454": 245, "11456": 245, "11458": 245, "11460": 245, "11462": 245, "11464": 245, "11466": 245, "11468": 245, "11470": 245, "11472": 245, "11474": 245, "11476": 245, "11478": 245, "11480": 245, "11482": 245, "11484": 245, "11486": 245, "11488": 245, "11490": 245, "11492": 245, "11494": 245, "11496": 245, "11498": 245, "11500": 245, "11502": 245, "11504": 245, "11506": 245, "11508": 245, "11510": 245, "11512": 245, "11514": 245, "11516": 245, "11518": 245, "11520": 245, "11522": 245, "11524": 245, "11526": 245, "11528": 245, "11530": 245, "11532": 245, "11534": 245, "11536": 245, "11538": 245, "11540": 245, "11542": 245, "11544": 245, "11546": 245, "11548": 245, "11550": 245, "11552": 245, "11554": 245, "11556": 245, "11558": 245, "11560": 245, "11562": 245, "11564": 245, "11566": 245, "11568": 245, "11570": 245, "11572": 245, "11574": 245, "11576": 245, "11578": 245, "11580": 245, "11582": 245, "11584": 245, "11586": 245, "11588": 245, "11590": 245, "11592": 245, "11594": 245, "11596": 245, "11598": 245, "11600": 245, "11602": 245, "11604": 245, "11606": 245, "11608": 245, "11610": 245, "11612": 245, "11614": 245, "11616": 245, "11618": 245, "11620": 245, "11622": 245, "11624": 245, "11626": 245, "11628": 245, "11630": 245, "11634": 245, "11636": 245, "11638": 245, "11640": 245, "11642": 245, "11644": 245, "11646": 245, "11648": 245, "11650": 245, "11652": 245, "11654": 245, "11656": 245, "11658": 245, "11660": 245, "11662": 245, "11664": 245, "11666": 245, "11668": 245, "11670": 245, "11672": 245, "11674": 245, "11676": 245, "11678": 245, "11680": 245, "11682": 245, "11684": 245, "11686": 245, "11688": 245, "11690": 245, "11692": 245, "11694": 245, "11696": 245, "11698": 245, "11700": 245, "11702": 245, "11704": 245, "11706": 245, "11708": 245, "11710": 245, "11712": 245, "11714": 245, "11716": 245, "11718": 245, "11720": 245, "11722": 245, "11724": 245, "11726": 245, "11728": 245, "11730": 245, "11732": 245, "11734": 245, "11736": 245, "11738": 245, "11740": 245, "11742": 245, "11744": 245, "11746": 245, "11748": 245, "11750": 245, "11752": 245, "11754": 245, "11756": 245, "11758": 245, "11760": 245, "11762": 245, "11764": 245, "11766": 245, "11768": 245, "11770": 245, "11772": 245, "11774": 245, "11776": 245, "11778": 245, "11780": 245, "11782": 245, "11784": 245, "11786": 245, "11788": 245, "11790": 245, "11792": 245, "11794": 245, "11796": 245, "11798": 245, "11800": 245, "11802": 245, "11804": 245, "11806": 245, "11808": 245, "11810": 245, "11812": 245, "11814": 245, "11816": 245, "11818": 245, "11820": 245, "11822": 245, "11824": 245, "11826": 245, "11828": 245, "11830": 245, "11832": 245, "11834": 245, "11836": 245, "11838": 245, "11840": 245, "11842": 245, "11844": 245, "11846": 245, "11848": 245, "11850": 245, "11852": 245, "11854": 245, "11856": 245, "11858": 245, "11860": 245, "11862": 245, "11864": 245, "11866": 245, "11868": 245, "11870": 245, "11872": 245, "11874": 245, "11876": 245, "11878": 245, "11880": 245, "11882": 245, "11884": 245, "11886": 245, "11888": 245, "11890": 245, "11892": 245, "11894": 245, "11896": 245, "11898": 245, "11900": 245, "11902": 245, "11904": 245, "11906": 245, "11908": 245, "11910": 245, "11912": 245, "11914": 245, "11916": 245, "11918": 245, "11920": 245, "11922": 245, "11924": 245, "11926": 245, "11928": 245, "11930": 245, "11932": 245, "11934": 245, "11936": 245, "11938": 245, "11940": 245, "11942": 245, "11944": 245, "11946": 245, "11948": 245, "11950": 245, "11952": 245, "11954": 245, "11956": 245, "11958": 245, "11960": 245, "11962": 245, "11964": 245, "11966": 245, "11968": 245, "11970": 245, "11972": 245, "11974": 245, "11976": 245, "11978": 245, "11980": 245, "11982": 245, "11984": 245, "11986": 245, "11988": 245, "11990": 245, "11992": 245, "11994": 245, "11996": 245, "11998": 245, "12000": 245, "12002": 245, "12004": 245, "12006": 245, "12008": 245, "12010": 245, "12012": 245, "12014": 245, "12016": 245, "12018": 245, "12020": 245, "12022": 245, "12024": 245, "12026": 245, "12028": 245, "12030": 245, "12032": 245, "12034": 245, "12036": 245, "12038": 245, "12040": 245, "12042": 245, "12044": 245, "12046": 245, "12048": 245, "12050": 245, "12052": 245, "12054": 245, "12056": 245, "12058": 245, "12060": 245, "12062": 245, "12064": 245, "12066": 245, "12068": 245, "12070": 245, "12072": 245, "12074": 245, "12076": 245, "12078": 245, "12080": 245, "12082": 245, "12084": 245, "12086": 245, "12088": 245, "12090": 245, "12092": 245, "12094": 245, "12096": 245, "12098": 245, "12100": 245, "12102": 245, "12104": 245, "12106": 245, "12108": 245, "12110": 245, "12112": 245, "12114": 245, "12116": 245, "12118": 245, "12120": 245, "12122": 245, "12124": 245, "12126": 245, "12128": 245, "12130": 245, "12132": 245, "12134": 245, "12136": 245, "12138": 245, "12140": 245, "12142": 245, "12144": 245, "12146": 245, "12148": 245, "12150": 245, "12152": 245, "12154": 245, "12158": 245, "12160": 245, "12162": 245, "12164": 245, "12166": 245, "12168": 245, "12170": 245, "12172": 245, "12174": 245, "12176": 245, "12178": 245, "12180": 245, "12182": 245, "12184": 245, "12186": 245, "12188": 245, "12190": 245, "12192": 245, "12194": 245, "12196": 245, "12198": 245, "12200": 245, "12202": 245, "12204": 245, "12206": 245, "12208": 245, "12210": 245, "12212": 245, "12214": 245, "12216": 245, "12218": 245, "12220": 245, "12222": 245, "12224": 245, "12226": 245, "12228": 245, "12230": 245, "12232": 245, "12234": 245, "12236": 245, "12238": 245, "12240": 245, "12242": 245, "12244": 245, "12246": 245, "12248": 245, "12250": 245, "12252": 245, "12254": 245, "12256": 245, "12258": 245, "12260": 245, "12262": 245, "12264": 245, "12266": 245, "12268": 245, "12270": 245, "12272": 245, "12274": 245, "12276": 245, "12278": 245, "12280": 245, "12282": 245, "12284": 245, "12286": 245, "12288": 245, "12290": 245, "12292": 245, "12294": 245, "12296": 245, "12298": 245, "12300": 245, "12302": 245, "12304": 245, "12306": 245, "12308": 245, "12310": 245, "12312": 245, "12314": 245, "12316": 245, "12318": 245, "12320": 245, "12322": 245, "12324": 245, "12326": 245, "12328": 245, "12330": 245, "12332": 245, "12334": 245, "12336": 245, "12338": 245, "12340": 245, "12342": 245, "12344": 245, "12346": 245, "12348": 245, "12350": 245, "12352": 245, "12354": 245, "12356": 245, "12358": 245, "12360": 245, "12362": 245, "12364": 245, "12366": 245, "12368": 245, "12370": 245, "12372": 245, "12374": 245, "12376": 245, "12378": 245, "12380": 245, "12382": 245, "12384": 245, "12386": 245, "12388": 245, "12390": 245, "12392": 245, "12394": 245, "12396": 245, "12398": 245, "12400": 245, "12402": 245, "12404": 245, "12406": 245, "12408": 245, "12410": 245, "12412": 245, "12414": 245, "12416": 245, "12418": 245, "12420": 245, "12422": 245, "12424": 245, "12426": 245, "12428": 245, "12430": 245, "12432": 245, "12434": 245, "12436": 245, "12438": 245, "12440": 245, "12442": 245, "12444": 245, "12446": 245, "12448": 245, "12450": 245, "12452": 245, "12454": 245, "12456": 245, "12458": 245, "12460": 245, "12462": 245, "12464": 245, "12466": 245, "12468": 245, "12470": 245, "12472": 245, "12474": 245, "12476": 245, "12478": 245, "12480": 245, "12482": 245, "12484": 245, "12486": 245, "12488": 245, "12490": 245, "12492": 245, "12494": 245, "12496": 245, "12498": 245, "12500": 245, "12502": 245, "12504": 245, "12506": 245, "12508": 245, "12510": 245, "12512": 245, "12514": 245, "12516": 245, "12518": 245, "12520": 245, "12522": 245, "12524": 245, "12526": 245, "12528": 245, "12530": 245, "12532": 245, "12534": 245, "12536": 245, "12538": 245, "12540": 245, "12542": 245, "12544": 245, "12546": 245, "12548": 245, "12550": 245, "12552": 245, "12554": 245, "12556": 245, "12558": 245, "12560": 245, "12562": 245, "12564": 245, "12566": 245, "12568": 245, "12570": 245, "12572": 245, "12574": 245, "12576": 245, "12578": 245, "12580": 245, "12582": 245, "12584": 245, "12586": 245, "12588": 245, "12590": 245, "12592": 245, "12594": 245, "12596": 245, "12598": 245, "12600": 245, "12602": 245, "12604": 245, "12606": 245, "12608": 245, "12610": 245, "12612": 245, "12614": 245, "12616": 245, "12618": 245, "12620": 245, "12622": 245, "12624": 245, "12626": 245, "12628": 245, "12630": 245, "12632": 245, "12634": 245, "12636": 245, "12638": 245, "12640": 245, "12642": 245, "12644": 245, "12646": 245, "12648": 245, "12650": 245, "12652": 245, "12654": 245, "12656": 245, "12658": 245, "12660": 245, "12662": 245, "12664": 245, "12666": 245, "12668": 245, "12670": 245, "12672": 245, "12674": 245, "12676": 245, "12678": 245, "12680": 245, "12682": 245, "12684": 245, "12686": 245, "12688": 245, "12690": 245, "12692": 245, "12694": 245, "12696": 245, "12698": 245, "12700": 245, "12702": 245, "12704": 245, "12706": 245, "12708": 245, "12710": 245, "12712": 245, "12714": 245, "12716": 245, "12718": 245, "12720": 245, "12722": 245, "12724": 245, "12726": 245, "12728": 245, "12730": 245, "12732": 245, "12734": 245, "12736": 245, "12738": 245, "12740": 245, "12742": 245, "12744": 245, "12746": 245, "12748": 245, "12750": 245, "12752": 245, "12754": 245, "12756": 245, "12758": 245, "12760": 245, "12762": 245, "12764": 245, "12766": 245, "12768": 245, "12770": 245, "12772": 245, "12774": 245, "12776": 245, "12778": 245, "12780": 245, "12782": 245, "12784": 245, "12786": 245, "12788": 245, "12790": 245, "12792": 245, "12794": 245, "12796": 245, "12798": 245, "12800": 245, "12802": 245, "12804": 245, "12806": 245, "12808": 245, "12810": 245, "12812": 245, "12814": 245, "12816": 245, "12818": 245, "12820": 245, "12822": 245, "12824": 245, "12826": 245, "12828": 245, "12830": 245, "12832": 245, "12834": 245, "12836": 245, "12838": 245, "12840": 245, "12842": 245, "12844": 245, "12846": 245, "12848": 245, "12850": 245, "12852": 245, "12854": 245, "12856": 245, "12858": 245, "12860": 245, "12862": 245, "12864": 245, "12866": 245, "12868": 245, "12870": 245, "12872": 245, "12874": 245, "12876": 245, "12878": 245, "12880": 245, "12882": 245, "12884": 245, "12886": 245, "12888": 245, "12890": 245, "12892": 245, "12894": 245, "12896": 245, "12898": 245, "12900": 245, "12902": 245, "12904": 245, "12906": 245, "12908": 245, "12910": 245, "12912": 245, "12914": 245, "12916": 245, "12918": 245, "12920": 245, "12922": 245, "12924": 245, "12926": 245, "12928": 245, "12930": 245, "12932": 245, "12934": 245, "12936": 245, "12938": 245, "12940": 245, "12942": 245, "12944": 245, "12946": 245, "12948": 245, "12950": 245, "12952": 245, "12954": 245, "12956": 245, "12958": 245, "12960": 245, "12962": 245, "12964": 245, "12966": 245, "12968": 245, "12970": 245, "12972": 245, "12974": 245, "12976": 245, "12978": 245, "12980": 245, "12982": 245, "12984": 245, "12986": 245, "12988": 245, "12990": 245, "12992": 245, "12994": 245, "12996": 245, "12998": 245, "13000": 245, "13002": 245, "13004": 245, "13006": 245, "13008": 245, "13010": 245, "13012": 245, "13014": 245, "13016": 245, "13018": 245, "13020": 245, "13022": 245, "13024": 245, "13026": 245, "13028": 245, "13030": 245, "13032": 245, "13034": 245, "13036": 245, "13038": 245, "13040": 245, "13042": 245, "13044": 245, "13046": 245, "13048": 245, "13050": 245, "13052": 245, "13054": 245, "13056": 245, "13058": 245, "13060": 245, "13062": 245, "13064": 245, "13066": 245, "13068": 245, "13070": 245, "13072": 245, "13074": 245, "13076": 245, "13078": 245, "13080": 245, "13082": 245, "13084": 245, "13086": 245, "13088": 245, "13090": 245, "13092": 245, "13094": 245, "13096": 245, "13098": 245, "13100": 245, "13102": 245, "13104": 245, "13106": 245, "13108": 245, "13110": 245, "13112": 245, "13114": 245, "13116": 245, "13118": 245, "13120": 245, "13122": 245, "13124": 245, "13126": 245, "13128": 245, "13130": 245, "13132": 245, "13134": 245, "13136": 245, "13138": 245, "13140": 245, "13142": 245, "13144": 245, "13146": 245, "13148": 245, "13150": 245, "13152": 245, "13154": 245, "13156": 245, "13158": 245, "13160": 245, "13162": 245, "13164": 245, "13166": 245, "13168": 245, "13170": 245, "13172": 245, "13174": 245, "13176": 245, "13178": 245, "13180": 245, "13182": 245, "13184": 245, "13186": 245, "13188": 245, "13190": 245, "13192": 245, "13194": 245, "13196": 245, "13198": 245, "13200": 245, "13202": 245, "13204": 245, "13206": 245, "13208": 245, "13210": 245, "13212": 245, "13214": 245, "13216": 245, "13218": 245, "13220": 245, "13222": 245, "13224": 245, "13226": 245, "13228": 245, "13230": 245, "13232": 245, "13234": 245, "13236": 245, "13238": 245, "13240": 245, "13242": 245, "13244": 245, "13246": 245, "13248": 245, "13250": 245, "13252": 245, "13254": 245, "13256": 245, "13258": 245, "13260": 245, "13262": 245, "13264": 245, "13266": 245, "13268": 245, "13270": 245, "13272": 245, "13274": 245, "13276": 245, "13278": 245, "13280": 245, "13282": 245, "13284": 245, "13286": 245, "13288": 245, "13290": 245, "13292": 245, "13294": 245, "13296": 245, "13298": 245, "13300": 245, "13302": 245, "13304": 245, "13306": 245, "13308": 245, "13310": 245, "13312": 245, "13314": 245, "13316": 245, "13318": 245, "13320": 245, "13322": 245, "13324": 245, "13326": 245, "13328": 245, "13330": 245, "13332": 245, "13334": 245, "13336": 245, "13338": 245, "13340": 245, "13342": 245, "13344": 245, "13346": 245, "13348": 245, "13350": 245, "13352": 245, "13354": 245, "13356": 245, "13358": 245, "13360": 245, "13362": 245, "13364": 245, "13366": 245, "13368": 245, "13370": 245, "13372": 245, "13374": 245, "13376": 245, "13378": 245, "13380": 245, "13382": 245, "13384": 245, "13386": 245, "13388": 245, "13390": 245, "13392": 245, "13394": 245, "13396": 245, "13398": 245, "13400": 245, "13402": 245, "13404": 245, "13406": 245, "13408": 245, "13410": 245, "13412": 245, "13414": 245, "13416": 245, "13418": 245, "13420": 245, "13422": 245, "13424": 245, "13426": 245, "13428": 245, "13430": 245, "13432": 245, "13434": 245, "13436": 245, "13438": 245, "13440": 245, "13442": 245, "13444": 245, "13446": 245, "13448": 245, "13450": 245, "13452": 245, "13454": 245, "13456": 245, "13458": 245, "13460": 245, "13462": 245, "13464": 245, "13466": 245, "13468": 245, "13470": 245, "13472": 245, "13474": 245, "13476": 245, "13478": 245, "13480": 245, "13482": 245, "13484": 245, "13486": 245, "13488": 245, "13490": 245, "13492": 245, "13494": 245, "13496": 245, "13498": 245, "13502": 245, "13504": 245, "13506": 245, "13508": 245, "13510": 245, "13512": 245, "13514": 245, "13516": 245, "13518": 245, "13520": 245, "13522": 245, "13524": 245, "13526": 245, "13528": 245, "13530": 245, "13532": 245, "13534": 245, "13536": 245, "13538": 245, "13540": 245, "13542": 245, "13544": 245, "13546": 245, "13548": 245, "13550": 245, "13552": 245, "13554": 245, "13556": 245, "13558": 245, "13560": 245, "13562": 245, "13564": 245, "13566": 245, "13568": 245, "13570": 245, "13572": 245, "13574": 245, "13576": 245, "13578": 245, "13580": 245, "13582": 245, "13584": 245, "13586": 245, "13588": 245, "13590": 245, "13592": 245, "13594": 245, "13596": 245, "13598": 245, "13600": 245, "13602": 245, "13604": 245, "13606": 245, "13608": 245, "13610": 245, "13612": 245, "13614": 245, "13616": 245, "13618": 245, "13620": 245, "13622": 245, "13624": 245, "13626": 245, "13628": 245, "13630": 245, "13632": 245, "13634": 245, "13636": 245, "13638": 245, "13640": 245, "13642": 245, "13644": 245, "13646": 245, "13648": 245, "13650": 245, "13652": 245, "13654": 245, "13656": 245, "13658": 245, "13660": 245, "13662": 245, "13664": 245, "13666": 245, "13668": 245, "13670": 245, "13672": 245, "13674": 245, "13676": 245, "13678": 245, "13680": 245, "13682": 245, "13684": 245, "13686": 245, "13688": 245, "13690": 245, "13692": 245, "13694": 245, "13696": 245, "13698": 245, "13700": 245, "13702": 245, "13704": 245, "13706": 245, "13708": 245, "13710": 245, "13712": 245, "13714": 245, "13716": 245, "13718": 245, "13720": 245, "13722": 245, "13724": 245, "13726": 245, "13728": 245, "13730": 245, "13732": 245, "13734": 245, "13736": 245, "13738": 245, "13740": 245, "13742": 245, "13744": 245, "13746": 245, "13748": 245, "13750": 245, "13752": 245, "13754": 245, "13756": 245, "13758": 245, "13760": 245, "13762": 245, "13764": 245, "13766": 245, "13768": 245, "13770": 245, "13772": 245, "13774": 245, "13776": 245, "13778": 245, "13780": 245, "13782": 245, "13784": 245, "13786": 245, "13788": 245, "13790": 245, "13792": 245, "13794": 245, "13796": 245, "13798": 245, "13800": 245, "13802": 245, "13804": 245, "13806": 245, "13808": 245, "13810": 245, "13812": 245, "13814": 245, "13816": 245, "13818": 245, "13820": 245, "13822": 245, "13824": 245, "13826": 245, "13828": 245, "13830": 245, "13832": 245, "13834": 245, "13836": 245, "13838": 245, "13840": 245, "13842": 245, "13844": 245, "13846": 245, "13848": 245, "13850": 245, "13852": 245, "13854": 245, "13856": 245, "13858": 245, "13860": 245, "13862": 245, "13864": 245, "13866": 245, "13868": 245, "13870": 245, "13872": 245, "13874": 245, "13876": 245, "13878": 245, "13880": 245, "13882": 245, "13884": 245, "13886": 245, "13888": 245, "13890": 245, "13892": 245, "13894": 245, "13896": 245, "13898": 245, "13900": 245, "13902": 245, "13904": 245, "13906": 245, "13908": 245, "13910": 245, "13912": 245, "13914": 245, "13916": 245, "13918": 245, "13920": 245, "13922": 245, "13924": 245, "13926": 245, "13928": 245, "13930": 245, "13932": 245, "13934": 245, "13936": 245, "13938": 245, "13940": 245, "13942": 245, "13944": 245, "13946": 245, "13948": 245, "13950": 245, "13952": 245, "13954": 245, "13956": 245, "13958": 245, "13960": [245, 976], "13962": 245, "13964": 245, "13966": 245, "13968": 245, "13970": 245, "13972": 245, "13974": 245, "13976": 245, "13978": 245, "13980": 245, "13982": 245, "13984": 245, "13986": 245, "13988": 245, "13990": 245, "13992": 245, "13994": 245, "13996": 245, "13998": 245, "14000": 245, "14002": 245, "14004": 245, "14006": 245, "14008": 245, "14010": 245, "14012": 245, "14014": 245, "14016": 245, "14018": 245, "14020": 245, "14022": 245, "14024": 245, "14026": 245, "14028": 245, "14030": 245, "14032": 245, "14034": 245, "14036": 245, "14038": 245, "14040": 245, "14042": 245, "14044": 245, "14046": 245, "14048": 245, "14050": 245, "14052": 245, "14054": 245, "14056": 245, "14058": 245, "14060": 245, "14062": 245, "14064": 245, "14066": 245, "14068": 245, "14070": 245, "14072": 245, "14074": 245, "14076": 245, "14078": 245, "14080": 245, "14082": 245, "14084": 245, "14086": 245, "14088": 245, "14090": 245, "14092": 245, "14094": 245, "14096": 245, "14098": 245, "14100": 245, "14102": 245, "14104": 245, "14106": 245, "14108": 245, "14110": 245, "14112": 245, "14114": 245, "14116": 245, "14118": 245, "14120": 245, "14122": 245, "14124": 245, "14126": 245, "14128": 245, "14130": 245, "14132": 245, "14134": 245, "14136": 245, "14138": 245, "14140": 245, "14142": 245, "14144": 245, "14146": 245, "14148": 245, "14150": 245, "14152": 245, "14154": 245, "14156": 245, "14158": 245, "14160": 245, "14162": 245, "14164": 245, "14166": 245, "14168": 245, "14170": 245, "14172": 245, "14174": 245, "14176": 245, "14178": 245, "14180": 245, "14182": 245, "14184": 245, "14186": 245, "14188": 245, "14190": 245, "14192": 245, "14194": 245, "14196": 245, "14198": 245, "14200": 245, "14202": 245, "14204": 245, "14206": 245, "14208": 245, "14210": 245, "14212": 245, "14214": 245, "14216": 245, "14218": 245, "14220": 245, "14222": 245, "14224": 245, "14226": 245, "14228": 245, "14230": 245, "14232": 245, "14234": 245, "14236": 245, "14238": 245, "14240": 245, "14242": 245, "14244": 245, "14246": 245, "14248": 245, "14250": 245, "14252": 245, "14254": 245, "14256": 245, "14258": 245, "14260": 245, "14262": 245, "14264": 245, "14266": 245, "14268": 245, "14270": 245, "14272": 245, "14274": 245, "14276": 245, "14278": 245, "14280": 245, "14282": 245, "14284": 245, "14286": 245, "14288": 245, "14290": 245, "14292": 245, "14294": 245, "14296": 245, "14298": 245, "14300": 245, "14302": 245, "14304": 245, "14306": 245, "14308": 245, "14310": 245, "14312": 245, "14314": 245, "14316": 245, "14318": 245, "14320": 245, "14322": 245, "14324": 245, "14326": 245, "14328": 245, "14330": 245, "14332": 245, "14334": 245, "14336": 245, "14338": 245, "14340": 245, "14342": 245, "14344": 245, "14346": 245, "14348": 245, "14350": 245, "14352": 245, "14354": 245, "14356": 245, "14358": 245, "14360": 245, "14362": 245, "14364": 245, "14366": 245, "14368": 245, "14370": 245, "14372": 245, "14374": 245, "14376": 245, "14378": 245, "14380": 245, "14382": 245, "14384": 245, "14388": 245, "14390": 245, "14392": 245, "14394": 245, "14396": 245, "14398": 245, "14400": 245, "14402": 245, "14404": 245, "14406": 245, "14408": 245, "14410": 245, "14412": 245, "14414": 245, "14416": 245, "14418": 245, "14420": 245, "14422": 245, "14424": 245, "14426": 245, "14428": 245, "14430": 245, "14432": 245, "14434": 245, "14436": 245, "14438": 245, "14440": 245, "14442": 245, "14444": 245, "14446": 245, "14448": 245, "14450": 245, "14452": 245, "14454": 245, "14456": 245, "14458": 245, "14460": 245, "14462": 245, "14464": 245, "14466": 245, "14468": 245, "14470": 245, "14472": 245, "14474": 245, "14476": 245, "14478": 245, "14480": 245, "14482": 245, "14484": 245, "14486": 245, "14488": 245, "14490": 245, "14492": 245, "14494": 245, "14496": 245, "14498": 245, "14500": 245, "14502": 245, "14504": 245, "14506": 245, "14508": 245, "14510": 245, "14512": 245, "14514": 245, "14516": 245, "14518": 245, "14520": 245, "14522": 245, "14524": 245, "14526": 245, "14528": 245, "14530": 245, "14532": 245, "14534": 245, "14536": 245, "14538": 245, "14540": 245, "14542": 245, "14544": 245, "14546": 245, "14548": 245, "14550": 245, "14552": 245, "14554": 245, "14556": 245, "14558": 245, "14560": 245, "14562": 245, "14564": 245, "14566": 245, "14568": 245, "14570": 245, "14572": 245, "14574": 245, "14576": 245, "14578": 245, "14580": 245, "14582": 245, "14584": 245, "14586": 245, "14588": 245, "14590": 245, "14592": 245, "14594": 245, "14596": 245, "14598": 245, "14600": 245, "14602": 245, "14604": 245, "14606": 245, "14608": 245, "14610": 245, "14612": 245, "14614": 245, "14616": 245, "14618": 245, "14620": 245, "14622": 245, "14624": 245, "14626": 245, "14628": 245, "14630": 245, "14632": 245, "14634": 245, "14636": 245, "14638": 245, "14640": 245, "14642": 245, "14644": 245, "14646": 245, "14648": 245, "14650": 245, "14652": 245, "14654": 245, "14656": 245, "14658": 245, "14660": 245, "14662": 245, "14664": 245, "14666": 245, "14668": 245, "14670": 245, "14672": 245, "14674": 245, "14676": 245, "14678": 245, "14680": 245, "14682": 245, "14684": 245, "14686": 245, "14688": 245, "14690": 245, "14692": 245, "14694": 245, "14696": 245, "14698": 245, "14700": 245, "14702": 245, "14704": 245, "14706": 245, "14708": 245, "14710": 245, "14712": 245, "14714": 245, "14716": 245, "14718": 245, "14720": 245, "14722": 245, "14724": 245, "14726": 245, "14728": 245, "14730": 245, "14732": 245, "14734": 245, "14736": 245, "14738": 245, "14740": 245, "14742": 245, "14744": 245, "14746": 245, "14748": 245, "14750": 245, "14752": 245, "14754": 245, "14756": 245, "14758": 245, "14760": 245, "14762": 245, "14764": 245, "14766": 245, "14768": 245, "14770": 245, "14772": 245, "14774": 245, "14776": 245, "14778": 245, "14780": 245, "14782": 245, "14784": 245, "14786": 245, "14788": 245, "14790": 245, "14792": 245, "14794": 245, "14796": 245, "14798": 245, "14800": 245, "14802": 245, "14804": 245, "14806": 245, "14808": 245, "14810": 245, "14812": 245, "14814": 245, "14816": 245, "14818": 245, "14820": 245, "14822": 245, "14824": 245, "14826": 245, "14828": 245, "14830": 245, "14832": 245, "14834": 245, "14836": 245, "14838": 245, "14840": 245, "14842": 245, "14844": 245, "14846": 245, "14848": 245, "14850": 245, "14852": 245, "14854": 245, "14856": 245, "14858": 245, "14860": 245, "14862": 245, "14864": 245, "14866": 245, "14868": 245, "14870": 245, "14872": 245, "14874": 245, "14876": 245, "14878": 245, "14880": 245, "14882": [245, 591], "14884": 245, "14886": 245, "14888": 245, "14890": 245, "14892": 245, "14894": 245, "14896": 245, "14898": 245, "14900": 245, "14902": 245, "14904": 245, "14906": 245, "14908": 245, "14910": 245, "14912": 245, "14914": 245, "14916": 245, "14918": 245, "14920": 245, "14922": 245, "14924": 245, "14926": 245, "14928": 245, "14930": 245, "14932": 245, "14934": 245, "14936": 245, "14938": 245, "14940": 245, "14942": 245, "14944": 245, "14946": 245, "14948": 245, "14950": 245, "14952": 245, "14954": 245, "14956": 245, "14958": 245, "14960": 245, "14962": 245, "14964": 245, "14966": 245, "14968": 245, "14970": 245, "14972": 245, "14974": 245, "14976": 245, "14978": 245, "14980": 245, "14982": 245, "14984": 245, "14986": 245, "14988": 245, "14990": [245, 294], "14992": 245, "14994": 245, "14996": 245, "14998": 245, "15002": 245, "15004": 245, "15006": 245, "15008": 245, "15010": 245, "15012": 245, "15014": 245, "15016": 245, "15018": 245, "15020": 245, "15022": 245, "15024": 245, "15026": 245, "15028": 245, "15030": 245, "15032": 245, "15034": 245, "15036": 245, "15038": 245, "15040": 245, "15042": 245, "15044": 245, "15046": 245, "15048": 245, "15050": 245, "15052": 245, "15054": 245, "15056": 245, "15058": 245, "15060": 245, "15062": 245, "15064": 245, "15066": 245, "15068": 245, "15070": 245, "15072": 245, "15074": 245, "15076": 245, "15078": 245, "15080": 245, "15082": 245, "15084": 245, "15086": 245, "15088": 245, "15090": 245, "15092": 245, "15094": 245, "15096": 245, "15098": 245, "15100": 245, "15102": 245, "15104": 245, "15106": 245, "15108": 245, "15110": 245, "15112": 245, "15114": 245, "15116": 245, "15118": 245, "15120": 245, "15122": 245, "15124": 245, "15126": 245, "15128": 245, "15130": 245, "15132": 245, "15134": 245, "15136": 245, "15138": 245, "15140": 245, "15142": 245, "15144": 245, "15146": 245, "15148": 245, "15150": 245, "15152": 245, "15154": 245, "15156": 245, "15158": 245, "15160": 245, "15162": 245, "15164": 245, "15166": 245, "15168": 245, "15170": 245, "15172": 245, "15174": 245, "15176": 245, "15178": 245, "15180": 245, "15182": 245, "15184": 245, "15186": 245, "15188": 245, "15190": 245, "15192": 245, "15194": 245, "15196": 245, "15198": 245, "15200": 245, "15202": 245, "15204": 245, "15206": 245, "15208": 245, "15210": 245, "15212": 245, "15214": 245, "15216": 245, "15218": 245, "15220": 245, "15222": 245, "15224": 245, "15226": 245, "15228": 245, "15230": 245, "15232": 245, "15234": 245, "15236": 245, "15238": 245, "15240": 245, "15242": 245, "15244": [245, 1021], "15246": 245, "15248": 245, "15250": 245, "15252": 245, "15254": 245, "15256": 245, "15258": 245, "15260": 245, "15262": 245, "15264": 245, "15266": 245, "15268": 245, "15270": 245, "15272": 245, "15274": 245, "15276": 245, "15278": 245, "15280": 245, "15282": 245, "15284": 245, "15286": 245, "15288": 245, "15290": 245, "15292": 245, "15294": 245, "15296": 245, "15298": 245, "15300": 245, "15302": 245, "15304": 245, "15306": 245, "15308": 245, "15310": 245, "15312": 245, "15314": 245, "15316": 245, "15318": 245, "15320": 245, "15322": 245, "15324": 245, "15326": 245, "15328": 245, "15330": 245, "15332": 245, "15334": 245, "15336": 245, "15338": 245, "15340": 245, "15342": 245, "15344": 245, "15346": 245, "15348": 245, "15350": 245, "15352": 245, "15354": 245, "15356": 245, "15358": 245, "15360": 245, "15362": 245, "15364": 245, "15366": 245, "15368": 245, "15370": 245, "15372": 245, "15374": 245, "15376": 245, "15378": 245, "15380": 245, "15382": 245, "15384": 245, "15386": 245, "15388": 245, "15390": 245, "15392": 245, "15394": 245, "15396": 245, "15398": 245, "15400": 245, "15402": 245, "15404": 245, "15406": 245, "15408": 245, "15410": 245, "15412": 245, "15414": 245, "15416": 245, "15418": 245, "15420": 245, "15422": 245, "15424": 245, "15426": 245, "15428": 245, "15430": 245, "15432": 245, "15434": 245, "15436": 245, "15438": 245, "15440": 245, "15442": 245, "15444": 245, "15446": 245, "15448": 245, "15450": 245, "15452": 245, "15454": 245, "15456": 245, "15458": 245, "15460": 245, "15462": 245, "15464": 245, "15466": 245, "15468": 245, "15470": 245, "15472": 245, "15474": 245, "15476": 245, "15478": 245, "15480": 245, "15482": 245, "15484": 245, "15486": 245, "15488": 245, "15490": 245, "15492": 245, "15494": 245, "15496": 245, "15498": 245, "15500": 245, "15502": 245, "15504": 245, "15506": 245, "15508": 245, "15510": 245, "15512": 245, "15514": 245, "15516": 245, "15518": 245, "15520": 245, "15522": 245, "15524": 245, "15526": 245, "15528": 245, "15530": 245, "15532": 245, "15534": 245, "15536": 245, "15538": 245, "15540": 245, "15542": 245, "15544": 245, "15546": 245, "15548": 245, "15550": 245, "15552": 245, "15554": 245, "15556": 245, "15558": 245, "15560": 245, "15562": 245, "15564": 245, "15566": 245, "15568": 245, "15570": 245, "15572": 245, "15574": 245, "15576": 245, "15578": 245, "15580": 245, "15582": 245, "15584": 245, "15586": 245, "15588": 245, "15590": 245, "15592": 245, "15594": 245, "15596": 245, "15598": 245, "15600": 245, "15602": 245, "15604": 245, "15606": 245, "15608": 245, "15610": 245, "15612": 245, "15614": 245, "15616": 245, "15618": 245, "15620": 245, "15622": 245, "15624": 245, "15626": 245, "15628": 245, "15630": 245, "15632": 245, "15634": 245, "15636": 245, "15638": 245, "15640": 245, "15642": 245, "15644": 245, "15646": 245, "15648": 245, "15650": 245, "15652": 245, "15654": 245, "15656": 245, "15658": 245, "15660": 245, "15662": 245, "15664": 245, "15666": 245, "15668": 245, "15670": 245, "15672": 245, "15674": 245, "15676": 245, "15678": 245, "15680": 245, "15682": 245, "15684": 245, "15686": 245, "15688": 245, "15690": 245, "15692": 245, "15694": 245, "15696": 245, "15698": 245, "15700": 245, "15702": 245, "15704": 245, "15706": 245, "15708": 245, "15710": 245, "15712": 245, "15714": 245, "15716": 245, "15718": 245, "15720": 245, "15722": 245, "15724": 245, "15726": 245, "15728": 245, "15730": 245, "15732": 245, "15734": 245, "15736": 245, "15738": 245, "15740": 245, "15742": 245, "15744": 245, "15746": 245, "15748": 245, "15750": 245, "15752": 245, "15754": 245, "15756": 245, "15758": 245, "15760": 245, "15762": 245, "15764": 245, "15766": 245, "15768": 245, "15770": 245, "15772": 245, "15774": 245, "15776": 245, "15778": 245, "15780": 245, "15782": 245, "15784": 245, "15786": 245, "15788": 245, "15790": 245, "15792": 245, "15794": 245, "15796": 245, "15798": 245, "15800": 245, "15802": 245, "15804": 245, "15806": 245, "15808": 245, "15810": 245, "15812": 245, "15814": 245, "15816": 245, "15818": 245, "15820": 245, "15822": 245, "15824": 245, "15826": 245, "15828": 245, "15830": 245, "15832": 245, "15834": 245, "15836": 245, "15838": 245, "15840": 245, "15842": 245, "15844": 245, "15846": 245, "15848": 245, "15850": 245, "15852": 245, "15854": 245, "15856": 245, "15858": 245, "15860": 245, "15862": 245, "15864": 245, "15866": 245, "15868": 245, "15870": 245, "15872": 245, "15874": 245, "15876": 245, "15878": 245, "15880": 245, "15882": 245, "15884": 245, "15886": 245, "15888": 245, "15890": 245, "15892": 245, "15894": 245, "15896": 245, "15898": 245, "15900": 245, "15902": 245, "15904": 245, "15906": 245, "15908": 245, "15910": 245, "15912": 245, "15914": 245, "15916": 245, "15918": 245, "15920": 245, "15922": 245, "15924": 245, "15926": 245, "15928": 245, "15930": 245, "15932": 245, "15934": 245, "15936": 245, "15938": 245, "15940": 245, "15942": 245, "15944": 245, "15946": 245, "15948": 245, "15950": 245, "15952": 245, "15954": 245, "15956": 245, "15958": 245, "15960": 245, "15962": 245, "15964": 245, "15966": 245, "15968": 245, "15970": 245, "15972": 245, "15974": 245, "15976": 245, "15978": 245, "15980": 245, "15982": 245, "15984": 245, "15986": 245, "15988": 245, "15990": 245, "15992": 245, "15994": 245, "15996": 245, "15998": 245, "16000": 245, "16002": 245, "16004": 245, "16006": 245, "16008": 245, "16010": 245, "16012": 245, "16014": 245, "16016": 245, "16018": 245, "16020": 245, "16022": 245, "16024": 245, "16026": 245, "16028": 245, "16030": 245, "16032": 245, "16034": 245, "16036": 245, "16038": 245, "16040": 245, "16042": 245, "16044": 245, "16046": 245, "16048": 245, "16050": 245, "16052": 245, "16054": 245, "16056": 245, "16058": 245, "16060": 245, "16062": 245, "16064": 245, "16066": 245, "16068": 245, "16070": 245, "16072": 245, "16074": 245, "16076": 245, "16078": 245, "16080": 245, "16082": 245, "16084": 245, "16086": 245, "16088": 245, "16090": 245, "16092": 245, "16094": 245, "16096": 245, "16098": 245, "16100": 245, "16102": 245, "16104": 245, "16106": 245, "16108": 245, "16110": 245, "16112": 245, "16114": 245, "16116": 245, "16118": 245, "16120": 245, "16122": 245, "16124": 245, "16126": 245, "16128": 245, "16130": 245, "16132": 245, "16134": 245, "16136": 245, "16138": 245, "16140": 245, "16142": 245, "16144": 245, "16146": 245, "16148": 245, "16150": 245, "16152": 245, "16154": 245, "16156": 245, "16158": 245, "16160": 245, "16162": 245, "16164": 245, "16166": 245, "16168": 245, "16170": 245, "16172": 245, "16174": 245, "16176": 245, "16178": 245, "16180": 245, "16182": 245, "16184": 245, "16186": 245, "16188": 245, "16190": 245, "16192": 245, "16194": 245, "16196": 245, "16198": 245, "16200": 245, "16202": 245, "16204": 245, "16206": 245, "16208": 245, "16210": 245, "16212": 245, "16214": 245, "16216": 245, "16218": 245, "16220": 245, "16222": 245, "16224": 245, "16226": 245, "16228": 245, "16230": 245, "16232": 245, "16234": 245, "16236": 245, "16238": 245, "16240": 245, "16242": 245, "16244": 245, "16246": 245, "16248": 245, "16250": 245, "16252": 245, "16254": 245, "16256": 245, "16258": 245, "16260": 245, "16262": 245, "16264": 245, "16266": 245, "16268": 245, "16270": 245, "16272": 245, "16274": 245, "16276": 245, "16278": 245, "16280": 245, "16282": 245, "16284": 245, "16286": 245, "16288": 245, "16290": 245, "16292": 245, "16294": 245, "16296": 245, "16298": 245, "16300": 245, "16302": 245, "16304": 245, "16306": 245, "16308": 245, "16310": 245, "16312": 245, "16314": 245, "16316": 245, "16318": 245, "16320": 245, "16322": 245, "16324": 245, "16326": 245, "16328": 245, "16330": 245, "16332": 245, "16334": 245, "16336": 245, "16338": 245, "16340": 245, "16342": 245, "16344": 245, "16346": 245, "16348": 245, "16350": 245, "16352": 245, "16354": 245, "16356": 245, "16358": 245, "16360": 245, "16362": 245, "16364": 245, "16366": 245, "16368": 245, "16370": 245, "16372": 245, "16374": 245, "16376": 245, "16378": 245, "16380": 245, "16382": 245, "16386": 245, "16388": 245, "16390": 245, "16392": 245, "16394": 245, "16396": 245, "16398": 245, "16400": 245, "16402": 245, "16404": 245, "16406": 245, "16408": 245, "16410": 245, "16412": 245, "16414": 245, "16416": 245, "16418": 245, "16420": 245, "16422": 245, "16424": 245, "16426": 245, "16428": 245, "16430": 245, "16432": 245, "16434": 245, "16436": 245, "16438": 245, "16440": 245, "16442": 245, "16444": 245, "16446": 245, "16448": 245, "16450": 245, "16452": 245, "16454": 245, "16456": 245, "16458": 245, "16460": 245, "16462": 245, "16464": 245, "16466": 245, "16468": 245, "16470": 245, "16472": 245, "16474": 245, "16476": 245, "16478": 245, "16480": 245, "16482": 245, "16484": 245, "16486": 245, "16488": 245, "16490": 245, "16492": 245, "16494": 245, "16496": 245, "16498": 245, "16500": 245, "16502": 245, "16504": 245, "16506": 245, "16508": 245, "16510": 245, "16512": 245, "16514": 245, "16516": 245, "16518": 245, "16520": 245, "16522": 245, "16524": 245, "16526": 245, "16528": 245, "16530": 245, "16532": 245, "16534": 245, "16536": 245, "16538": 245, "16540": 245, "16542": 245, "16544": 245, "16546": 245, "16548": 245, "16550": 245, "16552": 245, "16554": 245, "16556": 245, "16558": 245, "16560": 245, "16562": 245, "16564": 245, "16566": 245, "16568": 245, "16570": 245, "16572": 245, "16574": 245, "16576": 245, "16578": 245, "16580": 245, "16582": 245, "16584": 245, "16586": 245, "16588": 245, "16590": 245, "16592": 245, "16594": 245, "16596": 245, "16598": 245, "16600": 245, "16602": 245, "16604": 245, "16606": 245, "16608": 245, "16610": 245, "16612": 245, "16614": 245, "16616": 245, "16618": 245, "16620": 245, "16622": 245, "16624": 245, "16626": 245, "16628": 245, "16630": 245, "16632": 245, "16634": 245, "16636": 245, "16638": 245, "16640": 245, "16642": 245, "16644": 245, "16646": 245, "16648": 245, "16650": 245, "16652": 245, "16654": 245, "16656": 245, "16658": 245, "16660": 245, "16662": 245, "16664": 245, "16666": 245, "16668": 245, "16670": 245, "16672": 245, "16674": 245, "16676": 245, "16678": 245, "16680": 245, "16682": 245, "16684": 245, "16686": 245, "16688": 245, "16690": 245, "16692": 245, "16694": 245, "16696": 245, "16698": 245, "16700": 245, "16702": 245, "16704": 245, "16706": 245, "16708": 245, "16710": 245, "16712": 245, "16714": 245, "16716": 245, "16718": 245, "16720": 245, "16722": 245, "16724": 245, "16726": 245, "16728": 245, "16730": 245, "16732": 245, "16734": 245, "16736": 245, "16738": 245, "16740": 245, "16742": 245, "16744": 245, "16746": 245, "16748": 245, "16750": 245, "16752": 245, "16754": 245, "16756": 245, "16758": 245, "16760": 245, "16762": 245, "16764": 245, "16766": 245, "16768": 245, "16770": 245, "16772": 245, "16774": 245, "16776": 245, "16778": 245, "16780": 245, "16782": 245, "16784": 245, "16786": 245, "16788": 245, "16790": 245, "16792": 245, "16794": 245, "16796": 245, "16798": 245, "16800": 245, "16802": 245, "16804": 245, "16806": 245, "16808": 245, "16810": 245, "16812": 245, "16814": 245, "16816": 245, "16818": 245, "16820": 245, "16822": 245, "16824": 245, "16826": 245, "16828": 245, "16830": 245, "16832": 245, "16834": 245, "16836": 245, "16838": 245, "16840": 245, "16842": 245, "16844": 245, "16846": 245, "16848": 245, "16850": 245, "16852": 245, "16854": 245, "16856": 245, "16858": 245, "16860": 245, "16862": 245, "16864": 245, "16866": 245, "16868": 245, "16870": 245, "16872": 245, "16874": 245, "16876": 245, "16878": 245, "16880": 245, "16882": 245, "16884": 245, "16886": 245, "16888": 245, "16890": 245, "16892": 245, "16894": 245, "16896": 245, "16898": 245, "16900": 245, "16902": 245, "16904": 245, "16906": 245, "16908": 245, "16910": 245, "16912": 245, "16914": 245, "16916": 245, "16918": 245, "16920": 245, "16922": 245, "16924": 245, "16926": 245, "16928": 245, "16930": 245, "16932": 245, "16934": 245, "16936": 245, "16938": 245, "16940": 245, "16942": 245, "16944": 245, "16946": 245, "16948": 245, "16950": 245, "16952": 245, "16954": 245, "16956": 245, "16958": 245, "16960": 245, "16962": 245, "16964": 245, "16966": 245, "16968": 245, "16970": 245, "16972": 245, "16974": 245, "16976": 245, "16978": 245, "16980": 245, "16982": 245, "16984": 245, "16986": 245, "16988": 245, "16990": 245, "16992": 245, "16994": 245, "16996": 245, "16998": 245, "17000": 245, "17002": 245, "17004": 245, "17006": 245, "17008": 245, "17010": 245, "17012": 245, "17014": 245, "17016": 245, "17018": 245, "17020": 245, "17022": 245, "17024": 245, "17026": 245, "17028": 245, "17030": 245, "17032": 245, "17034": 245, "17036": 245, "17038": 245, "17040": 245, "17042": 245, "17044": 245, "17046": 245, "17048": 245, "17050": 245, "17052": 245, "17054": 245, "17056": 245, "17058": 245, "17060": 245, "17062": 245, "17064": 245, "17066": 245, "17068": 245, "17070": 245, "17072": 245, "17074": 245, "17076": 245, "17078": 245, "17080": 245, "17082": 245, "17084": 245, "17086": 245, "17088": 245, "17090": 245, "17092": 245, "17094": 245, "17096": 245, "17098": 245, "17100": 245, "17102": 245, "17104": 245, "17106": 245, "17108": 245, "17110": 245, "17112": 245, "17114": 245, "17116": 245, "17118": 245, "17120": 245, "17122": 245, "17124": 245, "17126": [245, 294], "17128": 245, "17130": 245, "17132": 245, "17134": 245, "17136": 245, "17138": 245, "17140": 245, "17142": 245, "17144": 245, "17146": 245, "17148": 245, "17150": 245, "17152": 245, "17154": 245, "17156": 245, "17158": 245, "17160": 245, "17162": 245, "17164": 245, "17166": 245, "17168": 245, "17170": 245, "17172": 245, "17174": 245, "17176": 245, "17178": 245, "17180": 245, "17182": 245, "17184": 245, "17186": 245, "17188": 245, "17190": 245, "17192": 245, "17194": 245, "17196": 245, "17198": 245, "17200": 245, "17202": 245, "17204": 245, "17206": 245, "17208": 245, "17210": 245, "17212": 245, "17214": 245, "17216": 245, "17218": 245, "17220": 245, "17222": 245, "17224": 245, "17226": 245, "17228": 245, "17230": 245, "17232": 245, "17234": 245, "17236": 245, "17238": 245, "17240": 245, "17242": 245, "17244": 245, "17246": 245, "17248": 245, "17250": 245, "17252": 245, "17254": 245, "17256": 245, "17258": 245, "17260": 245, "17262": 245, "17264": 245, "17266": 245, "17268": 245, "17270": 245, "17272": 245, "17274": 245, "17276": 245, "17278": 245, "17280": 245, "17282": 245, "17284": 245, "17286": 245, "17288": 245, "17290": 245, "17292": 245, "17294": 245, "17296": 245, "17298": 245, "17300": 245, "17302": 245, "17304": 245, "17306": 245, "17308": 245, "17310": 245, "17312": 245, "17314": 245, "17316": 245, "17318": 245, "17320": 245, "17322": 245, "17324": 245, "17326": 245, "17328": 245, "17330": 245, "17332": 245, "17334": 245, "17336": 245, "17338": 245, "17340": 245, "17342": 245, "17344": 245, "17346": 245, "17348": 245, "17350": 245, "17352": 245, "17354": 245, "17356": 245, "17358": 245, "17360": 245, "17362": 245, "17364": 245, "17366": 245, "17368": 245, "17370": 245, "17372": 245, "17374": 245, "17376": 245, "17378": 245, "17380": 245, "17382": 245, "17384": 245, "17386": 245, "17388": 245, "17390": 245, "17392": 245, "17394": 245, "17396": 245, "17398": 245, "17400": 245, "17402": 245, "17404": 245, "17406": 245, "17408": 245, "17410": 245, "17412": 245, "17414": 245, "17416": 245, "17418": 245, "17420": 245, "17422": 245, "17424": 245, "17426": 245, "17428": 245, "17430": 245, "17432": 245, "17434": 245, "17436": 245, "17438": 245, "17440": 245, "17442": 245, "17444": 245, "17446": 245, "17448": 245, "17450": 245, "17452": 245, "17454": 245, "17456": 245, "17458": 245, "17460": 245, "17462": 245, "17464": 245, "17466": 245, "17468": 245, "17470": 245, "17472": 245, "17474": 245, "17476": 245, "17478": 245, "17480": 245, "17482": 245, "17484": 245, "17486": 245, "17488": 245, "17490": 245, "17492": 245, "17494": 245, "17496": 245, "17498": 245, "17500": 245, "17502": 245, "17504": 245, "17506": 245, "17508": 245, "17510": 245, "17512": 245, "17514": 245, "17516": 245, "17518": 245, "17520": 245, "17522": 245, "17524": 245, "17526": 245, "17528": 245, "17530": 245, "17532": 245, "17534": 245, "17536": 245, "17538": 245, "17540": 245, "17542": 245, "17544": 245, "17546": 245, "17548": 245, "17550": 245, "17552": 245, "17554": 245, "17556": 245, "17558": 245, "17560": 245, "17562": 245, "17564": 245, "17566": 245, "17568": 245, "17570": 245, "17572": 245, "17574": 245, "17576": 245, "17578": 245, "17580": 245, "17582": 245, "17584": 245, "17586": 245, "17588": 245, "17590": 245, "17592": 245, "17594": 245, "17596": 245, "17598": 245, "17600": 245, "17602": 245, "17604": 245, "17606": 245, "17608": 245, "17610": 245, "17612": 245, "17614": 245, "17616": 245, "17618": 245, "17620": 245, "17622": 245, "17624": 245, "17626": 245, "17628": 245, "17630": 245, "17632": 245, "17634": 245, "17636": 245, "17638": 245, "17640": 245, "17642": 245, "17644": 245, "17646": 245, "17648": 245, "17650": 245, "17652": 245, "17654": 245, "17656": 245, "17658": 245, "17660": 245, "17662": 245, "17664": 245, "17666": 245, "17668": 245, "17670": 245, "17672": 245, "17674": 245, "17676": 245, "17678": 245, "17680": 245, "17682": 245, "17684": 245, "17686": 245, "17688": 245, "17690": 245, "17692": 245, "17694": 245, "17696": 245, "17698": 245, "17700": 245, "17702": 245, "17704": 245, "17706": 245, "17708": 245, "17710": 245, "17712": 245, "17714": 245, "17716": 245, "17718": 245, "17720": 245, "17722": 245, "17724": 245, "17726": 245, "17728": 245, "17730": 245, "17732": 245, "17734": 245, "17736": 245, "17738": 245, "17740": 245, "17742": 245, "17744": 245, "17746": 245, "17748": 245, "17750": 245, "17752": 245, "17754": 245, "17756": 245, "17758": 245, "17760": 245, "17762": 245, "17764": 245, "17766": 245, "17768": 245, "17770": 245, "17772": 245, "17774": 245, "17776": 245, "17778": 245, "17780": 245, "17782": 245, "17784": 245, "17786": 245, "17788": 245, "17790": 245, "17792": 245, "17794": 245, "17796": 245, "17798": 245, "17800": 245, "17802": 245, "17804": 245, "17806": 245, "17808": 245, "17810": 245, "17812": 245, "17814": 245, "17816": 245, "17818": 245, "17820": 245, "17822": 245, "17824": 245, "17826": 245, "17828": 245, "17830": 245, "17832": 245, "17834": 245, "17836": 245, "17838": 245, "17840": 245, "17842": 245, "17844": 245, "17846": 245, "17848": 245, "17850": 245, "17852": 245, "17854": 245, "17856": 245, "17858": 245, "17860": 245, "17862": 245, "17864": 245, "17866": 245, "17868": 245, "17870": 245, "17872": 245, "17874": 245, "17876": 245, "17878": 245, "17880": 245, "17882": 245, "17884": 245, "17886": 245, "17888": 245, "17890": 245, "17892": 245, "17894": 245, "17896": 245, "17898": 245, "17900": 245, "17902": 245, "17904": 245, "17906": 245, "17908": 245, "17910": 245, "17912": 245, "17914": 245, "17916": 245, "17918": 245, "17920": 245, "17922": 245, "17924": 245, "17926": 245, "17928": 245, "17930": 245, "17932": 245, "17934": 245, "17936": 245, "17938": 245, "17940": 245, "17942": 245, "17944": 245, "17946": 245, "17948": 245, "17950": 245, "17952": 245, "17954": 245, "17956": 245, "17958": 245, "17960": 245, "17962": 245, "17964": 245, "17966": 245, "17968": 245, "17970": 245, "17972": 245, "17974": 245, "17976": 245, "17978": 245, "17980": 245, "17982": 245, "17984": 245, "17986": 245, "17988": 245, "17990": 245, "17992": 245, "17994": 245, "17996": 245, "17998": 245, "18000": [245, 939], "18002": 245, "18004": 245, "18006": 245, "18008": 245, "18010": 245, "18012": 245, "18014": 245, "18016": 245, "18018": 245, "18020": 245, "18022": 245, "18024": 245, "18026": 245, "18028": 245, "18030": 245, "18032": 245, "18034": 245, "18036": 245, "18038": 245, "18040": 245, "18042": 245, "18044": 245, "18046": 245, "18048": 245, "18050": 245, "18052": 245, "18054": 245, "18056": 245, "18058": 245, "18060": 245, "18062": 245, "18064": 245, "18066": 245, "18068": 245, "18070": 245, "18072": 245, "18074": 245, "18076": 245, "18078": 245, "18080": 245, "18082": 245, "18084": 245, "18086": 245, "18088": 245, "18090": 245, "18092": 245, "18094": 245, "18096": 245, "18098": 245, "18100": 245, "18102": 245, "18104": 245, "18106": 245, "18108": 245, "18110": 245, "18112": 245, "18114": 245, "18116": 245, "18118": 245, "18120": 245, "18122": 245, "18124": 245, "18126": 245, "18128": 245, "18130": 245, "18132": 245, "18134": 245, "18136": 245, "18138": 245, "18140": 245, "18142": 245, "18144": 245, "18146": 245, "18148": 245, "18150": 245, "18152": 245, "18154": 245, "18156": 245, "18158": 245, "18160": 245, "18162": 245, "18164": 245, "18166": 245, "18168": 245, "18170": 245, "18172": 245, "18174": 245, "18176": 245, "18178": 245, "18180": 245, "18182": 245, "18184": 245, "18186": 245, "18188": 245, "18190": 245, "18192": 245, "18194": 245, "18196": 245, "18198": 245, "18200": 245, "18202": 245, "18204": 245, "18206": 245, "18208": 245, "18210": 245, "18212": 245, "18214": 245, "18216": 245, "18218": 245, "18220": 245, "18222": 245, "18224": 245, "18226": 245, "18228": 245, "18230": 245, "18232": 245, "18234": 245, "18236": 245, "18238": 245, "18240": 245, "18242": 245, "18244": 245, "18246": 245, "18248": 245, "18250": 245, "18252": 245, "18254": 245, "18256": 245, "18258": 245, "18260": 245, "18262": 245, "18264": 245, "18266": 245, "18268": 245, "18270": 245, "18272": 245, "18274": 245, "18276": 245, "18278": 245, "18280": 245, "18282": 245, "18284": 245, "18286": 245, "18288": 245, "18290": 245, "18292": 245, "18294": 245, "18296": 245, "18298": 245, "18300": 245, "18302": 245, "18304": 245, "18306": 245, "18308": 245, "18310": 245, "18312": 245, "18314": 245, "18316": 245, "18318": 245, "18320": 245, "18322": 245, "18324": 245, "18326": 245, "18328": 245, "18330": 245, "18332": 245, "18334": 245, "18336": 245, "18338": 245, "18340": 245, "18342": 245, "18344": 245, "18346": 245, "18348": 245, "18350": 245, "18352": 245, "18354": 245, "18356": 245, "18358": 245, "18360": 245, "18362": 245, "18364": 245, "18366": 245, "18368": 245, "18370": 245, "18372": 245, "18374": 245, "18376": 245, "18378": 245, "18380": 245, "18382": 245, "18384": [245, 1007], "18386": 245, "18388": 245, "18390": 245, "18392": 245, "18394": 245, "18396": 245, "18398": 245, "18400": 245, "18402": 245, "18404": 245, "18406": 245, "18408": 245, "18410": 245, "18412": 245, "18414": 245, "18416": 245, "18418": 245, "18420": 245, "18422": 245, "18424": 245, "18426": 245, "18428": 245, "18430": 245, "18432": 245, "18434": 245, "18436": 245, "18438": 245, "18440": 245, "18442": 245, "18444": 245, "18446": 245, "18448": 245, "18450": 245, "18452": 245, "18454": 245, "18456": 245, "18458": 245, "18460": 245, "18462": 245, "18464": 245, "18466": 245, "18468": 245, "18470": 245, "18472": 245, "18474": 245, "18476": 245, "18478": 245, "18480": 245, "18482": 245, "18484": 245, "18486": 245, "18488": 245, "18490": 245, "18492": 245, "18494": 245, "18496": 245, "18498": 245, "18500": 245, "18502": 245, "18504": 245, "18506": 245, "18508": 245, "18510": 245, "18512": 245, "18514": 245, "18516": 245, "18518": 245, "18520": 245, "18522": 245, "18524": 245, "18526": 245, "18528": 245, "18530": 245, "18532": 245, "18534": 245, "18536": 245, "18538": 245, "18540": 245, "18542": 245, "18544": 245, "18546": 245, "18548": 245, "18550": 245, "18552": 245, "18554": 245, "18556": 245, "18558": 245, "18560": 245, "18562": 245, "18564": 245, "18566": 245, "18568": 245, "18570": 245, "18572": 245, "18574": 245, "18576": 245, "18578": 245, "18580": 245, "18582": 245, "18584": 245, "18586": 245, "18588": 245, "18590": 245, "18592": 245, "18594": 245, "18596": 245, "18598": 245, "18600": 245, "18602": 245, "18604": 245, "18606": 245, "18608": 245, "18610": 245, "18612": 245, "18614": 245, "18616": 245, "18618": 245, "18620": 245, "18622": 245, "18624": 245, "18626": 245, "18628": 245, "18630": 245, "18632": 245, "18634": 245, "18636": 245, "18638": 245, "18640": 245, "18642": 245, "18644": 245, "18646": 245, "18648": 245, "18650": 245, "18652": 245, "18654": 245, "18656": 245, "18658": 245, "18660": 245, "18662": 245, "18664": 245, "18666": 245, "18668": 245, "18670": 245, "18672": 245, "18674": 245, "18676": 245, "18678": 245, "18680": 245, "18682": 245, "18684": 245, "18686": 245, "18688": 245, "18690": 245, "18692": 245, "18694": 245, "18696": 245, "18698": 245, "18700": 245, "18702": 245, "18704": 245, "18706": 245, "18708": 245, "18710": 245, "18712": 245, "18714": 245, "18716": 245, "18718": 245, "18720": 245, "18722": 245, "18724": 245, "18726": 245, "18728": 245, "18730": 245, "18732": 245, "18734": 245, "18736": 245, "18738": 245, "18740": 245, "18742": 245, "18744": 245, "18746": 245, "18748": 245, "18750": 245, "18752": 245, "18754": 245, "18756": 245, "18758": 245, "18760": 245, "18762": 245, "18764": 245, "18766": 245, "18768": 245, "18770": 245, "18772": 245, "18774": 245, "18776": 245, "18778": 245, "18780": 245, "18782": 245, "18784": 245, "18786": 245, "18788": 245, "18790": 245, "18792": 245, "18794": 245, "18796": 245, "18798": 245, "18800": 245, "18802": 245, "18804": 245, "18806": 245, "18808": 245, "18810": 245, "18812": 245, "18814": 245, "18816": 245, "18818": 245, "18820": 245, "18822": 245, "18824": 245, "18826": 245, "18828": 245, "18830": 245, "18832": 245, "18834": 245, "18836": 245, "18838": 245, "18840": 245, "18842": 245, "18844": 245, "18846": 245, "18848": 245, "18850": 245, "18852": 245, "18854": 245, "18856": 245, "18858": 245, "18860": 245, "18862": 245, "18864": 245, "18866": 245, "18868": 245, "18870": 245, "18872": 245, "18874": 245, "18876": 245, "18878": 245, "18880": 245, "18882": 245, "18884": 245, "18886": 245, "18888": 245, "18890": 245, "18892": 245, "18894": 245, "18896": 245, "18898": 245, "18900": 245, "18902": 245, "18904": 245, "18906": 245, "18908": 245, "18910": 245, "18912": 245, "18914": 245, "18916": 245, "18918": 245, "18920": 245, "18922": 245, "18924": 245, "18926": 245, "18928": 245, "18930": 245, "18932": 245, "18934": 245, "18936": 245, "18938": 245, "18940": 245, "18942": 245, "18944": 245, "18946": 245, "18948": 245, "18950": 245, "18952": 245, "18954": 245, "18956": 245, "18958": 245, "18960": 245, "18962": 245, "18964": 245, "18966": 245, "18968": 245, "18970": 245, "18972": 245, "18974": 245, "18976": 245, "18978": 245, "18980": 245, "18982": 245, "18984": 245, "18986": 245, "18988": 245, "18990": 245, "18992": 245, "18994": 245, "18996": 245, "18998": 245, "19000": 245, "19002": 245, "19004": 245, "19006": 245, "19008": 245, "19010": 245, "19012": 245, "19014": 245, "19016": 245, "19018": 245, "19020": 245, "19022": 245, "19024": 245, "19026": 245, "19028": 245, "19030": 245, "19032": 245, "19034": 245, "19036": 245, "19038": 245, "19040": 245, "19042": 245, "19044": 245, "19046": 245, "19048": 245, "19050": 245, "19052": 245, "19054": 245, "19056": 245, "19058": 245, "19060": 245, "19062": 245, "19064": 245, "19066": 245, "19068": 245, "19070": 245, "19072": 245, "19074": 245, "19076": 245, "19078": 245, "19080": 245, "19082": 245, "19084": 245, "19086": 245, "19088": 245, "19090": 245, "19092": 245, "19094": 245, "19096": 245, "19098": 245, "19100": 245, "19102": 245, "19104": 245, "19106": 245, "19108": 245, "19110": 245, "19112": 245, "19114": 245, "19116": 245, "19118": 245, "19120": 245, "19122": 245, "19124": 245, "19126": 245, "19128": 245, "19130": 245, "19132": 245, "19134": 245, "19136": 245, "19138": 245, "19140": 245, "19142": 245, "19144": 245, "19146": 245, "19148": 245, "19150": 245, "19152": 245, "19154": 245, "19156": 245, "19158": 245, "19160": 245, "19162": 245, "19164": 245, "19166": 245, "19168": 245, "19170": 245, "19172": 245, "19174": 245, "19176": 245, "19178": 245, "19180": 245, "19182": 245, "19184": 245, "19186": 245, "19188": 245, "19190": 245, "19192": 245, "19194": 245, "19196": 245, "19198": 245, "19200": 245, "19202": 245, "19204": 245, "19206": 245, "19208": 245, "19210": 245, "19212": 245, "19214": 245, "19216": 245, "19218": 245, "19220": 245, "19222": 245, "19224": 245, "19226": 245, "19228": 245, "19230": 245, "19232": 245, "19234": 245, "19236": 245, "19238": 245, "19240": 245, "19242": 245, "19244": 245, "19246": 245, "19248": 245, "19250": 245, "19252": 245, "19254": 245, "19256": 245, "19258": 245, "19260": 245, "19262": 245, "19264": 245, "19266": 245, "19268": 245, "19270": 245, "19272": 245, "19274": 245, "19276": 245, "19278": 245, "19280": 245, "19282": 245, "19284": 245, "19286": 245, "19288": 245, "19290": 245, "19292": 245, "19294": 245, "19296": 245, "19298": 245, "19300": 245, "19302": 245, "19304": 245, "19306": 245, "19308": 245, "19310": 245, "19312": 245, "19314": 245, "19316": 245, "19318": 245, "19320": 245, "19322": 245, "19324": 245, "19326": 245, "19328": 245, "19330": 245, "19332": 245, "19334": 245, "19336": 245, "19338": 245, "19340": 245, "19342": 245, "19344": 245, "19346": 245, "19348": 245, "19350": 245, "19352": 245, "19354": 245, "19356": 245, "19358": 245, "19360": 245, "19362": 245, "19364": 245, "19366": 245, "19368": 245, "19370": 245, "19372": 245, "19374": 245, "19376": 245, "19378": 245, "19380": 245, "19382": 245, "19384": 245, "19386": 245, "19388": 245, "19390": 245, "19392": 245, "19394": 245, "19396": 245, "19398": 245, "19400": 245, "19402": 245, "19404": 245, "19406": 245, "19408": 245, "19410": 245, "19412": 245, "19414": 245, "19416": 245, "19418": 245, "19420": 245, "19422": 245, "19424": 245, "19426": 245, "19428": 245, "19430": 245, "19432": 245, "19434": 245, "19436": 245, "19438": 245, "19440": 245, "19442": 245, "19444": 245, "19446": 245, "19448": 245, "19450": 245, "19452": 245, "19454": 245, "19456": 245, "19458": 245, "19460": 245, "19462": 245, "19464": 245, "19466": 245, "19468": 245, "19470": 245, "19472": 245, "19474": 245, "19476": 245, "19478": 245, "19480": 245, "19482": 245, "19484": 245, "19486": 245, "19488": 245, "19490": 245, "19492": 245, "19494": 245, "19496": 245, "19498": 245, "19500": 245, "19502": 245, "19504": 245, "19506": 245, "19508": 245, "19510": 245, "19512": 245, "19514": 245, "19516": 245, "19518": 245, "19520": 245, "19522": 245, "19524": 245, "19526": 245, "19528": 245, "19530": 245, "19532": 245, "19534": 245, "19536": 245, "19538": 245, "19540": 245, "19542": 245, "19544": 245, "19546": 245, "19548": 245, "19550": 245, "19552": 245, "19554": 245, "19556": 245, "19558": 245, "19560": 245, "19562": 245, "19564": 245, "19566": 245, "19568": 245, "19570": 245, "19572": 245, "19574": 245, "19576": 245, "19578": 245, "19580": 245, "19582": 245, "19584": 245, "19586": 245, "19588": 245, "19590": 245, "19592": 245, "19594": 245, "19596": 245, "19598": 245, "19600": 245, "19602": 245, "19604": 245, "19606": 245, "19608": 245, "19610": 245, "19612": 245, "19614": 245, "19616": 245, "19618": 245, "19620": 245, "19622": 245, "19624": 245, "19626": 245, "19628": 245, "19630": 245, "19632": 245, "19634": 245, "19636": 245, "19638": 245, "19640": 245, "19642": 245, "19644": 245, "19646": 245, "19648": 245, "19650": 245, "19652": 245, "19654": 245, "19656": 245, "19658": 245, "19660": 245, "19662": 245, "19664": 245, "19666": 245, "19668": 245, "19670": 245, "19672": 245, "19674": 245, "19676": 245, "19678": 245, "19680": 245, "19682": 245, "19684": 245, "19686": 245, "19688": 245, "19690": 245, "19692": 245, "19694": 245, "19696": 245, "19698": 245, "19700": 245, "19702": 245, "19704": 245, "19706": 245, "19708": 245, "19710": 245, "19712": 245, "19714": 245, "19716": 245, "19718": 245, "19720": 245, "19722": 245, "19724": 245, "19726": 245, "19728": 245, "19730": 245, "19732": 245, "19734": 245, "19736": 245, "19738": 245, "19740": 245, "19742": 245, "19744": 245, "19746": 245, "19748": 245, "19750": 245, "19752": 245, "19754": 245, "19756": 245, "19758": 245, "19760": 245, "19762": 245, "19764": 245, "19766": 245, "19768": 245, "19770": 245, "19772": 245, "19774": 245, "19776": 245, "19778": 245, "19780": 245, "19782": 245, "19784": 245, "19786": 245, "19788": 245, "19790": 245, "19792": 245, "19794": 245, "19796": 245, "19798": 245, "19800": 245, "19802": 245, "19804": 245, "19806": 245, "19808": 245, "19810": 245, "19812": 245, "19814": 245, "19816": 245, "19818": 245, "19820": 245, "19822": 245, "19824": 245, "19826": 245, "19828": 245, "19830": 245, "19832": 245, "19834": 245, "19836": 245, "19838": 245, "19840": 245, "19842": 245, "19844": 245, "19846": 245, "19848": 245, "19850": 245, "19852": 245, "19854": 245, "19856": 245, "19858": 245, "19860": 245, "19862": 245, "19864": 245, "19866": 245, "19868": 245, "19870": 245, "19872": 245, "19874": 245, "19876": 245, "19878": 245, "19880": 245, "19882": 245, "19884": 245, "19886": 245, "19888": 245, "19890": 245, "19892": 245, "19894": 245, "19896": 245, "19898": 245, "19900": 245, "19902": 245, "19904": 245, "19906": 245, "19908": 245, "19910": 245, "19912": 245, "19914": 245, "19916": 245, "19918": 245, "19920": 245, "19922": 245, "19924": 245, "19926": 245, "19928": 245, "19930": 245, "19932": 245, "19934": 245, "19936": 245, "19938": 245, "19940": 245, "19942": 245, "19944": 245, "19946": 245, "19948": 245, "19950": 245, "19952": 245, "19954": 245, "19956": 245, "19958": 245, "19960": 245, "19962": 245, "19964": 245, "19966": 245, "19968": 245, "19970": 245, "19972": 245, "19974": 245, "19976": 245, "19978": 245, "19980": 245, "19982": 245, "19984": 245, "19986": 245, "19988": 245, "19990": 245, "19992": 245, "19994": 245, "19996": 245, "19998": 245, "l_to_send": 245, "json_to_send": 245, "json_receiv": 245, "l_receiv": 245, "sine": [245, 286, 303], "140106668681968": 245, "wallclock_axi": 245, "1638538131": 245, "1975703": 245, "2978473": 245, "3981225": 245, "498449": 245, "5987027": 245, "698947": 245, "7996597": 245, "899947": 245, "1638538132": 245, "0001943": 245, "1010473": 245, "0b10110": 245, "0x16": [245, 823], "0b1011": [245, 280], "bit_3": 245, "0b00001": 245, "0b1": [245, 262, 332], "0b1000": [245, 262], "0b11110": 245, "bitwis": [245, 417, 450, 959, 963, 1050], "num1": [245, 262], "0b110101101": 245, "num2": [245, 262], "0b101110100": 245, "0b100100100": 245, "0b111111101": 245, "0b1010": 245, "0b10100": [245, 262], "1fuzzi2fuzzi3fuzzi4": 245, "0b11011001": 245, "abcdef": [245, 252, 258, 262], "cde": 245, "lexic": [245, 477, 784], "indexerror": [245, 262, 265, 283, 322, 344, 348, 365, 1030, 1083, 1152], "auer": 245, "aue": 245, "zerodivisionerror": [245, 258, 283, 1030], "lst1": 245, "lst2": 245, "toc": 246, "treeset": 246, "searchabl": [246, 249], "diesel": 246, "vibrat": 246, "lighter": 246, "sensorrandom": 246, "sensorsin": 246, "sensorconst": 246, "wild": [246, 248, 253, 288], "yesterai": 246, "deseri": [246, 258], "decod": [246, 258, 265, 268, 304, 310, 321, 324, 326, 332, 338, 1081, 1127], "swallow": [246, 864, 1030], "walkthrough": [246, 248, 253, 1199], "1h": 246, "exchangeformat": 246, "test_mqtt_format": 246, "parser": [246, 258, 312, 328, 376, 704, 1083, 1186], "mosquitto_sub": [246, 1147], "writer": [246, 792, 877], "deserializeerror": 246, "dangl": [246, 420, 591, 605], "fahrenheit": [248, 388, 390, 403, 418, 427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 491, 692, 730, 783, 785, 786], "nonconst": [248, 603], "getchar": [248, 394, 396, 401, 410], "dry": 248, "verif": [248, 1136], "umlaut": [248, 249, 350, 1062, 1144], "\u00f6": [248, 268, 1144], "canari": 248, "asid": [248, 428, 429, 441, 703, 992], "brainfuck": 248, "nok": [248, 740, 986], "singli": [248, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "typedef": [248, 444, 447, 451, 460, 464, 469, 470, 690, 692, 730, 738, 754, 783, 785, 786, 853, 1001], "commonplac": [248, 1189], "boundari": [248, 258, 304, 450, 764, 931], "neighborhood": 248, "signed": [248, 404, 453], "unsigned": 248, "excurs": [248, 494, 1130], "pointerarith": 248, "lower_bound": [248, 295, 334, 630, 635, 654, 658, 687, 786], "for_each": [248, 295, 635, 654, 658, 687, 738, 786], "diagram": [248, 494, 512, 514, 846, 930, 937, 939], "search_by_lastnam": [248, 683, 684, 685], "const_iter": [248, 585, 629, 632, 633, 634, 636, 651, 690, 705, 738, 739], "calloper": [248, 568], "exc": [248, 568], "ostream": [248, 568, 594, 754, 784, 1171], "paint": [248, 673, 687, 786], "reverse_copi": [248, 295, 568, 635, 654, 658, 687, 786], "cin": [248, 637, 655, 657, 673, 687, 786], "accumul": [248, 568], "raci": [248, 568], "wsl2": [248, 275, 277, 295, 297, 372], "libsqlite3": [248, 478], "libboost": 248, "libgtk": 248, "prosaic": 248, "roman": 248, "mad": [248, 452], "wxwidget": 248, "lieb": [249, 310, 326], "gr\u00fc\u00dfe": [249, 310, 326], "utf8": 249, "distil": [249, 309, 339, 347, 351, 1028, 1100], "4j": 250, "unlimit": [250, 870, 1062], "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000": [250, 283, 300, 304, 322, 344, 360], "0xdeadbeef": [250, 252, 258, 304, 310, 360, 549], "3735928559": [250, 252, 258, 262, 304, 310, 360], "0b10010011": 250, "ippi": 250, "0b0101": 250, "0101": 250, "teifl": [250, 338], "fun1": 250, "fun2": 250, "nsecond": [250, 1075], "rline": 250, "carriag": [250, 407, 1075], "linet": 250, "neuer": 250, "ordner": 250, "euer": 250, "syntaxwarn": [250, 283, 1030], "ipykernel_258993": 250, "837361033": 250, "regex_str": [250, 268], "calim": 250, "yaaai": 250, "needl": [250, 348, 1069, 1077], "haystack": [250, 348, 1069, 1077], "finit": [250, 299, 422, 922], "haystack_s": 250, "0x7fe78c576ee0": 250, "list_iter": [250, 268, 322, 332, 338, 348], "0x7fe78c577910": 250, "unicode_code_point": 250, "l_new": 250, "ijk": 250, "mengenlehr": 250, "s1": [250, 258, 262, 265, 268, 283, 290, 300, 310, 322, 332, 338, 348, 494, 511, 541, 600, 694, 700, 748, 770, 772, 774, 776, 1080], "s2": [250, 258, 262, 265, 268, 283, 290, 300, 310, 322, 332, 338, 348, 494, 511, 541, 600, 694, 700, 748, 770, 772, 774, 1080], "gunnar": 250, "liam": 250, "maximumum": 250, "variable2": 250, "maximum2": 250, "mrmr": 250, "einser": 250, "square_numb": [250, 1078], "squares_gener": 250, "other_d": [250, 283], "nove": 250, "isspac": [250, 252, 255, 258, 283, 304, 332, 338, 1077], "buchhaltung": [250, 893, 915, 916], "startswith": [250, 258, 287, 288, 290, 304, 344, 474, 1077, 1150], "buch": [250, 1181], "oooo": 250, "isupp": [250, 258, 268, 304, 338, 344, 348, 1077], "zz": 250, "traurig": 250, "substr": [250, 252, 258, 268, 283, 290, 304, 322, 326, 332, 338, 344, 348, 1171], "gid": [250, 258, 326, 344, 784, 860, 861, 868, 870, 878, 950, 965, 1109], "count_byt": 250, "nbyte": 250, "miscellanea": [251, 953], "brace": [251, 258, 304, 394, 417, 420, 432, 492, 585, 594, 626, 628, 633, 646, 647, 690, 730, 739, 783, 785, 786, 1059, 1062], "hour_of_dai": 251, "ein_str": 252, "ein_anderer_str": 252, "fghjgfgh": 252, "dfghgfgh": 252, "do_someth": [252, 271, 360, 423, 425, 433, 448, 462, 747, 1059], "komplett": [252, 338], "returnwert": [252, 1181], "sinnloser": 252, "weis": [252, 1202], "vorgenommen": 252, "obacht": 252, "140672599989840": 252, "140672464974720": 252, "hoechst": [252, 290], "rechnern": 252, "100000": [252, 268, 703, 938, 1136], "": [252, 268], "exponenti": [252, 1062, 1076], "__annotations__": [252, 262, 283, 304, 318, 1031], "__closure__": [252, 262, 283, 304], "__code__": [252, 262, 283, 304], "__delattr__": [252, 255, 258, 262, 280, 283, 304, 322, 344], "__dir__": [252, 255, 262, 280, 283, 304, 322, 344], "__format__": [252, 255, 258, 262, 280, 283, 304, 322, 344], "__ge__": [252, 255, 258, 262, 280, 283, 304, 322, 344, 1050], "__get__": [252, 262, 283, 304], "__getattribute__": [252, 255, 258, 262, 280, 283, 304, 322, 344], "__globals__": [252, 262, 283, 304], "__gt__": [252, 255, 258, 262, 280, 283, 304, 322, 344], "__hash__": [252, 255, 258, 262, 280, 283, 304, 322, 332, 344], "__init_subclass__": [252, 255, 262, 280, 283, 304, 322, 344], "__kwdefaults__": [252, 262, 283, 304], "__ne__": [252, 255, 258, 262, 280, 283, 304, 322, 344, 1050], "__new__": [252, 255, 258, 262, 280, 283, 304, 322, 344], "__qualname__": [252, 262, 283, 304], "__reduce__": [252, 255, 258, 262, 280, 283, 304, 322, 344], "__reduce_ex__": [252, 255, 262, 280, 283, 304, 322, 344], "__setattr__": [252, 255, 258, 262, 280, 283, 304, 322, 344], "__sizeof__": [252, 255, 258, 262, 280, 283, 304, 322, 344], "__subclasshook__": [252, 255, 262, 280, 283, 304, 322, 344], "karteikart": 252, "my_formatted_person": 252, "123425041997": 252, "caros_str": 252, "joergs_str": 252, "0x7ff0dc48b490": 252, "next_po": 252, "tim": [252, 262, 356, 357], "ugli": [252, 262, 276, 285, 286, 299, 306, 307, 389, 394, 568, 786, 858, 863, 888, 889, 929, 1028, 1029], "flat": [252, 262, 441, 467, 468, 1000, 1001], "puriti": [252, 262], "silenc": [252, 262, 433, 876], "ambigu": [252, 262, 420, 455, 456, 457, 604, 704, 893], "refus": [252, 262, 271, 484, 806, 859, 930, 946, 1005], "temptat": [252, 262], "dutch": [252, 262], "honk": [252, 262], "wahr": 252, "falsch": [252, 265, 1188], "kriegt": 252, "nachkommastellen": 252, "moeglichkeit": 252, "f_str": 252, "punkt_po": 252, "nachkomma_str": 252, "praezedenz": 252, "wandel": 252, "vorn": 252, "anhaengen": 252, "wuenschen": 252, "wuerd": 252, "appendleft": 252, "extendleft": 252, "relem": 252, "popleft": 252, "sorted_l": 252, "sorted_t": 252, "sorted_": 252, "subtext": 252, "ssissippi": 252, "140672464726576": 252, "copied_text": 252, "140672464784832": 252, "140672464784064": 252, "140672599989872": 252, "140672464751872": 252, "140672464768512": 252, "140672464594880": 252, "jkl": 252, "suesser": [252, 258, 265, 268, 271, 287], "sechser_gewuerfelt": 252, "n_tri": [252, 255, 290, 332, 338, 344, 348, 1066], "versag": [252, 290], "eva": [252, 304, 348, 1069], "xrang": [252, 1070], "0x7ff0dc48bed0": 252, "hann": 252, "gruess": 252, "gott": [252, 283, 383], "fill_in_us": 252, "scho": 252, "my_db": 252, "uniq_dict": 252, "konfigurierbaren": 252, "startwert": 252, "ausgibt": 252, "sqnum": 252, "0x7ff014b01820": 252, "xslx": 252, "yz": 252, "lret": 252, "ochwa": 252, "unbalanc": 253, "geospati": 253, "gdal": 253, "sweigart": [253, 267, 309, 1131], "datenypen": 254, "libarari": 254, "chainmap": 254, "dequ": [254, 762], "suchalgorithmen": 254, "51139385": 255, "77397a312b47": 255, "50924272": [255, 258], "20210728": [255, 258, 1057], "eine_komplizierte_funkt": 255, "endeffekt": 255, "zusammenzuzaehlen": 255, "tarnt": 255, "vergeblich": 255, "komplexitaet": 255, "zahl_als_str": 255, "bledsinn": 255, "try_no": 255, "blahblahblah": 255, "cxyxyyyyxi": 255, "table_str": 255, "table_dict": 255, "139769175732912": 255, "139769175738624": 255, "satan_str": 255, "satan_int": 255, "result_of_print": 255, "result_of_evald_print": 255, "code_str": [255, 265], "compiled_cod": 255, "woswasi": [255, 262], "0x7f1e91eb42f0": 255, "philipp": [255, 262, 265, 283, 290, 304, 322, 332, 492, 567, 639, 651, 683, 685, 1120, 1122, 1126, 1128, 1148, 1149, 1150, 1152, 1153, 1154, 1155], "lastnma": 255, "0x7f1e8c0fe2e0": 255, "__abs__": [255, 262, 280, 344], "__and__": [255, 262, 322, 344, 1050], "__bool__": [255, 262, 280, 344], "__ceil__": [255, 262, 280, 344], "__divmod__": [255, 262, 280, 344], "__float__": [255, 262, 280, 304, 344], "__floor__": [255, 262, 280, 344], "__floordiv__": [255, 262, 280, 344, 1050], "__getnewargs__": [255, 258, 262, 280, 304, 344], "__index__": [255, 262, 344], "__int__": [255, 262, 280, 304, 321, 344], "__invert__": [255, 262, 344], "__lshift__": [255, 262, 344, 1050], "__mod__": [255, 258, 262, 280, 304, 344, 1050], "__mul__": [255, 258, 262, 280, 304, 344, 1050], "__neg__": [255, 262, 280, 344], "__or__": [255, 262, 322, 344, 1050], "__pos__": [255, 262, 280, 344], "__pow__": [255, 262, 280, 344, 1050], "__rand__": [255, 262, 322, 344], "__rdivmod__": [255, 262, 280, 344], "__rfloordiv__": [255, 262, 280, 344], "__rlshift__": [255, 262, 344], "__rmod__": [255, 258, 262, 280, 304, 344], "__rmul__": [255, 258, 262, 280, 304, 344], "__ror__": [255, 262, 322, 344], "__round__": [255, 262, 280, 344], "__rpow__": [255, 262, 280, 344], "__rrshift__": [255, 262, 344, 1050], "__rshift__": [255, 262, 344, 1050], "__rsub__": [255, 262, 280, 322, 326, 344, 1050], "__rtruediv__": [255, 262, 280, 344], "__rxor__": [255, 262, 322, 344], "__sub__": [255, 262, 280, 322, 326, 344, 1050], "__truediv__": [255, 262, 280, 344, 1050], "__trunc__": [255, 262, 280, 344], "__xor__": [255, 262, 322, 344, 1050], "as_integer_ratio": [255, 262, 280, 344], "bit_length": [255, 262, 344], "conjug": [255, 262, 280, 344], "denomin": [255, 262, 344], "from_byt": [255, 262, 344], "to_byt": [255, 262, 344], "0x7f1e8c0b3130": 255, "int_list": 255, "0x7f1e8c0fe340": 255, "0x7f1e8c0fe760": 255, "u1": 255, "u2": 255, "type_of_us": 255, "scrambl": 255, "hansj\u00f6rg": [255, 474], "gr\u00f6jsnah": 255, "class_str": 255, "1997": [255, 265, 1056, 1120, 1122, 1126, 1128], "0x7f1e8c1c2e50": 255, "joleckmi": 255, "cmdline": 256, "excess": [256, 423], "provocantli": 256, "pybai": [256, 325, 1131], "suchzeit": 257, "everywher": [257, 272, 453, 468, 484, 694, 845, 983, 1069], "d_as_str": 258, "received_d": 258, "1939": 258, "145415": 258, "bytes_or_buff": [258, 304], "expos": [258, 304, 582, 668, 864, 930, 938, 939, 973], "strict": [258, 278, 304, 322, 489, 503, 510, 524, 538, 590, 786, 1080, 1160], "__contains__": [258, 304, 322], "format_spec": [258, 283, 304], "getattr": [258, 262, 283, 304, 1044], "__getitem__": [258, 304, 1152, 1153], "__iter__": [258, 304, 322, 1035], "__len__": [258, 304, 322], "casefold": [258, 304], "caseless": [258, 304], "fillchar": [258, 304], "pad": [258, 304, 1076], "occurr": [258, 304, 397], "codec": [258, 265, 268, 304, 310, 326, 332, 338, 1144], "unicodeencodeerror": [258, 265, 268, 283, 304, 310, 326, 1030, 1144], "xmlcharrefreplac": [258, 304], "register_error": [258, 304], "suffix": [258, 304], "expandtab": [258, 283, 304, 332], "tabsiz": [258, 304], "lowest": [258, 304, 417, 423, 993, 994, 1081], "format_map": [258, 304], "isalnum": [258, 304, 344, 1077], "alphabet": [258, 304, 397, 452, 474, 877, 1144], "isascii": [258, 304], "007f": [258, 304], "isdecim": [258, 304], "iskeyword": [258, 268, 304], "isnumer": [258, 304], "isprint": [258, 304, 397, 425], "printabl": [258, 304, 397, 1030], "istitl": [258, 304], "uncas": [258, 304], "pq": [258, 304], "ljust": [258, 304], "removeprefix": [258, 304], "removesuffix": [258, 304], "rindex": [258, 304, 1077], "rpartit": [258, 304], "discard": [258, 304, 322, 456, 602, 603, 740, 875, 876], "splitlin": [258, 304], "keepend": [258, 304], "swapcas": [258, 304], "titlecas": [258, 304], "lookuperror": [258, 283, 304, 1030], "untouch": [258, 304, 833], "zfill": [258, 304], "maketran": [258, 304], "numerischen": 258, "ecma": 258, "3rd": [258, 792], "interchang": [258, 672, 754, 1144], "marshal": 258, "pickl": [258, 262], "simplejson": 258, "foo": [258, 290, 300, 304, 322, 326, 332, 338, 344, 348, 562, 703, 736, 754, 766, 1030, 1071], "baz": 258, "u1234": 258, "sort_kei": 258, "getvalu": 258, "compact": [258, 423], "mydict": 258, "obj": [258, 283, 326, 338, 530, 801, 802, 811, 1044, 1052, 1152, 1153], "x08ar": 258, "as_complex": 258, "dct": 258, "__complex__": 258, "object_hook": 258, "2j": 258, "parse_float": 258, "encode_complex": 258, "serializ": 258, "1j": 258, "jsonencod": 258, "iterencod": 258, "scanner": 258, "jsondecodeerror": 258, "jsondecod": 258, "msg": [258, 271, 332, 344, 408, 493, 497, 997, 999, 1000, 1004, 1026, 1029, 1030], "unformat": 258, "lineno": [258, 265, 332], "colno": 258, "delattr": [258, 262, 283], "setattr": [258, 262, 283, 1044], "__setstate__": [258, 262], "with_traceback": [258, 262], "tb": [258, 262, 338], "__traceback__": [258, 262], "__cause__": [258, 262], "__context__": [258, 262], "__suppress_context__": [258, 262], "parse_int": 258, "parse_const": 258, "object_pairs_hook": 258, "nan": [258, 290, 1136, 1148], "num_str": 258, "_w": 258, "0x7f99fff1bb70": 258, "raw_decod": 258, "extran": 258, "skipkei": 258, "ensure_ascii": 258, "check_circular": 258, "allow_nan": 258, "recogn": [258, 618, 939, 1187], "sensibl": 258, "circular": 258, "recursionerror": [258, 283, 1030], "compliant": [258, 1043], "item_separ": 258, "key_separ": 258, "_one_shot": 258, "chunk": [258, 365, 453, 827, 965, 1133, 1144], "bigobject": 258, "mysocket": 258, "fp": 258, "inf": 258, "complianc": 258, "ippolito": 258, "redivi": 258, "140299267714496": 258, "140299267930496": 258, "schweissparameter_aussi": 258, "strom_ma": 258, "200004": 258, "spannung_v": 258, "aufs_kabel": 258, "maschine_112": 258, "kabel": [258, 262], "vom_kabel": 258, "schweissparameter_eini": 258, "strom_a": 258, "hal": 258, "2c445fb3": 258, "6ca4": 258, "b9d9": 258, "7cfbbff55326": 258, "doesnt_exist": 258, "_a666": 258, "140299402960464": 258, "0b10000000000000000000000000000000000000000000000000000000000000000": [258, 262, 283, 300, 338, 344, 348], "140299327492352": 258, "func_fals": 258, "func_tru": 258, "sex_opt": 258, "140298898107648": 258, "t_mit_einem_el": 258, "supi": 258, "squares_map": 258, "squares_set": 258, "numtri": 258, "even_numb": [258, 322], "mississppi": 258, "xxxx": 258, "nbin": [258, 265, 290, 304, 326], "ndaemon": [258, 265, 290, 304, 326], "nadm": [258, 265, 290, 304, 326, 338, 344], "nlp": [258, 265, 290, 304, 326, 338, 344], "nsync": [258, 265, 290, 304, 326, 338, 344], "nshutdown": [258, 265, 290, 304, 326, 338, 344], "nhalt": [258, 265, 290, 304, 326, 338, 344], "nmail": [258, 265, 290, 304, 326, 338, 344], "noper": [258, 265, 290, 304, 326, 338, 344], "ngame": [258, 265, 290, 304, 326, 338, 344], "nftp": [258, 265, 290, 304, 326, 338, 344], "nnobodi": [258, 265, 290, 304, 326, 338, 344], "napach": [258, 265, 290, 304, 326, 338, 344], "nsystemd": [258, 265, 290, 304, 326, 338, 344], "ntss": [258, 265, 290, 304, 326, 338, 344], "ndbu": [258, 265, 290, 304, 326, 338, 344], "npolkitd": [258, 265, 290, 304, 326, 338, 344], "navahi": [258, 265, 290, 304, 326, 338, 344], "nunbound": [258, 265, 290, 304, 326, 338, 344], "ndnsmasq": [258, 265, 290, 304, 326, 338, 344], "nnm": [258, 265, 290, 304, 326, 338, 344], "nusbmuxd": [258, 265, 290, 304, 326, 338, 344], "ngluster": [258, 265, 290, 304, 326, 338, 344], "nrtkit": [258, 265, 290, 304, 326, 338, 344], "npipewir": [258, 265, 290, 304, 326, 338, 344], "ngeoclu": [258, 265, 290, 304, 326, 338, 344], "nchroni": [258, 265, 290, 304, 326, 338, 344], "nsaslauth": [258, 265, 290, 304, 326, 338, 344], "nradvd": [258, 265], "nrpc": [258, 265, 290, 304, 326, 338, 344], "nqemu": [258, 265, 290, 304, 326, 338, 344], "nopenvpn": [258, 265, 290, 304, 326, 338, 344], "ncolord": [258, 265, 290, 304, 326, 338, 344, 955], "nrpcuser": [258, 265, 290, 304, 326, 338, 344], "nabrt": [258, 265, 290, 304, 326, 338, 344], "nflatpak": [258, 265, 290, 304, 326, 338, 344], "ngdm": [258, 265, 290, 304, 326, 338, 344], "ngnome": [258, 265, 290, 304, 326, 338, 344], "nvboxadd": [258, 265, 290, 304, 326, 338, 344], "nsshd": [258, 265, 290, 304, 326, 338, 344], "ntcpdump": [258, 265, 290, 304, 326, 338, 344], "njfasch": [258, 265, 290, 304, 326, 338, 344], "nmosquitto": [258, 265, 290, 304, 326, 338], "nsomeon": [258, 265], "1001": [258, 265, 268, 647, 648, 649, 650, 878, 890, 921, 950], "move_to_end": 258, "thermometera": 258, "thermometerb": 258, "get_average_temperatur": 258, "th_list": 258, "ipykernel_9164": 258, "859664274": 258, "2942790015": 258, "0x7fac83797be0": 258, "basisklass": 258, "level2_1": 258, "l21": 258, "level2_2": 258, "level3": 258, "jedi": 258, "blueey": 258, "droid": 258, "r2d2": 258, "derivednoctor": 258, "dnoctor": 258, "derivedctorcallingsup": 258, "derivedctorcallingbasector": 258, "__firstnam": 258, "__lastnam": 258, "_user__firstnam": 258, "_user__lastnam": 258, "lightsab": 258, "padawan": 258, "arithmeticerror": [258, 283, 1030], "waaah": 258, "abgebrannt": 258, "puh": 258, "intakt": 258, "is_even": [258, 262, 332, 338, 707, 708, 709, 710], "0x7fac81f52df0": 258, "0x7fac81cb5700": 258, "progamm": 258, "tumpfback": 258, "och": 258, "umpfback": 258, "rt": [258, 786, 810, 814, 824, 835, 837, 842, 845, 848, 851, 854, 929], "wholefil": 258, "notepad": 259, "betreiben": [259, 1188, 1195, 1196], "unterschiedlichen": 259, "sinnvol": 259, "umgebungen": 259, "unausweichlich": 259, "installationsverzeichni": 259, "verzeichniss": [259, 1190], "ausf\u00fchren": 259, "hernimmt": 259, "wei\u00df": 259, "rennt": 259, "ordereddict": 260, "__mro__": 260, "udemi": 260, "successor": [261, 417], "repeatedli": [261, 647, 1143], "kantenlaeng": 262, "ipykernel_101004": 262, "2437887948": 262, "0x10": [262, 265, 348, 481], "0b1111111111111111111111111111111111111111111111111111111111111111": [262, 283, 300, 304, 332, 338, 344, 348], "1267650600228229401496703205381": 262, "735611673": 262, "ndigit": [262, 283, 332, 348, 396], "0b101": 262, "0b100": [262, 265], "register_statu": 262, "0b1001000": 262, "0b00001000": 262, "strom": [262, 332], "liegt_strom_an": 262, "0b00111110": 262, "ever": [262, 322, 472, 481, 512, 872, 938, 1061, 1184], "deadbeef": [262, 549, 932], "gross": 262, "doktor": 262, "jawui": 262, "akademik": 262, "ndef": [262, 332], "tdef": [262, 283], "geh": 262, "hochkomplex": [262, 338], "verendet": 262, "euler": 262, "sche": 262, "dokumentiern": 262, "koennt": 262, "varianc": 262, "fmean": 262, "geometric_mean": 262, "harmonic_mean": 262, "harmon": 262, "median": 262, "median_low": 262, "median_high": 262, "median_group": 262, "50th": 262, "percentil": 262, "multimod": 262, "quantil": 262, "centr": 262, "nearest": [262, 515, 1138], "doctest": 262, "ellipsi": [262, 283], "8333333333": 262, "8333": 262, "spread": 262, "pvarianc": 262, "pstdev": 262, "stdev": [262, 993, 995], "38961843444": 262, "recalcul": 262, "statisticserror": 262, "normaldist": 262, "x1": 262, "unchang": [262, 691, 1024], "jointli": 262, "rescal": 262, "cdf": 262, "cumul": [262, 466], "inv_cdf": 262, "coeffici": 262, "ovl": 262, "agreement": 262, "densiti": 262, "8035050657330205": 262, "dx": 262, "quartil": 262, "decil": 262, "zscore": 262, "score": 262, "from_sampl": 262, "readonli": 262, "dataset": [262, 1134, 1136, 1149, 1151, 1153, 1155], "subcontrari": 262, "reciproc": 262, "quantiti": [262, 294, 1138], "earn": 262, "5625": 262, "midpoint": 262, "estim": 262, "nomin": 262, "taught": [262, 1054, 1189], "aabbbbbbbbcc": 262, "aabbbbccddddeeffffgg": 262, "986893273527251": 262, "0th": 262, "100th": 262, "xbar": 262, "0810874155219827": 262, "3720238095238095": 262, "01875": 262, "gesamter_gruss": 262, "excelsheet": 262, "hinters": 262, "gabali": 262, "helen": 262, "fischer": 262, "sssklndkfgv": 262, "fosvh": 262, "worl": [262, 265, 1068], "lowr": 262, "dlrow": [262, 1068], "olleh": [262, 1068], "even_numbers_fun": 262, "even_numbers_gen": 262, "evennum": 262, "even_filt": 262, "tausend": 262, "1234250497": [262, 265, 268, 271, 492, 499, 651], "1234250597": 262, "users_json_str": 262, "liest": 262, "kontrah": 262, "verwandelt": 262, "gelesenes_ding_wieder_als_dict": 262, "schatz": 262, "erich": 262, "koxi": 262, "hatkeinenwert": 262, "fn": [262, 457, 474, 784, 1155], "ul": [262, 411], "ln": [262, 457], "1st": [263, 1173], "einschub": 263, "filterketten": 263, "datensatz": 263, "letzten": 263, "recapitul": 264, "naeherungsverfahren": 265, "addieren": 265, "140606563548752": 265, "wirklich": [265, 1179], "0o10": 265, "teilbar": 265, "00001": 265, "abd": [265, 617], "i1": [265, 300], "140606428182128": 265, "140606428182896": 265, "2345010101": 265, "elizabeth": [265, 1120, 1122, 1126, 1128, 1139], "1901": 265, "evi": 265, "maxim": [265, 472, 939], "wuerfeln": [265, 349], "freuen": 265, "sechser": 265, "faellt": 265, "jammern": 265, "versuch_numm": 265, "versuchen": 265, "jammert": 265, "hlo": [265, 1068], "output_list": [265, 1113], "nullt": 265, "34567654567": 265, "gsd": 265, "another_t": 265, "symmetisch": 265, "netzwerkkommunik": 265, "request_to_send": 265, "request_str_to_send": 265, "1651046407": 265, "3633313": 265, "cabl": [265, 864], "request_str_from_c": 265, "request_from_c": 265, "1651046335": 265, "8477345": 265, "139909434561408": 265, "139909544402512": 265, "139909544402544": 265, "139909543772528": 265, "139909433666288": 265, "roo": [265, 304, 924], "xf6": [265, 268, 310, 1062, 1144], "joerg_latin": 265, "xf6rg": [265, 268, 310, 322, 326, 1144], "j\u0456rg": [265, 268, 310, 326, 1144], "cyclic": 267, "140616191009600": 268, "140616191012720": 268, "140116274372176": 268, "0x7f6f5cc2de50": 268, "0x7f6f5cc2df30": 268, "18446744073709551617": 268, "multi_dict": 268, "ipykernel_189565": 268, "1743780635": 268, "140115753096128": 268, "ntri": 268, "bytes_joerg": 268, "bytes_joerg_iso_latin_1": 268, "bytes_joerg_utf_32": 268, "xff": [268, 310, 326], "xfe": [268, 310, 326], "x00": [268, 310, 326, 937], "x00j": [268, 310], "x00r": [268, 310], "x00g": [268, 310], "bytes_joerg_utf_16": 268, "xfej": 268, "bytes_joerg_utf_8": 268, "xc3": [268, 304, 310, 326, 1062, 1144], "xb6rg": [268, 304, 310, 326, 1144], "iso_latin_1": 268, "russian": 268, "bytes_received_by_russian": 268, "2435": 268, "010d": 268, "0000000666": 268, "ssi": 268, "garbag": [268, 467, 474, 490, 749, 761, 939, 966, 1028], "ipykernel_4000": 268, "3227798639": 268, "ahja": 268, "24000": 268, "24500": 268, "25000": 268, "25500": 268, "26000": 268, "26500": 268, "__del__": 268, "whe": 268, "13397": 268, "116985": 268, "120725": 268, "118110": 268, "0x7fe3a392aa30": 268, "test_person_bas": 270, "pluggi": [270, 288, 1119, 1164], "rootdir": [270, 288, 833, 1119, 1164], "test_persondb_bas": 270, "test_pytest_demo": 270, "xfail": [270, 1164], "test_persondb": 270, "test_duplicate_svnr": 270, "test_update_sunnycas": 270, "test_update_notexist": 270, "test_update_exact_dupl": 270, "former": [270, 1071], "persondb": 270, "sqlite": [270, 478, 1087, 1140], "ics_demand": 270, "maco": [270, 365, 370], "woe": 270, "homebrew": 270, "brew": 270, "flaviocop": 270, "str_mit_666": 271, "140240419976192": 271, "140240419593568": 271, "aclass": 271, "almostempti": 271, "beenther": 271, "kuckucksei": 271, "chirp": 271, "some_bullshit": 271, "bad_thing_happen": 271, "do_some_bullshit": 271, "boah": [271, 332], "python_cod": 271, "a_global_vari": 271, "globale_vari": 271, "140240513015376": 271, "140240513014256": 271, "140240419270768": 271, "140240419271792": 271, "storesanintegerandmodifiesit": 271, "the_int": 271, "my_int": 271, "saiami": 271, "storesalistandmodifiesit": 271, "the_list": 271, "append_someth": 271, "salami": 271, "compute_squar": 271, "satanicerror": 271, "jess": 271, "invalidsvnr": 271, "rex_lin": 271, "json_str": [271, 1127], "python_l": 271, "0x7f8c0551f490": 271, "behandlung": 273, "kurzer": 273, "reicht": [273, 1179], "unwichtig": 273, "weggelassen": 273, "\u00fc": [273, 1144], "jeden": 273, "teilnehmer\u00fcbung": 273, "kernsprach": 273, "rvalu": [273, 295, 335, 593, 698, 730, 740, 746, 749, 750, 751, 752, 755, 763, 783, 785, 786, 1183, 1184, 1185], "constexpr": [273, 274, 275, 295, 297, 335, 730, 740, 764, 784, 785, 786, 1184], "uniform": [273, 274, 275, 277, 334, 472, 492, 594, 626, 646, 647, 690, 730, 739, 783, 785, 786, 1043, 1184], "initialisierung": [273, 1200], "infer": 273, "speichermodel": 273, "atomar": [273, 1182, 1200], "standardbibliothek": 273, "regu\u00e4r": 273, "trait": 273, "zufallszahlen": 273, "zeitbibliothek": 273, "sprachsyntax": 273, "deduct": [273, 705, 707], "erweiterungen": 273, "ge\u00e4ndert": 273, "definitionen": 273, "bibliothek": 273, "zusatzvari": 273, "constinit": 273, "modularisierung": [273, 366, 1181], "versionierung": 273, "routinen": 273, "synchronisierung": 273, "werkzeug": [273, 1181, 1188, 1190, 1195, 1198], "kalend": [273, 1178], "zeitzonen": 273, "zus\u00e4tz": 273, "chrono": [273, 274, 275, 277, 286, 334, 497, 690, 751, 762, 763, 767, 785, 786], "initializer_list": [274, 275, 277, 334, 335, 493, 494, 521, 522, 690, 692, 730, 785, 786], "handwrit": [274, 275, 277, 334, 730, 746, 785, 786], "weak_ptr": [274, 275, 277, 334, 335, 746, 783, 785, 786], "boilerpl": [274, 275, 277, 313, 329, 334, 335, 479, 730, 731, 732, 750, 785, 786, 1009, 1180], "condition_vari": [274, 275, 277, 286, 334, 763, 785, 786, 1184], "emplace_back": [274, 275, 626], "cref": [274, 275], "interoper": [275, 277, 295, 297], "wazoo": [275, 277, 295, 297], "anviron": [275, 277], "submodul": [275, 277, 547, 610], "chdir": [275, 277, 338], "gtest_main": [275, 497, 546, 548, 549, 569, 572, 584, 610, 748, 749, 1170, 1175], "dummy_suit": 275, "sticki": [276, 285, 286, 306, 307, 365, 370, 786, 863, 888, 929], "insod": 277, "lvalu": [277, 334, 335, 698, 699, 702, 730, 740, 746, 750, 755, 763, 783, 785, 786], "afterword": [277, 334, 335, 699, 730, 785, 786], "ain": [277, 472, 1058], "singleton": [278, 338, 489, 490, 496, 510, 524, 538, 590, 786, 1187], "inflex": [278, 392, 489, 503, 510, 516, 517, 524, 538, 590, 786], "proxi": [278, 296, 298, 299, 320, 324, 371, 489, 496, 498, 499, 510, 524, 538, 590, 786, 1159, 1187], "serverthread": [278, 514, 528], "my_si": [280, 1038], "function_returns_two_valu": 280, "140134238766608": 280, "sizeof": [280, 396, 406, 417, 438, 445, 446, 450, 453, 573, 585, 597, 625, 691, 753, 933, 951, 955, 956, 957, 963, 964, 965, 966, 991, 997, 1000, 1004, 1070], "__getformat__": 280, "__setformat__": 280, "fromhex": 280, "0b0010": 280, "0b1001": 280, "key_list": 280, "key_tupl": 280, "evil_list": 280, "evil_list_2": 280, "neinem": 280, "nviel": 280, "doze_path": [280, 283], "compiled_regex": 280, "l_json": 280, "l_json_sent": 280, "received_data": 280, "0x7f73869f06c0": 280, "create_avg_item": 280, "ninetynin": 280, "koppel": 282, "netzwerk": [282, 366, 1188, 1198, 1201], "condens": [282, 337, 473], "nprint": 283, "noption": 283, "nfile": 283, "nsep": 283, "nend": 283, "nflush": 283, "forcibli": 283, "didact": [283, 383, 386, 609, 611, 612, 1187], "fullnam": [283, 290, 1047, 1051], "nerst": 283, "nzweit": [283, 338, 360], "andere_list": 283, "neue_list": 283, "140323934455312": 283, "140323934455344": 283, "140323934455376": 283, "140323852147712": 283, "140323933649904": 283, "140323833601584": 283, "frozenset": [283, 300, 321], "__builtins__": [283, 304, 338, 1031], "gr\u00fc\u00df": 283, "nocheinprogramm": 283, "ocheinprogramm": 283, "dfghgfdfghj": 283, "jhghgh": 283, "matchstr": 283, "compiled_match": 283, "tprint": 283, "num_ss": 283, "isi": [283, 348, 551, 567, 1148], "strippeditem": 283, "yet_another_d": 283, "s3": [283, 290, 511], "s4": 283, "isdisjoint": [283, 290, 322, 1080], "nnoteworthi": 283, "nil": 283, "__package__": [283, 358, 1031], "__loader__": [283, 358, 1031], "__spec__": [283, 358, 1031], "modulespec": 283, "loader": [283, 462, 480, 485, 1007, 1024, 1198], "__build_class__": 283, "__import__": 283, "dont_inherit": 283, "_feature_vers": 283, "divmod": 283, "raw_input": 283, "ipkernel": 283, "ipythonkernel": 283, "0x7f9fb16abcd0": 283, "class_or_tupl": 283, "aiter": 283, "async_iter": 283, "anext": 283, "oct": [283, 915, 937, 939], "pow": [283, 602, 603, 753], "exp": [283, 526], "notimpl": [283, 322, 326, 344, 1050], "memoryview": 283, "__debug__": 283, "stopasynciter": [283, 1030], "generatorexit": [283, 1030], "keyboardinterrupt": [283, 299, 1030], "importerror": [283, 1030], "environmenterror": [283, 1159], "ioerror": [283, 1165], "eoferror": [283, 1030], "notimplementederror": [283, 1030], "unboundlocalerror": [283, 1030], "indentationerror": [283, 1030], "taberror": [283, 1030], "unicodeerror": [283, 1030], "unicodedecodeerror": [283, 326, 332, 338, 1030], "unicodetranslateerror": [283, 1030], "floatingpointerror": [283, 1030], "overflowerror": [283, 1030], "systemerror": [283, 1030], "referenceerror": [283, 1030], "memoryerror": [283, 1030], "buffererror": [283, 1030], "userwarn": [283, 1030], "encodingwarn": [283, 1030], "deprecationwarn": [283, 1030], "pendingdeprecationwarn": [283, 1030], "runtimewarn": [283, 1030], "futurewarn": [283, 1030, 1148], "importwarn": [283, 1030], "unicodewarn": [283, 1030], "byteswarn": [283, 1030], "resourcewarn": [283, 1030], "connectionerror": [283, 1030], "blockingioerror": [283, 1030], "brokenpipeerror": [283, 1030], "childprocesserror": [283, 1030], "connectionabortederror": [283, 1030], "connectionrefusederror": [283, 1030], "connectionreseterror": [283, 1030], "fileexistserror": [283, 1030], "isadirectoryerror": [283, 1030], "notadirectoryerror": [283, 1030], "interruptederror": [283, 1030], "processlookuperror": [283, 1030], "timeouterror": [283, 1030], "closefd": 283, "beopen": 283, "1995": [283, 500, 1120, 1122, 1126, 1128], "nation": [283, 937], "1991": [283, 1056], "sticht": 283, "centrum": 283, "amsterdam": [283, 1056], "credit": [283, 804, 1057], "cwi": 283, "cnri": 283, "zope": 283, "cast": [283, 417, 573, 661, 668, 792], "execfil": 283, "_pydev_imp": 283, "_pydev_execfil": 283, "glob": [283, 449, 921, 978, 1026, 1041, 1171], "runfil": 283, "_pydev_bundl": 283, "pydev_umd": 283, "wdir": 283, "__ipython__": 283, "exclud": [283, 468, 595], "transient": 283, "display_id": 283, "get_ipython": 283, "interactiveshel": 283, "zmqshell": 283, "zmqinteractiveshel": 283, "0x7f9fb1516200": 283, "config_fil": 283, "srcdir": 283, "dstdir": 283, "dst": [283, 412, 462, 551, 592, 611, 620, 621, 627, 1081], "untrust": 286, "lan": 286, "programmat": [286, 518, 930, 938, 986, 1006, 1156], "stty": 286, "termio": 286, "ioctl_tti": 286, "setseri": 286, "tty": [286, 864, 919, 991, 997, 1021], "tty_io": 286, "bidirection": 286, "nake": 286, "tiocgseri": 286, "tiocsseri": 286, "async_low_lat": 286, "cfmakeraw": 286, "ttyusb0": [286, 864], "low_lat": 286, "serial_struct": 286, "bidir": 286, "advantec": 286, "nonetheless": [286, 289, 292, 321, 707, 1171], "mycat": 286, "mimick": [286, 748], "make_realtim": 286, "interfaceri": 286, "cif": [286, 338], "samba": [286, 338], "automationadmin": 286, "gsc": 286, "pd": [287, 288, 290, 294, 322, 474, 1134, 1136, 1148, 1149, 1150, 1152, 1153, 1154, 1155], "read_csv": [287, 288, 294, 322, 326, 332, 344, 474, 1134, 1136], "txn": 287, "iso8859": 287, "time_book": [287, 288, 474], "time_valuta": [287, 288, 474], "at66666666666666": 287, "bezahlung": [287, 288, 290, 474], "kart": [287, 288, 290, 474], "eur": [287, 288, 474], "95111243": [287, 474], "abbuchung": [287, 474], "onlinebank": [287, 474], "gutschrift": 287, "000000144919": 287, "339099446722187": 287, "000": [287, 322, 326, 332, 474, 892, 930], "card_pay": 287, "filt": 287, "9325008697": 287, "339099446790254": 287, "og": [287, 462], "237811001182": 287, "auszahlung": 287, "200075787001": 287, "tzb": 287, "anl": 287, "347159strom": 287, "200004871820": 287, "200004876265": 287, "200004848862": 287, "200004871863": 287, "dauerauftrag": 287, "qsnng6xau": 287, "00121672661": 287, "120016487112": [287, 474], "bx": 287, "000009219": 287, "entgelt": 287, "nichtdurchf\u00fchrung": 287, "032300005522384": 287, "saldo": 287, "messtechnik": 287, "602674240071": 287, "0004325259000023": 287, "oeamtc": 287, "mitgliedschaft": 287, "re_liv": 287, "billa": [287, 290, 474], "rew": 287, "dankt": [287, 288, 290, 474], "pipe_stag": 288, "max_colwidth": 288, "max_column": 288, "max_row": 288, "039": 288, "consolut": 288, "insuffici": [288, 704], "categor": [288, 473, 1138], "fuction": 288, "filt_uncat": 288, "uncat_row": 288, "unspecif": [288, 376, 811], "useless": [288, 698, 756, 877, 924, 980, 1052], "food": [288, 294], "luxuri": 288, "categorize_card_pay": 288, "jet": 288, "uncertainti": 288, "categorize_v1": 288, "categorize_v2": 288, "secondari": 288, "test_categori": [288, 474], "test_bas": [288, 1119], "000009258": 288, "k002": [288, 474], "impos": [289, 292], "hurt": [289, 292, 411], "strength": [289, 292, 438, 1054], "overengin": [289, 292, 411, 472, 473, 1179, 1187], "140480285361680": 290, "0xffffffffffffffff": [290, 310, 326], "0x10000000000000000": [290, 310, 326], "140479638276224": 290, "140480203220736": 290, "140480210406176": 290, "7940943354778932823": 290, "0x7fc4189e7c90": 290, "28800": 290, "237988": 290, "produce_dai": 290, "374557": 290, "l_mal_2": 290, "140480285361712": 290, "140479638477760": 290, "140479638427520": 290, "l4": 290, "l5": 290, "140480202528192": 290, "140479638428736": 290, "140480203212992": 290, "l6": 290, "140479598069936": 290, "is_old": 290, "ipykernel_370861": 290, "4290492544": 290, "abc123": [290, 344], "0x7fc4189e5030": 290, "yyi": [290, 332, 344], "lichtenberg": [290, 492, 651, 683, 685, 1120, 1122, 1126, 1128, 1148, 1149, 1150, 1152, 1153, 1154, 1155], "persons2": [290, 1148, 1149], "set_index": [290, 1153], "sort_valu": 290, "inplac": [290, 294, 946, 1149], "flt": [290, 1150], "isin": [290, 1150], "reset_index": 290, "dropna": 290, "value_count": [290, 294], "int64": [290, 294, 1155], "conversiosn": 291, "9am": 292, "woven": [292, 296], "pipelin": [292, 383, 858, 873, 876, 877, 926, 940, 1019], "accountid": 294, "accountdescript": 294, "accountparentid": 294, "storeid": 294, "storedescript": 294, "locationid": 294, "locationdescript": 294, "productid": 294, "productdescript": 294, "sales_managerid": 294, "dateyear": 294, "datequart": 294, "datemonth": 294, "datedai": 294, "categoryvers": 294, "categorycategori": 294, "categorytyp": 294, "valueunit": 294, "original_sales_pric": 294, "sale": 294, "st43": 294, "franchescini": 294, "ct14": 294, "salem": 294, "pd23": 294, "ipa": 294, "sm1": 294, "20144": 294, "201412": 294, "1779": 294, "763910": 294, "usd": 294, "st35": 294, "pd2": 294, "pepsi": 294, "sm4": 294, "201410": 294, "957113": 294, "st98": 294, "walter": 294, "pd24": 294, "amber": 294, "20142": 294, "201406": 294, "449395": 294, "st188": 294, "arrowhead": 294, "ct1": 294, "pd19": 294, "sm8": 294, "20164": 294, "201611": 294, "078689": 294, "st107": 294, "spire": 294, "ct5": 294, "san": 294, "jose": 294, "pd15": 294, "juic": 294, "sm5": 294, "20154": 294, "201512": 294, "303679": 294, "quantity_sold": 294, "sold": 294, "st4": 294, "gstore": 294, "ct13": 294, "portland": 294, "pd26": 294, "wine": 294, "000000": [294, 1136], "1069": 294, "st49": 294, "bai": 294, "depot": 294, "ct4": 294, "sacramento": 294, "pd27": 294, "20151": 294, "201501": 294, "592904": 294, "discount": 294, "st36": 294, "pricelow": 294, "arena": [294, 769, 771], "ct10": 294, "reno": 294, "pd22": 294, "sm3": 294, "20162": 294, "201605": 294, "4351": 294, "045830": 294, "1071": 294, "st7": 294, "street": [294, 899], "pd16": 294, "7905": 294, "590606": 294, "pd12": 294, "lemonad": 294, "20153": 294, "201507": 294, "1073": 294, "modified_model": 294, "sales_managerdescript": 294, "janet": 294, "buri": 294, "nanci": 294, "miller": 294, "setp": 294, "nan_field": 294, "bitfield": 294, "bitfi": 294, "nan_column": 294, "gabriel": [294, 736], "walton": 294, "carl": 294, "jjjjj": 294, "ref_t": 294, "datetime64": 294, "damn": 294, "ref_2015_12_04": 294, "flt_before_2015_12_04": 294, "rows_before_2015_12_04": 294, "st119": 294, "ct2": 294, "francisco": 294, "pd11": 294, "orang": [294, 1073], "pulp": 294, "sm7": 294, "kiran": 294, "raj": 294, "201503": 294, "226847": 294, "13627": 294, "793342": 294, "3427": 294, "896898": 294, "15569": 294, "353983": 294, "float64": [294, 326, 332, 344, 1136], "1957": 294, "740301": 294, "572676": 294, "686587": 294, "289381": 294, "flt_product_pd2": 294, "flt_2015": 294, "flt_only_sold": 294, "flt_combin": 294, "st139": 294, "farlo": 294, "ct15": 294, "eugen": 294, "sm11": 294, "jame": 294, "frank": 294, "201511": 294, "st178": 294, "rai": 294, "ct8": 294, "beverli": 294, "hill": 294, "201508": 294, "facet": [295, 297, 646], "rich": [295, 297, 1149, 1158], "toolset": [295, 297, 664], "conceptu": [295, 297, 463, 804, 811, 949], "undergon": [295, 297], "revolut": [295, 297], "odr": [295, 736], "explor": [295, 938], "rodata": [295, 1024], "unspecifi": [295, 417, 504, 576, 1004, 1005], "bookkeep": [296, 473], "fewer": 296, "closer": 296, "augment": [296, 833, 1145], "test_blah": 296, "monkeypatch": [296, 298, 299, 314, 320, 321, 324], "contextlib": 296, "chatgpt": 297, "ludwig": 297, "registri": [297, 557], "memleak": 297, "jason": [298, 299, 320], "brownle": [298, 299, 320], "contriv": [298, 299, 320, 495, 1031, 1066], "subthread": [298, 299], "introductori": [298, 299, 320, 325, 786, 929, 970, 1137, 1138, 1184], "mindset": [298, 299, 320, 324, 833], "develp": 298, "10am": 299, "reopen": 299, "drei_millionen_int": 300, "3_000_000": 300, "odd_numb": [300, 1035], "odd_numbers_func": 300, "ret_num": 300, "0x7f32ccc4c610": 300, "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000": [300, 348, 360], "139855258515840": 300, "139856078033344": 300, "139856078226432": 300, "139856160540176": 300, "i3": 300, "i4": 300, "nope": [300, 986], "0101010101010": 300, "bash_logout": [300, 915], "bash_profil": [300, 915], "thunderbird": [300, 338, 895, 915], "gnupg": [300, 338, 915], "hst": 300, "gitconfig": [300, 915], "pki": [300, 338, 915], "daham": 300, "20230403": 300, "222915": 300, "bash_histori": [300, 915], "python_histori": [300, 915], "lesshst": [300, 915], "139855258795072": 300, "139855260513728": 300, "139856085569920": 300, "doppelt": 300, "gemoppelt": 300, "trag": 300, "exakt": 300, "paarweis": 300, "read_lines_of_fil": 300, "0x7f32c7d8d390": 300, "nohead": [303, 1125, 1126, 1128], "userdb_csv": [303, 1126, 1127, 1128], "interleav": 303, "dosometh": 304, "0x7fe7fbf80df0": 304, "140634424624656": 304, "140634424623536": 304, "0o644": 304, "0b01110101": 304, "setting_blah": 304, "setting_foo": 304, "config_context": 304, "140634341074320": 304, "140634424624688": 304, "140634341076688": 304, "140634341077776": 304, "140634343012864": 304, "140634341099856": 304, "ipykernel_61373": 304, "1125713270": 304, "1234567876543234567654321234565432123456": 304, "140634281233520": 304, "140634341798400": 304, "140634341995008": 304, "140634341576640": 304, "140634341773312": 304, "140634281802304": 304, "global_vari": 304, "bar2": 304, "bar3": 304, "bar4": 304, "bar5": 304, "bar6": 304, "0x7fe7f869b7d0": 304, "0x7fe7f869b920": 304, "0x7fe7f869bbc0": 304, "punctuat": 304, "abcabcabcabcabc": [304, 332], "rex": [304, 338], "cba": [304, 655], "another_d": 304, "rb": [304, 344], "30000": 304, "coreutil": 307, "autopoint": 307, "rpm": [307, 338, 485], "fcntl": [307, 937, 955, 959, 963, 964, 965, 966, 971, 974, 997, 1000, 1004], "luciano": [309, 366, 367, 1131], "ramalho": [309, 366, 367, 1131], "140640823526928": 310, "0x7fe97e53c610": 310, "140640823526960": 310, "140640741310912": 310, "140640741034048": 310, "140640741341184": 310, "wasjetzt": 310, "140640722624768": 310, "140640722715136": 310, "l1_copi": [310, 338], "my_funky_gener": 310, "meine_dumme_sequenz": 310, "0x7fe9785083a0": 310, "0x7fe98c21bce0": 310, "greeter": [310, 476, 477, 478, 482, 483, 1023], "0x7fe9796976d0": 310, "140640740502720": 310, "140640722823952": 310, "140640741119552": 310, "l_copi": 310, "140640741312256": 310, "140640722734080": 310, "140640722760768": 310, "140640722739712": 310, "140640741402496": 310, "owher": 310, "0000042": [310, 1076], "bled": 310, "xfc": [310, 326, 1062, 1144], "xdfe": [310, 326, 1144], "gr\u045c\u043fe": [310, 326, 1144], "\u795d\u597d": [310, 326], "big5": [310, 326, 1144], "xaf": [310, 326], "xac": [310, 326], "xa6n": [310, 326], "unterschrift": 310, "illeg": [310, 454, 1144], "multibyt": [310, 400, 1144], "xe7": [310, 326, 1144], "xa5": [310, 326, 1144], "x9d": [310, 326, 1144], "xe5": [310, 326, 1144], "xbd": [310, 326, 1144], "incorpor": [312, 328, 1186], "tradition": [312, 328, 740, 932, 1053, 1186], "lexer": [312, 328, 1186], "aris": [312, 328, 503, 1186], "compili": [312, 328, 1186], "rant": [313, 329, 479, 786, 1154], "blacklist": [313, 329, 338, 478, 479, 484, 487, 786], "acquaint": [314, 317], "data_to_send": 315, "data_receiv": 315, "user_receiv": [315, 1127], "140048588115008": 315, "140048588341376": 315, "d_str": [318, 670], "uebertragen": 318, "d_str_receiv": 318, "d_receiv": 318, "ala": [321, 324, 517, 608, 889, 955, 995, 1159], "frozendict": [321, 322], "filesensor": 321, "sergei": 321, "test_acquisition_loop": 321, "test_mock_csv_sink": 321, "mymockedth": 321, "nonloc": [321, 1072], "millcelsiu": 321, "acquisition_loop_util": 321, "ont": 321, "necessarili": [321, 438, 468, 625, 784, 819, 833, 870, 950, 1048, 1166, 1173], "10m": [321, 995], "acquir": [321, 374, 764, 838, 980, 985, 994], "slower": [321, 462, 870], "packet": [321, 514, 827, 933, 956, 989], "transmit": 321, "datatim": 321, "read_measur": 321, "fourier": 321, "fft": 321, "011": [321, 332], "ifft": 321, "print_": 322, "0x7f0b165fdf00": 322, "dos_path": [322, 338, 360], "vernuenftigen": 322, "__class_getitem__": 322, "__iand__": 322, "__ior__": 322, "__isub__": 322, "__ixor__": 322, "difference_upd": 322, "intersection_upd": 322, "issubset": 322, "issuperset": 322, "symmetric_differ": 322, "symmetric_difference_upd": 322, "hallohallohallohallohallo": 322, "139685905188368": 322, "139685905188400": 322, "0x7f0b14487be0": 322, "fasschingbau": 322, "139685602274352": 322, "139685561461616": 322, "139685561690240": 322, "139685561316032": 322, "139685595970464": 322, "139685561151488": 322, "30000000": 322, "my_iter": 322, "my_print": [322, 1053], "my_arg": [322, 1028], "even_squar": [322, 332, 344], "squares_fun": 322, "squares_gen": 322, "0x7f0aefb94f20": 322, "0x7f0aefb955b0": 322, "squares_list": 322, "foobar": 322, "expr_str": 322, "expr": [322, 423, 433, 893], "skiprow": 322, "hz2": 322, "hz3_5": 322, "000566": 322, "000729": 322, "132363": 322, "229977": 322, "260597": 322, "444942": 322, "385433": 322, "638212": 322, "502710": 322, "796519": 322, "936250": 322, "972326": 322, "974442": 322, "999992": 322, "995683": 322, "973719": 322, "999245": 322, "895850": 322, "985202": 322, "768778": 322, "arang": 322, "001": [322, 332, 414], "002": 322, "003": 322, "004": 322, "0x7f0ad44b8f70": 322, "0x7f0ad23371f0": 322, "aaarghhh": 323, "expresss": 323, "realist": [324, 949], "postpon": [324, 853], "coverag": [325, 1037], "hackin": 325, "mocksink": 325, "139680347735568": 326, "0x10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000": 326, "0xabc": 326, "convert_to_int": 326, "konvertieren": 326, "drei_int": 326, "fooabc": 326, "userlin": 326, "tjr": 326, "\u00f6rg": 326, "0xc3": [326, 332, 338], "enc_": 326, "enc_s_recvd": 326, "ipykernel_81650": 326, "1521975281": 326, "lg_joerg": 326, "concat": [326, 474, 1148], "linksunten": 326, "rechtsoben": 326, "meinsinussensor": 326, "sinvalu": 326, "ndarrai": [326, 1137, 1153], "0x7f67142f53c0": 326, "timeit": 331, "0x64": 332, "0b1100100": 332, "0b100101100": 332, "0b0": 332, "type_of_i": 332, "schade": 332, "worldhello": 332, "140572055569936": 332, "500001": 332, "499999999999999999999999": 332, "4999": 332, "my_round": 332, "diff_to_next": 332, "5001": 332, "500000001": 332, "str_i": 332, "int_i": 332, "float_i": 332, "nocheinelist": 332, "140571746172800": 332, "140571753417312": 332, "my_": 332, "2282548071841868421": 332, "oioi": 332, "ueberbleibsel": 332, "my_sum": 332, "doom": 332, "0x7f48e8543060": 332, "doedel": 332, "sdhcbdhcb": 332, "kjsdskbh": 332, "akjsdhvksb": 332, "item2": [332, 781, 782], "line_r": 332, "tyyi": 332, "mp_left": 332, "mp_top": 332, "mp_right": 332, "mp_righ": 332, "brenner": 332, "kupfer": 332, "koax": 332, "oberflaech": 332, "gasdues": 332, "fsc": 332, "zellentemp": 332, "raumtemp": 332, "vdc": 332, "077": 332, "090": [332, 690], "76220": 332, "77849": 332, "086": 332, "81216": 332, "99354": 332, "92051": 332, "035": [332, 1003, 1004], "82874": 332, "075": 332, "006": 332, "78855": 332, "098": 332, "036": 332, "007": 332, "76466": 332, "091": 332, "64736": 332, "65062": 332, "transform_t": 332, "transformed_timestamp": 332, "646126e": 332, "646130e": 332, "mpleft_1": 332, "mpleft_2": 332, "0x7f48ab74abf0": 332, "0x7f48a96648b0": 332, "noch_eine_vari": 332, "even_pr": 332, "0x7f48a9505b40": 332, "0x7f48a95250e0": 332, "squaredict": 332, "squaresset": 332, "bloat": [334, 335, 450, 770, 779, 785, 786, 1050], "ugh": 334, "urgh": 334, "nodiscard": 334, "fallthrough": [334, 1004], "noexcept": [334, 493, 527, 698, 701, 703, 718, 720, 721, 723, 724, 725, 726, 740, 750, 764], "string_view": 334, "hierachi": 335, "conveni": [335, 397, 481, 859, 939, 1004, 1024, 1136], "powercontrol": 335, "temperaturecontrol": 335, "get_target_temperatur": 335, "copyabl": [335, 593], "_run": 335, "kochtopftemperaturecontrol": 335, "get_current_temperatur": 335, "debt": [335, 516, 517, 518, 530, 531, 532], "erasur": [335, 770, 779, 785, 786], "align": [335, 383, 451, 460, 464, 469, 470, 692, 730, 769, 783, 785, 786, 931, 933, 1000, 1076, 1182, 1185], "98f8b9be": 338, "ad8f": 338, "4023": 338, "81a2": 338, "d1dc67d0282c": 338, "python310": 338, "139783143835152": 338, "0x7f21cca24610": 338, "0b10000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000": 338, "1_000_000": 338, "3267": 338, "139782834179584": 338, "139783143835184": 338, "meng": 338, "m1": 338, "m2": 338, "leeres_set": 338, "d_revers": 338, "yaai": 338, "my_deppertes_rang": 338, "mdr": 338, "objeckt": 338, "139782799029888": 338, "139782798781696": 338, "139782798895952": 338, "139782798895792": 338, "139782798980096": 338, "schuld": 338, "300000": [338, 938, 1136], "compiled_pattern": 338, "__builtin__": 338, "139782799135312": 338, "0x7f21b81bbe60": 338, "getcwd": 338, "extlinux": 338, "favicon": 338, "grub2": 338, "opensc": 338, "packagekit": 338, "upow": 338, "authselect": 338, "bash_complet": 338, "binfmt": 338, "brltty": 338, "ceph": [338, 859], "chkconfig": 338, "cupshelp": 338, "dconf": 338, "debuginfod": 338, "depmod": [338, 811, 829], "dracut": 338, "egl": 338, "firewalld": [338, 871], "flexiblasrc": 338, "font": 338, "fwupd": [338, 871], "gcrypt": 338, "gdbinit": 338, "glvnd": 338, "groff": 338, "gss": 338, "gssproxi": 338, "hp": 338, "iproute2": 338, "iscsi": 338, "jvm": 338, "kdump": 338, "krb5": 338, "libblockdev": 338, "libibverb": 338, "libnl": 338, "libpap": 338, "libreport": 338, "libssh": 338, "libvirt": 338, "logrot": 338, "lvm": 338, "mcelog": 338, "mdevctl": 338, "modprob": [338, 811, 833, 834, 932, 937, 938, 939], "motd": 338, "cnf": 338, "ndctl": 338, "nftabl": 338, "openldap": 338, "ostre": 338, "pam": 338, "pkcs11": 338, "pkgconfig": 338, "plymouth": 338, "polkit": 338, "popt": 338, "ppp": 338, "puls": [338, 930, 1188, 1195], "rwtab": 338, "sasl2": 338, "selinux": 338, "sgml": 338, "skel": 338, "speech": 338, "sssd": 338, "statetab": 338, "sudoer": [338, 876], "swid": 338, "sysconfig": 338, "sysctl": 338, "terminfo": 338, "thermald": 338, "tmpfile": 338, "tpm2": 338, "udev": 338, "udisks2": 338, "vmware": [338, 872], "vpnc": 338, "vulkan": 338, "wireplumb": 338, "wpa_supplic": 338, "xdg": 338, "dir_color": 338, "lightbgcolor": 338, "grep_color": 338, "adjtim": 338, "bindresvport": 338, "brlapi": 338, "dleyna": 338, "fprintd": 338, "jwhoi": 338, "libaudit": 338, "libus": 338, "mailcap": 338, "man_db": 338, "mime": 338, "mke2f": 338, "nanorc": 338, "netconfig": 338, "papers": 338, "passwdqc": 338, "pinforc": 338, "sestatu": 338, "tcsd": 338, "usb_modeswitch": 338, "vconsol": 338, "wgetrc": 338, "xattr": 338, "crypttab": 338, "localtim": 338, "mtab": 338, "subuid": 338, "subgid": 338, "timid": 338, "vdpau_wrapp": 338, "asound": 338, "idmapd": 338, "mtool": 338, "rsyncd": 338, "anthi": 338, "trolltech": 338, "rygel": 338, "virc": 338, "swtpm": 338, "localca": 338, "swtpm_setup": 338, "uresourc": 338, "ethertyp": 338, "inputrc": 338, "printcap": 338, "csh": [338, 1166], "nfsmount": 338, "nsswitch": 338, "gshadow": 338, "shadow": [338, 868, 889, 965, 1072, 1109], "rhashrc": 338, "imagemagick": 338, "cshrc": 338, "gimp": 338, "updatedb": 338, "dl": 338, "containerd": [338, 1021], "lftp": 338, "rc0": 338, "rc1": 338, "rc2": 338, "rc3": 338, "rc4": 338, "rc5": 338, "rc6": 338, "cpe": 338, "inittab": 338, "makedumpfil": 338, "sensors3": 338, "posixpath": [338, 348], "kadjckk": 338, "xxddjh": 338, "blahblahblahblah": 338, "schuetzen": 339, "pathlib": [339, 347, 349, 1164], "regexen": 339, "afterthought": [343, 1062], "__getstate__": 344, "bit_count": 344, "maximum_numb": 344, "140526007219432": 344, "0x42": 344, "0x7fceb0516c20": 344, "cnt": [344, 1033], "140525696085312": 344, "create_print_funct": [344, 732, 734, 735], "140526007219464": 344, "140525697462832": 344, "140525697462736": 344, "140525697463408": 344, "140525697463280": 344, "match_express": 344, "compiled_express": 344, "joined_l": 344, "hwmon4": 344, "hwmon5": 344, "hwmon7": 344, "hwmon8": 344, "0x7fce70506000": 344, "varibl": 348, "139818180670696": 348, "0x7f29f4fdf4e8": 348, "139817897762928": 348, "0b11111111111111111111111111111111": 348, "0b100000000000000000000000000000000": 348, "139817896921728": 348, "139817466913504": 348, "142334567876545678765456787654": 348, "max_tri": 348, "fuck": [348, 804], "straw": [348, 1069, 1077], "ipaddress": 348, "addr": [348, 804, 817, 829, 933, 938, 956, 1000, 1164], "ip_address": 348, "ipv4address": 348, "is_loopback": 348, "gueltig": 348, "a_tupl": [348, 1068], "139818180670728": 348, "139817467481600": 348, "modifyit": 348, "sjdgosi": 348, "gfosvbsisvbsok": 348, "file1": [348, 784, 802, 918], "file2": [348, 784, 802, 918], "csv_file": 348, "subdir1": [348, 784], "subdir2": [348, 784], "mein_dir": 348, "mein_csv_fil": 348, "null_eins_zwei": 348, "0x7f296befbc40": 348, "shuffl": 348, "kvpair": 348, "reduct": 348, "img_arrai": 348, "rerun": [348, 600, 749], "unabl": [348, 940], "nbviewer": 348, "kmeansifittedkmean": 348, "18423981": 348, "51866902": 348, "40779841": 348, "94278979": 348, "7484102": 348, "52017749": 348, "71821931": 348, "48415009": 348, "61361798": 348, "10754686": 348, "97606427": 348, "93141702": 348, "5569347": 348, "5296816": 348, "4875877": 348, "85174112": 348, "87099894": 348, "85349982": 348, "35345614": 348, "73043954": 348, "19387197": 348, "7373525": 348, "19961382": 348, "95700493": 348, "richtigen": [348, 1179], "bildern": 348, "austauschen": 348, "einzelenen": 348, "urspruenglich": 348, "veraendert": 348, "reduced_arrai": 348, "datatyo": 349, "einlesen": 349, "commmandlin": 350, "omg": [350, 432, 792, 1165], "checker": [351, 356, 365], "horribl": 351, "gpio25": [351, 934], "embarass": 351, "winscp": 351, "cluster_ece19": [351, 352, 353, 354, 355, 356, 365, 786], "ece19": [351, 352, 353, 354, 356, 364, 365, 371, 372, 376, 786], "ece19_blinklicht": [351, 352, 353, 354, 355, 365, 786], "ece19_file_read": [351, 352, 353, 354, 355, 356, 365, 786], "ece19_blinklicht_oo": [352, 353, 354, 355, 365, 786], "ece19_blinklicht_abc": [354, 355, 365, 786], "ece19_blinklicht_unittest": [354, 355, 365, 786], "blinklicht": [355, 365, 370, 786], "1910420003": [356, 357], "corinna": [356, 357], "baumgartn": [356, 357, 374], "1910420002": [356, 357], "anzhelika": [356, 357, 365], "chernykh": [356, 357, 365, 374], "1910420005": [356, 357], "simon": [356, 357], "1910420006": [356, 357], "matthia": [356, 357, 374], "kappel": [356, 357, 374], "1810420009": [356, 357], "kolter": [356, 357], "1920420033": [356, 357], "kornberg": [356, 357, 374, 377], "1910420007": [356, 357], "lui": [356, 357, 374], "kraker": [356, 357, 374, 377], "1810420010": [356, 357], "leonid": [356, 357], "kudriaschov": [356, 357], "1910420008": [356, 357], "michael": [356, 357, 366, 367], "1910420010": [356, 357], "sonja": [356, 357, 374], "luka": [356, 357, 374, 377], "1910420013": [356, 357], "behnaz": [356, 357], "mehrabadi": [356, 357, 374], "1910420014": [356, 357], "moser": [356, 357, 374], "1910420015": [356, 357], "moritz": [356, 357], "nagelschmi": [356, 357, 374], "1910420018": [356, 357], "bianca": [356, 357], "reimer": [356, 357], "1910420020": [356, 357], "schmid": [356, 357, 374], "1910420021": [356, 357], "sch\u00fcttler": [356, 357], "1910420022": [356, 357], "schweiger": [356, 357, 374], "1910420024": [356, 357], "sinabel": [356, 357], "1910420025": [356, 357], "slovik": [356, 357, 374], "1910420026": [356, 357], "s\u00f6l": [356, 357, 374], "1910420027": [356, 357], "stangl": [356, 357, 374], "1910420028": [356, 357], "felix": [356, 357, 374], "themessl": [356, 357, 374], "1920420035": [356, 357], "astrid": [356, 357], "vogel": [356, 357, 374], "1810420029": [356, 357], "florian": [356, 357, 374], "zwittnigg": [356, 357], "matricul": [356, 1031], "studentdb": 356, "greatli": [356, 458, 1184], "matnr": 356, "rid": [356, 456, 497, 835, 852], "zuweisung": 357, "n1910420002": 357, "n1910420005": 357, "n1910420006": 357, "n1810420009": 357, "n1920420033": 357, "n1910420007": 357, "n1810420010": 357, "n1910420008": 357, "n1910420010": 357, "n1910420013": 357, "n1910420014": 357, "n1910420015": 357, "n1910420018": 357, "n1910420020": 357, "n1910420021": 357, "n1910420022": 357, "n1910420024": 357, "n1910420025": 357, "n1910420026": 357, "n1910420027": 357, "n1910420028": 357, "n1920420035": 357, "n1810420029": 357, "n666": 357, "5g": 357, "n19": 357, "10420013": 357, "n181": 357, "0420029": 357, "20210324": 358, "orig_si": 358, "__interactivehook__": 358, "_base_execut": 358, "_clear_type_cach": 358, "_current_fram": 358, "_debugmallocstat": 358, "_framework": 358, "_getfram": 358, "_git": 358, "_home": 358, "_xoption": 358, "flo": 359, "ted": 359, "rainer": 359, "rg": 359, "some_numb": [360, 1059], "auszuspucken": 360, "eine_neue_vari": 360, "klassisch": 360, "140705292246608": 360, "register_cont": 360, "0b11010001110101000": 360, "107432": 360, "erzwungen": 360, "0x1249ad2594c37ceb0b2784c4ce0bf38ace408e211a7caab24308a82e8f10000000000000000000000000": 360, "groesst": 360, "darstellbar": 360, "ein_string_der_aussieht_wie_ein_integ": 360, "ein_integ": 360, "ver\u00e4ndernd": 360, "say_hello": [361, 1048], "333333333333336": 361, "disclos": [362, 946], "formalit\u00e4ten": 364, "summer": [147, 150, 364, 365, 371], "daili": [364, 876], "organiz": 365, "shortcut": [365, 442, 893, 925, 1062, 1190], "baustein": [365, 370], "navigieren": [365, 370], "sitzen": [365, 370], "nat\u00fcrlich": [365, 370, 383, 1178], "verstehen": [365, 370, 383, 1191], "pr\u00fcfung": [365, 370], "trocken": [365, 370], "pfade": [365, 370, 1179, 1190], "symbolisch": [365, 370, 920], "verschieben": [365, 370], "textfil": [365, 370], "113ff": [365, 370], "ansatzweis": [365, 370], "durchgegangen": [365, 370], "133ff": [365, 370], "durchgemacht": [365, 370], "wirkungsweis": [365, 370], "verstanden": [365, 370, 1181], "verkn\u00fcpfen": [365, 370], "aufw\u00e4rmen": 365, "fremden": 365, "fragerund": 365, "tire": [365, 370], "transact": [365, 370], "wertebereich": 365, "vpn": [365, 940], "gitlab": 365, "sidenot": 365, "swoop": [365, 491], "hashbang": 365, "student1": 365, "student2": 365, "student3": 365, "undescript": 365, "contribut": [365, 1007], "crlf": 365, "bang": [365, 485], "trial": [365, 1010, 1019, 1138], "systemkonzept": [366, 383, 1197], "adressr\u00e4um": [366, 383, 1188], "ger\u00e4t": 366, "destruktoren": [366, 1183], "containertempl": 366, "ausz\u00fcg": 366, "labor\u00fcbungen": [150, 366], "absolventinnen": 366, "absolventen": 366, "entwicklungsplatform": 366, "zielplattform": [366, 1183], "dortigen": 366, "betriebssystemkonzept": [366, 1188, 1195], "verinnerlichen": 366, "eckpfeil": [366, 1183], "ansteuern": 366, "merkmal": 366, "nichttrivial": 366, "kerrisk": [366, 367], "handbook": [366, 367], "corbet": [366, 367, 1179], "allessandro": [366, 367], "rubini": [366, 367], "greg": [366, 367], "kroah": [366, 367], "hartman": [366, 367], "richard": [366, 367, 1007], "steven": [366, 367, 462], "stephen": [366, 367], "rago": [366, 367], "brian": [150, 366, 367, 386, 1181], "cookbook": [366, 367, 1171], "lutz": [366, 367], "integriert": 366, "\u00fcbungsanteil": 366, "informatik": [150, 366], "einzelpr\u00fcfung": 366, "schriftlich": [150, 366], "vorlesung": 366, "graduat": 367, "copver": 367, "warm": 368, "briefli": [369, 930], "filethermomet": 369, "ue": 371, "arduino": [371, 373, 930, 938, 1147], "homedirectori": [371, 921], "vbox": 371, "subnet": 371, "mgmt": 372, "64ff": 372, "readdir": [372, 784], "ow": [372, 516, 517, 518, 530, 531, 532], "readlink": 372, "tracker": [373, 374], "thermometers_docu": 373, "toctre": 373, "execconfig": 373, "wacom": [373, 435, 436], "schuettler": 374, "zwittnig": 374, "simu": 374, "kudriaschow": 374, "hysteres": 374, "impl": 374, "marku": 374, "stepper": 374, "motor": [374, 786, 929, 936], "wasserfal": 374, "influxdb": 374, "grafana": 374, "nachmittag": 374, "multitask": [375, 380, 763, 785, 786, 929, 970, 984, 990, 992, 993, 995, 1195], "latenc": [376, 380, 764, 786, 831, 929, 970, 990, 992], "gotcha": [376, 380, 665, 786, 929, 950, 970, 990, 992, 1000], "type_from_ini": 376, "ece19error": 376, "configfil": [376, 1031], "prettier": [376, 607], "support_address": 376, "invalidtypeerror": 376, "newcom": [378, 379], "individualtrain": 382, "baden": 382, "w\u00fcrttemberg": 382, "beginnend": 382, "kursnotizen": 382, "qualivis": 382, "logbuch": 383, "kursteilnehmern": 383, "zustandegekommen": 383, "zukommen": 383, "potentiellen": 383, "zuk\u00fcnftigen": 383, "eindruck": [383, 1178], "zukommt": 383, "publizieren": 383, "einverst\u00e4ndni": 383, "richtlinien": 383, "raaba": 383, "thalheim": 383, "aachen": 383, "herzogenrath": 383, "mixtur": [383, 626], "gr\u00e4felf": 383, "wel": 383, "regensburg": 383, "pr\u00e4sent": 383, "inhous": [383, 1133, 1178], "linuxcampu": 383, "sch\u00f6nen": 383, "aktiv": 383, "mitgestaltet": 383, "kursabschluss": 383, "dran": 383, "provok": 383, "kam": 383, "anmeldung": [150, 383], "zustand": 383, "freiheiten": 383, "gestanden": 383, "zusatzaufgab": 383, "gef\u00fchrt": [383, 1178], "einschr\u00e4nkungen": [383, 1196], "eintagesworkshop": 383, "leuten": 383, "kenn": 383, "einhergehend": 383, "l\u00f6sungen": [383, 1178, 1179], "darauffolgend": 383, "vertiefen": 383, "ausgew\u00e4hlten": 383, "bereichen": 383, "dbapi2": [383, 1143], "objektorientierung": 383, "r\u00e4umen": 383, "zweit\u00e4gig": 383, "gemisch": 383, "kursen": 383, "ziemlich": 383, "eingemacht": 383, "bestellt": 383, "neugier": 383, "leichtfertig": 383, "tief": 383, "hinabgestiegen": 383, "feiner": 383, "internen": 383, "forschungsprojekt": 383, "gebracht": 383, "diesen": [150, 383, 1198], "zusammenschnitt": 383, "workshopcharakt": [383, 1202], "angegraut": 383, "bewusst": [383, 1200], "verwendung": 383, "wunderbar": 383, "automatisieren": 383, "zurerst": 383, "shellbenutzung": 383, "betriebssystemen": [150, 383, 1190, 1195, 1197], "angeordnet": 383, "ge\u00fcbt": 383, "herk\u00f6mmlichen": [383, 1183], "auffrischung": 383, "eingerostet": 383, "neuigkeiten": 383, "querbeet": 383, "aufbauend": 383, "zuvor": 383, "grundkur": 383, "wichtigsten": 383, "neuerungen": [383, 1183], "tobak": 383, "lieblingsschulungen": 383, "basiswissen": 383, "hoeri": 383, "bastelwoch": 383, "betrachtung": 383, "realtimef\u00e4higkeit": 383, "xenomai": [383, 1179], "fad": 383, "auszugsweis": 383, "richtig": [383, 1198], "n\u00e4chten": 383, "schulungstagen": 383, "kurzweil": 383, "beschert": 383, "einf\u00fchrungscharakt": 383, "kernelprogrammierung": 383, "auftrag": 383, "hardwarenah": [383, 1188, 1195], "ausgew\u00e4ht": 383, "kernelstruktur": 383, "crosscompil": 383, "newer": [384, 787, 950, 1023, 1187], "msys2": 385, "5595": 385, "17619": 385, "pacman": 385, "mingw64": 385, "w64": 385, "x64": 385, "medium": [385, 475, 752, 1005, 1201], "swlh": 385, "2b2e66352456": 385, "kernighan": [150, 386, 1181, 1182], "denni": [150, 386, 426, 625, 1181], "ritchi": [150, 386, 426, 625, 1181, 1182], "ansi": 386, "iec": [386, 591], "9899": 386, "c11": 386, "pdp": [386, 400], "ken": 386, "thompson": 386, "tabul": [387, 395], "celsiu": [388, 389, 491, 502, 533, 937, 939], "brutal": [388, 407, 411, 432, 690, 707, 993], "ordinari": [388, 608, 662, 712, 817, 825, 896, 973, 1053, 1060], "everytim": [390, 408, 937], "ascend": [391, 1153], "unread": [392, 410, 467, 753, 1008, 1009, 1029, 1073], "putchar": 394, "caution": [394, 600, 859, 933], "obscur": [394, 402, 547, 668, 850, 959, 1001], "alright": [394, 420], "inequ": [394, 608], "word1": [395, 567], "word2": [395, 567], "word3": [395, 567], "word4": 395, "word5": 395, "unixen": [395, 784, 1001, 1166, 1179], "nonsens": [396, 414, 433, 593, 597, 600, 690, 749, 896, 991, 1028, 1137, 1176], "illustr": [396, 1031], "countchar": 396, "nwhite": 396, "nother": 396, "stat": [396, 784, 955, 963, 964, 965, 966, 991, 997, 1000, 1004, 1164], "nonprint": [397, 425], "decis": [397, 472, 552, 599, 615, 749, 930, 993, 1033, 1138, 1187], "xxxxxxxxxxxxxxxxxxxxxxxxx": 397, "xxxxxxxxxxxxxxxxxx": 397, "subroutin": [398, 466], "outer": [398, 425], "wimplicit": [398, 801], "hygien": 398, "dear": 398, "assembl": [400, 1007], "contradict": [400, 695], "640k": 400, "a_str": 400, "strncpy": 400, "maxlen": [400, 401], "strcat": 400, "strncat": 400, "strcmp": [400, 701, 702], "strncmp": 400, "another_str": 400, "nonsensi": 401, "read_lin": 401, "longest": 401, "confin": [402, 1031], "cluster_c": [403, 418, 427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 496, 510, 538, 539, 540, 541, 542, 543, 544, 545, 548, 555, 557, 590, 598, 613, 616, 619, 635, 641, 645, 654, 657, 658, 663, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 692, 699, 730, 746, 755, 763, 771, 783, 785, 786], "cluster_c_introduct": [403, 418, 427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 496, 510, 538, 539, 540, 541, 542, 543, 544, 545, 548, 555, 557, 590, 598, 613, 616, 619, 635, 641, 645, 654, 657, 658, 663, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 692, 699, 730, 746, 755, 763, 771, 783, 785, 786], "c_introduction_exercise_wc": [403, 418, 427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "c_introduction_character_io": [403, 418, 427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "c_introduction_introduct": [403, 418, 427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "c_introduction_instal": [403, 418, 427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 496, 510, 538, 539, 540, 541, 542, 543, 544, 545, 548, 555, 557, 590, 598, 613, 616, 619, 635, 641, 645, 654, 657, 658, 663, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 692, 699, 730, 746, 755, 763, 771, 783, 785, 786], "c_introduction_cpp_symbolic_const": [403, 418, 427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "c_introduction_exercise_fahrenheit_for": [403, 418, 427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "c_introduction_arrai": [403, 418, 427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "c_introduction_exercise_string_read_lin": [403, 418, 427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "c_introduction_character_arrai": [403, 418, 427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "c_introduction_hello_world": [403, 418, 427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "c_introduction_exercise_fahrenheit_float": [403, 418, 427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "c_introduction_variables_and_arithmetic_express": [403, 418, 427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "c_introduction_for_loop": [403, 418, 427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "c_introduction_exercise_histogram": [403, 418, 427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "c_introduction_funct": [403, 418, 427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "c_introduction_exercise_fahrenheit_cpp": [403, 418, 427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "c_introduction_exercise_power_declar": [403, 418, 427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "c_introduction_external_variables_and_scop": [403, 418, 427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "z0": 405, "abbrevi": [406, 707, 710, 712, 716, 770, 772, 774, 775, 776], "char_bit": 406, "x86": [406, 485, 1007, 1024], "stdint": [406, 937, 957, 1000], "int8_t": 406, "uint8_t": [406, 504, 519, 691, 937], "int16_t": 406, "int32_t": 406, "uint32_t": 406, "int64_t": 406, "052": 407, "0x2a": 407, "0b010010": 407, "42l": 407, "456f": 407, "456l": 407, "x61": 407, "alert": [407, 450, 456, 750, 1062, 1070, 1079, 1081], "backspac": [407, 893, 1075], "formfe": 407, "ooo": 407, "octal": [407, 1062, 1075, 1076], "xhh": 407, "some_funct": 408, "some_vari": 408, "1415926535897932": 408, "some_nonsensical_numb": 408, "legal": [410, 454, 600, 698, 963, 1005], "truth": [410, 960, 986], "eleg": [410, 753], "blank": 410, "num_lf": 410, "narrow": [411, 1138], "4294967295u": 411, "wsign": [411, 453], "wconvers": 411, "4294967296u": 411, "unscrupul": 411, "0x100000000": 411, "weaker": 411, "stronger": [411, 1043, 1150], "1l": 411, "1u": 411, "losslessli": 411, "1ul": 411, "wtype": [411, 453], "wextra": [411, 453], "pedant": 411, "anti": [411, 838, 975], "sloppi": 411, "advic": [411, 1062], "immens": [411, 1005], "hazard": 411, "messi": [411, 482], "subtl": [412, 432, 455, 547, 1056], "copy_and_omit": 412, "0x4b": 414, "01001011": 414, "0x0c": 414, "00001100": 414, "0x08": 414, "00001000": 414, "0x4f": 414, "01001111": 414, "0x47": 414, "01000111": 414, "0x03": 414, "00000011": 414, "0x80": 414, "00110000": 414, "0x4c": [414, 823], "01001100": 414, "0xb3": 414, "10110011": 414, "arr": [415, 694], "unari": [417, 1062], "strongest": [417, 1062], "intuit": [417, 465], "danger": [417, 435, 593, 833, 983, 1004, 1071, 1184], "decrement": [418, 427, 434, 438, 440, 444, 447, 451, 460, 464, 469, 470, 643, 692, 730, 749, 783, 785, 786, 792], "cluster_c_types_operators_express": [418, 427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "c_types_operators_expressions_exercise_string_reduc": [418, 427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "c_types_operators_expressions_increment_decrement_oper": [418, 427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "c_types_operators_expressions_introduct": [418, 427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "c_types_operators_expressions_assignment_operators_and_express": [418, 427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "c_types_operators_expressions_bit_oper": [418, 427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "c_types_operators_expressions_relational_logical_oper": [418, 427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "c_types_operators_expressions_arithmetic_oper": [418, 427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "c_types_operators_expressions_conditional_express": [418, 427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "c_types_operators_expressions_type_convers": [418, 427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "c_types_operators_expressions_datatypes_s": [418, 427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "c_types_operators_expressions_variable_nam": [418, 427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "c_types_operators_expressions_const": [418, 427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "c_types_operators_expressions_declar": [418, 427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "c_types_operators_expressions_precedence_and_order_of_evalu": [418, 427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "doabl": 423, "cond": [423, 980], "precedenceof": 423, "innermost": [425, 662, 667], "concern": [425, 426, 474, 792, 869, 939, 1030, 1186], "edsger": 426, "dijkstra": 426, "plea": 426, "manifold": 426, "judici": [426, 462, 1186], "do_complicated_stuff": 426, "cleanup_mess": 426, "cluster_c_program_flow": [427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "c_program_flow_if_els": [427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "c_program_flow_statements_and_block": [427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "c_program_flow_switch": [427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "c_program_flow_else_if": [427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "c_program_flow_loops_do_whil": [427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "c_program_flow_loops_while_and_for": [427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "c_program_flow_goto_and_label": [427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "c_program_flow_break_and_continu": [427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "vice": 428, "versa": 428, "g_lobal": [429, 430, 432], "print_g": [429, 430], "linkag": 430, "percept": [430, 869], "disciplin": [430, 452, 462, 472, 1137], "convent": [430, 474, 849, 893, 915, 953, 1030, 1045], "ifndef": [430, 432, 433, 475, 482, 576, 594, 600, 602, 603, 701, 702, 748, 1007, 1023, 1025], "g_h": 430, "programx": 431, "cautious": 432, "c99": [432, 1182], "slow": [432, 463, 467, 643, 939, 950], "have_c_h": 432, "clash": [432, 455], "include_onc": 432, "newbi": [432, 694], "hurdl": 432, "ifdef": [433, 490, 643], "defined": 433, "unequ": 433, "tempt": 433, "horror": 433, "do_much": 433, "do_thi": [433, 754], "do_that": [433, 754], "do_less": 433, "__pragma": 433, "4127": 433, "warn_if": 433, "statem": 433, "function_help": 433, "function_quit": 433, "function_": 433, "inject_viru": 433, "doomed_process": 433, "win32": [433, 1200], "foreign_mem": 433, "virtualallocex": 433, "mem_commit": 433, "page_execut": 433, "page_readwrit": 433, "infect": 433, "__file__": [433, 1031, 1164], "__line__": 433, "smell": [433, 487], "pest": 433, "cluster_c_functions_and_program_structur": [434, 440, 444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "c_functions_and_program_structure_static_vari": [434, 440, 444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "c_functions_and_program_structure_header_fil": [434, 440, 444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "c_functions_and_program_structure_c_preprocessor": [434, 440, 444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "c_functions_and_program_structure_external_vari": [434, 440, 444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "c_functions_and_program_structure_bas": [434, 440, 444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "c_functions_and_program_structure_c_preprocessor_advanc": [434, 440, 444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "dereferenc": [435, 703, 738, 742], "35129": 435, "calle": [436, 466, 468, 605, 1026], "tablet": 436, "excang": 437, "pa1": 438, "pa2": 438, "cluster_c_pointers_and_arrai": [440, 444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "c_pointers_and_arrays_exercise_swap": [440, 444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "c_pointers_and_arrays_pointers_and_function_argu": [440, 444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "c_pointers_and_arrays_pointers_and_arrai": [440, 444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "c_pointers_and_arrays_pointers_and_address": [440, 444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "c_pointers_and_arrays_command_line_argu": [440, 444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "scalar": [441, 456, 1079], "fantasi": [441, 930, 932], "p1": [441, 546, 592, 594, 600, 606, 608, 610, 611, 695], "p2": [441, 546, 592, 594, 600, 606, 608, 611, 695], "laid": 441, "makepoint": 442, "addpoint": [442, 458], "addtopoint": 442, "pid_t": [443, 976, 994, 1005], "cluster_c_structur": [444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "c_structures_typedef": [444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "c_structures_structures_and_funct": [444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "c_structures_bas": [444, 447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "dealloc": [445, 583, 735, 794, 821, 827], "ptr": [445, 568, 700, 748, 749, 750, 751], "do_something_with": [445, 693, 739], "list_init": 446, "list_destroi": 446, "list_insert": 446, "list_remov": 446, "list_count": 446, "list_print": 446, "keylen": 446, "cluster_c_memori": [447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "c_memory_malloc": [447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "c_memory_exercise_linked_list": [447, 451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "corollari": [448, 450, 756, 1039], "reorder": [448, 764, 817], "use_count": [448, 449, 749, 751, 781], "use_resourc": [448, 449], "do_something_with_shared_resourc": [448, 449], "conceiv": [448, 1056], "completion_flag": 448, "out_word": 448, "in_word": 448, "unforese": 448, "volatil": [449, 451, 460, 464, 469, 470, 692, 730, 758, 783, 785, 786, 843, 1005, 1182, 1185], "instr": [449, 467, 978, 1041], "pthread_mutex_t": [449, 762, 825, 978, 980], "use_count_mutex": 449, "pthread_mutex_initi": [449, 978], "pthread_mutex_lock": [449, 762, 978, 980], "pthread_mutex_unlock": [449, 762, 978, 980], "expens": [449, 456, 592, 605, 608, 698, 703, 739, 740, 749, 838, 975, 1184], "fetch_and_add": [449, 978], "__sync_fetch_and_add": [449, 759, 978, 979], "sheer": [449, 595], "neglig": 450, "penalti": 450, "memcpi": 450, "freeli": 450, "rearrang": [450, 642], "anim": 450, "textit": 450, "bogu": [450, 462, 603, 701, 702, 728, 939, 1005], "__pad0": 450, "__pad1": 450, "misalign": 450, "intrins": [451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "cluster_c_advanced_language_featur": [451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "c_advanced_language_features_volatil": [451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "c_advanced_language_features_atom": [451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "c_advanced_language_features_align": [451, 460, 464, 469, 470, 692, 730, 783, 785, 786], "matur": 452, "odditi": 452, "rectifi": 452, "fortran": 452, "lazy": [452, 733], "meant": [452, 1004], "shortcom": [452, 517, 678, 683, 686], "holidai": 452, "handcraft": [452, 500, 1066], "clariti": [453, 457, 962], "baud": 454, "idl": 454, "writing_request": 454, "reading_respons": 454, "wait_retri": 454, "protocol_engin": [454, 458], "deduc": [454, 690, 693, 718], "obligatori": 454, "anyhow": 454, "forgot": 454, "unambigu": [454, 690], "protocol_error": 454, "eat": [454, 462], "unintend": 456, "wwrite": 456, "max_bucket": 456, "pj": 456, "pointe": 456, "ppi": 456, "height": [457, 500, 609], "beman": 457, "daw": 457, "obfusc": 458, "ssize_t": [458, 550, 792, 951, 955, 956, 957, 959, 963, 964, 965, 966, 969, 971, 974, 997, 1000, 1001, 1004], "send_fram": 458, "eng": 458, "send_sum": 458, "v_int32": 458, "spectacular": 458, "adequ": 458, "unix_error": 458, "app_error": 458, "unix_error_cr": 458, "unix_error_ok": 458, "uerr": 458, "app_error_cr": 458, "app_os_error": 458, "impact": [458, 462], "enhanc": [458, 866], "beyond": [459, 959], "consider": [459, 893], "slowdown": 459, "0x400552": 459, "0x51bb072": 459, "0x4c28c6d": 459, "vg_replace_malloc": [459, 600], "0x400545": 459, "loss": [459, 941], "rec": [459, 1121, 1123], "uncov": 459, "readabilti": [460, 464, 469, 470, 692, 730, 783, 785, 786], "explict": [460, 464, 469, 470, 786], "cluster_c_program_san": [460, 464, 469, 470, 692, 730, 783, 785, 786], "c_program_sanity_const": [460, 464, 469, 470, 786], "c_program_sanity_stat": [460, 464, 469, 470, 786], "c_program_sanity_discrete_valu": [460, 464, 469, 470, 692, 730, 783, 785, 786], "c_program_sanity_integral_typ": [460, 464, 469, 470, 692, 730, 783, 785, 786], "c_program_sanity_introduct": [460, 464, 469, 470, 692, 730, 783, 785, 786], "c_program_sanity_explicit_type_safeti": [460, 464, 469, 470, 786], "c_program_sanity_struct_initi": [460, 464, 469, 470, 786], "c_program_sanity_valgrind": [460, 464, 469, 470, 786], "hotspot": [461, 465], "checksum": [461, 941, 989], "externel": 461, "sha1sum": [461, 989, 992, 995], "8g": 461, "0m38": 461, "0m3": 461, "0m0": 461, "perceiv": 461, "daze": 461, "mp3": 461, "018": 461, "mult": 462, "rumour": 462, "uncondit": 462, "finlin": 462, "o3": [462, 477, 784, 1173], "heurist": 462, "o1": 462, "magnitud": [462, 463], "overus": [462, 504, 1044, 1184], "spill": 462, "fira": 462, "rtfm": [462, 1077, 1171], "compromis": [462, 472, 500], "transit": [462, 487], "fmove": 462, "outweigh": 462, "thrash": [462, 992, 1182], "understood": [462, 472, 549, 754, 833, 1186], "misnom": [462, 1081], "o0": [462, 477], "unagress": 462, "chew": [462, 764], "agress": 462, "muchnik": 462, "levin": 462, "nearbi": 463, "bounc": [463, 852], "4x3": 463, "rectangular": 463, "cluster_c_perform": [464, 469, 470, 786], "c_performance_introduct": [464, 469, 470, 786], "c_performance_computebound": [464, 469, 470, 786], "c_performance_memori": [464, 469, 470, 786], "bust": 465, "haul": 465, "cheater": 465, "fallibl": 465, "supplement": 465, "gprof": [465, 467, 468, 469, 470, 786, 1182], "callgrind": [465, 468, 469, 470, 786, 1182], "oprofil": [465, 469, 470, 786, 1182], "gmon": 466, "spot": 466, "38000000": 466, "find_dupl": [466, 468], "criterion": [466, 633], "37000000": 466, "luck": [466, 937, 1028, 1030], "gprof2dot": 466, "tjpeg": 466, "predict": [467, 468, 1134, 1136, 1137], "sluggishli": 467, "16761": 467, "callgrind_annot": 467, "atstart": 467, "callgrind_control": 467, "nmi": 468, "ophelp": 468, "operf": 468, "oprofile_data": 468, "opreport": 468, "opannot": 468, "oparch": 468, "opgprof": 468, "Their": 468, "2085": 468, "2505": 468, "maskabl": 468, "callgraph": 468, "pxe": 468, "vmlinux": [468, 808], "debuginfo": 468, "userland": [468, 792], "routin": [468, 474, 579, 784, 825, 831, 836, 957, 993, 1025, 1125, 1127], "analyz": 468, "jcf": [468, 833, 859], "jxf": [468, 833, 859], "gdf": 468, "op2calltre": 468, "oprof": 468, "applet": 468, "viewabl": [468, 481], "kcachegrind": 468, "cluster_c_profil": [469, 470, 786], "c_profiling_callgrind": [469, 470, 786], "c_profiling_gprof": [469, 470, 786], "c_profiling_introduct": [469, 470, 786], "c_profiling_oprofil": [469, 470, 786], "worker": [472, 698], "consensu": [472, 495], "consent": [472, 1051], "male": [472, 1093], "prcess": 472, "obei": [472, 474], "antipattern": [472, 500], "gonna": 472, "indecis": [472, 1187], "road": 472, "manufactur": [472, 939], "pcb": [472, 937], "bom": 472, "requiremenet": 472, "yyyi": 473, "testabl": [473, 1165], "yagni": 473, "fraunhof": 473, "make_categori": 474, "outputfil": 474, "to_datetim": 474, "make_float": 474, "orpheum": 474, "goingout": 474, "hervi": 474, "sport": 474, "card": [474, 833, 862, 897, 899, 904, 905], "to_csv": 474, "read_from_csv": 474, "write_to_csv": 474, "clean_data": 474, "csvname_or_list_thereof": 474, "workaround": [474, 691, 694, 806, 1164], "read_from_dir": 474, "re_yyyy_mm": 474, "inputdir": 474, "libreoffic": 474, "monolith": [474, 1007], "factor": [474, 801, 802, 833], "test_data_clean": 474, "test_make_float": 474, "1999": 474, "test_date_convers": 474, "at666666666666666666": 474, "000009173": 474, "bawaatwwxxx": 474, "at211420020010848041": 474, "ausgleich": 474, "firmenkonto": 474, "test_input": 474, "read_from_csv_singl": 474, "read_from_csv_multipl": 474, "deliber": 474, "test_read_csv_singl": 474, "000009284": 474, "2371": 474, "000009283": 474, "at613400000005077508": 474, "world4you": 474, "writelin": [474, 1081, 1126, 1128], "test_read_csv_multipl": 474, "lines_2023_02": 474, "lines_2023_01": 474, "000009229": 474, "4111": 474, "bp": 474, "tankstel": 474, "000009228": 474, "at081400086210003454": 474, "\u00f6sterreichisch": 474, "gesundheitskass": 474, "_write_csv": 474, "read_from_csv_dir": 474, "test_read_csv_dir": 474, "testutil": 474, "write_csv": 474, "test_category_csv": 474, "000009168": 474, "000009169": 474, "2801": 474, "strassenbahn": 474, "eas": [474, 1143], "finer": 474, "refact": 474, "str_categori": 474, "cardunknown": 474, "flughafen": 474, "wien": 474, "test_more_of_it": 474, "000009153": 474, "parken": 474, "fl": 474, "inputread": 474, "recursivecsvinputread": 474, "singlecsvinputread": 474, "compositeinputread": 474, "input_abc": 474, "abstractmethod": [474, 1043], "multiplecsvinputread": 474, "test_input_abc": 474, "cmake_minimum_requir": [475, 1009, 1173], "identif": [475, 937, 1008, 1009], "abi": [475, 485, 811, 813, 953, 1008, 1009], "hello_nam": [475, 481], "hello_name_h": 475, "democonfig": [476, 478, 482, 483, 484], "libhello": [476, 477, 478, 480, 483, 486], "configure_fil": 476, "demo_version_major": 476, "demo_version_minor": 476, "cmake_current_binary_dir": 476, "demo_major": 476, "demo_minor": 476, "include_directori": [476, 487], "overkil": 476, "cmake_cxx_standard": [477, 1173], "dndebug": 477, "cmake_": 477, "_compiler_id": 477, "IF": [477, 482, 483, 484], "g3": 477, "strequal": 477, "cmake_c_compiler_id": 477, "cmake_c_flag": [477, 1173], "cmake_cxx_compiler_id": 477, "cmake_cxx_flag": [477, 1173], "howdi": [477, 601, 732, 734, 735, 873, 877, 963, 964, 966, 1048], "bullshithowdi": 477, "fatal_error": 477, "send_error": 477, "attract": [477, 694], "findsqlite3": 478, "sqlite3_include_dir": 478, "sqlite3_librari": 478, "typo": [478, 1044, 1045], "sqlite3_vers": 478, "sqlite3_found": 478, "olden": 478, "0x00007f76ae011000": 478, "libz": 478, "0x00007f76adef7000": 478, "cluster_cmak": [479, 786], "cmake_shared_libraries_preview": [479, 786], "cmake_librari": [479, 786], "cmake_configure_fil": [479, 786], "cmake_cxx_and_r": [479, 786], "cmake_external_depend": [479, 786], "cmake_targets_properti": [479, 786], "cmake_structur": [479, 786], "cmake_instal": [479, 786, 1008, 1009], "cmake_test": [479, 786], "cmake_optional_code_approach_2": [479, 786], "cmake_optional_code_approach_1": [479, 786], "cmake_optional_code_problem": [479, 786], "cmake_bas": [479, 786], "cmake_install_prefix": 480, "set_properti": [480, 485], "dbuild_shared_lib": [480, 485], "ON": [480, 483, 484, 485, 539, 540, 545, 991], "readelf": [480, 1007, 1019, 1024], "0x0000000000000001": [480, 1024], "0x000000000000001d": 480, "0x00007f773aefe000": 480, "ldconfig": [480, 1179], "sonam": [480, 485], "add_librari": [481, 483, 485, 487, 533, 578, 587, 1008, 1009], "0x29": 481, "collect2": [481, 667, 1024], "acycl": [481, 1009, 1023], "dag": 481, "jul": [481, 485], "tpng": [481, 1009], "descend": [482, 483, 484, 486, 533, 894, 1001], "use_blacklist": [482, 483], "macro_use_blacklist": [482, 484], "demo_use_blacklist": [482, 483], "namegreet": 482, "_blacklist": 482, "implic": [482, 817, 889, 950], "sayhello": 482, "is_forbidden": 482, "_name": [482, 523, 526, 530, 531, 532], "goodby": [482, 1005], "use_backlist": 482, "condition": 482, "duse_blacklist": [483, 484], "target_compile_opt": [483, 487], "manyfold": 484, "target_compile_definit": [484, 487], "lightli": 484, "symlink": [485, 784, 937, 1166, 1190], "build_shared_lib": 485, "qf": 485, "libboost_regex": 485, "lrwxrwxrwx": [485, 915, 937, 938, 939, 973, 1007], "rwxr": [485, 878, 880, 881, 890, 1007, 1019, 1058], "289264": 485, "temporarili": [485, 994, 1007], "project_vers": 485, "makefile2": 486, "compile_definit": 487, "dname": 487, "compile_opt": 487, "widest": 487, "asymmetr": 487, "enable_test": 488, "toplavel": 488, "set_tests_properti": [488, 1170, 1173], "pass_regular_express": 488, "ctest": 488, "cdash": 488, "kitwar": 488, "socialdb": [489, 492, 496, 521, 527], "i2csensor_vendor1": [490, 519], "0x37": 490, "suddenli": [490, 833, 873, 1139], "vener": [490, 511, 593, 608, 736], "damag": [490, 1153], "slip": 490, "cascad": 490, "i2csensor": [490, 504, 519], "create_i2c_sensor": 490, "i2csensorfactori": 490, "speak": [490, 920, 938, 1035, 1060], "vendor1": [490, 519], "abstract_factory_suit": 490, "instantiate_vendor1": 490, "i2csensorfactory_vendor1": 490, "i2c_factory_vendor1": 490, "i2c_sensor": 490, "assert_tru": [490, 545, 546, 551, 556, 558, 563, 592, 594, 609, 610, 611, 612, 695, 749, 750, 766, 784, 1171], "dynamic_cast": [490, 517, 531], "a_sensor": [490, 700], "vendor2": [490, 519], "instantiate_vendor2": 490, "i2csensorfactory_vendor2": [490, 519], "i2c_factory_vendor2": 490, "i2csensor_vendor2": [490, 519], "pu": 490, "tinto": 490, "fahrenheitsensor": [491, 520], "get_temperature_f": [491, 520], "formula": 491, "adapter_suit": 491, "constantfahrenheitsensor": 491, "assert_float_eq": [491, 494, 495, 497, 514, 515, 541, 542, 543, 544, 546, 549, 550, 561, 592, 594, 611, 697, 700, 766], "fahrenheitsensor_adapt": [491, 520], "adapter__is_a__sensor": 491, "adapter__knows__an_a_sensor": 491, "variablefahrenheitsensor": 491, "initial_valu": 491, "_valu": [491, 526], "change_temperatur": [491, 541, 549, 550], "adapter__definitely_knows__a_sensor__hel": 491, "multitud": 492, "socialdbcommand": [492, 521], "command_suit": 492, "2345110695": [492, 651], "socialdbinsertcommand": [492, 521], "3456060486": [492, 651], "insert_by_bas": 492, "socialdbfindcommand": [492, 521], "socialdbdropcommand": [492, 521], "notfound": [492, 493, 521, 683, 684, 685], "assert_throw": [492, 499, 784], "notinsert": [492, 493, 521], "bulkinsert": 492, "bulk_insert": 492, "socialdbbulkinsertcommand": [492, 521], "bic": 492, "std_initializer_list": 492, "bulk_insert__std_initializer_list": 492, "_msg": 493, "c_str": [493, 528, 550, 696, 701, 702, 1004], "_db": 493, "hypthet": 494, "composite_suit": 494, "cs1": 494, "cs2": 494, "recompil": [495, 1024], "decorator_suit": 495, "average_with_base_sensor": 495, "decoratedsensor": [495, 523], "propon": 495, "diagnost": [495, 624, 627], "decorated_sensor_const_added_function": 495, "decorated_sensor_random_added_function": 495, "decorated_sensor_const__is_a__sensor": 495, "decorated_sensor_random__is_a__sensor": 495, "assert_g": [495, 544, 561], "assert_l": [495, 544, 561], "average_with_decorated_sensor": 495, "mtqueue": [496, 514], "devis": 496, "notifi": [496, 762, 954, 1001, 1147], "cluster_cxx_design_pattern": [496, 510, 538, 590, 786], "cluster_linux": [496, 510, 538, 539, 540, 541, 542, 543, 544, 545, 548, 590, 763, 785, 786, 790, 793, 795, 798, 800, 803, 805, 807, 809, 810, 812, 814, 816, 818, 820, 822, 824, 826, 828, 830, 832, 834, 837, 839, 842, 844, 848, 851, 854, 856, 860, 861, 862, 863, 866, 867, 874, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 913, 923, 929, 935, 936, 941, 942, 943, 944, 945, 952, 958, 960, 968, 970, 972, 984, 987, 990, 992, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018], "cluster_linux_bas": [496, 510, 538, 539, 540, 541, 542, 543, 544, 545, 548, 590, 763, 785, 786, 856, 860, 861, 862, 863, 866, 867, 874, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 913, 923, 929, 941, 942, 943, 944, 945, 952, 958, 960, 968, 970, 984, 987, 990, 992, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018], "cluster_linux_basics_shel": [496, 510, 538, 539, 540, 541, 542, 543, 544, 545, 548, 590, 763, 785, 786, 856, 860, 861, 862, 863, 866, 867, 874, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 913, 923, 929, 952, 958, 960, 968, 970, 984, 987, 990, 992, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018], "cluster_linux_basics_intro": [496, 510, 538, 539, 540, 541, 542, 543, 544, 545, 548, 590, 763, 785, 786, 856, 860, 861, 862, 863, 866, 867, 874, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 913, 923, 929, 941, 942, 943, 944, 945, 952, 958, 960, 968, 970, 984, 987, 990, 992, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018], "cluster_linux_toolchain": [496, 510, 538, 539, 540, 541, 542, 543, 544, 545, 548, 590, 763, 785, 786, 863, 866, 867, 929, 952, 958, 960, 968, 970, 984, 987, 990, 992, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018], "cluster_cxx03": [496, 510, 538, 539, 540, 541, 542, 543, 544, 545, 548, 555, 557, 590, 598, 613, 616, 619, 635, 641, 645, 653, 654, 655, 657, 658, 660, 663, 669, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 699, 730, 746, 755, 763, 771, 783, 785, 786], "cluster_cxx03_inheritance_oo": [496, 510, 538, 548, 590, 663, 687, 771, 785, 786], "cluster_cxx03_data_encapsul": [496, 510, 538, 539, 540, 541, 542, 543, 544, 545, 548, 555, 557, 590, 598, 613, 616, 619, 635, 641, 645, 654, 657, 658, 663, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 699, 730, 746, 755, 763, 771, 783, 785, 786], "cluster_cxx": [496, 510, 538, 539, 540, 541, 542, 543, 544, 545, 548, 555, 557, 590, 786], "cluster_cxx_exercis": [496, 510, 538, 539, 540, 541, 542, 543, 544, 545, 548, 555, 557, 590, 786], "cluster_cxx_exercises_design_pattern": [496, 510, 538, 590, 786], "cxx_design_patterns_decor": [496, 510, 538, 590, 786], "cxx_design_patterns_adapt": [496, 510, 538, 590, 786], "cxx_design_patterns_sensor_hierarchi": [496, 510, 538, 590, 786], "cxx_design_patterns_uml": [496, 510, 538, 590, 786], "cxx03_inheritance_oo_interfac": [496, 510, 538, 548, 590, 663, 687, 771, 785, 786], "cxx_design_patterns_singleton": [496, 510, 538, 590, 786], "cxx_design_patterns_abstract_factori": [496, 510, 538, 590, 786], "cxx_design_patterns_command": [496, 510, 538, 590, 786], "cxx_design_patterns_composit": [496, 510, 538, 590, 786], "cxx_design_patterns_heating_screenplai": [496, 786], "cxx_design_patterns_oo_principl": [496, 786], "cxx_design_patterns_proxi": [496, 510, 538, 590, 786], "cxx_design_patterns_observ": [496, 510, 538, 590, 786], "cxx_exercises_design_patterns_proxy_round": [496, 510, 538, 590, 786], "cxx_design_patterns_interpret": [496, 510, 538, 590, 786], "linux_basics_shell_cwd": [496, 510, 538, 539, 540, 541, 542, 543, 544, 545, 548, 590, 763, 785, 786, 860, 861, 862, 863, 866, 867, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 897, 898, 899, 900, 901, 902, 903, 904, 905, 907, 908, 909, 910, 911, 913, 929, 952, 958, 960, 968, 970, 984, 987, 990, 992, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018], "linux_basics_shell_path": [496, 510, 538, 539, 540, 541, 542, 543, 544, 545, 548, 590, 763, 785, 786, 860, 861, 862, 863, 866, 867, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 913, 929, 952, 958, 960, 968, 970, 984, 987, 990, 992, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018], "linux_basics_shell_commandlin": [496, 510, 538, 539, 540, 541, 542, 543, 544, 545, 548, 590, 763, 785, 786, 856, 860, 861, 862, 863, 866, 867, 874, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 913, 923, 929, 952, 958, 960, 968, 970, 984, 987, 990, 992, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018], "linux_basics_intro_process": [496, 510, 538, 539, 540, 541, 542, 543, 544, 545, 548, 590, 763, 785, 786, 860, 861, 862, 863, 866, 867, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 897, 898, 899, 900, 901, 902, 903, 904, 905, 907, 908, 909, 910, 911, 913, 929, 941, 942, 943, 944, 945, 952, 958, 960, 968, 970, 984, 987, 990, 992, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018], "linux_basics_shell_file_dir_create_rm": [496, 510, 538, 539, 540, 541, 542, 543, 544, 545, 548, 590, 763, 785, 786, 860, 861, 862, 863, 866, 867, 888, 897, 898, 899, 900, 901, 902, 903, 904, 905, 907, 913, 929, 952, 958, 960, 968, 970, 984, 987, 990, 992, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018], "linux_basics_intro_overview": [496, 510, 538, 539, 540, 541, 542, 543, 544, 545, 548, 590, 763, 785, 786, 856, 860, 861, 862, 863, 866, 867, 874, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 913, 923, 929, 941, 942, 943, 944, 945, 952, 958, 960, 968, 970, 984, 987, 990, 992, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018], "linux_toolchain_static_librari": [496, 510, 538, 539, 540, 541, 542, 543, 544, 545, 548, 590, 786, 929, 1009, 1012, 1014, 1015, 1017], "linux_toolchain_separate_compil": [496, 510, 538, 539, 540, 541, 542, 543, 544, 545, 548, 590, 786, 929, 1009, 1012, 1013, 1014, 1015, 1017], "linux_toolchain_bas": [496, 510, 538, 539, 540, 541, 542, 543, 544, 545, 548, 590, 763, 785, 786, 863, 866, 867, 929, 952, 958, 960, 968, 970, 984, 987, 990, 992, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018], "linux_toolchain_cmake_loc": [496, 510, 538, 539, 540, 541, 542, 543, 544, 545, 548, 590, 786, 929, 1009, 1017], "cxx03_introduct": [496, 510, 538, 539, 540, 541, 542, 543, 544, 545, 548, 555, 557, 590, 598, 613, 616, 619, 635, 641, 645, 654, 657, 658, 663, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 699, 730, 746, 755, 763, 771, 783, 785, 786], "cxx03_inheritance_oo_destructor": [496, 510, 538, 548, 590, 663, 687, 771, 785, 786], "cxx03_inheritance_oo_bas": [496, 510, 538, 548, 590, 663, 687, 771, 785, 786], "cxx03_data_encapsulation_ctor_dtor": [496, 510, 538, 548, 590, 598, 663, 675, 676, 677, 678, 679, 680, 682, 683, 684, 685, 686, 687, 699, 730, 746, 755, 763, 771, 783, 785, 786], "cxx03_inheritance_oo_polymorph": [496, 510, 538, 548, 590, 663, 687, 771, 785, 786], "cxx03_inheritance_oo_virtual_method": [496, 510, 538, 548, 590, 663, 687, 771, 785, 786], "cxx03_inheritance_oo_virtual_destructor": [496, 510, 538, 548, 590, 663, 687, 771, 785, 786], "cxx03_data_encapsulation_classes_object": [496, 510, 538, 539, 540, 541, 542, 543, 544, 545, 548, 555, 557, 590, 598, 613, 616, 619, 635, 641, 645, 654, 657, 658, 663, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 699, 730, 746, 755, 763, 771, 783, 785, 786], "cxx03_data_encapsulation_c": [496, 510, 538, 539, 540, 541, 542, 543, 544, 545, 548, 555, 557, 590, 598, 613, 616, 619, 635, 641, 645, 654, 657, 658, 663, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 699, 730, 746, 755, 763, 771, 783, 785, 786], "cxx03_data_encapsulation_ctor_custom": [496, 510, 538, 541, 544, 548, 590, 598, 663, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 699, 730, 746, 755, 763, 771, 783, 785, 786], "cxx03_data_encapsulation_ctor_default": [496, 510, 538, 548, 590, 598, 663, 675, 676, 677, 678, 679, 680, 682, 683, 684, 685, 686, 687, 699, 730, 746, 755, 763, 771, 783, 785, 786], "cxx_exercises_sensor_interfac": [496, 510, 538, 548, 590, 786], "sensorread": 497, "chrono_liter": [497, 690, 762, 764, 765], "demologg": 497, "cerr": [497, 536, 615, 684, 754, 764, 937, 971, 974], "demovaluestor": 497, "_store": 497, "namedsensor": 497, "_logger": 497, "_value_stor": 497, "sensora": 497, "sensorb": 497, "sensorc": 497, "200000": [497, 938, 1136], "this_thread": [497, 690, 751, 762, 764], "sleep_for": [497, 690, 751, 762, 764], "12597": 497, "valuestor": 497, "2895": 497, "158243": 497, "cassert": [497, 639, 680, 683, 685, 691, 764], "boss": 497, "v3": 497, "abort": [497, 516, 517, 600, 728, 951], "mocklogg": 497, "lines_log": 497, "mockvaluestor": 497, "sensorreader_suit": 497, "141320": 497, "memcheck": [497, 600, 749], "detector": [497, 600, 749], "myobserv": 499, "socialdb_observ": [499, 527], "newcitizenobserv": [499, 527], "new_citizen": 499, "_new_citizen_svnr": 499, "new_citizen_ad": [499, 527], "observer_suit": 499, "register_on": 499, "register_new_citizen_notif": [499, 527], "register_mani": 499, "observer1": 499, "observer2": 499, "register_dupl": 499, "observeralreadyregist": [499, 527], "unregister_new_citizen_notif": [499, 527], "unregister_not_regist": 499, "observernotregist": [499, 527], "addict": [500, 872, 893, 1157, 1165], "bertrand": 500, "barbara": 500, "polish": 500, "be_sick": 503, "insur": [503, 516, 517, 518, 530, 531, 532], "teardown": [503, 550, 1028, 1165, 1175, 1177], "purest": 504, "lightest": 504, "pidcontrol": 504, "cluster_cxx_exercises_design_patterns_solut": [510, 538, 590, 786], "cxx_exercises_design_patterns_interpreter_and_adapt": [510, 538, 590, 786], "cxx_exercises_design_patterns_interpreter_bas": [510, 538, 590, 786], "cxx_exercises_design_patterns_singleton_flexible_strict": [510, 538, 590, 786], "cxx_exercises_design_patterns_singleton_inflex": [510, 538, 590, 786], "cxx_exercises_design_patterns_singleton_flex": [510, 538, 590, 786], "cxx_exercises_design_patterns_proxy_remot": [510, 538, 590, 786], "cxx_exercises_design_patterns_adapt": [510, 538, 590, 786], "cxx_exercises_design_patterns_composit": [510, 538, 590, 786], "cxx_exercises_design_patterns_observ": [510, 538, 590, 786], "cxx_exercises_design_patterns_decor": [510, 538, 590, 786], "cxx_exercises_design_patterns_command": [510, 538, 590, 786], "cxx_exercises_design_patterns_abstract_factori": [510, 538, 590, 786], "cxx_exercises_design_patterns_solutions_proxy_round": [510, 538, 590, 786], "cxx_exercises_design_patterns_solutions_interpreter_and_adapt": [510, 538, 590, 786], "cxx_exercises_design_patterns_solutions_singleton_inflex": [510, 538, 590, 786], "cxx_exercises_design_patterns_solutions_interpreter_bas": [510, 538, 590, 786], "cxx_exercises_design_patterns_solutions_singleton_flexible_strict": [510, 538, 590, 786], "cxx_exercises_design_patterns_solutions_singleton_flex": [510, 538, 590, 786], "cxx_exercises_design_patterns_solutions_proxy_remot": [510, 538, 590, 786], "cxx_exercises_design_patterns_solutions_composit": [510, 538, 590, 786], "cxx_exercises_design_patterns_solutions_command": [510, 538, 590, 786], "cxx_exercises_design_patterns_solutions_abstract_factori": [510, 538, 590, 786], "cxx_exercises_design_patterns_solutions_observ": [510, 538, 590, 786], "cxx_exercises_design_patterns_solutions_decor": [510, 538, 590, 786], "cxx_exercises_design_patterns_solutions_adapt": [510, 538, 590, 786], "cla": 511, "roundingsensor": [511, 515, 529], "r1": [511, 612, 703], "r2": [511, 612, 703], "r3": 511, "sensorvalueexpress": [511, 525], "e1_e2": 511, "e1_e2_e3": 511, "num_measur": 511, "v_avg": 511, "v_ass": 511, "combinatin": 512, "interpreter_suit": 512, "e_lh": 512, "e_rh": 512, "e_add": 512, "e_sub": 512, "mul": 512, "e_mul": 512, "e_div": 512, "arithemet": 512, "arith": [512, 584, 585, 621, 622, 623, 624, 629], "combined_arith": 512, "l7": 512, "a_7_plus_3": 512, "s_3_minus_1": 512, "variable_not_set": 512, "analogi": [512, 536, 939, 1001, 1041], "assignment_valu": 512, "variable_assign": 512, "ass": 512, "variable_used_as_express": 512, "ass_v1": 512, "ass_v2": 512, "reachabl": [514, 749, 937, 939], "remoteadapt": [514, 528], "response_promis": 514, "_adapt": 514, "_queue": [514, 762], "_thread": 514, "fulfil": [514, 549], "proxy_remote_suit": 514, "_c": 514, "remotesensoradapt": [514, 528], "remotesensor": [514, 528], "remote_sensor__is_a__sensor": 514, "somth": 514, "simplist": 514, "fullfil": 515, "proxy_round_suit": 515, "round_down": 515, "round_up": 515, "rouding_sensor__is_a__sensor": 515, "advis": [516, 1127], "hypothet": [516, 548, 549, 599, 930], "fee": 516, "socialinsur": [516, 517, 518, 532], "oegk": [516, 517], "startup": [516, 517, 518, 530, 865, 1001, 1007, 1039], "set_inst": [516, 517, 530], "make_uniqu": [516, 530, 782], "socinsur": [517, 531], "inisur": 517, "reimplement": [517, 686], "compiabl": [517, 531], "iface_inst": [517, 531], "svs_instanc": [517, 531], "oegk_inst": [517, 531], "another_inst": [517, 518, 531, 532], "1485": [517, 518], "unset": [517, 980], "sozialversicherung": [518, 532], "unrealist": 518, "adapte": 520, "_adapte": 520, "_svnr": 521, "_firstnam": [521, 651, 1051], "_lastnam": [521, 651, 1051], "_result": 521, "_command": 521, "get_if": [521, 776], "decoratedconstantsensor": 523, "sstream": [523, 528, 610, 612], "iomanip": 523, "ostringstream": [523, 528, 609, 610, 611, 612], "decoratedrandomsensor": 523, "_variabl": 526, "_lh": 526, "_rh": 526, "_context": 526, "_var": 526, "_exp": 526, "stdexcept": [526, 528, 530, 531, 532, 550, 784], "_new_citizen_observ": 527, "num_eras": 527, "_server": 528, "cstdio": 528, "num_item": 528, "sscanf": 528, "cmath": [529, 594, 602, 603, 611, 697, 713, 714, 715, 716, 753], "_instanc": [530, 531, 532], "_databas": [530, 531, 532], "0l": [530, 531], "cstdlib": [531, 550], "ssocinsur": 531, "toi": [533, 690, 1005], "millidegre": 533, "parameteriz": [534, 1133], "loop_and_measur": 534, "niter": 534, "counterpart": 535, "stod": 536, "uniform_real_distribut": [536, 544, 748], "default_random_engin": [536, 544, 748], "random_devic": [536, 544, 748], "_distribut": [536, 748], "_engin": [536, 748, 1153], "_y": [536, 594, 595, 597, 599, 601, 602, 603, 604, 606, 608, 618, 633, 697, 712, 714, 715, 716], "spit": [536, 1139], "cluster_cxx_exercises_stl": [538, 555, 557, 590, 786], "cluster_cxx_exercises_stl_sensor_repositori": [538, 555, 557, 590, 786], "cluster_cxx_exercises_fh_sensor_first_tri": [538, 590, 786], "cluster_cxx03_except": [538, 555, 557, 590, 616, 619, 635, 641, 645, 654, 657, 658, 675, 682, 683, 684, 685, 686, 687, 786], "cluster_cxx03_functions_and_method": [538, 555, 557, 590, 613, 616, 619, 635, 641, 645, 654, 657, 658, 672, 673, 675, 676, 678, 679, 680, 682, 683, 684, 685, 686, 687, 699, 730, 746, 755, 763, 783, 785, 786], "cluster_cxx03_stl": [538, 555, 557, 590, 635, 641, 645, 653, 654, 655, 657, 658, 675, 682, 683, 684, 685, 686, 687, 786], "cluster_cxx03_stl_algorithm": [538, 555, 590, 635, 654, 657, 658, 687, 786], "cluster_cxx03_stl_associative_contain": [538, 555, 557, 590, 645, 654, 658, 687, 786], "cluster_cxx03_templ": [538, 555, 557, 590, 619, 635, 641, 645, 654, 657, 658, 675, 682, 683, 684, 685, 686, 687, 786], "cluster_linux_basics_permiss": [538, 590, 763, 785, 786, 863, 866, 867, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 929, 958, 960, 968, 970, 984, 987, 990, 992], "cluster_linux_sysprog": [538, 590, 763, 785, 786, 863, 866, 867, 929, 952, 958, 960, 968, 970, 972, 984, 987, 990, 992], "cluster_linux_sysprog_bas": [538, 590, 763, 785, 786, 863, 866, 867, 929, 952, 958, 960, 968, 970, 984, 987, 990, 992], "cluster_linux_sysprog_fileio": [538, 590, 763, 785, 786, 863, 866, 867, 929, 958, 960, 968, 970, 984, 987, 990, 992], "cxx_exercises_sensor_const_nopoli": [538, 542, 544, 590, 786], "cxx_exercises_sensor_avg_nopoli": [538, 541, 590, 786], "cxx_exercises_sensor_mock_nopoli": [538, 539, 540, 541, 543, 590, 786], "cxx03_data_encapsulation_initializer_list": [538, 541, 544, 590, 598, 687, 786], "cxx_exercises_sensor_w1_factori": [538, 590, 786], "cxx_exercises_sensor_w1": [538, 590, 786], "cxx_exercises_switch_mock_nopoli": [538, 539, 540, 545, 590, 786], "cxx_exercises_sensor_random_nopoli": [538, 544, 590, 786], "cxx_exercises_hysteresis_nopoli": [538, 540, 590, 786], "linux_sysprog_fileio_exercise_w1_sensor": [538, 590, 786, 929, 968, 970, 987], "cxx_exercises_oo_shap": [538, 590, 786], "cxx03_functions_and_methods_stat": [538, 555, 557, 590, 613, 616, 619, 635, 641, 645, 654, 657, 658, 675, 682, 683, 684, 685, 686, 687, 786], "cxx03_functions_and_methods_oper": [538, 555, 557, 590, 613, 616, 619, 635, 641, 645, 654, 657, 658, 675, 682, 683, 684, 685, 686, 687, 786], "cxx03_functions_and_methods_const": [538, 555, 557, 590, 613, 616, 619, 635, 641, 645, 654, 657, 658, 675, 678, 679, 682, 683, 684, 685, 686, 687, 699, 730, 746, 755, 763, 783, 785, 786], "cxx03_functions_and_methods_method": [538, 555, 557, 590, 613, 616, 619, 635, 641, 645, 654, 657, 658, 675, 676, 678, 679, 680, 682, 683, 684, 685, 686, 687, 699, 730, 746, 755, 763, 783, 785, 786], "cxx_exercises_display_led_stripe_nopoli": [538, 539, 590, 786], "cxx_exercises_stl_filter_greater_10": [538, 555, 590, 786], "cxx_exercises_stl_filter_odd": [538, 555, 590, 786], "cxx_exercises_stl_filter_gener": [538, 555, 590, 786], "cxx_exercises_stl_map": [538, 555, 557, 590, 786], "cxx03_stl_associative_containers_map": [538, 555, 557, 590, 645, 654, 658, 687, 786], "cxx_exercises_stl_uniq": [538, 555, 590, 786], "cxx_exercises_stl_algo": [538, 555, 590, 786], "cxx03_stl_vector_copy_etc": [538, 555, 590, 654, 658, 687, 786], "cxx03_stl_algorithm_find": [538, 555, 590, 635, 654, 658, 687, 786], "cxx03_stl_algorithm_copi": [538, 555, 590, 635, 654, 658, 687, 786], "cxx_exercises_stl_vector": [538, 555, 590, 786], "cxx_exercises_stl_sensor_repository_remove_not_found": [538, 555, 557, 590, 786], "cxx_exercises_stl_sensor_repository_remove_sunni": [538, 555, 557, 590, 786], "cxx_exercises_stl_sensor_repository_lookup_not_found": [538, 555, 557, 590, 786], "cxx_exercises_stl_sensor_repository_lookup_sunni": [538, 555, 557, 590, 786], "cxx_exercises_stl_sensor_repository_insert_sunni": [538, 555, 557, 590, 786], "cxx_exercises_stl_sensor_repository_memory_leak": [538, 555, 557, 590, 786], "cxx_exercises_stl_sensor_repository_insert_no_overwrit": [538, 555, 557, 590, 786], "cxx_exercises_stl_sensor_repository_size_const": [538, 555, 557, 590, 786], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo": [538, 590, 786], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo_loop_funct": [538, 590, 786], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo_no_polymorph": [538, 590, 786], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo_random_sensor": [538, 590, 786], "cxx03_exceptions_try_catch": [538, 555, 557, 590, 616, 619, 635, 641, 645, 654, 657, 658, 675, 682, 683, 684, 685, 686, 687, 786], "cxx03_exceptions_bas": [538, 555, 557, 590, 616, 619, 635, 641, 645, 654, 657, 658, 675, 682, 683, 684, 685, 686, 687, 786], "cxx03_functions_and_methods_refer": [538, 555, 557, 590, 613, 616, 619, 635, 641, 645, 654, 657, 658, 675, 678, 679, 682, 683, 684, 685, 686, 687, 699, 730, 746, 755, 763, 783, 785, 786], "cxx03_functions_and_methods_thi": [538, 555, 557, 590, 613, 616, 619, 635, 641, 645, 654, 657, 658, 675, 678, 679, 682, 683, 684, 685, 686, 687, 699, 730, 746, 755, 763, 783, 785, 786], "cxx03_functions_and_methods_overload": [538, 555, 557, 590, 613, 616, 619, 635, 641, 645, 654, 657, 658, 672, 673, 675, 676, 678, 679, 680, 682, 683, 684, 685, 686, 687, 699, 730, 746, 755, 763, 783, 785, 786], "cxx03_stl_basic": [538, 555, 557, 590, 635, 641, 645, 654, 657, 658, 675, 682, 683, 684, 685, 686, 687, 786], "cxx03_templates_class_templ": [538, 555, 557, 590, 619, 635, 641, 645, 654, 657, 658, 675, 682, 683, 684, 685, 686, 687, 786], "cxx03_stl_associative_containers_bas": [538, 555, 557, 590, 645, 654, 658, 687, 786], "cxx03_templates_function_templ": [538, 555, 557, 590, 619, 635, 641, 645, 654, 657, 658, 675, 682, 683, 684, 685, 686, 687, 786], "linux_basics_shell_l": [538, 590, 763, 785, 786, 860, 861, 862, 863, 866, 867, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 897, 900, 901, 904, 905, 907, 908, 909, 910, 911, 913, 929, 958, 960, 968, 970, 984, 987, 990, 992], "linux_basics_permissions_bas": [538, 590, 763, 785, 786, 863, 866, 867, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 929, 958, 960, 968, 970, 984, 987, 990, 992], "linux_sysprog_basics_syscal": [538, 590, 763, 785, 786, 863, 866, 867, 929, 952, 958, 960, 968, 970, 984, 987, 990, 992], "linux_sysprog_basics_groupnod": [538, 590, 763, 785, 786, 863, 866, 867, 929, 952, 958, 960, 968, 970, 984, 987, 990, 992], "linux_sysprog_basics_errorhandl": [538, 590, 763, 785, 786, 863, 866, 867, 929, 952, 958, 960, 968, 970, 984, 987, 990, 992], "linux_sysprog_fileio_bas": [538, 590, 763, 785, 786, 863, 866, 867, 929, 958, 960, 968, 970, 984, 987, 990, 992], "mockswitch_nopoli": [539, 540, 545], "display_led_stripe_nopoly_suite__somewhere_in_the_middl": 539, "nopoli": [539, 540, 541, 542, 543, 544, 545], "display_led_stripe_nopoly_suit": 539, "somewhere_in_the_middl": 539, "sw0": 539, "sw1": 539, "sw2": 539, "sw3": 539, "sw4": 539, "sw5": 539, "sw6": 539, "sw7": 539, "display_led_stripe_nopoly_suite__below_rang": 539, "below_rang": 539, "display_led_stripe_nopoly_suite__above_rang": 539, "above_rang": 539, "display_led_stripe_nopoly_suite__mov": 539, "movement": [539, 930], "set_temperatur": [539, 540, 541, 543], "display_led_stripe_nopoly_suite__vari": 539, "variation_2_switch": 539, "variation_interval_not_from_0": 539, "thermostat": 540, "threshold": 540, "nop_when_within_rang": 540, "hysteresis_suit": 540, "hyst": 540, "falls_below_rang": 540, "rises_above_rang": 540, "rises_above_range_when_on": 540, "sensor_avg_nopoly_suit": 541, "sensor_const_nopoly_suit": 542, "subsequ": 543, "sensor_mock_nopoly_suit": 543, "sensor_random_suit": [544, 548, 549], "uniformli": 544, "rd": 544, "obtain": [544, 761, 1081], "rng": 544, "tailor": 544, "switch_mock_suit": 545, "initial_st": [545, 1176], "set_on_off": 545, "initial_failur": 546, "failit": 546, "point_suit": [546, 610], "ctor_and_gett": 546, "ctor_and_getters_const": 546, "default_ctor": [546, 609, 610, 611, 612, 766], "equal_method": 546, "p3": 546, "p4": [546, 893], "assert_fals": [546, 551, 556, 558, 563, 592, 609, 610, 611, 612, 784], "equal_method_const": 546, "operator_equ": 546, "operator_equals_const": 546, "move_method": 546, "operator_plus_equ": 546, "add_method": 546, "new_p": 546, "add_method_const": 546, "operator_plu": [546, 609, 610, 611], "operator_plus_const": 546, "radiu": 546, "circle_suit": 546, "ctor_and_getters_using_operator_equ": 546, "14159": 546, "53981634": 546, "area_const": 546, "square_suit": 546, "bottom_left": [546, 612], "side_length": 546, "shape_suit": 546, "circle_is_a_shap": 546, "square_is_a_shap": 546, "area_is_shape_functionality__circl": 546, "area_is_shape_functionality__squar": 546, "human": [547, 549, 754, 893, 915, 1007, 1052, 1138], "ineffici": [547, 670, 850, 969], "epath": 547, "bag_copy_suit": [547, 780], "find_by_int_ok": [547, 780, 781, 782], "find_by_int_nok": [547, 780, 781, 782], "remove_by_int_ok": [547, 780, 781, 782], "bag_unique_suit": [547, 782], "bag_shared_suit": [547, 781], "insert_const_ref": [547, 781], "insert_mov": [547, 781], "unrel": [548, 579, 588, 754, 771, 772, 776, 785, 786, 991, 1001, 1030, 1047, 1145], "tyo": 548, "sensor_const_suit": [548, 549], "is_a_sensor": [548, 549], "5731": 548, "aptli": 549, "23062": 549, "w1sensorfactori": 549, "find_by_address": 549, "sensor_w1_factory_suit": 549, "fstream": [549, 784], "tmpdir_fixtur": 549, "device_dir": 549, "create_directori": 549, "ofstream": [549, 784], "42459": 549, "temp_milli": [549, 550], "w1_fs_root": 549, "sensor_factori": 549, "0x02131d959eaa": 549, "assert_n": [549, 585, 608, 609, 744, 766, 781, 782], "horizon": 549, "0x012345678901": 549, "w1_sensor_suit": [549, 550], "test_read_sensor": [549, 550], "36700": 549, "basedir": 549, "0x2131d959eaa": 549, "dcmake_toolchain_fil": [550, 1008, 1022], "20687": 550, "write_temperatur": 550, "thaht": 550, "filename_pattern": 550, "xxxxxx": 550, "mkstemp": 550, "unlink": [550, 999, 1001], "to_str": [550, 670], "off_t": [550, 959, 969, 974, 1000], "lseek": [550, 969, 974, 1000], "seek_set": [550, 959, 974, 1000], "nwritten": [550, 963, 964, 965, 966, 971, 974, 1000, 1004], "algo": [551, 584, 585, 620, 621], "copy_into_vector": 551, "stl_exercises_suit": [551, 552, 553, 554, 556, 558, 559, 560, 561, 563, 564, 565, 566, 567], "required_cont": 551, "find_in_vector": 551, "my_vec": [551, 567], "wladimir": 551, "sort_in_plac": 551, "required_output": [551, 552, 553, 554, 566], "orig_input": [551, 552, 553, 554, 566], "alement": 552, "is_odd": 552, "filter_greater_10": 553, "filter_odd": 554, "map_insert": 556, "my_map": [556, 646, 647, 648, 649, 650], "map_insert_simpl": 556, "insert_check_dupl": 556, "map_insert_check_dupl": 556, "insert_remove_by_kei": 556, "map_insert_remove_by_kei": 556, "map_remove_by_kei": 556, "map_find": 556, "sensorrepositori": [557, 558, 559, 560, 561, 562, 563, 564, 565], "decript": 557, "sensor_repository_insert_dupl": 558, "add_sensor": [558, 559, 560, 561, 563, 564], "ofen": [558, 559, 560, 561, 563, 564], "weltraum": [558, 559, 560, 561, 563, 564], "mond": [558, 563], "sucess": 558, "sensor_repository_insert": 559, "sensor_repository_lookup_neg": 560, "get_sensor": [560, 561, 564], "sensor_repository_lookup_posit": 561, "complaint": 562, "ish": 562, "sensor_repository_remove_nonexist": 563, "remove_sensor": [563, 564], "sensor_repository_remov": 564, "sensor_repository_size_const": 565, "vector_append": 567, "vector_join": 567, "joined_cont": 567, "userdb_map": 568, "userdb_vector": 568, "dan": 568, "sak": 568, "cppcon": [568, 695, 697, 698, 711, 718, 736, 747, 768, 771], "transcrib": 568, "mallocfre": 573, "arrayofinteg": 573, "memoryleak": 573, "arrayboundswrit": 573, "newdelet": 573, "singleinteg": 573, "deletemismatch": 573, "thing1": [575, 576], "thing2": [575, 576], "global_str": 576, "__have_thing_h__": 576, "_content": 576, "denstruct": 576, "destruct": [576, 597, 667, 698, 748, 875], "essenc": [576, 1171], "collaps": 579, "thoroughli": [579, 937], "_mem": [582, 728], "determinist": [582, 747, 761, 1028, 1079], "maybeown": 582, "pointerarithmet": 585, "bugp": 585, "105ff": 585, "num_el": 585, "another_arrai": 585, "yet_another_arrai": 585, "108ff": 585, "basics_cxx03": 585, "basics_cxx11": 585, "cbegin": [585, 638, 657, 694, 705], "my_copi": 585, "naivecopi": 585, "cend": [585, 638, 657, 694], "algocopi": 585, "backinsert": 585, "back_insert_iter": [585, 626], "nah": [585, 1173], "insertfind": 585, "make_pair": [585, 648, 651, 739], "erasebyposit": 585, "erasebykei": 585, "domin": 591, "bjarn": [150, 591, 771], "stroustrup": [150, 591, 771], "1985": 591, "2003": [591, 1184], "point_c_suit": [592, 594], "struct_initi": 592, "point_init_default": 592, "c_default_constructor_init": 592, "point_create_default": 592, "c_default_constructor_cr": 592, "point_creat": [592, 594], "c_constructor": [592, 594], "eq": [592, 608, 610, 612], "point_equ": 592, "point_not_equ": 592, "eq_n": 592, "point_mov": [592, 594, 602, 604], "point_add": 592, "point_sub": 592, "add_sub": 592, "point_dist": 592, "point_ab": [592, 594], "hyp": [592, 594, 602], "unwant": [592, 643, 739, 811, 1030, 1051, 1075], "cpp_copy_suit": 593, "generated_copy_ctor": 593, "copy1": [593, 749], "copy2": [593, 749], "copy3": 593, "manual_copy_suit": 593, "copy_ctor": [593, 748], "assignment_oper": 593, "earlier": 594, "point_h": [594, 602, 603], "point_cpp_suit": 594, "constructor_coordin": 594, "inaccessibil": 594, "move_op_pluseq": 594, "whenev": [595, 602, 612, 698], "sth": 596, "dirty_stack": 596, "use_uniniti": 596, "onward": [596, 600, 607], "nw": 597, "memberwis": 597, "_c_str": [597, 600, 701], "cxx03_data_encapsulation_object_copi": [598, 687, 699, 730, 746, 755, 763, 783, 785, 786], "cxx03_data_encapsulation_copy_bas": [598, 687, 786], "string_h": [600, 701], "cstring": [600, 701, 702, 735], "tcach": [600, 728], "221601": 600, "julian": [600, 749], "seward": [600, 749], "libvex": [600, 749], "realloc": [600, 643], "0x484465b": 600, "1103": 600, "0x401210": 600, "0x401194": 600, "0x4dc8c80": 600, "0x401188": 600, "0x484222f": 600, "0x4011c5": 600, "0x40116f": 600, "freed": [600, 792, 962, 1028], "destroi": [600, 662, 684, 703, 720, 735, 750, 761, 823], "221807": 600, "twostr": 600, "twotwostr": 600, "s21": 600, "s22": 600, "segfault": [600, 847, 1005], "paraamet": 601, "__pretty_function__": 601, "0000000000401176": 601, "_z1fi": 601, "00000000004011a0": 601, "_z1fpc": 601, "demangl": 601, "anywher": [602, 1026], "fab": [602, 603], "distance_origin": [602, 603, 753], "hid": 602, "standardes": 602, "d_orig": 603, "fpermiss": [603, 740], "arrog": 603, "goodi": [603, 931], "pascal": 605, "uninitil": 605, "pass_by_copi": 605, "references_suit": 605, "voila": [605, 937, 995, 1008, 1009, 1019, 1050], "tediou": [605, 956, 1009, 1083], "pass_by_point": 605, "pass_by_refer": 605, "pass_by_const_point": 605, "const_point": 605, "pass_by_const_refer": 605, "const_refer": 605, "pass_by_copy_expens": 605, "copy_expens": 605, "pass_by_const_reference_cheap": 605, "const_reference_cheap": 605, "addend": [606, 733, 753], "straightforwardli": [606, 1088], "add_point": 606, "static_suit": 606, "global_funct": 606, "static_method": 606, "bss": 607, "definition1": 607, "definition2": 607, "forbid": 607, "trickeri": 607, "points_equ": 608, "oddli": 608, "operators_suit": 608, "equals_glob": 608, "difficulti": 608, "equals_object": 608, "vector_addition_glob": 608, "vector_addition_object": 608, "point_plus_equ": 608, "combo": [609, 611], "cuboid_suit": 609, "front_bottom_left": 609, "point_whl_ctor": 609, "operator_eq_n": [609, 610, 611, 612], "operator_pluseq": [609, 610, 611], "operator_minuseq": [609, 611], "operator_minu": [609, 611], "operator_ostream": [609, 610, 611, 612], "buf": [609, 610, 611, 612, 951, 959, 969], "entirei": [609, 611, 612], "starting_point": 610, "implementation_in_cpp_fil": 610, "rectangle_suit": [610, 612], "pluseq": 610, "operator_unary_minu": [610, 611], "minus_p": [610, 611], "point3d_suit": 611, "coordinates_ctor": 611, "071067812": 611, "69041576": 611, "top_right": 612, "top_left": 612, "bottom_right": 612, "rational": [612, 646], "operator_plus_equal_vec": 612, "plus_vec": 612, "cxx03_functions_and_methods_exercise_class_point3d": [613, 687, 786], "cxx03_functions_and_methods_exercise_class_point": [613, 687, 786], "cxx03_functions_and_methods_static_member_vari": [613, 687, 786], "cxx03_functions_and_methods_exercise_class_rectangl": [613, 687, 786], "cxx03_functions_and_methods_exercise_class_cuboid": [613, 687, 786], "dothat": [614, 615], "dothi": [614, 615], "dothos": [614, 615], "dammit": [614, 615, 694], "thisexcept": 615, "thatexcept": 615, "thrown": [615, 1004], "myexcept": 615, "error_detect": 615, "granular": [615, 804, 991], "typenam": [617, 618, 700, 707, 708, 709, 710, 712, 714, 715, 716, 721, 742, 748, 752, 762, 764], "a_begin": [621, 623], "a_end": [621, 623], "src_begin": [621, 625], "src_end": [621, 625], "dst_begin": [621, 625], "decai": 622, "zeroth": 622, "warrai": 624, "unflex": 626, "shrink_to_fit": 626, "prealloc": [626, 627], "wnonnul": 627, "gool": [628, 695], "cplusplu": [630, 631, 632, 633, 634, 636, 637, 638, 639, 642, 651], "int_arrai": [630, 632, 636, 639], "binarili": 630, "is_el": 630, "original_begin": 631, "original_end": 631, "copy_run": 631, "original_run": 631, "int_array_c": 632, "match_666": 633, "match_42": 633, "x_equals_666": 633, "x_equals_4": 633, "x_equal": 633, "_criterion": 633, "yesno": [633, 860, 861], "output_stern": 634, "output_bindestrich": 634, "output_with_prefix": 634, "_prefix": 634, "cxx03_stl_algorithm_find_if": [635, 654, 658, 687, 786], "cxx03_stl_algorithm_binary_search": [635, 654, 658, 687, 786], "cxx03_stl_algorithm_sort": [635, 654, 658, 687, 786], "cxx03_stl_algorithm_lower_bound": [635, 654, 658, 687, 786], "cxx03_stl_algorithm_revers": [635, 654, 657, 658, 687, 786], "cxx03_stl_algorithm_reverse_copi": [635, 654, 657, 658, 687, 786], "cxx03_stl_algorithm_for_each": [635, 654, 658, 687, 786], "reversed_": [638, 657], "less_revers": 639, "greater_than": 639, "cluster_cxx03_stl_sequential_contain": [641, 654, 658, 687, 786], "cxx03_stl_sequential_containers_list": [641, 654, 658, 687, 786], "cxx03_stl_sequential_containers_bas": [641, 654, 658, 687, 786], "cxx03_stl_sequential_containers_vector": [641, 654, 658, 687, 786], "liek": 643, "logarithm": 643, "mein_int_arrai": 643, "insert_po": 643, "new_elems_as_vector": 643, "elems_to_insert": 643, "cxx03_stl_associative_containers_multimap": [645, 654, 658, 687, 786], "realiz": [646, 1079], "parameter": [646, 752, 757, 1015, 1029], "keytyp": [646, 690], "valuetyp": [646, 690], "some_map": 646, "key_typ": [646, 647], "mapped_typ": [646, 647], "value_typ": [646, 647], "emplac": 646, "collis": 646, "zweiundvierzig": 646, "out_of_rang": [646, 650], "mymap": [647, 648, 649, 650], "sechshundersechsundsechzig": 647, "kv": 647, "pre11": [647, 648], "einundfuenfzig": [647, 648, 649, 650], "vierundfuenfzig": [647, 648, 649, 650], "dreihundertsechsundvierzig": [647, 648, 649, 650], "tausendein": [647, 648, 649, 650], "tausendzwei": [647, 648, 649, 650], "retval_7": 648, "retval_2": 648, "n_remov": 649, "found_value_1001": 650, "found_value_666": 650, "found_valu": 650, "joerg_svnr": 651, "caro_svnr": 651, "johanna_svnr": 651, "philipp_svnr": 651, "datenzwilling_von_joerg": 651, "faschingzwil": 651, "meine_map": 651, "datenzwil": 651, "equal_rang": 651, "found_rang": 651, "svnr_notexist": 651, "1234567": 651, "memory_resourc": 652, "cluster_cxx03_stl_alloc": [653, 654, 658, 687, 786], "cxx03_stl_allocator_bas": [653, 654, 658, 687, 786], "cluster_cxx03_stl_exercis": [654, 655, 657, 658, 687, 786], "cluster_cxx03_stl_exercises_reverse_str": [654, 655, 657, 658, 687, 786], "cxx03_stl_exercises_reverse_string_exercis": [654, 655, 657, 658, 687, 786], "cxx03_stl_exercises_reverse_string_solut": [654, 657, 658, 687, 786], "auto_ptr": [659, 698, 1184], "cluster_cxx03_dynamic_memori": [660, 687, 786], "cxx03_dynamic_memory_todo": [660, 687, 786], "inher": [661, 662, 665, 667, 668, 993, 1081], "novirtu": [661, 662, 668], "mantra": [662, 858], "spoiler": [662, 1039], "cxx03_inheritance_oo_private_protect": [663, 687, 786], "derived1": 665, "derived2": 665, "countless": 665, "derived3": 665, "unimpl": [665, 1043], "polymorp": [667, 770], "strictli": [667, 937, 938, 1039], "indirect": [668, 754, 870, 1024], "cluster_cxx03_standard_library_miscellanea": [669, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 786], "cxx03_standard_library_miscellanea_str": [669, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 786], "string_suit": 670, "another_hello": 670, "greeting1": 670, "greeting2": 670, "convert_to_signed_integ": 670, "stol": 670, "stoll": 670, "numstr": 670, "stoi": [670, 971, 974], "convert_to_unsigned_integ": 670, "stoull": 670, "stoui": 670, "stoul": 670, "convert_from_someth": 670, "basic_str": [670, 752, 784], "i_str": 670, "ui_str": 670, "666000": 670, "sprintf": [670, 971, 974, 1004, 1005], "print_char": 671, "cluster_cxx03_exercises_misc": [671, 672, 673, 674, 687, 786], "cxx03_exercises_misc_american_flag": [671, 673, 687, 786], "cxx03_exercises_misc_fh_moodle_quiz": [672, 673, 687, 786], "cxx03_exercises_misc_sum_integers_from_stdin": [673, 674, 687, 786], "ctrl": [674, 1005, 1057], "cluster_cxx03_exercises_userdb": [675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 786], "cxx03_exercises_userdb_userdb_insert": [675, 682, 683, 684, 685, 687, 786], "cxx03_exercises_userdb_userdb_vector_bas": [675, 682, 683, 684, 685, 686, 687, 786], "cxx03_exercises_userdb_userdb_search": [675, 683, 684, 685, 687, 786], "cxx03_exercises_userdb_user_const_memb": [675, 676, 677, 678, 679, 680, 682, 683, 684, 685, 686, 687, 786], "cxx03_exercises_userdb_user_ctor": [675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 786], "cxx03_exercises_userdb_user_const": [675, 678, 679, 682, 683, 684, 685, 686, 687, 786], "cxx03_exercises_userdb_user_access_method": [675, 676, 678, 679, 682, 683, 684, 685, 686, 687, 786], "cxx03_exercises_userdb_user_default_ctor": [675, 682, 683, 684, 685, 686, 687, 786], "cxx03_exercises_userdb_userdb_search_find_if": [675, 683, 684, 687, 786], "cxx03_exercises_userdb_userdb_search_notfound_except": [675, 684, 687, 786], "cxx03_exercises_userdb_user_simple_method": [675, 676, 678, 679, 680, 682, 683, 684, 685, 686, 687, 786], "architecton": 677, "celebr": 680, "trittsich": [680, 681], "age_by_n_year": 680, "user_init": 681, "userdb_insert": 682, "doesnotexist": [683, 685], "isvalid": [683, 684, 685], "unnatur": 684, "_user": [684, 835], "thereaft": 684, "wrinkl": 684, "usernotfound": 684, "unreach": [684, 948], "userdb_search_by_lastnam": 685, "undetect": 685, "userdb_init": 686, "cluster_cxx11": [688, 692, 699, 706, 717, 730, 731, 741, 746, 755, 763, 767, 771, 783, 785, 786], "cluster_cxx11_introduct": [688, 692, 730, 783, 785, 786], "cxx11_introduction_overview_livehack": [688, 785, 786], "cxx11_introduction_histori": [688, 692, 730, 783, 785, 786], "ugliest": 689, "todo_list": 690, "tdl": 690, "desc": 690, "key_value_pair": 690, "up_1_to_10": 690, "down_1000_to_980": 690, "todo_item": 690, "make_shar": [690, 751, 781], "todolist": 690, "nocopi": 690, "add_item": 690, "_list": 690, "evangelist": 690, "wchar_t": 691, "cluster_cxx11_new_language_featur": [692, 699, 706, 717, 730, 731, 741, 746, 755, 763, 783, 785, 786], "cluster_cxx11_new_language_features_brace_initi": [692, 730, 783, 785, 786], "cxx11_new_language_features_strongly_typed_enum": [692, 730, 783, 785, 786], "cxx11_new_language_features_auto": [692, 730, 783, 785, 786], "cxx11_new_language_features_brace_initialization_mess": [692, 730, 785, 786], "cxx11_new_language_features_brace_initialization_intro": [692, 730, 783, 785, 786], "cxx11_new_language_features_brace_initialization_implementor_view": [692, 730, 785, 786], "pointcloud": [693, 695], "_point": 693, "data_": [694, 696], "memoriz": 694, "brace_initialization_suit": 695, "explicit_ctor_cal": 695, "initlist_ctor_cal": 695, "explicit_ctor": 695, "initlist_ctor": 695, "disabigu": 695, "nightmar": [695, 698, 1024], "size_": 696, "constexpr_suit": 697, "basic_const_is_constexpr": 697, "constexpr_function_request": 697, "constexpr_function_not_request": 697, "constexpr_recursive_funct": 697, "6765": 697, "constexpr_ctor": 697, "schurr": 697, "olsen": [698, 747], "nicolai": [698, 740, 743], "josutti": [698, 740, 743], "smartptr": [699, 730, 748, 749, 785, 786], "cluster_cxx11_new_language_features_move_pf": [699, 730, 746, 755, 763, 783, 785, 786], "cluster_cxx11_smart_point": [699, 730, 746, 755, 763, 783, 785, 786], "cxx11_perfect_forward": [699, 730, 785, 786], "cxx11_new_language_features_move_pf_overview": [699, 730, 746, 755, 763, 783, 785, 786], "cxx11_new_language_features_miscellan": [699, 730, 746, 755, 763, 783, 785, 786], "cxx11_new_language_features_move_pf_livehack_string_mov": [699, 730, 785, 786], "cxx11_smart_pointers_unique_ptr": [699, 730, 746, 755, 763, 783, 785, 786], "cxx11_new_language_features_move_pf_afterword": [699, 730, 785, 786], "cxx11_new_language_features_move_pf_livehack_using_string_mov": [699, 730, 785, 786], "cxx11_smart_pointers_introduct": [699, 730, 746, 755, 763, 783, 785, 786], "_p": [700, 748], "handwritten_suit": [700, 748], "explicit_mov": [700, 748], "assert_double_eq": [700, 748, 749], "create_constant_sensor": [700, 750], "prove": [700, 872], "return_by_copi": 700, "another_sensor": 700, "assigne": 700, "dubiou": 700, "bugfre": 701, "string_move_suit": 701, "make_a_string_from": 701, "ret_": 701, "move_return": 701, "move_assign": 701, "assig": 701, "person_h": 702, "person_suit": 702, "contructor": 702, "outliv": [703, 1026], "rvr": 703, "ado": [705, 976, 1140], "mytyp": 705, "spellabl": 705, "0x7ffcd604846c": 705, "0x7ffcd6048468": 705, "iref": 705, "0x7ffffefe2b54": 705, "0x7ffffefe2b50": 705, "0x7ffc59ebd7bc": 705, "ciref": 705, "0x7ffc23e46284": 705, "0x7ffe4a148064": 705, "0x7ffc528e013c": 705, "cluster_cxx11_new_language_features_concept": [706, 730, 785, 786], "cxx11_new_language_features_concepts_intro": [706, 730, 785, 786], "cxx11_new_language_features_concepts_writing_concept": [706, 730, 785, 786], "cxx11_new_language_features_concepts_link": [706, 730, 785, 786], "conceptless": 707, "4ul": [707, 708], "4l": [707, 708], "satisfact": 707, "is_integral_v": 707, "_tp": [707, 740, 750], "hendrik": 711, "niemey": 711, "hypotenus": [712, 713, 714, 715, 716], "sumsq": [712, 713, 714, 715, 716], "point2d": [712, 714, 715, 716], "dozen": 712, "ruin": 712, "5l": 712, "same_a": 712, "commone_reference_with": 712, "common_reference_with": [712, 716], "has_siz": [715, 716], "index_returns_doubl": 716, "cluster_cxx11_new_language_features_coroutin": [717, 730, 785, 786], "cxx11_new_language_features_coroutines_intro": [717, 730, 785, 786], "stackless": 718, "asio": 718, "co_return": [718, 722, 723, 724, 725, 726], "hello_inst": [718, 722, 723, 724, 725, 726], "promise_typ": [718, 720, 721, 723, 724, 725, 726], "get_return_object": [718, 720, 721, 723, 724, 725, 726], "suspend_alwai": [718, 720, 721, 723, 724, 725, 726], "initial_suspend": [718, 720, 721, 723, 724, 725, 726], "final_suspend": [718, 720, 721, 723, 724, 725, 726], "return_void": [718, 721, 723, 724, 725, 726], "unhandled_except": [718, 720, 721, 723, 724, 725, 726], "suspend_nev": [718, 720, 721, 725], "coroutine_handl": [718, 720, 721, 724, 725, 726], "from_promis": [718, 720, 721, 724, 725, 726], "_coro": [718, 720], "yield_valu": [718, 720, 721, 724, 725, 726], "sentinel": [718, 721, 725, 726, 740], "_promis": [718, 721, 724, 725, 726], "glue": 718, "deciph": 718, "diagrammat": 718, "wei": 718, "co_yield": [719, 720, 721, 722, 724, 725, 726], "_elem": 720, "ed": [721, 724, 725, 726, 922, 959], "lackingdefaultconstructor": 727, "ldc": 727, "hasdefaultconstructor": 727, "hmpf": 727, "hdc": 727, "ownsmemori": 728, "om_copi": 728, "incontin": 729, "leaf": [729, 912], "method1": 729, "method2": 729, "cluster_cxx11_new_language_features_lambda": [730, 731, 785, 786], "cluster_cxx11_new_language_features_rang": [730, 741, 785, 786], "cxx11_new_language_features_delet": [730, 785, 786], "cxx11_new_language_features_overrid": [730, 785, 786], "cxx11_new_language_features_delegating_ctor": [730, 785, 786], "cxx11_new_language_features_range_based_for": [730, 783, 785, 786], "cxx11_new_language_features_modul": [730, 785, 786], "cxx11_new_language_features_constexpr": [730, 785, 786], "cxx11_new_language_features_structured_bind": [730, 785, 786], "cxx11_new_language_features_range_based_for_map": [730, 785, 786], "cxx11_new_language_features_fin": [730, 785, 786], "cxx11_new_language_features_livehack_smartptr_mov": [730, 785, 786], "cxx11_smart_pointers_introduction_livehack": [730, 746, 785, 786], "cxx11_new_language_features_default": [730, 785, 786], "cxx11_new_language_features_lambda_lambda_captur": [730, 731, 785, 786], "cxx11_new_language_features_lambda_lambda": [730, 731, 785, 786], "cxx11_new_language_features_lambda_lambda_is_functor_pitfal": [730, 731, 785, 786], "cxx11_new_language_features_lambda_lambda_is_functor": [730, 731, 785, 786], "cxx11_new_language_features_ranges_intro": [730, 741, 785, 786], "cxx11_new_language_features_ranges_good_bad": [730, 741, 785, 786], "cxx11_new_language_features_ranges_link": [730, 741, 785, 786], "elsewher": [732, 833, 1033], "lamda": 732, "print_messag": [732, 734, 735], "constantli": [733, 850, 992], "mere": 733, "catur": 733, "akin": 733, "lambda_capture_suit": 733, "explicit_by_copi": 733, "lambda_capure_suit": 733, "explicit_by_refer": 733, "dubio": 733, "explicit_mix": 733, "initialized_captur": 733, "all_by_refer": 733, "all_by_copi": 733, "all_by_copy_except": 733, "this_captur": 733, "_i": [733, 753], "add_to_yourself_and_guarantee_programmers_job_secur": 733, "print_message_func": [734, 735], "_messag": [734, 735], "piti": 735, "mpp": 736, "precompil": [736, 833, 1007], "speedup": 736, "rei": 736, "bori": 736, "kolpackov": 736, "abandon": 736, "inde": 738, "range_based_for_suit": 739, "map_pre_11": 739, "map_bas": 739, "map_basic_const_auto_refer": 739, "ific": [739, 744], "map_unpack_copi": 739, "map_unpack_refer": 739, "map_unpack_const_refer": 739, "min_el": 740, "forward_rang": [740, 742], "drop_view": 740, "filter_view": 740, "ref_view": 740, "ranges_util": 740, "view_interfac": 740, "_deriv": 740, "sized_sentinel_for": 740, "decltyp": 740, "__cust": 740, "declval": 740, "__cust_access": 740, "__begin": 740, "_s_size": 740, "_m_deriv": 740, "forward_iter": 740, "coll": 740, "2nd": [740, 1173], "__cxx11": [740, 752, 784], "_vp": 740, "__simple_view": 740, "random_access_rang": [740, 742], "sized_rang": 740, "pretend": 740, "comitte": [740, 743], "lazili": 742, "first_two_drop": 742, "first_two_dropped_next_two_taken": 742, "oldstyl": 742, "inspir": 742, "refin": 742, "input_rang": 742, "bidirectional_rang": 742, "backward": [742, 808, 893, 925, 930, 1056, 1160], "contiguous_rang": 742, "tristan": 743, "brindl": 743, "cppnorth": 743, "l0bhzp6hmdm": 743, "nico": 743, "accu": 743, "rust": [743, 1007], "parrai": 744, "decompos": 744, "structured_binding_suit": 744, "struct_copi": 744, "struct_refer": 744, "struct_const_refer": 744, "tuple_copi": 744, "make_tupl": 744, "affect": 744, "tuple_refer": 744, "tuple_const_refer": 744, "array_copi": 744, "array_refer": 744, "array_const_refer": 744, "suspici": 744, "designwis": 745, "uptr": 745, "cxx11_smart_pointers_closing_word": [746, 755, 763, 785, 786], "cxx11_smart_pointers_shared_ptr": [746, 755, 763, 783, 785, 786], "cxx11_smart_pointers_weak_ptr": [746, 783, 785, 786], "myclass": [747, 749], "unwind": 747, "yoky6hzlkx": 747, "steal": [748, 993], "cxx11_unique_ptr_sensors_h": 748, "_temp": 748, "basic_const": 748, "raw_": 748, "raw_s_ref": 748, "copy_ctor_bad": 748, "assignment_operator_bad": 748, "gtest_filt": [748, 749, 1171], "reveal": [748, 1026], "vtabl": 748, "autoptr": 748, "copy_ctor_good_autoptr_styl": 748, "unexpectedli": 748, "assignment_operator_good_autoptr_styl": 748, "destiat": 748, "excus": 749, "shared_ptr_suit": 749, "rs1": [749, 750], "rs2": [749, 750], "rand1": [749, 750, 751], "rand2": [749, 750, 751], "cann": 749, "basic_make_shar": 749, "set_refer": 749, "_ref": 749, "cyclic_refer": 749, "303549": 749, "unique_ptr_suit": 750, "threw": 750, "ownership_error": 750, "cxx11": [750, 784], "unique_ptr_suite_ownership_error_test": 750, "testbodi": 750, "_dp": 750, "default_delet": 750, "verbose_ctor": 750, "make_unique_auto": 750, "tranfer": 750, "create_random_sensor": 750, "implicit_ownership_transf": 750, "holdsasensor": 750, "taking_ownership_in_own_cod": 750, "sompil": 750, "raw1": 750, "tie": 751, "unti": 751, "weak_ptr_suit": 751, "borrowed_sensor": 751, "another_refer": 751, "sensor_ref": 751, "measurement_thread": 751, "rvref": 752, "lo_funct": 752, "adventur": 752, "grimm": 752, "jaud": 752, "factset": 752, "570f242261f8": 752, "suffer": [753, 938], "origin_dist": 753, "criteria": [753, 877, 1160], "predic": 753, "void_funct": 753, "bind_suit": 753, "plain_void_funct": 753, "one_parameter_funct": 753, "plain_one_parameter_funct": 753, "minus_hardcod": 753, "_1_minus_2": 753, "minus_swap_paramet": 753, "second_minus_first": 753, "_2": [753, 754], "minus_hardcode_first_paramet": 753, "_42_minus_param": 753, "funcfunc": 753, "tradeoff": [753, 838], "oneimplement": 754, "anotherimplement": 754, "do_much_work": 754, "c_using_on": 754, "c_using_anoth": 754, "explanatori": 754, "trampolin": 754, "rtti": 754, "pod": 754, "metaphys": 754, "ostreamlogg": 754, "databaselogg": 754, "logfunc_t": 754, "funcptrlogg": 754, "somebusinessclasswithneedforlog": 754, "successfulli": [754, 853, 868, 1159, 1166], "do_stupid_log": 754, "ostream_logg": 754, "database_logg": 754, "funcptr_logg": 754, "busy_logging_to_ostream": 754, "busy_logging_to_databas": 754, "busy_logging_to_funcptr": 754, "foo_func": 754, "explos": 754, "cluster_cxx11_functions_funct": [755, 763, 785, 786], "cxx11_functions_functions_funct": [755, 763, 785, 786], "cxx11_functions_functions_bind": [755, 763, 785, 786], "msdn": 756, "devil": 756, "singlethread": 756, "god": 756, "paralleliz": 757, "cancel": [757, 983], "interlockedincr": 759, "mutual": [760, 1041], "try_lock": 760, "try_lock_for": 760, "unavail": 760, "try_lock_until": 760, "time_point": [760, 765], "do_something_errorpron": 761, "do_more_of_it": 761, "wake": [762, 815, 825, 956, 980, 989, 995], "waiter": [762, 825, 850, 980], "stop_wait": 762, "wait_for": [762, 764], "wait_until": [762, 764], "notify_on": 762, "notify_al": 762, "thunder": 762, "herd": 762, "condvar": 762, "threadsafequeu": 762, "maxelem": 762, "_maxelem": 762, "dur": [762, 764], "scoped_lock": [762, 764], "_lock": [762, 764], "pop_front": 762, "2m": [762, 764, 930], "1m": [762, 858, 930], "consumer1": 762, "consumer2": 762, "pthread_cond_init": [762, 980], "_not_empti": 762, "_not_ful": 762, "pthread_cond_wait": [762, 980], "pthread_cond_sign": [762, 980], "pthread_cond_t": [762, 980], "unique_lock": 762, "cluster_cxx11_multithread": [763, 785, 786], "cluster_linux_sysprog_posix_thread": [763, 785, 786, 929, 970, 984, 990], "cluster_linux_sysprog_schedul": [763, 785, 786, 929, 970, 984, 990, 992], "cluster_linux_sysprog_blocking_io": [763, 785, 786, 863, 866, 867, 929, 958, 970, 984, 990, 992], "cxx11_multithreading_thread": [763, 785, 786], "cxx11_multithreading_introduct": [763, 785, 786], "linux_sysprog_posix_threads_lifecycl": [763, 785, 786, 929, 970, 984, 990], "cxx11_multithreading_chrono": [763, 785, 786], "cxx11_multithreading_scoped_lock": [763, 785, 786], "cxx11_multithreading_mutex": [763, 785, 786], "cxx11_multithreading_condition_vari": [763, 785, 786], "cxx11_multithreading_promise_futur": [763, 785, 786], "linux_sysprog_posix_threads_condition_vari": [763, 785, 786, 929, 970, 984], "cxx11_multithreading_race_condit": [763, 785, 786], "linux_sysprog_posix_threads_exercise_pthcreate_racecondit": [763, 785, 786, 929, 970, 984, 990], "linux_sysprog_posix_threads_mutex": [763, 785, 786, 929, 970, 984, 990], "cxx11_multithreading_atom": [763, 785, 786], "linux_sysprog_posix_threads_bas": [763, 785, 786, 929, 970, 984, 990], "linux_sysprog_scheduling_bas": [763, 785, 786, 929, 970, 984, 990, 992], "linux_sysprog_posix_threads_exercise_mutex": [763, 785, 786, 929, 970, 984], "linux_sysprog_blocking_io_blocking_io": [763, 785, 786, 863, 866, 867, 929, 958, 970, 984, 990, 992], "get_futur": 764, "set_except": 764, "exception_ptr": 764, "shared_futur": 764, "uncoordin": 764, "ten_million_years_": 764, "answer_poll_interval_m": 764, "answer_valid": 764, "chew_answ": 764, "timespec": [764, 980, 991, 1001], "reaction": [764, 948, 1030], "answer_computation_tim": 764, "answer_poll_interv": 764, "ten_million_year": 764, "lockguard": 764, "_answer_valid": 764, "_answer": 764, "_data": [764, 1021], "binary_semaphor": 764, "__cplusplu": 764, "202001l": 764, "_notifi": 764, "answer_promis": 764, "answer_futur": 764, "make_exception_ptr": 764, "epoch": [765, 1000], "time_t": 765, "notion": 765, "system_clock": 765, "monoton": [765, 841, 843], "ntp": 765, "steady_clock": 765, "timepoint": 765, "steadili": 765, "high_resolution_clock": 765, "brand": 765, "spent_milli": 765, "duration_cast": 765, "variant_suit": 766, "holds_altern": 766, "converting_ctor": 766, "bad_access": 766, "visit": [766, 771, 775, 785, 786], "int_seen": 766, "float_seen": 766, "charp": 766, "string_charp": 766, "no_default_ctor": 766, "cluster_cxx11_miscellan": [767, 771, 785, 786], "cxx11_miscellaneous_vari": [767, 771, 785, 786], "timur": 768, "doumler": 768, "aligned_alloc": 769, "alignof": 769, "pmr": 769, "heis": [769, 773], "_temperatur": [770, 772, 774, 776], "klau": 771, "iglberg": 771, "steve": 771, "bush": 771, "bielak": 771, "gopel": 771, "cluster_cxx11_embedded_problem": [771, 785, 786], "cxx11_embedded_problems_unrel": [771, 785, 786], "cxx11_embedded_problems_related_no_virtu": [771, 785, 786], "cxx11_embedded_problems_variant_automatic_visit": [771, 785, 786], "cxx11_embedded_problems_variant_manual_visit": [771, 785, 786], "cxx11_embedded_problems_variant_manual_if": [771, 785, 786], "cxx11_embedded_problems_classic_virtu": [771, 785, 786], "static_cast": [772, 784], "derivedtyp": 772, "sensorptr": 774, "get_temperature_visitor": [775, 777], "crtp": 779, "bagcopi": 780, "find_by_int": [780, 781, 782], "remove_by_int": [780, 781, 782], "nremov": [780, 781, 782], "bagshar": 781, "weakref": 781, "sharedref": 781, "baguniqu": 782, "constbag": 782, "cluster_cxx11_exercis": [783, 785, 786], "cxx11_exercises_bag_uniqu": [783, 785, 786], "cxx11_exercises_bag_copi": [783, 785, 786], "cxx11_exercises_bag_shar": [783, 785, 786], "withing": 784, "filesystem_suit": 784, "cd_to_tmpdir_fixtur": 784, "path_compose_compar": 784, "path_compose_compare_2": 784, "is_absolut": 784, "is_rel": 784, "path_abs_rel": 784, "abspath": 784, "relpath": 784, "parent_path": 784, "remove_filenam": 784, "replace_filenam": 784, "replace_extens": 784, "path_component_access": 784, "filename_part": 784, "dir_part": 784, "path_iter": 784, "current_directori": 784, "cwd_chdir": 784, "current_path": 784, "create_directory_error": 784, "filesystem_error": 784, "char_trait": 784, "char_typ": 784, "_chart": 784, "_trait": 784, "_alloc": 784, "_s_copi": 784, "size_typ": 784, "_m_replac": 784, "tcc": 784, "2171": 784, "canonicalizeforstdlibvers": 784, "__builtin_memcpi": 784, "9223372036854775810": 784, "9223372036854775813": 784, "__s1": 784, "__s2": 784, "create_directory_singl": 784, "is_regular_fil": 784, "create_directory_multipl": 784, "is_directori": 784, "is_block_fil": 784, "is_character_fil": 784, "is_empti": 784, "is_fifo": 784, "is_oth": 784, "is_socket": 784, "is_symlink": 784, "greatest": 784, "2691": [784, 889], "nov": [784, 823, 889, 915, 937, 1021, 1057, 1086], "inod": [784, 792, 799], "919153": 784, "0644": [784, 878, 892], "system_u": 784, "object_r": 784, "passwd_file_t": 784, "s0": 784, "111282886": 784, "0100": 784, "737858445": 784, "743858359": 784, "file_s": 784, "hard_link_count": 784, "last_write_tim": 784, "ext4": [784, 833], "btrf": 784, "ntf": 784, "directory_iter": 784, "dirit": 784, "recursive_directory_iter": 784, "cxx11_filesystem": [785, 786], "cluster_unittest": [786, 1169], "cluster_linux_toolchain_raspi": [786, 929, 1012, 1014, 1017, 1018], "cluster_linux_toolchain_cross": [786, 929, 1011, 1012, 1014, 1016, 1017, 1018], "cluster_linux_toolchain_exercis": [786, 929, 1012, 1013, 1014, 1015, 1016, 1017], "cluster_linux_sysprog_intro_hw": [786, 929, 970, 972], "cluster_linux_sysprog_process": [786, 929, 970], "cluster_linux_ssh": [786, 929, 941, 942, 943, 944, 945, 1017, 1018], "cluster_linux_ssh_exercis": [786, 929, 941, 942, 943, 944, 945], "cluster_linux_basics_permissions_exercis": [786, 863, 879, 882, 883, 884, 885, 886, 887, 888, 929], "cluster_linux_basics_shell_exercis": [786, 860, 861, 862, 863, 897, 898, 899, 900, 901, 902, 903, 904, 905, 907, 908, 909, 910, 911, 913, 929], "cluster_linux_basics_shell_exercises_l": [786, 863, 907, 908, 909, 910, 911, 913, 929], "cluster_linux_basics_shell_exercises_cp_mv_mkdir_rm": [786, 860, 861, 862, 863, 897, 898, 899, 900, 901, 902, 903, 904, 905, 907, 913, 929], "cluster_linux_basics_text_tool": [786, 863, 923, 929], "cluster_linux_basics_io_redir_pip": [786, 863, 874, 929], "cluster_linux_basics_exercis": [786, 860, 861, 862, 863, 929], "cluster_linux_basics_archiving_compress": [786, 856, 863, 929, 1017, 1018], "cluster_linux_hardwar": [786, 929, 935, 936], "cluster_linux_hardware_can": [786, 929, 935, 936], "cluster_linux_kernel": [786, 790, 793, 795, 798, 800, 803, 805, 807, 809, 810, 812, 814, 816, 818, 820, 822, 824, 826, 828, 830, 832, 834, 837, 839, 842, 844, 848, 851, 854, 929], "unittest_gtest_cmak": [786, 1169], "linux_toolchain_shared_librari": [786, 929, 1017], "linux_basics_intro_environ": [786, 863, 867, 913, 929, 970, 1017, 1018], "linux_toolchain_cmake_cross": [786, 929, 1017], "linux_toolchain_raspi_detail": [786, 929, 1017, 1018], "linux_toolchain_cross_bas": [786, 929, 1011, 1012, 1014, 1016, 1017, 1018], "linux_ssh_scp": [786, 929, 941, 942, 943, 945, 1017, 1018], "linux_ssh_bas": [786, 929, 941, 942, 943, 944, 945, 1017, 1018], "linux_basics_archiving_compression_tar": [786, 856, 863, 929, 1017, 1018], "linux_toolchain_raspi_linaro_pi": [786, 929, 1017, 1018], "defunct": [786, 929, 1017, 1018], "linux_toolchain_raspi_toolchain_setup": [786, 929, 1012, 1014, 1017, 1018], "linux_toolchain_raspi_docker_fedora_wsl": [786, 929, 1017, 1018], "linux_toolchain_exercises_fh_moodle_quiz": [786, 929, 1013, 1014, 1017], "linux_toolchain_exercises_native_build": [786, 929, 1014, 1015, 1017], "linux_toolchain_exercises_cross_build": [786, 929, 1012, 1014, 1017], "linux_toolchain_exercises_raspberry_toolchain": [786, 929, 1014, 1016, 1017], "linux_sysprog_sign": [786, 929, 970], "linux_sysprog_ipc": [786, 929, 970], "linux_sysprog_ev": [786, 929, 970], "linux_sysprog_fileio_example_o_creat": [786, 929, 968, 970, 987], "linux_sysprog_fileio_example_o_wronli": [786, 929, 968, 970, 987], "linux_sysprog_fileio_example_o_rdonli": [786, 929, 968, 970, 987], "o_rdonli": [786, 791, 929, 955, 959, 960, 963, 966, 967, 968, 970, 971, 974, 987, 997, 1000, 1004], "linux_sysprog_fileio_basics_exercise_hol": [786, 929, 968, 970, 987], "linux_sysprog_fileio_basics_exercise_copi": [786, 929, 960, 968, 970, 987], "linux_sysprog_fileio_misc": [786, 929, 968, 970, 987], "linux_sysprog_fileio_example_o_excl": [786, 929, 968, 970, 987], "o_excl": [786, 929, 959, 960, 968, 970, 987, 1000], "linux_sysprog_fileio_dupl": [786, 929, 968, 970, 987], "linux_sysprog_fileio_fileio_group": [786, 929, 968, 970, 987], "linux_sysprog_posix_threads_miscellan": [786, 929, 970, 984], "linux_sysprog_posix_threads_exercise_condition_vari": [786, 929, 970, 984], "linux_sysprog_posix_threads_mutex_trylock": [786, 929, 970, 984], "trylock": [786, 929, 970, 978, 984], "islock": [786, 929, 970, 978, 984], "linux_sysprog_posix_threads_last_warn": [786, 929, 970, 984], "linux_sysprog_scheduling_realtim": [786, 929, 970, 990, 992], "linux_sysprog_scheduling_wakeup_lat": [786, 929, 970, 990, 992], "linux_sysprog_scheduling_realtime_api": [786, 929, 970, 990], "linux_sysprog_scheduling_processes_and_thread": [786, 929, 970, 990, 992], "linux_sysprog_scheduling_exam_quest": [786, 929, 970, 990, 992], "linux_sysprog_blocking_io_blocking_io_network": [786, 929, 958, 970], "linux_sysprog_blocking_io_blocking_io_fil": [786, 863, 866, 867, 929, 958, 970], "linux_sysprog_blocking_io_blocking_io_tim": [786, 929, 958, 970], "linux_sysprog_intro_hw_watch": [786, 929, 970, 972], "linux_sysprog_intro_hw_get": [786, 929, 970, 972], "linux_sysprog_intro_hw_sysfs_gpio": [786, 929, 970, 972], "linux_sysprog_process_tre": [786, 929, 970], "linux_sysprog_process_commandlin": [786, 929, 970], "linux_basics_intro_process_tre": [786, 863, 867, 879, 882, 883, 884, 885, 886, 887, 888, 929, 941, 942, 943, 944, 945, 970, 1017, 1018], "linux_ssh_key_pair": [786, 929, 941, 942, 943, 944, 945], "linux_basics_intro_login": [786, 863, 867, 879, 882, 883, 884, 885, 886, 887, 888, 929, 941, 942, 943, 944, 945, 1017, 1018], "linux_ssh_sshf": [786, 929, 945], "linux_ssh_portforward": [786, 929, 945], "linux_ssh_link": [786, 929, 945], "linux_ssh_exercises_copy_fil": [786, 929, 941, 942, 943, 945], "linux_ssh_exercises_pubkei": [786, 929, 941, 942, 943, 944, 945], "linux_ssh_exercises_copy_tre": [786, 929, 942, 943, 945], "linux_basics_intro_fh_moodle_quiz": [786, 863, 866, 867, 929], "linux_basics_intro_demo_everything_is_a_fil": [786, 863, 866, 867, 929], "linux_basics_intro_wsl": [786, 863, 867, 929], "linux_basics_permissions_setuid_livedemo": [786, 863, 888, 929], "linux_basics_permissions_setuid": [786, 863, 888, 929], "linux_basics_permissions_fh_moodle_quiz": [786, 863, 880, 888, 929], "linux_basics_permissions_sticki": [786, 863, 888, 929], "linux_basics_permissions_umask": [786, 863, 888, 929], "linux_basics_permissions_fh_moodle_quiz_nocheat": [786, 863, 881, 888, 929], "linux_basics_permissions_exercises_credenti": [786, 863, 879, 882, 883, 884, 885, 886, 887, 888, 929], "linux_basics_permissions_exercises_private_directori": [786, 863, 882, 883, 884, 888, 929], "linux_basics_permissions_exercises_public_directori": [786, 863, 882, 885, 886, 888, 929], "linux_basics_permissions_exercises_private_directory_quest": [786, 863, 882, 884, 888, 929], "linux_basics_permissions_exercises_shared_fil": [786, 863, 882, 887, 888, 929], "linux_basics_permissions_exercises_public_directory_quest": [786, 863, 882, 886, 888, 929], "linux_basics_shell_cp": [786, 860, 861, 862, 863, 897, 898, 900, 901, 904, 905, 907, 913, 929], "linux_basics_shell_fh_moodle_quiz": [786, 863, 906, 913, 929], "linux_basics_shell_mv": [786, 863, 913, 929], "linux_basics_shell_link": [786, 863, 913, 929], "linux_basics_shell_configfil": [786, 863, 913, 929], "linux_basics_shell_exercises_ls_dev_typ": [786, 863, 907, 908, 910, 913, 929], "linux_basics_shell_exercises_ls_etc_passwd_s": [786, 863, 907, 909, 910, 913, 929], "linux_basics_shell_exercises_ls_home_permiss": [786, 863, 907, 910, 911, 913, 929], "linux_basics_shell_exercises_cp_mv_mkdir_rm_mkdir_p_rm_r": [786, 860, 861, 862, 863, 897, 898, 899, 900, 901, 902, 904, 905, 907, 913, 929], "linux_basics_shell_exercises_cp_mv_mkdir_rm_rm_tre": [786, 863, 901, 904, 907, 913, 929], "linux_basics_shell_exercises_cp_mv_mkdir_rm_copy_tre": [786, 863, 897, 901, 904, 907, 913, 929], "linux_basics_shell_exercises_cp_mv_mkdir_rm_verify_hierarchi": [786, 863, 897, 901, 904, 905, 907, 913, 929], "linux_basics_shell_exercises_cp_mv_mkdir_rm_echo_create_fil": [786, 860, 861, 862, 863, 897, 898, 899, 900, 901, 904, 905, 907, 913, 929], "linux_basics_shell_exercises_cp_mv_mkdir_rm_echo_copy_fil": [786, 863, 897, 898, 901, 904, 905, 907, 913, 929], "linux_basics_shell_exercises_cp_mv_mkdir_rm_echo_move_fil": [786, 863, 897, 900, 901, 904, 905, 907, 913, 929], "linux_basics_shell_exercises_cp_mv_mkdir_rm_rm_rf": [786, 863, 901, 903, 907, 913, 929], "linux_basics_text_tools_exercis": [786, 863, 923, 929], "linux_basics_text_tools_cat": [786, 863, 923, 929], "linux_basics_text_tools_cut": [786, 863, 923, 929], "linux_basics_text_tools_grep": [786, 863, 923, 929], "linux_basics_text_tools_head_tail": [786, 863, 923, 929], "linux_basics_text_tools_less": [786, 863, 923, 929], "linux_basics_text_tools_find": [786, 863, 923, 929], "linux_basics_text_tools_overview": [786, 863, 923, 929], "linux_basics_io_redir_pipes_io_redir_swap_stdout_stderr": [786, 863, 874, 929], "linux_basics_io_redir_pipes_io_redir": [786, 863, 874, 929], "linux_basics_io_redir_pipes_exercis": [786, 863, 874, 929], "linux_basics_io_redir_pipes_pip": [786, 863, 874, 929], "linux_basics_exercises_fh_ss2022_exam_01_g1": [786, 860, 862, 863, 929], "linux_basics_exercises_fh_ss2022_exam_01_g2": [786, 861, 862, 863, 929], "linux_basics_archiving_compression_gzip": [786, 856, 863, 929, 1017, 1018], "linux_basics_archiving_compression_overview": [786, 856, 863, 929, 1017, 1018], "linux_basics_archiving_compression_exercis": [786, 856, 863, 929], "linux_hardware_i2c": [786, 929, 936], "linux_hardware_w1": [786, 929, 936], "linux_hardware_brushless_motor": [786, 929, 936], "brushless": [786, 929, 936], "linux_hardware_pwm": [786, 929, 936], "linux_hardware_can_hardwar": [786, 929, 935, 936], "linux_hardware_can_intro": [786, 929, 935, 936], "linux_hardware_can_program": [786, 929, 935, 936], "linux_hardware_can_interfac": [786, 929, 935, 936], "linux_kernel_mutex": [786, 810, 814, 824, 826, 837, 842, 848, 851, 854, 929], "linux_kernel_process_vs_atom": [786, 795, 800, 803, 805, 810, 814, 816, 820, 824, 826, 828, 830, 832, 837, 839, 842, 844, 848, 851, 854, 929], "linux_kernel_waitqueu": [786, 810, 851, 929], "linux_kernel_usermem": [786, 810, 848, 851, 929], "linux_kernel_cdev_file_oper": [786, 793, 795, 800, 803, 810, 814, 824, 837, 842, 848, 851, 854, 929], "linux_kernel_workqueu": [786, 810, 848, 851, 854, 929], "linux_kernel_stub_sysprog_dup": [786, 793, 795, 800, 803, 810, 814, 824, 837, 842, 848, 851, 854, 929], "dup": [786, 792, 793, 795, 800, 803, 810, 814, 824, 837, 842, 848, 851, 854, 876, 929, 962, 1001], "stub": [786, 793, 795, 800, 803, 810, 814, 824, 837, 842, 848, 851, 854, 929, 1020], "linux_kernel_cdev_auto": [786, 790, 793, 795, 800, 803, 810, 814, 824, 837, 842, 848, 851, 854, 929], "linux_kernel_modules_hello_world": [786, 790, 793, 795, 798, 800, 803, 810, 812, 814, 818, 824, 830, 837, 842, 848, 851, 854, 929], "linux_kernel_fedora_module_build": [786, 790, 793, 795, 798, 800, 803, 809, 810, 812, 814, 818, 824, 830, 837, 842, 848, 851, 854, 929], "linux_kernel_fedora_kernel_build": [786, 790, 793, 795, 798, 800, 803, 807, 809, 810, 812, 814, 818, 824, 830, 837, 842, 848, 851, 854, 929], "linux_kernel_interrupt_cod": [786, 810, 814, 837, 842, 848, 851, 854, 929], "linux_kernel_raspi_kernel_build": [786, 810, 814, 834, 837, 842, 848, 851, 854, 929], "linux_kernel_mutex_cod": [786, 810, 814, 824, 837, 842, 848, 851, 854, 929], "linux_kernel_interrupt": [786, 810, 814, 816, 828, 830, 837, 842, 848, 851, 854, 929], "linux_kernel_multiple_devic": [786, 800, 810, 814, 824, 837, 842, 848, 851, 854, 929], "linux_kernel_netdev": [786, 810, 828, 929], "linux_kernel_dma": [786, 805, 810, 828, 830, 929], "linux_kernel_kmalloc": [786, 795, 800, 803, 805, 810, 814, 824, 828, 830, 837, 842, 848, 851, 854, 929], "linux_kernel_iomemori": [786, 810, 818, 830, 929], "linux_kernel_cdev_refactor": [786, 800, 803, 810, 814, 824, 837, 842, 848, 851, 854, 929], "linux_kernel_cdev_manu": [786, 790, 793, 795, 798, 800, 803, 810, 814, 824, 837, 842, 848, 851, 854, 929], "linux_kernel_spinlock_cod": [786, 810, 837, 842, 848, 851, 854, 929], "linux_kernel_spinlock": [786, 810, 837, 839, 842, 848, 851, 854, 929], "linux_kernel_timer_cod": [786, 810, 842, 848, 851, 854, 929], "linux_kernel_tim": [786, 810, 842, 844, 848, 851, 854, 929], "linux_kernel_cdev_first_function": [786, 795, 800, 803, 810, 814, 824, 837, 842, 848, 851, 854, 929], "linux_kernel_list": [786, 795, 800, 803, 810, 814, 822, 824, 837, 842, 848, 851, 854, 929], "doubli": [786, 795, 799, 800, 803, 810, 814, 823, 824, 835, 837, 842, 848, 851, 854, 929], "linux_kernel_pci": [786, 810, 830, 929], "interconnect": 787, "device_cr": [788, 789, 792], "cdev_init": [788, 796, 797], "cdev_add": [788, 796, 797], "unhappi": 788, "device_destroi": 788, "my_class": 788, "my_driv": [788, 791, 801, 802, 813, 823, 829, 835, 841, 852], "mknod": [788, 796, 797], "character devic": [789, 792, 797, 1189], "relatim": 789, "register_chrdev_region": [789, 796, 797], "alloc_chrdev_region": [789, 797], "htmldoc": 789, "chrdev": 789, "dev_t": [789, 797], "baseminor": 789, "highlight": 789, "bug_on": 789, "module_licens": [789, 811], "openat": [791, 955], "at_fdcwd": [791, 955], "0x7f3d11330000": 791, "einval": [791, 796, 811, 849], "enotti": 791, "file_oper": [792, 796, 797, 835], "citizenship": 792, "__user": [792, 847], "loff_t": 792, "unlocked_ioctl": 792, "my_op": 792, "this_modul": 792, "my_open": 792, "my_read": 792, "my_writ": 792, "my_ioctl": [792, 823], "mode_t": [792, 959, 963, 1001], "filp": [792, 835, 849], "vf": 792, "swiss": [792, 959, 1184], "armi": [792, 959, 1184], "my_ioctl_request": [792, 794], "my_request_such": 792, "my_request_such_and_such": 792, "laden": [792, 1198], "endod": 792, "_iow": 792, "_ior": 792, "_ioc": 792, "_ioc_non": 792, "_ioc_read": 792, "_ioc_typecheck": 792, "_ioc_writ": 792, "_iowr": 792, "my_ev": [794, 801, 802, 841, 846], "my_event_typ": 794, "my_event_ioctl": 794, "jiffi": [794, 835, 841], "my_event_list": [794, 801, 802, 823], "list_head": [794, 821, 823, 846], "num_ev": 794, "my_event_list_init": 794, "my_event_list_destroi": 794, "my_event_list_add": [794, 823, 836, 841, 852], "my_ioctl_add_ev": 794, "printk": [794, 811, 813, 852], "unregister_chrdev_region": [796, 797], "caveat": [796, 835, 938], "register_chrdev": 796, "unregister_chrdev": 796, "kern_err": 796, "cdev_del": [796, 797], "my_driver_henkel": 796, "kmem": 797, "opaqu": 797, "majmin": 797, "mkdev": 797, "drivernam": 797, "my_fop": 797, "my_cdev": 797, "devicefil": 797, "ndevic": 799, "module_param": 799, "my_devic": [799, 801, 802, 813, 829, 841], "private_data": [799, 829, 835], "kbuild": [801, 802], "torn": [801, 1176], "ccflag": [801, 802], "container_of": [802, 853], "file3": 802, "distinct": [802, 869, 953, 1080], "my_device_init": 802, "my_device_destroi": [802, 841], "everyt": 804, "vmalloc": 804, "ioremap": [804, 817], "iommu": 804, "pysic": 804, "dma_addr_t": 804, "alloc_pag": 804, "gfp_mask": 804, "get_free_pag": 804, "__get_free_pag": 804, "2order": 804, "__get_dma_pag": 804, "zone": 804, "__free_pag": 804, "free_pag": 804, "dma_handl": 804, "cpu_addr": [804, 829], "dma_alloc_coher": 804, "gfp": [804, 819, 845], "dma_free_coher": 804, "pci_dev": [804, 829], "gfp_kernel": [804, 819, 836], "gfp_atom": [804, 819], "dma_bidirect": 804, "dma_to_devic": 804, "dma_from_devic": 804, "dma_map_singl": 804, "dma_mapping_error": 804, "dma_unmap_singl": 804, "dma_map_pag": 804, "dma_unmap_pag": 804, "dma_address": 804, "sglist": 804, "sg_run": 804, "dma_map_sg": 804, "for_each_sg": 804, "hw_address": 804, "sg_dma_address": 804, "hw_len": 804, "sg_dma_len": 804, "dma_unmap_sg": 804, "nent": 804, "unmap": [804, 829], "recreat": [804, 905, 1023], "dma_sync_single_for_cpu": 804, "dma_sync_sg_for_cpu": 804, "mel": [804, 819], "gorman": [804, 819], "incredibli": 804, "transcript": [806, 833, 1130], "building_a_custom_kernel": 806, "fc33": [806, 811], "extravers": [806, 834], "cleanli": 806, "uncommit": 806, "j6": 806, "fedpkg": 806, "pesign": 806, "grubbi": 806, "33rd": 806, "f33": 806, "builddep": 806, "libexec": [806, 1019], "symver": [808, 811], "modpost": [808, 811], "module_src": 808, "kernel_build": 808, "install_mod_path": [808, 833], "modules_instal": [808, 833, 937], "fedora_kernel_build": 810, "fedora_module_build": 810, "modules_hello_world": 810, "cdev_manu": 810, "process_vs_atom": 810, "stub_sysprog_dup": 810, "cdev_auto": 810, "cdev_file_oper": 810, "cdev_first_function": 810, "cdev_refactor": 810, "multiple_devic": 810, "mutex_cod": 810, "raspi_kernel_build": 810, "interrupt_cod": 810, "spinlock_cod": 810, "timer_cod": 810, "iomemori": 810, "usermem": 810, "netdev": 810, "waitqueu": [810, 1189], "ldd3": [810, 821], "reilli": [810, 922], "probe": [811, 937, 938, 939], "hello_init": 811, "kern_debug": 811, "hello_exit": 811, "module_init": 811, "module_exit": 811, "exot": 811, "currect": [811, 906], "lsmod": [811, 937, 938, 939], "insmod": 811, "rmmod": [811, 841], "dep": 811, "softdep": 811, "rebuilt": 811, "cross_compil": [813, 833, 834], "libssl": [813, 937], "gpio_request": 813, "gpio_fre": 813, "gpio_direction_input": 813, "gpio_direction_output": 813, "gpio_to_irq": 813, "my_device_activate_gpio": 813, "_destroi": 813, "3f200000": 813, "pinctrl": 813, "bcm2835": [813, 934], "request_irq": [813, 815, 829], "free_irq": [813, 815, 829], "priorit": [815, 831, 931, 989, 1001], "preempt_rt": [815, 825, 1179], "mainlin": [815, 833, 993, 1179], "irqreturn_t": [815, 829], "irq_handl": [815, 829], "irq": [815, 829, 831, 835, 991], "opqu": 815, "irq_non": 815, "irq_wake_thread": 815, "irq_handler_t": 815, "irqf_shar": [815, 829], "irqf_trigger_ris": 815, "irqf_trigger_fal": 815, "irqf_trigger_high": 815, "irqf_trigger_low": 815, "iomem": 817, "ioport": 817, "request_mem_region": 817, "0x20200000": 817, "release_mem_region": 817, "asm": [817, 1022], "iounmap": 817, "ioread8": 817, "ioread16": 817, "ioread32": 817, "iowrite8": 817, "u8": 817, "iowrite16": 817, "u16": 817, "iowrite32": 817, "u32": 817, "kmalloc kfre": 819, "dynamic memori": 819, "slab": 819, "gfp_t": [819, 836, 852], "kzalloc": 819, "kfree": 819, "scarc": 819, "discourag": 819, "stolen": [821, 930], "some_list": 821, "init_list_head": 821, "some_data": 821, "list_add": 821, "list_add_tail": 821, "new_payload": 821, "existing_payload": 821, "prepend": [821, 833, 865, 1068], "list_for_each": 821, "list_entri": 821, "cursor": [821, 893, 1140], "run_payload": 821, "list_empti": 821, "list_first_entri": 821, "list_del": [821, 823], "a_payload": 821, "inject": [823, 836, 841, 1143], "opfer": 823, "corrupt": 823, "ffff91285ae68f00": 823, "ffff9128406cec00": 823, "list_debug": 823, "0x70": [823, 938], "0xb0": 823, "0xdd": 823, "ksys_ioctl": 823, "0x82": 823, "0xc0": 823, "__x64_sys_ioctl": 823, "do_syscall_64": 823, "0x4d": 823, "entry_syscall_64_after_hwfram": 823, "0x44": 823, "0xa9": 823, "unprotect": [823, 835, 1051], "nevent": [823, 846], "my_device_list": 823, "preemptibl": [825, 993], "preemption": [825, 831, 838, 938, 989, 992, 993], "holder": [825, 1049], "mutex_init": 825, "mutex_destroi": 825, "mutex_lock": 825, "mutex_lock_interrupt": 825, "eintr": [825, 951, 1004, 1005], "mutex_lock_interruptible_nest": 825, "mutex_trylock": 825, "eagain": [825, 835, 849], "mutex_unlock": 825, "torvald": [825, 833], "trickl": 825, "rtmutex": 825, "rt_mutex": 825, "net_devic": 827, "alloc_netdev": 827, "sizeof_priv": 827, "netdev_priv": 827, "funcion": 827, "ethernet": 827, "etherdevic": 827, "alloc_etherdev": 827, "free_netdev": 827, "register_netdev": 827, "unregister_netdev": 827, "devinc": 827, "hard_start_xmit": 827, "sk_buff": 827, "skb": 827, "transmiss": [827, 956, 1127], "tx_timeout": 827, "quota": [827, 859], "stead": 827, "do_ioctl": 827, "ifreq": [827, 933], "ifr": [827, 933], "netif_start_queu": 827, "netif_stop_queu": 827, "netif_wake_queu": 827, "udevd": 829, "pci_device_id": 829, "my_id": 829, "pci_devic": 829, "0xdead": 829, "0xbeef": 829, "0xbeee": 829, "module_device_t": 829, "my_prob": 829, "my_remov": 829, "my_suspend": 829, "pm_message_t": 829, "my_resum": 829, "my_shutdown": 829, "pci_driv": 829, "id_tabl": 829, "my_init": 829, "pci_register_driv": 829, "my_exit": [829, 1038], "pci_unregister_driv": 829, "subsystem_vendor": 829, "subsystem_devic": 829, "u64": [829, 843], "dma_mask": 829, "device_count_resourc": 829, "pci_enable_devic": 829, "pdev": 829, "wizardri": 829, "pci_request_region": 829, "pci_set_mast": 829, "pci_clear_mast": 829, "pci_set_dma_mask": 829, "pci_set_drvdata": 829, "ioread": 829, "iowrit": 829, "pci_resource_len": 829, "bar_no": 829, "__iomem": 829, "pci_iomap": 829, "pci_iounmap": 829, "pci_alloc_consist": 829, "os_devic": 829, "_o": 829, "dma_addr": 829, "pci_free_consist": 829, "_size": 829, "_cpu_addr": 829, "t_os_dma_addr__get_n": 829, "_dma_addr": 829, "_os_devic": 829, "dma_bit_mask": 829, "pci_set_consistent_dma_mask": 829, "config_debug_atomic_sleep": [831, 836], "cross compil": 833, "educ": 833, "raspberrypi": [833, 834, 937, 1009, 1016], "borrow": 833, "pi2": 833, "1gb": 833, "canon": [833, 950], "workstat": 833, "hf": 833, "armv6j": 833, "hardfloat": 833, "gnueabi": 833, "objcopi": 833, "raspberry_pi": 833, "local_overlai": 833, "ebuild": 833, "binutil": [833, 834], "repo_nam": 833, "9999": 833, "sourcedir": 833, "builddir": 833, "buildparam": 833, "kconfig": 833, "zconf": 833, "raspbian": 833, "bootdir": 833, "bootf": 833, "rootf": 833, "kernel7": 833, "Then": [833, 948, 1147], "assimil": 833, "bcmrpi_defconfig": 833, "bcm2709_defconfig": 833, "config_localvers": 833, "config_ikconfig": 833, "eveytim": 833, "config_can_mcp251x": 833, "config_sensors_lm73": 833, "zimag": [833, 834, 937], "dtb": [833, 834, 937], "j3": 833, "mkknlimg": 833, "te": 833, "superus": 833, "jtf": 833, "bcm2709": 833, "smi": 833, "ft5406": 833, "can1": [833, 932], "v7": [833, 834], "ipv4": [833, 1201], "xfrm4_mode_beet": 833, "inet_lro": 833, "esp4": 833, "xfrm4_mode_transport": 833, "udp_tunnel": 833, "sdb": 833, "57344": 833, "sdb1": 833, "4162560": 833, "sdb2": 833, "enjoi": 833, "ec2aa3d2": 833, "eee7": 833, "454e": 833, "d145df5ddcba": 833, "agnost": 833, "urg": 833, "rasperri": [834, 937, 939, 1188, 1195], "patchlevel": 834, "sublevel": 834, "_morph": [835, 845], "my_driver_hello": 835, "my_driver_cdev_manu": 835, "my_driver_cdev_dynamic_major": 835, "my_driver_cdev_file_oper": 835, "my_driver_cdev_first_function": 835, "my_driver_cdev_refactor": 835, "my_driver_multiple_devic": 835, "my_driver_mutex": 835, "my_driver_interrupt": 835, "my_driver_spinlock_atom": 835, "my_driver_time_tim": 835, "my_driver_workqueu": 835, "my_driver_usermem": 835, "copy_": 835, "my_driver_waitqueu": 835, "nonblock": [835, 849, 1001, 1201], "spinlock_t": [836, 838], "isr": [836, 993, 1189], "spin_unlock": [836, 838], "reenabl": 836, "uniprocessor": 838, "multiprocessor": 838, "spin_lock_init": 838, "spin_lock": 838, "spin_trylock": 838, "irqflag": 838, "spin_lock_irqsav": 838, "spin_unlock_irqrestor": 838, "pend": [841, 870, 993, 1006], "my_inject_deferred_ev": 841, "my_device_add_deferred_ev": 841, "del_timer_sync": [841, 843], "paranoia": 841, "symmetri": 841, "my_device_add_ev": 841, "my_inject_ev": 841, "tick": 843, "config_hz": 843, "friendli": [843, 1081, 1150, 1154], "hrtimer": 843, "jiffies_to_msec": 843, "jiffies_to_usec": 843, "jiffies_to_nsec": 843, "msecs_to_jiffi": 843, "usecs_to_jiffi": 843, "timespec64_to_jiffi": 843, "timespec64": 843, "jiffies_to_timespec64": 843, "timer_list": 843, "my_tim": 843, "timerfunc": 843, "timer_setup": 843, "add_tim": 843, "del_tim": 843, "0520": 845, "0521": 845, "0525": 845, "0532": 845, "0710": 845, "preempt": [845, 989, 993], "caption": 845, "backlink": 845, "my_event_nod": 846, "my_get_one_ev": [846, 849], "my_device_get_one_ev": 846, "my_event_get_one_ev": 846, "efault": [846, 847], "uaccess": 847, "copy_to_us": 847, "copy_from_us": 847, "enosi": 849, "timerfd": [849, 957, 997], "f_flag": 849, "wait_queue_head_t": 850, "wq": [850, 852, 853], "init_waitqueue_head": 850, "sched": 850, "wait_ev": 850, "wait_event_interrupt": 850, "wait_event_timeout": 850, "timeout_jiffi": 850, "wait_event_interruptible_timeout": 850, "wake_up": 850, "wake_up_interrupt": 850, "task_interrupt": 850, "create_workqueu": [852, 853], "destroy_workqueu": [852, 853], "eo": 852, "rtprio": 852, "work_struct": [852, 853], "init_work": [852, 853], "chrt": [852, 993], "workqueue_struct": 853, "work_func_t": 853, "queue_work": 853, "packen": 855, "gunzip": 857, "zgrep": 857, "zcat": 857, "zless": 857, "intact": [857, 1106, 1110], "viro": 858, "cpio": 858, "cleaner": 858, "archivformat": 858, "lzma": 858, "430mb": 858, "95mb": 858, "74mb": 858, "5m": [858, 930], "64mb": 858, "togeht": 859, "gfs2": 859, "zcf": 859, "decompress": [859, 1019], "zxf": 859, "ztf": 859, "dirt": 859, "livingroom": 859, "grumbl": 859, "reat": 859, "tract": 859, "ell": [859, 893], "vv": 859, "supplementari": [860, 861, 868, 870], "1021": [860, 861, 868], "somefil": [860, 861, 899], "chgrp": [860, 861, 878, 885, 887], "fellow": [860, 861], "picki": [860, 861, 1043], "ttyusb1": 864, "stick": [864, 868], "2006854": 864, "sdc": 864, "2006823": 864, "deserv": [864, 922, 983, 1009], "trash": [864, 893], "burn": [864, 939], "1mib": 864, "1mibf": 864, "0m": [864, 915, 991], "mkf": 864, "entropi": 864, "my_vari": 865, "1034184": 865, "1035812": 865, "ancestor": [865, 871, 949], "decriptor": [866, 965], "getti": 868, "kerbero": [868, 870], "gnome3": 868, "agetti": 868, "cleartext": [868, 889], "brute": [868, 946, 1009], "crack": 868, "attack": [868, 946, 1024, 1143, 1187], "hierarch": 869, "peripher": [869, 1188, 1195], "grand": 869, "ten_integ": 870, "unfair": [870, 993], "dialout": [870, 965], "seg": 870, "kbyte": 870, "62715": 870, "819200": 870, "pstree": 871, "modemmanag": 871, "journ": 871, "abrtd": 871, "auditd": 871, "bluetoothd": 871, "cupsd": 871, "lau": 871, "tini": [871, 1007], "enemi": 872, "guidanc": 872, "dicdat": 872, "acknowledg": [872, 930], "seamless": [872, 1156], "exampk": 872, "altruism": 872, "mkfifo": [873, 877], "stdin_fileno": [875, 959, 969, 1005, 1081], "stdout_fileno": [875, 955, 956, 959, 965, 991, 1000, 1004, 1005, 1081], "stderr_fileno": [875, 959, 1081], "religi": 875, "fed": 875, "filefor": 875, "weekli": 876, "compet": [877, 938], "award": [877, 924], "plumber": 877, "sniff": 877, "fifo": [877, 959, 1200], "rendezv": 877, "unnam": 877, "chown": [878, 890, 1021], "useradd": [878, 1021], "groupadd": 878, "usermod": 878, "groupmod": 878, "teammember42": 878, "manfromthestreet": 878, "jun": [878, 1009], "triplet": 878, "1003": 878, "110100100": 878, "110000000": 878, "0600": 878, "111101101": 878, "0755": 878, "bitmask": [878, 889, 1005], "1317": 889, "mdmckqvpfaqquqypvzjjkihsbkkcniogknxtiobvbfw8u7zuf3": 889, "0g2rqr9cnydnqq5unt": 889, "wpu8jyzeuxktapl0": 889, "burnout": 889, "retyp": 889, "rwsr": [889, 890], "32712": 889, "rwxrwxrwx": 889, "4755": [889, 890], "uid_t": 890, "getuid": 890, "geteuid": 890, "rwxrwxr": [890, 955, 1007, 1008, 1009], "24456": 890, "drwxrwxrwt": 891, "0022": 892, "strain": 893, "injuri": 893, "diseas": 893, "outout": 893, "20k": 893, "olevel": 893, "debugopt": 893, "expr1": 893, "expr2": 893, "daystart": 893, "regextyp": 893, "synopsi": 893, "findu": 893, "til": 893, "findutil": 893, "pression": 893, "print0": 893, "keystrok": 893, "noob": [893, 1054], "pos1": 893, "misconfigur": 893, "esc": 893, "freak": 893, "cvsserver": 893, "gitview": 893, "oesterreich": 893, "clearanc": 893, "e7d76d19": 893, "dd3d": 893, "4d52": 893, "2c16dc73f9d1_vstv_921302213705_2021___vstvf": 893, "boardingpass_1d9xf3dvd1uzt00tsswu68duh": 893, "gif": [893, 1144], "einkommensteuerbescheid1": 893, "boardingpass_b6uy9xqgeojspx1hxshogcbbq": 893, "einkommensteuervorauszahlungsbescheid1": 893, "immobilienbewertung": 893, "etw": 893, "confirm": 893, "ova": 893, "umsatzsteuerbescheid1": [893, 915, 916], "h0020211105124337": 893, "vk9vst311192021_0022021": 893, "img_": 895, "jpg": 895, "bilder": 895, "121751": 896, "op": [896, 1082], "garbage1": [897, 898, 900, 904, 905], "garbage2": [897, 898, 900, 904, 905], "diretori": 899, "sweetheart": [899, 905, 912, 986], "citi": 899, "mqueue": [908, 1000], "leavel": 912, "hintingx": 915, "1048576": 915, "drwx": [915, 917], "36817": 915, "umsatzsteuerbescheid": 916, "finanzamt": 916, "abgab": 916, "neighbor": [917, 1138], "enat": 918, "dereferenzieren": 920, "50k": [920, 921], "rekursiv": 921, "eintr\u00e4g": 921, "unterhalb": 921, "gefiltert": 921, "un\u00fcblich": 921, "gebr\u00e4uchlich": 921, "geh\u00f6ren": 921, "mmin": 921, "h\u00f6chsten": 921, "gefundenem": 921, "eintrag": 921, "heissen": 921, "beginnen": 921, "versteht": 921, "vergessen": 921, "j\u00fcnger": 921, "verkn\u00fcpft": 921, "metacharact": [921, 940], "gr\u00f6\u00dfer": 921, "lobal": 922, "egular": 922, "xpression": 922, "rint": 922, "sed": [922, 1188, 1195], "tream": 922, "itor": 922, "verb": 922, "insensit": [922, 1155], "entor": 922, "perlr": 922, "perlretut": 922, "perlrequick": 922, "jeffrei": 922, "friedl": 922, "philosopi": 926, "toether": 926, "hc": 926, "325324": 926, "xarg": 926, "bitbak": 928, "behan": 928, "webster": 928, "drone": 930, "electronic speed control": 930, "vehicl": 930, "rack": 930, "recognit": [930, 1138], "flight": 930, "fritz": [930, 938], "brigh": 930, "heinrich": 930, "polar": 930, "uevent": [930, 937, 938, 939, 973], "cheapest": 930, "quicrun": 930, "16bl30": 930, "brake": 930, "11v": 930, "conclud": [930, 938], "lipo": 930, "madli": 930, "transmitt": 930, "throttl": 930, "neutral": [930, 1140], "chop": 930, "kindli": [930, 1144], "mechatron": 930, "50hz": 930, "nanosecond": [930, 938, 957], "20000000": [930, 1041], "oscil": 930, "10bl60": 930, "000n": 930, "1500000": [930, 995], "2000000": 930, "1550000": 930, "1600000": 930, "acceler": 930, "1650000": 930, "1700000": 930, "1750000": 930, "1800000": 930, "1850000": 930, "1900000": 930, "1950000": 930, "logist": [930, 1138], "hobbi": 930, "can bu": [931, 932, 933, 934], "sinowatz": [931, 1031], "volkswagen": 931, "traffic": 931, "octet": 931, "arbitr": 931, "can_fram": [931, 933], "canid_t": [931, 933], "can_id": [931, 933], "eff": [931, 933], "rtr": [931, 933], "__u8": [931, 933], "can_dlc": [931, 933], "__attribute__": [931, 933], "can0": [932, 933], "noarp": 932, "qdisc": 932, "qlen": 932, "relic": 932, "cansend": 932, "candump": 932, "canplay": 932, "cangen": 932, "snif": 932, "loopback": 932, "pf_can": 933, "sockaddr_can": 933, "sock_raw": 933, "can_raw": 933, "ifr_nam": 933, "siocgifindex": 933, "can_famili": 933, "af_can": 933, "can_ifindex": 933, "ifr_ifindex": 933, "sockaddr": [933, 956], "can_socket": 933, "packt": 933, "frame_layout": 933, "ib3x8": 933, "frame_s": 933, "calcsiz": 933, "recvfrom": 933, "sendto": 933, "lnxpp": 934, "can2udp": 934, "openwrt": 934, "asymmetrisch": 934, "mosi": 934, "miso": 934, "sclk": 934, "broadcom": 934, "ce0": 934, "3v": [934, 937], "5v": [934, 937], "transceiv": 934, "inter intergrated circuit": 937, "lm-sensor": 937, "handwork": [937, 939], "texa": 937, "maker": 937, "dtparam": [937, 938, 939], "i2c_arm": [937, 938, 939], "gpio2": 937, "gpio3": 937, "i2c_bcm2835": [937, 938, 939], "fe804000": [937, 939, 973], "i2c_dev": [937, 938], "sot": 937, "7v": 937, "rail": 937, "capacitor": 937, "idc": 937, "gnd": [937, 939], "vdd": 937, "smbdat": 937, "smbclk": 937, "unconnect": 937, "0x49": 937, "0x4a": 937, "jumper": 937, "3v3": [937, 939], "scl": [937, 939], "probl": 937, "i2c_slav": 937, "0x0703": 937, "o_rdwr": [937, 959, 966, 1000], "msb_lsb": 937, "msb": 937, "lsb": [937, 1008], "65535": 937, "dev_fd": 937, "perror": [937, 951, 955, 956, 957, 963, 964, 965, 966, 971, 974, 991, 997, 1000, 1004], "libncurs": 937, "bcm2711_defconfig": 937, "v7l": 937, "semiconductor": 937, "j4": 937, "kernel7l": 937, "new_devic": [937, 939], "0048": 937, "modalia": 937, "preinstal": 937, "hwmon0": 937, "thermal": 937, "thermal_zone0": 937, "hwmon1": [937, 939], "temp1_max": 937, "temp1_max_alarm": 937, "temp1_min": 937, "temp1_min_alarm": 937, "update_interv": 937, "milli": [937, 939], "22000": 937, "randomli": [937, 939], "nomenclatur": 937, "pulse width modul": 938, "resistor": 938, "bright": 938, "potentiomet": 938, "ssop": 938, "0b1000000": 938, "buse": [938, 939], "i2cdetect": [938, 939], "charactr": 938, "pca": 938, "simultan": [938, 1004], "peculiar": 938, "pca9685a": 938, "nxp": 938, "dtoverlai": [938, 939], "pwm_pca9685": 938, "regmap_i2c": 938, "3f804000": 938, "0040": [938, 973], "npwm": 938, "unexport": [938, 973], "butt": [938, 1019], "intercept": [938, 1030], "dim": 938, "fade": 938, "800000": [938, 1136], "600000": [938, 1136], "50000": 938, "apolog": 938, "kenel": 938, "devlop": 938, "pleasur": 938, "cornerston": 939, "unstabl": 939, "parasit": 939, "bitbang": 939, "gpiopin": 939, "profession": 939, "addon": 939, "pinout": 939, "01144fe43baa": 939, "w1_bus_master8": 939, "w1_bus_master1": 939, "amaz": 939, "400000000000": 939, "800000000000": 939, "behalf": [939, 953, 1007], "ad0": 939, "ad1": 939, "ad2": 939, "vcc": 939, "0x18": 939, "0b0011000": 939, "shortli": [939, 1030], "execstart": 939, "36864": 939, "w1_bus_master2": 939, "w1_bus_master3": 939, "w1_bus_master4": 939, "w1_bus_master5": 939, "w1_bus_master6": 939, "w1_bus_master7": 939, "busno": 939, "abtract": 939, "prepackag": 939, "afford": 939, "alarm": [939, 1003, 1006], "conv_tim": 939, "w1_slave_driv": 939, "eeprom": 939, "ext_pow": 939, "w1_slave": 939, "22750": 939, "crc": 939, "rpi_volt": 939, "isa": 939, "in0": 939, "cpu_therm": 939, "temp1": 939, "w1_slave_temp": 939, "reliabl": 939, "radiou": 939, "disappear": 939, "0c4000000000": 939, "0x28": 939, "dalla": [939, 967], "02131d9920aa": 939, "5d": 939, "011432f138f9": 939, "misbehavior": 939, "instabl": 939, "pump": 939, "nuclear": 939, "plant": 939, "ssh-keygen": [940, 946], "password authent": [940, 946], "key based authent": [940, 946], "remote login": [940, 946], "unencrypt": 940, "rlogin": 940, "telnet": 940, "nsa": 940, "primarili": [940, 1033, 1152], "sftp": 940, "portno": 940, "propaget": 940, "sha256sum": 941, "72c18232434d0551af75f964ea66ae5d9271faba895f40a929fb17f19d7ab44c": 941, "mitm": 946, "uncomfort": 946, "keygen": 946, "safeguard": 946, "unrespons": 947, "port forward": 948, "portforward": 948, "secure copi": [948, 949], "hmmm": 948, "whateer": 948, "mydocu": 949, "recus": 949, "mobil": 949, "bandwidth": 949, "mediat": 949, "descriptiotn": 949, "file system": 950, "network file system": 950, "smb": 950, "crawl": 950, "debianish": 950, "mountpoint": 950, "grant": 950, "idmap": 950, "errnum": 951, "strerror_r": 951, "buflen": 951, "cleanest": 951, "_r": 951, "reentrant": 951, "syscal": 953, "getaddrinfo": 953, "ri": 955, "nbytes_read": [955, 956, 957], "24608": 955, "1024root": 955, "nager": 955, "698nager": 955, "gatewai": 956, "peer": [956, 959], "netinet": 956, "af_inet": 956, "sock_stream": 956, "sockaddr_in": 956, "sin_famili": 956, "sin_port": 956, "inet_aton": 956, "sin_addr": 956, "ipproto_ip": 956, "sa_famili": 956, "inet_addr": 956, "10hallo": 956, "16thi": 956, "ong": 956, "14ong": 956, "timerfd_settim": 957, "itimerspec": [957, 991], "nasti": [958, 991], "ingenu": 959, "smae": 959, "o_append": 959, "o_cloexec": 959, "sigpip": [959, 1005], "whenc": 959, "seek_cur": 959, "seek_end": 959, "occupi": [959, 961, 962], "status": 960, "srcfile": 960, "dstfile": 960, "1073741825": 961, "0k": 961, "texttt": 962, "dup2": 962, "oldfd": 962, "newfd": 962, "o_": 962, "bytes_to_writ": [963, 964, 966], "wxr": 963, "o_tmpfil": 963, "speci": 963, "pli": 963, "nread": [965, 971, 974, 997, 1000, 1004], "thats": [965, 966], "litter": 966, "misspel": 966, "24625": 967, "24562": 967, "pread": 969, "pwrite": 969, "readv": 969, "writev": 969, "uio": 969, "iovec": 969, "iov": 969, "iovcnt": 969, "preadv": 969, "pwritev": 969, "ftruncat": [969, 1000, 1001], "filedescriptor": 969, "gpio26": [971, 973, 974], "subtre": 973, "fe200000": 973, "gpiochip488": 973, "gpiochip504": 973, "active_low": 973, "fd_set": [974, 997], "exc_fd": 974, "fd_zero": [974, 997], "nreadi": 974, "fd_isset": [974, 997], "eek": 974, "intens": 975, "ppid": 975, "tid": 975, "tsd": 975, "spezif": 975, "_reentrant": 975, "lpthread": [975, 991, 1010], "start_routin": 976, "pthread_exit": 976, "pthread_cancel": 976, "pthread_attr_setdetachst": 976, "detachst": 976, "pthread_create_detach": 976, "pthread_detach": 976, "pthread_self": 976, "pthread_equ": 976, "30650": 976, "13961": 976, "correl": 976, "gettid": 976, "pthread_mutexattr_t": [978, 994], "pthread_mutex_destroi": 978, "pthread_mutex_trylock": 978, "global_mutex": 978, "pthread_mutexattr_settyp": 978, "pthread_mutex_norm": 978, "pthread_mutex_errorcheck": 978, "pthread_mutex_recurs": 978, "pthread_mutex_default": 978, "pthread_cond_destroi": 980, "pthread_cond_broadcast": 980, "parlanc": 980, "set_autoreset_ev": 980, "ev": 980, "is_set": 980, "wait_autoreset_ev": 980, "acquiriert": 980, "autoreset": 980, "spuriou": 980, "woken": 980, "pthread_condattr_t": 980, "pthread_cond_initi": 980, "pthread_cond_timedwait": 980, "abstim": 980, "use_glob": 982, "pthread_once_t": 982, "global_onc": 982, "pthread_once_init": 982, "init_glob": 982, "pthread_onc": 982, "once_control": 982, "init_routin": 982, "pthread_key_cr": 982, "__thread": 982, "pthread_atfork": 983, "legales": 983, "lock_rac": 985, "succeed": [985, 1171], "foreground": [986, 1039], "huh": 986, "paradox": 986, "setenv": 988, "putenv": 988, "unsetenv": 988, "clearenv": 988, "customvar": 988, "timesl": 989, "starv": 989, "throughput": 989, "sha1": [989, 992, 1008], "voluntarili": [989, 992], "lrt": 991, "app_statu": 991, "tick_count": 991, "update_statu": 991, "sigact": [991, 1004, 1005], "sa_handl": [991, 1004, 1005], "sigrtmin": 991, "sigev": [991, 1001], "sev": 991, "sigev_notifi": 991, "sigev_sign": 991, "sigev_signo": 991, "timer_t": 991, "tspec": 991, "nsec": 991, "timer_settim": 991, "show_statu": 991, "freerto": [991, 994], "syncron": 991, "update_status_func": 991, "initial_t": 991, "interval_t": 991, "show_status_func": 991, "update_task": 991, "show_task": 991, "231765": 991, "225819": 991, "5635": 991, "lwp": 991, "231766": 991, "231767": 991, "tracer": 991, "restart_syscal": 991, "clock_nanosleep": 991, "clock_realtim": 991, "500000000": 991, "033": 991, "7m": 991, "flash_func": 991, "is_revers": 991, "flash_task": 991, "flasher": 991, "indepen": 991, "toggl": 991, "fore": [991, 1041], "particularli": 992, "suscept": 992, "renic": 993, "din": 993, "44300": 993, "echtzeitbetrieb": 993, "betrieb": 993, "rechensystem": 993, "verarbeitung": 993, "anfallend": 993, "st\u00e4ndig": 993, "derart": 993, "betriebsbereit": 993, "da\u00df": 993, "verarbeitungsergebniss": 993, "innerhalb": [150, 993, 1201], "vorgegebenen": 993, "zeitspann": 993, "000014": 993, "013914m": 993, "91410827636698u": 993, "000002": [993, 995], "002382m": 993, "3820173632900326u": 993, "intrus": 993, "controversi": 993, "sched_oth": 994, "relinquish": 994, "sched_param": 994, "sched_getschedul": 994, "sched_prior": 994, "pthread_setschedparam": 994, "pthread_getschedparam": 994, "predefini": 994, "pthread_attr_setschedpolici": 994, "spoken": 994, "pthread_mutexattr_setprotocol": 994, "pthread_prio_inherit": 994, "pthread_prio_protect": 994, "risen": 994, "pthread_mutexattr_setprioceil": 994, "000105": 995, "105247m": 995, "24749755859354u": 995, "000015": 995, "014643m": 995, "64260525619006u": 995, "105u": 995, "000067": 995, "067263m": 995, "2626495361326u": 995, "000003": 995, "002883m": 995, "8827592917392217u": 995, "ondemand": 995, "governor": 995, "cpufreq": 995, "scaling_governor": 995, "cpuinfo_cur_freq": 995, "067036m": 995, "03615188598611u": 995, "000001": 995, "001257m": 995, "2571678380193383u": 995, "000065": 995, "065188m": 995, "188407897949u": 995, "002376m": 995, "3758434034066656u": 995, "001042": 995, "042438m": 995, "4375534057617u": 995, "000017": 995, "017123m": 995, "123423079175748u": 995, "000143": 995, "142646m": 995, "6458358764593u": 995, "000005": 995, "004995m": 995, "994855006705264u": 995, "_syse": 997, "exit_failur": 997, "consume_fd": 997, "random_fd": 997, "tty_fd": 997, "nfd": 997, "ttys4": 997, "in_fd": 997, "eof_detect": 997, "shm": [999, 1000, 1001], "099": 999, "sem": [999, 1000, 1001], "shared memori": 1000, "message queu": 1000, "mman": 1000, "fstat": 1000, "st_size": 1000, "map_fail": 1000, "shm_open": [1000, 1001], "tmpf": [1000, 1001], "resiz": 1000, "4095": 1000, "weigh": 1000, "map_shar": 1000, "counter_loc": 1000, "sem_t": [1000, 1001], "sem_open": 1000, "sem_fail": 1000, "sem_wait": 1000, "sem_post": 1000, "mq_attr": [1000, 1001], "mq_maxmsg": [1000, 1001], "mq_msgsize": [1000, 1001], "mqd_t": [1000, 1001], "mq_open": 1000, "mq_send": 1000, "mq_receiv": 1000, "shm_unlink": 1001, "overtak": 1001, "mq_overview": 1001, "oflag": 1001, "mq_flag": 1001, "mqde": 1001, "msg_ptr": 1001, "msg_len": 1001, "msg_prio": 1001, "sevp": 1001, "disturb": [1001, 1004], "elegantli": 1001, "qsize": 1001, "signo": 1001, "notify_pid": 1001, "goiven": 1001, "sem_overview": 1001, "sem_trywait": 1001, "sem_timedwait": 1001, "abs_timeout": 1001, "shm_close": 1001, "shm_overview": 1001, "051": [1003, 1004], "segv": [1004, 1005], "mortem": [1004, 1130], "core_pattern": 1004, "termination_handl": 1004, "sigint": [1004, 1005], "sig_atomic_t": [1004, 1005], "term_act": 1004, "alarm_handl": 1004, "alarm_act": 1004, "sigset_t": [1004, 1006], "termination_sign": 1004, "sigemptyset": [1004, 1005], "sigaddset": [1004, 1005], "sigquit": 1004, "sigprocmask": [1004, 1005], "sig_block": 1004, "impolit": 1004, "sig": [1004, 1005], "consume_pip": 1004, "pipenam": 1004, "puzzl": 1004, "pthread_sigmask": [1004, 1005], "sigtstp": 1005, "sigalrm": [1005, 1006], "sigchld": 1005, "abnorm": 1005, "sigabrt": 1005, "sigsegv": 1005, "sigbu": 1005, "sigil": 1005, "sigfp": 1005, "unblock": 1005, "oldset": 1005, "sigpend": 1005, "sigfillset": 1005, "signum": 1005, "sigdelset": 1005, "sigismemb": 1005, "sigsetop": 1005, "recept": 1005, "sa_mask": 1005, "sa_flag": 1005, "oldact": 1005, "sig_ign": 1005, "sig_dfl": 1005, "sighandler_t": 1005, "_exit": 1005, "barebon": 1006, "louder": 1006, "stallman": 1007, "risc": 1007, "llvm": 1007, "24360": 1007, "hello_h": [1007, 1023, 1025], "24416": 1007, "linkabl": [1007, 1143, 1198], "0000000000401040": 1007, "_start": 1007, "0000000000401000": 1007, "_init": 1007, "00000000004011b8": 1007, "_fini": 1007, "crt": 1007, "crt1": 1007, "crti": 1007, "crtn": 1007, "0000000000404000": 1007, "_global_offset_table_": 1007, "reloc": 1007, "1762320": 1007, "0000000000401126": 1007, "1224008": 1007, "greetdemo": 1008, "cmake_system_nam": 1008, "toolchain_base_dir": [1008, 1022], "cmake_c_compil": 1008, "cmake_cxx_compil": 1008, "find_xxx": 1008, "cmake_find_root_path_mode_program": 1008, "cmake_find_root_path_mode_librari": 1008, "cmake_find_root_path_mode_includ": 1008, "toolchian": 1008, "cmake_toolchain_fil": 1008, "libgreet": [1008, 1009, 1015, 1024, 1025], "13921": [1008, 1009], "cmakecach": [1008, 1009], "26192": [1008, 1009], "27920": [1008, 1009], "8503": [1008, 1009], "eabi5": 1008, "armhf": 1008, "5db807d9b005b19e1e0c957755fa7ca7b771edcb": 1008, "debug_info": 1008, "armv7l": 1010, "challeng": 1010, "metadistribut": 1010, "miniumum": 1010, "realiti": 1010, "rasberri": 1012, "clickabout": 1017, "workabl": 1019, "tarbal": 1019, "lastest": 1019, "x86_64_arm": 1019, "precompos": 1019, "uncompress": 1019, "73812": 1019, "1107168": 1019, "1481768": 1019, "1968456": 1019, "1091864": 1019, "1030432": 1019, "1221816": 1019, "lynxbe": 1021, "y3p9kn7mjei": 1021, "cli": 1021, "dockerhub": 1021, "hub": 1021, "sh_18_04": 1021, "78683068": 1021, "1292296": 1021, "70mb": 1022, "73018472": 1022, "auxvec": 1022, "bitsperlong": 1022, "bpf_perf_ev": 1022, "rapidli": 1023, "phoni": [1023, 1024, 1025], "origaniz": 1024, "relink": 1024, "0x2e20": 1024, "vdso": 1024, "0x00007fffe9fa7000": 1024, "0x00007f75ca289000": 1024, "0x00007f75ca46d000": 1024, "r_x86_64_32": 1024, "fpic": 1024, "whom": 1025, "hello_flex": 1025, "hello_flexible_h": 1025, "cq": 1025, "lisp": 1026, "create_f": 1026, "create_print": 1026, "print_blah": 1026, "print_someth": 1026, "sytax": 1027, "shutil": 1028, "tarfil": 1028, "temporarydirectori": 1028, "tmpd": 1028, "tarnam": 1028, "expandvar": 1028, "contrain": 1028, "__enter__": 1028, "__exit__": 1028, "openforread": 1028, "myprint": 1028, "orig_print": 1028, "exc_val": 1028, "exc_tb": 1028, "myarg": 1028, "total_ord": 1029, "a_vari": 1030, "fallback": [1030, 1050], "baseexceptiongroup": 1030, "exceptiongroup": 1030, "subtyp": 1030, "maybe_fail": 1030, "lone": 1030, "mysubsystemerror": 1030, "reallybaderror": 1030, "someothererror": 1030, "definitelybad": 1030, "evenwors": 1030, "collapsingtheworld": 1030, "errorcod": 1030, "__cached__": 1031, "_frozen_importlib_extern": 1031, "sourcefileload": 1031, "0x7f92423fc350": 1031, "blindli": 1031, "ansibl": 1031, "matno": 1031, "conffil": 1031, "confcod": 1031, "confdict": 1031, "object ori": [1032, 1187], "keyword argu": 1032, "starstararg": [1032, 1053], "for loop": 1032, "iterator protocol": 1032, "operator overload": 1032, "drawn": 1033, "inputrang": 1033, "disgust": 1033, "gentli": 1033, "smarter": 1033, "nolimit": 1034, "fibo_numb": 1034, "jerki": 1034, "max_numb": 1034, "satisfactori": 1034, "python_1010_generators_yield": 1034, "glossari": 1035, "breadth": 1035, "subnamespac": 1038, "mysupermodul": 1038, "mysuperfunct": 1038, "subpackage1": 1038, "module1": 1038, "module2": 1038, "subpackage2": 1038, "disambigu": 1038, "increment_background": [1039, 1041], "background_integ": 1039, "foreground_integ": 1039, "runn": 1039, "backgroundincrement": 1039, "uncool": 1039, "14784035": 1041, "quack": 1043, "mockup": 1043, "267316789916016": 1043, "57266613773274": 1043, "745538590905646": 1043, "367629460753335": 1043, "52003657939675": 1043, "__next__": 1043, "brokensensor": 1043, "gettemperatur": 1043, "refect": 1044, "emp": 1047, "add_employe": 1047, "mgr": 1047, "isold": [1047, 1048, 1148], "haubentauch": [1047, 1048, 1051, 1148], "parentcl": 1047, "funnili": 1047, "make_child": 1048, "parent1": 1048, "parent2": 1048, "vvv": 1048, "father": 1048, "vvvvvv": 1048, "tabular": 1049, "someclass": 1049, "persons_from_csv": 1049, "person_dict": 1049, "operators object oriented program": 1050, "behaivor": 1050, "number2": 1050, "int2": 1050, "whistl": [1050, 1053], "symmetr": [1050, 1080], "commut": 1050, "summar": 1050, "attrnam": 1051, "meier": 1051, "expicitli": 1052, "0x7fc4d3109340": 1052, "marker": 1056, "eighti": 1056, "monti": 1056, "incompat": [1056, 1062, 1070, 1081], "benevol": 1056, "bdfl": [1056, 1140], "overse": 1056, "januari": 1056, "dropbox": 1056, "awk": 1058, "sensit": 1061, "throughout": 1061, "0o01234": 1062, "14159265359": [1062, 1076], "3e12": 1062, "\u00e4\u00f6\u00fc": 1062, "xa4": 1062, "xb6": 1062, "xbc": 1062, "xe4": 1062, "compel": 1062, "codebas": 1062, "ancient": 1062, "sequencish": 1066, "sixtim": 1066, "seen_sixey": 1066, "blahblahblahblahblah": 1067, "aah": 1068, "a_list": 1068, "hlow": 1068, "hlowrd": 1068, "heritag": 1070, "140055840421096": 1071, "140055840421128": 1071, "140055840421352": 1071, "140055535259712": 1071, "140055557128736": 1071, "parameterizab": 1073, "program_exit": 1073, "exitstatu": 1073, "spam": [1075, 1138], "dec": 1075, "x58": 1075, "07d": 1076, "0x": 1076, "5x": 1076, "0x2f": 1076, "4x": 1076, "0x002f": 1076, "5o": 1076, "0o31": 1076, "04d": 1076, "0042": 1076, "05d": 1076, "00042": 1076, "thistl": 1077, "thorn": 1077, "annoy": 1077, "sqn": 1078, "defval": 1079, "iterkei": 1079, "keyiter": 1079, "0x7ff2e8753418": 1079, "unord": 1080, "tunabl": 1081, "shoudn": 1081, "0x7fca2c785b70": 1082, "tof": 1082, "outputfilenam": 1083, "argumentpars": 1083, "add_argu": 1083, "parse_arg": 1083, "ou": 1083, "ylabel": [1085, 1136], "xmin": 1085, "xmax": 1085, "ymin": 1085, "ymax": 1085, "twine": 1086, "lotsa": [1086, 1159], "long_descript": 1086, "long_description_content_typ": 1086, "beta": 1086, "osi": 1086, "approv": 1086, "package_dir": 1086, "python_requir": 1086, "install_requir": 1086, "paho": [1086, 1147], "pyproject": 1086, "toml": 1086, "backend": 1086, "build_meta": 1086, "yadda": 1086, "sdist": 1086, "python_course_2022_11_07": 1086, "12549": 1086, "BE": 1086, "mydb": 1087, "hardli": 1088, "femal": 1093, "miracl": [1096, 1113], "previouslin": 1100, "ifi": 1113, "uniqifi": 1114, "sensor_const": 1119, "test_sensor_const": 1119, "ii": [1120, 1122, 1126, 1128, 1139], "user_record": [1121, 1123], "read_csv_head": [1121, 1128], "read_csv_nohead": [1123, 1127, 1128], "csvfilenam": 1125, "test_noheader_person": 1126, "read_noheader_person": 1126, "test_must_not_use_global_variables_as_return_object": 1126, "filename1": 1126, "noheader1": 1126, "filename2": 1126, "noheader2": 1126, "users1": 1126, "users2": 1126, "test_header_person": 1126, "read_header_person": 1126, "test_user_json_person": 1126, "userdb_json": [1126, 1127], "test_person_to_json": 1126, "joerg_sent": 1126, "to_json_person": 1126, "joerg_receiv": 1126, "from_json_person": 1126, "envis": [1127, 1185], "to_json": 1127, "test_user_json": 1127, "test_user_to_json": 1127, "user_s": 1127, "json_user_s": 1127, "from_json": 1127, "test_nohead": 1128, "test_head": 1128, "lectur": [1130, 1199], "unsupervis": [1133, 1138], "conveyor": 1133, "belt": 1133, "linear_regress": [1134, 1137], "model_select": [1134, 1136], "train_test_split": [1134, 1136], "linear_model": [1134, 1136], "linearregress": [1134, 1136], "history_data": [1134, 1135, 1136, 1137], "inputfeatur": [1134, 1136], "outputfeatur": [1134, 1136], "input_train": [1134, 1136], "input_test": [1134, 1136], "output_train": [1134, 1136], "output_test": [1134, 1136], "test_siz": [1134, 1136], "output_predict": [1134, 1136], "visualcross": 1135, "york": [1135, 1136], "wind": [1135, 1136], "chill": [1135, 1136], "precipit": [1135, 1136], "snow": [1135, 1136], "gust": [1135, 1136], "humid": [1135, 1136], "rain": 1135, "cloudi": 1135, "995833": 1136, "688889": 1136, "287500": 1136, "327273": 1136, "012222": 1136, "690278": 1136, "470769": 1136, "369444": 1136, "513421": 1136, "946106": 1136, "574023": 1136, "313256": 1136, "994536": 1136, "070695": 1136, "025980": 1136, "302423": 1136, "214825": 1136, "665492": 1136, "900000": 1136, "700000": 1136, "090000": 1136, "050000": 1136, "377500": 1136, "750000": 1136, "950000": 1136, "650000": 1136, "330000": 1136, "325000": 1136, "850000": 1136, "425000": 1136, "825000": 1136, "715000": 1136, "470000": 1136, "970000": 1136, "multidimension": 1136, "xlabel": 1136, "coef_": 1136, "80189231": 1136, "intercept_": 1136, "95355086": 1136, "609608": 1136, "571879": 1136, "736988": 1136, "170933": 1136, "798254": 1136, "189739": 1136, "180394": 1136, "449230": 1136, "661530": 1136, "057745": 1136, "850176": 1136, "284120": 1136, "685067": 1136, "weather": [1137, 1138], "splice": [1137, 1138], "paper": 1137, "aspir": [1137, 1164], "dilig": 1138, "bite": 1138, "forecast": 1138, "agi": 1138, "asi": 1138, "forest": 1138, "predictor": 1138, "accuraci": 1138, "classif": 1138, "unlabel": 1138, "reinforc": 1138, "reward": 1138, "bay": 1138, "sepp": 1139, "tupleunpack": 1139, "spell": 1139, "redundantli": 1139, "quotechar": 1139, "spreadsheet": 1139, "odbc": 1140, "mysql": 1140, "informix": 1140, "berkeleydb": 1140, "mongodb": 1140, "rollback": 1140, "initd": 1142, "psycopg": 1142, "libpq": 1142, "conninfo": 1142, "psycopg2": 1142, "schwammerldb": 1142, "android": 1143, "schwammerln": 1143, "giftig": 1143, "geniessbar": 1143, "dbm": 1143, "steinpilz": 1143, "roehren": 1143, "speisetaeubl": 1143, "lamellen": 1143, "speitaeubl": 1143, "eierschwammerl": 1143, "teufelsroehrl": 1143, "overcod": 1144, "512119": 1144, "european": 1144, "steroid": 1144, "htmlhelp": 1144, "charset": 1144, "latin1": 1144, "chines": 1144, "enc": 1144, "0xfc": 1144, "0xdf": 1144, "0xf6": 1144, "\u00df": 1144, "cyril": 1144, "received_enc": 1144, "lg_enc": 1144, "bye_enc": 1144, "artificial intellig": 1145, "postgr": 1145, "mssql": 1145, "data sci": 1145, "ecosystem": 1145, "antp": 1147, "53767": 1147, "tcp6": 1147, "mosquitto_pub": 1147, "easiest": 1147, "message_receiv": 1147, "userdata": 1147, "on_messag": 1147, "loop_forev": 1147, "mosqitto_pub": 1147, "styrian": 1147, "esp": 1147, "666608091972": 1148, "ignore_index": 1148, "new_person": 1148, "saskia": 1148, "456710042003": 1148, "irrevers": 1149, "1153": [1152, 1153], "_locationindex": [1152, 1153], "maybe_cal": [1152, 1153], "apply_if_cal": [1152, 1153], "_getitem_axi": [1152, 1153], "_ilocindex": 1152, "1711": 1152, "1713": 1152, "_validate_integ": 1152, "_ix": 1152, "1647": 1152, "1645": 1152, "len_axi": 1152, "_get_axi": 1152, "rangeindex": 1153, "3791": 1153, "get_loc": 1153, "casted_kei": 1153, "pyx": 1153, "_lib": 1153, "indexengin": 1153, "hashtable_class_help": 1153, "pxi": 1153, "pyobjecthasht": 1153, "get_item": 1153, "1393": 1153, "_locindex": 1153, "1391": 1153, "thru": 1153, "_validate_kei": 1153, "_get_label": 1153, "1343": 1153, "1341": 1153, "axisint": 1153, "5567": 1153, "ndframe": 1153, "drop_level": 1153, "new_index": 1153, "4235": 1153, "4239": 1153, "bool_": 1153, "3793": 1153, "3795": 1153, "3797": 1153, "invalidindexerror": 1153, "3799": 1153, "listlik": 1153, "_check_indexing_error": 1153, "3801": 1153, "3803": 1153, "sort_index": 1153, "multiindex": 1153, "contrari": 1154, "lower_email": 1155, "rentner": 1155, "is_palindrom": 1155, "facto": [1156, 1180], "subel": 1156, "attrib": 1156, "getroot": 1156, "package manag": 1158, "project manag": [1158, 1186], "unit test": 1158, "virtual environ": 1158, "affin": 1158, "witch": 1159, "gnore": 1159, "ackup": 1159, "bort": 1159, "cert": 1159, "pem": 1159, "pythonhost": 1159, "e17846ef3601dcb6f118ea447439650e0c35cb4fe60274fbe24214156df2": 1159, "cp38": 1159, "manylinux2010_x86_64": 1159, "ext": 1159, "argcomplet": 1159, "asn1crypto": 1159, "ensurepip": [1160, 1166], "test_project": 1164, "test_soup": 1164, "test_task": 1164, "stringent": 1164, "discoveri": 1164, "syndrom": [1164, 1165, 1171], "test_person_point": 1164, "deselect": 1164, "test_": 1164, "test_simpl": 1164, "test_trivi": 1164, "test_trivial_but_fail": 1164, "___________________________": 1164, "____________________________": 1164, "test_stat": 1164, "implementation_point": 1164, "implementor1": 1164, "implementor2": 1164, "documentation_point": 1164, "integration_point": 1164, "implementation_perc": 1164, "documentation_perc": 1164, "integration_perc": 1164, "total_perc": 1164, "total_point": 1164, "gathered_point": 1164, "test_another_task_aspect": 1164, "test_ini_file_pars": 1164, "my_test_fil": 1164, "mytestcas": 1165, "runtest": 1165, "assertequ": 1165, "texttestrunn": 1165, "__db": 1165, "create_databas": 1165, "fill_test_data": 1165, "remove_databas": 1165, "testfeature1": 1165, "testfeature2": 1165, "testsuit": 1165, "addtest": 1165, "testload": 1165, "loadtestsfromtestcas": 1165, "testsometh": 1165, "failif": 1165, "failunless": 1165, "failunlessequ": 1165, "failifequ": 1165, "failunlessalmostequ": 1165, "failunlessrais": 1165, "env_dir": 1166, "my_venv": 1166, "easy_instal": 1166, "pip3": 1166, "powershel": 1166, "joblib": 1166, "threadpoolctl": 1166, "deactiv": 1166, "my_recreated_venv": 1166, "persuad": 1166, "will_fail": [1170, 1173], "initgoogletest": [1171, 1176], "run_all_test": [1171, 1176], "lgtest": [1171, 1173], "onesuit": 1171, "test1": 1171, "test2": 1171, "anothersuit": 1171, "postive_pattern": 1171, "negative_pattern": 1171, "gtest_list_test": 1171, "faildemo": 1171, "failisfat": 1171, "assertdemo": 1171, "assertisfat": 1171, "expect_": 1171, "expectdemo": 1171, "expectisnonfat": 1171, "expect_tru": 1171, "expect_eq": 1171, "0x58": 1171, "0x55": 1171, "assert_": 1172, "repoqueri": 1173, "dpkg": 1173, "listfil": 1173, "joergfaschingbau": 1173, "cmake_compiler_is_gnucc": 1173, "ggdb": 1173, "googlebenchmark": 1173, "predef": [1175, 1176], "predefinedtestenviron": 1176, "paranoidtest": 1176, "untechn": 1176, "thefixtur": 1176, "testthatmodifiesst": 1176, "complexfixtur": 1176, "first_n": 1176, "sometest": 1176, "egal": 1178, "welcher": 1178, "schulungstyp": 1178, "problemlo": 1178, "verifiziert": 1178, "formlos": 1178, "anliegen": 1178, "umgehend": 1178, "setzen": 1178, "besprechen": 1178, "gestaltung": 1178, "schl\u00fcssigkeit": 1178, "chronologisch": 1178, "gehaltenen": 1178, "querzulesen": 1178, "roter": 1178, "faden": 1178, "ablaufen": 1178, "\u00e4nderungen": 1178, "kursgeschehen": 1178, "passieren": 1178, "detailliert": 1178, "kosten": 1178, "terminen": 1178, "inhouseschulungen": 1178, "buchenden": 1178, "terminisiert": 1178, "zustandekommt": 1178, "zeitlich": 1178, "\u00f6rtlich": 1178, "flexibel": [1178, 1179], "zul\u00e4sst": 1178, "besond": 1178, "onlineschulungen": 1178, "erwiesen": 1178, "dedizierten": 1178, "implementieren": [1178, 1183], "instruktionen": [1178, 1182], "datenschutzrichtlinien": 1178, "genug": 1178, "durchweg": 1178, "wahlweis": 1178, "offenen": 1178, "anmelden": 1178, "inhouseschulung": 1178, "exklusiv": 1178, "\u00fcblicherweis": 1178, "firmenstandort": 1178, "basteln": [1178, 1195], "schwierig": 1178, "z\u00fcgig": 1179, "uhr": 1179, "punktlandung": 1179, "mbr": 1179, "bootet": 1179, "nachs\u00e4tz": 1179, "wahllos": 1179, "reinen": [1179, 1195], "gebastelt": 1179, "leichtfertigerweis": 1179, "richtigerweis": 1179, "multilib": 1179, "ausgestattet": [1179, 1188, 1195, 1202], "l\u00e4uft": 1179, "seltsamerweis": 1179, "dar\u00fcber": 1179, "zeitersparnisgr\u00fcnden": 1179, "hinweggeholfen": 1179, "vorcompilierten": 1179, "statisch": [1179, 1197], "gelinkten": 1179, "christof": 1179, "sourcen": 1179, "crosszucompilieren": 1179, "gescheitert": 1179, "ungl\u00fccklichen": 1179, "umstand": 1179, "schulungsrechn": 1179, "neu": 1179, "aufzusetzen": 1179, "kompil": 1179, "verschwunden": 1179, "buildscript": 1179, "konnt": 1179, "kreativen": 1179, "wiederhergestellt": 1179, "v\u00f6llig": 1179, "sinnfrei": 1179, "distributionen": 1179, "compilieren": [1179, 1181], "architekturen": 1179, "versucht": [1179, 1180, 1182], "leben": [1179, 1195], "anzuwenden": 1179, "leut": 1179, "anzusehen": 1179, "wort": [1179, 1181], "gefallen": 1179, "hart": 1179, "garantien": 1179, "durchau": 1179, "gerechtfertigt": 1179, "gesch\u00fctz": 1179, "auffahren": 1179, "enthaltenen": 1179, "n\u00fctzen": 1179, "stichwort": [1179, 1188, 1195], "mittelweg": 1179, "diffundieren": 1179, "aufruft": 1179, "startet": 1179, "ausgekl\u00fcgelt": 1179, "funktionsweis": 1179, "jeher": 1179, "kennt": [1179, 1201], "gewaltig": 1179, "geschichtsbelastet": 1179, "tr\u00e4gt": 1179, "intelligent": [1179, 1188, 1195], "trotz": 1179, "behauptungen": 1179, "gar": 1179, "lieblingsseit": 1179, "linuxthemen": 1179, "zentrisch": 1179, "bourne shel": [1180, 1190], "\u00fcbel": 1180, "sprechen": [1180, 1188, 1195], "vollst\u00e4ndig": 1180, "shellprogrammierung": 1180, "ruf": 1180, "schmutzigen": 1180, "stattdessen": 1180, "hauch": 1180, "pervers": 1180, "\u00e4sthetik": 1180, "verpassen": 1180, "geschicht": 1180, "kram": 1180, "environmentvariablen": 1180, "kontrollkonstrukt": [1180, 1181], "hauptteil": 1180, "stringmanipul": 1180, "obskur": 1180, "konstrukt": [1180, 1190], "auskommt": 1180, "umgang": [1180, 1190], "vorausgesetzt": [150, 1180, 1182, 1183, 1191, 1197, 1198, 1200, 1201], "bibel": 1181, "hinzuf\u00fcgen": 1181, "erfind": 1181, "tickt": 1181, "wozu": 1181, "grenzen": 1181, "vorlag": 1181, "didaktik": 1181, "erg\u00e4nzt": 1181, "kontext": 1181, "heutigen": 1181, "dienen": [150, 1181], "sprachkern": 1181, "unterrichten": 1181, "standardlibrari": 1181, "zugunsten": 1181, "bequemeren": 1181, "verzichten": 1181, "sprachdesign": 1181, "geachtet": 1181, "isoliert": 1181, "abseit": [1181, 1183, 1201], "mitbringt": 1181, "h\u00e4lt": 1181, "eignet": 1181, "hervorragend": [1181, 1188, 1196, 1201], "systemprogrammierung": 1181, "weglassen": 1181, "programmiert": [1181, 1183], "dementsprechend": [1181, 1201], "sinngem\u00e4ss": 1181, "aufgeteilt": 1181, "manipulieren": [1181, 1190], "maschineninstruktionen": 1181, "ausgef\u00fchrt": [1181, 1182], "geschwindigkeitsvorteil": 1181, "interpretierten": 1181, "nachteil": 1181, "verst\u00e4ndni": [1181, 1190, 1200], "speicherverwaltung": [1181, 1183, 1198], "integral": 1181, "zusammengesetzt": 1181, "speicherlayout": 1181, "wenigst": 1181, "worin": 1181, "programmstrukturierung": 1181, "deklar": 1181, "beliebtest": 1181, "unmeng": 1181, "flexibilit\u00e4t": [1181, 1198], "einbringen": 1181, "unbeliebtest": 1181, "fehlerm\u00f6glichkeiten": 1181, "verkettet": 1181, "fehlerszenarien": [1181, 1201], "absturz": 1181, "dahinsiechen": 1181, "debugginghilfen": 1181, "typumwandlungen": 1181, "hauptkritikpunkt": 1181, "sorglos": 1181, "integertypen": 1181, "breit": [1181, 1188], "regelwerk": 1181, "historisch": 1181, "aufarbeitung": 1181, "historischem": 1181, "ballast": 1181, "compileroptionen": 1181, "pr\u00e4prozessor": [1181, 1182], "leid": 1181, "grundz\u00fcgen": 1181, "gezeigt": [1181, 1190, 1195], "compilierung": 1181, "heutzutag": 1181, "wegzudenken": [1181, 1188], "damal": [1181, 1183], "programmen": [1181, 1182, 1197], "separat": 1181, "verbinden": 1181, "spielt": 1181, "archivieren": 1181, "linken": 1181, "programmgesundheit": 1181, "bedeutungen": 1181, "optimierungsm\u00f6glichkeiten": 1181, "memoryfehlern": 1181, "verwalten": 1181, "formatiert": 1181, "_und_": 1181, "komfort": 1181, "m\u00e4chtige": [1181, 1198], "jedoch": [1181, 1188, 1195, 1201], "weit": 1181, "fehlerimmunit\u00e4t": 1181, "allein": 1181, "verdienen": 1181, "erw\u00e4hnung": 1181, "stringbearbeitung": 1181, "heutig": 1181, "eigenwillig": 1181, "f\u00fclle": 1181, "erleichtern": 1181, "lauern": [1181, 1200], "gefahren": [1181, 1200, 1201], "sprachumfang": 1182, "angeht": 1182, "compiliert": 1182, "maschinencod": 1182, "pointern": 1182, "sofort": 1182, "beipflichten": 1182, "einmal": [1182, 1197, 1198, 1202], "beinharten": 1182, "typenkonvertierungen": 1182, "aufgesessen": 1182, "beleuchtet": [1182, 1200], "beschrittenen": 1182, "dunklen": 1182, "ecken": 1182, "widmet": 1182, "intensiv": 1182, "fehlersuch": 1182, "erkl\u00e4rungen": 1182, "sprachdefinit": 1182, "greifbar": 1182, "verdacht": 1182, "manch": 1182, "typkonversionen": 1182, "l\u00fccken": 1182, "typensystem": [1182, 1183], "techniken": [1182, 1188], "typensicherheit": 1182, "dunkl": 1182, "unn\u00f6tig": 1182, "programmhygien": 1182, "wege": 1182, "sauberen": 1182, "weisen": 1182, "optimierungstechniken": 1182, "anwenden": 1182, "optimierung": 1182, "erschweren": 1182, "lesbarkeit": 1182, "memoryzugriff": 1182, "ur": 1182, "beziehungsweis": 1182, "hardwareunterst\u00fctzung": 1182, "Ins": 1182, "kenntniss": [1182, 1183, 1191, 1197, 1198, 1200, 1201], "urspr\u00fcnglich": 1183, "erfunden": 1183, "leichter": 1183, "handhabbar": 1183, "erm\u00f6glichen": [1183, 1198], "ressourcenverwaltung": 1183, "kontrolliert": 1183, "mainstream": 1183, "einzug": 1183, "hie\u00df": 1183, "treffend": 1183, "seitdem": 1183, "vereinzelt": 1183, "soviel": 1183, "dampflokomot": 1183, "stellt": [1183, 1201], "vielfalt": 1183, "sprachkonstrukt": 1183, "genial": 1183, "gewagt": 1183, "behaupten": 1183, "anbelangt": 1183, "sprachmittel": 1183, "wichtigst": 1183, "n\u00e4mlich": 1183, "reichlich": [1183, 1188, 1195], "umstieg": 1183, "erw\u00e4gen": 1183, "embeddedbetriebssystem": 1183, "einsetzen": 1183, "vielerort": 1183, "m\u00f6glich": [150, 1183, 1188], "datenkapselung": 1183, "objekten": 1183, "fallstrick": 1183, "korrektheit": 1183, "100ste": 1183, "strukturiert": 1183, "fehlerbehandlung": 1183, "generisch": 1183, "mechanismen": [1183, 1198, 1200, 1202], "mehrfachvererbung": 1183, "teilweis": 1183, "kapiteln": 1183, "unterschied": 1183, "erl\u00e4utert": [1183, 1188], "c++ 11": 1184, "enjoy": 1184, "overrrid": 1184, "coolest": 1184, "optinion": 1184, "oneshot": 1184, "communict": 1184, "unlearn": 1184, "inventor": 1185, "weren": 1186, "intricaci": 1186, "interdepend": 1186, "rudimentari": 1186, "graviti": 1187, "vocabulari": 1187, "confront": 1187, "reusab": 1187, "nicknam": 1187, "zentrum": [1188, 1195], "vollwertig": 1188, "selben": 1188, "betriessystemkonzept": 1188, "jahrzehnten": 1188, "bew\u00e4hrt": 1188, "automot": 1188, "sektor": 1188, "vertreten": 1188, "altbew\u00e4hrten": 1188, "konsequ": [1188, 1198], "ausbaut": 1188, "hardwareschnittstellen": 1188, "echtzeitf\u00e4higkeit": 1188, "dahint": 1188, "rundet": 1188, "hardwarebastelworkshop": 1188, "embeddedprogrammier": [1188, 1195], "l\u00e4nger": [1188, 1195], "normalen": [1188, 1195], "dateisystem": [1188, 1195], "versagt": [1188, 1195], "teuer": [1188, 1195], "erkauft": [1188, 1195], "elektronik": [150, 1188, 1195], "testen": [1188, 1195, 1202], "hostsoftwar": [1188, 1195], "architekten": [1188, 1195], "plattformzusammensetzung": [1188, 1195], "entscheiden": [1188, 1195, 1202], "rechtfertigen": [1188, 1195], "logik": [1188, 1195], "steck": [1188, 1195], "beantworten": [1188, 1195, 1202], "eingeladen": [1188, 1195], "l\u00f6tmateri": [1188, 1195], "mitzubringen": [1188, 1195], "bastelei": 1188, "erfolgt": [150, 1188], "vorhandenen": [1188, 1195, 1202], "minicomputern": 1188, "prototypen": 1188, "desktopbetriebssystem": [1188, 1195], "verh\u00e4ltniss": [1188, 1195], "512mb": [1188, 1195], "m\u00fchsam": [1188, 1195], "produktivsystem": [1188, 1195], "ohnehin": [1188, 1195], "unangebracht": [1188, 1195], "anf\u00e4ng": [1188, 1195], "filesystemen": [1188, 1195], "durchzuf\u00fchren": 1188, "filedeskriptoren": [1188, 1190], "getrennt": 1188, "abl\u00e4uf": 1188, "adressraum": 1188, "sorgfalt": 1188, "bloss": 1188, "gef\u00e4chert": 1188, "gewissen": 1188, "szenarien": 1188, "steuerungen": 1188, "gef\u00e4hrlich": 1188, "umfangreich": 1188, "hauptthema": 1188, "dennoch": 1188, "n\u00fctzlich": 1188, "haub": 1188, "schalten": [1188, 1195], "ausg\u00e4ngen": [1188, 1195], "abfragen": [1188, 1195], "eing\u00e4ngen": [1188, 1195], "sowohl": [150, 1188, 1195], "dumm": [1188, 1195], "ereignisgesteuert": [1188, 1195], "mikrocontrollern": [1188, 1195], "aufgaben": [1188, 1195], "temperaturmessung": [1188, 1195], "expandierung": [1188, 1195], "ausgelagert": [1188, 1195, 1198], "dediziert": [1188, 1195], "angesteuert": [1188, 1195], "gegeben": [1188, 1195, 1197, 1198], "driverframework": 1188, "netzwerkstack": [1188, 1195], "einpasst": [1188, 1195], "schnittstellen": [1188, 1198], "implementationssprachen": 1188, "hardwareerfahrung": [1188, 1195], "linux kernel": 1189, "kernel driv": [1189, 1199], "wait queu": 1189, "block devic": 1189, "interrupt handl": 1189, "dose": 1189, "curios": 1189, "userpac": 1189, "massiv": 1189, "vital": 1189, "einblick": 1190, "gingen": 1190, "vieler": 1190, "demosess": 1190, "vertrackt": 1190, "entmystifiziert": 1190, "gef\u00fcrchteten": 1190, "erlernt": 1190, "inbetriebsetz": 1190, "hardwareingenieur": 1190, "angehend": 1190, "administratoren": 1190, "editieren": 1190, "bl\u00e4ttern": 1190, "textdateien": 1190, "schnittstel": 1190, "kombinationen": 1190, "kombin": 1190, "abschweifen": 1190, "programmierkenntniss": 1190, "zwingend": [1190, 1197], "make gnu": 1191, "gnu mak": 1191, "build manag": 1191, "seiner": [1191, 1198, 1202], "m\u00e4chtigen": 1191, "daran": 1191, "wendet": 1191, "interessiert": 1191, "gr\u00f6\u00dfere": 1191, "gebaut": 1191, "komplizierten": 1191, "griff": 1191, "regeln": 1191, "selbstdefiniert": 1191, "gewiss": [1191, 1196, 1198], "fertigkeit": 1191, "hemmenhofen": 1195, "gleichnamigen": 1195, "gerufen": 1195, "produktivem": 1195, "n\u00e4herzubringen": 1195, "spielekonsumenten": 1195, "kinder": 1195, "enden": 1195, "erstem": 1195, "breiteren": 1195, "drauf": 1195, "vorhandensein": 1195, "basisinfrastruktur": 1195, "vielem": 1195, "hervorragenden": 1195, "gestandenen": 1195, "obwohl": [1195, 1198], "sprachunabh\u00e4ngig": 1195, "brauchen": 1195, "computerspielen": 1195, "spielerischen": 1195, "f\u00fchren": 1195, "w\u00e4hlt": 1195, "lm": 1195, "netzwerkprotokol": [1195, 1201], "behaupt": 1196, "allen": 1196, "gro\u00dfkopferten": 1196, "kommerziellen": 1196, "systemen": 1196, "perforc": 1196, "etabliert": 1196, "erh\u00e4ltlich": 1196, "nachfolg": 1196, "abgel\u00f6st": 1196, "prim\u00e4r": 1196, "publikum": 1196, "sekund\u00e4r": 1196, "versionieren": 1196, "arbeitsweis": 1196, "bereinigung": 1196, "strategien": 1196, "programmierern": 1196, "vertrautheit": 1196, "vorteil": [1196, 1197], "umsteig": 1197, "\u00e4rgerni": 1197, "schl\u00e4gt": 1197, "ausgekl\u00fcgeltst": 1197, "systemcal": [1197, 1198, 1201], "sogenannt": 1197, "inspizieren": 1197, "grundprinzip": [1197, 1201], "sammlung": [1197, 1198], "ausf\u00fchrbar": 1197, "bedient": 1197, "handhabung": 1197, "gew\u00f6hnungsbed\u00fcrftig": 1197, "filedescriptoren": 1197, "lowlevel": 1197, "tiefen": 1198, "steigen": 1198, "alltagsprogrammier": 1198, "normalerweis": 1198, "verborgen": 1198, "hochperformant": 1198, "anwendungen": 1198, "modernen": [1198, 1200], "bertriebssystemen": 1198, "sogenanntem": 1198, "virtuellen": 1198, "speicherbereich": 1198, "instanzen": 1198, "desselben": 1198, "hauptspeich": 1198, "speicherzugriff": 1198, "schutzmechanismen": 1198, "miteinand": 1198, "kommunizieren": [1198, 1201], "semaphoren": 1198, "steinalt": 1198, "\u00fcberlebt": 1198, "keinesweg": 1198, "fehlerfrei": 1198, "benutzen": 1198, "verpasst": 1198, "beruht": 1198, "ladbar": 1198, "ressourcenschonung": 1198, "wasserdichten": 1198, "upgradepfad": 1198, "grundkenntni": [1198, 1200, 1201], "memory manag": 1199, "tcp-ip": 1199, "unverst\u00e4ndlich": 1200, "ungeachtet": 1200, "effizient": 1200, "propagiert": 1200, "soliden": 1200, "unbedacht": 1200, "handeln": 1200, "lebenszyklu": 1200, "gestartet": 1200, "versuchung": 1200, "gewalt": 1200, "terminieren": 1200, "konsequenzen": 1200, "joinabl": 1200, "detach": 1200, "eigenschaften": 1200, "racecondit": 1200, "vermeidung": 1200, "\u00fcberal": 1200, "vermutet": 1200, "integeroperationen": 1200, "kommunikationsmechanismen": 1200, "werkzeugkasten": 1200, "kommunikationskan\u00e4l": 1200, "niemal": 1200, "reihen": 1200, "traditionellen": 1200, "aufgenommen": 1200, "codebasi": 1200, "verzweigt": 1200, "ansehnlich": 1200, "realtimef\u00e4higkeiten": 1200, "priorit\u00e4ten": 1200, "f\u00fcgt": 1201, "benutzend": 1201, "programmierparadigma": 1201, "dar": 1201, "beschr\u00e4nkt": 1201, "streamverbindungen": 1201, "verbindungsaufnahm": 1201, "datagramm": 1201, "verbindungslos": 1201, "adressfamilien": 1201, "auffassung": 1201, "adress": 1201, "endpoint": 1201, "nummern": 1201, "adressen": 1201, "verbindungen": 1201, "hilfsfunktionen": 1201, "adresskonvertierung": 1201, "ipv6": 1201, "\u00e4quivalent": 1201, "ungleich": 1201, "ressourcenschonend": 1201, "pfadnamen": 1201, "bedienbar": 1201, "mittlerweis": 1201, "eingepasst": 1201, "angenehm": 1201, "umzugehen": 1201, "widmen": 1201, "verbundenen": 1201, "auszusetzen": 1201, "reagiert": 1201, "gelesen": 1201, "eventgetrieben": 1201, "knopfdruck": 1202, "abnimmt": 1202, "zahlreichen": 1202, "abgeklopft": 1202, "angst": 1202, "kaputtmachen": 1202, "konstruktiv": 1202, "einfachheit": 1202, "klarzumachen": 1202, "umzusetzen": 1202, "anstatt": 1202, "auszustatten": 1202, "gedanken": 1202, "erkannt": 1202, "entscheidung": 1202, "verbockt": 1202, "softwareentwickl": 1202, "jedwed": 1202, "stabilen": 1202, "abliefern": 1202, "entscheidungstr\u00e4g": 1202, "vorgesetzt": 1202, "schl\u00fcssige": 1202, "kan\u00e4l": 1202, "etablieren": 1202, "unittestframework": 1202, "tragen": 1202, "schwerf\u00e4llig": 1202, "halben": 1202, "\u00fcbrige": 1202, "zurechtzufinden": 1202, "vortragend": 1202, "aufgrund": 1202, "aufwarten": 1202, "beibringen": 1202, "\u00fcppigen": 1202, "verbergen": 1202, "pr\u00e4ferierten": 1202, "vortragenden": 1202, "ss2024": [], "stece": 151, "bachelorstudium": 150, "semesterwochenstunden": 150, "ect": 150, "lehrveranstaltungsleit": 150, "studierenden": 150, "vorkenntniss": 150, "lehrveranstaltungen": 150, "grundaufgaben": 150, "bescheid": 150, "abstraktionen": 150, "programmierparadigmen": 150, "gesamtnot": 150, "praktischen": 150, "theoretischen": 150, "laborklausuren": 150, "klausur": 150, "besteht": 150, "hausaufgaben": 150, "sammeln": 150, "hinzugerechnet": 150, "ausfallsicherung": 150, "einzelergebniss": 150, "punkten": 150, "gesamtergebniss": 150, "umrechnung": 150, "prozent": 150, "notwendigen": 150, "unterricht": 150, "klausuren": 150, "abgehalten": 150, "endnot": 150, "ergibt": 150, "erreichten": 150, "befriedigend": 150, "gen\u00fcgend": 150, "einzuloggen": 150, "abschlussklausur": 150, "zugelassen": 150, "beschrieben": 150, "negativen": 150, "beurteilung": 150, "laborklausur": 150, "theoretisch": 150, "wiederholt": 150, "kommissionel": 150, "gesamtpr\u00fcfung": 150, "antritt": 150, "bestanden": 150, "einmalig": 150, "positiv": 150, "absolvierten": 150, "wochen": 150, "bekanntgab": 150, "pr\u00fcfungsergebniss": 150, "melden": 150, "teilleistungen": 150, "erbringen": 150, "legt": 150, "erforderlich": 150, "gesamtzahl": 150, "pr\u00fcfungsversuch": 150, "angerechnet": 150, "wiederholungspr\u00fcfung": 150, "z\u00e4hlt": 150, "besuchen": 150, "anwesenheitspflicht": 150, "begr\u00fcndeten": 150, "einzelf\u00e4llen": 150, "krankheit": 150, "nachzuholen": 150, "ersatzleistungen": 150, "4th": 150, "bl\u00f6cken": 150, "crossdevelop": 150, "tats\u00e4chlich": 150, "tagesaktuel": 150}, "objects": {}, "objtypes": {}, "objnames": {}, "titleterms": {"kontakt": 0, "navig": [0, 893], "googl": 0, "map": [0, 7, 146, 218, 223, 226, 229, 232, 248, 258, 322, 360, 556, 557, 585, 646, 647, 738, 739, 804, 950], "streetview": 0, "curriculum": [1, 77, 78], "vita": 1, "\u00fcber": [2, 203, 213, 218, 226, 234], "mich": [2, 220], "projekt": [3, 23], "au": 3, "selbstst\u00e4ndig": 3, "t\u00e4tigkeit": 3, "nichtselbstst\u00e4ndig": 3, "skill": [4, 167], "angebot": 5, "In": [5, 32, 45, 69, 126, 175, 177, 178, 180, 210, 213, 274, 275, 277, 296, 298, 321, 334, 383, 474, 476, 482, 483, 544, 549, 551, 592, 596, 607, 608, 609, 610, 611, 612, 637, 694, 698, 702, 732, 733, 739, 752, 811, 860, 861, 868, 924, 974, 1007, 1009, 1023, 1030, 1071, 1184], "hous": 5, "schulungen": [5, 1178], "zu": [5, 23, 196, 213], "meiner": 5, "person": [5, 271, 503, 702], "schwerpunk": 5, "c": [5, 7, 71, 72, 73, 74, 75, 101, 111, 112, 114, 115, 128, 149, 167, 181, 196, 197, 213, 223, 231, 232, 248, 273, 274, 275, 277, 278, 286, 295, 297, 334, 335, 340, 368, 374, 383, 392, 432, 433, 470, 477, 482, 489, 496, 538, 544, 555, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 592, 594, 600, 601, 605, 606, 607, 619, 625, 627, 664, 672, 687, 689, 690, 691, 694, 695, 727, 728, 732, 739, 740, 748, 757, 762, 766, 785, 933, 953, 971, 974, 1076, 1181, 1182, 1183, 1184, 1185, 1187], "python": [5, 8, 11, 59, 61, 62, 63, 94, 99, 140, 163, 190, 193, 202, 203, 205, 206, 207, 209, 211, 213, 216, 218, 221, 227, 228, 230, 233, 235, 237, 240, 241, 242, 243, 244, 246, 247, 249, 252, 253, 256, 259, 261, 264, 266, 267, 268, 269, 270, 272, 274, 275, 277, 279, 280, 281, 282, 283, 284, 289, 291, 292, 296, 298, 299, 300, 301, 302, 303, 304, 305, 308, 309, 310, 311, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 365, 368, 370, 383, 690, 718, 732, 739, 933, 935, 1032, 1035, 1039, 1054, 1055, 1056, 1058, 1060, 1062, 1070, 1081, 1084, 1129, 1130, 1131, 1144, 1145, 1147, 1157, 1158, 1159, 1160, 1161, 1192, 1193], "linux": [5, 83, 84, 85, 101, 114, 115, 128, 149, 170, 175, 183, 185, 186, 188, 195, 210, 212, 217, 222, 276, 285, 286, 306, 307, 368, 370, 383, 385, 810, 862, 863, 866, 872, 929, 931, 935, 936, 937, 939, 952, 970, 993, 1179, 1189, 1190, 1197, 1198, 1199, 1200, 1201], "schulungsstil": 5, "preis": 5, "cours": [6, 11, 12, 59, 61, 62, 63, 82, 163, 165, 186, 222, 231, 275, 277, 285, 314, 317, 367, 473, 1130, 1186, 1189], "materi": [6, 24, 28, 30, 127, 149, 193, 195, 210, 231, 364, 379, 380, 384, 473, 1129, 1130, 1151], "einleitung": [7, 223], "datatyp": [7, 213, 218, 220, 223, 226, 235, 239, 242, 245, 250, 252, 258, 262, 265, 267, 268, 280, 282, 283, 289, 290, 292, 300, 302, 303, 304, 308, 309, 310, 320, 322, 324, 326, 330, 331, 332, 336, 337, 338, 342, 343, 344, 346, 347, 348, 360, 388, 438, 441, 1033, 1062, 1063, 1067], "number": [7, 223, 226, 229, 250, 262, 265, 360, 718, 789, 796, 797, 960, 1034, 1050, 1053, 1062, 1070, 1071, 1092, 1095, 1105, 1106, 1148, 1152, 1153, 1176], "integ": [7, 203, 213, 218, 223, 226, 250, 252, 262, 265, 271, 283, 290, 310, 322, 326, 332, 338, 348, 360, 406, 453, 458, 674, 1041, 1062, 1071], "string": [7, 189, 190, 196, 203, 213, 220, 223, 226, 229, 234, 235, 239, 242, 245, 250, 252, 255, 258, 262, 265, 267, 268, 271, 280, 283, 287, 290, 304, 310, 322, 326, 332, 338, 344, 348, 357, 359, 360, 387, 400, 401, 407, 413, 477, 655, 656, 657, 670, 701, 702, 1062, 1075, 1076, 1077, 1112, 1155], "compound": [7, 213, 223, 235, 239, 242, 245, 250, 252, 258, 262, 265, 268, 280, 300, 304, 310, 322, 326, 338, 344, 348, 441, 1063], "list": [7, 11, 23, 189, 190, 203, 213, 220, 223, 226, 229, 234, 235, 239, 242, 245, 250, 252, 258, 262, 265, 268, 280, 283, 290, 300, 304, 310, 322, 332, 338, 344, 348, 446, 477, 544, 568, 585, 599, 642, 690, 703, 740, 794, 821, 822, 823, 845, 915, 1027, 1030, 1033, 1034, 1043, 1063, 1071, 1078, 1107, 1108, 1159], "arrai": [7, 191, 213, 223, 387, 396, 400, 438, 440, 450, 463, 573, 625, 627, 635, 679, 694, 705, 744], "javascript": [7, 223, 262], "std": [7, 111, 146, 223, 232, 248, 274, 275, 277, 334, 335, 492, 551, 556, 557, 567, 585, 608, 609, 610, 611, 612, 620, 626, 627, 628, 629, 639, 646, 647, 657, 670, 683, 686, 690, 693, 695, 702, 738, 739, 740, 744, 746, 749, 750, 751, 753, 754, 759, 760, 761, 762, 764, 765, 766, 769, 771, 775, 776, 777, 781, 784], "vector": [7, 111, 223, 551, 567, 585, 592, 608, 626, 627, 628, 629, 643, 686, 695, 740, 769, 986], "java": [7, 223], "dictionari": [7, 189, 203, 213, 218, 220, 223, 226, 234, 235, 239, 242, 245, 250, 252, 255, 258, 262, 265, 268, 271, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 360, 1027, 1031, 1044, 1063, 1079, 1099, 1126], "kei": [7, 180, 223, 271, 338, 360, 649, 650, 893, 944, 946], "valu": [7, 62, 208, 223, 294, 295, 338, 360, 398, 454, 611, 971, 993, 1064], "set": [7, 38, 62, 208, 213, 218, 223, 226, 234, 235, 239, 242, 245, 250, 252, 258, 262, 265, 268, 280, 283, 290, 300, 304, 310, 322, 326, 332, 338, 344, 348, 889, 890, 1005, 1027, 1063, 1080, 1118, 1143, 1153], "mathematisch": [7, 223], "mengen": [7, 213, 223], "while": [7, 190, 203, 213, 223, 242, 250, 252, 255, 258, 265, 268, 290, 332, 338, 344, 348, 423, 424, 831, 836, 837, 1066, 1092, 1116], "function": [7, 43, 177, 190, 208, 213, 223, 226, 229, 232, 235, 239, 242, 250, 252, 258, 262, 267, 268, 271, 274, 275, 277, 279, 283, 290, 296, 304, 314, 315, 317, 320, 321, 322, 324, 330, 331, 332, 334, 335, 336, 337, 338, 342, 343, 344, 346, 347, 348, 365, 398, 400, 405, 432, 434, 436, 437, 442, 474, 475, 534, 568, 592, 601, 606, 608, 613, 617, 633, 690, 697, 700, 701, 702, 703, 712, 742, 754, 755, 794, 795, 857, 951, 953, 991, 1026, 1028, 1029, 1031, 1033, 1034, 1053, 1070, 1072, 1073, 1074, 1082, 1104, 1106, 1110, 1113, 1121, 1123, 1155], "basic": [8, 62, 74, 94, 130, 169, 181, 190, 202, 207, 209, 210, 211, 212, 216, 217, 221, 222, 231, 240, 243, 246, 253, 259, 264, 267, 270, 276, 282, 285, 289, 292, 299, 302, 303, 304, 306, 307, 308, 309, 310, 311, 314, 317, 320, 321, 322, 324, 325, 326, 330, 331, 332, 333, 336, 337, 338, 339, 342, 343, 346, 347, 348, 349, 360, 383, 428, 432, 435, 441, 468, 475, 491, 492, 546, 549, 614, 619, 622, 625, 626, 628, 632, 635, 646, 652, 661, 697, 705, 739, 744, 748, 749, 750, 751, 784, 796, 797, 798, 859, 862, 863, 866, 876, 915, 926, 931, 940, 952, 959, 967, 975, 1007, 1029, 1030, 1083, 1085, 1119, 1138, 1149, 1150, 1170, 1171, 1172, 1190, 1193], "2021": [8, 11, 127, 214, 216, 219, 221, 222, 224, 227, 230, 231, 232, 233, 237, 240, 242, 243, 245, 246, 248, 357, 358, 365, 368, 369, 370, 371, 372, 373, 374, 383], "xx": 8, "yy": 8, "train": [8, 24, 25, 26, 27, 28, 163, 167, 177, 186, 191, 206, 207, 209, 210, 211, 212, 214, 216, 217, 221, 224, 227, 230, 231, 232, 233, 237, 240, 249, 253, 256, 259, 261, 264, 267, 270, 279, 282, 289, 292, 384, 1130, 1136], "inform": [8, 39, 155, 165, 177, 202, 205, 206, 207, 209, 210, 211, 212, 214, 216, 217, 221, 224, 227, 230, 231, 232, 233, 237, 240, 249, 253, 256, 259, 261, 264, 267, 270, 279, 282, 289, 292, 356, 365, 468, 752, 1060, 1130], "\u00fcberblick": [8, 214, 224, 233, 249, 261, 1183], "log": [8, 109, 154, 171, 206, 207, 210, 211, 219, 221, 222, 224, 227, 231, 233, 237, 240, 249, 261, 270, 365, 378, 379, 860, 861, 868], "tag": [8, 197, 216, 220, 224, 227, 233, 249, 261, 262], "1": [8, 19, 23, 37, 77, 82, 101, 111, 118, 121, 122, 125, 128, 148, 149, 150, 172, 175, 187, 195, 197, 202, 206, 207, 209, 210, 211, 213, 214, 216, 221, 222, 224, 227, 231, 232, 233, 237, 240, 243, 246, 249, 253, 261, 286, 289, 292, 295, 296, 297, 298, 299, 303, 307, 309, 314, 320, 321, 324, 325, 335, 347, 364, 366, 367, 374, 381, 383, 386, 387, 388, 390, 394, 398, 407, 409, 410, 411, 412, 416, 417, 420, 423, 429, 430, 431, 432, 433, 436, 438, 442, 446, 448, 450, 453, 454, 455, 456, 458, 459, 461, 462, 468, 482, 492, 495, 497, 533, 595, 597, 604, 615, 618, 625, 627, 708, 713, 754, 759, 765, 780, 781, 792, 797, 804, 815, 825, 893, 932, 933, 939, 948, 962, 975, 976, 978, 980, 982, 983, 994, 1001, 1005, 1008, 1009, 1025, 1033, 1038, 1059, 1061, 1062, 1068, 1071, 1076, 1077, 1079, 1080, 1081, 1082, 1144, 1155, 1156, 1179], "2": [8, 19, 23, 37, 78, 82, 101, 111, 116, 117, 118, 121, 125, 128, 149, 172, 175, 197, 202, 203, 206, 207, 209, 210, 211, 213, 216, 220, 221, 222, 224, 227, 231, 232, 233, 237, 240, 242, 243, 246, 249, 253, 261, 286, 289, 292, 295, 296, 297, 298, 299, 303, 307, 314, 320, 321, 324, 325, 331, 335, 347, 379, 381, 383, 386, 387, 388, 390, 394, 398, 407, 409, 410, 411, 412, 416, 417, 420, 423, 429, 430, 432, 433, 436, 438, 442, 446, 448, 450, 453, 454, 455, 456, 458, 459, 461, 462, 468, 483, 492, 495, 497, 533, 582, 595, 597, 604, 615, 618, 625, 627, 709, 714, 754, 759, 765, 780, 781, 797, 804, 825, 893, 932, 933, 939, 948, 962, 975, 976, 978, 980, 982, 983, 994, 1001, 1005, 1008, 1009, 1021, 1025, 1033, 1038, 1059, 1061, 1062, 1068, 1070, 1071, 1077, 1079, 1080, 1081, 1082, 1140, 1142, 1143, 1144, 1155, 1156], "live": [8, 42, 44, 45, 189, 192, 214, 224, 227, 237, 286, 590, 630, 631, 633, 634, 637, 638, 639, 651, 690, 701, 734, 735, 762, 764, 864, 890, 954, 972], "hack": [8, 42, 44, 45, 189, 192, 214, 224, 227, 237, 286, 289, 293, 296, 299, 325, 590, 630, 631, 633, 634, 637, 638, 639, 651, 690, 701, 734, 735, 762, 764, 891, 972], "jupyt": [8, 9, 40, 214, 215, 219, 220, 221, 224, 225, 227, 228, 237, 238, 240, 241, 243, 244, 247, 249, 251, 254, 257, 260, 263, 266, 268, 269, 272, 281, 284, 287, 291, 300, 301, 305, 311, 316, 319, 322, 323, 326, 327, 333, 349, 360, 1136, 1137], "notebook": [8, 9, 40, 209, 214, 215, 219, 220, 221, 224, 225, 227, 228, 230, 237, 238, 240, 241, 243, 244, 245, 247, 249, 251, 254, 257, 260, 263, 266, 268, 269, 272, 281, 284, 287, 291, 300, 301, 305, 311, 316, 319, 322, 323, 326, 327, 333, 349, 360, 365, 1134, 1136, 1137], "link": [8, 23, 39, 154, 173, 191, 202, 205, 207, 209, 211, 214, 216, 221, 222, 224, 233, 237, 240, 243, 249, 256, 267, 270, 303, 309, 370, 372, 446, 448, 697, 711, 718, 736, 743, 747, 810, 821, 822, 872, 893, 914, 932, 939, 947, 1023, 1024, 1055, 1085, 1086, 1131, 1147, 1149, 1150, 1152, 1153, 1154, 1155, 1162, 1167], "programmierung": [9, 11, 189, 214, 215, 224, 225, 233, 249, 251, 261, 263, 383], "grundlagen": [9, 11, 202, 213, 214, 215, 224, 225, 227, 228, 233, 237, 241, 244, 247, 249, 251, 261, 263, 266, 269, 272, 281, 284, 305, 383], "detail": [10, 82, 222, 226, 258, 265, 297, 344, 348, 360, 382, 458, 536, 626, 1061], "content": [11, 24, 37, 165, 167, 169, 170, 171, 172, 173, 174, 175, 176, 185, 194, 198, 199, 229, 367, 471, 573, 576, 582, 585, 591, 673, 750, 862, 882, 895, 901, 907, 910, 927, 935, 936, 943, 952, 968, 970, 972, 987, 997, 1000, 1014, 1034, 1089, 1090, 1094, 1103, 1117, 1124, 1171, 1173, 1176, 1184, 1187, 1189], "anhand": [11, 213, 233, 249, 261, 383, 1190], "von": [11, 23, 184, 189, 193, 196, 203, 213, 220, 233, 234, 249, 261, 348, 360, 383, 1190], "12": [11, 23, 45, 129, 130, 133, 141, 146, 193, 212, 213, 217, 224, 232, 245, 246, 248, 279, 330, 331, 332, 335, 336, 337, 338, 339, 365, 370, 374, 376, 383], "und": [11, 23, 183, 187, 203, 213, 214, 218, 220, 224, 226, 229, 233, 249, 252, 258, 261, 265, 271, 338, 348, 366, 383, 408, 417, 1183, 1194], "13": [11, 23, 41, 45, 180, 202, 213, 214, 224, 277, 286, 289, 290, 292, 383], "4": [11, 23, 111, 172, 197, 206, 209, 213, 221, 222, 224, 227, 231, 232, 249, 261, 286, 374, 383, 388, 446, 450, 456, 492, 495, 597, 715, 1033], "templat": [12, 146, 231, 248, 297, 555, 568, 569, 570, 571, 587, 588, 589, 617, 618, 619, 625, 658, 704, 707, 712, 714, 742, 775], "descript": [12, 61, 63, 65, 403, 418, 427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 503, 590, 598, 613, 616, 619, 655, 660, 669, 671, 674, 676, 677, 678, 679, 680, 681, 682, 683, 685, 686, 688, 730, 731, 755, 763, 767, 779, 783, 785, 927, 935, 936, 990], "sidebar": [12, 37], "metadata": [12, 274, 275, 277, 915], "about": [13, 111, 167, 186, 245, 250, 262, 280, 283, 289, 293, 310, 317, 332, 337, 338, 344, 347, 348, 485, 695, 732, 922, 1023, 1075, 1078, 1079, 1080], "thi": [13, 32, 37, 129, 133, 134, 136, 139, 141, 145, 154, 172, 177, 178, 180, 181, 191, 200, 604, 618, 733, 852, 931, 954, 1007, 1024, 1031, 1033], "site": [13, 28, 32, 154, 174, 176, 200], "licens": 13, "gplv3": 13, "github": [13, 126, 146, 174, 176, 206, 207, 219, 227, 365, 533, 547, 1131], "sphinx": [13, 40, 70, 176], "instal": [13, 60, 136, 173, 177, 181, 185, 198, 199, 202, 227, 231, 232, 312, 328, 365, 370, 385, 480, 808, 950, 1005, 1016, 1021, 1022, 1055, 1085, 1086, 1118, 1131, 1147, 1164, 1166, 1171, 1173, 1186], "instruct": [13, 449, 759, 978, 1008, 1025], "pip": [13, 303], "venv": [13, 303], "work": [13, 17, 69, 101, 126, 128, 149, 153, 158, 172, 206, 237, 275, 277, 294, 295, 296, 297, 372, 466, 467, 468, 547, 618, 784, 852, 853, 889, 892, 896, 1021], "progress": [13, 17, 153], "more": [13, 172, 190, 203, 242, 245, 250, 258, 262, 265, 267, 279, 280, 282, 283, 286, 288, 289, 292, 298, 299, 302, 303, 308, 309, 310, 317, 320, 324, 330, 331, 332, 336, 337, 338, 342, 343, 344, 346, 347, 348, 365, 388, 394, 417, 433, 435, 449, 459, 475, 485, 487, 597, 607, 610, 617, 630, 636, 690, 732, 733, 737, 754, 771, 841, 870, 871, 872, 876, 877, 922, 949, 991, 1028, 1030, 1032, 1075, 1078, 1079, 1080, 1130, 1139, 1164, 1176], "opentrain": [14, 23], "draft": [15, 779, 927, 1084], "topic": [15, 21, 77, 78, 102, 103, 105, 106, 107, 108, 146, 166, 202, 206, 209, 230, 231, 232, 243, 248, 267, 270, 286, 289, 292, 295, 296, 320, 324, 334, 335, 355, 369, 373, 374, 383, 403, 418, 427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 496, 539, 540, 541, 542, 543, 544, 545, 548, 590, 598, 613, 616, 619, 635, 641, 645, 653, 658, 660, 663, 669, 687, 688, 692, 699, 706, 717, 730, 731, 741, 746, 755, 763, 767, 779, 783, 785, 786, 787, 810, 930, 945, 963, 965, 984, 990, 1011, 1017, 1018, 1033, 1038, 1046, 1084, 1133, 1137, 1141, 1145, 1147, 1151, 1163, 1169], "miscellan": [16, 152, 163, 167, 186, 190, 210, 239, 250, 252, 258, 268, 274, 275, 279, 283, 286, 295, 298, 299, 304, 309, 310, 320, 321, 324, 331, 332, 334, 338, 348, 568, 590, 669, 673, 704, 767, 969, 980, 982, 1077, 1145], "s5": [17, 18, 167], "integr": [17, 130, 132, 135, 694, 710], "web": [17, 97, 98, 168], "slide": [17, 18, 30, 45, 190, 368, 380, 1001, 1005], "implement": [17, 129, 133, 134, 136, 137, 139, 141, 145, 146, 258, 321, 334, 351, 357, 497, 504, 514, 519, 529, 530, 531, 532, 536, 544, 549, 550, 594, 595, 600, 606, 608, 666, 690, 701, 791, 794, 813, 849, 1028, 1034, 1050, 1109], "note": [17, 37, 60, 140, 152, 185, 351, 490, 878], "todo": [17, 167, 196, 199, 210, 216, 352, 353, 354, 371, 473, 568, 569, 572, 575, 578, 581, 584, 587, 790, 794, 802, 834, 996, 999, 1003, 1146, 1170, 1175], "test": [18, 37, 42, 43, 44, 45, 50, 75, 129, 133, 134, 136, 137, 139, 141, 145, 181, 202, 232, 256, 267, 270, 279, 288, 289, 292, 293, 294, 298, 299, 312, 314, 317, 320, 321, 324, 328, 347, 373, 379, 383, 474, 488, 497, 517, 533, 547, 549, 550, 610, 794, 813, 846, 938, 967, 1019, 1022, 1086, 1119, 1126, 1127, 1128, 1136, 1164, 1165, 1169, 1171, 1173, 1176, 1186, 1202], "level": [19, 462], "head": [19, 37, 821, 924, 1139], "imag": [19, 191, 210, 1021], "screencast": [20, 164], "written": [21, 128, 593, 596], "new": [21, 137, 146, 166, 232, 248, 274, 275, 277, 334, 335, 383, 536, 573, 689, 690, 730, 766, 785, 813, 846, 1148], "write": [21, 42, 50, 58, 169, 536, 573, 600, 712, 727, 750, 791, 959, 966, 1051, 1081, 1087, 1156], "netide": [22, 23], "f\u00f6rderantrag": [22, 23], "daten": [23, 226, 234], "antragsteller_in": 23, "allgemein": 23, "projektnam": 23, "untertitel": 23, "3": [23, 101, 111, 118, 128, 146, 149, 172, 197, 206, 207, 209, 210, 211, 212, 213, 216, 221, 222, 227, 231, 232, 233, 235, 237, 242, 243, 246, 249, 253, 261, 268, 286, 289, 292, 295, 297, 298, 299, 303, 307, 309, 320, 321, 322, 324, 325, 331, 335, 347, 383, 388, 438, 442, 446, 450, 456, 458, 459, 461, 462, 492, 495, 497, 533, 597, 710, 781, 962, 978, 982, 983, 1033, 1062, 1070, 1076, 1081], "allgemeinverst\u00e4ndlich": 23, "kurzbeschreibung": 23, "de": [23, 279, 383, 859], "anschlussf\u00f6rderung": 23, "die": [23, 53, 178, 196, 234, 1191], "besonder": [23, 213], "bedeutung": 23, "ihr": 23, "f\u00fcr": [23, 197, 203, 213, 383, 1182], "da": [23, 193, 203, 220, 229, 262], "internet": 23, "internetnutzung": 23, "IN": 23, "\u00f6sterreich": 23, "zielgrupp": 23, "projektziel": 23, "5": [23, 172, 190, 197, 202, 203, 205, 213, 231, 232, 234, 286, 374, 383, 446, 456, 492, 495, 716, 860, 861], "l\u00f6sung": [23, 203], "beschreibung": 23, "der": [23, 150, 213, 218, 234, 366, 383, 1179], "probleml\u00f6sung": 23, "wesentlich": 23, "element": [23, 213, 250, 268, 270, 551, 553, 554, 558, 646, 648, 649, 1067], "ein": [23, 203, 234, 1190, 1195], "nachhaltigen": 23, "impact": 23, "nach": [23, 270], "projektend": 23, "6": [23, 146, 213, 214, 234, 235, 268, 383, 446, 456, 492, 495, 1076, 1194], "umfeldanalys": 23, "wa": [23, 202, 218, 679], "ist": [23, 203], "stand": 23, "technik": 23, "method": [23, 226, 229, 239, 250, 252, 255, 258, 268, 283, 295, 304, 310, 322, 326, 332, 338, 344, 348, 357, 359, 367, 546, 582, 594, 601, 602, 603, 606, 608, 610, 613, 665, 668, 676, 680, 748, 749, 750, 751, 752, 775, 792, 827, 829, 843, 1048, 1050, 1076, 1077, 1078, 1165], "wissen": 23, "welch": 23, "ander": [23, 189, 366], "l\u00f6sungen": 23, "vorhaben": 23, "den": [23, 178, 218, 234], "genannten": 23, "problemen": 23, "gibt": [23, 213], "e": [23, 465, 749], "schon": 23, "7": [23, 206, 213, 214, 234, 383, 446, 456, 1194], "alleinstellungsmerkm": 23, "8": [23, 213, 214, 233, 234, 383, 446, 456, 939, 1144, 1194], "projektergebniss": 23, "erforderlich": 23, "lizenzen": 23, "dritter": 23, "9": [23, 206, 207, 213, 214, 234, 383, 446, 456, 1033, 1179, 1194], "erfolgreich": 23, "projektabschluss": 23, "sonstigen": 23, "aktivit\u00e4ten": 23, "im": [23, 213, 239, 252, 265, 268, 283, 290, 304, 310, 322, 326, 344, 348, 383, 1071], "projektbereich": 23, "angaben": [23, 150], "zur": [23, 150, 184, 203, 213], "fachlichen": 23, "eignung": 23, "mitarbeiterinnen": 23, "projektkernteam": 23, "erfahrung": 23, "vorgesehenen": 23, "projektleiterin": 23, "zum": [23, 189, 234], "maxim": 23, "min\u00fctigen": 23, "video": [23, 24, 31, 221, 279, 309, 325, 698], "risiken": 23, "erfolgskriterien": 23, "am": [23, 203, 262, 383], "angestrebt": 23, "jahr": 23, "10": [23, 45, 103, 104, 146, 156, 187, 190, 195, 206, 209, 213, 248, 249, 276, 277, 278, 279, 280, 294, 317, 318, 320, 321, 323, 365, 369, 370, 371, 375, 383, 446, 553, 860, 861], "umsetzung": 23, "einj\u00e4hrig": 23, "wichtig": 23, "partner_innen": 23, "arbeitsschwerpunkt": 23, "ressourcen": 23, "nutzer_innen": 23, "kommunikationskan\u00e4l": 23, "11": [23, 45, 129, 133, 141, 145, 146, 188, 193, 211, 212, 213, 242, 243, 248, 273, 277, 279, 282, 283, 317, 324, 325, 326, 327, 328, 329, 330, 331, 332, 372, 373, 383, 446, 568, 691, 694, 727, 728, 739, 748, 785], "projekttermin": 23, "termin": [23, 864, 976, 1039], "projektstart": 23, "kosten": 23, "finanzierung": 23, "projektkosten": 23, "personalkosten": 23, "sonstig": 23, "gesamtkosten": 23, "wir": [23, 218, 234], "beantragen": 23, "folgend": 23, "f\u00f6rderung": 23, "restlichen": 23, "werden": [23, 213], "finanziert": 23, "durch": [23, 203], "sonderprei": 23, "14": [23, 45, 129, 130, 133, 141, 146, 193, 202, 213, 214, 217, 231, 273, 383], "erg\u00e4nzend": 23, "transparenz": 23, "mehrfachantr\u00e4g": 23, "nutzung": 23, "whataventur": 23, "plattform": 23, "eingereicht": 23, "teil": 23, "einer": [23, 193, 202, 213, 383], "schulischen": 23, "verpflichtung": 23, "z": 23, "b": 23, "htl": 23, "diplomarbeit": 23, "wie": [23, 220, 226], "haben": [23, 203], "sie": [23, 203], "erfahren": 23, "mehrfachnennungen": 23, "m\u00f6glich": 23, "16": [23, 232, 256, 270, 282, 283, 383, 1033, 1179], "datenschutz": 23, "screenplai": [24, 62, 350, 474, 570, 573, 576, 579, 582, 585, 588, 620, 621, 622, 623, 624, 627, 628, 629, 647, 648, 649, 650, 788, 791, 796, 801, 806, 808, 846, 849, 852, 997, 1000, 1004, 1072, 1159, 1166, 1171, 1173, 1176], "The": [24, 39, 43, 45, 60, 104, 126, 129, 168, 181, 213, 229, 232, 235, 242, 259, 268, 271, 286, 294, 296, 298, 304, 307, 314, 317, 320, 321, 324, 326, 334, 335, 338, 348, 386, 394, 395, 432, 433, 448, 455, 456, 465, 466, 470, 471, 480, 548, 549, 601, 625, 646, 647, 669, 689, 690, 698, 703, 705, 707, 732, 750, 753, 764, 785, 829, 859, 868, 869, 876, 893, 896, 907, 910, 913, 915, 924, 926, 930, 946, 948, 950, 951, 953, 959, 967, 971, 986, 988, 995, 1007, 1009, 1010, 1019, 1020, 1028, 1029, 1031, 1035, 1039, 1047, 1050, 1054, 1056, 1058, 1065, 1070, 1076, 1118, 1139, 1146, 1155, 1165, 1186], "problem": [24, 430, 452, 475, 476, 484, 490, 491, 492, 495, 501, 548, 549, 691, 703, 707, 727, 728, 737, 753, 766, 771, 789, 823, 870, 889, 948, 950, 954, 1009, 1024, 1025, 1029, 1043, 1138, 1160, 1167], "And": [24, 42, 60, 62, 126, 131, 132, 146, 181, 277, 280, 283, 286, 289, 294, 295, 296, 297, 298, 299, 304, 307, 309, 312, 314, 317, 320, 321, 324, 325, 326, 328, 332, 334, 335, 338, 348, 406, 450, 474, 475, 477, 480, 481, 486, 487, 488, 494, 497, 503, 511, 512, 517, 525, 531, 546, 593, 594, 600, 605, 621, 625, 626, 627, 629, 647, 662, 663, 667, 670, 695, 701, 703, 705, 718, 735, 738, 739, 740, 742, 743, 748, 760, 762, 764, 766, 771, 781, 797, 855, 859, 860, 861, 865, 868, 874, 876, 912, 924, 926, 931, 935, 941, 942, 953, 966, 988, 1016, 1017, 1019, 1021, 1022, 1023, 1024, 1026, 1031, 1035, 1036, 1039, 1043, 1044, 1045, 1050, 1051, 1052, 1053, 1117, 1118, 1119, 1127, 1139, 1144, 1149, 1150, 1152, 1153, 1154, 1164, 1186], "me": [24, 174, 334, 965], "open": [24, 158, 183, 299, 500, 791, 792, 956, 959, 962, 964, 1001, 1028, 1081], "sourc": [24, 40, 173, 183, 199, 475, 493, 789, 792, 794, 797, 799, 802, 806, 811, 813, 823, 825, 833, 836, 841, 960, 1009, 1086, 1144], "walk": [24, 286, 348, 365], "through": [24, 286, 365], "us": [25, 26, 27, 28, 29, 30, 31, 32, 38, 42, 171, 175, 177, 181, 191, 192, 198, 200, 210, 229, 231, 232, 245, 248, 391, 393, 396, 411, 426, 448, 458, 466, 467, 476, 478, 492, 495, 512, 533, 633, 657, 678, 686, 698, 702, 703, 739, 753, 764, 775, 776, 777, 925, 937, 938, 939, 975, 991, 1008, 1009, 1019, 1020, 1026, 1028, 1031, 1034, 1044, 1053, 1159, 1165, 1166], "case": [25, 26, 27, 28, 29, 30, 231, 422, 426, 497, 559, 561, 564, 738, 739, 960, 964, 965, 966, 1018, 1026, 1053, 1165, 1171], "custom": [25, 158, 161, 174, 355, 594, 595, 609, 615, 639, 693, 1153, 1155, 1171], "subtract": [25, 592], "known": [25, 169], "calcul": [26, 229, 415, 494, 1051], "minimum": [26, 811], "durat": 26, "trainer": [27, 185], "editor": [27, 222], "end": [27, 704], "user": [27, 42, 46, 232, 234, 383, 596, 675, 680, 681, 682, 683, 684, 685, 797, 865, 866, 868, 869, 870, 878, 879, 890, 950, 1030, 1120, 1122, 1124, 1125, 1127, 1159], "audienc": [27, 1186], "from": [28, 29, 31, 38, 40, 42, 43, 45, 57, 104, 126, 146, 156, 162, 181, 191, 199, 200, 208, 248, 258, 286, 289, 294, 303, 321, 383, 401, 423, 429, 471, 474, 617, 620, 661, 670, 674, 700, 701, 740, 801, 806, 847, 852, 937, 949, 967, 991, 1000, 1007, 1049, 1086, 1126, 1130, 1131, 1136, 1138, 1179], "other": [28, 38, 52, 229, 298, 310, 367, 698, 811, 833, 878, 1038], "menu": 29, "choos": 29, "show": 30, "plain": [30, 633, 661, 662, 690], "text": [30, 307, 432, 920, 923, 926, 1081, 1156], "file": [30, 31, 42, 48, 191, 193, 229, 239, 242, 258, 265, 267, 268, 282, 286, 290, 300, 302, 303, 304, 307, 308, 309, 326, 330, 331, 332, 337, 338, 342, 343, 344, 346, 347, 356, 357, 372, 430, 474, 476, 482, 497, 576, 607, 791, 792, 793, 801, 833, 860, 861, 864, 882, 887, 888, 894, 895, 898, 899, 900, 908, 912, 915, 916, 920, 923, 925, 941, 949, 950, 954, 955, 959, 960, 961, 962, 963, 964, 965, 966, 968, 969, 973, 997, 1001, 1007, 1008, 1022, 1028, 1057, 1081, 1086, 1087, 1088, 1109, 1111, 1120, 1122, 1139, 1171], "send": [31, 1001, 1005], "A": [31, 45, 62, 126, 141, 146, 170, 181, 248, 274, 275, 277, 289, 293, 294, 295, 296, 298, 303, 334, 335, 337, 383, 389, 398, 428, 455, 473, 474, 477, 491, 511, 525, 533, 536, 546, 551, 566, 592, 607, 608, 617, 626, 656, 667, 668, 681, 690, 695, 703, 705, 732, 735, 748, 751, 753, 860, 861, 864, 878, 889, 912, 916, 949, 951, 955, 956, 957, 960, 963, 964, 965, 966, 973, 986, 991, 994, 1007, 1020, 1021, 1024, 1025, 1026, 1029, 1034, 1053, 1056, 1118, 1144, 1149, 1152, 1155, 1156, 1164], "v4l": 31, "camera": 31, "devic": [31, 62, 85, 101, 128, 149, 788, 789, 790, 791, 792, 793, 796, 797, 798, 799, 800, 801, 823, 827, 828, 829, 864, 937, 939, 997], "output": [31, 50, 125, 134, 191, 203, 356, 488, 671, 875, 1033, 1136, 1171], "over": [31, 242, 250, 252, 784, 939, 1069, 1070], "ssh": [31, 222, 286, 307, 362, 370, 940, 943, 944, 945, 946, 947, 948, 949, 950], "captur": [31, 732, 733, 735], "To": [31, 37, 39, 42, 44, 53, 125, 167, 265, 294, 334, 496, 497, 512, 533, 659, 670, 690, 694, 703, 705, 707, 718, 732, 740, 748, 750, 752, 753, 764, 804, 845, 847, 860, 861, 941, 942, 949, 1009, 1019, 1021, 1026, 1028, 1029, 1049, 1050, 1127, 1148, 1149, 1155], "plai": [31, 62, 718], "remot": [31, 101, 126, 128, 149, 152, 501, 514, 528, 860, 861, 941, 942, 946, 949, 950], "system": [31, 172, 245, 286, 307, 344, 372, 383, 404, 468, 665, 756, 882, 888, 950, 952, 953, 954, 959, 970, 988, 991, 994, 1060, 1159, 1179, 1197, 1198, 1199, 1200, 1201], "emoji": 32, "code": [32, 41, 43, 45, 111, 200, 201, 203, 204, 227, 243, 296, 298, 299, 312, 328, 383, 452, 462, 472, 473, 474, 476, 482, 483, 484, 489, 493, 569, 572, 575, 578, 581, 584, 587, 617, 702, 750, 771, 794, 795, 799, 800, 801, 802, 803, 813, 814, 823, 824, 835, 836, 837, 841, 842, 965, 996, 999, 1003, 1023, 1024, 1025, 1126, 1127, 1128, 1131, 1134, 1137, 1144, 1157, 1166, 1170, 1175, 1186], "sphinxemoji": 32, "setup": [32, 62, 82, 113, 173, 177, 199, 206, 207, 209, 210, 211, 232, 282, 288, 289, 292, 295, 297, 299, 302, 303, 307, 308, 309, 330, 331, 336, 337, 342, 346, 347, 488, 546, 548, 930, 938, 946, 957, 1021, 1022, 1055, 1118, 1119, 1166, 1176], "most": [32, 38, 62, 705, 1159], "here": [32, 171, 497, 949], "all": [32, 38, 53, 62, 119, 226, 229, 248, 294, 324, 335, 383, 664, 690, 698, 733, 753, 852, 870, 1007, 1023, 1041, 1129], "recip": 33, "isoamsa": 34, "txt": [34, 35, 36, 38], "ad": [34, 35, 36, 174, 1023, 1148, 1155], "mathemat": [34, 35, 36], "symbol": [34, 35, 36, 392, 407, 468, 914, 1007], "arrow": 34, "isoamsr": 35, "relat": [35, 186, 289, 292, 410, 772], "isonum": 36, "binari": [36, 512, 1081], "oper": [36, 190, 203, 213, 226, 242, 245, 248, 255, 258, 262, 265, 279, 294, 314, 326, 360, 394, 409, 410, 411, 414, 415, 417, 418, 423, 435, 546, 568, 593, 594, 600, 608, 648, 748, 756, 762, 791, 792, 793, 875, 954, 991, 1050, 1060, 1062, 1064, 1080, 1150], "layout": [37, 258, 441], "page": [37, 98, 174, 176, 804, 893, 925, 953], "admonit": 37, "i": [37, 45, 122, 171, 172, 189, 229, 239, 245, 250, 255, 258, 265, 267, 268, 300, 304, 307, 309, 338, 344, 357, 369, 394, 420, 467, 473, 491, 546, 565, 592, 599, 661, 667, 668, 703, 705, 728, 732, 737, 740, 749, 753, 757, 761, 771, 806, 817, 838, 853, 864, 868, 869, 874, 875, 876, 889, 899, 912, 939, 949, 950, 951, 954, 955, 956, 957, 958, 959, 962, 964, 966, 968, 969, 986, 989, 1007, 1024, 1026, 1031, 1081, 1138, 1152, 1176], "an": [37, 174, 245, 298, 313, 320, 324, 329, 361, 365, 383, 479, 484, 594, 703, 718, 794, 912, 938, 949, 954, 991, 1024, 1035, 1044, 1071, 1073, 1166, 1184], "tip": 37, "hint": [37, 514, 544], "import": [37, 181, 189, 229, 239, 248, 365, 599, 1005, 1030, 1038, 1146], "attent": [37, 1073], "caution": [37, 668], "error": [37, 43, 181, 245, 298, 299, 320, 321, 324, 433, 458, 492, 614, 624, 625, 709, 712, 875, 939, 951, 960, 964, 965, 966, 1043, 1099], "danger": [37, 400, 761, 890], "blech": 37, "titl": 37, "blah": 37, "kursdaten": [37, 1180, 1181, 1182, 1183, 1188, 1190, 1191, 1195, 1196, 1197, 1198, 1200, 1201, 1202], "local": [37, 39, 101, 126, 128, 149, 152, 190, 213, 431, 463, 480, 501, 946, 949, 982, 1009, 1072, 1166], "bleh": 37, "do": [37, 42, 167, 229, 271, 334, 424, 461, 480, 491, 690, 823, 845, 860, 861, 876, 1007], "mmlalia": 38, "mathml": 38, "alias": 38, "entiti": [38, 976], "restructuredtext": 39, "cheat": [39, 365], "sheet": [39, 365], "further": [39, 155, 194, 230, 231, 253, 356, 365, 462, 698, 752, 1060], "document": [39, 176, 226, 242, 322, 360, 630, 631, 632, 633, 634, 636, 637, 638, 639, 642, 643, 646, 651, 797, 813, 815, 819, 821, 843, 847, 850, 860, 861, 864, 868, 875, 876, 877, 878, 893, 894, 895, 896, 912, 915, 916, 949, 951, 953, 955, 956, 957, 959, 962, 963, 964, 965, 966, 969, 1007, 1008, 1059, 1083, 1093, 1156, 1164, 1171], "extern": [39, 312, 328, 351, 429, 478, 607, 808, 809, 938, 1024, 1094, 1186], "section": 39, "refer": [39, 167, 170, 213, 239, 242, 245, 252, 265, 268, 274, 275, 277, 280, 283, 287, 290, 295, 298, 304, 310, 322, 334, 338, 344, 348, 398, 436, 463, 605, 699, 702, 703, 705, 732, 733, 735, 744, 749, 751, 752, 781, 782, 840, 1071], "That": [39, 271, 274, 275, 277, 294, 321, 437, 495, 592, 599, 690, 693, 703, 732, 750, 751, 833, 868, 939, 949, 954, 955, 958, 1026, 1053, 1173], "we": [39, 42, 45, 53, 334, 472, 474, 823, 852, 1019, 1171], "anoth": [39, 258, 472, 991, 1023], "contain": [39, 146, 248, 268, 294, 297, 335, 568, 584, 585, 586, 625, 626, 640, 641, 644, 645, 646, 690, 694, 742, 821, 1021], "abov": 39, "footnot": 39, "sphinxish": 40, "run": [40, 156, 175, 488, 547, 610, 841, 930, 955, 956, 957, 1021, 1022, 1058, 1134, 1137, 1164], "seminar": 41, "clean": [41, 43, 45, 236, 296, 298, 299, 383, 473, 474], "2022": [41, 102, 103, 104, 105, 106, 107, 108, 147, 148, 149, 150, 248, 249, 250, 253, 256, 259, 261, 264, 267, 270, 273, 276, 277, 278, 279, 280, 282, 283, 375, 376, 377, 383], "04": [41, 108, 175, 248, 259, 261, 264, 297, 298, 299, 300, 301, 335, 365, 383, 1021], "agenda": [41, 206, 207, 209, 210, 211, 212, 217, 221, 222, 259, 264, 276, 285, 289, 292, 298, 302, 306, 308, 312, 314, 320, 324, 328, 330, 334, 336, 342, 346, 378, 379, 1186], "timelin": 41, "befor": [42, 62, 158, 191, 314, 317, 748, 1171], "formal": [42, 394], "unit": [42, 43, 45, 75, 202, 232, 270, 279, 289, 292, 347, 373, 533, 549, 610, 1119, 1169], "initi": [42, 239, 274, 275, 277, 334, 335, 396, 408, 457, 544, 575, 576, 577, 592, 599, 610, 647, 670, 690, 692, 693, 694, 695, 739, 761, 766, 827, 838, 850, 980, 982], "structur": [42, 43, 146, 163, 167, 190, 253, 274, 275, 277, 279, 301, 312, 323, 327, 328, 334, 426, 434, 441, 444, 450, 486, 533, 568, 739, 744, 764, 801, 829, 1025, 1038, 1164, 1171, 1186], "snippet": [42, 44, 50], "userdb": [42, 46, 49, 50, 55, 58, 231, 568, 682, 686], "bin": 42, "binaryfil": 42, "cpp": [42, 482, 533, 536, 708, 709, 710, 713, 714, 715, 716, 719, 720, 722, 723, 724, 725, 726], "extend": [42, 226, 610, 1047], "read": [42, 49, 50, 58, 229, 236, 356, 357, 367, 401, 462, 474, 497, 698, 740, 791, 849, 955, 959, 965, 967, 1081, 1087, 1088, 1120, 1121, 1122, 1123, 1136, 1156], "iter": [42, 192, 203, 208, 213, 218, 220, 226, 229, 234, 235, 239, 242, 245, 250, 252, 255, 258, 267, 268, 279, 280, 282, 283, 289, 292, 296, 300, 302, 303, 304, 308, 309, 321, 322, 326, 330, 331, 332, 336, 337, 338, 342, 343, 346, 347, 348, 357, 625, 626, 649, 690, 718, 725, 738, 739, 740, 784, 821, 1033, 1035, 1036, 1037, 1049, 1069, 1070, 1079], "bug": [42, 47, 53, 411, 576, 740], "faschingbau": [42, 174], "As": [42, 495, 512, 703, 742, 939, 973, 1007, 1044, 1173], "last": [42, 411, 432, 433, 462, 615, 618, 754, 983, 1005, 1171], "name": [42, 43, 134, 239, 242, 258, 405, 443, 601, 690, 833, 877, 895, 1001, 1072, 1083], "wrap": [42, 202, 458, 690, 1029], "up": [42, 172, 202, 236, 279, 297, 298, 320, 370, 458, 690, 1044], "what": [42, 45, 49, 53, 177, 180, 245, 255, 420, 461, 472, 596, 665, 684, 690, 702, 703, 732, 753, 802, 823, 833, 849, 853, 868, 876, 894, 933, 946, 949, 950, 954, 955, 958, 962, 994, 1007, 1019, 1023, 1031, 1035, 1039, 1082, 1152, 1155], "have": [42, 45, 472, 823, 1019, 1024], "messag": [43, 170, 171, 471, 477, 981, 1000, 1001, 1147, 1171], "book": [43, 45, 217, 267, 309, 386, 471, 1131], "survei": [43, 472], "comment": [43, 226, 250, 265, 290, 360, 1059, 1100], "format": [43, 50, 229, 235, 250, 310, 338, 1076, 1128], "object": [43, 121, 203, 208, 245, 252, 258, 262, 270, 271, 279, 282, 283, 295, 296, 298, 299, 302, 303, 308, 314, 315, 317, 320, 321, 324, 325, 330, 336, 342, 343, 346, 347, 353, 472, 490, 495, 575, 576, 577, 592, 594, 597, 600, 602, 606, 608, 663, 665, 679, 694, 697, 700, 703, 749, 1001, 1024, 1025, 1030, 1038, 1044, 1046, 1048, 1082, 1149, 1153], "data": [43, 133, 134, 135, 136, 190, 192, 218, 227, 253, 267, 270, 279, 303, 320, 321, 322, 324, 344, 346, 406, 450, 453, 474, 598, 602, 625, 744, 868, 982, 1049, 1117, 1131, 1136, 1138], "handl": [43, 245, 248, 258, 270, 289, 292, 297, 298, 299, 320, 321, 324, 376, 484, 492, 614, 951, 1030, 1083], "boundari": [43, 1144], "class": [43, 203, 229, 248, 252, 255, 258, 271, 279, 295, 300, 314, 317, 348, 477, 495, 502, 503, 520, 521, 533, 536, 550, 569, 570, 571, 594, 601, 602, 607, 609, 610, 611, 612, 618, 633, 661, 662, 681, 690, 691, 693, 701, 702, 734, 748, 789, 1029, 1043, 1044, 1047, 1048, 1049, 1050], "switch": [44, 139, 144, 145, 146, 422, 454, 545], "googletest": [44, 198, 547, 1169], "git": [44, 81, 126, 146, 152, 173, 181, 185, 227, 231, 232, 286, 365, 370, 383, 806, 1131], "submodul": 44, "establish": [44, 45, 1022], "demo": [44, 137, 288, 289, 296, 478, 497, 734, 749, 864, 890, 954, 989, 993], "straightforward": [44, 203], "main": [44, 126, 439, 530, 531, 532, 770, 772, 774, 776, 1023], "convers": [44, 226, 242, 250, 252, 258, 262, 265, 283, 294, 300, 304, 310, 322, 326, 332, 338, 344, 360, 411, 438, 662, 670, 1062, 1076], "fix": [44, 173, 181, 274, 275, 277, 294, 357, 600, 718, 764, 823, 824, 836, 837], "shortcom": 44, "softwar": [45, 146, 199, 296, 472, 473, 939, 1012, 1015, 1188], "craft": [45, 296, 473], "09": [45, 146, 175, 230, 240, 248, 314, 315, 316, 317, 318, 319, 383], "00": 45, "15": [45, 213, 219, 256, 289, 292, 302, 303, 304, 342, 343, 344, 345, 365, 372, 377, 383, 860, 861], "introductori": [45, 286, 718, 972], "word": [45, 265, 432, 433, 462, 465, 615, 618, 745, 754, 893, 1098, 1115], "engin": [45, 267, 939], "disciplin": 45, "coffe": 45, "break": [45, 213, 250, 425, 1066, 1069], "project": [45, 113, 126, 138, 146, 174, 190, 231, 232, 246, 270, 275, 277, 279, 295, 297, 298, 299, 312, 314, 317, 320, 321, 324, 325, 328, 343, 347, 371, 372, 373, 377, 379, 472, 474, 533, 538, 547, 548, 610, 1118, 1158, 1164, 1186, 1189], "enter": [45, 62, 242, 625, 668, 703, 729, 738, 752, 836, 925, 993, 1023, 1031, 1043, 1044, 1139, 1144, 1149], "framework": 45, "lunch": 45, "cornerston": 45, "45": 45, "keep": [45, 175, 895], "small": 45, "23": [45, 211, 237, 253, 259, 277, 285, 295, 306, 307, 383], "59": 45, "extrem": 45, "program": [45, 50, 62, 97, 125, 137, 186, 202, 208, 229, 232, 248, 258, 270, 271, 279, 282, 286, 296, 298, 299, 302, 303, 304, 308, 314, 317, 320, 321, 324, 325, 330, 336, 338, 342, 343, 346, 347, 372, 383, 387, 388, 390, 426, 427, 428, 434, 460, 465, 470, 472, 477, 497, 530, 531, 532, 536, 592, 753, 770, 772, 774, 776, 794, 846, 878, 889, 890, 931, 933, 952, 967, 970, 971, 974, 986, 996, 1004, 1007, 1039, 1046, 1055, 1056, 1058, 1060, 1107, 1119, 1130, 1157, 1185, 1197, 1198, 1199, 1200, 1201], "session": 45, "find": [46, 155, 173, 191, 492, 551, 632, 650, 780, 921, 1173], "crash": [46, 173], "If": [46, 49, 596, 690, 705, 849, 963, 964, 1030, 1155], "Not": [46, 62, 69, 125, 129, 133, 134, 136, 139, 141, 145, 181, 262, 271, 558, 560, 563, 632, 668, 684, 690, 712, 727, 728, 740, 749, 823, 849, 889, 960, 963, 964, 965, 966, 986, 1007, 1024, 1034, 1149, 1171], "found": [46, 560, 563, 632, 684, 1173], "state": [46, 171, 231, 718, 836, 838], "exist": [48, 69, 137, 167, 558, 960, 963, 964, 966, 1047, 1155], "ar": [48, 170, 171, 250, 252, 265, 315, 458, 474, 596, 602, 690, 718, 991, 1001, 1029, 1038, 1050, 1154, 1173], "overwritten": 48, "done": [49, 126, 129, 133, 142, 143, 144, 335, 496, 659, 753], "twice": 49, "altern": [50, 699], "csv": [50, 134, 146, 242, 259, 267, 270, 279, 282, 302, 303, 304, 308, 309, 324, 330, 331, 337, 342, 343, 346, 347, 474, 1087, 1088, 1089, 1120, 1121, 1122, 1123, 1128, 1139], "frontend": 50, "featur": [51, 53, 62, 282, 298, 299, 300, 302, 303, 308, 320, 324, 335, 451, 474, 730, 1032, 1047, 1066, 1136, 1138], "search": [52, 630, 632, 633, 636, 646, 650, 670, 683, 684, 685, 922, 1024, 1077, 1159], "By": [52, 198, 262, 294, 398, 605, 649, 680, 683, 685, 707, 718, 729, 732, 733, 735, 740, 744, 752, 780, 781, 782, 1030, 1063, 1152, 1153, 1154, 1164], "index": [52, 213, 231, 250, 262, 310, 463, 716, 933, 1068, 1153, 1159, 1160, 1161], "backlog": 53, "need": [53, 357, 497, 712, 714, 991, 1139], "chang": [53, 126, 878, 889, 896], "Or": [53, 125, 474, 482, 483, 497, 701, 740, 953, 1044, 1149], "Will": 53, "refactor": [53, 56, 474, 550, 801, 802, 803, 841, 1121, 1123, 1128], "after": [53, 206, 237, 424, 852, 868, 1047], "backingstor": [54, 55, 57], "ha": [54, 55, 124, 715], "too": [54, 55, 468, 483, 690, 734, 757], "mani": [54, 55, 258, 462, 484, 740, 770, 772, 774, 776, 915, 995], "respons": [54, 55, 234, 500], "interfac": [54, 73, 90, 137, 142, 144, 210, 258, 297, 335, 352, 483, 487, 497, 500, 504, 512, 523, 530, 531, 546, 548, 578, 579, 580, 587, 588, 589, 664, 792, 864, 932, 933, 936, 938, 1043, 1140], "load": [57, 191, 449, 485, 811, 812, 937, 979, 1041], "constructor": [57, 208, 258, 274, 275, 277, 283, 334, 546, 576, 582, 593, 594, 595, 596, 597, 599, 600, 609, 610, 611, 612, 679, 694, 695, 696, 701, 703, 727, 747, 748, 1045], "bool": 58, "realli": [58, 690, 752], "pointless": [59, 61, 62, 63, 64, 65, 66, 67, 1050], "blink": [59, 61, 62, 63, 64, 65, 66, 67, 365], "With": [59, 61, 62, 63, 101, 123, 128, 149, 200, 231, 278, 294, 296, 298, 320, 324, 383, 467, 475, 496, 511, 525, 547, 618, 700, 753, 766, 859, 860, 861, 922, 925, 930, 935, 961, 1024, 1072, 1152, 1154, 1165, 1166, 1169], "asyncio": [59, 61, 62, 63, 66], "libgpiod": [59, 60, 61, 62, 63, 139], "raspberri": [59, 61, 62, 63, 181, 210, 351, 383, 813, 834, 930, 934, 937, 1012, 1016, 1018, 1020, 1195], "pi": [59, 60, 61, 62, 63, 181, 210, 383, 813, 833, 834, 930, 937, 1019, 1020, 1195], "fedora": [60, 173, 180, 806, 807, 808, 809, 1021], "prepar": [60, 173, 191, 206, 207, 209, 210, 211, 212, 222, 231, 246, 275, 277, 285, 533, 610, 833], "tarbal": [60, 181], "On": [60, 62, 126, 231, 265, 267, 289, 293, 294, 298, 320, 324, 385, 547, 549, 594, 625, 626, 630, 636, 739, 764, 876, 955, 956, 957, 962, 967, 971, 994, 1021, 1086], "build": [60, 72, 171, 173, 181, 198, 199, 232, 250, 475, 477, 485, 533, 547, 609, 610, 611, 612, 801, 806, 807, 808, 809, 811, 833, 834, 937, 955, 956, 957, 967, 1008, 1009, 1012, 1015, 1019, 1020, 1021, 1023, 1024, 1025, 1079, 1173, 1191], "submiss": [61, 63, 65, 113], "biographi": [61, 63, 65], "abstract": [61, 63, 65, 279, 314, 317, 490, 505, 519, 869, 955, 956, 957, 1043], "present": 62, "start": [62, 248, 274, 275, 277, 383, 497, 700, 712, 1024, 1147, 1171], "point": [62, 262, 265, 546, 592, 594, 602, 608, 610, 611, 612, 618, 700, 712, 764, 860, 861, 1019, 1062], "greet": [62, 321, 1093], "multipl": [62, 126, 208, 433, 474, 475, 799, 800, 801, 895, 949, 1007, 1028, 1030, 1067, 1149, 1152, 1165], "background": [62, 175, 177, 591, 689], "thread": [62, 170, 172, 181, 298, 299, 374, 568, 690, 756, 757, 762, 975, 976, 977, 982, 984, 991, 994, 1039], "charact": [62, 387, 394, 397, 400, 407, 788, 789, 790, 791, 792, 793, 796, 797, 798, 1115], "base": [62, 181, 250, 258, 274, 275, 277, 279, 314, 317, 334, 495, 661, 662, 690, 703, 718, 738, 739, 1025, 1030, 1043], "gpio": [62, 90, 145, 146, 188, 210, 351, 352, 353, 354, 365, 813, 814, 937, 939, 971, 972, 973], "entir": [62, 294, 806, 808, 893, 949], "matrix": 62, "off": [62, 231], "bring": [62, 152, 370, 664], "togeth": [62, 480, 664, 895], "modular": [62, 248, 428], "bit": [62, 303, 337, 414, 878, 889, 891, 1056, 1058], "row": [62, 294, 1148, 1152, 1153, 1154], "coroutin": [62, 277, 717, 718], "enough": [62, 592, 668], "sequenc": [62, 239, 242, 250, 282, 289, 292, 302, 303, 308, 309, 330, 331, 336, 337, 342, 343, 346, 347, 348, 407, 566, 630, 636, 1034, 1067, 1075], "loop": [62, 190, 192, 203, 213, 218, 250, 252, 262, 265, 268, 274, 275, 277, 296, 298, 320, 324, 332, 334, 348, 390, 423, 424, 462, 534, 738, 974, 1035, 1066, 1069], "forev": 62, "strip": [62, 235, 252, 258, 357], "down": [62, 483], "factori": [62, 490, 505, 519, 549], "turn": [62, 1034], "Into": [62, 126, 292, 314, 317, 320, 401, 497, 534, 551, 627, 681, 690, 734, 1121, 1123, 1128], "anti": [62, 762, 764], "clumsi": [62, 764], "decor": [62, 229, 279, 289, 292, 296, 298, 299, 314, 320, 321, 324, 495, 509, 523, 1029], "wrapper": [62, 136], "final": [62, 258, 274, 275, 277, 334, 729, 868, 872, 1030], "playground": 62, "cycl": [62, 129, 133, 134, 136, 139, 141, 145, 976], "fast": [62, 208], "forward": [62, 277, 399, 463, 752, 948], "ani": [62, 294, 491, 546, 986], "cancel": 62, "goodby": 62, "glt": [63, 65], "2023": [63, 111, 112, 113, 114, 115, 129, 130, 133, 141, 145, 146, 277, 285, 286, 289, 290, 292, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 335, 336, 337, 338, 339, 340, 344, 383], "evolut": [64, 65, 66, 110], "2024": [65, 116, 117, 118, 119, 120, 146, 342, 343, 344, 345, 346, 347, 348, 349, 383], "talk": [66, 227, 303, 931, 937, 938, 1131], "sketch": 66, "gpiod": [66, 90], "textual": 66, "hochk\u00f6nig": 68, "k\u00f6nigsjodl": 68, "klettersteig": 68, "tour": [68, 279, 690], "werfen": 68, "ostpreussenh\u00fctt": 68, "matrashau": 68, "blog": [69, 167], "articl": [69, 177, 178, 180, 181], "yet": [69, 258], "revisit": [69, 390, 458, 701], "post": [69, 182, 191, 1000], "pending_xref": 70, "cmake": [72, 198, 199, 231, 286, 312, 313, 328, 329, 383, 475, 477, 479, 483, 533, 547, 967, 1008, 1009, 1022, 1173, 1174, 1186], "oo": [74, 112, 146, 203, 229, 232, 248, 255, 258, 267, 270, 274, 275, 277, 279, 289, 292, 295, 297, 314, 317, 321, 325, 334, 335, 337, 374, 500, 537, 546, 568, 1039], "graph": [76, 77, 78, 466, 468, 673, 786, 834, 1089, 1090, 1094, 1103, 1117, 1124], "embed": [77, 78, 82, 100, 101, 111, 112, 116, 117, 127, 128, 147, 148, 149, 150, 151, 188, 197, 286, 295, 297, 335, 340, 364, 366, 367, 379, 381, 383, 771, 1188], "comput": [77, 78, 82, 100, 111, 112, 116, 117, 127, 147, 148, 149, 150, 151, 362, 364, 366, 367, 379, 381, 461, 462, 546, 860, 861, 869], "current": [77, 78, 495, 766, 784, 896], "depend": [77, 78, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 145, 199, 312, 314, 328, 351, 352, 353, 354, 356, 478, 479, 481, 482, 486, 496, 500, 510, 533, 538, 555, 557, 568, 576, 635, 641, 645, 653, 655, 658, 663, 671, 672, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 692, 699, 706, 717, 741, 746, 771, 810, 811, 860, 861, 862, 866, 880, 881, 882, 901, 906, 907, 910, 943, 945, 952, 958, 960, 968, 970, 972, 984, 987, 1009, 1011, 1013, 1014, 1017, 1018, 1024, 1039, 1041, 1087, 1088, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1133, 1137, 1141, 1144, 1147, 1151, 1163, 1169, 1186], "ex": [79, 80, 86, 87, 88, 89, 95, 96], "race": [79, 80, 92, 758, 823, 824, 831, 977, 978, 1041], "condit": [79, 80, 92, 416, 424, 433, 758, 762, 823, 824, 831, 977, 978, 980, 981, 1041], "avoid": [80, 92], "goal": [80, 86, 87, 88, 89, 91, 92, 93, 95, 155, 157, 158, 160, 191, 295, 297, 1184, 1187], "outcom": [80, 86, 87, 88, 89, 209, 317, 367], "introduct": [81, 84, 190, 274, 275, 277, 289, 292, 296, 297, 307, 312, 313, 328, 329, 334, 335, 368, 383, 386, 403, 461, 465, 479, 496, 504, 591, 688, 694, 738, 747, 756, 813, 833, 867, 1030, 1164, 1184, 1186, 1197], "2019": [82, 190, 193, 383], "overview": [82, 146, 186, 286, 298, 299, 322, 334, 380, 384, 700, 707, 718, 742, 748, 762, 764, 770, 772, 774, 775, 776, 777, 784, 804, 858, 869, 895, 926, 937, 938, 939, 940, 975, 1007, 1029, 1133, 1137], "knowledg": [82, 1186], "transfer": [82, 750], "unix": [84, 114, 115, 194, 370, 386, 448, 458, 494, 1058], "hardwar": [85, 88, 89, 146, 158, 161, 286, 448, 934, 936, 937, 939, 972, 1188], "manag": [85, 172, 220, 250, 270, 279, 289, 292, 295, 296, 298, 314, 317, 320, 321, 324, 347, 348, 372, 373, 377, 472, 600, 660, 748, 843, 844, 1009, 1028, 1047, 1158, 1188], "averag": [86, 87, 95, 494, 522, 770, 772, 774, 776], "sensor": [86, 87, 89, 95, 96, 98, 124, 142, 143, 297, 321, 334, 490, 491, 495, 497, 502, 520, 522, 523, 529, 533, 535, 536, 537, 548, 549, 550, 557, 748, 770, 772, 774, 776, 937, 939, 967, 1117, 1119], "parallel": 87, "led": [88, 141, 365], "temperatur": [88, 89, 96, 141, 533, 536, 937, 939, 967], "displai": [88, 95, 123, 131, 132, 137, 141], "sysf": [90, 145, 146, 210, 351, 365, 938, 972, 973], "multithread": [91, 188, 248, 274, 275, 277, 286, 320, 321, 324, 334, 373, 380, 762, 763, 1004, 1039, 1040, 1042, 1200], "semaphor": [92, 170, 764, 1000, 1001], "mutex": [92, 170, 449, 760, 764, 823, 824, 825, 826, 838, 839, 978, 979, 994, 1041], "commun": [93, 267, 514, 762, 980, 1001], "wait": [93, 161, 762, 764, 849, 850, 851, 980, 1000], "someth": [93, 203, 592, 690, 764, 849, 850, 851, 1069], "simpl": [97, 208, 488, 592, 602, 617, 668, 680, 836, 838, 864, 878, 1007, 1024, 1029, 1049, 1079, 1156, 1164], "2020": [100, 175, 195, 197, 202, 203, 205, 206, 207, 209, 211, 212, 217, 383], "ss2022": [101, 109, 860, 861], "block": [101, 128, 149, 419, 615, 954, 955, 956, 957, 958, 1005], "cross": [101, 112, 128, 149, 181, 286, 813, 833, 1008, 1010, 1011, 1012, 1017, 1019, 1020, 1022, 1179], "develop": [101, 112, 128, 129, 133, 134, 136, 139, 141, 145, 146, 149, 202, 217, 231, 234, 256, 267, 270, 286, 289, 291, 292, 295, 296, 297, 298, 299, 320, 321, 324, 340, 368, 383, 810, 1010, 1011, 1017, 1187, 1188, 1189, 1202], "03": [102, 103, 104, 105, 106, 107, 146, 219, 222, 227, 246, 248, 256, 259, 276, 289, 290, 292, 295, 296, 312, 365, 383, 690, 691], "08": [102, 146, 237, 240, 248, 261, 383], "homework": [102, 103, 104, 105, 108], "until": 104, "21": [104, 105, 259, 358, 365, 383], "exercis": [104, 113, 163, 185, 190, 191, 203, 206, 207, 211, 219, 220, 222, 231, 232, 242, 248, 265, 270, 274, 275, 277, 279, 282, 286, 290, 295, 297, 298, 302, 303, 308, 309, 310, 314, 317, 320, 321, 324, 330, 331, 337, 342, 343, 346, 347, 355, 357, 365, 371, 389, 391, 393, 395, 397, 399, 401, 413, 437, 446, 490, 491, 492, 494, 495, 496, 498, 499, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 566, 567, 568, 598, 609, 610, 611, 612, 613, 654, 655, 656, 663, 671, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 752, 780, 781, 782, 783, 855, 862, 873, 879, 882, 883, 885, 887, 897, 898, 899, 900, 901, 902, 903, 904, 905, 907, 908, 909, 910, 911, 920, 941, 942, 943, 944, 960, 961, 967, 1001, 1005, 1012, 1014, 1015, 1016, 1017, 1046, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128], "creat": [104, 126, 152, 164, 169, 173, 176, 198, 199, 547, 690, 757, 853, 859, 860, 861, 878, 883, 885, 887, 895, 899, 901, 912, 944, 961, 963, 964, 966, 1000, 1001, 1019, 1021, 1026, 1118, 1136, 1138], "copi": [104, 203, 252, 287, 334, 413, 551, 585, 593, 600, 605, 620, 626, 627, 631, 638, 690, 701, 703, 728, 733, 735, 739, 744, 748, 749, 780, 847, 895, 897, 898, 901, 941, 942, 949, 960, 1071, 1149], "move": [104, 274, 275, 277, 295, 334, 335, 546, 592, 608, 699, 700, 701, 702, 703, 748, 750, 781, 813, 893, 900, 901, 916], "remov": [104, 268, 483, 563, 564, 646, 649, 780, 901, 904, 912, 1001], "l": [104, 910, 915], "command": [104, 492, 507, 521, 811, 878, 889, 893, 910, 915, 930, 1021], "22": [106, 209, 216, 221, 308, 309, 310, 324, 325, 326, 327, 383], "24": [106, 138, 146, 216, 248, 278, 298, 299, 300, 301, 320, 321, 323, 324, 325, 326, 327, 383], "ku": 106, "28": [107, 190, 207, 248, 296, 371, 383], "01": [108, 113, 116, 146, 240, 246, 248, 249, 250, 279, 285, 330, 331, 332, 342, 343, 344, 345, 346, 347, 348, 349, 365, 375, 376, 383, 860, 861], "ws2022": [110, 111, 112], "plan": [110, 146, 259, 368], "fh": [111, 112, 126, 151, 533, 534, 535, 536, 537, 609, 610, 611, 612, 672, 866, 880, 881, 906, 1013], "joanneum": [111, 112, 151], "question": [111, 112, 118, 119, 120, 121, 122, 158, 229, 380, 474, 488, 533, 672, 866, 880, 881, 884, 886, 906, 992, 1013, 1042], "inherit": [111, 189, 229, 258, 279, 314, 317, 504, 578, 579, 580, 661, 662, 663, 666, 690, 962, 1039, 1047], "memori": [111, 172, 194, 220, 348, 438, 441, 445, 447, 449, 456, 463, 562, 572, 573, 574, 600, 659, 660, 804, 817, 818, 819, 820, 846, 847, 848, 866, 870, 1000, 1001, 1188, 1198], "leak": [111, 562, 573, 600, 750], "ye": [112, 1144], "No": [112, 171, 210, 512, 690, 707, 753, 1030, 1155, 1171], "lab": 113, "exam": [113, 114, 115, 116, 117, 118, 119, 127, 128, 146, 230, 243, 245, 365, 380, 546, 860, 861, 862, 992, 1042], "17": [113, 146, 242, 243, 245, 249, 250, 256, 273, 280, 286, 302, 303, 304, 342, 343, 344, 345, 383, 607], "ss2023": [114, 115, 128], "06": [114, 115, 230, 231, 248, 277, 308, 309, 310, 335, 365, 383], "30": [114, 115, 188, 197, 207, 212, 259, 383], "handout": 114, "concept": [114, 115, 277, 307, 334, 706, 707, 710, 711, 712, 715, 716, 742, 867, 1138], "toolchain": [114, 115, 181, 232, 312, 328, 833, 1007, 1008, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1186], "solv": [115, 979, 1138, 1160, 1167], "26": [116, 248, 278, 285, 298, 299, 300, 301, 320, 321, 323, 365, 383], "02": [117, 118, 146, 248, 253, 267, 286, 377, 383, 872], "ws2023": [118, 119, 138, 146], "sampl": [118, 146, 245, 753, 835, 890, 1088, 1109, 1130, 1164, 1189], "why": [118, 122, 172, 173, 181, 250, 472, 500, 592, 595, 599, 600, 747, 753, 778, 806, 852, 877, 931, 938, 946, 950, 975, 1028, 1073], "const": [121, 456, 565, 582, 602, 603, 605, 677, 678, 690, 705, 739, 744], "paramet": [122, 203, 250, 252, 296, 338, 361, 400, 436, 439, 442, 456, 474, 478, 703, 707, 742, 753, 833, 963, 1008, 1073, 1143], "pass": [122, 365, 605], "which": [122, 500, 966, 1007], "One": [122, 229, 268, 294, 357, 414, 433, 472, 474, 607, 740, 753, 846, 931, 949, 982, 1007, 1023], "better": [122, 170, 389, 474, 843, 1053, 1144], "question2": 122, "solid": [123, 124, 171, 472], "hysteresi": 123, "id": [124, 271, 299, 326, 870, 890, 950, 976, 988, 1179], "Be": [125, 232, 491, 495, 496, 600, 605, 659, 751, 756], "virtual": [125, 194, 267, 288, 578, 579, 580, 665, 667, 668, 770, 771, 772, 774, 775, 776, 777, 778, 804, 866, 870, 932, 1000, 1118, 1166, 1167, 1168, 1198], "version": [125, 181, 474, 477, 480, 690, 718, 963], "our": [126, 198, 939], "ece21": 126, "fork": [126, 146, 840], "pull": [126, 146, 497], "request": [126, 146, 474, 792, 794, 813, 815, 973], "upstream": [126, 146, 152], "sync": [126, 804], "onli": [126, 268, 294, 438, 705, 753, 806, 1100], "onc": [126, 365], "updat": [126, 146, 175], "It": [126, 173, 202, 294, 369, 438, 664, 889, 950, 963, 964, 1007], "Its": [126, 1044], "fetch": 126, "your": [126, 194, 287, 288, 453, 712, 879], "clone": [126, 181, 185, 198, 547], "merg": 126, "push": [126, 483], "two": [127, 265, 437, 530, 531, 592, 611, 695, 1001, 1095, 1096, 1105, 1106], "semest": 127, "support": [127, 210, 222, 693, 829], "finish": [128, 157, 166, 232, 852], "boil": [129, 130, 131, 132, 138, 146], "pot": [129, 130, 131, 132, 138, 146], "begin": [129, 340, 386, 740], "standup": [129, 130, 131, 132, 133, 137, 141, 145], "record": [129, 130, 131, 132, 133, 137, 141, 145, 213, 1125, 1127], "20": [129, 133, 141, 145, 146, 259, 273, 277, 295, 297, 308, 309, 310, 334, 336, 337, 338, 339, 357, 365, 383, 1021], "requir": [129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 145, 236, 267, 314, 317, 367, 478, 490, 511, 514, 533, 534, 535, 539, 540, 541, 542, 543, 544, 545, 712, 960, 967, 1087, 1088, 1109, 1118, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128], "futur": [129, 133, 134, 136, 139, 141, 145, 374, 764], "part": [129, 133, 134, 136, 139, 141, 145, 259, 1173], "Of": [129, 133, 134, 136, 139, 141, 145, 294, 303, 314, 317, 337, 475, 546, 592, 624, 625, 665, 703, 735, 740, 750, 752, 762, 780, 781, 782, 860, 861, 868, 960, 971, 995, 1009, 1030, 1033, 1053, 1149, 1155], "statu": [131, 940, 976, 986], "report": 131, "full": [132, 234], "iot": 132, "logger": [133, 134, 135, 136, 497], "sink": [134, 136, 146, 321], "column": [134, 294, 1149, 1150, 1152, 1153, 1154, 1155], "configur": [134, 174, 176, 181, 476, 894, 932, 937, 939, 974], "mqtt": [136, 140, 146, 258, 321, 324, 1125, 1147], "mosquitto": 136, "infrastructur": 137, "percentagedisplai": 137, "composit": [137, 494, 504, 508, 522, 784], "breadboard": 137, "acrobat": 137, "group": [138, 231, 232, 246, 279, 286, 298, 299, 314, 317, 320, 321, 324, 325, 343, 371, 403, 418, 427, 434, 440, 444, 447, 451, 460, 464, 469, 470, 590, 598, 613, 616, 619, 660, 669, 688, 730, 731, 755, 763, 767, 779, 783, 785, 870, 878, 887, 927, 935, 936, 990], "task": [138, 146, 371, 991], "datalogg": [138, 146], "peripher": [138, 146], "client": [138, 234, 528, 1147], "subscrib": [140, 1147], "via": [141, 146, 178, 179, 362, 939], "pwm": [141, 938], "control": [141, 267, 282, 289, 292, 302, 303, 308, 309, 330, 331, 336, 337, 342, 343, 346, 347, 497, 718, 930, 938], "onewir": [143, 533, 549, 550, 939, 967], "05": [146, 227, 230, 261, 267, 270, 273, 276, 302, 303, 304, 306, 307, 357, 358, 365, 383], "vo": 146, "recap": [146, 218, 231, 232, 246, 279, 299, 314, 317, 321, 322, 585, 747, 1007, 1033], "polymorph": [146, 232, 335, 539, 540, 541, 542, 543, 544, 545, 548, 665, 754, 773], "collabor": 146, "necessarili": 146, "first": [146, 203, 232, 387, 537, 753, 794, 795, 829, 1166], "round": [146, 515, 529], "organiz": 146, "design": [146, 278, 296, 298, 299, 314, 317, 335, 383, 400, 457, 472, 496, 500, 510, 663, 1187], "At": 146, "larg": 146, "07": [146, 232, 248, 279, 312, 313, 365, 369, 383], "renam": [146, 916], "relev": 146, "graz": [151, 193, 195, 202, 240, 383], "branch": [152, 420], "track": [152, 1023], "submit": [152, 852, 853], "appli": [152, 173, 1155], "patch": [152, 173], "packag": [154, 157, 175, 181, 198, 279, 296, 314, 320, 358, 833, 1012, 1015, 1038, 1086, 1158, 1159, 1160, 1161, 1162, 1166], "pypi": [154, 227, 267, 1086, 1131, 1160, 1162], "audio": [155, 159], "chip": [155, 938], "bringup": [155, 158, 939], "get": [156, 169, 199, 250, 335, 764, 821, 846, 971], "debian": [156, 157], "kernel": [156, 157, 158, 162, 171, 173, 217, 383, 468, 797, 806, 807, 808, 809, 810, 811, 825, 827, 833, 834, 866, 869, 934, 937, 1189], "config": [156, 833], "within": 156, "qemu": 156, "extract": [156, 162, 229, 534, 1121, 1123, 1128, 1136], "boot": [156, 169, 180, 383, 869], "etc": [157, 218, 226, 229, 258, 268, 271, 304, 909, 937, 965, 1059, 1109], "yocto": [158, 162, 928], "everyth": [158, 186, 245, 480, 864, 875, 954], "like": [158, 334, 592, 986], "i2": 159, "kontron": 159, "smarc": 159, "modul": [159, 203, 227, 229, 267, 268, 280, 296, 303, 320, 321, 358, 365, 468, 483, 547, 736, 801, 806, 808, 809, 811, 812, 827, 833, 938, 1038, 1128, 1131, 1139, 1165, 1173], "dirti": 160, "upgrad": 160, "path": [160, 181, 229, 239, 245, 252, 338, 347, 348, 486, 784, 865, 917, 1019, 1024, 1118, 1173], "step": [160, 492, 495, 497, 533, 625, 718, 780, 781, 1008, 1009, 1023, 1043, 1068], "intel": 162, "bsp": 162, "improv": 163, "beginn": [163, 227, 239, 262, 267, 279, 303, 1130, 1131], "split": [163, 189, 252, 258, 332, 357, 1077, 1136], "openshot": 164, "seo": [165, 166], "sitemap": 165, "meta": [165, 166], "stack": [166, 172, 213, 234, 445, 703], "hang": 166, "dbu": [166, 497], "stuff": [166, 335, 365, 458, 869, 903], "extens": 167, "rest": [167, 229, 324, 335, 959], "style": [167, 421, 472, 592, 694, 748, 766, 1076], "convert": [167, 190, 294, 1049, 1127], "rst": 167, "exampl": [167, 252, 258, 262, 361, 394, 398, 433, 435, 455, 458, 494, 533, 618, 643, 694, 695, 713, 714, 715, 716, 742, 751, 857, 875, 877, 878, 926, 950, 954, 959, 962, 980, 1005, 1028, 1043, 1063, 1073, 1076, 1077, 1078, 1079, 1100, 1142, 1150, 1155, 1164, 1165], "add": [167, 288, 484, 488, 546, 794, 841, 852, 1004, 1047, 1148], "miss": [167, 279, 694, 963], "past": [167, 433], "learn": [168, 289, 347, 348, 367, 1132, 1138], "beagleboard": 169, "how": [169, 172, 180, 202, 232, 250, 402, 441, 466, 467, 468, 602, 740, 750, 876, 889, 892, 1035, 1138], "repair": 169, "nand": 169, "also": [169, 439, 864, 869, 870, 875, 876, 955, 956, 957, 959, 986, 989, 993, 995, 1074, 1138], "40w": 169, "x": [169, 232, 582], "loader": 169, "u": [169, 950], "bootabl": 169, "mmc": 169, "sd": [169, 210], "card": [169, 210, 288, 861], "port": [170, 948], "There": [170, 250, 472, 600, 756, 849, 939, 949, 954, 965, 966], "": [170, 185, 210, 414, 438, 472, 592, 684, 690, 693, 753, 797, 802, 821, 833, 849, 878, 894, 946, 994, 1007, 1035, 1039, 1082], "alwai": [170, 250, 270, 728, 964], "wai": [170, 229, 250, 258, 462, 995, 1039, 1058], "process": [170, 172, 191, 286, 307, 831, 832, 865, 866, 870, 871, 986, 987, 988, 991, 995], "signal": [170, 194, 448, 762, 980, 1003, 1004, 1005, 1006], "aren": 170, "t": [170, 227, 740, 1131], "queue": [170, 213, 762, 850, 981, 1000, 1001], "timer": [170, 841, 843, 844, 957, 991], "poll": [170, 762, 764], "event": [170, 794, 813, 823, 841, 842, 846, 974, 980, 996, 998], "dispatch": [170, 775, 776, 777], "interrupt": [170, 813, 814, 815, 816, 829, 838, 974, 991], "realtim": [170, 172, 376, 380, 383, 825, 993, 994, 1179, 1188], "save": [171, 750], "disk": [171, 210, 864], "life": [171, 751, 976], "gentoo": [171, 833], "rant": [171, 191, 477, 1009], "swap": [171, 265, 437, 753, 876, 1096], "tmpf": 171, "instanc": [171, 229, 255, 258], "syslog": 171, "var": 171, "mountpoint": 171, "logrot": 171, "o": [171, 229, 239, 245, 252, 253, 258, 265, 267, 268, 300, 304, 307, 309, 338, 344, 347, 348, 357, 394, 817, 874, 875, 876, 899, 912, 954, 955, 956, 957, 958, 959, 968, 969, 989, 1081], "schedul": [171, 307, 375, 376, 380, 866, 870, 976, 989, 990, 992, 993, 994], "ram": 171, "thing": [171, 232, 253, 274, 275, 277], "left": [171, 414, 605], "p": 172, "suck": [172, 813], "count": [172, 749, 840, 876, 1115], "consumpt": 172, "conclus": [172, 838, 930, 938], "pthread": 172, "experi": 172, "100": 172, "default": [172, 203, 250, 252, 274, 275, 277, 334, 361, 546, 594, 596, 597, 609, 610, 611, 612, 679, 727, 748, 766, 892, 1005, 1073, 1153], "eat": 172, "limit": [172, 1034], "than": [172, 553, 1050], "my": [172, 175, 271, 387, 388, 474, 801, 872, 889], "could": [172, 751], "take": [172, 439, 750, 1053], "doe": [172, 618, 876, 889, 892, 960, 963, 964], "differ": [172, 203, 438, 623, 625, 895, 949], "rpm": [173, 175, 200, 806], "prerequisit": [173, 181, 199, 298, 320, 324, 367, 808, 1086], "rpmbuild": 173, "directori": [173, 198, 199, 348, 372, 474, 475, 547, 784, 860, 861, 878, 883, 884, 885, 886, 895, 896, 897, 904, 911, 912, 915, 916, 921, 949, 960, 1008, 1009, 1028, 1164], "download": [173, 219, 221, 365, 370, 384, 550, 1019, 1022, 1178], "For": [173, 175, 181, 259, 262, 286, 289, 291, 292, 295, 297, 340, 383, 395, 520, 594, 605, 690, 718, 739, 764, 868, 954, 1019, 1020, 1021, 1031, 1049, 1118, 1187], "domain": [174, 194, 292, 765], "subdomain": 174, "www": 174, "apex": 174, "microsoft": 175, "team": 175, "screen": [175, 925], "share": [175, 480, 485, 745, 749, 752, 781, 860, 861, 887, 1000, 1001, 1023, 1024, 1198], "x11": 175, "reviv": 175, "meh": 175, "annoy": 175, "re": [175, 1030], "regist": [175, 462], "itself": 175, "autostart": 175, "browser": [175, 234], "recommend": [175, 206, 367, 1165, 1186], "deploi": 176, "gener": [176, 180, 190, 199, 203, 208, 235, 242, 245, 250, 252, 258, 277, 279, 283, 289, 292, 296, 298, 299, 303, 310, 312, 320, 321, 322, 324, 328, 332, 338, 423, 552, 593, 596, 600, 718, 719, 721, 722, 727, 786, 939, 946, 973, 1008, 1009, 1033, 1034, 1035, 1036, 1037, 1062, 1101, 1114, 1186], "public": [176, 229, 487, 594, 860, 861, 885, 886, 946], "repo": [176, 198], "jfasch": [176, 890], "home": [176, 865, 895, 911, 950], "time": [176, 185, 189, 294, 478, 765, 841, 842, 870, 982, 1093], "deploy": [176, 312, 328, 480, 833, 1186], "bigbluebutton": 177, "onlin": [177, 186, 1178], "tl": 177, "dr": 177, "host": [177, 222, 833, 1021], "check": [177, 488, 512, 878, 939, 980, 1016, 1077, 1097], "els": [177, 245, 252, 258, 268, 298, 320, 324, 338, 348, 396, 420, 421, 422, 599, 614, 916, 933, 946, 1030, 1066, 1069], "traunstein": 178, "zierlersteig": 178, "kaltenbachwildni": 178, "anstieg": 178, "auf": [178, 219], "zierlerberg": 178, "rinn": 178, "abstieg": 178, "grintovec": 179, "plan\u0161arsko": 179, "jezero": 179, "\u010de\u0161ka": 179, "ko\u010da": 179, "anreis": 179, "hinauf": 179, "runter": 179, "zusammenfassung": 179, "brick": 180, "1399": 180, "dell": 180, "xp": 180, "happen": 180, "virtualbox": 180, "secur": [180, 210, 286, 307, 362, 945, 949], "enrol": 180, "machin": [180, 210, 231, 289, 362, 941, 942, 967, 1132, 1138], "owner": [180, 878], "mok": 180, "pair": [180, 690, 944, 946], "stage": 180, "reboot": 180, "diagnost": [180, 937], "crosstool": [181, 1020, 1021], "ng": [181, 1020, 1021], "prebuilt": [181, 1155], "repositori": [181, 185, 379, 547, 557], "releas": [181, 477, 815, 825, 1041], "glibc": 181, "gcc": [181, 449, 462, 1007], "simplest": [181, 718, 723, 761, 1027, 1050, 1165, 1171], "stdio": 181, "h": [181, 721, 925], "iostream": 181, "distribut": [181, 1086], "afterword": [181, 698], "schulung": [183, 203], "entwicklung": 183, "beratung": 183, "richtlinien": 184, "ver\u00f6ffentlichung": 184, "kursmateri": 184, "window": [185, 222, 239, 295, 297, 385, 872], "workflow": [185, 232], "conflict": [185, 979, 1041], "individu": 186, "languag": [186, 202, 232, 248, 274, 275, 277, 282, 302, 303, 308, 334, 335, 383, 451, 470, 730, 986, 1032, 1054, 1056], "qualivis": [187, 383], "z\u00fcrich": [187, 383], "2013": [187, 383, 1179], "fragen": [187, 220], "antworten": 187, "kursnotizen": 188, "2015": [188, 383], "userspac": [188, 792, 794, 846, 847, 848, 937, 938, 974], "can": [188, 209, 232, 267, 439, 491, 495, 546, 605, 690, 750, 931, 932, 933, 935], "bu": [188, 209, 497, 932, 935, 939], "driver": [188, 217, 288, 383, 810, 811, 829, 937, 1189], "beispiel": [188, 203, 262, 921], "heizungssteuerung": 188, "k\u00f6nnen": [189, 213, 226], "viel": 189, "mutabl": [189, 192, 203, 213, 220, 226, 239, 242, 250, 252, 255, 258, 265, 268, 271, 283, 290, 300, 304, 310, 322, 326, 332, 344, 348, 1071, 1073], "immut": [189, 192, 203, 220, 226, 239, 250, 255, 258, 265, 271, 280, 287, 290, 304, 332, 338, 603, 1071], "kann": [189, 234], "man": [189, 234, 893], "nicht": [189, 203, 213], "oft": 189, "genug": 189, "wiederholen": 189, "hart": 189, "indizieren": 189, "weich": 189, "nettfragen": 189, "shortcut": [189, 1049, 1079], "objektorientiert": 189, "date": [189, 235, 294, 370], "delta": 189, "datetim": [189, 208, 229, 235, 290], "bissl": 189, "potschert": [189, 213], "schreiben": [189, 213], "scho": 189, "formen": 189, "represent": [189, 1052], "__str__": [189, 1047, 1052], "subprocess": [189, 268], "enumer": [189, 213, 218, 220, 226, 229, 250, 258, 265, 283, 300, 322, 332, 344], "zip": [189, 229, 332], "comprehens": [189, 213, 235, 242, 245, 250, 252, 258, 262, 283, 289, 290, 292, 322, 332, 338, 344, 1027, 1033, 1078], "exec": [189, 255, 271, 279, 283, 310, 332, 1031], "eval": [189, 190, 226, 255, 265, 283, 310, 322], "umgebend": 189, "context": [189, 250, 289, 292, 296, 831, 832, 852, 1028, 1031], "eigen": 189, "json": [189, 211, 218, 234, 235, 245, 262, 265, 271, 279, 280, 315, 318, 1127], "individualtrain": [190, 205, 383], "tage": [190, 383], "beginnend": [190, 383], "inhalt": [150, 190, 193, 1004, 1181], "51": 190, "58": 190, "94": [190, 203], "121": 190, "famou": [190, 465], "overload": [190, 248, 258, 279, 314, 326, 568, 594, 601, 608, 748, 1050, 1052], "getter": [190, 546, 602], "setter": 190, "listcomprehens": 190, "express": [190, 203, 218, 235, 242, 268, 271, 283, 332, 338, 416, 418, 494, 512, 526, 697, 922, 1033, 1091, 1150], "global": [190, 203, 213, 271, 321, 402, 408, 429, 431, 445, 482, 575, 576, 577, 606, 607, 608, 951, 1026, 1072], "scope": [190, 213, 321, 761, 764, 1026, 1072], "variabl": [190, 213, 226, 229, 239, 242, 250, 258, 265, 268, 280, 300, 304, 326, 332, 338, 344, 348, 360, 388, 402, 405, 408, 429, 431, 437, 456, 512, 576, 603, 607, 733, 762, 865, 951, 980, 981, 988, 1061, 1072, 1096], "closur": [190, 213, 279, 296, 298, 299, 314, 320, 324, 732, 1026, 1028], "between": [190, 611, 1136], "walkthrough": 191, "reduc": [191, 413], "eight": 191, "color": 191, "pil": 191, "numpi": [191, 193, 220, 227, 267, 270, 289, 292, 303, 309, 321, 326, 342, 347, 348, 383, 1131, 1136], "cluster": 191, "excurs": [191, 267, 732], "matplotlib": [191, 220, 239, 271, 309, 326, 332, 1085, 1136], "now": [191, 203], "come": [191, 227, 480, 674, 1007, 1131], "let": 191, "kmean": 191, "result": [191, 466, 1143], "properti": [191, 229, 258, 486, 487, 1051], "center": 191, "restor": 191, "alpha": 191, "back": [191, 643, 1127], "rgba": 191, "random": [192, 229, 262, 267, 523, 536, 544, 1151], "type": [192, 218, 242, 245, 255, 258, 265, 274, 275, 277, 279, 280, 294, 296, 314, 317, 318, 322, 334, 344, 361, 404, 406, 407, 411, 418, 443, 453, 458, 477, 487, 596, 625, 646, 647, 690, 691, 694, 705, 707, 744, 766, 771, 773, 774, 804, 813, 908, 915, 978, 1028, 1030, 1043, 1050, 1073, 1138], "except": [192, 229, 245, 248, 255, 258, 270, 271, 279, 289, 292, 296, 297, 314, 317, 330, 336, 342, 346, 376, 568, 615, 616, 684, 733, 740, 764, 1030], "demonstr": 192, "dict": [192, 242, 250, 252, 258, 265, 338, 344, 1049], "access": [192, 231, 396, 449, 450, 594, 602, 610, 676, 766, 770, 772, 774, 775, 776, 777, 784, 817, 846, 847, 848, 1044, 1051, 1078, 1079], "indic": [192, 220], "slice": [192, 203, 218, 229, 252, 258, 262, 283, 304, 310, 870, 1068, 1152, 1154], "protocol": [192, 203, 218, 239, 242, 245, 250, 252, 255, 258, 268, 283, 296, 300, 304, 322, 326, 332, 338, 718, 930, 994, 1035, 1037], "standardthemen": 193, "hauptthema": 193, "numerik": 193, "lesen": [193, 213], "mat": 193, "l\u00f6sen": 193, "uni": 193, "\u00fcbung": [193, 196, 213], "propos": 194, "posix": [194, 762, 975, 984, 997, 999, 1000, 1001, 1002], "ipc": [194, 195, 383, 997, 999, 1000, 1001, 1002, 1198], "socket": [194, 933, 956], "applic": [194, 991], "compani": 194, "thought": 194, "handgestrickt": 196, "um": 196, "fallen": 196, "lustvol": 196, "erleiden": 196, "programmier": 197, "baden": [197, 383], "w\u00fcrttemberg": [197, 383], "kursinform": 197, "kursaufbau": 197, "kursverlauf": [197, 205], "hand": 198, "privat": [198, 229, 258, 487, 594, 666, 728, 860, 861, 883, 884], "makefil": [199, 547, 801, 811, 1008, 1009, 1023], "argh": 200, "visual": [200, 227, 243, 466, 481, 1131, 1157, 1166], "studio": [200, 227, 243, 1131, 1157, 1166], "flatpak": 200, "issu": [200, 1026], "m": 200, "bei": [150, 202, 213, 383], "firma": [202, 383], "environ": [202, 267, 275, 277, 286, 288, 295, 296, 297, 372, 865, 988, 1055, 1118, 1166, 1167, 1168, 1176], "driven": [202, 231, 256, 267, 270, 298, 299, 320, 321, 324, 383, 996, 1202], "dai": [202, 206, 207, 209, 210, 211, 221, 222, 231, 232, 237, 240, 242, 243, 246, 253, 286, 289, 292, 295, 296, 297, 298, 299, 303, 307, 309, 314, 320, 321, 324, 325, 331, 335, 347, 739, 1093, 1184], "advanc": [202, 206, 209, 218, 221, 230, 246, 256, 259, 270, 279, 282, 292, 298, 299, 300, 301, 302, 303, 308, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 334, 335, 342, 343, 344, 345, 383, 451, 1130, 1131, 1192], "18": [203, 205, 231, 250, 270, 282, 283, 297, 313, 336, 337, 338, 339, 365, 383, 1021], "19": [203, 205, 209, 243, 259, 364, 365, 379, 381, 383], "sy": [203, 229, 864, 1060], "multilin": [203, 235, 239, 332, 360, 1075], "docstr": [203, 250, 262, 265, 268, 290, 322, 344, 360], "datentypen": [203, 213, 220, 233, 249, 261], "ausflug": [203, 252], "variablen": [203, 213, 220, 233, 249, 252, 261, 271], "deren": 203, "unterbau": 203, "zuweisung": 203, "mit": [203, 213, 218, 231, 383, 921, 1179, 1195], "hilf": 203, "tupl": [203, 208, 213, 218, 220, 226, 229, 239, 242, 245, 250, 252, 258, 262, 265, 268, 274, 275, 277, 280, 283, 290, 300, 304, 326, 332, 334, 338, 344, 359, 360, 690, 739, 744, 1063, 1071, 1139], "unpack": [203, 208, 213, 218, 220, 229, 245, 250, 262, 268, 274, 275, 277, 280, 290, 326, 332, 334, 344, 359, 360, 690, 739, 744, 1019, 1139], "unendlich": 203, "breit": 203, "divis": [203, 213], "floor": [203, 213], "konvertierung": 203, "konstruktoren": [203, 220], "welchen": 203, "typ": [203, 213], "typen": 203, "besser": 203, "laufzeitverhalten": [203, 213], "geeigneter": 203, "datenstrukturen": [203, 213, 214, 234, 252, 1194], "boolean": [203, 213, 239, 242, 250, 252, 258, 262, 265, 332, 338, 410, 494, 1064, 1091, 1150], "short": [203, 242, 258, 410, 504, 813], "circuit": [203, 242, 258, 410], "evalu": [203, 242, 258], "warum": [203, 213], "sind": [203, 213], "mehr": [203, 218], "rang": [203, 208, 213, 220, 229, 235, 239, 242, 250, 252, 255, 262, 265, 268, 274, 275, 277, 280, 290, 304, 310, 321, 334, 338, 344, 348, 624, 625, 690, 718, 738, 739, 740, 741, 742, 743, 1033, 1070, 1085], "foli": 203, "161": 203, "shallow": [203, 252, 1071], "deep": [203, 252, 1071], "dem": [203, 1195], "deepcopi": 203, "funktionen": [203, 213, 214, 218, 1194], "gotcha": [203, 811, 841, 995], "90": 203, "ff": 203, "lokal": [203, 213, 271], "92": 203, "uniq": [203, 1113, 1114], "punkt": [203, 213], "zusammengefasst": 203, "hier": 203, "sch\u00f6nere": 203, "al": [203, 213, 262], "comprens": 203, "125": 203, "lesbarkeit": 203, "perform": [203, 226, 464, 740], "review": [203, 232], "pprint": 203, "praktisch": 203, "debug": [203, 477, 831, 1029], "datentransform": 203, "127ff": 203, "complet": [203, 568, 893], "collect": [203, 252, 255, 280, 1007, 1049, 1149, 1162], "namedtupl": [203, 1049], "parameter\u00fcbergab": [203, 213], "variabel": 203, "lang": 203, "argumentlisten": 203, "erst": 203, "klass": 203, "weiterf\u00fchrend": [205, 227], "workspac": [206, 207, 209, 211], "core": [206, 243, 286, 1008], "special": [206, 325, 917], "tutori": [206, 209, 221, 227, 237, 267, 270, 303, 1131], "parti": [206, 237], "v": [208, 213, 220, 226, 229, 250, 255, 258, 262, 265, 271, 287, 290, 300, 304, 315, 359, 360, 398, 407, 419, 422, 426, 428, 477, 480, 587, 588, 589, 603, 749, 757, 773, 811, 831, 832, 838, 839, 953, 989, 1059, 1062, 1070, 1081, 1159], "return": [208, 271, 338, 442, 700, 701, 703, 718], "orient": [208, 258, 271, 279, 282, 283, 296, 298, 299, 302, 303, 308, 314, 317, 320, 321, 324, 325, 330, 336, 342, 343, 346, 347, 353, 472, 592, 663, 1046], "addit": [209, 592, 608, 670, 1047], "brought": 209, "thoma": 209, "cloud": [210, 335, 362], "particip": 210, "desk": 210, "interlud": [210, 813], "bloodi": 210, "wild": [210, 259, 314, 317, 320], "watchdog": 210, "25": [211, 221, 230, 237, 248, 253, 264, 306, 307, 314, 315, 316, 319, 383], "grundlegend": [213, 214, 1194], "sprachelement": [213, 214, 1194], "syntax": [213, 220, 226, 258, 268, 290, 304, 332, 344, 360, 733, 742, 1059], "semantik": 213, "einr\u00fcckung": 213, "ihren": 213, "\u00e4ndern": 213, "kommentar": 213, "sprach": 213, "standarddatentypen": 213, "elementar": [213, 214, 1194], "beliebig": 213, "gro\u00df": 213, "vergleichsoperatoren": 213, "pr\u00e4zedenz": 213, "vor": 213, "strichrechnung": 213, "modulo": 213, "un\u00e4rer": 213, "negat": [213, 1150], "erzwingen": 213, "auch": 213, "zeichenketten": 213, "raw": [213, 220, 235, 239, 252, 258, 280, 310, 1044, 1075, 1126], "f": [213, 235, 250, 268, 310, 332, 1076], "konvertierungen": 213, "pr\u00e4zendenzregeln": 213, "literal": 213, "primit": [213, 756, 1033], "konstanten": 213, "operatoren": 213, "ausdr\u00fcck": 213, "operatorrangfolgen": 213, "\u00fcbungen": [213, 1178], "zwei": 213, "vertauschen": 213, "kontrollstrukturen": [213, 214, 233, 249, 250, 261, 1194], "anweisungen": 213, "folgen": 213, "bedingungen": 213, "verzweigungen": 213, "bedingt": 213, "anweisung": 213, "verzweigung": [213, 214, 1194], "geschachtelt": 213, "mehrfach": 213, "fallauswahl": 213, "schleifen": [213, 214, 1194], "z\u00e4hlergesteuert": 213, "kopfgesteuert": 213, "schleif": [213, 218], "fu\u00dfgesteuert": 213, "jf": 213, "continu": [213, 248, 250, 289, 297, 299, 321, 331, 425, 1066, 1069], "sequenti": [213, 218, 250, 262, 332, 348, 632, 633, 640, 641, 1033, 1067], "schnell\u00fcbersicht": 213, "sprunganweisungen": 213, "endlosschleifen": 213, "ben\u00f6tigt": 213, "Suche": 213, "eindimensional": 213, "tupel": 213, "listen": [213, 218, 252, 360], "sort": [213, 265, 551, 630, 635, 636, 639, 1153], "revers": [213, 637, 638, 655, 656, 657, 1050], "stapel": 213, "schlangen": 213, "versuch": 213, "zur\u00fcck": 213, "hybrid": 213, "supergscheit": 213, "methoden": [213, 214, 1194], "prozeduren": [213, 214, 1194], "funktionspoint": 213, "so": [213, 226, 229, 239, 271, 295, 472, 592, 690, 703, 705, 732, 1152], "heisst": [213, 218], "funktionsobjekt": 213, "primzahlenbeispiel": 213, "funktion": 213, "laufzeitfehl": 213, "existiert": 213, "zuweisen": 213, "fehlerfal": 213, "peter": 213, "unterprogramm": 213, "wert": 213, "referenzen": 213, "r\u00fcckgabewert": 213, "oder": [213, 366, 1179], "inner": [213, 1026], "standardbibliotheken": 213, "built": [213, 296, 596, 694, 811, 1030], "funktionalit\u00e4ten": 213, "struktur": 214, "herdt": [214, 1194], "kapitel": [214, 1194], "ganz": [218, 250], "kurz": 218, "mehreren": 218, "returnwerten": 218, "bzw": [218, 366], "containerdatentypen": 218, "untypisiert": 218, "l\u00f6schen": 218, "begriff": 218, "zufal": 218, "regular": [218, 231, 232, 268, 271, 283, 332, 338, 922], "hallo": 220, "speicher": 220, "sch\u00fctze": 220, "ich": 220, "davor": 220, "aber": 220, "gemischten": 220, "wiederholung": [220, 255], "objektidentit\u00e4t": 220, "statement": [220, 229, 419, 433, 1026, 1028, 1041, 1059, 1065, 1143, 1146], "operationen": 220, "verloren": 220, "interpol": 220, "mittel": [220, 226], "scipi": 220, "shell": [222, 286, 307, 362, 383, 865, 876, 878, 894, 906, 907, 913, 945, 962, 971, 986, 1180], "script": [222, 307, 383, 940, 971, 1038, 1057, 1180], "29": [222, 296, 330, 331, 332, 346, 347, 348, 349, 365, 373, 383], "assign": [226, 252, 258, 265, 326, 344, 348, 360, 415, 512, 593, 599, 600, 700, 701, 703, 748, 1026, 1061, 1068, 1072, 1148], "fun": [226, 265, 279, 1061], "arithmet": [226, 231, 250, 262, 360, 388, 409, 438, 512, 526, 585, 608, 621, 622, 626, 629, 1050, 1062], "complex": [226, 265, 360, 1176], "nur": 226, "sum": [226, 674], "weiter": 226, "dynamisch": 226, "evaluierung": 226, "scienc": [227, 253, 267, 270, 303, 320, 321, 322, 324, 344, 346, 1131], "don": [227, 740, 1131], "batteri": [227, 360, 1077, 1131], "confer": [227, 303, 1131], "zipfil": 229, "member": [229, 258, 594, 599, 600, 602, 607, 676, 677, 694, 766], "attribut": [229, 255, 271, 334, 870, 973, 1044, 1051, 1156], "protect": [229, 666, 740, 823], "posit": [229, 592, 1024, 1053, 1083], "keyword": [229, 250, 274, 275, 277, 334, 361, 455, 456, 1026, 1053, 1073], "argument": [229, 250, 258, 279, 314, 361, 439, 960, 986, 1029, 1053, 1060, 1073, 1083], "mix": [229, 242, 310, 733, 1107, 1108], "yield": [229, 245, 250, 268, 296, 310, 1033, 1036], "filter": [229, 258, 287, 288, 294, 322, 332, 552, 553, 554, 740, 1150], "nonetyp": [229, 242], "none": [229, 250], "recurs": [229, 441, 600, 697, 784, 895], "fibonacci": [229, 718, 720, 1034, 1101], "sever": 229, "same": [229, 576, 601, 607, 732, 1072, 1165], "oserror": 229, "errno": [229, 951], "platform": [229, 937], "assert": [229, 271, 322], "assertionerror": 229, "27": [230, 248, 264, 314, 315, 316, 319, 328, 329, 383], "predefin": [230, 433, 1176], "stream": [230, 804, 875, 1081], "pcap": [230, 243, 245], "syllabu": [150, 230, 243], "programmieren": [231, 383], "tool": [231, 304, 307, 322, 367, 858, 923, 926, 937, 1191], "massacr": 231, "kick": 231, "encapsul": [231, 458, 598, 764], "flow": [231, 261, 267, 282, 289, 292, 302, 303, 308, 309, 330, 331, 336, 337, 342, 343, 346, 347, 427], "pointer": [231, 232, 248, 274, 275, 277, 295, 297, 335, 435, 436, 438, 440, 456, 568, 585, 600, 604, 605, 621, 622, 623, 625, 626, 629, 649, 690, 705, 745, 746, 747, 748, 750], "standard": [231, 243, 248, 252, 267, 295, 297, 303, 406, 453, 477, 555, 615, 625, 658, 669, 671, 698, 875, 959, 1081, 1131, 1173], "librari": [231, 243, 248, 267, 295, 297, 303, 400, 475, 480, 481, 485, 555, 615, 625, 658, 669, 698, 953, 1024, 1025, 1131, 1198], "stl": [231, 568, 584, 585, 586, 617, 625, 626, 654], "kid": 232, "recapitul": 232, "some": [232, 250, 255, 294, 297, 307, 733, 764], "jump": [232, 438], "complic": [232, 517, 1023], "toolbox": 232, "databas": [232, 324, 675, 811, 1087, 1089, 1124, 1140, 1141, 1143], "gtest": [232, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177], "smart": [232, 248, 274, 275, 277, 297, 335, 568, 745, 746, 747, 748], "datenbank": 234, "showcas": 234, "kommt": 234, "db": 234, "aufgab": 234, "formulieren": 234, "damit": 234, "dies": 234, "http": [234, 322], "verbindung": 234, "schicken": 234, "jetzt": 234, "schickman": 234, "weg": 234, "vom": [234, 383], "server": [234, 1147], "php": 234, "j": 234, "empfangen": 234, "nun": 234, "muessen": 234, "verwandlen": 234, "liter": [235, 360, 512, 764, 765], "quot": [235, 239, 265, 1139], "friend": [235, 760], "sinc": [235, 268, 274, 275, 277, 607, 1076], "pars": [235, 1060, 1083, 1109], "sap": [236, 289, 291, 292, 293, 294, 341, 383], "export": 236, "solut": [236, 430, 452, 475, 484, 490, 491, 492, 495, 496, 501, 510, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 600, 627, 657, 694, 696, 703, 727, 728, 737, 771, 870, 889, 948, 950, 954, 1023, 1025, 1041, 1167], "terminologi": [239, 307, 867, 1005, 1138], "31": [240, 248, 256, 346, 347, 348, 349, 383], "numer": [240, 342], "ai": 240, "mountain": 240, "io": [242, 258, 286, 290, 326, 332, 347, 461, 817, 818, 873, 973], "common": [242, 462, 474, 640, 1034, 1043], "wtf": [242, 957, 1005], "creativ": [245, 859, 1047], "shift": [245, 414, 608], "hmmm": 246, "undefin": [248, 1072], "behavior": [248, 742], "again": [248, 296, 307, 602, 689, 913, 1050, 1180], "repeat": [248, 905], "quickli": 248, "algorithm": [248, 265, 289, 297, 334, 335, 438, 551, 568, 585, 620, 621, 625, 626, 635, 639, 1136, 1138], "functor": [248, 568, 633, 732, 734, 735, 753], "unifi": 248, "model": [248, 1136, 1138], "uml": [248, 504], "todai": [248, 1026], "associ": [248, 417, 504, 644, 645], "dynam": [248, 279, 298, 299, 300, 320, 324, 445, 572, 573, 574, 626, 659, 660, 773, 789, 819, 820, 1024, 1044, 1053], "alloc": [248, 334, 462, 582, 627, 652, 653, 660, 769, 771, 804, 827, 969, 1033], "week": 248, "zahl": 250, "miscellanea": 250, "brace": [250, 274, 275, 277, 334, 335, 692, 693, 694, 695, 1150], "singl": [250, 475, 500, 949, 1007, 1171], "hour_of_dai": 250, "membership": [250, 1067], "best": 250, "intro": [252, 286, 365, 584, 585, 586, 973, 1027], "doc": [252, 322], "ident": [252, 315], "datenypen": 252, "libarari": 252, "chainmap": 252, "dequ": 252, "suchalgorithmen": 252, "pitfal": [252, 295, 298, 361, 596, 665, 690, 718, 735], "fromkei": [252, 265], "join": [252, 258, 332, 347, 348, 1077, 1104], "lstrip": [252, 357], "rstrip": [252, 357], "sequentiel": 255, "konstant": 255, "suchzeit": 255, "metaprogram": 255, "everywher": [255, 271, 600, 1031], "defaultdict": [255, 280], "hello": [258, 268, 387, 722, 811, 812, 1057], "world": [258, 387, 394, 811, 812, 1057], "blahblah": [258, 262, 265, 268, 332, 625, 1056], "commandlin": [258, 286, 324, 351, 356, 439, 467, 474, 893, 948, 971, 1005, 1060, 1083], "lifetim": [258, 402, 431, 735, 749, 757, 1140], "preview": [258, 485], "explicit": [258, 396, 592, 604, 695, 733, 735, 748, 761, 1041], "max": 258, "iteratoren": 258, "generatoren": 258, "ordereddict": 258, "duck": [258, 274, 275, 277, 314, 317, 334, 705, 774, 1043], "resolut": 258, "order": [258, 576, 1030, 1050], "mro": 258, "super": 258, "__bases__": 258, "__mro__": 258, "self": [258, 600, 1045], "call": [258, 432, 436, 462, 466, 468, 568, 836, 953, 959, 988, 994, 1053], "mangl": [258, 601], "udemi": 258, "claus": [258, 298, 320, 324, 1030], "lambda": [258, 274, 275, 277, 304, 334, 335, 690, 731, 732, 733, 734, 753], "oppos": 258, "discuss": [261, 298, 299, 371, 396, 398, 762, 836, 841, 849], "chart": 261, "interact": [262, 310, 1057, 1108], "1st": 262, "explan": [262, 322], "preced": [262, 265, 417, 1062], "float": [262, 265, 322, 1062], "einschub": 262, "vergleich": 262, "filterketten": 262, "zen": 262, "datensatz": 262, "notat": 262, "letzt": 262, "letzten": 262, "infinit": [265, 1034], "long": [265, 690], "comparison": [265, 592, 639, 784, 858, 1050, 1062], "digit": [265, 365, 1098], "english": [265, 367, 1098], "determin": [265, 879, 1095, 1105, 1106], "maximum": [265, 1095, 1105, 1106], "out": [265, 298, 299, 497, 595, 624, 625, 995, 1009, 1026, 1068], "duplic": [265, 475, 617, 962], "encod": [265, 267, 268, 279, 289, 309, 310, 326, 365, 1144], "nest": [268, 428, 441], "itertool": 268, "chain": [268, 836], "destructor": [268, 576, 582, 597, 662, 667, 747], "prient": 270, "next": [270, 461, 726, 1171], "standesregist": 270, "sqlite3": [270, 478, 1087, 1143], "xml": [270, 1156], "tree": [270, 806, 833, 871, 897, 904, 942, 949, 988], "projektabschlusstag": 270, "anyth": 271, "defin": [271, 484, 596, 733, 1030], "own": [271, 474, 702, 712, 870], "lookup": [271, 560, 561], "vorbesprechung": 273, "legend": 273, "neuerungen": 273, "seit": 273, "2011": [273, 274, 275, 277, 383], "ausblick": 273, "thank": [274, 275, 277], "you": [274, 275, 277, 705], "readablil": [274, 275, 277], "writabl": [274, 275, 277, 960], "err": [274, 275, 277, 334, 649, 705, 739, 744], "bind": [274, 275, 277, 334, 739, 744, 752, 753, 1143], "auto": [274, 275, 277, 334, 690, 705, 738, 739, 980, 1165], "without": [274, 275, 277, 334, 606, 627, 701, 705, 969], "simpli": [274, 275, 277, 335, 950], "deserv": [274, 275, 277], "ag": [274, 275, 277, 680], "overrid": [274, 275, 277, 334, 737], "delet": [274, 275, 277, 334, 573, 642, 728, 893], "strongli": [274, 275, 277, 334, 691], "enum": [274, 275, 277, 334, 454, 691, 801], "deleg": [274, 275, 277, 334, 696], "nullptr": [274, 275, 277, 334, 704], "rvalu": [274, 275, 277, 334, 699, 702, 703], "skeleton": [275, 277, 295, 297, 610, 860, 861], "perfect": [277, 412, 454, 752], "view": [277, 693, 740, 742, 743, 797, 859], "architectur": [278, 383, 472, 690, 729, 833], "pattern": [278, 296, 298, 299, 383, 496, 510, 1034, 1187], "mondai": 278, "tuesdai": 278, "wednesdai": 278, "forc": [279, 411], "front": [279, 298, 320, 1044], "seri": [279, 282, 302, 303, 308, 309, 330, 331, 337, 342, 343, 346, 347, 568, 1117, 1124, 1149], "piec": 279, "go": [279, 962, 1139], "kickoff": [279, 298, 299, 314, 317, 321, 324], "livehack": [279, 288, 474, 497, 699, 796, 1072, 1159, 1166], "Such": [280, 670], "noob": 282, "wsl": [286, 295, 297, 872, 1021], "quick": 286, "permiss": [286, 307, 878, 880, 881, 882, 888, 892, 911, 942], "uart": [286, 864], "susi": 286, "untold": [286, 289, 295, 296, 299, 335], "whet": [287, 288], "appetit": [287, 288], "panda": [287, 289, 290, 292, 294, 296, 309, 321, 326, 332, 342, 346, 347, 1136, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155], "regex": 287, "pipelin": 288, "categori": 288, "payment": 288, "select": [288, 294, 296, 930, 937, 997, 1149, 1150, 1152, 1154, 1171], "uncategor": 288, "dataset": [289, 293, 294, 1135, 1137], "origin": [289, 292, 617, 734, 735, 843, 1139], "automat": [289, 292, 312, 328, 408, 431, 727, 775, 1186], "cleanup": [289, 292, 841, 852], "conversiosn": 290, "outlook": [292, 334], "specif": [292, 982, 1119], "usecas": 294, "drop": [294, 492, 740], "nan": 294, "datafram": [294, 1136, 1149, 1153], "isna": 294, "to_datetim": 294, "dated": 294, "workabl": 294, "usag": [294, 299, 334, 441, 445, 468, 484, 488, 533, 548, 594, 631, 632, 638, 665, 693, 697, 705, 749, 750, 751, 792, 836, 876, 915, 932, 939, 963, 1007, 1085], "modifi": [294, 449, 456, 533, 979, 1041, 1071, 1155], "increas": 294, "price": 294, "particular": 294, "store": [294, 449, 497, 979, 1041], "readabl": [294, 452, 764, 965], "combin": [294, 415, 511, 512, 525], "prefer": [295, 297], "ubuntu": [295, 297, 1021], "under": [295, 297, 895, 955, 1028], "unsupport": 295, "heavi": [295, 297, 869], "weight": [295, 297], "resourc": [295, 367, 600, 660, 748, 761, 829], "r": [295, 912, 949], "littl": [295, 423, 474, 1056], "concurr": 295, "far": [295, 757, 1138], "fact": [296, 815, 877, 1044, 1047], "fixtur": [296, 549, 784, 1164, 1165, 1175, 1176, 1177], "omin": [296, 1029], "warm": 297, "resolv": 297, "cont": 297, "d": [297, 497], "insid": [298, 299, 602, 607, 702, 703], "construct": [298, 320, 324, 1049, 1066], "emphasi": [298, 320, 324], "recoveri": [298, 299, 320, 321, 324], "broader": 298, "sens": 298, "morn": [299, 303, 307, 309, 321, 331, 335, 347], "pytest": [299, 347, 1163, 1164], "awaken": [303, 331, 347], "bash": [307, 383, 913, 1180], "bourn": [307, 913, 1180], "inspect": [307, 920, 923], "wakeup": [307, 309, 335, 993, 995], "redirect": [307, 873, 874, 875, 876, 899, 912, 962], "pipe": [307, 742, 859, 873, 874, 876, 877, 924, 926], "archiv": [307, 855, 856, 858, 859, 1021, 1022, 1025], "compress": [307, 855, 856, 858, 859], "network": [307, 514, 827, 828, 931, 956, 1201], "least": [307, 1171], "day2": 309, "interpret": [310, 466, 498, 511, 512, 525, 526, 1108], "len": 310, "abl": 310, "callabl": [310, 753], "summer": [148, 314, 317, 368], "sandbox": [314, 317], "equal": [315, 546, 592, 608, 609, 610, 611, 612, 632, 1050], "spoiler": 317, "annot": 318, "multiprocess": 320, "idea": 320, "veri": [321, 737, 769, 1156], "leftov": 321, "yesterdai": 321, "ifi": 321, "toolcas": [321, 334, 708, 709, 710], "arg": [321, 1029], "kwarg": [321, 1029], "includ": [321, 432, 486, 1077], "receiv": [321, 1001], "udp": 321, "datagram": [321, 931], "compositesink": 321, "timestamp": [321, 841], "org": [322, 365], "aaarghhh": 322, "expresss": 322, "constexpr": [334, 697], "constinit": 334, "constev": 334, "want": [334, 665, 690, 701, 705, 728, 801, 806, 964, 1047], "erasur": [334, 771, 773], "classic": [335, 754, 770], "semant": [335, 699, 700, 701, 702, 703, 1001], "kochtopf": 335, "roundup": 335, "still": [335, 495, 690, 1028, 1033], "weird": 338, "exchang": [338, 931], "schuetzen": 338, "pathlib": [338, 348], "regexen": 338, "distil": 338, "py": 338, "infin": [344, 1034], "listdir": [347, 348], "option": [347, 420, 467, 482, 483, 484, 859, 893, 895, 915, 922, 937, 949, 1139], "scikit": [347, 348], "struct": [348, 441, 442, 457, 592, 681, 744], "cell": 348, "wuerfeln": 348, "prime": [348, 1102, 1110, 1116], "misc": 348, "crap": 348, "datatyo": 348, "einlesen": 348, "sep": 348, "checker": 350, "blinklicht": [351, 352, 353, 354], "electron": [351, 930], "aspect": 351, "circuitri": 351, "header": [351, 430, 476, 482, 607, 937, 1120], "pinout": [351, 937], "unittest": [354, 1165, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1202], "ece19": 355, "g2": [357, 861], "big": [357, 383, 821], "swoop": 357, "size": [357, 406, 565, 715, 909], "chunk": 357, "line": [357, 401, 433, 595, 876, 893, 1059, 1100, 1111, 1115], "str": [357, 1052], "byte": 359, "btw": 360, "wertebereich": 360, "sidenot": [361, 1073], "pure": [361, 665, 667, 1073], "beauti": [361, 468, 864, 939, 1073], "login": [362, 868, 940], "formalit\u00e4ten": 363, "ec": [364, 379, 381, 860, 861], "daili": 365, "fail": [365, 964, 1164, 1171, 1173], "reiter": 365, "argpars": [365, 1060, 1083], "deutsch": [366, 383], "lehrinhalt": 366, "lernergebniss": 366, "lv": 366, "empfohlen": [150, 366, 1180, 1182, 1183, 1188, 1190, 1191, 1195, 1196, 1197, 1198, 1200, 1201, 1202], "verpflichtend": 366, "fachliteratur": [150, 366], "lernressourcen": 366, "instrument": 366, "art": 366, "vermittlung": 366, "voraussetzungen": [150, 366], "begleitbedingungen": 366, "pr\u00fcfungsmethod": 366, "beurteilungskriterien": 366, "mode": [367, 477, 878, 930, 963, 1057, 1081], "deliveri": [367, 1004, 1005], "co": 367, "requisit": 367, "assess": 367, "criteria": [367, 989], "whose": 369, "fault": 369, "newcom": 370, "jjjj": 373, "sidewai": [374, 607, 753, 764, 1029, 1034], "bisher": 383, "gehalten": 383, "entwickl": 383, "fortgeschritten": [383, 1182], "wiener": 383, "neustadt": 383, "einf\u00fchrung": [383, 1181, 1183, 1190], "ober\u00f6sterreich": 383, "pictur": [383, 821], "obersteiermark": 383, "korn": 383, "salzburg": 383, "ausgew\u00e4hlt": 383, "themen": 383, "2018": 383, "raum": 383, "n\u00fcrnberg": 383, "oberb\u00fcren": 383, "schweiz": 383, "2017": 383, "m\u00fcnchen": [383, 1179], "lowlevel": 383, "refresh": 383, "programmiererstandpunkt": 383, "2016": 383, "wien": 383, "workshop": 383, "bodenseo": 383, "hemmenhofen": 383, "bodense": 383, "systemnah": 383, "2014": 383, "mathia": 383, "kettner": 383, "siemen": 383, "braunschweig": 383, "intermedi": [383, 523, 1026, 1043], "scratch": [383, 1179], "lpd": 383, "hannov": 383, "unter": 383, "k\u00f6ln": 383, "projektverwaltung": 383, "subvers": [383, 1196], "lka": 383, "niedersachsen": 383, "konfigur": 383, "gnu": [383, 466, 1007, 1191], "make": [383, 480, 547, 689, 728, 817, 860, 861, 1008, 1009, 1191], "2012": 383, "hamburg": 383, "fehlerdiagnos": 383, "polizei": 383, "stia": 383, "admont": 383, "bi": 383, "2010": 383, "softwareentwicklung": 383, "darmstadt": 383, "ulm": 383, "bundeswehr": 383, "wildflecken": 383, "cool": [386, 1076], "gui": 386, "Their": [386, 406], "hobbi": 386, "histori": [386, 591, 689, 797, 1001, 1026, 1056, 1135], "second": [388, 390], "fahrenheit": [389, 391, 393, 520], "tabl": [389, 391, 393, 546, 1050], "simplif": 390, "constant": [392, 407, 432, 462, 523], "preprocessor": [392, 432, 433], "macro": [393, 432, 433, 482, 792, 813], "outsid": 394, "cat": [394, 918], "poor": [394, 395], "wc": 395, "definit": [396, 398, 400, 408, 426, 428, 429, 432, 484, 607, 690, 770, 772, 774, 776, 792, 993, 1070], "memset": 396, "histogram": 397, "nonsens": 398, "signatur": 398, "declar": [398, 399, 428, 429, 430, 607], "mistak": 400, "stdin": [401, 926, 940], "variant": [406, 495, 501, 690, 766, 775, 776, 777, 1001], "qualifi": 406, "width": [406, 438, 612, 625, 938, 1068], "escap": [407, 1075], "logic": 410, "implicit": [411, 750], "sign": 411, "truncat": [411, 969], "propag": 411, "unsign": 411, "compil": [411, 428, 433, 449, 450, 475, 476, 477, 593, 596, 600, 729, 750, 813, 833, 1007, 1010, 1019, 1023], "warn": [411, 417, 433, 983, 1005], "cast": 411, "increment": [412, 625, 718, 1041], "decrement": [412, 625], "confus": [412, 1062, 1150], "manipul": [414, 750, 969, 1005], "bitwis": [414, 1150], "AND": 414, "OR": 414, "xor": 414, "right": [414, 1112], "invert": [414, 1149], "complement": 414, "summari": [417, 592, 753, 833, 859, 1024, 1044, 1152, 1154], "true": [420, 495, 605, 1153], "fals": 420, "truth": 420, "matter": 421, "distinct": 422, "purpos": [423, 973], "closer": 423, "comma": 423, "infam": 423, "idiom": 423, "bodi": 424, "goto": 426, "label": [426, 1154], "monolith": [428, 475, 497, 550], "separ": [428, 429, 475, 497, 762, 917, 1023], "static": [431, 455, 546, 606, 607, 773, 1023, 1024, 1025, 1048], "visibl": [431, 455], "replac": [432, 535, 778], "inlin": [432, 462, 595, 607], "guard": 432, "rule": [433, 472, 593, 596, 607, 695, 703, 740, 871], "span": 433, "stringif": [433, 1052], "token": 433, "address": [435, 804, 847, 870, 937, 991, 1150], "arbitrari": [438, 625, 1029, 1053], "see": [439, 864, 869, 870, 875, 876, 955, 956, 957, 959, 986, 989, 993, 995, 1074, 1138], "typedef": 443, "alia": 443, "singli": 446, "volatil": [448, 894], "lie": 448, "valid": 448, "handler": [448, 1004, 1005], "intrins": 449, "atom": [449, 759, 764, 831, 832, 836, 837, 852, 978], "builtin": 449, "align": 450, "unalign": 450, "pad": 450, "saniti": [452, 460, 474], "readabilti": 452, "shoot": 452, "offens": 452, "unobvi": 452, "ambigu": [452, 458, 695], "smell": 452, "know": 453, "size_t": 453, "discret": 454, "tradit": [454, 472, 1053], "approach": [454, 482, 483, 484], "wishlist": 454, "close": [454, 500, 745, 1001], "somewhat": 455, "contriv": 455, "hoorai": 455, "correct": [456, 603, 737], "non": [456, 539, 540, 541, 542, 543, 544, 545, 582, 602, 766, 772, 1171], "good": [457, 482, 483, 592, 607, 625, 694, 703, 712, 713, 740, 742], "old": [457, 607, 625, 690, 703, 712, 713, 742], "c99": 457, "explict": 458, "safeti": [458, 474], "scheme": 458, "artifici": [458, 1132], "valgrind": [459, 573], "action": [459, 1005], "optim": [461, 462, 463], "bound": [461, 462, 573, 989], "unnecessari": 462, "peephol": 462, "subexpress": 462, "elimin": [462, 750, 1100], "strength": 462, "reduct": 462, "fold": 462, "invari": 462, "unrol": 462, "tail": [462, 924], "cpu": [462, 870, 989, 995], "cach": [463, 484, 740], "multidimension": 463, "thrash": 463, "profil": [465, 466, 468, 469], "donald": 465, "knuth": 465, "toni": 465, "hoar": 465, "larri": 465, "wall": 465, "practic": 465, "brian": 465, "w": 465, "kernighan": 465, "rob": 465, "pike": 465, "gprof": 466, "flat": 466, "callgrind": 467, "analysi": 467, "per": [467, 801, 841, 1176], "kcachegrind": 467, "oprofil": 468, "much": [468, 483, 734, 1028], "wide": 468, "offlin": 468, "graphic": 468, "accomplish": 472, "disclaim": [472, 872], "principl": [472, 500], "yagni": 472, "uncl": 473, "bob": 473, "typic": [474, 871, 975, 991], "bookkeep": 474, "effort": 474, "spaghetti": 474, "concaten": [474, 1148], "input": [474, 875, 1033, 1136], "yyyi": 474, "mm": 474, "where": [474, 480, 869, 1007], "testabl": 474, "explicitli": [474, 733, 750], "categor": 474, "net": 474, "place": [474, 551, 596, 637, 860, 861, 1071], "overengin": [474, 607], "boilerpl": [475, 734, 829], "execut": [475, 481, 878, 1024, 1030, 1038, 1058, 1107, 1171, 1173], "consist": [475, 804], "paus": 477, "diagram": 477, "cmake_build_typ": 477, "k": [477, 1133], "printf": [477, 594], "popular": [477, 865], "find_packag": 478, "prefix": [480, 1029], "target": [480, 481, 483, 486, 487, 549, 967, 1008, 1186], "runpath": 480, "abi": 480, "blacklist": [482, 483], "flag": [482, 671, 819, 959, 1076], "libhello": 482, "bad": [482, 483, 740, 771, 802], "target_compile_definit": 483, "backlist": 483, "availablil": 483, "use_blacklist": 484, "normal": 485, "subdirectori": 486, "reorgan": 486, "i2c": [490, 937, 939], "subhierarchi": 490, "instanti": [490, 497, 646, 707, 766, 799], "adapt": [491, 497, 506, 511, 513, 520, 525, 753], "must": [491, 966], "adapte": 491, "asensor": 491, "real": [491, 599, 690, 751, 890], "measur": [491, 534, 765, 993, 995], "motiv": [492, 495, 511, 512, 608, 691, 694, 696, 705, 707, 732, 738, 853, 1035, 1045, 1051], "insert": [492, 558, 559, 642, 643, 646, 647, 648, 682, 752, 780, 781, 821], "bulk": 492, "6a": 492, "initializer_list": [492, 693, 695], "socialdb": 493, "filesystem": [494, 784, 1001], "thermomet": [494, 514, 515, 528, 529, 548], "aggreg": [495, 504, 694], "conret": 495, "realiz": 495, "situat": [495, 950], "constantsensor": 495, "decoratedconstantsensor": 495, "randomsensor": [495, 536], "decoratedrandomsensor": 495, "verifi": [495, 905, 939, 941, 1136], "hold": [495, 1049], "studi": [497, 738, 739, 1018], "heat": 497, "dbuslogg": 497, "dbusvaluestor": 497, "either": 497, "stop": [497, 748], "help": [497, 893, 925, 1159, 1166], "observ": [499, 527, 1035], "liskov": 500, "substitut": [500, 605], "segreg": 500, "invers": [500, 994], "proxi": [501, 511, 514, 515, 525, 528, 529], "foundat": 502, "hierarchi": [502, 615, 871, 1030], "hypothet": [502, 1050], "singleton": [503, 516, 517, 518, 530, 531, 532], "connector": 504, "uniniti": [512, 605], "flexibl": [516, 517, 530, 531], "strict": [517, 531], "inflex": [518, 532], "i2csensorfactori": 519, "concret": [519, 530, 531], "i2csensorfactory_vendor1": 519, "stub": [528, 840], "socialinsur": [530, 531], "oegk": [530, 531], "sv": [530, 531], "introduc": [533, 594, 740], "relationship": [533, 667, 668, 1136], "firstnam": 533, "lastnam": [533, 683, 685], "w1sensor": [533, 550], "answer": [533, 732], "try": [537, 615, 748, 1030], "ledstripedisplay_nopoli": 539, "cover": [539, 540, 541, 542, 543, 544, 545, 548], "hysteresis_nopoli": 540, "averagingsensor_nopoli": 541, "constantsensor_nopoli": 542, "mocksensor_nopoli": 543, "randomsensor_nopoli": 544, "mock": 545, "shape": [546, 893], "procedur": 546, "circl": 546, "area": [546, 612], "squar": 546, "massag": 547, "sub": 547, "notfound": 549, "find_is_const": 549, "isol": [549, 1140, 1176], "realiti": 549, "pc": 549, "greater": 553, "odd": 554, "overwrit": 558, "sunni": [559, 561, 564, 960, 964, 965, 966], "uniquifi": 566, "transcript": 568, "malloc": 573, "free": 573, "mismatch": [573, 950], "across": [576, 770, 772, 774, 776], "ownership": [581, 582, 583, 750, 878], "raii": [581, 582, 583, 761], "dealloc": 582, "naiv": [585, 606, 657, 849, 1004, 1034, 1149], "ol": [592, 739], "look": [592, 955, 956, 957], "distanc": [592, 611], "length": 592, "manual": [593, 596, 600, 753, 776, 777, 893, 953, 971, 974, 1035], "specifi": [594, 960], "otherwis": 594, "lifecycl": 597, "dragon": [600, 756], "memberwis": 600, "straighforward": 600, "correctli": 600, "underli": [601, 691], "mechan": 601, "just": 601, "pollut": 603, "hidden": [604, 915], "cannot": 605, "easili": 605, "odr": 607, "litt": 607, "defnit": 607, "ostream": [608, 609, 610, 611, 612], "cout": 608, "cuboid": 609, "upon": [609, 611, 612], "point3d": [609, 611], "surfac": 609, "volum": [609, 1021], "unari": [610, 611], "rectangl": [611, 612], "coordin": [611, 612], "absolut": [611, 784, 917, 1130], "height": 612, "catch": [615, 1030], "throw": [615, 766], "spirit": [625, 749, 750, 751], "pre": [627, 694], "destin": [627, 960], "back_insert_iter": 627, "binary_search": 630, "intellig": [630, 636, 1037, 1132], "find_if": [633, 683], "customiz": 633, "for_each": 634, "lower_bound": 636, "reverse_copi": [638, 657], "characterist": [640, 643], "modif": [643, 1023], "fill": [646, 1143], "definin": 647, "subscript": 648, "eras": 649, "multimap": 651, "deriv": [661, 662], "larger": [665, 1025, 1033], "substr": [670, 1077], "paint": 671, "american": 671, "onto": 671, "moodl": [672, 866, 880, 881, 906, 1013], "quiz": [672, 866, 880, 881, 906, 1013], "cin": 674, "n": 680, "year": 680, "transform": [681, 753, 781, 1033], "wrong": [684, 764, 960], "great": [689, 991], "around": [690, 718], "school": 690, "item": [690, 752, 780, 781, 782, 1028, 1034], "inevit": 690, "union": [690, 766], "consider": [690, 991], "uniform": 692, "implementor": 693, "direct": [693, 804], "inconsist": 694, "heap": 694, "refus": 694, "narrow": 694, "mess": [695, 1144], "realist": [695, 1031, 1164], "int": [695, 986], "nicolai": 695, "josutti": 695, "complain": 695, "said": 698, "guidelin": 698, "well": 698, "smartptr": 700, "lvalu": [703, 752], "wish": [703, 1043], "theori": 703, "Ones": 703, "sai": [705, 895], "decai": 705, "chosen": 707, "rescu": [707, 732, 754, 1009, 1029, 1050, 1155], "syntact": [707, 1029], "variat": [707, 739, 744, 833], "conceptless": [708, 709], "fulfil": 712, "has_siz": 712, "index_returns_doubl": 712, "func": 713, "ret": 716, "doubl": 716, "foreword": 718, "prototyp": 718, "examp": 718, "explain": 718, "drive": [718, 930], "anatomi": [718, 811], "resum": 718, "suspens": 718, "caller": 718, "co_yield": 718, "mimick": 718, "fibo": 719, "suspend": [724, 725, 726], "decis": [729, 989], "cleanli": 729, "care": 732, "handwritten": [734, 735], "proggi": 734, "morph": 734, "possibl": 735, "temporari": [735, 1028, 1164], "made": 735, "hard": [737, 914], "aris": 737, "gool": 739, "prevent": [739, 750], "accident": [739, 781], "dangl": 740, "easi": [740, 757], "constraint": 740, "dogmat": 740, "sigh": 740, "storag": [742, 982], "abbrevi": 742, "avail": [742, 792], "compat": 744, "unique_ptr": [746, 749, 750], "shared_ptr": [746, 749, 781], "handwrit": 748, "ctor": 748, "auto_ptr": 748, "mayb": 748, "uniqu": [749, 782], "But": [749, 772, 964], "juggl": 749, "make_shar": 749, "cyclic": 749, "chanc": 750, "leakag": 750, "keystrok": 750, "make_uniqu": 750, "acknowledg": 750, "prove": 750, "weak_ptr": [751, 781], "borrow": 751, "invalid": 751, "univers": 752, "dual": 752, "bag": [752, 780, 781, 782], "null": 753, "pointlessli": 753, "hardcod": [753, 797], "placehold": 753, "upsid": 754, "technic": 754, "downsid": 754, "joinabl": 757, "detach": [757, 976], "cornercas": 757, "recursive_mutex": 760, "timed_mutex": 760, "recursive_timed_mutex": 760, "lock": [761, 764, 825, 838], "unlock": [761, 838], "consid": 761, "acquisit": [761, 1117], "lock_guard": 761, "condition_vari": 762, "safe": [762, 1005], "predic": [762, 980], "concern": 762, "promis": 764, "chrono": [764, 765], "utterli": 764, "becom": [764, 1025], "readi": 764, "minim": 764, "pro": 764, "clock": 765, "sleep": [765, 831, 836, 837], "bad_variant_access": 766, "accessor": 766, "get_if": 766, "fundament": [766, 1054], "crtp": [768, 771, 773], "incomplet": [769, 1146], "bloat": 771, "string_view": 771, "unrel": 774, "visit": 777, "rel": [784, 917, 1038], "compon": 784, "creation": [784, 865, 976, 977], "create_directori": 784, "entri": 784, "classif": 784, "is_xxx": 784, "directory_entri": 784, "modern": [788, 789, 790, 1184], "slideshow": [789, 792, 794, 797, 799, 802, 804, 811, 813, 815, 817, 819, 821, 823, 825, 827, 829, 831, 836, 838, 841, 843, 847, 850, 853, 1001, 1005, 1073, 1160, 1167], "hook": 791, "necessari": 791, "ioctl": [791, 792, 794, 813, 846, 959], "vtabl": 792, "kernelspac": 792, "_io": [792, 813], "major": [796, 797], "minor": [796, 797], "space": [797, 847, 866, 869, 870, 991], "hair": 801, "pretti": 801, "wswitch": 801, "dma": [804, 805, 829], "physic": 804, "scatterlist": 804, "when": 806, "explod": 806, "loadabl": 811, "init": [811, 829, 871, 1179], "exit": [811, 940, 976, 986], "unload": 811, "raspi": [813, 814, 950], "legaci": [813, 1103], "api": [813, 843, 975, 994], "my_activate_gpio": 813, "servic": [815, 871, 1147], "routin": [815, 829], "reserv": 817, "kmalloc": [819, 820, 836], "doubli": [821, 822], "node": [821, 962], "empti": [821, 912, 1044, 1100], "consequ": 823, "rt": [825, 826], "mutual": [825, 838], "exclus": [825, 838], "registr": 827, "layer": 827, "util": [827, 932], "pci": [829, 830], "foremost": 829, "probe": 829, "bar": 829, "rasperri": 833, "crossdev": 833, "artifact": [833, 1133], "bootload": 833, "jjj": 834, "mainten": 835, "spinlock": [836, 838, 839], "spin_lock": 836, "irq": 836, "spin_lock_irqsav": 836, "spin_unlock_irqrestor": 836, "ah": [836, 1144], "bulletproof": 838, "dup": 840, "defer": [841, 852], "jiffi": 843, "wheel": [843, 1086], "get_one_ev": 846, "copy_to_us": 846, "noth": 849, "o_nonblock": 849, "wake": 850, "workqueu": [852, 853, 854], "did": 852, "destroi": [853, 1166], "gzip": 857, "tar": 859, "etiquett": 859, "Being": 859, "g1": 860, "lot": [860, 861], "precondit": [860, 861], "credenti": [860, 879], "backup": [860, 861, 895], "busi": 861, "ok": [864, 986], "serial": 864, "pseudo": 864, "partit": 864, "proc": 864, "authent": [868, 946], "prompt": 868, "verif": [868, 1119], "success": 868, "imperson": 868, "uid": [870, 889, 890], "parent": [871, 988], "child": 871, "subsystem": 872, "0": [872, 986, 1140, 1179], "stdout": [876, 926, 940, 962], "stderr": 876, "trick": [876, 1075], "teacher": 878, "constel": 878, "root": [878, 890], "octal": 878, "tune": [878, 993, 1139], "setuid": [889, 890], "passwd": [889, 909, 965, 1109], "sudo": 889, "password": [889, 1097], "chmod": [889, 1058], "toi": 889, "effect": [890, 1005, 1044], "ugli": 891, "sticki": 891, "umask": 892, "edit": 893, "tabul": 893, "filenam": 893, "bashrc": [894, 895], "cp": 895, "similar": 895, "its": [895, 1139], "pwd": 896, "cd": 896, "mkdir": [902, 912], "funni": 903, "dev": 908, "touch": 912, "rm": 912, "rmdir": 912, "mv": 916, "somewher": 916, "cut": [919, 1068], "durchsuchen": 921, "optionen": 921, "verkn\u00fcpfungen": 921, "grep": 922, "less": [925, 1026, 1050], "brushless": 930, "motor": 930, "speed": 930, "esc": 930, "fwd": 930, "rev": 930, "calibr": 930, "packet": 931, "vcan": 932, "frame": [933, 1148], "mcp2515": 934, "schemat": 934, "solder": 934, "spi": 934, "lm73": 937, "slave": [937, 939], "master": [937, 939], "enabl": [937, 939], "bcm2835": 937, "datasheet": 937, "connect": [937, 956, 1143], "i2cdetect": 937, "detect": 937, "hwmon": [937, 939], "monitor": [937, 939], "pca9685": 938, "puls": 938, "wire": [938, 939], "ds18b20": 939, "alter": 939, "w1": 939, "attach": 939, "pin": [939, 973], "ds2482": 939, "800": 939, "channel": 939, "announc": 939, "hotplug": 939, "lm": 939, "caveat": [939, 1140], "topologi": 939, "symptom": 939, "adjust": [942, 1019], "wear": 946, "admin": 946, "hat": 946, "scp": 949, "sshf": 950, "mount": 950, "logdata": 950, "unmount": 950, "fusermount": 950, "umount": 950, "helper": [951, 1150], "simplic": [955, 956, 957], "watch": 955, "strace": 955, "supervis": 955, "descriptor": [959, 962, 969], "filedescriptor": 959, "offset": [959, 969], "lseek": 959, "hole": 961, "o_creat": 963, "bogu": 963, "o_excl": 964, "alreadi": 964, "o_rdonli": 965, "even": [965, 966, 1092], "o_wronli": 966, "writeabl": 966, "implicitli": 966, "scatter": 969, "gather": 969, "retriev": 971, "wise": 972, "legal": 975, "pthread_join": 976, "synchron": [978, 1004], "win32": 980, "reset": 980, "trylock": 985, "islock": 985, "argc": 986, "char": 986, "argv": [986, 1060], "procf": 988, "pid": 988, "ppid": 988, "getpid": 988, "getppid": 988, "multitask": 989, "fair": [989, 993], "runnabl": [989, 995], "bare": 991, "metal": 991, "hm": 991, "awai": [991, 1126], "stabil": 991, "latenc": [993, 995], "nice": 993, "inexact": 993, "immedi": 993, "preempt_rt": 993, "polici": 994, "prioriti": 994, "runn": 994, "frequenc": 995, "scale": 995, "mysteri": 995, "remain": 995, "sysprog": [996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006], "mmap": 1000, "segment": 1000, "produc": [1000, 1034], "consum": 1000, "mq_open": 1001, "mq_send": 1001, "mq_receiv": 1001, "mq_close": 1001, "mq_unlink": 1001, "notif": 1001, "mq_notifi": 1001, "mqueue": 1001, "sem_open": 1001, "sem_wait": 1001, "sem_post": 1001, "sem_clos": 1001, "sem_unlink": 1001, "barebon": 1004, "alarm": 1004, "louder": 1004, "innoc": 1004, "sigalrm": 1004, "programmat": 1005, "mask": 1005, "pend": 1005, "sigset_t": 1005, "async": 1005, "seem": 1007, "nm": 1007, "agnost": 1008, "goodi": 1009, "nativ": [1010, 1015], "sysroot": [1010, 1019], "linaro": 1019, "defunct": 1019, "patienc": 1019, "against": [1019, 1024, 1050], "docker": 1021, "autoconf": 1021, "71": 1021, "zoom": 1023, "rememb": 1023, "reloc": 1024, "independ": 1024, "pic": 1024, "runtim": 1024, "versu": 1024, "def": 1026, "reach": 1026, "theoret": 1026, "nonloc": 1026, "hood": 1028, "monkeypatch": 1028, "print": [1028, 1053], "contextlib": 1028, "contextmanag": 1028, "involv": 1028, "prefixprint": 1028, "mind": 1029, "sugar": 1029, "functool": [1029, 1050], "rais": 1030, "regardless": 1030, "coverag": 1033, "form": 1038, "daemon": 1039, "mother": 1041, "acquir": 1041, "abc": 1043, "late": 1043, "abtract": 1043, "interrelationship": 1046, "salari": 1047, "introspect": 1047, "isinst": 1047, "issubclass": 1047, "classmethod": 1048, "staticmethod": 1048, "_make": 1049, "_asdict": 1049, "dunder": 1050, "compar": 1050, "incompat": 1050, "lotsa": 1050, "magic": 1050, "__gt__": 1050, "term": 1050, "__lt__": 1050, "total_ord": 1050, "them": 1050, "readonli": 1051, "repr": 1052, "__repr__": 1052, "suppli": 1053, "ultim": 1053, "guido": 1056, "van": 1056, "rossum": 1056, "hash": 1058, "bang": 1058, "she": 1058, "doze": 1058, "registri": 1058, "indent": 1059, "cosmet": 1060, "rudimentari": 1060, "python2": 1062, "unicod": 1062, "esoter": 1066, "delimit": 1075, "interv": 1083, "axi": 1085, "setuptool": 1086, "manifest": 1086, "publish": [1086, 1125, 1147], "usernam": 1097, "strategi": 1109, "revert": 1111, "justifi": 1112, "activ": 1118, "dictread": [1120, 1121, 1139], "cp1252": [1120, 1122], "reader": [1122, 1123, 1139], "nohead": 1122, "both": 1128, "interrel": 1129, "product": 1130, "david": 1131, "beazlei": 1131, "raymond": 1131, "hetting": 1131, "mean": 1133, "linear": [1134, 1136, 1137], "regress": [1134, 1136, 1137], "weather": 1135, "ndarrai": 1136, "plot": 1136, "splice": 1136, "mankind": 1138, "god": 1138, "insan": 1139, "scsv": 1139, "dbapi": [1140, 1142, 1143], "transact": 1140, "postgresql": 1142, "postgr": 1142, "cursor": 1143, "queri": 1143, "ascii": 1144, "iso": 1144, "latin": 1144, "8859": 1144, "lieb": 1144, "gr\u00fc\u00dfe": 1144, "j\u00f6rg": 1144, "\u795d\u597d": 1144, "utf": 1144, "decod": 1144, "broker": 1147, "payload": 1147, "append": 1148, "deprec": 1148, "bitmap": 1150, "neat": 1150, "iloc": [1152, 1153], "Then": 1152, "inplac": 1153, "loc": [1153, 1154], "hiccup": 1154, "inclus": 1154, "lowercas": 1155, "email": 1155, "normalized_email": 1155, "ing": 1155, "elementtre": 1156, "etre": 1156, "sax": 1156, "dom": 1156, "invoc": 1159, "subcommand": 1159, "upload": 1162, "pythonpath": 1164, "mark": 1164, "expect": [1164, 1173], "recogn": 1165, "meat": 1165, "freez": 1166, "recreat": 1166, "fatal": 1171, "failur": 1171, "assert_": 1171, "suit": 1171, "teardown": 1176, "organisatorisch": 1178, "buchung": 1178, "kursablauf": 1178, "kursgestaltung": 1178, "unterlagen": 1178, "grub": 1179, "97": 1179, "bauen": 1179, "prozess": 1179, "verschieden": 1179, "zielpublikum": [1180, 1182, 1183, 1188, 1190, 1195, 1196, 1202], "kursinhalt": [1180, 1182, 1183, 1188, 1190, 1191, 1195, 1196, 1197, 1198, 1200, 1201, 1202], "vorkenntniss": [1180, 1182, 1183, 1188, 1190, 1191, 1195, 1196, 1197, 1198, 1200, 1201, 1202], "three": 1184, "prior": 1186, "beispielen": 1190, "mutter": 1191, "aller": 1191, "woch": 1195, "svn": 1196, "stece": [82, 100, 127, 147, 148, 149, 150], "ss2024": [], "lehrveranstaltungsbeschreibung": 150, "umfang": 150, "lehrveranstaltung": 150, "inhaltlich": 150, "ziel": 150, "pr\u00fcfung": 150, "beurteilungsschema": 150, "bewertung": 150, "leistungen": 150, "bewertungsschl\u00fcssel": 150, "hilfsmittel": 150, "schriftlichen": 150, "pr\u00fcfungen": 150, "wiederholungsm\u00f6glichkeiten": 150, "anwesenheitsvorgab": 150, "zusatzinformationen": 150, "einzelnen": 150, "lehreinheiten": 150}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"Kontakt": [[0, "kontakt"]], "Navigation": [[0, "navigation"]], "Google Maps": [[0, "google-maps"]], "Google Streetview": [[0, "google-streetview"]], "Curriculum Vitae": [[1, "curriculum-vitae"]], "\u00dcber Mich": [[2, "uber-mich"]], "Projekte": [[3, "projekte"]], "Projekte aus selbstst\u00e4ndiger T\u00e4tigkeit": [[3, "projekte-aus-selbststandiger-tatigkeit"]], "Projekte aus nichtselbstst\u00e4ndiger T\u00e4tigkeit": [[3, "projekte-aus-nichtselbststandiger-tatigkeit"]], "Skills": [[4, "skills"], [167, "skills"]], "Angebot: In-House Schulungen": [[5, "angebot-in-house-schulungen"]], "Zu meiner Person": [[5, "zu-meiner-person"]], "Schwerpunke": [[5, "schwerpunke"]], "C/C++": [[5, "c-c"]], "Python": [[5, "python"], [99, "python"], [365, "python"], [370, "python"]], "Linux": [[5, "linux"], [83, "linux"], [185, "linux"], [929, "linux"]], "Schulungsstil": [[5, "schulungsstil"]], "Preise": [[5, "preise"]], "Course Material": [[6, "course-material"], [473, "course-material"], [1130, "course-material"]], "Einleitung": [[7, "Einleitung"], [223, "Einleitung"]], "Datatypes": [[7, "Datatypes"], [220, "Datatypes"], [223, "Datatypes"], [226, "Datatypes"], [239, "Datatypes"], [242, "Datatypes"], [250, "Datatypes"], [252, "Datatypes"], [258, "Datatypes"], [262, "Datatypes"], [265, "Datatypes"], [268, "Datatypes"], [282, "datatypes"], [289, "datatypes"], [292, "datatypes"], [300, "Datatypes"], [302, "datatypes"], [303, "datatypes"], [304, "Datatypes"], [308, "datatypes"], [309, "datatypes"], [326, "Datatypes"], [330, "datatypes"], [331, "datatypes"], [336, "datatypes"], [337, "datatypes"], [338, "Datatypes"], [342, "datatypes"], [343, "datatypes"], [346, "datatypes"], [347, "datatypes"], [348, "Datatypes"], [360, "Datatypes"], [1062, "datatypes"]], "Numbers": [[7, "Numbers"], [223, "Numbers"], [226, "Numbers"], [250, "Numbers"], [360, "Numbers"], [1062, "numbers"]], "Integer Numbers": [[7, "Integer-Numbers"], [223, "Integer-Numbers"], [1062, "integer-numbers"]], "Strings": [[7, "Strings"], [220, "Strings"], [223, "Strings"], [226, "Strings"], [235, "Strings"], [239, "Strings"], [239, "id3"], [242, "Strings"], [250, "Strings"], [262, "Strings"], [280, "Strings"], [283, "Strings"], [283, "id1"], [283, "id3"], [290, "Strings"], [326, "Strings"], [360, "Strings"]], "Compound Datatypes": [[7, "Compound-Datatypes"], [223, "Compound-Datatypes"], [235, "Compound-Datatypes"], [239, "Compound-Datatypes"], [242, "Compound-Datatypes"], [245, "Compound-Datatypes"], [250, "Compound-Datatypes"], [252, "Compound-Datatypes"], [258, "Compound-Datatypes"], [262, "Compound-Datatypes"], [265, "Compound-Datatypes"], [268, "Compound-Datatypes"], [280, "Compound-Datatypes"], [304, "Compound-Datatypes"], [310, "Compound-Datatypes"], [322, "Compound-Datatypes"], [326, "Compound-Datatypes"], [338, "Compound-Datatypes"], [344, "Compound-Datatypes"], [348, "Compound-Datatypes"], [1063, "compound-datatypes"]], "Lists (Array in JavaScript, std::vector<> in C++, Array in Java)": [[7, "Lists-(Array-in-JavaScript,-std::vector<>-in-C++,-Array-in-Java)"], [223, "Lists-(Array-in-JavaScript,-std::vector<>-in-C++,-Array-in-Java)"]], "Dictionary (Key/Value Map in Javascript)": [[7, "Dictionary-(Key/Value-Map-in-Javascript)"], [223, "Dictionary-(Key/Value-Map-in-Javascript)"]], "Set: mathematische Mengen": [[7, "Set:-mathematische-Mengen"], [223, "Set:-mathematische-Mengen"]], "while": [[7, "while"], [223, "while"], [242, "while"], [258, "while"], [290, "while"], [344, "while"]], "Functions": [[7, "Functions"], [43, "functions"], [223, "Functions"], [226, "Functions"], [239, "Functions"], [250, "Functions"], [252, "Functions"], [258, "Functions"], [262, "Functions"], [267, "functions"], [283, "Functions"], [290, "Functions"], [304, "Functions"], [320, "functions"], [324, "functions"], [330, "functions"], [331, "functions"], [332, "Functions"], [336, "functions"], [337, "functions"], [338, "Functions"], [342, "functions"], [343, "functions"], [344, "Functions"], [346, "functions"], [347, "functions"], [348, "Functions"], [398, "functions"], [398, "id1"], [1074, "functions"]], "Python Basics (2021-xx-xx - 2021-yy-yy)": [[8, "python-basics-2021-xx-xx-2021-yy-yy"]], "Training Information": [[8, null], [206, null], [207, null], [209, null], [210, null], [211, null], [212, null], [214, null], [216, null], [217, null], [221, null], [224, null], [227, null], [230, null], [231, null], [232, null], [233, null], [237, null], [240, null], [249, null], [253, null], [256, null], [259, null], [261, null], [264, null], [267, null], [270, null], [279, null], [282, null], [289, null], [292, null]], "\u00dcberblick": [[8, "uberblick"], [214, "uberblick"], [224, "uberblick"], [233, "uberblick"], [249, "uberblick"], [261, "uberblick"]], "Log": [[8, "log"], [154, "log"], [206, "log"], [207, "log"], [210, "log"], [211, "log"], [219, "log"], [221, "log"], [222, "log"], [224, "log"], [227, "log"], [231, "log"], [233, "log"], [237, "log"], [240, "log"], [249, "log"], [261, "log"], [270, "log"]], "Tag 1": [[8, "tag-1"], [197, "tag-1"], [216, "tag-1"], [224, "tag-1"], [227, "tag-1"], [233, "tag-1"], [249, "tag-1"], [261, "tag-1"]], "Tag 2": [[8, "tag-2"], [197, "tag-2"], [216, "tag-2"], [224, "tag-2"], [227, "tag-2"], [233, "tag-2"], [249, "tag-2"], [261, "tag-2"]], "Live-Hacking (Jupyter Notebook)": [[8, "live-hacking-jupyter-notebook"], [214, "live-hacking-jupyter-notebook"], [224, "live-hacking-jupyter-notebook"], [227, "live-hacking-jupyter-notebook"], [237, "live-hacking-jupyter-notebook"]], "Links": [[8, "links"], [39, "links"], [154, "links"], [191, "Links"], [202, "links"], [207, "links"], [209, "links"], [211, "links"], [214, "links"], [221, "links"], [222, "links"], [224, "links"], [233, "links"], [237, "links"], [240, "links"], [243, "links"], [249, "links"], [256, "links"], [267, "links"], [270, "links"], [303, "links"], [309, "links"], [370, "links"], [448, "links"], [697, "links"], [718, "links"], [736, "links"], [747, "links"], [872, "links"], [893, "links"], [932, null], [939, "links"], [1055, null], [1085, null], [1086, "links"], [1147, "links"], [1149, "links"], [1150, "links"], [1152, "links"], [1153, "links"], [1154, "links"], [1155, "links"], [1167, "links"], [810, "links"]], "Programmierung Grundlagen (Jupyter Notebook)": [[9, "programmierung-grundlagen-jupyter-notebook"], [215, "programmierung-grundlagen-jupyter-notebook"], [225, "programmierung-grundlagen-jupyter-notebook"], [251, "programmierung-grundlagen-jupyter-notebook"], [263, "programmierung-grundlagen-jupyter-notebook"]], "Details": [[10, "details"], [382, "details"], [82, "details"]], "Course List": [[11, "course-list"]], "Contents": [[11, null], [24, null], [165, null], [167, null], [169, null], [170, null], [171, null], [172, null], [173, null], [174, null], [175, null], [176, null], [185, null], [194, null], [198, "contents"], [199, null], [471, "contents"], [573, null], [576, null], [582, null], [585, null], [673, "id1"], [862, "id1"], [882, "id1"], [901, "id1"], [907, "id1"], [910, "id1"], [927, "id1"], [935, "id1"], [936, "id1"], [943, "id1"], [952, "id1"], [968, "id1"], [970, "id1"], [972, "id1"], [987, "id1"], [997, null], [1000, null], [1014, "id1"], [1034, null], [1089, "id1"], [1090, "id1"], [1094, "id1"], [1103, "id1"], [1117, "id1"], [1124, "id1"], [1171, null], [1173, null], [1176, null], [1184, "id2"], [1187, "contents"]], "Programmierung Grundlagen, anhand von Python (12. und 13.4.2021)": [[11, "programmierung-grundlagen-anhand-von-python-12-und-13-4-2021"], [383, "programmierung-grundlagen-anhand-von-python-12-und-13-4-2021"]], "Templates for Course Descriptions": [[12, "templates-for-course-descriptions"]], "Sidebar: Course Metadata": [[12, "sidebar-course-metadata"]], "About This Site": [[13, "about-this-site"]], "License: GPLv3": [[13, "license-gplv3"]], "Github": [[13, "github"], [365, "github"]], "Sphinx": [[13, "sphinx"], [70, "sphinx"]], "Installation Instructions": [[13, "installation-instructions"]], "pip and venv": [[13, null]], "Work in Progress": [[13, "work-in-progress"], [153, "work-in-progress"]], "More": [[13, "more"], [771, "more"]], "OpenTraining": [[14, "opentraining"]], "Draft Topics": [[15, "draft-topics"]], "Miscellaneous": [[16, "miscellaneous"], [152, "miscellaneous"], [163, "miscellaneous"], [190, "miscellaneous"], [210, "miscellaneous"], [274, "miscellaneous"], [275, "miscellaneous"], [295, "miscellaneous"], [309, "miscellaneous"], [320, "miscellaneous"], [321, "miscellaneous"], [324, "miscellaneous"], [331, "miscellaneous"], [334, "miscellaneous"], [568, "miscellaneous"], [568, "id1"], [704, "miscellaneous"], [969, "miscellaneous"], [982, "miscellaneous"], [767, "miscellaneous"]], "S5 Integration": [[17, "s5-integration"]], "Work in Progress: S5 Web Slides": [[17, "work-in-progress-s5-web-slides"]], "Implementation Notes": [[17, "implementation-notes"], [351, "implementation-notes"]], "Todo": [[17, "id1"], [167, null], [167, null], [167, null], [167, null], [167, null], [167, null], [167, null], [167, null], [167, null], [167, null], [167, null], [167, null], [167, null], [167, null], [167, null], [167, null], [167, null], [167, null], [167, null], [196, "id1"], [199, "id2"], [199, "id3"], [473, "todo"], [569, "id1"], [572, "id1"], [575, "id1"], [578, "id1"], [581, "id1"], [584, "id1"], [587, "id1"], [790, "id1"], [794, "id1"], [802, "id2"], [996, "id1"], [999, "id1"], [1003, "id1"], [1170, "id1"], [1175, "id1"]], "S5 Slide Tests": [[18, "s5-slide-tests"]], "Level 1 Heading": [[19, "level-1-heading"]], "Level 2 Heading": [[19, "level-2-heading"]], "Level 2 Heading, Image": [[19, "level-2-heading-image"]], "Screencasts": [[20, "screencasts"]], "Topics to be Written": [[21, "topics-to-be-written"]], "New Topics to Write": [[21, "new-topics-to-write"]], "Netidee F\u00f6rderantrag": [[22, "netidee-forderantrag"]], "Netidee F\u00f6rderantrag: OpenTraining": [[23, "netidee-forderantrag-opentraining"]], "1. DATEN ANTRAGSTELLER_IN": [[23, "daten-antragsteller-in"]], "2. ALLGEMEINES": [[23, "allgemeines"]], "2.1 Projektname": [[23, "projektname"]], "2.2 Projekt-Untertitel": [[23, "projekt-untertitel"]], "2.3 Allgemeinverst\u00e4ndliche KURZbeschreibung des Projektes": [[23, "allgemeinverstandliche-kurzbeschreibung-des-projektes"]], "2.4 Anschlussf\u00f6rderung": [[23, "anschlussforderung"]], "3. DIE BESONDERE BEDEUTUNG IHRES PROJEKTES F\u00dcR DAS INTERNET (DIE INTERNETNUTZUNG) IN \u00d6STERREICH?": [[23, "die-besondere-bedeutung-ihres-projektes-fur-das-internet-die-internetnutzung-in-osterreich"]], "4. ZIELGRUPPE UND PROJEKTZIEL": [[23, "zielgruppe-und-projektziel"]], "5. L\u00d6SUNG": [[23, "losung"]], "5.1 Beschreibung der Probleml\u00f6sung": [[23, "beschreibung-der-problemlosung"]], "5.2 Wesentliche Elemente eines nachhaltigen Impact NACH netidee Projektende": [[23, "wesentliche-elemente-eines-nachhaltigen-impact-nach-netidee-projektende"]], "6. UMFELDANALYSE": [[23, "umfeldanalyse"]], "6.1 Was ist der Stand der Technik / Methode / des Wissens?": [[23, "was-ist-der-stand-der-technik-methode-des-wissens"]], "6.2 Welche andere L\u00f6sungen/Vorhaben zu den genannten Problemen gibt es schon?": [[23, "welche-andere-losungen-vorhaben-zu-den-genannten-problemen-gibt-es-schon"]], "7. ALLEINSTELLUNGSMERKMAL": [[23, "alleinstellungsmerkmal"]], "8. PROJEKTERGEBNISSE": [[23, "projektergebnisse"]], "8.1 Liste der Projektergebnisse": [[23, "liste-der-projektergebnisse"]], "8.2 Erforderliche Lizenzen Dritter": [[23, "erforderliche-lizenzen-dritter"]], "9. ERFOLGREICHER PROJEKTABSCHLUSS": [[23, "erfolgreicher-projektabschluss"]], "9.1 Ihre sonstigen Aktivit\u00e4ten im Projektbereich": [[23, "ihre-sonstigen-aktivitaten-im-projektbereich"]], "9.2 Angaben zur fachlichen Eignung der MitarbeiterInnen im Projektkernteam": [[23, "angaben-zur-fachlichen-eignung-der-mitarbeiterinnen-im-projektkernteam"]], "9.3 Erfahrung des/der vorgesehenen ProjektleiterIn": [[23, "erfahrung-des-der-vorgesehenen-projektleiterin"]], "9.4 Link zum maximal 2-min\u00fctigen Video des Projektkernteams": [[23, "link-zum-maximal-2-minutigen-video-des-projektkernteams"]], "9.5 Risiken": [[23, "risiken"]], "9.6 Erfolgskriterien am netidee-Projektende": [[23, "erfolgskriterien-am-netidee-projektende"]], "9.7 Angestrebter Impact 3 Jahre nach netidee-Projektende": [[23, "angestrebter-impact-3-jahre-nach-netidee-projektende"]], "10. UMSETZUNG (EINJ\u00c4HRIGES NETIDEE PROJEKT)": [[23, "umsetzung-einjahriges-netidee-projekt"]], "10.1 Wichtige Partner_innen": [[23, "wichtige-partner-innen"]], "10.2 Arbeitsschwerpunkte": [[23, "arbeitsschwerpunkte"]], "10.3 Wesentliche Ressourcen": [[23, "wesentliche-ressourcen"]], "10.4 Nutzer_innen-Kommunikationskan\u00e4le": [[23, "nutzer-innen-kommunikationskanale"]], "11. PROJEKTTERMINE": [[23, "projekttermine"]], "11.1 Termine Projektstart - Projektende": [[23, "termine-projektstart-projektende"]], "Projektstart": [[23, "projektstart"]], "12. KOSTEN UND FINANZIERUNG": [[23, "kosten-und-finanzierung"]], "12.1 Projektkosten": [[23, "projektkosten"]], "Personalkosten": [[23, "personalkosten"]], "Sonstige Kosten": [[23, "sonstige-kosten"]], "Gesamtkosten in \u20ac": [[23, "gesamtkosten-in"]], "12.2 Wir beantragen folgende netidee-F\u00f6rderung": [[23, "wir-beantragen-folgende-netidee-forderung"]], "13.3 Die restlichen Kosten werden finanziert durch": [[23, "die-restlichen-kosten-werden-finanziert-durch"]], "13. SONDERPREIS": [[23, "sonderpreis"]], "14. ERG\u00c4NZENDE ANGABEN": [[23, "erganzende-angaben"]], "14.1 Transparenz Mehrfachantr\u00e4ge": [[23, "transparenz-mehrfachantrage"]], "14.2 Nutzung der WhatAVenture-Plattform": [[23, "nutzung-der-whataventure-plattform"]], "14.3 Das eingereichte Projekt ist Teil einer schulischen Verpflichtung (z.B. HTL Diplomarbeit)": [[23, "das-eingereichte-projekt-ist-teil-einer-schulischen-verpflichtung-z-b-htl-diplomarbeit"]], "14.4 Wie haben Sie von der netidee erfahren? (Mehrfachnennungen m\u00f6glich)": [[23, "wie-haben-sie-von-der-netidee-erfahren-mehrfachnennungen-moglich"]], "16. DATENSCHUTZ": [[23, "datenschutz"]], "Video Screenplay": [[24, "video-screenplay"]], "The Problem And Me": [[24, "the-problem-and-me"]], "Open Source Training Material": [[24, "open-source-training-material"]], "Walk-Through": [[24, "walk-through"]], "Use Case: Custom Training, Subtract Known": [[25, "use-case-custom-training-subtract-known"]], "Use Case: Calculate Minimum Training Duration": [[26, "use-case-calculate-minimum-training-duration"]], "Use Cases": [[27, "use-cases"]], "Trainer": [[27, "trainer"]], "Editor": [[27, "editor"]], "End User (Training Audience)": [[27, "end-user-training-audience"]], "Use Case: Use Training Material From Other Sites": [[28, "use-case-use-training-material-from-other-sites"]], "Use Case: Menu to Choose From": [[29, "use-case-menu-to-choose-from"]], "Use Case: Slide Show Material as Plain-Text Files": [[30, "use-case-slide-show-material-as-plain-text-files"]], "Sending A V4L Camera Device Output Over SSH": [[31, "sending-a-v4l-camera-device-output-over-ssh"]], "Capture Video To File": [[31, "capture-video-to-file"]], "Play Video From Remote System, Using SSH": [[31, "play-video-from-remote-system-using-ssh"]], "Emoji Codes (sphinxemoji)": [[32, "emoji-codes-sphinxemoji"]], "Setup": [[32, "setup"], [282, "setup"], [289, "setup"], [292, "setup"], [302, "setup"], [303, "setup"], [307, "setup"], [308, "setup"], [309, "setup"], [330, "setup"], [331, "setup"], [336, "setup"], [337, "setup"], [342, "setup"], [346, "setup"], [347, "setup"], [930, "setup"], [1055, "setup"], [1166, "setup"]], "Most Used Here In This Site": [[32, "most-used-here-in-this-site"]], "All Codes": [[32, "all-codes"]], "Recipes": [[33, "recipes"]], "isoamsa.txt: Added Mathematical Symbols: Arrows": [[34, "isoamsa-txt-added-mathematical-symbols-arrows"]], "isoamsr.txt: Added Mathematical Symbols: Relations": [[35, "isoamsr-txt-added-mathematical-symbols-relations"]], "isonum.txt: Added Mathematical Symbols: Binary Operators": [[36, "isonum-txt-added-mathematical-symbols-binary-operators"]], "Layout Test Page": [[37, "layout-test-page"]], "Admonitions": [[37, "admonitions"]], "Admonition": [[37, "admonition"]], "This is an .. admonition::": [[37, null]], "Tip": [[37, "tip"]], "Note": [[37, "note"]], "Hint": [[37, "hint"]], "Important": [[37, "important"]], "Attention": [[37, "attention"]], "Caution": [[37, "caution"]], "Error": [[37, "error"]], "Danger": [[37, "danger"]], "Sidebar": [[37, "sidebar"]], "Blech Sidebar Title Blah": [[37, null]], "Sidebar \u201cKursdaten\u201d": [[37, "sidebar-kursdaten"]], "Kursdaten": [[37, null], [1180, null], [1181, null], [1182, null], [1183, null], [1188, null], [1190, null], [1191, null], [1195, null], [1196, null], [1197, null], [1198, null], [1200, null], [1201, null], [1202, null]], "Local Content": [[37, "local-content"]], "Local Heading 1": [[37, "local-heading-1"], [37, "id3"]], "Local Heading 1.1": [[37, "local-heading-1-1"], [37, "id4"]], "Local Heading 1.2": [[37, "local-heading-1-2"], [37, "id5"]], "Local Heading 2": [[37, "local-heading-2"], [37, "id6"]], "Sidebar with Local Content": [[37, "sidebar-with-local-content"]], "Bleh Content Blah": [[37, null]], "To Do": [[37, "to-do"]], "mmlalias.txt: MathML aliases for entities from other sets": [[38, "mmlalias-txt-mathml-aliases-for-entities-from-other-sets"]], "Most used": [[38, "id1"]], "All": [[38, "id2"]], "reStructuredText Cheat Sheet": [[39, "restructuredtext-cheat-sheet"]], "Further Information": [[39, "further-information"], [155, "further-information"], [230, "further-information"], [231, "further-information"], [253, "further-information"], [356, "further-information"], [365, "further-information"], [752, "further-information"]], "Local Documents": [[39, "local-documents"]], "External Links": [[39, "external-links"]], "Section References": [[39, "section-references"]], "Section That We Refer To": [[39, "section-that-we-refer-to"]], "Another Section Contains a Link To The Referred Section Above": [[39, "another-section-contains-a-link-to-the-referred-section-above"]], "Footnotes": [[39, "footnotes"]], "Sphinxish": [[40, "sphinxish"]], "Jupyter Notebooks": [[40, "jupyter-notebooks"]], "Running Sphinx From Source": [[40, "running-sphinx-from-source"]], "Seminar on \u201cClean Code\u201d (2022-04-13)": [[41, "seminar-on-clean-code-2022-04-13"]], "Seminar Agenda and Timeline": [[41, "seminar-agenda-and-timeline"]], "Live Hacking Before (Formal) Unit Testing": [[42, "live-hacking-before-formal-unit-testing"]], "Initial Structure": [[42, "initial-structure"]], "Snippets": [[42, null], [42, null], [42, null], [42, null], [42, null], [42, null], [44, null], [44, null], [50, null], [50, null]], "User": [[42, "user"]], "UserDB": [[42, "userdb"]], "bin/userdb-write-binaryfile.cpp": [[42, "bin-userdb-write-binaryfile-cpp"]], "Extend UserDB To Write": [[42, "extend-userdb-to-write"]], "Extend UserDB To Read From File, And Iterate": [[42, "extend-userdb-to-read-from-file-and-iterate"]], "Bug: Use \u201cFaschingbauer\u201d As Last Name": [[42, "bug-use-faschingbauer-as-last-name"]], "Wrap Up: What Do We Have?": [[42, "wrap-up-what-do-we-have"]], "Clean Code: Messages From The Book": [[43, "clean-code-messages-from-the-book"]], "Survey": [[43, null], [472, null]], "Names": [[43, "names"]], "Comments": [[43, "comments"]], "Formatting": [[43, "formatting"], [338, "Formatting"]], "Objects and Data Structures": [[43, "objects-and-data-structures"]], "Error Handling": [[43, "error-handling"], [951, "error-handling"]], "Boundaries": [[43, "boundaries"]], "Unit Tests": [[43, "unit-tests"], [549, "unit-tests"]], "Classes": [[43, "classes"], [229, "Classes"], [314, "classes"]], "Live Hacking: Switch To googletest": [[44, "live-hacking-switch-to-googletest"]], "Git Submodule": [[44, "git-submodule"]], "Establish Tests: Demo": [[44, "establish-tests-demo"]], "Straightforward main() Conversion": [[44, "straightforward-main-conversion"]], "Fix Shortcomings": [[44, "fix-shortcomings"]], "Is Software A Craft? Software Is A Craft!": [[45, "is-software-a-craft-software-is-a-craft"]], "09:00-09:15 Introductory Words": [[45, "introductory-words"]], "09:15-10:00 Software Engineering: A Discipline? (What Have We Established?)": [[45, "software-engineering-a-discipline-what-have-we-established"]], "10:00-10:15 Coffee Break": [[45, "coffee-break"]], "10:15-11:00 Establishing \u201cThe Project\u201d (Live Hacking, Slides)": [[45, "establishing-the-project-live-hacking-slides"]], "11:00-12:00 Enter Unit Testing Frameworks": [[45, "enter-unit-testing-frameworks"]], "12:00-13:00 Lunch Break": [[45, "lunch-break"]], "13:00-14:00 Cornerstones From The \u201cClean Code\u201d Book": [[45, "cornerstones-from-the-clean-code-book"]], "14:00-14:45 Keeping Code Clean In The Small": [[45, "keeping-code-clean-in-the-small"]], "14:45-15:00 Coffee Break": [[45, "id1"]], "15:00-23:59 \u201cExtreme Programming\u201d Session": [[45, "extreme-programming-session"]], "UserDB::find() Crashes If User Not Found": [[46, "userdb-find-crashes-if-user-not-found"]], "State": [[46, "state"]], "Bugs": [[47, "bugs"], [53, "bugs"]], "Existing Files Are Overwritten": [[48, "existing-files-are-overwritten"]], "UserDB::read(): What If Done Twice?": [[49, "userdb-read-what-if-done-twice"]], "UserDB: Alternative Output Format - CSV": [[50, "userdb-alternative-output-format-csv"]], "Write CSV: Test": [[50, "write-csv-test"]], "Write CSV: Frontend Program": [[50, "write-csv-frontend-program"], [50, "id1"]], "Read CSV: Test": [[50, "read-csv-test"]], "Features": [[51, "features"]], "Search By Other Indexes": [[52, "search-by-other-indexes"]], "Backlog: What Needs To Change, Or We Will All Die": [[53, "backlog-what-needs-to-change-or-we-will-all-die"]], "Refactoring After Featuritis": [[53, "refactoring-after-featuritis"]], "BackingStore Has Too Many Responsibilities \u27f6 Interface": [[54, "backingstore-has-too-many-responsibilities-longrightarrow-interface"]], "UserDB Has Too Many Responsibilities \u27f6 BackingStore": [[55, "userdb-has-too-many-responsibilities-longrightarrow-backingstore"]], "BackingStore": [[55, "backingstore"]], "Refactoring": [[56, "refactoring"], [550, "refactoring"], [841, "refactoring"]], "Load From BackingStore in Constructor": [[57, "load-from-backingstore-in-constructor"]], "UserDB::{read,write}(): bool, Really?": [[58, "userdb-read-write-bool-really"]], "Pointless Blinking With Python, asyncio, and libgpiod (and a Raspberry Pi of Course)": [[59, "pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"]], "Installation Notes": [[60, "installation-notes"]], "libgpiod": [[60, "libgpiod"]], "Fedora: Prepare Tarballs": [[60, "fedora-prepare-tarballs"]], "On The Pi: Build And Install": [[60, "on-the-pi-build-and-install"]], "Submission: Pointless Blinking With Python, asyncio, and libgpiod (and a Raspberry Pi of Course)": [[61, "submission-pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"]], "Biography": [[61, "biography"], [63, "biography"], [65, "biography"]], "Abstract": [[61, "abstract"], [63, "abstract"], [65, "abstract"]], "Description": [[61, "description"], [63, "description"], [65, "description"], [503, "description"], [655, "description"], [671, "description"], [674, "description"], [676, "description"], [677, "description"], [678, "description"], [679, "description"], [680, "description"], [681, "description"], [682, "description"], [683, "description"], [685, "description"], [686, "description"]], "Screenplay: Pointless Blinking With Python, asyncio, and libgpiod (and a Raspberry Pi of Course)": [[62, "screenplay-pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"]], "Setup Before Presentation": [[62, "setup-before-presentation"]], "Starting Point": [[62, "starting-point"], [700, "starting-point"]], "Greeting": [[62, "greeting"]], "Multiple Background Threads": [[62, "multiple-background-threads"]], "Enter asyncio": [[62, "enter-asyncio"]], "Character Device Based GPIO": [[62, "character-device-based-gpio"]], "GPIO Device": [[62, "gpio-device"]], "Most Basic Feature: Setting GPIO Values": [[62, "most-basic-feature-setting-gpio-values"]], "Entire Matrix On/Off": [[62, "entire-matrix-on-off"]], "Bringing All Together": [[62, "bringing-all-together"]], "Modularize": [[62, "modularize"]], "Play A Bit: Blink Entire Rows": [[62, "play-a-bit-blink-entire-rows"]], "Coroutines?": [[62, "coroutines"]], "Not Enough: sequence()": [[62, "not-enough-sequence"]], "Looping: forever()": [[62, "looping-forever"]], "A Stripped-Down Program (\u27f6 Factory)": [[62, "a-stripped-down-program-longrightarrow-factory"]], "Turn blink() Into A Factory": [[62, "turn-blink-into-a-factory"]], "Anti-Clumsy Decorator: blink() Wrapper": [[62, "anti-clumsy-decorator-blink-wrapper"]], "@program, Finally": [[62, "program-finally"]], "Playground: cycle()": [[62, "playground-cycle"]], "Fast Forward: any(), And Cancellation": [[62, "fast-forward-any-and-cancellation"]], "Playground: on()": [[62, "playground-on"]], "Goodbye": [[62, "goodbye"]], "GLT 2023 Submission: Pointless Blinking With Python, asyncio, and libgpiod (and a Raspberry Pi of Course)": [[63, "glt-2023-submission-pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"]], "Pointless Blinking: Evolution": [[64, "pointless-blinking-evolution"]], "GLT 2024 Submission: Pointless Blinking: Evolution": [[65, "glt-2024-submission-pointless-blinking-evolution"]], "Talk Sketch: Pointless Blinking: Evolution": [[66, "talk-sketch-pointless-blinking-evolution"]], "gpiod": [[66, "gpiod"]], "asyncio": [[66, "asyncio"]], "textual": [[66, "textual"]], "Pointless Blinking": [[67, "pointless-blinking"]], "Hochk\u00f6nig": [[68, "hochkonig"]], "K\u00f6nigsjodler (Klettersteig)": [[68, "konigsjodler-klettersteig"]], "Tour: Werfen - Ostpreussenh\u00fctte - Matrashaus - Werfen": [[68, "tour-werfen-ostpreussenhutte-matrashaus-werfen"]], "Blog": [[69, "blog"], [167, "blog"]], "Articles": [[69, "articles"]], "In the Works": [[69, "in-the-works"]], "Not Yet in the Works": [[69, "not-yet-in-the-works"]], "Revisit Existing Posts": [[69, "revisit-existing-posts"]], "pending_xref": [[70, "pending-xref"]], "C++": [[71, "c"], [114, "c"], [115, "c"], [167, "c"], [687, "c"]], "C++: Building with CMake": [[72, "c-building-with-cmake"]], "C++: Interfaces": [[73, "c-interfaces"]], "C++: OO Basics": [[74, "c-oo-basics"]], "C++: Unit Testing": [[75, "c-unit-testing"]], "Graph": [[76, "graph"], [673, "graph"], [834, "graph"], [1089, "graph"], [1090, "graph"], [1094, "graph"], [1103, "graph"], [1117, "graph"], [1124, "graph"]], "Embedded Computing 1": [[77, "embedded-computing-1"], [82, "embedded-computing-1"]], "Current Curriculum": [[77, "current-curriculum"], [78, "current-curriculum"]], "Topics": [[77, "topics"], [78, "topics"], [102, "topics"], [103, "topics"], [105, "topics"], [106, "topics"], [107, "topics"], [108, "topics"], [166, "topics"], [202, "topics"], [202, "id2"], [230, "topics"], [267, "topics"], [270, null], [369, "topics"], [373, "topics"], [470, "topics"], [598, "topics"], [635, "topics"], [641, "topics"], [645, "topics"], [653, "topics"], [658, "topics"], [663, "topics"], [687, "topics"], [688, "topics"], [692, "topics"], [699, "topics"], [706, "topics"], [717, "topics"], [730, "topics"], [731, "topics"], [741, "topics"], [746, "topics"], [779, "topics"], [783, "topics"], [785, "topics"], [787, "topics"], [945, "topics"], [963, null], [965, null], [965, null], [1011, "topics"], [1017, "topics"], [1018, "topics"], [1038, null], [1046, "topics"], [1141, "topics"], [1151, "topics"], [1163, "topics"], [403, "topics"], [418, "topics"], [427, "topics"], [434, "topics"], [440, "topics"], [444, "topics"], [447, "topics"], [451, "topics"], [460, "topics"], [464, "topics"], [469, "topics"], [590, "topics"], [613, "topics"], [616, "topics"], [619, "topics"], [660, "topics"], [669, "topics"], [755, "topics"], [763, "topics"], [767, "topics"], [984, "topics"], [990, "topics"], [1169, "topics"]], "Dependency Graph": [[77, "dependency-graph"], [78, "dependency-graph"]], "Embedded Computing 2": [[78, "embedded-computing-2"], [82, "embedded-computing-2"]], "EX: Race Conditions": [[79, "ex-race-conditions"]], "EX: Avoiding Race Condition": [[80, "ex-avoiding-race-condition"]], "Goals": [[80, "goals"], [86, "goals"], [87, "goals"], [88, "goals"], [89, "goals"], [91, "goals"], [92, "goals"], [93, "goals"], [95, "goals"]], "Outcome": [[80, "outcome"], [86, "outcome"], [87, "outcome"], [88, "outcome"], [89, "outcome"], [209, "outcome"]], "Git Introduction": [[81, "git-introduction"]], "Introduction to Linux and Unix": [[84, "introduction-to-linux-and-unix"]], "Linux Hardware Device Management": [[85, "linux-hardware-device-management"]], "EX: Averaging Sensor": [[86, "ex-averaging-sensor"]], "EX: Averaging Sensor (parallel)": [[87, "ex-averaging-sensor-parallel"]], "EX: LED Temperature Display": [[88, "ex-led-temperature-display"]], "Hardware": [[88, "hardware"], [89, "hardware"]], "EX: Temperature Sensors": [[89, "ex-temperature-sensors"], [96, "ex-temperature-sensors"]], "GPIO": [[90, "gpio"]], "sysfs Interface": [[90, "sysfs-interface"]], "gpiod Interface": [[90, "gpiod-interface"]], "Multithreading": [[91, "multithreading"], [188, "multithreading"], [248, "multithreading"], [274, "multithreading"], [275, "multithreading"], [277, "multithreading"], [320, "multithreading"], [321, "multithreading"], [324, "multithreading"], [334, "multithreading"], [373, "multithreading"], [380, "multithreading"], [1004, "multithreading"], [1040, "multithreading"], [763, "multithreading"]], "Avoiding Race Conditions: Semaphore/Mutex": [[92, "avoiding-race-conditions-semaphore-mutex"]], "Communication: Waiting for Something": [[93, "communication-waiting-for-something"]], "Python Basics": [[94, "python-basics"]], "EX: Averaging Sensor, Display": [[95, "ex-averaging-sensor-display"]], "Simple Web Programming": [[97, "simple-web-programming"]], "Sensors Web Pages": [[98, "sensors-web-pages"]], "SS2022": [[101, "ss2022"]], "Block 1: Linux, and Working With Remote/Embedded Devices": [[101, "block-1-linux-and-working-with-remote-embedded-devices"], [128, "block-1-linux-and-working-with-remote-embedded-devices"], [149, "block-1-linux-and-working-with-remote-embedded-devices"]], "Block 2: C on Linux: Local and Cross Development": [[101, "block-2-c-on-linux-local-and-cross-development"], [128, "block-2-c-on-linux-local-and-cross-development"], [149, "block-2-c-on-linux-local-and-cross-development"]], "Block 3: C++": [[101, "block-3-c"], [128, "block-3-c"], [149, "block-3-c"]], "2022-03-08": [[102, "id1"]], "Homework": [[102, "homework"], [103, "homework"], [105, "homework"], [108, "homework"]], "2022-03-10": [[103, "id1"]], "2022-03-10 (Homework until 2022-03-21)": [[104, "homework-until-2022-03-21"]], "From Exercises: Create/Copy/Move/Remove": [[104, "from-trainings-material-soup-linux-basics-shell-exercises-cp-mv-mkdir-rm-group"]], "From  Exercises: The ls Command": [[104, "from-trainings-material-soup-linux-basics-shell-exercises-ls-group"]], "2022-03-21": [[105, "id1"]], "2022-03-22, 2022-03-24 (KU)": [[106, "ku"]], "2022-03-28": [[107, "id1"]], "2022-04-01": [[108, "id1"]], "SS2022: Logs": [[109, "ss2022-logs"]], "WS2022": [[110, "ws2022"]], "Plan: Evolution": [[110, "plan-evolution"]], "FH Joanneum (Embedded Computing): WS2022/2023 (Questions About Code)": [[111, "fh-joanneum-embedded-computing-ws2022-2023-questions-about-code"]], "Question 1: C++ Inheritance": [[111, "question-1-c-inheritance"]], "Question 2: C++ Inheritance": [[111, "question-2-c-inheritance"]], "Question 3: Memory Leak": [[111, "question-3-memory-leak"]], "Question 4: std::vector": [[111, "question-4-std-vector"]], "FH Joanneum (Embedded Computing): WS2022/2023 (Yes/No Questions)": [[112, "fh-joanneum-embedded-computing-ws2022-2023-yes-no-questions"]], "Cross Development": [[112, "cross-development"], [286, "cross-development"], [1010, "cross-development"], [1011, "cross-development"]], "C++, OO": [[112, "c-oo"]], "Lab Exam 2023-01-17": [[113, "lab-exam-2023-01-17"]], "Project Setup": [[113, "project-setup"], [548, "project-setup"], [1118, "project-setup"]], "Exercises": [[113, "exercises"], [185, "exercises"], [190, "exercises"], [222, "exercises"], [232, "exercises"], [232, "id1"], [232, "id3"], [290, "Exercises"], [295, "exercises"], [314, "exercises"], [314, "id1"], [317, "exercises"], [321, "exercises"], [501, "exercises"], [503, "exercises"], [510, "exercises"], [538, "exercises"], [555, "exercises"], [557, "exercises"], [598, "exercises"], [663, "exercises"], [687, "exercises"], [783, "exercises"], [1017, "exercises"], [1046, "exercises"], [1090, "exercises"], [613, "exercises"]], "Exam Submission": [[113, "exam-submission"]], "SS2023: Exam 2023-06-30 (Handout)": [[114, "ss2023-exam-2023-06-30-handout"]], "UNIX/Linux Concepts": [[114, "unix-linux-concepts"], [115, "unix-linux-concepts"]], "Toolchain": [[114, "toolchain"], [115, "toolchain"]], "SS2023: Exam 2023-06-30 (Solved)": [[115, "ss2023-exam-2023-06-30-solved"]], "Exam: Embedded Computing 2 (2024-01-26)": [[116, "exam-embedded-computing-2-2024-01-26"]], "Exam: Embedded Computing 2 (2024-02-02)": [[117, "exam-embedded-computing-2-2024-02-02"]], "WS2023/2024: Exam 2024-02-02 (Sample)": [[118, "ws2023-2024-exam-2024-02-02-sample"]], "Question 1": [[118, "question-1"], [121, "question-1"]], "Question 1.1": [[118, "question-1-1"]], "Question 1.2": [[118, "question-1-2"]], "Question 2": [[118, "question-2"], [121, "question-2"]], "Question 2.1": [[118, "question-2-1"]], "Question 2.2 (Why?)": [[118, "question-2-2-why"]], "Question 3": [[118, "question-3"]], "Exam WS2023/2024": [[119, "exam-ws2023-2024"]], "All Questions": [[119, "all-questions"]], "All questions": [[119, null]], "Exams": [[119, "exams"], [127, "exams"]], "Questions 2024": [[120, "questions-2024"]], "const Objects": [[121, "const-objects"]], "Parameter Passing": [[122, "parameter-passing"]], "Question 1: Which One Is Better?": [[122, "question-1-which-one-is-better"]], "Question2: Why?": [[122, "question2-why"]], "SOLID: Hysteresis With Display": [[123, "solid-hysteresis-with-display"]], "SOLID: Sensor Has ID": [[124, "solid-sensor-has-id"]], "To Be Or Not To Be Virtual": [[125, "to-be-or-not-to-be-virtual"]], "Program Output, Version 1": [[125, "program-output-version-1"]], "Program Output, Version 2": [[125, "program-output-version-2"]], "Working with Git In Our FH-ECE21 Project": [[126, "working-with-git-in-our-fh-ece21-project"]], "Forks And Pull Requests": [[126, "forks-and-pull-requests"]], "Multiple Pull Requests: Pulling Upstream Changes (\u201cSyncing\u201d A Fork)": [[126, "multiple-pull-requests-pulling-upstream-changes-syncing-a-fork"]], "Creating A Remote for Upstream (Done Only Once)": [[126, "creating-a-remote-for-upstream-done-only-once"]], "Updating The Fork (\u201cSyncing\u201d It From Its Upstream)": [[126, "updating-the-fork-syncing-it-from-its-upstream"]], "Fetch upstream Into Your Clone": [[126, "fetch-upstream-into-your-clone"]], "Merge upstream/main Into Local main": [[126, "merge-upstream-main-into-local-main"]], "Push Into Fork On Github": [[126, "push-into-fork-on-github"]], "SS2023": [[128, "ss2023"]], "Finish: Written Exam": [[128, "finish-written-exam"]], "(DONE) Boiling Pot (The Beginning)": [[129, "done-boiling-pot-the-beginning"]], "Standup Records": [[129, "standup-records"], [130, "standup-records"], [131, "standup-records"], [132, "standup-records"], [133, "standup-records"], [137, "standup-records"], [141, "standup-records"], [145, "standup-records"]], "2023-11-20": [[129, "id1"], [133, "id1"], [141, "id1"], [145, "id1"]], "2023-12-14": [[129, "id2"], [130, "id1"], [133, "id2"], [141, "id2"]], "Requirements": [[129, "requirements"], [130, "requirements"], [131, "requirements"], [132, "requirements"], [133, "requirements"], [134, "requirements"], [135, "requirements"], [136, "requirements"], [137, "requirements"], [139, "requirements"], [141, "requirements"], [145, "requirements"], [490, "requirements"], [514, "requirements"], [545, "requirements"]], "Implementation": [[129, "implementation"], [133, "implementation"], [134, "implementation"], [136, "implementation"], [139, "implementation"], [141, "implementation"], [145, "implementation"], [549, "implementation"]], "Testing": [[129, "testing"], [133, "testing"], [134, "testing"], [136, "testing"], [139, "testing"], [141, "testing"], [145, "testing"], [288, "testing"]], "Future (Not Part Of This Development Cycle)": [[129, "future-not-part-of-this-development-cycle"], [133, "future-not-part-of-this-development-cycle"], [134, "future-not-part-of-this-development-cycle"], [136, "future-not-part-of-this-development-cycle"], [139, "future-not-part-of-this-development-cycle"], [141, "future-not-part-of-this-development-cycle"], [145, "future-not-part-of-this-development-cycle"]], "Dependencies": [[129, "dependencies"], [130, "dependencies"], [131, "dependencies"], [132, "dependencies"], [133, "dependencies"], [134, "dependencies"], [135, "dependencies"], [136, "dependencies"], [137, "dependencies"], [138, "dependencies"], [139, "dependencies"], [140, "dependencies"], [141, "dependencies"], [145, "dependencies"], [351, "dependencies"], [352, "dependencies"], [353, "dependencies"], [354, "dependencies"], [356, "dependencies"], [479, "dependencies"], [496, "dependencies"], [510, "dependencies"], [538, "dependencies"], [555, "dependencies"], [557, "dependencies"], [568, "dependencies"], [635, "dependencies"], [641, "dependencies"], [645, "dependencies"], [653, "dependencies"], [655, "dependencies"], [658, "dependencies"], [663, "dependencies"], [671, "dependencies"], [672, "dependencies"], [674, "dependencies"], [676, "dependencies"], [677, "dependencies"], [678, "dependencies"], [679, "dependencies"], [680, "dependencies"], [681, "dependencies"], [682, "dependencies"], [683, "dependencies"], [684, "dependencies"], [685, "dependencies"], [686, "dependencies"], [692, "dependencies"], [699, "dependencies"], [706, "dependencies"], [717, "dependencies"], [741, "dependencies"], [746, "dependencies"], [771, "dependencies"], [860, "dependencies"], [861, "dependencies"], [862, "dependencies"], [866, "dependencies"], [880, "dependencies"], [881, "dependencies"], [882, "dependencies"], [901, "dependencies"], [906, "dependencies"], [907, "dependencies"], [910, "dependencies"], [943, "dependencies"], [945, "dependencies"], [952, "dependencies"], [958, "dependencies"], [960, "dependencies"], [968, "dependencies"], [970, "dependencies"], [972, "dependencies"], [987, "dependencies"], [1011, "dependencies"], [1013, "dependencies"], [1014, "dependencies"], [1017, "dependencies"], [1018, "dependencies"], [1039, "dependencies"], [1041, "dependencies"], [1087, "dependencies"], [1088, "dependencies"], [1091, "dependencies"], [1092, "dependencies"], [1093, "dependencies"], [1095, "dependencies"], [1096, "dependencies"], [1097, "dependencies"], [1098, "dependencies"], [1099, "dependencies"], [1100, "dependencies"], [1104, "dependencies"], [1105, "dependencies"], [1106, "dependencies"], [1107, "dependencies"], [1108, "dependencies"], [1110, "dependencies"], [1111, "dependencies"], [1112, "dependencies"], [1113, "dependencies"], [1114, "dependencies"], [1115, "dependencies"], [1116, "dependencies"], [1118, "dependencies"], [1119, "dependencies"], [1120, "dependencies"], [1121, "dependencies"], [1122, "dependencies"], [1123, "dependencies"], [1125, "dependencies"], [1126, "dependencies"], [1127, "dependencies"], [1128, "dependencies"], [1141, "dependencies"], [1144, "dependencies"], [1147, "dependencies"], [1151, "dependencies"], [1163, "dependencies"], [984, "dependencies"], [1169, "dependencies"]], "Boiling Pot: Basic Integration": [[130, "boiling-pot-basic-integration"]], "Boiling Pot: Display, And Status Reporting": [[131, "boiling-pot-display-and-status-reporting"]], "Boiling Pot: Full Integration (Display And IoT)": [[132, "boiling-pot-full-integration-display-and-iot"]], "(DONE) Data Logger": [[133, "done-data-logger"]], "Data Logger: CSV Sink": [[134, "data-logger-csv-sink"]], "Column name configuration": [[134, "column-name-configuration"]], "output()": [[134, "output"]], "Data Logger: Integration": [[135, "data-logger-integration"]], "Data Logger: MQTT Sink": [[136, "data-logger-mqtt-sink"]], "MQTT Implementation: mosquitto": [[136, "mqtt-implementation-mosquitto"]], "Installation": [[136, "installation"], [385, "installation"], [950, "installation"], [1085, "installation"], [1147, "installation"], [1171, "installation"]], "Wrapper": [[136, "wrapper"]], "Display Interface/Infrastructure": [[137, "display-interface-infrastructure"]], "New Interface PercentageDisplay": [[137, "new-interface-percentagedisplay"]], "Existing Implementations": [[137, "existing-implementations"]], "Composite Display": [[137, "composite-display"]], "Testing: Breadboard Acrobatics, Demo Program": [[137, "testing-breadboard-acrobatics-demo-program"]], "WS2023/24: Group Project - Tasks": [[138, "ws2023-24-group-project-tasks"]], "Tasks": [[138, "tasks"], [146, "tasks"], [991, "tasks"]], "Datalogger": [[138, "datalogger"], [146, "datalogger"]], "Boiling Pot": [[138, "boiling-pot"], [146, "boiling-pot"]], "Peripherals": [[138, "peripherals"], [146, "peripherals"]], "Client": [[138, "client"], [1147, "client"]], "libgpiod Switch": [[139, "libgpiod-switch"]], "Python MQTT Subscriber": [[140, "python-mqtt-subscriber"]], "Notes": [[140, "notes"], [490, "notes"]], "Temperature Display: LED Via A PWM Controller": [[141, "temperature-display-led-via-a-pwm-controller"]], "(DONE) Sensor Interface": [[142, "done-sensor-interface"]], "(DONE) Onewire Sensor": [[143, "done-onewire-sensor"]], "(DONE) Switch Interface": [[144, "done-switch-interface"]], "SysFS GPIO Switch": [[145, "sysfs-gpio-switch"], [146, "sysfs-gpio-switch"]], "WS2023/24": [[146, "ws2023-24"]], "2023-10-05 (6 VO)": [[146, "vo"]], "OO: Recap": [[146, "oo-recap"]], "Plan \ud83d\udcaa": [[146, "plan-muscle"]], "OO: Polymorphism": [[146, "oo-polymorphism"]], "Git Collaboration (via Github, but not necessarily): Forks And Pull Request": [[146, "git-collaboration-via-github-but-not-necessarily-forks-and-pull-request"]], "Tasks, First Round": [[146, "tasks-first-round"]], "2023-11-03 (6 VO)": [[146, "id1"]], "Organizational": [[146, "organizational"]], "OO: Design?": [[146, "oo-design"]], "Project": [[146, "project"], [146, "id3"], [146, "id5"], [146, "id7"], [146, "id9"], [146, "id11"], [146, "id13"], [146, "id15"], [146, "id17"], [190, "project"]], "Hardware Overview": [[146, "hardware-overview"]], "2023-11-09 (3 VO)": [[146, "id2"]], "2023-11-10 (3 VO)": [[146, "id4"]], "2023-11-17 (3 VO)": [[146, "id6"]], "OO, And Software Development At Large": [[146, "oo-and-software-development-at-large"]], "Updating A Fork From Upstream": [[146, "updating-a-fork-from-upstream"]], "2023-11-20 (6 VO)": [[146, "id8"]], "Container Templates (std::map)": [[146, "container-templates-std-map"]], "New Tasks: MQTT And CSV Sink Implementations": [[146, "new-tasks-mqtt-and-csv-sink-implementations"]], "Datalogger Pull Request": [[146, "datalogger-pull-request"]], "Boiling Pot, Switches": [[146, "boiling-pot-switches"]], "2023-12-07 (6 VO)": [[146, "id10"]], "Structure": [[146, "structure"], [167, "structure"], [533, "structure"]], "Renames": [[146, "renames"]], "2023-12-14 (6 VO)": [[146, "id12"]], "2024-01-08 (6 VO)": [[146, "id14"]], "2024-01-11 (6 VO)": [[146, "id16"]], "2024-02-02 (Exam)": [[146, "exam"]], "Relevant Topics": [[146, "relevant-topics"]], "A Sample Exam": [[146, "a-sample-exam"]], "Git Notes": [[152, "git-notes"]], "Bring Local Branch Upstream": [[152, "bring-local-branch-upstream"]], "Create Remote Tracking Branch": [[152, "create-remote-tracking-branch"]], "Create, Submit, Apply Patches": [[152, "create-submit-apply-patches"]], "Packaging this Site on PyPI": [[154, "packaging-this-site-on-pypi"]], "Audio Chip Bringup": [[155, "audio-chip-bringup"]], "Goal": [[155, "goal"], [157, "goal"], [158, "goal"], [160, "goal"], [295, "goal"], [297, "goal"], [1184, "goal"], [1187, "goal"]], "Findings": [[155, "findings"]], "Get Debian 10 Kernel Config": [[156, "get-debian-10-kernel-config"]], "Run Debian within Qemu": [[156, "run-debian-within-qemu"]], "Extract Kernel Config from /boot": [[156, "extract-kernel-config-from-boot"]], "Finish: Debian Kernel Package etc.": [[157, "finish-debian-kernel-package-etc"]], "Yocto Kernel Bringup on Customer Hardware": [[158, "yocto-kernel-bringup-on-customer-hardware"]], "Open Questions: Everything Works Like Before?": [[158, "open-questions-everything-works-like-before"]], "I2S Audio for a Kontron SMARC Module": [[159, "i2s-audio-for-a-kontron-smarc-module"]], "Dirty Upgrade Path": [[160, "dirty-upgrade-path"]], "Steps": [[160, "steps"]], "Wait for Customer Hardware": [[161, "wait-for-customer-hardware"]], "Extract Kernel from Intel Yocto BSP": [[162, "extract-kernel-from-intel-yocto-bsp"]], "Python Training Improvements": [[163, "python-training-improvements"]], "Beginner Course": [[163, "beginner-course"]], "Exercise Structure": [[163, "exercise-structure"]], "Split Exercises": [[163, "split-exercises"]], "Creating Screencasts": [[164, "creating-screencasts"]], "OpenShot": [[164, "openshot"]], "SEO": [[165, "seo"]], "Sitemap": [[165, "sitemap"]], "Meta Information": [[165, "meta-information"]], "Courses": [[165, "courses"]], "Stacks (Hanging)": [[166, "stacks-hanging"]], "DBus (New Topic)": [[166, "dbus-new-topic"]], "Finish Meta/SEO and Stuff": [[166, "finish-meta-seo-and-stuff"]], "Miscellaneous To Do": [[167, "miscellaneous-to-do"]], "Extensions": [[167, "extensions"]], "reST Todos": [[167, "rest-todos"]], "Styling": [[167, "styling"]], "Convert to RST/S5": [[167, "convert-to-rst-s5"]], "Examples": [[167, "examples"], [494, "examples"], [694, "examples"], [742, "examples"], [857, "examples"], [959, null]], "Convert Existing Content": [[167, "convert-existing-content"]], "Add Missing": [[167, "add-missing"]], "References, Past Trainings": [[167, "references-past-trainings"]], "About": [[167, "about"]], "Learning The Web": [[168, "learning-the-web"]], "Beagleboard: How to Repair NAND (also known as 40W)": [[169, "beagleboard-how-to-repair-nand-also-known-as-40w"]], "Basics": [[169, "basics"], [240, "basics"], [267, "basics"], [282, "basics"], [302, "basics"], [303, "basics"], [303, "id1"], [308, "basics"], [309, "basics"], [309, "id1"], [330, "basics"], [336, "basics"], [342, "basics"], [343, "basics"], [346, "basics"], [347, "basics"], [360, "Basics"], [428, "basics"], [614, "basics"], [626, "basics"], [646, "basics"], [744, "basics"], [859, "basics"], [975, "basics"], [1083, "basics"]], "Getting X-Loader and U-Boot": [[169, "getting-x-loader-and-u-boot"]], "Creating a Bootable MMC/SD card": [[169, "creating-a-bootable-mmc-sd-card"]], "Repairing the NAND": [[169, "repairing-the-nand"]], "Writing X-Loader to NAND": [[169, "writing-x-loader-to-nand"]], "Writing U-Boot to NAND": [[169, "writing-u-boot-to-nand"]], "Porting to Linux (There\u2019s Always A Better Way)": [[170, "porting-to-linux-there-s-always-a-better-way"]], "Processes are Threads": [[170, "processes-are-threads"]], "Signals Aren\u2019t Messages": [[170, "signals-aren-t-messages"]], "References": [[170, null], [170, null], [170, null], [242, "References"], [245, "References"], [605, "references"]], "Message Queues aren\u2019t Message Queues": [[170, "message-queues-aren-t-message-queues"]], "Semaphores and Mutexes": [[170, "semaphores-and-mutexes"]], "Timers": [[170, "timers"]], "Polling": [[170, "polling"]], "Event Dispatching": [[170, "event-dispatching"]], "Interrupts": [[170, "interrupts"], [816, "interrupts"]], "Realtime": [[170, "realtime"], [993, "realtime"], [1179, "realtime"]], "Saving Solid State Disk Life (Gentoo)": [[171, "saving-solid-state-disk-life-gentoo"]], "Rant": [[171, "rant"], [191, "Rant"], [1009, null]], "No Swap": [[171, "no-swap"]], "tmpfs instances here and there": [[171, "tmpfs-instances-here-and-there"]], "Syslog, /var/log/messages": [[171, "syslog-var-log-messages"]], "Mountpoint for messages": [[171, "mountpoint-for-messages"]], "Logrotate": [[171, "logrotate"]], "Kernel I/O Scheduler": [[171, "kernel-i-o-scheduler"]], "Use RAM for the Kernel Build": [[171, "use-ram-for-the-kernel-build"]], "Things that are left": [[171, "things-that-are-left"]], "\u201cWhy ps Sucks\u201d or \u201cCounting Memory Consumption\u201d": [[172, "why-ps-sucks-or-counting-memory-consumption"]], "Process Stack Management": [[172, "process-stack-management"]], "Conclusion": [[172, "conclusion"], [172, "id1"], [930, "conclusion"], [938, "conclusion"]], "Thread (pthread) Stack Management": [[172, "thread-pthread-stack-management"]], "Experiment #1: 100 default threads, eating no stack": [[172, "experiment-1-100-default-threads-eating-no-stack"]], "Experiment #2: 100 default threads, eating up stack": [[172, "experiment-2-100-default-threads-eating-up-stack"]], "Experiment #3: 100 threads with limited stack": [[172, "experiment-3-100-threads-with-limited-stack"]], "Experiment #4: more threads than my system could take (eat no stack)": [[172, "experiment-4-more-threads-than-my-system-could-take-eat-no-stack"]], "Experiment #5: more threads than my system could take (eat stack)": [[172, "experiment-5-more-threads-than-my-system-could-take-eat-stack"]], "How does this work?": [[172, "how-does-this-work"]], "Realtime is different": [[172, "realtime-is-different"]], "Patching and Building the Fedora Kernel": [[173, "patching-and-building-the-fedora-kernel"]], "Why?": [[173, "why"], [946, "why"], [1028, "why"]], "Find Kernel Source (Git), Fix It, and Create Patch": [[173, "find-kernel-source-git-fix-it-and-create-patch"]], "Link": [[173, null], [173, null]], "Prepare the RPM Build": [[173, "prepare-the-rpm-build"]], "Install Prerequisites": [[173, "install-prerequisites"]], "Setup rpmbuild Directory": [[173, "setup-rpmbuild-directory"]], "Download and Install Source RPM For Crashing Kernel": [[173, "download-and-install-source-rpm-for-crashing-kernel"]], "Apply the Patch": [[173, "apply-the-patch"]], "Build the Kernel RPMs": [[173, "build-the-kernel-rpms"]], "Install Kernel": [[173, "install-kernel"]], "Adding a Custom Domain to a Github Pages Project Site": [[174, "adding-a-custom-domain-to-a-github-pages-project-site"]], "Configure a Subdomain, www.faschingbauer.me": [[174, "configure-a-subdomain-www-faschingbauer-me"]], "Configure an Apex Domain, faschingbauer.me": [[174, "configure-an-apex-domain-faschingbauer-me"]], "Using Microsoft Teams on Linux": [[175, "using-microsoft-teams-on-linux"]], "Screen Sharing: X11 Revival": [[175, "screen-sharing-x11-revival"]], "RPM Package (Meh!)": [[175, "rpm-package-meh"]], "Updated on 2020-04-09": [[175, null]], "Annoyance #1: Keeps Running in Background": [[175, "annoyance-1-keeps-running-in-background"]], "Annoyance #2: (Re)Registers Itself For Autostart": [[175, "annoyance-2-re-registers-itself-for-autostart"]], "Run In Browser (My Recommendation)": [[175, "run-in-browser-my-recommendation"]], "Deploying Sphinx Generated Documentation to Github Pages": [[176, "deploying-sphinx-generated-documentation-to-github-pages"]], "Create \u201cSite Publication Repo\u201d": [[176, "create-site-publication-repo"]], "Configure Github Pages for jfasch-home-pages": [[176, "configure-github-pages-for-jfasch-home-pages"]], "Time for Deployment": [[176, "time-for-deployment"]], "Using BigBlueButton for Online Training": [[177, "using-bigbluebutton-for-online-training"]], "In this Article": [[177, null], [178, null], [180, null]], "TL;DR": [[177, "tl-dr"]], "Background Information": [[177, "background-information"]], "Hosting Setup": [[177, "hosting-setup"]], "BigBlueButton Installation": [[177, "bigbluebutton-installation"]], "Functionality Check": [[177, "functionality-check"]], "What Else?": [[177, "what-else"], [933, "what-else"], [946, "what-else"]], "Traunstein via Zierlersteig": [[178, "traunstein-via-zierlersteig"]], "Kaltenbachwildnis": [[178, "kaltenbachwildnis"]], "Anstieg auf den Zierlerberg": [[178, "anstieg-auf-den-zierlerberg"]], "Die Rinne": [[178, "die-rinne"]], "Abstieg": [[178, "abstieg"]], "Grintovec (via Plan\u0161arsko Jezero, \u010ce\u0161ka Ko\u010da)": [[179, "grintovec-via-plansarsko-jezero-ceska-koca"]], "Anreise": [[179, "anreise"]], "\u010ce\u0161ka Ko\u010da": [[179, "ceska-koca"]], "Hinauf": [[179, "hinauf"]], "Runter": [[179, "runter"]], "Zusammenfassung": [[179, "zusammenfassung"]], "How to Brick a \u20ac1399 Dell XPS 13": [[180, "how-to-brick-a-1399-dell-xps-13"]], "What Happened?": [[180, "what-happened"]], "VirtualBox, Fedora, and Secure Boot": [[180, "virtualbox-fedora-and-secure-boot"]], "Enrolling Machine Owner Key (MOK)": [[180, "enrolling-machine-owner-key-mok"]], "Generate Key Pair": [[180, "generate-key-pair"]], "Stage Key for Enrollment": [[180, "stage-key-for-enrollment"]], "Reboot, Brick": [[180, "reboot-brick"]], "Diagnostics": [[180, "diagnostics"]], "Building A Cross Toolchain For The Raspberry Pi, Using crosstool-ng": [[181, "building-a-cross-toolchain-for-the-raspberry-pi-using-crosstool-ng"], [1020, "building-a-cross-toolchain-for-the-raspberry-pi-using-crosstool-ng"]], "Why This Article? Why Not Use A Prebuilt Toolchain?": [[181, "why-this-article-why-not-use-a-prebuilt-toolchain"]], "Installing crosstool-ng": [[181, "installing-crosstool-ng"]], "Prerequisites": [[181, "prerequisites"], [1086, "prerequisites"]], "Installing From Cloned Git Repository": [[181, "installing-from-cloned-git-repository"]], "Installing From Release Tarball": [[181, "installing-from-release-tarball"]], "PATH, And Basic Test": [[181, "path-and-basic-test"]], "Configure Toolchain Build": [[181, "configure-toolchain-build"]], "Base Configuration For The Raspberry": [[181, "base-configuration-for-the-raspberry"]], "Important: glibc Version": [[181, "important-glibc-version"]], "The Error": [[181, "the-error"], [181, "id4"]], "The Fix": [[181, "the-fix"], [181, "id5"]], "Important: GCC Version": [[181, "important-gcc-version"]], "Toolchain Build/Install": [[181, "toolchain-build-install"]], "Test": [[181, "test"], [813, "test"]], "Simplest: C, <stdio.h>": [[181, "simplest-c-stdio-h"]], "C++, <iostream>": [[181, "c-iostream"]], "C++, <thread>": [[181, "c-thread"]], "Packaging/Distributing The Toolchain": [[181, "packaging-distributing-the-toolchain"]], "Afterword": [[181, "afterword"]], "Posts": [[182, "posts"]], "Linux und Open Source": [[183, "linux-und-open-source"]], "Schulung": [[183, "schulung"]], "Entwicklung": [[183, "entwicklung"]], "Beratung": [[183, "beratung"]], "Richtlinien zur Ver\u00f6ffentlichung von Kursmaterial": [[184, "richtlinien-zur-veroffentlichung-von-kursmaterial"]], "Installing Git": [[185, "installing-git"]], "Windows": [[185, "windows"]], "Workflow": [[185, "workflow"]], "Cloning the Repository": [[185, "cloning-the-repository"]], "Exercise Time": [[185, "exercise-time"]], "Conflicts": [[185, "conflicts"]], "Trainer\u2019s Notes": [[185, "trainer-s-notes"]], "Courses: Overview": [[186, "courses-overview"]], "Online Trainings": [[186, null]], "Individual Trainings": [[186, null]], "Everything About Linux": [[186, "everything-about-linux"]], "Programming Languages": [[186, "programming-languages"]], "Miscellaneous but Related": [[186, "miscellaneous-but-related"]], "Qualivision, Z\u00fcrich, 1.10.2013": [[187, "qualivision-zurich-1-10-2013"]], "Fragen und Antworten": [[187, "fragen-und-antworten"]], "Kursnotizen: Linux Embedded 2015-11-30": [[188, "kursnotizen-linux-embedded-2015-11-30"]], "GPIOs in Userspace": [[188, "gpios-in-userspace"]], "CAN Bus": [[188, "can-bus"], [209, "can-bus"]], "Driver Beispiele": [[188, "driver-beispiele"]], "Heizungssteuerung": [[188, "heizungssteuerung"]], "Live Hacking": [[189, "Live-Hacking"], [630, "live-hacking"], [631, "live-hacking"], [633, "live-hacking"], [634, "live-hacking"], [637, "live-hacking"], [638, "live-hacking"], [639, "live-hacking"], [651, "live-hacking"]], "Strings k\u00f6nnen viel: split()": [[189, "Strings-k\u00f6nnen-viel:-split()"]], "Mutability, Immutability: kann man nicht oft genug wiederholen": [[189, "Mutability,-Immutability:-kann-man-nicht-oft-genug-wiederholen"]], "Dictionaries": [[189, "Dictionaries"], [218, "Dictionaries"], [290, "Dictionaries"], [304, "Dictionaries"], [360, "Dictionaries"], [1079, "dictionaries"]], "\u201cHartes\u201d Indizieren \u2026": [[189, "%22Hartes%22-Indizieren-..."]], "\u201cWeiches\u201d Nettfragen \u2026": [[189, "%22Weiches%22-Nettfragen-..."]], "Shortcuts": [[189, "Shortcuts"]], "Objektorientierte Programmierung": [[189, "Objektorientierte-Programmierung"]], "Inheritance": [[189, "Inheritance"], [229, "Inheritance"], [1047, "inheritance"]], "Date and Time and Time Deltas - datetime": [[189, "Date-and-Time-and-Time-Deltas---datetime"]], "Bissl potschert zum Schreiben is scho \u2026 (andere Formen von import)": [[189, "Bissl-potschert-zum-Schreiben-is-scho-...-(andere-Formen-von-import)"]], "String Representations: __str__()": [[189, "String-Representations:-__str__()"]], "subprocess": [[189, "subprocess"], [268, "subprocess"]], "enumerate(), zip()": [[189, "enumerate(),-zip()"]], "List Comprehension": [[189, "List-Comprehension"], [213, "List-Comprehension"], [252, "List-Comprehension"], [322, "List-Comprehension"], [332, "List-Comprehension"], [338, "List-Comprehension"], [1033, "list-comprehension"], [1078, "list-comprehension"]], "exec(), eval()": [[189, "exec(),-eval()"]], "Umgebender Context": [[189, "Umgebender-Context"]], "Eigener Context": [[189, "Eigener-Context"]], "json": [[189, "json"], [265, "json"]], "Python Individualtraining (5 Tage, beginnend 28.10.2019)": [[190, "python-individualtraining-5-tage-beginnend-28-10-2019"], [383, "python-individualtraining-5-tage-beginnend-28-10-2019"]], "Inhalt": [[190, null], [193, null], [1004, null], [1181, "inhalt"]], "Slide 51, \u201cExercises: Basics\u201d": [[190, "slide-51-exercises-basics"]], "Slide 58, \u201cExercises: While Loop\u201d": [[190, "slide-58-exercises-while-loop"]], "Slide 94, \u201cExercises: Lists, Loops, Functions\u201d": [[190, "slide-94-exercises-lists-loops-functions"]], "Slide 121, \u201cExercises: Strings\u201d": [[190, "slide-121-exercises-strings"]], "Famous Generator Introduction": [[190, "famous-generator-introduction"]], "eval(): Convert a String into a Python Data Structure": [[190, "eval-convert-a-string-into-a-python-data-structure"]], "Operator Overloading": [[190, "operator-overloading"], [248, "operator-overloading"], [258, "Operator-Overloading"], [279, "operator-overloading"], [314, "operator-overloading"], [568, "operator-overloading"], [594, "operator-overloading"], [608, "operator-overloading"], [1050, "operator-overloading"]], "Getters and Setters": [[190, "getters-and-setters"]], "More on Listcomprehensions and Generator Expressions": [[190, "more-on-listcomprehensions-and-generator-expressions"]], "More on Local and Global Scope and Global Variables": [[190, "more-on-local-and-global-scope-and-global-variables"]], "Closures: Between Local and Global": [[190, "closures-between-local-and-global"]], "Goals of this Training": [[191, "Goals-of-this-Training"]], "Exercise": [[191, "Exercise"], [232, "exercise"], [274, "exercise"], [274, "id1"], [275, "exercise"], [277, "exercise"], [286, "exercise"], [295, "exercise"], [317, "exercise"], [365, "exercise"], [371, "exercise"], [490, "exercise"], [491, "exercise"], [492, "exercise"], [494, "exercise"], [495, "exercise"], [498, "exercise"], [499, "exercise"], [684, "exercise"]], "Walkthrough: Reduce Image to Eight Colors": [[191, "Walkthrough:-Reduce-Image-to-Eight-Colors"]], "Load Image from File: PIL": [[191, "Load-Image-from-File:-PIL"]], "Image as NumPy Array": [[191, "Image-as-NumPy-Array"]], "Preparation before Clustering": [[191, "Preparation-before-Clustering"]], "Excursion: matplotlib": [[191, "Excursion:-matplotlib"]], "Now Comes the Clustering": [[191, "Now-Comes-the-Clustering"]], "Let KMeans find eight clusters \u2026": [[191, "Let-KMeans-find-eight-clusters-..."]], "Use the result: output-properties": [[191, "Use-the-result:-output-properties"]], "Clusters be their Centers": [[191, "Clusters-be-their-Centers"]], "Post Processing: Restore Alpha, Back into RGBA": [[191, "Post-Processing:-Restore-Alpha,-Back-into-RGBA"]], "Random Live Hacking": [[192, "Random-Live-Hacking"]], "Data Types": [[192, "Data-Types"], [322, "Data-Types"]], "Mutable, Immutable": [[192, "Mutable,-Immutable"]], "Exception, demonstrated using dict access": [[192, "Exception,-demonstrated-using-dict-access"]], "Indices and Slicing": [[192, "Indices-and-Slicing"]], "for loops": [[192, "for-loops"]], "Iterator protocol": [[192, "Iterator-protocol"], [255, "Iterator-protocol"]], "Python (12.11.2019 - 14.11.2019 in Graz)": [[193, "python-12-11-2019-14-11-2019-in-graz"]], "Material": [[193, null], [195, null], [364, null]], "Standardthemen": [[193, "standardthemen"]], "Das Hauptthema: Numerik, NumPy": [[193, "das-hauptthema-numerik-numpy"]], "Lesen von .mat Files": [[193, "lesen-von-mat-files"]], "L\u00f6sen einer Uni-\u00dcbung": [[193, "losen-einer-uni-ubung"]], "Proposal": [[194, "proposal"]], "Signals": [[194, "signals"]], "Posix IPC (and Virtual Memory)": [[194, "posix-ipc-and-virtual-memory"]], "Unix Domain Sockets": [[194, "unix-domain-sockets"]], "Application in your Company": [[194, "application-in-your-company"]], "Further Thoughts": [[194, "further-thoughts"]], "IPC in Linux (10.1.2020 in Graz)": [[195, "ipc-in-linux-10-1-2020-in-graz"]], "\u00dcbung: handgestrickter String, um die Fallen von C++ lustvoll zu erleiden": [[196, "ubung-handgestrickter-string-um-die-fallen-von-c-lustvoll-zu-erleiden"]], "C++ f\u00fcr Embedded C Programmierer (30.3.2020 - 3.4.2020 Baden W\u00fcrttemberg)": [[197, "c-fur-embedded-c-programmierer-30-3-2020-3-4-2020-baden-wurttemberg"]], "Kursinformation": [[197, null]], "Kursaufbau": [[197, "kursaufbau"]], "Kursverlauf": [[197, "kursverlauf"], [205, "kursverlauf"]], "Tag 3": [[197, "tag-3"], [216, "tag-3"], [227, "tag-3"], [249, "tag-3"], [261, "tag-3"]], "Tag 4": [[197, "tag-4"], [227, "tag-4"], [249, "tag-4"], [261, "tag-4"]], "Tag 5": [[197, "tag-5"]], "Installing googletest By Hand": [[198, "installing-googletest-by-hand"]], "Clone googletest Repo": [[198, "clone-googletest-repo"]], "Create Build Directory": [[198, "create-build-directory"], [199, "create-build-directory"], [547, "create-build-directory"]], "CMake, Build and Install": [[198, "cmake-build-and-install"]], "Build Packages to Use Our Private googletest Install": [[198, "build-packages-to-use-our-private-googletest-install"]], "Software Setup, Build": [[199, "software-setup-build"]], "Getting the Source": [[199, "getting-the-source"]], "Install Prerequisites and Dependencies": [[199, "install-prerequisites-and-dependencies"]], "Generate Makefile Build from CMake Sources": [[199, "generate-makefile-build-from-cmake-sources"]], "Argh: Using This Site With Visual Studio Code": [[200, "argh-using-this-site-with-visual-studio-code"]], "Flatpak": [[200, "flatpak"]], "Issues": [[200, "issues"]], "RPM From M$": [[200, "rpm-from-m"]], "Code": [[201, "code"], [204, "code"]], "Python Grundlagen (13.5.2020 - 14.5.2020 bei einer Firma in Graz)": [[202, "python-grundlagen-13-5-2020-14-5-2020-bei-einer-firma-in-graz"]], "Information": [[202, null], [205, null]], "Environment": [[202, "environment"], [865, "environment"]], "Unit Testing and Test Driven Development": [[202, "unit-testing-and-test-driven-development"]], "Python Installation": [[202, "python-installation"], [1055, "python-installation"]], "Programming Environment": [[202, "programming-environment"], [286, "programming-environment"], [1055, "programming-environment"]], "Day 1: Language Basics": [[202, "day-1-language-basics"]], "Day 2: Advanced Topics": [[202, "day-2-advanced-topics"]], "Wrap-Up": [[202, "wrap-up"]], "How Was It?": [[202, "how-was-it"]], "Python Schulung 18. und 19.5.2020": [[203, "Python-Schulung-18.-und-19.5.2020"]], "Das sys Modul": [[203, "Das-sys-Modul"]], "Multiline Strings und Docstrings": [[203, "Multiline-Strings-und-Docstrings"]], "Datentypen (Ausflug)": [[203, "Datentypen-(Ausflug)"]], "Variablen und deren Unterbau": [[203, "Variablen-und-deren-Unterbau"]], "Ausflug \u201cPythonic\u201d: Zuweisung mit Hilfe von \u201cTuple Unpacking\u201d": [[203, "Ausflug-%22Pythonic%22:-Zuweisung-mit-Hilfe-von-%22Tuple-Unpacking%22"]], "Mutability am Beispiel list": [[203, "Mutability-am-Beispiel-list"]], "Integers haben unendliche Breite": [[203, "Integers-haben-unendliche-Breite"]], "Division und Floor Division": [[203, "Division-und-Floor-Division"]], "Konvertierung durch Konstruktoren": [[203, "Konvertierung-durch-Konstruktoren"]], "Welchen Typ haben Typen?": [[203, "Welchen-Typ-haben-Typen?"]], "list und Mutability": [[203, "list-und-Mutability"]], "Tuple und Immutability": [[203, "Tuple-und-Immutability"]], "Besseres Laufzeitverhalten durch Geeignetere Datenstrukturen": [[203, "Besseres-Laufzeitverhalten-durch-Geeignetere-Datenstrukturen"]], "Boolean: Short Circuit Evaluation": [[203, "Boolean:-Short-Circuit-Evaluation"]], "while Loops, und warum sie nicht Pythonic sind": [[203, "while-Loops,-und-warum-sie-nicht-Pythonic-sind"]], "Mehr \u00fcber range(): Iterator Protocol (Folie 161)": [[203, "Mehr-\u00fcber-range():-Iterator-Protocol-(Folie-161)"]], "Mutability, Shallow und Deep Copy": [[203, "Mutability,-Shallow-und-Deep-Copy"]], "Shallow Copy mit dem Slice-Operator": [[203, "Shallow-Copy-mit-dem-Slice-Operator"]], "Deep Copy (copy.deepcopy())": [[203, "Deep-Copy-(copy.deepcopy())"]], "Funktionen": [[203, "Funktionen"]], "Funktionen sind \u201cFirst Class Objects\u201d": [[203, "Funktionen-sind-%22First-Class-Objects%22"]], "Gotcha: Mutable Default Parameters (Folie 90 ff.)": [[203, "Gotcha:-Mutable-Default-Parameters-(Folie-90-ff.)"]], "Globale und lokale Variablen (Folie 92)": [[203, "Globale-und-lokale-Variablen-(Folie-92)"]], "Exercise: uniq() (Folie 94, Punkt 2)": [[203, "Exercise:-uniq()-(Folie-94,-Punkt-2)"]], "Zusammengefasst: hier eine \u201csch\u00f6nere\u201d L\u00f6sung": [[203, "Zusammengefasst:-hier-eine-%22sch\u00f6nere%22-L\u00f6sung"]], "Funktionen als Parameter": [[203, "Funktionen-als-Parameter"]], "List Comprensions (Folie 125)": [[203, "List-Comprensions-(Folie-125)"]], "Generator Expressions: Lesbarkeit und Performance": [[203, "Generator-Expressions:-Lesbarkeit-und-Performance"]], "Code Review": [[203, "Code-Review"]], "pprint() ist praktisch f\u00fcr Debug-Output": [[203, "pprint()-ist-praktisch-f\u00fcr-Debug-Output"]], "Straightforward Datentransformation": [[203, "Straightforward-Datentransformation"]], "Ausflug: More on Dictionaries (Folie 127ff.)": [[203, "Ausflug:-More-on-Dictionaries-(Folie-127ff.)"]], "Now for something completely different: collections.namedtuple": [[203, "Now-for-something-completely-different:-collections.namedtuple"]], "Mehr zur Parameter\u00fcbergabe: variabel lange Argumentlisten": [[203, "Mehr-zur-Parameter\u00fcbergabe:-variabel-lange-Argumentlisten"]], "OO: eine erste Klasse": [[203, "OO:-eine-erste-Klasse"]], "Python Individualtraining (18.5.2020 - 19.5.2020)": [[205, "python-individualtraining-18-5-2020-19-5-2020"], [383, "python-individualtraining-18-5-2020-19-5-2020"]], "Weiterf\u00fchrende Links": [[205, "weiterfuhrende-links"]], "Python Advanced (7.9.2020 - 10.9.2020)": [[206, "python-advanced-7-9-2020-10-9-2020"], [383, "python-advanced-7-9-2020-10-9-2020"]], "Preparation": [[206, "preparation"], [207, "preparation"], [209, "preparation"], [210, "preparation"], [211, "preparation"], [212, "preparation"], [610, "preparation"]], "Workspace Setup": [[206, "workspace-setup"], [207, "workspace-setup"], [209, "workspace-setup"], [211, "workspace-setup"]], "Github for Exercises": [[206, "github-for-exercises"], [207, "github-for-exercises"]], "Agenda": [[206, "agenda"], [207, "agenda"], [209, "agenda"], [210, "agenda"], [211, "agenda"], [212, "agenda"], [217, "agenda"], [221, "agenda"], [222, "agenda"], [259, "agenda"], [264, "agenda"], [276, "agenda"], [285, "agenda"], [306, "agenda"], [314, "agenda"], [1186, "agenda"]], "Advanced Core Python Topics": [[206, "advanced-core-python-topics"]], "Special Topics": [[206, "special-topics"]], "Day 1": [[206, "day-1"], [207, "day-1"], [209, "day-1"], [210, "day-1"], [211, "day-1"], [221, "day-1"], [222, "day-1"], [231, "day-1"], [232, "day-1"], [237, "day-1"], [240, "day-1"], [243, "day-1"], [246, "day-1"], [253, "day-1"], [295, "day-1"], [296, "day-1"], [297, "day-1"], [303, "day-1"], [307, "day-1"], [309, "day-1"], [314, "day-1"], [321, "day-1"], [347, "day-1"]], "Day 2": [[206, "day-2"], [207, "day-2"], [209, "day-2"], [210, "day-2"], [211, "day-2"], [221, "day-2"], [222, "day-2"], [231, "day-2"], [232, "day-2"], [237, "day-2"], [240, "day-2"], [242, "Day-2"], [243, "day-2"], [246, "day-2"], [253, "day-2"], [286, "day-2"], [295, "day-2"], [297, "day-2"], [303, "day-2"], [307, "day-2"], [314, "day-2"], [321, "day-2"], [347, "day-2"]], "Day 3": [[206, "day-3"], [207, "day-3"], [209, "day-3"], [210, "day-3"], [211, "day-3"], [221, "day-3"], [222, "day-3"], [231, "day-3"], [232, "day-3"], [237, "day-3"], [242, "Day-3"], [243, "day-3"], [246, "day-3"], [253, "day-3"], [286, "day-3"], [289, "day-3"], [295, "day-3"], [297, "day-3"], [303, "day-3"], [307, "day-3"], [309, "day-3"], [321, "day-3"], [347, "day-3"]], "Day 4": [[206, "day-4"], [209, "day-4"], [221, "day-4"], [222, "day-4"], [231, "day-4"], [232, "day-4"], [286, "day-4"]], "Recommended Tutorials": [[206, "recommended-tutorials"]], "After Work Party": [[206, "after-work-party"], [237, "after-work-party"]], "Python Basics (28.9.2020 - 30.9.2020)": [[207, "python-basics-28-9-2020-30-9-2020"], [383, "python-basics-28-9-2020-30-9-2020"]], "Iterables": [[208, "Iterables"]], "set constructor": [[208, "set-constructor"]], "Fast vs. Simple": [[208, "Fast-vs.-Simple"]], "for, Iterables, range and Generators": [[208, "for,-Iterables,-range-and-Generators"]], "Tuples, Tuple Unpacking, Returning Multiple Values from Functions": [[208, "Tuples,-Tuple-Unpacking,-Returning-Multiple-Values-from-Functions"]], "Object Oriented Programming": [[208, "Object-Oriented-Programming"], [258, "Object-Oriented-Programming"], [271, "Object-Oriented-Programming"], [282, "object-oriented-programming"], [296, "object-oriented-programming"], [298, "object-oriented-programming"], [299, "object-oriented-programming"], [302, "object-oriented-programming"], [303, "object-oriented-programming"], [308, "object-oriented-programming"], [314, "object-oriented-programming"], [317, "object-oriented-programming"], [320, "object-oriented-programming"], [321, "object-oriented-programming"], [324, "object-oriented-programming"], [330, "object-oriented-programming"], [336, "object-oriented-programming"], [342, "object-oriented-programming"], [343, "object-oriented-programming"], [346, "object-oriented-programming"], [347, "object-oriented-programming"], [472, "object-oriented-programming"], [1046, "object-oriented-programming"]], "datetime": [[208, "datetime"], [235, "datetime"], [290, "datetime"]], "Python Basic and Advanced (19.10.2020 - 22.10.2020)": [[209, "python-basic-and-advanced-19-10-2020-22-10-2020"]], "Additional Topics, brought in by Thomas": [[209, "additional-topics-brought-in-by-thomas"]], "Notebook": [[209, "notebook"], [230, "notebook"], [245, "Notebook"], [365, "notebook"]], "Tutorials": [[209, "tutorials"], [237, "tutorials"]], "Linux on Raspberry Pi": [[210, "linux-on-raspberry-pi"]], "Cloud Machine": [[210, "cloud-machine"]], "Raspberry on Participant\u2019s Desks": [[210, "raspberry-on-participant-s-desks"]], "Basic security": [[210, "basic-security"]], "Interlude: SD Card Setup (No Bloody Disk Imager)": [[210, "interlude-sd-card-setup-no-bloody-disk-imager"]], "GPIO, using sysfs interface": [[210, "gpio-using-sysfs-interface"]], "In the Wild: Watchdog": [[210, "in-the-wild-watchdog"]], "TODO": [[210, "todo"], [352, "todo"], [353, "todo"], [354, "todo"], [1146, "todo"]], "Support Material": [[210, "support-material"]], "Python Basics (23.11.2020 - 25.11.2020)": [[211, "python-basics-23-11-2020-25-11-2020"], [383, "python-basics-23-11-2020-25-11-2020"]], "Exercise: JSON": [[211, "exercise-json"]], "Linux Basics (30.11.2020 - 3.12.2020)": [[212, "linux-basics-30-11-2020-3-12-2020"], [383, "linux-basics-30-11-2020-3-12-2020"]], "6 Grundlegende Sprachelemente": [[213, "6-Grundlegende-Sprachelemente"]], "6.1 Syntax und Semantik": [[213, "6.1-Syntax-und-Semantik"]], "Zur Syntax mit der Einr\u00fcckung \u2026": [[213, "Zur-Syntax-mit-der-Einr\u00fcckung-..."]], "In Python k\u00f6nnen Variablen ihren Typ \u00e4ndern": [[213, "In-Python-k\u00f6nnen-Variablen-ihren-Typ-\u00e4ndern"]], "Kommentare": [[213, "Kommentare"]], "6.2 Grundlegende Elemente einer Sprache": [[213, "6.2-Grundlegende-Elemente-einer-Sprache"]], "6.3 Standarddatentypen (elementare Datentypen)": [[213, "6.3-Standarddatentypen-(elementare-Datentypen)"]], "Integers sind beliebig gro\u00df": [[213, "Integers-sind-beliebig-gro\u00df"]], "Vergleichsoperatoren": [[213, "Vergleichsoperatoren"]], "Operator Pr\u00e4zedenz: Punkt vor Strichrechnung": [[213, "Operator-Pr\u00e4zedenz:-Punkt-vor-Strichrechnung"]], "Floor Division": [[213, "Floor-Division"]], "Modulo Operator: %": [[213, "Modulo-Operator:-%"]], "(Un\u00e4rer) Negations Operator": [[213, "(Un\u00e4rer)-Negations-Operator"]], "Operator Pr\u00e4zedenz erzwingen": [[213, "Operator-Pr\u00e4zedenz-erzwingen"]], "Strings gibts auch (Zeichenketten)": [[213, "Strings-gibts-auch-(Zeichenketten)"]], "Raw Strings": [[213, "Raw-Strings"], [235, "Raw-Strings"], [252, "Raw-Strings"], [258, "Raw-Strings"], [280, "Raw-Strings"], [310, "Raw-Strings"], [1075, "raw-strings"]], "f-Strings": [[213, "f-Strings"], [332, "f-Strings"]], "Konvertierungen": [[213, "Konvertierungen"]], "Boolean": [[213, "Boolean"], [239, "Boolean"], [242, "Boolean"], [250, "Boolean"], [252, "Boolean"], [262, "Boolean"], [265, "Boolean"], [338, "Boolean"], [1064, "boolean"]], "Pr\u00e4zendenzregeln: and vor or": [[213, "Pr\u00e4zendenzregeln:-and-vor-or"]], "6.4 Literale f\u00fcr primitive Datentypen": [[213, "6.4-Literale-f\u00fcr-primitive-Datentypen"]], "6.5 Variablen und Konstanten": [[213, "6.5-Variablen-und-Konstanten"]], "6.6 Operatoren": [[213, "6.6-Operatoren"]], "6.7 Ausdr\u00fccke und Operatorrangfolgen": [[213, "6.7-Ausdr\u00fccke-und-Operatorrangfolgen"]], "6.8 \u00dcbungen": [[213, "6.8-\u00dcbungen"]], "Zwei Variablen vertauschen": [[213, "Zwei-Variablen-vertauschen"]], "Zwei Variablen vertauschen mit Tuple Unpacking": [[213, "Zwei-Variablen-vertauschen-mit-Tuple-Unpacking"]], "\u00dcbung 1, 5.": [[213, "\u00dcbung-1,-5."]], "7 Kontrollstrukturen": [[213, "7-Kontrollstrukturen"]], "7.1 Anweisungen und Folgen": [[213, "7.1-Anweisungen-und-Folgen"]], "7.2 Bedingungen und Kontrollstrukturen": [[213, "7.2-Bedingungen-und-Kontrollstrukturen"]], "7.3 Grundlagen zu Verzweigungen": [[213, "7.3-Grundlagen-zu-Verzweigungen"]], "7.4 Bedingte Anweisung": [[213, "7.4-Bedingte-Anweisung"]], "7.5 Verzweigung": [[213, "7.5-Verzweigung"]], "7.6 Geschachtelte Verzweigung": [[213, "7.6-Geschachtelte-Verzweigung"]], "7.7 Mehrfache Verzweigung (Fallauswahl)": [[213, "7.7-Mehrfache-Verzweigung-(Fallauswahl)"]], "7.8 Schleifen": [[213, "7.8-Schleifen"]], "7.9 Z\u00e4hlergesteuerte Schleifen (Iteration)": [[213, "7.9-Z\u00e4hlergesteuerte-Schleifen-(Iteration)"]], "7.10 Kopfgesteuerte bedingte Schleife": [[213, "7.10-Kopfgesteuerte-bedingte-Schleife"]], "7.11 Fu\u00dfgesteuerte bedingte Schleife": [[213, "7.11-Fu\u00dfgesteuerte-bedingte-Schleife"]], "(jf) break und continue": [[213, "(jf)-break-und-continue"]], "(jf) Sequential Datatypes": [[213, "(jf)-Sequential-Datatypes"]], "(jf) for Loops": [[213, "(jf)-for-Loops"]], "Iteration mit Dictionaries": [[213, "Iteration-mit-Dictionaries"]], "(jf) The range() Function": [[213, "(jf)-The-range()-Function"]], "7.12 Schnell\u00fcbersicht": [[213, "7.12-Schnell\u00fcbersicht"]], "7.13 Sprunganweisungen": [[213, "7.13-Sprunganweisungen"]], "7.14 Endlosschleifen": [[213, "7.14-Endlosschleifen"]], "7.15 \u00dcbungen": [[213, "7.15-\u00dcbungen"]], "8 Elementare Datenstrukturen": [[213, "8-Elementare-Datenstrukturen"]], "8.1 Warum werden Datenstrukturen ben\u00f6tigt?": [[213, "8.1-Warum-werden-Datenstrukturen-ben\u00f6tigt?"]], "(jf) Compound Datatypes": [[213, "(jf)-Compound-Datatypes"]], "(jf) References, (Im)mutability": [[213, "(jf)-References,-(Im)mutability"]], "(jf) Laufzeitverhalten bei der Suche (der in Operator)": [[213, "(jf)-Laufzeitverhalten-bei-der-Suche-(der-in-Operator)"]], "Liste": [[213, "Liste"]], "Set": [[213, "Set"], [234, "Set"], [235, "Set"], [239, "Set"], [239, "id1"], [242, "Set"], [245, "Set"], [245, "id1"], [252, "Set"], [265, "Set"], [268, "Set"], [280, "Set"], [283, "Set"], [283, "id5"], [290, "Set"], [300, "Set"], [304, "Set"], [322, "Set"], [326, "Set"], [338, "Set"], [348, "Set"]], "8.2 Arrays": [[213, "8.2-Arrays"]], "8.3 Eindimensionale Arrays": [[213, "8.3-Eindimensionale-Arrays"]], "8.4 Records": [[213, "8.4-Records"]], "8.5 Zeichenketten": [[213, "8.5-Zeichenketten"]], "8.6 Tupel und Listen": [[213, "8.6-Tupel-und-Listen"]], "sorted, reversed": [[213, "sorted,-reversed"]], "8.7 Dictionaries": [[213, "8.7-Dictionaries"]], "(jf) Records in Python": [[213, "(jf)-Records-in-Python"]], "8.8 Mengen": [[213, "8.8-Mengen"]], "8.9 Besondere Datenstrukturen anhand von Stapel (Stack) und Schlangen (Queue)": [[213, "8.9-Besondere-Datenstrukturen-anhand-von-Stapel-(Stack)-und-Schlangen-(Queue)"]], "8.10 \u00dcbungen": [[213, "8.10-\u00dcbungen"]], "\u00dcbung 1": [[213, "\u00dcbung-1"]], "Versuch 1: in und index()": [[213, "Versuch-1:-in-und-index()"]], "Versuch 2: Zur\u00fcck zu while \u2026": [[213, "Versuch-2:-Zur\u00fcck-zu-while-..."]], "Versuch 3: hybrid potschert mit for": [[213, "Versuch-3:-hybrid-potschert-mit-for"]], "Versuch 4: supergscheit mit for und enumerate()": [[213, "Versuch-4:-supergscheit-mit-for-und-enumerate()"]], "9 Methoden, Prozeduren und Funktionen": [[213, "9-Methoden,-Prozeduren-und-Funktionen"]], "Funktionspointer (so heissts in C): Funktionsobjekte (Python)": [[213, "Funktionspointer-(so-heissts-in-C):-Funktionsobjekte-(Python)"]], "(jf) Primzahlenbeispiel mit Funktion": [[213, "(jf)-Primzahlenbeispiel-mit-Funktion"]], "(jf) Local vs. Global Scope": [[213, "(jf)-Local-vs.-Global-Scope"]], "Laufzeitfehler: Variable existiert nicht": [[213, "Laufzeitfehler:-Variable-existiert-nicht"]], "Lokale Variable": [[213, "Lokale-Variable"]], "Globale Variable (lesen)": [[213, "Globale-Variable-(lesen)"]], "Globale Variable (schreiben/zuweisen)": [[213, "Globale-Variable-(schreiben/zuweisen)"]], "Fehlerfall von Peter": [[213, "Fehlerfall-von-Peter"]], "9.1 Unterprogramme": [[213, "9.1-Unterprogramme"]], "9.2 Parameter\u00fcbergabe": [[213, "9.2-Parameter\u00fcbergabe"]], "9.3 Parameter\u00fcbergabe als Wert": [[213, "9.3-Parameter\u00fcbergabe-als-Wert"]], "9.4 Parameter\u00fcbergabe \u00fcber Referenzen": [[213, "9.4-Parameter\u00fcbergabe-\u00fcber-Referenzen"]], "9.5 R\u00fcckgabewerte von Funktionen oder Methoden": [[213, "9.5-R\u00fcckgabewerte-von-Funktionen-oder-Methoden"]], "9.6 Innere Funktionen - Closures": [[213, "9.6-Innere-Funktionen---Closures"]], "9.7 Standardbibliotheken und Built-in-Funktionalit\u00e4ten": [[213, "9.7-Standardbibliotheken-und-Built-in-Funktionalit\u00e4ten"]], "9.8 \u00dcbungen": [[213, "9.8-\u00dcbungen"]], "Programmierung Grundlagen (13. und 14.1.2021)": [[214, "programmierung-grundlagen-13-und-14-1-2021"]], "Struktur": [[214, "struktur"]], "Herdt Kapitel 6: Grundlegende Sprachelemente": [[214, "herdt-kapitel-6-grundlegende-sprachelemente"], [1194, "herdt-kapitel-6-grundlegende-sprachelemente"]], "Herdt Kapitel 7: Kontrollstrukturen": [[214, "herdt-kapitel-7-kontrollstrukturen"], [1194, "herdt-kapitel-7-kontrollstrukturen"]], "Verzweigung": [[214, "verzweigung"], [1194, "verzweigung"]], "Schleifen": [[214, "schleifen"], [1194, "schleifen"]], "Herdt Kapitel 8: Elementare Datenstrukturen": [[214, "herdt-kapitel-8-elementare-datenstrukturen"], [1194, "herdt-kapitel-8-elementare-datenstrukturen"]], "Herdt Kapitel 9: Methoden, Prozeduren und Funktionen": [[214, "herdt-kapitel-9-methoden-prozeduren-und-funktionen"], [1194, "herdt-kapitel-9-methoden-prozeduren-und-funktionen"]], "Python Basics (22.2.2021 - 24.2.2021)": [[216, "python-basics-22-2-2021-24-2-2021"], [383, "python-basics-22-2-2021-24-2-2021"]], "Links (ToDo)": [[216, "links-todo"]], "Linux Kernel Driver Development Basics (14.12.2020)": [[217, "linux-kernel-driver-development-basics-14-12-2020"]], "Books": [[217, "books"], [267, "books"], [309, "books"], [1131, "books"]], "Python Advanced": [[218, "Python-Advanced"]], "Data Types Recap": [[218, "Data-Types-Recap"]], "Sequential Datatypes": [[218, "Sequential-Datatypes"], [250, "Sequential-Datatypes"], [262, "Sequential-Datatypes"], [332, "Sequential-Datatypes"], [1067, "sequential-datatypes"], [1067, "id1"]], "Slicing etc.": [[218, "Slicing-etc."]], "Mapping Types (Dictionary, und mehr)": [[218, "Mapping-Types-(Dictionary,-und-mehr)"]], "Sets": [[218, "Sets"], [218, "id1"], [226, "Sets"], [344, "Sets"], [1080, "sets"]], "for Schleife, ganz kurz": [[218, "for-Schleife,-ganz-kurz"]], "Tuple": [[218, "Tuple"], [242, "Tuple"], [245, "Tuple"], [252, "Tuple"], [265, "Tuple"], [268, "Tuple"], [280, "Tuple"], [338, "Tuple"], [344, "Tuple"]], "Funktionen mit mehreren Returnwerten (bzw. Tuple Unpacking)": [[218, "Funktionen-mit-mehreren-Returnwerten-(bzw.-Tuple-Unpacking)"]], "Iteration \u00fcber Containerdatentypen": [[218, "Iteration-\u00fcber-Containerdatentypen"]], "Listen": [[218, "Listen"], [252, "Listen"], [360, "Listen"]], "Was heisst \u201cUntypisiert\u201d?": [[218, "Was-heisst-%22Untypisiert%22?"]], "Wir l\u00f6schen den Integer": [[218, "Wir-l\u00f6schen-den-Integer"]], "Iterator Protocol, for Loops": [[218, "Iterator-Protocol,-for-Loops"]], "Iterable: Der Begriff": [[218, "Iterable:-Der-Begriff"]], "Zufall": [[218, "Zufall"]], "Regular Expressions": [[218, "Regular-Expressions"], [271, "Regular-Expressions"], [283, "Regular-Expressions"], [332, "Regular-Expressions"], [338, "Regular-Expressions"], [922, "regular-expressions"]], "enumerate()": [[218, "enumerate()"], [226, "enumerate()"], [229, "enumerate()"], [265, "enumerate()"], [283, "enumerate()"], [300, "enumerate()"], [322, "enumerate()"], [344, "enumerate()"]], "JSON": [[218, "JSON"], [235, "JSON"], [245, "JSON"], [271, "JSON"], [280, "JSON"], [315, "JSON"], [318, "JSON"]], "2021-03-15": [[219, "id1"]], "Exercises (auf Github)": [[219, "exercises-auf-github"]], "Jupyter Notebook": [[219, "jupyter-notebook"], [221, "jupyter-notebook"], [238, "jupyter-notebook"], [240, "jupyter-notebook"], [243, "jupyter-notebook"], [249, "jupyter-notebook"], [254, "jupyter-notebook"], [257, "jupyter-notebook"], [260, "jupyter-notebook"], [360, "Jupyter-Notebook"], [1137, "jupyter-notebook"]], "Download": [[219, null], [221, null]], "Hallo Jupyter Notebook": [[220, "Hallo-Jupyter-Notebook"]], "Syntax": [[220, "Syntax"], [290, "Syntax"], [332, "Syntax"], [344, "Syntax"], [360, "Syntax"], [360, "id1"]], "Raw strings": [[220, "Raw-strings"]], "Variablen": [[220, "Variablen"], [252, "Variablen"]], "Tuple Unpacking": [[220, "Tuple-Unpacking"], [262, "Tuple-Unpacking"], [280, "Tuple-Unpacking"], [290, "Tuple-Unpacking"], [326, "Tuple-Unpacking"], [332, "Tuple-Unpacking"], [344, "Tuple-Unpacking"], [359, "Tuple-Unpacking"], [360, "Tuple-Unpacking"], [360, "id2"]], "Speicher, Memory Management": [[220, "Speicher,-Memory-Management"]], "Mutable vs. Immutable": [[220, "Mutable-vs.-Immutable"], [271, "Mutable-vs.-Immutable"]], "Wie sch\u00fctze ich mich davor?": [[220, "Wie-sch\u00fctze-ich-mich-davor?"]], "Aber!!!!": [[220, "Aber!!!!"]], "Dictionary": [[220, "Dictionary"], [226, "Dictionary"], [234, "Dictionary"], [235, "Dictionary"], [239, "Dictionary"], [239, "id2"], [242, "Dictionary"], [245, "Dictionary"], [245, "id2"], [252, "Dictionary"], [265, "Dictionary"], [268, "Dictionary"], [280, "Dictionary"], [283, "Dictionary"], [283, "id4"], [290, "Dictionary"], [300, "Dictionary"], [304, "Dictionary"], [310, "Dictionary"], [322, "Dictionary"], [326, "Dictionary"], [338, "Dictionary"], [344, "Dictionary"], [348, "Dictionary"]], "Exercise: Liste von gemischten Datentypen": [[220, "Exercise:-Liste-von-gemischten-Datentypen"]], "Konstruktoren": [[220, "Konstruktoren"]], "Tag 2: Wiederholung, Fragen": [[220, "Tag-2:-Wiederholung,-Fragen"]], "for und range()": [[220, "for-und-range()"]], "Objektidentit\u00e4t": [[220, "Objektidentit\u00e4t"]], "Das with Statement": [[220, "Das-with-Statement"], [229, "Das-with-Statement"]], "Tuple Unpacking, Dictionary Iteration": [[220, "Tuple-Unpacking,-Dictionary-Iteration"]], "String Operationen": [[220, "String-Operationen"]], "enumerate(), und verlorene Indices": [[220, "enumerate(),-und-verlorene-Indices"]], "NumPy, matplotlib": [[220, "NumPy,-matplotlib"]], "Interpolation mittels scipy": [[220, "Interpolation-mittels-scipy"]], "Python Basic and Advanced (22.3.2021 - 25.3.2021)": [[221, "python-basic-and-advanced-22-3-2021-25-3-2021"]], "(Tutorial) Videos": [[221, "tutorial-videos"]], "Linux Basics, Shell Scripting (2021-03-29)": [[222, "linux-basics-shell-scripting-2021-03-29"]], "Course Details": [[222, null]], "Course Preparation": [[222, "course-preparation"], [275, "course-preparation"], [277, "course-preparation"], [285, "course-preparation"]], "SSH": [[222, "ssh"], [370, "ssh"]], "Linux and/or Shell on Windows Host": [[222, "linux-and-or-shell-on-windows-host"]], "Editor Support for Shell Scripting": [[222, "editor-support-for-shell-scripting"]], "Programmierung Grundlagen (12. und 13.4.2021)": [[224, "programmierung-grundlagen-12-und-13-4-2021"]], "Syntax etc.": [[226, "Syntax-etc."], [258, "Syntax-etc."], [304, "Syntax-etc."], [1059, "syntax-etc"]], "Comments vs. Documentation": [[226, "Comments-vs.-Documentation"], [1059, "comments-vs-documentation"]], "Variables": [[226, "Variables"], [239, "Variables"], [242, "Variables"], [258, "Variables"], [268, "Variables"], [300, "Variables"], [304, "Variables"], [326, "Variables"], [332, "Variables"], [338, "Variables"], [344, "Variables"], [348, "Variables"], [360, "Variables"], [1061, "variables"]], "Assignment Fun": [[226, "Assignment-Fun"], [265, "Assignment-Fun"], [1061, "assignment-fun"]], "Assignment Details": [[226, "Assignment-Details"], [258, "Assignment-Details"], [265, "Assignment-Details"], [344, "Assignment-Details"], [348, "Assignment-Details"], [360, "Assignment-Details"], [1061, "assignment-details"]], "Operators": [[226, "Operators"], [262, "Operators"]], "Integer Arithmetic": [[226, "Integer-Arithmetic"]], "String Methods": [[226, "String-Methods"], [344, "String-Methods"], [359, "String-Methods"]], "Datatype Conversions": [[226, "Datatype-Conversions"], [250, "Datatype-Conversions"], [252, "Datatype-Conversions"], [258, "Datatype-Conversions"], [262, "Datatype-Conversions"], [265, "Datatype-Conversions"], [283, "Datatype-Conversions"], [300, "Datatype-Conversions"], [304, "Datatype-Conversions"], [310, "Datatype-Conversions"], [322, "Datatype-Conversions"], [326, "Datatype-Conversions"], [332, "Datatype-Conversions"], [344, "Datatype-Conversions"], [360, "Datatype-Conversions"], [1062, "datatype-conversions"]], "Strings k\u00f6nnen alles!": [[226, "Strings-k\u00f6nnen-alles!"]], "Complex Datatypes": [[226, "Complex-Datatypes"], [360, "Complex-Datatypes"]], "List (mutable)": [[226, "List-(mutable)"], [239, "List-(mutable)"], [332, "List-(mutable)"]], "extend()? Iterable?": [[226, "extend()?-Iterable?"]], "Tuple (wie Liste, nur immutable)": [[226, "Tuple-(wie-Liste,-nur-immutable)"]], "in Operator": [[226, "in-Operator"], [265, "in-Operator"]], "Iteration \u00fcber Daten: mittels for": [[226, "Iteration-\u00fcber-Daten:-mittels-for"]], "enumerate(), sum(), map(), und so weiter": [[226, "enumerate(),-sum(),-map(),-und-so-weiter"]], "sum()": [[226, "sum()"]], "map()": [[226, "map()"], [229, "map()"]], "list() function": [[226, "list()-function"]], "Performance: in Operator, und list und set": [[226, "Performance:-in-Operator,-und-list-und-set"]], "Dynamische Evaluierung: eval()": [[226, "Dynamische-Evaluierung:-eval()"]], "Python Grundlagen (2021-05-03 - 2021-05-05)": [[227, "python-grundlagen-2021-05-03-2021-05-05"], [383, "python-grundlagen-2021-05-03-2021-05-05"]], "Weiterf\u00fchrende Information": [[227, "weiterfuhrende-information"]], "Visual Studio Code": [[227, "visual-studio-code"], [243, "visual-studio-code"], [1131, "visual-studio-code"]], "Python Beginner Tutorials": [[227, "python-beginner-tutorials"], [267, "python-beginner-tutorials"], [1131, "python-beginner-tutorials"]], "NumPy and Data Science Tutorials": [[227, "numpy-and-data-science-tutorials"], [267, "numpy-and-data-science-tutorials"], [270, "numpy-and-data-science-tutorials"], [303, "numpy-and-data-science-tutorials"], [1131, "numpy-and-data-science-tutorials"]], "PyPI (Installing Modules that don\u2019t come as Batteries)": [[227, "pypi-installing-modules-that-don-t-come-as-batteries"], [1131, "pypi-installing-modules-that-don-t-come-as-batteries"]], "Git, and Github": [[227, "git-and-github"], [1131, "git-and-github"]], "Conference Talks": [[227, "conference-talks"], [303, "conference-talks"], [1131, "conference-talks"]], "Python Grundlagen (Jupyter Notebook)": [[228, "python-grundlagen-jupyter-notebook"], [241, "python-grundlagen-jupyter-notebook"], [244, "python-grundlagen-jupyter-notebook"], [247, "python-grundlagen-jupyter-notebook"], [266, "python-grundlagen-jupyter-notebook"], [269, "python-grundlagen-jupyter-notebook"], [272, "python-grundlagen-jupyter-notebook"], [281, "python-grundlagen-jupyter-notebook"], [284, "python-grundlagen-jupyter-notebook"], [305, "python-grundlagen-jupyter-notebook"]], "import zipfile": [[229, "import-zipfile"]], "Read Contents \u2026": [[229, "Read-Contents-..."]], "Extract One Member": [[229, "Extract-One-Member"]], "All in One, Using with": [[229, "All-in-One,-Using-with"]], "Functionality: Methods": [[229, "Functionality:-Methods"]], "Class Attributes vs. Instance Attributes (not Variables)": [[229, "Class-Attributes-vs.-Instance-Attributes-(not-Variables)"]], "Instance Attributes": [[229, "Instance-Attributes"]], "Class Attributes": [[229, "Class-Attributes"]], "Public, Protected, Private": [[229, "Public,-Protected,-Private"]], "Properties": [[229, "Properties"], [258, "Properties"], [487, "properties"], [1051, "properties"]], "Functions, Positional and Keyword Arguments": [[229, "Functions,-Positional-and-Keyword-Arguments"]], "Positional Arguments": [[229, "Positional-Arguments"]], "Keyword Arguments": [[229, "Keyword-Arguments"], [250, "Keyword-Arguments"], [361, "Keyword-Arguments"], [1073, "keyword-arguments"]], "Mixing Positional and Keyword Arguments": [[229, "Mixing-Positional-and-Keyword-Arguments"]], "The range() Function": [[229, "The-range()-Function"], [235, "The-range()-Function"], [242, "The-range()-Function"]], "Functional Programming, Iteration, yield, map(), filter(), \u2026": [[229, "Functional-Programming,-Iteration,-yield,-map(),-filter(),-..."]], "Iterable": [[229, "Iterable"], [245, "Iterable"]], "list(), and iterable?": [[229, "list(),-and-iterable?"]], "Tuple Unpacking and the Rest": [[229, "Tuple-Unpacking-and-the-Rest"]], "Decorators, etc.": [[229, "Decorators,-etc."]], "NoneType and None": [[229, "NoneType-and-None"]], "File I/O": [[229, "File-I/O"], [258, "File-I/O"], [265, "File-I/O"], [268, "File-I/O"], [300, "File-I/O"], [304, "File-I/O"], [338, "File-I/O"], [344, "File-I/O"], [357, "File-I/O"], [968, "file-i-o"], [1081, "file-i-o"]], "Iteration, yield, Recursion": [[229, "Iteration,-yield,-Recursion"]], "Recursion": [[229, "Recursion"]], "Iteratively Calculating Fibonacci Numbers -> yield": [[229, "Iteratively-Calculating-Fibonacci-Numbers-->-yield"]], "map(), filter(), zip(), enumerate() \u2026": [[229, "map(),-filter(),-zip(),-enumerate()-..."]], "map(), and several other ways to do the same": [[229, "map(),-and-several-other-ways-to-do-the-same"]], "zip()": [[229, "zip()"]], "filter(), and several other methods to do the same": [[229, "filter(),-and-several-other-methods-to-do-the-same"]], "OSError, errno": [[229, "OSError,-errno"]], "The platform Module, sys.path": [[229, "The-platform-Module,-sys.path"]], "os.path": [[229, "os.path"], [245, "os.path"], [252, "os.path"]], "Exceptions und so (assert())": [[229, "Exceptions-und-so-(assert())"]], "AssertionError": [[229, "AssertionError"]], "Random Questions": [[229, "Random-Questions"]], "Slicing": [[229, "Slicing"], [252, "Slicing"], [258, "Slicing"], [283, "Slicing"], [304, "Slicing"], [1152, "slicing"]], "OO": [[229, "OO"], [297, "oo"], [374, "oo"], [568, "oo"]], "String Formatting": [[229, "String-Formatting"], [235, "String-Formatting"], [1076, "string-formatting"]], "import datetime": [[229, "import-datetime"]], "Python Advanced (2021-05-25 - 2021-05-27)": [[230, "python-advanced-2021-05-25-2021-05-27"]], "Predefined streams": [[230, "predefined-streams"]], "PCAP Exam Syllabus": [[230, "pcap-exam-syllabus"], [243, "pcap-exam-syllabus"]], "2021-06-09": [[230, "id1"]], "Programmieren mit C (2021-06-14 - 2021-06-18)": [[231, "programmieren-mit-c-2021-06-14-2021-06-18"], [383, "programmieren-mit-c-2021-06-14-2021-06-18"]], "Preparation: Tools": [[231, "preparation-tools"]], "State machine": [[231, "state-machine"]], "Regular Course Topics": [[231, "regular-course-topics"]], "Development Tools (Git & CMake) Installation Massacre": [[231, "development-tools-git-cmake-installation-massacre"]], "Regular Course Material": [[231, "regular-course-material"], [231, "id1"]], "Group Project Kick-Off :-)": [[231, "group-project-kick-off"]], "Exercise: Encapsulate Index Access to userdb": [[231, "exercise-encapsulate-index-access-to-userdb"]], "Group Project (Use Case Driven Course Flow :-) )": [[231, "group-project-use-case-driven-course-flow"]], "Day 5": [[231, "day-5"], [232, "day-5"], [286, "day-5"]], "Pointer Recap": [[231, "pointer-recap"]], "On With Group Project": [[231, "on-with-group-project"]], "C++ Basics": [[231, "c-basics"]], "Pointers, Pointer Arithmetic, and the Standard Template Library (STL)": [[231, "pointers-pointer-arithmetic-and-the-standard-template-library-stl"]], "The C++ Programming Language (2021-07-12 - 2021-07-16)": [[232, "the-c-programming-language-2021-07-12-2021-07-16"]], "Setup for the new kids": [[232, "setup-for-the-new-kids"]], "Recapitulate some C": [[232, "recapitulate-some-c"]], "Group project review": [[232, "group-project-review"]], "Jump into C++": [[232, "jump-into-c"]], "Regular Topics": [[232, "regular-topics"], [232, "id2"], [232, "id4"]], "Toolchain: C/C++ Build (How Complicated Can Things Be?)": [[232, "toolchain-c-c-build-how-complicated-can-things-be"]], "Exercises: Using the C++ Toolbox": [[232, "exercises-using-the-c-toolbox"]], "Finish First \u201cUser Database\u201d Functionality": [[232, "finish-first-user-database-functionality"]], "Unit Testing": [[232, "unit-testing"], [289, "unit-testing"], [292, "unit-testing"], [373, "unit-testing"]], "GTest Installation": [[232, "gtest-installation"]], "Git Workflows": [[232, "git-workflows"]], "Day X": [[232, "day-x"]], "Smart Pointers, Recap": [[232, "smart-pointers-recap"]], "std::map": [[232, "std-map"], [646, "std-map"]], "OO, and Polymorphism": [[232, "oo-and-polymorphism"]], "Programmierung Grundlagen, anhand von Python (2. und 3.8.2021)": [[233, "programmierung-grundlagen-anhand-von-python-2-und-3-8-2021"], [383, "programmierung-grundlagen-anhand-von-python-2-und-3-8-2021"]], "Variablen und Datentypen": [[233, "variablen-und-datentypen"], [249, "variablen-und-datentypen"], [261, "variablen-und-datentypen"]], "Kontrollstrukturen": [[233, "kontrollstrukturen"], [249, "kontrollstrukturen"], [250, "Kontrollstrukturen"], [261, "kontrollstrukturen"]], "Datenstrukturen": [[234, "Datenstrukturen"]], "List": [[234, "List"], [235, "List"], [242, "List"], [245, "List"], [265, "List"], [268, "List"], [280, "List"], [283, "List"], [310, "List"], [322, "List"], [338, "List"], [348, "List"], [1159, "list"]], "Iteration": [[234, "Iteration"], [234, "id1"], [235, "Iteration"], [235, "id1"], [245, "Iteration"], [268, "Iteration"], [280, "Iteration"], [322, "Iteration"], [348, "Iteration"], [348, "id1"]], "User Datenbank: Showcase Full Stack Development": [[234, "User-Datenbank:-Showcase-Full-Stack-Development"]], "5: Response kommt von der DB": [[234, "5:-Response-kommt-von-der-DB"]], "6: Aufgabe: Formulieren eines JSON Strings, damit man diese Daten \u00fcber die HTTP Verbindung zum Client/Browser schicken kann.": [[234, "6:-Aufgabe:-Formulieren-eines-JSON-Strings,-damit-man-diese-Daten-\u00fcber-die-HTTP-Verbindung-zum-Client/Browser-schicken-kann."]], "7. Jetzt schickman weg: vom Server (PHP) zum Browser (JS)": [[234, "7.-Jetzt-schickman-weg:-vom-Server-(PHP)-zum-Browser-(JS)"]], "8. in JS JSON string empfangen": [[234, "8.-in-JS-JSON-string-empfangen"]], "9. Nun muessen wir den JSON-String in JS verwandlen": [[234, "9.-Nun-muessen-wir-den-JSON-String-in-JS-verwandlen"]], "Iterable?": [[235, "Iterable?"]], "List Comprehension, Generator Expression": [[235, "List-Comprehension,-Generator-Expression"]], "Literals": [[235, "Literals"], [512, "literals"]], "Quoting?": [[235, "Quoting?"], [239, "Quoting?"]], "Multiline Strings": [[235, "Multiline-Strings"], [239, "Multiline-Strings"], [332, "Multiline-Strings"], [1075, "multiline-strings"]], "Functionality": [[235, "Functionality"], [857, "functionality"]], "strip() and friends": [[235, "strip()-and-friends"]], "f-Strings (since Python 3.6)": [[235, "f-Strings-(since-Python-3.6)"]], "Parsing date formats": [[235, "Parsing-date-formats"]], "Read a Cleaned-Up SAP Export": [[236, "read-a-cleaned-up-sap-export"]], "Requirement": [[236, "requirement"], [511, "requirement"], [533, "requirement"], [534, "requirement"], [535, "requirement"], [539, "requirement"], [540, "requirement"], [541, "requirement"], [542, "requirement"], [543, "requirement"], [544, "requirement"], [960, "requirement"], [967, "requirement"], [1087, "requirement"], [1088, "requirement"], [1109, "requirement"], [1120, "requirement"], [1121, "requirement"], [1122, "requirement"], [1123, "requirement"], [1125, "requirement"], [1126, "requirement"], [1127, "requirement"], [1128, "requirement"]], "Solution": [[236, "solution"], [490, "solution"], [492, "solution"], [495, "solution"], [1167, "solution"]], "Python Grundlagen (2021-08-23 - 2021-08-25)": [[237, "python-grundlagen-2021-08-23-2021-08-25"]], "Initial Terminology": [[239, "Initial-Terminology"]], "Sequence": [[239, "Sequence"]], "Tuple (immutable)": [[239, "Tuple-(immutable)"], [332, "Tuple-(immutable)"]], "References, (Im)mutability": [[239, "References,-(Im)mutability"], [252, "References,-(Im)mutability"], [265, "References,-(Im)mutability"], [268, "References,-(Im)mutability"], [283, "References,-(Im)mutability"], [290, "References,-(Im)mutability"], [304, "References,-(Im)mutability"], [310, "References,-(Im)mutability"], [310, "id1"], [322, "References,-(Im)mutability"], [344, "References,-(Im)mutability"], [1071, "references-im-mutability"]], "Iteration, for, and range()": [[239, "Iteration,-for,-and-range()"]], "Iterator Protocol (not so important for beginners)": [[239, "Iterator-Protocol-(not-so-important-for-beginners)"]], "Iteration, and Compound Datatypes": [[239, "Iteration,-and-Compound-Datatypes"]], "List and Tuple": [[239, "List-and-Tuple"]], "matplotlib": [[239, "matplotlib"], [271, "matplotlib"]], "File I/O, and Strings": [[239, "File-I/O,-and-Strings"]], "Raw strings: Windows path names": [[239, "Raw-strings:-Windows-path-names"]], "Miscellaneous String Methods": [[239, "Miscellaneous-String-Methods"], [250, "Miscellaneous-String-Methods"], [252, "Miscellaneous-String-Methods"], [258, "Miscellaneous-String-Methods"], [268, "Miscellaneous-String-Methods"], [283, "Miscellaneous-String-Methods"], [304, "Miscellaneous-String-Methods"], [310, "Miscellaneous-String-Methods"], [332, "Miscellaneous-String-Methods"], [338, "Miscellaneous-String-Methods"], [348, "Miscellaneous-String-Methods"], [1077, "miscellaneous-string-methods"]], "Python Basics (2021-08-31 - 2021-09-01)": [[240, "python-basics-2021-08-31-2021-09-01"], [383, "python-basics-2021-08-31-2021-09-01"]], "Numerics, and AI": [[240, "numerics-and-ai"]], "Mountains near Graz": [[240, "mountains-near-graz"]], "2021-11-17": [[242, "2021-11-17"]], "Enter Tuples": [[242, "Enter-Tuples"]], "Datatype Conversions, Type Names": [[242, "Datatype-Conversions,-Type-Names"]], "NoneType": [[242, "NoneType"]], "Short Circuit Evaluation of Boolean Expression": [[242, "Short-Circuit-Evaluation-of-Boolean-Expression"]], "Exercise: Mixed List": [[242, "Exercise:-Mixed-List"]], "Python Documentation": [[242, "Python-Documentation"]], "for": [[242, "for"], [304, "for"], [348, "for"], [360, "for"]], "Iteration over Compound Datatypes": [[242, "Iteration-over-Compound-Datatypes"], [252, "Iteration-over-Compound-Datatypes"]], "File IO": [[242, "File-IO"], [258, "File-IO"], [286, "file-io"], [290, "File-IO"], [326, "File-IO"], [332, "File-IO"]], "Generators, Iterator Protocol, for": [[242, "Generators,-Iterator-Protocol,-for"]], "Common Sequence Operation": [[242, "Common-Sequence-Operation"]], "Comprehensions": [[242, "Comprehensions"], [245, "Comprehensions"], [258, "Comprehensions"], [290, "Comprehensions"], [322, "Comprehensions"]], "List, Iterable? WTF?": [[242, "List,-Iterable?-WTF?"]], "Dict and iterable": [[242, "Dict-and-iterable"]], "More on Lists": [[242, "More-on-Lists"], [250, "More-on-Lists"], [265, "More-on-Lists"]], "More on Dictionaries": [[242, "More-on-Dictionaries"], [250, "More-on-Dictionaries"]], "References, Mutability": [[242, "References,-Mutability"]], "CSV": [[242, "CSV"], [259, "csv"], [267, "csv"], [304, "CSV"]], "Python Basics (2021-11-17 - 2021-11-19)": [[243, "python-basics-2021-11-17-2021-11-19"], [383, "python-basics-2021-11-17-2021-11-19"]], "Python (Core Topics)": [[243, "python-core-topics"]], "Python Standard Library": [[243, "python-standard-library"]], "More About Strings": [[245, "More-About-Strings"], [262, "More-About-Strings"], [310, "More-About-Strings"], [332, "More-About-Strings"], [338, "More-About-Strings"], [344, "More-About-Strings"], [1075, "more-about-strings"]], "List, Tuple": [[245, "List,-Tuple"], [300, "List,-Tuple"], [304, "List,-Tuple"]], "Tuple Unpacking: What Else": [[245, "Tuple-Unpacking:-What-Else"]], "Iterator Protocol": [[245, "Iterator-Protocol"], [252, "Iterator-Protocol"], [283, "Iterator-Protocol"], [300, "Iterator-Protocol"], [304, "Iterator-Protocol"], [332, "Iterator-Protocol"]], "yield": [[245, "yield"], [268, "yield"]], "Everything is an Object of a Type": [[245, "Everything-is-an-Object-of-a-Type"]], "Generators, used more creatively": [[245, "Generators,-used-more-creatively"]], "Exception Handling and Exception Types": [[245, "Exception-Handling-and-Exception-Types"]], "2021-12-17": [[245, "2021-12-17"]], "Shift Operators": [[245, "Shift-Operators"]], "PCAP Sample Exam": [[245, "PCAP-Sample-Exam"]], "System Errors": [[245, "System-Errors"]], "Python Advanced (2021-12-01 - 2021-12-03)": [[246, "python-advanced-2021-12-01-2021-12-03"], [383, "python-advanced-2021-12-01-2021-12-03"]], "Basics Recap": [[246, "basics-recap"], [299, "basics-recap"]], "Group Project Preparation": [[246, "group-project-preparation"]], "Hmmm?": [[246, "hmmm"]], "C/C++ Programming (2021-12-06 - 2021-12-10, 2022-01-24 - 2022-02-04)": [[248, "c-c-programming-2021-12-06-2021-12-10-2022-01-24-2022-02-04"], [383, "c-c-programming-2021-12-06-2021-12-10-2022-01-24-2022-02-04"]], "2021-12-06": [[248, "id1"]], "2021-12-07": [[248, "id2"]], "2021-12-08": [[248, "id3"]], "2021-12-09": [[248, "id4"]], "2022-01-24": [[248, "id5"]], "Undefined Behavior": [[248, "undefined-behavior"]], "Modularization": [[248, "modularization"], [428, "modularization"]], "2022-01-25": [[248, "id6"]], "C++ and OO (Classes)": [[248, "c-and-oo-classes"]], "Modularization (again)": [[248, "modularization-again"]], "2022-01-26": [[248, "id7"]], "Modularization: Repeating Important Topics (Quickly)": [[248, "modularization-repeating-important-topics-quickly"]], "Classes (continued)": [[248, "classes-continued"]], "2022-01-27": [[248, "id8"]], "2022-01-28": [[248, "id9"]], "Standard Template Library: Container Templates": [[248, "standard-template-library-container-templates"]], "2022-01-31": [[248, "id10"]], "2022-02-01": [[248, "id11"]], "Algorithms": [[248, "algorithms"], [635, "algorithms"]], "Functors": [[248, "functors"]], "Unified Modeling Language (UML)": [[248, "unified-modeling-language-uml"]], "Exercise (Using All From Today)": [[248, "exercise-using-all-from-today"]], "2022-02-02": [[248, "id12"]], "Associative Container: std::map": [[248, "associative-container-std-map"]], "Exceptions, and Exception Handling": [[248, "exceptions-and-exception-handling"]], "2022-02-03": [[248, "id13"]], "2022-02-04": [[248, "id14"]], "C++11: A New Language": [[248, "c-11-a-new-language"]], "Dynamic Allocation, Smart Pointers": [[248, "dynamic-allocation-smart-pointers"]], "2022-02-07: Start of Exercise Week": [[248, "start-of-exercise-week"]], "Programmierung Grundlagen, anhand von Python (2022-01-17 - 2022-01-10)": [[249, "programmierung-grundlagen-anhand-von-python-2022-01-17-2022-01-10"], [383, "programmierung-grundlagen-anhand-von-python-2022-01-17-2022-01-10"]], "2022-01-17": [[250, "2022-01-17"]], "Variables and Datatypes": [[250, "Variables-and-Datatypes"]], "Comments vs Docstrings": [[250, "Comments-vs-Docstrings"]], "Integer (Ganze Zahl)": [[250, "Integer-(Ganze-Zahl)"]], "Integer Numbers: Arithmetic": [[250, "Integer-Numbers:-Arithmetic"], [262, "Integer-Numbers:-Arithmetic"], [1062, "integer-numbers-arithmetic"]], "Some Methods": [[250, "Some-Methods"]], "String Formatting: f-Strings": [[250, "String-Formatting:-f-Strings"]], "More about Strings": [[250, "More-about-Strings"]], "if": [[250, "if"], [290, "if"]], "2022-01-18": [[250, "2022-01-18"]], "Miscellanea": [[250, "Miscellanea"]], "Braces: Single Element Tuples?": [[250, "Braces:-Single-Element-Tuples?"]], "Ranges -> range() (hour_of_day)": [[250, "Ranges-->-range()-(hour_of_day)"]], "while Loops": [[250, "while-Loops"], [252, "while-Loops"], [265, "while-Loops"], [332, "while-Loops"], [348, "while-Loops"], [1066, "while-loops"], [1066, "id1"]], "break and continue": [[250, "break-and-continue"], [425, "break-and-continue"], [425, "id1"], [1066, "break-and-continue"]], "yield, Generator, Iteration Protocol": [[250, "yield,-Generator,-Iteration-Protocol"]], "Sequence Membership": [[250, "Sequence-Membership"], [1067, "sequence-membership"]], "list (mutable)": [[250, "list-(mutable)"]], "tuple (immutable)": [[250, "tuple-(immutable)"]], "dict (mutable)": [[250, "dict-(mutable)"]], "set (mutable)": [[250, "set-(mutable)"]], "Why Index Based Iteration is not Always the Best Way to Iterate": [[250, "Why-Index-Based-Iteration-is-not-Always-the-Best-Way-to-Iterate"]], "How to get Indexes if There are None? (enumerate(), and Tuple Unpacking)": [[250, "How-to-get-Indexes-if-There-are-None?-(enumerate(),-and-Tuple-Unpacking)"]], "Default Parameters": [[250, "Default-Parameters"], [252, "Default-Parameters"], [361, "Default-Parameters"], [1073, "default-parameters"]], "List Comprehensions": [[250, "List-Comprehensions"], [262, "List-Comprehensions"]], "Iteration over Dictionaries": [[250, "Iteration-over-Dictionaries"]], "Building Dictionaries": [[250, "Building-Dictionaries"], [1079, "building-dictionaries"]], "More on Sets": [[250, "More-on-Sets"]], "with: Context Managers": [[250, "with:-Context-Managers"]], "Strings Intro": [[252, "Strings-Intro"]], "Doc Strings": [[252, "Doc-Strings"]], "Object Identity": [[252, "Object-Identity"]], "Integers": [[252, "Integers"], [262, "Integers"], [265, "Integers"], [283, "Integers"], [290, "Integers"], [310, "Integers"], [326, "Integers"], [332, "Integers"], [338, "Integers"], [348, "Integers"]], "Variablen? Datenypen?": [[252, "Variablen?-Datenypen?"]], "Objects, Classes": [[252, "Objects,-Classes"]], "Python Standard Libarary Examples": [[252, "Python-Standard-Libarary-Examples"]], "collections": [[252, "collections"]], "ChainMap": [[252, "ChainMap"]], "deque": [[252, "deque"]], "Suchalgorithmen und Datenstrukturen (Ausflug)": [[252, "Suchalgorithmen-und-Datenstrukturen-(Ausflug)"]], "Slice Assignment": [[252, "Slice-Assignment"], [1068, "slice-assignment"]], "Lists are mutable": [[252, "Lists-are-mutable"]], "Shallow copy and deep copy": [[252, "Shallow-copy-and-deep-copy"]], "else": [[252, "else"], [258, "else"], [348, "else"]], "for Loops, range()": [[252, "for-Loops,-range()"]], "Default Parameters: Pitfalls": [[252, "Default-Parameters:-Pitfalls"]], "dict.fromkeys()": [[252, "dict.fromkeys()"], [265, "dict.fromkeys()"]], "Generators": [[252, "Generators"], [258, "Generators"], [298, "generators"], [299, "generators"], [303, "generators"], [320, "generators"], [324, "generators"]], "join, split": [[252, "join,-split"]], "strip, lstrip, rstrip": [[252, "strip,-lstrip,-rstrip"]], "Python Basics (2022-02-23 - 2022-02-25)": [[253, "python-basics-2022-02-23-2022-02-25"], [383, "python-basics-2022-02-23-2022-02-25"]], "Data Structures": [[253, "data-structures"]], "OS Things": [[253, "os-things"]], "Data Science": [[253, "data-science"], [321, "data-science"], [322, "Data-Science"], [344, "Data-Science"]], "Wiederholung": [[255, "Wiederholung"]], "Mutable/Immutable": [[255, "Mutable/Immutable"]], "Attribute": [[255, "Attribute"]], "Sequentielle vs. Konstante Suchzeit": [[255, "Sequentielle-vs.-Konstante-Suchzeit"]], "Exceptions": [[255, "Exceptions"], [271, "Exceptions"], [296, "exceptions"], [330, "exceptions"], [336, "exceptions"], [342, "exceptions"], [346, "exceptions"], [568, "exceptions"], [615, "exceptions"], [616, "exceptions"]], "for vs. while, range()": [[255, "for-vs.-while,-range()"]], "String Methods (some)": [[255, "String-Methods-(some)"]], "eval()": [[255, "eval()"], [265, "eval()"], [322, "eval()"]], "exec()": [[255, "exec()"], [271, "exec()"], [332, "exec()"]], "Dictionary Iteration": [[255, "Dictionary-Iteration"], [348, "Dictionary-Iteration"]], "Classes, Attributes, OO": [[255, "Classes,-Attributes,-OO"]], "Types and Instances": [[255, "Types-and-Instances"]], "Metaprogramming? Types? What is a Type?": [[255, "Metaprogramming?-Types?-What-is-a-Type?"]], "OO Everywhere": [[255, "OO-Everywhere"]], "Dictionary Operations": [[255, "Dictionary-Operations"]], "collections.defaultdict": [[255, "collections.defaultdict"], [280, "collections.defaultdict"]], "Python Advanced (2022-03-15 - 2022-03-17, 2022-03-31)": [[256, "python-advanced-2022-03-15-2022-03-17-2022-03-31"]], "2022-03-15": [[256, "id1"]], "2022-03-16": [[256, "id2"]], "Test Driven Development": [[256, "test-driven-development"], [298, "test-driven-development"], [320, "test-driven-development"], [321, "test-driven-development"]], "2022-03-17": [[256, "id3"]], "2022-03-31": [[256, "id4"]], "Hello World": [[258, "Hello-World"], [387, "hello-world"], [1057, "hello-world"]], "Blahblah": [[258, "Blahblah"], [625, "blahblah"], [1056, "blahblah"]], "Object Oriented?": [[258, "Object-Oriented?"]], "MQTT": [[258, "MQTT"], [324, "mqtt"], [1147, "mqtt"]], "Commandline Arguments": [[258, "Commandline-Arguments"], [439, "commandline-arguments"], [439, "id1"]], "Object Lifetime": [[258, "Object-Lifetime"]], "Boolean, Short Circuit Evaluation": [[258, "Boolean,-Short-Circuit-Evaluation"]], "More String Methods": [[258, "More-String-Methods"], [258, "id1"]], "Dictionary Preview": [[258, "Dictionary-Preview"]], "list: Mutable": [[258, "list:-Mutable"]], "list(): explicit constructor": [[258, "list():-explicit-constructor"]], "tuple: Immutable": [[258, "tuple:-Immutable"]], "dict: Mutable": [[258, "dict:-Mutable"]], "set: Mutable": [[258, "set:-Mutable"]], "List comprehension": [[258, "List-comprehension"]], "DIctionary Comprehension": [[258, "DIctionary-Comprehension"]], "Set Comprehension": [[258, "Set-Comprehension"], [322, "Set-Comprehension"], [332, "Set-Comprehension"], [1027, "set-comprehension"]], "max": [[258, "max"]], "for, enumerate()": [[258, "for,-enumerate()"]], "Iteratoren, Generatoren": [[258, "Iteratoren,-Generatoren"]], "Generatoren": [[258, "Generatoren"]], "split und join": [[258, "split-und-join"]], "strip()": [[258, "strip()"]], "dict vs. OrderedDict": [[258, "dict-vs.-OrderedDict"]], "Duck Typing": [[258, "Duck-Typing"], [1043, "duck-typing"]], "Interfaces": [[258, "Interfaces"], [664, "interfaces"]], "Implementation Inheritance": [[258, "Implementation-Inheritance"]], "Method Resolution Order (MRO), and super()": [[258, "Method-Resolution-Order-(MRO),-and-super()"]], "__bases__": [[258, "__bases__"]], "__mro__": [[258, "__mro__"]], "Object Layout (self)": [[258, "Object-Layout-(self)"]], "More from OO": [[258, "More-from-OO"]], "Calling Base Class Constructor (Many Ways)": [[258, "Calling-Base-Class-Constructor-(Many-Ways)"]], "Name Mangling (\u201cprivate\u201d Members)": [[258, "Name-Mangling-(%22private%22-Members)"]], "Yet Another Example From Udemy": [[258, "Yet-Another-Example-From-Udemy"]], "Exception Handling": [[258, "Exception-Handling"], [289, "exception-handling"], [292, "exception-handling"], [297, "exception-handling"], [376, "exception-handling"], [1030, "exception-handling"]], "Order of except Clauses": [[258, "Order-of-except-Clauses"]], "finally": [[258, "finally"]], "lambda": [[258, "lambda"]], "map(), filter()": [[258, "map(),-filter()"], [322, "map(),-filter()"]], "Generators, Iteration Protocol": [[258, "Generators,-Iteration-Protocol"]], "Class Variables (as Opposed to Instance Variables)": [[258, "Class-Variables-(as-Opposed-to-Instance-Variables)"]], "Python (2022-03-23, 2022-03-30, 2022-04-19 - 2022-03-21)": [[259, "python-2022-03-23-2022-03-30-2022-04-19-2022-03-21"], [383, "python-2022-03-23-2022-03-30-2022-04-19-2022-03-21"]], "2022-03-23: Basics": [[259, "basics"]], "2022-03-30: Basics": [[259, "id1"]], "2022-04-19, 2022-04-20, 2022-04-21: Advanced": [[259, "advanced"]], "Plan For The Wild Part": [[259, "plan-for-the-wild-part"]], "Programmierung Grundlagen, anhand von Python (2022-04-05 - 2022-04-08)": [[261, "programmierung-grundlagen-anhand-von-python-2022-04-05-2022-04-08"], [383, "programmierung-grundlagen-anhand-von-python-2022-04-05-2022-04-08"]], "Discussion: Flow Charts?": [[261, "discussion-flow-charts"]], "BlahBlah": [[262, "BlahBlah"], [265, "BlahBlah"], [268, "BlahBlah"], [332, "BlahBlah"]], "Interactive": [[262, "Interactive"]], "For Beginners": [[262, "For-Beginners"]], "Not For Beginners?": [[262, "Not-For-Beginners?"]], "Strings, 1st Explanation": [[262, "Strings,-1st-Explanation"]], "Operator Precedence": [[262, "Operator-Precedence"], [265, "Operator-Precedence"], [1062, "operator-precedence"]], "Floating Point Numbers": [[262, "Floating-Point-Numbers"], [1062, "floating-point-numbers"]], "Docstrings": [[262, "Docstrings"], [268, "Docstrings"], [360, "Docstrings"]], "Einschub: String-Vergleich vs. Integer-Vergleich": [[262, "Einschub:-String-Vergleich-vs.-Integer-Vergleich"]], "Random Numbers": [[262, "Random-Numbers"]], "Indexing and Slicing": [[262, "Indexing-and-Slicing"], [310, "Indexing-and-Slicing"], [1068, "indexing-and-slicing"]], "for Loops": [[262, "for-Loops"], [332, "for-Loops"], [390, "for-loops"], [1069, "for-loops"]], "range()": [[262, "range()"], [290, "range()"], [338, "range()"], [344, "range()"], [348, "range()"]], "Filterketten": [[262, "Filterketten"]], "Zen": [[262, "Zen"]], "Compound Datatypes By Example: List, Tuple": [[262, "Compound-Datatypes-By-Example:-List,-Tuple"], [1063, "compound-datatypes-by-example-list-tuple"]], "Compound Datatypes By Example: Dictionary": [[262, "Compound-Datatypes-By-Example:-Dictionary"], [1063, "compound-datatypes-by-example-dictionary"]], "Datensatz als Dictionary?": [[262, "Datensatz-als-Dictionary?"]], "JSON (Javascript Object Notation)": [[262, "JSON-(Javascript-Object-Notation)"]], "Compound Datatypes By Example: Set": [[262, "Compound-Datatypes-By-Example:-Set"], [1063, "compound-datatypes-by-example-set"]], "Das Letzte Beispiel am Letzten Tag": [[262, "Das-Letzte-Beispiel-am-Letzten-Tag"]], "Python Basics (2022-04-25 - 2022-04-27)": [[264, "python-basics-2022-04-25-2022-04-27"], [383, "python-basics-2022-04-25-2022-04-27"]], "Strings und Quotes": [[265, "Strings-und-Quotes"]], "Comments vs. Docstrings": [[265, "Comments-vs.-Docstrings"]], "Variables and Types": [[265, "Variables-and-Types"]], "Swap": [[265, "Swap"]], "Integers are Infinitely long": [[265, "Integers-are-Infinitely-long"]], "Floating Point Comparison": [[265, "Floating-Point-Comparison"]], "Mutability/Immutability": [[265, "Mutability/Immutability"]], "Exercise: Digit To English Word": [[265, "Exercise:-Digit-To-English-Word"]], "Exercise: Determine Maximum of Two Numbers": [[265, "Exercise:-Determine-Maximum-of-Two-Numbers"], [1095, "exercise-determine-maximum-of-two-numbers"], [1105, "exercise-determine-maximum-of-two-numbers"]], "Ranges": [[265, "Ranges"], [741, "ranges"]], "Exercise: Sort out Duplicates": [[265, "Exercise:-Sort-out-Duplicates"]], "Algorithmic Complexity": [[265, "Algorithmic-Complexity"]], "More On Dictionaries": [[265, "More-On-Dictionaries"]], "More On Sets": [[265, "More-On-Sets"]], "eval(), json": [[265, "eval(),-json"]], "Encoding": [[265, "Encoding"], [289, "encoding"], [310, "Encoding"], [326, "Encoding"], [326, "id1"], [365, "encoding"], [1144, "encoding"]], "Python (2022-05-02 - 2022-05-05)": [[267, "python-2022-05-02-2022-05-05"], [383, "python-2022-05-02-2022-05-05"]], "Control Flow and Iteration": [[267, "control-flow-and-iteration"]], "Encoding, Strings, and File I/O": [[267, "encoding-strings-and-file-i-o"]], "Excursion: CAN Communication, OO, Modules": [[267, "excursion-can-communication-oo-modules"]], "Modules": [[267, "modules"], [280, "Modules"], [321, "modules"], [365, "modules"], [736, "modules"], [1038, "modules"]], "CSV, Functions": [[267, "csv-functions"]], "PyPI, Virtual Environments": [[267, "pypi-virtual-environments"]], "Requirements Engineering, Test Driven Development": [[267, "requirements-engineering-test-driven-development"]], "More On DataTypes": [[267, "more-on-datatypes"]], "Random Topics": [[267, "random-topics"]], "Standard Library": [[267, "standard-library"]], "Hello Jupyter Notebook": [[268, "Hello-Jupyter-Notebook"]], "Syntax etc": [[268, "Syntax-etc"]], "Mutability": [[268, "Mutability"], [300, "Mutability"]], "Removing Elements": [[268, "Removing-Elements"], [646, "removing-elements"]], "Nested Lists?": [[268, "Nested-Lists?"]], "while loops, and else": [[268, "while-loops,-and-else"]], "for loops (and else)": [[268, "for-loops-(and-else)"]], "The range() Function, Iterator Protocol": [[268, "The-range()-Function,-Iterator-Protocol"]], "Encoding, and String": [[268, "Encoding,-and-String"]], "Regular Expression": [[268, "Regular-Expression"]], "f-Strings (since Python 3.6 !!)": [[268, "f-Strings-(since-Python-3.6-!!)"]], "Tuples Containing Only One Element": [[268, "Tuples-Containing-Only-One-Element"]], "Iterables, Lists, and the itertools Modules": [[268, "Iterables,-Lists,-and-the-itertools-Modules"]], "itertools.chain()": [[268, "itertools.chain()"]], "Destructor?": [[268, "Destructor?"]], "Tuple Unpacking on Dictionaries": [[268, "Tuple-Unpacking-on-Dictionaries"]], "Python Advanced (2022-05-16 - 2022-05-18)": [[270, "python-advanced-2022-05-16-2022-05-18"], [383, "python-advanced-2022-05-16-2022-05-18"]], "Project Management": [[270, "project-management"], [321, "project-management"], [372, "project-management"], [373, "project-management"], [377, "project-management"]], "Unit Testing, Test Driven Development": [[270, "unit-testing-test-driven-development"]], "Object Priented Programming": [[270, "object-priented-programming"]], "OO: next exercise (CSV as always \ud83d\ude44)": [[270, "oo-next-exercise-csv-as-always-rolling-eyes"]], "Exercise: Exception Handling": [[270, "exercise-exception-handling"]], "Standesregister nach SQLite3": [[270, "standesregister-nach-sqlite3"]], "XML/Element Tree": [[270, "xml-element-tree"]], "Projektabschlusstag": [[270, "projektabschlusstag"]], "Basic Python": [[270, "basic-python"], [1193, "basic-python"]], "Assert": [[271, "Assert"]], "The id() function": [[271, "The-id()-function"]], "class Person": [[271, "class-Person"]], "Functions That Do Not Return Anything": [[271, "Functions-That-Do-Not-Return-Anything"]], "Classes, Attributes, und so (Dictionaries Everywhere!)": [[271, "Classes,-Attributes,-und-so-(Dictionaries-Everywhere!)"]], "Globale, lokale, und Class Variablen": [[271, "Globale,-lokale,-und-Class-Variablen"]], "Defining my Own Exceptions": [[271, "Defining-my-Own-Exceptions"]], "Dictionary Lookup, keys() etc.": [[271, "Dictionary-Lookup,-keys()-etc."]], "Integers, Strings, und so": [[271, "Integers,-Strings,-und-so"]], "Vorbesprechung 2022-05-11": [[273, "vorbesprechung-2022-05-11"]], "Legende": [[273, "legende"]], "Neuerungen in C++ seit 2011": [[273, "neuerungen-in-c-seit-2011"]], "Neuerungen in C++ 14": [[273, "neuerungen-in-c-14"]], "Neuerungen in C++ 17": [[273, "neuerungen-in-c-17"]], "Neuerungen in C++ 20 (Ausblick)": [[273, "neuerungen-in-c-20-ausblick"]], "C++: A New Language Starting In 2011": [[274, "c-a-new-language-starting-in-2011"], [275, "c-a-new-language-starting-in-2011"]], "Metadata": [[274, "metadata"], [275, "metadata"], [277, "metadata"], [915, "metadata"]], "Introduction": [[274, "introduction"], [275, "introduction"], [277, "introduction"], [296, "introduction"], [297, "introduction"], [386, "introduction"], [465, "introduction"], [496, "introduction"], [591, "introduction"], [688, "introduction"], [747, "introduction"], [833, "introduction"], [1030, "introduction"], [403, "introduction"]], "Pythonicity (Thank You: Readablility and Writability)": [[274, "pythonicity-thank-you-readablility-and-writability"], [275, "pythonicity-thank-you-readablility-and-writability"], [277, "pythonicity-thank-you-readablility-and-writability"]], "Range Based for Loops": [[274, "range-based-for-loops"], [275, "range-based-for-loops"], [277, "range-based-for-loops"], [334, "range-based-for-loops"]], "Tuple Unpacking (err, Structured Binding)": [[274, "tuple-unpacking-err-structured-binding"], [275, "tuple-unpacking-err-structured-binding"], [277, "tuple-unpacking-err-structured-binding"], [334, "tuple-unpacking-err-structured-binding"]], "Duck Typing (err, auto) Without A Duck": [[274, "duck-typing-err-auto-without-a-duck"], [275, "duck-typing-err-auto-without-a-duck"], [277, "duck-typing-err-auto-without-a-duck"], [334, "duck-typing-err-auto-without-a-duck"]], "Things That Simply Deserved Fixing Since Ages": [[274, "things-that-simply-deserved-fixing-since-ages"], [275, "things-that-simply-deserved-fixing-since-ages"], [277, "things-that-simply-deserved-fixing-since-ages"]], "Brace Initialization": [[274, "brace-initialization"], [275, "brace-initialization"], [277, "brace-initialization"], [334, "brace-initialization"], [335, "brace-initialization"]], "New OO keywords: override, final, default, delete": [[274, "new-oo-keywords-override-final-default-delete"], [275, "new-oo-keywords-override-final-default-delete"], [277, "new-oo-keywords-override-final-default-delete"], [334, "new-oo-keywords-override-final-default-delete"]], "Strongly Typed enum": [[274, "strongly-typed-enum"], [275, "strongly-typed-enum"], [277, "strongly-typed-enum"], [334, "strongly-typed-enum"], [691, "strongly-typed-enum"]], "Delegating Constructor": [[274, "delegating-constructor"], [275, "delegating-constructor"], [277, "delegating-constructor"], [334, "delegating-constructor"], [696, "delegating-constructor"]], "nullptr": [[274, "nullptr"], [275, "nullptr"], [277, "nullptr"], [334, "nullptr"], [704, "nullptr"]], "Smart Pointers": [[274, "smart-pointers"], [275, "smart-pointers"], [277, "smart-pointers"], [297, "smart-pointers"], [335, "smart-pointers"], [568, "smart-pointers"]], "Moving, \u201cRValue References\u201d": [[274, "moving-rvalue-references"], [275, "moving-rvalue-references"]], "Functions (std::bind<>, std::function<>, Lambdas)": [[274, "functions-std-bind-std-function-lambdas"], [275, "functions-std-bind-std-function-lambdas"], [277, "functions-std-bind-std-function-lambdas"]], "Work Environment": [[275, "work-environment"], [277, "work-environment"], [295, "work-environment"], [296, "work-environment"], [297, "work-environment"], [372, "work-environment"]], "Skeleton Project": [[275, "skeleton-project"], [277, "skeleton-project"], [610, "skeleton-project"]], "Linux Basics (2022-10-03 - 2022-10-05)": [[276, "linux-basics-2022-10-03-2022-10-05"], [383, "linux-basics-2022-10-03-2022-10-05"]], "C++: A New Language Starting In 2011 (2022-10-11 - 2022-10-13)": [[277, "c-a-new-language-starting-in-2011-2022-10-11-2022-10-13"], [383, "c-a-new-language-starting-in-2011-2022-10-11-2022-10-13"]], "Moving, \u201cRValue References\u201d, And Perfect Forwarding": [[277, "moving-rvalue-references-and-perfect-forwarding"]], "News in C++20 (2023-06-13)": [[277, "news-in-c-20-2023-06-13"]], "Coroutines and C++23 Generators": [[277, "coroutines-and-c-23-generators"]], "Ranges And Views": [[277, "ranges-and-views"]], "Concepts": [[277, "concepts"], [334, "concepts"], [706, "concepts"]], "Design- and Architectural Patterns With C++ (2022-10-24 - 2022-10-26)": [[278, "design-and-architectural-patterns-with-c-2022-10-24-2022-10-26"], [383, "design-and-architectural-patterns-with-c-2022-10-24-2022-10-26"]], "Monday": [[278, "monday"]], "Tuesday": [[278, "tuesday"]], "Wednesday": [[278, "wednesday"]], "Python: Tour-De-Force (2022-11-07 - 2022-11-10, 2022-12-01)": [[279, "python-tour-de-force-2022-11-07-2022-11-10-2022-12-01"]], "Up Front: Project Management": [[279, "up-front-project-management"], [298, "up-front-project-management"], [320, "up-front-project-management"]], "Object Oriented Programming: Classes": [[279, "object-oriented-programming-classes"]], "Exercise Series: CSV": [[279, "exercise-series-csv"]], "Missing Pieces: Encoding, Unit Testing": [[279, "missing-pieces-encoding-unit-testing"]], "Exercise Series: CSV, JSON": [[279, "exercise-series-csv-json"]], "Iteration, Generators": [[279, "iteration-generators"]], "Going Dynamic: type(), exec()": [[279, "going-dynamic-type-exec"]], "More OO: Inheritance, Abstract Base Classes": [[279, "more-oo-inheritance-abstract-base-classes"]], "Group Project Kickoff": [[279, "group-project-kickoff"], [299, "group-project-kickoff"], [321, "group-project-kickoff"], [324, "group-project-kickoff"]], "Data Structures Recap": [[279, "data-structures-recap"]], "Miscellaneous Livehacking": [[279, "miscellaneous-livehacking"]], "Function Arguments, Closures, Decorators": [[279, "function-arguments-closures-decorators"], [314, "function-arguments-closures-decorators"]], "Exceptions, with": [[279, "exceptions-with"], [314, "exceptions-with"], [317, "exceptions-with"]], "Package Management": [[279, "package-management"]], "Videos": [[279, "videos"], [325, "videos"]], "Beginner": [[279, "beginner"], [303, "beginner"]], "Advanced": [[279, "advanced"], [303, "advanced"]], "Fun": [[279, "fun"]], "Python (2022-10-17)": [[280, "Python-(2022-10-17)"]], "Tuple Unpacking, Lists Iteration, And Such": [[280, "Tuple-Unpacking,-Lists-Iteration,-And-Such"]], "Variables, Types": [[280, "Variables,-Types"]], "Immutable? References?": [[280, "Immutable?-References?"]], "And range()?": [[280, "And-range()?"]], "More About Dictionaries": [[280, "More-About-Dictionaries"], [280, "id1"], [283, "More-About-Dictionaries"], [310, "More-About-Dictionaries"], [332, "More-About-Dictionaries"], [338, "More-About-Dictionaries"], [344, "More-About-Dictionaries"], [348, "More-About-Dictionaries"], [1079, "more-about-dictionaries"]], "More About Lists": [[280, "More-About-Lists"], [283, "More-About-Lists"], [310, "More-About-Lists"], [332, "More-About-Lists"], [338, "More-About-Lists"], [344, "More-About-Lists"], [348, "More-About-Lists"], [1078, "more-about-lists"]], "Python (2022-11-16 - 2022-11-18)": [[282, "python-2022-11-16-2022-11-18"], [283, "Python-(2022-11-16---2022-11-18)"], [383, "python-2022-11-16-2022-11-18"]], "Control Flow, Sequences, Iteration": [[282, "control-flow-sequences-iteration"], [289, "control-flow-sequences-iteration"], [292, "control-flow-sequences-iteration"], [302, "control-flow-sequences-iteration"], [303, "control-flow-sequences-iteration"], [308, "control-flow-sequences-iteration"], [309, "control-flow-sequences-iteration"], [309, "id2"], [330, "control-flow-sequences-iteration"], [331, "control-flow-sequences-iteration"], [336, "control-flow-sequences-iteration"], [337, "control-flow-sequences-iteration"], [342, "control-flow-sequences-iteration"], [343, "control-flow-sequences-iteration"], [346, "control-flow-sequences-iteration"], [347, "control-flow-sequences-iteration"]], "More Datatypes": [[282, "more-datatypes"], [289, "more-datatypes"], [292, "more-datatypes"], [302, "more-datatypes"], [303, "more-datatypes"], [303, "id2"], [308, "more-datatypes"], [309, "more-datatypes"], [330, "more-datatypes"], [331, "more-datatypes"], [336, "more-datatypes"], [342, "more-datatypes"], [343, "more-datatypes"], [346, "more-datatypes"], [388, "more-datatypes"]], "Exercise Series: CSV Files": [[282, "exercise-series-csv-files"], [302, "exercise-series-csv-files"], [303, "exercise-series-csv-files"], [308, "exercise-series-csv-files"], [309, "exercise-series-csv-files"], [330, "exercise-series-csv-files"], [331, "exercise-series-csv-files"], [337, "exercise-series-csv-files"], [342, "exercise-series-csv-files"], [343, "exercise-series-csv-files"], [346, "exercise-series-csv-files"]], "Advanced Language Features": [[282, "advanced-language-features"], [302, "advanced-language-features"], [303, "advanced-language-features"], [308, "advanced-language-features"], [451, "advanced-language-features"]], "Noob Exercises": [[282, "noob-exercises"]], "Object Oriented": [[283, "Object-Oriented"]], "Lists and Tuples": [[283, "Lists-and-Tuples"]], "for, and Iteration, and Generators": [[283, "for,-and-Iteration,-and-Generators"]], "Lists, Dictionaries, Generators, Constructors": [[283, "Lists,-Dictionaries,-Generators,-Constructors"]], "And Lists? Mutable!": [[283, "And-Lists?-Mutable!"]], "Tuples?": [[283, "Tuples?"]], "set": [[283, "set"]], "More About Sets": [[283, "More-About-Sets"], [310, "More-About-Sets"], [338, "More-About-Sets"], [344, "More-About-Sets"], [348, "More-About-Sets"], [1080, "more-about-sets"]], "Comprehensions (List, Dictionary, Set)": [[283, "Comprehensions-(List,-Dictionary,-Set)"], [332, "Comprehensions-(List,-Dictionary,-Set)"], [344, "Comprehensions-(List,-Dictionary,-Set)"], [1027, "comprehensions-list-dictionary-set"]], "Generator Expressions": [[283, "Generator-Expressions"]], "eval and exec": [[283, "eval-and-exec"]], "Linux Basics (2023-01-23 - 2023-01-26)": [[285, "linux-basics-2023-01-23-2023-01-26"], [383, "linux-basics-2023-01-23-2023-01-26"]], "Embedded Linux Systems Programming (2023-02-13 - 2023-02-17)": [[286, "embedded-linux-systems-programming-2023-02-13-2023-02-17"], [383, "embedded-linux-systems-programming-2023-02-13-2023-02-17"]], "WSL For Core Linux Topics": [[286, "wsl-for-core-linux-topics"]], "Cross Development For Hardware Topics": [[286, "cross-development-for-hardware-topics"]], "Day 1: Overview": [[286, "day-1-overview"]], "Introductory Live Hacking": [[286, "introductory-live-hacking"]], "The Shell": [[286, "the-shell"]], "Processes Quick Walk-Through": [[286, "processes-quick-walk-through"]], "Permissions": [[286, "permissions"]], "Development: CMake Quick Intro, And Git Quick Intro": [[286, "development-cmake-quick-intro-and-git-quick-intro"]], "UART": [[286, "uart"]], "SUSI": [[286, "susi"]], "Secure Shell (SSH)": [[286, "secure-shell-ssh"]], "Miscellaneous Hardware": [[286, "miscellaneous-hardware"]], "Group Exercise": [[286, "group-exercise"]], "Untold": [[286, "untold"], [296, "untold"], [299, "untold"]], "More From The Commandline": [[286, "more-from-the-commandline"]], "Multithreading (And C++)": [[286, "multithreading-and-c"]], "Whetting Your Appetite (Jupyter Notebook)": [[287, "Whetting-Your-Appetite-(Jupyter-Notebook)"]], "Filter in Pandas": [[287, "Filter-in-Pandas"]], "Copy vs Reference": [[287, "Copy-vs-Reference"]], "Immutable": [[287, "Immutable"]], "String": [[287, "String"]], "Regex": [[287, "Regex"]], "Whetting Your Appetite (Livehacking Demo)": [[288, "whetting-your-appetite-livehacking-demo"]], "Pipeline Driver": [[288, "pipeline-driver"]], "Virtual Environment Setup": [[288, "virtual-environment-setup"]], "Filter: Add Category: card-payment": [[288, "filter-add-category-card-payment"]], "Filter: Select Uncategorized": [[288, "filter-select-uncategorized"]], "More Categories": [[288, "more-categories"]], "Python For SAP Developers (2023-03-13 - 2023-03-15)": [[289, "python-for-sap-developers-2023-03-13-2023-03-15"], [383, "python-for-sap-developers-2023-03-13-2023-03-15"]], "Day 1 (Basics)": [[289, "day-1-basics"]], "Demo": [[289, "demo"]], "Day 2 (Basics, Continued)": [[289, "day-2-basics-continued"]], "Pandas": [[289, "pandas"], [290, "Pandas"], [292, "pandas"], [296, "pandas"], [321, "pandas"], [1151, "pandas"]], "Hacking About On A SAP Test Dataset": [[289, "hacking-about-on-a-sap-test-dataset"], [293, "hacking-about-on-a-sap-test-dataset"]], "Untold (From Original Agenda)": [[289, "untold-from-original-agenda"]], "OO Introduction": [[289, "oo-introduction"], [292, "oo-introduction"]], "Context Managers (Automatic Cleanup)": [[289, "context-managers-automatic-cleanup"], [292, "context-managers-automatic-cleanup"]], "Iteration, Generators, Comprehensions": [[289, "iteration-generators-comprehensions"], [292, "iteration-generators-comprehensions"]], "Decorators, and Related Topics": [[289, "decorators-and-related-topics"], [292, "decorators-and-related-topics"]], "Machine Learning: Pandas, NumPy, And Algorithms": [[289, "machine-learning-pandas-numpy-and-algorithms"]], "2023-03-13": [[290, "2023-03-13"]], "Comment vs Docstring": [[290, "Comment-vs-Docstring"]], "Mutable? Immutable?": [[290, "Mutable?-Immutable?"]], "Lists": [[290, "Lists"], [290, "id2"], [304, "Lists"], [344, "Lists"]], "Tuples": [[290, "Tuples"]], "DataType Conversiosn": [[290, "DataType-Conversiosn"]], "String, File IO Exercise": [[290, "String,-File-IO-Exercise"]], "Python For SAP Developers (Jupyter Notebook)": [[291, "python-for-sap-developers-jupyter-notebook"]], "Original Agenda: Python For SAP Developers (2023-03-13 - 2023-03-15)": [[292, "original-agenda-python-for-sap-developers-2023-03-13-2023-03-15"]], "Day 1: Basics": [[292, "day-1-basics"], [325, "day-1-basics"]], "Day 2: Outlook Into Advanced Python": [[292, "day-2-outlook-into-advanced-python"]], "Day 3: Domain Specifics": [[292, "day-3-domain-specifics"]], "NumPy": [[292, "numpy"], [321, "numpy"]], "Some Usecases On A Test Dataset From SAP": [[294, "Some-Usecases-On-A-Test-Dataset-From-SAP"]], "Dropping Columns That Contain Only NaN Values": [[294, "Dropping-Columns-That-Contain-Only-NaN-Values"]], "DataFrame.isna()": [[294, "DataFrame.isna()"]], "DataFrame.all() (and any())": [[294, "DataFrame.all()-(and-any())"]], "Column Selection": [[294, "Column-Selection"]], "Dropping Columns": [[294, "Dropping-Columns"]], "Fixing Date Values/Columns, And Operating With Date And Time": [[294, "Fixing-Date-Values/Columns,-And-Operating-With-Date-And-Time"]], "pandas.to_datetime()": [[294, "pandas.to_datetime()"]], "Converting The Entire DateDATE Column To A Workable Type (And Working With It)": [[294, "Converting-The-Entire-DateDATE-Column-To-A-Workable-Type-(And-Working-With-It)"]], "Conversion": [[294, "Conversion"]], "Usage: A Filter": [[294, "Usage:-A-Filter"]], "Modify Rows: Increase All Prices Of One Particular Store By 10%": [[294, "Modify-Rows:-Increase-All-Prices-Of-One-Particular-Store-By-10%"]], "Filter Readability: Combining Filters": [[294, "Filter-Readability:-Combining-Filters"]], "C++ For Embedded Developers (2023-03-20 - 2023-03-23)": [[295, "c-for-embedded-developers-2023-03-20-2023-03-23"]], "Preferred: Ubuntu under Windows (WSL)": [[295, "preferred-ubuntu-under-windows-wsl"], [297, "preferred-ubuntu-under-windows-wsl"]], "Unsupported Environments": [[295, "unsupported-environments"]], "Skeleton Project Setup": [[295, "skeleton-project-setup"], [297, "skeleton-project-setup"]], "Classes, Objects, Methods": [[295, "classes-objects-methods"]], "Heavy Weight OO \ud83d\udcaa": [[295, "heavy-weight-oo-muscle"], [297, "heavy-weight-oo-muscle"]], "Resource Management Pitfalls": [[295, "resource-management-pitfalls"]], "R-Value References/Moving, And Managed Pointers": [[295, "r-value-references-moving-and-managed-pointers"]], "A Little Concurrency": [[295, "a-little-concurrency"]], "Untold So Far": [[295, "untold-so-far"]], "C++ Standard Library": [[295, "c-standard-library"]], "Miscellaneous Topics": [[295, "miscellaneous-topics"]], "Clean Code Development With Python (2023-03-28 - 2023-03-29)": [[296, "clean-code-development-with-python-2023-03-28-2023-03-29"]], "Clean Code?": [[296, "clean-code"], [298, "clean-code"], [299, "clean-code"]], "Demo Hacking": [[296, "demo-hacking"]], "Python Development: Select Topics": [[296, "python-development-select-topics"]], "Built-In Types: Facts": [[296, "built-in-types-facts"]], "for Loops, And The Iterator Protocol": [[296, "for-loops-and-the-iterator-protocol"]], "Day 2: Clean Code? (Software Development: A Craft)": [[296, "day-2-clean-code-software-development-a-craft"]], "Closures, And Function Parameters": [[296, "closures-and-function-parameters"]], "Generators (Again), yield Fixtures, And yield Context Managers": [[296, "generators-again-yield-fixtures-and-yield-context-managers"]], "Decorators (The Ominous @)": [[296, "decorators-the-ominous"]], "Modules And Packages": [[296, "modules-and-packages"], [320, "modules-and-packages"]], "Design Patterns": [[296, "design-patterns"]], "C++ For Embedded Developers (2023-04-18 - 2023-04-20)": [[297, "c-for-embedded-developers-2023-04-18-2023-04-20"], [383, "c-for-embedded-developers-2023-04-18-2023-04-20"]], "Some Details": [[297, "some-details"]], "Standard Template Library": [[297, "standard-template-library"], [658, "standard-template-library"]], "Warm-Up": [[297, "warm-up"]], "Sensor Exercise, Resolved": [[297, "sensor-exercise-resolved"]], "OO, Cont\u2019d": [[297, "oo-cont-d"]], "Smart Pointers (Continued)": [[297, "smart-pointers-continued"]], "Exercises: Containers And Algorithms": [[297, "exercises-containers-and-algorithms"]], "Exercises: OO And Interfaces": [[297, "exercises-oo-and-interfaces"]], "Agenda: Python Advanced (2023-04-24 - 2023-04-26)": [[298, "agenda-python-advanced-2023-04-24-2023-04-26"]], "Day 1: Python Inside Out": [[298, "day-1-python-inside-out"], [299, "day-1-python-inside-out"]], "Exercise Prerequisites": [[298, "exercise-prerequisites"], [320, "exercise-prerequisites"]], "References And Other Pitfalls": [[298, "references-and-other-pitfalls"]], "Looping Constructs (With An Emphasis On The else Clause)": [[298, "looping-constructs-with-an-emphasis-on-the-else-clause"], [320, "looping-constructs-with-an-emphasis-on-the-else-clause"], [324, "looping-constructs-with-an-emphasis-on-the-else-clause"]], "Closures, Decorators And More": [[298, "closures-decorators-and-more"], [299, "closures-decorators-and-more"], [320, "closures-decorators-and-more"], [324, "closures-decorators-and-more"]], "Dynamic Features": [[298, "dynamic-features"], [299, "dynamic-features"], [300, "Dynamic-Features"], [320, "dynamic-features"], [324, "dynamic-features"]], "Error Handling And Recovery": [[298, "error-handling-and-recovery"], [299, "error-handling-and-recovery"], [320, "error-handling-and-recovery"], [321, "error-handling-and-recovery"], [324, "error-handling-and-recovery"]], "Miscellaneous Threading": [[298, "miscellaneous-threading"], [299, "miscellaneous-threading"]], "Day 2: Clean Code (In A Broader Sense), Group Project Kickoff": [[298, "day-2-clean-code-in-a-broader-sense-group-project-kickoff"]], "Group Project: Discussion": [[298, "group-project-discussion"]], "Design Patterns Overview": [[298, "design-patterns-overview"], [299, "design-patterns-overview"]], "Day 3: Group Project": [[298, "day-3-group-project"], [299, "day-3-group-project"]], "Python Advanced (2023-04-24 - 2023-04-26)": [[299, "python-advanced-2023-04-24-2023-04-26"], [383, "python-advanced-2023-04-24-2023-04-26"]], "Day 2: Object Oriented Programming, And Miscellaneous Discussion": [[299, "day-2-object-oriented-programming-and-miscellaneous-discussion"]], "Morning Opening": [[299, "morning-opening"]], "Object Oriented Programming (Continued)": [[299, "object-oriented-programming-continued"]], "Project Setup (IDE Usage?)": [[299, "project-setup-ide-usage"]], "Continue Hacking": [[299, "continue-hacking"]], "Test Driven Development, pytest": [[299, "test-driven-development-pytest"]], "Jupyter Notebook: Python Advanced (2023-04-24 - 2023-04-26)": [[300, "Jupyter-Notebook:-Python-Advanced-(2023-04-24---2023-04-26)"]], "is vs. ==": [[300, "is-vs.-=="]], "Compound DataTypes": [[300, "Compound-DataTypes"]], "class": [[300, "class"]], "Jupyter Notebook (Structure): Python Advanced (2023-04-24 - 2023-04-26)": [[301, "jupyter-notebook-structure-python-advanced-2023-04-24-2023-04-26"]], "Agenda: Python Basics (2023-05-15 - 2023-05-17)": [[302, "agenda-python-basics-2023-05-15-2023-05-17"]], "Python Basics (2023-05-15 - 2023-05-17)": [[303, "python-basics-2023-05-15-2023-05-17"], [304, "Python-Basics-(2023-05-15---2023-05-17)"], [383, "python-basics-2023-05-15-2023-05-17"]], "Morning Awakening": [[303, "morning-awakening"], [347, "morning-awakening"]], "A Bit Of venv, A Bit Of pip": [[303, "a-bit-of-venv-a-bit-of-pip"]], "Modules from Standard Library": [[303, "modules-from-standard-library"], [1131, "modules-from-standard-library"]], "Immutable vs. Mutable": [[304, "Immutable-vs.-Mutable"]], "The range Function": [[304, "The-range-Function"], [1070, "the-range-function"]], "Lambda, And Functional Programming Tools": [[304, "Lambda,-And-Functional-Programming-Tools"]], "Agenda: Linux Basics (2023-05-23 - 2023-05-25)": [[306, "agenda-linux-basics-2023-05-23-2023-05-25"]], "Linux Basics (2023-05-23 - 2023-05-25)": [[307, "linux-basics-2023-05-23-2023-05-25"], [383, "linux-basics-2023-05-23-2023-05-25"]], "Introduction: Concepts and Terminology": [[307, "introduction-concepts-and-terminology"], [867, "introduction-concepts-and-terminology"]], "The Shell (Bash - \u201cBourne Again Shell\u201d)": [[307, "the-shell-bash-bourne-again-shell"], [307, "id1"], [913, "the-shell-bash-bourne-again-shell"]], "Tools: Inspecting Text Files": [[307, "tools-inspecting-text-files"], [923, "tools-inspecting-text-files"]], "File System Permissions": [[307, "file-system-permissions"], [307, "id2"], [888, "file-system-permissions"]], "Morning Wakeup": [[307, "morning-wakeup"], [309, "morning-wakeup"], [335, "morning-wakeup"]], "I/O Redirection And Pipes": [[307, "i-o-redirection-and-pipes"], [874, "i-o-redirection-and-pipes"]], "Archiving and Compression": [[307, "archiving-and-compression"], [856, "archiving-and-compression"], [858, "archiving-and-compression"]], "Networking": [[307, "networking"]], "Processes And Scheduling": [[307, "processes-and-scheduling"]], "SSH: Secure Shell": [[307, "ssh-secure-shell"], [945, "ssh-secure-shell"]], "Shell Scripting (at least some of it)": [[307, "shell-scripting-at-least-some-of-it"]], "Agenda: Python Basics (2023-06-20 - 2023-06-22)": [[308, "agenda-python-basics-2023-06-20-2023-06-22"]], "Python Basics (2023-06-20 - 2023-06-22)": [[309, "python-basics-2023-06-20-2023-06-22"], [310, "Python-Basics-(2023-06-20---2023-06-22)"], [383, "python-basics-2023-06-20-2023-06-22"]], "Day2": [[309, "day2"]], "File I/O, And Encoding": [[309, "file-i-o-and-encoding"]], "Python Videos": [[309, "python-videos"]], "NumPy, Pandas, Matplotlib": [[309, "numpy-pandas-matplotlib"]], "DataTypes": [[310, "DataTypes"], [332, "DataTypes"]], "(Im)mutable?": [[310, "(Im)mutable?"]], "Exercise: Mixed List, Interactive Interpreter": [[310, "Exercise:-Mixed-List,-Interactive-Interpreter"]], "len(), range(), for": [[310, "len(),-range(),-for"]], "Generators, yield": [[310, "Generators,-yield"]], "Other -ables: Callable": [[310, "Other--ables:-Callable"]], "exec() (and eval())": [[310, "exec()-(and-eval())"]], "Formatting (f-Strings)": [[310, "Formatting-(f-Strings)"]], "Python Basics (Jupyter Notebook)": [[311, "python-basics-jupyter-notebook"], [333, "python-basics-jupyter-notebook"]], "Agenda: CMake (2023-07-03)": [[312, "agenda-cmake-2023-07-03"]], "Toolchain Introduction": [[312, "toolchain-introduction"], [328, "toolchain-introduction"], [1186, "toolchain-introduction"]], "Project Structure, Dependencies": [[312, "project-structure-dependencies"], [328, "project-structure-dependencies"], [1186, "project-structure-dependencies"]], "External Dependencies": [[312, "external-dependencies"], [328, "external-dependencies"], [478, "external-dependencies"], [1186, "external-dependencies"]], "Code Generators": [[312, "code-generators"], [328, "code-generators"], [1186, "code-generators"]], "Automatic Testing": [[312, "automatic-testing"], [328, "automatic-testing"], [1186, "automatic-testing"]], "Installation And Deployment": [[312, "installation-and-deployment"], [328, "installation-and-deployment"], [1186, "installation-and-deployment"]], "CMake: An Introduction (2023-07-18)": [[313, "cmake-an-introduction-2023-07-18"], [383, "cmake-an-introduction-2023-07-18"]], "Python Advanced (2023-09-25 - 2023-09-27)": [[314, "python-advanced-2023-09-25-2023-09-27"], [315, "Python-Advanced-(2023-09-25---2023-09-27)"], [383, "python-advanced-2023-09-25-2023-09-27"]], "Recap Of Python Basics Course (Before Summer)": [[314, "recap-of-python-basics-course-before-summer"], [317, "recap-of-python-basics-course-before-summer"]], "Project Management: Requirements, Sandboxing, Testing": [[314, "project-management-requirements-sandboxing-testing"], [317, "project-management-requirements-sandboxing-testing"]], "Into The Wild: Group Project Kickoff": [[314, "into-the-wild-group-project-kickoff"], [317, "into-the-wild-group-project-kickoff"]], "OO Design: Duck Typing, Inheritance, And Abstract Base Classes": [[314, "oo-design-duck-typing-inheritance-and-abstract-base-classes"], [317, "oo-design-duck-typing-inheritance-and-abstract-base-classes"]], "Package And Dependency Management": [[314, "package-and-dependency-management"]], "Equality vs. Identity": [[315, "Equality-vs.-Identity"]], "Functions Are Objects": [[315, "Functions-Are-Objects"]], "Python Advanced, Jupyter Notebook (2023-09-25 - 2023-09-27)": [[316, "python-advanced-jupyter-notebook-2023-09-25-2023-09-27"], [319, "python-advanced-jupyter-notebook-2023-09-25-2023-09-27"]], "Python Advanced (2023-10-09 - 2023-10-11)": [[317, "python-advanced-2023-10-09-2023-10-11"], [383, "python-advanced-2023-10-09-2023-10-11"]], "Classes: Basics": [[317, "classes-basics"]], "Classes: More": [[317, "classes-more"]], "Spoiler: Group Project Outcome": [[317, "spoiler-group-project-outcome"]], "More About Functions": [[317, "more-about-functions"]], "Python Advanced (2023-10-09 - 2023-10-09)": [[318, "Python-Advanced-(2023-10-09---2023-10-09)"]], "Type Annotations": [[318, "Type-Annotations"]], "Agenda: Python Advanced (2023-10-24 - 2023-10-26)": [[320, "agenda-python-advanced-2023-10-24-2023-10-26"]], "Day 1: Basic Python": [[320, "day-1-basic-python"], [324, "day-1-basic-python"]], "Datatypes, Datatypes": [[320, "datatypes-datatypes"], [324, "datatypes-datatypes"]], "Day 2: Advanced Python Features": [[320, "day-2-advanced-python-features"]], "Multiprocessing": [[320, "multiprocessing"]], "Day 3: Into The Wild": [[320, "day-3-into-the-wild"]], "Data Science Topics": [[320, "data-science-topics"], [324, "data-science-topics"]], "Group Project: An Idea": [[320, "group-project-an-idea"]], "Python Advanced (2023-10-24 - 2023-10-26)": [[321, "python-advanced-2023-10-24-2023-10-26"], [383, "python-advanced-2023-10-24-2023-10-26"]], "Python Basics Recap": [[321, "python-basics-recap"], [322, "Python-Basics-Recap"]], "The Very Basics": [[321, "the-very-basics"]], "range(), And Iteration In General": [[321, "range-and-iteration-in-general"]], "Leftovers From Yesterday": [[321, "leftovers-from-yesterday"]], "Object Oriented Programming, Continued": [[321, "object-oriented-programming-continued"], [321, "id1"]], "Group Project, OO-ified": [[321, "group-project-oo-ified"]], "Decorator Toolcase: *args, **kwargs": [[321, "decorator-toolcase-args-kwargs"]], "Morning Greeting": [[321, "morning-greeting"]], "Decorator Toolcase, Continued (Including Function Scoping and global)": [[321, "decorator-toolcase-continued-including-function-scoping-and-global"]], "Sensor Implementation That Receives UDP Datagrams": [[321, "sensor-implementation-that-receives-udp-datagrams"]], "CompositeSink": [[321, "compositesink"]], "MQTT Sink Implementation": [[321, "mqtt-sink-implementation"]], "Timestamps?": [[321, "timestamps"]], "Jupyter Notebook: Python Advanced": [[322, "Jupyter-Notebook:-Python-Advanced"]], "Jupyter Notebook Explanation": [[322, "Jupyter-Notebook-Explanation"]], "Integers and Floats": [[322, "Integers-and-Floats"]], "Strings: String Methods, Docstrings, \u2026": [[322, "Strings:-String-Methods,-Docstrings,-..."]], "Python Documentation Overview: https://docs.python.org/3/": [[322, "Python-Documentation-Overview:-https://docs.python.org/3/"]], "assert": [[322, "assert"]], "Iteration, Generators, Iterator Protocol": [[322, "Iteration,-Generators,-Iterator-Protocol"]], "AAARGHHH": [[322, "AAARGHHH"]], "Generator Expresssions": [[322, "Generator-Expresssions"]], "Dictionary Comprehension": [[322, "Dictionary-Comprehension"], [332, "Dictionary-Comprehension"], [1027, "dictionary-comprehension"]], "Functional Tools": [[322, "Functional-Tools"]], "filter()": [[322, "filter()"], [332, "filter()"]], "Jupyter Notebook (Structure): Python Advanced (2023-10-24 - 2023-10-26)": [[323, "jupyter-notebook-structure-python-advanced-2023-10-24-2023-10-26"]], "Agenda: Python Advanced (2023-11-22 - 2023-11-24)": [[324, "agenda-python-advanced-2023-11-22-2023-11-24"]], "Exercise Prerequisites: The Commandline": [[324, "exercise-prerequisites-the-commandline"]], "Day 2: Group Project Kickoff, Advanced Topics": [[324, "day-2-group-project-kickoff-advanced-topics"]], "Project Management, Test Driven Development": [[324, "project-management-test-driven-development"]], "Day 3: More Advanced Topics (All The Rest, And More)": [[324, "day-3-more-advanced-topics-all-the-rest-and-more"]], "CSV And Databases": [[324, "csv-and-databases"]], "Python Advanced (2023-11-22 - 2023-22-24)": [[325, "python-advanced-2023-11-22-2023-22-24"]], "Day 2: Group Project, And Object Oriented Programming": [[325, "day-2-group-project-and-object-oriented-programming"]], "Day 3: OO, Hacking, Python Specials": [[325, "day-3-oo-hacking-python-specials"]], "Jupyter Notebook: Python Advanced (2023-11-22 - 2023-11-24)": [[326, "Jupyter-Notebook:-Python-Advanced-(2023-11-22---2023-11-24)"]], "Assignment, And IDs": [[326, "Assignment,-And-IDs"]], "(Im)Mutability": [[326, "(Im)Mutability"]], "Operator Overloading (Basics)": [[326, "Operator-Overloading-(Basics)"]], "And Iterables? The Iterator Protocol!": [[326, "And-Iterables?-The-Iterator-Protocol!"]], "Methods": [[326, "Methods"], [602, "methods"], [749, "methods"], [750, "methods"], [751, "methods"], [1048, "methods"]], "numpy, pandas, matplotlib": [[326, "numpy,-pandas,-matplotlib"]], "Jupyter Notebook (Structure): Python Advanced (2023-11-22 - 2023-11-24)": [[327, "jupyter-notebook-structure-python-advanced-2023-11-22-2023-11-24"]], "Agenda: CMake (2023-11-27)": [[328, "agenda-cmake-2023-11-27"]], "CMake: An Introduction (2023-11-27)": [[329, "cmake-an-introduction-2023-11-27"], [383, "cmake-an-introduction-2023-11-27"]], "Agenda: Python Basics (2023-11-29 - 2023-12-01)": [[330, "agenda-python-basics-2023-11-29-2023-12-01"]], "Python Basics (2023-11-29 - 2023-12-01)": [[331, "python-basics-2023-11-29-2023-12-01"], [332, "Python-Basics-(2023-11-29---2023-12-01)"], [383, "python-basics-2023-11-29-2023-12-01"]], "Day 2, Morning Awakening": [[331, "day-2-morning-awakening"]], "Control Flow, Sequences, Iteration (Continued)": [[331, "control-flow-sequences-iteration-continued"]], "Day 3, Morning Awakening": [[331, "day-3-morning-awakening"]], "Dictionary (mutable)": [[332, "Dictionary-(mutable)"]], "Set (mutable)": [[332, "Set-(mutable)"]], "Boolean (immutable)": [[332, "Boolean-(immutable)"]], "split() and join()": [[332, "split()-and-join()"]], "Pythonicity (enumerate())": [[332, "Pythonicity-(enumerate())"]], "pandas, matplotlib": [[332, "pandas,-matplotlib"]], "Generator Expression": [[332, "Generator-Expression"]], "zip(), And Dictionaries": [[332, "zip(),-And-Dictionaries"]], "Agenda: C++: Advanced Topics": [[334, "agenda-c-advanced-topics"]], "Introduction: A New Language To Me": [[334, "introduction-a-new-language-to-me"]], "constexpr, constinit, consteval": [[334, "constexpr-constinit-consteval"]], "Functions: std::function<>, Lambdas": [[334, "functions-std-function-lambdas"], [335, "functions-std-function-lambdas"]], "Moving, RValue References: Do We Want To Copy Sensors?": [[334, "moving-rvalue-references-do-we-want-to-copy-sensors"]], "Moving: Usage": [[334, "moving-usage"]], "Moving: Implementation": [[334, "moving-implementation"]], "Type Erasure": [[334, "type-erasure"]], "Allocators": [[334, "allocators"], [653, "allocators"], [771, "allocators"]], "C++ Pythonic Toolcase": [[334, "c-pythonic-toolcase"]], "Outlook In >=20": [[334, "outlook-in-20"]], "Attributes And The Like": [[334, "attributes-and-the-like"]], "<algorithm> Overview": [[334, "algorithm-overview"]], "Miscellaneous Miscellaneous": [[334, "miscellaneous-miscellaneous"]], "C++: Advanced Topics (2023-12-04 - 2023-12-06)": [[335, "c-advanced-topics-2023-12-04-2023-12-06"], [383, "c-advanced-topics-2023-12-04-2023-12-06"]], "Day 1: Introduction: C++, A New Language": [[335, "day-1-introduction-c-a-new-language"]], "Pythonicity": [[335, "pythonicity"]], "New OO Features": [[335, "new-oo-features"]], "Day 2: Simply Getting Stuff Done": [[335, "day-2-simply-getting-stuff-done"]], "Classic Polymorphism: Interfaces": [[335, "classic-polymorphism-interfaces"]], "Move Semantics": [[335, "move-semantics"]], "Day 3: All The Rest": [[335, "day-3-all-the-rest"]], "Interfaces, And OO Design: Kochtopf And The Cloud": [[335, "interfaces-and-oo-design-kochtopf-and-the-cloud"]], "Moving, Roundup": [[335, "moving-roundup"]], "Containers And Algorithms": [[335, "containers-and-algorithms"]], "And Embedded?": [[335, "and-embedded"]], "Still Untold": [[335, "still-untold"]], "Agenda: Python Basics (2023-12-18 - 2023-12-20)": [[336, "agenda-python-basics-2023-12-18-2023-12-20"]], "Python Basics (2023-12-18 - 2023-12-20)": [[337, "python-basics-2023-12-18-2023-12-20"], [338, "Python-Basics-(2023-12-18---2023-12-20)"], [339, "python-basics-2023-12-18-2023-12-20"], [383, "python-basics-2023-12-18-2023-12-20"]], "More About Datatypes": [[337, "more-about-datatypes"], [338, "More-About-Datatypes"], [347, "more-about-datatypes"]], "A Bit Of OO": [[337, "a-bit-of-oo"]], "Datatype Conversion": [[338, "Datatype-Conversion"]], "Weirdness (Comprehensions)": [[338, "Weirdness-(Comprehensions)"]], "Dictionary Comprehension (Exchange key and Value of dict)": [[338, "Dictionary-Comprehension-(Exchange-key-and-Value-of-dict)"]], "Functional Programming": [[338, "Functional-Programming"]], "set(), list(), dict()": [[338, "set(),-list(),-dict()"]], "while (and else)": [[338, "while-(and-else)"]], "range(), And Generators, The Iterator Protocol": [[338, "range(),-And-Generators,-The-Iterator-Protocol"]], "Return Value? Parameters?": [[338, "Return-Value?-Parameters?"]], "References, Immutability": [[338, "References,-Immutability"]], "Und Schuetzen?": [[338, "Und-Schuetzen?"]], "Comprehensions (Generator Expressions)": [[338, "Comprehensions-(Generator-Expressions)"]], "pathlib, os.path": [[338, "pathlib,-os.path"]], "Regexen": [[338, "Regexen"]], "distill.py": [[338, "distill.py"]], "C++ For Embedded Developers (Beginning of 2023)": [[340, "c-for-embedded-developers-beginning-of-2023"]], "Python/SAP": [[341, "python-sap"]], "Agenda: Python Advanced (2024-01-15 - 2024-01-17)": [[342, "agenda-python-advanced-2024-01-15-2024-01-17"]], "Numerics: Pandas, NumPy": [[342, "numerics-pandas-numpy"]], "Python Advanced (2024-01-15 - 2024-01-17)": [[343, "python-advanced-2024-01-15-2024-01-17"], [345, "python-advanced-2024-01-15-2024-01-17"], [383, "python-advanced-2024-01-15-2024-01-17"]], "Group Project": [[343, "group-project"], [371, "group-project"]], "Python Advanced (2023-01-15 - 2024-01-17)": [[344, "Python-Advanced-(2023-01-15---2024-01-17)"]], "DocStrings": [[344, "DocStrings"]], "Type System": [[344, "Type-System"], [404, "type-system"]], "Infinity?": [[344, "Infinity?"]], "dict, and enumerate()": [[344, "dict,-and-enumerate()"]], "Agenda: Python Basics (2024-01-29 - 2024-01-31)": [[346, "agenda-python-basics-2024-01-29-2024-01-31"]], "Pandas (Data Science Basics)": [[346, "pandas-data-science-basics"]], "Python Basics (2024-01-29 - 2024-01-31)": [[347, "python-basics-2024-01-29-2024-01-31"], [348, "Python-Basics-(2024-01-29---2024-01-31)"], [383, "python-basics-2024-01-29-2024-01-31"]], "More Datatypes, File IO": [[347, "more-datatypes-file-io"]], "os.listdir(), os.path.join()": [[347, "os-listdir-os-path-join"]], "Unit Testing (pytest), Project Management": [[347, "unit-testing-pytest-project-management"]], "(Optional) Exercise Series: CSV Files": [[347, "optional-exercise-series-csv-files"]], "pandas, numpy, scikit-learn": [[347, "pandas-numpy-scikit-learn"]], "Classes? Struct? Cell?": [[348, "Classes?-Struct?-Cell?"]], "Wuerfeln": [[348, "Wuerfeln"]], "Primeness, while": [[348, "Primeness,-while"]], "The range function": [[348, "The-range-function"]], "Sequences": [[348, "Sequences"]], "Misc Crap": [[348, "Misc-Crap"]], "Sequential Datatyoes": [[348, "Sequential-Datatyoes"]], "References, (Im)mutability, And Memory Management": [[348, "References,-(Im)mutability,-And-Memory-Management"]], "os, Und Einlesen Von Directories": [[348, "os,-Und-Einlesen-Von-Directories"]], "os.listdir(), os.path.join(), os.sep": [[348, "os.listdir(),-os.path.join(),-os.sep"]], "os.walk()": [[348, "os.walk()"]], "pathlib": [[348, "pathlib"]], "numpy, scikit-learn": [[348, "numpy,-scikit-learn"]], "Jupyter Notebook: Python Basics (2024-01-29 - 2024-01-31)": [[349, "jupyter-notebook-python-basics-2024-01-29-2024-01-31"]], "Screenplay Checker": [[350, "screenplay-checker"]], "GPIO: Blinklicht": [[351, "gpio-blinklicht"]], "Commandline": [[351, "commandline"], [356, "commandline"], [893, "commandline"]], "sysfs GPIO": [[351, "sysfs-gpio"]], "Electronic Aspect": [[351, "electronic-aspect"]], "External Circuitry": [[351, "external-circuitry"]], "Raspberry Header Pinout": [[351, "raspberry-header-pinout"]], "GPIO: Blinklicht Interface": [[352, "gpio-blinklicht-interface"]], "GPIO: Object Oriented Blinklicht": [[353, "gpio-object-oriented-blinklicht"]], "GPIO: Blinklicht Unittests": [[354, "gpio-blinklicht-unittests"]], "ECE19: Exercises and Custom Topics": [[355, "ece19-exercises-and-custom-topics"]], "Reading a File": [[356, "reading-a-file"], [955, "reading-a-file"]], "Output": [[356, "output"]], "2021-05-20 (G2)": [[357, "2021-05-20-(G2)"]], "Reading File in One Big Swoop": [[357, "Reading-File-in-One-Big-Swoop"]], "Reading File in Fixed Sized Chunks": [[357, "Reading-File-in-Fixed-Sized-Chunks"]], "Reading File Line by Line": [[357, "Reading-File-Line-by-Line"]], "Iterating a File": [[357, "Iterating-a-File"]], "String Methods (Needed to Implement the Exercise)": [[357, "String-Methods-(Needed-to-Implement-the-Exercise)"]], "str.strip(), str.rstrip(), str.lstrip()": [[357, "str.strip(),-str.rstrip(),-str.lstrip()"]], "str.split()": [[357, "str.split()"]], "2021-05-21": [[358, "2021-05-21"], [365, "id11"]], "Modules and Packages": [[358, "Modules-and-Packages"], [1038, "modules-and-packages"]], "Strings vs. Bytes": [[359, "Strings-vs.-Bytes"]], "Batteries": [[360, "Batteries"]], "Key Value Map": [[360, "Key-Value-Map"]], "Comments vs Documentation": [[360, "Comments-vs-Documentation"]], "Multiline String (btw.)": [[360, "Multiline-String-(btw.)"]], "Integer Numbers (Literals)": [[360, "Integer-Numbers-(Literals)"]], "Arithmetic Operators": [[360, "Arithmetic-Operators"], [409, "arithmetic-operators"], [1050, "arithmetic-operators"]], "Wertebereich von Integers": [[360, "Wertebereich-von-Integers"]], "An Example": [[361, "An-Example"], [1073, "an-example"]], "Sidenote: Pure Beauty": [[361, "Sidenote:-Pure-Beauty"], [1073, "sidenote-pure-beauty"]], "Parameters and Types": [[361, "Parameters-and-Types"], [1073, "parameters-and-types"]], "Pitfalls": [[361, "Pitfalls"]], "Cloud Computer, SSH Login": [[362, "cloud-computer-ssh-login"]], "Machine, Logins": [[362, "machine-logins"]], "Login via Secure Shell (SSH)": [[362, "login-via-secure-shell-ssh"]], "Formalit\u00e4ten": [[363, "formalitaten"]], "Embedded Computing 1 (ECE 19)": [[364, "embedded-computing-1-ece-19"]], "Daily Log": [[365, "daily-log"]], "2021-03-04": [[365, "id1"]], "2021-03-05": [[365, "id2"]], "Cheat Sheets": [[365, null]], "2021-03-18": [[365, "id3"]], "2021-03-26": [[365, "id4"]], "2021-04-15": [[365, "id5"]], "2021-04-21": [[365, "id6"]], "Git Intro": [[365, "git-intro"]], "Download and Installation": [[365, null], [370, null]], "2021-04-29": [[365, "id7"]], "2021-05-10": [[365, "id8"]], "Org Stuff": [[365, "org-stuff"]], "Python: Functions": [[365, "python-functions"]], "2021-05-12": [[365, "id9"]], "Python: Walk-Through Passing and Failing an Exam": [[365, "python-walk-through-passing-and-failing-an-exam"]], "2021-05-{19,20}": [[365, "id10"]], "Reiterating on Exercise": [[365, "reiterating-on-exercise"]], "import argparse": [[365, "import-argparse"]], "Exercise digit (Once More)": [[365, "exercise-digit-once-more"]], "2021-06-01": [[365, "id12"]], "sysfs GPIO: Blinking an LED": [[365, "sysfs-gpio-blinking-an-led"]], "2021-06-07": [[365, "id13"]], "Embedded Computing 1 (Deutsch)": [[366, "embedded-computing-1-deutsch"]], "Lehrinhalte": [[366, "lehrinhalte"]], "Lernergebnisse der LV": [[366, "lernergebnisse-der-lv"]], "Empfohlene oder verpflichtende Fachliteratur und andere Lernressourcen bzw. \u2013instrumente": [[366, "empfohlene-oder-verpflichtende-fachliteratur-und-andere-lernressourcen-bzw-instrumente"]], "Art der Vermittlung": [[366, "art-der-vermittlung"]], "Voraussetzungen und Begleitbedingungen": [[366, "voraussetzungen-und-begleitbedingungen"]], "Pr\u00fcfungsmethode und Beurteilungskriterien": [[366, "prufungsmethode-und-beurteilungskriterien"]], "Embedded Computing 1 (English)": [[367, "embedded-computing-1-english"]], "Course Content": [[367, "course-content"]], "Learning Outcome": [[367, "learning-outcome"]], "Recommended or Required Reading and Other Learning Resources / Tools": [[367, "recommended-or-required-reading-and-other-learning-resources-tools"]], "Mode of delivery": [[367, "mode-of-delivery"]], "Prerequisites and Co-Requisites": [[367, "prerequisites-and-co-requisites"]], "Assessment Methods and Criteria": [[367, "assessment-methods-and-criteria"]], "Plan for Summer 2021": [[368, "plan-for-summer-2021"]], "Linux Introduction": [[368, "linux-introduction"]], "Slides": [[368, null], [368, null], [368, null]], "C/C++ Development": [[368, "c-c-development"]], "Python Development": [[368, "python-development"]], "2021-10-07": [[369, "id1"]], "Whose Fault It Is": [[369, "whose-fault-it-is"]], "2021-10-12 (Bringing Newcomers Up-to-Date)": [[370, "bringing-newcomers-up-to-date"]], "Linux/UNIX": [[370, "linux-unix"]], "Git": [[370, "git"]], "2021-10-28": [[371, "id1"]], "Discussion of Tasks": [[371, "discussion-of-tasks"]], "TODOs": [[371, "todos"]], "2021-11-15": [[372, "id1"]], "Systems Programming: Files, Directories, Links \u2026": [[372, "systems-programming-files-directories-links"]], "2021-11-29": [[373, "id1"]], "jjjj": [[373, "jjjj"]], "2021-12-1{4,5}": [[374, "id1"]], "Future Topics": [[374, "future-topics"]], "Threading": [[374, "threading"]], "C++ Sideways": [[374, "c-sideways"]], "2022-01-10": [[375, "id1"]], "Scheduling": [[375, "scheduling"], [989, "scheduling"], [990, "scheduling"]], "2022-01-12": [[376, "id1"]], "Scheduling and Realtime": [[376, "scheduling-and-realtime"], [380, "scheduling-and-realtime"]], "2022-02-15": [[377, "id1"]], "Agenda/Log": [[378, "agenda-log"], [379, "agenda-log"]], "Embedded Computing 2 (ECE 19)": [[379, "embedded-computing-2-ece-19"]], "Project Repository": [[379, "project-repository"]], "Test Material": [[379, "test-material"]], "Exam Material Overview": [[380, "exam-material-overview"]], "Questions": [[380, "questions"], [380, "id1"], [672, "questions"], [866, "questions"], [880, "questions"], [881, "questions"], [906, "questions"], [1013, "questions"]], "Slide Material": [[380, "slide-material"], [380, "id2"]], "Embedded Computing 1+2, ECE 19": [[381, "embedded-computing-1-2-ece-19"]], "Bisher Gehaltene": [[383, "bisher-gehaltene"]], "Python Advanced (2023-11-22 - 2023-11-24)": [[383, "python-advanced-2023-11-22-2023-11-24"]], "Clean Code Development With Python (2023-03-28 - 2023-03-30)": [[383, "clean-code-development-with-python-2023-03-28-2023-03-30"]], "C++ For Embedded Developers (2023-03-20 - 2023-03-22)": [[383, "c-for-embedded-developers-2023-03-20-2023-03-22"]], "Python (2022-11-07 - 2022-11-10, 2022-12-01)": [[383, "python-2022-11-07-2022-11-10-2022-12-01"]], "C++: A New Language Starting In 2011 (2022-07-26 - 2022-07-27)": [[383, "c-a-new-language-starting-in-2011-2022-07-26-2022-07-27"]], "C++: A New Language Starting In 2011 (2022-06-14 - 2022-06-15)": [[383, "c-a-new-language-starting-in-2011-2022-06-14-2022-06-15"]], "Python Advanced (2022-03-15 - 2022-03-17)": [[383, "python-advanced-2022-03-15-2022-03-17"]], "Python Basics (2021-08-23 - 2021-08-25)": [[383, "python-basics-2021-08-23-2021-08-25"]], "Programmieren mit C++ (2021-07-12 - 2021-07-16)": [[383, "programmieren-mit-c-2021-07-12-2021-07-16"]], "Linux Basics, Shell Scripting (2019-03-29 - 1.4.2021)": [[383, "linux-basics-shell-scripting-2019-03-29-1-4-2021"]], "Python (22.3.2021 - 25.3.2021)": [[383, "python-22-3-2021-25-3-2021"]], "Python Advanced (15.3.2021 - 17.3.2021)": [[383, "python-advanced-15-3-2021-17-3-2021"]], "Linux Kernel Driver Development Basics (8.3.2021 - 12.3.2020)": [[383, "linux-kernel-driver-development-basics-8-3-2021-12-3-2020"]], "Programmierung Grundlagen, anhand von Python (13. und 14.1.2021)": [[383, "programmierung-grundlagen-anhand-von-python-13-und-14-1-2021"]], "Linux und Raspberry Pi (3.11.2020, 4.11.2020, 17.11.2020)": [[383, "linux-und-raspberry-pi-3-11-2020-4-11-2020-17-11-2020"]], "Python Basics (19.10.2020 - 22.10.2020)": [[383, "python-basics-19-10-2020-22-10-2020"]], "Python Advanced (13.5.2020 - 14.5.2020 bei einer Firma in Graz)": [[383, "python-advanced-13-5-2020-14-5-2020-bei-einer-firma-in-graz"]], "C++ f\u00fcr Embedded-Entwickler (30.3.2020 - 4.4.2020, bei einer Firma in Baden-W\u00fcrttemberg)": [[383, "c-fur-embedded-entwickler-30-3-2020-4-4-2020-bei-einer-firma-in-baden-wurttemberg"]], "IPC in Linux (10.1.2020, bei einer Firma in Graz)": [[383, "ipc-in-linux-10-1-2020-bei-einer-firma-in-graz"]], "Python/NumPy (12.11.2019 - 13.11.2019 in Graz)": [[383, "python-numpy-12-11-2019-13-11-2019-in-graz"]], "Python Advanced (9.10.2019 - 10.10.2019 bei einer Firma in Graz)": [[383, "python-advanced-9-10-2019-10-10-2019-bei-einer-firma-in-graz"]], "C f\u00fcr Fortgeschrittene (30.9.2019 - 4.10.2019 in Wiener Neustadt)": [[383, "c-fur-fortgeschrittene-30-9-2019-4-10-2019-in-wiener-neustadt"]], "Einf\u00fchrung in Raspberry Pi (8.7.2019 - 10.7.2019 in Graz)": [[383, "einfuhrung-in-raspberry-pi-8-7-2019-10-7-2019-in-graz"]], "Python Basics (24.6.2019 - 27.6.2019, bei einer Firma in Ober\u00f6sterreich)": [[383, "python-basics-24-6-2019-27-6-2019-bei-einer-firma-in-oberosterreich"]], "Linux Basics (13.6.2019 - 19.6.2019, bei einer Firma in Ober\u00f6sterreich)": [[383, "linux-basics-13-6-2019-19-6-2019-bei-einer-firma-in-oberosterreich"]], "Python Basics (3.6.2019 - 6.6.2019, bei einer Firma in Ober\u00f6sterreich)": [[383, "python-basics-3-6-2019-6-6-2019-bei-einer-firma-in-oberosterreich"]], "Linux Big Picture (27.5.2019 - 29.5.2019, bei einer Firma in Baden-W\u00fcrttemberg)": [[383, "linux-big-picture-27-5-2019-29-5-2019-bei-einer-firma-in-baden-wurttemberg"]], "Python Basics (23.5.2019 - 24.5.2019, bei einer Firma in der Obersteiermark)": [[383, "python-basics-23-5-2019-24-5-2019-bei-einer-firma-in-der-obersteiermark"]], "Korn Shell Scripting (20.5.2019 - 22.5.2019 bei einer Firma in Salzburg)": [[383, "korn-shell-scripting-20-5-2019-22-5-2019-bei-einer-firma-in-salzburg"]], "Linux Basics (13.5.2019 - 15.5.2019, bei einer Firma in Ober\u00f6sterreich)": [[383, "linux-basics-13-5-2019-15-5-2019-bei-einer-firma-in-oberosterreich"]], "C: Ausgew\u00e4hlte Themen (17.12.2018 - 19.12.2018 in Graz)": [[383, "c-ausgewahlte-themen-17-12-2018-19-12-2018-in-graz"]], "Python Basics (1.10.2018 - 4.10.2018, bei einer Firma in Ober\u00f6sterreich)": [[383, "python-basics-1-10-2018-4-10-2018-bei-einer-firma-in-oberosterreich"]], "Linux Basics, Shell Scripting (16.7.2018 - 20.7.2018, bei einer Firma in Ober\u00f6sterreich)": [[383, "linux-basics-shell-scripting-16-7-2018-20-7-2018-bei-einer-firma-in-oberosterreich"]], "Advanced C on Linux (9.7.2018 - 11.7.2018, Raum N\u00fcrnberg)": [[383, "advanced-c-on-linux-9-7-2018-11-7-2018-raum-nurnberg"]], "Linux f\u00fcr Fortgeschrittene (12.3.2018 - 16.3.2018, Oberb\u00fcren/Schweiz)": [[383, "linux-fur-fortgeschrittene-12-3-2018-16-3-2018-oberburen-schweiz"]], "Linux und Python (11.9.2017 - 13.9.2017, bei einer Firma im Raum M\u00fcnchen)": [[383, "linux-und-python-11-9-2017-13-9-2017-bei-einer-firma-im-raum-munchen"]], "Linux Lowlevel Programming (28.8.2017 - 30.8.2017, Raum N\u00fcrnberg)": [[383, "linux-lowlevel-programming-28-8-2017-30-8-2017-raum-nurnberg"]], "C Refresher (23.8.2017 - 24.8.2017, Raum N\u00fcrnberg)": [[383, "c-refresher-23-8-2017-24-8-2017-raum-nurnberg"]], "C++11: Ausgew\u00e4hlte Themen (6.6.2017 - 8.6.2017 bei einer Firma in Graz)": [[383, "c-11-ausgewahlte-themen-6-6-2017-8-6-2017-bei-einer-firma-in-graz"]], "Linux vom Programmiererstandpunkt (30.12.2016 in Wien)": [[383, "linux-vom-programmiererstandpunkt-30-12-2016-in-wien"]], "Embedded Linux anhand des Raspberry Pi (17.10.2016 - 21.10.2016 bei einer Firma in Baden-W\u00fcrttemberg)": [[383, "embedded-linux-anhand-des-raspberry-pi-17-10-2016-21-10-2016-bei-einer-firma-in-baden-wurttemberg"]], "Linux vom Programmiererstandpunkt (20.9.2016 in Wien)": [[383, "linux-vom-programmiererstandpunkt-20-9-2016-in-wien"]], "C for Advanced Users (5.7.2016 - 6.7.2016, Raum N\u00fcrnberg)": [[383, "c-for-advanced-users-5-7-2016-6-7-2016-raum-nurnberg"]], "Einf\u00fchrung in C++ (22.2.2016 - 26.2.2016 bei einer Firma in Graz)": [[383, "einfuhrung-in-c-22-2-2016-26-2-2016-bei-einer-firma-in-graz"]], "Advanced Python Workshop (20.2.2017 - 23.2.2017, bei einer Firma in Ober\u00f6sterreich)": [[383, "advanced-python-workshop-20-2-2017-23-2-2017-bei-einer-firma-in-oberosterreich"]], "Embedded Linux (30.11.2015 - 4.12.2015, Bodenseo, Hemmenhofen am Bodensee)": [[383, "embedded-linux-30-11-2015-4-12-2015-bodenseo-hemmenhofen-am-bodensee"]], "Linux Kernel, Realtime (17.11.2015 - 19.11.2015 bei einer Firma in Graz)": [[383, "linux-kernel-realtime-17-11-2015-19-11-2015-bei-einer-firma-in-graz"]], "Linux Basics (3.11.2015 - 5.11.2015 bei einer Firma in Graz)": [[383, "linux-basics-3-11-2015-5-11-2015-bei-einer-firma-in-graz"]], "Einf\u00fchrung in Python (5.10.2015 - 6.10.2015 in Wien)": [[383, "einfuhrung-in-python-5-10-2015-6-10-2015-in-wien"]], "Linux Basics, Systemnahe Programmierung (27.7.2015 - 31.7.2015, bei einer Firma in Ober\u00f6sterreich)": [[383, "linux-basics-systemnahe-programmierung-27-7-2015-31-7-2015-bei-einer-firma-in-oberosterreich"]], "Design Patterns and Test Driven Development (1.7.2015 - 3.7.2015, Raum N\u00fcrnberg)": [[383, "design-patterns-and-test-driven-development-1-7-2015-3-7-2015-raum-nurnberg"]], "C for Advanced Users (9.12.2014 - 11.12.2014, Raum N\u00fcrnberg)": [[383, "c-for-advanced-users-9-12-2014-11-12-2014-raum-nurnberg"]], "Python (1.6.2015 - 3.6.2015, Mathias Kettner in M\u00fcnchen)": [[383, "python-1-6-2015-3-6-2015-mathias-kettner-in-munchen"]], "Linux Basics, Kernel, Git (9.3.2015 - 13.3.2015, Siemens Braunschweig)": [[383, "linux-basics-kernel-git-9-3-2015-13-3-2015-siemens-braunschweig"]], "Embedded Linux (28.1.2015 - 30.1.2015, bei einer Firma im Raum M\u00fcnchen)": [[383, "embedded-linux-28-1-2015-30-1-2015-bei-einer-firma-im-raum-munchen"]], "C for Intermediate Users (9.12.2014 - 11.12.2014, Raum N\u00fcrnberg)": [[383, "c-for-intermediate-users-9-12-2014-11-12-2014-raum-nurnberg"]], "Linux from Scratch (1.12.2014 - 5.12.2014 LPD Hannover)": [[383, "linux-from-scratch-1-12-2014-5-12-2014-lpd-hannover"]], "Einf\u00fchrung in C++ (7.10.2014 - 10.10.2014 in Wien)": [[383, "einfuhrung-in-c-7-10-2014-10-10-2014-in-wien"]], "Systemnahe Programmierung unter Linux (14.4.2014 - 17.4.2014 in K\u00f6ln)": [[383, "systemnahe-programmierung-unter-linux-14-4-2014-17-4-2014-in-koln"]], "Einf\u00fchrung in C++ (3.3.2014 - 14.3.2014 in Wien)": [[383, "einfuhrung-in-c-3-3-2014-14-3-2014-in-wien"]], "Projektverwaltung mit Subversion und CMake (24.2.2014 - 27.2.2014 in Wien)": [[383, "projektverwaltung-mit-subversion-und-cmake-24-2-2014-27-2-2014-in-wien"]], "Einf\u00fchrung in Python (23.6.2014 - 26.6.2014, LKA Niedersachsen)": [[383, "einfuhrung-in-python-23-6-2014-26-6-2014-lka-niedersachsen"]], "Linux: Boot-Konfiguration und Systemnahe Programmierung (27.5.2014 - 30.5.2014 in Graz)": [[383, "linux-boot-konfiguration-und-systemnahe-programmierung-27-5-2014-30-5-2014-in-graz"]], "Einf\u00fchrung in C (11.11.2013 - 22.11.2013 in Wien)": [[383, "einfuhrung-in-c-11-11-2013-22-11-2013-in-wien"]], "Linux Basics (28.10.2013 - 31.10.2013 in Wien)": [[383, "linux-basics-28-10-2013-31-10-2013-in-wien"]], "Linux Basics, Embedded Linux (14.10.2013 - 15.10.2013 bei einer Firma im Raum M\u00fcnchen)": [[383, "linux-basics-embedded-linux-14-10-2013-15-10-2013-bei-einer-firma-im-raum-munchen"]], "Shell/Bash Scripting (7.10.2013 - 9.10.2013, bei einer Firma in Ober\u00f6sterreich)": [[383, "shell-bash-scripting-7-10-2013-9-10-2013-bei-einer-firma-in-oberosterreich"]], "Alles Linux (1.10.2013 - 4.10.2013, QualiVision in Z\u00fcrich)": [[383, "alles-linux-1-10-2013-4-10-2013-qualivision-in-zurich"]], "Linux from Scratch (16.9.2013 - 20.9.2013, Mathias Kettner in M\u00fcnchen)": [[383, "linux-from-scratch-16-9-2013-20-9-2013-mathias-kettner-in-munchen"]], "Linux Basics (2.7.2013 - 4.7.2013, bei einer Firma in Ober\u00f6sterreich)": [[383, "linux-basics-2-7-2013-4-7-2013-bei-einer-firma-in-oberosterreich"]], "Linux - Einf\u00fchrung und Programmierung (27.5.2013 - 29.5.2013, bei einer Firma im Raum M\u00fcnchen)": [[383, "linux-einfuhrung-und-programmierung-27-5-2013-29-5-2013-bei-einer-firma-im-raum-munchen"]], "GNU Make (23.4.2013 in Graz)": [[383, "gnu-make-23-4-2013-in-graz"]], "Linux Basics & Embedded (14.1.2013 - 18.1.2013, bei einer Firma in Ober\u00f6sterreich)": [[383, "linux-basics-embedded-14-1-2013-18-1-2013-bei-einer-firma-in-oberosterreich"]], "Linux Systemnah, Embedded, C++ (26.11.2012 - 28.11.2012, bei einer Firma in Hamburg)": [[383, "linux-systemnah-embedded-c-26-11-2012-28-11-2012-bei-einer-firma-in-hamburg"]], "Fehlerdiagnose unter Linux (19.11.2012 - 21.11.2012, Polizei Niedersachsen in Hannover)": [[383, "fehlerdiagnose-unter-linux-19-11-2012-21-11-2012-polizei-niedersachsen-in-hannover"]], "Systemnahe Programmierung unter Linux (29.10.2012 - 30.10.2012, bei einer Firma im Raum M\u00fcnchen)": [[383, "systemnahe-programmierung-unter-linux-29-10-2012-30-10-2012-bei-einer-firma-im-raum-munchen"]], "Einf\u00fchrung in Python (15.10.2012 - 17.10.2012, Mathias Kettner in M\u00fcnchen)": [[383, "einfuhrung-in-python-15-10-2012-17-10-2012-mathias-kettner-in-munchen"]], "Einf\u00fchrung in Python (25.9.2012 - 27.9.2012, STIA in Admont)": [[383, "einfuhrung-in-python-25-9-2012-27-9-2012-stia-in-admont"]], "Linux Systemnah (13.2.2012 bis 15.2.2012, bei einer Firma in Z\u00fcrich)": [[383, "linux-systemnah-13-2-2012-bis-15-2-2012-bei-einer-firma-in-zurich"]], "Einf\u00fchrung in Python (24.1.2012 - 26.1.2012, Mathias Kettner in M\u00fcnchen)": [[383, "einfuhrung-in-python-24-1-2012-26-1-2012-mathias-kettner-in-munchen"]], "Linux Systemnah (19.9.2011 - 22.9.2011, bei einer Firma in Ober\u00f6sterreich)": [[383, "linux-systemnah-19-9-2011-22-9-2011-bei-einer-firma-in-oberosterreich"]], "Linux Basics (13.9.2011 - 15.9.2011, bei einer Firma in Ober\u00f6sterreich)": [[383, "linux-basics-13-9-2011-15-9-2011-bei-einer-firma-in-oberosterreich"]], "Linux Systemnah (4.7.2011 - 7.7.2011, Bodenseo, Hemmenhofen am Bodensee)": [[383, "linux-systemnah-4-7-2011-7-7-2011-bodenseo-hemmenhofen-am-bodensee"]], "Linux Systemnah (14.2.2011 - 18.2.2011, Bodenseo, Hemmenhofen am Bodensee)": [[383, "linux-systemnah-14-2-2011-18-2-2011-bodenseo-hemmenhofen-am-bodensee"]], "Linux from Scratch (12.12.2010 - 17.12.2010, Mathias Kettner in M\u00fcnchen)": [[383, "linux-from-scratch-12-12-2010-17-12-2010-mathias-kettner-in-munchen"]], "Softwareentwicklung unter Linux (6.12.2010 - 10.12.2010, bei einer Firma in Darmstadt)": [[383, "softwareentwicklung-unter-linux-6-12-2010-10-12-2010-bei-einer-firma-in-darmstadt"]], "Softwareentwicklung unter Linux (24.11.2010 - 26.11.2010, bei einer Firma im Raum Ulm)": [[383, "softwareentwicklung-unter-linux-24-11-2010-26-11-2010-bei-einer-firma-im-raum-ulm"]], "Linux Kernel (25.10.2010 - 26.10.2010, Deutsche Bundeswehr in Wildflecken)": [[383, "linux-kernel-25-10-2010-26-10-2010-deutsche-bundeswehr-in-wildflecken"]], "Softwareentwicklung unter Linux (20.10.2010 - 24.10.2010, Mathias Kettner)": [[383, "softwareentwicklung-unter-linux-20-10-2010-24-10-2010-mathias-kettner"]], "Training Material: Overview and Download": [[384, "training-material-overview-and-download"]], "On Windows": [[385, "on-windows"]], "On Linux": [[385, "on-linux"]], "The Book (1)": [[386, "the-book-1"]], "The Book (2)": [[386, "the-book-2"]], "The Beginning": [[386, "the-beginning"]], "Cool Guys and Their Hobby": [[386, "cool-guys-and-their-hobby"]], "History of UNIX": [[386, "history-of-unix"]], "My First Program (1)": [[387, "my-first-program-1"]], "My First Program (2)": [[387, "my-first-program-2"]], "Character Arrays - Strings": [[387, "character-arrays-strings"]], "Variables and Arithmetic": [[388, "variables-and-arithmetic"]], "My Second Program (1)": [[388, "my-second-program-1"]], "My Second Program (2)": [[388, "my-second-program-2"]], "My Second Program (3)": [[388, "my-second-program-3"]], "My Second Program (4)": [[388, "my-second-program-4"]], "Exercise: A Better Fahrenheit Table": [[389, "exercise-a-better-fahrenheit-table"]], "for: Loop Simplification (1)": [[390, "for-loop-simplification-1"]], "for: Loop Simplification (2)": [[390, "for-loop-simplification-2"]], "Second Program, revisited": [[390, "second-program-revisited"]], "Exercise: Fahrenheit Table Using for": [[391, "exercise-fahrenheit-table-using-for"]], "Symbolic Constants": [[392, "symbolic-constants"]], "C Preprocessor: Symbolic Constants": [[392, "c-preprocessor-symbolic-constants"]], "Exercise: Fahrenheit Table Using Macros": [[393, "exercise-fahrenheit-table-using-macros"]], "Character I/O": [[394, "character-i-o"]], "The Outside World": [[394, "the-outside-world"]], "cat for the Poor (1)": [[394, "cat-for-the-poor-1"]], "cat for the Poor (2)": [[394, "cat-for-the-poor-2"]], "More Examples \u2026": [[394, "more-examples"]], "More Examples - if": [[394, "more-examples-if"]], "if, Formally": [[394, "if-formally"]], "Operators, Formally": [[394, "operators-formally"]], "Exercise: wc For The Poor": [[395, "exercise-wc-for-the-poor"]], "Arrays": [[396, "arrays"]], "Array Definition, Explicit Initialization": [[396, "array-definition-explicit-initialization"]], "Array Access": [[396, "array-access"]], "Discussion: Initialization": [[396, "discussion-initialization"]], "Discussion: if, else": [[396, "discussion-if-else"]], "Array Initializer": [[396, "array-initializer"]], "Discussion: Initializer": [[396, "discussion-initializer"]], "Initialization using memset()": [[396, "initialization-using-memset"]], "Discussion: memset()": [[396, "discussion-memset"]], "Exercise: Character Histogram": [[397, "exercise-character-histogram"]], "A Nonsensical Example": [[398, "a-nonsensical-example"]], "Function Signature": [[398, "function-signature"]], "Discussion": [[398, "discussion"]], "Definition vs. Declaration (1)": [[398, "definition-vs-declaration-1"]], "Definition vs. Declaration (2)": [[398, "definition-vs-declaration-2"]], "By Value / By Reference": [[398, "by-value-by-reference"]], "Exercise: Forward Declaration": [[399, "exercise-forward-declaration"]], "Character Arrays": [[400, "character-arrays"]], "Strings: Mistake by Design?": [[400, "strings-mistake-by-design"]], "Strings: Definition": [[400, "strings-definition"]], "Strings: Library Functions": [[400, "strings-library-functions"]], "Strings as Parameters": [[400, "strings-as-parameters"]], "Strings: Dangers": [[400, "strings-dangers"]], "Exercise: Read Line Into String from stdin": [[401, "exercise-read-line-into-string-from-stdin"]], "Lifetime of Variables": [[402, "lifetime-of-variables"]], "Lifetime": [[402, "lifetime"]], "Global Variables": [[402, "global-variables"], [576, "global-variables"]], "Global Variables: How?": [[402, "global-variables-how"]], "Variable Names": [[405, "variable-names"]], "Variable- and Function Names": [[405, "variable-and-function-names"]], "Data Types, Sizes": [[406, "data-types-sizes"]], "Standard Data Types And Their Sizes": [[406, "standard-data-types-and-their-sizes"]], "Integer Variants (\u201cQualifiers\u201d)": [[406, "integer-variants-qualifiers"]], "Widths": [[406, "widths"]], "Constants": [[407, "constants"]], "Constants and Types": [[407, "constants-and-types"]], "Character Constants: Escape Sequences": [[407, "character-constants-escape-sequences"]], "String Constants": [[407, "string-constants"]], "Character vs. String Constants": [[407, "character-vs-string-constants"]], "Symbolic Constants (1)": [[407, "symbolic-constants-1"]], "Symbolic Constants (2)": [[407, "symbolic-constants-2"]], "Variable Definitions": [[408, "variable-definitions"]], "Definitions und Initialization": [[408, "definitions-und-initialization"]], "Initialization of Automatic Variables": [[408, "initialization-of-automatic-variables"]], "Initialization of Global Variables": [[408, "initialization-of-global-variables"]], "Arithmetic Operators (1)": [[409, "arithmetic-operators-1"]], "Arithmetic Operators (2)": [[409, "arithmetic-operators-2"]], "Relational and Logical Operators": [[410, "relational-and-logical-operators"]], "Relational Operators (1)": [[410, "relational-operators-1"]], "Relational Operators (2)": [[410, "relational-operators-2"]], "Logical (Boolean) Operators": [[410, "logical-boolean-operators"]], "Boolean Operators: Short-Circuit": [[410, "boolean-operators-short-circuit"]], "Type Conversions": [[411, "type-conversions"]], "Implicit Type Conversions": [[411, "implicit-type-conversions"]], "Sign Bugs": [[411, "sign-bugs"]], "Truncation": [[411, "truncation"]], "Sign Propagation": [[411, "sign-propagation"]], "Conversion Using Operators": [[411, "conversion-using-operators"]], "Conversion and unsigned (1)": [[411, "conversion-and-unsigned-1"]], "Conversion and unsigned (2)": [[411, "conversion-and-unsigned-2"]], "Compiler Warnings": [[411, "compiler-warnings"]], "Last Warning": [[411, "last-warning"], [983, "last-warning"]], "Forced Conversion - Cast": [[411, "forced-conversion-cast"]], "Increment, Decrement": [[412, "increment-decrement"]], "Confusion: ++, --": [[412, "confusion"]], "Confused to perfection (1)": [[412, "confused-to-perfection-1"]], "Confused to perfection (2)": [[412, "confused-to-perfection-2"]], "Exercise: Copy and Reduce String": [[413, "exercise-copy-and-reduce-string"]], "Bit-Operators": [[414, "bit-operators"]], "Bit Manipulation": [[414, "bit-manipulation"]], "Bitwise AND and OR": [[414, "bitwise-and-and-or"]], "Bitwise XOR": [[414, "bitwise-xor"]], "Shift Left": [[414, "shift-left"]], "Shift Right": [[414, "shift-right"]], "Inverting (\u201cOne\u2019s-Complement\u201d)": [[414, "inverting-one-s-complement"]], "Assignment with Calculation": [[415, "assignment-with-calculation"]], "Combined Operators": [[415, "combined-operators"]], "?: - Conditional Expression": [[416, "conditional-expression"]], "?: - Conditional Expression (1)": [[416, "conditional-expression-1"]], "?: - Conditional Expression (2)": [[416, "conditional-expression-2"]], "Precedence, Associativity": [[417, "precedence-associativity"]], "Summary: Operators": [[417, "summary-operators"]], "Operators: Precedence und Associativity (1)": [[417, "operators-precedence-und-associativity-1"]], "Operators: Precedence und Associativity (2)": [[417, "operators-precedence-und-associativity-2"]], "More Warnings": [[417, "more-warnings"]], "Statements and Blocks": [[419, "statements-and-blocks"]], "Statement vs. Block": [[419, "statement-vs-block"]], "if - else": [[420, "if-else"]], "Branches": [[420, "branches"]], "True or False? What is Truth?": [[420, "true-or-false-what-is-truth"]], "else is optional (1)": [[420, "else-is-optional-1"]], "else is optional (2)": [[420, "else-is-optional-2"]], "else - if": [[421, "else-if"]], "Style Matters": [[421, "style-matters"]], "switch": [[422, "switch"], [422, "id1"]], "Case Distinctions": [[422, "case-distinctions"]], "if - else if vs. switch": [[422, "if-else-if-vs-switch"]], "Loops: while and for": [[423, "loops-while-and-for"]], "while: general purpose loop": [[423, "while-general-purpose-loop"]], "From while to for (1)": [[423, "from-while-to-for-1"]], "From while to for (2)": [[423, "from-while-to-for-2"]], "for, a Little Closer": [[423, "for-a-little-closer"]], "Comma Operator": [[423, "comma-operator"]], "for: Infamous Idioms": [[423, "for-infamous-idioms"]], "Loops: do - while": [[424, "loops-do-while"]], "do - while: Condition After Body": [[424, "do-while-condition-after-body"]], "goto and Labels": [[426, "goto-and-labels"]], "Structured Programming vs. goto": [[426, "structured-programming-vs-goto"]], "goto: Definition": [[426, "goto-definition"]], "goto: Use Cases": [[426, "goto-use-cases"]], "Nesting": [[428, "nesting"]], "Declaration vs. Definition": [[428, "declaration-vs-definition"]], "A Monolithic Program": [[428, "a-monolithic-program"]], "Separate Compilation": [[428, "separate-compilation"]], "Extern/Global Variables": [[429, "extern-global-variables"]], "Variables: Declaration and Definition": [[429, "variables-declaration-and-definition"]], "Variables: Separating Declaration from Definition (1)": [[429, "variables-separating-declaration-from-definition-1"]], "Variables: Separating Declaration from Definition (2)": [[429, "variables-separating-declaration-from-definition-2"]], "Header Files": [[430, "header-files"]], "Declarations: Problems (1)": [[430, "declarations-problems-1"]], "Declarations: Problems (2)": [[430, "declarations-problems-2"]], "Declarations: Solutions": [[430, "declarations-solutions"]], "Static Variables": [[431, "static-variables"]], "Lifetime and Visibility (1)": [[431, "lifetime-and-visibility-1"]], "Automatic Variables": [[431, "automatic-variables"]], "Local static Variable": [[431, "local-static-variable"]], "Global static Variable": [[431, "global-static-variable"]], "Global Variable": [[431, "global-variable"], [1072, "global-variable"]], "C Preprocessor: Basics": [[432, "c-preprocessor-basics"]], "#include": [[432, "include"]], "Macros: Text Replacement": [[432, "macros-text-replacement"]], "Macros: Constant Definition": [[432, "macros-constant-definition"]], "Macros: Inline Replacement as Function Call (1)": [[432, "macros-inline-replacement-as-function-call-1"]], "Macros: Inline Replacement as Function Call (2)": [[432, "macros-inline-replacement-as-function-call-2"]], "Include Guards (1)": [[432, "include-guards-1"]], "Include Guards (2)": [[432, "include-guards-2"]], "The C Preprocessor: Last Words": [[432, "the-c-preprocessor-last-words"], [433, "the-c-preprocessor-last-words"]], "C Preprocessor: More": [[433, "c-preprocessor-more"]], "Conditional Compilation: Rules": [[433, "conditional-compilation-rules"]], "Conditional Compilation: Examples": [[433, "conditional-compilation-examples"]], "Conditional Compilation: Last Words": [[433, "conditional-compilation-last-words"]], "Macros: Spanning Multiple Lines": [[433, "macros-spanning-multiple-lines"]], "Macros: Multiple Statements as One Statement (1)": [[433, "macros-multiple-statements-as-one-statement-1"]], "Macros: Multiple Statements as One Statement (2)": [[433, "macros-multiple-statements-as-one-statement-2"]], "Stringification (1)": [[433, "stringification-1"]], "Stringification (2)": [[433, "stringification-2"]], "Token Pasting (1)": [[433, "token-pasting-1"]], "Token Pasting (2)": [[433, "token-pasting-2"]], "Warnings and Errors": [[433, "warnings-and-errors"]], "Predefined Macros (1)": [[433, "predefined-macros-1"]], "Pointers and Addresses": [[435, "pointers-and-addresses"]], "Pointers: Basics": [[435, "pointers-basics"]], "Pointer: Operators": [[435, "pointer-operators"]], "More Examples": [[435, "more-examples"]], "Pointers as Function Parameters": [[436, "pointers-as-function-parameters"]], "Call by Reference (1)": [[436, "call-by-reference-1"]], "Call by Reference (2)": [[436, "call-by-reference-2"]], "Exercise: Function That Swaps Two Variables": [[437, "exercise-function-that-swaps-two-variables"]], "Pointers and Arrays": [[438, "pointers-and-arrays"], [440, "pointers-and-arrays"]], "It\u2019s Only Memory": [[438, "it-s-only-memory"]], "Conversion Array \u27f6 Pointer": [[438, "conversion-array-longrightarrow-pointer"]], "Pointer Arithmetic (1)": [[438, "pointer-arithmetic-1"]], "Pointer Arithmetic (2)": [[438, "pointer-arithmetic-2"]], "Pointer Arithmetic (3)": [[438, "pointer-arithmetic-3"]], "Pointer Arithmetic: Difference": [[438, "pointer-arithmetic-difference"]], "Pointer Arithmetic: Array Algorithms": [[438, "pointer-arithmetic-array-algorithms"]], "Pointer Arithmetic: Jump Width? (1)": [[438, "pointer-arithmetic-jump-width-1"]], "Pointer Arithmetic: Jump Width? (2)": [[438, "pointer-arithmetic-jump-width-2"]], "Pointer Arithmetic: Arbitrary Datatypes": [[438, "pointer-arithmetic-arbitrary-datatypes"]], "See also": [[439, null], [864, null], [869, null], [869, null], [870, null], [870, null], [870, null], [875, null], [876, null], [959, null], [986, null], [989, null], [993, null], [995, null], [1074, null]], "main() Can Take Parameters": [[439, "main-can-take-parameters"]], "struct: Basics": [[441, "struct-basics"]], "struct: Compound Datatypes": [[441, "struct-compound-datatypes"]], "struct: How?": [[441, "struct-how"]], "Usage": [[441, "usage"], [631, "usage"], [638, "usage"]], "Nested Structures": [[441, "nested-structures"]], "Memory Layout": [[441, "memory-layout"]], "Recursive Structures?": [[441, "recursive-structures"]], "struct: Functions": [[442, "struct-functions"]], "Parameters and Return (1)": [[442, "parameters-and-return-1"]], "Parameters and Return (2)": [[442, "parameters-and-return-2"]], "Parameters and Return (3)": [[442, "parameters-and-return-3"]], "typedef: Type Alias": [[443, "typedef-type-alias"]], "Alias for Type Names": [[443, "alias-for-type-names"]], "Dynamic Memory": [[445, "dynamic-memory"], [445, "id1"]], "Stack and Global Memory": [[445, "stack-and-global-memory"]], "Dynamic Memory - Usage": [[445, "dynamic-memory-usage"]], "Singly Linked List": [[446, "singly-linked-list"]], "Exercises (1)": [[446, "exercises-1"]], "Exercises (2)": [[446, "exercises-2"]], "Exercises (3)": [[446, "exercises-3"]], "Exercises (4)": [[446, "exercises-4"]], "Exercises (5)": [[446, "exercises-5"]], "Exercises (6)": [[446, "exercises-6"]], "Exercises (7)": [[446, "exercises-7"]], "Exercises (8)": [[446, "exercises-8"]], "Exercises (9)": [[446, "exercises-9"]], "Exercises (10)": [[446, "exercises-10"]], "Exercises (11)": [[446, "exercises-11"]], "Volatile": [[448, "volatile"]], "volatile: The Lie (1)": [[448, "volatile-the-lie-1"]], "volatile: The Lie (2)": [[448, "volatile-the-lie-2"]], "volatile: Valid Use: Hardware": [[448, "volatile-valid-use-hardware"]], "volatile: Valid Use: Unix Signal Handlers": [[448, "volatile-valid-use-unix-signal-handlers"]], "Compiler Intrinsics": [[449, "compiler-intrinsics"]], "Atomic Memory Access": [[449, "atomic-memory-access"]], "Atomic Memory Access: Load/Modify/Store": [[449, "atomic-memory-access-load-modify-store"]], "Load/Modify/Store: Mutex": [[449, "load-modify-store-mutex"]], "Atomic Instructions": [[449, "atomic-instructions"], [978, "atomic-instructions"]], "More GCC \u201cBuiltins\u201d": [[449, "more-gcc-builtins"]], "Alignment": [[450, "alignment"]], "Data Alignment": [[450, "data-alignment"]], "Data Alignment, Compilers": [[450, "data-alignment-compilers"]], "Unaligned Data Access (1)": [[450, "unaligned-data-access-1"]], "Unaligned Data Access (2)": [[450, "unaligned-data-access-2"]], "Padding (1)": [[450, "padding-1"]], "Padding (2)": [[450, "padding-2"]], "Padding (3)": [[450, "padding-3"]], "Padding (4)": [[450, "padding-4"]], "Structure Alignment (1)": [[450, "structure-alignment-1"]], "Structure Alignment (2)": [[450, "structure-alignment-2"]], "And Arrays? (1)": [[450, "and-arrays-1"]], "And Arrays? (2)": [[450, "and-arrays-2"]], "And Arrays? (3)": [[450, "and-arrays-3"]], "Sanity and Readabilty": [[452, "sanity-and-readabilty"]], "Shooting Offense: Unobvious Solution": [[452, "shooting-offense-unobvious-solution"]], "Shooting Offense: Unobvious Problem": [[452, "shooting-offense-unobvious-problem"]], "Shooting Offenses": [[452, "shooting-offenses"]], "Ambiguity": [[452, "ambiguity"]], "Readability": [[452, "readability"]], "Code Smells": [[452, "code-smells"]], "Know Your Integers": [[453, "know-your-integers"]], "Standard Data Types: size_t (1)": [[453, "standard-data-types-size-t-1"]], "Standard Data Types: size_t (2)": [[453, "standard-data-types-size-t-2"]], "Discrete Values - enum": [[454, "discrete-values-enum"], [454, "id1"]], "Discrete Values": [[454, "discrete-values"]], "Discrete Values - Traditional Approach (1)": [[454, "discrete-values-traditional-approach-1"]], "Discrete Values - Traditional Approach (2)": [[454, "discrete-values-traditional-approach-2"]], "Discrete Values - Wishlist": [[454, "discrete-values-wishlist"]], "Discrete Values - enum and switch": [[454, "discrete-values-enum-and-switch"], [454, "id2"]], "Discrete Values - Close to Perfection": [[454, "discrete-values-close-to-perfection"]], "Visibility - static": [[455, "visibility-static"]], "Visibility": [[455, "visibility"]], "A Somewhat Contrived Example (1)": [[455, "a-somewhat-contrived-example-1"]], "A Somewhat Contrived Example (2)": [[455, "a-somewhat-contrived-example-2"]], "The static Keyword (Hooray!)": [[455, "the-static-keyword-hooray"]], "Correctness - const": [[456, "correctness-const"]], "Non-Modifiable Memory (1)": [[456, "non-modifiable-memory-1"]], "Non-Modifiable Memory (2)": [[456, "non-modifiable-memory-2"]], "The const Keyword (1)": [[456, "the-const-keyword-1"]], "The const Keyword (2)": [[456, "the-const-keyword-2"]], "const Variables": [[456, "const-variables"]], "const Parameters (1)": [[456, "const-parameters-1"]], "const Parameters (2)": [[456, "const-parameters-2"]], "Pointers, Pointers, Pointers \u2026 (1)": [[456, "pointers-pointers-pointers-1"]], "Pointers, Pointers, Pointers \u2026 (2)": [[456, "pointers-pointers-pointers-2"]], "Pointers, Pointers, Pointers \u2026 (3)": [[456, "pointers-pointers-pointers-3"]], "Pointers, Pointers, Pointers \u2026 (4)": [[456, "pointers-pointers-pointers-4"]], "Pointers, Pointers, Pointers \u2026 (5)": [[456, "pointers-pointers-pointers-5"]], "Pointers, Pointers, Pointers \u2026 (6)": [[456, "pointers-pointers-pointers-6"]], "Pointers, Pointers, Pointers \u2026 (7)": [[456, "pointers-pointers-pointers-7"]], "Pointers, Pointers, Pointers \u2026 (8)": [[456, "pointers-pointers-pointers-8"]], "Pointers, Pointers, Pointers \u2026 (9)": [[456, "pointers-pointers-pointers-9"]], "Struct Initialization": [[457, "struct-initialization"]], "Good Old Struct Initialization": [[457, "good-old-struct-initialization"]], "C99 Designated Initializer": [[457, "c99-designated-initializer"]], "Explict Type Safety": [[458, "explict-type-safety"]], "Integer Types Are Ambiguous": [[458, "integer-types-are-ambiguous"]], "Example: Ambiguous Error Schemes (1)": [[458, "example-ambiguous-error-schemes-1"]], "Example: Ambiguous Error Schemes (2)": [[458, "example-ambiguous-error-schemes-2"]], "Example: Ambiguous Error Schemes (3)": [[458, "example-ambiguous-error-schemes-3"]], "Artificial Integer Type Safety": [[458, "artificial-integer-type-safety"]], "Error Schemes, Revisited": [[458, "error-schemes-revisited"]], "Error Schemes: Encapsulating Unix Details": [[458, "error-schemes-encapsulating-unix-details"]], "Error Schemes: Using Encapsulated Stuff": [[458, "error-schemes-using-encapsulated-stuff"]], "Wrap-Up: Artificial Type Safety": [[458, "wrap-up-artificial-type-safety"]], "valgrind": [[459, "valgrind"]], "Valgrind": [[459, "id1"]], "Valgrind in Action (1)": [[459, "valgrind-in-action-1"]], "Valgrind in Action (2)": [[459, "valgrind-in-action-2"]], "Valgrind in Action (3)": [[459, "valgrind-in-action-3"]], "Valgrind: more \u2026": [[459, "valgrind-more"]], "Optimization": [[461, "optimization"]], "Optimization - Introduction": [[461, "optimization-introduction"]], "Compute Bound or IO Bound? (1)": [[461, "compute-bound-or-io-bound-1"]], "Compute Bound or IO Bound? (2)": [[461, "compute-bound-or-io-bound-2"]], "Compute Bound or IO Bound? (3)": [[461, "compute-bound-or-io-bound-3"]], "What to do Next?": [[461, "what-to-do-next"]], "Optimizations: Compute Bound Code": [[462, "optimizations-compute-bound-code"]], "Many Ways of Optimization": [[462, "many-ways-of-optimization"]], "Unnecessary Optimizations": [[462, "unnecessary-optimizations"]], "Inlining (1)": [[462, "inlining-1"]], "Inlining (2)": [[462, "inlining-2"]], "Inlining (3)": [[462, "inlining-3"]], "Register Allocation (1)": [[462, "register-allocation-1"]], "Register Allocation (2)": [[462, "register-allocation-2"]], "Peephole Optimization": [[462, "peephole-optimization"]], "Peephole Optimization: Common Subexpression Elimination": [[462, "peephole-optimization-common-subexpression-elimination"]], "Peephole Optimization: Strength Reduction": [[462, "peephole-optimization-strength-reduction"]], "Peephole Optimization: Constant Folding": [[462, "peephole-optimization-constant-folding"]], "Loop Invariants": [[462, "loop-invariants"]], "Loop Unrolling": [[462, "loop-unrolling"]], "Tail Call Optimization": [[462, "tail-call-optimization"]], "CPU Optimization, Last Words": [[462, "cpu-optimization-last-words"]], "GCC: Optimization \u201cLevels\u201d": [[462, "gcc-optimization-levels"]], "Further Reading": [[462, "further-reading"]], "Optimizations: Memory Optimizations": [[463, "optimizations-memory-optimizations"]], "Memory: Caches": [[463, "memory-caches"]], "Locality of reference": [[463, "locality-of-reference"]], "Multidimensional Arrays": [[463, "multidimensional-arrays"]], "Multidimensional Arrays: Cache Thrashing": [[463, "multidimensional-arrays-cache-thrashing"]], "Multidimensional Arrays: Forward Indexing": [[463, "multidimensional-arrays-forward-indexing"]], "Profiling - Famous Words": [[465, "profiling-famous-words"]], "Donald E. Knuth": [[465, null]], "Tony Hoare": [[465, null]], "Larry Wall": [[465, null]], "The Practice of Programming, Brian W. Kernighan and\n             Rob Pike": [[465, null]], "Profiling - Introduction": [[465, "profiling-introduction"]], "GNU Profiler - gprof": [[466, "gnu-profiler-gprof"]], "gprof - How it Works": [[466, "gprof-how-it-works"]], "Using gprof": [[466, "using-gprof"]], "gprof: Flat Profile": [[466, "gprof-flat-profile"]], "gprof: Call Graph": [[466, "gprof-call-graph"]], "gprof: Interpreting The Results": [[466, "gprof-interpreting-the-results"]], "gprof: Visualization": [[466, "gprof-visualization"]], "callgrind": [[467, "callgrind"]], "callgrind - How it Works": [[467, "callgrind-how-it-works"]], "callgrind - How it is Used": [[467, "callgrind-how-it-is-used"]], "callgrind - Analysis Per Commandline": [[467, "callgrind-analysis-per-commandline"]], "callgrind - Analysis With kcachegrind": [[467, "callgrind-analysis-with-kcachegrind"]], "callgrind - Useful Options": [[467, "callgrind-useful-options"]], "oprofile": [[468, "oprofile"]], "oprofile - How it Works": [[468, "oprofile-how-it-works"]], "oprofile - Basic Usage (1)": [[468, "oprofile-basic-usage-1"]], "oprofile - Basic Usage (2)": [[468, "oprofile-basic-usage-2"]], "oprofile - Too Much Information": [[468, "oprofile-too-much-information"]], "oprofile - Call Graph": [[468, "oprofile-call-graph"]], "oprofile - Kernel Symbols (1)": [[468, "oprofile-kernel-symbols-1"]], "oprofile - Kernel Symbols (2)": [[468, "oprofile-kernel-symbols-2"]], "oprofile - Kernel Modules": [[468, "oprofile-kernel-modules"]], "oprofile - System-Wide Profiling": [[468, "oprofile-system-wide-profiling"]], "oprofile - Offline Profiling": [[468, "oprofile-offline-profiling"]], "oprofile - Graphical Beauty": [[468, "oprofile-graphical-beauty"]], "The C Programming Language": [[470, "the-c-programming-language"]], "Group Description": [[470, "group-description"], [598, "group-description"], [688, "group-description"], [730, "group-description"], [731, "group-description"], [779, "group-description"], [783, "group-description"], [785, "group-description"], [927, "group-description"], [935, "group-description"], [936, "group-description"], [403, "group-description"], [418, "group-description"], [427, "group-description"], [434, "group-description"], [440, "group-description"], [444, "group-description"], [447, "group-description"], [451, "group-description"], [460, "group-description"], [464, "group-description"], [469, "group-description"], [590, "group-description"], [613, "group-description"], [616, "group-description"], [619, "group-description"], [660, "group-description"], [669, "group-description"], [755, "group-description"], [763, "group-description"], [767, "group-description"], [990, "group-description"]], "Messages From The Book": [[471, "messages-from-the-book"]], "What\u2019s There? What Have We Accomplished?": [[472, "what-s-there-what-have-we-accomplished"]], "Rules? Why Rules?": [[472, "rules-why-rules"]], "Coding Style": [[472, "coding-style"]], "Disclaimer": [[472, null]], "Design Principles: SOLID": [[472, "design-principles-solid"]], "Another One: YAGNI": [[472, "another-one-yagni"]], "Architecture": [[472, "architecture"]], "Project Management: Traditional": [[472, "project-management-traditional"]], "Project Management: Software": [[472, "project-management-software"]], "So What?": [[472, "so-what"]], "Is Software A Craft? Software Is A Craft! \u27f6 Clean Code": [[473, "is-software-a-craft-software-is-a-craft-longrightarrow-clean-code"]], "Uncle Bob": [[473, "uncle-bob"]], "A Typical Project (Livehacking Screenplay: My Own Bookkeeping Effort)": [[474, "a-typical-project-livehacking-screenplay-my-own-bookkeeping-effort"]], "Spaghetti Version": [[474, "spaghetti-version"]], "A Little Better: Functions (And Commandline Parameters)": [[474, "a-little-better-functions-and-commandline-parameters"]], "Feature Request: Concatenate Input Data From Multiple CSV Files": [[474, "feature-request-concatenate-input-data-from-multiple-csv-files"]], "Feature Request: Concatenate Input Data From YYYY-MM.csv Files": [[474, "feature-request-concatenate-input-data-from-yyyy-mm-csv-files"]], "Where Are We? Questions!": [[474, "where-are-we-questions"]], "Testability: Input Cleaning": [[474, "testability-input-cleaning"]], "Testability: Reading Input (One Or Multiple Files, Explicitly)": [[474, "testability-reading-input-one-or-multiple-files-explicitly"]], "Test Sanity: Common Code": [[474, "test-sanity-common-code"]], "Testability: Reading Input From Directory": [[474, "testability-reading-input-from-directory"]], "Testability: Categorization": [[474, "testability-categorization"]], "Safety Net In Place \u27f6 Refactoring Categorization": [[474, "safety-net-in-place-longrightarrow-refactoring-categorization"]], "Refactoring Input Reading (\u27f6 Overengineering)": [[474, "refactoring-input-reading-longrightarrow-overengineering"]], "Basics: Boilerplate, And Executables": [[475, "basics-boilerplate-and-executables"]], "Single Monolithic Executable": [[475, "single-monolithic-executable"]], "Building With CMake": [[475, "building-with-cmake"]], "Building With CMake: Separate Source And Build Directories": [[475, "building-with-cmake-separate-source-and-build-directories"]], "Executables Consisting Of Multiple Sources": [[475, "executables-consisting-of-multiple-sources"]], "Problem: Duplicate Compilation": [[475, "problem-duplicate-compilation"]], "Problem: More Functionality": [[475, "problem-more-functionality"]], "Solution: Libraries": [[475, "solution-libraries"], [1025, "solution-libraries"]], "\u201cConfigured\u201d Header Files": [[476, "configured-header-files"]], "Problem": [[476, "problem"], [484, "problem"], [490, "problem"], [491, "problem"], [492, "problem"], [495, "problem"], [501, "problem"], [549, "problem"], [823, "problem"], [954, "problem"]], "Configured Files": [[476, "configured-files"]], "Use In Compiled Code": [[476, "use-in-compiled-code"]], "C++, Debug/Release, CMake \u201cProgramming\u201d, Rants": [[477, "c-debug-release-cmake-programming-rants"]], "Pause": [[477, "pause"]], "Class Diagram": [[477, "class-diagram"]], "C++ Standard Version": [[477, "c-standard-version"]], "Debug Vs. Release Builds: CMAKE_BUILD_TYPE": [[477, "debug-vs-release-builds-cmake-build-type"]], "Compiler Type": [[477, "compiler-type"]], "Strings And Lists": [[477, "strings-and-lists"]], "MESSAGE() (A.k.a printf() Debugging)": [[477, "message-a-k-a-printf-debugging"]], "MESSAGE(): Popular \u201cModes\u201d": [[477, "message-popular-modes"]], "FIND_PACKAGE()": [[478, "find-package"]], "FIND_PACKAGE(... REQUIRED)": [[478, "find-package-required"]], "SQLite3 Parameters": [[478, "sqlite3-parameters"]], "Using SQLite3 Parameters": [[478, "using-sqlite3-parameters"]], "Demo Time": [[478, "demo-time"]], "CMake: An Introduction": [[479, "cmake-an-introduction"]], "Installation (\u201cDeployment\u201d)": [[480, "installation-deployment"]], "\u201cPrefix\u201d: Where Everything Comes Together": [[480, "prefix-where-everything-comes-together"]], "Installing Targets": [[480, "installing-targets"]], "Doing The Installation (make install)": [[480, "doing-the-installation-make-install"]], "And Shared Libraries?": [[480, "and-shared-libraries"]], "Shared Libraries: Installed Vs. Local (RUNPATH)": [[480, "shared-libraries-installed-vs-local-runpath"]], "Shared Libraries: ABI Versions": [[480, "shared-libraries-abi-versions"]], "Libraries, And Dependencies": [[481, "libraries-and-dependencies"]], "Libraries And Executables": [[481, "libraries-and-executables"]], "Targets And Dependencies": [[481, "targets-and-dependencies"]], "Visualizing Dependencies": [[481, "visualizing-dependencies"]], "Optional Code, Approach 1: Optional blacklist, C Macro  (Global Flags)": [[482, "optional-code-approach-1-optional-blacklist-c-macro-global-flags"]], "Optional blacklist, C Macro": [[482, "optional-blacklist-c-macro"]], "Optional Dependency In libhello": [[482, "optional-dependency-in-libhello"]], "Optional Dependency In libhello Header File": [[482, "optional-dependency-in-libhello-header-file"]], "Optional Dependency In libhello CPP File": [[482, "optional-dependency-in-libhello-cpp-file"]], "Good Or Bad?": [[482, "good-or-bad"], [483, "good-or-bad"]], "Optional Code, Approach 2: Pushing Optionality Down In Module Interface": [[483, "optional-code-approach-2-pushing-optionality-down-in-module-interface"]], "Remove Too Much CMake Optionality": [[483, "remove-too-much-cmake-optionality"]], "TARGET_COMPILE_DEFINITIONS() (backlist Availablility)": [[483, "target-compile-definitions-backlist-availablility"]], "Push Optionality Down In blacklist (\u27f6 INTERFACE Targets)": [[483, "push-optionality-down-in-blacklist-longrightarrow-interface-targets"]], "Optional Code: Problem Definition, OPTION()": [[484, "optional-code-problem-definition-option"]], "Solution: Add An Option": [[484, "solution-add-an-option"]], "Define Option USE_BLACKLIST; Option Usage, Cache": [[484, "define-option-use-blacklist-option-usage-cache"]], "Option Handling: Many Approaches": [[484, "option-handling-many-approaches"]], "Shared Libraries (Preview)": [[485, "shared-libraries-preview"]], "\u201cNormal\u201d Libraries": [[485, "normal-libraries"]], "Building Shared Libraries": [[485, "building-shared-libraries"]], "More About Loading": [[485, "more-about-loading"]], "Structure - Subdirectories, Dependencies, and Include Paths": [[486, "structure-subdirectories-dependencies-and-include-paths"]], "Reorganization": [[486, "reorganization"]], "Dependencies, And Target Properties": [[486, "dependencies-and-target-properties"]], "Targets, Properties, And More": [[487, "targets-properties-and-more"]], "Target Types": [[487, "target-types"]], "Properties: PRIVATE, PUBLIC, INTERFACE?": [[487, "properties-private-public-interface"]], "Running Tests": [[488, "running-tests"], [1164, "running-tests"]], "Setup And Usage": [[488, "setup-and-usage"]], "Add Simple Test": [[488, "add-simple-test"]], "Checking Test Output": [[488, "checking-test-output"]], "Questionability": [[488, "questionability"]], "C++ Code": [[489, "c-code"]], "Abstract Factory": [[490, "abstract-factory"]], "I2C Sensor Subhierarchy": [[490, "i2c-sensor-subhierarchy"]], "Problem: I2C Sensor Instantiation": [[490, "problem-i2c-sensor-instantiation"]], "Solution: Factory Objects": [[490, "solution-factory-objects"]], "Adapter": [[491, "adapter"]], "Solution: Adaptation": [[491, "solution-adaptation"]], "Basic Adaptation": [[491, "basic-adaptation"]], "Adapter Must Be-A Sensor": [[491, "adapter-must-be-a-sensor"]], "Adaptee Can Be-Any ASensor": [[491, "adaptee-can-be-any-asensor"]], "Adapter Is Doing Real Measurements": [[491, "adapter-is-doing-real-measurements"]], "Command": [[492, "command"]], "Motivation": [[492, "motivation"], [495, "motivation"], [511, "motivation"], [512, "motivation"], [608, "motivation"], [705, "motivation"], [707, "motivation"], [732, "motivation"], [738, "motivation"], [1045, "motivation"], [1051, "motivation"]], "Step 1: Basic insert()": [[492, "step-1-basic-insert"]], "Step 2: Basic find()": [[492, "step-2-basic-find"]], "Step 3: drop()": [[492, "step-3-drop"]], "Step 4: Handle find() Errors": [[492, "step-4-handle-find-errors"]], "Step 5: Handle insert() Errors": [[492, "step-5-handle-insert-errors"]], "Step 6: Bulk Insert?": [[492, "step-6-bulk-insert"]], "Step 6a: Bulk Insert Using std::initializer_list?": [[492, "step-6a-bulk-insert-using-std-initializer-list"]], "SocialDB Source Code": [[493, "socialdb-source-code"]], "Composite": [[494, "composite"]], "Unix Filesystem": [[494, "unix-filesystem"]], "Boolean Expressions": [[494, "boolean-expressions"]], "Thermometers, And Average Calculation": [[494, "thermometers-and-average-calculation"]], "Decorator": [[495, "decorator"]], "Variant 1: Aggregate Base Class Objects": [[495, "variant-1-aggregate-base-class-objects"]], "Variant 2: Aggregate Conrete Class Objects": [[495, "variant-2-aggregate-conrete-class-objects"]], "Step 1: Realize Current Situation": [[495, "step-1-realize-current-situation"]], "Step 2: Decorate ConstantSensor \u27f6 DecoratedConstantSensor": [[495, "step-2-decorate-constantsensor-longrightarrow-decoratedconstantsensor"]], "Step 3: Decorate RandomSensor \u27f6 DecoratedRandomSensor": [[495, "step-3-decorate-randomsensor-longrightarrow-decoratedrandomsensor"]], "Step 4: Verify That DecoratedConstantSensor Can Be Used As Sensor": [[495, "step-4-verify-that-decoratedconstantsensor-can-be-used-as-sensor"]], "Step 5: Verify That DecoratedRandomSensor Can Be Used As Sensor": [[495, "step-5-verify-that-decoratedrandomsensor-can-be-used-as-sensor"]], "Step 6: Verify That Current Situation Still Holds True": [[495, "step-6-verify-that-current-situation-still-holds-true"]], "Design Patterns With C++": [[496, "design-patterns-with-c"]], "Topics/Exercises": [[496, "topics-exercises"]], "Solutions": [[496, "solutions"], [510, "solutions"], [524, "solutions"]], "To Be Done": [[496, "to-be-done"]], "Case Study/Livehacking: Heating Control (Reading Sensors)": [[497, "case-study-livehacking-heating-control-reading-sensors"]], "Step 1: Monolithic": [[497, "step-1-monolithic"]], "Step 2: And D-Bus? \u27f6 Interfaces": [[497, "step-2-and-d-bus-longrightarrow-interfaces"]], "Step 3: Start D-Bus Implementation": [[497, "step-3-start-d-bus-implementation"]], "Pull Demo Logger/Store Out Into Separate Files": [[497, "pull-demo-logger-store-out-into-separate-files"]], "Adapter: DBusLogger": [[497, "adapter-dbuslogger"]], "Adapter: DBusValueStore": [[497, "adapter-dbusvaluestore"]], "Demo Program To Instantiate Either Demo Or DBus": [[497, "demo-program-to-instantiate-either-demo-or-dbus"]], "Stop Here, Need Help": [[497, "stop-here-need-help"]], "Tests": [[497, "tests"], [517, "tests"]], "Interpreter": [[498, "interpreter"]], "Observer": [[499, "observer"]], "OO Design Principles": [[500, "oo-design-principles"]], "Principles: Why? Which?": [[500, "principles-why-which"]], "Single Responsibility": [[500, "single-responsibility"]], "Open/Closed": [[500, "open-closed"]], "Liskov Substitution": [[500, "liskov-substitution"]], "Interface Segregation": [[500, "interface-segregation"]], "Dependency Inversion": [[500, "dependency-inversion"]], "Proxy": [[501, "proxy"]], "Solution: Proxy": [[501, "solution-proxy"]], "Local Variant": [[501, "local-variant"]], "Remote Variant": [[501, "remote-variant"]], "Exercise Foundation: Sensor Hierarchy": [[502, "exercise-foundation-sensor-hierarchy"]], "Hypothetical": [[502, "hypothetical"]], "Class Hierarchy": [[502, "class-hierarchy"]], "Singleton": [[503, "singleton"]], "And class Person?": [[503, "and-class-person"]], "UML Short Introduction": [[504, "uml-short-introduction"]], "Interface": [[504, "interface"]], "Interface Implementation, Inheritance": [[504, "interface-implementation-inheritance"]], "Connectors: Association, Aggregation, Composition": [[504, "connectors-association-aggregation-composition"]], "Association": [[504, "association"]], "Aggregation": [[504, "aggregation"]], "Composition": [[504, "composition"]], "Exercise: Abstract Factory": [[505, "exercise-abstract-factory"]], "Exercise: Adapter": [[506, "exercise-adapter"], [513, "exercise-adapter"]], "Exercise: Command": [[507, "exercise-command"]], "Exercise: Composite": [[508, "exercise-composite"]], "Exercise: Decorator": [[509, "exercise-decorator"]], "Exercises: Design Patterns": [[510, "exercises-design-patterns"]], "Exercise: Interpreter Combined With Adapter (And A Proxy)": [[511, "exercise-interpreter-combined-with-adapter-and-a-proxy"]], "Exercise: Arithmetic Expression Interpreter": [[512, "exercise-arithmetic-expression-interpreter"]], "Expression Interface": [[512, "expression-interface"]], "Arithmetic (Binary) Expressions": [[512, "arithmetic-binary-expressions"]], "Check: Combined Arithmetic Expressions": [[512, "check-combined-arithmetic-expressions"]], "And Variables?": [[512, "and-variables"]], "No Uninitialized Variables!!": [[512, "no-uninitialized-variables"]], "Assigning To Variables": [[512, "assigning-to-variables"]], "Using Variables As Expressions": [[512, "using-variables-as-expressions"]], "Exercise: Proxy (Remote Thermometer)": [[514, "exercise-proxy-remote-thermometer"]], "Network Communication": [[514, "network-communication"]], "Implementation Hints": [[514, "implementation-hints"]], "Exercise: Proxy (Rounding Thermometer)": [[515, "exercise-proxy-rounding-thermometer"]], "Exercise: Singleton (Flexible)": [[516, "exercise-singleton-flexible"]], "Exercise: Singleton (Flexible And Strict)": [[517, "exercise-singleton-flexible-and-strict"]], "Complications": [[517, "complications"]], "Exercise: Singleton (Inflexible)": [[518, "exercise-singleton-inflexible"]], "Solution: Abstract Factory": [[519, "solution-abstract-factory"]], "I2CSensorFactory Abstract Factory": [[519, "i2csensorfactory-abstract-factory"]], "Concrete Factory Implementations": [[519, "concrete-factory-implementations"]], "I2CSensorFactory_Vendor1": [[519, "i2csensorfactory-vendor1"], [519, "id1"]], "Solution: Adapter": [[520, "solution-adapter"]], "Adapter Class For Fahrenheit Sensors": [[520, "adapter-class-for-fahrenheit-sensors"]], "Solution: Command": [[521, "solution-command"]], "Command Classes": [[521, "command-classes"]], "Solution: Composite": [[522, "solution-composite"]], "Averaging (Composite) Sensor": [[522, "averaging-composite-sensor"]], "Solution: Decorator": [[523, "solution-decorator"]], "Decorated Sensor (Intermediate Interface)": [[523, "decorated-sensor-intermediate-interface"]], "Decorated Constant Sensor": [[523, "decorated-constant-sensor"]], "Decorated Random Sensor": [[523, "decorated-random-sensor"]], "Solution: Interpreter Combined With Adapter (And A Proxy)": [[525, "solution-interpreter-combined-with-adapter-and-a-proxy"]], "Solution: Arithmetic Expression Interpreter": [[526, "solution-arithmetic-expression-interpreter"]], "Solution: Observer": [[527, "solution-observer"]], "Solution: Proxy (Remote Thermometer)": [[528, "solution-proxy-remote-thermometer"]], "Client (Proxy) Thermometer": [[528, "client-proxy-thermometer"]], "Remote Stub": [[528, "remote-stub"]], "Solution: Proxy (Rounding Thermometer)": [[529, "solution-proxy-rounding-thermometer"]], "Rounding Sensor (Proxy) Implementation": [[529, "rounding-sensor-proxy-implementation"]], "Solution: Singleton (Flexible)": [[530, "solution-singleton-flexible"]], "Main Program": [[530, "main-program"], [531, "main-program"], [532, "main-program"], [770, "main-program"], [772, "main-program"], [774, "main-program"], [776, "main-program"]], "SocialInsurance Interface": [[530, "socialinsurance-interface"], [531, "socialinsurance-interface"]], "Two Concrete Implementations": [[530, "two-concrete-implementations"], [531, "two-concrete-implementations"]], "OEGK": [[530, "oegk"], [531, "oegk"]], "SVS": [[530, "svs"], [531, "svs"]], "Solution: Singleton (Flexible And Strict)": [[531, "solution-singleton-flexible-and-strict"]], "Solution: Singleton (Inflexible)": [[532, "solution-singleton-inflexible"]], "Singleton Implementation": [[532, "singleton-implementation"]], "Exercise (FH): Introducing a Sensor Class": [[533, "exercise-fh-introducing-a-sensor-class"]], "Github Project": [[533, "github-project"]], "CMake Build": [[533, "cmake-build"], [967, "cmake-build"]], "Dependencies/Usage Relationships": [[533, "dependencies-usage-relationships"]], "Onewire Sensor Usage: Example/Unit-Test": [[533, "onewire-sensor-usage-example-unit-test"]], "Step 1: Preparation": [[533, "step-1-preparation"]], "Step 2: Modify onewire-temperature-<firstname>-<lastname>.cpp To Use class W1Sensor": [[533, "step-2-modify-onewire-temperature-firstname-lastname-cpp-to-use-class-w1sensor"]], "Step 3: Answer A Question": [[533, "step-3-answer-a-question"]], "Exercise (FH): Extract Measurement Loop Into Function": [[534, "exercise-fh-extract-measurement-loop-into-function"]], "Exercise (FH): Replace Sensor": [[535, "exercise-fh-replace-sensor"]], "Exercise (FH): Write A Sensor Class: RandomSensor": [[536, "exercise-fh-write-a-sensor-class-randomsensor"]], "New Sensor Class: RandomSensor": [[536, "new-sensor-class-randomsensor"]], "Implementation Details": [[536, "implementation-details"]], "New Program: random-temperature.cpp": [[536, "new-program-random-temperature-cpp"]], "FH Sensor OO (First Try)": [[537, "fh-sensor-oo-first-try"]], "C++ Exercises": [[538, "c-exercises"]], "Exercise Projects": [[538, "exercise-projects"]], "Exercise: LEDStripeDisplay_nopoly (Non-Polymorphic)": [[539, "exercise-ledstripedisplay-nopoly-non-polymorphic"]], "Topics Covered": [[539, "topics-covered"], [540, "topics-covered"], [541, "topics-covered"], [542, "topics-covered"], [543, "topics-covered"], [544, "topics-covered"], [545, "topics-covered"], [548, "topics-covered"]], "Exercise: Hysteresis_nopoly (Non-Polymorphic)": [[540, "exercise-hysteresis-nopoly-non-polymorphic"]], "Exercise: AveragingSensor_nopoly (Non-Polymorphic)": [[541, "exercise-averagingsensor-nopoly-non-polymorphic"]], "Exercise: ConstantSensor_nopoly (Non-Polymorphic)": [[542, "exercise-constantsensor-nopoly-non-polymorphic"]], "Exercise: MockSensor_nopoly (Non-Polymorphic)": [[543, "exercise-mocksensor-nopoly-non-polymorphic"]], "Exercise: RandomSensor_nopoly (Non-Polymorphic)": [[544, "exercise-randomsensor-nopoly-non-polymorphic"]], "Implementation Hint: Randomicity In C++": [[544, "implementation-hint-randomicity-in-c"]], "Implementation Hint: Initializer Lists": [[544, "implementation-hint-initializer-lists"]], "Exercise: Mocking Switch (Non-Polymorphic)": [[545, "exercise-mocking-switch-non-polymorphic"]], "OO Basics, Interfaces (Shapes)": [[546, "oo-basics-interfaces-shapes"]], "Exercise Table": [[546, "exercise-table"]], "Setup, Exam Procedure": [[546, "setup-exam-procedure"]], "Point": [[546, "point"]], "Point: Constructor and Getter Methods": [[546, "point-constructor-and-getter-methods"]], "Point: Default Constructor": [[546, "point-default-constructor"]], "Point: Static Method: equal()": [[546, "point-static-method-equal"]], "Point: operator==()": [[546, "point-operator"]], "Point: Method: move()": [[546, "point-method-move"]], "Point: operator+=()": [[546, "point-suite-operator-plus-equals"]], "Point: Static Method: add()": [[546, "point-static-method-add"]], "Point: operator+()": [[546, "point-suite-operator-plus"]], "Circle": [[546, "circle"]], "Circle: Constructor": [[546, "circle-constructor"]], "Circle: operator==()": [[546, "circle-operator"]], "Circle: Method: area()": [[546, "circle-method-area"]], "Square": [[546, "square"]], "Square: Constructor": [[546, "square-constructor"]], "Square: operator==()": [[546, "square-operator"]], "Square: Method: area()": [[546, "square-method-area"]], "Interface: Shape": [[546, "interface-shape"]], "Interface: Circle And Square Is-A Shape": [[546, "interface-circle-and-square-is-a-shape"]], "Interface: Can Compute Area Of Any Shape": [[546, "interface-can-compute-area-of-any-shape"]], "Working On Exercise Projects": [[547, "working-on-exercise-projects"]], "Clone Github Repository": [[547, "clone-github-repository"]], "Massage googletest Sub-Module": [[547, "massage-googletest-sub-module"]], "Build Directory: Create Makefiles With cmake": [[547, "build-directory-create-makefiles-with-cmake"]], "Build Directory: Build With make": [[547, "build-directory-build-with-make"]], "Build Directory: Run Tests": [[547, "build-directory-run-tests"]], "Exercise: Sensor Interface": [[548, "exercise-sensor-interface"]], "Problem: Polymorphic Thermometer Usage": [[548, "problem-polymorphic-thermometer-usage"]], "The Exercise": [[548, "the-exercise"]], "Exercise: OneWire Sensor Factory": [[549, "exercise-onewire-sensor-factory"]], "Fixture": [[549, "fixture"], [784, "fixture"]], "basic": [[549, "basic"]], "notfound": [[549, "notfound"]], "find_is_const": [[549, "find-is-const"]], "Testing In Isolation": [[549, "testing-in-isolation"]], "Testing In Reality": [[549, "testing-in-reality"]], "On The PC": [[549, "on-the-pc"]], "On The Target": [[549, "on-the-target"]], "Exercise: OneWire Sensor Class": [[550, "exercise-onewire-sensor-class"]], "Download Monolithic Sensor Implementation": [[550, "download-monolithic-sensor-implementation"]], "Test Monolithic Implementation": [[550, "test-monolithic-implementation"]], "class W1Sensor": [[550, "class-w1sensor"]], "Exercise: Algorithms": [[551, "exercise-algorithms"]], "Copy Into std::vector": [[551, "copy-into-std-vector"]], "Find Element In std::vector": [[551, "find-element-in-std-vector"]], "Sort In-Place": [[551, "sort-in-place"]], "Sort Into A Copy": [[551, "sort-into-a-copy"]], "Exercise: Generic Filter": [[552, "exercise-generic-filter"]], "Exercise: Filter Elements Greater Than 10": [[553, "exercise-filter-elements-greater-than-10"]], "Exercise: Filter Odd Elements": [[554, "exercise-filter-odd-elements"]], "C++ Exercises: Standard Template Library": [[555, "c-exercises-standard-template-library"]], "Exercise: std::map<>": [[556, "exercise-std-map"]], "Exercises: Sensor Repository (std::map)": [[557, "exercises-sensor-repository-std-map"]], "Insert - Not Overwriting Existing Elements": [[558, "insert-not-overwriting-existing-elements"]], "Insert - Sunny Case": [[559, "insert-sunny-case"]], "Lookup - Not Found": [[560, "lookup-not-found"]], "Lookup - Sunny Case": [[561, "lookup-sunny-case"]], "Memory Leaks?": [[562, "memory-leaks"]], "Remove - Not Found": [[563, "remove-not-found"]], "Remove - Sunny Case": [[564, "remove-sunny-case"]], ".size() Is const": [[565, "size-is-const"]], "Exercise: Uniquify A Sequence": [[566, "exercise-uniquify-a-sequence"]], "Exercise: std::vector<>": [[567, "exercise-std-vector"]], "C++: TODO List": [[568, "c-todo-list"]], "Structural": [[568, "structural"]], "STL, Containers and Algorithms": [[568, "stl-containers-and-algorithms"]], "Templates/Overloading": [[568, "templates-overloading"]], "Functors: Overloading the Function Call Operator": [[568, "functors-overloading-the-function-call-operator"]], "Threads": [[568, "threads"]], "C++ >= 11": [[568, "c-11"]], "UserDB Exercise": [[568, "userdb-exercise"]], "Complete Transcription of C++11": [[568, "complete-transcription-of-c-11"]], "Exercise series": [[568, "exercise-series"]], "Code: C++: Class Templates": [[569, "code-c-class-templates"]], "Screenplay: C++: Class Templates": [[570, "screenplay-c-class-templates"]], "C++: Class Templates": [[571, "c-class-templates"]], "Code: C++: Dynamic Memory": [[572, "code-c-dynamic-memory"]], "Screenplay: C++: Dynamic Memory": [[573, "screenplay-c-dynamic-memory"]], "C: malloc()/free()": [[573, "c-malloc-free"]], "valgrind: Memory Leak": [[573, "valgrind-memory-leak"]], "valgrind: Array Bounds Write": [[573, "valgrind-array-bounds-write"]], "C++: new, delete": [[573, "c-new-delete"]], "C++: new, delete on Arrays": [[573, "c-new-delete-on-arrays"]], "valgrind: delete Mismatch": [[573, "valgrind-delete-mismatch"]], "C++: Dynamic Memory": [[574, "c-dynamic-memory"]], "Code: C++: Global Objects Initialization": [[575, "code-c-global-objects-initialization"]], "Screenplay: C++: Global Objects Initialization": [[576, "screenplay-c-global-objects-initialization"]], "Constructor and Destructor Order in Same File": [[576, "constructor-and-destructor-order-in-same-file"]], "Constructor and Destructor Order Across Files": [[576, "constructor-and-destructor-order-across-files"]], "Constructor and Destructor Order Across Files: Dependencies, Bugs": [[576, "constructor-and-destructor-order-across-files-dependencies-bugs"]], "C++: Global Objects Initialization": [[577, "c-global-objects-initialization"]], "Code: C++: Inheritance, Interfaces, virtual": [[578, "code-c-inheritance-interfaces-virtual"]], "Screenplay: C++: Inheritance, Interfaces, virtual": [[579, "screenplay-c-inheritance-interfaces-virtual"]], "C++: Inheritance, Interfaces, virtual": [[580, "c-inheritance-interfaces-virtual"]], "Code: C++: Ownership/RAII": [[581, "code-c-ownership-raii"]], "Screenplay: C++: Ownership/RAII": [[582, "screenplay-c-ownership-raii"]], "Allocate in Constructor": [[582, "allocate-in-constructor"]], "Deallocate in Destructor - Ownership": [[582, "deallocate-in-destructor-ownership"]], "Ownership: 2 x non-const": [[582, "ownership-2-x-non-const"]], "Ownership: const Method": [[582, "ownership-const-method"]], "Ownership: 2 x const": [[582, "ownership-2-x-const"]], "C++: Ownership/RAII": [[583, "c-ownership-raii"]], "Code: C++: STL Containers (Intro)": [[584, "code-c-stl-containers-intro"]], "Screenplay: C++: STL Containers (Intro)": [[585, "screenplay-c-stl-containers-intro"]], "Pointer Arithmetics Recap": [[585, "pointer-arithmetics-recap"]], "Container: std::vector": [[585, "container-std-vector"]], "Algorithm: std::vector and Naive Copy": [[585, "algorithm-std-vector-and-naive-copy"]], "Algorithm: std::vector and std::copy<>": [[585, "algorithm-std-vector-and-std-copy"]], "Container: std::list": [[585, "container-std-list"]], "Container: std::map": [[585, "container-std-map"]], "C++: STL Containers (Intro)": [[586, "c-stl-containers-intro"]], "Code: C++: Templates vs. Interfaces": [[587, "code-c-templates-vs-interfaces"]], "Screenplay: C++: Templates vs. Interfaces": [[588, "screenplay-c-templates-vs-interfaces"]], "C++: Templates vs. Interfaces": [[589, "c-templates-vs-interfaces"]], "Background": [[591, "background"]], "History": [[591, "history"], [1026, "history"]], "Content": [[591, "content"]], "Object Oriented Programming In Good Ol\u2019 C": [[592, "object-oriented-programming-in-good-ol-c"]], "C Is Simple, So Why C++?": [[592, "c-is-simple-so-why-c"]], "struct point: Something That Looks Like A Point": [[592, "struct-point-something-that-looks-like-a-point"]], "Good Style: Explicit Initialization Functions": [[592, "good-style-explicit-initialization-functions"]], "Comparison Functions: (In)Equality": [[592, "comparison-functions-in-equality"]], "Moving Points": [[592, "moving-points"]], "Vector Addition and Subtraction": [[592, "vector-addition-and-subtraction"]], "Distance Of Two Points": [[592, "distance-of-two-points"]], "Length Of A Point\u2019s Position Vector": [[592, "length-of-a-point-s-position-vector"]], "Summary: Is C Good Enough?": [[592, "summary-is-c-good-enough"]], "Copy Constructor, Assignment Operator": [[593, "copy-constructor-assignment-operator"]], "Compiler Generated Copy Constructor": [[593, "compiler-generated-copy-constructor"]], "Rule": [[593, null], [596, null], [695, "rule"]], "Manually Written Copy Constructor And Assignment Operator": [[593, "manually-written-copy-constructor-and-assignment-operator"]], "Classes and Objects": [[594, "classes-and-objects"]], "Introducing C++: class point": [[594, "introducing-c-class-point"]], "Access Specifiers: public And private": [[594, "access-specifiers-public-and-private"]], "Default Constructor": [[594, "default-constructor"], [596, "default-constructor"], [609, "default-constructor"], [610, "default-constructor"], [611, "default-constructor"], [612, "default-constructor"]], "Custom Constructor: Usage": [[594, "custom-constructor-usage"]], "Custom Constructor: Implementation": [[594, "custom-constructor-implementation"]], "Access Methods For Otherwise Private Members": [[594, "access-methods-for-otherwise-private-members"]], "Methods: Operations On An Object": [[594, "methods-operations-on-an-object"]], "And printf()?!": [[594, "and-printf"]], "Custom Constructor": [[595, "custom-constructor"], [609, "custom-constructor"]], "Constructors: why? (1)": [[595, "constructors-why-1"]], "Constructors: why? (2)": [[595, "constructors-why-2"]], "Constructors: Implementation - Inline": [[595, "constructors-implementation-inline"]], "Constructors: Implementation - Out-of-Line": [[595, "constructors-implementation-out-of-line"]], "Compiler Generated Default Constructor": [[596, "compiler-generated-default-constructor"]], "Compiler Generated Default Constructor: Pitfall: Built-In Types": [[596, "compiler-generated-default-constructor-pitfall-built-in-types"]], "Manually Written Default Constructor": [[596, "manually-written-default-constructor"]], "What If User-Defined Constructors Are In Place?": [[596, "what-if-user-defined-constructors-are-in-place"]], "More Constructors, Destructors": [[597, "more-constructors-destructors"]], "Default Constructor (1)": [[597, "default-constructor-1"]], "Default Constructor (2)": [[597, "default-constructor-2"]], "Object Lifecycle - Destructor": [[597, "object-lifecycle-destructor"]], "Destructors (1)": [[597, "destructors-1"]], "Destructors (2)": [[597, "destructors-2"]], "Destructors (3)": [[597, "destructors-3"]], "Destructors (4)": [[597, "destructors-4"]], "Data Encapsulation": [[598, "data-encapsulation"]], "Constructors: Member Initialization": [[599, "constructors-member-initialization"]], "Member Initialization? Assignment?": [[599, "member-initialization-assignment"]], "Real Initialization: Initializer List": [[599, "real-initialization-initializer-list"]], "Why Is That Important?": [[599, "why-is-that-important"]], "Why Else Is That Important?": [[599, "why-else-is-that-important"]], "Object Copy (And Resource Management): There Be Dragons": [[600, "object-copy-and-resource-management-there-be-dragons"]], "Copy in C": [[600, "copy-in-c"]], "Copy Constructor": [[600, "copy-constructor"]], "Pointer Members, And Compiler Generated Copy": [[600, "pointer-members-and-compiler-generated-copy"]], "Why? Dragons Everywhere!": [[600, "why-dragons-everywhere"]], "Solution: Write Copy Constructor Manually": [[600, "solution-write-copy-constructor-manually"]], "Copy Constructor: Recursive/Memberwise": [[600, "copy-constructor-recursive-memberwise"]], "Assignment Operator": [[600, "assignment-operator"]], "Assignment Operator and Pointer Members: Memory Leak": [[600, "assignment-operator-and-pointer-members-memory-leak"]], "Assignment Operator and Pointer Members: Memory Leak, Straighforward Fix": [[600, "assignment-operator-and-pointer-members-memory-leak-straighforward-fix"]], "Assignment Operator and Pointer Members: Self-Assignment": [[600, "assignment-operator-and-pointer-members-self-assignment"]], "Assignment Operator: Self Assignment, Correctly Implemented": [[600, "assignment-operator-self-assignment-correctly-implemented"]], "Overloading": [[601, "overloading"]], "Functions in C": [[601, "functions-in-c"]], "Functions in C++ \u2014 Overloading": [[601, "functions-in-c-overloading"]], "Underlying Mechanism: Name Mangling": [[601, "underlying-mechanism-name-mangling"]], "Overloading Class Methods: Just The Same": [[601, "overloading-class-methods-just-the-same"]], "Objects - Data and Methods": [[602, "objects-data-and-methods"]], "class point Again": [[602, "class-point-again"]], "Simple Methods: Access Methods (\u201cGetters\u201d)": [[602, "simple-methods-access-methods-getters"]], "How Are Members Accessed Inside Methods?": [[602, "how-are-members-accessed-inside-methods"]], "const Methods": [[602, "const-methods"], [603, "const-methods"]], "Non const Methods": [[602, "non-const-methods"]], "const": [[603, "const"]], "const: Immutable Variable": [[603, "const-immutable-variable"]], "const Correctness vs. Pollution": [[603, "const-correctness-vs-pollution"]], "this": [[604, "this"]], "Hidden Pointer: this (1)": [[604, "hidden-pointer-this-1"]], "Hidden Pointer: this (2)": [[604, "hidden-pointer-this-2"]], "Explicit this Pointer": [[604, "explicit-this-pointer"]], "Pass By Copy/Reference": [[605, "pass-by-copy-reference"]], "Pointers Can Be Left Uninitialized": [[605, "pointers-can-be-left-uninitialized"]], "References Cannot (Easily) Be Left Uninitialized": [[605, "references-cannot-easily-be-left-uninitialized"]], "Copy? Reference? C? Pointers!": [[605, "copy-reference-c-pointers"]], "C++: True References": [[605, "c-true-references"]], "And const? Pointers?": [[605, "and-const-pointers"]], "const References": [[605, "const-references"]], "const Reference: Substitute For \u201cPass by Copy\u201d": [[605, "const-reference-substitute-for-pass-by-copy"]], "static Methods": [[606, "static-methods"]], "Methods without Object": [[606, "methods-without-object"]], "Naive Implementation: Global Function": [[606, "naive-implementation-global-function"]], "C++: static Method": [[606, "c-static-method"]], "static Member Variables": [[607, "static-member-variables"]], "Good Old C: extern Global Variables": [[607, "good-old-c-extern-global-variables"]], "ODR: One Definition Rule": [[607, "odr-one-definition-rule"]], "(A Litte) More Overengineered: Declaration In Header File": [[607, "a-litte-more-overengineered-declaration-in-header-file"]], "Same Inside A Class: static Member Variable": [[607, "same-inside-a-class-static-member-variable"]], "Sideway: Definition In A Header File?": [[607, "sideway-definition-in-a-header-file"]], "static inline Member Defnition (Since C++17)": [[607, "static-inline-member-defnition-since-c-17"]], "Implementing (In)Equality": [[608, "implementing-in-equality"]], "Implementing (In)Equality: Global Function": [[608, "implementing-in-equality-global-function"]], "Implementing (In)Equality: Object Method": [[608, "implementing-in-equality-object-method"]], "Implementing Arithmetic: + (Vector Addition)": [[608, "implementing-arithmetic-vector-addition"]], "Implementing Arithmetic: + (Vector Addition): Global Function": [[608, "implementing-arithmetic-vector-addition-global-function"]], "Implementing Arithmetic: + (Vector Addition): Object Method": [[608, "implementing-arithmetic-vector-addition-object-method"]], "Implementing Arithmetic: += (Moving A Point)": [[608, "implementing-arithmetic-moving-a-point"]], "Implementing ostream Shift: std::cout << ...": [[608, "implementing-ostream-shift-std-cout"]], "Exercise (FH): class cuboid": [[609, "exercise-fh-class-cuboid"]], "Building class cuboid Upon class point3d": [[609, "building-class-cuboid-upon-class-point3d"]], "(In-)Equality": [[609, "in-equality"], [610, "in-equality"], [611, "in-equality"], [612, "in-equality"]], "+=": [[609, "id2"], [610, "id1"], [611, "id2"], [612, "id2"]], "-=": [[609, "id4"], [611, "id4"]], "+": [[609, "id6"], [610, "id2"], [611, "id6"], [612, "id3"]], "-": [[609, "id8"], [611, "id8"]], "<< (std::ostream)": [[609, "std-ostream"], [610, "std-ostream"], [611, "std-ostream"], [612, "std-ostream"]], "Surface": [[609, "surface"]], "Volume": [[609, "volume"]], "Exercise (FH): class point": [[610, "exercise-fh-class-point"]], "Initial Build": [[610, "initial-build"]], "Initial Test Run": [[610, "initial-test-run"]], "Extending class point: More Unit Tests": [[610, "extending-class-point-more-unit-tests"]], "Access Methods": [[610, "access-methods"]], "Unary -": [[610, "unary"], [611, "unary"]], "Exercise (FH): class point3d": [[611, "exercise-fh-class-point3d"]], "Building class rectangle Upon class point": [[611, "building-class-rectangle-upon-class-point"], [612, "building-class-rectangle-upon-class-point"]], "Coordinates": [[611, "coordinates"], [612, "coordinates"]], "Absolute Value": [[611, "absolute-value"]], "Distance Between Two Points": [[611, "distance-between-two-points"]], "Exercise (FH): class rectangle": [[612, "exercise-fh-class-rectangle"]], "Width, Height, Area": [[612, "width-height-area"]], "Error Handling: if - else if - else": [[614, "error-handling-if-else-if-else"]], "try - catch": [[615, "try-catch"]], "try - Block": [[615, "try-block"]], "catch - Block": [[615, "catch-block"]], "Standard Library: Exception-Hierarchy": [[615, "standard-library-exception-hierarchy"]], "Custom Exceptions (1)": [[615, "custom-exceptions-1"]], "Custom Exceptions (2)": [[615, "custom-exceptions-2"]], "Throwing Exceptions - throw": [[615, "throwing-exceptions-throw"]], "Last Words": [[615, "last-words"], [618, "last-words"]], "Function Templates": [[617, "function-templates"]], "Origin: Duplicated Code": [[617, "origin-duplicated-code"]], "A simple Function-Template": [[617, "a-simple-function-template"]], "More Templates from the STL": [[617, "more-templates-from-the-stl"]], "Class Templates": [[618, "class-templates"]], "Does This Work With Classes?": [[618, "does-this-work-with-classes"]], "Example: point as a Class Template (1)": [[618, "example-point-as-a-class-template-1"]], "Example: point as a Class Template (2)": [[618, "example-point-as-a-class-template-2"]], "Screenplay: std::copy<>() From <algorithm>": [[620, "screenplay-std-copy-from-algorithm"]], "Screenplay: Pointer Arithmetic, And Algorithms": [[621, "screenplay-pointer-arithmetic-and-algorithms"]], "Screenplay: Pointer Arithmetic Basics": [[622, "screenplay-pointer-arithmetic-basics"]], "Screenplay: Pointer Difference": [[623, "screenplay-pointer-difference"]], "Screenplay: Out Of Range Errors": [[624, "screenplay-out-of-range-errors"]], "Standard Template Library: Basics": [[625, "standard-template-library-basics"]], "Containers, Iterators, Algorithms": [[625, "containers-iterators-algorithms"]], "Pointer Increment and Decrement": [[625, "pointer-increment-and-decrement"]], "Out Of Range Errors (The Spirit Of C)": [[625, "out-of-range-errors-the-spirit-of-c"]], "Pointer Difference": [[625, "pointer-difference"]], "Step Width? (1)": [[625, "step-width-1"]], "Step Width? (2)": [[625, "step-width-2"]], "And Arbitrary Data Types?": [[625, "and-arbitrary-data-types"]], "Enter Algorithms (On Good Old C Arrays)": [[625, "enter-algorithms-on-good-old-c-arrays"]], "STL Algorithms": [[625, "stl-algorithms"]], "STL Containers": [[625, "stl-containers"]], "std::vector (And std::copy())": [[626, "std-vector-and-std-copy"]], "Dynamicity Details": [[626, "dynamicity-details"]], "STL Iterators: Pointer Arithmetic On A std::vector<>": [[626, "stl-iterators-pointer-arithmetic-on-a-std-vector"]], "Algorithms And Containers : std::copy": [[626, "algorithms-and-containers-std-copy"]], "Screenplay: std::vector And std::copy()": [[627, "screenplay-std-vector-and-std-copy"]], "std::vector<> Into C Array": [[627, "std-vector-into-c-array"]], "Copying Into std::vector (Without Allocation)": [[627, "copying-into-std-vector-without-allocation"]], "Solution 1: Pre-allocate Destination": [[627, "solution-1-pre-allocate-destination"]], "Solution 2: std::back_insert_iterator": [[627, "solution-2-std-back-insert-iterator"]], "Screenplay: std::vector Basics": [[628, "screenplay-std-vector-basics"]], "Screenplay: std::vector, And Pointer Arithmetics": [[629, "screenplay-std-vector-and-pointer-arithmetics"]], "Documentation": [[630, null], [631, null], [632, null], [633, null], [634, null], [636, null], [637, null], [638, null], [639, null], [642, null], [643, null], [646, null], [651, null], [797, null], [797, null], [813, null], [815, "documentation"], [815, null], [819, "documentation"], [821, null], [821, null], [821, null], [847, "documentation"], [850, "documentation"], [860, null], [861, null], [864, null], [868, null], [868, null], [875, null], [876, null], [877, null], [877, null], [877, null], [878, null], [893, null], [893, null], [893, null], [894, null], [895, null], [896, null], [912, null], [912, null], [912, null], [915, null], [916, null], [949, null], [951, null], [953, null], [955, null], [956, null], [957, null], [959, null], [959, null], [959, null], [959, null], [959, null], [959, null], [962, null], [963, null], [964, null], [965, null], [965, null], [966, null], [969, null], [969, null], [969, null], [969, null], [1007, null], [1007, null], [1008, null], [1083, null], [1093, null], [1171, "documentation"]], "binary_search<>: On Sorted Sequence": [[630, "binary-search-on-sorted-sequence"]], "More Intelligent Search": [[630, "more-intelligent-search"], [636, "more-intelligent-search"]], "copy<>": [[631, "copy"]], "find<>: Sequential Search, by Equality": [[632, "find-sequential-search-by-equality"]], "Basic Usage": [[632, "basic-usage"], [751, "basic-usage"], [915, "basic-usage"], [1085, "basic-usage"]], "Not Found?": [[632, "not-found"]], "find_if<>: Sequential Search, Customizable": [[633, "find-if-sequential-search-customizable"]], "if, Using a Plain Function": [[633, "if-using-a-plain-function"]], "if, Using a Functor Class": [[633, "if-using-a-functor-class"]], "for_each<>": [[634, "for-each"]], "Basic Algorithms": [[635, "basic-algorithms"]], "Sorted Arrays": [[635, "sorted-arrays"]], "lower_bound<>: On Sorted Sequence": [[636, "lower-bound-on-sorted-sequence"]], "reverse<>: Reversing In-Place": [[637, "reverse-reversing-in-place"]], "reverse_copy<>: Copying and Reversing": [[638, "reverse-copy-copying-and-reversing"]], "sort<>": [[639, "sort"]], "Algorithm: std::sort": [[639, "algorithm-std-sort"]], "Algorithm: std::sort, custom comparison": [[639, "algorithm-std-sort-custom-comparison"]], "Sequential Containers": [[640, "sequential-containers"], [641, "sequential-containers"]], "Common Characteristics": [[640, "common-characteristics"]], "list<>": [[642, "list"]], "Insertion and Deletion": [[642, "insertion-and-deletion"]], "vector<>": [[643, "vector"]], "Characteristics": [[643, "characteristics"]], "Modification at the Back": [[643, "modification-at-the-back"]], "Insertion": [[643, "insertion"]], "Example": [[643, "example"], [1100, "example"]], "Associative Containers": [[644, "associative-containers"], [645, "associative-containers"]], "Type Instantiation": [[646, "type-instantiation"]], "Filling The Container": [[646, "filling-the-container"]], "Inserting Elements": [[646, "inserting-elements"]], "Searching": [[646, "searching"], [670, "searching"]], "Screenplay: std::map Initialization And Inserting": [[647, "screenplay-std-map-initialization-and-inserting"]], "Definining The Type": [[647, "definining-the-type"]], "Initialization": [[647, "initialization"], [670, "initialization"]], "Screenplay: Inserting Elements": [[648, "screenplay-inserting-elements"]], "Subscript Operator": [[648, "subscript-operator"]], "insert()": [[648, "insert"]], "Screenplay: Removing (Erasing) Elements": [[649, "screenplay-removing-erasing-elements"]], "By Pointer (Err, Iterator)": [[649, "by-pointer-err-iterator"]], "By Key": [[649, "by-key"]], "Screenplay: Searching": [[650, "screenplay-searching"]], "find(key)": [[650, "find-key"]], "[key]": [[650, "key"]], "at(key)": [[650, "at-key"]], "multimap<>": [[651, "multimap"]], "Allocator Basics": [[652, "allocator-basics"]], "STL: Exercises": [[654, "stl-exercises"]], "Exercise: Reverse a String": [[655, "exercise-reverse-a-string"]], "Exercise: Reverse A String": [[656, "exercise-reverse-a-string"]], "Solution: Reverse a String": [[657, "solution-reverse-a-string"]], "Naive": [[657, "naive"]], "Using std::reverse<>": [[657, "using-std-reverse"]], "Using std::reverse_copy<>": [[657, "using-std-reverse-copy"]], "Dynamic Memory (To Be Done)": [[659, "dynamic-memory-to-be-done"]], "Inheritance Basics": [[661, "inheritance-basics"]], "Plain (Base) Class": [[661, "plain-base-class"], [662, "plain-base-class"]], "Inheriting (Deriving) From Base": [[661, "inheriting-deriving-from-base"]], "Derived is-a Base?": [[661, "derived-is-a-base"]], "Destructors And Inheritance": [[662, "destructors-and-inheritance"]], "Derived Class, And Destructor": [[662, "derived-class-and-destructor"]], "And Base Class Conversion?": [[662, "and-base-class-conversion"]], "Inheritance And Object Oriented Design": [[663, "inheritance-and-object-oriented-design"]], "C++ \u201cInterfaces\u201d": [[664, "c-interfaces"]], "Bringing It All Together": [[664, "bringing-it-all-together"]], "Polymorphic Usage Of Objects": [[665, "polymorphic-usage-of-objects"]], "What Larger Systems Want": [[665, "what-larger-systems-want"]], "Pitfall \u27f6 Pure Virtual Methods": [[665, "pitfall-longrightarrow-pure-virtual-methods"]], "Pure Virtual Method": [[665, "pure-virtual-method"]], "Inheritance: private, protected (Implementation Inheritance)": [[666, "inheritance-private-protected-implementation-inheritance"]], "Virtual Destructors": [[667, "virtual-destructors"]], "Is-A Relationships And Destructors": [[667, "is-a-relationships-and-destructors"]], "Pure Virtual Destructor?": [[667, "pure-virtual-destructor"]], "Virtual Methods": [[668, "virtual-methods"]], "Simple Is-A Relationship Is Not Enough": [[668, "simple-is-a-relationship-is-not-enough"]], "Enter virtual": [[668, "enter-virtual"]], "Caution: virtual": [[668, "caution-virtual"]], "std::string": [[670, "std-string"]], "Addition, And Such": [[670, "addition-and-such"]], "Conversion From String": [[670, "conversion-from-string"]], "Conversion To String": [[670, "conversion-to-string"]], "Substrings": [[670, "substrings"]], "Exercise: Paint the American Flag Onto Standard Output": [[671, "exercise-paint-the-american-flag-onto-standard-output"]], "FH/Moodle Quiz: C++": [[672, "fh-moodle-quiz-c"]], "Exercises: Miscellaneous": [[673, "exercises-miscellaneous"]], "Exercise: Sum of Integers Coming From cin": [[674, "exercise-sum-of-integers-coming-from-cin"]], "Exercises: User Database": [[675, "exercises-user-database"]], "Exercise: Access Methods for Members": [[676, "exercise-access-methods-for-members"]], "Exercise: const Members": [[677, "exercise-const-members"]], "Exercise: Use const": [[678, "exercise-use-const"]], "Exercise: Default Constructor (was: Arrays of Objects)": [[679, "exercise-default-constructor-was-arrays-of-objects"]], "Exercise: Simple Method (Users Age By n Years)": [[680, "exercise-simple-method-users-age-by-n-years"]], "Exercise: Transform struct User Into A Class": [[681, "exercise-transform-struct-user-into-a-class"]], "Exercise: Insert a User into UserDB": [[682, "exercise-insert-a-user-into-userdb"]], "Exercise: Search a User By Lastname (std::find_if)": [[683, "exercise-search-a-user-by-lastname-std-find-if"]], "Exercise: Search, \u201cUser Not Found\u201d Exception": [[684, "exercise-search-user-not-found-exception"]], "What\u2019s Wrong?": [[684, "what-s-wrong"]], "Exercise: Search a User By Lastname": [[685, "exercise-search-a-user-by-lastname"]], "Exercise: Use std::vector in UserDB": [[686, "exercise-use-std-vector-in-userdb"]], "History, Background": [[689, "history-background"]], "Make C++ Great Again": [[689, "make-c-great-again"]], "The \u201cNew\u201d C++": [[689, "the-new-c"]], "A Live-Hacked Tour Around The New C++": [[690, "a-live-hacked-tour-around-the-new-c"]], "C++03 To-Do List Version": [[690, "c-03-to-do-list-version"]], "Real Container Initialization": [[690, "real-container-initialization"]], "Long iterator Type Names \u27f6 auto": [[690, "long-iterator-type-names-longrightarrow-auto"]], "More auto: Unpacking std::pair": [[690, "more-auto-unpacking-std-pair"]], "Pitfall: Plain auto Creates Copy \u27f6 const auto&": [[690, "pitfall-plain-auto-creates-copy-longrightarrow-const-auto"]], "Iterators Are So Old-School: Range Based For": [[690, "iterators-are-so-old-school-range-based-for"]], "Still Too Old-School: Want Python\u2019s Tuple Unpacking": [[690, "still-too-old-school-want-python-s-tuple-unpacking"]], "What If To-Do List Items Can Really Do Something? \u27f6 Functions": [[690, "what-if-to-do-list-items-can-really-do-something-longrightarrow-functions"]], "Function Pointers Are Old-School \u27f6 std::function": [[690, "function-pointers-are-old-school-longrightarrow-std-function"]], "Definitely Not Old-School: Lambda": [[690, "definitely-not-old-school-lambda"]], "Inevitable: Threads": [[690, "inevitable-threads"]], "Unions? std::variant!": [[690, "unions-std-variant"]], "Wrapping All That Into A Class": [[690, "wrapping-all-that-into-a-class"]], "Architectural Considerations: No Implementation Inheritance Wanted": [[690, "architectural-considerations-no-implementation-inheritance-wanted"]], "Wrapping Up: Initializer": [[690, "wrapping-up-initializer"]], "C++03 enum Types: Motivation": [[691, "c-03-enum-types-motivation"]], "C++03 enum Types: Problems": [[691, "c-03-enum-types-problems"]], "C++11 enum class": [[691, "c-11-enum-class"]], "C++11 enum class: Underlying Type": [[691, "c-11-enum-class-underlying-type"]], "Brace Initialization (Uniform Initialization)": [[692, "brace-initialization-uniform-initialization"]], "std::initializer_list: Brace Initialization, Implementor\u2019s View": [[693, "std-initializer-list-brace-initialization-implementor-s-view"]], "std::initializer_list": [[693, "std-initializer-list"]], "Direct Usage": [[693, "direct-usage"]], "Custom Class That Supports Brace Initialization": [[693, "custom-class-that-supports-brace-initialization"]], "Brace Initialization: Introduction": [[694, "brace-initialization-introduction"]], "Motivation: Inconsistent Initialization Styles": [[694, "motivation-inconsistent-initialization-styles"]], "Motivation: Integral Types Initialization": [[694, "motivation-integral-types-initialization"]], "Motivation: Aggregate Initialization": [[694, "motivation-aggregate-initialization"]], "Motivation: Object Initialization/Constructor": [[694, "motivation-object-initialization-constructor"]], "Motivation: Container Initialization (Missing Pre C++11)": [[694, "motivation-container-initialization-missing-pre-c-11"]], "Motivation: Member Array Initialization": [[694, "motivation-member-array-initialization"]], "Motivation: Heap Array Initialization": [[694, "motivation-heap-array-initialization"]], "Solution: Brace Initialization In C++11": [[694, "solution-brace-initialization-in-c-11"]], "Good: Refuses To Narrow Built-In Types": [[694, "good-refuses-to-narrow-built-in-types"]], "Brace Initialization: A Mess": [[695, "brace-initialization-a-mess"]], "Explicit Constructor And Brace Initialization": [[695, "explicit-constructor-and-brace-initialization"]], "Ambiguity: Explicit And std::initializer_list Constructor": [[695, "ambiguity-explicit-and-std-initializer-list-constructor"]], "Realistic Example: std::vector: Two int (Explicit)": [[695, "realistic-example-std-vector-two-int-explicit"]], "Realistic Example: std::vector: Two int (std::initializer_list)": [[695, "realistic-example-std-vector-two-int-std-initializer-list"]], "Nicolai Josuttis, Complaining About C++": [[695, "nicolai-josuttis-complaining-about-c"]], "Delegating Constructor: Motivation": [[696, "delegating-constructor-motivation"]], "Delegating Constructor: Solution": [[696, "delegating-constructor-solution"]], "constexpr": [[697, "constexpr"]], "Basic Usage: Expressions": [[697, "basic-usage-expressions"]], "constexpr Functions": [[697, "constexpr-functions"]], "Recursive constexpr": [[697, "recursive-constexpr"]], "constexpr Objects": [[697, "constexpr-objects"]], "Afterword, Further Reading": [[698, "afterword-further-reading"]], "Uses In The Standard Library": [[698, "uses-in-the-standard-library"]], "Other Uses": [[698, "other-uses"]], "All Said \u27f6 Guidelines": [[698, "all-said-longrightarrow-guidelines"]], "Further Reading (Well, Videos \ud83d\ude09)": [[698, "further-reading-well-videos-wink"]], "Move Semantics, Rvalue References": [[699, "move-semantics-rvalue-references"]], "Alternative Livehacking": [[699, "alternative-livehacking"]], "Overview": [[700, "overview"], [748, "overview"], [762, "overview"], [764, "overview"], [770, "overview"], [772, "overview"], [774, "overview"], [775, "overview"], [776, "overview"], [777, "overview"], [784, "overview"], [858, "overview"], [869, "overview"], [926, "overview"], [937, "overview"], [938, "overview"], [939, "overview"], [939, "id1"], [940, "overview"], [975, "overview"], [82, "overview"]], "SmartPtr With Move Semantics": [[700, "smartptr-with-move-semantics"]], "Return SmartPtr Object From Function": [[700, "return-smartptr-object-from-function"]], "Assign SmartPtr Object \u27f6 Moved": [[700, "assign-smartptr-object-longrightarrow-moved"]], "Implementing Move Semantics (class String, Live Hacked)": [[701, "implementing-move-semantics-class-string-live-hacked"]], "Copy Semantics, Revisited": [[701, "copy-semantics-revisited"]], "class String, Without Copy": [[701, "class-string-without-copy"]], "Return From Function: Copy (Or Move) Wanted": [[701, "return-from-function-copy-or-move-wanted"]], "Move Constructor? Move?": [[701, "move-constructor-move"]], "Implementing Move Constructor": [[701, "implementing-move-constructor"]], "And Move Assignment?": [[701, "and-move-assignment"]], "Implementing Move Assignment": [[701, "implementing-move-assignment"]], "Using Move Semantics In Own Code": [[702, "using-move-semantics-in-own-code"]], "Using String: class Person": [[702, "using-string-class-person"]], "What?": [[702, "what"], [876, "what"]], "Using Rvalue References Inside Function: std::move": [[702, "using-rvalue-references-inside-function-std-move"]], "Lvalues, Rvalues, And Moving": [[703, "lvalues-rvalues-and-moving"]], "Return Object Problem: Reference To Stack-Based Object": [[703, "return-object-problem-reference-to-stack-based-object"]], "Return Object Problem: Solution: Copy": [[703, "return-object-problem-solution-copy"]], "Move Semantics: Wish List": [[703, "move-semantics-wish-list"]], "Theory: Lvalues": [[703, "theory-lvalues"]], "Theory: Rvalues": [[703, "theory-rvalues"]], "Lvalue References (The Good Old Ones)": [[703, "lvalue-references-the-good-old-ones"]], "Rvalue References: So What Is That?": [[703, "rvalue-references-so-what-is-that"]], "Rvalue References As Function Parameters": [[703, "rvalue-references-as-function-parameters"]], "Use Of Rvalue References Parameter Inside A Function: Is An Lvalue": [[703, "use-of-rvalue-references-parameter-inside-a-function-is-an-lvalue"]], "Enter Move Constructor And Move Assignment": [[703, "enter-move-constructor-and-move-assignment"]], "Rules": [[703, null]], "Templates end with \u201c>>\u201d": [[704, "templates-end-with"]], "Duck Typing (Err, auto) Without A Duck": [[705, "duck-typing-err-auto-without-a-duck"]], "Most Basic Usage": [[705, "most-basic-usage"]], "auto Is Only The Basic Type": [[705, "auto-is-only-the-basic-type"]], "If You Want Reference, Say So!": [[705, "if-you-want-reference-say-so"]], "If You Want Const-Reference, Say So!": [[705, "if-you-want-const-reference-say-so"]], "If You Want Pointer, Say So!": [[705, "if-you-want-pointer-say-so"]], "And Arrays? Decay To Pointers!": [[705, "and-arrays-decay-to-pointers"]], "Concepts: Overview": [[707, "concepts-overview"]], "No Problem: Template Instantiation Chosen By Parameter Type": [[707, "no-problem-template-instantiation-chosen-by-parameter-type"]], "Problem: Template Instantiation Chosen By Parameter Type": [[707, "problem-template-instantiation-chosen-by-parameter-type"]], "Concepts To The Rescue": [[707, "concepts-to-the-rescue"]], "Syntactic Variations": [[707, "syntactic-variations"]], "toolcase-1-conceptless.cpp": [[708, "toolcase-1-conceptless-cpp"]], "toolcase-2-conceptless-error.cpp": [[709, "toolcase-2-conceptless-error-cpp"]], "toolcase-3-concept-integral.cpp": [[710, "toolcase-3-concept-integral-cpp"]], "Concepts: Links": [[711, "concepts-links"]], "Writing Your Own Concepts": [[712, "writing-your-own-concepts"]], "Starting Point: Good Old Function": [[712, "starting-point-good-old-function"]], "Need Template": [[712, "need-template"]], "Error: Requirement Not Fulfilled": [[712, "error-requirement-not-fulfilled"]], "Concept: has_size": [[712, "concept-has-size"]], "Concept: index_returns_double": [[712, "concept-index-returns-double"]], "example-1-good-old-func.cpp": [[713, "example-1-good-old-func-cpp"]], "example-2-need-template.cpp": [[714, "example-2-need-template-cpp"]], "example-4-concept-has-size.cpp": [[715, "example-4-concept-has-size-cpp"]], "example-5-concept-index-ret-double.cpp": [[716, "example-5-concept-index-ret-double-cpp"]], "Coroutines": [[717, "coroutines"]], "Coroutines: An Overview": [[718, "coroutines-an-overview"]], "Foreword": [[718, "foreword"]], "Prototypical Introductory Exampe: Fibonacci Numbers": [[718, "prototypical-introductory-exampe-fibonacci-numbers"]], "Step By Step: Simplest": [[718, "step-by-step-simplest"]], "Simplest: Incremental Fixing And Explaining": [[718, "simplest-incremental-fixing-and-explaining"]], "Driving Coroutines: Coroutine Anatomy": [[718, "driving-coroutines-coroutine-anatomy"]], "Driving Coroutines: Resuming": [[718, "driving-coroutines-resuming"]], "Suspension: Returning Control To Caller (co_yield)": [[718, "suspension-returning-control-to-caller-co-yield"]], "Playing Around: Iteration, Mimicking Python Iterator Protocol": [[718, "playing-around-iteration-mimicking-python-iterator-protocol"]], "Playing Around: Iteration, Range-Based-For": [[718, "playing-around-iteration-range-based-for"]], "Playing Around: Generic Generator": [[718, "playing-around-generic-generator"]], "Playing Around: Fibonacci Numbers, Generator Version": [[718, "playing-around-fibonacci-numbers-generator-version"]], "Pitfalls: Coroutines Are Stateful!": [[718, "pitfalls-coroutines-are-stateful"]], "fibo-generator.cpp": [[719, "fibo-generator-cpp"]], "fibonacci.cpp": [[720, "fibonacci-cpp"]], "generator.h": [[721, "generator-h"]], "generator-hello.cpp": [[722, "generator-hello-cpp"]], "simplest.cpp": [[723, "simplest-cpp"]], "suspend.cpp": [[724, "suspend-cpp"]], "suspend-iter.cpp": [[725, "suspend-iter-cpp"]], "suspend-next.cpp": [[726, "suspend-next-cpp"]], "= default": [[727, "default"]], "Problem: Default Constructor Not Automatically Generated": [[727, "problem-default-constructor-not-automatically-generated"]], "C++ < 11 Solution: Write Default Constructor \ud83d\ude20 \ud83d\udc4e": [[727, "c-11-solution-write-default-constructor-angry-thumbsdown"]], "C++ >= 11 Solution: = default": [[727, "c-11-solution-default"]], "= delete": [[728, "delete"]], "Problem: Copy Is Not Always Wanted": [[728, "problem-copy-is-not-always-wanted"]], "C++ < 11 Solution: Make Copy private": [[728, "c-11-solution-make-copy-private"]], "C++ >= 11 Solution: = delete Copy": [[728, "c-11-solution-delete-copy"]], "final": [[729, "final"]], "Architectural Decisions": [[729, "architectural-decisions"]], "Enter final: Architectural Cleanliness By Compiler": [[729, "enter-final-architectural-cleanliness-by-compiler"]], "New Language Features": [[730, "new-language-features"]], "Lambda": [[731, "lambda"], [732, "lambda"]], "Lambda To The Rescue": [[732, "lambda-to-the-rescue"]], "Excursion: Python Closures": [[732, "excursion-python-closures"]], "Same In C++: Capturing": [[732, "same-in-c-capturing"]], "So What Is That? (Answer: A Functor)": [[732, "so-what-is-that-answer-a-functor"]], "Capturing By Reference \u27f6 Careful!": [[732, "capturing-by-reference-longrightarrow-careful"]], "More About Capturing": [[732, "more-about-capturing"]], "Lambda: More Capturing": [[733, "lambda-more-capturing"]], "More Capture Syntax": [[733, "more-capture-syntax"]], "Capturing Explicitly, By Copy": [[733, "capturing-explicitly-by-copy"]], "Capturing Explicitly, By Reference": [[733, "capturing-explicitly-by-reference"]], "Mixed Explicit Capture": [[733, "mixed-explicit-capture"]], "Define Variables In Capture": [[733, "define-variables-in-capture"]], "Capturing All By Reference": [[733, "capturing-all-by-reference"]], "Capturing All By Copy": [[733, "capturing-all-by-copy"]], "Capturing All By Copy, Except Some By Reference": [[733, "capturing-all-by-copy-except-some-by-reference"]], "Capturing this": [[733, "capturing-this"]], "Live Hacking: Handwritten Functors (Too Much Boilerplate)": [[734, "live-hacking-handwritten-functors-too-much-boilerplate"]], "Original Lambda Demo Proggy": [[734, "original-lambda-demo-proggy"]], "Morph Lambda Into Handwritten Functor Class": [[734, "morph-lambda-into-handwritten-functor-class"]], "Live Hacking: Handwritten Functors, And Capturing By Reference (Pitfalls)": [[735, "live-hacking-handwritten-functors-and-capturing-by-reference-pitfalls"]], "Original, Handwritten Functor (By Copy)": [[735, "original-handwritten-functor-by-copy"]], "Possible Pitfall: Capturing A Reference": [[735, "possible-pitfall-capturing-a-reference"]], "Lifetime Of Temporary, Made Explicit": [[735, "lifetime-of-temporary-made-explicit"]], "Lifetime Of Temporary, Made Explicit \u27f6 \ud83d\ude91": [[735, "lifetime-of-temporary-made-explicit-longrightarrow-ambulance"]], "override": [[737, "override"]], "Correct Overriding \u2026": [[737, "correct-overriding"]], "\u2026 Is Very Hard": [[737, "is-very-hard"]], "More Problems Arise": [[737, "more-problems-arise"]], "Solution: override": [[737, "solution-override"]], "Range Based for Loops: Introduction": [[738, "range-based-for-loops-introduction"]], "Enter Range Based for Loops": [[738, "enter-range-based-for-loops"]], "Range Based for Loops, And auto": [[738, "range-based-for-loops-and-auto"]], "Case Study: std::map Iteration": [[738, "case-study-std-map-iteration"]], "Case Study: Range Based for On std::map": [[739, "case-study-range-based-for-on-std-map"]], "Gool Ol\u2019 Days: Iteration In C++ < 11": [[739, "gool-ol-days-iteration-in-c-11"]], "Basic C++11 Iteration: Range Based For, auto, And Initialization": [[739, "basic-c-11-iteration-range-based-for-auto-and-initialization"]], "Variation: Preventing Accidental Copy Using const auto&": [[739, "variation-preventing-accidental-copy-using-const-auto"]], "Pythonicity: Tuple Unpacking, err Structured Binding": [[739, "pythonicity-tuple-unpacking-err-structured-binding"]], "Structured Binding - Preventing Accidental Copy": [[739, "structured-binding-preventing-accidental-copy"]], "Ranges And Views: Good Or Bad?": [[740, "ranges-and-views-good-or-bad"]], "Dangling Iterator Protection": [[740, "dangling-iterator-protection"]], "Performance: views::drop Is Easy": [[740, "performance-views-drop-is-easy"]], "Performance: views::filter Is Not Easy": [[740, "performance-views-filter-is-not-easy"]], "Constraints: How To Read?": [[740, "constraints-how-to-read"]], "And drop()? std::vector Is Easy": [[740, "and-drop-std-vector-is-easy"]], "And drop()? std::list Is Not Easy": [[740, "and-drop-std-list-is-not-easy"]], "One Of Many Bugs, Introduced By .begin() Caching": [[740, "one-of-many-bugs-introduced-by-begin-caching"]], "Exceptions From Rules \u27f6 Dogmatic Don\u2019ts (Sigh, C++)": [[740, "exceptions-from-rules-longrightarrow-dogmatic-don-ts-sigh-c"]], "Ranges: Overview": [[742, "ranges-overview"]], "Ranges?": [[742, "ranges"]], "Containers And Views (Storage Behavior)": [[742, "containers-and-views-storage-behavior"]], "Pipe Syntax": [[742, "pipe-syntax"]], "Views As Parameters: Good Old Template": [[742, "views-as-parameters-good-old-template"]], "Views As Parameters: Abbreviated Function Template": [[742, "views-as-parameters-abbreviated-function-template"]], "Views As Parameters: Concepts": [[742, "views-as-parameters-concepts"]], "Available <ranges> Concepts": [[742, "available-ranges-concepts"]], "Ranges And Views: Links": [[743, "ranges-and-views-links"]], "Tuple Unpacking (Err, Structured Binding)": [[744, "tuple-unpacking-err-structured-binding"]], "Variations, Compatible Data Types": [[744, "variations-compatible-data-types"]], "struct: By Copy": [[744, "struct-by-copy"]], "struct: Reference": [[744, "struct-reference"]], "struct: By const Reference": [[744, "struct-by-const-reference"]], "std::tuple: By Copy": [[744, "std-tuple-by-copy"]], "std::tuple: By Reference": [[744, "std-tuple-by-reference"]], "std::tuple: By const Reference": [[744, "std-tuple-by-const-reference"]], "Arrays: By Copy": [[744, "arrays-by-copy"]], "Arrays: By Reference": [[744, "arrays-by-reference"]], "Arrays: By const Reference": [[744, "arrays-by-const-reference"]], "Smart Pointers: Closing Words": [[745, "smart-pointers-closing-words"]], "Shared Pointers: Closing Words": [[745, "shared-pointers-closing-words"]], "Smart Pointers (std::unique_ptr, std::shared_ptr)": [[746, "smart-pointers-std-unique-ptr-std-shared-ptr"]], "Why Smart Pointers?": [[747, "why-smart-pointers"]], "Recap: Constructors and Destructors": [[747, "recap-constructors-and-destructors"]], "(Trying To) Handwrite A Smart Pointer Class in C++ Before C++11": [[748, "trying-to-handwrite-a-smart-pointer-class-in-c-before-c-11"]], "Sensors To Manage": [[748, "sensors-to-manage"]], "Basic Resource Management, Operator Overloading": [[748, "basic-resource-management-operator-overloading"]], "Copy Constructor And Assignment Operator (And Default Ctor)": [[748, "copy-constructor-and-assignment-operator-and-default-ctor"]], "auto_ptr Style": [[748, "auto-ptr-style"]], "Explicit move() Method Maybe?": [[748, "explicit-move-method-maybe"]], "Stop!!!": [[748, "stop"]], "std::shared_ptr": [[749, "std-shared-ptr"]], "Spirit: Not Unique, But Shared (i.e. Reference Counted)": [[749, "spirit-not-unique-but-shared-i-e-reference-counted"]], "std::shared_ptr: Copy": [[749, "std-shared-ptr-copy"]], "std::shared_ptr vs. std::unique_ptr": [[749, "std-shared-ptr-vs-std-unique-ptr"]], "std::shared_ptr: Object Lifetime": [[749, "std-shared-ptr-object-lifetime"]], "std::shared_ptr: Juggling": [[749, "std-shared-ptr-juggling"]], "Demo: Basic Usage": [[749, "demo-basic-usage"]], "Demo: std::make_shared": [[749, "demo-std-make-shared"]], "Demo: Cyclic References": [[749, "demo-cyclic-references"]], "std::unique_ptr": [[750, "std-unique-ptr"]], "The Spirit Of std::unique_ptr": [[750, "the-spirit-of-std-unique-ptr"]], "Basic Usage: Prevent Leaks": [[750, "basic-usage-prevent-leaks"]], "Eliminate Chance Of Leakage \u27f6 Ownership": [[750, "eliminate-chance-of-leakage-longrightarrow-ownership"]], "Saving Keystrokes: std::make_unique<>()": [[750, "saving-keystrokes-std-make-unique"]], "Explicitly Acknowledging Ownership Transfer: std::move()": [[750, "explicitly-acknowledging-ownership-transfer-std-move"]], "Compiler Can Prove: Implicit Ownership Transfer": [[750, "compiler-can-prove-implicit-ownership-transfer"]], "How To Write Code That Can Take Ownership?": [[750, "how-to-write-code-that-can-take-ownership"]], "Manipulating Pointer Content": [[750, "manipulating-pointer-content"]], "std::weak_ptr": [[751, "std-weak-ptr"]], "Spirit: Borrowed Reference That Could Be Invalid": [[751, "spirit-borrowed-reference-that-could-be-invalid"]], "A Real-Life Example": [[751, "a-real-life-example"]], "Perfect Forwarding": [[752, "perfect-forwarding"]], "Universal References? Forwarding References? REALLY?": [[752, "universal-references-forwarding-references-really"]], "Universal Reference? Binds To Lvalues?": [[752, "universal-reference-binds-to-lvalues"]], "Enter Forwarding": [[752, "enter-forwarding"]], "Exercise: Dual insert() Method In Exercise: Bag Of Items, By Shared Reference": [[752, "exercise-dual-insert-method-in-trainings-material-soup-cxx11-exercises-bag-shared"]], "std::bind": [[753, "std-bind"]], "Why? What\u2019s The Problem?": [[753, "why-what-s-the-problem"]], "Sample Program: All Done Manually": [[753, "sample-program-all-done-manually"]], "Sideway: std::transform": [[753, "sideway-std-transform"]], "Sample Program: Using std::transform": [[753, "sample-program-using-std-transform"]], "std::bind: Null Adaptation, Pointlessly": [[753, "std-bind-null-adaptation-pointlessly"]], "std::bind: Adapting One Parameter To No Parameter": [[753, "std-bind-adapting-one-parameter-to-no-parameter"]], "std::bind: Hardcoding Parameters": [[753, "std-bind-hardcoding-parameters"]], "std::bind: Swapping Parameters \u27f6 std::placeholders": [[753, "std-bind-swapping-parameters-longrightarrow-std-placeholders"]], "std::bind: Hardcoding Only First Parameter \u27f6 std::placeholders": [[753, "std-bind-hardcoding-only-first-parameter-longrightarrow-std-placeholders"]], "std::bind: Functor (Is-A Callable)": [[753, "std-bind-functor-is-a-callable"]], "std::bind: Lambda (Is-A Callable)": [[753, "std-bind-lambda-is-a-callable"]], "Sample Program: Using std::transform With std::bind": [[753, "sample-program-using-std-transform-with-std-bind"]], "Summary": [[753, "summary"], [833, "summary"], [833, "id1"], [1152, "summary"], [1154, "summary"]], "std::function": [[754, "std-function"]], "Classic Polymorphism": [[754, "classic-polymorphism"]], "Classic Polymorphism: Upsides": [[754, "classic-polymorphism-upsides"]], "Classic Polymorphism: Technical Downsides": [[754, "classic-polymorphism-technical-downsides"]], "Classic Polymorphism: More Downsides": [[754, "classic-polymorphism-more-downsides"]], "std::function to the Rescue (1)": [[754, "std-function-to-the-rescue-1"]], "std::function to the Rescue (2)": [[754, "std-function-to-the-rescue-2"]], "std::function: Last Words": [[754, "std-function-last-words"]], "Threads Introduction": [[756, "threads-introduction"]], "Operating System Primitives": [[756, "operating-system-primitives"]], "There Be Dragons": [[756, "there-be-dragons"]], "Threads in C++": [[757, "threads-in-c"]], "Creating Threads is Far Too Easy": [[757, "creating-threads-is-far-too-easy"]], "Joinable vs. Detached": [[757, "joinable-vs-detached"]], "Cornercases in Thread Lifetime": [[757, "cornercases-in-thread-lifetime"]], "Race Conditions": [[758, "race-conditions"], [831, "race-conditions"]], "std::atomic": [[759, "std-atomic"]], "Atomic Instructions (1)": [[759, "atomic-instructions-1"]], "Atomic Instructions (2)": [[759, "atomic-instructions-2"]], "std::mutex And Friends": [[760, "std-mutex-and-friends"]], "std::mutex": [[760, "std-mutex"]], "std::recursive_mutex": [[760, "std-recursive-mutex"]], "std::timed_mutex": [[760, "std-timed-mutex"]], "std::recursive_timed_mutex": [[760, "std-recursive-timed-mutex"]], "Scoped Locking": [[761, "scoped-locking"]], "Explicit Unlocking Considered Dangerous": [[761, "explicit-unlocking-considered-dangerous"]], "RAII - Resource Acquisition Is Initialization": [[761, "raii-resource-acquisition-is-initialization"]], "Simplest: std::lock_guard": [[761, "simplest-std-lock-guard"]], "std::condition_variable (Live Hacking Multithreaded Queue)": [[762, "std-condition-variable-live-hacking-multithreaded-queue"]], "Overview: Operations": [[762, "overview-operations"]], "Communication, Polling: Thread-Safe Queue": [[762, "communication-polling-thread-safe-queue"]], "Anti-Polling: Thread-Safe Queue, And POSIX Condition Variables": [[762, "anti-polling-thread-safe-queue-and-posix-condition-variables"]], "Discussion: Signalling And Waiting, Predicates: Separation Of Concerns": [[762, "discussion-signalling-and-waiting-predicates-separation-of-concerns"]], "Thread-Safe Queue, And C++ Condition Variables": [[762, "thread-safe-queue-and-c-condition-variables"]], "std::promise and std::future (And Some std::chrono) (Some Live Hacking)": [[764, "std-promise-and-std-future-and-some-std-chrono-some-live-hacking"]], "Overview: std::promise": [[764, "overview-std-promise"]], "Overview: std::future": [[764, "overview-std-future"]], "Utterly Wrong: Waiting For Something To Become Ready": [[764, "utterly-wrong-waiting-for-something-to-become-ready"]], "Sideways: std::chrono, And Literals": [[764, "sideways-std-chrono-and-literals"]], "Minimal Fix: Use std::mutex": [[764, "minimal-fix-use-std-mutex"]], "Anti-Clumsiness: Scoped Locking": [[764, "anti-clumsiness-scoped-locking"]], "Pro-Readability: Encapsulate": [[764, "pro-readability-encapsulate"]], "Atomics On Structures?": [[764, "atomics-on-structures"]], "Anti-Polling: Semaphore": [[764, "anti-polling-semaphore"]], "Getting To The Point: std::promise And std::future": [[764, "getting-to-the-point-std-promise-and-std-future"]], "And Exceptions?": [[764, "and-exceptions"]], "std::chrono": [[765, "std-chrono"], [765, "id1"]], "Clock Domains": [[765, "clock-domains"]], "Measuring Time (1)": [[765, "measuring-time-1"]], "Measuring Time (2)": [[765, "measuring-time-2"]], "Sleeping, and Literals": [[765, "sleeping-and-literals"]], "New-Style Union: std::variant": [[766, "new-style-union-std-variant"]], "Problems With C Unions, And C++ Types": [[766, "problems-with-c-unions-and-c-types"]], "Instantiation, Default Initialization, Member Access": [[766, "instantiation-default-initialization-member-access"]], "Non-Default Initialization": [[766, "non-default-initialization"]], "Accessing Non-Current Member: std::bad_variant_access": [[766, "accessing-non-current-member-std-bad-variant-access"]], "Non-Throwing Accessor: std::get_if<>": [[766, "non-throwing-accessor-std-get-if"]], "And Non-Fundamental Types?": [[766, "and-non-fundamental-types"]], "CRTP": [[768, "crtp"], [773, "crtp"]], "std::vector<>: Allocators (Very Incomplete)": [[769, "std-vector-allocators-very-incomplete"]], "Classic Virtual": [[770, "classic-virtual"]], "Sensor Definitions": [[770, "sensor-definitions"], [772, "sensor-definitions"], [774, "sensor-definitions"], [776, "sensor-definitions"]], "Virtual Access": [[770, "virtual-access"], [772, "virtual-access"], [774, "virtual-access"], [775, "virtual-access"], [776, "virtual-access"], [777, "virtual-access"]], "Average Across Many": [[770, "average-across-many"], [772, "average-across-many"], [774, "average-across-many"], [776, "average-across-many"]], "Embedded Problems? Code Bloat? Type Erasure? Solutions?": [[771, "embedded-problems-code-bloat-type-erasure-solutions"]], "virtual Is Bad. Is virtual Bad? (Type Erasure)": [[771, "virtual-is-bad-is-virtual-bad-type-erasure"]], "And CRTP?": [[771, "and-crtp"]], "std::string_view": [[771, "std-string-view"]], "Non-Virtual, But Related": [[772, "non-virtual-but-related"]], "Type Erasure (Static vs. Dynamic Polymorphism), CRTP": [[773, "type-erasure-static-vs-dynamic-polymorphism-crtp"]], "Unrelated (Duck-Typed)": [[774, "unrelated-duck-typed"]], "std::variant (Automatic Virtual Dispatch Using Template Method)": [[775, "std-variant-automatic-virtual-dispatch-using-template-method"]], "std::variant (Manual Virtual Dispatch, Using if)": [[776, "std-variant-manual-virtual-dispatch-using-if"]], "std::variant (Manual Virtual Dispatch, Using std::visit)": [[777, "std-variant-manual-virtual-dispatch-using-std-visit"]], "Why Replace virtual?": [[778, "why-replace-virtual"]], "Drafts": [[779, "drafts"], [927, "drafts"]], "Exercise: Bag Of Items, By Copy": [[780, "exercise-bag-of-items-by-copy"]], "Step 1: Insert, Find": [[780, "step-1-insert-find"]], "Step 2: Remove": [[780, "step-2-remove"]], "Exercise: Bag Of Items, By Shared Reference": [[781, "exercise-bag-of-items-by-shared-reference"]], "Step 1: Transform into std::shared_ptr": [[781, "step-1-transform-into-std-shared-ptr"]], "Step 2: Accidental Move-Insert?": [[781, "step-2-accidental-move-insert"]], "Step 3: Move-Insert, And std::weak_ptr": [[781, "step-3-move-insert-and-std-weak-ptr"]], "Exercise: Bag Of Items, By Unique Reference": [[782, "exercise-bag-of-items-by-unique-reference"]], "std::filesystem": [[784, "std-filesystem"]], "Paths: Composition, Comparison": [[784, "paths-composition-comparison"]], "Absolute and Relative Paths": [[784, "absolute-and-relative-paths"], [917, "absolute-and-relative-paths"]], "Path Component Access": [[784, "path-component-access"]], "Iterating Over Path Components": [[784, "iterating-over-path-components"]], "Current Working Directory": [[784, "current-working-directory"], [896, "current-working-directory"]], "Directory Creation: std::filesystem::create_directory()": [[784, "directory-creation-std-filesystem-create-directory"]], "Directory Creation: std::filesystem::create_directories()": [[784, "directory-creation-std-filesystem-create-directories"]], "Directory Entry Classification: std::filesystem::is_xxx()": [[784, "directory-entry-classification-std-filesystem-is-xxx"]], "Directory Entries: Basics": [[784, "directory-entries-basics"]], "Directory Entries: std::filesystem::directory_entry": [[784, "directory-entries-std-filesystem-directory-entry"]], "Iterating Over Directory Entries": [[784, "iterating-over-directory-entries"]], "Recursive Directory Iteration": [[784, "recursive-directory-iteration"]], "The New C++ (11-\u2026)": [[785, "the-new-c-11"]], "Generated Topic Graph": [[786, "generated-topic-graph"]], "Modern Character Devices (Screenplay)": [[788, "modern-character-devices-screenplay"]], "Modern Character Devices (Slideshow)": [[789, "modern-character-devices-slideshow"]], "Source": [[789, null], [792, null], [794, null], [797, null], [799, null], [802, null], [811, null], [813, null], [823, null], [825, null], [836, null], [841, null]], "Character Devices: Problems": [[789, "character-devices-problems"]], "Dynamic Device Numbers": [[789, "dynamic-device-numbers"]], "Device Classes": [[789, "device-classes"]], "Devices": [[789, "devices"]], "Modern Character Devices": [[790, "modern-character-devices"]], "File Operations on Character Devices (Screenplay)": [[791, "file-operations-on-character-devices-screenplay"]], "Hooks Necessary": [[791, "hooks-necessary"]], "Implement open(), read(), write()": [[791, "implement-open-read-write"]], "ioctl()": [[791, "ioctl"]], "File Operations on Character Devices (Slideshow)": [[792, "file-operations-on-character-devices-slideshow"]], "File Operations: Interface Definition (\u201cvtable\u201d) (1)": [[792, "file-operations-interface-definition-vtable-1"]], "Available Methods": [[792, "available-methods"]], "open(): Userspace": [[792, "open-userspace"]], "open(): Kernelspace": [[792, "open-kernelspace"]], "ioctl(): Userspace": [[792, "ioctl-userspace"]], "ioctl(): Kernelspace": [[792, "ioctl-kernelspace"]], "ioctl(): Requests": [[792, "ioctl-requests"]], "_IO*() Macros": [[792, "io-macros"]], "_IO*() Macros: Usage": [[792, "io-macros-usage"]], "File Operations on Character Devices": [[793, "file-operations-on-character-devices"]], "Coding: First Functionality (Slideshow)": [[794, "coding-first-functionality-slideshow"]], "Implement Event List": [[794, "implement-event-list"]], "Implement ioctl Request to Add an Event": [[794, "implement-ioctl-request-to-add-an-event"]], "Implement a Userspace Test Program": [[794, "implement-a-userspace-test-program"]], "Coding: First Functionality": [[795, "coding-first-functionality"]], "Character Device Basics (Livehacking Screenplay)": [[796, "character-device-basics-livehacking-screenplay"]], "Major and Minor Numbers": [[796, "major-and-minor-numbers"]], "Character Device": [[796, "character-device"]], "Character Device Basics (Slideshow)": [[797, "character-device-basics-slideshow"]], "Major and Minor Numbers: User\u2019s View": [[797, "major-and-minor-numbers-user-s-view"]], "Major and Minor Numbers: Kernel Space": [[797, "major-and-minor-numbers-kernel-space"]], "History: Hardcoded Device Numbers (1)": [[797, "history-hardcoded-device-numbers-1"]], "History: Hardcoded Device Numbers (2)": [[797, "history-hardcoded-device-numbers-2"]], "Character Device (1)": [[797, "character-device-1"]], "Character Device (2)": [[797, "character-device-2"]], "And User Space?": [[797, "and-user-space"]], "Character Device Basics": [[798, "character-device-basics"]], "Coding: Multiple Devices (Slideshow)": [[799, "coding-multiple-devices-slideshow"]], "Instantiate Multiple Devices": [[799, "instantiate-multiple-devices"]], "Coding: Multiple Devices": [[800, "coding-multiple-devices"]], "Coding: Refactoring (Screenplay)": [[801, "coding-refactoring-screenplay"]], "Build Module From Multiple Files": [[801, "build-module-from-multiple-files"]], "Per-Device Structure": [[801, "per-device-structure"]], "Want My Hair Pretty": [[801, "want-my-hair-pretty"]], "Makefile: -Wswitch-enum": [[801, "makefile-wswitch-enum"]], "Coding: Refactoring (Slideshow)": [[802, "coding-refactoring-slideshow"]], "What\u2019s Bad?": [[802, "what-s-bad"]], "Coding: Refactoring": [[803, "coding-refactoring"]], "DMA (Slideshow)": [[804, "dma-slideshow"]], "Address Types": [[804, "address-types"]], "Physical Memory Allocation": [[804, "physical-memory-allocation"]], "DMA Mappings: Overview": [[804, "dma-mappings-overview"]], "Consistent DMA Mappings": [[804, "consistent-dma-mappings"]], "Streaming Mappings: Direction": [[804, "streaming-mappings-direction"]], "Streaming Mappings: To Virtual Address": [[804, "streaming-mappings-to-virtual-address"]], "Streaming Mappings: To Page": [[804, "streaming-mappings-to-page"]], "Streaming Mappings: Scatterlists (1)": [[804, "streaming-mappings-scatterlists-1"]], "Streaming Mappings: Scatterlists (2)": [[804, "streaming-mappings-scatterlists-2"]], "Streaming Mappings: Syncing": [[804, "streaming-mappings-syncing"]], "DMA": [[805, "dma"]], "Building a Fedora Kernel (Screenplay)": [[806, "building-a-fedora-kernel-screenplay"]], "Why Build the Entire Kernel When I Only Want to Build a Module": [[806, "why-build-the-entire-kernel-when-i-only-want-to-build-a-module"]], "Building from \u201cExploded Git Tree\u201d": [[806, "building-from-exploded-git-tree"]], "Building from the RPM Source": [[806, "building-from-the-rpm-source"]], "Fedora: Building the Kernel": [[807, "fedora-building-the-kernel"]], "Fedora: Building External Kernel Modules (Screenplay)": [[808, "fedora-building-external-kernel-modules-screenplay"]], "Prerequisite: Build Entire Kernel": [[808, "prerequisite-build-entire-kernel"]], "Build Modules": [[808, "build-modules"]], "Install Modules": [[808, "install-modules"]], "Fedora: Building External Kernel Modules": [[809, "fedora-building-external-kernel-modules"]], "Module Loading, Hello World (Slideshow)": [[811, "module-loading-hello-world-slideshow"]], "Kernel Driver Anatomy": [[811, "kernel-driver-anatomy"]], "Built-In vs. Loadable Module": [[811, "built-in-vs-loadable-module"]], "Minimum Module Source": [[811, "minimum-module-source"]], "Gotchas: init() and exit()": [[811, "gotchas-init-and-exit"]], "Module Build": [[811, "module-build"]], "Minimum Makefile, Building": [[811, "minimum-makefile-building"]], "Modules: Load/Unload Commands": [[811, "modules-load-unload-commands"]], "Modules: Dependency (and other) Databases": [[811, "modules-dependency-and-other-databases"]], "Module Loading, Hello World": [[812, "module-loading-hello-world"]], "Coding: Raspi GPIO Interrupts (Slideshow)": [[813, "coding-raspi-gpio-interrupts-slideshow"]], "Move to Raspberry Pi, Cross Compiling": [[813, "move-to-raspberry-pi-cross-compiling"]], "Cross Compilation": [[813, "cross-compilation"]], "Cross Compilation Sucks": [[813, "cross-compilation-sucks"]], "Short (Legacy) GPIO API Introduction": [[813, "short-legacy-gpio-api-introduction"]], "Implement New Event Type: Interrupt": [[813, "implement-new-event-type-interrupt"]], "New ioctl: MY_ACTIVATE_GPIO": [[813, "new-ioctl-my-activate-gpio"]], "Interlude: _IO*() Macros": [[813, "interlude-io-macros"]], "Request GPIO": [[813, "request-gpio"]], "Request Interrupt": [[813, "request-interrupt"]], "Coding: Raspi GPIO Interrupts": [[814, "coding-raspi-gpio-interrupts"]], "Interrupts (Slideshow)": [[815, "interrupts-slideshow"]], "Interrupt Facts": [[815, "interrupt-facts"]], "Interrupt Service Routine": [[815, "interrupt-service-routine"]], "Requesting (and Releasing) Interrupts (1)": [[815, "requesting-and-releasing-interrupts-1"]], "IO Memory (Slideshow)": [[817, "io-memory-slideshow"]], "I/O Memory": [[817, "i-o-memory"]], "I/O Memory: Reservation": [[817, "i-o-memory-reservation"]], "Making I/O Memory Accessible": [[817, "making-i-o-memory-accessible"]], "Accessing I/O Memory": [[817, "accessing-i-o-memory"]], "IO Memory": [[818, "io-memory"]], "Dynamic Memory: kmalloc() (Slideshow)": [[819, "dynamic-memory-kmalloc-slideshow"]], "Dynamic Memory: kmalloc()": [[819, "dynamic-memory-kmalloc"], [820, "dynamic-memory-kmalloc"]], "Dynamic Memory: Flags": [[819, "dynamic-memory-flags"]], "Doubly Linked Lists (Slideshow)": [[821, "doubly-linked-lists-slideshow"]], "Big Picture": [[821, "big-picture"]], "List Head": [[821, "list-head"]], "Insert a Node": [[821, "insert-a-node"]], "Iteration, and Getting a Node\u2019s Container": [[821, "iteration-and-getting-a-node-s-container"]], "Emptying a List": [[821, "emptying-a-list"]], "Doubly Linked Lists": [[822, "doubly-linked-lists"]], "Coding: Fix Race Condition (Mutex) (Slideshow)": [[823, "coding-fix-race-condition-mutex-slideshow"]], "What Do We Have?": [[823, "what-do-we-have"]], "Consequences of Not Protecting": [[823, "consequences-of-not-protecting"]], "Protect Event List": [[823, "protect-event-list"]], "Protect Device List": [[823, "protect-device-list"]], "Coding: Fix Race Condition (Mutex)": [[824, "coding-fix-race-condition-mutex"]], "Mutex (and RT Mutex) (Slideshow)": [[825, "mutex-and-rt-mutex-slideshow"]], "Locking in the Kernel": [[825, "locking-in-the-kernel"]], "Mutual Exclusion: Mutex": [[825, "mutual-exclusion-mutex"]], "Mutex: Locking (1)": [[825, "mutex-locking-1"]], "Mutex: Locking (2)": [[825, "mutex-locking-2"]], "Mutex: Releasing": [[825, "mutex-releasing"]], "Realtime Mutex": [[825, "realtime-mutex"]], "Mutex (and RT Mutex)": [[826, "mutex-and-rt-mutex"]], "Network Devices (Slideshow)": [[827, "network-devices-slideshow"]], "Module Initialization: Device Allocation": [[827, "module-initialization-device-allocation"]], "Module Initialization: Device Registration": [[827, "module-initialization-device-registration"]], "Device Methods": [[827, "device-methods"]], "Kernel Networking Layer Utilities": [[827, "kernel-networking-layer-utilities"]], "Network Devices": [[828, "network-devices"]], "PCI (Slideshow)": [[829, "pci-slideshow"]], "First and Foremost": [[829, "first-and-foremost"]], "PCI Driver Methods": [[829, "pci-driver-methods"]], "PCI Driver Structure, and the init() Method": [[829, "pci-driver-structure-and-the-init-method"]], "PCI Device Structure, and the probe() Method": [[829, "pci-device-structure-and-the-probe-method"]], "The probe() Method: Boilerplate": [[829, "the-probe-method-boilerplate"]], "The probe() Method: Interrupt": [[829, "the-probe-method-interrupt"]], "The probe() Method: PCI Resources (BARs)": [[829, "the-probe-method-pci-resources-bars"]], "DMA Support Routines": [[829, "dma-support-routines"]], "PCI": [[830, "pci"]], "Process vs.Atomic Context (Slideshow)": [[831, "process-vs-atomic-context-slideshow"]], "Process Context": [[831, "process-context"]], "Atomic Context": [[831, "atomic-context"]], "Atomic vs. Process Context": [[831, "atomic-vs-process-context"]], "\u201cSleep While Atomic\u201d Debugging": [[831, "sleep-while-atomic-debugging"]], "Process vs.Atomic Context": [[832, "process-vs-atomic-context"]], "Rasperry Pi: Kernel Build": [[833, "rasperry-pi-kernel-build"]], "Cross Toolchain on Host": [[833, "cross-toolchain-on-host"]], "Architecture Name - What\u2019s That?": [[833, "architecture-name-what-s-that"]], "Building a Toolchain with Gentoo\u2019s crossdev": [[833, "building-a-toolchain-with-gentoo-s-crossdev"]], "Other Toolchains": [[833, "other-toolchains"]], "Kernel Source": [[833, "kernel-source"]], "Kernel Compilation": [[833, "kernel-compilation"]], "Parameters for the Build": [[833, "parameters-for-the-build"]], "Preparing the Kernel .config File": [[833, "preparing-the-kernel-config-file"]], "Building the Kernel Artifacts": [[833, "building-the-kernel-artifacts"]], "Packaging": [[833, "packaging"], [1086, "packaging"]], "Bootloader Artifacts": [[833, "bootloader-artifacts"]], "Module Tree": [[833, "module-tree"]], "Deployment": [[833, "deployment"]], "Variation": [[833, "variation"]], "Raspberry Pi: Building the Kernel": [[834, "raspberry-pi-building-the-kernel"]], "Todo jjj": [[834, "todo-jjj"]], "Sample Code Maintenance": [[835, "sample-code-maintenance"]], "Coding: Fix Sleep While Atomic (Slideshow)": [[836, "coding-fix-sleep-while-atomic-slideshow"]], "Simple Spinlock Usage: spin_lock()": [[836, "simple-spinlock-usage-spin-lock"]], "Discuss Call Chain, IRQ State": [[836, "discuss-call-chain-irq-state"]], "Enter spin_lock_irqsave(), spin_unlock_irqrestore()": [[836, "enter-spin-lock-irqsave-spin-unlock-irqrestore"]], "Ah, kmalloc()": [[836, "ah-kmalloc"]], "Coding: Fix Sleep While Atomic": [[837, "coding-fix-sleep-while-atomic"]], "Spinlock (vs. Mutex) (Slideshow)": [[838, "spinlock-vs-mutex-slideshow"]], "Mutual Exclusion: Spinlock": [[838, "mutual-exclusion-spinlock"]], "Spinlock Initialization": [[838, "spinlock-initialization"]], "Simple Lock/Unlock": [[838, "simple-lock-unlock"]], "Simple is not Bulletproof: Interrupt State": [[838, "simple-is-not-bulletproof-interrupt-state"]], "Mutual Exclusion: Conclusion": [[838, "mutual-exclusion-conclusion"]], "Spinlock (vs. Mutex)": [[839, "spinlock-vs-mutex"]], "dup(), fork(), and Reference Counting (Stub)": [[840, "dup-fork-and-reference-counting-stub"]], "Coding: Timed Event (Slideshow)": [[841, "coding-timed-event-slideshow"]], "Per-Event Timestamp": [[841, "per-event-timestamp"]], "Discussion: Deferred Events": [[841, "discussion-deferred-events"]], "Add Timer": [[841, "add-timer"]], "Gotcha: Cleanup Running Timer": [[841, "gotcha-cleanup-running-timer"]], "More Gotchas": [[841, "more-gotchas"]], "Coding: Timed Event": [[842, "coding-timed-event"]], "Timer Management (Slideshow)": [[843, "timer-management-slideshow"]], "Original Timer API": [[843, "original-timer-api"]], "jiffies": [[843, "jiffies"]], "\u201cTimer Wheel\u201d Methods": [[843, "timer-wheel-methods"]], "Better Documentation": [[843, "better-documentation"]], "Timer Management": [[844, "timer-management"]], "To Do List": [[845, "to-do-list"]], "Accessing Userspace Memory (Screenplay)": [[846, "accessing-userspace-memory-screenplay"]], "New ioctl: GET_ONE_EVENT": [[846, "new-ioctl-get-one-event"]], "Getting One Event": [[846, "getting-one-event"]], "copy_to_user()": [[846, "copy-to-user"]], "Userspace Test Program": [[846, "userspace-test-program"]], "Accessing Userspace Memory (Slideshow)": [[847, "accessing-userspace-memory-slideshow"]], "Address Spaces": [[847, "address-spaces"]], "Copying To and From Userspace": [[847, "copying-to-and-from-userspace"]], "Accessing Userspace Memory": [[848, "accessing-userspace-memory"]], "Waiting for Something (Screenplay)": [[849, "waiting-for-something-screenplay"]], "read() Not Implemented": [[849, "read-not-implemented"]], "Implementing read() Naively": [[849, "implementing-read-naively"]], "Discussion: What If Nothing\u2019s There?": [[849, "discussion-what-if-nothing-s-there"]], "Implementing O_NONBLOCK": [[849, "implementing-o-nonblock"]], "Waiting for Something (Slideshow)": [[850, "waiting-for-something-slideshow"]], "Waiting for Something": [[850, "waiting-for-something"], [851, "waiting-for-something"]], "Wait Queues: Initializing": [[850, "wait-queues-initializing"]], "Wait Queue: Waiting": [[850, "wait-queue-waiting"]], "Wait Queue: Waking": [[850, "wait-queue-waking"]], "Workqueue (Screenplay)": [[852, "workqueue-screenplay"]], "Add Workqueue": [[852, "add-workqueue"]], "Submit/Defer Work From Atomic Context": [[852, "submit-defer-work-from-atomic-context"]], "Cleanup (Why We Did This, After All)": [[852, "cleanup-why-we-did-this-after-all"]], "Finish": [[852, "finish"]], "Workqueue (Slideshow)": [[853, "workqueue-slideshow"]], "Workqueue: Motivation": [[853, "workqueue-motivation"]], "Creating/Destroying a Workqueue": [[853, "creating-destroying-a-workqueue"]], "What is Work?": [[853, "what-is-work"]], "Submitting Work": [[853, "submitting-work"]], "Workqueue": [[854, "workqueue"]], "Exercises: Archiving And Compression": [[855, "exercises-archiving-and-compression"]], "gzip": [[857, "gzip"]], "Compression Tools: Comparison": [[858, "compression-tools-comparison"]], "tar": [[859, "tar"]], "Creating And Viewing Archives": [[859, "creating-and-viewing-archives"]], "(De)Compression": [[859, "de-compression"]], "Etiquette": [[859, "etiquette"]], "Option Summary": [[859, "option-summary"]], "Being Creative With The Pipe": [[859, "being-creative-with-the-pipe"]], "Exam (ECE/SS2022/G1): Do A Lot With Files And Directories": [[860, "exam-ece-ss2022-g1-do-a-lot-with-files-and-directories"]], "Precondition: Logged-In To Remote/Exam Computer": [[860, "precondition-logged-in-to-remote-exam-computer"], [861, "precondition-logged-in-to-remote-exam-computer"]], "Create Exam Skeleton (5 Points)": [[860, "create-exam-skeleton-5-points"], [861, "create-exam-skeleton-5-points"]], "Create Credentials Files (10 Points)": [[860, "create-credentials-files-10-points"]], "Public Place (10 Points)": [[860, "public-place-10-points"], [861, "public-place-10-points"]], "Private Place (10 Points)": [[860, "private-place-10-points"], [861, "private-place-10-points"]], "Shared File in Public Place (10 Points)": [[860, "shared-file-in-public-place-10-points"], [861, "shared-file-in-public-place-10-points"]], "Make A Backup Of ~/exam-01 (15 Points)": [[860, "make-a-backup-of-exam-01-15-points"], [861, "make-a-backup-of-exam-01-15-points"]], "Exam (ECE/SS2022/G2): Do A Lot With Files And Directories": [[861, "exam-ece-ss2022-g2-do-a-lot-with-files-and-directories"]], "Create Business Cards (10 Points)": [[861, "create-business-cards-10-points"]], "Exercises/Exams: Linux Basics": [[862, "exercises-exams-linux-basics"]], "Linux Basics": [[863, "linux-basics"]], "Everything Is A File (Live Demo)": [[864, "everything-is-a-file-live-demo"]], "Simple is beautiful": [[864, "simple-is-beautiful"]], "Ok: a File is a File": [[864, "ok-a-file-is-a-file"]], "Is a Serial Interface (UART) a File?": [[864, "is-a-serial-interface-uart-a-file"]], "Pseudo Terminals": [[864, "pseudo-terminals"]], "Disks and Partitions": [[864, "disks-and-partitions"]], "/proc and /sys": [[864, "proc-and-sys"]], "Pseudo Devices": [[864, "pseudo-devices"]], "Environment (Variables)": [[865, "environment-variables"]], "Shell: Environment Variables, And Process Creation": [[865, "shell-environment-variables-and-process-creation"]], "Popular Environment Variables: HOME, SHELL, USER": [[865, "popular-environment-variables-home-shell-user"]], "Popular Environment Variables: PATH": [[865, "popular-environment-variables-path"]], "FH/Moodle Quiz: Linux Basics": [[866, "fh-moodle-quiz-linux-basics"]], "User Space, Kernel Space": [[866, "user-space-kernel-space"]], "Processes, Scheduling, and Virtual Memory": [[866, "processes-scheduling-and-virtual-memory"]], "Login? What Is That?": [[868, "login-what-is-that"]], "Authentication: Prompting The User For Login Data": [[868, "authentication-prompting-the-user-for-login-data"]], "Authentication: Verification Of Login Data": [[868, "authentication-verification-of-login-data"]], "And After Successful Authentication?": [[868, "and-after-successful-authentication"]], "Impersonation": [[868, "impersonation"]], "Logged In, Finally": [[868, "logged-in-finally"]], "User Space, Kernel Space?": [[869, "user-space-kernel-space"]], "User Space: Abstractions": [[869, "user-space-abstractions"]], "Kernel: Where The Heavy Stuff Is": [[869, "kernel-where-the-heavy-stuff-is"]], "Booting a Computer": [[869, "booting-a-computer"]], "Processes, Scheduling, Address Spaces": [[870, "processes-scheduling-address-spaces"]], "Problem: Owning the CPU?": [[870, "problem-owning-the-cpu"]], "Solution: Scheduling (Time Slices)": [[870, "solution-scheduling-time-slices"]], "Problem: Owning all Memory?": [[870, "problem-owning-all-memory"]], "Solution: Virtual Memory": [[870, "solution-virtual-memory"]], "Process Attributes: User ID (UID)": [[870, "process-attributes-user-id-uid"]], "Process Attributes: Groups": [[870, "process-attributes-groups"]], "Processes: More Attributes": [[870, "processes-more-attributes"]], "Process Hierarchy (Parent, Child Process)": [[871, "process-hierarchy-parent-child-process"]], "More Process Rules": [[871, "more-process-rules"]], "Typical Process Tree": [[871, "typical-process-tree"]], "Services, init": [[871, "services-init"]], "Windows Subsystem for Linux (WSL)": [[872, "windows-subsystem-for-linux-wsl"]], "Disclaimer!": [[872, null]], "More Links": [[872, "more-links"]], "My $0.02": [[872, "my-0-02"]], "WSL, Finally": [[872, "wsl-finally"]], "Exercises: IO-Redirection, Pipes": [[873, "exercises-io-redirection-pipes"]], "I/O Redirection": [[875, "i-o-redirection"]], "Standard I/O Streams": [[875, "standard-i-o-streams"]], "I/O Redirection Operators": [[875, "i-o-redirection-operators"]], "Example: Standard Output Redirection": [[875, "example-standard-output-redirection"]], "Example: Standard Input Redirection": [[875, "example-standard-input-redirection"]], "Example: Standard Error Redirection": [[875, "example-standard-error-redirection"]], "Example: Everything Redirection": [[875, "example-everything-redirection"]], "I/O Redirection: Swap stdout And stderr": [[876, "i-o-redirection-swap-stdout-and-stderr"]], "Basic Pipe Usage": [[876, "basic-pipe-usage"]], "Basic Pipe Usage: What The Shell Does": [[876, "basic-pipe-usage-what-the-shell-does"]], "And How Do I Count Lines On stderr?": [[876, "and-how-do-i-count-lines-on-stderr"]], "More Tricks": [[876, "more-tricks"]], "Pipes": [[877, "pipes"]], "Why Pipes?": [[877, "why-pipes"]], "Pipe Facts": [[877, "pipe-facts"]], "Pipe Examples": [[877, "pipe-examples"]], "More Pipe Examples": [[877, "more-pipe-examples"]], "Named Pipes": [[877, "named-pipes"]], "Permissions: Mode, User and Group Ownership": [[878, "permissions-mode-user-and-group-ownership"]], "Owner and Permissions": [[878, "owner-and-permissions"]], "A Simple Example": [[878, "a-simple-example"]], "Teacher\u2019s note: create that constellation (as root)": [[878, null]], "Permission Check: User": [[878, "permission-check-user"]], "Permission Check: Group": [[878, "permission-check-group"]], "Permission Check: Others": [[878, "permission-check-others"]], "Programs: Execute Permissions": [[878, "programs-execute-permissions"]], "Directory Permissions": [[878, "directory-permissions"]], "Permission Bits, octal": [[878, "permission-bits-octal"]], "Shell Commands: Tuning Permissions": [[878, "shell-commands-tuning-permissions"]], "Shell Commands: Changing User/Group Ownership": [[878, "shell-commands-changing-user-group-ownership"]], "Exercise: Determine Your User Credentials": [[879, "exercise-determine-your-user-credentials"]], "FH/Moodle Quiz: Permissions": [[880, "fh-moodle-quiz-permissions"], [881, "fh-moodle-quiz-permissions"]], "Exercises: File System Permissions": [[882, "exercises-file-system-permissions"]], "Exercise: Create Private Directory": [[883, "exercise-create-private-directory"]], "Question: Private Directory": [[884, "question-private-directory"]], "Exercise: Create Public Directory": [[885, "exercise-create-public-directory"]], "Question: Public Directory": [[886, "question-public-directory"]], "Exercise: Create Group-Shared File": [[887, "exercise-create-group-shared-file"]], "SetUID Programs: passwd, sudo, \u2026": [[889, "setuid-programs-passwd-sudo"]], "Problem: Change My Password": [[889, "problem-change-my-password"]], "Solution: Set-UID Bit": [[889, "solution-set-uid-bit"]], "Set-UID: How Does It Work?": [[889, "set-uid-how-does-it-work"]], "Command: chmod": [[889, "command-chmod"]], "Set-UID Is Not A Toy!": [[889, "set-uid-is-not-a-toy"]], "SetUID: Live Demo": [[890, "setuid-live-demo"]], "Real and Effective User ID": [[890, "real-and-effective-user-id"]], "Sample Program": [[890, "sample-program"]], "Set-UID jfasch?": [[890, "set-uid-jfasch"]], "Set-UID root? Danger!": [[890, "set-uid-root-danger"]], "Ugly Hack: Sticky Bit": [[891, "ugly-hack-sticky-bit"]], "Sticky Bit": [[891, "sticky-bit"]], "Default Permissions: umask": [[892, "default-permissions-umask"]], "Default Permissions - umask": [[892, "id1"]], "umask: How Does it Work?": [[892, "umask-how-does-it-work"]], "Shape (1)": [[893, "shape-1"]], "Shape (2)": [[893, "shape-2"]], "Options": [[893, "options"], [922, "options"]], "Help and Manual": [[893, "help-and-manual"]], "Man Pages: Navigation": [[893, "man-pages-navigation"]], "Commandline Editing: Moving, Deleting": [[893, "commandline-editing-moving-deleting"]], "Commandline Editing: Entire Words": [[893, "commandline-editing-entire-words"]], "Commandline Editing: Entire Lines": [[893, "commandline-editing-entire-lines"]], "The Tabulator Key: Command Completion": [[893, "the-tabulator-key-command-completion"]], "The Tabulator Key: Filename Completion": [[893, "the-tabulator-key-filename-completion"]], "Shell Configuration File: ~/.bashrc": [[894, "shell-configuration-file-bashrc"]], "What\u2019s Volatile?": [[894, "what-s-volatile"]], "Copying: cp": [[895, "copying-cp"]], "Option Overview": [[895, "option-overview"]], "Creating backup copy of, say, .bashrc in the home directory": [[895, "creating-backup-copy-of-say-bashrc-in-the-home-directory"]], "Similar: copy a file into a different directory, under a different name": [[895, "similar-copy-a-file-into-a-different-directory-under-a-different-name"]], "Similar: copy a file into a different directory, keeping its name": [[895, "similar-copy-a-file-into-a-different-directory-keeping-its-name"]], "Copy multiple files into a directory": [[895, "copy-multiple-files-into-a-directory"]], "Copying a directory, together with its contents \u27f6 recursive copy": [[895, "copying-a-directory-together-with-its-contents-longrightarrow-recursive-copy"]], "Current Working Directory: pwd": [[896, "current-working-directory-pwd"]], "Changing The Current Working Directory: cd": [[896, "changing-the-current-working-directory-cd"]], "Exercise: Copy Directory Tree": [[897, "exercise-copy-directory-tree"]], "Exercise: Copy Files": [[898, "exercise-copy-files"]], "Exercise: Create Files (I/O Redirection)": [[899, "exercise-create-files-i-o-redirection"]], "Exercise: Move Files": [[900, "exercise-move-files"]], "Exercises: Create/Copy/Move/Remove": [[901, "exercises-create-copy-move-remove"]], "Exercise: mkdir": [[902, "exercise-mkdir"]], "Exercise: Funny Stuff": [[903, "exercise-funny-stuff"]], "Exercise: Remove Directory Tree": [[904, "exercise-remove-directory-tree"]], "Exercise: Verify, Repeat": [[905, "exercise-verify-repeat"]], "FH/Moodle Quiz: Shell": [[906, "fh-moodle-quiz-shell"]], "The Shell - Exercises": [[907, "the-shell-exercises"]], "Exercise: File Types in /dev": [[908, "exercise-file-types-in-dev"]], "Exercise: Size of /etc/passwd": [[909, "exercise-size-of-etc-passwd"]], "Exercises: The ls Command": [[910, "exercises-the-ls-command"]], "Exercise: Permissions of Home Directory": [[911, "exercise-permissions-of-home-directory"]], "Creating And Removing Files and Directories": [[912, "creating-and-removing-files-and-directories"]], "Creating a Directory: mkdir": [[912, "creating-a-directory-mkdir"]], "Creating a File: I/O redirection": [[912, "creating-a-file-i-o-redirection"]], "Creating an Empty File: touch": [[912, "creating-an-empty-file-touch"]], "Removing A File: rm": [[912, "removing-a-file-rm"]], "Removing A Directory: rmdir, rm -r": [[912, "removing-a-directory-rmdir-rm-r"]], "Symbolic Links, Hard Links": [[914, "symbolic-links-hard-links"]], "Directory Listings: The ls Command": [[915, "directory-listings-the-ls-command"]], "Many Options": [[915, "many-options"]], "Hidden Files": [[915, "hidden-files"]], "File Types": [[915, "file-types"]], "Moving and Renaming: mv": [[916, "moving-and-renaming-mv"]], "Renaming A File (or Directory)": [[916, "renaming-a-file-or-directory"]], "Moving a File to Somewhere Else": [[916, "moving-a-file-to-somewhere-else"]], "Moving a Directory to Somewhere Else": [[916, "moving-a-directory-to-somewhere-else"]], "Path Separator": [[917, "path-separator"]], "Relative Paths": [[917, "relative-paths"]], "Absolute Paths": [[917, "absolute-paths"]], "Special Paths": [[917, "special-paths"]], "cat": [[918, "cat"], [918, "id1"]], "cut": [[919, "cut"], [919, "id1"]], "Exercises: Inspecting Text Files": [[920, "exercises-inspecting-text-files"]], "find": [[921, "find"]], "Directories durchsuchen mit find": [[921, "directories-durchsuchen-mit-find"]], "find: Optionen": [[921, "find-optionen"]], "find: Beispiele": [[921, "find-beispiele"]], "find: Verkn\u00fcpfungen": [[921, "find-verknupfungen"]], "find: Verkn\u00fcpfungen: Beispiele": [[921, "find-verknupfungen-beispiele"]], "grep": [[922, "grep"]], "Searching With grep": [[922, "searching-with-grep"]], "More About Regular Expressions": [[922, "more-about-regular-expressions"]], "head And tail": [[924, "head-and-tail"]], "head": [[924, "head"]], "tail": [[924, "tail"]], "head And tail In The Pipe": [[924, "head-and-tail-in-the-pipe"]], "less": [[925, "less"]], "Paging Files Using less": [[925, "paging-files-using-less"]], "Help Screen (Enter With h)": [[925, "help-screen-enter-with-h"]], "stdin, stdout, And The Pipe": [[926, "stdin-stdout-and-the-pipe"]], "stdin, stdout: Examples": [[926, "stdin-stdout-examples"]], "Pipe: Examples": [[926, "pipe-examples"]], "Basics Text Tools": [[926, "basics-text-tools"]], "Yocto": [[928, "yocto"]], "Controlling a Brushless Motor With Raspberry Pi": [[930, "controlling-a-brushless-motor-with-raspberry-pi"]], "Topic": [[930, null]], "Electronic Speed Controller (ESC)": [[930, "electronic-speed-controller-esc"]], "Select Running Mode: \u201cFwd/Rev\u201d": [[930, "select-running-mode-fwd-rev"]], "The \u201cCommand Protocol\u201d, and Calibration": [[930, "the-command-protocol-and-calibration"]], "Driving the Motor": [[930, "driving-the-motor"]], "CAN Interfaces": [[932, "can-interfaces"]], "CAN-Interface: Configuration": [[932, "can-interface-configuration"]], "CAN Utils": [[932, "can-utils"]], "CAN Utils: Usage (1)": [[932, "can-utils-usage-1"]], "CAN Utils: Usage (2)": [[932, "can-utils-usage-2"]], "vcan: Virtual CAN-Bus": [[932, "vcan-virtual-can-bus"]], "Programming": [[933, "programming"]], "CAN Programming": [[933, "can-programming"]], "CAN in C - Socket, Interface Index": [[933, "can-in-c-socket-interface-index"]], "CAN in Python - Socket, Interface Index": [[933, "can-in-python-socket-interface-index"]], "CAN in C - Frames (1)": [[933, "can-in-c-frames-1"]], "CAN in C - Frames (2)": [[933, "can-in-c-frames-2"]], "CAN in Python - Frames": [[933, "can-in-python-frames"]], "Hardware, Kernel": [[934, "hardware-kernel"]], "MCP2515: Schematic": [[934, "mcp2515-schematic"]], "MCP2515: Soldering": [[934, "mcp2515-soldering"]], "MCP2515: SPI": [[934, "mcp2515-spi"]], "MCP2515: Raspberry": [[934, "mcp2515-raspberry"]], "CAN Bus With Linux And Python": [[935, "can-bus-with-linux-and-python"]], "Linux Hardware Interfaces": [[936, "linux-hardware-interfaces"]], "Linux and I2C (using LM73 Temperature Sensor as Slave)": [[937, "linux-and-i2c-using-lm73-temperature-sensor-as-slave"]], "Configuring I2C Master": [[937, "configuring-i2c-master"]], "Enable I2C, Load BCM2835 Platform Driver": [[937, "enable-i2c-load-bcm2835-platform-driver"]], "Raspberry Pi GPIO header pinout": [[937, null]], "Enable Userspace I2C": [[937, "enable-userspace-i2c"]], "Slave Device: LM73": [[937, "slave-device-lm73"]], "Datasheet etc.": [[937, null]], "Optional: Address Selection": [[937, "optional-address-selection"]], "Connecting LM73 to Raspberry Pi": [[937, "connecting-lm73-to-raspberry-pi"]], "i2c-tools/i2cdetect: Diagnostics, Detecting Devices": [[937, "i2c-tools-i2cdetect-diagnostics-detecting-devices"]], "Using the Device: Talking I2C from Userspace": [[937, "using-the-device-talking-i2c-from-userspace"]], "Using the Device: hwmon - Hardware Monitoring": [[937, "using-the-device-hwmon-hardware-monitoring"]], "Building the Kernel, Enabling LM73": [[937, "building-the-kernel-enabling-lm73"]], "Loading the Driver": [[937, "loading-the-driver"]], "Hardware Monitoring (hwmon) Devices": [[937, "hardware-monitoring-hwmon-devices"]], "PWM Userspace Interface (using PCA9685)": [[938, "pwm-userspace-interface-using-pca9685"]], "Pulse Width Modulation (PWM)": [[938, "pulse-width-modulation-pwm"]], "Why An External PWM Controller?": [[938, "why-an-external-pwm-controller"]], "Wiring, Setup, and Testing": [[938, "wiring-setup-and-testing"]], "Talk to Chip Using the sysfs Interface": [[938, "talk-to-chip-using-the-sysfs-interface"]], "Linux and OneWire (using DS18B20 Temperature Sensor as Slave)": [[939, "linux-and-onewire-using-ds18b20-temperature-sensor-as-slave"]], "Master Device, Alterative 1: w1-gpio - OneWire Master in Software": [[939, "master-device-alterative-1-w1-gpio-onewire-master-in-software"]], "Wiring: Attach OneWire Device to GPIO Pin": [[939, "wiring-attach-onewire-device-to-gpio-pin"]], "Master Device, Alterative 2: DS2482 - I2C OneWire Master in Hardware": [[939, "master-device-alterative-2-ds2482-i2c-onewire-master-in-hardware"]], "DS2482-800: 8-Channel 1-Wire Master": [[939, null]], "Wiring: Attach DS2482-800 via I2C": [[939, "wiring-attach-ds2482-800-via-i2c"]], "Configure Software": [[939, "configure-software"]], "Enable I2C, and Check": [[939, "enable-i2c-and-check"]], "Verify That Our Device Is There": [[939, "verify-that-our-device-is-there"]], "Announce (\u201cHotplug\u201d) DS2482 to Linux": [[939, "announce-hotplug-ds2482-to-linux"]], "Wiring: Attach OneWire Device to DS2482-800": [[939, "wiring-attach-onewire-device-to-ds2482-800"]], "Over-Engineering? Beauty?": [[939, "over-engineering-beauty"]], "Hardware Bringup": [[939, "hardware-bringup"]], "Device Usage": [[939, "device-usage"]], "Slave Device: DS18B20 Temperature Sensor": [[939, "slave-device-ds18b20-temperature-sensor"]], "Using the Device": [[939, "using-the-device"]], "As a Generic OneWire Device": [[939, "as-a-generic-onewire-device"]], "As a Hardware Monitoring (hwmon) Device": [[939, "as-a-hardware-monitoring-hwmon-device"]], "lm-sensors": [[939, "lm-sensors"]], "OneWire Caveats": [[939, "onewire-caveats"]], "Bus Topology": [[939, "bus-topology"]], "Error Symptoms": [[939, "error-symptoms"]], "SSH: Basics": [[940, "ssh-basics"]], "Login": [[940, "login"]], "Exit Status, stdin, stdout: Scripting": [[940, "exit-status-stdin-stdout-scripting"]], "Exercise: Copy a File To Remote Machine, And Verify": [[941, "exercise-copy-a-file-to-remote-machine-and-verify"]], "Exercise: Copy a Tree To Remote Machine (And Adjust Permissions)": [[942, "exercise-copy-a-tree-to-remote-machine-and-adjust-permissions"]], "Exercises: SSH": [[943, "exercises-ssh"]], "Exercise: Create SSH Key Pair": [[944, "exercise-create-ssh-key-pair"]], "SSH: Public Key Authentication": [[946, "ssh-public-key-authentication"]], "Local Setup, Key Generation": [[946, "local-setup-key-generation"]], "Key Pair?": [[946, "key-pair"]], "Remote Setup (Wearing The Remote Admin\u2019s Hat)": [[946, "remote-setup-wearing-the-remote-admin-s-hat"]], "SSH: Links": [[947, "ssh-links"]], "SSH: Port Forwarding": [[948, "ssh-port-forwarding"]], "Port Forwarding - The Problem (1)": [[948, "port-forwarding-the-problem-1"]], "Port Forwarding - The Problem (2)": [[948, "port-forwarding-the-problem-2"]], "Port Forwarding - The Solution (1)": [[948, "port-forwarding-the-solution-1"]], "Port Forwarding - The Solution (2)": [[948, "port-forwarding-the-solution-2"]], "Port Forwarding - The Commandline": [[948, "port-forwarding-the-commandline"]], "SSH: Secure Copy (scp)": [[949, "ssh-secure-copy-scp"]], "What Is That?": [[949, "what-is-that"]], "Copy Single File From Local To Remote": [[949, "copy-single-file-from-local-to-remote"]], "Copy Single File from Remote To Local": [[949, "copy-single-file-from-remote-to-local"]], "Copy An Entire Directory Tree (-r)": [[949, "copy-an-entire-directory-tree-r"]], "Copy Multiple File From Here To There": [[949, "copy-multiple-file-from-here-to-there"]], "Copy From One Remote To A Different Remote": [[949, "copy-from-one-remote-to-a-different-remote"]], "More Options": [[949, "more-options"]], "SSH File System (sshfs)": [[950, "ssh-file-system-sshfs"]], "What Is It?": [[950, "what-is-it"]], "Why Is It?": [[950, "why-is-it"]], "Example Situation: The Raspi": [[950, "example-situation-the-raspi"]], "Mounting Remote  $HOME/logdata": [[950, "mounting-remote-home-logdata"]], "Unmounting: fusermount -u, or Simply umount": [[950, "unmounting-fusermount-u-or-simply-umount"]], "User ID Mismatch: Problem": [[950, "user-id-mismatch-problem"]], "User ID Mismatch: Solution (User Mapping)": [[950, "user-id-mismatch-solution-user-mapping"]], "The errno Variable": [[951, "the-errno-variable"]], "errno Is A Global Variable": [[951, "errno-is-a-global-variable"]], "Helper Functions": [[951, "helper-functions"]], "Linux Systems Programming: Basics": [[952, "linux-systems-programming-basics"]], "System Calls vs. Library Functions": [[953, "system-calls-vs-library-functions"]], "System Calls": [[953, "system-calls"]], "System Calls And The C-Library": [[953, "system-calls-and-the-c-library"]], "Library Function Or System Call?": [[953, "library-function-or-system-call"]], "Manual Pages": [[953, "manual-pages"]], "Blocking I/O: What is That? (\u201cEverything is a file\u201d)": [[954, "blocking-i-o-what-is-that-everything-is-a-file"]], "Examples/Live Demos": [[954, null]], "Solution: This Is What An Operating System Is There For": [[954, "solution-this-is-what-an-operating-system-is-there-for"]], "Blocking I/O (On A File): What is That?": [[955, "blocking-i-o-on-a-file-what-is-that"]], "See Also": [[955, null], [956, null], [957, null], [1138, "see-also"]], "Abstractions": [[955, "abstractions"], [956, "abstractions"], [957, "abstractions"]], "Simplicity": [[955, "simplicity"], [956, "simplicity"], [957, "simplicity"]], "Build, Run, Look": [[955, "build-run-look"], [956, "build-run-look"], [957, "build-run-look"]], "Watch: Run Under strace Supervision": [[955, "watch-run-under-strace-supervision"]], "Blocking I/O: On A Network Socket": [[956, "blocking-i-o-on-a-network-socket"]], "Opening a Network Connection": [[956, "opening-a-network-connection"]], "Blocking I/O: On A Timer? WTF?": [[957, "blocking-i-o-on-a-timer-wtf"]], "Setup A Timer": [[957, "setup-a-timer"]], "Blocking I/O: What Is That?": [[958, "blocking-i-o-what-is-that"]], "File I/O: Basics": [[959, "file-i-o-basics"]], "File Descriptors": [[959, "file-descriptors"]], "Standard Filedescriptors": [[959, "standard-filedescriptors"]], "File I/O: System Calls": [[959, "file-i-o-system-calls"]], "open()": [[959, "open"]], "open() Flags": [[959, "open-flags"]], "read()": [[959, "read"]], "write()": [[959, "write"]], "File Offset: lseek()": [[959, "file-offset-lseek"]], "The Rest: ioctl()": [[959, "the-rest-ioctl"]], "Exercise: Copy A File": [[960, "exercise-copy-a-file"]], "Sunny Case: Source File Exists, Destination Does Not Exist": [[960, "sunny-case-source-file-exists-destination-does-not-exist"]], "Error: Wrong Number Of Arguments Specified": [[960, "error-wrong-number-of-arguments-specified"]], "Error: Source File Does Not Exist": [[960, "error-source-file-does-not-exist"]], "Error: Destination File Exists": [[960, "error-destination-file-exists"]], "Error: Destination Directory Not Writable": [[960, "error-destination-directory-not-writable"]], "Exercise: Create File With Hole": [[961, "exercise-create-file-with-hole"]], "Duplicating (Whats Going On?)": [[962, "duplicating-whats-going-on"]], "File Descriptors, Open File, I-Node": [[962, "file-descriptors-open-file-i-node"]], "File Descriptors and Inheritance": [[962, "file-descriptors-and-inheritance"]], "Duplicating File Descriptors": [[962, "duplicating-file-descriptors"]], "Example: Shell Stdout-Redirection (1)": [[962, "example-shell-stdout-redirection-1"]], "Example: Shell Stdout-Redirection (2)": [[962, "example-shell-stdout-redirection-2"]], "Example: Shell Stdout-Redirection (3)": [[962, "example-shell-stdout-redirection-3"]], "O_CREAT: Creating A File": [[963, "o-creat-creating-a-file"]], "Creating A File If It Does Not Exist (Bogus Version)": [[963, "creating-a-file-if-it-does-not-exist-bogus-version"]], "Bogus O_CREAT Usage: Mode Parameter Missing": [[963, "bogus-o-creat-usage-mode-parameter-missing"]], "Creating A File If It Does Not Exist": [[963, "creating-a-file-if-it-does-not-exist"]], "O_EXCL: Creating A File, But Failing If It Already Exists": [[964, "o-excl-creating-a-file-but-failing-if-it-already-exists"]], "Is \u201cCreate or Open\u201d Always Wanted?": [[964, "is-create-or-open-always-wanted"]], "Sunny Case: File Does Not Exist": [[964, "sunny-case-file-does-not-exist"]], "Error: File Exists": [[964, "error-file-exists"]], "O_RDONLY: Reading a File": [[965, "o-rdonly-reading-a-file"]], "Me and /etc/passwd": [[965, "me-and-etc-passwd"]], "Code: Reading A File": [[965, "code-reading-a-file"]], "Sunny Case: Reading /etc/passwd": [[965, "sunny-case-reading-etc-passwd"]], "Error: File Not Readable": [[965, "error-file-not-readable"]], "Error: File Not Even There": [[965, "error-file-not-even-there"]], "O_WRONLY: Writing A File (Which Must Exist)": [[966, "o-wronly-writing-a-file-which-must-exist"]], "Writing (And Not Creating) A File": [[966, "writing-and-not-creating-a-file"]], "Error: File Not Writeable": [[966, "error-file-not-writeable"]], "Error: File Not Even There \u27f6 Not Implicitly Created": [[966, "error-file-not-even-there-longrightarrow-not-implicitly-created"]], "Sunny Case: File Exists, And Is Writeable": [[966, "sunny-case-file-exists-and-is-writeable"]], "Exercise: Read Temperature From Onewire Sensor": [[967, "exercise-read-temperature-from-onewire-sensor"]], "Onewire Basics": [[967, "onewire-basics"]], "Program": [[967, "program"], [1119, "program"]], "Test On The Target Machine": [[967, "test-on-the-target-machine"]], "I/O without Offset Manipulation": [[969, "i-o-without-offset-manipulation"]], "Scatter/Gather I/O": [[969, "scatter-gather-i-o"]], "Scatter/Gather I/O, without Offset Manipulation": [[969, "scatter-gather-i-o-without-offset-manipulation"]], "Truncating Files": [[969, "truncating-files"]], "File Descriptors - Allocation": [[969, "file-descriptors-allocation"]], "Linux Systems Programming": [[970, "linux-systems-programming"], [1199, "linux-systems-programming"]], "Get Value Of GPIO": [[971, "get-value-of-gpio"]], "Retrieving Value Manually, On The Commandline": [[971, "retrieving-value-manually-on-the-commandline"]], "Shell Script": [[971, "shell-script"]], "C Program": [[971, "c-program"]], "Introductory Live Hacking, Hardware-Wise (sysfs GPIO)": [[972, "introductory-live-hacking-hardware-wise-sysfs-gpio"]], "Intro: sysfs GPIO": [[973, "intro-sysfs-gpio"]], "sysfs?": [[973, "sysfs"]], "General Purpose IO (GPIO)": [[973, "general-purpose-io-gpio"]], "Requesting A GPIO Pin": [[973, "requesting-a-gpio-pin"]], "GPIO Attributes As Files": [[973, "gpio-attributes-as-files"]], "Interrupts In Userspace": [[974, "interrupts-in-userspace"]], "Manual Configuration": [[974, "manual-configuration"]], "C Program: Configuration, Event Loop": [[974, "c-program-configuration-event-loop"]], "Why Threads?": [[975, "why-threads"]], "Typical Uses": [[975, "typical-uses"]], "Legal (1)": [[975, "legal-1"]], "Legal (2)": [[975, "legal-2"]], "POSIX Thread API": [[975, "posix-thread-api"]], "Thread Life Cycle": [[976, "thread-life-cycle"], [976, "id1"]], "Thread Creation": [[976, "thread-creation"]], "Thread Termination (1)": [[976, "thread-termination-1"]], "Thread Termination (2)": [[976, "thread-termination-2"]], "Exit Status, pthread_join()": [[976, "exit-status-pthread-join"]], "Detached Threads": [[976, "detached-threads"]], "Thread ID": [[976, "thread-id"]], "Scheduled Entities (1)": [[976, "scheduled-entities-1"]], "Scheduled Entities (2)": [[976, "scheduled-entities-2"]], "Thread Creation, Race Condition": [[977, "thread-creation-race-condition"]], "Synchronization": [[978, "synchronization"]], "Race Conditions (1)": [[978, "race-conditions-1"]], "Race Conditions (2)": [[978, "race-conditions-2"]], "Mutex (1)": [[978, "mutex-1"]], "Mutex (2)": [[978, "mutex-2"]], "Mutex (3)": [[978, "mutex-3"]], "Mutex Types": [[978, "mutex-types"]], "Mutex: Solve Load/Modify/Store Conflict": [[979, "mutex-solve-load-modify-store-conflict"]], "Communication: Condition Variable": [[980, "communication-condition-variable"]], "Condition Variable (1)": [[980, "condition-variable-1"]], "Condition Variable (2)": [[980, "condition-variable-2"]], "Condition Variable: wait()": [[980, "condition-variable-wait"]], "Condition Variable: signal()": [[980, "condition-variable-signal"]], "Example: WIN32 Auto Reset Event (1)": [[980, "example-win32-auto-reset-event-1"]], "Example: WIN32 Auto Reset Event (2)": [[980, "example-win32-auto-reset-event-2"]], "Condition Variable: Checking the Predicate": [[980, "condition-variable-checking-the-predicate"]], "Condition Variable: Initialization": [[980, "condition-variable-initialization"]], "Condition Variable: Miscellaneous": [[980, "condition-variable-miscellaneous"]], "Condition Variable: Message Queue": [[981, "condition-variable-message-queue"]], "One-Time Initialization (1)": [[982, "one-time-initialization-1"]], "One-Time Initialization (2)": [[982, "one-time-initialization-2"]], "One-Time Initialization (3)": [[982, "one-time-initialization-3"]], "Thread Specific Data, Thread Local Storage": [[982, "thread-specific-data-thread-local-storage"]], "Last Warning (1)": [[983, "last-warning-1"]], "Last Warning (2)": [[983, "last-warning-2"]], "Last Warning (3)": [[983, "last-warning-3"]], "Trylock/islocked": [[985, "trylock-islocked"]], "Process: Arguments, Exit Status": [[986, "process-arguments-exit-status"]], "The Shell: A Program Like Any Program": [[986, "the-shell-a-program-like-any-program"]], "The Shell: A Programming Language": [[986, "the-shell-a-programming-language"]], "Exit Status": [[986, "exit-status"]], "Exit Status: 0 is \u201cOK\u201d": [[986, "exit-status-0-is-ok"]], "Exit Status: != 0 is \u201cNot OK\u201d": [[986, "exit-status-0-is-not-ok"]], "Argument Vector (int argc, char** argv)": [[986, "argument-vector-int-argc-char-argv"]], "Processes": [[987, "processes"]], "The Process Tree (And Environment, And procfs)": [[988, "the-process-tree-and-environment-and-procfs"]], "Process ID (PID) And Parent Process ID (PPID)": [[988, "process-id-pid-and-parent-process-id-ppid"]], "System Calls: getpid(), getppid()": [[988, "system-calls-getpid-getppid"]], "Environment Variables": [[988, "environment-variables"]], "Scheduling (and Multitasking)": [[989, "scheduling-and-multitasking"]], "Fairness Criteria": [[989, "fairness-criteria"]], "CPU bound vs. I/O bound": [[989, "cpu-bound-vs-i-o-bound"]], "Demo: I/O vs CPU bound": [[989, "demo-i-o-vs-cpu-bound"]], "Scheduling Decision, Runnability": [[989, "scheduling-decision-runnability"]], "Tasks? Processes? Threads?": [[991, "tasks-processes-threads"]], "A Typical Bare Metal Application": [[991, "a-typical-bare-metal-application"]], "Hm. Need Another Timer Interrupt!": [[991, "hm-need-another-timer-interrupt"]], "Away From Interrupts: Use An Operating System": [[991, "away-from-interrupts-use-an-operating-system"]], "Tasks?": [[991, "id1"]], "Threads Are Great: More Functionality": [[991, "threads-are-great-more-functionality"]], "Are Threads Great?": [[991, "are-threads-great"]], "Stability Considerations": [[991, "stability-considerations"]], "Processes, Address Spaces": [[991, "processes-address-spaces"]], "Stabilizing": [[991, "stabilizing"]], "Scheduling: Exam Questions": [[992, "scheduling-exam-questions"]], "Wakeup Latency, and Fair Scheduling": [[993, "wakeup-latency-and-fair-scheduling"]], "Nice Value: Inexact Tuning": [[993, "nice-value-inexact-tuning"]], "Enter Realtime: Definition": [[993, "enter-realtime-definition"]], "Realtime on Linux": [[993, "realtime-on-linux"]], "Demo: Measuring Wakeup Latency": [[993, "demo-measuring-wakeup-latency"]], "Immediately?": [[993, "immediately"]], "Immediately! \u27f6 PREEMPT_RT": [[993, "immediately-longrightarrow-preempt-rt"]], "Realtime API": [[994, "realtime-api"]], "Scheduling Policies": [[994, "scheduling-policies"]], "Scheduling Priorities": [[994, "scheduling-priorities"]], "What\u2019s Runnning On A System?": [[994, "what-s-runnning-on-a-system"]], "Scheduling: System Calls": [[994, "scheduling-system-calls"]], "Scheduling: Threads (1)": [[994, "scheduling-threads-1"]], "Scheduling: Threads (2)": [[994, "scheduling-threads-2"]], "Priority Inversion": [[994, "priority-inversion"]], "Priority Inversion: Mutex Protocols (1)": [[994, "priority-inversion-mutex-protocols-1"]], "Wakeup Latency, CPU Frequency (Gotcha)": [[995, "wakeup-latency-cpu-frequency-gotcha"]], "Measuring Wakeup Latency": [[995, "measuring-wakeup-latency"]], "Many Runnable Processes (Gotcha: CPU Frequency Scaling)": [[995, "many-runnable-processes-gotcha-cpu-frequency-scaling"]], "CPU Frequency Scaling Out Of The Way": [[995, "cpu-frequency-scaling-out-of-the-way"]], "Mysteries Remaining": [[995, "mysteries-remaining"]], "Code: Sysprog: Event Driven Programming": [[996, "code-sysprog-event-driven-programming"]], "Screenplay: Sysprog: POSIX IPC": [[997, "screenplay-sysprog-posix-ipc"], [1000, "screenplay-sysprog-posix-ipc"]], "select on Device Files": [[997, "select-on-device-files"]], "Sysprog: Events": [[998, "sysprog-events"]], "Code: Sysprog: POSIX IPC": [[999, "code-sysprog-posix-ipc"]], "Virtual Memory, mmap()": [[1000, "virtual-memory-mmap"]], "POSIX Shared Memory": [[1000, "posix-shared-memory"]], "Create Shared Memory Segment": [[1000, "create-shared-memory-segment"]], "Produce into Shared Memory": [[1000, "produce-into-shared-memory"]], "Consume from Shared Memory": [[1000, "consume-from-shared-memory"]], "POSIX Semaphores": [[1000, "posix-semaphores"]], "Create Semaphore": [[1000, "create-semaphore"]], "Wait": [[1000, "wait"]], "Post": [[1000, "post"]], "POSIX Message Queues": [[1000, "posix-message-queues"]], "Create": [[1000, "create"]], "Produce": [[1000, "produce"]], "Consume": [[1000, "consume"]], "Slides: Sysprog: POSIX IPC": [[1001, "slides-sysprog-posix-ipc"]], "Slideshow": [[1001, null], [1005, null]], "History: Two IPC Variants": [[1001, "history-two-ipc-variants"]], "Object Names": [[1001, "object-names"]], "File Semantics": [[1001, "file-semantics"]], "Message Queues": [[1001, "message-queues"]], "Open/Create: mq_open()": [[1001, "open-create-mq-open"]], "Sending/Receiving: mq_send(), mq_receive()": [[1001, "sending-receiving-mq-send-mq-receive"]], "Closing/Removing: mq_close(), mq_unlink()": [[1001, "closing-removing-mq-close-mq-unlink"]], "Notification: mq_notify()": [[1001, "notification-mq-notify"]], "Message Queues are Files": [[1001, "message-queues-are-files"]], "Message Queue Filesystem: mqueue": [[1001, "message-queue-filesystem-mqueue"]], "Semaphores": [[1001, "semaphores"]], "Open/Create: sem_open()": [[1001, "open-create-sem-open"]], "Communication: sem_wait(), sem_post()": [[1001, "communication-sem-wait-sem-post"]], "Closing/Removing: sem_close(), ``sem_unlink()": [[1001, "closing-removing-sem-close-sem-unlink"]], "Semaphores are Files": [[1001, "semaphores-are-files"]], "Shared Memory (1)": [[1001, "shared-memory-1"]], "Shared Memory (2)": [[1001, "shared-memory-2"]], "Exercise: POSIX Message Queues": [[1001, "exercise-posix-message-queues"]], "Sysprog: POSIX IPC": [[1002, "sysprog-posix-ipc"]], "Code: Sysprog: Signals": [[1003, "code-sysprog-signals"]], "Screenplay: Sysprog: Signals": [[1004, "screenplay-sysprog-signals"]], "Barebones Naive Program": [[1004, "barebones-naive-program"]], "Signal Handler": [[1004, "signal-handler"]], "Alarm": [[1004, "alarm"]], "Alarm (Louder)": [[1004, "alarm-louder"]], "Synchronous Delivery": [[1004, "synchronous-delivery"]], "Innocent Multithreaded Program": [[1004, "innocent-multithreaded-program"]], "Add SIGALRM": [[1004, "add-sigalrm"]], "Slides: Sysprog: Signals": [[1005, "slides-sysprog-signals"]], "Example Signals": [[1005, "example-signals"]], "Terminology": [[1005, "terminology"]], "Default Actions": [[1005, "default-actions"]], "Important Signals": [[1005, "important-signals"]], "Sending, Commandline": [[1005, "sending-commandline"]], "Sending Signals, Programmatically": [[1005, "sending-signals-programmatically"]], "Warning!": [[1005, "warning"]], "Blocking Signals: Signal Mask": [[1005, "blocking-signals-signal-mask"]], "Signal Mask Manipulation": [[1005, "signal-mask-manipulation"]], "Pending Signals": [[1005, "pending-signals"]], "Signal Set: sigset_t": [[1005, "signal-set-sigset-t"]], "Signal Handlers": [[1005, "signal-handlers"]], "Installing a Signal Handler (1)": [[1005, "installing-a-signal-handler-1"]], "Installing a Signal Handler (2)": [[1005, "installing-a-signal-handler-2"]], "Effects of Signal Delivery": [[1005, "effects-of-signal-delivery"]], "Last Warning!": [[1005, "last-warning"]], "WTF Async Signal Safe?": [[1005, "wtf-async-signal-safe"]], "Exercise: Signals": [[1005, "exercise-signals"]], "Sysprog: Signals": [[1006, "sysprog-signals"]], "Toolchain: Basics": [[1007, "toolchain-basics"]], "GCC - GNU Compiler Collection": [[1007, "gcc-gnu-compiler-collection"]], "All-In-One Usage: Single File": [[1007, "all-in-one-usage-single-file"]], "All-In-One Usage: Multiple Files": [[1007, "all-in-one-usage-multiple-files"]], "This Is Not As Simple As It Seems!": [[1007, "this-is-not-as-simple-as-it-seems"]], "What\u2019s In A Program? \u27f6 Symbols (nm)": [[1007, "what-s-in-a-program-longrightarrow-symbols-nm"]], "Overview: Where Do Which Symbols Come From (\u27f6 The Toolchain)": [[1007, "overview-where-do-which-symbols-come-from-longrightarrow-the-toolchain"]], "Recap: Toolchain": [[1007, "recap-toolchain"]], "CMake: Cross Build": [[1008, "cmake-cross-build"]], "Cross Build: Parameters": [[1008, "cross-build-parameters"]], "Core Build Instructions: Target Agnostic": [[1008, "core-build-instructions-target-agnostic"]], "Toolchain Files": [[1008, "toolchain-files"]], "Step 1: Generate Makefile in Build Directory": [[1008, "step-1-generate-makefile-in-build-directory"]], "Step 2: Build Using make": [[1008, "step-2-build-using-make"], [1009, "step-2-build-using-make"]], "CMake: Local Build": [[1009, "cmake-local-build"]], "make: Problems": [[1009, "make-problems"]], "CMake To The Rescue": [[1009, "cmake-to-the-rescue"]], "Out-Of-Source Build": [[1009, "out-of-source-build"]], "Step 1: Generate Makefile In Build Directory": [[1009, "step-1-generate-makefile-in-build-directory"]], "Goodie: Dependency Management": [[1009, "goodie-dependency-management"]], "Native Compilation": [[1010, "native-compilation"]], "Cross?": [[1010, "cross"]], "The sysroot": [[1010, "the-sysroot"]], "Exercise: Build Software Package (Cross, Raspberry)": [[1012, "exercise-build-software-package-cross-raspberry"]], "FH/Moodle Quiz: Toolchain": [[1013, "fh-moodle-quiz-toolchain"]], "Exercises: Toolchain": [[1014, "exercises-toolchain"]], "Exercise: Build Software Package (Native)": [[1015, "exercise-build-software-package-native"]], "Exercise: Install And Check Raspberry Toolchain": [[1016, "exercise-install-and-check-raspberry-toolchain"]], "Toolchain, And Cross Development": [[1017, "toolchain-and-cross-development"]], "Case Study: Raspberry Toolchain": [[1018, "case-study-raspberry-toolchain"]], "Linaro Toolchain For The Pi (Defunct)": [[1019, "linaro-toolchain-for-the-pi-defunct"]], "Download And Unpack Linaro Toolchain": [[1019, "download-and-unpack-linaro-toolchain"]], "Create a sysroot": [[1019, "create-a-sysroot"]], "Patience!": [[1019, null]], "Test Cross Build": [[1019, "test-cross-build"]], "What We Have": [[1019, "what-we-have"]], "Use Cross Compiler To Build Against sysroot": [[1019, "use-cross-compiler-to-build-against-sysroot"]], "Adjust $PATH To Point To Toolchain": [[1019, "adjust-path-to-point-to-toolchain"]], "Building A Toolchain On Fedora For Ubuntu 18.04 (WSL)": [[1021, "building-a-toolchain-on-fedora-for-ubuntu-18-04-wsl"]], "Install And Run Docker": [[1021, "install-and-run-docker"]], "Create Ubuntu Images (18.04 and 20.04)": [[1021, "create-ubuntu-images-18-04-and-20-04"]], "Create Docker Volume": [[1021, "create-docker-volume"]], "Container Work": [[1021, "container-work"]], "Command To Run Container On Volumes": [[1021, "command-to-run-container-on-volumes"]], "Setup container": [[1021, "setup-container"]], "Install autoconf 2.71": [[1021, "install-autoconf-2-71"]], "Install crosstool-ng": [[1021, "install-crosstool-ng"]], "Build Toolchain": [[1021, "build-toolchain"]], "crosstool-ng Toolchain Build": [[1021, "crosstool-ng-toolchain-build"]], "Create Toolchain Archive": [[1021, "create-toolchain-archive"]], "Install Toolchain On Host": [[1021, "install-toolchain-on-host"]], "Cross Toolchain Setup": [[1022, "cross-toolchain-setup"]], "Download And Install Toolchain Archive": [[1022, "download-and-install-toolchain-archive"]], "Establish CMake Toolchain File": [[1022, "establish-cmake-toolchain-file"]], "Test Run": [[1022, "test-run"]], "Zooming In: Separate Compilation, and Linking Statically": [[1023, "zooming-in-separate-compilation-and-linking-statically"]], "Remember: All-In-One Build \u2026": [[1023, "remember-all-in-one-build"]], "Adding Another main(): What About Shared Code?": [[1023, "adding-another-main-what-about-shared-code"]], "Solution: Separate Compilation And Linking Steps": [[1023, "solution-separate-compilation-and-linking-steps"]], "Complication: Modification Tracking": [[1023, "complication-modification-tracking"]], "Enter Makefiles": [[1023, "enter-makefiles"]], "Shared Libraries (Shared Objects)": [[1024, "shared-libraries-shared-objects"]], "Problems With Static Libraries": [[1024, "problems-with-static-libraries"]], "And Dynamic Libraries?": [[1024, "and-dynamic-libraries"]], "Relocations": [[1024, "relocations"]], "Building A Shared Library: Position Independent Code (PIC)": [[1024, "building-a-shared-library-position-independent-code-pic"]], "Linking Executables Against Shared Libraries": [[1024, "linking-executables-against-shared-libraries"]], "And Build Dependencies?": [[1024, "and-build-dependencies"]], "And Runtime Dependencies?": [[1024, "and-runtime-dependencies"]], "And Starting An Executable Having External Dependencies?": [[1024, "and-starting-an-executable-having-external-dependencies"]], "This Is Not Simple: Library Search Path": [[1024, "this-is-not-simple-library-search-path"]], "Summary: Static Versus Dynamic Libraries": [[1024, "summary-static-versus-dynamic-libraries"]], "Object Code Archives/Static Libraries": [[1025, "object-code-archives-static-libraries"]], "Code Bases Become Larger (1)": [[1025, "code-bases-become-larger-1"]], "Code Bases Become Larger (2)": [[1025, "code-bases-become-larger-2"]], "Problem: Structure": [[1025, "problem-structure"]], "Build Instructions: Building A Library": [[1025, "build-instructions-building-a-library"]], "Closures": [[1026, "closures"]], "Today": [[1026, "today"]], "def is a Statement": [[1026, "def-is-a-statement"]], "Functions That Create Functions": [[1026, "functions-that-create-functions"]], "Inner Function Reaches Out To Global Scope": [[1026, "inner-function-reaches-out-to-global-scope"]], "And Intermediate Scope? \u27f6 Closure": [[1026, "and-intermediate-scope-longrightarrow-closure"]], "A Less Theoretical \u201cUse Case\u201d": [[1026, "a-less-theoretical-use-case"]], "Scope Issues: Assignment to Global Scope (global Keyword)": [[1026, "scope-issues-assignment-to-global-scope-global-keyword"]], "Scope Issues: Assignment to Intermediate Scope (nonlocal Keyword)": [[1026, "scope-issues-assignment-to-intermediate-scope-nonlocal-keyword"]], "Intro": [[1027, "intro"]], "Simplest: List Comprehension": [[1027, "simplest-list-comprehension"]], "Context Managers: The with Statement": [[1028, "context-managers-the-with-statement"]], "Example: Open File": [[1028, "example-open-file"]], "Example: Temporary Directory": [[1028, "example-temporary-directory"]], "Example: Multiple with Items": [[1028, "example-multiple-with-items"]], "Under The Hood: Context Manager": [[1028, "under-the-hood-context-manager"]], "Example: Monkeypatching The print Function": [[1028, "example-monkeypatching-the-print-function"]], "Still Much Typing \u27f6 @contextlib.contextmanager": [[1028, "still-much-typing-longrightarrow-contextlib-contextmanager"]], "More Involved: Using Closures To Implement PrefixPrint": [[1028, "more-involved-using-closures-to-implement-prefixprint"]], "Decorators": [[1029, "decorators"]], "The Ominous \u201c@\u201d": [[1029, "the-ominous"]], "Decorators Overview": [[1029, "decorators-overview"]], "A Simple Minded Function": [[1029, "a-simple-minded-function"]], "Decorator Basics": [[1029, "decorator-basics"]], "Decorators are Syntactic Sugar": [[1029, "decorators-are-syntactic-sugar"]], "Problem: Arbitrary Function Arguments": [[1029, "problem-arbitrary-function-arguments"]], "*args, **kwargs To The Rescue": [[1029, "args-kwargs-to-the-rescue"]], "Sideways: functools.wraps": [[1029, "sideways-functools-wraps"]], "Class Decorator: debug() with prefix": [[1029, "class-decorator-debug-with-prefix"]], "Basic Exception Handling: try, except": [[1030, "basic-exception-handling-try-except"]], "Catching Exceptions By Type": [[1030, "catching-exceptions-by-type"]], "Exception Objects": [[1030, "exception-objects"]], "Catching Multiple Exception Types: Exception List": [[1030, "catching-multiple-exception-types-exception-list"]], "Catching Multiple Exception Types: Multiple except Clauses": [[1030, "catching-multiple-exception-types-multiple-except-clauses"]], "Catching Multiple Exception Types: By Base Type": [[1030, "catching-multiple-exception-types-by-base-type"]], "Important: Order Of except Clauses": [[1030, "important-order-of-except-clauses"]], "Built-In Exception Hierarchy": [[1030, "built-in-exception-hierarchy"]], "Raising Exceptions": [[1030, "raising-exceptions"]], "Re-Raising Exceptions": [[1030, "re-raising-exceptions"]], "User-Defined Exceptions": [[1030, "user-defined-exceptions"]], "User-Defined Exceptions: More": [[1030, "user-defined-exceptions-more"]], "else: Executed If No Exception": [[1030, "else-executed-if-no-exception"]], "finally: Executed Regardless Of Exception": [[1030, "finally-executed-regardless-of-exception"]], "The exec() Function": [[1031, "the-exec-function"]], "Dictionaries Everywhere: Context": [[1031, "dictionaries-everywhere-context"]], "Enter exec()": [[1031, "enter-exec"]], "exec(), and Context": [[1031, "exec-and-context"]], "And What Is This Used For, Realistically?": [[1031, "and-what-is-this-used-for-realistically"]], "Python: More Language Features": [[1032, "python-more-language-features"]], "Iteration, Comprehensions, and Generators": [[1033, "iteration-comprehensions-and-generators"]], "Coverage Of This Topic": [[1033, "coverage-of-this-topic"]], "for Recap: Sequential Datatypes": [[1033, "for-recap-sequential-datatypes"]], "Primitive Transformation [1,2,3,4] \u27f6 [1,4,9,16]": [[1033, "primitive-transformation-1-2-3-4-longrightarrow-1-4-9-16"]], "Larger Input List (Still Allocated)": [[1033, "larger-input-list-still-allocated"]], "Input List \u27f6 range": [[1033, "input-list-longrightarrow-range"]], "Output List \u27f6 yield": [[1033, "output-list-longrightarrow-yield"]], "Generator Function \u27f6 Generator Expression": [[1033, "generator-function-longrightarrow-generator-expression"]], "Implementing A Fibonacci Number Generator": [[1034, "implementing-a-fibonacci-number-generator"]], "Fibonacci Numbers: Naive List": [[1034, "fibonacci-numbers-naive-list"]], "Fibonacci Numbers: Naive List, Limited": [[1034, "fibonacci-numbers-naive-list-limited"]], "Sideway: Infinity by Not Using Functions": [[1034, "sideway-infinity-by-not-using-functions"]], "Fibonacci Numbers: Function Producing Infinite Sequence": [[1034, "fibonacci-numbers-function-producing-infinite-sequence"]], "Common Pattern: Turn List into Generated Items": [[1034, "common-pattern-turn-list-into-generated-items"]], "The Iterator Protocol": [[1035, "the-iterator-protocol"], [1035, "id1"]], "Iteration in Python": [[1035, "iteration-in-python"]], "What\u2019s an Iterator?": [[1035, "what-s-an-iterator"]], "What\u2019s an Iterable?": [[1035, "what-s-an-iterable"]], "The Iterator Protocol: Manual Iteration": [[1035, "the-iterator-protocol-manual-iteration"]], "The Iterator Protocol, And The for Loop": [[1035, "the-iterator-protocol-and-the-for-loop"]], "Generators: Motivation": [[1035, "generators-motivation"]], "Generators: How?": [[1035, "generators-how"]], "Observations": [[1035, "observations"]], "Iteration, Generators, And yield": [[1036, "iteration-generators-and-yield"]], "Iterating Intelligently: Generators, and the Iterator Protocol": [[1037, "iterating-intelligently-generators-and-the-iterator-protocol"]], "Modules are Objects": [[1038, "modules-are-objects"]], "Other Forms (1)": [[1038, "other-forms-1"]], "Other Forms (2)": [[1038, "other-forms-2"]], "Packages": [[1038, "packages"]], "Executing Modules as Scripts": [[1038, "executing-modules-as-scripts"]], "Package Structure": [[1038, "package-structure"]], "Relative Imports (1)": [[1038, "relative-imports-1"]], "Relative Imports (2)": [[1038, "relative-imports-2"]], "Multithreading (Python)": [[1039, "multithreading-python"]], "What\u2019s a Thread?": [[1039, "what-s-a-thread"]], "Threads: The Pythonic Way": [[1039, "threads-the-pythonic-way"]], "Threads: The OO Way - Inheritance": [[1039, "threads-the-oo-way-inheritance"]], "And Program Termination?": [[1039, "and-program-termination"]], "Daemon Threads": [[1039, "daemon-threads"]], "Race Conditions, and Mutexes": [[1041, "race-conditions-and-mutexes"]], "Mother of All Race conditions: Integer Increment": [[1041, "mother-of-all-race-conditions-integer-increment"]], "Load Modify Store Conflict": [[1041, "load-modify-store-conflict"]], "Solution: Mutex (Explicit Acquire/Release)": [[1041, "solution-mutex-explicit-acquire-release"]], "Solution: Mutex (with Statement)": [[1041, "solution-mutex-with-statement"]], "Multithreading: Exam Questions": [[1042, "multithreading-exam-questions"]], "Abstract Base Classes (abc), And Duck Typing": [[1043, "abstract-base-classes-abc-and-duck-typing"]], "Duck Typing: Examples": [[1043, "duck-typing-examples"]], "Duck Typing Problem: Late Errors": [[1043, "duck-typing-problem-late-errors"]], "Intermediate Step: Common Base Class (\u201cInterface\u201d)": [[1043, "intermediate-step-common-base-class-interface"]], "Enter Abstract Base Classes: Wish List": [[1043, "enter-abstract-base-classes-wish-list"]], "Abtract Base Class": [[1043, "abtract-base-class"]], "Classes And Dictionaries": [[1044, "classes-and-dictionaries"]], "Facts Up-Front": [[1044, "facts-up-front"]], "Using Raw Dictionaries As Objects": [[1044, "using-raw-dictionaries-as-objects"]], "Enter Classes: An Empty Class, And Its Effects": [[1044, "enter-classes-an-empty-class-and-its-effects"]], "Attributes": [[1044, "attributes"], [1156, "attributes"]], "Summary: Classes Or Raw Dictionaries": [[1044, "summary-classes-or-raw-dictionaries"]], "Dynamic Attribute Access": [[1044, "dynamic-attribute-access"]], "Constructor": [[1045, "constructor"]], "And self?": [[1045, "and-self"]], "Interrelationships": [[1046, "interrelationships"]], "Extending Existing Classes": [[1047, "extending-existing-classes"]], "Additional Feature: Salary": [[1047, "additional-feature-salary"]], "Want Manager": [[1047, "want-manager"]], "Introspecting Inheritance: isinstance(), issubclass()": [[1047, "introspecting-inheritance-isinstance-issubclass"]], "isinstance()": [[1047, "isinstance"]], "issubclass()": [[1047, "issubclass"]], "Add __str__(), Creatively, After The Fact": [[1047, "add-str-creatively-after-the-fact"]], "Object Methods": [[1048, "object-methods"]], "Class Methods (@classmethod)": [[1048, "class-methods-classmethod"]], "Static Methods (@staticmethod)": [[1048, "static-methods-staticmethod"]], "collections.namedtuple": [[1049, "collections-namedtuple"]], "Shortcut For Simple Data-Holding Classes": [[1049, "shortcut-for-simple-data-holding-classes"]], "Constructing From Iterable: _make()": [[1049, "constructing-from-iterable-make"]], "Convert To dict: _asdict()": [[1049, "convert-to-dict-asdict"]], "Operators Are \u201cDunder\u201d Methods": [[1050, "operators-are-dunder-methods"]], "Hypothetical And Pointless class Number": [[1050, "hypothetical-and-pointless-class-number"]], "Simplest: Equality Comparison (==)": [[1050, "simplest-equality-comparison"]], "Comparing Against Incompatible Types? (Lotsa Magic!)": [[1050, "comparing-against-incompatible-types-lotsa-magic"]], "Ordering: Less-Than (<) Operator": [[1050, "ordering-less-than-operator"]], "Ordering Magic, Again: __gt__ in terms of __lt__": [[1050, "ordering-magic-again-gt-in-terms-of-lt"]], "Table: Comparison Operators": [[1050, "table-comparison-operators"]], "@functools.total_ordering To The Rescue": [[1050, "functools-total-ordering-to-the-rescue"]], "Arithmetic Operators, Reverse Operations": [[1050, "arithmetic-operators-reverse-operations"]], "Table: Operators And The Methods To Implement Them": [[1050, "table-operators-and-the-methods-to-implement-them"]], "Readonly Attributes": [[1051, "readonly-attributes"]], "And Write Access?": [[1051, "and-write-access"]], "Calculated Attributes": [[1051, "calculated-attributes"]], "str() And repr()": [[1052, "str-and-repr"]], "Stringification And Representation": [[1052, "stringification-and-representation"]], "Overloading str() And repr(): __str__(), __repr__()": [[1052, "overloading-str-and-repr-str-repr"]], "Positional and Keyword Arguments": [[1053, "positional-and-keyword-arguments"]], "Traditional Function Call": [[1053, "traditional-function-call"]], "Supplying Function Arguments Dynamically": [[1053, "supplying-function-arguments-dynamically"]], "Functions That Takes Arbitrary Number Of Positional Arguments": [[1053, "functions-that-takes-arbitrary-number-of-positional-arguments"]], "Functions That Take Arbitrary Keyword Arguments": [[1053, "functions-that-take-arbitrary-keyword-arguments"]], "And Arbitrary Positional And Keyword Arguments?": [[1053, "and-arbitrary-positional-and-keyword-arguments"]], "Ultimate Dynamicity: Arbitrary Positional And Keyword Arguments": [[1053, "ultimate-dynamicity-arbitrary-positional-and-keyword-arguments"]], "Use Case: A Better print()": [[1053, "use-case-a-better-print"]], "The Python Programming Language": [[1056, "the-python-programming-language"]], "A Little Bit of History": [[1056, "a-little-bit-of-history"]], "Guido Van Rossum": [[1056, "guido-van-rossum"]], "Hello World: Interactive Mode": [[1057, "hello-world-interactive-mode"]], "Hello World: Script Files": [[1057, "hello-world-script-files"]], "Running Python Programs": [[1058, "running-python-programs"]], "The UNIX Way: Executable Bit, chmod": [[1058, "the-unix-way-executable-bit-chmod"]], "The UNIX Way: Hash-Bang (She-Bang)": [[1058, "the-unix-way-hash-bang-she-bang"]], "The UNIX Way: Running": [[1058, "the-unix-way-running"]], "The Doze Way: Registry": [[1058, "the-doze-way-registry"]], "Syntax: Indentation (1)": [[1059, "syntax-indentation-1"]], "Syntax: Indentation (2)": [[1059, "syntax-indentation-2"]], "Syntax: Statements and Lines": [[1059, "syntax-statements-and-lines"]], "Commandline Arguments (sys.argv)": [[1060, "commandline-arguments-sys-argv"]], "Operating Systems and Programs": [[1060, "operating-systems-and-programs"]], "Commandline Arguments in Python": [[1060, "commandline-arguments-in-python"]], "Cosmetics: Rudimentary Argument Parsing": [[1060, "cosmetics-rudimentary-argument-parsing"]], "Further information: argparse": [[1060, null]], "Variables (1)": [[1061, "variables-1"]], "Variables (2)": [[1061, "variables-2"]], "Integer Numbers: Comparison": [[1062, "integer-numbers-comparison"]], "Numbers: Python2 vs. Python 3 (1)": [[1062, "numbers-python2-vs-python-3-1"]], "Numbers: Python2 vs. Python 3 (2)": [[1062, "numbers-python2-vs-python-3-2"]], "Strings: Python 2": [[1062, "strings-python-2"]], "Strings: Python 2 \u2014 Confusion": [[1062, "strings-python-2-confusion"]], "Strings: Python 2 - unicode (1)": [[1062, "strings-python-2-unicode-1"]], "Strings: Python 2 \u2014 unicode (2)": [[1062, "strings-python-2-unicode-2"]], "Strings: Python 3": [[1062, "strings-python-3"]], "Python 3, Generally": [[1062, "python-3-generally"]], "Boolean Values": [[1064, "boolean-values"]], "Boolean Operators": [[1064, "boolean-operators"]], "The if Statement": [[1065, "the-if-statement"], [1065, "id1"]], "Looping Constructs": [[1066, "looping-constructs"]], "Esoteric Feature: while/else": [[1066, "esoteric-feature-while-else"]], "Sequence Elements": [[1067, "sequence-elements"]], "Sequence Multiplication": [[1067, "sequence-multiplication"]], "Indexing (1)": [[1068, "indexing-1"]], "Indexing (2)": [[1068, "indexing-2"]], "Slicing: Cutting Out": [[1068, "slicing-cutting-out"]], "Slicing: Step Width": [[1068, "slicing-step-width"]], "Iteration over \u2026 Something": [[1069, "iteration-over-something"]], "break, continue, else": [[1069, "break-continue-else"]], "Iteration over Numbers: range()": [[1070, "iteration-over-numbers-range"]], "range(): Definition": [[1070, "range-definition"]], "range(): Python 2 vs. Python 3": [[1070, "range-python-2-vs-python-3"]], "Immutability: Numbers": [[1071, "immutability-numbers"]], "Modifying An Integer In-Place? (Immutability)": [[1071, "modifying-an-integer-in-place-immutability"]], "Immutability: Tuples": [[1071, "immutability-tuples"]], "Mutability: Lists (1)": [[1071, "mutability-lists-1"]], "Mutability: Lists (2)": [[1071, "mutability-lists-2"]], "Shallow Copy": [[1071, "shallow-copy"]], "Deep Copy": [[1071, "deep-copy"]], "Functions: Global and Local Scope (Livehacking Screenplay)": [[1072, "functions-global-and-local-scope-livehacking-screenplay"]], "Undefined Variable": [[1072, "undefined-variable"]], "Local Variable": [[1072, "local-variable"]], "Local and Global Variable With Same Name": [[1072, "local-and-global-variable-with-same-name"]], "Assignment to Global Variable: global": [[1072, "assignment-to-global-variable-global"]], "Functions (Slideshow)": [[1073, "functions-slideshow"]], "Why Functions?": [[1073, "why-functions"]], "Mutable Default Parameters: Attention!": [[1073, "mutable-default-parameters-attention"]], "String Delimiters": [[1075, "string-delimiters"]], "Escape Sequences": [[1075, "escape-sequences"]], "More String Tricks": [[1075, "more-string-tricks"]], "C-Style Formatting (1)": [[1076, "c-style-formatting-1"]], "C-Style Formatting: Conversions": [[1076, "c-style-formatting-conversions"]], "C-Style Formatting: Flags": [[1076, "c-style-formatting-flags"]], "C-Style Formatting: Examples": [[1076, "c-style-formatting-examples"]], "The format Method": [[1076, "the-format-method"]], "Cool Since 3.6: f-Strings": [[1076, "cool-since-3-6-f-strings"]], "Batteries Included: Checks": [[1077, "batteries-included-checks"]], "Batteries Included: Search": [[1077, "batteries-included-search"]], "Substring Search: Examples": [[1077, "substring-search-examples"]], "Split and Join (1)": [[1077, "split-and-join-1"]], "Split and Join (2)": [[1077, "split-and-join-2"]], "List Access": [[1078, "list-access"]], "List Methods: Examples": [[1078, "list-methods-examples"]], "Dictionary Access": [[1079, "dictionary-access"]], "Examples: Simple Access": [[1079, "examples-simple-access"]], "Examples: Shortcuts": [[1079, "examples-shortcuts"]], "Dictionary Iteration (1)": [[1079, "dictionary-iteration-1"]], "Dictionary Iteration (2)": [[1079, "dictionary-iteration-2"]], "Operations on Sets (1)": [[1080, "operations-on-sets-1"]], "Operations on Sets (2)": [[1080, "operations-on-sets-2"]], "Python 2 vs. Python 3": [[1081, "python-2-vs-python-3"]], "Opening Files": [[1081, "opening-files"]], "Reading Files": [[1081, "reading-files"]], "Reading Files: Pythonic": [[1081, "reading-files-pythonic"]], "Writing Files (1)": [[1081, "writing-files-1"]], "Writing Files (2)": [[1081, "writing-files-2"]], "File Modes": [[1081, "file-modes"]], "Text vs. Binary Mode": [[1081, "text-vs-binary-mode"]], "Standard Streams": [[1081, "standard-streams"]], "Function Objects": [[1082, "function-objects"]], "What\u2019s a Function?": [[1082, "what-s-a-function"]], "Function Objects?": [[1082, "id1"]], "Function Objects! (1)": [[1082, "function-objects-1"]], "Function Objects! (2)": [[1082, "function-objects-2"]], "Commandline Parsing with argparse": [[1083, "commandline-parsing-with-argparse"]], "Handling Positional Arguments": [[1083, "handling-positional-arguments"]], "Handling Named Arguments: --interval \u2026": [[1083, "handling-named-arguments-interval"]], "Python: Draft Topics": [[1084, "python-draft-topics"]], "Matplotlib": [[1085, "matplotlib"]], "Axis Ranges": [[1085, "axis-ranges"]], "Package Installation (setuptools)": [[1086, "package-installation-setuptools"]], "Files": [[1086, "files"]], "Test \u201cInstallation\u201d": [[1086, "test-installation"]], "Source Distribution": [[1086, "source-distribution"]], "Manifest": [[1086, "manifest"]], "Installing From Wheel File": [[1086, "installing-from-wheel-file"]], "Publishing On PyPI": [[1086, "publishing-on-pypi"]], "Exercise: Read CSV File, Write into Sqlite3 Database": [[1087, "exercise-read-csv-file-write-into-sqlite3-database"]], "Exercise: Read CSV File": [[1088, "exercise-read-csv-file"]], "Sample CSV File": [[1088, "sample-csv-file"]], "CSV and Databases": [[1089, "csv-and-databases"]], "Exercise: Boolean Expressions": [[1091, "exercise-boolean-expressions"]], "Exercise: Even Numbers (while)": [[1092, "exercise-even-numbers-while"]], "Exercise: Greeting, Depending on Time of Day": [[1093, "exercise-greeting-depending-on-time-of-day"]], "Exercises (External)": [[1094, "exercises-external"]], "Exercise: Swap Two Variables": [[1096, "exercise-swap-two-variables"]], "Exercise: Username/Password Check": [[1097, "exercise-username-password-check"]], "Exercise: Digit to English Word": [[1098, "exercise-digit-to-english-word"]], "Exercise: Dictionary: Errors?": [[1099, "exercise-dictionary-errors"]], "Exercise: Eliminate Empty/Comment-Only Lines": [[1100, "exercise-eliminate-empty-comment-only-lines"]], "Exercise: Generator: Fibonacci": [[1101, "exercise-generator-fibonacci"]], "Exercise: Primeness (for)": [[1102, "exercise-primeness-for"]], "Exercises (Legacy)": [[1103, "exercises-legacy"]], "Exercise: Functions: join()": [[1104, "exercise-functions-join"]], "Exercise: Determine Maximum of Two Numbers (Function)": [[1106, "exercise-determine-maximum-of-two-numbers-function"]], "Exercise: Mixed List (Executable Program)": [[1107, "exercise-mixed-list-executable-program"]], "Exercise: Mixed List (Interactive Interpreter)": [[1108, "exercise-mixed-list-interactive-interpreter"]], "Exercise: Parsing /etc/passwd": [[1109, "exercise-parsing-etc-passwd"]], "Sample /etc/passwd file": [[1109, null]], "Implementation Strategy": [[1109, "implementation-strategy"]], "Exercise: Primeness (Function)": [[1110, "exercise-primeness-function"]], "Exercise: Reverting Lines of a File": [[1111, "exercise-reverting-lines-of-a-file"]], "Exercise: String (Right-Justify)": [[1112, "exercise-string-right-justify"]], "Exercise: Function: uniq()": [[1113, "exercise-function-uniq"]], "Exercise: Generator: uniq()": [[1114, "exercise-generator-uniq"]], "Exercise: Counting Lines, Words, Characters": [[1115, "exercise-counting-lines-words-characters"]], "Exercise: Primeness (while)": [[1116, "exercise-primeness-while"]], "Sensors, And Data Acquisition (Exercise Series)": [[1117, "sensors-and-data-acquisition-exercise-series"]], "Setting Paths": [[1118, "setting-paths"]], "Create (And Activate) A Virtual Environment For The Project": [[1118, "create-and-activate-a-virtual-environment-for-the-project"]], "Install Requirements": [[1118, "install-requirements"]], "Exercise: Basic \u201cSensor\u201d": [[1119, "exercise-basic-sensor"]], "Specification, And Setup": [[1119, "specification-and-setup"]], "Verification": [[1119, "verification"]], "Unit Test": [[1119, "unit-test"]], "Exercise: Read CSV File (csv.dictreader)": [[1120, "exercise-read-csv-file-csv-dictreader"]], "Users-header-cp1252.csv": [[1120, "id1"]], "Exercise: Refactoring - Extract CSV Reading Into Function (csv.dictreader)": [[1121, "exercise-refactoring-extract-csv-reading-into-function-csv-dictreader"]], "Exercise: Read CSV File (csv.reader)": [[1122, "exercise-read-csv-file-csv-reader"]], "Users-noheader-cp1252.csv": [[1122, "id2"]], "Exercise: Refactoring - Extract CSV Reading Into Function (csv.reader)": [[1123, "exercise-refactoring-extract-csv-reading-into-function-csv-reader"]], "User Database (Exercise Series)": [[1124, "user-database-exercise-series"]], "Exercise: MQTT: Publish User Records": [[1125, "exercise-mqtt-publish-user-records"]], "Exercise: Away From Raw Dictionaries": [[1126, "exercise-away-from-raw-dictionaries"]], "Test Code": [[1126, "test-code"], [1127, "test-code"], [1128, "test-code"]], "Exercise: Convert User Record To JSON And Back": [[1127, "exercise-convert-user-record-to-json-and-back"]], "Exercise: Refactoring - Extract Both CSV Formats Into Module": [[1128, "exercise-refactoring-extract-both-csv-formats-into-module"]], "Python: All Material, Interrelated": [[1129, "python-all-material-interrelated"]], "Python Programming: From Absolute Beginner to Advanced Productivity": [[1130, "python-programming-from-absolute-beginner-to-advanced-productivity"]], "Sample Trainings": [[1130, "sample-trainings"]], "More Information": [[1130, "more-information"]], "Python Links": [[1131, "python-links"]], "Advanced Python": [[1131, "advanced-python"], [1192, "advanced-python"]], "David Beazley": [[1131, "david-beazley"]], "Raymond Hettinger": [[1131, "raymond-hettinger"]], "Machine Learning, Artificial Intelligence": [[1132, "machine-learning-artificial-intelligence"]], "K-Means": [[1133, "k-means"]], "Topic Overview": [[1133, "topic-overview"], [1137, "topic-overview"]], "Artifacts": [[1133, "artifacts"]], "Topic Dependencies": [[1133, "topic-dependencies"], [1137, "topic-dependencies"]], "Linear Regression: Running Code (no Notebook!)": [[1134, "linear-regression-running-code-no-notebook"]], "Weather History Dataset": [[1135, "weather-history-dataset"]], "Linear Regression: Jupyter Notebook": [[1136, "Linear-Regression:-Jupyter-Notebook"]], "pandas.DataFrame": [[1136, "pandas.DataFrame"]], "Reading Data": [[1136, "Reading-Data"]], "Relationship Between pandas.DataFrame and numpy.ndarray": [[1136, "Relationship-Between-pandas.DataFrame-and-numpy.ndarray"]], "Extracting Input and Output Features from a pandas.DataFrame": [[1136, "Extracting-Input-and-Output-Features-from-a-pandas.DataFrame"]], "Plotting with matplotlib": [[1136, "Plotting-with-matplotlib"]], "Data Splicing: Split into Training and Test Data": [[1136, "Data-Splicing:-Split-into-Training-and-Test-Data"]], "Creating the Model: Algorithm + Training Data": [[1136, "Creating-the-Model:-Algorithm-+-Training-Data"]], "Verify the Model": [[1136, "Verify-the-Model"]], "Linear Regression": [[1137, "linear-regression"]], "Running Code": [[1137, "running-code"]], "Dataset": [[1137, "dataset"]], "Machine Learning: Concepts and Terminology": [[1138, "machine-learning-concepts-and-terminology"]], "How Far Is Mankind from Creating God": [[1138, "how-far-is-mankind-from-creating-god"]], "Basic Terminology: Algorithm and Model": [[1138, "basic-terminology-algorithm-and-model"]], "Basic Terminology: Features and Data": [[1138, "basic-terminology-features-and-data"]], "Types of Machine Learning": [[1138, "types-of-machine-learning"]], "Problems Solved": [[1138, "problems-solved"], [1160, "problems-solved"], [1167, "problems-solved"]], "CSV Files": [[1139, "csv-files"]], "CSV in its Origins": [[1139, "csv-in-its-origins"]], "The csv Module: csv.reader": [[1139, "the-csv-module-csv-reader"]], "And Tuple Unpacking?": [[1139, "and-tuple-unpacking"]], "Going Insane: CSV? SCSV?": [[1139, "going-insane-csv-scsv"]], "More Tuning Needed: Quoting": [[1139, "more-tuning-needed-quoting"]], "Tuning Options": [[1139, "tuning-options"]], "And Headings?": [[1139, "and-headings"]], "Enter csv.DictReader": [[1139, "enter-csv-dictreader"]], "DBAPI 2": [[1140, "dbapi-2"]], "Database Interfaces": [[1140, "database-interfaces"]], "DBAPI 2.0": [[1140, "dbapi-2-0"]], "Caveat: Transaction Lifetime": [[1140, "caveat-transaction-lifetime"]], "Caveat: Isolation": [[1140, "caveat-isolation"]], "Databases": [[1141, "databases"]], "DBAPI 2: PostgreSQL": [[1142, "dbapi-2-postgresql"]], "DBAPI 2 Example: Postgres": [[1142, "dbapi-2-example-postgres"]], "DBAPI 2: sqlite3": [[1143, "dbapi-2-sqlite3"]], "SQLite3": [[1143, "sqlite3"]], "SQLite3 Connection": [[1143, "sqlite3-connection"]], "SQLite3: Cursors and Statements": [[1143, "sqlite3-cursors-and-statements"]], "SQLite3: Filling the Database": [[1143, "sqlite3-filling-the-database"]], "SQLite3: Queries - Result Set": [[1143, "sqlite3-queries-result-set"]], "SQLite3: Bind Parameters": [[1143, "sqlite3-bind-parameters"]], "ASCII": [[1144, "ascii"]], "ISO Latin 1 (ISO-8859-1)": [[1144, "iso-latin-1-iso-8859-1"]], "And Python?": [[1144, "and-python"]], "Liebe Gr\u00fc\u00dfe, J\u00f6rg": [[1144, "liebe-grusze-jorg"]], "A Better Encoding for Liebe Gr\u00fc\u00dfe, J\u00f6rg: ISO-8859-1": [[1144, "a-better-encoding-for-liebe-grusze-jorg-iso-8859-1"]], "Encoding Mess": [[1144, "encoding-mess"]], "And \u795d\u597d, J\u00f6rg? (1)": [[1144, "and-jorg-1"]], "And \u795d\u597d, J\u00f6rg? (2)": [[1144, "and-jorg-2"]], "Enter UTF-8": [[1144, "enter-utf-8"]], "Boundary Code": [[1144, "boundary-code"]], "Ah Yes: decode()": [[1144, "ah-yes-decode"]], "And Source Encoding?": [[1144, "and-source-encoding"]], "Python: Miscellaneous Topics": [[1145, "python-miscellaneous-topics"]], "The import Statement (incomplete)": [[1146, "the-import-statement-incomplete"]], "Server/Broker": [[1147, "server-broker"]], "Starting the Service": [[1147, "starting-the-service"]], "Publishing a Message in Python": [[1147, "publishing-a-message-in-python"]], "Subscribing a Topic in Python": [[1147, "subscribing-a-topic-in-python"]], "Message Payload?": [[1147, "message-payload"]], "Pandas: Adding Rows": [[1148, "pandas-adding-rows"]], "Add Rows: Assign To New Row Number": [[1148, "add-rows-assign-to-new-row-number"]], "Add Rows: append() (Deprecated)": [[1148, "add-rows-append-deprecated"]], "Add Rows: Concatenating Frames": [[1148, "add-rows-concatenating-frames"]], "Pandas: Basics (DataFrame And Series)": [[1149, "pandas-basics-dataframe-and-series"]], "Naive: Objects, And Collections Of Objects": [[1149, "naive-objects-and-collections-of-objects"]], "Inverted: Objects, And Collections Of Objects (\u27f6 DataFrame)": [[1149, "inverted-objects-and-collections-of-objects-longrightarrow-dataframe"]], "Enter pandas, DataFrame, Series": [[1149, "enter-pandas-dataframe-series"]], "Selecting A Column \u27f6 Series": [[1149, "selecting-a-column-longrightarrow-series"]], "Selecting Multiple Columns": [[1149, "selecting-multiple-columns"]], "To Copy Or Not To Copy": [[1149, "to-copy-or-not-to-copy"]], "Pandas: Filters": [[1150, "pandas-filters"]], "Basic Filter Example": [[1150, "basic-filter-example"]], "Filter? Bitmap!": [[1150, "filter-bitmap"]], "Confusion: Filter/Column Addressing": [[1150, "confusion-filter-column-addressing"]], "Column Selection And Filters": [[1150, "column-selection-and-filters"]], "Boolean Expressions: Bitwise Operators! Braces!": [[1150, "boolean-expressions-bitwise-operators-braces"]], "Negation: ~": [[1150, "negation"]], "Neat Helpers": [[1150, "neat-helpers"]], "Random Material": [[1151, "random-material"]], "Pandas: Selecting Rows (And Columns) With iloc[]": [[1152, "pandas-selecting-rows-and-columns-with-iloc"]], "Row By Number: iloc[]": [[1152, "row-by-number-iloc"]], "So What Is A Row, Then?": [[1152, "so-what-is-a-row-then"]], "Selecting Multiple Rows": [[1152, "selecting-multiple-rows"]], "Selecting Rows And Columns": [[1152, "selecting-rows-and-columns"]], "Pandas: Indexes": [[1153, "pandas-indexes"]], "Default Index: Row Number": [[1153, "default-index-row-number"]], "Setting Custom Index": [[1153, "setting-custom-index"]], "Setting Custom Index, inplace=True": [[1153, "setting-custom-index-inplace-true"]], "Custom Index, And loc[]": [[1153, "custom-index-and-loc"]], "Custom Index, And iloc[]": [[1153, "custom-index-and-iloc"]], "Sorting DataFrame Object By Index Column": [[1153, "sorting-dataframe-object-by-index-column"]], "Pandas: Selecting Rows (And Columns) With loc[]": [[1154, "pandas-selecting-rows-and-columns-with-loc"]], "Rows (And Columns) By Label": [[1154, "rows-and-columns-by-label"]], "Hiccup: Slices Are Inclusive": [[1154, "hiccup-slices-are-inclusive"]], "Column Selection By Label": [[1154, "column-selection-by-label"]], "Columns By Slicing: Inclusive": [[1154, "columns-by-slicing-inclusive"]], "Pandas: Adding/Modifying Columns": [[1155, "pandas-adding-modifying-columns"]], "Example 1: Lowercasing A Column Of Strings": [[1155, "example-1-lowercasing-a-column-of-strings"]], "Example 1: Modifying The email Column": [[1155, "example-1-modifying-the-email-column"]], "Example 2: Adding A normalized_email Column": [[1155, "example-2-adding-a-normalized-email-column"]], "What If No Prebuilt Functionality Exists? apply() To The Rescue!": [[1155, "what-if-no-prebuilt-functionality-exists-apply-to-the-rescue"]], "apply() -ing Custom Functions": [[1155, "apply-ing-custom-functions"]], "XML: ElementTree (etree)": [[1156, "xml-elementtree-etree"]], "SAX and DOM": [[1156, "sax-and-dom"]], "ElementTree": [[1156, "elementtree"]], "A Very Simple Document": [[1156, "a-very-simple-document"]], "Text (1)": [[1156, "text-1"]], "Text (2)": [[1156, "text-2"]], "Writing XML Documents": [[1156, "writing-xml-documents"]], "Reading XML Documents": [[1156, "reading-xml-documents"]], "Visual Studio Code for Python Programming": [[1157, "visual-studio-code-for-python-programming"]], "Python: Project/Package Management": [[1158, "python-project-package-management"]], "Python Package Index (Livehacking Screenplay)": [[1159, "python-package-index-livehacking-screenplay"]], "Invocation": [[1159, "invocation"]], "Help": [[1159, "help"]], "Most Used Subcommands": [[1159, "most-used-subcommands"]], "Subcommand Help": [[1159, "subcommand-help"]], "System vs. User": [[1159, "system-vs-user"]], "Search": [[1159, "search"]], "Python Package Index (Slideshow)": [[1160, "python-package-index-slideshow"]], "Python Package Index (PyPI)": [[1160, "python-package-index-pypi"]], "Python Package Index": [[1161, "python-package-index"]], "Packaging, PyPI Upload (Link Collection)": [[1162, "packaging-pypi-upload-link-collection"]], "PyTest": [[1163, "pytest"]], "pytest Introduction, By Example": [[1164, "pytest-introduction-by-example"]], "Sample Project Structure": [[1164, "sample-project-structure"]], "pytest: Installation, Documentation": [[1164, "pytest-installation-documentation"]], "And PYTHONPATH?": [[1164, "and-pythonpath"]], "A Simple Test": [[1164, "a-simple-test"]], "Failing Tests": [[1164, "failing-tests"]], "A More Realistic Example": [[1164, "a-more-realistic-example"]], "Fixtures": [[1164, "fixtures"]], "Temporary Test Directory": [[1164, "temporary-test-directory"]], "Marking Tests as Expected to Fail": [[1164, "marking-tests-as-expected-to-fail"]], "The unittest Module": [[1165, "the-unittest-module"]], "Simplest Example": [[1165, "simplest-example"]], "Using a Fixture": [[1165, "using-a-fixture"]], "Multiple Test Cases With Same Fixture": [[1165, "multiple-test-cases-with-same-fixture"]], "Auto Recognizing Test Methods": [[1165, "auto-recognizing-test-methods"]], "The Meat of a Test": [[1165, "the-meat-of-a-test"]], "Recommendations": [[1165, "recommendations"]], "Virtual Environments (Livehacking Screenplay)": [[1166, "virtual-environments-livehacking-screenplay"]], "First: Help": [[1166, "first-help"]], "Local Package Installation": [[1166, "local-package-installation"]], "Freezing an Environment": [[1166, "freezing-an-environment"]], "Destroying an Environment": [[1166, "destroying-an-environment"]], "Recreating an Environment": [[1166, "recreating-an-environment"]], "Using Virtual Environments With Visual Studio Code": [[1166, "using-virtual-environments-with-visual-studio-code"]], "Virtual Environments (Slideshow)": [[1167, "virtual-environments-slideshow"]], "Virtual Environments (Links)": [[1167, "virtual-environments-links"]], "Virtual Environments": [[1168, "virtual-environments"]], "Code: Unittest: GTest Basics": [[1170, "code-unittest-gtest-basics"]], "Screenplay: Unittest: GTest Basics": [[1171, "screenplay-unittest-gtest-basics"]], "Before We Start": [[1171, "before-we-start"]], "Simplest Test: No Test": [[1171, "simplest-test-no-test"]], "Next Simplest: Single File": [[1171, "next-simplest-single-file"]], "Executing Tests Selectively": [[1171, "executing-tests-selectively"]], "Fatal Failure": [[1171, "fatal-failure"]], "FAIL()": [[1171, "fail"]], "ASSERT_*()": [[1171, "assert"]], "Non-Fatal Failure": [[1171, "non-fatal-failure"]], "Custom Message Output": [[1171, "custom-message-output"]], "Last Not Least: Structure": [[1171, "last-not-least-structure"]], "Test Cases and Suites": [[1171, "test-cases-and-suites"]], "Unittest: GTest Basics": [[1172, "unittest-gtest-basics"]], "Screenplay: Unittest: GTest and CMake": [[1173, "screenplay-unittest-gtest-and-cmake"]], "Installed: to be found in Standard Paths": [[1173, "installed-to-be-found-in-standard-paths"]], "CMake: \u201cFind Modules\u201d": [[1173, "cmake-find-modules"]], "Executing Tests As Part of Build": [[1173, "executing-tests-as-part-of-build"]], "Tests That Are Expected to Fail": [[1173, "tests-that-are-expected-to-fail"]], "Unittest: GTest and CMake": [[1174, "unittest-gtest-and-cmake"]], "Code: Unittest: GTest Fixtures": [[1175, "code-unittest-gtest-fixtures"]], "Screenplay: Unittest: GTest Fixtures": [[1176, "screenplay-unittest-gtest-fixtures"]], "Predefined Environment for a Number of Tests": [[1176, "predefined-environment-for-a-number-of-tests"]], "Environment is Isolated Per Test": [[1176, "environment-is-isolated-per-test"]], "More Complex Environment: SetUp(), TearDown()": [[1176, "more-complex-environment-setup-teardown"]], "Unittest: GTest Fixtures": [[1177, "unittest-gtest-fixtures"]], "Organisatorisches: Buchung, Kursablauf": [[1178, "organisatorisches-buchung-kursablauf"]], "Online Schulungen": [[1178, null]], "Buchung": [[1178, "buchung"]], "Kursgestaltung": [[1178, "kursgestaltung"]], "\u00dcbungen": [[1178, "ubungen"]], "Unterlagen & Download": [[1178, "unterlagen-download"]], "Linux from Scratch, 16.9.2013, M\u00fcnchen": [[1179, "linux-from-scratch-16-9-2013-munchen"]], "GRUB 0.97": [[1179, "grub-0-97"]], "Cross Systeme Bauen": [[1179, "cross-systeme-bauen"]], "Init, oder der Prozess mit der ID 1": [[1179, "init-oder-der-prozess-mit-der-id-1"]], "Verschiedenes": [[1179, "verschiedenes"]], "Shell Scripting/Bourne Again Shell (Bash)": [[1180, "shell-scripting-bourne-again-shell-bash"]], "Zielpublikum": [[1180, "zielpublikum"], [1182, "zielpublikum"], [1183, "zielpublikum"], [1188, "zielpublikum"], [1190, "zielpublikum"], [1195, "zielpublikum"], [1196, "zielpublikum"], [1202, "zielpublikum"]], "Kursinhalt": [[1180, "kursinhalt"], [1182, "kursinhalt"], [1183, "kursinhalt"], [1188, "kursinhalt"], [1190, "kursinhalt"], [1191, "kursinhalt"], [1195, "kursinhalt"], [1196, "kursinhalt"], [1197, "kursinhalt"], [1198, "kursinhalt"], [1200, "kursinhalt"], [1201, "kursinhalt"], [1202, "kursinhalt"]], "Empfohlene Vorkenntnisse": [[1180, "empfohlene-vorkenntnisse"], [1182, "empfohlene-vorkenntnisse"], [1183, "empfohlene-vorkenntnisse"], [1188, "empfohlene-vorkenntnisse"], [1190, "empfohlene-vorkenntnisse"], [1191, "empfohlene-vorkenntnisse"], [1195, "empfohlene-vorkenntnisse"], [1196, "empfohlene-vorkenntnisse"], [1197, "empfohlene-vorkenntnisse"], [1198, "empfohlene-vorkenntnisse"], [1200, "empfohlene-vorkenntnisse"], [1201, "empfohlene-vorkenntnisse"], [1202, "empfohlene-vorkenntnisse"]], "C: Einf\u00fchrung": [[1181, "c-einfuhrung"]], "C f\u00fcr Fortgeschrittene": [[1182, "c-fur-fortgeschrittene"]], "C++: Einf\u00fchrung und \u00dcberblick": [[1183, "c-einfuhrung-und-uberblick"]], "An Introduction to Modern C++, In Three Days": [[1184, "an-introduction-to-modern-c-in-three-days"]], "C and C++ Programming": [[1185, "c-and-c-programming"]], "CMake": [[1186, "cmake"]], "The Course": [[1186, null]], "Target Audience": [[1186, "target-audience"]], "Recommended Prior Knowledge": [[1186, "recommended-prior-knowledge"]], "Design Patterns For C++ Developers": [[1187, "design-patterns-for-c-developers"]], "Embedded Software Development: Hardware, Realtime, and Memory Management": [[1188, "embedded-software-development-hardware-realtime-and-memory-management"]], "Linux Kernel Driver Development": [[1189, "linux-kernel-driver-development"], [810, "linux-kernel-driver-development"]], "Course Contents": [[1189, "course-contents"]], "Sample Project": [[1189, "sample-project"]], "Linux Basics: Eine Einf\u00fchrung Anhand von Beispielen": [[1190, "linux-basics-eine-einfuhrung-anhand-von-beispielen"]], "GNU Make: Die Mutter aller Build Tools": [[1191, "gnu-make-die-mutter-aller-build-tools"]], "Herdt": [[1194, "herdt"]], "Eine Woche mit dem Raspberry Pi": [[1195, "eine-woche-mit-dem-raspberry-pi"]], "Subversion (SVN)": [[1196, "subversion-svn"]], "Linux Systems Programming: Introduction": [[1197, "linux-systems-programming-introduction"]], "Linux Systems Programming: Virtual Memory, IPC, Shared Libraries": [[1198, "linux-systems-programming-virtual-memory-ipc-shared-libraries"]], "Linux Systems Programming: Multithreading": [[1200, "linux-systems-programming-multithreading"]], "Linux Systems Programming: Network Programming": [[1201, "linux-systems-programming-network-programming"]], "Unittesting and Test Driven Development": [[1202, "unittesting-and-test-driven-development"]], "Embedded Computing (FH Joanneum Graz)": [[151, "embedded-computing-fh-joanneum-graz"]], "CAN/Linux Basics": [[931, "can-linux-basics"]], "Why This Talk?": [[931, "why-this-talk"]], "Network Programming: Datagram Exchange": [[931, "network-programming-datagram-exchange"]], "And CAN?": [[931, "and-can"]], "One CAN Network Packet \u2026": [[931, "one-can-network-packet"]], "Embedded Computing (STECE-2019)": [[82, "embedded-computing-stece-2019"]], "Knowledge Transferred": [[82, "knowledge-transferred"]], "Course Setup": [[82, "course-setup"]], "Embedded Computing STECE-2020)": [[100, "embedded-computing-stece-2020"]], "Embedded Computing (STECE-2021)": [[127, "embedded-computing-stece-2021"]], "Two Semesters": [[127, "two-semesters"]], "Supporting Material": [[127, "supporting-material"]], "Embedded Computing (STECE-2022)": [[147, "embedded-computing-stece-2022"]], "Embedded Computing 1 (STECE-2022): Material": [[149, "embedded-computing-1-stece-2022-material"]], "Types, Operators, Expressions": [[418, "types-operators-expressions"]], "Program Flow": [[427, "program-flow"]], "Functions and Program Structure": [[434, "functions-and-program-structure"]], "Structures": [[444, "structures"]], "Memory": [[447, "memory"]], "Program Sanity": [[460, "program-sanity"]], "Performance": [[464, "performance"]], "Profiling": [[469, "profiling"]], "C++: Miscellaneous Live-Hacking": [[590, "c-miscellaneous-live-hacking"]], "Functions and Methods": [[613, "functions-and-methods"]], "C++ Template Basics": [[619, "c-template-basics"]], "Dynamic Memory Allocation, Resource Management": [[660, "dynamic-memory-allocation-resource-management"]], "The Standard Library: Miscellaneous Topics": [[669, "the-standard-library-miscellaneous-topics"]], "Functions, Functions": [[755, "functions-functions"]], "Topics and Dependencies": [[810, "topics-and-dependencies"]], "POSIX Threads": [[984, "posix-threads"]], "Python: The Language Fundamentals": [[1054, "python-the-language-fundamentals"]], "Unit Testing With googletest": [[1169, "unit-testing-with-googletest"]], "Embedded Computing 1 (STECE-2022): Summer": [[148, "embedded-computing-1-stece-2022-summer"]], "Embedded Computing 1 (STECE-2022): Syllabus": [[150, "embedded-computing-1-stece-2022-syllabus"]], "Lehrveranstaltungsbeschreibung": [[150, "lehrveranstaltungsbeschreibung"]], "Umfang der Lehrveranstaltung": [[150, "umfang-der-lehrveranstaltung"]], "Inhalte": [[150, "inhalte"]], "Inhaltliche Voraussetzungen": [[150, "inhaltliche-voraussetzungen"]], "Ziel": [[150, "ziel"]], "Angaben zur Pr\u00fcfung": [[150, "angaben-zur-prufung"]], "Beurteilungsschema": [[150, "beurteilungsschema"]], "Bewertung der Leistungen": [[150, "bewertung-der-leistungen"]], "Bewertungsschl\u00fcssel": [[150, "bewertungsschlussel"]], "Hilfsmittel bei schriftlichen Pr\u00fcfungen": [[150, "hilfsmittel-bei-schriftlichen-prufungen"]], "Wiederholungsm\u00f6glichkeiten": [[150, "wiederholungsmoglichkeiten"]], "Anwesenheitsvorgabe": [[150, "anwesenheitsvorgabe"]], "Zusatzinformationen": [[150, "zusatzinformationen"]], "Empfohlene Fachliteratur": [[150, "empfohlene-fachliteratur"]], "Inhalte der einzelnen Lehreinheiten": [[150, "inhalte-der-einzelnen-lehreinheiten"]]}, "indexentries": {}})