Search.setIndex({"docnames": ["about/myself/contact", "about/myself/cv-de", "about/myself/index", "about/myself/projects-de", "about/myself/skills-de", "about/site/courses/angebot-2023-10-12", "about/site/courses/index", "about/site/courses/samples/detail/2021-04-12/Notebook", "about/site/courses/samples/detail/2021-04-12/index", "about/site/courses/samples/detail/2021-04-12/notebook-wrapper", "about/site/courses/samples/detail/index", "about/site/courses/samples/index", "about/site/courses/templates", "about/site/index", "about/site/opentraining/index", "about/site/opentraining/misc/draft-topics/index", "about/site/opentraining/misc/index", "about/site/opentraining/misc/s5/index", "about/site/opentraining/misc/s5/tests/index", "about/site/opentraining/misc/s5/tests/test-slides", "about/site/opentraining/misc/screencast", "about/site/opentraining/misc/topics-to-write", "about/site/opentraining/netidee/index", "about/site/opentraining/netidee/netidee-antrag", "about/site/opentraining/netidee/netidee-video-2min", "about/site/opentraining/usecases/agenda-subtract-known", "about/site/opentraining/usecases/duration", "about/site/opentraining/usecases/index", "about/site/opentraining/usecases/linking", "about/site/opentraining/usecases/menu", "about/site/opentraining/usecases/slides", "about/site/recipes/camera-ssh", "about/site/recipes/emoji", "about/site/recipes/index", "about/site/recipes/isoamsa", "about/site/recipes/isoamsr", "about/site/recipes/isonum", "about/site/recipes/layout-test", "about/site/recipes/mathml", "about/site/recipes/rst-cheatsheet", "about/site/recipes/sphinxish", "about/site/work-in-progress/2022-04-13/index", "about/site/work-in-progress/2022-04-13/seminar/block-before-googletest", "about/site/work-in-progress/2022-04-13/seminar/clean-code-craftsmanship", "about/site/work-in-progress/2022-04-13/seminar/enter-googletest", "about/site/work-in-progress/2022-04-13/seminar/index", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/find-error", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-existing-files", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-store-content-on-read", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/csv", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/other-indexes", "about/site/work-in-progress/2022-04-13/seminar/tasks/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-interface", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-monolithic", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/pass-store-in-ctor", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/store-enum-switch", "about/site/work-in-progress/blink/glt", "about/site/work-in-progress/blink/index", "about/site/work-in-progress/blink/installation", "about/site/work-in-progress/blink/pycon-2023", "about/site/work-in-progress/blink/screenplay", "about/site/work-in-progress/blog-queue/hochkoenig/index", "about/site/work-in-progress/blog-queue/index", "about/site/work-in-progress/blog-queue/sphinx", "about/site/work-in-progress/fh-joanneum/2019/cxx", "about/site/work-in-progress/fh-joanneum/2019/cxx_build", "about/site/work-in-progress/fh-joanneum/2019/cxx_iface", "about/site/work-in-progress/fh-joanneum/2019/cxx_oo_basics", "about/site/work-in-progress/fh-joanneum/2019/cxx_unittest", "about/site/work-in-progress/fh-joanneum/2019/ec", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-1", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-2", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race_fixed", "about/site/work-in-progress/fh-joanneum/2019/git", "about/site/work-in-progress/fh-joanneum/2019/index", "about/site/work-in-progress/fh-joanneum/2019/linux", "about/site/work-in-progress/fh-joanneum/2019/linux_basics", "about/site/work-in-progress/fh-joanneum/2019/linux_dev_mgmt", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor_parallel", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_led_display", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_sensors", "about/site/work-in-progress/fh-joanneum/2019/linux_gpio", "about/site/work-in-progress/fh-joanneum/2019/mt", "about/site/work-in-progress/fh-joanneum/2019/mt_lock", "about/site/work-in-progress/fh-joanneum/2019/mt_wait", "about/site/work-in-progress/fh-joanneum/2019/py_basics", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_avg_display", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_sensors", "about/site/work-in-progress/fh-joanneum/2019/py_web", "about/site/work-in-progress/fh-joanneum/2019/py_web_sensors", "about/site/work-in-progress/fh-joanneum/2019/python", "about/site/work-in-progress/fh-joanneum/2020/index", "about/site/work-in-progress/fh-joanneum/2020/ss2022", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-08", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10-homework", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-21", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-22,24", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-28", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-04-01", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/index", "about/site/work-in-progress/fh-joanneum/2020/ws2022", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-code-general", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-yesno", "about/site/work-in-progress/fh-joanneum/2020/ws2022/lab-exam-2023-01-17", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30-solved", "about/site/work-in-progress/fh-joanneum/2021/index", "about/site/work-in-progress/fh-joanneum/2021/ss2023", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger", "about/site/work-in-progress/fh-joanneum/2021/tasks/group", "about/site/work-in-progress/fh-joanneum/2021/tasks/pwm-display", "about/site/work-in-progress/fh-joanneum/2021/tasks/switch-interface", "about/site/work-in-progress/fh-joanneum/2021/tasks/sysfs-gpio-switch", "about/site/work-in-progress/fh-joanneum/2021/ws2023-2024", "about/site/work-in-progress/fh-joanneum/index", "about/site/work-in-progress/git", "about/site/work-in-progress/index", "about/site/work-in-progress/packaging/index", "about/site/work-in-progress/project-xxx/audio-chip", "about/site/work-in-progress/project-xxx/debian-config", "about/site/work-in-progress/project-xxx/debian-kernel-package", "about/site/work-in-progress/project-xxx/hardware-bringup", "about/site/work-in-progress/project-xxx/index", "about/site/work-in-progress/project-xxx/kernel-upgrade-dirty", "about/site/work-in-progress/project-xxx/wait-hardware", "about/site/work-in-progress/project-xxx/yocto-kernel", "about/site/work-in-progress/python-training", "about/site/work-in-progress/screencast", "about/site/work-in-progress/seo", "about/site/work-in-progress/stacks", "about/site/work-in-progress/todo-misc", "about/site/work-in-progress/web", "blog/2010/07/beagleboard-how-to-repair-nand-also-known-as-40w", "blog/2011/01/porting-to-linux-there-s-always-a-better-way", "blog/2011/01/saving-solid-state-disk-life--gentoo", "blog/2012/04/Why-ps-sucks", "blog/2020/02/fedora-kernel-build", "blog/2020/03/custom-domain-gh-pages", "blog/2020/03/ms-teams-on-linux", "blog/2020/03/sphinx-gh-pages", "blog/2020/04/bbb", "blog/2020/09/traunstein", "blog/2021/08/grintovec", "blog/2021/09/xps13-shim-mok-brick/index", "blog/2022/09/cross-raspi", "blog/index", "index", "trainings/codex", "trainings/exercises", "trainings/index", "trainings/log/detail/2013-10-01/index", "trainings/log/detail/2015-11-30/index", "trainings/log/detail/2019-10-28/LiveHacking", "trainings/log/detail/2019-10-28/index", "trainings/log/detail/2019-11-12/code/BigPlan", "trainings/log/detail/2019-11-12/code/LiveHacking", "trainings/log/detail/2019-11-12/index", "trainings/log/detail/2020-01-10/Proposal", "trainings/log/detail/2020-01-10/index", "trainings/log/detail/2020-03-30/code/exercise-string/index", "trainings/log/detail/2020-03-30/index", "trainings/log/detail/2020-03-30/install-googletest", "trainings/log/detail/2020-03-30/setup", "trainings/log/detail/2020-03-30/vs-code", "trainings/log/detail/2020-05-12/code/index", "trainings/log/detail/2020-05-12/index", "trainings/log/detail/2020-05-18/Livehacking", "trainings/log/detail/2020-05-18/code/index", "trainings/log/detail/2020-05-18/index", "trainings/log/detail/2020-09-07/index", "trainings/log/detail/2020-09-28/index", "trainings/log/detail/2020-10-19/Notebook", "trainings/log/detail/2020-10-19/index", "trainings/log/detail/2020-11-03/index", "trainings/log/detail/2020-11-23/index", "trainings/log/detail/2020-11-30/index", "trainings/log/detail/2021-01-13/Notebook", "trainings/log/detail/2021-01-13/index", "trainings/log/detail/2021-01-13/notebook-wrapper", "trainings/log/detail/2021-02-22/index", "trainings/log/detail/2021-03-08/index", "trainings/log/detail/2021-03-15/Notebook", "trainings/log/detail/2021-03-15/index", "trainings/log/detail/2021-03-22/Notebook", "trainings/log/detail/2021-03-22/index", "trainings/log/detail/2021-03-29/index", "trainings/log/detail/2021-04-12/Notebook", "trainings/log/detail/2021-04-12/index", "trainings/log/detail/2021-04-12/notebook-wrapper", "trainings/log/detail/2021-05-03/Notebook", "trainings/log/detail/2021-05-03/index", "trainings/log/detail/2021-05-03/notebook-wrapper", "trainings/log/detail/2021-05-25/Notebook", "trainings/log/detail/2021-05-25/index", "trainings/log/detail/2021-06-14/index", "trainings/log/detail/2021-07-12/index", "trainings/log/detail/2021-08-02/index", "trainings/log/detail/2021-08-02/notebook", "trainings/log/detail/2021-08-23/Notebook", "trainings/log/detail/2021-08-23/exercises/sap-cleaned", "trainings/log/detail/2021-08-23/index", "trainings/log/detail/2021-08-23/notebook-wrapper", "trainings/log/detail/2021-08-31/Notebook", "trainings/log/detail/2021-08-31/index", "trainings/log/detail/2021-08-31/notebook-wrapper", "trainings/log/detail/2021-11-17/Notebook", "trainings/log/detail/2021-11-17/index", "trainings/log/detail/2021-11-17/notebook-wrapper", "trainings/log/detail/2021-12-01/2021-12-01", "trainings/log/detail/2021-12-01/index", "trainings/log/detail/2021-12-01/notebook-wrapper", "trainings/log/detail/2021-12-06/index", "trainings/log/detail/2022-01-17/index", "trainings/log/detail/2022-01-17/notebook", "trainings/log/detail/2022-01-17/notebook-wrapper", "trainings/log/detail/2022-02-23/Notebook", "trainings/log/detail/2022-02-23/index", "trainings/log/detail/2022-02-23/notebook-wrapper", "trainings/log/detail/2022-03-15/Notebook", "trainings/log/detail/2022-03-15/index", "trainings/log/detail/2022-03-15/notebook-wrapper", "trainings/log/detail/2022-03-23/Notebook", "trainings/log/detail/2022-03-23/index", "trainings/log/detail/2022-03-23/notebook-wrapper", "trainings/log/detail/2022-04-05/index", "trainings/log/detail/2022-04-05/notebook", "trainings/log/detail/2022-04-05/notebook-wrapper", "trainings/log/detail/2022-04-25/index", "trainings/log/detail/2022-04-25/notebook", "trainings/log/detail/2022-04-25/notebook-wrapper", "trainings/log/detail/2022-05-02/index", "trainings/log/detail/2022-05-02/notebook", "trainings/log/detail/2022-05-02/notebook-wrapper", "trainings/log/detail/2022-05-16/index", "trainings/log/detail/2022-05-16/notebook", "trainings/log/detail/2022-05-16/notebook-wrapper", "trainings/log/detail/2022-06-14/2022-05-11", "trainings/log/detail/2022-06-14/index", "trainings/log/detail/2022-07-26/index", "trainings/log/detail/2022-10-03/index", "trainings/log/detail/2022-10-11/index", "trainings/log/detail/2022-10-24/index", "trainings/log/detail/2022-11-07/index", "trainings/log/detail/2022-11-07/notebook", "trainings/log/detail/2022-11-07/notebook-wrapper", "trainings/log/detail/2022-11-16/index", "trainings/log/detail/2022-11-16/notebook", "trainings/log/detail/2022-11-16/notebook-wrapper", "trainings/log/detail/2023-01-23/index", "trainings/log/detail/2023-02-13/index", "trainings/log/detail/2023-03-13-Python-SAP/Demo/demo-notebook", "trainings/log/detail/2023-03-13-Python-SAP/demo", "trainings/log/detail/2023-03-13-Python-SAP/index", "trainings/log/detail/2023-03-13-Python-SAP/notebook", "trainings/log/detail/2023-03-13-Python-SAP/notebook-wrapper", "trainings/log/detail/2023-03-13-Python-SAP/original-agenda", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/index", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/sap-dataset", "trainings/log/detail/2023-03-20--C++-embedded/index", "trainings/log/detail/2023-03-28--Python-Clean-Code/index", "trainings/log/detail/2023-04-18--C++-embedded/index", "trainings/log/detail/2023-04-24--Python-Advanced/agenda", "trainings/log/detail/2023-04-24--Python-Advanced/index", "trainings/log/detail/2023-04-24--Python-Advanced/notebook", "trainings/log/detail/2023-04-24--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-05-15--Python-Basics/agenda", "trainings/log/detail/2023-05-15--Python-Basics/index", "trainings/log/detail/2023-05-15--Python-Basics/notebook", "trainings/log/detail/2023-05-15--Python-Basics/notebook-wrapper", "trainings/log/detail/2023-05-23--Linux-Basics/agenda", "trainings/log/detail/2023-05-23--Linux-Basics/index", "trainings/log/detail/2023-06-20--Python-Basics/agenda", "trainings/log/detail/2023-06-20--Python-Basics/index", "trainings/log/detail/2023-06-20--Python-Basics/notebook", "trainings/log/detail/2023-06-20--Python-Basics/notebook-wrapper", "trainings/log/detail/2023-07-03--CMake/agenda", "trainings/log/detail/2023-07-03--CMake/index", "trainings/log/detail/2023-09-25--Python-Advanced/index", "trainings/log/detail/2023-09-25--Python-Advanced/notebook", "trainings/log/detail/2023-09-25--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-10-09--Python-Advanced/index", "trainings/log/detail/2023-10-09--Python-Advanced/notebook", "trainings/log/detail/2023-10-09--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-10-24--Python-Advanced/agenda", "trainings/log/detail/2023-10-24--Python-Advanced/index", "trainings/log/detail/2023-10-24--Python-Advanced/notebook", "trainings/log/detail/2023-10-24--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-11-22--Python-Advanced/agenda", "trainings/log/detail/2023-11-22--Python-Advanced/index", "trainings/log/detail/2023-11-22--Python-Advanced/notebook", "trainings/log/detail/2023-11-22--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-XX-XX-C++-Advanced/agenda", "trainings/log/detail/2023-XX-XX-C++-Advanced/index", "trainings/log/detail/2023-XX-XX-C++-embedded/index", "trainings/log/detail/2023-XX-XX-Python-SAP/index", "trainings/log/detail/FH-ECE-19/EC1/2021-05-12/screenplay-checker", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-abc", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-oo", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-unittest", "trainings/log/detail/FH-ECE-19/EC1/Exercises/fh-group", "trainings/log/detail/FH-ECE-19/EC1/Exercises/file-read", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-20-G2", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-21", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Checker-Explanations", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Datatypes", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Functions", "trainings/log/detail/FH-ECE-19/EC1/cloud-computer", "trainings/log/detail/FH-ECE-19/EC1/formales", "trainings/log/detail/FH-ECE-19/EC1/index", "trainings/log/detail/FH-ECE-19/EC1/log", "trainings/log/detail/FH-ECE-19/EC1/lv-de", "trainings/log/detail/FH-ECE-19/EC1/lv-en", "trainings/log/detail/FH-ECE-19/EC1/plan", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-07", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-12", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-28", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-15", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-29", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-12-14", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-10", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-12", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-02-15", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/index", "trainings/log/detail/FH-ECE-19/EC2/index", "trainings/log/detail/FH-ECE-19/EC2/test-material", "trainings/log/detail/FH-ECE-19/index", "trainings/log/detail/index", "trainings/log/index", "trainings/material/index", "trainings/material/soup/c/010-introduction/000-installation/topic", "trainings/material/soup/c/010-introduction/010-introduction/topic", "trainings/material/soup/c/010-introduction/020-getting-started/topic", "trainings/material/soup/c/010-introduction/030-variables-and-arithmetic-expressions/topic", "trainings/material/soup/c/010-introduction/040-exercise-fahrenheit-float/topic", "trainings/material/soup/c/010-introduction/050-the-for-statement/topic", "trainings/material/soup/c/010-introduction/060-exercise-fahrenheit-for/topic", "trainings/material/soup/c/010-introduction/070-symbolic-constants/topic", "trainings/material/soup/c/010-introduction/080-exercise-fahrenheit-cpp/topic", "trainings/material/soup/c/010-introduction/090-character-input-and-output/topic", "trainings/material/soup/c/010-introduction/100-exercise-wc/topic", "trainings/material/soup/c/010-introduction/110-arrays/topic", "trainings/material/soup/c/010-introduction/120-exercise-histogram/topic", "trainings/material/soup/c/010-introduction/130-functions/topic", "trainings/material/soup/c/010-introduction/140-exercise-power-declaration/topic", "trainings/material/soup/c/010-introduction/150-character-arrays/topic", "trainings/material/soup/c/010-introduction/160-exercise-string-read-line/topic", "trainings/material/soup/c/010-introduction/170-external-variables-and-scope/topic", "trainings/material/soup/c/010-introduction/group", "trainings/material/soup/c/020-types-operators-expressions/010-introduction/topic", "trainings/material/soup/c/020-types-operators-expressions/020-variable-names/topic", "trainings/material/soup/c/020-types-operators-expressions/030-data-types-and-sizes/topic", "trainings/material/soup/c/020-types-operators-expressions/040-constants/topic", "trainings/material/soup/c/020-types-operators-expressions/050-declarations/topic", "trainings/material/soup/c/020-types-operators-expressions/060-arithmetic-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/070-relational-and-logical-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/080-type-conversions/topic", "trainings/material/soup/c/020-types-operators-expressions/090-increment-and-decrement-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/100-exercise-string-reduce/topic", "trainings/material/soup/c/020-types-operators-expressions/110-bitwise-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/120-assignment-operators-and-expressions/topic", "trainings/material/soup/c/020-types-operators-expressions/130-conditional-expressions/topic", "trainings/material/soup/c/020-types-operators-expressions/140-precedence-and-order-of-evaluation/topic", "trainings/material/soup/c/020-types-operators-expressions/group", "trainings/material/soup/c/030-program-flow/010-statements-and-blocks/topic", "trainings/material/soup/c/030-program-flow/020-if-else/topic", "trainings/material/soup/c/030-program-flow/030-else-if/topic", "trainings/material/soup/c/030-program-flow/040-switch/topic", "trainings/material/soup/c/030-program-flow/050-loops-while-and-for/topic", "trainings/material/soup/c/030-program-flow/060-loops-do-while/topic", "trainings/material/soup/c/030-program-flow/070-break-and-continue/topic", "trainings/material/soup/c/030-program-flow/080-goto-and-labels/topic", "trainings/material/soup/c/030-program-flow/group", "trainings/material/soup/c/040-functions-and-program-structure/010-basics-of-functions/topic", "trainings/material/soup/c/040-functions-and-program-structure/020-external-variables/topic", "trainings/material/soup/c/040-functions-and-program-structure/030-header-files/topic", "trainings/material/soup/c/040-functions-and-program-structure/040-static-variables/topic", "trainings/material/soup/c/040-functions-and-program-structure/050-c-preprocessor/topic", "trainings/material/soup/c/040-functions-and-program-structure/060-c-preprocessor-advanced/topic", "trainings/material/soup/c/040-functions-and-program-structure/group", "trainings/material/soup/c/050-pointers-and-arrays/010-pointers-and-addresses/topic", "trainings/material/soup/c/050-pointers-and-arrays/020-pointers-and-function-arguments/topic", "trainings/material/soup/c/050-pointers-and-arrays/030-exercise-swap/topic", "trainings/material/soup/c/050-pointers-and-arrays/040-pointers-and-arrays/topic", "trainings/material/soup/c/050-pointers-and-arrays/050-command-line-arguments/topic", "trainings/material/soup/c/050-pointers-and-arrays/group", "trainings/material/soup/c/060-structures/010-basics-of-structures/topic", "trainings/material/soup/c/060-structures/020-structures-and-functions/topic", "trainings/material/soup/c/060-structures/030-typedef/topic", "trainings/material/soup/c/060-structures/group", "trainings/material/soup/c/070-memory/010-malloc/topic", "trainings/material/soup/c/070-memory/020-exercise-linked-list/topic", "trainings/material/soup/c/070-memory/group", "trainings/material/soup/c/080-advanced-language-features/010-volatile/topic", "trainings/material/soup/c/080-advanced-language-features/020-atomic/topic", "trainings/material/soup/c/080-advanced-language-features/030-alignment/topic", "trainings/material/soup/c/080-advanced-language-features/group", "trainings/material/soup/c/090-program-sanity/010-introduction/topic", "trainings/material/soup/c/090-program-sanity/020-integral-types/topic", "trainings/material/soup/c/090-program-sanity/030-discrete-values/topic", "trainings/material/soup/c/090-program-sanity/040-static/topic", "trainings/material/soup/c/090-program-sanity/050-const/topic", "trainings/material/soup/c/090-program-sanity/060-struct-initialization/topic", "trainings/material/soup/c/090-program-sanity/070-explicit-type-safety/topic", "trainings/material/soup/c/090-program-sanity/080-valgrind/topic", "trainings/material/soup/c/090-program-sanity/group", "trainings/material/soup/c/100-performance/010-introduction/topic", "trainings/material/soup/c/100-performance/020-computebound/topic", "trainings/material/soup/c/100-performance/030-memory/topic", "trainings/material/soup/c/100-performance/group", "trainings/material/soup/c/110-profiling/010-introduction/topic", "trainings/material/soup/c/110-profiling/020-gprof/topic", "trainings/material/soup/c/110-profiling/030-callgrind/topic", "trainings/material/soup/c/110-profiling/040-oprofile/topic", "trainings/material/soup/c/110-profiling/group", "trainings/material/soup/c/group", "trainings/material/soup/clean-code/book-messages", "trainings/material/soup/clean-code/craft-sw", "trainings/material/soup/clean-code/group", "trainings/material/soup/clean-code/intro-python/livehacking", "trainings/material/soup/cmake/basics", "trainings/material/soup/cmake/configure_file", "trainings/material/soup/cmake/cxx-and-rants", "trainings/material/soup/cmake/external-dependencies", "trainings/material/soup/cmake/group", "trainings/material/soup/cmake/installation", "trainings/material/soup/cmake/libraries", "trainings/material/soup/cmake/optional-code-approach-1", "trainings/material/soup/cmake/optional-code-approach-2", "trainings/material/soup/cmake/optional-code-problem", "trainings/material/soup/cmake/shared-libraries", "trainings/material/soup/cmake/structure", "trainings/material/soup/cmake/targets-properties", "trainings/material/soup/cmake/testing", "trainings/material/soup/cxx-code/index", "trainings/material/soup/cxx-design-patterns/abstract-factory/abstract-factory", "trainings/material/soup/cxx-design-patterns/adapter/adapter", "trainings/material/soup/cxx-design-patterns/command/command", "trainings/material/soup/cxx-design-patterns/command/socialdb", "trainings/material/soup/cxx-design-patterns/composite/composite", "trainings/material/soup/cxx-design-patterns/decorator/decorator", "trainings/material/soup/cxx-design-patterns/group", "trainings/material/soup/cxx-design-patterns/heating-screenplay/heating-screenplay", "trainings/material/soup/cxx-design-patterns/interpreter/interpreter", "trainings/material/soup/cxx-design-patterns/observer/observer", "trainings/material/soup/cxx-design-patterns/oo-principles", "trainings/material/soup/cxx-design-patterns/proxy/proxy", "trainings/material/soup/cxx-design-patterns/sensor-hierarchy", "trainings/material/soup/cxx-design-patterns/singleton/singleton", "trainings/material/soup/cxx-design-patterns/uml/uml", "trainings/material/soup/cxx-exercises/design-patterns/abstract-factory", "trainings/material/soup/cxx-exercises/design-patterns/adapter", "trainings/material/soup/cxx-exercises/design-patterns/command", "trainings/material/soup/cxx-exercises/design-patterns/composite", "trainings/material/soup/cxx-exercises/design-patterns/decorator", "trainings/material/soup/cxx-exercises/design-patterns/group", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-and-adapter", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-basic", "trainings/material/soup/cxx-exercises/design-patterns/observer", "trainings/material/soup/cxx-exercises/design-patterns/proxy-remote", "trainings/material/soup/cxx-exercises/design-patterns/proxy-round", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible-strict", "trainings/material/soup/cxx-exercises/design-patterns/singleton-inflexible", "trainings/material/soup/cxx-exercises/design-patterns/solutions/abstract-factory", "trainings/material/soup/cxx-exercises/design-patterns/solutions/adapter", "trainings/material/soup/cxx-exercises/design-patterns/solutions/command", "trainings/material/soup/cxx-exercises/design-patterns/solutions/composite", "trainings/material/soup/cxx-exercises/design-patterns/solutions/decorator", "trainings/material/soup/cxx-exercises/design-patterns/solutions/group", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-and-adapter", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-basic", "trainings/material/soup/cxx-exercises/design-patterns/solutions/observer", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-remote", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-round", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible-strict", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-inflexible", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-loop-function", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-no-polymorphism", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-random-sensor", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/group", "trainings/material/soup/cxx-exercises/group", "trainings/material/soup/cxx-exercises/nopoly-display-led-stripe/display-led-stripe-nopoly", "trainings/material/soup/cxx-exercises/nopoly-hysteresis/hysteresis-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensor-avg/sensor-avg-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-const-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-mock-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-random-nopoly", "trainings/material/soup/cxx-exercises/nopoly-switch-mock/switch-mock-nopoly", "trainings/material/soup/cxx-exercises/oo-shapes/shapes", "trainings/material/soup/cxx-exercises/project-setup", "trainings/material/soup/cxx-exercises/sensor-interface/sensor-interface", "trainings/material/soup/cxx-exercises/sensor-w1-factory/sensor-w1-factory", "trainings/material/soup/cxx-exercises/sensor-w1/sensor-w1", "trainings/material/soup/cxx-exercises/stl/algo", "trainings/material/soup/cxx-exercises/stl/filter-generic", "trainings/material/soup/cxx-exercises/stl/filter-greater-10", "trainings/material/soup/cxx-exercises/stl/filter-odd", "trainings/material/soup/cxx-exercises/stl/group", "trainings/material/soup/cxx-exercises/stl/map", "trainings/material/soup/cxx-exercises/stl/sensor-repository/group", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-no-overwrite", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-sunny", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-not-found", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-sunny", "trainings/material/soup/cxx-exercises/stl/sensor-repository/no-memleak", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-not-found", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-sunny", "trainings/material/soup/cxx-exercises/stl/sensor-repository/size-const", "trainings/material/soup/cxx-exercises/stl/uniq", "trainings/material/soup/cxx-exercises/stl/vector", "trainings/material/soup/cxx-todo/index", "trainings/material/soup/cxx/cxx_class_templates/code/index", "trainings/material/soup/cxx/cxx_class_templates/screenplay", "trainings/material/soup/cxx/cxx_class_templates/topic", "trainings/material/soup/cxx/cxx_dynamic_memory/code/index", "trainings/material/soup/cxx/cxx_dynamic_memory/screenplay", "trainings/material/soup/cxx/cxx_dynamic_memory/topic", "trainings/material/soup/cxx/cxx_global_initialization/code/index", "trainings/material/soup/cxx/cxx_global_initialization/screenplay", "trainings/material/soup/cxx/cxx_global_initialization/topic", "trainings/material/soup/cxx/cxx_inheritance_virtual/code/index", "trainings/material/soup/cxx/cxx_inheritance_virtual/screenplay", "trainings/material/soup/cxx/cxx_inheritance_virtual/topic", "trainings/material/soup/cxx/cxx_ownership_raii/code/index", "trainings/material/soup/cxx/cxx_ownership_raii/screenplay", "trainings/material/soup/cxx/cxx_ownership_raii/topic", "trainings/material/soup/cxx/cxx_stl_container_intro/code/index", "trainings/material/soup/cxx/cxx_stl_container_intro/screenplay", "trainings/material/soup/cxx/cxx_stl_container_intro/topic", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/code/index", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/screenplay", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/topic", "trainings/material/soup/cxx/group", "trainings/material/soup/cxx03/001-introduction/topic", "trainings/material/soup/cxx03/020-data-encapsulation/c", "trainings/material/soup/cxx03/020-data-encapsulation/copy-basics", "trainings/material/soup/cxx03/020-data-encapsulation/cpp-introduction", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-custom", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-default", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-dtor", "trainings/material/soup/cxx03/020-data-encapsulation/group", "trainings/material/soup/cxx03/020-data-encapsulation/initializer-list", "trainings/material/soup/cxx03/020-data-encapsulation/object-copy", "trainings/material/soup/cxx03/030-functions-and-methods/010-overloading/topic", "trainings/material/soup/cxx03/030-functions-and-methods/020-methods/topic", "trainings/material/soup/cxx03/030-functions-and-methods/030-const/topic", "trainings/material/soup/cxx03/030-functions-and-methods/040-this/topic", "trainings/material/soup/cxx03/030-functions-and-methods/050-references/topic", "trainings/material/soup/cxx03/030-functions-and-methods/060-static/topic", "trainings/material/soup/cxx03/030-functions-and-methods/065-static-member-variables/topic", "trainings/material/soup/cxx03/030-functions-and-methods/070-operators/topic", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-cuboid", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point3d", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-rectangle", "trainings/material/soup/cxx03/030-functions-and-methods/group", "trainings/material/soup/cxx03/040-exceptions/010-basics/topic", "trainings/material/soup/cxx03/040-exceptions/020-try-catch/topic", "trainings/material/soup/cxx03/040-exceptions/group", "trainings/material/soup/cxx03/050-templates/010-function-templates/topic", "trainings/material/soup/cxx03/050-templates/020-class-templates/topic", "trainings/material/soup/cxx03/050-templates/group", "trainings/material/soup/cxx03/060-stl/010-basics/algo-copy", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-algo", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-basics", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-difference", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-out-of-range", "trainings/material/soup/cxx03/060-stl/010-basics/topic", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/topic", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-and-copy", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-basic", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-pointer-arith", "trainings/material/soup/cxx03/060-stl/020-algorithm/binary_search", "trainings/material/soup/cxx03/060-stl/020-algorithm/copy", "trainings/material/soup/cxx03/060-stl/020-algorithm/find", "trainings/material/soup/cxx03/060-stl/020-algorithm/find_if", "trainings/material/soup/cxx03/060-stl/020-algorithm/for_each", "trainings/material/soup/cxx03/060-stl/020-algorithm/group", "trainings/material/soup/cxx03/060-stl/020-algorithm/lower_bound", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse_copy", "trainings/material/soup/cxx03/060-stl/020-algorithm/sort", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/basics", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/group", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/list", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/vector", "trainings/material/soup/cxx03/060-stl/050-associative-containers/basics", "trainings/material/soup/cxx03/060-stl/050-associative-containers/group", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-init-fill", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-insert", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-remove", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-search", "trainings/material/soup/cxx03/060-stl/050-associative-containers/multimap", "trainings/material/soup/cxx03/060-stl/allocators/allocator_basics", "trainings/material/soup/cxx03/060-stl/allocators/group", "trainings/material/soup/cxx03/060-stl/exercises/group", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/exercise", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/group", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/solution", "trainings/material/soup/cxx03/060-stl/group", "trainings/material/soup/cxx03/070-dynamic-memory/000-todo/topic", "trainings/material/soup/cxx03/070-dynamic-memory/group", "trainings/material/soup/cxx03/100-inheritance-oo-design/basics", "trainings/material/soup/cxx03/100-inheritance-oo-design/destructor", "trainings/material/soup/cxx03/100-inheritance-oo-design/group", "trainings/material/soup/cxx03/100-inheritance-oo-design/interface", "trainings/material/soup/cxx03/100-inheritance-oo-design/polymorphism", "trainings/material/soup/cxx03/100-inheritance-oo-design/private-protected", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-destructor", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-method", "trainings/material/soup/cxx03/900-standard-library-miscellanea/group", "trainings/material/soup/cxx03/900-standard-library-miscellanea/string/topic", "trainings/material/soup/cxx03/exercises-misc/american-flag/exercise", "trainings/material/soup/cxx03/exercises-misc/fh-questions", "trainings/material/soup/cxx03/exercises-misc/group", "trainings/material/soup/cxx03/exercises-misc/sum-integers-from-stdin/exercise", "trainings/material/soup/cxx03/exercises-userdb/group", "trainings/material/soup/cxx03/exercises-userdb/user-access-methods/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-const-members/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-const/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-default-ctor/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-simple-method/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-to-cxx-ctor/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-insert/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-find_if/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-notfound-exception/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-search/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-vector/exercise", "trainings/material/soup/cxx03/group", "trainings/material/soup/cxx11/010-introduction/group", "trainings/material/soup/cxx11/010-introduction/history", "trainings/material/soup/cxx11/010-introduction/overview-livehacking", "trainings/material/soup/cxx11/020-new-language-features/010-strongly-typed-enums/topic", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/group", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/implementor-view", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/intro", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/mess", "trainings/material/soup/cxx11/020-new-language-features/050-delegating-ctor/topic", "trainings/material/soup/cxx11/020-new-language-features/055-constexpr/topic", "trainings/material/soup/cxx11/020-new-language-features/060-move/afterword", "trainings/material/soup/cxx11/020-new-language-features/060-move/group", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-smartptr-move", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-string-move", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-using-string-move", "trainings/material/soup/cxx11/020-new-language-features/060-move/overview", "trainings/material/soup/cxx11/020-new-language-features/070-miscellaneous/topic", "trainings/material/soup/cxx11/020-new-language-features/auto", "trainings/material/soup/cxx11/020-new-language-features/concepts/group", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-1-conceptless", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-2-conceptless-error", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-3-concept-integral", "trainings/material/soup/cxx11/020-new-language-features/concepts/links", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-1-good-old-func", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-2-need-template", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-4-concept-has-size", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-5-concept-index-ret-double", "trainings/material/soup/cxx11/020-new-language-features/coroutines/group", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibo-generator", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibonacci", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-h", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-hello", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/simplest", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-iter", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-next", "trainings/material/soup/cxx11/020-new-language-features/default", "trainings/material/soup/cxx11/020-new-language-features/delete", "trainings/material/soup/cxx11/020-new-language-features/final", "trainings/material/soup/cxx11/020-new-language-features/group", "trainings/material/soup/cxx11/020-new-language-features/lambda/group", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-capture", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor-pitfall", "trainings/material/soup/cxx11/020-new-language-features/modules", "trainings/material/soup/cxx11/020-new-language-features/override", "trainings/material/soup/cxx11/020-new-language-features/range-based-for", "trainings/material/soup/cxx11/020-new-language-features/range-based-for-map", "trainings/material/soup/cxx11/020-new-language-features/ranges/good-bad", "trainings/material/soup/cxx11/020-new-language-features/ranges/group", "trainings/material/soup/cxx11/020-new-language-features/ranges/intro", "trainings/material/soup/cxx11/020-new-language-features/ranges/links", "trainings/material/soup/cxx11/020-new-language-features/structured-binding", "trainings/material/soup/cxx11/030-smart-pointers/040-closing-words/topic", "trainings/material/soup/cxx11/030-smart-pointers/group", "trainings/material/soup/cxx11/030-smart-pointers/introduction", "trainings/material/soup/cxx11/030-smart-pointers/introduction-livehack", "trainings/material/soup/cxx11/030-smart-pointers/sharedptr", "trainings/material/soup/cxx11/030-smart-pointers/uniqueptr", "trainings/material/soup/cxx11/030-smart-pointers/weakptr", "trainings/material/soup/cxx11/035-perfect-forwarding/topic", "trainings/material/soup/cxx11/040-bind-function/010-bind/topic", "trainings/material/soup/cxx11/040-bind-function/020-function/topic", "trainings/material/soup/cxx11/040-bind-function/group", "trainings/material/soup/cxx11/050-multithreading/010-introduction/topic", "trainings/material/soup/cxx11/050-multithreading/020-thread/topic", "trainings/material/soup/cxx11/050-multithreading/030-race-conditions/topic", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/atomics", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/mutex", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/scoped-locking", "trainings/material/soup/cxx11/050-multithreading/condition-variable", "trainings/material/soup/cxx11/050-multithreading/group", "trainings/material/soup/cxx11/050-multithreading/promise-future", "trainings/material/soup/cxx11/100-miscellaneous/010-chrono/topic", "trainings/material/soup/cxx11/100-miscellaneous/any-variant-optional/variant", "trainings/material/soup/cxx11/100-miscellaneous/group", "trainings/material/soup/cxx11/exercises/bag-copy", "trainings/material/soup/cxx11/exercises/bag-shared", "trainings/material/soup/cxx11/exercises/bag-unique", "trainings/material/soup/cxx11/exercises/group", "trainings/material/soup/cxx11/filesystem/topic", "trainings/material/soup/cxx11/group", "trainings/material/soup/graph", "trainings/material/soup/index", "trainings/material/soup/kernel/cdev-auto/screenplay", "trainings/material/soup/kernel/cdev-auto/slides", "trainings/material/soup/kernel/cdev-auto/topic", "trainings/material/soup/kernel/cdev-file-operations/screenplay", "trainings/material/soup/kernel/cdev-file-operations/slides", "trainings/material/soup/kernel/cdev-file-operations/topic", "trainings/material/soup/kernel/cdev-first-functionality/slides", "trainings/material/soup/kernel/cdev-first-functionality/topic", "trainings/material/soup/kernel/cdev-manual/screenplay", "trainings/material/soup/kernel/cdev-manual/slides", "trainings/material/soup/kernel/cdev-manual/topic", "trainings/material/soup/kernel/cdev-multiple-devices/slides", "trainings/material/soup/kernel/cdev-multiple-devices/topic", "trainings/material/soup/kernel/cdev-refactoring/screenplay", "trainings/material/soup/kernel/cdev-refactoring/slides", "trainings/material/soup/kernel/cdev-refactoring/topic", "trainings/material/soup/kernel/dma/slides", "trainings/material/soup/kernel/dma/topic", "trainings/material/soup/kernel/fedora-kernel-build/screenplay", "trainings/material/soup/kernel/fedora-kernel-build/topic", "trainings/material/soup/kernel/fedora-module-build/screenplay", "trainings/material/soup/kernel/fedora-module-build/topic", "trainings/material/soup/kernel/group", "trainings/material/soup/kernel/hello-world/slides", "trainings/material/soup/kernel/hello-world/topic", "trainings/material/soup/kernel/interrupt-coding/slides", "trainings/material/soup/kernel/interrupt-coding/topic", "trainings/material/soup/kernel/interrupt/slides", "trainings/material/soup/kernel/interrupt/topic", "trainings/material/soup/kernel/iomemory/slides", "trainings/material/soup/kernel/iomemory/topic", "trainings/material/soup/kernel/kmalloc/slides", "trainings/material/soup/kernel/kmalloc/topic", "trainings/material/soup/kernel/list/slides", "trainings/material/soup/kernel/list/topic", "trainings/material/soup/kernel/mutex-coding/slides", "trainings/material/soup/kernel/mutex-coding/topic", "trainings/material/soup/kernel/mutex/slides", "trainings/material/soup/kernel/mutex/topic", "trainings/material/soup/kernel/netdev/slides", "trainings/material/soup/kernel/netdev/topic", "trainings/material/soup/kernel/pci/slides", "trainings/material/soup/kernel/pci/topic", "trainings/material/soup/kernel/process-vs-atomic/slides", "trainings/material/soup/kernel/process-vs-atomic/topic", "trainings/material/soup/kernel/raspi-kernel-build/story", "trainings/material/soup/kernel/raspi-kernel-build/topic", "trainings/material/soup/kernel/sample-project", "trainings/material/soup/kernel/spinlock-coding/slides", "trainings/material/soup/kernel/spinlock-coding/topic", "trainings/material/soup/kernel/spinlock/slides", "trainings/material/soup/kernel/spinlock/topic", "trainings/material/soup/kernel/stub-sysprog-dup/topic", "trainings/material/soup/kernel/time_timer-coding/slides", "trainings/material/soup/kernel/time_timer-coding/topic", "trainings/material/soup/kernel/time_timer/slides", "trainings/material/soup/kernel/time_timer/topic", "trainings/material/soup/kernel/todo", "trainings/material/soup/kernel/usermem/screenplay", "trainings/material/soup/kernel/usermem/slides", "trainings/material/soup/kernel/usermem/topic", "trainings/material/soup/kernel/waitqueue/screenplay", "trainings/material/soup/kernel/waitqueue/slides", "trainings/material/soup/kernel/waitqueue/topic", "trainings/material/soup/kernel/workqueue/screenplay", "trainings/material/soup/kernel/workqueue/slides", "trainings/material/soup/kernel/workqueue/topic", "trainings/material/soup/linux/basics/archiving-compression/exercises", "trainings/material/soup/linux/basics/archiving-compression/group", "trainings/material/soup/linux/basics/archiving-compression/gzip", "trainings/material/soup/linux/basics/archiving-compression/overview", "trainings/material/soup/linux/basics/archiving-compression/tar", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G1", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G2", "trainings/material/soup/linux/basics/exercises/group", "trainings/material/soup/linux/basics/group", "trainings/material/soup/linux/basics/intro/demo-everything-is-a-file", "trainings/material/soup/linux/basics/intro/environment", "trainings/material/soup/linux/basics/intro/exercises/fh-questions", "trainings/material/soup/linux/basics/intro/group", "trainings/material/soup/linux/basics/intro/login", "trainings/material/soup/linux/basics/intro/overview", "trainings/material/soup/linux/basics/intro/process", "trainings/material/soup/linux/basics/intro/process-tree", "trainings/material/soup/linux/basics/intro/wsl", "trainings/material/soup/linux/basics/io-redirection-pipes/exercises", "trainings/material/soup/linux/basics/io-redirection-pipes/group", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection-swap-stdout-stderr", "trainings/material/soup/linux/basics/io-redirection-pipes/pipes", "trainings/material/soup/linux/basics/permissions/basics", "trainings/material/soup/linux/basics/permissions/exercises/credentials", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions-nocheat", "trainings/material/soup/linux/basics/permissions/exercises/group", "trainings/material/soup/linux/basics/permissions/exercises/private-directory", "trainings/material/soup/linux/basics/permissions/exercises/private-directory-question", "trainings/material/soup/linux/basics/permissions/exercises/public-directory", "trainings/material/soup/linux/basics/permissions/exercises/public-directory-question", "trainings/material/soup/linux/basics/permissions/exercises/shared-file", "trainings/material/soup/linux/basics/permissions/group", "trainings/material/soup/linux/basics/permissions/setuid", "trainings/material/soup/linux/basics/permissions/setuid-livedemo", "trainings/material/soup/linux/basics/permissions/sticky", "trainings/material/soup/linux/basics/permissions/umask", "trainings/material/soup/linux/basics/shell/commandline", "trainings/material/soup/linux/basics/shell/configfiles", "trainings/material/soup/linux/basics/shell/cp", "trainings/material/soup/linux/basics/shell/cwd", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/copy-tree", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-copy-files", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-create-files", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-move-files", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/group", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/mkdir-p-rm-r", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-rf", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-tree", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/verify-hierarchy", "trainings/material/soup/linux/basics/shell/exercises/fh-questions", "trainings/material/soup/linux/basics/shell/exercises/group", "trainings/material/soup/linux/basics/shell/exercises/ls/dev-types", "trainings/material/soup/linux/basics/shell/exercises/ls/etc-passwd-size", "trainings/material/soup/linux/basics/shell/exercises/ls/group", "trainings/material/soup/linux/basics/shell/exercises/ls/home-permissions", "trainings/material/soup/linux/basics/shell/file_dir_create_rm", "trainings/material/soup/linux/basics/shell/group", "trainings/material/soup/linux/basics/shell/links", "trainings/material/soup/linux/basics/shell/ls", "trainings/material/soup/linux/basics/shell/mv", "trainings/material/soup/linux/basics/shell/paths", "trainings/material/soup/linux/basics/text-tools/cat", "trainings/material/soup/linux/basics/text-tools/cut", "trainings/material/soup/linux/basics/text-tools/exercises", "trainings/material/soup/linux/basics/text-tools/find", "trainings/material/soup/linux/basics/text-tools/grep", "trainings/material/soup/linux/basics/text-tools/group", "trainings/material/soup/linux/basics/text-tools/head-tail", "trainings/material/soup/linux/basics/text-tools/less", "trainings/material/soup/linux/basics/text-tools/overview", "trainings/material/soup/linux/drafts/group", "trainings/material/soup/linux/drafts/yocto", "trainings/material/soup/linux/group", "trainings/material/soup/linux/hardware/brushless-motor/topic", "trainings/material/soup/linux/hardware/can/10-intro", "trainings/material/soup/linux/hardware/can/20-interfaces", "trainings/material/soup/linux/hardware/can/30-programming", "trainings/material/soup/linux/hardware/can/40-harware", "trainings/material/soup/linux/hardware/can/group", "trainings/material/soup/linux/hardware/group", "trainings/material/soup/linux/hardware/i2c/topic", "trainings/material/soup/linux/hardware/pwm/topic", "trainings/material/soup/linux/hardware/w1/topic", "trainings/material/soup/linux/ssh/basics", "trainings/material/soup/linux/ssh/exercises/copy-file", "trainings/material/soup/linux/ssh/exercises/copy-tree", "trainings/material/soup/linux/ssh/exercises/group", "trainings/material/soup/linux/ssh/exercises/pubkey", "trainings/material/soup/linux/ssh/group", "trainings/material/soup/linux/ssh/key-pair", "trainings/material/soup/linux/ssh/links", "trainings/material/soup/linux/ssh/portforwarding", "trainings/material/soup/linux/ssh/scp", "trainings/material/soup/linux/ssh/sshfs", "trainings/material/soup/linux/sysprog/basics/errorhandling", "trainings/material/soup/linux/sysprog/basics/group", "trainings/material/soup/linux/sysprog/basics/syscalls", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-file", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-network", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-timer", "trainings/material/soup/linux/sysprog/blocking-io/group", "trainings/material/soup/linux/sysprog/file-io/basics", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-copy", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-hole", "trainings/material/soup/linux/sysprog/file-io/duplicate", "trainings/material/soup/linux/sysprog/file-io/example-O_CREAT", "trainings/material/soup/linux/sysprog/file-io/example-O_EXCL", "trainings/material/soup/linux/sysprog/file-io/example-O_RDONLY", "trainings/material/soup/linux/sysprog/file-io/example-O_WRONLY", "trainings/material/soup/linux/sysprog/file-io/exercise-sensor-read", "trainings/material/soup/linux/sysprog/file-io/group", "trainings/material/soup/linux/sysprog/file-io/misc", "trainings/material/soup/linux/sysprog/group", "trainings/material/soup/linux/sysprog/intro-hw/get", "trainings/material/soup/linux/sysprog/intro-hw/group", "trainings/material/soup/linux/sysprog/intro-hw/sysfs-gpio", "trainings/material/soup/linux/sysprog/intro-hw/watch", "trainings/material/soup/linux/sysprog/posix-threads/010-introduction/topic", "trainings/material/soup/linux/sysprog/posix-threads/020-lifecycle/topic", "trainings/material/soup/linux/sysprog/posix-threads/030-exercise-pthcreate-race-condition/topic", "trainings/material/soup/linux/sysprog/posix-threads/040-mutex/topic", "trainings/material/soup/linux/sysprog/posix-threads/050-exercise-mutex/topic", "trainings/material/soup/linux/sysprog/posix-threads/060-condition-variable/topic", "trainings/material/soup/linux/sysprog/posix-threads/070-exercise-condition-variable/topic", "trainings/material/soup/linux/sysprog/posix-threads/080-miscellaneous/topic", "trainings/material/soup/linux/sysprog/posix-threads/090-last-warning/topic", "trainings/material/soup/linux/sysprog/posix-threads/group", "trainings/material/soup/linux/sysprog/posix-threads/locked-trylock", "trainings/material/soup/linux/sysprog/process/commandline", "trainings/material/soup/linux/sysprog/process/group", "trainings/material/soup/linux/sysprog/process/tree", "trainings/material/soup/linux/sysprog/scheduling/basics", "trainings/material/soup/linux/sysprog/scheduling/group", "trainings/material/soup/linux/sysprog/scheduling/processes-and-threads", "trainings/material/soup/linux/sysprog/scheduling/questions", "trainings/material/soup/linux/sysprog/scheduling/realtime", "trainings/material/soup/linux/sysprog/scheduling/realtime-api", "trainings/material/soup/linux/sysprog/scheduling/wakup-latency", "trainings/material/soup/linux/sysprog/sysprog_events/code/index", "trainings/material/soup/linux/sysprog/sysprog_events/screenplay", "trainings/material/soup/linux/sysprog/sysprog_events/topic", "trainings/material/soup/linux/sysprog/sysprog_ipc/code/index", "trainings/material/soup/linux/sysprog/sysprog_ipc/screenplay", "trainings/material/soup/linux/sysprog/sysprog_ipc/slides", "trainings/material/soup/linux/sysprog/sysprog_ipc/topic", "trainings/material/soup/linux/sysprog/sysprog_signals/code/index", "trainings/material/soup/linux/sysprog/sysprog_signals/screenplay", "trainings/material/soup/linux/sysprog/sysprog_signals/slides", "trainings/material/soup/linux/sysprog/sysprog_signals/topic", "trainings/material/soup/linux/toolchain/basics/topic", "trainings/material/soup/linux/toolchain/cmake/cross", "trainings/material/soup/linux/toolchain/cmake/local", "trainings/material/soup/linux/toolchain/cross/basics", "trainings/material/soup/linux/toolchain/cross/group", "trainings/material/soup/linux/toolchain/exercises/cross-build", "trainings/material/soup/linux/toolchain/exercises/fh-2022-questions", "trainings/material/soup/linux/toolchain/exercises/group", "trainings/material/soup/linux/toolchain/exercises/native-build", "trainings/material/soup/linux/toolchain/exercises/raspberry-toolchain", "trainings/material/soup/linux/toolchain/group", "trainings/material/soup/linux/toolchain/raspberry-pi/group", "trainings/material/soup/linux/toolchain/raspberry-pi/linaro", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-details", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-docker-fedora", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-setup", "trainings/material/soup/linux/toolchain/separate-compilation/topic", "trainings/material/soup/linux/toolchain/shared-libraries/topic", "trainings/material/soup/linux/toolchain/static-library/topic", "trainings/material/soup/python/advanced/closures/topic", "trainings/material/soup/python/advanced/comprehensions/topic", "trainings/material/soup/python/advanced/context-mgr/topic", "trainings/material/soup/python/advanced/decorators/topic", "trainings/material/soup/python/advanced/exceptions/topic", "trainings/material/soup/python/advanced/exec/topic", "trainings/material/soup/python/advanced/group", "trainings/material/soup/python/advanced/iteration-generation/iteration-generation/topic", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/fibonacci-generator", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/iterator-protocol", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/topic", "trainings/material/soup/python/advanced/iteration-generation/topic", "trainings/material/soup/python/advanced/modules", "trainings/material/soup/python/advanced/multithreading/basics", "trainings/material/soup/python/advanced/multithreading/group", "trainings/material/soup/python/advanced/multithreading/mutex", "trainings/material/soup/python/advanced/multithreading/questions", "trainings/material/soup/python/advanced/oo/abc/topic", "trainings/material/soup/python/advanced/oo/classes-and-dicts/topic", "trainings/material/soup/python/advanced/oo/constructor/topic", "trainings/material/soup/python/advanced/oo/group", "trainings/material/soup/python/advanced/oo/inheritance/topic", "trainings/material/soup/python/advanced/oo/methods/topic", "trainings/material/soup/python/advanced/oo/namedtuple/topic", "trainings/material/soup/python/advanced/oo/operator-overloading/topic", "trainings/material/soup/python/advanced/oo/properties/topic", "trainings/material/soup/python/advanced/oo/str-repr/topic", "trainings/material/soup/python/advanced/starargs/topic", "trainings/material/soup/python/basics/group", "trainings/material/soup/python/basics/installation", "trainings/material/soup/python/basics/python_0110_blahblah/topic", "trainings/material/soup/python/basics/python_0120_helloworld/topic", "trainings/material/soup/python/basics/python_0125_running/topic", "trainings/material/soup/python/basics/python_0130_syntax_etc/topic", "trainings/material/soup/python/basics/python_0139_commandline_argv/topic", "trainings/material/soup/python/basics/python_0140_variables/topic", "trainings/material/soup/python/basics/python_0150_datatypes_overview/topic", "trainings/material/soup/python/basics/python_0150_datatypes_overview_compound/topic", "trainings/material/soup/python/basics/python_0160_boolean/topic", "trainings/material/soup/python/basics/python_0170_if/topic", "trainings/material/soup/python/basics/python_0193_while/topic", "trainings/material/soup/python/basics/python_0200_sequential_types/topic", "trainings/material/soup/python/basics/python_0210_indexing_slicing/topic", "trainings/material/soup/python/basics/python_0220_for/topic", "trainings/material/soup/python/basics/python_0225_range/topic", "trainings/material/soup/python/basics/python_0250_refs_flat_deep_copy/topic", "trainings/material/soup/python/basics/python_0270_functions/screenplay-scoping", "trainings/material/soup/python/basics/python_0270_functions/slideshow", "trainings/material/soup/python/basics/python_0270_functions/topic", "trainings/material/soup/python/basics/python_0300_strings/topic", "trainings/material/soup/python/basics/python_0310_strings_formatting/topic", "trainings/material/soup/python/basics/python_0320_strings_methods/topic", "trainings/material/soup/python/basics/python_0400_lists/topic", "trainings/material/soup/python/basics/python_0450_dictionaries/topic", "trainings/material/soup/python/basics/python_0460_sets/topic", "trainings/material/soup/python/basics/python_0500_files/topic", "trainings/material/soup/python/basics/python_1000_function_objects/topic", "trainings/material/soup/python/drafts/argparse/topic", "trainings/material/soup/python/drafts/group", "trainings/material/soup/python/drafts/matplotlib/topic", "trainings/material/soup/python/drafts/setuptools/topic", "trainings/material/soup/python/exercises/csv/csv-db", "trainings/material/soup/python/exercises/csv/csv-module", "trainings/material/soup/python/exercises/csv/group", "trainings/material/soup/python/exercises/group", "trainings/material/soup/python/exercises/herdt/boolean", "trainings/material/soup/python/exercises/herdt/exercise_while_even_numbers", "trainings/material/soup/python/exercises/herdt/greet", "trainings/material/soup/python/exercises/herdt/group", "trainings/material/soup/python/exercises/herdt/max_numbers", "trainings/material/soup/python/exercises/herdt/swap", "trainings/material/soup/python/exercises/herdt/username_password", "trainings/material/soup/python/exercises/legacy/cmdline_digit", "trainings/material/soup/python/exercises/legacy/dict_keyerror", "trainings/material/soup/python/exercises/legacy/distill", "trainings/material/soup/python/exercises/legacy/fibonacci-generator", "trainings/material/soup/python/exercises/legacy/for_primeness", "trainings/material/soup/python/exercises/legacy/group", "trainings/material/soup/python/exercises/legacy/join_function", "trainings/material/soup/python/exercises/legacy/max_numbers", "trainings/material/soup/python/exercises/legacy/max_numbers_function", "trainings/material/soup/python/exercises/legacy/mixed_list_executable", "trainings/material/soup/python/exercises/legacy/mixed_list_interactive", "trainings/material/soup/python/exercises/legacy/passwd", "trainings/material/soup/python/exercises/legacy/primeness_function", "trainings/material/soup/python/exercises/legacy/revert", "trainings/material/soup/python/exercises/legacy/string-rightjustify", "trainings/material/soup/python/exercises/legacy/uniq_function", "trainings/material/soup/python/exercises/legacy/uniq_generator", "trainings/material/soup/python/exercises/legacy/wc", "trainings/material/soup/python/exercises/legacy/while_primeness", "trainings/material/soup/python/exercises/sensors/group", "trainings/material/soup/python/exercises/sensors/project-setup", "trainings/material/soup/python/exercises/sensors/sensor-const", "trainings/material/soup/python/exercises/userdb/csvdictreader", "trainings/material/soup/python/exercises/userdb/csvdictreader-function", "trainings/material/soup/python/exercises/userdb/csvreader", "trainings/material/soup/python/exercises/userdb/csvreader-function", "trainings/material/soup/python/exercises/userdb/group", "trainings/material/soup/python/exercises/userdb/mqtt-publish-csv", "trainings/material/soup/python/exercises/userdb/user-class-person", "trainings/material/soup/python/exercises/userdb/user_json", "trainings/material/soup/python/exercises/userdb/userdb_csv", "trainings/material/soup/python/graph", "trainings/material/soup/python/group", "trainings/material/soup/python/link-collection", "trainings/material/soup/python/misc/ai/group", "trainings/material/soup/python/misc/ai/k-means", "trainings/material/soup/python/misc/ai/linear-regression/code", "trainings/material/soup/python/misc/ai/linear-regression/history_data", "trainings/material/soup/python/misc/ai/linear-regression/linear_regression", "trainings/material/soup/python/misc/ai/linear-regression/topic", "trainings/material/soup/python/misc/ai/machine-learning-intro", "trainings/material/soup/python/misc/csv/topic", "trainings/material/soup/python/misc/db/dbapi2", "trainings/material/soup/python/misc/db/group", "trainings/material/soup/python/misc/db/postgres", "trainings/material/soup/python/misc/db/sqlite3", "trainings/material/soup/python/misc/encoding/topic", "trainings/material/soup/python/misc/group", "trainings/material/soup/python/misc/import", "trainings/material/soup/python/misc/mqtt/topic", "trainings/material/soup/python/misc/pandas/add_row", "trainings/material/soup/python/misc/pandas/basics", "trainings/material/soup/python/misc/pandas/filters", "trainings/material/soup/python/misc/pandas/group", "trainings/material/soup/python/misc/pandas/iloc", "trainings/material/soup/python/misc/pandas/indexes", "trainings/material/soup/python/misc/pandas/loc", "trainings/material/soup/python/misc/pandas/mod_col", "trainings/material/soup/python/misc/python_5550_xml_etree/topic", "trainings/material/soup/python/misc/vscode", "trainings/material/soup/python/pcap-exam", "trainings/material/soup/python/swdev/group", "trainings/material/soup/python/swdev/pip/screenplay", "trainings/material/soup/python/swdev/pip/slides", "trainings/material/soup/python/swdev/pip/topic", "trainings/material/soup/python/swdev/pypi", "trainings/material/soup/python/swdev/pytest/group", "trainings/material/soup/python/swdev/pytest/intro", "trainings/material/soup/python/swdev/unittest", "trainings/material/soup/python/swdev/venv/screenplay", "trainings/material/soup/python/swdev/venv/slides", "trainings/material/soup/python/swdev/venv/topic", "trainings/material/soup/unittest/group", "trainings/material/soup/unittest/unittest_gtest_basics/code/index", "trainings/material/soup/unittest/unittest_gtest_basics/screenplay", "trainings/material/soup/unittest/unittest_gtest_basics/topic", "trainings/material/soup/unittest/unittest_gtest_cmake/screenplay", "trainings/material/soup/unittest/unittest_gtest_cmake/topic", "trainings/material/soup/unittest/unittest_gtest_fixture/code/index", "trainings/material/soup/unittest/unittest_gtest_fixture/screenplay", "trainings/material/soup/unittest/unittest_gtest_fixture/topic", "trainings/org", "trainings/repertoire/_hidden/kettner-lfs-2013-09-16", "trainings/repertoire/bash", "trainings/repertoire/c-like/c", "trainings/repertoire/c-like/c-advanced", "trainings/repertoire/c-like/cxx", "trainings/repertoire/c-like/cxx11", "trainings/repertoire/c-like/index", "trainings/repertoire/cmake", "trainings/repertoire/design-patterns/design-patterns", "trainings/repertoire/embedded", "trainings/repertoire/kernel-programming-basics", "trainings/repertoire/linux-basics", "trainings/repertoire/make", "trainings/repertoire/python/advanced", "trainings/repertoire/python/basics", "trainings/repertoire/python/herdt", "trainings/repertoire/raspi-hands-on", "trainings/repertoire/svn", "trainings/repertoire/sysprog/basics", "trainings/repertoire/sysprog/fortgeschrittenes", "trainings/repertoire/sysprog/index", "trainings/repertoire/sysprog/multithreading", "trainings/repertoire/sysprog/network", "trainings/repertoire/unittests"], "filenames": ["about/myself/contact.rst", "about/myself/cv-de.rst", "about/myself/index.rst", "about/myself/projects-de.rst", "about/myself/skills-de.rst", "about/site/courses/angebot-2023-10-12.rst", "about/site/courses/index.rst", "about/site/courses/samples/detail/2021-04-12/Notebook.ipynb", "about/site/courses/samples/detail/2021-04-12/index.rst", "about/site/courses/samples/detail/2021-04-12/notebook-wrapper.rst", "about/site/courses/samples/detail/index.rst", "about/site/courses/samples/index.rst", "about/site/courses/templates.rst", "about/site/index.rst", "about/site/opentraining/index.rst", "about/site/opentraining/misc/draft-topics/index.rst", "about/site/opentraining/misc/index.rst", "about/site/opentraining/misc/s5/index.rst", "about/site/opentraining/misc/s5/tests/index.rst", "about/site/opentraining/misc/s5/tests/test-slides.rst", "about/site/opentraining/misc/screencast.rst", "about/site/opentraining/misc/topics-to-write.rst", "about/site/opentraining/netidee/index.rst", "about/site/opentraining/netidee/netidee-antrag.rst", "about/site/opentraining/netidee/netidee-video-2min.rst", "about/site/opentraining/usecases/agenda-subtract-known.rst", "about/site/opentraining/usecases/duration.rst", "about/site/opentraining/usecases/index.rst", "about/site/opentraining/usecases/linking.rst", "about/site/opentraining/usecases/menu.rst", "about/site/opentraining/usecases/slides.rst", "about/site/recipes/camera-ssh.rst", "about/site/recipes/emoji.rst", "about/site/recipes/index.rst", "about/site/recipes/isoamsa.rst", "about/site/recipes/isoamsr.rst", "about/site/recipes/isonum.rst", "about/site/recipes/layout-test.rst", "about/site/recipes/mathml.rst", "about/site/recipes/rst-cheatsheet.rst", "about/site/recipes/sphinxish.rst", "about/site/work-in-progress/2022-04-13/index.rst", "about/site/work-in-progress/2022-04-13/seminar/block-before-googletest.rst", "about/site/work-in-progress/2022-04-13/seminar/clean-code-craftsmanship.rst", "about/site/work-in-progress/2022-04-13/seminar/enter-googletest.rst", "about/site/work-in-progress/2022-04-13/seminar/index.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/find-error.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-existing-files.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-store-content-on-read.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/csv.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/other-indexes.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-interface.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-monolithic.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/pass-store-in-ctor.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/store-enum-switch.rst", "about/site/work-in-progress/blink/glt.rst", "about/site/work-in-progress/blink/index.rst", "about/site/work-in-progress/blink/installation.rst", "about/site/work-in-progress/blink/pycon-2023.rst", "about/site/work-in-progress/blink/screenplay.rst", "about/site/work-in-progress/blog-queue/hochkoenig/index.rst", "about/site/work-in-progress/blog-queue/index.rst", "about/site/work-in-progress/blog-queue/sphinx.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_build.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_iface.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_oo_basics.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_unittest.rst", "about/site/work-in-progress/fh-joanneum/2019/ec.rst", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-1.rst", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-2.rst", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race.rst", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race_fixed.rst", "about/site/work-in-progress/fh-joanneum/2019/git.rst", "about/site/work-in-progress/fh-joanneum/2019/index.rst", "about/site/work-in-progress/fh-joanneum/2019/linux.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_basics.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_dev_mgmt.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor_parallel.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_led_display.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_sensors.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_gpio.rst", "about/site/work-in-progress/fh-joanneum/2019/mt.rst", "about/site/work-in-progress/fh-joanneum/2019/mt_lock.rst", "about/site/work-in-progress/fh-joanneum/2019/mt_wait.rst", "about/site/work-in-progress/fh-joanneum/2019/py_basics.rst", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_avg_display.rst", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_sensors.rst", "about/site/work-in-progress/fh-joanneum/2019/py_web.rst", "about/site/work-in-progress/fh-joanneum/2019/py_web_sensors.rst", "about/site/work-in-progress/fh-joanneum/2019/python.rst", "about/site/work-in-progress/fh-joanneum/2020/index.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-08.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10-homework.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-21.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-22,24.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-28.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-04-01.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/index.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-code-general.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-yesno.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022/lab-exam-2023-01-17.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30-solved.rst", "about/site/work-in-progress/fh-joanneum/2021/index.rst", "about/site/work-in-progress/fh-joanneum/2021/ss2023.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/group.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/pwm-display.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/switch-interface.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/sysfs-gpio-switch.rst", "about/site/work-in-progress/fh-joanneum/2021/ws2023-2024.rst", "about/site/work-in-progress/fh-joanneum/index.rst", "about/site/work-in-progress/git.rst", "about/site/work-in-progress/index.rst", "about/site/work-in-progress/packaging/index.rst", "about/site/work-in-progress/project-xxx/audio-chip.rst", "about/site/work-in-progress/project-xxx/debian-config.rst", "about/site/work-in-progress/project-xxx/debian-kernel-package.rst", "about/site/work-in-progress/project-xxx/hardware-bringup.rst", "about/site/work-in-progress/project-xxx/index.rst", "about/site/work-in-progress/project-xxx/kernel-upgrade-dirty.rst", "about/site/work-in-progress/project-xxx/wait-hardware.rst", "about/site/work-in-progress/project-xxx/yocto-kernel.rst", "about/site/work-in-progress/python-training.rst", "about/site/work-in-progress/screencast.rst", "about/site/work-in-progress/seo.rst", "about/site/work-in-progress/stacks.rst", "about/site/work-in-progress/todo-misc.rst", "about/site/work-in-progress/web.rst", "blog/2010/07/beagleboard-how-to-repair-nand-also-known-as-40w.rst", "blog/2011/01/porting-to-linux-there-s-always-a-better-way.rst", "blog/2011/01/saving-solid-state-disk-life--gentoo.rst", "blog/2012/04/Why-ps-sucks.rst", "blog/2020/02/fedora-kernel-build.rst", "blog/2020/03/custom-domain-gh-pages.rst", "blog/2020/03/ms-teams-on-linux.rst", "blog/2020/03/sphinx-gh-pages.rst", "blog/2020/04/bbb.rst", "blog/2020/09/traunstein.rst", "blog/2021/08/grintovec.rst", "blog/2021/09/xps13-shim-mok-brick/index.rst", "blog/2022/09/cross-raspi.rst", "blog/index.rst", "index.rst", "trainings/codex.rst", "trainings/exercises.rst", "trainings/index.rst", "trainings/log/detail/2013-10-01/index.rst", "trainings/log/detail/2015-11-30/index.rst", "trainings/log/detail/2019-10-28/LiveHacking.ipynb", "trainings/log/detail/2019-10-28/index.rst", "trainings/log/detail/2019-11-12/code/BigPlan.ipynb", "trainings/log/detail/2019-11-12/code/LiveHacking.ipynb", "trainings/log/detail/2019-11-12/index.rst", "trainings/log/detail/2020-01-10/Proposal.rst", "trainings/log/detail/2020-01-10/index.rst", "trainings/log/detail/2020-03-30/code/exercise-string/index.rst", "trainings/log/detail/2020-03-30/index.rst", "trainings/log/detail/2020-03-30/install-googletest.rst", "trainings/log/detail/2020-03-30/setup.rst", "trainings/log/detail/2020-03-30/vs-code.rst", "trainings/log/detail/2020-05-12/code/index.rst", "trainings/log/detail/2020-05-12/index.rst", "trainings/log/detail/2020-05-18/Livehacking.ipynb", "trainings/log/detail/2020-05-18/code/index.rst", "trainings/log/detail/2020-05-18/index.rst", "trainings/log/detail/2020-09-07/index.rst", "trainings/log/detail/2020-09-28/index.rst", "trainings/log/detail/2020-10-19/Notebook.ipynb", "trainings/log/detail/2020-10-19/index.rst", "trainings/log/detail/2020-11-03/index.rst", "trainings/log/detail/2020-11-23/index.rst", "trainings/log/detail/2020-11-30/index.rst", "trainings/log/detail/2021-01-13/Notebook.ipynb", "trainings/log/detail/2021-01-13/index.rst", "trainings/log/detail/2021-01-13/notebook-wrapper.rst", "trainings/log/detail/2021-02-22/index.rst", "trainings/log/detail/2021-03-08/index.rst", "trainings/log/detail/2021-03-15/Notebook.ipynb", "trainings/log/detail/2021-03-15/index.rst", "trainings/log/detail/2021-03-22/Notebook.ipynb", "trainings/log/detail/2021-03-22/index.rst", "trainings/log/detail/2021-03-29/index.rst", "trainings/log/detail/2021-04-12/Notebook.ipynb", "trainings/log/detail/2021-04-12/index.rst", "trainings/log/detail/2021-04-12/notebook-wrapper.rst", "trainings/log/detail/2021-05-03/Notebook.ipynb", "trainings/log/detail/2021-05-03/index.rst", "trainings/log/detail/2021-05-03/notebook-wrapper.rst", "trainings/log/detail/2021-05-25/Notebook.ipynb", "trainings/log/detail/2021-05-25/index.rst", "trainings/log/detail/2021-06-14/index.rst", "trainings/log/detail/2021-07-12/index.rst", "trainings/log/detail/2021-08-02/index.rst", "trainings/log/detail/2021-08-02/notebook.ipynb", "trainings/log/detail/2021-08-23/Notebook.ipynb", "trainings/log/detail/2021-08-23/exercises/sap-cleaned.rst", "trainings/log/detail/2021-08-23/index.rst", "trainings/log/detail/2021-08-23/notebook-wrapper.rst", "trainings/log/detail/2021-08-31/Notebook.ipynb", "trainings/log/detail/2021-08-31/index.rst", "trainings/log/detail/2021-08-31/notebook-wrapper.rst", "trainings/log/detail/2021-11-17/Notebook.ipynb", "trainings/log/detail/2021-11-17/index.rst", "trainings/log/detail/2021-11-17/notebook-wrapper.rst", "trainings/log/detail/2021-12-01/2021-12-01.ipynb", "trainings/log/detail/2021-12-01/index.rst", "trainings/log/detail/2021-12-01/notebook-wrapper.rst", "trainings/log/detail/2021-12-06/index.rst", "trainings/log/detail/2022-01-17/index.rst", "trainings/log/detail/2022-01-17/notebook.ipynb", "trainings/log/detail/2022-01-17/notebook-wrapper.rst", "trainings/log/detail/2022-02-23/Notebook.ipynb", "trainings/log/detail/2022-02-23/index.rst", "trainings/log/detail/2022-02-23/notebook-wrapper.rst", "trainings/log/detail/2022-03-15/Notebook.ipynb", "trainings/log/detail/2022-03-15/index.rst", "trainings/log/detail/2022-03-15/notebook-wrapper.rst", "trainings/log/detail/2022-03-23/Notebook.ipynb", "trainings/log/detail/2022-03-23/index.rst", "trainings/log/detail/2022-03-23/notebook-wrapper.rst", "trainings/log/detail/2022-04-05/index.rst", "trainings/log/detail/2022-04-05/notebook.ipynb", "trainings/log/detail/2022-04-05/notebook-wrapper.rst", "trainings/log/detail/2022-04-25/index.rst", "trainings/log/detail/2022-04-25/notebook.ipynb", "trainings/log/detail/2022-04-25/notebook-wrapper.rst", "trainings/log/detail/2022-05-02/index.rst", "trainings/log/detail/2022-05-02/notebook.ipynb", "trainings/log/detail/2022-05-02/notebook-wrapper.rst", "trainings/log/detail/2022-05-16/index.rst", "trainings/log/detail/2022-05-16/notebook.ipynb", "trainings/log/detail/2022-05-16/notebook-wrapper.rst", "trainings/log/detail/2022-06-14/2022-05-11.rst", "trainings/log/detail/2022-06-14/index.rst", "trainings/log/detail/2022-07-26/index.rst", "trainings/log/detail/2022-10-03/index.rst", "trainings/log/detail/2022-10-11/index.rst", "trainings/log/detail/2022-10-24/index.rst", "trainings/log/detail/2022-11-07/index.rst", "trainings/log/detail/2022-11-07/notebook.ipynb", "trainings/log/detail/2022-11-07/notebook-wrapper.rst", "trainings/log/detail/2022-11-16/index.rst", "trainings/log/detail/2022-11-16/notebook.ipynb", "trainings/log/detail/2022-11-16/notebook-wrapper.rst", "trainings/log/detail/2023-01-23/index.rst", "trainings/log/detail/2023-02-13/index.rst", "trainings/log/detail/2023-03-13-Python-SAP/Demo/demo-notebook.ipynb", "trainings/log/detail/2023-03-13-Python-SAP/demo.rst", "trainings/log/detail/2023-03-13-Python-SAP/index.rst", "trainings/log/detail/2023-03-13-Python-SAP/notebook.ipynb", "trainings/log/detail/2023-03-13-Python-SAP/notebook-wrapper.rst", "trainings/log/detail/2023-03-13-Python-SAP/original-agenda.rst", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/index.rst", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/sap-dataset.ipynb", "trainings/log/detail/2023-03-20--C++-embedded/index.rst", "trainings/log/detail/2023-03-28--Python-Clean-Code/index.rst", "trainings/log/detail/2023-04-18--C++-embedded/index.rst", "trainings/log/detail/2023-04-24--Python-Advanced/agenda.rst", "trainings/log/detail/2023-04-24--Python-Advanced/index.rst", "trainings/log/detail/2023-04-24--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-04-24--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-05-15--Python-Basics/agenda.rst", "trainings/log/detail/2023-05-15--Python-Basics/index.rst", "trainings/log/detail/2023-05-15--Python-Basics/notebook.ipynb", "trainings/log/detail/2023-05-15--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/2023-05-23--Linux-Basics/agenda.rst", "trainings/log/detail/2023-05-23--Linux-Basics/index.rst", "trainings/log/detail/2023-06-20--Python-Basics/agenda.rst", "trainings/log/detail/2023-06-20--Python-Basics/index.rst", "trainings/log/detail/2023-06-20--Python-Basics/notebook.ipynb", "trainings/log/detail/2023-06-20--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/2023-07-03--CMake/agenda.rst", "trainings/log/detail/2023-07-03--CMake/index.rst", "trainings/log/detail/2023-09-25--Python-Advanced/index.rst", "trainings/log/detail/2023-09-25--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-09-25--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-10-09--Python-Advanced/index.rst", "trainings/log/detail/2023-10-09--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-10-09--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-10-24--Python-Advanced/agenda.rst", "trainings/log/detail/2023-10-24--Python-Advanced/index.rst", "trainings/log/detail/2023-10-24--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-10-24--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-11-22--Python-Advanced/agenda.rst", "trainings/log/detail/2023-11-22--Python-Advanced/index.rst", "trainings/log/detail/2023-11-22--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-11-22--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-XX-XX-C++-Advanced/agenda.rst", "trainings/log/detail/2023-XX-XX-C++-Advanced/index.rst", "trainings/log/detail/2023-XX-XX-C++-embedded/index.rst", "trainings/log/detail/2023-XX-XX-Python-SAP/index.rst", "trainings/log/detail/FH-ECE-19/EC1/2021-05-12/screenplay-checker.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-abc.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-oo.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-unittest.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/fh-group.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/file-read.rst", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-20-G2.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-21.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Checker-Explanations.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Datatypes.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Functions.ipynb", "trainings/log/detail/FH-ECE-19/EC1/cloud-computer.rst", "trainings/log/detail/FH-ECE-19/EC1/formales.rst", "trainings/log/detail/FH-ECE-19/EC1/index.rst", "trainings/log/detail/FH-ECE-19/EC1/log.rst", "trainings/log/detail/FH-ECE-19/EC1/lv-de.rst", "trainings/log/detail/FH-ECE-19/EC1/lv-en.rst", "trainings/log/detail/FH-ECE-19/EC1/plan.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-07.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-12.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-28.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-15.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-29.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-12-14.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-10.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-12.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-02-15.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/index.rst", "trainings/log/detail/FH-ECE-19/EC2/index.rst", "trainings/log/detail/FH-ECE-19/EC2/test-material.rst", "trainings/log/detail/FH-ECE-19/index.rst", "trainings/log/detail/index.rst", "trainings/log/index.rst", "trainings/material/index.rst", "trainings/material/soup/c/010-introduction/000-installation/topic.rst", "trainings/material/soup/c/010-introduction/010-introduction/topic.rst", "trainings/material/soup/c/010-introduction/020-getting-started/topic.rst", "trainings/material/soup/c/010-introduction/030-variables-and-arithmetic-expressions/topic.rst", "trainings/material/soup/c/010-introduction/040-exercise-fahrenheit-float/topic.rst", "trainings/material/soup/c/010-introduction/050-the-for-statement/topic.rst", "trainings/material/soup/c/010-introduction/060-exercise-fahrenheit-for/topic.rst", "trainings/material/soup/c/010-introduction/070-symbolic-constants/topic.rst", "trainings/material/soup/c/010-introduction/080-exercise-fahrenheit-cpp/topic.rst", "trainings/material/soup/c/010-introduction/090-character-input-and-output/topic.rst", "trainings/material/soup/c/010-introduction/100-exercise-wc/topic.rst", "trainings/material/soup/c/010-introduction/110-arrays/topic.rst", "trainings/material/soup/c/010-introduction/120-exercise-histogram/topic.rst", "trainings/material/soup/c/010-introduction/130-functions/topic.rst", "trainings/material/soup/c/010-introduction/140-exercise-power-declaration/topic.rst", "trainings/material/soup/c/010-introduction/150-character-arrays/topic.rst", "trainings/material/soup/c/010-introduction/160-exercise-string-read-line/topic.rst", "trainings/material/soup/c/010-introduction/170-external-variables-and-scope/topic.rst", "trainings/material/soup/c/010-introduction/group.rst", "trainings/material/soup/c/020-types-operators-expressions/010-introduction/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/020-variable-names/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/030-data-types-and-sizes/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/040-constants/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/050-declarations/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/060-arithmetic-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/070-relational-and-logical-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/080-type-conversions/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/090-increment-and-decrement-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/100-exercise-string-reduce/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/110-bitwise-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/120-assignment-operators-and-expressions/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/130-conditional-expressions/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/140-precedence-and-order-of-evaluation/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/group.rst", "trainings/material/soup/c/030-program-flow/010-statements-and-blocks/topic.rst", "trainings/material/soup/c/030-program-flow/020-if-else/topic.rst", "trainings/material/soup/c/030-program-flow/030-else-if/topic.rst", "trainings/material/soup/c/030-program-flow/040-switch/topic.rst", "trainings/material/soup/c/030-program-flow/050-loops-while-and-for/topic.rst", "trainings/material/soup/c/030-program-flow/060-loops-do-while/topic.rst", "trainings/material/soup/c/030-program-flow/070-break-and-continue/topic.rst", "trainings/material/soup/c/030-program-flow/080-goto-and-labels/topic.rst", "trainings/material/soup/c/030-program-flow/group.rst", "trainings/material/soup/c/040-functions-and-program-structure/010-basics-of-functions/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/020-external-variables/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/030-header-files/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/040-static-variables/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/050-c-preprocessor/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/060-c-preprocessor-advanced/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/group.rst", "trainings/material/soup/c/050-pointers-and-arrays/010-pointers-and-addresses/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/020-pointers-and-function-arguments/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/030-exercise-swap/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/040-pointers-and-arrays/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/050-command-line-arguments/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/group.rst", "trainings/material/soup/c/060-structures/010-basics-of-structures/topic.rst", "trainings/material/soup/c/060-structures/020-structures-and-functions/topic.rst", "trainings/material/soup/c/060-structures/030-typedef/topic.rst", "trainings/material/soup/c/060-structures/group.rst", "trainings/material/soup/c/070-memory/010-malloc/topic.rst", "trainings/material/soup/c/070-memory/020-exercise-linked-list/topic.rst", "trainings/material/soup/c/070-memory/group.rst", "trainings/material/soup/c/080-advanced-language-features/010-volatile/topic.rst", "trainings/material/soup/c/080-advanced-language-features/020-atomic/topic.rst", "trainings/material/soup/c/080-advanced-language-features/030-alignment/topic.rst", "trainings/material/soup/c/080-advanced-language-features/group.rst", "trainings/material/soup/c/090-program-sanity/010-introduction/topic.rst", "trainings/material/soup/c/090-program-sanity/020-integral-types/topic.rst", "trainings/material/soup/c/090-program-sanity/030-discrete-values/topic.rst", "trainings/material/soup/c/090-program-sanity/040-static/topic.rst", "trainings/material/soup/c/090-program-sanity/050-const/topic.rst", "trainings/material/soup/c/090-program-sanity/060-struct-initialization/topic.rst", "trainings/material/soup/c/090-program-sanity/070-explicit-type-safety/topic.rst", "trainings/material/soup/c/090-program-sanity/080-valgrind/topic.rst", "trainings/material/soup/c/090-program-sanity/group.rst", "trainings/material/soup/c/100-performance/010-introduction/topic.rst", "trainings/material/soup/c/100-performance/020-computebound/topic.rst", "trainings/material/soup/c/100-performance/030-memory/topic.rst", "trainings/material/soup/c/100-performance/group.rst", "trainings/material/soup/c/110-profiling/010-introduction/topic.rst", "trainings/material/soup/c/110-profiling/020-gprof/topic.rst", "trainings/material/soup/c/110-profiling/030-callgrind/topic.rst", "trainings/material/soup/c/110-profiling/040-oprofile/topic.rst", "trainings/material/soup/c/110-profiling/group.rst", "trainings/material/soup/c/group.rst", "trainings/material/soup/clean-code/book-messages.rst", "trainings/material/soup/clean-code/craft-sw.rst", "trainings/material/soup/clean-code/group.rst", "trainings/material/soup/clean-code/intro-python/livehacking.rst", "trainings/material/soup/cmake/basics.rst", "trainings/material/soup/cmake/configure_file.rst", "trainings/material/soup/cmake/cxx-and-rants.rst", "trainings/material/soup/cmake/external-dependencies.rst", "trainings/material/soup/cmake/group.rst", "trainings/material/soup/cmake/installation.rst", "trainings/material/soup/cmake/libraries.rst", "trainings/material/soup/cmake/optional-code-approach-1.rst", "trainings/material/soup/cmake/optional-code-approach-2.rst", "trainings/material/soup/cmake/optional-code-problem.rst", "trainings/material/soup/cmake/shared-libraries.rst", "trainings/material/soup/cmake/structure.rst", "trainings/material/soup/cmake/targets-properties.rst", "trainings/material/soup/cmake/testing.rst", "trainings/material/soup/cxx-code/index.rst", "trainings/material/soup/cxx-design-patterns/abstract-factory/abstract-factory.rst", "trainings/material/soup/cxx-design-patterns/adapter/adapter.rst", "trainings/material/soup/cxx-design-patterns/command/command.rst", "trainings/material/soup/cxx-design-patterns/command/socialdb.rst", "trainings/material/soup/cxx-design-patterns/composite/composite.rst", "trainings/material/soup/cxx-design-patterns/decorator/decorator.rst", "trainings/material/soup/cxx-design-patterns/group.rst", "trainings/material/soup/cxx-design-patterns/heating-screenplay/heating-screenplay.rst", "trainings/material/soup/cxx-design-patterns/interpreter/interpreter.rst", "trainings/material/soup/cxx-design-patterns/observer/observer.rst", "trainings/material/soup/cxx-design-patterns/oo-principles.rst", "trainings/material/soup/cxx-design-patterns/proxy/proxy.rst", "trainings/material/soup/cxx-design-patterns/sensor-hierarchy.rst", "trainings/material/soup/cxx-design-patterns/singleton/singleton.rst", "trainings/material/soup/cxx-design-patterns/uml/uml.rst", "trainings/material/soup/cxx-exercises/design-patterns/abstract-factory.rst", "trainings/material/soup/cxx-exercises/design-patterns/adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/command.rst", "trainings/material/soup/cxx-exercises/design-patterns/composite.rst", "trainings/material/soup/cxx-exercises/design-patterns/decorator.rst", "trainings/material/soup/cxx-exercises/design-patterns/group.rst", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-and-adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-basic.rst", "trainings/material/soup/cxx-exercises/design-patterns/observer.rst", "trainings/material/soup/cxx-exercises/design-patterns/proxy-remote.rst", "trainings/material/soup/cxx-exercises/design-patterns/proxy-round.rst", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible.rst", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible-strict.rst", "trainings/material/soup/cxx-exercises/design-patterns/singleton-inflexible.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/abstract-factory.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/command.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/composite.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/decorator.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/group.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-and-adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-basic.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/observer.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-remote.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-round.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible-strict.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-inflexible.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-loop-function.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-no-polymorphism.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-random-sensor.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/group.rst", "trainings/material/soup/cxx-exercises/group.rst", "trainings/material/soup/cxx-exercises/nopoly-display-led-stripe/display-led-stripe-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-hysteresis/hysteresis-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensor-avg/sensor-avg-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-const-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-mock-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-random-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-switch-mock/switch-mock-nopoly.rst", "trainings/material/soup/cxx-exercises/oo-shapes/shapes.rst", "trainings/material/soup/cxx-exercises/project-setup.rst", "trainings/material/soup/cxx-exercises/sensor-interface/sensor-interface.rst", "trainings/material/soup/cxx-exercises/sensor-w1-factory/sensor-w1-factory.rst", "trainings/material/soup/cxx-exercises/sensor-w1/sensor-w1.rst", "trainings/material/soup/cxx-exercises/stl/algo.rst", "trainings/material/soup/cxx-exercises/stl/filter-generic.rst", "trainings/material/soup/cxx-exercises/stl/filter-greater-10.rst", "trainings/material/soup/cxx-exercises/stl/filter-odd.rst", "trainings/material/soup/cxx-exercises/stl/group.rst", "trainings/material/soup/cxx-exercises/stl/map.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/group.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-no-overwrite.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-sunny.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-not-found.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-sunny.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/no-memleak.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-not-found.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-sunny.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/size-const.rst", "trainings/material/soup/cxx-exercises/stl/uniq.rst", "trainings/material/soup/cxx-exercises/stl/vector.rst", "trainings/material/soup/cxx-todo/index.rst", "trainings/material/soup/cxx/cxx_class_templates/code/index.rst", "trainings/material/soup/cxx/cxx_class_templates/screenplay.rst", "trainings/material/soup/cxx/cxx_class_templates/topic.rst", "trainings/material/soup/cxx/cxx_dynamic_memory/code/index.rst", "trainings/material/soup/cxx/cxx_dynamic_memory/screenplay.rst", "trainings/material/soup/cxx/cxx_dynamic_memory/topic.rst", "trainings/material/soup/cxx/cxx_global_initialization/code/index.rst", "trainings/material/soup/cxx/cxx_global_initialization/screenplay.rst", "trainings/material/soup/cxx/cxx_global_initialization/topic.rst", "trainings/material/soup/cxx/cxx_inheritance_virtual/code/index.rst", "trainings/material/soup/cxx/cxx_inheritance_virtual/screenplay.rst", "trainings/material/soup/cxx/cxx_inheritance_virtual/topic.rst", "trainings/material/soup/cxx/cxx_ownership_raii/code/index.rst", "trainings/material/soup/cxx/cxx_ownership_raii/screenplay.rst", "trainings/material/soup/cxx/cxx_ownership_raii/topic.rst", "trainings/material/soup/cxx/cxx_stl_container_intro/code/index.rst", "trainings/material/soup/cxx/cxx_stl_container_intro/screenplay.rst", "trainings/material/soup/cxx/cxx_stl_container_intro/topic.rst", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/code/index.rst", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/screenplay.rst", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/topic.rst", "trainings/material/soup/cxx/group.rst", "trainings/material/soup/cxx03/001-introduction/topic.rst", "trainings/material/soup/cxx03/020-data-encapsulation/c.rst", "trainings/material/soup/cxx03/020-data-encapsulation/copy-basics.rst", "trainings/material/soup/cxx03/020-data-encapsulation/cpp-introduction.rst", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-custom.rst", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-default.rst", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-dtor.rst", "trainings/material/soup/cxx03/020-data-encapsulation/group.rst", "trainings/material/soup/cxx03/020-data-encapsulation/initializer-list.rst", "trainings/material/soup/cxx03/020-data-encapsulation/object-copy.rst", "trainings/material/soup/cxx03/030-functions-and-methods/010-overloading/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/020-methods/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/030-const/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/040-this/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/050-references/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/060-static/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/065-static-member-variables/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/070-operators/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-cuboid.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point3d.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-rectangle.rst", "trainings/material/soup/cxx03/030-functions-and-methods/group.rst", "trainings/material/soup/cxx03/040-exceptions/010-basics/topic.rst", "trainings/material/soup/cxx03/040-exceptions/020-try-catch/topic.rst", "trainings/material/soup/cxx03/040-exceptions/group.rst", "trainings/material/soup/cxx03/050-templates/010-function-templates/topic.rst", "trainings/material/soup/cxx03/050-templates/020-class-templates/topic.rst", "trainings/material/soup/cxx03/050-templates/group.rst", "trainings/material/soup/cxx03/060-stl/010-basics/algo-copy.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-algo.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-basics.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-difference.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-out-of-range.rst", "trainings/material/soup/cxx03/060-stl/010-basics/topic.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/topic.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-and-copy.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-basic.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-pointer-arith.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/binary_search.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/copy.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/find.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/find_if.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/for_each.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/group.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/lower_bound.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse_copy.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/sort.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/basics.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/group.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/list.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/vector.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/basics.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/group.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-init-fill.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-insert.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-remove.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-search.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/multimap.rst", "trainings/material/soup/cxx03/060-stl/allocators/allocator_basics.rst", "trainings/material/soup/cxx03/060-stl/allocators/group.rst", "trainings/material/soup/cxx03/060-stl/exercises/group.rst", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/exercise.rst", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/group.rst", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/solution.rst", "trainings/material/soup/cxx03/060-stl/group.rst", "trainings/material/soup/cxx03/070-dynamic-memory/000-todo/topic.rst", "trainings/material/soup/cxx03/070-dynamic-memory/group.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/basics.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/destructor.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/group.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/interface.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/polymorphism.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/private-protected.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-destructor.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-method.rst", "trainings/material/soup/cxx03/900-standard-library-miscellanea/group.rst", "trainings/material/soup/cxx03/900-standard-library-miscellanea/string/topic.rst", "trainings/material/soup/cxx03/exercises-misc/american-flag/exercise.rst", "trainings/material/soup/cxx03/exercises-misc/fh-questions.rst", "trainings/material/soup/cxx03/exercises-misc/group.rst", "trainings/material/soup/cxx03/exercises-misc/sum-integers-from-stdin/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/group.rst", "trainings/material/soup/cxx03/exercises-userdb/user-access-methods/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-const-members/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-const/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-default-ctor/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-simple-method/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-to-cxx-ctor/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-insert/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-find_if/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-notfound-exception/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-search/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-vector/exercise.rst", "trainings/material/soup/cxx03/group.rst", "trainings/material/soup/cxx11/010-introduction/group.rst", "trainings/material/soup/cxx11/010-introduction/history.rst", "trainings/material/soup/cxx11/010-introduction/overview-livehacking.rst", "trainings/material/soup/cxx11/020-new-language-features/010-strongly-typed-enums/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/group.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/implementor-view.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/mess.rst", "trainings/material/soup/cxx11/020-new-language-features/050-delegating-ctor/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/055-constexpr/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/afterword.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/group.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-smartptr-move.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-string-move.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-using-string-move.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/overview.rst", "trainings/material/soup/cxx11/020-new-language-features/070-miscellaneous/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/auto.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/group.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-1-conceptless.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-2-conceptless-error.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-3-concept-integral.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/links.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-1-good-old-func.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-2-need-template.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-4-concept-has-size.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-5-concept-index-ret-double.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/group.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibo-generator.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibonacci.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-h.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-hello.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/simplest.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-iter.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-next.rst", "trainings/material/soup/cxx11/020-new-language-features/default.rst", "trainings/material/soup/cxx11/020-new-language-features/delete.rst", "trainings/material/soup/cxx11/020-new-language-features/final.rst", "trainings/material/soup/cxx11/020-new-language-features/group.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/group.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-capture.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor-pitfall.rst", "trainings/material/soup/cxx11/020-new-language-features/modules.rst", "trainings/material/soup/cxx11/020-new-language-features/override.rst", "trainings/material/soup/cxx11/020-new-language-features/range-based-for.rst", "trainings/material/soup/cxx11/020-new-language-features/range-based-for-map.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/good-bad.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/group.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/links.rst", "trainings/material/soup/cxx11/020-new-language-features/structured-binding.rst", "trainings/material/soup/cxx11/030-smart-pointers/040-closing-words/topic.rst", "trainings/material/soup/cxx11/030-smart-pointers/group.rst", "trainings/material/soup/cxx11/030-smart-pointers/introduction.rst", "trainings/material/soup/cxx11/030-smart-pointers/introduction-livehack.rst", "trainings/material/soup/cxx11/030-smart-pointers/sharedptr.rst", "trainings/material/soup/cxx11/030-smart-pointers/uniqueptr.rst", "trainings/material/soup/cxx11/030-smart-pointers/weakptr.rst", "trainings/material/soup/cxx11/035-perfect-forwarding/topic.rst", "trainings/material/soup/cxx11/040-bind-function/010-bind/topic.rst", "trainings/material/soup/cxx11/040-bind-function/020-function/topic.rst", "trainings/material/soup/cxx11/040-bind-function/group.rst", "trainings/material/soup/cxx11/050-multithreading/010-introduction/topic.rst", "trainings/material/soup/cxx11/050-multithreading/020-thread/topic.rst", "trainings/material/soup/cxx11/050-multithreading/030-race-conditions/topic.rst", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/atomics.rst", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/mutex.rst", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/scoped-locking.rst", "trainings/material/soup/cxx11/050-multithreading/condition-variable.rst", "trainings/material/soup/cxx11/050-multithreading/group.rst", "trainings/material/soup/cxx11/050-multithreading/promise-future.rst", "trainings/material/soup/cxx11/100-miscellaneous/010-chrono/topic.rst", "trainings/material/soup/cxx11/100-miscellaneous/any-variant-optional/variant.rst", "trainings/material/soup/cxx11/100-miscellaneous/group.rst", "trainings/material/soup/cxx11/exercises/bag-copy.rst", "trainings/material/soup/cxx11/exercises/bag-shared.rst", "trainings/material/soup/cxx11/exercises/bag-unique.rst", "trainings/material/soup/cxx11/exercises/group.rst", "trainings/material/soup/cxx11/filesystem/topic.rst", "trainings/material/soup/cxx11/group.rst", "trainings/material/soup/graph.rst", "trainings/material/soup/index.rst", "trainings/material/soup/kernel/cdev-auto/screenplay.rst", "trainings/material/soup/kernel/cdev-auto/slides.rst", "trainings/material/soup/kernel/cdev-auto/topic.rst", "trainings/material/soup/kernel/cdev-file-operations/screenplay.rst", "trainings/material/soup/kernel/cdev-file-operations/slides.rst", "trainings/material/soup/kernel/cdev-file-operations/topic.rst", "trainings/material/soup/kernel/cdev-first-functionality/slides.rst", "trainings/material/soup/kernel/cdev-first-functionality/topic.rst", "trainings/material/soup/kernel/cdev-manual/screenplay.rst", "trainings/material/soup/kernel/cdev-manual/slides.rst", "trainings/material/soup/kernel/cdev-manual/topic.rst", "trainings/material/soup/kernel/cdev-multiple-devices/slides.rst", "trainings/material/soup/kernel/cdev-multiple-devices/topic.rst", "trainings/material/soup/kernel/cdev-refactoring/screenplay.rst", "trainings/material/soup/kernel/cdev-refactoring/slides.rst", "trainings/material/soup/kernel/cdev-refactoring/topic.rst", "trainings/material/soup/kernel/dma/slides.rst", "trainings/material/soup/kernel/dma/topic.rst", "trainings/material/soup/kernel/fedora-kernel-build/screenplay.rst", "trainings/material/soup/kernel/fedora-kernel-build/topic.rst", "trainings/material/soup/kernel/fedora-module-build/screenplay.rst", "trainings/material/soup/kernel/fedora-module-build/topic.rst", "trainings/material/soup/kernel/group.rst", "trainings/material/soup/kernel/hello-world/slides.rst", "trainings/material/soup/kernel/hello-world/topic.rst", "trainings/material/soup/kernel/interrupt-coding/slides.rst", "trainings/material/soup/kernel/interrupt-coding/topic.rst", "trainings/material/soup/kernel/interrupt/slides.rst", "trainings/material/soup/kernel/interrupt/topic.rst", "trainings/material/soup/kernel/iomemory/slides.rst", "trainings/material/soup/kernel/iomemory/topic.rst", "trainings/material/soup/kernel/kmalloc/slides.rst", "trainings/material/soup/kernel/kmalloc/topic.rst", "trainings/material/soup/kernel/list/slides.rst", "trainings/material/soup/kernel/list/topic.rst", "trainings/material/soup/kernel/mutex-coding/slides.rst", "trainings/material/soup/kernel/mutex-coding/topic.rst", "trainings/material/soup/kernel/mutex/slides.rst", "trainings/material/soup/kernel/mutex/topic.rst", "trainings/material/soup/kernel/netdev/slides.rst", "trainings/material/soup/kernel/netdev/topic.rst", "trainings/material/soup/kernel/pci/slides.rst", "trainings/material/soup/kernel/pci/topic.rst", "trainings/material/soup/kernel/process-vs-atomic/slides.rst", "trainings/material/soup/kernel/process-vs-atomic/topic.rst", "trainings/material/soup/kernel/raspi-kernel-build/story.rst", "trainings/material/soup/kernel/raspi-kernel-build/topic.rst", "trainings/material/soup/kernel/sample-project.rst", "trainings/material/soup/kernel/spinlock-coding/slides.rst", "trainings/material/soup/kernel/spinlock-coding/topic.rst", "trainings/material/soup/kernel/spinlock/slides.rst", "trainings/material/soup/kernel/spinlock/topic.rst", "trainings/material/soup/kernel/stub-sysprog-dup/topic.rst", "trainings/material/soup/kernel/time_timer-coding/slides.rst", "trainings/material/soup/kernel/time_timer-coding/topic.rst", "trainings/material/soup/kernel/time_timer/slides.rst", "trainings/material/soup/kernel/time_timer/topic.rst", "trainings/material/soup/kernel/todo.rst", "trainings/material/soup/kernel/usermem/screenplay.rst", "trainings/material/soup/kernel/usermem/slides.rst", "trainings/material/soup/kernel/usermem/topic.rst", "trainings/material/soup/kernel/waitqueue/screenplay.rst", "trainings/material/soup/kernel/waitqueue/slides.rst", "trainings/material/soup/kernel/waitqueue/topic.rst", "trainings/material/soup/kernel/workqueue/screenplay.rst", "trainings/material/soup/kernel/workqueue/slides.rst", "trainings/material/soup/kernel/workqueue/topic.rst", "trainings/material/soup/linux/basics/archiving-compression/exercises.rst", "trainings/material/soup/linux/basics/archiving-compression/group.rst", "trainings/material/soup/linux/basics/archiving-compression/gzip.rst", "trainings/material/soup/linux/basics/archiving-compression/overview.rst", "trainings/material/soup/linux/basics/archiving-compression/tar.rst", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G1.rst", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G2.rst", "trainings/material/soup/linux/basics/exercises/group.rst", "trainings/material/soup/linux/basics/group.rst", "trainings/material/soup/linux/basics/intro/demo-everything-is-a-file.rst", "trainings/material/soup/linux/basics/intro/environment.rst", "trainings/material/soup/linux/basics/intro/exercises/fh-questions.rst", "trainings/material/soup/linux/basics/intro/group.rst", "trainings/material/soup/linux/basics/intro/login.rst", "trainings/material/soup/linux/basics/intro/overview.rst", "trainings/material/soup/linux/basics/intro/process.rst", "trainings/material/soup/linux/basics/intro/process-tree.rst", "trainings/material/soup/linux/basics/intro/wsl.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/exercises.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/group.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection-swap-stdout-stderr.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/pipes.rst", "trainings/material/soup/linux/basics/permissions/basics.rst", "trainings/material/soup/linux/basics/permissions/exercises/credentials.rst", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions.rst", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions-nocheat.rst", "trainings/material/soup/linux/basics/permissions/exercises/group.rst", "trainings/material/soup/linux/basics/permissions/exercises/private-directory.rst", "trainings/material/soup/linux/basics/permissions/exercises/private-directory-question.rst", "trainings/material/soup/linux/basics/permissions/exercises/public-directory.rst", "trainings/material/soup/linux/basics/permissions/exercises/public-directory-question.rst", "trainings/material/soup/linux/basics/permissions/exercises/shared-file.rst", "trainings/material/soup/linux/basics/permissions/group.rst", "trainings/material/soup/linux/basics/permissions/setuid.rst", "trainings/material/soup/linux/basics/permissions/setuid-livedemo.rst", "trainings/material/soup/linux/basics/permissions/sticky.rst", "trainings/material/soup/linux/basics/permissions/umask.rst", "trainings/material/soup/linux/basics/shell/commandline.rst", "trainings/material/soup/linux/basics/shell/configfiles.rst", "trainings/material/soup/linux/basics/shell/cp.rst", "trainings/material/soup/linux/basics/shell/cwd.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/copy-tree.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-copy-files.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-create-files.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-move-files.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/group.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/mkdir-p-rm-r.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-rf.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-tree.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/verify-hierarchy.rst", "trainings/material/soup/linux/basics/shell/exercises/fh-questions.rst", "trainings/material/soup/linux/basics/shell/exercises/group.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/dev-types.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/etc-passwd-size.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/group.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/home-permissions.rst", "trainings/material/soup/linux/basics/shell/file_dir_create_rm.rst", "trainings/material/soup/linux/basics/shell/group.rst", "trainings/material/soup/linux/basics/shell/links.rst", "trainings/material/soup/linux/basics/shell/ls.rst", "trainings/material/soup/linux/basics/shell/mv.rst", "trainings/material/soup/linux/basics/shell/paths.rst", "trainings/material/soup/linux/basics/text-tools/cat.rst", "trainings/material/soup/linux/basics/text-tools/cut.rst", "trainings/material/soup/linux/basics/text-tools/exercises.rst", "trainings/material/soup/linux/basics/text-tools/find.rst", "trainings/material/soup/linux/basics/text-tools/grep.rst", "trainings/material/soup/linux/basics/text-tools/group.rst", "trainings/material/soup/linux/basics/text-tools/head-tail.rst", "trainings/material/soup/linux/basics/text-tools/less.rst", "trainings/material/soup/linux/basics/text-tools/overview.rst", "trainings/material/soup/linux/drafts/group.rst", "trainings/material/soup/linux/drafts/yocto.rst", "trainings/material/soup/linux/group.rst", "trainings/material/soup/linux/hardware/brushless-motor/topic.rst", "trainings/material/soup/linux/hardware/can/10-intro.rst", "trainings/material/soup/linux/hardware/can/20-interfaces.rst", "trainings/material/soup/linux/hardware/can/30-programming.rst", "trainings/material/soup/linux/hardware/can/40-harware.rst", "trainings/material/soup/linux/hardware/can/group.rst", "trainings/material/soup/linux/hardware/group.rst", "trainings/material/soup/linux/hardware/i2c/topic.rst", "trainings/material/soup/linux/hardware/pwm/topic.rst", "trainings/material/soup/linux/hardware/w1/topic.rst", "trainings/material/soup/linux/ssh/basics.rst", "trainings/material/soup/linux/ssh/exercises/copy-file.rst", "trainings/material/soup/linux/ssh/exercises/copy-tree.rst", "trainings/material/soup/linux/ssh/exercises/group.rst", "trainings/material/soup/linux/ssh/exercises/pubkey.rst", "trainings/material/soup/linux/ssh/group.rst", "trainings/material/soup/linux/ssh/key-pair.rst", "trainings/material/soup/linux/ssh/links.rst", "trainings/material/soup/linux/ssh/portforwarding.rst", "trainings/material/soup/linux/ssh/scp.rst", "trainings/material/soup/linux/ssh/sshfs.rst", "trainings/material/soup/linux/sysprog/basics/errorhandling.rst", "trainings/material/soup/linux/sysprog/basics/group.rst", "trainings/material/soup/linux/sysprog/basics/syscalls.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-file.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-network.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-timer.rst", "trainings/material/soup/linux/sysprog/blocking-io/group.rst", "trainings/material/soup/linux/sysprog/file-io/basics.rst", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-copy.rst", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-hole.rst", "trainings/material/soup/linux/sysprog/file-io/duplicate.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_CREAT.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_EXCL.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_RDONLY.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_WRONLY.rst", "trainings/material/soup/linux/sysprog/file-io/exercise-sensor-read.rst", "trainings/material/soup/linux/sysprog/file-io/group.rst", "trainings/material/soup/linux/sysprog/file-io/misc.rst", "trainings/material/soup/linux/sysprog/group.rst", "trainings/material/soup/linux/sysprog/intro-hw/get.rst", "trainings/material/soup/linux/sysprog/intro-hw/group.rst", "trainings/material/soup/linux/sysprog/intro-hw/sysfs-gpio.rst", "trainings/material/soup/linux/sysprog/intro-hw/watch.rst", "trainings/material/soup/linux/sysprog/posix-threads/010-introduction/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/020-lifecycle/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/030-exercise-pthcreate-race-condition/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/040-mutex/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/050-exercise-mutex/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/060-condition-variable/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/070-exercise-condition-variable/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/080-miscellaneous/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/090-last-warning/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/group.rst", "trainings/material/soup/linux/sysprog/posix-threads/locked-trylock.rst", "trainings/material/soup/linux/sysprog/process/commandline.rst", "trainings/material/soup/linux/sysprog/process/group.rst", "trainings/material/soup/linux/sysprog/process/tree.rst", "trainings/material/soup/linux/sysprog/scheduling/basics.rst", "trainings/material/soup/linux/sysprog/scheduling/group.rst", "trainings/material/soup/linux/sysprog/scheduling/processes-and-threads.rst", "trainings/material/soup/linux/sysprog/scheduling/questions.rst", "trainings/material/soup/linux/sysprog/scheduling/realtime.rst", "trainings/material/soup/linux/sysprog/scheduling/realtime-api.rst", "trainings/material/soup/linux/sysprog/scheduling/wakup-latency.rst", "trainings/material/soup/linux/sysprog/sysprog_events/code/index.rst", "trainings/material/soup/linux/sysprog/sysprog_events/screenplay.rst", "trainings/material/soup/linux/sysprog/sysprog_events/topic.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/code/index.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/screenplay.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/slides.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/topic.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/code/index.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/screenplay.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/slides.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/topic.rst", "trainings/material/soup/linux/toolchain/basics/topic.rst", "trainings/material/soup/linux/toolchain/cmake/cross.rst", "trainings/material/soup/linux/toolchain/cmake/local.rst", "trainings/material/soup/linux/toolchain/cross/basics.rst", "trainings/material/soup/linux/toolchain/cross/group.rst", "trainings/material/soup/linux/toolchain/exercises/cross-build.rst", "trainings/material/soup/linux/toolchain/exercises/fh-2022-questions.rst", "trainings/material/soup/linux/toolchain/exercises/group.rst", "trainings/material/soup/linux/toolchain/exercises/native-build.rst", "trainings/material/soup/linux/toolchain/exercises/raspberry-toolchain.rst", "trainings/material/soup/linux/toolchain/group.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/group.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/linaro.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-details.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-docker-fedora.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-setup.rst", "trainings/material/soup/linux/toolchain/separate-compilation/topic.rst", "trainings/material/soup/linux/toolchain/shared-libraries/topic.rst", "trainings/material/soup/linux/toolchain/static-library/topic.rst", "trainings/material/soup/python/advanced/closures/topic.rst", "trainings/material/soup/python/advanced/comprehensions/topic.rst", "trainings/material/soup/python/advanced/context-mgr/topic.rst", "trainings/material/soup/python/advanced/decorators/topic.rst", "trainings/material/soup/python/advanced/exceptions/topic.rst", "trainings/material/soup/python/advanced/exec/topic.rst", "trainings/material/soup/python/advanced/group.rst", "trainings/material/soup/python/advanced/iteration-generation/iteration-generation/topic.rst", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/fibonacci-generator.rst", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/iterator-protocol.rst", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/topic.rst", "trainings/material/soup/python/advanced/iteration-generation/topic.rst", "trainings/material/soup/python/advanced/modules.rst", "trainings/material/soup/python/advanced/multithreading/basics.rst", "trainings/material/soup/python/advanced/multithreading/group.rst", "trainings/material/soup/python/advanced/multithreading/mutex.rst", "trainings/material/soup/python/advanced/multithreading/questions.rst", "trainings/material/soup/python/advanced/oo/abc/topic.rst", "trainings/material/soup/python/advanced/oo/classes-and-dicts/topic.rst", "trainings/material/soup/python/advanced/oo/constructor/topic.rst", "trainings/material/soup/python/advanced/oo/group.rst", "trainings/material/soup/python/advanced/oo/inheritance/topic.rst", "trainings/material/soup/python/advanced/oo/methods/topic.rst", "trainings/material/soup/python/advanced/oo/namedtuple/topic.rst", "trainings/material/soup/python/advanced/oo/operator-overloading/topic.rst", "trainings/material/soup/python/advanced/oo/properties/topic.rst", "trainings/material/soup/python/advanced/oo/str-repr/topic.rst", "trainings/material/soup/python/advanced/starargs/topic.rst", "trainings/material/soup/python/basics/group.rst", "trainings/material/soup/python/basics/installation.rst", "trainings/material/soup/python/basics/python_0110_blahblah/topic.rst", "trainings/material/soup/python/basics/python_0120_helloworld/topic.rst", "trainings/material/soup/python/basics/python_0125_running/topic.rst", "trainings/material/soup/python/basics/python_0130_syntax_etc/topic.rst", "trainings/material/soup/python/basics/python_0139_commandline_argv/topic.rst", "trainings/material/soup/python/basics/python_0140_variables/topic.rst", "trainings/material/soup/python/basics/python_0150_datatypes_overview/topic.rst", "trainings/material/soup/python/basics/python_0150_datatypes_overview_compound/topic.rst", "trainings/material/soup/python/basics/python_0160_boolean/topic.rst", "trainings/material/soup/python/basics/python_0170_if/topic.rst", "trainings/material/soup/python/basics/python_0193_while/topic.rst", "trainings/material/soup/python/basics/python_0200_sequential_types/topic.rst", "trainings/material/soup/python/basics/python_0210_indexing_slicing/topic.rst", "trainings/material/soup/python/basics/python_0220_for/topic.rst", "trainings/material/soup/python/basics/python_0225_range/topic.rst", "trainings/material/soup/python/basics/python_0250_refs_flat_deep_copy/topic.rst", "trainings/material/soup/python/basics/python_0270_functions/screenplay-scoping.rst", "trainings/material/soup/python/basics/python_0270_functions/slideshow.rst", "trainings/material/soup/python/basics/python_0270_functions/topic.rst", "trainings/material/soup/python/basics/python_0300_strings/topic.rst", "trainings/material/soup/python/basics/python_0310_strings_formatting/topic.rst", "trainings/material/soup/python/basics/python_0320_strings_methods/topic.rst", "trainings/material/soup/python/basics/python_0400_lists/topic.rst", "trainings/material/soup/python/basics/python_0450_dictionaries/topic.rst", "trainings/material/soup/python/basics/python_0460_sets/topic.rst", "trainings/material/soup/python/basics/python_0500_files/topic.rst", "trainings/material/soup/python/basics/python_1000_function_objects/topic.rst", "trainings/material/soup/python/drafts/argparse/topic.rst", "trainings/material/soup/python/drafts/group.rst", "trainings/material/soup/python/drafts/matplotlib/topic.rst", "trainings/material/soup/python/drafts/setuptools/topic.rst", "trainings/material/soup/python/exercises/csv/csv-db.rst", "trainings/material/soup/python/exercises/csv/csv-module.rst", "trainings/material/soup/python/exercises/csv/group.rst", "trainings/material/soup/python/exercises/group.rst", "trainings/material/soup/python/exercises/herdt/boolean.rst", "trainings/material/soup/python/exercises/herdt/exercise_while_even_numbers.rst", "trainings/material/soup/python/exercises/herdt/greet.rst", "trainings/material/soup/python/exercises/herdt/group.rst", "trainings/material/soup/python/exercises/herdt/max_numbers.rst", "trainings/material/soup/python/exercises/herdt/swap.rst", "trainings/material/soup/python/exercises/herdt/username_password.rst", "trainings/material/soup/python/exercises/legacy/cmdline_digit.rst", "trainings/material/soup/python/exercises/legacy/dict_keyerror.rst", "trainings/material/soup/python/exercises/legacy/distill.rst", "trainings/material/soup/python/exercises/legacy/fibonacci-generator.rst", "trainings/material/soup/python/exercises/legacy/for_primeness.rst", "trainings/material/soup/python/exercises/legacy/group.rst", "trainings/material/soup/python/exercises/legacy/join_function.rst", "trainings/material/soup/python/exercises/legacy/max_numbers.rst", "trainings/material/soup/python/exercises/legacy/max_numbers_function.rst", "trainings/material/soup/python/exercises/legacy/mixed_list_executable.rst", "trainings/material/soup/python/exercises/legacy/mixed_list_interactive.rst", "trainings/material/soup/python/exercises/legacy/passwd.rst", "trainings/material/soup/python/exercises/legacy/primeness_function.rst", "trainings/material/soup/python/exercises/legacy/revert.rst", "trainings/material/soup/python/exercises/legacy/string-rightjustify.rst", "trainings/material/soup/python/exercises/legacy/uniq_function.rst", "trainings/material/soup/python/exercises/legacy/uniq_generator.rst", "trainings/material/soup/python/exercises/legacy/wc.rst", "trainings/material/soup/python/exercises/legacy/while_primeness.rst", "trainings/material/soup/python/exercises/sensors/group.rst", "trainings/material/soup/python/exercises/sensors/project-setup.rst", "trainings/material/soup/python/exercises/sensors/sensor-const.rst", "trainings/material/soup/python/exercises/userdb/csvdictreader.rst", "trainings/material/soup/python/exercises/userdb/csvdictreader-function.rst", "trainings/material/soup/python/exercises/userdb/csvreader.rst", "trainings/material/soup/python/exercises/userdb/csvreader-function.rst", "trainings/material/soup/python/exercises/userdb/group.rst", "trainings/material/soup/python/exercises/userdb/mqtt-publish-csv.rst", "trainings/material/soup/python/exercises/userdb/user-class-person.rst", "trainings/material/soup/python/exercises/userdb/user_json.rst", "trainings/material/soup/python/exercises/userdb/userdb_csv.rst", "trainings/material/soup/python/graph.rst", "trainings/material/soup/python/group.rst", "trainings/material/soup/python/link-collection.rst", "trainings/material/soup/python/misc/ai/group.rst", "trainings/material/soup/python/misc/ai/k-means.rst", "trainings/material/soup/python/misc/ai/linear-regression/code.rst", "trainings/material/soup/python/misc/ai/linear-regression/history_data.rst", "trainings/material/soup/python/misc/ai/linear-regression/linear_regression.ipynb", "trainings/material/soup/python/misc/ai/linear-regression/topic.rst", "trainings/material/soup/python/misc/ai/machine-learning-intro.rst", "trainings/material/soup/python/misc/csv/topic.rst", "trainings/material/soup/python/misc/db/dbapi2.rst", "trainings/material/soup/python/misc/db/group.rst", "trainings/material/soup/python/misc/db/postgres.rst", "trainings/material/soup/python/misc/db/sqlite3.rst", "trainings/material/soup/python/misc/encoding/topic.rst", "trainings/material/soup/python/misc/group.rst", "trainings/material/soup/python/misc/import.rst", "trainings/material/soup/python/misc/mqtt/topic.rst", "trainings/material/soup/python/misc/pandas/add_row.rst", "trainings/material/soup/python/misc/pandas/basics.rst", "trainings/material/soup/python/misc/pandas/filters.rst", "trainings/material/soup/python/misc/pandas/group.rst", "trainings/material/soup/python/misc/pandas/iloc.rst", "trainings/material/soup/python/misc/pandas/indexes.rst", "trainings/material/soup/python/misc/pandas/loc.rst", "trainings/material/soup/python/misc/pandas/mod_col.rst", "trainings/material/soup/python/misc/python_5550_xml_etree/topic.rst", "trainings/material/soup/python/misc/vscode.rst", "trainings/material/soup/python/pcap-exam.rst", "trainings/material/soup/python/swdev/group.rst", "trainings/material/soup/python/swdev/pip/screenplay.rst", "trainings/material/soup/python/swdev/pip/slides.rst", "trainings/material/soup/python/swdev/pip/topic.rst", "trainings/material/soup/python/swdev/pypi.rst", "trainings/material/soup/python/swdev/pytest/group.rst", "trainings/material/soup/python/swdev/pytest/intro.rst", "trainings/material/soup/python/swdev/unittest.rst", "trainings/material/soup/python/swdev/venv/screenplay.rst", "trainings/material/soup/python/swdev/venv/slides.rst", "trainings/material/soup/python/swdev/venv/topic.rst", "trainings/material/soup/unittest/group.rst", "trainings/material/soup/unittest/unittest_gtest_basics/code/index.rst", "trainings/material/soup/unittest/unittest_gtest_basics/screenplay.rst", "trainings/material/soup/unittest/unittest_gtest_basics/topic.rst", "trainings/material/soup/unittest/unittest_gtest_cmake/screenplay.rst", "trainings/material/soup/unittest/unittest_gtest_cmake/topic.rst", "trainings/material/soup/unittest/unittest_gtest_fixture/code/index.rst", "trainings/material/soup/unittest/unittest_gtest_fixture/screenplay.rst", "trainings/material/soup/unittest/unittest_gtest_fixture/topic.rst", "trainings/org.rst", "trainings/repertoire/_hidden/kettner-lfs-2013-09-16.rst", "trainings/repertoire/bash.rst", "trainings/repertoire/c-like/c.rst", "trainings/repertoire/c-like/c-advanced.rst", "trainings/repertoire/c-like/cxx.rst", "trainings/repertoire/c-like/cxx11.rst", "trainings/repertoire/c-like/index.rst", "trainings/repertoire/cmake.rst", "trainings/repertoire/design-patterns/design-patterns.rst", "trainings/repertoire/embedded.rst", "trainings/repertoire/kernel-programming-basics.rst", "trainings/repertoire/linux-basics.rst", "trainings/repertoire/make.rst", "trainings/repertoire/python/advanced.rst", "trainings/repertoire/python/basics.rst", "trainings/repertoire/python/herdt.rst", "trainings/repertoire/raspi-hands-on.rst", "trainings/repertoire/svn.rst", "trainings/repertoire/sysprog/basics.rst", "trainings/repertoire/sysprog/fortgeschrittenes.rst", "trainings/repertoire/sysprog/index.rst", "trainings/repertoire/sysprog/multithreading.rst", "trainings/repertoire/sysprog/network.rst", "trainings/repertoire/unittests.rst"], "titles": ["Kontakt", "Curriculum Vitae", "\u00dcber Mich", "Projekte", "Skills", "Angebot: In-House Schulungen", "Course Material", "Einleitung", "Python Basics (2021-xx-xx - 2021-yy-yy)", "Programmierung Grundlagen (Jupyter Notebook)", "Details", "Course List", "Templates for Course Descriptions", "About This Site", "OpenTraining", "Draft Topics", "Miscellaneous", "S5 Integration", "S5 Slide Tests", "Level 1 Heading", "Screencasts", "Topics to be Written", "Netidee F\u00f6rderantrag", "Netidee F\u00f6rderantrag: OpenTraining", "Video Screenplay", "Use Case: Custom Training, Subtract Known", "Use Case: Calculate Minimum Training Duration", "Use Cases", "Use Case: Use Training Material From Other Sites", "Use Case: Menu to Choose From", "Use Case: Slide Show Material as Plain-Text Files", "Sending A V4L Camera Device Output Over SSH", "Emoji Codes (<code class=\"docutils literal notranslate\"><span class=\"pre\">sphinxemoji</span></code>)", "Recipes", "<code class=\"docutils literal notranslate\"><span class=\"pre\">isoamsa.txt</span></code>: Added Mathematical Symbols: Arrows", "<code class=\"docutils literal notranslate\"><span class=\"pre\">isoamsr.txt</span></code>: Added Mathematical Symbols: Relations", "<code class=\"docutils literal notranslate\"><span class=\"pre\">isonum.txt</span></code>: Added Mathematical Symbols: Binary Operators", "Layout Test Page", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mmlalias.txt</span></code>: MathML aliases for entities from other sets", "reStructuredText Cheat Sheet", "Sphinxish", "Seminar on \u201cClean Code\u201d (2022-04-13)", "Live Hacking Before (Formal) Unit Testing", "Clean Code: Messages From The Book", "Live Hacking: Switch To <code class=\"docutils literal notranslate\"><span class=\"pre\">googletest</span></code>", "Is Software A Craft? Software Is A Craft!", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB::find()</span></code> Crashes If User Not Found", "Bugs", "Existing Files Are Overwritten", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB::read()</span></code>: What If Done Twice?", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB</span></code>: Alternative Output Format - CSV", "Features", "Search By Other Indexes", "Backlog: What Needs To Change, Or We Will All Die", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BackingStore</span></code> Has Too Many Responsibilities \u27f6 Interface", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB</span></code> Has Too Many Responsibilities \u27f6 <code class=\"docutils literal notranslate\"><span class=\"pre\">BackingStore</span></code>", "Refactoring", "Load From BackingStore in Constructor", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB::{read,write}()</span></code>: <code class=\"docutils literal notranslate\"><span class=\"pre\">bool</span></code>, Really?", "Submission: Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "Installation Notes", "Submission: Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "Screenplay: Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "Hochk\u00f6nig", "Blog", "Sphinx", "C++", "C++: Building with CMake", "C++: Interfaces", "C++: OO Basics", "C++: Unit Testing", "Graph", "Embedded Computing 1", "Embedded Computing 2", "EX: Race Conditions", "EX: Avoiding Race Condition", "Git Introduction", "Embedded Computing 2019", "Linux", "Introduction to Linux and Unix", "Linux Hardware Device Management", "EX: Averaging Sensor", "EX: Averaging Sensor (parallel)", "EX: LED Temperature Display", "EX: Temperature Sensors", "GPIO", "Multithreading", "Avoiding Race Conditions: Semaphore/Mutex", "Communication: Waiting for Something", "Python Basics", "EX: Averaging Sensor, Display", "EX: Temperature Sensors", "Simple Web Programming", "Sensors Web Pages", "Python", "Embedded Computing 2020", "SS2022", "2022-03-08", "2022-03-10", "2022-03-10 (Homework until 2022-03-21)", "2022-03-21", "2022-03-22, 2022-03-24 (KU)", "2022-03-28", "2022-04-01", "SS2022: Logs", "WS2022", "FH Joanneum (Embedded Computing): WS2022/2023 (Questions About Code)", "FH Joanneum (Embedded Computing): WS2022/2023 (Yes/No Questions)", "Lab Exam 2023-01-17", "SS2023: Exam 2023-06-30 (Handout)", "SS2023: Exam 2023-06-30 (Solved)", "Embedded Computing 2021", "SS2023", "An IoT Boiling Pot (The Beginning)", "Data Logger", "WS2023/24: Project", "Temperature Display: LED Via A PWM Controller", "Switch Interface", "SysFS GPIO Switch", "WS2023/24", "Embedded Computing (FH Joanneum Graz)", "Git Notes", "Work in Progress", "Packaging this Site on PyPI", "Audio Chip Bringup", "Get Debian 10 Kernel Config", "Finish: Debian Kernel Package etc.", "Yocto Kernel Bringup on Customer Hardware", "I2S Audio for a Kontron SMARC Module", "Dirty Upgrade Path", "Wait for Customer Hardware", "Extract Kernel from Intel Yocto BSP", "Python Training Improvements", "Creating Screencasts", "SEO", "Stacks (Hanging)", "Miscellaneous To Do", "Learning The Web", "Beagleboard: How to Repair NAND (also known as 40W)", "Porting to Linux (There\u2019s Always A Better Way)", "Saving Solid State Disk Life (Gentoo)", "\u201cWhy <code class=\"docutils literal notranslate\"><span class=\"pre\">ps</span></code> Sucks\u201d or \u201cCounting Memory Consumption\u201d", "Patching and Building the Fedora Kernel", "Adding a Custom Domain to a Github Pages Project Site", "Using Microsoft Teams on Linux", "Deploying Sphinx Generated Documentation to Github Pages", "Using BigBlueButton for Online Training", "Traunstein via Zierlersteig", "Grintovec (via Plan\u0161arsko Jezero, \u010ce\u0161ka Ko\u010da)", "How to Brick a \u20ac1399 Dell XPS 13", "Building A Cross Toolchain For The Raspberry Pi, Using <code class=\"docutils literal notranslate\"><span class=\"pre\">crosstool-ng</span></code>", "Posts", "Linux und Open Source", "Richtlinien zur Ver\u00f6ffentlichung von Kursmaterial", "Exercises", "Courses: Overview", "Qualivision, Z\u00fcrich, 1.10.2013", "Kursnotizen: Linux Embedded 2015-11-30", "Live Hacking", "Python Individualtraining (5 Tage, beginnend 28.10.2019)", "Goals of this Training", "Random Live Hacking", "Python (12.11.2019 - 14.11.2019 in Graz)", "Proposal", "IPC in Linux (10.1.2020 in Graz)", "\u00dcbung: handgestrickter String, um die Fallen von C++ lustvoll zu erleiden", "C++ f\u00fcr Embedded C Programmierer (30.3.2020 - 3.4.2020 Baden W\u00fcrttemberg)", "Installing <code class=\"docutils literal notranslate\"><span class=\"pre\">googletest</span></code> By Hand", "Software Setup, Build", "Argh: Using This Site With Visual Studio Code", "Code", "Python Grundlagen (13.5.2020 - 14.5.2020 bei einer Firma in Graz)", "Python Schulung 18. und 19.5.2020", "Code", "Python Individualtraining (18.5.2020 - 19.5.2020)", "Python Advanced (7.9.2020 - 10.9.2020)", "Python Basics (28.9.2020 - 30.9.2020)", "Iterables", "Python Basic and Advanced (19.10.2020 - 22.10.2020)", "Linux on Raspberry Pi", "Python Basics (23.11.2020 - 25.11.2020)", "Linux Basics (30.11.2020 - 3.12.2020)", "6 Grundlegende Sprachelemente", "Programmierung Grundlagen (13. und 14.1.2021)", "Programmierung Grundlagen (Jupyter Notebook)", "Python Basics (22.2.2021 - 24.2.2021)", "Linux Kernel Driver Development Basics (14.12.2020)", "Python Advanced", "2021-03-15", "Hallo Jupyter Notebook", "Python Basic and Advanced (22.3.2021 - 25.3.2021)", "Linux Basics, Shell Scripting (2021-03-29)", "Einleitung", "Programmierung Grundlagen (12. und 13.4.2021)", "Programmierung Grundlagen (Jupyter Notebook)", "Syntax etc.", "Python Grundlagen (2021-05-03 - 2021-05-05)", "Python Grundlagen (Jupyter Notebook)", "Das <code class=\"docutils literal notranslate\"><span class=\"pre\">with</span></code> Statement", "Python Advanced (2021-05-25 - 2021-05-27)", "Programmieren mit C (2021-06-14 - 2021-06-18)", "The C++ Programming Language (2021-07-12 - 2021-07-16)", "Programmierung Grundlagen, anhand von Python (2. und 3.8.2021)", "Datenstrukturen", "Compound Datatypes", "Read a Cleaned-Up SAP Export", "Python Grundlagen (2021-08-23 - 2021-08-25)", "Jupyter Notebook", "Initial Terminology", "Python Basics (2021-08-31 - 2021-09-01)", "Python Grundlagen (Jupyter Notebook)", "2021-11-17", "Python Basics (2021-11-17 - 2021-11-19)", "Python Grundlagen (Jupyter Notebook)", "Notebook", "Python Advanced (2021-12-01 - 2021-12-03)", "Python Grundlagen (Jupyter Notebook)", "C/C++ Programming (2021-12-06 - 2021-12-10, 2022-01-24 - 2022-02-04)", "Programmierung Grundlagen, anhand von Python (2022-01-17 - 2022-01-10)", "2022-01-17", "Programmierung Grundlagen (Jupyter Notebook)", "Datatypes", "Python Basics (2022-02-23 - 2022-02-25)", "Jupyter Notebook", "Wiederholung", "Python Advanced (2022-03-15 - 2022-03-17, 2022-03-31)", "Jupyter Notebook", "Hello World", "Python (2022-03-23, 2022-03-30, 2022-04-19 - 2022-03-21)", "Jupyter Notebook", "Programmierung Grundlagen, anhand von Python (2022-04-05 - 2022-04-08)", "BlahBlah", "Programmierung Grundlagen (Jupyter Notebook)", "Python Basics (2022-04-25 - 2022-04-27)", "BlahBlah", "Python Grundlagen (Jupyter Notebook)", "Python (2022-05-02 - 2022-05-05)", "Hello Jupyter Notebook", "Python Grundlagen (Jupyter Notebook)", "Python Advanced (2022-05-16 - 2022-05-18)", "Assert", "Python Grundlagen (Jupyter Notebook)", "Vorbesprechung 2022-05-11", "C++: A New Language Starting In 2011", "C++: A New Language Starting In 2011", "Linux Basics (2022-10-03 - 2022-10-05)", "C++: A New Language Starting In 2011 (2022-10-11 - 2022-10-13)", "Design- and Architectural Patterns With C++ (2022-10-24 - 2022-10-26)", "Python: Tour-De-Force (2022-11-07 - 2022-11-10, 2022-12-01)", "Python (2022-10-17)", "Python Grundlagen (Jupyter Notebook)", "Python (2022-11-16 - 2022-11-18)", "Python (2022-11-16 - 2022-11-18)", "Python Grundlagen (Jupyter Notebook)", "Linux Basics (2023-01-23 - 2023-01-26)", "Embedded Linux Systems Programming (2023-02-13 - 2023-02-17)", "Whetting Your Appetite (Jupyter Notebook)", "Whetting Your Appetite (Livehacking Demo)", "Python For SAP Developers (2023-03-13 - 2023-03-15)", "2023-03-13", "Python For SAP Developers (Jupyter Notebook)", "Original Agenda: Python For SAP Developers (2023-03-13 - 2023-03-15)", "Hacking About On A SAP Test Dataset", "Some Usecases On A Test Dataset From SAP", "C++ For Embedded Developers (2023-03-20 - 2023-03-23)", "Clean Code Development With Python (2023-03-28 - 2023-03-29)", "C++ For Embedded Developers (2023-04-18 - 2023-04-20)", "Agenda: Python Advanced (2023-04-24 - 2023-04-26)", "Python Advanced (2023-04-24 - 2023-04-26)", "Jupyter Notebook: Python Advanced (2023-04-24 - 2023-04-26)", "Jupyter Notebook (Structure): Python Advanced (2023-04-24 - 2023-04-26)", "Agenda: Python Basics (2023-05-15 - 2023-05-17)", "Python Basics (2023-05-15 - 2023-05-17)", "Python Basics (2023-05-15 - 2023-05-17)", "Python Grundlagen (Jupyter Notebook)", "Agenda: Linux Basics (2023-05-23 - 2023-05-25)", "Linux Basics (2023-05-23 - 2023-05-25)", "Agenda: Python Basics (2023-06-20 - 2023-06-22)", "Python Basics (2023-06-20 - 2023-06-22)", "Python Basics (2023-06-20 - 2023-06-22)", "Python Basics (Jupyter Notebook)", "Agenda: CMake (2023-07-03)", "CMake: An Introduction (2023-07-18)", "Python Advanced (2023-09-25 - 2023-09-27)", "Python Advanced (2023-09-25 - 2023-09-27)", "Python Advanced, Jupyter Notebook (2023-09-25 - 2023-09-27)", "Python Advanced (2023-10-09 - 2023-10-11)", "Python Advanced (2023-10-09 - 2023-10-09)", "Python Advanced, Jupyter Notebook (2023-09-25 - 2023-09-27)", "Agenda: Python Advanced (2023-10-24 - 2023-10-26)", "Python Advanced (2023-10-24 - 2023-10-26)", "Jupyter Notebook: Python Advanced", "Jupyter Notebook (Structure): Python Advanced (2023-10-24 - 2023-10-26)", "Agenda: Python Advanced (2023-11-22 - 2023-11-24)", "Python Advanced (2023-11-22 - 2023-22-24)", "Jupyter Notebook: Python Advanced (2023-11-22 - 2023-11-24)", "Jupyter Notebook (Structure): Python Advanced (2023-11-22 - 2023-11-24)", "Agenda: C++: Advanced Topics", "C++: Advanced Topics", "C++ For Embedded Developers (Beginning of 2023)", "Python/SAP", "Screenplay Checker", "GPIO: Blinklicht", "GPIO: Blinklicht Interface", "GPIO: Object Oriented Blinklicht", "GPIO: Blinklicht Unittests", "ECE19: Exercises and Custom Topics", "Reading a File", "2021-05-20 (G2)", "2021-05-21", "Tuple Unpacking", "Basics", "An Example", "Cloud Computer, SSH Login", "Formalit\u00e4ten", "Embedded Computing 1 (ECE 19)", "Daily Log", "Embedded Computing 1 (Deutsch)", "Embedded Computing 1 (English)", "Plan for Summer 2021", "2021-10-07", "2021-10-12 (Bringing Newcomers Up-to-Date)", "2021-10-28", "2021-11-15", "2021-11-29", "2021-12-1{4,5}", "2022-01-10", "2022-01-12", "2022-02-15", "Agenda/Log", "Embedded Computing 2 (ECE 19)", "Exam Material Overview", "Embedded Computing 1+2, ECE 19", "Details", "Bisher Gehaltene", "Training Material: Overview and Download", "Installation", "Introduction", "Hello World", "Variables and Arithmetic", "Exercise: A Better Fahrenheit Table", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> Loops", "Exercise: Fahrenheit Table Using <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code>", "Symbolic Constants", "Exercise: Fahrenheit Table Using Macros", "Character I/O", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">wc</span></code> For The Poor", "Arrays", "Exercise: Character Histogram", "Functions", "Exercise: Forward Declaration", "Character Arrays", "Exercise: Read Line Into String from <code class=\"docutils literal notranslate\"><span class=\"pre\">stdin</span></code>", "Lifetime of Variables", "Introduction", "Type System", "Variable Names", "Data Types, Sizes", "Constants", "Variable Definitions", "Arithmetic Operators", "Relational and Logical Operators", "Type Conversions", "Increment, Decrement", "Exercise: Copy and Reduce String", "Bit-Operators", "Assignment with Calculation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">?:</span></code> - Conditional Expression", "Precedence, Associativity", "Types, Operators, Expressions", "Statements and Blocks", "<code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code> - <code class=\"docutils literal notranslate\"><span class=\"pre\">else</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">else</span></code> - <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">switch</span></code>", "Loops: <code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code>", "Loops: <code class=\"docutils literal notranslate\"><span class=\"pre\">do</span> <span class=\"pre\">-</span> <span class=\"pre\">while</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">break</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">continue</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">goto</span></code> and Labels", "Program Flow", "Basics", "Extern/Global Variables", "Header Files", "Static Variables", "C Preprocessor: Basics", "C Preprocessor: More", "Functions and Program Structure", "Pointers and Addresses", "Pointers as Function Parameters", "Exercise: Function That Swaps Two Variables", "Pointers and Arrays", "Commandline Arguments", "Pointers and Arrays", "<code class=\"docutils literal notranslate\"><span class=\"pre\">struct</span></code>: Basics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">struct</span></code>: Functions", "<code class=\"docutils literal notranslate\"><span class=\"pre\">typedef</span></code>: Type Alias", "Structures", "Dynamic Memory", "Singly Linked List", "Memory", "Volatile", "Compiler Intrinsics", "Alignment", "Advanced Language Features", "Sanity and Readabilty", "Know Your Integers", "Discrete Values - <code class=\"docutils literal notranslate\"><span class=\"pre\">enum</span></code>", "Visibility - <code class=\"docutils literal notranslate\"><span class=\"pre\">static</span></code>", "Correctness - <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "Struct Initialization", "Explict Type Safety", "<code class=\"docutils literal notranslate\"><span class=\"pre\">valgrind</span></code>", "Program Sanity", "Optimization", "Optimizations: Compute Bound Code", "Optimizations: Memory Optimizations", "Performance", "Introduction", "GNU Profiler - <code class=\"docutils literal notranslate\"><span class=\"pre\">gprof</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">callgrind</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">oprofile</span></code>", "Profiling", "The C Programming Language", "Messages From The Book", "What\u2019s There? What Have We Accomplished?", "Is Software A Craft? Software Is A Craft! \u27f6 <em>Clean Code</em>", "A Typical Project (Livehacking Screenplay: My Own Bookkeeping Effort)", "Basics: Boilerplate, And Executables", "\u201cConfigured\u201d Header Files", "C++, Debug/Release, CMake \u201cProgramming\u201d, Rants", "External Dependencies", "CMake: An Introduction", "Installation (\u201cDeployment\u201d)", "Libraries, And <em>Dependencies</em>", "Optional Code, Approach 1: Optional <code class=\"docutils literal notranslate\"><span class=\"pre\">blacklist</span></code>, C Macro  (Global Flags)", "Optional Code, Approach 2: Pushing Optionality Down In Module <em>Interface</em>", "Optional Code: Problem Definition, <code class=\"docutils literal notranslate\"><span class=\"pre\">OPTION()</span></code>", "Shared Libraries (Preview)", "Structure - Subdirectories, Dependencies, and Include Paths", "Targets, Properties, And More", "Running Tests", "C++ Code", "Abstract Factory", "Adapter", "Command", "SocialDB Source Code", "Composite", "Decorator", "Design Patterns With C++", "Case Study/Livehacking: Heating Control (Reading Sensors)", "Interpreter", "Observer", "OO Design Principles", "Proxy", "Exercise Foundation: <code class=\"docutils literal notranslate\"><span class=\"pre\">Sensor</span></code> Hierarchy", "Singleton", "UML Short Introduction", "Exercise: Abstract Factory", "Exercise: Adapter", "Exercise: Command", "Exercise: Composite", "Exercise: Decorator", "Exercises: Design Patterns", "Exercise: Interpreter Combined With Adapter (And A Proxy)", "Exercise: Arithmetic Expression Interpreter", "Exercise: Adapter", "Exercise: Proxy (Remote Thermometer)", "Exercise: Proxy (Rounding Thermometer)", "Exercise: Singleton (Flexible)", "Exercise: Singleton (Flexible <em>And</em> Strict)", "Exercise: Singleton (Inflexible)", "Solution: Abstract Factory", "Solution: Adapter", "Solution: Command", "Solution: Composite", "Solution: Decorator", "Solutions", "Solution: Interpreter Combined With Adapter (And A Proxy)", "Solution: Arithmetic Expression Interpreter", "Solution: Observer", "Solution: Proxy (Remote Thermometer)", "Solution: Proxy (Rounding Thermometer)", "Solution: Singleton (Flexible)", "Solution: Singleton (Flexible <em>And</em> Strict)", "Solution: Singleton (Inflexible)", "Exercise (FH): Introducing a Sensor Class", "Exercise (FH): Extract Measurement Loop Into Function", "Exercise (FH): Replace Sensor", "Exercise (FH): Write A Sensor Class: <code class=\"docutils literal notranslate\"><span class=\"pre\">RandomSensor</span></code>", "FH Sensor OO (First Try)", "C++ Exercises", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">LEDStripeDisplay_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">Hysteresis_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">AveragingSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">ConstantSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">MockSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">RandomSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: Mocking Switch (Non-Polymorphic)", "OO Basics, Interfaces (Shapes)", "Working On Exercise Projects", "Exercise: Sensor Interface", "Exercise: OneWire Sensor Factory", "Exercise: OneWire Sensor Class", "Exercise: Algorithms", "Exercise: Generic Filter", "Exercise: Filter Elements Greater Than 10", "Exercise: Filter Odd Elements", "C++ Exercises: Standard Template Library", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::map&lt;&gt;</span></code>", "Exercises: Sensor Repository (<code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code>)", "Insert - Not Overwriting Existing Elements", "Insert - Sunny Case", "Lookup - Not Found", "Lookup - Sunny Case", "Memory Leaks?", "Remove - Not Found", "Remove - Sunny Case", "<code class=\"docutils literal notranslate\"><span class=\"pre\">.size()</span></code> Is <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "Exercise: Uniquify A Sequence", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector&lt;&gt;</span></code>", "C++: TODO List", "Code: C++: Class Templates", "Screenplay: C++: Class Templates", "C++: Class Templates", "Code: C++: Dynamic Memory", "Screenplay: C++: Dynamic Memory", "C++: Dynamic Memory", "Code: C++: Global Objects Initialization", "Screenplay: C++: Global Objects Initialization", "C++: Global Objects Initialization", "Code: C++: Inheritance, Interfaces, <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>", "Screenplay: C++: Inheritance, Interfaces, <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>", "C++: Inheritance, Interfaces, <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>", "Code: C++: Ownership/RAII", "Screenplay: C++: Ownership/RAII", "C++: Ownership/RAII", "Code: C++: STL Containers (Intro)", "Screenplay: C++: STL Containers (Intro)", "C++: STL Containers (Intro)", "Code: C++: Templates vs. Interfaces", "Screenplay: C++: Templates vs. Interfaces", "C++: Templates vs. Interfaces", "C++: Miscellaneous Live-Hacking", "Introduction", "Object Oriented Programming In Good Ol\u2019 C", "Copy Constructor, Assignment Operator", "Classes and Objects", "Custom Constructor", "Default Constructor", "More Constructors, Destructors", "Data Encapsulation", "Constructors: Member Initialization", "Object Copy (And Resource Management): There Be Dragons", "Overloading", "Methods", "<code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">this</span></code>", "References", "<code class=\"docutils literal notranslate\"><span class=\"pre\">static</span></code> Methods", "<code class=\"docutils literal notranslate\"><span class=\"pre\">static</span></code> Member Variables", "Operator Overloading", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">cuboid</span></code>", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">point</span></code>", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">point3d</span></code>", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">rectangle</span></code>", "Functions and Methods", "Basics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">try</span></code> - <code class=\"docutils literal notranslate\"><span class=\"pre\">catch</span></code>", "Exceptions", "Function Templates", "Class Templates", "C++ Template Basics", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::copy&lt;&gt;()</span></code> From <code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;algorithm&gt;</span></code>", "Screenplay: Pointer Arithmetic, And Algorithms", "Screenplay: Pointer Arithmetic Basics", "Screenplay: Pointer Difference", "Screenplay: Out Of Range Errors", "Standard Template Library: Basics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code> (And <code class=\"docutils literal notranslate\"><span class=\"pre\">std::copy()</span></code>)", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">std::copy()</span></code>", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code> Basics", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code>, And Pointer Arithmetics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">binary_search&lt;&gt;</span></code>: On Sorted Sequence", "<code class=\"docutils literal notranslate\"><span class=\"pre\">copy&lt;&gt;</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find&lt;&gt;</span></code>: Sequential Search, by Equality", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find_if&lt;&gt;</span></code>: Sequential Search, Customizable", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for_each&lt;&gt;</span></code>", "Algorithms", "<code class=\"docutils literal notranslate\"><span class=\"pre\">lower_bound&lt;&gt;</span></code>: On Sorted Sequence", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reverse&lt;&gt;</span></code>: Reversing In-Place", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reverse_copy&lt;&gt;</span></code>: Copying <em>and</em> Reversing", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sort&lt;&gt;</span></code>", "Sequential Containers", "Sequential Containers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">list&lt;&gt;</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">vector&lt;&gt;</span></code>", "Associative Containers", "Associative Containers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code>", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code> Initialization And Inserting", "Screenplay: Inserting Elements", "Screenplay: Removing (Erasing) Elements", "Screenplay: Searching", "<code class=\"docutils literal notranslate\"><span class=\"pre\">multimap&lt;&gt;</span></code>", "Allocator Basics", "Allocators", "STL: Exercises", "Exercise: Reverse a String", "Exercise: Reverse A String", "Solution: Reverse a String", "Standard Template Library", "Dynamic Memory (To Be Done)", "Dynamic Memory Allocation, Resource Management", "Inheritance Basics", "Destructors And Inheritance", "Inheritance And Object Oriented Design", "Interfaces", "<em>Polymorphic</em> Usage Of Objects", "Inheritance: <code class=\"docutils literal notranslate\"><span class=\"pre\">private</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">protected</span></code> (Implementation Inheritance)", "Virtual Destructors", "Virtual Methods", "The Standard Library: Miscellaneous Topics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::string</span></code>", "Exercise: Paint the American Flag Onto Standard Output", "FH/Moodle Quiz: C++", "Exercises: Miscellaneous", "Exercise: Sum of Integers Coming From <code class=\"docutils literal notranslate\"><span class=\"pre\">cin</span></code>", "Exercises: User Database", "Exercise: Access Methods for Members", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code> Members", "Exercise: Use <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "Exercise: Default Constructor (was: Arrays of Objects)", "Exercise: Simple Method (Users Age By <code class=\"docutils literal notranslate\"><span class=\"pre\">n</span></code> Years)", "Exercise: Transform <code class=\"docutils literal notranslate\"><span class=\"pre\">struct</span> <span class=\"pre\">User</span></code> Into A Class", "Exercise: Insert a User into UserDB", "Exercise: Search a User By Lastname (<code class=\"docutils literal notranslate\"><span class=\"pre\">std::find_if</span></code>)", "Exercise: Search, \u201cUser Not Found\u201d Exception", "Exercise: Search a User By Lastname", "Exercise: Use std::vector in UserDB", "C++ 03", "Introduction", "History, Background", "A Live-Hacked Tour Around The New C++", "Strongly Typed <code class=\"docutils literal notranslate\"><span class=\"pre\">enum</span></code>", "Brace Initialization (Uniform Initialization)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::initializer_list</span></code>: Brace Initialization, Implementor\u2019s View", "Brace Initialization: Introduction", "Brace Initialization: A Mess", "Delegating Constructor", "<code class=\"docutils literal notranslate\"><span class=\"pre\">constexpr</span></code>", "Afterword, Further Reading", "Move Semantics, Rvalue References", "<code class=\"docutils literal notranslate\"><span class=\"pre\">SmartPtr</span></code> With Move Semantics", "Implementing Move Semantics (<code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">String</span></code>, Live Hacked)", "Using Move Semantics In Own Code", "Lvalues, Rvalues, And Such", "Miscellaneous", "<code class=\"docutils literal notranslate\"><span class=\"pre\">auto</span></code>", "Concepts", "Concepts: Overview", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toolcase-1-conceptless.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toolcase-2-conceptless-error.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toolcase-3-concept-integral.cpp</span></code>", "Concepts: Links", "Writing Your Own Concepts", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-1-good-old-func.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-2-need-template.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-4-concept-has-size.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-5-concept-index-ret-double.cpp</span></code>", "Coroutines", "Coroutines: An Overview", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fibo-generator.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fibonacci.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">generator.h</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">generator-hello.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">simplest.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">suspend.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">suspend-iter.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">suspend-next.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">=</span> <span class=\"pre\">default</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">=</span> <span class=\"pre\">delete</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">final</span></code>", "New Language Features", "Lambda", "Lambda", "Lambda: More Capturing", "Live Hacking: Handwritten Functors (Too Much Boilerplate)", "Live Hacking: Handwritten Functors, And Capturing By Reference (Pitfalls)", "Modules", "<code class=\"docutils literal notranslate\"><span class=\"pre\">override</span></code>", "Range Based <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> Loops: Introduction", "Case Study: Range Based <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> On <code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code>", "Ranges And Views: Good Or Bad?", "Ranges", "Ranges: Overview", "Ranges And Views: Links", "Structured Binding", "Smart Pointers: Closing Words", "Smart Pointers (<code class=\"docutils literal notranslate\"><span class=\"pre\">std::unique_ptr</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">std::shared_ptr</span></code>)", "Introduction", "(Trying To) Handwrite A Smart Pointer Class in C++ Before C++11", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::shared_ptr</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::unique_ptr</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::weak_ptr</span></code>", "Perfect Forwarding", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::bind</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::function</span></code>", "Functions, Functions", "Threads Introduction", "Threads in C++", "Race Conditions", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::atomic</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::mutex</span></code> And Friends", "Scoped Locking", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::condition_variable</span></code> (Live Hacking Multithreaded Queue)", "Multithreading", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::promise</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">std::future</span></code> (And Some <code class=\"docutils literal notranslate\"><span class=\"pre\">std::chrono</span></code>) (Some Live Hacking)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::chrono</span></code>", "New-Style Union: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::variant</span></code>", "Miscellaneous", "Exercise: Bag Of Items, By Copy", "Exercise: Bag Of Items, By Shared Reference", "Exercise: Bag Of Items, By Unique Reference", "Introduction", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::filesystem</span></code>", "C++ 11", "Generated Topic Graph", "Topics", "Modern Character Devices (Screenplay)", "Modern Character Devices (Slideshow)", "Modern Character Devices", "File Operations on Character Devices (Screenplay)", "File Operations on Character Devices (Slideshow)", "File Operations on Character Devices", "Coding: First Functionality (Slideshow)", "Coding: First Functionality", "Character Device Basics (Livehacking Screenplay)", "Character Device Basics (Slideshow)", "Character Device Basics", "Coding: Multiple Devices (Slideshow)", "Coding: Multiple Devices", "Coding: Refactoring (Screenplay)", "Coding: Refactoring (Slideshow)", "Coding: Refactoring", "DMA (Slideshow)", "DMA", "Building a Fedora Kernel (Screenplay)", "Fedora: Building the Kernel", "Fedora: Building External Kernel Modules (Screenplay)", "Fedora: Building External Kernel Modules", "Linux Kernel Driver Development", "Module Loading, Hello World (Slideshow)", "Module Loading, Hello World", "Coding: Raspi GPIO Interrupts (Slideshow)", "Coding: Raspi GPIO Interrupts", "Interrupts (Slideshow)", "Interrupts", "IO Memory (Slideshow)", "IO Memory", "Dynamic Memory: <code class=\"docutils literal notranslate\"><span class=\"pre\">kmalloc()</span></code> (Slideshow)", "Dynamic Memory: <code class=\"docutils literal notranslate\"><span class=\"pre\">kmalloc()</span></code>", "Doubly Linked Lists (Slideshow)", "Doubly Linked Lists", "Coding: Fix Race Condition (Mutex) (Slideshow)", "Coding: Fix Race Condition (Mutex)", "Mutex (and RT Mutex) (Slideshow)", "Mutex (and RT Mutex)", "Network Devices (Slideshow)", "Network Devices", "PCI (Slideshow)", "PCI", "Process vs.Atomic Context (Slideshow)", "Process vs.Atomic Context", "Rasperry Pi: Kernel Build", "Raspberry Pi: Building the Kernel", "Sample Code Maintenance", "Coding: Fix <em>Sleep While Atomic</em> (Slideshow)", "Coding: Fix <em>Sleep While Atomic</em>", "Spinlock (vs. Mutex) (Slideshow)", "Spinlock (vs. Mutex)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">dup()</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">fork()</span></code>, and Reference Counting (Stub)", "Coding: Timed Event (Slideshow)", "Coding: Timed Event", "Timer Management (Slideshow)", "Timer Management", "To Do List", "Accessing Userspace Memory (Screenplay)", "Accessing Userspace Memory (Slideshow)", "Accessing Userspace Memory", "Waiting for Something (Screenplay)", "Waiting for Something (Slideshow)", "Waiting for Something", "Workqueue (Screenplay)", "Workqueue (Slideshow)", "Workqueue", "Exercises: Archiving And Compression", "Archiving and Compression", "<code class=\"docutils literal notranslate\"><span class=\"pre\">gzip</span></code>", "Archiving and Compression", "<code class=\"docutils literal notranslate\"><span class=\"pre\">tar</span></code>", "Exam (ECE/SS2022/G1): Do A Lot With Files And Directories", "Exam (ECE/SS2022/G2): Do A Lot With Files And Directories", "Exercises/Exams: Linux Basics", "Linux Basics", "Everything Is A File (Live Demo)", "Environment (Variables)", "FH/Moodle Quiz: Linux Basics", "Introduction: Concepts and Terminology", "Login? What Is That?", "Overview", "Processes, Scheduling, Address Spaces", "Process Hierarchy (Parent, Child Process)", "Windows Subsystem for Linux (WSL)", "Exercises: IO-Redirection, Pipes", "I/O Redirection And Pipes", "I/O Redirection", "I/O Redirection: Swap <code class=\"docutils literal notranslate\"><span class=\"pre\">stdout</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">stderr</span></code>", "Pipes", "Permissions: Mode, User and Group Ownership", "Exercise: Determine Your User Credentials", "FH/Moodle Quiz: Permissions", "FH/Moodle Quiz: Permissions", "Exercises: File System Permissions", "Exercise: Create Private Directory", "Question: Private Directory", "Exercise: Create Public Directory", "Question: Public Directory", "Exercise: Create Group-Shared File", "File System Permissions", "SetUID Programs: <code class=\"docutils literal notranslate\"><span class=\"pre\">passwd</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">sudo</span></code>, \u2026", "SetUID: Live Demo", "Ugly Hack: Sticky Bit", "Default Permissions: <code class=\"docutils literal notranslate\"><span class=\"pre\">umask</span></code>", "Commandline", "Shell Configuration File: <code class=\"docutils literal notranslate\"><span class=\"pre\">~/.bashrc</span></code>", "Copying: <code class=\"docutils literal notranslate\"><span class=\"pre\">cp</span></code>", "Current Working Directory", "Exercise: Copy Directory Tree", "Exercise: Copy Files", "Exercise: Create Files (I/O Redirection)", "Exercise: Move Files", "Exercises: Create/Copy/Move/Remove", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">mkdir</span></code>", "Exercise: Funny Stuff", "Exercise: Remove Directory Tree", "Exercise: Verify, Repeat", "FH/Moodle Quiz: Shell", "The Shell - Exercises", "Exercise: File Types in <code class=\"docutils literal notranslate\"><span class=\"pre\">/dev</span></code>", "Exercise: Size of <code class=\"docutils literal notranslate\"><span class=\"pre\">/etc/passwd</span></code>", "Exercises: The <code class=\"docutils literal notranslate\"><span class=\"pre\">ls</span></code> Command", "Exercise: Permissions of Home Directory", "Creating And Removing Files and Directories", "The Shell (Bash - \u201cBourne Again Shell\u201d)", "Symbolic Links, Hard Links", "Directory Listings: The <code class=\"docutils literal notranslate\"><span class=\"pre\">ls</span></code> Command", "Moving and Renaming: <code class=\"docutils literal notranslate\"><span class=\"pre\">mv</span></code>", "Absolute and Relative Paths", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cat</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cut</span></code>", "Exercises: Inspecting Text Files", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">grep</span></code>", "Tools: Inspecting Text Files", "<code class=\"docutils literal notranslate\"><span class=\"pre\">head</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">tail</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">less</span></code>", "Overview", "Drafts", "Yocto", "Linux", "Controlling a Brushless Motor With Raspberry Pi", "CAN/Linux Basics", "CAN Interfaces", "Programming", "Hardware, Kernel", "CAN Bus With Linux And Python", "Linux Hardware Interfaces", "Linux and I2C (using LM73 Temperature Sensor as Slave)", "PWM Userspace Interface (using PCA9685)", "Linux and OneWire (using DS18B20 Temperature Sensor as Slave)", "SSH: Basics", "Exercise: Copy a File To Remote Machine, And Verify", "Exercise: Copy a Tree To Remote Machine (And Adjust Permissions)", "Exercises: SSH", "Exercise: Create SSH Key Pair", "SSH: Secure Shell", "SSH: Public Key Authentication", "SSH: Links", "SSH: Port Forwarding", "SSH: Secure Copy (<code class=\"docutils literal notranslate\"><span class=\"pre\">scp</span></code>)", "SSH File System (<code class=\"docutils literal notranslate\"><span class=\"pre\">sshfs</span></code>)", "Error Handling", "Linux Systems Programming: Basics", "System Calls vs. Library Functions", "Blocking I/O: What is That? (\u201cEverything is a file\u201d)", "Blocking I/O (On A File): What is That?", "Blocking I/O: On A Network Socket", "Blocking I/O: On A Timer? WTF?", "Blocking I/O: What Is That?", "File I/O: Basics", "Exercise: Copy A File", "Exercise: Create File With Hole", "Duplicating (Whats Going On?)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_CREAT</span></code>: Creating A File", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_EXCL</span></code>: Creating A File, But Failing If It Already Exists", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_RDONLY</span></code>: Reading a File", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_WRONLY</span></code>: Writing A File (Which Must Exist)", "Exercise: Read Temperature From Onewire Sensor", "File I/O", "Miscellaneous", "Linux Systems Programming", "Get Value Of GPIO", "Introductory Live Hacking, Hardware-Wise (<code class=\"docutils literal notranslate\"><span class=\"pre\">sysfs</span></code> GPIO)", "Intro: <code class=\"docutils literal notranslate\"><span class=\"pre\">sysfs</span></code> GPIO", "Interrupts In Userspace", "Basics", "Thread Life Cycle", "Thread Creation, Race Condition", "Synchronization", "Mutex: Solve Load/Modify/Store Conflict", "Communication: Condition Variable", "Condition Variable: Message Queue", "Miscellaneous", "Last Warning", "POSIX Threads", "Trylock/islocked", "Process: Arguments, Exit Status", "Processes", "The Process Tree (And Environment, And <code class=\"docutils literal notranslate\"><span class=\"pre\">procfs</span></code>)", "Scheduling (and Multitasking)", "Scheduling", "Tasks? Processes? Threads?", "Scheduling: Exam Questions", "Realtime", "Realtime API", "Wakeup Latency, CPU Frequency (Gotcha)", "Code: Sysprog: Event Driven Programming", "Screenplay: Sysprog: POSIX IPC", "Sysprog: Events", "Code: Sysprog: POSIX IPC", "Screenplay: Sysprog: POSIX IPC", "Slides: Sysprog: POSIX IPC", "Sysprog: POSIX IPC", "Code: Sysprog: Signals", "Screenplay: Sysprog: Signals", "Slides: Sysprog: Signals", "Sysprog: Signals", "Toolchain: Basics", "CMake: Cross Build", "CMake: Local Build", "Cross Development", "Cross Development", "Exercise: Build Software Package (Cross, Raspberry)", "FH/Moodle Quiz: Toolchain", "Exercises: Toolchain", "Exercise: Build Software Package (Native)", "Exercise: Install And Check Raspberry Toolchain", "Toolchain, And Cross Development", "Case Study: Raspberry Toolchain", "Linaro Toolchain For The Pi (Defunct)", "Building A Cross Toolchain For The Raspberry Pi, Using <code class=\"docutils literal notranslate\"><span class=\"pre\">crosstool-ng</span></code>", "Building A Toolchain <em>On</em> Fedora <em>For</em> Ubuntu 18.04 (WSL)", "Cross Toolchain Setup", "Zooming In: Separate Compilation, and Linking <em>Statically</em>", "Shared Libraries (Shared Objects)", "Object Code Archives/Static Libraries", "Closures", "Comprehensions (List, Dictionary, Set)", "Context Managers: The <code class=\"docutils literal notranslate\"><span class=\"pre\">with</span></code> Statement", "Decorators", "Exception Handling", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">exec()</span></code> Function", "Python: More Language Features", "Iteration, Comprehensions, and Generators", "Implementing A Fibonacci Number Generator", "The Iterator Protocol", "Iteration, Generators, And <code class=\"docutils literal notranslate\"><span class=\"pre\">yield</span></code>", "Iterating Intelligently: Generators, and the Iterator Protocol", "Modules and Packages", "Multithreading (Python)", "Multithreading", "Race Conditions, and Mutexes", "Multithreading: Exam Questions", "Abstract Base Classes (<code class=\"docutils literal notranslate\"><span class=\"pre\">abc</span></code>), And Duck Typing", "Classes And Dictionaries", "Constructor", "Object Oriented Programming", "Inheritance", "Methods", "<code class=\"docutils literal notranslate\"><span class=\"pre\">collections.namedtuple</span></code>", "Operator Overloading", "Properties", "<code class=\"docutils literal notranslate\"><span class=\"pre\">str()</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">repr()</span></code>", "Positional and Keyword Arguments", "Python: The Language Fundamentals", "Python Installation", "Blahblah", "Hello World", "Running Python Programs", "Syntax etc.", "Commandline Arguments (<code class=\"docutils literal notranslate\"><span class=\"pre\">sys.argv</span></code>)", "Variables", "Datatypes", "Compound Datatypes", "Boolean", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code> Statement", "<code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code> Loops", "Sequential Datatypes", "Indexing and Slicing", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> Loops", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">range</span></code> Function", "References, (Im)mutability", "Functions: Global and Local Scope (Livehacking Screenplay)", "Functions (Slideshow)", "Functions", "More About Strings", "String Formatting", "Miscellaneous String Methods", "More About Lists", "More About Dictionaries", "More About Sets", "File I/O", "Function Objects", "Commandline Parsing with <code class=\"docutils literal notranslate\"><span class=\"pre\">argparse</span></code>", "Python: Draft Topics", "Matplotlib", "Package Installation (<code class=\"docutils literal notranslate\"><span class=\"pre\">setuptools</span></code>)", "Exercise: Read CSV File, Write into Sqlite3 Database", "Exercise: Read CSV File", "CSV and Databases", "Exercises", "Exercise: Boolean Expressions", "Exercise: Even Numbers (<code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code>)", "Exercise: Greeting, Depending on Time of Day", "Exercises (External)", "Exercise: Determine Maximum of Two Numbers", "Exercise: Swap Two Variables", "Exercise: Username/Password Check", "Exercise: Digit to English Word", "Exercise: Dictionary: Errors?", "Exercise: Eliminate Empty/Comment-Only Lines", "Exercise: Generator: Fibonacci", "Exercise: Primeness (<code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code>)", "Exercises (Legacy)", "Exercise: Functions: <code class=\"docutils literal notranslate\"><span class=\"pre\">join()</span></code>", "Exercise: Determine Maximum of Two Numbers", "Exercise: Determine Maximum of Two Numbers (Function)", "Exercise: Mixed List (Executable Program)", "Exercise: Mixed List (Interactive Interpreter)", "Exercise: Parsing <code class=\"docutils literal notranslate\"><span class=\"pre\">/etc/passwd</span></code>", "Exercise: Primeness (Function)", "Exercise: Reverting Lines of a File", "Exercise: String (Right-Justify)", "Exercise: Function: <code class=\"docutils literal notranslate\"><span class=\"pre\">uniq()</span></code>", "Exercise: Generator: <code class=\"docutils literal notranslate\"><span class=\"pre\">uniq()</span></code>", "Exercise: Counting Lines, Words, Characters", "Exercise: Primeness (<code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code>)", "Sensors, And Data Acquisition (Exercise Series)", "Project Setup", "Exercise: Basic \u201cSensor\u201d", "Exercise: Read CSV File (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.dictreader</span></code>)", "Exercise: Refactoring - Extract CSV Reading Into Function (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.dictreader</span></code>)", "Exercise: Read CSV File (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.reader</span></code>)", "Exercise: Refactoring - Extract CSV Reading Into Function (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.reader</span></code>)", "User Database (Exercise Series)", "Exercise: MQTT: Publish User Records", "Exercise: Away From Raw Dictionaries", "Exercise: Convert User Record To JSON And Back", "Exercise: Refactoring - Extract Both CSV Formats Into Module", "Python: All Material, Interrelated", "Python Programming: From Absolute Beginner to Advanced Productivity", "Python Links", "Machine Learning, Artificial Intelligence", "K-Means", "Linear Regression: Running Code (<em>no Notebook!</em>)", "Weather History Dataset", "Linear Regression: Jupyter Notebook", "Linear Regression", "Machine Learning: Concepts and Terminology", "CSV Files", "DBAPI 2", "Databases", "DBAPI 2: PostgreSQL", "DBAPI 2: <code class=\"docutils literal notranslate\"><span class=\"pre\">sqlite3</span></code>", "Encoding", "Python: Miscellaneous Topics", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">import</span></code> Statement (incomplete)", "MQTT", "Pandas: Adding Rows", "Pandas: Basics (<code class=\"docutils literal notranslate\"><span class=\"pre\">DataFrame</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">Series</span></code>)", "Pandas: Filters", "Pandas", "Pandas: Selecting Rows (And Columns) With <code class=\"docutils literal notranslate\"><span class=\"pre\">iloc[]</span></code>", "Pandas: Indexes", "Pandas: Selecting Rows (And Columns) With <code class=\"docutils literal notranslate\"><span class=\"pre\">loc[]</span></code>", "Pandas: Adding/Modifying Columns", "XML: ElementTree (<code class=\"docutils literal notranslate\"><span class=\"pre\">etree</span></code>)", "Visual Studio Code for Python Programming", "PCAP Exam", "Python: Project/Package Management", "Python Package Index (Livehacking Screenplay)", "Python Package Index (Slideshow)", "Python Package Index", "Packaging, PyPI Upload (Link Collection)", "PyTest", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pytest</span></code> Introduction, By Example", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">unittest</span></code> Module", "Virtual Environments (Livehacking Screenplay)", "Virtual Environments (Slideshow)", "Virtual Environments", "Unit Testing With <code class=\"docutils literal notranslate\"><span class=\"pre\">googletest</span></code>", "Code: Unittest: GTest Basics", "Screenplay: Unittest: GTest Basics", "Unittest: GTest Basics", "Screenplay: Unittest: GTest and CMake", "Unittest: GTest and CMake", "Code: Unittest: GTest Fixtures", "Screenplay: Unittest: GTest Fixtures", "Unittest: GTest Fixtures", "Organisatorisches: Buchung, Kursablauf", "Linux from Scratch, 16.9.2013, M\u00fcnchen", "Shell Scripting/Bourne Again Shell (Bash)", "C: Einf\u00fchrung", "C f\u00fcr Fortgeschrittene", "C++: Einf\u00fchrung und \u00dcberblick", "An Introduction to Modern C++, In Three Days", "C and C++ Programming", "CMake", "Design Patterns For Embedded C++ Developers", "Embedded Software Development: Hardware, Realtime, and Memory Management", "Linux Kernel Driver Development", "Linux Basics: Eine Einf\u00fchrung Anhand von Beispielen", "GNU Make: Die Mutter aller Build Tools", "Advanced Python", "Basic Python", "Herdt", "Eine Woche mit dem Raspberry Pi", "Subversion (SVN)", "Linux Systems Programming: Introduction", "Linux Systems Programming: Virtual Memory, IPC, Shared Libraries", "Linux Systems Programming", "Linux Systems Programming: Multithreading", "Linux Systems Programming: Network Programming", "Unittesting and Test Driven Development"], "terms": {"di": [0, 23, 154, 157, 225, 426, 1060, 1062, 1066, 1068], "j\u00f6rg": [0, 23, 158, 192, 200, 204, 219, 222, 225, 235, 238, 253, 274, 280, 292, 308, 309, 311, 313, 378, 452, 968, 971, 1009, 1033, 1060, 1061, 1062, 1063, 1066, 1067, 1068], "faschingbau": [0, 12, 23, 37, 50, 59, 62, 122, 139, 146, 147, 155, 173, 176, 177, 179, 180, 181, 182, 192, 199, 204, 205, 212, 215, 220, 222, 225, 228, 232, 235, 238, 241, 253, 260, 270, 274, 280, 285, 292, 308, 309, 311, 314, 317, 322, 378, 409, 426, 431, 444, 451, 452, 485, 501, 557, 603, 632, 633, 634, 635, 636, 637, 654, 800, 801, 808, 810, 815, 829, 845, 858, 864, 889, 926, 968, 971, 972, 984, 985, 987, 988, 989, 991, 992, 994, 1000, 1022, 1026, 1049, 1060, 1061, 1062, 1063, 1066, 1067, 1068, 1070, 1079, 1085, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1099, 1119, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143], "offic": [0, 32, 145, 161], "co": [0, 12, 32, 37, 122, 136, 147, 176, 177, 179, 180, 181, 182, 243, 260, 264, 317, 322, 424, 431, 650, 972, 994, 1070, 1085, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1099, 1117, 1119, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143], "43": [0, 7, 143, 150, 162, 173, 183, 188, 190, 193, 196, 199, 204, 205, 209, 212, 215, 220, 222, 228, 232, 235, 238, 241, 250, 253, 257, 260, 270, 274, 280, 292, 309, 311, 312, 401, 414, 426, 585, 655, 705, 721, 855, 864, 877, 879, 918, 981], "0": [0, 5, 7, 21, 23, 32, 61, 63, 107, 110, 111, 119, 124, 126, 136, 139, 141, 142, 143, 145, 151, 155, 159, 160, 161, 162, 163, 173, 176, 178, 180, 183, 188, 190, 191, 192, 193, 196, 199, 200, 201, 204, 205, 209, 212, 213, 215, 218, 220, 222, 225, 228, 231, 232, 235, 238, 240, 241, 243, 245, 250, 253, 256, 257, 258, 260, 264, 268, 269, 270, 274, 280, 290, 292, 303, 309, 310, 311, 312, 313, 314, 317, 339, 340, 342, 344, 346, 348, 349, 350, 352, 359, 360, 362, 363, 364, 372, 375, 377, 378, 384, 385, 387, 390, 405, 406, 407, 408, 410, 411, 414, 415, 418, 420, 424, 426, 427, 430, 434, 435, 437, 440, 443, 444, 449, 451, 454, 456, 463, 464, 466, 468, 469, 470, 471, 473, 474, 475, 478, 479, 482, 483, 484, 488, 491, 492, 496, 498, 499, 500, 501, 502, 510, 516, 517, 525, 528, 534, 537, 544, 545, 546, 548, 549, 552, 553, 554, 555, 557, 559, 560, 561, 562, 563, 564, 567, 572, 573, 574, 575, 576, 577, 579, 580, 581, 582, 583, 585, 586, 589, 590, 591, 595, 599, 600, 601, 602, 603, 607, 609, 613, 614, 616, 617, 619, 620, 622, 624, 626, 631, 632, 633, 634, 635, 636, 637, 638, 642, 646, 647, 650, 653, 654, 655, 657, 659, 660, 661, 662, 664, 665, 666, 667, 668, 670, 671, 672, 674, 675, 676, 677, 678, 679, 680, 684, 686, 687, 689, 691, 692, 694, 696, 700, 701, 703, 704, 705, 706, 711, 714, 716, 720, 724, 728, 731, 732, 736, 739, 751, 753, 763, 786, 787, 789, 804, 808, 810, 815, 818, 829, 830, 833, 855, 857, 858, 859, 864, 870, 873, 877, 878, 879, 888, 890, 893, 895, 896, 897, 899, 900, 902, 903, 904, 905, 906, 909, 911, 913, 914, 920, 928, 929, 931, 933, 934, 935, 937, 940, 941, 944, 945, 947, 948, 950, 959, 962, 963, 965, 967, 969, 970, 973, 975, 979, 981, 983, 996, 999, 1000, 1001, 1002, 1006, 1008, 1010, 1013, 1015, 1016, 1017, 1021, 1023, 1025, 1026, 1028, 1031, 1032, 1033, 1038, 1040, 1049, 1059, 1066, 1068, 1074, 1075, 1076, 1083, 1084, 1087, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1100, 1105, 1107, 1112, 1117], "664": [0, 215, 818], "5783814": 0, "gpg": 0, "kei": [0, 9, 32, 42, 97, 101, 102, 108, 113, 135, 137, 139, 151, 159, 168, 173, 178, 180, 181, 183, 188, 190, 192, 195, 196, 197, 199, 204, 205, 207, 209, 210, 212, 213, 215, 220, 222, 223, 225, 228, 232, 235, 237, 238, 242, 246, 249, 250, 253, 255, 256, 260, 270, 273, 274, 276, 277, 279, 280, 292, 311, 314, 317, 322, 350, 398, 598, 600, 603, 642, 691, 726, 800, 801, 808, 865, 869, 881, 882, 883, 885, 890, 971, 975, 984, 1002, 1003, 1019, 1028, 1038, 1039, 1061, 1063, 1071, 1079, 1092, 1093, 1100, 1125, 1131], "prankergass": [0, 199, 220, 845], "33": [0, 7, 137, 150, 162, 173, 178, 183, 188, 190, 193, 196, 199, 204, 205, 209, 212, 215, 220, 222, 225, 228, 232, 235, 241, 250, 253, 257, 260, 264, 270, 274, 280, 292, 311, 312, 313, 426, 447, 804, 845, 947, 1075, 1076], "8020": [0, 199, 215, 220, 258, 426, 800, 801, 839, 845], "graz": [0, 1, 3, 23, 59, 62, 123, 181, 199, 258, 291, 294, 334, 426, 800, 801, 839, 845, 1070], "uid": [0, 220, 225, 228, 317, 322, 724, 800, 801, 808, 818, 890, 905, 961, 1049], "vat": [0, 184, 1135], "atu63522469": 0, "write": [0, 13, 16, 27, 29, 37, 43, 48, 53, 54, 55, 56, 57, 59, 62, 63, 66, 70, 78, 97, 114, 115, 117, 119, 120, 140, 141, 142, 151, 156, 160, 173, 176, 177, 179, 180, 181, 192, 197, 199, 200, 201, 202, 207, 209, 210, 213, 216, 218, 220, 226, 228, 237, 240, 247, 249, 256, 266, 273, 279, 291, 298, 303, 306, 308, 317, 319, 321, 323, 328, 344, 347, 348, 353, 365, 367, 389, 400, 404, 410, 411, 414, 424, 426, 449, 452, 464, 466, 469, 480, 489, 490, 501, 502, 504, 509, 520, 526, 531, 537, 542, 544, 545, 548, 558, 560, 607, 614, 623, 626, 628, 642, 647, 658, 670, 682, 691, 697, 706, 720, 724, 725, 726, 732, 734, 744, 746, 753, 757, 773, 789, 800, 801, 804, 810, 815, 816, 818, 819, 820, 821, 827, 829, 831, 834, 852, 864, 866, 869, 873, 877, 878, 879, 886, 893, 895, 896, 897, 900, 902, 903, 904, 905, 907, 908, 909, 910, 911, 913, 914, 917, 921, 927, 931, 940, 941, 944, 945, 949, 952, 955, 973, 984, 989, 990, 994, 1017, 1018, 1023, 1028, 1029, 1030, 1032, 1035, 1036, 1037, 1038, 1040, 1041, 1044, 1045, 1047, 1049, 1051, 1052, 1053, 1055, 1056, 1060, 1062, 1065, 1069, 1071, 1084, 1095, 1098, 1105, 1106, 1107, 1125, 1126, 1138], "review": [0, 141, 164, 175, 269, 341], "http": [0, 3, 4, 8, 13, 20, 23, 32, 37, 39, 44, 59, 61, 62, 85, 106, 113, 124, 126, 136, 144, 145, 146, 147, 151, 155, 157, 159, 167, 168, 169, 170, 176, 177, 180, 181, 189, 194, 200, 202, 203, 209, 215, 216, 218, 225, 226, 228, 232, 240, 245, 247, 256, 259, 265, 266, 267, 269, 273, 279, 283, 284, 287, 291, 293, 295, 316, 317, 322, 337, 485, 499, 520, 562, 622, 695, 699, 704, 729, 744, 746, 750, 773, 774, 872, 874, 877, 913, 959, 961, 1016, 1026, 1082, 1084, 1098, 1100, 1101], "g": [0, 32, 48, 63, 97, 113, 120, 143, 147, 151, 155, 160, 161, 163, 173, 188, 192, 201, 205, 209, 212, 215, 220, 222, 225, 228, 232, 250, 256, 264, 280, 339, 359, 363, 366, 369, 374, 380, 381, 382, 384, 387, 402, 406, 414, 418, 419, 426, 427, 429, 432, 438, 439, 452, 456, 464, 485, 498, 501, 544, 548, 549, 578, 598, 616, 617, 646, 650, 653, 655, 664, 684, 705, 713, 717, 724, 732, 751, 773, 792, 811, 818, 833, 855, 862, 865, 872, 890, 899, 909, 929, 931, 933, 944, 945, 947, 948, 949, 950, 961, 966, 968, 970, 978, 990, 992, 993, 1011, 1012, 1016, 1017, 1080, 1084, 1095, 1107, 1112, 1128], "page": [0, 33, 39, 61, 72, 74, 78, 106, 113, 120, 135, 136, 137, 139, 140, 142, 143, 147, 152, 172, 177, 180, 201, 226, 256, 282, 324, 348, 349, 352, 397, 408, 448, 485, 726, 732, 751, 757, 759, 771, 797, 800, 801, 817, 866, 870, 879, 890, 900, 903, 931, 1078], "r": [0, 7, 13, 31, 32, 38, 43, 61, 143, 145, 146, 150, 151, 159, 161, 162, 163, 172, 173, 176, 178, 179, 183, 188, 190, 193, 196, 199, 201, 205, 206, 209, 212, 215, 218, 220, 222, 225, 228, 232, 235, 238, 240, 241, 250, 253, 257, 258, 260, 270, 274, 280, 292, 309, 312, 317, 326, 338, 359, 384, 414, 426, 433, 447, 466, 467, 496, 500, 564, 591, 694, 702, 724, 737, 746, 751, 769, 773, 774, 804, 810, 815, 818, 829, 832, 833, 835, 855, 862, 870, 877, 878, 879, 881, 882, 890, 901, 904, 905, 913, 947, 948, 949, 959, 961, 962, 969, 990, 995, 998, 1004, 1015, 1021, 1026, 1058, 1084, 1107, 1143], "ctb02zug3crheb0": 0, "geboren": [1, 23], "am": [1, 3, 7, 17, 32, 37, 59, 62, 65, 107, 122, 140, 141, 142, 143, 145, 146, 147, 148, 149, 159, 172, 184, 193, 229, 233, 260, 555, 692, 773, 812, 861, 866, 879, 888, 890, 905, 1015, 1119, 1120, 1122, 1135, 1138, 1142], "19": [1, 7, 23, 113, 150, 152, 161, 162, 163, 172, 178, 181, 183, 188, 190, 192, 193, 196, 199, 204, 205, 209, 212, 215, 216, 220, 222, 225, 228, 232, 235, 238, 241, 250, 253, 257, 260, 264, 270, 274, 280, 285, 292, 310, 311, 312, 314, 322, 325, 334, 402, 426, 433, 702, 833, 855, 879, 950, 959, 991, 997, 1060, 1061, 1062, 1063, 1066, 1067, 1068, 1070, 1075, 1076, 1080, 1088, 1100, 1105, 1107], "6": [1, 7, 32, 61, 63, 109, 141, 143, 151, 155, 157, 160, 161, 162, 163, 173, 178, 180, 185, 188, 190, 191, 193, 196, 199, 200, 201, 203, 206, 208, 209, 212, 213, 215, 220, 222, 225, 228, 232, 235, 239, 241, 250, 253, 257, 260, 264, 270, 274, 280, 288, 292, 309, 310, 312, 313, 317, 341, 342, 364, 401, 407, 418, 463, 464, 503, 504, 505, 506, 518, 537, 544, 546, 549, 552, 553, 556, 558, 561, 562, 563, 564, 582, 583, 584, 585, 591, 622, 623, 659, 705, 724, 829, 852, 855, 859, 864, 870, 877, 878, 879, 893, 901, 914, 947, 959, 961, 964, 970, 973, 979, 1002, 1003, 1006, 1008, 1010, 1026, 1032, 1049, 1056, 1060, 1061, 1062, 1063, 1066, 1067, 1068, 1075, 1076, 1080, 1084, 1098, 1100, 1105, 1106, 1107, 1112, 1136], "1966": [1, 23, 181, 215, 225, 235, 238, 1060, 1061, 1062, 1063, 1066, 1067, 1068, 1080], "diplom": [1, 23], "au": [1, 5, 8, 23, 32, 148, 149, 157, 158, 159, 163, 173, 184, 194, 196, 203, 219, 222, 228, 229, 231, 243, 280, 312, 317, 318, 335, 1120, 1122, 1123, 1124, 1129, 1135, 1138], "technisch": [1, 23, 335, 1137], "mathematik": [1, 23], "an": [1, 3, 5, 13, 17, 21, 23, 28, 31, 38, 40, 43, 45, 46, 48, 54, 55, 57, 58, 59, 62, 69, 73, 74, 78, 82, 83, 85, 92, 107, 108, 110, 111, 113, 116, 117, 118, 119, 120, 128, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 170, 172, 173, 176, 178, 179, 180, 183, 191, 192, 196, 197, 199, 200, 201, 202, 204, 207, 209, 212, 213, 216, 217, 218, 220, 223, 225, 226, 228, 232, 238, 240, 241, 245, 247, 249, 256, 259, 262, 264, 265, 266, 267, 269, 273, 274, 284, 287, 291, 298, 303, 304, 328, 334, 336, 340, 342, 346, 349, 350, 363, 372, 380, 384, 387, 390, 391, 402, 405, 406, 407, 408, 410, 413, 420, 424, 426, 430, 433, 439, 442, 443, 444, 447, 448, 452, 453, 454, 463, 464, 466, 467, 468, 469, 485, 487, 491, 496, 498, 500, 501, 504, 505, 506, 518, 520, 544, 545, 547, 549, 552, 553, 554, 558, 560, 561, 562, 563, 564, 577, 582, 595, 598, 601, 602, 607, 613, 616, 617, 624, 629, 633, 635, 636, 637, 638, 642, 643, 646, 650, 654, 663, 669, 682, 684, 692, 694, 701, 702, 704, 705, 706, 712, 724, 725, 726, 727, 732, 737, 739, 742, 744, 751, 773, 781, 786, 799, 800, 801, 805, 806, 810, 818, 827, 832, 833, 836, 839, 858, 860, 870, 877, 879, 881, 882, 887, 890, 895, 896, 897, 898, 900, 904, 905, 906, 907, 911, 913, 914, 920, 926, 928, 929, 932, 933, 934, 935, 941, 945, 947, 948, 953, 957, 962, 963, 966, 967, 970, 976, 977, 978, 982, 987, 988, 990, 992, 993, 994, 998, 999, 1000, 1002, 1006, 1012, 1021, 1022, 1023, 1026, 1028, 1041, 1047, 1048, 1049, 1065, 1070, 1071, 1073, 1075, 1076, 1077, 1078, 1083, 1084, 1087, 1092, 1093, 1097, 1100, 1105, 1106, 1108, 1117, 1119, 1120, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1136, 1138, 1139, 1143], "der": [1, 3, 5, 7, 8, 11, 64, 136, 148, 149, 150, 154, 157, 158, 159, 160, 163, 165, 167, 173, 175, 184, 185, 186, 189, 190, 193, 194, 196, 199, 203, 219, 220, 222, 228, 231, 232, 235, 243, 292, 309, 317, 322, 1119, 1121, 1122, 1123, 1124, 1129, 1131, 1132, 1135, 1136, 1137, 1138, 1139, 1141, 1142, 1143], "tu": [1, 23], "iicm": [1, 23], "1993": [1, 23], "universit\u00e4tsassist": [1, 23], "ebendort": [1, 23], "bi": [1, 3, 23, 32, 148, 149, 173, 183, 280, 1120, 1139], "1998": [1, 3, 23, 151, 159, 215, 543], "vorlesungen": 1, "programmieren": [1, 5, 159, 163, 318, 334, 1124, 1129, 1132, 1136, 1138, 1142, 1143], "basi": [1, 3, 5, 7, 24, 78, 164, 172, 193, 202, 216, 228, 262, 312, 387, 1128, 1139, 1140], "c": [1, 3, 4, 6, 9, 12, 21, 23, 38, 42, 43, 63, 65, 72, 73, 74, 78, 85, 87, 106, 109, 120, 125, 135, 136, 139, 140, 141, 142, 143, 146, 153, 156, 158, 160, 168, 169, 173, 178, 179, 185, 188, 190, 195, 196, 199, 200, 209, 212, 213, 215, 219, 220, 222, 225, 228, 232, 235, 240, 241, 250, 253, 260, 266, 270, 274, 280, 283, 291, 292, 303, 312, 316, 318, 319, 324, 330, 331, 334, 336, 337, 338, 339, 340, 342, 346, 348, 350, 351, 352, 355, 358, 360, 362, 363, 364, 366, 370, 374, 375, 378, 379, 380, 381, 382, 386, 388, 390, 391, 392, 396, 397, 399, 400, 402, 403, 404, 406, 407, 408, 410, 411, 412, 414, 415, 416, 418, 419, 420, 421, 427, 430, 431, 432, 433, 436, 437, 438, 443, 444, 446, 447, 452, 456, 462, 464, 467, 473, 485, 488, 491, 492, 493, 494, 495, 497, 498, 500, 501, 503, 509, 543, 545, 547, 548, 549, 550, 554, 555, 556, 560, 561, 563, 565, 568, 573, 578, 580, 581, 585, 587, 591, 593, 595, 597, 598, 599, 600, 603, 605, 606, 607, 609, 610, 612, 613, 614, 615, 616, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 644, 650, 651, 655, 656, 657, 658, 659, 663, 669, 670, 681, 682, 683, 685, 686, 687, 688, 689, 690, 693, 694, 695, 696, 698, 699, 701, 702, 704, 705, 706, 707, 708, 710, 715, 716, 723, 724, 726, 727, 729, 732, 736, 737, 741, 742, 746, 748, 751, 753, 763, 773, 775, 776, 781, 789, 792, 797, 799, 805, 810, 812, 815, 830, 833, 855, 861, 864, 870, 871, 877, 878, 879, 891, 895, 896, 897, 902, 903, 904, 905, 906, 915, 918, 923, 931, 934, 936, 937, 940, 943, 944, 945, 947, 948, 949, 955, 957, 959, 963, 964, 965, 966, 968, 969, 993, 1001, 1002, 1010, 1011, 1015, 1021, 1028, 1082, 1083, 1087, 1106, 1107, 1114, 1117, 1127, 1129, 1130, 1132, 1138, 1139, 1140, 1141, 1142, 1143], "und": [1, 3, 4, 5, 6, 7, 8, 37, 39, 133, 148, 149, 154, 158, 159, 163, 165, 167, 175, 179, 185, 189, 191, 193, 198, 200, 204, 209, 220, 224, 225, 230, 232, 236, 242, 243, 260, 270, 280, 312, 313, 317, 322, 334, 336, 372, 380, 813, 860, 861, 880, 1119, 1120, 1121, 1122, 1123, 1127, 1129, 1131, 1132, 1136, 1137, 1138, 1139, 1141, 1142, 1143], "\u00fcbertragungsprotokol": [1, 153], "forschungst\u00e4tigkeit": 1, "volltextsuch": 1, "hyperwav": [1, 3, 23], "2001": [1, 3, 23, 209, 215, 225, 228, 253], "leitung": 1, "serverprogrammierung": 1, "oo": [1, 43, 72, 73, 74, 78, 106, 113, 153, 176, 189, 191, 200, 219, 226, 227, 230, 256, 260, 266, 268, 269, 273, 321, 330, 331, 426, 448, 490, 542, 543, 550, 613, 614, 617, 619, 620, 642, 706, 726, 765, 775, 972, 986, 1125, 1128], "design": [1, 3, 20, 23, 53, 57, 74, 78, 80, 82, 85, 106, 136, 137, 140, 153, 156, 176, 202, 203, 219, 265, 267, 325, 334, 336, 363, 393, 413, 414, 417, 425, 434, 441, 442, 443, 444, 446, 447, 449, 451, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 490, 498, 500, 542, 543, 549, 551, 567, 639, 688, 701, 705, 706, 708, 724, 726, 727, 878, 947, 1066, 1106, 1124, 1127], "analys": [1, 3, 153, 1122], "ration": [1, 3, 38, 146], "rose": [1, 3, 32], "f\u00fcr": [1, 3, 5, 64, 148, 149, 154, 158, 160, 163, 184, 185, 196, 203, 219, 231, 243, 257, 317, 322, 334, 336, 835, 1119, 1120, 1122, 1129, 1135, 1136, 1138, 1141], "java": [1, 9, 183, 184, 195, 207, 216, 603, 616, 701, 706, 713, 983, 996, 1002, 1011, 1135, 1143], "releasemanag": [1, 3, 23, 153, 1137], "cv": [1, 3, 23, 32, 136, 210, 1137], "subvers": [1, 3, 156, 336, 855], "systemnah": [1, 3, 5, 23, 135, 153, 937, 940, 944, 1138], "programmierung": [1, 3, 4, 5, 6, 8, 23, 133, 153, 207, 234, 243, 334, 1120, 1121, 1122, 1124, 1129, 1136, 1138, 1141], "unter": [1, 3, 23, 64, 149, 157, 158, 175, 183, 318, 861, 1120, 1121, 1124, 1129, 1132, 1136, 1139, 1141, 1142], "unix": [1, 72, 73, 74, 78, 97, 137, 140, 169, 192, 256, 303, 317, 318, 319, 330, 331, 335, 352, 406, 452, 626, 717, 724, 726, 730, 732, 765, 798, 799, 800, 815, 817, 829, 857, 860, 866, 870, 873, 878, 890, 915, 931, 941, 997, 1021, 1049, 1120, 1121, 1123, 1127, 1129, 1131, 1132, 1136, 1138, 1139, 1140, 1142], "window": [1, 3, 32, 97, 98, 103, 104, 113, 128, 140, 145, 147, 157, 159, 172, 180, 197, 211, 213, 215, 226, 229, 240, 245, 247, 249, 255, 256, 268, 284, 290, 303, 314, 317, 320, 322, 335, 347, 414, 708, 711, 726, 803, 807, 833, 869, 899, 915, 920, 995, 997, 998, 1021, 1071, 1107], "nt": 1, "salomon": [1, 3, 23], "friesach": [1, 3, 23], "bei": [1, 3, 5, 23, 148, 149, 154, 158, 163, 167, 173, 175, 184, 185, 188, 190, 228, 243, 309, 334, 933, 1119, 1120, 1135, 1137], "2006": [1, 3, 23, 215], "magicdraw": 1, "datenbankdesign": [1, 3], "einer": [1, 3, 148, 149, 154, 159, 167, 173, 175, 184, 185, 190, 197, 312, 334, 861, 933, 1119, 1120, 1124, 1135, 1136, 1141], "objektrelationalen": [1, 3], "datenbankschnittstel": [1, 3], "sp\u00e4ter": [1, 148, 158, 229, 1122], "softwarearchitekt": 1, "leiter": [1, 23], "abteilung": [1, 184, 1135], "forschung": 1, "entwicklung": [1, 3, 4, 318, 1131, 1137], "atron": [1, 3, 23], "unterpremst\u00e4tten": [1, 3, 23], "2010": [1, 3, 23, 136, 152, 215, 996], "enterpris": 1, "architect": [1, 434, 1099], "softwarearchitektur": [1, 3, 23], "versionsmanag": 1, "ibm": 1, "clearcas": [1, 146, 1137], "massgeblich": 1, "portierung": [1, 3, 4, 153], "spielautomatensoftwar": 1, "von": [1, 3, 4, 5, 6, 7, 8, 64, 122, 148, 149, 157, 158, 167, 175, 179, 180, 182, 184, 185, 188, 191, 193, 194, 196, 205, 222, 229, 234, 241, 250, 257, 292, 317, 318, 322, 334, 336, 798, 860, 861, 1119, 1120, 1121, 1122, 1123, 1124, 1127, 1129, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142], "enea": [1, 3, 140], "os": [1, 3, 140], "nach": [1, 3, 4, 5, 148, 149, 153, 154, 159, 163, 167, 183, 184, 190, 228, 229, 235, 335, 795, 1119, 1135], "linux": [1, 3, 4, 6, 24, 37, 39, 43, 59, 61, 62, 63, 65, 72, 73, 74, 78, 84, 85, 86, 87, 98, 103, 104, 106, 120, 125, 132, 135, 136, 137, 139, 141, 142, 143, 147, 150, 151, 152, 157, 164, 167, 172, 179, 201, 202, 209, 215, 218, 225, 228, 229, 232, 237, 240, 245, 247, 249, 258, 265, 267, 268, 284, 290, 303, 314, 316, 317, 318, 319, 323, 324, 330, 331, 334, 336, 378, 400, 408, 417, 420, 437, 448, 462, 490, 491, 492, 493, 494, 495, 496, 497, 500, 501, 502, 528, 542, 709, 715, 724, 725, 726, 727, 729, 730, 732, 733, 735, 737, 738, 740, 742, 743, 744, 745, 746, 747, 749, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 777, 778, 779, 782, 783, 784, 787, 788, 790, 791, 793, 794, 796, 798, 799, 800, 801, 807, 809, 811, 814, 817, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 833, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 853, 861, 863, 866, 870, 872, 873, 874, 878, 880, 881, 882, 883, 884, 885, 886, 888, 889, 890, 893, 895, 896, 897, 898, 899, 900, 905, 907, 908, 911, 912, 913, 914, 916, 924, 927, 930, 932, 937, 940, 941, 944, 947, 948, 949, 951, 952, 953, 954, 955, 956, 957, 958, 959, 961, 962, 963, 964, 965, 995, 997, 1059, 1084, 1105, 1108, 1121, 1122, 1123, 1124, 1127, 1129, 1132, 1136], "beteiligt": [1, 23], "seit": [1, 5, 23, 167, 173, 183, 188, 1120, 1129], "april": [1, 3, 23], "selbstst\u00e4ndig": [1, 23], "fh": [1, 23, 97, 106, 109, 110, 111, 113, 123, 145, 192, 314, 316, 317, 322, 323, 325, 490, 501, 522, 542, 550, 565, 625, 639, 726, 803, 807, 822, 828, 847, 853, 869, 954, 957, 1114], "joanneum": [1, 123, 145, 1114], "kapfenberg": 1, "2011": [1, 3, 5, 136, 137, 152, 265, 267, 334, 338, 543, 642], "2015": [1, 23, 200, 226, 264, 334, 649, 1071], "lehrveranstaltung": [1, 318], "im": [1, 3, 5, 8, 29, 32, 38, 90, 148, 149, 158, 159, 163, 167, 172, 173, 175, 176, 179, 181, 184, 185, 188, 190, 194, 196, 197, 203, 204, 207, 210, 211, 213, 216, 219, 223, 224, 225, 231, 232, 234, 236, 237, 239, 252, 254, 259, 261, 262, 266, 268, 269, 272, 273, 275, 278, 279, 281, 290, 291, 293, 294, 303, 304, 305, 306, 307, 308, 317, 322, 726, 972, 994, 1028, 1029, 1030, 1040, 1043, 1051, 1052, 1054, 1055, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1076, 1084, 1085, 1107, 1120, 1123, 1129, 1131, 1135, 1136, 1138, 1139, 1142, 1143], "lehrgang": 1, "softwar": [1, 5, 13, 23, 24, 41, 46, 47, 51, 53, 55, 56, 68, 73, 74, 78, 85, 97, 104, 113, 119, 139, 147, 150, 151, 156, 167, 173, 179, 183, 192, 209, 215, 216, 225, 226, 228, 253, 265, 267, 268, 269, 282, 314, 335, 336, 402, 434, 442, 443, 452, 454, 620, 706, 726, 727, 757, 804, 817, 869, 870, 877, 878, 893, 945, 954, 957, 1026, 1073, 1127, 1128, 1130, 1143], "avl": [1, 23, 137], "2018": [1, 23, 143, 215, 647], "2019": [1, 40, 121, 136, 178, 200, 249, 273, 291, 294, 334, 520, 647, 688, 855, 1070, 1071, 1073], "linuxexpert": [1, 23], "architekt": [1, 23], "build": [1, 4, 17, 28, 40, 42, 44, 50, 72, 73, 74, 78, 84, 87, 97, 104, 108, 113, 124, 130, 136, 140, 145, 146, 152, 156, 167, 170, 180, 201, 218, 221, 245, 247, 249, 256, 265, 267, 270, 277, 282, 283, 320, 323, 324, 335, 336, 339, 380, 393, 408, 420, 432, 433, 434, 436, 438, 448, 462, 468, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 520, 525, 528, 542, 633, 670, 690, 700, 714, 726, 730, 733, 735, 738, 740, 742, 743, 750, 752, 753, 754, 758, 764, 769, 770, 775, 777, 782, 788, 791, 794, 830, 869, 878, 879, 903, 904, 905, 906, 920, 939, 943, 947, 950, 954, 957, 958, 962, 1009, 1020, 1026, 1100, 1105, 1111, 1115, 1120, 1125, 1127], "manag": [1, 5, 14, 23, 29, 63, 68, 72, 73, 74, 78, 94, 97, 108, 139, 141, 150, 155, 156, 164, 167, 169, 172, 176, 179, 180, 186, 187, 191, 196, 197, 200, 202, 212, 218, 221, 226, 228, 229, 235, 238, 253, 260, 267, 269, 270, 273, 274, 277, 320, 321, 323, 330, 331, 335, 336, 397, 414, 425, 443, 456, 514, 520, 545, 550, 639, 650, 651, 653, 682, 687, 698, 699, 701, 702, 703, 707, 715, 723, 725, 726, 744, 750, 757, 759, 782, 788, 791, 794, 804, 808, 809, 864, 869, 878, 886, 898, 931, 932, 945, 961, 972, 981, 1000, 1024, 1028, 1069, 1070, 1071, 1072, 1073, 1077, 1085, 1087, 1100, 1102, 1104, 1105, 1109, 1114, 1125, 1127, 1130, 1137], "schittstel": 1, "zum": [1, 3, 5, 148, 149, 158, 163, 167, 173, 183, 196, 203, 220, 280, 335, 1120, 1122, 1123, 1124, 1136, 1139, 1141], "weiser": 1, "alter": [1, 175, 176, 226, 249, 335, 546, 554, 860, 1071], "mann": 1, "2020": [1, 23, 113, 120, 121, 136, 137, 143, 147, 148, 152, 155, 159, 178, 180, 215, 334, 501, 502, 650, 663, 800, 801, 880, 889, 907, 996, 1070, 1075, 1114, 1136], "embed": [1, 3, 4, 5, 23, 72, 87, 104, 123, 135, 136, 137, 140, 142, 153, 156, 180, 182, 205, 248, 315, 320, 322, 334, 336, 708, 726, 761, 773, 811, 833, 879, 890, 931, 947, 974, 1015, 1121, 1122, 1123, 1127, 1131, 1132, 1136, 1140], "comput": [1, 23, 28, 29, 32, 72, 84, 87, 101, 117, 123, 143, 182, 232, 241, 265, 267, 291, 292, 302, 315, 317, 320, 322, 334, 343, 416, 421, 422, 447, 544, 554, 557, 563, 596, 692, 705, 717, 726, 795, 802, 870, 878, 880, 881, 888, 915, 929, 932, 996, 1084, 1100, 1130], "electron": [1, 145, 335, 878], "engin": [1, 143, 216, 218, 284, 287, 335, 406, 410, 414, 424, 455, 488, 496, 878, 994, 1143], "kontakt": [2, 23], "curriculum": [2, 5], "vita": [2, 5], "skill": [2, 85, 136, 931, 994], "projekt": [2, 137, 158, 1132, 1136], "stand": [3, 150, 199, 320, 773, 879, 963, 1079], "j\u00e4nner": [3, 23], "2014": [3, 137, 158, 179, 215, 249, 264, 273, 875, 1071], "devicedriv": 3, "die": [3, 5, 7, 8, 37, 45, 59, 62, 64, 136, 149, 154, 157, 158, 159, 160, 163, 167, 173, 175, 183, 184, 186, 188, 190, 193, 194, 196, 199, 203, 212, 219, 222, 225, 228, 231, 232, 235, 260, 288, 312, 317, 318, 322, 335, 336, 470, 484, 860, 861, 933, 1071, 1119, 1120, 1121, 1122, 1123, 1124, 1129, 1131, 1135, 1136, 1137, 1138, 1139, 1141, 1142, 1143], "pci": [3, 187, 726, 750, 751, 812, 869, 877, 913, 1130], "hardwar": [3, 5, 65, 69, 72, 73, 74, 78, 80, 117, 119, 125, 129, 139, 140, 143, 153, 156, 215, 216, 228, 265, 268, 269, 290, 294, 303, 318, 319, 320, 335, 336, 352, 363, 366, 402, 420, 424, 494, 495, 496, 497, 501, 717, 726, 753, 773, 804, 809, 810, 869, 870, 871, 872, 875, 878, 894, 896, 897, 910, 913, 945, 1119, 1128, 1130, 1136], "ein": [3, 5, 7, 8, 37, 148, 149, 154, 157, 158, 159, 160, 163, 165, 167, 175, 179, 180, 182, 183, 184, 186, 188, 190, 191, 193, 194, 196, 197, 199, 203, 205, 209, 212, 213, 219, 220, 222, 225, 228, 229, 231, 232, 235, 243, 250, 253, 260, 270, 274, 280, 288, 292, 309, 312, 317, 322, 335, 336, 380, 508, 799, 860, 861, 933, 1001, 1119, 1120, 1121, 1122, 1123, 1124, 1127, 1129, 1132, 1135, 1137, 1138, 1139, 1140, 1141, 1142, 1143], "messger\u00e4teherstel": 3, "de": [3, 5, 7, 8, 32, 37, 136, 148, 150, 154, 157, 158, 163, 167, 173, 175, 183, 184, 193, 194, 203, 219, 228, 231, 235, 317, 334, 411, 704, 795, 797, 861, 874, 1070, 1096, 1119, 1120, 1121, 1122, 1124, 1129, 1131, 1135, 1136, 1138, 1139, 1141, 1142, 1143], "untenstehenden": 3, "zeit": [3, 5, 149, 184, 1120, 1122, 1142], "dato": 3, "ort": 3, "raum": [3, 163], "anbindung": 3, "verschieden": [3, 23, 173, 335, 1121, 1122, 1123, 1129, 1136, 1141], "hardwareinterfac": 3, "i2c": [3, 4, 65, 78, 81, 85, 125, 128, 140, 141, 167, 180, 256, 320, 323, 328, 335, 441, 471, 530, 531, 539, 726, 773, 869, 876, 878, 913, 1129, 1136], "spi": [3, 4, 78, 140, 158, 167, 335, 530, 531, 539, 871, 872, 873, 878, 913, 1129, 1136], "can": [3, 12, 17, 29, 57, 58, 68, 75, 80, 83, 108, 110, 111, 113, 114, 134, 137, 139, 140, 141, 142, 144, 145, 146, 147, 151, 155, 156, 157, 160, 162, 164, 168, 169, 170, 172, 176, 177, 178, 192, 199, 201, 209, 212, 215, 216, 218, 225, 228, 232, 235, 238, 256, 259, 262, 264, 265, 267, 270, 274, 280, 282, 298, 303, 309, 311, 314, 317, 322, 328, 335, 340, 342, 346, 350, 354, 360, 363, 374, 378, 384, 385, 388, 395, 400, 402, 406, 407, 408, 409, 410, 413, 414, 418, 419, 420, 424, 426, 427, 429, 435, 437, 438, 444, 449, 452, 453, 456, 463, 464, 468, 469, 470, 482, 486, 495, 502, 528, 534, 544, 546, 551, 553, 554, 559, 560, 567, 578, 582, 598, 599, 604, 613, 617, 620, 624, 629, 634, 636, 637, 638, 647, 649, 652, 653, 654, 655, 659, 664, 688, 691, 692, 694, 700, 701, 704, 705, 706, 709, 712, 714, 722, 724, 726, 732, 744, 759, 763, 767, 771, 773, 778, 781, 787, 799, 800, 801, 804, 805, 806, 808, 810, 811, 812, 813, 815, 816, 818, 823, 825, 827, 829, 831, 833, 834, 869, 870, 876, 877, 878, 879, 882, 884, 886, 888, 889, 890, 897, 899, 903, 907, 916, 918, 929, 932, 933, 941, 945, 949, 959, 964, 966, 968, 969, 970, 971, 973, 974, 975, 978, 981, 982, 983, 990, 991, 993, 994, 999, 1002, 1003, 1006, 1011, 1013, 1019, 1021, 1023, 1026, 1028, 1035, 1045, 1056, 1066, 1067, 1068, 1070, 1076, 1078, 1083, 1084, 1090, 1092, 1097, 1100, 1105, 1125, 1127, 1129, 1136, 1140, 1142], "custom": [3, 27, 29, 32, 39, 97, 125, 129, 133, 136, 140, 143, 145, 146, 152, 156, 169, 177, 179, 181, 209, 215, 218, 225, 228, 229, 256, 258, 265, 267, 292, 303, 304, 305, 306, 308, 316, 317, 335, 424, 429, 448, 462, 490, 493, 496, 498, 500, 520, 542, 544, 550, 615, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 651, 670, 672, 682, 687, 698, 707, 715, 723, 725, 726, 746, 773, 889, 920, 945, 1070, 1113], "firmwar": [3, 128, 140, 141, 143, 150, 159, 870, 877, 913], "kunden": [3, 5, 23, 154, 258, 335, 1119], "dezemb": [3, 23], "2012": [3, 23, 136, 152, 215], "backport": 3, "integr": [3, 16, 23, 38, 43, 120, 137, 145, 147, 155, 167, 172, 192, 282, 291, 319, 324, 325, 326, 414, 440, 443, 447, 659, 746, 755, 812, 833, 870, 872, 878, 879, 1096, 1105, 1108, 1127, 1129, 1136], "touchcontrol": 3, "driver": [3, 5, 78, 85, 125, 128, 140, 143, 145, 153, 156, 157, 256, 318, 319, 334, 336, 420, 726, 727, 729, 730, 732, 733, 734, 735, 736, 737, 738, 740, 742, 743, 744, 745, 747, 748, 749, 752, 753, 754, 756, 757, 758, 760, 762, 764, 766, 767, 768, 770, 772, 773, 774, 777, 779, 782, 784, 788, 791, 794, 804, 809, 812, 869, 878, 879, 899, 913, 1120, 1140, 1142], "systemintegrationsfirma": 3, "stuttgart": 3, "mai": [3, 43, 65, 108, 110, 111, 114, 119, 128, 140, 144, 146, 151, 155, 199, 209, 215, 222, 225, 228, 232, 238, 265, 274, 350, 357, 359, 363, 372, 429, 433, 466, 551, 604, 702, 712, 716, 724, 755, 757, 765, 773, 806, 815, 820, 821, 833, 878, 879, 901, 903, 904, 905, 907, 962, 963, 971, 1013, 1096, 1107], "2013": [3, 23, 136, 334], "python": [3, 4, 6, 7, 10, 13, 21, 23, 24, 28, 29, 40, 61, 65, 72, 74, 78, 85, 91, 92, 123, 124, 135, 136, 137, 153, 155, 156, 159, 161, 169, 184, 185, 189, 192, 193, 194, 196, 199, 201, 208, 209, 215, 224, 225, 228, 232, 235, 256, 258, 267, 303, 304, 305, 306, 307, 308, 312, 313, 316, 318, 319, 324, 325, 326, 330, 331, 332, 334, 336, 348, 500, 641, 659, 678, 690, 696, 713, 726, 727, 833, 855, 869, 871, 876, 877, 918, 966, 967, 968, 969, 971, 973, 974, 976, 977, 978, 980, 981, 982, 983, 986, 990, 991, 997, 1001, 1005, 1006, 1012, 1014, 1016, 1017, 1019, 1022, 1023, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1072, 1073, 1074, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1086, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1098, 1103, 1104, 1105, 1107, 1108, 1109, 1125, 1129, 1135, 1136, 1143], "programm": [3, 59, 62, 158, 159, 163, 172, 183, 188, 192, 196, 228, 253, 265, 266, 267, 294, 312, 318, 335, 384, 397, 404, 410, 414, 544, 546, 547, 616, 650, 684, 687, 809, 815, 866, 878, 899, 933, 994, 995, 999, 1021, 1078, 1085, 1099, 1122, 1125, 1130, 1138, 1139, 1141, 1143], "zur": [3, 148, 163, 167, 175, 185, 196, 312, 317, 322, 335, 933, 1120, 1122, 1123, 1124, 1136, 1141, 1142, 1143], "IT": [3, 256, 258, 335, 548], "wie": [3, 5, 148, 149, 157, 158, 159, 163, 167, 173, 175, 183, 188, 191, 198, 222, 312, 335, 1119, 1120, 1122, 1123, 1124, 1129, 1132, 1136, 1137, 1139, 1141, 1142], "beispiel": [3, 5, 23, 159, 183, 184, 206, 212, 233, 335, 1122, 1123, 1124, 1135, 1136, 1138, 1139, 1141, 1143], "e": [3, 5, 7, 32, 37, 38, 42, 48, 63, 97, 113, 120, 143, 145, 146, 147, 148, 149, 151, 154, 155, 157, 158, 159, 161, 162, 163, 167, 173, 175, 183, 184, 188, 190, 192, 193, 196, 199, 200, 201, 204, 205, 209, 212, 213, 215, 218, 220, 222, 225, 228, 229, 232, 235, 238, 241, 250, 253, 256, 257, 260, 262, 264, 270, 274, 280, 292, 310, 311, 312, 313, 317, 322, 335, 339, 356, 359, 363, 366, 369, 374, 384, 387, 402, 406, 410, 413, 414, 426, 427, 429, 432, 438, 439, 443, 452, 456, 464, 469, 473, 485, 498, 501, 502, 537, 544, 548, 549, 559, 567, 578, 598, 616, 617, 631, 636, 643, 646, 650, 653, 664, 670, 684, 705, 714, 716, 717, 724, 732, 751, 792, 799, 800, 801, 810, 811, 815, 816, 817, 818, 833, 855, 862, 877, 878, 879, 890, 899, 909, 911, 929, 932, 933, 944, 945, 947, 949, 950, 961, 966, 970, 978, 990, 992, 993, 1011, 1016, 1017, 1040, 1080, 1084, 1089, 1092, 1095, 1098, 1099, 1105, 1107, 1119, 1120, 1122, 1124, 1128, 1129, 1135, 1136, 1138, 1139, 1141, 1143], "bill": [3, 260], "email": [3, 32, 42, 122, 141, 147, 151, 156, 180, 196, 260, 328, 886, 1084, 1088, 1089, 1090, 1092, 1093, 1094], "kommunik": [3, 23, 1136, 1139, 1141, 1142, 1143], "extrakt": 3, "attach": [3, 161, 209, 215, 225, 228, 447, 755, 878, 931, 1078], "signaturverifik": 3, "informationssystem": 3, "februar": 3, "juni": 3, "vollautomatisch": 3, "instal": [3, 29, 32, 45, 60, 90, 97, 98, 104, 113, 119, 124, 136, 137, 140, 141, 145, 167, 170, 176, 177, 179, 181, 192, 207, 209, 210, 213, 215, 218, 223, 225, 228, 229, 237, 240, 249, 252, 259, 262, 265, 266, 267, 272, 273, 277, 278, 279, 283, 284, 294, 355, 370, 379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 430, 431, 437, 448, 462, 490, 491, 492, 493, 494, 495, 496, 497, 500, 507, 509, 514, 542, 550, 565, 568, 571, 587, 593, 597, 606, 609, 610, 615, 624, 625, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 644, 651, 682, 698, 707, 715, 723, 725, 726, 746, 753, 769, 773, 774, 812, 869, 872, 877, 879, 944, 946, 949, 952, 954, 957, 978, 994, 998, 1024, 1069, 1082, 1089, 1100, 1101, 1108, 1113, 1115], "serveranlagen": 3, "herstel": 3, "radar\u00fcberwachungssystemen": 3, "septemb": 3, "unterschleissheim": 3, "m\u00fcnchen": 3, "instandhaltungsarbeiten": 3, "hauseigenen": 3, "system": [3, 5, 14, 23, 37, 45, 73, 78, 80, 97, 101, 102, 108, 110, 111, 113, 136, 137, 140, 141, 146, 147, 151, 153, 155, 156, 157, 158, 164, 167, 169, 170, 180, 192, 197, 200, 207, 209, 212, 213, 217, 218, 223, 225, 226, 228, 235, 238, 244, 245, 246, 253, 255, 260, 265, 270, 273, 274, 276, 314, 317, 318, 319, 320, 321, 322, 328, 330, 331, 334, 336, 370, 379, 386, 390, 392, 396, 399, 403, 410, 411, 412, 416, 417, 421, 422, 424, 429, 432, 434, 447, 448, 455, 468, 490, 501, 542, 577, 620, 644, 682, 715, 716, 717, 723, 724, 725, 726, 729, 732, 744, 746, 765, 771, 773, 803, 804, 805, 806, 807, 808, 809, 811, 812, 813, 816, 817, 819, 820, 821, 823, 824, 825, 826, 827, 830, 833, 859, 860, 864, 869, 873, 878, 879, 880, 885, 891, 895, 896, 897, 898, 900, 903, 905, 908, 909, 911, 912, 913, 914, 924, 927, 930, 932, 933, 935, 941, 944, 945, 947, 948, 949, 970, 971, 982, 998, 1026, 1071, 1098, 1107, 1121, 1128, 1130, 1131], "auf": [3, 5, 8, 23, 64, 136, 141, 149, 154, 157, 158, 159, 163, 167, 173, 175, 183, 184, 188, 194, 196, 203, 204, 219, 222, 229, 231, 243, 312, 317, 318, 322, 335, 861, 1119, 1120, 1121, 1122, 1123, 1124, 1129, 1131, 1132, 1135, 1139, 1142, 1143], "gentoo": [3, 136, 139, 152, 420, 1120], "updat": [3, 44, 139, 141, 155, 159, 187, 212, 220, 235, 245, 247, 253, 260, 265, 267, 274, 280, 292, 317, 324, 499, 501, 562, 783, 931, 961, 962, 963, 964, 965, 1019, 1021, 1095, 1108, 1114, 1137], "betriebssystem": [3, 1129, 1131, 1136, 1138], "usb": [3, 4, 63, 139, 140, 141, 143, 335, 413, 751, 804, 1129], "touchscreen": 3, "cheat": [3, 33, 65, 180, 192, 417, 670, 833], "detect": [3, 32, 106, 160, 172, 382, 385, 419, 427, 525, 552, 655, 680, 701, 767, 878, 879, 905, 914, 937, 948, 949, 1050], "m\u00fcnzeinwurf": 3, "via": [3, 17, 63, 85, 116, 140, 143, 147, 152, 161, 176, 177, 199, 205, 226, 228, 256, 259, 262, 265, 274, 291, 316, 323, 335, 444, 449, 469, 554, 578, 689, 703, 726, 753, 773, 776, 804, 809, 815, 830, 866, 877, 888, 889, 896, 903, 913, 934, 941, 959, 1025, 1125], "gpio": [3, 4, 59, 62, 65, 72, 73, 74, 78, 84, 113, 114, 116, 120, 137, 256, 265, 307, 320, 322, 326, 726, 750, 775, 777, 782, 788, 791, 794, 869, 874, 878, 910, 914, 1129, 1136], "interrupt": [3, 63, 86, 110, 111, 158, 187, 256, 420, 726, 744, 750, 765, 767, 768, 770, 771, 775, 776, 777, 781, 782, 785, 788, 791, 792, 794, 804, 806, 809, 812, 869, 874, 891, 893, 894, 895, 896, 897, 898, 910, 912, 913, 929, 932, 933, 935, 944, 945, 1129, 1130, 1136], "m\u00e4rz": 3, "firma": [3, 154, 163, 258, 334, 1119, 1129, 1136], "spielo": 3, "intern": [3, 57, 84, 114, 115, 119, 173, 178, 201, 209, 212, 213, 215, 225, 228, 259, 262, 291, 310, 324, 353, 383, 398, 413, 429, 438, 443, 557, 598, 645, 688, 720, 751, 759, 785, 877, 878, 879, 920, 971, 975, 1019, 1028, 1084, 1089], "datenkonvertierung": 3, "einem": [3, 5, 23, 148, 158, 159, 163, 167, 173, 175, 183, 184, 188, 190, 196, 222, 228, 235, 250, 317, 318, 322, 335, 1120, 1122, 1124, 1129, 1138, 1142, 1143], "konvertierung": [3, 23, 1122], "asterix": 3, "format": [3, 17, 23, 29, 30, 31, 42, 51, 53, 54, 55, 56, 90, 115, 122, 143, 159, 160, 162, 163, 170, 177, 179, 181, 184, 188, 197, 200, 207, 208, 210, 216, 221, 222, 226, 228, 229, 234, 237, 238, 249, 252, 253, 258, 272, 273, 274, 278, 279, 281, 287, 290, 291, 294, 340, 341, 346, 382, 426, 726, 727, 773, 804, 810, 833, 893, 947, 986, 994, 1030, 1040, 1043, 1051, 1052, 1054, 1055, 1064, 1065, 1066, 1067, 1069, 1071, 1076, 1087, 1100, 1135, 1139], "zweck": [3, 173, 1136], "extern": [3, 13, 21, 23, 29, 63, 85, 139, 143, 147, 169, 172, 179, 201, 202, 207, 218, 223, 228, 237, 258, 273, 283, 291, 317, 322, 350, 354, 380, 382, 384, 386, 392, 396, 399, 403, 407, 412, 416, 421, 422, 431, 432, 528, 644, 682, 688, 723, 725, 726, 730, 733, 735, 738, 740, 743, 746, 750, 751, 752, 754, 758, 764, 770, 773, 777, 782, 783, 788, 791, 794, 869, 879, 929, 995, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1069, 1071, 1112, 1114, 1122, 1129, 1136], "datenquellen": 3, "export": [3, 40, 61, 117, 119, 140, 151, 176, 201, 202, 205, 207, 303, 688, 729, 805, 834, 870, 878, 911, 913, 914, 959, 961, 964, 1062, 1079], "daten": [3, 173, 175, 188, 198, 203, 288, 933, 1142], "soap": [3, 32], "ip": [3, 122, 144, 147, 157, 164, 192, 314, 317, 323, 328, 525, 537, 872, 890, 896, 932, 1100, 1129, 1136, 1140, 1142], "kamera": 3, "einen": [3, 5, 23, 148, 149, 159, 163, 167, 173, 175, 183, 196, 232, 335, 603, 860, 1119, 1120, 1121, 1122, 1124, 1131, 1139, 1141, 1142, 1143], "videomautsystemen": 3, "implement": [3, 16, 23, 24, 28, 42, 50, 53, 54, 55, 59, 62, 63, 69, 82, 84, 85, 97, 110, 111, 113, 116, 118, 120, 125, 140, 142, 145, 160, 168, 176, 178, 196, 201, 202, 209, 215, 219, 222, 223, 225, 226, 230, 232, 247, 253, 262, 265, 266, 267, 268, 269, 274, 290, 294, 304, 305, 310, 317, 328, 351, 353, 385, 395, 397, 398, 414, 424, 429, 436, 439, 440, 442, 443, 444, 446, 447, 448, 451, 452, 454, 463, 464, 468, 469, 470, 485, 489, 491, 492, 493, 494, 495, 497, 498, 499, 503, 504, 505, 506, 508, 510, 515, 518, 519, 543, 545, 549, 553, 561, 562, 563, 564, 569, 598, 604, 613, 615, 616, 617, 624, 632, 633, 634, 635, 636, 637, 638, 639, 645, 650, 651, 652, 654, 664, 679, 680, 681, 682, 688, 689, 691, 700, 704, 706, 708, 714, 720, 721, 724, 725, 726, 732, 739, 742, 759, 787, 804, 806, 810, 812, 870, 877, 879, 890, 893, 899, 915, 920, 941, 965, 969, 970, 975, 976, 977, 983, 987, 1011, 1046, 1050, 1059, 1066, 1071, 1080, 1083, 1087, 1125, 1130], "gige": 3, "vision": [3, 258, 335], "clientlibrari": 3, "softwarebasiert": 3, "kamerasimul": 3, "t\u00e4tigkeiten": 3, "hardwareteil": 3, "rs232": [3, 4, 180], "lagesensor": 3, "anpassung": 3, "cryptsetup": 3, "filesystemverschl\u00fcsselung": 3, "anforderungen": [3, 1119], "applik": [3, 157], "august": [3, 23], "logistik": 3, "autom": [3, 179, 192, 223, 237, 279, 335, 870, 881, 888, 961, 963, 971, 1071], "beteiligten": 3, "protokol": [3, 4, 1129, 1136, 1141], "server": [3, 122, 144, 147, 153, 159, 180, 192, 203, 212, 228, 235, 238, 249, 253, 260, 270, 274, 420, 466, 480, 799, 873, 886, 888, 896, 941, 1083, 1100, 1117, 1136], "zu": [3, 6, 8, 148, 149, 154, 157, 158, 163, 167, 173, 184, 185, 188, 190, 194, 203, 204, 219, 220, 229, 231, 235, 243, 250, 317, 322, 335, 795, 1119, 1120, 1121, 1122, 1123, 1124, 1129, 1132, 1135, 1136, 1137, 1138, 1139, 1141, 1142, 1143], "sp": [3, 652], "tcp": [3, 140, 147, 164, 180, 285, 871, 896, 1087, 1129, 1136, 1140, 1142], "autonomen": 3, "fahrzeugen": 3, "kundenapplikationen": 3, "autonom": [3, 182, 870, 1078], "fahrzeug": 3, "mikrocontrol": 3, "seriel": [3, 4, 1129, 1131], "beratend": 3, "versionskontrol": [3, 23, 153, 1137], "architektur": [3, 23, 153, 335], "2008": [3, 151, 215, 996], "ylog": [3, 23], "gmbh": [3, 23, 426], "dobl": [3, 23], "heizsystem": 3, "parametrisierung": 3, "anlag": [3, 188], "mit": [3, 4, 5, 7, 8, 23, 136, 148, 149, 157, 158, 159, 163, 165, 167, 175, 179, 180, 184, 185, 186, 189, 190, 193, 194, 196, 203, 204, 205, 206, 219, 228, 229, 231, 232, 235, 243, 274, 313, 317, 318, 322, 334, 336, 860, 1026, 1119, 1121, 1122, 1123, 1124, 1129, 1131, 1135, 1137, 1138, 1139, 1141, 1142, 1143], "iar": 3, "arm": [3, 139, 151, 192, 358, 753, 773, 774, 877, 890, 944, 947, 948, 959], "workbench": 3, "segger": [3, 140], "embo": [3, 140], "vba": 3, "excel": [3, 78, 141, 179, 205, 1062, 1076], "verteilung": 3, "microsoft": [3, 11, 146, 147, 150, 152, 156, 167, 175, 245, 247, 256, 265, 267, 335, 337, 385, 401, 812, 1062, 1119], "net": [3, 23, 39, 43, 113, 120, 126, 157, 158, 183, 235, 241, 425, 501, 502, 767, 773, 800, 801, 861, 896, 1084], "versionskontrollinfrastruktur": 3, "assoziiert": [3, 159, 1138, 1139], "script": [3, 38, 61, 130, 133, 136, 139, 141, 146, 147, 156, 171, 179, 180, 182, 207, 209, 215, 225, 228, 255, 256, 276, 308, 317, 334, 336, 418, 426, 437, 688, 773, 815, 818, 833, 961, 972, 998, 999, 1023, 1026, 1107, 1120, 1131], "shell": [3, 4, 32, 97, 99, 101, 104, 113, 156, 160, 179, 180, 182, 220, 228, 246, 255, 276, 302, 303, 316, 317, 318, 319, 322, 334, 336, 338, 420, 426, 448, 462, 490, 491, 492, 493, 494, 495, 496, 497, 500, 542, 715, 724, 725, 726, 773, 796, 800, 801, 802, 803, 806, 807, 808, 810, 811, 814, 815, 817, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 833, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 848, 849, 850, 851, 861, 862, 863, 866, 869, 870, 880, 881, 882, 883, 884, 892, 898, 899, 900, 908, 910, 913, 914, 924, 927, 930, 932, 947, 949, 951, 952, 953, 954, 955, 956, 957, 958, 961, 997, 998, 1000, 1021, 1023, 1049, 1112, 1120, 1127, 1129, 1131, 1132, 1136, 1137, 1138, 1140], "oststeiermark": 3, "erweiterung": [3, 335], "buildumgebung": 3, "cmake": [3, 4, 5, 44, 65, 72, 73, 74, 78, 87, 97, 106, 113, 137, 146, 151, 156, 167, 170, 202, 218, 245, 247, 265, 267, 320, 334, 336, 337, 428, 430, 432, 433, 436, 437, 438, 439, 440, 448, 462, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 542, 562, 726, 727, 869, 957, 1110, 1132], "www": [3, 20, 23, 59, 62, 85, 136, 146, 155, 157, 177, 180, 181, 226, 253, 337, 704, 729, 744, 750, 774, 913, 1082, 1084, 1098], "org": [3, 4, 23, 61, 126, 132, 136, 139, 143, 147, 151, 157, 159, 170, 180, 183, 200, 209, 215, 216, 225, 228, 232, 253, 266, 293, 321, 337, 729, 744, 746, 750, 773, 774, 913, 959, 961, 995, 1016, 1026, 1065, 1082, 1100, 1101], "confix": [3, 137], "2009": [3, 1071], "schulungen": [3, 6, 23, 136, 137, 154], "dem": [3, 5, 8, 23, 148, 149, 157, 158, 159, 163, 167, 180, 184, 194, 203, 206, 219, 220, 229, 231, 243, 274, 317, 322, 335, 336, 933, 1119, 1120, 1121, 1123, 1124, 1129, 1131, 1138, 1139, 1141], "umkrei": 3, "softwareentwicklung": [3, 4, 153], "nicht": [3, 5, 7, 23, 37, 148, 149, 154, 157, 163, 167, 184, 185, 188, 193, 196, 215, 220, 222, 228, 235, 241, 260, 270, 312, 317, 335, 861, 1120, 1121, 1122, 1123, 1124, 1129, 1131, 1132, 1135, 1136, 1137, 1138, 1141, 1142, 1143], "from": [3, 5, 8, 13, 21, 27, 33, 34, 35, 36, 39, 44, 53, 54, 56, 61, 63, 65, 68, 73, 74, 78, 81, 82, 84, 86, 90, 97, 98, 99, 101, 102, 103, 106, 109, 110, 111, 113, 114, 119, 120, 122, 129, 133, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 153, 155, 156, 157, 159, 160, 162, 163, 168, 172, 173, 176, 177, 179, 180, 181, 182, 184, 190, 191, 192, 197, 199, 200, 201, 202, 204, 206, 207, 209, 213, 215, 216, 222, 223, 225, 226, 229, 230, 232, 235, 237, 240, 244, 245, 247, 249, 250, 252, 255, 258, 262, 265, 266, 267, 268, 269, 272, 274, 276, 277, 278, 279, 284, 287, 290, 292, 294, 295, 298, 302, 303, 304, 305, 306, 307, 308, 310, 314, 316, 317, 319, 320, 321, 322, 324, 325, 338, 339, 345, 347, 348, 352, 355, 358, 361, 362, 363, 366, 370, 377, 379, 380, 385, 386, 392, 393, 396, 399, 400, 402, 403, 404, 406, 408, 412, 413, 414, 416, 420, 421, 422, 424, 425, 427, 428, 432, 435, 436, 437, 438, 440, 442, 443, 444, 449, 453, 463, 467, 469, 485, 486, 487, 488, 490, 493, 496, 498, 499, 500, 501, 502, 520, 528, 531, 537, 542, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 557, 559, 560, 562, 563, 573, 577, 578, 595, 607, 614, 617, 619, 625, 628, 635, 639, 642, 643, 644, 646, 650, 655, 659, 664, 670, 676, 681, 682, 694, 696, 700, 701, 702, 703, 706, 708, 714, 716, 721, 722, 723, 724, 725, 726, 727, 728, 729, 732, 742, 744, 748, 753, 755, 761, 765, 773, 774, 775, 776, 781, 783, 785, 793, 798, 799, 800, 801, 804, 805, 808, 809, 810, 812, 815, 816, 817, 823, 825, 830, 832, 833, 834, 835, 836, 838, 839, 852, 857, 865, 866, 869, 870, 872, 873, 874, 875, 878, 879, 882, 886, 890, 893, 894, 895, 896, 897, 900, 903, 905, 906, 908, 910, 913, 916, 921, 926, 927, 932, 933, 935, 944, 945, 950, 959, 961, 963, 965, 970, 971, 972, 975, 978, 979, 980, 981, 982, 983, 986, 990, 993, 994, 995, 998, 999, 1002, 1005, 1014, 1017, 1018, 1020, 1021, 1024, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1072, 1073, 1074, 1075, 1077, 1079, 1081, 1083, 1084, 1085, 1086, 1087, 1091, 1092, 1093, 1096, 1098, 1099, 1100, 1102, 1104, 1105, 1107, 1109, 1112, 1114, 1117, 1128, 1135], "scratch": [3, 42, 172, 877, 1078], "mathia": [3, 1120], "kettner": [3, 136], "novemb": [3, 23], "bodenseo": [3, 1136], "singen": 3, "bodense": [3, 1136], "spielesoftwar": 3, "entwurf": [3, 23], "systemschnittstellen": [3, 1138], "driverentwicklung": [3, 153], "powerpc": 3, "vanilla": [3, 143], "kernel": [3, 4, 5, 43, 61, 65, 78, 110, 111, 122, 125, 129, 130, 135, 136, 137, 139, 140, 142, 150, 151, 152, 153, 156, 158, 173, 180, 212, 225, 228, 235, 238, 253, 256, 260, 270, 274, 303, 323, 334, 336, 378, 400, 413, 726, 727, 728, 729, 730, 732, 733, 734, 735, 736, 738, 740, 742, 743, 744, 745, 752, 753, 754, 756, 758, 759, 760, 761, 762, 763, 764, 766, 768, 769, 770, 771, 772, 777, 779, 782, 784, 785, 786, 787, 788, 791, 793, 794, 798, 804, 808, 810, 811, 812, 817, 861, 866, 869, 873, 875, 876, 878, 879, 890, 893, 896, 897, 899, 902, 913, 915, 916, 929, 931, 932, 935, 940, 944, 945, 947, 1120, 1129, 1140], "abteilungsleitung": 3, "ag": [3, 32, 145, 147, 159, 173, 215, 218, 260, 311, 409, 627, 628, 629, 630, 631, 633, 634, 635, 636, 637, 638, 639, 726, 798, 947, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096], "realtim": [4, 5, 78, 80, 153, 156, 157, 256, 318, 319, 330, 331, 336, 714, 716, 726, 771, 775, 778, 781, 792, 869, 873, 878, 879, 910, 929, 930, 932, 941, 1139, 1140, 1141], "hardwareintegr": [4, 153], "netzwerkprogrammierung": [4, 1129, 1142], "multithread": [4, 29, 59, 62, 72, 73, 74, 75, 78, 135, 136, 140, 142, 153, 172, 176, 207, 216, 226, 243, 265, 267, 326, 330, 331, 335, 336, 401, 411, 642, 670, 708, 725, 726, 918, 923, 932, 945, 946, 972, 981, 1069, 1071, 1125, 1129, 1140], "kerneldriv": 4, "rs485": 4, "In": [4, 6, 7, 23, 42, 44, 50, 63, 97, 103, 104, 106, 110, 111, 113, 128, 139, 140, 141, 142, 144, 146, 149, 151, 153, 155, 164, 168, 173, 178, 185, 188, 192, 193, 201, 209, 215, 218, 222, 225, 226, 228, 229, 232, 240, 256, 265, 267, 274, 283, 302, 312, 317, 334, 358, 372, 425, 427, 430, 431, 437, 442, 447, 448, 449, 462, 463, 464, 466, 468, 469, 485, 488, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 502, 507, 509, 542, 546, 549, 550, 553, 557, 558, 565, 568, 571, 587, 593, 597, 606, 609, 610, 615, 620, 624, 625, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 642, 643, 651, 655, 659, 664, 682, 689, 692, 698, 702, 707, 709, 715, 723, 725, 726, 734, 739, 746, 771, 773, 785, 802, 805, 806, 815, 817, 819, 823, 825, 827, 829, 844, 845, 869, 871, 877, 879, 882, 886, 889, 896, 904, 907, 910, 912, 920, 926, 931, 933, 941, 948, 952, 953, 954, 955, 957, 971, 978, 979, 995, 998, 1016, 1018, 1028, 1029, 1039, 1048, 1054, 1059, 1067, 1071, 1080, 1083, 1087, 1095, 1096, 1107, 1108, 1122, 1126, 1129, 1136, 1138], "userspac": [4, 81, 85, 86, 117, 120, 125, 140, 141, 212, 228, 235, 238, 253, 256, 260, 270, 274, 335, 413, 420, 726, 731, 742, 750, 751, 759, 765, 771, 775, 781, 785, 789, 791, 809, 811, 869, 872, 876, 879, 890, 910, 912, 913, 931, 935, 941, 1129, 1130], "host": [4, 108, 139, 146, 151, 314, 328, 753, 774, 871, 877, 948, 950, 959, 1082, 1087, 1100], "devic": [4, 33, 69, 72, 73, 74, 78, 84, 89, 114, 120, 125, 139, 140, 145, 158, 179, 187, 269, 318, 319, 320, 485, 501, 502, 712, 714, 716, 724, 726, 735, 742, 743, 744, 750, 751, 754, 755, 757, 764, 773, 775, 777, 782, 788, 789, 791, 792, 794, 806, 809, 812, 815, 855, 869, 878, 890, 893, 899, 907, 913, 932, 935, 936, 938, 941, 957, 982, 1120, 1129, 1130, 1131, 1136], "libusb": [4, 140], "gadgetf": [4, 140], "modbu": [4, 157], "verschiedenen": [4, 23, 167, 184, 1122, 1123, 1135, 1141], "rto": [4, 140], "yocto": [4, 125, 129, 130, 151, 726, 773, 867, 950, 1120], "programmiersprachen": [4, 8, 184, 194, 203, 219, 231, 1124, 1141], "incl": [4, 23, 137, 1131], "buildsystem": 4, "autoconf": [4, 61, 151], "automak": [4, 146, 151, 961, 1132], "meson": [4, 146, 151, 939, 943, 961], "ninja": [4, 32, 151, 427, 949, 961], "make": [4, 13, 17, 43, 44, 45, 61, 63, 65, 68, 70, 78, 80, 109, 125, 130, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 155, 156, 160, 161, 164, 168, 169, 172, 176, 177, 178, 182, 191, 192, 199, 201, 202, 213, 216, 228, 232, 245, 247, 269, 274, 277, 282, 291, 317, 320, 336, 369, 381, 385, 393, 400, 402, 404, 414, 420, 424, 427, 428, 429, 433, 435, 436, 438, 440, 442, 443, 444, 447, 463, 464, 469, 470, 487, 500, 502, 514, 520, 525, 531, 549, 560, 562, 564, 567, 579, 614, 616, 629, 642, 650, 655, 659, 696, 701, 702, 706, 716, 720, 721, 734, 741, 742, 746, 748, 751, 753, 773, 774, 790, 802, 812, 816, 818, 839, 852, 871, 872, 877, 878, 879, 900, 903, 905, 926, 929, 931, 933, 935, 940, 944, 947, 959, 961, 962, 963, 964, 968, 972, 975, 978, 990, 1021, 1028, 1041, 1049, 1076, 1089, 1127, 1128, 1138], "perl": [4, 151, 684, 862, 998], "leider": [4, 148, 215, 228, 235, 250, 1120, 1122], "objektorientiert": [4, 335, 1124], "ooa": 4, "ood": 4, "unit": [4, 72, 73, 74, 78, 82, 84, 97, 106, 113, 114, 142, 160, 175, 176, 179, 180, 191, 200, 218, 232, 257, 258, 265, 269, 282, 326, 330, 331, 407, 426, 427, 440, 466, 489, 495, 499, 528, 559, 688, 716, 717, 726, 727, 879, 931, 1013, 1021, 1071, 1083, 1106, 1127, 1128], "test": [4, 16, 17, 33, 40, 72, 73, 74, 78, 82, 84, 97, 113, 116, 118, 136, 140, 142, 143, 145, 146, 147, 153, 156, 159, 160, 166, 167, 168, 171, 175, 176, 179, 191, 197, 200, 213, 215, 216, 218, 228, 245, 247, 267, 274, 283, 326, 328, 330, 336, 337, 349, 411, 424, 425, 431, 435, 442, 443, 444, 445, 446, 447, 448, 451, 452, 454, 455, 464, 466, 467, 489, 491, 492, 493, 494, 495, 496, 497, 498, 500, 503, 504, 505, 506, 508, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 525, 537, 539, 544, 545, 546, 557, 558, 560, 561, 563, 564, 622, 633, 634, 635, 636, 637, 638, 647, 649, 652, 653, 654, 685, 691, 696, 700, 701, 702, 703, 705, 720, 721, 722, 724, 726, 727, 731, 763, 773, 776, 778, 781, 789, 833, 871, 872, 877, 900, 955, 963, 994, 1003, 1013, 1017, 1020, 1040, 1065, 1071, 1077, 1078, 1083, 1091, 1098, 1111, 1113, 1115, 1118, 1128], "driven": [4, 45, 71, 78, 82, 140, 153, 156, 167, 176, 191, 218, 256, 258, 284, 287, 336, 424, 451, 561, 563, 564, 931, 937, 938, 1096, 1105, 1128], "develop": [4, 5, 21, 45, 71, 73, 78, 80, 82, 103, 104, 116, 141, 143, 145, 146, 147, 151, 153, 156, 164, 167, 175, 176, 179, 184, 191, 197, 202, 203, 210, 212, 213, 218, 223, 248, 253, 258, 283, 284, 287, 316, 318, 319, 328, 334, 336, 402, 414, 420, 424, 429, 437, 448, 462, 490, 491, 492, 493, 494, 495, 496, 497, 500, 501, 502, 542, 561, 563, 564, 617, 641, 715, 725, 726, 727, 730, 733, 735, 736, 738, 740, 743, 745, 746, 747, 749, 752, 754, 756, 758, 760, 762, 764, 766, 768, 770, 772, 773, 774, 777, 779, 782, 784, 788, 791, 794, 803, 806, 807, 809, 812, 869, 871, 872, 892, 898, 900, 908, 910, 924, 927, 930, 932, 948, 949, 952, 953, 954, 955, 956, 958, 964, 996, 1026, 1028, 1071, 1105, 1106, 1127, 1140], "gui": [4, 114, 119, 139, 145, 151, 155, 218, 324, 325, 812, 915, 1138], "gtk": [4, 136], "qt": 4, "fast": [5, 43, 147, 155, 179, 201, 216, 218, 232, 241, 291, 414, 520, 692, 706, 1019, 1101, 1137], "40": [5, 7, 23, 106, 136, 143, 150, 162, 173, 183, 188, 190, 193, 196, 199, 204, 205, 209, 212, 215, 220, 222, 225, 228, 232, 235, 238, 240, 241, 250, 253, 257, 260, 270, 274, 280, 292, 309, 312, 348, 426, 447, 449, 463, 533, 534, 555, 701, 702, 703, 855, 874, 877, 878, 879, 959, 973, 974, 998], "jahren": 5, "wesentlichen": [5, 23, 175, 1121], "programmier": [5, 37, 334, 335, 1123, 1124, 1129, 1131, 1132, 1137, 1138], "bin": [5, 13, 23, 50, 63, 113, 114, 115, 117, 119, 136, 139, 141, 151, 160, 163, 173, 190, 200, 209, 212, 215, 220, 225, 228, 232, 235, 238, 250, 253, 258, 260, 270, 274, 317, 325, 427, 428, 429, 430, 432, 433, 434, 435, 438, 440, 485, 500, 501, 751, 773, 805, 808, 810, 815, 818, 829, 833, 834, 858, 859, 864, 877, 879, 895, 902, 905, 911, 925, 926, 935, 947, 948, 949, 959, 961, 964, 968, 974, 998, 1025, 1026, 1049, 1058, 1059, 1074, 1087, 1100, 1105, 1107, 1119], "ich": [5, 23, 64, 148, 149, 157, 158, 159, 163, 173, 183, 191, 222, 274, 317, 335, 1082, 1119, 1120, 1129, 1136, 1137, 1143], "heut": [5, 335, 1124, 1139], "feinen": 5, "situat": [5, 128, 140, 142, 151, 172, 199, 498, 499, 502, 514, 576, 653, 767, 773, 824, 826, 870, 886, 905, 933, 950, 959, 962, 963, 1011, 1120, 1125], "repertoir": [5, 8, 28, 155, 184, 194, 448], "schulungsmateri": [5, 23], "anbieten": 5, "k\u00f6nnen": [5, 23, 154, 157, 167, 173, 185, 198, 317, 318, 322, 335, 861, 1119, 1121, 1122, 1132, 1142, 1143], "da": [5, 7, 8, 64, 148, 149, 154, 157, 158, 159, 160, 167, 175, 179, 183, 184, 188, 191, 193, 194, 196, 200, 203, 204, 205, 209, 212, 219, 220, 222, 225, 228, 229, 231, 233, 241, 243, 250, 260, 270, 274, 292, 298, 309, 312, 317, 322, 335, 861, 1119, 1120, 1121, 1122, 1123, 1124, 1129, 1131, 1135, 1136, 1137, 1138, 1139, 1142, 1143], "sich": [5, 23, 37, 148, 149, 154, 157, 158, 159, 163, 173, 175, 183, 204, 222, 225, 235, 318, 1119, 1120, 1122, 1123, 1124, 1129, 1132, 1136, 1137, 1138, 1141, 1142, 1143], "jahrelangen": 5, "erfahrung": [5, 229, 1121], "entwickelt": [5, 167, 1129, 1136, 1138], "hat": [5, 8, 23, 37, 143, 148, 149, 157, 158, 159, 160, 163, 167, 173, 175, 183, 184, 188, 190, 194, 205, 225, 280, 292, 310, 317, 335, 997, 1119, 1122, 1124, 1129, 1136, 1137, 1138, 1141, 1142, 1143], "al": [5, 8, 23, 32, 97, 148, 149, 154, 157, 158, 159, 163, 165, 167, 175, 184, 185, 192, 194, 196, 204, 222, 223, 225, 233, 237, 279, 318, 335, 552, 701, 798, 834, 855, 860, 861, 893, 1071, 1119, 1122, 1124, 1129, 1135, 1136, 1137, 1138, 1141], "einzelunternehm": [5, 23], "werd": [5, 1119], "erster": 5, "lini": 5, "firmen": [5, 23], "gebucht": [5, 11, 149, 163, 175, 335], "um": [5, 23, 32, 148, 149, 157, 159, 163, 167, 173, 183, 184, 222, 235, 250, 335, 1119, 1121, 1122, 1123, 1124, 1129, 1135, 1139], "mitarbeit": [5, 23], "weiterzubilden": 5, "entwickeln": [5, 167], "oder": [5, 23, 136, 157, 163, 167, 173, 184, 185, 190, 204, 213, 222, 229, 833, 861, 1096, 1119, 1122, 1123, 1129, 1132, 1135, 1136, 1137, 1139, 1142, 1143], "damit": [5, 23, 148, 173, 203, 229, 317, 322, 335, 1120, 1138, 1142], "arbeiten": [5, 23, 173, 184, 1135], "softwaretest": 5, "produktingenieur": 5, "program": [5, 8, 29, 30, 42, 59, 62, 72, 73, 74, 76, 78, 84, 85, 90, 97, 101, 110, 111, 113, 114, 115, 117, 119, 133, 135, 136, 137, 139, 140, 141, 142, 145, 147, 150, 151, 153, 155, 158, 160, 161, 163, 164, 168, 175, 176, 177, 179, 180, 181, 186, 191, 192, 197, 200, 201, 207, 209, 210, 213, 216, 219, 223, 226, 229, 230, 231, 237, 242, 246, 255, 258, 259, 262, 265, 267, 275, 276, 277, 279, 283, 295, 302, 303, 304, 305, 306, 307, 308, 314, 316, 317, 318, 319, 320, 321, 322, 323, 328, 330, 331, 334, 336, 341, 343, 344, 347, 349, 350, 352, 353, 354, 355, 358, 360, 363, 365, 370, 383, 392, 396, 397, 399, 401, 403, 404, 411, 413, 416, 418, 419, 420, 421, 425, 426, 427, 431, 432, 436, 437, 440, 442, 448, 452, 462, 463, 464, 468, 469, 470, 485, 487, 489, 490, 491, 492, 493, 494, 495, 496, 497, 500, 502, 507, 509, 531, 537, 542, 543, 549, 550, 565, 568, 571, 587, 593, 597, 606, 607, 609, 610, 615, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 644, 651, 682, 684, 687, 692, 697, 698, 702, 707, 709, 715, 723, 725, 726, 727, 731, 742, 744, 753, 773, 787, 789, 790, 803, 805, 806, 807, 808, 809, 810, 813, 815, 816, 817, 828, 833, 836, 862, 866, 869, 870, 872, 875, 876, 877, 878, 886, 890, 893, 895, 896, 897, 898, 899, 900, 903, 904, 905, 906, 908, 912, 913, 917, 921, 924, 927, 930, 931, 932, 933, 937, 938, 940, 945, 946, 948, 955, 959, 961, 964, 965, 966, 971, 972, 974, 980, 981, 982, 983, 994, 997, 1001, 1002, 1005, 1006, 1009, 1013, 1014, 1016, 1023, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1072, 1073, 1074, 1076, 1077, 1078, 1080, 1081, 1083, 1084, 1085, 1087, 1091, 1099, 1100, 1102, 1104, 1105, 1109, 1112, 1121, 1122, 1123, 1124, 1125, 1127, 1128, 1130, 1131, 1132], "gem\u00e4\u00df": [5, 23, 149], "herkunft": [5, 1143], "mein": [5, 23, 148, 149, 154, 158, 159, 173, 183, 184, 203, 335, 872, 940, 1120, 1135], "muttersprach": [5, 23], "ist": [5, 7, 8, 148, 149, 154, 157, 158, 159, 163, 167, 175, 183, 184, 188, 190, 193, 194, 196, 199, 203, 205, 209, 212, 213, 218, 219, 220, 222, 225, 228, 231, 235, 241, 250, 260, 274, 292, 309, 312, 313, 317, 322, 335, 380, 933, 1089, 1119, 1120, 1121, 1122, 1123, 1124, 1129, 1132, 1135, 1136, 1137, 1138, 1139, 1141, 1142, 1143], "umfasst": [5, 149], "weiterf\u00fchrend": [5, 23], "materi": [5, 8, 12, 13, 14, 17, 23, 27, 65, 97, 106, 133, 136, 137, 140, 154, 155, 172, 175, 176, 177, 179, 181, 182, 184, 186, 187, 191, 194, 197, 200, 202, 203, 206, 207, 210, 213, 216, 218, 219, 231, 234, 237, 240, 244, 245, 247, 249, 252, 259, 262, 268, 269, 273, 279, 283, 284, 287, 290, 291, 294, 295, 317, 325, 335, 427, 429, 430, 431, 432, 433, 435, 436, 438, 440, 442, 443, 444, 445, 446, 447, 449, 451, 454, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 498, 500, 503, 504, 505, 506, 508, 510, 511, 512, 513, 515, 516, 517, 518, 519, 542, 622, 702, 727, 875, 886, 911, 914, 971, 972, 974, 994, 995, 1023, 1073, 1085, 1086, 1099, 1110, 1114, 1122, 1124, 1127, 1129, 1130, 1136], "stark": 5, "gefragt": 5, "sind": [5, 7, 23, 148, 149, 158, 159, 163, 167, 175, 184, 185, 190, 193, 196, 212, 229, 317, 322, 335, 860, 861, 933, 1119, 1122, 1123, 1124, 1129, 1131, 1132, 1135, 1136, 1138, 1139, 1142, 1143], "letzter": 5, "betreffend": 5, "neuen": [5, 1124], "standard": [5, 34, 35, 36, 38, 106, 113, 132, 147, 168, 172, 177, 179, 181, 202, 209, 215, 224, 225, 228, 232, 243, 256, 258, 282, 308, 317, 318, 319, 320, 322, 338, 339, 340, 346, 347, 352, 353, 357, 402, 490, 509, 528, 542, 543, 587, 593, 597, 604, 605, 606, 607, 609, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 659, 664, 690, 692, 694, 695, 724, 726, 813, 816, 817, 833, 866, 880, 896, 902, 905, 918, 921, 945, 975, 994, 995, 1011, 1084, 1096, 1101, 1115, 1121, 1122, 1124, 1125, 1126, 1127, 1131], "absolut": [5, 8, 29, 65, 90, 99, 113, 138, 142, 147, 153, 156, 163, 173, 176, 177, 179, 181, 192, 197, 201, 209, 215, 216, 223, 225, 226, 228, 229, 232, 237, 240, 246, 249, 252, 255, 256, 259, 262, 268, 269, 273, 276, 277, 279, 284, 287, 290, 291, 294, 295, 303, 304, 305, 306, 307, 308, 314, 316, 317, 320, 335, 420, 448, 462, 490, 491, 492, 493, 494, 495, 496, 497, 500, 542, 712, 715, 725, 726, 727, 771, 783, 799, 800, 801, 802, 803, 806, 807, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 833, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 853, 869, 889, 892, 898, 900, 908, 910, 924, 927, 930, 932, 949, 951, 952, 953, 954, 955, 956, 957, 958, 964, 972, 979, 980, 981, 982, 986, 994, 1005, 1014, 1024, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1072, 1073, 1077, 1078, 1081, 1084, 1085, 1087, 1091, 1094, 1096, 1099, 1102, 1104, 1109], "beginn": [5, 8, 29, 32, 78, 90, 137, 138, 148, 153, 156, 167, 173, 176, 177, 179, 181, 192, 207, 210, 211, 213, 216, 223, 226, 229, 233, 240, 252, 259, 262, 268, 269, 279, 284, 287, 290, 291, 294, 295, 303, 304, 305, 306, 307, 308, 316, 317, 320, 362, 670, 726, 727, 972, 979, 980, 981, 982, 986, 994, 996, 1002, 1005, 1014, 1024, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1072, 1073, 1077, 1078, 1081, 1084, 1085, 1087, 1091, 1099, 1102, 1104, 1109], "advanc": [5, 8, 29, 78, 90, 137, 147, 153, 156, 161, 164, 167, 177, 181, 189, 192, 197, 207, 212, 213, 223, 237, 259, 279, 303, 304, 305, 306, 307, 308, 316, 317, 318, 319, 320, 334, 412, 414, 416, 421, 422, 574, 644, 682, 717, 723, 725, 726, 727, 914, 971, 972, 974, 979, 980, 981, 982, 986, 994, 996, 1005, 1014, 1024, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1072, 1073, 1076, 1077, 1078, 1081, 1084, 1085, 1087, 1091, 1098, 1099, 1102, 1104, 1109, 1112, 1126], "product": [5, 8, 29, 38, 43, 78, 85, 90, 142, 153, 156, 176, 177, 179, 181, 197, 216, 223, 226, 229, 237, 240, 249, 252, 259, 262, 264, 268, 269, 273, 279, 284, 287, 290, 291, 294, 295, 303, 304, 305, 306, 307, 308, 316, 317, 320, 420, 424, 440, 726, 727, 870, 879, 950, 964, 972, 979, 980, 981, 982, 986, 994, 1005, 1014, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1072, 1073, 1077, 1078, 1081, 1084, 1085, 1087, 1091, 1099, 1102, 1104, 1109], "gro\u00dfe": [5, 37, 173, 1138], "thema": [5, 23, 158, 175, 229, 243, 317, 322, 1119], "einfach": [5, 159, 173, 184, 188, 270, 1123, 1124, 1129, 1135, 1137, 1139, 1141, 1143], "doch": [5, 196, 270, 280, 335, 1141], "m\u00e4chtig": 5, "vermutlich": [5, 173, 1141], "grund": [5, 1122, 1129], "warum": [5, 7, 23, 184, 185, 193, 235, 1129, 1135, 1136, 1141, 1143], "gern": [5, 173, 1119, 1129, 1136], "nachgefragt": 5, "werden": [5, 8, 37, 148, 149, 154, 157, 158, 159, 167, 173, 175, 184, 185, 188, 194, 203, 204, 219, 231, 243, 861, 1119, 1120, 1121, 1122, 1123, 1124, 1129, 1131, 1132, 1135, 1136, 1138, 1139, 1141, 1142, 1143], "deren": [5, 23, 157, 179, 1124, 1137, 1141, 1142], "kernkompetenz": 5, "liegt": [5, 23, 148, 159, 163, 232, 1123, 1139], "sondern": [5, 159, 173, 184, 1120, 1129, 1132, 1135, 1142], "eher": [5, 148, 184, 1121, 1135], "beiwerk": 5, "ihrem": [5, 23, 1119], "eigentlichen": 5, "job": [5, 151, 172, 182, 241, 407, 870, 895, 896, 897, 966, 984, 996, 1000, 1076, 1105], "schreiben": [5, 163, 185, 317, 318, 322, 1122, 1139, 1141], "physik": [5, 163], "z": [5, 38, 109, 159, 160, 163, 173, 183, 215, 216, 228, 231, 253, 280, 347, 357, 368, 369, 430, 563, 626, 696, 799, 860, 945, 997, 1120, 1129, 1131, 1136], "b": [5, 7, 21, 31, 32, 38, 63, 73, 74, 107, 122, 143, 155, 159, 160, 161, 163, 173, 178, 183, 188, 190, 193, 196, 199, 206, 209, 212, 213, 215, 220, 222, 225, 228, 232, 235, 238, 241, 250, 253, 257, 260, 270, 274, 280, 285, 292, 309, 311, 312, 313, 349, 357, 359, 368, 384, 398, 401, 414, 544, 546, 554, 555, 561, 562, 563, 564, 569, 613, 614, 619, 620, 649, 655, 689, 696, 706, 724, 773, 804, 816, 833, 855, 860, 861, 877, 878, 879, 918, 934, 963, 969, 978, 981, 993, 1001, 1002, 1008, 1011, 1013, 1015, 1016, 1021, 1084, 1087, 1100, 1120, 1129, 1131, 1136], "guter": [5, 1120], "ersatz": [5, 184, 1135], "matlab": [5, 161, 163, 216, 335, 1070, 1073], "tester": [5, 137, 1105, 1131], "basic": [5, 10, 28, 29, 31, 72, 73, 74, 77, 78, 83, 97, 101, 103, 106, 110, 111, 113, 119, 120, 136, 137, 140, 142, 147, 150, 155, 156, 161, 164, 167, 176, 189, 202, 207, 218, 226, 228, 231, 232, 256, 258, 265, 266, 267, 275, 283, 293, 298, 316, 317, 318, 319, 320, 322, 324, 328, 334, 336, 386, 392, 396, 399, 403, 412, 414, 416, 418, 419, 421, 422, 429, 431, 432, 439, 446, 448, 449, 462, 490, 491, 492, 493, 494, 495, 496, 497, 500, 507, 509, 520, 536, 537, 542, 568, 576, 581, 593, 597, 605, 606, 609, 610, 614, 615, 627, 634, 635, 636, 637, 638, 639, 644, 647, 648, 650, 653, 655, 682, 699, 715, 721, 723, 725, 726, 730, 733, 735, 740, 743, 750, 754, 764, 773, 775, 777, 782, 788, 791, 793, 794, 796, 800, 801, 807, 809, 814, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 853, 863, 869, 875, 876, 881, 882, 883, 884, 885, 895, 896, 897, 898, 900, 905, 908, 910, 918, 924, 927, 930, 932, 940, 943, 944, 948, 949, 951, 952, 953, 954, 955, 956, 957, 958, 959, 964, 1002, 1030, 1057, 1058, 1069, 1070, 1079, 1085, 1091, 1092, 1094, 1110, 1114, 1126, 1127, 1140], "einf\u00fchrung": [5, 163, 167, 180, 182, 336, 994, 1121, 1126, 1127, 1129, 1138, 1140], "anhand": [5, 6, 158, 167, 180, 182, 184, 185, 234, 334, 336, 1121, 1127, 1135, 1140], "beispielen": [5, 8, 154, 180, 182, 184, 194, 203, 219, 231, 335, 336, 1127, 1140], "memori": [5, 42, 43, 49, 55, 73, 78, 80, 97, 109, 110, 111, 135, 139, 140, 141, 143, 145, 152, 156, 160, 161, 162, 165, 167, 172, 178, 179, 187, 191, 192, 196, 209, 215, 218, 225, 228, 243, 265, 267, 269, 274, 291, 294, 335, 336, 338, 352, 358, 380, 381, 387, 400, 402, 403, 405, 411, 412, 414, 416, 420, 421, 422, 449, 464, 466, 468, 469, 470, 472, 474, 475, 482, 483, 490, 507, 509, 510, 534, 542, 543, 548, 549, 559, 577, 578, 579, 595, 614, 624, 639, 642, 644, 653, 680, 682, 687, 694, 699, 701, 702, 703, 723, 725, 726, 735, 740, 743, 745, 750, 754, 764, 768, 769, 770, 773, 775, 777, 778, 782, 785, 791, 794, 804, 809, 811, 817, 869, 886, 895, 915, 917, 918, 931, 932, 964, 968, 981, 982, 995, 1002, 1083, 1122, 1123, 1126, 1130, 1131, 1140], "weiter": [5, 23, 37, 148, 149, 173, 175, 184, 198, 222, 240, 270, 861, 1119, 1129, 1135, 1136, 1138, 1139, 1143], "standbein": [5, 1129], "mehreren": [5, 173, 189, 1142], "auspr\u00e4gungen": 5, "commandlin": [5, 8, 29, 31, 42, 80, 90, 99, 113, 133, 136, 158, 160, 180, 182, 192, 194, 197, 201, 207, 218, 219, 223, 229, 230, 231, 234, 237, 252, 259, 262, 268, 272, 273, 278, 279, 290, 317, 318, 319, 320, 321, 335, 392, 396, 399, 403, 412, 416, 421, 422, 425, 427, 437, 448, 462, 488, 490, 491, 492, 493, 494, 495, 496, 497, 500, 542, 644, 682, 715, 723, 725, 726, 742, 773, 796, 800, 801, 802, 803, 806, 807, 813, 814, 815, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 834, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 853, 863, 869, 870, 878, 892, 898, 900, 908, 910, 924, 926, 927, 930, 932, 946, 947, 949, 951, 952, 953, 954, 955, 956, 957, 958, 965, 994, 1024, 1027, 1028, 1029, 1030, 1032, 1033, 1034, 1035, 1037, 1038, 1040, 1042, 1043, 1044, 1045, 1046, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1121, 1129, 1131, 1132, 1136, 1137, 1138], "konzept": [5, 23, 335, 1129, 1131, 1138], "zielpublikum": 5, "deckt": 5, "ungef\u00e4hr": [5, 148], "mehr": [5, 11, 23, 148, 157, 159, 183, 189, 209, 335, 1119, 1120, 1122, 1124, 1129, 1136, 1137, 1138, 1143], "kernentwickl": 5, "themen": [5, 23, 154, 165, 167, 1129], "applikationsentwicklung": 5, "direkt": [5, 23, 167, 1122, 1138], "systemschnittstel": 5, "schritt": 5, "geht": [5, 7, 8, 23, 64, 148, 149, 157, 159, 167, 173, 183, 184, 188, 193, 194, 203, 204, 219, 225, 231, 241, 312, 335, 861], "nur": [5, 23, 148, 154, 158, 159, 163, 173, 175, 183, 184, 188, 190, 198, 220, 312, 335, 1121, 1122, 1129, 1132, 1135, 1136, 1137, 1139, 1141, 1142, 1143], "mutig": 5, "pool": [5, 83, 201, 793, 932, 934], "absprach": [5, 1119], "individuel": [5, 23, 175, 1119], "zusammengestellt": 5, "schulungsverlauf": 5, "meisten": [5, 23, 167, 173, 335, 1120, 1141], "recht": [5, 7, 64, 148, 149, 159, 167, 173, 184, 193, 1135, 1136], "dynamisch": [5, 167, 198, 1122, 1124, 1139], "teilnehm": [5, 154, 163, 167, 175, 335, 1129, 1136], "haben": [5, 148, 149, 158, 163, 167, 175, 183, 184, 196, 335, 603, 1120, 1121, 1122, 1123, 1124, 1129, 1135, 1137, 1138, 1139, 1142], "oft": [5, 23, 148, 173, 175, 1123], "bed\u00fcrfniss": [5, 23, 175], "vorab": [5, 154, 167, 203], "bekannt": [5, 23, 173, 1124], "waren": [5, 158, 163, 1120, 1124], "wodurch": [5, 23], "auch": [5, 23, 148, 149, 154, 159, 163, 173, 185, 188, 190, 196, 199, 204, 225, 229, 235, 260, 312, 313, 335, 1119, 1120, 1121, 1122, 1123, 1129, 1132, 1136, 1141, 1143], "mal": [5, 149, 163, 173, 184, 235, 335, 1120, 1124, 1135], "agenda": [5, 23, 27, 164, 269, 273, 277, 279, 283, 291, 295, 299], "abgewichen": 5, "wird": [5, 7, 23, 148, 149, 154, 157, 158, 159, 167, 173, 183, 184, 190, 193, 222, 317, 322, 335, 1119, 1120, 1123, 1124, 1129, 1131, 1132, 1135, 1136, 1137, 1138, 1139, 1141, 1142, 1143], "verh\u00e4ltni": 5, "vortrag": [5, 158, 1119], "\u00fcbungen": [5, 8, 154, 167, 175, 184, 185, 194, 203, 219, 231, 335, 1122, 1129, 1131, 1135, 1138], "ca": [5, 23, 32, 148, 150, 1100], "50": [5, 7, 106, 109, 150, 161, 173, 178, 183, 188, 190, 193, 196, 199, 205, 209, 212, 215, 220, 222, 228, 232, 235, 238, 241, 250, 253, 257, 260, 270, 274, 280, 292, 309, 312, 313, 318, 319, 409, 411, 427, 498, 533, 534, 855, 877, 878, 879, 973, 996, 1016, 1028, 1075, 1076, 1088, 1105], "kleiner": [5, 7, 193, 860], "den": [5, 149, 157, 158, 159, 163, 167, 173, 175, 183, 184, 189, 196, 203, 232, 280, 317, 318, 322, 335, 795, 1120, 1121, 1122, 1123, 1124, 1129, 1132, 1135, 1136, 1142, 1143], "teilnehmern": [5, 335, 1143], "pc": [5, 78, 108, 136, 192, 256, 303, 320, 323, 502, 871, 872, 878, 1120], "erledigt": 5, "speziel": [5, 154, 183, 184, 243, 1132, 1135, 1138, 1142], "fortgeschrittenen": 5, "programmierthemen": 5, "gruppenprojekt": 5, "gegenstand": [5, 1119], "denen": [5, 23, 148, 1129], "zusammenarbeiten": 5, "austauschmedium": 5, "solch": 5, "set": [5, 9, 14, 21, 29, 33, 59, 62, 65, 78, 85, 90, 108, 113, 114, 117, 122, 140, 141, 142, 143, 144, 145, 146, 147, 151, 155, 156, 157, 160, 161, 172, 173, 176, 177, 179, 180, 181, 184, 185, 189, 190, 191, 195, 197, 198, 201, 203, 207, 208, 210, 211, 213, 214, 216, 217, 219, 221, 223, 224, 225, 230, 231, 233, 234, 236, 237, 239, 245, 247, 249, 251, 252, 254, 256, 258, 259, 261, 262, 265, 266, 267, 269, 271, 272, 273, 275, 278, 279, 281, 284, 287, 290, 291, 293, 294, 317, 322, 324, 335, 337, 352, 358, 375, 380, 381, 390, 393, 405, 406, 414, 420, 428, 429, 430, 432, 434, 436, 437, 439, 444, 447, 449, 464, 469, 478, 479, 483, 492, 493, 498, 499, 500, 501, 518, 546, 547, 561, 562, 563, 564, 577, 646, 655, 670, 700, 701, 716, 724, 726, 744, 757, 759, 769, 773, 778, 783, 805, 812, 818, 834, 870, 872, 877, 879, 886, 891, 893, 899, 907, 911, 915, 920, 928, 929, 932, 933, 944, 946, 947, 948, 959, 962, 968, 971, 972, 975, 984, 985, 991, 994, 995, 998, 1002, 1007, 1026, 1048, 1059, 1066, 1067, 1069, 1071, 1073, 1076, 1077, 1078, 1080, 1084, 1099, 1100, 1112, 1114, 1117, 1128, 1135], "gew\u00f6hnlich": [5, 23], "github": [5, 8, 23, 42, 44, 65, 97, 106, 109, 113, 122, 124, 136, 137, 147, 151, 152, 154, 155, 158, 160, 167, 168, 169, 179, 181, 186, 187, 191, 192, 194, 201, 202, 203, 207, 209, 210, 213, 216, 218, 219, 223, 226, 229, 231, 234, 237, 240, 244, 245, 247, 248, 249, 252, 256, 259, 265, 266, 267, 269, 273, 277, 279, 283, 284, 287, 291, 295, 298, 316, 321, 322, 323, 324, 331, 336, 337, 489, 520, 562, 729, 732, 734, 737, 739, 742, 751, 753, 763, 765, 773, 774, 775, 776, 781, 785, 872, 877, 879, 947, 948, 949, 951, 957, 961, 963, 964, 965], "endprodukt": 5, "bleibt": [5, 23, 1139], "homepag": [5, 13, 144, 146, 154, 157, 158, 172, 199, 207, 209, 244, 245, 247, 411, 959, 1105], "erhalten": 5, "hier": [5, 8, 17, 23, 64, 148, 149, 154, 157, 158, 160, 163, 167, 175, 179, 183, 184, 190, 194, 200, 203, 204, 213, 219, 222, 231, 232, 274, 292, 335, 1119, 1122, 1129, 1135, 1136, 1138, 1139, 1141], "mix": [5, 29, 179, 186, 197, 200, 207, 210, 213, 214, 218, 220, 223, 252, 259, 272, 273, 278, 279, 281, 363, 402, 405, 406, 408, 410, 553, 726, 999, 1002, 1018, 1021, 1030, 1040, 1043, 1044, 1045, 1046, 1050, 1051, 1052, 1053, 1054, 1055, 1069, 1070, 1084, 1089, 1095, 1140], "j\u00fcngeren": 5, "2023": [5, 60, 96, 106, 113, 257, 258, 261, 264, 275, 281, 292, 334, 425, 426, 695], "10": [5, 7, 31, 63, 97, 102, 105, 106, 109, 113, 129, 136, 142, 143, 148, 150, 151, 161, 162, 173, 178, 180, 184, 185, 188, 190, 193, 196, 197, 199, 204, 205, 206, 207, 209, 210, 212, 213, 215, 220, 222, 225, 228, 232, 235, 237, 238, 240, 241, 251, 253, 258, 260, 267, 268, 269, 270, 273, 274, 279, 280, 285, 289, 292, 303, 310, 311, 312, 313, 316, 330, 331, 334, 346, 348, 350, 352, 360, 378, 385, 402, 404, 418, 428, 438, 468, 488, 490, 491, 493, 496, 499, 504, 507, 527, 528, 533, 534, 536, 537, 542, 552, 555, 557, 564, 631, 632, 638, 642, 649, 653, 654, 680, 692, 701, 702, 703, 704, 714, 726, 763, 773, 781, 802, 804, 810, 829, 833, 835, 855, 857, 861, 864, 872, 877, 878, 879, 896, 905, 913, 940, 943, 947, 948, 949, 961, 962, 971, 973, 974, 1002, 1003, 1010, 1032, 1033, 1053, 1059, 1070, 1071, 1075, 1076, 1092, 1093, 1100, 1105, 1117, 1135], "09": [5, 97, 136, 143, 152, 176, 192, 257, 292, 314, 334, 426, 429, 855, 878, 879, 903, 998, 1075], "11": [5, 7, 40, 63, 106, 113, 136, 137, 152, 161, 162, 167, 168, 172, 173, 178, 179, 180, 184, 185, 188, 190, 193, 196, 199, 202, 204, 205, 206, 209, 214, 215, 216, 220, 222, 225, 228, 232, 235, 238, 241, 244, 245, 250, 254, 257, 260, 264, 270, 274, 280, 288, 291, 292, 298, 309, 310, 311, 312, 313, 320, 323, 330, 331, 334, 336, 338, 352, 418, 420, 434, 446, 499, 527, 536, 537, 543, 545, 546, 548, 552, 554, 555, 561, 563, 573, 578, 580, 585, 598, 599, 600, 603, 616, 640, 644, 647, 650, 651, 656, 657, 658, 659, 669, 681, 682, 683, 684, 685, 686, 687, 689, 692, 693, 696, 698, 701, 702, 704, 705, 707, 714, 715, 716, 723, 724, 726, 727, 798, 811, 855, 864, 918, 923, 947, 948, 949, 997, 1003, 1008, 1026, 1060, 1062, 1066, 1068, 1070, 1073, 1075, 1076, 1087, 1105, 1117, 1124, 1125, 1126, 1135], "introduct": [5, 29, 72, 73, 74, 78, 97, 98, 99, 106, 113, 120, 153, 156, 201, 202, 216, 218, 226, 229, 237, 240, 246, 248, 249, 255, 256, 258, 265, 268, 269, 273, 276, 284, 287, 290, 291, 294, 316, 321, 325, 334, 336, 370, 379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 462, 490, 491, 492, 493, 494, 495, 496, 497, 500, 507, 509, 520, 542, 550, 565, 568, 571, 587, 593, 597, 606, 609, 610, 615, 624, 625, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 642, 644, 651, 663, 670, 682, 698, 707, 715, 725, 726, 727, 775, 796, 800, 801, 802, 803, 806, 814, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 853, 863, 868, 869, 881, 882, 883, 884, 885, 892, 898, 900, 908, 910, 913, 924, 927, 930, 932, 949, 951, 952, 953, 954, 955, 956, 957, 958, 994, 1067, 1068, 1069, 1078, 1099, 1104, 1126, 1140], "07": [5, 97, 106, 113, 136, 150, 152, 163, 176, 205, 206, 240, 245, 257, 258, 264, 280, 316, 330, 331, 334, 432, 800, 801, 877, 998, 1026, 1070, 1075], "18": [5, 7, 63, 143, 150, 151, 155, 161, 162, 178, 183, 188, 190, 193, 196, 199, 200, 204, 205, 209, 212, 213, 215, 221, 222, 228, 232, 235, 238, 241, 250, 254, 256, 257, 260, 264, 270, 274, 280, 285, 292, 310, 312, 313, 316, 334, 552, 617, 681, 689, 701, 726, 737, 746, 773, 810, 816, 818, 852, 855, 869, 879, 903, 905, 939, 950, 957, 958, 959, 962, 991, 1026, 1033, 1075, 1076], "For": [5, 40, 113, 138, 139, 140, 144, 147, 150, 152, 153, 155, 156, 161, 164, 169, 170, 172, 176, 192, 197, 200, 207, 210, 213, 218, 228, 231, 233, 237, 245, 247, 248, 249, 273, 279, 284, 328, 334, 336, 348, 349, 355, 370, 379, 386, 392, 396, 399, 401, 403, 412, 416, 421, 422, 439, 464, 520, 545, 552, 556, 569, 578, 598, 644, 682, 689, 692, 696, 701, 706, 723, 725, 726, 744, 759, 773, 800, 801, 810, 833, 869, 870, 878, 879, 880, 889, 893, 920, 941, 948, 949, 950, 957, 958, 962, 995, 996, 1006, 1013, 1021, 1044, 1049, 1071, 1074, 1076, 1078], "04": [5, 97, 105, 113, 123, 136, 147, 150, 152, 167, 168, 192, 240, 256, 257, 260, 264, 292, 314, 316, 334, 427, 726, 869, 950, 957, 958, 962, 1075, 1105], "20": [5, 7, 8, 23, 63, 114, 119, 136, 143, 145, 150, 159, 160, 161, 162, 173, 178, 183, 184, 188, 190, 193, 194, 196, 199, 204, 205, 209, 212, 215, 220, 222, 225, 228, 232, 235, 238, 240, 241, 250, 253, 257, 260, 264, 266, 270, 274, 281, 284, 285, 287, 292, 312, 313, 316, 334, 340, 342, 344, 360, 384, 424, 464, 492, 493, 498, 527, 528, 533, 534, 536, 537, 552, 649, 652, 653, 654, 663, 670, 692, 694, 695, 700, 701, 702, 703, 792, 798, 818, 833, 855, 870, 877, 878, 879, 933, 950, 959, 973, 974, 998, 1017, 1025, 1026, 1052, 1075, 1076, 1105, 1107, 1114], "clean": [5, 46, 47, 51, 53, 55, 56, 63, 123, 155, 207, 226, 334, 402, 413, 414, 417, 423, 544, 642, 726, 727, 947, 949, 959, 968, 1021, 1070], "code": [5, 21, 23, 28, 29, 33, 40, 42, 46, 47, 51, 53, 55, 56, 63, 65, 70, 73, 80, 85, 103, 104, 108, 113, 119, 123, 125, 133, 137, 139, 140, 141, 142, 143, 146, 147, 154, 155, 158, 160, 163, 164, 165, 167, 168, 169, 172, 175, 176, 177, 179, 181, 186, 191, 192, 196, 200, 201, 202, 207, 209, 210, 212, 215, 218, 223, 225, 226, 228, 229, 237, 247, 249, 252, 256, 258, 259, 262, 265, 267, 270, 272, 273, 274, 278, 279, 280, 283, 284, 287, 290, 291, 302, 303, 312, 317, 322, 334, 337, 344, 346, 350, 354, 360, 374, 380, 385, 401, 402, 406, 408, 410, 416, 417, 419, 420, 421, 422, 423, 427, 429, 430, 431, 433, 438, 439, 440, 442, 443, 444, 446, 447, 448, 449, 451, 452, 454, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 503, 504, 505, 506, 508, 510, 511, 512, 513, 515, 516, 517, 518, 519, 523, 525, 526, 528, 529, 531, 532, 534, 535, 537, 538, 540, 541, 542, 543, 544, 545, 546, 548, 552, 553, 554, 555, 557, 558, 559, 560, 561, 562, 563, 564, 570, 572, 573, 574, 575, 576, 579, 580, 581, 582, 583, 585, 586, 589, 590, 591, 595, 599, 600, 601, 602, 603, 607, 613, 614, 616, 617, 619, 620, 622, 628, 631, 635, 636, 642, 643, 647, 649, 651, 652, 653, 655, 657, 659, 670, 679, 680, 681, 682, 684, 685, 686, 687, 689, 691, 696, 700, 701, 703, 704, 705, 706, 714, 716, 720, 721, 722, 724, 725, 726, 727, 732, 737, 750, 751, 765, 771, 773, 778, 785, 788, 789, 791, 794, 812, 839, 869, 870, 878, 879, 894, 895, 911, 914, 918, 922, 931, 935, 937, 938, 940, 942, 944, 946, 947, 948, 949, 950, 951, 952, 954, 955, 957, 959, 970, 971, 973, 974, 975, 979, 981, 990, 992, 995, 996, 998, 999, 1005, 1006, 1007, 1013, 1017, 1018, 1019, 1026, 1046, 1050, 1069, 1073, 1085, 1087, 1096, 1099, 1105, 1106, 1108, 1112, 1113, 1114, 1117, 1118, 1125, 1130, 1138, 1139, 1143], "With": [5, 29, 120, 123, 128, 141, 147, 167, 228, 237, 256, 258, 259, 262, 267, 274, 282, 284, 287, 291, 334, 375, 404, 420, 430, 440, 441, 450, 462, 476, 490, 542, 651, 682, 725, 726, 727, 773, 802, 803, 869, 876, 877, 908, 910, 927, 945, 948, 959, 990, 994, 1069, 1085, 1089, 1091, 1093, 1101, 1125, 1127, 1128, 1130], "03": [5, 97, 105, 113, 136, 137, 145, 150, 152, 159, 167, 202, 223, 225, 228, 257, 258, 261, 264, 270, 283, 313, 316, 320, 334, 336, 418, 425, 426, 427, 448, 462, 488, 490, 491, 492, 493, 494, 495, 496, 497, 500, 507, 509, 520, 537, 542, 543, 545, 546, 548, 550, 552, 553, 555, 557, 560, 565, 568, 571, 587, 593, 597, 605, 606, 607, 609, 610, 612, 615, 621, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 641, 651, 682, 698, 707, 715, 723, 725, 726, 727, 835, 959, 1075, 1098, 1114, 1124], "28": [5, 7, 23, 97, 105, 114, 136, 143, 150, 151, 161, 162, 173, 178, 183, 188, 190, 193, 196, 199, 204, 205, 209, 212, 215, 220, 222, 225, 228, 232, 235, 238, 241, 250, 253, 257, 260, 264, 270, 274, 280, 292, 311, 312, 313, 330, 331, 334, 426, 438, 485, 501, 502, 525, 534, 617, 664, 763, 815, 855, 879, 907, 948, 949, 961, 1028, 1075, 1117], "29": [5, 7, 97, 106, 150, 151, 161, 162, 173, 178, 183, 188, 190, 193, 196, 199, 204, 205, 209, 212, 215, 220, 222, 228, 232, 235, 238, 241, 250, 253, 257, 260, 264, 270, 274, 280, 292, 309, 312, 316, 330, 331, 334, 426, 704, 737, 877, 879, 947, 950, 959, 1075], "sap": [5, 207, 258, 334, 1091], "13": [5, 6, 7, 63, 106, 123, 133, 143, 145, 152, 159, 161, 162, 173, 178, 181, 185, 188, 190, 193, 196, 199, 204, 206, 209, 212, 213, 215, 220, 222, 225, 228, 232, 235, 238, 241, 250, 253, 257, 258, 261, 264, 270, 274, 280, 285, 292, 312, 313, 334, 418, 425, 430, 433, 544, 659, 701, 737, 815, 855, 878, 903, 913, 933, 961, 968, 970, 1011, 1022, 1075, 1076, 1100, 1135], "15": [5, 7, 61, 63, 106, 113, 136, 139, 147, 150, 159, 161, 162, 170, 173, 176, 178, 184, 185, 188, 190, 192, 193, 196, 199, 204, 205, 209, 212, 215, 220, 222, 223, 225, 228, 232, 235, 238, 241, 250, 253, 257, 260, 264, 270, 275, 280, 284, 285, 287, 292, 310, 312, 313, 314, 316, 323, 330, 331, 334, 426, 492, 493, 510, 511, 512, 513, 515, 516, 619, 679, 702, 724, 802, 816, 870, 904, 913, 970, 983, 1074, 1075, 1076, 1096, 1100, 1135], "02": [5, 97, 106, 113, 136, 143, 150, 152, 159, 163, 189, 199, 226, 240, 257, 258, 264, 330, 331, 334, 418, 426, 427, 879, 947, 948, 949, 959, 961, 1075], "17": [5, 7, 63, 96, 106, 113, 145, 151, 155, 159, 161, 162, 173, 178, 180, 183, 188, 190, 193, 196, 199, 204, 205, 209, 214, 216, 217, 221, 222, 223, 225, 228, 232, 235, 241, 244, 245, 251, 253, 257, 260, 264, 270, 275, 280, 284, 285, 287, 292, 309, 312, 313, 334, 552, 600, 641, 650, 659, 680, 692, 702, 724, 737, 773, 804, 855, 879, 895, 901, 931, 935, 962, 991, 1033, 1075, 1076, 1084, 1096], "tour": [5, 148, 207, 244, 245, 247, 267, 298, 334, 335, 488, 640, 725, 726, 1070, 1125, 1126], "forc": [5, 31, 35, 139, 141, 145, 168, 228, 334, 335, 409, 424, 452, 548, 808, 886, 915, 949, 1070, 1125], "2022": [5, 97, 105, 106, 123, 152, 215, 221, 225, 228, 244, 245, 251, 254, 330, 331, 334, 426, 437, 499, 670, 695, 699, 724, 833, 835, 949, 959, 1026, 1070, 1098], "12": [5, 6, 7, 8, 40, 63, 106, 113, 122, 136, 145, 150, 151, 152, 161, 162, 166, 173, 178, 184, 185, 188, 190, 193, 196, 199, 200, 204, 205, 206, 209, 212, 213, 217, 220, 222, 225, 228, 232, 235, 238, 240, 241, 250, 253, 256, 257, 258, 260, 264, 270, 274, 280, 285, 288, 291, 292, 294, 311, 312, 316, 330, 331, 334, 402, 426, 427, 435, 520, 653, 659, 692, 724, 804, 815, 818, 833, 855, 857, 864, 877, 879, 881, 905, 913, 931, 947, 959, 961, 962, 968, 974, 1002, 1013, 1070, 1073, 1075, 1076, 1100, 1111, 1135], "01": [5, 63, 96, 97, 105, 106, 113, 136, 137, 145, 150, 152, 159, 163, 181, 192, 199, 206, 215, 221, 228, 240, 257, 258, 260, 264, 314, 316, 330, 331, 334, 413, 426, 427, 440, 527, 528, 717, 802, 829, 879, 933, 935, 962, 1059, 1070, 1075, 1105], "A": [5, 13, 20, 23, 27, 28, 29, 33, 38, 39, 40, 41, 46, 47, 51, 53, 55, 56, 61, 65, 69, 73, 74, 78, 82, 84, 85, 97, 98, 108, 109, 110, 111, 113, 114, 115, 116, 119, 120, 127, 139, 142, 143, 144, 145, 147, 152, 155, 156, 157, 160, 161, 162, 176, 178, 179, 180, 188, 192, 199, 201, 203, 209, 212, 215, 219, 225, 226, 228, 232, 240, 246, 248, 252, 255, 256, 267, 269, 274, 276, 277, 280, 287, 290, 291, 294, 303, 309, 314, 318, 319, 334, 339, 342, 343, 355, 356, 357, 370, 375, 379, 385, 386, 388, 391, 392, 396, 399, 400, 401, 402, 403, 406, 408, 409, 410, 412, 414, 416, 421, 422, 424, 430, 437, 440, 441, 442, 446, 447, 450, 452, 462, 464, 476, 489, 490, 499, 501, 507, 542, 547, 548, 553, 555, 556, 557, 606, 607, 609, 610, 613, 624, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 638, 639, 640, 644, 646, 659, 670, 680, 682, 685, 692, 698, 704, 708, 717, 722, 723, 724, 725, 726, 727, 734, 748, 750, 767, 790, 802, 803, 806, 807, 812, 815, 816, 820, 821, 826, 830, 836, 866, 869, 876, 877, 879, 894, 898, 899, 902, 908, 910, 915, 916, 917, 918, 927, 932, 933, 944, 945, 948, 950, 955, 957, 958, 959, 962, 963, 970, 971, 975, 976, 977, 978, 979, 981, 982, 983, 984, 1001, 1002, 1009, 1011, 1016, 1022, 1026, 1027, 1028, 1033, 1056, 1059, 1062, 1073, 1077, 1079, 1080, 1083, 1087, 1090, 1091, 1097, 1100, 1106, 1107, 1117, 1125, 1126, 1127, 1128, 1130, 1140], "new": [5, 16, 32, 42, 44, 49, 50, 55, 63, 65, 78, 107, 120, 137, 140, 142, 143, 144, 145, 146, 147, 150, 155, 167, 172, 192, 209, 213, 215, 225, 228, 232, 240, 250, 267, 273, 274, 291, 303, 328, 334, 363, 393, 397, 398, 406, 410, 424, 427, 447, 449, 467, 471, 483, 485, 489, 498, 500, 501, 510, 511, 512, 513, 515, 516, 520, 526, 534, 543, 544, 549, 552, 598, 600, 611, 613, 614, 619, 636, 640, 644, 646, 647, 651, 652, 653, 655, 658, 669, 680, 683, 687, 689, 691, 693, 694, 698, 699, 700, 701, 702, 703, 707, 708, 715, 717, 719, 723, 725, 726, 730, 767, 773, 781, 805, 829, 852, 870, 873, 877, 879, 902, 903, 904, 913, 915, 916, 922, 934, 965, 984, 999, 1002, 1011, 1050, 1075, 1076, 1093, 1100, 1105, 1124, 1125, 1126, 1128], "languag": [5, 12, 29, 43, 59, 62, 78, 90, 113, 120, 136, 161, 163, 175, 176, 177, 179, 181, 184, 186, 191, 192, 194, 197, 199, 200, 201, 203, 219, 223, 226, 229, 231, 234, 259, 262, 265, 266, 267, 294, 303, 304, 305, 306, 307, 308, 317, 320, 334, 336, 338, 340, 352, 355, 366, 370, 379, 384, 386, 392, 396, 397, 399, 412, 416, 421, 424, 429, 431, 448, 462, 463, 464, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 507, 509, 542, 543, 550, 555, 557, 565, 568, 570, 571, 587, 593, 597, 606, 609, 610, 615, 624, 625, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 644, 646, 651, 658, 659, 669, 683, 688, 690, 693, 698, 702, 705, 706, 707, 715, 723, 725, 726, 727, 805, 862, 870, 871, 947, 949, 966, 975, 979, 980, 981, 982, 983, 986, 991, 995, 999, 1001, 1002, 1005, 1014, 1022, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1072, 1073, 1077, 1081, 1084, 1085, 1087, 1091, 1096, 1099, 1102, 1104, 1109, 1114, 1122, 1125, 1126, 1127, 1128, 1130], "start": [5, 8, 42, 110, 111, 115, 134, 136, 139, 140, 141, 142, 145, 150, 151, 155, 159, 164, 169, 176, 177, 179, 180, 181, 182, 184, 186, 187, 188, 191, 192, 194, 197, 201, 202, 207, 213, 222, 228, 229, 238, 240, 253, 256, 258, 260, 262, 265, 267, 269, 274, 277, 292, 294, 303, 320, 334, 337, 344, 347, 348, 357, 360, 374, 397, 418, 419, 432, 440, 444, 447, 454, 520, 531, 537, 603, 614, 619, 622, 642, 694, 717, 724, 734, 773, 786, 800, 801, 805, 806, 809, 811, 812, 833, 834, 846, 855, 857, 870, 896, 897, 906, 909, 916, 917, 921, 925, 926, 929, 931, 934, 940, 944, 947, 961, 966, 973, 978, 979, 981, 982, 990, 1000, 1001, 1007, 1017, 1033, 1040, 1041, 1059, 1078, 1080, 1088, 1089, 1093, 1096, 1105, 1113, 1125, 1128], "schluss": [5, 7, 148, 173, 193], "noch": [5, 7, 148, 149, 159, 163, 167, 173, 183, 184, 188, 190, 193, 196, 199, 209, 222, 228, 229, 232, 253, 260, 335, 1124, 1135, 1142], "talk": [5, 42, 45, 50, 84, 113, 114, 119, 140, 144, 155, 160, 164, 172, 176, 179, 184, 216, 218, 219, 319, 424, 425, 687, 696, 773, 792, 870, 875, 879, 886, 1117], "heurigen": 5, "grazer": [5, 60, 158, 179, 875], "linuxtagen": [5, 158], "pointless": [5, 123, 253, 267, 274, 291, 406, 553], "blink": [5, 61, 123, 267, 270, 291, 303, 306, 870, 911, 914], "asyncio": [5, 123, 172, 176, 226, 267, 291, 670, 1071], "libgpiod": [5, 119, 122, 123, 137, 267, 291, 303, 305], "raspberri": [5, 78, 97, 104, 106, 122, 123, 135, 152, 156, 182, 256, 267, 291, 320, 322, 323, 334, 336, 502, 726, 750, 754, 773, 777, 782, 788, 791, 794, 869, 876, 878, 879, 890, 935, 948, 950, 954, 957, 959, 961, 972, 994, 998, 1085, 1087, 1099, 1120, 1129], "pi": [5, 38, 78, 106, 113, 120, 123, 152, 156, 182, 212, 215, 256, 267, 291, 323, 334, 336, 360, 387, 390, 408, 498, 501, 502, 557, 577, 657, 726, 750, 754, 777, 782, 788, 791, 794, 869, 876, 878, 879, 890, 935, 948, 950, 957, 958, 961, 1002], "cours": [5, 8, 13, 40, 104, 120, 122, 123, 136, 137, 138, 139, 140, 142, 155, 168, 169, 179, 187, 191, 197, 202, 207, 218, 226, 229, 246, 248, 256, 265, 267, 268, 282, 283, 291, 294, 317, 335, 336, 338, 387, 388, 404, 431, 442, 448, 454, 499, 724, 748, 773, 785, 800, 801, 862, 871, 900, 907, 949, 971, 972, 994, 1026, 1058, 1067, 1071, 1084, 1085, 1099, 1125, 1128, 1140], "sollt": [5, 23, 148, 149, 154, 157, 196, 1122, 1141], "interess": [5, 23, 229, 1120, 1131], "anderen": [5, 23, 173, 183, 188, 190, 335, 1119, 1120, 1122, 1124, 1143], "themenkomplex": 5, "bestehen": [5, 1138], "biet": 5, "folgend": [5, 154, 173, 184, 229, 1135], "preisgestaltung": 5, "all": [5, 23, 24, 29, 35, 40, 42, 45, 57, 59, 61, 62, 65, 70, 80, 88, 110, 111, 114, 115, 120, 127, 133, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 154, 155, 156, 160, 161, 162, 167, 169, 172, 173, 175, 176, 178, 183, 188, 192, 198, 200, 201, 209, 212, 215, 216, 220, 225, 226, 228, 245, 247, 250, 253, 256, 258, 265, 267, 274, 291, 302, 304, 305, 312, 328, 340, 344, 354, 358, 359, 362, 363, 364, 375, 383, 384, 390, 400, 402, 404, 406, 407, 410, 413, 414, 417, 419, 424, 426, 427, 428, 429, 430, 433, 434, 438, 439, 442, 443, 447, 449, 452, 454, 455, 463, 464, 469, 470, 491, 493, 501, 502, 520, 548, 549, 552, 554, 559, 577, 578, 595, 600, 613, 614, 628, 636, 638, 653, 655, 657, 670, 680, 684, 689, 690, 692, 702, 703, 706, 709, 711, 714, 732, 734, 741, 744, 746, 751, 759, 763, 765, 769, 771, 773, 781, 787, 790, 799, 800, 801, 805, 806, 808, 809, 811, 813, 815, 816, 817, 818, 833, 834, 845, 852, 855, 857, 859, 860, 861, 862, 864, 870, 871, 872, 873, 877, 878, 879, 889, 890, 894, 896, 899, 905, 907, 916, 923, 929, 932, 933, 934, 945, 949, 955, 959, 964, 965, 969, 970, 971, 982, 990, 995, 996, 1000, 1002, 1015, 1016, 1019, 1020, 1021, 1026, 1032, 1033, 1049, 1050, 1066, 1070, 1071, 1080, 1084, 1093, 1100, 1105, 1107, 1112, 1119, 1120, 1122, 1124, 1128, 1129, 1136, 1137, 1140, 1143], "onlin": [5, 11, 23, 145, 152, 154, 155, 167, 172, 175, 335], "gehalten": [5, 8, 136, 163, 175, 184, 194, 203, 219, 231, 1119, 1124, 1135], "klarerweis": 5, "tagsatz": 5, "anf\u00e4llt": 5, "schulung": [5, 23, 135, 148, 149, 163, 172, 175, 335, 336, 729, 732, 737, 742, 751, 759, 937, 940, 944, 972, 974, 994, 1070, 1085, 1099, 1119, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1140], "980": [5, 212, 215, 228, 235, 238, 642], "reisekosten": [5, 23], "auto": [5, 137, 149, 157, 161, 167, 243, 444, 449, 473, 474, 478, 479, 482, 483, 484, 537, 545, 554, 555, 578, 600, 601, 603, 644, 645, 652, 659, 662, 664, 667, 670, 671, 672, 674, 675, 676, 677, 678, 682, 684, 685, 686, 687, 692, 694, 696, 701, 702, 703, 705, 716, 720, 721, 722, 723, 724, 725, 726, 773, 944, 1125, 1136, 1141], "42": [5, 7, 21, 42, 61, 157, 159, 160, 162, 173, 183, 188, 190, 193, 196, 199, 204, 205, 209, 212, 215, 220, 222, 225, 228, 232, 235, 238, 241, 250, 253, 260, 270, 274, 280, 292, 309, 312, 313, 359, 385, 387, 388, 390, 393, 401, 406, 408, 414, 428, 438, 443, 447, 464, 466, 495, 496, 500, 501, 502, 503, 504, 505, 506, 518, 525, 537, 544, 552, 553, 557, 559, 585, 588, 591, 598, 622, 626, 646, 647, 655, 657, 685, 692, 705, 706, 716, 720, 721, 722, 736, 818, 855, 864, 872, 918, 926, 940, 947, 948, 949, 969, 970, 971, 978, 981, 999, 1001, 1002, 1011, 1012, 1013, 1016, 1035, 1117], "per": [5, 50, 78, 146, 173, 291, 308, 328, 358, 397, 402, 491, 763, 769, 783, 787, 792, 793, 805, 809, 829, 855, 922, 931, 948, 1118, 1143], "kilomet": [5, 142, 684, 833], "anderweitig": 5, "aufwand": [5, 23], "\u00fcbernachtung": [5, 148], "sampl": [6, 113, 140, 151, 197, 200, 201, 213, 217, 223, 229, 232, 249, 265, 291, 303, 420, 488, 714, 920, 940, 1023], "log": [6, 96, 137, 145, 146, 155, 162, 167, 170, 179, 199, 209, 215, 225, 228, 256, 258, 270, 287, 316, 429, 430, 449, 706, 736, 773, 802, 809, 811, 833, 870, 872, 880, 884, 886, 889, 890, 1070, 1073, 1100, 1114], "record": [6, 29, 40, 53, 135, 136, 144, 146, 147, 173, 184, 185, 191, 201, 206, 213, 229, 249, 264, 284, 287, 308, 320, 419, 420, 726, 872, 966, 971, 986, 1028, 1030, 1049, 1060, 1061, 1062, 1063, 1064, 1066, 1069, 1079, 1135], "grundlagen": [6, 8, 23, 133, 234, 273, 334, 1122, 1124, 1131, 1132, 1135, 1136, 1138, 1139, 1142], "4": [6, 7, 8, 32, 61, 63, 106, 109, 132, 137, 139, 143, 145, 151, 159, 160, 161, 162, 163, 166, 173, 178, 180, 184, 185, 188, 190, 193, 196, 199, 200, 204, 205, 206, 207, 209, 210, 212, 213, 215, 220, 222, 223, 225, 228, 232, 235, 237, 238, 241, 249, 250, 253, 257, 258, 260, 264, 270, 273, 274, 279, 280, 285, 292, 310, 311, 312, 314, 317, 330, 331, 334, 348, 364, 384, 387, 390, 407, 411, 414, 415, 425, 426, 428, 446, 449, 488, 492, 493, 494, 495, 496, 498, 500, 501, 503, 519, 521, 537, 544, 546, 554, 555, 558, 560, 561, 562, 563, 564, 576, 577, 585, 595, 645, 647, 649, 664, 665, 666, 668, 670, 679, 681, 685, 692, 694, 705, 724, 773, 774, 811, 859, 862, 864, 872, 877, 878, 879, 901, 914, 931, 935, 967, 969, 970, 977, 979, 983, 990, 993, 1002, 1003, 1008, 1011, 1012, 1013, 1017, 1018, 1022, 1023, 1025, 1026, 1028, 1032, 1045, 1049, 1060, 1062, 1066, 1068, 1071, 1075, 1076, 1078, 1084, 1088, 1089, 1090, 1092, 1093, 1095, 1100, 1105, 1120, 1135], "2021": [6, 10, 23, 121, 133, 150, 152, 188, 190, 199, 205, 206, 209, 214, 217, 240, 314, 316, 330, 331, 334, 520, 663, 688, 829, 833, 855, 856, 933, 947, 961, 997], "templat": [6, 65, 74, 106, 167, 202, 243, 265, 270, 319, 320, 428, 490, 509, 542, 543, 587, 593, 597, 598, 605, 606, 607, 609, 627, 634, 635, 636, 637, 638, 639, 646, 652, 657, 660, 661, 662, 663, 667, 668, 670, 673, 700, 704, 706, 714, 716, 724, 726, 918, 1124, 1126], "descript": [6, 8, 31, 39, 106, 124, 142, 143, 155, 156, 172, 176, 177, 179, 180, 181, 182, 187, 202, 207, 209, 213, 215, 218, 225, 228, 232, 244, 245, 248, 282, 283, 336, 429, 439, 447, 457, 458, 459, 460, 461, 465, 475, 499, 694, 701, 702, 703, 712, 714, 716, 724, 773, 785, 797, 799, 808, 833, 835, 855, 862, 865, 866, 879, 891, 899, 949, 961, 1012, 1026, 1049, 1107, 1128], "sidebar": [6, 17, 65, 137, 785], "metadata": [6, 28, 39, 136, 155, 253, 805, 808, 878, 881, 907, 969, 1130], "angebot": [6, 154], "hous": [6, 32, 140], "meiner": [6, 23, 229, 335, 1120], "person": [6, 23, 147, 177, 196, 199, 238, 240, 242, 249, 253, 260, 291, 292, 324, 409, 444, 445, 448, 473, 557, 616, 886, 984, 985, 987, 988, 989, 991, 992, 1066, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1105, 1106], "schwerpunk": 6, "schulungsstil": 6, "preis": 6, "einr\u00fcckung": [7, 185, 193], "wichtig": [7, 193, 243, 317, 322, 1143], "1": [7, 32, 39, 42, 50, 61, 63, 72, 74, 87, 106, 109, 110, 111, 119, 122, 132, 133, 136, 141, 143, 146, 147, 149, 150, 151, 155, 156, 158, 159, 160, 161, 162, 163, 168, 169, 170, 173, 175, 178, 185, 188, 189, 190, 193, 196, 199, 200, 204, 205, 206, 209, 212, 215, 218, 220, 222, 225, 228, 232, 235, 238, 240, 241, 245, 250, 253, 257, 258, 260, 264, 270, 274, 280, 283, 285, 288, 292, 302, 303, 309, 310, 311, 312, 313, 314, 315, 317, 320, 322, 330, 331, 334, 348, 349, 371, 378, 387, 391, 393, 401, 418, 425, 426, 427, 429, 430, 431, 432, 433, 435, 436, 437, 438, 440, 442, 443, 463, 464, 470, 480, 488, 489, 492, 496, 498, 500, 501, 502, 504, 508, 510, 511, 512, 513, 514, 515, 516, 521, 524, 527, 530, 533, 536, 537, 539, 544, 545, 546, 552, 554, 558, 560, 561, 562, 563, 564, 569, 574, 576, 582, 583, 584, 585, 586, 591, 595, 607, 609, 617, 619, 622, 626, 636, 642, 643, 645, 646, 647, 649, 652, 653, 655, 657, 659, 661, 662, 664, 666, 667, 668, 670, 671, 672, 679, 685, 687, 690, 691, 692, 694, 696, 697, 700, 701, 703, 704, 705, 714, 722, 724, 726, 731, 736, 742, 746, 751, 773, 790, 799, 800, 801, 804, 805, 806, 808, 809, 810, 811, 812, 815, 816, 817, 818, 819, 823, 825, 827, 829, 830, 834, 835, 836, 852, 855, 856, 857, 858, 859, 861, 862, 864, 865, 866, 868, 870, 877, 878, 880, 881, 889, 890, 891, 893, 895, 896, 897, 899, 900, 901, 903, 904, 905, 906, 911, 913, 914, 926, 928, 929, 931, 933, 935, 936, 937, 940, 943, 944, 946, 947, 950, 959, 961, 962, 963, 964, 966, 967, 969, 970, 971, 974, 975, 977, 979, 981, 983, 984, 990, 991, 993, 995, 996, 997, 998, 1000, 1003, 1004, 1005, 1006, 1007, 1010, 1012, 1013, 1018, 1023, 1025, 1026, 1028, 1033, 1036, 1039, 1049, 1053, 1056, 1059, 1060, 1062, 1066, 1067, 1068, 1074, 1075, 1076, 1077, 1083, 1088, 1089, 1090, 1092, 1093, 1094, 1099, 1100, 1105, 1106, 1107, 1112, 1116, 1119, 1125, 1127, 1128, 1132, 1135, 1137, 1142], "i": [7, 12, 13, 14, 17, 21, 27, 28, 29, 30, 31, 32, 38, 39, 40, 41, 42, 43, 46, 47, 49, 51, 53, 54, 55, 56, 57, 59, 61, 62, 63, 65, 66, 68, 69, 78, 80, 82, 84, 85, 87, 89, 90, 91, 97, 98, 99, 100, 104, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 119, 125, 127, 128, 133, 134, 136, 137, 139, 140, 143, 144, 145, 146, 147, 150, 151, 155, 156, 157, 160, 161, 162, 163, 164, 167, 168, 169, 170, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 188, 190, 191, 192, 193, 196, 197, 200, 201, 202, 204, 205, 207, 210, 211, 212, 213, 216, 217, 218, 219, 221, 222, 223, 226, 227, 229, 230, 231, 232, 234, 236, 239, 240, 241, 245, 246, 247, 249, 250, 252, 253, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 276, 278, 280, 282, 284, 285, 287, 288, 290, 291, 292, 294, 298, 302, 303, 304, 305, 306, 307, 308, 312, 313, 314, 317, 320, 322, 323, 325, 328, 330, 331, 335, 336, 338, 339, 340, 341, 342, 348, 349, 350, 352, 354, 355, 356, 358, 359, 362, 363, 364, 366, 367, 369, 370, 371, 374, 375, 376, 377, 378, 379, 381, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 439, 440, 442, 444, 446, 447, 448, 449, 452, 455, 456, 463, 464, 466, 467, 468, 469, 470, 483, 485, 486, 488, 490, 491, 492, 493, 494, 495, 496, 499, 500, 501, 502, 503, 504, 507, 509, 514, 518, 520, 525, 528, 531, 534, 537, 542, 543, 545, 546, 547, 548, 549, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 567, 569, 572, 573, 577, 578, 579, 580, 581, 582, 583, 585, 586, 591, 595, 598, 599, 600, 602, 604, 607, 609, 614, 616, 617, 622, 623, 624, 626, 628, 629, 631, 632, 633, 634, 635, 636, 637, 638, 641, 642, 643, 644, 646, 647, 649, 650, 652, 653, 654, 656, 659, 664, 665, 666, 667, 668, 670, 681, 682, 685, 686, 690, 691, 694, 695, 696, 700, 702, 703, 704, 706, 708, 712, 714, 715, 716, 717, 720, 723, 724, 725, 726, 727, 728, 729, 732, 734, 737, 739, 741, 742, 744, 748, 751, 755, 759, 761, 763, 765, 767, 769, 771, 773, 774, 775, 780, 781, 783, 785, 786, 787, 789, 790, 798, 799, 800, 801, 802, 803, 805, 806, 807, 810, 811, 812, 813, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 830, 832, 833, 834, 835, 836, 837, 838, 840, 841, 844, 845, 847, 848, 849, 853, 855, 857, 860, 862, 865, 866, 869, 870, 871, 872, 873, 875, 876, 877, 878, 880, 881, 882, 883, 884, 885, 886, 888, 893, 900, 903, 905, 907, 910, 911, 913, 914, 915, 916, 917, 918, 920, 921, 923, 924, 927, 930, 931, 932, 933, 934, 935, 940, 941, 944, 945, 948, 949, 950, 951, 955, 957, 958, 959, 960, 961, 962, 963, 965, 967, 968, 969, 970, 972, 973, 974, 975, 978, 979, 981, 982, 983, 984, 985, 987, 988, 990, 991, 992, 993, 994, 995, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1022, 1023, 1025, 1026, 1028, 1029, 1030, 1031, 1033, 1040, 1043, 1046, 1049, 1050, 1051, 1053, 1054, 1055, 1056, 1058, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1093, 1094, 1096, 1097, 1099, 1100, 1101, 1105, 1106, 1107, 1108, 1110, 1112, 1114, 1118, 1120, 1122, 1125, 1127, 1128, 1129, 1130, 1138, 1139, 1140, 1142], "41": [7, 145, 150, 161, 162, 173, 183, 188, 190, 193, 196, 199, 201, 204, 205, 209, 212, 215, 220, 222, 228, 232, 235, 238, 241, 250, 253, 257, 260, 270, 274, 280, 292, 309, 311, 312, 449, 705, 763, 855, 878, 983, 1026, 1028, 1075, 1107], "print": [7, 63, 136, 159, 160, 162, 163, 173, 176, 178, 179, 183, 188, 190, 191, 192, 193, 196, 199, 200, 204, 205, 206, 209, 212, 213, 215, 220, 222, 225, 228, 231, 232, 235, 238, 241, 250, 253, 257, 258, 260, 270, 274, 280, 285, 291, 292, 309, 310, 311, 312, 313, 343, 347, 349, 418, 429, 573, 600, 623, 670, 684, 692, 694, 810, 811, 817, 833, 835, 836, 877, 925, 935, 966, 969, 970, 971, 973, 974, 975, 979, 981, 983, 984, 987, 989, 992, 997, 998, 999, 1000, 1005, 1006, 1009, 1010, 1011, 1012, 1013, 1015, 1016, 1021, 1022, 1036, 1038, 1048, 1049, 1050, 1052, 1053, 1059, 1074, 1079, 1083, 1087, 1096], "ja": [7, 23, 149, 173, 190, 193, 196, 209, 212, 241], "basta": [7, 140, 193, 1002], "2": [7, 29, 32, 42, 50, 61, 63, 72, 104, 106, 114, 133, 136, 141, 143, 149, 150, 151, 157, 159, 160, 161, 162, 163, 174, 178, 184, 185, 188, 189, 193, 196, 199, 200, 204, 205, 206, 209, 214, 215, 220, 222, 225, 226, 228, 232, 235, 238, 240, 241, 250, 253, 257, 258, 260, 264, 270, 274, 280, 283, 285, 288, 292, 303, 309, 310, 311, 312, 313, 314, 317, 318, 319, 320, 326, 334, 347, 348, 360, 366, 367, 387, 391, 418, 424, 425, 426, 427, 430, 431, 432, 436, 437, 438, 439, 440, 442, 464, 488, 489, 492, 498, 500, 501, 504, 508, 510, 511, 512, 513, 515, 516, 520, 535, 537, 544, 545, 546, 552, 554, 555, 558, 560, 561, 562, 563, 564, 569, 574, 578, 582, 583, 584, 585, 586, 591, 595, 599, 600, 601, 602, 607, 617, 622, 642, 645, 646, 647, 649, 652, 655, 657, 659, 660, 662, 664, 667, 668, 670, 680, 681, 684, 685, 690, 691, 692, 694, 696, 697, 700, 701, 702, 703, 704, 705, 714, 716, 724, 726, 732, 773, 800, 801, 808, 811, 812, 815, 816, 817, 829, 852, 855, 858, 859, 864, 866, 868, 870, 874, 877, 878, 890, 893, 895, 896, 897, 899, 900, 903, 904, 905, 906, 907, 909, 911, 913, 914, 926, 928, 931, 933, 935, 946, 947, 962, 964, 966, 967, 969, 970, 972, 975, 977, 979, 983, 987, 990, 991, 993, 994, 995, 996, 997, 998, 1000, 1003, 1004, 1005, 1007, 1012, 1013, 1018, 1023, 1025, 1027, 1028, 1029, 1030, 1032, 1036, 1039, 1049, 1053, 1056, 1059, 1060, 1061, 1062, 1063, 1066, 1067, 1068, 1069, 1071, 1074, 1075, 1076, 1081, 1088, 1089, 1090, 1092, 1093, 1094, 1099, 1100, 1105, 1106, 1107, 1111, 1112, 1119, 1127, 1128, 1135, 1138, 1139, 1141, 1142, 1143], "1234": [7, 32, 193, 196, 206, 215, 220, 222, 274, 312, 888, 896, 945, 1002], "3": [7, 32, 61, 63, 106, 109, 110, 111, 122, 136, 145, 150, 151, 155, 157, 159, 160, 161, 162, 163, 170, 172, 173, 178, 184, 185, 188, 189, 190, 193, 196, 199, 200, 204, 206, 208, 209, 214, 215, 218, 220, 222, 225, 228, 232, 235, 237, 239, 240, 241, 243, 250, 253, 257, 258, 260, 264, 270, 274, 280, 285, 287, 288, 293, 310, 311, 312, 313, 317, 318, 319, 322, 334, 348, 360, 361, 362, 375, 384, 385, 406, 407, 415, 418, 420, 425, 426, 427, 430, 435, 446, 463, 464, 488, 489, 493, 496, 498, 499, 500, 501, 503, 504, 505, 506, 510, 511, 512, 513, 515, 516, 518, 520, 537, 544, 546, 552, 553, 554, 556, 557, 558, 560, 561, 562, 563, 564, 569, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 591, 607, 617, 622, 624, 645, 646, 647, 649, 657, 659, 660, 664, 665, 666, 667, 668, 670, 685, 690, 692, 694, 696, 701, 702, 704, 705, 724, 731, 737, 773, 811, 816, 830, 833, 855, 857, 859, 864, 866, 872, 874, 877, 878, 879, 881, 890, 891, 893, 895, 896, 897, 900, 904, 905, 906, 914, 915, 916, 920, 926, 928, 931, 934, 935, 936, 939, 941, 944, 945, 947, 948, 949, 967, 969, 970, 972, 975, 977, 979, 983, 990, 993, 994, 995, 996, 997, 1000, 1001, 1003, 1005, 1007, 1008, 1011, 1012, 1013, 1018, 1019, 1020, 1022, 1025, 1026, 1028, 1045, 1049, 1053, 1059, 1060, 1062, 1066, 1068, 1071, 1074, 1075, 1076, 1079, 1082, 1088, 1089, 1090, 1092, 1093, 1095, 1100, 1105, 1106, 1107, 1114, 1119, 1121, 1123, 1125, 1128, 1131, 1135], "decim": [7, 193, 228, 232, 274, 303, 340, 426, 1002, 1016], "5": [7, 32, 61, 63, 117, 132, 136, 143, 145, 151, 161, 162, 163, 168, 171, 174, 178, 184, 185, 188, 190, 191, 193, 196, 197, 199, 200, 203, 205, 206, 207, 209, 210, 212, 213, 215, 220, 222, 223, 225, 228, 232, 235, 237, 238, 240, 241, 245, 249, 250, 253, 257, 260, 264, 270, 273, 274, 279, 280, 285, 288, 292, 303, 309, 311, 312, 317, 322, 330, 331, 334, 340, 342, 347, 364, 366, 375, 402, 407, 411, 420, 425, 429, 432, 443, 446, 449, 464, 472, 488, 491, 493, 498, 499, 501, 502, 503, 504, 505, 506, 518, 519, 524, 537, 544, 545, 546, 552, 556, 557, 560, 561, 563, 564, 585, 595, 622, 642, 646, 649, 650, 652, 653, 659, 661, 662, 664, 679, 680, 692, 694, 701, 702, 703, 705, 724, 746, 751, 774, 802, 804, 855, 859, 864, 870, 877, 878, 879, 895, 897, 905, 914, 931, 947, 959, 967, 969, 970, 973, 979, 983, 990, 996, 1001, 1002, 1003, 1007, 1008, 1010, 1013, 1016, 1018, 1022, 1023, 1026, 1049, 1053, 1060, 1062, 1066, 1068, 1071, 1075, 1076, 1079, 1084, 1095, 1100, 1105, 1107, 1112, 1116, 1122, 1124, 1129, 1130, 1135, 1136], "hexadecim": [7, 193, 232, 359, 878, 1002, 1015, 1016], "16": [7, 63, 136, 145, 147, 148, 150, 159, 161, 162, 167, 168, 173, 178, 183, 188, 190, 193, 196, 199, 204, 205, 209, 212, 215, 220, 222, 225, 228, 232, 235, 238, 241, 250, 254, 257, 260, 264, 270, 274, 280, 285, 292, 309, 310, 311, 312, 313, 317, 322, 323, 334, 358, 402, 409, 420, 427, 564, 622, 701, 751, 763, 855, 872, 877, 879, 890, 895, 896, 904, 913, 947, 949, 961, 962, 967, 974, 977, 1002, 1028, 1075, 1076, 1107], "7": [7, 32, 42, 63, 137, 140, 143, 145, 150, 157, 160, 161, 162, 163, 173, 178, 185, 188, 190, 191, 193, 196, 197, 199, 203, 205, 206, 207, 209, 210, 212, 215, 220, 222, 225, 228, 232, 235, 237, 238, 240, 241, 249, 250, 253, 257, 258, 260, 264, 270, 274, 279, 280, 285, 288, 292, 302, 311, 312, 317, 322, 323, 334, 348, 352, 366, 393, 402, 426, 427, 430, 435, 443, 463, 464, 488, 491, 496, 500, 501, 503, 504, 505, 506, 518, 525, 533, 537, 544, 552, 553, 557, 559, 560, 561, 563, 584, 588, 591, 600, 617, 626, 646, 654, 679, 680, 681, 685, 692, 720, 721, 722, 804, 805, 816, 817, 833, 855, 864, 877, 878, 879, 896, 904, 928, 931, 940, 941, 944, 945, 948, 949, 970, 973, 979, 983, 996, 1001, 1002, 1003, 1006, 1008, 1010, 1011, 1026, 1038, 1056, 1059, 1071, 1075, 1076, 1079, 1084, 1095, 1105], "0x1234": [7, 193, 1002], "4660": [7, 193, 215, 1002], "8": [7, 32, 63, 109, 136, 142, 143, 147, 151, 159, 160, 161, 162, 163, 167, 172, 173, 176, 178, 185, 188, 190, 191, 193, 196, 197, 199, 200, 205, 206, 207, 209, 210, 212, 213, 215, 219, 220, 222, 225, 228, 232, 235, 237, 238, 241, 249, 250, 253, 256, 257, 260, 264, 270, 274, 277, 279, 280, 285, 288, 291, 292, 309, 310, 311, 312, 317, 334, 358, 402, 414, 420, 426, 430, 432, 435, 463, 495, 530, 537, 544, 549, 552, 557, 561, 563, 564, 653, 701, 724, 746, 769, 773, 804, 810, 818, 855, 857, 864, 870, 871, 872, 873, 877, 878, 947, 964, 970, 973, 979, 1002, 1003, 1008, 1016, 1021, 1025, 1026, 1032, 1068, 1071, 1075, 1076, 1082, 1098, 1100, 1107], "bin\u00e4r": [7, 23, 193, 196], "9": [7, 8, 32, 61, 63, 136, 141, 145, 148, 155, 159, 160, 161, 162, 163, 171, 173, 175, 178, 179, 180, 181, 182, 185, 186, 188, 190, 191, 192, 193, 194, 196, 197, 199, 200, 201, 203, 205, 206, 207, 209, 212, 213, 215, 220, 222, 225, 228, 229, 232, 235, 238, 240, 241, 250, 253, 256, 257, 260, 264, 265, 267, 270, 274, 280, 285, 292, 309, 310, 312, 313, 317, 322, 334, 340, 342, 348, 357, 360, 418, 426, 443, 463, 472, 491, 537, 539, 555, 564, 654, 664, 692, 751, 829, 852, 855, 877, 878, 879, 895, 931, 967, 977, 996, 997, 1003, 1008, 1010, 1018, 1022, 1026, 1033, 1038, 1075, 1076, 1084, 1098, 1100, 1105], "0b100110": [7, 193, 222, 1002], "38": [7, 23, 136, 143, 150, 162, 173, 183, 188, 190, 193, 196, 199, 204, 205, 209, 212, 215, 220, 222, 225, 228, 232, 235, 238, 241, 250, 253, 257, 260, 270, 274, 280, 292, 309, 312, 313, 447, 463, 488, 555, 701, 855, 950, 959, 983, 1075, 1076], "arithmet": [7, 108, 160, 193, 198, 218, 221, 233, 248, 265, 317, 341, 355, 362, 363, 369, 370, 379, 385, 386, 392, 396, 399, 401, 402, 403, 412, 416, 421, 422, 441, 450, 462, 463, 476, 490, 538, 542, 572, 576, 577, 580, 585, 642, 644, 682, 691, 692, 723, 725, 726], "man": [7, 32, 37, 113, 140, 142, 148, 149, 157, 163, 167, 173, 175, 183, 184, 190, 193, 196, 201, 203, 205, 216, 222, 229, 232, 256, 277, 317, 322, 324, 335, 432, 525, 534, 546, 708, 724, 732, 751, 799, 800, 801, 804, 805, 808, 815, 816, 817, 818, 819, 823, 825, 827, 830, 834, 835, 836, 852, 855, 856, 858, 859, 861, 862, 864, 865, 879, 886, 889, 890, 891, 893, 895, 896, 897, 899, 900, 902, 903, 904, 905, 906, 909, 915, 916, 918, 920, 922, 923, 926, 928, 934, 941, 944, 945, 947, 963, 964, 1120, 1121, 1122, 1124, 1132, 1135, 1137, 1138, 1139, 1141, 1142, 1143], "behaviour": [7, 193, 201, 759, 905, 1021], "erzwingen": [7, 173, 185, 193], "floor": [7, 38, 185, 193, 196, 200, 212, 213, 215, 220, 222, 228, 232, 312, 990, 1002, 1098], "divis": [7, 36, 38, 185, 193, 196, 212, 215, 220, 222, 228, 312, 340, 361, 463, 464, 478, 990, 1002, 1056], "modul": [7, 12, 21, 23, 29, 65, 123, 130, 136, 143, 145, 150, 162, 168, 170, 172, 175, 176, 177, 178, 179, 186, 187, 193, 196, 200, 202, 207, 209, 210, 213, 215, 216, 219, 220, 222, 223, 225, 226, 228, 229, 231, 232, 234, 235, 239, 240, 243, 249, 251, 252, 253, 258, 260, 268, 269, 272, 274, 278, 279, 282, 283, 284, 287, 292, 294, 302, 303, 312, 318, 319, 320, 322, 328, 335, 380, 424, 426, 430, 431, 437, 439, 440, 452, 641, 682, 725, 726, 729, 730, 732, 733, 735, 737, 738, 739, 740, 742, 743, 750, 753, 754, 758, 764, 769, 770, 774, 775, 777, 782, 785, 788, 791, 794, 869, 870, 877, 879, 968, 969, 970, 971, 972, 975, 983, 984, 986, 990, 991, 995, 996, 999, 1000, 1011, 1012, 1013, 1017, 1019, 1022, 1023, 1024, 1027, 1028, 1029, 1030, 1064, 1065, 1066, 1067, 1069, 1070, 1072, 1073, 1077, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1092, 1093, 1099, 1100, 1102, 1104, 1105, 1108, 1109, 1115, 1127, 1129, 1130, 1136, 1140, 1143], "restklassen": [7, 193], "rest": [7, 17, 40, 147, 149, 159, 183, 193, 196, 200, 202, 220, 228, 260, 274, 292, 312, 338, 348, 373, 427, 575, 576, 637, 694, 761, 812, 873, 903, 931, 990, 993, 1017, 1046, 1050, 1079, 1094, 1127, 1143], "14": [7, 63, 133, 137, 150, 161, 162, 173, 178, 185, 188, 190, 192, 193, 196, 199, 200, 204, 205, 209, 212, 213, 215, 220, 222, 225, 228, 232, 235, 238, 240, 241, 244, 250, 253, 257, 260, 264, 270, 274, 280, 291, 292, 294, 309, 310, 312, 313, 314, 334, 426, 437, 438, 440, 449, 543, 617, 641, 653, 692, 694, 702, 704, 815, 818, 830, 855, 857, 877, 878, 879, 881, 896, 905, 935, 947, 948, 949, 968, 1070, 1075, 1076, 1124, 1135], "oper": [7, 29, 33, 34, 35, 38, 73, 78, 80, 97, 108, 117, 119, 139, 140, 142, 146, 158, 159, 161, 164, 167, 172, 176, 177, 178, 179, 181, 185, 190, 193, 198, 199, 200, 201, 202, 207, 209, 213, 214, 217, 220, 222, 223, 227, 230, 233, 236, 238, 241, 243, 253, 260, 265, 266, 267, 268, 269, 270, 273, 274, 290, 294, 303, 317, 322, 340, 348, 358, 364, 379, 384, 385, 386, 390, 392, 393, 396, 399, 401, 403, 405, 408, 412, 414, 416, 421, 422, 444, 445, 464, 484, 490, 502, 507, 509, 537, 542, 543, 544, 549, 550, 554, 557, 561, 562, 563, 564, 565, 568, 569, 571, 577, 585, 586, 587, 593, 597, 598, 601, 606, 609, 610, 622, 627, 634, 635, 636, 637, 638, 639, 642, 644, 650, 652, 653, 655, 659, 664, 666, 667, 668, 670, 673, 677, 680, 682, 684, 685, 686, 687, 692, 694, 701, 702, 705, 712, 716, 723, 724, 725, 726, 735, 740, 743, 744, 750, 754, 764, 773, 775, 777, 782, 788, 789, 791, 794, 800, 801, 804, 833, 839, 864, 865, 869, 877, 878, 879, 890, 895, 896, 897, 898, 899, 900, 911, 914, 918, 920, 940, 944, 948, 961, 964, 972, 975, 982, 983, 986, 1003, 1007, 1011, 1016, 1017, 1022, 1036, 1069, 1071, 1080, 1089, 1112, 1117, 1124, 1130], "preced": [7, 35, 38, 193, 215, 220, 228, 233, 236, 340, 346, 361, 362, 370, 375, 379, 384, 386, 390, 392, 394, 396, 399, 403, 412, 416, 421, 422, 573, 577, 644, 682, 723, 725, 726, 833, 882], "implizit": [7, 173, 193, 270, 1122, 1139], "klammerung": [7, 193, 861], "durch": [7, 148, 149, 157, 163, 167, 175, 183, 193, 225, 235, 317, 322, 335, 861, 1119, 1120, 1122], "pr\u00e4zedenz": [7, 173, 185, 193], "6666666666666665": [7, 193], "frage": [7, 149, 159, 163, 190, 193, 196, 202, 222, 335, 1129, 1136, 1143], "6665": [7, 193], "6667": [7, 193], "ieee": [7, 193], "floatingpoint": [7, 193, 361, 362, 485, 773, 1048], "representaion": [7, 193], "true": [7, 35, 38, 50, 58, 63, 110, 111, 141, 143, 145, 150, 159, 160, 161, 162, 172, 173, 178, 183, 188, 190, 191, 193, 196, 199, 200, 204, 205, 209, 212, 213, 215, 220, 222, 225, 226, 228, 232, 235, 238, 241, 250, 253, 257, 260, 264, 270, 274, 280, 285, 292, 303, 309, 312, 346, 362, 363, 375, 387, 390, 430, 488, 552, 560, 585, 613, 624, 626, 647, 670, 671, 672, 673, 675, 676, 677, 678, 703, 712, 714, 716, 761, 763, 793, 806, 833, 846, 914, 920, 925, 926, 929, 931, 932, 940, 941, 944, 953, 968, 974, 975, 979, 981, 982, 983, 984, 987, 990, 1003, 1004, 1006, 1007, 1008, 1011, 1017, 1020, 1021, 1084, 1088, 1090, 1095, 1111, 1112, 1114], "zahlen": [7, 183, 184, 193, 1122, 1135], "vergleichen": [7, 173, 193], "21": [7, 97, 99, 102, 105, 106, 113, 147, 150, 161, 162, 173, 178, 181, 183, 188, 190, 193, 196, 199, 204, 205, 209, 212, 215, 220, 222, 228, 232, 235, 238, 241, 250, 253, 257, 260, 264, 270, 274, 280, 285, 292, 312, 316, 334, 426, 763, 815, 855, 878, 879, 890, 961, 1075, 1076], "ab": [7, 23, 32, 148, 150, 173, 183, 184, 193, 228, 232, 235, 250, 253, 274, 544, 546, 554, 563, 649, 705, 1076, 1129, 1135], "0001": [7, 143, 161, 193], "aber": [7, 23, 37, 149, 157, 159, 163, 173, 183, 184, 188, 191, 193, 222, 225, 228, 280, 335, 861, 1120, 1122, 1124, 1131, 1138, 1142, 1143], "unendlich": [7, 8, 184, 193, 194], "lang": [7, 145, 148, 149, 158, 193, 308, 309, 326, 335, 429, 1121, 1137, 1142], "22": [7, 63, 97, 105, 106, 113, 142, 145, 150, 152, 161, 162, 173, 178, 180, 183, 188, 189, 190, 193, 196, 199, 200, 204, 205, 209, 212, 213, 215, 220, 222, 228, 232, 235, 238, 241, 250, 253, 257, 260, 264, 270, 274, 281, 284, 285, 287, 292, 309, 311, 312, 313, 334, 818, 855, 879, 880, 888, 889, 904, 948, 949, 1033, 1070, 1075, 1076, 1136], "1000000": [7, 142, 173, 193, 270, 312, 418, 870, 878], "23": [7, 63, 113, 143, 150, 151, 152, 158, 161, 162, 163, 173, 178, 180, 183, 188, 190, 193, 196, 199, 204, 205, 209, 212, 215, 220, 222, 225, 226, 228, 231, 232, 235, 241, 250, 253, 257, 260, 264, 270, 274, 280, 285, 292, 334, 390, 426, 429, 670, 818, 855, 877, 878, 959, 1028, 1033, 1075, 1076, 1107, 1114], "32": [7, 150, 151, 157, 159, 162, 173, 178, 183, 188, 190, 193, 196, 199, 202, 204, 205, 209, 212, 215, 220, 222, 225, 228, 232, 235, 238, 241, 250, 253, 257, 260, 264, 270, 274, 280, 292, 312, 340, 342, 358, 363, 402, 443, 449, 472, 488, 501, 769, 798, 804, 829, 855, 871, 873, 948, 949, 959, 1026], "4294967295": [7, 193, 212, 220, 228], "24": [7, 63, 97, 105, 112, 114, 115, 117, 119, 143, 150, 158, 161, 162, 163, 173, 178, 183, 188, 190, 193, 196, 199, 204, 205, 209, 212, 215, 220, 222, 225, 228, 232, 235, 238, 241, 250, 253, 257, 260, 264, 274, 280, 285, 292, 309, 310, 312, 313, 334, 437, 635, 637, 659, 701, 702, 726, 773, 800, 801, 855, 877, 964, 1075, 1076], "64": [7, 142, 145, 150, 173, 178, 183, 188, 190, 193, 196, 199, 201, 202, 205, 209, 212, 215, 220, 222, 225, 228, 232, 235, 238, 241, 250, 253, 260, 270, 274, 280, 292, 312, 317, 322, 346, 358, 363, 387, 402, 408, 411, 437, 769, 911, 914, 937, 944, 947, 964, 1028, 1075, 1120], "18446744073709551615": [7, 173, 183, 193, 196, 209, 212, 220, 222, 228, 232, 235, 238, 260, 292, 312], "overflow": [7, 42, 44, 50, 142, 183, 193, 209, 212, 213, 215, 218, 219, 225, 228, 235, 238, 253, 260, 270, 274, 363, 365, 401, 410, 810], "wenn": [7, 23, 148, 149, 154, 159, 167, 173, 175, 183, 184, 190, 193, 229, 235, 270, 860, 1119, 1121, 1122, 1129, 1131, 1132, 1135, 1138, 1143], "verwendet": [7, 23, 163, 167, 173, 193, 235, 1120, 1122, 1132, 1136, 1138, 1143], "wert": [7, 23, 184, 185, 190, 193, 225, 228, 232, 235, 241, 270, 274, 280, 1135, 1143], "w\u00e4re": [7, 157, 183, 193, 229, 1124, 1131], "dort": [7, 64, 149, 157, 159, 167, 183, 184, 193, 335, 1135, 1141, 1143], "25": [7, 63, 97, 150, 151, 161, 162, 163, 173, 178, 183, 188, 190, 193, 196, 199, 204, 205, 209, 212, 215, 220, 222, 225, 226, 228, 231, 232, 235, 238, 240, 241, 250, 253, 257, 260, 264, 270, 274, 280, 287, 292, 303, 312, 313, 334, 536, 537, 659, 696, 753, 855, 879, 947, 973, 1016, 1060, 1062, 1066, 1068, 1075, 1076, 1088, 1089, 1090, 1092, 1093, 1094, 1095], "18446744073709551616": [7, 173, 183, 193, 196, 209, 212, 220, 222, 232, 235, 253, 260, 270, 274, 280, 292, 312], "26": [7, 143, 145, 150, 151, 152, 161, 162, 173, 183, 188, 190, 193, 196, 199, 204, 205, 209, 212, 215, 220, 222, 225, 228, 232, 235, 238, 241, 245, 250, 253, 257, 260, 264, 274, 280, 285, 292, 312, 316, 334, 536, 537, 664, 680, 833, 855, 879, 911, 913, 914, 947, 949, 1075, 1076, 1100, 1136], "1000": [7, 23, 173, 183, 193, 196, 199, 209, 212, 215, 220, 222, 228, 232, 235, 238, 253, 260, 270, 274, 280, 292, 309, 312, 501, 502, 520, 595, 642, 716, 783, 808, 810, 815, 829, 830, 857, 858, 862, 864, 890, 897, 905, 926, 931, 935, 961, 968, 1017, 1049], "10715086071862673209484250490600018105614048117055336074437503883703510511249361224931983788156958581275946729175531468251871452856923140435984577574698574803934567774824230985421074605062371141877954182153046474983581941267398767559165543946077062914571196477686542167660429831652624386837205668069376": [7, 173, 183, 193, 196, 209, 232, 235, 253, 280], "27": [7, 63, 97, 113, 150, 152, 161, 162, 173, 183, 188, 190, 192, 193, 196, 199, 204, 205, 209, 212, 215, 220, 222, 225, 228, 231, 232, 235, 238, 240, 241, 250, 253, 257, 260, 264, 270, 274, 280, 287, 292, 309, 311, 312, 314, 334, 426, 500, 525, 692, 855, 877, 879, 947, 1075, 1088, 1089, 1090, 1092, 1093, 1094, 1095], "10000": [7, 45, 193, 212, 215, 228, 260, 971, 987], "19950631168807583848837421626835850838234968318861924548520089498529438830221946631919961684036194597899331129423209124271556491349413781117593785932096323957855730046793794526765246551266059895520550086918193311542508608460618104685509074866089624888090489894838009253941633257850621568309473902556912388065225096643874441046759871626985453222868538161694315775629640762836880760732228535091641476183956381458969463899410840960536267821064621427333394036525565649530603142680234969400335934316651459297773279665775606172582031407994198179607378245683762280037302885487251900834464581454650557929601414833921615734588139257095379769119277800826957735674444123062018757836325502728323789270710373802866393031428133241401624195671690574061419654342324638801248856147305207431992259611796250130992860241708340807605932320161268492288496255841312844061536738951487114256315111089745514203313820202931640957596464756010405845841566072044962867016515061920631004186422275908670900574606417856951911456055068251250406007519842261898059237118054444788072906395242548339221982707404473162376760846613033778706039803413197133493654622700563169937455508241780972810983291314403571877524768509857276937926433221599399876886660808368837838027643282775172273657572744784112294389733810861607423253291974813120197604178281965697475898164531258434135959862784130128185406283476649088690521047580882615823961985770122407044330583075869039319604603404973156583208672105913300903752823415539745394397715257455290510212310947321610753474825740775273986348298498340756937955646638621874569499279016572103701364433135817214311791398222983845847334440270964182851005072927748364550578634501100852987812389473928699540834346158807043959118985815145779177143619698728131459483783202081474982171858011389071228250905826817436220577475921417653715687725614904582904992461028630081535583308130101987675856234343538955409175623400844887526162643568648833519463720377293240094456246923254350400678027273837755376406726898636241037491410966718557050759098100246789880178271925953381282421954028302759408448955014676668389697996886241636313376393903373455801407636741877711055384225739499110186468219696581651485130494222369947714763069155468217682876200362777257723781365331611196811280792669481887201298643660768551639860534602297871557517947385246369446923087894265948217008051120322365496288169035739121368338393591756418733850510970271613915439590991598154654417336311656936031122249937969999226781732358023111862644575299135758175008199839236284615249881088960232244362173771618086357015468484058622329792853875623486556440536962622018963571028812361567512543338303270029097668650568557157505516727518899194129711337690149916181315171544007728650573189557450920330185304847113818315407324053319038462084036421763703911550639789000742853672196280903477974533320468368795868580237952218629120080742819551317948157624448298518461509704888027274721574688131594750409732115080498190455803416826949787141316063210686391511681774304792596709376": [7, 193, 212, 228, 260], "hallo": [7, 173, 183, 188, 191, 193, 196, 204, 212, 215, 222, 225, 228, 232, 235, 241, 253, 257, 260, 280, 292, 312, 360, 552, 724, 804, 852, 880, 893, 896, 902], "39": [7, 137, 150, 159, 161, 162, 173, 178, 183, 188, 190, 192, 193, 196, 199, 204, 205, 209, 212, 215, 220, 222, 225, 228, 232, 235, 238, 241, 250, 253, 257, 260, 264, 270, 274, 280, 285, 288, 292, 309, 310, 311, 312, 313, 314, 463, 617, 664, 818, 947, 983, 1075, 1076], "30": [7, 23, 63, 97, 106, 109, 113, 136, 137, 142, 150, 152, 162, 172, 173, 178, 183, 188, 190, 192, 193, 196, 199, 204, 205, 209, 212, 215, 220, 222, 225, 228, 232, 235, 238, 241, 250, 253, 260, 264, 270, 274, 277, 280, 292, 309, 311, 312, 314, 334, 347, 361, 426, 488, 492, 527, 528, 533, 534, 536, 537, 653, 654, 701, 702, 703, 829, 855, 861, 877, 878, 879, 935, 961, 973, 974, 1026, 1075, 1079, 1087, 1105, 1114], "eingebettet": [7, 193], "34": [7, 150, 151, 159, 162, 173, 178, 183, 188, 190, 192, 193, 196, 199, 200, 204, 205, 209, 212, 213, 215, 220, 222, 225, 228, 232, 235, 238, 240, 241, 250, 253, 257, 258, 260, 264, 270, 274, 280, 285, 288, 292, 311, 312, 313, 314, 449, 463, 467, 468, 469, 470, 482, 483, 484, 582, 583, 584, 585, 586, 591, 623, 830, 833, 855, 983, 1002, 1075, 1076], "31": [7, 106, 113, 143, 145, 150, 162, 173, 178, 183, 188, 190, 193, 196, 199, 204, 205, 209, 212, 215, 220, 222, 223, 225, 228, 232, 235, 238, 241, 250, 253, 257, 260, 264, 270, 274, 280, 292, 311, 312, 334, 398, 426, 433, 679, 855, 913, 945, 962, 996, 1028, 1075, 1098], "eingenbettet": [7, 193], "mississippi": [7, 193, 196, 205, 209, 212, 220, 222, 228, 232, 238, 241, 253, 260, 274, 280, 292, 622], "count": [7, 29, 63, 87, 89, 140, 152, 155, 193, 196, 197, 200, 205, 209, 212, 215, 220, 222, 225, 228, 232, 238, 241, 253, 259, 260, 274, 280, 292, 346, 347, 348, 349, 362, 418, 474, 500, 528, 642, 692, 717, 726, 729, 732, 733, 734, 735, 737, 740, 743, 744, 750, 754, 764, 777, 782, 788, 791, 794, 804, 813, 833, 855, 866, 869, 899, 902, 909, 920, 941, 1017, 1030, 1040, 1043, 1051, 1054, 1069, 1076, 1084, 1125], "ss": [7, 32, 193, 196, 205, 209, 212, 220, 222, 228, 232, 238, 241, 253, 260, 274, 280, 292, 622], "35": [7, 136, 150, 162, 173, 180, 183, 188, 190, 193, 196, 199, 204, 205, 209, 212, 215, 220, 222, 225, 228, 232, 235, 238, 241, 250, 253, 257, 260, 264, 270, 274, 280, 292, 309, 311, 312, 313, 463, 492, 635, 637, 653, 1075], "find": [7, 17, 42, 44, 47, 48, 53, 65, 113, 139, 140, 141, 142, 146, 151, 156, 168, 169, 170, 180, 182, 193, 196, 200, 202, 205, 209, 213, 215, 218, 220, 222, 225, 228, 232, 235, 238, 241, 246, 253, 255, 258, 260, 265, 267, 274, 276, 277, 280, 282, 292, 294, 298, 302, 311, 317, 322, 405, 411, 418, 430, 438, 445, 452, 473, 478, 479, 482, 483, 484, 485, 490, 507, 508, 537, 542, 545, 559, 561, 563, 564, 585, 587, 598, 601, 603, 606, 610, 622, 635, 637, 639, 642, 685, 689, 722, 726, 739, 778, 799, 800, 801, 803, 808, 812, 813, 815, 816, 817, 819, 833, 860, 863, 866, 869, 878, 879, 890, 918, 947, 950, 964, 994, 998, 1009, 1017, 1077, 1098, 1115, 1127, 1129, 1130, 1131, 1136], "36": [7, 136, 141, 145, 150, 162, 173, 183, 188, 190, 193, 196, 199, 204, 205, 209, 212, 215, 220, 222, 225, 228, 232, 235, 241, 250, 253, 257, 260, 264, 270, 274, 280, 292, 309, 312, 317, 322, 430, 443, 449, 467, 491, 494, 495, 496, 500, 501, 502, 652, 701, 702, 703, 724, 855, 877, 983, 1059], "37": [7, 150, 161, 162, 173, 174, 178, 183, 188, 190, 193, 196, 199, 201, 204, 205, 209, 212, 215, 220, 222, 225, 228, 232, 235, 238, 241, 250, 253, 257, 260, 270, 274, 280, 292, 311, 312, 313, 467, 983, 1075, 1088, 1089, 1090, 1092, 1093, 1094, 1095], "capit": [7, 38, 193, 196, 205, 212, 222, 228, 253, 274, 311, 833, 1028], "zeil": [7, 159, 173, 183, 190, 193, 196, 199, 205, 209, 228, 232, 250, 253, 292, 312], "nnoch": [7, 190, 193, 209], "some": [7, 17, 21, 106, 127, 139, 140, 141, 142, 144, 147, 150, 151, 155, 161, 164, 169, 172, 176, 179, 181, 192, 193, 199, 201, 209, 215, 216, 221, 227, 228, 232, 244, 245, 247, 253, 256, 259, 260, 262, 266, 268, 269, 276, 294, 298, 335, 359, 393, 404, 420, 443, 449, 520, 545, 547, 567, 585, 598, 601, 655, 664, 692, 700, 702, 712, 715, 725, 726, 732, 737, 746, 761, 769, 773, 790, 792, 810, 815, 870, 878, 879, 900, 903, 929, 931, 933, 941, 970, 972, 999, 1015, 1021, 1067, 1085, 1105, 1127, 1128], "name": [7, 23, 39, 40, 57, 65, 110, 111, 113, 115, 120, 122, 132, 136, 139, 140, 142, 143, 144, 147, 154, 155, 160, 162, 164, 169, 172, 173, 176, 179, 181, 183, 188, 193, 196, 199, 200, 211, 213, 214, 215, 218, 220, 222, 225, 230, 232, 235, 250, 253, 257, 258, 260, 264, 274, 302, 308, 311, 312, 313, 328, 350, 364, 370, 378, 379, 385, 386, 392, 396, 399, 403, 404, 407, 409, 412, 416, 418, 420, 421, 422, 424, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 447, 449, 464, 468, 469, 470, 475, 478, 482, 483, 484, 499, 501, 504, 509, 514, 546, 556, 558, 560, 624, 637, 643, 644, 654, 655, 664, 682, 684, 688, 694, 702, 723, 724, 725, 726, 729, 737, 741, 751, 755, 767, 769, 793, 799, 800, 801, 804, 812, 813, 815, 818, 819, 833, 839, 855, 861, 866, 873, 877, 878, 879, 881, 882, 889, 890, 893, 895, 899, 907, 940, 944, 947, 948, 949, 959, 961, 962, 964, 965, 966, 969, 971, 978, 983, 985, 988, 992, 993, 995, 996, 1000, 1001, 1009, 1011, 1013, 1015, 1016, 1017, 1022, 1026, 1028, 1033, 1049, 1050, 1060, 1066, 1068, 1076, 1079, 1082, 1083, 1084, 1089, 1090, 1092, 1093, 1094, 1095, 1098, 1105, 1112, 1114, 1124, 1128, 1130, 1131], "directori": [7, 17, 44, 61, 97, 99, 100, 102, 109, 113, 117, 119, 136, 139, 140, 141, 142, 151, 155, 166, 171, 174, 180, 192, 193, 199, 200, 201, 202, 209, 212, 213, 215, 225, 228, 240, 245, 246, 247, 255, 256, 268, 269, 273, 276, 277, 282, 290, 294, 302, 303, 317, 322, 328, 330, 331, 384, 418, 420, 425, 428, 432, 434, 436, 438, 439, 441, 444, 446, 448, 462, 463, 485, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 521, 524, 527, 530, 533, 536, 539, 542, 633, 715, 725, 726, 751, 773, 775, 795, 799, 802, 803, 804, 806, 807, 808, 810, 812, 813, 815, 816, 817, 819, 820, 821, 822, 827, 828, 830, 832, 833, 838, 839, 840, 841, 842, 843, 845, 846, 847, 848, 849, 850, 853, 857, 862, 869, 877, 878, 879, 881, 886, 890, 892, 895, 898, 905, 906, 907, 908, 910, 913, 915, 924, 927, 930, 932, 936, 939, 943, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 961, 962, 963, 964, 970, 978, 998, 1049, 1058, 1059, 1098, 1107, 1111, 1116, 1127, 1131, 1140], "multilin": [7, 183, 193, 208, 211, 215, 220, 228, 232, 292, 317, 385, 971, 999], "jetzt": [7, 148, 159, 163, 173, 183, 190, 193, 203, 232, 288], "l": [7, 32, 38, 61, 63, 99, 113, 143, 147, 151, 159, 160, 162, 163, 168, 173, 178, 183, 188, 190, 191, 192, 193, 196, 199, 204, 205, 209, 212, 215, 218, 220, 222, 225, 228, 232, 235, 238, 241, 246, 250, 253, 255, 256, 260, 270, 274, 276, 277, 280, 292, 309, 311, 312, 317, 322, 390, 391, 398, 402, 414, 419, 420, 426, 433, 436, 437, 452, 464, 490, 537, 542, 561, 591, 642, 715, 724, 725, 726, 737, 751, 773, 774, 800, 801, 802, 803, 804, 806, 807, 810, 812, 815, 816, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 837, 840, 841, 844, 845, 847, 848, 849, 851, 852, 853, 857, 862, 866, 869, 870, 872, 877, 878, 879, 880, 881, 888, 890, 895, 896, 898, 900, 901, 903, 904, 905, 908, 910, 913, 916, 924, 927, 930, 931, 932, 941, 945, 947, 948, 949, 950, 959, 961, 962, 967, 969, 990, 998, 1000, 1003, 1004, 1008, 1010, 1018, 1026, 1053, 1114, 1131], "44": [7, 136, 143, 150, 162, 173, 183, 188, 190, 193, 196, 199, 204, 205, 209, 212, 215, 220, 222, 225, 228, 232, 235, 238, 241, 250, 253, 257, 260, 270, 274, 280, 292, 309, 312, 879, 1100], "45": [7, 29, 51, 53, 55, 56, 72, 73, 74, 87, 90, 114, 119, 120, 129, 132, 145, 148, 150, 162, 172, 173, 176, 178, 183, 188, 190, 193, 196, 197, 199, 205, 209, 212, 215, 220, 222, 228, 232, 235, 238, 241, 250, 253, 260, 270, 274, 280, 292, 303, 304, 305, 306, 307, 308, 311, 312, 317, 322, 355, 370, 379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 431, 448, 462, 490, 491, 492, 493, 494, 495, 496, 497, 500, 507, 509, 542, 550, 565, 568, 571, 582, 583, 584, 585, 586, 587, 591, 593, 597, 606, 609, 610, 615, 624, 625, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 644, 651, 658, 682, 683, 693, 698, 707, 715, 723, 724, 725, 726, 730, 733, 735, 738, 740, 743, 745, 749, 750, 752, 754, 756, 758, 764, 766, 768, 770, 777, 779, 782, 784, 788, 791, 794, 796, 800, 801, 802, 803, 806, 807, 814, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 853, 863, 869, 876, 881, 882, 883, 884, 885, 892, 898, 900, 908, 910, 912, 924, 927, 930, 932, 949, 951, 952, 953, 954, 955, 956, 957, 958, 972, 979, 980, 981, 982, 986, 994, 1005, 1014, 1024, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1071, 1072, 1073, 1075, 1077, 1081, 1084, 1085, 1087, 1091, 1099, 1102, 1104, 1109, 1110], "46": [7, 150, 173, 178, 183, 188, 190, 193, 196, 199, 205, 209, 212, 215, 220, 222, 225, 228, 232, 235, 238, 241, 250, 253, 260, 270, 274, 280, 292, 309, 312, 855, 879, 895, 1075, 1076], "47": [7, 143, 145, 150, 173, 178, 183, 188, 190, 193, 196, 199, 205, 209, 212, 215, 220, 222, 228, 232, 235, 238, 241, 250, 253, 257, 260, 270, 274, 280, 292, 309, 312, 313, 692, 866, 931, 959, 1016, 1075], "try": [7, 27, 113, 115, 117, 136, 139, 140, 142, 147, 159, 162, 172, 173, 176, 180, 183, 188, 190, 193, 196, 199, 202, 205, 207, 209, 212, 215, 218, 220, 222, 225, 228, 232, 235, 237, 238, 240, 241, 244, 245, 247, 249, 250, 253, 256, 257, 260, 267, 268, 269, 270, 273, 274, 280, 291, 292, 298, 303, 310, 311, 312, 313, 317, 321, 322, 332, 410, 414, 440, 444, 468, 473, 482, 490, 498, 507, 509, 542, 550, 568, 571, 587, 593, 597, 602, 606, 609, 610, 627, 629, 631, 634, 635, 636, 637, 638, 639, 670, 678, 682, 692, 698, 702, 716, 720, 722, 725, 726, 778, 781, 878, 899, 944, 968, 975, 1028, 1071, 1077, 1088, 1089, 1093, 1107], "except": [7, 21, 29, 43, 46, 61, 63, 74, 110, 111, 141, 145, 151, 159, 160, 167, 172, 173, 176, 177, 179, 181, 183, 188, 190, 193, 196, 200, 201, 202, 205, 207, 209, 212, 213, 216, 217, 220, 222, 226, 227, 230, 232, 235, 237, 238, 242, 250, 253, 257, 260, 268, 269, 270, 273, 274, 280, 290, 291, 292, 294, 302, 304, 310, 311, 312, 313, 317, 322, 330, 331, 350, 402, 405, 439, 444, 445, 452, 479, 490, 507, 509, 542, 571, 587, 593, 597, 606, 609, 610, 614, 627, 634, 635, 637, 638, 639, 643, 646, 670, 678, 699, 701, 702, 713, 726, 741, 773, 806, 811, 877, 931, 945, 968, 972, 975, 978, 981, 984, 994, 996, 999, 1017, 1019, 1069, 1071, 1088, 1093, 1107, 1117, 1124], "index": [7, 13, 23, 29, 39, 51, 53, 90, 110, 111, 136, 137, 146, 159, 161, 166, 171, 173, 174, 176, 177, 179, 181, 185, 186, 188, 191, 193, 196, 197, 199, 200, 202, 205, 207, 210, 212, 213, 215, 216, 218, 219, 221, 222, 223, 226, 228, 229, 231, 233, 234, 235, 237, 238, 240, 249, 250, 252, 253, 258, 259, 260, 262, 264, 266, 268, 269, 272, 273, 274, 278, 279, 281, 284, 287, 290, 291, 292, 294, 317, 324, 348, 364, 390, 418, 426, 521, 524, 527, 530, 533, 536, 537, 539, 577, 578, 580, 585, 624, 664, 692, 704, 726, 769, 936, 939, 943, 994, 995, 1007, 1010, 1017, 1023, 1024, 1025, 1026, 1028, 1030, 1043, 1049, 1054, 1069, 1071, 1072, 1073, 1075, 1076, 1077, 1085, 1087, 1089, 1091, 1092, 1094, 1098, 1099, 1109, 1111, 1116], "out": [7, 31, 44, 45, 50, 55, 63, 65, 75, 85, 106, 113, 115, 119, 126, 132, 133, 136, 137, 139, 140, 141, 142, 143, 145, 146, 147, 150, 151, 155, 160, 161, 168, 169, 172, 176, 179, 180, 188, 193, 196, 201, 209, 215, 216, 218, 225, 228, 232, 236, 265, 291, 292, 303, 317, 323, 328, 339, 360, 378, 384, 385, 393, 404, 411, 418, 419, 420, 424, 426, 427, 432, 437, 440, 442, 444, 469, 470, 485, 488, 498, 514, 520, 537, 544, 546, 560, 575, 617, 620, 655, 670, 689, 692, 705, 716, 722, 741, 742, 751, 773, 781, 786, 800, 801, 804, 808, 812, 815, 819, 829, 860, 866, 870, 877, 878, 879, 896, 897, 913, 931, 934, 944, 945, 947, 959, 964, 971, 975, 1015, 1016, 1023, 1049, 1052, 1079, 1084, 1086, 1092, 1094, 1095, 1100, 1106, 1125], "rang": [7, 29, 42, 63, 90, 108, 113, 114, 147, 160, 161, 162, 167, 176, 179, 181, 184, 185, 188, 191, 193, 196, 197, 200, 207, 208, 210, 211, 213, 214, 215, 218, 219, 221, 223, 224, 227, 228, 233, 234, 236, 237, 239, 241, 243, 251, 252, 253, 259, 261, 262, 269, 270, 272, 273, 275, 278, 279, 281, 290, 292, 294, 309, 363, 390, 406, 408, 454, 488, 491, 492, 496, 520, 536, 537, 573, 575, 578, 581, 682, 720, 723, 725, 726, 737, 870, 877, 926, 932, 935, 967, 970, 972, 977, 979, 981, 983, 993, 994, 1002, 1006, 1023, 1027, 1028, 1029, 1030, 1040, 1042, 1043, 1044, 1046, 1050, 1051, 1052, 1053, 1054, 1055, 1069, 1081, 1084, 1092, 1094, 1124, 1125, 1135], "48": [7, 143, 150, 159, 173, 178, 183, 188, 190, 193, 196, 199, 205, 212, 215, 220, 222, 225, 228, 232, 235, 238, 241, 250, 253, 260, 270, 274, 280, 292, 309, 312, 313, 877], "append": [7, 159, 160, 161, 162, 163, 173, 178, 180, 183, 188, 190, 191, 192, 193, 196, 199, 204, 205, 206, 209, 212, 213, 215, 220, 222, 225, 228, 232, 235, 238, 241, 250, 253, 257, 260, 270, 274, 280, 292, 312, 313, 426, 429, 519, 537, 579, 595, 607, 634, 734, 746, 761, 773, 800, 801, 815, 818, 839, 852, 877, 886, 899, 935, 967, 973, 974, 987, 1003, 1008, 1011, 1013, 1018, 1021, 1022, 1048, 1096, 1100], "one": [7, 21, 27, 32, 40, 44, 45, 50, 59, 62, 63, 66, 80, 84, 85, 106, 110, 111, 113, 114, 117, 119, 120, 122, 128, 130, 134, 139, 140, 141, 142, 143, 144, 146, 147, 150, 151, 155, 160, 161, 162, 164, 169, 172, 173, 176, 178, 180, 183, 188, 190, 191, 192, 193, 196, 199, 201, 202, 209, 212, 215, 220, 222, 223, 225, 226, 228, 231, 232, 235, 238, 240, 250, 253, 256, 259, 260, 262, 264, 266, 270, 274, 279, 280, 282, 291, 302, 303, 308, 309, 314, 317, 323, 335, 340, 347, 358, 363, 365, 373, 378, 380, 381, 385, 388, 390, 395, 398, 406, 407, 408, 410, 414, 418, 420, 426, 427, 429, 430, 432, 434, 438, 439, 442, 443, 444, 449, 451, 452, 454, 455, 463, 468, 470, 488, 491, 493, 494, 498, 499, 501, 520, 531, 537, 548, 549, 557, 558, 560, 561, 562, 563, 564, 575, 576, 584, 595, 598, 602, 617, 624, 641, 642, 645, 646, 647, 650, 659, 670, 689, 691, 692, 700, 702, 703, 704, 705, 706, 712, 714, 716, 724, 734, 741, 748, 751, 761, 767, 773, 781, 789, 793, 798, 799, 800, 806, 815, 817, 818, 833, 852, 866, 870, 872, 873, 874, 877, 878, 879, 880, 882, 886, 889, 890, 896, 897, 899, 900, 903, 906, 907, 909, 915, 916, 917, 918, 920, 923, 926, 929, 931, 932, 933, 940, 944, 947, 950, 953, 959, 962, 963, 965, 966, 968, 970, 971, 973, 979, 981, 982, 984, 995, 996, 999, 1000, 1001, 1003, 1007, 1008, 1010, 1012, 1013, 1017, 1019, 1021, 1022, 1029, 1039, 1042, 1049, 1050, 1075, 1076, 1077, 1078, 1080, 1084, 1085, 1087, 1089, 1095, 1096, 1097, 1101, 1105, 1107, 1112, 1114, 1127, 1130], "49": [7, 150, 159, 173, 178, 183, 188, 190, 193, 196, 199, 205, 209, 212, 215, 220, 222, 228, 232, 235, 238, 241, 250, 253, 257, 260, 270, 274, 280, 292, 309, 312, 313, 685, 818, 959, 973], "extend": [7, 141, 142, 173, 190, 191, 193, 198, 204, 209, 212, 215, 220, 222, 228, 232, 235, 238, 250, 253, 260, 266, 270, 274, 280, 312, 447, 454, 463, 488, 561, 563, 564, 616, 734, 805, 1003, 1008, 1018, 1076, 1088], "slice": [7, 29, 90, 161, 163, 172, 176, 177, 179, 181, 186, 189, 190, 193, 200, 212, 213, 215, 216, 219, 223, 224, 230, 231, 233, 234, 235, 237, 249, 252, 254, 259, 262, 269, 272, 273, 275, 278, 279, 281, 290, 291, 294, 726, 771, 932, 994, 1007, 1011, 1030, 1043, 1054, 1069, 1085, 1089, 1091, 1093, 1098], "inclus": [7, 179, 193, 220, 232, 384, 577, 1032, 1092], "exclus": [7, 167, 193, 215, 232, 269, 366, 577, 712, 899, 932, 981, 1017, 1021, 1032, 1092], "51": [7, 150, 173, 178, 183, 188, 190, 193, 196, 199, 205, 209, 212, 215, 220, 222, 228, 232, 235, 238, 241, 250, 253, 257, 260, 270, 274, 280, 292, 309, 312, 599, 600, 601, 602, 855, 857, 1075], "l\u00f6schen": [7, 183, 189, 193, 317], "52": [7, 150, 159, 173, 178, 183, 188, 190, 193, 196, 199, 205, 209, 212, 215, 220, 222, 228, 232, 235, 238, 241, 250, 253, 260, 270, 274, 280, 292, 312, 313, 879, 1075], "del": [7, 38, 159, 162, 163, 173, 188, 190, 193, 196, 204, 209, 212, 215, 220, 222, 228, 232, 235, 238, 241, 250, 253, 260, 270, 274, 280, 292, 310, 312, 978, 1003, 1019], "53": [7, 143, 173, 178, 183, 188, 190, 193, 196, 199, 205, 209, 212, 215, 220, 222, 228, 232, 235, 238, 241, 250, 253, 257, 260, 270, 274, 280, 292, 309, 312, 324, 468, 469, 695, 753, 855, 877, 947, 959, 1075, 1076], "iter": [7, 24, 29, 63, 115, 160, 163, 167, 172, 176, 177, 179, 181, 184, 185, 189, 191, 193, 197, 198, 200, 201, 203, 207, 208, 210, 211, 213, 214, 216, 217, 218, 219, 221, 223, 224, 227, 230, 232, 234, 235, 239, 251, 254, 260, 268, 269, 271, 275, 280, 290, 293, 294, 302, 317, 323, 375, 377, 390, 426, 451, 501, 520, 537, 579, 580, 581, 585, 588, 595, 598, 600, 602, 607, 657, 664, 673, 694, 720, 726, 896, 968, 972, 974, 983, 996, 1006, 1020, 1021, 1027, 1028, 1029, 1030, 1043, 1054, 1066, 1069, 1071, 1081, 1083, 1096, 1098, 1135], "mittel": [7, 11, 23, 163, 173, 175, 191, 193, 198, 335, 1119, 1122, 1131, 1139], "54": [7, 150, 159, 173, 178, 183, 188, 190, 193, 196, 199, 205, 209, 212, 215, 220, 222, 225, 228, 232, 235, 238, 241, 250, 253, 260, 270, 274, 280, 292, 309, 311, 312, 324, 599, 600, 601, 602, 702, 763, 855, 877, 959, 1075], "element": [7, 8, 35, 38, 106, 109, 110, 111, 113, 160, 162, 163, 173, 178, 179, 184, 185, 188, 190, 191, 193, 194, 196, 199, 203, 204, 205, 209, 212, 213, 215, 219, 221, 222, 228, 231, 232, 235, 239, 260, 264, 267, 270, 279, 292, 311, 312, 348, 375, 390, 398, 402, 405, 490, 504, 507, 509, 518, 537, 542, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 588, 592, 595, 599, 602, 624, 642, 645, 647, 664, 678, 692, 694, 726, 734, 941, 973, 975, 992, 1003, 1008, 1009, 1018, 1020, 1053, 1079, 1096, 1105, 1128, 1135], "55": [7, 150, 159, 173, 178, 183, 188, 190, 193, 196, 199, 205, 209, 212, 215, 220, 222, 228, 232, 235, 238, 241, 250, 253, 257, 260, 270, 274, 280, 292, 309, 311, 312, 313, 324, 401, 426, 632, 633, 634, 635, 637, 947, 1028], "def": [7, 63, 159, 160, 163, 173, 178, 179, 183, 188, 190, 191, 193, 196, 199, 200, 205, 206, 209, 212, 213, 215, 220, 222, 225, 228, 232, 235, 238, 241, 250, 253, 258, 260, 270, 274, 280, 285, 288, 292, 312, 313, 426, 684, 925, 968, 969, 970, 973, 974, 975, 978, 979, 981, 983, 985, 987, 988, 989, 990, 991, 992, 993, 999, 1002, 1012, 1013, 1018, 1022, 1053, 1059, 1066, 1067, 1068, 1087, 1092, 1093, 1095, 1105, 1106], "is_integ": [7, 193, 250], "elem": [7, 159, 163, 173, 178, 183, 188, 190, 193, 205, 212, 215, 220, 225, 250, 253, 260, 270, 274, 280, 504, 601, 603, 650, 670, 672, 674, 677, 691, 692, 694, 714, 975, 1018, 1022], "type": [7, 29, 50, 78, 83, 100, 110, 111, 120, 132, 133, 136, 139, 140, 143, 145, 147, 155, 159, 160, 163, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 189, 190, 192, 193, 196, 199, 200, 201, 204, 205, 209, 214, 217, 218, 220, 222, 226, 227, 230, 232, 236, 238, 240, 241, 243, 251, 253, 256, 257, 260, 268, 269, 270, 273, 274, 280, 285, 289, 290, 291, 293, 294, 309, 310, 311, 312, 317, 319, 320, 328, 350, 361, 362, 369, 374, 379, 380, 384, 386, 390, 392, 393, 396, 399, 400, 401, 402, 403, 406, 408, 409, 411, 412, 416, 421, 422, 426, 442, 444, 453, 456, 464, 470, 500, 504, 525, 534, 544, 546, 552, 553, 557, 559, 560, 570, 578, 607, 613, 617, 620, 622, 624, 626, 632, 644, 645, 650, 655, 656, 664, 670, 681, 682, 684, 689, 690, 691, 692, 701, 702, 704, 705, 706, 711, 721, 722, 723, 724, 725, 726, 729, 732, 734, 739, 742, 761, 773, 799, 803, 815, 818, 830, 833, 836, 847, 849, 850, 853, 861, 869, 870, 872, 877, 881, 886, 895, 896, 899, 902, 903, 904, 905, 906, 916, 928, 937, 940, 944, 945, 947, 964, 966, 969, 972, 975, 979, 984, 985, 986, 993, 997, 999, 1001, 1002, 1003, 1007, 1009, 1010, 1011, 1016, 1017, 1019, 1021, 1023, 1036, 1047, 1048, 1066, 1069, 1071, 1076, 1080, 1084, 1089, 1090, 1092, 1100, 1105, 1107, 1125, 1126], "int": [7, 21, 46, 107, 110, 111, 117, 142, 151, 160, 162, 173, 179, 183, 188, 190, 191, 193, 196, 200, 201, 206, 209, 212, 213, 215, 218, 220, 222, 225, 228, 232, 235, 238, 241, 250, 253, 259, 260, 262, 270, 274, 280, 288, 292, 310, 312, 313, 339, 340, 342, 344, 346, 348, 349, 350, 352, 353, 354, 358, 359, 360, 362, 363, 364, 368, 378, 380, 381, 382, 383, 384, 385, 387, 388, 390, 391, 393, 394, 395, 398, 400, 401, 405, 406, 407, 408, 409, 410, 414, 415, 449, 456, 463, 464, 468, 469, 470, 471, 474, 477, 478, 480, 482, 483, 484, 486, 488, 496, 498, 500, 502, 503, 504, 505, 506, 508, 518, 520, 525, 528, 534, 537, 544, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 567, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 588, 589, 590, 591, 595, 598, 599, 600, 601, 602, 603, 607, 609, 613, 614, 617, 619, 620, 622, 623, 624, 626, 631, 632, 633, 634, 635, 636, 637, 638, 642, 643, 645, 646, 649, 655, 656, 657, 659, 660, 661, 662, 664, 665, 666, 667, 668, 670, 671, 672, 674, 675, 676, 677, 678, 679, 680, 684, 685, 686, 687, 689, 690, 691, 692, 694, 696, 703, 704, 705, 706, 709, 711, 714, 716, 729, 732, 737, 739, 744, 751, 753, 755, 757, 761, 765, 767, 769, 778, 783, 790, 810, 830, 873, 877, 891, 893, 895, 896, 897, 899, 902, 903, 904, 905, 906, 909, 911, 914, 916, 918, 920, 922, 928, 931, 934, 935, 937, 940, 941, 944, 945, 947, 959, 963, 965, 990, 1001, 1002, 1010, 1011, 1013, 1016, 1022, 1023, 1038, 1061, 1063, 1066, 1067, 1093, 1112, 1117], "return": [7, 21, 27, 63, 107, 136, 139, 141, 142, 143, 147, 151, 159, 160, 163, 173, 177, 179, 181, 183, 188, 190, 191, 193, 196, 199, 200, 201, 205, 206, 209, 212, 213, 215, 218, 220, 222, 225, 228, 232, 235, 238, 242, 243, 250, 253, 258, 260, 264, 270, 274, 285, 288, 291, 292, 312, 313, 339, 340, 342, 346, 348, 350, 359, 368, 378, 384, 390, 391, 393, 400, 401, 404, 405, 407, 408, 410, 414, 426, 433, 442, 443, 444, 445, 449, 451, 454, 463, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 488, 495, 496, 500, 501, 504, 520, 528, 534, 537, 544, 545, 546, 548, 549, 552, 553, 554, 555, 557, 558, 559, 560, 561, 562, 563, 567, 569, 570, 572, 573, 574, 575, 576, 577, 579, 580, 581, 582, 583, 585, 586, 589, 590, 591, 595, 598, 599, 600, 601, 602, 603, 609, 613, 614, 617, 619, 620, 626, 630, 631, 632, 633, 634, 635, 636, 637, 638, 642, 647, 649, 650, 657, 659, 660, 661, 662, 664, 665, 666, 667, 668, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 684, 685, 686, 687, 688, 689, 692, 694, 699, 700, 702, 703, 704, 705, 706, 712, 714, 716, 720, 721, 722, 724, 729, 736, 744, 751, 755, 763, 765, 787, 789, 793, 810, 830, 877, 891, 893, 895, 896, 897, 899, 900, 902, 903, 904, 905, 906, 911, 914, 915, 916, 926, 928, 931, 937, 940, 941, 944, 945, 947, 959, 963, 964, 965, 966, 968, 969, 970, 971, 973, 974, 975, 983, 987, 988, 990, 991, 992, 1013, 1015, 1017, 1018, 1019, 1022, 1028, 1044, 1046, 1050, 1053, 1054, 1061, 1063, 1066, 1090, 1092, 1093, 1095, 1105, 1112, 1117], "els": [7, 21, 43, 50, 63, 110, 111, 114, 119, 140, 142, 143, 146, 155, 160, 163, 173, 176, 179, 183, 191, 193, 196, 199, 200, 201, 205, 209, 212, 213, 216, 217, 218, 220, 224, 225, 230, 232, 235, 239, 241, 250, 252, 253, 258, 260, 270, 274, 280, 292, 302, 313, 324, 346, 352, 363, 368, 379, 385, 386, 392, 396, 399, 403, 404, 412, 416, 421, 422, 426, 434, 435, 449, 473, 480, 483, 537, 560, 584, 585, 595, 602, 616, 636, 644, 649, 682, 703, 705, 712, 716, 723, 725, 726, 755, 765, 789, 800, 801, 806, 825, 827, 830, 836, 857, 878, 891, 894, 899, 925, 926, 928, 931, 933, 971, 978, 990, 991, 994, 1005, 1013, 1019, 1093, 1098, 1124], "fals": [7, 46, 110, 111, 143, 145, 159, 160, 173, 178, 183, 188, 190, 191, 193, 196, 199, 205, 209, 212, 213, 215, 220, 222, 225, 228, 232, 235, 238, 241, 250, 253, 257, 260, 264, 270, 274, 280, 285, 292, 311, 326, 342, 346, 363, 400, 426, 560, 585, 617, 624, 647, 659, 712, 716, 793, 806, 833, 925, 926, 931, 933, 953, 968, 983, 987, 990, 1003, 1004, 1006, 1007, 1011, 1089, 1090, 1093, 1095, 1112], "56": [7, 136, 150, 173, 178, 183, 188, 190, 193, 196, 199, 205, 209, 212, 215, 220, 222, 228, 232, 235, 238, 241, 250, 253, 257, 260, 270, 274, 280, 292, 309, 311, 312, 324, 363, 467, 555, 852, 877, 879, 1075, 1088, 1089, 1090, 1092, 1093, 1094, 1095], "x": [7, 23, 32, 42, 61, 63, 145, 151, 159, 160, 161, 163, 173, 183, 188, 190, 192, 193, 196, 199, 209, 212, 215, 216, 220, 222, 228, 232, 235, 238, 240, 241, 250, 253, 257, 260, 269, 270, 274, 313, 317, 359, 362, 363, 369, 384, 385, 387, 390, 393, 394, 398, 400, 408, 410, 414, 437, 488, 498, 535, 544, 545, 546, 547, 549, 551, 552, 553, 554, 555, 556, 558, 560, 562, 563, 570, 577, 585, 645, 646, 647, 649, 664, 666, 667, 668, 685, 696, 705, 799, 800, 801, 804, 808, 810, 815, 818, 820, 821, 829, 830, 855, 858, 862, 864, 870, 877, 878, 879, 895, 905, 911, 913, 914, 922, 926, 947, 948, 949, 950, 955, 959, 961, 962, 967, 968, 996, 998, 1004, 1012, 1013, 1015, 1016, 1017, 1020, 1021, 1025, 1049, 1076, 1093, 1105, 1106, 1112], "filter": [7, 29, 106, 109, 113, 157, 160, 193, 200, 213, 230, 253, 259, 262, 266, 267, 274, 291, 293, 490, 507, 542, 700, 701, 726, 798, 817, 866, 1069, 1085, 1091, 1094, 1098, 1112], "57": [7, 136, 150, 173, 178, 183, 188, 190, 193, 196, 199, 205, 209, 212, 215, 220, 222, 228, 232, 235, 238, 241, 250, 253, 260, 270, 274, 280, 292, 309, 312, 313, 433, 438, 855, 877, 890, 948, 949, 1075], "zero": [7, 32, 38, 136, 142, 158, 160, 161, 163, 173, 183, 191, 193, 196, 209, 215, 220, 222, 225, 228, 232, 235, 250, 274, 317, 339, 348, 366, 691, 701, 705, 732, 744, 759, 804, 833, 848, 855, 879, 899, 920, 926, 929, 932, 935, 940, 941, 1007], "two": [7, 12, 17, 29, 32, 34, 35, 36, 38, 42, 44, 54, 69, 85, 106, 128, 130, 133, 134, 139, 140, 141, 142, 155, 160, 161, 162, 168, 172, 173, 178, 183, 184, 186, 188, 190, 191, 193, 196, 197, 199, 201, 202, 203, 207, 209, 210, 213, 215, 218, 219, 220, 222, 223, 228, 229, 231, 232, 234, 236, 237, 238, 250, 252, 253, 256, 258, 259, 260, 268, 270, 272, 273, 274, 278, 279, 280, 284, 287, 303, 309, 317, 323, 326, 335, 336, 347, 354, 384, 390, 392, 393, 396, 398, 399, 402, 403, 405, 407, 410, 412, 416, 421, 422, 424, 425, 426, 427, 436, 439, 452, 454, 464, 468, 469, 488, 498, 500, 520, 528, 531, 537, 553, 558, 560, 577, 600, 642, 643, 644, 645, 646, 682, 688, 691, 692, 694, 701, 704, 706, 723, 725, 726, 771, 773, 776, 838, 840, 860, 870, 872, 877, 878, 879, 896, 899, 900, 907, 917, 918, 926, 931, 940, 945, 955, 965, 973, 979, 982, 985, 990, 993, 994, 1000, 1003, 1006, 1017, 1019, 1021, 1027, 1030, 1032, 1033, 1034, 1037, 1039, 1040, 1043, 1044, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1066, 1069, 1070, 1076, 1078, 1084, 1092, 1106, 1112, 1125, 1135, 1140], "58": [7, 143, 150, 173, 178, 183, 188, 190, 193, 196, 199, 205, 209, 212, 215, 220, 222, 228, 232, 235, 238, 241, 250, 253, 260, 270, 274, 280, 292, 312, 317, 322, 324, 426, 879, 948, 949, 959, 1075, 1076], "59": [7, 150, 173, 178, 183, 188, 190, 193, 196, 199, 205, 209, 212, 215, 220, 222, 228, 232, 235, 238, 241, 250, 253, 260, 270, 274, 280, 292, 309, 312, 324, 949, 950, 959, 1075], "three": [7, 12, 32, 36, 38, 43, 63, 110, 111, 141, 153, 160, 161, 172, 173, 176, 177, 183, 188, 190, 191, 193, 199, 207, 209, 212, 215, 220, 222, 225, 228, 232, 235, 238, 250, 253, 258, 259, 260, 262, 268, 269, 270, 274, 279, 280, 292, 317, 335, 404, 579, 624, 806, 815, 818, 833, 870, 877, 879, 899, 931, 940, 975, 985, 1003, 1007, 1017, 1019, 1021, 1033, 1039, 1070, 1071, 1126, 1140], "60": [7, 63, 106, 150, 173, 178, 183, 188, 190, 193, 196, 199, 205, 209, 212, 215, 220, 222, 228, 232, 235, 238, 240, 241, 250, 253, 257, 260, 270, 274, 280, 292, 311, 312, 468, 469, 470, 482, 483, 484, 491, 815, 877, 878, 879, 973, 1075, 1076], "61": [7, 63, 150, 161, 173, 178, 183, 188, 190, 193, 196, 199, 205, 212, 215, 220, 222, 228, 232, 235, 241, 250, 253, 260, 270, 274, 280, 292, 309, 312, 317, 322, 1075, 1076], "62": [7, 150, 173, 178, 183, 188, 190, 193, 196, 199, 205, 209, 212, 215, 220, 222, 228, 232, 235, 238, 241, 250, 253, 257, 260, 270, 274, 280, 292, 312, 815, 1028, 1075], "63": [7, 150, 173, 178, 183, 188, 190, 193, 196, 199, 205, 212, 215, 220, 222, 228, 232, 235, 238, 241, 250, 253, 257, 260, 270, 274, 280, 292, 309, 312, 317, 322, 1028, 1075], "k": [7, 29, 142, 161, 163, 173, 176, 188, 190, 193, 196, 200, 201, 212, 215, 220, 222, 225, 228, 235, 238, 250, 253, 259, 260, 270, 280, 290, 292, 294, 318, 319, 338, 466, 599, 642, 704, 726, 833, 880, 915, 1069, 1072, 1078, 1085, 1105], "v": [7, 20, 23, 31, 32, 88, 122, 136, 140, 147, 161, 164, 167, 173, 177, 179, 181, 185, 187, 188, 191, 192, 193, 198, 200, 201, 202, 203, 209, 212, 213, 215, 216, 218, 219, 221, 227, 230, 231, 233, 236, 238, 242, 249, 250, 253, 256, 261, 269, 271, 275, 279, 280, 286, 292, 303, 317, 414, 438, 443, 464, 490, 524, 542, 599, 619, 642, 646, 650, 655, 656, 657, 664, 665, 666, 667, 668, 673, 676, 677, 678, 684, 690, 691, 692, 715, 722, 725, 726, 735, 740, 743, 745, 750, 754, 756, 760, 764, 765, 766, 768, 770, 773, 775, 777, 781, 782, 784, 788, 791, 794, 799, 803, 806, 807, 810, 833, 835, 862, 869, 892, 898, 900, 908, 910, 924, 927, 930, 932, 940, 941, 947, 990, 1013, 1098, 1107, 1108, 1120, 1122, 1139, 1141], "65": [7, 173, 178, 183, 188, 190, 193, 196, 199, 205, 209, 212, 215, 220, 222, 228, 232, 235, 238, 241, 250, 253, 257, 260, 270, 274, 280, 292, 309, 312, 632, 935, 1075, 1076], "item": [7, 140, 160, 162, 173, 178, 183, 188, 190, 193, 196, 199, 200, 204, 205, 209, 212, 213, 215, 220, 222, 225, 228, 232, 235, 238, 240, 244, 245, 247, 250, 253, 258, 260, 270, 274, 280, 292, 298, 311, 402, 406, 408, 427, 691, 723, 725, 726, 940, 941, 975, 976, 977, 983, 1009, 1016, 1019, 1021, 1059, 1098, 1105], "66": [7, 143, 150, 173, 178, 183, 188, 190, 193, 196, 199, 205, 212, 215, 220, 222, 228, 232, 235, 238, 241, 250, 253, 260, 270, 274, 280, 292, 312, 622, 1028, 1075, 1076], "": [7, 8, 14, 20, 23, 31, 35, 37, 38, 40, 43, 44, 45, 48, 55, 59, 61, 62, 63, 65, 66, 78, 89, 104, 108, 109, 113, 115, 119, 126, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 157, 160, 161, 162, 164, 166, 167, 169, 170, 172, 173, 176, 178, 179, 183, 184, 188, 190, 191, 192, 193, 194, 196, 199, 201, 202, 205, 206, 209, 212, 213, 215, 216, 218, 219, 220, 222, 225, 226, 228, 232, 235, 238, 241, 244, 245, 247, 250, 253, 256, 257, 258, 259, 260, 262, 265, 266, 267, 268, 269, 270, 274, 277, 280, 282, 284, 287, 290, 291, 292, 294, 298, 302, 303, 311, 312, 314, 317, 320, 321, 335, 337, 350, 352, 358, 363, 384, 385, 388, 397, 402, 404, 406, 407, 408, 409, 410, 414, 425, 426, 427, 429, 430, 432, 434, 435, 438, 439, 442, 443, 444, 446, 447, 448, 449, 452, 453, 464, 466, 467, 469, 470, 474, 485, 487, 498, 499, 500, 501, 504, 510, 512, 513, 521, 524, 527, 528, 530, 533, 536, 539, 546, 548, 549, 552, 553, 556, 557, 559, 560, 569, 579, 589, 590, 600, 607, 609, 614, 616, 619, 620, 622, 626, 629, 633, 643, 644, 646, 648, 650, 653, 654, 655, 656, 659, 663, 664, 670, 679, 682, 684, 687, 691, 692, 694, 696, 700, 701, 702, 704, 706, 714, 716, 717, 722, 724, 725, 726, 732, 741, 744, 746, 751, 757, 759, 769, 778, 781, 793, 798, 799, 800, 801, 804, 805, 808, 810, 811, 815, 816, 817, 819, 823, 825, 827, 829, 830, 831, 833, 835, 836, 852, 855, 856, 858, 859, 861, 862, 864, 865, 866, 870, 873, 877, 878, 879, 880, 881, 888, 889, 890, 891, 893, 894, 895, 896, 897, 899, 900, 902, 903, 904, 905, 906, 907, 909, 911, 913, 914, 916, 917, 918, 922, 923, 926, 928, 931, 932, 933, 935, 936, 937, 939, 941, 943, 944, 945, 950, 959, 961, 962, 963, 964, 965, 966, 968, 969, 970, 973, 974, 976, 977, 978, 982, 983, 990, 994, 995, 996, 999, 1003, 1004, 1010, 1013, 1016, 1017, 1020, 1021, 1028, 1033, 1040, 1051, 1058, 1059, 1060, 1062, 1070, 1077, 1079, 1080, 1083, 1084, 1087, 1094, 1095, 1096, 1097, 1099, 1100, 1105, 1106, 1111, 1114, 1116, 1117, 1120, 1125, 1127, 1130, 1143], "rot": [7, 193, 204], "gruen": [7, 193], "blau": [7, 193, 204], "67": [7, 150, 161, 173, 183, 188, 190, 193, 196, 199, 205, 212, 215, 220, 222, 228, 232, 235, 238, 241, 250, 253, 260, 270, 274, 280, 292, 312, 317, 322, 426, 491, 935, 1016, 1028, 1075, 1076], "69": [7, 61, 145, 150, 173, 178, 183, 188, 190, 193, 196, 199, 205, 209, 212, 215, 220, 222, 228, 232, 235, 238, 241, 250, 253, 260, 270, 274, 280, 292, 312, 1075, 1076, 1095], "schwarz": [7, 193, 204], "70": [7, 61, 142, 150, 173, 178, 180, 183, 188, 190, 193, 196, 199, 205, 212, 215, 220, 222, 228, 232, 235, 238, 241, 250, 253, 257, 260, 270, 274, 280, 292, 312, 426, 491, 877, 878, 879, 973, 1075, 1076, 1105], "add": [7, 23, 42, 44, 49, 65, 115, 120, 122, 124, 135, 136, 140, 141, 142, 146, 147, 151, 155, 160, 169, 172, 173, 176, 179, 188, 190, 191, 193, 196, 199, 201, 205, 209, 212, 213, 215, 220, 225, 228, 232, 235, 238, 244, 245, 250, 253, 256, 260, 264, 270, 274, 280, 285, 287, 292, 317, 323, 365, 366, 405, 406, 414, 427, 428, 434, 437, 444, 446, 447, 463, 464, 468, 473, 474, 485, 493, 500, 502, 520, 534, 544, 557, 558, 560, 562, 631, 632, 633, 642, 650, 670, 681, 692, 700, 714, 716, 739, 741, 742, 746, 753, 761, 763, 773, 786, 789, 799, 872, 877, 878, 879, 907, 931, 933, 935, 941, 946, 959, 961, 968, 969, 991, 995, 1003, 1021, 1026, 1093, 1105, 1106, 1112], "71": [7, 150, 173, 178, 183, 188, 190, 193, 196, 199, 205, 212, 215, 220, 222, 228, 232, 235, 238, 241, 250, 253, 260, 270, 274, 280, 292, 312, 317, 322, 948, 949, 1075, 1076], "72": [7, 150, 173, 178, 183, 188, 190, 193, 196, 199, 205, 212, 215, 220, 222, 228, 232, 235, 238, 241, 250, 253, 257, 260, 270, 274, 280, 292, 309, 312, 317, 322, 552, 864, 959, 1028, 1075, 1076], "remov": [7, 57, 99, 109, 113, 146, 147, 160, 162, 173, 188, 193, 199, 205, 213, 215, 220, 222, 228, 232, 235, 239, 240, 246, 253, 255, 256, 270, 274, 276, 277, 280, 291, 292, 429, 430, 448, 462, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 507, 508, 509, 514, 518, 537, 542, 572, 578, 595, 628, 650, 703, 714, 715, 716, 721, 724, 725, 726, 734, 751, 761, 769, 792, 799, 800, 801, 802, 803, 806, 807, 820, 821, 823, 825, 826, 827, 828, 830, 831, 837, 838, 839, 840, 842, 843, 845, 847, 853, 869, 880, 890, 892, 898, 900, 903, 908, 910, 913, 924, 927, 930, 932, 949, 951, 952, 953, 954, 955, 956, 957, 958, 959, 963, 973, 993, 1003, 1018, 1019, 1020, 1053], "73": [7, 150, 161, 173, 183, 188, 190, 193, 196, 199, 205, 212, 215, 220, 222, 228, 232, 235, 241, 250, 253, 260, 270, 274, 280, 292, 309, 312, 1075], "74": [7, 143, 145, 150, 173, 183, 188, 190, 193, 196, 199, 205, 212, 215, 220, 222, 228, 232, 235, 238, 241, 250, 253, 260, 270, 274, 280, 292, 312, 855, 864, 1028, 1075, 1076], "75": [7, 150, 173, 183, 188, 190, 193, 196, 199, 201, 205, 209, 212, 215, 220, 222, 228, 232, 235, 238, 241, 250, 253, 260, 270, 274, 280, 292, 312, 426, 1075, 1076], "sum": [7, 38, 63, 173, 193, 197, 198, 212, 213, 215, 218, 220, 228, 231, 232, 235, 238, 253, 260, 375, 390, 405, 407, 408, 410, 474, 500, 520, 544, 558, 560, 573, 577, 625, 639, 726, 932, 990, 1006, 1089], "100": [7, 32, 139, 140, 145, 155, 159, 160, 173, 183, 190, 193, 196, 199, 205, 209, 212, 215, 220, 222, 225, 228, 231, 232, 235, 238, 240, 241, 250, 253, 256, 257, 258, 260, 264, 270, 274, 280, 291, 292, 312, 313, 317, 322, 375, 381, 382, 424, 427, 440, 449, 482, 483, 491, 510, 572, 573, 574, 575, 576, 578, 579, 580, 581, 595, 642, 659, 680, 744, 783, 829, 832, 855, 872, 911, 933, 935, 939, 940, 948, 949, 974, 1006, 1010, 1028, 1059, 1105], "5050": [7, 173, 193, 215, 228, 235, 260], "bestimmen": [7, 193], "maximum": [7, 29, 133, 173, 183, 184, 186, 188, 191, 193, 196, 197, 203, 207, 209, 210, 212, 213, 215, 219, 220, 222, 223, 225, 228, 229, 231, 232, 234, 236, 237, 252, 253, 259, 260, 272, 273, 274, 278, 279, 313, 365, 638, 716, 726, 734, 810, 870, 935, 941, 1013, 1030, 1032, 1033, 1034, 1037, 1040, 1043, 1044, 1050, 1051, 1052, 1053, 1054, 1055, 1069, 1070, 1074, 1075, 1076, 1077, 1100, 1135], "zwei": [7, 64, 149, 159, 167, 173, 185, 188, 190, 193, 196, 209, 212, 220, 225, 228, 232, 238, 260, 280, 288, 292, 312, 508, 599, 600, 601, 602, 860, 1122, 1139], "inlin": [7, 120, 161, 167, 179, 193, 209, 238, 241, 243, 265, 292, 385, 407, 410, 531, 546, 560, 599, 636, 688, 706, 967, 1046], "ohn": [7, 23, 157, 159, 167, 193, 196, 795, 861, 1121, 1141, 1142, 1143], "funktion": [7, 23, 163, 167, 173, 184, 185, 186, 190, 193, 196, 199, 220, 222, 225, 228, 260, 292, 312, 1135], "666": [7, 42, 50, 107, 159, 160, 173, 183, 188, 190, 193, 196, 199, 205, 209, 212, 215, 220, 222, 225, 228, 232, 235, 238, 241, 250, 253, 260, 270, 274, 280, 292, 308, 309, 310, 312, 313, 348, 428, 447, 502, 503, 504, 505, 506, 510, 511, 512, 513, 515, 516, 518, 525, 537, 544, 548, 557, 559, 582, 583, 584, 585, 586, 588, 591, 599, 602, 622, 626, 655, 657, 664, 666, 667, 668, 672, 692, 696, 699, 701, 706, 709, 720, 721, 722, 731, 732, 966, 970, 1012, 1013, 1016, 1117], "var1": [7, 183, 193, 1036], "var2": [7, 183, 193, 1036], "6712": [7, 193, 215], "isn": [7, 139, 155, 193, 259, 262, 325, 339, 390, 577, 581, 620, 643, 670, 690, 877, 1015, 1112], "fehler": [7, 167, 173, 193, 317, 322], "link": [7, 13, 17, 27, 32, 44, 65, 103, 104, 113, 133, 136, 137, 139, 140, 146, 147, 148, 149, 150, 151, 157, 159, 167, 173, 180, 193, 216, 218, 246, 247, 255, 256, 264, 269, 276, 277, 282, 317, 330, 331, 380, 393, 399, 403, 407, 412, 416, 421, 422, 427, 430, 432, 433, 438, 448, 462, 485, 490, 491, 492, 493, 494, 495, 496, 497, 500, 520, 527, 528, 542, 557, 644, 650, 658, 682, 692, 693, 723, 724, 725, 726, 734, 735, 739, 740, 743, 751, 754, 763, 764, 773, 775, 777, 782, 788, 791, 794, 803, 853, 855, 860, 869, 878, 885, 915, 918, 920, 947, 948, 949, 950, 952, 953, 954, 955, 957, 959, 965, 1070, 1099, 1109, 1112, 1119, 1120, 1127], "\u212c": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 113, 114, 115, 116, 117, 118, 119, 120, 176, 177, 179, 180, 181, 182, 184, 186, 187, 194, 197, 200, 201, 202, 203, 207, 210, 213, 216, 218, 219, 223, 226, 229, 231, 234, 240, 244, 245, 246, 247, 248, 255, 256, 258, 265, 266, 267, 268, 269, 276, 277, 282, 283, 284, 287, 290, 291, 294, 295, 298, 299, 300, 302, 303, 304, 305, 306, 308, 317, 324, 325, 326, 327, 328, 329, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 394, 395, 397, 398, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 417, 418, 419, 420, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 463, 464, 471, 472, 473, 474, 475, 477, 478, 479, 485, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 569, 570, 577, 578, 579, 582, 583, 584, 585, 586, 588, 589, 590, 591, 592, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 607, 609, 611, 613, 614, 616, 617, 618, 619, 620, 622, 623, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 641, 642, 643, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 663, 664, 669, 670, 679, 680, 681, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 716, 717, 724, 728, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 750, 751, 753, 755, 757, 759, 761, 763, 765, 767, 769, 771, 775, 776, 778, 780, 781, 783, 786, 787, 789, 790, 792, 793, 795, 797, 798, 799, 804, 805, 808, 809, 810, 811, 812, 813, 815, 816, 817, 818, 829, 830, 831, 832, 833, 834, 835, 836, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 871, 872, 873, 874, 877, 880, 886, 887, 888, 889, 890, 891, 893, 894, 895, 896, 897, 898, 899, 902, 903, 904, 905, 906, 909, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 925, 926, 928, 929, 931, 933, 934, 935, 947, 948, 949, 950, 955, 959, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 973, 975, 978, 979, 981, 983, 984, 985, 987, 988, 989, 990, 991, 992, 993, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1026, 1027, 1028, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1079, 1080, 1082, 1083, 1084, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1101, 1105, 1106, 1107, 1108, 1135], "\u2145": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 113, 114, 115, 116, 117, 118, 119, 120, 176, 177, 179, 180, 181, 182, 184, 186, 187, 194, 197, 200, 201, 202, 203, 207, 210, 213, 216, 218, 219, 223, 226, 229, 231, 234, 240, 244, 245, 246, 247, 248, 255, 256, 258, 265, 266, 267, 268, 269, 276, 277, 282, 283, 284, 287, 290, 291, 294, 295, 298, 299, 300, 302, 303, 304, 305, 306, 308, 317, 324, 325, 326, 327, 328, 329, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 394, 395, 397, 398, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 417, 418, 419, 420, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 463, 464, 471, 472, 473, 474, 475, 477, 478, 479, 485, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 569, 570, 577, 578, 579, 582, 583, 584, 585, 586, 588, 589, 590, 591, 592, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 607, 609, 611, 613, 614, 616, 617, 618, 619, 620, 622, 623, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 641, 642, 643, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 663, 664, 669, 670, 679, 680, 681, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 716, 717, 724, 728, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 750, 751, 753, 755, 757, 759, 761, 763, 765, 767, 769, 771, 775, 776, 778, 780, 781, 783, 786, 787, 789, 790, 792, 793, 795, 797, 798, 799, 804, 805, 808, 809, 810, 811, 812, 813, 815, 816, 817, 818, 829, 830, 831, 832, 833, 834, 835, 836, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 871, 872, 873, 874, 877, 880, 886, 887, 888, 889, 890, 891, 893, 894, 895, 896, 897, 898, 899, 902, 903, 904, 905, 906, 909, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 925, 926, 928, 929, 931, 933, 934, 935, 947, 948, 949, 950, 955, 959, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 973, 975, 978, 979, 981, 983, 984, 985, 987, 988, 989, 990, 991, 992, 993, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1026, 1027, 1028, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1079, 1080, 1082, 1083, 1084, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1101, 1105, 1106, 1107, 1108, 1135], "\u212d": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 113, 114, 115, 116, 117, 118, 119, 120, 176, 177, 179, 180, 181, 182, 184, 186, 187, 194, 197, 200, 201, 202, 203, 207, 210, 213, 216, 218, 219, 223, 226, 229, 231, 234, 240, 244, 245, 246, 247, 248, 255, 256, 258, 265, 266, 267, 268, 269, 276, 277, 282, 283, 284, 287, 290, 291, 294, 295, 298, 299, 300, 302, 303, 304, 305, 306, 308, 317, 324, 325, 326, 327, 328, 329, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 394, 395, 397, 398, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 417, 418, 419, 420, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 463, 464, 471, 472, 473, 474, 475, 477, 478, 479, 485, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 569, 570, 577, 578, 579, 582, 583, 584, 585, 586, 588, 589, 590, 591, 592, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 607, 609, 611, 613, 614, 616, 617, 618, 619, 620, 622, 623, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 641, 642, 643, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 663, 664, 669, 670, 679, 680, 681, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 716, 717, 724, 728, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 750, 751, 753, 755, 757, 759, 761, 763, 765, 767, 769, 771, 775, 776, 778, 780, 781, 783, 786, 787, 789, 790, 792, 793, 795, 797, 798, 799, 804, 805, 808, 809, 810, 811, 812, 813, 815, 816, 817, 818, 829, 830, 831, 832, 833, 834, 835, 836, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 871, 872, 873, 874, 877, 880, 886, 887, 888, 889, 890, 891, 893, 894, 895, 896, 897, 898, 899, 902, 903, 904, 905, 906, 909, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 925, 926, 928, 929, 931, 933, 934, 935, 947, 948, 949, 950, 955, 959, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 973, 975, 978, 979, 981, 983, 984, 985, 987, 988, 989, 990, 991, 992, 993, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1026, 1027, 1028, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1079, 1080, 1082, 1083, 1084, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1101, 1105, 1106, 1107, 1108, 1135], "\u2102": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 113, 114, 115, 116, 117, 118, 119, 120, 176, 177, 179, 180, 181, 182, 184, 186, 187, 194, 197, 200, 201, 202, 203, 207, 210, 213, 216, 218, 219, 223, 226, 229, 231, 234, 240, 244, 245, 246, 247, 248, 255, 256, 258, 265, 266, 267, 268, 269, 276, 277, 282, 283, 284, 287, 290, 291, 294, 295, 298, 299, 300, 302, 303, 304, 305, 306, 308, 317, 324, 325, 326, 327, 328, 329, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 394, 395, 397, 398, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 417, 418, 419, 420, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 463, 464, 471, 472, 473, 474, 475, 477, 478, 479, 485, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 569, 570, 577, 578, 579, 582, 583, 584, 585, 586, 588, 589, 590, 591, 592, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 607, 609, 611, 613, 614, 616, 617, 618, 619, 620, 622, 623, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 641, 642, 643, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 663, 664, 669, 670, 679, 680, 681, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 716, 717, 724, 728, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 750, 751, 753, 755, 757, 759, 761, 763, 765, 767, 769, 771, 775, 776, 778, 780, 781, 783, 786, 787, 789, 790, 792, 793, 795, 797, 798, 799, 804, 805, 808, 809, 810, 811, 812, 813, 815, 816, 817, 818, 829, 830, 831, 832, 833, 834, 835, 836, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 871, 872, 873, 874, 877, 880, 886, 887, 888, 889, 890, 891, 893, 894, 895, 896, 897, 898, 899, 902, 903, 904, 905, 906, 909, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 925, 926, 928, 929, 931, 933, 934, 935, 947, 948, 949, 950, 955, 959, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 973, 975, 978, 979, 981, 983, 984, 985, 987, 988, 989, 990, 991, 992, 993, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1026, 1027, 1028, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1079, 1080, 1082, 1083, 1084, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1101, 1105, 1106, 1107, 1108, 1135], "\u2146": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 113, 114, 115, 116, 117, 118, 119, 120, 176, 177, 179, 180, 181, 182, 184, 186, 187, 194, 197, 200, 201, 202, 203, 207, 210, 213, 216, 218, 219, 223, 226, 229, 231, 234, 240, 244, 245, 246, 247, 248, 255, 256, 258, 265, 266, 267, 268, 269, 276, 277, 282, 283, 284, 287, 290, 291, 294, 295, 298, 299, 300, 302, 303, 304, 305, 306, 308, 317, 324, 325, 326, 327, 328, 329, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 394, 395, 397, 398, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 417, 418, 419, 420, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 463, 464, 471, 472, 473, 474, 475, 477, 478, 479, 485, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 569, 570, 577, 578, 579, 582, 583, 584, 585, 586, 588, 589, 590, 591, 592, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 607, 609, 611, 613, 614, 616, 617, 618, 619, 620, 622, 623, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 641, 642, 643, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 663, 664, 669, 670, 679, 680, 681, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 716, 717, 724, 728, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 750, 751, 753, 755, 757, 759, 761, 763, 765, 767, 769, 771, 775, 776, 778, 780, 781, 783, 786, 787, 789, 790, 792, 793, 795, 797, 798, 799, 804, 805, 808, 809, 810, 811, 812, 813, 815, 816, 817, 818, 829, 830, 831, 832, 833, 834, 835, 836, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 871, 872, 873, 874, 877, 880, 886, 887, 888, 889, 890, 891, 893, 894, 895, 896, 897, 898, 899, 902, 903, 904, 905, 906, 909, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 925, 926, 928, 929, 931, 933, 934, 935, 947, 948, 949, 950, 955, 959, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 973, 975, 978, 979, 981, 983, 984, 985, 987, 988, 989, 990, 991, 992, 993, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1026, 1027, 1028, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1079, 1080, 1082, 1083, 1084, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1101, 1105, 1106, 1107, 1108, 1135], "\u03dd": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 113, 114, 115, 116, 117, 118, 119, 120, 176, 177, 179, 180, 181, 182, 184, 186, 187, 194, 197, 200, 201, 202, 203, 207, 210, 213, 216, 218, 219, 223, 226, 229, 231, 234, 240, 244, 245, 246, 247, 248, 255, 256, 258, 265, 266, 267, 268, 269, 276, 277, 282, 283, 284, 287, 290, 291, 294, 295, 298, 299, 300, 302, 303, 304, 305, 306, 308, 317, 324, 325, 326, 327, 328, 329, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 394, 395, 397, 398, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 417, 418, 419, 420, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 463, 464, 471, 472, 473, 474, 475, 477, 478, 479, 485, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 569, 570, 577, 578, 579, 582, 583, 584, 585, 586, 588, 589, 590, 591, 592, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 607, 609, 611, 613, 614, 616, 617, 618, 619, 620, 622, 623, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 641, 642, 643, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 663, 664, 669, 670, 679, 680, 681, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 716, 717, 724, 728, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 750, 751, 753, 755, 757, 759, 761, 763, 765, 767, 769, 771, 775, 776, 778, 780, 781, 783, 786, 787, 789, 790, 792, 793, 795, 797, 798, 799, 804, 805, 808, 809, 810, 811, 812, 813, 815, 816, 817, 818, 829, 830, 831, 832, 833, 834, 835, 836, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 871, 872, 873, 874, 877, 880, 886, 887, 888, 889, 890, 891, 893, 894, 895, 896, 897, 898, 899, 902, 903, 904, 905, 906, 909, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 925, 926, 928, 929, 931, 933, 934, 935, 947, 948, 949, 950, 955, 959, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 973, 975, 978, 979, 981, 983, 984, 985, 987, 988, 989, 990, 991, 992, 993, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1026, 1027, 1028, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1079, 1080, 1082, 1083, 1084, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1101, 1105, 1106, 1107, 1108, 1135], "\u2130": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 113, 114, 115, 116, 117, 118, 119, 120, 176, 177, 179, 180, 181, 182, 184, 186, 187, 194, 197, 200, 201, 202, 203, 207, 210, 213, 216, 218, 219, 223, 226, 229, 231, 234, 240, 244, 245, 246, 247, 248, 255, 256, 258, 265, 266, 267, 268, 269, 276, 277, 282, 283, 284, 287, 290, 291, 294, 295, 298, 299, 300, 302, 303, 304, 305, 306, 308, 317, 324, 325, 326, 327, 328, 329, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 394, 395, 397, 398, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 417, 418, 419, 420, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 463, 464, 471, 472, 473, 474, 475, 477, 478, 479, 485, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 569, 570, 577, 578, 579, 582, 583, 584, 585, 586, 588, 589, 590, 591, 592, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 607, 609, 611, 613, 614, 616, 617, 618, 619, 620, 622, 623, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 641, 642, 643, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 663, 664, 669, 670, 679, 680, 681, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 716, 717, 724, 728, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 750, 751, 753, 755, 757, 759, 761, 763, 765, 767, 769, 771, 775, 776, 778, 780, 781, 783, 786, 787, 789, 790, 792, 793, 795, 797, 798, 799, 804, 805, 808, 809, 810, 811, 812, 813, 815, 816, 817, 818, 829, 830, 831, 832, 833, 834, 835, 836, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 871, 872, 873, 874, 877, 880, 886, 887, 888, 889, 890, 891, 893, 894, 895, 896, 897, 898, 899, 902, 903, 904, 905, 906, 909, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 925, 926, 928, 929, 931, 933, 934, 935, 947, 948, 949, 950, 955, 959, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 973, 975, 978, 979, 981, 983, 984, 985, 987, 988, 989, 990, 991, 992, 993, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1026, 1027, 1028, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1079, 1080, 1082, 1083, 1084, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1101, 1105, 1106, 1107, 1108, 1135], "\u2147": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 113, 114, 115, 116, 117, 118, 119, 120, 176, 177, 179, 180, 181, 182, 184, 186, 187, 194, 197, 200, 201, 202, 203, 207, 210, 213, 216, 218, 219, 223, 226, 229, 231, 234, 240, 244, 245, 246, 247, 248, 255, 256, 258, 265, 266, 267, 268, 269, 276, 277, 282, 283, 284, 287, 290, 291, 294, 295, 298, 299, 300, 302, 303, 304, 305, 306, 308, 317, 324, 325, 326, 327, 328, 329, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 394, 395, 397, 398, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 417, 418, 419, 420, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 463, 464, 471, 472, 473, 474, 475, 477, 478, 479, 485, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 569, 570, 577, 578, 579, 582, 583, 584, 585, 586, 588, 589, 590, 591, 592, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 607, 609, 611, 613, 614, 616, 617, 618, 619, 620, 622, 623, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 641, 642, 643, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 663, 664, 669, 670, 679, 680, 681, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 716, 717, 724, 728, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 750, 751, 753, 755, 757, 759, 761, 763, 765, 767, 769, 771, 775, 776, 778, 780, 781, 783, 786, 787, 789, 790, 792, 793, 795, 797, 798, 799, 804, 805, 808, 809, 810, 811, 812, 813, 815, 816, 817, 818, 829, 830, 831, 832, 833, 834, 835, 836, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 871, 872, 873, 874, 877, 880, 886, 887, 888, 889, 890, 891, 893, 894, 895, 896, 897, 898, 899, 902, 903, 904, 905, 906, 909, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 925, 926, 928, 929, 931, 933, 934, 935, 947, 948, 949, 950, 955, 959, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 973, 975, 978, 979, 981, 983, 984, 985, 987, 988, 989, 990, 991, 992, 993, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1026, 1027, 1028, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1079, 1080, 1082, 1083, 1084, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1101, 1105, 1106, 1107, 1108, 1135], "\u2131": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 113, 114, 115, 116, 117, 118, 119, 120, 176, 177, 179, 180, 181, 182, 184, 186, 187, 194, 197, 200, 201, 202, 203, 207, 210, 213, 216, 218, 219, 223, 226, 229, 231, 234, 240, 244, 245, 246, 247, 248, 255, 256, 258, 265, 266, 267, 268, 269, 276, 277, 282, 283, 284, 287, 290, 291, 294, 295, 298, 299, 300, 302, 303, 304, 305, 306, 308, 317, 324, 325, 326, 327, 328, 329, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 394, 395, 397, 398, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 417, 418, 419, 420, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 463, 464, 471, 472, 473, 474, 475, 477, 478, 479, 485, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 569, 570, 577, 578, 579, 582, 583, 584, 585, 586, 588, 589, 590, 591, 592, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 607, 609, 611, 613, 614, 616, 617, 618, 619, 620, 622, 623, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 641, 642, 643, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 663, 664, 669, 670, 679, 680, 681, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 716, 717, 724, 728, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 750, 751, 753, 755, 757, 759, 761, 763, 765, 767, 769, 771, 775, 776, 778, 780, 781, 783, 786, 787, 789, 790, 792, 793, 795, 797, 798, 799, 804, 805, 808, 809, 810, 811, 812, 813, 815, 816, 817, 818, 829, 830, 831, 832, 833, 834, 835, 836, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 871, 872, 873, 874, 877, 880, 886, 887, 888, 889, 890, 891, 893, 894, 895, 896, 897, 898, 899, 902, 903, 904, 905, 906, 909, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 925, 926, 928, 929, 931, 933, 934, 935, 947, 948, 949, 950, 955, 959, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 973, 975, 978, 979, 981, 983, 984, 985, 987, 988, 989, 990, 991, 992, 993, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1026, 1027, 1028, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1079, 1080, 1082, 1083, 1084, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1101, 1105, 1106, 1107, 1108, 1135], "\u02c7": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 113, 114, 115, 116, 117, 118, 119, 120, 176, 177, 179, 180, 181, 182, 184, 186, 187, 194, 197, 200, 201, 202, 203, 207, 210, 213, 216, 218, 219, 223, 226, 229, 231, 234, 240, 244, 245, 246, 247, 248, 255, 256, 258, 265, 266, 267, 268, 269, 276, 277, 282, 283, 284, 287, 290, 291, 294, 295, 298, 299, 300, 302, 303, 304, 305, 306, 308, 317, 324, 325, 326, 327, 328, 329, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 394, 395, 397, 398, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 417, 418, 419, 420, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 463, 464, 471, 472, 473, 474, 475, 477, 478, 479, 485, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 569, 570, 577, 578, 579, 582, 583, 584, 585, 586, 588, 589, 590, 591, 592, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 607, 609, 611, 613, 614, 616, 617, 618, 619, 620, 622, 623, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 641, 642, 643, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 663, 664, 669, 670, 679, 680, 681, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 716, 717, 724, 728, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 750, 751, 753, 755, 757, 759, 761, 763, 765, 767, 769, 771, 775, 776, 778, 780, 781, 783, 786, 787, 789, 790, 792, 793, 795, 797, 798, 799, 804, 805, 808, 809, 810, 811, 812, 813, 815, 816, 817, 818, 829, 830, 831, 832, 833, 834, 835, 836, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 871, 872, 873, 874, 877, 880, 886, 887, 888, 889, 890, 891, 893, 894, 895, 896, 897, 898, 899, 902, 903, 904, 905, 906, 909, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 925, 926, 928, 929, 931, 933, 934, 935, 947, 948, 949, 950, 955, 959, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 973, 975, 978, 979, 981, 983, 984, 985, 987, 988, 989, 990, 991, 992, 993, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1026, 1027, 1028, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1079, 1080, 1082, 1083, 1084, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1101, 1105, 1106, 1107, 1108, 1135], "\u210f": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 113, 114, 115, 116, 117, 118, 119, 120, 176, 177, 179, 180, 181, 182, 184, 186, 187, 194, 197, 200, 201, 202, 203, 207, 210, 213, 216, 218, 219, 223, 226, 229, 231, 234, 240, 244, 245, 246, 247, 248, 255, 256, 258, 265, 266, 267, 268, 269, 276, 277, 282, 283, 284, 287, 290, 291, 294, 295, 298, 299, 300, 302, 303, 304, 305, 306, 308, 317, 324, 325, 326, 327, 328, 329, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 394, 395, 397, 398, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 417, 418, 419, 420, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 463, 464, 471, 472, 473, 474, 475, 477, 478, 479, 485, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 569, 570, 577, 578, 579, 582, 583, 584, 585, 586, 588, 589, 590, 591, 592, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 607, 609, 611, 613, 614, 616, 617, 618, 619, 620, 622, 623, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 641, 642, 643, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 663, 664, 669, 670, 679, 680, 681, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 716, 717, 724, 728, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 750, 751, 753, 755, 757, 759, 761, 763, 765, 767, 769, 771, 775, 776, 778, 780, 781, 783, 786, 787, 789, 790, 792, 793, 795, 797, 798, 799, 804, 805, 808, 809, 810, 811, 812, 813, 815, 816, 817, 818, 829, 830, 831, 832, 833, 834, 835, 836, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 871, 872, 873, 874, 877, 880, 886, 887, 888, 889, 890, 891, 893, 894, 895, 896, 897, 898, 899, 902, 903, 904, 905, 906, 909, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 925, 926, 928, 929, 931, 933, 934, 935, 947, 948, 949, 950, 955, 959, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 973, 975, 978, 979, 981, 983, 984, 985, 987, 988, 989, 990, 991, 992, 993, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1026, 1027, 1028, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1079, 1080, 1082, 1083, 1084, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1101, 1105, 1106, 1107, 1108, 1135], "\u210b": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 113, 114, 115, 116, 117, 118, 119, 120, 176, 177, 179, 180, 181, 182, 184, 186, 187, 194, 197, 200, 201, 202, 203, 207, 210, 213, 216, 218, 219, 223, 226, 229, 231, 234, 240, 244, 245, 246, 247, 248, 255, 256, 258, 265, 266, 267, 268, 269, 276, 277, 282, 283, 284, 287, 290, 291, 294, 295, 298, 299, 300, 302, 303, 304, 305, 306, 308, 317, 324, 325, 326, 327, 328, 329, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 394, 395, 397, 398, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 417, 418, 419, 420, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 463, 464, 471, 472, 473, 474, 475, 477, 478, 479, 485, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 569, 570, 577, 578, 579, 582, 583, 584, 585, 586, 588, 589, 590, 591, 592, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 607, 609, 611, 613, 614, 616, 617, 618, 619, 620, 622, 623, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 641, 642, 643, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 663, 664, 669, 670, 679, 680, 681, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 716, 717, 724, 728, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 750, 751, 753, 755, 757, 759, 761, 763, 765, 767, 769, 771, 775, 776, 778, 780, 781, 783, 786, 787, 789, 790, 792, 793, 795, 797, 798, 799, 804, 805, 808, 809, 810, 811, 812, 813, 815, 816, 817, 818, 829, 830, 831, 832, 833, 834, 835, 836, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 871, 872, 873, 874, 877, 880, 886, 887, 888, 889, 890, 891, 893, 894, 895, 896, 897, 898, 899, 902, 903, 904, 905, 906, 909, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 925, 926, 928, 929, 931, 933, 934, 935, 947, 948, 949, 950, 955, 959, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 973, 975, 978, 979, 981, 983, 984, 985, 987, 988, 989, 990, 991, 992, 993, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1026, 1027, 1028, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1079, 1080, 1082, 1083, 1084, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1101, 1105, 1106, 1107, 1108, 1135], "\u2111": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 113, 114, 115, 116, 117, 118, 119, 120, 176, 177, 179, 180, 181, 182, 184, 186, 187, 194, 197, 200, 201, 202, 203, 207, 210, 213, 216, 218, 219, 223, 226, 229, 231, 234, 240, 244, 245, 246, 247, 248, 255, 256, 258, 265, 266, 267, 268, 269, 276, 277, 282, 283, 284, 287, 290, 291, 294, 295, 298, 299, 300, 302, 303, 304, 305, 306, 308, 317, 324, 325, 326, 327, 328, 329, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 394, 395, 397, 398, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 417, 418, 419, 420, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 463, 464, 471, 472, 473, 474, 475, 477, 478, 479, 485, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 569, 570, 577, 578, 579, 582, 583, 584, 585, 586, 588, 589, 590, 591, 592, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 607, 609, 611, 613, 614, 616, 617, 618, 619, 620, 622, 623, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 641, 642, 643, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 663, 664, 669, 670, 679, 680, 681, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 716, 717, 724, 728, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 750, 751, 753, 755, 757, 759, 761, 763, 765, 767, 769, 771, 775, 776, 778, 780, 781, 783, 786, 787, 789, 790, 792, 793, 795, 797, 798, 799, 804, 805, 808, 809, 810, 811, 812, 813, 815, 816, 817, 818, 829, 830, 831, 832, 833, 834, 835, 836, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 871, 872, 873, 874, 877, 880, 886, 887, 888, 889, 890, 891, 893, 894, 895, 896, 897, 898, 899, 902, 903, 904, 905, 906, 909, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 925, 926, 928, 929, 931, 933, 934, 935, 947, 948, 949, 950, 955, 959, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 973, 975, 978, 979, 981, 983, 984, 985, 987, 988, 989, 990, 991, 992, 993, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1026, 1027, 1028, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1079, 1080, 1082, 1083, 1084, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1101, 1105, 1106, 1107, 1108, 1135], "\u2148": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 113, 114, 115, 116, 117, 118, 119, 120, 176, 177, 179, 180, 181, 182, 184, 186, 187, 194, 197, 200, 201, 202, 203, 207, 210, 213, 216, 218, 219, 223, 226, 229, 231, 234, 240, 244, 245, 246, 247, 248, 255, 256, 258, 265, 266, 267, 268, 269, 276, 277, 282, 283, 284, 287, 290, 291, 294, 295, 298, 299, 300, 302, 303, 304, 305, 306, 308, 317, 324, 325, 326, 327, 328, 329, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 394, 395, 397, 398, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 417, 418, 419, 420, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 463, 464, 471, 472, 473, 474, 475, 477, 478, 479, 485, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 569, 570, 577, 578, 579, 582, 583, 584, 585, 586, 588, 589, 590, 591, 592, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 607, 609, 611, 613, 614, 616, 617, 618, 619, 620, 622, 623, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 641, 642, 643, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 663, 664, 669, 670, 679, 680, 681, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 716, 717, 724, 728, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 750, 751, 753, 755, 757, 759, 761, 763, 765, 767, 769, 771, 775, 776, 778, 780, 781, 783, 786, 787, 789, 790, 792, 793, 795, 797, 798, 799, 804, 805, 808, 809, 810, 811, 812, 813, 815, 816, 817, 818, 829, 830, 831, 832, 833, 834, 835, 836, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 871, 872, 873, 874, 877, 880, 886, 887, 888, 889, 890, 891, 893, 894, 895, 896, 897, 898, 899, 902, 903, 904, 905, 906, 909, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 925, 926, 928, 929, 931, 933, 934, 935, 947, 948, 949, 950, 955, 959, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 973, 975, 978, 979, 981, 983, 984, 985, 987, 988, 989, 990, 991, 992, 993, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1026, 1027, 1028, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1079, 1080, 1082, 1083, 1084, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1101, 1105, 1106, 1107, 1108, 1135], "\u2110": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 113, 114, 115, 116, 117, 118, 119, 120, 176, 177, 179, 180, 181, 182, 184, 186, 187, 194, 197, 200, 201, 202, 203, 207, 210, 213, 216, 218, 219, 223, 226, 229, 231, 234, 240, 244, 245, 246, 247, 248, 255, 256, 258, 265, 266, 267, 268, 269, 276, 277, 282, 283, 284, 287, 290, 291, 294, 295, 298, 299, 300, 302, 303, 304, 305, 306, 308, 317, 324, 325, 326, 327, 328, 329, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 394, 395, 397, 398, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 417, 418, 419, 420, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 463, 464, 471, 472, 473, 474, 475, 477, 478, 479, 485, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 569, 570, 577, 578, 579, 582, 583, 584, 585, 586, 588, 589, 590, 591, 592, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 607, 609, 611, 613, 614, 616, 617, 618, 619, 620, 622, 623, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 641, 642, 643, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 663, 664, 669, 670, 679, 680, 681, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 716, 717, 724, 728, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 750, 751, 753, 755, 757, 759, 761, 763, 765, 767, 769, 771, 775, 776, 778, 780, 781, 783, 786, 787, 789, 790, 792, 793, 795, 797, 798, 799, 804, 805, 808, 809, 810, 811, 812, 813, 815, 816, 817, 818, 829, 830, 831, 832, 833, 834, 835, 836, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 871, 872, 873, 874, 877, 880, 886, 887, 888, 889, 890, 891, 893, 894, 895, 896, 897, 898, 899, 902, 903, 904, 905, 906, 909, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 925, 926, 928, 929, 931, 933, 934, 935, 947, 948, 949, 950, 955, 959, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 973, 975, 978, 979, 981, 983, 984, 985, 987, 988, 989, 990, 991, 992, 993, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1026, 1027, 1028, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1079, 1080, 1082, 1083, 1084, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1101, 1105, 1106, 1107, 1108, 1135], "\u2124": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 113, 114, 115, 116, 117, 118, 119, 120, 176, 177, 179, 180, 181, 182, 184, 186, 187, 194, 197, 200, 201, 202, 203, 207, 210, 213, 216, 218, 219, 223, 226, 229, 231, 234, 240, 244, 245, 246, 247, 248, 255, 256, 258, 265, 266, 267, 268, 269, 276, 277, 282, 283, 284, 287, 290, 291, 294, 295, 298, 299, 300, 302, 303, 304, 305, 306, 308, 317, 324, 325, 326, 327, 328, 329, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 394, 395, 397, 398, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 417, 418, 419, 420, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 463, 464, 471, 472, 473, 474, 475, 477, 478, 479, 485, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 569, 570, 577, 578, 579, 582, 583, 584, 585, 586, 588, 589, 590, 591, 592, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 607, 609, 611, 613, 614, 616, 617, 618, 619, 620, 622, 623, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 641, 642, 643, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 663, 664, 669, 670, 679, 680, 681, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 716, 717, 724, 728, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 750, 751, 753, 755, 757, 759, 761, 763, 765, 767, 769, 771, 775, 776, 778, 780, 781, 783, 786, 787, 789, 790, 792, 793, 795, 797, 798, 799, 804, 805, 808, 809, 810, 811, 812, 813, 815, 816, 817, 818, 829, 830, 831, 832, 833, 834, 835, 836, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 871, 872, 873, 874, 877, 880, 886, 887, 888, 889, 890, 891, 893, 894, 895, 896, 897, 898, 899, 902, 903, 904, 905, 906, 909, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 925, 926, 928, 929, 931, 933, 934, 935, 947, 948, 949, 950, 955, 959, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 973, 975, 978, 979, 981, 983, 984, 985, 987, 988, 989, 990, 991, 992, 993, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1026, 1027, 1028, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1079, 1080, 1082, 1083, 1084, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1101, 1105, 1106, 1107, 1108, 1135], "\u2112": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 113, 114, 115, 116, 117, 118, 119, 120, 176, 177, 179, 180, 181, 182, 184, 186, 187, 194, 197, 200, 201, 202, 203, 207, 210, 213, 216, 218, 219, 223, 226, 229, 231, 234, 240, 244, 245, 246, 247, 248, 255, 256, 258, 265, 266, 267, 268, 269, 276, 277, 282, 283, 284, 287, 290, 291, 294, 295, 298, 299, 300, 302, 303, 304, 305, 306, 308, 317, 324, 325, 326, 327, 328, 329, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 394, 395, 397, 398, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 417, 418, 419, 420, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 463, 464, 471, 472, 473, 474, 475, 477, 478, 479, 485, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 569, 570, 577, 578, 579, 582, 583, 584, 585, 586, 588, 589, 590, 591, 592, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 607, 609, 611, 613, 614, 616, 617, 618, 619, 620, 622, 623, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 641, 642, 643, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 663, 664, 669, 670, 679, 680, 681, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 716, 717, 724, 728, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 750, 751, 753, 755, 757, 759, 761, 763, 765, 767, 769, 771, 775, 776, 778, 780, 781, 783, 786, 787, 789, 790, 792, 793, 795, 797, 798, 799, 804, 805, 808, 809, 810, 811, 812, 813, 815, 816, 817, 818, 829, 830, 831, 832, 833, 834, 835, 836, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 871, 872, 873, 874, 877, 880, 886, 887, 888, 889, 890, 891, 893, 894, 895, 896, 897, 898, 899, 902, 903, 904, 905, 906, 909, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 925, 926, 928, 929, 931, 933, 934, 935, 947, 948, 949, 950, 955, 959, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 973, 975, 978, 979, 981, 983, 984, 985, 987, 988, 989, 990, 991, 992, 993, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1026, 1027, 1028, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1079, 1080, 1082, 1083, 1084, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1101, 1105, 1106, 1107, 1108, 1135], "\u2133": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 113, 114, 115, 116, 117, 118, 119, 120, 176, 177, 179, 180, 181, 182, 184, 186, 187, 194, 197, 200, 201, 202, 203, 207, 210, 213, 216, 218, 219, 223, 226, 229, 231, 234, 240, 244, 245, 246, 247, 248, 255, 256, 258, 265, 266, 267, 268, 269, 276, 277, 282, 283, 284, 287, 290, 291, 294, 295, 298, 299, 300, 302, 303, 304, 305, 306, 308, 317, 324, 325, 326, 327, 328, 329, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 394, 395, 397, 398, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 417, 418, 419, 420, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 463, 464, 471, 472, 473, 474, 475, 477, 478, 479, 485, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 569, 570, 577, 578, 579, 582, 583, 584, 585, 586, 588, 589, 590, 591, 592, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 607, 609, 611, 613, 614, 616, 617, 618, 619, 620, 622, 623, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 641, 642, 643, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 663, 664, 669, 670, 679, 680, 681, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 716, 717, 724, 728, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 750, 751, 753, 755, 757, 759, 761, 763, 765, 767, 769, 771, 775, 776, 778, 780, 781, 783, 786, 787, 789, 790, 792, 793, 795, 797, 798, 799, 804, 805, 808, 809, 810, 811, 812, 813, 815, 816, 817, 818, 829, 830, 831, 832, 833, 834, 835, 836, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 871, 872, 873, 874, 877, 880, 886, 887, 888, 889, 890, 891, 893, 894, 895, 896, 897, 898, 899, 902, 903, 904, 905, 906, 909, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 925, 926, 928, 929, 931, 933, 934, 935, 947, 948, 949, 950, 955, 959, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 973, 975, 978, 979, 981, 983, 984, 985, 987, 988, 989, 990, 991, 992, 993, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1026, 1027, 1028, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1079, 1080, 1082, 1083, 1084, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1101, 1105, 1106, 1107, 1108, 1135], "\u2115": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 113, 114, 115, 116, 117, 118, 119, 120, 176, 177, 179, 180, 181, 182, 184, 186, 187, 194, 197, 200, 201, 202, 203, 207, 210, 213, 216, 218, 219, 223, 226, 229, 231, 234, 240, 244, 245, 246, 247, 248, 255, 256, 258, 265, 266, 267, 268, 269, 276, 277, 282, 283, 284, 287, 290, 291, 294, 295, 298, 299, 300, 302, 303, 304, 305, 306, 308, 317, 324, 325, 326, 327, 328, 329, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 394, 395, 397, 398, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 417, 418, 419, 420, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 463, 464, 471, 472, 473, 474, 475, 477, 478, 479, 485, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 569, 570, 577, 578, 579, 582, 583, 584, 585, 586, 588, 589, 590, 591, 592, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 607, 609, 611, 613, 614, 616, 617, 618, 619, 620, 622, 623, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 641, 642, 643, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 663, 664, 669, 670, 679, 680, 681, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 716, 717, 724, 728, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 750, 751, 753, 755, 757, 759, 761, 763, 765, 767, 769, 771, 775, 776, 778, 780, 781, 783, 786, 787, 789, 790, 792, 793, 795, 797, 798, 799, 804, 805, 808, 809, 810, 811, 812, 813, 815, 816, 817, 818, 829, 830, 831, 832, 833, 834, 835, 836, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 871, 872, 873, 874, 877, 880, 886, 887, 888, 889, 890, 891, 893, 894, 895, 896, 897, 898, 899, 902, 903, 904, 905, 906, 909, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 925, 926, 928, 929, 931, 933, 934, 935, 947, 948, 949, 950, 955, 959, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 973, 975, 978, 979, 981, 983, 984, 985, 987, 988, 989, 990, 991, 992, 993, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1026, 1027, 1028, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1079, 1080, 1082, 1083, 1084, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1101, 1105, 1106, 1107, 1108, 1135], "\u2134": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 113, 114, 115, 116, 117, 118, 119, 120, 176, 177, 179, 180, 181, 182, 184, 186, 187, 194, 197, 200, 201, 202, 203, 207, 210, 213, 216, 218, 219, 223, 226, 229, 231, 234, 240, 244, 245, 246, 247, 248, 255, 256, 258, 265, 266, 267, 268, 269, 276, 277, 282, 283, 284, 287, 290, 291, 294, 295, 298, 299, 300, 302, 303, 304, 305, 306, 308, 317, 324, 325, 326, 327, 328, 329, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 394, 395, 397, 398, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 417, 418, 419, 420, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 463, 464, 471, 472, 473, 474, 475, 477, 478, 479, 485, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 569, 570, 577, 578, 579, 582, 583, 584, 585, 586, 588, 589, 590, 591, 592, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 607, 609, 611, 613, 614, 616, 617, 618, 619, 620, 622, 623, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 641, 642, 643, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 663, 664, 669, 670, 679, 680, 681, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 716, 717, 724, 728, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 750, 751, 753, 755, 757, 759, 761, 763, 765, 767, 769, 771, 775, 776, 778, 780, 781, 783, 786, 787, 789, 790, 792, 793, 795, 797, 798, 799, 804, 805, 808, 809, 810, 811, 812, 813, 815, 816, 817, 818, 829, 830, 831, 832, 833, 834, 835, 836, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 871, 872, 873, 874, 877, 880, 886, 887, 888, 889, 890, 891, 893, 894, 895, 896, 897, 898, 899, 902, 903, 904, 905, 906, 909, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 925, 926, 928, 929, 931, 933, 934, 935, 947, 948, 949, 950, 955, 959, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 973, 975, 978, 979, 981, 983, 984, 985, 987, 988, 989, 990, 991, 992, 993, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1026, 1027, 1028, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1079, 1080, 1082, 1083, 1084, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1101, 1105, 1106, 1107, 1108, 1135], "\u210c": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 113, 114, 115, 116, 117, 118, 119, 120, 176, 177, 179, 180, 181, 182, 184, 186, 187, 194, 197, 200, 201, 202, 203, 207, 210, 213, 216, 218, 219, 223, 226, 229, 231, 234, 240, 244, 245, 246, 247, 248, 255, 256, 258, 265, 266, 267, 268, 269, 276, 277, 282, 283, 284, 287, 290, 291, 294, 295, 298, 299, 300, 302, 303, 304, 305, 306, 308, 317, 324, 325, 326, 327, 328, 329, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 394, 395, 397, 398, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 417, 418, 419, 420, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 463, 464, 471, 472, 473, 474, 475, 477, 478, 479, 485, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 569, 570, 577, 578, 579, 582, 583, 584, 585, 586, 588, 589, 590, 591, 592, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 607, 609, 611, 613, 614, 616, 617, 618, 619, 620, 622, 623, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 641, 642, 643, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 663, 664, 669, 670, 679, 680, 681, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 716, 717, 724, 728, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 750, 751, 753, 755, 757, 759, 761, 763, 765, 767, 769, 771, 775, 776, 778, 780, 781, 783, 786, 787, 789, 790, 792, 793, 795, 797, 798, 799, 804, 805, 808, 809, 810, 811, 812, 813, 815, 816, 817, 818, 829, 830, 831, 832, 833, 834, 835, 836, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 871, 872, 873, 874, 877, 880, 886, 887, 888, 889, 890, 891, 893, 894, 895, 896, 897, 898, 899, 902, 903, 904, 905, 906, 909, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 925, 926, 928, 929, 931, 933, 934, 935, 947, 948, 949, 950, 955, 959, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 973, 975, 978, 979, 981, 983, 984, 985, 987, 988, 989, 990, 991, 992, 993, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1026, 1027, 1028, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1079, 1080, 1082, 1083, 1084, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1101, 1105, 1106, 1107, 1108, 1135], "\u2119": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 113, 114, 115, 116, 117, 118, 119, 120, 176, 177, 179, 180, 181, 182, 184, 186, 187, 194, 197, 200, 201, 202, 203, 207, 210, 213, 216, 218, 219, 223, 226, 229, 231, 234, 240, 244, 245, 246, 247, 248, 255, 256, 258, 265, 266, 267, 268, 269, 276, 277, 282, 283, 284, 287, 290, 291, 294, 295, 298, 299, 300, 302, 303, 304, 305, 306, 308, 317, 324, 325, 326, 327, 328, 329, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 394, 395, 397, 398, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 417, 418, 419, 420, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 463, 464, 471, 472, 473, 474, 475, 477, 478, 479, 485, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 569, 570, 577, 578, 579, 582, 583, 584, 585, 586, 588, 589, 590, 591, 592, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 607, 609, 611, 613, 614, 616, 617, 618, 619, 620, 622, 623, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 641, 642, 643, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 663, 664, 669, 670, 679, 680, 681, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 716, 717, 724, 728, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 750, 751, 753, 755, 757, 759, 761, 763, 765, 767, 769, 771, 775, 776, 778, 780, 781, 783, 786, 787, 789, 790, 792, 793, 795, 797, 798, 799, 804, 805, 808, 809, 810, 811, 812, 813, 815, 816, 817, 818, 829, 830, 831, 832, 833, 834, 835, 836, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 871, 872, 873, 874, 877, 880, 886, 887, 888, 889, 890, 891, 893, 894, 895, 896, 897, 898, 899, 902, 903, 904, 905, 906, 909, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 925, 926, 928, 929, 931, 933, 934, 935, 947, 948, 949, 950, 955, 959, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 973, 975, 978, 979, 981, 983, 984, 985, 987, 988, 989, 990, 991, 992, 993, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1026, 1027, 1028, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1079, 1080, 1082, 1083, 1084, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1101, 1105, 1106, 1107, 1108, 1135], "\u210d": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 113, 114, 115, 116, 117, 118, 119, 120, 176, 177, 179, 180, 181, 182, 184, 186, 187, 194, 197, 200, 201, 202, 203, 207, 210, 213, 216, 218, 219, 223, 226, 229, 231, 234, 240, 244, 245, 246, 247, 248, 255, 256, 258, 265, 266, 267, 268, 269, 276, 277, 282, 283, 284, 287, 290, 291, 294, 295, 298, 299, 300, 302, 303, 304, 305, 306, 308, 317, 324, 325, 326, 327, 328, 329, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 394, 395, 397, 398, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 417, 418, 419, 420, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 463, 464, 471, 472, 473, 474, 475, 477, 478, 479, 485, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 569, 570, 577, 578, 579, 582, 583, 584, 585, 586, 588, 589, 590, 591, 592, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 607, 609, 611, 613, 614, 616, 617, 618, 619, 620, 622, 623, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 641, 642, 643, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 663, 664, 669, 670, 679, 680, 681, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 716, 717, 724, 728, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 750, 751, 753, 755, 757, 759, 761, 763, 765, 767, 769, 771, 775, 776, 778, 780, 781, 783, 786, 787, 789, 790, 792, 793, 795, 797, 798, 799, 804, 805, 808, 809, 810, 811, 812, 813, 815, 816, 817, 818, 829, 830, 831, 832, 833, 834, 835, 836, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 871, 872, 873, 874, 877, 880, 886, 887, 888, 889, 890, 891, 893, 894, 895, 896, 897, 898, 899, 902, 903, 904, 905, 906, 909, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 925, 926, 928, 929, 931, 933, 934, 935, 947, 948, 949, 950, 955, 959, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 973, 975, 978, 979, 981, 983, 984, 985, 987, 988, 989, 990, 991, 992, 993, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1026, 1027, 1028, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1079, 1080, 1082, 1083, 1084, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1101, 1105, 1106, 1107, 1108, 1135], "\u211a": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 113, 114, 115, 116, 117, 118, 119, 120, 176, 177, 179, 180, 181, 182, 184, 186, 187, 194, 197, 200, 201, 202, 203, 207, 210, 213, 216, 218, 219, 223, 226, 229, 231, 234, 240, 244, 245, 246, 247, 248, 255, 256, 258, 265, 266, 267, 268, 269, 276, 277, 282, 283, 284, 287, 290, 291, 294, 295, 298, 299, 300, 302, 303, 304, 305, 306, 308, 317, 324, 325, 326, 327, 328, 329, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 394, 395, 397, 398, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 417, 418, 419, 420, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 463, 464, 471, 472, 473, 474, 475, 477, 478, 479, 485, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 569, 570, 577, 578, 579, 582, 583, 584, 585, 586, 588, 589, 590, 591, 592, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 607, 609, 611, 613, 614, 616, 617, 618, 619, 620, 622, 623, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 641, 642, 643, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 663, 664, 669, 670, 679, 680, 681, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 716, 717, 724, 728, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 750, 751, 753, 755, 757, 759, 761, 763, 765, 767, 769, 771, 775, 776, 778, 780, 781, 783, 786, 787, 789, 790, 792, 793, 795, 797, 798, 799, 804, 805, 808, 809, 810, 811, 812, 813, 815, 816, 817, 818, 829, 830, 831, 832, 833, 834, 835, 836, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 871, 872, 873, 874, 877, 880, 886, 887, 888, 889, 890, 891, 893, 894, 895, 896, 897, 898, 899, 902, 903, 904, 905, 906, 909, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 925, 926, 928, 929, 931, 933, 934, 935, 947, 948, 949, 950, 955, 959, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 973, 975, 978, 979, 981, 983, 984, 985, 987, 988, 989, 990, 991, 992, 993, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1026, 1027, 1028, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1079, 1080, 1082, 1083, 1084, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1101, 1105, 1106, 1107, 1108, 1135], "\u211c": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 113, 114, 115, 116, 117, 118, 119, 120, 176, 177, 179, 180, 181, 182, 184, 186, 187, 194, 197, 200, 201, 202, 203, 207, 210, 213, 216, 218, 219, 223, 226, 229, 231, 234, 240, 244, 245, 246, 247, 248, 255, 256, 258, 265, 266, 267, 268, 269, 276, 277, 282, 283, 284, 287, 290, 291, 294, 295, 298, 299, 300, 302, 303, 304, 305, 306, 308, 317, 324, 325, 326, 327, 328, 329, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 394, 395, 397, 398, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 417, 418, 419, 420, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 463, 464, 471, 472, 473, 474, 475, 477, 478, 479, 485, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 569, 570, 577, 578, 579, 582, 583, 584, 585, 586, 588, 589, 590, 591, 592, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 607, 609, 611, 613, 614, 616, 617, 618, 619, 620, 622, 623, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 641, 642, 643, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 663, 664, 669, 670, 679, 680, 681, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 716, 717, 724, 728, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 750, 751, 753, 755, 757, 759, 761, 763, 765, 767, 769, 771, 775, 776, 778, 780, 781, 783, 786, 787, 789, 790, 792, 793, 795, 797, 798, 799, 804, 805, 808, 809, 810, 811, 812, 813, 815, 816, 817, 818, 829, 830, 831, 832, 833, 834, 835, 836, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 871, 872, 873, 874, 877, 880, 886, 887, 888, 889, 890, 891, 893, 894, 895, 896, 897, 898, 899, 902, 903, 904, 905, 906, 909, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 925, 926, 928, 929, 931, 933, 934, 935, 947, 948, 949, 950, 955, 959, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 973, 975, 978, 979, 981, 983, 984, 985, 987, 988, 989, 990, 991, 992, 993, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1026, 1027, 1028, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1079, 1080, 1082, 1083, 1084, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1101, 1105, 1106, 1107, 1108, 1135], "\u211b": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 113, 114, 115, 116, 117, 118, 119, 120, 176, 177, 179, 180, 181, 182, 184, 186, 187, 194, 197, 200, 201, 202, 203, 207, 210, 213, 216, 218, 219, 223, 226, 229, 231, 234, 240, 244, 245, 246, 247, 248, 255, 256, 258, 265, 266, 267, 268, 269, 276, 277, 282, 283, 284, 287, 290, 291, 294, 295, 298, 299, 300, 302, 303, 304, 305, 306, 308, 317, 324, 325, 326, 327, 328, 329, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 394, 395, 397, 398, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 417, 418, 419, 420, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 463, 464, 471, 472, 473, 474, 475, 477, 478, 479, 485, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 569, 570, 577, 578, 579, 582, 583, 584, 585, 586, 588, 589, 590, 591, 592, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 607, 609, 611, 613, 614, 616, 617, 618, 619, 620, 622, 623, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 641, 642, 643, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 663, 664, 669, 670, 679, 680, 681, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 716, 717, 724, 728, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 750, 751, 753, 755, 757, 759, 761, 763, 765, 767, 769, 771, 775, 776, 778, 780, 781, 783, 786, 787, 789, 790, 792, 793, 795, 797, 798, 799, 804, 805, 808, 809, 810, 811, 812, 813, 815, 816, 817, 818, 829, 830, 831, 832, 833, 834, 835, 836, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 871, 872, 873, 874, 877, 880, 886, 887, 888, 889, 890, 891, 893, 894, 895, 896, 897, 898, 899, 902, 903, 904, 905, 906, 909, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 925, 926, 928, 929, 931, 933, 934, 935, 947, 948, 949, 950, 955, 959, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 973, 975, 978, 979, 981, 983, 984, 985, 987, 988, 989, 990, 991, 992, 993, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1026, 1027, 1028, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1079, 1080, 1082, 1083, 1084, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1101, 1105, 1106, 1107, 1108, 1135], "\u211d": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 113, 114, 115, 116, 117, 118, 119, 120, 176, 177, 179, 180, 181, 182, 184, 186, 187, 194, 197, 200, 201, 202, 203, 207, 210, 213, 216, 218, 219, 223, 226, 229, 231, 234, 240, 244, 245, 246, 247, 248, 255, 256, 258, 265, 266, 267, 268, 269, 276, 277, 282, 283, 284, 287, 290, 291, 294, 295, 298, 299, 300, 302, 303, 304, 305, 306, 308, 317, 324, 325, 326, 327, 328, 329, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 394, 395, 397, 398, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 417, 418, 419, 420, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 463, 464, 471, 472, 473, 474, 475, 477, 478, 479, 485, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 569, 570, 577, 578, 579, 582, 583, 584, 585, 586, 588, 589, 590, 591, 592, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 607, 609, 611, 613, 614, 616, 617, 618, 619, 620, 622, 623, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 641, 642, 643, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 663, 664, 669, 670, 679, 680, 681, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 716, 717, 724, 728, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 750, 751, 753, 755, 757, 759, 761, 763, 765, 767, 769, 771, 775, 776, 778, 780, 781, 783, 786, 787, 789, 790, 792, 793, 795, 797, 798, 799, 804, 805, 808, 809, 810, 811, 812, 813, 815, 816, 817, 818, 829, 830, 831, 832, 833, 834, 835, 836, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 871, 872, 873, 874, 877, 880, 886, 887, 888, 889, 890, 891, 893, 894, 895, 896, 897, 898, 899, 902, 903, 904, 905, 906, 909, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 925, 926, 928, 929, 931, 933, 934, 935, 947, 948, 949, 950, 955, 959, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 973, 975, 978, 979, 981, 983, 984, 985, 987, 988, 989, 990, 991, 992, 993, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1026, 1027, 1028, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1079, 1080, 1082, 1083, 1084, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1101, 1105, 1106, 1107, 1108, 1135], "\u03f5": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 113, 114, 115, 116, 117, 118, 119, 120, 176, 177, 179, 180, 181, 182, 184, 186, 187, 194, 197, 200, 201, 202, 203, 207, 210, 213, 216, 218, 219, 223, 226, 229, 231, 234, 240, 244, 245, 246, 247, 248, 255, 256, 258, 265, 266, 267, 268, 269, 276, 277, 282, 283, 284, 287, 290, 291, 294, 295, 298, 299, 300, 302, 303, 304, 305, 306, 308, 317, 324, 325, 326, 327, 328, 329, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 394, 395, 397, 398, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 417, 418, 419, 420, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 463, 464, 471, 472, 473, 474, 475, 477, 478, 479, 485, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 569, 570, 577, 578, 579, 582, 583, 584, 585, 586, 588, 589, 590, 591, 592, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 607, 609, 611, 613, 614, 616, 617, 618, 619, 620, 622, 623, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 641, 642, 643, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 663, 664, 669, 670, 679, 680, 681, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 716, 717, 724, 728, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 750, 751, 753, 755, 757, 759, 761, 763, 765, 767, 769, 771, 775, 776, 778, 780, 781, 783, 786, 787, 789, 790, 792, 793, 795, 797, 798, 799, 804, 805, 808, 809, 810, 811, 812, 813, 815, 816, 817, 818, 829, 830, 831, 832, 833, 834, 835, 836, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 871, 872, 873, 874, 877, 880, 886, 887, 888, 889, 890, 891, 893, 894, 895, 896, 897, 898, 899, 902, 903, 904, 905, 906, 909, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 925, 926, 928, 929, 931, 933, 934, 935, 947, 948, 949, 950, 955, 959, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 973, 975, 978, 979, 981, 983, 984, 985, 987, 988, 989, 990, 991, 992, 993, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1026, 1027, 1028, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1079, 1080, 1082, 1083, 1084, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1101, 1105, 1106, 1107, 1108, 1135], "\u03d5": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 113, 114, 115, 116, 117, 118, 119, 120, 176, 177, 179, 180, 181, 182, 184, 186, 187, 194, 197, 200, 201, 202, 203, 207, 210, 213, 216, 218, 219, 223, 226, 229, 231, 234, 240, 244, 245, 246, 247, 248, 255, 256, 258, 265, 266, 267, 268, 269, 276, 277, 282, 283, 284, 287, 290, 291, 294, 295, 298, 299, 300, 302, 303, 304, 305, 306, 308, 317, 324, 325, 326, 327, 328, 329, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 394, 395, 397, 398, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 417, 418, 419, 420, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 463, 464, 471, 472, 473, 474, 475, 477, 478, 479, 485, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 569, 570, 577, 578, 579, 582, 583, 584, 585, 586, 588, 589, 590, 591, 592, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 607, 609, 611, 613, 614, 616, 617, 618, 619, 620, 622, 623, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 641, 642, 643, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 663, 664, 669, 670, 679, 680, 681, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 716, 717, 724, 728, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 750, 751, 753, 755, 757, 759, 761, 763, 765, 767, 769, 771, 775, 776, 778, 780, 781, 783, 786, 787, 789, 790, 792, 793, 795, 797, 798, 799, 804, 805, 808, 809, 810, 811, 812, 813, 815, 816, 817, 818, 829, 830, 831, 832, 833, 834, 835, 836, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 871, 872, 873, 874, 877, 880, 886, 887, 888, 889, 890, 891, 893, 894, 895, 896, 897, 898, 899, 902, 903, 904, 905, 906, 909, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 925, 926, 928, 929, 931, 933, 934, 935, 947, 948, 949, 950, 955, 959, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 973, 975, 978, 979, 981, 983, 984, 985, 987, 988, 989, 990, 991, 992, 993, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1026, 1027, 1028, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1079, 1080, 1082, 1083, 1084, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1101, 1105, 1106, 1107, 1108, 1135], "\u03c5": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 113, 114, 115, 116, 117, 118, 119, 120, 176, 177, 179, 180, 181, 182, 184, 186, 187, 194, 197, 200, 201, 202, 203, 207, 210, 213, 216, 218, 219, 223, 226, 229, 231, 234, 240, 244, 245, 246, 247, 248, 255, 256, 258, 265, 266, 267, 268, 269, 276, 277, 282, 283, 284, 287, 290, 291, 294, 295, 298, 299, 300, 302, 303, 304, 305, 306, 308, 317, 324, 325, 326, 327, 328, 329, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 394, 395, 397, 398, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 417, 418, 419, 420, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 463, 464, 471, 472, 473, 474, 475, 477, 478, 479, 485, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 569, 570, 577, 578, 579, 582, 583, 584, 585, 586, 588, 589, 590, 591, 592, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 607, 609, 611, 613, 614, 616, 617, 618, 619, 620, 622, 623, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 641, 642, 643, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 663, 664, 669, 670, 679, 680, 681, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 716, 717, 724, 728, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 750, 751, 753, 755, 757, 759, 761, 763, 765, 767, 769, 771, 775, 776, 778, 780, 781, 783, 786, 787, 789, 790, 792, 793, 795, 797, 798, 799, 804, 805, 808, 809, 810, 811, 812, 813, 815, 816, 817, 818, 829, 830, 831, 832, 833, 834, 835, 836, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 871, 872, 873, 874, 877, 880, 886, 887, 888, 889, 890, 891, 893, 894, 895, 896, 897, 898, 899, 902, 903, 904, 905, 906, 909, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 925, 926, 928, 929, 931, 933, 934, 935, 947, 948, 949, 950, 955, 959, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 973, 975, 978, 979, 981, 983, 984, 985, 987, 988, 989, 990, 991, 992, 993, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1026, 1027, 1028, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1079, 1080, 1082, 1083, 1084, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1101, 1105, 1106, 1107, 1108, 1135], "\u03b5": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 113, 114, 115, 116, 117, 118, 119, 120, 176, 177, 179, 180, 181, 182, 184, 186, 187, 194, 197, 200, 201, 202, 203, 207, 210, 213, 216, 218, 219, 223, 226, 229, 231, 234, 240, 244, 245, 246, 247, 248, 255, 256, 258, 265, 266, 267, 268, 269, 276, 277, 282, 283, 284, 287, 290, 291, 294, 295, 298, 299, 300, 302, 303, 304, 305, 306, 308, 317, 324, 325, 326, 327, 328, 329, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 394, 395, 397, 398, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 417, 418, 419, 420, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 463, 464, 471, 472, 473, 474, 475, 477, 478, 479, 485, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 569, 570, 577, 578, 579, 582, 583, 584, 585, 586, 588, 589, 590, 591, 592, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 607, 609, 611, 613, 614, 616, 617, 618, 619, 620, 622, 623, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 641, 642, 643, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 663, 664, 669, 670, 679, 680, 681, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 716, 717, 724, 728, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 750, 751, 753, 755, 757, 759, 761, 763, 765, 767, 769, 771, 775, 776, 778, 780, 781, 783, 786, 787, 789, 790, 792, 793, 795, 797, 798, 799, 804, 805, 808, 809, 810, 811, 812, 813, 815, 816, 817, 818, 829, 830, 831, 832, 833, 834, 835, 836, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 871, 872, 873, 874, 877, 880, 886, 887, 888, 889, 890, 891, 893, 894, 895, 896, 897, 898, 899, 902, 903, 904, 905, 906, 909, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 925, 926, 928, 929, 931, 933, 934, 935, 947, 948, 949, 950, 955, 959, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 973, 975, 978, 979, 981, 983, 984, 985, 987, 988, 989, 990, 991, 992, 993, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1026, 1027, 1028, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1079, 1080, 1082, 1083, 1084, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1101, 1105, 1106, 1107, 1108, 1135], "\u03f0": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 113, 114, 115, 116, 117, 118, 119, 120, 176, 177, 179, 180, 181, 182, 184, 186, 187, 194, 197, 200, 201, 202, 203, 207, 210, 213, 216, 218, 219, 223, 226, 229, 231, 234, 240, 244, 245, 246, 247, 248, 255, 256, 258, 265, 266, 267, 268, 269, 276, 277, 282, 283, 284, 287, 290, 291, 294, 295, 298, 299, 300, 302, 303, 304, 305, 306, 308, 317, 324, 325, 326, 327, 328, 329, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 394, 395, 397, 398, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 417, 418, 419, 420, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 463, 464, 471, 472, 473, 474, 475, 477, 478, 479, 485, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 569, 570, 577, 578, 579, 582, 583, 584, 585, 586, 588, 589, 590, 591, 592, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 607, 609, 611, 613, 614, 616, 617, 618, 619, 620, 622, 623, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 641, 642, 643, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 663, 664, 669, 670, 679, 680, 681, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 716, 717, 724, 728, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 750, 751, 753, 755, 757, 759, 761, 763, 765, 767, 769, 771, 775, 776, 778, 780, 781, 783, 786, 787, 789, 790, 792, 793, 795, 797, 798, 799, 804, 805, 808, 809, 810, 811, 812, 813, 815, 816, 817, 818, 829, 830, 831, 832, 833, 834, 835, 836, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 871, 872, 873, 874, 877, 880, 886, 887, 888, 889, 890, 891, 893, 894, 895, 896, 897, 898, 899, 902, 903, 904, 905, 906, 909, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 925, 926, 928, 929, 931, 933, 934, 935, 947, 948, 949, 950, 955, 959, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 973, 975, 978, 979, 981, 983, 984, 985, 987, 988, 989, 990, 991, 992, 993, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1026, 1027, 1028, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1079, 1080, 1082, 1083, 1084, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1101, 1105, 1106, 1107, 1108, 1135], "\u03c6": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 113, 114, 115, 116, 117, 118, 119, 120, 176, 177, 179, 180, 181, 182, 184, 186, 187, 194, 197, 200, 201, 202, 203, 207, 210, 213, 216, 218, 219, 223, 226, 229, 231, 234, 240, 244, 245, 246, 247, 248, 255, 256, 258, 265, 266, 267, 268, 269, 276, 277, 282, 283, 284, 287, 290, 291, 294, 295, 298, 299, 300, 302, 303, 304, 305, 306, 308, 317, 324, 325, 326, 327, 328, 329, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 394, 395, 397, 398, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 417, 418, 419, 420, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 463, 464, 471, 472, 473, 474, 475, 477, 478, 479, 485, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 569, 570, 577, 578, 579, 582, 583, 584, 585, 586, 588, 589, 590, 591, 592, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 607, 609, 611, 613, 614, 616, 617, 618, 619, 620, 622, 623, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 641, 642, 643, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 663, 664, 669, 670, 679, 680, 681, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 716, 717, 724, 728, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 750, 751, 753, 755, 757, 759, 761, 763, 765, 767, 769, 771, 775, 776, 778, 780, 781, 783, 786, 787, 789, 790, 792, 793, 795, 797, 798, 799, 804, 805, 808, 809, 810, 811, 812, 813, 815, 816, 817, 818, 829, 830, 831, 832, 833, 834, 835, 836, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 871, 872, 873, 874, 877, 880, 886, 887, 888, 889, 890, 891, 893, 894, 895, 896, 897, 898, 899, 902, 903, 904, 905, 906, 909, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 925, 926, 928, 929, 931, 933, 934, 935, 947, 948, 949, 950, 955, 959, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 973, 975, 978, 979, 981, 983, 984, 985, 987, 988, 989, 990, 991, 992, 993, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1026, 1027, 1028, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1079, 1080, 1082, 1083, 1084, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1101, 1105, 1106, 1107, 1108, 1135], "\u03d6": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 113, 114, 115, 116, 117, 118, 119, 120, 176, 177, 179, 180, 181, 182, 184, 186, 187, 194, 197, 200, 201, 202, 203, 207, 210, 213, 216, 218, 219, 223, 226, 229, 231, 234, 240, 244, 245, 246, 247, 248, 255, 256, 258, 265, 266, 267, 268, 269, 276, 277, 282, 283, 284, 287, 290, 291, 294, 295, 298, 299, 300, 302, 303, 304, 305, 306, 308, 317, 324, 325, 326, 327, 328, 329, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 394, 395, 397, 398, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 417, 418, 419, 420, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 463, 464, 471, 472, 473, 474, 475, 477, 478, 479, 485, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 569, 570, 577, 578, 579, 582, 583, 584, 585, 586, 588, 589, 590, 591, 592, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 607, 609, 611, 613, 614, 616, 617, 618, 619, 620, 622, 623, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 641, 642, 643, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 663, 664, 669, 670, 679, 680, 681, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 716, 717, 724, 728, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 750, 751, 753, 755, 757, 759, 761, 763, 765, 767, 769, 771, 775, 776, 778, 780, 781, 783, 786, 787, 789, 790, 792, 793, 795, 797, 798, 799, 804, 805, 808, 809, 810, 811, 812, 813, 815, 816, 817, 818, 829, 830, 831, 832, 833, 834, 835, 836, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 871, 872, 873, 874, 877, 880, 886, 887, 888, 889, 890, 891, 893, 894, 895, 896, 897, 898, 899, 902, 903, 904, 905, 906, 909, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 925, 926, 928, 929, 931, 933, 934, 935, 947, 948, 949, 950, 955, 959, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 973, 975, 978, 979, 981, 983, 984, 985, 987, 988, 989, 990, 991, 992, 993, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1026, 1027, 1028, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1079, 1080, 1082, 1083, 1084, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1101, 1105, 1106, 1107, 1108, 1135], "\u03f1": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 113, 114, 115, 116, 117, 118, 119, 120, 176, 177, 179, 180, 181, 182, 184, 186, 187, 194, 197, 200, 201, 202, 203, 207, 210, 213, 216, 218, 219, 223, 226, 229, 231, 234, 240, 244, 245, 246, 247, 248, 255, 256, 258, 265, 266, 267, 268, 269, 276, 277, 282, 283, 284, 287, 290, 291, 294, 295, 298, 299, 300, 302, 303, 304, 305, 306, 308, 317, 324, 325, 326, 327, 328, 329, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 394, 395, 397, 398, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 417, 418, 419, 420, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 463, 464, 471, 472, 473, 474, 475, 477, 478, 479, 485, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 569, 570, 577, 578, 579, 582, 583, 584, 585, 586, 588, 589, 590, 591, 592, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 607, 609, 611, 613, 614, 616, 617, 618, 619, 620, 622, 623, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 641, 642, 643, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 663, 664, 669, 670, 679, 680, 681, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 716, 717, 724, 728, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 750, 751, 753, 755, 757, 759, 761, 763, 765, 767, 769, 771, 775, 776, 778, 780, 781, 783, 786, 787, 789, 790, 792, 793, 795, 797, 798, 799, 804, 805, 808, 809, 810, 811, 812, 813, 815, 816, 817, 818, 829, 830, 831, 832, 833, 834, 835, 836, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 871, 872, 873, 874, 877, 880, 886, 887, 888, 889, 890, 891, 893, 894, 895, 896, 897, 898, 899, 902, 903, 904, 905, 906, 909, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 925, 926, 928, 929, 931, 933, 934, 935, 947, 948, 949, 950, 955, 959, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 973, 975, 978, 979, 981, 983, 984, 985, 987, 988, 989, 990, 991, 992, 993, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1026, 1027, 1028, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1079, 1080, 1082, 1083, 1084, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1101, 1105, 1106, 1107, 1108, 1135], "\u03c2": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 113, 114, 115, 116, 117, 118, 119, 120, 176, 177, 179, 180, 181, 182, 184, 186, 187, 194, 197, 200, 201, 202, 203, 207, 210, 213, 216, 218, 219, 223, 226, 229, 231, 234, 240, 244, 245, 246, 247, 248, 255, 256, 258, 265, 266, 267, 268, 269, 276, 277, 282, 283, 284, 287, 290, 291, 294, 295, 298, 299, 300, 302, 303, 304, 305, 306, 308, 317, 324, 325, 326, 327, 328, 329, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 394, 395, 397, 398, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 417, 418, 419, 420, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 463, 464, 471, 472, 473, 474, 475, 477, 478, 479, 485, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 569, 570, 577, 578, 579, 582, 583, 584, 585, 586, 588, 589, 590, 591, 592, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 607, 609, 611, 613, 614, 616, 617, 618, 619, 620, 622, 623, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 641, 642, 643, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 663, 664, 669, 670, 679, 680, 681, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 716, 717, 724, 728, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 750, 751, 753, 755, 757, 759, 761, 763, 765, 767, 769, 771, 775, 776, 778, 780, 781, 783, 786, 787, 789, 790, 792, 793, 795, 797, 798, 799, 804, 805, 808, 809, 810, 811, 812, 813, 815, 816, 817, 818, 829, 830, 831, 832, 833, 834, 835, 836, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 871, 872, 873, 874, 877, 880, 886, 887, 888, 889, 890, 891, 893, 894, 895, 896, 897, 898, 899, 902, 903, 904, 905, 906, 909, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 925, 926, 928, 929, 931, 933, 934, 935, 947, 948, 949, 950, 955, 959, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 973, 975, 978, 979, 981, 983, 984, 985, 987, 988, 989, 990, 991, 992, 993, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1026, 1027, 1028, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1079, 1080, 1082, 1083, 1084, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1101, 1105, 1106, 1107, 1108, 1135], "\u03d1": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 113, 114, 115, 116, 117, 118, 119, 120, 176, 177, 179, 180, 181, 182, 184, 186, 187, 194, 197, 200, 201, 202, 203, 207, 210, 213, 216, 218, 219, 223, 226, 229, 231, 234, 240, 244, 245, 246, 247, 248, 255, 256, 258, 265, 266, 267, 268, 269, 276, 277, 282, 283, 284, 287, 290, 291, 294, 295, 298, 299, 300, 302, 303, 304, 305, 306, 308, 317, 324, 325, 326, 327, 328, 329, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 394, 395, 397, 398, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 417, 418, 419, 420, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 463, 464, 471, 472, 473, 474, 475, 477, 478, 479, 485, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 569, 570, 577, 578, 579, 582, 583, 584, 585, 586, 588, 589, 590, 591, 592, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 607, 609, 611, 613, 614, 616, 617, 618, 619, 620, 622, 623, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 641, 642, 643, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 663, 664, 669, 670, 679, 680, 681, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 716, 717, 724, 728, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 750, 751, 753, 755, 757, 759, 761, 763, 765, 767, 769, 771, 775, 776, 778, 780, 781, 783, 786, 787, 789, 790, 792, 793, 795, 797, 798, 799, 804, 805, 808, 809, 810, 811, 812, 813, 815, 816, 817, 818, 829, 830, 831, 832, 833, 834, 835, 836, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 871, 872, 873, 874, 877, 880, 886, 887, 888, 889, 890, 891, 893, 894, 895, 896, 897, 898, 899, 902, 903, 904, 905, 906, 909, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 925, 926, 928, 929, 931, 933, 934, 935, 947, 948, 949, 950, 955, 959, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 973, 975, 978, 979, 981, 983, 984, 985, 987, 988, 989, 990, 991, 992, 993, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1026, 1027, 1028, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1079, 1080, 1082, 1083, 1084, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1101, 1105, 1106, 1107, 1108, 1135], "\u2128": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 113, 114, 115, 116, 117, 118, 119, 120, 176, 177, 179, 180, 181, 182, 184, 186, 187, 194, 197, 200, 201, 202, 203, 207, 210, 213, 216, 218, 219, 223, 226, 229, 231, 234, 240, 244, 245, 246, 247, 248, 255, 256, 258, 265, 266, 267, 268, 269, 276, 277, 282, 283, 284, 287, 290, 291, 294, 295, 298, 299, 300, 302, 303, 304, 305, 306, 308, 317, 324, 325, 326, 327, 328, 329, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 394, 395, 397, 398, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 417, 418, 419, 420, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 463, 464, 471, 472, 473, 474, 475, 477, 478, 479, 485, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 569, 570, 577, 578, 579, 582, 583, 584, 585, 586, 588, 589, 590, 591, 592, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 607, 609, 611, 613, 614, 616, 617, 618, 619, 620, 622, 623, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 641, 642, 643, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 663, 664, 669, 670, 679, 680, 681, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 716, 717, 724, 728, 729, 731, 732, 734, 736, 737, 739, 741, 742, 744, 750, 751, 753, 755, 757, 759, 761, 763, 765, 767, 769, 771, 775, 776, 778, 780, 781, 783, 786, 787, 789, 790, 792, 793, 795, 797, 798, 799, 804, 805, 808, 809, 810, 811, 812, 813, 815, 816, 817, 818, 829, 830, 831, 832, 833, 834, 835, 836, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 866, 871, 872, 873, 874, 877, 880, 886, 887, 888, 889, 890, 891, 893, 894, 895, 896, 897, 898, 899, 902, 903, 904, 905, 906, 909, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 925, 926, 928, 929, 931, 933, 934, 935, 947, 948, 949, 950, 955, 959, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 973, 975, 978, 979, 981, 983, 984, 985, 987, 988, 989, 990, 991, 992, 993, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1026, 1027, 1028, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1079, 1080, 1082, 1083, 1084, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1101, 1105, 1106, 1107, 1108, 1135], "mittwoch": [8, 184, 186, 194], "00": [8, 142, 143, 145, 150, 155, 163, 167, 175, 176, 177, 179, 180, 181, 182, 184, 186, 188, 190, 192, 194, 197, 201, 207, 209, 215, 225, 228, 229, 256, 257, 264, 265, 267, 310, 418, 426, 440, 695, 717, 724, 800, 801, 855, 877, 878, 879, 931, 950, 959, 970, 997, 1105], "tectrain": [8, 11, 163, 175, 184, 186, 194, 197, 200, 201, 202, 203, 207, 219, 231, 335], "html": [8, 17, 18, 23, 39, 40, 137, 146, 159, 167, 184, 194, 197, 200, 204, 207, 210, 213, 216, 232, 263, 312, 622, 729, 744, 750, 833, 855, 941, 945, 1016, 1082], "download": [8, 17, 63, 65, 106, 128, 139, 145, 147, 151, 155, 160, 163, 172, 179, 184, 192, 194, 197, 200, 201, 202, 207, 210, 213, 223, 226, 229, 231, 234, 237, 240, 249, 252, 259, 263, 270, 287, 308, 337, 427, 430, 491, 492, 493, 494, 495, 496, 497, 500, 501, 546, 631, 633, 637, 638, 660, 661, 662, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 692, 694, 833, 835, 855, 857, 870, 877, 878, 879, 889, 955, 961, 995, 1028, 1040, 1049, 1059, 1060, 1062, 1073, 1075, 1077, 1100], "repositori": [8, 23, 77, 97, 109, 122, 127, 136, 143, 146, 154, 158, 167, 169, 176, 177, 187, 192, 194, 197, 201, 202, 203, 207, 210, 213, 218, 219, 223, 226, 229, 231, 234, 240, 248, 256, 266, 267, 269, 273, 279, 283, 284, 287, 291, 295, 302, 316, 317, 322, 490, 507, 542, 726, 773, 1114, 1119], "kurssprach": [8, 184, 194, 203, 219, 231], "kurs": [8, 23, 137, 154, 175, 186, 194, 203, 219, 231, 1119, 1120, 1121, 1129, 1136, 1143], "viel": [8, 23, 158, 163, 167, 173, 184, 194, 203, 209, 219, 220, 231, 250, 1122, 1123, 1129, 1137, 1138], "spezifisch": [8, 184, 194, 203, 219, 231, 1120, 1139, 1142], "unterrichtet": [8, 184, 194, 203, 219, 231], "themenreihenfolg": [8, 184, 194, 203, 219, 231], "herdt": [8, 133, 194, 203, 219, 231], "skriptum": [8, 184, 194, 203, 219, 231, 1135], "\u00fcbernommen": [8, 184, 194, 203, 219, 231], "etwa": [8, 23, 148, 149, 158, 163, 173, 175, 184, 194, 196, 203, 219, 231, 335, 1120, 1122, 1129, 1135, 1136, 1138, 1143], "allgemein": [8, 184, 194, 203, 219, 231, 1135], "allgemeinen": [8, 184, 188, 194, 203, 219, 231, 1138], "dadurch": [8, 184, 194, 203, 219, 231, 335, 1122, 1142], "verwirrend": [8, 184, 194, 203, 219, 231, 1135], "weswegen": [8, 184, 194, 203, 219, 231], "vielen": [8, 23, 158, 183, 194, 203, 219, 231, 335, 1129, 1131], "f\u00e4llen": [8, 23, 184, 194, 203, 219, 231], "ausnahmen": [8, 184, 194, 203, 219, 231], "gemacht": [8, 23, 148, 154, 184, 194, 203, 219, 231, 1135, 1143], "kursstruktur": [8, 194], "sieh": [8, 23, 157, 158, 159, 163, 167, 173, 184, 186, 189, 194, 203, 219, 231, 335, 1120, 1121, 1135], "jjj": [8, 137, 181, 186, 194, 216, 264, 269, 326, 728, 729, 730, 734, 742], "hello": [8, 29, 63, 90, 133, 151, 173, 179, 183, 184, 186, 190, 194, 196, 197, 201, 203, 205, 207, 209, 210, 213, 215, 218, 219, 220, 222, 223, 229, 230, 231, 232, 234, 235, 237, 239, 252, 253, 259, 262, 270, 272, 273, 278, 279, 292, 303, 304, 305, 306, 307, 308, 312, 313, 317, 352, 355, 359, 370, 379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 549, 552, 622, 644, 650, 653, 670, 675, 676, 677, 678, 682, 723, 725, 726, 730, 733, 735, 738, 740, 743, 750, 754, 758, 764, 770, 775, 777, 782, 785, 788, 791, 794, 800, 801, 804, 805, 837, 839, 844, 845, 852, 869, 880, 902, 926, 947, 948, 949, 959, 961, 963, 964, 965, 972, 979, 980, 981, 982, 986, 994, 998, 999, 1005, 1008, 1010, 1014, 1015, 1024, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1081, 1084, 1085, 1091, 1095, 1099, 1121, 1135], "py": [8, 17, 21, 32, 40, 63, 65, 124, 136, 155, 159, 160, 163, 171, 172, 173, 176, 177, 179, 181, 191, 194, 200, 206, 209, 213, 215, 216, 219, 220, 223, 225, 226, 228, 229, 231, 232, 238, 240, 252, 258, 259, 260, 268, 269, 273, 274, 279, 290, 291, 302, 317, 426, 684, 877, 933, 935, 968, 969, 970, 971, 973, 974, 975, 978, 979, 981, 983, 984, 990, 991, 997, 998, 1000, 1006, 1012, 1013, 1017, 1023, 1025, 1026, 1027, 1028, 1032, 1033, 1035, 1036, 1038, 1040, 1045, 1049, 1051, 1053, 1055, 1056, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1073, 1074, 1079, 1087, 1092, 1093, 1098, 1105, 1106], "swap": [8, 29, 142, 178, 184, 194, 196, 203, 215, 218, 219, 231, 236, 237, 246, 255, 256, 276, 277, 392, 396, 399, 403, 412, 416, 421, 422, 520, 644, 682, 723, 725, 726, 759, 803, 814, 815, 869, 1001, 1030, 1032, 1033, 1034, 1035, 1037, 1069, 1135, 1139], "exercis": [8, 29, 78, 93, 97, 102, 104, 106, 113, 114, 118, 119, 120, 137, 159, 167, 172, 179, 180, 184, 186, 191, 194, 197, 203, 207, 210, 213, 214, 216, 219, 223, 226, 229, 231, 234, 236, 237, 246, 248, 255, 259, 261, 262, 276, 277, 281, 302, 303, 304, 305, 306, 308, 316, 319, 322, 330, 331, 348, 355, 370, 379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 441, 449, 489, 510, 511, 512, 513, 515, 516, 517, 522, 542, 609, 610, 624, 644, 682, 710, 723, 725, 726, 727, 734, 796, 800, 801, 803, 807, 814, 824, 826, 828, 853, 863, 869, 885, 908, 910, 919, 927, 946, 953, 994, 995, 1029, 1058, 1069, 1070, 1105, 1125, 1128, 1130, 1135, 1140], "greet": [8, 29, 173, 184, 194, 197, 203, 209, 210, 219, 220, 222, 228, 229, 231, 234, 237, 252, 253, 313, 436, 726, 948, 949, 955, 965, 1030, 1032, 1034, 1037, 1069, 1135], "depend": [8, 13, 28, 29, 63, 78, 113, 116, 120, 133, 136, 137, 140, 141, 147, 151, 170, 172, 184, 194, 197, 202, 203, 209, 210, 215, 216, 219, 225, 228, 229, 231, 234, 237, 252, 269, 277, 283, 317, 332, 340, 356, 358, 366, 369, 385, 402, 414, 420, 424, 428, 432, 435, 439, 442, 449, 455, 489, 501, 527, 529, 537, 617, 643, 691, 714, 724, 726, 732, 785, 796, 803, 807, 814, 817, 828, 853, 863, 870, 878, 896, 948, 959, 963, 965, 972, 994, 995, 997, 1030, 1034, 1043, 1069, 1099, 1100, 1130, 1132, 1135], "time": [8, 29, 36, 38, 43, 53, 63, 73, 76, 85, 89, 98, 110, 111, 113, 114, 120, 130, 139, 140, 141, 142, 144, 145, 147, 160, 161, 164, 172, 176, 178, 179, 180, 184, 190, 192, 194, 197, 199, 201, 202, 203, 209, 210, 212, 215, 216, 219, 220, 228, 229, 231, 234, 235, 237, 238, 252, 253, 256, 259, 260, 262, 265, 266, 268, 269, 270, 274, 277, 287, 290, 291, 294, 303, 324, 335, 352, 360, 374, 380, 383, 406, 408, 413, 414, 417, 418, 419, 420, 424, 429, 440, 442, 443, 446, 452, 501, 531, 544, 551, 553, 594, 595, 649, 656, 670, 684, 692, 694, 705, 712, 716, 724, 726, 744, 746, 750, 751, 753, 765, 771, 773, 775, 788, 791, 794, 798, 804, 805, 806, 812, 813, 817, 833, 864, 869, 870, 877, 878, 879, 889, 899, 905, 906, 907, 911, 914, 915, 917, 920, 923, 929, 931, 932, 933, 934, 935, 940, 962, 963, 969, 973, 979, 982, 983, 994, 995, 996, 999, 1006, 1009, 1012, 1013, 1030, 1032, 1034, 1037, 1069, 1075, 1084, 1089, 1100, 1130, 1135, 1141], "dai": [8, 12, 29, 141, 142, 144, 150, 153, 159, 160, 164, 178, 184, 194, 197, 203, 205, 214, 219, 228, 229, 231, 234, 237, 252, 260, 264, 287, 323, 325, 326, 335, 425, 430, 431, 442, 463, 726, 790, 829, 894, 931, 972, 994, 1001, 1010, 1030, 1032, 1034, 1037, 1069, 1070, 1077, 1099, 1126, 1127, 1128, 1130, 1135, 1140], "hen": [8, 194], "vehikelkauf": [8, 194], "datentypen": [8, 163, 167, 184, 185, 191, 194, 225, 243, 318, 1122, 1135, 1142], "\u00fcbersicht": [8, 184, 194, 197, 207, 210, 213], "git": [8, 13, 23, 61, 65, 72, 73, 74, 78, 113, 114, 119, 123, 127, 132, 144, 146, 154, 167, 168, 169, 172, 189, 191, 192, 194, 216, 218, 229, 240, 245, 247, 265, 266, 267, 323, 324, 330, 331, 427, 488, 499, 562, 726, 748, 773, 774, 833, 872, 877, 961, 962, 1026, 1114, 1119], "scm": [8, 61, 143, 167, 194, 746], "com": [8, 13, 20, 23, 37, 42, 44, 50, 85, 106, 113, 122, 124, 136, 145, 146, 147, 151, 155, 167, 168, 169, 170, 176, 177, 180, 181, 189, 194, 196, 202, 216, 218, 226, 228, 240, 245, 247, 253, 256, 259, 260, 265, 266, 267, 269, 273, 279, 283, 284, 287, 291, 295, 316, 317, 322, 328, 337, 485, 499, 520, 562, 582, 583, 584, 585, 586, 588, 589, 590, 591, 594, 603, 622, 704, 773, 774, 833, 872, 877, 880, 888, 889, 961, 1026, 1084, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1098], "pep": [8, 136, 184, 194, 266, 268, 269, 290, 291], "The": [8, 13, 17, 29, 30, 40, 49, 53, 57, 59, 62, 63, 65, 78, 84, 90, 99, 106, 107, 108, 109, 110, 111, 113, 115, 116, 119, 120, 123, 133, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 152, 155, 156, 157, 160, 161, 163, 164, 168, 169, 170, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 191, 192, 194, 197, 200, 203, 207, 208, 209, 210, 213, 214, 215, 218, 219, 222, 223, 225, 226, 228, 231, 232, 234, 237, 239, 242, 244, 245, 246, 247, 249, 252, 255, 258, 259, 262, 265, 267, 269, 272, 273, 275, 276, 278, 279, 303, 304, 305, 306, 307, 308, 314, 317, 318, 319, 320, 322, 323, 334, 335, 336, 339, 341, 349, 355, 363, 365, 367, 368, 369, 370, 375, 379, 383, 386, 392, 396, 399, 402, 403, 406, 412, 414, 416, 421, 425, 427, 429, 442, 443, 444, 447, 448, 453, 462, 463, 464, 466, 468, 470, 485, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 502, 504, 507, 509, 542, 543, 545, 549, 550, 552, 561, 562, 563, 564, 565, 568, 571, 579, 587, 593, 597, 606, 609, 610, 615, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 643, 644, 647, 651, 653, 663, 682, 692, 694, 698, 707, 714, 715, 720, 723, 724, 725, 726, 727, 734, 736, 746, 748, 751, 767, 773, 775, 778, 796, 798, 800, 801, 802, 803, 806, 807, 810, 811, 814, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 830, 832, 835, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 848, 849, 851, 863, 869, 873, 877, 878, 879, 892, 894, 898, 900, 903, 904, 905, 906, 908, 910, 913, 917, 918, 920, 921, 924, 927, 930, 931, 932, 941, 944, 945, 948, 951, 952, 953, 954, 955, 956, 957, 958, 961, 962, 963, 964, 965, 966, 970, 972, 973, 976, 977, 980, 981, 982, 984, 985, 986, 993, 995, 997, 999, 1000, 1007, 1011, 1014, 1018, 1019, 1021, 1022, 1023, 1024, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1077, 1078, 1080, 1081, 1084, 1085, 1087, 1091, 1093, 1099, 1102, 1105, 1107, 1109, 1112, 1122, 1125, 1126, 1128, 1135], "zen": [8, 143, 184, 194, 222, 233, 266, 659], "corei": [8, 161, 172, 175, 176, 179, 181, 184, 186, 192, 194, 197, 200, 207, 210, 213, 223, 226, 237, 240, 249, 273, 279, 317, 322, 1071, 1089, 1090, 1092, 1093, 1094, 1095, 1097, 1108], "schaefer": [8, 181, 184, 186, 192, 194], "youtub": [8, 20, 147, 161, 172, 175, 177, 179, 181, 184, 186, 194, 201, 268, 269, 290, 294, 303], "channel": [8, 117, 145, 161, 184, 194, 870, 878, 940], "trainer": [8, 12, 23, 24, 59, 62, 147, 166, 167, 172, 184, 194, 245, 247, 265, 429, 431, 499, 546, 694, 878, 972, 979, 994, 995, 1070, 1085, 1097, 1099, 1105, 1125, 1130], "hacker": [8, 184, 194, 1130], "schier": [8, 184, 194], "anzahl": [8, 184, 194], "sehr": [8, 23, 37, 148, 149, 163, 167, 173, 175, 183, 184, 188, 194, 225, 335, 1120, 1122, 1129, 1132, 1135, 1136, 1138, 1143], "guten": [8, 163, 173, 175, 184, 194, 228, 232, 335, 1124], "tutori": [8, 147, 161, 172, 175, 180, 184, 192, 194, 200, 201, 203, 210, 213, 223, 226, 249, 279, 291, 303, 317, 322, 833, 879, 1023, 1025, 1089, 1090, 1092, 1093, 1094, 1095, 1097, 1108], "stil": [8, 184, 194], "besser": [8, 23, 148, 159, 183, 184, 194, 204, 1135], "ander": [8, 163, 173, 184, 194, 204, 212, 225, 312, 317, 322, 326, 335, 799, 1120, 1121, 1124, 1129, 1132, 1137, 1141, 1142], "auswahl": [8, 184, 194], "einleitung": [9, 195], "datatyp": [9, 29, 90, 133, 172, 176, 179, 184, 185, 186, 189, 191, 195, 197, 198, 203, 207, 208, 210, 211, 213, 214, 216, 217, 218, 219, 221, 223, 224, 229, 230, 231, 233, 234, 236, 239, 249, 251, 254, 261, 269, 271, 275, 281, 291, 293, 303, 304, 305, 306, 307, 308, 317, 322, 356, 363, 548, 577, 645, 726, 940, 972, 977, 979, 980, 981, 982, 986, 994, 1005, 1014, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1081, 1084, 1085, 1091, 1099, 1135], "number": [9, 24, 27, 29, 36, 53, 57, 59, 62, 63, 68, 78, 80, 82, 84, 85, 110, 111, 114, 115, 119, 130, 133, 139, 141, 142, 145, 147, 150, 151, 155, 158, 160, 163, 169, 172, 176, 179, 182, 183, 184, 186, 191, 192, 195, 197, 198, 200, 203, 207, 209, 210, 212, 213, 215, 216, 219, 221, 222, 223, 225, 228, 229, 231, 233, 234, 236, 237, 238, 240, 245, 247, 249, 252, 253, 259, 260, 265, 266, 267, 268, 269, 270, 272, 273, 274, 278, 279, 282, 290, 291, 294, 303, 308, 317, 324, 335, 340, 342, 344, 346, 348, 349, 350, 356, 360, 362, 363, 374, 385, 401, 405, 410, 414, 418, 424, 426, 436, 454, 455, 463, 488, 496, 498, 501, 503, 514, 520, 547, 567, 575, 578, 585, 601, 626, 635, 638, 647, 659, 685, 692, 694, 724, 726, 732, 734, 741, 744, 753, 755, 767, 769, 775, 783, 787, 798, 806, 813, 839, 858, 860, 862, 864, 866, 878, 889, 890, 893, 897, 898, 899, 904, 905, 906, 907, 926, 931, 932, 940, 941, 945, 947, 950, 970, 971, 973, 975, 976, 977, 987, 999, 1000, 1001, 1006, 1007, 1017, 1018, 1019, 1021, 1022, 1030, 1033, 1034, 1037, 1040, 1041, 1043, 1044, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1065, 1069, 1070, 1071, 1074, 1079, 1097, 1098, 1100, 1105, 1118, 1127, 1130, 1135], "integ": [9, 38, 75, 76, 88, 158, 160, 162, 177, 178, 179, 181, 185, 189, 195, 198, 202, 209, 212, 213, 215, 218, 221, 224, 225, 226, 228, 233, 236, 242, 254, 261, 274, 281, 293, 317, 340, 341, 346, 356, 359, 361, 362, 363, 374, 385, 387, 389, 390, 401, 402, 406, 412, 416, 421, 422, 463, 464, 467, 485, 520, 548, 574, 577, 625, 639, 643, 644, 646, 682, 685, 711, 723, 725, 726, 732, 907, 917, 918, 919, 926, 966, 979, 982, 1010, 1016, 1022, 1048, 1092, 1094, 1122, 1126, 1141], "string": [9, 29, 42, 50, 58, 90, 97, 106, 115, 137, 142, 167, 177, 178, 179, 181, 184, 185, 188, 191, 195, 197, 198, 200, 201, 203, 207, 208, 210, 211, 213, 214, 216, 217, 218, 219, 221, 223, 224, 227, 229, 230, 231, 233, 234, 236, 239, 242, 244, 245, 247, 249, 251, 252, 254, 258, 259, 261, 262, 264, 272, 273, 275, 278, 279, 281, 290, 291, 293, 294, 302, 303, 304, 305, 306, 307, 308, 313, 317, 322, 328, 341, 344, 348, 355, 364, 370, 379, 385, 386, 392, 396, 399, 403, 408, 412, 416, 421, 422, 426, 434, 445, 449, 451, 466, 468, 469, 470, 473, 475, 478, 479, 480, 482, 483, 484, 485, 501, 502, 503, 508, 519, 520, 528, 534, 537, 543, 545, 548, 549, 552, 567, 569, 586, 589, 590, 591, 595, 598, 599, 600, 601, 602, 603, 606, 610, 621, 623, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 642, 644, 645, 646, 648, 650, 651, 655, 670, 674, 676, 677, 678, 679, 682, 684, 686, 687, 691, 701, 702, 703, 704, 706, 723, 724, 725, 726, 805, 896, 907, 911, 914, 918, 926, 931, 940, 944, 971, 972, 975, 983, 992, 994, 999, 1007, 1021, 1028, 1029, 1030, 1035, 1040, 1043, 1044, 1045, 1048, 1051, 1054, 1055, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1071, 1082, 1083, 1084, 1085, 1087, 1090, 1122, 1135], "compound": [9, 29, 90, 133, 176, 179, 184, 185, 186, 195, 197, 203, 207, 208, 210, 211, 213, 214, 216, 217, 219, 221, 223, 224, 229, 230, 231, 233, 234, 236, 237, 239, 251, 252, 259, 262, 269, 271, 272, 273, 275, 278, 279, 281, 290, 291, 293, 294, 303, 304, 305, 306, 307, 308, 317, 340, 371, 390, 726, 972, 979, 980, 981, 982, 986, 994, 1027, 1028, 1029, 1030, 1038, 1039, 1040, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1081, 1084, 1085, 1091, 1099, 1135], "list": [9, 27, 29, 37, 63, 90, 99, 113, 124, 133, 136, 137, 140, 147, 151, 162, 167, 169, 172, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 191, 192, 195, 197, 198, 200, 203, 207, 208, 210, 211, 213, 214, 216, 217, 218, 219, 221, 223, 224, 225, 230, 231, 233, 234, 236, 237, 239, 241, 245, 246, 249, 251, 252, 254, 255, 256, 259, 261, 262, 265, 266, 267, 271, 272, 273, 275, 276, 277, 278, 279, 281, 290, 291, 293, 294, 302, 309, 312, 314, 317, 321, 322, 323, 335, 393, 399, 403, 404, 412, 416, 418, 420, 421, 422, 426, 427, 430, 439, 446, 448, 449, 488, 490, 498, 501, 534, 536, 538, 542, 546, 547, 552, 577, 593, 606, 610, 629, 639, 644, 647, 682, 690, 696, 701, 714, 715, 723, 724, 725, 726, 727, 735, 739, 740, 743, 750, 751, 754, 764, 775, 777, 781, 782, 788, 791, 794, 799, 800, 801, 802, 803, 806, 807, 813, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 837, 840, 841, 844, 845, 847, 848, 849, 850, 851, 853, 861, 869, 878, 898, 900, 902, 908, 910, 918, 920, 924, 927, 930, 932, 947, 949, 964, 968, 971, 972, 975, 976, 977, 990, 992, 994, 995, 1001, 1002, 1007, 1008, 1009, 1010, 1013, 1019, 1021, 1022, 1023, 1028, 1030, 1040, 1043, 1044, 1045, 1046, 1050, 1051, 1052, 1053, 1054, 1055, 1061, 1063, 1066, 1068, 1069, 1070, 1071, 1076, 1079, 1089, 1092, 1096, 1107, 1112, 1119, 1122, 1135, 1136], "arrai": [9, 97, 108, 113, 163, 184, 185, 190, 195, 197, 201, 202, 204, 210, 218, 223, 228, 237, 240, 244, 245, 265, 273, 279, 340, 349, 355, 359, 370, 379, 386, 396, 399, 403, 405, 407, 408, 411, 412, 416, 421, 422, 500, 503, 526, 534, 537, 575, 576, 578, 580, 582, 585, 586, 591, 595, 607, 627, 634, 635, 636, 637, 638, 639, 642, 644, 682, 690, 705, 723, 725, 726, 744, 805, 810, 926, 1003, 1007, 1019, 1071, 1074, 1076, 1100, 1135], "javascript": [9, 23, 138, 173, 183, 195, 204, 228, 233, 966, 1012], "std": [9, 42, 50, 58, 106, 108, 109, 110, 111, 113, 115, 151, 167, 168, 195, 243, 256, 265, 267, 428, 429, 434, 442, 445, 447, 449, 451, 456, 463, 466, 468, 469, 470, 473, 474, 475, 478, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 496, 498, 500, 501, 502, 504, 505, 506, 507, 518, 520, 528, 538, 542, 545, 546, 548, 553, 554, 555, 559, 567, 569, 573, 574, 575, 576, 577, 582, 583, 584, 585, 586, 588, 589, 590, 594, 595, 597, 600, 601, 602, 603, 606, 607, 610, 611, 613, 614, 617, 619, 620, 621, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 636, 637, 639, 644, 646, 649, 650, 651, 652, 653, 655, 656, 657, 659, 660, 661, 662, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 682, 684, 686, 687, 689, 694, 697, 700, 704, 707, 709, 715, 719, 720, 722, 723, 725, 726, 877, 911, 914, 918, 926, 928, 940, 944, 1076, 1112, 1117, 1125], "vector": [9, 13, 106, 108, 110, 111, 113, 115, 167, 195, 201, 218, 244, 245, 258, 264, 265, 267, 447, 449, 473, 474, 490, 491, 498, 504, 505, 506, 507, 518, 536, 538, 542, 546, 548, 553, 558, 582, 584, 585, 586, 588, 591, 593, 606, 610, 624, 626, 627, 634, 635, 636, 637, 639, 645, 646, 650, 655, 656, 657, 664, 665, 666, 667, 668, 670, 690, 691, 694, 720, 722, 726, 944, 1000, 1078, 1095, 1117], "dictionari": [9, 29, 63, 90, 162, 172, 177, 178, 179, 181, 184, 185, 186, 189, 191, 195, 197, 198, 203, 207, 208, 210, 211, 213, 214, 216, 217, 219, 221, 223, 224, 227, 230, 231, 233, 234, 236, 237, 239, 242, 249, 251, 252, 254, 259, 261, 262, 266, 268, 269, 271, 272, 273, 275, 278, 279, 281, 284, 287, 290, 291, 293, 294, 317, 322, 325, 691, 726, 972, 975, 979, 980, 981, 982, 985, 986, 990, 994, 1028, 1030, 1038, 1043, 1048, 1049, 1054, 1057, 1058, 1059, 1061, 1063, 1064, 1069, 1071, 1079, 1089, 1096, 1099, 1135], "valu": [9, 58, 84, 108, 113, 114, 115, 119, 120, 140, 142, 144, 155, 157, 159, 160, 161, 173, 177, 179, 181, 183, 188, 190, 195, 196, 197, 199, 200, 201, 202, 204, 205, 207, 209, 210, 212, 213, 215, 216, 218, 220, 222, 223, 225, 228, 232, 235, 237, 238, 249, 250, 253, 256, 258, 260, 270, 273, 274, 279, 280, 292, 303, 311, 317, 339, 344, 346, 348, 349, 359, 362, 363, 364, 372, 374, 375, 383, 385, 387, 388, 393, 404, 408, 410, 412, 416, 421, 422, 426, 429, 434, 436, 439, 444, 447, 449, 463, 464, 466, 469, 473, 475, 478, 480, 481, 483, 494, 495, 496, 498, 501, 508, 520, 537, 546, 547, 548, 551, 557, 560, 598, 600, 602, 603, 644, 646, 647, 653, 655, 664, 670, 673, 676, 677, 678, 682, 691, 702, 716, 720, 723, 725, 726, 729, 732, 751, 753, 755, 757, 773, 783, 805, 818, 869, 878, 899, 907, 909, 910, 912, 913, 914, 917, 920, 926, 929, 940, 941, 944, 945, 964, 966, 968, 971, 975, 979, 981, 983, 990, 1001, 1002, 1003, 1011, 1013, 1016, 1018, 1019, 1023, 1028, 1031, 1036, 1038, 1041, 1048, 1050, 1071, 1074, 1076, 1079, 1082, 1083, 1089, 1090, 1093, 1094, 1095, 1098, 1112], "map": [9, 32, 34, 42, 59, 62, 106, 108, 109, 115, 142, 149, 167, 173, 187, 189, 191, 195, 197, 198, 200, 201, 204, 212, 213, 215, 230, 244, 245, 247, 253, 265, 267, 274, 293, 298, 317, 420, 445, 449, 478, 482, 483, 484, 490, 501, 507, 536, 538, 542, 597, 600, 601, 602, 603, 606, 610, 639, 642, 646, 650, 656, 682, 701, 702, 703, 705, 725, 726, 757, 769, 931, 940, 941, 989, 993, 1002, 1003, 1022, 1078, 1098, 1129, 1139], "mathematisch": [9, 195, 253], "mengen": [9, 184, 185, 195, 1135], "while": [9, 13, 29, 53, 54, 63, 90, 133, 144, 146, 147, 155, 161, 172, 176, 177, 179, 180, 181, 182, 184, 185, 186, 188, 190, 191, 192, 195, 196, 197, 199, 200, 203, 204, 205, 207, 209, 210, 213, 214, 215, 218, 219, 221, 223, 224, 226, 227, 229, 230, 231, 232, 234, 236, 237, 239, 249, 252, 253, 259, 261, 262, 266, 268, 272, 273, 274, 278, 279, 280, 290, 291, 292, 294, 303, 304, 305, 306, 307, 308, 309, 317, 320, 322, 340, 342, 346, 348, 350, 357, 362, 364, 378, 379, 385, 386, 390, 392, 396, 399, 400, 403, 405, 407, 412, 414, 416, 421, 422, 432, 444, 449, 463, 470, 488, 537, 573, 577, 578, 581, 583, 585, 588, 603, 626, 632, 642, 644, 655, 670, 671, 672, 678, 682, 703, 714, 716, 720, 723, 725, 726, 750, 753, 761, 763, 773, 775, 781, 782, 788, 791, 794, 806, 810, 817, 869, 870, 877, 878, 890, 895, 896, 897, 898, 905, 914, 920, 925, 926, 929, 931, 937, 940, 944, 959, 964, 972, 973, 974, 975, 979, 982, 994, 995, 999, 1004, 1009, 1021, 1027, 1028, 1029, 1030, 1034, 1040, 1042, 1043, 1044, 1046, 1050, 1051, 1052, 1053, 1054, 1055, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1071, 1077, 1078, 1081, 1085, 1099, 1122, 1126, 1128, 1130, 1135], "function": [9, 21, 29, 38, 50, 59, 62, 63, 78, 80, 82, 90, 97, 110, 111, 113, 114, 120, 133, 137, 140, 142, 151, 159, 172, 173, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 188, 191, 192, 195, 197, 198, 200, 201, 203, 207, 208, 210, 211, 213, 214, 215, 216, 218, 219, 221, 223, 224, 225, 226, 229, 230, 231, 233, 234, 235, 239, 242, 243, 250, 252, 254, 256, 258, 259, 261, 262, 265, 267, 268, 269, 270, 272, 273, 275, 278, 279, 280, 286, 293, 302, 312, 313, 319, 320, 322, 335, 339, 340, 346, 349, 353, 354, 355, 360, 365, 369, 370, 378, 379, 380, 381, 383, 385, 390, 392, 393, 396, 397, 398, 399, 401, 403, 404, 405, 407, 412, 414, 416, 418, 421, 422, 425, 433, 439, 447, 452, 464, 485, 489, 490, 501, 504, 505, 506, 507, 509, 518, 531, 537, 542, 546, 549, 552, 554, 555, 556, 557, 563, 568, 571, 573, 587, 593, 597, 606, 609, 610, 617, 620, 623, 624, 625, 627, 628, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 644, 646, 647, 650, 651, 659, 662, 668, 670, 679, 680, 681, 682, 684, 686, 687, 692, 698, 702, 704, 705, 715, 723, 724, 725, 726, 737, 740, 743, 744, 750, 754, 757, 761, 764, 767, 773, 775, 777, 782, 788, 789, 791, 792, 793, 794, 803, 806, 807, 869, 877, 890, 892, 898, 899, 900, 907, 908, 910, 915, 916, 917, 923, 924, 926, 927, 930, 932, 945, 947, 955, 965, 972, 975, 976, 977, 978, 986, 994, 996, 999, 1000, 1004, 1006, 1027, 1028, 1029, 1030, 1033, 1036, 1037, 1040, 1041, 1042, 1043, 1048, 1051, 1052, 1054, 1055, 1056, 1064, 1065, 1066, 1067, 1068, 1069, 1071, 1076, 1081, 1087, 1098, 1101, 1105, 1117, 1125, 1126, 1127, 1135], "xx": [10, 209, 240, 274, 280], "yy": 10, "kur": [11, 23, 158, 160, 163, 175, 335, 1120, 1121, 1122, 1123, 1124, 1129, 1131, 1132, 1138, 1139, 1141], "fand": [11, 175, 335], "team": [11, 147, 152, 155, 156, 167, 175, 176, 177, 192, 201, 226, 268, 335, 812, 818, 825, 827, 973, 1070, 1119, 1127], "statt": [11, 23, 175, 335, 1136, 1137, 1143], "wurd": [11, 149, 163, 167, 173, 175, 184, 317, 322, 335, 1124, 1135, 1136, 1142], "\u00fcber": [11, 23, 148, 149, 154, 158, 159, 163, 167, 175, 184, 185, 189, 198, 203, 229, 318, 335, 1119, 1129, 1135, 1136, 1141, 1142], "meinen": [11, 23, 175, 203, 219, 231, 335], "partner": [11, 23, 175, 335, 1119], "durat": [12, 27, 145, 155, 397, 431, 501, 712, 716, 717, 972, 994, 1070, 1099, 1127, 1128, 1130, 1140], "each": [12, 40, 63, 76, 106, 110, 111, 140, 141, 142, 155, 161, 179, 180, 192, 209, 212, 215, 225, 228, 232, 265, 267, 274, 302, 308, 314, 317, 322, 390, 415, 418, 420, 444, 452, 485, 499, 500, 556, 642, 717, 724, 761, 769, 773, 800, 806, 827, 831, 833, 877, 878, 879, 917, 921, 929, 963, 975, 978, 983, 989, 1049, 1070, 1076, 1078, 1079, 1080, 1095, 1100, 1130, 1140], "about": [12, 23, 29, 30, 39, 42, 43, 44, 45, 46, 49, 63, 65, 68, 75, 80, 83, 84, 90, 97, 113, 120, 128, 133, 134, 136, 140, 141, 142, 144, 147, 155, 164, 168, 169, 172, 176, 177, 178, 179, 180, 181, 184, 191, 192, 197, 200, 201, 202, 203, 207, 209, 210, 213, 216, 217, 218, 219, 221, 223, 225, 226, 228, 229, 231, 233, 234, 237, 246, 249, 251, 252, 254, 255, 256, 262, 266, 267, 272, 273, 276, 278, 279, 281, 290, 291, 294, 298, 303, 304, 305, 306, 307, 308, 317, 319, 322, 328, 358, 363, 372, 374, 402, 405, 406, 408, 414, 418, 420, 424, 438, 444, 537, 546, 547, 570, 577, 643, 652, 656, 657, 687, 691, 696, 705, 706, 724, 726, 742, 744, 773, 783, 792, 800, 801, 819, 836, 870, 877, 878, 879, 890, 894, 900, 915, 932, 940, 966, 972, 973, 975, 982, 983, 990, 994, 1002, 1013, 1021, 1028, 1029, 1030, 1040, 1043, 1051, 1052, 1054, 1055, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1078, 1084, 1085, 1086, 1087, 1091, 1100, 1105, 1114, 1127, 1128, 1135, 1140], "book": [12, 29, 32, 136, 140, 145, 155, 156, 167, 176, 201, 223, 259, 268, 269, 335, 425, 431, 833, 972, 994, 1070, 1085, 1099, 1126, 1128, 1130, 1140], "separ": [12, 38, 78, 103, 104, 113, 140, 167, 169, 179, 199, 212, 218, 228, 232, 235, 238, 253, 256, 259, 260, 262, 270, 274, 282, 347, 385, 406, 426, 429, 436, 448, 452, 462, 490, 491, 492, 493, 494, 495, 496, 497, 500, 520, 537, 542, 567, 688, 716, 724, 726, 741, 742, 775, 809, 813, 818, 864, 866, 869, 879, 915, 931, 947, 949, 952, 953, 954, 955, 957, 965, 970, 1027, 1044, 1049, 1070, 1079, 1112, 1122, 1127, 1140], "requir": [12, 13, 27, 37, 39, 42, 61, 89, 108, 113, 116, 132, 136, 140, 141, 142, 145, 147, 151, 160, 168, 170, 172, 176, 180, 188, 199, 202, 213, 216, 218, 220, 225, 226, 240, 256, 265, 267, 268, 291, 328, 339, 372, 402, 404, 427, 436, 439, 447, 467, 469, 489, 498, 501, 520, 569, 582, 598, 635, 646, 652, 653, 659, 662, 667, 668, 692, 699, 870, 878, 879, 890, 895, 931, 933, 940, 959, 964, 972, 985, 994, 995, 1013, 1022, 1023, 1026, 1079, 1085, 1099, 1100, 1105, 1107, 1108, 1114, 1126, 1128, 1130, 1140, 1143], "particip": [12, 145, 147, 169, 172, 256, 287, 485, 872, 995, 1009, 1029, 1070, 1140], "should": [12, 37, 43, 45, 55, 57, 77, 80, 114, 119, 120, 136, 141, 142, 145, 147, 151, 155, 162, 168, 172, 176, 201, 202, 216, 222, 228, 232, 256, 291, 294, 303, 308, 323, 324, 338, 363, 385, 400, 410, 414, 424, 429, 436, 442, 447, 452, 453, 455, 456, 464, 501, 545, 552, 554, 650, 653, 655, 659, 670, 714, 732, 751, 763, 765, 769, 773, 798, 817, 833, 840, 845, 877, 878, 879, 886, 905, 921, 932, 970, 979, 983, 991, 1002, 1036, 1040, 1049, 1077, 1087, 1100, 1105, 1106, 1140], "fluent": [12, 279, 318, 319, 1071, 1140], "target": [12, 17, 40, 63, 108, 141, 143, 151, 192, 201, 283, 319, 408, 411, 427, 430, 431, 437, 440, 453, 557, 726, 746, 748, 753, 773, 835, 900, 925, 949, 950, 959, 961, 968, 972, 979, 981, 994, 1078, 1085, 1099, 1107, 1130], "audienc": [12, 140, 142, 172, 177, 294, 972, 994, 1026, 1085, 1099, 1125, 1130], "english": [12, 29, 106, 133, 160, 179, 186, 197, 207, 210, 219, 223, 229, 231, 234, 236, 237, 252, 259, 264, 272, 273, 278, 279, 291, 315, 316, 317, 322, 431, 726, 972, 994, 1030, 1040, 1043, 1044, 1046, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1069, 1070, 1084, 1085, 1099], "german": [12, 14, 431, 972, 994, 1070, 1084, 1085, 1087, 1099], "see": [12, 13, 23, 27, 29, 31, 42, 43, 45, 46, 50, 53, 55, 57, 63, 65, 77, 78, 85, 89, 99, 106, 113, 114, 115, 117, 118, 119, 120, 125, 126, 128, 133, 136, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 155, 157, 160, 161, 162, 170, 172, 176, 177, 186, 191, 192, 196, 199, 201, 202, 207, 209, 212, 213, 215, 216, 218, 219, 225, 228, 232, 237, 240, 249, 253, 256, 258, 262, 264, 265, 266, 267, 269, 273, 274, 282, 283, 291, 300, 303, 308, 317, 320, 321, 323, 328, 331, 336, 339, 348, 349, 350, 352, 358, 375, 388, 394, 397, 407, 413, 426, 427, 432, 436, 437, 438, 439, 443, 444, 447, 448, 449, 457, 458, 459, 460, 461, 465, 468, 469, 485, 488, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 508, 509, 518, 519, 520, 528, 534, 537, 542, 544, 545, 546, 547, 552, 554, 555, 560, 561, 563, 578, 582, 595, 609, 613, 614, 616, 617, 629, 633, 635, 636, 638, 642, 645, 650, 652, 653, 654, 655, 657, 664, 670, 684, 685, 687, 690, 691, 692, 694, 696, 700, 701, 702, 703, 704, 705, 714, 716, 721, 724, 727, 729, 732, 734, 736, 737, 739, 741, 742, 744, 746, 748, 751, 753, 759, 761, 763, 765, 767, 769, 773, 776, 780, 781, 787, 789, 799, 800, 801, 805, 808, 811, 812, 829, 833, 834, 836, 837, 839, 842, 844, 860, 870, 877, 878, 879, 900, 903, 905, 906, 907, 911, 914, 916, 918, 921, 928, 940, 944, 947, 948, 949, 950, 955, 957, 960, 961, 962, 963, 964, 965, 968, 969, 970, 971, 972, 975, 983, 984, 987, 988, 990, 993, 995, 997, 1000, 1008, 1011, 1012, 1013, 1023, 1026, 1029, 1038, 1042, 1045, 1056, 1067, 1068, 1074, 1076, 1079, 1084, 1085, 1087, 1089, 1092, 1093, 1094, 1099, 1102, 1105, 1110, 1112, 1117, 1127, 1128, 1130, 1140], "also": [12, 13, 23, 27, 31, 57, 63, 65, 114, 117, 118, 119, 136, 141, 142, 144, 145, 147, 148, 150, 151, 152, 159, 161, 162, 163, 164, 167, 169, 170, 172, 173, 176, 182, 184, 202, 209, 215, 225, 226, 228, 232, 238, 244, 245, 247, 256, 258, 265, 266, 267, 273, 274, 283, 291, 303, 335, 426, 427, 432, 437, 444, 453, 463, 466, 468, 469, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 508, 509, 519, 544, 545, 546, 547, 552, 554, 560, 578, 595, 598, 613, 614, 616, 642, 650, 653, 654, 655, 657, 670, 681, 684, 687, 690, 691, 692, 694, 696, 700, 702, 705, 706, 714, 716, 724, 763, 773, 778, 799, 811, 817, 818, 833, 837, 839, 842, 844, 864, 870, 880, 889, 890, 903, 907, 911, 918, 928, 949, 950, 957, 962, 964, 966, 968, 969, 970, 972, 975, 983, 987, 993, 995, 999, 1002, 1012, 1013, 1016, 1026, 1038, 1042, 1045, 1056, 1076, 1077, 1085, 1089, 1092, 1093, 1094, 1099, 1102, 1105, 1127, 1129, 1135, 1136, 1140], "train": [12, 13, 14, 23, 29, 30, 32, 37, 65, 106, 123, 135, 136, 141, 145, 152, 153, 155, 163, 164, 167, 168, 169, 172, 175, 199, 209, 215, 225, 228, 258, 265, 267, 270, 282, 325, 335, 427, 429, 430, 431, 432, 433, 435, 436, 438, 440, 442, 443, 444, 445, 446, 447, 449, 451, 454, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 498, 500, 503, 504, 505, 506, 508, 510, 511, 512, 513, 515, 516, 517, 518, 519, 542, 622, 702, 727, 729, 732, 737, 742, 748, 751, 759, 880, 886, 888, 889, 890, 911, 914, 937, 940, 944, 971, 972, 974, 994, 995, 1023, 1026, 1029, 1073, 1074, 1077, 1078, 1085, 1099, 1110, 1114, 1119, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143], "sourc": [13, 23, 28, 30, 39, 61, 65, 68, 73, 86, 110, 111, 113, 120, 139, 140, 141, 142, 145, 146, 147, 151, 155, 157, 158, 160, 161, 168, 181, 186, 191, 209, 215, 223, 225, 228, 232, 237, 245, 247, 249, 252, 253, 256, 277, 284, 380, 381, 384, 419, 428, 429, 430, 432, 433, 434, 435, 437, 438, 439, 448, 499, 502, 503, 617, 650, 653, 659, 664, 670, 700, 741, 771, 774, 785, 817, 833, 834, 866, 907, 947, 948, 950, 951, 953, 957, 959, 961, 962, 963, 964, 965, 1002, 1058, 1067, 1107, 1114, 1120, 1130, 1137], "under": [13, 21, 35, 55, 119, 139, 140, 142, 147, 168, 179, 181, 291, 335, 449, 464, 501, 809, 810, 877, 878, 879, 880, 881, 882, 889, 890, 932, 947, 971, 978, 985, 1019, 1105], "why": [13, 24, 28, 45, 50, 65, 66, 69, 113, 120, 136, 140, 141, 146, 152, 172, 176, 177, 179, 181, 192, 201, 221, 259, 262, 268, 269, 290, 298, 317, 320, 321, 324, 338, 350, 356, 363, 366, 384, 395, 400, 401, 406, 410, 413, 420, 425, 463, 486, 545, 560, 578, 591, 617, 620, 636, 642, 643, 659, 690, 706, 709, 722, 741, 753, 769, 773, 804, 810, 813, 870, 923, 926, 944, 959, 961, 969, 970, 973, 1019, 1021, 1071, 1076, 1086, 1094], "appli": [13, 76, 83, 137, 142, 181, 199, 258, 264, 291, 367, 402, 408, 426, 557, 657, 692, 746, 773, 813, 816, 833, 877, 878, 903, 964, 1090], "websit": [13, 23, 141, 155, 1101, 1114], "contain": [13, 17, 29, 35, 38, 61, 106, 107, 108, 110, 111, 113, 136, 137, 143, 146, 151, 155, 160, 162, 167, 168, 170, 172, 173, 176, 179, 181, 199, 201, 202, 209, 215, 225, 226, 228, 232, 239, 240, 243, 244, 245, 258, 265, 274, 291, 302, 303, 312, 319, 320, 326, 328, 365, 384, 398, 418, 420, 426, 428, 429, 433, 447, 463, 485, 488, 490, 499, 500, 501, 507, 508, 509, 542, 543, 545, 553, 562, 579, 582, 595, 606, 610, 624, 633, 638, 639, 645, 650, 690, 702, 705, 720, 721, 722, 724, 726, 729, 734, 742, 744, 746, 767, 769, 773, 793, 800, 801, 804, 813, 815, 838, 839, 840, 845, 852, 877, 878, 879, 886, 907, 915, 916, 931, 941, 947, 950, 955, 959, 964, 971, 973, 978, 995, 1017, 1020, 1026, 1028, 1040, 1049, 1053, 1068, 1071, 1073, 1077, 1079, 1082, 1084, 1089, 1100, 1101, 1105, 1111, 1112, 1124, 1125], "give": [13, 27, 40, 53, 59, 62, 110, 111, 115, 133, 137, 139, 140, 142, 147, 150, 161, 164, 168, 169, 176, 181, 192, 200, 232, 237, 249, 265, 267, 336, 350, 351, 366, 382, 385, 393, 418, 424, 426, 429, 444, 496, 498, 514, 531, 567, 582, 628, 636, 659, 688, 773, 799, 806, 824, 826, 878, 879, 898, 899, 911, 914, 933, 935, 940, 941, 947, 950, 959, 968, 971, 994, 1011, 1023, 1071, 1075, 1076, 1100, 1105, 1107, 1125, 1128, 1130], "structur": [13, 29, 65, 78, 89, 108, 120, 140, 155, 177, 191, 218, 219, 226, 228, 229, 231, 234, 237, 240, 243, 252, 259, 262, 269, 273, 279, 283, 284, 287, 291, 295, 317, 321, 323, 325, 340, 350, 358, 363, 392, 394, 398, 399, 403, 412, 415, 416, 421, 422, 426, 427, 431, 439, 446, 464, 489, 499, 518, 567, 600, 633, 642, 644, 682, 723, 725, 726, 761, 763, 767, 771, 773, 793, 829, 860, 896, 902, 918, 923, 941, 1011, 1013, 1053, 1059, 1096, 1099, 1106, 1113, 1125], "much": [13, 27, 35, 38, 63, 80, 115, 118, 139, 140, 141, 142, 147, 150, 155, 164, 170, 172, 176, 177, 178, 180, 202, 213, 215, 216, 218, 220, 226, 240, 241, 244, 245, 247, 259, 262, 268, 269, 290, 291, 294, 298, 320, 352, 363, 374, 410, 414, 424, 439, 464, 543, 553, 559, 578, 599, 619, 642, 643, 652, 653, 657, 670, 682, 683, 684, 688, 690, 692, 702, 706, 725, 726, 729, 744, 751, 759, 761, 767, 769, 773, 812, 813, 862, 870, 873, 876, 878, 890, 932, 941, 944, 945, 947, 949, 959, 966, 969, 970, 983, 984, 989, 990, 993, 1002, 1019, 1071, 1077, 1078, 1105, 1107, 1125], "like": [13, 21, 27, 28, 30, 39, 43, 45, 55, 59, 62, 63, 65, 77, 78, 113, 114, 115, 118, 120, 133, 139, 140, 141, 142, 144, 145, 147, 150, 151, 155, 160, 163, 164, 168, 169, 170, 172, 176, 178, 181, 191, 192, 199, 201, 202, 209, 215, 216, 218, 219, 225, 228, 241, 243, 245, 247, 253, 256, 258, 259, 262, 265, 267, 291, 294, 303, 308, 320, 328, 349, 352, 356, 378, 380, 385, 390, 402, 406, 414, 417, 424, 430, 434, 436, 439, 442, 443, 444, 464, 488, 498, 499, 500, 501, 502, 514, 520, 528, 531, 537, 546, 549, 552, 556, 557, 558, 560, 581, 598, 607, 614, 616, 619, 622, 623, 632, 633, 641, 642, 645, 646, 652, 653, 670, 688, 690, 691, 701, 702, 705, 706, 712, 722, 724, 727, 729, 731, 734, 742, 744, 746, 751, 757, 763, 765, 767, 769, 773, 778, 786, 789, 793, 801, 804, 805, 809, 810, 812, 815, 833, 835, 838, 840, 845, 862, 870, 871, 873, 877, 878, 879, 880, 889, 890, 894, 898, 900, 903, 907, 913, 915, 916, 934, 941, 945, 947, 949, 950, 963, 966, 968, 970, 973, 975, 983, 988, 993, 995, 997, 999, 1001, 1003, 1007, 1011, 1013, 1016, 1017, 1020, 1023, 1025, 1028, 1036, 1039, 1049, 1050, 1053, 1059, 1060, 1061, 1062, 1063, 1065, 1070, 1073, 1076, 1078, 1079, 1087, 1089, 1090, 1095, 1105, 1106, 1107, 1112, 1114, 1125, 1130], "topic": [13, 16, 27, 28, 29, 59, 62, 69, 78, 90, 97, 106, 113, 133, 137, 142, 146, 147, 160, 164, 177, 180, 181, 182, 184, 192, 197, 207, 210, 216, 226, 228, 229, 244, 245, 249, 267, 269, 273, 303, 304, 305, 306, 308, 316, 317, 322, 323, 328, 330, 331, 334, 335, 336, 520, 561, 563, 622, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 724, 773, 775, 785, 796, 803, 805, 807, 814, 819, 823, 825, 827, 828, 853, 863, 876, 878, 881, 882, 884, 900, 950, 959, 960, 964, 972, 977, 994, 995, 999, 1026, 1028, 1029, 1030, 1040, 1043, 1051, 1054, 1055, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1074, 1078, 1084, 1099, 1102, 1105, 1109, 1127, 1128, 1135], "other": [13, 27, 29, 33, 39, 40, 51, 53, 59, 62, 63, 78, 80, 82, 110, 111, 122, 128, 140, 141, 142, 143, 144, 147, 151, 155, 164, 168, 172, 176, 177, 179, 180, 181, 192, 200, 209, 215, 216, 225, 228, 232, 253, 274, 281, 282, 291, 294, 303, 320, 324, 328, 348, 354, 363, 372, 390, 393, 404, 420, 424, 427, 429, 435, 436, 439, 440, 441, 447, 528, 543, 545, 546, 552, 554, 555, 558, 559, 560, 570, 598, 620, 643, 652, 653, 684, 688, 700, 702, 704, 706, 717, 724, 726, 744, 763, 765, 799, 806, 809, 810, 826, 831, 833, 835, 855, 872, 877, 878, 879, 882, 886, 889, 898, 899, 905, 906, 918, 923, 926, 932, 941, 945, 947, 949, 959, 966, 968, 970, 979, 982, 983, 984, 987, 990, 993, 997, 999, 1000, 1001, 1002, 1008, 1009, 1013, 1015, 1017, 1019, 1020, 1033, 1049, 1076, 1080, 1083, 1085, 1087, 1105, 1117, 1125, 1127, 1128, 1130, 1140], "exampl": [13, 17, 24, 29, 39, 40, 65, 78, 87, 113, 114, 120, 133, 134, 136, 139, 140, 141, 142, 147, 150, 151, 155, 159, 160, 161, 164, 168, 172, 176, 178, 180, 191, 199, 201, 205, 209, 212, 215, 216, 218, 224, 225, 226, 229, 230, 231, 233, 237, 240, 249, 256, 258, 259, 262, 266, 268, 269, 273, 274, 282, 284, 287, 290, 291, 294, 305, 308, 317, 325, 328, 341, 347, 348, 349, 357, 363, 415, 427, 438, 439, 440, 447, 451, 453, 463, 464, 466, 468, 488, 489, 501, 520, 556, 558, 560, 569, 578, 585, 623, 632, 650, 659, 664, 679, 680, 684, 685, 689, 692, 696, 702, 706, 724, 726, 732, 744, 751, 773, 800, 801, 805, 810, 830, 833, 843, 855, 862, 870, 877, 878, 879, 880, 889, 893, 900, 903, 904, 905, 906, 907, 915, 922, 941, 944, 946, 947, 948, 949, 950, 951, 957, 963, 964, 965, 966, 969, 970, 971, 975, 982, 989, 992, 994, 995, 996, 998, 1006, 1011, 1020, 1026, 1028, 1044, 1049, 1067, 1068, 1069, 1077, 1078, 1084, 1086, 1092, 1093, 1099, 1104, 1112, 1114, 1127, 1128], "here": [13, 14, 63, 68, 73, 74, 77, 78, 80, 81, 85, 106, 126, 128, 137, 139, 140, 142, 143, 145, 146, 147, 150, 151, 155, 160, 162, 168, 169, 170, 172, 176, 178, 181, 191, 192, 196, 199, 200, 201, 202, 207, 210, 218, 219, 223, 226, 228, 232, 245, 247, 249, 253, 256, 258, 262, 265, 267, 274, 277, 292, 300, 303, 308, 314, 317, 320, 321, 323, 336, 339, 404, 406, 413, 420, 436, 442, 444, 464, 469, 480, 483, 486, 488, 499, 501, 503, 518, 520, 528, 542, 545, 546, 549, 555, 561, 563, 567, 579, 607, 613, 633, 635, 636, 642, 653, 659, 664, 670, 680, 684, 689, 692, 694, 700, 702, 705, 714, 727, 741, 746, 748, 751, 763, 769, 773, 799, 833, 870, 872, 877, 878, 879, 886, 890, 897, 903, 907, 913, 918, 931, 940, 944, 945, 956, 959, 963, 965, 968, 969, 970, 971, 983, 986, 990, 995, 998, 999, 1006, 1012, 1022, 1023, 1029, 1050, 1053, 1070, 1076, 1077, 1078, 1079, 1084, 1098, 1105, 1107, 1110, 1114, 1128, 1130], "discuss": [13, 42, 50, 113, 172, 176, 177, 179, 181, 216, 226, 262, 266, 267, 290, 317, 321, 324, 325, 328, 330, 331, 335, 437, 525, 528, 531, 534, 537, 540, 710, 716, 753, 786, 833, 940, 944, 973, 1112, 1114, 1117, 1128], "over": [13, 33, 34, 35, 38, 42, 61, 65, 89, 97, 115, 120, 133, 136, 137, 139, 140, 142, 144, 145, 150, 160, 164, 172, 176, 178, 179, 180, 191, 196, 199, 201, 202, 209, 214, 215, 216, 218, 221, 224, 252, 256, 259, 262, 268, 269, 285, 290, 294, 302, 317, 320, 363, 374, 375, 390, 404, 424, 434, 442, 452, 466, 543, 549, 577, 595, 607, 635, 642, 690, 691, 709, 720, 773, 870, 874, 878, 880, 886, 907, 921, 929, 932, 947, 959, 961, 966, 969, 1006, 1019, 1023], "lwn": [13, 39, 157, 753, 765, 783, 1120], "attribut": [13, 137, 140, 142, 157, 176, 190, 196, 200, 209, 212, 215, 220, 222, 227, 228, 232, 235, 238, 242, 243, 250, 253, 257, 260, 270, 274, 280, 292, 310, 312, 321, 328, 402, 418, 420, 432, 447, 714, 724, 805, 811, 832, 836, 903, 915, 916, 933, 934, 941, 945, 969, 970, 983, 985, 996, 1022, 1076, 1141], "sharealik": 13, "cc": [13, 23, 32, 122, 158, 166, 167, 168, 245, 427, 449, 498, 500, 501, 521, 524, 527, 528, 530, 531, 533, 534, 536, 537, 539, 562, 700, 701, 706, 751, 939, 940, 943, 944, 949, 1111, 1112, 1114, 1116, 1117], "BY": [13, 23, 35, 670], "sa": [13, 23, 32, 931], "don": [13, 24, 58, 61, 78, 84, 113, 128, 133, 139, 140, 141, 142, 145, 146, 147, 155, 170, 172, 176, 180, 191, 192, 202, 209, 213, 215, 216, 218, 225, 228, 280, 292, 325, 349, 390, 402, 405, 406, 408, 414, 420, 424, 426, 443, 500, 528, 534, 543, 544, 559, 560, 567, 577, 613, 620, 650, 653, 655, 670, 684, 685, 697, 706, 711, 716, 741, 746, 765, 773, 778, 808, 833, 835, 840, 846, 857, 870, 873, 877, 878, 882, 890, 894, 895, 896, 897, 916, 917, 918, 923, 944, 945, 950, 971, 979, 981, 995, 998, 1002, 1026, 1080, 1086, 1093, 1100, 1111, 1117], "t": [13, 24, 43, 50, 58, 61, 63, 65, 78, 84, 113, 128, 133, 137, 139, 141, 142, 145, 146, 147, 150, 151, 155, 157, 159, 170, 172, 173, 176, 179, 180, 183, 188, 190, 191, 192, 196, 202, 205, 209, 212, 213, 215, 216, 218, 220, 222, 225, 226, 228, 232, 235, 238, 241, 247, 250, 253, 258, 259, 260, 262, 264, 270, 274, 280, 292, 303, 309, 311, 312, 314, 325, 337, 339, 340, 342, 348, 349, 359, 374, 380, 382, 385, 390, 400, 402, 404, 405, 406, 408, 414, 420, 424, 426, 429, 443, 496, 498, 500, 520, 528, 534, 543, 544, 546, 553, 559, 560, 567, 569, 570, 577, 581, 613, 620, 642, 643, 645, 650, 652, 653, 655, 659, 660, 661, 662, 670, 673, 684, 685, 690, 696, 697, 700, 701, 702, 704, 706, 709, 711, 714, 716, 732, 741, 746, 753, 765, 767, 773, 778, 790, 793, 799, 800, 801, 808, 810, 833, 834, 835, 839, 840, 846, 852, 855, 857, 870, 873, 877, 878, 879, 882, 886, 890, 894, 895, 896, 897, 904, 916, 917, 918, 923, 933, 940, 941, 944, 945, 947, 948, 950, 959, 962, 965, 971, 972, 979, 981, 983, 991, 995, 998, 1001, 1002, 1003, 1009, 1015, 1019, 1021, 1022, 1023, 1026, 1028, 1075, 1080, 1084, 1086, 1093, 1100, 1111, 1112, 1117, 1127], "want": [13, 17, 27, 29, 30, 45, 50, 61, 63, 78, 84, 114, 119, 122, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 155, 160, 163, 168, 172, 176, 179, 180, 191, 192, 199, 202, 209, 216, 220, 222, 256, 258, 259, 262, 284, 303, 314, 328, 350, 362, 378, 406, 418, 420, 424, 428, 429, 444, 447, 468, 487, 496, 501, 520, 531, 544, 549, 552, 560, 585, 620, 636, 650, 655, 670, 691, 696, 702, 704, 705, 706, 724, 729, 748, 773, 778, 808, 810, 812, 815, 830, 833, 834, 852, 870, 873, 877, 878, 879, 890, 894, 895, 896, 897, 902, 916, 931, 933, 934, 935, 944, 947, 949, 959, 961, 963, 966, 967, 968, 969, 970, 971, 972, 974, 978, 985, 990, 994, 1001, 1010, 1013, 1023, 1027, 1029, 1065, 1070, 1080, 1084, 1085, 1087, 1089, 1093, 1105, 1107, 1108, 1112, 1125, 1130], "anybodi": [13, 65, 140, 145, 172, 191, 192, 407, 905, 916, 1117], "monei": [13, 141, 144, 147, 215, 812, 1028], "my": [13, 17, 24, 28, 32, 39, 59, 62, 63, 65, 97, 122, 128, 139, 140, 141, 143, 144, 146, 147, 150, 151, 155, 168, 172, 176, 179, 192, 199, 226, 240, 242, 256, 266, 314, 317, 322, 335, 414, 425, 447, 501, 537, 555, 566, 620, 702, 724, 757, 769, 773, 775, 801, 808, 823, 825, 830, 836, 857, 870, 877, 879, 881, 882, 889, 890, 895, 896, 897, 906, 941, 983, 1002, 1025, 1065, 1087, 1105, 1125], "without": [13, 139, 140, 141, 142, 150, 151, 176, 220, 284, 350, 374, 381, 407, 410, 414, 419, 424, 435, 447, 452, 464, 531, 537, 543, 549, 613, 620, 643, 670, 688, 708, 709, 716, 744, 757, 773, 812, 813, 855, 879, 881, 890, 916, 935, 940, 941, 945, 968, 969, 972, 973, 975, 982, 984, 986, 988, 990, 997, 1002, 1019, 1105, 1107, 1125, 1130], "modif": [13, 55, 106, 120, 155, 218, 350, 352, 358, 363, 394, 424, 447, 452, 499, 557, 717, 724, 746, 773, 818, 834, 855, 982, 1002, 1019, 1080, 1117], "back": [13, 29, 32, 63, 66, 141, 142, 145, 151, 176, 178, 180, 205, 213, 218, 229, 231, 249, 264, 284, 287, 400, 415, 466, 491, 520, 540, 560, 574, 579, 617, 650, 664, 699, 706, 726, 741, 746, 755, 773, 775, 804, 836, 870, 877, 890, 931, 941, 947, 966, 973, 986, 990, 1002, 1030, 1064, 1065, 1066, 1069, 1095], "m": [13, 23, 32, 38, 61, 124, 126, 141, 142, 143, 145, 147, 150, 155, 168, 173, 178, 183, 192, 196, 205, 206, 207, 209, 213, 228, 232, 238, 240, 245, 257, 292, 313, 317, 318, 319, 324, 338, 426, 449, 495, 498, 499, 500, 501, 537, 562, 670, 692, 701, 741, 742, 748, 751, 783, 810, 812, 833, 877, 890, 935, 988, 1025, 1026, 1033, 1058, 1059, 1076, 1086, 1100, 1105, 1107, 1112], "lawyer": 13, "understand": [13, 113, 139, 140, 142, 146, 147, 150, 151, 155, 164, 172, 176, 201, 228, 259, 262, 265, 267, 268, 269, 284, 287, 290, 294, 319, 328, 356, 404, 413, 420, 452, 488, 629, 650, 659, 680, 691, 773, 812, 818, 870, 990, 1028, 1071, 1076, 1077, 1094, 1125, 1126, 1127], "permit": [13, 142, 147, 192, 256, 314, 525, 546, 553, 877, 888, 932, 996, 1096], "exactli": [13, 78, 140, 142, 164, 170, 199, 269, 308, 342, 382, 488, 499, 577, 653, 690, 773, 879, 904, 905, 945, 963, 1079, 1099], "gnu": [13, 151, 156, 192, 201, 314, 320, 336, 421, 422, 427, 429, 552, 701, 726, 753, 774, 833, 948, 949, 959, 961, 963, 1123, 1127], "free": [13, 32, 146, 151, 167, 192, 314, 397, 411, 449, 526, 546, 552, 554, 614, 633, 634, 636, 637, 653, 680, 699, 700, 701, 737, 744, 775, 895, 896, 897, 909, 932, 945, 947, 1077, 1087, 1096, 1122], "document": [13, 24, 40, 42, 65, 78, 86, 113, 115, 137, 140, 142, 144, 151, 152, 158, 161, 168, 180, 192, 198, 199, 207, 209, 214, 215, 216, 218, 225, 228, 232, 245, 247, 249, 258, 265, 267, 270, 291, 293, 301, 303, 308, 317, 324, 325, 400, 401, 404, 411, 427, 428, 429, 430, 432, 435, 436, 437, 438, 439, 440, 452, 499, 518, 559, 563, 577, 578, 622, 633, 635, 645, 650, 657, 659, 664, 680, 681, 687, 689, 692, 694, 701, 702, 703, 705, 712, 713, 714, 716, 720, 724, 744, 746, 769, 773, 774, 781, 785, 799, 805, 812, 819, 823, 825, 827, 857, 858, 859, 861, 862, 864, 865, 873, 877, 878, 879, 913, 920, 928, 961, 963, 964, 968, 970, 971, 975, 979, 981, 983, 989, 1006, 1016, 1017, 1067, 1079, 1082, 1089, 1090, 1093, 1095, 1103, 1106, 1113, 1114, 1133, 1134], "ago": [13, 142, 146, 202, 798], "wa": [13, 37, 53, 65, 78, 117, 120, 136, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 155, 157, 159, 160, 161, 163, 167, 168, 173, 175, 176, 179, 183, 189, 190, 196, 199, 202, 205, 206, 216, 218, 220, 222, 229, 232, 241, 253, 260, 266, 269, 274, 292, 298, 317, 322, 335, 338, 385, 410, 430, 534, 542, 543, 552, 553, 598, 627, 634, 635, 636, 637, 638, 639, 646, 650, 653, 708, 724, 726, 748, 755, 763, 769, 808, 830, 860, 862, 870, 879, 906, 926, 945, 970, 1002, 1076, 1090, 1093, 1100, 1105, 1107, 1110, 1120, 1122, 1123, 1124, 1125, 1137, 1143], "debian": [13, 78, 128, 129, 130, 147, 151, 155, 157, 169, 180, 192, 277, 314, 335, 514, 726, 773, 872, 949, 961, 1107, 1112], "resolut": [13, 226, 230, 232, 407, 655, 717, 751, 783, 879], "us": [13, 14, 17, 21, 24, 39, 40, 45, 48, 54, 59, 61, 62, 63, 65, 68, 70, 71, 74, 77, 78, 81, 82, 84, 85, 86, 88, 89, 97, 106, 107, 113, 114, 115, 117, 118, 119, 120, 132, 133, 135, 136, 137, 139, 140, 142, 143, 146, 150, 152, 155, 157, 160, 164, 166, 167, 169, 172, 176, 178, 179, 191, 192, 197, 200, 207, 209, 210, 212, 213, 216, 217, 219, 223, 225, 226, 228, 232, 235, 237, 238, 240, 245, 247, 249, 253, 256, 258, 259, 260, 262, 264, 265, 266, 267, 268, 269, 270, 273, 274, 279, 282, 287, 290, 291, 294, 298, 302, 303, 308, 314, 317, 320, 322, 323, 326, 335, 346, 349, 350, 353, 354, 355, 358, 360, 369, 370, 372, 374, 375, 379, 380, 381, 384, 385, 386, 388, 392, 393, 396, 399, 403, 407, 408, 412, 414, 415, 416, 420, 421, 422, 424, 426, 427, 429, 434, 435, 436, 437, 440, 442, 443, 445, 446, 449, 452, 453, 454, 456, 463, 466, 467, 468, 486, 488, 489, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 514, 518, 519, 520, 521, 524, 527, 530, 533, 536, 539, 544, 546, 547, 551, 552, 555, 557, 559, 560, 561, 563, 564, 572, 573, 574, 575, 576, 578, 579, 580, 581, 582, 583, 586, 589, 590, 591, 595, 598, 599, 600, 601, 602, 603, 607, 613, 616, 617, 619, 620, 623, 624, 626, 627, 629, 631, 632, 633, 634, 635, 636, 637, 639, 641, 642, 644, 645, 646, 647, 649, 651, 653, 657, 659, 664, 670, 672, 679, 680, 682, 684, 685, 687, 689, 692, 697, 701, 702, 703, 704, 706, 708, 712, 714, 717, 720, 723, 724, 725, 726, 731, 732, 734, 736, 739, 741, 742, 744, 746, 748, 751, 753, 757, 759, 761, 765, 767, 769, 773, 774, 776, 778, 786, 787, 789, 792, 793, 799, 800, 801, 804, 808, 809, 812, 813, 815, 817, 819, 825, 830, 833, 835, 838, 839, 840, 842, 852, 858, 860, 864, 869, 870, 873, 874, 876, 880, 881, 882, 889, 890, 893, 899, 900, 903, 904, 905, 907, 911, 913, 914, 916, 918, 919, 920, 922, 923, 926, 928, 929, 932, 933, 936, 939, 940, 941, 943, 944, 945, 947, 950, 957, 958, 961, 962, 963, 964, 965, 969, 972, 973, 975, 976, 977, 978, 979, 982, 983, 988, 990, 992, 994, 995, 996, 998, 1002, 1004, 1006, 1010, 1011, 1012, 1013, 1016, 1019, 1021, 1023, 1026, 1028, 1031, 1032, 1033, 1036, 1037, 1038, 1042, 1044, 1047, 1048, 1049, 1050, 1054, 1056, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1070, 1071, 1073, 1074, 1076, 1077, 1078, 1079, 1080, 1083, 1084, 1087, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1105, 1108, 1111, 1112, 1114, 1116, 1117, 1125, 1127, 1128, 1130], "gfdl": 13, "becaus": [13, 17, 38, 61, 66, 80, 134, 139, 140, 142, 151, 155, 164, 172, 176, 178, 192, 202, 209, 215, 225, 228, 342, 363, 402, 411, 414, 417, 424, 426, 435, 444, 447, 464, 498, 501, 544, 545, 552, 555, 595, 617, 636, 692, 700, 703, 742, 753, 771, 773, 812, 852, 870, 877, 878, 879, 888, 899, 900, 903, 906, 920, 926, 941, 944, 945, 968, 971, 997, 1027, 1084, 1100, 1107, 1112, 1125], "too": [13, 27, 53, 56, 63, 80, 140, 142, 147, 156, 169, 172, 188, 199, 201, 218, 228, 232, 235, 244, 245, 247, 258, 260, 268, 269, 274, 290, 292, 298, 359, 404, 414, 424, 438, 444, 543, 557, 664, 666, 670, 682, 683, 684, 690, 696, 702, 724, 725, 726, 771, 773, 778, 805, 870, 879, 880, 886, 903, 916, 933, 949, 968, 969, 970, 973, 1019, 1023, 1101, 1125], "restrict": [13, 141, 170, 180, 402, 407, 436, 486, 567, 771, 800, 801, 889, 1084], "articl": [13, 155, 157, 753, 765, 783, 877, 879, 959], "describ": [13, 65, 107, 113, 137, 139, 140, 141, 142, 145, 147, 150, 151, 166, 192, 228, 232, 240, 266, 274, 277, 314, 447, 456, 502, 521, 524, 527, 530, 533, 536, 539, 692, 706, 773, 783, 806, 833, 879, 884, 936, 939, 943, 948, 956, 962, 963, 992, 1076, 1111, 1114, 1116], "pretti": [13, 141, 142, 164, 178, 182, 201, 218, 228, 414, 429, 577, 634, 709, 966, 1096], "same": [13, 17, 24, 28, 31, 39, 40, 43, 44, 65, 140, 141, 142, 144, 146, 147, 150, 151, 155, 160, 161, 162, 164, 172, 173, 178, 181, 192, 200, 204, 209, 215, 218, 225, 226, 228, 231, 232, 250, 259, 262, 268, 269, 274, 290, 291, 292, 304, 305, 314, 321, 346, 350, 361, 362, 363, 380, 381, 385, 390, 393, 402, 404, 408, 410, 414, 415, 418, 419, 429, 447, 451, 454, 455, 466, 485, 486, 494, 498, 518, 520, 527, 529, 543, 546, 552, 555, 558, 577, 580, 586, 595, 598, 599, 600, 624, 635, 643, 648, 655, 657, 659, 662, 664, 688, 689, 692, 704, 705, 706, 712, 741, 742, 746, 751, 753, 755, 763, 765, 771, 773, 789, 805, 811, 817, 833, 834, 836, 860, 870, 877, 878, 879, 880, 889, 890, 896, 902, 916, 917, 918, 931, 935, 941, 945, 947, 963, 969, 970, 973, 978, 979, 982, 984, 988, 990, 1006, 1008, 1011, 1016, 1018, 1019, 1020, 1053, 1061, 1063, 1077, 1079, 1080, 1083, 1084, 1087, 1089, 1092, 1093, 1094, 1105, 1107, 1112], "issu": [13, 140, 143, 150, 151, 202, 267, 268, 269, 290, 337, 350, 408, 909, 935, 944, 961, 979], "how": [13, 23, 24, 37, 42, 45, 50, 65, 70, 71, 75, 77, 78, 81, 82, 84, 85, 86, 87, 88, 91, 104, 113, 115, 126, 128, 136, 137, 140, 143, 145, 146, 147, 151, 152, 155, 160, 162, 164, 168, 169, 175, 176, 177, 178, 179, 180, 181, 192, 197, 199, 200, 201, 207, 209, 210, 212, 213, 215, 216, 218, 221, 223, 226, 237, 240, 244, 245, 249, 256, 259, 262, 264, 265, 266, 267, 268, 269, 273, 279, 282, 284, 290, 291, 294, 303, 319, 320, 324, 335, 350, 356, 381, 388, 390, 391, 402, 404, 406, 408, 413, 417, 424, 426, 428, 435, 449, 455, 485, 488, 496, 499, 520, 537, 544, 552, 553, 556, 567, 577, 616, 620, 626, 636, 642, 664, 701, 704, 705, 706, 716, 720, 721, 727, 734, 736, 737, 751, 763, 773, 778, 789, 800, 801, 806, 813, 833, 852, 860, 866, 870, 877, 878, 879, 887, 895, 896, 897, 900, 903, 906, 907, 913, 926, 929, 932, 933, 935, 940, 944, 945, 957, 959, 961, 963, 976, 977, 994, 995, 998, 1012, 1015, 1029, 1067, 1068, 1071, 1076, 1077, 1090, 1092, 1093, 1096, 1105, 1108, 1114, 1117, 1127, 1128, 1130], "do": [13, 27, 32, 40, 43, 45, 50, 58, 59, 62, 63, 78, 83, 85, 89, 91, 97, 113, 114, 119, 120, 123, 139, 140, 141, 142, 143, 144, 145, 146, 147, 151, 155, 156, 157, 159, 160, 161, 164, 168, 169, 172, 176, 177, 180, 190, 191, 192, 200, 202, 209, 212, 216, 218, 220, 222, 223, 226, 228, 231, 232, 238, 240, 242, 245, 247, 256, 259, 262, 291, 292, 303, 305, 312, 314, 317, 319, 353, 372, 374, 375, 377, 378, 379, 384, 385, 386, 392, 393, 396, 399, 402, 403, 410, 412, 416, 421, 422, 424, 426, 428, 444, 449, 452, 455, 463, 464, 485, 487, 499, 520, 528, 534, 537, 543, 545, 557, 561, 563, 564, 567, 604, 617, 620, 634, 635, 636, 644, 650, 655, 659, 681, 682, 688, 692, 694, 700, 701, 702, 704, 705, 706, 722, 723, 725, 726, 746, 750, 761, 765, 769, 771, 773, 798, 802, 803, 806, 810, 813, 817, 818, 827, 829, 834, 838, 840, 869, 870, 873, 877, 878, 879, 881, 882, 888, 890, 894, 895, 896, 897, 898, 899, 905, 916, 917, 919, 923, 929, 931, 932, 935, 937, 940, 945, 963, 964, 966, 968, 970, 971, 972, 975, 984, 994, 995, 996, 999, 1002, 1006, 1012, 1013, 1026, 1028, 1047, 1071, 1077, 1078, 1085, 1086, 1093, 1096, 1105, 1112, 1114, 1130], "choos": [13, 27, 139, 140, 151, 164, 172, 537, 773, 870, 877, 879, 962, 995, 1002, 1015, 1077, 1084, 1107], "altogeth": [13, 150, 199, 268, 269, 290, 653, 781, 973], "have": [13, 27, 28, 30, 37, 43, 50, 65, 69, 80, 82, 84, 102, 110, 111, 113, 114, 115, 117, 118, 120, 122, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 155, 160, 161, 162, 164, 168, 169, 170, 172, 176, 179, 180, 191, 192, 197, 199, 200, 201, 202, 209, 212, 213, 215, 216, 223, 228, 232, 235, 245, 247, 249, 256, 258, 259, 262, 265, 266, 268, 269, 273, 274, 294, 303, 308, 317, 320, 322, 349, 350, 354, 363, 382, 384, 404, 406, 409, 410, 414, 418, 420, 425, 427, 430, 434, 435, 439, 442, 443, 444, 448, 451, 452, 464, 485, 488, 498, 501, 510, 537, 543, 547, 551, 553, 555, 560, 561, 563, 564, 595, 601, 617, 624, 629, 635, 636, 637, 641, 642, 646, 654, 657, 659, 670, 679, 684, 688, 689, 691, 694, 697, 701, 702, 705, 706, 721, 737, 741, 742, 744, 746, 751, 753, 765, 773, 776, 781, 789, 798, 806, 810, 812, 815, 816, 818, 825, 840, 860, 870, 877, 878, 879, 880, 882, 886, 888, 890, 894, 895, 897, 902, 907, 909, 915, 923, 940, 944, 945, 948, 949, 957, 961, 962, 965, 966, 968, 971, 979, 983, 984, 988, 998, 1001, 1002, 1006, 1013, 1020, 1031, 1035, 1045, 1050, 1066, 1071, 1076, 1078, 1079, 1080, 1084, 1087, 1089, 1093, 1096, 1100, 1105, 1107, 1112, 1114, 1127, 1128], "idea": [13, 14, 139, 140, 200, 213, 222, 232, 265, 267, 268, 269, 284, 287, 294, 408, 632, 654, 692, 700, 773, 870, 905, 915, 935, 959, 970, 994, 1002, 1098, 1130], "choosealicens": 13, "appear": [13, 140, 141, 142, 143, 144, 145, 146, 147, 150, 160, 164, 168, 170, 172, 173, 192, 201, 228, 268, 269, 290, 339, 382, 385, 429, 430, 447, 518, 559, 702, 769, 773, 781, 797, 877, 878, 879, 890, 948, 970, 1042, 1043, 1053, 1062, 1088, 1093], "help": [13, 29, 139, 140, 142, 143, 151, 155, 173, 192, 196, 201, 209, 215, 220, 222, 225, 228, 232, 235, 238, 240, 253, 260, 265, 269, 274, 292, 308, 312, 317, 335, 385, 406, 408, 410, 411, 420, 429, 546, 549, 555, 642, 655, 690, 700, 702, 744, 812, 872, 877, 962, 994, 997, 1023, 1026, 1096, 1105, 1112, 1127], "happen": [13, 27, 110, 111, 114, 119, 139, 140, 142, 155, 172, 176, 180, 199, 218, 282, 322, 390, 402, 406, 410, 424, 429, 549, 566, 638, 670, 684, 687, 709, 736, 769, 773, 790, 805, 806, 810, 879, 903, 905, 915, 920, 944, 982, 983, 1022, 1036, 1039, 1053, 1070, 1076, 1105, 1114, 1127], "clone": [13, 61, 77, 109, 113, 122, 132, 142, 143, 146, 167, 169, 172, 189, 201, 202, 218, 245, 247, 277, 284, 287, 317, 322, 485, 488, 562, 746, 773, 774, 877, 961, 962], "jfasch": [13, 40, 43, 61, 106, 113, 120, 122, 136, 137, 143, 144, 145, 150, 151, 155, 159, 168, 169, 170, 173, 176, 189, 199, 209, 212, 215, 216, 218, 220, 225, 228, 235, 238, 240, 245, 247, 253, 256, 258, 259, 260, 265, 266, 267, 269, 270, 273, 274, 279, 283, 284, 287, 291, 295, 316, 317, 322, 325, 427, 429, 430, 432, 433, 435, 436, 438, 440, 449, 485, 499, 500, 501, 502, 520, 562, 622, 700, 701, 702, 746, 748, 773, 799, 800, 801, 804, 805, 808, 810, 815, 818, 829, 834, 835, 836, 852, 855, 857, 858, 862, 864, 866, 877, 880, 888, 889, 890, 895, 901, 903, 904, 905, 926, 931, 947, 948, 949, 950, 959, 961, 962, 963, 964, 965, 968, 970, 971, 974, 998, 1017, 1023, 1026, 1049, 1092, 1093, 1105, 1107], "home": [13, 32, 40, 42, 43, 50, 61, 65, 100, 122, 136, 137, 141, 143, 144, 145, 147, 151, 155, 168, 169, 170, 173, 192, 199, 209, 212, 213, 215, 220, 225, 228, 235, 238, 240, 245, 247, 253, 256, 258, 260, 270, 274, 325, 420, 427, 429, 430, 432, 433, 435, 436, 438, 440, 449, 499, 500, 501, 502, 562, 622, 655, 700, 701, 702, 726, 748, 773, 799, 800, 801, 803, 808, 810, 812, 813, 815, 818, 823, 825, 827, 829, 830, 833, 834, 836, 837, 838, 839, 840, 844, 847, 850, 853, 855, 857, 858, 864, 869, 880, 881, 886, 888, 889, 926, 928, 944, 947, 948, 949, 959, 961, 962, 963, 964, 965, 968, 971, 974, 1023, 1049, 1058, 1092, 1093, 1105, 1107], "built": [13, 28, 113, 139, 140, 142, 143, 146, 151, 168, 173, 175, 176, 184, 185, 197, 200, 209, 215, 220, 223, 225, 226, 228, 232, 240, 249, 253, 256, 258, 273, 282, 291, 352, 356, 380, 401, 427, 435, 438, 439, 463, 485, 598, 655, 711, 716, 742, 746, 748, 773, 877, 879, 890, 948, 949, 950, 955, 963, 968, 971, 975, 991, 1006, 1022, 1071, 1077, 1078, 1095, 1105, 1107, 1108, 1123, 1127, 1135], "wonder": [13, 741, 759, 786, 973], "gener": [13, 23, 24, 29, 39, 65, 68, 69, 78, 80, 81, 109, 110, 111, 133, 137, 140, 144, 147, 152, 159, 162, 172, 176, 177, 179, 180, 181, 182, 191, 199, 207, 208, 209, 213, 214, 216, 217, 218, 219, 221, 223, 224, 225, 229, 230, 231, 232, 237, 238, 252, 254, 258, 267, 272, 274, 278, 279, 281, 293, 320, 323, 340, 350, 352, 358, 363, 374, 384, 402, 408, 411, 413, 414, 417, 427, 428, 429, 433, 488, 490, 496, 499, 507, 542, 549, 553, 569, 577, 578, 581, 632, 650, 653, 680, 694, 700, 706, 714, 753, 755, 757, 776, 806, 817, 833, 870, 872, 877, 890, 915, 944, 945, 947, 950, 961, 962, 968, 969, 970, 972, 990, 996, 998, 999, 1000, 1006, 1010, 1027, 1028, 1029, 1030, 1043, 1069, 1071, 1078, 1080, 1081, 1083, 1084, 1093, 1100, 1105, 1128, 1129, 1136], "content": [13, 27, 39, 49, 50, 57, 63, 172, 179, 180, 181, 192, 200, 218, 220, 228, 250, 256, 309, 384, 387, 389, 502, 545, 595, 603, 691, 775, 778, 799, 800, 801, 815, 818, 820, 821, 855, 858, 866, 878, 882, 905, 947, 1002, 1021, 1027, 1040, 1070, 1090, 1107, 1140], "which": [13, 14, 17, 28, 57, 68, 78, 80, 83, 89, 110, 111, 114, 119, 125, 132, 133, 136, 137, 139, 140, 141, 142, 143, 145, 146, 147, 151, 155, 160, 162, 168, 169, 170, 172, 176, 178, 180, 192, 199, 201, 209, 213, 215, 216, 228, 231, 232, 240, 241, 258, 259, 262, 264, 269, 274, 287, 291, 298, 335, 353, 358, 359, 365, 369, 390, 402, 414, 424, 425, 426, 427, 429, 432, 434, 435, 442, 444, 455, 485, 486, 487, 488, 491, 493, 494, 495, 496, 497, 499, 514, 525, 531, 544, 551, 553, 557, 559, 567, 614, 624, 628, 629, 635, 636, 638, 647, 653, 654, 692, 696, 697, 705, 706, 722, 724, 726, 742, 751, 773, 775, 793, 799, 806, 810, 812, 815, 816, 817, 818, 824, 826, 829, 833, 846, 857, 860, 869, 870, 873, 877, 878, 879, 890, 899, 900, 903, 905, 907, 908, 910, 915, 920, 927, 929, 931, 932, 940, 945, 948, 953, 961, 965, 968, 970, 972, 982, 983, 987, 995, 999, 1002, 1011, 1042, 1061, 1063, 1066, 1068, 1084, 1086, 1087, 1089, 1092, 1107, 1112, 1125], "differ": [13, 35, 38, 59, 62, 69, 76, 81, 85, 88, 127, 139, 140, 145, 147, 151, 161, 168, 172, 176, 188, 212, 213, 256, 258, 264, 265, 267, 274, 292, 298, 303, 338, 350, 358, 363, 364, 380, 381, 384, 402, 408, 410, 414, 424, 426, 443, 444, 488, 499, 501, 520, 527, 528, 537, 546, 547, 551, 557, 559, 560, 569, 573, 578, 617, 620, 624, 646, 659, 662, 689, 704, 717, 724, 746, 751, 765, 771, 773, 793, 798, 804, 808, 809, 811, 830, 855, 870, 873, 877, 879, 886, 897, 905, 907, 920, 929, 931, 932, 952, 957, 962, 964, 965, 970, 983, 990, 998, 1011, 1015, 1020, 1021, 1022, 1080, 1089, 1107, 1108, 1128, 1130], "so": [13, 17, 23, 32, 37, 39, 49, 55, 66, 114, 127, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155, 159, 160, 161, 162, 163, 164, 168, 169, 170, 172, 173, 184, 185, 190, 198, 200, 201, 202, 211, 212, 213, 242, 256, 264, 266, 270, 282, 294, 303, 312, 317, 320, 335, 349, 353, 354, 362, 364, 380, 390, 391, 393, 402, 406, 408, 410, 411, 415, 425, 427, 430, 432, 437, 438, 442, 464, 466, 485, 501, 514, 553, 560, 564, 577, 600, 607, 616, 623, 632, 681, 691, 696, 699, 700, 702, 717, 732, 734, 737, 742, 746, 748, 751, 773, 786, 798, 812, 813, 815, 817, 823, 825, 827, 833, 837, 844, 870, 876, 877, 878, 879, 882, 884, 886, 894, 897, 900, 905, 907, 915, 933, 935, 944, 947, 948, 949, 950, 961, 963, 964, 973, 974, 978, 990, 995, 997, 1002, 1019, 1021, 1023, 1025, 1035, 1039, 1045, 1049, 1076, 1079, 1087, 1094, 1097, 1105, 1107, 1111, 1112, 1114, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1127, 1129, 1135, 1138, 1143], "ye": [13, 32, 50, 61, 142, 143, 146, 151, 192, 314, 600, 709, 800, 801, 818, 820, 821, 879, 890, 947, 1015, 1048], "realli": [13, 21, 43, 50, 53, 55, 56, 65, 120, 141, 142, 143, 145, 147, 161, 172, 176, 179, 443, 659, 696, 706, 726, 765, 878, 879, 890, 913, 1071, 1078, 1084], "great": [13, 78, 145, 147, 202, 222, 232, 424, 543, 558, 714, 773, 878, 1125, 1130], "static": [13, 23, 65, 97, 103, 104, 110, 111, 113, 140, 142, 144, 146, 147, 157, 167, 201, 202, 209, 215, 218, 225, 228, 232, 256, 265, 267, 274, 317, 323, 386, 392, 396, 399, 401, 403, 410, 412, 414, 416, 421, 422, 427, 432, 433, 437, 439, 448, 462, 470, 482, 483, 484, 485, 486, 490, 491, 492, 493, 494, 495, 496, 497, 500, 507, 509, 528, 537, 542, 546, 549, 560, 565, 568, 571, 587, 591, 593, 597, 606, 609, 610, 627, 634, 635, 636, 637, 638, 639, 644, 653, 682, 684, 686, 687, 691, 702, 705, 711, 716, 723, 725, 726, 732, 751, 769, 773, 775, 869, 915, 918, 920, 922, 931, 937, 944, 948, 949, 950, 952, 953, 954, 955, 957, 1082, 1117, 1120, 1122, 1123, 1124], "It": [13, 21, 39, 43, 45, 55, 59, 62, 78, 117, 119, 128, 139, 140, 141, 142, 145, 146, 147, 150, 151, 160, 162, 164, 168, 169, 173, 178, 179, 192, 201, 202, 209, 215, 218, 225, 228, 232, 240, 245, 247, 256, 259, 262, 265, 291, 330, 331, 347, 358, 362, 380, 385, 408, 410, 424, 442, 447, 452, 455, 464, 466, 488, 491, 492, 499, 500, 546, 626, 638, 655, 656, 692, 702, 726, 737, 773, 800, 801, 812, 815, 830, 869, 870, 878, 879, 900, 905, 907, 908, 910, 923, 927, 932, 948, 949, 959, 964, 969, 971, 982, 990, 994, 995, 1028, 1044, 1049, 1053, 1056, 1062, 1077, 1083, 1095, 1105, 1106, 1125, 1127, 1128, 1130], "let": [13, 17, 42, 59, 62, 63, 114, 140, 141, 142, 145, 146, 147, 150, 155, 162, 163, 164, 169, 170, 202, 216, 220, 222, 228, 232, 259, 262, 264, 266, 269, 284, 287, 406, 414, 424, 426, 428, 435, 438, 442, 444, 446, 451, 464, 470, 487, 498, 499, 501, 504, 520, 534, 544, 545, 557, 561, 563, 564, 614, 620, 626, 632, 642, 659, 687, 691, 696, 700, 742, 746, 765, 773, 781, 808, 817, 830, 835, 870, 877, 878, 890, 903, 905, 906, 920, 929, 931, 947, 949, 959, 962, 963, 969, 971, 975, 1012, 1019, 1021, 1028, 1036, 1058, 1066, 1071, 1078, 1079, 1084, 1087, 1105, 1125], "me": [13, 23, 32, 37, 59, 62, 113, 134, 139, 140, 141, 142, 145, 146, 147, 150, 151, 155, 168, 169, 170, 172, 176, 199, 201, 202, 226, 277, 317, 406, 408, 409, 424, 427, 531, 555, 620, 655, 696, 702, 746, 808, 835, 870, 878, 879, 890, 894, 947, 950, 959, 975, 978, 1019, 1071, 1075, 1106], "focu": [13, 143, 147, 150, 164, 172, 176, 259, 262, 413, 417, 449, 641, 670, 870, 878, 880, 995, 1078, 1099, 1128], "myself": [13, 136, 137, 147, 168, 176, 191, 207, 746, 808, 830, 835, 852], "ey": [13, 32, 37, 225, 228, 238, 260, 1006], "toward": [13, 172, 323, 406, 466, 595], "consist": [13, 27, 172, 187, 228, 294, 308, 325, 339, 342, 380, 382, 420, 491, 499, 544, 833, 907, 941, 995, 996, 999, 1040, 1049, 1073, 1094], "won": [13, 150, 151, 228, 258, 303, 337, 404, 429, 498, 500, 546, 696, 702, 741, 753, 878, 890, 897, 950, 972, 1021], "break": [13, 36, 38, 133, 163, 172, 173, 178, 185, 191, 192, 200, 212, 215, 221, 222, 225, 228, 231, 232, 235, 238, 253, 260, 274, 309, 374, 378, 379, 386, 392, 396, 399, 403, 406, 410, 412, 414, 416, 421, 422, 424, 585, 616, 626, 628, 635, 644, 670, 678, 682, 703, 716, 723, 725, 726, 763, 895, 896, 905, 931, 937, 944, 975, 983, 1021, 1084], "move": [13, 54, 63, 99, 113, 124, 128, 137, 141, 151, 169, 177, 180, 191, 202, 218, 243, 246, 255, 256, 267, 276, 277, 301, 302, 317, 320, 424, 425, 438, 482, 491, 520, 545, 546, 553, 554, 555, 556, 558, 604, 650, 670, 682, 694, 698, 701, 703, 704, 707, 714, 715, 716, 722, 723, 725, 726, 742, 775, 797, 800, 801, 802, 803, 836, 837, 838, 839, 842, 843, 844, 845, 847, 853, 869, 870, 894, 895, 932, 965, 1002, 1101, 1124, 1125, 1126, 1133, 1134], "around": [13, 24, 37, 59, 62, 98, 113, 115, 140, 141, 142, 147, 151, 161, 172, 176, 200, 226, 237, 244, 245, 247, 267, 298, 363, 438, 452, 454, 463, 488, 544, 640, 643, 645, 695, 697, 725, 726, 773, 778, 905, 920, 941, 944, 965, 971, 987, 991, 993, 1015, 1067, 1071, 1073, 1077, 1078, 1089, 1090, 1093], "last": [13, 59, 62, 113, 136, 140, 141, 142, 157, 162, 172, 173, 179, 191, 192, 199, 207, 209, 212, 215, 216, 225, 228, 238, 253, 258, 260, 274, 308, 314, 321, 323, 390, 408, 572, 574, 575, 576, 577, 581, 584, 673, 676, 677, 678, 724, 726, 773, 833, 836, 839, 855, 864, 866, 869, 897, 902, 910, 919, 924, 926, 931, 946, 957, 968, 969, 970, 971, 975, 979, 983, 984, 990, 991, 996, 1004, 1012, 1013, 1017, 1019, 1022, 1023, 1033, 1060, 1066, 1068, 1079, 1084, 1092, 1093, 1106, 1113, 1143], "least": [13, 24, 37, 59, 62, 65, 81, 142, 150, 164, 168, 170, 172, 179, 180, 199, 201, 202, 216, 218, 228, 232, 258, 262, 264, 274, 276, 338, 356, 362, 363, 376, 402, 405, 406, 414, 430, 442, 514, 599, 642, 692, 694, 701, 706, 709, 736, 769, 771, 805, 870, 872, 880, 918, 941, 945, 966, 975, 979, 995, 996, 1006, 1029, 1077, 1113], "ha": [13, 21, 24, 27, 28, 43, 45, 53, 56, 63, 78, 110, 111, 114, 117, 119, 127, 137, 139, 140, 141, 142, 143, 144, 145, 147, 150, 151, 155, 160, 162, 164, 168, 169, 172, 176, 178, 179, 180, 190, 192, 196, 197, 199, 200, 202, 209, 212, 215, 218, 220, 222, 223, 225, 228, 232, 235, 238, 241, 249, 250, 253, 256, 257, 258, 259, 260, 262, 264, 265, 267, 270, 273, 274, 280, 282, 291, 292, 301, 303, 310, 312, 314, 323, 337, 346, 349, 359, 362, 363, 372, 375, 383, 384, 391, 397, 398, 401, 405, 407, 408, 414, 420, 424, 426, 429, 435, 437, 438, 439, 440, 442, 443, 444, 447, 452, 453, 456, 464, 469, 483, 485, 495, 518, 528, 543, 545, 546, 547, 548, 551, 552, 553, 556, 557, 560, 567, 577, 598, 599, 616, 617, 620, 629, 630, 635, 636, 638, 647, 649, 652, 655, 664, 665, 666, 670, 679, 680, 681, 684, 692, 700, 702, 705, 706, 708, 714, 724, 726, 727, 737, 742, 767, 769, 771, 773, 783, 786, 787, 789, 793, 800, 804, 805, 806, 808, 810, 811, 812, 818, 829, 831, 836, 862, 870, 876, 877, 878, 879, 888, 890, 893, 899, 905, 915, 917, 918, 920, 928, 929, 931, 932, 933, 934, 941, 945, 947, 961, 963, 964, 966, 968, 969, 970, 973, 975, 978, 983, 984, 985, 993, 995, 998, 1001, 1002, 1006, 1011, 1012, 1016, 1033, 1053, 1068, 1070, 1071, 1077, 1078, 1079, 1080, 1084, 1092, 1093, 1095, 1097, 1105, 1107, 1112, 1114, 1125, 1127, 1128, 1130, 1133, 1134], "extens": [13, 14, 23, 28, 32, 37, 40, 135, 150, 172, 199, 201, 209, 215, 225, 228, 303, 384, 424, 452, 543, 681, 724, 727, 798, 810, 947, 978, 995, 998, 1100, 1105], "interfac": [13, 53, 56, 72, 73, 74, 78, 80, 82, 85, 106, 114, 115, 116, 117, 119, 120, 136, 137, 140, 157, 159, 160, 167, 176, 202, 216, 218, 226, 230, 248, 249, 256, 265, 283, 298, 306, 307, 317, 318, 319, 323, 326, 335, 336, 424, 430, 431, 436, 441, 442, 443, 444, 447, 448, 454, 462, 466, 468, 469, 490, 494, 496, 520, 542, 567, 615, 617, 639, 681, 688, 689, 705, 706, 726, 869, 870, 875, 877, 879, 913, 947, 969, 1083, 1124, 1129, 1130, 1136, 1139, 1142], "lot": [13, 65, 69, 92, 97, 137, 139, 140, 142, 147, 151, 169, 172, 176, 192, 269, 320, 356, 405, 410, 414, 420, 434, 537, 614, 726, 757, 767, 773, 802, 803, 812, 833, 869, 878, 895, 947, 962, 990, 995, 1017, 1073, 1126], "littl": [13, 27, 44, 142, 144, 147, 150, 151, 160, 172, 200, 209, 215, 216, 218, 225, 228, 250, 256, 267, 335, 385, 413, 414, 425, 554, 557, 560, 616, 622, 702, 705, 729, 870, 872, 878, 926, 948, 1018, 1087], "maintain": [13, 28, 30, 54, 70, 80, 137, 139, 140, 147, 169, 178, 199, 201, 209, 213, 215, 225, 228, 237, 317, 331, 410, 424, 592, 642, 653, 751, 773, 781, 783, 785, 916, 947, 948, 949, 951, 957, 962, 963, 964, 965, 1013, 1076, 1127], "packag": [13, 21, 23, 29, 32, 61, 97, 104, 113, 123, 129, 130, 136, 141, 155, 170, 172, 173, 176, 177, 179, 186, 191, 197, 199, 200, 201, 207, 209, 213, 215, 216, 219, 223, 225, 226, 228, 229, 231, 234, 237, 240, 258, 268, 269, 273, 277, 282, 287, 291, 294, 317, 318, 319, 320, 324, 335, 336, 427, 429, 432, 433, 726, 746, 869, 877, 878, 949, 954, 957, 972, 995, 1002, 1024, 1025, 1027, 1028, 1029, 1030, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1077, 1081, 1085, 1086, 1087, 1092, 1093, 1104, 1105, 1106, 1108, 1109, 1114, 1127], "virtual": [13, 29, 69, 80, 106, 107, 120, 136, 142, 145, 147, 167, 172, 176, 187, 191, 207, 223, 226, 229, 240, 245, 247, 249, 256, 265, 266, 267, 268, 269, 273, 284, 287, 290, 291, 294, 324, 335, 336, 439, 443, 445, 448, 449, 454, 456, 462, 466, 471, 473, 474, 475, 478, 479, 480, 481, 482, 483, 490, 500, 540, 542, 567, 614, 615, 616, 639, 681, 689, 700, 702, 706, 726, 732, 804, 809, 812, 871, 877, 879, 888, 897, 913, 931, 941, 995, 998, 1024, 1025, 1026, 1069, 1071, 1072, 1073, 1077, 1085, 1087, 1099, 1102, 1105, 1124, 1131, 1140], "environ": [13, 21, 29, 65, 75, 78, 97, 104, 113, 128, 136, 140, 151, 155, 176, 182, 191, 192, 197, 207, 210, 213, 223, 226, 229, 240, 246, 249, 255, 268, 269, 273, 276, 277, 284, 287, 290, 291, 294, 318, 319, 330, 331, 449, 469, 483, 498, 499, 500, 501, 562, 700, 701, 726, 803, 807, 811, 812, 833, 834, 853, 869, 870, 910, 927, 932, 948, 957, 958, 959, 964, 966, 978, 998, 1000, 1024, 1025, 1026, 1069, 1071, 1072, 1073, 1077, 1078, 1085, 1087, 1099, 1100, 1102, 1105, 1106, 1112, 1116, 1118], "repo": [13, 120, 122, 151, 155, 167, 170, 181, 303, 308, 317, 321, 322, 510, 511, 512, 513, 515, 516, 517, 746, 773, 775, 961, 1114], "creat": [13, 17, 21, 24, 39, 42, 44, 54, 59, 61, 62, 63, 77, 99, 101, 102, 109, 113, 120, 123, 126, 133, 136, 140, 141, 142, 144, 147, 150, 151, 155, 157, 159, 160, 161, 176, 177, 178, 179, 180, 181, 192, 197, 205, 210, 215, 216, 218, 223, 225, 228, 232, 237, 240, 245, 246, 247, 255, 256, 264, 267, 268, 269, 273, 274, 276, 277, 279, 284, 287, 291, 294, 317, 322, 341, 418, 420, 426, 427, 440, 442, 444, 447, 448, 449, 462, 463, 464, 468, 470, 471, 485, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 542, 544, 547, 558, 598, 600, 616, 631, 634, 636, 645, 647, 670, 684, 687, 696, 702, 703, 715, 716, 721, 722, 724, 725, 726, 729, 732, 736, 737, 742, 744, 746, 748, 751, 757, 769, 773, 802, 803, 804, 805, 806, 807, 813, 815, 816, 820, 821, 822, 824, 826, 828, 831, 837, 838, 840, 842, 843, 844, 845, 847, 853, 869, 877, 878, 879, 881, 882, 883, 885, 886, 888, 890, 892, 898, 899, 900, 907, 908, 909, 910, 915, 916, 917, 923, 924, 927, 930, 931, 932, 939, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 962, 963, 968, 969, 971, 973, 975, 979, 983, 984, 985, 987, 1001, 1002, 1011, 1012, 1013, 1022, 1025, 1026, 1027, 1039, 1047, 1048, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1071, 1073, 1074, 1075, 1077, 1080, 1083, 1087, 1096, 1105, 1107, 1108, 1127], "popul": [13, 142, 146, 232, 265, 729], "yourself": [13, 140, 147, 151, 162, 218, 369, 545, 562, 567, 778, 835, 918, 941, 994, 1130], "root": [13, 38, 63, 80, 113, 122, 139, 145, 147, 150, 151, 162, 167, 168, 169, 176, 180, 190, 212, 218, 228, 232, 235, 238, 253, 256, 260, 270, 274, 302, 303, 308, 337, 404, 413, 417, 420, 429, 437, 443, 501, 563, 619, 724, 737, 773, 774, 775, 804, 808, 810, 829, 833, 845, 846, 852, 855, 857, 858, 859, 861, 862, 864, 870, 877, 878, 879, 881, 882, 886, 895, 900, 905, 913, 933, 947, 950, 959, 961, 970, 1049, 1058, 1059, 1096, 1105], "activ": [13, 145, 155, 157, 180, 240, 642, 753, 755, 759, 767, 808, 810, 865, 1025, 1105, 1107], "txt": [13, 33, 42, 44, 113, 135, 142, 158, 159, 163, 166, 167, 168, 169, 170, 199, 201, 206, 209, 218, 219, 228, 240, 250, 284, 287, 308, 309, 349, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 485, 498, 499, 500, 501, 502, 521, 524, 527, 528, 530, 533, 536, 539, 633, 724, 744, 799, 800, 801, 813, 817, 827, 837, 838, 839, 840, 844, 845, 852, 873, 877, 878, 879, 913, 936, 939, 943, 948, 949, 959, 970, 1017, 1040, 1058, 1107, 1108, 1111, 1114, 1116], "fedorish": [13, 746, 890, 1087], "your": [13, 43, 65, 102, 109, 113, 119, 139, 140, 142, 143, 144, 145, 146, 147, 150, 151, 155, 156, 169, 172, 175, 176, 180, 192, 200, 201, 218, 226, 232, 245, 247, 249, 256, 259, 262, 298, 303, 314, 323, 325, 369, 404, 412, 414, 416, 421, 422, 424, 433, 443, 447, 468, 485, 488, 499, 501, 502, 559, 633, 634, 636, 637, 644, 650, 658, 682, 723, 725, 726, 748, 765, 773, 778, 799, 800, 801, 803, 810, 812, 813, 822, 823, 824, 825, 826, 827, 828, 834, 837, 838, 839, 840, 842, 851, 869, 870, 877, 879, 881, 882, 886, 890, 905, 907, 959, 962, 973, 984, 990, 995, 999, 1040, 1054, 1058, 1059, 1071, 1076, 1087, 1097, 1100, 1105, 1106, 1107, 1114, 1130], "mileag": [13, 245, 247, 1087, 1105], "might": [13, 27, 59, 61, 62, 119, 139, 140, 141, 143, 145, 147, 150, 151, 155, 168, 170, 172, 180, 201, 209, 215, 220, 225, 228, 259, 262, 265, 291, 303, 328, 400, 414, 424, 429, 438, 439, 444, 447, 468, 501, 551, 560, 679, 689, 702, 703, 704, 724, 748, 759, 763, 769, 773, 815, 870, 877, 878, 879, 890, 895, 904, 926, 933, 944, 959, 962, 970, 979, 982, 995, 1073, 1087, 1105, 1108, 1112], "vari": [13, 209, 215, 225, 228, 232, 245, 247, 268, 269, 290, 294, 340, 414, 598, 717, 773, 879, 964, 1083, 1087, 1105, 1125], "dnf": [13, 61, 136, 143, 151, 155, 169, 337, 430, 437, 514, 746, 774, 872, 890, 949, 961, 1087, 1112, 1114], "pandoc": 13, "graphviz": [13, 433, 949], "dia": [13, 212, 270, 855, 1028], "gtest": [13, 44, 65, 113, 167, 168, 169, 170, 337, 442, 443, 444, 446, 447, 449, 451, 464, 466, 467, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 508, 510, 511, 512, 513, 515, 516, 517, 518, 519, 537, 544, 545, 546, 557, 558, 560, 561, 562, 563, 564, 622, 647, 649, 652, 653, 654, 685, 691, 696, 700, 701, 702, 703, 705, 720, 721, 722, 724, 726, 1110], "devel": [13, 136, 151, 169, 430, 432, 437, 746, 1112, 1114], "markdown": [13, 23, 312, 1026], "handl": [13, 21, 29, 46, 74, 134, 140, 160, 172, 176, 177, 179, 181, 187, 200, 202, 207, 209, 213, 216, 217, 225, 230, 237, 249, 256, 266, 273, 274, 284, 287, 317, 322, 324, 330, 331, 338, 378, 385, 390, 406, 410, 430, 490, 520, 542, 557, 567, 600, 604, 626, 635, 636, 637, 670, 672, 699, 702, 714, 715, 725, 726, 732, 736, 755, 767, 803, 806, 807, 869, 877, 892, 894, 895, 896, 897, 898, 899, 900, 902, 905, 907, 908, 910, 918, 924, 927, 930, 932, 935, 941, 944, 972, 990, 995, 996, 1011, 1021, 1069, 1071, 1098, 1124, 1130, 1139], "jupyt": [13, 155, 160, 161, 163, 172, 173, 175, 183, 223, 225, 226, 228, 229, 258, 259, 262, 263, 269, 273, 279, 284, 287, 291, 295, 317, 322, 855, 995, 1073, 1074, 1078, 1135], "notebook": [13, 32, 155, 159, 160, 161, 163, 172, 175, 183, 216, 223, 226, 228, 229, 231, 234, 237, 240, 249, 252, 258, 259, 262, 263, 269, 273, 279, 284, 287, 291, 295, 302, 322, 995, 1073, 1078, 1135], "those": [13, 24, 78, 133, 140, 141, 147, 150, 155, 170, 172, 176, 181, 199, 201, 202, 209, 213, 218, 219, 220, 222, 228, 232, 264, 265, 266, 267, 269, 284, 302, 314, 317, 323, 328, 349, 404, 414, 424, 426, 428, 429, 430, 443, 444, 447, 448, 514, 557, 579, 620, 623, 630, 645, 680, 696, 704, 706, 724, 739, 742, 773, 800, 801, 817, 818, 870, 877, 878, 879, 944, 963, 964, 965, 966, 970, 971, 972, 978, 983, 994, 1035, 1045, 1066, 1076, 1084, 1085, 1090, 1092, 1105, 1127, 1128, 1130], "funki": [13, 17, 142], "graph": [13, 29, 78, 87, 210, 223, 237, 240, 273, 279, 317, 324, 419, 433, 439, 949, 963, 964, 1071, 1077], "histor": [13, 24, 78, 142, 164, 350, 363, 408, 641, 732, 811, 890, 945, 1062, 1117], "baggag": [13, 350, 363, 641, 945, 1062], "convert": [13, 17, 29, 42, 133, 161, 191, 199, 205, 209, 212, 215, 218, 222, 225, 228, 229, 232, 249, 274, 284, 287, 302, 363, 385, 410, 420, 428, 433, 443, 498, 613, 620, 654, 655, 726, 727, 907, 947, 986, 1028, 1030, 1035, 1042, 1045, 1064, 1065, 1066, 1069, 1084], "draw": [13, 137, 180, 291, 325, 360, 496, 694, 730, 734, 742, 763, 786], "svg": [13, 137], "ani": [13, 39, 45, 49, 120, 124, 133, 136, 139, 140, 141, 142, 145, 147, 151, 155, 160, 164, 175, 178, 180, 192, 199, 201, 209, 215, 225, 228, 232, 243, 244, 245, 253, 269, 274, 291, 298, 303, 324, 325, 358, 402, 410, 424, 447, 452, 494, 495, 496, 497, 501, 502, 514, 531, 549, 552, 578, 616, 624, 629, 642, 645, 647, 664, 670, 688, 689, 692, 701, 702, 703, 705, 706, 714, 724, 731, 732, 744, 746, 765, 773, 783, 790, 800, 801, 810, 813, 820, 821, 824, 825, 826, 833, 845, 855, 870, 877, 878, 879, 882, 905, 916, 920, 940, 966, 968, 969, 970, 971, 975, 982, 983, 990, 993, 1002, 1007, 1009, 1020, 1021, 1026, 1050, 1052, 1067, 1078, 1094, 1099, 1100, 1112, 1125, 1130], "That": [13, 84, 98, 99, 113, 114, 115, 139, 140, 141, 142, 145, 150, 151, 155, 164, 172, 176, 179, 218, 242, 246, 248, 262, 265, 267, 328, 392, 393, 396, 399, 403, 412, 416, 421, 422, 430, 443, 444, 454, 466, 468, 470, 486, 488, 501, 548, 552, 634, 644, 682, 708, 714, 715, 723, 725, 726, 800, 801, 803, 804, 806, 807, 809, 810, 819, 822, 823, 824, 825, 826, 827, 828, 833, 869, 870, 878, 881, 882, 883, 884, 885, 888, 906, 910, 924, 930, 932, 957, 958, 969, 995, 1002, 1061, 1063, 1068, 1097, 1105, 1115, 1125], "sloppili": [13, 903], "track": [13, 143, 147, 155, 179, 199, 209, 215, 225, 228, 701, 746, 773, 774, 778, 810, 982], "opentrain": [13, 22, 28, 124, 137, 177, 184, 202, 325, 336, 1105, 1135], "recip": [13, 39, 132, 136, 140, 141, 318, 319, 404, 569], "sphinx": [14, 17, 23, 39, 65, 136, 137, 152, 323, 727, 1105], "togeth": [14, 24, 43, 50, 104, 106, 110, 111, 115, 130, 147, 150, 151, 155, 160, 170, 172, 176, 180, 192, 201, 218, 245, 247, 264, 265, 267, 282, 291, 294, 325, 335, 381, 414, 415, 491, 501, 520, 542, 560, 561, 563, 564, 714, 716, 737, 750, 773, 800, 801, 859, 860, 878, 879, 909, 923, 947, 953, 957, 959, 962, 966, 1044, 1077, 1097, 1100, 1108, 1110, 1112, 1125, 1127], "form": [14, 29, 142, 147, 160, 164, 188, 209, 215, 216, 225, 228, 265, 267, 336, 401, 417, 456, 464, 466, 505, 506, 518, 616, 727, 773, 778, 781, 805, 855, 879, 1006, 1025, 1028, 1061, 1063, 1066, 1067, 1073, 1079, 1100, 1105, 1125], "short": [14, 32, 35, 43, 106, 120, 140, 147, 155, 168, 172, 176, 179, 180, 181, 191, 192, 209, 213, 214, 215, 220, 223, 225, 226, 230, 248, 264, 265, 266, 267, 268, 269, 340, 356, 358, 363, 367, 368, 393, 402, 448, 462, 490, 502, 542, 547, 551, 726, 769, 775, 778, 812, 833, 858, 877, 879, 890, 897, 907, 929, 934, 967, 981, 1004, 1007, 1023, 1095, 1105, 1107, 1125], "video": [14, 22, 134, 143, 145, 147, 158, 172, 175, 176, 179, 184, 197, 200, 201, 223, 267, 270, 273, 425, 692, 870, 878, 1071, 1078, 1087], "explain": [14, 63, 65, 97, 134, 139, 145, 151, 164, 172, 176, 178, 202, 213, 218, 220, 222, 223, 231, 232, 269, 302, 332, 335, 404, 414, 534, 813, 833, 836, 870, 879, 935, 1018, 1071, 1105, 1130], "case": [14, 24, 43, 97, 104, 106, 109, 139, 140, 141, 144, 147, 150, 151, 155, 161, 164, 176, 178, 180, 182, 202, 215, 216, 222, 228, 232, 235, 244, 245, 247, 248, 256, 259, 262, 274, 291, 294, 298, 325, 347, 354, 373, 375, 406, 408, 426, 429, 432, 441, 448, 452, 455, 490, 498, 499, 501, 507, 509, 528, 542, 549, 559, 598, 604, 624, 636, 642, 659, 670, 682, 689, 692, 700, 714, 724, 725, 726, 746, 773, 786, 789, 801, 805, 808, 815, 829, 845, 862, 869, 870, 879, 889, 890, 896, 907, 926, 931, 945, 952, 954, 957, 959, 961, 963, 970, 971, 1001, 1002, 1013, 1017, 1040, 1079, 1095, 1105, 1113, 1128], "netide": 14, "f\u00f6rderantrag": 14, "miscellan": [14, 29, 90, 123, 184, 197, 200, 207, 210, 211, 213, 219, 221, 223, 224, 229, 230, 231, 234, 237, 239, 247, 252, 254, 258, 259, 262, 272, 273, 275, 278, 281, 303, 304, 305, 306, 307, 308, 317, 325, 336, 448, 462, 490, 491, 492, 493, 494, 495, 496, 497, 500, 507, 509, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 651, 682, 698, 707, 715, 723, 725, 726, 727, 869, 899, 900, 905, 908, 910, 924, 927, 972, 994, 1024, 1028, 1029, 1030, 1040, 1043, 1051, 1052, 1054, 1055, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1072, 1073, 1077, 1078, 1084, 1087, 1091, 1099, 1102, 1109, 1124, 1125, 1126, 1135], "s5": [16, 23, 136, 941, 945, 1139], "slide": [16, 23, 24, 27, 37, 136, 137, 140, 158, 165, 167, 172, 176, 180, 181, 182, 191, 192, 201, 202, 218, 244, 245, 256, 328, 331, 336, 537, 785, 942, 946, 1043, 1084, 1121, 1122, 1123, 1131, 1132, 1138, 1139, 1141, 1142, 1143], "work": [16, 24, 27, 40, 42, 43, 44, 57, 61, 71, 78, 80, 98, 99, 104, 106, 109, 114, 119, 120, 122, 125, 126, 136, 137, 139, 140, 141, 143, 145, 146, 147, 150, 151, 155, 164, 168, 169, 170, 179, 180, 182, 192, 197, 199, 201, 209, 210, 213, 215, 216, 218, 223, 225, 228, 232, 237, 246, 249, 255, 256, 258, 259, 262, 269, 270, 273, 274, 276, 277, 279, 303, 317, 322, 323, 325, 330, 331, 336, 337, 381, 382, 402, 404, 414, 424, 426, 427, 429, 430, 432, 433, 435, 436, 438, 440, 443, 444, 447, 448, 449, 462, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 537, 542, 562, 591, 598, 631, 633, 635, 643, 645, 647, 690, 696, 700, 701, 702, 706, 708, 715, 722, 725, 726, 727, 736, 741, 751, 753, 757, 771, 773, 778, 781, 795, 799, 800, 801, 802, 803, 806, 807, 808, 810, 812, 817, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 833, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 853, 855, 857, 866, 869, 870, 878, 882, 886, 890, 892, 897, 898, 900, 903, 906, 908, 910, 915, 924, 927, 929, 930, 932, 945, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 962, 964, 970, 971, 974, 993, 996, 997, 998, 1017, 1023, 1025, 1026, 1048, 1058, 1059, 1071, 1078, 1087, 1089, 1090, 1092, 1093, 1095, 1105, 1114, 1125, 1130, 1131, 1137], "progress": [16, 136, 336, 727, 835, 1114], "web": [16, 23, 72, 74, 78, 123, 137, 147, 176, 179, 200, 203, 249, 273, 726, 1071, 1078, 1084, 1087], "note": [16, 32, 36, 40, 44, 60, 63, 113, 117, 119, 123, 125, 139, 140, 142, 147, 160, 161, 172, 191, 199, 201, 212, 213, 215, 240, 269, 274, 291, 294, 308, 309, 426, 430, 432, 436, 466, 514, 537, 546, 547, 553, 558, 617, 659, 679, 680, 681, 692, 694, 700, 701, 702, 704, 732, 773, 790, 800, 801, 860, 878, 896, 907, 959, 1012, 1015, 1017, 1021, 1076, 1087, 1089, 1092, 1112], "screencast": [16, 23, 123, 1071], "written": [16, 42, 43, 78, 106, 114, 139, 140, 145, 155, 178, 228, 319, 381, 384, 400, 408, 410, 414, 427, 464, 554, 620, 633, 653, 727, 812, 899, 906, 941, 948, 949, 957, 989, 996, 1026, 1127], "draft": [16, 29, 172, 726, 869, 1023, 1069, 1070, 1085], "convers": [17, 179, 191, 198, 201, 202, 209, 214, 215, 218, 221, 224, 225, 230, 233, 236, 254, 265, 267, 271, 275, 281, 293, 317, 341, 356, 370, 379, 386, 392, 396, 399, 403, 410, 412, 416, 421, 422, 426, 463, 525, 613, 617, 641, 643, 644, 646, 682, 723, 725, 726, 776, 1021, 1038, 1042, 1045, 1056], "old": [17, 29, 137, 140, 142, 145, 170, 180, 212, 213, 228, 260, 270, 274, 336, 359, 398, 419, 424, 447, 520, 573, 580, 585, 600, 632, 638, 641, 646, 647, 688, 706, 717, 730, 736, 746, 765, 870, 878, 934, 1010, 1016, 1028, 1049, 1095, 1126], "latex": [17, 23, 24, 520], "beamer": [17, 23, 24], "To": [17, 29, 45, 61, 78, 102, 123, 139, 140, 142, 144, 155, 164, 168, 172, 187, 199, 209, 215, 225, 228, 229, 232, 236, 244, 245, 247, 249, 269, 284, 287, 291, 298, 350, 353, 408, 420, 444, 489, 502, 598, 612, 623, 639, 641, 682, 698, 721, 725, 726, 746, 750, 761, 773, 802, 808, 869, 870, 877, 878, 883, 885, 898, 907, 963, 972, 986, 1030, 1036, 1059, 1064, 1065, 1066, 1069, 1077, 1084], "put": [17, 58, 69, 80, 133, 139, 140, 141, 168, 176, 291, 294, 298, 426, 430, 434, 435, 498, 542, 628, 652, 688, 714, 742, 750, 763, 765, 790, 870, 878, 907, 932, 947, 962, 965, 970, 1028, 1110], "more": [17, 21, 27, 29, 43, 45, 59, 62, 65, 69, 78, 82, 90, 97, 101, 106, 113, 115, 120, 133, 137, 140, 141, 144, 145, 147, 150, 151, 153, 155, 161, 162, 164, 169, 172, 176, 177, 178, 179, 180, 181, 182, 184, 186, 191, 192, 197, 199, 200, 201, 202, 203, 207, 210, 213, 214, 216, 217, 218, 219, 221, 222, 223, 226, 229, 230, 231, 233, 234, 236, 240, 244, 245, 246, 247, 251, 254, 255, 265, 266, 267, 274, 276, 277, 281, 283, 291, 298, 303, 304, 305, 306, 307, 308, 320, 322, 328, 335, 336, 347, 352, 356, 359, 363, 373, 374, 375, 384, 386, 392, 393, 396, 399, 403, 404, 409, 410, 412, 414, 416, 418, 419, 420, 421, 422, 426, 429, 431, 432, 435, 448, 455, 462, 464, 468, 469, 480, 485, 490, 498, 500, 520, 537, 542, 546, 550, 599, 613, 614, 615, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 638, 639, 641, 644, 651, 652, 663, 670, 679, 682, 683, 691, 692, 694, 696, 698, 699, 701, 702, 705, 707, 715, 716, 723, 724, 725, 726, 729, 732, 744, 746, 751, 757, 759, 761, 765, 767, 769, 773, 799, 804, 809, 833, 836, 866, 870, 872, 876, 877, 878, 879, 890, 896, 899, 902, 905, 916, 918, 929, 933, 935, 941, 945, 947, 948, 949, 957, 959, 963, 964, 965, 971, 973, 975, 979, 980, 981, 982, 986, 989, 990, 994, 995, 997, 1001, 1002, 1013, 1024, 1027, 1028, 1029, 1030, 1040, 1042, 1043, 1049, 1051, 1052, 1054, 1055, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1071, 1072, 1073, 1076, 1077, 1078, 1080, 1081, 1084, 1085, 1087, 1090, 1094, 1099, 1100, 1102, 1104, 1106, 1107, 1109, 1114, 1118, 1125, 1127, 1128, 1135], "precis": [17, 172, 176, 232, 249, 273, 340, 358, 622, 717, 773, 1016, 1071], "restructuredtext": [17, 23, 32, 33, 34, 35, 36, 38, 727], "turn": [17, 75, 110, 111, 140, 142, 145, 150, 151, 172, 176, 192, 201, 218, 264, 317, 414, 429, 430, 466, 491, 492, 649, 664, 829, 870, 877, 878, 879, 947, 949, 953, 963, 971, 976, 977, 987, 989, 1097], "rst2s5": 17, "tool": [17, 32, 61, 68, 113, 147, 151, 156, 172, 180, 182, 192, 202, 228, 246, 255, 270, 275, 276, 293, 317, 320, 322, 335, 336, 337, 382, 417, 419, 420, 424, 616, 670, 688, 726, 797, 803, 804, 817, 869, 879, 890, 893, 948, 949, 957, 961, 995, 996, 999, 1026, 1090, 1099, 1123, 1125, 1127, 1129, 1136], "thi": [17, 24, 28, 29, 30, 31, 39, 40, 43, 44, 45, 50, 53, 54, 57, 59, 61, 62, 63, 65, 69, 77, 78, 84, 85, 89, 90, 97, 104, 106, 109, 110, 111, 113, 116, 120, 123, 130, 134, 137, 139, 140, 141, 143, 144, 145, 146, 155, 157, 159, 160, 162, 164, 166, 167, 168, 169, 172, 176, 177, 178, 179, 180, 181, 182, 192, 199, 201, 202, 209, 212, 213, 215, 218, 220, 222, 223, 225, 228, 231, 232, 238, 241, 245, 247, 249, 256, 264, 265, 267, 269, 274, 284, 287, 291, 292, 294, 301, 303, 308, 317, 320, 323, 335, 336, 338, 342, 349, 350, 363, 372, 373, 397, 401, 402, 404, 405, 406, 408, 413, 414, 424, 428, 429, 434, 435, 436, 440, 446, 454, 455, 466, 468, 470, 488, 490, 499, 500, 503, 504, 505, 506, 507, 508, 509, 510, 514, 515, 518, 519, 520, 521, 524, 527, 528, 530, 531, 533, 534, 536, 537, 539, 542, 544, 545, 546, 548, 549, 552, 554, 555, 557, 560, 565, 568, 571, 573, 575, 576, 579, 587, 591, 593, 597, 599, 604, 606, 607, 609, 610, 614, 617, 620, 624, 626, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 638, 639, 642, 651, 652, 653, 664, 670, 672, 673, 676, 677, 678, 679, 680, 681, 682, 687, 690, 692, 694, 695, 698, 700, 702, 704, 705, 706, 707, 714, 715, 716, 717, 723, 724, 725, 726, 727, 732, 737, 742, 746, 748, 755, 769, 773, 778, 785, 793, 800, 801, 804, 805, 812, 815, 817, 818, 827, 829, 830, 833, 838, 840, 870, 875, 876, 877, 878, 879, 882, 889, 890, 896, 903, 904, 905, 906, 907, 911, 914, 923, 926, 935, 936, 939, 940, 943, 945, 948, 949, 951, 957, 959, 960, 961, 962, 963, 965, 966, 967, 968, 969, 972, 975, 977, 979, 981, 983, 990, 993, 994, 995, 997, 999, 1006, 1009, 1011, 1012, 1013, 1016, 1017, 1019, 1021, 1022, 1023, 1027, 1043, 1058, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1084, 1085, 1086, 1087, 1088, 1089, 1093, 1096, 1099, 1100, 1105, 1107, 1110, 1111, 1112, 1114, 1116, 1117, 1125, 1127, 1128, 1130, 1133, 1134, 1140], "sens": [17, 78, 142, 144, 161, 164, 169, 172, 191, 439, 447, 464, 549, 560, 567, 614, 642, 655, 734, 773, 812, 879, 903, 926, 933, 940, 990, 1020, 1076, 1128], "entir": [17, 24, 30, 80, 110, 111, 133, 137, 140, 141, 142, 145, 151, 155, 164, 169, 176, 179, 197, 200, 201, 209, 223, 226, 229, 232, 244, 245, 247, 249, 259, 266, 269, 273, 279, 284, 287, 291, 295, 354, 383, 387, 394, 397, 402, 410, 418, 426, 444, 650, 681, 701, 773, 800, 801, 806, 830, 835, 844, 852, 870, 877, 879, 882, 888, 905, 916, 949, 978, 982, 996, 1001, 1002, 1019, 1021, 1040, 1071, 1105, 1108, 1111, 1128], "site": [17, 23, 27, 39, 61, 65, 123, 136, 137, 140, 152, 155, 167, 168, 169, 173, 199, 209, 215, 225, 228, 291, 559, 705, 812, 1075, 1092, 1093, 1100, 1107, 1114], "massag": [17, 32, 130, 151, 169, 245, 247, 727, 877, 949], "itself": [17, 27, 115, 120, 140, 142, 168, 172, 178, 209, 215, 225, 228, 274, 306, 352, 384, 420, 429, 435, 463, 464, 486, 501, 547, 554, 613, 690, 705, 714, 717, 748, 751, 773, 793, 799, 800, 801, 815, 833, 862, 932, 945, 959, 987, 990, 995, 1016, 1056, 1097, 1114], "upon": [17, 27, 69, 97, 142, 143, 172, 176, 180, 187, 226, 258, 265, 284, 287, 406, 424, 452, 504, 520, 559, 577, 700, 717, 746, 879, 945, 1033, 1097, 1105, 1125], "you": [17, 21, 43, 58, 59, 62, 109, 113, 114, 115, 117, 119, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 155, 156, 160, 161, 162, 164, 168, 169, 172, 176, 178, 179, 180, 192, 197, 199, 200, 201, 202, 209, 212, 215, 216, 218, 222, 223, 225, 226, 228, 232, 240, 249, 256, 259, 262, 265, 267, 269, 273, 303, 308, 314, 317, 320, 322, 325, 348, 349, 362, 378, 404, 408, 424, 466, 485, 486, 487, 488, 492, 495, 498, 499, 501, 534, 545, 546, 552, 557, 560, 561, 563, 564, 578, 599, 607, 614, 620, 628, 629, 633, 650, 656, 684, 694, 705, 721, 722, 724, 746, 748, 765, 773, 778, 799, 800, 801, 804, 805, 808, 812, 813, 819, 823, 825, 827, 833, 834, 835, 837, 838, 839, 840, 844, 845, 870, 873, 877, 878, 879, 880, 881, 882, 884, 886, 889, 890, 894, 896, 900, 905, 907, 915, 916, 917, 918, 919, 923, 947, 948, 949, 950, 952, 955, 959, 962, 963, 966, 971, 972, 981, 983, 994, 995, 999, 1002, 1015, 1021, 1028, 1037, 1039, 1054, 1058, 1059, 1068, 1071, 1077, 1084, 1087, 1093, 1105, 1106, 1107, 1114, 1117, 1125, 1130], "view": [17, 63, 145, 146, 150, 161, 163, 176, 178, 244, 245, 249, 256, 298, 335, 352, 354, 417, 644, 682, 691, 693, 725, 726, 800, 801, 810, 817, 870, 879, 881, 1002, 1070, 1125, 1128, 1130], "state": [17, 45, 113, 115, 136, 147, 152, 172, 180, 202, 209, 212, 215, 225, 226, 228, 357, 374, 406, 424, 491, 492, 496, 497, 544, 650, 684, 714, 731, 769, 790, 804, 862, 872, 916, 920, 931, 932, 969, 975], "rather": [17, 65, 85, 119, 120, 140, 142, 143, 144, 145, 146, 147, 150, 151, 155, 164, 168, 172, 176, 192, 201, 219, 220, 294, 303, 328, 340, 382, 414, 415, 424, 442, 493, 494, 495, 496, 497, 502, 537, 544, 546, 560, 567, 578, 598, 623, 629, 643, 664, 714, 716, 746, 773, 778, 810, 812, 858, 870, 877, 878, 879, 881, 888, 893, 916, 917, 944, 948, 963, 988, 995, 998, 1006, 1046, 1047, 1050, 1061, 1063, 1078, 1085, 1107, 1112, 1125, 1127], "huge": [17, 146, 151, 161, 455, 691, 751, 769, 994, 996, 1101], "tabl": [17, 39, 63, 65, 120, 133, 137, 139, 172, 178, 179, 196, 204, 209, 215, 216, 218, 219, 222, 223, 225, 228, 235, 240, 274, 336, 340, 355, 369, 370, 374, 375, 379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 622, 644, 682, 691, 723, 725, 726, 812, 1019, 1028, 1060, 1062, 1083, 1084], "isnot": 17, "big": [17, 104, 137, 140, 141, 147, 172, 176, 196, 202, 216, 223, 226, 269, 317, 363, 408, 420, 499, 549, 579, 642, 706, 893, 1071, 1083, 1140], "fat": [17, 137, 139, 143, 147, 216, 636, 706, 804, 1083], "sai": [17, 24, 65, 66, 106, 128, 139, 140, 141, 142, 144, 145, 146, 147, 150, 151, 155, 160, 161, 172, 176, 213, 218, 240, 259, 262, 266, 268, 269, 290, 291, 303, 317, 408, 414, 420, 430, 440, 444, 453, 464, 470, 485, 487, 499, 528, 537, 546, 556, 604, 617, 629, 638, 642, 670, 674, 676, 677, 678, 680, 685, 692, 695, 696, 701, 732, 746, 773, 812, 815, 817, 852, 870, 877, 879, 890, 894, 905, 907, 917, 929, 940, 944, 950, 959, 962, 963, 969, 973, 995, 1011, 1023, 1028, 1058, 1079, 1114, 1128], "file": [17, 27, 29, 34, 35, 36, 38, 40, 44, 47, 50, 53, 54, 55, 56, 68, 78, 80, 85, 90, 91, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 113, 114, 115, 117, 119, 124, 127, 132, 133, 136, 137, 139, 140, 141, 142, 145, 146, 151, 155, 159, 162, 164, 166, 167, 168, 169, 171, 172, 174, 176, 177, 179, 180, 181, 182, 187, 189, 190, 191, 192, 197, 200, 201, 202, 205, 206, 207, 210, 211, 213, 214, 215, 216, 218, 219, 220, 222, 223, 225, 226, 229, 230, 231, 232, 234, 236, 239, 240, 244, 245, 246, 249, 253, 255, 258, 259, 261, 262, 268, 269, 271, 275, 276, 280, 282, 283, 290, 291, 294, 302, 303, 304, 305, 306, 307, 314, 317, 318, 319, 320, 321, 322, 328, 330, 331, 335, 346, 349, 350, 380, 381, 383, 384, 385, 386, 392, 396, 399, 403, 407, 412, 416, 418, 420, 421, 422, 425, 427, 429, 431, 432, 433, 438, 439, 442, 448, 462, 485, 486, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 521, 524, 527, 529, 530, 533, 536, 539, 542, 547, 549, 561, 562, 563, 564, 570, 622, 626, 633, 636, 644, 659, 682, 688, 692, 702, 715, 723, 724, 725, 726, 729, 734, 735, 739, 740, 742, 743, 750, 751, 754, 764, 769, 775, 777, 780, 782, 788, 789, 791, 794, 797, 798, 799, 802, 803, 805, 806, 807, 809, 810, 812, 813, 815, 816, 817, 818, 819, 820, 821, 823, 824, 825, 826, 829, 831, 832, 833, 837, 841, 842, 843, 844, 845, 847, 850, 853, 858, 861, 866, 869, 870, 873, 877, 878, 879, 880, 882, 883, 885, 886, 892, 893, 896, 897, 898, 907, 910, 911, 914, 915, 921, 924, 927, 930, 932, 936, 938, 939, 940, 943, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 961, 963, 964, 965, 970, 971, 972, 975, 978, 983, 986, 989, 994, 998, 1000, 1002, 1013, 1019, 1022, 1023, 1029, 1030, 1040, 1043, 1054, 1055, 1058, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1071, 1076, 1084, 1085, 1096, 1100, 1105, 1106, 1107, 1108, 1111, 1113, 1116, 1122, 1127, 1129, 1130, 1131, 1138, 1139, 1140, 1142], "rst": [17, 23, 32, 34, 35, 36, 38, 113, 124, 136, 159, 166, 171, 174, 180, 228, 238, 325, 521, 524, 527, 530, 533, 536, 539, 936, 939, 943, 1111, 1116], "render": [17, 40, 145], "dure": [17, 27, 45, 46, 104, 106, 130, 139, 140, 141, 142, 146, 147, 151, 155, 160, 172, 176, 228, 320, 383, 387, 388, 402, 414, 419, 463, 470, 496, 499, 580, 598, 655, 694, 769, 773, 778, 805, 811, 877, 879, 888, 949, 963, 964, 983, 996, 998, 1013, 1097, 1105], "regular": [17, 140, 164, 175, 189, 205, 212, 213, 220, 239, 240, 242, 244, 245, 254, 273, 274, 342, 408, 426, 557, 559, 691, 724, 761, 773, 818, 852, 855, 857, 866, 879, 890, 940, 941, 983, 1013, 1015, 1071], "process": [17, 28, 61, 63, 65, 73, 78, 80, 97, 99, 110, 111, 113, 145, 150, 157, 164, 170, 172, 179, 180, 182, 216, 246, 255, 268, 269, 276, 290, 319, 320, 327, 332, 385, 391, 420, 429, 448, 462, 490, 491, 492, 493, 494, 495, 496, 497, 500, 542, 709, 715, 724, 725, 726, 735, 740, 743, 745, 750, 754, 756, 759, 760, 763, 764, 765, 766, 768, 770, 773, 777, 778, 779, 782, 784, 787, 788, 790, 791, 793, 794, 800, 801, 802, 803, 804, 807, 808, 809, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 832, 834, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 853, 869, 878, 881, 882, 883, 884, 885, 888, 892, 893, 894, 898, 899, 900, 902, 903, 905, 907, 908, 910, 915, 916, 917, 924, 929, 930, 932, 933, 934, 941, 944, 945, 947, 949, 951, 952, 953, 954, 955, 956, 957, 958, 964, 965, 974, 982, 995, 996, 1050, 1117, 1130, 1139, 1140], "mean": [17, 29, 73, 74, 110, 111, 113, 140, 142, 145, 147, 161, 163, 164, 176, 196, 199, 200, 213, 215, 228, 232, 259, 274, 282, 290, 294, 302, 303, 340, 361, 362, 363, 385, 404, 409, 414, 468, 546, 554, 557, 558, 624, 670, 692, 696, 704, 705, 726, 732, 748, 808, 815, 818, 820, 821, 829, 870, 877, 878, 879, 906, 913, 929, 933, 935, 963, 966, 975, 990, 998, 1001, 1015, 1016, 1021, 1049, 1069, 1072, 1076, 1078, 1079, 1085, 1090, 1098, 1112, 1127, 1130], "specif": [17, 63, 143, 209, 215, 216, 225, 228, 274, 280, 291, 303, 337, 385, 402, 414, 444, 491, 494, 496, 499, 645, 688, 702, 724, 732, 746, 769, 773, 799, 809, 870, 877, 879, 893, 899, 915, 916, 941, 947, 959, 970, 978, 979, 1080, 1096, 1105, 1140, 1141], "markup": [17, 39], "class": [17, 21, 29, 42, 44, 55, 58, 63, 69, 70, 73, 74, 85, 92, 97, 106, 107, 108, 110, 111, 113, 114, 115, 117, 119, 120, 147, 158, 159, 160, 162, 167, 176, 177, 178, 179, 181, 183, 184, 196, 200, 202, 209, 212, 213, 215, 216, 220, 224, 226, 227, 230, 232, 235, 238, 240, 242, 244, 245, 247, 252, 253, 257, 259, 260, 262, 266, 267, 268, 269, 271, 272, 273, 274, 278, 280, 290, 291, 292, 294, 298, 303, 305, 311, 312, 319, 320, 321, 328, 354, 400, 424, 426, 434, 442, 443, 444, 445, 446, 448, 449, 451, 452, 456, 462, 463, 464, 466, 467, 469, 470, 471, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 487, 489, 490, 491, 492, 493, 494, 495, 496, 497, 500, 501, 507, 509, 514, 520, 528, 531, 534, 540, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 555, 556, 558, 560, 565, 567, 568, 571, 577, 586, 587, 593, 597, 603, 606, 609, 610, 615, 616, 617, 619, 620, 624, 625, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 638, 639, 646, 647, 648, 649, 650, 651, 652, 655, 659, 664, 666, 667, 668, 670, 672, 673, 676, 677, 678, 679, 680, 681, 682, 684, 685, 687, 689, 696, 698, 701, 702, 705, 706, 707, 714, 715, 716, 720, 721, 722, 723, 725, 726, 728, 870, 877, 878, 879, 911, 913, 914, 968, 970, 972, 978, 979, 980, 981, 982, 985, 986, 991, 992, 993, 994, 996, 999, 1001, 1002, 1010, 1030, 1057, 1058, 1059, 1064, 1066, 1069, 1084, 1098, 1099, 1105, 1106, 1117, 1125, 1135], "handout": [17, 113], "warn": [17, 32, 40, 136, 151, 192, 202, 253, 265, 314, 325, 350, 374, 405, 406, 408, 429, 443, 498, 500, 544, 548, 599, 643, 655, 726, 742, 748, 751, 810, 869, 899, 910, 924, 946, 970, 1021, 1100], "produc": [17, 108, 160, 162, 201, 215, 402, 414, 419, 670, 676, 678, 714, 716, 890, 920, 921, 939, 947, 950, 963, 976, 977, 1010, 1013, 1015, 1079], "error": [17, 21, 27, 29, 46, 65, 88, 97, 114, 136, 139, 140, 141, 142, 145, 146, 155, 159, 162, 170, 173, 176, 179, 186, 197, 201, 207, 209, 212, 216, 217, 218, 222, 225, 228, 232, 235, 237, 240, 249, 250, 253, 256, 259, 262, 273, 274, 287, 292, 302, 317, 322, 324, 328, 347, 350, 352, 359, 363, 377, 378, 384, 390, 391, 393, 406, 407, 408, 411, 428, 429, 430, 432, 433, 434, 435, 438, 445, 449, 468, 469, 470, 482, 490, 501, 520, 537, 542, 544, 546, 547, 551, 552, 553, 554, 555, 557, 559, 567, 570, 575, 617, 619, 620, 629, 636, 643, 646, 650, 652, 653, 654, 655, 659, 679, 680, 681, 689, 692, 694, 696, 701, 702, 704, 715, 716, 725, 726, 729, 736, 751, 761, 765, 769, 773, 789, 803, 806, 807, 813, 816, 869, 870, 878, 880, 892, 894, 895, 896, 897, 898, 899, 907, 908, 910, 918, 924, 926, 927, 930, 931, 932, 940, 944, 945, 949, 950, 959, 964, 970, 1000, 1001, 1012, 1013, 1017, 1021, 1023, 1030, 1043, 1069, 1071, 1078, 1100, 1105, 1107, 1112, 1125], "output": [17, 23, 33, 40, 51, 53, 55, 56, 61, 63, 85, 86, 107, 119, 120, 136, 142, 144, 145, 146, 159, 162, 168, 180, 181, 192, 201, 209, 215, 218, 219, 225, 228, 256, 302, 317, 322, 340, 341, 346, 347, 348, 349, 353, 385, 419, 420, 426, 427, 428, 468, 470, 485, 500, 503, 504, 505, 506, 518, 520, 528, 531, 557, 607, 625, 626, 639, 687, 692, 700, 726, 731, 786, 797, 804, 813, 816, 817, 818, 829, 833, 855, 859, 860, 865, 866, 870, 880, 891, 899, 902, 905, 913, 916, 917, 921, 941, 944, 945, 947, 977, 1016, 1021, 1022, 1032, 1033, 1035, 1036, 1037, 1038, 1040, 1045, 1051, 1053, 1055, 1060, 1061, 1062, 1063, 1074, 1077, 1078, 1083, 1087, 1096, 1100, 1113, 1120, 1136], "must": [17, 39, 43, 44, 110, 111, 113, 143, 147, 162, 168, 172, 173, 175, 176, 179, 183, 184, 197, 199, 201, 209, 215, 216, 223, 225, 226, 228, 249, 274, 291, 340, 357, 360, 374, 382, 400, 402, 417, 424, 426, 430, 436, 447, 452, 453, 466, 469, 470, 483, 484, 498, 501, 504, 505, 506, 518, 528, 554, 555, 557, 559, 569, 570, 604, 617, 624, 631, 638, 646, 647, 649, 650, 670, 694, 696, 708, 712, 726, 751, 757, 765, 771, 778, 800, 801, 817, 827, 835, 869, 880, 886, 889, 899, 900, 903, 908, 910, 918, 927, 929, 931, 941, 947, 950, 965, 970, 971, 988, 993, 999, 1012, 1013, 1015, 1016, 1018, 1021, 1050, 1071, 1106, 1117], "role": [17, 39, 65, 143, 147, 420, 501, 870], "somewher": [17, 161, 180, 192, 199, 232, 244, 245, 302, 314, 385, 402, 404, 424, 449, 470, 537, 670, 916, 973, 998, 1084], "top": [17, 28, 32, 34, 35, 38, 39, 50, 139, 140, 142, 143, 155, 161, 163, 164, 180, 182, 209, 215, 218, 225, 228, 427, 776, 785, 870, 890, 929, 931, 970, 978, 1000, 1046, 1050, 1125, 1129, 1131, 1136], "insid": [17, 35, 39, 42, 50, 113, 120, 139, 140, 168, 170, 192, 209, 215, 225, 228, 245, 265, 267, 282, 291, 302, 317, 346, 350, 360, 378, 381, 383, 384, 402, 407, 426, 488, 499, 504, 552, 558, 560, 716, 724, 734, 744, 812, 842, 852, 877, 879, 902, 916, 935, 961, 966, 969, 978, 1015, 1021, 1089, 1092, 1096, 1108, 1127, 1130], "ideal": [17, 151, 167, 209, 215, 225, 228, 245, 247, 413, 429, 440, 447, 495, 616, 670, 732, 751, 769, 773, 866, 886, 950, 990, 992], "slideshow": [17, 23, 219, 231, 258, 268, 279, 287, 290, 294, 730, 733, 735, 738, 740, 743, 745, 752, 754, 756, 758, 760, 762, 764, 766, 768, 770, 772, 777, 779, 782, 784, 788, 791, 794, 1014, 1102, 1109], "manual": [17, 61, 63, 114, 117, 119, 137, 147, 155, 178, 179, 209, 210, 215, 218, 225, 228, 258, 260, 348, 349, 352, 359, 397, 402, 426, 543, 585, 635, 642, 653, 679, 691, 692, 728, 729, 732, 773, 800, 801, 870, 877, 878, 900, 903, 916, 918, 920, 961, 963, 968, 976, 977, 981, 985, 1026], "theme": [17, 65, 309, 1002, 1021], "url": [17, 137, 144, 146, 155, 167, 499, 969, 1026], "_static": 17, "ui": [17, 32, 147, 363, 622], "default": [17, 23, 58, 61, 97, 110, 111, 113, 140, 141, 146, 147, 151, 157, 168, 177, 179, 181, 188, 190, 201, 209, 212, 215, 218, 221, 224, 225, 228, 232, 235, 238, 243, 246, 253, 255, 256, 260, 264, 265, 267, 270, 274, 276, 277, 310, 317, 363, 374, 406, 414, 420, 426, 427, 429, 432, 436, 439, 445, 448, 462, 464, 473, 474, 490, 500, 542, 544, 545, 550, 551, 554, 555, 579, 598, 599, 615, 620, 622, 624, 627, 628, 629, 630, 632, 634, 635, 636, 637, 638, 639, 642, 643, 650, 651, 680, 682, 698, 707, 712, 714, 715, 716, 723, 725, 726, 769, 797, 800, 801, 803, 815, 828, 833, 852, 864, 865, 869, 870, 872, 877, 878, 880, 886, 889, 903, 907, 913, 916, 918, 920, 932, 944, 946, 948, 950, 961, 990, 992, 998, 1017, 1019, 1021, 1026, 1062, 1079, 1089, 1092, 1094, 1100, 1105, 1107, 1125], "given": [17, 39, 59, 62, 69, 81, 102, 106, 107, 110, 111, 125, 140, 142, 145, 147, 151, 161, 209, 215, 225, 228, 232, 256, 264, 265, 267, 274, 303, 350, 365, 408, 467, 496, 499, 501, 520, 544, 613, 624, 649, 724, 734, 744, 755, 773, 810, 815, 824, 826, 833, 855, 877, 957, 969, 1056, 1065, 1071, 1073, 1079, 1090, 1093, 1128, 1140], "path": [17, 21, 97, 99, 113, 128, 129, 136, 145, 168, 172, 180, 183, 200, 211, 212, 213, 217, 220, 224, 225, 228, 246, 255, 256, 276, 277, 280, 282, 283, 302, 303, 308, 310, 317, 322, 384, 420, 426, 428, 431, 432, 434, 448, 462, 490, 491, 492, 493, 494, 495, 496, 497, 500, 501, 502, 542, 567, 699, 715, 725, 726, 737, 751, 763, 773, 799, 800, 801, 802, 803, 806, 807, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 833, 834, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 853, 869, 889, 892, 898, 899, 900, 908, 909, 910, 924, 926, 927, 928, 930, 932, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 961, 968, 978, 995, 998, 1059, 1098, 1100, 1105, 1107, 1115, 1127], "commit": [17, 46, 77, 122, 143, 146, 154, 155, 197, 201, 202, 213, 216, 226, 325, 746, 1071, 1080, 1083, 1105, 1137], "place": [17, 55, 113, 128, 137, 141, 142, 144, 145, 146, 147, 155, 160, 169, 173, 196, 212, 218, 228, 264, 265, 340, 356, 378, 385, 402, 425, 434, 438, 442, 466, 468, 482, 501, 514, 559, 573, 575, 576, 587, 598, 606, 609, 610, 620, 639, 705, 708, 716, 721, 724, 726, 751, 773, 802, 823, 824, 825, 826, 877, 878, 886, 932, 962, 964, 973, 1003, 1012, 1016, 1018, 1036, 1093, 1107], "_download": 17, "7a046b2e956b892f20b3485964f7b2cf": 17, "rel": [17, 78, 99, 113, 140, 147, 176, 192, 213, 246, 255, 256, 276, 277, 335, 448, 462, 490, 491, 492, 493, 494, 495, 496, 497, 500, 542, 659, 664, 715, 725, 726, 773, 800, 801, 802, 803, 806, 807, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 853, 869, 877, 889, 892, 898, 900, 908, 910, 924, 927, 930, 932, 949, 951, 952, 953, 954, 955, 956, 957, 958, 964, 1075, 1076, 1083, 1096], "up": [17, 21, 27, 32, 34, 35, 38, 43, 45, 53, 78, 117, 119, 130, 137, 139, 140, 141, 143, 145, 147, 150, 155, 159, 160, 191, 197, 202, 207, 209, 213, 215, 225, 228, 240, 245, 247, 256, 265, 291, 302, 320, 324, 330, 331, 398, 405, 414, 415, 420, 424, 428, 429, 449, 498, 499, 500, 501, 514, 537, 561, 562, 563, 564, 567, 614, 619, 684, 687, 700, 701, 714, 732, 736, 741, 742, 744, 755, 757, 765, 769, 773, 774, 812, 833, 834, 852, 865, 870, 872, 877, 878, 879, 886, 896, 929, 935, 940, 945, 947, 950, 959, 968, 971, 982, 986, 992, 1015, 1028, 1032, 1049, 1054, 1066, 1071, 1076, 1079, 1087, 1100, 1106, 1112, 1117, 1128], "uri": 17, "well": [17, 42, 65, 140, 142, 145, 146, 147, 151, 164, 168, 176, 199, 201, 228, 264, 266, 274, 282, 291, 303, 363, 385, 414, 424, 452, 492, 498, 501, 502, 525, 545, 549, 560, 574, 642, 649, 656, 679, 692, 702, 706, 798, 817, 833, 866, 873, 878, 879, 890, 903, 905, 923, 947, 949, 962, 970, 971, 974, 978, 981, 985, 988, 991, 1002, 1006, 1016, 1074, 1076, 1084, 1101, 1127], "blah": [19, 23, 39, 62, 65, 122, 140, 143, 162, 173, 180, 183, 188, 196, 199, 205, 209, 215, 216, 218, 220, 225, 228, 235, 238, 250, 257, 260, 270, 274, 292, 309, 310, 317, 325, 328, 408, 655, 724, 729, 737, 896, 897, 940, 941, 966, 1001, 1007, 1026, 1087], "watch": [20, 32, 141, 142, 143, 161, 168, 172, 176, 177, 181, 267, 269, 273, 425, 692, 870, 878, 914, 974, 995, 1097], "w5g8k7a2gbg": 20, "bore": [20, 201, 223, 237, 253, 279, 833, 941, 945, 1002, 1071], "good": [20, 27, 29, 43, 97, 113, 137, 139, 140, 141, 142, 147, 155, 164, 172, 176, 179, 197, 200, 201, 209, 213, 218, 219, 220, 222, 223, 226, 232, 247, 249, 259, 262, 265, 267, 273, 274, 298, 336, 359, 363, 404, 408, 410, 418, 419, 424, 447, 448, 462, 490, 491, 492, 493, 494, 495, 496, 497, 500, 507, 509, 525, 542, 546, 550, 551, 565, 568, 571, 587, 593, 597, 600, 606, 609, 610, 615, 619, 624, 625, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 651, 653, 682, 693, 698, 704, 707, 713, 715, 717, 723, 725, 726, 730, 732, 765, 773, 778, 798, 812, 816, 866, 870, 878, 879, 903, 905, 922, 931, 934, 935, 941, 944, 970, 983, 1001, 1002, 1013, 1016, 1018, 1021, 1033, 1043, 1070, 1071, 1078, 1097, 1127], "j2hzby8e4yq": 20, "pov": 20, "classmethod": [21, 253], "staticmethod": [21, 253], "member": [21, 35, 38, 43, 57, 63, 110, 111, 113, 155, 161, 162, 163, 173, 178, 200, 218, 230, 243, 258, 265, 274, 321, 393, 402, 409, 446, 488, 490, 493, 496, 520, 534, 542, 544, 545, 547, 548, 549, 550, 556, 560, 561, 563, 565, 598, 599, 603, 624, 627, 630, 631, 632, 634, 635, 636, 637, 638, 639, 642, 650, 654, 655, 664, 670, 680, 696, 702, 722, 726, 734, 739, 741, 761, 769, 773, 786, 792, 799, 800, 801, 816, 817, 818, 819, 820, 821, 827, 862, 866, 877, 905, 959, 1020, 1096, 1117], "final": [21, 38, 42, 61, 78, 106, 136, 162, 172, 176, 179, 199, 201, 209, 215, 216, 225, 230, 243, 249, 273, 426, 499, 501, 566, 567, 616, 642, 653, 682, 725, 726, 736, 767, 773, 800, 801, 866, 878, 879, 947, 964, 968, 981, 1033, 1049, 1071, 1125], "exec": [21, 29, 147, 172, 181, 212, 226, 227, 235, 242, 254, 258, 260, 268, 269, 270, 274, 281, 290, 294, 726, 861, 866, 899, 902, 923, 947, 972, 1069, 1138], "dict": [21, 159, 172, 173, 177, 188, 190, 191, 196, 199, 213, 214, 215, 216, 219, 221, 224, 225, 226, 230, 236, 250, 253, 260, 270, 274, 280, 285, 292, 309, 312, 317, 642, 968, 971, 983, 984, 993, 1019], "There": [21, 45, 55, 57, 65, 68, 81, 97, 137, 139, 141, 142, 143, 144, 147, 151, 152, 168, 169, 173, 175, 176, 179, 183, 184, 197, 202, 218, 221, 222, 223, 226, 232, 259, 262, 265, 266, 267, 268, 269, 290, 291, 303, 338, 348, 354, 363, 378, 381, 402, 404, 411, 414, 425, 426, 430, 439, 444, 469, 470, 520, 528, 545, 550, 595, 620, 638, 639, 651, 653, 659, 682, 687, 698, 702, 706, 707, 715, 723, 725, 726, 746, 773, 778, 804, 833, 870, 877, 878, 923, 933, 944, 945, 996, 1002, 1013, 1071, 1080, 1106, 1112], "half": [21, 36, 140, 141, 142, 202, 410, 429, 771, 812, 878, 931, 968], "heart": [21, 32, 38, 130, 429, 812, 1077], "split": [21, 137, 160, 163, 196, 200, 205, 206, 209, 212, 213, 215, 220, 224, 230, 238, 241, 253, 258, 260, 274, 280, 308, 317, 402, 426, 448, 520, 968, 1077, 1098], "pimp": 21, "elabor": [21, 151, 216, 226, 404, 427, 878], "namespac": [21, 172, 209, 215, 222, 225, 228, 232, 243, 253, 449, 451, 466, 502, 503, 504, 505, 506, 508, 518, 519, 537, 559, 567, 572, 573, 574, 575, 576, 582, 583, 585, 586, 589, 590, 591, 595, 609, 626, 632, 633, 642, 657, 679, 689, 692, 714, 716, 717, 877, 911, 914, 926, 928, 978], "__init__": [21, 63, 136, 159, 160, 171, 173, 176, 178, 196, 199, 200, 212, 213, 215, 222, 225, 228, 232, 238, 241, 250, 253, 260, 270, 274, 292, 426, 968, 969, 970, 978, 983, 984, 985, 987, 988, 989, 990, 991, 992, 1098, 1105], "__all__": [21, 228, 232], "etc": [21, 23, 29, 63, 90, 100, 113, 129, 133, 137, 141, 145, 154, 157, 158, 162, 169, 176, 179, 183, 184, 186, 189, 190, 197, 198, 200, 201, 203, 207, 210, 212, 213, 215, 219, 220, 223, 229, 230, 231, 232, 234, 235, 237, 239, 242, 252, 253, 256, 259, 260, 262, 270, 272, 273, 275, 278, 279, 303, 304, 305, 306, 307, 308, 317, 322, 325, 335, 358, 363, 419, 429, 437, 451, 534, 622, 684, 690, 717, 724, 726, 732, 746, 773, 785, 795, 803, 805, 808, 810, 813, 815, 816, 817, 818, 829, 833, 836, 847, 850, 852, 853, 855, 857, 858, 859, 860, 861, 862, 864, 866, 869, 879, 880, 881, 889, 890, 893, 894, 895, 900, 906, 915, 926, 940, 941, 945, 947, 968, 970, 972, 979, 980, 981, 982, 986, 994, 1005, 1014, 1017, 1021, 1024, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1081, 1084, 1085, 1091, 1096, 1099, 1120, 1121, 1129, 1131, 1135, 1136, 1139, 1141], "user": [21, 23, 29, 31, 47, 53, 63, 65, 84, 101, 102, 110, 111, 113, 124, 126, 136, 137, 139, 140, 141, 142, 144, 145, 147, 155, 162, 168, 171, 172, 173, 176, 180, 187, 196, 199, 201, 203, 212, 218, 220, 225, 226, 228, 229, 231, 232, 235, 238, 240, 249, 250, 253, 256, 259, 260, 262, 270, 274, 277, 284, 285, 287, 291, 298, 302, 314, 317, 326, 382, 413, 424, 426, 427, 429, 434, 442, 452, 469, 470, 490, 504, 520, 542, 545, 546, 552, 559, 603, 607, 626, 628, 629, 630, 631, 638, 639, 655, 659, 691, 702, 715, 725, 726, 732, 734, 744, 746, 771, 773, 786, 787, 800, 801, 803, 807, 811, 812, 813, 817, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 833, 857, 861, 864, 869, 870, 871, 880, 886, 893, 898, 899, 900, 903, 905, 908, 910, 915, 924, 927, 928, 930, 932, 933, 944, 947, 961, 963, 964, 965, 968, 985, 986, 1023, 1030, 1032, 1033, 1037, 1049, 1050, 1056, 1061, 1063, 1066, 1068, 1069, 1082, 1087, 1090, 1094, 1097, 1107, 1114, 1125], "import": [21, 29, 63, 65, 128, 136, 142, 147, 150, 160, 161, 162, 163, 172, 173, 176, 178, 179, 184, 188, 190, 191, 192, 200, 204, 205, 206, 211, 212, 213, 215, 220, 222, 225, 228, 232, 235, 238, 241, 244, 245, 250, 253, 257, 258, 259, 260, 262, 264, 270, 274, 280, 285, 288, 292, 310, 312, 340, 356, 426, 429, 430, 567, 584, 650, 688, 702, 705, 726, 755, 773, 815, 833, 870, 873, 877, 886, 898, 925, 935, 946, 967, 968, 969, 971, 979, 981, 983, 989, 990, 993, 999, 1000, 1001, 1002, 1003, 1004, 1006, 1011, 1015, 1023, 1024, 1025, 1026, 1059, 1066, 1067, 1068, 1069, 1071, 1072, 1073, 1074, 1076, 1077, 1079, 1082, 1083, 1085, 1087, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1098, 1099, 1100, 1102, 1105, 1106, 1109, 1112, 1130, 1135], "pythonpath": [21, 40, 61, 172, 258, 978, 1026], "goto": [21, 379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726, 944], "orgi": [21, 434, 646], "perspect": [21, 38, 147, 169], "alwai": [21, 43, 65, 80, 136, 137, 142, 152, 169, 176, 199, 221, 232, 258, 259, 262, 309, 317, 322, 340, 358, 384, 385, 397, 409, 410, 414, 415, 417, 418, 434, 435, 454, 464, 494, 543, 549, 559, 578, 581, 637, 642, 646, 657, 681, 690, 694, 697, 701, 706, 732, 751, 769, 773, 778, 799, 833, 834, 877, 878, 879, 893, 899, 905, 933, 944, 949, 959, 964, 970, 998, 1002, 1016, 1071, 1076, 1077, 1078, 1105, 1106, 1125], "valgrind": [21, 97, 167, 201, 335, 412, 416, 417, 419, 421, 422, 449, 514, 524, 526, 534, 537, 552, 687, 700, 701, 726, 1122, 1123], "supervis": [21, 1078], "hack": [21, 53, 59, 62, 97, 134, 137, 155, 163, 167, 172, 176, 177, 201, 202, 216, 218, 226, 237, 244, 245, 246, 247, 255, 267, 268, 276, 277, 284, 287, 291, 298, 317, 321, 325, 326, 328, 335, 336, 384, 427, 448, 449, 462, 488, 490, 491, 492, 493, 494, 495, 496, 497, 500, 507, 509, 520, 562, 577, 578, 598, 640, 651, 682, 683, 684, 688, 700, 715, 724, 725, 726, 727, 803, 828, 829, 869, 910, 957, 995, 1091, 1097, 1105, 1124, 1125, 1139], "someth": [21, 43, 55, 66, 72, 73, 74, 78, 83, 84, 87, 115, 133, 139, 140, 142, 143, 145, 147, 151, 155, 161, 168, 172, 180, 188, 190, 191, 192, 202, 212, 216, 223, 238, 241, 265, 267, 284, 287, 298, 312, 375, 376, 390, 444, 466, 499, 501, 537, 548, 552, 557, 560, 567, 591, 635, 636, 637, 647, 650, 664, 694, 702, 704, 705, 720, 721, 722, 726, 734, 746, 750, 761, 769, 773, 775, 778, 793, 845, 869, 870, 873, 877, 878, 879, 894, 895, 903, 905, 906, 918, 929, 931, 932, 944, 959, 966, 968, 969, 971, 975, 992, 999, 1001, 1006, 1016, 1022, 1053, 1078, 1130], "malloc": [21, 167, 397, 398, 411, 526, 759, 893, 945, 947, 1122], "seomth": 21, "cleanup": [21, 140, 159, 328, 543, 619, 655, 699, 945, 968, 1106], "obviou": [21, 57, 147, 155, 161, 222, 232, 259, 262, 314, 385, 404, 426, 501, 543, 650, 659, 700, 706, 899, 941, 966, 1002, 1013, 1128], "lead": [21, 110, 111, 140, 142, 146, 147, 164, 201, 228, 232, 256, 274, 294, 344, 352, 362, 434, 624, 636, 773, 799, 812, 878, 931, 940, 941, 959, 986, 1012, 1023, 1033, 1084, 1099], "sever": [21, 87, 113, 140, 200, 201, 382, 451, 456, 630, 641, 771, 829, 870, 970, 996, 1007], "duplic": [21, 42, 49, 97, 114, 119, 160, 173, 218, 226, 236, 258, 302, 344, 346, 407, 408, 451, 510, 518, 531, 552, 559, 570, 648, 705, 726, 780, 816, 869, 905, 908, 910, 927, 1053, 1105, 1107], "when": [21, 28, 30, 43, 63, 65, 75, 80, 110, 111, 117, 127, 128, 137, 139, 140, 141, 142, 145, 147, 155, 157, 169, 172, 178, 201, 202, 209, 213, 215, 216, 218, 225, 226, 228, 231, 232, 245, 247, 256, 264, 265, 267, 274, 282, 303, 308, 317, 328, 335, 342, 350, 352, 358, 363, 374, 381, 385, 400, 405, 406, 407, 408, 409, 414, 424, 426, 429, 432, 436, 439, 440, 443, 444, 448, 468, 470, 501, 502, 546, 548, 549, 552, 560, 582, 598, 613, 614, 617, 619, 624, 626, 631, 635, 637, 642, 645, 647, 649, 650, 653, 670, 684, 689, 692, 697, 701, 702, 705, 709, 712, 714, 716, 724, 741, 744, 751, 755, 767, 769, 771, 773, 787, 806, 808, 812, 815, 817, 829, 833, 855, 866, 878, 879, 886, 890, 894, 895, 899, 902, 903, 921, 923, 929, 932, 933, 935, 940, 944, 945, 947, 949, 964, 968, 969, 970, 975, 979, 982, 988, 990, 995, 998, 1001, 1002, 1004, 1006, 1011, 1012, 1013, 1023, 1062, 1079, 1084, 1089, 1100, 1105, 1107, 1114, 1125, 1127, 1128], "void": [21, 42, 44, 55, 58, 107, 115, 117, 119, 142, 143, 151, 183, 201, 213, 317, 339, 340, 342, 346, 348, 350, 354, 360, 364, 378, 380, 381, 382, 383, 385, 388, 390, 391, 394, 397, 398, 400, 401, 407, 408, 411, 427, 434, 443, 444, 445, 449, 451, 455, 464, 473, 474, 478, 479, 482, 483, 484, 486, 498, 500, 501, 502, 525, 537, 544, 546, 547, 548, 549, 552, 553, 554, 555, 556, 557, 559, 560, 567, 573, 577, 586, 599, 613, 616, 617, 620, 622, 623, 632, 634, 642, 643, 648, 652, 655, 656, 670, 672, 673, 675, 676, 677, 678, 680, 681, 684, 685, 686, 687, 688, 689, 691, 692, 694, 699, 700, 701, 702, 704, 706, 709, 711, 714, 716, 734, 737, 744, 751, 753, 755, 757, 759, 767, 769, 778, 783, 787, 793, 810, 830, 891, 895, 896, 897, 899, 909, 916, 918, 920, 922, 926, 931, 937, 940, 941, 944, 945, 947, 959, 963, 965, 1117], "f": [21, 31, 38, 43, 63, 109, 113, 126, 141, 142, 143, 151, 163, 173, 178, 179, 184, 185, 188, 190, 196, 197, 199, 200, 206, 208, 209, 212, 213, 215, 219, 221, 222, 225, 228, 232, 235, 237, 239, 241, 249, 250, 253, 257, 260, 265, 270, 274, 279, 281, 288, 292, 309, 311, 313, 328, 354, 359, 369, 371, 380, 383, 388, 407, 408, 410, 414, 418, 426, 443, 549, 553, 569, 643, 649, 655, 656, 685, 706, 709, 732, 737, 799, 810, 817, 833, 852, 859, 861, 862, 877, 878, 879, 880, 902, 933, 935, 940, 955, 959, 962, 966, 968, 969, 970, 971, 983, 985, 987, 988, 991, 992, 993, 1012, 1013, 1021, 1028, 1033, 1066, 1068, 1071, 1079, 1105, 1135], "alloc": [21, 142, 143, 160, 162, 201, 209, 212, 215, 225, 228, 250, 352, 381, 397, 402, 405, 408, 411, 449, 533, 535, 549, 551, 552, 559, 578, 583, 590, 595, 606, 610, 614, 639, 650, 653, 687, 692, 701, 702, 706, 726, 729, 732, 734, 759, 761, 775, 778, 810, 816, 895, 896, 897, 917, 977, 1028], "variabl": [21, 29, 87, 89, 90, 97, 104, 110, 111, 136, 141, 142, 151, 155, 159, 161, 162, 168, 172, 173, 176, 177, 178, 179, 181, 184, 185, 186, 191, 192, 197, 198, 200, 201, 203, 207, 210, 211, 213, 214, 215, 218, 219, 221, 223, 229, 230, 231, 232, 234, 236, 237, 239, 243, 246, 251, 252, 253, 255, 256, 259, 262, 265, 269, 271, 272, 273, 275, 276, 277, 278, 279, 285, 290, 291, 292, 294, 303, 304, 305, 306, 307, 308, 317, 319, 320, 339, 341, 342, 350, 355, 363, 370, 374, 375, 378, 379, 380, 384, 386, 387, 390, 392, 396, 397, 399, 400, 402, 403, 404, 410, 411, 412, 414, 416, 421, 422, 428, 430, 434, 436, 455, 463, 469, 478, 483, 488, 529, 534, 549, 557, 558, 565, 577, 617, 624, 639, 644, 650, 653, 655, 682, 684, 696, 715, 722, 723, 724, 725, 726, 742, 761, 773, 803, 804, 807, 810, 834, 853, 869, 910, 915, 918, 922, 923, 924, 929, 947, 957, 958, 959, 964, 966, 968, 971, 972, 978, 979, 980, 981, 982, 986, 994, 998, 1000, 1005, 1009, 1011, 1013, 1014, 1017, 1022, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1078, 1081, 1084, 1085, 1091, 1093, 1098, 1099, 1100, 1126, 1128, 1135, 1141], "filenam": [21, 42, 50, 55, 58, 139, 159, 163, 188, 206, 209, 212, 213, 215, 220, 225, 228, 238, 253, 256, 269, 270, 274, 309, 426, 485, 488, 502, 724, 773, 799, 800, 862, 900, 903, 904, 905, 906, 907, 911, 914, 940, 968, 978, 1023, 1028, 1040, 1049, 1051, 1055, 1061, 1063], "getenv": [21, 483, 928], "fopen": 21, "read": [21, 29, 43, 47, 53, 55, 56, 57, 73, 74, 83, 85, 113, 139, 140, 141, 142, 143, 145, 147, 150, 151, 155, 168, 172, 176, 177, 179, 181, 187, 197, 200, 207, 210, 213, 215, 216, 218, 220, 226, 228, 229, 234, 235, 237, 240, 247, 248, 249, 252, 256, 258, 260, 266, 270, 272, 273, 274, 277, 278, 279, 302, 303, 304, 305, 306, 307, 317, 321, 323, 328, 347, 348, 355, 363, 370, 379, 386, 392, 396, 399, 400, 402, 403, 404, 406, 408, 411, 412, 416, 420, 421, 422, 425, 441, 448, 469, 485, 490, 501, 502, 525, 531, 542, 545, 546, 548, 551, 554, 557, 603, 607, 626, 629, 641, 644, 651, 659, 682, 696, 704, 720, 723, 724, 725, 726, 732, 746, 757, 773, 775, 799, 800, 801, 804, 810, 815, 816, 817, 818, 820, 821, 824, 833, 834, 866, 869, 873, 877, 878, 879, 886, 891, 893, 894, 896, 897, 900, 903, 906, 908, 909, 910, 911, 913, 914, 921, 923, 927, 931, 937, 940, 941, 944, 945, 964, 970, 971, 986, 989, 991, 999, 1007, 1029, 1030, 1040, 1049, 1059, 1064, 1065, 1066, 1067, 1068, 1069, 1071, 1077, 1079, 1087, 1094, 1098, 1138], "onli": [21, 29, 42, 43, 89, 108, 110, 111, 113, 114, 115, 130, 136, 137, 139, 140, 142, 143, 144, 145, 146, 147, 150, 151, 155, 160, 161, 168, 172, 176, 178, 179, 197, 199, 202, 209, 212, 215, 218, 219, 220, 222, 225, 226, 228, 229, 231, 232, 237, 239, 240, 241, 252, 253, 256, 258, 259, 265, 269, 272, 274, 278, 279, 282, 291, 308, 311, 325, 332, 342, 348, 350, 351, 352, 354, 359, 360, 362, 367, 374, 375, 378, 380, 382, 383, 384, 385, 401, 402, 406, 407, 408, 409, 410, 419, 424, 426, 427, 429, 430, 433, 438, 439, 443, 444, 445, 447, 455, 463, 464, 466, 468, 469, 470, 482, 483, 498, 499, 502, 505, 506, 520, 531, 544, 545, 546, 547, 549, 551, 553, 554, 557, 559, 560, 566, 580, 582, 598, 599, 603, 613, 614, 616, 620, 624, 628, 629, 636, 638, 642, 649, 653, 655, 659, 664, 670, 680, 684, 687, 691, 692, 696, 697, 701, 702, 708, 710, 712, 714, 716, 726, 729, 731, 734, 737, 742, 753, 759, 769, 773, 778, 781, 786, 790, 798, 799, 800, 801, 808, 811, 815, 817, 818, 823, 829, 833, 834, 855, 862, 870, 871, 872, 877, 878, 879, 880, 890, 895, 896, 899, 901, 902, 903, 907, 909, 913, 915, 918, 923, 926, 929, 931, 932, 933, 934, 940, 941, 944, 945, 947, 948, 959, 963, 964, 968, 969, 970, 973, 979, 983, 985, 988, 990, 991, 996, 997, 998, 999, 1001, 1002, 1003, 1004, 1006, 1007, 1011, 1016, 1017, 1021, 1023, 1026, 1030, 1035, 1043, 1045, 1046, 1049, 1050, 1054, 1056, 1069, 1071, 1076, 1077, 1078, 1080, 1083, 1092, 1096, 1097, 1105, 1111, 1112, 1114, 1117, 1125, 1127, 1130, 1142], "bullshit": [21, 65, 184, 196, 232, 429, 692, 1135], "everyon": [21, 65, 140, 145, 155, 176, 424, 629, 680, 820, 821, 831, 933], "get": [21, 55, 63, 97, 110, 111, 128, 129, 136, 137, 140, 142, 143, 150, 151, 159, 172, 173, 176, 178, 183, 190, 191, 192, 199, 201, 202, 209, 212, 215, 216, 218, 221, 222, 225, 228, 235, 241, 245, 247, 250, 253, 256, 260, 270, 274, 280, 292, 312, 317, 320, 322, 337, 363, 408, 417, 440, 444, 449, 464, 473, 478, 555, 562, 634, 642, 652, 670, 676, 696, 697, 700, 701, 702, 703, 705, 724, 726, 734, 739, 746, 773, 775, 789, 792, 806, 808, 812, 813, 833, 869, 879, 886, 889, 895, 896, 897, 910, 912, 917, 934, 941, 945, 962, 968, 981, 984, 990, 994, 1002, 1019, 1089, 1096, 1107, 1112, 1117, 1130], "point": [21, 34, 36, 38, 40, 61, 89, 97, 106, 109, 113, 139, 140, 141, 142, 144, 145, 146, 147, 150, 151, 155, 160, 161, 162, 163, 167, 172, 176, 177, 178, 179, 181, 199, 201, 202, 209, 212, 215, 218, 225, 228, 233, 236, 258, 267, 274, 291, 292, 294, 303, 323, 324, 325, 328, 339, 340, 341, 346, 352, 354, 356, 358, 362, 384, 387, 390, 393, 394, 397, 398, 408, 410, 439, 444, 447, 454, 455, 463, 486, 488, 500, 520, 521, 522, 545, 547, 549, 551, 552, 553, 555, 556, 558, 561, 565, 576, 577, 585, 600, 601, 614, 619, 620, 639, 642, 645, 647, 649, 653, 659, 670, 692, 696, 701, 705, 717, 726, 769, 773, 802, 810, 812, 816, 817, 833, 870, 871, 879, 889, 893, 896, 899, 932, 945, 948, 961, 965, 966, 967, 969, 973, 981, 1007, 1011, 1013, 1016, 1078, 1080, 1082, 1084, 1105, 1107, 1114, 1117, 1122, 1126], "unobvi": [21, 773], "best": [21, 30, 39, 48, 57, 140, 141, 142, 151, 164, 221, 350, 382, 404, 411, 414, 415, 424, 503, 547, 552, 616, 681, 694, 714, 761, 763, 765, 769, 771, 810, 833, 855, 871, 878, 879, 915, 929, 933, 961, 975, 981, 1018, 1023, 1025, 1082, 1092], "resourc": [21, 80, 97, 110, 111, 140, 142, 145, 157, 167, 202, 218, 259, 262, 267, 320, 328, 456, 520, 534, 545, 549, 550, 614, 639, 650, 651, 653, 682, 687, 698, 699, 701, 702, 707, 714, 715, 723, 725, 726, 757, 759, 767, 806, 810, 811, 878, 895, 896, 897, 915, 929, 932, 968, 1021], "leaki": 21, "erron": [21, 411, 1033], "worst": [21, 140, 382, 879, 931, 944, 1125, 1128], "extract": [21, 29, 55, 97, 129, 133, 200, 226, 229, 234, 237, 249, 252, 272, 273, 278, 279, 366, 385, 489, 490, 520, 531, 542, 724, 726, 773, 786, 799, 961, 986, 1008, 1030, 1064, 1065, 1066, 1067, 1069, 1077], "common": [21, 24, 132, 140, 197, 213, 214, 226, 232, 237, 385, 394, 425, 500, 578, 705, 724, 798, 870, 871, 879, 903, 940, 970, 975, 976, 977, 993, 1002, 1003, 1007, 1013, 1017, 1020, 1071, 1079, 1080, 1105, 1128], "hm": [21, 32, 63, 180, 190, 209, 212, 215, 222, 309, 763, 789, 790, 897, 990, 1075, 1107, 1112, 1114], "end": [21, 23, 32, 37, 42, 106, 134, 139, 142, 143, 145, 147, 150, 172, 173, 178, 179, 184, 188, 192, 212, 213, 215, 216, 218, 228, 232, 235, 238, 252, 253, 274, 280, 287, 292, 308, 309, 346, 349, 353, 374, 390, 402, 406, 407, 408, 410, 413, 414, 417, 447, 469, 470, 478, 479, 482, 483, 484, 534, 537, 549, 573, 575, 577, 578, 579, 581, 582, 584, 585, 586, 588, 589, 591, 595, 598, 602, 603, 609, 626, 642, 670, 673, 677, 684, 690, 691, 692, 694, 699, 700, 713, 714, 765, 771, 773, 789, 816, 817, 818, 833, 861, 865, 866, 877, 879, 895, 896, 897, 899, 905, 921, 940, 973, 993, 997, 999, 1006, 1009, 1013, 1017, 1021, 1092, 1094, 1096, 1100, 1135, 1138], "sketch": [21, 115, 120, 137, 143, 172, 179, 180, 192, 201, 202, 269, 291, 321, 325, 387, 388, 398, 410, 642, 730, 742, 940], "clearest": 21, "ach": 21, "bad": [21, 43, 136, 139, 142, 149, 164, 172, 197, 203, 219, 220, 222, 231, 232, 247, 268, 269, 290, 298, 363, 406, 410, 424, 566, 632, 682, 693, 700, 725, 726, 741, 753, 778, 781, 890, 891, 916, 918, 922, 923, 944, 963, 968, 970, 983, 984, 995, 1002, 1013, 1043, 1071, 1125], "earliest": 21, "noth": [21, 43, 63, 115, 130, 139, 140, 142, 145, 150, 155, 169, 180, 199, 212, 238, 291, 338, 377, 384, 408, 426, 433, 537, 616, 650, 657, 670, 684, 687, 741, 751, 769, 771, 805, 855, 870, 878, 879, 894, 896, 918, 940, 945, 971, 978, 990, 1011, 1013, 1019, 1105, 1112, 1114], "jump": [21, 45, 104, 139, 374, 378, 537, 684, 687, 694, 812, 865, 944, 1079], "outest": 21, "level": [21, 78, 140, 141, 151, 209, 215, 225, 228, 249, 282, 328, 352, 378, 384, 424, 427, 429, 430, 436, 444, 452, 663, 664, 724, 755, 757, 769, 776, 785, 809, 870, 877, 886, 890, 949, 957, 970, 978, 990, 1011, 1021, 1046, 1050, 1080, 1083, 1093, 1100, 1127], "cleanup_stage1": 21, "screenplai": [22, 60, 133, 142, 163, 167, 219, 231, 240, 258, 266, 268, 279, 287, 290, 291, 294, 317, 425, 441, 449, 520, 523, 526, 529, 532, 535, 538, 541, 577, 578, 598, 730, 733, 738, 743, 747, 749, 785, 788, 791, 794, 938, 942, 946, 1014, 1102, 1109, 1113, 1115, 1118], "dies": [23, 148, 149, 154, 157, 158, 159, 167, 173, 183, 184, 188, 196, 203, 220, 222, 228, 229, 232, 317, 322, 335, 1120, 1122, 1123, 1124, 1129, 1135, 1136, 1138, 1142, 1143], "einreichungsunterlagen": 23, "diesem": [23, 149, 183, 1122, 1139], "formular": 23, "projekten": [23, 1136, 1137], "mehrer": [23, 1129], "projektpartn": 23, "muss": [23, 163, 173, 183, 188, 229, 317, 322, 1120, 1122, 1129, 1136], "federf\u00fchrend": 23, "auftreten": 23, "projektleitung": 23, "projektabwicklung": 23, "seiten": 23, "f\u00f6rdergeb": 23, "erfolgtausschlie\u00dflich": 23, "federf\u00fchrenden": 23, "antragstel": 23, "s\u00e4mtlich": 23, "weiterenprojektpartn": 23, "innen": 23, "zus\u00e4tzlich": [23, 148], "anzugeben": 23, "aufteilung": 23, "f\u00f6rdersumm": 23, "erfolgen": [23, 154, 184], "soll": [23, 149, 175, 204, 243, 1119], "punkt": [23, 149, 159, 175, 185, 229], "erfolgreichemf\u00f6rderantrag": 23, "anschluss": 23, "f\u00f6rdervertrag": 23, "erstellt": 23, "derzuerkannten": 23, "\u00fcberweisungen": 23, "f\u00f6rderraten": 23, "anteil": 23, "dieprojektpartn": 23, "fall": [23, 149, 158, 172, 175, 183, 188, 232, 243, 366, 374, 492, 664, 670, 755, 913, 914, 931, 1073, 1093], "allenprojektpartn": 23, "unterschreiben": 23, "verbindlich": 23, "vereinbart": 23, "privatperson": 23, "organis": [23, 201], "uni": 23, "contemporari": 23, "open": [23, 34, 35, 38, 39, 42, 48, 49, 54, 63, 68, 113, 120, 139, 140, 143, 147, 155, 157, 161, 163, 177, 179, 181, 190, 199, 200, 202, 206, 209, 212, 213, 215, 220, 223, 228, 235, 238, 240, 253, 256, 258, 260, 265, 267, 270, 274, 309, 324, 363, 424, 426, 432, 739, 767, 775, 800, 801, 809, 810, 812, 815, 817, 858, 877, 886, 894, 895, 900, 903, 905, 906, 909, 911, 914, 915, 937, 940, 944, 947, 964, 970, 971, 1040, 1066, 1068, 1079, 1098, 1105, 1120, 1137, 1138], "wer": [23, 148], "unser": [23, 176, 184, 1120], "motiv": [23, 28, 97, 812, 831, 929, 976, 977], "300": [23, 159, 161, 173, 209, 212, 215, 220, 222, 228, 232, 235, 253, 274, 280, 309, 340, 342, 344, 360, 384, 572, 573, 574, 575, 576, 578, 579, 580, 581, 595, 746], "zeichen": [23, 222], "lebe": 23, "einerseit": [23, 154], "kleineren": 23, "gr\u00f6\u00dferen": [23, 1137], "andererseit": [23, 154], "haupts\u00e4chlich": [23, 184, 1135], "unternehmen": 23, "halt": [23, 110, 111, 183, 212, 228, 235, 238, 253, 260, 270, 274, 806, 864, 879], "bringen": [23, 1120], "schulungsunterlagen": [23, 1119], "wartbarkeit": 23, "nichtverf\u00fcgbarkeit": 23, "problem": [23, 45, 57, 80, 107, 113, 115, 128, 140, 147, 156, 159, 161, 163, 164, 170, 172, 173, 176, 177, 179, 181, 192, 196, 201, 218, 220, 226, 240, 245, 247, 258, 262, 265, 266, 268, 269, 277, 282, 283, 291, 294, 303, 324, 335, 363, 374, 384, 385, 388, 402, 408, 410, 426, 431, 455, 470, 514, 520, 555, 569, 582, 614, 617, 641, 714, 726, 773, 812, 872, 933, 957, 959, 963, 968, 973, 975, 978, 979, 990, 1002, 1016, 1066, 1071, 1073, 1077, 1096, 1105, 1106, 1120, 1127, 1128], "darstellt": 23, "wen": 23, "nutzen": [23, 1138], "400": [23, 137, 142, 159, 173, 183, 212, 215, 257, 274, 292, 426, 595, 1028, 1031], "stellen": [23, 154], "kursverlauf": 23, "vorhandenem": 23, "zusammen": [23, 1119], "bereiten": [23, 183], "kursergebniss": 23, "editoren": 23, "kreieren": 23, "warten": 23, "kursmateri": 23, "endbenutz": 23, "konsumieren": 23, "usecas": [23, 890, 993], "gel\u00f6st": [23, 173], "500": [23, 183, 190, 209, 212, 215, 257, 595, 870, 897, 1028, 1031], "hierarchisch": 23, "gruppierung": 23, "einzelthemen": 23, "zuwenig": 23, "bauen": [23, 1122, 1132, 1141], "aufeinand": [23, 860], "explizit": [23, 157, 167, 173, 183, 243, 270, 1122, 1123, 1139], "abh\u00e4ngigkeitsbeziehungen": [23, 1132], "fehlen": 23, "extrem": [23, 140, 199, 220, 228, 235, 238, 260, 317, 322, 385, 424, 577, 646, 694, 773, 800, 801, 1083, 1120, 1132], "verringert": 23, "zusammenarbeit": [23, 1119], "trainern": 23, "fehlend": [23, 159], "aggregierbarkeit": 23, "bzw": [23, 148, 157, 163, 167, 189, 335, 1129, 1136, 1138], "referenzierbarkeit": 23, "fremdunterlagen": 23, "analog": [23, 173, 940, 1089], "librari": [23, 63, 71, 74, 78, 85, 97, 103, 104, 106, 108, 110, 111, 113, 140, 142, 151, 159, 161, 163, 168, 169, 170, 177, 179, 181, 200, 202, 209, 215, 225, 228, 232, 244, 245, 256, 258, 282, 283, 318, 319, 320, 335, 336, 339, 340, 349, 357, 380, 397, 407, 414, 420, 430, 431, 436, 438, 439, 448, 462, 485, 488, 490, 491, 492, 493, 494, 495, 496, 497, 500, 502, 509, 528, 542, 543, 587, 593, 597, 605, 606, 607, 609, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 659, 664, 690, 715, 724, 725, 726, 751, 803, 806, 807, 869, 890, 891, 892, 897, 898, 900, 907, 908, 910, 915, 918, 924, 927, 930, 932, 944, 947, 948, 949, 950, 952, 953, 954, 955, 957, 959, 994, 996, 1011, 1013, 1016, 1083, 1101, 1114, 1122, 1124, 1126, 1127, 1138, 1140], "anfangen": 23, "geben": [23, 1123, 1124], "trainingsunterlagen": 23, "ging": [23, 148, 335], "funktioniert": [23, 173, 222], "projektergebni": 23, "basiert": [23, 243, 1120, 1123, 1132, 1139], "popul\u00e4ren": 23, "dokumentationstool": 23, "gestaltet": [23, 167, 1119, 1129], "eigentlich": [23, 159, 173, 1120, 1123], "kern": 23, "begleitet": [23, 175], "meinem": [23, 149, 158, 184, 861, 1135], "eigenen": [23, 1129, 1136], "quasi": [23, 163, 167], "spin": [23, 714, 776, 810], "off": [23, 114, 139, 141, 142, 145, 150, 161, 172, 192, 235, 363, 366, 405, 413, 414, 429, 435, 436, 491, 492, 497, 537, 617, 670, 705, 767, 778, 804, 829, 857, 870, 877, 879, 905, 914, 923, 933, 940, 999, 1017, 1051, 1076, 1130], "anwendbar": [23, 1142], "klarer": 23, "bezug": [23, 229], "f\u00f6rdervoraussetzung": 23, "bitt": [23, 148, 167, 173, 183, 184, 1119, 1135], "gehen": 23, "folgenden": [23, 167, 335, 861], "ausschlie\u00dflich": 23, "jene": 23, "aspekt": [23, 1121, 1129, 1136, 1139], "klaren": 23, "mehrwert": 23, "technologi": [23, 212, 931, 947, 1028], "infrastruktur": [23, 1120, 1129, 1136], "sozial": 23, "gesellschaft": 23, "umwelt": 23, "wirtschaftlich": [23, 175], "wissenschaftlich": 23, "kooperationen": 23, "regionalpolitik": 23, "framework": [23, 78, 157, 167, 176, 202, 218, 440, 499, 877, 879, 1097, 1105, 1106, 1141, 1143], "jeglich": [23, 1129], "art": [23, 32, 45, 959, 1128], "konsistenzgecheckt": 23, "crossreferenc": 23, "webseiten": 23, "hinweg": [23, 184, 1135], "erm\u00f6glicht": [23, 175, 335], "gesellschaftlich": 23, "\u00f6ffentlich": [23, 154, 1119], "verf\u00fcgbarkeit": 23, "erleichterung": 23, "machen": [23, 148, 159, 163, 173, 222, 312, 335, 1120, 1123, 1124, 1129, 1143], "commun": [23, 63, 72, 73, 74, 78, 81, 83, 87, 125, 128, 140, 155, 164, 172, 187, 256, 291, 314, 323, 324, 400, 444, 715, 716, 725, 726, 732, 773, 785, 806, 869, 870, 877, 878, 879, 894, 899, 910, 915, 924, 931, 934, 940, 945, 979, 1067, 1070, 1087, 1125, 1128, 1130, 1139, 1140], "trainerinnen": 23, "kann": [23, 37, 148, 149, 157, 163, 167, 173, 183, 196, 203, 243, 317, 322, 335, 1119, 1120, 1122, 1124, 1129, 1136, 1137, 1138, 1141, 1143], "sch\u00f6pfen": 23, "trainerinnenn": 23, "gegeneinand": 23, "genau": [23, 157, 159, 173, 312, 861, 1122, 1139, 1141, 1142], "die_der": 23, "adressat_in": 23, "je": [23, 32, 149, 183], "konkret": 23, "eingrenzen": 23, "desto": 23, "dieser": [23, 37, 148, 167, 183, 235, 312, 335, 1119, 1120, 1121, 1129, 1131, 1132, 1138, 1139], "adressat_innen": 23, "ber\u00fccksichtigen": 23, "wahrscheinlich": [23, 163, 1129, 1136], "deshalb": 23, "nachhaltig": 23, "wirkung": 23, "weil": [23, 159, 173, 175, 196, 235, 292, 335, 1120, 1122, 1124], "speziellen": 23, "konzepten": 23, "unterschiedlich": [23, 184, 229, 1135], "zielgruppen": 23, "beziehung": [23, 167], "zueinand": 23, "stehen": [23, 173, 1141], "anbieter_innen": 23, "nachfrager_innen": 23, "drei": [23, 148, 159, 167, 173, 183, 188, 190, 209, 212, 220, 222, 225, 228, 235, 238, 253, 260, 270, 274, 280, 292, 312], "angeben": 23, "m\u00f6glichst": 23, "erheblich": 23, "ihrer": [23, 220, 317, 322, 1129, 1136], "jeweiligen": [23, 1119], "sein": [23, 149, 157, 158, 175, 183, 184, 196, 222, 260, 1120, 1122, 1135, 1136, 1138, 1141, 1142, 1143], "dann": [23, 149, 159, 167, 173, 184, 222, 228, 229, 235, 270, 335, 1120, 1132, 1135, 1143], "einzelnen": 23, "aussieht": [23, 1121], "erst": [23, 167, 183, 196, 222, 229, 235, 253, 292, 312, 1120, 1122], "bestandteil": [23, 1141], "n": [23, 35, 38, 40, 50, 63, 111, 142, 151, 159, 160, 161, 167, 173, 183, 188, 190, 191, 199, 201, 204, 205, 206, 209, 212, 213, 215, 218, 220, 222, 225, 228, 232, 235, 238, 250, 253, 260, 264, 270, 274, 292, 308, 309, 310, 312, 317, 339, 340, 342, 346, 348, 350, 352, 354, 359, 362, 372, 374, 380, 381, 385, 390, 398, 402, 407, 426, 427, 434, 501, 534, 553, 559, 577, 623, 624, 627, 628, 630, 631, 634, 635, 636, 637, 638, 639, 647, 649, 664, 726, 751, 787, 806, 810, 820, 830, 833, 846, 862, 864, 865, 879, 891, 893, 894, 895, 896, 897, 903, 904, 906, 931, 937, 941, 944, 947, 953, 959, 963, 965, 990, 991, 993, 1008, 1010, 1015, 1016, 1021, 1022, 1066, 1068, 1105, 1117], "l\u00f6sen": 23, "wollen": [23, 37, 188, 335, 1124, 1129, 1132, 1136, 1138], "hilfestellung": 23, "abgrenzung": 23, "organisationen": 23, "privatpersonen": 23, "bestimmt": 23, "branch": [23, 50, 54, 61, 132, 143, 146, 155, 259, 262, 378, 419, 420, 746, 773, 775, 785, 877, 879, 1006, 1137, 1143], "gruppen": 23, "staatlich": 23, "verwaltung": 23, "privat": [23, 57, 102, 107, 113, 142, 154, 155, 167, 169, 176, 177, 180, 200, 213, 218, 230, 249, 265, 267, 287, 316, 317, 322, 434, 438, 443, 445, 449, 451, 456, 466, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 488, 528, 534, 543, 547, 549, 551, 552, 554, 555, 556, 558, 560, 570, 585, 586, 603, 613, 615, 616, 628, 639, 642, 645, 646, 648, 649, 652, 653, 664, 666, 667, 668, 670, 672, 673, 676, 677, 678, 679, 685, 686, 687, 700, 701, 702, 705, 706, 714, 716, 726, 767, 802, 803, 808, 822, 828, 869, 886, 991, 1098, 1100, 1117, 1139], "verein": 23, "npo": 23, "wissenschaft": 23, "universit\u00e4t": 23, "fachhochschulen": 23, "richtungen": 23, "regionen": 23, "stadt": [23, 205], "land": [23, 432], "bezirk": 23, "gemeinden": 23, "interessensgruppen": 23, "selbstvermarkter_innen": 23, "landwirtschaft": 23, "handwerk": 23, "u": [23, 32, 34, 35, 36, 38, 42, 53, 59, 62, 113, 122, 142, 145, 150, 160, 170, 173, 176, 178, 184, 201, 212, 216, 220, 222, 225, 228, 250, 257, 274, 294, 362, 393, 418, 702, 742, 748, 783, 810, 818, 829, 830, 832, 833, 857, 870, 877, 879, 898, 935, 944, 947, 957, 965, 1002, 1004, 1028, 1079, 1083, 1087, 1100, 1105, 1112, 1128, 1135], "altersgrupp": 23, "genderspezifisch": 23, "frauen": 23, "region": [23, 140, 729, 757], "grupp": [23, 188, 326, 861], "sch\u00fcler_innen": 23, "lehrer_innen": 23, "thematisch": 23, "deutsch": [23, 204, 315, 316, 1119], "fl\u00fcchtling": 23, "posit": [23, 29, 63, 147, 173, 176, 177, 179, 181, 183, 188, 196, 200, 209, 216, 220, 225, 226, 228, 235, 238, 249, 252, 259, 262, 264, 266, 268, 269, 272, 274, 278, 280, 284, 287, 290, 291, 294, 303, 348, 385, 398, 537, 578, 585, 594, 595, 726, 833, 870, 878, 894, 895, 899, 940, 968, 969, 972, 1013, 1014, 1016, 1017, 1018, 1069, 1084, 1092, 1107, 1112], "zielgruppentyp": 23, "350": [23, 212, 215, 260, 274, 1028], "bereitet": 23, "vor": [23, 148, 149, 163, 173, 185, 220, 1132, 1141], "lt": [23, 32, 35, 36, 142, 147, 159, 162, 167, 168, 173, 178, 183, 188, 190, 196, 199, 204, 209, 212, 215, 220, 222, 225, 228, 232, 235, 238, 241, 250, 253, 257, 260, 270, 274, 280, 292, 311, 312, 313, 490, 507, 509, 542, 587, 593, 597, 606, 609, 610, 639, 726], "zielvorgaben": 23, "basierend": [23, 159, 1119, 1124], "existierendem": 23, "f\u00fchrt": [23, 149, 1139], "jederzeit": [23, 154, 163, 335], "\u00fcberblick": [23, 163, 167, 229, 243, 335, 336, 1119, 1127, 1129, 1135, 1136, 1139, 1141], "behaltend": 23, "behandelten": 23, "fragen": [23, 175, 191, 317, 322, 335, 1119, 1129, 1136], "antworten": [23, 175], "info": [23, 150, 257, 258, 414, 418, 419, 420, 426, 427, 429, 552, 701, 748, 878, 918, 948, 949, 1105], "bed\u00fcrfni": [23, 148], "schulungsagenden": 23, "erstellen": [23, 335, 1124, 1129], "zeitaufw\u00e4ndig": 23, "fehlertr\u00e4chtig": 23, "vom": [23, 64, 148, 157, 158, 159, 173, 183, 184, 203, 228, 232, 1129, 1135, 1136, 1143], "erwartet": [23, 149, 173], "w\u00e4hrend": [23, 1119], "einzugehen": [23, 175, 1142], "geplanten": [23, 1119], "verlassen": [23, 795], "birgt": 23, "chao": [23, 831, 1002], "teilnehmerinnen": 23, "\u00fcbersichtlich": 23, "nachbearbeitung": 23, "hinterlassen": [23, 148], "absch\u00e4tzung": 23, "zielgruppengr\u00f6\u00df": 23, "affinem": 23, "background": [23, 151, 244, 245, 247, 298, 640, 644, 670, 682, 709, 723, 725, 726, 748, 811, 878, 916, 925, 931, 979], "inklus": [23, 160, 173, 183, 196, 1119, 1124, 1129], "betroffen": 23, "eu": [23, 32], "20000": [23, 139, 215], "erkennung": 23, "abstand": 23, "erfordert": [23, 1129], "vgl": [23, 173, 1139, 1142], "frosch": 23, "wassergla": 23, "selbst": [23, 37, 163, 173, 183, 795, 1119, 1120, 1129, 1132, 1138, 1143], "umstellung": 23, "zus\u00e4tzlichen": 23, "bedeutet": [23, 298], "besten": [23, 163, 229, 1122], "einsatz": [23, 1120], "erw\u00e4gung": 23, "ziehen": 23, "angegebenen": 23, "erheblichen": [23, 1122], "bed\u00fcrfnissen": 23, "kenntni": 23, "erlangt": 23, "mitgli": 23, "editor": [23, 30, 63, 155, 172, 303, 858, 995, 999, 1078, 1097], "verfasst": 23, "identisch": 23, "obig": 23, "behebt": 23, "inkonsistenzen": 23, "baut": [23, 1120, 1138], "neue": [23, 173, 183, 215, 243, 292, 312, 335, 1139], "verliert": [23, 1143], "aufbaubeziehungen": 23, "verlangt": [23, 1119], "grundlag": 23, "folienmateri": 23, "meist": [23, 1138], "powerpoint": [23, 30], "propriet\u00e4r": 23, "formaten": 23, "praktisch": [23, 159, 1119], "unm\u00f6glich": 23, "macht": [23, 157, 159, 163, 167, 173, 179, 183, 225, 229, 312, 1122, 1129, 1136, 1143], "artefakttypen": 23, "livehack": [23, 24, 60, 113, 133, 159, 165, 167, 176, 177, 184, 203, 216, 218, 219, 231, 240, 245, 247, 248, 256, 259, 266, 268, 273, 279, 284, 287, 290, 291, 294, 317, 335, 425, 441, 448, 520, 724, 726, 738, 775, 1014, 1102, 1109, 1135], "st\u00fcckwerk": 23, "trainerin": 23, "oben": [23, 148, 173, 184, 190, 1135], "zielt": 23, "darauf": [23, 148, 159, 1119, 1122], "transpar": [23, 29, 37, 757, 759, 809, 1084], "wiederzuverwenden": 23, "sodass": [23, 37, 167, 1138, 1143], "aufgebrochen": 23, "schwer": [23, 163, 173, 335, 1129, 1136, 1141], "abzusch\u00e4tzen": 23, "abzielt": 23, "weg": [23, 148, 149, 159, 163, 175, 188, 203, 243, 335, 1120, 1122, 1123, 1124, 1136], "dorthin": 23, "m\u00fcssen": [23, 173, 317, 322, 1129, 1136], "unterst\u00fctzt": [23, 1143], "kursf\u00fchrung": [23, 335], "fragt": [23, 149], "unklarheiten": 23, "weist": [23, 148], "etwaig": 23, "verwandt": [23, 1122], "hin": [23, 335], "plausibl": [23, 142], "realistisch": 23, "bzgl": 23, "kursdauer": 23, "strukturierten": [23, 184], "langweiligen": 23, "tatsachen": 23, "entsprechend": 23, "hunderttausend": 23, "allerd": [23, 173, 175, 1123, 1124, 1138, 1143], "keinen": [23, 148, 292, 1122], "einfluss": 23, "wahl": [23, 1143], "gespr\u00e4ch": 23, "betroffenen": 23, "assoziieren": 23, "metadaten": 23, "setzt": [23, 157, 1120, 1129], "vorau": 23, "beziehungen": 23, "passt": [23, 183, 184, 1135], "ganz": [23, 148, 149, 158, 159, 163, 173, 175, 189, 190, 204, 221, 222, 335, 1123, 1124, 1138], "gut": [23, 148, 149, 173, 184, 335, 653, 1119, 1135], "y": [23, 111, 122, 151, 160, 161, 163, 190, 199, 205, 206, 212, 213, 215, 216, 228, 238, 241, 250, 253, 260, 270, 274, 280, 363, 369, 387, 390, 393, 394, 398, 410, 414, 426, 488, 498, 544, 545, 546, 547, 549, 551, 552, 553, 554, 555, 556, 558, 560, 562, 563, 570, 577, 585, 624, 645, 646, 647, 649, 664, 666, 667, 668, 685, 696, 705, 741, 742, 773, 774, 806, 820, 833, 835, 846, 852, 877, 878, 879, 953, 961, 967, 1025, 1028, 1076], "algorithmen": [23, 243, 1124], "automatisch": [23, 1139, 1143], "berechnen": 23, "semiautomatisch": 23, "kursnavig": 23, "nachbereitung": 23, "plaintext": 23, "artefakt": [23, 1124], "text": [23, 27, 39, 40, 60, 136, 150, 161, 172, 175, 180, 181, 188, 200, 201, 206, 213, 220, 222, 240, 243, 246, 253, 255, 274, 276, 359, 433, 726, 803, 865, 869, 896, 947, 995, 1002, 1008, 1017, 1026, 1049, 1083, 1090, 1095, 1097, 1098, 1132], "restrukturierung": 23, "o": [23, 29, 32, 38, 63, 78, 85, 90, 97, 98, 100, 107, 110, 111, 113, 119, 122, 133, 140, 142, 143, 150, 151, 159, 163, 167, 177, 179, 180, 181, 183, 188, 190, 191, 197, 200, 201, 205, 207, 210, 211, 212, 213, 216, 217, 218, 219, 224, 225, 229, 230, 231, 232, 234, 236, 239, 241, 243, 246, 250, 252, 255, 256, 257, 259, 260, 262, 265, 266, 269, 271, 272, 273, 275, 276, 278, 280, 290, 292, 294, 302, 303, 304, 305, 306, 307, 308, 317, 322, 324, 335, 337, 339, 355, 370, 379, 385, 386, 390, 392, 396, 399, 402, 403, 412, 414, 416, 418, 419, 421, 422, 426, 427, 433, 438, 452, 479, 490, 501, 542, 560, 644, 682, 708, 714, 715, 716, 723, 724, 725, 726, 741, 742, 750, 751, 773, 780, 799, 800, 801, 802, 803, 804, 806, 807, 809, 810, 818, 830, 833, 837, 838, 840, 841, 844, 845, 847, 853, 861, 862, 866, 869, 870, 877, 878, 890, 900, 903, 904, 905, 906, 907, 910, 915, 916, 924, 927, 930, 931, 932, 941, 947, 948, 949, 953, 955, 959, 963, 964, 965, 968, 970, 972, 973, 974, 978, 994, 997, 1000, 1002, 1008, 1016, 1023, 1028, 1029, 1030, 1040, 1043, 1051, 1054, 1055, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1071, 1076, 1084, 1085, 1100, 1105, 1112, 1122, 1129, 1142], "konsistent": 23, "referenzierung": 23, "fremdmateri": 23, "speisekart": 23, "unterst\u00fctzung": 23, "themenauswahl": [23, 1119], "korrekt": [23, 1122], "vorbereitet": [23, 335], "ma\u00dfnahmen": 23, "sicherstellung": 23, "geplant": 23, "beispielsweis": [23, 154, 1142], "rahmen": 23, "webplattform": 23, "entsteht": 23, "erh\u00f6hung": 23, "sichtbarkeit": [23, 1122, 1139], "aktuel": 23, "inhalt": [23, 173, 175, 205, 318, 795, 1119, 1143], "wartung": 23, "performanceverbesserungen": 23, "plane": [23, 161, 163, 1073], "kein": [23, 158, 159, 163, 173, 183, 190, 205, 241, 260, 312, 335, 1137], "impactmein": 23, "sicherzustellen": 23, "erkl\u00e4rung": [23, 197], "erkl\u00e4ren": [23, 1122], "gew\u00fcnscht": [23, 173], "erreicht": [23, 148, 149, 1136], "hatt": [23, 148, 149, 163, 173, 175], "button": [23, 113, 139, 147, 226, 870], "gew\u00e4hlt": [23, 148, 149], "dzugeh\u00f6rig": 23, "textfeld": 23, "l\u00e4sst": [23, 1138], "bearbeiten": 23, "daher": [23, 1143], "konvertiert": 23, "unten": [23, 149, 163, 173, 1120], "beschriebenen": 23, "kan\u00e4len": 23, "promot": [23, 144], "angab": 23, "quellen": 23, "literatur": [23, 201, 557], "lightweight": [23, 130, 155, 172, 176, 192, 226, 228, 240, 645, 703, 706, 1071, 1083, 1125], "daringfirebal": 23, "project": [23, 24, 29, 30, 38, 42, 53, 59, 62, 65, 68, 106, 113, 114, 115, 117, 119, 122, 130, 136, 140, 141, 145, 146, 147, 152, 159, 161, 163, 169, 172, 176, 179, 186, 191, 200, 219, 223, 226, 229, 256, 259, 266, 273, 321, 322, 328, 330, 335, 336, 406, 413, 417, 425, 427, 428, 429, 432, 433, 435, 437, 440, 441, 442, 448, 488, 489, 498, 501, 561, 563, 564, 708, 726, 773, 812, 868, 870, 872, 877, 878, 889, 907, 947, 948, 949, 962, 963, 1024, 1030, 1057, 1059, 1069, 1070, 1072, 1073, 1077, 1085, 1087, 1102, 1104, 1108, 1109, 1114], "docutil": [23, 32, 34, 35, 36, 38], "sourceforg": 23, "io": [23, 32, 55, 63, 91, 119, 140, 144, 146, 161, 163, 177, 179, 180, 181, 182, 189, 191, 192, 200, 201, 214, 230, 246, 253, 255, 261, 276, 277, 291, 305, 317, 320, 322, 324, 339, 543, 724, 726, 750, 769, 770, 785, 803, 806, 814, 869, 878, 879, 932, 940, 961, 968, 1021, 1121, 1129, 1131, 1136, 1138, 1142], "generatoren": [23, 163, 230, 335], "staticgen": 23, "learn": [23, 29, 65, 68, 70, 75, 77, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 123, 140, 142, 160, 161, 163, 172, 176, 180, 201, 210, 290, 294, 303, 318, 320, 424, 688, 726, 815, 870, 878, 932, 994, 995, 1069, 1073, 1077, 1085, 1107], "moodl": [23, 106, 109, 110, 111, 113, 147, 321, 323, 324, 625, 639, 726, 803, 807, 822, 828, 847, 853, 869, 954, 957], "schoologi": 23, "eduongo": 23, "produkt": 23, "dienstleistungen": 23, "recherch": [23, 163], "hinblick": [23, 1131], "ihnen": [23, 149, 860, 1119, 1129, 1136], "nennen": 23, "beschreiben": 23, "st\u00e4rken": [23, 1122], "schw\u00e4chen": [23, 1124], "konkurrierenden": 23, "relevant": [23, 163, 335, 1142], "anbiet": 23, "ziel": [23, 1120, 1136], "allumfassend": 23, "eh": [23, 32, 173, 183, 188, 196, 222, 228, 232, 235, 280], "vielmehr": 23, "bietet": [23, 154, 157, 1138], "beim": [23, 148, 149, 159, 163, 173, 1122], "verfassen": 23, "kernthema": 23, "zwischen": [23, 157, 173, 183, 190, 196, 335, 1122, 1123, 1124, 1136, 1143], "benutz": [23, 1139], "vorgaben": 23, "existiert": [23, 173, 185], "wald": 23, "dass": [23, 148, 149, 157, 159, 163, 167, 173, 184, 188, 190, 204, 317, 322, 335, 1119, 1122, 1123, 1124, 1129, 1135, 1136, 1139, 1143], "beisteuert": 23, "eben": [23, 154, 157, 183], "\u00fcbergreifend": 23, "definiert": [23, 159, 173, 1119, 1122], "ansatz": 23, "mir": [23, 148, 149, 163, 173, 184, 188, 220, 317, 322, 335, 1122, 1135], "verfolgt": [23, 1136], "essentiel": 23, "gesundheit": 23, "unterlagen": [23, 136, 203, 219, 231, 335], "licht": 23, "lesen": [23, 157, 158, 159, 173, 185, 317, 322], "einig": [23, 149, 160, 175, 335, 1122, 1129], "plugin": [23, 142, 452, 689, 961], "helfen": 23, "lieblo": 23, "halbherzig": 23, "On": [23, 97, 101, 106, 109, 110, 111, 113, 122, 140, 142, 155, 176, 192, 202, 218, 234, 236, 244, 245, 247, 250, 256, 262, 265, 298, 317, 402, 408, 417, 420, 452, 490, 498, 587, 606, 610, 639, 642, 682, 690, 709, 725, 726, 751, 774, 778, 803, 806, 807, 869, 871, 877, 879, 886, 890, 891, 894, 898, 905, 908, 910, 927, 935, 945, 950, 957, 958, 962, 1000, 1087, 1091, 1107, 1125], "zentral": [23, 136], "ergebni": [23, 225], "niemand": 23, "doc": [23, 37, 39, 65, 114, 119, 144, 146, 159, 160, 162, 192, 200, 207, 209, 215, 224, 225, 228, 232, 235, 250, 293, 302, 314, 317, 322, 325, 326, 337, 537, 729, 744, 750, 753, 833, 855, 913, 1016, 1082], "show": [23, 24, 27, 29, 43, 58, 63, 113, 117, 120, 139, 140, 142, 143, 147, 168, 176, 179, 180, 192, 201, 209, 215, 218, 225, 226, 228, 256, 268, 269, 282, 290, 302, 303, 321, 323, 324, 325, 328, 387, 427, 429, 438, 469, 485, 491, 537, 626, 736, 755, 757, 789, 800, 801, 833, 855, 858, 860, 862, 870, 872, 877, 878, 879, 898, 929, 931, 935, 940, 944, 957, 959, 967, 1006, 1023, 1025, 1076, 1077, 1100, 1107, 1114, 1127], "revealj": 23, "option": [23, 31, 78, 134, 140, 141, 142, 146, 150, 155, 159, 164, 180, 192, 216, 228, 232, 240, 243, 244, 245, 253, 258, 262, 274, 282, 283, 291, 294, 298, 317, 337, 346, 347, 363, 374, 375, 414, 427, 430, 431, 439, 440, 446, 473, 501, 726, 742, 793, 797, 800, 801, 809, 861, 879, 880, 882, 890, 903, 907, 941, 949, 1005, 1023, 1026, 1100, 1107, 1114, 1122, 1127, 1140], "webslid": 23, "tv": [23, 32, 147], "sicht": [23, 158, 229, 1122], "entscheidend": 23, "usp": 23, "vorteilhaft": 23, "unterscheidet": [23, 1122], "600": [23, 209, 215, 595], "kernfeatur": 23, "inbeziehungsetzen": 23, "dessen": [23, 158, 173, 270, 335, 1120, 1124, 1137], "versagen": 23, "implementierung": 23, "solcher": [23, 157, 173], "featur": [23, 29, 42, 46, 55, 56, 78, 80, 113, 120, 145, 147, 157, 168, 173, 176, 177, 179, 181, 186, 191, 200, 209, 215, 218, 225, 226, 228, 229, 231, 232, 271, 298, 319, 335, 336, 412, 416, 421, 422, 424, 425, 427, 616, 641, 644, 651, 658, 669, 683, 693, 694, 698, 702, 707, 715, 722, 723, 725, 726, 765, 773, 870, 878, 879, 899, 931, 941, 948, 949, 965, 979, 980, 981, 982, 986, 989, 996, 1008, 1009, 1024, 1027, 1028, 1029, 1030, 1043, 1054, 1057, 1058, 1059, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1072, 1073, 1074, 1077, 1081, 1085, 1087, 1089, 1099, 1102, 1104, 1105, 1109, 1120, 1122, 1123, 1125, 1129, 1136], "indem": [23, 183, 318, 1129], "foku": [23, 335], "schulbetrieb": 23, "legen": [23, 860], "ferner": 23, "schwere": 23, "abh\u00e4ngigkeiten": [23, 1132], "fett": [23, 173, 190], "datenbanken": [23, 196, 335], "webserv": [23, 878], "hintergrund": [23, 183], "redaktionel": 23, "arbeit": [23, 163, 1120], "offlin": 23, "laptop": [23, 141, 143, 150, 889], "zug": 23, "erledigen": [23, 1120], "einschr\u00e4nkung": 23, "geserv": 23, "erarbeitet": [23, 1119], "sinn": [23, 167, 1122], "prinzip": [23, 1139, 1141, 1143], "kostenlo": 23, "genutzt": [23, 157], "weiterentwickelt": [23, 1124, 1129], "f\u00f6rderbedingungen": 23, "projektseit": 23, "ver\u00f6ffentlichen": 23, "nachvollziehbar": 23, "strukturieren": 23, "f\u00f6rderzusag": 23, "hinwei": 23, "verpflichtend": 23, "gesondert": 23, "erw\u00e4hnen": 23, "projektzwischenbericht": 23, "projektzusammenfassung": 23, "projektendbericht": 23, "entwicklerdokument": 23, "anwenderdokument": 23, "dienstleistungsbeschreibung": 23, "abh\u00e4ngig": 23, "dokument": [23, 158, 173, 184, 205, 220, 232, 292, 312, 1137], "externkommunik": 23, "erreichung": 23, "nachhaltigkeit": 23, "projektergebnistyp": 23, "haupteigenschaften": 23, "funktionalit\u00e4t": [23, 173], "sourcecod": [23, 157], "bestehend": 23, "unabh\u00e4ngigem": 23, "unitgetestetem": 23, "core": [23, 59, 62, 139, 140, 142, 143, 172, 175, 179, 184, 197, 212, 223, 226, 228, 235, 238, 253, 257, 260, 270, 274, 340, 352, 397, 441, 442, 449, 454, 468, 469, 500, 552, 557, 650, 680, 700, 744, 748, 773, 810, 848, 864, 929, 932, 933, 944, 945, 961, 1028, 1071, 1076, 1089, 1090, 1092, 1093, 1105, 1140], "reih": [23, 154, 167, 175], "direct": [23, 37, 39, 63, 113, 119, 137, 140, 201, 259, 262, 303, 374, 385, 420, 433, 560, 706, 732, 809, 866, 893, 895, 911, 913, 914, 949, 963, 990, 1076, 1084, 1093, 1127, 1130], "generierten": 23, "kursagenda": 23, "graphen": 23, "lizenz": 23, "gpl": [23, 552, 701, 729], "pypi": [23, 123, 136, 172, 176, 191, 207, 223, 249, 1099, 1100, 1105], "installierbar": 23, "paket": [23, 157, 1120], "generiert": [23, 173], "readthedoc": [23, 32, 39], "gehostet": 23, "verf\u00fcgbar": [23, 933, 1132], "obigen": 23, "bisherigen": [23, 1124], "aktuellen": [23, 183], "bereich": [23, 163, 335], "umfeld": 23, "projektantrag": 23, "bisher": [23, 136, 1119], "softwarebasi": 23, "grundlegend": [23, 185, 1124, 1129, 1136, 1138, 1141], "semiprofessionel": 23, "visualisierung": 23, "plan": [23, 42, 61, 139, 163, 172, 207, 216, 226, 291, 316, 317, 321, 325, 331, 424, 540, 650, 708, 773, 1105, 1112], "kurz": [23, 148, 149, 173, 175, 184, 189, 204, 229, 1121, 1135, 1138], "lebensl\u00e4uf": 23, "projektbeteiligten": 23, "sowi": [23, 1132], "ver\u00f6ffentlichungen": 23, "b\u00fccher": 23, "fachartikel": 23, "patent": 23, "vortr\u00e4g": 23, "gebiet": [23, 149, 1141], "projektinhalt": 23, "verdeutlichen": [23, 1120], "teamleitung": 23, "softwareprojekt": 23, "stefan": [23, 158], "walkner": 23, "1983": [23, 543], "hallein": 23, "master": [23, 61, 122, 143, 146, 155, 318, 319, 769, 773, 862, 874], "scienc": [23, 28, 78, 147, 161, 172, 176, 181, 210, 279, 293, 319, 543, 596, 996, 1075, 1076, 1077, 1078], "salzburg": 23, "consult": [23, 59, 62, 137, 140, 153, 191, 209, 215, 225, 228, 232, 323, 449], "isamberth": 23, "adnet": 23, "2000": [23, 196, 199, 215, 220, 232, 253, 426, 452, 933], "2002": [23, 215, 552, 701], "divers": [23, 164, 1121], "2005": [23, 543], "2007": 23, "entwicklungsleit": 23, "nextsens": 23, "2016": [23, 175, 176, 197, 200, 215, 223, 249, 256, 264, 273, 1071], "programmiererfahrung": [23, 1129, 1136, 1143], "bash": [23, 99, 113, 137, 147, 156, 180, 190, 192, 212, 220, 228, 235, 238, 246, 253, 255, 256, 260, 267, 270, 274, 276, 317, 318, 319, 322, 324, 336, 448, 462, 490, 491, 492, 493, 494, 495, 496, 497, 500, 542, 692, 695, 715, 724, 725, 726, 796, 800, 801, 802, 803, 805, 806, 807, 808, 810, 811, 814, 815, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 833, 834, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 858, 863, 864, 869, 892, 895, 898, 900, 902, 905, 908, 910, 911, 924, 926, 927, 930, 932, 947, 949, 951, 952, 953, 954, 955, 956, 957, 958, 961, 968, 1049, 1120, 1131], "davon": [23, 148, 159, 1122, 1141], "teamleit": 23, "m\u00f6chten": [23, 1143], "ggf": 23, "kennenlernen": 23, "knackig": [23, 136], "darstellung": 23, "handelnden": 23, "personen": 23, "sendung": 23, "minuten": [23, 861], "millionen": 23, "ihren": [23, 173, 185], "antrag": 23, "nochmal": 23, "vorgelesen": 23, "bekommen": [23, 167, 335, 1119, 1132], "un": [23, 167, 175, 335, 751, 857, 990, 1120], "hintergrundmusik": 23, "windger\u00e4usch": 23, "gerad": [23, 149, 183, 184, 335, 1122, 1135], "f\u00f6rdern": 23, "sollen": 23, "animiert": 23, "produktvideo": 23, "interessieren": 23, "sicher": [23, 159, 163], "mindesten": [23, 159], "vier": [23, 159, 173, 183, 188, 190, 205, 209, 212, 220, 222, 225, 232, 238, 250, 253, 257, 260, 270, 280, 292, 312, 1129, 1142], "monat": 23, "einreichschluss": 23, "uneingeschr\u00e4nkt": 23, "aufrufbar": 23, "youtu": [23, 695, 699], "hobyb1zukdi": 23, "projektrisiken": 23, "sehen": [23, 149], "wenig": [23, 158, 173, 243, 335, 1120], "pflegen": 23, "frontalen": 23, "vortragsstil": 23, "starker": 23, "paradigmenwechsel": 23, "wechsel": 23, "jahrelang": 23, "gewohnten": 23, "verfahrensweisen": 23, "abrupt": 23, "gro\u00dfer": 23, "monolithisch": 23, "zerhacken": 23, "welchen": 23, "bewerten": 23, "messen": 23, "zielerreichung": 23, "kriterium": 23, "arbeitserleichterung": 23, "minimal": [23, 173], "erfolg": [23, 1122], "mindestkriterien": 23, "positiven": 23, "projekterfolg": 23, "jedenfal": 23, "abgedeckt": 23, "ausgezeichnet": 23, "kriterien": [23, 154, 167, 861], "angestrebten": 23, "ausgezeichneten": 23, "anerkennen": 23, "gesteigerten": 23, "effekt": [23, 173, 184, 1135, 1143], "bekundet": 23, "medien": [23, 1142], "berichtet": 23, "migrat": [23, 167], "zehn": [23, 183], "migrieren": 23, "verwenden": [23, 154, 167, 173, 179, 183, 188, 1142], "untereinand": 23, "zutun": 23, "zusammenzuarbeiten": 23, "kooperationspartner_innen": 23, "dienstleister_innen": 23, "mitwirkend": 23, "zielgruppenvertreter_innen": 23, "werbeagentur": 23, "schaar": 23, "logo": 23, "webdesign": 23, "wof\u00fcr": 23, "arbeitsstunden": 23, "geld": 23, "allem": [23, 148, 163, 173, 335, 1141], "eingesetzt": [23, 1120, 1137], "basisarbeit": 23, "workflow": [23, 167, 201, 216, 746, 941, 1137], "datenstrukturen": [23, 185, 203, 224, 1124], "zeitgem\u00e4\u00df": 23, "interakt": [23, 1021], "know": [23, 42, 59, 62, 65, 69, 80, 84, 120, 137, 139, 140, 141, 142, 145, 146, 147, 155, 160, 161, 164, 168, 169, 172, 176, 180, 191, 192, 199, 202, 259, 262, 266, 291, 319, 350, 352, 358, 363, 380, 390, 402, 404, 406, 408, 412, 413, 414, 416, 420, 421, 422, 424, 433, 439, 443, 444, 456, 493, 501, 528, 544, 546, 552, 554, 558, 577, 614, 617, 620, 641, 642, 644, 653, 655, 657, 680, 682, 691, 700, 702, 706, 716, 723, 725, 726, 728, 744, 751, 773, 812, 833, 870, 873, 877, 879, 890, 895, 897, 906, 916, 944, 965, 973, 978, 979, 990, 995, 998, 1001, 1002, 1021, 1028, 1066, 1070, 1105, 1130], "welchem": [23, 159], "umfang": 23, "sachressourcen": 23, "ben\u00f6tigt": [23, 184, 185, 1135], "zugekauft": 23, "backendprogrammierung": 23, "programmiersprach": [23, 1121, 1124, 1136, 1138], "200": [23, 136, 137, 159, 161, 173, 190, 192, 199, 206, 209, 212, 215, 220, 222, 228, 232, 235, 238, 250, 253, 257, 264, 274, 280, 292, 309, 314, 572, 573, 574, 575, 576, 578, 579, 580, 581, 595, 649, 751, 931, 1045], "stunden": 23, "webprogrammierung": 23, "css": [23, 137, 138], "150": [23, 159, 173, 183, 190, 199, 209, 212, 215, 220, 222, 228, 232, 235, 238, 241, 250, 253, 270, 274, 280, 292, 642], "kreativarbeit": 23, "erreichen": [23, 1136, 1139], "pers\u00f6nlich": [23, 335], "freund": 23, "ebenfal": [23, 1137], "t\u00e4tig": 23, "mich": [23, 148, 163, 183, 191, 335, 1119], "ermutigt": 23, "\u00fcberhaupt": [23, 1129, 1136, 1143], "starten": [23, 1141], "repr\u00e4sent": 23, "post": [23, 66, 93, 136, 140, 142, 144, 145, 146, 147, 150, 201, 216, 265, 350, 364, 448, 544, 870, 939, 941, 944, 1070], "facebookseit": 23, "relevanten": 23, "foren": 23, "linkedin": 23, "typisch": [23, 184, 1122], "projektbeginn": 23, "abschluss": [23, 149, 317], "oktob": 23, "projektdau": 23, "\u00fcberschreiten": 23, "mitarbeiter_innen": 23, "stundenanzahl": 23, "jeweilig": 23, "stundens\u00e4tz": 23, "senior": 23, "junior": 23, "programmierer_in": 23, "designer_in": 23, "contentmanager_in": 23, "projektmanager_in": 23, "assistenz": 23, "administr": [23, 147, 810, 877, 886, 893, 932], "sachbearbeiter_in": 23, "social": [23, 45, 444, 451, 455, 468, 469, 470, 473, 479, 482, 483, 484], "media": [23, 78, 157, 773, 878], "spzialist_in": 23, "firmeneigent\u00fcmer_innen": 23, "gesellschafter_innen": 23, "vereinsfunktion\u00e4r_innen": 23, "betr\u00e4gt": 23, "f\u00f6rderbar": 23, "stundensatz": 23, "brutto": 23, "nachweislich": 23, "angestellt": 23, "projektmitarbeiter_innen": 23, "errechnet": 23, "vollzeitvertrag": 23, "jahresstundenteil": 23, "1720": [23, 215], "teilzeitbesch\u00e4ftigten": 23, "aliquot": 23, "reduziert": [23, 163], "dienstgeberanteil": 23, "faktor": 23, "ber\u00fccksichtigt": 23, "kalkul": 23, "jahresbruttogehalt": 23, "hohe": 23, "risiko": 23, "h\u00f6herer": 23, "eigenmittelanteil": 23, "bedingung": 23, "festgelegt": 23, "erh\u00f6hen": 23, "gemeinkosten": 23, "gef\u00f6rdert": 23, "antr\u00e4gen": 23, "diplomarbeiten": 23, "betrag": 23, "8000": [23, 215], "frontendprogrammierung": 23, "4500": [23, 215], "sachkosten": 23, "projektbedingt": 23, "betriebskosten": 23, "unmittelbar": 23, "projektt\u00e4tigkeit": 23, "entstehen": [23, 309], "leistungen": 23, "reisen": 23, "gliedern": 23, "rechnung": [23, 149, 257], "enthalten": 23, "umsatzsteu": 23, "darf": [23, 317], "kostenabrechnung": 23, "f\u00f6rdernehmer_in": 23, "vorsteuerabzugsberechtigt": 23, "13500": [23, 215], "beantragt": 23, "differenz": [23, 235], "aufgliedern": 23, "eigenmittel": 23, "f\u00f6rderungseinrichtungen": 23, "fremdmittel": 23, "kredit": 23, "leas": 23, "pro": [23, 176, 861, 964], "bono": 23, "beitrag": 23, "restfinanzierung": 23, "gesamtbetrag": 23, "ber\u00fccksichtigten": 23, "einzelkosten": 23, "achtung": 23, "gesamtprojektkosten": 23, "h\u00f6her": 23, "auszuf\u00fcllen": 23, "leer": [23, 190, 196, 204, 260], "bleiben": [23, 149, 173, 183, 1129, 1136, 1139], "reich": [23, 173], "nein": [23, 184, 190, 196, 241, 250, 1135], "neben": [23, 163], "antr\u00e4g": 23, "oderstipendium": 23, "laufenden": 23, "call": [23, 32, 42, 50, 63, 66, 110, 111, 119, 136, 139, 140, 141, 142, 143, 145, 150, 157, 160, 162, 170, 176, 178, 199, 207, 209, 215, 220, 223, 225, 230, 232, 237, 238, 241, 256, 258, 260, 273, 274, 282, 291, 317, 322, 324, 335, 339, 346, 350, 351, 354, 365, 381, 383, 387, 393, 394, 397, 407, 410, 411, 419, 427, 430, 442, 449, 453, 468, 469, 470, 486, 490, 495, 498, 499, 501, 502, 514, 528, 542, 546, 549, 552, 554, 558, 567, 613, 614, 617, 619, 620, 624, 626, 631, 638, 646, 647, 655, 659, 670, 673, 676, 677, 678, 679, 689, 692, 700, 705, 706, 714, 715, 716, 725, 726, 727, 741, 751, 753, 755, 759, 761, 763, 765, 767, 769, 771, 773, 778, 781, 787, 792, 793, 799, 803, 806, 807, 808, 809, 811, 813, 816, 817, 830, 833, 869, 873, 881, 891, 892, 895, 896, 897, 898, 900, 902, 908, 909, 910, 915, 916, 923, 924, 926, 927, 930, 931, 932, 941, 944, 945, 947, 949, 966, 968, 969, 970, 975, 981, 983, 984, 985, 987, 988, 990, 991, 992, 1012, 1013, 1017, 1019, 1022, 1023, 1028, 1046, 1050, 1071, 1076, 1084, 1087, 1092, 1093, 1106, 1107, 1108, 1127, 1131, 1139, 1140, 1142], "weiteren": 23, "stipendium": 23, "imlaufenden": 23, "habe": [23, 148, 149, 158, 163, 179, 335], "zuge": 23, "projektantragsstellung": 23, "rundschreiben": 23, "expert": [23, 28, 144, 145, 150, 501, 812, 833, 879, 1075], "group": [23, 29, 101, 102, 113, 114, 119, 133, 155, 160, 172, 177, 179, 188, 191, 192, 199, 205, 212, 220, 229, 232, 238, 241, 253, 267, 274, 277, 280, 317, 330, 331, 335, 346, 371, 414, 415, 490, 520, 726, 773, 800, 801, 803, 806, 807, 808, 819, 820, 821, 822, 823, 824, 825, 826, 828, 829, 855, 859, 860, 861, 862, 866, 869, 877, 889, 890, 898, 899, 900, 905, 908, 910, 924, 927, 932, 945, 968, 1049, 1105], "wirtschaftkamm": 23, "nehmen": [23, 149, 1121], "larg": [24, 30, 38, 78, 142, 145, 147, 172, 191, 192, 201, 212, 218, 259, 262, 393, 402, 404, 408, 414, 415, 454, 679, 688, 724, 767, 773, 947, 971, 973, 975, 995, 1002, 1028, 1049, 1085, 1089, 1093, 1112], "amount": [24, 106, 110, 111, 140, 141, 142, 145, 151, 172, 179, 207, 257, 258, 414, 426, 557, 679, 680, 804, 806, 890, 907, 995], "pdf": [24, 37, 165, 167, 172, 176, 179, 180, 182, 232, 246, 255, 256, 276, 277, 316, 317, 320, 322, 325, 336, 833, 855, 856, 879, 911, 949, 1043, 1121, 1122, 1123, 1131, 1132, 1138, 1139, 1141, 1142, 1143], "Not": [24, 43, 47, 53, 80, 109, 116, 142, 143, 144, 147, 150, 172, 175, 176, 216, 218, 219, 220, 233, 242, 269, 273, 354, 363, 385, 397, 400, 402, 408, 424, 427, 490, 507, 509, 542, 549, 551, 553, 558, 559, 627, 639, 659, 670, 674, 676, 677, 678, 696, 703, 706, 712, 717, 724, 726, 736, 744, 751, 755, 757, 871, 909, 929, 931, 933, 935, 945, 968, 970, 975, 976, 977, 978, 988, 990, 1002, 1011, 1016, 1071, 1075, 1080, 1094, 1096, 1113, 1125], "satisfi": [24, 32, 176, 443, 559, 647, 659, 692], "colleagu": [24, 28, 151, 192, 404, 616, 973, 990, 1002], "aren": [24, 137, 222, 232, 655, 834, 923, 933], "either": [24, 39, 42, 43, 140, 142, 150, 151, 256, 259, 262, 402, 469, 642, 650, 653, 714, 800, 801, 830, 833, 865, 879, 970, 1037, 1087, 1125], "nobodi": [24, 43, 140, 142, 161, 172, 212, 228, 235, 238, 253, 260, 270, 274, 405, 407, 544, 585, 657, 728, 800, 801, 810, 825, 827, 833, 834, 886, 894, 1023, 1077, 1108, 1114], "doe": [24, 38, 45, 48, 49, 61, 69, 78, 83, 84, 110, 111, 113, 120, 136, 139, 140, 141, 144, 145, 146, 147, 150, 151, 155, 160, 168, 172, 176, 178, 190, 199, 202, 215, 232, 235, 241, 259, 260, 262, 265, 267, 269, 291, 317, 328, 344, 350, 358, 362, 363, 364, 365, 372, 381, 382, 391, 394, 397, 398, 400, 402, 404, 406, 408, 413, 414, 415, 418, 419, 420, 424, 426, 427, 428, 432, 438, 439, 442, 444, 447, 452, 456, 464, 466, 468, 494, 495, 496, 497, 498, 501, 502, 525, 534, 537, 544, 545, 546, 549, 552, 554, 555, 557, 560, 583, 590, 598, 604, 613, 616, 617, 623, 624, 631, 642, 647, 648, 650, 657, 659, 679, 681, 689, 690, 692, 696, 700, 701, 702, 705, 706, 708, 712, 713, 722, 724, 736, 737, 741, 742, 744, 751, 765, 773, 778, 789, 799, 808, 812, 813, 815, 818, 866, 870, 877, 878, 879, 890, 895, 896, 898, 902, 905, 916, 920, 923, 929, 931, 932, 941, 945, 947, 948, 949, 950, 955, 959, 963, 964, 966, 968, 969, 970, 971, 973, 975, 984, 988, 990, 991, 995, 998, 1001, 1019, 1020, 1021, 1040, 1048, 1050, 1077, 1079, 1080, 1082, 1089, 1090, 1093, 1094, 1095, 1097, 1100, 1105, 1125, 1127], "even": [24, 29, 59, 62, 78, 128, 140, 141, 142, 147, 151, 161, 162, 172, 176, 179, 180, 184, 186, 191, 197, 199, 200, 202, 203, 212, 216, 219, 220, 223, 226, 229, 231, 232, 234, 237, 238, 249, 259, 262, 273, 274, 292, 381, 390, 404, 410, 414, 442, 447, 543, 551, 554, 600, 647, 689, 692, 699, 708, 724, 726, 765, 773, 810, 829, 870, 878, 895, 896, 929, 931, 932, 948, 967, 979, 990, 1016, 1019, 1030, 1033, 1034, 1069, 1071, 1092, 1100, 1107, 1127, 1135], "tech": [24, 45, 139], "although": [24, 29, 78, 117, 119, 120, 140, 142, 146, 151, 162, 172, 178, 202, 222, 232, 335, 498, 642, 643, 684, 706, 812, 815, 886, 966, 971, 1028, 1077], "gain": [24, 147, 259, 262, 414, 773, 812], "incred": 24, "momentum": 24, "expect": [24, 38, 50, 139, 142, 188, 209, 215, 216, 225, 228, 235, 260, 274, 292, 294, 391, 429, 444, 487, 552, 617, 670, 679, 692, 746, 757, 870, 878, 879, 918, 935, 944, 990, 1000, 1013, 1043, 1053, 1076, 1111, 1112, 1115], "context": [24, 29, 59, 62, 110, 111, 140, 161, 164, 176, 179, 181, 183, 190, 221, 225, 226, 228, 232, 235, 241, 249, 253, 258, 268, 269, 270, 273, 280, 284, 287, 290, 291, 294, 335, 401, 463, 464, 478, 546, 552, 680, 701, 724, 726, 735, 740, 743, 745, 750, 753, 754, 755, 756, 759, 760, 764, 765, 766, 768, 769, 770, 777, 778, 779, 781, 782, 783, 784, 787, 788, 791, 793, 794, 806, 810, 869, 870, 893, 933, 944, 945, 972, 981, 1069, 1080], "defin": [24, 53, 117, 118, 120, 133, 143, 160, 162, 177, 179, 181, 183, 188, 196, 199, 200, 202, 209, 213, 215, 218, 222, 225, 228, 232, 240, 242, 253, 264, 274, 291, 292, 298, 312, 323, 344, 349, 354, 359, 360, 363, 380, 381, 382, 383, 384, 385, 398, 406, 407, 408, 410, 414, 427, 428, 433, 434, 435, 452, 456, 464, 485, 486, 498, 520, 528, 545, 546, 547, 549, 551, 552, 554, 555, 558, 559, 560, 567, 570, 591, 595, 616, 623, 642, 643, 652, 653, 654, 655, 656, 659, 679, 684, 688, 697, 700, 705, 706, 732, 734, 746, 810, 830, 870, 871, 879, 890, 897, 915, 937, 947, 949, 963, 965, 969, 971, 973, 985, 990, 1002, 1012, 1067, 1080, 1084, 1098, 1117, 1125, 1127, 1130], "solv": [24, 45, 80, 89, 113, 137, 140, 141, 170, 172, 176, 177, 179, 181, 192, 197, 210, 218, 223, 226, 237, 240, 262, 266, 273, 277, 279, 282, 294, 303, 384, 426, 435, 641, 715, 725, 726, 773, 812, 869, 910, 924, 957, 959, 961, 990, 1066, 1071, 1077, 1127, 1128], "provid": [24, 27, 37, 58, 65, 68, 140, 142, 143, 144, 146, 147, 150, 151, 155, 168, 209, 215, 216, 225, 228, 232, 266, 282, 400, 429, 434, 435, 444, 455, 463, 616, 679, 706, 773, 809, 812, 852, 878, 879, 886, 900, 932, 941, 973, 982, 1000, 1013, 1076, 1099, 1107, 1127], "depth": [24, 172, 176, 197, 209, 215, 225, 226, 228, 404, 704, 975, 1071, 1075, 1076], "repres": [24, 140, 142, 164, 209, 215, 225, 228, 232, 253, 264, 303, 413, 447, 464, 466, 553, 724, 744, 769, 806, 809, 877, 879, 907, 1002, 1028, 1066, 1070, 1089, 1096, 1130], "own": [24, 28, 40, 43, 65, 110, 111, 140, 141, 143, 144, 150, 155, 168, 172, 218, 242, 247, 256, 266, 291, 298, 404, 410, 425, 439, 447, 464, 469, 533, 534, 543, 633, 634, 636, 637, 651, 655, 658, 670, 680, 682, 694, 702, 717, 724, 725, 726, 773, 806, 808, 809, 818, 820, 821, 829, 830, 852, 862, 877, 878, 890, 897, 915, 920, 931, 932, 944, 963, 970, 987, 992, 993, 995, 1078, 1112, 1127, 1128, 1130], "yield": [24, 29, 159, 160, 173, 176, 177, 179, 188, 200, 207, 213, 217, 219, 221, 222, 228, 232, 237, 239, 249, 252, 253, 260, 268, 269, 270, 273, 274, 279, 281, 292, 385, 454, 463, 670, 673, 676, 677, 678, 726, 968, 972, 974, 975, 977, 996, 1006, 1027, 1028, 1029, 1030, 1043, 1054, 1069, 1081], "multipl": [24, 35, 36, 59, 62, 76, 106, 110, 111, 140, 141, 143, 157, 172, 176, 179, 199, 200, 201, 213, 215, 232, 267, 291, 340, 342, 346, 347, 350, 359, 361, 364, 373, 380, 384, 402, 407, 420, 425, 432, 464, 478, 491, 546, 559, 617, 624, 637, 664, 670, 692, 694, 701, 709, 712, 716, 717, 724, 726, 742, 744, 750, 754, 755, 763, 764, 765, 773, 775, 777, 778, 781, 782, 788, 791, 794, 806, 809, 810, 813, 815, 820, 821, 866, 869, 878, 899, 915, 920, 940, 953, 990, 1001, 1002, 1015, 1016, 1021, 1071, 1096, 1098], "artifact": [24, 146, 150, 164, 169, 282, 420, 734, 947, 948, 949, 959, 1114, 1127], "complet": [24, 42, 63, 78, 113, 136, 139, 140, 161, 172, 180, 188, 197, 210, 213, 216, 223, 237, 238, 240, 267, 273, 279, 284, 291, 298, 302, 303, 384, 401, 414, 427, 439, 491, 500, 545, 546, 620, 689, 704, 724, 767, 773, 800, 801, 811, 873, 879, 894, 931, 968, 972, 994, 995, 1071, 1076, 1077, 1079, 1085, 1087, 1099, 1100, 1117, 1125], "prepar": [27, 113, 118, 136, 139, 172, 229, 317, 335, 448, 489, 520, 582, 619, 940, 964, 1067, 1076, 1106], "base": [27, 29, 30, 42, 45, 53, 78, 80, 97, 107, 113, 132, 140, 142, 143, 155, 162, 167, 172, 173, 176, 179, 180, 183, 187, 190, 192, 202, 216, 218, 221, 225, 226, 230, 235, 237, 243, 250, 253, 258, 260, 264, 265, 266, 267, 268, 269, 274, 279, 290, 291, 292, 294, 313, 317, 321, 328, 350, 358, 385, 402, 420, 425, 426, 444, 448, 453, 454, 456, 463, 488, 500, 504, 520, 531, 573, 575, 576, 577, 578, 580, 581, 585, 617, 619, 620, 622, 664, 681, 682, 689, 694, 701, 705, 717, 720, 723, 725, 726, 746, 753, 757, 769, 773, 775, 824, 826, 866, 870, 929, 941, 945, 947, 948, 961, 962, 964, 972, 979, 981, 986, 987, 1027, 1033, 1049, 1069, 1078, 1079, 1093, 1124, 1125, 1128], "exist": [27, 38, 46, 47, 53, 55, 56, 109, 110, 111, 133, 136, 146, 151, 180, 192, 199, 265, 269, 302, 314, 317, 320, 402, 424, 426, 442, 447, 467, 470, 490, 501, 507, 509, 542, 552, 600, 635, 637, 646, 700, 724, 726, 773, 800, 801, 806, 808, 815, 824, 826, 835, 839, 840, 852, 869, 877, 879, 890, 895, 899, 905, 908, 910, 927, 934, 941, 959, 963, 964, 969, 970, 979, 984, 1019, 1021, 1039, 1080, 1088, 1089, 1100, 1105, 1107], "navig": [27, 1096], "through": [27, 34, 38, 61, 73, 78, 104, 137, 139, 140, 142, 147, 151, 155, 168, 172, 176, 178, 181, 192, 200, 201, 202, 207, 213, 226, 266, 268, 269, 284, 287, 290, 324, 328, 335, 354, 374, 393, 413, 417, 430, 439, 470, 492, 495, 561, 563, 564, 613, 614, 617, 620, 642, 657, 659, 684, 692, 696, 702, 706, 744, 771, 804, 812, 860, 870, 878, 879, 888, 941, 944, 945, 970, 975, 978, 993, 995, 998, 1033, 1078, 1098, 1125, 1126, 1130], "deviat": [27, 147, 160, 168, 177, 201, 232, 335, 773], "after": [27, 43, 136, 137, 140, 141, 142, 147, 150, 160, 169, 172, 179, 192, 199, 209, 215, 225, 228, 231, 232, 238, 253, 258, 265, 267, 274, 303, 342, 350, 351, 384, 404, 411, 430, 432, 468, 469, 492, 499, 551, 554, 567, 602, 650, 652, 653, 655, 664, 670, 717, 724, 751, 755, 761, 813, 816, 833, 834, 866, 877, 917, 935, 940, 941, 944, 947, 966, 968, 970, 995, 996, 1000, 1036, 1049, 1067, 1075, 1084, 1096, 1106, 1107, 1112], "writeup": [27, 151, 959], "what": [27, 28, 43, 44, 47, 48, 55, 56, 57, 58, 59, 62, 65, 69, 78, 83, 86, 87, 97, 98, 99, 104, 107, 113, 115, 120, 137, 139, 140, 141, 142, 143, 144, 145, 146, 151, 155, 159, 160, 161, 162, 163, 164, 166, 168, 172, 173, 176, 177, 178, 179, 180, 181, 182, 191, 199, 201, 202, 216, 217, 218, 227, 232, 240, 246, 256, 259, 262, 266, 268, 269, 282, 287, 290, 298, 302, 303, 309, 317, 320, 322, 324, 325, 328, 339, 347, 352, 362, 363, 365, 378, 387, 390, 397, 400, 402, 404, 405, 408, 409, 410, 414, 418, 420, 425, 426, 429, 434, 436, 443, 445, 447, 468, 469, 479, 485, 487, 496, 499, 520, 521, 524, 527, 530, 533, 536, 537, 539, 549, 552, 554, 555, 556, 557, 558, 560, 567, 570, 577, 613, 620, 629, 647, 650, 653, 659, 664, 670, 680, 691, 692, 700, 701, 702, 706, 709, 713, 715, 716, 722, 724, 725, 726, 734, 737, 741, 744, 746, 751, 769, 776, 781, 786, 799, 800, 801, 803, 804, 806, 807, 809, 810, 812, 813, 815, 817, 818, 819, 822, 823, 824, 825, 826, 827, 828, 833, 848, 849, 851, 869, 870, 877, 878, 879, 881, 882, 883, 884, 885, 896, 897, 903, 904, 905, 906, 908, 910, 915, 916, 917, 918, 919, 924, 927, 930, 932, 933, 935, 936, 939, 940, 941, 943, 945, 948, 957, 958, 962, 964, 965, 966, 968, 970, 972, 973, 976, 977, 981, 982, 990, 994, 995, 1013, 1019, 1023, 1028, 1031, 1039, 1066, 1070, 1078, 1080, 1087, 1096, 1105, 1107, 1111, 1112, 1114, 1116, 1127, 1130], "collect": [27, 29, 136, 139, 141, 184, 191, 200, 206, 207, 224, 226, 227, 228, 240, 249, 251, 258, 266, 268, 269, 273, 284, 287, 290, 291, 294, 302, 413, 420, 531, 577, 692, 701, 713, 726, 773, 804, 876, 957, 968, 972, 978, 986, 1020, 1026, 1030, 1059, 1064, 1066, 1069, 1070, 1085, 1099, 1100, 1105, 1107, 1135], "question": [27, 29, 32, 35, 36, 38, 102, 113, 142, 147, 155, 160, 172, 176, 178, 200, 201, 202, 212, 213, 215, 216, 218, 238, 317, 324, 331, 359, 388, 394, 406, 425, 428, 432, 436, 489, 553, 613, 620, 708, 712, 726, 751, 765, 781, 800, 801, 803, 822, 828, 852, 869, 877, 879, 890, 894, 910, 929, 930, 963, 971, 972, 975, 980, 1069, 1071], "ask": [27, 140, 145, 147, 155, 172, 175, 176, 241, 273, 317, 324, 424, 443, 444, 466, 485, 537, 549, 560, 681, 703, 829, 884, 886, 990, 1071], "answer": [27, 45, 144, 147, 160, 172, 176, 178, 179, 202, 213, 220, 292, 324, 428, 432, 489, 613, 620, 622, 692, 697, 716, 737, 781, 800, 801, 806, 818, 820, 821, 824, 826, 877, 879, 886, 890, 929, 932, 963, 970, 971, 975, 982, 999, 1002, 1071], "cover": [27, 78, 81, 114, 133, 147, 164, 172, 176, 180, 182, 200, 201, 213, 226, 265, 267, 424, 443, 877, 879, 961, 970, 972, 995, 1043, 1066, 1071, 1075, 1076, 1098, 1099, 1105, 1128, 1130], "been": [27, 59, 62, 139, 140, 141, 142, 144, 145, 146, 151, 155, 160, 161, 172, 180, 209, 215, 225, 228, 259, 262, 264, 274, 291, 314, 323, 383, 397, 398, 427, 438, 447, 464, 520, 679, 727, 769, 787, 793, 798, 808, 812, 816, 836, 870, 877, 879, 890, 899, 909, 920, 945, 948, 949, 966, 973, 1011, 1107, 1125, 1127, 1128], "further": [27, 137, 139, 146, 150, 166, 215, 247, 262, 291, 325, 390, 401, 439, 501, 521, 524, 527, 530, 533, 536, 539, 651, 682, 725, 726, 744, 767, 773, 855, 880, 916, 936, 939, 943, 978, 1111, 1116, 1130], "inform": [27, 28, 29, 106, 139, 142, 143, 145, 150, 159, 160, 161, 163, 168, 188, 209, 215, 225, 228, 253, 268, 269, 290, 294, 401, 411, 418, 419, 429, 438, 706, 724, 732, 744, 808, 833, 866, 870, 877, 879, 881, 913, 969, 997, 1071, 1079, 1084, 1100, 1107], "internet": [27, 65, 78, 139, 141, 144, 145, 147, 168, 180, 188, 216, 229, 268, 269, 284, 290, 294, 314, 426, 870, 871, 873, 931, 971, 1128, 1142], "subtract": [27, 209, 232, 264, 361, 464, 478, 692, 832, 932, 982, 990, 1002], "known": [27, 136, 141, 152, 192, 209, 215, 225, 228, 245, 247, 265, 282, 314, 360, 362, 374, 381, 408, 414, 579, 744, 833, 962, 1078, 1127, 1128], "calcul": [27, 82, 85, 142, 176, 200, 209, 232, 360, 362, 370, 379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 463, 493, 498, 500, 644, 649, 682, 709, 723, 725, 726, 915, 932, 973, 975, 1046, 1078, 1083, 1105], "minimum": [27, 63, 232, 664, 773, 968, 1074, 1075, 1076, 1077], "come": [27, 43, 78, 110, 111, 117, 119, 136, 137, 139, 140, 141, 142, 145, 146, 147, 150, 151, 162, 168, 169, 172, 192, 218, 245, 247, 258, 265, 266, 291, 308, 314, 338, 340, 341, 357, 384, 420, 427, 464, 498, 580, 617, 620, 625, 639, 691, 694, 696, 706, 716, 726, 741, 773, 804, 806, 810, 816, 829, 833, 870, 877, 878, 879, 905, 931, 959, 970, 971, 975, 993, 994, 995, 996, 1002, 1013, 1021, 1023, 1028, 1033, 1051, 1062, 1079, 1082, 1087, 1101, 1128], "she": [27, 199, 617, 650, 808, 810, 1015, 1023], "who": [27, 29, 45, 137, 140, 144, 147, 151, 170, 172, 218, 228, 253, 284, 335, 410, 414, 424, 429, 452, 469, 501, 622, 692, 702, 746, 773, 781, 800, 801, 808, 812, 818, 829, 870, 878, 879, 894, 905, 947, 964, 966, 972, 994, 1070, 1085, 1097, 1105, 1125, 1128, 1130], "repetit": [27, 253, 833, 1125], "prone": [27, 359, 547, 557, 577, 650, 694, 761, 949, 1017, 1112, 1125], "possibl": [27, 59, 61, 62, 106, 113, 120, 122, 127, 130, 139, 140, 147, 150, 155, 162, 172, 176, 192, 202, 209, 215, 218, 220, 225, 226, 228, 245, 247, 256, 265, 268, 269, 274, 291, 349, 360, 363, 380, 393, 400, 406, 410, 414, 415, 418, 424, 430, 439, 442, 444, 447, 452, 456, 464, 466, 501, 534, 544, 546, 547, 552, 559, 560, 578, 595, 636, 642, 643, 650, 664, 668, 681, 692, 700, 701, 702, 706, 751, 778, 808, 817, 842, 871, 872, 877, 878, 888, 891, 920, 968, 969, 970, 978, 983, 991, 993, 1002, 1011, 1016, 1018, 1019, 1021, 1070, 1071, 1080, 1092], "abl": [27, 28, 30, 43, 139, 140, 142, 143, 145, 147, 155, 172, 192, 199, 281, 404, 410, 436, 443, 447, 501, 649, 659, 800, 801, 818, 824, 826, 827, 870, 878, 879, 905, 941, 972, 1083, 1130], "fix": [27, 46, 63, 65, 76, 107, 136, 140, 153, 155, 176, 197, 202, 212, 213, 218, 237, 240, 267, 268, 269, 290, 317, 342, 365, 408, 424, 426, 432, 469, 502, 514, 525, 537, 543, 562, 578, 628, 635, 656, 726, 741, 746, 750, 753, 754, 774, 775, 781, 782, 788, 791, 794, 817, 869, 873, 893, 903, 934, 944, 964, 966, 969, 996, 1028, 1071], "inconsist": [27, 544, 1094], "easi": [27, 68, 115, 128, 140, 142, 143, 144, 145, 146, 147, 151, 160, 161, 164, 176, 222, 232, 363, 378, 404, 420, 642, 659, 701, 753, 755, 759, 771, 778, 812, 877, 878, 879, 906, 923, 941, 950, 964, 990, 994, 1002, 1011, 1013, 1077, 1105, 1106, 1130], "plain": [27, 142, 202, 328, 520, 556, 559, 638, 691, 706, 776, 878, 969, 982], "happi": [27, 65, 145, 172, 408, 552, 1076], "clear": [27, 43, 140, 142, 147, 159, 192, 202, 231, 292, 318, 319, 385, 410, 414, 429, 439, 445, 451, 558, 613, 646, 664, 701, 773, 781, 809, 812, 833, 893, 967, 982, 1002, 1004, 1075, 1076, 1107], "front": [27, 78, 137, 147, 172, 228, 274, 414, 595, 714, 1128], "later": [27, 80, 114, 119, 139, 140, 143, 150, 161, 172, 294, 340, 344, 350, 352, 354, 410, 414, 420, 427, 546, 547, 549, 561, 563, 564, 598, 653, 684, 687, 732, 734, 736, 741, 757, 759, 769, 776, 815, 877, 899, 915, 916, 918, 929, 933, 983, 991, 1001, 1004, 1006, 1084, 1090], "menu": [27, 136, 180, 773, 1120], "mine": [28, 139, 140, 143, 151, 168, 172, 176, 335, 534, 773], "hi": [28, 45, 155, 160, 172, 176, 179, 197, 223, 226, 407, 496, 983, 1071], "data": [28, 29, 49, 70, 73, 78, 89, 108, 110, 111, 116, 120, 140, 141, 142, 143, 147, 150, 159, 161, 163, 172, 176, 177, 181, 189, 191, 196, 206, 209, 210, 215, 216, 218, 225, 228, 232, 238, 253, 257, 258, 259, 260, 262, 265, 267, 268, 269, 274, 279, 282, 284, 287, 293, 319, 320, 335, 349, 363, 370, 379, 386, 392, 393, 396, 398, 399, 403, 408, 412, 413, 415, 416, 421, 422, 425, 432, 448, 462, 490, 491, 492, 493, 494, 495, 496, 497, 500, 501, 507, 509, 518, 542, 543, 545, 549, 552, 565, 568, 570, 571, 582, 587, 593, 597, 606, 609, 610, 615, 624, 625, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 644, 648, 651, 682, 694, 698, 706, 707, 715, 716, 723, 724, 725, 726, 728, 731, 732, 763, 767, 771, 778, 786, 804, 810, 815, 817, 825, 871, 873, 877, 878, 879, 880, 890, 894, 896, 904, 909, 915, 918, 921, 923, 935, 959, 968, 970, 975, 979, 982, 995, 996, 1007, 1009, 1010, 1011, 1019, 1030, 1058, 1059, 1069, 1073, 1074, 1075, 1077, 1079, 1080, 1084, 1085, 1089, 1090, 1093, 1095, 1096, 1100, 1105, 1126, 1127, 1141], "convinc": [28, 363], "him": [28, 172, 176, 179, 197, 200, 223, 249, 273, 691, 920, 1071], "wai": [28, 43, 50, 59, 62, 63, 65, 80, 81, 130, 136, 137, 139, 142, 147, 151, 152, 155, 161, 164, 168, 173, 175, 176, 178, 179, 180, 183, 184, 192, 197, 200, 212, 213, 218, 221, 222, 223, 225, 226, 230, 232, 240, 244, 245, 258, 259, 262, 266, 268, 269, 290, 291, 305, 309, 359, 363, 367, 368, 378, 384, 400, 401, 402, 410, 426, 427, 434, 444, 446, 447, 451, 467, 469, 488, 498, 502, 514, 520, 528, 544, 545, 552, 557, 560, 598, 600, 626, 632, 643, 659, 680, 690, 702, 706, 729, 742, 751, 765, 767, 773, 800, 801, 809, 815, 817, 820, 821, 870, 878, 879, 890, 897, 905, 931, 934, 944, 945, 949, 955, 959, 970, 982, 987, 993, 996, 997, 1000, 1011, 1015, 1016, 1018, 1021, 1023, 1028, 1056, 1071, 1089, 1097, 1105, 1112, 1130], "go": [28, 40, 42, 59, 61, 62, 63, 65, 80, 97, 119, 137, 140, 143, 144, 146, 147, 169, 172, 179, 183, 192, 201, 202, 218, 259, 262, 264, 294, 320, 424, 426, 444, 485, 646, 684, 696, 702, 714, 726, 734, 737, 741, 773, 775, 804, 816, 833, 835, 869, 870, 877, 878, 905, 908, 910, 915, 923, 927, 947, 950, 964, 995, 1029], "relev": [28, 142, 215, 240, 350, 439, 501, 706, 773, 786, 877, 878, 970, 1070, 1086, 1100], "part": [28, 43, 80, 92, 106, 113, 116, 133, 140, 141, 142, 143, 145, 147, 150, 161, 164, 172, 179, 180, 181, 202, 228, 240, 259, 262, 274, 319, 326, 340, 363, 397, 424, 447, 452, 466, 487, 501, 544, 642, 714, 724, 744, 751, 773, 793, 800, 801, 833, 868, 870, 877, 878, 879, 880, 895, 947, 994, 995, 1008, 1013, 1015, 1061, 1063, 1077, 1078, 1089, 1090, 1092, 1093, 1094, 1095, 1115], "natur": [28, 38, 75, 140, 142, 147, 172, 226, 232, 274, 335, 340, 358, 402, 443, 444, 596, 598, 642, 702, 878, 1006], "straighforward": 28, "approach": [28, 35, 38, 139, 140, 179, 283, 342, 426, 430, 431, 439, 700, 726, 812, 878, 931, 933, 1088], "would": [28, 57, 104, 107, 139, 141, 142, 144, 145, 151, 160, 162, 169, 172, 176, 178, 191, 202, 215, 228, 232, 267, 269, 374, 393, 400, 402, 413, 414, 428, 429, 432, 439, 442, 500, 514, 518, 552, 556, 558, 560, 607, 614, 623, 647, 653, 692, 702, 714, 722, 773, 776, 800, 801, 824, 826, 829, 855, 878, 879, 889, 890, 906, 915, 923, 944, 963, 964, 968, 970, 971, 991, 1002, 1006, 1010, 1013, 1019, 1023, 1028, 1049, 1076, 1079, 1089, 1096], "copi": [28, 36, 42, 50, 70, 97, 99, 101, 102, 113, 119, 130, 132, 136, 140, 141, 142, 143, 146, 151, 155, 161, 167, 170, 180, 187, 190, 202, 212, 218, 224, 228, 232, 235, 238, 244, 245, 246, 247, 250, 255, 256, 260, 264, 265, 267, 274, 276, 277, 280, 292, 298, 320, 350, 352, 364, 370, 379, 384, 386, 388, 392, 393, 396, 399, 403, 412, 416, 421, 422, 437, 469, 470, 483, 484, 485, 490, 507, 519, 520, 522, 531, 536, 538, 540, 542, 543, 544, 550, 560, 561, 563, 564, 573, 577, 587, 595, 604, 606, 609, 610, 622, 624, 630, 633, 636, 639, 644, 645, 646, 650, 651, 652, 670, 682, 684, 694, 698, 702, 703, 707, 715, 722, 723, 724, 725, 726, 748, 753, 773, 774, 789, 799, 800, 801, 802, 803, 804, 813, 833, 839, 840, 842, 843, 844, 845, 847, 853, 869, 880, 883, 885, 890, 902, 907, 908, 909, 910, 917, 918, 923, 927, 940, 957, 958, 959, 961, 963, 964, 968, 969, 1003, 1018, 1021, 1084, 1088, 1093, 1107, 1112, 1114, 1125, 1137], "dumb": [28, 45, 160, 191, 302, 744, 918, 920], "reason": [28, 61, 127, 142, 155, 161, 172, 201, 220, 314, 397, 404, 406, 408, 414, 417, 430, 442, 561, 563, 564, 598, 642, 685, 704, 741, 757, 769, 773, 824, 826, 923, 931, 932, 945, 959, 964, 1002, 1011, 1013, 1076], "ar": [28, 32, 43, 45, 47, 53, 55, 56, 57, 58, 59, 61, 62, 63, 65, 68, 78, 80, 81, 89, 106, 108, 109, 110, 111, 115, 117, 124, 127, 133, 134, 137, 139, 142, 143, 144, 146, 147, 150, 151, 155, 156, 157, 160, 161, 162, 164, 168, 170, 172, 176, 177, 178, 179, 180, 181, 192, 199, 200, 201, 202, 209, 212, 213, 215, 216, 218, 219, 221, 223, 224, 225, 226, 228, 232, 236, 240, 245, 247, 249, 256, 258, 259, 262, 264, 265, 266, 267, 269, 274, 277, 282, 286, 291, 292, 302, 303, 304, 308, 314, 317, 319, 320, 322, 323, 339, 341, 342, 344, 347, 349, 350, 352, 354, 357, 358, 361, 362, 363, 369, 372, 375, 380, 381, 384, 388, 390, 391, 393, 394, 395, 400, 401, 402, 404, 405, 408, 411, 414, 417, 424, 425, 427, 429, 432, 433, 438, 439, 442, 443, 444, 454, 464, 466, 469, 488, 491, 498, 499, 500, 501, 502, 505, 509, 514, 518, 528, 534, 537, 544, 545, 546, 547, 549, 552, 553, 556, 557, 558, 560, 567, 570, 577, 578, 579, 582, 592, 598, 599, 604, 607, 614, 616, 617, 619, 620, 624, 630, 631, 632, 633, 637, 643, 645, 646, 647, 650, 653, 654, 655, 659, 664, 681, 684, 685, 690, 691, 692, 694, 696, 700, 701, 702, 703, 705, 706, 708, 711, 713, 717, 724, 726, 728, 729, 732, 742, 744, 746, 751, 757, 759, 761, 765, 767, 769, 771, 773, 778, 792, 799, 800, 801, 804, 806, 808, 809, 811, 812, 813, 815, 816, 818, 819, 824, 826, 833, 834, 836, 846, 851, 855, 857, 860, 870, 871, 877, 878, 879, 880, 886, 888, 890, 893, 895, 896, 899, 900, 907, 913, 915, 916, 918, 920, 921, 923, 926, 932, 933, 934, 935, 940, 944, 945, 947, 948, 949, 950, 953, 955, 959, 961, 962, 964, 965, 966, 968, 970, 971, 973, 975, 979, 982, 983, 984, 985, 989, 991, 994, 995, 998, 999, 1000, 1001, 1002, 1004, 1007, 1011, 1019, 1021, 1022, 1023, 1025, 1033, 1038, 1066, 1070, 1071, 1076, 1077, 1078, 1079, 1080, 1083, 1084, 1085, 1087, 1089, 1090, 1093, 1095, 1096, 1099, 1105, 1107, 1108, 1111, 1112, 1115, 1127, 1128, 1130], "need": [28, 43, 45, 61, 63, 104, 114, 115, 120, 140, 141, 142, 145, 147, 151, 155, 156, 161, 172, 179, 180, 182, 192, 202, 216, 218, 240, 284, 305, 317, 347, 349, 352, 372, 380, 381, 400, 406, 407, 413, 417, 419, 420, 424, 427, 429, 432, 434, 437, 439, 443, 444, 466, 496, 498, 499, 500, 501, 531, 537, 543, 544, 559, 579, 599, 613, 620, 624, 653, 659, 688, 702, 705, 711, 716, 732, 746, 748, 761, 765, 769, 773, 812, 816, 829, 834, 870, 871, 872, 873, 877, 878, 879, 886, 890, 896, 897, 900, 903, 914, 918, 929, 950, 959, 963, 964, 965, 969, 974, 987, 995, 996, 998, 1001, 1010, 1015, 1026, 1027, 1076, 1077, 1084, 1099, 1107, 1128], "mechan": [28, 32, 89, 127, 140, 141, 164, 172, 176, 187, 202, 256, 442, 620, 920, 941, 979, 1071, 1100, 1125, 1130, 1140], "where": [28, 53, 89, 109, 113, 125, 126, 136, 139, 140, 141, 142, 143, 145, 147, 150, 155, 160, 161, 168, 169, 172, 173, 176, 199, 200, 201, 202, 209, 212, 215, 216, 218, 225, 228, 232, 240, 249, 256, 274, 282, 291, 317, 322, 323, 358, 362, 372, 380, 381, 383, 384, 385, 398, 402, 413, 415, 425, 435, 448, 455, 486, 488, 499, 514, 520, 537, 556, 617, 620, 624, 642, 700, 701, 705, 767, 771, 773, 785, 815, 816, 830, 833, 836, 857, 862, 870, 877, 878, 879, 886, 891, 897, 899, 902, 905, 906, 922, 932, 933, 940, 944, 945, 948, 959, 963, 964, 971, 973, 975, 978, 1000, 1002, 1012, 1053, 1071, 1078, 1083, 1105, 1127, 1130], "could": [28, 50, 57, 110, 111, 113, 115, 117, 119, 136, 137, 140, 141, 145, 147, 151, 161, 170, 172, 178, 192, 201, 202, 212, 222, 228, 256, 266, 268, 269, 287, 290, 335, 363, 407, 428, 430, 443, 444, 468, 501, 552, 560, 624, 636, 642, 655, 656, 664, 679, 689, 704, 727, 744, 773, 786, 812, 830, 878, 879, 886, 897, 903, 940, 1002, 1053, 1067, 1083, 1093, 1100, 1112, 1125], "exchang": [28, 78, 169, 212, 424, 452, 468, 498, 652, 653, 744, 817, 935, 1028, 1036], "meta": [28, 39, 132, 147, 773, 785, 833], "retriev": [28, 151, 670, 773, 975, 1023], "check": [28, 29, 38, 88, 97, 104, 125, 139, 140, 142, 143, 144, 145, 146, 151, 155, 160, 172, 176, 180, 184, 209, 215, 218, 225, 228, 232, 256, 269, 302, 325, 328, 350, 365, 374, 376, 377, 382, 390, 397, 401, 409, 411, 427, 491, 492, 514, 525, 537, 544, 552, 559, 560, 577, 598, 636, 652, 653, 664, 701, 724, 726, 746, 748, 753, 773, 789, 790, 792, 869, 870, 877, 878, 900, 905, 911, 914, 918, 948, 949, 954, 957, 959, 966, 995, 1000, 1013, 1023, 1026, 1030, 1032, 1034, 1050, 1056, 1069, 1100, 1105, 1114, 1125, 1135], "everyth": [28, 42, 43, 98, 113, 133, 140, 146, 147, 164, 172, 176, 180, 191, 199, 217, 218, 246, 255, 256, 259, 262, 276, 277, 291, 294, 328, 335, 352, 372, 375, 400, 414, 420, 424, 485, 543, 544, 546, 553, 557, 562, 567, 617, 659, 688, 692, 708, 715, 724, 725, 726, 742, 751, 771, 775, 778, 803, 806, 807, 809, 810, 834, 855, 869, 870, 871, 877, 878, 879, 896, 898, 899, 910, 923, 924, 930, 932, 935, 945, 967, 973, 978, 982, 1078, 1093, 1138, 1139, 1140, 1142], "clearli": [28, 43, 155, 172, 402, 649, 670, 697, 773, 792, 906, 971, 1002, 1023, 1127], "intersphinx": [28, 137], "spinx": 28, "possibli": [29, 77, 85, 140, 172, 426, 560, 636, 650, 659, 664, 679, 691, 701, 713, 714, 818, 855, 878, 926, 961, 1087], "arrang": [29, 84, 110, 111, 144, 287, 501, 706, 806, 866], "subgroup": [29, 35, 38, 520], "refer": [29, 66, 90, 97, 110, 111, 113, 139, 145, 146, 160, 162, 167, 176, 179, 181, 184, 185, 196, 197, 199, 201, 202, 207, 210, 211, 213, 214, 216, 217, 218, 223, 224, 225, 228, 232, 234, 236, 237, 239, 243, 251, 252, 254, 259, 261, 262, 266, 267, 269, 272, 273, 275, 278, 279, 281, 282, 290, 291, 293, 294, 298, 303, 304, 305, 306, 307, 308, 317, 381, 387, 394, 433, 490, 498, 507, 509, 520, 542, 543, 544, 545, 560, 561, 563, 564, 565, 568, 571, 587, 593, 597, 606, 609, 610, 611, 619, 624, 627, 630, 631, 634, 635, 636, 637, 638, 639, 650, 670, 682, 683, 691, 694, 698, 702, 707, 715, 723, 724, 725, 726, 732, 733, 735, 737, 740, 743, 750, 754, 764, 773, 777, 782, 785, 788, 791, 794, 816, 846, 855, 869, 870, 877, 878, 902, 941, 947, 963, 966, 971, 972, 994, 1021, 1022, 1028, 1029, 1030, 1040, 1043, 1051, 1052, 1054, 1055, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1084, 1085, 1105, 1107, 1125, 1126, 1127, 1135], "veri": [29, 35, 37, 38, 139, 140, 142, 161, 172, 176, 179, 181, 192, 197, 200, 223, 226, 249, 273, 328, 335, 356, 363, 373, 374, 394, 410, 411, 413, 419, 426, 429, 444, 531, 542, 555, 570, 588, 616, 645, 646, 684, 687, 690, 701, 704, 773, 778, 783, 811, 812, 871, 876, 878, 879, 896, 897, 913, 918, 933, 947, 975, 983, 999, 1002, 1006, 1007, 1013, 1017, 1021, 1026, 1071, 1078, 1079, 1101, 1110, 1117, 1125], "unawar": [29, 155, 172, 179], "simpli": [29, 61, 115, 134, 140, 143, 145, 147, 151, 155, 164, 228, 229, 268, 269, 290, 291, 363, 405, 447, 485, 552, 561, 563, 564, 613, 623, 634, 670, 691, 692, 697, 702, 716, 751, 805, 818, 877, 899, 903, 947, 963, 971], "interest": [29, 141, 142, 155, 161, 172, 180, 317, 429, 444, 970, 972, 1090], "catalog": [29, 1128], "chapter": [29, 42, 120, 192, 201, 209, 215, 225, 228, 229, 520, 833], "subchapt": 29, "cluster_python": [29, 90, 197, 303, 304, 305, 306, 307, 308, 317, 726, 972, 979, 980, 981, 982, 986, 994, 1005, 1014, 1024, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1072, 1073, 1077, 1078, 1081, 1084, 1085, 1087, 1091, 1099, 1102, 1104, 1109], "cluster_python_advanc": [29, 726, 972, 979, 980, 981, 982, 986, 1024, 1027, 1028, 1029, 1030, 1043, 1054, 1057, 1058, 1059, 1064, 1065, 1066, 1067, 1068, 1069, 1072, 1073, 1077, 1081, 1085, 1087, 1099, 1102, 1104, 1109], "cluster_python_advanced_multithread": [29, 726, 972, 979, 980, 981, 982, 1069], "cluster_python_advanced_oo": [29, 726, 972, 979, 980, 981, 982, 986, 1030, 1057, 1058, 1059, 1064, 1066, 1069, 1099], "object": [29, 63, 70, 73, 74, 78, 90, 97, 103, 104, 106, 107, 108, 110, 111, 113, 114, 120, 133, 155, 157, 160, 162, 167, 172, 179, 188, 190, 191, 196, 199, 200, 202, 205, 207, 209, 212, 213, 216, 217, 218, 219, 220, 224, 225, 226, 230, 231, 233, 235, 238, 242, 250, 254, 256, 257, 259, 260, 262, 264, 267, 270, 274, 280, 286, 292, 304, 306, 307, 310, 312, 317, 318, 319, 320, 354, 380, 407, 425, 427, 432, 433, 437, 438, 439, 444, 446, 448, 453, 462, 464, 470, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 507, 509, 514, 520, 534, 542, 543, 545, 547, 550, 551, 553, 555, 556, 561, 563, 564, 565, 567, 568, 571, 587, 593, 597, 598, 599, 606, 609, 610, 613, 614, 619, 620, 624, 625, 627, 628, 629, 630, 632, 633, 634, 635, 636, 637, 638, 639, 642, 650, 651, 653, 654, 664, 670, 682, 684, 686, 687, 691, 692, 697, 698, 700, 702, 703, 706, 707, 713, 715, 716, 720, 721, 723, 724, 725, 726, 816, 869, 947, 948, 949, 952, 953, 954, 955, 957, 963, 966, 968, 969, 971, 972, 975, 979, 980, 981, 982, 983, 985, 987, 989, 990, 992, 994, 995, 996, 1002, 1011, 1013, 1019, 1020, 1030, 1057, 1058, 1059, 1064, 1066, 1069, 1076, 1090, 1092, 1094, 1095, 1096, 1099, 1105, 1125, 1126, 1128, 1130], "orient": [29, 70, 73, 74, 78, 97, 113, 120, 160, 179, 191, 200, 202, 207, 213, 216, 219, 230, 231, 240, 242, 254, 259, 262, 265, 267, 304, 306, 307, 317, 318, 319, 352, 425, 448, 462, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 507, 509, 542, 543, 550, 565, 568, 571, 587, 593, 597, 606, 609, 610, 624, 625, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 651, 682, 698, 706, 707, 715, 723, 725, 726, 972, 979, 980, 981, 982, 996, 1030, 1057, 1058, 1059, 1064, 1066, 1069, 1099, 1105, 1126, 1128], "cluster_python_misc": [29, 90, 197, 303, 304, 305, 306, 307, 308, 317, 726, 972, 994, 1024, 1028, 1029, 1030, 1040, 1043, 1051, 1054, 1055, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1072, 1073, 1077, 1078, 1084, 1085, 1087, 1091, 1099, 1102, 1109], "cluster_python_misc_panda": [29, 726, 1069, 1085, 1091], "panda": [29, 161, 172, 191, 197, 210, 223, 237, 240, 258, 261, 273, 290, 292, 294, 335, 426, 726, 995, 1069, 1071, 1074, 1077, 1085], "cluster_python_misc_ai": [29, 726, 1069, 1072, 1073, 1077, 1078, 1085], "machin": [29, 102, 110, 111, 113, 132, 142, 147, 161, 176, 192, 199, 200, 209, 210, 213, 215, 225, 228, 282, 290, 294, 316, 320, 340, 356, 358, 366, 374, 402, 406, 420, 501, 502, 726, 773, 800, 801, 806, 809, 812, 862, 869, 883, 884, 885, 886, 888, 889, 890, 932, 947, 950, 957, 971, 1069, 1073, 1077, 1085, 1098, 1127], "artifici": [29, 176, 201, 259, 290, 294, 402, 636, 726, 890, 963, 1069, 1073, 1077, 1078, 1085], "intellig": [29, 140, 176, 216, 252, 259, 262, 272, 278, 290, 294, 323, 726, 744, 968, 972, 1069, 1073, 1077, 1078, 1085], "cluster_python_exercis": [29, 197, 317, 726, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069], "cluster_python_exercises_herdt": [29, 726, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1069], "cluster_python_exercises_legaci": [29, 197, 317, 726, 1030, 1038, 1039, 1040, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1069], "legaci": [29, 197, 317, 447, 726, 1030, 1038, 1039, 1040, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1069, 1120], "cluster_python_exercises_userdb": [29, 726, 1030, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069], "databas": [29, 42, 43, 55, 78, 137, 159, 160, 179, 201, 207, 212, 213, 216, 218, 219, 222, 226, 240, 268, 269, 290, 308, 444, 445, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 726, 829, 860, 881, 989, 1028, 1030, 1049, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1069, 1085, 1089, 1101, 1117], "seri": [29, 100, 141, 212, 216, 257, 258, 259, 260, 262, 264, 266, 291, 404, 425, 454, 726, 882, 996, 1028, 1030, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1069, 1070, 1076, 1085, 1090, 1091, 1092, 1094, 1095, 1140], "cluster_python_exercises_csv": [29, 726, 1027, 1028, 1029, 1030, 1069], "csv": [29, 44, 51, 53, 54, 55, 56, 78, 106, 115, 176, 179, 188, 191, 197, 201, 202, 205, 207, 209, 210, 213, 214, 216, 220, 223, 226, 228, 234, 235, 238, 253, 257, 258, 260, 263, 264, 268, 269, 275, 280, 284, 287, 290, 292, 425, 726, 815, 818, 833, 855, 983, 986, 989, 1023, 1030, 1064, 1065, 1066, 1067, 1069, 1071, 1074, 1075, 1076, 1077, 1085], "cluster_python_exercises_sensor": [29, 726, 1030, 1057, 1058, 1059, 1069], "sensor": [29, 69, 72, 73, 74, 78, 81, 84, 97, 106, 109, 113, 114, 115, 118, 120, 167, 176, 180, 216, 237, 248, 256, 265, 268, 269, 284, 287, 290, 294, 317, 321, 323, 441, 446, 448, 456, 462, 463, 466, 467, 471, 477, 480, 486, 490, 491, 492, 493, 494, 495, 496, 507, 510, 511, 512, 513, 514, 515, 516, 517, 542, 550, 615, 652, 701, 702, 703, 726, 773, 869, 876, 908, 910, 927, 983, 1030, 1058, 1069, 1136], "And": [29, 97, 99, 102, 103, 104, 106, 113, 120, 140, 141, 142, 144, 147, 170, 176, 179, 199, 202, 207, 209, 218, 220, 229, 237, 244, 245, 246, 248, 249, 251, 252, 254, 255, 258, 262, 272, 273, 275, 276, 278, 283, 292, 425, 431, 437, 441, 448, 450, 462, 476, 490, 491, 492, 493, 494, 495, 496, 497, 500, 503, 507, 519, 520, 542, 550, 572, 580, 585, 595, 598, 606, 610, 639, 651, 682, 683, 684, 693, 698, 705, 707, 715, 723, 724, 725, 726, 796, 802, 803, 806, 807, 811, 815, 823, 825, 827, 828, 837, 838, 839, 840, 841, 842, 843, 844, 845, 847, 853, 863, 869, 876, 883, 885, 892, 898, 900, 905, 908, 910, 914, 924, 927, 930, 932, 935, 947, 949, 951, 952, 953, 954, 955, 958, 970, 972, 977, 980, 981, 982, 986, 987, 1011, 1027, 1028, 1029, 1030, 1043, 1054, 1064, 1065, 1066, 1069, 1081, 1085, 1091, 1099, 1125], "acquisit": [29, 115, 140, 167, 268, 269, 284, 287, 290, 291, 294, 534, 726, 1026, 1030, 1058, 1059, 1069], "cluster_python_bas": [29, 90, 197, 303, 304, 305, 306, 307, 308, 317, 726, 972, 979, 980, 981, 982, 986, 994, 1005, 1014, 1024, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1081, 1084, 1085, 1091, 1099], "fundament": [29, 59, 62, 73, 90, 163, 172, 175, 177, 179, 181, 184, 186, 191, 194, 197, 200, 203, 213, 219, 223, 231, 234, 303, 304, 305, 306, 307, 308, 317, 335, 336, 424, 454, 726, 751, 972, 979, 980, 981, 982, 986, 1005, 1014, 1019, 1024, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1081, 1084, 1085, 1091, 1099, 1100], "cluster_python_db": [29, 726, 1027, 1029, 1030, 1069, 1081], "cluster_python_swdev": [29, 726, 1024, 1069, 1072, 1073, 1077, 1085, 1087, 1099, 1102, 1104, 1109], "cluster_python_swdev_pytest": [29, 726, 1069, 1099, 1104], "pytest": [29, 216, 226, 229, 237, 240, 249, 258, 266, 268, 273, 284, 287, 290, 291, 294, 325, 426, 726, 1059, 1067, 1068, 1069, 1099], "cluster_python_draft": [29, 726, 1024, 1069], "python_python_5550_xml_etre": [29, 726, 1069], "xml": [29, 115, 136, 137, 287, 726, 1069, 1085], "elementtre": [29, 240, 726, 1069, 1085], "etre": [29, 240, 726, 1069, 1085], "python_advanced_modul": [29, 726, 972, 1024, 1027, 1028, 1029, 1030, 1064, 1065, 1066, 1067, 1068, 1069, 1072, 1073, 1077, 1081, 1085, 1087, 1099, 1102, 1104, 1109], "gt": [29, 32, 35, 36, 53, 55, 56, 72, 73, 74, 87, 90, 114, 119, 120, 129, 159, 162, 173, 178, 183, 190, 196, 197, 199, 204, 209, 212, 215, 220, 222, 225, 228, 232, 235, 238, 241, 250, 253, 257, 260, 270, 274, 280, 292, 303, 304, 305, 306, 307, 308, 311, 312, 317, 355, 370, 379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 431, 448, 462, 490, 491, 492, 493, 494, 495, 496, 497, 500, 507, 509, 542, 550, 565, 568, 571, 587, 593, 597, 606, 609, 610, 615, 624, 625, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 644, 651, 658, 682, 683, 693, 698, 707, 715, 723, 725, 726, 730, 733, 735, 738, 740, 743, 745, 749, 750, 752, 754, 756, 758, 764, 766, 768, 770, 777, 779, 782, 784, 788, 791, 794, 796, 800, 801, 802, 803, 806, 807, 814, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 853, 863, 869, 876, 881, 882, 883, 884, 885, 892, 898, 900, 908, 910, 912, 924, 927, 930, 932, 949, 951, 952, 953, 954, 955, 956, 957, 958, 972, 979, 980, 981, 982, 986, 994, 1005, 1014, 1024, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1072, 1073, 1077, 1081, 1084, 1085, 1087, 1091, 1099, 1102, 1104, 1109, 1110], "python_basics_python_0220_for": [29, 90, 197, 303, 304, 305, 306, 307, 308, 317, 726, 972, 994, 1027, 1028, 1029, 1030, 1040, 1043, 1044, 1046, 1050, 1051, 1052, 1053, 1054, 1055, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1081, 1085], "loop": [29, 32, 34, 38, 42, 59, 62, 89, 90, 97, 110, 111, 113, 115, 120, 128, 133, 140, 155, 164, 176, 179, 181, 184, 185, 186, 189, 197, 199, 200, 201, 203, 207, 210, 213, 218, 219, 221, 223, 224, 229, 231, 233, 234, 236, 237, 239, 249, 252, 259, 262, 269, 272, 273, 278, 279, 287, 291, 303, 304, 305, 306, 307, 308, 309, 317, 322, 340, 343, 346, 355, 358, 370, 377, 378, 379, 386, 392, 396, 399, 400, 403, 404, 412, 416, 421, 422, 489, 490, 531, 542, 573, 578, 635, 642, 644, 670, 682, 705, 716, 723, 725, 726, 761, 771, 776, 790, 804, 806, 810, 817, 873, 895, 896, 897, 905, 931, 935, 941, 944, 945, 972, 973, 976, 977, 982, 994, 1027, 1028, 1029, 1030, 1032, 1034, 1040, 1042, 1043, 1044, 1046, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1071, 1081, 1085, 1087, 1124, 1125, 1126, 1135], "python_basics_python_0450_dictionari": [29, 90, 726, 972, 994, 1030, 1043, 1054, 1069], "python_advanced_closur": [29, 726, 972, 1069], "closur": [29, 59, 62, 63, 159, 172, 176, 184, 185, 200, 213, 216, 226, 259, 262, 291, 686, 726, 969, 972, 1012, 1014, 1069, 1135], "python_basics_python_0270_funct": [29, 90, 197, 726, 972, 994, 1014, 1027, 1028, 1029, 1030, 1040, 1043, 1044, 1046, 1050, 1051, 1052, 1053, 1054, 1055, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1081], "python_advanced_decor": [29, 726, 972, 1069], "decor": [29, 59, 62, 160, 172, 175, 176, 191, 200, 216, 226, 240, 441, 448, 462, 476, 490, 542, 726, 968, 972, 983, 990, 991, 993, 1014, 1069, 1071, 1105, 1128], "python_advanced_stararg": [29, 726, 972, 1069], "keyword": [29, 39, 63, 124, 135, 173, 176, 177, 178, 179, 181, 200, 202, 216, 221, 226, 228, 249, 252, 253, 259, 262, 266, 268, 269, 272, 274, 278, 284, 287, 290, 291, 294, 317, 384, 414, 557, 558, 560, 578, 629, 689, 726, 922, 968, 969, 970, 972, 996, 1012, 1014, 1026, 1069, 1082, 1122, 1124], "argument": [29, 57, 63, 90, 97, 113, 133, 139, 142, 145, 159, 160, 173, 176, 188, 197, 200, 207, 209, 213, 215, 216, 218, 219, 221, 223, 225, 226, 229, 230, 231, 232, 234, 237, 252, 253, 256, 259, 262, 266, 268, 269, 272, 273, 274, 278, 279, 287, 290, 291, 294, 317, 339, 340, 385, 392, 396, 399, 403, 412, 416, 421, 422, 426, 488, 520, 544, 554, 555, 644, 659, 679, 682, 692, 704, 723, 724, 725, 726, 731, 732, 833, 855, 869, 903, 905, 907, 910, 927, 965, 968, 972, 994, 996, 997, 1014, 1022, 1024, 1027, 1028, 1029, 1030, 1032, 1033, 1034, 1035, 1037, 1038, 1040, 1042, 1043, 1044, 1045, 1046, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1082, 1098, 1105, 1107], "python_advanced_iteration_gener": [29, 726, 972, 1069], "comprehens": [29, 63, 68, 160, 161, 173, 176, 179, 185, 199, 200, 201, 208, 213, 214, 216, 217, 218, 221, 224, 230, 233, 249, 252, 254, 261, 266, 272, 273, 278, 279, 290, 291, 293, 294, 687, 726, 744, 761, 769, 972, 977, 1069, 1090], "python_advanced_except": [29, 726, 972, 1069], "python_advanced_oo_inherit": [29, 726, 972, 979, 980, 981, 982, 986, 1069, 1099], "inherit": [29, 65, 69, 73, 106, 120, 157, 167, 176, 200, 213, 226, 230, 232, 265, 266, 267, 268, 269, 273, 290, 291, 294, 326, 448, 462, 490, 498, 500, 540, 542, 543, 567, 616, 619, 639, 681, 726, 765, 805, 808, 811, 832, 834, 941, 970, 972, 980, 981, 982, 983, 986, 988, 991, 1069, 1098, 1099, 1141], "python_basics_python_0140_vari": [29, 90, 197, 303, 304, 305, 306, 307, 308, 317, 726, 972, 979, 980, 981, 982, 986, 994, 1005, 1014, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1081, 1084, 1085, 1091, 1099], "python_advanced_context_mgr": [29, 726, 972, 1069], "statement": [29, 54, 90, 110, 111, 160, 172, 176, 177, 178, 179, 184, 186, 191, 197, 200, 201, 203, 207, 210, 213, 219, 223, 229, 231, 234, 237, 243, 249, 252, 259, 262, 266, 268, 269, 272, 273, 278, 279, 284, 287, 290, 291, 294, 303, 304, 305, 306, 307, 308, 317, 322, 339, 342, 346, 359, 372, 374, 375, 378, 379, 384, 386, 392, 396, 399, 403, 406, 412, 416, 421, 422, 598, 624, 643, 644, 682, 723, 725, 726, 734, 806, 846, 932, 953, 967, 970, 972, 973, 978, 982, 984, 994, 1001, 1004, 1006, 1013, 1024, 1027, 1028, 1029, 1030, 1032, 1033, 1034, 1035, 1037, 1040, 1043, 1044, 1045, 1046, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1072, 1073, 1077, 1081, 1085, 1087, 1099, 1102, 1105, 1109, 1135], "python_advanced_oo_classes_and_dict": [29, 726, 972, 979, 980, 981, 982, 986, 1030, 1057, 1058, 1059, 1064, 1066, 1069, 1099], "python_advanced_exec": [29, 726, 972, 1069], "python_basics_python_0500_fil": [29, 90, 197, 303, 304, 305, 306, 307, 308, 317, 726, 972, 994, 1028, 1029, 1030, 1040, 1043, 1051, 1054, 1055, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1085], "python_advanced_comprehens": [29, 726, 972, 1069], "python_basics_python_0150_datatypes_overview_compound": [29, 90, 197, 303, 304, 305, 306, 307, 308, 317, 726, 972, 979, 980, 981, 982, 986, 994, 1027, 1028, 1029, 1030, 1038, 1039, 1040, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1081, 1084, 1085, 1091, 1099], "python_advanced_python_1010_generators_yield": [29, 726, 972, 1027, 1028, 1029, 1030, 1043, 1054, 1069, 1081], "python_basics_python_0200_sequential_typ": [29, 90, 197, 303, 304, 305, 306, 307, 308, 317, 726, 972, 994, 1027, 1028, 1029, 1030, 1040, 1043, 1044, 1046, 1050, 1051, 1052, 1053, 1054, 1055, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1081, 1084, 1085, 1091], "sequenti": [29, 63, 90, 106, 108, 176, 177, 179, 181, 184, 185, 186, 189, 197, 202, 207, 210, 213, 218, 219, 221, 223, 231, 233, 234, 237, 241, 249, 252, 259, 262, 265, 267, 269, 270, 272, 273, 278, 279, 290, 291, 294, 303, 304, 305, 306, 307, 308, 317, 322, 415, 490, 503, 507, 542, 577, 587, 595, 606, 610, 639, 726, 877, 879, 909, 972, 977, 994, 1027, 1028, 1029, 1030, 1040, 1043, 1044, 1046, 1050, 1051, 1052, 1053, 1054, 1055, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1081, 1084, 1085, 1091, 1135], "python_basics_python_0225_rang": [29, 90, 197, 726, 972, 994, 1027, 1028, 1029, 1030, 1040, 1043, 1044, 1046, 1050, 1051, 1052, 1053, 1054, 1055, 1069, 1081], "python_advanced_multithreading_bas": [29, 726, 972, 979, 980, 981, 982, 1069], "python_advanced_multithreading_exam_quest": [29, 726, 972, 980, 982, 1069], "exam": [29, 96, 97, 106, 201, 217, 223, 246, 255, 276, 319, 331, 726, 803, 869, 910, 930, 972, 980, 1069, 1070], "python_advanced_multithreading_mutex": [29, 726, 972, 980, 981, 982, 1069], "race": [29, 72, 73, 74, 78, 87, 140, 158, 218, 244, 245, 247, 256, 267, 268, 269, 290, 291, 294, 298, 325, 326, 332, 401, 411, 520, 692, 708, 715, 725, 726, 750, 754, 775, 777, 782, 786, 788, 791, 794, 869, 899, 909, 910, 915, 923, 924, 930, 972, 980, 982, 1069, 1130, 1140, 1141], "condit": [29, 72, 73, 74, 78, 87, 89, 119, 140, 151, 158, 199, 218, 238, 244, 245, 247, 256, 267, 268, 269, 290, 291, 294, 298, 325, 326, 332, 340, 342, 346, 369, 370, 372, 373, 375, 377, 379, 386, 392, 396, 399, 401, 403, 411, 412, 416, 421, 422, 429, 434, 435, 436, 520, 537, 626, 644, 682, 692, 702, 708, 715, 716, 723, 725, 726, 750, 754, 775, 777, 782, 786, 788, 790, 791, 794, 869, 899, 905, 909, 910, 915, 923, 924, 926, 930, 972, 980, 982, 1005, 1006, 1021, 1069, 1075, 1090, 1130, 1140, 1141], "mutex": [29, 72, 73, 74, 76, 78, 87, 89, 158, 187, 218, 243, 244, 245, 247, 256, 267, 268, 269, 290, 291, 294, 298, 325, 326, 332, 520, 709, 711, 713, 714, 715, 725, 726, 750, 754, 771, 775, 776, 777, 782, 788, 791, 792, 794, 869, 910, 915, 920, 923, 924, 972, 980, 982, 1069, 1125, 1130, 1141], "python_advanced_oo_namedtupl": [29, 726, 972, 986, 1030, 1064, 1066, 1069], "namedtupl": [29, 176, 184, 191, 206, 207, 209, 215, 225, 228, 249, 266, 268, 269, 273, 284, 287, 290, 291, 294, 726, 972, 986, 1030, 1064, 1066, 1069, 1089, 1135], "python_advanced_oo_abc": [29, 726, 972, 986, 1069], "abstract": [29, 78, 84, 176, 216, 248, 265, 266, 267, 268, 269, 290, 291, 294, 321, 385, 424, 426, 441, 448, 452, 454, 456, 462, 464, 476, 490, 500, 542, 577, 616, 617, 694, 726, 806, 810, 879, 894, 972, 986, 1069, 1128, 1130], "abc": [29, 32, 159, 173, 176, 178, 183, 188, 190, 196, 199, 201, 205, 209, 212, 215, 216, 220, 222, 225, 228, 232, 235, 238, 241, 249, 250, 253, 260, 266, 268, 269, 270, 274, 280, 284, 287, 290, 291, 292, 294, 304, 312, 426, 500, 569, 590, 607, 609, 726, 972, 986, 1002, 1069], "duck": [29, 32, 175, 176, 226, 230, 249, 266, 268, 269, 273, 290, 291, 294, 441, 500, 726, 972, 979, 986, 1069, 1071, 1076, 1125], "python_advanced_oo_str_repr": [29, 726, 972, 986, 1069], "str": [29, 159, 162, 173, 183, 188, 190, 191, 196, 199, 201, 209, 212, 215, 220, 222, 225, 228, 232, 235, 238, 241, 249, 250, 252, 253, 257, 258, 259, 260, 262, 264, 266, 268, 269, 270, 272, 273, 274, 278, 280, 284, 285, 287, 288, 290, 291, 292, 294, 302, 308, 311, 312, 313, 317, 390, 408, 426, 475, 480, 561, 562, 563, 564, 679, 691, 726, 970, 972, 984, 986, 987, 990, 999, 1001, 1002, 1013, 1017, 1021, 1028, 1036, 1038, 1069, 1084, 1090, 1095, 1096], "repr": [29, 190, 209, 215, 225, 228, 232, 235, 238, 249, 252, 253, 259, 262, 266, 268, 269, 272, 273, 274, 278, 284, 285, 287, 290, 291, 294, 726, 970, 972, 986, 987, 1069], "python_advanced_oo_method": [29, 726, 972, 986, 1030, 1057, 1058, 1059, 1069], "method": [29, 42, 43, 54, 55, 57, 63, 65, 69, 70, 73, 90, 97, 106, 107, 110, 111, 115, 117, 119, 120, 145, 176, 177, 178, 179, 181, 184, 197, 198, 200, 202, 207, 210, 211, 213, 218, 219, 221, 223, 224, 226, 227, 229, 230, 231, 232, 234, 237, 239, 249, 252, 254, 258, 259, 262, 264, 266, 267, 268, 269, 272, 273, 275, 278, 279, 281, 284, 287, 290, 291, 293, 294, 303, 304, 305, 306, 307, 308, 317, 321, 322, 398, 424, 444, 446, 448, 452, 462, 469, 470, 488, 490, 495, 500, 501, 502, 507, 509, 514, 520, 533, 535, 542, 543, 544, 547, 556, 568, 570, 571, 587, 593, 597, 603, 606, 609, 610, 613, 614, 615, 616, 619, 624, 625, 627, 630, 631, 634, 635, 636, 637, 638, 639, 642, 651, 664, 681, 682, 685, 689, 698, 706, 707, 715, 716, 720, 721, 723, 724, 725, 726, 734, 736, 741, 742, 751, 753, 763, 775, 786, 918, 968, 969, 972, 975, 979, 983, 984, 985, 986, 987, 991, 994, 999, 1008, 1011, 1028, 1029, 1030, 1040, 1043, 1051, 1052, 1054, 1055, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1071, 1076, 1080, 1084, 1085, 1090, 1093, 1095, 1098, 1128, 1135, 1142], "python_advanced_oo_constructor": [29, 726, 972, 979, 980, 981, 982, 986, 1069, 1099], "constructor": [29, 43, 53, 56, 70, 97, 110, 111, 113, 115, 117, 119, 120, 167, 173, 179, 199, 200, 202, 213, 218, 226, 230, 249, 252, 254, 259, 262, 265, 266, 267, 268, 269, 270, 272, 273, 278, 284, 287, 290, 291, 294, 319, 320, 321, 394, 448, 462, 488, 490, 493, 496, 500, 501, 520, 529, 535, 542, 543, 544, 550, 567, 598, 614, 615, 624, 627, 628, 629, 630, 632, 633, 634, 635, 636, 637, 638, 639, 642, 650, 651, 652, 654, 680, 682, 698, 701, 702, 703, 707, 712, 713, 714, 715, 716, 723, 725, 726, 732, 734, 765, 918, 972, 979, 980, 981, 982, 984, 986, 987, 988, 1002, 1069, 1098, 1099, 1105, 1117, 1125], "python_advanced_oo_properti": [29, 726, 972, 986, 1069], "properti": [29, 40, 160, 176, 200, 213, 230, 232, 249, 253, 266, 268, 269, 273, 283, 284, 287, 290, 291, 294, 321, 430, 431, 432, 437, 440, 726, 972, 986, 1069, 1098, 1111, 1114], "python_advanced_oo_operator_overload": [29, 726, 972, 986, 1069], "overload": [29, 97, 159, 167, 176, 202, 230, 265, 266, 267, 268, 269, 290, 294, 298, 410, 490, 498, 507, 509, 542, 544, 565, 568, 569, 571, 577, 587, 593, 597, 598, 606, 609, 610, 624, 625, 627, 628, 630, 631, 632, 634, 635, 636, 637, 638, 639, 650, 651, 655, 682, 698, 707, 715, 723, 725, 726, 732, 972, 986, 1069, 1090, 1124], "python_misc_encod": [29, 90, 197, 303, 304, 305, 306, 307, 308, 317, 726, 972, 994, 1028, 1029, 1030, 1040, 1043, 1051, 1054, 1055, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1084, 1085], "encod": [29, 43, 90, 159, 176, 177, 179, 181, 197, 200, 207, 209, 212, 215, 216, 219, 225, 226, 228, 234, 236, 239, 253, 257, 258, 260, 273, 274, 281, 291, 292, 294, 302, 303, 304, 305, 306, 307, 308, 322, 426, 726, 972, 994, 1002, 1007, 1021, 1028, 1029, 1030, 1040, 1043, 1051, 1054, 1055, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1071, 1079, 1085, 1087], "python_basics_python_0150_datatypes_overview": [29, 90, 197, 303, 304, 305, 306, 307, 308, 317, 726, 972, 979, 980, 981, 982, 986, 994, 1005, 1014, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1081, 1084, 1085, 1091, 1099], "python_basics_python_0320_strings_method": [29, 90, 197, 303, 304, 305, 306, 307, 308, 317, 726, 972, 994, 1028, 1029, 1030, 1040, 1043, 1051, 1052, 1054, 1055, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1084, 1085], "python_misc_import": [29, 726, 1024, 1069, 1072, 1073, 1077, 1085, 1087, 1099, 1102, 1109], "incomplet": [29, 170, 209, 215, 225, 228, 232, 435, 542, 617, 726, 876, 1024, 1069, 1072, 1073, 1077, 1085, 1087, 1099, 1102, 1109, 1110], "python_misc_vscod": [29, 726, 1069, 1085], "visual": [29, 78, 104, 167, 172, 176, 177, 179, 181, 192, 201, 202, 207, 210, 223, 229, 237, 240, 252, 256, 259, 262, 266, 272, 273, 278, 279, 317, 322, 337, 726, 812, 878, 949, 995, 1028, 1069, 1085], "studio": [29, 104, 167, 172, 176, 177, 179, 181, 192, 201, 202, 207, 210, 223, 229, 237, 252, 256, 259, 262, 266, 272, 273, 278, 279, 317, 322, 337, 726, 812, 995, 1069, 1085], "python_misc_mqtt": [29, 726, 1069, 1085, 1087], "mqtt": [29, 115, 189, 191, 205, 207, 216, 229, 230, 234, 268, 269, 284, 287, 290, 323, 326, 328, 726, 986, 1026, 1030, 1064, 1067, 1069, 1085], "python_swdev_venv": [29, 726, 1024, 1069, 1072, 1073, 1077, 1085, 1087, 1099, 1109], "python_misc_csv": [29, 726, 1028, 1029, 1030, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1085], "python_misc_pandas_bas": [29, 726, 1069, 1085, 1091], "datafram": [29, 258, 259, 260, 262, 266, 269, 291, 426, 726, 1069, 1074, 1077, 1085, 1088, 1090, 1091, 1092, 1094, 1095], "python_misc_pandas_filt": [29, 726, 1069, 1085, 1091], "python_misc_pandas_index": [29, 726, 1069, 1085, 1091], "python_misc_pandas_mod_col": [29, 726, 1069, 1085, 1091], "ad": [29, 32, 33, 39, 85, 114, 146, 150, 151, 152, 155, 160, 180, 192, 202, 258, 259, 262, 266, 291, 314, 365, 384, 406, 433, 443, 447, 452, 561, 563, 564, 599, 653, 689, 726, 742, 877, 879, 929, 933, 934, 969, 987, 1002, 1021, 1069, 1085, 1091, 1092, 1096, 1106], "modifi": [29, 42, 75, 88, 110, 111, 114, 115, 118, 142, 147, 155, 158, 160, 180, 199, 256, 258, 259, 262, 266, 267, 268, 269, 290, 291, 328, 343, 345, 351, 388, 400, 407, 424, 426, 428, 437, 447, 449, 452, 468, 469, 489, 498, 501, 502, 504, 505, 506, 518, 531, 534, 544, 551, 554, 555, 557, 560, 572, 624, 628, 630, 633, 636, 650, 664, 687, 692, 704, 715, 717, 720, 721, 724, 725, 726, 746, 761, 781, 800, 801, 813, 818, 869, 882, 886, 891, 910, 918, 924, 962, 963, 969, 971, 982, 1003, 1046, 1050, 1068, 1069, 1085, 1091, 1093, 1137, 1141], "column": [29, 63, 133, 142, 145, 160, 163, 209, 228, 257, 258, 259, 260, 262, 266, 291, 292, 415, 426, 726, 813, 818, 829, 1028, 1040, 1052, 1069, 1076, 1079, 1085, 1091], "python_misc_pandas_add_row": [29, 726, 1069, 1085, 1091], "row": [29, 141, 163, 179, 199, 212, 216, 218, 220, 232, 257, 258, 259, 262, 266, 279, 291, 292, 373, 415, 726, 813, 918, 970, 989, 1009, 1028, 1060, 1062, 1069, 1076, 1079, 1083, 1085, 1089, 1090, 1091, 1095], "python_misc_pandas_loc": [29, 726, 1069, 1085, 1091], "select": [29, 63, 139, 140, 142, 146, 199, 204, 212, 229, 259, 262, 291, 363, 385, 726, 773, 817, 874, 879, 913, 914, 933, 936, 938, 941, 961, 1028, 1069, 1074, 1083, 1085, 1091, 1093, 1105, 1113, 1140, 1142], "loc": [29, 160, 253, 257, 258, 259, 260, 262, 264, 266, 291, 401, 726, 918, 981, 1069, 1085, 1088, 1089, 1090, 1091, 1092], "python_misc_pandas_iloc": [29, 726, 1069, 1085, 1091], "iloc": [29, 259, 260, 262, 264, 266, 291, 426, 726, 1069, 1085, 1089, 1091, 1094], "python_basics_python_0210_indexing_sl": [29, 90, 726, 994, 1030, 1043, 1054, 1069, 1085, 1091], "python_misc_ai_k_mean": [29, 726, 1069, 1072, 1073, 1085], "python_misc_ai_machine_learning_intro": [29, 726, 1069, 1072, 1073, 1077, 1078, 1085], "concept": [29, 78, 97, 98, 99, 113, 140, 150, 164, 172, 176, 178, 180, 182, 192, 243, 246, 255, 256, 259, 276, 290, 294, 319, 320, 335, 338, 385, 408, 448, 462, 490, 491, 492, 493, 494, 495, 496, 497, 500, 542, 584, 641, 682, 692, 715, 725, 726, 796, 800, 801, 802, 803, 806, 812, 814, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 853, 863, 869, 881, 882, 883, 884, 885, 892, 898, 900, 908, 910, 914, 924, 927, 930, 932, 949, 951, 952, 953, 954, 955, 956, 957, 958, 1001, 1009, 1019, 1069, 1072, 1073, 1077, 1084, 1085, 1087, 1140], "terminologi": [29, 98, 99, 113, 146, 164, 176, 211, 246, 255, 256, 259, 276, 290, 294, 375, 448, 462, 490, 491, 492, 493, 494, 495, 496, 497, 500, 542, 557, 715, 725, 726, 796, 800, 801, 802, 803, 806, 814, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 853, 862, 863, 869, 881, 882, 883, 884, 885, 892, 898, 900, 908, 910, 924, 927, 930, 931, 932, 946, 949, 951, 952, 953, 954, 955, 956, 957, 958, 1069, 1072, 1073, 1077, 1085, 1143], "python_misc_ai_linear_regress": [29, 726, 1069, 1072, 1073, 1077, 1085], "linear": [29, 161, 163, 173, 176, 178, 196, 204, 259, 290, 294, 393, 415, 567, 692, 726, 809, 878, 944, 1006, 1069, 1072, 1073, 1078, 1085], "regress": [29, 176, 228, 259, 290, 294, 726, 1069, 1072, 1073, 1078, 1085], "python_exercises_herdt_while_even_numb": [29, 726, 1030, 1032, 1034, 1069], "python_exercises_herdt_username_password": [29, 726, 1030, 1032, 1034, 1037, 1069], "usernam": [29, 155, 184, 192, 213, 314, 726, 800, 808, 817, 880, 890, 1017, 1030, 1032, 1034, 1049, 1069, 1135], "password": [29, 147, 150, 155, 180, 184, 192, 213, 314, 317, 322, 726, 808, 830, 870, 880, 881, 886, 1030, 1032, 1034, 1049, 1069, 1082, 1135], "python_basics_python_0193_whil": [29, 90, 197, 303, 304, 305, 306, 307, 308, 317, 726, 972, 994, 1027, 1028, 1029, 1030, 1032, 1034, 1040, 1043, 1044, 1046, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1081, 1085], "python_basics_python_0139_commandline_argv": [29, 90, 197, 317, 726, 994, 1024, 1027, 1028, 1029, 1030, 1032, 1033, 1034, 1035, 1037, 1038, 1040, 1043, 1044, 1045, 1046, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069], "sy": [29, 32, 90, 114, 117, 119, 141, 158, 160, 162, 163, 188, 190, 191, 197, 200, 206, 209, 213, 215, 220, 223, 225, 228, 229, 231, 232, 234, 235, 237, 250, 252, 253, 258, 259, 262, 268, 272, 273, 274, 278, 279, 290, 294, 302, 303, 310, 317, 413, 426, 485, 501, 502, 726, 728, 732, 753, 830, 859, 870, 877, 878, 879, 895, 896, 897, 899, 903, 904, 905, 906, 907, 909, 911, 913, 914, 928, 935, 937, 940, 944, 961, 971, 978, 993, 994, 1013, 1021, 1023, 1024, 1027, 1028, 1029, 1030, 1032, 1033, 1034, 1035, 1037, 1038, 1040, 1042, 1043, 1044, 1045, 1046, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1096, 1098, 1105, 1120], "argv": [29, 42, 50, 90, 142, 159, 160, 163, 173, 191, 197, 200, 201, 206, 209, 213, 215, 218, 219, 223, 225, 228, 229, 231, 234, 237, 252, 258, 259, 262, 268, 272, 273, 278, 279, 290, 294, 302, 310, 317, 391, 426, 427, 449, 488, 726, 877, 903, 904, 905, 906, 907, 911, 914, 928, 935, 944, 965, 971, 978, 994, 1023, 1024, 1027, 1028, 1029, 1030, 1032, 1033, 1034, 1035, 1037, 1038, 1040, 1042, 1043, 1044, 1045, 1046, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1112, 1117], "python_exercises_herdt_boolean": [29, 726, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1069], "boolean": [29, 58, 84, 90, 160, 161, 177, 179, 181, 184, 185, 186, 197, 203, 207, 210, 211, 213, 214, 215, 219, 221, 223, 224, 229, 230, 231, 233, 234, 236, 237, 252, 259, 262, 272, 273, 278, 279, 303, 304, 305, 306, 307, 308, 317, 322, 346, 369, 385, 726, 920, 972, 994, 1002, 1005, 1006, 1017, 1027, 1028, 1029, 1030, 1032, 1033, 1034, 1035, 1036, 1037, 1040, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1081, 1083, 1085, 1135], "express": [29, 59, 62, 159, 175, 176, 178, 179, 189, 199, 208, 213, 214, 216, 220, 239, 240, 242, 243, 244, 245, 248, 249, 254, 273, 274, 279, 292, 340, 342, 346, 350, 359, 360, 362, 363, 364, 367, 369, 372, 374, 375, 377, 379, 385, 386, 392, 396, 399, 403, 412, 416, 421, 422, 426, 441, 450, 462, 463, 466, 470, 476, 477, 490, 498, 542, 544, 622, 644, 655, 659, 664, 682, 723, 725, 726, 833, 866, 947, 967, 977, 983, 1004, 1006, 1013, 1015, 1030, 1032, 1033, 1034, 1035, 1036, 1037, 1067, 1068, 1069, 1071, 1092, 1124, 1125, 1126], "python_basics_python_0160_boolean": [29, 90, 197, 303, 304, 305, 306, 307, 308, 317, 726, 972, 994, 1005, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1040, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1081, 1085], "python_exercises_herdt_greet": [29, 726, 1030, 1032, 1033, 1034, 1037, 1069], "python_basics_python_0170_if": [29, 90, 197, 303, 304, 305, 306, 307, 308, 317, 726, 972, 994, 1005, 1027, 1028, 1029, 1030, 1032, 1033, 1034, 1035, 1037, 1040, 1043, 1044, 1045, 1046, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1081, 1085], "python_exercises_herdt_swap": [29, 726, 1030, 1032, 1033, 1034, 1035, 1036, 1037, 1069], "python_basics_python_0120_helloworld": [29, 90, 197, 303, 304, 305, 306, 307, 308, 317, 726, 972, 979, 980, 981, 982, 986, 994, 1005, 1014, 1024, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1081, 1084, 1085, 1091, 1099], "world": [29, 78, 90, 133, 136, 137, 140, 145, 151, 170, 179, 183, 184, 186, 190, 197, 201, 203, 205, 207, 209, 210, 213, 215, 218, 219, 220, 222, 223, 229, 230, 231, 232, 234, 235, 237, 240, 252, 253, 259, 262, 272, 273, 278, 279, 292, 303, 304, 305, 306, 307, 308, 312, 317, 350, 355, 359, 370, 379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 427, 432, 440, 463, 468, 470, 641, 644, 682, 708, 716, 723, 725, 726, 730, 733, 735, 738, 740, 743, 750, 754, 758, 764, 770, 775, 777, 782, 785, 788, 791, 794, 811, 824, 836, 869, 907, 918, 933, 934, 947, 959, 961, 963, 964, 965, 972, 979, 980, 981, 982, 986, 994, 998, 999, 1005, 1008, 1010, 1014, 1015, 1024, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1071, 1076, 1081, 1084, 1085, 1091, 1099, 1121, 1125, 1135], "python_exercises_herdt_max_numb": [29, 726, 1030, 1032, 1033, 1034, 1035, 1037, 1069], "determin": [29, 102, 113, 133, 139, 163, 168, 170, 178, 179, 184, 186, 191, 197, 203, 207, 209, 210, 213, 219, 223, 229, 231, 234, 236, 237, 252, 259, 272, 273, 278, 279, 620, 654, 655, 692, 726, 781, 803, 822, 823, 824, 825, 826, 827, 828, 865, 869, 878, 896, 933, 934, 964, 1030, 1032, 1033, 1034, 1037, 1040, 1043, 1044, 1050, 1051, 1052, 1053, 1054, 1055, 1069, 1100, 1135], "python_exercises_legacy_wc": [29, 197, 726, 1030, 1040, 1043, 1051, 1054, 1055, 1069], "line": [29, 34, 35, 36, 38, 63, 136, 137, 140, 142, 145, 155, 159, 162, 163, 176, 180, 190, 192, 196, 197, 199, 200, 205, 206, 209, 210, 212, 213, 215, 216, 218, 219, 220, 223, 225, 226, 228, 229, 231, 232, 235, 237, 238, 240, 241, 252, 253, 258, 259, 260, 262, 266, 270, 272, 273, 274, 278, 279, 280, 292, 308, 317, 340, 346, 347, 355, 359, 362, 364, 370, 379, 381, 386, 392, 396, 399, 403, 408, 412, 415, 416, 418, 421, 422, 426, 429, 432, 439, 469, 470, 620, 623, 626, 644, 682, 723, 725, 726, 742, 746, 753, 755, 773, 800, 801, 804, 813, 815, 817, 839, 860, 862, 864, 865, 866, 870, 874, 877, 878, 879, 921, 931, 962, 968, 973, 974, 998, 1015, 1019, 1021, 1022, 1023, 1028, 1030, 1043, 1049, 1054, 1068, 1069, 1071, 1074, 1079, 1084, 1106], "word": [29, 43, 65, 133, 140, 160, 168, 172, 176, 179, 186, 191, 197, 201, 207, 210, 218, 219, 223, 226, 228, 229, 231, 234, 236, 237, 244, 245, 247, 252, 259, 266, 272, 273, 274, 278, 279, 291, 298, 317, 322, 347, 400, 442, 447, 520, 620, 698, 707, 715, 725, 726, 813, 815, 862, 934, 1030, 1040, 1043, 1044, 1046, 1050, 1051, 1052, 1053, 1054, 1056, 1069], "charact": [29, 142, 158, 183, 188, 192, 197, 201, 205, 212, 218, 228, 235, 238, 256, 259, 274, 280, 340, 341, 347, 355, 358, 364, 365, 370, 379, 386, 392, 396, 399, 402, 403, 407, 409, 412, 416, 421, 422, 607, 644, 682, 723, 724, 725, 726, 735, 740, 743, 750, 754, 764, 767, 775, 777, 782, 788, 789, 791, 794, 813, 815, 833, 855, 869, 877, 932, 982, 1001, 1015, 1016, 1017, 1021, 1023, 1030, 1033, 1040, 1043, 1051, 1054, 1069, 1084, 1112], "python_exercises_legacy_python_0350_exercis": [29, 197, 726, 1030, 1040, 1043, 1051, 1052, 1054, 1055, 1069], "right": [29, 34, 35, 36, 38, 42, 63, 80, 84, 115, 133, 139, 140, 142, 145, 160, 180, 191, 192, 197, 202, 207, 220, 222, 228, 232, 240, 253, 266, 274, 303, 309, 341, 361, 362, 363, 369, 380, 410, 440, 491, 499, 546, 561, 563, 564, 642, 654, 670, 696, 701, 706, 726, 734, 753, 757, 773, 792, 815, 816, 818, 833, 888, 918, 968, 990, 1001, 1007, 1030, 1040, 1043, 1051, 1054, 1055, 1069], "justifi": [29, 160, 172, 197, 207, 228, 274, 341, 708, 726, 995, 1030, 1040, 1043, 1051, 1054, 1055, 1069], "python_exercises_legacy_passwd": [29, 726, 1030, 1043, 1054, 1069], "pars": [29, 159, 196, 197, 207, 208, 210, 213, 219, 223, 228, 229, 231, 237, 240, 268, 273, 290, 294, 303, 308, 321, 726, 1024, 1030, 1043, 1054, 1069, 1071, 1096], "passwd": [29, 100, 101, 113, 180, 190, 199, 212, 213, 215, 219, 220, 223, 228, 229, 231, 235, 237, 238, 246, 253, 255, 256, 260, 270, 274, 276, 277, 724, 726, 803, 805, 808, 810, 813, 815, 817, 828, 847, 850, 852, 853, 855, 858, 860, 864, 866, 869, 870, 880, 881, 889, 890, 894, 895, 900, 906, 926, 940, 968, 970, 1017, 1021, 1030, 1043, 1054, 1069, 1100], "python_exercises_legacy_distil": [29, 197, 726, 1030, 1040, 1043, 1054, 1069], "elimin": [29, 58, 133, 197, 219, 226, 228, 229, 231, 237, 252, 259, 272, 278, 279, 469, 514, 705, 726, 866, 973, 1030, 1043, 1054, 1069], "empti": [29, 38, 42, 48, 50, 140, 143, 150, 158, 178, 180, 197, 209, 212, 219, 220, 226, 228, 229, 231, 232, 235, 237, 238, 241, 252, 253, 258, 259, 260, 270, 272, 274, 278, 279, 312, 346, 398, 537, 546, 547, 551, 561, 563, 579, 580, 598, 616, 636, 642, 691, 701, 702, 714, 724, 726, 736, 773, 800, 801, 813, 817, 827, 864, 873, 886, 920, 940, 978, 1019, 1030, 1043, 1044, 1048, 1054, 1069], "comment": [29, 34, 35, 36, 38, 44, 133, 142, 177, 197, 198, 200, 213, 219, 221, 225, 226, 229, 231, 236, 237, 252, 259, 261, 272, 278, 279, 317, 340, 385, 404, 432, 469, 470, 498, 726, 878, 1016, 1030, 1043, 1054, 1069, 1084, 1098], "python_exercises_legacy_revert": [29, 197, 726, 1030, 1040, 1043, 1051, 1054, 1069], "revert": [29, 140, 197, 726, 751, 769, 931, 990, 1030, 1040, 1043, 1054, 1069], "python_exercises_legacy_max_numbers_funct": [29, 197, 726, 1030, 1040, 1043, 1044, 1046, 1050, 1051, 1052, 1053, 1054, 1055, 1069], "python_exercises_legacy_for_prim": [29, 197, 726, 1030, 1040, 1043, 1044, 1046, 1050, 1051, 1052, 1053, 1054, 1055, 1069], "prime": [29, 38, 159, 160, 179, 183, 184, 186, 191, 197, 203, 207, 219, 223, 226, 231, 237, 252, 259, 272, 273, 278, 279, 402, 726, 1030, 1040, 1043, 1044, 1046, 1051, 1052, 1053, 1054, 1055, 1069, 1135], "python_exercises_legacy_max_numb": [29, 197, 726, 1030, 1040, 1043, 1044, 1045, 1046, 1050, 1051, 1052, 1053, 1054, 1055, 1069], "python_exercises_legacy_function_prim": [29, 197, 726, 1030, 1040, 1043, 1044, 1050, 1051, 1052, 1053, 1054, 1055, 1069], "python_exercises_legacy_mixed_list_interact": [29, 197, 726, 1030, 1040, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1069], "interact": [29, 63, 85, 117, 119, 136, 147, 179, 180, 186, 197, 207, 209, 210, 213, 215, 223, 225, 228, 233, 252, 253, 259, 272, 273, 278, 279, 281, 726, 833, 881, 886, 889, 899, 961, 996, 1030, 1039, 1040, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1069, 1076, 1084], "interpret": [29, 63, 136, 142, 160, 161, 172, 176, 179, 186, 197, 200, 207, 209, 210, 213, 215, 223, 225, 228, 232, 248, 249, 252, 258, 259, 272, 273, 274, 278, 279, 281, 290, 291, 317, 402, 437, 441, 448, 452, 462, 476, 490, 542, 726, 773, 857, 879, 900, 947, 948, 995, 996, 997, 998, 1028, 1030, 1039, 1040, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1053, 1054, 1055, 1069, 1071, 1084, 1107, 1128], "python_exercises_legacy_dict_keyerror": [29, 726, 1030, 1039, 1043, 1069], "python_exercises_legacy_while_prim": [29, 197, 726, 1030, 1040, 1043, 1044, 1046, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1069], "python_exercises_legacy_mixed_list_execut": [29, 197, 726, 1030, 1040, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1053, 1054, 1055, 1069], "execut": [29, 44, 63, 108, 110, 111, 113, 133, 136, 140, 142, 150, 151, 155, 160, 167, 172, 179, 186, 192, 197, 207, 209, 210, 213, 215, 223, 225, 228, 252, 259, 272, 273, 278, 279, 282, 283, 302, 303, 310, 317, 339, 340, 374, 376, 380, 402, 407, 411, 420, 428, 431, 432, 444, 463, 466, 473, 480, 485, 499, 528, 552, 567, 670, 724, 726, 771, 773, 799, 800, 801, 808, 810, 815, 820, 821, 829, 833, 880, 889, 918, 931, 945, 947, 948, 949, 950, 953, 957, 959, 963, 965, 971, 975, 979, 982, 995, 1005, 1006, 1009, 1028, 1030, 1040, 1043, 1044, 1045, 1046, 1050, 1051, 1052, 1053, 1054, 1055, 1069, 1080, 1083, 1113, 1115, 1127, 1138, 1139], "python_exercises_legacy_python_1011_generators_yield": [29, 726, 1030, 1043, 1069], "fibonacci": [29, 160, 163, 179, 200, 213, 252, 266, 268, 269, 273, 279, 290, 291, 294, 649, 671, 726, 975, 976, 977, 1030, 1043, 1069], "python_exercises_legacy_uniq_gener": [29, 726, 1030, 1043, 1054, 1069], "uniq": [29, 159, 160, 177, 179, 191, 197, 207, 210, 213, 219, 223, 229, 231, 234, 252, 259, 272, 273, 278, 279, 518, 726, 866, 1030, 1040, 1043, 1044, 1051, 1052, 1055, 1069], "python_exercises_legacy_join_funct": [29, 197, 726, 1030, 1040, 1043, 1044, 1051, 1052, 1054, 1055, 1069], "join": [29, 35, 63, 151, 179, 197, 199, 200, 205, 207, 209, 212, 213, 215, 220, 224, 230, 238, 253, 260, 270, 274, 280, 302, 311, 426, 519, 642, 703, 709, 714, 716, 726, 916, 921, 944, 1030, 1040, 1043, 1051, 1052, 1054, 1055, 1069, 1098, 1105], "python_basics_python_0310_strings_format": [29, 90, 197, 726, 994, 1030, 1040, 1043, 1051, 1052, 1054, 1055, 1069], "python_basics_python_0300_str": [29, 90, 197, 303, 304, 305, 306, 307, 308, 317, 726, 972, 994, 1028, 1029, 1030, 1040, 1043, 1051, 1052, 1054, 1055, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1084, 1085], "python_exercises_legacy_cmdline_digit": [29, 197, 317, 726, 1030, 1038, 1040, 1043, 1044, 1046, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1069], "digit": [29, 133, 159, 160, 179, 186, 191, 197, 207, 210, 219, 223, 228, 229, 231, 232, 234, 236, 237, 252, 259, 272, 273, 274, 278, 279, 291, 302, 322, 348, 357, 726, 1030, 1040, 1043, 1044, 1046, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1069], "python_exercises_legacy_uniq_funct": [29, 197, 726, 1030, 1040, 1043, 1044, 1051, 1052, 1053, 1054, 1055, 1069], "python_exercises_userdb_csvdictreader_funct": [29, 726, 1030, 1061, 1064, 1065, 1066, 1067, 1068, 1069], "refactor": [29, 43, 55, 137, 226, 229, 234, 237, 249, 252, 268, 272, 273, 278, 279, 385, 425, 442, 689, 726, 734, 740, 750, 754, 764, 775, 777, 782, 788, 791, 794, 869, 986, 1030, 1064, 1065, 1066, 1067, 1069], "Into": [29, 97, 218, 223, 226, 229, 234, 237, 249, 252, 258, 272, 273, 278, 279, 355, 370, 379, 385, 386, 392, 396, 399, 403, 412, 416, 420, 421, 422, 489, 490, 542, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 638, 639, 644, 682, 723, 725, 726, 961, 986, 1030, 1064, 1065, 1066, 1067, 1069], "dictread": [29, 191, 212, 213, 226, 229, 234, 237, 249, 252, 272, 273, 278, 279, 726, 986, 1028, 1030, 1064, 1065, 1066, 1067, 1068, 1069], "python_exercises_userdb_csvdictread": [29, 726, 1030, 1060, 1061, 1064, 1065, 1066, 1067, 1068, 1069], "python_exercises_userdb_csvread": [29, 726, 1030, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069], "reader": [29, 137, 212, 226, 229, 234, 237, 249, 252, 272, 273, 278, 279, 407, 426, 449, 726, 817, 983, 986, 1013, 1030, 1060, 1061, 1064, 1065, 1066, 1067, 1068, 1069], "python_exercises_userdb_csvreader_funct": [29, 726, 1030, 1063, 1064, 1069], "python_exercises_userdb_userdb_modul": [29, 726, 1030, 1064, 1065, 1066, 1067, 1068, 1069], "both": [29, 54, 63, 85, 113, 114, 117, 119, 130, 140, 142, 147, 160, 172, 178, 199, 215, 218, 226, 229, 232, 234, 237, 249, 252, 264, 272, 273, 278, 279, 418, 424, 426, 427, 452, 498, 500, 520, 552, 560, 633, 689, 700, 726, 744, 767, 773, 812, 913, 917, 921, 934, 957, 963, 970, 983, 986, 990, 997, 1004, 1011, 1015, 1020, 1030, 1033, 1036, 1042, 1064, 1065, 1066, 1067, 1069, 1077, 1105, 1112, 1125], "python_exercises_userdb_user_json": [29, 726, 1030, 1064, 1065, 1066, 1067, 1069], "json": [29, 78, 85, 92, 113, 115, 137, 173, 179, 189, 203, 207, 208, 216, 217, 225, 228, 229, 233, 236, 242, 251, 284, 286, 287, 289, 291, 294, 337, 726, 986, 1030, 1064, 1065, 1066, 1069, 1087, 1101], "python_exercises_userdb_user_class_person": [29, 726, 1030, 1064, 1066, 1069], "awai": [29, 63, 77, 84, 139, 140, 141, 145, 164, 180, 201, 207, 215, 249, 252, 272, 273, 278, 284, 287, 306, 438, 701, 726, 812, 833, 944, 968, 986, 1030, 1064, 1069], "raw": [29, 63, 185, 188, 191, 196, 208, 211, 220, 224, 230, 244, 245, 249, 251, 252, 256, 258, 272, 273, 278, 281, 284, 287, 291, 302, 312, 338, 426, 427, 433, 456, 463, 501, 581, 702, 726, 809, 986, 1002, 1007, 1023, 1030, 1064, 1069], "python_exercises_userdb_mqtt_publish_csv": [29, 726, 1030, 1064, 1065, 1069], "publish": [29, 144, 146, 155, 216, 228, 229, 249, 291, 314, 323, 325, 726, 986, 1030, 1064, 1067, 1069, 1071, 1103], "python_exercises_csv_csv_db": [29, 726, 1027, 1029, 1030, 1069], "sqlite3": [29, 85, 176, 207, 213, 219, 226, 726, 1029, 1030, 1069, 1080, 1081, 1085], "python_db_sqlite3": [29, 726, 1027, 1029, 1030, 1069, 1081], "dbapi": [29, 176, 207, 219, 726, 1027, 1029, 1030, 1069, 1081], "python_exercises_csv_csv_modul": [29, 726, 1028, 1029, 1030, 1069], "python_exercises_sensors_project_setup": [29, 726, 1030, 1057, 1058, 1059, 1069], "setup": [29, 106, 113, 124, 128, 137, 155, 167, 171, 172, 210, 212, 228, 235, 238, 240, 245, 247, 253, 256, 260, 270, 274, 314, 317, 322, 323, 408, 441, 455, 466, 468, 482, 496, 499, 501, 502, 635, 637, 726, 741, 767, 864, 869, 877, 879, 894, 896, 907, 944, 948, 952, 954, 957, 958, 968, 975, 983, 1026, 1030, 1057, 1069, 1106, 1116, 1118], "python_exercises_sensors_sensor_const": [29, 726, 1030, 1057, 1058, 1059, 1069], "python_basics_python_0130_syntax_etc": [29, 90, 197, 303, 304, 305, 306, 307, 308, 317, 726, 972, 979, 980, 981, 982, 986, 994, 1005, 1014, 1024, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1081, 1084, 1085, 1091, 1099], "syntax": [29, 68, 90, 133, 163, 172, 179, 180, 182, 184, 185, 186, 191, 197, 198, 203, 207, 210, 213, 219, 220, 223, 225, 229, 230, 231, 234, 237, 239, 250, 252, 259, 261, 262, 272, 273, 275, 278, 279, 298, 303, 304, 305, 306, 307, 308, 317, 464, 543, 544, 647, 664, 691, 704, 726, 861, 967, 969, 970, 971, 972, 979, 980, 981, 982, 986, 994, 996, 1005, 1013, 1014, 1016, 1024, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1081, 1084, 1085, 1091, 1099, 1125, 1135], "python_basics_python_0110_blahblah": [29, 90, 197, 303, 304, 305, 306, 307, 308, 317, 726, 972, 979, 980, 981, 982, 986, 994, 1005, 1014, 1024, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1081, 1084, 1085, 1091, 1099], "blahblah": [29, 90, 179, 184, 186, 197, 203, 207, 210, 213, 219, 223, 229, 230, 231, 233, 234, 236, 237, 239, 252, 259, 262, 272, 273, 278, 279, 303, 304, 305, 306, 307, 308, 317, 726, 972, 979, 980, 981, 982, 986, 994, 1005, 1014, 1024, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1081, 1084, 1085, 1091, 1099, 1135], "python_basics_python_0460_set": [29, 90, 726, 994, 1069], "python_basics_python_0400_list": [29, 90, 726, 994, 1069], "python_basics_python_0125_run": [29, 90, 197, 317, 726, 994, 1024, 1027, 1028, 1029, 1030, 1032, 1033, 1034, 1035, 1037, 1038, 1040, 1043, 1044, 1045, 1046, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069], "run": [29, 42, 59, 62, 63, 90, 97, 108, 110, 111, 130, 133, 136, 139, 140, 141, 142, 143, 146, 147, 150, 151, 159, 171, 172, 179, 180, 192, 197, 201, 202, 207, 212, 220, 228, 229, 232, 235, 238, 240, 245, 252, 253, 256, 259, 260, 262, 270, 272, 273, 274, 278, 279, 283, 292, 302, 317, 320, 342, 360, 402, 405, 413, 414, 418, 419, 431, 432, 444, 449, 468, 469, 470, 498, 500, 501, 502, 524, 551, 564, 573, 585, 642, 700, 701, 724, 726, 746, 761, 771, 773, 774, 783, 806, 808, 810, 811, 812, 813, 829, 830, 833, 834, 864, 877, 878, 879, 880, 888, 890, 898, 900, 916, 929, 931, 932, 933, 935, 940, 945, 947, 950, 955, 957, 959, 963, 968, 979, 982, 994, 995, 997, 1024, 1027, 1028, 1029, 1030, 1032, 1033, 1034, 1035, 1037, 1038, 1040, 1043, 1044, 1045, 1046, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1073, 1087, 1100, 1106, 1111, 1112, 1117, 1130], "python_basics_python_0250_refs_flat_deep_copi": [29, 90, 197, 303, 304, 305, 306, 307, 308, 317, 726, 972, 994, 1028, 1029, 1030, 1040, 1043, 1051, 1052, 1054, 1055, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1084, 1085], "mutabl": [29, 90, 172, 176, 177, 179, 181, 184, 185, 191, 197, 198, 207, 210, 211, 213, 214, 215, 216, 221, 223, 224, 227, 230, 234, 236, 237, 239, 242, 252, 254, 259, 261, 262, 266, 268, 269, 271, 272, 273, 275, 278, 279, 281, 290, 291, 293, 294, 303, 304, 305, 306, 307, 308, 317, 692, 726, 972, 994, 1003, 1007, 1028, 1029, 1030, 1040, 1043, 1051, 1052, 1054, 1055, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1084, 1085, 1135], "python_basics_python_1000_function_object": [29, 90, 726, 994, 1069], "python_basics_instal": [29, 90, 726, 994, 1069], "python_db_dbapi2": [29, 726, 1027, 1029, 1030, 1069, 1081], "python_db_postgr": [29, 726, 1069, 1081], "postgresql": [29, 726, 1069, 1080, 1081], "python_swdev_pip": [29, 726, 1024, 1069, 1072, 1073, 1077, 1085, 1087, 1099, 1102, 1109], "python_swdev_unittest": [29, 726, 1069, 1099], "unittest": [29, 65, 113, 136, 137, 153, 156, 167, 169, 172, 175, 176, 186, 189, 200, 202, 207, 249, 258, 269, 307, 317, 325, 326, 335, 336, 724, 726, 1013, 1069, 1071, 1099, 1110], "python_swdev_pytest_intro": [29, 726, 1069, 1099, 1104], "By": [29, 51, 53, 140, 142, 147, 151, 155, 167, 173, 209, 215, 216, 218, 225, 226, 228, 229, 233, 237, 240, 244, 245, 247, 249, 258, 266, 268, 269, 273, 284, 287, 290, 291, 294, 298, 325, 357, 384, 407, 410, 627, 628, 630, 631, 634, 636, 638, 639, 682, 683, 723, 725, 726, 742, 815, 864, 877, 913, 932, 948, 959, 983, 990, 1067, 1068, 1069, 1078, 1099, 1104], "python_drafts_argpars": [29, 726, 1024, 1069], "argpars": [29, 216, 237, 268, 290, 294, 303, 726, 1024, 1069], "python_drafts_matplotlib": [29, 726, 1024, 1069], "matplotlib": [29, 172, 191, 210, 211, 223, 237, 238, 240, 242, 273, 292, 326, 726, 967, 1024, 1069, 1071, 1077], "python_drafts_setuptool": [29, 726, 1024, 1069], "setuptool": [29, 61, 136, 249, 284, 294, 726, 1024, 1069, 1107], "As": [30, 46, 68, 80, 113, 137, 140, 142, 147, 151, 157, 169, 172, 176, 207, 220, 282, 320, 337, 375, 406, 409, 485, 487, 501, 552, 557, 559, 560, 637, 746, 773, 799, 808, 877, 878, 886, 888, 905, 933, 941, 963, 969, 990, 995, 999, 1056, 1060, 1073, 1115, 1127], "follow": [30, 39, 43, 78, 106, 107, 109, 130, 139, 140, 142, 143, 144, 145, 147, 155, 160, 164, 168, 169, 172, 176, 180, 181, 192, 209, 215, 225, 226, 228, 232, 241, 245, 247, 264, 265, 267, 273, 274, 314, 336, 338, 341, 358, 359, 372, 375, 402, 404, 406, 408, 413, 414, 417, 425, 427, 432, 442, 443, 446, 447, 463, 464, 466, 467, 468, 469, 470, 488, 491, 492, 495, 496, 498, 499, 500, 501, 502, 514, 520, 546, 561, 562, 563, 564, 617, 624, 626, 631, 633, 634, 637, 638, 641, 659, 692, 720, 721, 724, 734, 736, 742, 773, 799, 800, 801, 806, 808, 810, 812, 824, 826, 827, 833, 837, 845, 846, 870, 877, 878, 879, 900, 903, 904, 905, 906, 915, 932, 941, 945, 947, 953, 955, 957, 959, 961, 962, 963, 966, 970, 971, 975, 982, 1001, 1015, 1023, 1028, 1031, 1036, 1040, 1042, 1046, 1049, 1050, 1053, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1093, 1097, 1107, 1128], "version": [30, 61, 139, 143, 145, 146, 147, 150, 153, 155, 156, 168, 169, 170, 172, 179, 188, 190, 199, 200, 209, 213, 215, 219, 225, 228, 235, 240, 243, 252, 258, 264, 265, 266, 267, 274, 310, 325, 385, 424, 425, 427, 428, 430, 437, 440, 537, 634, 636, 637, 684, 688, 700, 721, 746, 748, 765, 773, 774, 789, 833, 877, 878, 948, 949, 959, 961, 962, 964, 995, 996, 1002, 1026, 1098, 1100, 1107, 1108, 1114, 1120], "control": [30, 45, 59, 62, 63, 86, 114, 116, 119, 120, 139, 146, 153, 155, 158, 169, 172, 177, 179, 180, 181, 182, 191, 192, 207, 210, 223, 228, 234, 248, 318, 319, 320, 322, 325, 363, 377, 378, 424, 427, 441, 448, 491, 492, 495, 501, 543, 726, 746, 771, 773, 778, 833, 869, 871, 872, 876, 877, 879, 895, 944, 949, 968, 971, 979, 991, 1004, 1006, 1090, 1106, 1108, 1126, 1136, 1142], "done": [30, 42, 46, 47, 50, 53, 55, 56, 57, 63, 75, 84, 87, 91, 102, 110, 111, 117, 127, 132, 136, 137, 139, 141, 142, 144, 145, 146, 147, 150, 155, 160, 161, 164, 168, 172, 179, 201, 216, 220, 226, 228, 244, 245, 247, 259, 262, 269, 274, 292, 298, 303, 309, 320, 326, 341, 342, 390, 397, 398, 400, 402, 413, 424, 426, 427, 428, 432, 466, 485, 499, 502, 544, 556, 557, 585, 599, 607, 612, 636, 637, 639, 642, 649, 670, 673, 677, 678, 688, 694, 702, 706, 714, 716, 726, 732, 742, 744, 763, 765, 773, 775, 800, 801, 805, 806, 808, 809, 817, 829, 852, 870, 871, 873, 878, 879, 895, 896, 897, 907, 921, 929, 935, 944, 948, 949, 957, 961, 963, 970, 973, 974, 975, 993, 1002, 1013, 1021, 1022, 1023, 1026, 1029, 1050, 1083, 1105, 1130], "No": [30, 43, 63, 80, 130, 136, 140, 142, 146, 147, 155, 182, 199, 215, 216, 232, 258, 328, 348, 350, 364, 380, 384, 391, 402, 407, 419, 424, 428, 429, 432, 434, 437, 438, 439, 440, 452, 498, 537, 547, 548, 560, 567, 577, 592, 595, 613, 631, 641, 643, 646, 650, 653, 657, 701, 702, 709, 716, 751, 753, 755, 757, 771, 773, 778, 790, 809, 815, 817, 820, 821, 836, 844, 852, 855, 871, 873, 879, 893, 900, 905, 906, 915, 916, 918, 920, 929, 933, 941, 944, 950, 964, 966, 983, 990, 996, 999, 1002, 1003, 1011, 1015, 1019, 1021, 1078, 1079, 1083, 1084, 1093, 1096, 1105, 1107, 1113], "proprietari": 30, "accept": [30, 32, 60, 142, 168, 264, 424, 426, 692, 702, 704, 741, 873, 899, 969, 993, 1140, 1142], "proven": [30, 413, 417, 561, 563, 564, 653], "difficult": [30, 68, 199, 369, 387, 537, 759, 771, 933], "ffmpeg": 31, "video4linux2": 31, "640x480": 31, "dev": [31, 63, 100, 140, 141, 151, 157, 158, 168, 169, 212, 218, 228, 235, 238, 253, 256, 260, 265, 267, 270, 274, 323, 413, 432, 496, 726, 728, 729, 731, 737, 744, 753, 767, 769, 773, 786, 803, 804, 813, 815, 816, 833, 847, 850, 853, 855, 869, 872, 877, 878, 879, 902, 909, 929, 932, 935, 937, 940, 941, 961, 1112, 1114, 1130], "video0": 31, "500k": 31, "matroska": 31, "mk": [31, 32], "disabl": [31, 140, 143, 145, 151, 209, 215, 225, 228, 385, 765, 771, 776, 778, 933, 1100, 1120], "audio": [31, 123, 128, 142, 147, 726, 1129], "appar": [31, 57, 61, 63, 65, 66, 142, 144, 145, 147, 151, 201, 212, 264, 429, 443, 614, 659, 670, 702, 741, 877, 935, 1084], "next": [31, 39, 42, 63, 98, 113, 136, 141, 142, 147, 155, 160, 162, 173, 178, 180, 188, 192, 199, 205, 209, 212, 213, 215, 218, 220, 222, 225, 228, 232, 238, 244, 245, 250, 253, 260, 270, 274, 280, 292, 302, 309, 323, 357, 375, 377, 398, 426, 464, 468, 482, 492, 501, 537, 574, 650, 663, 670, 672, 694, 763, 773, 792, 817, 833, 865, 877, 879, 899, 909, 929, 948, 974, 975, 978, 1006, 1009, 1076, 1113], "mention": [31, 140, 141, 168, 172, 176, 202, 226, 268, 269, 290, 291, 487, 501, 685, 785, 878, 966, 1071, 1087], "frame": [31, 134, 145, 157, 179, 209, 215, 225, 228, 258, 264, 397, 410, 414, 464, 655, 871, 872, 1089], "size": [31, 100, 109, 139, 141, 142, 159, 161, 167, 209, 210, 215, 218, 223, 225, 228, 232, 237, 240, 256, 273, 274, 279, 317, 348, 365, 370, 379, 386, 390, 392, 396, 397, 399, 402, 403, 405, 410, 411, 412, 414, 416, 421, 422, 444, 445, 451, 490, 502, 503, 507, 508, 509, 510, 511, 515, 516, 519, 525, 537, 542, 544, 548, 552, 557, 561, 563, 564, 577, 578, 579, 580, 585, 590, 591, 595, 599, 601, 602, 607, 609, 636, 638, 644, 647, 648, 653, 664, 665, 666, 668, 682, 692, 701, 705, 706, 714, 723, 724, 725, 726, 732, 744, 759, 769, 789, 798, 803, 804, 810, 817, 847, 850, 853, 855, 861, 865, 869, 873, 878, 899, 901, 940, 941, 947, 964, 967, 1071, 1084], "input": [31, 40, 68, 86, 160, 161, 162, 163, 173, 176, 179, 181, 203, 209, 215, 218, 225, 228, 231, 232, 253, 256, 317, 322, 346, 347, 353, 377, 385, 408, 413, 425, 503, 504, 505, 506, 518, 557, 607, 626, 649, 724, 744, 799, 817, 848, 866, 870, 880, 896, 899, 911, 913, 914, 921, 977, 992, 1021, 1033, 1037, 1038, 1050, 1053, 1056, 1062, 1065, 1073, 1074, 1077, 1078, 1136], "rate": [31, 150, 172, 232, 291, 406, 792, 931], "hz": [31, 783], "bitrat": [31, 872], "If": [31, 43, 45, 47, 53, 55, 56, 57, 89, 113, 139, 140, 141, 142, 145, 146, 147, 155, 156, 164, 172, 209, 215, 222, 225, 228, 232, 240, 245, 247, 256, 262, 274, 291, 317, 322, 363, 372, 402, 414, 434, 436, 442, 492, 498, 499, 514, 544, 549, 613, 620, 636, 637, 650, 655, 701, 705, 706, 714, 716, 726, 746, 751, 765, 773, 778, 790, 799, 808, 812, 815, 833, 834, 842, 845, 869, 870, 877, 878, 879, 880, 886, 900, 908, 910, 918, 923, 927, 940, 962, 963, 975, 983, 985, 995, 1002, 1010, 1012, 1023, 1048, 1076, 1079, 1093, 1106, 1125], "instead": [31, 58, 63, 115, 120, 133, 139, 140, 141, 142, 160, 161, 169, 201, 218, 220, 228, 258, 274, 302, 323, 328, 365, 414, 442, 485, 488, 502, 564, 580, 636, 638, 655, 659, 701, 702, 716, 741, 742, 751, 804, 833, 855, 878, 920, 940, 947, 949, 959, 965, 996, 1042, 1054, 1066, 1090, 1112], "stdout": [31, 120, 159, 192, 196, 200, 209, 215, 225, 228, 238, 246, 253, 255, 256, 276, 277, 291, 302, 310, 312, 317, 321, 323, 613, 726, 797, 799, 803, 814, 815, 858, 861, 864, 869, 899, 944, 971, 1021, 1023, 1028, 1033, 1037, 1040, 1055, 1087, 1096, 1131], "hold": [31, 115, 139, 141, 160, 176, 178, 179, 199, 226, 340, 352, 372, 444, 574, 629, 636, 687, 692, 706, 714, 737, 771, 775, 776, 870, 877, 933, 971, 984, 1006, 1054, 1076], "mplayer": [31, 270], "stdin": [31, 42, 192, 200, 209, 215, 218, 225, 228, 310, 317, 349, 355, 370, 379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726, 799, 815, 816, 848, 899, 1019, 1021, 1022, 1033, 1084, 1096, 1131], "unicod": [32, 34, 35, 36, 38, 200, 209, 213, 215, 225, 228, 250, 274, 352, 1001, 1007, 1021, 1084, 1098], "sphinxemojicod": 32, "pip": [32, 61, 124, 136, 172, 176, 197, 226, 240, 899, 995, 1025, 1026, 1058, 1071, 1087, 1099, 1100, 1101, 1105, 1107, 1108], "conf": [32, 65, 141, 143, 145, 437, 773, 879, 971], "grimac": 32, "astonish": 32, "rolling_ey": 32, "face_with_raised_eyebrow": 32, "flush": [32, 253, 501, 732, 744], "innoc": [32, 146, 407, 708, 812, 946, 990], "kiss": 32, "kissing_heart": 32, "middle_fing": 32, "metal": [32, 78, 80, 87, 89, 140, 335, 870, 878, 879], "muscl": 32, "nerd": [32, 833], "ok_hand": 32, "penguin": 32, "pig": [32, 402], "point_up": 32, "sleep": [32, 63, 140, 215, 244, 245, 268, 269, 290, 303, 375, 384, 714, 726, 750, 753, 755, 765, 775, 778, 782, 788, 790, 791, 794, 869, 870, 878, 907, 911, 914, 929, 931, 932, 935, 940, 979], "sunglass": 32, "think": [32, 42, 43, 69, 140, 141, 155, 178, 202, 385, 406, 407, 410, 496, 500, 547, 567, 642, 650, 652, 701, 800, 801, 804, 894, 940, 1002], "thumbsdown": 32, "thumbsup": 32, "wink": 32, "1_tone1": 32, "1_tone2": 32, "1_tone3": 32, "1_tone4": 32, "1_tone5": 32, "1st_place_med": 32, "2nd_place_med": 32, "3rd_place_med": 32, "8ball": 32, "abacu": 32, "abcd": [32, 190, 196, 212, 232, 274], "ac": [32, 150, 188], "accordion": 32, "adhesive_bandag": 32, "admission_ticket": 32, "adult": [32, 991], "adult_dark_skin_ton": 32, "adult_light_skin_ton": 32, "adult_medium_dark_skin_ton": 32, "adult_medium_light_skin_ton": 32, "adult_medium_skin_ton": 32, "adult_tone1": 32, "adult_tone2": 32, "adult_tone3": 32, "adult_tone4": 32, "adult_tone5": 32, "ae": [32, 150], "aerial_tramwai": 32, "af": [32, 150], "afghanistan": 32, "ai": [32, 176, 1078, 1085], "airplan": [32, 870], "airplane_arriv": 32, "airplane_departur": 32, "airplane_smal": 32, "aland_island": 32, "alarm_clock": 32, "albania": 32, "alemb": 32, "algeria": 32, "alien": 32, "ambul": 32, "american_samoa": 32, "amphora": 32, "anatomical_heart": 32, "anchor": 32, "andorra": 32, "angel": [32, 264], "angel_tone1": 32, "angel_tone2": 32, "angel_tone3": 32, "angel_tone4": 32, "angel_tone5": 32, "anger": 32, "anger_right": 32, "angola": 32, "angri": 32, "anguilla": 32, "anguish": 32, "ant": 32, "antarctica": 32, "antigua_barbuda": 32, "ao": 32, "appl": [32, 947, 1013], "aq": 32, "aquariu": 32, "archeri": 32, "argentina": 32, "ari": [32, 35, 38], "armenia": 32, "arrow_backward": 32, "arrow_double_down": 32, "arrow_double_up": 32, "arrow_down": 32, "arrow_down_smal": 32, "arrow_forward": 32, "arrow_heading_down": 32, "arrow_heading_up": 32, "arrow_left": 32, "arrow_lower_left": 32, "arrow_lower_right": 32, "arrow_right": 32, "arrow_right_hook": 32, "arrow_up": 32, "arrow_up_down": 32, "arrow_up_smal": 32, "arrow_upper_left": 32, "arrow_upper_right": 32, "arrows_clockwis": 32, "arrows_counterclockwis": 32, "articulated_lorri": 32, "artificial_satellit": 32, "artist": 32, "artist_dark_skin_ton": 32, "artist_light_skin_ton": 32, "artist_medium_dark_skin_ton": 32, "artist_medium_light_skin_ton": 32, "artist_medium_skin_ton": 32, "artist_tone1": 32, "artist_tone2": 32, "artist_tone3": 32, "artist_tone4": 32, "artist_tone5": 32, "aruba": 32, "ascens": 32, "astronaut": 32, "astronaut_dark_skin_ton": 32, "astronaut_light_skin_ton": 32, "astronaut_medium_dark_skin_ton": 32, "astronaut_medium_light_skin_ton": 32, "astronaut_medium_skin_ton": 32, "astronaut_tone1": 32, "astronaut_tone2": 32, "astronaut_tone3": 32, "astronaut_tone4": 32, "astronaut_tone5": 32, "athletic_sho": 32, "atm": 32, "atom": [32, 65, 76, 88, 163, 218, 243, 244, 245, 247, 256, 267, 298, 520, 652, 701, 714, 715, 725, 726, 735, 740, 743, 745, 750, 753, 754, 756, 759, 760, 764, 765, 766, 768, 770, 775, 778, 779, 782, 783, 784, 788, 791, 793, 794, 869, 909, 919, 920, 982, 1125], "atom_symbol": 32, "australia": 32, "austria": [32, 140, 335], "auto_rickshaw": 32, "avocado": 32, "aw": 32, "ax": [32, 161, 967], "az": 32, "azerbaijan": 32, "ba": [32, 150], "babi": 32, "baby_bottl": 32, "baby_chick": 32, "baby_symbol": 32, "baby_tone1": 32, "baby_tone2": 32, "baby_tone3": 32, "baby_tone4": 32, "baby_tone5": 32, "back_of_hand": 32, "back_of_hand_tone1": 32, "back_of_hand_tone2": 32, "back_of_hand_tone3": 32, "back_of_hand_tone4": 32, "back_of_hand_tone5": 32, "bacon": 32, "badger": 32, "badminton": 32, "bagel": 32, "baggage_claim": 32, "baguette_bread": 32, "bahama": 32, "bahrain": 32, "balance_scal": 32, "bald": 32, "ballet_sho": 32, "balloon": 32, "ballot_box": 32, "ballot_box_with_ballot": 32, "ballot_box_with_check": 32, "bamboo": 32, "banana": 32, "bangbang": 32, "bangladesh": 32, "banjo": 32, "bank": [32, 426], "bar_chart": 32, "barbado": 32, "barber": 32, "basebal": 32, "basket": 32, "basketbal": 32, "basketball_man": 32, "basketball_play": 32, "basketball_player_tone1": 32, "basketball_player_tone2": 32, "basketball_player_tone3": 32, "basketball_player_tone4": 32, "basketball_player_tone5": 32, "basketball_woman": 32, "bat": [32, 1107], "bath": 32, "bath_tone1": 32, "bath_tone2": 32, "bath_tone3": 32, "bath_tone4": 32, "bath_tone5": 32, "bathtub": 32, "batteri": [32, 89, 172, 317, 870, 994, 995, 996, 1022, 1101], "bb": [32, 132, 143, 877], "bd": [32, 150], "beach": 32, "beach_umbrella": 32, "beach_with_umbrella": 32, "bear": [32, 918, 1094], "bearded_person": 32, "bearded_person_dark_skin_ton": 32, "bearded_person_light_skin_ton": 32, "bearded_person_medium_dark_skin_ton": 32, "bearded_person_medium_light_skin_ton": 32, "bearded_person_medium_skin_ton": 32, "bearded_person_tone1": 32, "bearded_person_tone2": 32, "bearded_person_tone3": 32, "bearded_person_tone4": 32, "bearded_person_tone5": 32, "beaver": 32, "bed": 32, "bee": 32, "beer": [32, 404], "beetl": 32, "belaru": 32, "belgium": 32, "beliz": 32, "bell": [32, 990, 993], "bell_pepp": 32, "bellhop": 32, "bellhop_bel": 32, "benin": 32, "bento": 32, "bermuda": 32, "beverage_box": 32, "bf": [32, 150], "bg": [32, 426], "bh": 32, "bhutan": 32, "bicyclist": 32, "bicyclist_tone1": 32, "bicyclist_tone2": 32, "bicyclist_tone3": 32, "bicyclist_tone4": 32, "bicyclist_tone5": 32, "bike": 32, "biking_man": 32, "biking_woman": 32, "bikini": 32, "billed_cap": 32, "biohazard": 32, "biohazard_sign": 32, "bird": 32, "birthdai": [32, 181, 632], "bison": [32, 151, 753, 877, 961], "bj": 32, "bl": 32, "black_cat": 32, "black_circl": 32, "black_flag": 32, "black_heart": 32, "black_jok": 32, "black_large_squar": 32, "black_medium_small_squar": 32, "black_medium_squar": 32, "black_nib": 32, "black_small_squar": 32, "black_square_button": 32, "blond": 32, "haired_man": 32, "haired_man_dark_skin_ton": 32, "haired_man_light_skin_ton": 32, "haired_man_medium_dark_skin_ton": 32, "haired_man_medium_light_skin_ton": 32, "haired_man_medium_skin_ton": 32, "haired_man_tone1": 32, "haired_man_tone2": 32, "haired_man_tone3": 32, "haired_man_tone4": 32, "haired_man_tone5": 32, "haired_woman": 32, "haired_woman_dark_skin_ton": 32, "haired_woman_light_skin_ton": 32, "haired_woman_medium_dark_skin_ton": 32, "haired_woman_medium_light_skin_ton": 32, "haired_woman_medium_skin_ton": 32, "haired_woman_tone1": 32, "haired_woman_tone2": 32, "haired_woman_tone3": 32, "haired_woman_tone4": 32, "haired_woman_tone5": 32, "blond_haired_person": 32, "blond_haired_person_tone1": 32, "blond_haired_person_tone2": 32, "blond_haired_person_tone3": 32, "blond_haired_person_tone4": 32, "blond_haired_person_tone5": 32, "blonde_man": 32, "blonde_woman": 32, "blossom": 32, "blowfish": 32, "blue_book": 32, "blue_car": 32, "blue_circl": 32, "blue_heart": 32, "blue_squar": 32, "blueberri": 32, "blush": 32, "bm": 32, "bn": 32, "bo": [32, 984], "boar": 32, "boat": 32, "bolivia": 32, "bomb": 32, "bone": 32, "bookmark": [32, 1083], "bookmark_tab": 32, "boom": [32, 670, 687], "boomerang": 32, "boot": [32, 130, 141, 143, 147, 159, 260, 420, 717, 746, 751, 769, 773, 783, 811, 877, 878, 879, 1120], "bosnia_herzegovina": 32, "botswana": 32, "bottle_with_popping_cork": 32, "bouquet": 32, "bouvet_island": 32, "bow": 32, "bow_and_arrow": 32, "bow_tone1": 32, "bow_tone2": 32, "bow_tone3": 32, "bow_tone4": 32, "bow_tone5": 32, "bowing_man": 32, "bowing_woman": 32, "bowl_with_spoon": 32, "bowl": 32, "boxing_glov": 32, "boi": 32, "boy_tone1": 32, "boy_tone2": 32, "boy_tone3": 32, "boy_tone4": 32, "boy_tone5": 32, "bq": 32, "br": [32, 238], "brain": [32, 59, 62], "brazil": 32, "bread": 32, "breast_feed": 32, "breast_feeding_dark_skin_ton": 32, "breast_feeding_light_skin_ton": 32, "breast_feeding_medium_dark_skin_ton": 32, "breast_feeding_medium_light_skin_ton": 32, "breast_feeding_medium_skin_ton": 32, "breast_feeding_tone1": 32, "breast_feeding_tone2": 32, "breast_feeding_tone3": 32, "breast_feeding_tone4": 32, "breast_feeding_tone5": 32, "brick": [32, 139, 152], "bride_with_veil": 32, "bride_with_veil_tone1": 32, "bride_with_veil_tone2": 32, "bride_with_veil_tone3": 32, "bride_with_veil_tone4": 32, "bride_with_veil_tone5": 32, "bridge_at_night": 32, "briefcas": 32, "brief": [32, 418, 833], "british_indian_ocean_territori": 32, "british_virgin_island": 32, "broccoli": 32, "broken_heart": 32, "broom": 32, "brown_circl": 32, "brown_heart": 32, "brown_squar": 32, "brunei": 32, "bt": 32, "bubble_tea": 32, "bucket": [32, 744], "bug": [32, 46, 55, 56, 107, 141, 142, 143, 183, 202, 218, 229, 326, 382, 384, 385, 400, 405, 407, 411, 424, 429, 434, 525, 527, 529, 537, 543, 544, 547, 552, 614, 617, 670, 680, 699, 716, 726, 763, 891, 922, 931, 932, 964, 984, 985, 999, 1002], "building_construct": 32, "bulb": 32, "bulgaria": 32, "bullettrain_front": 32, "bullettrain_sid": 32, "burkina_faso": 32, "burrito": 32, "burundi": 32, "bu": [32, 81, 114, 187, 212, 228, 235, 237, 238, 253, 256, 260, 270, 274, 442, 456, 471, 485, 501, 502, 726, 744, 769, 833, 869, 871, 876, 877, 878, 907, 913, 969, 1070, 1129, 1136, 1140, 1142], "business_suit_levit": 32, "busstop": 32, "bust_in_silhouett": 32, "busts_in_silhouett": 32, "butter": 32, "butterfli": 32, "bv": 32, "bw": 32, "bz": 32, "cactu": 32, "cake": 32, "calendar": 32, "calendar_spir": 32, "call_m": 32, "call_me_hand": 32, "call_me_hand_tone1": 32, "call_me_hand_tone2": 32, "call_me_hand_tone3": 32, "call_me_hand_tone4": 32, "call_me_hand_tone5": 32, "call_me_tone1": 32, "call_me_tone2": 32, "call_me_tone3": 32, "call_me_tone4": 32, "call_me_tone5": 32, "cambodia": 32, "camel": 32, "camera": [32, 33, 120, 145, 147, 878], "camera_flash": 32, "camera_with_flash": 32, "cameroon": 32, "camp": 32, "canada": 32, "canary_island": 32, "cancer": 32, "candl": 32, "candi": 32, "canned_food": 32, "cano": 32, "cape_verd": 32, "capital_abcd": 32, "capricorn": 32, "car": [32, 258, 426, 870], "card_box": 32, "card_file_box": 32, "card_index": 32, "card_index_divid": 32, "caribbean_netherland": 32, "carousel_hors": 32, "carpentry_saw": 32, "carrot": 32, "cartwheel": 32, "cartwheel_tone1": 32, "cartwheel_tone2": 32, "cartwheel_tone3": 32, "cartwheel_tone4": 32, "cartwheel_tone5": 32, "cat2": 32, "cat": [32, 142, 146, 180, 192, 246, 255, 256, 258, 276, 277, 302, 303, 402, 426, 501, 726, 731, 736, 753, 773, 789, 800, 801, 803, 804, 813, 815, 817, 845, 852, 860, 861, 863, 864, 866, 869, 870, 877, 878, 879, 880, 904, 906, 907, 911, 935, 941, 944, 1131], "cayman_island": 32, "cd": [32, 61, 126, 143, 144, 146, 147, 150, 151, 155, 168, 169, 202, 212, 232, 240, 245, 247, 303, 317, 322, 427, 499, 502, 562, 746, 748, 773, 774, 797, 799, 800, 801, 804, 810, 818, 823, 825, 833, 857, 870, 877, 878, 886, 899, 948, 949, 961, 962, 1026], "central_african_republ": 32, "ceuta_melilla": 32, "cf": [32, 799, 916], "cg": 32, "ch": 32, "chad": 32, "chain": [32, 133, 139, 150, 160, 222, 239, 404, 778, 926], "chair": [32, 172], "champagn": 32, "champagne_glass": 32, "chart": [32, 186, 201, 210, 223, 237, 240, 273, 279, 1071, 1078], "chart_with_downwards_trend": 32, "chart_with_upwards_trend": 32, "checkered_flag": 32, "chees": 32, "cheese_wedg": 32, "cherri": 32, "cherry_blossom": 32, "chess_pawn": 32, "chestnut": 32, "chicken": 32, "child": [32, 99, 157, 246, 255, 256, 276, 277, 724, 726, 803, 805, 807, 808, 819, 822, 823, 824, 825, 826, 827, 828, 837, 838, 839, 842, 844, 845, 869, 881, 882, 883, 884, 885, 910, 916, 923, 928, 945, 957, 958, 988, 1096], "child_dark_skin_ton": 32, "child_light_skin_ton": 32, "child_medium_dark_skin_ton": 32, "child_medium_light_skin_ton": 32, "child_medium_skin_ton": 32, "child_tone1": 32, "child_tone2": 32, "child_tone3": 32, "child_tone4": 32, "child_tone5": 32, "children_cross": 32, "chile": 32, "china": 32, "chipmunk": 32, "chocolate_bar": 32, "chopstick": 32, "christmas_island": 32, "christmas_tre": 32, "church": 32, "ci": [32, 1105], "cinema": 32, "circus_t": 32, "city_dusk": 32, "city_sunris": 32, "city_sunset": 32, "cityscap": 32, "ck": 32, "cl": [32, 228, 253, 987, 988], "clamp": 32, "clap": 32, "clap_tone1": 32, "clap_tone2": 32, "clap_tone3": 32, "clap_tone4": 32, "clap_tone5": 32, "clapper": 32, "classical_build": 32, "clinking_glass": 32, "clipboard": 32, "clipperton_island": 32, "clock1030": 32, "clock10": 32, "clock1130": 32, "clock11": 32, "clock1230": 32, "clock12": 32, "clock130": 32, "clock1": 32, "clock230": 32, "clock2": 32, "clock330": 32, "clock3": 32, "clock430": 32, "clock4": 32, "clock530": 32, "clock5": 32, "clock630": 32, "clock6": 32, "clock730": 32, "clock7": 32, "clock830": 32, "clock8": 32, "clock930": 32, "clock9": 32, "clock": [32, 215, 216, 413, 877], "closed_book": 32, "closed_lock_with_kei": 32, "closed_umbrella": 32, "cloud": [32, 101, 147, 192, 216, 316, 317, 320, 645, 647, 886, 1075, 1076, 1100], "cloud_lightn": 32, "cloud_rain": 32, "cloud_snow": 32, "cloud_tornado": 32, "cloud_with_lightn": 32, "cloud_with_lightning_and_rain": 32, "cloud_with_rain": 32, "cloud_with_snow": 32, "cloud_with_tornado": 32, "clown": 32, "clown_fac": 32, "club": [32, 38], "cm": 32, "cn": [32, 150], "coat": 32, "cockroach": 32, "cocktail": 32, "coconut": [32, 264], "cocos_island": 32, "coffe": [32, 143, 617, 877], "coffin": 32, "coin": 32, "cold_fac": 32, "cold_sweat": 32, "colombia": 32, "comet": 32, "comoro": 32, "compass": 32, "compress": [32, 141, 155, 246, 255, 256, 276, 726, 797, 803, 869, 957, 958, 959, 962], "computer_mous": 32, "confetti_bal": 32, "confound": 32, "confus": [32, 140, 144, 172, 201, 359, 367, 413, 560, 570, 646, 657, 1013, 1097], "congo": 32, "congo_brazzavil": 32, "congo_kinshasa": 32, "congratul": 32, "construct": [32, 172, 178, 259, 262, 362, 375, 385, 414, 424, 528, 579, 598, 599, 655, 703, 985, 992, 1009, 1020], "construction_sit": 32, "construction_work": 32, "construction_worker_man": 32, "construction_worker_tone1": 32, "construction_worker_tone2": 32, "construction_worker_tone3": 32, "construction_worker_tone4": 32, "construction_worker_tone5": 32, "construction_worker_woman": 32, "control_knob": 32, "convenience_stor": 32, "cook": [32, 256], "cook_dark_skin_ton": 32, "cook_island": 32, "cook_light_skin_ton": 32, "cook_medium_dark_skin_ton": 32, "cook_medium_light_skin_ton": 32, "cook_medium_skin_ton": 32, "cook_tone1": 32, "cook_tone2": 32, "cook_tone3": 32, "cook_tone4": 32, "cook_tone5": 32, "cooki": [32, 755, 769], "cool": [32, 65, 126, 141, 142, 145, 147, 155, 160, 161, 172, 173, 176, 191, 256, 269, 335, 420, 426, 454, 463, 600, 642, 643, 659, 662, 681, 691, 694, 716, 773, 829, 879, 964, 968, 971, 988, 1007, 1021, 1071, 1078, 1083, 1125], "cop": 32, "cop_tone1": 32, "cop_tone2": 32, "cop_tone3": 32, "cop_tone4": 32, "cop_tone5": 32, "copyright": [32, 36, 151, 192, 209, 215, 225, 228, 253, 310, 314, 552, 701, 997], "corn": 32, "costa_rica": 32, "cote_divoir": 32, "couch": 32, "couch_and_lamp": 32, "coupl": [32, 43, 139, 140, 141, 142, 147, 160, 172, 176, 338, 375, 409, 414, 690, 866, 901, 920], "couple_mm": 32, "couple_with_heart": 32, "couple_with_heart_dark_skin_ton": 32, "couple_with_heart_light_skin_ton": 32, "couple_with_heart_man_man": 32, "couple_with_heart_man_man_dark_skin_ton": 32, "couple_with_heart_man_man_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_man_man_dark_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_man_man_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_man_man_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_man_man_light_skin_ton": 32, "couple_with_heart_man_man_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_man_man_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_man_man_light_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_man_man_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_man_man_medium_dark_skin_ton": 32, "couple_with_heart_man_man_medium_dark_skin_tone_dark_skin_ton": 32, "couple_with_heart_man_man_medium_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_man_man_medium_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_man_man_medium_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_man_man_medium_light_skin_ton": 32, "couple_with_heart_man_man_medium_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_man_man_medium_light_skin_tone_light_skin_ton": 32, "couple_with_heart_man_man_medium_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_man_man_medium_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_man_man_medium_skin_ton": 32, "couple_with_heart_man_man_medium_skin_tone_dark_skin_ton": 32, "couple_with_heart_man_man_medium_skin_tone_light_skin_ton": 32, "couple_with_heart_man_man_medium_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_man_man_medium_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_man_man_tone1": 32, "couple_with_heart_man_man_tone1_tone2": 32, "couple_with_heart_man_man_tone1_tone3": 32, "couple_with_heart_man_man_tone1_tone4": 32, "couple_with_heart_man_man_tone1_tone5": 32, "couple_with_heart_man_man_tone2": 32, "couple_with_heart_man_man_tone2_tone1": 32, "couple_with_heart_man_man_tone2_tone3": 32, "couple_with_heart_man_man_tone2_tone4": 32, "couple_with_heart_man_man_tone2_tone5": 32, "couple_with_heart_man_man_tone3": 32, "couple_with_heart_man_man_tone3_tone1": 32, "couple_with_heart_man_man_tone3_tone2": 32, "couple_with_heart_man_man_tone3_tone4": 32, "couple_with_heart_man_man_tone3_tone5": 32, "couple_with_heart_man_man_tone4": 32, "couple_with_heart_man_man_tone4_tone1": 32, "couple_with_heart_man_man_tone4_tone2": 32, "couple_with_heart_man_man_tone4_tone3": 32, "couple_with_heart_man_man_tone4_tone5": 32, "couple_with_heart_man_man_tone5": 32, "couple_with_heart_man_man_tone5_tone1": 32, "couple_with_heart_man_man_tone5_tone2": 32, "couple_with_heart_man_man_tone5_tone3": 32, "couple_with_heart_man_man_tone5_tone4": 32, "couple_with_heart_medium_dark_skin_ton": 32, "couple_with_heart_medium_light_skin_ton": 32, "couple_with_heart_medium_skin_ton": 32, "couple_with_heart_mm": 32, "couple_with_heart_person_person_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_person_person_dark_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_person_person_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_person_person_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_person_person_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_person_person_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_person_person_light_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_person_person_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_person_person_medium_dark_skin_tone_dark_skin_ton": 32, "couple_with_heart_person_person_medium_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_person_person_medium_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_person_person_medium_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_person_person_medium_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_person_person_medium_light_skin_tone_light_skin_ton": 32, "couple_with_heart_person_person_medium_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_person_person_medium_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_person_person_medium_skin_tone_dark_skin_ton": 32, "couple_with_heart_person_person_medium_skin_tone_light_skin_ton": 32, "couple_with_heart_person_person_medium_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_person_person_medium_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_person_person_tone1_tone2": 32, "couple_with_heart_person_person_tone1_tone3": 32, "couple_with_heart_person_person_tone1_tone4": 32, "couple_with_heart_person_person_tone1_tone5": 32, "couple_with_heart_person_person_tone2_tone1": 32, "couple_with_heart_person_person_tone2_tone3": 32, "couple_with_heart_person_person_tone2_tone4": 32, "couple_with_heart_person_person_tone2_tone5": 32, "couple_with_heart_person_person_tone3_tone1": 32, "couple_with_heart_person_person_tone3_tone2": 32, "couple_with_heart_person_person_tone3_tone4": 32, "couple_with_heart_person_person_tone3_tone5": 32, "couple_with_heart_person_person_tone4_tone1": 32, "couple_with_heart_person_person_tone4_tone2": 32, "couple_with_heart_person_person_tone4_tone3": 32, "couple_with_heart_person_person_tone4_tone5": 32, "couple_with_heart_person_person_tone5_tone1": 32, "couple_with_heart_person_person_tone5_tone2": 32, "couple_with_heart_person_person_tone5_tone3": 32, "couple_with_heart_person_person_tone5_tone4": 32, "couple_with_heart_tone1": 32, "couple_with_heart_tone2": 32, "couple_with_heart_tone3": 32, "couple_with_heart_tone4": 32, "couple_with_heart_tone5": 32, "couple_with_heart_woman_man": 32, "couple_with_heart_woman_man_dark_skin_ton": 32, "couple_with_heart_woman_man_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_man_dark_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_man_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_man_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_man_light_skin_ton": 32, "couple_with_heart_woman_man_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_man_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_man_light_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_man_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_man_medium_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_dark_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_man_medium_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_man_medium_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_man_medium_light_skin_ton": 32, "couple_with_heart_woman_man_medium_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_light_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_man_medium_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_man_medium_skin_ton": 32, "couple_with_heart_woman_man_medium_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_man_medium_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_man_tone1": 32, "couple_with_heart_woman_man_tone1_tone2": 32, "couple_with_heart_woman_man_tone1_tone3": 32, "couple_with_heart_woman_man_tone1_tone4": 32, "couple_with_heart_woman_man_tone1_tone5": 32, "couple_with_heart_woman_man_tone2": 32, "couple_with_heart_woman_man_tone2_tone1": 32, "couple_with_heart_woman_man_tone2_tone3": 32, "couple_with_heart_woman_man_tone2_tone4": 32, "couple_with_heart_woman_man_tone2_tone5": 32, "couple_with_heart_woman_man_tone3": 32, "couple_with_heart_woman_man_tone3_tone1": 32, "couple_with_heart_woman_man_tone3_tone2": 32, "couple_with_heart_woman_man_tone3_tone4": 32, "couple_with_heart_woman_man_tone3_tone5": 32, "couple_with_heart_woman_man_tone4": 32, "couple_with_heart_woman_man_tone4_tone1": 32, "couple_with_heart_woman_man_tone4_tone2": 32, "couple_with_heart_woman_man_tone4_tone3": 32, "couple_with_heart_woman_man_tone4_tone5": 32, "couple_with_heart_woman_man_tone5": 32, "couple_with_heart_woman_man_tone5_tone1": 32, "couple_with_heart_woman_man_tone5_tone2": 32, "couple_with_heart_woman_man_tone5_tone3": 32, "couple_with_heart_woman_man_tone5_tone4": 32, "couple_with_heart_woman_woman": 32, "couple_with_heart_woman_woman_dark_skin_ton": 32, "couple_with_heart_woman_woman_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_woman_dark_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_woman_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_woman_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_woman_light_skin_ton": 32, "couple_with_heart_woman_woman_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_woman_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_woman_light_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_woman_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_woman_medium_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_dark_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_woman_medium_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_woman_medium_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_woman_medium_light_skin_ton": 32, "couple_with_heart_woman_woman_medium_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_light_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_woman_medium_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_woman_medium_skin_ton": 32, "couple_with_heart_woman_woman_medium_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_woman_medium_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_woman_tone1": 32, "couple_with_heart_woman_woman_tone1_tone2": 32, "couple_with_heart_woman_woman_tone1_tone3": 32, "couple_with_heart_woman_woman_tone1_tone4": 32, "couple_with_heart_woman_woman_tone1_tone5": 32, "couple_with_heart_woman_woman_tone2": 32, "couple_with_heart_woman_woman_tone2_tone1": 32, "couple_with_heart_woman_woman_tone2_tone3": 32, "couple_with_heart_woman_woman_tone2_tone4": 32, "couple_with_heart_woman_woman_tone2_tone5": 32, "couple_with_heart_woman_woman_tone3": 32, "couple_with_heart_woman_woman_tone3_tone1": 32, "couple_with_heart_woman_woman_tone3_tone2": 32, "couple_with_heart_woman_woman_tone3_tone4": 32, "couple_with_heart_woman_woman_tone3_tone5": 32, "couple_with_heart_woman_woman_tone4": 32, "couple_with_heart_woman_woman_tone4_tone1": 32, "couple_with_heart_woman_woman_tone4_tone2": 32, "couple_with_heart_woman_woman_tone4_tone3": 32, "couple_with_heart_woman_woman_tone4_tone5": 32, "couple_with_heart_woman_woman_tone5": 32, "couple_with_heart_woman_woman_tone5_tone1": 32, "couple_with_heart_woman_woman_tone5_tone2": 32, "couple_with_heart_woman_woman_tone5_tone3": 32, "couple_with_heart_woman_woman_tone5_tone4": 32, "couple_with_heart_ww": 32, "couple_ww": 32, "couplekiss": 32, "couplekiss_man_man": 32, "couplekiss_man_woman": 32, "couplekiss_mm": 32, "couplekiss_woman_woman": 32, "couplekiss_ww": 32, "cow2": 32, "cow": 32, "cowboi": 32, "cowboy_hat_fac": 32, "cp": [32, 99, 113, 141, 143, 146, 180, 182, 246, 255, 256, 276, 277, 317, 322, 726, 773, 800, 801, 802, 803, 804, 833, 837, 838, 840, 841, 844, 845, 847, 853, 869, 877, 889, 900, 961, 1131], "cr": [32, 1021], "crab": 32, "crayon": 32, "credit_card": 32, "crescent_moon": 32, "cricket": 32, "cricket_bat_bal": 32, "cricket_gam": 32, "croatia": 32, "crocodil": 32, "croissant": 32, "cross": [32, 38, 65, 103, 104, 106, 139, 152, 176, 270, 282, 283, 318, 319, 320, 448, 462, 490, 491, 492, 493, 494, 495, 496, 497, 500, 501, 502, 542, 715, 725, 726, 803, 806, 807, 869, 892, 898, 900, 907, 908, 910, 924, 927, 930, 932, 949, 953, 954, 955, 956, 958, 961, 1127], "crossed_fing": 32, "crossed_flag": 32, "crossed_sword": 32, "crown": 32, "cruise_ship": 32, "cry": [32, 140], "crying_cat_fac": 32, "crystal_bal": 32, "cu": 32, "cuba": 32, "cucumb": 32, "cup_with_straw": 32, "cupcak": 32, "cupid": 32, "curacao": 32, "curling_ston": 32, "curly_hair": 32, "curly_loop": 32, "currency_exchang": 32, "curri": [32, 201], "custard": 32, "cut_of_meat": 32, "cw": 32, "cx": 32, "cy": 32, "cyclon": 32, "cypru": 32, "cz": 32, "czech_republ": 32, "dagger": [32, 38], "dagger_knif": 32, "dancer": 32, "dancer_tone1": 32, "dancer_tone2": 32, "dancer_tone3": 32, "dancer_tone4": 32, "dancer_tone5": 32, "dancing_men": 32, "dancing_women": 32, "dango": 32, "dark_sunglass": 32, "dart": 32, "dash": [32, 34, 35, 38, 586], "date": [32, 137, 143, 151, 155, 172, 178, 208, 240, 256, 258, 330, 331, 426, 774, 966, 1060, 1062, 1066, 1068, 1075, 1080], "deaf_man": 32, "deaf_man_dark_skin_ton": 32, "deaf_man_light_skin_ton": 32, "deaf_man_medium_dark_skin_ton": 32, "deaf_man_medium_light_skin_ton": 32, "deaf_man_medium_skin_ton": 32, "deaf_man_tone1": 32, "deaf_man_tone2": 32, "deaf_man_tone3": 32, "deaf_man_tone4": 32, "deaf_man_tone5": 32, "deaf_person": 32, "deaf_person_dark_skin_ton": 32, "deaf_person_light_skin_ton": 32, "deaf_person_medium_dark_skin_ton": 32, "deaf_person_medium_light_skin_ton": 32, "deaf_person_medium_skin_ton": 32, "deaf_person_tone1": 32, "deaf_person_tone2": 32, "deaf_person_tone3": 32, "deaf_person_tone4": 32, "deaf_person_tone5": 32, "deaf_woman": 32, "deaf_woman_dark_skin_ton": 32, "deaf_woman_light_skin_ton": 32, "deaf_woman_medium_dark_skin_ton": 32, "deaf_woman_medium_light_skin_ton": 32, "deaf_woman_medium_skin_ton": 32, "deaf_woman_tone1": 32, "deaf_woman_tone2": 32, "deaf_woman_tone3": 32, "deaf_woman_tone4": 32, "deaf_woman_tone5": 32, "deciduous_tre": 32, "deer": 32, "denmark": 32, "department_stor": 32, "derelict_hous": 32, "derelict_house_build": 32, "desert": 32, "desert_island": 32, "desktop": [32, 128, 140, 145, 201, 270, 855, 932, 1129, 1136], "desktop_comput": 32, "detective_tone1": 32, "detective_tone2": 32, "detective_tone3": 32, "detective_tone4": 32, "detective_tone5": 32, "dg": 32, "diamond_shape_with_a_dot_insid": 32, "diamond": [32, 34, 38, 200, 213, 1098], "diego_garcia": 32, "digit_eight": 32, "digit_f": 32, "digit_four": 32, "digit_nin": 32, "digit_on": 32, "digit_seven": 32, "digit_six": 32, "digit_thre": 32, "digit_two": 32, "digit_zero": 32, "disappoint": 32, "disappointed_reliev": 32, "disguised_fac": 32, "divid": [32, 35, 36, 38, 232, 1078], "diving_mask": 32, "diya_lamp": 32, "dizzi": 32, "dizzy_fac": 32, "dj": 32, "djibouti": 32, "dk": 32, "dm": 32, "dna": 32, "do_not_litt": 32, "dodo": 32, "dog2": 32, "dog": [32, 402], "dollar": [32, 36], "doll": 32, "dolphin": 32, "dominica": 32, "dominican_republ": 32, "door": [32, 218, 520, 763, 981], "double_vertical_bar": 32, "doughnut": 32, "dove": 32, "dove_of_peac": 32, "dragon": [32, 97, 202, 218, 265, 267, 520, 544, 545, 550, 639, 651, 653, 682, 687, 698, 702, 707, 715, 723, 725, 726, 944], "dragon_fac": 32, "dress": [32, 137], "dromedary_camel": 32, "drool": 32, "drooling_fac": 32, "drop_of_blood": 32, "droplet": 32, "drum": 32, "drum_with_drumstick": 32, "dumpl": 32, "dvd": 32, "dz": 32, "mail": [32, 137, 212, 228, 235, 238, 253, 260, 270, 274, 864, 1084, 1119], "ea": [32, 150], "eagl": [32, 212, 1028], "ear": 32, "ear_of_ric": 32, "ear_tone1": 32, "ear_tone2": 32, "ear_tone3": 32, "ear_tone4": 32, "ear_tone5": 32, "ear_with_hearing_aid": 32, "ear_with_hearing_aid_dark_skin_ton": 32, "ear_with_hearing_aid_light_skin_ton": 32, "ear_with_hearing_aid_medium_dark_skin_ton": 32, "ear_with_hearing_aid_medium_light_skin_ton": 32, "ear_with_hearing_aid_medium_skin_ton": 32, "ear_with_hearing_aid_tone1": 32, "ear_with_hearing_aid_tone2": 32, "ear_with_hearing_aid_tone3": 32, "ear_with_hearing_aid_tone4": 32, "ear_with_hearing_aid_tone5": 32, "earth_africa": 32, "earth_america": 32, "earth_asia": 32, "ec": [32, 97, 150, 192, 314, 317, 322, 325, 334, 726, 802, 803, 833, 869], "ecuador": 32, "ee": [32, 150], "eg": [32, 35, 115], "egg": [32, 61, 1015], "eggplant": 32, "egypt": 32, "eight": [32, 142, 160, 173, 183, 191, 220, 222, 317, 879, 1084], "eight_pointed_black_star": 32, "eight_spoked_asterisk": 32, "eject": 32, "eject_symbol": 32, "el_salvador": 32, "electric_plug": 32, "eleph": 32, "elev": 32, "elf": [32, 148, 151, 183, 199, 209, 432, 528, 916, 947, 948, 964, 998, 1139], "elf_dark_skin_ton": 32, "elf_light_skin_ton": 32, "elf_medium_dark_skin_ton": 32, "elf_medium_light_skin_ton": 32, "elf_medium_skin_ton": 32, "elf_tone1": 32, "elf_tone2": 32, "elf_tone3": 32, "elf_tone4": 32, "elf_tone5": 32, "england": 32, "envelop": [32, 773], "envelope_with_arrow": 32, "equatorial_guinea": 32, "er": [32, 149, 158, 173, 175, 183, 220, 1120, 1121, 1122], "eritrea": 32, "estonia": 32, "et": [32, 97, 552, 701, 893, 948, 949, 990], "ethiopia": 32, "euro": [32, 468, 469, 470, 482, 483, 484], "european_castl": 32, "european_post_offic": 32, "european_union": 32, "evergreen_tre": 32, "exclam": [32, 36], "expecting_woman": 32, "expecting_woman_tone1": 32, "expecting_woman_tone2": 32, "expecting_woman_tone3": 32, "expecting_woman_tone4": 32, "expecting_woman_tone5": 32, "exploding_head": 32, "expressionless": 32, "eye_in_speech_bubbl": 32, "eye_speech_bubbl": 32, "eyeglass": 32, "face_exh": 32, "face_in_cloud": 32, "face_palm": 32, "face_palm_tone1": 32, "face_palm_tone2": 32, "face_palm_tone3": 32, "face_palm_tone4": 32, "face_palm_tone5": 32, "face_vomit": 32, "face_with_cowboy_hat": 32, "face_with_hand_over_mouth": 32, "face_with_head_bandag": 32, "face_with_monocl": 32, "face_with_rolling_ey": 32, "face_with_spiral_ey": 32, "face_with_symbols_over_mouth": 32, "face_with_thermomet": 32, "facepalm": 32, "facepalm_tone1": 32, "facepalm_tone2": 32, "facepalm_tone3": 32, "facepalm_tone4": 32, "facepalm_tone5": 32, "factori": [32, 106, 200, 213, 248, 267, 326, 441, 448, 462, 476, 490, 542, 726, 899, 1098, 1128], "factory_work": 32, "factory_worker_dark_skin_ton": 32, "factory_worker_light_skin_ton": 32, "factory_worker_medium_dark_skin_ton": 32, "factory_worker_medium_light_skin_ton": 32, "factory_worker_medium_skin_ton": 32, "factory_worker_tone1": 32, "factory_worker_tone2": 32, "factory_worker_tone3": 32, "factory_worker_tone4": 32, "factory_worker_tone5": 32, "fairi": 32, "fairy_dark_skin_ton": 32, "fairy_light_skin_ton": 32, "fairy_medium_dark_skin_ton": 32, "fairy_medium_light_skin_ton": 32, "fairy_medium_skin_ton": 32, "fairy_tone1": 32, "fairy_tone2": 32, "fairy_tone3": 32, "fairy_tone4": 32, "fairy_tone5": 32, "falafel": 32, "falkland_island": 32, "fallen_leaf": 32, "famili": [32, 164, 873, 879], "family_man_boi": 32, "family_man_boy_boi": 32, "family_man_girl": 32, "family_man_girl_boi": 32, "family_man_girl_girl": 32, "family_man_man_boi": 32, "family_man_man_boy_boi": 32, "family_man_man_girl": 32, "family_man_man_girl_boi": 32, "family_man_man_girl_girl": 32, "family_man_woman_boi": 32, "family_man_woman_boy_boi": 32, "family_man_woman_girl": 32, "family_man_woman_girl_boi": 32, "family_man_woman_girl_girl": 32, "family_mmb": 32, "family_mmbb": 32, "family_mmg": 32, "family_mmgb": 32, "family_mmgg": 32, "family_mwbb": 32, "family_mwg": 32, "family_mwgb": 32, "family_mwgg": 32, "family_woman_boi": 32, "family_woman_boy_boi": 32, "family_woman_girl": 32, "family_woman_girl_boi": 32, "family_woman_girl_girl": 32, "family_woman_woman_boi": 32, "family_woman_woman_boy_boi": 32, "family_woman_woman_girl": 32, "family_woman_woman_girl_boi": 32, "family_woman_woman_girl_girl": 32, "family_wwb": 32, "family_wwbb": 32, "family_wwg": 32, "family_wwgb": 32, "family_wwgg": 32, "farmer": 32, "farmer_dark_skin_ton": 32, "farmer_light_skin_ton": 32, "farmer_medium_dark_skin_ton": 32, "farmer_medium_light_skin_ton": 32, "farmer_medium_skin_ton": 32, "farmer_tone1": 32, "farmer_tone2": 32, "farmer_tone3": 32, "farmer_tone4": 32, "farmer_tone5": 32, "faroe_island": 32, "fast_forward": 32, "fax": 32, "fear": [32, 258, 907], "feather": 32, "feet": 32, "female_detect": 32, "female_sign": 32, "fencer": 32, "fenc": 32, "ferris_wheel": 32, "ferri": 32, "fi": [32, 903, 911, 926], "field_hockei": 32, "fiji": 32, "file_cabinet": 32, "file_fold": 32, "film_fram": 32, "film_projector": 32, "film_strip": 32, "fingers_cross": 32, "fingers_crossed_tone1": 32, "fingers_crossed_tone2": 32, "fingers_crossed_tone3": 32, "fingers_crossed_tone4": 32, "fingers_crossed_tone5": 32, "finland": 32, "fire": [32, 43, 63, 404], "fire_engin": 32, "fire_extinguish": 32, "firecrack": 32, "firefight": 32, "firefighter_dark_skin_ton": 32, "firefighter_light_skin_ton": 32, "firefighter_medium_dark_skin_ton": 32, "firefighter_medium_light_skin_ton": 32, "firefighter_medium_skin_ton": 32, "firefighter_tone1": 32, "firefighter_tone2": 32, "firefighter_tone3": 32, "firefighter_tone4": 32, "firefighter_tone5": 32, "firework": 32, "first_plac": 32, "first_place_med": 32, "first_quarter_moon": 32, "first_quarter_moon_with_fac": 32, "fish": [32, 34, 1107], "fish_cak": 32, "fishing_pole_and_fish": 32, "fist": 32, "fist_left": 32, "fist_oncom": 32, "fist_rais": 32, "fist_right": 32, "fist_tone1": 32, "fist_tone2": 32, "fist_tone3": 32, "fist_tone4": 32, "fist_tone5": 32, "five": [32, 36, 63, 140, 160, 173, 183, 191, 212, 222, 228, 238, 253, 274, 292, 298, 317, 335, 1028, 1070], "fj": 32, "fk": 32, "flag_ac": 32, "flag_ad": 32, "flag_a": 32, "flag_af": 32, "flag_ag": 32, "flag_ai": 32, "flag_al": 32, "flag_am": 32, "flag_ao": 32, "flag_aq": 32, "flag_ar": 32, "flag_at": 32, "flag_au": 32, "flag_aw": 32, "flag_ax": 32, "flag_az": 32, "flag_ba": 32, "flag_bb": 32, "flag_bd": 32, "flag_b": 32, "flag_bf": 32, "flag_bg": 32, "flag_bh": 32, "flag_bi": 32, "flag_bj": 32, "flag_bl": 32, "flag_black": 32, "flag_bm": 32, "flag_bn": 32, "flag_bo": 32, "flag_bq": 32, "flag_br": 32, "flag_bt": 32, "flag_bv": 32, "flag_bw": 32, "flag_bz": 32, "flag_ca": 32, "flag_cc": 32, "flag_cd": 32, "flag_cf": 32, "flag_cg": 32, "flag_ch": 32, "flag_ci": 32, "flag_ck": 32, "flag_cl": 32, "flag_cm": 32, "flag_cn": 32, "flag_co": 32, "flag_cp": 32, "flag_cr": 32, "flag_cu": 32, "flag_cv": 32, "flag_cw": 32, "flag_cx": 32, "flag_cz": 32, "flag_d": 32, "flag_dg": 32, "flag_dj": 32, "flag_dk": 32, "flag_dm": 32, "flag_do": 32, "flag_dz": 32, "flag_ea": 32, "flag_ec": 32, "flag_e": 32, "flag_eg": 32, "flag_eh": 32, "flag_er": 32, "flag_": 32, "flag_et": 32, "flag_eu": 32, "flag_fi": 32, "flag_fj": 32, "flag_fk": 32, "flag_fm": 32, "flag_fo": 32, "flag_fr": 32, "flag_ga": 32, "flag_gb": 32, "flag_gd": 32, "flag_g": 32, "flag_gf": 32, "flag_gg": 32, "flag_gh": 32, "flag_gi": 32, "flag_gl": 32, "flag_gm": 32, "flag_gn": 32, "flag_gp": 32, "flag_gq": 32, "flag_gr": 32, "flag_gt": 32, "flag_gu": 32, "flag_gw": 32, "flag_hk": 32, "flag_hm": 32, "flag_hn": 32, "flag_hr": 32, "flag_ht": 32, "flag_hu": 32, "flag_ic": 32, "flag_id": 32, "flag_i": 32, "flag_il": 32, "flag_im": 32, "flag_in": 32, "flag_io": 32, "flag_iq": 32, "flag_ir": 32, "flag_it": 32, "flag_j": 32, "flag_jm": 32, "flag_jo": 32, "flag_jp": 32, "flag_k": 32, "flag_kg": 32, "flag_kh": 32, "flag_ki": 32, "flag_km": 32, "flag_kn": 32, "flag_kp": 32, "flag_kr": 32, "flag_kw": 32, "flag_kz": 32, "flag_la": 32, "flag_lb": 32, "flag_lc": 32, "flag_li": 32, "flag_lk": 32, "flag_lr": 32, "flag_l": 32, "flag_lt": 32, "flag_lu": 32, "flag_lv": 32, "flag_ma": 32, "flag_mc": 32, "flag_md": 32, "flag_m": 32, "flag_mf": 32, "flag_mg": 32, "flag_mh": 32, "flag_mk": 32, "flag_ml": 32, "flag_mm": 32, "flag_mn": 32, "flag_mo": 32, "flag_mp": 32, "flag_mq": 32, "flag_mr": 32, "flag_mt": 32, "flag_mu": 32, "flag_mv": 32, "flag_mw": 32, "flag_mx": 32, "flag_mi": 32, "flag_mz": 32, "flag_na": 32, "flag_nc": 32, "flag_n": 32, "flag_nf": 32, "flag_ng": 32, "flag_ni": 32, "flag_nl": 32, "flag_no": 32, "flag_np": 32, "flag_nr": 32, "flag_nu": 32, "flag_nz": 32, "flag_om": 32, "flag_pa": 32, "flag_p": 32, "flag_pf": 32, "flag_pg": 32, "flag_ph": 32, "flag_pk": 32, "flag_pl": 32, "flag_pm": 32, "flag_pn": 32, "flag_pr": 32, "flag_pt": 32, "flag_pw": 32, "flag_pi": 32, "flag_qa": 32, "flag_r": 32, "flag_ro": 32, "flag_ru": 32, "flag_rw": 32, "flag_sa": 32, "flag_sb": 32, "flag_sc": 32, "flag_sd": 32, "flag_s": 32, "flag_sg": 32, "flag_sh": 32, "flag_si": 32, "flag_sj": 32, "flag_sk": 32, "flag_sl": 32, "flag_sm": 32, "flag_sn": 32, "flag_so": 32, "flag_sr": 32, "flag_ss": 32, "flag_st": 32, "flag_sv": 32, "flag_sx": 32, "flag_sz": 32, "flag_ta": 32, "flag_tc": 32, "flag_td": 32, "flag_tf": 32, "flag_tg": 32, "flag_th": 32, "flag_tj": 32, "flag_tk": 32, "flag_tl": 32, "flag_tm": 32, "flag_tn": 32, "flag_to": 32, "flag_tr": 32, "flag_tt": 32, "flag_tv": 32, "flag_tw": 32, "flag_tz": 32, "flag_ua": 32, "flag_ug": 32, "flag_um": 32, "flag_u": 32, "flag_ui": 32, "flag_uz": 32, "flag_va": 32, "flag_vc": 32, "flag_v": 32, "flag_vg": 32, "flag_vi": 32, "flag_vn": 32, "flag_vu": 32, "flag_wf": 32, "flag_whit": 32, "flag_w": 32, "flag_xk": 32, "flag_y": 32, "flag_yt": 32, "flag_za": 32, "flag_zm": 32, "flag_zw": 32, "flag": [32, 48, 140, 142, 157, 168, 179, 209, 215, 218, 222, 225, 228, 253, 256, 267, 269, 283, 310, 429, 430, 431, 436, 439, 625, 639, 716, 726, 732, 741, 755, 778, 781, 783, 871, 873, 902, 903, 904, 906, 920, 941, 945, 1006], "flame": [32, 143], "flamingo": 32, "flan": 32, "flashlight": 32, "flatbread": 32, "fleur": 32, "li": [32, 136, 232, 578], "fleur_de_li": 32, "flight_arriv": 32, "flight_departur": 32, "floppy_disk": 32, "flower_playing_card": 32, "fly": [32, 799, 870], "flying_disc": 32, "flying_sauc": 32, "fm": 32, "fo": 32, "fog": 32, "foggi": 32, "fondu": 32, "foot": [32, 69, 378, 835], "foot_dark_skin_ton": 32, "foot_light_skin_ton": 32, "foot_medium_dark_skin_ton": 32, "foot_medium_light_skin_ton": 32, "foot_medium_skin_ton": 32, "foot_tone1": 32, "foot_tone2": 32, "foot_tone3": 32, "foot_tone4": 32, "foot_tone5": 32, "footbal": 32, "footprint": [32, 172, 995], "fork_and_knif": 32, "fork_and_knife_with_pl": 32, "fork_knife_pl": 32, "fortune_cooki": 32, "fountain": 32, "fountain_pen": 32, "four": [32, 35, 65, 139, 144, 160, 172, 173, 176, 183, 190, 191, 199, 215, 220, 222, 232, 235, 238, 249, 253, 256, 270, 273, 274, 280, 317, 773, 839, 1009, 1017, 1070, 1071, 1079, 1105, 1128], "four_leaf_clov": 32, "fox": [32, 402], "fox_fac": 32, "fr": [32, 151], "frame_photo": 32, "frame_with_pictur": 32, "framed_pictur": 32, "franc": 32, "french_bread": 32, "french_guiana": 32, "french_polynesia": 32, "french_southern_territori": 32, "fried_egg": 32, "fried_shrimp": 32, "fri": 32, "frog": 32, "frowning2": 32, "frown": [32, 35, 69, 1125], "frowning_fac": 32, "frowning_man": 32, "frowning_woman": 32, "fuelpump": 32, "full_moon": 32, "full_moon_with_fac": 32, "funeral_urn": 32, "ga": 32, "gabon": 32, "gambia": 32, "game_di": 32, "garlic": 32, "gay_pride_flag": 32, "gb": [32, 901], "gd": 32, "ge": [32, 35], "gear": 32, "gem": 32, "gemini": 32, "geni": 32, "georgia": 32, "germani": [32, 140, 141, 335], "gf": 32, "gg": [32, 35, 38], "gh": [32, 136, 1093], "ghana": 32, "ghost": 32, "gi": [32, 136, 223], "gibraltar": 32, "gift": [32, 176, 207], "gift_heart": 32, "giraff": 32, "girl": 32, "girl_tone1": 32, "girl_tone2": 32, "girl_tone3": 32, "girl_tone4": 32, "girl_tone5": 32, "gl": [32, 35], "glass_of_milk": 32, "globe_with_meridian": 32, "glove": 32, "gm": 32, "gn": 32, "goal": [32, 42, 68, 140, 259, 262, 302, 426, 436, 705, 800, 801, 963, 972], "goal_net": 32, "goat": 32, "goggl": 32, "golf": 32, "golfer": 32, "golfing_man": 32, "golfing_woman": 32, "gorilla": 32, "gp": 32, "gq": 32, "gr": [32, 280, 1084], "grandma": 32, "grandma_tone1": 32, "grandma_tone2": 32, "grandma_tone3": 32, "grandma_tone4": 32, "grandma_tone5": 32, "grape": 32, "great_britain": 32, "greec": 32, "green_appl": 32, "green_book": 32, "green_circl": 32, "green_heart": 32, "green_salad": 32, "green_squar": 32, "greenland": 32, "grenada": 32, "grey_exclam": 32, "grey_quest": 32, "grin": 32, "gu": 32, "guadeloup": 32, "guam": 32, "guard": [32, 202, 218, 434, 713, 714, 716], "guard_tone1": 32, "guard_tone2": 32, "guard_tone3": 32, "guard_tone4": 32, "guard_tone5": 32, "guardsman": 32, "guardsman_tone1": 32, "guardsman_tone2": 32, "guardsman_tone3": 32, "guardsman_tone4": 32, "guardsman_tone5": 32, "guardswoman": 32, "guatemala": 32, "guernsei": 32, "guide_dog": 32, "guinea": 32, "guinea_bissau": 32, "guitar": 32, "gun": 32, "guyana": 32, "gw": 32, "gy": 32, "haircut": 32, "haircut_man": 32, "haircut_tone1": 32, "haircut_tone2": 32, "haircut_tone3": 32, "haircut_tone4": 32, "haircut_tone5": 32, "haircut_woman": 32, "haiti": 32, "hamburg": 32, "hammer": [32, 140, 216, 256, 753, 763], "hammer_and_pick": 32, "hammer_and_wrench": 32, "hammer_pick": 32, "hamster": 32, "hand": [32, 136, 148, 155, 160, 167, 176, 191, 202, 218, 237, 264, 325, 352, 363, 382, 384, 447, 466, 534, 545, 561, 563, 564, 690, 817, 833, 878, 879, 895, 923, 957, 975, 990, 997, 1125, 1131, 1143], "hand_splai": 32, "hand_splayed_tone1": 32, "hand_splayed_tone2": 32, "hand_splayed_tone3": 32, "hand_splayed_tone4": 32, "hand_splayed_tone5": 32, "hand_with_index_and_middle_finger_cross": 32, "hand_with_index_and_middle_fingers_crossed_tone1": 32, "hand_with_index_and_middle_fingers_crossed_tone2": 32, "hand_with_index_and_middle_fingers_crossed_tone3": 32, "hand_with_index_and_middle_fingers_crossed_tone4": 32, "hand_with_index_and_middle_fingers_crossed_tone5": 32, "handbag": 32, "handbal": 32, "handball_tone1": 32, "handball_tone2": 32, "handball_tone3": 32, "handball_tone4": 32, "handball_tone5": 32, "handshak": [32, 714], "handshake_tone1": 32, "handshake_tone2": 32, "handshake_tone3": 32, "handshake_tone4": 32, "handshake_tone5": 32, "hankei": 32, "hash": [32, 172, 178, 179, 190, 196, 209, 215, 216, 219, 223, 225, 228, 232, 253, 260, 274, 317, 437, 773, 1019, 1100], "hatched_chick": 32, "hatching_chick": 32, "head_bandag": 32, "headphon": 32, "headston": 32, "health_work": 32, "health_worker_dark_skin_ton": 32, "health_worker_light_skin_ton": 32, "health_worker_medium_dark_skin_ton": 32, "health_worker_medium_light_skin_ton": 32, "health_worker_medium_skin_ton": 32, "health_worker_tone1": 32, "health_worker_tone2": 32, "health_worker_tone3": 32, "health_worker_tone4": 32, "health_worker_tone5": 32, "hear_no_evil": 32, "heart_decor": 32, "heart_exclam": 32, "heart_ey": 32, "heart_eyes_cat": 32, "heart_on_fir": 32, "heartbeat": 32, "heartpuls": 32, "heavy_check_mark": 32, "heavy_division_sign": 32, "heavy_dollar_sign": 32, "heavy_heart_exclam": 32, "heavy_heart_exclamation_mark_orna": 32, "heavy_minus_sign": 32, "heavy_multiplication_x": 32, "heavy_plus_sign": 32, "hedgehog": 32, "helicopt": 32, "helmet_with_cross": 32, "helmet_with_white_cross": 32, "herb": 32, "hibiscu": 32, "high_bright": 32, "high_heel": 32, "hiking_boot": 32, "hindu_templ": 32, "hippopotamu": 32, "hk": 32, "hn": 32, "hocho": 32, "hockei": 32, "hole": [32, 218, 726, 869, 899, 908, 909, 910, 927, 940], "hondura": 32, "honey_pot": 32, "hong_kong": 32, "hook": [32, 34, 38, 191, 209, 215, 225, 228, 258, 291, 418, 453, 709, 732], "hors": 32, "horse_rac": 32, "horse_racing_tone1": 32, "horse_racing_tone2": 32, "horse_racing_tone3": 32, "horse_racing_tone4": 32, "horse_racing_tone5": 32, "hospit": 32, "hot_dog": 32, "hot_fac": 32, "hot_pepp": 32, "hotdog": 32, "hotel": [32, 145, 335], "hotspr": 32, "hourglass": 32, "hourglass_flowing_sand": 32, "house_abandon": 32, "house_build": 32, "house_with_garden": 32, "hr": 32, "ht": 32, "hu": [32, 308, 309, 326], "hug": 32, "hugging_fac": 32, "hungari": 32, "hush": 32, "hut": 32, "ic": [32, 363, 444, 473, 1124], "ice_cream": 32, "ice_cub": 32, "ice_hockei": 32, "ice_sk": 32, "icecream": 32, "iceland": 32, "id": [32, 42, 46, 107, 110, 111, 142, 145, 155, 159, 162, 172, 173, 183, 190, 196, 209, 212, 215, 222, 225, 226, 228, 235, 238, 242, 250, 253, 260, 266, 270, 274, 280, 285, 292, 312, 433, 468, 469, 470, 482, 483, 484, 501, 737, 769, 771, 793, 800, 801, 806, 808, 817, 818, 819, 829, 836, 857, 859, 860, 871, 877, 879, 886, 905, 915, 957, 984, 995, 1011, 1049, 1060, 1061, 1062, 1063, 1066, 1067, 1068, 1077, 1079, 1097, 1141], "ideograph_advantag": 32, "ie": 32, "il": [32, 150], "imp": 32, "inbox_trai": 32, "incoming_envelop": 32, "india": [32, 200, 249, 273, 1071], "indonesia": 32, "infin": [32, 179, 228, 976, 977], "information_desk_person": 32, "information_desk_person_tone1": 32, "information_desk_person_tone2": 32, "information_desk_person_tone3": 32, "information_desk_person_tone4": 32, "information_desk_person_tone5": 32, "\u2139": 32, "information_sourc": 32, "interrobang": 32, "iphon": 32, "iq": 32, "ir": [32, 833], "iran": 32, "iraq": 32, "ireland": 32, "island": 32, "isle_of_man": 32, "israel": [32, 200, 249, 1071], "itali": 32, "izakaya_lantern": 32, "jack_o_lantern": 32, "jamaica": 32, "japan": 32, "japanese_castl": 32, "japanese_goblin": 32, "japanese_ogr": 32, "jean": 32, "jersei": 32, "jigsaw": 32, "jm": 32, "jo": [32, 183, 196, 209, 212, 222, 225, 228, 232, 235, 274, 280], "jordan": 32, "joi": 32, "joy_cat": 32, "joystick": 32, "jp": 32, "judg": 32, "judge_dark_skin_ton": 32, "judge_light_skin_ton": 32, "judge_medium_dark_skin_ton": 32, "judge_medium_light_skin_ton": 32, "judge_medium_skin_ton": 32, "judge_tone1": 32, "judge_tone2": 32, "judge_tone3": 32, "judge_tone4": 32, "judge_tone5": 32, "juggler": 32, "juggler_tone1": 32, "juggler_tone2": 32, "juggler_tone3": 32, "juggler_tone4": 32, "juggler_tone5": 32, "juggl": 32, "juggling_tone1": 32, "juggling_tone2": 32, "juggling_tone3": 32, "juggling_tone4": 32, "juggling_tone5": 32, "kaaba": 32, "kangaroo": 32, "karate_uniform": 32, "kayak": 32, "kazakhstan": 32, "ke": 32, "kenya": 32, "key2": 32, "keyboard": [32, 317, 815, 865], "keycap_ten": 32, "kg": 32, "kh": 32, "ki": [32, 181], "kick_scoot": 32, "kimono": 32, "kiribati": 32, "kiss_dark_skin_ton": 32, "kiss_light_skin_ton": 32, "kiss_man_man_dark_skin_ton": 32, "kiss_man_man_dark_skin_tone_light_skin_ton": 32, "kiss_man_man_dark_skin_tone_medium_dark_skin_ton": 32, "kiss_man_man_dark_skin_tone_medium_light_skin_ton": 32, "kiss_man_man_dark_skin_tone_medium_skin_ton": 32, "kiss_man_man_light_skin_ton": 32, "kiss_man_man_light_skin_tone_dark_skin_ton": 32, "kiss_man_man_light_skin_tone_medium_dark_skin_ton": 32, "kiss_man_man_light_skin_tone_medium_light_skin_ton": 32, "kiss_man_man_light_skin_tone_medium_skin_ton": 32, "kiss_man_man_medium_dark_skin_ton": 32, "kiss_man_man_medium_dark_skin_tone_dark_skin_ton": 32, "kiss_man_man_medium_dark_skin_tone_light_skin_ton": 32, "kiss_man_man_medium_dark_skin_tone_medium_light_skin_ton": 32, "kiss_man_man_medium_dark_skin_tone_medium_skin_ton": 32, "kiss_man_man_medium_light_skin_ton": 32, "kiss_man_man_medium_light_skin_tone_dark_skin_ton": 32, "kiss_man_man_medium_light_skin_tone_light_skin_ton": 32, "kiss_man_man_medium_light_skin_tone_medium_dark_skin_ton": 32, "kiss_man_man_medium_light_skin_tone_medium_skin_ton": 32, "kiss_man_man_medium_skin_ton": 32, "kiss_man_man_medium_skin_tone_dark_skin_ton": 32, "kiss_man_man_medium_skin_tone_light_skin_ton": 32, "kiss_man_man_medium_skin_tone_medium_dark_skin_ton": 32, "kiss_man_man_medium_skin_tone_medium_light_skin_ton": 32, "kiss_man_man_tone1": 32, "kiss_man_man_tone1_tone2": 32, "kiss_man_man_tone1_tone3": 32, "kiss_man_man_tone1_tone4": 32, "kiss_man_man_tone1_tone5": 32, "kiss_man_man_tone2": 32, "kiss_man_man_tone2_tone1": 32, "kiss_man_man_tone2_tone3": 32, "kiss_man_man_tone2_tone4": 32, "kiss_man_man_tone2_tone5": 32, "kiss_man_man_tone3": 32, "kiss_man_man_tone3_tone1": 32, "kiss_man_man_tone3_tone2": 32, "kiss_man_man_tone3_tone4": 32, "kiss_man_man_tone3_tone5": 32, "kiss_man_man_tone4": 32, "kiss_man_man_tone4_tone1": 32, "kiss_man_man_tone4_tone2": 32, "kiss_man_man_tone4_tone3": 32, "kiss_man_man_tone4_tone5": 32, "kiss_man_man_tone5": 32, "kiss_man_man_tone5_tone1": 32, "kiss_man_man_tone5_tone2": 32, "kiss_man_man_tone5_tone3": 32, "kiss_man_man_tone5_tone4": 32, "kiss_medium_dark_skin_ton": 32, "kiss_medium_light_skin_ton": 32, "kiss_medium_skin_ton": 32, "kiss_mm": 32, "kiss_person_person_dark_skin_tone_light_skin_ton": 32, "kiss_person_person_dark_skin_tone_medium_dark_skin_ton": 32, "kiss_person_person_dark_skin_tone_medium_light_skin_ton": 32, "kiss_person_person_dark_skin_tone_medium_skin_ton": 32, "kiss_person_person_light_skin_tone_dark_skin_ton": 32, "kiss_person_person_light_skin_tone_medium_dark_skin_ton": 32, "kiss_person_person_light_skin_tone_medium_light_skin_ton": 32, "kiss_person_person_light_skin_tone_medium_skin_ton": 32, "kiss_person_person_medium_dark_skin_tone_dark_skin_ton": 32, "kiss_person_person_medium_dark_skin_tone_light_skin_ton": 32, "kiss_person_person_medium_dark_skin_tone_medium_light_skin_ton": 32, "kiss_person_person_medium_dark_skin_tone_medium_skin_ton": 32, "kiss_person_person_medium_light_skin_tone_dark_skin_ton": 32, "kiss_person_person_medium_light_skin_tone_light_skin_ton": 32, "kiss_person_person_medium_light_skin_tone_medium_dark_skin_ton": 32, "kiss_person_person_medium_light_skin_tone_medium_skin_ton": 32, "kiss_person_person_medium_skin_tone_dark_skin_ton": 32, "kiss_person_person_medium_skin_tone_light_skin_ton": 32, "kiss_person_person_medium_skin_tone_medium_dark_skin_ton": 32, "kiss_person_person_medium_skin_tone_medium_light_skin_ton": 32, "kiss_person_person_tone1_tone2": 32, "kiss_person_person_tone1_tone3": 32, "kiss_person_person_tone1_tone4": 32, "kiss_person_person_tone1_tone5": 32, "kiss_person_person_tone2_tone1": 32, "kiss_person_person_tone2_tone3": 32, "kiss_person_person_tone2_tone4": 32, "kiss_person_person_tone2_tone5": 32, "kiss_person_person_tone3_tone1": 32, "kiss_person_person_tone3_tone2": 32, "kiss_person_person_tone3_tone4": 32, "kiss_person_person_tone3_tone5": 32, "kiss_person_person_tone4_tone1": 32, "kiss_person_person_tone4_tone2": 32, "kiss_person_person_tone4_tone3": 32, "kiss_person_person_tone4_tone5": 32, "kiss_person_person_tone5_tone1": 32, "kiss_person_person_tone5_tone2": 32, "kiss_person_person_tone5_tone3": 32, "kiss_person_person_tone5_tone4": 32, "kiss_tone1": 32, "kiss_tone2": 32, "kiss_tone3": 32, "kiss_tone4": 32, "kiss_tone5": 32, "kiss_woman_man": 32, "kiss_woman_man_dark_skin_ton": 32, "kiss_woman_man_dark_skin_tone_light_skin_ton": 32, "kiss_woman_man_dark_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_man_dark_skin_tone_medium_light_skin_ton": 32, "kiss_woman_man_dark_skin_tone_medium_skin_ton": 32, "kiss_woman_man_light_skin_ton": 32, "kiss_woman_man_light_skin_tone_dark_skin_ton": 32, "kiss_woman_man_light_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_man_light_skin_tone_medium_light_skin_ton": 32, "kiss_woman_man_light_skin_tone_medium_skin_ton": 32, "kiss_woman_man_medium_dark_skin_ton": 32, "kiss_woman_man_medium_dark_skin_tone_dark_skin_ton": 32, "kiss_woman_man_medium_dark_skin_tone_light_skin_ton": 32, "kiss_woman_man_medium_dark_skin_tone_medium_light_skin_ton": 32, "kiss_woman_man_medium_dark_skin_tone_medium_skin_ton": 32, "kiss_woman_man_medium_light_skin_ton": 32, "kiss_woman_man_medium_light_skin_tone_dark_skin_ton": 32, "kiss_woman_man_medium_light_skin_tone_light_skin_ton": 32, "kiss_woman_man_medium_light_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_man_medium_light_skin_tone_medium_skin_ton": 32, "kiss_woman_man_medium_skin_ton": 32, "kiss_woman_man_medium_skin_tone_dark_skin_ton": 32, "kiss_woman_man_medium_skin_tone_light_skin_ton": 32, "kiss_woman_man_medium_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_man_medium_skin_tone_medium_light_skin_ton": 32, "kiss_woman_man_tone1": 32, "kiss_woman_man_tone1_tone2": 32, "kiss_woman_man_tone1_tone3": 32, "kiss_woman_man_tone1_tone4": 32, "kiss_woman_man_tone1_tone5": 32, "kiss_woman_man_tone2": 32, "kiss_woman_man_tone2_tone1": 32, "kiss_woman_man_tone2_tone3": 32, "kiss_woman_man_tone2_tone4": 32, "kiss_woman_man_tone2_tone5": 32, "kiss_woman_man_tone3": 32, "kiss_woman_man_tone3_tone1": 32, "kiss_woman_man_tone3_tone2": 32, "kiss_woman_man_tone3_tone4": 32, "kiss_woman_man_tone3_tone5": 32, "kiss_woman_man_tone4": 32, "kiss_woman_man_tone4_tone1": 32, "kiss_woman_man_tone4_tone2": 32, "kiss_woman_man_tone4_tone3": 32, "kiss_woman_man_tone4_tone5": 32, "kiss_woman_man_tone5": 32, "kiss_woman_man_tone5_tone1": 32, "kiss_woman_man_tone5_tone2": 32, "kiss_woman_man_tone5_tone3": 32, "kiss_woman_man_tone5_tone4": 32, "kiss_woman_woman_dark_skin_ton": 32, "kiss_woman_woman_dark_skin_tone_light_skin_ton": 32, "kiss_woman_woman_dark_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_woman_dark_skin_tone_medium_light_skin_ton": 32, "kiss_woman_woman_dark_skin_tone_medium_skin_ton": 32, "kiss_woman_woman_light_skin_ton": 32, "kiss_woman_woman_light_skin_tone_dark_skin_ton": 32, "kiss_woman_woman_light_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_woman_light_skin_tone_medium_light_skin_ton": 32, "kiss_woman_woman_light_skin_tone_medium_skin_ton": 32, "kiss_woman_woman_medium_dark_skin_ton": 32, "kiss_woman_woman_medium_dark_skin_tone_dark_skin_ton": 32, "kiss_woman_woman_medium_dark_skin_tone_light_skin_ton": 32, "kiss_woman_woman_medium_dark_skin_tone_medium_light_skin_ton": 32, "kiss_woman_woman_medium_dark_skin_tone_medium_skin_ton": 32, "kiss_woman_woman_medium_light_skin_ton": 32, "kiss_woman_woman_medium_light_skin_tone_dark_skin_ton": 32, "kiss_woman_woman_medium_light_skin_tone_light_skin_ton": 32, "kiss_woman_woman_medium_light_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_woman_medium_light_skin_tone_medium_skin_ton": 32, "kiss_woman_woman_medium_skin_ton": 32, "kiss_woman_woman_medium_skin_tone_dark_skin_ton": 32, "kiss_woman_woman_medium_skin_tone_light_skin_ton": 32, "kiss_woman_woman_medium_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_woman_medium_skin_tone_medium_light_skin_ton": 32, "kiss_woman_woman_tone1": 32, "kiss_woman_woman_tone1_tone2": 32, "kiss_woman_woman_tone1_tone3": 32, "kiss_woman_woman_tone1_tone4": 32, "kiss_woman_woman_tone1_tone5": 32, "kiss_woman_woman_tone2": 32, "kiss_woman_woman_tone2_tone1": 32, "kiss_woman_woman_tone2_tone3": 32, "kiss_woman_woman_tone2_tone4": 32, "kiss_woman_woman_tone2_tone5": 32, "kiss_woman_woman_tone3": 32, "kiss_woman_woman_tone3_tone1": 32, "kiss_woman_woman_tone3_tone2": 32, "kiss_woman_woman_tone3_tone4": 32, "kiss_woman_woman_tone3_tone5": 32, "kiss_woman_woman_tone4": 32, "kiss_woman_woman_tone4_tone1": 32, "kiss_woman_woman_tone4_tone2": 32, "kiss_woman_woman_tone4_tone3": 32, "kiss_woman_woman_tone4_tone5": 32, "kiss_woman_woman_tone5": 32, "kiss_woman_woman_tone5_tone1": 32, "kiss_woman_woman_tone5_tone2": 32, "kiss_woman_woman_tone5_tone3": 32, "kiss_woman_woman_tone5_tone4": 32, "kiss_ww": 32, "kissing_cat": 32, "kissing_closed_ey": 32, "kissing_smiling_ey": 32, "kite": 32, "kiwi": 32, "kiwi_fruit": 32, "kiwifruit": 32, "km": [32, 161, 163], "kn": 32, "knife": [32, 732, 899, 1125], "knot": 32, "koala": 32, "koko": 32, "korea": 32, "kosovo": 32, "kp": 32, "kr": 32, "kuwait": 32, "kw": [32, 209, 215, 225, 228], "ky": 32, "kyrgyzstan": 32, "kz": 32, "la": 32, "lab_coat": 32, "label": [32, 39, 40, 58, 161, 163, 210, 223, 237, 240, 273, 279, 374, 379, 386, 392, 396, 399, 403, 406, 412, 416, 421, 422, 643, 644, 682, 723, 725, 726, 753, 1071, 1078, 1090, 1093], "lacross": 32, "ladder": 32, "lady_beetl": 32, "lao": 32, "large_blue_circl": 32, "large_blue_diamond": 32, "large_orange_diamond": 32, "last_quarter_moon": 32, "last_quarter_moon_with_fac": 32, "latin_cross": 32, "latvia": 32, "laugh": 32, "lb": 32, "lc": [32, 177], "leafy_green": 32, "leav": [32, 49, 65, 137, 140, 141, 147, 150, 180, 209, 232, 269, 328, 546, 548, 557, 558, 573, 575, 576, 721, 724, 736, 741, 751, 773, 878, 903, 923, 1011, 1084], "lebanon": 32, "ledger": 32, "left_facing_fist": 32, "left_facing_fist_tone1": 32, "left_facing_fist_tone2": 32, "left_facing_fist_tone3": 32, "left_facing_fist_tone4": 32, "left_facing_fist_tone5": 32, "left_fist": 32, "left_fist_tone1": 32, "left_fist_tone2": 32, "left_fist_tone3": 32, "left_fist_tone4": 32, "left_fist_tone5": 32, "left_luggag": 32, "left_right_arrow": 32, "left_speech_bubbl": 32, "leftwards_arrow_with_hook": 32, "leg": [32, 35], "leg_dark_skin_ton": 32, "leg_light_skin_ton": 32, "leg_medium_dark_skin_ton": 32, "leg_medium_light_skin_ton": 32, "leg_medium_skin_ton": 32, "leg_tone1": 32, "leg_tone2": 32, "leg_tone3": 32, "leg_tone4": 32, "leg_tone5": 32, "lemon": 32, "leo": [32, 308, 309, 326], "leopard": 32, "lesotho": 32, "level_slid": 32, "levit": 32, "levitate_tone1": 32, "levitate_tone2": 32, "levitate_tone3": 32, "levitate_tone4": 32, "levitate_tone5": 32, "liar": 32, "liberia": 32, "libra": 32, "libya": 32, "liechtenstein": 32, "lifter": 32, "lifter_tone1": 32, "lifter_tone2": 32, "lifter_tone3": 32, "lifter_tone4": 32, "lifter_tone5": 32, "light_rail": 32, "linked_paperclip": 32, "lion": 32, "lion_fac": 32, "lip": 32, "lipstick": 32, "lithuania": 32, "lizard": 32, "lk": 32, "llama": 32, "lobster": 32, "lock": [32, 140, 142, 172, 176, 209, 215, 218, 225, 228, 244, 245, 247, 256, 277, 290, 291, 298, 326, 400, 440, 520, 703, 709, 712, 714, 715, 721, 725, 726, 763, 771, 776, 781, 810, 886, 918, 923, 925, 933, 940, 981, 1071, 1125, 1137, 1140], "lock_with_ink_pen": 32, "lollipop": 32, "long_drum": 32, "loud_sound": 32, "loudspeak": 32, "love_hotel": 32, "love_lett": 32, "love_you_gestur": 32, "love_you_gesture_dark_skin_ton": 32, "love_you_gesture_light_skin_ton": 32, "love_you_gesture_medium_dark_skin_ton": 32, "love_you_gesture_medium_light_skin_ton": 32, "love_you_gesture_medium_skin_ton": 32, "love_you_gesture_tone1": 32, "love_you_gesture_tone2": 32, "love_you_gesture_tone3": 32, "love_you_gesture_tone4": 32, "love_you_gesture_tone5": 32, "low_bright": 32, "lower_left_ballpoint_pen": 32, "lower_left_crayon": 32, "lower_left_fountain_pen": 32, "lower_left_paintbrush": 32, "lr": 32, "lu": 32, "luggag": 32, "lung": 32, "luxembourg": 32, "lv": 32, "ly": 32, "lying_fac": 32, "ma": 32, "macau": 32, "macedonia": 32, "madagascar": 32, "mag": 32, "mag_right": 32, "mage": 32, "mage_dark_skin_ton": 32, "mage_light_skin_ton": 32, "mage_medium_dark_skin_ton": 32, "mage_medium_light_skin_ton": 32, "mage_medium_skin_ton": 32, "mage_tone1": 32, "mage_tone2": 32, "mage_tone3": 32, "mage_tone4": 32, "mage_tone5": 32, "magic_wand": 32, "magnet": 32, "mahjong": 32, "mailbox": 32, "mailbox_clos": 32, "mailbox_with_mail": 32, "mailbox_with_no_mail": 32, "malawi": 32, "malaysia": 32, "maldiv": 32, "male_danc": 32, "male_dancer_tone1": 32, "male_dancer_tone2": 32, "male_dancer_tone3": 32, "male_dancer_tone4": 32, "male_dancer_tone5": 32, "male_detect": 32, "male_sign": 32, "mali": 32, "malta": 32, "mammoth": 32, "man_artist": 32, "man_artist_dark_skin_ton": 32, "man_artist_light_skin_ton": 32, "man_artist_medium_dark_skin_ton": 32, "man_artist_medium_light_skin_ton": 32, "man_artist_medium_skin_ton": 32, "man_artist_tone1": 32, "man_artist_tone2": 32, "man_artist_tone3": 32, "man_artist_tone4": 32, "man_artist_tone5": 32, "man_astronaut": 32, "man_astronaut_dark_skin_ton": 32, "man_astronaut_light_skin_ton": 32, "man_astronaut_medium_dark_skin_ton": 32, "man_astronaut_medium_light_skin_ton": 32, "man_astronaut_medium_skin_ton": 32, "man_astronaut_tone1": 32, "man_astronaut_tone2": 32, "man_astronaut_tone3": 32, "man_astronaut_tone4": 32, "man_astronaut_tone5": 32, "man_bald": 32, "man_bald_dark_skin_ton": 32, "man_bald_light_skin_ton": 32, "man_bald_medium_dark_skin_ton": 32, "man_bald_medium_light_skin_ton": 32, "man_bald_medium_skin_ton": 32, "man_bald_tone1": 32, "man_bald_tone2": 32, "man_bald_tone3": 32, "man_bald_tone4": 32, "man_bald_tone5": 32, "man_beard": 32, "man_bik": 32, "man_biking_dark_skin_ton": 32, "man_biking_light_skin_ton": 32, "man_biking_medium_dark_skin_ton": 32, "man_biking_medium_light_skin_ton": 32, "man_biking_medium_skin_ton": 32, "man_biking_tone1": 32, "man_biking_tone2": 32, "man_biking_tone3": 32, "man_biking_tone4": 32, "man_biking_tone5": 32, "man_bouncing_bal": 32, "man_bouncing_ball_dark_skin_ton": 32, "man_bouncing_ball_light_skin_ton": 32, "man_bouncing_ball_medium_dark_skin_ton": 32, "man_bouncing_ball_medium_light_skin_ton": 32, "man_bouncing_ball_medium_skin_ton": 32, "man_bouncing_ball_tone1": 32, "man_bouncing_ball_tone2": 32, "man_bouncing_ball_tone3": 32, "man_bouncing_ball_tone4": 32, "man_bouncing_ball_tone5": 32, "man_bow": 32, "man_bowing_dark_skin_ton": 32, "man_bowing_light_skin_ton": 32, "man_bowing_medium_dark_skin_ton": 32, "man_bowing_medium_light_skin_ton": 32, "man_bowing_medium_skin_ton": 32, "man_bowing_tone1": 32, "man_bowing_tone2": 32, "man_bowing_tone3": 32, "man_bowing_tone4": 32, "man_bowing_tone5": 32, "man_cartwheel": 32, "man_cartwheeling_dark_skin_ton": 32, "man_cartwheeling_light_skin_ton": 32, "man_cartwheeling_medium_dark_skin_ton": 32, "man_cartwheeling_medium_light_skin_ton": 32, "man_cartwheeling_medium_skin_ton": 32, "man_cartwheeling_tone1": 32, "man_cartwheeling_tone2": 32, "man_cartwheeling_tone3": 32, "man_cartwheeling_tone4": 32, "man_cartwheeling_tone5": 32, "man_climb": 32, "man_climbing_dark_skin_ton": 32, "man_climbing_light_skin_ton": 32, "man_climbing_medium_dark_skin_ton": 32, "man_climbing_medium_light_skin_ton": 32, "man_climbing_medium_skin_ton": 32, "man_climbing_tone1": 32, "man_climbing_tone2": 32, "man_climbing_tone3": 32, "man_climbing_tone4": 32, "man_climbing_tone5": 32, "man_construction_work": 32, "man_construction_worker_dark_skin_ton": 32, "man_construction_worker_light_skin_ton": 32, "man_construction_worker_medium_dark_skin_ton": 32, "man_construction_worker_medium_light_skin_ton": 32, "man_construction_worker_medium_skin_ton": 32, "man_construction_worker_tone1": 32, "man_construction_worker_tone2": 32, "man_construction_worker_tone3": 32, "man_construction_worker_tone4": 32, "man_construction_worker_tone5": 32, "man_cook": 32, "man_cook_dark_skin_ton": 32, "man_cook_light_skin_ton": 32, "man_cook_medium_dark_skin_ton": 32, "man_cook_medium_light_skin_ton": 32, "man_cook_medium_skin_ton": 32, "man_cook_tone1": 32, "man_cook_tone2": 32, "man_cook_tone3": 32, "man_cook_tone4": 32, "man_cook_tone5": 32, "man_curly_hair": 32, "man_curly_haired_dark_skin_ton": 32, "man_curly_haired_light_skin_ton": 32, "man_curly_haired_medium_dark_skin_ton": 32, "man_curly_haired_medium_light_skin_ton": 32, "man_curly_haired_medium_skin_ton": 32, "man_curly_haired_tone1": 32, "man_curly_haired_tone2": 32, "man_curly_haired_tone3": 32, "man_curly_haired_tone4": 32, "man_curly_haired_tone5": 32, "man_danc": 32, "man_dancing_tone1": 32, "man_dancing_tone2": 32, "man_dancing_tone3": 32, "man_dancing_tone4": 32, "man_dancing_tone5": 32, "man_dark_skin_tone_beard": 32, "man_detect": 32, "man_detective_dark_skin_ton": 32, "man_detective_light_skin_ton": 32, "man_detective_medium_dark_skin_ton": 32, "man_detective_medium_light_skin_ton": 32, "man_detective_medium_skin_ton": 32, "man_detective_tone1": 32, "man_detective_tone2": 32, "man_detective_tone3": 32, "man_detective_tone4": 32, "man_detective_tone5": 32, "man_elf": 32, "man_elf_dark_skin_ton": 32, "man_elf_light_skin_ton": 32, "man_elf_medium_dark_skin_ton": 32, "man_elf_medium_light_skin_ton": 32, "man_elf_medium_skin_ton": 32, "man_elf_tone1": 32, "man_elf_tone2": 32, "man_elf_tone3": 32, "man_elf_tone4": 32, "man_elf_tone5": 32, "man_facepalm": 32, "man_facepalming_dark_skin_ton": 32, "man_facepalming_light_skin_ton": 32, "man_facepalming_medium_dark_skin_ton": 32, "man_facepalming_medium_light_skin_ton": 32, "man_facepalming_medium_skin_ton": 32, "man_facepalming_tone1": 32, "man_facepalming_tone2": 32, "man_facepalming_tone3": 32, "man_facepalming_tone4": 32, "man_facepalming_tone5": 32, "man_factory_work": 32, "man_factory_worker_dark_skin_ton": 32, "man_factory_worker_light_skin_ton": 32, "man_factory_worker_medium_dark_skin_ton": 32, "man_factory_worker_medium_light_skin_ton": 32, "man_factory_worker_medium_skin_ton": 32, "man_factory_worker_tone1": 32, "man_factory_worker_tone2": 32, "man_factory_worker_tone3": 32, "man_factory_worker_tone4": 32, "man_factory_worker_tone5": 32, "man_fairi": 32, "man_fairy_dark_skin_ton": 32, "man_fairy_light_skin_ton": 32, "man_fairy_medium_dark_skin_ton": 32, "man_fairy_medium_light_skin_ton": 32, "man_fairy_medium_skin_ton": 32, "man_fairy_tone1": 32, "man_fairy_tone2": 32, "man_fairy_tone3": 32, "man_fairy_tone4": 32, "man_fairy_tone5": 32, "man_farm": 32, "man_farmer_dark_skin_ton": 32, "man_farmer_light_skin_ton": 32, "man_farmer_medium_dark_skin_ton": 32, "man_farmer_medium_light_skin_ton": 32, "man_farmer_medium_skin_ton": 32, "man_farmer_tone1": 32, "man_farmer_tone2": 32, "man_farmer_tone3": 32, "man_farmer_tone4": 32, "man_farmer_tone5": 32, "man_feeding_babi": 32, "man_feeding_baby_dark_skin_ton": 32, "man_feeding_baby_light_skin_ton": 32, "man_feeding_baby_medium_dark_skin_ton": 32, "man_feeding_baby_medium_light_skin_ton": 32, "man_feeding_baby_medium_skin_ton": 32, "man_feeding_baby_tone1": 32, "man_feeding_baby_tone2": 32, "man_feeding_baby_tone3": 32, "man_feeding_baby_tone4": 32, "man_feeding_baby_tone5": 32, "man_firefight": 32, "man_firefighter_dark_skin_ton": 32, "man_firefighter_light_skin_ton": 32, "man_firefighter_medium_dark_skin_ton": 32, "man_firefighter_medium_light_skin_ton": 32, "man_firefighter_medium_skin_ton": 32, "man_firefighter_tone1": 32, "man_firefighter_tone2": 32, "man_firefighter_tone3": 32, "man_firefighter_tone4": 32, "man_firefighter_tone5": 32, "man_frown": 32, "man_frowning_dark_skin_ton": 32, "man_frowning_light_skin_ton": 32, "man_frowning_medium_dark_skin_ton": 32, "man_frowning_medium_light_skin_ton": 32, "man_frowning_medium_skin_ton": 32, "man_frowning_tone1": 32, "man_frowning_tone2": 32, "man_frowning_tone3": 32, "man_frowning_tone4": 32, "man_frowning_tone5": 32, "man_geni": 32, "man_gesturing_no": 32, "man_gesturing_no_dark_skin_ton": 32, "man_gesturing_no_light_skin_ton": 32, "man_gesturing_no_medium_dark_skin_ton": 32, "man_gesturing_no_medium_light_skin_ton": 32, "man_gesturing_no_medium_skin_ton": 32, "man_gesturing_no_tone1": 32, "man_gesturing_no_tone2": 32, "man_gesturing_no_tone3": 32, "man_gesturing_no_tone4": 32, "man_gesturing_no_tone5": 32, "man_gesturing_ok": 32, "man_gesturing_ok_dark_skin_ton": 32, "man_gesturing_ok_light_skin_ton": 32, "man_gesturing_ok_medium_dark_skin_ton": 32, "man_gesturing_ok_medium_light_skin_ton": 32, "man_gesturing_ok_medium_skin_ton": 32, "man_gesturing_ok_tone1": 32, "man_gesturing_ok_tone2": 32, "man_gesturing_ok_tone3": 32, "man_gesturing_ok_tone4": 32, "man_gesturing_ok_tone5": 32, "man_getting_face_massag": 32, "man_getting_face_massage_dark_skin_ton": 32, "man_getting_face_massage_light_skin_ton": 32, "man_getting_face_massage_medium_dark_skin_ton": 32, "man_getting_face_massage_medium_light_skin_ton": 32, "man_getting_face_massage_medium_skin_ton": 32, "man_getting_face_massage_tone1": 32, "man_getting_face_massage_tone2": 32, "man_getting_face_massage_tone3": 32, "man_getting_face_massage_tone4": 32, "man_getting_face_massage_tone5": 32, "man_getting_haircut": 32, "man_getting_haircut_dark_skin_ton": 32, "man_getting_haircut_light_skin_ton": 32, "man_getting_haircut_medium_dark_skin_ton": 32, "man_getting_haircut_medium_light_skin_ton": 32, "man_getting_haircut_medium_skin_ton": 32, "man_getting_haircut_tone1": 32, "man_getting_haircut_tone2": 32, "man_getting_haircut_tone3": 32, "man_getting_haircut_tone4": 32, "man_getting_haircut_tone5": 32, "man_golf": 32, "man_golfing_dark_skin_ton": 32, "man_golfing_light_skin_ton": 32, "man_golfing_medium_dark_skin_ton": 32, "man_golfing_medium_light_skin_ton": 32, "man_golfing_medium_skin_ton": 32, "man_golfing_tone1": 32, "man_golfing_tone2": 32, "man_golfing_tone3": 32, "man_golfing_tone4": 32, "man_golfing_tone5": 32, "man_guard": 32, "man_guard_dark_skin_ton": 32, "man_guard_light_skin_ton": 32, "man_guard_medium_dark_skin_ton": 32, "man_guard_medium_light_skin_ton": 32, "man_guard_medium_skin_ton": 32, "man_guard_tone1": 32, "man_guard_tone2": 32, "man_guard_tone3": 32, "man_guard_tone4": 32, "man_guard_tone5": 32, "man_health_work": 32, "man_health_worker_dark_skin_ton": 32, "man_health_worker_light_skin_ton": 32, "man_health_worker_medium_dark_skin_ton": 32, "man_health_worker_medium_light_skin_ton": 32, "man_health_worker_medium_skin_ton": 32, "man_health_worker_tone1": 32, "man_health_worker_tone2": 32, "man_health_worker_tone3": 32, "man_health_worker_tone4": 32, "man_health_worker_tone5": 32, "man_in_business_suit_levit": 32, "man_in_business_suit_levitating_dark_skin_ton": 32, "man_in_business_suit_levitating_light_skin_ton": 32, "man_in_business_suit_levitating_medium_dark_skin_ton": 32, "man_in_business_suit_levitating_medium_light_skin_ton": 32, "man_in_business_suit_levitating_medium_skin_ton": 32, "man_in_business_suit_levitating_tone1": 32, "man_in_business_suit_levitating_tone2": 32, "man_in_business_suit_levitating_tone3": 32, "man_in_business_suit_levitating_tone4": 32, "man_in_business_suit_levitating_tone5": 32, "man_in_lotus_posit": 32, "man_in_lotus_position_dark_skin_ton": 32, "man_in_lotus_position_light_skin_ton": 32, "man_in_lotus_position_medium_dark_skin_ton": 32, "man_in_lotus_position_medium_light_skin_ton": 32, "man_in_lotus_position_medium_skin_ton": 32, "man_in_lotus_position_tone1": 32, "man_in_lotus_position_tone2": 32, "man_in_lotus_position_tone3": 32, "man_in_lotus_position_tone4": 32, "man_in_lotus_position_tone5": 32, "man_in_manual_wheelchair": 32, "man_in_manual_wheelchair_dark_skin_ton": 32, "man_in_manual_wheelchair_light_skin_ton": 32, "man_in_manual_wheelchair_medium_dark_skin_ton": 32, "man_in_manual_wheelchair_medium_light_skin_ton": 32, "man_in_manual_wheelchair_medium_skin_ton": 32, "man_in_manual_wheelchair_tone1": 32, "man_in_manual_wheelchair_tone2": 32, "man_in_manual_wheelchair_tone3": 32, "man_in_manual_wheelchair_tone4": 32, "man_in_manual_wheelchair_tone5": 32, "man_in_motorized_wheelchair": 32, "man_in_motorized_wheelchair_dark_skin_ton": 32, "man_in_motorized_wheelchair_light_skin_ton": 32, "man_in_motorized_wheelchair_medium_dark_skin_ton": 32, "man_in_motorized_wheelchair_medium_light_skin_ton": 32, "man_in_motorized_wheelchair_medium_skin_ton": 32, "man_in_motorized_wheelchair_tone1": 32, "man_in_motorized_wheelchair_tone2": 32, "man_in_motorized_wheelchair_tone3": 32, "man_in_motorized_wheelchair_tone4": 32, "man_in_motorized_wheelchair_tone5": 32, "man_in_steamy_room": 32, "man_in_steamy_room_dark_skin_ton": 32, "man_in_steamy_room_light_skin_ton": 32, "man_in_steamy_room_medium_dark_skin_ton": 32, "man_in_steamy_room_medium_light_skin_ton": 32, "man_in_steamy_room_medium_skin_ton": 32, "man_in_steamy_room_tone1": 32, "man_in_steamy_room_tone2": 32, "man_in_steamy_room_tone3": 32, "man_in_steamy_room_tone4": 32, "man_in_steamy_room_tone5": 32, "man_in_tuxedo": 32, "man_in_tuxedo_dark_skin_ton": 32, "man_in_tuxedo_light_skin_ton": 32, "man_in_tuxedo_medium_dark_skin_ton": 32, "man_in_tuxedo_medium_light_skin_ton": 32, "man_in_tuxedo_medium_skin_ton": 32, "man_in_tuxedo_tone1": 32, "man_in_tuxedo_tone2": 32, "man_in_tuxedo_tone3": 32, "man_in_tuxedo_tone4": 32, "man_in_tuxedo_tone5": 32, "man_judg": 32, "man_judge_dark_skin_ton": 32, "man_judge_light_skin_ton": 32, "man_judge_medium_dark_skin_ton": 32, "man_judge_medium_light_skin_ton": 32, "man_judge_medium_skin_ton": 32, "man_judge_tone1": 32, "man_judge_tone2": 32, "man_judge_tone3": 32, "man_judge_tone4": 32, "man_judge_tone5": 32, "man_juggl": 32, "man_juggling_dark_skin_ton": 32, "man_juggling_light_skin_ton": 32, "man_juggling_medium_dark_skin_ton": 32, "man_juggling_medium_light_skin_ton": 32, "man_juggling_medium_skin_ton": 32, "man_juggling_tone1": 32, "man_juggling_tone2": 32, "man_juggling_tone3": 32, "man_juggling_tone4": 32, "man_juggling_tone5": 32, "man_kneel": 32, "man_kneeling_dark_skin_ton": 32, "man_kneeling_light_skin_ton": 32, "man_kneeling_medium_dark_skin_ton": 32, "man_kneeling_medium_light_skin_ton": 32, "man_kneeling_medium_skin_ton": 32, "man_kneeling_tone1": 32, "man_kneeling_tone2": 32, "man_kneeling_tone3": 32, "man_kneeling_tone4": 32, "man_kneeling_tone5": 32, "man_lifting_weight": 32, "man_lifting_weights_dark_skin_ton": 32, "man_lifting_weights_light_skin_ton": 32, "man_lifting_weights_medium_dark_skin_ton": 32, "man_lifting_weights_medium_light_skin_ton": 32, "man_lifting_weights_medium_skin_ton": 32, "man_lifting_weights_tone1": 32, "man_lifting_weights_tone2": 32, "man_lifting_weights_tone3": 32, "man_lifting_weights_tone4": 32, "man_lifting_weights_tone5": 32, "man_light_skin_tone_beard": 32, "man_mag": 32, "man_mage_dark_skin_ton": 32, "man_mage_light_skin_ton": 32, "man_mage_medium_dark_skin_ton": 32, "man_mage_medium_light_skin_ton": 32, "man_mage_medium_skin_ton": 32, "man_mage_tone1": 32, "man_mage_tone2": 32, "man_mage_tone3": 32, "man_mage_tone4": 32, "man_mage_tone5": 32, "man_mechan": 32, "man_mechanic_dark_skin_ton": 32, "man_mechanic_light_skin_ton": 32, "man_mechanic_medium_dark_skin_ton": 32, "man_mechanic_medium_light_skin_ton": 32, "man_mechanic_medium_skin_ton": 32, "man_mechanic_tone1": 32, "man_mechanic_tone2": 32, "man_mechanic_tone3": 32, "man_mechanic_tone4": 32, "man_mechanic_tone5": 32, "man_medium_dark_skin_tone_beard": 32, "man_medium_light_skin_tone_beard": 32, "man_medium_skin_tone_beard": 32, "man_mountain_bik": 32, "man_mountain_biking_dark_skin_ton": 32, "man_mountain_biking_light_skin_ton": 32, "man_mountain_biking_medium_dark_skin_ton": 32, "man_mountain_biking_medium_light_skin_ton": 32, "man_mountain_biking_medium_skin_ton": 32, "man_mountain_biking_tone1": 32, "man_mountain_biking_tone2": 32, "man_mountain_biking_tone3": 32, "man_mountain_biking_tone4": 32, "man_mountain_biking_tone5": 32, "man_office_work": 32, "man_office_worker_dark_skin_ton": 32, "man_office_worker_light_skin_ton": 32, "man_office_worker_medium_dark_skin_ton": 32, "man_office_worker_medium_light_skin_ton": 32, "man_office_worker_medium_skin_ton": 32, "man_office_worker_tone1": 32, "man_office_worker_tone2": 32, "man_office_worker_tone3": 32, "man_office_worker_tone4": 32, "man_office_worker_tone5": 32, "man_pilot": 32, "man_pilot_dark_skin_ton": 32, "man_pilot_light_skin_ton": 32, "man_pilot_medium_dark_skin_ton": 32, "man_pilot_medium_light_skin_ton": 32, "man_pilot_medium_skin_ton": 32, "man_pilot_tone1": 32, "man_pilot_tone2": 32, "man_pilot_tone3": 32, "man_pilot_tone4": 32, "man_pilot_tone5": 32, "man_playing_handbal": 32, "man_playing_handball_dark_skin_ton": 32, "man_playing_handball_light_skin_ton": 32, "man_playing_handball_medium_dark_skin_ton": 32, "man_playing_handball_medium_light_skin_ton": 32, "man_playing_handball_medium_skin_ton": 32, "man_playing_handball_tone1": 32, "man_playing_handball_tone2": 32, "man_playing_handball_tone3": 32, "man_playing_handball_tone4": 32, "man_playing_handball_tone5": 32, "man_playing_water_polo": 32, "man_playing_water_polo_dark_skin_ton": 32, "man_playing_water_polo_light_skin_ton": 32, "man_playing_water_polo_medium_dark_skin_ton": 32, "man_playing_water_polo_medium_light_skin_ton": 32, "man_playing_water_polo_medium_skin_ton": 32, "man_playing_water_polo_tone1": 32, "man_playing_water_polo_tone2": 32, "man_playing_water_polo_tone3": 32, "man_playing_water_polo_tone4": 32, "man_playing_water_polo_tone5": 32, "man_police_offic": 32, "man_police_officer_dark_skin_ton": 32, "man_police_officer_light_skin_ton": 32, "man_police_officer_medium_dark_skin_ton": 32, "man_police_officer_medium_light_skin_ton": 32, "man_police_officer_medium_skin_ton": 32, "man_police_officer_tone1": 32, "man_police_officer_tone2": 32, "man_police_officer_tone3": 32, "man_police_officer_tone4": 32, "man_police_officer_tone5": 32, "man_pout": 32, "man_pouting_dark_skin_ton": 32, "man_pouting_light_skin_ton": 32, "man_pouting_medium_dark_skin_ton": 32, "man_pouting_medium_light_skin_ton": 32, "man_pouting_medium_skin_ton": 32, "man_pouting_tone1": 32, "man_pouting_tone2": 32, "man_pouting_tone3": 32, "man_pouting_tone4": 32, "man_pouting_tone5": 32, "man_raising_hand": 32, "man_raising_hand_dark_skin_ton": 32, "man_raising_hand_light_skin_ton": 32, "man_raising_hand_medium_dark_skin_ton": 32, "man_raising_hand_medium_light_skin_ton": 32, "man_raising_hand_medium_skin_ton": 32, "man_raising_hand_tone1": 32, "man_raising_hand_tone2": 32, "man_raising_hand_tone3": 32, "man_raising_hand_tone4": 32, "man_raising_hand_tone5": 32, "man_red_hair": 32, "man_red_haired_dark_skin_ton": 32, "man_red_haired_light_skin_ton": 32, "man_red_haired_medium_dark_skin_ton": 32, "man_red_haired_medium_light_skin_ton": 32, "man_red_haired_medium_skin_ton": 32, "man_red_haired_tone1": 32, "man_red_haired_tone2": 32, "man_red_haired_tone3": 32, "man_red_haired_tone4": 32, "man_red_haired_tone5": 32, "man_rowing_boat": 32, "man_rowing_boat_dark_skin_ton": 32, "man_rowing_boat_light_skin_ton": 32, "man_rowing_boat_medium_dark_skin_ton": 32, "man_rowing_boat_medium_light_skin_ton": 32, "man_rowing_boat_medium_skin_ton": 32, "man_rowing_boat_tone1": 32, "man_rowing_boat_tone2": 32, "man_rowing_boat_tone3": 32, "man_rowing_boat_tone4": 32, "man_rowing_boat_tone5": 32, "man_run": 32, "man_running_dark_skin_ton": 32, "man_running_light_skin_ton": 32, "man_running_medium_dark_skin_ton": 32, "man_running_medium_light_skin_ton": 32, "man_running_medium_skin_ton": 32, "man_running_tone1": 32, "man_running_tone2": 32, "man_running_tone3": 32, "man_running_tone4": 32, "man_running_tone5": 32, "man_scientist": 32, "man_scientist_dark_skin_ton": 32, "man_scientist_light_skin_ton": 32, "man_scientist_medium_dark_skin_ton": 32, "man_scientist_medium_light_skin_ton": 32, "man_scientist_medium_skin_ton": 32, "man_scientist_tone1": 32, "man_scientist_tone2": 32, "man_scientist_tone3": 32, "man_scientist_tone4": 32, "man_scientist_tone5": 32, "man_shrug": 32, "man_shrugging_dark_skin_ton": 32, "man_shrugging_light_skin_ton": 32, "man_shrugging_medium_dark_skin_ton": 32, "man_shrugging_medium_light_skin_ton": 32, "man_shrugging_medium_skin_ton": 32, "man_shrugging_tone1": 32, "man_shrugging_tone2": 32, "man_shrugging_tone3": 32, "man_shrugging_tone4": 32, "man_shrugging_tone5": 32, "man_sing": 32, "man_singer_dark_skin_ton": 32, "man_singer_light_skin_ton": 32, "man_singer_medium_dark_skin_ton": 32, "man_singer_medium_light_skin_ton": 32, "man_singer_medium_skin_ton": 32, "man_singer_tone1": 32, "man_singer_tone2": 32, "man_singer_tone3": 32, "man_singer_tone4": 32, "man_singer_tone5": 32, "man_stand": 32, "man_standing_dark_skin_ton": 32, "man_standing_light_skin_ton": 32, "man_standing_medium_dark_skin_ton": 32, "man_standing_medium_light_skin_ton": 32, "man_standing_medium_skin_ton": 32, "man_standing_tone1": 32, "man_standing_tone2": 32, "man_standing_tone3": 32, "man_standing_tone4": 32, "man_standing_tone5": 32, "man_stud": 32, "man_student_dark_skin_ton": 32, "man_student_light_skin_ton": 32, "man_student_medium_dark_skin_ton": 32, "man_student_medium_light_skin_ton": 32, "man_student_medium_skin_ton": 32, "man_student_tone1": 32, "man_student_tone2": 32, "man_student_tone3": 32, "man_student_tone4": 32, "man_student_tone5": 32, "man_superhero": 32, "man_superhero_dark_skin_ton": 32, "man_superhero_light_skin_ton": 32, "man_superhero_medium_dark_skin_ton": 32, "man_superhero_medium_light_skin_ton": 32, "man_superhero_medium_skin_ton": 32, "man_superhero_tone1": 32, "man_superhero_tone2": 32, "man_superhero_tone3": 32, "man_superhero_tone4": 32, "man_superhero_tone5": 32, "man_supervillain": 32, "man_supervillain_dark_skin_ton": 32, "man_supervillain_light_skin_ton": 32, "man_supervillain_medium_dark_skin_ton": 32, "man_supervillain_medium_light_skin_ton": 32, "man_supervillain_medium_skin_ton": 32, "man_supervillain_tone1": 32, "man_supervillain_tone2": 32, "man_supervillain_tone3": 32, "man_supervillain_tone4": 32, "man_supervillain_tone5": 32, "man_surf": 32, "man_surfing_dark_skin_ton": 32, "man_surfing_light_skin_ton": 32, "man_surfing_medium_dark_skin_ton": 32, "man_surfing_medium_light_skin_ton": 32, "man_surfing_medium_skin_ton": 32, "man_surfing_tone1": 32, "man_surfing_tone2": 32, "man_surfing_tone3": 32, "man_surfing_tone4": 32, "man_surfing_tone5": 32, "man_swim": 32, "man_swimming_dark_skin_ton": 32, "man_swimming_light_skin_ton": 32, "man_swimming_medium_dark_skin_ton": 32, "man_swimming_medium_light_skin_ton": 32, "man_swimming_medium_skin_ton": 32, "man_swimming_tone1": 32, "man_swimming_tone2": 32, "man_swimming_tone3": 32, "man_swimming_tone4": 32, "man_swimming_tone5": 32, "man_teach": 32, "man_teacher_dark_skin_ton": 32, "man_teacher_light_skin_ton": 32, "man_teacher_medium_dark_skin_ton": 32, "man_teacher_medium_light_skin_ton": 32, "man_teacher_medium_skin_ton": 32, "man_teacher_tone1": 32, "man_teacher_tone2": 32, "man_teacher_tone3": 32, "man_teacher_tone4": 32, "man_teacher_tone5": 32, "man_technologist": 32, "man_technologist_dark_skin_ton": 32, "man_technologist_light_skin_ton": 32, "man_technologist_medium_dark_skin_ton": 32, "man_technologist_medium_light_skin_ton": 32, "man_technologist_medium_skin_ton": 32, "man_technologist_tone1": 32, "man_technologist_tone2": 32, "man_technologist_tone3": 32, "man_technologist_tone4": 32, "man_technologist_tone5": 32, "man_tipping_hand": 32, "man_tipping_hand_dark_skin_ton": 32, "man_tipping_hand_light_skin_ton": 32, "man_tipping_hand_medium_dark_skin_ton": 32, "man_tipping_hand_medium_light_skin_ton": 32, "man_tipping_hand_medium_skin_ton": 32, "man_tipping_hand_tone1": 32, "man_tipping_hand_tone2": 32, "man_tipping_hand_tone3": 32, "man_tipping_hand_tone4": 32, "man_tipping_hand_tone5": 32, "man_tone1": 32, "man_tone1_beard": 32, "man_tone2": 32, "man_tone2_beard": 32, "man_tone3": 32, "man_tone3_beard": 32, "man_tone4": 32, "man_tone4_beard": 32, "man_tone5": 32, "man_tone5_beard": 32, "man_vampir": 32, "man_vampire_dark_skin_ton": 32, "man_vampire_light_skin_ton": 32, "man_vampire_medium_dark_skin_ton": 32, "man_vampire_medium_light_skin_ton": 32, "man_vampire_medium_skin_ton": 32, "man_vampire_tone1": 32, "man_vampire_tone2": 32, "man_vampire_tone3": 32, "man_vampire_tone4": 32, "man_vampire_tone5": 32, "man_walk": 32, "man_walking_dark_skin_ton": 32, "man_walking_light_skin_ton": 32, "man_walking_medium_dark_skin_ton": 32, "man_walking_medium_light_skin_ton": 32, "man_walking_medium_skin_ton": 32, "man_walking_tone1": 32, "man_walking_tone2": 32, "man_walking_tone3": 32, "man_walking_tone4": 32, "man_walking_tone5": 32, "man_wearing_turban": 32, "man_wearing_turban_dark_skin_ton": 32, "man_wearing_turban_light_skin_ton": 32, "man_wearing_turban_medium_dark_skin_ton": 32, "man_wearing_turban_medium_light_skin_ton": 32, "man_wearing_turban_medium_skin_ton": 32, "man_wearing_turban_tone1": 32, "man_wearing_turban_tone2": 32, "man_wearing_turban_tone3": 32, "man_wearing_turban_tone4": 32, "man_wearing_turban_tone5": 32, "man_white_hair": 32, "man_white_haired_dark_skin_ton": 32, "man_white_haired_light_skin_ton": 32, "man_white_haired_medium_dark_skin_ton": 32, "man_white_haired_medium_light_skin_ton": 32, "man_white_haired_medium_skin_ton": 32, "man_white_haired_tone1": 32, "man_white_haired_tone2": 32, "man_white_haired_tone3": 32, "man_white_haired_tone4": 32, "man_white_haired_tone5": 32, "man_with_chinese_cap": 32, "man_with_chinese_cap_tone1": 32, "man_with_chinese_cap_tone2": 32, "man_with_chinese_cap_tone3": 32, "man_with_chinese_cap_tone4": 32, "man_with_chinese_cap_tone5": 32, "man_with_gua_pi_mao": 32, "man_with_gua_pi_mao_tone1": 32, "man_with_gua_pi_mao_tone2": 32, "man_with_gua_pi_mao_tone3": 32, "man_with_gua_pi_mao_tone4": 32, "man_with_gua_pi_mao_tone5": 32, "man_with_probing_can": 32, "man_with_probing_cane_dark_skin_ton": 32, "man_with_probing_cane_light_skin_ton": 32, "man_with_probing_cane_medium_dark_skin_ton": 32, "man_with_probing_cane_medium_light_skin_ton": 32, "man_with_probing_cane_medium_skin_ton": 32, "man_with_probing_cane_tone1": 32, "man_with_probing_cane_tone2": 32, "man_with_probing_cane_tone3": 32, "man_with_probing_cane_tone4": 32, "man_with_probing_cane_tone5": 32, "man_with_turban": 32, "man_with_turban_tone1": 32, "man_with_turban_tone2": 32, "man_with_turban_tone3": 32, "man_with_turban_tone4": 32, "man_with_turban_tone5": 32, "man_with_veil": 32, "man_with_veil_dark_skin_ton": 32, "man_with_veil_light_skin_ton": 32, "man_with_veil_medium_dark_skin_ton": 32, "man_with_veil_medium_light_skin_ton": 32, "man_with_veil_medium_skin_ton": 32, "man_with_veil_tone1": 32, "man_with_veil_tone2": 32, "man_with_veil_tone3": 32, "man_with_veil_tone4": 32, "man_with_veil_tone5": 32, "man_zombi": 32, "mango": 32, "mans_sho": 32, "mantelpiece_clock": 32, "mantlepiece_clock": 32, "manual_wheelchair": 32, "maple_leaf": 32, "marshall_island": 32, "martial_arts_uniform": 32, "martiniqu": 32, "mask": [32, 161, 232, 366, 769, 820, 821, 832, 915, 944, 946], "massage_man": 32, "massage_tone1": 32, "massage_tone2": 32, "massage_tone3": 32, "massage_tone4": 32, "massage_tone5": 32, "massage_woman": 32, "mate": [32, 226, 825], "mauritania": 32, "mauritiu": 32, "mayott": 32, "mc": [32, 143, 258, 426], "md": [32, 124, 337, 774], "meat_on_bon": 32, "mechanic_dark_skin_ton": 32, "mechanic_light_skin_ton": 32, "mechanic_medium_dark_skin_ton": 32, "mechanic_medium_light_skin_ton": 32, "mechanic_medium_skin_ton": 32, "mechanic_tone1": 32, "mechanic_tone2": 32, "mechanic_tone3": 32, "mechanic_tone4": 32, "mechanic_tone5": 32, "mechanical_arm": 32, "mechanical_leg": 32, "medal": 32, "medal_militari": 32, "medal_sport": 32, "medical_symbol": 32, "mega": [32, 968], "melon": 32, "memo": 32, "men_holding_hands_dark_skin_ton": 32, "men_holding_hands_dark_skin_tone_light_skin_ton": 32, "men_holding_hands_dark_skin_tone_medium_dark_skin_ton": 32, "men_holding_hands_dark_skin_tone_medium_light_skin_ton": 32, "men_holding_hands_dark_skin_tone_medium_skin_ton": 32, "men_holding_hands_light_skin_ton": 32, "men_holding_hands_light_skin_tone_dark_skin_ton": 32, "men_holding_hands_light_skin_tone_medium_dark_skin_ton": 32, "men_holding_hands_light_skin_tone_medium_light_skin_ton": 32, "men_holding_hands_light_skin_tone_medium_skin_ton": 32, "men_holding_hands_medium_dark_skin_ton": 32, "men_holding_hands_medium_dark_skin_tone_dark_skin_ton": 32, "men_holding_hands_medium_dark_skin_tone_light_skin_ton": 32, "men_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 32, "men_holding_hands_medium_dark_skin_tone_medium_skin_ton": 32, "men_holding_hands_medium_light_skin_ton": 32, "men_holding_hands_medium_light_skin_tone_dark_skin_ton": 32, "men_holding_hands_medium_light_skin_tone_light_skin_ton": 32, "men_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 32, "men_holding_hands_medium_light_skin_tone_medium_skin_ton": 32, "men_holding_hands_medium_skin_ton": 32, "men_holding_hands_medium_skin_tone_dark_skin_ton": 32, "men_holding_hands_medium_skin_tone_light_skin_ton": 32, "men_holding_hands_medium_skin_tone_medium_dark_skin_ton": 32, "men_holding_hands_medium_skin_tone_medium_light_skin_ton": 32, "men_holding_hands_tone1": 32, "men_holding_hands_tone1_tone2": 32, "men_holding_hands_tone1_tone3": 32, "men_holding_hands_tone1_tone4": 32, "men_holding_hands_tone1_tone5": 32, "men_holding_hands_tone2": 32, "men_holding_hands_tone2_tone1": 32, "men_holding_hands_tone2_tone3": 32, "men_holding_hands_tone2_tone4": 32, "men_holding_hands_tone2_tone5": 32, "men_holding_hands_tone3": 32, "men_holding_hands_tone3_tone1": 32, "men_holding_hands_tone3_tone2": 32, "men_holding_hands_tone3_tone4": 32, "men_holding_hands_tone3_tone5": 32, "men_holding_hands_tone4": 32, "men_holding_hands_tone4_tone1": 32, "men_holding_hands_tone4_tone2": 32, "men_holding_hands_tone4_tone3": 32, "men_holding_hands_tone4_tone5": 32, "men_holding_hands_tone5": 32, "men_holding_hands_tone5_tone1": 32, "men_holding_hands_tone5_tone2": 32, "men_holding_hands_tone5_tone3": 32, "men_holding_hands_tone5_tone4": 32, "men_with_bunny_ears_parti": 32, "men_wrestl": 32, "mending_heart": 32, "menorah": 32, "men": [32, 364, 420, 543], "mermaid": 32, "mermaid_dark_skin_ton": 32, "mermaid_light_skin_ton": 32, "mermaid_medium_dark_skin_ton": 32, "mermaid_medium_light_skin_ton": 32, "mermaid_medium_skin_ton": 32, "mermaid_tone1": 32, "mermaid_tone2": 32, "mermaid_tone3": 32, "mermaid_tone4": 32, "mermaid_tone5": 32, "merman": 32, "merman_dark_skin_ton": 32, "merman_light_skin_ton": 32, "merman_medium_dark_skin_ton": 32, "merman_medium_light_skin_ton": 32, "merman_medium_skin_ton": 32, "merman_tone1": 32, "merman_tone2": 32, "merman_tone3": 32, "merman_tone4": 32, "merman_tone5": 32, "merperson": 32, "merperson_dark_skin_ton": 32, "merperson_light_skin_ton": 32, "merperson_medium_dark_skin_ton": 32, "merperson_medium_light_skin_ton": 32, "merperson_medium_skin_ton": 32, "merperson_tone1": 32, "merperson_tone2": 32, "merperson_tone3": 32, "merperson_tone4": 32, "merperson_tone5": 32, "metal_tone1": 32, "metal_tone2": 32, "metal_tone3": 32, "metal_tone4": 32, "metal_tone5": 32, "metro": 32, "mexico": 32, "mf": [32, 212, 1028], "mg": 32, "mh": 32, "microb": 32, "micronesia": 32, "microphone2": 32, "microphon": [32, 145, 147], "microscop": 32, "middle_finger_tone1": 32, "middle_finger_tone2": 32, "middle_finger_tone3": 32, "middle_finger_tone4": 32, "middle_finger_tone5": 32, "military_helmet": 32, "military_med": 32, "milk": 32, "milk_glass": 32, "milky_wai": 32, "minibu": 32, "minidisc": 32, "mirror": 32, "ml": 32, "mm": [32, 425], "mn": 32, "mo": [32, 534], "mobile_phon": 32, "mobile_phone_off": 32, "moldova": 32, "monaco": 32, "money_mouth": 32, "money_mouth_fac": 32, "money_with_w": 32, "moneybag": 32, "mongolia": 32, "monkei": 32, "monkey_fac": 32, "monorail": 32, "montenegro": 32, "montserrat": 32, "moon": 32, "moon_cak": 32, "morocco": 32, "mortar_board": 32, "mosqu": 32, "mosquito": 32, "mother_christma": 32, "mother_christmas_tone1": 32, "mother_christmas_tone2": 32, "mother_christmas_tone3": 32, "mother_christmas_tone4": 32, "mother_christmas_tone5": 32, "motor_boat": 32, "motor_scoot": 32, "motorbik": 32, "motorboat": 32, "motorcycl": 32, "motorized_wheelchair": 32, "motorwai": 32, "mount_fuji": 32, "mountain": 32, "mountain_bicyclist": 32, "mountain_bicyclist_tone1": 32, "mountain_bicyclist_tone2": 32, "mountain_bicyclist_tone3": 32, "mountain_bicyclist_tone4": 32, "mountain_bicyclist_tone5": 32, "mountain_biking_man": 32, "mountain_biking_woman": 32, "mountain_cablewai": 32, "mountain_railwai": 32, "mountain_snow": 32, "mouse2": 32, "mous": [32, 140, 145, 833, 1009, 1017], "mouse_three_button": 32, "mouse_trap": 32, "movie_camera": 32, "moyai": 32, "mozambiqu": 32, "mp": [32, 38], "mq": [32, 939, 940], "mr": [32, 113, 209, 220, 228, 232, 1033], "mrs_clau": 32, "mrs_claus_tone1": 32, "mrs_claus_tone2": 32, "mrs_claus_tone3": 32, "mrs_claus_tone4": 32, "mrs_claus_tone5": 32, "mt": [32, 326, 943, 944], "mu": [32, 232], "muscle_tone1": 32, "muscle_tone2": 32, "muscle_tone3": 32, "muscle_tone4": 32, "muscle_tone5": 32, "mushroom": 32, "musical_keyboard": 32, "musical_not": 32, "musical_scor": 32, "mute": 32, "mv": [32, 99, 113, 180, 182, 246, 255, 256, 276, 277, 317, 322, 726, 746, 803, 840, 853, 869, 1131], "mw": 32, "mx": 32, "mx_clau": 32, "mx_claus_dark_skin_ton": 32, "mx_claus_light_skin_ton": 32, "mx_claus_medium_dark_skin_ton": 32, "mx_claus_medium_light_skin_ton": 32, "mx_claus_medium_skin_ton": 32, "mx_claus_tone1": 32, "mx_claus_tone2": 32, "mx_claus_tone3": 32, "mx_claus_tone4": 32, "mx_claus_tone5": 32, "myanmar": 32, "mz": 32, "na": [32, 209, 212, 215, 228, 235, 253], "nail_car": 32, "nail_care_tone1": 32, "nail_care_tone2": 32, "nail_care_tone3": 32, "nail_care_tone4": 32, "nail_care_tone5": 32, "name_badg": 32, "namibia": 32, "national_park": 32, "nauru": 32, "nauseated_fac": 32, "nazar_amulet": 32, "nc": [32, 180, 182, 255, 276, 277, 346, 896], "ne": [32, 544, 562, 564, 911], "neckti": 32, "negative_squared_cross_mark": 32, "nepal": 32, "nerd_fac": 32, "nesting_dol": 32, "netherland": [32, 141, 996], "neutral_fac": 32, "new_caledonia": 32, "new_moon": 32, "new_moon_with_fac": 32, "new_zealand": 32, "newspaper2": 32, "newspap": [32, 43], "newspaper_rol": 32, "next_track": 32, "next_track_button": 32, "nf": [32, 212, 228, 235, 238, 253, 260, 270, 274, 890], "ng": [32, 141, 152, 256, 726, 869, 948, 950, 957, 958, 959], "ni": 32, "nicaragua": 32, "niger": 32, "nigeria": 32, "night_with_star": 32, "nine": [32, 160, 173, 183, 191, 209, 220, 317], "ninja_dark_skin_ton": 32, "ninja_light_skin_ton": 32, "ninja_medium_dark_skin_ton": 32, "ninja_medium_light_skin_ton": 32, "ninja_medium_skin_ton": 32, "ninja_tone1": 32, "ninja_tone2": 32, "ninja_tone3": 32, "ninja_tone4": 32, "ninja_tone5": 32, "niue": 32, "nl": [32, 346], "no_bel": 32, "no_bicycl": 32, "no_entri": 32, "no_entry_sign": 32, "no_good": 32, "no_good_man": 32, "no_good_tone1": 32, "no_good_tone2": 32, "no_good_tone3": 32, "no_good_tone4": 32, "no_good_tone5": 32, "no_good_woman": 32, "no_mobile_phon": 32, "no_mouth": 32, "no_pedestrian": 32, "no_smok": 32, "non": [32, 78, 113, 114, 118, 120, 122, 136, 142, 143, 150, 167, 180, 202, 220, 228, 232, 237, 256, 265, 267, 274, 380, 402, 420, 436, 439, 490, 533, 535, 542, 544, 547, 555, 559, 560, 599, 614, 649, 655, 696, 700, 701, 716, 726, 759, 765, 778, 789, 810, 813, 815, 855, 880, 881, 889, 907, 922, 926, 933, 941, 966, 970, 982, 983, 1006, 1019, 1039, 1056, 1092, 1093, 1099, 1113, 1128], "potable_wat": 32, "norfolk_island": 32, "north_korea": 32, "northern_mariana_island": 32, "norwai": 32, "nose": 32, "nose_tone1": 32, "nose_tone2": 32, "nose_tone3": 32, "nose_tone4": 32, "nose_tone5": 32, "notebook_with_decorative_cov": 32, "notepad_spir": 32, "np": [32, 163, 190, 258, 292, 426, 1074, 1093], "nr": [32, 188, 232, 732], "nu": 32, "nut_and_bolt": 32, "nz": 32, "o2": [32, 414], "ocean": 32, "octagonal_sign": 32, "octopu": 32, "oden": 32, "office_work": 32, "office_worker_dark_skin_ton": 32, "office_worker_light_skin_ton": 32, "office_worker_medium_dark_skin_ton": 32, "office_worker_medium_light_skin_ton": 32, "office_worker_medium_skin_ton": 32, "office_worker_tone1": 32, "office_worker_tone2": 32, "office_worker_tone3": 32, "office_worker_tone4": 32, "office_worker_tone5": 32, "oil": 32, "oil_drum": 32, "ok": [32, 53, 65, 139, 141, 142, 146, 155, 172, 188, 218, 258, 313, 354, 390, 408, 410, 440, 449, 499, 500, 501, 546, 554, 557, 562, 567, 577, 629, 636, 647, 655, 670, 689, 692, 701, 702, 787, 878, 905, 923, 950, 961, 979, 982, 995, 1112], "ok_hand_tone1": 32, "ok_hand_tone2": 32, "ok_hand_tone3": 32, "ok_hand_tone4": 32, "ok_hand_tone5": 32, "ok_man": 32, "ok_woman": 32, "ok_woman_tone1": 32, "ok_woman_tone2": 32, "ok_woman_tone3": 32, "ok_woman_tone4": 32, "ok_woman_tone5": 32, "old_kei": 32, "older_adult": 32, "older_adult_dark_skin_ton": 32, "older_adult_light_skin_ton": 32, "older_adult_medium_dark_skin_ton": 32, "older_adult_medium_light_skin_ton": 32, "older_adult_medium_skin_ton": 32, "older_adult_tone1": 32, "older_adult_tone2": 32, "older_adult_tone3": 32, "older_adult_tone4": 32, "older_adult_tone5": 32, "older_man": 32, "older_man_tone1": 32, "older_man_tone2": 32, "older_man_tone3": 32, "older_man_tone4": 32, "older_man_tone5": 32, "older_woman": 32, "older_woman_tone1": 32, "older_woman_tone2": 32, "older_woman_tone3": 32, "older_woman_tone4": 32, "older_woman_tone5": 32, "oliv": [32, 204], "om": [32, 680], "om_symbol": 32, "oman": 32, "oncoming_automobil": 32, "oncoming_bu": 32, "oncoming_police_car": 32, "oncoming_taxi": 32, "one_piece_swimsuit": 32, "onion": 32, "open_file_fold": 32, "open_hand": 32, "open_hands_tone1": 32, "open_hands_tone2": 32, "open_hands_tone3": 32, "open_hands_tone4": 32, "open_hands_tone5": 32, "open_mouth": 32, "open_umbrella": 32, "ophiuchu": 32, "orange_book": 32, "orange_circl": 32, "orange_heart": 32, "orange_squar": 32, "orangutan": 32, "orthodox_cross": 32, "otter": 32, "outbox_trai": 32, "owl": 32, "ox": 32, "oyster": 32, "pa": [32, 209, 215, 225, 228, 390, 574, 576, 577], "paella": 32, "page_facing_up": 32, "page_with_curl": 32, "pager": [32, 865], "paintbrush": 32, "pakistan": 32, "palau": 32, "palestinian_territori": 32, "palm_tre": 32, "palms_up_togeth": 32, "palms_up_together_dark_skin_ton": 32, "palms_up_together_light_skin_ton": 32, "palms_up_together_medium_dark_skin_ton": 32, "palms_up_together_medium_light_skin_ton": 32, "palms_up_together_medium_skin_ton": 32, "palms_up_together_tone1": 32, "palms_up_together_tone2": 32, "palms_up_together_tone3": 32, "palms_up_together_tone4": 32, "palms_up_together_tone5": 32, "panama": 32, "pancak": 32, "panda_fac": 32, "paperclip": 32, "papua_new_guinea": 32, "parachut": 32, "paraguai": 32, "parasol_on_ground": 32, "park": 32, "parrot": 32, "part_alternation_mark": 32, "partly_sunni": 32, "partying_fac": 32, "passenger_ship": 32, "passport_control": 32, "pause_button": 32, "paw_print": 32, "pe": 32, "peac": 32, "peace_symbol": 32, "peach": 32, "peacock": 32, "peanut": 32, "pear": 32, "pen": 32, "pen_ballpoint": 32, "pen_fountain": 32, "pencil2": 32, "pencil": 32, "pensiv": 32, "people_holding_hand": 32, "people_holding_hands_dark_skin_ton": 32, "people_holding_hands_dark_skin_tone_light_skin_ton": 32, "people_holding_hands_dark_skin_tone_medium_dark_skin_ton": 32, "people_holding_hands_dark_skin_tone_medium_light_skin_ton": 32, "people_holding_hands_dark_skin_tone_medium_skin_ton": 32, "people_holding_hands_light_skin_ton": 32, "people_holding_hands_light_skin_tone_dark_skin_ton": 32, "people_holding_hands_light_skin_tone_medium_dark_skin_ton": 32, "people_holding_hands_light_skin_tone_medium_light_skin_ton": 32, "people_holding_hands_light_skin_tone_medium_skin_ton": 32, "people_holding_hands_medium_dark_skin_ton": 32, "people_holding_hands_medium_dark_skin_tone_dark_skin_ton": 32, "people_holding_hands_medium_dark_skin_tone_light_skin_ton": 32, "people_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 32, "people_holding_hands_medium_dark_skin_tone_medium_skin_ton": 32, "people_holding_hands_medium_light_skin_ton": 32, "people_holding_hands_medium_light_skin_tone_dark_skin_ton": 32, "people_holding_hands_medium_light_skin_tone_light_skin_ton": 32, "people_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 32, "people_holding_hands_medium_light_skin_tone_medium_skin_ton": 32, "people_holding_hands_medium_skin_ton": 32, "people_holding_hands_medium_skin_tone_dark_skin_ton": 32, "people_holding_hands_medium_skin_tone_light_skin_ton": 32, "people_holding_hands_medium_skin_tone_medium_dark_skin_ton": 32, "people_holding_hands_medium_skin_tone_medium_light_skin_ton": 32, "people_holding_hands_tone1": 32, "people_holding_hands_tone1_tone2": 32, "people_holding_hands_tone1_tone3": 32, "people_holding_hands_tone1_tone4": 32, "people_holding_hands_tone1_tone5": 32, "people_holding_hands_tone2": 32, "people_holding_hands_tone2_tone1": 32, "people_holding_hands_tone2_tone3": 32, "people_holding_hands_tone2_tone4": 32, "people_holding_hands_tone2_tone5": 32, "people_holding_hands_tone3": 32, "people_holding_hands_tone3_tone1": 32, "people_holding_hands_tone3_tone2": 32, "people_holding_hands_tone3_tone4": 32, "people_holding_hands_tone3_tone5": 32, "people_holding_hands_tone4": 32, "people_holding_hands_tone4_tone1": 32, "people_holding_hands_tone4_tone2": 32, "people_holding_hands_tone4_tone3": 32, "people_holding_hands_tone4_tone5": 32, "people_holding_hands_tone5": 32, "people_holding_hands_tone5_tone1": 32, "people_holding_hands_tone5_tone2": 32, "people_holding_hands_tone5_tone3": 32, "people_holding_hands_tone5_tone4": 32, "people_hug": 32, "people_with_bunny_ears_parti": 32, "people_wrestl": 32, "performing_art": 32, "persever": 32, "person_bald": 32, "person_bik": 32, "person_biking_tone1": 32, "person_biking_tone2": 32, "person_biking_tone3": 32, "person_biking_tone4": 32, "person_biking_tone5": 32, "person_bouncing_bal": 32, "person_bouncing_ball_tone1": 32, "person_bouncing_ball_tone2": 32, "person_bouncing_ball_tone3": 32, "person_bouncing_ball_tone4": 32, "person_bouncing_ball_tone5": 32, "person_bow": 32, "person_bowing_tone1": 32, "person_bowing_tone2": 32, "person_bowing_tone3": 32, "person_bowing_tone4": 32, "person_bowing_tone5": 32, "person_climb": 32, "person_climbing_dark_skin_ton": 32, "person_climbing_light_skin_ton": 32, "person_climbing_medium_dark_skin_ton": 32, "person_climbing_medium_light_skin_ton": 32, "person_climbing_medium_skin_ton": 32, "person_climbing_tone1": 32, "person_climbing_tone2": 32, "person_climbing_tone3": 32, "person_climbing_tone4": 32, "person_climbing_tone5": 32, "person_curly_hair": 32, "person_dark_skin_tone_bald": 32, "person_dark_skin_tone_curly_hair": 32, "person_dark_skin_tone_red_hair": 32, "person_dark_skin_tone_white_hair": 32, "person_doing_cartwheel": 32, "person_doing_cartwheel_tone1": 32, "person_doing_cartwheel_tone2": 32, "person_doing_cartwheel_tone3": 32, "person_doing_cartwheel_tone4": 32, "person_doing_cartwheel_tone5": 32, "person_facepalm": 32, "person_facepalming_tone1": 32, "person_facepalming_tone2": 32, "person_facepalming_tone3": 32, "person_facepalming_tone4": 32, "person_facepalming_tone5": 32, "person_feeding_babi": 32, "person_feeding_baby_dark_skin_ton": 32, "person_feeding_baby_light_skin_ton": 32, "person_feeding_baby_medium_dark_skin_ton": 32, "person_feeding_baby_medium_light_skin_ton": 32, "person_feeding_baby_medium_skin_ton": 32, "person_feeding_baby_tone1": 32, "person_feeding_baby_tone2": 32, "person_feeding_baby_tone3": 32, "person_feeding_baby_tone4": 32, "person_feeding_baby_tone5": 32, "person_fenc": 32, "person_frown": 32, "person_frowning_tone1": 32, "person_frowning_tone2": 32, "person_frowning_tone3": 32, "person_frowning_tone4": 32, "person_frowning_tone5": 32, "person_gesturing_no": 32, "person_gesturing_no_tone1": 32, "person_gesturing_no_tone2": 32, "person_gesturing_no_tone3": 32, "person_gesturing_no_tone4": 32, "person_gesturing_no_tone5": 32, "person_gesturing_ok": 32, "person_gesturing_ok_tone1": 32, "person_gesturing_ok_tone2": 32, "person_gesturing_ok_tone3": 32, "person_gesturing_ok_tone4": 32, "person_gesturing_ok_tone5": 32, "person_getting_haircut": 32, "person_getting_haircut_tone1": 32, "person_getting_haircut_tone2": 32, "person_getting_haircut_tone3": 32, "person_getting_haircut_tone4": 32, "person_getting_haircut_tone5": 32, "person_getting_massag": 32, "person_getting_massage_tone1": 32, "person_getting_massage_tone2": 32, "person_getting_massage_tone3": 32, "person_getting_massage_tone4": 32, "person_getting_massage_tone5": 32, "person_golf": 32, "person_golfing_dark_skin_ton": 32, "person_golfing_light_skin_ton": 32, "person_golfing_medium_dark_skin_ton": 32, "person_golfing_medium_light_skin_ton": 32, "person_golfing_medium_skin_ton": 32, "person_golfing_tone1": 32, "person_golfing_tone2": 32, "person_golfing_tone3": 32, "person_golfing_tone4": 32, "person_golfing_tone5": 32, "person_in_bed_dark_skin_ton": 32, "person_in_bed_light_skin_ton": 32, "person_in_bed_medium_dark_skin_ton": 32, "person_in_bed_medium_light_skin_ton": 32, "person_in_bed_medium_skin_ton": 32, "person_in_bed_tone1": 32, "person_in_bed_tone2": 32, "person_in_bed_tone3": 32, "person_in_bed_tone4": 32, "person_in_bed_tone5": 32, "person_in_lotus_posit": 32, "person_in_lotus_position_dark_skin_ton": 32, "person_in_lotus_position_light_skin_ton": 32, "person_in_lotus_position_medium_dark_skin_ton": 32, "person_in_lotus_position_medium_light_skin_ton": 32, "person_in_lotus_position_medium_skin_ton": 32, "person_in_lotus_position_tone1": 32, "person_in_lotus_position_tone2": 32, "person_in_lotus_position_tone3": 32, "person_in_lotus_position_tone4": 32, "person_in_lotus_position_tone5": 32, "person_in_manual_wheelchair": 32, "person_in_manual_wheelchair_dark_skin_ton": 32, "person_in_manual_wheelchair_light_skin_ton": 32, "person_in_manual_wheelchair_medium_dark_skin_ton": 32, "person_in_manual_wheelchair_medium_light_skin_ton": 32, "person_in_manual_wheelchair_medium_skin_ton": 32, "person_in_manual_wheelchair_tone1": 32, "person_in_manual_wheelchair_tone2": 32, "person_in_manual_wheelchair_tone3": 32, "person_in_manual_wheelchair_tone4": 32, "person_in_manual_wheelchair_tone5": 32, "person_in_motorized_wheelchair": 32, "person_in_motorized_wheelchair_dark_skin_ton": 32, "person_in_motorized_wheelchair_light_skin_ton": 32, "person_in_motorized_wheelchair_medium_dark_skin_ton": 32, "person_in_motorized_wheelchair_medium_light_skin_ton": 32, "person_in_motorized_wheelchair_medium_skin_ton": 32, "person_in_motorized_wheelchair_tone1": 32, "person_in_motorized_wheelchair_tone2": 32, "person_in_motorized_wheelchair_tone3": 32, "person_in_motorized_wheelchair_tone4": 32, "person_in_motorized_wheelchair_tone5": 32, "person_in_steamy_room": 32, "person_in_steamy_room_dark_skin_ton": 32, "person_in_steamy_room_light_skin_ton": 32, "person_in_steamy_room_medium_dark_skin_ton": 32, "person_in_steamy_room_medium_light_skin_ton": 32, "person_in_steamy_room_medium_skin_ton": 32, "person_in_steamy_room_tone1": 32, "person_in_steamy_room_tone2": 32, "person_in_steamy_room_tone3": 32, "person_in_steamy_room_tone4": 32, "person_in_steamy_room_tone5": 32, "person_in_tuxedo": 32, "person_in_tuxedo_tone1": 32, "person_in_tuxedo_tone2": 32, "person_in_tuxedo_tone3": 32, "person_in_tuxedo_tone4": 32, "person_in_tuxedo_tone5": 32, "person_juggl": 32, "person_juggling_tone1": 32, "person_juggling_tone2": 32, "person_juggling_tone3": 32, "person_juggling_tone4": 32, "person_juggling_tone5": 32, "person_kneel": 32, "person_kneeling_dark_skin_ton": 32, "person_kneeling_light_skin_ton": 32, "person_kneeling_medium_dark_skin_ton": 32, "person_kneeling_medium_light_skin_ton": 32, "person_kneeling_medium_skin_ton": 32, "person_kneeling_tone1": 32, "person_kneeling_tone2": 32, "person_kneeling_tone3": 32, "person_kneeling_tone4": 32, "person_kneeling_tone5": 32, "person_lifting_weight": 32, "person_lifting_weights_tone1": 32, "person_lifting_weights_tone2": 32, "person_lifting_weights_tone3": 32, "person_lifting_weights_tone4": 32, "person_lifting_weights_tone5": 32, "person_light_skin_tone_bald": 32, "person_light_skin_tone_curly_hair": 32, "person_light_skin_tone_red_hair": 32, "person_light_skin_tone_white_hair": 32, "person_medium_dark_skin_tone_bald": 32, "person_medium_dark_skin_tone_curly_hair": 32, "person_medium_dark_skin_tone_red_hair": 32, "person_medium_dark_skin_tone_white_hair": 32, "person_medium_light_skin_tone_bald": 32, "person_medium_light_skin_tone_curly_hair": 32, "person_medium_light_skin_tone_red_hair": 32, "person_medium_light_skin_tone_white_hair": 32, "person_medium_skin_tone_bald": 32, "person_medium_skin_tone_curly_hair": 32, "person_medium_skin_tone_red_hair": 32, "person_medium_skin_tone_white_hair": 32, "person_mountain_bik": 32, "person_mountain_biking_tone1": 32, "person_mountain_biking_tone2": 32, "person_mountain_biking_tone3": 32, "person_mountain_biking_tone4": 32, "person_mountain_biking_tone5": 32, "person_playing_handbal": 32, "person_playing_handball_tone1": 32, "person_playing_handball_tone2": 32, "person_playing_handball_tone3": 32, "person_playing_handball_tone4": 32, "person_playing_handball_tone5": 32, "person_playing_water_polo": 32, "person_playing_water_polo_tone1": 32, "person_playing_water_polo_tone2": 32, "person_playing_water_polo_tone3": 32, "person_playing_water_polo_tone4": 32, "person_playing_water_polo_tone5": 32, "person_pout": 32, "person_pouting_tone1": 32, "person_pouting_tone2": 32, "person_pouting_tone3": 32, "person_pouting_tone4": 32, "person_pouting_tone5": 32, "person_raising_hand": 32, "person_raising_hand_tone1": 32, "person_raising_hand_tone2": 32, "person_raising_hand_tone3": 32, "person_raising_hand_tone4": 32, "person_raising_hand_tone5": 32, "person_red_hair": 32, "person_rowing_boat": 32, "person_rowing_boat_tone1": 32, "person_rowing_boat_tone2": 32, "person_rowing_boat_tone3": 32, "person_rowing_boat_tone4": 32, "person_rowing_boat_tone5": 32, "person_run": 32, "person_running_tone1": 32, "person_running_tone2": 32, "person_running_tone3": 32, "person_running_tone4": 32, "person_running_tone5": 32, "person_shrug": 32, "person_shrugging_tone1": 32, "person_shrugging_tone2": 32, "person_shrugging_tone3": 32, "person_shrugging_tone4": 32, "person_shrugging_tone5": 32, "person_stand": 32, "person_standing_dark_skin_ton": 32, "person_standing_light_skin_ton": 32, "person_standing_medium_dark_skin_ton": 32, "person_standing_medium_light_skin_ton": 32, "person_standing_medium_skin_ton": 32, "person_standing_tone1": 32, "person_standing_tone2": 32, "person_standing_tone3": 32, "person_standing_tone4": 32, "person_standing_tone5": 32, "person_surf": 32, "person_surfing_tone1": 32, "person_surfing_tone2": 32, "person_surfing_tone3": 32, "person_surfing_tone4": 32, "person_surfing_tone5": 32, "person_swim": 32, "person_swimming_tone1": 32, "person_swimming_tone2": 32, "person_swimming_tone3": 32, "person_swimming_tone4": 32, "person_swimming_tone5": 32, "person_tipping_hand": 32, "person_tipping_hand_tone1": 32, "person_tipping_hand_tone2": 32, "person_tipping_hand_tone3": 32, "person_tipping_hand_tone4": 32, "person_tipping_hand_tone5": 32, "person_tone1_bald": 32, "person_tone1_curly_hair": 32, "person_tone1_red_hair": 32, "person_tone1_white_hair": 32, "person_tone2_bald": 32, "person_tone2_curly_hair": 32, "person_tone2_red_hair": 32, "person_tone2_white_hair": 32, "person_tone3_bald": 32, "person_tone3_curly_hair": 32, "person_tone3_red_hair": 32, "person_tone3_white_hair": 32, "person_tone4_bald": 32, "person_tone4_curly_hair": 32, "person_tone4_red_hair": 32, "person_tone4_white_hair": 32, "person_tone5_bald": 32, "person_tone5_curly_hair": 32, "person_tone5_red_hair": 32, "person_tone5_white_hair": 32, "person_walk": 32, "person_walking_tone1": 32, "person_walking_tone2": 32, "person_walking_tone3": 32, "person_walking_tone4": 32, "person_walking_tone5": 32, "person_wearing_turban": 32, "person_wearing_turban_tone1": 32, "person_wearing_turban_tone2": 32, "person_wearing_turban_tone3": 32, "person_wearing_turban_tone4": 32, "person_wearing_turban_tone5": 32, "person_white_hair": 32, "person_with_bal": 32, "person_with_ball_tone1": 32, "person_with_ball_tone2": 32, "person_with_ball_tone3": 32, "person_with_ball_tone4": 32, "person_with_ball_tone5": 32, "person_with_blond_hair": 32, "person_with_blond_hair_tone1": 32, "person_with_blond_hair_tone2": 32, "person_with_blond_hair_tone3": 32, "person_with_blond_hair_tone4": 32, "person_with_blond_hair_tone5": 32, "person_with_pouting_fac": 32, "person_with_pouting_face_tone1": 32, "person_with_pouting_face_tone2": 32, "person_with_pouting_face_tone3": 32, "person_with_pouting_face_tone4": 32, "person_with_pouting_face_tone5": 32, "person_with_probing_can": 32, "person_with_probing_cane_dark_skin_ton": 32, "person_with_probing_cane_light_skin_ton": 32, "person_with_probing_cane_medium_dark_skin_ton": 32, "person_with_probing_cane_medium_light_skin_ton": 32, "person_with_probing_cane_medium_skin_ton": 32, "person_with_probing_cane_tone1": 32, "person_with_probing_cane_tone2": 32, "person_with_probing_cane_tone3": 32, "person_with_probing_cane_tone4": 32, "person_with_probing_cane_tone5": 32, "person_with_veil": 32, "person_with_veil_tone1": 32, "person_with_veil_tone2": 32, "person_with_veil_tone3": 32, "person_with_veil_tone4": 32, "person_with_veil_tone5": 32, "peru": 32, "petri_dish": 32, "pf": [32, 143], "pg": [32, 418], "ph": 32, "philippin": 32, "phone": 32, "pick": [32, 78, 133, 143, 150, 201, 428, 501, 929, 959, 964], "pickup_truck": 32, "pie": 32, "pig2": 32, "pig_nos": 32, "pill": 32, "pilot": 32, "pilot_dark_skin_ton": 32, "pilot_light_skin_ton": 32, "pilot_medium_dark_skin_ton": 32, "pilot_medium_light_skin_ton": 32, "pilot_medium_skin_ton": 32, "pilot_tone1": 32, "pilot_tone2": 32, "pilot_tone3": 32, "pilot_tone4": 32, "pilot_tone5": 32, "pinched_fing": 32, "pinched_fingers_dark_skin_ton": 32, "pinched_fingers_light_skin_ton": 32, "pinched_fingers_medium_dark_skin_ton": 32, "pinched_fingers_medium_light_skin_ton": 32, "pinched_fingers_medium_skin_ton": 32, "pinched_fingers_tone1": 32, "pinched_fingers_tone2": 32, "pinched_fingers_tone3": 32, "pinched_fingers_tone4": 32, "pinched_fingers_tone5": 32, "pinching_hand": 32, "pinching_hand_dark_skin_ton": 32, "pinching_hand_light_skin_ton": 32, "pinching_hand_medium_dark_skin_ton": 32, "pinching_hand_medium_light_skin_ton": 32, "pinching_hand_medium_skin_ton": 32, "pinching_hand_tone1": 32, "pinching_hand_tone2": 32, "pinching_hand_tone3": 32, "pinching_hand_tone4": 32, "pinching_hand_tone5": 32, "pineappl": [32, 264], "ping_pong": 32, "pirate_flag": 32, "pisc": 32, "pitcairn_island": 32, "pizza": 32, "pi\u00f1ata": 32, "pk": 32, "pl": 32, "placard": 32, "place_of_worship": 32, "plate_with_cutleri": 32, "play_or_pause_button": 32, "play_paus": 32, "pleading_fac": 32, "plunger": 32, "pm": [32, 38], "pn": 32, "point_down": 32, "point_down_tone1": 32, "point_down_tone2": 32, "point_down_tone3": 32, "point_down_tone4": 32, "point_down_tone5": 32, "point_left": 32, "point_left_tone1": 32, "point_left_tone2": 32, "point_left_tone3": 32, "point_left_tone4": 32, "point_left_tone5": 32, "point_right": 32, "point_right_tone1": 32, "point_right_tone2": 32, "point_right_tone3": 32, "point_right_tone4": 32, "point_right_tone5": 32, "point_up_2": 32, "point_up_2_tone1": 32, "point_up_2_tone2": 32, "point_up_2_tone3": 32, "point_up_2_tone4": 32, "point_up_2_tone5": 32, "point_up_tone1": 32, "point_up_tone2": 32, "point_up_tone3": 32, "point_up_tone4": 32, "point_up_tone5": 32, "poland": 32, "polar_bear": 32, "police_car": 32, "police_offic": 32, "police_officer_tone1": 32, "police_officer_tone2": 32, "police_officer_tone3": 32, "police_officer_tone4": 32, "police_officer_tone5": 32, "policeman": 32, "policewoman": 32, "poo": 32, "poodl": 32, "poop": 32, "popcorn": 32, "portug": 32, "post_offic": 32, "postal_horn": 32, "postbox": 32, "potato": 32, "potted_pl": 32, "pouch": 32, "poultry_leg": 32, "pound": [32, 36], "pound_symbol": 32, "pouting_cat": 32, "pouting_man": 32, "pouting_woman": 32, "pr": [32, 35, 228, 243], "prai": 32, "pray_tone1": 32, "pray_tone2": 32, "pray_tone3": 32, "pray_tone4": 32, "pray_tone5": 32, "prayer_bead": 32, "pregnant_woman": 32, "pregnant_woman_tone1": 32, "pregnant_woman_tone2": 32, "pregnant_woman_tone3": 32, "pregnant_woman_tone4": 32, "pregnant_woman_tone5": 32, "pretzel": 32, "previous_track": 32, "previous_track_button": 32, "princ": 32, "prince_tone1": 32, "prince_tone2": 32, "prince_tone3": 32, "prince_tone4": 32, "prince_tone5": 32, "princess": 32, "princess_tone1": 32, "princess_tone2": 32, "princess_tone3": 32, "princess_tone4": 32, "princess_tone5": 32, "printer": 32, "probing_can": 32, "projector": 32, "p": [32, 38, 63, 113, 120, 136, 140, 141, 145, 146, 152, 168, 180, 182, 183, 199, 212, 228, 232, 258, 260, 350, 384, 390, 393, 394, 397, 398, 402, 473, 498, 499, 501, 502, 544, 546, 549, 554, 555, 556, 557, 558, 560, 562, 563, 577, 585, 645, 648, 649, 652, 654, 657, 666, 667, 668, 670, 672, 673, 676, 677, 678, 684, 686, 687, 696, 700, 705, 716, 721, 724, 737, 773, 792, 800, 801, 810, 833, 835, 852, 855, 862, 872, 880, 889, 896, 907, 916, 931, 944, 959, 966, 968, 1028, 1107, 1131], "pt": [32, 704, 804, 931], "pud": 32, "puerto_rico": 32, "punch": 32, "punch_tone1": 32, "punch_tone2": 32, "punch_tone3": 32, "punch_tone4": 32, "punch_tone5": 32, "purple_circl": 32, "purple_heart": 32, "purple_squar": 32, "purs": 32, "pushpin": 32, "put_litter_in_its_plac": 32, "pw": 32, "qa": 32, "qatar": 32, "rabbit2": 32, "rabbit": 32, "raccoon": 32, "race_car": 32, "racehors": 32, "racing_car": 32, "racing_motorcycl": 32, "radio": 32, "radio_button": 32, "radioact": 32, "radioactive_sign": 32, "rage": 32, "railroad_track": 32, "railway_car": 32, "railway_track": 32, "rainbow": 32, "rainbow_flag": 32, "raised_back_of_hand": 32, "raised_back_of_hand_tone1": 32, "raised_back_of_hand_tone2": 32, "raised_back_of_hand_tone3": 32, "raised_back_of_hand_tone4": 32, "raised_back_of_hand_tone5": 32, "raised_hand": 32, "raised_hand_tone1": 32, "raised_hand_tone2": 32, "raised_hand_tone3": 32, "raised_hand_tone4": 32, "raised_hand_tone5": 32, "raised_hand_with_fingers_splai": 32, "raised_hand_with_fingers_splayed_tone1": 32, "raised_hand_with_fingers_splayed_tone2": 32, "raised_hand_with_fingers_splayed_tone3": 32, "raised_hand_with_fingers_splayed_tone4": 32, "raised_hand_with_fingers_splayed_tone5": 32, "raised_hand_with_part_between_middle_and_ring_fing": 32, "raised_hand_with_part_between_middle_and_ring_fingers_tone1": 32, "raised_hand_with_part_between_middle_and_ring_fingers_tone2": 32, "raised_hand_with_part_between_middle_and_ring_fingers_tone3": 32, "raised_hand_with_part_between_middle_and_ring_fingers_tone4": 32, "raised_hand_with_part_between_middle_and_ring_fingers_tone5": 32, "raised_hands_tone1": 32, "raised_hands_tone2": 32, "raised_hands_tone3": 32, "raised_hands_tone4": 32, "raised_hands_tone5": 32, "raising_hand": 32, "raising_hand_man": 32, "raising_hand_tone1": 32, "raising_hand_tone2": 32, "raising_hand_tone3": 32, "raising_hand_tone4": 32, "raising_hand_tone5": 32, "raising_hand_woman": 32, "ram": [32, 142, 143, 147, 265, 773, 809, 811, 895], "ramen": 32, "rat": 32, "razor": 32, "re": [32, 38, 63, 142, 147, 179, 188, 191, 192, 202, 205, 212, 213, 215, 220, 222, 228, 232, 238, 240, 241, 250, 253, 257, 273, 274, 280, 317, 322, 380, 426, 427, 436, 444, 469, 499, 546, 552, 670, 692, 742, 778, 787, 792, 834, 923, 944, 959, 963, 968, 973, 992, 1015, 1066, 1071], "receipt": 32, "record_button": 32, "recycl": 32, "red_car": 32, "red_circl": 32, "red_envelop": 32, "red_hair": 32, "red_squar": 32, "regional_indicator_a": 32, "regional_indicator_b": 32, "regional_indicator_c": 32, "regional_indicator_d": 32, "regional_indicator_": 32, "regional_indicator_f": 32, "regional_indicator_g": 32, "regional_indicator_h": 32, "regional_indicator_i": 32, "regional_indicator_j": 32, "regional_indicator_k": 32, "regional_indicator_l": 32, "regional_indicator_m": 32, "regional_indicator_n": 32, "regional_indicator_o": 32, "regional_indicator_p": 32, "regional_indicator_q": 32, "regional_indicator_r": 32, "regional_indicator_t": 32, "regional_indicator_u": 32, "regional_indicator_v": 32, "regional_indicator_w": 32, "regional_indicator_x": 32, "regional_indicator_z": 32, "regist": [32, 36, 38, 140, 150, 158, 183, 187, 215, 228, 274, 303, 366, 400, 451, 479, 500, 502, 509, 729, 736, 744, 751, 757, 769, 860, 877, 893, 897, 998, 1087], "relax": 32, "reliev": [32, 57], "reminder_ribbon": 32, "repeat": [32, 43, 100, 113, 130, 146, 201, 226, 256, 324, 414, 426, 562, 726, 773, 803, 833, 837, 841, 844, 847, 852, 853, 869, 882, 909, 1006], "repeat_on": 32, "rescue_worker_helmet": 32, "restroom": 32, "reunion": 32, "reversed_hand_with_middle_finger_extend": 32, "reversed_hand_with_middle_finger_extended_tone1": 32, "reversed_hand_with_middle_finger_extended_tone2": 32, "reversed_hand_with_middle_finger_extended_tone3": 32, "reversed_hand_with_middle_finger_extended_tone4": 32, "reversed_hand_with_middle_finger_extended_tone5": 32, "revolving_heart": 32, "rewind": [32, 309, 692], "rhino": 32, "rhinocero": 32, "ribbon": 32, "rice": 32, "rice_bal": 32, "rice_crack": 32, "rice_scen": 32, "right_anger_bubbl": 32, "right_facing_fist": 32, "right_facing_fist_tone1": 32, "right_facing_fist_tone2": 32, "right_facing_fist_tone3": 32, "right_facing_fist_tone4": 32, "right_facing_fist_tone5": 32, "right_fist": 32, "right_fist_tone1": 32, "right_fist_tone2": 32, "right_fist_tone3": 32, "right_fist_tone4": 32, "right_fist_tone5": 32, "ring": [32, 35, 38, 833], "ringed_planet": 32, "ro": 32, "robot": [32, 228], "robot_fac": 32, "rock": [32, 269, 424, 963, 965, 1101], "rocket": [32, 147], "rofl": 32, "roll_ey": 32, "roll_of_pap": 32, "rolled_up_newspap": 32, "roller_coast": 32, "roller_sk": 32, "rolling_on_the_floor_laugh": 32, "romania": 32, "rooster": 32, "rosett": 32, "rotating_light": 32, "round_pushpin": 32, "rowboat": 32, "rowboat_tone1": 32, "rowboat_tone2": 32, "rowboat_tone3": 32, "rowboat_tone4": 32, "rowboat_tone5": 32, "rowing_man": 32, "rowing_woman": 32, "ru": 32, "rugby_footbal": 32, "runner": [32, 44, 1112, 1143], "runner_tone1": 32, "runner_tone2": 32, "runner_tone3": 32, "runner_tone4": 32, "runner_tone5": 32, "running_man": 32, "running_shirt_with_sash": 32, "running_woman": 32, "russia": [32, 1084], "rw": [32, 61, 63, 141, 142, 151, 159, 228, 238, 433, 724, 729, 737, 804, 815, 818, 829, 832, 852, 855, 870, 877, 878, 879, 881, 890, 901, 904, 905, 913, 941, 947, 948, 949, 959, 961, 962, 998, 1026], "rwanda": 32, "safety_pin": 32, "safety_vest": 32, "sagittariu": 32, "sailboat": 32, "saint_martin": 32, "sake": 32, "salad": 32, "salt": [32, 829], "samoa": 32, "san_marino": 32, "sandal": 32, "sandwich": 32, "santa": 32, "santa_tone1": 32, "santa_tone2": 32, "santa_tone3": 32, "santa_tone4": 32, "santa_tone5": 32, "sao_tome_princip": 32, "sari": 32, "satellit": 32, "satellite_orbit": 32, "saudi": 32, "saudi_arabia": 32, "saudiarabia": 32, "sauropod": 32, "saxophon": 32, "sb": [32, 257], "sc": [32, 35], "scale": [32, 78, 172, 218, 232, 414, 877, 950, 963], "scarf": 32, "school": [32, 232, 485, 520, 1093, 1126], "school_satchel": 32, "scientist": [32, 172, 995, 1076, 1077, 1078, 1085], "scientist_dark_skin_ton": 32, "scientist_light_skin_ton": 32, "scientist_medium_dark_skin_ton": 32, "scientist_medium_light_skin_ton": 32, "scientist_medium_skin_ton": 32, "scientist_tone1": 32, "scientist_tone2": 32, "scientist_tone3": 32, "scientist_tone4": 32, "scientist_tone5": 32, "scissor": 32, "scooter": 32, "scorpion": 32, "scorpiu": 32, "scotland": 32, "scream": [32, 201, 833], "scream_cat": 32, "screwdriv": 32, "scroll": [32, 146, 485], "sd": [32, 212, 228, 232, 235, 238, 253, 260, 270, 274, 773], "se": [32, 549], "seal": 32, "seat": 32, "second_plac": 32, "second_place_med": 32, "secret": [32, 629, 650, 886, 970, 1082], "see_no_evil": 32, "seedl": 32, "selfi": 32, "selfie_tone1": 32, "selfie_tone2": 32, "selfie_tone3": 32, "selfie_tone4": 32, "selfie_tone5": 32, "seneg": 32, "serbia": 32, "service_dog": 32, "seven": [32, 36, 84, 160, 173, 183, 191, 220, 317, 1038, 1049], "sewing_needl": 32, "seychel": 32, "sg": 32, "sh": [32, 61, 147, 151, 240, 746, 800, 801, 818, 879, 901, 911, 1058], "shaking_hand": 32, "shaking_hands_tone1": 32, "shaking_hands_tone2": 32, "shaking_hands_tone3": 32, "shaking_hands_tone4": 32, "shaking_hands_tone5": 32, "shallow_pan_of_food": 32, "shamrock": 32, "shark": 32, "shaved_ic": 32, "sheep": 32, "shelled_peanut": 32, "shield": [32, 140], "shinto_shrin": 32, "ship": [32, 145], "shirt": [32, 43, 137], "shit": [32, 199], "shop": [32, 264], "shopping_bag": 32, "shopping_cart": 32, "shopping_trollei": 32, "shower": 32, "shrimp": 32, "shrug": 32, "shrug_tone1": 32, "shrug_tone2": 32, "shrug_tone3": 32, "shrug_tone4": 32, "shrug_tone5": 32, "shushing_fac": 32, "si": 32, "sick": [32, 448], "sierra_leon": 32, "sign_of_the_horn": 32, "sign_of_the_horns_tone1": 32, "sign_of_the_horns_tone2": 32, "sign_of_the_horns_tone3": 32, "sign_of_the_horns_tone4": 32, "sign_of_the_horns_tone5": 32, "signal_strength": 32, "singapor": 32, "singer": 32, "singer_dark_skin_ton": 32, "singer_light_skin_ton": 32, "singer_medium_dark_skin_ton": 32, "singer_medium_light_skin_ton": 32, "singer_medium_skin_ton": 32, "singer_tone1": 32, "singer_tone2": 32, "singer_tone3": 32, "singer_tone4": 32, "singer_tone5": 32, "sint_maarten": 32, "six": [32, 160, 173, 183, 191, 209, 317, 1006], "six_pointed_star": 32, "sj": 32, "sk": 32, "skateboard": 32, "skeleton": [32, 143, 155, 427, 802], "ski": 32, "skier": 32, "skull": 32, "skull_and_crossbon": 32, "skull_crossbon": 32, "skunk": 32, "sl": [32, 309, 931], "sled": 32, "sleeping_accommod": 32, "sleeping_b": 32, "sleepi": 32, "sleuth_or_spi": 32, "sleuth_or_spy_tone1": 32, "sleuth_or_spy_tone2": 32, "sleuth_or_spy_tone3": 32, "sleuth_or_spy_tone4": 32, "sleuth_or_spy_tone5": 32, "slight_frown": 32, "slight_smil": 32, "slightly_frowning_fac": 32, "slightly_smiling_fac": 32, "slot_machin": 32, "sloth": 32, "slovakia": 32, "slovenia": [32, 207], "sm": 32, "small_airplan": 32, "small_blue_diamond": 32, "small_orange_diamond": 32, "small_red_triangl": 32, "small_red_triangle_down": 32, "smile": [32, 35], "smile_cat": 32, "smilei": [32, 63], "smiley_cat": 32, "smiling_face_with_3_heart": 32, "smiling_face_with_tear": 32, "smiling_imp": 32, "smirk": 32, "smirk_cat": 32, "smoke": 32, "sn": 32, "snail": 32, "snake": 32, "sneez": 32, "sneezing_fac": 32, "snow_capped_mountain": 32, "snowboard": 32, "snowboarder_dark_skin_ton": 32, "snowboarder_light_skin_ton": 32, "snowboarder_medium_dark_skin_ton": 32, "snowboarder_medium_light_skin_ton": 32, "snowboarder_medium_skin_ton": 32, "snowboarder_tone1": 32, "snowboarder_tone2": 32, "snowboarder_tone3": 32, "snowboarder_tone4": 32, "snowboarder_tone5": 32, "snowflak": 32, "snowman2": 32, "snowman": 32, "snowman_with_snow": 32, "sob": 32, "soccer": 32, "sock": 32, "softbal": 32, "solomon_island": 32, "somalia": 32, "soon": [32, 141, 142, 147, 549, 636, 773, 879, 931, 945, 1087], "sound": [32, 59, 62, 139, 143, 146, 147, 216, 706, 815, 870, 878, 879, 1106], "south_africa": 32, "south_georgia_south_sandwich_island": 32, "south_sudan": 32, "space_invad": 32, "spade": [32, 38], "spaghetti": [32, 115, 414, 425], "spain": 32, "sparkl": 32, "sparkler": 32, "sparkling_heart": 32, "speak_no_evil": 32, "speaker": 32, "speaking_head": 32, "speaking_head_in_silhouett": 32, "speech_balloon": 32, "speech_left": 32, "speedboat": 32, "spider": 32, "spider_web": 32, "spiral_calendar": 32, "spiral_calendar_pad": 32, "spiral_note_pad": 32, "spiral_notepad": 32, "spong": 32, "spoon": 32, "sports_med": 32, "spy": 32, "spy_tone1": 32, "spy_tone2": 32, "spy_tone3": 32, "spy_tone4": 32, "spy_tone5": 32, "squeeze_bottl": 32, "squid": 32, "sr": [32, 212, 1028], "sri_lanka": 32, "st": [32, 206, 426, 941, 943, 944], "st_barthelemi": 32, "st_helena": 32, "st_kitts_nevi": 32, "st_lucia": 32, "st_pierre_miquelon": 32, "st_vincent_grenadin": 32, "stadium": 32, "star2": 32, "star": [32, 38, 586, 879, 961], "star_and_cresc": 32, "star_of_david": 32, "star_struck": 32, "station": 32, "statue_of_liberti": 32, "steam_locomot": 32, "stethoscop": 32, "stew": 32, "stop_button": 32, "stop_sign": 32, "stopwatch": 32, "straight_rul": 32, "strawberri": 32, "stuck_out_tongu": 32, "stuck_out_tongue_closed_ey": 32, "stuck_out_tongue_winking_ey": 32, "student": [32, 101, 106, 113, 147, 240, 302, 303, 308, 309, 317, 971, 1107], "student_dark_skin_ton": 32, "student_light_skin_ton": 32, "student_medium_dark_skin_ton": 32, "student_medium_light_skin_ton": 32, "student_medium_skin_ton": 32, "student_tone1": 32, "student_tone2": 32, "student_tone3": 32, "student_tone4": 32, "student_tone5": 32, "studio_microphon": 32, "stuffed_flatbread": 32, "stuffed_pita": 32, "sudan": 32, "sun_behind_large_cloud": 32, "sun_behind_rain_cloud": 32, "sun_behind_small_cloud": 32, "sun_with_fac": 32, "sunflow": 32, "sunni": [32, 109, 259, 262, 490, 501, 507, 509, 542, 726, 926, 970], "sunris": 32, "sunrise_over_mountain": 32, "superhero": 32, "superhero_dark_skin_ton": 32, "superhero_light_skin_ton": 32, "superhero_medium_dark_skin_ton": 32, "superhero_medium_light_skin_ton": 32, "superhero_medium_skin_ton": 32, "superhero_tone1": 32, "superhero_tone2": 32, "superhero_tone3": 32, "superhero_tone4": 32, "superhero_tone5": 32, "supervillain": 32, "supervillain_dark_skin_ton": 32, "supervillain_light_skin_ton": 32, "supervillain_medium_dark_skin_ton": 32, "supervillain_medium_light_skin_ton": 32, "supervillain_medium_skin_ton": 32, "supervillain_tone1": 32, "supervillain_tone2": 32, "supervillain_tone3": 32, "supervillain_tone4": 32, "supervillain_tone5": 32, "surfer": 32, "surfer_tone1": 32, "surfer_tone2": 32, "surfer_tone3": 32, "surfer_tone4": 32, "surfer_tone5": 32, "surfing_man": 32, "surfing_woman": 32, "surinam": 32, "sushi": 32, "suspension_railwai": 32, "sv": [32, 468, 469], "swan": 32, "swaziland": 32, "sweat": 32, "sweat_drop": 32, "sweat_smil": 32, "sweden": 32, "sweet_potato": 32, "swimmer": 32, "swimmer_tone1": 32, "swimmer_tone2": 32, "swimmer_tone3": 32, "swimmer_tone4": 32, "swimmer_tone5": 32, "swimming_man": 32, "swimming_woman": 32, "switzerland": 32, "sx": 32, "symbol": [32, 33, 38, 113, 151, 180, 201, 209, 215, 218, 225, 228, 246, 255, 256, 276, 277, 355, 370, 379, 386, 392, 396, 399, 403, 406, 407, 412, 416, 421, 422, 644, 682, 688, 723, 724, 725, 726, 729, 748, 751, 773, 803, 818, 833, 853, 855, 869, 878, 978], "synagogu": 32, "syria": 32, "syring": 32, "sz": [32, 142, 145], "t_rex": 32, "ta": 32, "table_tenni": 32, "taco": 32, "tada": 32, "taiwan": 32, "tajikistan": 32, "takeout_box": 32, "tamal": 32, "tanabata_tre": 32, "tangerin": 32, "tanzania": 32, "tauru": 32, "taxi": 32, "tc": 32, "td": [32, 204], "tea": 32, "teacher": [32, 106, 145, 430, 432, 800, 801, 959], "teacher_dark_skin_ton": 32, "teacher_light_skin_ton": 32, "teacher_medium_dark_skin_ton": 32, "teacher_medium_light_skin_ton": 32, "teacher_medium_skin_ton": 32, "teacher_tone1": 32, "teacher_tone2": 32, "teacher_tone3": 32, "teacher_tone4": 32, "teacher_tone5": 32, "teapot": 32, "technologist": 32, "technologist_dark_skin_ton": 32, "technologist_light_skin_ton": 32, "technologist_medium_dark_skin_ton": 32, "technologist_medium_light_skin_ton": 32, "technologist_medium_skin_ton": 32, "technologist_tone1": 32, "technologist_tone2": 32, "technologist_tone3": 32, "technologist_tone4": 32, "technologist_tone5": 32, "teddy_bear": 32, "telephon": 32, "telephone_receiv": 32, "telescop": 32, "ten": [32, 142, 163, 183, 222, 228, 864], "tenni": 32, "tent": 32, "test_tub": 32, "tf": [32, 235, 799, 968], "tg": 32, "th": [32, 176, 204, 348, 390, 499, 577, 1008, 1017], "thailand": 32, "thermomet": [32, 69, 82, 84, 85, 167, 176, 228, 248, 321, 323, 324, 326, 441, 448, 451, 453, 462, 463, 476, 490, 530, 531, 539, 542, 617, 620, 726, 879], "thermometer_fac": 32, "thinking_fac": 32, "third_plac": 32, "third_place_med": 32, "thong_sand": 32, "thought_balloon": 32, "thread": [32, 59, 62, 65, 83, 89, 91, 145, 157, 158, 167, 172, 176, 187, 209, 215, 216, 218, 225, 228, 243, 244, 245, 247, 256, 265, 267, 291, 298, 327, 330, 331, 332, 420, 449, 466, 480, 543, 684, 692, 701, 703, 710, 712, 715, 716, 725, 726, 755, 765, 771, 785, 793, 869, 891, 910, 918, 920, 921, 923, 925, 929, 930, 932, 943, 944, 945, 981, 982, 1071, 1114, 1124, 1125, 1126, 1128, 1140, 1141, 1142], "three_button_mous": 32, "thumbdown": 32, "thumbdown_tone1": 32, "thumbdown_tone2": 32, "thumbdown_tone3": 32, "thumbdown_tone4": 32, "thumbdown_tone5": 32, "thumbsdown_tone1": 32, "thumbsdown_tone2": 32, "thumbsdown_tone3": 32, "thumbsdown_tone4": 32, "thumbsdown_tone5": 32, "thumbsup_tone1": 32, "thumbsup_tone2": 32, "thumbsup_tone3": 32, "thumbsup_tone4": 32, "thumbsup_tone5": 32, "thumbup": 32, "thumbup_tone1": 32, "thumbup_tone2": 32, "thumbup_tone3": 32, "thumbup_tone4": 32, "thumbup_tone5": 32, "thunder_cloud_and_rain": 32, "thunder_cloud_rain": 32, "ticket": 32, "tiger2": 32, "tiger": 32, "timer": [32, 59, 62, 65, 113, 164, 265, 405, 717, 726, 750, 775, 782, 788, 791, 792, 794, 806, 809, 869, 878, 894, 898, 910, 929, 935, 937, 945, 1139, 1142], "timer_clock": 32, "timor_lest": 32, "tipping_hand_man": 32, "tipping_hand_woman": 32, "tired_fac": 32, "tj": 32, "tk": 32, "tl": [32, 145], "tm": 32, "tn": [32, 180], "togo": 32, "toilet": [32, 218, 520, 763, 981], "tokelau": 32, "tokyo_tow": 32, "tomato": 32, "tone1": 32, "tone2": 32, "tone3": 32, "tone4": 32, "tone5": 32, "tonga": 32, "tongu": [32, 1125], "toolbox": [32, 161], "tooth": 32, "toothbrush": 32, "tophat": 32, "tornado": 32, "tr": [32, 204], "track_next": 32, "track_previ": 32, "trackbal": 32, "tractor": 32, "traffic_light": 32, "train2": 32, "tram": 32, "transgender_flag": 32, "transgender_symbol": 32, "triangular_flag_on_post": 32, "triangular_rul": 32, "trident": 32, "trinidad_tobago": 32, "tristan_da_cunha": 32, "triumph": 32, "trolleybu": 32, "trophi": 32, "tropical_drink": 32, "tropical_fish": 32, "truck": 32, "trumpet": 32, "tt": 32, "tulip": 32, "tumbler_glass": 32, "tunisia": 32, "turkei": 32, "turkmenistan": 32, "turks_caicos_island": 32, "turtl": 32, "tuvalu": 32, "tuxedo_tone1": 32, "tuxedo_tone2": 32, "tuxedo_tone3": 32, "tuxedo_tone4": 32, "tuxedo_tone5": 32, "tw": 32, "twisted_rightwards_arrow": 32, "two_heart": 32, "two_men_holding_hand": 32, "two_women_holding_hand": 32, "tz": 32, "u5272": 32, "u5408": 32, "u55b6": 32, "u6307": 32, "u6708": 32, "u6709": 32, "u6e80": 32, "u7121": 32, "u7533": 32, "u7981": 32, "u7a7a": 32, "ua": [32, 207, 216, 291], "ug": 32, "uganda": 32, "ukrain": 32, "umbrella2": 32, "umbrella": 32, "umbrella_on_ground": 32, "unamus": 32, "underag": 32, "unicorn": 32, "unicorn_fac": 32, "united_arab_emir": 32, "united_n": 32, "united_st": 32, "unlock": [32, 712, 714, 716, 765, 771, 918, 1137], "upside_down": 32, "upside_down_fac": 32, "urn": 32, "uruguai": 32, "us_virgin_island": 32, "uz": 32, "uzbekistan": 32, "v_tone1": 32, "v_tone2": 32, "v_tone3": 32, "v_tone4": 32, "v_tone5": 32, "va": [32, 259, 262], "vampir": 32, "vampire_dark_skin_ton": 32, "vampire_light_skin_ton": 32, "vampire_medium_dark_skin_ton": 32, "vampire_medium_light_skin_ton": 32, "vampire_medium_skin_ton": 32, "vampire_tone1": 32, "vampire_tone2": 32, "vampire_tone3": 32, "vampire_tone4": 32, "vampire_tone5": 32, "vanuatu": 32, "vatican_c": 32, "vc": [32, 122, 146], "ve": [32, 140, 142, 815, 1106], "venezuela": 32, "vertical_traffic_light": 32, "vg": 32, "vh": 32, "vi": 32, "vibration_mod": 32, "video_camera": 32, "video_gam": 32, "vietnam": 32, "violin": 32, "virgo": 32, "vn": 32, "volcano": 32, "volleybal": 32, "vu": 32, "vulcan": 32, "vulcan_salut": 32, "vulcan_tone1": 32, "vulcan_tone2": 32, "vulcan_tone3": 32, "vulcan_tone4": 32, "vulcan_tone5": 32, "waffl": 32, "wale": 32, "walk": [32, 139, 159, 172, 268, 269, 290, 324, 335, 642, 659, 817, 879, 983], "walking_man": 32, "walking_tone1": 32, "walking_tone2": 32, "walking_tone3": 32, "walking_tone4": 32, "walking_tone5": 32, "walking_woman": 32, "wallis_futuna": 32, "waning_crescent_moon": 32, "waning_gibbous_moon": 32, "wastebasket": 32, "water_buffalo": 32, "water_polo": 32, "water_polo_tone1": 32, "water_polo_tone2": 32, "water_polo_tone3": 32, "water_polo_tone4": 32, "water_polo_tone5": 32, "watermelon": [32, 264], "wave": [32, 34, 38, 256, 273], "wave_tone1": 32, "wave_tone2": 32, "wave_tone3": 32, "wave_tone4": 32, "wave_tone5": 32, "waving_black_flag": 32, "waving_white_flag": 32, "wavy_dash": 32, "waxing_crescent_moon": 32, "waxing_gibbous_moon": 32, "wc": [32, 200, 201, 218, 238, 355, 370, 379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 426, 644, 682, 723, 725, 726, 813, 816, 866, 880, 1055], "weari": 32, "wed": [32, 199], "weight_lift": 32, "weight_lifter_tone1": 32, "weight_lifter_tone2": 32, "weight_lifter_tone3": 32, "weight_lifter_tone4": 32, "weight_lifter_tone5": 32, "weight_lifting_man": 32, "weight_lifting_woman": 32, "western_sahara": 32, "wf": 32, "whale2": 32, "whale": 32, "wheel_of_dharma": 32, "wheelchair": 32, "whiski": 32, "white_check_mark": 32, "white_circl": 32, "white_flag": 32, "white_flow": 32, "white_frowning_fac": 32, "white_hair": 32, "white_heart": 32, "white_large_squar": 32, "white_medium_small_squar": 32, "white_medium_squar": 32, "white_small_squar": 32, "white_square_button": 32, "white_sun_behind_cloud": 32, "white_sun_behind_cloud_with_rain": 32, "white_sun_cloud": 32, "white_sun_rain_cloud": 32, "white_sun_small_cloud": 32, "white_sun_with_small_cloud": 32, "wilted_flow": 32, "wilted_ros": 32, "wind_blowing_fac": 32, "wind_chim": 32, "wind_fac": 32, "wine_glass": 32, "wolf": 32, "woman": 32, "woman_and_man_holding_hands_dark_skin_ton": 32, "woman_and_man_holding_hands_dark_skin_tone_light_skin_ton": 32, "woman_and_man_holding_hands_dark_skin_tone_medium_dark_skin_ton": 32, "woman_and_man_holding_hands_dark_skin_tone_medium_light_skin_ton": 32, "woman_and_man_holding_hands_dark_skin_tone_medium_skin_ton": 32, "woman_and_man_holding_hands_light_skin_ton": 32, "woman_and_man_holding_hands_light_skin_tone_dark_skin_ton": 32, "woman_and_man_holding_hands_light_skin_tone_medium_dark_skin_ton": 32, "woman_and_man_holding_hands_light_skin_tone_medium_light_skin_ton": 32, "woman_and_man_holding_hands_light_skin_tone_medium_skin_ton": 32, "woman_and_man_holding_hands_medium_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_dark_skin_tone_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_dark_skin_tone_light_skin_ton": 32, "woman_and_man_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 32, "woman_and_man_holding_hands_medium_dark_skin_tone_medium_skin_ton": 32, "woman_and_man_holding_hands_medium_light_skin_ton": 32, "woman_and_man_holding_hands_medium_light_skin_tone_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_light_skin_tone_light_skin_ton": 32, "woman_and_man_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_light_skin_tone_medium_skin_ton": 32, "woman_and_man_holding_hands_medium_skin_ton": 32, "woman_and_man_holding_hands_medium_skin_tone_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_skin_tone_light_skin_ton": 32, "woman_and_man_holding_hands_medium_skin_tone_medium_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_skin_tone_medium_light_skin_ton": 32, "woman_and_man_holding_hands_tone1": 32, "woman_and_man_holding_hands_tone1_tone2": 32, "woman_and_man_holding_hands_tone1_tone3": 32, "woman_and_man_holding_hands_tone1_tone4": 32, "woman_and_man_holding_hands_tone1_tone5": 32, "woman_and_man_holding_hands_tone2": 32, "woman_and_man_holding_hands_tone2_tone1": 32, "woman_and_man_holding_hands_tone2_tone3": 32, "woman_and_man_holding_hands_tone2_tone4": 32, "woman_and_man_holding_hands_tone2_tone5": 32, "woman_and_man_holding_hands_tone3": 32, "woman_and_man_holding_hands_tone3_tone1": 32, "woman_and_man_holding_hands_tone3_tone2": 32, "woman_and_man_holding_hands_tone3_tone4": 32, "woman_and_man_holding_hands_tone3_tone5": 32, "woman_and_man_holding_hands_tone4": 32, "woman_and_man_holding_hands_tone4_tone1": 32, "woman_and_man_holding_hands_tone4_tone2": 32, "woman_and_man_holding_hands_tone4_tone3": 32, "woman_and_man_holding_hands_tone4_tone5": 32, "woman_and_man_holding_hands_tone5": 32, "woman_and_man_holding_hands_tone5_tone1": 32, "woman_and_man_holding_hands_tone5_tone2": 32, "woman_and_man_holding_hands_tone5_tone3": 32, "woman_and_man_holding_hands_tone5_tone4": 32, "woman_artist": 32, "woman_artist_dark_skin_ton": 32, "woman_artist_light_skin_ton": 32, "woman_artist_medium_dark_skin_ton": 32, "woman_artist_medium_light_skin_ton": 32, "woman_artist_medium_skin_ton": 32, "woman_artist_tone1": 32, "woman_artist_tone2": 32, "woman_artist_tone3": 32, "woman_artist_tone4": 32, "woman_artist_tone5": 32, "woman_astronaut": 32, "woman_astronaut_dark_skin_ton": 32, "woman_astronaut_light_skin_ton": 32, "woman_astronaut_medium_dark_skin_ton": 32, "woman_astronaut_medium_light_skin_ton": 32, "woman_astronaut_medium_skin_ton": 32, "woman_astronaut_tone1": 32, "woman_astronaut_tone2": 32, "woman_astronaut_tone3": 32, "woman_astronaut_tone4": 32, "woman_astronaut_tone5": 32, "woman_bald": 32, "woman_bald_dark_skin_ton": 32, "woman_bald_light_skin_ton": 32, "woman_bald_medium_dark_skin_ton": 32, "woman_bald_medium_light_skin_ton": 32, "woman_bald_medium_skin_ton": 32, "woman_bald_tone1": 32, "woman_bald_tone2": 32, "woman_bald_tone3": 32, "woman_bald_tone4": 32, "woman_bald_tone5": 32, "woman_beard": 32, "woman_bik": 32, "woman_biking_dark_skin_ton": 32, "woman_biking_light_skin_ton": 32, "woman_biking_medium_dark_skin_ton": 32, "woman_biking_medium_light_skin_ton": 32, "woman_biking_medium_skin_ton": 32, "woman_biking_tone1": 32, "woman_biking_tone2": 32, "woman_biking_tone3": 32, "woman_biking_tone4": 32, "woman_biking_tone5": 32, "woman_bouncing_bal": 32, "woman_bouncing_ball_dark_skin_ton": 32, "woman_bouncing_ball_light_skin_ton": 32, "woman_bouncing_ball_medium_dark_skin_ton": 32, "woman_bouncing_ball_medium_light_skin_ton": 32, "woman_bouncing_ball_medium_skin_ton": 32, "woman_bouncing_ball_tone1": 32, "woman_bouncing_ball_tone2": 32, "woman_bouncing_ball_tone3": 32, "woman_bouncing_ball_tone4": 32, "woman_bouncing_ball_tone5": 32, "woman_bow": 32, "woman_bowing_dark_skin_ton": 32, "woman_bowing_light_skin_ton": 32, "woman_bowing_medium_dark_skin_ton": 32, "woman_bowing_medium_light_skin_ton": 32, "woman_bowing_medium_skin_ton": 32, "woman_bowing_tone1": 32, "woman_bowing_tone2": 32, "woman_bowing_tone3": 32, "woman_bowing_tone4": 32, "woman_bowing_tone5": 32, "woman_cartwheel": 32, "woman_cartwheeling_dark_skin_ton": 32, "woman_cartwheeling_light_skin_ton": 32, "woman_cartwheeling_medium_dark_skin_ton": 32, "woman_cartwheeling_medium_light_skin_ton": 32, "woman_cartwheeling_medium_skin_ton": 32, "woman_cartwheeling_tone1": 32, "woman_cartwheeling_tone2": 32, "woman_cartwheeling_tone3": 32, "woman_cartwheeling_tone4": 32, "woman_cartwheeling_tone5": 32, "woman_climb": 32, "woman_climbing_dark_skin_ton": 32, "woman_climbing_light_skin_ton": 32, "woman_climbing_medium_dark_skin_ton": 32, "woman_climbing_medium_light_skin_ton": 32, "woman_climbing_medium_skin_ton": 32, "woman_climbing_tone1": 32, "woman_climbing_tone2": 32, "woman_climbing_tone3": 32, "woman_climbing_tone4": 32, "woman_climbing_tone5": 32, "woman_construction_work": 32, "woman_construction_worker_dark_skin_ton": 32, "woman_construction_worker_light_skin_ton": 32, "woman_construction_worker_medium_dark_skin_ton": 32, "woman_construction_worker_medium_light_skin_ton": 32, "woman_construction_worker_medium_skin_ton": 32, "woman_construction_worker_tone1": 32, "woman_construction_worker_tone2": 32, "woman_construction_worker_tone3": 32, "woman_construction_worker_tone4": 32, "woman_construction_worker_tone5": 32, "woman_cook": 32, "woman_cook_dark_skin_ton": 32, "woman_cook_light_skin_ton": 32, "woman_cook_medium_dark_skin_ton": 32, "woman_cook_medium_light_skin_ton": 32, "woman_cook_medium_skin_ton": 32, "woman_cook_tone1": 32, "woman_cook_tone2": 32, "woman_cook_tone3": 32, "woman_cook_tone4": 32, "woman_cook_tone5": 32, "woman_curly_hair": 32, "woman_curly_haired_dark_skin_ton": 32, "woman_curly_haired_light_skin_ton": 32, "woman_curly_haired_medium_dark_skin_ton": 32, "woman_curly_haired_medium_light_skin_ton": 32, "woman_curly_haired_medium_skin_ton": 32, "woman_curly_haired_tone1": 32, "woman_curly_haired_tone2": 32, "woman_curly_haired_tone3": 32, "woman_curly_haired_tone4": 32, "woman_curly_haired_tone5": 32, "woman_dark_skin_tone_beard": 32, "woman_detect": 32, "woman_detective_dark_skin_ton": 32, "woman_detective_light_skin_ton": 32, "woman_detective_medium_dark_skin_ton": 32, "woman_detective_medium_light_skin_ton": 32, "woman_detective_medium_skin_ton": 32, "woman_detective_tone1": 32, "woman_detective_tone2": 32, "woman_detective_tone3": 32, "woman_detective_tone4": 32, "woman_detective_tone5": 32, "woman_elf": 32, "woman_elf_dark_skin_ton": 32, "woman_elf_light_skin_ton": 32, "woman_elf_medium_dark_skin_ton": 32, "woman_elf_medium_light_skin_ton": 32, "woman_elf_medium_skin_ton": 32, "woman_elf_tone1": 32, "woman_elf_tone2": 32, "woman_elf_tone3": 32, "woman_elf_tone4": 32, "woman_elf_tone5": 32, "woman_facepalm": 32, "woman_facepalming_dark_skin_ton": 32, "woman_facepalming_light_skin_ton": 32, "woman_facepalming_medium_dark_skin_ton": 32, "woman_facepalming_medium_light_skin_ton": 32, "woman_facepalming_medium_skin_ton": 32, "woman_facepalming_tone1": 32, "woman_facepalming_tone2": 32, "woman_facepalming_tone3": 32, "woman_facepalming_tone4": 32, "woman_facepalming_tone5": 32, "woman_factory_work": 32, "woman_factory_worker_dark_skin_ton": 32, "woman_factory_worker_light_skin_ton": 32, "woman_factory_worker_medium_dark_skin_ton": 32, "woman_factory_worker_medium_light_skin_ton": 32, "woman_factory_worker_medium_skin_ton": 32, "woman_factory_worker_tone1": 32, "woman_factory_worker_tone2": 32, "woman_factory_worker_tone3": 32, "woman_factory_worker_tone4": 32, "woman_factory_worker_tone5": 32, "woman_fairi": 32, "woman_fairy_dark_skin_ton": 32, "woman_fairy_light_skin_ton": 32, "woman_fairy_medium_dark_skin_ton": 32, "woman_fairy_medium_light_skin_ton": 32, "woman_fairy_medium_skin_ton": 32, "woman_fairy_tone1": 32, "woman_fairy_tone2": 32, "woman_fairy_tone3": 32, "woman_fairy_tone4": 32, "woman_fairy_tone5": 32, "woman_farm": 32, "woman_farmer_dark_skin_ton": 32, "woman_farmer_light_skin_ton": 32, "woman_farmer_medium_dark_skin_ton": 32, "woman_farmer_medium_light_skin_ton": 32, "woman_farmer_medium_skin_ton": 32, "woman_farmer_tone1": 32, "woman_farmer_tone2": 32, "woman_farmer_tone3": 32, "woman_farmer_tone4": 32, "woman_farmer_tone5": 32, "woman_feeding_babi": 32, "woman_feeding_baby_dark_skin_ton": 32, "woman_feeding_baby_light_skin_ton": 32, "woman_feeding_baby_medium_dark_skin_ton": 32, "woman_feeding_baby_medium_light_skin_ton": 32, "woman_feeding_baby_medium_skin_ton": 32, "woman_feeding_baby_tone1": 32, "woman_feeding_baby_tone2": 32, "woman_feeding_baby_tone3": 32, "woman_feeding_baby_tone4": 32, "woman_feeding_baby_tone5": 32, "woman_firefight": 32, "woman_firefighter_dark_skin_ton": 32, "woman_firefighter_light_skin_ton": 32, "woman_firefighter_medium_dark_skin_ton": 32, "woman_firefighter_medium_light_skin_ton": 32, "woman_firefighter_medium_skin_ton": 32, "woman_firefighter_tone1": 32, "woman_firefighter_tone2": 32, "woman_firefighter_tone3": 32, "woman_firefighter_tone4": 32, "woman_firefighter_tone5": 32, "woman_frown": 32, "woman_frowning_dark_skin_ton": 32, "woman_frowning_light_skin_ton": 32, "woman_frowning_medium_dark_skin_ton": 32, "woman_frowning_medium_light_skin_ton": 32, "woman_frowning_medium_skin_ton": 32, "woman_frowning_tone1": 32, "woman_frowning_tone2": 32, "woman_frowning_tone3": 32, "woman_frowning_tone4": 32, "woman_frowning_tone5": 32, "woman_geni": 32, "woman_gesturing_no": 32, "woman_gesturing_no_dark_skin_ton": 32, "woman_gesturing_no_light_skin_ton": 32, "woman_gesturing_no_medium_dark_skin_ton": 32, "woman_gesturing_no_medium_light_skin_ton": 32, "woman_gesturing_no_medium_skin_ton": 32, "woman_gesturing_no_tone1": 32, "woman_gesturing_no_tone2": 32, "woman_gesturing_no_tone3": 32, "woman_gesturing_no_tone4": 32, "woman_gesturing_no_tone5": 32, "woman_gesturing_ok": 32, "woman_gesturing_ok_dark_skin_ton": 32, "woman_gesturing_ok_light_skin_ton": 32, "woman_gesturing_ok_medium_dark_skin_ton": 32, "woman_gesturing_ok_medium_light_skin_ton": 32, "woman_gesturing_ok_medium_skin_ton": 32, "woman_gesturing_ok_tone1": 32, "woman_gesturing_ok_tone2": 32, "woman_gesturing_ok_tone3": 32, "woman_gesturing_ok_tone4": 32, "woman_gesturing_ok_tone5": 32, "woman_getting_face_massag": 32, "woman_getting_face_massage_dark_skin_ton": 32, "woman_getting_face_massage_light_skin_ton": 32, "woman_getting_face_massage_medium_dark_skin_ton": 32, "woman_getting_face_massage_medium_light_skin_ton": 32, "woman_getting_face_massage_medium_skin_ton": 32, "woman_getting_face_massage_tone1": 32, "woman_getting_face_massage_tone2": 32, "woman_getting_face_massage_tone3": 32, "woman_getting_face_massage_tone4": 32, "woman_getting_face_massage_tone5": 32, "woman_getting_haircut": 32, "woman_getting_haircut_dark_skin_ton": 32, "woman_getting_haircut_light_skin_ton": 32, "woman_getting_haircut_medium_dark_skin_ton": 32, "woman_getting_haircut_medium_light_skin_ton": 32, "woman_getting_haircut_medium_skin_ton": 32, "woman_getting_haircut_tone1": 32, "woman_getting_haircut_tone2": 32, "woman_getting_haircut_tone3": 32, "woman_getting_haircut_tone4": 32, "woman_getting_haircut_tone5": 32, "woman_golf": 32, "woman_golfing_dark_skin_ton": 32, "woman_golfing_light_skin_ton": 32, "woman_golfing_medium_dark_skin_ton": 32, "woman_golfing_medium_light_skin_ton": 32, "woman_golfing_medium_skin_ton": 32, "woman_golfing_tone1": 32, "woman_golfing_tone2": 32, "woman_golfing_tone3": 32, "woman_golfing_tone4": 32, "woman_golfing_tone5": 32, "woman_guard": 32, "woman_guard_dark_skin_ton": 32, "woman_guard_light_skin_ton": 32, "woman_guard_medium_dark_skin_ton": 32, "woman_guard_medium_light_skin_ton": 32, "woman_guard_medium_skin_ton": 32, "woman_guard_tone1": 32, "woman_guard_tone2": 32, "woman_guard_tone3": 32, "woman_guard_tone4": 32, "woman_guard_tone5": 32, "woman_health_work": 32, "woman_health_worker_dark_skin_ton": 32, "woman_health_worker_light_skin_ton": 32, "woman_health_worker_medium_dark_skin_ton": 32, "woman_health_worker_medium_light_skin_ton": 32, "woman_health_worker_medium_skin_ton": 32, "woman_health_worker_tone1": 32, "woman_health_worker_tone2": 32, "woman_health_worker_tone3": 32, "woman_health_worker_tone4": 32, "woman_health_worker_tone5": 32, "woman_in_lotus_posit": 32, "woman_in_lotus_position_dark_skin_ton": 32, "woman_in_lotus_position_light_skin_ton": 32, "woman_in_lotus_position_medium_dark_skin_ton": 32, "woman_in_lotus_position_medium_light_skin_ton": 32, "woman_in_lotus_position_medium_skin_ton": 32, "woman_in_lotus_position_tone1": 32, "woman_in_lotus_position_tone2": 32, "woman_in_lotus_position_tone3": 32, "woman_in_lotus_position_tone4": 32, "woman_in_lotus_position_tone5": 32, "woman_in_manual_wheelchair": 32, "woman_in_manual_wheelchair_dark_skin_ton": 32, "woman_in_manual_wheelchair_light_skin_ton": 32, "woman_in_manual_wheelchair_medium_dark_skin_ton": 32, "woman_in_manual_wheelchair_medium_light_skin_ton": 32, "woman_in_manual_wheelchair_medium_skin_ton": 32, "woman_in_manual_wheelchair_tone1": 32, "woman_in_manual_wheelchair_tone2": 32, "woman_in_manual_wheelchair_tone3": 32, "woman_in_manual_wheelchair_tone4": 32, "woman_in_manual_wheelchair_tone5": 32, "woman_in_motorized_wheelchair": 32, "woman_in_motorized_wheelchair_dark_skin_ton": 32, "woman_in_motorized_wheelchair_light_skin_ton": 32, "woman_in_motorized_wheelchair_medium_dark_skin_ton": 32, "woman_in_motorized_wheelchair_medium_light_skin_ton": 32, "woman_in_motorized_wheelchair_medium_skin_ton": 32, "woman_in_motorized_wheelchair_tone1": 32, "woman_in_motorized_wheelchair_tone2": 32, "woman_in_motorized_wheelchair_tone3": 32, "woman_in_motorized_wheelchair_tone4": 32, "woman_in_motorized_wheelchair_tone5": 32, "woman_in_steamy_room": 32, "woman_in_steamy_room_dark_skin_ton": 32, "woman_in_steamy_room_light_skin_ton": 32, "woman_in_steamy_room_medium_dark_skin_ton": 32, "woman_in_steamy_room_medium_light_skin_ton": 32, "woman_in_steamy_room_medium_skin_ton": 32, "woman_in_steamy_room_tone1": 32, "woman_in_steamy_room_tone2": 32, "woman_in_steamy_room_tone3": 32, "woman_in_steamy_room_tone4": 32, "woman_in_steamy_room_tone5": 32, "woman_in_tuxedo": 32, "woman_in_tuxedo_dark_skin_ton": 32, "woman_in_tuxedo_light_skin_ton": 32, "woman_in_tuxedo_medium_dark_skin_ton": 32, "woman_in_tuxedo_medium_light_skin_ton": 32, "woman_in_tuxedo_medium_skin_ton": 32, "woman_in_tuxedo_tone1": 32, "woman_in_tuxedo_tone2": 32, "woman_in_tuxedo_tone3": 32, "woman_in_tuxedo_tone4": 32, "woman_in_tuxedo_tone5": 32, "woman_judg": 32, "woman_judge_dark_skin_ton": 32, "woman_judge_light_skin_ton": 32, "woman_judge_medium_dark_skin_ton": 32, "woman_judge_medium_light_skin_ton": 32, "woman_judge_medium_skin_ton": 32, "woman_judge_tone1": 32, "woman_judge_tone2": 32, "woman_judge_tone3": 32, "woman_judge_tone4": 32, "woman_judge_tone5": 32, "woman_juggl": 32, "woman_juggling_dark_skin_ton": 32, "woman_juggling_light_skin_ton": 32, "woman_juggling_medium_dark_skin_ton": 32, "woman_juggling_medium_light_skin_ton": 32, "woman_juggling_medium_skin_ton": 32, "woman_juggling_tone1": 32, "woman_juggling_tone2": 32, "woman_juggling_tone3": 32, "woman_juggling_tone4": 32, "woman_juggling_tone5": 32, "woman_kneel": 32, "woman_kneeling_dark_skin_ton": 32, "woman_kneeling_light_skin_ton": 32, "woman_kneeling_medium_dark_skin_ton": 32, "woman_kneeling_medium_light_skin_ton": 32, "woman_kneeling_medium_skin_ton": 32, "woman_kneeling_tone1": 32, "woman_kneeling_tone2": 32, "woman_kneeling_tone3": 32, "woman_kneeling_tone4": 32, "woman_kneeling_tone5": 32, "woman_lifting_weight": 32, "woman_lifting_weights_dark_skin_ton": 32, "woman_lifting_weights_light_skin_ton": 32, "woman_lifting_weights_medium_dark_skin_ton": 32, "woman_lifting_weights_medium_light_skin_ton": 32, "woman_lifting_weights_medium_skin_ton": 32, "woman_lifting_weights_tone1": 32, "woman_lifting_weights_tone2": 32, "woman_lifting_weights_tone3": 32, "woman_lifting_weights_tone4": 32, "woman_lifting_weights_tone5": 32, "woman_light_skin_tone_beard": 32, "woman_mag": 32, "woman_mage_dark_skin_ton": 32, "woman_mage_light_skin_ton": 32, "woman_mage_medium_dark_skin_ton": 32, "woman_mage_medium_light_skin_ton": 32, "woman_mage_medium_skin_ton": 32, "woman_mage_tone1": 32, "woman_mage_tone2": 32, "woman_mage_tone3": 32, "woman_mage_tone4": 32, "woman_mage_tone5": 32, "woman_mechan": 32, "woman_mechanic_dark_skin_ton": 32, "woman_mechanic_light_skin_ton": 32, "woman_mechanic_medium_dark_skin_ton": 32, "woman_mechanic_medium_light_skin_ton": 32, "woman_mechanic_medium_skin_ton": 32, "woman_mechanic_tone1": 32, "woman_mechanic_tone2": 32, "woman_mechanic_tone3": 32, "woman_mechanic_tone4": 32, "woman_mechanic_tone5": 32, "woman_medium_dark_skin_tone_beard": 32, "woman_medium_light_skin_tone_beard": 32, "woman_medium_skin_tone_beard": 32, "woman_mountain_bik": 32, "woman_mountain_biking_dark_skin_ton": 32, "woman_mountain_biking_light_skin_ton": 32, "woman_mountain_biking_medium_dark_skin_ton": 32, "woman_mountain_biking_medium_light_skin_ton": 32, "woman_mountain_biking_medium_skin_ton": 32, "woman_mountain_biking_tone1": 32, "woman_mountain_biking_tone2": 32, "woman_mountain_biking_tone3": 32, "woman_mountain_biking_tone4": 32, "woman_mountain_biking_tone5": 32, "woman_office_work": 32, "woman_office_worker_dark_skin_ton": 32, "woman_office_worker_light_skin_ton": 32, "woman_office_worker_medium_dark_skin_ton": 32, "woman_office_worker_medium_light_skin_ton": 32, "woman_office_worker_medium_skin_ton": 32, "woman_office_worker_tone1": 32, "woman_office_worker_tone2": 32, "woman_office_worker_tone3": 32, "woman_office_worker_tone4": 32, "woman_office_worker_tone5": 32, "woman_pilot": 32, "woman_pilot_dark_skin_ton": 32, "woman_pilot_light_skin_ton": 32, "woman_pilot_medium_dark_skin_ton": 32, "woman_pilot_medium_light_skin_ton": 32, "woman_pilot_medium_skin_ton": 32, "woman_pilot_tone1": 32, "woman_pilot_tone2": 32, "woman_pilot_tone3": 32, "woman_pilot_tone4": 32, "woman_pilot_tone5": 32, "woman_playing_handbal": 32, "woman_playing_handball_dark_skin_ton": 32, "woman_playing_handball_light_skin_ton": 32, "woman_playing_handball_medium_dark_skin_ton": 32, "woman_playing_handball_medium_light_skin_ton": 32, "woman_playing_handball_medium_skin_ton": 32, "woman_playing_handball_tone1": 32, "woman_playing_handball_tone2": 32, "woman_playing_handball_tone3": 32, "woman_playing_handball_tone4": 32, "woman_playing_handball_tone5": 32, "woman_playing_water_polo": 32, "woman_playing_water_polo_dark_skin_ton": 32, "woman_playing_water_polo_light_skin_ton": 32, "woman_playing_water_polo_medium_dark_skin_ton": 32, "woman_playing_water_polo_medium_light_skin_ton": 32, "woman_playing_water_polo_medium_skin_ton": 32, "woman_playing_water_polo_tone1": 32, "woman_playing_water_polo_tone2": 32, "woman_playing_water_polo_tone3": 32, "woman_playing_water_polo_tone4": 32, "woman_playing_water_polo_tone5": 32, "woman_police_offic": 32, "woman_police_officer_dark_skin_ton": 32, "woman_police_officer_light_skin_ton": 32, "woman_police_officer_medium_dark_skin_ton": 32, "woman_police_officer_medium_light_skin_ton": 32, "woman_police_officer_medium_skin_ton": 32, "woman_police_officer_tone1": 32, "woman_police_officer_tone2": 32, "woman_police_officer_tone3": 32, "woman_police_officer_tone4": 32, "woman_police_officer_tone5": 32, "woman_pout": 32, "woman_pouting_dark_skin_ton": 32, "woman_pouting_light_skin_ton": 32, "woman_pouting_medium_dark_skin_ton": 32, "woman_pouting_medium_light_skin_ton": 32, "woman_pouting_medium_skin_ton": 32, "woman_pouting_tone1": 32, "woman_pouting_tone2": 32, "woman_pouting_tone3": 32, "woman_pouting_tone4": 32, "woman_pouting_tone5": 32, "woman_raising_hand": 32, "woman_raising_hand_dark_skin_ton": 32, "woman_raising_hand_light_skin_ton": 32, "woman_raising_hand_medium_dark_skin_ton": 32, "woman_raising_hand_medium_light_skin_ton": 32, "woman_raising_hand_medium_skin_ton": 32, "woman_raising_hand_tone1": 32, "woman_raising_hand_tone2": 32, "woman_raising_hand_tone3": 32, "woman_raising_hand_tone4": 32, "woman_raising_hand_tone5": 32, "woman_red_hair": 32, "woman_red_haired_dark_skin_ton": 32, "woman_red_haired_light_skin_ton": 32, "woman_red_haired_medium_dark_skin_ton": 32, "woman_red_haired_medium_light_skin_ton": 32, "woman_red_haired_medium_skin_ton": 32, "woman_red_haired_tone1": 32, "woman_red_haired_tone2": 32, "woman_red_haired_tone3": 32, "woman_red_haired_tone4": 32, "woman_red_haired_tone5": 32, "woman_rowing_boat": 32, "woman_rowing_boat_dark_skin_ton": 32, "woman_rowing_boat_light_skin_ton": 32, "woman_rowing_boat_medium_dark_skin_ton": 32, "woman_rowing_boat_medium_light_skin_ton": 32, "woman_rowing_boat_medium_skin_ton": 32, "woman_rowing_boat_tone1": 32, "woman_rowing_boat_tone2": 32, "woman_rowing_boat_tone3": 32, "woman_rowing_boat_tone4": 32, "woman_rowing_boat_tone5": 32, "woman_run": 32, "woman_running_dark_skin_ton": 32, "woman_running_light_skin_ton": 32, "woman_running_medium_dark_skin_ton": 32, "woman_running_medium_light_skin_ton": 32, "woman_running_medium_skin_ton": 32, "woman_running_tone1": 32, "woman_running_tone2": 32, "woman_running_tone3": 32, "woman_running_tone4": 32, "woman_running_tone5": 32, "woman_scientist": 32, "woman_scientist_dark_skin_ton": 32, "woman_scientist_light_skin_ton": 32, "woman_scientist_medium_dark_skin_ton": 32, "woman_scientist_medium_light_skin_ton": 32, "woman_scientist_medium_skin_ton": 32, "woman_scientist_tone1": 32, "woman_scientist_tone2": 32, "woman_scientist_tone3": 32, "woman_scientist_tone4": 32, "woman_scientist_tone5": 32, "woman_shrug": 32, "woman_shrugging_dark_skin_ton": 32, "woman_shrugging_light_skin_ton": 32, "woman_shrugging_medium_dark_skin_ton": 32, "woman_shrugging_medium_light_skin_ton": 32, "woman_shrugging_medium_skin_ton": 32, "woman_shrugging_tone1": 32, "woman_shrugging_tone2": 32, "woman_shrugging_tone3": 32, "woman_shrugging_tone4": 32, "woman_shrugging_tone5": 32, "woman_sing": 32, "woman_singer_dark_skin_ton": 32, "woman_singer_light_skin_ton": 32, "woman_singer_medium_dark_skin_ton": 32, "woman_singer_medium_light_skin_ton": 32, "woman_singer_medium_skin_ton": 32, "woman_singer_tone1": 32, "woman_singer_tone2": 32, "woman_singer_tone3": 32, "woman_singer_tone4": 32, "woman_singer_tone5": 32, "woman_stand": 32, "woman_standing_dark_skin_ton": 32, "woman_standing_light_skin_ton": 32, "woman_standing_medium_dark_skin_ton": 32, "woman_standing_medium_light_skin_ton": 32, "woman_standing_medium_skin_ton": 32, "woman_standing_tone1": 32, "woman_standing_tone2": 32, "woman_standing_tone3": 32, "woman_standing_tone4": 32, "woman_standing_tone5": 32, "woman_stud": 32, "woman_student_dark_skin_ton": 32, "woman_student_light_skin_ton": 32, "woman_student_medium_dark_skin_ton": 32, "woman_student_medium_light_skin_ton": 32, "woman_student_medium_skin_ton": 32, "woman_student_tone1": 32, "woman_student_tone2": 32, "woman_student_tone3": 32, "woman_student_tone4": 32, "woman_student_tone5": 32, "woman_superhero": 32, "woman_superhero_dark_skin_ton": 32, "woman_superhero_light_skin_ton": 32, "woman_superhero_medium_dark_skin_ton": 32, "woman_superhero_medium_light_skin_ton": 32, "woman_superhero_medium_skin_ton": 32, "woman_superhero_tone1": 32, "woman_superhero_tone2": 32, "woman_superhero_tone3": 32, "woman_superhero_tone4": 32, "woman_superhero_tone5": 32, "woman_supervillain": 32, "woman_supervillain_dark_skin_ton": 32, "woman_supervillain_light_skin_ton": 32, "woman_supervillain_medium_dark_skin_ton": 32, "woman_supervillain_medium_light_skin_ton": 32, "woman_supervillain_medium_skin_ton": 32, "woman_supervillain_tone1": 32, "woman_supervillain_tone2": 32, "woman_supervillain_tone3": 32, "woman_supervillain_tone4": 32, "woman_supervillain_tone5": 32, "woman_surf": 32, "woman_surfing_dark_skin_ton": 32, "woman_surfing_light_skin_ton": 32, "woman_surfing_medium_dark_skin_ton": 32, "woman_surfing_medium_light_skin_ton": 32, "woman_surfing_medium_skin_ton": 32, "woman_surfing_tone1": 32, "woman_surfing_tone2": 32, "woman_surfing_tone3": 32, "woman_surfing_tone4": 32, "woman_surfing_tone5": 32, "woman_swim": 32, "woman_swimming_dark_skin_ton": 32, "woman_swimming_light_skin_ton": 32, "woman_swimming_medium_dark_skin_ton": 32, "woman_swimming_medium_light_skin_ton": 32, "woman_swimming_medium_skin_ton": 32, "woman_swimming_tone1": 32, "woman_swimming_tone2": 32, "woman_swimming_tone3": 32, "woman_swimming_tone4": 32, "woman_swimming_tone5": 32, "woman_teach": 32, "woman_teacher_dark_skin_ton": 32, "woman_teacher_light_skin_ton": 32, "woman_teacher_medium_dark_skin_ton": 32, "woman_teacher_medium_light_skin_ton": 32, "woman_teacher_medium_skin_ton": 32, "woman_teacher_tone1": 32, "woman_teacher_tone2": 32, "woman_teacher_tone3": 32, "woman_teacher_tone4": 32, "woman_teacher_tone5": 32, "woman_technologist": 32, "woman_technologist_dark_skin_ton": 32, "woman_technologist_light_skin_ton": 32, "woman_technologist_medium_dark_skin_ton": 32, "woman_technologist_medium_light_skin_ton": 32, "woman_technologist_medium_skin_ton": 32, "woman_technologist_tone1": 32, "woman_technologist_tone2": 32, "woman_technologist_tone3": 32, "woman_technologist_tone4": 32, "woman_technologist_tone5": 32, "woman_tipping_hand": 32, "woman_tipping_hand_dark_skin_ton": 32, "woman_tipping_hand_light_skin_ton": 32, "woman_tipping_hand_medium_dark_skin_ton": 32, "woman_tipping_hand_medium_light_skin_ton": 32, "woman_tipping_hand_medium_skin_ton": 32, "woman_tipping_hand_tone1": 32, "woman_tipping_hand_tone2": 32, "woman_tipping_hand_tone3": 32, "woman_tipping_hand_tone4": 32, "woman_tipping_hand_tone5": 32, "woman_tone1": 32, "woman_tone1_beard": 32, "woman_tone2": 32, "woman_tone2_beard": 32, "woman_tone3": 32, "woman_tone3_beard": 32, "woman_tone4": 32, "woman_tone4_beard": 32, "woman_tone5": 32, "woman_tone5_beard": 32, "woman_vampir": 32, "woman_vampire_dark_skin_ton": 32, "woman_vampire_light_skin_ton": 32, "woman_vampire_medium_dark_skin_ton": 32, "woman_vampire_medium_light_skin_ton": 32, "woman_vampire_medium_skin_ton": 32, "woman_vampire_tone1": 32, "woman_vampire_tone2": 32, "woman_vampire_tone3": 32, "woman_vampire_tone4": 32, "woman_vampire_tone5": 32, "woman_walk": 32, "woman_walking_dark_skin_ton": 32, "woman_walking_light_skin_ton": 32, "woman_walking_medium_dark_skin_ton": 32, "woman_walking_medium_light_skin_ton": 32, "woman_walking_medium_skin_ton": 32, "woman_walking_tone1": 32, "woman_walking_tone2": 32, "woman_walking_tone3": 32, "woman_walking_tone4": 32, "woman_walking_tone5": 32, "woman_wearing_turban": 32, "woman_wearing_turban_dark_skin_ton": 32, "woman_wearing_turban_light_skin_ton": 32, "woman_wearing_turban_medium_dark_skin_ton": 32, "woman_wearing_turban_medium_light_skin_ton": 32, "woman_wearing_turban_medium_skin_ton": 32, "woman_wearing_turban_tone1": 32, "woman_wearing_turban_tone2": 32, "woman_wearing_turban_tone3": 32, "woman_wearing_turban_tone4": 32, "woman_wearing_turban_tone5": 32, "woman_white_hair": 32, "woman_white_haired_dark_skin_ton": 32, "woman_white_haired_light_skin_ton": 32, "woman_white_haired_medium_dark_skin_ton": 32, "woman_white_haired_medium_light_skin_ton": 32, "woman_white_haired_medium_skin_ton": 32, "woman_white_haired_tone1": 32, "woman_white_haired_tone2": 32, "woman_white_haired_tone3": 32, "woman_white_haired_tone4": 32, "woman_white_haired_tone5": 32, "woman_with_headscarf": 32, "woman_with_headscarf_dark_skin_ton": 32, "woman_with_headscarf_light_skin_ton": 32, "woman_with_headscarf_medium_dark_skin_ton": 32, "woman_with_headscarf_medium_light_skin_ton": 32, "woman_with_headscarf_medium_skin_ton": 32, "woman_with_headscarf_tone1": 32, "woman_with_headscarf_tone2": 32, "woman_with_headscarf_tone3": 32, "woman_with_headscarf_tone4": 32, "woman_with_headscarf_tone5": 32, "woman_with_probing_can": 32, "woman_with_probing_cane_dark_skin_ton": 32, "woman_with_probing_cane_light_skin_ton": 32, "woman_with_probing_cane_medium_dark_skin_ton": 32, "woman_with_probing_cane_medium_light_skin_ton": 32, "woman_with_probing_cane_medium_skin_ton": 32, "woman_with_probing_cane_tone1": 32, "woman_with_probing_cane_tone2": 32, "woman_with_probing_cane_tone3": 32, "woman_with_probing_cane_tone4": 32, "woman_with_probing_cane_tone5": 32, "woman_with_turban": 32, "woman_with_veil": 32, "woman_with_veil_dark_skin_ton": 32, "woman_with_veil_light_skin_ton": 32, "woman_with_veil_medium_dark_skin_ton": 32, "woman_with_veil_medium_light_skin_ton": 32, "woman_with_veil_medium_skin_ton": 32, "woman_with_veil_tone1": 32, "woman_with_veil_tone2": 32, "woman_with_veil_tone3": 32, "woman_with_veil_tone4": 32, "woman_with_veil_tone5": 32, "woman_zombi": 32, "womans_cloth": 32, "womans_flat_sho": 32, "womans_hat": 32, "women_holding_hands_dark_skin_ton": 32, "women_holding_hands_dark_skin_tone_light_skin_ton": 32, "women_holding_hands_dark_skin_tone_medium_dark_skin_ton": 32, "women_holding_hands_dark_skin_tone_medium_light_skin_ton": 32, "women_holding_hands_dark_skin_tone_medium_skin_ton": 32, "women_holding_hands_light_skin_ton": 32, "women_holding_hands_light_skin_tone_dark_skin_ton": 32, "women_holding_hands_light_skin_tone_medium_dark_skin_ton": 32, "women_holding_hands_light_skin_tone_medium_light_skin_ton": 32, "women_holding_hands_light_skin_tone_medium_skin_ton": 32, "women_holding_hands_medium_dark_skin_ton": 32, "women_holding_hands_medium_dark_skin_tone_dark_skin_ton": 32, "women_holding_hands_medium_dark_skin_tone_light_skin_ton": 32, "women_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 32, "women_holding_hands_medium_dark_skin_tone_medium_skin_ton": 32, "women_holding_hands_medium_light_skin_ton": 32, "women_holding_hands_medium_light_skin_tone_dark_skin_ton": 32, "women_holding_hands_medium_light_skin_tone_light_skin_ton": 32, "women_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 32, "women_holding_hands_medium_light_skin_tone_medium_skin_ton": 32, "women_holding_hands_medium_skin_ton": 32, "women_holding_hands_medium_skin_tone_dark_skin_ton": 32, "women_holding_hands_medium_skin_tone_light_skin_ton": 32, "women_holding_hands_medium_skin_tone_medium_dark_skin_ton": 32, "women_holding_hands_medium_skin_tone_medium_light_skin_ton": 32, "women_holding_hands_tone1": 32, "women_holding_hands_tone1_tone2": 32, "women_holding_hands_tone1_tone3": 32, "women_holding_hands_tone1_tone4": 32, "women_holding_hands_tone1_tone5": 32, "women_holding_hands_tone2": 32, "women_holding_hands_tone2_tone1": 32, "women_holding_hands_tone2_tone3": 32, "women_holding_hands_tone2_tone4": 32, "women_holding_hands_tone2_tone5": 32, "women_holding_hands_tone3": 32, "women_holding_hands_tone3_tone1": 32, "women_holding_hands_tone3_tone2": 32, "women_holding_hands_tone3_tone4": 32, "women_holding_hands_tone3_tone5": 32, "women_holding_hands_tone4": 32, "women_holding_hands_tone4_tone1": 32, "women_holding_hands_tone4_tone2": 32, "women_holding_hands_tone4_tone3": 32, "women_holding_hands_tone4_tone5": 32, "women_holding_hands_tone5": 32, "women_holding_hands_tone5_tone1": 32, "women_holding_hands_tone5_tone2": 32, "women_holding_hands_tone5_tone3": 32, "women_holding_hands_tone5_tone4": 32, "women_with_bunny_ears_parti": 32, "women_wrestl": 32, "women": 32, "wood": 32, "woozy_fac": 32, "world_map": 32, "worm": [32, 437], "worri": [32, 405], "worship_symbol": 32, "wrench": 32, "wrestler": 32, "wrestlers_tone1": 32, "wrestlers_tone2": 32, "wrestlers_tone3": 32, "wrestlers_tone4": 32, "wrestlers_tone5": 32, "wrestl": 32, "wrestling_tone1": 32, "wrestling_tone2": 32, "wrestling_tone3": 32, "wrestling_tone4": 32, "wrestling_tone5": 32, "writing_hand": 32, "writing_hand_tone1": 32, "writing_hand_tone2": 32, "writing_hand_tone3": 32, "writing_hand_tone4": 32, "writing_hand_tone5": 32, "w": [32, 40, 176, 180, 183, 205, 209, 215, 225, 228, 235, 256, 270, 318, 319, 338, 426, 561, 622, 818, 832, 878, 879, 913, 968, 1008, 1021, 1066, 1068, 1096, 1100, 1105], "xk": 32, "yarn": 32, "yawning_fac": 32, "yellow_circl": 32, "yellow_heart": 32, "yellow_squar": 32, "yemen": 32, "yen": [32, 36], "yin_yang": 32, "yo_yo": 32, "yt": 32, "yum": 32, "za": [32, 280, 357], "zambia": 32, "zany_fac": 32, "zap": 32, "zebra": 32, "zimbabw": 32, "zipper_mouth": 32, "zipper_mouth_fac": 32, "zm": 32, "zombi": 32, "zw": 32, "zzz": 32, "sheet": [33, 65, 141, 180, 192, 321, 323, 324, 670, 833, 877, 878], "layout": [33, 136, 157, 226, 230, 402, 415, 1105], "emoji": 33, "sphinxemoji": 33, "mmlalia": 33, "mathml": 33, "alias": [33, 358, 834], "entiti": [33, 140, 366, 380, 407, 424, 444, 452, 559, 742, 931, 1084], "isoamsa": 33, "mathemat": [33, 232, 1020], "arrow": [33, 35, 36, 38, 73, 74, 833, 963], "isoamsr": 33, "relat": [33, 69, 128, 161, 172, 176, 197, 201, 256, 269, 370, 379, 386, 390, 392, 396, 399, 403, 412, 416, 421, 422, 429, 544, 644, 682, 699, 723, 724, 725, 726, 741, 750, 798, 876, 931, 941, 1071, 1105, 1106], "isonum": 33, "binari": [33, 42, 50, 54, 55, 58, 76, 87, 88, 136, 140, 146, 200, 201, 209, 213, 215, 216, 218, 223, 225, 228, 238, 325, 369, 402, 414, 582, 659, 751, 765, 773, 818, 947, 950, 963, 975, 1002, 1007, 1084, 1098], "sphinxish": 33, "send": [33, 101, 113, 120, 122, 137, 140, 151, 176, 177, 179, 180, 181, 182, 215, 216, 235, 237, 238, 256, 277, 317, 322, 466, 797, 813, 829, 872, 873, 877, 886, 896, 944, 946, 1067, 1084], "v4l": [33, 120], "ssh": [33, 97, 101, 102, 113, 120, 122, 137, 147, 151, 180, 212, 228, 235, 238, 246, 253, 255, 260, 270, 274, 276, 303, 316, 317, 323, 324, 330, 331, 335, 501, 502, 726, 799, 800, 801, 808, 855, 864, 869, 870, 881, 882, 907, 957, 958, 959, 1129, 1131, 1136], "taken": [34, 35, 36, 38, 40, 73, 74, 139, 143, 144, 151, 200, 404, 436, 501, 510, 557, 712, 776, 798, 808, 833, 947, 998, 1084, 1098], "definit": [34, 35, 36, 38, 107, 136, 140, 142, 143, 145, 147, 160, 169, 172, 173, 178, 192, 199, 201, 265, 267, 283, 317, 338, 339, 340, 370, 379, 382, 385, 386, 392, 396, 399, 403, 409, 410, 411, 412, 414, 415, 416, 421, 422, 429, 431, 435, 443, 444, 466, 488, 528, 546, 547, 548, 553, 554, 560, 561, 563, 572, 575, 576, 598, 624, 633, 644, 654, 670, 682, 684, 697, 701, 705, 723, 725, 726, 751, 773, 834, 878, 879, 947, 966, 973, 979, 984, 995, 999, 1012, 1013, 1016, 1080, 1094, 1112, 1122, 1125], "includ": [34, 35, 36, 38, 44, 107, 132, 142, 147, 151, 155, 157, 168, 172, 179, 191, 192, 201, 202, 209, 213, 215, 216, 218, 225, 228, 232, 253, 267, 274, 283, 314, 325, 339, 340, 342, 346, 348, 350, 381, 382, 397, 402, 405, 407, 411, 418, 427, 428, 430, 431, 432, 434, 439, 442, 443, 444, 445, 446, 447, 449, 451, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 488, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 508, 510, 511, 512, 513, 515, 516, 517, 518, 519, 528, 534, 537, 544, 545, 546, 548, 552, 553, 554, 555, 557, 558, 559, 560, 561, 562, 563, 564, 569, 572, 573, 574, 575, 576, 577, 579, 580, 581, 582, 583, 585, 586, 589, 590, 591, 595, 599, 600, 601, 602, 603, 609, 613, 614, 617, 619, 620, 622, 626, 631, 632, 633, 634, 635, 636, 637, 638, 641, 642, 643, 645, 647, 649, 652, 653, 654, 655, 657, 659, 660, 661, 662, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 684, 685, 686, 687, 689, 691, 692, 694, 696, 700, 701, 702, 703, 704, 705, 706, 709, 711, 714, 716, 717, 720, 721, 722, 724, 726, 732, 737, 742, 744, 751, 753, 755, 757, 759, 761, 765, 767, 769, 778, 783, 787, 790, 793, 810, 830, 833, 839, 866, 871, 873, 877, 893, 895, 896, 897, 899, 902, 903, 904, 905, 906, 909, 911, 914, 922, 926, 928, 931, 937, 940, 944, 947, 950, 959, 962, 963, 965, 967, 995, 996, 1021, 1022, 1094, 1101, 1107, 1112, 1114, 1117, 1127], "substitut": [34, 35, 36, 38, 106, 120, 192, 228, 274, 314, 408, 424, 428, 659, 890, 1083], "angzarr": 34, "0237c": 34, "angl": [34, 36, 38, 1128], "WITH": [34, 35, 38, 896], "downward": [34, 35, 36, 38, 436], "zigzag": 34, "cirmid": 34, "02aef": 34, "vertic": [34, 35, 36, 38, 359], "circl": [34, 35, 38, 202, 520, 813], "abov": [34, 35, 38, 78, 113, 140, 142, 143, 144, 145, 147, 151, 155, 159, 178, 181, 192, 201, 209, 215, 225, 228, 232, 291, 328, 375, 398, 408, 418, 444, 464, 466, 488, 491, 492, 501, 502, 527, 537, 554, 555, 559, 560, 579, 623, 685, 734, 767, 773, 783, 800, 801, 817, 845, 877, 878, 879, 903, 907, 933, 940, 963, 971, 1002, 1016, 1087, 1093, 1105, 1112], "cudarrl": 34, "02938": 34, "side": [34, 160, 182, 256, 265, 354, 363, 404, 466, 498, 537, 561, 563, 564, 714, 753, 757, 812, 833, 881, 971, 1004, 1050, 1076, 1078, 1087], "arc": 34, "clockwis": [34, 38], "cudarrr": 34, "02935": 34, "rightward": [34, 35, 36, 38], "THEN": 34, "curv": [34, 35], "cularr": 34, "021b6": [34, 38], "anticlockwis": [34, 38], "semicircl": [34, 38], "cularrp": 34, "0293d": 34, "plu": [34, 35, 36, 38, 65, 141, 147, 209, 215, 225, 228, 241, 375, 502, 528, 560, 562, 564, 773, 899], "curarr": 34, "021b7": [34, 38], "curarrm": 34, "0293c": 34, "minu": [34, 35, 36, 38, 220, 562, 705], "darr": [34, 36], "021a1": 34, "head": [34, 38, 40, 61, 141, 143, 146, 180, 182, 192, 246, 255, 264, 276, 277, 714, 726, 803, 859, 860, 863, 866, 869, 894, 895, 962, 1028], "021d3": [34, 38], "doubl": [34, 35, 36, 38, 202, 218, 222, 228, 325, 340, 358, 359, 360, 363, 382, 402, 411, 443, 449, 454, 456, 463, 472, 474, 475, 480, 481, 482, 483, 484, 485, 488, 496, 498, 500, 501, 502, 513, 544, 546, 552, 554, 555, 559, 563, 595, 622, 646, 649, 652, 655, 659, 664, 665, 666, 667, 680, 699, 700, 702, 705, 714, 773, 833, 877, 971, 991, 1015, 1092], "darr2": 34, "021ca": [34, 38], "pair": [34, 38, 101, 102, 115, 155, 197, 207, 210, 213, 218, 222, 223, 228, 235, 237, 249, 250, 273, 279, 445, 449, 452, 502, 520, 598, 599, 600, 603, 645, 691, 692, 696, 726, 737, 742, 869, 881, 882, 883, 885, 965, 975, 1019, 1071, 1082, 1100], "ddarr": 34, "ddotrahd": 34, "02911": 34, "dot": [34, 35, 36, 38, 144, 418, 433, 438, 855, 949], "stem": [34, 742], "dfisht": 34, "0297f": 34, "down": [34, 35, 38, 139, 140, 143, 168, 245, 283, 323, 344, 385, 430, 431, 442, 449, 491, 498, 499, 500, 501, 520, 562, 595, 620, 642, 659, 684, 701, 726, 741, 742, 773, 819, 865, 872, 879, 947, 950, 1112, 1117], "tail": [34, 38, 141, 180, 182, 192, 246, 255, 276, 277, 714, 726, 761, 803, 860, 863, 866, 869, 1096], "dhar": 34, "02965": 34, "harpoon": [34, 38], "barb": [34, 38], "left": [34, 35, 36, 38, 63, 84, 110, 111, 115, 139, 140, 142, 160, 191, 202, 228, 274, 361, 362, 369, 375, 447, 491, 498, 544, 547, 551, 559, 560, 617, 624, 650, 815, 816, 833, 877, 886, 905, 947, 975, 979, 990, 991, 1002, 1016, 1070, 1076, 1094], "besid": [34, 35, 38, 155], "dharl": 34, "021c3": [34, 38], "leftward": [34, 35, 36, 38], "dharr": 34, "021c2": [34, 38], "dlarr": 34, "02199": [34, 38], "south": [34, 38], "west": [34, 38, 149], "drarr": 34, "02198": [34, 38], "east": [34, 38], "duarr": 34, "021f5": [34, 38], "OF": [34, 35, 38, 143, 692], "upward": [34, 36, 38], "duhar": 34, "0296f": [34, 38], "dzigrarr": 34, "027ff": 34, "long": [34, 35, 38, 53, 117, 139, 140, 141, 142, 143, 147, 150, 168, 172, 180, 192, 209, 213, 215, 218, 225, 228, 236, 264, 317, 335, 346, 356, 358, 359, 363, 367, 368, 395, 402, 404, 413, 417, 419, 420, 439, 444, 501, 546, 547, 552, 557, 622, 692, 701, 711, 732, 744, 753, 755, 771, 773, 778, 783, 787, 812, 833, 855, 879, 890, 896, 899, 929, 937, 966, 973, 1013, 1023, 1071, 1078, 1089, 1096, 1125], "squiggl": 34, "erarr": 34, "02971": 34, "equal": [34, 35, 36, 38, 142, 164, 176, 192, 199, 202, 228, 232, 264, 265, 274, 286, 340, 346, 362, 369, 374, 385, 410, 413, 490, 496, 503, 507, 542, 587, 606, 610, 637, 639, 705, 726, 808, 812, 866, 890, 929, 933, 934, 1002, 1056, 1112], "sign": [34, 35, 36, 38, 143, 150, 155, 218, 356, 358, 366, 410, 424, 448, 622, 685, 746, 1002, 1016, 1076, 1122, 1123], "harr": 34, "021d4": [34, 38], "02194": [34, 38], "harrcir": 34, "02948": 34, "small": [34, 38, 43, 106, 139, 141, 142, 172, 192, 196, 252, 291, 338, 410, 414, 447, 499, 544, 656, 701, 870, 871, 877, 909, 941, 994, 1017, 1083, 1112], "harrw": 34, "021ad": [34, 38], "hoarr": 34, "021ff": 34, "imof": 34, "022b7": 34, "imag": [34, 35, 38, 134, 136, 139, 140, 141, 142, 150, 163, 225, 228, 232, 250, 317, 323, 420, 426, 433, 552, 751, 773, 870, 1073, 1078], "laarr": 34, "021da": [34, 38], "tripl": [34, 35, 38, 59, 62], "larr": [34, 36], "0219e": [34, 38], "larr2": 34, "021c7": [34, 38], "larrbf": 34, "0291f": 34, "bar": [34, 35, 36, 38, 146, 167, 187, 210, 223, 228, 237, 240, 270, 273, 274, 279, 292, 326, 426, 491, 706, 969, 1011, 1071], "TO": [34, 35, 38, 1026], "black": [34, 38, 145, 196, 204, 216, 219, 598, 959], "larrf": 34, "0291d": 34, "larrhk": 34, "021a9": [34, 38], "larrlp": 34, "021ab": [34, 38], "larrpl": 34, "02939": 34, "larrsim": 34, "02973": 34, "tild": [34, 35, 38], "larrtl": 34, "021a2": [34, 38], "latail": 34, "0291b": 34, "02919": 34, "lbarr": 34, "0290e": 34, "0290c": 34, "ldca": 34, "02936": 34, "ldrdhar": 34, "02967": 34, "ldrushar": 34, "0294b": 34, "ldsh": 34, "021b2": 34, "tip": [34, 38, 197, 207, 210, 213, 237, 249, 273, 279, 1071], "lfisht": 34, "0297c": 34, "lhar": 34, "02962": 34, "lhard": 34, "021bd": [34, 38], "lharu": 34, "021bc": [34, 38], "lharul": 34, "0296a": 34, "llarr": 34, "llhard": 34, "0296b": 34, "below": [34, 35, 38, 118, 136, 140, 141, 142, 145, 147, 151, 160, 172, 181, 199, 232, 245, 291, 349, 351, 418, 425, 436, 469, 483, 491, 492, 498, 501, 636, 638, 652, 664, 684, 685, 701, 705, 714, 716, 721, 722, 724, 746, 767, 808, 812, 816, 833, 870, 879, 900, 944, 947, 1112], "loarr": 34, "021fd": 34, "lrarr": 34, "021c6": [34, 38], "lrarr2": 34, "lrhar": 34, "021cb": [34, 38], "lrhar2": 34, "lrhard": 34, "0296d": 34, "lsh": [34, 38], "021b0": [34, 38], "lurdshar": 34, "0294a": 34, "luruhar": 34, "02966": 34, "02905": 34, "021a6": [34, 38], "midcir": 34, "02af0": 34, "mumap": 34, "022b8": [34, 38], "multimap": [34, 38, 265, 520, 597, 606, 610, 639, 726], "nearhk": 34, "02924": 34, "north": [34, 38], "nearr": 34, "021d7": 34, "02197": [34, 38], "nesear": 34, "02928": [34, 38], "AND": [34, 35, 38, 346, 362, 385, 548, 861, 990], "nharr": 34, "021ce": [34, 38], "stroke": [34, 38], "021ae": [34, 38], "nlarr": 34, "021cd": [34, 38], "0219a": [34, 38], "nrarr": 34, "021cf": [34, 38], "0219b": [34, 38], "nrarrc": 34, "02933": 34, "00338": [34, 38], "directli": [34, 40, 136, 155, 241, 266, 303, 442, 559, 628, 744, 757, 769, 776, 787, 879, 889, 893, 947, 970, 990, 998, 1061, 1063, 1090], "slash": [34, 38, 857, 941], "nrarrw": 34, "0219d": [34, 38], "nvharr": 34, "02904": 34, "nvlarr": 34, "02902": 34, "nvrarr": 34, "02903": 34, "nwarhk": 34, "02923": 34, "nwarr": 34, "021d6": 34, "02196": [34, 38], "nwnear": 34, "02927": 34, "olarr": 34, "021ba": [34, 38], "orarr": 34, "021bb": [34, 38], "origof": 34, "022b6": 34, "origin": [34, 35, 38, 61, 63, 122, 137, 143, 145, 150, 155, 161, 173, 205, 209, 215, 218, 220, 225, 228, 253, 264, 269, 273, 274, 276, 277, 279, 283, 291, 295, 299, 384, 400, 444, 447, 498, 545, 553, 554, 555, 583, 634, 635, 637, 638, 696, 700, 703, 705, 716, 746, 773, 774, 797, 800, 801, 816, 830, 968, 1073, 1084, 1107], "raarr": 34, "021db": [34, 38], "rarr": [34, 36], "021a0": [34, 38], "rarr2": 34, "021c9": [34, 38], "rarrap": 34, "02975": 34, "almost": [34, 35, 38, 59, 62, 142, 155, 164, 201, 363, 411, 413, 434, 549, 614, 642, 690, 706, 941], "rarrbf": 34, "02920": 34, "rarrc": 34, "rarrf": 34, "0291e": 34, "rarrhk": 34, "021aa": [34, 38], "rarrlp": 34, "021ac": [34, 38], "rarrpl": 34, "02945": 34, "rarrsim": 34, "02974": 34, "rarrtl": 34, "02916": 34, "021a3": [34, 38], "rarrw": 34, "ratail": 34, "0291c": 34, "0291a": 34, "rbarr": 34, "02910": [34, 38], "0290f": [34, 38], "0290d": [34, 38], "rdca": 34, "02937": 34, "rdldhar": 34, "02969": 34, "rdsh": 34, "021b3": 34, "rfisht": 34, "0297d": 34, "rhar": 34, "02964": 34, "rhard": 34, "021c1": [34, 38], "rharu": 34, "021c0": [34, 38], "rharul": 34, "0296c": 34, "rlarr": 34, "021c4": [34, 38], "rlarr2": 34, "rlhar": 34, "021cc": [34, 38], "rlhar2": 34, "roarr": 34, "021fe": 34, "rrarr": 34, "rsh": [34, 38, 560, 880], "021b1": [34, 38], "ruluhar": 34, "02968": 34, "searhk": 34, "02925": [34, 38], "searr": 34, "021d8": 34, "seswar": 34, "02929": [34, 38], "simrarr": 34, "02972": 34, "slarr": 34, "02190": [34, 36, 38], "srarr": 34, "02192": [34, 36, 38], "swarhk": 34, "02926": [34, 38], "swarr": 34, "021d9": 34, "swnwar": 34, "0292a": 34, "uarr": [34, 36], "0219f": 34, "021d1": [34, 38], "uarr2": 34, "021c8": [34, 38], "uarrocir": 34, "02949": 34, "udarr": 34, "021c5": [34, 38], "udhar": 34, "0296e": [34, 38], "ufisht": 34, "0297e": 34, "uhar": 34, "02963": 34, "uharl": 34, "021bf": [34, 38], "uharr": 34, "021be": [34, 38], "uuarr": 34, "varr": 34, "021d5": [34, 38], "02195": [34, 38], "xharr": 34, "027fa": [34, 38], "027f7": [34, 38], "xlarr": 34, "027f8": [34, 38], "027f5": [34, 38], "xmap": 34, "027fc": [34, 38], "xrarr": 34, "027f9": [34, 38], "027f6": [34, 38], "zigrarr": 34, "021dd": 34, "ap": [35, 903], "02a70": 35, "approxim": [35, 38, 142, 238], "OR": [35, 38, 215, 346, 362, 385, 402, 861, 990], "0224a": [35, 38], "apid": 35, "0224b": 35, "asymp": 35, "02248": [35, 38], "barv": 35, "02ae7": 35, "tack": [35, 38], "overbar": 35, "bcong": 35, "0224c": [35, 38], "bepsi": 35, "003f6": [35, 38], "greek": [35, 38], "revers": [35, 36, 38, 185, 212, 218, 235, 253, 260, 265, 274, 280, 343, 520, 527, 528, 587, 591, 606, 610, 639, 684, 726, 728, 767, 806, 870, 931, 1018, 1051], "lunat": [35, 38], "epsilon": [35, 38], "bowti": 35, "022c8": 35, "bsim": 35, "0223d": [35, 38], "bsime": 35, "022cd": [35, 38], "bsolhsub": 35, "0005c": [35, 36], "02282": [35, 38], "solidu": [35, 36], "subset": [35, 38, 228, 950, 963, 1020], "bump": 35, "0224e": [35, 38], "geometr": [35, 38, 232], "equival": [35, 38, 78, 92, 106, 109, 228, 371, 375, 390, 395, 556, 633, 797, 799, 834, 866, 899, 979, 1001, 1011, 1021], "02aae": 35, "bumpi": 35, "0224f": [35, 38], "between": [35, 38, 69, 89, 103, 140, 141, 142, 144, 150, 151, 161, 176, 188, 201, 209, 212, 215, 220, 222, 225, 228, 232, 235, 250, 253, 260, 274, 279, 292, 303, 313, 347, 350, 363, 385, 390, 397, 410, 415, 424, 435, 456, 466, 488, 496, 560, 577, 636, 692, 702, 706, 717, 727, 728, 732, 778, 804, 805, 810, 870, 877, 907, 917, 931, 932, 933, 934, 941, 945, 979, 990, 1000, 1002, 1013, 1077, 1130], "cire": 35, "02257": [35, 38], "colon": [35, 36, 38, 1049], "02237": [35, 38], "proport": [35, 38, 141], "02a74": 35, "02254": [35, 38], "congdot": 35, "02a6d": 35, "congruent": [35, 38], "csub": 35, "02acf": 35, "close": [35, 54, 120, 145, 151, 160, 172, 190, 199, 200, 213, 220, 244, 245, 247, 270, 274, 298, 390, 424, 429, 502, 520, 670, 698, 707, 715, 725, 726, 816, 877, 895, 896, 897, 899, 900, 902, 903, 904, 905, 906, 909, 911, 914, 940, 944, 968, 1080, 1098, 1138], "csube": 35, "02ad1": 35, "csup": 35, "02ad0": 35, "superset": [35, 38, 1020, 1124], "csupe": 35, "02ad2": 35, "cuepr": 35, "022de": [35, 38], "cuesc": 35, "022df": [35, 38], "succe": [35, 38, 751, 852, 881, 970], "cupr": 35, "0227c": [35, 38], "dashv": 35, "02ae4": [35, 38], "turnstil": [35, 38], "022a3": [35, 38], "easter": [35, 192], "02a6e": 35, "asterisk": [35, 36, 38], "ecir": 35, "02256": [35, 38], "IN": [35, 38, 144], "ecolon": 35, "02255": [35, 38], "eddot": 35, "02a77": [35, 38], "edot": 35, "02251": [35, 38], "efdot": 35, "02252": [35, 38], "THE": [35, 38, 896], "02a9a": 35, "greater": [35, 36, 38, 106, 113, 267, 362, 490, 496, 504, 507, 542, 684, 726, 759, 1002], "than": [35, 36, 38, 43, 65, 68, 106, 113, 120, 136, 140, 141, 145, 147, 150, 151, 155, 172, 176, 179, 183, 192, 199, 202, 209, 215, 220, 222, 225, 228, 232, 259, 262, 267, 291, 294, 303, 362, 363, 382, 384, 413, 414, 415, 426, 427, 429, 435, 442, 490, 498, 504, 507, 542, 546, 558, 561, 563, 564, 629, 642, 653, 679, 692, 716, 726, 729, 744, 759, 765, 769, 773, 833, 858, 862, 870, 878, 888, 889, 896, 899, 916, 944, 948, 963, 964, 979, 984, 1001, 1002, 1046, 1050, 1080, 1087, 1090, 1107, 1125], "02a96": [35, 38], "slant": [35, 38], "egsdot": 35, "02a98": 35, "el": [35, 188, 199, 235], "02a99": 35, "less": [35, 36, 38, 59, 62, 78, 136, 140, 141, 142, 147, 151, 201, 215, 232, 246, 255, 256, 262, 276, 277, 340, 362, 363, 367, 410, 413, 444, 496, 600, 620, 646, 692, 694, 716, 726, 744, 746, 773, 803, 817, 833, 860, 863, 864, 866, 869, 899, 984, 1002, 1021, 1100, 1101, 1114, 1125, 1131], "02a95": [35, 38], "elsdot": 35, "02a97": 35, "equest": 35, "0225f": [35, 38], "equivdd": 35, "02a78": 35, "erdot": 35, "02253": [35, 38], "esdot": 35, "02250": [35, 38], "limit": [35, 38, 63, 140, 141, 157, 179, 209, 215, 225, 228, 274, 363, 405, 598, 642, 773, 810, 915, 934, 976, 977, 1002, 1075, 1097], "esim": 35, "02a73": 35, "02242": [35, 38], "fork": [35, 43, 120, 142, 157, 161, 726, 732, 733, 735, 740, 743, 750, 754, 764, 777, 782, 788, 791, 794, 869, 902, 915, 923, 941, 1138], "022d4": [35, 38], "pitchfork": [35, 38], "forkv": 35, "02ad9": 35, "02322": 35, "gap": 35, "02a86": [35, 38], "02267": [35, 38], "gel": 35, "02a8c": [35, 38], "022db": [35, 38], "02a7e": [35, 38], "gescc": 35, "02aa9": 35, "gesdot": 35, "02a80": 35, "gesdoto": 35, "02a82": 35, "gesdotol": 35, "02a84": 35, "gesl": 35, "0fe00": [35, 38], "02a94": 35, "022d9": [35, 38], "02277": [35, 38], "gla": 35, "02aa5": 35, "gle": 35, "02a92": 35, "glj": 35, "02aa4": 35, "overlap": [35, 228, 232, 274, 757, 982], "gsdot": 35, "022d7": [35, 38], "gsim": 35, "02273": [35, 38], "gsime": 35, "02a8e": 35, "similar": [35, 59, 62, 140, 142, 172, 176, 180, 182, 213, 226, 240, 365, 372, 443, 470, 499, 500, 531, 543, 552, 670, 705, 706, 721, 722, 744, 759, 773, 817, 963, 965, 1071], "gsiml": 35, "02a90": 35, "0226b": [35, 38], "gtcc": 35, "02aa7": 35, "gtcir": 35, "02a7a": 35, "gtdot": 35, "gtquest": 35, "02a7c": 35, "mark": [35, 36, 38, 199, 240, 318, 319, 359, 381, 681, 689, 789, 979, 981, 1100], "gtrarr": 35, "02978": 35, "homtht": 35, "0223b": 35, "homothet": 35, "lap": 35, "02a85": [35, 38], "lat": 35, "02aab": 35, "larger": [35, 68, 78, 172, 179, 202, 219, 232, 282, 411, 414, 426, 464, 544, 561, 563, 744, 793, 815, 877, 879, 944, 964, 977, 1127], "late": [35, 140, 142, 265, 267, 705, 706, 879, 935, 979, 996, 1013, 1128], "02aad": 35, "ldot": 35, "022d6": [35, 38], "le": [35, 464], "02266": [35, 38], "02a8b": [35, 38], "022da": [35, 38], "02a7d": [35, 38], "lescc": 35, "02aa8": 35, "lesdot": 35, "02a7f": 35, "lesdoto": 35, "02a81": 35, "lesdotor": 35, "02a83": 35, "lesg": 35, "02a93": 35, "lg": [35, 280, 1084], "02276": [35, 38], "lge": 35, "02a91": 35, "ll": [35, 38, 59, 62, 113, 139, 140, 141, 143, 145, 147, 150, 155, 156, 168, 170, 180, 182, 196, 225, 228, 256, 259, 262, 485, 499, 561, 563, 564, 773, 799, 870, 879, 890, 905, 952, 955, 961, 994, 1087], "022d8": 35, "lsim": 35, "02272": [35, 38], "lsime": 35, "02a8d": 35, "lsimg": 35, "02a8f": 35, "0226a": [35, 38], "ltcc": 35, "02aa6": 35, "ltcir": 35, "02a79": 35, "ltdot": 35, "ltlarr": 35, "02976": 35, "ltquest": 35, "02a7b": 35, "ltrie": 35, "022b4": [35, 38], "normal": [35, 38, 88, 128, 140, 142, 147, 155, 158, 163, 172, 232, 402, 429, 434, 439, 558, 560, 789, 805, 810, 931, 945, 998, 1077, 1090, 1105, 1117], "mcomma": 35, "02a29": 35, "comma": [35, 36, 178, 191, 212, 292, 1079], "mddot": 35, "0223a": 35, "mid": 35, "02223": [35, 38], "mlcp": 35, "02adb": 35, "transvers": 35, "intersect": [35, 38, 196, 220, 292, 1020], "model": [35, 120, 243, 258, 264, 267, 401, 1002, 1074, 1077, 1096], "022a7": 35, "mstpo": 35, "0223e": 35, "invert": [35, 36, 63, 172, 913], "lazi": [35, 209, 215, 225, 228, 354, 701], "02abb": 35, "0227a": [35, 38], "prap": 35, "02ab7": [35, 38], "prcue": 35, "pre": [35, 142, 172, 201, 364, 546, 548, 552, 598, 599, 600, 650, 691, 692, 833, 995, 1010, 1083], "02ab3": 35, "02aaf": [35, 38], "singl": [35, 36, 38, 44, 59, 62, 63, 84, 106, 110, 111, 113, 120, 122, 140, 142, 160, 199, 200, 209, 213, 215, 221, 222, 225, 228, 232, 256, 340, 346, 358, 359, 371, 417, 420, 424, 426, 429, 455, 468, 553, 607, 681, 692, 700, 702, 713, 732, 742, 744, 806, 808, 809, 810, 833, 838, 839, 840, 842, 858, 870, 878, 882, 918, 929, 931, 932, 941, 944, 948, 950, 953, 959, 963, 964, 965, 978, 1015, 1016, 1023, 1038, 1044, 1077, 1084, 1092, 1095, 1098, 1100, 1105, 1106, 1113], "prsim": 35, "0227e": [35, 38], "prurel": 35, "022b0": 35, "ratio": [35, 232], "02236": 35, "rtrie": 35, "022b5": [35, 38], "AS": [35, 38, 896], "rtriltri": 35, "029ce": 35, "triangl": [35, 38, 520], "samalg": 35, "02210": [35, 38], "coproduct": [35, 38], "02abc": 35, "0227b": [35, 38], "scap": 35, "02ab8": [35, 38], "sccue": 35, "0227d": [35, 38], "sce": 35, "02ab4": 35, "02ab0": [35, 38], "scsim": 35, "0227f": [35, 38], "sdote": 35, "02a66": 35, "sfrown": 35, "simg": 35, "02a9e": 35, "02aa0": 35, "siml": 35, "02a9d": 35, "02a9f": 35, "smid": 35, "02323": 35, "smt": 35, "02aaa": 35, "smaller": [35, 218, 232, 340, 402, 411, 426, 965], "smte": 35, "02aac": 35, "spar": [35, 258, 426], "02225": [35, 38], "parallel": [35, 38, 59, 62, 72, 73, 74, 78, 91, 146, 169, 172, 176, 178, 213, 268, 269, 290, 434, 714, 726, 763, 765, 773, 776, 809, 817, 918, 929, 932, 979, 981, 982, 1066, 1071, 1129, 1130, 1137, 1141], "sqsub": 35, "0228f": [35, 38], "squar": [35, 36, 38, 63, 160, 173, 183, 199, 205, 212, 215, 220, 222, 228, 232, 241, 253, 267, 274, 292, 452, 563, 973, 1022, 1025, 1092], "sqsube": 35, "02291": [35, 38], "sqsup": 35, "02290": [35, 38], "sqsupe": 35, "02292": [35, 38], "ssmile": 35, "sub": [35, 216, 228, 274, 447, 464, 544, 969, 1008, 1017, 1023, 1114], "022d0": [35, 38], "sube": 35, "02ac5": [35, 38], "subedot": 35, "02ac3": 35, "submult": 35, "02ac1": 35, "subplu": 35, "02abf": 35, "subrarr": 35, "02979": 35, "subsim": 35, "02ac7": 35, "subsub": 35, "02ad5": 35, "subsup": 35, "02ad3": 35, "sup": [35, 903], "022d1": [35, 38], "supdsub": 35, "02ad8": 35, "supe": 35, "02ac6": [35, 38], "supedot": 35, "02ac4": 35, "suphsol": 35, "02283": [35, 38], "0002f": [35, 36], "suphsub": 35, "02ad7": 35, "suplarr": 35, "0297b": 35, "supmult": 35, "02ac2": 35, "supplu": 35, "02ac0": 35, "supsim": 35, "02ac8": 35, "supsub": 35, "02ad4": 35, "supsup": 35, "02ad6": 35, "thkap": 35, "thksim": 35, "0223c": [35, 38], "topfork": 35, "02ada": 35, "tee": [35, 817], "trie": 35, "0225c": [35, 38], "delta": [35, 38, 155, 205], "twixt": 35, "0226c": [35, 38], "vbar": 35, "02aeb": 35, "02ae8": 35, "underbar": 35, "vbarv": 35, "02ae9": 35, "vdash": 35, "022ab": 35, "022a9": 35, "022a8": [35, 38], "022a2": [35, 38], "vdashl": 35, "02ae6": 35, "veebar": 35, "022bb": 35, "xor": [35, 990], "vltri": 35, "022b2": [35, 38], "vprop": 35, "0221d": [35, 38], "vrtri": 35, "022b3": [35, 38], "vvdash": 35, "022aa": 35, "\u00bd": 36, "\u00bc": 36, "\u215b": 36, "\u00be": 36, "\u215c": 36, "\u215d": 36, "\u215e": 36, "_": [36, 39, 63, 160, 161, 196, 209, 212, 213, 215, 222, 225, 228, 235, 238, 250, 274, 309, 357, 426, 556, 679, 763, 833, 935, 961, 979, 981], "\u00b5": 36, "\u03c9": 36, "\u00aa": 36, "\u00ba": 36, "\u00b9": 36, "\u00b2": 36, "\u00b3": 36, "amp": [36, 212], "00026": 36, "ampersand": [36, 655], "apo": 36, "00027": 36, "apostroph": 36, "ast": [36, 464], "0002a": 36, "brvbar": 36, "000a6": 36, "broken": [36, 400, 401, 670, 765, 778, 983, 1049, 1079], "bsol": 36, "cent": 36, "000a2": 36, "0003a": 36, "0002c": 36, "commat": 36, "00040": 36, "commerci": [36, 147, 751, 812], "AT": 36, "000a9": 36, "curren": 36, "000a4": 36, "currenc": [36, 258, 426], "02193": [36, 38], "deg": 36, "000b0": 36, "degre": [36, 443, 454, 485, 596, 879, 996], "000f7": [36, 38], "00024": 36, "0003d": 36, "excl": 36, "00021": 36, "frac12": 36, "000bd": 36, "vulgar": 36, "fraction": [36, 232, 303], "ONE": [36, 643], "frac14": 36, "000bc": 36, "quarter": 36, "frac18": 36, "0215b": 36, "eighth": 36, "frac34": 36, "000be": 36, "frac38": 36, "0215c": 36, "frac58": 36, "0215d": 36, "frac78": 36, "0215e": 36, "0003e": 36, "horbar": 36, "02015": 36, "horizont": [36, 359], "hyphen": 36, "02010": 36, "iexcl": 36, "000a1": 36, "iquest": 36, "000bf": 36, "laquo": 36, "000ab": 36, "quotat": [36, 38], "lcub": 36, "0007b": [36, 38], "curli": [36, 38], "bracket": [36, 38, 999], "ldquo": 36, "0201c": [36, 38], "lowbar": 36, "0005f": 36, "low": [36, 114, 136, 183, 212, 232, 249, 352, 384, 420, 424, 429, 452, 475, 488, 491, 492, 496, 700, 702, 755, 769, 809, 877, 933, 949, 1028, 1127], "lpar": 36, "00028": 36, "parenthesi": 36, "lsqb": 36, "0005b": [36, 38], "lsquo": 36, "02018": [36, 38], "0003c": 36, "micro": [36, 209, 215, 225, 228], "000b5": 36, "middot": 36, "000b7": [36, 38], "middl": [36, 38, 39, 63, 150, 161, 216, 232, 284, 287, 404, 424, 491, 520, 751, 870, 880, 886, 947, 981], "nbsp": 36, "000a0": [36, 38], "NO": [36, 38, 151, 192, 314, 623, 879, 944], "space": [36, 38, 63, 78, 99, 110, 111, 113, 136, 140, 141, 142, 147, 160, 163, 187, 201, 228, 246, 253, 255, 256, 274, 276, 277, 308, 319, 320, 328, 347, 366, 368, 387, 448, 453, 462, 466, 490, 491, 492, 493, 494, 495, 496, 497, 500, 542, 551, 560, 595, 715, 725, 726, 734, 771, 786, 800, 801, 802, 803, 807, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 847, 848, 849, 850, 851, 853, 869, 878, 881, 882, 883, 884, 885, 892, 896, 897, 898, 899, 900, 908, 910, 915, 923, 924, 926, 927, 930, 932, 940, 947, 949, 951, 952, 953, 954, 955, 956, 957, 958, 964, 979, 982, 1016], "000ac": 36, "NOT": [36, 38, 170, 346, 385, 430, 469, 470, 483, 484, 744, 861, 1090], "num": [36, 145, 159, 160, 173, 183, 199, 213, 215, 220, 222, 228, 232, 250, 253, 292, 390, 575, 577, 659, 660, 661, 662, 671, 691, 861, 866, 974, 1079], "00023": 36, "ohm": 36, "02126": 36, "ordf": 36, "000aa": 36, "feminin": 36, "ordin": [36, 228, 235, 238, 274, 280, 1084], "indic": [36, 191, 209, 215, 220, 225, 228, 264, 598, 734], "ordm": 36, "000ba": 36, "masculin": 36, "para": 36, "000b6": 36, "pilcrow": 36, "percnt": 36, "00025": 36, "percent": [36, 232], "period": [36, 84, 117, 157, 180, 418, 551, 717, 783, 870, 878, 897, 907, 929, 931, 944, 1100], "0002e": 36, "full": [36, 158, 203, 207, 253, 363, 378, 406, 411, 514, 525, 560, 664, 701, 714, 812, 817, 878, 920, 926, 971, 990, 1023, 1079, 1087], "stop": [36, 134, 145, 201, 228, 265, 267, 269, 274, 292, 302, 429, 469, 483, 767, 870, 945, 970, 1093, 1112], "0002b": 36, "plusmn": 36, "000b1": [36, 38], "000a3": 36, "quest": 36, "0003f": 36, "quot": [36, 160, 208, 211, 215, 222, 228, 236, 359, 798, 861, 862, 880, 1015], "00022": 36, "raquo": 36, "000bb": 36, "rcub": 36, "0007d": [36, 38], "rdquo": 36, "0201d": [36, 38], "reg": 36, "000ae": [36, 38], "rpar": 36, "00029": 36, "rsqb": 36, "0005d": [36, 38], "rsquo": 36, "02019": [36, 38], "sect": 36, "000a7": 36, "section": [36, 38, 88, 140, 144, 145, 146, 155, 164, 177, 201, 226, 259, 262, 265, 335, 528, 546, 628, 713, 763, 765, 833, 876, 877, 893, 947, 948, 949, 951, 957, 963, 964, 965, 1105], "semi": [36, 260, 294, 456, 700, 915, 966], "0003b": 36, "semicolon": [36, 429, 1079], "shy": 36, "000ad": 36, "soft": [36, 137, 324, 771], "sol": 36, "sung": 36, "0266a": 36, "sup1": 36, "000b9": 36, "superscript": 36, "sup2": 36, "000b2": 36, "sup3": 36, "000b3": 36, "000d7": 36, "trade": 36, "02122": 36, "02191": [36, 38], "verbar": 36, "0007c": [36, 38], "000a5": 36, "lorem": 37, "ipsum": 37, "h\u00f6dlmoser": 37, "anywai": [37, 43, 53, 61, 139, 141, 142, 151, 170, 172, 192, 201, 202, 228, 366, 414, 420, 424, 430, 546, 552, 561, 563, 564, 642, 650, 653, 657, 691, 692, 702, 765, 773, 812, 833, 923, 979, 1090, 1105], "hmm": [37, 137, 146, 159, 170, 531, 664, 944], "annoi": [37, 43, 303, 426, 642, 1105], "thing": [37, 40, 42, 43, 49, 100, 133, 139, 140, 142, 143, 144, 145, 146, 147, 151, 160, 164, 168, 171, 172, 176, 180, 192, 209, 215, 216, 218, 225, 228, 238, 291, 306, 364, 380, 384, 408, 414, 417, 424, 448, 452, 520, 527, 528, 544, 546, 553, 558, 560, 582, 642, 664, 681, 705, 714, 724, 732, 737, 769, 773, 798, 812, 817, 866, 870, 871, 898, 903, 926, 931, 947, 959, 963, 964, 970, 984, 998, 1021, 1112, 1130], "thin": [37, 38], "border": 37, "anfrag": [37, 1121, 1122, 1123, 1124, 1129, 1131, 1132, 1136, 1137, 1138, 1139, 1141, 1142, 1143], "dauer": [37, 1121, 1122, 1123, 1124, 1129, 1131, 1132, 1136, 1137, 1138, 1139, 1141, 1142, 1143], "tage": [37, 165, 167, 175, 334, 1121, 1122, 1123, 1124, 1129, 1131, 1132, 1136, 1138, 1139, 1141, 1142, 1143], "sysprog": [37, 136, 137, 256, 336, 726, 780, 785, 869, 910, 911, 914, 1138, 1139, 1141, 1142], "catcher": 37, "somehow": [37, 42, 117, 119, 124, 141, 294, 558, 781, 1100, 1101], "einf\u00fchrungskur": [37, 1121, 1138, 1139, 1141, 1142], "richtet": [37, 1123, 1138], "kennen": [37, 318, 1138], "lernen": [37, 1138], "zusammenh\u00e4ng": [37, 1138], "grundpfeil": [37, 1138], "erkl\u00e4rt": [37, 160, 163, 167, 1122, 1138, 1142, 1143], "bild": [37, 163, 1138], "orientieren": [37, 1138], "zurechtfinden": [37, 318, 1138], "somedai": 37, "better": [37, 57, 61, 65, 119, 134, 136, 137, 141, 145, 151, 152, 162, 172, 173, 175, 176, 178, 179, 180, 183, 184, 197, 201, 207, 209, 210, 212, 213, 218, 219, 220, 222, 223, 226, 229, 232, 237, 241, 249, 256, 269, 273, 279, 343, 355, 363, 370, 379, 384, 385, 386, 392, 396, 399, 403, 404, 412, 414, 416, 421, 422, 425, 429, 434, 435, 440, 442, 520, 547, 555, 569, 582, 599, 622, 634, 637, 642, 644, 682, 694, 705, 723, 725, 726, 773, 852, 878, 879, 899, 915, 918, 944, 945, 973, 984, 1002, 1016, 1028, 1067, 1068, 1071, 1076, 1078, 1083, 1089, 1105, 1114], "yet": [37, 78, 130, 140, 147, 150, 160, 162, 229, 230, 240, 253, 291, 381, 414, 442, 451, 464, 466, 501, 502, 514, 520, 613, 716, 773, 790, 800, 801, 878, 886, 890, 944, 971, 1001, 1028, 1095, 1105, 1114], "redefin": 37, "wrap": [37, 63, 199, 237, 291, 463, 702, 708, 773, 1096], "look": [37, 42, 43, 45, 59, 62, 65, 82, 89, 102, 113, 115, 120, 133, 134, 139, 140, 141, 142, 143, 145, 147, 150, 155, 160, 168, 172, 176, 179, 191, 197, 201, 226, 256, 259, 262, 265, 266, 284, 287, 291, 302, 335, 398, 406, 414, 420, 424, 426, 429, 430, 437, 485, 500, 501, 514, 531, 557, 569, 581, 633, 646, 670, 702, 708, 709, 727, 732, 742, 769, 773, 800, 801, 805, 809, 812, 823, 825, 830, 837, 845, 860, 871, 877, 878, 886, 903, 913, 940, 941, 964, 968, 978, 995, 998, 1036, 1040, 1049, 1071, 1078, 1079, 1090, 1107, 1125, 1128], "mdbootstrap": 37, "jqueri": 37, "icon": 37, "longrightarrow": 38, "rightarrow": 38, "doubleleftrightarrow": 38, "02220": 38, "applyfunct": 38, "02061": 38, "applic": [38, 63, 78, 94, 125, 140, 145, 157, 170, 192, 287, 291, 294, 314, 335, 410, 413, 420, 501, 578, 581, 649, 690, 811, 871, 878, 890, 915, 1078], "approx": [38, 1059, 1105], "approxeq": 38, "assign": [38, 97, 160, 161, 162, 167, 173, 183, 190, 198, 209, 212, 215, 218, 220, 224, 225, 230, 232, 236, 260, 264, 265, 267, 292, 317, 323, 324, 346, 363, 369, 370, 379, 386, 392, 393, 396, 399, 403, 408, 410, 412, 416, 421, 422, 456, 463, 469, 470, 478, 483, 484, 546, 547, 550, 557, 613, 622, 629, 639, 643, 644, 646, 650, 657, 680, 682, 687, 696, 702, 722, 723, 725, 726, 877, 879, 918, 929, 932, 934, 1011, 1022, 1093, 1095], "backcong": 38, "backepsilon": 38, "backprim": 38, "02035": 38, "backsim": 38, "backsimeq": 38, "backslash": [38, 359, 857, 1015], "02216": 38, "barwedg": 38, "02305": 38, "02235": 38, "bernoulli": 38, "0212c": 38, "bigcap": 38, "022c2": 38, "bigcirc": 38, "025ef": 38, "bigcup": 38, "022c3": 38, "union": [38, 196, 204, 220, 292, 402, 719, 1020, 1126], "bigodot": 38, "02a00": 38, "bigoplu": 38, "02a01": 38, "bigotim": 38, "02a02": 38, "bigsqcup": 38, "02a06": 38, "bigstar": 38, "02605": 38, "bigtriangledown": 38, "025bd": 38, "white": [38, 264, 348], "bigtriangleup": 38, "025b3": 38, "biguplu": 38, "02a04": 38, "bigve": 38, "022c1": 38, "logic": [38, 114, 142, 306, 354, 370, 379, 384, 386, 392, 396, 399, 403, 408, 412, 416, 421, 422, 449, 466, 644, 682, 723, 725, 726, 1090], "bigwedg": 38, "022c0": 38, "bkarow": 38, "blacklozeng": 38, "029eb": 38, "lozeng": 38, "blacksquar": 38, "025aa": 38, "blacktriangl": 38, "025b4": 38, "blacktriangledown": 38, "025be": 38, "blacktriangleleft": 38, "025c2": 38, "blacktriangleright": 38, "025b8": 38, "bot": [38, 1105], "022a5": 38, "boxminu": 38, "0229f": 38, "boxplu": 38, "0229e": 38, "boxtim": 38, "022a0": 38, "breve": 38, "002d8": 38, "bullet": [38, 142, 1078], "02022": 38, "bumpeq": 38, "capitaldifferentiald": 38, "02145": 38, "struck": 38, "ital": 38, "d": [38, 85, 97, 107, 113, 140, 141, 142, 143, 159, 162, 170, 173, 178, 183, 188, 190, 196, 199, 202, 205, 206, 210, 212, 213, 215, 220, 222, 225, 228, 232, 235, 238, 250, 253, 256, 260, 269, 270, 273, 274, 280, 288, 292, 309, 311, 312, 317, 340, 347, 348, 350, 354, 381, 385, 414, 424, 426, 440, 447, 452, 546, 552, 559, 613, 614, 619, 620, 622, 626, 652, 689, 701, 702, 714, 716, 746, 767, 781, 797, 800, 801, 810, 812, 816, 817, 830, 833, 834, 855, 859, 861, 866, 872, 877, 878, 879, 891, 896, 944, 947, 969, 971, 997, 1003, 1008, 1010, 1011, 1015, 1016, 1019, 1039], "caylei": 38, "0212d": 38, "letter": [38, 65, 357, 1001], "cedilla": 38, "000b8": 38, "centerdot": 38, "checkmark": 38, "02713": 38, "circeq": 38, "circlearrowleft": 38, "circlearrowright": 38, "circledast": 38, "0229b": 38, "circledcirc": 38, "0229a": 38, "circleddash": 38, "0229d": 38, "circledot": 38, "02299": 38, "circledr": 38, "024c8": 38, "latin": [38, 219, 280], "circleminu": 38, "02296": 38, "circleplu": 38, "02295": 38, "circletim": 38, "02297": 38, "clockwisecontourintegr": 38, "02232": 38, "contour": 38, "closecurlydoublequot": 38, "closecurlyquot": 38, "clubsuit": 38, "02663": 38, "suit": [38, 44, 97, 136, 176, 245, 249, 325, 402, 411, 442, 443, 444, 446, 447, 449, 451, 464, 466, 467, 485, 498, 499, 500, 501, 502, 561, 562, 563, 564, 653, 654, 691, 700, 701, 720, 721, 722, 724, 1106, 1113, 1128, 1143], "coloneq": 38, "complement": [38, 106, 363], "02201": 38, "complex": [38, 69, 140, 151, 155, 172, 178, 198, 215, 220, 222, 228, 232, 236, 238, 253, 260, 274, 317, 338, 381, 393, 408, 717, 877, 878, 902, 918, 941, 1002, 1011, 1118, 1128], "02102": 38, "02261": 38, "ident": [38, 224, 274, 286, 537, 990, 992, 1011], "contourintegr": 38, "0222e": 38, "counterclockwisecontourintegr": 38, "02233": 38, "cupcap": 38, "0224d": 38, "curlyeqprec": 38, "curlyeqsucc": 38, "curlyve": 38, "022ce": 38, "curlywedg": 38, "022cf": 38, "curvearrowleft": 38, "curvearrowright": 38, "dbkarow": 38, "ddagger": 38, "02021": 38, "ddotseq": 38, "02207": 38, "nabla": 38, "diacriticalacut": 38, "000b4": 38, "acut": 38, "accent": 38, "diacriticaldot": 38, "002d9": 38, "diacriticaldoubleacut": 38, "002dd": 38, "diacriticalgrav": 38, "00060": 38, "grave": 38, "diacriticaltild": 38, "002dc": 38, "022c4": 38, "diamondsuit": 38, "02666": 38, "differentiald": 38, "02146": 38, "digamma": 38, "003dd": 38, "div": [38, 414, 464], "divideontim": 38, "022c7": 38, "doteq": 38, "doteqdot": 38, "dotequ": 38, "dotminu": 38, "02238": 38, "dotplu": 38, "02214": 38, "dotsquar": 38, "022a1": 38, "doublebarwedg": 38, "02306": 38, "doublecontourintegr": 38, "0222f": 38, "surfac": [38, 172, 809, 877, 878, 1076, 1078], "doubledot": 38, "000a8": 38, "diaeresi": 38, "doubledownarrow": 38, "doubleleftarrow": 38, "021d0": 38, "doubleleftte": 38, "doublelongleftarrow": 38, "doublelongleftrightarrow": 38, "doublelongrightarrow": 38, "doublerightarrow": 38, "021d2": 38, "doublerightte": 38, "doubleuparrow": 38, "doubleupdownarrow": 38, "doubleverticalbar": 38, "downarrow": 38, "downarrowuparrow": 38, "downdownarrow": 38, "downharpoonleft": 38, "downharpoonright": 38, "downleftvector": 38, "downrightvector": 38, "downte": 38, "022a4": 38, "downteearrow": 38, "021a7": 38, "drbkarow": 38, "02208": 38, "emptyset": 38, "02205": 38, "eqcirc": 38, "eqcolon": 38, "eqsim": 38, "eqslantgtr": 38, "eqslantless": 38, "equaltild": 38, "equilibrium": 38, "02203": 38, "THERE": [38, 548], "02130": 38, "exponential": 38, "02147": 38, "fallingdotseq": 38, "foral": [38, 1022], "02200": 38, "FOR": [38, 151, 173, 180], "fouriertrf": 38, "02131": 38, "geq": 38, "02265": 38, "geqq": 38, "geqslant": 38, "ggg": 38, "gnapprox": 38, "02a8a": 38, "gneq": 38, "02a88": 38, "gneqq": 38, "02269": 38, "BUT": 38, "greaterequ": 38, "greaterequalless": 38, "greaterfullequ": 38, "greaterless": 38, "greaterslantequ": 38, "greatertild": 38, "gtrapprox": 38, "gtrdot": 38, "gtreqless": 38, "gtreqqless": 38, "gtrless": 38, "gtrsim": 38, "gvertneqq": 38, "hacek": 38, "002c7": 38, "caron": 38, "hbar": 38, "0210f": 38, "planck": 38, "constant": [38, 201, 209, 215, 218, 219, 220, 225, 228, 232, 270, 291, 346, 354, 355, 360, 370, 374, 379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 487, 594, 644, 655, 682, 692, 694, 723, 725, 726], "heartsuit": 38, "02665": 38, "hilbertspac": 38, "0210b": 38, "h": [38, 42, 44, 97, 113, 118, 120, 142, 147, 163, 166, 168, 173, 179, 183, 188, 201, 202, 209, 212, 213, 220, 222, 232, 245, 256, 267, 298, 339, 340, 342, 346, 348, 350, 358, 381, 382, 384, 390, 397, 405, 407, 411, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 442, 443, 444, 445, 446, 447, 449, 451, 454, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 508, 510, 511, 512, 513, 515, 516, 517, 518, 519, 521, 527, 528, 530, 531, 534, 537, 539, 544, 545, 546, 547, 552, 553, 554, 555, 557, 558, 559, 560, 561, 562, 563, 564, 622, 631, 632, 633, 634, 635, 636, 637, 638, 647, 649, 652, 653, 654, 670, 671, 674, 685, 688, 691, 692, 696, 700, 701, 702, 703, 705, 714, 716, 720, 721, 722, 724, 732, 737, 741, 742, 744, 751, 753, 755, 757, 759, 761, 765, 767, 769, 778, 783, 786, 787, 790, 792, 793, 799, 810, 817, 830, 833, 855, 861, 871, 873, 877, 893, 895, 896, 897, 899, 900, 902, 903, 904, 905, 906, 909, 911, 914, 928, 931, 935, 937, 939, 940, 944, 945, 947, 948, 949, 950, 955, 959, 962, 963, 965, 1008, 1023, 1100, 1107, 1112, 1114, 1117], "hksearow": 38, "hkswarow": 38, "hookleftarrow": 38, "hookrightarrow": 38, "hslash": 38, "humpdownhump": 38, "humpequ": 38, "iiiint": 38, "02a0c": 38, "quadrupl": 38, "iiint": 38, "0222d": 38, "02111": 38, "imaginaryi": 38, "02148": 38, "imaglin": 38, "02110": 38, "imagpart": 38, "impli": [38, 706, 1100], "02124": 38, "0222b": 38, "interc": 38, "022ba": 38, "intercal": 38, "intprod": 38, "02a3c": 38, "interior": 38, "invisiblecomma": 38, "02063": 38, "invis": [38, 470], "invisibletim": 38, "02062": 38, "langl": 38, "02329": 38, "laplacetrf": 38, "02112": 38, "lbrace": 38, "lbrack": 38, "leftanglebracket": 38, "leftarrow": 38, "leftarrowbar": 38, "021e4": 38, "leftarrowrightarrow": 38, "leftarrowtail": 38, "leftceil": 38, "02308": 38, "ceil": [38, 200, 213, 232, 1098], "leftdoublebracket": 38, "0301a": 38, "leftdownvector": 38, "leftfloor": 38, "0230a": 38, "leftharpoondown": 38, "leftharpoonup": 38, "leftleftarrow": 38, "leftrightarrow": 38, "leftrightharpoon": 38, "leftrightsquigarrow": 38, "leftte": 38, "leftteearrow": 38, "021a4": 38, "leftthreetim": 38, "022cb": 38, "semidirect": 38, "lefttriangl": 38, "lefttriangleequ": 38, "leftupvector": 38, "leftvector": 38, "leq": 38, "02264": 38, "leqq": 38, "leqslant": 38, "lessapprox": 38, "lessdot": 38, "lesseqgtr": 38, "lesseqqgtr": 38, "lessequalgreat": 38, "lessfullequ": 38, "lessgreat": 38, "lessgtr": 38, "lesssim": 38, "lessslantequ": 38, "lesstild": 38, "llcorner": 38, "0231e": 38, "bottom": [38, 187, 291, 485, 498, 771, 833, 852, 870, 970], "corner": [38, 201, 264, 335, 347, 427, 439, 498, 714], "lleftarrow": 38, "lmoustach": 38, "023b0": 38, "upper": [38, 173, 196, 220, 222, 228, 238, 253, 260, 274, 302, 311, 340, 344, 360, 384, 932, 1032], "lower": [38, 142, 196, 209, 215, 220, 225, 228, 232, 238, 253, 274, 302, 311, 340, 344, 360, 384, 444, 588, 933, 941, 990, 1095], "lnapprox": 38, "02a89": 38, "lneq": 38, "02a87": 38, "lneqq": 38, "02268": 38, "longleftarrow": 38, "longleftrightarrow": 38, "longmapsto": 38, "looparrowleft": 38, "looparrowright": 38, "lowerleftarrow": 38, "lowerrightarrow": 38, "025ca": 38, "lrcorner": 38, "0231f": 38, "lvertneqq": 38, "maltes": 38, "02720": 38, "mapsto": 38, "measuredangl": 38, "02221": 38, "measur": [38, 97, 120, 142, 232, 265, 269, 291, 410, 417, 463, 467, 489, 490, 491, 492, 493, 494, 495, 496, 500, 501, 542, 620, 726, 732, 799, 808, 899, 940, 964, 1076, 1078], "mellintrf": 38, "02133": 38, "minusplu": 38, "02213": 38, "napprox": 38, "02249": 38, "0266e": 38, "music": [38, 142, 270], "02115": 38, "nearrow": 38, "negativemediumspac": 38, "0200b": 38, "width": [38, 209, 215, 218, 219, 225, 228, 250, 258, 274, 340, 363, 452, 537, 561, 870, 941, 1016, 1079, 1129, 1136], "negativethickspac": 38, "negativethinspac": 38, "negativeverythinspac": 38, "nestedgreatergreat": 38, "nestedlessless": 38, "nexist": 38, "02204": 38, "ngeq": 38, "02271": 38, "neither": [38, 160, 442, 469, 483, 653, 818, 820, 821, 903, 1012], "nor": [38, 160, 216, 469, 483, 553, 653, 818, 820, 821, 870, 890, 903, 1012], "ngeqq": 38, "ngeqslant": 38, "ngtr": 38, "0226f": 38, "nleftarrow": 38, "nleftrightarrow": 38, "nleq": 38, "02270": 38, "nleqq": 38, "nleqslant": 38, "nless": 38, "0226e": 38, "nonbreakingspac": 38, "notcongru": 38, "02262": 38, "notdoubleverticalbar": 38, "02226": 38, "notel": 38, "02209": 38, "notequ": 38, "02260": 38, "notequaltild": 38, "notexist": 38, "notgreat": 38, "notgreaterequ": 38, "notgreaterfullequ": 38, "notgreatergreat": 38, "notgreaterless": 38, "02279": 38, "notgreaterslantequ": 38, "notgreatertild": 38, "02275": 38, "nothumpdownhump": 38, "notlefttriangl": 38, "022ea": 38, "notlefttriangleequ": 38, "022ec": 38, "notless": 38, "notlessequ": 38, "notlessgreat": 38, "02278": 38, "notlessless": 38, "notlessslantequ": 38, "notlesstild": 38, "02274": 38, "notpreced": 38, "02280": 38, "notprecedesequ": 38, "notprecedesslantequ": 38, "022e0": 38, "notreverseel": 38, "0220c": 38, "notrighttriangl": 38, "022eb": 38, "notrighttriangleequ": 38, "022ed": 38, "notsquaresubsetequ": 38, "022e2": 38, "notsquaresupersetequ": 38, "022e3": 38, "notsubset": 38, "020d2": 38, "notsubsetequ": 38, "02288": 38, "notsucce": 38, "02281": 38, "notsucceedsequ": 38, "notsucceedsslantequ": 38, "022e1": 38, "notsuperset": 38, "notsupersetequ": 38, "02289": 38, "nottild": 38, "02241": 38, "nottildeequ": 38, "02244": 38, "asymptot": 38, "nottildefullequ": 38, "02247": 38, "actual": [38, 42, 43, 48, 61, 142, 145, 150, 155, 172, 199, 209, 215, 218, 225, 228, 232, 259, 262, 264, 294, 320, 444, 454, 613, 620, 642, 700, 732, 870, 878, 902, 945, 968, 984, 993, 1026, 1074, 1076, 1078, 1097, 1112], "nottildetild": 38, "notverticalbar": 38, "02224": 38, "nparallel": 38, "nprec": 38, "npreceq": 38, "nrightarrow": 38, "nshortmid": 38, "nshortparallel": 38, "nsimeq": 38, "nsubset": 38, "nsubseteq": 38, "nsubseteqq": 38, "nsucc": 38, "nsucceq": 38, "nsupset": 38, "nsupseteq": 38, "nsupseteqq": 38, "ntriangleleft": 38, "ntrianglelefteq": 38, "ntriangleright": 38, "ntrianglerighteq": 38, "nwarrow": 38, "oint": 38, "opencurlydoublequot": 38, "opencurlyquot": 38, "orderof": 38, "02134": 38, "partiald": 38, "02202": 38, "partial": [38, 266, 751, 1075], "differenti": [38, 69, 636, 704, 773, 818, 877, 1002, 1070, 1084], "plusminu": 38, "poincareplan": 38, "0210c": 38, "prec": 38, "precapprox": 38, "preccurlyeq": 38, "precedesequ": 38, "precedesslantequ": 38, "precedestild": 38, "preceq": 38, "precnapprox": 38, "02ab9": 38, "precneqq": 38, "02ab5": 38, "precnsim": 38, "022e8": 38, "precsim": 38, "02119": 38, "propto": 38, "quaternion": 38, "0210d": 38, "questeq": 38, "rangl": 38, "0232a": 38, "0211a": 38, "q": [38, 113, 180, 232, 384, 390, 544, 562, 563, 577, 705, 810, 833, 865, 940, 1100], "rbrace": 38, "rbrack": 38, "0211c": 38, "realin": 38, "0211b": 38, "realpart": 38, "real": [38, 73, 114, 117, 118, 119, 131, 147, 150, 155, 158, 160, 176, 197, 210, 215, 216, 223, 225, 228, 232, 237, 240, 250, 258, 264, 273, 279, 291, 303, 364, 413, 420, 434, 440, 446, 463, 485, 493, 494, 495, 496, 497, 501, 543, 544, 549, 664, 679, 697, 700, 734, 773, 810, 811, 833, 870, 878, 890, 931, 1017, 1071, 1074, 1076, 1106, 1125, 1128], "0211d": 38, "reverseel": 38, "0220b": 38, "reverseequilibrium": 38, "reverseupequilibrium": 38, "rightanglebracket": 38, "rightarrowbar": 38, "021e5": 38, "rightarrowleftarrow": 38, "rightarrowtail": 38, "rightceil": 38, "02309": 38, "rightdoublebracket": 38, "0301b": 38, "rightdownvector": 38, "rightfloor": 38, "0230b": 38, "rightharpoondown": 38, "rightharpoonup": 38, "rightleftarrow": 38, "rightleftharpoon": 38, "rightrightarrow": 38, "rightsquigarrow": 38, "rightte": 38, "rightteearrow": 38, "rightthreetim": 38, "022cc": 38, "righttriangl": 38, "righttriangleequ": 38, "rightupvector": 38, "rightvector": 38, "risingdotseq": 38, "rmoustach": 38, "023b1": 38, "rrightarrow": 38, "searrow": 38, "setminu": 38, "shortdownarrow": 38, "shortleftarrow": 38, "shortmid": 38, "shortparallel": 38, "shortrightarrow": 38, "shortuparrow": 38, "simeq": 38, "02243": 38, "smallcircl": 38, "02218": 38, "smallsetminu": 38, "spadesuit": 38, "02660": 38, "sqrt": [38, 200, 213, 544, 546, 554, 555, 563, 649, 664, 665, 666, 667, 668, 705, 1098], "0221a": 38, "sqsubset": 38, "sqsubseteq": 38, "sqsupset": 38, "sqsupseteq": 38, "025a1": 38, "squareintersect": 38, "02293": 38, "cap": [38, 212, 1028], "squaresubset": 38, "squaresubsetequ": 38, "squaresuperset": 38, "squaresupersetequ": 38, "squareunion": 38, "02294": 38, "cup": [38, 270], "022c6": 38, "straightepsilon": 38, "003f5": 38, "straightphi": 38, "003d5": 38, "phi": 38, "subseteq": 38, "02286": 38, "subseteqq": 38, "subsetequ": 38, "subsetneq": 38, "0228a": 38, "subsetneqq": 38, "02acb": 38, "succ": 38, "succapprox": 38, "succcurlyeq": 38, "succeedsequ": 38, "succeedsslantequ": 38, "succeedstild": 38, "succeq": 38, "succnapprox": 38, "02aba": 38, "succneqq": 38, "02ab6": 38, "succnsim": 38, "022e9": 38, "succsim": 38, "suchthat": 38, "02211": 38, "summat": 38, "supersetequ": 38, "02287": 38, "supset": 38, "supseteq": 38, "supseteqq": 38, "supsetneq": 38, "0228b": 38, "supsetneqq": 38, "02acc": 38, "swarrow": 38, "therefor": [38, 130, 140], "02234": 38, "thickapprox": 38, "thicksim": 38, "thinspac": 38, "02009": 38, "tildeequ": 38, "tildefullequ": 38, "02245": 38, "tildetild": 38, "toea": 38, "tosa": 38, "025b5": 38, "triangledown": 38, "025bf": 38, "triangleleft": 38, "025c3": 38, "trianglelefteq": 38, "triangleq": 38, "triangleright": 38, "025b9": 38, "trianglerighteq": 38, "tripledot": 38, "020db": 38, "combin": [38, 85, 108, 110, 111, 143, 161, 192, 248, 369, 380, 385, 402, 410, 441, 450, 462, 476, 490, 542, 577, 616, 694, 726, 755, 813, 815, 817, 833, 855, 866, 903, 904, 906, 953, 1006, 1021, 1037, 1090, 1125], "twoheadleftarrow": 38, "twoheadrightarrow": 38, "ulcorn": 38, "0231c": 38, "unionplu": 38, "0228e": 38, "multiset": 38, "uparrow": 38, "uparrowdownarrow": 38, "updownarrow": 38, "upequilibrium": 38, "upharpoonleft": 38, "upharpoonright": 38, "upperleftarrow": 38, "upperrightarrow": 38, "upsilon": 38, "003c5": 38, "upte": 38, "upteearrow": 38, "021a5": 38, "upuparrow": 38, "urcorn": 38, "0231d": 38, "varepsilon": 38, "003b5": 38, "varkappa": 38, "003f0": 38, "kappa": 38, "varnoth": 38, "varphi": 38, "003c6": 38, "varpi": 38, "003d6": 38, "varpropto": 38, "varrho": 38, "003f1": 38, "rho": 38, "varsigma": 38, "003c2": 38, "sigma": [38, 232], "varsubsetneq": 38, "variant": [38, 184, 200, 213, 243, 244, 245, 298, 340, 356, 473, 537, 690, 694, 696, 719, 751, 1098, 1132, 1135], "varsubsetneqq": 38, "varsupsetneq": 38, "varsupsetneqq": 38, "vartheta": 38, "003d1": 38, "theta": 38, "vartriangleleft": 38, "vartriangleright": 38, "vee": 38, "02228": 38, "vert": 38, "02016": 38, "verticalbar": 38, "verticaltild": 38, "02240": 38, "wreath": 38, "verythinspac": 38, "0200a": 38, "hair": 38, "wedg": 38, "02227": 38, "wp": 38, "02118": 38, "wr": 38, "zeetrf": 38, "02128": 38, "restructured text": 39, "cheat sheet": 39, "restructur": 39, "guid": [39, 124, 145, 155, 176, 201, 337, 417, 495, 647, 744, 759, 812], "author": [39, 143, 150, 228, 560, 746, 877, 1026, 1080], "overridden": [39, 363, 614, 681, 1105], "titl": [39, 40, 136, 146, 210, 223, 228, 237, 240, 273, 274, 279, 987, 1071, 1076], "favorit": [39, 172, 176, 179, 197, 201, 223, 226, 303, 773, 879, 931, 995, 1071], "__": [39, 157, 159, 167, 274, 695, 699, 991], "ref": [39, 113, 155, 244, 245, 642, 657, 701, 721], "uniqu": [39, 155, 202, 244, 245, 247, 298, 501, 520, 702, 714, 721, 723, 725, 726, 879, 893, 907, 966, 1019, 1023, 1093], "across": [39, 43, 140, 147, 157, 209, 215, 225, 228, 258, 267, 291, 335, 363, 383, 407, 442, 447, 466, 529, 705, 716, 724, 800, 801, 812, 830, 877, 879, 899, 907, 941, 1002, 1013, 1080], "tree": [39, 42, 100, 102, 113, 130, 132, 141, 143, 146, 151, 155, 168, 169, 176, 200, 213, 216, 219, 223, 256, 284, 287, 393, 415, 420, 432, 464, 499, 501, 598, 601, 726, 748, 751, 765, 775, 798, 800, 801, 803, 817, 833, 834, 841, 845, 847, 853, 862, 869, 878, 883, 885, 890, 910, 918, 927, 950, 955, 975, 987, 1078, 1096, 1098, 1105, 1107], "_dummi": 39, "dummi": [39, 146, 323, 324, 753, 792, 1112], "One": [39, 43, 59, 62, 63, 76, 80, 82, 97, 106, 140, 142, 151, 168, 179, 200, 218, 239, 240, 265, 303, 317, 328, 344, 384, 397, 406, 409, 418, 420, 425, 431, 436, 442, 501, 520, 528, 543, 562, 567, 577, 582, 647, 681, 706, 716, 773, 778, 804, 806, 809, 817, 833, 877, 878, 879, 903, 915, 920, 931, 932, 940, 945, 950, 982, 1006, 1079, 1080, 1084, 1089, 1127, 1141], "a_footnot": 39, "footer": 39, "block": [39, 98, 110, 111, 139, 140, 141, 142, 180, 182, 200, 207, 209, 213, 215, 225, 228, 237, 240, 249, 270, 273, 291, 302, 317, 322, 326, 340, 342, 360, 379, 385, 386, 392, 396, 399, 403, 411, 412, 414, 416, 421, 422, 449, 549, 552, 644, 670, 682, 701, 712, 713, 714, 715, 716, 723, 724, 725, 726, 759, 775, 785, 789, 803, 804, 806, 807, 809, 810, 855, 869, 878, 902, 909, 910, 915, 920, 924, 925, 930, 932, 940, 941, 944, 946, 968, 970, 996, 999, 1006, 1009, 1071], "rubric": 39, "nbsphinx": 40, "capabl": [40, 78, 140, 141, 147, 711, 773, 799, 862, 870, 878, 931, 1097, 1128], "nice": [40, 137, 140, 157, 180, 202, 267, 419, 420, 440, 488, 555, 642, 792, 799, 872, 878, 929, 992, 1028, 1076, 1078, 1087, 1093, 1108], "few": [40, 140, 141, 142, 143, 146, 147, 172, 176, 209, 338, 408, 659, 773, 811, 970, 974, 1106, 1130], "keep": [40, 43, 110, 111, 141, 142, 155, 164, 176, 179, 183, 199, 232, 303, 328, 352, 408, 414, 415, 624, 664, 765, 773, 778, 797, 812, 815, 871, 923, 959, 962, 982, 999, 1076, 1077, 1125], "mind": [40, 140, 141, 341, 708, 999], "though": [40, 43, 45, 53, 68, 139, 140, 145, 147, 150, 151, 155, 156, 161, 168, 172, 176, 178, 179, 197, 200, 202, 213, 215, 216, 218, 223, 226, 240, 249, 258, 259, 262, 273, 294, 303, 344, 354, 363, 375, 380, 442, 443, 444, 447, 456, 464, 466, 499, 500, 501, 520, 544, 546, 547, 551, 554, 557, 560, 561, 563, 564, 577, 578, 613, 620, 642, 650, 652, 659, 664, 670, 687, 691, 696, 701, 702, 705, 712, 727, 728, 732, 751, 765, 804, 811, 812, 815, 818, 852, 866, 870, 877, 878, 879, 889, 897, 899, 926, 931, 933, 935, 941, 950, 968, 970, 971, 974, 979, 981, 988, 990, 998, 1002, 1015, 1040, 1071, 1078, 1079, 1092, 1100, 1101, 1105, 1107, 1125, 1128], "toplevel": [40, 44, 109, 113, 168, 201, 250, 428, 430, 434, 435, 436, 438, 485, 746, 774, 799, 968, 1114], "begin": [40, 42, 43, 116, 119, 120, 122, 139, 140, 150, 178, 199, 200, 212, 215, 228, 232, 244, 245, 249, 266, 274, 334, 340, 348, 360, 363, 384, 390, 407, 408, 410, 440, 447, 537, 547, 560, 573, 575, 577, 578, 579, 581, 582, 584, 585, 586, 588, 589, 590, 591, 595, 598, 609, 642, 657, 670, 673, 677, 684, 690, 691, 694, 708, 726, 799, 833, 857, 865, 891, 899, 975, 999, 1021, 1071, 1106], "deeper": [40, 141, 172, 259, 262, 429, 926], "trail": [40, 144, 228, 270, 274, 292, 308, 309], "underscor": [40, 357, 971, 978, 991, 1001], "ipynb": [40, 159, 179, 189, 191, 228, 238, 259, 263, 269, 273, 279, 284, 287, 291, 295, 1073, 1077], "labels_": [40, 161, 163], "result": [40, 78, 114, 119, 133, 142, 151, 157, 159, 179, 183, 199, 209, 215, 218, 225, 228, 232, 241, 250, 270, 274, 347, 363, 398, 405, 407, 408, 414, 444, 469, 473, 560, 588, 649, 655, 664, 692, 744, 889, 935, 963, 975, 990, 1004, 1010, 1022, 1079], "cluster": [40, 163, 1073, 1078], "membership": [40, 161, 178, 179, 221, 456, 1003, 1020], "sequenc": [40, 106, 109, 133, 160, 161, 163, 173, 179, 200, 202, 211, 213, 214, 215, 218, 221, 225, 228, 232, 250, 265, 267, 274, 280, 339, 393, 444, 490, 505, 506, 507, 542, 587, 606, 610, 626, 639, 647, 694, 726, 932, 975, 976, 977, 993, 1002, 1003, 1008, 1010, 1013, 1017, 1018, 1041, 1053, 1084, 1098, 1128], "bring": [40, 45, 120, 133, 140, 142, 150, 151, 172, 176, 179, 182, 218, 256, 259, 262, 265, 267, 291, 294, 325, 330, 331, 335, 520, 559, 598, 622, 633, 641, 769, 773, 785, 877, 878, 879, 948, 995, 1043, 1066, 1084, 1125, 1128], "bigplan": [40, 163, 1073], "686": [40, 161, 215, 961], "unknown": [40, 258, 426, 729, 878, 984], "cmd": [40, 146, 767, 792, 1107], "color": [40, 145, 163, 855, 1073, 1100], "tmp": [40, 122, 136, 141, 143, 146, 183, 196, 199, 215, 220, 228, 232, 235, 238, 240, 245, 247, 250, 253, 260, 270, 274, 280, 349, 391, 414, 427, 432, 433, 440, 501, 502, 622, 699, 751, 773, 795, 799, 804, 813, 817, 818, 831, 832, 833, 835, 837, 838, 840, 842, 845, 852, 855, 856, 861, 882, 889, 900, 901, 903, 904, 906, 931, 937, 968, 969, 970, 975, 983, 984, 990, 991, 1012, 1013, 1017, 1021, 1027, 1083, 1092, 1093, 1106, 1107], "craft": [41, 46, 47, 51, 53, 55, 56, 226, 268, 269, 424, 469, 706, 726, 727], "tar": [42, 61, 109, 113, 127, 136, 151, 180, 182, 246, 255, 256, 276, 277, 420, 726, 773, 795, 796, 798, 803, 869, 955, 957, 958, 959, 961, 962, 968, 1026, 1107, 1131], "xz": [42, 61, 143, 151, 256, 413, 955, 959, 961, 962], "push": [42, 77, 122, 144, 146, 155, 158, 201, 216, 226, 283, 323, 385, 430, 431, 442, 466, 714, 726, 773, 915, 933, 1046, 1050, 1105], "cmakelist": [42, 44, 113, 166, 167, 168, 169, 170, 201, 218, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 485, 498, 499, 500, 501, 502, 521, 524, 527, 528, 530, 533, 536, 539, 633, 936, 939, 943, 948, 949, 1111, 1114, 1116], "src": [42, 140, 141, 143, 201, 215, 245, 247, 253, 323, 352, 364, 414, 438, 439, 449, 485, 488, 498, 499, 500, 501, 503, 562, 579, 700, 701, 799, 817, 861, 1021, 1026, 1105], "load": [42, 43, 53, 56, 63, 75, 88, 139, 150, 151, 158, 159, 163, 179, 187, 188, 204, 205, 209, 215, 225, 228, 232, 235, 241, 250, 267, 268, 269, 285, 288, 290, 291, 400, 420, 432, 715, 725, 726, 729, 730, 732, 733, 735, 738, 740, 741, 743, 748, 750, 753, 754, 758, 764, 767, 769, 770, 773, 775, 777, 782, 785, 788, 791, 794, 809, 869, 878, 879, 910, 918, 924, 947, 964, 1071, 1089, 1130, 1139, 1141], "store": [42, 57, 63, 75, 88, 106, 115, 139, 141, 158, 160, 168, 169, 199, 202, 209, 267, 268, 269, 290, 291, 348, 400, 444, 626, 670, 684, 687, 694, 715, 725, 726, 739, 773, 812, 825, 869, 886, 910, 918, 924, 948, 966, 970, 971, 975, 1019, 1049, 1083, 1100, 1141], "search": [42, 51, 53, 106, 133, 135, 136, 140, 161, 164, 170, 172, 178, 179, 188, 199, 200, 202, 205, 209, 212, 213, 215, 218, 219, 220, 223, 225, 228, 241, 250, 253, 257, 260, 265, 270, 274, 280, 282, 384, 411, 414, 426, 490, 501, 503, 507, 542, 587, 592, 606, 610, 627, 639, 726, 751, 815, 833, 865, 926, 948, 961, 978, 1007, 1077, 1098, 1105, 1127], "payload": [42, 734, 761, 871, 873], "primari": [42, 140, 151, 172, 258, 259, 262, 418, 771, 800, 801, 808, 810, 1049], "insert": [42, 63, 109, 134, 139, 155, 159, 176, 178, 183, 213, 215, 218, 220, 222, 228, 232, 235, 253, 274, 280, 292, 317, 381, 398, 402, 418, 445, 451, 473, 479, 490, 507, 508, 509, 520, 537, 542, 578, 579, 592, 602, 603, 627, 635, 636, 637, 639, 646, 653, 655, 670, 691, 722, 724, 726, 751, 757, 767, 769, 773, 833, 877, 890, 921, 931, 1003, 1018, 1019, 1027, 1083, 1105], "const": [42, 58, 70, 97, 107, 109, 110, 111, 113, 115, 167, 202, 218, 265, 267, 298, 352, 360, 364, 382, 384, 390, 398, 410, 412, 414, 416, 421, 422, 427, 443, 445, 446, 447, 449, 451, 466, 467, 473, 474, 475, 478, 479, 480, 482, 483, 484, 490, 494, 498, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 518, 519, 520, 528, 533, 535, 537, 542, 544, 545, 546, 547, 549, 551, 552, 558, 559, 560, 561, 562, 563, 564, 565, 567, 568, 570, 571, 577, 581, 583, 584, 585, 586, 587, 593, 597, 599, 602, 603, 606, 609, 610, 613, 616, 617, 620, 622, 623, 624, 627, 628, 631, 632, 634, 635, 636, 637, 638, 639, 646, 648, 649, 650, 651, 652, 653, 654, 655, 664, 665, 666, 667, 668, 670, 672, 673, 676, 677, 678, 679, 680, 682, 684, 685, 686, 687, 689, 690, 692, 694, 698, 700, 701, 702, 703, 704, 707, 715, 716, 720, 721, 722, 723, 724, 725, 726, 729, 732, 737, 753, 755, 759, 767, 769, 783, 787, 793, 891, 899, 903, 904, 905, 906, 909, 911, 914, 916, 918, 920, 928, 934, 937, 940, 941, 945, 965, 983, 1059, 1082, 1117, 1123, 1124], "care": [42, 46, 48, 80, 139, 140, 142, 145, 147, 172, 180, 212, 308, 340, 363, 372, 374, 390, 414, 415, 438, 469, 470, 545, 559, 577, 620, 691, 692, 696, 705, 720, 727, 751, 763, 765, 773, 778, 799, 800, 801, 878, 886, 890, 902, 915, 923, 949, 971, 995, 999, 1011, 1018, 1021, 1022, 1028, 1051, 1075, 1083, 1096, 1107], "dump": [42, 140, 159, 188, 204, 205, 215, 228, 232, 235, 241, 250, 285, 288, 291, 449, 468, 469, 552, 557, 680, 700, 811, 944, 945], "db": [42, 50, 150, 176, 201, 202, 203, 207, 213, 226, 241, 430, 444, 445, 451, 473, 479, 634, 635, 636, 637, 638, 706, 1027], "pull": [42, 44, 50, 63, 77, 113, 120, 144, 155, 192, 201, 202, 216, 302, 325, 426, 430, 442, 559, 746, 773, 975, 978, 1095], "paramet": [42, 58, 63, 110, 111, 115, 117, 139, 142, 147, 157, 160, 167, 168, 172, 177, 178, 179, 181, 183, 191, 192, 196, 199, 200, 201, 202, 209, 213, 215, 218, 219, 221, 224, 225, 228, 235, 238, 259, 260, 262, 264, 303, 308, 317, 339, 348, 350, 354, 365, 369, 384, 385, 390, 392, 393, 396, 399, 403, 404, 410, 412, 416, 421, 422, 425, 427, 432, 488, 498, 504, 520, 534, 544, 546, 549, 553, 556, 557, 560, 564, 569, 570, 624, 630, 644, 647, 654, 670, 682, 684, 689, 702, 714, 723, 725, 726, 731, 732, 739, 753, 776, 781, 786, 789, 792, 793, 813, 815, 878, 893, 916, 926, 941, 949, 962, 966, 971, 985, 988, 993, 1000, 1016, 1023, 1028, 1038, 1044, 1046, 1050, 1056, 1065, 1076, 1079, 1082, 1089, 1092, 1093, 1095, 1098, 1121, 1122], "entri": [42, 137, 141, 142, 146, 204, 215, 339, 439, 455, 598, 600, 620, 761, 799, 812, 816, 817, 818, 855, 861, 893, 899, 913, 964, 971, 1019, 1082, 1114], "o_creat": [42, 726, 869, 899, 900, 904, 908, 910, 927, 940], "o_trunc": [42, 48, 899], "o_wronli": [42, 726, 869, 899, 900, 902, 903, 904, 908, 909, 910, 911, 914, 927, 940], "0666": [42, 832, 903, 904, 940], "assert": [42, 46, 176, 200, 213, 225, 228, 242, 258, 291, 293, 426, 449, 591, 632, 635, 637, 643, 716, 897, 909, 911, 914, 940, 944, 945, 983, 1059, 1066, 1067, 1068, 1098, 1105, 1111, 1112, 1114, 1122], "ing": [42, 905], "mode": [42, 101, 113, 143, 155, 157, 192, 200, 209, 212, 213, 215, 225, 228, 232, 235, 253, 256, 260, 274, 277, 291, 414, 490, 542, 715, 725, 726, 732, 765, 771, 799, 800, 801, 803, 806, 807, 810, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 833, 869, 872, 879, 893, 898, 899, 900, 908, 910, 924, 927, 930, 932, 940, 941, 996, 998, 1098, 1100], "binaryus": 42, "hton": [42, 896], "arpa": [42, 896], "inet": [42, 157, 896], "again": [42, 99, 113, 139, 140, 142, 145, 147, 151, 155, 156, 168, 172, 176, 178, 179, 180, 192, 201, 226, 231, 240, 246, 249, 255, 256, 273, 276, 279, 317, 318, 319, 322, 323, 328, 335, 336, 385, 426, 448, 452, 462, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 537, 542, 544, 546, 559, 560, 564, 574, 653, 664, 706, 714, 715, 721, 724, 725, 726, 793, 796, 800, 801, 802, 803, 806, 807, 814, 817, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 863, 869, 879, 886, 889, 892, 894, 896, 897, 898, 900, 905, 908, 910, 911, 920, 924, 926, 927, 930, 932, 941, 949, 951, 952, 953, 954, 955, 956, 957, 958, 968, 988, 993, 1011, 1016, 1021, 1071, 1089, 1092, 1125], "od": [42, 228], "hardwir": [42, 63, 734, 895, 988], "enter": [42, 110, 111, 173, 180, 209, 214, 215, 225, 228, 237, 238, 240, 241, 258, 291, 292, 302, 317, 322, 342, 537, 560, 619, 653, 659, 670, 702, 751, 773, 789, 806, 829, 931, 932, 1006, 1058], "joerg": [42, 50, 122, 159, 173, 174, 176, 177, 179, 181, 188, 192, 196, 199, 205, 212, 215, 218, 220, 222, 225, 228, 232, 235, 238, 241, 250, 253, 260, 267, 269, 270, 274, 280, 285, 292, 311, 314, 409, 436, 444, 451, 485, 501, 503, 519, 557, 591, 603, 622, 632, 633, 634, 635, 637, 654, 800, 801, 808, 810, 815, 829, 845, 858, 864, 889, 926, 984, 985, 987, 988, 989, 991, 992, 1000, 1022, 1026, 1049, 1066, 1079, 1088, 1089, 1090, 1092, 1093, 1094, 1095], "huber": [42, 222, 228, 1079], "caro": [42, 212, 222, 225, 232, 235, 238, 241, 250, 253, 260, 274, 292, 444, 451, 503, 519, 591, 603, 635, 637, 987, 989, 1009, 1060, 1062, 1066, 1068, 1088, 1089, 1090, 1092, 1093, 1094, 1095], "johanna": [42, 212, 222, 225, 232, 235, 253, 260, 274, 292, 444, 503, 519, 591, 603, 1009, 1060, 1062, 1066, 1068, 1088, 1089, 1090, 1092, 1093, 1094, 1095], "bodi": [42, 50, 55, 110, 111, 146, 339, 340, 342, 346, 375, 385, 414, 504, 537, 546, 547, 551, 554, 624, 642, 643, 646, 705, 975, 1106], "compil": [42, 43, 65, 103, 104, 108, 110, 111, 113, 141, 142, 151, 160, 167, 168, 169, 188, 202, 205, 218, 225, 241, 250, 253, 256, 257, 265, 274, 280, 282, 325, 337, 350, 359, 360, 369, 372, 374, 381, 382, 391, 393, 400, 403, 406, 407, 408, 409, 410, 412, 413, 414, 416, 417, 418, 419, 421, 422, 426, 430, 433, 435, 438, 439, 442, 448, 462, 464, 469, 470, 483, 484, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 528, 534, 537, 542, 544, 547, 549, 553, 555, 559, 570, 598, 617, 624, 629, 631, 642, 643, 644, 645, 647, 649, 650, 652, 653, 655, 657, 659, 664, 667, 670, 679, 680, 682, 688, 691, 692, 694, 696, 700, 701, 723, 725, 726, 741, 742, 757, 869, 877, 948, 949, 952, 953, 954, 955, 957, 971, 996, 1001, 1013, 1015, 1112, 1114, 1122, 1123, 1125, 1126, 1127, 1138], "still": [42, 54, 61, 128, 134, 139, 140, 141, 142, 150, 151, 160, 161, 162, 202, 212, 218, 256, 258, 308, 328, 337, 388, 400, 426, 429, 435, 488, 510, 531, 534, 552, 553, 574, 580, 613, 628, 653, 670, 687, 691, 696, 700, 701, 703, 704, 705, 736, 741, 773, 776, 816, 830, 852, 877, 878, 879, 929, 931, 933, 944, 966, 974, 977, 983, 996, 999, 1002, 1026, 1062, 1085, 1093, 1114, 1122], "funni": [42, 44, 50, 100, 113, 172, 256, 447, 726, 803, 841, 847, 853, 869, 948], "temp": [42, 44, 228, 326, 700, 701, 702], "got": [42, 45, 140, 150, 202, 274, 384, 656, 899, 972], "overwritten": [42, 47, 53, 55, 56, 579, 726, 900, 978], "suspect": [42, 142, 144], "inmem": 42, "loos": [42, 43, 176, 192, 338, 363, 410, 763], "foolishli": 42, "main": [42, 50, 63, 107, 133, 142, 145, 146, 151, 179, 201, 213, 225, 226, 228, 245, 256, 264, 267, 269, 282, 284, 287, 291, 317, 337, 339, 340, 342, 346, 348, 350, 351, 365, 380, 381, 382, 384, 388, 400, 407, 411, 414, 415, 418, 420, 426, 427, 429, 433, 449, 463, 468, 469, 470, 485, 486, 488, 496, 498, 500, 501, 520, 528, 531, 534, 548, 552, 553, 555, 557, 559, 560, 562, 572, 573, 574, 575, 576, 579, 580, 581, 582, 583, 585, 586, 589, 590, 591, 595, 599, 600, 601, 602, 603, 609, 613, 614, 617, 619, 620, 626, 631, 632, 633, 634, 635, 636, 637, 638, 642, 647, 657, 660, 661, 662, 665, 666, 667, 668, 670, 671, 672, 674, 675, 676, 677, 678, 679, 680, 684, 686, 687, 689, 692, 694, 700, 701, 703, 704, 705, 706, 709, 714, 716, 724, 734, 741, 742, 744, 773, 810, 812, 830, 877, 879, 880, 893, 895, 896, 897, 903, 904, 905, 906, 911, 914, 915, 917, 921, 926, 928, 931, 932, 937, 940, 941, 944, 947, 955, 959, 965, 979, 982, 997, 1061, 1063, 1112, 1117, 1130], "chang": [42, 45, 77, 80, 113, 118, 139, 142, 144, 145, 146, 147, 150, 151, 155, 163, 176, 192, 201, 232, 240, 324, 363, 400, 402, 406, 409, 410, 414, 424, 427, 442, 487, 493, 498, 499, 501, 502, 553, 578, 635, 689, 714, 724, 746, 751, 799, 808, 810, 812, 830, 839, 842, 857, 870, 872, 877, 878, 889, 893, 914, 944, 947, 962, 978, 1002, 1011, 1050, 1061, 1063, 1066, 1089, 1093, 1108, 1125], "errorhandl": 42, "just": [42, 46, 63, 69, 84, 108, 130, 139, 140, 141, 142, 143, 144, 146, 147, 151, 155, 162, 164, 168, 172, 179, 202, 213, 216, 241, 282, 291, 305, 346, 365, 390, 393, 402, 420, 424, 429, 439, 444, 485, 488, 498, 500, 501, 502, 525, 544, 545, 546, 552, 555, 556, 557, 560, 579, 607, 614, 620, 624, 628, 642, 649, 653, 655, 656, 670, 685, 688, 702, 704, 706, 724, 731, 736, 744, 746, 753, 757, 763, 765, 773, 789, 812, 833, 836, 837, 866, 870, 878, 879, 894, 896, 897, 903, 904, 906, 915, 916, 926, 933, 941, 959, 966, 969, 970, 973, 975, 993, 994, 1000, 1001, 1002, 1009, 1013, 1021, 1022, 1076, 1077, 1084, 1089, 1090, 1094, 1095, 1101, 1105, 1117, 1127], "silent": [42, 65, 222, 232, 646, 877], "truncat": [42, 228, 274, 340, 361, 463, 815, 899, 1021], "faschingb": 42, "echo": [42, 141, 192, 228, 256, 303, 501, 626, 746, 755, 773, 800, 801, 804, 805, 813, 817, 827, 836, 839, 843, 852, 870, 872, 877, 878, 879, 880, 900, 902, 911, 913, 914, 926, 929, 935, 944, 1107], "success": [42, 169, 209, 215, 225, 228, 401, 430, 659, 712, 751, 755, 845, 1037], "failur": [42, 43, 209, 215, 225, 228, 240, 245, 274, 302, 410, 420, 426, 440, 498, 502, 1105, 1106, 1113, 1114, 1117], "renam": [42, 50, 57, 63, 66, 99, 113, 133, 199, 246, 255, 256, 276, 277, 537, 689, 726, 741, 742, 803, 840, 853, 869, 965, 1083], "most": [43, 44, 57, 59, 62, 65, 87, 136, 139, 140, 142, 143, 146, 151, 162, 164, 170, 172, 176, 178, 200, 209, 212, 215, 216, 225, 226, 228, 232, 238, 258, 260, 274, 294, 302, 338, 346, 375, 378, 385, 400, 402, 408, 413, 414, 418, 419, 429, 443, 456, 499, 559, 560, 598, 650, 694, 699, 702, 708, 751, 759, 773, 778, 798, 800, 801, 804, 811, 835, 866, 870, 877, 879, 891, 899, 905, 918, 933, 941, 944, 945, 947, 968, 969, 970, 975, 982, 983, 984, 990, 991, 999, 1001, 1002, 1003, 1006, 1009, 1012, 1013, 1017, 1019, 1022, 1023, 1028, 1070, 1071, 1080, 1084, 1088, 1092, 1093, 1099, 1101, 1105, 1106, 1112, 1127, 1128, 1130], "somebodi": [43, 147, 155, 168, 202, 352, 409, 430, 528, 552, 604, 664, 670, 681, 712, 763, 781, 935], "concis": [43, 139, 172, 176, 226, 318, 319, 429, 773, 1071], "longer": [43, 155, 935, 996, 1125], "necessari": [43, 61, 133, 141, 147, 151, 160, 169, 183, 199, 202, 259, 262, 294, 342, 352, 384, 424, 426, 430, 442, 488, 547, 551, 619, 645, 646, 680, 690, 702, 714, 769, 773, 808, 877, 879, 880, 895, 933, 944, 964, 991, 998, 1002, 1026, 1083, 1105], "gosh": [43, 136, 363, 408, 410, 604, 687, 923, 968, 969, 975, 1002], "hungarian": [43, 404], "notat": [43, 167, 207, 223, 228, 233, 274, 404, 717, 878, 984], "userdb": [43, 47, 48, 51, 53, 54, 56, 57, 202, 204, 218, 226, 273, 284, 287, 627, 635, 636, 637, 639, 726, 1060, 1061, 1062, 1063, 1068], "bolt": [43, 202], "onto": [43, 59, 62, 150, 161, 202, 218, 291, 466, 548, 625, 639, 702, 726, 773, 858, 870, 878, 897, 929, 952, 959], "unclear": [43, 491, 945], "semant": [43, 49, 81, 140, 164, 244, 245, 247, 265, 395, 409, 410, 464, 545, 598, 604, 643, 650, 682, 698, 701, 702, 703, 704, 707, 715, 723, 725, 726, 732, 737, 765, 944, 945, 1002, 1080, 1125], "backingstor": [43, 53, 56, 726], "mangl": [43, 199, 200, 213, 230, 996, 1098], "prefix": [43, 61, 136, 151, 209, 213, 215, 225, 228, 274, 310, 556, 586, 642, 773, 959, 961, 968, 990, 991, 1016, 1023, 1107], "m_": 43, "enough": [43, 143, 147, 164, 172, 222, 232, 265, 274, 328, 352, 443, 619, 877, 890, 918, 948, 970, 987, 995, 1016, 1084, 1089, 1096, 1099, 1106, 1127], "take": [43, 48, 86, 102, 110, 111, 114, 133, 134, 139, 140, 141, 144, 145, 146, 147, 150, 155, 157, 160, 161, 163, 168, 172, 173, 178, 179, 180, 200, 213, 218, 220, 228, 232, 238, 262, 302, 303, 308, 317, 347, 384, 387, 404, 406, 413, 415, 419, 420, 424, 425, 427, 442, 443, 466, 467, 469, 470, 488, 498, 501, 514, 520, 534, 546, 553, 557, 560, 562, 600, 624, 642, 647, 654, 655, 664, 692, 694, 700, 704, 714, 736, 763, 773, 799, 800, 801, 877, 907, 935, 959, 965, 969, 973, 995, 1011, 1012, 1028, 1035, 1038, 1040, 1044, 1045, 1046, 1049, 1050, 1051, 1053, 1055, 1065, 1070, 1078, 1079, 1084, 1089, 1098, 1100, 1107], "dogmat": [43, 218, 335, 1084], "switch": [43, 45, 54, 58, 59, 62, 110, 111, 113, 114, 116, 120, 141, 145, 147, 159, 160, 201, 209, 215, 225, 226, 228, 303, 304, 306, 323, 326, 329, 359, 373, 377, 379, 386, 392, 396, 399, 401, 403, 412, 416, 419, 421, 422, 426, 429, 442, 456, 490, 491, 492, 542, 603, 643, 644, 682, 723, 725, 726, 753, 771, 778, 787, 790, 792, 806, 810, 870, 873, 931, 964, 1122, 1126], "bool": [43, 50, 53, 55, 56, 119, 183, 190, 212, 215, 218, 220, 222, 225, 228, 235, 238, 253, 257, 258, 260, 264, 274, 434, 436, 503, 504, 508, 510, 515, 544, 546, 560, 561, 562, 563, 564, 582, 585, 591, 600, 647, 659, 660, 661, 662, 670, 673, 677, 684, 714, 716, 726, 786, 793, 931, 937, 944, 1002, 1028, 1090, 1095], "wear": [43, 137, 141], "incorrect": [43, 209, 215, 225, 228, 232, 363, 382, 1096], "metaphor": 43, "But": [43, 140, 141, 142, 145, 156, 192, 201, 291, 346, 352, 381, 384, 390, 393, 406, 408, 414, 424, 543, 544, 552, 557, 558, 559, 577, 595, 613, 614, 652, 655, 691, 700, 704, 706, 726, 755, 757, 773, 783, 800, 801, 855, 869, 877, 878, 879, 886, 900, 908, 910, 915, 923, 927, 950, 964, 966, 987, 990, 996, 1076, 1079, 1090], "support": [43, 78, 141, 143, 147, 151, 160, 164, 176, 188, 190, 209, 212, 215, 220, 222, 225, 228, 232, 235, 250, 253, 260, 292, 313, 382, 406, 420, 426, 543, 544, 546, 650, 702, 706, 720, 724, 729, 765, 855, 877, 878, 879, 889, 941, 947, 975, 983, 990, 996, 1013, 1026, 1076, 1078, 1093, 1112], "copy_process": 43, "law": [43, 192, 314, 357, 402, 970, 1095], "tdd": [43, 113, 171, 176, 186, 226, 268, 284, 287, 291, 336, 1105], "until": [43, 55, 97, 98, 99, 102, 105, 110, 111, 113, 117, 119, 128, 130, 140, 142, 144, 146, 191, 200, 212, 231, 249, 269, 374, 380, 405, 408, 502, 562, 626, 670, 676, 714, 716, 741, 761, 771, 781, 783, 789, 806, 810, 817, 833, 845, 852, 894, 895, 896, 897, 920, 934, 941, 945, 974, 975, 996, 1004, 1006, 1071], "fail": [43, 44, 136, 140, 142, 150, 151, 155, 167, 172, 202, 228, 245, 277, 302, 328, 427, 430, 440, 449, 498, 629, 650, 652, 659, 664, 724, 726, 751, 773, 852, 869, 879, 900, 905, 908, 910, 925, 926, 927, 944, 964, 968, 970, 979, 1021, 1037, 1093, 1106, 1107, 1111, 1113, 1115], "suffici": [43, 155, 160, 172, 303, 551, 579, 620, 624, 635, 643, 746, 855, 945, 993, 995, 1023, 1106], "pass": [43, 44, 48, 55, 57, 58, 63, 110, 111, 160, 168, 172, 177, 178, 179, 181, 188, 199, 201, 205, 209, 215, 218, 220, 222, 225, 228, 232, 235, 238, 240, 241, 245, 250, 253, 258, 259, 262, 270, 274, 292, 302, 328, 348, 350, 352, 363, 384, 388, 391, 393, 410, 440, 442, 447, 449, 488, 498, 499, 500, 501, 503, 504, 544, 554, 555, 561, 562, 563, 564, 573, 624, 630, 654, 684, 692, 697, 701, 704, 720, 721, 722, 739, 776, 817, 877, 903, 906, 917, 926, 949, 966, 968, 969, 970, 971, 983, 984, 985, 987, 993, 1011, 1013, 1021, 1023, 1059, 1070, 1088, 1105, 1112], "current": [43, 99, 109, 113, 115, 126, 128, 141, 142, 143, 145, 147, 150, 151, 155, 180, 202, 209, 215, 225, 228, 246, 253, 255, 256, 274, 276, 277, 309, 328, 331, 336, 385, 418, 426, 442, 444, 448, 462, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 542, 632, 636, 701, 702, 715, 725, 726, 742, 773, 781, 795, 799, 800, 801, 802, 803, 806, 807, 808, 810, 816, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 833, 834, 837, 838, 839, 840, 841, 842, 843, 844, 845, 847, 848, 849, 850, 851, 853, 855, 857, 869, 878, 892, 898, 899, 900, 908, 910, 915, 917, 924, 927, 930, 931, 932, 949, 951, 952, 953, 954, 955, 956, 957, 958, 964, 969, 974, 995, 998, 1006, 1009, 1131], "initi": [43, 45, 63, 110, 111, 113, 122, 139, 140, 143, 147, 155, 157, 167, 172, 176, 181, 187, 196, 200, 201, 211, 212, 213, 228, 232, 235, 238, 243, 253, 260, 265, 267, 270, 274, 287, 340, 342, 349, 393, 398, 408, 412, 416, 418, 421, 422, 444, 446, 464, 469, 470, 483, 484, 488, 490, 491, 492, 493, 494, 495, 498, 520, 534, 537, 542, 546, 547, 548, 550, 555, 557, 559, 561, 563, 578, 579, 580, 585, 598, 603, 624, 629, 631, 632, 633, 638, 639, 653, 664, 682, 690, 701, 702, 704, 716, 723, 725, 726, 731, 734, 736, 737, 744, 751, 759, 769, 773, 800, 801, 809, 834, 864, 878, 879, 894, 897, 915, 918, 931, 940, 941, 947, 982, 985, 1015, 1076, 1080, 1098, 1125, 1130], "mess": [43, 140, 226, 245, 247, 298, 644, 682, 725, 726, 1002, 1015, 1106], "roughli": [43, 65, 142, 147, 291, 413, 798, 931, 940], "took": [43, 139, 146, 176, 1036], "our": [43, 53, 59, 62, 70, 77, 104, 113, 117, 119, 120, 122, 141, 142, 144, 146, 151, 155, 162, 176, 191, 192, 201, 202, 216, 218, 256, 267, 269, 317, 410, 413, 424, 435, 443, 447, 452, 464, 468, 485, 496, 501, 635, 638, 746, 753, 773, 877, 878, 903, 906, 931, 941, 945, 947, 959, 962, 965, 971, 1068, 1076, 1079], "craftsmanship": [43, 45], "anoth": [43, 63, 78, 139, 140, 141, 142, 146, 147, 150, 151, 155, 162, 164, 169, 172, 178, 179, 202, 209, 215, 218, 225, 230, 232, 238, 253, 256, 259, 262, 265, 291, 354, 372, 373, 387, 395, 407, 414, 425, 442, 443, 446, 451, 466, 469, 470, 483, 484, 488, 493, 502, 554, 557, 558, 560, 642, 647, 670, 694, 702, 706, 716, 761, 773, 799, 800, 801, 806, 815, 817, 829, 866, 877, 879, 889, 890, 904, 918, 920, 932, 940, 945, 962, 965, 966, 969, 970, 987, 994, 1002, 1018, 1022, 1027, 1079, 1087, 1093, 1096, 1105, 1128], "isol": [43, 54, 170, 172, 176, 226, 240, 877, 931, 932, 982, 1071, 1083, 1100, 1116, 1118], "wrong": [43, 78, 140, 142, 265, 363, 385, 404, 620, 706, 746, 903, 918, 932, 966, 970, 982, 1001, 1065, 1076], "oracl": [43, 1080], "conduct": [43, 1105], "serious": 43, "safeti": [43, 218, 406, 409, 412, 416, 421, 422, 425, 520, 643, 713, 726, 732, 870, 944, 945, 968], "architectur": [43, 108, 137, 147, 199, 334, 358, 385, 402, 425, 706, 734, 870, 897, 947, 948, 957, 959, 1128], "treat": [43, 81, 232, 350, 380, 815], "them": [43, 63, 66, 110, 111, 133, 137, 139, 140, 142, 145, 146, 147, 150, 151, 155, 160, 161, 162, 169, 172, 176, 177, 179, 181, 197, 199, 202, 213, 237, 240, 249, 269, 279, 291, 380, 402, 433, 444, 448, 464, 500, 561, 563, 564, 617, 624, 626, 629, 642, 692, 706, 773, 799, 805, 806, 812, 815, 840, 852, 879, 886, 931, 932, 941, 944, 947, 948, 959, 964, 969, 970, 971, 972, 993, 995, 1017, 1049, 1052, 1071, 1077, 1084, 1095, 1112], "carefulli": [43, 142, 155, 410, 469, 659, 1077], "independ": [43, 63, 220, 232, 352, 385, 557, 857, 871, 879, 949], "self": [43, 59, 62, 63, 140, 141, 151, 159, 160, 167, 173, 176, 178, 196, 199, 200, 212, 213, 215, 222, 225, 226, 230, 232, 238, 241, 253, 260, 270, 274, 280, 292, 418, 426, 544, 546, 650, 652, 653, 687, 700, 706, 712, 734, 765, 769, 928, 964, 968, 969, 970, 979, 983, 984, 987, 988, 989, 990, 991, 992, 1002, 1092, 1093, 1098, 1106, 1111, 1112, 1114, 1125], "valid": [43, 139, 142, 150, 228, 231, 274, 328, 383, 390, 406, 410, 569, 577, 601, 636, 650, 687, 690, 716, 786, 1001, 1002, 1016, 1017, 1033, 1038, 1092, 1093, 1100], "first": [43, 53, 61, 63, 87, 115, 130, 137, 139, 142, 143, 145, 146, 147, 151, 155, 160, 170, 172, 179, 199, 212, 213, 220, 222, 226, 228, 232, 256, 258, 269, 274, 291, 302, 308, 314, 338, 346, 369, 384, 385, 390, 398, 414, 415, 426, 427, 428, 429, 430, 432, 433, 434, 435, 437, 438, 440, 490, 531, 537, 542, 544, 550, 552, 556, 575, 576, 577, 581, 600, 603, 635, 637, 642, 664, 671, 672, 691, 692, 694, 720, 721, 722, 726, 740, 743, 750, 754, 764, 773, 775, 777, 782, 788, 791, 794, 811, 812, 813, 818, 829, 833, 839, 855, 857, 860, 864, 866, 869, 870, 877, 878, 896, 900, 920, 928, 931, 934, 940, 948, 949, 963, 964, 965, 966, 970, 971, 975, 982, 984, 988, 996, 997, 998, 999, 1001, 1002, 1011, 1012, 1015, 1021, 1022, 1028, 1051, 1060, 1066, 1068, 1077, 1079, 1087, 1106, 1112, 1125, 1130], "debug": [43, 140, 141, 169, 199, 209, 215, 225, 228, 279, 283, 317, 322, 335, 385, 411, 414, 418, 419, 420, 428, 430, 431, 447, 525, 670, 687, 726, 731, 753, 755, 815, 833, 899, 923, 944, 1021, 1100, 1123, 1126, 1131, 1140], "fact": [43, 53, 140, 141, 172, 291, 382, 390, 414, 424, 773, 818, 903, 941, 1080], "hard": [43, 70, 78, 85, 113, 115, 117, 119, 130, 140, 142, 145, 146, 151, 156, 161, 168, 172, 179, 201, 216, 222, 232, 246, 255, 256, 276, 277, 291, 363, 382, 411, 424, 452, 528, 724, 726, 773, 803, 809, 812, 853, 855, 869, 872, 878, 959, 968, 970, 990, 1007, 1021, 1073, 1094, 1125, 1141], "principl": [43, 53, 54, 83, 106, 120, 136, 142, 151, 266, 267, 268, 269, 425, 448, 449, 726, 773, 877, 879, 890, 950, 1079], "mayb": [43, 45, 57, 58, 61, 63, 78, 113, 115, 130, 133, 140, 141, 142, 145, 146, 155, 168, 172, 199, 215, 216, 266, 267, 268, 269, 284, 320, 323, 325, 326, 427, 446, 447, 448, 480, 533, 534, 604, 652, 722, 878, 962, 984, 1114], "overview": [43, 98, 113, 136, 147, 164, 180, 182, 197, 201, 213, 246, 247, 255, 259, 262, 265, 267, 276, 277, 293, 331, 335, 448, 462, 490, 491, 492, 493, 494, 495, 496, 497, 500, 542, 562, 658, 669, 682, 693, 715, 725, 726, 796, 800, 801, 802, 803, 806, 807, 814, 816, 817, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 833, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 853, 863, 869, 881, 882, 883, 884, 885, 892, 893, 896, 898, 900, 908, 910, 924, 927, 930, 932, 949, 951, 952, 953, 954, 955, 956, 957, 958, 962, 994, 1071, 1125, 1126, 1128, 1130], "respons": [43, 53, 56, 89, 120, 125, 139, 150, 155, 203, 424, 466, 480, 488, 546, 554, 702, 726, 769, 781, 878, 879, 902, 931, 932, 998, 1078, 1130], "googl": [44, 135, 140, 147, 149, 161, 164, 167, 168, 172, 173, 176, 197, 202, 337, 499, 700, 701, 862, 996, 1071, 1112, 1114, 1143], "cloner": 44, "init": [44, 122, 139, 141, 157, 161, 238, 245, 247, 348, 375, 473, 474, 496, 499, 527, 544, 562, 580, 728, 736, 741, 761, 763, 775, 809, 861, 945], "cpp": [44, 50, 97, 113, 114, 115, 151, 166, 176, 201, 202, 218, 245, 256, 265, 267, 337, 428, 429, 430, 435, 442, 443, 444, 446, 447, 449, 451, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 482, 483, 484, 489, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 508, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 544, 545, 546, 547, 548, 552, 553, 555, 557, 558, 559, 560, 561, 562, 563, 564, 572, 573, 574, 575, 576, 579, 580, 581, 582, 583, 585, 586, 589, 590, 591, 595, 599, 600, 601, 602, 603, 609, 613, 614, 617, 619, 620, 622, 626, 631, 632, 633, 634, 635, 636, 637, 638, 642, 647, 649, 652, 653, 654, 657, 659, 664, 670, 679, 680, 681, 684, 685, 686, 687, 688, 689, 691, 692, 694, 696, 700, 701, 702, 703, 704, 705, 714, 716, 720, 721, 722, 724, 877, 907, 911, 914, 926, 928, 931, 947], "assert_eq": [44, 442, 444, 447, 451, 464, 491, 492, 498, 501, 502, 503, 504, 505, 506, 508, 510, 511, 512, 515, 516, 517, 518, 519, 537, 544, 545, 546, 557, 558, 560, 561, 562, 563, 564, 622, 647, 649, 652, 653, 654, 685, 696, 700, 701, 702, 703, 705, 720, 721, 722, 724, 1112, 1117], "test_f": [44, 466, 501, 502, 724, 1117], "simplefixtur": 44, "public": [44, 55, 101, 102, 107, 113, 137, 150, 155, 192, 200, 213, 241, 246, 255, 256, 264, 270, 276, 277, 314, 317, 322, 398, 434, 435, 436, 438, 443, 445, 449, 451, 454, 455, 456, 466, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 488, 501, 502, 514, 528, 534, 543, 544, 545, 547, 548, 549, 551, 552, 553, 554, 555, 556, 558, 559, 560, 567, 570, 585, 586, 603, 613, 614, 616, 617, 619, 620, 628, 629, 634, 636, 637, 642, 645, 646, 647, 648, 649, 652, 653, 655, 664, 666, 667, 668, 670, 672, 673, 676, 677, 678, 679, 680, 681, 685, 686, 687, 689, 700, 701, 702, 705, 706, 714, 716, 724, 726, 737, 741, 802, 803, 808, 822, 828, 869, 881, 882, 883, 884, 885, 890, 991, 996, 1098, 1117], "myfirstsuit": 44, "test_find": 44, "wtf": [44, 53, 113, 178, 209, 214, 215, 218, 220, 238, 277, 537, 552, 726, 869, 894, 898, 910, 944, 946, 969], "tallk": 44, "morph": [44, 63, 167, 176, 201, 202, 267, 522, 534, 537, 540, 546, 642, 694, 775, 973], "fixtur": [44, 167, 176, 268, 269, 284, 290, 291, 294, 325, 455, 466, 502, 726, 1110, 1143], "trivial": [44, 140, 151, 282, 364, 380, 537, 554, 650, 655, 706, 778, 786, 879, 895, 931, 1127], "tempfil": [44, 968], "crap": [44, 141, 216, 258, 410, 426, 429, 604, 643, 879, 944], "null": [44, 63, 141, 142, 143, 158, 183, 199, 212, 228, 235, 238, 253, 260, 270, 274, 339, 352, 359, 387, 398, 408, 413, 426, 501, 557, 656, 731, 737, 744, 769, 804, 813, 815, 816, 833, 848, 855, 897, 902, 909, 916, 918, 920, 922, 928, 931, 932, 937, 940, 944], "deriv": [44, 107, 114, 119, 162, 216, 228, 304, 328, 502, 520, 546, 616, 617, 619, 620, 681, 689, 970, 983, 1117], "seminar": [45, 123], "psycho": 45, "rule": [45, 141, 147, 172, 222, 228, 232, 265, 298, 325, 340, 359, 361, 362, 363, 378, 384, 402, 413, 414, 415, 417, 425, 427, 452, 464, 469, 570, 616, 650, 653, 657, 659, 679, 705, 706, 812, 833, 894, 970, 993, 1001, 1002, 1012, 1021, 1084, 1132], "dont": [45, 232, 424, 746], "scenario": [45, 142, 155, 164, 172, 176, 347, 468, 620, 714, 932, 933, 940], "robert": [45, 452], "martin": [45, 424, 425, 452], "someon": [45, 172, 213, 228, 235, 238, 269, 324, 559, 714, 765, 830, 836, 857, 879, 903, 947, 995], "mistak": [45, 140, 146, 147, 197, 213, 237, 877, 1071, 1084], "kill": [45, 141, 142, 218, 833, 887, 916, 935, 944, 945, 974, 1131], "peopl": [45, 63, 137, 140, 142, 144, 145, 147, 155, 160, 172, 201, 235, 335, 424, 452, 470, 659, 773, 812, 979, 995, 1023, 1078, 1080], "polit": [45, 692], "thei": [45, 55, 65, 78, 128, 139, 140, 141, 142, 143, 144, 145, 146, 147, 151, 160, 162, 164, 168, 180, 202, 209, 213, 215, 218, 225, 228, 232, 274, 282, 328, 354, 360, 380, 408, 411, 414, 420, 424, 425, 429, 438, 443, 444, 464, 469, 470, 498, 500, 520, 537, 547, 552, 578, 582, 614, 642, 643, 646, 653, 654, 701, 702, 708, 732, 746, 765, 773, 798, 808, 812, 834, 870, 877, 878, 879, 890, 915, 944, 945, 950, 965, 975, 983, 990, 993, 1043, 1066, 1073, 1076, 1077, 1084, 1087, 1090, 1105, 1111, 1127, 1130], "regul": 45, "ethic": 45, "everi": [45, 53, 59, 62, 63, 78, 89, 110, 111, 133, 140, 146, 176, 199, 228, 269, 349, 406, 420, 424, 447, 452, 468, 487, 488, 557, 567, 619, 641, 643, 648, 724, 744, 757, 773, 798, 806, 808, 810, 811, 827, 834, 836, 878, 893, 928, 931, 944, 945, 964, 966, 975, 1011, 1029, 1040, 1051, 1077, 1112, 1127], "particular": [45, 139, 151, 172, 393, 418, 444, 468, 520, 724, 819, 994, 995], "electr": 45, "seem": [45, 128, 139, 141, 142, 161, 266, 443, 877, 879, 944, 1127], "adher": [45, 815], "immedi": [45, 63, 140, 141, 146, 147, 218, 259, 262, 265, 267, 303, 385, 595, 709, 714, 755, 765, 769, 870, 920, 929, 932, 934, 1015, 1112], "survei": [45, 161], "had": [45, 139, 141, 142, 146, 147, 151, 155, 160, 172, 176, 205, 207, 226, 354, 393, 464, 531, 543, 628, 642, 767, 800, 801, 812, 837, 877, 890, 961, 995, 1002, 1021, 1090, 1094], "life": [45, 119, 136, 147, 152, 155, 158, 160, 168, 549, 679, 700, 715, 725, 726, 773, 812, 869, 910, 924, 930, 996, 1017, 1074], "accomplish": [45, 57, 78, 180, 266, 268, 269, 410, 425, 877], "befor": [45, 114, 115, 119, 136, 140, 141, 143, 144, 145, 147, 150, 155, 160, 176, 179, 183, 201, 228, 244, 245, 247, 268, 269, 274, 290, 291, 292, 298, 342, 350, 351, 360, 380, 429, 501, 531, 537, 576, 602, 617, 643, 655, 670, 682, 687, 688, 698, 702, 703, 708, 709, 714, 716, 717, 724, 725, 726, 737, 751, 761, 767, 773, 799, 835, 870, 879, 918, 933, 935, 947, 970, 975, 993, 1036, 1061, 1063, 1067, 1076, 1089, 1093, 1096, 1106, 1107, 1113], "formal": [45, 150, 164, 201, 202, 291, 294, 491, 1106], "googletest": [45, 65, 97, 167, 169, 170, 202, 245, 247, 282, 440, 449, 485, 498, 500, 501, 562, 700, 701, 702, 726, 727, 1112, 1114, 1127], "messag": [45, 135, 137, 145, 146, 155, 158, 164, 170, 178, 179, 205, 209, 212, 215, 225, 228, 235, 238, 253, 260, 268, 269, 270, 274, 305, 317, 322, 425, 428, 430, 449, 554, 570, 629, 659, 664, 684, 686, 687, 696, 706, 714, 726, 748, 773, 806, 810, 815, 869, 891, 910, 920, 924, 999, 1013, 1023, 1065, 1107, 1111, 1113, 1139, 1140, 1141], "saniti": [45, 416, 421, 422, 425, 429, 433, 559, 644, 682, 723, 725, 726], "perform": [45, 140, 146, 155, 157, 179, 198, 199, 228, 269, 323, 364, 367, 390, 397, 402, 410, 413, 414, 417, 420, 421, 422, 428, 537, 577, 595, 598, 620, 641, 655, 697, 726, 757, 935, 952, 962, 963, 1021, 1105, 1123, 1126], "delici": [45, 53], "fearlessli": [45, 53], "backlog": 45, "Or": [45, 114, 119, 140, 247, 298, 409, 425, 528, 656, 682, 693, 725, 726, 864, 890, 900, 926, 1001, 1015, 1092, 1096], "Will": [45, 140, 173, 232, 303, 734, 947, 1013, 1100, 1114, 1120, 1139], "high": [46, 53, 114, 161, 201, 215, 232, 424, 452, 475, 488, 492, 496, 700, 702, 717, 755, 767, 771, 783, 792], "speed": [46, 53, 130, 135, 140, 209, 213, 215, 225, 228, 232, 415, 705, 767, 773, 933, 935, 1075, 1076], "hype": 46, "we": [46, 50, 59, 61, 62, 68, 114, 117, 118, 119, 120, 122, 130, 139, 140, 142, 143, 144, 145, 146, 147, 151, 155, 156, 159, 160, 161, 162, 163, 164, 168, 169, 172, 176, 177, 178, 179, 180, 182, 191, 192, 199, 200, 201, 202, 206, 209, 212, 213, 215, 216, 218, 245, 247, 249, 256, 259, 262, 264, 266, 268, 269, 287, 291, 294, 303, 320, 323, 324, 328, 339, 354, 365, 372, 380, 393, 402, 404, 408, 410, 413, 418, 425, 427, 435, 436, 442, 443, 444, 447, 449, 451, 454, 463, 464, 468, 469, 485, 486, 487, 488, 496, 499, 500, 501, 531, 537, 546, 558, 582, 613, 617, 634, 635, 636, 637, 638, 642, 653, 664, 670, 696, 697, 702, 705, 716, 734, 737, 741, 742, 746, 748, 751, 769, 773, 775, 781, 789, 800, 801, 815, 816, 830, 836, 837, 852, 870, 877, 878, 879, 886, 890, 895, 896, 897, 903, 904, 905, 906, 918, 931, 940, 957, 961, 962, 963, 971, 990, 995, 1021, 1023, 1027, 1029, 1058, 1065, 1066, 1067, 1071, 1076, 1077, 1078, 1079, 1086, 1087, 1093, 1096, 1113, 1114, 1130], "did": [46, 141, 142, 144, 146, 147, 150, 151, 159, 168, 172, 179, 264, 404, 408, 424, 449, 487, 635, 704, 706, 721, 746, 751, 773, 812, 870, 881, 890, 971, 1125], "consequ": [46, 139, 140, 259, 262, 384, 405, 408, 409, 452, 903, 990, 1090, 1125], "unsign": [46, 117, 213, 218, 356, 358, 366, 395, 398, 402, 410, 456, 471, 486, 500, 501, 502, 552, 622, 623, 632, 680, 714, 716, 729, 732, 737, 744, 753, 755, 757, 763, 769, 778, 783, 787, 899, 940, 941, 1122, 1123], "introduc": [46, 58, 78, 97, 201, 218, 226, 267, 282, 406, 414, 426, 442, 447, 469, 487, 488, 489, 490, 520, 542, 628, 726, 792, 944, 973, 999, 1013, 1078, 1127], "throw": [46, 144, 147, 218, 444, 468, 469, 473, 479, 480, 482, 483, 484, 502, 520, 598, 636, 678, 699, 702, 713, 716, 1117], "notfounderror": 46, "cbda1e98040d084c31ff6e83f04d78dbebf5c1c2": 46, "cluster_clean_cod": [46, 47, 51, 53, 55, 56, 726], "cluster_clean_code_bug": [46, 47, 53, 55, 56, 726], "clean_code_bugs_find_error": [46, 47, 53, 726], "twice": [47, 53, 55, 56, 57, 140, 346, 385, 407, 427, 650, 653, 712, 726, 793, 833, 870, 886, 918, 963], "crash": [47, 53, 63, 110, 111, 138, 140, 141, 142, 145, 197, 199, 209, 215, 225, 228, 335, 375, 382, 468, 552, 579, 624, 700, 726, 931, 945, 1071], "found": [47, 53, 108, 109, 127, 136, 139, 151, 160, 172, 205, 209, 212, 215, 218, 220, 222, 225, 228, 238, 253, 260, 274, 282, 292, 303, 317, 411, 420, 430, 432, 440, 478, 482, 483, 484, 490, 501, 503, 507, 508, 509, 537, 542, 582, 585, 588, 598, 602, 603, 627, 635, 637, 639, 647, 721, 726, 744, 805, 808, 815, 862, 879, 947, 950, 959, 964, 970, 978, 987, 1017, 1049, 1075, 1078, 1115, 1127], "clean_code_bugs_overwrite_existing_fil": [47, 53, 55, 56, 726], "clean_code_bugs_overwrite_store_content_on_read": [47, 53, 55, 56, 726], "explicitli": [48, 141, 142, 146, 172, 212, 222, 232, 265, 362, 363, 381, 419, 425, 469, 546, 549, 557, 598, 647, 650, 653, 706, 804, 932, 941, 969, 979, 998, 1084, 1092], "solut": [48, 65, 113, 145, 147, 155, 156, 164, 166, 172, 191, 201, 202, 207, 210, 213, 218, 223, 229, 245, 248, 259, 268, 269, 273, 279, 298, 384, 385, 388, 407, 410, 428, 441, 468, 490, 520, 542, 548, 549, 569, 606, 608, 610, 617, 631, 639, 654, 659, 664, 690, 706, 726, 834, 835, 852, 915, 920, 933, 934, 950, 975, 1011, 1042, 1054, 1084, 1128], "force_overwrit": 48, "descriptor": [48, 140, 164, 196, 228, 232, 253, 274, 292, 324, 549, 732, 753, 789, 809, 815, 816, 873, 895, 896, 897, 941], "mani": [49, 53, 56, 59, 62, 89, 120, 140, 142, 146, 147, 164, 169, 172, 188, 199, 220, 230, 235, 256, 260, 264, 265, 267, 273, 292, 303, 324, 328, 352, 364, 366, 375, 390, 404, 406, 411, 426, 427, 439, 440, 443, 446, 451, 454, 493, 520, 567, 577, 596, 598, 617, 629, 641, 642, 650, 670, 691, 696, 704, 712, 726, 732, 734, 751, 759, 765, 769, 773, 799, 809, 810, 812, 813, 866, 878, 896, 897, 916, 926, 929, 944, 945, 947, 957, 966, 968, 970, 975, 984, 994, 999, 1002, 1005, 1009, 1017, 1021, 1023, 1027, 1076, 1078, 1079, 1080, 1084, 1093, 1112, 1125, 1128], "overwrit": [49, 109, 468, 469, 482, 490, 507, 509, 542, 552, 598, 600, 629, 726, 773, 835, 840, 852, 904, 1019], "present": [49, 61, 137, 143, 147, 151, 155, 160, 173, 228, 274, 282, 291, 436, 548, 769, 773, 808, 879, 890, 909, 970, 1053, 1093, 1127], "continu": [50, 53, 63, 89, 99, 106, 110, 111, 133, 141, 150, 151, 163, 172, 173, 176, 185, 190, 191, 192, 221, 226, 232, 238, 248, 314, 378, 379, 385, 386, 392, 396, 399, 403, 408, 412, 416, 421, 422, 424, 426, 429, 430, 447, 561, 563, 564, 624, 644, 652, 682, 721, 722, 723, 724, 725, 726, 870, 872, 876, 882, 905, 906, 944, 945, 950, 961, 968, 975, 979, 1012, 1015, 1033, 1078, 1093, 1112], "expected_cont": 50, "fill": [50, 142, 143, 155, 177, 228, 229, 274, 366, 642, 646, 691, 701, 744, 769, 773, 839, 896, 973], "strategi": [50, 212, 400, 878, 1028, 1105], "hurri": [50, 385], "read_fil": 50, "compar": [50, 113, 200, 202, 213, 228, 269, 274, 363, 405, 419, 420, 429, 498, 544, 701, 881, 916, 1013, 1018, 1042, 1046, 1076, 1098], "binaryfil": 50, "doesn": [50, 142, 145, 253, 380, 382, 385, 400, 414, 696, 732, 793, 800, 801, 835, 839, 852, 948, 959, 1015], "belong": [50, 169, 172, 352, 372, 398, 425, 520, 544, 558, 560, 818, 826, 905, 986, 1000], "test_write_csv": 50, "test_read_csv": [50, 1068], "ah": [50, 59, 62, 146, 162, 199, 201, 215, 599, 947, 1023, 1087], "altern": [51, 53, 55, 56, 63, 65, 68, 78, 83, 119, 139, 140, 147, 173, 192, 218, 279, 359, 436, 544, 553, 567, 578, 581, 650, 699, 705, 726, 773, 812, 833, 873, 877, 879, 891, 899, 905, 916, 922, 940, 947, 995, 1015, 1018, 1092, 1096, 1100, 1107, 1117, 1120, 1136, 1137, 1139, 1142], "cluster_clean_code_featur": [51, 53, 55, 56, 726], "clean_code_features_csv": [51, 53, 55, 56, 726], "clean_code_features_other_index": [51, 53, 726], "establish": [53, 71, 180, 192, 256, 268, 269, 290, 294, 314, 424, 773, 931, 1128], "were": [53, 133, 140, 142, 146, 155, 172, 176, 335, 384, 440, 543, 552, 553, 579, 646, 685, 800, 801, 879, 906, 961, 969, 993, 1002, 1021, 1026, 1084, 1090, 1125], "occas": [53, 89, 141, 701], "ourselv": [53, 172, 870], "gather": [53, 147, 179, 268, 269, 290, 291, 294, 302, 418, 420, 1055], "wreak": [53, 110, 111, 400, 624], "havoc": [53, 110, 111, 400, 624], "shoehorn": 53, "violat": [53, 120, 140, 424, 452, 680, 702, 787, 931, 945], "nearli": [53, 172, 178, 402, 923], "solid": [53, 136, 152, 265, 267, 425, 452, 1123, 1124, 1138, 1139, 1141, 1142], "chanc": [53, 140, 142, 177, 404, 424, 728, 773, 898, 1130], "cluster_clean_code_refactor": [53, 55, 56, 726], "clean_code_refactoring_pass_store_in_ctor": [53, 56, 726], "clean_code_refactoring_backingstore_monolith": [53, 55, 56, 726], "clean_code_refactoring_store_enum_switch": [53, 55, 56, 726], "clean_code_refactoring_backingstore_interfac": [53, 56, 726], "now": [54, 61, 139, 140, 141, 142, 143, 144, 146, 147, 155, 159, 168, 178, 188, 205, 212, 218, 222, 232, 240, 260, 264, 285, 303, 304, 317, 380, 393, 408, 413, 438, 444, 451, 464, 469, 491, 492, 499, 558, 582, 585, 591, 595, 603, 646, 697, 702, 717, 731, 751, 773, 781, 783, 789, 805, 808, 870, 877, 878, 879, 905, 906, 914, 959, 961, 966, 969, 984, 987, 1011, 1066, 1076, 1078, 1096, 1106, 1125], "violatin": 54, "respect": [54, 59, 62, 65, 133, 141, 155, 202, 264, 266, 309, 356, 404, 424, 469, 487, 546, 553, 616, 650, 701, 702, 804, 812, 877, 931, 945, 990], "mainli": [55, 140, 176, 265, 274, 598, 724, 913, 973], "bugfix": 55, "ongo": [55, 933], "scene": [55, 947, 990], "pleas": [55, 113, 141, 142, 145, 147, 151, 168, 172, 176, 177, 179, 180, 181, 182, 192, 218, 245, 247, 256, 277, 308, 350, 384, 414, 502, 559, 561, 562, 563, 564, 812, 870, 878, 879, 894, 923, 941, 949, 950, 995, 1097], "wait": [55, 72, 73, 74, 78, 83, 87, 117, 119, 129, 140, 141, 142, 143, 144, 146, 187, 291, 303, 614, 642, 709, 717, 726, 750, 765, 771, 775, 778, 781, 783, 806, 809, 817, 869, 870, 896, 898, 902, 914, 926, 929, 932, 939, 941, 944, 1019, 1087, 1112, 1130, 1138], "unnecessarili": [55, 69, 941], "conflict": [55, 75, 77, 114, 119, 267, 268, 269, 290, 350, 401, 553, 643, 715, 725, 726, 729, 732, 742, 869, 878, 910, 918, 924, 944, 978, 1108], "rip": [55, 143, 426, 485, 931, 1086], "detail": [55, 84, 137, 142, 145, 150, 154, 155, 167, 173, 187, 198, 199, 201, 202, 209, 215, 225, 229, 230, 232, 236, 258, 269, 317, 424, 429, 452, 489, 499, 501, 549, 701, 751, 833, 877, 879, 933, 965, 1073, 1114, 1123], "instanc": [55, 57, 107, 110, 111, 147, 188, 196, 200, 209, 212, 213, 220, 222, 227, 230, 232, 235, 250, 253, 260, 274, 292, 313, 328, 442, 447, 455, 466, 468, 469, 470, 482, 483, 484, 487, 500, 613, 624, 631, 636, 684, 687, 734, 739, 742, 940, 941, 968, 970, 984, 985, 987, 990, 1013, 1098], "its": [55, 57, 59, 62, 65, 84, 87, 108, 110, 111, 134, 139, 140, 141, 142, 144, 145, 146, 147, 150, 151, 157, 162, 164, 168, 169, 170, 172, 192, 199, 200, 202, 209, 213, 215, 225, 228, 232, 241, 256, 258, 259, 262, 265, 267, 274, 291, 308, 319, 350, 372, 383, 385, 400, 402, 404, 411, 413, 435, 443, 447, 466, 469, 470, 485, 486, 487, 488, 493, 498, 501, 543, 544, 545, 547, 549, 554, 584, 624, 642, 654, 664, 690, 709, 724, 737, 746, 751, 773, 778, 800, 801, 804, 806, 810, 815, 820, 821, 833, 834, 855, 857, 878, 881, 882, 889, 899, 900, 905, 920, 926, 929, 931, 932, 933, 941, 963, 968, 970, 973, 978, 983, 987, 993, 1001, 1011, 1013, 1018, 1022, 1028, 1076, 1078, 1097, 1098, 1105, 1107, 1125, 1127, 1128, 1130], "replac": [55, 63, 97, 145, 190, 201, 209, 212, 213, 215, 216, 218, 225, 228, 260, 274, 291, 302, 344, 359, 400, 426, 489, 490, 542, 575, 576, 635, 642, 670, 687, 701, 716, 724, 726, 776, 879, 919, 931, 945, 969], "symptom": [57, 150], "mismatch": [57, 526], "onc": [57, 114, 139, 141, 142, 145, 146, 147, 150, 155, 160, 161, 302, 320, 342, 367, 376, 384, 414, 427, 443, 444, 445, 449, 454, 466, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 499, 501, 559, 577, 578, 632, 673, 684, 694, 712, 724, 734, 737, 769, 870, 879, 921, 944, 945, 964, 970, 971, 972, 1006, 1027, 1036, 1049, 1080, 1083, 1107], "sync": [57, 141, 212, 228, 235, 238, 253, 260, 270, 274, 400, 404, 773, 864], "imho": [57, 681], "forbidden": [58, 402], "accord": [58, 63, 113, 117, 139, 142, 228, 633, 817, 833, 866, 870, 878, 879], "uncl": [58, 335], "bob": [58, 228, 335, 424], "enum": [58, 201, 202, 359, 374, 412, 416, 421, 422, 426, 429, 644, 682, 723, 725, 726, 732, 734, 742, 931, 1125], "born": [59, 62, 811, 996], "bound": [59, 62, 63, 218, 222, 253, 265, 280, 401, 411, 416, 421, 422, 526, 554, 556, 558, 655, 726, 811, 815, 871, 932, 935, 988, 1009, 1032, 1092], "employe": [59, 62, 167, 199, 987], "year": [59, 62, 139, 140, 141, 142, 146, 151, 172, 212, 218, 260, 264, 424, 543, 627, 628, 630, 631, 634, 635, 636, 637, 638, 639, 641, 688, 726, 1028], "emploi": [59, 62, 141, 151, 176, 385, 773], "configur": [59, 61, 62, 63, 68, 73, 78, 82, 84, 85, 86, 104, 113, 115, 117, 119, 120, 125, 126, 139, 141, 142, 145, 147, 170, 180, 246, 255, 256, 265, 276, 277, 283, 284, 287, 291, 317, 323, 427, 431, 432, 434, 435, 447, 449, 454, 491, 492, 493, 501, 726, 746, 753, 773, 787, 803, 804, 805, 808, 817, 853, 866, 869, 870, 878, 890, 897, 911, 913, 941, 948, 949, 961, 971, 1041, 1079, 1083, 1092, 1100, 1128], "pattern": [59, 62, 82, 106, 120, 136, 137, 153, 156, 175, 176, 202, 205, 228, 267, 325, 334, 336, 424, 441, 442, 443, 444, 446, 447, 449, 451, 452, 453, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 490, 542, 705, 706, 726, 727, 833, 862, 929, 976, 977, 1112, 1132], "led": [59, 62, 72, 73, 74, 78, 91, 116, 120, 158, 180, 256, 303, 326, 491, 726, 732, 870, 878], "hei": [59, 62, 140, 180, 232, 559, 560, 808, 894, 1016, 1084], "reinvent": [59, 62, 200, 249, 1071], "wheel": [59, 62, 114, 124, 136, 775, 810, 905, 1100], "admit": [59, 62, 147], "notori": [59, 62], "fun": [59, 62, 140, 145, 198, 200, 236, 265, 335, 448, 685, 773, 812, 870, 877, 878, 975, 987, 999, 1015, 1070, 1071, 1099, 1106, 1125], "live": [59, 62, 70, 97, 98, 113, 115, 137, 141, 145, 163, 167, 172, 176, 181, 192, 200, 201, 202, 203, 216, 218, 226, 237, 244, 245, 246, 247, 249, 255, 257, 258, 265, 266, 267, 268, 269, 273, 276, 277, 291, 298, 317, 321, 325, 326, 328, 335, 336, 337, 397, 414, 426, 427, 432, 448, 453, 462, 464, 466, 488, 490, 491, 492, 493, 494, 495, 496, 497, 500, 507, 509, 520, 577, 578, 598, 640, 651, 682, 683, 684, 701, 715, 724, 725, 726, 727, 737, 773, 803, 806, 807, 812, 828, 829, 869, 910, 978, 995, 1028, 1071, 1097, 1106, 1124, 1125, 1139], "session": [59, 62, 136, 145, 147, 165, 172, 176, 180, 184, 209, 215, 225, 228, 240, 244, 245, 247, 258, 266, 323, 775, 804, 805, 887, 898, 1059, 1071, 1097, 1105, 1135], "simpl": [59, 62, 72, 74, 75, 78, 86, 127, 136, 140, 144, 145, 147, 150, 151, 155, 160, 164, 167, 168, 172, 176, 179, 202, 218, 220, 222, 228, 232, 284, 287, 338, 339, 346, 385, 387, 401, 404, 411, 426, 427, 428, 429, 430, 434, 435, 437, 447, 545, 552, 553, 591, 619, 627, 628, 630, 631, 634, 635, 636, 637, 638, 639, 659, 692, 702, 711, 726, 732, 746, 753, 765, 773, 775, 783, 809, 862, 870, 871, 877, 878, 907, 913, 915, 918, 933, 941, 944, 948, 949, 950, 955, 971, 975, 995, 996, 1004, 1023, 1071, 1077, 1079, 1095, 1111, 1112], "thu": [59, 62, 140, 141, 142, 178, 369, 444, 746, 751, 793, 800, 903, 1083, 1130], "techniqu": [59, 62, 69, 70, 71, 404, 414, 500, 624, 873], "usag": [59, 62, 65, 80, 106, 114, 120, 142, 147, 192, 202, 213, 226, 240, 265, 267, 268, 290, 303, 323, 335, 385, 410, 411, 418, 429, 433, 439, 448, 449, 462, 488, 489, 490, 542, 552, 559, 560, 578, 613, 615, 619, 620, 639, 641, 653, 664, 670, 684, 691, 726, 775, 810, 833, 862, 865, 880, 911, 914, 929, 965, 970, 973, 1023, 1065, 1067, 1100, 1107, 1114, 1125], "At": [59, 62, 140, 141, 144, 147, 151, 155, 172, 176, 202, 212, 216, 218, 252, 349, 378, 382, 414, 442, 700, 765, 966, 983, 1071], "flow": [59, 62, 141, 172, 177, 179, 180, 181, 182, 186, 191, 192, 207, 210, 223, 234, 318, 319, 320, 322, 358, 378, 386, 392, 396, 399, 403, 412, 414, 416, 421, 422, 644, 682, 691, 723, 725, 726, 944, 979, 1004, 1006, 1013, 1090, 1126], "event": [59, 62, 63, 86, 143, 164, 200, 209, 213, 215, 225, 228, 256, 268, 269, 420, 670, 714, 726, 741, 742, 750, 775, 776, 788, 789, 790, 791, 794, 806, 810, 869, 873, 898, 910, 913, 929, 932, 933, 937, 941, 982, 1087, 1096, 1098, 1130, 1139, 1141, 1142], "save": [59, 62, 63, 85, 136, 139, 140, 152, 160, 163, 209, 215, 225, 228, 259, 262, 265, 366, 368, 642, 673, 676, 677, 678, 817, 835, 889, 898, 935, 964, 968, 974, 984, 1017, 1076, 1107, 1125], "schedul": [59, 62, 63, 65, 99, 110, 111, 113, 140, 157, 180, 182, 246, 255, 256, 276, 330, 331, 442, 448, 462, 490, 491, 492, 493, 494, 495, 496, 497, 500, 542, 715, 725, 726, 755, 765, 771, 778, 793, 800, 801, 802, 803, 807, 809, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 847, 848, 849, 850, 851, 853, 869, 881, 882, 883, 884, 885, 892, 898, 900, 908, 910, 915, 924, 926, 927, 931, 935, 949, 951, 952, 953, 954, 955, 956, 957, 958, 1083, 1120, 1130, 1131, 1141], "overhead": [59, 62, 414, 420, 531, 540, 705, 706], "usual": [59, 62, 84, 108, 113, 140, 141, 147, 150, 155, 160, 170, 172, 232, 266, 282, 340, 380, 381, 407, 420, 424, 430, 432, 437, 442, 456, 464, 470, 499, 544, 560, 601, 655, 690, 691, 705, 714, 717, 724, 732, 744, 746, 751, 761, 767, 769, 773, 787, 789, 793, 809, 811, 815, 834, 870, 871, 878, 899, 913, 931, 932, 947, 948, 949, 950, 959, 968, 969, 970, 971, 975, 978, 981, 982, 988, 990, 992, 993, 995, 998, 1004, 1009, 1070, 1077, 1078, 1084, 1107, 1108, 1114, 1127], "exhibit": [59, 62, 218, 636, 879, 900, 905], "glitch": [59, 62, 142, 147, 878, 879], "caus": [59, 62, 140, 143, 155, 209, 215, 225, 228, 232, 879, 926, 931, 1093], "hiccup": [59, 62, 147, 258, 949], "twist": [59, 62, 757], "amazingli": [59, 62, 817], "submiss": 60, "submit": [60, 109, 767], "linuxtag": [60, 179, 875], "pure": [61, 69, 147, 317, 380, 453, 616, 642, 681, 706, 812, 1002, 1125], "local": [61, 140, 141, 143, 146, 155, 168, 172, 173, 180, 181, 185, 201, 202, 216, 218, 219, 225, 228, 231, 232, 253, 256, 268, 270, 279, 282, 290, 291, 294, 303, 317, 350, 354, 378, 380, 397, 435, 439, 448, 462, 464, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 542, 549, 567, 650, 653, 655, 684, 726, 746, 773, 778, 800, 801, 805, 855, 869, 877, 879, 880, 881, 882, 888, 890, 896, 907, 915, 957, 959, 966, 969, 1014, 1100, 1127, 1128, 1141], "easili": [61, 120, 134, 141, 147, 303, 359, 378, 411, 424, 443, 616, 692, 755, 771, 899, 929, 935, 965, 978, 1010, 1125], "guess": [61, 222, 232, 258, 404, 409, 659, 886, 941], "autotool": [61, 151], "portabl": [61, 164, 352, 414, 709, 915, 922, 941, 945, 1002, 1080], "archiv": [61, 103, 104, 113, 151, 152, 180, 182, 246, 255, 256, 276, 420, 433, 439, 448, 462, 490, 491, 492, 493, 494, 495, 496, 497, 500, 542, 726, 803, 833, 869, 949, 952, 954, 955, 957, 958, 959, 964, 968, 1100], "m4": 61, "macro": [61, 218, 283, 344, 355, 358, 370, 379, 386, 392, 396, 399, 403, 406, 412, 416, 421, 422, 430, 431, 435, 436, 439, 644, 682, 688, 723, 725, 726, 742, 761, 775, 815, 893, 899, 905, 915, 949, 1021, 1112, 1117, 1122, 1126], "stock": [61, 212, 213, 1027, 1028], "sudo": [61, 101, 113, 136, 143, 145, 147, 155, 169, 180, 218, 246, 255, 256, 265, 267, 276, 277, 430, 437, 514, 726, 803, 828, 830, 869, 870, 879, 933, 961, 1107], "pwd": [61, 109, 168, 245, 247, 317, 322, 433, 499, 501, 562, 748, 751, 800, 801, 810, 855, 857, 870, 948, 949, 962, 964, 1105], "pub": [61, 143, 180, 746, 886, 1065], "lib": [61, 113, 136, 145, 151, 179, 199, 202, 212, 228, 235, 238, 253, 260, 267, 270, 274, 432, 498, 751, 763, 769, 773, 864, 879, 944, 948, 950, 959, 961, 1100, 1107], "remot": [61, 102, 104, 143, 145, 147, 155, 192, 201, 248, 303, 441, 462, 476, 490, 542, 726, 746, 773, 774, 778, 799, 802, 869, 878, 880, 883, 884, 885, 888, 896, 959, 971, 1128, 1129, 1136], "v0": 61, "v1": [61, 258, 449, 464, 646], "v2": [61, 63, 147, 167, 258, 449, 464, 646], "autotooleri": 61, "autogen": 61, "step": [61, 63, 139, 140, 146, 147, 151, 155, 176, 215, 218, 219, 245, 247, 260, 264, 269, 292, 340, 342, 344, 360, 384, 426, 429, 446, 489, 499, 537, 562, 567, 700, 773, 800, 801, 947, 955, 1092, 1093, 1106], "noconfigur": 61, "suppress": [61, 146, 192, 418, 443, 552, 701, 852, 1100], "absorb": [61, 133, 178, 423, 425, 653, 1028], "Be": [61, 97, 218, 265, 267, 303, 357, 390, 499, 520, 545, 550, 612, 639, 651, 653, 682, 684, 687, 698, 707, 715, 723, 725, 726, 799, 944, 959], "awar": [61, 303, 401, 434, 933], "enabl": [61, 139, 145, 172, 180, 201, 209, 215, 225, 228, 256, 266, 363, 414, 440, 447, 469, 525, 771, 773, 778, 825, 870, 874, 878, 890, 933, 957, 961, 971, 1130], "mkdir": [61, 100, 113, 126, 141, 146, 150, 168, 169, 245, 247, 256, 317, 322, 499, 501, 502, 562, 724, 726, 773, 800, 801, 802, 803, 837, 838, 839, 840, 841, 844, 845, 847, 853, 869, 886, 890, 940, 959, 961, 962, 968], "dist": [61, 124, 705, 1026], "406332": 61, "apr": [61, 63, 199, 209, 238, 310, 948, 949, 962], "transfer": [61, 140, 202, 205, 282, 303, 420, 502, 552, 653, 744, 773, 786, 787, 799, 800, 801, 860, 880, 886, 889, 1087, 1125, 1127], "scp": [61, 97, 101, 113, 126, 151, 180, 246, 255, 256, 276, 277, 501, 502, 726, 746, 800, 801, 869, 880, 881, 882, 883, 885, 890, 907, 957, 958, 959], "192": [61, 173, 180, 212, 215, 220, 222, 225, 228, 232, 235, 238, 250, 253, 260, 270, 274, 280, 292, 323, 746, 808, 890, 1142], "168": [61, 173, 180, 183, 190, 199, 212, 215, 220, 222, 225, 228, 232, 235, 238, 241, 250, 253, 270, 274, 280, 292, 323, 746, 808, 890, 959, 1142], "82": [61, 150, 159, 173, 183, 188, 190, 196, 199, 205, 212, 215, 220, 222, 228, 232, 235, 238, 241, 250, 253, 260, 270, 274, 280, 292, 312, 1028, 1075, 1076], "prerequisit": [61, 104, 218, 746, 877, 998], "apt": [61, 151, 155, 169, 218, 265, 267, 514, 753, 872, 877, 879, 890, 949, 961, 1107, 1112], "python3": [61, 63, 86, 124, 136, 151, 160, 173, 179, 199, 209, 215, 225, 228, 232, 925, 935, 961, 971, 998, 1092, 1093, 1100, 1107], "along": [61, 141, 147, 200, 213, 335, 384, 454, 724, 818, 926, 947, 978, 1098], "omit": [61, 63, 146, 155, 160, 209, 215, 225, 228, 229, 232, 321, 365, 402, 414, 426, 446, 620, 642, 689, 751, 767, 816, 877, 878, 879, 886, 902, 903, 907, 918, 968, 971, 1023, 1105], "bind": [61, 141, 243, 265, 267, 362, 369, 600, 642, 655, 682, 706, 707, 709, 715, 725, 726, 873, 947, 979, 983, 1002, 1013, 1090, 1125, 1140, 1142], "cxx": [61, 137, 427, 442, 443, 444, 445, 446, 447, 449, 451, 454, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 498, 500, 503, 504, 505, 506, 508, 510, 511, 512, 513, 515, 516, 517, 518, 519, 948, 949], "xf": [61, 151, 799, 961], "ld_library_path": [61, 432, 964], "gpiod": [61, 63, 753], "py3": [61, 124, 136, 1026], "aarch64": [61, 151, 959], "multi": [63, 1077, 1084], "chmod": [63, 147, 317, 800, 801, 818, 823, 825, 827, 830, 882, 886], "snippet": [63, 160, 179, 302, 607, 878, 971], "subdirectori": [63, 146, 155, 167, 169, 192, 283, 427, 431, 432, 485, 499, 726, 748, 799, 800, 801, 813, 823, 825, 842, 857, 861, 878, 879, 959, 1059, 1112], "stuff": [63, 70, 78, 100, 113, 139, 142, 146, 155, 160, 172, 176, 179, 192, 201, 202, 223, 237, 256, 258, 279, 303, 321, 420, 426, 528, 575, 724, 726, 732, 741, 773, 803, 833, 841, 847, 853, 869, 877, 907, 968, 970, 1026, 1066, 1071, 1073, 1105], "stuff_complet": 63, "strace": [63, 97, 140, 142, 335, 731, 736, 789, 896, 902, 915, 931, 940, 1138], "pid": [63, 140, 142, 143, 419, 792, 805, 809, 811, 915, 931, 934, 940, 944, 945], "4677": 63, "11hello": 63, "clock_gettime64": 63, "clock_monoton": [63, 717, 897, 931], "tv_sec": [63, 931], "164646": 63, "tv_nsec": [63, 931], "833862215": 63, "_newselect": 63, "tv_usec": 63, "500000": [63, 872, 878, 1076], "unfinish": [63, 142], "4679": 63, "resum": [63, 672, 673, 676, 677, 678, 769, 931], "timeout": [63, 712, 714, 716, 896, 1100], "mi": [63, 220], "845864201": 63, "4678": [63, 215], "fd": [63, 150, 212, 256, 502, 732, 877, 891, 895, 896, 897, 899, 903, 904, 905, 906, 909, 911, 914, 937, 940, 944, 1028], "fourth": 63, "involv": [63, 78, 140, 143, 147, 150, 202, 256, 268, 269, 290, 323, 400, 408, 414, 420, 485, 552, 554, 643, 744, 773, 870, 948, 957, 959], "occasion": [63, 128, 155, 172, 201, 218, 410, 424, 434, 636, 773, 817, 995, 1009, 1070, 1085], "due": [63, 147, 172, 442, 706, 1100], "weird": [63, 256, 410, 680, 732, 757, 926, 944], "gil": [63, 172, 176, 268, 269, 290, 291, 294, 1071], "jitter": [63, 933, 935], "heavi": [63, 164, 172, 452, 879, 995, 1130], "usr": [63, 140, 141, 145, 151, 160, 163, 168, 170, 192, 199, 200, 209, 212, 215, 225, 228, 232, 235, 238, 253, 258, 260, 270, 274, 314, 317, 427, 429, 430, 432, 433, 437, 659, 692, 702, 746, 773, 799, 805, 817, 829, 861, 864, 877, 879, 925, 935, 944, 947, 948, 949, 950, 959, 962, 964, 971, 974, 998, 1059, 1074, 1087, 1100, 1107, 1114], "env": [63, 136, 141, 163, 258, 925, 935, 998, 1025, 1059, 1074, 1087], "hello_left": 63, "hello_right": 63, "rjust": [63, 160, 228, 274], "hello_middl": 63, "center": [63, 163, 205, 220, 222, 228, 232, 253, 260, 274, 292, 311, 418, 498], "t1": [63, 159, 222, 232, 253, 257, 274, 916], "t2": [63, 159, 215, 222, 232, 253, 916], "t3": 63, "async": [63, 140, 172, 176, 209, 215, 225, 226, 228, 291, 670, 923, 946, 1071, 1140], "await": [63, 291], "epoll_wait": 63, "201": [63, 143, 173, 190, 199, 212, 215, 220, 222, 225, 228, 232, 235, 253, 260, 270, 274, 280, 292], "multiplex": [63, 878, 897, 931, 1142], "create_task": 63, "sysf": [63, 113, 114, 116, 120, 137, 187, 256, 304, 305, 501, 726, 729, 730, 775, 869, 870, 877, 879, 910, 911, 914, 1129, 1136], "unmaintain": [63, 246, 255, 256, 949, 1013, 1122], "immun": [63, 559, 717], "hotplug": [63, 877], "reset": [63, 139, 449, 451, 701, 702, 703, 724, 1093, 1141], "pullup": 63, "pulldown": 63, "rpi": [63, 122, 151, 303, 773, 774, 877], "hope": [63, 140, 142, 145, 147, 151], "major": [63, 145, 158, 209, 215, 225, 228, 265, 267, 424, 428, 559, 732, 739, 804, 932, 996, 1002, 1017], "releas": [63, 143, 169, 283, 385, 431, 702, 713, 714, 716, 726, 732, 746, 870, 877, 920, 925, 961, 964, 996, 1106, 1137], "ton": [63, 700, 812, 874, 899, 931, 935, 1125], "bartosz": 63, "golaszewski": 63, "gpiochip0": [63, 753, 913], "ioctl": [63, 256, 406, 739, 741, 767, 775, 776, 781, 787, 873, 877], "crw": [63, 737, 804, 855, 877, 878, 879], "254": [63, 161, 212, 215, 220, 222, 225, 232, 235, 253, 260, 270, 274, 280], "request": [63, 93, 98, 120, 141, 142, 145, 202, 204, 229, 235, 291, 425, 444, 466, 480, 649, 650, 653, 654, 731, 775, 899, 914, 1105], "request_lin": 63, "consum": [63, 120, 142, 145, 162, 212, 291, 418, 435, 464, 714, 716, 798, 806, 813, 920, 921, 932, 937, 939, 941, 944, 971, 993, 1002, 1028, 1083, 1130], "mytest": 63, "config": [63, 97, 115, 129, 130, 136, 141, 143, 145, 151, 159, 253, 270, 274, 321, 328, 337, 501, 702, 726, 746, 774, 855, 877, 878, 879, 886, 961, 971, 1100], "lineset": 63, "set_valu": [63, 716], "all_io": 63, "transform": [63, 66, 160, 175, 176, 179, 181, 191, 196, 197, 199, 200, 207, 218, 220, 223, 226, 249, 256, 258, 267, 273, 291, 298, 302, 414, 505, 506, 518, 520, 573, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 638, 639, 670, 694, 726, 957, 977, 1021, 1054, 1071], "ntime": [63, 981], "task": [63, 77, 114, 119, 155, 197, 210, 223, 237, 240, 243, 273, 279, 321, 324, 326, 327, 330, 331, 332, 335, 726, 800, 801, 818, 860, 869, 877, 880, 895, 910, 916, 929, 930, 932, 933, 1071, 1105], "interv": [63, 89, 115, 179, 209, 215, 216, 225, 228, 232, 253, 291, 321, 486, 488, 501, 502, 642, 716, 717, 897, 907, 931, 935], "none": [63, 117, 124, 136, 139, 140, 145, 150, 159, 161, 173, 183, 190, 191, 200, 205, 206, 209, 212, 215, 221, 222, 225, 228, 232, 235, 241, 250, 253, 257, 258, 260, 270, 274, 280, 292, 312, 404, 405, 426, 429, 549, 635, 637, 896, 913, 941, 968, 971, 993, 1019, 1026, 1096, 1112], "itertool": [63, 237, 239, 291, 975], "cram": [63, 133, 170, 741, 931, 968, 1084], "goe": [63, 65, 85, 143, 145, 160, 265, 414, 449, 514, 617, 637, 646, 696, 737, 773, 815, 816, 902, 929, 935, 945, 948, 955, 998, 1001, 1021], "stuff_raw": 63, "mod": [63, 228, 253, 273, 751], "sidewai": [63, 176, 179, 234, 330, 331, 976, 977], "numpi": [63, 172, 176, 191, 210, 216, 223, 258, 264, 292, 294, 426, 995, 1070, 1074, 1077, 1085, 1089, 1100, 1107], "transpos": [63, 833], "col": 63, "tolist": 63, "outsid": [63, 228, 453, 466, 546, 554, 559, 701, 702, 763, 834, 916, 932, 971], "instanti": [63, 199, 321, 444, 455, 469, 470, 483, 484, 485, 488, 570, 599, 617, 638, 664, 670, 692, 705, 706, 983, 984, 1074], "coro": [63, 670, 672, 673, 675, 676, 677, 678], "cannot": [63, 110, 111, 136, 140, 141, 142, 147, 151, 162, 163, 169, 170, 172, 179, 199, 232, 259, 262, 303, 380, 381, 384, 385, 404, 406, 408, 411, 414, 432, 435, 447, 470, 498, 537, 546, 549, 551, 554, 555, 578, 613, 614, 616, 617, 619, 620, 624, 643, 646, 649, 655, 681, 691, 692, 696, 702, 704, 714, 716, 769, 773, 778, 793, 810, 815, 818, 829, 844, 852, 888, 932, 941, 963, 964, 965, 969, 971, 983, 988, 995, 1003, 1004, 1010, 1011, 1021, 1090, 1092, 1093, 1105, 1130], "stuff_raw2": 63, "05": [63, 97, 113, 143, 150, 155, 199, 234, 257, 264, 275, 284, 287, 316, 334, 433, 1075], "runtimeerror": [63, 163, 199, 253, 302, 968, 970], "reus": [63, 155, 161, 963, 1013], "alreadi": [63, 80, 113, 140, 141, 143, 151, 162, 164, 172, 176, 232, 259, 262, 397, 408, 414, 446, 466, 468, 479, 482, 501, 518, 598, 726, 732, 746, 753, 761, 771, 773, 776, 793, 869, 877, 878, 879, 886, 899, 900, 902, 907, 908, 910, 927, 962, 968, 995, 1021, 1100, 1105, 1107, 1114], "bare": [63, 78, 80, 87, 89, 108, 122, 140, 335, 870, 878], "create_coro": 63, "ctor": [63, 167, 176, 225, 274, 498, 520, 528, 545, 548, 549, 552, 562, 564, 599, 622, 646, 647, 649, 653, 654, 679, 687, 702, 792], "nest": [63, 136, 200, 213, 222, 232, 239, 243, 260, 270, 348, 377, 378, 404, 664, 716, 720, 778, 968, 1011, 1098], "_blink": 63, "coro_cr": 63, "creator": [63, 134, 151], "create_factory_for_blink": 63, "blinkfunc": 63, "blink_func": 63, "stuff_decorator_stage1": 63, "stage1": 63, "stararg": [63, 969, 972, 993], "func": [63, 199, 209, 215, 225, 228, 259, 273, 504, 573, 642, 657, 664, 705, 969, 973], "becom": [63, 68, 78, 89, 92, 117, 119, 140, 142, 168, 180, 259, 262, 282, 284, 287, 363, 393, 395, 402, 405, 426, 442, 446, 485, 646, 701, 702, 703, 773, 810, 829, 862, 878, 879, 886, 929, 932, 933, 968, 974, 1004, 1106, 1112, 1127, 1128], "obsolet": [63, 172, 995], "prog": [63, 213, 302], "demo": [63, 97, 98, 113, 140, 163, 167, 172, 175, 177, 180, 181, 184, 192, 199, 207, 210, 213, 216, 218, 223, 229, 246, 249, 252, 255, 256, 276, 277, 317, 335, 427, 428, 432, 433, 437, 440, 488, 496, 626, 703, 726, 803, 806, 807, 828, 829, 869, 898, 940, 949, 995, 1077, 1111, 1131, 1135], "opposit": [63, 144, 378, 879, 932, 1084], "futur": [63, 113, 116, 118, 147, 212, 232, 244, 245, 247, 256, 298, 308, 330, 331, 402, 466, 636, 670, 712, 714, 715, 725, 726, 783, 1125], "steig": [64, 148], "normalweg": 64, "w\u00e4r": 64, "umst\u00e4nden": [64, 1120, 1124, 1139], "renat": 64, "beschreibung": [64, 184, 186, 194, 197, 200, 201, 203, 219, 231, 861], "bergfex": 64, "reden": 64, "sie": [64, 148, 154, 159, 163, 220, 225, 292, 312, 318, 335, 795, 860, 1119, 1121, 1122, 1123, 1129, 1139, 1141, 1142, 1143], "tagen": [64, 1129], "wir": [64, 158, 163, 167, 173, 175, 183, 184, 189, 203, 222, 228, 235, 288, 335, 603, 1120, 1135, 1136], "w\u00fcrden": 64, "denk": [64, 148, 204, 1139], "beiden": [64, 159, 173, 220, 228, 235], "h\u00fctten": [64, 149], "schlafen": 64, "hochk\u00f6nig": 65, "cite": [65, 147, 161, 172, 294], "complain": [65, 142, 151, 155, 169, 364, 537, 552, 553, 748, 776, 886], "subrepo": 65, "whole": [65, 219, 231, 232, 234, 237, 240, 249, 252, 291, 302, 426, 655, 664, 706, 748, 751, 773, 818, 900, 969, 1040, 1128], "subtitl": 65, "fight": [65, 812], "against": [65, 142, 151, 192, 200, 212, 213, 384, 426, 430, 434, 485, 501, 717, 746, 748, 753, 757, 765, 808, 905, 950, 955, 965, 979, 1037, 1098, 1105, 1130], "fake": [65, 877], "simplest": [65, 178, 240, 427, 444, 577, 584, 691, 712, 778, 808, 862, 926, 959, 997, 1002, 1105, 1113], "unprofession": [65, 144], "populist": 65, "gtest_discover_test": 65, "robust": 65, "sentenc": 65, "implicitli": [65, 196, 201, 212, 391, 441, 549, 557, 647, 655, 736, 903, 968, 1000, 1084], "gtest_add_test": 65, "scan": [65, 209, 232, 235, 877, 879], "primit": [65, 140, 184, 185, 265, 977, 1125, 1135], "sort": [65, 85, 106, 108, 127, 140, 167, 173, 181, 185, 200, 202, 212, 213, 218, 220, 222, 223, 228, 236, 250, 253, 260, 265, 274, 280, 414, 415, 418, 419, 429, 520, 578, 596, 606, 610, 639, 680, 684, 692, 705, 714, 716, 726, 813, 817, 855, 866, 879, 970, 1018, 1019, 1073, 1098, 1100], "port": [65, 136, 137, 142, 147, 152, 212, 246, 255, 276, 277, 291, 303, 335, 726, 806, 812, 860, 869, 880, 885, 889, 907, 1028, 1083, 1087, 1100, 1129, 1136], "trap": [65, 141, 202, 397, 402, 420, 548, 1124, 1126], "hehe": [65, 172, 179], "html_sidebar": 65, "rtd": [65, 137], "linkcheck": 65, "admonit": 65, "matrix": [65, 161, 163, 264, 324, 326, 415], "thoma": [65, 134], "cokela": 65, "ablog": 65, "couldn": [65, 147, 151, 176, 179, 1009], "figur": [65, 113, 126, 132, 137, 145, 146, 161, 216, 967], "piec": [65, 78, 133, 141, 404, 520, 572, 878, 909], "especi": [65, 86, 92, 120, 141, 145, 164, 172, 256, 317, 335, 337, 363, 374, 404, 424, 646, 748, 879], "feed": [65, 84, 137, 1076], "blog_baseurl": 65, "nicer": [65, 933], "pour": [65, 442, 799], "tag": [65, 143, 145, 148, 149, 173, 189, 191, 233, 429, 437, 746, 961, 964, 1137], "resolv": [66, 77, 151, 155, 209, 212, 215, 218, 225, 228, 235, 238, 253, 260, 270, 274, 381, 407, 556, 890, 947, 950, 1075, 1076], "buildenviron": 66, "resolve_refer": 66, "builder": [66, 212, 1028], "get_and_resolve_doctre": 66, "apply_post_transform": 66, "addnod": 66, "docstr": [66, 136, 196, 199, 209, 215, 221, 233, 236, 239, 261, 293, 317, 999], "emit": [66, 84, 469, 470, 815], "doctre": 66, "increasingli": 68, "whose": [68, 151, 209, 215, 225, 228, 264, 274, 330, 331, 464, 534, 637, 638, 870, 971, 1105, 1112], "mainten": [68, 359, 385, 404, 964], "easier": [68, 80, 85, 92, 161, 202, 426, 452, 557, 641, 773, 1125], "never": [68, 110, 111, 140, 141, 142, 147, 160, 222, 228, 232, 274, 292, 363, 384, 400, 411, 414, 424, 442, 464, 543, 624, 702, 812, 870, 893, 918, 948], "simpler": [68, 151, 202, 266, 269, 342, 401, 435, 581, 769, 773, 878, 890], "wors": [68, 128, 143, 228, 410, 426, 664, 895, 1108], "makefil": [68, 97, 202, 245, 247, 427, 438, 742, 746, 774, 775, 952, 955, 957, 964, 965], "everytbodi": 69, "runtim": [69, 140, 151, 173, 177, 201, 225, 228, 339, 360, 408, 418, 419, 432, 437, 468, 469, 482, 496, 531, 540, 580, 598, 599, 642, 684, 691, 705, 706, 916, 947, 983, 1001, 1013, 1077, 1078], "dispatch": [69, 291, 531, 540, 616, 619, 620], "hell": [69, 192, 226, 410, 443, 656, 687, 709, 763, 798, 923, 1084], "destructor": [69, 70, 97, 106, 120, 202, 218, 239, 265, 267, 319, 320, 448, 462, 490, 500, 514, 520, 529, 535, 542, 543, 544, 545, 550, 552, 567, 615, 616, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 638, 639, 651, 655, 682, 698, 707, 713, 715, 723, 725, 726, 734, 765, 778, 790, 1117], "opportun": [69, 147, 150, 160, 172, 191, 414, 633, 984, 1128], "shoot": [69, 835], "oneself": [69, 1130], "encapsul": [70, 73, 200, 213, 218, 265, 267, 291, 303, 424, 444, 448, 462, 488, 490, 491, 492, 493, 494, 495, 496, 497, 500, 507, 509, 520, 542, 543, 565, 568, 571, 587, 593, 597, 606, 609, 610, 615, 624, 625, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 642, 651, 682, 698, 707, 715, 723, 725, 726, 742, 775, 941, 996, 1098, 1126], "hide": [70, 201, 213, 269, 996], "fanci": [70, 1016, 1077, 1097], "whatnot": [70, 216, 714, 773, 870, 878, 896, 926], "boost": [71, 218, 437, 440, 520, 670, 934, 1143], "feel": [71, 140, 142, 151, 172, 537, 634, 636, 637, 642, 915, 933, 995], "cluster_ecpropos": [72, 73, 74, 87, 726], "cluster_ecproposal_ec2": [72, 74, 726], "cluster_ecproposal_ec2_python": [72, 74, 726], "cluster_ecproposal_ec1": [72, 73, 74, 87, 726], "cluster_ecproposal_ec1_cxx": [72, 73, 74, 87, 726], "cluster_ecproposal_ec1_linux": [72, 73, 74, 726], "cluster_ecproposal_ec1_mt": [72, 73, 74, 87, 726], "ecproposal_ec2_python_exercise_avg_displai": [72, 74, 726], "ex": [72, 73, 74, 78, 87, 128, 200, 213, 514, 531, 692, 726, 818, 833, 1098, 1107], "averag": [72, 73, 74, 78, 84, 85, 176, 212, 216, 232, 267, 291, 447, 463, 493, 500, 726, 935, 1028], "displai": [72, 73, 74, 78, 114, 116, 120, 145, 209, 215, 225, 228, 253, 256, 258, 260, 265, 270, 274, 326, 418, 491, 726, 808, 855, 864, 877, 931, 1107], "ecproposal_ec2_python_exercise_sensor": [72, 74, 726], "temperatur": [72, 73, 74, 78, 82, 91, 94, 97, 113, 114, 116, 120, 176, 209, 256, 291, 323, 326, 341, 343, 345, 443, 449, 454, 475, 489, 490, 491, 492, 493, 494, 495, 496, 500, 501, 502, 513, 531, 542, 620, 652, 726, 773, 869, 876, 908, 910, 927, 983, 1059, 1074, 1075, 1076, 1077], "ecproposal_ec1_linux_exercise_led_displai": [72, 73, 74, 726], "ecproposal_ec1_linux_exercise_avg_sensor": [72, 73, 74, 726], "ecproposal_ec1_linux_exercise_avg_sensor_parallel": [72, 73, 74, 726], "ecproposal_ec2_python_bas": [72, 74, 726], "ecproposal_ec1_linux_exercise_sensor": [72, 73, 74, 726], "ecproposal_ec2_python_web_sensor": [72, 74, 726], "ecproposal_ec2_python_flask": [72, 74, 726], "ecproposal_ec1_git": [72, 73, 74, 726], "ecproposal_ec1_cxx_build": [72, 73, 74, 87, 726], "ecproposal_ec1_cxx_oo_bas": [72, 73, 74, 726], "ecproposal_ec1_cxx_ifac": [72, 73, 74, 726], "ecproposal_ec1_cxx_unittest": [72, 73, 74, 726], "ecproposal_ec1_linux_gpio": [72, 73, 74, 726], "ecproposal_ec1_linux_bas": [72, 73, 74, 726], "ecproposal_ec1_linux_dev_mgmt": [72, 73, 74, 726], "ecproposal_ec1_mt_wait": [72, 73, 74, 87, 726], "ecproposal_ec1_mt_exercise_mt_race_fix": [72, 73, 74, 87, 726], "avoid": [72, 73, 74, 78, 87, 140, 147, 155, 232, 350, 385, 463, 498, 500, 510, 544, 548, 599, 726, 771, 862, 878, 1126], "ecproposal_ec1_mt_exercise_mt_rac": [72, 73, 74, 87, 726], "ecproposal_ec1_mt_lock": [72, 73, 74, 87, 726], "semaphor": [72, 73, 74, 76, 78, 87, 89, 135, 164, 165, 187, 209, 215, 225, 228, 335, 714, 726, 765, 920, 1130, 1140], "qualiti": [73, 147, 201, 264, 878, 1099], "assur": 73, "characterist": 73, "polymorph": [74, 106, 113, 114, 118, 199, 200, 213, 265, 267, 269, 284, 287, 426, 448, 462, 490, 542, 615, 619, 620, 639, 700, 705, 726, 1098, 1125, 1128], "concurr": [74, 172, 176, 226, 692, 763, 979, 1071], "increment": [75, 158, 201, 215, 218, 241, 264, 342, 346, 350, 370, 379, 386, 390, 392, 396, 399, 403, 412, 416, 421, 422, 520, 537, 644, 682, 723, 725, 726, 805, 917, 918, 919, 940, 941, 979], "lossi": 75, "access": [76, 78, 88, 110, 111, 115, 137, 141, 142, 143, 145, 147, 160, 170, 180, 187, 199, 209, 212, 215, 218, 225, 228, 235, 238, 253, 256, 260, 270, 274, 284, 303, 317, 320, 322, 354, 393, 414, 415, 453, 469, 494, 495, 496, 497, 520, 543, 555, 557, 560, 561, 563, 564, 578, 603, 617, 624, 627, 630, 631, 634, 635, 636, 637, 638, 639, 653, 670, 685, 689, 701, 726, 731, 741, 744, 750, 761, 769, 773, 775, 791, 806, 809, 818, 820, 821, 844, 869, 879, 888, 889, 895, 899, 903, 905, 909, 913, 917, 931, 932, 940, 945, 966, 971, 978, 979, 982, 1001, 1008, 1010, 1023, 1039, 1075, 1092, 1107, 1130], "flavor": [76, 87, 140, 427, 691, 696], "stash": 77, "suffic": [77, 147, 352, 402], "purpos": [77, 78, 80, 118, 133, 141, 145, 151, 172, 191, 209, 215, 225, 228, 240, 253, 320, 348, 426, 438, 545, 577, 617, 706, 773, 806, 815, 878, 900, 905, 926, 947, 965, 995, 1076, 1106, 1129, 1136], "unifi": [78, 117, 179, 570], "intention": [78, 201, 274, 657], "power": [78, 89, 139, 141, 156, 161, 201, 218, 318, 319, 320, 338, 350, 351, 393, 402, 773, 783, 790, 804, 870, 874, 877, 878, 879, 898, 913, 931, 935, 972, 990, 994, 996, 1002, 1007, 1019, 1094], "being": [78, 81, 114, 128, 140, 143, 144, 150, 164, 172, 178, 199, 228, 232, 291, 317, 363, 390, 407, 443, 446, 531, 555, 598, 700, 702, 706, 708, 714, 724, 755, 769, 773, 808, 890, 905, 931, 978, 985, 995, 998, 1075, 1114, 1117, 1130], "address": [78, 99, 106, 110, 111, 113, 114, 140, 142, 143, 144, 147, 180, 187, 192, 199, 201, 202, 218, 220, 246, 255, 256, 267, 276, 277, 314, 319, 320, 328, 381, 383, 392, 396, 399, 402, 403, 411, 412, 416, 421, 422, 442, 448, 453, 456, 462, 464, 466, 471, 490, 491, 492, 493, 494, 495, 496, 497, 500, 501, 542, 552, 557, 644, 654, 655, 682, 696, 715, 723, 725, 726, 753, 757, 769, 771, 800, 801, 802, 803, 806, 807, 809, 813, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 847, 848, 849, 850, 851, 853, 869, 871, 873, 878, 879, 881, 882, 883, 884, 885, 890, 892, 896, 898, 900, 907, 908, 910, 915, 923, 924, 926, 927, 930, 932, 940, 947, 949, 951, 952, 953, 954, 955, 956, 957, 958, 964, 979, 982, 1075, 1076, 1095, 1105], "crucial": [78, 140, 164, 417, 579], "mmu": [78, 140, 744, 787, 810, 931], "sophist": [78, 209, 443, 464, 501, 638], "permiss": [78, 97, 100, 101, 102, 113, 175, 176, 180, 182, 192, 199, 215, 235, 246, 255, 270, 273, 276, 291, 303, 312, 317, 318, 319, 320, 322, 490, 542, 628, 715, 724, 725, 726, 732, 773, 800, 801, 803, 806, 807, 810, 816, 819, 823, 824, 825, 826, 827, 829, 830, 831, 835, 847, 850, 852, 853, 855, 869, 870, 880, 883, 885, 886, 889, 890, 895, 898, 899, 900, 903, 905, 906, 908, 910, 924, 927, 930, 932, 933, 945, 970, 1071, 1100, 1107, 1131, 1140], "nativ": [78, 97, 104, 113, 139, 145, 147, 173, 209, 245, 247, 265, 324, 726, 773, 869, 948, 952, 954, 957, 1080, 1083, 1089], "varieti": [78, 420, 809, 947, 1128], "storag": [78, 145, 150, 427, 655, 773, 809, 870, 878, 895, 915, 1141], "underli": [78, 200, 207, 223, 232, 273, 317, 322, 692, 879, 1071, 1076, 1080], "platform": [78, 147, 200, 209, 213, 215, 225, 228, 232, 240, 258, 310, 319, 337, 753, 773, 878, 879, 913, 931, 1059, 1098, 1105, 1107], "offer": [78, 140, 150, 191, 266, 378, 555, 559], "popular": [78, 151, 164, 168, 373, 650, 798, 879, 931, 947, 963, 989, 1073, 1079, 1087, 1101, 1128], "often": [78, 89, 139, 140, 141, 142, 172, 222, 232, 259, 262, 282, 359, 369, 390, 429, 444, 456, 570, 692, 773, 833, 909, 975, 995, 1009, 1127, 1128], "appropri": [78, 117, 127, 133, 140, 150, 155, 160, 192, 232, 359, 373, 385, 500, 706, 769, 877, 889, 940, 1077, 1083, 1128], "prototyp": [78, 303, 350, 442, 504, 537, 653, 773, 870, 878, 891, 968, 1083], "higher": [78, 140, 151, 209, 215, 225, 228, 724, 771, 870, 932, 934, 941, 949, 957, 1083, 1127], "fulli": [78, 144, 147, 151, 176, 406, 501, 941], "distribut": [78, 145, 150, 155, 167, 172, 192, 202, 220, 232, 314, 442, 488, 496, 709, 744, 773, 811, 812, 933, 995], "en": [78, 145, 157, 167, 228, 256, 622], "vogu": 78, "serial": [78, 139, 140, 150, 180, 215, 216, 228, 806, 808, 1129, 1136], "groundwork": 78, "lai": 78, "instruct": [78, 139, 143, 147, 170, 201, 256, 265, 267, 414, 485, 701, 716, 919, 931, 962, 1059], "consolid": [78, 172], "makeri": 78, "everybodi": [78, 145, 266, 406, 452, 546, 585, 628, 804, 998, 1002, 1105, 1125], "clarifi": 78, "earli": [78, 139, 172, 176, 181, 266, 778, 790, 805, 933, 966, 983, 1021, 1127], "matter": [78, 139, 144, 145, 147, 155, 172, 178, 180, 344, 388, 420, 427, 434, 444, 544, 545, 557, 560, 646, 685, 692, 702, 704, 748, 773, 775, 818, 829, 871, 877, 879, 890, 970, 995, 1096, 1107, 1117, 1128], "rewrit": [78, 80, 140, 426], "translat": [78, 91, 92, 160, 173, 191, 228, 232, 235, 238, 274, 691, 1038], "flask": [78, 93, 137, 176, 179, 969], "network": [78, 110, 111, 126, 135, 136, 137, 140, 147, 157, 158, 180, 182, 187, 212, 228, 235, 238, 249, 253, 255, 256, 260, 270, 274, 276, 291, 319, 335, 336, 420, 453, 726, 727, 750, 790, 806, 808, 809, 811, 869, 872, 873, 878, 879, 880, 890, 894, 895, 898, 899, 910, 929, 1136, 1140], "oppos": [80, 113, 139, 179, 213, 220, 230, 265, 385, 429, 434, 531, 857, 871, 878, 886, 920, 933, 940, 945, 964, 990, 1001, 1002, 1084, 1092], "ahead": [80, 155, 424, 985], "optimz": 80, "donald": [80, 413], "knuth": [80, 413], "prematur": [80, 413, 417], "optim": [80, 141, 253, 265, 400, 416, 417, 421, 422, 429, 726, 757, 1083, 1124, 1126], "evil": [80, 218, 354, 404, 413, 417, 429, 557], "knowledg": [81, 85, 259, 262, 265, 501, 635, 637, 773, 871, 879, 972, 994, 1099], "onewir": [81, 85, 97, 106, 113, 114, 120, 256, 267, 317, 320, 489, 490, 542, 726, 869, 876, 877, 908, 910, 927], "protocol": [81, 132, 145, 178, 179, 189, 211, 214, 216, 217, 221, 224, 227, 230, 239, 252, 254, 259, 262, 268, 269, 271, 272, 275, 278, 290, 291, 293, 294, 323, 326, 358, 366, 453, 466, 731, 860, 871, 873, 877, 879, 880, 888, 889, 909, 968, 972, 976, 983], "aspect": [81, 115, 172, 176, 202, 226, 265, 267, 449, 804, 877, 879, 1071, 1099, 1105, 1130], "regard": [81, 147, 172, 303, 833, 995, 1002, 1101, 1105], "filesystem": [81, 85, 106, 113, 139, 142, 151, 180, 182, 192, 243, 317, 322, 501, 725, 726, 773, 799, 878, 890, 906, 913, 931, 950, 1105, 1131, 1136, 1138, 1142], "hwmon": [81, 85, 114, 323, 326], "composit": [82, 106, 120, 176, 202, 248, 266, 267, 284, 441, 448, 462, 476, 490, 542, 726, 975, 1128], "mock": [82, 113, 114, 118, 119, 120, 266, 268, 269, 290, 294, 304, 306, 490, 491, 492, 493, 495, 531, 542, 726, 1112], "pin": [84, 119, 256, 303, 870, 874, 877, 878], "light": [84, 150, 812, 994, 1105], "linearli": [84, 232, 584, 809], "cold": [84, 191], "hot": [84, 142, 415, 418, 755], "queri": [84, 1003], "said": [84, 110, 111, 142, 155, 172, 259, 262, 269, 464, 577, 624, 708, 714, 734, 870, 878, 879, 890, 917, 932, 975, 995, 1015, 1084, 1097], "ds18s20": [85, 323, 1105], "datasheet": [85, 125, 769, 870, 879], "lm73": [85, 256, 323, 326, 726, 869, 876, 879], "ti": [85, 139, 424, 502, 546, 703], "hoc": [85, 202, 384], "report": [85, 114, 139, 142, 143, 155, 157, 159, 328, 410, 420, 543, 891, 926, 1112, 1114], "experi": [85, 128, 147, 172, 424, 429, 528, 878, 879, 1106], "subsystem": [86, 97, 98, 103, 104, 113, 158, 180, 187, 192, 229, 245, 247, 249, 255, 256, 265, 267, 268, 284, 290, 726, 751, 769, 783, 803, 807, 809, 869, 870, 877, 878, 879, 913, 929, 970, 1105, 1129, 1130, 1136], "deprec": [86, 119, 269, 611, 899, 913, 1125], "foremost": 87, "osen": [87, 89, 150, 708, 724, 931], "recurs": [87, 88, 176, 200, 209, 215, 225, 228, 712, 765, 778, 817, 818, 833, 845, 855, 862, 882, 889, 926, 1007, 1011, 1125], "mother": [88, 108, 156, 218, 520, 988, 1125], "protect": [88, 140, 142, 192, 200, 212, 265, 267, 365, 384, 482, 483, 543, 546, 557, 613, 615, 616, 639, 714, 726, 757, 765, 771, 810, 852, 878, 919, 920, 931, 979, 982, 991, 1117, 1130], "critic": [88, 140, 150, 420, 713, 763, 765, 1100], "kind": [88, 140, 142, 150, 155, 160, 172, 176, 209, 215, 216, 225, 226, 228, 240, 256, 268, 269, 290, 294, 449, 501, 549, 596, 646, 655, 700, 714, 804, 870, 877, 878, 979, 1071, 1097, 1099, 1130], "poll": [89, 146, 157, 765, 767, 790, 913, 918, 920, 937, 941, 1129, 1136, 1140, 1142], "second": [89, 139, 142, 143, 147, 159, 172, 178, 199, 205, 209, 213, 215, 225, 228, 232, 258, 260, 303, 338, 348, 402, 418, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 478, 482, 483, 484, 488, 491, 501, 537, 552, 600, 602, 603, 642, 671, 672, 691, 702, 703, 716, 717, 720, 721, 722, 783, 810, 815, 818, 878, 897, 900, 907, 931, 940, 944, 948, 949, 963, 964, 965, 1015, 1023, 1100, 1112, 1125], "readi": [89, 139, 870, 1105], "rare": [89, 145, 162, 176, 427, 437, 499, 501, 552, 650, 701, 855, 877, 894, 1006, 1010, 1023, 1106], "btw": [89, 144, 150, 172, 178, 192, 199, 219, 222, 317, 401, 742, 808, 1060, 1062], "increas": [89, 142, 414, 870, 933, 935, 963, 1128], "tight": [89, 164, 358, 716, 776, 1096], "bui": [89, 140, 443], "bigger": [89, 140, 172, 414, 1077], "avail": [89, 139, 140, 142, 143, 145, 151, 155, 164, 168, 172, 192, 201, 209, 215, 225, 228, 282, 290, 291, 294, 336, 428, 430, 435, 439, 444, 469, 470, 670, 706, 712, 716, 746, 773, 778, 805, 829, 870, 874, 877, 878, 929, 932, 933, 950, 961, 966, 971, 978, 1002, 1020, 1021, 1070, 1079, 1096, 1100, 1107, 1108, 1127, 1130], "intro": [93, 113, 119, 120, 137, 167, 191, 201, 210, 223, 224, 237, 240, 259, 262, 267, 273, 279, 291, 542, 642, 650, 670, 694, 726, 869, 893, 910, 912, 914, 1071, 1126, 1128, 1140], "rout": [93, 176, 969], "jinja2": 93, "ss2022": [96, 726, 802, 803, 869], "ws2022": 96, "lab": [96, 106, 113, 317], "vo": [97, 106, 113, 323], "ku": [97, 105, 106, 113], "g1": [97, 726, 802, 803, 869], "g2": [97, 317, 726, 802, 803, 869], "08": [97, 99, 105, 113, 143, 150, 151, 152, 206, 209, 234, 238, 264, 334, 438, 870, 877, 879, 901, 962, 1075], "cont": [97, 113, 210, 273], "command": [97, 99, 113, 136, 139, 144, 150, 180, 192, 197, 207, 209, 215, 216, 223, 225, 228, 237, 240, 246, 248, 255, 256, 273, 276, 277, 303, 317, 322, 335, 385, 406, 417, 429, 439, 440, 441, 448, 462, 466, 476, 490, 499, 542, 552, 701, 715, 725, 726, 773, 799, 800, 801, 802, 803, 806, 807, 808, 810, 811, 812, 813, 815, 817, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 835, 836, 837, 838, 840, 841, 842, 844, 845, 847, 848, 849, 851, 853, 861, 866, 869, 878, 879, 880, 881, 882, 889, 893, 898, 900, 908, 910, 924, 926, 927, 930, 931, 932, 933, 947, 948, 955, 959, 963, 1023, 1071, 1100, 1107, 1114, 1128], "wsl": [97, 98, 103, 104, 113, 229, 249, 255, 268, 284, 290, 726, 803, 807, 869, 950, 957, 958, 962], "homework": [97, 102, 105, 113, 142], "sshf": [97, 101, 113, 246, 255, 256, 276, 277, 324, 726, 869, 880, 885, 950, 959], "toolchain": [97, 103, 104, 106, 108, 113, 135, 152, 167, 169, 256, 335, 426, 427, 433, 448, 462, 490, 491, 492, 493, 494, 495, 496, 497, 500, 501, 502, 542, 715, 725, 726, 774, 803, 806, 807, 869, 892, 898, 900, 907, 908, 910, 924, 927, 930, 932, 949, 950, 951, 952, 955, 963, 964, 965, 996, 1120, 1122, 1123, 1124, 1132, 1138, 1140], "bashrc": [97, 104, 113, 139, 151, 212, 246, 255, 256, 270, 276, 277, 726, 803, 805, 853, 855, 869, 889, 959, 961], "studi": [97, 104, 201, 244, 245, 247, 248, 256, 298, 441, 448, 642, 682, 725, 726, 869, 952, 954, 957], "ds18b20": [97, 113, 120, 256, 317, 726, 869, 876, 907], "slave": [97, 113, 120, 256, 726, 869, 874, 876, 907], "redirect": [97, 100, 113, 141, 144, 180, 182, 192, 209, 215, 225, 228, 246, 255, 256, 276, 302, 317, 322, 726, 800, 801, 802, 803, 817, 837, 838, 840, 841, 844, 845, 847, 853, 866, 869, 899, 1021, 1121, 1131, 1138], "pipe": [97, 140, 145, 147, 160, 180, 182, 192, 246, 255, 256, 258, 276, 302, 317, 322, 724, 726, 803, 810, 815, 855, 860, 869, 899, 943, 944, 945, 959, 1021, 1121, 1131, 1138], "06": [97, 106, 113, 150, 181, 225, 244, 257, 264, 281, 284, 287, 316, 334, 426, 437, 520, 724, 998, 1075], "past": [97, 140, 144, 145, 202, 218, 390, 575, 577, 581, 584, 588, 653, 746, 748, 812, 1066, 1070, 1122], "2p": [97, 104], "3p": [97, 104], "5p": [97, 104], "pointer": [97, 108, 113, 120, 143, 167, 243, 309, 318, 319, 320, 335, 348, 350, 352, 393, 394, 396, 397, 399, 401, 402, 403, 412, 416, 421, 422, 456, 501, 514, 531, 536, 538, 543, 544, 546, 554, 561, 563, 572, 576, 580, 584, 585, 588, 594, 598, 611, 644, 651, 652, 653, 680, 682, 687, 689, 691, 696, 701, 703, 706, 707, 715, 721, 722, 723, 725, 726, 732, 739, 744, 755, 761, 790, 793, 891, 917, 945, 1021, 1122, 1123, 1124, 1125, 1126, 1128], "exit": [97, 113, 136, 140, 142, 170, 191, 209, 215, 218, 225, 228, 250, 256, 291, 310, 335, 339, 391, 433, 440, 449, 552, 619, 699, 701, 726, 736, 741, 775, 869, 879, 895, 896, 897, 899, 900, 905, 907, 910, 911, 927, 937, 944, 945, 964, 970, 978, 979, 997, 1000, 1013, 1023, 1033, 1050, 1100, 1107], "statu": [97, 113, 114, 136, 141, 143, 155, 209, 215, 218, 225, 228, 240, 250, 256, 335, 339, 391, 429, 433, 440, 619, 724, 726, 775, 789, 869, 900, 905, 907, 910, 927, 931, 944, 964, 1000, 1026, 1085], "yai": [97, 136, 212, 220, 222, 235, 241, 260, 270, 585, 636, 642, 926], "ol": [97, 113, 218, 265, 267, 274, 326, 448, 462, 490, 491, 492, 493, 494, 495, 496, 497, 500, 507, 509, 542, 546, 550, 565, 568, 571, 587, 593, 597, 606, 609, 610, 615, 624, 625, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 651, 682, 694, 698, 704, 707, 715, 723, 725, 726, 866, 941, 1016, 1021, 1043], "randomsensor": [97, 120, 449, 454, 463, 475, 489, 490, 496, 500, 510, 511, 512, 513, 515, 516, 542, 700, 701, 702, 703, 726, 983], "rectangl": [97, 133, 452, 520, 549, 565, 639, 726], "mystr": [97, 166, 218], "point3d": [97, 565, 639, 726], "cuboid": [97, 565, 639, 726], "hierarchi": [99, 106, 110, 111, 115, 176, 177, 179, 181, 199, 200, 213, 216, 228, 246, 255, 256, 276, 277, 287, 328, 415, 442, 443, 444, 447, 448, 462, 463, 467, 469, 490, 500, 542, 726, 803, 806, 807, 808, 819, 822, 823, 824, 825, 826, 827, 828, 833, 839, 845, 852, 869, 881, 882, 883, 884, 885, 910, 928, 957, 958, 1098], "parent": [99, 109, 110, 111, 142, 155, 157, 246, 255, 256, 276, 277, 724, 726, 753, 803, 805, 806, 807, 808, 809, 818, 819, 822, 823, 824, 825, 826, 827, 828, 836, 837, 838, 839, 840, 842, 844, 845, 846, 857, 869, 881, 882, 883, 884, 885, 910, 916, 957, 958], "login": [99, 113, 120, 145, 147, 180, 192, 246, 316, 317, 726, 800, 801, 803, 804, 805, 807, 809, 810, 811, 819, 822, 823, 824, 825, 826, 827, 828, 834, 869, 870, 878, 881, 882, 883, 884, 885, 886, 888, 890, 907, 957, 958, 1049, 1120, 1129, 1136], "bourn": [99, 113, 156, 180, 182, 246, 255, 256, 276, 317, 318, 319, 322, 335, 336, 448, 462, 490, 491, 492, 493, 494, 495, 496, 497, 500, 542, 715, 724, 725, 726, 796, 800, 801, 802, 803, 806, 807, 814, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 863, 869, 892, 898, 900, 908, 910, 911, 924, 927, 930, 932, 949, 951, 952, 953, 954, 955, 956, 957, 958], "verifi": [100, 102, 113, 117, 119, 128, 150, 156, 168, 180, 192, 256, 328, 537, 555, 726, 803, 808, 837, 840, 841, 844, 847, 853, 869, 882, 883, 885, 1037, 1074, 1077, 1100], "joke": [100, 140], "mostli": [100, 226, 335, 340, 346, 358, 374, 404, 413, 558, 599, 701, 706, 741, 809, 812, 833, 899, 926, 929, 950, 1127], "secur": [101, 113, 143, 145, 147, 192, 212, 218, 246, 255, 276, 316, 726, 800, 801, 806, 808, 811, 829, 833, 869, 870, 880, 881, 882, 883, 884, 888, 899, 907, 957, 958, 964, 966, 998, 1028], "account": [101, 110, 111, 113, 145, 147, 167, 172, 176, 177, 212, 218, 228, 235, 238, 253, 257, 258, 260, 270, 274, 317, 322, 347, 420, 426, 624, 642, 746, 877, 890, 995, 1075], "authent": [101, 113, 180, 192, 201, 246, 255, 256, 276, 277, 314, 317, 726, 800, 801, 869, 880, 881, 882, 883, 884, 885, 890, 1037], "ownership": [101, 113, 167, 202, 256, 277, 291, 490, 510, 514, 520, 542, 655, 697, 700, 701, 715, 725, 726, 800, 801, 803, 806, 807, 810, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 869, 898, 899, 900, 908, 910, 924, 927, 930, 932, 1125, 1128], "setuid": [101, 113, 180, 246, 255, 256, 276, 277, 726, 803, 808, 828, 869], "quick": [102, 113, 172, 179, 197, 201, 207, 216, 223, 237, 249, 279, 469, 706, 860, 870, 1071, 1097], "credenti": [102, 113, 147, 240, 726, 801, 802, 803, 808, 822, 823, 824, 825, 826, 827, 828, 869, 886, 915, 968], "share": [102, 103, 106, 110, 111, 113, 122, 135, 140, 142, 147, 151, 155, 164, 165, 167, 168, 170, 173, 192, 202, 209, 212, 215, 225, 228, 232, 235, 238, 243, 244, 245, 247, 253, 256, 260, 270, 274, 283, 298, 314, 335, 336, 380, 407, 408, 414, 420, 427, 431, 438, 439, 443, 455, 500, 520, 528, 642, 703, 705, 706, 714, 716, 723, 725, 726, 751, 755, 771, 778, 802, 803, 806, 812, 822, 825, 826, 828, 864, 869, 878, 902, 915, 917, 923, 929, 935, 947, 950, 957, 959, 979, 982, 1114, 1129, 1130, 1138, 1140], "adjust": [102, 130, 134, 726, 773, 869, 878, 883, 885, 941, 948], "ubuntu": [103, 141, 147, 151, 155, 167, 168, 169, 170, 180, 245, 247, 256, 335, 726, 812, 869, 872, 890, 949, 950, 957, 958, 962, 1107, 1112], "zoom": [103, 104, 113, 147, 156, 172, 256, 270, 335, 427, 448, 462, 490, 491, 492, 493, 494, 495, 496, 497, 500, 542, 726, 855, 869, 949, 952, 953, 954, 955, 957, 1119], "recap": [104, 113, 176, 180, 189, 218, 265, 266, 293, 317, 538, 977], "endeavor": 104, "hoop": [104, 812, 944], "doze": [104, 146, 201, 202, 215, 317, 324, 402, 724, 812, 857, 1015, 1021, 1107], "pictur": [104, 137, 140, 161, 172, 176, 269, 270, 414, 420, 499, 785, 833, 835, 855, 870, 889, 893, 1140], "fit": [104, 151, 156, 161, 163, 358, 363, 443, 567, 642, 664, 732, 773, 870, 1074, 1076, 1085], "theori": [106, 176, 387, 414, 1076], "Of": [106, 113, 116, 120, 142, 145, 175, 176, 226, 244, 245, 247, 249, 256, 265, 267, 298, 448, 462, 490, 500, 542, 575, 615, 626, 639, 723, 725, 726, 802, 817, 864, 869, 907, 910, 912, 977, 1071, 1084, 1128], "ece20": [106, 109, 485, 501, 562, 800, 801, 808], "uml": [106, 120, 248, 266, 268, 269, 448, 462, 490, 500, 542, 726], "foundat": [106, 223, 253, 448, 462, 490, 542, 726, 773, 1136], "adapt": [106, 120, 143, 176, 248, 266, 441, 448, 450, 451, 462, 466, 476, 480, 490, 542, 706, 726, 878, 879, 1128], "syllabu": [106, 325], "vote": 106, "beurteilungsschema": 106, "grade": [106, 109, 113, 120, 321, 331, 1105], "total": [106, 109, 142, 151, 155, 159, 212, 228, 238, 245, 413, 418, 426, 440, 449, 464, 498, 499, 500, 501, 552, 562, 701, 855, 857, 870, 877, 878, 879, 890, 913, 941, 948, 949, 950, 959, 962, 1026, 1028, 1112], "compos": [106, 115, 122, 156, 218, 291, 352, 444, 623, 773, 961, 964, 973, 987, 1033, 1084], "practic": [106, 213, 222, 226, 232, 387, 424, 577, 616, 653, 688, 695, 877, 903, 945, 1079, 1098, 1125, 1128], "theoret": [106, 319, 338, 709], "semest": [106, 109, 321, 323], "addition": [106, 139, 142, 363, 447, 464], "deliv": [106, 140, 873, 944, 945], "variou": [106, 142, 218, 244, 245, 700, 714, 716, 773, 805, 1130], "weight": [106, 163, 172, 409, 767, 879, 995], "decid": [106, 141, 142, 147, 172, 226, 413, 443, 504, 518, 582, 769, 773, 793, 877, 978, 995], "excerpt": [106, 176, 179, 319, 320, 1028, 1085], "w1": [106, 113, 114, 256, 485, 501, 502, 907], "soup": [106, 137, 427, 429, 430, 432, 433, 435, 436, 438, 440, 442, 443, 444, 445, 446, 447, 449, 451, 454, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 498, 500, 503, 504, 505, 506, 508, 510, 511, 512, 513, 515, 516, 517, 518, 519, 622, 702, 911, 914, 971, 974, 1023, 1105, 1114], "armv8": [106, 151, 256, 502, 948, 961, 962], "rpi4": [106, 151, 256, 502, 948, 961, 962], "gnueabihf": [106, 151, 256, 502, 773, 948, 959, 961, 962], "shape": [106, 133, 161, 163, 202, 264, 265, 490, 520, 542, 562, 642, 726, 773, 899, 1076, 1079, 1089], "algorithm": [106, 141, 150, 161, 209, 215, 223, 225, 228, 236, 238, 244, 245, 265, 274, 414, 490, 507, 531, 538, 542, 569, 580, 582, 583, 585, 586, 589, 590, 606, 609, 610, 639, 684, 692, 694, 705, 709, 726, 1050, 1073, 1077], "find_if": [106, 108, 202, 218, 265, 298, 584, 587, 606, 610, 627, 636, 639, 705, 726], "customiz": [106, 265, 587, 606, 610, 639, 726], "binary_search": [106, 108, 202, 218, 265, 587, 606, 610, 639, 726], "associ": [106, 151, 169, 177, 179, 181, 197, 202, 256, 259, 262, 265, 267, 361, 362, 370, 375, 379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 490, 491, 507, 509, 542, 577, 606, 610, 639, 642, 644, 670, 682, 723, 725, 726, 732, 739, 797, 871, 899, 971, 1001, 1002, 1003, 1019, 1021, 1078, 1128], "hour": [106, 145, 147, 172, 176, 209, 231, 249, 260, 273, 323, 1033, 1071, 1078], "sent": [106, 140, 141, 180, 285, 420, 466, 813, 921, 941, 945, 1087], "015": 106, "voluntari": 106, "odd": [106, 113, 232, 267, 402, 490, 504, 507, 542, 726, 878, 973, 975], "char": [107, 142, 158, 201, 218, 228, 274, 340, 347, 352, 353, 356, 358, 359, 360, 363, 364, 377, 382, 385, 390, 391, 398, 402, 408, 409, 411, 427, 445, 449, 479, 483, 488, 502, 503, 534, 549, 552, 553, 557, 567, 607, 622, 623, 637, 653, 655, 680, 687, 704, 729, 732, 737, 753, 755, 767, 793, 877, 891, 895, 896, 899, 903, 904, 905, 906, 909, 911, 914, 928, 931, 937, 940, 941, 944, 965, 1010, 1016, 1082, 1112, 1117], "cout": [107, 115, 151, 428, 434, 449, 463, 468, 469, 470, 482, 483, 484, 485, 488, 496, 500, 501, 528, 546, 548, 553, 555, 559, 572, 573, 574, 575, 576, 579, 580, 581, 582, 583, 584, 585, 586, 588, 589, 590, 591, 595, 599, 600, 601, 602, 603, 609, 613, 614, 617, 619, 620, 623, 626, 633, 636, 642, 647, 657, 659, 660, 661, 662, 665, 666, 667, 668, 670, 671, 672, 674, 675, 676, 677, 678, 679, 684, 686, 687, 689, 690, 692, 694, 703, 704, 705, 706, 714, 716, 717, 816, 877, 911, 914, 926, 928, 940, 944, 1112], "endl": [107, 151, 428, 449, 463, 468, 469, 470, 482, 483, 484, 485, 488, 496, 500, 501, 528, 546, 548, 553, 555, 559, 560, 567, 572, 573, 574, 575, 576, 579, 580, 581, 582, 583, 584, 585, 586, 588, 589, 590, 591, 595, 599, 600, 601, 602, 603, 609, 613, 614, 617, 619, 620, 623, 626, 633, 636, 642, 657, 659, 660, 661, 662, 665, 666, 667, 668, 670, 671, 672, 674, 675, 676, 677, 678, 679, 684, 686, 687, 689, 690, 692, 694, 703, 704, 705, 706, 714, 716, 717, 877, 911, 914, 926, 928, 940, 944, 1112], "constitut": 107, "_id": 107, "objectcontain": 107, "add_object": 107, "_contain": [107, 692], "push_back": [107, 473, 474, 537, 578, 579, 580, 585, 588, 591, 595, 599, 646, 647, 650, 655, 714, 944, 1117], "fragment": [107, 415, 975, 1112], "iostream": [107, 209, 215, 225, 228, 449, 463, 468, 469, 470, 478, 482, 483, 484, 485, 488, 496, 500, 528, 546, 548, 553, 555, 559, 560, 572, 573, 574, 575, 576, 579, 580, 581, 582, 583, 585, 586, 589, 590, 591, 595, 599, 600, 601, 602, 603, 609, 613, 614, 617, 619, 620, 626, 632, 633, 634, 635, 636, 637, 642, 647, 657, 660, 661, 662, 665, 666, 667, 668, 670, 671, 672, 674, 675, 676, 677, 678, 679, 684, 686, 687, 689, 692, 694, 703, 704, 705, 706, 714, 716, 724, 877, 911, 914, 918, 926, 928, 940, 944, 945, 1112], "my_vector": 107, "sysroot": [108, 151, 948, 962], "intel": [108, 125, 129, 143, 726, 947], "header": [108, 136, 168, 202, 218, 243, 273, 282, 283, 384, 385, 386, 392, 396, 399, 403, 407, 412, 416, 421, 422, 426, 431, 432, 433, 438, 439, 449, 570, 644, 659, 664, 682, 688, 723, 725, 726, 817, 874, 879, 948, 950, 959, 1028, 1061, 1065, 1066, 1068, 1076, 1079, 1127], "match": [108, 139, 146, 175, 188, 205, 212, 213, 215, 220, 228, 238, 240, 241, 250, 253, 273, 274, 280, 291, 382, 426, 501, 655, 659, 679, 692, 696, 808, 817, 890, 950, 970, 1016, 1071, 1112], "linker": [108, 110, 111, 135, 167, 282, 381, 407, 414, 418, 419, 430, 437, 559, 570, 773, 947, 950, 953, 957, 964, 1122, 1123, 1124, 1127, 1132, 1138], "uniquifi": [109, 267, 490, 507, 542, 726], "lookup": [109, 160, 177, 190, 209, 215, 220, 225, 228, 242, 274, 409, 464, 490, 507, 509, 542, 657, 726, 983, 1012, 1019, 1049, 1084, 1093, 1142], "leak": [109, 142, 397, 411, 449, 469, 470, 490, 507, 509, 510, 526, 534, 537, 542, 543, 549, 614, 688, 699, 701, 726, 971], "sure": [109, 139, 140, 141, 142, 143, 145, 146, 147, 150, 151, 180, 192, 199, 216, 218, 258, 314, 408, 443, 444, 447, 466, 469, 470, 499, 525, 622, 696, 721, 773, 878, 879, 900, 904, 959, 971, 1128], "gz": [109, 136, 773, 774, 797, 798, 799, 1026, 1107], "whatev": [109, 117, 119, 139, 140, 142, 147, 163, 178, 238, 303, 420, 466, 545, 645, 670, 724, 838, 840, 890, 895, 931, 933, 1001, 1068, 1076, 1083, 1084, 1107], "quiz": [110, 111, 113, 625, 639, 726, 803, 807, 822, 828, 847, 853, 869, 954, 957], "servic": [110, 111, 136, 145, 146, 147, 180, 212, 228, 235, 238, 253, 260, 270, 274, 420, 426, 709, 765, 771, 776, 806, 809, 860, 879, 888, 890, 897, 933, 1000], "owner": [110, 111, 141, 180, 317, 322, 702, 732, 773, 806, 820, 821, 829, 855, 890, 918], "dimension": [110, 111, 161, 664, 806, 1076, 1077], "identifi": [110, 111, 141, 150, 209, 215, 225, 228, 274, 363, 385, 406, 408, 418, 633, 731, 771, 806, 877, 879, 1017, 1078], "pthread": [110, 111, 140, 151, 157, 209, 215, 225, 228, 708, 714, 806, 915, 920, 923, 931, 945, 950], "timeslic": [110, 111, 140, 806, 929, 934], "suspend": [110, 111, 140, 141, 670, 672, 712, 769, 804, 806, 817, 920, 945], "favor": [110, 111, 806, 932, 1125], "fair": [110, 111, 140, 771, 806, 932, 934], "ensur": [110, 111, 228, 444, 492, 806], "evenli": [110, 111, 220, 806], "cpu": [110, 111, 139, 140, 143, 147, 150, 173, 183, 187, 267, 328, 332, 400, 401, 413, 415, 420, 578, 709, 716, 726, 744, 757, 771, 778, 783, 793, 804, 806, 809, 813, 869, 877, 878, 879, 893, 910, 918, 920, 930, 931, 932, 933, 934, 981, 998, 1130], "infinit": [110, 111, 140, 160, 179, 209, 213, 215, 218, 220, 225, 228, 236, 269, 273, 375, 393, 400, 806, 810, 929, 932, 975, 976, 977, 1006, 1041], "illus": [110, 111, 806, 810, 929, 932, 1130], "action": [110, 111, 150, 179, 235, 427, 433, 545, 624, 832, 833, 894, 899, 931, 944, 946, 1078, 1100], "undefin": [110, 111, 201, 356, 363, 390, 433, 551, 559, 583, 590, 595, 619, 624, 655, 684, 944], "behavior": [110, 111, 140, 142, 145, 177, 199, 201, 228, 363, 583, 590, 595, 624, 655, 672, 806, 900, 904, 945, 948, 968, 973, 990], "declar": [110, 111, 200, 201, 213, 218, 339, 355, 370, 379, 384, 386, 392, 393, 396, 399, 400, 403, 406, 407, 408, 412, 414, 416, 421, 422, 427, 547, 557, 617, 624, 633, 634, 644, 655, 664, 680, 682, 702, 723, 725, 726, 879, 899, 903, 905, 906, 932, 1098, 1114], "promis": [110, 111, 142, 244, 245, 247, 256, 298, 350, 408, 466, 534, 546, 555, 624, 670, 672, 673, 676, 677, 714, 715, 725, 726, 944, 996, 1125], "caller": [110, 111, 142, 218, 350, 352, 388, 394, 418, 420, 557, 624, 636, 653, 702, 704, 709, 712, 765, 776, 916, 920, 971, 1050], "uniniti": [110, 111, 411, 537, 544, 546, 547, 548, 551, 624, 728], "guarante": [110, 111, 140, 178, 209, 228, 402, 447, 624, 737, 744, 878, 879, 932, 933, 941, 968], "contigu": [110, 111, 415, 578, 595, 624, 759, 909, 1092], "vec": [110, 111, 544, 546, 553, 560, 561, 562, 563, 564, 624], "ss2023": 112, "ws2023": [112, 114, 115, 117, 119, 726], "firstnam": [113, 120, 173, 199, 212, 220, 222, 225, 228, 232, 235, 238, 240, 241, 250, 253, 260, 274, 280, 285, 292, 303, 308, 444, 445, 473, 479, 488, 489, 502, 557, 603, 629, 633, 635, 637, 654, 800, 801, 837, 838, 840, 842, 845, 971, 984, 985, 987, 988, 989, 991, 992, 1000, 1060, 1061, 1062, 1063, 1066, 1067, 1068, 1079, 1088, 1089, 1090, 1092, 1093, 1094, 1095], "lastnam": [113, 120, 173, 202, 212, 218, 220, 222, 225, 228, 232, 235, 238, 240, 241, 253, 260, 274, 280, 285, 292, 303, 308, 444, 445, 473, 479, 488, 489, 502, 557, 603, 627, 629, 633, 636, 639, 654, 726, 800, 801, 837, 838, 840, 842, 845, 971, 984, 985, 987, 988, 989, 991, 992, 1000, 1060, 1061, 1062, 1063, 1066, 1067, 1068, 1079, 1088, 1089, 1090, 1092, 1093, 1094, 1095], "bouncem": [113, 120, 501, 502, 800, 801], "procf": [113, 180, 182, 256, 726, 811, 869, 910, 927, 1129, 1136], "umask": [113, 246, 255, 256, 276, 277, 317, 322, 726, 803, 828, 852, 869, 903, 915], "diff": [113, 196, 215, 544, 546, 990, 1131], "raspi": [113, 136, 270, 317, 323, 726, 750, 773, 774, 775, 777, 782, 788, 791, 794, 869, 871, 872, 873, 874, 877, 878, 879, 961, 962], "spirit": [113, 378], "readm": [113, 124, 159, 265, 267, 877, 878], "modular": [113, 172, 177, 179, 207, 226, 258, 319, 320, 350, 427, 947, 974], "plc": 113, "sallok": 113, "constantsensor_nopoli": [113, 120, 490, 496, 542, 726], "randomsensor_nopoli": [113, 120, 490, 542, 726], "ece21": 113, "labexam": 113, "hysteresis_nopoli": [113, 114, 120, 490, 491, 542, 726], "upload": [113, 146, 833, 1026, 1099], "j": [113, 137, 145, 151, 188, 203, 205, 215, 220, 222, 225, 228, 232, 235, 238, 250, 253, 260, 274, 280, 292, 364, 367, 384, 408, 415, 464, 557, 646, 657, 705, 783, 799, 955, 959, 975, 1084, 1090], "bz2": [113, 141, 420, 773, 795, 798, 968], "influenc": [113, 948, 1125], "felber": 113, "vscode": [113, 170, 323, 337, 855], "folder": [113, 146], "comprehend": [113, 226, 363, 369, 944], "workspacefold": 113, "suppli": [113, 142, 180, 502, 504, 548, 732, 773, 789, 808, 870, 874, 877, 879, 894, 903, 1032], "cpprefer": [113, 582, 583, 584, 585, 586, 588, 589, 590, 591, 594, 603, 622], "averagingsensor_nopoli": [113, 120, 490, 542, 726], "toolcas": [113, 265, 267, 659], "mocksensor_nopoli": [113, 120, 490, 491, 492, 493, 542, 726], "specifi": [113, 140, 157, 228, 240, 274, 358, 426, 435, 488, 491, 496, 499, 548, 628, 642, 657, 681, 692, 773, 833, 890, 903, 907, 933, 945, 998, 1013, 1021, 1025, 1042, 1061, 1063, 1092, 1094, 1100], "hint": [113, 117, 155, 228, 240, 269, 341, 444, 504, 514, 518, 629, 800, 801, 813, 882, 931], "target_link_librari": [113, 168, 430, 432, 433, 434, 435, 439, 485, 521, 524, 530, 536, 539, 943, 948, 949, 1111, 1114, 1116], "inter": [113, 140, 158, 164, 932, 1129, 1136, 1139, 1141], "likewis": [113, 215, 531, 562, 799, 818, 889, 905, 955, 1076, 1114], "ledstripedisplay_nopoli": [113, 120, 490, 542, 726], "somewhat": [114, 160, 201, 414, 447], "02131d959eaa": [114, 485, 501, 502, 907], "heat": [114, 248, 441, 448, 492, 501, 726, 879, 1075, 1076], "hwmon2": [114, 877], "temp1_input": [114, 877, 879], "boilingpot": 114, "hysteresi": [114, 118, 119, 120, 326, 492], "knob": [114, 999], "steer": 114, "desir": [114, 145, 209, 215, 225, 228, 359, 363, 374, 496, 546, 548, 554, 636, 771, 904, 906, 1078], "hardcod": [114, 141, 321, 520, 732, 736, 1037], "ledstripedisplai": [114, 117, 118, 119], "unreason": 114, "cluster_fh2021": [114, 115, 117, 119, 120, 726], "fh2021_switch_interfac": [114, 119, 120, 726], "fh2021_boiling_pot": [114, 119, 120, 726], "fh2021_sysfs_gpio_switch": [114, 119, 120, 726], "termin": [115, 139, 141, 145, 159, 170, 192, 238, 240, 256, 259, 262, 265, 267, 269, 339, 342, 346, 349, 352, 359, 371, 377, 400, 420, 426, 438, 442, 468, 469, 501, 520, 549, 670, 676, 703, 709, 789, 808, 811, 815, 816, 817, 833, 855, 865, 866, 899, 917, 921, 926, 931, 943, 944, 945, 1000, 1002, 1006, 1021, 1033, 1050, 1078, 1084, 1087, 1136], "style": [115, 136, 140, 145, 209, 215, 218, 225, 228, 267, 410, 425, 426, 520, 545, 546, 551, 585, 619, 622, 633, 642, 647, 678, 694, 719, 741, 790, 913, 999, 1040, 1065, 1076], "reusabl": 115, "compon": [115, 200, 213, 417, 857, 932, 1098], "dedic": [115, 140, 141, 172, 177, 226, 256, 259, 262, 410, 426, 741, 811, 812, 877, 878, 879, 913, 915, 949, 967, 978, 1011, 1128], "constrain": [115, 811], "decoupl": [115, 216, 442, 931], "sink": [115, 120, 268, 269, 284, 287, 290, 294], "prebuilt": [115, 877], "order": [115, 127, 133, 139, 145, 146, 150, 151, 160, 172, 173, 176, 178, 209, 215, 220, 226, 230, 232, 235, 265, 282, 343, 369, 380, 402, 414, 429, 444, 463, 518, 520, 527, 529, 592, 638, 724, 728, 744, 757, 773, 862, 870, 877, 879, 895, 934, 959, 975, 995, 1043, 1053, 1127], "sensorconfig": 115, "sensorvalu": [115, 463, 477], "acquisitionloop": [115, 291], "n_iter": 115, "doit": [115, 212, 449], "made": [115, 133, 134, 139, 140, 141, 143, 146, 147, 151, 155, 192, 207, 232, 256, 291, 317, 349, 387, 388, 390, 393, 424, 444, 448, 464, 470, 670, 757, 773, 804, 805, 810, 870, 877, 903, 909, 914, 932, 950, 975, 982, 992, 1028, 1076], "write_measur": [115, 291], "mockingsink": 115, "receiv": [115, 141, 160, 215, 218, 256, 285, 350, 466, 557, 655, 732, 744, 765, 773, 833, 870, 873, 879, 886, 894, 899, 921, 929, 944, 945, 968, 971, 1021, 1052, 1067, 1084], "yaml": 115, "ini": [115, 124, 145, 159, 325, 328, 1105], "fh2021_datalogg": [115, 120, 726], "iot": [116, 119, 120, 216, 256, 726], "boil": [116, 119, 120, 726, 773], "pot": [116, 119, 120, 726], "cycl": [116, 202, 237, 424, 426, 670, 701, 715, 725, 726, 869, 870, 878, 910, 924, 930], "logger": [116, 120, 269, 287, 291, 294, 706, 726], "pwm": [116, 120, 256, 265, 726, 773, 869, 870, 876, 913, 1129, 1136], "pca9685": [117, 120, 256, 726, 869, 870, 876], "percentag": [117, 418], "pwmdisplai": 117, "bit": [117, 119, 134, 139, 140, 142, 145, 147, 150, 151, 172, 173, 176, 183, 202, 213, 215, 216, 222, 246, 249, 255, 256, 259, 262, 276, 277, 312, 317, 322, 328, 340, 346, 352, 358, 363, 370, 379, 386, 387, 392, 396, 399, 402, 403, 412, 416, 421, 422, 485, 499, 560, 644, 679, 682, 692, 702, 723, 725, 726, 769, 773, 792, 803, 804, 828, 830, 832, 869, 870, 871, 873, 878, 880, 903, 931, 948, 957, 967, 1007, 1071, 1084, 1120, 1125], "pwm5": 117, "visibl": [117, 119, 155, 181, 201, 267, 303, 350, 352, 354, 378, 380, 411, 412, 416, 421, 422, 486, 635, 726, 744, 877, 879, 941, 1012, 1040, 1080], "10000000": [117, 142, 215, 366, 917, 973, 981], "duti": [117, 870, 878], "duty_cycl": [117, 870, 878], "automat": [117, 119, 128, 142, 144, 146, 147, 155, 190, 192, 196, 202, 209, 215, 225, 228, 232, 265, 267, 354, 363, 390, 407, 410, 414, 426, 455, 456, 545, 548, 613, 617, 655, 684, 729, 744, 773, 877, 879, 906, 968, 1021, 1028, 1033], "fh2021_pwm_displai": [117, 120, 726], "mockswitch": [118, 119], "serv": [118, 144, 146, 375, 1077, 1106, 1140], "ground": [118, 878, 879], "mocksensor": [118, 120], "sysfsgpioswitch": 119, "wherea": 119, "gpio20": 119, "set_stat": 119, "voltag": [119, 870, 877], "constructur": 119, "proid": 119, "lifecycl": 119, "avg": [120, 228, 407, 446, 463, 474, 493, 500], "random": [120, 158, 160, 176, 188, 200, 212, 213, 216, 220, 222, 225, 228, 233, 235, 238, 260, 269, 312, 317, 360, 447, 449, 454, 463, 489, 500, 510, 511, 512, 513, 515, 516, 517, 547, 700, 804, 879, 890, 909, 937, 971, 983, 1006, 1078, 1087, 1098], "lifetim": [120, 141, 199, 201, 218, 230, 355, 370, 379, 386, 392, 396, 397, 399, 403, 412, 416, 421, 422, 456, 549, 632, 644, 655, 682, 723, 725, 726, 966], "averagingsensor": [120, 446, 474], "overrid": [120, 136, 200, 213, 228, 243, 443, 449, 451, 456, 471, 473, 474, 475, 477, 478, 480, 502, 616, 617, 681, 682, 725, 726, 968, 983, 1098, 1117], "scheme": [120, 228, 274, 291, 294, 558, 966, 970], "constantsensor": [120, 446, 449, 454, 466, 467, 475, 487, 494, 500, 510, 511, 512, 513, 515, 516, 652, 700, 701, 702, 703, 983, 1059], "outlook": [120, 812], "w1sensor": [120, 486, 487, 488, 489, 501], "liskow": [120, 452], "segreg": [120, 424], "checkout": [122, 132, 143, 155, 169, 746, 773, 774, 1137], "dir": [122, 173, 192, 200, 213, 222, 225, 232, 250, 253, 273, 274, 292, 302, 310, 391, 426, 427, 433, 438, 818, 948, 949, 961, 984, 1098, 1100, 1107], "wo": [122, 148, 158, 159, 167, 173, 175, 335, 1122, 1123, 1141], "sinc": [122, 151, 157, 202, 208, 239, 313, 414, 417, 546, 554, 555, 585, 598, 641, 642, 670, 691, 696, 702, 717, 724, 773, 877, 890, 897, 903, 906, 918, 933, 940, 1001, 1126], "jf": [122, 133, 147, 184, 185, 243, 260, 317, 322, 336, 466, 480, 748, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1130, 1135], "aon": 122, "client": [122, 145, 147, 158, 203, 207, 235, 249, 424, 452, 453, 466, 705, 706, 873, 886, 888, 896, 941, 1083, 1100], "biz": 122, "svn": [122, 136, 156, 202, 335, 336], "recommend": [122, 151, 172, 180, 192, 225, 414, 567, 598, 773, 833, 878, 1026, 1080, 1088], "lokalen": 122, "fetch": [122, 141, 155, 773, 916, 944], "myremot": 122, "orig": [122, 143, 190], "stia": 122, "improv": [123, 414, 417, 429, 685, 700, 724, 966], "stack": [123, 161, 162, 163, 170, 184, 185, 203, 209, 212, 215, 225, 228, 235, 238, 253, 260, 270, 274, 408, 414, 464, 548, 579, 699, 806, 810, 878, 903, 915, 1135], "hang": [123, 183, 544, 776, 799], "seo": [123, 785], "blog": [123, 136, 140, 143, 150, 155, 704], "i2": [123, 125, 130, 235, 270, 726], "kontron": [123, 132, 726], "smarc": [123, 132, 726], "proper": [124, 140, 168, 400, 748, 773, 905, 990], "manifest": [124, 959, 1108], "cfg": [124, 132], "author_email": 124, "classifi": [124, 1026, 1073], "tox": 124, "travi": 124, "yml": 124, "upgrad": [124, 128, 129, 159, 726, 1100, 1107], "zip": [124, 132, 136, 200, 220, 226, 240, 253, 833, 839, 855], "zipfil": [124, 200], "99": [124, 150, 159, 173, 183, 190, 196, 199, 205, 212, 215, 220, 222, 225, 228, 232, 235, 238, 241, 250, 253, 257, 260, 270, 274, 280, 292, 312, 317, 322, 418, 934, 1010, 1045, 1075], "999": [124, 212, 215, 228, 235, 238, 253, 260, 270, 274], "whl": [124, 136, 1026, 1100], "uninstal": [124, 432, 1100, 1105], "pypa": 124, "sampleproject": 124, "devicetre": [125, 878], "connect": [125, 140, 147, 160, 180, 192, 213, 256, 285, 314, 322, 323, 398, 716, 804, 866, 870, 871, 878, 879, 888, 893, 899, 913, 1080, 1082, 1087, 1100, 1128, 1140, 1142], "signal": [125, 136, 137, 165, 267, 335, 418, 716, 726, 744, 765, 810, 869, 870, 878, 910, 915, 923, 931, 932, 937, 941, 1131, 1138, 1139, 1142], "audio_mck": 125, "i2s0_ck": 125, "i2s0_lrck": 125, "i2s0_sdout": 125, "alsa": [125, 143], "tlv320dac3203irg": 125, "tlv320dac3203": 125, "drive": [125, 258, 404, 492, 878, 899, 1078], "suggest": [125, 139, 140, 142, 144, 146, 147, 155, 164, 172, 179, 180, 181, 182, 226, 245, 247, 265, 267, 378, 995, 1023, 1105], "tlv320aic32x4": 125, "compat": [125, 145, 161, 264, 553, 643, 659, 724, 729, 748, 950, 996, 1019, 1084, 1100, 1101], "tlv320aic31xxsw": 125, "tlv320aic31xx": 125, "wget": [126, 145, 147, 151, 270, 959, 961], "cdimag": 126, "amd64": [126, 192, 314, 358], "iso": [126, 200, 218, 219, 235, 238, 258, 280, 292, 338, 426, 543, 559, 797], "netinst": 126, "img": [126, 161, 163, 413, 773, 877], "qcow2": 126, "virtualdebian": 126, "30g": [126, 147], "kvm": [126, 143], "hda": 126, "cdrom": 126, "2048": [126, 150, 215], "nic": 126, "sic": [126, 151], "box": [126, 130, 172, 870, 877, 995], "deliveri": [127, 131, 140, 943, 946], "outcom": [128, 176, 181, 267, 773, 832, 833, 955, 1027], "dirti": [128, 129, 142, 156, 384, 449, 726], "forget": [128, 133, 140, 141, 142, 216, 349, 352, 397, 426, 1080, 1086, 1106, 1125], "graphic": [128, 419, 808, 809, 878], "plug": [128, 141, 143, 448], "monitor": [128, 143, 157], "4k": [128, 142, 931, 940], "dual": [128, 130], "gnome": [128, 140, 145, 212, 228, 235, 238, 253, 260, 270, 274, 420, 773, 808, 864, 932], "applianc": [128, 142, 420], "x11": 128, "wayland": [128, 145], "benchmark": 128, "glxgear": 128, "su": [128, 961], "pect": 128, "cluster_project_xxx": [129, 726], "project_xxx_hardware_bringup": [129, 726], "bringup": [129, 130, 726], "project_xxx_dirty_upgrad": [129, 726], "project_xxx_wait_hardwar": [129, 726], "project_xxx_yocto_kernel": [129, 726], "bsp": [129, 726], "project_xxx_debian_config": [129, 726], "project_xxx_audio_chip": [129, 726], "chip": [129, 158, 212, 726, 870, 874, 877, 895, 897, 931, 1028], "project_xxx_debian_kernel_packag": [129, 726], "finish": [129, 172, 191, 709, 726, 783, 982], "shot": [130, 147, 378, 642, 716, 724], "dac": 130, "massacr": [130, 159, 218, 317, 378, 384, 410, 434, 642, 978], "distro": [130, 432, 1002, 1114], "bootload": [130, 139, 150, 420, 809, 877, 879], "oldconfig": [130, 141, 746, 753, 773, 774], "qemu": [130, 212, 228, 235, 238, 253, 260, 270, 274], "grub": [130, 150], "stabl": [130, 147, 151, 424, 751, 773, 812, 931, 963, 965, 1026, 1101], "yoctoproject": 132, "v5": [132, 143], "bsp_smarc": 132, "sxal4_smarc": 132, "sxal_r1": 132, "0_combin": 132, "sxal4_5": 132, "sxal4": 132, "inc": [132, 143, 264, 401, 438, 439, 711, 918, 981], "filesextrapaths_prepend": 132, "thisdir": 132, "linux_vers": 132, "linux_version_extens": 132, "linux_kernel_typ": 132, "kbranch": 132, "kmeta": 132, "lic_files_chksum": 132, "md5": 132, "bbea815ee2795b2f4230826c0c6b8814": 132, "srcrev_machine_pn": 132, "3604bc07c035939266d78d65084c6cd54ffc6d56": 132, "srcrev_meta_pn": 132, "8d42b14fe517ef036dc4e7b290f16d142f4f1d39": 132, "src_uri": 132, "bareclon": 132, "cach": [132, 136, 141, 267, 270, 400, 414, 419, 420, 578, 595, 855, 932, 1100, 1107, 1123], "destsuffix": 132, "scc": 132, "pv": 132, "srcpv": 132, "include_patch": 132, "patch": [132, 151, 152, 933, 961, 1120], "compatible_machin": 132, "therebi": [133, 172, 650, 864, 944, 990, 1028], "special": [133, 140, 187, 220, 222, 228, 232, 256, 339, 391, 452, 463, 466, 469, 470, 514, 537, 542, 655, 657, 711, 722, 799, 810, 815, 871, 893, 899, 921, 945, 964, 969, 988, 990, 998, 1007, 1009, 1013, 1073, 1078, 1110, 1130, 1131], "node": [133, 145, 150, 160, 398, 418, 435, 598, 729, 732, 736, 742, 751, 963, 1087, 1105], "simplifi": 133, "fine": [133, 142, 147, 176, 429, 430, 545, 657, 659, 753, 783, 890, 894, 962, 979, 991, 1000, 1006, 1021, 1084], "grain": [133, 147, 426, 429, 783, 991, 1006], "surround": [133, 643, 684, 696], "cut": [133, 161, 179, 192, 232, 246, 255, 276, 277, 363, 398, 726, 763, 803, 817, 863, 866, 869, 879], "linewis": 133, "wherev": [133, 342], "obs studio": 134, "video edit": 134, "screen record": 134, "These": [134, 142, 144, 145, 209, 215, 225, 228, 429, 442, 746, 773, 877, 949], "offici": [134, 176, 177, 180, 181, 182, 187, 542, 961, 1110], "jonathan": [134, 318, 319, 1120], "himself": [134, 879], "paus": [134, 142, 931, 944], "meanwhil": 134, "freez": [134, 1100, 1108], "photo": 134, "length": [134, 196, 199, 209, 215, 225, 228, 257, 264, 274, 426, 498, 549, 561, 622, 744, 757, 769, 871, 873, 899, 909, 941, 1076, 1084, 1088, 1095], "grab": [134, 870, 878], "neil": 135, "patel": 135, "insight": [135, 139, 429, 959, 1099], "consol": [135, 192, 808, 811, 866, 1050, 1131], "crawlabl": 135, "dn": [135, 144, 147, 212, 228, 235, 238, 253, 260, 270, 274, 1142], "domain": [135, 136, 146, 147, 152, 410, 424, 436, 932, 1070, 1073, 1140, 1142], "ipc": [135, 136, 137, 140, 334, 336, 724, 726, 869, 910, 938, 1140], "queue": [135, 136, 141, 150, 151, 158, 164, 184, 185, 187, 216, 244, 245, 247, 256, 268, 269, 290, 291, 294, 298, 466, 715, 725, 726, 767, 775, 793, 806, 810, 869, 910, 920, 924, 1135, 1139, 1140, 1141], "pydbu": 136, "openh": [136, 137, 158, 199], "traceback": [136, 162, 209, 215, 225, 228, 238, 258, 260, 274, 968, 969, 970, 975, 983, 984, 990, 991, 1012, 1013, 1017, 1019, 1022, 1023, 1084, 1092, 1093, 1106], "recent": [136, 139, 142, 147, 162, 170, 209, 215, 225, 228, 238, 258, 260, 274, 338, 773, 852, 968, 969, 970, 975, 983, 984, 990, 991, 1012, 1013, 1017, 1019, 1022, 1023, 1084, 1092, 1093, 1106], "oh_test": 136, "easysuit": 136, "oh_dbus_easysuit": 136, "easysuite_error": 136, "error_suit": 136, "dbusheatingerror": 136, "modulenotfounderror": [136, 253, 258, 970], "research": [136, 139, 140, 253, 1077], "pygobject": 136, "714": [136, 215], "kb": [136, 142, 1107], "venv": [136, 173, 199, 209, 215, 225, 226, 228, 240, 270, 324, 325, 855, 1025, 1058, 1071, 1086, 1092, 1093, 1099, 1105, 1107, 1108], "standalon": [136, 402, 655, 944, 1112], "ss_9wmug": 136, "__env_pip__": 136, "ignor": [136, 157, 169, 228, 274, 328, 364, 384, 414, 436, 444, 642, 657, 670, 692, 731, 815, 878, 903, 945, 968, 1100], "9lrqmi4l": 136, "overlai": [136, 773, 877, 878], "locat": [136, 137, 141, 146, 151, 172, 209, 215, 225, 228, 232, 282, 317, 335, 387, 400, 408, 414, 442, 464, 557, 577, 653, 701, 748, 773, 877, 878, 879, 899, 917, 941, 948, 968, 1075, 1092, 1127], "pycairo": 136, "cwd": [136, 499, 724, 799, 810, 836, 855, 857, 861, 949], "821": [136, 215], "py2": 136, "344": [136, 215, 228, 260, 274, 292], "517": [136, 215, 260], "tmpabab356k_in_process": 136, "build_wheel": 136, "tmpt1yod7mc": 136, "o4u45fjc": 136, "pycairo_33865a19ad6b4a719885f07926efe16d": 136, "bdist_wheel": [136, 1026], "build_pi": 136, "x86_64": [136, 143, 145, 192, 199, 314, 337, 363, 501, 562, 746, 751, 950, 959], "cairo": 136, "pyi": 136, "build_ext": 136, "pkg": 136, "perhap": [136, 232, 742, 1079], "pkg_config_path": 136, "gobject": 136, "introspect": [136, 931], "cp39": 136, "linux_x86_64": 136, "lib64": [136, 168, 173, 199, 209, 215, 225, 228, 232, 420, 430, 432, 437, 947, 950, 964, 971, 1092, 1093, 1100, 1114], "_vendor": 136, "pep517": 136, "in_process": 136, "_in_process": 136, "tmpf2wjv23h": 136, "4rtfumdz": 136, "pygobject_beef4432e2454eb0b7facc57fadf42b8": 136, "pygtkcompat": 136, "generictreemodel": 136, "_signalhelp": 136, "_propertyhelp": 136, "_ossighelp": 136, "_option": 136, "_gtktemplat": 136, "_error": [136, 473], "_constant": 136, "keysym": 136, "pango": 136, "gio": 136, "gdkpixbuf": 136, "gdk": 136, "glib": 136, "gimarshallingtest": 136, "tmp56g_ixbz": 136, "bvay4iv4": 136, "pygobject_6777f13e15934fb2b13139399b143557": 136, "todo": [136, 181, 216, 244, 245, 330, 331, 500, 642, 727], "summari": [136, 177, 449, 552, 701, 1105], "c1": [136, 150, 447, 561, 646], "misc": [136, 137, 159, 160, 520, 742, 786, 1124], "w3school": 136, "howto": [136, 137, 744], "howto_css_image_transpar": 136, "asp": 136, "titelseit": 136, "mitt": 136, "howto_js_read_mor": 136, "subdir": [136, 724, 968], "gegen": [136, 1120], "clutter": [136, 169], "404": [136, 146, 215, 222, 260, 274, 292], "prio": [136, 178, 933, 934, 940], "beagleboard": [136, 141, 152], "repair": [136, 152, 212], "nand": [136, 152], "40w": [136, 152], "fedora": [136, 145, 151, 152, 155, 169, 256, 514, 726, 730, 733, 735, 738, 740, 743, 750, 752, 753, 754, 758, 764, 770, 774, 777, 782, 788, 791, 794, 829, 833, 869, 872, 949, 950, 957, 958, 959, 962, 1087, 1112], "suck": [136, 137, 152], "disk": [136, 139, 140, 143, 147, 152, 413, 809, 810, 830, 859, 894, 895, 964, 1021, 1120], "contact": [136, 1127], "ssl": [136, 147, 1100], "certif": [136, 147, 150, 197, 226, 1098, 1100], "070": [136, 642], "fortgeschritten": [136, 336, 1122], "700": [136, 215, 595, 703, 886], "lf": [136, 199, 480, 1021], "descr": [136, 220], "050": [136, 642, 943, 944], "080": [136, 622, 642], "020": [136, 215, 256, 622, 642, 939, 940, 943, 944], "060": [136, 137, 176, 325, 642], "_hidden": 136, "010": [136, 642, 832, 936, 937, 939, 940, 943, 944], "190": [136, 173, 190, 199, 212, 215, 220, 222, 225, 228, 232, 235, 238, 241, 250, 253, 260, 270, 274, 280, 292], "propos": [136, 410, 488], "030": [136, 642, 652, 702, 939, 940, 943, 944], "040": [136, 642, 939, 940, 943, 944], "central": [137, 169, 202, 291, 294, 338, 382, 442, 724, 964, 1009, 1021, 1128], "rstjinja": 137, "105": [137, 159, 173, 183, 188, 190, 196, 209, 212, 215, 220, 222, 228, 232, 235, 238, 241, 250, 253, 260, 270, 274, 280, 292, 312, 317, 322, 935], "110": [137, 144, 159, 173, 183, 190, 196, 205, 209, 212, 215, 220, 222, 228, 232, 235, 238, 250, 253, 257, 260, 270, 274, 280, 292, 312, 482, 483, 642, 832, 939, 940], "cxx_class_templ": [137, 542, 726], "cxx_dynamic_memori": [137, 542, 726], "cxx_global_initi": [137, 542, 726], "cxx_inheritance_virtu": [137, 542, 726], "cxx_ownership_raii": [137, 542, 726], "cxx_stl_container_intro": [137, 542, 726], "cxx_templates_vs_interfac": [137, 542, 726], "maj": [137, 730], "min": [137, 253, 730, 1076], "cdev": [137, 729, 730, 732, 736, 737, 742], "fop": [137, 730, 737], "devtmpf": [137, 729, 730, 775], "dynam": [137, 167, 175, 176, 209, 215, 225, 226, 228, 271, 335, 399, 403, 412, 416, 421, 422, 432, 463, 500, 531, 540, 542, 549, 614, 616, 619, 620, 639, 644, 653, 682, 706, 723, 725, 726, 730, 735, 740, 743, 745, 750, 754, 764, 768, 770, 775, 777, 782, 788, 791, 794, 799, 810, 869, 918, 920, 929, 947, 948, 987, 1001, 1022, 1071, 1126, 1130], "sysprog_ev": 137, "sysprog_ipc": 137, "sysprog_sign": 137, "unittest_gtest_bas": [137, 726, 1110], "unittest_gtest_fixtur": [137, 726, 1110], "brows": [137, 139, 155, 812, 878], "blender": 137, "corda": 137, "figclass": 137, "homebrain": [137, 258, 270, 855, 856], "literalinclud": 137, "within": [137, 142, 218, 228, 274, 335, 491, 492, 496, 501, 546, 617, 680, 737, 870, 982, 999, 1011, 1095], "045": [137, 256], "tex": 137, "055": 137, "056": 137, "910": [137, 215, 855], "glt": 137, "virtmem": 137, "fart": 137, "ungern": 137, "lost": [137, 147, 212, 218, 411, 520, 642, 701, 886, 920, 923, 940, 982, 1105, 1106, 1112], "he": [137, 141, 155, 163, 172, 176, 179, 192, 197, 200, 202, 223, 226, 249, 268, 269, 273, 290, 655, 657, 692, 695, 888, 921, 934, 945, 987, 1015, 1071, 1097], "subscrib": [137, 216, 228], "friend": [139, 140, 187, 208, 244, 245, 247, 256, 267, 298, 420, 483, 560, 715, 716, 725, 726, 744, 765, 870, 1114], "alia": [139, 144, 192, 218, 396, 399, 403, 412, 416, 421, 422, 430, 644, 682, 723, 725, 726, 833, 834, 961], "rm": [139, 141, 145, 146, 180, 182, 317, 322, 880, 890, 1107], "rf": [139, 141, 833, 843, 1107], "creativ": [139, 217], "variat": [139, 704, 778, 815], "thereof": [139, 256, 264, 447, 564, 987], "happili": [139, 140, 218, 410, 559], "stage3": 139, "decad": [139, 147, 164, 773, 877, 879, 890, 969, 1128], "busybox": [139, 140], "initramf": [139, 798], "resid": [139, 142], "flash": [139, 142, 147, 420, 811, 870, 931], "correct": [139, 147, 151, 179, 199, 201, 212, 317, 363, 400, 404, 405, 412, 415, 416, 421, 422, 424, 452, 520, 552, 617, 619, 620, 652, 697, 700, 708, 726, 816, 820, 821, 845, 877, 878, 879, 932, 974, 982, 1076, 1100], "eras": [139, 479, 537, 598, 703, 720, 830], "hit": [139, 141, 142, 161, 164, 202, 724, 833, 862, 865, 1100], "sole": 139, "liter": [139, 162, 178, 183, 190, 200, 208, 209, 213, 220, 225, 228, 232, 235, 244, 245, 253, 260, 274, 292, 298, 309, 313, 317, 344, 352, 359, 408, 463, 478, 498, 642, 655, 773, 945, 1002, 1015, 1019, 1098], "told": [139, 142, 430, 469, 870], "reboot": [139, 141, 158, 773, 834, 877, 878, 879], "fatal": [139, 167, 428, 438, 773, 1113], "saw": [139, 142, 172, 201, 328, 365, 546, 903, 905], "115200": 139, "8n1": 139, "remaind": [139, 140, 143, 145, 168, 172, 256, 751, 773, 870, 878, 949], "recov": [139, 159], "fauxpa": 139, "explan": [139, 142, 168, 172, 179, 202, 233, 293, 317, 418, 439, 520, 773, 804, 870, 878, 905, 935, 940, 1074, 1077, 1107], "annot": [139, 200, 249, 289, 419, 543, 1071], "beagl": 139, "omap": 139, "rom": 139, "stage": [139, 155, 201, 1078], "processor": [139, 140, 199, 200, 213, 358, 402, 595, 706, 773, 778, 915, 932, 947, 1098], "sram": 139, "dram": 139, "latter": [139, 142, 931, 971, 1011, 1078], "abil": [139, 642], "press": [139, 753, 790, 833, 870], "wrote": [139, 142, 325, 1125], "board": [139, 141, 773, 877], "ones": [139, 155, 162, 164, 228, 266, 274, 346, 414, 878, 879, 1004, 1088], "revis": [139, 143, 146, 243, 543, 641, 1125], "slightli": [139, 151, 172, 201, 218, 219, 520, 999], "season": 139, "c4": [139, 150], "valuabl": [139, 418, 800, 801, 963, 965, 971], "c3": [139, 143, 150], "angstrom": 139, "mlo": 139, "ift": 139, "fdisk": [139, 1120], "obvoiusli": 139, "fat32": [139, 773], "fat16": 139, "partit": [139, 140, 141, 228, 274, 773], "mount": [139, 141, 256, 323, 729, 773, 804, 913, 940, 941, 950, 959, 961], "sector": [139, 212, 1028], "intend": [139, 145, 146, 147, 157, 192, 209, 215, 225, 228, 429, 746, 878, 905, 906, 1026], "slot": [139, 909, 990], "partli": [139, 141, 406], "meaning": [139, 147, 755], "scr": 139, "omap3": 139, "mmc1": 139, "arch": [139, 143, 753, 773, 774, 877], "mach": [139, 201, 206, 222], "omap2": 139, "omap3beagl": 139, "Near": 139, "notic": [139, 140, 142, 155, 209, 215, 225, 228, 410, 429, 430, 487, 722, 813, 917, 919, 979, 1093], "offset": [139, 744, 902, 964], "128k": 139, "0x80000": 139, "byte": [139, 142, 155, 157, 159, 209, 215, 225, 228, 235, 238, 253, 274, 280, 302, 317, 340, 348, 358, 359, 390, 393, 402, 405, 411, 415, 449, 544, 549, 552, 557, 564, 577, 701, 787, 804, 810, 833, 864, 871, 877, 894, 895, 896, 899, 901, 903, 904, 905, 906, 929, 932, 937, 940, 944, 996, 1002, 1007, 1021, 1084], "reli": [139, 172, 691, 783, 1002], "ecc": [139, 143], "nandecc": 139, "hw": 139, "80000": 139, "0x0": [139, 877], "0x60000": 139, "unlik": [139, 192, 243, 706, 713, 870, 1010, 1089, 1130], "intermedi": [139, 160, 447, 947, 996], "nevertheless": [139, 140, 147, 259, 262, 773], "0x20000": 139, "fatload": 139, "80200000": 139, "20392": 139, "131072": [139, 731], "40000": 139, "0x40000": 139, "60000": 139, "incarn": [139, 147, 384, 690], "choic": [139, 140, 141, 164, 200, 213, 232, 414, 424, 434, 499, 547, 616, 701, 877, 931, 959, 1087, 1098], "finger": [139, 150, 414, 812, 870], "sw": [139, 497], "0x1e0000": 139, "1e0000": 139, "0x240000": 139, "275928": 139, "1966080": 139, "prompt": [139, 147, 150, 160, 192, 203, 231, 240, 805, 833, 835, 886, 996, 997, 1033, 1037, 1050, 1056, 1107], "280000": 139, "400000": [139, 878, 1076], "month": [140, 202, 212, 260, 264, 359], "met": [140, 406, 879], "microcontrol": [140, 375, 870, 878, 931], "clue": 140, "minim": [140, 142, 151, 160, 408, 414, 567, 855, 959, 970], "vxwork": 140, "ce": [140, 150, 961], "quit": [140, 142, 145, 267, 385, 400, 402, 620, 635, 774, 833, 834, 865, 870, 878, 921, 944, 959], "blob": [140, 256, 267, 337, 520, 773], "presenc": [140, 142, 436, 1130], "probabl": [140, 146, 172, 232, 262, 309, 435, 440, 545, 650, 773, 785, 833, 879, 931, 1007, 1021, 1084, 1087], "term": [140, 142, 164, 192, 232, 265, 267, 314, 414, 557, 560, 624, 702, 705, 806, 879, 898, 932, 944, 1076, 1112], "sooner": [140, 155, 410, 776], "chose": [140, 151, 218, 636, 857, 890, 959], "opinion": [140, 151, 172, 226, 724, 812, 979], "stori": [140, 141, 142, 146, 147, 151, 168, 169, 201, 264, 395, 528, 546, 560, 748, 751, 774, 812, 873, 890], "unless": [140, 222, 228, 232, 274, 614, 647, 799, 855, 916, 1002, 1021, 1092], "hire": 140, "cheap": [140, 142, 427, 557, 650, 655, 691, 692, 778, 1125], "misl": 140, "posix": [140, 142, 165, 708, 715, 717, 725, 726, 810, 869, 899, 910, 916, 920, 922, 930, 938, 1021, 1139, 1140], "tell": [140, 141, 142, 145, 146, 147, 155, 169, 216, 407, 578, 799, 879, 947], "pitfal": [140, 224, 244, 245, 247, 298, 317, 578, 657, 682, 683, 684, 702, 725, 726, 870, 1125], "seen": [140, 142, 147, 160, 173, 201, 350, 369, 407, 442, 452, 744, 769, 798, 918, 1078, 1082, 1117], "didn": [140, 141, 142, 151, 172, 176, 192, 202, 226, 773, 852, 904, 1021, 1023, 1071, 1075], "rtoss": 140, "commonli": [140, 209, 232, 259, 262, 456, 717, 724, 759, 793, 835, 899, 947, 1096], "tear": [140, 245, 449, 498, 499, 500, 501, 562, 701, 742, 947, 1112], "notif": [140, 145, 164, 714, 874, 945], "dread": 140, "segment": [140, 142, 382, 491, 557, 680, 700, 931, 941], "fault": [140, 142, 330, 331, 382, 557, 700, 931], "arriv": [140, 765, 790, 929, 944], "handler": [140, 209, 215, 225, 228, 267, 274, 287, 418, 753, 755, 783, 915, 931, 943, 946], "pai": [140, 264, 413, 436, 804], "attent": [140, 196, 212, 220, 348, 369, 371, 400, 419, 429, 579, 584, 653, 684, 687, 765, 933, 968, 1094, 1117], "safe": [140, 209, 215, 216, 225, 228, 238, 410, 650, 692, 694, 702, 716, 886, 891, 915, 918, 923, 946], "pthread_": 140, "defer": [140, 424, 771, 793], "trick": [140, 197, 207, 210, 213, 237, 249, 273, 279, 385, 1071], "asynchron": [140, 209, 215, 225, 228, 303, 894, 911, 914, 944, 945], "sigwait": [140, 944], "sigwaitinfo": 140, "sigtimedwait": 140, "caught": [140, 209, 215, 225, 228, 417, 567], "synchron": [140, 212, 218, 228, 235, 238, 253, 260, 268, 269, 270, 274, 290, 291, 294, 709, 715, 725, 726, 864, 869, 894, 910, 916, 917, 924, 930, 931, 941, 943, 946, 1130], "signalfd": [140, 899, 937, 1139, 1140], "Its": [140, 142, 145, 498, 862, 932], "emb": 140, "among": [140, 164, 172, 209, 215, 225, 228, 407, 701, 818, 877, 899, 905, 929, 945, 995, 1079, 1080, 1105, 1128], "epol": [140, 913, 937, 941, 1140, 1142], "err": [140, 179, 199, 264, 501, 598, 737, 767, 769, 804, 871, 873, 877, 990, 1093], "naiv": [140, 160, 215, 218, 282, 402, 435, 444, 536, 538, 552, 619, 700, 722, 781, 915, 935, 946, 976, 977, 1078, 1083, 1117, 1127], "intra": 140, "oss": 140, "synchronis": [140, 915, 1141], "pthread_mutex_init": [140, 714, 918], "critical_sect": 140, "closest": [140, 650], "pendant": [140, 537, 732], "expir": [140, 783, 897, 929, 931, 945], "sometim": [140, 155, 232, 374, 390, 414, 551, 641, 804, 811, 904, 916, 961, 967, 998, 1105], "api": [140, 147, 164, 187, 201, 228, 328, 332, 726, 729, 736, 744, 751, 755, 767, 869, 910, 922, 930, 933, 941, 1026, 1082, 1101, 1129, 1130], "setitim": 140, "timer_cr": [140, 931], "drawback": [140, 384, 401, 406, 411, 455, 578, 886], "unfortun": [140, 141, 164, 201, 469, 870, 1089], "straightforward": [140, 219, 664, 702, 741, 973, 990, 1008, 1076], "nanosleep": [140, 716, 931], "timerfd_cr": [140, 897, 899, 1139, 1140], "conjunct": 140, "emul": [140, 245, 247, 265, 402, 411, 417], "stupid": [140, 142, 199, 215, 218, 220, 359, 384, 390, 408, 414, 424, 650, 705, 790, 852, 894, 975, 1021], "screw": [140, 604], "otherwis": [140, 141, 226, 228, 232, 269, 274, 308, 363, 374, 400, 410, 560, 598, 655, 684, 691, 706, 712, 744, 757, 765, 773, 781, 800, 801, 886, 915, 920, 926, 941, 970, 999, 1002, 1019, 1021, 1040, 1051, 1117], "millisecond": [140, 209, 215, 225, 228, 703, 717, 781, 878], "etern": 140, "nowadai": [140, 142, 144, 145, 201, 268, 269, 290, 340, 358, 748, 783, 808, 811, 899, 945, 1084], "imagin": [140, 142, 404, 409, 410, 442, 455, 773, 812, 829, 870, 879, 918, 945], "moder": [140, 147, 207], "tri": [140, 141, 142, 151, 155, 161, 172, 220, 328, 499, 629, 712, 724, 870, 879, 932, 1125], "achiev": [140, 199, 232, 620, 929, 982], "albeit": [140, 464, 690, 926, 1007, 1125], "lose": [140, 191, 202, 222, 225, 228, 238, 1006], "wealth": 140, "socket": [140, 158, 179, 249, 724, 726, 806, 809, 869, 894, 898, 899, 910, 941, 945, 1100, 1139, 1140, 1142], "arbitrari": [140, 161, 228, 232, 344, 360, 378, 414, 429, 567, 594, 595, 647, 705, 717, 732, 874, 899, 903, 931, 971, 1007, 1021, 1049], "uart": [140, 406, 806], "previous": [140, 209, 215, 225, 228, 232, 945, 1125], "regardless": [140, 385, 878], "surpris": [140, 142, 256, 408, 613, 966, 990], "anyon": [140, 534, 744], "alon": [140, 141, 142, 155, 265, 267, 414, 418, 659, 1011, 1078, 1130], "advantag": [140, 406, 557], "consid": [140, 142, 172, 176, 200, 209, 215, 225, 226, 228, 232, 256, 274, 378, 405, 406, 414, 466, 620, 833, 877, 932, 987, 995, 1071, 1099, 1100, 1127], "regularli": [140, 411], "buffer": [140, 228, 253, 268, 269, 274, 290, 294, 346, 475, 480, 655, 789, 817, 891, 894, 895, 896, 897, 905, 944, 1021], "ttys0": 140, "stream": [140, 145, 147, 187, 213, 228, 253, 543, 560, 817, 871, 929, 975, 1096, 1098, 1142], "eventfd": [140, 899, 937, 1139, 1140], "complic": [140, 141, 150, 179, 222, 232, 356, 375, 414, 439, 570, 653, 659, 679, 732, 769, 871, 879, 944, 947, 975, 1087, 1127, 1130], "infrastructur": [140, 419, 729, 941], "unregist": [140, 451], "callback": [140, 176, 209, 215, 225, 228, 326, 670, 783, 792, 1087], "comfort": [140, 192, 320, 694, 877, 1096], "excit": 140, "hundr": [140, 142, 147, 250, 253, 899], "panel": 140, "deal": [140, 216, 408, 554, 773, 879, 1000, 1073, 1084, 1125, 1130], "touch": [140, 146, 172, 209, 215, 225, 228, 426, 818, 827, 832, 877, 900, 906, 1130], "stai": [140, 164, 176, 207, 944], "harder": [140, 706, 880], "buggi": [140, 552, 680, 692, 931], "examin": [140, 142, 410, 560, 701, 833, 926], "debugg": [140, 209, 215, 225, 226, 228, 447, 1123, 1138], "gdb": [140, 192, 335, 1123], "remain": [140, 141, 151, 160, 173, 220, 228, 274, 505, 506, 518, 547, 595, 601, 632, 638, 643, 705, 713, 755, 886, 934, 945, 947, 1046, 1049, 1050, 1053, 1061, 1063, 1079, 1114], "spidev": 140, "bluntli": 140, "whether": [140, 160, 228, 232, 253, 264, 274, 349, 413, 504, 549, 582, 724, 769, 878, 1050, 1056, 1100], "deadlin": 140, "howev": [140, 150, 169, 232, 443, 746, 748, 870, 913, 915], "sched_setschedul": [140, 157, 934], "pthread_attr_setschedparam": [140, 934], "runnabl": [140, 771, 932, 933, 934], "prioriti": [140, 157, 228, 765, 771, 773, 775, 810, 932, 933, 941, 1141], "anymor": [140, 146, 151, 164, 201, 218, 426, 430, 559, 653, 655, 664, 688, 701, 702, 706, 808, 877, 920, 931, 933, 964, 1002, 1004, 1093], "potenti": [140, 427, 557, 664, 712, 890, 970, 982, 1027], "harm": [140, 378, 406, 702, 704, 970], "polici": [140, 145, 157, 426, 442, 616, 620, 751, 932, 933, 1141], "sched_fifo": [140, 933, 934, 1120], "sched_rr": [140, 142, 934, 1120], "round": [140, 207, 212, 222, 232, 248, 253, 441, 448, 449, 451, 453, 462, 463, 476, 490, 542, 726, 934, 1141], "robin": [140, 207, 934, 1141], "manner": [140, 384, 773, 877], "troubl": 140, "trigger": [140, 328, 755, 759, 877, 990, 1080], "certain": [140, 172, 179, 405, 410, 468, 491, 492, 670, 692, 769, 804, 817, 920, 947, 995], "circumst": [140, 932], "deadlock": [140, 520, 712, 713, 765, 778, 918, 932, 933], "inspect": [140, 142, 209, 215, 225, 228, 246, 255, 266, 276, 291, 726, 803, 869, 890], "deploy": [140, 172, 176, 197, 283, 431, 437, 726, 748, 1071], "uclibc": 140, "minut": [140, 146, 147, 172, 176, 179, 216, 879, 1071, 1087], "investig": 140, "spend": [140, 147, 161, 172, 176, 197, 200, 223, 249, 273, 413, 1071], "todai": [141, 192, 200, 216, 249, 266, 282, 326, 352, 1071, 1127, 1130], "browser": [141, 147, 159, 170, 203], "significantli": [141, 944], "decreas": [141, 142, 402, 833, 935], "week": [141, 156, 404], "forth": [141, 415, 804, 877, 890, 1002], "spare": 141, "volum": 141, "undertak": 141, "indirectli": [141, 701], "pocket": 141, "purchas": [141, 232], "corsair": 141, "120": [141, 159, 173, 183, 190, 205, 209, 212, 215, 220, 222, 225, 228, 232, 235, 238, 250, 253, 260, 270, 274, 280, 292, 561, 642, 939, 940], "overhaul": 141, "reserv": [141, 147, 164, 176, 212, 228, 253, 274, 357, 579, 737, 769, 829, 934, 1028], "fresh": 141, "livecd": 141, "ssd": [141, 413, 895], "vanish": 141, "gone": [141, 162, 212, 670, 702, 753, 776, 834, 923], "nowher": [141, 280, 512], "depart": 141, "unusu": 141, "cope": 141, "bet": 141, "themselv": [141, 384, 424, 464], "aggress": 141, "harddisk": 141, "treatment": [141, 232, 833, 964], "proud": 141, "120g": 141, "fresher": 141, "plenti": [141, 143, 418], "4g": [141, 142], "shouldn": [141, 642, 773, 1019], "hibern": 141, "fstab": 141, "room": [141, 147, 176, 291, 444, 595, 767, 879, 1084, 1128], "swapon": 141, "sda1": 141, "swapoff": 141, "overal": 141, "mitig": [141, 767], "temporari": [141, 150, 167, 209, 215, 218, 225, 228, 268, 269, 290, 294, 429, 501, 502, 650, 654, 655, 670, 684, 692, 724, 817, 947, 973, 1054], "perfect": [141, 147, 155, 201, 249, 298, 338, 595, 651, 682, 705, 725, 726, 973, 1026, 1071, 1103, 1125], "portag": [141, 773, 862], "openoffic": 141, "tmpdir": [141, 266, 426, 501, 724, 968, 1066, 1068, 1105], "gcc": [141, 142, 168, 188, 190, 209, 215, 225, 228, 310, 337, 339, 363, 380, 384, 402, 405, 406, 408, 418, 419, 427, 429, 528, 711, 773, 774, 810, 830, 895, 896, 897, 903, 904, 905, 906, 915, 918, 948, 959, 961, 962, 963, 964, 965, 997, 1114, 1120], "500m": 141, "2g": 141, "6g": 141, "throwawai": 141, "1tb": 141, "sdc1": [141, 804], "mnt": [141, 804, 812, 941], "emerg": 141, "umount": 141, "runnung": 141, "logfil": [141, 179, 815, 866], "offend": [141, 143, 145, 155, 469, 931], "candid": [141, 160, 201, 414, 659, 679, 692, 970, 1042], "destin": [141, 365, 432, 537, 578, 653, 889, 896], "app": [141, 145, 931, 1083], "admin": [141, 147, 317, 884, 888], "cron": [141, 816, 1000], "rc": [141, 870], "grep": [141, 145, 151, 180, 182, 192, 246, 255, 276, 277, 726, 792, 797, 803, 808, 810, 815, 817, 829, 860, 863, 866, 869, 877, 879, 880, 916, 926, 931, 1087, 1129, 1131, 1136], "tune": [141, 142, 151, 414, 800, 801, 823, 825, 827, 834, 882, 999], "rotat": [141, 870, 895], "exce": [141, 176, 734, 931, 941], "20m": [141, 870, 929], "compresscmd": 141, "bzip2": [141, 151, 180, 182, 798, 799, 961], "compressopt": 141, "compressext": 141, "missingok": 141, "sharedscript": 141, "postrot": 141, "reload": [141, 180], "endscript": 141, "adjac": [141, 324, 701, 744], "sda": [141, 877, 879], "cfq": 141, "noop": [141, 872], "believ": [141, 147, 870, 879, 907], "r5": 141, "menuconfig": [141, 151, 773, 877, 961], "xorg": [141, 145], "emerge_log_dir": 141, "unionf": 141, "fuse": [141, 143, 880, 890], "persist": [141, 157, 354, 358, 366, 436, 834, 878], "held": [142, 284, 287, 335, 731, 765, 778], "compani": [142, 145, 146, 147, 182, 192, 232, 258, 269, 284, 424, 442, 443, 812, 1026, 1073], "z\u00fcrich": [142, 334], "hardcor": 142, "attitud": [142, 147, 266], "began": 142, "dive": [142, 259, 262, 1085], "inevit": [142, 335, 694], "came": [142, 209, 213, 215, 225, 228, 830, 836, 877, 1002, 1054, 1125], "mb": [142, 811], "heap": [142, 397, 449, 549, 552, 604, 684, 701, 734, 759], "128": [142, 145, 159, 173, 183, 190, 196, 199, 205, 209, 212, 215, 218, 220, 222, 225, 228, 232, 235, 238, 250, 253, 260, 270, 274, 280, 292, 413, 557, 877, 905, 962, 1084], "dead": [142, 151, 414], "attempt": [142, 147, 170, 228, 336, 650, 652, 1100], "reject": [142, 155], "proof": [142, 164, 402, 413, 417, 447, 531], "evid": 142, "fortun": [142, 147, 414, 426, 655, 1076], "overnight": [142, 207], "night": [142, 176], "instinct": 142, "defens": [142, 356, 357], "grow": [142, 578, 810, 963], "growth": [142, 212, 1028], "cumbersom": [142, 144, 179, 555, 578, 646, 690, 729, 915, 941, 1112], "handi": [142, 1136], "tricki": 142, "alloca": 142, "essenti": [142, 169, 218, 265, 267, 632], "stdio": [142, 201, 213, 339, 340, 342, 346, 348, 350, 381, 407, 427, 553, 559, 810, 830, 877, 895, 896, 897, 899, 900, 903, 904, 905, 906, 918, 931, 937, 940, 944, 945, 947, 950, 959, 963, 965, 1021], "unistd": [142, 405, 502, 534, 830, 877, 893, 895, 896, 897, 899, 902, 903, 904, 905, 906, 909, 911, 914, 928, 931, 937, 940, 944], "stdlib": [142, 397, 411, 877, 895, 896, 897, 928, 937, 944], "size_t": [142, 397, 410, 445, 525, 534, 537, 580, 585, 591, 595, 601, 622, 636, 648, 653, 664, 665, 666, 667, 668, 720, 721, 722, 724, 732, 759, 891, 899, 909, 941, 944], "stack_growth": 142, "argc": [142, 391, 449, 488, 877, 903, 904, 905, 906, 911, 914, 928, 944, 965, 1112, 1117], "mem": [142, 158, 534, 737], "fprintf": [142, 372, 385, 891, 931, 965], "stderr": [142, 191, 200, 209, 215, 225, 228, 238, 246, 255, 256, 276, 277, 310, 317, 372, 385, 429, 726, 803, 814, 815, 869, 891, 899, 931, 965, 1000, 1013, 1021, 1131], "atoi": [142, 907], "printf": [142, 151, 201, 213, 339, 340, 342, 348, 350, 354, 380, 381, 384, 385, 407, 427, 553, 559, 810, 830, 893, 897, 937, 944, 945, 947, 959, 963, 965, 1010, 1016], "getpid": [142, 944], "memset": [142, 896, 931, 940, 944], "24299": 142, "vsz": 142, "rss": 142, "3944": [142, 215], "986": [142, 212, 215, 228, 235, 238, 253, 260, 270, 274, 864], "188": [142, 173, 190, 199, 212, 215, 220, 222, 225, 228, 232, 235, 250, 253, 260, 270, 274, 280, 292], "320": [142, 215, 225, 228, 253, 260, 274, 280, 292], "exact": [142, 192, 232, 314, 378, 689, 706, 746, 748, 1100], "glibc": [142, 753, 959, 961, 962, 1120], "presum": 142, "assum": [142, 228, 232, 274, 408, 555, 716, 751, 833, 877, 879, 890, 962, 1031, 1107], "writabl": [142, 408, 818, 833, 905], "eater": [142, 935], "1k": 142, "furthermor": 142, "188k": 142, "anyth": [142, 146, 147, 172, 199, 215, 219, 242, 264, 265, 324, 424, 435, 439, 456, 491, 566, 635, 655, 720, 721, 722, 870, 882, 890, 894, 900, 929, 963, 968, 969, 970, 1013, 1021, 1076, 1093, 1097], "proce": [142, 150, 229, 262, 323, 501], "million": [142, 178, 442, 620, 773, 973], "24908": 142, "4800": [142, 215], "1200": [142, 215, 595, 1093], "1044": [142, 215], "1376": [142, 215], "grown": [142, 145], "reflect": [142, 773, 932, 962, 963, 990], "greedi": 142, "24960": 142, "8mb": 142, "barrier": [142, 400, 701, 716, 757], "ulimit": [142, 810], "8192": [142, 215, 385, 810], "8000000": 142, "25018": 142, "11632": [142, 215], "2908": [142, 215], "7876": [142, 215], "8236": [142, 215], "demand": [142, 145, 162, 262, 408, 773, 824, 826, 975, 1010], "magic": [142, 144, 391, 426, 670, 732, 773, 975, 1105], "hood": [142, 947], "bother": [142, 890, 894], "pthread_attr_setstacks": 142, "2mb": 142, "rlimit_stack": 142, "pthread_creat": [142, 916, 931], "nthread": 142, "act": [142, 199, 509, 579, 879, 890, 893, 945, 981], "shut": [142, 741, 773], "sit": [142, 218, 323, 454, 817, 877, 878, 888, 890, 894, 944, 1087], "stack_limit": 142, "thread_func": 142, "arg": [142, 159, 173, 199, 200, 209, 213, 215, 225, 226, 228, 232, 238, 253, 274, 292, 427, 732, 916, 968, 972, 993, 1000, 1023, 1098, 1114, 1120], "pthread_attr_t": [142, 916, 934], "attr": [142, 157, 916, 918, 920, 934, 940, 941], "pthread_attr_init": 142, "ld": [142, 433, 437, 528, 546, 619, 751, 773, 800, 801, 818, 831, 855, 937, 947, 948, 959, 964], "strerror": [142, 215, 891, 900, 931, 944], "p_attr": 142, "pthread_t": [142, 916, 931, 934], "rv": [142, 188, 250], "31524": 142, "825840": 142, "206460": 142, "819936": 142, "1404": [142, 215], "800mb": 142, "writeabl": [142, 829, 852], "worth": [142, 773, 879, 999, 1070, 1125, 1140], "physic": [142, 145, 180, 187, 268, 269, 290, 294, 415, 620, 757, 809, 878, 897, 901, 931, 932], "eaten": 142, "field": [142, 145, 147, 159, 164, 170, 206, 213, 220, 228, 238, 241, 258, 260, 264, 274, 309, 328, 341, 808, 813, 832, 866, 1017, 1028, 1049, 1078, 1079], "alleg": 142, "wast": [142, 150, 151, 410, 697, 714, 1084], "moment": [142, 176, 410, 442, 444, 638, 687], "carri": [142, 147, 162, 406, 438, 447, 464, 724, 877, 934, 947, 970], "771": [142, 215], "766604": 142, "aha": [142, 162, 173, 302, 736, 753, 878, 1084, 1112], "hasn": [142, 145, 146, 155, 767, 790, 1001], "effect": [142, 146, 167, 318, 319, 354, 404, 414, 466, 613, 728, 757, 829, 834, 877, 889, 890, 932, 946, 971, 983, 1004, 1050, 1078, 1099, 1107], "4096": [142, 159, 215, 724, 800, 801, 870, 877, 878, 879, 890, 913, 940], "1026": [142, 215], "invalid": [142, 183, 190, 220, 225, 226, 228, 232, 235, 253, 260, 267, 274, 292, 313, 328, 411, 469, 480, 483, 537, 552, 635, 636, 637, 650, 653, 659, 700, 702, 716, 731, 920, 1023], "insist": [142, 172, 559, 1114], "pthread_stack_min": 142, "16384": [142, 147, 215, 877, 878, 879], "1125": 142, "7840": [142, 215], "1960": [142, 215], "1936": [142, 215], "risk": [142, 442, 870, 888, 933, 998], "512": [142, 215, 260, 292, 415, 810], "513": [142, 215, 260, 701], "2212": [142, 215], "4210920": 142, "1052730": 142, "4205016": 142, "4576": [142, 215], "misunderstand": [142, 710], "obvious": [142, 143, 145, 151, 163, 340, 404, 408, 435, 464, 528, 554, 560, 598, 613, 614, 642, 653, 687, 691, 696, 724, 771, 773, 786, 809, 810, 816, 830, 878, 879, 889, 905, 906, 933, 945, 947, 963, 984, 987, 1127], "overcommit": 142, "kept": [142, 147, 172, 178, 385, 400, 810, 871, 947, 975], "plai": [142, 150, 192, 402, 420, 773, 870, 988, 991, 1078], "stutter": 142, "4353": 142, "red": [142, 143, 188, 190, 196, 204, 216, 219, 232, 264, 310, 598, 870, 997, 1087], "chili": 142, "pepper": 142, "overli": [142, 816, 974], "adob": 142, "riddanc": 142, "8462": [142, 215], "3284640": 142, "821160": 142, "3278736": 142, "3064580": 142, "lie": [142, 692], "constraint": [142, 150, 659, 662, 664, 879], "800": [142, 183, 215, 595, 1031], "4000000": 142, "11338": [142, 215], "900": [142, 215, 595], "12156": [142, 215], "shrink": [142, 578], "inadvert": 142, "3mb": 142, "nois": 142, "henc": [142, 147, 501, 555, 599, 895, 899, 947], "14386": [142, 215], "child_stack": 142, "0x7f5813f22ff0": 142, "clone_vm": 142, "clone_f": 142, "clone_fil": 142, "clone_sigha": 142, "14413": 142, "mmap": [142, 939, 941, 1139], "8392704": 142, "prot_read": [142, 940], "prot_writ": [142, 940], "map_priv": [142, 940], "map_anonym": 142, "map_stack": 142, "0x7fd14f9af000": 142, "mprotect": 142, "0x7fd14f1ae000": 142, "prot_non": 142, "placehold": [142, 470, 502, 657, 706, 879], "addit": [142, 160, 172, 199, 228, 231, 302, 361, 408, 429, 463, 464, 478, 500, 546, 558, 564, 635, 773, 810, 886, 990, 1002, 1018, 1020, 1100], "proc": [142, 212, 228, 235, 238, 253, 260, 270, 274, 736, 753, 755, 757, 773, 774, 899, 916, 940, 944, 1138], "7fd14f1af000": 142, "7fd14f9af000": 142, "00000000": 142, "7fd14f9b0000": 142, "topmost": [142, 1105], "pseudo": [142, 160], "redund": [142, 385, 414], "smap": 142, "7fd14f1ae000": 142, "pss": 142, "shared_clean": 142, "shared_dirti": 142, "private_clean": 142, "private_dirti": 142, "referenc": [142, 160, 183, 291, 294, 441, 559, 701, 702, 703, 907, 1114], "anonym": [142, 444, 746, 940], "anonhugepag": 142, "kernelpages": 142, "mmupages": 142, "miss": [142, 161, 168, 170, 172, 188, 215, 220, 225, 232, 291, 294, 317, 374, 419, 420, 428, 430, 438, 500, 531, 552, 643, 679, 748, 751, 897, 931, 949, 972], "shallow": [142, 212, 224, 645], "extent": [142, 172, 179, 192, 314, 405, 410, 773, 947, 995], "8k": [142, 817], "swamp": 142, "panic": [142, 155, 781, 833], "meaningless": 142, "global": [142, 143, 161, 167, 172, 176, 181, 185, 188, 201, 209, 212, 215, 218, 219, 225, 228, 231, 242, 245, 253, 265, 268, 270, 274, 279, 283, 290, 294, 312, 317, 363, 380, 386, 392, 396, 399, 403, 407, 410, 412, 416, 417, 421, 422, 430, 431, 436, 449, 455, 464, 498, 499, 500, 501, 542, 549, 562, 644, 682, 685, 700, 701, 711, 723, 725, 726, 742, 879, 915, 918, 922, 923, 925, 947, 968, 971, 979, 981, 1014, 1028, 1071, 1100, 1108, 1112], "dig": [142, 144], "thorough": [142, 151, 994, 1078, 1097, 1140], "counter": [142, 225, 342, 348, 349, 358, 414, 419, 420, 544, 653, 940], "delai": [142, 209, 215, 225, 228, 878], "substanti": 142, "overcom": [142, 291, 317, 404], "beforehand": 142, "mlock": [142, 1139], "mlockal": [142, 1139], "contradictori": 142, "lengthi": 142, "felt": 142, "lucki": [142, 552], "agre": [142, 172, 176, 323, 452, 932, 1077], "glad": 142, "outdat": [143, 151, 773, 1100], "halfwai": 143, "procedur": [143, 151, 350, 694, 870, 1028], "thunderbolt": 143, "hdmi": 143, "unplug": 143, "oop": [143, 1124], "feb": [143, 188, 190, 192, 314, 359, 855, 913, 959], "derefer": [143, 557], "0000000000000080": 143, "supervisor": 143, "error_cod": 143, "0x0000": 143, "pgd": 143, "p4d": 143, "0000": [143, 228, 274, 879], "smp": [143, 192, 199, 314], "pti": 143, "281": [143, 212, 215, 220, 222, 225, 228, 232, 235, 253, 260, 274, 280, 292], "comm": 143, "kworker": 143, "taint": 143, "fc31": 143, "asustek": 143, "zenbook": 143, "ux391ua": 143, "bio": 143, "204": [143, 173, 199, 212, 215, 220, 222, 225, 228, 232, 235, 238, 250, 253, 260, 274, 280, 292, 449], "workqueu": [143, 726, 750, 775, 788, 791, 869], "ucsi_connector_chang": 143, "typec_ucsi": 143, "0010": 143, "ucsi_displayport_remove_partn": 143, "0xa": 143, "0x20": [143, 763], "c7": [143, 150, 1100], "83": [143, 150, 159, 173, 183, 188, 190, 196, 199, 205, 209, 212, 215, 220, 222, 225, 228, 232, 235, 238, 241, 250, 253, 257, 260, 270, 274, 280, 292, 312, 774, 1075, 1076], "5b": [143, 150], "e9": [143, 150], "6d": [143, 150, 341, 342], "f3": [143, 150], "3d": [143, 150, 161], "fb": [143, 150], "2e": [143, 150, 646], "0f": [143, 150], "1f": [143, 150], "84": [143, 150, 159, 173, 183, 188, 190, 196, 199, 205, 209, 212, 215, 220, 222, 225, 228, 232, 235, 238, 241, 250, 253, 260, 270, 274, 280, 292, 312, 317, 322, 1075, 1076], "90": [143, 150, 159, 183, 188, 190, 196, 199, 205, 212, 215, 220, 222, 228, 232, 235, 238, 241, 250, 253, 257, 260, 270, 274, 280, 292, 312, 426, 1075, 1076, 1105], "85": [143, 150, 159, 173, 183, 188, 190, 196, 199, 205, 212, 215, 220, 222, 228, 232, 235, 238, 241, 250, 253, 257, 260, 270, 274, 280, 292, 312, 948, 949, 1075, 1076, 1112], "ff": [143, 150, 335, 879], "8b": 143, "78": [143, 150, 173, 183, 188, 190, 196, 199, 205, 212, 215, 220, 222, 228, 232, 235, 241, 250, 253, 257, 260, 270, 274, 280, 292, 312, 498, 1075, 1076], "c6": 143, "rsp": [143, 212, 1028], "0018": 143, "ffff9daa002d3df8": 143, "eflag": 143, "00010202": 143, "rax": 143, "0000000000000008": 143, "rbx": 143, "ffff901f4ce35710": 143, "rcx": 143, "0000000000003c7d": 143, "rdx": 143, "0000000000003c7c": 143, "rsi": [143, 833], "0000000000000001": 143, "rdi": 143, "rbp": 143, "0000000000000000": [143, 965], "r08": 143, "ffffffffbc7dbe60": 143, "r09": 143, "ffff9daa002d3cf0": 143, "r10": 143, "ffff901f54951a18": 143, "r11": 143, "ffff901f56a68a78": 143, "r12": 143, "r13": 143, "r14": 143, "ffff901f4ce35860": 143, "r15": 143, "ffff901f4ce355d8": 143, "ffff901f56a00000": 143, "knlg": 143, "cr0": 143, "0000000080050033": 143, "cr2": 143, "cr3": 143, "000000028fbbc003": 143, "cr4": 143, "00000000003606f0": 143, "trace": [143, 162, 209, 215, 225, 228, 429, 763], "ucsi_unregister_altmod": 143, "0x77": 143, "0x90": [143, 763], "ucsi_unregister_partn": 143, "0x13": 143, "0x30": [143, 366], "0x247": 143, "0x340": 143, "process_one_work": 143, "0x1b5": 143, "0x360": 143, "worker_thread": 143, "0x50": 143, "0x3c0": 143, "kthread": 143, "0xf9": 143, "0x130": 143, "kthread_park": 143, "ret_from_fork": 143, "0x35": 143, "0x40": [143, 878], "cdc_ether": 143, "usbnet": 143, "r8152": 143, "mii": 143, "rc_cec": 143, "typec_displayport": 143, "uinput": 143, "rfcomm": 143, "ccm": 143, "xt_checksum": 143, "xt_masquerad": 143, "nf_nat_tftp": 143, "nf_conntrack_tftp": 143, "tun": [143, 148, 163, 167, 183, 190, 229, 1122, 1123, 1124], "bridg": 143, "stp": 143, "llc": 143, "nf_conntrack_netbios_n": 143, "nf_conntrack_broadcast": 143, "xt_ct": 143, "ip6t_reject": 143, "nf_reject_ipv6": 143, "ip6t_rpfilt": 143, "ipt_reject": 143, "nf_reject_ipv4": 143, "xt_conntrack": 143, "ebtable_nat": 143, "ebtable_brout": 143, "ip6table_nat": 143, "ip6table_mangl": 143, "ip6table_raw": 143, "ip6table_secur": 143, "iptable_nat": 143, "nf_nat": 143, "iptable_mangl": 143, "iptable_raw": 143, "iptable_secur": 143, "nf_conntrack": 143, "nf_defrag_ipv6": 143, "nf_defrag_ipv4": 143, "libcrc32c": 143, "ip_set": 143, "nfnetlink": 143, "ebtable_filt": 143, "ebtabl": 143, "ip6table_filt": 143, "ip6_tabl": 143, "iptable_filt": 143, "cmac": 143, "bnep": 143, "sunrpc": 143, "vfat": [143, 773, 804], "snd_hda_codec_hdmi": 143, "snd_soc_skl": 143, "snd_soc_sst_ipc": 143, "snd_soc_sst_dsp": 143, "snd_hda_ext_cor": 143, "x86_pkg_temp_therm": 143, "intel_powerclamp": 143, "snd_soc_acpi_intel_match": 143, "coretemp": 143, "snd_soc_acpi": 143, "kvm_intel": 143, "snd_soc_cor": 143, "snd_hda_codec_realtek": 143, "snd_hda_codec_gener": 143, "snd_compress": 143, "ledtrig_audio": 143, "ac97_bu": 143, "snd_pcm_dmaengin": 143, "iwlmvm": 143, "snd_hda_intel": 143, "snd_intel_dspcfg": 143, "irqbypass": 143, "snd_hda_codec": 143, "uvcvideo": 143, "mac80211": 143, "btusb": 143, "itco_wdt": 143, "btrtl": 143, "crct10dif_pclmul": 143, "videobuf2_vmalloc": 143, "itco_vendor_support": 143, "videobuf2_memop": 143, "mei_hdcp": 143, "btbcm": 143, "btintel": 143, "crc32_pclmul": 143, "intel_rapl_msr": 143, "snd_hda_cor": 143, "videobuf2_v4l2": 143, "libarc4": 143, "ghash_clmulni_intel": 143, "videobuf2_common": 143, "snd_hwdep": 143, "intel_cst": 143, "bluetooth": [143, 1129, 1142], "snd_seq": 143, "asus_nb_wmi": 143, "iwlwifi": 143, "videodev": 143, "snd_seq_devic": 143, "intel_uncor": 143, "asus_wmi": 143, "snd_pcm": 143, "intel_rapl_perf": 143, "cdc_acm": 143, "sparse_keymap": 143, "wmi_bmof": 143, "ecdh_gener": 143, "cfg80211": 143, "intel_wmi_thunderbolt": 143, "pcspkr": 143, "snd_timer": 143, "snd": 143, "i2c_i801": 143, "soundcor": 143, "joydev": 143, "idma64": 143, "intel_xhci_usb_role_switch": 143, "mei_m": 143, "ucsi_acpi": 143, "processor_thermal_devic": 143, "intel_rapl_common": 143, "mei": [143, 215], "intel_soc_dts_iosf": 143, "intel_pch_therm": 143, "typec": 143, "int3403_therm": 143, "int340x_thermal_zon": 143, "int3400_therm": 143, "acpi_thermal_rel": 143, "acpi_pad": 143, "binfmt_misc": 143, "ip_tabl": 143, "rfkill": 143, "i915": 143, "i2c_algo_bit": 143, "drm_kms_helper": 143, "hid_multitouch": 143, "drm": 143, "nvme": 143, "crc32c_intel": 143, "nvme_cor": 143, "serio_raw": 143, "wmi": 143, "i2c_hid": 143, "76d248e576fee192": 143, "deferenc": 143, "dp": 143, "ness": [143, 179, 264], "ucsi": 143, "displayport": 143, "linu": [143, 765, 773], "struct": [143, 167, 201, 202, 218, 385, 390, 396, 397, 398, 399, 402, 403, 406, 408, 410, 412, 416, 421, 422, 444, 449, 466, 501, 502, 546, 547, 552, 554, 556, 557, 577, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 638, 639, 642, 644, 645, 646, 647, 654, 670, 673, 675, 676, 677, 678, 682, 687, 705, 706, 716, 723, 724, 725, 726, 732, 734, 737, 739, 741, 742, 744, 757, 761, 763, 765, 767, 769, 775, 776, 781, 783, 786, 790, 792, 793, 871, 873, 877, 896, 897, 909, 920, 931, 934, 940, 941, 944, 945, 1126], "typec_altmod": 143, "alt": [143, 173, 833, 861, 1122, 1129, 1136], "ucsi_dp": 143, "typec_altmode_get_drvdata": 143, "271": [143, 212, 215, 220, 222, 228, 253, 260, 274, 280], "bugzilla": 143, "1785972": 143, "upstream": [143, 146, 151, 155, 751], "john": [143, 414], "stebbin": 143, "roundtrip": 143, "wiki": [143, 157, 268, 269, 290, 294, 746, 773], "explod": [143, 748, 1010], "jwboyer": [143, 746], "f31": 143, "quiet": [143, 176, 1100], "4382f76bc8ef9fce5e7e96d4cdb0c073564ad249": 143, "josh": 143, "boyer": 143, "fedoraproject": [143, 746], "mon": 143, "rpmdevtool": [143, 746], "koji": 143, "rpmdev": 143, "setuptre": 143, "spec": [143, 228, 746, 769], "srpm": 143, "unam": [143, 746, 751, 769, 773, 774], "correspond": [143, 155, 228, 339, 382, 878, 955, 963, 1002, 1038, 1073, 1100], "kenrel": 143, "ivh": [143, 145], "crypto": 143, "ccp": 143, "sha": 143, "drop": [143, 155, 291, 445, 464, 473, 694, 701, 703, 792, 940, 945], "edit": [143, 145, 146, 155, 187, 192, 228, 256, 338, 498, 746, 773, 878, 1026, 1097, 1138], "zips": 143, "ko": [143, 742, 751, 773], "endif": [143, 382, 384, 385, 427, 429, 434, 435, 528, 537, 546, 552, 554, 555, 595, 653, 654, 700, 716, 947, 963, 965, 1114], "buildid": [143, 746, 948], "primary_target": 143, "825": [143, 215], "asoc": 143, "patch601": 143, "patch999": 143, "roedel": [143, 499, 502, 949, 962, 1058, 1107], "patienc": [143, 172, 995], "oldpackag": 143, "uefi": [143, 150], "footnot": [143, 145, 146, 147, 150, 151, 156, 163, 169, 172, 175, 259, 262, 443, 470, 514, 561, 563, 564, 577, 607, 626, 742, 744, 805, 812, 827, 877, 878, 879, 900, 903, 963, 995, 998, 1028, 1062, 1077, 1125, 1128], "previou": [144, 160, 291, 485, 537, 553, 635, 833, 865, 905, 972, 974, 994, 996, 1040, 1099], "market": [144, 147, 212, 256, 264, 1028], "intent": [144, 146, 150, 151, 447, 702, 706, 746, 903, 905, 906], "remark": 144, "organ": [144, 169, 380, 415, 426, 454, 595, 809, 895, 962], "numer": [144, 161, 177, 179, 181, 215, 225, 228, 232, 264, 274, 429, 601, 890], "enforc": [144, 202, 402, 424, 559, 732, 879], "cname": [144, 146], "propag": [144, 356, 414, 430, 438, 439, 620, 670, 880], "1100": [144, 209, 215, 232, 595], "3600": [144, 215], "185": [144, 173, 190, 212, 215, 220, 222, 228, 232, 235, 238, 241, 250, 253, 260, 270, 274, 280, 292], "199": [144, 173, 190, 212, 215, 220, 222, 225, 228, 232, 235, 253, 260, 270, 274, 280, 292, 773, 1028], "109": [144, 159, 173, 183, 188, 190, 196, 209, 212, 215, 220, 222, 228, 232, 235, 238, 250, 253, 257, 260, 270, 274, 280, 292, 312, 317, 322], "153": [144, 159, 173, 183, 190, 199, 212, 215, 220, 222, 228, 232, 235, 238, 241, 250, 253, 270, 274, 280, 292, 324], "111": [144, 159, 161, 173, 183, 190, 196, 212, 215, 220, 222, 225, 228, 232, 235, 238, 250, 253, 257, 260, 270, 274, 280, 292, 312], "108": [144, 159, 173, 183, 190, 196, 199, 205, 212, 215, 220, 222, 225, 228, 232, 235, 238, 250, 253, 257, 260, 270, 274, 280, 292, 312], "strip": [144, 163, 172, 206, 208, 209, 212, 220, 224, 225, 230, 232, 238, 241, 253, 260, 270, 274, 280, 317, 326, 947, 948, 950, 959, 978, 1051, 1096], "breviti": 144, "fqdn": 144, "qualifi": [144, 408, 554, 555, 692], "surf": 144, "consequenti": [144, 147, 150, 178, 804, 877, 967, 988, 1114], "microsoft team": 145, "chrome": 145, "google chrom": 145, "confer": [145, 147, 176, 200, 223, 249], "virtual classroom": 145, "classroom": [145, 147], "remote train": 145, "dr": [145, 962], "chromium": [145, 180], "frequent": [145, 147, 155, 172, 232, 858, 878, 995, 1016], "meet": [145, 147, 172, 402, 817, 959, 972], "face": [145, 147, 172, 222, 232, 708], "travel": [145, 833], "corona": [145, 147, 172], "viru": [145, 147], "conferenc": 145, "dramat": 145, "march": 145, "spent": [145, 413, 717, 969, 1077], "weston": 145, "shown": [145, 178, 308, 855, 941, 1084], "invest": [145, 147, 151, 232], "smooth": 145, "layer": [145, 245, 247, 265, 732, 804, 878, 890, 900, 909], "cornercas": 145, "hover": 145, "sharer": 145, "gdm": [145, 212, 228, 235, 238, 253, 260, 270, 274, 808, 864], "daemon": [145, 192, 212, 228, 235, 238, 253, 260, 270, 274, 420, 808, 811, 858, 859, 862, 864, 880, 888, 893, 895, 925, 981], "uncom": [145, 469, 470, 664, 877], "waylanden": 145, "defaultsess": 145, "deb": [145, 277], "5153": 145, "thank": [145, 226, 253, 656, 692, 755, 915, 1076], "marjan": 145, "javorka": 145, "fashion": 145, "efl": [145, 792, 880, 931], "61762": 145, "1670": [145, 215], "80": [145, 150, 159, 173, 183, 188, 190, 196, 199, 205, 209, 212, 215, 220, 222, 228, 232, 235, 238, 241, 250, 253, 257, 260, 270, 274, 280, 292, 312, 418, 491, 855, 931, 961, 973, 1028, 1075, 1076, 1105], "947213": 145, "61764": 145, "98775": 145, "zygot": 145, "sandbox": [145, 172, 176, 226, 240, 258, 1071, 1107, 1108], "61800": 145, "239615": 145, "gpu": 145, "sharedarraybuff": 145, "sparerendererforsiteperprocess": 145, "prefer": [145, 222, 232, 358, 414, 456, 560, 647, 655, 659, 765, 817, 1023], "kaaaaaaaaacaaabaaqaaaaaaaaaaagaaaaaaaaaaaaaiaaaaaaaaaagaaaaaaaaa": 145, "token": [145, 202, 218, 344, 384, 808, 921, 1026, 1122], "4327801531638606376": 145, "61825": 145, "420846": 145, "autoplai": 145, "gestur": 145, "12993561460135093079": 145, "asar": 145, "agent": [145, 886, 1078], "mozilla": [145, 270, 855], "applewebkit": 145, "537": [145, 215], "khtml": 145, "gecko": 145, "microsoftteam": 145, "preview": [145, 230, 283, 431, 726], "3497": 145, "safari": 145, "webview": 145, "preload": 145, "preload_notif": 145, "fff": 145, "eyjjci5jb21wyw55ijoirwxly3ryb24ilcjjci5kdw1wcyi6iiisimnylmvuywjszwqiomzhbhnllcjjci5wcm9kdwn0ijoirwxly3ryb24ilcjjci5zzxnzaw9uijoiiiwiy3iudxjsijoiiiwiy3iudmvyc2lvbii6iny0ljiumtiifq": 145, "raster": 145, "v8_context_snapshot_data": 145, "v8_natives_data": 145, "101": [145, 159, 173, 183, 190, 196, 205, 212, 215, 220, 222, 225, 228, 232, 235, 241, 250, 253, 260, 270, 274, 280, 292, 312, 317, 322, 1006, 1075, 1076], "msteam": 145, "notificationsmanag": 145, "61973": 145, "790018": 145, "432557619363765409": 145, "mainwindow": 145, "62033": 145, "1259666": 145, "5585537623314398260": 145, "pluginhost": 145, "wish": [145, 147, 155, 176, 418, 427, 566, 633, 714, 994, 1089, 1090, 1107], "insan": [145, 284, 804], "killal": [145, 935, 945], "63500": 145, "298385": 145, "63502": 145, "blood": 145, "pressur": [145, 209], "rise": [145, 492, 755, 913, 914, 931], "wipe": 145, "logout": 145, "pop": [145, 158, 220, 222, 235, 250, 260, 270, 280, 292, 385, 714, 993, 1018], "morn": [145, 181, 191, 209, 218, 220, 226, 1033], "webassembli": 145, "blow": 145, "water": [145, 264], "tab": [145, 146, 159, 228, 256, 274, 308, 359, 773, 833, 1015, 1040, 1131], "firefox": [145, 420, 916, 945, 1083], "dom": [145, 204], "gave": [145, 147, 160, 172, 875, 1076], "3987": 145, "132": [145, 159, 161, 173, 183, 190, 199, 212, 215, 220, 222, 225, 228, 232, 235, 238, 250, 253, 270, 274, 280, 292], "plagu": 145, "rememb": [145, 146, 161, 168, 178, 199, 369, 402, 452, 578, 579, 613, 616, 653, 654, 702, 769, 773, 815, 830, 833, 852, 877, 886, 888, 969, 1035, 1045], "invent": [145, 352, 384, 444, 466, 467, 1127, 1128], "game": [145, 212, 228, 235, 238, 253, 260, 270, 274, 291, 829, 893, 1009], "pornwatch": 145, "teamview": 145, "webpag": 146, "properli": [146, 638, 716, 773, 959], "retrospect": 146, "jekyl": 146, "bend": [146, 496], "companion": [146, 264], "pollut": [146, 385, 408, 414, 447, 643, 949], "distinguish": [146, 553, 706, 805, 959], "handwritten": [146, 244, 245, 247, 298, 552, 652, 682, 683, 684, 700, 725, 726], "remind": 146, "pile": [146, 155, 454, 945], "incomprehens": [146, 226, 616, 1125], "blame": [146, 879], "technic": [146, 147, 169, 439, 443, 543, 598, 642, 975, 1084, 1117], "nojekyl": 146, "eof": [146, 196, 199, 218, 219, 235, 309, 346, 347, 348, 349, 362, 626, 775, 789, 895, 896, 899, 905, 937, 944, 997], "doctyp": 146, "constel": 146, "machineri": [146, 268, 269, 290, 294], "eventu": [146, 155, 417, 913, 962], "click": [146, 147], "danc": [146, 501, 793, 963], "cri": [146, 705], "backup": [146, 180, 427, 802, 804, 886, 1089], "haven": [146, 147, 172, 520, 870, 877], "subdomain": 146, "afterthough": 146, "preserv": [146, 157, 178, 235, 402, 800, 801, 835, 889, 1096], "_build": 146, "restor": [146, 155, 162, 209, 215, 225, 228, 746, 945, 968], "shini": 146, "nervous": 146, "marketinges": [146, 256], "familiar": [146, 172, 228, 319, 320, 709, 878, 995], "big blue button": 147, "strongli": [147, 209, 215, 225, 228, 259, 262, 500, 598, 644, 682, 723, 725, 726, 1125], "shame": 147, "pursu": 147, "collabor": [147, 157, 164, 169, 176, 249], "moreov": 147, "focus": 147, "teach": [147, 172, 335], "trust": [147, 150, 212, 268, 269, 290, 650, 886, 888, 1028, 1100, 1117], "benefit": [147, 259, 262, 265, 267, 408, 1066], "beat": [147, 222, 232, 1070], "talent": [147, 335], "whiteboard": [147, 940], "chat": 147, "wide": [147, 151, 340, 341, 805, 886, 941, 947], "breakout": [147, 877], "stabil": [147, 449, 879, 1101], "thousand": [147, 253, 804], "curiou": [147, 1071], "curious": 147, "licens": [147, 253, 436, 729, 997, 1026], "lgpl": 147, "blindsid": 147, "govern": [147, 759, 899], "html5": 147, "exception": [147, 879], "modern": [147, 151, 153, 164, 167, 172, 179, 201, 223, 430, 704, 726, 733, 735, 740, 743, 750, 754, 764, 775, 777, 782, 788, 791, 794, 869, 947, 966, 996, 1071, 1097, 1126, 1128], "heavili": [147, 169, 172, 256, 258, 335, 500, 695, 773, 870, 879, 995], "webrtc": 147, "pain": [147, 773, 950, 959], "death": [147, 199, 945], "firewal": [147, 180, 888], "busi": [147, 291, 424, 434, 559, 778, 790, 802, 837, 839, 844, 845], "indefinit": [147, 632], "vm": [147, 320], "encrypt": [147, 808, 829, 880, 888, 889, 890, 1049, 1087], "bbb": [147, 159, 220, 238], "provis": 147, "gcp": 147, "expertis": [147, 501], "n1": [147, 173, 232], "accordingli": [147, 180, 488, 498, 501, 531, 877, 879, 964, 999, 1002, 1096], "500gb": 147, "10gb": 147, "spars": [147, 222, 232, 562, 564, 769], "mandatori": [147, 879, 996], "issuanc": 147, "udp": [147, 871, 873, 1140, 1142], "32768": 147, "clickabl": 147, "7443": 147, "755": [147, 215, 317, 818, 998], "xenial": 147, "220": [147, 173, 188, 199, 209, 212, 215, 220, 222, 228, 232, 235, 250, 253, 260, 270, 274, 280, 292], "hostnam": [147, 1100], "certbot": 147, "greenlight": 147, "letsencrypt": 147, "minor": [147, 151, 209, 215, 225, 228, 258, 732, 739, 804], "docker": [147, 151], "bundl": [147, 170, 1083, 1100], "rake": 147, "succesfulli": 147, "screenshot": [147, 170, 317], "tryout": [147, 879], "kid": [147, 192, 210, 303], "layman": 147, "knew": [147, 176, 657, 964], "reproduc": [147, 150, 266, 411, 879], "thought": [147, 385, 697, 773, 1084], "fred": [147, 871, 971], "dixon": 147, "leader": 147, "aka": [147, 192, 215, 218, 220, 240, 520, 704], "canva": 147, "bradlei": 147, "schreffler": 147, "upfront": 147, "far": [147, 172, 180, 201, 207, 215, 218, 258, 354, 369, 390, 391, 393, 404, 408, 413, 438, 567, 577, 642, 705, 751, 815, 879, 973, 995, 1076, 1125], "exhaust": [147, 929, 932, 975], "heard": 147, "tast": [147, 344, 560, 616, 642, 685, 705], "era": 147, "budget": [147, 196], "advertis": [147, 695], "viabl": 147, "shout": [147, 684, 687], "loud": [147, 363, 578, 646, 684, 690, 691], "gmunden": [148, 335], "traunse": 148, "hike": [148, 149, 176], "bergsteigen": [148, 149], "climb": [148, 149, 176, 207], "klettern": [148, 149], "outdoor": [148, 149], "donnerstag": 148, "geistigen": 148, "ersch\u00f6pfung": 148, "k\u00f6rperlich": 148, "erfahren": [148, 149, 335, 1123], "dazu": [148, 157, 158, 163, 167, 184, 317, 322, 335, 1121, 1135, 1143], "ausgesucht": [148, 149], "zwar": [148, 1120, 1124, 1136], "lo": [148, 149, 190, 228, 264, 496, 753, 983], "gmundner": [148, 176], "h\u00fctte": [148, 149, 176], "n\u00e4chsten": 148, "naturfreundesteig": 148, "zusammenfassung": [148, 154], "wunsch": 148, "vollend": 148, "erf\u00fcllt": 148, "unversichert": 148, "unmarkiert": 148, "leicht": [148, 184, 1120, 1135, 1141, 1142], "panik": 148, "geraten": 148, "h\u00e4nde": [148, 149], "braucht": [148, 149], "fingern\u00e4gel": 148, "z\u00e4hne": 148, "mitunt": [148, 149, 1132], "verkoffert": 148, "augen": [148, 235], "offenhalten": 148, "jeder": [148, 1119, 1122, 1123, 1142], "spur": 148, "folgen": [148, 184, 185, 1122, 1135], "fr\u00fcher": [148, 229], "umdrehen": 148, "sackgass": 148, "erweist": 148, "vielleicht": [148, 173, 184, 235, 1124, 1135], "weggehen": 148, "stirnlamp": 148, "mitnehmen": 148, "war": [148, 158, 163, 165, 173, 184, 188, 335, 424, 1120, 1122, 1124, 1135, 1141, 1142], "sch\u00f6nsten": 148, "jemal": 148, "zuletzt": 148, "traumhaften": 148, "gegend": 148, "immer": [148, 149, 163, 167, 173, 175, 188, 260, 1120, 1124, 1131, 1141], "griffweit": 148, "erscheint": 148, "paar": [148, 158, 173, 175, 183, 190, 222, 317, 322, 1120, 1143], "eindr\u00fcck": 148, "m\u00fcder": 148, "abklatsch": 148, "erinnerungen": 148, "hirn": 148, "eingebrannt": 148, "einstieg": [148, 184, 1135], "traunsteinstra\u00df": 148, "hundert": [148, 159, 232], "meter": 148, "s\u00fcdlich": 148, "hoisn": [148, 176], "wirt": [148, 176], "markiert": [148, 149], "wanderweg": [148, 149], "wegweisern": [148, 149], "bergauf": [148, 149], "kupp": 148, "klamm": 148, "einsteigt": 148, "bergab": 148, "touristisch": 148, "erschlossen": 148, "trifft": 148, "familien": 148, "kindern": [148, 1136], "rechter": 148, "felsstock": 148, "adlerhorst": 148, "sieht": [148, 159, 163, 173], "rau": [148, 222], "touristenzon": 148, "rauf": 148, "schart": 148, "durchschnaufen": 148, "einstellen": 148, "gen\u00fcsslich": 148, "h\u00f6henmet": 148, "verspeisen": 148, "steinmanderl": 148, "verfehlen": 148, "erkennbar": [148, 159, 1138], "kamm": 148, "r\u00fcber": 148, "traunsteinfelsen": 148, "erstreckt": [148, 149], "sch\u00f6nste": 148, "teil": [148, 158, 167, 175, 1120, 1122], "meditativ": 148, "wundersch\u00f6n": [148, 149], "steil": 148, "voll": 148, "zecken": 148, "schon": [148, 149, 158, 173, 175, 183, 213, 335, 1122, 1124, 1129, 1136, 1138, 1141], "bl\u00fcht": 148, "rinnen": 148, "leichtest": [148, 159], "dahin": [148, 1120], "wieder": [148, 173, 175, 183, 188, 190, 204, 1122, 1136], "vertun": 148, "manderl": 148, "aufstellen": 148, "nachwelt": 148, "nemesi": 148, "bergverr\u00fcckten": 148, "gleich": [148, 159, 173, 183, 184, 188, 190, 222, 270, 312, 1120, 1135, 1142], "schl\u00fcsselstel": 148, "quert": 148, "latschen": 148, "\u00f6fter": [148, 149], "festhalten": 148, "gel\u00e4nd": 148, "einsam": 148, "bohrhaken": 148, "verrotteten": 148, "schuhband": 148, "festh\u00e4lt": 148, "runterfallen": 148, "glaub": [148, 157, 158], "stell": [148, 173, 204], "umgehen": [148, 1129], "querung": 148, "hierher": 148, "st\u00fcck": 148, "reinzum\u00fcnden": 148, "scheint": [148, 157], "gibt": [148, 149, 154, 157, 159, 160, 163, 173, 184, 185, 196, 222, 312, 1119, 1120, 1121, 1122, 1124, 1129, 1135, 1141], "foto": [148, 835], "mittendrin": 148, "besch\u00e4ftigt": 148, "hose": 148, "kacken": 148, "gesagt": [148, 163, 173, 183, 335, 1120], "manderln": 148, "aufnahmen": 148, "zunehmenden": 148, "sonnenuntergang": 148, "unvergesslich": 148, "nacht": [148, 149], "geworden": 148, "halten": [148, 149], "zumindest": [148, 173, 1122], "hinauf": 148, "stund": [148, 860, 1143], "gekostet": 148, "exklus": [148, 173, 183], "schneck": 148, "j\u00e4gerbrot": 148, "schein": 148, "ausstieg": 148, "hernlersteig": 148, "m\u00fcndet": 148, "gmundnerh\u00fctt": 148, "gem\u00fctlich": [148, 149], "nett": [148, 149, 163, 274, 335, 1129, 1136], "wirtsleut": 148, "h\u00fcttenruh": 148, "ansitzen": 148, "schweinsbraten": 148, "reinkommt": 148, "k\u00fcche": 148, "geputzt": 148, "backerbsen": 148, "morgen": [148, 228, 232], "hochnebel": 148, "blick": [148, 149, 1121], "flugzeug": 148, "gipfel": [148, 149], "dolin": 148, "nebel": 148, "dabei": [148, 159, 163, 199, 335, 1119], "verziehen": 148, "r\u00fcckweg": 148, "hoisnwirt": 148, "miesweg": 148, "karibik": 148, "steiner alpen": 149, "kamni\u0161ke alp": 149, "kamni\u0161ko savinjskih alp": 149, "alten": [149, 1124], "tradit": [149, 212, 215, 410, 425, 561, 563, 564, 566, 586, 815, 879, 1018, 1049, 1139], "bleiburg": [149, 207], "k\u00e4rnten": [149, 335], "umliegenden": 149, "bergen": 149, "interessantesten": 149, "2558m": [149, 207], "steiner": 149, "alpen": 149, "davor": [149, 191], "gekannt": 149, "nun": [149, 167, 173, 196, 203, 228, 603], "gesehen": [149, 173, 179, 213], "steht": [149, 173, 183, 184, 1132, 1135], "fest": 149, "n\u00e4chste": [149, 167], "jahr": [149, 173], "\u00fcberschreitung": 149, "soweit": [149, 1129, 1136], "h\u00f6chst": 149, "interessant": [149, 1121], "steinhaufen": 149, "unge\u00fcbt": 149, "verloren": [149, 188, 191], "h\u00f6henangst": 149, "schauen": [149, 184, 1135], "helm": 149, "schaden": 149, "schottersurf": 149, "kommen": [149, 154, 222, 317, 322, 335, 861], "ihr": [149, 154, 158, 163, 173, 795, 1119, 1121, 1123, 1124, 1129, 1136, 1142], "artikel": [149, 157], "rein": [149, 159, 184, 1135, 1136], "ins": [149, 158, 335, 711, 1120, 1136], "eisenkappel": 149, "seebergsattel": 149, "openstreetmap": 149, "klein": [149, 158, 159, 163, 1120, 1122, 1123], "dorf": 149, "uhren": 149, "stehengeblieben": 149, "scheinen": 149, "parkplatz": 149, "geparkt": 149, "wissend": 149, "hinten": 149, "tal": 149, "beginnt": [149, 183, 1143], "ahnen": 149, "stetig": 149, "verzagen": 149, "eingang": [149, 1120], "kar": 149, "pl\u00f6tzlich": 149, "freundlich": 149, "vorhanden": [149, 1129, 1136], "fr\u00fchst\u00fcck": 149, "lager": [149, 264], "respektvol": 149, "erklimmenden": 149, "zieht": 149, "haltend": 149, "wand": 149, "wiederum": [149, 173], "gilt": [149, 163, 204, 335], "mittlerweil": [149, 1120, 1137], "akzeptiert": 149, "deswegen": [149, 183, 188, 1122], "schliesslich": [149, 1120], "stehend": 149, "denn": [149, 173, 183, 1141, 1143], "hinaufkomm": 149, "passiert": [149, 173, 190], "anf\u00e4ngern": 149, "geschehen": 149, "jung": [149, 335], "izola": 149, "slowenien": 149, "stellten": 149, "ankam": 149, "ob": [149, 157, 183, 1124, 1143], "beantwortet": 149, "adoptivs\u00f6hn": 149, "gewonnen": 149, "nachbarberg": 149, "ko\u010dna": 149, "sichtlich": 149, "spa\u00df": [149, 229, 1138], "abstieg": 149, "erweitert": 149, "rund": 149, "fertig": [149, 183, 200, 228, 663, 670], "empfehl": [149, 1120], "runterzugehen": 149, "raufgekommen": 149, "ostseitigen": 149, "westseitig": 149, "sch\u00f6ner": [149, 173], "langen": 149, "grat": 149, "felst\u00fcrm": 149, "daf\u00fcr": [149, 167, 173, 183, 184, 1120], "anstrengend": 149, "200m": 149, "pulverhangerl": 149, "zur\u00fcck": [149, 173, 185, 1129, 1136], "wohlverdient": 149, "la\u0161ko": 149, "geschmack": 149, "schroff": 149, "selektiv": 149, "jedermann": 149, "kett": 149, "2000m": 149, "umschlossen": 149, "gletschergeformten": 149, "karen": 149, "steilen": 149, "w\u00e4nden": 149, "ost": 149, "richtung": [149, 1131], "schlafm\u00f6glichkeiten": 149, "biwak": 149, "einladung": 149, "\u00fcberquerung": 149, "dringend": 149, "f\u00e4llig": [149, 335], "fu\u00dfnoten": [149, 1119], "belieben": 149, "gummi": 149, "reifen": 149, "fahren": 149, "mehrplatzlag": 149, "reserviert": 149, "h\u00fcttenschl\u00e4fer": 149, "ohrenst\u00f6psel": 149, "f\u00e4lle": 149, "eingetreten": 149, "fassen": [149, 228], "typ": [149, 185, 196, 206, 861, 1083], "geschnarcht": 149, "geschrien": 149, "modules sign": 150, "secure boot": 150, "shim": 150, "dell xps 13": 150, "unresolv": [150, 748, 751, 947], "upset": [150, 695], "tendenc": 150, "vendor": [150, 151, 440, 442, 501, 769, 773, 877, 907], "efi": 150, "implementor": [150, 244, 245, 247, 298, 644, 682, 691, 725, 726, 732, 1105, 1125], "shine": 150, "stuck": 150, "cryptographi": 150, "third": [150, 187, 199, 228, 274, 430, 558, 560, 671, 672, 751, 753, 818, 860, 903], "parti": [150, 155, 448, 560, 744, 751, 899, 940, 1087], "signatur": [150, 196, 228, 232, 253, 274, 546, 642, 689, 705, 706, 941], "openssl": [150, 829], "req": 150, "x509": 150, "newkei": 150, "rsa": [150, 886], "keyout": 150, "xps13": 150, "priv": [150, 767], "outform": 150, "36500": [150, 501], "subj": 150, "passphras": [150, 180, 886], "expiri": 150, "0x2": 150, "97": [150, 159, 173, 183, 188, 190, 196, 199, 212, 215, 220, 222, 225, 228, 232, 235, 241, 250, 253, 260, 270, 274, 280, 292, 312, 317, 322, 418, 1075], "e5": 150, "ef": 150, "88": [150, 159, 173, 183, 188, 190, 196, 199, 201, 205, 212, 215, 220, 222, 225, 228, 232, 235, 238, 241, 250, 253, 257, 260, 270, 274, 280, 292, 312, 317, 322, 420, 1015, 1075, 1076, 1112], "3a": 150, "b3": 150, "9c": 150, "1b": 150, "a4": 150, "d7": 150, "sha256withrsaencrypt": 150, "issuer": [150, 444], "sep": [150, 151, 179, 199, 212, 215, 220, 228, 232, 235, 253, 274, 292, 426, 623, 855, 877, 879, 890, 947], "gmt": 150, "aug": [150, 215, 870, 878], "2121": 150, "subject": [150, 427, 734, 771, 1105], "rsaencrypt": 150, "modulu": [150, 209, 215, 225, 228], "b5": 150, "2d": [150, 202, 560, 1016], "5c": 150, "6f": [150, 935], "b0": 150, "95": [150, 159, 173, 183, 188, 190, 196, 199, 205, 209, 212, 215, 220, 222, 225, 228, 232, 235, 238, 241, 250, 253, 257, 260, 270, 274, 280, 292, 312, 1075, 1076], "f6": 150, "9e": 150, "9d": 150, "0d": 150, "bc": [150, 753, 877], "f5": 150, "6e": 150, "fe": [150, 426], "94": [150, 159, 183, 188, 190, 196, 199, 205, 212, 215, 220, 222, 228, 232, 235, 238, 241, 250, 253, 260, 270, 274, 280, 292, 312, 469, 470, 1075], "2b": [150, 879], "e6": 150, "b2": 150, "a0": [150, 878], "f8": 150, "7d": 150, "1c": 150, "2c": 150, "9f": 150, "4d": [150, 1016], "86": [150, 159, 173, 183, 188, 190, 196, 199, 205, 212, 215, 220, 222, 228, 232, 235, 238, 241, 250, 253, 260, 270, 274, 280, 292, 312, 1075, 1076], "e3": [150, 463], "dd": [150, 804, 833, 1120], "7b": 150, "3f": 150, "aa": 150, "b8": 150, "a5": [150, 878], "d5": 150, "0b": 150, "81": [150, 159, 161, 173, 183, 188, 190, 196, 199, 201, 205, 212, 215, 220, 222, 228, 232, 235, 238, 241, 250, 253, 257, 260, 270, 274, 280, 292, 312, 949, 973, 1075, 1076], "d1": [150, 222, 285, 617], "e8": 150, "dc": [150, 444], "c5": 150, "d2": [150, 222, 285, 617], "c2": [150, 447, 561, 646], "0a": [150, 346], "a1": [150, 212, 257, 1028], "e1": [150, 200, 213, 463, 643, 1098], "89": [150, 159, 173, 183, 188, 190, 196, 199, 205, 209, 212, 215, 220, 222, 225, 228, 232, 235, 238, 241, 250, 253, 257, 260, 270, 274, 280, 292, 312, 418, 877, 878, 879, 949, 1075, 1076], "4c": 150, "4a": 150, "77": [150, 173, 181, 183, 188, 190, 192, 196, 199, 205, 209, 212, 215, 220, 222, 228, 232, 235, 238, 241, 250, 253, 260, 270, 274, 280, 292, 312, 314, 317, 322, 1075, 1076], "a9": 150, "68": [150, 173, 178, 183, 188, 190, 196, 199, 205, 209, 212, 215, 220, 222, 228, 232, 235, 238, 241, 250, 253, 260, 270, 274, 280, 292, 309, 312, 855, 1075, 1076], "b6": 150, "a8": 150, "9b": 150, "d8": 150, "7f": [150, 879], "e2": [150, 200, 213, 463, 643, 1098], "a3": 150, "79": [150, 173, 183, 188, 190, 196, 199, 205, 209, 212, 215, 220, 222, 228, 232, 235, 238, 241, 250, 253, 257, 260, 270, 274, 280, 292, 312, 317, 322, 1075, 1076], "f4": 150, "96": [150, 159, 173, 183, 188, 190, 196, 199, 209, 212, 215, 220, 222, 228, 232, 235, 238, 241, 250, 253, 257, 260, 270, 274, 280, 292, 312, 418, 948, 949, 1075, 1076], "4f": [150, 1016], "1d": 150, "7e": 150, "4e": 150, "0e": 150, "d9": 150, "8c": 150, "d3": [150, 617], "c8": 150, "f7": 150, "8e": 150, "d6": 150, "3b": 150, "1e": 150, "4b": [150, 879, 935], "5e": [150, 1002], "5f": 150, "7c": 150, "expon": [150, 1002], "65537": 150, "0x10001": 150, "x509v3": 150, "98": [150, 159, 173, 183, 190, 196, 199, 205, 212, 215, 220, 222, 225, 228, 232, 235, 238, 241, 250, 253, 260, 270, 274, 280, 292, 312, 317, 322, 543, 580, 949], "0c": [150, 879], "keyid": 150, "c0": 150, "8f": 150, "b1": 150, "b7": 150, "9a": 150, "fa": 150, "7a": 150, "df": [150, 176, 292, 426], "a6": 150, "c9": 150, "76": [150, 173, 183, 188, 190, 196, 199, 201, 205, 212, 215, 220, 222, 228, 232, 235, 238, 241, 250, 253, 257, 260, 270, 274, 280, 292, 312, 317, 322, 437, 438, 702, 1028, 1075, 1076], "f0": 150, "b4": 150, "f9": 150, "eb": 150, "f1": 150, "6c": [150, 879], "2f": [150, 342, 1016], "5a": 150, "e0": 150, "d0": 150, "93": [150, 159, 173, 183, 188, 190, 196, 199, 205, 209, 212, 215, 220, 222, 228, 232, 235, 241, 250, 253, 260, 270, 274, 280, 292, 312, 1075], "8d": 150, "2a": 150, "fc": [150, 443, 444], "1a": 150, "b9": 150, "cb": [150, 607], "miidbtccae2gawibagiuarax5e9vn4g6eclb5bocbruks9cwdqyjkozihvcnaqel": 150, "bqawetepma0ga1ueawwgamzhc2nomcaxdtixmdkwnzeyntc1nloydzixmjewode0": 150, "mti1nzu2wjarmq8wdqydvqqddazqzmfzy2gwggeima0gcsqgsib3dqebaquaa4ib": 150, "dwawggekaoibaqc1lvzqb2aw15x2nlvnnmth6qxdnq1xvokb9vbu6zx": 150, "wl72mzqr": 150, "5rkvwabpeph9hcwdnwcm9mjnhupdexi": 150, "hmszvaowukuzi2kflrpvc": 150, "79gwnr4": 150, "jc": 150, "xdlzwnekcnuhsogjwxxttbydsghpd8q": 150, "valspcvotvjdokib4eyxnavjbdjdldd": 150, "rb8ueftirkn5abigzdoortik9jy1v2ocui5zqu8dkg4vph4mtkp": 150, "nb3kgq7zt5ym": 150, "b8ce2f": 150, "ettmprmfi94x": 150, "7i5tuqrbsylistict": 150, "rf1kw6": 150, "zuzvmwyow9cyzwc5rar": 150, "ys0exg3v": 150, "hyjl7vaxa23rb": 150, "xyiuztxqunxragmbaagjuzbrmb0ga1uddgqwbbqk": 150, "p1jr3huijl4otbwyvngmdz1idzafbgnvhsmegdawgbqkp1jr3huijl4otbwyvngm": 150, "dz1idzapbgnvhrmbaf8ebtadaqh": 150, "ma0gcsqgsib3dqebcwuaa4ibaqa5yke5gyfa": 150, "h49rsbdpobkbr5rv0hz693pljj02mn9hprusmgbygdujyx6odqbzcfah8ko0": 150, "xra": 150, "kdtflvc7uuvwtp": 150, "envqn8vx6twkd0r7maeyze8q6w2y1p1xcbrbwhmhemi": 150, "tjjadwenms9xosesipxkduey9oa6ep6indatkyt2lrw5tyagfocnxyiniybsvdtw": 150, "yqfvxbjphkw": 150, "dintokuzmazeiq3j0hi8o789xdyxlf2snsdshq5huaz67c5brli": 150, "ahemjzbycfiiq65b5x": 150, "y7aq": 150, "eg70tffm4fd8iys4tyxajdhcarqvfpdxazkhx": 150, "rk": 150, "b3lljngstu2g": 150, "mokutil": 150, "mokmanag": 150, "bloodi": [150, 944, 1084], "fan": [150, 172, 176, 202, 226, 1071], "highest": [150, 209, 215, 225, 228, 274, 369, 414, 878, 934], "melt": 150, "7390": [150, 215], "cross develop": 151, "raspberry pi": [151, 870, 871, 872, 873, 874, 877, 878, 879], "crosstool-ng": 151, "c++": [151, 153, 1124, 1125, 1126, 1128], "sadli": [151, 202, 408, 742, 877, 911, 914, 948, 970], "linaro": [151, 726, 869, 957, 958], "libstdc": [151, 959, 961], "unsatisfi": 151, "libpthread": [151, 950], "feedback": [151, 167, 170, 179, 180, 181], "thankfulli": 151, "gperf": [151, 961], "flex": [151, 753, 877, 961], "texinfo": [151, 961], "help2man": [151, 961], "libtool": [151, 961], "ncurs": [151, 746], "unzip": [151, 774, 961], "rsync": [151, 961], "diffutil": 151, "libncurses5": [151, 961], "gawk": [151, 961], "util": [151, 158, 179, 441, 447, 466, 480, 595, 650, 653, 655, 961, 968, 1100], "ct": [151, 961], "zlib": [151, 961], "extra": [151, 173, 183, 209, 375, 436, 528, 699, 773], "prior": [151, 799, 815, 840, 877, 947, 963, 1017], "bootstrap": [151, 961, 1107], "latest": [151, 729, 744, 750, 1100], "yann": 151, "morin": 151, "warranti": [151, 192, 314], "merchant": 151, "chosen": [151, 429, 870, 877, 879, 905, 909, 929, 933, 1077, 1090], "rpi3": 151, "armv7": 151, "rpi2": 151, "23179": 151, "libc": [151, 947, 964], "glibc_2": [151, 947], "ldd": [151, 430, 432, 964], "0xb6e06000": 151, "invok": [151, 181, 200, 213, 303, 308, 444, 546, 558, 617, 647, 926, 948, 985, 997, 998, 1023, 1098], "rpt2": 151, "rpi1": 151, "deb10u1": 151, "quirk": [151, 870], "werror": [151, 350, 363, 406, 429, 741, 742, 1114], "behind": [151, 191, 363, 414, 444, 466, 576, 773, 888, 947, 990, 1088], "glibcxx_3": 151, "libgcc_": 151, "downgrad": 151, "cmake_find_root_path": [151, 948], "cmake_sysroot": [151, 948], "viewpoint": 151, "bye": [151, 670, 674, 676, 677, 678, 1084], "relocat": 151, "pack": [151, 155, 201, 499, 520, 799, 833, 871, 873], "fragil": 151, "sdk": 151, "buildroot": 151, "encount": [151, 180, 228, 232, 878, 879, 905], "ct_prefix": 151, "categori": [152, 164, 426, 1073], "crosstool": [152, 256, 726, 869, 948, 950, 957, 958, 959], "1399": 152, "dell": 152, "xp": [152, 424], "grintovec": [152, 207], "plan\u0161arsko": 152, "jezero": 152, "\u010de\u0161ka": [152, 207], "ko\u010da": [152, 207], "traunstein": [152, 176, 335], "zierlersteig": [152, 176], "bigbluebutton": [152, 156, 1119], "deploi": [152, 180, 317, 322, 442, 763, 800, 801, 878, 879, 884, 886, 890], "consumpt": 152, "buildmanag": 153, "embeddedentwicklung": 153, "anpassungen": 153, "paketen": 153, "rootfilesystem": [153, 950], "dient": 154, "vermarktung": 154, "referenz": [154, 243], "kursteilnehm": [154, 335], "beendigung": 154, "entstandenen": 154, "zur\u00fcckgreifen": 154, "finden": [154, 158, 167, 1119], "sofern": 154, "kund": [154, 167], "w\u00fcnscht": 154, "abstufungen": 154, "\u00f6ffentlichkeit": [154, 1136], "besprochen": 154, "hierbei": 154, "anwendung": [154, 1141], "g\u00e4nzlich": 154, "abgesehen": 154, "ausdr\u00fccklich": 154, "zustimmt": 154, "namen": [154, 173, 183, 232, 292, 861, 1143], "individuen": 154, "prinzipiel": 154, "erw\u00e4hnt": [154, 167], "erlaubni": 154, "sollten": [154, 222, 260], "vorgehen": [154, 240, 1136, 1143], "anbietet": 154, "nie": [154, 163, 175, 335, 1124], "zug\u00e4nglich": 154, "onlinekursen": 154, "m\u00f6glichkeit": [154, 157, 175, 1122, 1141, 1142], "\u00fcbungsmateri": 154, "zustimmen": 154, "einzeln": [154, 167], "keinesfal": 154, "ver\u00f6ffentlicht": 154, "verschiedenst": 154, "m\u00f6glichkeiten": [154, 167, 1138, 1141], "entstanden": [154, 167, 175], "nichtsdestotrotz": [154, 1122], "verf\u00fcgung": [154, 173, 1124, 1141], "accompani": [155, 176, 265, 267, 1074, 1130], "privaci": [155, 172, 176, 177], "guidelin": [155, 172, 291, 879], "certainli": [155, 905], "redhat": [155, 277, 420], "gitk": [155, 833], "traine": [155, 182], "suppos": [155, 176, 232, 302, 466, 751, 773, 790, 812, 870, 918, 1065, 1105], "respositori": [155, 167], "user1": 155, "user2": 155, "user3": 155, "untrack": 155, "beast": 155, "similarli": 155, "unstag": 155, "accident": [155, 557, 689, 757, 800, 801, 840, 904, 1012], "7434a5b": 155, "100755": 155, "cowork": 155, "employ": [155, 424], "favourit": 155, "forward": [155, 218, 244, 245, 246, 255, 276, 277, 298, 355, 370, 379, 385, 386, 392, 396, 399, 403, 412, 416, 421, 422, 607, 644, 651, 682, 692, 723, 725, 726, 773, 833, 857, 865, 869, 870, 880, 885, 1125], "enumer": [155, 161, 163, 173, 179, 184, 185, 189, 191, 197, 198, 200, 221, 225, 230, 236, 250, 254, 271, 274, 293, 359, 406, 426, 643, 734, 769, 879, 1135], "unpack": [155, 159, 179, 185, 189, 191, 196, 200, 204, 209, 212, 217, 221, 222, 228, 233, 235, 239, 240, 251, 256, 258, 261, 270, 274, 292, 302, 317, 696, 773, 799, 871, 873, 877, 948, 955, 961, 962, 1001, 1019, 1125], "869": [155, 215], "124": [155, 159, 173, 180, 183, 190, 196, 199, 209, 212, 215, 220, 222, 225, 228, 232, 235, 238, 250, 253, 260, 270, 274, 280, 292, 1028], "kib": 155, "a4b9666": 155, "bf5bb75": 155, "went": [155, 176], "retri": [155, 891, 990, 1100], "noon": [155, 933, 1021], "lack": [155, 404, 429, 501, 635, 637, 879, 959], "unavoid": 155, "her": [155, 159, 184, 228, 231, 637, 808, 829, 1037, 1079, 1135], "confid": 155, "merg": [155, 201, 775, 933, 1019, 1137], "gentl": [156, 1126], "histori": [156, 164, 200, 218, 244, 245, 247, 249, 298, 363, 640, 644, 646, 682, 723, 725, 726, 732, 775, 804, 810, 861, 1071, 1077, 1083, 1127, 1131, 1138], "tinker": 156, "solder": 156, "sysv": [157, 948], "grace": [157, 269, 709], "sigterm": [157, 944, 945], "sigkil": 157, "beeinflussen": 157, "shutdown": [157, 212, 228, 235, 238, 253, 260, 270, 274, 325, 751, 864, 941, 979], "herausgefunden": [157, 163, 335], "nachfolgend": [157, 1120], "manpag": 157, "verhindern": 157, "genehm": 157, "systemd": [157, 212, 228, 235, 238, 253, 260, 270, 274, 773, 811, 864, 879, 944, 1120], "inhibit": [157, 642, 680], "children": [157, 418], "vererbt": 157, "attributen": 157, "setprior": 157, "execv": [157, 902, 947], "sched_reset_on_fork": 157, "ORed": 157, "privileg": [157, 212, 228, 235, 238, 253, 260, 270, 274, 829, 864], "playback": 157, "prevent": [157, 160, 209, 215, 218, 225, 228, 256, 400, 406, 410, 810, 899, 904, 933, 944, 970, 982, 1012], "evad": 157, "rlimit_rttim": 157, "getr": 157, "anstel": 157, "prozessen": 157, "teilen": 157, "prozess": [157, 318, 1129, 1131, 1138, 1139, 1142], "startenden": 157, "gestarteten": 157, "weitergegeben": 157, "ausser": [157, 184, 312, 1135], "unterbunden": 157, "pthread_attr_setinheritsch": 157, "pthread_inherit_sch": 157, "pthread_explicit_sch": 157, "newli": [157, 406], "sowa": [157, 163, 335, 1120], "\u00e4hnlich": [157, 188], "wikipedia": [157, 218, 414, 557, 879, 890, 934, 966, 1084], "filter_driv": 157, "offenbar": [157, 173, 335, 1122], "miser": [157, 595], "netzwerkdrivern": 157, "hoher": 157, "interruptlast": 157, "verbessern": 157, "n\u00f6tig": [157, 1131], "diesbez\u00fcglich": 157, "\u00fcberlegt": 157, "schaltet": 157, "netzwerkdriv": 157, "30107": 157, "linuxfound": 157, "workgroup": 157, "napi": [157, 187, 767], "implementationen": 157, "libmodbu": 157, "freemodbu": 157, "konfiguriert": [157, 158], "jumbo": 157, "jumbo_fram": 157, "mtu": [157, 872], "1500": [157, 215], "eth0": 157, "9000": [157, 215], "ifconfig": [157, 767], "abgelegt": 157, "konfigur": [157, 159], "ifac": [157, 469, 483, 706], "vorsicht": [157, 183, 861], "routern": 157, "fragmentieren": 157, "tracerout": 157, "netzwerkverbindung": 157, "g\u00fcte": 157, "wissen": [157, 335, 1122, 1129], "sar": 157, "sysstat": 157, "schmerzvol": 157, "netter": 157, "ausprogrammiert": 158, "konflikt": [158, 1137], "parallelen": [158, 1141], "demonstr": [158, 160, 180, 252, 496, 545, 1073, 1077, 1117], "mutter": [158, 335, 336, 1141], "aller": [158, 167, 335, 336, 1120, 1141], "danach": [158, 1119], "hilf": [158, 183, 317, 322, 1131], "gefixt": 158, "kommunk": 158, "variablen": [158, 159, 184, 185, 188, 191, 196, 224, 242, 243, 309, 312, 318, 1121, 1131, 1132, 1135], "frontal": 158, "vorgef\u00fchrt": 158, "diskuss": [158, 167, 189, 335], "dank": [158, 163, 335, 1120], "beispielcod": 158, "h\u00e4ndisch": [158, 1123], "zweier": [158, 184, 1135], "bewundern": 158, "k\u00f6nnt": 158, "euch": 158, "erinnern": [158, 335], "blinken": 158, "liess": 158, "irgendwo": [158, 232], "hatten": [158, 163, 335], "edg": [158, 202, 755, 913, 914], "kleinen": 158, "empf": 158, "unbedingt": [158, 173, 1120], "beispielprogramm": 158, "horcht": 158, "gesprochen": 158, "ausf\u00fchrlich": [158, 243], "schamlos": 158, "eigenwerbung": 158, "\u00fcberbleibsel": 158, "ehemaligen": 158, "socketcan": [158, 871, 872], "absorbiert": 158, "worden": [158, 167, 1120], "enth\u00e4lt": [158, 173], "schnuckelig": 158, "aufzeichnen": 158, "replai": [158, 872], "folien": [158, 167, 175, 1119], "freitag": [158, 1120], "kerneldrivertag": 158, "sorri": [158, 164, 812], "emanuel": 158, "beispieldriv": 158, "han": 158, "findet": 158, "angeboten": [158, 1119], "promin": [158, 699, 769], "implementiert": [158, 173, 204, 1129, 1143], "gute": [158, 175, 1129, 1136], "anfang": [158, 159, 167], "mcp2515": [158, 773], "angesprochen": [158, 175], "fortgeschrittener": [158, 175], "einpflegt": 158, "agiert": 158, "mcp251x": 158, "at91": 158, "soc": [158, 877, 878, 879, 913], "deinem": 158, "stecker": 158, "verbaut": 158, "at91_can": 158, "lacht": 158, "zeilenweisen": 159, "nutzdaten": [159, 212], "extrahieren": [159, 186], "wollend": [159, 1136], "spalt": 159, "offensichtlich": [159, 1123], "separiert": 159, "felder": 159, "antwort": [159, 260], "stdtype": 159, "gscheitesten": 159, "aufeinanderfolgend": 159, "whitespac": [159, 220, 228, 274, 348, 1017, 1040, 1096], "nimmt": [159, 184, 196, 220, 222, 228, 260, 1122, 1135], "tupl": [159, 172, 177, 179, 181, 185, 189, 191, 197, 198, 200, 204, 207, 210, 211, 213, 214, 216, 217, 221, 223, 224, 225, 230, 233, 236, 237, 239, 249, 251, 254, 257, 258, 261, 271, 273, 275, 279, 280, 292, 302, 317, 473, 975, 993, 994, 1001, 1002, 1007, 1016, 1019, 1048, 1071, 1092, 1093, 1125], "weiss": [159, 163, 173, 292, 1138, 1143], "rauskommen": 159, "aaa": [159, 220, 232, 238, 274], "tbbb": 159, "tccc": 159, "feld0": 159, "feld1": 159, "feld2": 159, "ccc": [159, 238], "optional": [159, 1122], "splittet": 159, "bearbeitet": [159, 1142], "manuel": [159, 183, 188], "ddd": 159, "eee": 159, "maxsplit": [159, 228, 274, 426], "restfield": 159, "len": [159, 160, 161, 163, 173, 183, 188, 190, 191, 196, 199, 200, 204, 205, 209, 212, 215, 220, 222, 225, 228, 232, 235, 238, 250, 253, 260, 270, 274, 281, 292, 309, 312, 426, 769, 873, 974, 987, 1000, 1002, 1008, 1010, 1017, 1019, 1021, 1022, 1066, 1084, 1088, 1092, 1095], "10101010": 159, "switchnumb": 159, "rsplit": [159, 228, 274, 426, 1017], "l1": [159, 162, 173, 190, 196, 199, 209, 212, 215, 220, 222, 228, 232, 235, 238, 241, 250, 253, 257, 260, 270, 274, 280, 292, 464], "l2": [159, 162, 173, 190, 196, 199, 204, 209, 212, 215, 222, 228, 232, 235, 238, 241, 250, 253, 257, 260, 270, 274, 280, 292], "\u00e4nderung": [159, 173, 1143], "87": [159, 173, 183, 188, 190, 196, 199, 205, 212, 215, 220, 222, 228, 232, 235, 238, 241, 250, 253, 260, 270, 274, 280, 292, 312, 317, 322, 1028, 1075, 1076], "zeigen": [159, 860], "dasselb": 159, "objekt": [159, 173, 183, 274], "140070310441600": 159, "ver\u00e4ndert": 159, "91": [159, 173, 183, 188, 190, 196, 199, 205, 209, 212, 215, 220, 222, 225, 228, 232, 235, 241, 250, 253, 260, 270, 274, 280, 292, 312, 317, 322, 1075, 1076], "140070371015728": 159, "92": [159, 160, 183, 188, 190, 192, 196, 199, 205, 212, 215, 220, 222, 225, 228, 232, 235, 238, 241, 250, 253, 260, 270, 274, 280, 292, 312, 317, 322, 857, 1075, 1076], "attributeerror": [159, 173, 209, 215, 220, 222, 225, 228, 232, 235, 238, 241, 250, 253, 257, 260, 270, 274, 280, 292, 970, 983, 984, 991], "gottseidank": 159, "alternativ": 159, "aufruf": [159, 173, 179, 183, 228, 313], "paaren": 159, "keyerror": [159, 162, 173, 183, 190, 199, 209, 212, 215, 220, 222, 225, 228, 235, 238, 250, 253, 260, 270, 274, 280, 292, 312, 970, 1019, 1093], "nix": [159, 160, 173, 191, 199, 220, 222, 225, 250, 270, 312, 502], "umstaendlich": 159, "102": [159, 173, 183, 188, 190, 196, 205, 209, 212, 215, 220, 222, 225, 228, 232, 235, 238, 241, 250, 253, 257, 260, 270, 274, 280, 292, 312, 317, 322], "103": [159, 173, 183, 190, 196, 205, 212, 215, 220, 222, 225, 228, 232, 235, 238, 241, 250, 253, 260, 270, 274, 280, 292, 312], "104": [159, 161, 173, 183, 188, 190, 196, 209, 212, 215, 220, 222, 225, 228, 232, 235, 238, 241, 250, 253, 260, 270, 274, 280, 292, 312, 1028], "106": [159, 173, 183, 188, 190, 196, 199, 205, 209, 212, 215, 220, 222, 225, 228, 232, 235, 238, 250, 253, 257, 260, 270, 274, 280, 292, 312, 855], "setdefault": [159, 200, 220, 235, 250, 253, 260, 270, 274, 280, 292, 1019], "107": [159, 173, 183, 188, 190, 192, 196, 199, 212, 215, 220, 222, 228, 232, 235, 238, 250, 253, 260, 270, 274, 280, 292, 312, 314, 413], "meinvoelligsinnlosertyp": 159, "sinnlose_addit": 159, "sinnlobj": 159, "112": [159, 173, 180, 183, 188, 190, 196, 205, 209, 212, 215, 220, 222, 228, 232, 235, 238, 250, 253, 257, 260, 270, 274, 280, 292, 312, 855], "113": [159, 173, 183, 188, 190, 196, 199, 209, 212, 215, 220, 222, 228, 232, 235, 238, 241, 250, 253, 257, 260, 270, 274, 280, 292, 449], "__main__": [159, 163, 173, 178, 196, 199, 209, 212, 213, 215, 220, 222, 225, 228, 232, 235, 238, 241, 253, 260, 270, 274, 280, 292, 312, 317, 971, 974, 978, 984, 992, 1100, 1106], "0x7f64a8934890": 159, "114": [159, 161, 173, 183, 190, 196, 205, 209, 212, 215, 220, 222, 228, 232, 235, 238, 250, 253, 260, 270, 274, 280, 292], "115": [159, 173, 183, 188, 190, 196, 209, 212, 215, 220, 222, 228, 232, 235, 238, 250, 253, 260, 270, 274, 280, 292], "116": [159, 173, 183, 190, 196, 205, 209, 212, 215, 220, 222, 225, 228, 232, 235, 238, 250, 253, 260, 270, 274, 280, 292], "nochwenigersinnvol": 159, "der_absolute_unsinn": 159, "super": [159, 175, 176, 183, 197, 199, 200, 215, 223, 226, 230, 249, 253, 264, 273, 463, 968, 970, 987, 1071, 1078], "unsinn": 159, "uebertreibs_jetzt_bitt": 159, "117": [159, 173, 183, 190, 196, 209, 212, 215, 220, 222, 225, 228, 232, 235, 238, 250, 253, 260, 270, 274, 280, 292], "118": [159, 173, 183, 190, 205, 209, 212, 215, 220, 222, 225, 228, 232, 235, 238, 250, 253, 260, 270, 274, 280, 292, 855, 1028], "0x7f64a894a790": 159, "119": [159, 173, 183, 190, 192, 199, 212, 215, 220, 222, 228, 232, 235, 238, 250, 253, 260, 270, 274, 280, 292, 314], "121": [159, 161, 173, 183, 190, 196, 199, 205, 212, 215, 220, 222, 228, 232, 235, 238, 250, 253, 260, 270, 274, 280, 292], "1335": 159, "122": [159, 161, 173, 183, 188, 190, 196, 199, 209, 212, 215, 220, 222, 225, 228, 232, 235, 238, 250, 253, 260, 270, 274, 280, 292, 949], "819508": 159, "123": [159, 173, 183, 190, 191, 196, 199, 205, 209, 212, 215, 220, 222, 225, 228, 232, 235, 238, 250, 253, 260, 270, 274, 280, 292, 359, 872, 1028, 1035, 1106], "uptim": 159, "timedelta": [159, 178, 205, 207, 260], "358": [159, 215, 260, 274, 292, 420], "125": [159, 183, 188, 190, 196, 199, 209, 212, 215, 220, 222, 228, 232, 235, 238, 250, 253, 260, 270, 274, 280, 292], "irgendwann_einmal_gewesen": 159, "834972": 159, "126": [159, 173, 183, 188, 190, 196, 199, 212, 215, 220, 222, 225, 228, 232, 235, 238, 250, 253, 270, 274, 280, 292], "datetime_from_batteri": 159, "840837": 159, "127": [159, 173, 183, 188, 190, 196, 199, 205, 212, 215, 220, 222, 228, 232, 235, 238, 250, 253, 270, 274, 280, 292, 888, 896], "846889": 159, "woher": [159, 222], "ausschauen": 159, "sinnlo": [159, 222], "sinnlos": [159, 196, 274], "repraesent": 159, "129": [159, 173, 183, 190, 192, 199, 209, 212, 215, 220, 222, 225, 228, 232, 235, 238, 241, 250, 253, 260, 270, 274, 280, 292, 314], "130": [159, 173, 183, 190, 205, 212, 215, 220, 222, 225, 228, 232, 235, 238, 250, 253, 260, 264, 270, 274, 280, 292, 642, 746, 1015], "completedprocess": [159, 228, 238], "returncod": [159, 228, 238], "erfolgreich": 159, "beendet": [159, 1141], "schau": 159, "du": [159, 173, 228, 235, 241, 896, 901], "verwendest": 159, "anzuzeigen": 159, "cell": [159, 172, 870, 995, 1076], "gesendet": 159, "ausf\u00fchrt": 159, "krieg": 159, "131": [159, 173, 183, 190, 199, 205, 212, 215, 220, 222, 228, 232, 235, 238, 250, 253, 270, 274, 280, 292, 692], "capture_output": [159, 238], "ndrwxrwxr": [159, 238], "mar": [159, 228, 359, 800, 801, 804, 818, 830, 852, 855, 857, 881, 895, 905, 947, 950, 959], "2607": 159, "33768": 159, "ndrwxr": 159, "xr": [159, 437, 800, 801, 818, 820, 821, 829, 830, 855, 870, 877, 878, 879, 947, 959, 961, 962, 998], "switchzeug": 159, "keiner": [159, 173, 292, 1124], "seinen": [159, 173], "formuliert": [159, 167], "logisch": [159, 183], "irgendwa": [159, 205, 220, 222], "konverti": 159, "musst": 159, "dich": 159, "festlegen": 159, "133": [159, 173, 183, 190, 212, 215, 220, 222, 228, 232, 235, 238, 250, 253, 260, 270, 274, 280, 292], "stdout_as_utf8": 159, "utf": [159, 200, 209, 212, 213, 215, 219, 225, 228, 238, 260, 274, 280, 292, 1002, 1021, 1068, 1098], "134": [159, 173, 183, 190, 199, 212, 215, 220, 222, 225, 228, 232, 235, 238, 241, 250, 253, 270, 274, 280, 292, 701], "135": [159, 173, 183, 190, 199, 212, 215, 220, 222, 228, 232, 235, 238, 241, 250, 253, 270, 274, 280, 292], "drwxrwxr": [159, 238, 855, 913, 948, 949, 950, 959, 961], "drwxr": [159, 800, 801, 818, 855, 870, 877, 878, 879, 959, 961], "136": [159, 161, 173, 183, 190, 199, 212, 215, 220, 222, 225, 228, 232, 235, 238, 250, 253, 270, 274, 280, 292, 438], "fuer": [159, 220, 225, 232], "listdir": [159, 266, 270, 324, 426], "ipynb_checkpoint": [159, 238], "gitignor": [159, 427, 949], "137": [159, 170, 173, 183, 190, 212, 215, 220, 222, 225, 228, 232, 235, 238, 241, 250, 253, 270, 274, 280, 292], "rekurs": 159, "iterieren": [159, 163, 173, 188, 196], "dirpath": 159, "dirnam": [159, 212, 215, 266, 426, 501, 724, 1105], "checkpoint": [159, 209, 215, 225, 228], "itg": 159, "scope": [159, 167, 173, 184, 185, 188, 219, 231, 244, 245, 247, 256, 268, 279, 290, 294, 298, 317, 354, 360, 464, 514, 534, 547, 549, 558, 643, 684, 696, 699, 714, 715, 725, 726, 969, 1014, 1125, 1135, 1139], "getter": [159, 555, 603], "setter": [159, 199, 991], "fibo": [159, 160, 179, 199, 213, 670, 672, 974], "listcomprehens": 159, "generatorexpress": [159, 160], "switchdb": 159, "schema": [159, 240, 544, 1027], "michi": 159, "pyexec": 159, "ifadminstatu": 159, "ifdescr": 159, "iflastchang": 159, "snmpenginetim": 159, "ifoperstatu": 159, "fein": [159, 183], "helferlein": 159, "hochtrabend": 159, "nennt": 159, "funktional": 159, "138": [159, 173, 183, 190, 199, 212, 215, 220, 222, 228, 232, 235, 238, 250, 253, 270, 274, 280, 292, 1028], "139": [159, 173, 183, 190, 199, 212, 215, 220, 222, 228, 232, 235, 238, 250, 253, 270, 274, 280, 292], "140": [159, 173, 183, 190, 199, 212, 215, 220, 222, 225, 228, 232, 235, 238, 241, 250, 253, 257, 270, 274, 280, 292, 642], "l_quadrat": 159, "141": [159, 173, 183, 190, 212, 215, 220, 222, 228, 232, 235, 238, 241, 250, 253, 270, 274, 280, 292, 359, 855], "kompliziert": [159, 173, 225, 228, 250, 1120, 1139], "anm": 159, "versionen": [159, 229], "aufgebaut": 159, "rausnehmen": 159, "konfigurationsfil": 159, "configpars": 159, "142": [159, 173, 183, 190, 199, 212, 215, 220, 222, 228, 232, 235, 238, 250, 253, 257, 270, 274, 280, 292, 890, 935], "143": [159, 173, 183, 190, 199, 212, 215, 220, 222, 225, 228, 232, 235, 238, 241, 250, 253, 270, 274, 280, 292], "liste_als_str": 159, "144": [159, 173, 183, 190, 199, 206, 212, 215, 220, 222, 225, 228, 232, 235, 238, 241, 250, 253, 260, 270, 274, 280, 292, 438], "145": [159, 173, 183, 190, 199, 212, 215, 220, 222, 225, 228, 232, 235, 238, 241, 250, 253, 270, 274, 280, 292, 1089], "herbert": 159, "146": [159, 173, 183, 190, 199, 212, 215, 220, 222, 228, 232, 235, 238, 241, 250, 253, 270, 274, 280, 292], "heraussen": 159, "147": [159, 173, 183, 190, 199, 212, 215, 220, 222, 225, 228, 232, 235, 238, 250, 253, 270, 274, 280, 292, 808], "148": [159, 173, 183, 190, 199, 212, 215, 220, 222, 228, 232, 235, 238, 241, 250, 253, 270, 274, 280, 292, 561], "149": [159, 173, 183, 190, 212, 215, 220, 222, 225, 228, 232, 235, 238, 241, 250, 253, 270, 274, 280, 292], "151": [159, 173, 183, 190, 199, 212, 215, 220, 222, 228, 232, 235, 238, 241, 250, 253, 270, 274, 280, 292, 324], "152": [159, 173, 183, 190, 199, 212, 215, 220, 222, 228, 232, 235, 238, 250, 253, 270, 274, 280, 292, 324], "mein_dict": 159, "gerhard": 159, "175": [159, 173, 190, 199, 212, 215, 220, 222, 225, 228, 232, 235, 238, 250, 253, 274, 280, 292], "154": [159, 173, 183, 190, 199, 212, 215, 220, 222, 228, 232, 235, 238, 250, 253, 270, 274, 280, 292, 855], "dict_as_json_str": 159, "155": [159, 173, 183, 190, 199, 212, 215, 220, 222, 225, 228, 232, 235, 238, 241, 250, 253, 270, 274, 280, 292, 324], "gelesenes_dict_von_json": 159, "nahm": 160, "woch": [160, 180, 335, 336, 1120], "anspruch": 160, "platz": 160, "gesammelten": 160, "notizen": 160, "schnell": [160, 163, 183, 204, 229, 1123], "sachen": [160, 186], "is_prim": [160, 183, 186, 191, 1050], "divisor": [160, 191, 724, 1042], "unmodifi": [160, 173, 209, 220, 447, 498, 544, 558, 877, 879, 970, 983, 1053], "randomnumb": 160, "howmani": 160, "randrang": [160, 188, 212, 220, 222, 225, 228, 232, 235, 238, 260, 312, 971, 1006], "prev": [160, 763], "cur": [160, 280, 364], "fibonum": 160, "tend": [160, 259, 262, 269, 414, 746, 812, 962], "input_list_str": 160, "input_list": [160, 235, 1053], "__n": 160, "__lt__": [160, 222, 225, 228, 232, 250, 253, 274, 292], "rh": [160, 209, 213, 228, 352, 394, 410, 464, 478, 544, 558, 560, 684], "__le__": [160, 222, 225, 228, 232, 250, 253, 274, 292, 990], "__eq__": [160, 222, 225, 228, 232, 250, 253, 274, 292, 990], "__iadd__": 160, "iadd": 160, "__add__": [160, 225, 228, 232, 250, 274, 292, 990], "new_numb": [160, 215], "__radd__": [160, 225, 232, 250, 990], "radd": 160, "lh": [160, 209, 213, 352, 394, 410, 464, 478, 534, 544, 558, 560, 684, 804], "makesnosens": 160, "__number": 160, "input_numb": 160, "numnber": 160, "list_of_squar": 160, "shorter": [160, 978, 989, 1021, 1070], "compehens": 160, "effort": [160, 232, 266, 407, 408, 425, 878], "local_assign": 160, "read_global_vari": 160, "enclos": [160, 228, 377], "local_shadows_glob": 160, "explicit_global_assign": 160, "creation": [160, 269, 291, 708, 710, 715, 725, 726, 832, 869, 899, 910, 915, 924, 930, 941, 950, 1012, 1021, 1022, 1107], "captur": [160, 243, 244, 245, 247, 267, 298, 302, 317, 682, 683, 686, 725, 726, 870, 966, 1125], "create_funct": 160, "inner_funct": 160, "whic": 160, "f_one": 160, "f_two": 160, "launch": [160, 176], "discov": [160, 172, 179], "area": [160, 169, 202, 232, 769, 878, 1136, 1142], "scikit": [161, 163, 210, 1107], "manipul": [161, 429, 578, 701, 724, 771, 877, 890, 899, 934, 946, 1009, 1027], "appreci": [161, 212, 812, 1028], "beauti": [161, 175, 176, 179, 197, 199, 200, 207, 218, 222, 223, 226, 232, 249, 273, 317, 390, 520, 578, 915, 972, 1021, 1028, 1071], "spectral": [161, 1073], "mat": 161, "scipi": [161, 163, 191, 210, 1107], "loadmat": [161, 163], "sklearn": [161, 163, 1074, 1076, 1107], "pixel": 161, "rgb": [161, 163, 326], "dimens": [161, 163, 1076, 1128], "xkcd": 161, "schafer": [161, 172, 175, 176, 179, 197, 200, 207, 210, 213, 223, 226, 237, 240, 249, 273, 279, 317, 322, 1071, 1089, 1090, 1092, 1093, 1094, 1095, 1097, 1108], "keith": [161, 172, 176, 197, 210, 223, 237, 240, 273, 279, 1071], "galli": [161, 172, 176, 197, 210, 223, 237, 240, 273, 279, 1071], "sci": 161, "kit": [161, 326], "spyder": [161, 172, 995], "pycharm": [161, 172, 266, 995], "retain": [161, 383, 1013], "invoc": [161, 464], "comparison": [161, 178, 201, 215, 218, 228, 236, 274, 359, 363, 369, 520, 684, 1004, 1046], "misfeatur": 161, "png": [161, 163, 433, 949, 1073], "imgfil": 161, "veggi": [161, 163, 1073], "pillow": [161, 163], "welcom": 161, "cooper": [161, 709], "477x686": 161, "imgarrai": [161, 163], "ndim": [161, 1076], "477": [161, 215, 260], "dtype": [161, 163, 257, 260, 264, 1076, 1089, 1090, 1092, 1093, 1094, 1095], "uint8": 161, "255": [161, 196, 212, 215, 220, 222, 225, 228, 232, 235, 253, 260, 270, 274, 280, 292, 926], "172": [161, 173, 190, 212, 215, 220, 222, 225, 228, 232, 235, 238, 241, 250, 253, 260, 270, 274, 280, 292, 409], "nrow": [161, 163], "ncol": [161, 163], "reshap": [161, 163, 197, 210, 223, 237, 240, 273, 279, 1071, 1074, 1076], "irrelev": [161, 178, 183, 216, 359, 401, 424, 818, 1002, 1084], "colorspac": 161, "mpl_toolkit": 161, "mplot3d": 161, "axes3d": 161, "pyplot": [161, 190, 209, 238, 241, 292, 967, 1025, 1076], "plt": [161, 190, 209, 238, 241, 292, 967, 1025, 1076], "fig": 161, "add_subplot": 161, "set_xlabel": 161, "set_ylabel": 161, "set_zlabel": 161, "ndindex": 161, "scatter": [161, 744], "rgb_linear": 161, "n_cluster": [161, 163], "copy_x": 161, "max_it": 161, "n_init": 161, "n_job": 161, "precompute_dist": 161, "random_st": [161, 1074, 1076], "tol": 161, "verbos": [161, 168, 429, 702, 799, 833, 835, 1006, 1100], "cluster_cent": 161, "int32": [161, 410], "327222": 161, "cluster_centers_": [161, 163], "20529747": 161, "50360681": 161, "3796182": 161, "94408609": 161, "75471018": 161, "53133237": 161, "226": [161, 173, 192, 212, 215, 220, 222, 225, 228, 232, 235, 238, 253, 260, 270, 274, 280, 292, 314], "64913628": 161, "76939951": 161, "92569235": 161, "71464963": 161, "47333306": 161, "60640492": 161, "8888303": 161, "92275244": 161, "84313209": 161, "157": [161, 173, 183, 190, 212, 215, 220, 222, 228, 232, 235, 238, 250, 253, 270, 274, 280, 292], "30685398": 161, "43988931": 161, "03959132": 161, "225": [161, 173, 212, 215, 220, 222, 228, 232, 235, 238, 253, 260, 274, 280, 433, 1028], "55934051": 161, "182": [161, 173, 190, 212, 215, 220, 222, 225, 228, 232, 235, 241, 250, 253, 270, 274, 280, 292], "98255893": 161, "3232048": 161, "241": [161, 212, 215, 220, 222, 225, 228, 235, 238, 253, 270, 274, 280, 1028], "37322907": 161, "159": [161, 173, 183, 190, 212, 215, 220, 222, 225, 228, 232, 235, 238, 250, 253, 270, 274, 280, 292], "54158234": 161, "51775529": 161, "idx": [161, 163, 228], "cube": 161, "concaten": [161, 163, 200, 212, 213, 220, 228, 274, 311, 359, 425, 858, 1007, 1015, 1098], "axi": [161, 163, 264, 1092, 1093], "reduced_img": [161, 163], "fromarrai": [161, 163], "float": [162, 173, 177, 179, 181, 183, 190, 191, 196, 199, 209, 212, 213, 215, 218, 220, 222, 225, 228, 233, 236, 250, 253, 258, 270, 274, 280, 291, 293, 312, 313, 340, 341, 342, 346, 356, 358, 359, 363, 393, 402, 407, 426, 454, 463, 569, 570, 659, 877, 935, 945, 983, 1001, 1016, 1023, 1028, 1122, 1126], "franziska": [162, 163], "baseexcept": [162, 199, 228, 232, 253, 970], "callabl": [162, 176, 212, 225, 235, 238, 253, 260, 270, 274, 281, 642, 684, 706, 714, 984, 985, 1022], "forev": [162, 384, 385], "rescu": [162, 220, 557, 578, 700, 702, 773, 968], "pooh": [162, 570], "hex": [162, 173, 183, 190, 205, 215, 225, 238, 250, 253, 260, 270, 280, 312, 328, 501, 879, 1016], "0x7f03d41165f0": 162, "nonexist": 162, "react": [162, 177, 179, 181, 282, 406, 567, 877, 894, 970, 1127], "ensu": 162, "catch": [162, 202, 218, 241, 267, 302, 328, 473, 490, 507, 509, 542, 568, 571, 587, 593, 597, 602, 606, 609, 610, 627, 634, 635, 636, 637, 638, 639, 670, 678, 716, 726, 945], "jessa": [162, 183, 190, 212, 241, 292], "verdammt": [162, 317], "ipython": [162, 199, 209, 215, 225, 228, 253, 270, 855], "bd3a1af9b474": 162, "issubclass": [162, 199, 215, 228, 253], "rais": [162, 163, 177, 179, 181, 199, 200, 209, 213, 215, 216, 220, 222, 225, 226, 228, 232, 240, 241, 274, 291, 302, 328, 968, 975, 981, 991, 1017, 1019, 1092, 1093, 1098], "bummer": [162, 215, 716, 1015], "peter": [162, 185, 222, 232, 308, 309, 1008], "paul": [162, 308, 309, 1008], "mari": [162, 1008], "pet": 162, "perfectli": [162, 218], "bloh": [162, 199], "blech": [162, 270, 655, 1087], "range_iter": [162, 173, 188, 205, 212, 220, 222, 225, 228, 238, 250, 253, 260, 270], "0x7f03d402e570": 162, "stopiter": [162, 173, 188, 199, 205, 209, 212, 215, 220, 222, 225, 228, 232, 238, 250, 253, 260, 270, 274, 280, 292, 670, 678, 970, 975], "beantwortung": [163, 335], "herrschaft": [163, 335], "gestellt": [163, 173, 335, 1124], "schulungsr\u00e4umen": [163, 335], "platzhirsch": [163, 335], "schlagen": [163, 335], "spass": [163, 335, 1129, 1131, 1136], "unglaublich": [163, 335], "lustig": [163, 184, 335, 1120, 1131], "vermittelt": [163, 335, 1141], "gelernt": [163, 335, 1129], "anwend": [163, 335], "beachten": [163, 184, 335, 1135], "zudem": [163, 335], "kursleit": [163, 335], "sympathisch": [163, 335], "kompet": [163, 335], "w\u00fcrde": [163, 173, 335], "weiterempfehlen": [163, 335], "wiederholen": [163, 335], "christoph": [163, 205, 335], "jemand": [163, 335], "lassen": [163, 173, 184, 335, 1123, 1129, 1135, 1139, 1143], "bevor": [163, 1129, 1136, 1143], "anf\u00e4ngerthemen": 163, "vorbei": [163, 222, 228, 1132], "herumzureiten": 163, "gehackt": [163, 203], "zeug": [163, 292, 1138], "chef": 163, "vorgespr\u00e4ch": 163, "\u00fcbungsbeispiel": [163, 173], "mitgegeben": 163, "ausgehend": [163, 184, 335], "spektralbild": 163, "sagt": [163, 220], "verwend": [163, 196, 335], "clusteringalgorithmu": 163, "kategorisieren": 163, "abgebildeten": 163, "st\u00fccke": [163, 167], "erkennen": [163, 1124], "hab": 163, "erlaubt": [163, 173, 1120], "kursvorbereitung": 163, "appet": 163, "reduzieren": 163, "farbredukt": 163, "farben": 163, "bilddaten": 163, "interoperiert": 163, "nahtlo": [163, 1129, 1136], "zufal": [163, 189, 1123], "alpha": [163, 228, 274, 1026], "ausgangsbild": 163, "abzuschneiden": 163, "restoren": 163, "algorithmu": [163, 183, 228, 232, 235], "reduc": [163, 370, 379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 442, 644, 682, 723, 725, 726, 879, 1073], "acht": [163, 183, 184, 228, 260, 280, 1135], "\u00fcberschaubar": 163, "ausdrucksst\u00e4rk": 163, "bemerkbar": 163, "wegschneiden": 163, "pil": 163, "kmean": 163, "nrgba": 163, "disregard": [163, 363], "arbitrarili": [163, 732, 905, 909, 968], "linear_rgb": 163, "rgba": 163, "ergeben": 163, "testprogramm": 163, "imndata": 163, "teilzeitmitarbeiterin": 163, "studiert": 163, "folgendem": [163, 205, 1143], "bekackten": 163, "inputformat": 163, "parsen": [163, 188], "zwischendurch": 163, "gruppenarbeit": 163, "h2o": 163, "dat": 163, "mass": [163, 269], "0000000e": 163, "2662399e": 163, "5994910e": 163, "4391972e": 163, "0048070e": 163, "0078250e": 163, "hessian": 163, "hartre": 163, "bohr": 163, "kamu": 163, "05054e": 163, "61610e": 163, "00000e": 163, "20781e": 163, "08051e": 163, "83024e": 163, "06829e": 163, "42629e": 163, "65256e": 163, "52600e": 163, "69570e": 163, "91733e": 163, "04388e": 163, "34292e": 163, "04780e": 163, "63758e": 163, "19019e": 163, "41217e": 163, "11622e": 163, "21912e": 163, "11752e": 163, "04198e": 163, "36702e": 163, "14839e": 163, "71613e": 163, "96373e": 163, "40456e": 163, "21369e": 163, "24236e": 163, "60956e": 163, "84350e": 163, "29686e": 163, "92365e": 163, "einigen": [163, 184, 335], "runden": [163, 173], "nachdenken": 163, "einigerma\u00dfen": 163, "zufrieden": 163, "load_dat": 163, "matrix_lin": 163, "readlin": [163, 190, 192, 199, 200, 212, 213, 219, 228, 235, 260, 270, 309, 833, 1021, 1098], "vergeigt": 163, "matrix_el": 163, "unnecessari": [163, 354, 384], "triangular": 163, "max": [163, 173, 191, 196, 209, 215, 218, 220, 222, 225, 230, 235, 253, 368, 384, 520, 569, 810, 871, 1076], "row_no": 163, "__name__": [163, 199, 200, 213, 222, 228, 232, 253, 270, 274, 310, 317, 969, 971, 974, 978, 1098], "bildverarbeitung": 163, "ahnung": [163, 205], "beeeeeep": 164, "broad": [164, 443, 1078, 1125, 1126], "responsibl": [164, 932, 1105], "sane": [164, 328, 810, 1079, 1105], "interfer": [164, 414, 427, 878], "paradigm": [164, 809, 817, 870, 878, 1140], "breakag": [164, 753], "nontrivi": [164, 172, 176, 319, 995, 1099], "inappropri": [164, 341, 346, 447, 731], "conclus": [164, 172, 179, 771], "awkward": 164, "encourag": [164, 732], "hear": 164, "predat": [164, 736, 862, 941], "transport": [164, 216, 218, 499, 716, 1067, 1087], "doubt": [164, 209, 215, 225, 228, 232, 701, 1002], "schulungsbeschreibung": [165, 1119], "drehbuch": 165, "workshop": 165, "infolgedessen": 165, "virtuel": [165, 229, 1129, 1139, 1140], "konzipiert": [165, 175, 335], "add_subdirectori": [166, 434, 438, 939, 1114], "group1": 166, "group2": 166, "montag": [167, 175, 176, 197, 201, 1120], "vorbereitung": [167, 335, 1122], "mitbringen": 167, "teilzunehmen": 167, "stattfinden": [167, 243], "folgt": 167, "hierzu": 167, "privatheitsrichtlinien": 167, "bauanleitung": 167, "ausprobieren": 167, "willkommen": 167, "schulungsbeschreibungen": 167, "raii": [167, 269, 542, 726], "stl": [167, 326, 390, 503, 504, 505, 506, 508, 510, 511, 512, 513, 515, 516, 517, 518, 519, 542, 543, 581, 585, 607, 609, 610, 624, 639, 650, 726, 1124, 1125, 1126], "scott": [167, 649, 704], "meyer": [167, 452, 704], "primer": [167, 1112], "sonstig": 167, "argh": [167, 385, 636, 664, 970, 1100, 1112], "kursanforderung": 167, "erg\u00e4nzend": 167, "lasst": 167, "testgetrieben": 167, "testcas": [167, 1106], "aufgab": [167, 173, 203, 1132], "hacken": 167, "diskutieren": 167, "niederschrift": 167, "geschehenen": 167, "geh\u00f6renden": 167, "privaten": 167, "verl\u00e4uft": 167, "ansehen": 167, "clonen": 167, "wann": [167, 175], "zugeh\u00f6rigen": 167, "entspricht": 167, "unbetr\u00e4chtlich": 167, "gcc5": 167, "laufen": [167, 1120], "darau": [167, 175], "installationsanleitung": 167, "benutzung": [167, 317, 322], "zuerst": [167, 1143], "aggreg": [167, 415, 426, 544, 785, 1089, 1112], "klassen": [167, 173, 179, 318, 1124], "konstruktoren": [167, 191, 243, 318, 1124], "methoden": [167, 173, 185, 312, 1124], "referenzen": [167, 173, 184, 185, 243, 1124, 1135], "klass": [167, 196, 292], "\u00e4quival": 167, "\u00fcbergab": 167, "langsam": [167, 173, 222], "ausbauen": 167, "dynmem": 167, "demonstrieren": 167, "alloziert": [167, 173, 190], "delet": [167, 179, 209, 228, 243, 253, 274, 312, 411, 442, 445, 484, 501, 510, 514, 526, 534, 549, 552, 611, 614, 619, 642, 652, 653, 654, 682, 687, 699, 700, 701, 702, 725, 726, 751, 781, 810, 1080, 1107, 1124, 1125], "konstruktor": 167, "destruktor": 167, "vermeiden": [167, 173, 1141], "dtor": [167, 442, 528, 614, 619, 650, 653, 687], "ausflug": [167, 183, 224], "capac": [167, 595], "\u00fcbung": [167, 184, 185, 1135], "handgestrickt": 167, "fallen": [167, 1123, 1124], "lustvol": 167, "erleiden": 167, "teufel": [167, 1123], "smart": [167, 243, 265, 318, 319, 320, 335, 424, 501, 611, 651, 652, 682, 702, 707, 715, 723, 725, 726, 1125, 1128], "shared_ptr": [167, 202, 218, 244, 245, 247, 265, 267, 298, 456, 520, 611, 642, 651, 682, 697, 703, 704, 707, 715, 723, 725, 726, 1125], "unique_ptr": [167, 202, 218, 244, 245, 247, 265, 267, 298, 442, 449, 456, 482, 483, 520, 611, 650, 651, 682, 697, 700, 707, 715, 722, 723, 725, 726, 1125], "demonstriert": 167, "vorgriff": 167, "sortieren": [167, 1124], "employeerecord": 167, "parametrisierbarem": 167, "koordinatentyp": 167, "102ff": 167, "arten": [167, 1122], "containern": 167, "pointerarithmetik": 167, "wiederholung": [167, 184, 191, 227, 1135], "iteratoren": [167, 230], "laufzeitverhalten": [167, 185], "verbesserungen": 167, "gegen\u00fcb": [167, 1122], "6ff": 167, "lambda": [167, 199, 200, 213, 215, 218, 230, 243, 250, 267, 270, 275, 292, 426, 520, 585, 657, 682, 687, 692, 694, 706, 709, 714, 725, 726, 966, 1124, 1125, 1126], "gegen\u00fcberstellung": 167, "sort_algorithm_reverse_lambda": 167, "vererbung": [167, 1124], "fallstudi": 167, "livegehackt": 167, "angebunden": 167, "komplex": [167, 220, 222, 228, 235, 260, 1141], "aufbauen": 167, "vergleichbaren": 167, "anbinden": 167, "wurden": [167, 175], "eigen": [167, 186, 1124, 1129, 1136, 1141, 1142], "kapitel": [167, 317, 322, 1122], "behandelt": [167, 1119], "vorbeigehen": 167, "dcmake_cxx_flag": 168, "dcmake_install_prefix": [168, 432], "libgtest": [168, 169, 265, 267, 1112, 1114], "claim": [168, 352, 561, 563, 564, 808, 901], "simlp": 168, "concret": [168, 176, 202, 265, 442, 449, 454, 469, 531, 617, 619, 714, 983, 1078], "find_packag": [168, 170, 1114], "add_execut": [168, 427, 433, 439, 485, 521, 524, 527, 530, 533, 536, 539, 633, 936, 943, 948, 949, 1111, 1114, 1116], "add_test": [168, 440, 524, 1111, 1114], "emphasi": [168, 298], "ultim": [168, 199, 219, 552, 717, 878], "luke": [168, 228, 1114], "thetoplevel": 168, "findgtest": [168, 170, 1114], "gtest_root": 168, "dgtest_root": 168, "paranoidli": 168, "bitrot": [169, 1114], "var": [169, 173, 212, 228, 235, 238, 253, 260, 270, 274, 478, 773, 805, 835, 855, 860, 861, 864, 961], "libgmock": [169, 265, 267], "gmock": [169, 1112], "dcmake_build_typ": [169, 429], "loudli": [169, 552, 776, 886], "flathub": 170, "appstream": 170, "visualstudio": [170, 229, 337], "flatpakref": 170, "stone": 170, "snap": 170, "hate": [170, 546], "textual": [170, 172, 499], "findpackagehandlestandardarg": 170, "gtest_librari": 170, "gtest_include_dir": 170, "gtest_main_librari": 170, "378": [170, 212, 215, 222, 260, 1028], "_fphsa_failure_messag": 170, "197": [170, 173, 190, 199, 212, 215, 220, 222, 225, 228, 232, 235, 241, 253, 270, 274, 280, 292], "find_package_handle_standard_arg": 170, "occur": [170, 232, 344, 359, 364, 365, 411, 435, 518, 712, 771, 833, 862, 932, 1016, 1017, 1021, 1130], "gessmann": 170, "cpoint_demo": 170, "cmakefil": [170, 427, 433, 438, 948, 949], "cmakeoutput": 170, "sigh": [170, 202, 501, 704, 1062], "jail": 170, "dict_extensions_suit": 171, "thing_suit": 171, "xsv": 171, "dict_extens": 171, "wednesdai": [172, 180, 262], "thursdai": [172, 176], "publicli": [172, 534], "freedom": [172, 414, 620], "spontan": 172, "cost": 172, "agil": [172, 186, 424, 1099], "methodologi": 172, "formul": [172, 268, 426, 659, 717, 896, 1128], "diadact": [172, 995], "anaconda": [172, 266, 995], "dictat": [172, 282, 363, 402, 941, 995, 996, 1080, 1097, 1100, 1127], "volumin": [172, 995], "nodepad": [172, 995], "configurabilti": [172, 1097], "eclips": [172, 995, 1087], "pydev": [172, 995], "seemingli": [172, 176, 947, 995, 1071], "strang": [172, 877, 995], "emac": [172, 192, 270, 833, 855, 947, 995, 1097], "immutabilii": 172, "crisi": 172, "slept": 172, "lunch": 172, "squeez": 172, "Such": [172, 247, 251, 651, 682, 692, 698, 707, 715, 723, 725, 726, 947, 1105], "takeawai": 172, "nonverb": 172, "antenna": 172, "Being": [172, 816, 857, 879, 1011], "stubborn": 172, "greybeard": 172, "distutil": 172, "azur": 172, "devop": [172, 994], "heavyweight": [172, 323, 706], "reach": [172, 220, 626, 701, 732, 737, 804, 905, 1016], "afternoon": 172, "simplic": [172, 464, 804, 871, 894, 968], "paral": 172, "imposs": [172, 232, 410, 446, 670, 681, 771, 923], "expand": [172, 228, 274, 384, 385, 876, 905, 947, 949], "entertain": [172, 176, 197, 200, 223, 249, 273, 1071], "david": [172, 175, 176, 184, 197, 200, 223, 249, 264, 268, 269, 273, 290, 294, 318, 319, 650, 699], "beazlei": [172, 175, 176, 184, 197, 200, 223, 249, 268, 269, 273, 290, 294, 318, 319], "freelanc": 172, "raymond": [172, 175, 176, 179, 183, 184, 197, 200, 207, 223, 226, 249, 273], "hetting": [172, 175, 176, 179, 183, 184, 197, 200, 207, 223, 226, 249, 273], "bias": 172, "humor": [172, 877, 1016], "emphas": [172, 179, 201, 537, 728, 736, 753, 1100], "dissect": [172, 176, 264, 687, 975, 1071], "multiprocess": [172, 176, 226, 268, 269, 1071, 1129, 1136, 1140], "truli": [172, 176, 1071], "chri": [172, 176, 197, 1071], "wilcox": [172, 176, 197, 1071], "frontier": [172, 176, 249, 273, 1071], "whop": [172, 176, 249, 273, 962, 1071, 1078], "simul": [172, 323, 324, 501], "covid": 172, "apart": [172, 232, 269, 377, 643, 871, 973], "ipykernel_launch": [173, 225, 228], "57bd7d77": 173, "6e54": 173, "4dcd": 173, "b7a8": 173, "452f82f88569": 173, "welt": [173, 183, 196, 312, 335, 1120, 1141], "doku": [173, 183, 250], "aeh": 173, "__doc__": [173, 196, 199, 209, 212, 215, 220, 222, 225, 228, 232, 235, 238, 241, 250, 253, 260, 274, 292, 310, 312, 971, 999, 1022], "interaktiven": 173, "modu": 173, "formatierung": [173, 183, 243], "\u00fcbernimmt": 173, "nachdem": [173, 183], "welch": [173, 213], "hamma": 173, "bieten": [173, 1139], "sech": [173, 183, 196, 228, 235, 260, 274], "zurueck": [173, 232, 270], "objektidentit\u00e4t": [173, 191], "0x7fe9d8578dc0": 173, "referenzieren": 173, "wechselt": 173, "zeigt": [173, 183, 1136], "identit\u00e4t": 173, "0x7fe9c4454d90": 173, "listen": [173, 179, 184, 185, 189, 224, 243, 317, 757, 872, 888, 1087, 1135, 1140, 1142], "ausdrucksstark": 173, "trotzdem": [173, 1129, 1136], "lesbar": [173, 222], "beid": [173, 188, 204, 1143], "modifizieren": 173, "modifik": 173, "sichtbar": [173, 335], "gerechnet": 173, "valueerror": [173, 183, 199, 205, 212, 220, 222, 225, 228, 232, 235, 238, 241, 253, 260, 274, 292, 970, 1017], "typeerror": [173, 209, 212, 215, 220, 222, 225, 228, 232, 235, 238, 250, 253, 260, 270, 274, 292, 311, 969, 970, 983, 990, 1013, 1022, 1093], "gel\u00f6scht": 173, "retten": 173, "uff": 173, "140641996429568": 173, "\u00e4ndern": [173, 185, 1143], "erzeugt": [173, 183], "operanden": 173, "unver\u00e4ndert": 173, "new_l": [173, 228, 1003], "140641996429632": 173, "hurra": [173, 190, 253], "killerfeatur": 173, "abcabc": [173, 212], "sequentiel": [173, 183, 222, 227, 1124], "suche": 173, "Suche": [173, 185, 196, 204, 222], "umst\u00e4ndlich": [173, 183], "andrea": [173, 174, 232, 663, 670], "pfeifer": 173, "gefundener_us": 173, "glauben": 173, "klammern": 173, "begrenz": 173, "interpretiert": 173, "overriden": 173, "ausdruck": 173, "evaluierungsreihenfolg": 173, "9223372036854775808": 173, "einstellig": 173, "schreibt": [173, 861, 1143], "datenmengen": 173, "abzulegen": 173, "sucht": 173, "solchen": [173, 183], "vorstellungsvermoegen": 173, "milliarden": 173, "sebastian": 173, "hugo": [173, 215], "machma": 173, "behandeln": 173, "nichtvorhandensein": 173, "ausnahm": 173, "regel": 173, "mim": 173, "victor": 173, "festzustellen": 173, "evaluiert": 173, "aufgerufen": 173, "operand": [173, 190, 209, 212, 238, 361, 362, 363, 369, 560, 561, 563, 564, 659, 692, 990, 1004], "bereit": [173, 184, 1119, 1124, 1135], "gesamtergebni": 173, "jaja": [173, 228], "rechten": 173, "sparen": 173, "potschert": [173, 185, 188, 191, 215, 222, 235], "berechnung": [173, 222], "summ": [173, 196, 222, 228, 232, 235, 260, 285], "einzig": [173, 470, 484, 1138, 1141], "iteriert": [173, 183], "bildet": [173, 228], "primitiveren": 173, "intelligenteren": 173, "0x7fe9c43c3c90": 173, "letzt": [173, 188, 233], "schleif": [173, 184, 185, 189, 1135], "jede": [173, 317, 322, 1119, 1142, 1143], "selb": [173, 183], "k\u00fcrzer": 173, "vergleicht": 173, "objektidentit\u00e4ten": 173, "objektinhalt": 173, "modifiziert": 173, "kopieren": [173, 317, 322, 1124], "vermeintlich": 173, "modifiktionen": 173, "sch\u00fctzen": 173, "l3": [173, 190, 222, 228, 238, 250, 260, 270, 280, 464], "kopi": [173, 222], "klar": [173, 183, 1120], "geschachtelt": [173, 184, 185, 1135], "gleicher": 173, "referenziert": [173, 183], "erachtet": 173, "ersparst": 173, "kopien": 173, "ran": [173, 245, 432, 449, 498, 499, 500, 501, 562, 701, 964, 1112], "parametern": [173, 196], "beliebigen": [173, 861], "definieren": 173, "vergleichbar": 173, "unterst\u00fctzen": 173, "ihn": [173, 232], "\u00e4pfel": 173, "birnen": 173, "verglichen": 173, "hingegen": [173, 183, 1138], "php": [173, 203, 219, 704], "falschem": 173, "uebergeben": 173, "vergleich": [173, 196, 204, 233, 243], "aepfeln": 173, "140641996137808": 173, "add_to_list": 173, "__defaults__": [173, 222, 232, 253, 274, 1013], "meine_list": [173, 183], "defaultwert": 173, "benutzt": [173, 1129], "allerhand": 173, "seiteneffekten": 173, "aufpassen": 173, "ewig": 173, "existierend": 173, "unf\u00e4ll": 173, "wechselwirkungen": 173, "eventuellen": 173, "globalen": [173, 183], "156": [173, 183, 190, 212, 215, 220, 222, 225, 228, 232, 235, 238, 250, 253, 270, 274, 280, 292], "erzwingt": 173, "158": [173, 183, 190, 199, 212, 215, 220, 222, 225, 228, 232, 235, 238, 241, 250, 253, 257, 270, 274, 280, 292], "160": [173, 183, 190, 199, 212, 215, 220, 222, 228, 232, 235, 250, 253, 264, 270, 274, 280, 292, 431, 726], "gesucht": 173, "genauer": 173, "n\u00e4chst\u00e4u\u00dferen": 173, "162": [173, 183, 190, 212, 215, 220, 222, 225, 228, 232, 235, 238, 250, 253, 270, 274, 280, 292], "nirgend": 173, "163": [173, 183, 190, 206, 212, 215, 220, 222, 228, 232, 235, 238, 250, 253, 270, 274, 280, 292], "gibtsnetglob": 173, "gibtsnet": 173, "164": [173, 183, 190, 199, 212, 215, 220, 222, 228, 232, 235, 238, 250, 253, 270, 274, 280, 292], "nameerror": [173, 188, 222, 228, 253, 274, 280, 970, 1012], "aufgabenstellung": 173, "kandidat": 173, "ersten": [173, 175, 188, 280, 309, 1121, 1141, 1143], "unsportlich": 173, "zweiten": [173, 175, 280], "unnachhaltig": 173, "dritten": [173, 280], "gelegenheit": 173, "gab": [173, 175], "erz\u00e4hlen": [173, 1122], "165": [173, 183, 190, 212, 215, 220, 222, 225, 228, 232, 235, 238, 250, 253, 260, 270, 274, 280, 292, 1028], "seq": [173, 191, 253, 763, 935, 973], "fromkei": [173, 219, 224, 236], "166": [173, 183, 190, 212, 215, 220, 222, 228, 232, 235, 250, 253, 270, 274, 280, 292], "167": [173, 183, 190, 212, 215, 220, 222, 225, 228, 232, 235, 238, 250, 253, 260, 270, 274, 280, 292], "xxx": [173, 190, 212, 220, 222, 228, 238, 260, 292, 311, 313, 393, 469], "kksvjhbsk": 173, "sgkysdudsvvc": 173, "dict_kei": [173, 241, 270, 1019], "diesmal": 173, "169": [173, 183, 190, 199, 212, 215, 220, 222, 225, 228, 232, 235, 241, 250, 253, 270, 274, 280, 292], "170": [173, 190, 199, 206, 212, 215, 220, 222, 225, 228, 232, 235, 238, 250, 253, 270, 274, 280, 292], "irgendein": [173, 205], "171": [173, 190, 192, 199, 212, 215, 220, 222, 228, 232, 235, 238, 241, 250, 253, 270, 274, 280, 292, 314], "sonst": [173, 183, 220, 222, 235], "kategori": 173, "number_str": 173, "173": [173, 190, 212, 215, 220, 222, 225, 228, 232, 235, 238, 250, 253, 260, 270, 274, 280, 292, 864], "ihm": [173, 175, 184], "174": [173, 190, 212, 215, 220, 222, 225, 228, 232, 235, 241, 250, 253, 270, 274, 280, 292, 855], "176": [173, 190, 212, 215, 220, 222, 225, 228, 232, 235, 238, 250, 253, 274, 280, 292], "177": [173, 190, 212, 215, 220, 222, 228, 232, 235, 238, 250, 253, 270, 274, 280, 292], "178": [173, 190, 199, 212, 215, 220, 222, 228, 232, 235, 241, 250, 253, 270, 274, 280, 292], "179": [173, 180, 190, 212, 215, 220, 222, 225, 228, 232, 235, 238, 241, 250, 253, 260, 270, 274, 280, 292], "180": [173, 190, 212, 215, 220, 222, 225, 228, 232, 235, 238, 241, 250, 253, 260, 270, 274, 280, 292, 426, 757], "181": [173, 190, 212, 215, 220, 222, 228, 232, 235, 250, 253, 260, 270, 274, 280, 292, 426], "heisst": [173, 185, 189, 190, 1123, 1129], "sequenz": 173, "kopiert": 173, "unterschi": [173, 190, 196, 220], "sobald": [173, 175], "183": [173, 190, 199, 212, 215, 220, 222, 228, 232, 235, 238, 241, 250, 253, 260, 270, 274, 280, 292], "\u00fcbergeben": 173, "184": [173, 190, 212, 215, 220, 222, 225, 228, 232, 235, 241, 250, 253, 260, 270, 274, 280, 292], "it1": 173, "it2": 173, "multipli": [173, 200, 213, 232, 274, 649, 1098], "n2": [173, 232], "combined_iter": 173, "186": [173, 190, 199, 212, 215, 220, 222, 225, 228, 232, 235, 238, 241, 250, 253, 260, 270, 274, 280, 292], "schlecht": 173, "simplen": 173, "transformationen": 173, "generieren": 173, "quadratzahlen": [173, 222], "187": [173, 212, 215, 220, 222, 228, 232, 235, 238, 241, 250, 253, 260, 270, 274, 280, 292], "quadrat": 173, "naeherung": 173, "performant": 173, "gen_squar": 173, "189": [173, 190, 212, 215, 220, 222, 225, 228, 232, 235, 241, 250, 253, 270, 274, 280, 292], "syntaktisch": [173, 196], "191": [173, 190, 199, 212, 215, 220, 222, 228, 232, 235, 238, 241, 250, 253, 270, 274, 280, 292], "genexpr": [173, 199, 292], "0x7fe9c43f2900": 173, "193": [173, 190, 199, 212, 215, 220, 222, 228, 232, 235, 238, 250, 253, 260, 270, 274, 280, 292], "194": [173, 190, 199, 212, 215, 220, 222, 225, 228, 232, 235, 241, 250, 253, 260, 274, 280, 292], "195": [173, 190, 212, 215, 220, 222, 225, 228, 232, 235, 241, 253, 274, 280, 292], "indent": [173, 188, 206, 213, 219, 228, 229, 372, 993, 996, 1006, 1096], "196": [173, 190, 199, 212, 215, 220, 222, 225, 228, 232, 235, 241, 250, 253, 260, 270, 274, 280, 292], "userlist": 173, "nochwa": [173, 222, 260], "dropdown": 173, "dropdownlist": 173, "fehleranf\u00e4llig": 173, "198": [173, 190, 199, 212, 215, 220, 222, 225, 228, 232, 235, 241, 253, 260, 270, 274, 280, 292], "202": [173, 190, 199, 209, 212, 215, 220, 222, 225, 228, 232, 235, 238, 250, 253, 260, 274, 280, 292, 426, 449], "203": [173, 190, 199, 201, 212, 215, 220, 222, 225, 228, 232, 235, 250, 253, 274, 280, 292], "205": [173, 199, 212, 215, 220, 222, 225, 228, 232, 235, 238, 250, 253, 270, 274, 280, 292], "206": [173, 212, 215, 220, 222, 228, 232, 235, 238, 250, 253, 274, 280, 292], "207": [173, 199, 212, 215, 220, 222, 228, 232, 235, 238, 253, 274, 280], "208": [173, 212, 215, 220, 222, 228, 232, 235, 238, 253, 274, 280, 292], "209": [173, 199, 212, 215, 220, 222, 228, 232, 235, 238, 250, 253, 274, 280, 292], "user_a": 173, "user_b": 173, "n\u00e4herung": 173, "nackten": [173, 1122], "210": [173, 199, 212, 215, 220, 222, 228, 232, 235, 253, 260, 274, 280, 292], "hantiert": [173, 1123], "anderem": [173, 1129, 1136], "211": [173, 199, 212, 215, 220, 222, 228, 232, 235, 238, 250, 253, 270, 274, 280], "reviewten": 173, "funktionsaufruf": [173, 235], "sonder": 173, "stackoverflowprogrammierung": 173, "entgegenwirken": 173, "ausholen": 173, "212": [173, 199, 212, 215, 220, 222, 225, 228, 232, 235, 238, 250, 253, 274, 280, 292], "veloc": [173, 199, 313, 1013], "length_m": [173, 199, 313, 1013], "time_": [173, 199, 313, 1013], "213": [173, 212, 215, 220, 222, 225, 228, 232, 235, 238, 250, 253, 274, 280], "spiel": 173, "214": [173, 212, 215, 220, 222, 228, 232, 235, 238, 250, 253, 274, 280, 292], "liegen": 173, "positionel": 173, "215": [173, 212, 215, 220, 222, 228, 232, 235, 238, 250, 253, 260, 274, 280], "param": [173, 183, 196, 213, 241, 274, 655, 704, 705, 878, 934], "216": [173, 199, 212, 215, 220, 222, 228, 232, 235, 250, 253, 260, 274, 280, 292], "217": [173, 212, 215, 220, 222, 225, 228, 232, 235, 238, 253, 260, 270, 274, 280, 292], "218": [173, 212, 215, 220, 222, 225, 228, 232, 235, 238, 250, 253, 260, 270, 274, 280, 292], "219": [173, 199, 212, 215, 220, 222, 228, 232, 235, 238, 250, 253, 270, 274, 280, 292], "entpacken": 173, "positionellen": 173, "221": [173, 199, 212, 215, 220, 222, 228, 232, 235, 238, 250, 253, 260, 270, 274, 280, 292], "kwarg": [173, 199, 226, 228, 232, 253, 274, 968, 972, 993], "explizi": 173, "rauskletzeln": 173, "222": [173, 212, 215, 220, 222, 228, 232, 235, 238, 250, 253, 270, 274, 280, 433], "223": [173, 212, 215, 220, 222, 225, 228, 232, 235, 238, 253, 260, 274, 280, 292, 1084], "celebrate_another_birthdai": 173, "224": [173, 212, 215, 220, 222, 225, 228, 232, 235, 238, 253, 260, 274, 280], "227": [173, 212, 215, 220, 222, 228, 232, 235, 238, 253, 260, 270, 274, 280, 292], "228": [173, 212, 215, 220, 222, 225, 228, 232, 235, 238, 253, 260, 274, 280, 292], "zeiterfassung": 174, "__pycache__": [174, 200, 213, 1098], "supp": 174, "cpython": [174, 199, 209, 215, 225, 228], "pyc": 174, "dienstag": 175, "anleitung": 175, "offen": [175, 335, 1119], "vorwissen": [175, 1124], "konkreten": [175, 335], "aufgabenstellungen": 175, "dienstgeb": 175, "mitgebracht": 175, "quickstart": [175, 1130], "vorgetragen": 175, "wenngleich": [175, 335, 1129, 1139, 1141, 1142], "un\u00fcblichen": 175, "reihenfolg": [175, 1120], "verbrachten": 175, "firmenprojekt": 175, "entspringenden": 175, "festgehalten": 175, "empfehlungen": 175, "weitergehen": 175, "k\u00f6nnte": [175, 1143], "idiomat": [175, 176, 179, 197, 200, 207, 223, 226, 249, 273, 1071], "lieblingsphras": 175, "bringt": [175, 1122, 1141], "forgiv": [175, 176, 273, 1071], "eafp": [175, 176, 273, 1071], "begriff": [175, 189], "viertelstund": 175, "regex": [175, 188, 213, 215, 240, 241, 250, 273, 280, 1015, 1071], "unumg\u00e4nglich": [175, 1137], "textuel": 175, "analysieren": 175, "hero": [175, 176, 197, 200, 223, 249, 273, 1071], "unterhaltsamen": 175, "keynot": [175, 176, 197, 200, 223, 226, 249, 273, 1071], "konferenz": 175, "pydata": [175, 176, 197, 200, 223, 249, 273, 1071], "chicago": [175, 176, 197, 200, 223, 249, 273, 1071], "witzig": 175, "kommt": [175, 190, 200, 203, 229, 1132, 1141, 1143], "selten": 175, "l\u00e4nge": 175, "ganzen": [175, 184, 1135], "abend": 175, "totalschaden": 175, "\u00fcbertragen": 175, "jedem": 175, "angemeldet": 175, "experienc": [176, 265, 267, 294, 335, 999, 1130], "machinelearn": 176, "fuzzi": [176, 215], "improvis": 176, "shall": 176, "jango": 176, "rush": 176, "strong": [176, 226, 362, 1078, 1080], "claus": [176, 179, 209, 215, 225, 230, 252, 664, 973, 1006, 1009], "whet": [176, 259], "appetit": [176, 259], "get_temperatur": [176, 228, 291, 443, 446, 447, 449, 454, 456, 466, 467, 472, 474, 475, 477, 480, 481, 485, 488, 493, 494, 495, 496, 500, 501, 502, 513, 531, 652, 700, 701, 702, 703, 983, 1059], "__dict__": [176, 196, 199, 200, 212, 213, 222, 225, 228, 232, 241, 253, 270, 274, 292, 984, 990, 1098], "con": [176, 858, 964], "fiction": 176, "get_temperature_celsiu": 176, "competitor": 176, "eana": 176, "get_temperature_fahrenheit": 176, "eanaadapt": 176, "unserthermomet": 176, "revisit": [176, 218, 226, 249, 267, 291, 577], "shift": [176, 217, 402, 414, 546, 595, 878, 990], "visitor": 176, "gang": [176, 1128], "idiom": [176, 543, 680], "classic": [176, 401, 452, 543, 765, 1128], "travers": [176, 415, 688, 700, 970, 975, 1011], "convolut": 176, "__call__": [176, 222, 232, 253, 274, 280, 969], "__str__": [176, 199, 200, 213, 222, 225, 228, 232, 250, 253, 274, 291, 292, 328, 970, 1098], "__repr__": [176, 222, 225, 228, 232, 250, 253, 274, 292], "poor": [176, 218, 355, 370, 379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726, 763, 870, 900, 945], "deleg": [176, 552, 682, 725, 726, 1125], "deck": [176, 201, 520], "sensordata": 176, "sensordata_test": 176, "historydata": 176, "slowli": [176, 537, 642, 755, 870], "csvreport": 176, "csv2sqlite3": 176, "frontend": [176, 553, 947, 965, 1101], "flaskerl": 176, "reiter": [176, 197, 216, 218, 223, 226, 325, 554, 1071], "phrase": [176, 179, 197, 220, 222, 223, 226, 228, 253, 800, 801, 988, 1071], "impress": [176, 400], "brought": [176, 414, 979], "cloth": 176, "extraordinari": 176, "mondai": [177, 179, 181, 182, 207, 256, 262, 265, 267], "preliminari": [177, 179, 180, 181, 182], "homogen": [177, 335], "versu": [177, 179, 181], "immut": [177, 179, 181, 183, 184, 191, 198, 200, 211, 212, 213, 215, 221, 227, 230, 236, 242, 251, 259, 261, 262, 275, 292, 312, 384, 994, 1001, 1002, 1003, 1007, 1098, 1135], "datastructur": [177, 201, 219, 1007], "exercise4": 177, "uh2ebfw8oym": [177, 181], "f26namfjggw": 177, "5qqq3yzbkp8": 177, "ugharkscop9uthgcoaec": 177, "pairwis": [178, 212, 559], "vale": 178, "bewar": [178, 363, 877, 945, 1076, 1078], "cheaper": [178, 414, 561, 563, 564, 642], "memorywis": 178, "johann": 178, "syntact": [178, 199, 371, 514, 554, 642, 694], "sugar": [178, 642, 694], "allow": [178, 179, 199, 228, 357, 424, 629, 702, 724, 755, 778, 1033, 1105, 1125], "retval": [178, 410, 600, 916], "dlc": 178, "msg1": 178, "readabl": [178, 222, 232, 266, 350, 381, 385, 405, 406, 407, 414, 424, 426, 485, 599, 620, 635, 643, 646, 681, 692, 694, 700, 705, 706, 808, 818, 824, 829, 833, 855, 880, 947, 973, 992, 1013, 1021, 1023, 1042], "0x7f41f5ff26a0": 178, "msglist": 178, "0x7f41f5ff4160": 178, "0x7f41f5ff41c0": 178, "291130": 178, "now_timestamp": 178, "1603884859": 178, "3412576": 178, "fromtimestamp": 178, "341258": 178, "372": [178, 215, 222, 260], "45259": 178, "microsecond": [178, 405, 810], "programmverweis": 179, "xy": [179, 222, 225, 260, 562, 1011], "zab": 179, "eventcodefil": 179, "definedlisaev": 179, "event_id": 179, "bla": 179, "blubb": 179, "verbessert": 179, "stringformatierung": 179, "ctype": 179, "headerfil": [179, 861], "lst": [179, 215, 815, 1120], "callbackfunc": 179, "datetim": [179, 200, 206, 207, 208, 213, 261, 264, 1028], "observ": [179, 248, 266, 302, 441, 448, 462, 465, 476, 490, 542, 726, 976, 977, 1083, 1128], "longish": 179, "resurrect": [179, 427, 833], "outputsequ": 179, "resist": 179, "uncondition": [179, 776, 970], "suitabl": [179, 228, 274, 746, 870, 919, 983, 992], "analysi": [179, 414, 1073, 1076, 1089], "cp1252": [179, 1065, 1066, 1068], "csvlog": 179, "csv_reader": 179, "recv": [179, 180, 873], "tuesdai": [180, 262, 277], "246": [180, 212, 215, 220, 222, 225, 228, 235, 253, 270, 274, 280, 1084], "corpor": [180, 253], "commandin": [180, 182], "comress": [180, 182], "gzip": [180, 182, 246, 255, 276, 277, 726, 773, 796, 798, 799, 803, 869, 957, 958, 1131], "diagnos": [180, 182, 318, 319, 1129, 1136], "netstat": [180, 182, 255, 276, 277, 1087, 1129, 1136], "netcat": [180, 182, 255, 276, 277], "subshel": [180, 182, 192], "telnetd": 180, "insecur": [180, 886], "proto": 180, "foreign": [180, 256, 385], "34490": 180, "56062": 180, "sshd": [180, 212, 228, 235, 238, 253, 260, 270, 274, 805, 809, 811, 864, 880, 890], "systemctl": [180, 961, 1087], "freedesktop": 180, "systemd1": 180, "quickli": [180, 267, 282, 294, 320, 384, 444, 878, 1127], "unprivileg": 180, "putti": [180, 192, 314], "puttygen": 180, "id_rsa": [180, 886], "authorized_kei": [180, 886], "trivia": 180, "hoorai": [180, 225, 238, 260, 1006], "idiot": 180, "blinker": 180, "briana": 180, "mac": [180, 197, 213, 833, 997, 1071, 1108], "wakeup": [181, 218, 328, 332, 714, 726, 769, 869, 878, 897, 910, 920, 930, 932], "patrick": 181, "1996": [181, 215], "wagna": 181, "gernot": 181, "1982": [181, 215], "birthplac": 181, "txt2json": 181, "equip": [182, 256, 325, 870, 1129, 1136], "wobei": 183, "deppert": [183, 196, 312], "sidestep": 183, "builtin_function_or_method": [183, 253, 280], "sozusagen": 183, "genauso": [183, 1119], "aufrufen": [183, 861], "zaehler": 183, "initialwert": 183, "zaehlen": 183, "naechsten": 183, "schleifendurchlauf": 183, "locker": [183, 771], "mein_integ": 183, "1024": [183, 215, 804, 810, 833, 895], "sch\u00fctzt": 183, "passen": [183, 250], "gehandhabt": 183, "1267650600228229401496703205376": [183, 209, 212, 220, 232, 238, 260], "hoch": 183, "rechnen": [183, 317, 322], "tut": [183, 292, 312, 1122], "ausschliesslich": [183, 1131], "ganzzahldivis": 183, "ganzzahligen": 183, "resultat": 183, "gleichen": [183, 1129, 1142], "vorrang": 183, "ghi": [183, 222], "viert": 183, "nwelt": 183, "nwie": 183, "linefe": [183, 192, 213, 220, 346, 347, 1015, 1021, 1051, 1096], "bedeutung": [183, 1124, 1131], "unangetastet": 183, "glump": 183, "nebenlaeufigkeitsdemo": 183, "ebenlaeufigkeitsdemo": 183, "l\u00f6sung": [183, 196, 205, 335, 872], "formatierungsm\u00f6glichkeit": 183, "pfx_var1": 183, "pfx_var2": 183, "ausgab": [183, 1122], "notwendig": [183, 1121, 1137, 1138], "abzubrechen": 183, "ignorieren": [183, 184, 190, 1135], "gefunden": [183, 253, 861], "value1": [183, 1031], "501": [183, 215, 1031], "value2": [183, 1031], "799": [183, 212, 215, 1028, 1031], "value3": [183, 1031], "sprachen": [183, 184, 1122, 1135], "neg": [183, 228, 232, 363, 405, 410, 622, 751, 864, 1112], "indiz": 183, "erscheinen": 183, "komisch": 183, "bequem": 183, "mapping_t": 183, "f\u00fcnf": [183, 1129], "sieben": [183, 196, 222, 600], "neun": 183, "explicit": [183, 202, 209, 213, 222, 230, 232, 360, 369, 397, 410, 414, 427, 469, 470, 483, 484, 520, 546, 548, 549, 573, 599, 642, 643, 652, 659, 664, 672, 679, 684, 699, 702, 744, 899, 913, 945, 965, 966, 996, 999, 1002, 1079, 1092], "implicit": [183, 209, 222, 232, 350, 356, 360, 525, 641, 643, 659, 833, 902, 988, 1002], "primzahlen": 183, "checken": 183, "primzahl": [183, 184, 1135], "checkenden": 183, "zahl": [183, 190, 196, 221, 222, 225, 235, 312], "probier": 183, "gach": [183, 222], "teiler": 183, "teiler_kandidaten": 183, "prim": 183, "gleichema\u00dfen": 183, "vollst\u00e4ndigkeit": 183, "halber": 183, "startend": [183, 222], "schrittweit": 183, "0x7f24f2ac0e50": 183, "ablegen": 183, "0x7f24f2ac0e70": 183, "arschlangsam": 183, "num_comparison": 183, "datenstruktur": [183, 204], "suchen": [183, 204, 860, 1124, 1131], "einf\u00fcgen": [183, 1129], "optimiert": [183, 196], "perfekt": 183, "einitreten": 183, "himmi": 183, "list_reverseiter": [183, 212, 235, 260], "0x7f24ec31d190": 183, "bricht": 183, "beinhart": 183, "liefert": [183, 1131], "lieber": 183, "zweit": [183, 196, 222, 253, 292, 312, 1129], "po": [183, 222, 228, 232, 253, 258, 270, 274, 426, 502, 595, 622], "wirklichkeit": 183, "ordin\u00e4r": 183, "alternativen": 183, "fruit": 183, "gemma": 183, "divisor_candid": 183, "161": [183, 190, 212, 215, 220, 222, 225, 228, 232, 235, 238, 250, 253, 270, 274, 280, 292], "wegen": 183, "dogma": 183, "zugewiesen": 183, "meine_vari": 183, "eine_vari": [183, 260, 270], "angelegt": 183, "streng": 183, "obigem": 183, "dazusagen": 183, "noch_eine_globale_vari": 183, "increment_diese_vari": 183, "offiziel": [184, 186, 194, 197, 200, 201, 203, 219, 231], "leitfaden": 184, "kommentar": [184, 185, 196, 260, 312, 1135], "platziert": [184, 204], "hackereien": 184, "gleicherma\u00dfen": 184, "sogenannten": 184, "semantik": [184, 185, 1135], "sprach": [184, 185, 1122, 1123, 1124, 1135, 1136, 1143], "standarddatentypen": [184, 185, 1135], "literal": [184, 185, 243, 1135], "python2": [184, 222, 1135], "endg\u00fcltig": [184, 1135], "rausl\u00f6schen": [184, 1135], "konstanten": [184, 185, 1135], "typen": [184, 190, 1131, 1135, 1141], "operatoren": [184, 185, 861, 1124, 1135], "angeschnitten": [184, 1135], "vertiefung": [184, 200, 1135], "nocheinm": [184, 335, 1135], "ausdr\u00fcck": [184, 185, 243, 1135], "operatorrangfolgen": [184, 185, 1135], "grundlegenden": [184, 318, 1131, 1135], "sprachelementen": [184, 1135], "rede": [184, 1135], "syntaxdiagramm": [184, 1135], "gespritzt": [184, 1135], "gesamt": [184, 1135], "sperrig": [184, 1135], "n\u00fctzt": [184, 1135], "menschlich": [184, 1135], "abzubilden": [184, 1135], "tabel": [184, 1135], "anweisungen": [184, 185, 1135], "gro\u00dfen": [184, 1135], "fisch": [184, 1135], "instruktiv": [184, 1135], "bedingungen": [184, 185, 1121, 1135], "verzweigungen": [184, 185, 1135], "bedingt": [184, 185, 1122, 1135], "anweisung": [184, 185, 1135], "formulierungen": [184, 1135], "mehrfach": [184, 185, 1135], "fallauswahl": [184, 185, 1135], "benutzereingaben": [184, 1135], "\u00fcberpr\u00fcfen": [184, 1135], "schleifenkonstrukt": [184, 1135], "weitgehend": [184, 1135], "unserem": [184, 1135], "vehikel": [184, 1135], "hilfreich": [184, 1131, 1135], "klarstellung": [184, 1135], "fu\u00dfgesteuert": [184, 185, 1135], "z\u00e4hlergesteuert": [184, 185, 1135], "auslassen": [184, 1135], "kopfgesteuert": [184, 185, 1135], "gewinnt": [184, 1135], "konsol": [184, 1135], "anzeigen": [184, 1131, 1135], "voraussetzung": [184, 1135], "ausblick": [184, 1135], "schnell\u00fcbersicht": [184, 185, 1135], "sprunganweisungen": [184, 185, 1135], "endlosschleifen": [184, 185, 1135], "naja": [184, 1135], "reinschauen": [184, 1135], "mager": [184, 1135], "ausgelassen": [184, 1135], "eindimensional": [184, 185, 1135], "gefolgt": [184, 222, 1135], "zeichenketten": [184, 185, 1135], "tupel": [184, 185, 188, 1135], "besonder": [184, 185, 1135], "stapel": [184, 185, 1135], "schlangen": [184, 185, 1135], "tempo": [184, 1135], "schauma": [184, 190, 1135], "fallt": [184, 1135], "gscheit": [184, 191, 1135], "gemeinsam": [184, 1119, 1121, 1135, 1138], "dr\u00fcber": [184, 1135], "vielzahl": [184, 1135, 1139, 1142], "l\u00f6sungsm\u00f6glichkeiten": [184, 1135], "eingegangen": [184, 1119, 1135, 1139], "pythonischst": [184, 1135], "bestritten": [184, 1135], "unterprogramm": [184, 185, 1135], "parameter\u00fcbergab": [184, 185, 1135], "r\u00fcckgabewert": [184, 185, 1135], "inner": [184, 185, 205, 426, 969, 1135], "standardbibliotheken": [184, 185, 1135], "funktionalit\u00e4ten": [184, 185, 1135], "berechnet": [184, 220, 228, 1135], "satz": 184, "gepr\u00e4gt": 184, "konferenzen": 184, "definitiv": 184, "sehenswert": 184, "anf\u00e4nger": [184, 1138], "hochinteress": 184, "sprachelement": 185, "elementar": 185, "beliebig": [185, 220, 1136], "gro\u00df": [185, 1141], "vergleichsoperatoren": 185, "strichrechnung": 185, "modulo": [185, 196, 209, 215, 220, 228, 312, 361, 990, 1002], "un\u00e4rer": 185, "negat": [185, 209, 232, 862, 990, 1002, 1020], "konvertierungen": [185, 1122], "pr\u00e4zendenzregeln": 185, "vertauschen": [185, 196, 312], "kontrollstrukturen": [185, 221, 1122], "verzweigung": 185, "schleifen": [185, 243, 1121], "versuch": [185, 197], "hybrid": [185, 616], "supergscheit": 185, "prozeduren": 185, "funktionen": [185, 189, 243, 318, 1121, 1122, 1124, 1132], "funktionspoint": 185, "funktionsobjekt": 185, "primzahlenbeispiel": 185, "laufzeitfehl": 185, "lokal": [185, 196, 242, 243, 1142], "zuweisen": 185, "fehlerfal": 185, "anschliessend": 186, "interaktiv": 186, "uebungen": 186, "idealerweis": [186, 260], "ueblichen": 186, "negoti": 187, "deiniti": [187, 751, 1130], "unload": [187, 753, 767, 769, 1130], "synchronizt": 187, "spinlock": [187, 726, 750, 765, 771, 775, 777, 781, 782, 788, 791, 792, 794, 869, 933, 1130], "rcu": 187, "halv": 187, "softirq": 187, "tasklet": [187, 771], "irss": 187, "kmalloc": [187, 726, 735, 740, 743, 744, 745, 750, 754, 763, 764, 768, 770, 777, 782, 785, 788, 791, 794, 869], "dma": [187, 726, 750, 768, 770, 812, 869, 894, 895, 896, 1130], "coher": [187, 744], "20201125": [188, 190], "unbekannten": 188, "lookup_t": [188, 191, 312], "12345": [188, 220, 232, 260, 1106], "noch_eine_list": 188, "gesamte_list": 188, "vorl\u00e4ufig": 188, "letz": 188, "indented_text": 188, "nebenbei": [188, 190, 312], "eine_zum_sterben_verurteilte_vari": 188, "ein_set": 188, "sequenzen": 188, "grottenlangsam": 188, "subscript": [188, 222, 226, 292, 390, 577, 598, 602, 1092], "multiple_return_valu": 188, "xyz": [188, 190, 196, 215, 222, 253], "mein_formatierter_str": 188, "my_rang": [188, 228, 274, 280], "retlist": 188, "zeichenkett": 188, "funktionieren": [188, 1124, 1142], "my_list": [188, 199, 241], "airms_eth": 188, "simplizistisch": 188, "bl\u00f6d": 188, "phase": [188, 468, 482, 941, 975], "i_oder_v": 188, "iv": 188, "rms_eth": 188, "vorcompilieren": 188, "acirms_eth": 188, "my_regex": 188, "zeilennumm": 188, "dazuhaben": 188, "meine_zu_sendenden_daten": 188, "345": [188, 209, 215, 228, 260, 292], "234": [188, 212, 215, 220, 222, 225, 228, 232, 235, 238, 253, 270, 274, 280, 292, 312], "meine_zu_sendenden_daten_in_string_form": 188, "ueblicherweis": 188, "ueber": 188, "verschickt": 188, "empfangen": [188, 203], "geschrieben": [188, 1142], "empfaeng": 188, "empfangenen": 188, "natuerlich": 188, "zurueckkonvertieren": 188, "meine_empfangenen_daten_python_form": 188, "gegangen": [188, 241], "wurscht": [188, 228, 861], "returnwerten": 189, "containerdatentypen": 189, "untypisiert": 189, "zeilen": [190, 232, 1131], "neiner": 190, "nund": [190, 209], "nb": 190, "stoppt": 190, "newlin": [190, 192, 205, 228, 253, 270, 308, 339, 346, 359, 999, 1015], "ndrin": 190, "drin": [190, 191, 196, 232, 260, 270, 312, 317], "zuviel": [190, 1124], "mischt": 190, "unsupport": [190, 212, 238, 990], "140546731085392": 190, "0x7fd395fb0e50": 190, "0x7fd3900395b0": 190, "new_t": [190, 1003], "0x7fd390052800": 190, "667": [190, 212, 215, 235, 241, 537], "2923750584022716461": 190, "529344067295497451": 190, "unhash": [190, 250, 260, 274], "fuenf": [190, 212, 222, 250, 260, 274, 292, 312], "verschluckt": 190, "6000000": 190, "elementen": [190, 204], "nonetyp": [190, 200, 214, 215, 270, 280, 292], "_io": [190, 209, 212, 215, 225, 228, 260, 274, 309, 775], "textiowrapp": [190, 209, 212, 215, 225, 228, 260, 274, 309, 968], "oi": 190, "456": [190, 191, 215, 222, 260, 359], "hansi": [190, 228, 232, 235], "linspac": 190, "11111111": 190, "22222222": 190, "33333333": 190, "44444444": 190, "55555556": 190, "66666667": 190, "77777778": 190, "88888889": 190, "sin": 190, "8961922": 190, "79522006": 190, "19056796": 190, "96431712": 190, "66510151": 190, "37415123": 190, "99709789": 190, "51060568": 190, "54402111": 190, "plot": [190, 209, 238, 241, 292, 967, 1025, 1077, 1078], "line2d": [190, 238, 241, 292], "0x7fd35cd3ef40": 190, "splev": 190, "splrep": 190, "spline": 190, "represent": [190, 209, 228, 688, 783, 877, 878], "spl": 190, "evalu": [190, 209, 214, 220, 230, 342, 362, 367, 369, 377, 384, 385, 463, 464, 477, 478, 649, 659, 816, 833, 970, 1004, 1006, 1013, 1112], "x2": [190, 232], "y2": 190, "0x7fd341a486d0": 190, "speicher": [191, 1122, 1129, 1136], "sch\u00fctze": 191, "gemischten": 191, "operationen": [191, 1141], "interpol": [191, 232, 1076], "lag": 191, "gib": [191, 270], "depp": [191, 220], "ret_l": 191, "uniq_l": 191, "read_excel": [191, 1076], "invit": [192, 616], "effici": [192, 237, 291, 374, 413, 415, 417, 578, 582, 592, 595, 697, 817, 864, 866, 975, 1078, 1089, 1092, 1130], "expans": [192, 861, 862, 1121], "ecdsa": [192, 314], "fingerprint": [192, 314, 881, 932], "sha256": [192, 314, 881], "in22o4vcd400x0bb4flcb5": [192, 314], "vqnrvkvoirgfqq6mapo": [192, 314], "perman": [192, 314], "individu": [192, 314, 366, 424], "sat": [192, 314], "straight": [192, 664, 1093], "startung": 192, "standpoint": 192, "suboptim": [192, 241], "pwned": 192, "hidden": [192, 455, 650, 746, 947], "clumsi": [192, 218, 219, 259, 262, 440, 444, 544, 552, 560, 573, 600, 642, 705, 967, 968, 984, 985, 1092, 1125], "clumsier": 192, "dumpbin": 192, "hmoe": 192, "frcoll": 192, "bunch": [192, 706, 800, 959, 983], "oom": [192, 212, 228, 235, 238, 253, 260, 270, 274, 974], "killer": [192, 212, 228, 235, 238, 253, 260, 270, 274, 1008], "amoc": 192, "snapshot": [192, 684, 717, 811, 959], "tinkernut": 192, "raspberi": 192, "awesom": [192, 1105], "tunnel": [192, 258, 880, 888, 899], "centric": [192, 1130], "virtualbox": [192, 812], "cygwin": [192, 245, 247, 265, 812], "assort": 192, "nano": 192, "univers": [192, 267, 501, 899, 996, 1130], "scripe": 192, "voellig": 196, "wohl": [196, 280, 1122, 1143], "selbsterklaerend": 196, "printet": 196, "builtin": [196, 202, 209, 215, 216, 225, 228, 232, 253, 274, 291, 292, 833, 971], "accur": [196, 228, 232, 253, 274, 419], "__weakref__": [196, 212, 222, 225, 228, 232, 241, 253, 274, 292], "weak": [196, 228, 232, 253, 274, 292, 703, 1078], "_abc": [196, 209, 215, 225, 228], "_1": [196, 705, 706], "a123": 196, "vernichten": 196, "laufzeit": 196, "140032702361168": 196, "refcount": [196, 701, 703, 968, 1125], "dezim": 196, "oktal": 196, "0o755": [196, 232, 312], "493": [196, 215, 232], "0b11": [196, 232, 235], "sql": [196, 207, 219, 1080, 1083], "0b11111111": 196, "ordnung": 196, "uhrzeit": 196, "vormittag": 196, "6666666666666666": [196, 232], "nda": [196, 250], "python_dir": 196, "jan": [196, 225, 228, 308, 309, 326, 359, 737, 829, 855, 913, 947, 961, 998], "lowercas": [196, 228, 274, 833, 880, 1016, 1033, 1038], "140032636418048": 196, "ein_iterierbares_d": 196, "extraw\u00fcrschtl": 196, "sex": [196, 209, 231, 232, 1033], "diver": 196, "translation_t": [196, 232, 235, 238], "bag": [196, 244, 245, 247, 298, 427, 437, 723, 725, 726, 941, 1003], "green": [196, 232, 466, 501, 502, 562, 870], "blue": [196, 204, 212, 232, 1028], "mengenoperationen": 196, "set1": 196, "set2": 196, "symm_diff": 196, "lisa": 196, "eugeni": [196, 199], "okan": 196, "mcguir": 196, "sinner": 196, "vornam": [196, 204, 205], "nachnam": [196, 204, 205], "persnr": 196, "personalnumm": 196, "5000": [196, 209, 215, 987], "4000": [196, 215], "3000": [196, 209, 215, 235, 274], "15000": [196, 215], "uppercas": [196, 228, 274, 833, 1016, 1033], "verfuegbar": 196, "restlichen": 196, "gehaelt": 196, "konstant": [196, 204, 227], "unexpect": [196, 404], "pcap": [197, 217, 223, 1070], "certifi": 197, "math": [197, 200, 210, 212, 213, 215, 223, 232, 237, 240, 273, 279, 544, 546, 996, 1071, 1098], "statist": [197, 210, 223, 232, 237, 240, 273, 279, 418, 935, 1055, 1071, 1076, 1105], "undo": [197, 833, 1071], "brad": [197, 1071], "traversi": [197, 1071], "evaluierung": 198, "eval": [198, 226, 227, 236, 254, 268, 269, 274, 281, 290, 293, 294, 992], "openfil": 199, "hanld": 199, "soemth": [199, 787], "zf": 199, "namelist": 199, "zipdemo": 199, "extracted_nam": 199, "isinst": [199, 200, 213, 215, 228, 241, 253, 990, 1093, 1098], "superclass": [199, 200, 213, 228, 1098], "subclass": [199, 200, 213, 228, 232, 970, 987, 1098], "class1": 199, "class2": 199, "salari": 199, "selina": 199, "orgl": 199, "8010": [199, 215, 426], "birth": [199, 225, 238, 544, 724, 1060, 1061, 1062, 1063, 1066, 1067, 1068], "1622102062": 199, "4778333": 199, "019427776336669922": 199, "009679079055786133": 199, "daniel": [199, 202, 308, 309, 326], "ortner": 199, "num_employe": 199, "__first": 199, "__last": 199, "__address": 199, "_person__first": 199, "_person__last": 199, "_person__address": 199, "_first": 199, "_last": 199, "_address": 199, "do_debug": 199, "val": [199, 228, 705, 878], "ueberhaupt": 199, "l_float": 199, "0x7fd9881b04a0": 199, "functool": [199, 266], "wrapper": [199, 228, 238, 243, 280, 447, 645, 670, 893, 941, 969, 990, 1073], "komplexen": 199, "testfil": 199, "nzeil": [199, 228], "seek": [199, 274, 309], "nth_fibo": 199, "accomod": 199, "0x7fd9801cec10": 199, "0x7fd9801b8d60": 199, "0x7fd9801b4900": 199, "0x7fd98014cd40": 199, "gen": [199, 274], "sequenceno": 199, "kv_pair": 199, "permissionerror": [199, 215, 235, 253, 270, 970], "deni": [199, 215, 235, 270, 469, 483, 816, 852, 880, 888, 900, 905, 906, 970, 1100], "eacc": 199, "filenotfounderror": [199, 215, 253, 970], "64bit": 199, "utc": 199, "python_implement": [199, 200, 213, 1098], "python_version_tupl": [199, 200, 213, 1098], "python39": 199, "dynload": 199, "isfil": [199, 302, 426], "isdir": [199, 426], "my_path": 199, "hopefulli": 199, "the_except": 199, "__class__": [199, 222, 225, 228, 232, 241, 250, 253, 274, 292], "__bases__": [199, 200, 213, 230, 1098], "distrust": 199, "guido": [199, 1095], "incompet": 199, "precondit": [199, 802], "abdefg": 199, "beg": [199, 385, 971], "bdefg": 199, "stringifi": 199, "0x7ffa9c2ac3a0": 199, "formatstr": 199, "ding": [199, 229, 940], "formatierter_str": 199, "oserror": [200, 228, 253, 970], "errno": [200, 213, 215, 235, 270, 410, 751, 900, 915, 944, 945, 962, 970, 1098, 1100], "assertionerror": [200, 225, 241, 253, 292, 970, 983, 1105, 1106], "jjjj": [200, 330, 331, 423], "line_count": 200, "aud": 200, "qualifii": [200, 213, 1098], "trunc": [200, 213, 1098], "hypot": [200, 213, 1098], "seed": [200, 213, 232, 496, 1098], "ascii": [200, 213, 228, 235, 238, 253, 274, 280, 346, 349, 352, 358, 1001, 1002, 1015, 1021, 1079, 1098], "codepoint": [200, 213, 1098], "escap": [200, 213, 228, 250, 339, 1079, 1098], "ord": [200, 213, 232, 253, 1010, 1098], "chr": [200, 213, 253, 1098], "isxxx": [200, 213, 1098], "rfind": [200, 213, 228, 274, 280, 1017, 1098], "grammar": [200, 213, 1098], "instrospect": [200, 213, 1098], "hasattr": [200, 213, 228, 241, 253, 984, 990, 1098], "__module__": [200, 212, 213, 222, 225, 228, 232, 241, 253, 274, 292, 1098], "bytearrai": [200, 213, 228, 253, 1098], "histogram": [200, 201, 218, 355, 370, 379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 530, 531, 539, 644, 682, 723, 725, 726], "defaultdict": [200, 226, 227, 251], "make_histogram": [200, 531, 540], "fileobj": 200, "stringio": [200, 228], "8859": [200, 218, 219, 235, 238, 258, 280, 292, 426], "pycon": [200, 226, 249, 273, 1071], "2017": [200, 226, 249, 552, 650, 701, 1071], "metaprogram": [200, 227, 249, 659, 983, 1071, 1126], "contract": [200, 202, 249, 1071], "evolut": [200, 249, 833, 1071], "unauthor": [200, 249, 1071], "biographi": [200, 249, 1071], "lesson": [200, 249, 314, 320, 425, 688, 963, 1071], "evolv": [200, 249, 685, 1071], "assembli": [200, 249, 273, 947, 949, 1071, 1127], "revolv": [200, 226, 1071, 1077], "mro": [200, 226, 230, 1071], "cpa": 201, "fahr": [201, 340, 342], "tomorrow": [201, 216, 324, 325], "correctli": [201, 291, 303, 402, 877, 900, 1023, 1079], "consecut": [201, 365, 694, 866], "becam": [201, 287], "44ff": 201, "gig": 201, "upcom": 201, "msi": 201, "wswitch": [201, 406, 643, 742], "wall": [201, 215, 216, 363, 413, 429, 717, 741, 742, 1114], "77ff": 201, "skip": [201, 228, 309, 427, 429, 748, 878, 948, 949, 970, 1107], "89ff": 201, "alongsid": [201, 767], "num_us": 201, "199ff": 201, "204ff": 201, "208ff": 201, "220ff": 201, "222ff": 201, "db_get_user_at_index": 201, "298ff": 201, "strcpy": [201, 218, 352, 398, 534, 549, 552, 653, 687, 873, 931], "strlen": [201, 352, 377, 405, 549, 552, 653, 687, 911, 914, 944], "bahavior": 201, "dest": [201, 352], "strtol": 201, "stringif": [201, 1122], "db_error_str": 201, "sexi": [201, 923], "caleb": 201, "discret": [202, 232, 291, 412, 416, 421, 422, 644, 682, 723, 725, 726], "bleed": 202, "rect": [202, 393, 520], "sphere": [202, 520], "preprocessor": [202, 218, 359, 386, 392, 396, 399, 403, 408, 412, 416, 421, 422, 641, 644, 682, 723, 725, 726, 947, 1112, 1126], "julia": 202, "yesterdai": [202, 218, 226, 266], "distanc": [202, 546, 554, 555, 575, 692, 705], "has_lastnam": 202, "botton": 202, "mingw": [202, 245, 247, 265, 324, 337, 812], "resembl": 202, "tortur": 202, "functor": [202, 244, 245, 247, 298, 586, 682, 683, 725, 726], "rudimentarili": [202, 1000, 1074], "gotten": 202, "recourc": 202, "outright": [202, 258, 400, 975, 1006], "geniu": [202, 258, 577, 975, 1006], "livehackingli": 202, "zuordnung": [203, 219, 231], "bissl": 203, "commandlineargument": [203, 1121], "stoff": 203, "summenbeispiel": 203, "showcas": 203, "datenbank": 203, "formulieren": 203, "verbindung": [203, 1119, 1129, 1136, 1142], "schicken": [203, 1119], "schickman": 203, "muessen": 203, "verwandlen": 203, "fractal": [203, 219], "schatzi": 204, "zeitkomplexit\u00e4t": 204, "foreach": 204, "assozi": [204, 1124], "color_transl": 204, "gelb": 204, "yellow": 204, "hashtabl": [204, 1093], "englisch": [204, 1119], "sack": 204, "my_color": 204, "her_color": 204, "pink": 204, "gr\u00fcn": 204, "beig": 204, "vereiningungsmeng": 204, "schnittmeng": 204, "symmetrisch": 204, "differenzmeng": 204, "sei": 204, "gewesen": 204, "waer": [204, 280], "1037190666": [204, 220, 222, 228, 232, 235, 238, 241, 444, 451, 468, 469, 470, 482, 483, 484, 603, 984], "6666010185": 204, "schwarzbauer": 204, "json_string_fuer_den_brows": 204, "response_dict": 204, "svnr": [204, 212, 215, 222, 228, 232, 235, 238, 240, 241, 280, 445, 451, 473, 479, 984, 1088], "pprint": [204, 206, 213, 215, 250, 971, 1079], "formatieren": 204, "endlich": 204, "transfer_string_in_php_am_serv": 204, "u00f6rg": 204, "transfer_string_in_js_am_brows": 204, "response_dict_am_brows": 204, "verwandeln": [204, 1138], "schlussendlich": 204, "geeignet": [204, 1120], "platzieren": 204, "meine_t": 204, "sozialversicherungsnumm": 204, "simmer": 205, "mein_str": 205, "sq": [205, 212, 215, 222, 232, 253, 274, 292], "docu": 205, "nmehrzeilig": 205, "nvon": 205, "mehrzeilig": 205, "deppertem": 205, "irrelevant": 205, "quargel": [205, 206], "190666": 205, "inkorrekt": 205, "geburtsdatum": 205, "endswith": [205, 220, 222, 228, 238, 253, 257, 260, 274, 280, 1017], "sss": 205, "isalpha": [205, 209, 220, 222, 228, 232, 253, 274, 280, 1017], "isidentifi": [205, 209, 222, 228, 238, 253, 274, 280, 1017], "islow": [205, 228, 238, 253, 274, 1017], "arg1": 205, "arg2": 205, "arg3": 205, "abcblah": 205, "blahabcbcabcc": 205, "lah": 205, "rstrip": [205, 209, 213, 220, 224, 225, 228, 238, 253, 270, 274, 280, 308, 317], "lstrip": [205, 220, 224, 228, 253, 274, 280, 317], "wieviel": [205, 1129, 1136], "995237": 205, "datestr": 205, "dt": [205, 773, 877], "strptime": [205, 206, 207, 213], "uuid": 205, "msg_aussi": 205, "sea": [205, 220, 253, 313, 663], "oida": [205, 222, 225, 274, 429], "msgid": 205, "uuid4": 205, "timestamp": [205, 215, 235, 264, 268, 269, 290, 292, 294, 426, 706, 734, 835, 855, 889, 940], "345654325678": 205, "json_aussi": 205, "6563515ef0824d42b459389cefd09127": 205, "json_eini": 205, "sender": [205, 945], "msg_eini": 205, "sauberestextfil": 206, "12345678": 206, "2270": [206, 215], "20333": 206, "360": [206, 215, 292], "91011121": 206, "30333": 206, "36756788": 206, "1112": [206, 215], "1244": [206, 215], "31333": 206, "45011121": 206, "44444": 206, "340": [206, 215, 222, 228, 260, 274], "sauber": 206, "read_sauberes_text_fil": 206, "item1": 206, "item13": 206, "werk": 206, "lort": 206, "charg": [206, 448, 455, 468, 469, 470, 482, 483, 484], "sonderbestandsnumm": 206, "materialkurztext": 206, "lagerplatz": 206, "verfueg_bestand": 206, "bme": 206, "we_datum": 206, "verf\u00fcg": 206, "bestand": 206, "datum": [206, 1078], "api2": 207, "opc": [207, 216, 291], "rrdtool": 207, "rrd": 207, "subprocess": [207, 223, 228, 237, 239, 249, 273, 302, 317, 322, 1071], "commmon": [209, 385], "140576769461632": 209, "simplicit": 209, "inputfil": [209, 426], "450": [209, 215, 222, 257, 260], "paragraph": [209, 439], "highli": [209, 335, 501], "pathnam": [209, 215, 225, 228, 732, 899, 903, 1015], "displayhook": [209, 215, 225, 228, 310], "excepthook": [209, 215, 225, 228, 310], "uncaught": [209, 215, 225, 228, 520], "systemexit": [209, 215, 225, 228, 250, 253, 310, 970], "behav": [209, 215, 218, 225, 228, 499, 520, 646, 701, 702, 721, 789, 815, 935], "last_typ": [209, 215, 225, 228, 310], "last_valu": [209, 215, 225, 228, 310, 670, 673, 676, 677, 678], "last_traceback": [209, 215, 225, 228, 310], "builtin_module_nam": [209, 215, 225, 228, 310], "pertain": [209, 215, 225, 228], "exec_prefix": [209, 215, 225, 228, 310], "float_info": [209, 215, 225, 228, 310], "float_repr_styl": [209, 215, 225, 228, 310], "hash_info": [209, 215, 225, 228, 310], "hexvers": [209, 215, 225, 228, 310], "int_info": [209, 215, 225, 228, 310], "maxsiz": [209, 215, 225, 228, 310], "largest": [209, 215, 225, 228, 402], "maxunicod": [209, 215, 225, 228, 310], "thread_info": [209, 215, 225, 228, 310], "version_info": [209, 215, 225, 228, 310], "__stdin__": [209, 215, 225, 228, 310], "__stdout__": [209, 215, 225, 228, 310], "__stderr__": [209, 215, 225, 228, 310], "__displayhook__": [209, 215, 225, 228, 310], "__excepthook__": [209, 215, 225, 228, 310], "screen": [209, 215, 225, 228, 809, 815, 833], "exc_info": [209, 215, 225, 228, 310], "getdlopenflag": [209, 215, 225, 228, 310], "dlopen": [209, 215, 225, 228, 1139], "getprofil": [209, 215, 225, 228, 310], "profil": [209, 215, 225, 228, 335, 413, 419, 422, 726, 773, 805, 1123, 1126], "getrefcount": [209, 215, 225, 228, 235, 310], "getrecursionlimit": [209, 215, 225, 228, 310], "getsizeof": [209, 215, 225, 228, 250, 253, 310], "gettrac": [209, 215, 225, 228, 310], "setdlopenflag": [209, 215, 225, 228, 310], "setprofil": [209, 215, 225, 228, 310], "setrecursionlimit": [209, 215, 225, 228, 310], "settrac": [209, 215, 225, 228, 310], "__breakpointhook__": [209, 215, 225, 228, 310], "breakpointhook": [209, 215, 225, 228, 310], "breakpoint": [209, 215, 225, 228, 253], "exctyp": [209, 215, 225, 228], "__unraisablehook__": [209, 215, 225, 228, 310], "unraisablehook": [209, 215, 225, 228, 310], "unrais": [209, 215, 225, 228], "exc_typ": [209, 215, 225, 228, 968], "exc_valu": [209, 215, 225, 228, 968], "exc_traceback": [209, 215, 225, 228, 968], "err_msg": [209, 215, 225, 228], "addaudithook": [209, 215, 225, 228, 310], "audit": [209, 215, 225, 228, 310], "call_trac": [209, 215, 225, 228, 310], "afterward": [209, 215, 225, 228, 364, 414, 551, 701, 702, 703, 716, 769, 941, 1106], "older": [209, 215, 225, 228, 798, 941], "get_asyncgen_hook": [209, 215, 225, 228, 310], "firstit": [209, 215, 225, 228], "get_coroutine_origin_tracking_depth": [209, 215, 225, 228, 310], "coroutin": [209, 215, 225, 228, 298, 672, 673, 675, 676, 677, 678, 682, 725, 726, 1071], "getallocatedblock": [209, 215, 225, 228, 310], "getdefaultencod": [209, 215, 225, 228, 274, 310], "getfilesystemencodeerror": [209, 215, 225, 228, 310], "getfilesystemencod": [209, 215, 225, 228, 310], "getswitchinterv": [209, 215, 225, 228, 310], "setswitchinterv": [209, 215, 225, 228, 310], "is_fin": [209, 215, 225, 228, 310], "set_asyncgen_hook": [209, 215, 225, 228, 310], "set_coroutine_origin_tracking_depth": [209, 215, 225, 228, 310], "cr_origin": [209, 215, 225, 228], "rtld_global": [209, 215, 225, 228], "rtld_xxx": [209, 215, 225, 228], "rtld_lazi": [209, 215, 225, 228], "frequenc": [209, 215, 225, 228, 232, 268, 269, 290, 294, 303, 328, 332, 726, 869, 870, 878, 910, 930, 932], "uninterrupt": [209, 215, 225, 228, 765], "workload": [209, 215, 225, 228], "typic": [209, 215, 225, 228, 256, 266, 282, 294, 385, 425, 429, 446, 470, 499, 626, 744, 793, 818, 948, 993, 1003, 1125, 1127], "005": [209, 215, 225, 228], "abiflag": [209, 215, 225, 228, 310], "api_vers": [209, 215, 225, 228, 310], "1013": [209, 215, 225, 228], "ipyk": 209, "base_exec_prefix": [209, 215, 225, 228, 310], "base_prefix": [209, 215, 225, 228, 310], "_ast": [209, 215, 225, 228], "_codec": [209, 215, 225, 228], "_collect": [209, 215, 225, 228], "_f": [209, 215, 225, 228], "byteord": [209, 215, 225, 228, 250, 310, 871], "foundati": [209, 215, 225, 228], "emati": [209, 215, 225, 228], "ipykernel": [209, 215, 225, 228, 253], "zmqshelldisplayhook": [209, 215, 225, 228], "dont_write_bytecod": [209, 215, 225, 228, 310], "opt": [209, 215, 225, 228, 391], "ation": [209, 215, 225, 228], "7976931348623157e": [209, 215, 225, 228], "308": [209, 215, 222, 225, 228, 270, 280, 292], "max_": [209, 215, 225, 228], "epsilo": [209, 215, 225, 228], "2305843009213693": [209, 215, 225, 228], "iphash2": [209, 215, 225, 228], "50922736": 209, "cache_tag": [209, 215, 225, 228], "xv": [209, 215, 225, 228], "bits_per_digit": [209, 215, 225, 228], "sizeof_digit": [209, 215, 225, 228], "syntaxerror": [209, 220, 225, 232, 253, 970], "eol": [209, 232], "9223372036854775807": [209, 215, 225, 228], "1114111": [209, 215, 225, 228], "meta_path": [209, 215, 225, 228, 310], "_frozen_importlib": [209, 215, 225, 228, 253], "builtinimport": [209, 215, 225, 228, 253], "_fro": [209, 215, 225, 228], "homepa": 209, "path_hook": [209, 215, 225, 228, 310], "zipimport": [209, 215, 225, 228], "filefind": [209, 215, 225, 228], "path_importer_cach": [209, 215, 225, 228, 310], "jfa": [209, 215, 225, 228], "platlibdir": [209, 215, 225, 228, 310], "ps1": [209, 215, 225, 228, 310, 1107], "ps2": [209, 215, 225, 228, 310], "ps3": [209, 215, 225, 228, 310], "pycache_prefix": [209, 215, 225, 228, 310], "outstream": [209, 215, 225, 228], "versio": [209, 215, 225, 228], "202103": 209, "releaselev": [209, 215, 225, 228], "warnopt": [209, 215, 225, 228, 310], "isdigit": [209, 220, 228, 232, 253, 260, 274, 280, 1017], "pp": [209, 260, 390, 577], "list_of_str": 209, "tensorflow": 210, "kesselfal": 210, "rettenbachklamm": 210, "hochtor": 210, "hochschwab": 210, "_a": [212, 228, 253], "_123": 212, "140575811317328": 212, "140575811316208": 212, "0xffffffff": [212, 213, 363], "4294967296": [212, 220], "0x48": [212, 877], "330": [212, 215, 228, 253, 260, 274, 292], "332": [212, 215, 228, 260, 274, 292], "333": [212, 215, 228, 260, 274, 313], "334": [212, 215, 228, 260], "dstr": 212, "777": [212, 215], "aliv": [212, 383, 923, 966], "bcd": 212, "dusan": 212, "alex": [212, 226, 988], "mist": [212, 260], "span": [212, 238, 241, 243, 250, 274, 340, 359, 383, 748], "141592653589793": [212, 215], "roll": [212, 231, 252, 268, 269, 1006, 1122], "dice": [212, 231, 252, 268, 269, 1006], "win": [212, 228, 238, 864, 931, 1006], "rnd": [212, 235], "convention": 212, "wise": [212, 256, 408, 552, 624, 655, 724, 726, 741, 751, 771, 869, 910, 970], "resultset": [212, 215, 1083], "sbin": [212, 228, 235, 238, 253, 260, 270, 274, 805, 809, 811, 858, 864, 895, 905], "nologin": [212, 228, 235, 238, 253, 260, 270, 274, 858, 864, 895, 905], "adm": [212, 228, 235, 238, 253, 260, 270, 274, 859, 862, 864], "lp": [212, 228, 235, 238, 253, 260, 270, 274, 864], "spool": [212, 228, 235, 238, 253, 260, 270, 274, 864], "lpd": [212, 228, 235, 238, 253, 260, 270, 274, 864], "ftp": [212, 228, 235, 238, 253, 260, 270, 274, 860, 961], "65534": [212, 228, 235, 238, 253, 260, 270, 274], "apach": [212, 228, 235, 238, 253, 260, 270, 274], "httpd": [212, 228, 235, 238, 253, 260, 270, 274], "coredump": [212, 228, 235, 238, 253, 260, 270, 274, 864, 944], "997": [212, 215, 228, 235, 238, 253, 260, 270, 274], "dumper": [212, 228, 235, 238, 253, 260, 270, 274, 864], "998": [212, 215, 228, 235, 238, 253, 260, 270, 274], "996": [212, 215, 228, 235, 238, 253, 260, 270, 274], "timesync": [212, 228, 235, 238, 253, 260, 270, 274, 864], "995": [212, 215, 228, 235, 238, 253, 260, 270, 274], "tss": [212, 228, 235, 238, 253, 260, 270, 274], "tpm": [212, 228, 235, 238, 253, 260, 270, 274], "dbu": [212, 228, 235, 238, 253, 260, 270, 274, 811], "polkitd": [212, 228, 235, 238, 253, 260, 270, 274, 811], "994": [212, 215, 228, 235, 238, 253, 260, 270, 274], "avahi": [212, 228, 235, 238, 253, 260, 270, 274, 811], "mdn": [212, 228, 235, 238, 253, 260, 270, 274], "unbound": [212, 228, 235, 238, 253, 260, 270, 274, 1002], "992": [212, 215, 228, 235, 238, 253, 260, 270, 274], "dnsmasq": [212, 228, 235, 238, 253, 260, 270, 274, 811], "991": [212, 215, 228, 235, 238, 253, 260, 270, 274], "dhcp": [212, 228, 235, 238, 253, 260, 270, 274], "nm": [212, 228, 235, 238, 253, 260, 270, 274, 420, 553, 773, 959, 965], "openconnect": [212, 228, 235, 238, 253, 260, 270, 274], "993": [212, 215, 228, 235, 238, 253, 260, 270, 274], "989": [212, 215, 228, 235, 238, 253, 260, 270, 274], "networkmanag": [212, 228, 235, 238, 253, 260, 270, 274, 420, 811], "usbmuxd": [212, 228, 235, 238, 253, 260, 270, 274], "gluster": [212, 228, 235, 238, 253, 260, 270, 274], "988": [212, 215, 228, 235, 238, 253, 260, 270, 274], "glusterf": [212, 228, 235, 238, 253, 260, 270, 274], "rtkit": [212, 228, 235, 238, 253, 260, 270, 274], "realtimekit": [212, 228, 235, 238, 253, 260, 270, 274], "pipewir": [212, 228, 235, 238, 253, 260, 270, 274], "987": [212, 215, 228, 235, 238, 253, 260, 270, 274], "geoclu": [212, 228, 235, 238, 253, 260, 270, 274], "990": [212, 215, 228, 235, 238, 253, 260, 270, 274], "chroni": [212, 228, 235, 238, 253, 260, 270, 274], "984": [212, 215, 228, 235, 238, 253, 260, 270, 274, 864], "saslauth": [212, 228, 235, 238, 253, 260, 270, 274], "saslauthd": [212, 228, 235, 238, 253, 260, 270, 274], "radvd": [212, 228, 235, 238], "rpc": [212, 228, 235, 238, 253, 260, 270, 274], "rpcbind": [212, 228, 235, 238, 253, 260, 270, 274], "openvpn": [212, 228, 235, 238, 253, 260, 270, 274], "982": [212, 215, 228, 235, 238, 253, 260, 270, 274, 864], "981": [212, 215, 228, 235, 238], "spawn": [212, 228, 235, 238, 253, 260, 270, 274, 291], "colord": [212, 228, 235, 238, 253, 260, 270, 274], "985": [212, 215, 228, 235, 238, 253, 260, 270, 274, 864], "rpcuser": [212, 228, 235, 238, 253, 260, 270, 274], "abrt": [212, 228, 235, 238, 253, 260, 270, 274, 811, 864], "flatpak": [212, 228, 235, 238, 253, 260, 270, 274, 277, 864], "979": [212, 215, 228, 235, 238], "helper": [212, 228, 232, 235, 238, 253, 260, 270, 274, 358, 552, 616, 664, 705, 767, 864, 1096, 1100], "983": [212, 215, 228, 235, 238, 253, 260, 270, 274, 864], "978": [212, 215, 228, 235, 238, 253, 260, 270, 274, 864], "vboxadd": [212, 228, 235, 238, 253, 260, 270, 274, 864], "tcpdump": [212, 228, 235, 238, 253, 260, 270, 274, 864], "mosquitto": [212, 216, 228, 235, 238, 253, 260, 270, 274, 1065, 1087], "974": [212, 215, 228, 235, 238], "broker": [212, 216, 228, 235, 238, 253, 260, 270, 274, 291, 811, 1065], "mappingproxi": [212, 228, 241], "229": [212, 215, 220, 222, 228, 232, 235, 253, 260, 270, 274, 280, 292], "230": [212, 215, 220, 222, 225, 228, 232, 235, 238, 253, 260, 270, 274, 280, 292], "231": [212, 215, 220, 222, 225, 228, 232, 235, 253, 260, 274, 280, 468, 469, 470, 482, 483, 484], "232": [212, 215, 220, 222, 225, 228, 232, 235, 238, 253, 274, 280], "233": [212, 215, 220, 222, 228, 232, 235, 238, 253, 260, 270, 274, 280], "inputlist": [212, 973], "ret": [212, 215, 220, 426, 664, 937, 973, 1018], "235": [212, 215, 220, 222, 225, 228, 232, 235, 238, 253, 260, 270, 274, 280, 292], "236": [212, 215, 220, 222, 225, 228, 232, 235, 238, 253, 274, 280, 292, 411], "237": [212, 215, 220, 222, 228, 232, 235, 238, 253, 270, 274, 280], "238": [212, 215, 220, 222, 225, 228, 232, 235, 238, 253, 260, 270, 274, 280, 292], "239": [212, 215, 220, 222, 228, 232, 235, 253, 260, 270, 274, 280, 292], "240": [212, 215, 220, 222, 225, 228, 232, 235, 238, 253, 270, 274, 280], "242": [212, 215, 220, 222, 225, 228, 235, 238, 253, 270, 274, 280, 292], "243": [212, 215, 220, 222, 228, 235, 238, 253, 270, 274, 280, 292], "244": [212, 215, 220, 222, 225, 228, 235, 238, 253, 274, 280, 292], "245": [212, 215, 220, 222, 235, 253, 270, 274, 280, 292], "247": [212, 215, 220, 222, 228, 232, 235, 253, 270, 274, 280], "248": [212, 215, 220, 222, 225, 232, 235, 253, 260, 270, 274, 280, 292], "249": [212, 215, 220, 222, 228, 232, 235, 238, 253, 260, 274, 280, 292], "250": [212, 215, 220, 222, 228, 232, 235, 238, 253, 260, 264, 270, 274, 280, 862], "251": [212, 215, 220, 222, 225, 228, 232, 235, 253, 260, 270, 274, 280, 292], "252": [212, 215, 220, 222, 225, 232, 235, 253, 260, 270, 274, 280, 292, 1084], "253": [212, 215, 220, 222, 225, 228, 235, 238, 253, 260, 274, 280], "256": [212, 215, 220, 222, 228, 235, 238, 253, 260, 270, 274, 280, 349, 557, 1073, 1084], "257": [212, 215, 220, 222, 225, 228, 232, 235, 238, 253, 260, 270, 274, 280], "258": [212, 215, 220, 222, 225, 228, 232, 235, 253, 260, 270, 274, 280], "0x7fda5444e6a0": 212, "259": [212, 215, 220, 222, 225, 228, 235, 253, 260, 270, 274, 280], "260": [212, 215, 220, 222, 225, 228, 235, 253, 260, 270, 274, 280, 292], "261": [212, 215, 220, 222, 228, 232, 238, 253, 260, 270, 274, 280], "262": [212, 215, 220, 222, 228, 238, 253, 260, 270, 274, 280, 292], "263": [212, 215, 220, 222, 228, 232, 235, 238, 253, 260, 270, 274, 280, 292], "264": [212, 215, 220, 222, 225, 228, 235, 238, 253, 260, 274, 280, 292], "265": [212, 215, 220, 222, 228, 235, 253, 260, 274, 280, 292], "266": [212, 215, 220, 222, 225, 228, 232, 238, 253, 274, 280], "267": [212, 215, 220, 222, 225, 228, 235, 238, 253, 260, 274, 280, 292], "268": [212, 215, 220, 222, 228, 235, 238, 253, 260, 274, 280], "269": [212, 215, 220, 222, 225, 228, 232, 235, 253, 260, 270, 274, 280, 949], "270": [212, 215, 220, 222, 228, 232, 235, 253, 260, 270, 274, 280, 292], "other_map": 212, "272": [212, 215, 220, 222, 225, 228, 232, 235, 253, 260, 270, 274, 280, 292], "273": [212, 215, 220, 222, 228, 232, 253, 260, 274, 280, 492, 510, 511, 512, 513, 515, 516, 983], "274": [212, 215, 220, 222, 225, 228, 232, 235, 253, 260, 270, 274, 280], "140575811316304": 212, "275": [212, 215, 220, 222, 228, 232, 235, 253, 260, 270, 274, 280, 292], "276": [212, 215, 220, 222, 225, 235, 253, 260, 270, 274, 280, 292], "277": [212, 215, 220, 222, 225, 228, 232, 235, 253, 270, 274, 280], "278": [212, 215, 220, 222, 228, 235, 253, 260, 274, 280, 292], "279": [212, 215, 220, 222, 225, 228, 232, 235, 253, 260, 274, 280, 292], "280": [212, 215, 220, 222, 225, 228, 232, 253, 260, 274, 280, 292, 948, 949], "140575692459008": 212, "282": [212, 215, 220, 222, 225, 228, 232, 235, 253, 260, 274, 280, 292], "283": [212, 215, 220, 222, 225, 228, 232, 235, 253, 274, 280], "284": [212, 215, 220, 222, 228, 232, 235, 253, 257, 280, 292], "elementwis": 212, "285": [212, 215, 220, 222, 225, 228, 253, 260, 274, 280, 292], "286": [212, 215, 220, 222, 225, 228, 232, 253, 274, 280, 292], "287": [212, 215, 220, 222, 225, 228, 232, 235, 253, 260, 280, 292], "140575692438848": 212, "288": [212, 215, 220, 222, 228, 232, 235, 253, 260, 274, 280, 292], "140575692448960": 212, "289": [212, 215, 220, 222, 228, 253, 260, 274, 280, 292], "290": [212, 215, 220, 222, 228, 253, 260, 274, 280], "292": [212, 215, 220, 228, 232, 253, 260, 270, 274], "293": [212, 215, 220, 222, 228, 253, 260, 270, 274, 280], "295": [212, 215, 220, 222, 228, 232, 253, 260, 270, 274], "296": [212, 215, 220, 222, 228, 253, 260, 270, 274, 280], "298": [212, 215, 220, 228, 232, 253, 260, 270, 274, 280], "deep": [212, 224, 292, 659, 664, 935], "301": [212, 215, 220, 225, 228, 232, 253, 260, 270, 274, 280, 292], "302": [212, 215, 222, 228, 232, 253, 260, 274, 280, 292, 1028], "deepcopi": [212, 222, 235, 260, 280, 292, 1011], "303": [212, 215, 222, 225, 228, 260, 274, 280, 292, 949], "304": [212, 215, 222, 225, 228, 232, 292], "305": [212, 215, 225, 228, 253, 270, 274, 280, 292], "314": [212, 215, 222, 225, 228, 253, 260, 270, 274, 280], "315": [212, 215, 228, 253, 274, 280], "rdr": [212, 213, 426, 449, 1079], "delimit": [212, 213, 228, 257, 258, 274, 573, 859, 999, 1079], "fund_nam": [212, 213, 1028], "fund_isin": [212, 213, 1028], "fund_tick": [212, 213, 1028], "as_of_d": [212, 213, 1028], "fund_in_univers": [212, 213, 1028], "fund_of_fund": [212, 213, 1028], "fund_holdings_count": [212, 213, 1028], "fund_holding_funds_count": [212, 213, 1028], "american": [212, 218, 625, 639, 726, 1028, 1084], "fund": [212, 1028], "balanc": [212, 216, 393, 1028], "us0240711020": [212, 1028], "abalx": [212, 1028], "20210103": [212, 1028], "084": [212, 1028], "dodg": [212, 1028], "cox": [212, 1028], "us2562011047": [212, 1028], "dodbx": [212, 1028], "410": [212, 215, 260, 274, 1028], "us2562191062": [212, 1028], "dodgx": [212, 1028], "franklin": [212, 1028], "incom": [212, 228, 291, 1028, 1087], "us3534963000": [212, 1028], "fkinx": [212, 1028], "america": [212, 1028], "us3998741066": [212, 1028], "agthx": [212, 1028], "price": [212, 232, 419, 442, 1028], "us7414791092": [212, 1028], "prgfx": [212, 1028], "fidel": [212, 1028], "puritan": [212, 1028], "us3163451079": [212, 1028], "fpurx": [212, 1028], "contrafund": [212, 1028], "us3160711095": [212, 1028], "fcntx": [212, 1028], "363": [212, 215, 260, 274, 292, 1028], "us77954m1053": [212, 1028], "prwcx": [212, 1028], "westburi": [212, 1028], "us6804141090": [212, 1028], "owlsx": [212, 1028], "us1401931035": [212, 1028], "caibx": [212, 1028], "582": [212, 215, 1028], "harbor": [212, 1028], "institut": [212, 213, 455, 470, 1028, 1098], "us4115115044": [212, 1028], "hacax": [212, 1028], "us77954q1067": [212, 1028], "trbcx": [212, 1028], "dreyfu": [212, 1028], "treasuri": [212, 1028], "cash": [212, 1028], "inst": [212, 1028], "us2619411083": [212, 1028], "dirxx": [212, 1028], "blackrock": [212, 1028], "us09251t5092": [212, 1028], "malox": [212, 1028], "us3163453059": [212, 1028], "flpsx": [212, 1028], "liquid": [212, 1028], "us09248u5517": [212, 1028], "tttxx": [212, 1028], "dfa": [212, 1028], "portfolio": [212, 232, 1028], "us2332038841": [212, 1028], "dfgbx": [212, 1028], "feder": [212, 1028], "herm": [212, 1028], "us60934n6821": [212, 1028], "utixx": [212, 1028], "oakmark": [212, 1028], "investor": [212, 232, 1028], "us4138382027": [212, 1028], "oakix": [212, 1028], "asset": [212, 1028], "us00767h4939": [212, 1028], "787": [212, 215, 1028], "fpa": [212, 1028], "crescent": [212, 1028], "us30254t7596": [212, 1028], "fpacx": [212, 1028], "us3534968058": [212, 1028], "fcisx": [212, 1028], "us5529836943": [212, 1028], "meiix": [212, 1028], "goldman": [212, 1028], "sach": [212, 1028, 1143], "instrument": [212, 417, 419, 877, 1028], "us38142b5003": [212, 1028], "ftixx": [212, 1028], "schwab": [212, 1028], "us8085098551": [212, 1028], "swppx": [212, 1028], "508": [212, 215, 260, 292, 1028], "templeton": [212, 1028], "bond": [212, 1028], "advisor": [212, 1028], "us8802084009": [212, 1028], "tgbax": [212, 1028], "us32008f6060": [212, 1028], "sgiix": [212, 1028], "ishar": [212, 1028], "etf": [212, 1028], "us4642872000": [212, 1028], "ivv": [212, 1028], "507": [212, 215, 292, 1028], "vanguard": [212, 1028], "admir": [212, 1028], "us9229087104": [212, 1028], "vfiax": [212, 1028], "510": [212, 215, 292, 1028], "us9229087286": [212, 1028], "vtsax": [212, 1028], "370": [212, 215, 260, 274, 1028], "spdr": [212, 1028], "midcap": [212, 1028], "us78467y1073": [212, 1028], "mdy": [212, 1028], "dow": [212, 1028], "jone": [212, 318, 319, 1028], "industri": [212, 773, 1028], "us78467x1090": [212, 1028], "health": [212, 1028], "us81369y2090": [212, 1028], "xlv": [212, 1028], "discretionari": [212, 1028], "us81369y4070": [212, 1028], "xly": [212, 1028], "energi": [212, 1028], "us81369y5069": [212, 1028], "xle": [212, 1028], "financi": [212, 1028], "us81369y6059": [212, 1028], "xlf": [212, 1028], "us81369y8030": [212, 1028], "xlk": [212, 1028], "invesco": [212, 1028], "qqq": [212, 1028], "us46090e1038": [212, 1028], "us2562061034": [212, 1028], "dodfx": [212, 1028], "msci": [212, 1028], "eaf": [212, 1028], "us4642874659": [212, 1028], "efa": [212, 1028], "897": [212, 215, 1028], "jpmorgan": [212, 1028], "sec": [212, 440, 931, 1028, 1100], "mny": [212, 1028], "mkt": [212, 1028], "us4812a28358": [212, 1028], "jtsxx": [212, 1028], "eql": [212, 1028], "wght": [212, 1028], "us46137v3574": [212, 1028], "us4812a03757": [212, 1028], "cjtxx": [212, 1028], "us00143w8753": [212, 1028], "odvyx": [212, 1028], "dividend": [212, 1028], "us78464a7634": [212, 1028], "sdy": [212, 1028], "equiti": [212, 1028], "us2332033719": [212, 1028], "dfiex": [212, 1028], "888": [212, 215, 1028], "edgewood": [212, 1028], "us0075w07594": [212, 1028], "egfix": [212, 1028], "prudenti": [212, 1028], "us00767h7585": [212, 1028], "r6": [212, 1028], "us55273h3536": [212, 1028], "meikx": [212, 1028], "327": [212, 215, 228, 253, 260, 270], "328": [212, 215, 222, 228, 260], "geschieht": [213, 335, 860], "wunder": 213, "groesser": 213, "jave": 213, "shorthand": [213, 350, 852, 984], "lin": 213, "lout": 213, "faster": [213, 232, 291, 402, 414, 935, 941], "outputlist": 213, "getus": [213, 1049], "userdatabas": [213, 1049], "userid": [213, 225], "groupid": 213, "loginshel": 213, "userrecord": 213, "dens": [213, 222, 232], "pratic": 213, "_fix_float_numb": 213, "fieldnam": [213, 1079], "_fix_bool": 213, "elif": [213, 220, 348, 385, 426, 990, 1005, 1006], "_fix_dat": 213, "read_stock": [213, 1028], "csvfile": [213, 983], "converted_record": 213, "csvname": [213, 258, 426], "dbname": [213, 1082], "stmt": 213, "predefin": [213, 905, 940, 945, 1098, 1118], "circuit": [214, 220, 230, 878, 1004, 1129, 1136], "windows_path": [215, 220], "festplatt": [215, 1139], "eue": [215, 292, 312], "lehrer": 215, "50923504": 215, "202107": 215, "140106795875920": 215, "140106669190640": 215, "669": [215, 232], "140106669191024": 215, "0j": 215, "copied_l": [215, 222], "140106669249856": 215, "copied_t": 215, "tuple_containing_one_el": 215, "tran": 215, "satan": [215, 225], "queen": [215, 235, 1060, 1062, 1066, 1068, 1079], "10000000000": [215, 270, 312], "prod": 215, "resultset_to_local_db": 215, "my_local_db": 215, "basenam": 215, "normalized_path": 215, "normpath": [215, 222, 978], "291": [215, 220, 228, 253, 270, 280, 292, 418], "294": [215, 220, 228, 253, 270, 274, 280], "297": [215, 220, 222, 228, 232, 274], "299": [215, 220, 225, 228, 232, 253, 260, 270, 274, 280], "306": [215, 225, 232, 253, 270, 274, 280, 292], "307": [215, 222, 228, 253, 270, 274, 280, 292], "309": [215, 222, 225, 228, 260, 270, 274, 280, 292], "310": [215, 222, 225, 228, 274, 280, 292, 363], "311": [215, 222, 253, 274, 280], "312": [215, 222, 228, 253, 260, 270, 280], "313": [215, 222, 228, 260, 274, 280], "316": [215, 222, 225, 228, 253, 274, 292], "317": [215, 222, 225, 253, 260, 270, 274, 292], "318": [215, 225, 228, 260, 274], "319": [215, 222, 225, 228, 253, 270, 274, 292], "321": [215, 225, 228, 260, 270, 274, 280, 292], "322": [215, 225, 228, 260, 280, 292], "323": [215, 222, 225, 228, 253, 274, 280, 292], "324": [215, 225, 228, 253, 270, 274, 280, 292, 501], "325": [215, 222, 228, 260, 270, 280], "326": [215, 222, 228, 253, 270, 280, 292], "329": [215, 228, 253, 260, 292], "331": [215, 222, 228, 253, 274], "335": [215, 222, 228, 260, 274], "336": [215, 222, 228, 274, 433], "337": [215, 228, 260, 274], "338": [215, 222, 260, 274], "339": [215, 222, 228, 274], "341": [215, 222, 228, 260, 274, 292], "342": [215, 222, 228, 260, 280], "343": [215, 228, 260, 274, 292], "346": [215, 228, 274, 292, 599, 600, 601, 602], "347": [215, 260, 274, 292], "348": [215, 228, 292], "349": [215, 228, 274, 292, 413], "351": [215, 222, 228, 274], "352": [215, 222, 228, 260, 274], "353": [215, 222, 228, 260, 274], "354": [215, 228, 274, 447], "355": [215, 260, 274], "356": [215, 235, 274, 292], "357": [215, 260, 274, 292], "359": [215, 274], "361": [215, 274, 292], "362": [215, 260, 274, 292], "364": [215, 274], "365": [215, 292], "366": [215, 260, 274], "367": [215, 274, 292], "368": [215, 274], "369": [215, 260, 274], "371": [215, 260], "373": [215, 222, 260, 292], "374": [215, 222, 274, 292], "375": [215, 222, 232, 260, 274, 292, 413], "376": [215, 260, 274, 292], "377": [215, 222, 260, 274, 292], "379": [215, 260, 274, 292], "380": [215, 260, 274, 292], "381": [215, 222, 260, 274], "382": [215, 260, 274, 292], "383": [215, 222, 260, 264, 292], "384": [215, 260, 274, 292], "385": [215, 260, 274, 292], "386": [215, 260, 274, 292], "387": 215, "388": [215, 260, 274, 292], "389": [215, 292], "390": [215, 274, 292], "391": [215, 260, 292], "392": [215, 260], "393": [215, 222, 260, 274, 292], "394": [215, 222, 260, 274, 292], "395": [215, 222, 260, 274, 292], "396": [215, 222, 260, 818], "397": [215, 222, 274, 292], "398": [215, 222, 274], "399": [215, 222, 274, 292], "401": [215, 222, 260, 274], "402": [215, 260, 292], "403": [215, 222, 274, 292], "405": [215, 274], "406": [215, 222, 260, 274, 292], "407": [215, 260, 274, 292], "408": [215, 222, 260, 274, 292], "409": [215, 222, 260, 274, 292], "411": [215, 222, 260, 274], "412": [215, 274], "413": [215, 222, 260, 274], "414": [215, 222, 260, 274, 292], "415": [215, 274, 292], "416": [215, 222, 260, 292], "417": [215, 222, 260, 274], "418": [215, 222, 260, 292], "419": [215, 222, 260, 274, 292], "420": [215, 222, 260, 274, 292], "421": [215, 222, 260, 274, 292], "422": [215, 222], "423": [215, 260, 274, 292], "424": [215, 222, 260, 274], "425": [215, 260], "426": [215, 292], "427": [215, 222, 260, 292], "428": [215, 222, 260, 292], "429": [215, 260, 292], "430": [215, 222, 260, 292], "431": [215, 260, 292], "432": [215, 222, 260, 292], "433": [215, 260, 292], "434": [215, 260], "435": 215, "436": [215, 260, 292], "437": [215, 222, 260, 292], "438": [215, 222, 292], "439": [215, 260], "440": [215, 222, 260], "441": [215, 222, 260], "442": [215, 222, 260], "443": [215, 222, 292], "444": [215, 222, 292], "445": [215, 222, 292], "446": [215, 260], "447": [215, 222, 260, 292], "448": [215, 260], "449": [215, 222], "451": [215, 222, 292], "452": [215, 222, 260], "453": [215, 222, 292], "454": [215, 222, 260], "455": [215, 222], "457": 215, "458": [215, 260], "459": 215, "460": [215, 260], "461": [215, 260], "462": [215, 260], "463": 215, "464": [215, 260], "465": [215, 260, 264], "466": [215, 260], "467": [215, 260], "468": [215, 260], "469": [215, 260, 702], "470": [215, 260], "471": [215, 260], "472": [215, 260], "473": 215, "474": [215, 260], "475": [215, 260], "476": [215, 260], "478": 215, "479": [215, 260], "480": [215, 260], "481": [215, 260], "482": [215, 260], "483": [215, 260], "484": 215, "485": 215, "486": [215, 260], "487": [215, 260], "488": [215, 260], "489": 215, "490": [215, 855], "491": 215, "492": 215, "494": [215, 260], "495": 215, "496": 215, "497": [215, 260], "498": [215, 260], "499": 215, "502": [215, 260], "503": 215, "504": [215, 260], "505": [215, 228, 260], "506": [215, 260], "509": [215, 292], "511": [215, 292], "514": 215, "515": [215, 260, 701], "516": [215, 260], "518": [215, 260], "519": 215, "520": [215, 260], "521": [215, 260], "522": 215, "523": 215, "524": [215, 260], "525": [215, 260], "526": 215, "527": 215, "528": 215, "529": 215, "530": 215, "531": [215, 260], "532": 215, "533": 215, "534": 215, "535": 215, "536": [215, 855], "538": 215, "539": 215, "540": 215, "541": 215, "542": 215, "543": 215, "544": 215, "545": 215, "546": 215, "547": 215, "548": [215, 264], "549": 215, "550": 215, "551": 215, "552": 215, "553": 215, "554": [215, 857], "555": 215, "556": 215, "557": 215, "558": 215, "559": 215, "560": 215, "561": 215, "562": 215, "563": 215, "564": 215, "565": 215, "566": 215, "567": 215, "568": 215, "569": 215, "570": 215, "571": 215, "572": 215, "573": 215, "574": 215, "575": 215, "576": 215, "577": 215, "578": 215, "579": 215, "580": 215, "581": 215, "583": 215, "584": 215, "585": 215, "586": 215, "587": 215, "588": 215, "589": 215, "590": 215, "591": 215, "592": 215, "593": 215, "594": 215, "595": 215, "596": [215, 961], "597": 215, "598": 215, "599": 215, "601": 215, "602": 215, "603": 215, "604": 215, "605": 215, "606": 215, "607": 215, "608": 215, "609": 215, "610": [215, 855], "611": 215, "612": [215, 818], "613": 215, "614": 215, "615": 215, "616": 215, "617": 215, "618": 215, "619": 215, "620": 215, "621": 215, "622": 215, "623": 215, "624": 215, "625": [215, 232], "626": 215, "627": 215, "628": 215, "629": 215, "630": 215, "631": 215, "632": 215, "633": 215, "634": 215, "635": 215, "636": 215, "637": 215, "638": 215, "639": 215, "640": [215, 552], "641": 215, "642": 215, "643": 215, "644": [215, 998], "645": 215, "646": 215, "647": 215, "648": 215, "649": 215, "650": 215, "651": 215, "652": 215, "653": 215, "654": 215, "655": 215, "656": 215, "657": 215, "658": 215, "659": 215, "660": 215, "661": 215, "662": 215, "663": 215, "665": 215, "668": [215, 1002], "670": 215, "671": 215, "672": 215, "673": 215, "674": 215, "675": 215, "676": 215, "677": 215, "678": 215, "679": 215, "680": 215, "681": 215, "682": [215, 855], "683": 215, "684": 215, "685": 215, "687": 215, "688": 215, "689": 215, "690": 215, "691": 215, "692": 215, "693": 215, "694": 215, "695": 215, "696": 215, "697": 215, "698": [215, 855, 895], "699": 215, "701": 215, "702": 215, "703": [215, 268, 269, 290], "704": 215, "705": 215, "706": 215, "707": 215, "708": [215, 228], "709": 215, "710": [215, 552], "711": 215, "712": 215, "713": 215, "715": [215, 626], "716": 215, "717": 215, "718": 215, "719": 215, "720": 215, "721": 215, "722": 215, "723": 215, "724": 215, "725": 215, "726": 215, "727": 215, "728": 215, "729": 215, "730": [215, 257], "731": 215, "732": 215, "733": 215, "734": 215, "735": 215, "736": 215, "737": 215, "738": 215, "739": 215, "740": 215, "741": 215, "742": 215, "743": 215, "744": 215, "745": 215, "746": [215, 949], "747": 215, "748": 215, "749": 215, "750": 215, "751": 215, "752": 215, "753": 215, "754": 215, "756": 215, "757": 215, "758": 215, "759": 215, "760": 215, "761": 215, "762": 215, "763": 215, "764": 215, "765": 215, "766": 215, "767": 215, "768": 215, "769": 215, "770": 215, "772": 215, "773": 215, "774": 215, "775": 215, "776": 215, "778": 215, "779": 215, "780": 215, "781": 215, "782": [215, 264], "783": 215, "784": 215, "785": 215, "786": 215, "788": 215, "789": [215, 222], "790": 215, "791": [215, 701], "792": 215, "793": 215, "794": 215, "795": 215, "796": 215, "797": 215, "798": 215, "801": [215, 257], "802": 215, "803": 215, "804": 215, "805": 215, "806": 215, "807": 215, "808": 215, "809": 215, "810": 215, "811": 215, "812": 215, "813": 215, "814": 215, "815": [215, 232], "816": [215, 238], "817": 215, "818": 215, "819": 215, "820": 215, "822": 215, "823": 215, "824": 215, "826": 215, "827": 215, "828": [215, 264], "829": 215, "830": 215, "831": 215, "832": 215, "833": 215, "834": 215, "835": 215, "836": 215, "837": 215, "838": 215, "839": 215, "840": 215, "841": 215, "842": 215, "843": 215, "844": 215, "845": 215, "846": 215, "847": 215, "848": 215, "849": 215, "850": 215, "851": 215, "852": 215, "853": 215, "854": 215, "855": 215, "856": 215, "857": 215, "858": 215, "859": 215, "860": 215, "861": 215, "862": 215, "863": 215, "864": 215, "865": 215, "866": 215, "867": 215, "868": 215, "870": 215, "871": 215, "872": 215, "873": 215, "874": [215, 449], "875": 215, "876": 215, "877": 215, "878": 215, "879": [215, 413], "880": 215, "881": 215, "882": 215, "883": 215, "884": 215, "885": 215, "886": 215, "887": 215, "889": 215, "890": 215, "891": 215, "892": 215, "893": 215, "894": 215, "895": 215, "896": 215, "898": 215, "899": 215, "901": 215, "902": [215, 855], "903": 215, "904": 215, "905": 215, "906": 215, "907": 215, "908": 215, "909": 215, "911": 215, "912": 215, "913": 215, "914": 215, "915": 215, "916": 215, "917": [215, 264], "918": 215, "919": 215, "920": 215, "921": 215, "922": 215, "923": 215, "924": 215, "925": 215, "926": 215, "927": 215, "928": 215, "929": 215, "930": 215, "931": 215, "932": 215, "933": 215, "934": 215, "935": 215, "936": 215, "937": 215, "938": 215, "939": 215, "940": 215, "941": 215, "942": 215, "943": 215, "944": 215, "945": 215, "946": 215, "947": 215, "948": 215, "949": 215, "950": 215, "951": 215, "952": 215, "953": 215, "954": 215, "955": 215, "956": 215, "957": 215, "958": 215, "959": 215, "960": 215, "961": 215, "962": 215, "963": 215, "964": 215, "965": [215, 1092, 1093], "966": [215, 1092, 1093], "967": [215, 1092, 1093], "968": [215, 1092, 1093], "969": [215, 1092, 1093], "970": 215, "971": 215, "972": 215, "973": 215, "975": 215, "976": [215, 253, 260, 270, 274], "977": [215, 253, 260, 270, 274, 864], "timeaxi": 215, "myrang": 215, "1002": [215, 599, 600, 601, 602, 818], "1004": 215, "1006": 215, "1008": 215, "1010": 215, "1012": 215, "1014": 215, "1016": 215, "1018": 215, "1020": [215, 800, 801, 808], "1022": 215, "1028": 215, "1030": 215, "1032": 215, "1034": 215, "1036": 215, "1038": 215, "1040": 215, "1042": [215, 935], "1046": 215, "1048": 215, "1050": 215, "1052": 215, "1054": 215, "1056": 215, "1058": 215, "1060": 215, "1062": 215, "1064": 215, "1066": 215, "1068": [215, 264], "1070": [215, 264], "1072": [215, 264], "1074": 215, "1076": 215, "1078": 215, "1080": 215, "1082": 215, "1084": 215, "1086": 215, "1088": 215, "1090": 215, "1092": 215, "1094": 215, "1096": 215, "1098": 215, "1102": 215, "1104": 215, "1106": 215, "1108": 215, "1110": 215, "1114": 215, "1116": 215, "1118": 215, "1120": 215, "1122": 215, "1124": 215, "1126": 215, "1128": 215, "1130": 215, "1132": 215, "1134": 215, "1136": 215, "1138": 215, "1140": 215, "1142": 215, "1144": 215, "1146": 215, "1148": 215, "1150": 215, "1152": [215, 1093], "1154": [215, 1093], "1156": 215, "1158": 215, "1160": 215, "1162": 215, "1164": 215, "1166": 215, "1168": 215, "1170": 215, "1172": 215, "1174": 215, "1176": 215, "1178": 215, "1180": 215, "1182": 215, "1184": 215, "1186": 215, "1188": 215, "1190": 215, "1192": 215, "1194": 215, "1196": 215, "1198": 215, "1202": [215, 1093], "1204": [215, 1093], "1206": 215, "1208": 215, "1210": 215, "1212": 215, "1214": 215, "1216": 215, "1218": 215, "1220": 215, "1222": 215, "1224": 215, "1226": 215, "1228": 215, "1230": 215, "1232": 215, "1236": 215, "1238": 215, "1240": 215, "1242": 215, "1246": 215, "1248": 215, "1250": 215, "1252": 215, "1254": [215, 468, 469, 470, 482, 483, 484], "1256": 215, "1258": 215, "1260": [215, 433], "1262": 215, "1264": 215, "1266": 215, "1268": 215, "1270": 215, "1272": 215, "1274": 215, "1276": 215, "1278": 215, "1280": 215, "1282": 215, "1284": 215, "1286": 215, "1288": 215, "1290": 215, "1292": 215, "1294": 215, "1296": 215, "1298": 215, "1300": 215, "1302": 215, "1304": 215, "1306": 215, "1308": 215, "1310": 215, "1312": 215, "1314": 215, "1316": 215, "1318": 215, "1320": 215, "1322": 215, "1324": 215, "1326": 215, "1328": 215, "1330": 215, "1332": 215, "1334": 215, "1336": 215, "1338": 215, "1340": 215, "1342": 215, "1344": 215, "1346": 215, "1348": 215, "1350": 215, "1352": [215, 905], "1354": 215, "1356": 215, "1358": 215, "1360": 215, "1362": 215, "1364": 215, "1366": 215, "1368": 215, "1370": 215, "1372": 215, "1374": 215, "1378": 215, "1380": 215, "1382": 215, "1384": 215, "1386": 215, "1388": 215, "1390": 215, "1392": [215, 449], "1394": 215, "1396": 215, "1398": 215, "1400": 215, "1402": 215, "1406": 215, "1408": 215, "1410": 215, "1412": 215, "1414": 215, "1416": [215, 1016], "1418": 215, "1420": 215, "1422": 215, "1424": 215, "1426": 215, "1428": 215, "1430": 215, "1432": 215, "1434": 215, "1436": 215, "1438": 215, "1440": 215, "1442": 215, "1444": 215, "1446": 215, "1448": 215, "1450": [215, 1092], "1452": [215, 1092], "1454": [215, 1092], "1456": 215, "1458": 215, "1460": 215, "1462": 215, "1464": 215, "1466": 215, "1468": 215, "1470": 215, "1472": 215, "1474": 215, "1476": 215, "1478": 215, "1480": 215, "1482": 215, "1484": 215, "1486": 215, "1488": 215, "1490": 215, "1492": 215, "1494": 215, "1496": 215, "1498": 215, "1502": 215, "1504": 215, "1506": 215, "1508": 215, "1510": 215, "1512": 215, "1514": 215, "1516": 215, "1518": [215, 1092], "1520": [215, 1092], "1522": [215, 1092], "1524": 215, "1526": 215, "1528": 215, "1530": 215, "1532": 215, "1534": 215, "1536": [215, 947], "1538": 215, "1540": 215, "1542": 215, "1544": 215, "1546": 215, "1548": 215, "1550": 215, "1552": 215, "1554": 215, "1556": 215, "1558": [215, 816], "1560": 215, "1562": 215, "1564": 215, "1566": 215, "1568": 215, "1570": 215, "1572": 215, "1574": 215, "1576": 215, "1578": 215, "1580": 215, "1582": 215, "1584": 215, "1586": 215, "1588": 215, "1590": 215, "1592": 215, "1594": 215, "1596": 215, "1598": 215, "1600": 215, "1602": 215, "1604": [215, 941], "1606": 215, "1608": 215, "1610": 215, "1612": 215, "1614": 215, "1616": 215, "1618": 215, "1620": 215, "1622": 215, "1624": 215, "1626": 215, "1628": 215, "1630": 215, "1632": 215, "1634": [215, 468, 469], "1636": 215, "1638": 215, "1640": 215, "1642": 215, "1644": 215, "1646": 215, "1648": 215, "1650": 215, "1652": 215, "1654": 215, "1656": 215, "1658": 215, "1660": 215, "1662": 215, "1664": 215, "1666": 215, "1668": 215, "1672": 215, "1674": 215, "1676": 215, "1678": 215, "1680": 215, "1682": 215, "1684": 215, "1686": 215, "1688": [215, 948, 949], "1690": 215, "1692": 215, "1694": 215, "1696": 215, "1698": 215, "1700": 215, "1702": 215, "1704": 215, "1706": [215, 959], "1708": 215, "1710": 215, "1712": 215, "1714": 215, "1716": 215, "1718": 215, "1722": 215, "1724": 215, "1726": 215, "1728": 215, "1730": 215, "1732": 215, "1734": 215, "1736": 215, "1738": 215, "1740": 215, "1742": 215, "1744": 215, "1746": 215, "1748": 215, "1750": 215, "1752": 215, "1754": 215, "1756": 215, "1758": 215, "1760": 215, "1762": 215, "1764": [215, 274], "1766": 215, "1768": 215, "1770": 215, "1772": 215, "1774": 215, "1776": 215, "1778": 215, "1780": 215, "1782": 215, "1784": 215, "1786": 215, "1788": 215, "1790": 215, "1792": 215, "1794": 215, "1796": 215, "1798": 215, "1800": [215, 947], "1802": 215, "1804": 215, "1806": 215, "1808": 215, "1810": 215, "1812": 215, "1814": 215, "1816": 215, "1818": 215, "1820": 215, "1822": 215, "1824": 215, "1826": 215, "1828": 215, "1830": 215, "1832": 215, "1834": 215, "1836": 215, "1838": 215, "1840": 215, "1842": 215, "1844": 215, "1846": 215, "1848": 215, "1850": 215, "1852": 215, "1854": 215, "1856": 215, "1858": 215, "1860": 215, "1862": 215, "1864": 215, "1866": 215, "1868": 215, "1870": 215, "1872": 215, "1874": 215, "1876": 215, "1878": 215, "1880": 215, "1882": 215, "1884": 215, "1886": 215, "1888": 215, "1890": 215, "1892": 215, "1894": 215, "1896": 215, "1898": 215, "1900": [215, 225, 1060, 1062, 1066, 1068], "1902": 215, "1904": 215, "1906": 215, "1908": 215, "1910": 215, "1912": 215, "1914": 215, "1916": 215, "1918": 215, "1920": 215, "1922": 215, "1924": 215, "1926": 215, "1928": 215, "1930": 215, "1932": 215, "1934": 215, "1938": 215, "1940": 215, "1942": 215, "1944": 215, "1946": 215, "1948": 215, "1950": 215, "1952": 215, "1954": [215, 1026], "1956": [215, 996], "1958": 215, "1962": 215, "1964": 215, "1968": [215, 378], "1970": [215, 717], "1972": 215, "1974": 215, "1976": 215, "1978": [215, 338], "1980": [215, 543, 947], "1984": 215, "1986": [215, 1060, 1062, 1066, 1068], "1988": [215, 338, 452], "1990": [215, 543], "1992": 215, "1994": 215, "2004": 215, "2024": 215, "2026": 215, "2028": 215, "2030": 215, "2032": 215, "2034": 215, "2036": 215, "2038": 215, "2040": 215, "2042": 215, "2044": 215, "2046": 215, "2050": 215, "2052": 215, "2054": 215, "2056": 215, "2058": 215, "2060": 215, "2062": 215, "2064": 215, "2066": 215, "2068": 215, "2070": 215, "2072": 215, "2074": 215, "2076": 215, "2078": 215, "2080": 215, "2082": 215, "2084": 215, "2086": 215, "2088": 215, "2090": 215, "2092": 215, "2094": 215, "2096": 215, "2098": 215, "2100": 215, "2102": 215, "2104": 215, "2106": 215, "2108": 215, "2110": 215, "2112": 215, "2114": 215, "2116": 215, "2118": 215, "2120": 215, "2122": 215, "2124": 215, "2126": 215, "2128": 215, "2130": 215, "2132": 215, "2134": 215, "2136": 215, "2138": 215, "2140": 215, "2142": 215, "2144": 215, "2146": 215, "2148": 215, "2150": 215, "2152": 215, "2154": 215, "2156": 215, "2158": 215, "2160": 215, "2162": 215, "2164": 215, "2166": 215, "2168": 215, "2170": 215, "2172": 215, "2174": 215, "2176": 215, "2178": 215, "2180": 215, "2182": 215, "2184": 215, "2186": 215, "2188": 215, "2190": 215, "2192": 215, "2194": 215, "2196": 215, "2198": 215, "2200": 215, "2202": 215, "2204": 215, "2206": 215, "2208": 215, "2210": 215, "2214": 215, "2216": 215, "2218": 215, "2220": 215, "2222": 215, "2224": 215, "2226": 215, "2228": 215, "2230": 215, "2232": 215, "2234": 215, "2236": 215, "2238": 215, "2240": 215, "2242": 215, "2244": 215, "2246": 215, "2248": 215, "2250": 215, "2252": 215, "2254": 215, "2256": 215, "2258": 215, "2260": 215, "2262": 215, "2264": 215, "2266": 215, "2268": 215, "2272": 215, "2274": 215, "2276": 215, "2278": 215, "2280": 215, "2282": 215, "2284": 215, "2286": 215, "2288": 215, "2290": 215, "2292": 215, "2294": 215, "2296": 215, "2298": 215, "2300": 215, "2302": 215, "2304": 215, "2306": 215, "2308": 215, "2310": 215, "2312": 215, "2314": 215, "2316": 215, "2318": 215, "2320": 215, "2322": 215, "2324": 215, "2326": 215, "2328": 215, "2330": 215, "2332": [215, 855], "2334": 215, "2336": 215, "2338": 215, "2340": 215, "2342": 215, "2344": 215, "2346": 215, "2348": 215, "2350": 215, "2352": 215, "2354": 215, "2356": 215, "2358": 215, "2360": 215, "2362": 215, "2364": 215, "2366": 215, "2368": 215, "2370": 215, "2372": 215, "2374": 215, "2376": 215, "2378": 215, "2380": 215, "2382": 215, "2384": 215, "2386": 215, "2388": 215, "2390": 215, "2392": 215, "2394": 215, "2396": 215, "2398": 215, "2400": 215, "2402": 215, "2404": 215, "2406": 215, "2408": 215, "2410": 215, "2412": 215, "2414": 215, "2416": 215, "2418": 215, "2420": 215, "2422": 215, "2424": 215, "2426": 215, "2428": 215, "2430": 215, "2432": 215, "2434": 215, "2436": 215, "2438": 215, "2440": 215, "2442": 215, "2444": 215, "2446": 215, "2448": 215, "2450": 215, "2452": 215, "2454": 215, "2456": 215, "2458": 215, "2460": [215, 692], "2462": 215, "2464": 215, "2466": 215, "2468": 215, "2470": 215, "2472": 215, "2474": 215, "2476": 215, "2478": 215, "2480": 215, "2482": 215, "2484": 215, "2486": 215, "2488": 215, "2490": 215, "2492": 215, "2494": 215, "2496": 215, "2498": 215, "2500": 215, "2502": 215, "2504": 215, "2506": 215, "2508": 215, "2510": 215, "2512": 215, "2514": 215, "2516": 215, "2518": 215, "2520": 215, "2522": 215, "2524": 215, "2526": 215, "2528": 215, "2530": 215, "2532": 215, "2534": 215, "2536": 215, "2538": 215, "2540": 215, "2542": 215, "2544": 215, "2546": 215, "2548": 215, "2550": 215, "2552": 215, "2554": 215, "2556": 215, "2558": 215, "2560": 215, "2562": 215, "2564": 215, "2566": 215, "2568": 215, "2570": 215, "2572": 215, "2574": 215, "2576": 215, "2578": 215, "2580": 215, "2582": 215, "2584": 215, "2586": 215, "2588": 215, "2590": 215, "2592": 215, "2594": 215, "2596": 215, "2598": 215, "2600": 215, "2602": 215, "2604": 215, "2606": 215, "2608": 215, "2610": 215, "2612": 215, "2614": 215, "2616": 215, "2618": 215, "2620": 215, "2622": 215, "2624": 215, "2626": 215, "2628": 215, "2630": 215, "2632": 215, "2634": 215, "2636": 215, "2638": 215, "2640": [215, 274], "2642": 215, "2644": 215, "2646": 215, "2648": 215, "2650": 215, "2652": 215, "2654": 215, "2656": 215, "2658": 215, "2660": 215, "2662": 215, "2664": 215, "2666": 215, "2668": 215, "2670": 215, "2672": 215, "2674": 215, "2676": 215, "2678": 215, "2680": 215, "2682": 215, "2684": 215, "2686": 215, "2688": 215, "2690": 215, "2692": 215, "2694": 215, "2696": 215, "2698": 215, "2700": 215, "2702": 215, "2704": 215, "2706": 215, "2708": 215, "2710": 215, "2712": 215, "2714": 215, "2716": 215, "2718": 215, "2720": 215, "2722": 215, "2724": 215, "2726": 215, "2728": 215, "2730": [215, 270], "2732": 215, "2734": 215, "2736": 215, "2738": 215, "2740": 215, "2742": 215, "2744": 215, "2746": [215, 855, 881, 905], "2748": [215, 235, 253, 260, 292], "2750": 215, "2752": 215, "2754": 215, "2756": 215, "2758": 215, "2760": 215, "2762": 215, "2764": 215, "2766": 215, "2768": 215, "2770": 215, "2772": 215, "2774": 215, "2776": 215, "2778": 215, "2780": 215, "2782": 215, "2784": 215, "2786": 215, "2788": 215, "2790": 215, "2792": 215, "2794": 215, "2796": 215, "2798": 215, "2800": [215, 258, 426], "2802": [215, 426], "2804": 215, "2806": 215, "2808": 215, "2810": 215, "2812": 215, "2814": 215, "2816": 215, "2818": 215, "2820": 215, "2822": 215, "2824": 215, "2826": 215, "2828": [215, 420], "2830": 215, "2832": 215, "2834": 215, "2836": 215, "2838": 215, "2840": 215, "2842": 215, "2844": 215, "2846": 215, "2848": 215, "2850": 215, "2852": 215, "2854": 215, "2856": 215, "2858": 215, "2860": 215, "2862": 215, "2864": 215, "2866": 215, "2868": 215, "2870": 215, "2872": 215, "2874": 215, "2876": 215, "2878": 215, "2880": 215, "2882": 215, "2884": 215, "2886": 215, "2888": 215, "2890": 215, "2892": 215, "2894": 215, "2896": 215, "2898": 215, "2900": 215, "2902": 215, "2904": 215, "2906": 215, "2910": 215, "2912": 215, "2914": 215, "2916": 215, "2918": 215, "2920": 215, "2922": 215, "2924": 215, "2926": 215, "2928": 215, "2930": 215, "2932": 215, "2934": 215, "2936": 215, "2938": 215, "2940": 215, "2942": 215, "2944": 215, "2946": 215, "2948": 215, "2950": 215, "2952": 215, "2954": 215, "2956": 215, "2958": 215, "2960": 215, "2962": 215, "2964": 215, "2966": 215, "2968": 215, "2970": 215, "2972": 215, "2974": 215, "2976": 215, "2978": 215, "2980": 215, "2982": 215, "2984": 215, "2986": 215, "2988": 215, "2990": 215, "2992": 215, "2994": 215, "2996": 215, "2998": 215, "3002": 215, "3004": 215, "3006": 215, "3008": 215, "3010": 215, "3012": 215, "3014": 215, "3016": 215, "3018": 215, "3020": 215, "3022": 215, "3024": 215, "3026": 215, "3028": 215, "3030": 215, "3032": 215, "3034": 215, "3036": 215, "3038": 215, "3040": 215, "3042": 215, "3044": 215, "3046": 215, "3048": 215, "3050": 215, "3052": 215, "3054": 215, "3056": 215, "3058": 215, "3060": 215, "3062": 215, "3064": 215, "3066": 215, "3068": 215, "3070": 215, "3072": 215, "3074": 215, "3076": 215, "3078": 215, "3080": 215, "3082": 215, "3084": 215, "3086": 215, "3088": 215, "3090": 215, "3092": 215, "3094": 215, "3096": 215, "3098": 215, "3100": 215, "3102": 215, "3104": 215, "3106": 215, "3108": 215, "3110": [215, 264], "3112": 215, "3114": 215, "3116": 215, "3118": 215, "3120": 215, "3122": 215, "3124": 215, "3126": 215, "3128": 215, "3130": 215, "3132": 215, "3134": 215, "3136": 215, "3138": 215, "3140": 215, "3142": 215, "3144": 215, "3146": 215, "3148": 215, "3150": 215, "3152": 215, "3154": 215, "3156": 215, "3158": 215, "3160": 215, "3162": 215, "3164": 215, "3166": 215, "3168": 215, "3170": 215, "3172": 215, "3174": 215, "3176": 215, "3178": 215, "3180": 215, "3182": 215, "3184": 215, "3186": 215, "3188": 215, "3190": 215, "3192": 215, "3194": 215, "3196": 215, "3198": 215, "3200": 215, "3202": 215, "3204": 215, "3206": 215, "3208": 215, "3210": 215, "3212": 215, "3214": 215, "3216": 215, "3218": 215, "3220": 215, "3222": 215, "3224": 215, "3226": 215, "3228": 215, "3230": 215, "3232": 215, "3234": 215, "3236": 215, "3238": 215, "3240": 215, "3242": 215, "3244": 215, "3246": 215, "3248": 215, "3250": 215, "3252": 215, "3254": 215, "3256": 215, "3258": 215, "3260": 215, "3262": 215, "3264": 215, "3266": 215, "3268": 215, "3270": 215, "3272": 215, "3274": 215, "3276": 215, "3278": 215, "3280": 215, "3282": 215, "3284": 215, "3286": 215, "3288": 215, "3290": 215, "3292": 215, "3294": 215, "3296": 215, "3298": 215, "3300": 215, "3302": 215, "3304": 215, "3306": 215, "3308": 215, "3310": 215, "3312": 215, "3314": 215, "3316": 215, "3318": 215, "3320": 215, "3322": 215, "3324": 215, "3326": 215, "3328": 215, "3330": 215, "3332": 215, "3334": 215, "3336": 215, "3338": 215, "3340": 215, "3342": 215, "3344": 215, "3346": 215, "3348": 215, "3350": 215, "3352": 215, "3354": 215, "3356": 215, "3358": 215, "3360": 215, "3362": 215, "3364": 215, "3366": 215, "3368": 215, "3370": 215, "3372": 215, "3374": 215, "3376": 215, "3378": 215, "3380": 215, "3382": 215, "3384": 215, "3386": 215, "3388": 215, "3390": 215, "3392": 215, "3394": 215, "3396": 215, "3398": 215, "3400": 215, "3402": 215, "3404": 215, "3406": 215, "3408": 215, "3410": 215, "3412": 215, "3414": 215, "3416": 215, "3418": 215, "3420": 215, "3422": 215, "3424": 215, "3426": 215, "3428": 215, "3430": 215, "3432": 215, "3434": 215, "3436": 215, "3438": 215, "3440": 215, "3442": 215, "3444": 215, "3446": 215, "3448": 215, "3450": 215, "3452": 215, "3454": 215, "3456": 215, "3458": 215, "3460": 215, "3462": 215, "3464": 215, "3466": 215, "3468": 215, "3470": 215, "3472": 215, "3474": 215, "3476": 215, "3478": 215, "3480": 215, "3482": 215, "3484": 215, "3486": 215, "3488": 215, "3490": 215, "3492": 215, "3494": 215, "3496": 215, "3498": 215, "3500": 215, "3502": 215, "3504": 215, "3506": 215, "3508": 215, "3510": 215, "3512": 215, "3514": 215, "3516": 215, "3518": 215, "3520": 215, "3522": 215, "3524": 215, "3526": 215, "3528": 215, "3530": 215, "3532": 215, "3534": 215, "3536": 215, "3538": 215, "3540": 215, "3542": 215, "3544": 215, "3546": 215, "3548": 215, "3550": 215, "3552": 215, "3554": 215, "3556": 215, "3558": 215, "3560": 215, "3562": 215, "3564": 215, "3566": 215, "3568": 215, "3570": 215, "3572": 215, "3574": 215, "3576": 215, "3578": 215, "3580": 215, "3582": 215, "3584": 215, "3586": 215, "3588": 215, "3590": 215, "3592": 215, "3594": 215, "3596": 215, "3598": 215, "3602": 215, "3604": 215, "3606": 215, "3608": 215, "3610": 215, "3612": 215, "3614": 215, "3616": 215, "3618": 215, "3620": [215, 1093], "3622": [215, 1093], "3624": [215, 1093], "3626": 215, "3628": 215, "3630": 215, "3632": 215, "3634": 215, "3636": 215, "3638": 215, "3640": 215, "3642": 215, "3644": 215, "3646": 215, "3648": 215, "3650": 215, "3652": 215, "3654": 215, "3656": 215, "3658": 215, "3660": 215, "3662": 215, "3664": 215, "3666": 215, "3668": 215, "3670": 215, "3672": 215, "3674": 215, "3676": 215, "3678": 215, "3680": 215, "3682": 215, "3684": 215, "3686": 215, "3688": 215, "3690": 215, "3692": 215, "3694": 215, "3696": 215, "3698": 215, "3700": 215, "3702": 215, "3704": 215, "3706": 215, "3708": 215, "3710": 215, "3712": 215, "3714": 215, "3716": 215, "3718": 215, "3720": 215, "3722": [215, 902], "3724": 215, "3726": 215, "3728": 215, "3730": 215, "3732": 215, "3734": 215, "3736": 215, "3738": 215, "3740": 215, "3742": 215, "3744": 215, "3746": 215, "3748": 215, "3750": 215, "3752": 215, "3754": 215, "3756": 215, "3758": 215, "3760": 215, "3762": 215, "3764": 215, "3766": 215, "3768": 215, "3770": [215, 264], "3772": 215, "3774": 215, "3776": 215, "3778": 215, "3780": 215, "3782": 215, "3784": 215, "3786": 215, "3788": 215, "3790": 215, "3792": 215, "3794": 215, "3796": 215, "3798": 215, "3800": 215, "3802": 215, "3804": 215, "3806": 215, "3808": 215, "3810": 215, "3812": 215, "3814": 215, "3816": 215, "3818": 215, "3820": 215, "3822": 215, "3824": 215, "3826": 215, "3828": 215, "3830": 215, "3832": 215, "3834": 215, "3836": 215, "3838": 215, "3840": 215, "3842": 215, "3844": 215, "3846": 215, "3848": 215, "3850": 215, "3852": 215, "3854": 215, "3856": 215, "3858": 215, "3860": 215, "3862": 215, "3864": 215, "3866": 215, "3868": 215, "3870": 215, "3872": 215, "3874": [215, 1093], "3876": [215, 1093], "3878": [215, 1093], "3880": 215, "3882": 215, "3884": 215, "3886": 215, "3888": 215, "3890": 215, "3892": 215, "3894": 215, "3896": 215, "3898": 215, "3900": 215, "3902": 215, "3904": 215, "3906": 215, "3908": 215, "3910": 215, "3912": 215, "3914": 215, "3916": 215, "3918": 215, "3920": 215, "3922": 215, "3924": 215, "3926": 215, "3928": 215, "3930": 215, "3932": 215, "3934": 215, "3936": 215, "3938": 215, "3940": 215, "3942": 215, "3946": 215, "3948": 215, "3950": 215, "3952": 215, "3954": 215, "3956": 215, "3958": 215, "3960": 215, "3962": 215, "3964": 215, "3966": 215, "3968": 215, "3970": 215, "3972": 215, "3974": 215, "3976": 215, "3978": 215, "3980": 215, "3982": 215, "3984": 215, "3986": 215, "3988": 215, "3990": 215, "3992": 215, "3994": 215, "3996": 215, "3998": 215, "4002": 215, "4004": 215, "4006": 215, "4008": 215, "4010": 215, "4012": 215, "4014": 215, "4016": 215, "4018": 215, "4020": 215, "4022": 215, "4024": 215, "4026": 215, "4028": 215, "4030": 215, "4032": 215, "4034": 215, "4036": 215, "4038": 215, "4040": 215, "4042": 215, "4044": 215, "4046": 215, "4048": 215, "4050": 215, "4052": 215, "4054": 215, "4056": 215, "4058": 215, "4060": 215, "4062": 215, "4064": 215, "4066": 215, "4068": 215, "4070": 215, "4072": 215, "4074": 215, "4076": 215, "4078": 215, "4080": 215, "4082": 215, "4084": 215, "4086": 215, "4088": 215, "4090": 215, "4092": 215, "4094": 215, "4098": 215, "4100": 215, "4102": 215, "4104": 215, "4106": 215, "4108": 215, "4110": 215, "4112": 215, "4114": 215, "4116": 215, "4118": 215, "4120": 215, "4122": 215, "4124": 215, "4126": 215, "4128": 215, "4130": 215, "4132": 215, "4134": 215, "4136": 215, "4138": 215, "4140": 215, "4142": 215, "4144": 215, "4146": 215, "4148": 215, "4150": 215, "4152": 215, "4154": 215, "4156": 215, "4158": 215, "4160": 215, "4162": 215, "4164": 215, "4166": 215, "4168": 215, "4170": 215, "4172": 215, "4174": 215, "4176": 215, "4178": 215, "4180": 215, "4182": 215, "4184": 215, "4186": 215, "4188": 215, "4190": 215, "4192": 215, "4194": 215, "4196": 215, "4198": 215, "4200": 215, "4202": 215, "4204": 215, "4206": 215, "4208": 215, "4210": 215, "4212": 215, "4214": 215, "4216": 215, "4218": 215, "4220": 215, "4222": 215, "4224": 215, "4226": 215, "4228": 215, "4230": 215, "4232": 215, "4234": 215, "4236": 215, "4238": 215, "4240": 215, "4242": 215, "4244": 215, "4246": 215, "4248": 215, "4250": 215, "4252": 215, "4254": 215, "4256": 215, "4258": 215, "4260": 215, "4262": 215, "4264": 215, "4266": 215, "4268": 215, "4270": 215, "4272": 215, "4274": 215, "4276": 215, "4278": 215, "4280": 215, "4282": 215, "4284": 215, "4286": 215, "4288": 215, "4290": 215, "4292": 215, "4294": 215, "4296": 215, "4298": 215, "4300": 215, "4302": 215, "4304": 215, "4306": 215, "4308": 215, "4310": 215, "4312": 215, "4314": 215, "4316": 215, "4318": 215, "4320": 215, "4322": 215, "4324": 215, "4326": 215, "4328": [215, 971], "4330": 215, "4332": 215, "4334": 215, "4336": 215, "4338": 215, "4340": 215, "4342": 215, "4344": 215, "4346": 215, "4348": 215, "4350": 215, "4352": 215, "4354": 215, "4356": 215, "4358": 215, "4360": 215, "4362": 215, "4364": 215, "4366": 215, "4368": 215, "4370": 215, "4372": 215, "4374": 215, "4376": 215, "4378": 215, "4380": 215, "4382": 215, "4384": 215, "4386": 215, "4388": 215, "4390": 215, "4392": 215, "4394": 215, "4396": 215, "4398": 215, "4400": 215, "4402": 215, "4404": 215, "4406": 215, "4408": 215, "4410": 215, "4412": 215, "4414": 215, "4416": 215, "4418": 215, "4420": 215, "4422": 215, "4424": 215, "4426": 215, "4428": 215, "4430": 215, "4432": 215, "4434": 215, "4436": 215, "4438": 215, "4440": 215, "4442": 215, "4444": 215, "4446": 215, "4448": 215, "4450": 215, "4452": 215, "4454": 215, "4456": 215, "4458": 215, "4460": 215, "4462": 215, "4464": 215, "4466": 215, "4468": 215, "4470": 215, "4472": 215, "4474": 215, "4476": 215, "4478": 215, "4480": 215, "4482": 215, "4484": 215, "4486": 215, "4488": 215, "4490": 215, "4492": 215, "4494": 215, "4496": 215, "4498": 215, "4502": 215, "4504": 215, "4506": 215, "4508": 215, "4510": 215, "4512": 215, "4514": 215, "4516": 215, "4518": 215, "4520": 215, "4522": 215, "4524": 215, "4526": 215, "4528": 215, "4530": 215, "4532": 215, "4534": 215, "4536": 215, "4538": 215, "4540": 215, "4542": 215, "4544": 215, "4546": 215, "4548": 215, "4550": 215, "4552": 215, "4554": 215, "4556": 215, "4558": 215, "4560": 215, "4562": 215, "4564": 215, "4566": 215, "4568": 215, "4570": 215, "4572": 215, "4574": 215, "4578": 215, "4580": 215, "4582": 215, "4584": 215, "4586": 215, "4588": 215, "4590": 215, "4592": 215, "4594": 215, "4596": 215, "4598": 215, "4600": 215, "4602": 215, "4604": 215, "4606": 215, "4608": 215, "4610": 215, "4612": 215, "4614": 215, "4616": 215, "4618": 215, "4620": 215, "4622": 215, "4624": 215, "4626": 215, "4628": [215, 228], "4630": [215, 420], "4632": 215, "4634": 215, "4636": 215, "4638": 215, "4640": 215, "4642": 215, "4644": 215, "4646": 215, "4648": 215, "4650": 215, "4652": 215, "4654": 215, "4656": 215, "4658": 215, "4662": 215, "4664": 215, "4666": 215, "4668": 215, "4670": 215, "4672": 215, "4674": 215, "4676": 215, "4680": 215, "4682": 215, "4684": 215, "4686": 215, "4688": 215, "4690": 215, "4692": 215, "4694": 215, "4696": 215, "4698": 215, "4700": 215, "4702": 215, "4704": 215, "4706": 215, "4708": 215, "4710": 215, "4712": 215, "4714": 215, "4716": 215, "4718": 215, "4720": 215, "4722": 215, "4724": 215, "4726": 215, "4728": 215, "4730": 215, "4732": 215, "4734": 215, "4736": 215, "4738": 215, "4740": 215, "4742": 215, "4744": 215, "4746": 215, "4748": 215, "4750": 215, "4752": 215, "4754": 215, "4756": 215, "4758": 215, "4760": 215, "4762": 215, "4764": 215, "4766": 215, "4768": 215, "4770": 215, "4772": 215, "4774": 215, "4776": 215, "4778": 215, "4780": 215, "4782": 215, "4784": 215, "4786": 215, "4788": 215, "4790": 215, "4792": 215, "4794": 215, "4796": 215, "4798": 215, "4802": 215, "4804": 215, "4806": 215, "4808": 215, "4810": 215, "4812": 215, "4814": 215, "4816": 215, "4818": 215, "4820": 215, "4822": 215, "4824": 215, "4826": 215, "4828": 215, "4830": 215, "4832": 215, "4834": 215, "4836": 215, "4838": 215, "4840": 215, "4842": 215, "4844": 215, "4846": 215, "4848": 215, "4850": 215, "4852": 215, "4854": 215, "4856": 215, "4858": 215, "4860": 215, "4862": 215, "4864": 215, "4866": [215, 225], "4868": 215, "4870": 215, "4872": 215, "4874": 215, "4876": 215, "4878": 215, "4880": 215, "4882": [215, 818], "4884": 215, "4886": 215, "4888": 215, "4890": 215, "4892": 215, "4894": 215, "4896": 215, "4898": 215, "4900": 215, "4902": 215, "4904": 215, "4906": 215, "4908": 215, "4910": 215, "4912": 215, "4914": 215, "4916": 215, "4918": 215, "4920": 215, "4922": 215, "4924": 215, "4926": [215, 228], "4928": 215, "4930": 215, "4932": 215, "4934": 215, "4936": 215, "4938": 215, "4940": 215, "4942": 215, "4944": 215, "4946": 215, "4948": 215, "4950": [215, 232], "4952": 215, "4954": 215, "4956": 215, "4958": 215, "4960": 215, "4962": 215, "4964": 215, "4966": 215, "4968": 215, "4970": 215, "4972": 215, "4974": 215, "4976": 215, "4978": 215, "4980": 215, "4982": 215, "4984": 215, "4986": 215, "4988": 215, "4990": 215, "4992": 215, "4994": 215, "4996": 215, "4998": 215, "5002": 215, "5004": 215, "5006": 215, "5008": 215, "5010": 215, "5012": 215, "5014": 215, "5016": 215, "5018": 215, "5020": 215, "5022": 215, "5024": 215, "5026": 215, "5028": 215, "5030": 215, "5032": 215, "5034": 215, "5036": 215, "5038": 215, "5040": 215, "5042": 215, "5044": 215, "5046": 215, "5048": 215, "5052": 215, "5054": 215, "5056": 215, "5058": 215, "5060": 215, "5062": 215, "5064": 215, "5066": 215, "5068": 215, "5070": 215, "5072": 215, "5074": 215, "5076": 215, "5078": 215, "5080": [215, 855], "5082": 215, "5084": 215, "5086": 215, "5088": 215, "5090": 215, "5092": 215, "5094": 215, "5096": 215, "5098": 215, "5100": 215, "5102": 215, "5104": 215, "5106": 215, "5108": 215, "5110": 215, "5112": 215, "5114": 215, "5116": 215, "5118": 215, "5120": 215, "5122": 215, "5124": 215, "5126": 215, "5128": 215, "5130": 215, "5132": 215, "5134": 215, "5136": 215, "5138": 215, "5140": 215, "5142": 215, "5144": 215, "5146": 215, "5148": 215, "5150": 215, "5152": 215, "5154": 215, "5156": 215, "5158": 215, "5160": 215, "5162": 215, "5164": 215, "5166": 215, "5168": 215, "5170": 215, "5172": 215, "5174": 215, "5176": 215, "5178": 215, "5180": 215, "5182": 215, "5184": 215, "5186": 215, "5188": 215, "5190": 215, "5192": 215, "5194": 215, "5196": 215, "5198": 215, "5200": 215, "5202": 215, "5204": 215, "5206": 215, "5208": 215, "5210": 215, "5212": 215, "5214": 215, "5216": 215, "5218": 215, "5220": 215, "5222": 215, "5224": 215, "5226": 215, "5228": 215, "5230": 215, "5232": 215, "5234": 215, "5236": 215, "5238": 215, "5240": 215, "5242": 215, "5244": 215, "5246": 215, "5248": 215, "5250": 215, "5252": 215, "5254": 215, "5256": 215, "5258": 215, "5260": 215, "5262": 215, "5264": 215, "5266": 215, "5268": 215, "5270": 215, "5272": 215, "5274": 215, "5276": 215, "5278": 215, "5280": 215, "5282": 215, "5284": 215, "5286": 215, "5288": 215, "5290": 215, "5292": 215, "5294": 215, "5296": 215, "5298": 215, "5300": 215, "5302": 215, "5304": 215, "5306": 215, "5308": 215, "5310": 215, "5312": 215, "5314": 215, "5316": 215, "5318": 215, "5320": 215, "5322": 215, "5324": 215, "5326": 215, "5328": 215, "5330": 215, "5332": 215, "5334": 215, "5336": 215, "5338": 215, "5340": 215, "5342": 215, "5344": 215, "5346": 215, "5348": 215, "5350": 215, "5352": 215, "5354": 215, "5356": 215, "5358": 215, "5360": 215, "5362": [215, 258, 426], "5364": 215, "5366": 215, "5368": 215, "5370": 215, "5372": 215, "5374": 215, "5376": 215, "5378": 215, "5380": 215, "5382": 215, "5384": 215, "5386": 215, "5388": 215, "5390": 215, "5392": 215, "5394": 215, "5396": 215, "5398": 215, "5400": 215, "5402": 215, "5404": 215, "5406": 215, "5408": 215, "5410": [215, 420], "5412": 215, "5414": 215, "5416": 215, "5418": 215, "5420": 215, "5422": 215, "5424": 215, "5426": 215, "5428": 215, "5430": 215, "5432": 215, "5434": 215, "5436": 215, "5438": 215, "5440": 215, "5442": 215, "5444": 215, "5446": 215, "5448": 215, "5450": 215, "5452": 215, "5454": 215, "5456": 215, "5458": 215, "5460": 215, "5462": 215, "5464": 215, "5466": 215, "5468": 215, "5470": 215, "5472": 215, "5474": 215, "5476": 215, "5478": 215, "5480": 215, "5482": 215, "5484": 215, "5486": 215, "5488": 215, "5490": 215, "5492": 215, "5494": 215, "5496": 215, "5498": 215, "5500": 215, "5502": 215, "5504": 215, "5506": 215, "5508": 215, "5510": 215, "5512": 215, "5514": 215, "5516": 215, "5518": 215, "5520": 215, "5522": 215, "5524": 215, "5526": 215, "5528": 215, "5530": 215, "5532": 215, "5534": 215, "5536": 215, "5538": 215, "5540": 215, "5542": 215, "5544": 215, "5546": 215, "5548": 215, "5550": 215, "5552": 215, "5554": 215, "5556": 215, "5558": 215, "5560": 215, "5562": 215, "5564": 215, "5566": 215, "5568": 215, "5570": 215, "5572": 215, "5574": 215, "5576": 215, "5578": 215, "5580": 215, "5582": 215, "5584": 215, "5586": 215, "5588": 215, "5590": 215, "5592": 215, "5594": 215, "5596": 215, "5598": 215, "5600": 215, "5602": 215, "5604": 215, "5606": 215, "5608": 215, "5610": 215, "5612": 215, "5614": 215, "5616": 215, "5618": 215, "5620": 215, "5622": 215, "5624": 215, "5626": 215, "5628": 215, "5630": 215, "5632": 215, "5634": 215, "5636": 215, "5638": 215, "5640": 215, "5642": 215, "5644": 215, "5646": 215, "5648": 215, "5650": 215, "5652": 215, "5654": 215, "5656": 215, "5658": 215, "5660": 215, "5662": 215, "5664": 215, "5666": 215, "5668": 215, "5670": 215, "5672": 215, "5674": 215, "5676": 215, "5678": [215, 888], "5680": 215, "5682": 215, "5684": 215, "5686": 215, "5688": 215, "5690": 215, "5692": 215, "5694": 215, "5696": 215, "5698": 215, "5700": 215, "5702": 215, "5704": 215, "5706": 215, "5708": 215, "5710": 215, "5712": 215, "5714": 215, "5716": 215, "5718": 215, "5720": 215, "5722": 215, "5724": 215, "5726": 215, "5728": 215, "5730": 215, "5732": 215, "5734": 215, "5736": 215, "5738": 215, "5740": 215, "5742": 215, "5744": 215, "5746": 215, "5748": 215, "5750": 215, "5752": 215, "5754": 215, "5756": 215, "5758": 215, "5760": 215, "5762": 215, "5764": 215, "5766": 215, "5768": 215, "5770": 215, "5772": 215, "5774": 215, "5776": 215, "5778": 215, "5780": 215, "5782": 215, "5784": 215, "5786": 215, "5788": 215, "5790": 215, "5792": 215, "5794": 215, "5796": 215, "5798": 215, "5800": 215, "5802": 215, "5804": 215, "5806": 215, "5808": 215, "5810": 215, "5812": 215, "5814": 215, "5816": 215, "5818": 215, "5820": 215, "5822": 215, "5824": 215, "5826": 215, "5828": 215, "5830": 215, "5832": [215, 225], "5834": 215, "5836": 215, "5838": 215, "5840": 215, "5842": 215, "5844": 215, "5846": 215, "5848": 215, "5850": 215, "5852": 215, "5854": 215, "5856": 215, "5858": 215, "5860": 215, "5862": 215, "5864": 215, "5866": 215, "5868": 215, "5870": 215, "5872": 215, "5874": 215, "5876": 215, "5878": 215, "5880": 215, "5882": 215, "5884": 215, "5886": 215, "5888": 215, "5890": 215, "5892": 215, "5894": 215, "5896": 215, "5898": 215, "5900": 215, "5902": 215, "5904": 215, "5906": 215, "5908": 215, "5910": 215, "5912": 215, "5914": 215, "5916": 215, "5918": 215, "5920": 215, "5922": 215, "5924": 215, "5926": 215, "5928": 215, "5930": 215, "5932": 215, "5934": 215, "5936": 215, "5938": 215, "5940": 215, "5942": 215, "5944": 215, "5946": 215, "5948": 215, "5950": 215, "5952": 215, "5954": 215, "5956": 215, "5958": 215, "5960": 215, "5962": 215, "5964": 215, "5966": 215, "5968": 215, "5970": 215, "5972": 215, "5974": 215, "5976": 215, "5978": 215, "5980": 215, "5982": 215, "5984": 215, "5986": 215, "5988": 215, "5990": 215, "5992": 215, "5994": 215, "5996": 215, "5998": 215, "6000": [215, 987], "6002": 215, "6004": 215, "6006": 215, "6008": 215, "6010": 215, "6012": 215, "6014": 215, "6016": 215, "6018": 215, "6020": 215, "6022": 215, "6024": 215, "6026": 215, "6028": 215, "6030": 215, "6032": 215, "6034": 215, "6036": 215, "6038": 215, "6040": 215, "6042": 215, "6044": 215, "6046": 215, "6048": 215, "6050": 215, "6052": 215, "6054": 215, "6056": 215, "6058": 215, "6060": 215, "6062": 215, "6064": 215, "6066": 215, "6068": 215, "6070": 215, "6072": 215, "6074": 215, "6076": 215, "6078": 215, "6080": 215, "6082": 215, "6084": 215, "6086": 215, "6088": 215, "6090": 215, "6092": 215, "6094": 215, "6096": 215, "6098": 215, "6100": 215, "6102": 215, "6104": 215, "6106": 215, "6108": 215, "6110": 215, "6112": 215, "6114": 215, "6116": 215, "6118": 215, "6120": 215, "6122": 215, "6124": 215, "6126": 215, "6128": 215, "6130": 215, "6132": 215, "6134": 215, "6136": 215, "6138": 215, "6140": 215, "6142": 215, "6144": 215, "6146": 215, "6148": 215, "6150": 215, "6152": 215, "6154": 215, "6156": 215, "6158": 215, "6160": 215, "6162": 215, "6164": 215, "6166": 215, "6168": 215, "6170": 215, "6172": 215, "6174": 215, "6176": 215, "6178": 215, "6180": 215, "6182": 215, "6184": 215, "6186": 215, "6188": 215, "6190": 215, "6192": 215, "6194": 215, "6196": 215, "6198": 215, "6200": 215, "6202": 215, "6204": 215, "6206": 215, "6208": 215, "6210": 215, "6212": 215, "6214": 215, "6216": 215, "6218": 215, "6220": 215, "6222": 215, "6224": 215, "6226": 215, "6228": 215, "6230": 215, "6232": 215, "6234": 215, "6236": 215, "6238": 215, "6240": 215, "6242": 215, "6244": 215, "6246": 215, "6248": 215, "6250": 215, "6252": 215, "6254": 215, "6256": 215, "6258": 215, "6260": 215, "6262": 215, "6264": 215, "6266": 215, "6268": 215, "6270": 215, "6272": 215, "6274": 215, "6276": 215, "6278": 215, "6280": 215, "6282": 215, "6284": 215, "6286": 215, "6288": 215, "6290": 215, "6292": 215, "6294": 215, "6296": 215, "6298": 215, "6300": 215, "6302": 215, "6304": 215, "6306": 215, "6308": 215, "6310": 215, "6312": 215, "6314": 215, "6316": 215, "6318": 215, "6320": 215, "6322": 215, "6324": 215, "6326": 215, "6328": 215, "6330": 215, "6332": 215, "6334": 215, "6336": 215, "6338": 215, "6340": 215, "6342": 215, "6344": 215, "6346": 215, "6348": 215, "6350": 215, "6352": 215, "6354": 215, "6356": 215, "6358": 215, "6360": 215, "6362": 215, "6364": 215, "6366": 215, "6368": 215, "6370": 215, "6372": 215, "6374": 215, "6376": 215, "6378": 215, "6380": 215, "6382": 215, "6384": 215, "6386": 215, "6388": 215, "6390": 215, "6392": 215, "6394": 215, "6396": 215, "6398": 215, "6400": 215, "6402": 215, "6404": 215, "6406": 215, "6408": 215, "6410": 215, "6412": 215, "6414": 215, "6416": 215, "6418": 215, "6420": 215, "6422": 215, "6424": 215, "6426": 215, "6428": 215, "6430": 215, "6432": 215, "6434": 215, "6436": 215, "6438": 215, "6440": 215, "6442": 215, "6444": 215, "6446": 215, "6448": 215, "6450": 215, "6452": 215, "6454": 215, "6456": 215, "6458": 215, "6460": 215, "6462": 215, "6464": 215, "6466": 215, "6468": 215, "6470": 215, "6472": 215, "6474": 215, "6476": 215, "6478": 215, "6480": 215, "6482": 215, "6484": 215, "6486": 215, "6488": 215, "6490": 215, "6492": 215, "6494": 215, "6496": 215, "6498": 215, "6500": 215, "6502": 215, "6504": 215, "6506": 215, "6508": 215, "6510": 215, "6512": 215, "6514": 215, "6516": 215, "6518": 215, "6520": 215, "6522": 215, "6524": 215, "6526": 215, "6528": 215, "6530": 215, "6532": 215, "6534": 215, "6536": 215, "6538": 215, "6540": 215, "6542": 215, "6544": 215, "6546": 215, "6548": 215, "6550": 215, "6552": 215, "6554": 215, "6556": 215, "6558": 215, "6560": 215, "6562": 215, "6564": 215, "6566": 215, "6568": 215, "6570": 215, "6572": 215, "6574": 215, "6576": 215, "6578": 215, "6580": 215, "6582": 215, "6584": 215, "6586": 215, "6588": 215, "6590": 215, "6592": 215, "6594": 215, "6596": 215, "6598": 215, "6600": 215, "6602": 215, "6604": 215, "6606": 215, "6608": 215, "6610": 215, "6612": 215, "6614": 215, "6616": 215, "6618": 215, "6620": 215, "6622": 215, "6624": 215, "6626": 215, "6628": 215, "6630": 215, "6632": 215, "6634": 215, "6636": 215, "6638": 215, "6640": 215, "6642": 215, "6644": 215, "6646": 215, "6648": 215, "6650": 215, "6652": 215, "6654": 215, "6656": 215, "6658": 215, "6660": 215, "6662": 215, "6664": 215, "6666": 215, "6668": 215, "6670": 215, "6672": 215, "6674": 215, "6676": 215, "6678": 215, "6680": 215, "6682": 215, "6684": 215, "6686": 215, "6688": 215, "6690": 215, "6692": 215, "6694": 215, "6696": 215, "6698": 215, "6700": 215, "6702": 215, "6704": 215, "6706": 215, "6708": 215, "6710": 215, "6714": 215, "6716": [215, 238], "6718": 215, "6720": 215, "6722": 215, "6724": 215, "6726": 215, "6728": 215, "6730": 215, "6732": 215, "6734": 215, "6736": 215, "6738": 215, "6740": 215, "6742": 215, "6744": 215, "6746": 215, "6748": 215, "6750": 215, "6752": 215, "6754": 215, "6756": 215, "6758": 215, "6760": 215, "6762": 215, "6764": 215, "6766": 215, "6768": 215, "6770": 215, "6772": 215, "6774": 215, "6776": 215, "6778": 215, "6780": 215, "6782": 215, "6784": 215, "6786": 215, "6788": 215, "6790": 215, "6792": 215, "6794": 215, "6796": 215, "6798": 215, "6800": 215, "6802": 215, "6804": 215, "6806": 215, "6808": 215, "6810": 215, "6812": 215, "6814": 215, "6816": 215, "6818": 215, "6820": 215, "6822": 215, "6824": 215, "6826": 215, "6828": 215, "6830": 215, "6832": 215, "6834": 215, "6836": 215, "6838": 215, "6840": 215, "6842": 215, "6844": 215, "6846": 215, "6848": 215, "6850": 215, "6852": 215, "6854": 215, "6856": 215, "6858": [215, 264], "6860": 215, "6862": 215, "6864": 215, "6866": 215, "6868": 215, "6870": 215, "6872": 215, "6874": 215, "6876": 215, "6878": 215, "6880": 215, "6882": 215, "6884": 215, "6886": 215, "6888": 215, "6890": 215, "6892": 215, "6894": 215, "6896": 215, "6898": 215, "6900": 215, "6902": 215, "6904": 215, "6906": 215, "6908": 215, "6910": 215, "6912": 215, "6914": 215, "6916": 215, "6918": 215, "6920": 215, "6922": 215, "6924": 215, "6926": 215, "6928": 215, "6930": 215, "6932": 215, "6934": 215, "6936": 215, "6938": 215, "6940": 215, "6942": 215, "6944": 215, "6946": 215, "6948": 215, "6950": 215, "6952": 215, "6954": 215, "6956": 215, "6958": 215, "6960": 215, "6962": 215, "6964": 215, "6966": 215, "6968": 215, "6970": 215, "6972": 215, "6974": 215, "6976": 215, "6978": 215, "6980": 215, "6982": 215, "6984": 215, "6986": 215, "6988": 215, "6990": 215, "6992": 215, "6994": 215, "6996": 215, "6998": 215, "7000": 215, "7002": 215, "7004": 215, "7006": 215, "7008": 215, "7010": 215, "7012": 215, "7014": 215, "7016": 215, "7018": 215, "7020": 215, "7022": 215, "7024": 215, "7026": 215, "7028": 215, "7030": 215, "7032": 215, "7034": 215, "7036": 215, "7038": 215, "7040": 215, "7042": 215, "7044": 215, "7046": 215, "7048": 215, "7050": 215, "7052": 215, "7054": 215, "7056": 215, "7058": 215, "7060": 215, "7062": 215, "7064": 215, "7066": 215, "7068": 215, "7070": 215, "7072": 215, "7074": 215, "7076": 215, "7078": 215, "7080": 215, "7082": 215, "7084": 215, "7086": 215, "7088": 215, "7090": 215, "7092": 215, "7094": 215, "7096": 215, "7098": 215, "7100": 215, "7102": 215, "7104": 215, "7106": 215, "7108": 215, "7110": 215, "7112": 215, "7114": 215, "7116": 215, "7118": 215, "7120": 215, "7122": 215, "7124": 215, "7126": 215, "7128": 215, "7130": 215, "7132": 215, "7134": 215, "7136": 215, "7138": 215, "7140": 215, "7142": 215, "7144": 215, "7146": 215, "7148": 215, "7150": 215, "7152": 215, "7154": 215, "7156": 215, "7158": 215, "7160": 215, "7162": 215, "7164": 215, "7166": 215, "7168": 215, "7170": 215, "7172": 215, "7174": 215, "7176": 215, "7178": 215, "7180": 215, "7182": 215, "7184": 215, "7186": 215, "7188": 215, "7190": 215, "7192": 215, "7194": 215, "7196": 215, "7198": 215, "7200": 215, "7202": 215, "7204": 215, "7206": 215, "7208": 215, "7210": 215, "7212": 215, "7214": 215, "7216": 215, "7218": 215, "7220": 215, "7222": 215, "7224": 215, "7226": 215, "7228": 215, "7230": 215, "7232": 215, "7234": 215, "7236": 215, "7238": 215, "7240": 215, "7242": 215, "7244": 215, "7246": 215, "7248": 215, "7250": 215, "7252": 215, "7254": 215, "7256": 215, "7258": 215, "7260": 215, "7262": 215, "7264": 215, "7266": 215, "7268": 215, "7270": 215, "7272": 215, "7274": 215, "7276": 215, "7278": 215, "7280": 215, "7282": 215, "7284": 215, "7286": 215, "7288": 215, "7290": 215, "7292": 215, "7294": 215, "7296": 215, "7298": 215, "7300": 215, "7302": 215, "7304": 215, "7306": 215, "7308": 215, "7310": 215, "7312": 215, "7314": 215, "7316": 215, "7318": 215, "7320": 215, "7322": 215, "7324": 215, "7326": 215, "7328": 215, "7330": 215, "7332": 215, "7334": 215, "7336": 215, "7338": 215, "7340": 215, "7342": 215, "7344": 215, "7346": 215, "7348": 215, "7350": 215, "7352": 215, "7354": 215, "7356": 215, "7358": 215, "7360": 215, "7362": 215, "7364": 215, "7366": 215, "7368": 215, "7370": 215, "7372": 215, "7374": 215, "7376": 215, "7378": 215, "7380": 215, "7382": 215, "7384": 215, "7386": 215, "7388": 215, "7392": 215, "7394": 215, "7396": 215, "7398": 215, "7400": 215, "7402": 215, "7404": 215, "7406": 215, "7408": 215, "7410": 215, "7412": 215, "7414": 215, "7416": 215, "7418": 215, "7420": 215, "7422": 215, "7424": 215, "7426": 215, "7428": 215, "7430": 215, "7432": 215, "7434": 215, "7436": 215, "7438": 215, "7440": 215, "7442": 215, "7444": 215, "7446": 215, "7448": 215, "7450": 215, "7452": 215, "7454": 215, "7456": 215, "7458": 215, "7460": 215, "7462": 215, "7464": 215, "7466": 215, "7468": 215, "7470": 215, "7472": 215, "7474": 215, "7476": 215, "7478": 215, "7480": 215, "7482": 215, "7484": 215, "7486": 215, "7488": 215, "7490": 215, "7492": 215, "7494": 215, "7496": 215, "7498": 215, "7500": 215, "7502": 215, "7504": 215, "7506": 215, "7508": 215, "7510": 215, "7512": 215, "7514": 215, "7516": 215, "7518": 215, "7520": 215, "7522": 215, "7524": 215, "7526": 215, "7528": 215, "7530": 215, "7532": 215, "7534": 215, "7536": 215, "7538": 215, "7540": 215, "7542": 215, "7544": 215, "7546": 215, "7548": 215, "7550": 215, "7552": 215, "7554": 215, "7556": 215, "7558": 215, "7560": 215, "7562": 215, "7564": 215, "7566": 215, "7568": 215, "7570": 215, "7572": 215, "7574": 215, "7576": 215, "7578": 215, "7580": 215, "7582": 215, "7584": 215, "7586": 215, "7588": 215, "7590": 215, "7592": 215, "7594": 215, "7596": 215, "7598": 215, "7600": 215, "7602": 215, "7604": 215, "7606": 215, "7608": 215, "7610": 215, "7612": 215, "7614": 215, "7616": 215, "7618": 215, "7620": 215, "7622": 215, "7624": 215, "7626": 215, "7628": 215, "7630": 215, "7632": 215, "7634": 215, "7636": 215, "7638": 215, "7640": 215, "7642": 215, "7644": 215, "7646": 215, "7648": 215, "7650": 215, "7652": 215, "7654": 215, "7656": 215, "7658": 215, "7660": 215, "7662": 215, "7664": 215, "7666": 215, "7668": 215, "7670": 215, "7672": 215, "7674": 215, "7676": 215, "7678": 215, "7680": 215, "7682": 215, "7684": 215, "7686": 215, "7688": 215, "7690": 215, "7692": 215, "7694": 215, "7696": 215, "7698": 215, "7700": 215, "7702": 215, "7704": 215, "7706": 215, "7708": 215, "7710": 215, "7712": 215, "7714": 215, "7716": 215, "7718": 215, "7720": 215, "7722": 215, "7724": 215, "7726": 215, "7728": 215, "7730": 215, "7732": 215, "7734": 215, "7736": 215, "7738": 215, "7740": 215, "7742": 215, "7744": 215, "7746": 215, "7748": 215, "7750": 215, "7752": 215, "7754": 215, "7756": 215, "7758": 215, "7760": 215, "7762": 215, "7764": 215, "7766": 215, "7768": 215, "7770": 215, "7772": 215, "7774": 215, "7776": 215, "7778": 215, "7780": 215, "7782": 215, "7784": 215, "7786": 215, "7788": 215, "7790": 215, "7792": 215, "7794": 215, "7796": 215, "7798": 215, "7800": 215, "7802": 215, "7804": 215, "7806": 215, "7808": 215, "7810": 215, "7812": 215, "7814": 215, "7816": 215, "7818": 215, "7820": 215, "7822": 215, "7824": 215, "7826": 215, "7828": 215, "7830": 215, "7832": 215, "7834": 215, "7836": 215, "7838": 215, "7842": 215, "7844": 215, "7846": 215, "7848": 215, "7850": 215, "7852": 215, "7854": 215, "7856": 215, "7858": 215, "7860": 215, "7862": 215, "7864": 215, "7866": 215, "7868": 215, "7870": 215, "7872": 215, "7874": 215, "7878": 215, "7880": 215, "7882": 215, "7884": 215, "7886": 215, "7888": 215, "7890": 215, "7892": 215, "7894": 215, "7896": 215, "7898": 215, "7900": 215, "7902": 215, "7904": 215, "7906": 215, "7908": 215, "7910": 215, "7912": 215, "7914": 215, "7916": 215, "7918": 215, "7920": 215, "7922": 215, "7924": 215, "7926": 215, "7928": 215, "7930": 215, "7932": 215, "7934": 215, "7936": 215, "7938": 215, "7940": 215, "7942": 215, "7944": 215, "7946": 215, "7948": 215, "7950": 215, "7952": 215, "7954": 215, "7956": 215, "7958": 215, "7960": 215, "7962": 215, "7964": 215, "7966": 215, "7968": 215, "7970": 215, "7972": 215, "7974": 215, "7976": 215, "7978": 215, "7980": 215, "7982": 215, "7984": 215, "7986": 215, "7988": 215, "7990": 215, "7992": 215, "7994": 215, "7996": 215, "7998": 215, "8002": 215, "8004": 215, "8006": 215, "8008": 215, "8012": 215, "8014": 215, "8016": 215, "8018": 215, "8022": 215, "8024": 215, "8026": 215, "8028": 215, "8030": 215, "8032": 215, "8034": 215, "8036": 215, "8038": 215, "8040": 215, "8042": 215, "8044": 215, "8046": 215, "8048": 215, "8050": 215, "8052": 215, "8054": 215, "8056": 215, "8058": 215, "8060": 215, "8062": 215, "8064": 215, "8066": 215, "8068": 215, "8070": 215, "8072": 215, "8074": 215, "8076": 215, "8078": 215, "8080": 215, "8082": 215, "8084": 215, "8086": 215, "8088": 215, "8090": 215, "8092": 215, "8094": 215, "8096": 215, "8098": 215, "8100": 215, "8102": [215, 948, 949], "8104": 215, "8106": 215, "8108": 215, "8110": 215, "8112": 215, "8114": 215, "8116": 215, "8118": 215, "8120": 215, "8122": 215, "8124": 215, "8126": 215, "8128": 215, "8130": 215, "8132": 215, "8134": 215, "8136": 215, "8138": 215, "8140": 215, "8142": 215, "8144": 215, "8146": 215, "8148": 215, "8150": 215, "8152": 215, "8154": 215, "8156": 215, "8158": 215, "8160": 215, "8162": 215, "8164": 215, "8166": 215, "8168": 215, "8170": 215, "8172": 215, "8174": 215, "8176": 215, "8178": 215, "8180": 215, "8182": 215, "8184": 215, "8186": 215, "8188": 215, "8190": 215, "8194": 215, "8196": 215, "8198": 215, "8200": 215, "8202": 215, "8204": 215, "8206": 215, "8208": 215, "8210": 215, "8212": 215, "8214": 215, "8216": 215, "8218": 215, "8220": 215, "8222": 215, "8224": 215, "8226": 215, "8228": 215, "8230": 215, "8232": 215, "8234": 215, "8238": 215, "8240": 215, "8242": 215, "8244": 215, "8246": 215, "8248": 215, "8250": 215, "8252": 215, "8254": 215, "8256": 215, "8258": 215, "8260": [215, 773], "8262": 215, "8264": 215, "8266": 215, "8268": 215, "8270": 215, "8272": 215, "8274": 215, "8276": 215, "8278": 215, "8280": 215, "8282": 215, "8284": 215, "8286": 215, "8288": 215, "8290": 215, "8292": 215, "8294": 215, "8296": 215, "8298": 215, "8300": 215, "8302": 215, "8304": 215, "8306": 215, "8308": 215, "8310": 215, "8312": 215, "8314": 215, "8316": 215, "8318": 215, "8320": 215, "8322": 215, "8324": 215, "8326": 215, "8328": 215, "8330": 215, "8332": 215, "8334": 215, "8336": 215, "8338": 215, "8340": 215, "8342": 215, "8344": 215, "8346": 215, "8348": 215, "8350": 215, "8352": 215, "8354": 215, "8356": 215, "8358": 215, "8360": 215, "8362": 215, "8364": 215, "8366": 215, "8368": 215, "8370": 215, "8372": 215, "8374": 215, "8376": 215, "8378": 215, "8380": 215, "8382": 215, "8384": 215, "8386": 215, "8388": 215, "8390": 215, "8392": 215, "8394": 215, "8396": 215, "8398": 215, "8400": 215, "8402": 215, "8404": 215, "8406": 215, "8408": 215, "8410": 215, "8412": 215, "8414": 215, "8416": 215, "8418": 215, "8420": 215, "8422": 215, "8424": 215, "8426": 215, "8428": 215, "8430": 215, "8432": 215, "8434": 215, "8436": 215, "8438": 215, "8440": 215, "8442": 215, "8444": 215, "8446": 215, "8448": 215, "8450": 215, "8452": 215, "8454": 215, "8456": 215, "8458": 215, "8460": 215, "8464": 215, "8466": 215, "8468": 215, "8470": 215, "8472": 215, "8474": 215, "8476": 215, "8478": 215, "8480": 215, "8482": 215, "8484": 215, "8486": 215, "8488": 215, "8490": 215, "8492": 215, "8494": 215, "8496": 215, "8498": 215, "8500": 215, "8502": 215, "8504": 215, "8506": 215, "8508": 215, "8510": 215, "8512": 215, "8514": 215, "8516": 215, "8518": 215, "8520": 215, "8522": 215, "8524": 215, "8526": 215, "8528": 215, "8530": 215, "8532": 215, "8534": 215, "8536": 215, "8538": 215, "8540": 215, "8542": 215, "8544": 215, "8546": 215, "8548": 215, "8550": 215, "8552": 215, "8554": 215, "8556": 215, "8558": 215, "8560": 215, "8562": 215, "8564": 215, "8566": 215, "8568": 215, "8570": 215, "8572": 215, "8574": 215, "8576": 215, "8578": 215, "8580": 215, "8582": 215, "8584": 215, "8586": 215, "8588": 215, "8590": 215, "8592": 215, "8594": 215, "8596": 215, "8598": 215, "8600": 215, "8602": 215, "8604": 215, "8606": 215, "8608": 215, "8610": 215, "8612": 215, "8614": 215, "8616": 215, "8618": 215, "8620": 215, "8622": 215, "8624": 215, "8626": 215, "8628": 215, "8630": 215, "8632": 215, "8634": 215, "8636": 215, "8638": 215, "8640": 215, "8642": 215, "8644": 215, "8646": 215, "8648": 215, "8650": 215, "8652": 215, "8654": 215, "8656": 215, "8658": 215, "8660": 215, "8662": 215, "8664": 215, "8666": 215, "8668": 215, "8670": 215, "8672": 215, "8674": 215, "8676": 215, "8678": 215, "8680": 215, "8682": 215, "8684": 215, "8686": 215, "8688": 215, "8690": 215, "8692": 215, "8694": 215, "8696": 215, "8698": 215, "8700": 215, "8702": 215, "8704": 215, "8706": 215, "8708": 215, "8710": 215, "8712": 215, "8714": 215, "8716": 215, "8718": 215, "8720": 215, "8722": 215, "8724": 215, "8726": 215, "8728": 215, "8730": 215, "8732": 215, "8734": 215, "8736": 215, "8738": 215, "8740": 215, "8742": 215, "8744": 215, "8746": 215, "8748": 215, "8750": 215, "8752": 215, "8754": 215, "8756": 215, "8758": 215, "8760": 215, "8762": 215, "8764": 215, "8766": 215, "8768": 215, "8770": 215, "8772": 215, "8774": 215, "8776": 215, "8778": 215, "8780": 215, "8782": 215, "8784": 215, "8786": 215, "8788": 215, "8790": 215, "8792": 215, "8794": 215, "8796": 215, "8798": 215, "8800": 215, "8802": 215, "8804": 215, "8806": 215, "8808": 215, "8810": 215, "8812": 215, "8814": 215, "8816": 215, "8818": 215, "8820": 215, "8822": 215, "8824": 215, "8826": 215, "8828": 215, "8830": 215, "8832": 215, "8834": 215, "8836": 215, "8838": 215, "8840": 215, "8842": 215, "8844": 215, "8846": 215, "8848": 215, "8850": 215, "8852": 215, "8854": 215, "8856": 215, "8858": 215, "8860": 215, "8862": 215, "8864": 215, "8866": 215, "8868": 215, "8870": 215, "8872": 215, "8874": 215, "8876": 215, "8878": 215, "8880": 215, "8882": 215, "8884": 215, "8886": 215, "8888": 215, "8890": 215, "8892": 215, "8894": 215, "8896": 215, "8898": 215, "8900": 215, "8902": 215, "8904": 215, "8906": 215, "8908": 215, "8910": 215, "8912": 215, "8914": 215, "8916": 215, "8918": 215, "8920": 215, "8922": 215, "8924": 215, "8926": 215, "8928": 215, "8930": 215, "8932": 215, "8934": 215, "8936": 215, "8938": 215, "8940": 215, "8942": 215, "8944": 215, "8946": 215, "8948": 215, "8950": 215, "8952": 215, "8954": 215, "8956": 215, "8958": 215, "8960": 215, "8962": 215, "8964": 215, "8966": 215, "8968": 215, "8970": 215, "8972": 215, "8974": 215, "8976": 215, "8978": 215, "8980": 215, "8982": 215, "8984": 215, "8986": 215, "8988": 215, "8990": 215, "8992": 215, "8994": 215, "8996": 215, "8998": 215, "9002": 215, "9004": 215, "9006": 215, "9008": 215, "9010": 215, "9012": 215, "9014": 215, "9016": 215, "9018": 215, "9020": 215, "9022": 215, "9024": 215, "9026": 215, "9028": 215, "9030": 215, "9032": 215, "9034": 215, "9036": 215, "9038": 215, "9040": 215, "9042": 215, "9044": 215, "9046": 215, "9048": 215, "9050": 215, "9052": 215, "9054": 215, "9056": 215, "9058": 215, "9060": 215, "9062": 215, "9064": 215, "9066": 215, "9068": 215, "9070": 215, "9072": 215, "9074": 215, "9076": 215, "9078": 215, "9080": 215, "9082": 215, "9084": 215, "9086": 215, "9088": 215, "9090": 215, "9092": 215, "9094": 215, "9096": 215, "9098": 215, "9100": 215, "9102": 215, "9104": 215, "9106": 215, "9108": 215, "9110": 215, "9112": 215, "9114": 215, "9116": 215, "9118": 215, "9120": 215, "9122": 215, "9124": 215, "9126": 215, "9128": 215, "9130": 215, "9132": 215, "9134": 215, "9136": 215, "9138": 215, "9140": 215, "9142": 215, "9144": 215, "9146": 215, "9148": 215, "9150": 215, "9152": 215, "9154": 215, "9156": 215, "9158": 215, "9160": 215, "9162": 215, "9164": 215, "9166": 215, "9168": 215, "9170": 215, "9172": 215, "9174": 215, "9176": 215, "9178": 215, "9180": 215, "9182": 215, "9184": 215, "9186": 215, "9188": 215, "9190": 215, "9192": 215, "9194": 215, "9196": 215, "9198": 215, "9200": 215, "9202": 215, "9204": 215, "9206": 215, "9208": 215, "9210": 215, "9212": 215, "9214": 215, "9216": 215, "9218": 215, "9220": 215, "9222": 215, "9224": 215, "9226": 215, "9228": 215, "9230": 215, "9232": 215, "9234": 215, "9236": 215, "9238": 215, "9240": 215, "9242": 215, "9244": 215, "9246": 215, "9248": 215, "9250": 215, "9252": 215, "9254": 215, "9256": 215, "9258": 215, "9260": 215, "9262": 215, "9264": 215, "9266": 215, "9268": 215, "9270": 215, "9272": 215, "9274": 215, "9276": 215, "9278": 215, "9280": 215, "9282": 215, "9284": 215, "9286": 215, "9288": 215, "9290": 215, "9292": 215, "9294": 215, "9296": 215, "9298": 215, "9300": 215, "9302": 215, "9304": 215, "9306": 215, "9308": 215, "9310": 215, "9312": 215, "9314": 215, "9316": 215, "9318": 215, "9320": 215, "9322": 215, "9324": 215, "9326": 215, "9328": 215, "9330": 215, "9332": 215, "9334": 215, "9336": 215, "9338": 215, "9340": 215, "9342": 215, "9344": 215, "9346": 215, "9348": 215, "9350": 215, "9352": 215, "9354": 215, "9356": 215, "9358": 215, "9360": 215, "9362": 215, "9364": 215, "9366": 215, "9368": 215, "9370": 215, "9372": 215, "9374": 215, "9376": 215, "9378": 215, "9380": 215, "9382": 215, "9384": 215, "9386": 215, "9388": 215, "9390": 215, "9392": 215, "9394": [215, 833], "9396": 215, "9398": 215, "9400": 215, "9402": 215, "9404": 215, "9406": 215, "9408": 215, "9410": 215, "9412": 215, "9414": 215, "9416": 215, "9418": 215, "9420": 215, "9422": 215, "9424": 215, "9426": 215, "9428": 215, "9430": 215, "9432": 215, "9434": 215, "9436": 215, "9438": 215, "9440": 215, "9442": 215, "9444": 215, "9446": 215, "9448": 215, "9450": 215, "9452": 215, "9454": 215, "9456": 215, "9458": 215, "9460": 215, "9462": 215, "9464": 215, "9466": 215, "9468": 215, "9470": 215, "9472": 215, "9474": 215, "9476": 215, "9478": 215, "9480": 215, "9482": 215, "9484": 215, "9486": 215, "9488": 215, "9490": 215, "9492": 215, "9494": 215, "9496": 215, "9498": 215, "9500": 215, "9502": 215, "9504": 215, "9506": 215, "9508": 215, "9510": 215, "9512": 215, "9514": 215, "9516": 215, "9518": 215, "9520": 215, "9522": 215, "9524": 215, "9526": 215, "9528": 215, "9530": 215, "9532": 215, "9534": 215, "9536": 215, "9538": 215, "9540": 215, "9542": 215, "9544": 215, "9546": 215, "9548": 215, "9550": 215, "9552": 215, "9554": 215, "9556": 215, "9558": 215, "9560": 215, "9562": 215, "9564": 215, "9566": 215, "9568": 215, "9570": 215, "9572": 215, "9574": 215, "9576": 215, "9578": 215, "9580": 215, "9582": 215, "9584": 215, "9586": 215, "9588": 215, "9590": 215, "9592": 215, "9594": 215, "9596": 215, "9598": 215, "9600": 215, "9602": 215, "9604": 215, "9606": 215, "9608": 215, "9610": 215, "9612": 215, "9614": 215, "9616": 215, "9618": 215, "9620": 215, "9622": 215, "9624": 215, "9626": 215, "9628": 215, "9630": 215, "9632": 215, "9634": 215, "9636": 215, "9638": 215, "9640": 215, "9642": 215, "9644": 215, "9646": 215, "9648": 215, "9650": 215, "9652": 215, "9654": 215, "9656": 215, "9658": 215, "9660": 215, "9662": 215, "9664": 215, "9666": 215, "9668": 215, "9670": 215, "9672": 215, "9674": 215, "9676": 215, "9678": 215, "9680": 215, "9682": 215, "9684": 215, "9686": 215, "9688": 215, "9690": 215, "9692": 215, "9694": 215, "9696": 215, "9698": 215, "9700": 215, "9702": 215, "9704": 215, "9706": 215, "9708": 215, "9710": 215, "9712": 215, "9714": 215, "9716": 215, "9718": 215, "9720": 215, "9722": 215, "9724": 215, "9726": 215, "9728": 215, "9730": 215, "9732": 215, "9734": 215, "9736": 215, "9738": 215, "9740": 215, "9742": 215, "9744": 215, "9746": 215, "9748": 215, "9750": 215, "9752": 215, "9754": 215, "9756": 215, "9758": 215, "9760": 215, "9762": 215, "9764": 215, "9766": 215, "9768": [215, 225], "9770": 215, "9772": 215, "9774": 215, "9776": 215, "9778": 215, "9780": 215, "9782": 215, "9784": 215, "9786": 215, "9788": 215, "9790": 215, "9792": 215, "9794": 215, "9796": 215, "9798": 215, "9800": 215, "9802": 215, "9804": 215, "9806": 215, "9808": 215, "9810": 215, "9812": 215, "9814": 215, "9816": 215, "9818": 215, "9820": 215, "9822": 215, "9824": 215, "9826": 215, "9828": 215, "9830": 215, "9832": 215, "9834": 215, "9836": 215, "9838": 215, "9840": 215, "9842": 215, "9844": 215, "9846": 215, "9848": 215, "9850": 215, "9852": 215, "9854": 215, "9856": 215, "9858": 215, "9860": 215, "9862": 215, "9864": 215, "9866": 215, "9868": 215, "9870": 215, "9872": 215, "9874": 215, "9876": 215, "9878": 215, "9880": 215, "9882": 215, "9884": 215, "9886": 215, "9888": 215, "9890": 215, "9892": 215, "9894": 215, "9896": 215, "9898": 215, "9900": 215, "9902": 215, "9904": 215, "9906": 215, "9908": 215, "9910": 215, "9912": 215, "9914": 215, "9916": 215, "9918": 215, "9920": 215, "9922": 215, "9924": 215, "9926": 215, "9928": 215, "9930": 215, "9932": 215, "9934": 215, "9936": 215, "9938": 215, "9940": 215, "9942": 215, "9944": 215, "9946": 215, "9948": 215, "9950": 215, "9952": 215, "9954": 215, "9956": 215, "9958": 215, "9960": 215, "9962": 215, "9964": 215, "9966": 215, "9968": 215, "9970": 215, "9972": 215, "9974": 215, "9976": 215, "9978": 215, "9980": 215, "9982": 215, "9984": 215, "9986": 215, "9988": 215, "9990": 215, "9992": 215, "9994": 215, "9996": 215, "9998": 215, "10002": 215, "10004": 215, "10006": 215, "10008": 215, "10010": 215, "10012": 215, "10014": 215, "10016": 215, "10018": 215, "10020": 215, "10022": 215, "10024": 215, "10026": 215, "10028": 215, "10030": 215, "10032": 215, "10034": 215, "10036": 215, "10038": 215, "10040": 215, "10042": 215, "10044": 215, "10046": 215, "10048": 215, "10050": 215, "10052": 215, "10054": 215, "10056": 215, "10058": 215, "10060": 215, "10062": 215, "10064": 215, "10066": 215, "10068": 215, "10070": 215, "10072": 215, "10074": 215, "10076": 215, "10078": 215, "10080": 215, "10082": 215, "10084": 215, "10086": 215, "10088": 215, "10090": 215, "10092": 215, "10094": 215, "10096": 215, "10098": 215, "10100": 215, "10102": 215, "10104": 215, "10106": 215, "10108": 215, "10110": 215, "10112": 215, "10114": 215, "10116": 215, "10118": 215, "10120": 215, "10122": 215, "10124": 215, "10126": 215, "10128": 215, "10130": 215, "10132": 215, "10134": 215, "10136": 215, "10138": 215, "10140": 215, "10142": 215, "10144": 215, "10146": 215, "10148": 215, "10150": 215, "10152": 215, "10154": 215, "10156": 215, "10158": 215, "10160": 215, "10162": 215, "10164": 215, "10166": 215, "10168": 215, "10170": 215, "10172": 215, "10174": 215, "10176": 215, "10178": 215, "10180": 215, "10182": 215, "10184": 215, "10186": 215, "10188": 215, "10190": 215, "10192": 215, "10194": 215, "10196": 215, "10198": 215, "10200": 215, "10202": 215, "10204": 215, "10206": 215, "10208": 215, "10210": 215, "10212": 215, "10214": 215, "10216": 215, "10218": 215, "10220": 215, "10222": 215, "10224": 215, "10226": [215, 264], "10228": 215, "10230": 215, "10232": 215, "10234": 215, "10236": 215, "10238": 215, "10240": 215, "10242": 215, "10244": 215, "10246": 215, "10248": 215, "10250": 215, "10252": 215, "10254": 215, "10256": 215, "10258": 215, "10260": 215, "10262": 215, "10264": 215, "10266": 215, "10268": 215, "10270": 215, "10272": 215, "10274": 215, "10276": 215, "10278": 215, "10280": 215, "10282": 215, "10284": 215, "10286": 215, "10288": 215, "10290": 215, "10292": 215, "10294": 215, "10296": 215, "10298": 215, "10300": 215, "10302": 215, "10304": 215, "10306": 215, "10308": 215, "10310": 215, "10312": 215, "10314": 215, "10316": 215, "10318": 215, "10320": 215, "10322": 215, "10324": 215, "10326": 215, "10328": 215, "10330": 215, "10332": 215, "10334": 215, "10336": 215, "10338": 215, "10340": 215, "10342": 215, "10344": 215, "10346": 215, "10348": 215, "10350": 215, "10352": 215, "10354": 215, "10356": 215, "10358": 215, "10360": 215, "10362": 215, "10364": 215, "10366": 215, "10368": 215, "10370": 215, "10372": 215, "10374": 215, "10376": 215, "10378": 215, "10380": 215, "10382": 215, "10384": 215, "10386": 215, "10388": 215, "10390": 215, "10392": 215, "10394": 215, "10396": 215, "10398": 215, "10400": 215, "10402": 215, "10404": 215, "10406": 215, "10408": 215, "10410": 215, "10412": 215, "10414": 215, "10416": 215, "10418": 215, "10420": 215, "10422": 215, "10424": 215, "10426": 215, "10428": 215, "10430": 215, "10432": 215, "10434": 215, "10436": 215, "10438": 215, "10440": 215, "10442": 215, "10444": 215, "10446": 215, "10448": 215, "10450": 215, "10452": 215, "10454": 215, "10456": 215, "10458": 215, "10460": 215, "10462": 215, "10464": 215, "10466": 215, "10468": 215, "10470": 215, "10472": 215, "10474": 215, "10476": 215, "10478": 215, "10480": 215, "10482": 215, "10484": 215, "10486": 215, "10488": 215, "10490": 215, "10492": 215, "10494": 215, "10496": 215, "10498": 215, "10500": 215, "10502": 215, "10504": 215, "10506": 215, "10508": 215, "10510": 215, "10512": 215, "10514": 215, "10516": 215, "10518": 215, "10520": 215, "10522": 215, "10524": 215, "10526": 215, "10528": 215, "10530": 215, "10532": 215, "10534": 215, "10536": 215, "10538": 215, "10540": 215, "10542": 215, "10544": 215, "10546": 215, "10548": 215, "10550": 215, "10552": [215, 959], "10554": 215, "10556": 215, "10558": 215, "10560": 215, "10562": 215, "10564": 215, "10566": 215, "10568": 215, "10570": 215, "10572": 215, "10574": 215, "10576": 215, "10578": 215, "10580": 215, "10582": 215, "10584": 215, "10586": 215, "10588": 215, "10590": 215, "10592": 215, "10594": 215, "10596": 215, "10598": 215, "10600": 215, "10602": 215, "10604": 215, "10606": 215, "10608": 215, "10610": 215, "10612": 215, "10614": 215, "10616": 215, "10618": 215, "10620": 215, "10622": 215, "10624": 215, "10626": 215, "10628": 215, "10630": 215, "10632": 215, "10634": 215, "10636": 215, "10638": 215, "10640": 215, "10642": 215, "10644": 215, "10646": 215, "10648": 215, "10650": 215, "10652": 215, "10654": 215, "10656": 215, "10658": 215, "10660": 215, "10662": 215, "10664": 215, "10666": 215, "10668": 215, "10670": 215, "10672": 215, "10674": 215, "10676": 215, "10678": 215, "10680": 215, "10682": 215, "10684": 215, "10686": 215, "10688": 215, "10690": 215, "10692": 215, "10694": 215, "10696": 215, "10698": 215, "10700": 215, "10702": 215, "10704": 215, "10706": 215, "10708": 215, "10710": 215, "10712": 215, "10714": 215, "10716": 215, "10718": 215, "10720": 215, "10722": 215, "10724": 215, "10726": 215, "10728": 215, "10730": 215, "10732": 215, "10734": 215, "10736": 215, "10738": 215, "10740": 215, "10742": 215, "10744": 215, "10746": 215, "10748": 215, "10750": 215, "10752": 215, "10754": 215, "10756": 215, "10758": 215, "10760": 215, "10762": 215, "10764": 215, "10766": 215, "10768": 215, "10770": 215, "10772": 215, "10774": 215, "10776": 215, "10778": 215, "10780": 215, "10782": 215, "10784": 215, "10786": 215, "10788": 215, "10790": 215, "10792": 215, "10794": 215, "10796": 215, "10798": 215, "10800": 215, "10802": 215, "10804": 215, "10806": 215, "10808": 215, "10810": 215, "10812": 215, "10814": 215, "10816": 215, "10818": 215, "10820": 215, "10822": 215, "10824": 215, "10826": 215, "10828": 215, "10830": 215, "10832": 215, "10834": 215, "10836": 215, "10838": 215, "10840": 215, "10842": 215, "10844": 215, "10846": 215, "10848": 215, "10850": 215, "10852": 215, "10854": 215, "10856": 215, "10858": 215, "10860": 215, "10862": 215, "10864": 215, "10866": 215, "10868": 215, "10870": 215, "10872": 215, "10874": 215, "10876": 215, "10878": 215, "10880": 215, "10882": 215, "10884": 215, "10886": 215, "10888": 215, "10890": 215, "10892": 215, "10894": 215, "10896": 215, "10898": 215, "10900": 215, "10902": 215, "10904": 215, "10906": 215, "10908": 215, "10910": 215, "10912": 215, "10914": 215, "10916": 215, "10918": 215, "10920": 215, "10922": 215, "10924": 215, "10926": 215, "10928": 215, "10930": 215, "10932": 215, "10934": 215, "10936": 215, "10938": 215, "10940": 215, "10942": 215, "10944": 215, "10946": 215, "10948": 215, "10950": 215, "10952": 215, "10954": 215, "10956": 215, "10958": 215, "10960": 215, "10962": 215, "10964": 215, "10966": 215, "10968": 215, "10970": 215, "10972": 215, "10974": 215, "10976": 215, "10978": 215, "10980": 215, "10982": 215, "10984": 215, "10986": 215, "10988": 215, "10990": 215, "10992": 215, "10994": 215, "10996": 215, "10998": 215, "11000": 215, "11002": 215, "11004": 215, "11006": 215, "11008": 215, "11010": 215, "11012": 215, "11014": 215, "11016": 215, "11018": 215, "11020": 215, "11022": 215, "11024": 215, "11026": 215, "11028": 215, "11030": 215, "11032": 215, "11034": 215, "11036": 215, "11038": 215, "11040": 215, "11042": 215, "11044": 215, "11046": 215, "11048": 215, "11050": 215, "11052": 215, "11054": 215, "11056": 215, "11058": 215, "11060": 215, "11062": 215, "11064": 215, "11066": 215, "11068": 215, "11070": 215, "11072": 215, "11074": 215, "11076": 215, "11078": 215, "11080": 215, "11082": 215, "11084": 215, "11086": 215, "11088": 215, "11090": 215, "11092": 215, "11094": 215, "11096": 215, "11098": 215, "11100": 215, "11102": 215, "11104": 215, "11106": 215, "11108": 215, "11110": 215, "11112": 215, "11114": 215, "11116": 215, "11118": 215, "11120": 215, "11122": 215, "11124": 215, "11126": 215, "11128": 215, "11130": 215, "11132": 215, "11134": 215, "11136": 215, "11138": 215, "11140": 215, "11142": 215, "11144": 215, "11146": 215, "11148": 215, "11150": 215, "11152": 215, "11154": 215, "11156": 215, "11158": 215, "11160": 215, "11162": 215, "11164": 215, "11166": 215, "11168": 215, "11170": 215, "11172": 215, "11174": 215, "11176": 215, "11178": 215, "11180": 215, "11182": 215, "11184": 215, "11186": 215, "11188": 215, "11190": 215, "11192": 215, "11194": 215, "11196": 215, "11198": 215, "11200": 215, "11202": 215, "11204": 215, "11206": 215, "11208": 215, "11210": 215, "11212": 215, "11214": 215, "11216": 215, "11218": 215, "11220": 215, "11222": 215, "11224": 215, "11226": 215, "11228": 215, "11230": 215, "11232": 215, "11234": 215, "11236": 215, "11238": 215, "11240": 215, "11242": 215, "11244": 215, "11246": 215, "11248": 215, "11250": 215, "11252": 215, "11254": 215, "11256": 215, "11258": 215, "11260": 215, "11262": 215, "11264": 215, "11266": 215, "11268": 215, "11270": 215, "11272": 215, "11274": 215, "11276": 215, "11278": 215, "11280": 215, "11282": 215, "11284": 215, "11286": 215, "11288": 215, "11290": 215, "11292": 215, "11294": 215, "11296": 215, "11298": 215, "11300": 215, "11302": 215, "11304": 215, "11306": 215, "11308": 215, "11310": 215, "11312": 215, "11314": 215, "11316": 215, "11318": 215, "11320": 215, "11322": 215, "11324": 215, "11326": 215, "11328": 215, "11330": 215, "11332": 215, "11334": 215, "11336": 215, "11340": 215, "11342": 215, "11344": 215, "11346": 215, "11348": [215, 264], "11350": 215, "11352": 215, "11354": 215, "11356": 215, "11358": 215, "11360": 215, "11362": 215, "11364": 215, "11366": 215, "11368": 215, "11370": 215, "11372": 215, "11374": 215, "11376": 215, "11378": 215, "11380": 215, "11382": 215, "11384": 215, "11386": 215, "11388": 215, "11390": 215, "11392": 215, "11394": 215, "11396": 215, "11398": 215, "11400": 215, "11402": 215, "11404": 215, "11406": 215, "11408": 215, "11410": 215, "11412": 215, "11414": 215, "11416": 215, "11418": 215, "11420": 215, "11422": 215, "11424": 215, "11426": 215, "11428": 215, "11430": 215, "11432": 215, "11434": 215, "11436": 215, "11438": 215, "11440": 215, "11442": 215, "11444": 215, "11446": 215, "11448": 215, "11450": 215, "11452": 215, "11454": 215, "11456": 215, "11458": 215, "11460": 215, "11462": 215, "11464": 215, "11466": 215, "11468": 215, "11470": 215, "11472": 215, "11474": 215, "11476": 215, "11478": 215, "11480": 215, "11482": 215, "11484": 215, "11486": 215, "11488": 215, "11490": 215, "11492": 215, "11494": 215, "11496": 215, "11498": 215, "11500": 215, "11502": 215, "11504": 215, "11506": 215, "11508": 215, "11510": 215, "11512": 215, "11514": 215, "11516": 215, "11518": 215, "11520": 215, "11522": 215, "11524": 215, "11526": 215, "11528": 215, "11530": 215, "11532": 215, "11534": 215, "11536": 215, "11538": 215, "11540": 215, "11542": 215, "11544": 215, "11546": 215, "11548": 215, "11550": 215, "11552": 215, "11554": 215, "11556": 215, "11558": 215, "11560": 215, "11562": 215, "11564": 215, "11566": 215, "11568": 215, "11570": 215, "11572": 215, "11574": 215, "11576": 215, "11578": 215, "11580": 215, "11582": 215, "11584": 215, "11586": 215, "11588": 215, "11590": 215, "11592": 215, "11594": 215, "11596": 215, "11598": 215, "11600": 215, "11602": 215, "11604": 215, "11606": 215, "11608": 215, "11610": 215, "11612": 215, "11614": 215, "11616": 215, "11618": 215, "11620": 215, "11622": 215, "11624": 215, "11626": 215, "11628": 215, "11630": 215, "11634": 215, "11636": 215, "11638": 215, "11640": 215, "11642": 215, "11644": 215, "11646": 215, "11648": 215, "11650": 215, "11652": 215, "11654": 215, "11656": 215, "11658": 215, "11660": 215, "11662": 215, "11664": 215, "11666": 215, "11668": 215, "11670": 215, "11672": 215, "11674": 215, "11676": 215, "11678": 215, "11680": 215, "11682": 215, "11684": 215, "11686": 215, "11688": 215, "11690": 215, "11692": 215, "11694": 215, "11696": 215, "11698": 215, "11700": 215, "11702": 215, "11704": 215, "11706": 215, "11708": 215, "11710": 215, "11712": 215, "11714": 215, "11716": 215, "11718": 215, "11720": 215, "11722": 215, "11724": 215, "11726": 215, "11728": 215, "11730": 215, "11732": 215, "11734": 215, "11736": 215, "11738": 215, "11740": 215, "11742": 215, "11744": 215, "11746": 215, "11748": 215, "11750": 215, "11752": 215, "11754": 215, "11756": 215, "11758": 215, "11760": 215, "11762": 215, "11764": 215, "11766": 215, "11768": 215, "11770": 215, "11772": 215, "11774": 215, "11776": 215, "11778": 215, "11780": 215, "11782": 215, "11784": 215, "11786": 215, "11788": 215, "11790": 215, "11792": 215, "11794": 215, "11796": 215, "11798": 215, "11800": 215, "11802": 215, "11804": 215, "11806": 215, "11808": 215, "11810": 215, "11812": 215, "11814": 215, "11816": 215, "11818": 215, "11820": 215, "11822": 215, "11824": 215, "11826": 215, "11828": 215, "11830": 215, "11832": 215, "11834": 215, "11836": 215, "11838": 215, "11840": 215, "11842": 215, "11844": 215, "11846": 215, "11848": 215, "11850": 215, "11852": 215, "11854": 215, "11856": 215, "11858": 215, "11860": 215, "11862": 215, "11864": 215, "11866": 215, "11868": 215, "11870": 215, "11872": 215, "11874": 215, "11876": 215, "11878": 215, "11880": 215, "11882": 215, "11884": 215, "11886": 215, "11888": 215, "11890": 215, "11892": 215, "11894": 215, "11896": 215, "11898": 215, "11900": 215, "11902": 215, "11904": 215, "11906": 215, "11908": 215, "11910": 215, "11912": 215, "11914": 215, "11916": 215, "11918": 215, "11920": 215, "11922": 215, "11924": 215, "11926": 215, "11928": 215, "11930": 215, "11932": 215, "11934": 215, "11936": 215, "11938": 215, "11940": 215, "11942": 215, "11944": 215, "11946": 215, "11948": 215, "11950": 215, "11952": 215, "11954": 215, "11956": 215, "11958": 215, "11960": 215, "11962": 215, "11964": 215, "11966": 215, "11968": 215, "11970": 215, "11972": 215, "11974": 215, "11976": 215, "11978": 215, "11980": 215, "11982": 215, "11984": 215, "11986": 215, "11988": 215, "11990": 215, "11992": 215, "11994": 215, "11996": 215, "11998": 215, "12000": 215, "12002": 215, "12004": 215, "12006": 215, "12008": 215, "12010": 215, "12012": 215, "12014": 215, "12016": 215, "12018": 215, "12020": 215, "12022": 215, "12024": 215, "12026": 215, "12028": 215, "12030": 215, "12032": 215, "12034": 215, "12036": 215, "12038": 215, "12040": 215, "12042": 215, "12044": 215, "12046": 215, "12048": 215, "12050": 215, "12052": 215, "12054": 215, "12056": 215, "12058": 215, "12060": 215, "12062": 215, "12064": 215, "12066": 215, "12068": 215, "12070": 215, "12072": 215, "12074": 215, "12076": 215, "12078": 215, "12080": 215, "12082": 215, "12084": 215, "12086": 215, "12088": 215, "12090": 215, "12092": 215, "12094": 215, "12096": 215, "12098": 215, "12100": 215, "12102": 215, "12104": 215, "12106": 215, "12108": 215, "12110": 215, "12112": 215, "12114": 215, "12116": 215, "12118": 215, "12120": 215, "12122": 215, "12124": 215, "12126": 215, "12128": 215, "12130": 215, "12132": 215, "12134": 215, "12136": 215, "12138": 215, "12140": 215, "12142": 215, "12144": 215, "12146": 215, "12148": 215, "12150": 215, "12152": 215, "12154": 215, "12158": 215, "12160": 215, "12162": 215, "12164": 215, "12166": 215, "12168": 215, "12170": 215, "12172": 215, "12174": 215, "12176": 215, "12178": 215, "12180": 215, "12182": 215, "12184": 215, "12186": 215, "12188": 215, "12190": 215, "12192": 215, "12194": 215, "12196": 215, "12198": 215, "12200": 215, "12202": 215, "12204": 215, "12206": 215, "12208": 215, "12210": 215, "12212": 215, "12214": 215, "12216": 215, "12218": 215, "12220": 215, "12222": 215, "12224": 215, "12226": 215, "12228": 215, "12230": 215, "12232": 215, "12234": 215, "12236": 215, "12238": 215, "12240": 215, "12242": 215, "12244": 215, "12246": 215, "12248": 215, "12250": 215, "12252": 215, "12254": 215, "12256": 215, "12258": 215, "12260": 215, "12262": 215, "12264": 215, "12266": 215, "12268": 215, "12270": 215, "12272": 215, "12274": 215, "12276": 215, "12278": 215, "12280": 215, "12282": 215, "12284": 215, "12286": 215, "12288": 215, "12290": 215, "12292": 215, "12294": 215, "12296": 215, "12298": 215, "12300": 215, "12302": 215, "12304": 215, "12306": 215, "12308": 215, "12310": 215, "12312": 215, "12314": 215, "12316": 215, "12318": 215, "12320": 215, "12322": 215, "12324": 215, "12326": 215, "12328": 215, "12330": 215, "12332": 215, "12334": 215, "12336": 215, "12338": 215, "12340": 215, "12342": 215, "12344": 215, "12346": 215, "12348": 215, "12350": 215, "12352": 215, "12354": 215, "12356": 215, "12358": 215, "12360": 215, "12362": 215, "12364": 215, "12366": 215, "12368": 215, "12370": 215, "12372": 215, "12374": 215, "12376": 215, "12378": 215, "12380": 215, "12382": 215, "12384": 215, "12386": 215, "12388": 215, "12390": 215, "12392": 215, "12394": 215, "12396": 215, "12398": 215, "12400": 215, "12402": 215, "12404": 215, "12406": 215, "12408": 215, "12410": 215, "12412": 215, "12414": 215, "12416": 215, "12418": 215, "12420": 215, "12422": 215, "12424": 215, "12426": 215, "12428": 215, "12430": 215, "12432": 215, "12434": 215, "12436": 215, "12438": 215, "12440": 215, "12442": 215, "12444": 215, "12446": 215, "12448": 215, "12450": 215, "12452": 215, "12454": 215, "12456": 215, "12458": 215, "12460": 215, "12462": 215, "12464": 215, "12466": 215, "12468": 215, "12470": 215, "12472": 215, "12474": 215, "12476": 215, "12478": 215, "12480": 215, "12482": 215, "12484": 215, "12486": 215, "12488": 215, "12490": 215, "12492": 215, "12494": 215, "12496": 215, "12498": 215, "12500": 215, "12502": 215, "12504": 215, "12506": 215, "12508": 215, "12510": 215, "12512": 215, "12514": 215, "12516": 215, "12518": 215, "12520": 215, "12522": 215, "12524": 215, "12526": 215, "12528": 215, "12530": 215, "12532": 215, "12534": 215, "12536": 215, "12538": 215, "12540": 215, "12542": 215, "12544": 215, "12546": 215, "12548": 215, "12550": 215, "12552": 215, "12554": 215, "12556": 215, "12558": 215, "12560": 215, "12562": 215, "12564": 215, "12566": 215, "12568": 215, "12570": 215, "12572": 215, "12574": 215, "12576": 215, "12578": 215, "12580": 215, "12582": 215, "12584": 215, "12586": 215, "12588": 215, "12590": 215, "12592": 215, "12594": 215, "12596": 215, "12598": 215, "12600": 215, "12602": 215, "12604": 215, "12606": 215, "12608": 215, "12610": 215, "12612": 215, "12614": 215, "12616": 215, "12618": 215, "12620": 215, "12622": 215, "12624": 215, "12626": 215, "12628": 215, "12630": 215, "12632": 215, "12634": 215, "12636": 215, "12638": 215, "12640": 215, "12642": 215, "12644": 215, "12646": 215, "12648": 215, "12650": 215, "12652": 215, "12654": 215, "12656": 215, "12658": 215, "12660": 215, "12662": 215, "12664": 215, "12666": 215, "12668": 215, "12670": 215, "12672": 215, "12674": 215, "12676": 215, "12678": 215, "12680": 215, "12682": 215, "12684": 215, "12686": 215, "12688": 215, "12690": 215, "12692": 215, "12694": 215, "12696": 215, "12698": 215, "12700": 215, "12702": 215, "12704": 215, "12706": 215, "12708": 215, "12710": 215, "12712": 215, "12714": 215, "12716": 215, "12718": 215, "12720": 215, "12722": 215, "12724": 215, "12726": 215, "12728": 215, "12730": 215, "12732": 215, "12734": 215, "12736": 215, "12738": 215, "12740": 215, "12742": 215, "12744": 215, "12746": 215, "12748": 215, "12750": 215, "12752": 215, "12754": 215, "12756": 215, "12758": 215, "12760": 215, "12762": 215, "12764": 215, "12766": 215, "12768": 215, "12770": 215, "12772": 215, "12774": 215, "12776": 215, "12778": 215, "12780": 215, "12782": 215, "12784": 215, "12786": 215, "12788": 215, "12790": 215, "12792": 215, "12794": 215, "12796": 215, "12798": 215, "12800": 215, "12802": 215, "12804": 215, "12806": 215, "12808": 215, "12810": 215, "12812": 215, "12814": 215, "12816": 215, "12818": 215, "12820": 215, "12822": 215, "12824": 215, "12826": 215, "12828": 215, "12830": 215, "12832": 215, "12834": 215, "12836": 215, "12838": 215, "12840": 215, "12842": 215, "12844": 215, "12846": 215, "12848": 215, "12850": 215, "12852": 215, "12854": 215, "12856": 215, "12858": 215, "12860": 215, "12862": 215, "12864": 215, "12866": 215, "12868": 215, "12870": 215, "12872": 215, "12874": 215, "12876": 215, "12878": 215, "12880": 215, "12882": 215, "12884": 215, "12886": 215, "12888": 215, "12890": 215, "12892": 215, "12894": 215, "12896": 215, "12898": 215, "12900": 215, "12902": 215, "12904": 215, "12906": 215, "12908": 215, "12910": 215, "12912": 215, "12914": 215, "12916": 215, "12918": 215, "12920": 215, "12922": 215, "12924": 215, "12926": 215, "12928": 215, "12930": 215, "12932": 215, "12934": 215, "12936": 215, "12938": 215, "12940": 215, "12942": 215, "12944": 215, "12946": 215, "12948": 215, "12950": 215, "12952": 215, "12954": 215, "12956": 215, "12958": 215, "12960": 215, "12962": 215, "12964": 215, "12966": 215, "12968": 215, "12970": 215, "12972": 215, "12974": 215, "12976": 215, "12978": 215, "12980": 215, "12982": 215, "12984": 215, "12986": 215, "12988": 215, "12990": 215, "12992": 215, "12994": 215, "12996": 215, "12998": 215, "13000": 215, "13002": 215, "13004": 215, "13006": 215, "13008": 215, "13010": 215, "13012": 215, "13014": 215, "13016": 215, "13018": 215, "13020": 215, "13022": 215, "13024": 215, "13026": 215, "13028": 215, "13030": 215, "13032": 215, "13034": 215, "13036": 215, "13038": 215, "13040": 215, "13042": 215, "13044": 215, "13046": 215, "13048": 215, "13050": 215, "13052": 215, "13054": 215, "13056": 215, "13058": 215, "13060": 215, "13062": 215, "13064": 215, "13066": 215, "13068": 215, "13070": 215, "13072": 215, "13074": 215, "13076": 215, "13078": 215, "13080": 215, "13082": 215, "13084": 215, "13086": 215, "13088": 215, "13090": 215, "13092": 215, "13094": 215, "13096": 215, "13098": 215, "13100": 215, "13102": 215, "13104": 215, "13106": 215, "13108": 215, "13110": 215, "13112": 215, "13114": 215, "13116": 215, "13118": 215, "13120": 215, "13122": 215, "13124": 215, "13126": 215, "13128": 215, "13130": 215, "13132": 215, "13134": 215, "13136": 215, "13138": 215, "13140": 215, "13142": 215, "13144": 215, "13146": 215, "13148": 215, "13150": 215, "13152": 215, "13154": 215, "13156": 215, "13158": 215, "13160": 215, "13162": 215, "13164": 215, "13166": 215, "13168": 215, "13170": 215, "13172": 215, "13174": 215, "13176": 215, "13178": 215, "13180": 215, "13182": 215, "13184": 215, "13186": 215, "13188": 215, "13190": 215, "13192": 215, "13194": 215, "13196": 215, "13198": 215, "13200": 215, "13202": 215, "13204": 215, "13206": 215, "13208": 215, "13210": 215, "13212": 215, "13214": 215, "13216": 215, "13218": 215, "13220": 215, "13222": 215, "13224": 215, "13226": 215, "13228": 215, "13230": 215, "13232": 215, "13234": 215, "13236": 215, "13238": 215, "13240": 215, "13242": 215, "13244": 215, "13246": 215, "13248": 215, "13250": 215, "13252": 215, "13254": 215, "13256": 215, "13258": 215, "13260": 215, "13262": 215, "13264": 215, "13266": 215, "13268": 215, "13270": 215, "13272": 215, "13274": 215, "13276": 215, "13278": 215, "13280": 215, "13282": 215, "13284": 215, "13286": 215, "13288": 215, "13290": 215, "13292": 215, "13294": 215, "13296": 215, "13298": 215, "13300": 215, "13302": 215, "13304": 215, "13306": 215, "13308": 215, "13310": 215, "13312": 215, "13314": 215, "13316": 215, "13318": 215, "13320": 215, "13322": 215, "13324": 215, "13326": 215, "13328": 215, "13330": 215, "13332": 215, "13334": 215, "13336": 215, "13338": 215, "13340": 215, "13342": 215, "13344": 215, "13346": 215, "13348": 215, "13350": 215, "13352": 215, "13354": 215, "13356": 215, "13358": 215, "13360": 215, "13362": 215, "13364": 215, "13366": 215, "13368": 215, "13370": 215, "13372": 215, "13374": 215, "13376": 215, "13378": 215, "13380": 215, "13382": 215, "13384": 215, "13386": 215, "13388": 215, "13390": 215, "13392": 215, "13394": 215, "13396": 215, "13398": 215, "13400": 215, "13402": 215, "13404": 215, "13406": 215, "13408": 215, "13410": 215, "13412": 215, "13414": 215, "13416": 215, "13418": 215, "13420": 215, "13422": 215, "13424": 215, "13426": 215, "13428": 215, "13430": 215, "13432": 215, "13434": 215, "13436": 215, "13438": 215, "13440": 215, "13442": 215, "13444": 215, "13446": 215, "13448": 215, "13450": 215, "13452": 215, "13454": 215, "13456": 215, "13458": 215, "13460": 215, "13462": 215, "13464": 215, "13466": 215, "13468": 215, "13470": 215, "13472": 215, "13474": 215, "13476": 215, "13478": 215, "13480": 215, "13482": 215, "13484": 215, "13486": 215, "13488": 215, "13490": 215, "13492": 215, "13494": 215, "13496": 215, "13498": 215, "13502": 215, "13504": 215, "13506": 215, "13508": 215, "13510": 215, "13512": 215, "13514": 215, "13516": 215, "13518": 215, "13520": 215, "13522": 215, "13524": 215, "13526": 215, "13528": 215, "13530": 215, "13532": 215, "13534": 215, "13536": 215, "13538": 215, "13540": 215, "13542": 215, "13544": 215, "13546": 215, "13548": 215, "13550": 215, "13552": 215, "13554": 215, "13556": 215, "13558": 215, "13560": 215, "13562": 215, "13564": 215, "13566": 215, "13568": 215, "13570": 215, "13572": 215, "13574": 215, "13576": 215, "13578": 215, "13580": 215, "13582": 215, "13584": 215, "13586": 215, "13588": 215, "13590": 215, "13592": 215, "13594": 215, "13596": 215, "13598": 215, "13600": 215, "13602": 215, "13604": 215, "13606": 215, "13608": 215, "13610": 215, "13612": 215, "13614": 215, "13616": 215, "13618": 215, "13620": 215, "13622": 215, "13624": 215, "13626": 215, "13628": 215, "13630": 215, "13632": 215, "13634": 215, "13636": 215, "13638": 215, "13640": 215, "13642": 215, "13644": 215, "13646": 215, "13648": 215, "13650": 215, "13652": 215, "13654": 215, "13656": 215, "13658": 215, "13660": 215, "13662": 215, "13664": 215, "13666": 215, "13668": 215, "13670": 215, "13672": 215, "13674": 215, "13676": 215, "13678": 215, "13680": 215, "13682": 215, "13684": 215, "13686": 215, "13688": 215, "13690": 215, "13692": 215, "13694": 215, "13696": 215, "13698": 215, "13700": 215, "13702": 215, "13704": 215, "13706": 215, "13708": 215, "13710": 215, "13712": 215, "13714": 215, "13716": 215, "13718": 215, "13720": 215, "13722": 215, "13724": 215, "13726": 215, "13728": 215, "13730": 215, "13732": 215, "13734": 215, "13736": 215, "13738": 215, "13740": 215, "13742": 215, "13744": 215, "13746": 215, "13748": 215, "13750": 215, "13752": 215, "13754": 215, "13756": 215, "13758": 215, "13760": 215, "13762": 215, "13764": 215, "13766": 215, "13768": 215, "13770": 215, "13772": 215, "13774": 215, "13776": 215, "13778": 215, "13780": 215, "13782": 215, "13784": 215, "13786": 215, "13788": 215, "13790": 215, "13792": 215, "13794": 215, "13796": 215, "13798": 215, "13800": 215, "13802": 215, "13804": 215, "13806": 215, "13808": 215, "13810": 215, "13812": 215, "13814": 215, "13816": 215, "13818": 215, "13820": 215, "13822": 215, "13824": 215, "13826": 215, "13828": 215, "13830": 215, "13832": 215, "13834": 215, "13836": 215, "13838": 215, "13840": 215, "13842": 215, "13844": 215, "13846": 215, "13848": 215, "13850": 215, "13852": 215, "13854": 215, "13856": 215, "13858": 215, "13860": 215, "13862": 215, "13864": 215, "13866": 215, "13868": 215, "13870": 215, "13872": 215, "13874": 215, "13876": 215, "13878": 215, "13880": 215, "13882": 215, "13884": 215, "13886": 215, "13888": 215, "13890": 215, "13892": 215, "13894": 215, "13896": 215, "13898": 215, "13900": 215, "13902": 215, "13904": 215, "13906": 215, "13908": 215, "13910": 215, "13912": 215, "13914": 215, "13916": 215, "13918": 215, "13920": 215, "13922": 215, "13924": 215, "13926": 215, "13928": 215, "13930": 215, "13932": 215, "13934": 215, "13936": 215, "13938": 215, "13940": 215, "13942": 215, "13944": 215, "13946": 215, "13948": 215, "13950": 215, "13952": 215, "13954": 215, "13956": 215, "13958": 215, "13960": [215, 916], "13962": 215, "13964": 215, "13966": 215, "13968": 215, "13970": 215, "13972": 215, "13974": 215, "13976": 215, "13978": 215, "13980": 215, "13982": 215, "13984": 215, "13986": 215, "13988": 215, "13990": 215, "13992": 215, "13994": 215, "13996": 215, "13998": 215, "14000": 215, "14002": 215, "14004": 215, "14006": 215, "14008": 215, "14010": 215, "14012": 215, "14014": 215, "14016": 215, "14018": 215, "14020": 215, "14022": 215, "14024": 215, "14026": 215, "14028": 215, "14030": 215, "14032": 215, "14034": 215, "14036": 215, "14038": 215, "14040": 215, "14042": 215, "14044": 215, "14046": 215, "14048": 215, "14050": 215, "14052": 215, "14054": 215, "14056": 215, "14058": 215, "14060": 215, "14062": 215, "14064": 215, "14066": 215, "14068": 215, "14070": 215, "14072": 215, "14074": 215, "14076": 215, "14078": 215, "14080": 215, "14082": 215, "14084": 215, "14086": 215, "14088": 215, "14090": 215, "14092": 215, "14094": 215, "14096": 215, "14098": 215, "14100": 215, "14102": 215, "14104": 215, "14106": 215, "14108": 215, "14110": 215, "14112": 215, "14114": 215, "14116": 215, "14118": 215, "14120": 215, "14122": 215, "14124": 215, "14126": 215, "14128": 215, "14130": 215, "14132": 215, "14134": 215, "14136": 215, "14138": 215, "14140": 215, "14142": 215, "14144": 215, "14146": 215, "14148": 215, "14150": 215, "14152": 215, "14154": 215, "14156": 215, "14158": 215, "14160": 215, "14162": 215, "14164": 215, "14166": 215, "14168": 215, "14170": 215, "14172": 215, "14174": 215, "14176": 215, "14178": 215, "14180": 215, "14182": 215, "14184": 215, "14186": 215, "14188": 215, "14190": 215, "14192": 215, "14194": 215, "14196": 215, "14198": 215, "14200": 215, "14202": 215, "14204": 215, "14206": 215, "14208": 215, "14210": 215, "14212": 215, "14214": 215, "14216": 215, "14218": 215, "14220": 215, "14222": 215, "14224": 215, "14226": 215, "14228": 215, "14230": 215, "14232": 215, "14234": 215, "14236": 215, "14238": 215, "14240": 215, "14242": 215, "14244": 215, "14246": 215, "14248": 215, "14250": 215, "14252": 215, "14254": 215, "14256": 215, "14258": 215, "14260": 215, "14262": 215, "14264": 215, "14266": 215, "14268": 215, "14270": 215, "14272": 215, "14274": 215, "14276": 215, "14278": 215, "14280": 215, "14282": 215, "14284": 215, "14286": 215, "14288": 215, "14290": 215, "14292": 215, "14294": 215, "14296": 215, "14298": 215, "14300": 215, "14302": 215, "14304": 215, "14306": 215, "14308": 215, "14310": 215, "14312": 215, "14314": 215, "14316": 215, "14318": 215, "14320": 215, "14322": 215, "14324": 215, "14326": 215, "14328": 215, "14330": 215, "14332": 215, "14334": 215, "14336": 215, "14338": 215, "14340": 215, "14342": 215, "14344": 215, "14346": 215, "14348": 215, "14350": 215, "14352": 215, "14354": 215, "14356": 215, "14358": 215, "14360": 215, "14362": 215, "14364": 215, "14366": 215, "14368": 215, "14370": 215, "14372": 215, "14374": 215, "14376": 215, "14378": 215, "14380": 215, "14382": 215, "14384": 215, "14388": 215, "14390": 215, "14392": 215, "14394": 215, "14396": 215, "14398": 215, "14400": 215, "14402": 215, "14404": 215, "14406": 215, "14408": 215, "14410": 215, "14412": 215, "14414": 215, "14416": 215, "14418": 215, "14420": 215, "14422": 215, "14424": 215, "14426": 215, "14428": 215, "14430": 215, "14432": 215, "14434": 215, "14436": 215, "14438": 215, "14440": 215, "14442": 215, "14444": 215, "14446": 215, "14448": 215, "14450": 215, "14452": 215, "14454": 215, "14456": 215, "14458": 215, "14460": 215, "14462": 215, "14464": 215, "14466": 215, "14468": 215, "14470": 215, "14472": 215, "14474": 215, "14476": 215, "14478": 215, "14480": 215, "14482": 215, "14484": 215, "14486": 215, "14488": 215, "14490": 215, "14492": 215, "14494": 215, "14496": 215, "14498": 215, "14500": 215, "14502": 215, "14504": 215, "14506": 215, "14508": 215, "14510": 215, "14512": 215, "14514": 215, "14516": 215, "14518": 215, "14520": 215, "14522": 215, "14524": 215, "14526": 215, "14528": 215, "14530": 215, "14532": 215, "14534": 215, "14536": 215, "14538": 215, "14540": 215, "14542": 215, "14544": 215, "14546": 215, "14548": 215, "14550": 215, "14552": 215, "14554": 215, "14556": 215, "14558": 215, "14560": 215, "14562": 215, "14564": 215, "14566": 215, "14568": 215, "14570": 215, "14572": 215, "14574": 215, "14576": 215, "14578": 215, "14580": 215, "14582": 215, "14584": 215, "14586": 215, "14588": 215, "14590": 215, "14592": 215, "14594": 215, "14596": 215, "14598": 215, "14600": 215, "14602": 215, "14604": 215, "14606": 215, "14608": 215, "14610": 215, "14612": 215, "14614": 215, "14616": 215, "14618": 215, "14620": 215, "14622": 215, "14624": 215, "14626": 215, "14628": 215, "14630": 215, "14632": 215, "14634": 215, "14636": 215, "14638": 215, "14640": 215, "14642": 215, "14644": 215, "14646": 215, "14648": 215, "14650": 215, "14652": 215, "14654": 215, "14656": 215, "14658": 215, "14660": 215, "14662": 215, "14664": 215, "14666": 215, "14668": 215, "14670": 215, "14672": 215, "14674": 215, "14676": 215, "14678": 215, "14680": 215, "14682": 215, "14684": 215, "14686": 215, "14688": 215, "14690": 215, "14692": 215, "14694": 215, "14696": 215, "14698": 215, "14700": 215, "14702": 215, "14704": 215, "14706": 215, "14708": 215, "14710": 215, "14712": 215, "14714": 215, "14716": 215, "14718": 215, "14720": 215, "14722": 215, "14724": 215, "14726": 215, "14728": 215, "14730": 215, "14732": 215, "14734": 215, "14736": 215, "14738": 215, "14740": 215, "14742": 215, "14744": 215, "14746": 215, "14748": 215, "14750": 215, "14752": 215, "14754": 215, "14756": 215, "14758": 215, "14760": 215, "14762": 215, "14764": 215, "14766": 215, "14768": 215, "14770": 215, "14772": 215, "14774": 215, "14776": 215, "14778": 215, "14780": 215, "14782": 215, "14784": 215, "14786": 215, "14788": 215, "14790": 215, "14792": 215, "14794": 215, "14796": 215, "14798": 215, "14800": 215, "14802": 215, "14804": 215, "14806": 215, "14808": 215, "14810": 215, "14812": 215, "14814": 215, "14816": 215, "14818": 215, "14820": 215, "14822": 215, "14824": 215, "14826": 215, "14828": 215, "14830": 215, "14832": 215, "14834": 215, "14836": 215, "14838": 215, "14840": 215, "14842": 215, "14844": 215, "14846": 215, "14848": 215, "14850": 215, "14852": 215, "14854": 215, "14856": 215, "14858": 215, "14860": 215, "14862": 215, "14864": 215, "14866": 215, "14868": 215, "14870": 215, "14872": 215, "14874": 215, "14876": 215, "14878": 215, "14880": 215, "14882": [215, 543], "14884": 215, "14886": 215, "14888": 215, "14890": 215, "14892": 215, "14894": 215, "14896": 215, "14898": 215, "14900": 215, "14902": 215, "14904": 215, "14906": 215, "14908": 215, "14910": 215, "14912": 215, "14914": 215, "14916": 215, "14918": 215, "14920": 215, "14922": 215, "14924": 215, "14926": 215, "14928": 215, "14930": 215, "14932": 215, "14934": 215, "14936": 215, "14938": 215, "14940": 215, "14942": 215, "14944": 215, "14946": 215, "14948": 215, "14950": 215, "14952": 215, "14954": 215, "14956": 215, "14958": 215, "14960": 215, "14962": 215, "14964": 215, "14966": 215, "14968": 215, "14970": 215, "14972": 215, "14974": 215, "14976": 215, "14978": 215, "14980": 215, "14982": 215, "14984": 215, "14986": 215, "14988": 215, "14990": [215, 264], "14992": 215, "14994": 215, "14996": 215, "14998": 215, "15002": 215, "15004": 215, "15006": 215, "15008": 215, "15010": 215, "15012": 215, "15014": 215, "15016": 215, "15018": 215, "15020": 215, "15022": 215, "15024": 215, "15026": 215, "15028": 215, "15030": 215, "15032": 215, "15034": 215, "15036": 215, "15038": 215, "15040": 215, "15042": 215, "15044": 215, "15046": 215, "15048": 215, "15050": 215, "15052": 215, "15054": 215, "15056": 215, "15058": 215, "15060": 215, "15062": 215, "15064": 215, "15066": 215, "15068": 215, "15070": 215, "15072": 215, "15074": 215, "15076": 215, "15078": 215, "15080": 215, "15082": 215, "15084": 215, "15086": 215, "15088": 215, "15090": 215, "15092": 215, "15094": 215, "15096": 215, "15098": 215, "15100": 215, "15102": 215, "15104": 215, "15106": 215, "15108": 215, "15110": 215, "15112": 215, "15114": 215, "15116": 215, "15118": 215, "15120": 215, "15122": 215, "15124": 215, "15126": 215, "15128": 215, "15130": 215, "15132": 215, "15134": 215, "15136": 215, "15138": 215, "15140": 215, "15142": 215, "15144": 215, "15146": 215, "15148": 215, "15150": 215, "15152": 215, "15154": 215, "15156": 215, "15158": 215, "15160": 215, "15162": 215, "15164": 215, "15166": 215, "15168": 215, "15170": 215, "15172": 215, "15174": 215, "15176": 215, "15178": 215, "15180": 215, "15182": 215, "15184": 215, "15186": 215, "15188": 215, "15190": 215, "15192": 215, "15194": 215, "15196": 215, "15198": 215, "15200": 215, "15202": 215, "15204": 215, "15206": 215, "15208": 215, "15210": 215, "15212": 215, "15214": 215, "15216": 215, "15218": 215, "15220": 215, "15222": 215, "15224": 215, "15226": 215, "15228": 215, "15230": 215, "15232": 215, "15234": 215, "15236": 215, "15238": 215, "15240": 215, "15242": 215, "15244": [215, 961], "15246": 215, "15248": 215, "15250": 215, "15252": 215, "15254": 215, "15256": 215, "15258": 215, "15260": 215, "15262": 215, "15264": 215, "15266": 215, "15268": 215, "15270": 215, "15272": 215, "15274": 215, "15276": 215, "15278": 215, "15280": 215, "15282": 215, "15284": 215, "15286": 215, "15288": 215, "15290": 215, "15292": 215, "15294": 215, "15296": 215, "15298": 215, "15300": 215, "15302": 215, "15304": 215, "15306": 215, "15308": 215, "15310": 215, "15312": 215, "15314": 215, "15316": 215, "15318": 215, "15320": 215, "15322": 215, "15324": 215, "15326": 215, "15328": 215, "15330": 215, "15332": 215, "15334": 215, "15336": 215, "15338": 215, "15340": 215, "15342": 215, "15344": 215, "15346": 215, "15348": 215, "15350": 215, "15352": 215, "15354": 215, "15356": 215, "15358": 215, "15360": 215, "15362": 215, "15364": 215, "15366": 215, "15368": 215, "15370": 215, "15372": 215, "15374": 215, "15376": 215, "15378": 215, "15380": 215, "15382": 215, "15384": 215, "15386": 215, "15388": 215, "15390": 215, "15392": 215, "15394": 215, "15396": 215, "15398": 215, "15400": 215, "15402": 215, "15404": 215, "15406": 215, "15408": 215, "15410": 215, "15412": 215, "15414": 215, "15416": 215, "15418": 215, "15420": 215, "15422": 215, "15424": 215, "15426": 215, "15428": 215, "15430": 215, "15432": 215, "15434": 215, "15436": 215, "15438": 215, "15440": 215, "15442": 215, "15444": 215, "15446": 215, "15448": 215, "15450": 215, "15452": 215, "15454": 215, "15456": 215, "15458": 215, "15460": 215, "15462": 215, "15464": 215, "15466": 215, "15468": 215, "15470": 215, "15472": 215, "15474": 215, "15476": 215, "15478": 215, "15480": 215, "15482": 215, "15484": 215, "15486": 215, "15488": 215, "15490": 215, "15492": 215, "15494": 215, "15496": 215, "15498": 215, "15500": 215, "15502": 215, "15504": 215, "15506": 215, "15508": 215, "15510": 215, "15512": 215, "15514": 215, "15516": 215, "15518": 215, "15520": 215, "15522": 215, "15524": 215, "15526": 215, "15528": 215, "15530": 215, "15532": 215, "15534": 215, "15536": 215, "15538": 215, "15540": 215, "15542": 215, "15544": 215, "15546": 215, "15548": 215, "15550": 215, "15552": 215, "15554": 215, "15556": 215, "15558": 215, "15560": 215, "15562": 215, "15564": 215, "15566": 215, "15568": 215, "15570": 215, "15572": 215, "15574": 215, "15576": 215, "15578": 215, "15580": 215, "15582": 215, "15584": 215, "15586": 215, "15588": 215, "15590": 215, "15592": 215, "15594": 215, "15596": 215, "15598": 215, "15600": 215, "15602": 215, "15604": 215, "15606": 215, "15608": 215, "15610": 215, "15612": 215, "15614": 215, "15616": 215, "15618": 215, "15620": 215, "15622": 215, "15624": 215, "15626": 215, "15628": 215, "15630": 215, "15632": 215, "15634": 215, "15636": 215, "15638": 215, "15640": 215, "15642": 215, "15644": 215, "15646": 215, "15648": 215, "15650": 215, "15652": 215, "15654": 215, "15656": 215, "15658": 215, "15660": 215, "15662": 215, "15664": 215, "15666": 215, "15668": 215, "15670": 215, "15672": 215, "15674": 215, "15676": 215, "15678": 215, "15680": 215, "15682": 215, "15684": 215, "15686": 215, "15688": 215, "15690": 215, "15692": 215, "15694": 215, "15696": 215, "15698": 215, "15700": 215, "15702": 215, "15704": 215, "15706": 215, "15708": 215, "15710": 215, "15712": 215, "15714": 215, "15716": 215, "15718": 215, "15720": 215, "15722": 215, "15724": 215, "15726": 215, "15728": 215, "15730": 215, "15732": 215, "15734": 215, "15736": 215, "15738": 215, "15740": 215, "15742": 215, "15744": 215, "15746": 215, "15748": 215, "15750": 215, "15752": 215, "15754": 215, "15756": 215, "15758": 215, "15760": 215, "15762": 215, "15764": 215, "15766": 215, "15768": 215, "15770": 215, "15772": 215, "15774": 215, "15776": 215, "15778": 215, "15780": 215, "15782": 215, "15784": 215, "15786": 215, "15788": 215, "15790": 215, "15792": 215, "15794": 215, "15796": 215, "15798": 215, "15800": 215, "15802": 215, "15804": 215, "15806": 215, "15808": 215, "15810": 215, "15812": 215, "15814": 215, "15816": 215, "15818": 215, "15820": 215, "15822": 215, "15824": 215, "15826": 215, "15828": 215, "15830": 215, "15832": 215, "15834": 215, "15836": 215, "15838": 215, "15840": 215, "15842": 215, "15844": 215, "15846": 215, "15848": 215, "15850": 215, "15852": 215, "15854": 215, "15856": 215, "15858": 215, "15860": 215, "15862": 215, "15864": 215, "15866": 215, "15868": 215, "15870": 215, "15872": 215, "15874": 215, "15876": 215, "15878": 215, "15880": 215, "15882": 215, "15884": 215, "15886": 215, "15888": 215, "15890": 215, "15892": 215, "15894": 215, "15896": 215, "15898": 215, "15900": 215, "15902": 215, "15904": 215, "15906": 215, "15908": 215, "15910": 215, "15912": 215, "15914": 215, "15916": 215, "15918": 215, "15920": 215, "15922": 215, "15924": 215, "15926": 215, "15928": 215, "15930": 215, "15932": 215, "15934": 215, "15936": 215, "15938": 215, "15940": 215, "15942": 215, "15944": 215, "15946": 215, "15948": 215, "15950": 215, "15952": 215, "15954": 215, "15956": 215, "15958": 215, "15960": 215, "15962": 215, "15964": 215, "15966": 215, "15968": 215, "15970": 215, "15972": 215, "15974": 215, "15976": 215, "15978": 215, "15980": 215, "15982": 215, "15984": 215, "15986": 215, "15988": 215, "15990": 215, "15992": 215, "15994": 215, "15996": 215, "15998": 215, "16000": 215, "16002": 215, "16004": 215, "16006": 215, "16008": 215, "16010": 215, "16012": 215, "16014": 215, "16016": 215, "16018": 215, "16020": 215, "16022": 215, "16024": 215, "16026": 215, "16028": 215, "16030": 215, "16032": 215, "16034": 215, "16036": 215, "16038": 215, "16040": 215, "16042": 215, "16044": 215, "16046": 215, "16048": 215, "16050": 215, "16052": 215, "16054": 215, "16056": 215, "16058": 215, "16060": 215, "16062": 215, "16064": 215, "16066": 215, "16068": 215, "16070": 215, "16072": 215, "16074": 215, "16076": 215, "16078": 215, "16080": 215, "16082": 215, "16084": 215, "16086": 215, "16088": 215, "16090": 215, "16092": 215, "16094": 215, "16096": 215, "16098": 215, "16100": 215, "16102": 215, "16104": 215, "16106": 215, "16108": 215, "16110": 215, "16112": 215, "16114": 215, "16116": 215, "16118": 215, "16120": 215, "16122": 215, "16124": 215, "16126": 215, "16128": 215, "16130": 215, "16132": 215, "16134": 215, "16136": 215, "16138": 215, "16140": 215, "16142": 215, "16144": 215, "16146": 215, "16148": 215, "16150": 215, "16152": 215, "16154": 215, "16156": 215, "16158": 215, "16160": 215, "16162": 215, "16164": 215, "16166": 215, "16168": 215, "16170": 215, "16172": 215, "16174": 215, "16176": 215, "16178": 215, "16180": 215, "16182": 215, "16184": 215, "16186": 215, "16188": 215, "16190": 215, "16192": 215, "16194": 215, "16196": 215, "16198": 215, "16200": 215, "16202": 215, "16204": 215, "16206": 215, "16208": 215, "16210": 215, "16212": 215, "16214": 215, "16216": 215, "16218": 215, "16220": 215, "16222": 215, "16224": 215, "16226": 215, "16228": 215, "16230": 215, "16232": 215, "16234": 215, "16236": 215, "16238": 215, "16240": 215, "16242": 215, "16244": 215, "16246": 215, "16248": 215, "16250": 215, "16252": 215, "16254": 215, "16256": 215, "16258": 215, "16260": 215, "16262": 215, "16264": 215, "16266": 215, "16268": 215, "16270": 215, "16272": 215, "16274": 215, "16276": 215, "16278": 215, "16280": 215, "16282": 215, "16284": 215, "16286": 215, "16288": 215, "16290": 215, "16292": 215, "16294": 215, "16296": 215, "16298": 215, "16300": 215, "16302": 215, "16304": 215, "16306": 215, "16308": 215, "16310": 215, "16312": 215, "16314": 215, "16316": 215, "16318": 215, "16320": 215, "16322": 215, "16324": 215, "16326": 215, "16328": 215, "16330": 215, "16332": 215, "16334": 215, "16336": 215, "16338": 215, "16340": 215, "16342": 215, "16344": 215, "16346": 215, "16348": 215, "16350": 215, "16352": 215, "16354": 215, "16356": 215, "16358": 215, "16360": 215, "16362": 215, "16364": 215, "16366": 215, "16368": 215, "16370": 215, "16372": 215, "16374": 215, "16376": 215, "16378": 215, "16380": 215, "16382": 215, "16386": 215, "16388": 215, "16390": 215, "16392": 215, "16394": 215, "16396": 215, "16398": 215, "16400": 215, "16402": 215, "16404": 215, "16406": 215, "16408": 215, "16410": 215, "16412": 215, "16414": 215, "16416": 215, "16418": 215, "16420": 215, "16422": 215, "16424": 215, "16426": 215, "16428": 215, "16430": 215, "16432": 215, "16434": 215, "16436": 215, "16438": 215, "16440": 215, "16442": 215, "16444": 215, "16446": 215, "16448": 215, "16450": 215, "16452": 215, "16454": 215, "16456": 215, "16458": 215, "16460": 215, "16462": 215, "16464": 215, "16466": 215, "16468": 215, "16470": 215, "16472": 215, "16474": 215, "16476": 215, "16478": 215, "16480": 215, "16482": 215, "16484": 215, "16486": 215, "16488": 215, "16490": 215, "16492": 215, "16494": 215, "16496": 215, "16498": 215, "16500": 215, "16502": 215, "16504": 215, "16506": 215, "16508": 215, "16510": 215, "16512": 215, "16514": 215, "16516": 215, "16518": 215, "16520": 215, "16522": 215, "16524": 215, "16526": 215, "16528": 215, "16530": 215, "16532": 215, "16534": 215, "16536": 215, "16538": 215, "16540": 215, "16542": 215, "16544": 215, "16546": 215, "16548": 215, "16550": 215, "16552": 215, "16554": 215, "16556": 215, "16558": 215, "16560": 215, "16562": 215, "16564": 215, "16566": 215, "16568": 215, "16570": 215, "16572": 215, "16574": 215, "16576": 215, "16578": 215, "16580": 215, "16582": 215, "16584": 215, "16586": 215, "16588": 215, "16590": 215, "16592": 215, "16594": 215, "16596": 215, "16598": 215, "16600": 215, "16602": 215, "16604": 215, "16606": 215, "16608": 215, "16610": 215, "16612": 215, "16614": 215, "16616": 215, "16618": 215, "16620": 215, "16622": 215, "16624": 215, "16626": 215, "16628": 215, "16630": 215, "16632": 215, "16634": 215, "16636": 215, "16638": 215, "16640": 215, "16642": 215, "16644": 215, "16646": 215, "16648": 215, "16650": 215, "16652": 215, "16654": 215, "16656": 215, "16658": 215, "16660": 215, "16662": 215, "16664": 215, "16666": 215, "16668": 215, "16670": 215, "16672": 215, "16674": 215, "16676": 215, "16678": 215, "16680": 215, "16682": 215, "16684": 215, "16686": 215, "16688": 215, "16690": 215, "16692": 215, "16694": 215, "16696": 215, "16698": 215, "16700": 215, "16702": 215, "16704": 215, "16706": 215, "16708": 215, "16710": 215, "16712": 215, "16714": 215, "16716": 215, "16718": 215, "16720": 215, "16722": 215, "16724": 215, "16726": 215, "16728": 215, "16730": 215, "16732": 215, "16734": 215, "16736": 215, "16738": 215, "16740": 215, "16742": 215, "16744": 215, "16746": 215, "16748": 215, "16750": 215, "16752": 215, "16754": 215, "16756": 215, "16758": 215, "16760": 215, "16762": 215, "16764": 215, "16766": 215, "16768": 215, "16770": 215, "16772": 215, "16774": 215, "16776": 215, "16778": 215, "16780": 215, "16782": 215, "16784": 215, "16786": 215, "16788": 215, "16790": 215, "16792": 215, "16794": 215, "16796": 215, "16798": 215, "16800": 215, "16802": 215, "16804": 215, "16806": 215, "16808": 215, "16810": 215, "16812": 215, "16814": 215, "16816": 215, "16818": 215, "16820": 215, "16822": 215, "16824": 215, "16826": 215, "16828": 215, "16830": 215, "16832": 215, "16834": 215, "16836": 215, "16838": 215, "16840": 215, "16842": 215, "16844": 215, "16846": 215, "16848": 215, "16850": 215, "16852": 215, "16854": 215, "16856": 215, "16858": 215, "16860": 215, "16862": 215, "16864": 215, "16866": 215, "16868": 215, "16870": 215, "16872": 215, "16874": 215, "16876": 215, "16878": 215, "16880": 215, "16882": 215, "16884": 215, "16886": 215, "16888": 215, "16890": 215, "16892": 215, "16894": 215, "16896": 215, "16898": 215, "16900": 215, "16902": 215, "16904": 215, "16906": 215, "16908": 215, "16910": 215, "16912": 215, "16914": 215, "16916": 215, "16918": 215, "16920": 215, "16922": 215, "16924": 215, "16926": 215, "16928": 215, "16930": 215, "16932": 215, "16934": 215, "16936": 215, "16938": 215, "16940": 215, "16942": 215, "16944": 215, "16946": 215, "16948": 215, "16950": 215, "16952": 215, "16954": 215, "16956": 215, "16958": 215, "16960": 215, "16962": 215, "16964": 215, "16966": 215, "16968": 215, "16970": 215, "16972": 215, "16974": 215, "16976": 215, "16978": 215, "16980": 215, "16982": 215, "16984": 215, "16986": 215, "16988": 215, "16990": 215, "16992": 215, "16994": 215, "16996": 215, "16998": 215, "17000": 215, "17002": 215, "17004": 215, "17006": 215, "17008": 215, "17010": 215, "17012": 215, "17014": 215, "17016": 215, "17018": 215, "17020": 215, "17022": 215, "17024": 215, "17026": 215, "17028": 215, "17030": 215, "17032": 215, "17034": 215, "17036": 215, "17038": 215, "17040": 215, "17042": 215, "17044": 215, "17046": 215, "17048": 215, "17050": 215, "17052": 215, "17054": 215, "17056": 215, "17058": 215, "17060": 215, "17062": 215, "17064": 215, "17066": 215, "17068": 215, "17070": 215, "17072": 215, "17074": 215, "17076": 215, "17078": 215, "17080": 215, "17082": 215, "17084": 215, "17086": 215, "17088": 215, "17090": 215, "17092": 215, "17094": 215, "17096": 215, "17098": 215, "17100": 215, "17102": 215, "17104": 215, "17106": 215, "17108": 215, "17110": 215, "17112": 215, "17114": 215, "17116": 215, "17118": 215, "17120": 215, "17122": 215, "17124": 215, "17126": [215, 264], "17128": 215, "17130": 215, "17132": 215, "17134": 215, "17136": 215, "17138": 215, "17140": 215, "17142": 215, "17144": 215, "17146": 215, "17148": 215, "17150": 215, "17152": 215, "17154": 215, "17156": 215, "17158": 215, "17160": 215, "17162": 215, "17164": 215, "17166": 215, "17168": 215, "17170": 215, "17172": 215, "17174": 215, "17176": 215, "17178": 215, "17180": 215, "17182": 215, "17184": 215, "17186": 215, "17188": 215, "17190": 215, "17192": 215, "17194": 215, "17196": 215, "17198": 215, "17200": 215, "17202": 215, "17204": 215, "17206": 215, "17208": 215, "17210": 215, "17212": 215, "17214": 215, "17216": 215, "17218": 215, "17220": 215, "17222": 215, "17224": 215, "17226": 215, "17228": 215, "17230": 215, "17232": 215, "17234": 215, "17236": 215, "17238": 215, "17240": 215, "17242": 215, "17244": 215, "17246": 215, "17248": 215, "17250": 215, "17252": 215, "17254": 215, "17256": 215, "17258": 215, "17260": 215, "17262": 215, "17264": 215, "17266": 215, "17268": 215, "17270": 215, "17272": 215, "17274": 215, "17276": 215, "17278": 215, "17280": 215, "17282": 215, "17284": 215, "17286": 215, "17288": 215, "17290": 215, "17292": 215, "17294": 215, "17296": 215, "17298": 215, "17300": 215, "17302": 215, "17304": 215, "17306": 215, "17308": 215, "17310": 215, "17312": 215, "17314": 215, "17316": 215, "17318": 215, "17320": 215, "17322": 215, "17324": 215, "17326": 215, "17328": 215, "17330": 215, "17332": 215, "17334": 215, "17336": 215, "17338": 215, "17340": 215, "17342": 215, "17344": 215, "17346": 215, "17348": 215, "17350": 215, "17352": 215, "17354": 215, "17356": 215, "17358": 215, "17360": 215, "17362": 215, "17364": 215, "17366": 215, "17368": 215, "17370": 215, "17372": 215, "17374": 215, "17376": 215, "17378": 215, "17380": 215, "17382": 215, "17384": 215, "17386": 215, "17388": 215, "17390": 215, "17392": 215, "17394": 215, "17396": 215, "17398": 215, "17400": 215, "17402": 215, "17404": 215, "17406": 215, "17408": 215, "17410": 215, "17412": 215, "17414": 215, "17416": 215, "17418": 215, "17420": 215, "17422": 215, "17424": 215, "17426": 215, "17428": 215, "17430": 215, "17432": 215, "17434": 215, "17436": 215, "17438": 215, "17440": 215, "17442": 215, "17444": 215, "17446": 215, "17448": 215, "17450": 215, "17452": 215, "17454": 215, "17456": 215, "17458": 215, "17460": 215, "17462": 215, "17464": 215, "17466": 215, "17468": 215, "17470": 215, "17472": 215, "17474": 215, "17476": 215, "17478": 215, "17480": 215, "17482": 215, "17484": 215, "17486": 215, "17488": 215, "17490": 215, "17492": 215, "17494": 215, "17496": 215, "17498": 215, "17500": 215, "17502": 215, "17504": 215, "17506": 215, "17508": 215, "17510": 215, "17512": 215, "17514": 215, "17516": 215, "17518": 215, "17520": 215, "17522": 215, "17524": 215, "17526": 215, "17528": 215, "17530": 215, "17532": 215, "17534": 215, "17536": 215, "17538": 215, "17540": 215, "17542": 215, "17544": 215, "17546": 215, "17548": 215, "17550": 215, "17552": 215, "17554": 215, "17556": 215, "17558": 215, "17560": 215, "17562": 215, "17564": 215, "17566": 215, "17568": 215, "17570": 215, "17572": 215, "17574": 215, "17576": 215, "17578": 215, "17580": 215, "17582": 215, "17584": 215, "17586": 215, "17588": 215, "17590": 215, "17592": 215, "17594": 215, "17596": 215, "17598": 215, "17600": 215, "17602": 215, "17604": 215, "17606": 215, "17608": 215, "17610": 215, "17612": 215, "17614": 215, "17616": 215, "17618": 215, "17620": 215, "17622": 215, "17624": 215, "17626": 215, "17628": 215, "17630": 215, "17632": 215, "17634": 215, "17636": 215, "17638": 215, "17640": 215, "17642": 215, "17644": 215, "17646": 215, "17648": 215, "17650": 215, "17652": 215, "17654": 215, "17656": 215, "17658": 215, "17660": 215, "17662": 215, "17664": 215, "17666": 215, "17668": 215, "17670": 215, "17672": 215, "17674": 215, "17676": 215, "17678": 215, "17680": 215, "17682": 215, "17684": 215, "17686": 215, "17688": 215, "17690": 215, "17692": 215, "17694": 215, "17696": 215, "17698": 215, "17700": 215, "17702": 215, "17704": 215, "17706": 215, "17708": 215, "17710": 215, "17712": 215, "17714": 215, "17716": 215, "17718": 215, "17720": 215, "17722": 215, "17724": 215, "17726": 215, "17728": 215, "17730": 215, "17732": 215, "17734": 215, "17736": 215, "17738": 215, "17740": 215, "17742": 215, "17744": 215, "17746": 215, "17748": 215, "17750": 215, "17752": 215, "17754": 215, "17756": 215, "17758": 215, "17760": 215, "17762": 215, "17764": 215, "17766": 215, "17768": 215, "17770": 215, "17772": 215, "17774": 215, "17776": 215, "17778": 215, "17780": 215, "17782": 215, "17784": 215, "17786": 215, "17788": 215, "17790": 215, "17792": 215, "17794": 215, "17796": 215, "17798": 215, "17800": 215, "17802": 215, "17804": 215, "17806": 215, "17808": 215, "17810": 215, "17812": 215, "17814": 215, "17816": 215, "17818": 215, "17820": 215, "17822": 215, "17824": 215, "17826": 215, "17828": 215, "17830": 215, "17832": 215, "17834": 215, "17836": 215, "17838": 215, "17840": 215, "17842": 215, "17844": 215, "17846": 215, "17848": 215, "17850": 215, "17852": 215, "17854": 215, "17856": 215, "17858": 215, "17860": 215, "17862": 215, "17864": 215, "17866": 215, "17868": 215, "17870": 215, "17872": 215, "17874": 215, "17876": 215, "17878": 215, "17880": 215, "17882": 215, "17884": 215, "17886": 215, "17888": 215, "17890": 215, "17892": 215, "17894": 215, "17896": 215, "17898": 215, "17900": 215, "17902": 215, "17904": 215, "17906": 215, "17908": 215, "17910": 215, "17912": 215, "17914": 215, "17916": 215, "17918": 215, "17920": 215, "17922": 215, "17924": 215, "17926": 215, "17928": 215, "17930": 215, "17932": 215, "17934": 215, "17936": 215, "17938": 215, "17940": 215, "17942": 215, "17944": 215, "17946": 215, "17948": 215, "17950": 215, "17952": 215, "17954": 215, "17956": 215, "17958": 215, "17960": 215, "17962": 215, "17964": 215, "17966": 215, "17968": 215, "17970": 215, "17972": 215, "17974": 215, "17976": 215, "17978": 215, "17980": 215, "17982": 215, "17984": 215, "17986": 215, "17988": 215, "17990": 215, "17992": 215, "17994": 215, "17996": 215, "17998": 215, "18000": [215, 879], "18002": 215, "18004": 215, "18006": 215, "18008": 215, "18010": 215, "18012": 215, "18014": 215, "18016": 215, "18018": 215, "18020": 215, "18022": 215, "18024": 215, "18026": 215, "18028": 215, "18030": 215, "18032": 215, "18034": 215, "18036": 215, "18038": 215, "18040": 215, "18042": 215, "18044": 215, "18046": 215, "18048": 215, "18050": 215, "18052": 215, "18054": 215, "18056": 215, "18058": 215, "18060": 215, "18062": 215, "18064": 215, "18066": 215, "18068": 215, "18070": 215, "18072": 215, "18074": 215, "18076": 215, "18078": 215, "18080": 215, "18082": 215, "18084": 215, "18086": 215, "18088": 215, "18090": 215, "18092": 215, "18094": 215, "18096": 215, "18098": 215, "18100": 215, "18102": 215, "18104": 215, "18106": 215, "18108": 215, "18110": 215, "18112": 215, "18114": 215, "18116": 215, "18118": 215, "18120": 215, "18122": 215, "18124": 215, "18126": 215, "18128": 215, "18130": 215, "18132": 215, "18134": 215, "18136": 215, "18138": 215, "18140": 215, "18142": 215, "18144": 215, "18146": 215, "18148": 215, "18150": 215, "18152": 215, "18154": 215, "18156": 215, "18158": 215, "18160": 215, "18162": 215, "18164": 215, "18166": 215, "18168": 215, "18170": 215, "18172": 215, "18174": 215, "18176": 215, "18178": 215, "18180": 215, "18182": 215, "18184": 215, "18186": 215, "18188": 215, "18190": 215, "18192": 215, "18194": 215, "18196": 215, "18198": 215, "18200": 215, "18202": 215, "18204": 215, "18206": 215, "18208": 215, "18210": 215, "18212": 215, "18214": 215, "18216": 215, "18218": 215, "18220": 215, "18222": 215, "18224": 215, "18226": 215, "18228": 215, "18230": 215, "18232": 215, "18234": 215, "18236": 215, "18238": 215, "18240": 215, "18242": 215, "18244": 215, "18246": 215, "18248": 215, "18250": 215, "18252": 215, "18254": 215, "18256": 215, "18258": 215, "18260": 215, "18262": 215, "18264": 215, "18266": 215, "18268": 215, "18270": 215, "18272": 215, "18274": 215, "18276": 215, "18278": 215, "18280": 215, "18282": 215, "18284": 215, "18286": 215, "18288": 215, "18290": 215, "18292": 215, "18294": 215, "18296": 215, "18298": 215, "18300": 215, "18302": 215, "18304": 215, "18306": 215, "18308": 215, "18310": 215, "18312": 215, "18314": 215, "18316": 215, "18318": 215, "18320": 215, "18322": 215, "18324": 215, "18326": 215, "18328": 215, "18330": 215, "18332": 215, "18334": 215, "18336": 215, "18338": 215, "18340": 215, "18342": 215, "18344": 215, "18346": 215, "18348": 215, "18350": 215, "18352": 215, "18354": 215, "18356": 215, "18358": 215, "18360": 215, "18362": 215, "18364": 215, "18366": 215, "18368": 215, "18370": 215, "18372": 215, "18374": 215, "18376": 215, "18378": 215, "18380": 215, "18382": 215, "18384": [215, 947], "18386": 215, "18388": 215, "18390": 215, "18392": 215, "18394": 215, "18396": 215, "18398": 215, "18400": 215, "18402": 215, "18404": 215, "18406": 215, "18408": 215, "18410": 215, "18412": 215, "18414": 215, "18416": 215, "18418": 215, "18420": 215, "18422": 215, "18424": 215, "18426": 215, "18428": 215, "18430": 215, "18432": 215, "18434": 215, "18436": 215, "18438": 215, "18440": 215, "18442": 215, "18444": 215, "18446": 215, "18448": 215, "18450": 215, "18452": 215, "18454": 215, "18456": 215, "18458": 215, "18460": 215, "18462": 215, "18464": 215, "18466": 215, "18468": 215, "18470": 215, "18472": 215, "18474": 215, "18476": 215, "18478": 215, "18480": 215, "18482": 215, "18484": 215, "18486": 215, "18488": 215, "18490": 215, "18492": 215, "18494": 215, "18496": 215, "18498": 215, "18500": 215, "18502": 215, "18504": 215, "18506": 215, "18508": 215, "18510": 215, "18512": 215, "18514": 215, "18516": 215, "18518": 215, "18520": 215, "18522": 215, "18524": 215, "18526": 215, "18528": 215, "18530": 215, "18532": 215, "18534": 215, "18536": 215, "18538": 215, "18540": 215, "18542": 215, "18544": 215, "18546": 215, "18548": 215, "18550": 215, "18552": 215, "18554": 215, "18556": 215, "18558": 215, "18560": 215, "18562": 215, "18564": 215, "18566": 215, "18568": 215, "18570": 215, "18572": 215, "18574": 215, "18576": 215, "18578": 215, "18580": 215, "18582": 215, "18584": 215, "18586": 215, "18588": 215, "18590": 215, "18592": 215, "18594": 215, "18596": 215, "18598": 215, "18600": 215, "18602": 215, "18604": 215, "18606": 215, "18608": 215, "18610": 215, "18612": 215, "18614": 215, "18616": 215, "18618": 215, "18620": 215, "18622": 215, "18624": 215, "18626": 215, "18628": 215, "18630": 215, "18632": 215, "18634": 215, "18636": 215, "18638": 215, "18640": 215, "18642": 215, "18644": 215, "18646": 215, "18648": 215, "18650": 215, "18652": 215, "18654": 215, "18656": 215, "18658": 215, "18660": 215, "18662": 215, "18664": 215, "18666": 215, "18668": 215, "18670": 215, "18672": 215, "18674": 215, "18676": 215, "18678": 215, "18680": 215, "18682": 215, "18684": 215, "18686": 215, "18688": 215, "18690": 215, "18692": 215, "18694": 215, "18696": 215, "18698": 215, "18700": 215, "18702": 215, "18704": 215, "18706": 215, "18708": 215, "18710": 215, "18712": 215, "18714": 215, "18716": 215, "18718": 215, "18720": 215, "18722": 215, "18724": 215, "18726": 215, "18728": 215, "18730": 215, "18732": 215, "18734": 215, "18736": 215, "18738": 215, "18740": 215, "18742": 215, "18744": 215, "18746": 215, "18748": 215, "18750": 215, "18752": 215, "18754": 215, "18756": 215, "18758": 215, "18760": 215, "18762": 215, "18764": 215, "18766": 215, "18768": 215, "18770": 215, "18772": 215, "18774": 215, "18776": 215, "18778": 215, "18780": 215, "18782": 215, "18784": 215, "18786": 215, "18788": 215, "18790": 215, "18792": 215, "18794": 215, "18796": 215, "18798": 215, "18800": 215, "18802": 215, "18804": 215, "18806": 215, "18808": 215, "18810": 215, "18812": 215, "18814": 215, "18816": 215, "18818": 215, "18820": 215, "18822": 215, "18824": 215, "18826": 215, "18828": 215, "18830": 215, "18832": 215, "18834": 215, "18836": 215, "18838": 215, "18840": 215, "18842": 215, "18844": 215, "18846": 215, "18848": 215, "18850": 215, "18852": 215, "18854": 215, "18856": 215, "18858": 215, "18860": 215, "18862": 215, "18864": 215, "18866": 215, "18868": 215, "18870": 215, "18872": 215, "18874": 215, "18876": 215, "18878": 215, "18880": 215, "18882": 215, "18884": 215, "18886": 215, "18888": 215, "18890": 215, "18892": 215, "18894": 215, "18896": 215, "18898": 215, "18900": 215, "18902": 215, "18904": 215, "18906": 215, "18908": 215, "18910": 215, "18912": 215, "18914": 215, "18916": 215, "18918": 215, "18920": 215, "18922": 215, "18924": 215, "18926": 215, "18928": 215, "18930": 215, "18932": 215, "18934": 215, "18936": 215, "18938": 215, "18940": 215, "18942": 215, "18944": 215, "18946": 215, "18948": 215, "18950": 215, "18952": 215, "18954": 215, "18956": 215, "18958": 215, "18960": 215, "18962": 215, "18964": 215, "18966": 215, "18968": 215, "18970": 215, "18972": 215, "18974": 215, "18976": 215, "18978": 215, "18980": 215, "18982": 215, "18984": 215, "18986": 215, "18988": 215, "18990": 215, "18992": 215, "18994": 215, "18996": 215, "18998": 215, "19000": 215, "19002": 215, "19004": 215, "19006": 215, "19008": 215, "19010": 215, "19012": 215, "19014": 215, "19016": 215, "19018": 215, "19020": 215, "19022": 215, "19024": 215, "19026": 215, "19028": 215, "19030": 215, "19032": 215, "19034": 215, "19036": 215, "19038": 215, "19040": 215, "19042": 215, "19044": 215, "19046": 215, "19048": 215, "19050": 215, "19052": 215, "19054": 215, "19056": 215, "19058": 215, "19060": 215, "19062": 215, "19064": 215, "19066": 215, "19068": 215, "19070": 215, "19072": 215, "19074": 215, "19076": 215, "19078": 215, "19080": 215, "19082": 215, "19084": 215, "19086": 215, "19088": 215, "19090": 215, "19092": 215, "19094": 215, "19096": 215, "19098": 215, "19100": 215, "19102": 215, "19104": 215, "19106": 215, "19108": 215, "19110": 215, "19112": 215, "19114": 215, "19116": 215, "19118": 215, "19120": 215, "19122": 215, "19124": 215, "19126": 215, "19128": 215, "19130": 215, "19132": 215, "19134": 215, "19136": 215, "19138": 215, "19140": 215, "19142": 215, "19144": 215, "19146": 215, "19148": 215, "19150": 215, "19152": 215, "19154": 215, "19156": 215, "19158": 215, "19160": 215, "19162": 215, "19164": 215, "19166": 215, "19168": 215, "19170": 215, "19172": 215, "19174": 215, "19176": 215, "19178": 215, "19180": 215, "19182": 215, "19184": 215, "19186": 215, "19188": 215, "19190": 215, "19192": 215, "19194": 215, "19196": 215, "19198": 215, "19200": 215, "19202": 215, "19204": 215, "19206": 215, "19208": 215, "19210": 215, "19212": 215, "19214": 215, "19216": 215, "19218": 215, "19220": 215, "19222": 215, "19224": 215, "19226": 215, "19228": 215, "19230": 215, "19232": 215, "19234": 215, "19236": 215, "19238": 215, "19240": 215, "19242": 215, "19244": 215, "19246": 215, "19248": 215, "19250": 215, "19252": 215, "19254": 215, "19256": 215, "19258": 215, "19260": 215, "19262": 215, "19264": 215, "19266": 215, "19268": 215, "19270": 215, "19272": 215, "19274": 215, "19276": 215, "19278": 215, "19280": 215, "19282": 215, "19284": 215, "19286": 215, "19288": 215, "19290": 215, "19292": 215, "19294": 215, "19296": 215, "19298": 215, "19300": 215, "19302": 215, "19304": 215, "19306": 215, "19308": 215, "19310": 215, "19312": 215, "19314": 215, "19316": 215, "19318": 215, "19320": 215, "19322": 215, "19324": 215, "19326": 215, "19328": 215, "19330": 215, "19332": 215, "19334": 215, "19336": 215, "19338": 215, "19340": 215, "19342": 215, "19344": 215, "19346": 215, "19348": 215, "19350": 215, "19352": 215, "19354": 215, "19356": 215, "19358": 215, "19360": 215, "19362": 215, "19364": 215, "19366": 215, "19368": 215, "19370": 215, "19372": 215, "19374": 215, "19376": 215, "19378": 215, "19380": 215, "19382": 215, "19384": 215, "19386": 215, "19388": 215, "19390": 215, "19392": 215, "19394": 215, "19396": 215, "19398": 215, "19400": 215, "19402": 215, "19404": 215, "19406": 215, "19408": 215, "19410": 215, "19412": 215, "19414": 215, "19416": 215, "19418": 215, "19420": 215, "19422": 215, "19424": 215, "19426": 215, "19428": 215, "19430": 215, "19432": 215, "19434": 215, "19436": 215, "19438": 215, "19440": 215, "19442": 215, "19444": 215, "19446": 215, "19448": 215, "19450": 215, "19452": 215, "19454": 215, "19456": 215, "19458": 215, "19460": 215, "19462": 215, "19464": 215, "19466": 215, "19468": 215, "19470": 215, "19472": 215, "19474": 215, "19476": 215, "19478": 215, "19480": 215, "19482": 215, "19484": 215, "19486": 215, "19488": 215, "19490": 215, "19492": 215, "19494": 215, "19496": 215, "19498": 215, "19500": 215, "19502": 215, "19504": 215, "19506": 215, "19508": 215, "19510": 215, "19512": 215, "19514": 215, "19516": 215, "19518": 215, "19520": 215, "19522": 215, "19524": 215, "19526": 215, "19528": 215, "19530": 215, "19532": 215, "19534": 215, "19536": 215, "19538": 215, "19540": 215, "19542": 215, "19544": 215, "19546": 215, "19548": 215, "19550": 215, "19552": 215, "19554": 215, "19556": 215, "19558": 215, "19560": 215, "19562": 215, "19564": 215, "19566": 215, "19568": 215, "19570": 215, "19572": 215, "19574": 215, "19576": 215, "19578": 215, "19580": 215, "19582": 215, "19584": 215, "19586": 215, "19588": 215, "19590": 215, "19592": 215, "19594": 215, "19596": 215, "19598": 215, "19600": 215, "19602": 215, "19604": 215, "19606": 215, "19608": 215, "19610": 215, "19612": 215, "19614": 215, "19616": 215, "19618": 215, "19620": 215, "19622": 215, "19624": 215, "19626": 215, "19628": 215, "19630": 215, "19632": 215, "19634": 215, "19636": 215, "19638": 215, "19640": 215, "19642": 215, "19644": 215, "19646": 215, "19648": 215, "19650": 215, "19652": 215, "19654": 215, "19656": 215, "19658": 215, "19660": 215, "19662": 215, "19664": 215, "19666": 215, "19668": 215, "19670": 215, "19672": 215, "19674": 215, "19676": 215, "19678": 215, "19680": 215, "19682": 215, "19684": 215, "19686": 215, "19688": 215, "19690": 215, "19692": 215, "19694": 215, "19696": 215, "19698": 215, "19700": 215, "19702": 215, "19704": 215, "19706": 215, "19708": 215, "19710": 215, "19712": 215, "19714": 215, "19716": 215, "19718": 215, "19720": 215, "19722": 215, "19724": 215, "19726": 215, "19728": 215, "19730": 215, "19732": 215, "19734": 215, "19736": 215, "19738": 215, "19740": 215, "19742": 215, "19744": 215, "19746": 215, "19748": 215, "19750": 215, "19752": 215, "19754": 215, "19756": 215, "19758": 215, "19760": 215, "19762": 215, "19764": 215, "19766": 215, "19768": 215, "19770": 215, "19772": 215, "19774": 215, "19776": 215, "19778": 215, "19780": 215, "19782": 215, "19784": 215, "19786": 215, "19788": 215, "19790": 215, "19792": 215, "19794": 215, "19796": 215, "19798": 215, "19800": 215, "19802": 215, "19804": 215, "19806": 215, "19808": 215, "19810": 215, "19812": 215, "19814": 215, "19816": 215, "19818": 215, "19820": 215, "19822": 215, "19824": 215, "19826": 215, "19828": 215, "19830": 215, "19832": 215, "19834": 215, "19836": 215, "19838": 215, "19840": 215, "19842": 215, "19844": 215, "19846": 215, "19848": 215, "19850": 215, "19852": 215, "19854": 215, "19856": 215, "19858": 215, "19860": 215, "19862": 215, "19864": 215, "19866": 215, "19868": 215, "19870": 215, "19872": 215, "19874": 215, "19876": 215, "19878": 215, "19880": 215, "19882": 215, "19884": 215, "19886": 215, "19888": 215, "19890": 215, "19892": 215, "19894": 215, "19896": 215, "19898": 215, "19900": 215, "19902": 215, "19904": 215, "19906": 215, "19908": 215, "19910": 215, "19912": 215, "19914": 215, "19916": 215, "19918": 215, "19920": 215, "19922": 215, "19924": 215, "19926": 215, "19928": 215, "19930": 215, "19932": 215, "19934": 215, "19936": 215, "19938": 215, "19940": 215, "19942": 215, "19944": 215, "19946": 215, "19948": 215, "19950": 215, "19952": 215, "19954": 215, "19956": 215, "19958": 215, "19960": 215, "19962": 215, "19964": 215, "19966": 215, "19968": 215, "19970": 215, "19972": 215, "19974": 215, "19976": 215, "19978": 215, "19980": 215, "19982": 215, "19984": 215, "19986": 215, "19988": 215, "19990": 215, "19992": 215, "19994": 215, "19996": 215, "19998": 215, "l_to_send": 215, "json_to_send": 215, "json_receiv": 215, "l_receiv": 215, "sine": [215, 256, 273], "140106668681968": 215, "wallclock_axi": 215, "1638538131": 215, "1975703": 215, "2978473": 215, "3981225": 215, "498449": 215, "5987027": 215, "698947": 215, "7996597": 215, "899947": 215, "1638538132": 215, "0001943": 215, "1010473": 215, "0b10110": 215, "0x16": [215, 763], "0b1011": [215, 250], "bit_3": 215, "0b00001": 215, "0b1": [215, 232], "0b1000": [215, 232], "0b11110": 215, "bitwis": [215, 369, 402, 899, 903, 990], "num1": [215, 232], "0b110101101": 215, "num2": [215, 232], "0b101110100": 215, "0b100100100": 215, "0b111111101": 215, "0b1010": 215, "0b10100": [215, 232], "1fuzzi2fuzzi3fuzzi4": 215, "0b11011001": 215, "abcdef": [215, 222, 228, 232], "cde": 215, "lexic": [215, 429, 724], "indexerror": [215, 232, 235, 253, 292, 317, 970, 1023, 1092], "auer": 215, "aue": 215, "zerodivisionerror": [215, 228, 253, 970], "lst1": 215, "lst2": 215, "toc": 216, "treeset": 216, "searchabl": [216, 219], "diesel": 216, "vibrat": 216, "lighter": 216, "sensorrandom": 216, "sensorsin": 216, "sensorconst": 216, "wild": [216, 218, 223, 258], "yesterai": 216, "deseri": [216, 228], "decod": [216, 228, 235, 238, 274, 280, 291, 294, 1021, 1067], "swallow": [216, 804, 970], "walkthrough": [216, 218, 223, 1140], "1h": 216, "exchangeformat": 216, "test_mqtt_format": 216, "parser": [216, 228, 282, 328, 656, 1023, 1127], "mosquitto_sub": [216, 1087], "writer": [216, 732, 817], "deserializeerror": 216, "dangl": [216, 372, 543, 557], "fahrenheit": [218, 340, 342, 355, 370, 379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 443, 644, 682, 723, 725, 726], "nonconst": [218, 555], "getchar": [218, 346, 348, 353, 362], "dry": 218, "verif": [218, 1076], "umlaut": [218, 219, 302, 1002, 1084], "\u00f6": [218, 238, 1084], "canari": 218, "asid": [218, 380, 381, 393, 655, 932], "brainfuck": 218, "nok": [218, 692, 926], "singli": [218, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "typedef": [218, 396, 399, 403, 412, 416, 421, 422, 642, 644, 682, 690, 706, 723, 725, 726, 793, 941], "commonplac": [218, 1130], "boundari": [218, 228, 274, 402, 716, 871], "neighborhood": 218, "norm": [218, 1084], "signed": [218, 356, 405], "unsigned": 218, "excurs": [218, 446, 1070], "pointerarith": 218, "lower_bound": [218, 265, 298, 582, 587, 606, 610, 639, 726], "for_each": [218, 265, 587, 606, 610, 639, 690, 726], "diagram": [218, 446, 464, 466, 786, 870, 877, 879], "search_by_lastnam": [218, 635, 636, 637], "const_iter": [218, 537, 581, 584, 585, 586, 588, 603, 642, 657, 690, 691], "calloper": [218, 520], "exc": [218, 520], "ostream": [218, 520, 546, 706, 1112], "paint": [218, 625, 639, 726], "reverse_copi": [218, 265, 520, 587, 606, 610, 639, 726], "cin": [218, 589, 607, 609, 625, 639, 726], "accumul": [218, 520], "raci": [218, 520], "wsl2": [218, 245, 247, 265, 267, 324], "libsqlite3": [218, 430], "libboost": 218, "libgtk": 218, "prosaic": 218, "roman": 218, "mad": [218, 404], "wxwidget": 218, "lieb": [219, 280], "gr\u00fc\u00dfe": [219, 280], "utf8": 219, "distil": [219, 279, 303, 968, 1040], "4j": 220, "unlimitxdeadbeef": [220, 222, 228, 274, 280, 312, 501], "3735928559": [220, 222, 228, 232, 274, 280, 312], "0b10010011": 220, "ippi": 220, "0b0101": 220, "0101": 220, "teifl": 220, "fun1": 220, "fun2": 220, "ipykernel_165524": 220, "729327466": 220, "nsecond": [220, 1015], "rline": 220, "carriag": [220, 359, 1015], "neuer": 220, "ordner": 220, "euer": 220, "regex_str": [220, 238], "calim": 220, "yaaai": 220, "needl": [220, 1009, 1017], "haystack": [220, 1009, 1017], "finit": [220, 269, 374, 862], "haystack_s": 220, "0x7fe07c0cdf90": 220, "list_iter": [220, 238, 292], "0x7fe07c0cd7f0": 220, "unicode_code_point": 220, "l_new": 220, "ijk": 220, "mengenlehr": 220, "s1": [220, 228, 232, 235, 238, 253, 260, 270, 280, 292, 446, 463, 493, 552, 646, 652, 700, 1020], "s2": [220, 228, 232, 235, 238, 253, 260, 270, 280, 292, 446, 463, 493, 552, 646, 652, 700, 1020], "gunnar": 220, "liam": 220, "maximumum": 220, "variable2": 220, "maximum2": 220, "mrmr": 220, "einser": 220, "square_numb": [220, 1018], "squares_gener": 220, "other_d": [220, 253], "nove": 220, "isspac": [220, 222, 225, 228, 253, 274, 1017], "buchhaltung": [220, 833, 855, 856], "startswith": [220, 228, 257, 258, 260, 274, 426, 1017, 1090], "buch": [220, 1122], "oooo": 220, "isupp": [220, 228, 238, 274, 1017], "zz": 220, "traurig": 220, "substr": [220, 222, 228, 238, 253, 260, 274, 292, 1112], "gid": [220, 228, 724, 800, 801, 808, 810, 818, 890, 905, 1049], "count_byt": 220, "nbyte": 220, "2691": [220, 724, 829], "miscellanea": [221, 893], "brace": [221, 228, 274, 346, 369, 372, 384, 444, 537, 546, 578, 580, 585, 598, 599, 642, 682, 691, 723, 725, 726, 999, 1002], "hour_of_dai": 221, "ein_str": 222, "ein_anderer_str": 222, "fghjgfgh": 222, "dfghgfgh": 222, "do_someth": [222, 241, 312, 375, 377, 385, 400, 414, 699, 999], "komplett": 222, "returnwert": [222, 1122], "sinnloser": 222, "weis": [222, 1143], "vorgenommen": 222, "obacht": 222, "140672599989840": 222, "140672464974720": 222, "hoechst": [222, 260], "rechnern": 222, "100000": [222, 238, 655, 878, 1076], "": [222, 238], "exponenti": [222, 1002, 1016], "__annotations__": [222, 232, 253, 274, 288, 971], "__closure__": [222, 232, 253, 274], "__code__": [222, 232, 253, 274], "__delattr__": [222, 225, 228, 232, 250, 253, 274, 292], "__dir__": [222, 225, 232, 250, 253, 274, 292], "__format__": [222, 225, 228, 232, 250, 253, 274, 292], "__ge__": [222, 225, 228, 232, 250, 253, 274, 292, 990], "__get__": [222, 232, 253, 274], "__getattribute__": [222, 225, 228, 232, 250, 253, 274, 292], "__globals__": [222, 232, 253, 274], "__gt__": [222, 225, 228, 232, 250, 253, 274, 292], "__hash__": [222, 225, 228, 232, 250, 253, 274, 292], "__init_subclass__": [222, 225, 232, 250, 253, 274, 292], "__kwdefaults__": [222, 232, 253, 274], "__ne__": [222, 225, 228, 232, 250, 253, 274, 292, 990], "__new__": [222, 225, 228, 232, 250, 253, 274, 292], "__qualname__": [222, 232, 253, 274], "__reduce__": [222, 225, 228, 232, 250, 253, 274, 292], "__reduce_ex__": [222, 225, 232, 250, 253, 274, 292], "__setattr__": [222, 225, 228, 232, 250, 253, 274, 292], "__sizeof__": [222, 225, 228, 232, 250, 253, 274, 292], "__subclasshook__": [222, 225, 232, 250, 253, 274, 292], "karteikart": 222, "my_formatted_person": 222, "123425041997": 222, "caros_str": 222, "joergs_str": 222, "0x7ff0dc48b490": 222, "next_po": 222, "tim": [222, 232, 308, 309], "ugli": [222, 232, 246, 255, 256, 269, 276, 277, 341, 346, 520, 726, 798, 803, 828, 829, 869, 968, 969], "flat": [222, 232, 393, 419, 420, 940, 941], "puriti": [222, 232], "silenc": [222, 232, 385, 816], "ambigu": [222, 232, 372, 407, 408, 409, 556, 656, 833], "refus": [222, 232, 241, 436, 746, 799, 870, 886, 945], "temptat": [222, 232], "dutch": [222, 232], "honk": [222, 232], "wahr": 222, "falsch": [222, 235, 1129], "kriegt": 222, "nachkommastellen": 222, "moeglichkeit": 222, "f_str": 222, "punkt_po": 222, "nachkomma_str": 222, "praezedenz": 222, "wandel": 222, "vorn": 222, "anhaengen": 222, "wuenschen": 222, "wuerd": 222, "appendleft": 222, "extendleft": 222, "relem": 222, "popleft": 222, "sorted_l": 222, "sorted_t": 222, "sorted_": 222, "subtext": 222, "ssissippi": 222, "140672464726576": 222, "copied_text": 222, "140672464784832": 222, "140672464784064": 222, "140672599989872": 222, "140672464751872": 222, "140672464768512": 222, "140672464594880": 222, "jkl": 222, "suesser": [222, 228, 235, 238, 241, 257], "sechser_gewuerfelt": 222, "n_tri": [222, 225, 260, 1006], "versag": [222, 260], "eva": [222, 274, 1009], "xrang": [222, 1010], "0x7ff0dc48bed0": 222, "hann": 222, "gruess": 222, "gott": [222, 253, 335], "fill_in_us": 222, "scho": 222, "my_db": 222, "uniq_dict": 222, "konfigurierbaren": 222, "startwert": 222, "ausgibt": 222, "sqnum": 222, "0x7ff014b01820": 222, "xslx": 222, "yz": 222, "lret": 222, "ochwa": 222, "followup": [223, 284, 287, 487, 1060], "unbalanc": 223, "geospati": 223, "gdal": 223, "sweigart": [223, 237, 279, 1071], "datenypen": 224, "libarari": 224, "chainmap": 224, "dequ": [224, 714], "suchalgorithmen": 224, "51139385": 225, "77397a312b47": 225, "50924272": [225, 228], "20210728": [225, 228, 997], "eine_komplizierte_funkt": 225, "endeffekt": 225, "zusammenzuzaehlen": 225, "tarnt": 225, "vergeblich": 225, "komplexitaet": 225, "zahl_als_str": 225, "bledsinn": 225, "try_no": 225, "blahblahblah": 225, "cxyxyyyyxi": 225, "table_str": 225, "table_dict": 225, "139769175732912": 225, "139769175738624": 225, "satan_str": 225, "satan_int": 225, "result_of_print": 225, "result_of_evald_print": 225, "code_str": [225, 235], "compiled_cod": 225, "woswasi": [225, 232], "0x7f1e91eb42f0": 225, "philipp": [225, 232, 235, 253, 260, 274, 292, 444, 519, 591, 603, 635, 637, 1060, 1062, 1066, 1068, 1088, 1089, 1090, 1092, 1093, 1094, 1095], "lastnma": 225, "0x7f1e8c0fe2e0": 225, "__abs__": [225, 232, 250], "__and__": [225, 232, 292, 990], "__bool__": [225, 232, 250], "__ceil__": [225, 232, 250], "__divmod__": [225, 232, 250], "__float__": [225, 232, 250, 274], "__floor__": [225, 232, 250], "__floordiv__": [225, 232, 250, 990], "__getnewargs__": [225, 228, 232, 250, 274], "__index__": [225, 232], "__int__": [225, 232, 250, 274, 291], "__invert__": [225, 232], "__lshift__": [225, 232, 990], "__mod__": [225, 228, 232, 250, 274, 990], "__mul__": [225, 228, 232, 250, 274, 990], "__neg__": [225, 232, 250], "__or__": [225, 232, 292, 990], "__pos__": [225, 232, 250], "__pow__": [225, 232, 250, 990], "__rand__": [225, 232, 292], "__rdivmod__": [225, 232, 250], "__rfloordiv__": [225, 232, 250], "__rlshift__": [225, 232], "__rmod__": [225, 228, 232, 250, 274], "__rmul__": [225, 228, 232, 250, 274], "__ror__": [225, 232, 292], "__round__": [225, 232, 250], "__rpow__": [225, 232, 250], "__rrshift__": [225, 232, 990], "__rshift__": [225, 232, 990], "__rsub__": [225, 232, 250, 292, 990], "__rtruediv__": [225, 232, 250], "__rxor__": [225, 232, 292], "__sub__": [225, 232, 250, 292, 990], "__truediv__": [225, 232, 250, 990], "__trunc__": [225, 232, 250], "__xor__": [225, 232, 292, 990], "as_integer_ratio": [225, 232, 250], "bit_length": [225, 232], "conjug": [225, 232, 250], "denomin": [225, 232], "from_byt": [225, 232], "to_byt": [225, 232], "0x7f1e8c0b3130": 225, "int_list": 225, "0x7f1e8c0fe340": 225, "0x7f1e8c0fe760": 225, "u1": 225, "u2": 225, "type_of_us": 225, "scrambl": 225, "hansj\u00f6rg": [225, 426], "gr\u00f6jsnah": 225, "class_str": 225, "1997": [225, 235, 996, 1060, 1062, 1066, 1068], "0x7f1e8c1c2e50": 225, "joleckmi": 225, "predecessor": [226, 234, 240, 284, 287], "cmdline": 226, "excess": [226, 375], "provocantli": 226, "udemi": [226, 230], "pybai": [226, 1071], "suchzeit": 227, "everywher": [227, 242, 405, 420, 436, 646, 785, 923, 1009], "d_as_str": 228, "received_d": 228, "1939": 228, "145415": 228, "bytes_or_buff": [228, 274], "expos": [228, 274, 534, 620, 804, 870, 878, 879, 913], "strict": [228, 248, 274, 292, 441, 455, 462, 476, 490, 542, 726, 1020, 1101], "__contains__": [228, 274, 292], "format_spec": [228, 253, 274], "getattr": [228, 232, 253, 274, 984], "__getitem__": [228, 274, 1092, 1093], "__iter__": [228, 274, 292, 975], "__len__": [228, 274, 292], "casefold": [228, 274], "caseless": [228, 274], "fillchar": [228, 274], "pad": [228, 274, 1016], "occurr": [228, 274, 349], "codec": [228, 235, 238, 274, 280, 1084], "unicodeencodeerror": [228, 235, 238, 253, 274, 280, 970, 1084], "xmlcharrefreplac": [228, 274], "register_error": [228, 274], "suffix": [228, 274], "expandtab": [228, 253, 274], "tabsiz": [228, 274], "lowest": [228, 274, 369, 375, 933, 934, 1021], "format_map": [228, 274], "isalnum": [228, 274, 1017], "alphabet": [228, 274, 349, 404, 426, 817, 1084], "isascii": [228, 274], "007f": [228, 274], "isdecim": [228, 274], "iskeyword": [228, 238, 274], "isnumer": [228, 274], "isprint": [228, 274, 349, 377], "printabl": [228, 274, 349, 970], "istitl": [228, 274], "uncas": [228, 274], "pq": [228, 274], "ljust": [228, 274], "removeprefix": [228, 274], "removesuffix": [228, 274], "rindex": [228, 274, 1017], "rpartit": [228, 274], "discard": [228, 274, 292, 408, 554, 555, 692, 815, 816], "splitlin": [228, 274], "keepend": [228, 274], "swapcas": [228, 274], "titlecas": [228, 274], "lookuperror": [228, 253, 274, 970], "untouch": [228, 274, 773], "zfill": [228, 274], "maketran": [228, 274], "usabl": [228, 274, 368, 447, 498, 653, 880], "numerischen": 228, "ecma": 228, "3rd": [228, 732], "interchang": [228, 624, 706, 1084], "marshal": 228, "pickl": [228, 232], "simplejson": 228, "foo": [228, 260, 270, 274, 292, 514, 655, 688, 706, 970, 1011], "baz": 228, "u1234": 228, "sort_kei": 228, "getvalu": 228, "compact": [228, 375], "mydict": 228, "obj": [228, 253, 482, 741, 742, 751, 984, 992, 1092, 1093], "x08ar": 228, "as_complex": 228, "dct": 228, "__complex__": 228, "object_hook": 228, "2j": 228, "parse_float": 228, "encode_complex": 228, "serializ": 228, "1j": 228, "jsonencod": 228, "iterencod": 228, "scanner": 228, "jsondecodeerror": 228, "jsondecod": 228, "msg": [228, 241, 360, 445, 449, 937, 939, 940, 944, 966, 969, 970], "unformat": 228, "lineno": [228, 235], "colno": 228, "delattr": [228, 232, 253], "setattr": [228, 232, 253, 984], "__setstate__": [228, 232], "with_traceback": [228, 232], "tb": [228, 232], "__traceback__": [228, 232], "__cause__": [228, 232], "__context__": [228, 232], "__suppress_context__": [228, 232], "parse_int": 228, "parse_const": 228, "object_pairs_hook": 228, "nan": [228, 260, 1076, 1088], "num_str": 228, "_w": 228, "0x7f99fff1bb70": 228, "raw_decod": 228, "extran": 228, "skipkei": 228, "ensure_ascii": 228, "check_circular": 228, "allow_nan": 228, "recogn": [228, 570, 879, 1128], "sensibl": 228, "circular": 228, "recursionerror": [228, 253, 970], "compliant": [228, 983], "item_separ": 228, "key_separ": 228, "_one_shot": 228, "chunk": [228, 317, 405, 767, 905, 1073, 1084], "bigobject": 228, "mysocket": 228, "fp": 228, "inf": 228, "complianc": 228, "ippolito": 228, "redivi": 228, "140299267714496": 228, "140299267930496": 228, "schweissparameter_aussi": 228, "strom_ma": 228, "200004": 228, "spannung_v": 228, "aufs_kabel": 228, "maschine_112": 228, "kabel": [228, 232], "vom_kabel": 228, "schweissparameter_eini": 228, "strom_a": 228, "hal": 228, "2c445fb3": 228, "6ca4": 228, "b9d9": 228, "7cfbbff55326": 228, "doesnt_exist": 228, "_a666": 228, "140299402960464": 228, "0b10000000000000000000000000000000000000000000000000000000000000000": [228, 232, 253, 270], "140299327492352": 228, "func_fals": 228, "func_tru": 228, "sex_opt": 228, "140298898107648": 228, "t_mit_einem_el": 228, "supi": 228, "squares_map": 228, "squares_set": 228, "numtri": 228, "even_numb": [228, 292], "mississppi": 228, "xxxx": 228, "nbin": [228, 235, 260, 274], "ndaemon": [228, 235, 260, 274], "nadm": [228, 235, 260, 274], "nlp": [228, 235, 260, 274], "nsync": [228, 235, 260, 274], "nshutdown": [228, 235, 260, 274], "nhalt": [228, 235, 260, 274], "nmail": [228, 235, 260, 274], "noper": [228, 235, 260, 274], "ngame": [228, 235, 260, 274], "nftp": [228, 235, 260, 274], "nnobodi": [228, 235, 260, 274], "napach": [228, 235, 260, 274], "nsystemd": [228, 235, 260, 274], "ntss": [228, 235, 260, 274], "ndbu": [228, 235, 260, 274], "npolkitd": [228, 235, 260, 274], "navahi": [228, 235, 260, 274], "nunbound": [228, 235, 260, 274], "ndnsmasq": [228, 235, 260, 274], "nnm": [228, 235, 260, 274], "nusbmuxd": [228, 235, 260, 274], "ngluster": [228, 235, 260, 274], "nrtkit": [228, 235, 260, 274], "npipewir": [228, 235, 260, 274], "ngeoclu": [228, 235, 260, 274], "nchroni": [228, 235, 260, 274], "nsaslauth": [228, 235, 260, 274], "nradvd": [228, 235], "nrpc": [228, 235, 260, 274], "nqemu": [228, 235, 260, 274], "nopenvpn": [228, 235, 260, 274], "ncolord": [228, 235, 260, 274, 895], "nrpcuser": [228, 235, 260, 274], "nabrt": [228, 235, 260, 274], "nflatpak": [228, 235, 260, 274], "ngdm": [228, 235, 260, 274], "ngnome": [228, 235, 260, 274], "nvboxadd": [228, 235, 260, 274], "nsshd": [228, 235, 260, 274], "ntcpdump": [228, 235, 260, 274], "njfasch": [228, 235, 260, 274], "nmosquitto": [228, 235, 260, 274], "nsomeon": [228, 235], "1001": [228, 235, 238, 599, 600, 601, 602, 818, 830, 861, 890], "move_to_end": 228, "thermometera": 228, "thermometerb": 228, "get_average_temperatur": 228, "th_list": 228, "ipykernel_9164": 228, "859664274": 228, "2942790015": 228, "0x7fac83797be0": 228, "basisklass": 228, "level2_1": 228, "l21": 228, "level2_2": 228, "level3": 228, "jedi": 228, "blueey": 228, "droid": 228, "r2d2": 228, "derivednoctor": 228, "dnoctor": 228, "derivedctorcallingsup": 228, "derivedctorcallingbasector": 228, "__firstnam": 228, "__lastnam": 228, "_user__firstnam": 228, "_user__lastnam": 228, "lightsab": 228, "padawan": 228, "arithmeticerror": [228, 253, 970], "waaah": 228, "abgebrannt": 228, "puh": 228, "intakt": 228, "is_even": [228, 232, 659, 660, 661, 662], "0x7fac81f52df0": 228, "0x7fac81cb5700": 228, "progamm": 228, "tumpfback": 228, "och": 228, "umpfback": 228, "rt": [228, 726, 750, 754, 764, 775, 777, 782, 785, 788, 791, 794, 869], "wholefil": 228, "notepad": 229, "betreiben": [229, 1129, 1136, 1137], "unterschiedlichen": 229, "sinnvol": 229, "umgebungen": 229, "unausweichlich": 229, "installationsverzeichni": 229, "verzeichniss": [229, 1131], "ausf\u00fchren": 229, "hernimmt": 229, "wei\u00df": 229, "rennt": 229, "ordereddict": 230, "__mro__": 230, "successor": [231, 369], "repeatedli": [231, 599, 1083], "kantenlaeng": 232, "ipykernel_101004": 232, "2437887948": 232, "0x10": [232, 235, 433], "0b1111111111111111111111111111111111111111111111111111111111111111": [232, 253, 270, 274], "1267650600228229401496703205381": 232, "735611673": 232, "ndigit": [232, 253, 348], "0b101": 232, "0b100": [232, 235], "register_statu": 232, "0b1001000": 232, "0b00001000": 232, "strom": 232, "liegt_strom_an": 232, "0b00111110": 232, "ever": [232, 292, 424, 433, 464, 812, 878, 1001, 1125], "deadbeef": [232, 501, 872], "gross": 232, "doktor": 232, "jawui": 232, "akademik": 232, "ndef": 232, "tdef": [232, 253], "geh": 232, "hochkomplex": 232, "verendet": 232, "euler": 232, "sche": 232, "dokumentiern": 232, "koennt": 232, "varianc": 232, "fmean": 232, "geometric_mean": 232, "harmonic_mean": 232, "harmon": 232, "median": 232, "median_low": 232, "median_high": 232, "median_group": 232, "50th": 232, "percentil": 232, "multimod": 232, "quantil": 232, "centr": 232, "nearest": [232, 467, 1078], "doctest": 232, "ellipsi": [232, 253], "8333333333": 232, "8333": 232, "spread": 232, "pvarianc": 232, "pstdev": 232, "stdev": [232, 933, 935], "38961843444": 232, "recalcul": 232, "statisticserror": 232, "normaldist": 232, "x1": 232, "unchang": [232, 643, 964], "jointli": 232, "rescal": 232, "cdf": 232, "cumul": [232, 418], "inv_cdf": 232, "invers": [232, 332, 424, 442, 449, 737, 932, 933, 1141], "coeffici": 232, "ovl": 232, "agreement": 232, "densiti": 232, "8035050657330205": 232, "dx": 232, "quartil": 232, "decil": 232, "zscore": 232, "score": 232, "from_sampl": 232, "readonli": 232, "dataset": [232, 1074, 1076, 1089, 1091, 1093, 1095], "subcontrari": 232, "reciproc": 232, "quantiti": [232, 264, 1078], "earn": 232, "5625": 232, "midpoint": 232, "estim": 232, "nomin": 232, "taught": [232, 994, 1130], "aabbbbbbbbcc": 232, "aabbbbccddddeeffffgg": 232, "986893273527251": 232, "0th": 232, "100th": 232, "xbar": 232, "0810874155219827": 232, "3720238095238095": 232, "01875": 232, "gesamter_gruss": 232, "excelsheet": 232, "hinters": 232, "gabali": 232, "helen": 232, "fischer": 232, "sssklndkfgv": 232, "fosvh": 232, "worl": [232, 235, 1008], "lowr": 232, "dlrow": [232, 1008], "olleh": [232, 1008], "even_numbers_fun": 232, "even_numbers_gen": 232, "evennum": 232, "even_filt": 232, "tausend": 232, "1234250497": [232, 235, 238, 241, 444, 451, 603], "1234250597": 232, "users_json_str": 232, "liest": 232, "kontrah": 232, "verwandelt": 232, "gelesenes_ding_wieder_als_dict": 232, "schatz": 232, "erich": 232, "koxi": 232, "hatkeinenwert": 232, "fn": [232, 409, 426, 724, 1095], "ul": [232, 363], "ln": [232, 409], "1st": [233, 1114], "einschub": 233, "filterketten": 233, "datensatz": 233, "letzten": 233, "recapitul": 234, "naeherungsverfahren": 235, "addieren": 235, "140606563548752": 235, "wirklich": [235, 1120], "0o10": 235, "teilbar": 235, "00001": 235, "abd": [235, 569], "i1": [235, 270], "140606428182128": 235, "140606428182896": 235, "2345010101": 235, "elizabeth": [235, 1060, 1062, 1066, 1068, 1079], "1901": 235, "evi": 235, "maxim": [235, 424, 879], "wuerfeln": 235, "freuen": 235, "sechser": 235, "faellt": 235, "jammern": 235, "versuch_numm": 235, "versuchen": 235, "jammert": 235, "hlo": [235, 1008], "output_list": [235, 1053], "nullt": 235, "34567654567": 235, "gsd": 235, "another_t": 235, "symmetisch": 235, "netzwerkkommunik": 235, "request_to_send": 235, "request_str_to_send": 235, "1651046407": 235, "3633313": 235, "cabl": [235, 804], "request_str_from_c": 235, "request_from_c": 235, "1651046335": 235, "8477345": 235, "139909434561408": 235, "139909544402512": 235, "139909544402544": 235, "139909543772528": 235, "139909433666288": 235, "roo": [235, 274, 864], "xf6": [235, 238, 280, 1002, 1084], "joerg_latin": 235, "xf6rg": [235, 238, 280, 292, 1084], "j\u0456rg": [235, 238, 280, 1084], "cyclic": 237, "140616191009600": 238, "140616191012720": 238, "140116274372176": 238, "0x7f6f5cc2de50": 238, "0x7f6f5cc2df30": 238, "18446744073709551617": 238, "multi_dict": 238, "ipykernel_189565": 238, "1743780635": 238, "140115753096128": 238, "ntri": 238, "bytes_joerg": 238, "bytes_joerg_iso_latin_1": 238, "bytes_joerg_utf_32": 238, "xff": [238, 280], "xfe": [238, 280], "x00": [238, 280, 877], "x00j": [238, 280], "x00r": [238, 280], "x00g": [238, 280], "bytes_joerg_utf_16": 238, "xfej": 238, "bytes_joerg_utf_8": 238, "xc3": [238, 274, 280, 1002, 1084], "xb6rg": [238, 274, 280, 1084], "iso_latin_1": 238, "russian": 238, "bytes_received_by_russian": 238, "2435": 238, "010d": 238, "0000000666": 238, "ssi": 238, "garbag": [238, 419, 426, 442, 701, 713, 879, 906, 968], "ipykernel_4000": 238, "3227798639": 238, "ahja": 238, "24000": 238, "24500": 238, "25000": 238, "25500": 238, "26000": 238, "26500": 238, "__del__": 238, "whe": 238, "13397": 238, "116985": 238, "120725": 238, "118110": 238, "0x7fe3a392aa30": 238, "test_person_bas": 240, "pluggi": [240, 258, 1059, 1105], "rootdir": [240, 258, 773, 1059, 1105], "test_persondb_bas": 240, "test_pytest_demo": 240, "xfail": [240, 1105], "test_persondb": 240, "test_duplicate_svnr": 240, "test_update_sunnycas": 240, "test_update_notexist": 240, "test_update_exact_dupl": 240, "former": [240, 1011], "persondb": 240, "sqlite": [240, 430, 1027, 1080], "ics_demand": 240, "maco": [240, 317, 322], "woe": 240, "homebrew": 240, "brew": 240, "flaviocop": 240, "str_mit_666": 241, "140240419976192": 241, "140240419593568": 241, "aclass": 241, "almostempti": 241, "beenther": 241, "kuckucksei": 241, "chirp": 241, "some_bullshit": 241, "bad_thing_happen": 241, "do_some_bullshit": 241, "boah": 241, "python_cod": 241, "a_global_vari": 241, "globale_vari": 241, "140240513015376": 241, "140240513014256": 241, "140240419270768": 241, "140240419271792": 241, "storesanintegerandmodifiesit": 241, "the_int": 241, "my_int": 241, "saiami": 241, "storesalistandmodifiesit": 241, "the_list": 241, "append_someth": 241, "salami": 241, "compute_squar": 241, "satanicerror": 241, "jess": 241, "invalidsvnr": 241, "rex_lin": 241, "json_str": [241, 1067], "python_l": 241, "0x7f8c0551f490": 241, "behandlung": 243, "kurzer": 243, "reicht": [243, 1120], "unwichtig": 243, "weggelassen": 243, "\u00fc": [243, 1084], "jeden": 243, "teilnehmer\u00fcbung": 243, "kernsprach": 243, "rvalu": [243, 265, 298, 545, 650, 682, 692, 698, 701, 702, 703, 704, 707, 715, 723, 725, 726, 1124, 1125, 1126], "constexpr": [243, 244, 245, 265, 267, 682, 692, 716, 725, 726, 1125], "uniform": [243, 244, 245, 247, 298, 424, 444, 546, 578, 598, 599, 642, 682, 691, 723, 725, 726, 983, 1125], "initialisierung": [243, 1141], "infer": 243, "speichermodel": 243, "atomar": [243, 1123, 1141], "standardbibliothek": 243, "regu\u00e4r": 243, "trait": [243, 298], "zufallszahlen": 243, "zeitbibliothek": 243, "sprachsyntax": 243, "deduct": [243, 657, 659], "erweiterungen": 243, "ge\u00e4ndert": 243, "definitionen": 243, "bibliothek": 243, "zusatzvari": 243, "constinit": 243, "modularisierung": [243, 318, 1122], "versionierung": 243, "routinen": 243, "synchronisierung": 243, "werkzeug": [243, 1122, 1129, 1131, 1136, 1139], "kalend": [243, 1119], "zeitzonen": 243, "zus\u00e4tz": 243, "chrono": [243, 244, 245, 247, 256, 298, 449, 642, 703, 714, 715, 719, 725, 726], "initializer_list": [244, 245, 247, 298, 445, 446, 473, 474, 642, 644, 682, 725, 726], "handwrit": [244, 245, 247, 298, 682, 698, 725, 726], "weak_ptr": [244, 245, 247, 298, 698, 723, 725, 726], "boilerpl": [244, 245, 247, 283, 298, 431, 682, 683, 684, 702, 725, 726, 949, 1121], "condition_vari": [244, 245, 247, 256, 298, 715, 725, 726, 1125], "emplace_back": [244, 245, 578], "cref": [244, 245], "interoper": [245, 247, 265, 267], "wazoo": [245, 247, 265, 267], "anviron": [245, 247], "submodul": [245, 247, 499, 562], "chdir": [245, 247], "gtest_main": [245, 449, 498, 500, 501, 521, 524, 536, 562, 700, 701, 1111, 1116], "dummy_suit": 245, "sticki": [246, 255, 256, 276, 277, 317, 322, 726, 803, 828, 869], "insod": 247, "lvalu": [247, 650, 651, 654, 682, 692, 698, 702, 707, 715, 723, 725, 726], "afterword": [247, 651, 682, 725, 726], "ain": [247, 424, 998], "singleton": [248, 441, 442, 448, 462, 476, 490, 542, 726, 1128], "inflex": [248, 344, 441, 455, 462, 468, 469, 476, 490, 542, 726], "flexibl": [248, 435, 441, 455, 462, 476, 490, 542, 588, 726, 916, 931, 947, 948, 949, 964, 965, 1016, 1120], "proxi": [248, 266, 268, 269, 290, 294, 323, 441, 448, 450, 451, 462, 476, 490, 542, 726, 1100, 1128], "serverthread": [248, 466, 480], "my_si": [250, 978], "function_returns_two_valu": 250, "140134238766608": 250, "sizeof": [250, 348, 358, 369, 390, 397, 398, 402, 405, 525, 537, 549, 577, 643, 705, 873, 891, 895, 896, 897, 903, 904, 905, 906, 931, 937, 940, 944, 1010], "__getformat__": 250, "__setformat__": 250, "fromhex": 250, "0b0010": 250, "0b1001": 250, "key_list": 250, "key_tupl": 250, "evil_list": 250, "evil_list_2": 250, "neinem": 250, "nviel": 250, "doze_path": [250, 253], "compiled_regex": 250, "l_json": 250, "l_json_sent": 250, "received_data": 250, "0x7f73869f06c0": 250, "create_avg_item": 250, "sensor1": [250, 449], "ninetynin": 250, "koppel": 252, "netzwerk": [252, 318, 1129, 1139, 1142], "condens": [252, 425], "nprint": 253, "noption": 253, "nfile": 253, "nsep": 253, "nend": 253, "nflush": 253, "forcibli": 253, "didact": [253, 335, 338, 561, 563, 564, 1128], "fullnam": [253, 260, 987, 991], "nerst": 253, "nzweit": [253, 312], "andere_list": 253, "neue_list": 253, "140323934455312": 253, "140323934455344": 253, "140323934455376": 253, "140323852147712": 253, "140323933649904": 253, "140323833601584": 253, "frozenset": [253, 270, 291], "__builtins__": [253, 274, 971], "gr\u00fc\u00df": 253, "nocheinprogramm": 253, "ocheinprogramm": 253, "dfghgfdfghj": 253, "jhghgh": 253, "matchstr": 253, "compiled_match": 253, "tprint": 253, "num_ss": 253, "isi": [253, 503, 519, 1088], "strippeditem": 253, "yet_another_d": 253, "s3": [253, 260, 463], "s4": 253, "isdisjoint": [253, 260, 292, 1020], "nnoteworthi": 253, "nil": 253, "__package__": [253, 310, 971], "__loader__": [253, 310, 971], "__spec__": [253, 310, 971], "modulespec": 253, "loader": [253, 414, 432, 437, 947, 964, 1139], "__build_class__": 253, "__import__": 253, "dont_inherit": 253, "_feature_vers": 253, "divmod": 253, "raw_input": 253, "ipkernel": 253, "ipythonkernel": 253, "0x7f9fb16abcd0": 253, "class_or_tupl": 253, "aiter": 253, "async_iter": 253, "anext": 253, "oct": [253, 855, 877, 879], "pow": [253, 554, 555, 705], "exp": [253, 478], "notimpl": [253, 292, 990], "memoryview": 253, "__debug__": 253, "stopasynciter": [253, 970], "generatorexit": [253, 970], "keyboardinterrupt": [253, 269, 970], "importerror": [253, 970], "environmenterror": [253, 1100], "ioerror": [253, 1106], "eoferror": [253, 970], "notimplementederror": [253, 970], "unboundlocalerror": [253, 970], "indentationerror": [253, 970], "taberror": [253, 970], "unicodeerror": [253, 970], "unicodedecodeerror": [253, 970], "unicodetranslateerror": [253, 970], "floatingpointerror": [253, 970], "overflowerror": [253, 970], "systemerror": [253, 970], "referenceerror": [253, 970], "memoryerror": [253, 970], "buffererror": [253, 970], "userwarn": [253, 970], "encodingwarn": [253, 970], "deprecationwarn": [253, 970], "pendingdeprecationwarn": [253, 970], "syntaxwarn": [253, 970], "runtimewarn": [253, 970], "futurewarn": [253, 970, 1088], "importwarn": [253, 970], "unicodewarn": [253, 970], "byteswarn": [253, 970], "resourcewarn": [253, 970], "connectionerror": [253, 970], "blockingioerror": [253, 970], "brokenpipeerror": [253, 970], "childprocesserror": [253, 970], "connectionabortederror": [253, 970], "connectionrefusederror": [253, 970], "connectionreseterror": [253, 970], "fileexistserror": [253, 970], "isadirectoryerror": [253, 970], "notadirectoryerror": [253, 970], "interruptederror": [253, 970], "processlookuperror": [253, 970], "timeouterror": [253, 970], "closefd": 253, "beopen": 253, "1995": [253, 452, 1060, 1062, 1066, 1068], "nation": [253, 877], "1991": [253, 996], "sticht": 253, "centrum": 253, "amsterdam": [253, 996], "credit": [253, 744, 997], "cwi": 253, "cnri": 253, "zope": 253, "cast": [253, 369, 525, 613, 620, 732], "execfil": 253, "_pydev_imp": 253, "_pydev_execfil": 253, "glob": [253, 401, 861, 918, 966, 981, 1112], "runfil": 253, "_pydev_bundl": 253, "pydev_umd": 253, "wdir": 253, "__ipython__": 253, "exclud": [253, 420, 547], "transient": 253, "display_id": 253, "get_ipython": 253, "interactiveshel": 253, "zmqshell": 253, "zmqinteractiveshel": 253, "0x7f9fb1516200": 253, "config_fil": 253, "srcdir": 253, "dstdir": 253, "dst": [253, 364, 414, 503, 544, 563, 572, 573, 579, 1021], "untrust": 256, "lan": 256, "programmat": [256, 470, 870, 878, 926, 946, 1096], "stty": 256, "termio": 256, "ioctl_tti": 256, "setseri": 256, "tty": [256, 804, 859, 931, 937, 961], "tty_io": 256, "bidirection": 256, "nake": 256, "tiocgseri": 256, "tiocsseri": 256, "async_low_lat": 256, "cfmakeraw": 256, "ttyusb0": [256, 804], "low_lat": 256, "serial_struct": 256, "bidir": 256, "advantec": 256, "nonetheless": [256, 259, 262, 291, 659, 1112], "mycat": 256, "mimick": [256, 700], "make_realtim": 256, "interfaceri": 256, "cif": 256, "samba": 256, "automationadmin": 256, "gsc": 256, "pd": [257, 258, 260, 264, 292, 426, 1074, 1076, 1088, 1089, 1090, 1092, 1093, 1094, 1095], "read_csv": [257, 258, 264, 292, 426, 1074, 1076], "txn": 257, "iso8859": 257, "time_book": [257, 258, 426], "time_valuta": [257, 258, 426], "at66666666666666": 257, "bezahlung": [257, 258, 260, 426], "kart": [257, 258, 260, 426], "eur": [257, 258, 426], "95111243": [257, 426], "abbuchung": [257, 426], "onlinebank": [257, 426], "gutschrift": 257, "000000144919": 257, "339099446722187": 257, "000": [257, 292, 426, 832, 870], "card_pay": 257, "filt": 257, "9325008697": 257, "339099446790254": 257, "og": [257, 414], "237811001182": 257, "auszahlung": 257, "200075787001": 257, "tzb": 257, "anl": 257, "347159strom": 257, "200004871820": 257, "200004876265": 257, "200004848862": 257, "200004871863": 257, "dauerauftrag": 257, "qsnng6xau": 257, "00121672661": 257, "120016487112": [257, 426], "bx": 257, "000009219": 257, "entgelt": 257, "nichtdurchf\u00fchrung": 257, "032300005522384": 257, "saldo": 257, "messtechnik": 257, "602674240071": 257, "0004325259000023": 257, "oeamtc": 257, "mitgliedschaft": 257, "re_liv": 257, "billa": [257, 260, 426], "rew": 257, "dankt": [257, 258, 260, 426], "pipe_stag": 258, "max_colwidth": 258, "max_column": 258, "max_row": 258, "039": 258, "consolut": 258, "insuffici": [258, 656], "categor": [258, 425, 1078], "fuction": 258, "filt_uncat": 258, "uncat_row": 258, "unspecif": [258, 328, 751], "useless": [258, 650, 708, 817, 864, 920, 992], "food": [258, 264], "luxuri": 258, "categorize_card_pay": 258, "jet": 258, "uncertainti": 258, "categorize_v1": 258, "categorize_v2": 258, "secondari": 258, "test_categori": [258, 426], "test_bas": [258, 1059], "000009258": 258, "k002": [258, 426], "impos": [259, 262], "hurt": [259, 262, 363], "strength": [259, 262, 390, 994], "overengin": [259, 262, 363, 424, 425, 1120, 1128], "140480285361680": 260, "0xffffffffffffffff": [260, 280], "0x10000000000000000": [260, 280], "140479638276224": 260, "140480203220736": 260, "140480210406176": 260, "7940943354778932823": 260, "0x7fc4189e7c90": 260, "28800": 260, "237988": 260, "produce_dai": 260, "374557": 260, "l_mal_2": 260, "140480285361712": 260, "140479638477760": 260, "140479638427520": 260, "l4": 260, "l5": 260, "140480202528192": 260, "140479638428736": 260, "140480203212992": 260, "l6": 260, "140479598069936": 260, "is_old": 260, "ipykernel_370861": 260, "4290492544": 260, "abc123": 260, "0x7fc4189e5030": 260, "yyi": 260, "lichtenberg": [260, 444, 603, 635, 637, 1060, 1062, 1066, 1068, 1088, 1089, 1090, 1092, 1093, 1094, 1095], "persons2": [260, 1088, 1089], "set_index": [260, 1093], "sort_valu": 260, "inplac": [260, 264, 886, 1089], "flt": [260, 1090], "isin": [260, 1090], "reset_index": 260, "dropna": 260, "value_count": [260, 264], "int64": [260, 264, 1095], "conversiosn": 261, "9am": 262, "woven": [262, 266], "pipelin": [262, 335, 798, 813, 816, 817, 866, 880, 959], "accountid": 264, "accountdescript": 264, "accountparentid": 264, "storeid": 264, "storedescript": 264, "locationid": 264, "locationdescript": 264, "productid": 264, "productdescript": 264, "sales_managerid": 264, "dateyear": 264, "datequart": 264, "datemonth": 264, "datedai": 264, "categoryvers": 264, "categorycategori": 264, "categorytyp": 264, "valueunit": 264, "original_sales_pric": 264, "sale": 264, "st43": 264, "franchescini": 264, "ct14": 264, "salem": 264, "pd23": 264, "ipa": 264, "sm1": 264, "20144": 264, "201412": 264, "1779": 264, "763910": 264, "usd": 264, "st35": 264, "pd2": 264, "pepsi": 264, "sm4": 264, "201410": 264, "957113": 264, "st98": 264, "walter": 264, "pd24": 264, "amber": 264, "20142": 264, "201406": 264, "449395": 264, "st188": 264, "arrowhead": 264, "ct1": 264, "pd19": 264, "sm8": 264, "20164": 264, "201611": 264, "078689": 264, "st107": 264, "spire": 264, "ct5": 264, "san": 264, "jose": 264, "pd15": 264, "juic": 264, "sm5": 264, "20154": 264, "201512": 264, "303679": 264, "quantity_sold": 264, "sold": 264, "st4": 264, "gstore": 264, "ct13": 264, "portland": 264, "pd26": 264, "wine": 264, "000000": [264, 1076], "1069": 264, "st49": 264, "bai": 264, "depot": 264, "ct4": 264, "sacramento": 264, "pd27": 264, "20151": 264, "201501": 264, "592904": 264, "discount": 264, "st36": 264, "pricelow": 264, "arena": 264, "ct10": 264, "reno": 264, "pd22": 264, "sm3": 264, "20162": 264, "201605": 264, "4351": 264, "045830": 264, "1071": 264, "st7": 264, "street": [264, 839], "pd16": 264, "7905": 264, "590606": 264, "pd12": 264, "lemonad": 264, "20153": 264, "201507": 264, "1073": 264, "modified_model": 264, "sales_managerdescript": 264, "janet": 264, "buri": 264, "nanci": 264, "miller": 264, "setp": 264, "nan_field": 264, "bitfield": 264, "bitfi": 264, "nan_column": 264, "gabriel": [264, 688], "walton": 264, "carl": 264, "jjjjj": 264, "ref_t": 264, "datetime64": 264, "damn": 264, "ref_2015_12_04": 264, "flt_before_2015_12_04": 264, "rows_before_2015_12_04": 264, "st119": 264, "ct2": 264, "francisco": 264, "pd11": 264, "orang": [264, 1013], "pulp": 264, "sm7": 264, "kiran": 264, "raj": 264, "201503": 264, "226847": 264, "13627": 264, "793342": 264, "3427": 264, "896898": 264, "15569": 264, "353983": 264, "float64": [264, 1076], "1957": 264, "740301": 264, "572676": 264, "686587": 264, "289381": 264, "flt_product_pd2": 264, "flt_2015": 264, "flt_only_sold": 264, "flt_combin": 264, "st139": 264, "farlo": 264, "ct15": 264, "eugen": 264, "sm11": 264, "jame": 264, "frank": 264, "201511": 264, "st178": 264, "rai": 264, "ct8": 264, "beverli": 264, "hill": 264, "201508": 264, "facet": [265, 267, 598], "rich": [265, 267, 1089, 1099], "toolset": [265, 267, 616], "conceptu": [265, 267, 415, 744, 751, 889], "undergon": [265, 267], "revolut": [265, 267], "odr": [265, 688], "explor": [265, 878], "rodata": [265, 964], "unspecifi": [265, 369, 456, 528, 944, 945], "bookkeep": [266, 425], "fewer": 266, "love": [266, 1066], "closer": 266, "augment": [266, 773, 1085], "test_blah": 266, "monkeypatch": [266, 268, 269, 284, 290, 291, 294], "contextlib": 266, "chatgpt": 267, "ludwig": 267, "registri": [267, 509], "memleak": 267, "jason": [268, 269, 290], "brownle": [268, 269, 290], "contriv": [268, 269, 290, 447, 971, 1006], "subthread": [268, 269], "introductori": [268, 269, 290, 726, 869, 910, 1077, 1078, 1125], "mindset": [268, 269, 290, 294, 773], "develp": 268, "datalogg": [269, 291], "10am": 269, "reopen": 269, "drei_millionen_int": 270, "3_000_000": 270, "odd_numb": [270, 975], "odd_numbers_func": 270, "ret_num": 270, "0x7f32ccc4c610": 270, "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000": [270, 312], "139855258515840": 270, "139856078033344": 270, "139856078226432": 270, "139856160540176": 270, "i3": 270, "i4": 270, "nope": [270, 926], "0101010101010": 270, "bash_logout": [270, 855], "bash_profil": [270, 855], "thunderbird": [270, 835, 855], "gnupg": [270, 855], "hst": 270, "gitconfig": [270, 855], "pki": [270, 855], "daham": 270, "20230403": 270, "222915": 270, "bash_histori": [270, 855], "python_histori": [270, 855], "lesshst": [270, 855], "139855258795072": 270, "139855260513728": 270, "139856085569920": 270, "doppelt": 270, "gemoppelt": 270, "trag": 270, "exakt": 270, "paarweis": 270, "read_lines_of_fil": 270, "0x7f32c7d8d390": 270, "nohead": [273, 1065, 1066, 1068], "userdb_csv": [273, 1066, 1067, 1068], "interleav": 273, "dosometh": 274, "0x7fe7fbf80df0": 274, "140634424624656": 274, "140634424623536": 274, "0o644": 274, "0b01110101": 274, "setting_blah": 274, "setting_foo": 274, "config_context": 274, "140634341074320": 274, "140634424624688": 274, "140634341076688": 274, "140634341077776": 274, "140634343012864": 274, "140634341099856": 274, "ipykernel_61373": 274, "1125713270": 274, "1234567876543234567654321234565432123456": 274, "140634281233520": 274, "140634341798400": 274, "140634341995008": 274, "140634341576640": 274, "140634341773312": 274, "140634281802304": 274, "global_vari": 274, "bar2": 274, "bar3": 274, "bar4": 274, "bar5": 274, "bar6": 274, "0x7fe7f869b7d0": 274, "0x7fe7f869b920": 274, "0x7fe7f869bbc0": 274, "punctuat": 274, "abcabcabcabcabc": 274, "rex": 274, "cba": [274, 607], "another_d": 274, "rb": 274, "30000": 274, "coreutil": 277, "autopoint": 277, "rpm": [277, 437], "fcntl": [277, 877, 895, 899, 903, 904, 905, 906, 911, 914, 937, 940, 944], "luciano": [279, 318, 319, 1071], "ramalho": [279, 318, 319, 1071], "140640823526928": 280, "0x7fe97e53c610": 280, "140640823526960": 280, "140640741310912": 280, "140640741034048": 280, "140640741341184": 280, "wasjetzt": 280, "140640722624768": 280, "140640722715136": 280, "l1_copi": 280, "my_funky_gener": 280, "meine_dumme_sequenz": 280, "0x7fe9785083a0": 280, "0x7fe98c21bce0": 280, "greeter": [280, 428, 429, 430, 434, 435, 963], "0x7fe9796976d0": 280, "140640740502720": 280, "140640722823952": 280, "140640741119552": 280, "l_copi": 280, "140640741312256": 280, "140640722734080": 280, "140640722760768": 280, "140640722739712": 280, "140640741402496": 280, "owher": 280, "0000042": [280, 1016], "bled": 280, "xfc": [280, 1002, 1084], "xdfe": [280, 1084], "gr\u045c\u043fe": [280, 1084], "\u795d\u597d": 280, "big5": [280, 1084], "xaf": 280, "xac": 280, "xa6n": 280, "unterschrift": 280, "illeg": [280, 406, 1084], "multibyt": [280, 352, 1084], "xe7": [280, 1084], "xa5": [280, 1084], "x9d": [280, 1084], "xe5": [280, 1084], "xbd": [280, 1084], "incorpor": [282, 1127], "tradition": [282, 692, 872, 993, 1127], "lexer": [282, 1127], "aris": [282, 455, 1127], "compili": [282, 1127], "rant": [283, 431, 726, 1094], "blacklist": [283, 430, 431, 436, 439, 726], "acquaint": [284, 287], "data_to_send": 285, "data_receiv": 285, "user_receiv": [285, 1067], "140048588115008": 285, "140048588341376": 285, "d_str": [288, 622], "uebertragen": 288, "d_str_receiv": 288, "d_receiv": 288, "ala": [291, 294, 469, 560, 829, 895, 935, 1100], "frozendict": [291, 292], "filesensor": 291, "csvsink": 291, "sergei": 291, "test_acquisition_loop": 291, "test_mock_csv_sink": 291, "mymockedth": 291, "nonloc": [291, 1012], "millcelsiu": 291, "acquisition_loop_util": 291, "ont": 291, "necessarili": [291, 390, 420, 577, 724, 759, 773, 810, 890, 988, 1107, 1114], "10m": [291, 935], "acquir": [291, 326, 716, 778, 920, 925, 934], "slower": [291, 414, 810], "packet": [291, 466, 767, 873, 896, 929], "transmit": 291, "datatim": 291, "read_measur": 291, "fourier": 291, "fft": 291, "011": 291, "ifft": 291, "print_": 292, "0x7f0b165fdf00": 292, "dos_path": [292, 312], "vernuenftigen": 292, "__class_getitem__": 292, "__iand__": 292, "__ior__": 292, "__isub__": 292, "__ixor__": 292, "difference_upd": 292, "intersection_upd": 292, "issubset": 292, "issuperset": 292, "symmetric_differ": 292, "symmetric_difference_upd": 292, "hallohallohallohallohallo": 292, "139685905188368": 292, "139685905188400": 292, "0x7f0b14487be0": 292, "fasschingbau": 292, "139685602274352": 292, "139685561461616": 292, "139685561690240": 292, "139685561316032": 292, "139685595970464": 292, "139685561151488": 292, "30000000": 292, "my_iter": 292, "my_print": [292, 993], "my_arg": [292, 968], "even_squar": 292, "squares_fun": 292, "squares_gen": 292, "0x7f0aefb94f20": 292, "0x7f0aefb955b0": 292, "squares_list": 292, "foobar": 292, "expr_str": 292, "expr": [292, 375, 385, 833], "skiprow": 292, "hz2": 292, "hz3_5": 292, "000566": 292, "000729": 292, "132363": 292, "229977": 292, "260597": 292, "444942": 292, "385433": 292, "638212": 292, "502710": 292, "796519": 292, "936250": 292, "972326": 292, "974442": 292, "999992": 292, "995683": 292, "973719": 292, "999245": 292, "895850": 292, "985202": 292, "768778": 292, "arang": 292, "001": [292, 366], "002": 292, "003": 292, "004": 292, "0x7f0ad44b8f70": 292, "0x7f0ad23371f0": 292, "aaarghhh": 293, "expresss": 293, "realist": [294, 889], "postpon": [294, 793], "broader": 298, "nodiscard": 298, "fallthrough": [298, 944], "noexcept": [298, 445, 479, 650, 653, 655, 670, 672, 673, 675, 676, 677, 678, 692, 702, 716], "string_view": 298, "commmandlin": 302, "omg": [302, 384, 732, 1106], "checker": [303, 308, 317], "horribl": 303, "gpio25": [303, 874], "embarass": 303, "winscp": 303, "cluster_ece19": [303, 304, 305, 306, 307, 308, 317, 726], "ece19": [303, 304, 305, 306, 308, 316, 317, 323, 324, 328, 726], "ece19_blinklicht": [303, 304, 305, 306, 307, 317, 726], "ece19_file_read": [303, 304, 305, 306, 307, 308, 317, 726], "ece19_blinklicht_oo": [304, 305, 306, 307, 317, 726], "ece19_blinklicht_abc": [306, 307, 317, 726], "ece19_blinklicht_unittest": [306, 307, 317, 726], "blinklicht": [307, 317, 322, 726], "1910420003": [308, 309], "corinna": [308, 309], "baumgartn": [308, 309, 326], "1910420002": [308, 309], "anzhelika": [308, 309, 317], "chernykh": [308, 309, 317, 326], "1910420005": [308, 309], "simon": [308, 309], "1910420006": [308, 309], "matthia": [308, 309, 326], "kappel": [308, 309, 326], "1810420009": [308, 309], "kolter": [308, 309], "1920420033": [308, 309], "kornberg": [308, 309, 326, 329], "1910420007": [308, 309], "lui": [308, 309, 326], "kraker": [308, 309, 326, 329], "1810420010": [308, 309], "leonid": [308, 309], "kudriaschov": [308, 309], "1910420008": [308, 309], "michael": [308, 309, 318, 319], "1910420010": [308, 309], "sonja": [308, 309, 326], "luka": [308, 309, 326, 329], "1910420013": [308, 309], "behnaz": [308, 309], "mehrabadi": [308, 309, 326], "1910420014": [308, 309], "moser": [308, 309, 326], "1910420015": [308, 309], "moritz": [308, 309], "nagelschmi": [308, 309, 326], "1910420018": [308, 309], "bianca": [308, 309], "reimer": [308, 309], "1910420020": [308, 309], "schmid": [308, 309, 326], "1910420021": [308, 309], "sch\u00fcttler": [308, 309], "1910420022": [308, 309], "schweiger": [308, 309, 326], "1910420024": [308, 309], "sinabel": [308, 309], "1910420025": [308, 309], "slovik": [308, 309, 326], "1910420026": [308, 309], "s\u00f6l": [308, 309, 326], "1910420027": [308, 309], "stangl": [308, 309, 326], "1910420028": [308, 309], "felix": [308, 309, 326], "themessl": [308, 309, 326], "1920420035": [308, 309], "astrid": [308, 309], "vogel": [308, 309, 326], "1810420029": [308, 309], "florian": [308, 309, 326], "zwittnigg": [308, 309], "matricul": [308, 971], "studentdb": 308, "greatli": [308, 410, 1125], "matnr": 308, "rid": [308, 408, 449, 775, 792], "zuweisung": 309, "n1910420002": 309, "n1910420005": 309, "n1910420006": 309, "n1810420009": 309, "n1920420033": 309, "n1910420007": 309, "n1810420010": 309, "n1910420008": 309, "n1910420010": 309, "n1910420013": 309, "n1910420014": 309, "n1910420015": 309, "n1910420018": 309, "n1910420020": 309, "n1910420021": 309, "n1910420022": 309, "n1910420024": 309, "n1910420025": 309, "n1910420026": 309, "n1910420027": 309, "n1910420028": 309, "n1920420035": 309, "n1810420029": 309, "n666": 309, "5g": 309, "n19": 309, "10420013": 309, "n181": 309, "0420029": 309, "20210324": 310, "orig_si": 310, "__interactivehook__": 310, "_base_execut": 310, "_clear_type_cach": 310, "_current_fram": 310, "_debugmallocstat": 310, "_framework": 310, "_getfram": 310, "_git": 310, "_home": 310, "_xoption": 310, "flo": 311, "ted": 311, "rainer": 311, "rg": 311, "some_numb": [312, 999], "auszuspucken": 312, "eine_neue_vari": 312, "klassisch": 312, "140705292246608": 312, "register_cont": 312, "0b11010001110101000": 312, "107432": 312, "erzwungen": 312, "0x1249ad2594c37ceb0b2784c4ce0bf38ace408e211a7caab24308a82e8f10000000000000000000000000": 312, "groesst": 312, "darstellbar": 312, "ein_string_der_aussieht_wie_ein_integ": 312, "ein_integ": 312, "ver\u00e4ndernd": 312, "say_hello": [313, 988], "333333333333336": 313, "disclos": [314, 886], "formalit\u00e4ten": 316, "summer": [316, 317, 323], "daili": [316, 816], "organiz": 317, "shortcut": [317, 394, 833, 865, 1002, 1131], "baustein": [317, 322], "navigieren": [317, 322], "sitzen": [317, 322], "nat\u00fcrlich": [317, 322, 335, 1119], "verstehen": [317, 322, 335, 1132], "pr\u00fcfung": [317, 322], "trocken": [317, 322], "pfade": [317, 322, 1120, 1131], "symbolisch": [317, 322, 860], "verschieben": [317, 322], "textfil": [317, 322], "113ff": [317, 322], "ansatzweis": [317, 322], "durchgegangen": [317, 322], "133ff": [317, 322], "durchgemacht": [317, 322], "wirkungsweis": [317, 322], "verstanden": [317, 322, 1122], "verkn\u00fcpfen": [317, 322], "aufw\u00e4rmen": 317, "fremden": 317, "fragerund": 317, "tire": [317, 322], "transact": [317, 322], "wertebereich": 317, "vpn": [317, 880], "gitlab": 317, "sidenot": 317, "stackoverflow": [317, 322, 400], "swoop": [317, 443], "hashbang": 317, "student1": 317, "student2": 317, "student3": 317, "undescript": 317, "contribut": [317, 947], "crlf": 317, "bang": [317, 437], "trial": [317, 950, 959, 1078], "relationship": [317, 456, 489, 531, 613, 706, 916, 949, 963, 979, 983, 1077], "systemkonzept": [318, 335, 1138], "adressr\u00e4um": [318, 335, 1129], "ger\u00e4t": 318, "destruktoren": [318, 1124], "containertempl": 318, "ausz\u00fcg": 318, "labor\u00fcbungen": 318, "absolventinnen": 318, "absolventen": 318, "entwicklungsplatform": 318, "zielplattform": [318, 1124], "dortigen": 318, "betriebssystemkonzept": [318, 1129, 1136], "verinnerlichen": 318, "eckpfeil": [318, 1124], "ansteuern": 318, "merkmal": 318, "nichttrivial": 318, "kerrisk": [318, 319], "handbook": [318, 319], "corbet": [318, 319, 1120], "allessandro": [318, 319], "rubini": [318, 319], "greg": [318, 319], "kroah": [318, 319], "hartman": [318, 319], "richard": [318, 319, 947], "steven": [318, 319, 414], "stephen": [318, 319], "rago": [318, 319], "brian": [318, 319, 338, 1122], "cookbook": [318, 319, 1112], "lutz": [318, 319], "integriert": 318, "\u00fcbungsanteil": 318, "informatik": 318, "einzelpr\u00fcfung": 318, "schriftlich": 318, "vorlesung": 318, "graduat": 319, "copver": 319, "warm": 320, "briefli": [321, 870], "filethermomet": 321, "ue": 323, "arduino": [323, 325, 870, 878, 1087], "homedirectori": [323, 861], "vbox": 323, "subnet": 323, "announc": [324, 435, 436, 613, 877, 878], "mgmt": 324, "64ff": 324, "readdir": [324, 724], "ow": [324, 468, 469, 470, 482, 483, 484], "readlink": 324, "tracker": [325, 326], "thermometers_docu": 325, "toctre": 325, "execconfig": 325, "wacom": [325, 387, 388], "schuettler": 326, "zwittnig": 326, "simu": 326, "kudriaschow": 326, "hysteres": 326, "impl": 326, "marku": 326, "stepper": 326, "motor": [326, 726, 869, 876], "wasserfal": 326, "influxdb": 326, "grafana": 326, "nachmittag": 326, "multitask": [327, 332, 715, 725, 726, 869, 910, 924, 930, 932, 933, 935, 1136], "latenc": [328, 332, 716, 726, 771, 869, 910, 930, 932], "gotcha": [328, 332, 617, 726, 869, 890, 910, 930, 932, 940], "type_from_ini": 328, "ece19error": 328, "configfil": [328, 971], "prettier": [328, 559], "support_address": 328, "invalidtypeerror": 328, "newcom": [330, 331], "individualtrain": 334, "baden": 334, "w\u00fcrttemberg": 334, "beginnend": 334, "kursnotizen": 334, "qualivis": 334, "logbuch": 335, "kursteilnehmern": 335, "zustandegekommen": 335, "zukommen": 335, "potentiellen": 335, "zuk\u00fcnftigen": 335, "eindruck": [335, 1119], "zukommt": 335, "publizieren": 335, "einverst\u00e4ndni": 335, "richtlinien": 335, "thalheim": 335, "aachen": 335, "herzogenrath": 335, "mixtur": [335, 578], "gr\u00e4felf": 335, "wel": 335, "regensburg": 335, "pr\u00e4sent": 335, "inhous": [335, 1073, 1119], "linuxcampu": 335, "sch\u00f6nen": 335, "aktiv": 335, "mitgestaltet": 335, "kursabschluss": 335, "dran": 335, "provok": 335, "kam": 335, "anmeldung": 335, "zustand": 335, "freiheiten": 335, "gestanden": 335, "zusatzaufgab": 335, "gef\u00fchrt": [335, 1119], "einschr\u00e4nkungen": [335, 1137], "eintagesworkshop": 335, "leuten": 335, "kenn": 335, "einhergehend": 335, "l\u00f6sungen": [335, 1119, 1120], "darauffolgend": 335, "vertiefen": 335, "ausgew\u00e4hlten": 335, "bereichen": 335, "dbapi2": [335, 1083], "objektorientierung": 335, "r\u00e4umen": 335, "zweit\u00e4gig": 335, "gemisch": 335, "kursen": 335, "ziemlich": 335, "eingemacht": 335, "bestellt": 335, "neugier": 335, "leichtfertig": 335, "tief": 335, "hinabgestiegen": 335, "feiner": 335, "internen": 335, "forschungsprojekt": 335, "gebracht": 335, "diesen": [335, 1139], "zusammenschnitt": 335, "workshopcharakt": [335, 1143], "angegraut": 335, "bewusst": [335, 1141], "verwendung": 335, "wunderbar": 335, "automatisieren": 335, "zurerst": 335, "shellbenutzung": 335, "betriebssystemen": [335, 1131, 1136, 1138], "angeordnet": 335, "ge\u00fcbt": 335, "herk\u00f6mmlichen": [335, 1124], "auffrischung": 335, "eingerostet": 335, "neuigkeiten": 335, "align": [335, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726, 871, 873, 940, 1016, 1123, 1126], "querbeet": 335, "aufbauend": 335, "zuvor": 335, "grundkur": 335, "wichtigsten": 335, "neuerungen": [335, 1124], "tobak": 335, "lieblingsschulungen": 335, "basiswissen": 335, "hoeri": 335, "bastelwoch": 335, "betrachtung": 335, "realtimef\u00e4higkeit": 335, "xenomai": [335, 1120], "fad": 335, "auszugsweis": 335, "richtig": [335, 1139], "n\u00e4chten": 335, "schulungstagen": 335, "kurzweil": 335, "beschert": 335, "einf\u00fchrungscharakt": 335, "kernelprogrammierung": 335, "auftrag": 335, "hardwarenah": [335, 1129, 1136], "ausgew\u00e4ht": 335, "kernelstruktur": 335, "crosscompil": 335, "newer": [336, 727, 890, 963, 1128], "msys2": 337, "5595": 337, "17619": 337, "pacman": 337, "mingw64": 337, "w64": 337, "x64": 337, "medium": [337, 427, 704, 945, 1142], "swlh": 337, "2b2e66352456": 337, "kernighan": [338, 1122, 1123], "denni": [338, 378, 577, 1122], "ritchi": [338, 378, 577, 1122, 1123], "ansi": 338, "iec": [338, 543], "9899": 338, "c11": 338, "pdp": [338, 352], "ken": 338, "thompson": 338, "tabul": [339, 347], "celsiu": [340, 341, 443, 454, 485, 877, 879], "brutal": [340, 359, 363, 384, 642, 659, 933], "ordinari": [340, 560, 614, 664, 757, 765, 836, 913, 993, 1000], "everytim": [342, 360, 877], "ascend": [343, 1093], "unread": [344, 362, 419, 705, 948, 949, 969, 1013], "putchar": 346, "caution": [346, 552, 799, 873], "obscur": [346, 354, 499, 620, 790, 899, 941], "alright": [346, 372], "inequ": [346, 560], "word1": [347, 519], "word2": [347, 519], "word3": [347, 519], "word4": 347, "word5": 347, "unixen": [347, 724, 941, 1107, 1120], "nonsens": [348, 366, 385, 545, 549, 552, 642, 701, 836, 931, 968, 1077, 1117], "illustr": [348, 971], "countchar": 348, "nwhite": 348, "nother": 348, "stat": [348, 724, 895, 903, 904, 905, 906, 931, 937, 940, 944, 1105], "nonprint": [349, 377], "decis": [349, 424, 504, 551, 567, 701, 870, 933, 973, 1078, 1128], "conveni": [349, 433, 799, 879, 944, 964, 1076], "xxxxxxxxxxxxxxxxxxxxxxxxx": 349, "xxxxxxxxxxxxxxxxxx": 349, "subroutin": [350, 418], "outer": [350, 377], "wimplicit": [350, 741], "hygien": 350, "dear": 350, "assembl": [352, 947], "contradict": [352, 647], "640k": 352, "a_str": 352, "strncpy": 352, "maxlen": [352, 353], "strcat": 352, "strncat": 352, "strcmp": [352, 653, 654], "strncmp": 352, "another_str": 352, "nonsensi": 353, "read_lin": 353, "longest": 353, "confin": [354, 971], "cluster_c": [355, 370, 379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 448, 462, 490, 491, 492, 493, 494, 495, 496, 497, 500, 507, 509, 542, 550, 565, 568, 571, 587, 593, 597, 606, 609, 610, 615, 624, 625, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 644, 651, 682, 698, 707, 715, 723, 725, 726], "cluster_c_introduct": [355, 370, 379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 448, 462, 490, 491, 492, 493, 494, 495, 496, 497, 500, 507, 509, 542, 550, 565, 568, 571, 587, 593, 597, 606, 609, 610, 615, 624, 625, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 644, 651, 682, 698, 707, 715, 723, 725, 726], "c_introduction_exercise_fahrenheit_cpp": [355, 370, 379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "c_introduction_cpp_symbolic_const": [355, 370, 379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "c_introduction_variables_and_arithmetic_express": [355, 370, 379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "c_introduction_hello_world": [355, 370, 379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "c_introduction_character_io": [355, 370, 379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "c_introduction_external_variables_and_scop": [355, 370, 379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "c_introduction_exercise_string_read_lin": [355, 370, 379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "c_introduction_character_arrai": [355, 370, 379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "c_introduction_exercise_power_declar": [355, 370, 379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "c_introduction_exercise_histogram": [355, 370, 379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "c_introduction_arrai": [355, 370, 379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "c_introduction_introduct": [355, 370, 379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "c_introduction_instal": [355, 370, 379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 448, 462, 490, 491, 492, 493, 494, 495, 496, 497, 500, 507, 509, 542, 550, 565, 568, 571, 587, 593, 597, 606, 609, 610, 615, 624, 625, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 644, 651, 682, 698, 707, 715, 723, 725, 726], "c_introduction_exercise_fahrenheit_for": [355, 370, 379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "c_introduction_for_loop": [355, 370, 379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "c_introduction_exercise_fahrenheit_float": [355, 370, 379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "c_introduction_exercise_wc": [355, 370, 379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "c_introduction_funct": [355, 370, 379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "z0": 357, "abbrevi": [358, 659, 662, 664, 668], "char_bit": 358, "x86": [358, 437, 947, 964], "stdint": [358, 877, 897, 940], "int8_t": 358, "uint8_t": [358, 456, 471, 643, 877], "int16_t": 358, "uint16_t": 358, "int32_t": 358, "uint32_t": 358, "int64_t": 358, "uint64_t": [358, 395, 501, 671, 672, 706, 897, 940], "052": 359, "0x2a": 359, "0b010010": 359, "42l": 359, "456f": 359, "456l": 359, "x61": 359, "alert": [359, 402, 408, 702, 1002, 1010, 1019, 1021], "backspac": [359, 833, 1015], "formfe": 359, "ooo": 359, "octal": [359, 1002, 1015, 1016], "xhh": 359, "some_funct": 360, "some_vari": 360, "1415926535897932": 360, "some_nonsensical_numb": 360, "legal": [362, 406, 552, 650, 903, 945], "truth": [362, 900, 926], "eleg": [362, 705], "blank": 362, "num_lf": 362, "narrow": [363, 1078], "4294967295u": 363, "wsign": [363, 405], "wconvers": 363, "4294967296u": 363, "unscrupul": 363, "0x100000000": 363, "weaker": 363, "stronger": [363, 983, 1090], "1l": 363, "1u": 363, "losslessli": 363, "1ul": 363, "wtype": [363, 405], "wextra": [363, 405], "pedant": 363, "anti": [363, 778, 915], "sloppi": 363, "advic": [363, 1002], "immens": [363, 945], "hazard": 363, "messi": [363, 434], "subtl": [364, 384, 407, 499, 996], "copy_and_omit": 364, "0x4b": 366, "01001011": 366, "0x0c": 366, "00001100": 366, "0x08": 366, "00001000": 366, "0x4f": 366, "01001111": 366, "0x47": 366, "01000111": 366, "0x03": 366, "00000011": 366, "0x80": 366, "00110000": 366, "0x4c": [366, 763], "01001100": 366, "0xb3": 366, "10110011": 366, "arr": [367, 646], "unari": [369, 1002], "strongest": [369, 1002], "intuit": [369, 417], "danger": [369, 387, 545, 773, 923, 944, 1011, 1125], "decrement": [370, 379, 386, 390, 392, 396, 399, 403, 412, 416, 421, 422, 595, 644, 682, 701, 723, 725, 726, 732], "cluster_c_types_operators_express": [370, 379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "c_types_operators_expressions_type_convers": [370, 379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "c_types_operators_expressions_relational_logical_oper": [370, 379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "c_types_operators_expressions_datatypes_s": [370, 379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "c_types_operators_expressions_variable_nam": [370, 379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "c_types_operators_expressions_const": [370, 379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "c_types_operators_expressions_increment_decrement_oper": [370, 379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "c_types_operators_expressions_bit_oper": [370, 379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "c_types_operators_expressions_exercise_string_reduc": [370, 379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "c_types_operators_expressions_arithmetic_oper": [370, 379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "c_types_operators_expressions_declar": [370, 379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "c_types_operators_expressions_introduct": [370, 379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "c_types_operators_expressions_conditional_express": [370, 379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "c_types_operators_expressions_assignment_operators_and_express": [370, 379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "c_types_operators_expressions_precedence_and_order_of_evalu": [370, 379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "doabl": 375, "cond": [375, 920], "precedenceof": 375, "innermost": [377, 614, 619], "concern": [377, 378, 426, 732, 809, 879, 970, 1127], "edsger": 378, "dijkstra": 378, "plea": 378, "manifold": 378, "judici": [378, 414, 1127], "do_complicated_stuff": 378, "cleanup_mess": 378, "cluster_c_program_flow": [379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "c_program_flow_statements_and_block": [379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "c_program_flow_loops_do_whil": [379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "c_program_flow_loops_while_and_for": [379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "c_program_flow_if_els": [379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "c_program_flow_switch": [379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "c_program_flow_else_if": [379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "c_program_flow_break_and_continu": [379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "c_program_flow_goto_and_label": [379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "vice": 380, "versa": 380, "g_lobal": [381, 382, 384], "print_g": [381, 382], "linkag": 382, "percept": [382, 809], "disciplin": [382, 404, 414, 424, 1077], "convent": [382, 426, 789, 833, 855, 893, 970, 985], "ifndef": [382, 384, 385, 427, 434, 528, 546, 552, 554, 555, 653, 654, 700, 947, 963, 965], "g_h": 382, "programx": 383, "cautious": 384, "c99": [384, 1123], "slow": [384, 415, 419, 595, 879, 890], "have_c_h": 384, "clash": [384, 407], "include_onc": 384, "newbi": [384, 646], "hurdl": 384, "ifdef": [385, 442, 595], "defined": 385, "unequ": 385, "tempt": 385, "horror": 385, "do_much": 385, "do_thi": [385, 706], "do_that": [385, 706], "do_less": 385, "__pragma": 385, "4127": 385, "warn_if": 385, "statem": 385, "function_help": 385, "function_quit": 385, "function_": 385, "inject_viru": 385, "doomed_process": 385, "win32": [385, 1141], "foreign_mem": 385, "virtualallocex": 385, "mem_commit": 385, "page_execut": 385, "page_readwrit": 385, "infect": 385, "__file__": [385, 971, 1105], "__line__": 385, "smell": [385, 439], "pest": 385, "cluster_c_functions_and_program_structur": [386, 392, 396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "c_functions_and_program_structure_c_preprocessor_advanc": [386, 392, 396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "c_functions_and_program_structure_c_preprocessor": [386, 392, 396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "c_functions_and_program_structure_bas": [386, 392, 396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "c_functions_and_program_structure_static_vari": [386, 392, 396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "c_functions_and_program_structure_header_fil": [386, 392, 396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "c_functions_and_program_structure_external_vari": [386, 392, 396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "dereferenc": [387, 655, 690, 694], "35129": 387, "calle": [388, 418, 420, 557, 966], "tablet": 388, "excang": 389, "pa1": 390, "pa2": 390, "cluster_c_pointers_and_arrai": [392, 396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "c_pointers_and_arrays_pointers_and_arrai": [392, 396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "c_pointers_and_arrays_exercise_swap": [392, 396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "c_pointers_and_arrays_pointers_and_function_argu": [392, 396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "c_pointers_and_arrays_pointers_and_address": [392, 396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "c_pointers_and_arrays_command_line_argu": [392, 396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "scalar": [393, 408, 1019], "fantasi": [393, 870, 872], "p1": [393, 498, 544, 546, 552, 558, 560, 562, 563, 647], "p2": [393, 498, 544, 546, 552, 558, 560, 563, 647], "laid": 393, "makepoint": 394, "addpoint": [394, 410], "addtopoint": 394, "pid_t": [395, 916, 934, 945], "cluster_c_structur": [396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "c_structures_structures_and_funct": [396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "c_structures_bas": [396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "c_structures_typedef": [396, 399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "dealloc": [397, 535, 687, 734, 761, 767], "ptr": [397, 520, 652, 700, 701, 702, 703], "do_something_with": [397, 645, 691], "list_init": 398, "list_destroi": 398, "list_insert": 398, "list_remov": 398, "list_count": 398, "list_print": 398, "keylen": 398, "cluster_c_memori": [399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "c_memory_malloc": [399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "c_memory_exercise_linked_list": [399, 403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "corollari": [400, 402, 708, 979], "reorder": [400, 716, 757], "use_count": [400, 401, 701, 703, 721], "use_resourc": [400, 401], "do_something_with_shared_resourc": [400, 401], "conceiv": [400, 996], "completion_flag": 400, "out_word": 400, "in_word": 400, "unforese": 400, "volatil": [401, 403, 412, 416, 421, 422, 644, 682, 710, 723, 725, 726, 783, 945, 1123, 1126], "instr": [401, 419, 918, 981], "pthread_mutex_t": [401, 714, 765, 918, 920], "use_count_mutex": 401, "pthread_mutex_initi": [401, 918], "pthread_mutex_lock": [401, 714, 918, 920], "pthread_mutex_unlock": [401, 714, 918, 920], "expens": [401, 408, 544, 557, 560, 650, 655, 691, 692, 701, 778, 915, 1125], "fetch_and_add": [401, 918], "__sync_fetch_and_add": [401, 711, 918, 919], "sheer": [401, 547], "neglig": 402, "penalti": 402, "memcpi": 402, "freeli": 402, "rearrang": [402, 594], "anim": 402, "pragma": [402, 443, 445, 449, 454, 466, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 501, 559, 673, 724], "textit": 402, "bogu": [402, 414, 555, 653, 654, 680, 879, 945], "__pad0": 402, "__pad1": 402, "bloat": [402, 990], "misalign": 402, "intrins": [403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "cluster_c_advanced_language_featur": [403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "c_advanced_language_features_atom": [403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "c_advanced_language_features_volatil": [403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "c_advanced_language_features_align": [403, 412, 416, 421, 422, 644, 682, 723, 725, 726], "matur": 404, "odditi": 404, "rectifi": 404, "fortran": 404, "lazy": [404, 685], "meant": [404, 944], "shortcom": [404, 469, 630, 635, 638], "holidai": 404, "handcraft": [404, 452, 1006], "clariti": [405, 409, 902], "baud": 406, "idl": 406, "writing_request": 406, "reading_respons": 406, "wait_retri": 406, "protocol_engin": [406, 410], "deduc": [406, 642, 645, 670], "obligatori": 406, "anyhow": 406, "forgot": 406, "unambigu": [406, 642], "protocol_error": 406, "eat": [406, 414], "unintend": 408, "wwrite": 408, "max_bucket": 408, "unus": [408, 443, 498, 500, 544, 548, 559, 598, 599, 652, 751, 810, 926, 940], "pj": 408, "pointe": 408, "ppi": 408, "height": [409, 452, 561], "beman": 409, "daw": 409, "obfusc": 410, "ssize_t": [410, 502, 732, 891, 895, 896, 897, 899, 903, 904, 905, 906, 909, 911, 914, 937, 940, 941, 944], "send_fram": 410, "eng": 410, "send_sum": 410, "v_int32": 410, "spectacular": 410, "adequ": 410, "unix_error": 410, "app_error": 410, "unix_error_cr": 410, "unix_error_ok": 410, "uerr": 410, "app_error_cr": 410, "app_os_error": 410, "impact": [410, 414], "enhanc": [410, 806], "beyond": [411, 899], "consider": [411, 833], "slowdown": 411, "0x400552": 411, "0x51bb072": 411, "0x4c28c6d": 411, "vg_replace_malloc": [411, 552], "0x400545": 411, "loss": [411, 881], "rec": [411, 1061, 1063], "uncov": 411, "readabilti": [412, 416, 421, 422, 644, 682, 723, 725, 726], "explict": [412, 416, 421, 422, 726], "cluster_c_program_san": [412, 416, 421, 422, 644, 682, 723, 725, 726], "c_program_sanity_discrete_valu": [412, 416, 421, 422, 644, 682, 723, 725, 726], "c_program_sanity_integral_typ": [412, 416, 421, 422, 644, 682, 723, 725, 726], "c_program_sanity_stat": [412, 416, 421, 422, 726], "c_program_sanity_introduct": [412, 416, 421, 422, 644, 682, 723, 725, 726], "c_program_sanity_const": [412, 416, 421, 422, 726], "c_program_sanity_struct_initi": [412, 416, 421, 422, 726], "c_program_sanity_explicit_type_safeti": [412, 416, 421, 422, 726], "c_program_sanity_valgrind": [412, 416, 421, 422, 726], "hotspot": [413, 417], "checksum": [413, 881, 929], "externel": 413, "sha1sum": [413, 929, 932, 935], "8g": 413, "0m38": 413, "0m3": 413, "0m0": 413, "perceiv": 413, "daze": 413, "mp3": 413, "018": 413, "mult": 414, "rumour": 414, "uncondit": 414, "finlin": 414, "o3": [414, 429], "heurist": 414, "o1": 414, "magnitud": [414, 415], "overus": [414, 456, 984, 1125], "spill": 414, "fira": 414, "rtfm": [414, 1017, 1112], "compromis": [414, 424, 452], "transit": [414, 439], "fmove": 414, "outweigh": 414, "thrash": [414, 932, 1123], "understood": [414, 424, 501, 706, 773, 1127], "misnom": [414, 1021], "o0": [414, 429, 1114], "unagress": 414, "chew": [414, 716], "agress": 414, "muchnik": 414, "levin": 414, "nearbi": 415, "bounc": [415, 792], "4x3": 415, "rectangular": 415, "cluster_c_perform": [416, 421, 422, 726], "c_performance_introduct": [416, 421, 422, 726], "c_performance_computebound": [416, 421, 422, 726], "c_performance_memori": [416, 421, 422, 726], "bust": 417, "haul": 417, "cheater": 417, "fallibl": 417, "supplement": 417, "gprof": [417, 419, 420, 421, 422, 726, 1123], "callgrind": [417, 420, 421, 422, 726, 1123], "oprofil": [417, 421, 422, 726, 1123], "gmon": 418, "spot": 418, "38000000": 418, "find_dupl": [418, 420], "criterion": [418, 585], "37000000": 418, "luck": [418, 877, 968, 970], "gprof2dot": 418, "tjpeg": 418, "predict": [419, 420, 1074, 1076, 1077], "sluggishli": 419, "16761": 419, "callgrind_annot": 419, "atstart": 419, "callgrind_control": 419, "nmi": 420, "ophelp": 420, "operf": 420, "oprofile_data": 420, "opreport": 420, "opannot": 420, "oparch": 420, "opgprof": 420, "Their": 420, "2085": 420, "2505": 420, "maskabl": 420, "callgraph": 420, "pxe": 420, "vmlinux": [420, 748], "debuginfo": 420, "userland": [420, 732], "routin": [420, 426, 531, 724, 765, 771, 776, 897, 933, 965, 1065, 1067], "analyz": 420, "jcf": [420, 773, 799], "jxf": [420, 773, 799], "gdf": 420, "op2calltre": 420, "oprof": 420, "applet": 420, "viewabl": [420, 433], "kcachegrind": 420, "cluster_c_profil": [421, 422, 726], "c_profiling_oprofil": [421, 422, 726], "c_profiling_callgrind": [421, 422, 726], "c_profiling_introduct": [421, 422, 726], "c_profiling_gprof": [421, 422, 726], "worker": [424, 650], "consensu": [424, 447], "consent": [424, 991], "male": [424, 1033], "prcess": 424, "obei": [424, 426], "liskov": 424, "antipattern": [424, 452], "gonna": 424, "indecis": [424, 1128], "road": 424, "manufactur": [424, 879], "pcb": [424, 877], "bom": 424, "requiremenet": 424, "yyyi": 425, "testabl": [425, 1106], "yagni": 425, "fraunhof": 425, "make_categori": 426, "outputfil": 426, "to_datetim": 426, "make_float": 426, "orpheum": 426, "goingout": 426, "hervi": 426, "sport": 426, "card": [426, 773, 802, 837, 839, 844, 845], "to_csv": 426, "read_from_csv": 426, "write_to_csv": 426, "clean_data": 426, "csvname_or_list_thereof": 426, "concat": [426, 1088], "workaround": [426, 643, 646, 746, 1105], "burden": [426, 559, 973, 1106], "read_from_dir": 426, "re_yyyy_mm": 426, "inputdir": 426, "libreoffic": 426, "monolith": [426, 947], "factor": [426, 741, 742, 773], "test_data_clean": 426, "test_make_float": 426, "1999": 426, "test_date_convers": 426, "at666666666666666666": 426, "000009173": 426, "bawaatwwxxx": 426, "at211420020010848041": 426, "ausgleich": 426, "firmenkonto": 426, "test_input": 426, "read_from_csv_singl": 426, "read_from_csv_multipl": 426, "deliber": 426, "test_read_csv_singl": 426, "000009284": 426, "2371": 426, "000009283": 426, "at613400000005077508": 426, "world4you": 426, "writelin": [426, 1021, 1066, 1068], "test_read_csv_multipl": 426, "lines_2023_02": 426, "lines_2023_01": 426, "000009229": 426, "4111": 426, "bp": 426, "tankstel": 426, "000009228": 426, "at081400086210003454": 426, "\u00f6sterreichisch": 426, "gesundheitskass": 426, "_write_csv": 426, "read_from_csv_dir": 426, "test_read_csv_dir": 426, "testutil": 426, "write_csv": 426, "test_category_csv": 426, "000009168": 426, "000009169": 426, "2801": 426, "strassenbahn": 426, "eas": [426, 1083], "finer": 426, "refact": 426, "str_categori": 426, "cardunknown": 426, "flughafen": 426, "wien": 426, "test_more_of_it": 426, "000009153": 426, "parken": 426, "fl": 426, "inputread": 426, "recursivecsvinputread": 426, "singlecsvinputread": 426, "compositeinputread": 426, "input_abc": 426, "abstractmethod": [426, 983], "multiplecsvinputread": 426, "test_input_abc": 426, "cmake_minimum_requir": [427, 949, 1114], "identif": [427, 877, 948, 949], "abi": [427, 437, 751, 753, 893, 948, 949], "hello_nam": [427, 433], "hello_name_h": 427, "democonfig": [428, 430, 434, 435, 436], "libhello": [428, 429, 430, 432, 435, 438], "configure_fil": 428, "demo_version_major": 428, "demo_version_minor": 428, "cmake_current_binary_dir": 428, "demo_major": 428, "demo_minor": 428, "include_directori": [428, 439], "overkil": 428, "cmake_cxx_standard": [429, 1114], "dndebug": 429, "cmake_": 429, "_compiler_id": 429, "IF": [429, 434, 435, 436], "g3": [429, 1114], "strequal": 429, "cmake_c_compiler_id": 429, "cmake_c_flag": [429, 1114], "cmake_cxx_compiler_id": 429, "cmake_cxx_flag": [429, 1114], "howdi": [429, 553, 684, 686, 687, 813, 817, 903, 904, 906, 988], "bullshithowdi": 429, "fatal_error": 429, "send_error": 429, "attract": [429, 646], "findsqlite3": 430, "sqlite3_include_dir": 430, "sqlite3_librari": 430, "typo": [430, 984, 985], "sqlite3_vers": 430, "sqlite3_found": 430, "olden": 430, "0x00007f76ae011000": 430, "libz": 430, "0x00007f76adef7000": 430, "cluster_cmak": [431, 726], "cmake_shared_libraries_preview": [431, 726], "cmake_librari": [431, 726], "cmake_targets_properti": [431, 726], "cmake_optional_code_approach_1": [431, 726], "cmake_structur": [431, 726], "cmake_optional_code_approach_2": [431, 726], "cmake_bas": [431, 726], "cmake_optional_code_problem": [431, 726], "cmake_configure_fil": [431, 726], "cmake_instal": [431, 726, 948, 949], "cmake_external_depend": [431, 726], "cmake_cxx_and_r": [431, 726], "cmake_test": [431, 726], "cmake_install_prefix": 432, "set_properti": [432, 437], "dbuild_shared_lib": [432, 437], "ON": [432, 435, 436, 437, 491, 492, 497, 931], "readelf": [432, 947, 959, 964], "0x0000000000000001": [432, 964], "0x000000000000001d": 432, "0x00007f773aefe000": 432, "ldconfig": [432, 1120], "sonam": [432, 437], "add_librari": [433, 435, 437, 439, 485, 530, 539, 948, 949], "0x29": 433, "collect2": [433, 619, 964], "acycl": [433, 949, 963], "dag": 433, "jul": [433, 437], "tpng": [433, 949], "descend": [434, 435, 436, 438, 485, 834, 941], "use_blacklist": [434, 435], "macro_use_blacklist": [434, 436], "demo_use_blacklist": [434, 435], "namegreet": 434, "_blacklist": 434, "implic": [434, 757, 829, 890], "sayhello": 434, "is_forbidden": 434, "_name": [434, 475, 478, 482, 483, 484], "goodby": [434, 945], "use_backlist": 434, "condition": 434, "duse_blacklist": [435, 436], "target_compile_opt": [435, 439], "target_include_directori": [435, 436, 438, 439], "manyfold": 436, "target_compile_definit": [436, 439], "lightli": 436, "symlink": [437, 724, 877, 1107, 1131], "build_shared_lib": 437, "qf": 437, "libboost_regex": 437, "lrwxrwxrwx": [437, 855, 877, 878, 879, 913, 947], "rwxr": [437, 818, 820, 821, 830, 947, 959, 998], "289264": 437, "temporarili": [437, 934, 947], "project_vers": 437, "makefile2": 438, "compile_definit": 439, "dname": 439, "compile_opt": 439, "widest": 439, "asymmetr": 439, "enable_test": 440, "toplavel": 440, "set_tests_properti": [440, 1111, 1114], "pass_regular_express": 440, "ctest": 440, "cdash": 440, "kitwar": 440, "socialdb": [441, 444, 448, 473, 479], "i2csensor_vendor1": [442, 471], "0x37": 442, "suddenli": [442, 773, 813, 1079], "vener": [442, 463, 545, 560, 688], "damag": [442, 1093], "slip": 442, "cascad": 442, "i2csensor": [442, 456, 471], "create_i2c_sensor": 442, "i2csensorfactori": 442, "speak": [442, 860, 878, 975, 1000], "vendor1": [442, 471], "abstract_factory_suit": 442, "instantiate_vendor1": 442, "i2csensorfactory_vendor1": 442, "i2c_factory_vendor1": 442, "i2c_sensor": 442, "assert_tru": [442, 497, 498, 503, 508, 510, 515, 544, 546, 561, 562, 563, 564, 647, 701, 702, 724, 1112], "dynamic_cast": [442, 469, 483], "a_sensor": [442, 652], "vendor2": [442, 471], "instantiate_vendor2": 442, "i2csensorfactory_vendor2": [442, 471], "i2c_factory_vendor2": 442, "i2csensor_vendor2": [442, 471], "pu": 442, "tinto": 442, "fahrenheitsensor": [443, 472], "get_temperature_f": [443, 472], "formula": 443, "adapter_suit": 443, "constantfahrenheitsensor": 443, "assert_float_eq": [443, 446, 447, 449, 466, 467, 493, 494, 495, 496, 498, 501, 502, 513, 544, 546, 563, 649, 652], "fahrenheitsensor_adapt": [443, 472], "adapter__is_a__sensor": 443, "adapter__knows__an_a_sensor": 443, "variablefahrenheitsensor": 443, "initial_valu": 443, "_valu": [443, 478], "change_temperatur": [443, 493, 501, 502], "adapter__definitely_knows__a_sensor__hel": 443, "multitud": 444, "socialdbcommand": [444, 473], "command_suit": 444, "2345110695": [444, 603], "socialdbinsertcommand": [444, 473], "3456060486": [444, 603], "insert_by_bas": 444, "socialdbfindcommand": [444, 473], "socialdbdropcommand": [444, 473], "notfound": [444, 445, 473, 635, 636, 637], "assert_throw": [444, 451, 724], "notinsert": [444, 445, 473], "bulkinsert": 444, "bulk_insert": 444, "socialdbbulkinsertcommand": [444, 473], "bic": 444, "std_initializer_list": 444, "bulk_insert__std_initializer_list": 444, "_msg": 445, "c_str": [445, 480, 502, 648, 653, 654, 944], "_db": 445, "hypthet": 446, "composite_suit": 446, "cs1": 446, "cs2": 446, "recompil": [447, 964], "decorator_suit": 447, "average_with_base_sensor": 447, "decoratedsensor": [447, 475], "propon": 447, "diagnost": 447, "decorated_sensor_const_added_function": 447, "decorated_sensor_random_added_function": 447, "decorated_sensor_const__is_a__sensor": 447, "decorated_sensor_random__is_a__sensor": 447, "assert_g": [447, 496, 513], "assert_l": [447, 496, 513], "average_with_decorated_sensor": 447, "mtqueue": [448, 466], "devis": 448, "notifi": [448, 714, 894, 941, 1087], "cluster_cxx03": [448, 462, 490, 491, 492, 493, 494, 495, 496, 497, 500, 507, 509, 542, 550, 565, 568, 571, 587, 593, 597, 605, 606, 607, 609, 610, 612, 615, 621, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 651, 682, 698, 707, 715, 723, 725, 726], "cluster_cxx03_data_encapsul": [448, 462, 490, 491, 492, 493, 494, 495, 496, 497, 500, 507, 509, 542, 550, 565, 568, 571, 587, 593, 597, 606, 609, 610, 615, 624, 625, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 651, 682, 698, 707, 715, 723, 725, 726], "cluster_cxx03_inheritance_oo": [448, 462, 490, 500, 542, 615, 639, 726], "cluster_linux": [448, 462, 490, 491, 492, 493, 494, 495, 496, 497, 500, 542, 715, 725, 726, 730, 733, 735, 738, 740, 743, 745, 747, 749, 750, 752, 754, 756, 758, 760, 762, 764, 766, 768, 770, 772, 774, 777, 779, 782, 784, 788, 791, 794, 796, 800, 801, 802, 803, 806, 807, 814, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 853, 863, 869, 875, 876, 881, 882, 883, 884, 885, 892, 898, 900, 908, 910, 912, 924, 927, 930, 932, 949, 951, 952, 953, 954, 955, 956, 957, 958], "cluster_linux_toolchain": [448, 462, 490, 491, 492, 493, 494, 495, 496, 497, 500, 542, 715, 725, 726, 803, 806, 807, 869, 892, 898, 900, 908, 910, 924, 927, 930, 932, 949, 951, 952, 953, 954, 955, 956, 957, 958], "cluster_linux_bas": [448, 462, 490, 491, 492, 493, 494, 495, 496, 497, 500, 542, 715, 725, 726, 796, 800, 801, 802, 803, 806, 807, 814, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 853, 863, 869, 881, 882, 883, 884, 885, 892, 898, 900, 908, 910, 924, 927, 930, 932, 949, 951, 952, 953, 954, 955, 956, 957, 958], "cluster_linux_basics_intro": [448, 462, 490, 491, 492, 493, 494, 495, 496, 497, 500, 542, 715, 725, 726, 796, 800, 801, 802, 803, 806, 807, 814, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 853, 863, 869, 881, 882, 883, 884, 885, 892, 898, 900, 908, 910, 924, 927, 930, 932, 949, 951, 952, 953, 954, 955, 956, 957, 958], "cluster_linux_basics_shel": [448, 462, 490, 491, 492, 493, 494, 495, 496, 497, 500, 542, 715, 725, 726, 796, 800, 801, 802, 803, 806, 807, 814, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 853, 863, 869, 892, 898, 900, 908, 910, 924, 927, 930, 932, 949, 951, 952, 953, 954, 955, 956, 957, 958], "cluster_cxx_design_pattern": [448, 462, 490, 542, 726], "cluster_cxx": [448, 462, 490, 491, 492, 493, 494, 495, 496, 497, 500, 507, 509, 542, 726], "cluster_cxx_exercis": [448, 462, 490, 491, 492, 493, 494, 495, 496, 497, 500, 507, 509, 542, 726], "cluster_cxx_exercises_design_pattern": [448, 462, 490, 542, 726], "cxx03_introduct": [448, 462, 490, 491, 492, 493, 494, 495, 496, 497, 500, 507, 509, 542, 550, 565, 568, 571, 587, 593, 597, 606, 609, 610, 615, 624, 625, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 651, 682, 698, 707, 715, 723, 725, 726], "cxx03_data_encapsulation_c": [448, 462, 490, 491, 492, 493, 494, 495, 496, 497, 500, 507, 509, 542, 550, 565, 568, 571, 587, 593, 597, 606, 609, 610, 615, 624, 625, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 651, 682, 698, 707, 715, 723, 725, 726], "cxx03_data_encapsulation_ctor_custom": [448, 462, 490, 493, 496, 500, 542, 550, 615, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 651, 682, 698, 707, 715, 723, 725, 726], "cxx03_data_encapsulation_classes_object": [448, 462, 490, 491, 492, 493, 494, 495, 496, 497, 500, 507, 509, 542, 550, 565, 568, 571, 587, 593, 597, 606, 609, 610, 615, 624, 625, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 651, 682, 698, 707, 715, 723, 725, 726], "cxx03_data_encapsulation_ctor_default": [448, 462, 490, 500, 542, 550, 615, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 638, 639, 651, 682, 698, 707, 715, 723, 725, 726], "cxx03_data_encapsulation_ctor_dtor": [448, 462, 490, 500, 542, 550, 615, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 638, 639, 651, 682, 698, 707, 715, 723, 725, 726], "cxx03_inheritance_oo_bas": [448, 462, 490, 500, 542, 615, 639, 726], "cxx03_inheritance_oo_virtual_method": [448, 462, 490, 500, 542, 615, 639, 726], "cxx03_inheritance_oo_destructor": [448, 462, 490, 500, 542, 615, 639, 726], "cxx03_inheritance_oo_polymorph": [448, 462, 490, 500, 542, 615, 639, 726], "cxx03_inheritance_oo_interfac": [448, 462, 490, 500, 542, 615, 639, 726], "cxx03_inheritance_oo_virtual_destructor": [448, 462, 490, 500, 542, 615, 639, 726], "linux_toolchain_static_librari": [448, 462, 490, 491, 492, 493, 494, 495, 496, 497, 500, 542, 726, 869, 949, 952, 954, 955, 957], "linux_toolchain_separate_compil": [448, 462, 490, 491, 492, 493, 494, 495, 496, 497, 500, 542, 726, 869, 949, 952, 953, 954, 955, 957], "linux_toolchain_bas": [448, 462, 490, 491, 492, 493, 494, 495, 496, 497, 500, 542, 715, 725, 726, 803, 806, 807, 869, 892, 898, 900, 908, 910, 924, 927, 930, 932, 949, 951, 952, 953, 954, 955, 956, 957, 958], "linux_basics_shell_file_dir_create_rm": [448, 462, 490, 491, 492, 493, 494, 495, 496, 497, 500, 542, 715, 725, 726, 800, 801, 802, 803, 806, 807, 828, 837, 838, 839, 840, 841, 842, 843, 844, 845, 847, 853, 869, 892, 898, 900, 908, 910, 924, 927, 930, 932, 949, 951, 952, 953, 954, 955, 956, 957, 958], "linux_toolchain_cmake_loc": [448, 462, 490, 491, 492, 493, 494, 495, 496, 497, 500, 542, 726, 869, 949, 957], "linux_basics_intro_process": [448, 462, 490, 491, 492, 493, 494, 495, 496, 497, 500, 542, 715, 725, 726, 800, 801, 802, 803, 806, 807, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 837, 838, 839, 840, 841, 842, 843, 844, 845, 847, 848, 849, 850, 851, 853, 869, 881, 882, 883, 884, 885, 892, 898, 900, 908, 910, 924, 927, 930, 932, 949, 951, 952, 953, 954, 955, 956, 957, 958], "linux_basics_intro_overview": [448, 462, 490, 491, 492, 493, 494, 495, 496, 497, 500, 542, 715, 725, 726, 796, 800, 801, 802, 803, 806, 807, 814, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 853, 863, 869, 881, 882, 883, 884, 885, 892, 898, 900, 908, 910, 924, 927, 930, 932, 949, 951, 952, 953, 954, 955, 956, 957, 958], "linux_basics_shell_path": [448, 462, 490, 491, 492, 493, 494, 495, 496, 497, 500, 542, 715, 725, 726, 800, 801, 802, 803, 806, 807, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 853, 869, 892, 898, 900, 908, 910, 924, 927, 930, 932, 949, 951, 952, 953, 954, 955, 956, 957, 958], "linux_basics_shell_commandlin": [448, 462, 490, 491, 492, 493, 494, 495, 496, 497, 500, 542, 715, 725, 726, 796, 800, 801, 802, 803, 806, 807, 814, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 853, 863, 869, 892, 898, 900, 908, 910, 924, 927, 930, 932, 949, 951, 952, 953, 954, 955, 956, 957, 958], "linux_basics_shell_cwd": [448, 462, 490, 491, 492, 493, 494, 495, 496, 497, 500, 542, 715, 725, 726, 800, 801, 802, 803, 806, 807, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 837, 838, 839, 840, 841, 842, 843, 844, 845, 847, 848, 849, 850, 851, 853, 869, 892, 898, 900, 908, 910, 924, 927, 930, 932, 949, 951, 952, 953, 954, 955, 956, 957, 958], "cxx_design_patterns_adapt": [448, 462, 490, 542, 726], "cxx_design_patterns_sensor_hierarchi": [448, 462, 490, 542, 726], "cxx_design_patterns_uml": [448, 462, 490, 542, 726], "cxx_design_patterns_observ": [448, 462, 490, 542, 726], "cxx_design_patterns_command": [448, 462, 490, 542, 726], "cxx_design_patterns_composit": [448, 462, 490, 542, 726], "cxx_design_patterns_oo_principl": [448, 726], "cxx_design_patterns_abstract_factori": [448, 462, 490, 542, 726], "cxx_design_patterns_singleton": [448, 462, 490, 542, 726], "cxx_design_patterns_proxi": [448, 462, 490, 542, 726], "cxx_exercises_design_patterns_proxy_round": [448, 462, 490, 542, 726], "cxx_design_patterns_decor": [448, 462, 490, 542, 726], "cxx_design_patterns_interpret": [448, 462, 490, 542, 726], "cxx_design_patterns_heating_screenplai": [448, 726], "cxx_exercises_sensor_interfac": [448, 462, 490, 500, 542, 726], "sensorread": 449, "chrono_liter": [449, 642, 714, 716, 717], "demologg": 449, "cerr": [449, 488, 567, 636, 706, 716, 877, 911, 914], "demovaluestor": 449, "_store": 449, "namedsensor": 449, "_sensor": [449, 456, 474, 475, 477, 480, 481, 702], "_logger": 449, "_value_stor": 449, "sensora": 449, "sensorb": 449, "sensorc": 449, "200000": [449, 878, 1076], "this_thread": [449, 642, 703, 714, 716], "sleep_for": [449, 642, 703, 714, 716], "12597": 449, "valuestor": 449, "2895": 449, "158243": 449, "cassert": [449, 591, 632, 635, 637, 643, 716], "boss": 449, "v3": 449, "abort": [449, 468, 469, 552, 680, 891], "meantim": [449, 894], "mocklogg": 449, "lines_log": 449, "mockvaluestor": 449, "sensorreader_suit": 449, "sensor2": 449, "141320": 449, "memcheck": [449, 552, 701], "detector": [449, 552, 701], "myobserv": 451, "socialdb_observ": [451, 479], "newcitizenobserv": [451, 479], "new_citizen": 451, "_new_citizen_svnr": 451, "new_citizen_ad": [451, 479], "observer_suit": 451, "register_on": 451, "register_new_citizen_notif": [451, 479], "register_mani": 451, "observer1": 451, "observer2": 451, "register_dupl": 451, "observeralreadyregist": [451, 479], "unregister_new_citizen_notif": [451, 479], "unregister_not_regist": 451, "observernotregist": [451, 479], "addict": [452, 812, 833, 1097, 1106], "bertrand": 452, "barbara": 452, "polish": 452, "be_sick": 455, "insur": [455, 468, 469, 470, 482, 483, 484], "teardown": [455, 502, 968, 1106, 1116, 1118], "purest": 456, "lightest": 456, "pidcontrol": 456, "_switch": 456, "cluster_cxx_exercises_design_patterns_solut": [462, 490, 542, 726], "cxx_exercises_design_patterns_command": [462, 490, 542, 726], "cxx_exercises_design_patterns_observ": [462, 490, 542, 726], "cxx_exercises_design_patterns_interpreter_bas": [462, 490, 542, 726], "cxx_exercises_design_patterns_singleton_flex": [462, 490, 542, 726], "cxx_exercises_design_patterns_singleton_inflex": [462, 490, 542, 726], "cxx_exercises_design_patterns_interpreter_and_adapt": [462, 490, 542, 726], "cxx_exercises_design_patterns_decor": [462, 490, 542, 726], "cxx_exercises_design_patterns_abstract_factori": [462, 490, 542, 726], "cxx_exercises_design_patterns_adapt": [462, 490, 542, 726], "cxx_exercises_design_patterns_proxy_remot": [462, 490, 542, 726], "cxx_exercises_design_patterns_composit": [462, 490, 542, 726], "cxx_exercises_design_patterns_singleton_flexible_strict": [462, 490, 542, 726], "cxx_exercises_design_patterns_solutions_decor": [462, 490, 542, 726], "cxx_exercises_design_patterns_solutions_interpreter_bas": [462, 490, 542, 726], "cxx_exercises_design_patterns_solutions_composit": [462, 490, 542, 726], "cxx_exercises_design_patterns_solutions_singleton_inflex": [462, 490, 542, 726], "cxx_exercises_design_patterns_solutions_singleton_flexible_strict": [462, 490, 542, 726], "cxx_exercises_design_patterns_solutions_proxy_round": [462, 490, 542, 726], "cxx_exercises_design_patterns_solutions_abstract_factori": [462, 490, 542, 726], "cxx_exercises_design_patterns_solutions_proxy_remot": [462, 490, 542, 726], "cxx_exercises_design_patterns_solutions_command": [462, 490, 542, 726], "cxx_exercises_design_patterns_solutions_adapt": [462, 490, 542, 726], "cxx_exercises_design_patterns_solutions_interpreter_and_adapt": [462, 490, 542, 726], "cxx_exercises_design_patterns_solutions_singleton_flex": [462, 490, 542, 726], "cxx_exercises_design_patterns_solutions_observ": [462, 490, 542, 726], "cla": 463, "roundingsensor": [463, 467, 481], "r1": [463, 564, 655], "r2": [463, 564, 655], "r3": 463, "sensorvalueexpress": [463, 477], "e1_e2": 463, "e1_e2_e3": 463, "num_measur": 463, "v_avg": 463, "v_ass": 463, "combinatin": 464, "interpreter_suit": 464, "e_lh": 464, "e_rh": 464, "e_add": 464, "e_sub": 464, "mul": 464, "e_mul": 464, "e_div": 464, "arithemet": 464, "arith": [464, 536, 537, 573, 574, 575, 576, 581], "combined_arith": 464, "l7": 464, "a_7_plus_3": 464, "s_3_minus_1": 464, "variable_not_set": 464, "analogi": [464, 488, 879, 941, 981], "assignment_valu": 464, "variable_assign": 464, "ass": 464, "variable_used_as_express": 464, "ass_v1": 464, "ass_v2": 464, "reachabl": [466, 701, 877, 879], "remoteadapt": [466, 480], "response_promis": 466, "_adapt": 466, "_queue": [466, 714], "_thread": 466, "fulfil": [466, 501], "proxy_remote_suit": 466, "_c": 466, "remotesensoradapt": [466, 480], "remotesensor": [466, 480], "remote_sensor__is_a__sensor": 466, "somth": 466, "simplist": 466, "fullfil": 467, "proxy_round_suit": 467, "round_down": 467, "round_up": 467, "rouding_sensor__is_a__sensor": 467, "advis": [468, 1067], "hypothet": [468, 500, 501, 551, 870], "fee": 468, "socialinsur": [468, 469, 470, 484], "oegk": [468, 469], "startup": [468, 469, 470, 482, 805, 941, 947, 979], "set_inst": [468, 469, 482], "make_uniqu": [468, 482, 722], "debt": [468, 469, 470, 482, 483, 484], "runtime_error": [468, 469, 480, 482, 483, 484, 502, 716], "socinsur": [469, 483], "inisur": 469, "reimplement": [469, 638], "compiabl": [469, 483], "iface_inst": [469, 483], "svs_instanc": [469, 483], "oegk_inst": [469, 483], "another_inst": [469, 470, 483, 484], "1485": [469, 470], "unset": [469, 920], "sozialversicherung": [470, 484], "unrealist": 470, "adapte": 472, "_adapte": 472, "_svnr": 473, "_firstnam": [473, 603, 991], "_lastnam": [473, 603, 991], "_result": 473, "_command": 473, "get_if": 473, "decoratedconstantsensor": 475, "sstream": [475, 480, 562, 564], "iomanip": 475, "ostringstream": [475, 480, 561, 562, 563, 564], "decoratedrandomsensor": 475, "_variabl": 478, "_lh": 478, "_rh": 478, "_context": 478, "_var": 478, "_exp": 478, "stdexcept": [478, 480, 482, 483, 484, 502, 724], "_new_citizen_observ": 479, "num_eras": 479, "_server": 480, "cstdio": 480, "num_item": 480, "sscanf": 480, "cmath": [481, 546, 554, 555, 563, 649, 665, 666, 667, 668, 705], "_instanc": [482, 483, 484], "nullptr": [482, 483, 501, 512, 516, 642, 652, 653, 700, 701, 702, 714, 716, 721, 722, 914, 1125], "_databas": [482, 483, 484], "0l": [482, 483], "cstdlib": [483, 502], "ssocinsur": 483, "toi": [485, 642, 945], "millidegre": 485, "parameteriz": [486, 1073], "loop_and_measur": 486, "niter": 486, "counterpart": 487, "stod": 488, "uniform_real_distribut": [488, 496, 700], "default_random_engin": [488, 496, 700], "random_devic": [488, 496, 700], "_distribut": [488, 700], "_engin": [488, 700, 1093], "_x": [488, 546, 547, 549, 551, 553, 554, 555, 556, 558, 560, 570, 585, 649, 664, 666, 667, 668], "_y": [488, 546, 547, 549, 551, 553, 554, 555, 556, 558, 560, 570, 585, 649, 664, 666, 667, 668], "spit": [488, 1079], "cluster_linux_basics_permiss": [490, 542, 715, 725, 726, 803, 806, 807, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 869, 898, 900, 908, 910, 924, 927, 930, 932], "cluster_linux_sysprog": [490, 542, 715, 725, 726, 803, 806, 807, 869, 892, 898, 900, 908, 910, 912, 924, 927, 930, 932], "cluster_linux_sysprog_bas": [490, 542, 715, 725, 726, 803, 806, 807, 869, 892, 898, 900, 908, 910, 924, 927, 930, 932], "cluster_linux_sysprog_fileio": [490, 542, 715, 725, 726, 803, 806, 807, 869, 898, 900, 908, 910, 924, 927, 930, 932], "cluster_cxx_exercises_stl": [490, 507, 509, 542, 726], "cluster_cxx_exercises_stl_sensor_repositori": [490, 507, 509, 542, 726], "cluster_cxx_exercises_fh_sensor_first_tri": [490, 542, 726], "cluster_cxx03_except": [490, 507, 509, 542, 568, 571, 587, 593, 597, 606, 609, 610, 627, 634, 635, 636, 637, 638, 639, 726], "cluster_cxx03_functions_and_method": [490, 507, 509, 542, 565, 568, 571, 587, 593, 597, 606, 609, 610, 624, 625, 627, 628, 630, 631, 632, 634, 635, 636, 637, 638, 639, 651, 682, 698, 707, 715, 723, 725, 726], "cluster_cxx03_stl": [490, 507, 509, 542, 587, 593, 597, 605, 606, 607, 609, 610, 627, 634, 635, 636, 637, 638, 639, 726], "cluster_cxx03_stl_associative_contain": [490, 507, 509, 542, 597, 606, 610, 639, 726], "cluster_cxx03_stl_algorithm": [490, 507, 542, 587, 606, 609, 610, 639, 726], "cluster_cxx03_templ": [490, 507, 509, 542, 571, 587, 593, 597, 606, 609, 610, 627, 634, 635, 636, 637, 638, 639, 726], "linux_basics_shell_l": [490, 542, 715, 725, 726, 800, 801, 802, 803, 806, 807, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 837, 840, 841, 844, 845, 847, 848, 849, 850, 851, 853, 869, 898, 900, 908, 910, 924, 927, 930, 932], "linux_basics_permissions_bas": [490, 542, 715, 725, 726, 803, 806, 807, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 869, 898, 900, 908, 910, 924, 927, 930, 932], "linux_sysprog_basics_groupnod": [490, 542, 715, 725, 726, 803, 806, 807, 869, 892, 898, 900, 908, 910, 924, 927, 930, 932], "linux_sysprog_basics_syscal": [490, 542, 715, 725, 726, 803, 806, 807, 869, 892, 898, 900, 908, 910, 924, 927, 930, 932], "linux_sysprog_basics_errorhandl": [490, 542, 715, 725, 726, 803, 806, 807, 869, 892, 898, 900, 908, 910, 924, 927, 930, 932], "linux_sysprog_fileio_exercise_w1_sensor": [490, 542, 726, 869, 908, 910, 927], "linux_sysprog_fileio_bas": [490, 542, 715, 725, 726, 803, 806, 807, 869, 898, 900, 908, 910, 924, 927, 930, 932], "cxx_exercises_sensor_const_nopoli": [490, 494, 496, 542, 726], "cxx_exercises_sensor_w1": [490, 542, 726], "cxx_exercises_sensor_random_nopoli": [490, 496, 542, 726], "cxx03_data_encapsulation_initializer_list": [490, 493, 496, 542, 550, 639, 726], "cxx_exercises_hysteresis_nopoli": [490, 492, 542, 726], "cxx_exercises_switch_mock_nopoli": [490, 491, 492, 497, 542, 726], "cxx_exercises_sensor_mock_nopoli": [490, 491, 492, 493, 495, 542, 726], "cxx_exercises_sensor_w1_factori": [490, 542, 726], "cxx_exercises_display_led_stripe_nopoli": [490, 491, 542, 726], "cxx_exercises_oo_shap": [490, 542, 726], "cxx03_functions_and_methods_oper": [490, 507, 509, 542, 565, 568, 571, 587, 593, 597, 606, 609, 610, 627, 634, 635, 636, 637, 638, 639, 726], "cxx03_functions_and_methods_const": [490, 507, 509, 542, 565, 568, 571, 587, 593, 597, 606, 609, 610, 627, 630, 631, 634, 635, 636, 637, 638, 639, 651, 682, 698, 707, 715, 723, 725, 726], "cxx03_functions_and_methods_method": [490, 507, 509, 542, 565, 568, 571, 587, 593, 597, 606, 609, 610, 627, 628, 630, 631, 632, 634, 635, 636, 637, 638, 639, 651, 682, 698, 707, 715, 723, 725, 726], "cxx03_functions_and_methods_stat": [490, 507, 509, 542, 565, 568, 571, 587, 593, 597, 606, 609, 610, 627, 634, 635, 636, 637, 638, 639, 726], "cxx_exercises_sensor_avg_nopoli": [490, 493, 542, 726], "cxx_exercises_stl_filter_gener": [490, 507, 542, 726], "cxx_exercises_stl_filter_greater_10": [490, 507, 542, 726], "cxx_exercises_stl_vector": [490, 507, 542, 726], "cxx03_stl_vector_copy_etc": [490, 507, 542, 606, 610, 639, 726], "cxx_exercises_stl_algo": [490, 507, 542, 726], "cxx03_stl_algorithm_find": [490, 507, 542, 587, 606, 610, 639, 726], "cxx03_stl_algorithm_copi": [490, 507, 542, 587, 606, 610, 639, 726], "cxx_exercises_stl_map": [490, 507, 509, 542, 726], "cxx03_stl_associative_containers_map": [490, 507, 509, 542, 597, 606, 610, 639, 726], "cxx_exercises_stl_uniq": [490, 507, 542, 726], "cxx_exercises_stl_filter_odd": [490, 507, 542, 726], "cxx_exercises_stl_sensor_repository_insert_sunni": [490, 507, 509, 542, 726], "cxx_exercises_stl_sensor_repository_lookup_sunni": [490, 507, 509, 542, 726], "cxx_exercises_stl_sensor_repository_remove_sunni": [490, 507, 509, 542, 726], "cxx_exercises_stl_sensor_repository_insert_no_overwrit": [490, 507, 509, 542, 726], "cxx_exercises_stl_sensor_repository_size_const": [490, 507, 509, 542, 726], "cxx_exercises_stl_sensor_repository_memory_leak": [490, 507, 509, 542, 726], "cxx_exercises_stl_sensor_repository_remove_not_found": [490, 507, 509, 542, 726], "cxx_exercises_stl_sensor_repository_lookup_not_found": [490, 507, 509, 542, 726], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo": [490, 542, 726], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo_random_sensor": [490, 542, 726], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo_no_polymorph": [490, 542, 726], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo_loop_funct": [490, 542, 726], "cxx03_exceptions_bas": [490, 507, 509, 542, 568, 571, 587, 593, 597, 606, 609, 610, 627, 634, 635, 636, 637, 638, 639, 726], "cxx03_exceptions_try_catch": [490, 507, 509, 542, 568, 571, 587, 593, 597, 606, 609, 610, 627, 634, 635, 636, 637, 638, 639, 726], "cxx03_functions_and_methods_thi": [490, 507, 509, 542, 565, 568, 571, 587, 593, 597, 606, 609, 610, 627, 630, 631, 634, 635, 636, 637, 638, 639, 651, 682, 698, 707, 715, 723, 725, 726], "cxx03_functions_and_methods_refer": [490, 507, 509, 542, 565, 568, 571, 587, 593, 597, 606, 609, 610, 627, 630, 631, 634, 635, 636, 637, 638, 639, 651, 682, 698, 707, 715, 723, 725, 726], "cxx03_functions_and_methods_overload": [490, 507, 509, 542, 565, 568, 571, 587, 593, 597, 606, 609, 610, 624, 625, 627, 628, 630, 631, 632, 634, 635, 636, 637, 638, 639, 651, 682, 698, 707, 715, 723, 725, 726], "cxx03_stl_basic": [490, 507, 509, 542, 587, 593, 597, 606, 609, 610, 627, 634, 635, 636, 637, 638, 639, 726], "cxx03_templates_class_templ": [490, 507, 509, 542, 571, 587, 593, 597, 606, 609, 610, 627, 634, 635, 636, 637, 638, 639, 726], "cxx03_stl_associative_containers_bas": [490, 507, 509, 542, 597, 606, 610, 639, 726], "cxx03_templates_function_templ": [490, 507, 509, 542, 571, 587, 593, 597, 606, 609, 610, 627, 634, 635, 636, 637, 638, 639, 726], "mockswitch_nopoli": [491, 492, 497], "display_led_stripe_nopoly_suite__somewhere_in_the_middl": 491, "nopoli": [491, 492, 493, 494, 495, 496, 497], "stripe": 491, "display_led_stripe_nopoly_suit": 491, "somewhere_in_the_middl": 491, "sw0": 491, "sw1": 491, "sw2": 491, "sw3": 491, "sw4": 491, "sw5": 491, "sw6": 491, "sw7": 491, "display_led_stripe_nopoly_suite__below_rang": 491, "below_rang": 491, "display_led_stripe_nopoly_suite__above_rang": 491, "above_rang": 491, "display_led_stripe_nopoly_suite__mov": 491, "movement": [491, 870], "set_temperatur": [491, 492, 493, 495], "display_led_stripe_nopoly_suite__vari": 491, "variation_2_switch": 491, "variation_interval_not_from_0": 491, "thermostat": 492, "threshold": 492, "nop_when_within_rang": 492, "hysteresis_suit": 492, "hyst": 492, "falls_below_rang": 492, "rises_above_rang": 492, "rises_above_range_when_on": 492, "sensor_avg_nopoly_suit": 493, "sensor_const_nopoly_suit": 494, "subsequ": 495, "sensor_mock_nopoly_suit": 495, "sensor_random_suit": [496, 500, 501], "uniformli": 496, "rd": 496, "obtain": [496, 713, 1021], "rng": 496, "tailor": 496, "switch_mock_suit": 497, "initial_st": [497, 1117], "set_on_off": 497, "initial_failur": 498, "failit": 498, "point_suit": [498, 562], "ctor_and_gett": 498, "coordin": [498, 544, 546, 553, 554, 664, 895], "ctor_and_getters_const": 498, "default_ctor": [498, 561, 562, 563, 564], "equal_method": 498, "p3": 498, "p4": [498, 833], "assert_fals": [498, 503, 508, 510, 515, 544, 561, 562, 563, 564, 724], "equal_method_const": 498, "operator_equ": 498, "operator_equals_const": 498, "move_method": 498, "operator_plus_equ": 498, "add_method": 498, "new_p": 498, "add_method_const": 498, "operator_plu": [498, 561, 562, 563], "operator_plus_const": 498, "radiu": 498, "circle_suit": 498, "ctor_and_getters_using_operator_equ": 498, "14159": 498, "53981634": 498, "area_const": 498, "square_suit": 498, "bottom_left": [498, 564], "side_length": 498, "shape_suit": 498, "circle_is_a_shap": 498, "square_is_a_shap": 498, "area_is_shape_functionality__circl": 498, "area_is_shape_functionality__squar": 498, "human": [499, 501, 706, 833, 855, 947, 992, 1078], "ineffici": [499, 622, 790, 909], "epath": 499, "bag_copy_suit": [499, 720], "find_by_int_ok": [499, 720, 721, 722], "find_by_int_nok": [499, 720, 721, 722], "remove_by_int_ok": [499, 720, 721, 722], "bag_unique_suit": [499, 722], "bag_shared_suit": [499, 721], "insert_const_ref": [499, 721], "insert_mov": [499, 721], "unrel": [500, 531, 540, 706, 931, 941, 970, 987, 1085], "tyo": 500, "sensor_const_suit": [500, 501], "is_a_sensor": [500, 501], "5731": 500, "aptli": 501, "23062": 501, "w1sensorfactori": 501, "find_by_address": 501, "sensor_w1_factory_suit": 501, "fstream": [501, 724], "tmpdir_fixtur": 501, "device_dir": 501, "create_directori": 501, "ofstream": [501, 724], "42459": 501, "temp_milli": [501, 502], "w1_fs_root": 501, "sensor_factori": 501, "0x02131d959eaa": 501, "assert_n": [501, 537, 560, 561, 696, 721, 722], "horizon": 501, "0x012345678901": 501, "w1_sensor_suit": [501, 502], "test_read_sensor": [501, 502], "36700": 501, "basedir": 501, "0x2131d959eaa": 501, "dcmake_toolchain_fil": [502, 948, 962], "20687": 502, "write_temperatur": 502, "thaht": 502, "filename_pattern": 502, "xxxxxx": 502, "mkstemp": 502, "unlink": [502, 939, 941], "to_str": [502, 622], "off_t": [502, 899, 909, 914, 940], "lseek": [502, 909, 914, 940], "seek_set": [502, 899, 914, 940], "nwritten": [502, 903, 904, 905, 906, 911, 914, 940, 944], "algo": [503, 536, 537, 572, 573], "copy_into_vector": 503, "stl_exercises_suit": [503, 504, 505, 506, 508, 510, 511, 512, 513, 515, 516, 517, 518, 519], "required_cont": 503, "find_in_vector": 503, "my_vec": [503, 519], "wladimir": 503, "sort_in_plac": 503, "required_output": [503, 504, 505, 506, 518], "orig_input": [503, 504, 505, 506, 518], "alement": 504, "is_odd": 504, "filter_greater_10": 505, "filter_odd": 506, "map_insert": 508, "my_map": [508, 598, 599, 600, 601, 602], "map_insert_simpl": 508, "insert_check_dupl": 508, "map_insert_check_dupl": 508, "insert_remove_by_kei": 508, "map_insert_remove_by_kei": 508, "map_remove_by_kei": 508, "map_find": 508, "sensorrepositori": [509, 510, 511, 512, 513, 514, 515, 516, 517], "decript": 509, "sensor_repository_insert_dupl": 510, "add_sensor": [510, 511, 512, 513, 515, 516], "ofen": [510, 511, 512, 513, 515, 516], "weltraum": [510, 511, 512, 513, 515, 516], "mond": [510, 515], "sucess": 510, "sensor_repository_insert": 511, "sensor_repository_lookup_neg": 512, "get_sensor": [512, 513, 516], "sensor_repository_lookup_posit": 513, "complaint": 514, "ish": 514, "sensor_repository_remove_nonexist": 515, "remove_sensor": [515, 516], "sensor_repository_remov": 516, "sensor_repository_size_const": 517, "vector_append": 519, "vector_join": 519, "joined_cont": 519, "userdb_map": 520, "userdb_vector": 520, "dan": 520, "sak": 520, "cppcon": [520, 647, 649, 650, 663, 670, 688, 699], "transcrib": 520, "mallocfre": 525, "arrayofinteg": 525, "memoryleak": 525, "arrayboundswrit": 525, "newdelet": 525, "singleinteg": 525, "deletemismatch": 525, "thing1": [527, 528], "thing2": [527, 528], "global_str": 528, "__have_thing_h__": 528, "_content": 528, "denstruct": 528, "destruct": [528, 549, 619, 650, 700, 815], "essenc": [528, 1112], "collaps": 531, "thoroughli": [531, 877], "_mem": [534, 680], "determinist": [534, 699, 713, 968, 1019], "maybeown": 534, "pointerarithmet": 537, "bugp": 537, "105ff": 537, "num_el": 537, "another_arrai": 537, "yet_another_arrai": 537, "108ff": 537, "basics_cxx03": 537, "basics_cxx11": 537, "cbegin": [537, 590, 609, 646, 657], "my_copi": 537, "naivecopi": 537, "cend": [537, 590, 609, 646], "algocopi": 537, "backinsert": 537, "back_insert_iter": [537, 578], "nah": [537, 1114], "insertfind": 537, "make_pair": [537, 600, 603, 691], "erasebyposit": 537, "erasebykei": 537, "domin": 543, "bjarn": 543, "stroustrup": 543, "1985": 543, "2003": [543, 1125], "unif": 543, "point_c_suit": [544, 546], "struct_initi": 544, "point_init_default": 544, "c_default_constructor_init": 544, "point_create_default": 544, "c_default_constructor_cr": 544, "point_creat": [544, 546], "c_constructor": [544, 546], "eq": [544, 560, 562, 564], "point_equ": 544, "point_not_equ": 544, "eq_n": 544, "point_mov": [544, 546, 554, 556], "point_add": 544, "point_sub": 544, "add_sub": 544, "point_dist": 544, "point_ab": [544, 546], "hyp": [544, 546, 554], "unwant": [544, 595, 691, 751, 970, 991, 1015], "cpp_copy_suit": 545, "generated_copy_ctor": 545, "copy1": [545, 701], "copy2": [545, 701], "copy3": 545, "copyabl": 545, "manual_copy_suit": 545, "copy_ctor": [545, 700], "assignment_oper": 545, "earlier": 546, "point_h": [546, 554, 555], "point_cpp_suit": 546, "constructor_coordin": 546, "inaccessibil": 546, "move_op_pluseq": 546, "whenev": [547, 554, 564, 650], "sth": 548, "dirty_stack": 548, "use_uniniti": 548, "onward": [548, 552, 559], "nw": 549, "memberwis": 549, "_c_str": [549, 552, 653], "cxx03_data_encapsulation_object_copi": [550, 639, 651, 682, 698, 707, 715, 723, 725, 726], "cxx03_data_encapsulation_copy_bas": [550, 639, 726], "string_h": [552, 653], "cstring": [552, 653, 654, 687], "tcach": [552, 680], "221601": 552, "julian": [552, 701], "seward": [552, 701], "libvex": [552, 701], "rerun": [552, 701], "realloc": [552, 595], "0x484465b": 552, "1103": 552, "0x401210": 552, "0x401194": 552, "0x4dc8c80": 552, "0x401188": 552, "0x484222f": 552, "0x4011c5": 552, "0x40116f": 552, "freed": [552, 732, 902, 968], "destroi": [552, 614, 636, 655, 672, 687, 702, 713, 763], "221807": 552, "twostr": 552, "twotwostr": 552, "s21": 552, "s22": 552, "segfault": [552, 787, 945], "paraamet": 553, "__pretty_function__": 553, "0000000000401176": 553, "_z1fi": 553, "00000000004011a0": 553, "_z1fpc": 553, "demangl": 553, "anywher": [554, 966], "fab": [554, 555], "distance_origin": [554, 555, 705], "prohibit": 554, "hid": 554, "standardes": 554, "d_orig": 555, "fpermiss": [555, 692], "arrog": 555, "goodi": [555, 871], "pascal": 557, "uninitil": 557, "pass_by_copi": 557, "references_suit": 557, "voila": [557, 877, 935, 948, 949, 959, 990], "tediou": [557, 896, 949, 1023], "pass_by_point": 557, "pass_by_refer": 557, "pass_by_const_point": 557, "const_point": 557, "pass_by_const_refer": 557, "const_refer": 557, "pass_by_copy_expens": 557, "copy_expens": 557, "pass_by_const_reference_cheap": 557, "const_reference_cheap": 557, "addend": [558, 685, 705], "straightforwardli": [558, 1028], "add_point": 558, "static_suit": 558, "global_funct": 558, "static_method": 558, "bss": 559, "definition1": 559, "definition2": 559, "forbid": 559, "trickeri": 559, "points_equ": 560, "oddli": 560, "operators_suit": 560, "equals_glob": 560, "difficulti": 560, "equals_object": 560, "vector_addition_glob": 560, "vector_addition_object": 560, "point_plus_equ": 560, "combo": [561, 563], "cuboid_suit": 561, "front_bottom_left": 561, "point_whl_ctor": 561, "operator_eq_n": [561, 562, 563, 564], "operator_pluseq": [561, 562, 563], "operator_minuseq": [561, 563], "operator_minu": [561, 563], "operator_ostream": [561, 562, 563, 564], "buf": [561, 562, 563, 564, 891, 899, 909], "entirei": [561, 563, 564], "starting_point": 562, "implementation_in_cpp_fil": 562, "rectangle_suit": [562, 564], "pluseq": 562, "operator_unary_minu": [562, 563], "minus_p": [562, 563], "point3d_suit": 563, "coordinates_ctor": 563, "071067812": 563, "69041576": 563, "top_right": 564, "top_left": 564, "bottom_right": 564, "rational": [564, 598], "operator_plus_equal_vec": 564, "plus_vec": 564, "cxx03_functions_and_methods_exercise_class_cuboid": [565, 639, 726], "cxx03_functions_and_methods_exercise_class_point3d": [565, 639, 726], "cxx03_functions_and_methods_exercise_class_rectangl": [565, 639, 726], "cxx03_functions_and_methods_exercise_class_point": [565, 639, 726], "cxx03_functions_and_methods_static_member_vari": [565, 639, 726], "dothat": [566, 567], "dothi": [566, 567], "dothos": [566, 567], "dammit": [566, 567, 646], "thisexcept": 567, "thatexcept": 567, "thrown": [567, 944], "myexcept": 567, "error_detect": 567, "granular": [567, 744, 931], "typenam": [569, 570, 652, 659, 660, 661, 662, 664, 666, 667, 668, 673, 694, 700, 704, 714, 716], "a_begin": [573, 575], "a_end": [573, 575], "src_begin": [573, 577], "src_end": [573, 577], "dst_begin": [573, 577], "decai": 574, "zeroth": 574, "unflex": 578, "shrink_to_fit": 578, "prealloc": [578, 579], "gool": [580, 647], "cplusplu": [582, 583, 584, 585, 586, 588, 589, 590, 591, 594, 603], "int_arrai": [582, 584, 588, 591], "binarili": 582, "is_el": 582, "original_begin": 583, "original_end": 583, "copy_run": 583, "original_run": 583, "int_array_c": 584, "match_666": 585, "match_42": 585, "x_equals_666": 585, "x_equals_4": 585, "x_equal": 585, "_criterion": 585, "yesno": [585, 800, 801], "output_stern": 586, "output_bindestrich": 586, "output_with_prefix": 586, "_prefix": 586, "cxx03_stl_algorithm_binary_search": [587, 606, 610, 639, 726], "cxx03_stl_algorithm_sort": [587, 606, 610, 639, 726], "cxx03_stl_algorithm_find_if": [587, 606, 610, 639, 726], "cxx03_stl_algorithm_reverse_copi": [587, 606, 609, 610, 639, 726], "cxx03_stl_algorithm_for_each": [587, 606, 610, 639, 726], "cxx03_stl_algorithm_lower_bound": [587, 606, 610, 639, 726], "cxx03_stl_algorithm_revers": [587, 606, 609, 610, 639, 726], "reversed_": [590, 609], "less_revers": 591, "greater_than": 591, "cluster_cxx03_stl_sequential_contain": [593, 606, 610, 639, 726], "cxx03_stl_sequential_containers_list": [593, 606, 610, 639, 726], "cxx03_stl_sequential_containers_bas": [593, 606, 610, 639, 726], "cxx03_stl_sequential_containers_vector": [593, 606, 610, 639, 726], "liek": 595, "logarithm": 595, "mein_int_arrai": 595, "insert_po": 595, "new_elems_as_vector": 595, "elems_to_insert": 595, "cxx03_stl_associative_containers_multimap": [597, 606, 610, 639, 726], "realiz": [598, 1019], "parameter": [598, 704, 709, 955, 969], "keytyp": [598, 642], "valuetyp": [598, 642], "some_map": 598, "key_typ": [598, 599], "mapped_typ": [598, 599], "value_typ": [598, 599], "emplac": 598, "collis": 598, "zweiundvierzig": 598, "out_of_rang": [598, 602], "mymap": [599, 600, 601, 602], "sechshundersechsundsechzig": 599, "kv": 599, "pre11": [599, 600], "einundfuenfzig": [599, 600, 601, 602], "vierundfuenfzig": [599, 600, 601, 602], "dreihundertsechsundvierzig": [599, 600, 601, 602], "tausendein": [599, 600, 601, 602], "tausendzwei": [599, 600, 601, 602], "retval_7": 600, "retval_2": 600, "n_remov": 601, "found_value_1001": 602, "found_value_666": 602, "found_valu": 602, "joerg_svnr": 603, "caro_svnr": 603, "johanna_svnr": 603, "philipp_svnr": 603, "datenzwilling_von_joerg": 603, "faschingzwil": 603, "meine_map": 603, "datenzwil": 603, "equal_rang": 603, "found_rang": 603, "svnr_notexist": 603, "1234567": 603, "memory_resourc": 604, "cluster_cxx03_stl_alloc": [605, 606, 610, 639, 726], "cxx03_stl_allocator_bas": [605, 606, 610, 639, 726], "cluster_cxx03_stl_exercis": [606, 607, 609, 610, 639, 726], "cluster_cxx03_stl_exercises_reverse_str": [606, 607, 609, 610, 639, 726], "cxx03_stl_exercises_reverse_string_solut": [606, 609, 610, 639, 726], "cxx03_stl_exercises_reverse_string_exercis": [606, 607, 609, 610, 639, 726], "auto_ptr": [611, 650, 1125], "cluster_cxx03_dynamic_memori": [612, 639, 726], "cxx03_dynamic_memory_todo": [612, 639, 726], "inher": [613, 614, 617, 619, 620, 933, 1021], "novirtu": [613, 614, 620], "mantra": [614, 798], "spoiler": [614, 979], "cxx03_inheritance_oo_private_protect": [615, 639, 726], "derived1": 617, "derived2": 617, "countless": 617, "derived3": 617, "unimpl": [617, 983], "polymorp": 619, "strictli": [619, 877, 878, 979], "indirect": [620, 706, 810, 964], "cluster_cxx03_standard_library_miscellanea": [621, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 726], "cxx03_standard_library_miscellanea_str": [621, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 726], "string_suit": 622, "another_hello": 622, "greeting1": 622, "greeting2": 622, "convert_to_signed_integ": 622, "stol": 622, "stoll": 622, "numstr": 622, "stoi": [622, 911, 914], "convert_to_unsigned_integ": 622, "stoull": 622, "stoui": 622, "stoul": 622, "convert_from_someth": 622, "basic_str": [622, 704], "i_str": 622, "ui_str": 622, "666000": 622, "sprintf": [622, 911, 914, 944, 945], "print_char": 623, "cluster_cxx03_exercises_misc": [623, 624, 625, 626, 639, 726], "cxx03_exercises_misc_american_flag": [623, 625, 639, 726], "cxx03_exercises_misc_fh_moodle_quiz": [624, 625, 639, 726], "cxx03_exercises_misc_sum_integers_from_stdin": [625, 626, 639, 726], "ctrl": [626, 945, 997], "cluster_cxx03_exercises_userdb": [627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 726], "cxx03_exercises_userdb_user_const_memb": [627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 638, 639, 726], "cxx03_exercises_userdb_user_ctor": [627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 726], "cxx03_exercises_userdb_userdb_vector_bas": [627, 634, 635, 636, 637, 638, 639, 726], "cxx03_exercises_userdb_user_default_ctor": [627, 634, 635, 636, 637, 638, 639, 726], "cxx03_exercises_userdb_user_simple_method": [627, 628, 630, 631, 632, 634, 635, 636, 637, 638, 639, 726], "cxx03_exercises_userdb_user_access_method": [627, 628, 630, 631, 634, 635, 636, 637, 638, 639, 726], "cxx03_exercises_userdb_userdb_insert": [627, 634, 635, 636, 637, 639, 726], "cxx03_exercises_userdb_userdb_search_notfound_except": [627, 636, 639, 726], "cxx03_exercises_userdb_userdb_search_find_if": [627, 635, 636, 639, 726], "cxx03_exercises_userdb_userdb_search": [627, 635, 636, 637, 639, 726], "cxx03_exercises_userdb_user_const": [627, 630, 631, 634, 635, 636, 637, 638, 639, 726], "architecton": 629, "celebr": 632, "trittsich": [632, 633], "age_by_n_year": 632, "user_init": 633, "userdb_insert": 634, "doesnotexist": [635, 637], "isvalid": [635, 636, 637], "unnatur": 636, "_user": [636, 775], "thereaft": 636, "wrinkl": 636, "usernotfound": 636, "unreach": [636, 888], "userdb_search_by_lastnam": 637, "undetect": 637, "userdb_init": 638, "cluster_cxx11": [640, 644, 651, 658, 669, 682, 683, 693, 698, 707, 715, 723, 725, 726], "cluster_cxx11_introduct": [640, 644, 682, 723, 725, 726], "cxx11_introduction_histori": [640, 644, 682, 723, 725, 726], "cxx11_introduction_overview_livehack": [640, 725, 726], "ugliest": 641, "todo_list": 642, "tdl": 642, "desc": 642, "key_value_pair": 642, "up_1_to_10": 642, "down_1000_to_980": 642, "090": 642, "todo_item": 642, "make_shar": [642, 703, 721], "todolist": 642, "nocopi": 642, "add_item": 642, "_list": 642, "evangelist": 642, "cstdint": [643, 672], "wchar_t": 643, "cluster_cxx11_new_language_featur": [644, 651, 658, 669, 682, 683, 693, 698, 707, 715, 723, 725, 726], "cluster_cxx11_new_language_features_brace_initi": [644, 682, 723, 725, 726], "cxx11_new_language_features_strongly_typed_enum": [644, 682, 723, 725, 726], "cxx11_new_language_features_auto": [644, 682, 723, 725, 726], "cxx11_new_language_features_brace_initialization_intro": [644, 682, 723, 725, 726], "cxx11_new_language_features_brace_initialization_mess": [644, 682, 725, 726], "cxx11_new_language_features_brace_initialization_implementor_view": [644, 682, 725, 726], "pointcloud": [645, 647], "_point": 645, "data_": [646, 648], "memoriz": 646, "brace_initialization_suit": 647, "explicit_ctor_cal": 647, "initlist_ctor_cal": 647, "explicit_ctor": 647, "initlist_ctor": 647, "disabigu": 647, "nightmar": [647, 650, 964], "size_": 648, "constexpr_suit": 649, "basic_const_is_constexpr": 649, "constexpr_function_request": 649, "constexpr_function_not_request": 649, "constexpr_recursive_funct": 649, "6765": 649, "constexpr_ctor": 649, "schurr": 649, "olsen": [650, 699], "nicolai": [650, 692, 695], "josutti": [650, 692, 695], "smartptr": [651, 682, 700, 701, 725, 726], "cluster_cxx11_new_language_features_move_pf": [651, 682, 698, 707, 715, 723, 725, 726], "cluster_cxx11_smart_point": [651, 682, 698, 707, 715, 723, 725, 726], "cxx11_perfect_forward": [651, 682, 725, 726], "cxx11_new_language_features_move_pf_overview": [651, 682, 698, 707, 715, 723, 725, 726], "cxx11_new_language_features_miscellan": [651, 682, 698, 707, 715, 723, 725, 726], "cxx11_new_language_features_move_pf_afterword": [651, 682, 725, 726], "cxx11_new_language_features_move_pf_livehack_using_string_mov": [651, 682, 725, 726], "cxx11_new_language_features_move_pf_livehack_string_mov": [651, 682, 725, 726], "cxx11_smart_pointers_unique_ptr": [651, 682, 698, 707, 715, 723, 725, 726], "cxx11_smart_pointers_introduct": [651, 682, 698, 707, 715, 723, 725, 726], "_p": [652, 700], "handwritten_suit": [652, 700], "explicit_mov": [652, 700], "assert_double_eq": [652, 700, 701], "create_constant_sensor": [652, 702], "prove": [652, 812], "return_by_copi": 652, "another_sensor": 652, "assigne": 652, "dubiou": 652, "bugfre": 653, "string_move_suit": 653, "make_a_string_from": 653, "ret_": 653, "move_return": 653, "move_assign": 653, "assig": 653, "person_h": 654, "person_suit": 654, "contructor": 654, "outliv": [655, 966], "rvr": 655, "ado": [657, 916, 1080], "mytyp": 657, "spellabl": 657, "0x7ffcd604846c": 657, "0x7ffcd6048468": 657, "iref": 657, "0x7ffffefe2b54": 657, "0x7ffffefe2b50": 657, "0x7ffc59ebd7bc": 657, "ciref": 657, "0x7ffc23e46284": 657, "0x7ffe4a148064": 657, "0x7ffc528e013c": 657, "cluster_cxx11_new_language_features_concept": [658, 682, 725, 726], "cxx11_new_language_features_concepts_link": [658, 682, 725, 726], "cxx11_new_language_features_concepts_intro": [658, 682, 725, 726], "cxx11_new_language_features_concepts_writing_concept": [658, 682, 725, 726], "conceptless": 659, "4ul": [659, 660], "4l": [659, 660], "satisfact": 659, "is_integral_v": 659, "_tp": [659, 692, 702], "hendrik": 663, "niemey": 663, "hypotenus": [664, 665, 666, 667, 668], "sumsq": [664, 665, 666, 667, 668], "point2d": [664, 666, 667, 668], "dozen": 664, "ruin": 664, "5l": 664, "same_a": 664, "commone_reference_with": 664, "common_reference_with": [664, 668], "has_siz": [667, 668], "index_returns_doubl": 668, "cluster_cxx11_new_language_features_coroutin": [669, 682, 725, 726], "cxx11_new_language_features_coroutines_intro": [669, 682, 725, 726], "stackless": 670, "asio": 670, "co_return": [670, 674, 675, 676, 677, 678], "hello_inst": [670, 674, 675, 676, 677, 678], "promise_typ": [670, 672, 673, 675, 676, 677, 678], "get_return_object": [670, 672, 673, 675, 676, 677, 678], "suspend_alwai": [670, 672, 673, 675, 676, 677, 678], "initial_suspend": [670, 672, 673, 675, 676, 677, 678], "final_suspend": [670, 672, 673, 675, 676, 677, 678], "return_void": [670, 673, 675, 676, 677, 678], "unhandled_except": [670, 672, 673, 675, 676, 677, 678], "suspend_nev": [670, 672, 673, 677], "coroutine_handl": [670, 672, 673, 676, 677, 678], "from_promis": [670, 672, 673, 676, 677, 678], "_coro": [670, 672], "yield_valu": [670, 672, 673, 676, 677, 678], "sentinel": [670, 673, 677, 678, 692], "_promis": [670, 673, 676, 677, 678], "glue": 670, "deciph": 670, "diagrammat": 670, "wei": 670, "co_yield": [671, 672, 673, 674, 676, 677, 678], "_elem": 672, "ed": [673, 676, 677, 678, 862, 899], "lackingdefaultconstructor": 679, "ldc": 679, "hasdefaultconstructor": 679, "hmpf": 679, "hdc": 679, "ownsmemori": 680, "om_copi": 680, "incontin": 681, "leaf": [681, 852], "method1": 681, "method2": 681, "cluster_cxx11_new_language_features_rang": [682, 693, 725, 726], "cluster_cxx11_new_language_features_lambda": [682, 683, 725, 726], "cxx11_new_language_features_livehack_smartptr_mov": [682, 725, 726], "cxx11_smart_pointers_introduction_livehack": [682, 698, 725, 726], "cxx11_new_language_features_default": [682, 725, 726], "cxx11_new_language_features_delegating_ctor": [682, 725, 726], "cxx11_new_language_features_range_based_for": [682, 723, 725, 726], "cxx11_new_language_features_range_based_for_map": [682, 725, 726], "cxx11_new_language_features_structured_bind": [682, 725, 726], "cxx11_new_language_features_fin": [682, 725, 726], "cxx11_new_language_features_constexpr": [682, 725, 726], "cxx11_new_language_features_delet": [682, 725, 726], "cxx11_new_language_features_overrid": [682, 725, 726], "cxx11_new_language_features_modul": [682, 725, 726], "cxx11_new_language_features_ranges_link": [682, 693, 725, 726], "cxx11_new_language_features_ranges_good_bad": [682, 693, 725, 726], "cxx11_new_language_features_ranges_intro": [682, 693, 725, 726], "cxx11_new_language_features_lambda_lambda": [682, 683, 725, 726], "cxx11_new_language_features_lambda_lambda_is_functor": [682, 683, 725, 726], "cxx11_new_language_features_lambda_lambda_is_functor_pitfal": [682, 683, 725, 726], "cxx11_new_language_features_lambda_lambda_captur": [682, 683, 725, 726], "elsewher": [684, 773, 973], "lamda": 684, "print_messag": [684, 686, 687], "create_print_funct": [684, 686, 687], "constantli": [685, 790, 932], "mere": 685, "catur": 685, "akin": 685, "lambda_capture_suit": 685, "explicit_by_copi": 685, "lambda_capure_suit": 685, "explicit_by_refer": 685, "dubio": 685, "explicit_mix": 685, "initialized_captur": 685, "all_by_refer": 685, "all_by_copi": 685, "all_by_copy_except": 685, "this_captur": 685, "_i": [685, 705], "add_to_yourself_and_guarantee_programmers_job_secur": 685, "print_message_func": [686, 687], "_messag": [686, 687], "piti": 687, "mpp": 688, "precompil": [688, 773, 947], "speedup": 688, "rei": 688, "bori": 688, "kolpackov": 688, "abandon": 688, "inde": 690, "range_based_for_suit": 691, "map_pre_11": 691, "map_bas": 691, "map_basic_const_auto_refer": 691, "ific": [691, 696], "map_unpack_copi": 691, "map_unpack_refer": 691, "map_unpack_const_refer": 691, "min_el": 692, "forward_rang": [692, 694], "drop_view": 692, "filter_view": 692, "ref_view": 692, "ranges_util": 692, "view_interfac": 692, "_deriv": 692, "sized_sentinel_for": 692, "decltyp": 692, "__cust": 692, "declval": 692, "__cust_access": 692, "__begin": 692, "_s_size": 692, "_m_deriv": 692, "forward_iter": 692, "coll": 692, "2nd": [692, 1114], "__cxx11": [692, 704], "_vp": 692, "__simple_view": 692, "random_access_rang": [692, 694], "sized_rang": 692, "pretend": 692, "comitte": [692, 695], "lazili": 694, "first_two_drop": 694, "first_two_dropped_next_two_taken": 694, "oldstyl": 694, "inspir": 694, "refin": 694, "input_rang": 694, "bidirectional_rang": 694, "backward": [694, 748, 833, 865, 870, 996, 1101], "contiguous_rang": 694, "tristan": 695, "brindl": 695, "cppnorth": 695, "l0bhzp6hmdm": 695, "nico": 695, "accu": 695, "rust": [695, 947], "parrai": 696, "decompos": 696, "structured_binding_suit": 696, "struct_copi": 696, "struct_refer": 696, "struct_const_refer": 696, "tuple_copi": 696, "make_tupl": 696, "affect": 696, "tuple_refer": 696, "tuple_const_refer": 696, "array_copi": 696, "array_refer": 696, "array_const_refer": 696, "suspici": 696, "designwis": 697, "uptr": 697, "cxx11_smart_pointers_shared_ptr": [698, 707, 715, 723, 725, 726], "cxx11_smart_pointers_closing_word": [698, 707, 715, 725, 726], "cxx11_smart_pointers_weak_ptr": [698, 723, 725, 726], "myclass": [699, 701], "unwind": 699, "yoky6hzlkx": 699, "steal": [700, 933], "cxx11_unique_ptr_sensors_h": 700, "_temp": 700, "basic_const": 700, "raw_": 700, "raw_s_ref": 700, "copy_ctor_bad": 700, "assignment_operator_bad": 700, "gtest_filt": [700, 701, 1112], "reveal": [700, 966], "vtabl": 700, "autoptr": 700, "copy_ctor_good_autoptr_styl": 700, "unexpectedli": 700, "assignment_operator_good_autoptr_styl": 700, "destiat": 700, "excus": 701, "shared_ptr_suit": 701, "rs1": [701, 702], "rs2": [701, 702], "rand1": [701, 702, 703], "rand2": [701, 702, 703], "cann": 701, "basic_make_shar": 701, "set_refer": 701, "_ref": 701, "cyclic_refer": 701, "303549": 701, "unique_ptr_suit": 702, "threw": 702, "ownership_error": 702, "cxx11": 702, "unique_ptr_suite_ownership_error_test": 702, "testbodi": 702, "_dp": 702, "default_delet": 702, "verbose_ctor": 702, "make_unique_auto": 702, "tranfer": 702, "create_random_sensor": 702, "implicit_ownership_transf": 702, "holdsasensor": 702, "taking_ownership_in_own_cod": 702, "sompil": 702, "raw1": 702, "tie": 703, "unti": 703, "weak_ptr_suit": 703, "borrowed_sensor": 703, "another_refer": 703, "sensor_ref": 703, "measurement_thread": 703, "rvref": 704, "lo_funct": 704, "adventur": 704, "grimm": 704, "jaud": 704, "factset": 704, "570f242261f8": 704, "suffer": [705, 878], "origin_dist": 705, "criteria": [705, 817, 1101], "predic": 705, "void_funct": 705, "bind_suit": 705, "plain_void_funct": 705, "one_parameter_funct": 705, "plain_one_parameter_funct": 705, "minus_hardcod": 705, "_1_minus_2": 705, "minus_swap_paramet": 705, "second_minus_first": 705, "_2": [705, 706], "minus_hardcode_first_paramet": 705, "_42_minus_param": 705, "funcfunc": 705, "tradeoff": [705, 778], "oneimplement": 706, "anotherimplement": 706, "do_much_work": 706, "c_using_on": 706, "c_using_anoth": 706, "explanatori": 706, "trampolin": 706, "rtti": 706, "pod": 706, "metaphys": 706, "ostreamlogg": 706, "databaselogg": 706, "logfunc_t": 706, "funcptrlogg": 706, "somebusinessclasswithneedforlog": 706, "successfulli": [706, 793, 808, 1100, 1107], "do_stupid_log": 706, "ostream_logg": 706, "database_logg": 706, "funcptr_logg": 706, "busy_logging_to_ostream": 706, "busy_logging_to_databas": 706, "busy_logging_to_funcptr": 706, "foo_func": 706, "explos": 706, "cluster_cxx11_functions_funct": [707, 715, 725, 726], "cxx11_functions_functions_funct": [707, 715, 725, 726], "cxx11_functions_functions_bind": [707, 715, 725, 726], "msdn": 708, "devil": 708, "singlethread": 708, "god": 708, "paralleliz": 709, "cancel": [709, 923], "interlockedincr": 711, "mutual": [712, 981], "try_lock": 712, "try_lock_for": 712, "unavail": 712, "try_lock_until": 712, "time_point": [712, 717], "do_something_errorpron": 713, "do_more_of_it": 713, "wake": [714, 755, 765, 896, 920, 929, 935], "waiter": [714, 765, 790, 920], "stop_wait": 714, "wait_for": [714, 716], "wait_until": [714, 716], "notify_on": 714, "notify_al": 714, "broadcast": [714, 871, 878, 920, 945, 1142], "thunder": 714, "herd": 714, "condvar": 714, "threadsafequeu": 714, "maxelem": 714, "_maxelem": 714, "dur": [714, 716], "scoped_lock": [714, 716], "_lock": [714, 716], "pop_front": 714, "2m": [714, 716, 870], "1m": [714, 798, 870], "consumer1": 714, "consumer2": 714, "pthread_cond_init": [714, 920], "_not_empti": 714, "_not_ful": 714, "pthread_cond_wait": [714, 920], "pthread_cond_sign": [714, 920], "pthread_cond_t": [714, 920], "unique_lock": 714, "cluster_linux_sysprog_blocking_io": [715, 725, 726, 803, 806, 807, 869, 898, 910, 924, 930, 932], "cluster_linux_sysprog_posix_thread": [715, 725, 726, 869, 910, 924, 930], "cluster_linux_sysprog_schedul": [715, 725, 726, 869, 910, 924, 930, 932], "cluster_cxx11_multithread": [715, 725, 726], "linux_sysprog_blocking_io_blocking_io": [715, 725, 726, 803, 806, 807, 869, 898, 910, 924, 930, 932], "linux_sysprog_posix_threads_lifecycl": [715, 725, 726, 869, 910, 924, 930], "linux_sysprog_posix_threads_bas": [715, 725, 726, 869, 910, 924, 930], "linux_sysprog_posix_threads_exercise_mutex": [715, 725, 726, 869, 910, 924], "linux_sysprog_posix_threads_mutex": [715, 725, 726, 869, 910, 924, 930], "linux_sysprog_posix_threads_exercise_pthcreate_racecondit": [715, 725, 726, 869, 910, 924, 930], "linux_sysprog_posix_threads_condition_vari": [715, 725, 726, 869, 910, 924], "linux_sysprog_scheduling_bas": [715, 725, 726, 869, 910, 924, 930, 932], "cxx11_multithreading_mutex": [715, 725, 726], "cxx11_multithreading_race_condit": [715, 725, 726], "cxx11_multithreading_condition_vari": [715, 725, 726], "cxx11_multithreading_promise_futur": [715, 725, 726], "cxx11_multithreading_thread": [715, 725, 726], "cxx11_multithreading_introduct": [715, 725, 726], "cxx11_multithreading_scoped_lock": [715, 725, 726], "cxx11_multithreading_chrono": [715, 725, 726], "cxx11_multithreading_atom": [715, 725, 726], "get_futur": 716, "set_except": 716, "exception_ptr": 716, "shared_futur": 716, "uncoordin": 716, "ten_million_years_": 716, "answer_poll_interval_m": 716, "answer_valid": 716, "chew_answ": 716, "timespec": [716, 920, 931, 941], "reaction": [716, 888, 970], "answer_computation_tim": 716, "answer_poll_interv": 716, "ten_million_year": 716, "lockguard": 716, "_answer_valid": 716, "_answer": 716, "_data": [716, 961], "binary_semaphor": 716, "__cplusplu": 716, "202001l": 716, "_notifi": 716, "answer_promis": 716, "answer_futur": 716, "make_exception_ptr": 716, "epoch": [717, 940], "time_t": 717, "notion": 717, "system_clock": 717, "monoton": [717, 781, 783], "ntp": 717, "steady_clock": 717, "timepoint": 717, "steadili": 717, "high_resolution_clock": 717, "brand": 717, "spent_milli": 717, "duration_cast": 717, "bagcopi": 720, "find_by_int": [720, 721, 722], "remove_by_int": [720, 721, 722], "nremov": [720, 721, 722], "bagshar": 721, "item2": [721, 722], "weakref": 721, "sharedref": 721, "baguniqu": 722, "constbag": 722, "cluster_cxx11_exercis": [723, 725, 726], "cxx11_exercises_bag_copi": [723, 725, 726], "cxx11_exercises_bag_shar": [723, 725, 726], "cxx11_exercises_bag_uniqu": [723, 725, 726], "withing": 724, "filesystem_suit": 724, "cd_to_tmpdir_fixtur": 724, "path_compose_compar": 724, "path_compose_compare_2": 724, "is_absolut": 724, "is_rel": 724, "path_abs_rel": 724, "abspath": 724, "relpath": 724, "parent_path": 724, "remove_filenam": 724, "replace_filenam": 724, "replace_extens": 724, "path_component_access": 724, "filename_part": 724, "dir_part": 724, "path_iter": 724, "current_directori": 724, "cwd_chdir": 724, "current_path": 724, "create_directory_error": 724, "filesystem_error": 724, "create_directory_singl": 724, "is_regular_fil": 724, "create_directory_multipl": 724, "is_directori": 724, "is_block_fil": 724, "is_character_fil": 724, "is_empti": 724, "is_fifo": 724, "is_oth": 724, "is_socket": 724, "is_symlink": 724, "greatest": 724, "nov": [724, 763, 829, 855, 877, 961, 970, 997, 1026], "inod": [724, 732, 739], "919153": 724, "0644": [724, 818, 832], "system_u": 724, "object_r": 724, "passwd_file_t": 724, "s0": 724, "111282886": 724, "0100": 724, "737858445": 724, "743858359": 724, "file_s": 724, "hard_link_count": 724, "last_write_tim": 724, "ext4": [724, 773], "btrf": 724, "ntf": 724, "directory_iter": 724, "subdir1": 724, "subdir2": 724, "file1": [724, 742, 858], "file2": [724, 742, 858], "dirit": 724, "recursive_directory_iter": 724, "cxx11_filesystem": [725, 726], "cluster_unittest": [726, 1110], "cluster_linux_sysprog_process": [726, 869, 910], "cluster_linux_sysprog_intro_hw": [726, 869, 910, 912], "cluster_linux_toolchain_raspi": [726, 869, 952, 954, 957, 958], "cluster_linux_toolchain_cross": [726, 869, 951, 952, 954, 956, 957, 958], "cluster_linux_toolchain_exercis": [726, 869, 952, 953, 954, 955, 956, 957], "cluster_linux_kernel": [726, 730, 733, 735, 738, 740, 743, 745, 747, 749, 750, 752, 754, 756, 758, 760, 762, 764, 766, 768, 770, 772, 774, 777, 779, 782, 784, 788, 791, 794, 869], "cluster_linux_basics_permissions_exercis": [726, 803, 819, 822, 823, 824, 825, 826, 827, 828, 869], "cluster_linux_basics_shell_exercis": [726, 800, 801, 802, 803, 837, 838, 839, 840, 841, 842, 843, 844, 845, 847, 848, 849, 850, 851, 853, 869], "cluster_linux_basics_shell_exercises_cp_mv_mkdir_rm": [726, 800, 801, 802, 803, 837, 838, 839, 840, 841, 842, 843, 844, 845, 847, 853, 869], "cluster_linux_basics_shell_exercises_l": [726, 803, 847, 848, 849, 850, 851, 853, 869], "cluster_linux_basics_archiving_compress": [726, 796, 803, 869, 957, 958], "cluster_linux_basics_exercis": [726, 800, 801, 802, 803, 869], "cluster_linux_basics_io_redir_pip": [726, 803, 814, 869], "cluster_linux_basics_text_tool": [726, 803, 863, 869], "cluster_linux_ssh": [726, 869, 881, 882, 883, 884, 885, 957, 958], "cluster_linux_ssh_exercis": [726, 869, 881, 882, 883, 884, 885], "cluster_linux_hardwar": [726, 869, 875, 876], "cluster_linux_hardware_can": [726, 869, 875, 876], "unittest_gtest_cmak": [726, 1110], "linux_sysprog_sign": [726, 869, 910], "linux_sysprog_ipc": [726, 869, 910], "linux_sysprog_ev": [726, 869, 910], "linux_sysprog_posix_threads_exercise_condition_vari": [726, 869, 910, 924], "linux_sysprog_posix_threads_mutex_trylock": [726, 869, 910, 924], "trylock": [726, 869, 910, 918, 924], "islock": [726, 869, 910, 918, 924], "linux_sysprog_posix_threads_miscellan": [726, 869, 910, 924], "linux_sysprog_posix_threads_last_warn": [726, 869, 910, 924], "linux_sysprog_fileio_misc": [726, 869, 908, 910, 927], "linux_sysprog_fileio_fileio_group": [726, 869, 908, 910, 927], "linux_sysprog_fileio_example_o_rdonli": [726, 869, 908, 910, 927], "o_rdonli": [726, 731, 869, 895, 899, 900, 903, 906, 907, 908, 910, 911, 914, 927, 937, 940, 944], "linux_sysprog_fileio_example_o_wronli": [726, 869, 908, 910, 927], "linux_sysprog_fileio_basics_exercise_copi": [726, 869, 900, 908, 910, 927], "linux_sysprog_fileio_basics_exercise_hol": [726, 869, 908, 910, 927], "linux_sysprog_fileio_dupl": [726, 869, 908, 910, 927], "linux_sysprog_fileio_example_o_excl": [726, 869, 908, 910, 927], "o_excl": [726, 869, 899, 900, 908, 910, 927, 940], "linux_sysprog_fileio_example_o_creat": [726, 869, 908, 910, 927], "linux_sysprog_blocking_io_blocking_io_fil": [726, 803, 806, 807, 869, 898, 910], "linux_sysprog_blocking_io_blocking_io_tim": [726, 869, 898, 910], "linux_sysprog_blocking_io_blocking_io_network": [726, 869, 898, 910], "linux_sysprog_process_tre": [726, 869, 910], "linux_sysprog_process_commandlin": [726, 869, 910], "linux_basics_intro_environ": [726, 803, 807, 853, 869, 910, 957, 958], "linux_basics_intro_process_tre": [726, 803, 807, 819, 822, 823, 824, 825, 826, 827, 828, 869, 881, 882, 883, 884, 885, 910, 957, 958], "linux_sysprog_intro_hw_sysfs_gpio": [726, 869, 910, 912], "linux_sysprog_intro_hw_get": [726, 869, 910, 912], "linux_sysprog_intro_hw_watch": [726, 869, 910, 912], "linux_sysprog_scheduling_processes_and_thread": [726, 869, 910, 930, 932], "linux_sysprog_scheduling_realtime_api": [726, 869, 910, 930], "linux_sysprog_scheduling_realtim": [726, 869, 910, 930, 932], "linux_sysprog_scheduling_wakeup_lat": [726, 869, 910, 930, 932], "linux_sysprog_scheduling_exam_quest": [726, 869, 910, 930, 932], "linux_toolchain_cmake_cross": [726, 869, 957], "linux_toolchain_shared_librari": [726, 869, 957], "linux_toolchain_raspi_detail": [726, 869, 957, 958], "linux_toolchain_cross_bas": [726, 869, 951, 952, 954, 956, 957, 958], "linux_basics_archiving_compression_tar": [726, 796, 803, 869, 957, 958], "linux_ssh_bas": [726, 869, 881, 882, 883, 884, 885, 957, 958], "linux_ssh_scp": [726, 869, 881, 882, 883, 885, 957, 958], "linux_toolchain_raspi_docker_fedora_wsl": [726, 869, 957, 958], "linux_toolchain_raspi_linaro_pi": [726, 869, 957, 958], "defunct": [726, 869, 957, 958], "linux_toolchain_raspi_toolchain_setup": [726, 869, 952, 954, 957, 958], "linux_toolchain_exercises_fh_moodle_quiz": [726, 869, 953, 954, 957], "linux_toolchain_exercises_raspberry_toolchain": [726, 869, 954, 956, 957], "linux_toolchain_exercises_cross_build": [726, 869, 952, 954, 957], "linux_toolchain_exercises_native_build": [726, 869, 954, 955, 957], "linux_kernel_iomemori": [726, 750, 758, 770, 869], "linux_kernel_modules_hello_world": [726, 730, 733, 735, 738, 740, 743, 750, 752, 754, 758, 764, 770, 777, 782, 788, 791, 794, 869], "linux_kernel_fedora_module_build": [726, 730, 733, 735, 738, 740, 743, 749, 750, 752, 754, 758, 764, 770, 777, 782, 788, 791, 794, 869], "linux_kernel_spinlock": [726, 750, 777, 779, 782, 788, 791, 794, 869], "linux_kernel_process_vs_atom": [726, 735, 740, 743, 745, 750, 754, 756, 760, 764, 766, 768, 770, 772, 777, 779, 782, 784, 788, 791, 794, 869], "linux_kernel_waitqueu": [726, 750, 791, 869], "linux_kernel_usermem": [726, 750, 788, 791, 869], "linux_kernel_cdev_file_oper": [726, 733, 735, 740, 743, 750, 754, 764, 777, 782, 788, 791, 794, 869], "linux_kernel_workqueu": [726, 750, 788, 791, 794, 869], "linux_kernel_cdev_auto": [726, 730, 733, 735, 740, 743, 750, 754, 764, 777, 782, 788, 791, 794, 869], "linux_kernel_stub_sysprog_dup": [726, 733, 735, 740, 743, 750, 754, 764, 777, 782, 788, 791, 794, 869], "dup": [726, 732, 733, 735, 740, 743, 750, 754, 764, 777, 782, 788, 791, 794, 816, 869, 902, 941], "stub": [726, 733, 735, 740, 743, 750, 754, 764, 777, 782, 788, 791, 794, 869, 960], "linux_kernel_mutex_cod": [726, 750, 754, 764, 777, 782, 788, 791, 794, 869], "linux_kernel_multiple_devic": [726, 740, 750, 754, 764, 777, 782, 788, 791, 794, 869], "linux_kernel_mutex": [726, 750, 754, 764, 766, 777, 782, 788, 791, 794, 869], "linux_kernel_cdev_refactor": [726, 740, 743, 750, 754, 764, 777, 782, 788, 791, 794, 869], "linux_kernel_netdev": [726, 750, 768, 869], "linux_kernel_dma": [726, 745, 750, 768, 770, 869], "linux_kernel_interrupt": [726, 750, 754, 756, 768, 770, 777, 782, 788, 791, 794, 869], "linux_kernel_kmalloc": [726, 735, 740, 743, 745, 750, 754, 764, 768, 770, 777, 782, 788, 791, 794, 869], "linux_kernel_cdev_first_function": [726, 735, 740, 743, 750, 754, 764, 777, 782, 788, 791, 794, 869], "linux_kernel_list": [726, 735, 740, 743, 750, 754, 762, 764, 777, 782, 788, 791, 794, 869], "doubli": [726, 735, 739, 740, 743, 750, 754, 763, 764, 775, 777, 782, 788, 791, 794, 869], "linux_kernel_tim": [726, 750, 782, 784, 788, 791, 794, 869], "linux_kernel_timer_cod": [726, 750, 782, 788, 791, 794, 869], "linux_kernel_spinlock_cod": [726, 750, 777, 782, 788, 791, 794, 869], "linux_kernel_interrupt_cod": [726, 750, 754, 777, 782, 788, 791, 794, 869], "linux_kernel_pci": [726, 750, 770, 869], "linux_kernel_cdev_manu": [726, 730, 733, 735, 738, 740, 743, 750, 754, 764, 777, 782, 788, 791, 794, 869], "linux_kernel_raspi_kernel_build": [726, 750, 754, 774, 777, 782, 788, 791, 794, 869], "linux_kernel_fedora_kernel_build": [726, 730, 733, 735, 738, 740, 743, 747, 749, 750, 752, 754, 758, 764, 770, 777, 782, 788, 791, 794, 869], "linux_basics_permissions_fh_moodle_quiz_nocheat": [726, 803, 821, 828, 869], "linux_basics_permissions_umask": [726, 803, 828, 869], "linux_basics_permissions_setuid": [726, 803, 828, 869], "linux_basics_permissions_setuid_livedemo": [726, 803, 828, 869], "linux_basics_permissions_sticki": [726, 803, 828, 869], "linux_basics_permissions_fh_moodle_quiz": [726, 803, 820, 828, 869], "linux_basics_permissions_exercises_private_directori": [726, 803, 822, 823, 824, 828, 869], "linux_basics_permissions_exercises_credenti": [726, 803, 819, 822, 823, 824, 825, 826, 827, 828, 869], "linux_basics_intro_login": [726, 803, 807, 819, 822, 823, 824, 825, 826, 827, 828, 869, 881, 882, 883, 884, 885, 957, 958], "linux_basics_permissions_exercises_private_directory_quest": [726, 803, 822, 824, 828, 869], "linux_basics_permissions_exercises_public_directory_quest": [726, 803, 822, 826, 828, 869], "linux_basics_permissions_exercises_public_directori": [726, 803, 822, 825, 826, 828, 869], "linux_basics_permissions_exercises_shared_fil": [726, 803, 822, 827, 828, 869], "linux_basics_intro_fh_moodle_quiz": [726, 803, 806, 807, 869], "linux_basics_intro_demo_everything_is_a_fil": [726, 803, 806, 807, 869], "linux_basics_intro_wsl": [726, 803, 807, 869], "linux_basics_shell_cp": [726, 800, 801, 802, 803, 837, 838, 840, 841, 844, 845, 847, 853, 869], "linux_basics_shell_mv": [726, 803, 853, 869], "linux_basics_shell_link": [726, 803, 853, 869], "linux_basics_shell_configfil": [726, 803, 853, 869], "linux_basics_shell_fh_moodle_quiz": [726, 803, 846, 853, 869], "linux_basics_shell_exercises_cp_mv_mkdir_rm_mkdir_p_rm_r": [726, 800, 801, 802, 803, 837, 838, 839, 840, 841, 842, 844, 845, 847, 853, 869], "linux_basics_shell_exercises_cp_mv_mkdir_rm_echo_create_fil": [726, 800, 801, 802, 803, 837, 838, 839, 840, 841, 844, 845, 847, 853, 869], "linux_basics_shell_exercises_cp_mv_mkdir_rm_copy_tre": [726, 803, 837, 841, 844, 847, 853, 869], "linux_basics_shell_exercises_cp_mv_mkdir_rm_verify_hierarchi": [726, 803, 837, 841, 844, 845, 847, 853, 869], "linux_basics_shell_exercises_cp_mv_mkdir_rm_echo_move_fil": [726, 803, 837, 840, 841, 844, 845, 847, 853, 869], "linux_basics_shell_exercises_cp_mv_mkdir_rm_echo_copy_fil": [726, 803, 837, 838, 841, 844, 845, 847, 853, 869], "linux_basics_shell_exercises_cp_mv_mkdir_rm_rm_rf": [726, 803, 841, 843, 847, 853, 869], "linux_basics_shell_exercises_cp_mv_mkdir_rm_rm_tre": [726, 803, 841, 844, 847, 853, 869], "linux_basics_shell_exercises_ls_etc_passwd_s": [726, 803, 847, 849, 850, 853, 869], "linux_basics_shell_exercises_ls_dev_typ": [726, 803, 847, 848, 850, 853, 869], "linux_basics_shell_exercises_ls_home_permiss": [726, 803, 847, 850, 851, 853, 869], "linux_basics_archiving_compression_gzip": [726, 796, 803, 869, 957, 958], "linux_basics_archiving_compression_overview": [726, 796, 803, 869, 957, 958], "linux_basics_archiving_compression_exercis": [726, 796, 803, 869], "linux_basics_exercises_fh_ss2022_exam_01_g2": [726, 801, 802, 803, 869], "linux_basics_exercises_fh_ss2022_exam_01_g1": [726, 800, 802, 803, 869], "linux_basics_io_redir_pipes_pip": [726, 803, 814, 869], "linux_basics_io_redir_pipes_io_redir": [726, 803, 814, 869], "linux_basics_io_redir_pipes_exercis": [726, 803, 814, 869], "linux_basics_io_redir_pipes_io_redir_swap_stdout_stderr": [726, 803, 814, 869], "linux_basics_text_tools_grep": [726, 803, 863, 869], "linux_basics_text_tools_less": [726, 803, 863, 869], "linux_basics_text_tools_head_tail": [726, 803, 863, 869], "linux_basics_text_tools_cat": [726, 803, 863, 869], "linux_basics_text_tools_overview": [726, 803, 863, 869], "linux_basics_text_tools_exercis": [726, 803, 863, 869], "linux_basics_text_tools_cut": [726, 803, 863, 869], "linux_basics_text_tools_find": [726, 803, 863, 869], "linux_ssh_key_pair": [726, 869, 881, 882, 883, 884, 885], "linux_ssh_link": [726, 869, 885], "linux_ssh_sshf": [726, 869, 885], "linux_ssh_portforward": [726, 869, 885], "linux_ssh_exercises_copy_fil": [726, 869, 881, 882, 883, 885], "linux_ssh_exercises_pubkei": [726, 869, 881, 882, 883, 884, 885], "linux_ssh_exercises_copy_tre": [726, 869, 882, 883, 885], "linux_hardware_i2c": [726, 869, 876], "linux_hardware_pwm": [726, 869, 876], "linux_hardware_w1": [726, 869, 876], "linux_hardware_brushless_motor": [726, 869, 876], "brushless": [726, 869, 876], "linux_hardware_can_hardwar": [726, 869, 875, 876], "linux_hardware_can_program": [726, 869, 875, 876], "linux_hardware_can_interfac": [726, 869, 875, 876], "linux_hardware_can_intro": [726, 869, 875, 876], "interconnect": 727, "device_cr": [728, 729, 732], "cdev_init": [728, 736, 737], "cdev_add": [728, 736, 737], "unhappi": 728, "device_destroi": 728, "my_class": 728, "my_driv": [728, 731, 741, 742, 753, 763, 769, 775, 781, 792], "mknod": [728, 736, 737], "character devic": [729, 732, 737, 1130], "relatim": 729, "register_chrdev_region": [729, 736, 737], "alloc_chrdev_region": [729, 737], "htmldoc": 729, "chrdev": 729, "dev_t": [729, 737], "baseminor": 729, "highlight": 729, "bug_on": 729, "module_licens": [729, 751], "openat": [731, 895], "at_fdcwd": [731, 895], "0x7f3d11330000": 731, "einval": [731, 736, 751, 789], "enotti": 731, "file_oper": [732, 736, 737, 775], "citizenship": 732, "__user": [732, 787], "loff_t": 732, "unlocked_ioctl": 732, "my_op": 732, "this_modul": 732, "my_open": 732, "my_read": 732, "my_writ": 732, "my_ioctl": [732, 763], "mode_t": [732, 899, 903, 941], "filp": [732, 775, 789], "vf": 732, "swiss": [732, 899, 1125], "armi": [732, 899, 1125], "my_ioctl_request": [732, 734], "my_request_such": 732, "my_request_such_and_such": 732, "laden": [732, 1139], "endod": 732, "_iow": 732, "_ior": 732, "_ioc": 732, "_ioc_non": 732, "_ioc_read": 732, "_ioc_typecheck": 732, "_ioc_writ": 732, "_iowr": 732, "my_ev": [734, 741, 742, 781, 786], "my_event_typ": 734, "my_event_ioctl": 734, "jiffi": [734, 775, 781], "my_event_list": [734, 741, 742, 763], "list_head": [734, 761, 763, 786], "num_ev": 734, "my_event_list_init": 734, "my_event_list_destroi": 734, "my_event_list_add": [734, 763, 776, 781, 792], "my_ioctl_add_ev": 734, "printk": [734, 751, 753, 792], "unregister_chrdev_region": [736, 737], "caveat": [736, 775, 878], "register_chrdev": 736, "unregister_chrdev": 736, "kern_err": 736, "cdev_del": [736, 737], "my_driver_henkel": 736, "kmem": 737, "opaqu": 737, "majmin": 737, "mkdev": 737, "drivernam": 737, "my_fop": 737, "my_cdev": 737, "devicefil": 737, "ndevic": 739, "module_param": 739, "my_devic": [739, 741, 742, 753, 769, 781], "private_data": [739, 769, 775], "kbuild": [741, 742], "torn": [741, 1117], "ccflag": [741, 742], "container_of": [742, 793], "file3": 742, "distinct": [742, 809, 893, 1020], "my_device_init": 742, "my_device_destroi": [742, 781], "everyt": 744, "vmalloc": 744, "ioremap": [744, 757], "iommu": 744, "pysic": 744, "dma_addr_t": 744, "alloc_pag": 744, "gfp_mask": 744, "get_free_pag": 744, "__get_free_pag": 744, "2order": 744, "__get_dma_pag": 744, "zone": 744, "__free_pag": 744, "free_pag": 744, "addr": [744, 757, 769, 873, 878, 896, 940, 1105], "dma_handl": 744, "cpu_addr": [744, 769], "dma_alloc_coher": 744, "gfp": [744, 759, 785], "dma_free_coher": 744, "pci_dev": [744, 769], "gfp_kernel": [744, 759, 776], "gfp_atom": [744, 759], "dma_bidirect": 744, "dma_to_devic": 744, "dma_from_devic": 744, "dma_map_singl": 744, "dma_mapping_error": 744, "fuck": 744, "dma_unmap_singl": 744, "dma_map_pag": 744, "dma_unmap_pag": 744, "dma_address": 744, "sglist": 744, "sg_run": 744, "dma_map_sg": 744, "for_each_sg": 744, "hw_address": 744, "sg_dma_address": 744, "hw_len": 744, "sg_dma_len": 744, "dma_unmap_sg": 744, "nent": 744, "unmap": [744, 769], "recreat": [744, 845, 963], "dma_sync_single_for_cpu": 744, "dma_sync_sg_for_cpu": 744, "mel": [744, 759], "gorman": [744, 759], "incredibli": 744, "transcript": [746, 773, 1070], "building_a_custom_kernel": 746, "fc33": [746, 751], "extravers": [746, 774], "cleanli": 746, "uncommit": 746, "j6": 746, "fedpkg": 746, "pesign": 746, "grubbi": 746, "33rd": 746, "f33": 746, "builddep": 746, "libexec": [746, 959], "symver": [748, 751], "modpost": [748, 751], "module_src": 748, "kernel_build": 748, "install_mod_path": [748, 773], "modules_instal": [748, 773, 877], "fedora_kernel_build": 750, "fedora_module_build": 750, "modules_hello_world": 750, "cdev_manu": 750, "process_vs_atom": 750, "stub_sysprog_dup": 750, "cdev_auto": 750, "cdev_file_oper": 750, "cdev_first_function": 750, "cdev_refactor": 750, "multiple_devic": 750, "mutex_cod": 750, "raspi_kernel_build": 750, "interrupt_cod": 750, "spinlock_cod": 750, "timer_cod": 750, "iomemori": 750, "usermem": 750, "netdev": 750, "waitqueu": [750, 1130], "ldd3": [750, 761], "reilli": [750, 862], "probe": [751, 877, 878, 879], "hello_init": 751, "kern_debug": 751, "hello_exit": 751, "module_init": 751, "module_exit": 751, "exot": 751, "currect": [751, 846], "lsmod": [751, 877, 878, 879], "insmod": 751, "modprob": [751, 773, 774, 872, 877, 878, 879], "rmmod": [751, 781], "dep": 751, "softdep": 751, "rebuilt": 751, "depmod": [751, 769], "cross_compil": [753, 773, 774], "libssl": [753, 877], "gpio_request": 753, "gpio_fre": 753, "gpio_direction_input": 753, "gpio_direction_output": 753, "gpio_to_irq": 753, "my_device_activate_gpio": 753, "_destroi": 753, "3f200000": 753, "pinctrl": 753, "bcm2835": [753, 874], "request_irq": [753, 755, 769], "free_irq": [753, 755, 769], "priorit": [755, 771, 871, 929, 941], "preempt_rt": [755, 765, 1120], "mainlin": [755, 773, 933, 1120], "irqreturn_t": [755, 769], "irq_handl": [755, 769], "irq": [755, 769, 771, 775, 931], "opqu": 755, "irq_non": 755, "irq_wake_thread": 755, "irq_handler_t": 755, "irqf_shar": [755, 769], "irqf_trigger_ris": 755, "irqf_trigger_fal": 755, "irqf_trigger_high": 755, "irqf_trigger_low": 755, "iomem": 757, "ioport": 757, "request_mem_region": 757, "0x20200000": 757, "release_mem_region": 757, "asm": [757, 962], "iounmap": 757, "ioread8": 757, "ioread16": 757, "ioread32": 757, "iowrite8": 757, "u8": 757, "iowrite16": 757, "u16": 757, "iowrite32": 757, "u32": 757, "kmalloc kfre": 759, "dynamic memori": 759, "slab": 759, "gfp_t": [759, 776, 792], "kzalloc": 759, "kfree": 759, "scarc": 759, "discourag": 759, "stolen": [761, 870], "some_list": 761, "init_list_head": 761, "some_data": 761, "list_add": 761, "list_add_tail": 761, "new_payload": 761, "existing_payload": 761, "prepend": [761, 773, 805, 1008], "list_for_each": 761, "list_entri": 761, "cursor": [761, 833, 1080], "run_payload": 761, "list_empti": 761, "list_first_entri": 761, "list_del": [761, 763], "a_payload": 761, "inject": [763, 776, 781, 1083], "opfer": 763, "corrupt": 763, "ffff91285ae68f00": 763, "ffff9128406cec00": 763, "list_debug": 763, "0x70": [763, 878], "0xb0": 763, "0xdd": 763, "ksys_ioctl": 763, "0x82": 763, "0xc0": 763, "__x64_sys_ioctl": 763, "do_syscall_64": 763, "0x4d": 763, "entry_syscall_64_after_hwfram": 763, "0x44": 763, "0xa9": 763, "unprotect": [763, 775, 991], "nevent": [763, 786], "my_device_list": 763, "preemptibl": [765, 933], "preemption": [765, 771, 778, 878, 929, 932, 933], "holder": [765, 989], "mutex_init": 765, "mutex_destroi": 765, "mutex_lock": 765, "mutex_lock_interrupt": 765, "eintr": [765, 891, 944, 945], "mutex_lock_interruptible_nest": 765, "mutex_trylock": 765, "eagain": [765, 775, 789], "mutex_unlock": 765, "torvald": [765, 773], "trickl": 765, "rtmutex": 765, "rt_mutex": 765, "net_devic": 767, "alloc_netdev": 767, "sizeof_priv": 767, "netdev_priv": 767, "funcion": 767, "ethernet": 767, "etherdevic": 767, "alloc_etherdev": 767, "free_netdev": 767, "register_netdev": 767, "unregister_netdev": 767, "devinc": 767, "hard_start_xmit": 767, "sk_buff": 767, "skb": 767, "transmiss": [767, 896, 1067], "tx_timeout": 767, "quota": [767, 799], "stead": 767, "do_ioctl": 767, "ifreq": [767, 873], "ifr": [767, 873], "netif_start_queu": 767, "netif_stop_queu": 767, "netif_wake_queu": 767, "udevd": 769, "pci_device_id": 769, "my_id": 769, "pci_devic": 769, "0xdead": 769, "0xbeef": 769, "0xbeee": 769, "module_device_t": 769, "my_prob": 769, "my_remov": 769, "my_suspend": 769, "pm_message_t": 769, "my_resum": 769, "my_shutdown": 769, "pci_driv": 769, "id_tabl": 769, "my_init": 769, "pci_register_driv": 769, "my_exit": [769, 978], "pci_unregister_driv": 769, "subsystem_vendor": 769, "subsystem_devic": 769, "u64": [769, 783], "dma_mask": 769, "device_count_resourc": 769, "pci_enable_devic": 769, "pdev": 769, "wizardri": 769, "pci_request_region": 769, "pci_set_mast": 769, "pci_clear_mast": 769, "pci_set_dma_mask": 769, "pci_set_drvdata": 769, "ioread": 769, "iowrit": 769, "pci_resource_len": 769, "bar_no": 769, "__iomem": 769, "pci_iomap": 769, "pci_iounmap": 769, "pci_alloc_consist": 769, "os_devic": 769, "_o": 769, "dma_addr": 769, "pci_free_consist": 769, "_size": 769, "_cpu_addr": 769, "t_os_dma_addr__get_n": 769, "_dma_addr": 769, "_os_devic": 769, "dma_bit_mask": 769, "pci_set_consistent_dma_mask": 769, "config_debug_atomic_sleep": [771, 776], "cross compil": 773, "educ": 773, "raspberrypi": [773, 774, 877, 949, 956], "borrow": 773, "pi2": 773, "1gb": 773, "canon": [773, 890], "workstat": 773, "hf": 773, "armv6j": 773, "hardfloat": 773, "gnueabi": 773, "objcopi": 773, "raspberry_pi": 773, "local_overlai": 773, "ebuild": 773, "binutil": [773, 774], "repo_nam": 773, "9999": 773, "sourcedir": 773, "builddir": 773, "buildparam": 773, "kconfig": 773, "zconf": 773, "raspbian": 773, "bootdir": 773, "bootf": 773, "rootf": 773, "kernel7": 773, "Then": [773, 888, 1087], "assimil": 773, "bcmrpi_defconfig": 773, "bcm2709_defconfig": 773, "config_localvers": 773, "config_ikconfig": 773, "eveytim": 773, "config_can_mcp251x": 773, "config_sensors_lm73": 773, "zimag": [773, 774, 877], "dtb": [773, 774, 877], "j3": 773, "mkknlimg": 773, "te": 773, "superus": 773, "jtf": 773, "bcm2709": 773, "smi": 773, "ft5406": 773, "can1": [773, 872], "v7": [773, 774], "ipv4": [773, 1142], "xfrm4_mode_beet": 773, "inet_lro": 773, "esp4": 773, "xfrm4_mode_transport": 773, "udp_tunnel": 773, "sdb": 773, "57344": 773, "sdb1": 773, "4162560": 773, "sdb2": 773, "enjoi": 773, "ec2aa3d2": 773, "eee7": 773, "454e": 773, "d145df5ddcba": 773, "agnost": 773, "urg": 773, "rasperri": [774, 877, 879, 1129, 1136], "patchlevel": 774, "sublevel": 774, "_morph": [775, 785], "my_driver_hello": 775, "my_driver_cdev_manu": 775, "my_driver_cdev_dynamic_major": 775, "my_driver_cdev_file_oper": 775, "my_driver_cdev_first_function": 775, "my_driver_cdev_refactor": 775, "my_driver_multiple_devic": 775, "my_driver_mutex": 775, "my_driver_interrupt": 775, "my_driver_spinlock_atom": 775, "my_driver_time_tim": 775, "my_driver_workqueu": 775, "my_driver_usermem": 775, "copy_": 775, "my_driver_waitqueu": 775, "nonblock": [775, 789, 941, 1142], "spinlock_t": [776, 778], "isr": [776, 933, 1130], "spin_unlock": [776, 778], "reenabl": 776, "uniprocessor": 778, "multiprocessor": 778, "spin_lock_init": 778, "spin_lock": 778, "spin_trylock": 778, "irqflag": 778, "spin_lock_irqsav": 778, "spin_unlock_irqrestor": 778, "pend": [781, 810, 933, 946], "my_inject_deferred_ev": 781, "my_device_add_deferred_ev": 781, "del_timer_sync": [781, 783], "paranoia": 781, "symmetri": 781, "my_device_add_ev": 781, "my_inject_ev": 781, "tick": 783, "config_hz": 783, "friendli": [783, 1021, 1090, 1094], "hrtimer": 783, "jiffies_to_msec": 783, "jiffies_to_usec": 783, "jiffies_to_nsec": 783, "msecs_to_jiffi": 783, "usecs_to_jiffi": 783, "timespec64_to_jiffi": 783, "timespec64": 783, "jiffies_to_timespec64": 783, "timer_list": 783, "my_tim": 783, "timerfunc": 783, "timer_setup": 783, "add_tim": 783, "del_tim": 783, "0520": 785, "0521": 785, "0525": 785, "0532": 785, "0710": 785, "preempt": [785, 929, 933], "caption": 785, "backlink": 785, "my_event_nod": 786, "my_get_one_ev": [786, 789], "my_device_get_one_ev": 786, "my_event_get_one_ev": 786, "efault": [786, 787], "uaccess": 787, "copy_to_us": 787, "copy_from_us": 787, "enosi": 789, "timerfd": [789, 897, 937], "f_flag": 789, "wait_queue_head_t": 790, "wq": [790, 792, 793], "init_waitqueue_head": 790, "sched": 790, "wait_ev": 790, "wait_event_interrupt": 790, "wait_event_timeout": 790, "timeout_jiffi": 790, "wait_event_interruptible_timeout": 790, "wake_up": 790, "wake_up_interrupt": 790, "task_interrupt": 790, "create_workqueu": [792, 793], "destroy_workqueu": [792, 793], "eo": 792, "rtprio": 792, "work_struct": [792, 793], "init_work": [792, 793], "chrt": [792, 933], "workqueue_struct": 793, "work_func_t": 793, "queue_work": 793, "packen": 795, "gunzip": 797, "zgrep": 797, "zcat": 797, "zless": 797, "intact": [797, 1046, 1050], "viro": 798, "cpio": 798, "cleaner": 798, "archivformat": 798, "lzma": 798, "430mb": 798, "95mb": 798, "74mb": 798, "5m": [798, 870], "64mb": 798, "togeht": 799, "ceph": 799, "gfs2": 799, "zcf": 799, "decompress": [799, 959], "zxf": 799, "ztf": 799, "dirt": 799, "livingroom": 799, "grumbl": 799, "reat": 799, "tract": 799, "ell": [799, 833], "vv": 799, "supplementari": [800, 801, 808, 810], "1021": [800, 801, 808], "somefil": [800, 801, 839], "chgrp": [800, 801, 818, 825, 827], "fellow": [800, 801], "picki": [800, 801, 983], "ttyusb1": 804, "stick": [804, 808], "2006854": 804, "sdc": 804, "2006823": 804, "deserv": [804, 862, 923, 949], "trash": [804, 833], "burn": [804, 879], "1mib": 804, "1mibf": 804, "0m": [804, 855, 931], "mkf": 804, "entropi": 804, "my_vari": 805, "1034184": 805, "1035812": 805, "ancestor": [805, 811, 889], "decriptor": [806, 905], "getti": 808, "kerbero": [808, 810], "gnome3": 808, "agetti": 808, "cleartext": [808, 829], "shadow": [808, 829, 905, 1012, 1049], "brute": [808, 886, 949], "crack": 808, "attack": [808, 886, 964, 1083, 1128], "hierarch": 809, "peripher": [809, 1129, 1136], "grand": 809, "ten_integ": 810, "unfair": [810, 933], "dialout": [810, 905], "seg": 810, "kbyte": 810, "62715": 810, "819200": 810, "pstree": 811, "modemmanag": 811, "journ": 811, "abrtd": 811, "auditd": 811, "bluetoothd": 811, "cupsd": 811, "lau": 811, "firewalld": 811, "fwupd": 811, "tini": [811, 947], "enemi": 812, "guidanc": 812, "dicdat": 812, "acknowledg": [812, 870], "seamless": [812, 1096], "vmware": 812, "exampk": 812, "altruism": 812, "mkfifo": [813, 817], "stdin_fileno": [815, 899, 909, 945, 1021], "stdout_fileno": [815, 895, 896, 899, 905, 931, 940, 944, 945, 1021], "stderr_fileno": [815, 899, 1021], "religi": 815, "fed": 815, "filefor": 815, "sudoer": 816, "weekli": 816, "compet": [817, 878], "award": [817, 864], "plumber": 817, "sniff": 817, "fifo": [817, 899, 1141], "rendezv": 817, "unnam": 817, "chown": [818, 830, 961], "useradd": [818, 961], "groupadd": 818, "usermod": 818, "groupmod": 818, "teammember42": 818, "manfromthestreet": 818, "jun": [818, 949], "triplet": 818, "1003": 818, "110100100": 818, "110000000": 818, "0600": 818, "111101101": 818, "0755": 818, "bitmask": [818, 829, 945], "1317": 829, "mdmckqvpfaqquqypvzjjkihsbkkcniogknxtiobvbfw8u7zuf3": 829, "0g2rqr9cnydnqq5unt": 829, "wpu8jyzeuxktapl0": 829, "burnout": 829, "retyp": 829, "rwsr": [829, 830], "32712": 829, "rwxrwxrwx": 829, "4755": [829, 830], "uid_t": 830, "getuid": 830, "geteuid": 830, "rwxrwxr": [830, 895, 947, 948, 949], "24456": 830, "drwxrwxrwt": 831, "0022": 832, "strain": 833, "injuri": 833, "diseas": 833, "outout": 833, "20k": 833, "olevel": 833, "debugopt": 833, "expr1": 833, "expr2": 833, "daystart": 833, "regextyp": 833, "synopsi": 833, "findu": 833, "til": 833, "findutil": 833, "pression": 833, "print0": 833, "keystrok": 833, "noob": [833, 994], "pos1": 833, "misconfigur": 833, "esc": 833, "freak": 833, "cvsserver": 833, "gitview": 833, "oesterreich": 833, "clearanc": 833, "e7d76d19": 833, "dd3d": 833, "4d52": 833, "2c16dc73f9d1_vstv_921302213705_2021___vstvf": 833, "boardingpass_1d9xf3dvd1uzt00tsswu68duh": 833, "gif": [833, 1084], "einkommensteuerbescheid1": 833, "boardingpass_b6uy9xqgeojspx1hxshogcbbq": 833, "einkommensteuervorauszahlungsbescheid1": 833, "immobilienbewertung": 833, "etw": 833, "confirm": 833, "ova": 833, "umsatzsteuerbescheid1": [833, 855, 856], "h0020211105124337": 833, "vk9vst311192021_0022021": 833, "img_": 835, "jpg": 835, "bilder": 835, "121751": 836, "op": [836, 1022], "garbage1": [837, 838, 840, 844, 845], "garbage2": [837, 838, 840, 844, 845], "diretori": 839, "sweetheart": [839, 845, 852, 926], "citi": 839, "mqueue": [848, 940], "leavel": 852, "hintingx": 855, "1048576": 855, "drwx": [855, 857], "36817": 855, "umsatzsteuerbescheid": 856, "finanzamt": 856, "abgab": 856, "neighbor": [857, 1078], "enat": 858, "dereferenzieren": 860, "50k": [860, 861], "rekursiv": 861, "eintr\u00e4g": 861, "unterhalb": 861, "gefiltert": 861, "un\u00fcblich": 861, "gebr\u00e4uchlich": 861, "geh\u00f6ren": 861, "mmin": 861, "h\u00f6chsten": 861, "gefundenem": 861, "eintrag": 861, "heissen": 861, "beginnen": 861, "versteht": 861, "vergessen": 861, "j\u00fcnger": 861, "verkn\u00fcpft": 861, "metacharact": [861, 880], "gr\u00f6\u00dfer": 861, "lobal": 862, "egular": 862, "xpression": 862, "rint": 862, "sed": [862, 1129, 1136], "tream": 862, "itor": 862, "verb": 862, "insensit": [862, 1095], "entor": 862, "perlr": 862, "perlretut": 862, "perlrequick": 862, "jeffrei": 862, "friedl": 862, "philosopi": 866, "toether": 866, "hc": 866, "325324": 866, "xarg": 866, "bitbak": 868, "behan": 868, "webster": 868, "drone": 870, "electronic speed control": 870, "vehicl": 870, "rack": 870, "recognit": [870, 1078], "flight": 870, "wire": [870, 880, 959], "fritz": [870, 878], "brigh": 870, "heinrich": 870, "pwmchip0": [870, 878], "pwm0": [870, 878], "polar": 870, "uevent": [870, 877, 878, 879, 913], "puls": [870, 1129, 1136], "cheapest": 870, "quicrun": 870, "16bl30": 870, "brake": 870, "11v": 870, "conclud": [870, 878], "lipo": 870, "madli": 870, "transmitt": 870, "throttl": 870, "neutral": [870, 1080], "chop": 870, "kindli": [870, 1084], "mechatron": 870, "50hz": 870, "nanosecond": [870, 878, 897], "20000000": [870, 981], "oscil": 870, "10bl60": 870, "000n": 870, "1500000": [870, 935], "2000000": 870, "1550000": 870, "1600000": 870, "acceler": 870, "1650000": 870, "1700000": 870, "1750000": 870, "1800000": 870, "1850000": 870, "1900000": 870, "1950000": 870, "logist": [870, 1078], "hobbi": 870, "can bu": [871, 872, 873, 874], "sinowatz": [871, 971], "donat": 871, "volkswagen": 871, "traffic": 871, "octet": 871, "arbitr": 871, "can_fram": [871, 873], "canid_t": [871, 873], "can_id": [871, 873], "eff": [871, 873], "rtr": [871, 873], "__u8": [871, 873], "can_dlc": [871, 873], "__attribute__": [871, 873], "can0": [872, 873], "noarp": 872, "qdisc": 872, "qlen": 872, "relic": 872, "cansend": 872, "candump": 872, "canplay": 872, "cangen": 872, "snif": 872, "loopback": 872, "pf_can": 873, "sockaddr_can": 873, "sock_raw": 873, "can_raw": 873, "ifr_nam": 873, "siocgifindex": 873, "can_famili": 873, "af_can": 873, "can_ifindex": 873, "ifr_ifindex": 873, "sockaddr": [873, 896], "can_socket": 873, "packt": 873, "frame_layout": 873, "ib3x8": 873, "frame_s": 873, "calcsiz": 873, "recvfrom": 873, "sendto": 873, "lnxpp": 874, "can2udp": 874, "openwrt": 874, "asymmetrisch": 874, "mosi": 874, "miso": 874, "sclk": 874, "broadcom": 874, "ce0": 874, "3v": [874, 877], "5v": [874, 877], "transceiv": 874, "inter intergrated circuit": 877, "lm-sensor": 877, "handwork": [877, 879], "texa": 877, "maker": 877, "dtparam": [877, 878, 879], "i2c_arm": [877, 878, 879], "gpio2": 877, "gpio3": 877, "i2c_bcm2835": [877, 878, 879], "fe804000": [877, 879, 913], "i2c_dev": [877, 878], "sot": 877, "7v": 877, "rail": 877, "capacitor": 877, "idc": 877, "gnd": [877, 879], "vdd": 877, "smbdat": 877, "smbclk": 877, "unconnect": 877, "0x49": 877, "0x4a": 877, "jumper": 877, "3v3": [877, 879], "scl": [877, 879], "probl": 877, "i2c_slav": 877, "0x0703": 877, "o_rdwr": [877, 899, 906, 940], "msb_lsb": 877, "msb": 877, "lsb": [877, 948], "65535": 877, "dev_fd": 877, "perror": [877, 891, 895, 896, 897, 903, 904, 905, 906, 911, 914, 931, 937, 940, 944], "libncurs": 877, "bcm2711_defconfig": 877, "v7l": 877, "semiconductor": 877, "j4": 877, "kernel7l": 877, "new_devic": [877, 879], "0048": 877, "modalia": 877, "preinstal": 877, "hwmon0": 877, "thermal": 877, "thermal_zone0": 877, "hwmon1": [877, 879], "temp1_max": 877, "temp1_max_alarm": 877, "temp1_min": 877, "temp1_min_alarm": 877, "update_interv": 877, "milli": [877, 879], "22000": 877, "randomli": [877, 879], "nomenclatur": 877, "pulse width modul": 878, "resistor": 878, "bright": 878, "potentiomet": 878, "ssop": 878, "0b1000000": 878, "buse": [878, 879], "i2cdetect": [878, 879], "charactr": 878, "pca": 878, "simultan": [878, 944], "peculiar": 878, "pca9685a": 878, "nxp": 878, "dtoverlai": [878, 879], "pwm_pca9685": 878, "regmap_i2c": 878, "3f804000": 878, "0040": [878, 913], "npwm": 878, "unexport": [878, 913], "butt": [878, 959], "intercept": [878, 970], "dim": 878, "300000": [878, 1076], "fade": 878, "800000": [878, 1076], "600000": [878, 1076], "50000": 878, "apolog": 878, "kenel": 878, "devlop": 878, "pleasur": 878, "cornerston": 879, "unstabl": 879, "parasit": 879, "bitbang": 879, "gpiopin": 879, "profession": 879, "addon": 879, "pinout": 879, "01144fe43baa": 879, "w1_bus_master8": 879, "w1_bus_master1": 879, "breadboard": [879, 1129, 1136], "amaz": 879, "400000000000": 879, "800000000000": 879, "behalf": [879, 893, 947], "ad0": 879, "ad1": 879, "ad2": 879, "vcc": 879, "0x18": 879, "0b0011000": 879, "shortli": [879, 970], "execstart": 879, "36864": 879, "w1_bus_master2": 879, "w1_bus_master3": 879, "w1_bus_master4": 879, "w1_bus_master5": 879, "w1_bus_master6": 879, "w1_bus_master7": 879, "busno": 879, "abtract": 879, "prepackag": 879, "afford": 879, "alarm": [879, 943, 946], "conv_tim": 879, "w1_slave_driv": 879, "eeprom": 879, "ext_pow": 879, "w1_slave": 879, "22750": 879, "crc": 879, "rpi_volt": 879, "isa": 879, "in0": 879, "cpu_therm": 879, "temp1": 879, "w1_slave_temp": 879, "reliabl": 879, "radiou": 879, "disappear": 879, "0c4000000000": 879, "0x28": 879, "dalla": [879, 907], "02131d9920aa": 879, "5d": 879, "011432f138f9": 879, "misbehavior": 879, "instabl": 879, "pump": 879, "nuclear": 879, "plant": 879, "ssh-keygen": [880, 886], "password authent": [880, 886], "key based authent": [880, 886], "remote login": [880, 886], "unencrypt": 880, "rlogin": 880, "telnet": 880, "nsa": 880, "primarili": [880, 973, 1092], "sftp": 880, "portno": 880, "unabl": 880, "propaget": 880, "sha256sum": 881, "72c18232434d0551af75f964ea66ae5d9271faba895f40a929fb17f19d7ab44c": 881, "mitm": 886, "uncomfort": 886, "keygen": 886, "safeguard": 886, "unrespons": 887, "port forward": 888, "portforward": 888, "secure copi": [888, 889], "hmmm": 888, "whateer": 888, "mydocu": 889, "recus": 889, "mobil": 889, "bandwidth": 889, "mediat": 889, "descriptiotn": 889, "file system": 890, "network file system": 890, "smb": 890, "crawl": 890, "debianish": 890, "mountpoint": 890, "grant": 890, "idmap": 890, "errnum": 891, "strerror_r": 891, "buflen": 891, "cleanest": 891, "_r": 891, "reentrant": 891, "syscal": 893, "getaddrinfo": 893, "ri": 895, "nbytes_read": [895, 896, 897], "24608": 895, "1024root": 895, "nager": 895, "698nager": 895, "gatewai": 896, "peer": [896, 899], "netinet": 896, "af_inet": 896, "sock_stream": 896, "sockaddr_in": 896, "sin_famili": 896, "sin_port": 896, "inet_aton": 896, "sin_addr": 896, "ipproto_ip": 896, "sa_famili": 896, "inet_addr": 896, "10hallo": 896, "16thi": 896, "ong": 896, "14ong": 896, "timerfd_settim": 897, "itimerspec": [897, 931], "nasti": [898, 931], "ingenu": 899, "smae": 899, "o_append": 899, "o_cloexec": 899, "sigpip": [899, 945], "whenc": 899, "seek_cur": 899, "seek_end": 899, "occupi": [899, 901, 902], "status": 900, "srcfile": 900, "dstfile": 900, "1073741825": 901, "0k": 901, "texttt": 902, "dup2": 902, "oldfd": 902, "newfd": 902, "o_": 902, "bytes_to_writ": [903, 904, 906], "wxr": 903, "o_tmpfil": 903, "speci": 903, "pli": 903, "nread": [905, 911, 914, 937, 940, 944], "thats": [905, 906], "litter": 906, "misspel": 906, "24625": 907, "24562": 907, "pread": 909, "pwrite": 909, "readv": 909, "writev": 909, "uio": 909, "iovec": 909, "iov": 909, "iovcnt": 909, "preadv": 909, "pwritev": 909, "ftruncat": [909, 940, 941], "filedescriptor": 909, "gpio26": [911, 913, 914], "subtre": 913, "fe200000": 913, "gpiochip488": 913, "gpiochip504": 913, "active_low": 913, "fd_set": [914, 937], "exc_fd": 914, "fd_zero": [914, 937], "nreadi": 914, "fd_isset": [914, 937], "eek": 914, "intens": 915, "ppid": 915, "tid": 915, "tsd": 915, "spezif": 915, "_reentrant": 915, "lpthread": [915, 931, 950], "start_routin": 916, "pthread_exit": 916, "pthread_cancel": 916, "pthread_attr_setdetachst": 916, "detachst": 916, "pthread_create_detach": 916, "pthread_detach": 916, "pthread_self": 916, "pthread_equ": 916, "30650": 916, "13961": 916, "correl": 916, "gettid": 916, "pthread_mutexattr_t": [918, 934], "pthread_mutex_destroi": 918, "pthread_mutex_trylock": 918, "global_mutex": 918, "pthread_mutexattr_settyp": 918, "pthread_mutex_norm": 918, "pthread_mutex_errorcheck": 918, "pthread_mutex_recurs": 918, "pthread_mutex_default": 918, "pthread_cond_destroi": 920, "pthread_cond_broadcast": 920, "parlanc": 920, "set_autoreset_ev": 920, "ev": 920, "is_set": 920, "wait_autoreset_ev": 920, "acquiriert": 920, "autoreset": 920, "spuriou": 920, "woken": 920, "pthread_condattr_t": 920, "pthread_cond_initi": 920, "pthread_cond_timedwait": 920, "abstim": 920, "use_glob": 922, "pthread_once_t": 922, "global_onc": 922, "pthread_once_init": 922, "init_glob": 922, "pthread_onc": 922, "once_control": 922, "init_routin": 922, "pthread_key_cr": 922, "__thread": 922, "pthread_atfork": 923, "legales": 923, "lock_rac": 925, "succeed": [925, 1112], "foreground": [926, 979], "huh": 926, "paradox": 926, "setenv": 928, "putenv": 928, "unsetenv": 928, "clearenv": 928, "customvar": 928, "timesl": 929, "starv": 929, "throughput": 929, "sha1": [929, 932, 948], "voluntarili": [929, 932], "lrt": 931, "app_statu": 931, "tick_count": 931, "update_statu": 931, "sigact": [931, 944, 945], "sa_handl": [931, 944, 945], "sigrtmin": 931, "sigev": [931, 941], "sev": 931, "sigev_notifi": 931, "sigev_sign": 931, "sigev_signo": 931, "timer_t": 931, "tspec": 931, "nsec": 931, "timer_settim": 931, "diverg": 931, "show_statu": 931, "freerto": [931, 934], "syncron": 931, "update_status_func": 931, "initial_t": 931, "interval_t": 931, "show_status_func": 931, "update_task": 931, "show_task": 931, "231765": 931, "225819": 931, "5635": 931, "lwp": 931, "231766": 931, "231767": 931, "tracer": 931, "restart_syscal": 931, "clock_nanosleep": 931, "clock_realtim": 931, "500000000": 931, "033": 931, "7m": 931, "flash_func": 931, "is_revers": 931, "flash_task": 931, "flasher": 931, "indepen": 931, "toggl": 931, "fore": [931, 981], "particularli": 932, "suscept": 932, "renic": 933, "din": 933, "44300": 933, "echtzeitbetrieb": 933, "betrieb": 933, "rechensystem": 933, "verarbeitung": 933, "anfallend": 933, "st\u00e4ndig": 933, "derart": 933, "betriebsbereit": 933, "da\u00df": 933, "verarbeitungsergebniss": 933, "innerhalb": [933, 1142], "vorgegebenen": 933, "zeitspann": 933, "000014": 933, "013914m": 933, "91410827636698u": 933, "000002": [933, 935], "002382m": 933, "3820173632900326u": 933, "intrus": 933, "controversi": 933, "sched_oth": 934, "relinquish": 934, "sched_param": 934, "sched_getschedul": 934, "sched_prior": 934, "pthread_setschedparam": 934, "pthread_getschedparam": 934, "predefini": 934, "pthread_attr_setschedpolici": 934, "spoken": 934, "pthread_mutexattr_setprotocol": 934, "pthread_prio_inherit": 934, "pthread_prio_protect": 934, "risen": 934, "pthread_mutexattr_setprioceil": 934, "000105": 935, "105247m": 935, "24749755859354u": 935, "000015": 935, "014643m": 935, "64260525619006u": 935, "105u": 935, "000067": 935, "067263m": 935, "2626495361326u": 935, "000003": 935, "002883m": 935, "8827592917392217u": 935, "ondemand": 935, "governor": 935, "cpufreq": 935, "scaling_governor": 935, "cpuinfo_cur_freq": 935, "067036m": 935, "03615188598611u": 935, "000001": 935, "001257m": 935, "2571678380193383u": 935, "000065": 935, "065188m": 935, "188407897949u": 935, "002376m": 935, "3758434034066656u": 935, "001042": 935, "042438m": 935, "4375534057617u": 935, "000017": 935, "017123m": 935, "123423079175748u": 935, "000143": 935, "142646m": 935, "6458358764593u": 935, "000005": 935, "004995m": 935, "994855006705264u": 935, "_syse": 937, "exit_failur": 937, "consume_fd": 937, "random_fd": 937, "tty_fd": 937, "nfd": 937, "ttys4": 937, "in_fd": 937, "eof_detect": 937, "shm": [939, 940, 941], "099": 939, "sem": [939, 940, 941], "shared memori": 940, "message queu": 940, "mman": 940, "fstat": 940, "st_size": 940, "map_fail": 940, "shm_open": [940, 941], "tmpf": [940, 941], "resiz": 940, "4095": 940, "weigh": 940, "map_shar": 940, "counter_loc": 940, "sem_t": [940, 941], "sem_open": 940, "sem_fail": 940, "sem_wait": 940, "sem_post": 940, "mq_attr": [940, 941], "mq_maxmsg": [940, 941], "mq_msgsize": [940, 941], "mqd_t": [940, 941], "mq_open": 940, "mq_send": 940, "mq_receiv": 940, "shm_unlink": 941, "overtak": 941, "mq_overview": 941, "oflag": 941, "mq_flag": 941, "mqde": 941, "msg_ptr": 941, "msg_len": 941, "msg_prio": 941, "sevp": 941, "disturb": [941, 944], "elegantli": 941, "qsize": 941, "signo": 941, "notify_pid": 941, "goiven": 941, "sem_overview": 941, "sem_trywait": 941, "sem_timedwait": 941, "abs_timeout": 941, "shm_close": 941, "shm_overview": 941, "035": [943, 944], "051": [943, 944], "segv": [944, 945], "mortem": [944, 1070], "core_pattern": 944, "termination_handl": 944, "sigint": [944, 945], "sig_atomic_t": [944, 945], "term_act": 944, "alarm_handl": 944, "alarm_act": 944, "sigset_t": [944, 946], "termination_sign": 944, "sigemptyset": [944, 945], "sigaddset": [944, 945], "sigquit": 944, "sigprocmask": [944, 945], "sig_block": 944, "impolit": 944, "sig": [944, 945], "consume_pip": 944, "pipenam": 944, "puzzl": 944, "pthread_sigmask": [944, 945], "sigtstp": 945, "sigalrm": [945, 946], "sigchld": 945, "abnorm": 945, "sigabrt": 945, "sigsegv": 945, "sigbu": 945, "sigil": 945, "sigfp": 945, "unblock": 945, "oldset": 945, "sigpend": 945, "sigfillset": 945, "signum": 945, "sigdelset": 945, "sigismemb": 945, "sigsetop": 945, "recept": 945, "sa_mask": 945, "sa_flag": 945, "oldact": 945, "sig_ign": 945, "sig_dfl": 945, "sighandler_t": 945, "_exit": 945, "barebon": 946, "louder": 946, "stallman": 947, "risc": 947, "llvm": 947, "24360": 947, "hello_h": [947, 963, 965], "24416": 947, "linkabl": [947, 1083, 1139], "0000000000401040": 947, "_start": 947, "0000000000401000": 947, "_init": 947, "00000000004011b8": 947, "_fini": 947, "crt": 947, "crt1": 947, "crti": 947, "crtn": 947, "0000000000404000": 947, "_global_offset_table_": 947, "reloc": 947, "1762320": 947, "0000000000401126": 947, "1224008": 947, "greetdemo": 948, "cmake_system_nam": 948, "toolchain_base_dir": [948, 962], "cmake_c_compil": 948, "cmake_cxx_compil": 948, "find_xxx": 948, "cmake_find_root_path_mode_program": 948, "cmake_find_root_path_mode_librari": 948, "cmake_find_root_path_mode_includ": 948, "toolchian": 948, "cmake_toolchain_fil": 948, "libgreet": [948, 949, 955, 964, 965], "13921": [948, 949], "cmakecach": [948, 949], "26192": [948, 949], "27920": [948, 949], "8503": [948, 949], "eabi5": 948, "armhf": 948, "5db807d9b005b19e1e0c957755fa7ca7b771edcb": 948, "debug_info": 948, "armv7l": 950, "challeng": 950, "metadistribut": 950, "miniumum": 950, "realiti": 950, "rasberri": 952, "clickabout": 957, "workabl": 959, "tarbal": 959, "lastest": 959, "x86_64_arm": 959, "precompos": 959, "uncompress": 959, "73812": 959, "1107168": 959, "1481768": 959, "1968456": 959, "1091864": 959, "1030432": 959, "1221816": 959, "lynxbe": 961, "y3p9kn7mjei": 961, "cli": 961, "containerd": 961, "dockerhub": 961, "hub": 961, "sh_18_04": 961, "78683068": 961, "1292296": 961, "70mb": 962, "73018472": 962, "auxvec": 962, "bitsperlong": 962, "bpf_perf_ev": 962, "rapidli": 963, "phoni": [963, 964, 965], "origaniz": 964, "relink": 964, "0x2e20": 964, "vdso": 964, "0x00007fffe9fa7000": 964, "0x00007f75ca289000": 964, "0x00007f75ca46d000": 964, "r_x86_64_32": 964, "fpic": 964, "whom": 965, "hello_flex": 965, "hello_flexible_h": 965, "cq": 965, "lisp": 966, "create_f": 966, "create_print": 966, "print_blah": 966, "print_someth": 966, "sytax": 967, "432x288": 967, "shutil": 968, "tarfil": 968, "temporarydirectori": 968, "tmpd": 968, "tarnam": 968, "expandvar": 968, "contrain": 968, "__enter__": 968, "__exit__": 968, "openforread": 968, "ipykernel_155952": 968, "2037535577": 968, "myprint": 968, "orig_print": 968, "exc_val": 968, "exc_tb": 968, "myarg": 968, "total_ord": 969, "ipykernel_155970": 969, "2840657929": 969, "a_vari": 970, "fallback": [970, 990], "baseexceptiongroup": 970, "exceptiongroup": 970, "subtyp": 970, "maybe_fail": 970, "ipykernel_155988": 970, "104829323": 970, "lone": 970, "4008457068": 970, "mysubsystemerror": 970, "reallybaderror": 970, "someothererror": 970, "definitelybad": 970, "evenwors": 970, "collapsingtheworld": 970, "errorcod": 970, "__cached__": 971, "_frozen_importlib_extern": 971, "sourcefileload": 971, "0x7f63e071d510": 971, "blindli": 971, "ansibl": 971, "matno": 971, "conffil": 971, "confcod": 971, "confdict": 971, "7263": 971, "object ori": [972, 1128], "keyword argu": 972, "starstararg": [972, 993], "for loop": 972, "iterator protocol": 972, "operator overload": 972, "drawn": 973, "cnt": 973, "inputrang": 973, "disgust": 973, "gentli": 973, "smarter": 973, "nolimit": 974, "fibo_numb": 974, "jerki": 974, "max_numb": 974, "satisfactori": 974, "python_1010_generators_yield": 974, "glossari": 975, "ipykernel_156010": 975, "4235178104": 975, "breadth": 975, "coverag": 977, "subnamespac": 978, "mysupermodul": 978, "mysuperfunct": 978, "subpackage1": 978, "module1": 978, "module2": 978, "subpackage2": 978, "disambigu": 978, "increment_background": [979, 981], "background_integ": 979, "foreground_integ": 979, "runn": 979, "backgroundincrement": 979, "uncool": 979, "14784035": 981, "quack": 983, "mockup": 983, "92606571853282": 983, "97686648072574": 983, "80804133514495": 983, "395373336740846": 983, "95352048856653": 983, "__next__": 983, "brokensensor": 983, "gettemperatur": 983, "ipykernel_156028": 983, "2792400554": 983, "71536506": 983, "152158437": 983, "1134347102": 983, "refect": 984, "ipykernel_156046": 984, "1242235954": 984, "4119786358": 984, "emp": 987, "add_employe": 987, "mgr": 987, "isold": [987, 988, 1088], "haubentauch": [987, 988, 991, 1088], "parentcl": 987, "funnili": 987, "make_child": 988, "parent1": 988, "parent2": 988, "vvv": 988, "father": 988, "vvvvvv": 988, "tabular": 989, "someclass": 989, "persons_from_csv": 989, "person_dict": 989, "operators object oriented program": 990, "behaivor": 990, "number2": 990, "int2": 990, "ipykernel_156136": 990, "3709071117": 990, "151628379": 990, "whistl": [990, 993], "symmetr": [990, 1020], "commut": 990, "452733317": 990, "summar": 990, "ipykernel_156156": 991, "2144392361": 991, "attrnam": 991, "meier": 991, "3124626440": 991, "1226798660": 991, "expicitli": 992, "0x7f7d02a2c880": 992, "toolkit": 994, "marker": 996, "eighti": 996, "monti": 996, "incompat": [996, 1002, 1010, 1021], "benevol": 996, "bdfl": [996, 1080], "overse": 996, "januari": 996, "dropbox": 996, "awk": 998, "sensit": 1001, "throughout": 1001, "0o01234": 1002, "14159265359": [1002, 1016], "3e12": 1002, "afterthought": 1002, "\u00e4\u00f6\u00fc": 1002, "xa4": 1002, "xb6": 1002, "xbc": 1002, "xe4": 1002, "compel": 1002, "codebas": 1002, "ancient": 1002, "sequencish": 1006, "sixtim": 1006, "seen_sixey": 1006, "blahblahblahblahblah": 1007, "aah": 1008, "a_list": 1008, "a_tupl": 1008, "hlow": 1008, "hlowrd": 1008, "straw": [1009, 1017], "heritag": 1010, "140123676083728": 1011, "140123676083760": 1011, "140123676083984": 1011, "140123365723136": 1011, "140123365930656": 1011, "ipykernel_156234": 1012, "723444260": 1012, "globvar": 1012, "parameterizab": 1013, "ipykernel_156252": 1013, "3939188879": 1013, "3571579993": 1013, "program_exit": 1013, "exitstatu": 1013, "spam": [1015, 1078], "dec": 1015, "x58": 1015, "07d": 1016, "0x": 1016, "5x": 1016, "0x2f": 1016, "4x": 1016, "0x002f": 1016, "5o": 1016, "0o31": 1016, "04d": 1016, "0042": 1016, "05d": 1016, "00042": 1016, "thistl": 1017, "thorn": 1017, "ipykernel_156306": 1017, "677815794": 1017, "annoy": 1017, "sqn": 1018, "defval": 1019, "iterkei": 1019, "keyiter": 1019, "0x7ff2e8753418": 1019, "unord": 1020, "tunabl": 1021, "shoudn": 1021, "0x7fca2c785b70": 1022, "tof": 1022, "outputfilenam": 1023, "argumentpars": 1023, "add_argu": 1023, "parse_arg": 1023, "ou": 1023, "ylabel": [1025, 1076], "xmin": 1025, "xmax": 1025, "ymin": 1025, "ymax": 1025, "twine": 1026, "lotsa": [1026, 1100], "long_descript": 1026, "long_description_content_typ": 1026, "beta": 1026, "osi": 1026, "approv": 1026, "package_dir": 1026, "python_requir": 1026, "install_requir": 1026, "paho": [1026, 1087], "pyproject": 1026, "toml": 1026, "backend": 1026, "build_meta": 1026, "yadda": 1026, "sdist": 1026, "python_course_2022_11_07": 1026, "12549": 1026, "BE": 1026, "mydb": 1027, "hardli": 1028, "femal": 1033, "miracl": [1036, 1053], "previouslin": 1040, "ifi": 1053, "uniqifi": 1054, "sensor_const": 1059, "test_sensor_const": 1059, "ii": [1060, 1062, 1066, 1068, 1079], "user_record": [1061, 1063], "read_csv_head": [1061, 1068], "read_csv_nohead": [1063, 1067, 1068], "csvfilenam": 1065, "test_noheader_person": 1066, "read_noheader_person": 1066, "test_must_not_use_global_variables_as_return_object": 1066, "filename1": 1066, "noheader1": 1066, "filename2": 1066, "noheader2": 1066, "users1": 1066, "users2": 1066, "test_header_person": 1066, "read_header_person": 1066, "test_user_json_person": 1066, "userdb_json": [1066, 1067], "test_person_to_json": 1066, "joerg_sent": 1066, "to_json_person": 1066, "joerg_receiv": 1066, "from_json_person": 1066, "envis": [1067, 1126], "user_json": 1067, "to_json": 1067, "test_user_json": 1067, "test_user_to_json": 1067, "user_s": 1067, "json_user_s": 1067, "from_json": 1067, "test_nohead": 1068, "test_head": 1068, "lectur": [1070, 1140], "unsupervis": [1073, 1078], "conveyor": 1073, "belt": 1073, "linear_regress": [1074, 1077], "model_select": [1074, 1076], "train_test_split": [1074, 1076], "linear_model": [1074, 1076], "linearregress": [1074, 1076], "history_data": [1074, 1075, 1076, 1077], "inputfeatur": [1074, 1076], "outputfeatur": [1074, 1076], "input_train": [1074, 1076], "input_test": [1074, 1076], "output_train": [1074, 1076], "output_test": [1074, 1076], "test_siz": [1074, 1076], "output_predict": [1074, 1076], "visualcross": 1075, "york": [1075, 1076], "wind": [1075, 1076], "chill": [1075, 1076], "precipit": [1075, 1076], "snow": [1075, 1076], "gust": [1075, 1076], "humid": [1075, 1076], "rain": 1075, "cloudi": 1075, "995833": 1076, "688889": 1076, "287500": 1076, "327273": 1076, "012222": 1076, "690278": 1076, "470769": 1076, "369444": 1076, "513421": 1076, "946106": 1076, "574023": 1076, "313256": 1076, "994536": 1076, "070695": 1076, "025980": 1076, "302423": 1076, "214825": 1076, "665492": 1076, "900000": 1076, "700000": 1076, "090000": 1076, "050000": 1076, "377500": 1076, "750000": 1076, "950000": 1076, "650000": 1076, "330000": 1076, "325000": 1076, "850000": 1076, "425000": 1076, "825000": 1076, "715000": 1076, "470000": 1076, "970000": 1076, "multidimension": 1076, "xlabel": 1076, "coef_": 1076, "80189231": 1076, "intercept_": 1076, "95355086": 1076, "609608": 1076, "571879": 1076, "736988": 1076, "170933": 1076, "798254": 1076, "189739": 1076, "180394": 1076, "449230": 1076, "661530": 1076, "057745": 1076, "850176": 1076, "284120": 1076, "685067": 1076, "weather": [1077, 1078], "ndarrai": [1077, 1093], "splice": [1077, 1078], "cute": 1077, "paper": 1077, "aspir": [1077, 1105], "dilig": 1078, "bite": 1078, "forecast": 1078, "agi": 1078, "asi": 1078, "forest": 1078, "predictor": 1078, "accuraci": 1078, "classif": 1078, "unlabel": 1078, "reinforc": 1078, "reward": 1078, "bay": 1078, "sepp": 1079, "tupleunpack": 1079, "spell": 1079, "redundantli": 1079, "quotechar": 1079, "spreadsheet": 1079, "odbc": 1080, "mysql": 1080, "informix": 1080, "berkeleydb": 1080, "mongodb": 1080, "rollback": 1080, "initd": 1082, "psycopg": 1082, "libpq": 1082, "conninfo": 1082, "psycopg2": 1082, "localhost": [1082, 1087], "schwammerldb": 1082, "android": 1083, "schwammerln": 1083, "giftig": 1083, "geniessbar": 1083, "dbm": 1083, "steinpilz": 1083, "roehren": 1083, "speisetaeubl": 1083, "lamellen": 1083, "speitaeubl": 1083, "eierschwammerl": 1083, "teufelsroehrl": 1083, "overcod": 1084, "512119": 1084, "european": 1084, "steroid": 1084, "htmlhelp": 1084, "charset": 1084, "latin1": 1084, "chines": 1084, "enc": 1084, "0xfc": 1084, "0xdf": 1084, "0xf6": 1084, "\u00df": 1084, "cyril": 1084, "received_enc": 1084, "lg_enc": 1084, "bye_enc": 1084, "artificial intellig": 1085, "postgr": 1085, "mssql": 1085, "data sci": 1085, "ecosystem": 1085, "antp": 1087, "1883": 1087, "53767": 1087, "tcp6": 1087, "mosquitto_pub": 1087, "easiest": 1087, "message_receiv": 1087, "userdata": 1087, "on_messag": 1087, "loop_forev": 1087, "mosqitto_pub": 1087, "styrian": 1087, "esp": 1087, "666608091972": 1088, "ignore_index": 1088, "new_person": 1088, "saskia": 1088, "456710042003": 1088, "irrevers": 1089, "ipykernel_156688": 1092, "3315724720": 1092, "maybe_cal": [1092, 1093], "apply_if_cal": [1092, 1093], "_getitem_axi": [1092, 1093], "_is_scalar_access": [1092, 1093], "1519": 1092, "_validate_integ": 1092, "1521": 1092, "_ix": 1092, "len_axi": 1092, "_get_axi": 1092, "1451": 1092, "1453": 1092, "rangeindex": 1093, "get_loc": 1093, "toler": 1093, "3621": 1093, "casted_kei": 1093, "_lib": 1093, "pyx": 1093, "indexengin": 1093, "hashtable_class_help": 1093, "pxi": 1093, "pyobjecthasht": 1093, "get_item": 1093, "ipykernel_156713": 1093, "1471010945": 1093, "thru": 1093, "1201": 1093, "_validate_kei": 1093, "_get_label": 1093, "1203": 1093, "_get_slice_axi": 1093, "slice_obj": 1093, "1151": 1093, "5667": 1093, "1153": 1093, "1155": 1093, "_handle_lowerdim_multi_index_axis0": 1093, "tup": 1093, "drop_level": 1093, "new_index": 1093, "3875": 1093, "3877": 1093, "3623": 1093, "3625": 1093, "listlik": 1093, "_check_indexing_error": 1093, "sort_index": 1093, "multiindex": 1093, "contrari": 1094, "lower_email": 1095, "rentner": 1095, "is_palindrom": 1095, "facto": [1096, 1121], "subel": 1096, "attrib": 1096, "getroot": 1096, "examtop": 1098, "package manag": 1099, "project manag": [1099, 1127], "unit test": 1099, "virtual environ": 1099, "affin": 1099, "witch": 1100, "gnore": 1100, "ackup": 1100, "bort": 1100, "cert": 1100, "pem": 1100, "pythonhost": 1100, "e17846ef3601dcb6f118ea447439650e0c35cb4fe60274fbe24214156df2": 1100, "cp38": 1100, "manylinux2010_x86_64": 1100, "ext": 1100, "argcomplet": 1100, "asn1crypto": 1100, "ensurepip": [1101, 1107], "test_project": 1105, "test_soup": 1105, "test_task": 1105, "stringent": 1105, "discoveri": 1105, "syndrom": [1105, 1106, 1112], "test_person_point": 1105, "deselect": 1105, "tweak": 1105, "test_": 1105, "test_simpl": 1105, "test_trivi": 1105, "test_trivial_but_fail": 1105, "___________________________": 1105, "____________________________": 1105, "test_stat": 1105, "implementation_point": 1105, "implementor1": 1105, "implementor2": 1105, "documentation_point": 1105, "integration_point": 1105, "implementation_perc": 1105, "documentation_perc": 1105, "integration_perc": 1105, "total_perc": 1105, "total_point": 1105, "gathered_point": 1105, "test_another_task_aspect": 1105, "pathlib": 1105, "test_ini_file_pars": 1105, "my_test_fil": 1105, "mytestcas": 1106, "runtest": 1106, "assertequ": 1106, "texttestrunn": 1106, "__db": 1106, "create_databas": 1106, "fill_test_data": 1106, "remove_databas": 1106, "testfeature1": 1106, "testfeature2": 1106, "testsuit": 1106, "addtest": 1106, "testload": 1106, "loadtestsfromtestcas": 1106, "testsometh": 1106, "failif": 1106, "failunless": 1106, "failunlessequ": 1106, "failifequ": 1106, "failunlessalmostequ": 1106, "failunlessrais": 1106, "env_dir": 1107, "my_venv": 1107, "csh": 1107, "easy_instal": 1107, "pip3": 1107, "powershel": 1107, "joblib": 1107, "threadpoolctl": 1107, "deactiv": 1107, "my_recreated_venv": 1107, "persuad": 1107, "will_fail": [1111, 1114], "initgoogletest": [1112, 1117], "run_all_test": [1112, 1117], "lgtest": [1112, 1114], "onesuit": 1112, "test1": 1112, "test2": 1112, "anothersuit": 1112, "postive_pattern": 1112, "negative_pattern": 1112, "gtest_list_test": 1112, "faildemo": 1112, "failisfat": 1112, "assertdemo": 1112, "assertisfat": 1112, "expect_": 1112, "expectdemo": 1112, "expectisnonfat": 1112, "expect_tru": 1112, "expect_eq": 1112, "0x58": 1112, "0x55": 1112, "assert_": 1113, "repoqueri": 1114, "dpkg": 1114, "listfil": 1114, "joergfaschingbau": 1114, "cmake_compiler_is_gnucc": 1114, "predef": [1116, 1117], "predefinedtestenviron": 1117, "paranoidtest": 1117, "untechn": 1117, "thefixtur": 1117, "testthatmodifiesst": 1117, "complexfixtur": 1117, "first_n": 1117, "sometest": 1117, "egal": 1119, "welcher": 1119, "schulungstyp": 1119, "problemlo": 1119, "verifiziert": 1119, "formlos": 1119, "anliegen": 1119, "umgehend": 1119, "setzen": 1119, "besprechen": 1119, "gestaltung": 1119, "schl\u00fcssigkeit": 1119, "chronologisch": 1119, "gehaltenen": 1119, "querzulesen": 1119, "roter": 1119, "faden": 1119, "ablaufen": 1119, "\u00e4nderungen": 1119, "kursgeschehen": 1119, "passieren": 1119, "detailliert": 1119, "kosten": 1119, "terminen": 1119, "inhouseschulungen": 1119, "buchenden": 1119, "terminisiert": 1119, "zustandekommt": 1119, "zeitlich": 1119, "\u00f6rtlich": 1119, "flexibel": [1119, 1120], "zul\u00e4sst": 1119, "besond": 1119, "onlineschulungen": 1119, "erwiesen": 1119, "dedizierten": 1119, "implementieren": [1119, 1124], "instruktionen": [1119, 1123], "datenschutzrichtlinien": 1119, "genug": 1119, "durchweg": 1119, "wahlweis": 1119, "offenen": 1119, "anmelden": 1119, "inhouseschulung": 1119, "exklusiv": 1119, "\u00fcblicherweis": 1119, "firmenstandort": 1119, "basteln": [1119, 1136], "schwierig": 1119, "z\u00fcgig": 1120, "uhr": 1120, "punktlandung": 1120, "mbr": 1120, "bootet": 1120, "nachs\u00e4tz": 1120, "wahllos": 1120, "reinen": [1120, 1136], "gebastelt": 1120, "leichtfertigerweis": 1120, "richtigerweis": 1120, "multilib": 1120, "ausgestattet": [1120, 1129, 1136, 1143], "l\u00e4uft": 1120, "seltsamerweis": 1120, "dar\u00fcber": 1120, "zeitersparnisgr\u00fcnden": 1120, "hinweggeholfen": 1120, "vorcompilierten": 1120, "statisch": [1120, 1138], "gelinkten": 1120, "christof": 1120, "sourcen": 1120, "crosszucompilieren": 1120, "gescheitert": 1120, "ungl\u00fccklichen": 1120, "umstand": 1120, "schulungsrechn": 1120, "neu": 1120, "aufzusetzen": 1120, "kompil": 1120, "verschwunden": 1120, "buildscript": 1120, "konnt": 1120, "kreativen": 1120, "wiederhergestellt": 1120, "v\u00f6llig": 1120, "sinnfrei": 1120, "distributionen": 1120, "compilieren": [1120, 1122], "architekturen": 1120, "versucht": [1120, 1121, 1123], "richtigen": 1120, "leben": [1120, 1136], "anzuwenden": 1120, "leut": 1120, "anzusehen": 1120, "wort": [1120, 1122], "gefallen": 1120, "hart": 1120, "garantien": 1120, "durchau": 1120, "gerechtfertigt": 1120, "gesch\u00fctz": 1120, "auffahren": 1120, "enthaltenen": 1120, "n\u00fctzen": 1120, "stichwort": [1120, 1129, 1136], "mittelweg": 1120, "diffundieren": 1120, "aufruft": 1120, "startet": 1120, "ausgekl\u00fcgelt": 1120, "funktionsweis": 1120, "jeher": 1120, "kennt": [1120, 1142], "gewaltig": 1120, "geschichtsbelastet": 1120, "tr\u00e4gt": 1120, "intelligent": [1120, 1129, 1136], "trotz": 1120, "behauptungen": 1120, "gar": 1120, "lieblingsseit": 1120, "linuxthemen": 1120, "zentrisch": 1120, "bourne shel": [1121, 1131], "\u00fcbel": 1121, "sprechen": [1121, 1129, 1136], "vollst\u00e4ndig": 1121, "shellprogrammierung": 1121, "ruf": 1121, "schmutzigen": 1121, "stattdessen": 1121, "hauch": 1121, "pervers": 1121, "\u00e4sthetik": 1121, "verpassen": 1121, "geschicht": 1121, "kram": 1121, "environmentvariablen": 1121, "kontrollkonstrukt": [1121, 1122], "hauptteil": 1121, "stringmanipul": 1121, "obskur": 1121, "konstrukt": [1121, 1131], "auskommt": 1121, "umgang": [1121, 1131], "vorausgesetzt": [1121, 1123, 1124, 1132, 1138, 1139, 1141, 1142], "bibel": 1122, "hinzuf\u00fcgen": 1122, "erfind": 1122, "tickt": 1122, "wozu": 1122, "grenzen": 1122, "vorlag": 1122, "didaktik": 1122, "erg\u00e4nzt": 1122, "kontext": 1122, "heutigen": 1122, "dienen": 1122, "sprachkern": 1122, "unterrichten": 1122, "standardlibrari": 1122, "zugunsten": 1122, "bequemeren": 1122, "verzichten": 1122, "sprachdesign": 1122, "geachtet": 1122, "isoliert": 1122, "abseit": [1122, 1124, 1142], "mitbringt": 1122, "h\u00e4lt": 1122, "eignet": 1122, "hervorragend": [1122, 1129, 1137, 1142], "systemprogrammierung": 1122, "weglassen": 1122, "programmiert": [1122, 1124], "dementsprechend": [1122, 1142], "sinngem\u00e4ss": 1122, "aufgeteilt": 1122, "manipulieren": [1122, 1131], "maschineninstruktionen": 1122, "ausgef\u00fchrt": [1122, 1123], "geschwindigkeitsvorteil": 1122, "interpretierten": 1122, "nachteil": 1122, "verst\u00e4ndni": [1122, 1131, 1141], "speicherverwaltung": [1122, 1124, 1139], "integral": 1122, "zusammengesetzt": 1122, "speicherlayout": 1122, "wenigst": 1122, "worin": 1122, "programmstrukturierung": 1122, "deklar": 1122, "beliebtest": 1122, "unmeng": 1122, "flexibilit\u00e4t": [1122, 1139], "einbringen": 1122, "unbeliebtest": 1122, "fehlerm\u00f6glichkeiten": 1122, "verkettet": 1122, "fehlerszenarien": [1122, 1142], "absturz": 1122, "dahinsiechen": 1122, "debugginghilfen": 1122, "typumwandlungen": 1122, "hauptkritikpunkt": 1122, "sorglos": 1122, "integertypen": 1122, "breit": [1122, 1129], "regelwerk": 1122, "historisch": 1122, "aufarbeitung": 1122, "historischem": 1122, "ballast": 1122, "compileroptionen": 1122, "pr\u00e4prozessor": [1122, 1123], "leid": 1122, "grundz\u00fcgen": 1122, "gezeigt": [1122, 1131, 1136], "compilierung": 1122, "heutzutag": 1122, "wegzudenken": [1122, 1129], "damal": [1122, 1124], "programmen": [1122, 1123, 1138], "separat": 1122, "verbinden": 1122, "spielt": 1122, "archivieren": 1122, "linken": 1122, "programmgesundheit": 1122, "bedeutungen": 1122, "optimierungsm\u00f6glichkeiten": 1122, "memoryfehlern": 1122, "verwalten": 1122, "formatiert": 1122, "_und_": 1122, "komfort": 1122, "m\u00e4chtige": [1122, 1139], "jedoch": [1122, 1129, 1136, 1142], "weit": 1122, "fehlerimmunit\u00e4t": 1122, "allein": 1122, "verdienen": 1122, "erw\u00e4hnung": 1122, "stringbearbeitung": 1122, "heutig": 1122, "eigenwillig": 1122, "f\u00fclle": 1122, "erleichtern": 1122, "lauern": [1122, 1141], "gefahren": [1122, 1141, 1142], "sprachumfang": 1123, "angeht": 1123, "compiliert": 1123, "maschinencod": 1123, "pointern": 1123, "sofort": 1123, "beipflichten": 1123, "einmal": [1123, 1138, 1139, 1143], "beinharten": 1123, "typenkonvertierungen": 1123, "aufgesessen": 1123, "beleuchtet": [1123, 1141], "beschrittenen": 1123, "dunklen": 1123, "ecken": 1123, "widmet": 1123, "intensiv": 1123, "fehlersuch": 1123, "erkl\u00e4rungen": 1123, "sprachdefinit": 1123, "greifbar": 1123, "verdacht": 1123, "manch": 1123, "typkonversionen": 1123, "l\u00fccken": 1123, "typensystem": [1123, 1124], "techniken": [1123, 1129], "typensicherheit": 1123, "dunkl": 1123, "unn\u00f6tig": 1123, "programmhygien": 1123, "wege": 1123, "sauberen": 1123, "weisen": 1123, "optimierungstechniken": 1123, "anwenden": 1123, "optimierung": 1123, "erschweren": 1123, "lesbarkeit": 1123, "memoryzugriff": 1123, "ur": 1123, "beziehungsweis": 1123, "hardwareunterst\u00fctzung": 1123, "Ins": 1123, "kenntniss": [1123, 1124, 1132, 1138, 1139, 1141, 1142], "urspr\u00fcnglich": 1124, "erfunden": 1124, "leichter": 1124, "handhabbar": 1124, "erm\u00f6glichen": [1124, 1139], "ressourcenverwaltung": 1124, "kontrolliert": 1124, "mainstream": 1124, "einzug": 1124, "hie\u00df": 1124, "treffend": 1124, "seitdem": 1124, "vereinzelt": 1124, "soviel": 1124, "dampflokomot": 1124, "stellt": [1124, 1142], "vielfalt": 1124, "sprachkonstrukt": 1124, "genial": 1124, "gewagt": 1124, "behaupten": 1124, "anbelangt": 1124, "sprachmittel": 1124, "wichtigst": 1124, "n\u00e4mlich": 1124, "reichlich": [1124, 1129, 1136], "umstieg": 1124, "erw\u00e4gen": 1124, "embeddedbetriebssystem": 1124, "einsetzen": 1124, "vielerort": 1124, "m\u00f6glich": [1124, 1129], "datenkapselung": 1124, "objekten": 1124, "fallstrick": 1124, "korrektheit": 1124, "100ste": 1124, "strukturiert": 1124, "fehlerbehandlung": 1124, "generisch": 1124, "mechanismen": [1124, 1139, 1141, 1143], "mehrfachvererbung": 1124, "teilweis": 1124, "kapiteln": 1124, "unterschied": 1124, "erl\u00e4utert": [1124, 1129], "c++ 11": 1125, "enjoy": 1125, "overrrid": 1125, "coolest": 1125, "optinion": 1125, "oneshot": 1125, "communict": 1125, "unlearn": 1125, "inventor": 1126, "weren": 1127, "intricaci": 1127, "interdepend": 1127, "rudimentari": 1127, "graviti": 1128, "vocabulari": 1128, "confront": 1128, "reusab": 1128, "nicknam": 1128, "zentrum": [1129, 1136], "vollwertig": 1129, "selben": 1129, "betriessystemkonzept": 1129, "jahrzehnten": 1129, "bew\u00e4hrt": 1129, "automot": 1129, "sektor": 1129, "vertreten": 1129, "altbew\u00e4hrten": 1129, "konsequ": [1129, 1139], "ausbaut": 1129, "hardwareschnittstellen": 1129, "echtzeitf\u00e4higkeit": 1129, "dahint": 1129, "rundet": 1129, "hardwarebastelworkshop": 1129, "embeddedprogrammier": [1129, 1136], "l\u00e4nger": [1129, 1136], "normalen": [1129, 1136], "dateisystem": [1129, 1136], "versagt": [1129, 1136], "teuer": [1129, 1136], "erkauft": [1129, 1136], "elektronik": [1129, 1136], "testen": [1129, 1136, 1143], "hostsoftwar": [1129, 1136], "architekten": [1129, 1136], "plattformzusammensetzung": [1129, 1136], "entscheiden": [1129, 1136, 1143], "rechtfertigen": [1129, 1136], "logik": [1129, 1136], "steck": [1129, 1136], "beantworten": [1129, 1136, 1143], "eingeladen": [1129, 1136], "l\u00f6tmateri": [1129, 1136], "mitzubringen": [1129, 1136], "bastelei": 1129, "erfolgt": 1129, "vorhandenen": [1129, 1136, 1143], "minicomputern": 1129, "prototypen": 1129, "desktopbetriebssystem": [1129, 1136], "verh\u00e4ltniss": [1129, 1136], "512mb": [1129, 1136], "m\u00fchsam": [1129, 1136], "produktivsystem": [1129, 1136], "ohnehin": [1129, 1136], "unangebracht": [1129, 1136], "anf\u00e4ng": [1129, 1136], "filesystemen": [1129, 1136], "durchzuf\u00fchren": 1129, "filedeskriptoren": [1129, 1131], "getrennt": 1129, "abl\u00e4uf": 1129, "adressraum": 1129, "sorgfalt": 1129, "bloss": 1129, "gef\u00e4chert": 1129, "gewissen": 1129, "szenarien": 1129, "steuerungen": 1129, "gef\u00e4hrlich": 1129, "umfangreich": 1129, "hauptthema": 1129, "dennoch": 1129, "n\u00fctzlich": 1129, "haub": 1129, "schalten": [1129, 1136], "ausg\u00e4ngen": [1129, 1136], "abfragen": [1129, 1136], "eing\u00e4ngen": [1129, 1136], "sowohl": [1129, 1136], "dumm": [1129, 1136], "ereignisgesteuert": [1129, 1136], "mikrocontrollern": [1129, 1136], "aufgaben": [1129, 1136], "temperaturmessung": [1129, 1136], "expandierung": [1129, 1136], "ausgelagert": [1129, 1136, 1139], "dediziert": [1129, 1136], "angesteuert": [1129, 1136], "gegeben": [1129, 1136, 1138, 1139], "driverframework": 1129, "netzwerkstack": [1129, 1136], "einpasst": [1129, 1136], "schnittstellen": [1129, 1139], "implementationssprachen": 1129, "hardwareerfahrung": [1129, 1136], "linux kernel": 1130, "kernel driv": [1130, 1140], "wait queu": 1130, "block devic": 1130, "interrupt handl": 1130, "dose": 1130, "curios": 1130, "userpac": 1130, "massiv": 1130, "vital": 1130, "einblick": 1131, "gingen": 1131, "vieler": 1131, "demosess": 1131, "vertrackt": 1131, "entmystifiziert": 1131, "gef\u00fcrchteten": 1131, "erlernt": 1131, "inbetriebsetz": 1131, "hardwareingenieur": 1131, "angehend": 1131, "administratoren": 1131, "editieren": 1131, "bl\u00e4ttern": 1131, "textdateien": 1131, "schnittstel": 1131, "kombinationen": 1131, "kombin": 1131, "abschweifen": 1131, "programmierkenntniss": 1131, "zwingend": [1131, 1138], "make gnu": 1132, "gnu mak": 1132, "build manag": 1132, "seiner": [1132, 1139, 1143], "m\u00e4chtigen": 1132, "daran": 1132, "wendet": 1132, "interessiert": 1132, "gr\u00f6\u00dfere": 1132, "gebaut": 1132, "komplizierten": 1132, "griff": 1132, "regeln": 1132, "selbstdefiniert": 1132, "gewiss": [1132, 1137, 1139], "fertigkeit": 1132, "hemmenhofen": 1136, "gleichnamigen": 1136, "gerufen": 1136, "produktivem": 1136, "n\u00e4herzubringen": 1136, "spielekonsumenten": 1136, "kinder": 1136, "enden": 1136, "erstem": 1136, "breiteren": 1136, "drauf": 1136, "vorhandensein": 1136, "basisinfrastruktur": 1136, "vielem": 1136, "hervorragenden": 1136, "gestandenen": 1136, "obwohl": [1136, 1139], "sprachunabh\u00e4ngig": 1136, "brauchen": 1136, "computerspielen": 1136, "spielerischen": 1136, "f\u00fchren": 1136, "w\u00e4hlt": 1136, "lm": 1136, "netzwerkprotokol": [1136, 1142], "behaupt": 1137, "allen": 1137, "gro\u00dfkopferten": 1137, "kommerziellen": 1137, "systemen": 1137, "perforc": 1137, "etabliert": 1137, "erh\u00e4ltlich": 1137, "nachfolg": 1137, "abgel\u00f6st": 1137, "prim\u00e4r": 1137, "publikum": 1137, "sekund\u00e4r": 1137, "versionieren": 1137, "arbeitsweis": 1137, "bereinigung": 1137, "strategien": 1137, "programmierern": 1137, "vertrautheit": 1137, "vorteil": [1137, 1138], "umsteig": 1138, "\u00e4rgerni": 1138, "schl\u00e4gt": 1138, "ausgekl\u00fcgeltst": 1138, "systemcal": [1138, 1139, 1142], "sogenannt": 1138, "inspizieren": 1138, "grundprinzip": [1138, 1142], "sammlung": [1138, 1139], "ausf\u00fchrbar": 1138, "bedient": 1138, "handhabung": 1138, "gew\u00f6hnungsbed\u00fcrftig": 1138, "filedescriptoren": 1138, "lowlevel": 1138, "tiefen": 1139, "steigen": 1139, "alltagsprogrammier": 1139, "normalerweis": 1139, "verborgen": 1139, "hochperformant": 1139, "anwendungen": 1139, "modernen": [1139, 1141], "bertriebssystemen": 1139, "sogenanntem": 1139, "virtuellen": 1139, "speicherbereich": 1139, "instanzen": 1139, "desselben": 1139, "hauptspeich": 1139, "speicherzugriff": 1139, "schutzmechanismen": 1139, "miteinand": 1139, "kommunizieren": [1139, 1142], "semaphoren": 1139, "steinalt": 1139, "\u00fcberlebt": 1139, "keinesweg": 1139, "fehlerfrei": 1139, "benutzen": 1139, "verpasst": 1139, "beruht": 1139, "ladbar": 1139, "ressourcenschonung": 1139, "wasserdichten": 1139, "upgradepfad": 1139, "grundkenntni": [1139, 1141, 1142], "memory manag": 1140, "tcp-ip": 1140, "unverst\u00e4ndlich": 1141, "ungeachtet": 1141, "effizient": 1141, "propagiert": 1141, "soliden": 1141, "unbedacht": 1141, "handeln": 1141, "lebenszyklu": 1141, "gestartet": 1141, "versuchung": 1141, "gewalt": 1141, "terminieren": 1141, "konsequenzen": 1141, "joinabl": 1141, "detach": 1141, "eigenschaften": 1141, "racecondit": 1141, "vermeidung": 1141, "\u00fcberal": 1141, "vermutet": 1141, "integeroperationen": 1141, "kommunikationsmechanismen": 1141, "werkzeugkasten": 1141, "kommunikationskan\u00e4l": 1141, "niemal": 1141, "reihen": 1141, "traditionellen": 1141, "aufgenommen": 1141, "codebasi": 1141, "verzweigt": 1141, "ansehnlich": 1141, "realtimef\u00e4higkeiten": 1141, "priorit\u00e4ten": 1141, "f\u00fcgt": 1142, "benutzend": 1142, "programmierparadigma": 1142, "dar": 1142, "beschr\u00e4nkt": 1142, "streamverbindungen": 1142, "verbindungsaufnahm": 1142, "datagramm": 1142, "verbindungslos": 1142, "adressfamilien": 1142, "auffassung": 1142, "adress": 1142, "endpoint": 1142, "nummern": 1142, "adressen": 1142, "verbindungen": 1142, "hilfsfunktionen": 1142, "adresskonvertierung": 1142, "ipv6": 1142, "\u00e4quivalent": 1142, "ungleich": 1142, "ressourcenschonend": 1142, "pfadnamen": 1142, "bedienbar": 1142, "mittlerweis": 1142, "eingepasst": 1142, "angenehm": 1142, "umzugehen": 1142, "widmen": 1142, "verbundenen": 1142, "auszusetzen": 1142, "reagiert": 1142, "gelesen": 1142, "eventgetrieben": 1142, "knopfdruck": 1143, "abnimmt": 1143, "zahlreichen": 1143, "abgeklopft": 1143, "angst": 1143, "kaputtmachen": 1143, "konstruktiv": 1143, "einfachheit": 1143, "klarzumachen": 1143, "umzusetzen": 1143, "anstatt": 1143, "auszustatten": 1143, "gedanken": 1143, "erkannt": 1143, "entscheidung": 1143, "verbockt": 1143, "softwareentwickl": 1143, "jedwed": 1143, "stabilen": 1143, "abliefern": 1143, "entscheidungstr\u00e4g": 1143, "vorgesetzt": 1143, "schl\u00fcssige": 1143, "kan\u00e4l": 1143, "etablieren": 1143, "unittestframework": 1143, "tragen": 1143, "schwerf\u00e4llig": 1143, "halben": 1143, "\u00fcbrige": 1143, "zurechtzufinden": 1143, "vortragend": 1143, "aufgrund": 1143, "aufwarten": 1143, "beibringen": 1143, "\u00fcppigen": 1143, "verbergen": 1143, "pr\u00e4ferierten": 1143, "vortragenden": 1143}, "objects": {}, "objtypes": {}, "objnames": {}, "titleterms": {"kontakt": 0, "navig": [0, 833], "googl": 0, "map": [0, 7, 188, 193, 196, 199, 202, 218, 228, 292, 312, 508, 509, 537, 598, 599, 690, 691, 744, 890], "streetview": 0, "curriculum": [1, 73, 74], "vita": 1, "\u00fcber": [2, 173, 183, 188, 196, 204], "mich": [2, 190], "projekt": [3, 23], "au": 3, "selbstst\u00e4ndig": 3, "t\u00e4tigkeit": 3, "nichtselbstst\u00e4ndig": 3, "skill": [4, 137], "angebot": 5, "In": [5, 32, 45, 65, 145, 147, 148, 150, 180, 183, 244, 245, 247, 266, 268, 291, 298, 335, 426, 428, 434, 435, 496, 501, 503, 544, 548, 559, 560, 561, 562, 563, 564, 589, 646, 650, 654, 684, 685, 691, 704, 751, 800, 801, 808, 864, 914, 947, 949, 963, 970, 1011, 1125], "hous": 5, "schulungen": [5, 1119], "zu": [5, 23, 166, 183], "meiner": 5, "person": [5, 241, 455, 654], "schwerpunk": 5, "c": [5, 7, 67, 68, 69, 70, 71, 97, 107, 108, 110, 111, 113, 137, 151, 166, 167, 183, 193, 201, 202, 218, 243, 244, 245, 247, 248, 256, 265, 267, 298, 299, 300, 320, 326, 335, 344, 384, 385, 422, 429, 434, 441, 448, 490, 496, 507, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 544, 546, 552, 553, 557, 558, 559, 571, 577, 579, 624, 639, 641, 642, 643, 646, 647, 679, 680, 684, 691, 692, 700, 709, 714, 725, 873, 893, 911, 914, 1016, 1122, 1123, 1124, 1125, 1126, 1128], "python": [5, 8, 11, 59, 60, 62, 63, 90, 95, 133, 160, 163, 172, 173, 175, 176, 177, 179, 181, 183, 186, 188, 191, 197, 198, 200, 203, 205, 207, 210, 211, 212, 213, 214, 216, 217, 219, 222, 223, 226, 229, 231, 234, 236, 237, 238, 239, 240, 242, 244, 245, 247, 249, 250, 251, 252, 253, 254, 259, 261, 262, 266, 268, 269, 270, 271, 272, 273, 274, 275, 278, 279, 280, 281, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 301, 317, 320, 322, 335, 642, 670, 684, 691, 873, 875, 972, 975, 979, 994, 995, 996, 998, 1000, 1002, 1010, 1021, 1024, 1069, 1070, 1071, 1084, 1085, 1087, 1097, 1099, 1100, 1101, 1102, 1133, 1134], "linux": [5, 79, 80, 81, 97, 110, 111, 113, 140, 145, 153, 155, 156, 158, 165, 180, 182, 187, 192, 246, 255, 256, 276, 277, 320, 322, 335, 337, 750, 802, 803, 806, 812, 869, 871, 875, 876, 877, 879, 892, 910, 933, 1120, 1130, 1131, 1138, 1139, 1140, 1141, 1142], "schulungsstil": 5, "preis": 5, "cours": [6, 11, 12, 59, 60, 62, 63, 78, 133, 135, 156, 192, 201, 245, 247, 255, 284, 287, 319, 425, 1070, 1127, 1130], "materi": [6, 24, 28, 30, 163, 165, 180, 201, 316, 331, 332, 336, 425, 1069, 1070, 1091], "einleitung": [7, 193], "datatyp": [7, 183, 188, 190, 193, 196, 205, 209, 212, 215, 220, 222, 228, 232, 235, 237, 238, 250, 252, 253, 259, 260, 262, 270, 272, 273, 274, 278, 279, 280, 290, 292, 294, 312, 340, 390, 393, 973, 1002, 1003, 1007], "number": [7, 193, 196, 199, 220, 232, 235, 312, 670, 729, 736, 737, 900, 974, 990, 993, 1002, 1010, 1011, 1032, 1035, 1045, 1046, 1088, 1092, 1093, 1117], "integ": [7, 173, 183, 188, 193, 196, 220, 222, 232, 235, 241, 253, 260, 280, 292, 312, 358, 405, 410, 626, 981, 1002, 1011], "string": [7, 159, 160, 166, 173, 183, 190, 193, 196, 199, 204, 205, 209, 212, 215, 220, 222, 225, 228, 232, 235, 237, 238, 241, 250, 253, 257, 260, 274, 280, 292, 309, 311, 312, 339, 352, 353, 359, 365, 429, 607, 608, 609, 622, 653, 654, 1002, 1015, 1016, 1017, 1052, 1095, 1098], "compound": [7, 183, 193, 205, 209, 212, 215, 220, 222, 228, 232, 235, 238, 250, 270, 274, 280, 292, 393, 1003], "list": [7, 11, 23, 159, 160, 173, 183, 190, 193, 196, 199, 204, 205, 209, 212, 215, 220, 222, 228, 232, 235, 238, 250, 253, 260, 270, 274, 280, 292, 398, 429, 496, 520, 537, 551, 594, 642, 655, 692, 734, 761, 762, 763, 785, 855, 967, 970, 973, 974, 983, 1003, 1011, 1018, 1047, 1048, 1098, 1100], "arrai": [7, 161, 183, 193, 339, 348, 352, 390, 392, 402, 415, 525, 577, 579, 587, 631, 646, 657, 696], "javascript": [7, 193, 232], "std": [7, 107, 193, 202, 218, 244, 245, 247, 298, 444, 503, 508, 509, 519, 537, 560, 561, 562, 563, 564, 572, 578, 579, 580, 581, 591, 598, 599, 609, 622, 635, 638, 642, 645, 647, 654, 690, 691, 692, 696, 698, 701, 702, 703, 705, 706, 711, 712, 713, 714, 716, 717, 718, 721, 724], "vector": [7, 107, 193, 503, 519, 537, 544, 560, 578, 579, 580, 581, 595, 638, 647, 692, 926], "java": [7, 193], "dictionari": [7, 159, 173, 183, 188, 190, 193, 196, 204, 205, 209, 212, 215, 220, 222, 225, 228, 232, 235, 238, 241, 250, 253, 260, 270, 274, 280, 292, 312, 967, 971, 984, 1003, 1019, 1039, 1066], "kei": [7, 150, 193, 241, 312, 601, 602, 833, 884, 886], "valu": [7, 63, 178, 193, 264, 265, 312, 350, 406, 563, 911, 933, 1004], "set": [7, 38, 63, 178, 183, 188, 193, 196, 204, 205, 209, 212, 215, 220, 222, 228, 232, 235, 238, 250, 253, 260, 270, 274, 280, 292, 829, 830, 945, 967, 1003, 1020, 1058, 1083, 1093], "mathematisch": [7, 193], "mengen": [7, 183, 193], "while": [7, 160, 173, 183, 193, 212, 220, 222, 225, 228, 235, 238, 260, 375, 376, 771, 776, 777, 1006, 1032, 1056], "function": [7, 43, 147, 160, 178, 183, 193, 196, 199, 202, 205, 209, 212, 220, 222, 228, 232, 237, 238, 241, 244, 245, 247, 249, 253, 260, 266, 274, 284, 285, 287, 290, 291, 292, 294, 298, 317, 350, 352, 357, 384, 386, 388, 389, 394, 426, 427, 486, 520, 544, 553, 558, 560, 565, 569, 585, 642, 649, 652, 653, 654, 655, 664, 694, 706, 707, 734, 735, 797, 891, 893, 931, 966, 968, 969, 971, 973, 974, 993, 1010, 1012, 1013, 1014, 1022, 1044, 1046, 1050, 1053, 1061, 1063, 1095], "basic": [8, 63, 70, 90, 139, 151, 160, 172, 177, 179, 180, 181, 182, 186, 187, 191, 192, 201, 210, 213, 216, 223, 229, 234, 237, 240, 246, 252, 255, 259, 262, 269, 272, 273, 274, 276, 277, 278, 279, 280, 281, 284, 287, 290, 291, 292, 294, 312, 335, 380, 384, 387, 393, 420, 427, 443, 444, 498, 501, 566, 571, 574, 577, 578, 580, 584, 587, 598, 604, 613, 649, 657, 691, 696, 700, 701, 702, 703, 724, 736, 737, 738, 799, 802, 803, 806, 816, 855, 866, 871, 880, 892, 899, 907, 915, 947, 969, 970, 1023, 1025, 1059, 1078, 1089, 1090, 1111, 1112, 1113, 1131, 1134], "2021": [8, 11, 112, 184, 186, 189, 191, 192, 194, 197, 200, 201, 202, 203, 207, 210, 212, 213, 215, 216, 218, 309, 310, 317, 320, 321, 322, 323, 324, 325, 326, 335], "xx": 8, "yy": 8, "train": [8, 24, 25, 26, 27, 28, 133, 137, 147, 156, 161, 176, 177, 179, 180, 181, 182, 184, 186, 187, 191, 194, 197, 200, 201, 202, 203, 207, 210, 219, 223, 226, 229, 231, 234, 237, 240, 249, 252, 259, 262, 336, 1070, 1076], "inform": [8, 39, 125, 135, 147, 172, 175, 176, 177, 179, 180, 181, 182, 184, 186, 187, 191, 194, 197, 200, 201, 202, 203, 207, 210, 219, 223, 226, 229, 231, 234, 237, 240, 249, 252, 259, 262, 308, 317, 420, 704, 1000, 1070], "\u00fcberblick": [8, 184, 194, 203, 219, 231, 1124], "log": [8, 105, 124, 141, 176, 177, 180, 181, 189, 191, 192, 194, 197, 201, 203, 207, 210, 219, 231, 240, 317, 330, 331, 800, 801, 808], "tag": [8, 167, 186, 190, 194, 197, 203, 219, 231, 232], "1": [8, 19, 23, 37, 73, 78, 97, 107, 113, 142, 145, 157, 165, 167, 172, 176, 177, 179, 180, 181, 183, 184, 186, 191, 192, 194, 197, 201, 202, 203, 207, 210, 213, 216, 219, 223, 231, 256, 259, 262, 265, 266, 267, 268, 269, 273, 277, 279, 284, 290, 291, 294, 316, 318, 319, 326, 333, 335, 338, 339, 340, 342, 346, 350, 359, 361, 362, 363, 364, 368, 369, 372, 375, 381, 382, 383, 384, 385, 388, 390, 394, 398, 400, 402, 405, 406, 407, 408, 410, 411, 413, 414, 420, 434, 444, 447, 449, 485, 547, 549, 556, 567, 570, 577, 579, 660, 665, 706, 711, 717, 720, 721, 732, 737, 744, 755, 765, 833, 872, 873, 879, 888, 902, 915, 916, 918, 920, 922, 923, 934, 941, 945, 948, 949, 965, 973, 978, 999, 1001, 1002, 1008, 1011, 1016, 1017, 1019, 1020, 1021, 1022, 1084, 1095, 1096, 1098, 1120], "2": [8, 19, 23, 37, 74, 78, 97, 107, 113, 142, 145, 167, 172, 173, 176, 177, 179, 180, 181, 183, 186, 190, 191, 192, 194, 197, 201, 202, 203, 207, 210, 212, 213, 216, 219, 223, 231, 256, 259, 262, 265, 266, 267, 268, 269, 273, 277, 284, 290, 291, 294, 331, 333, 335, 338, 339, 340, 342, 346, 350, 359, 361, 362, 363, 364, 368, 369, 372, 375, 381, 382, 384, 385, 388, 390, 394, 398, 400, 402, 405, 406, 407, 408, 410, 411, 413, 414, 420, 435, 444, 447, 449, 485, 534, 547, 549, 556, 567, 570, 577, 579, 661, 666, 706, 711, 717, 720, 721, 737, 744, 765, 833, 872, 873, 879, 888, 902, 915, 916, 918, 920, 922, 923, 934, 941, 945, 948, 949, 961, 965, 973, 978, 999, 1001, 1002, 1008, 1010, 1011, 1017, 1019, 1020, 1021, 1022, 1080, 1082, 1083, 1084, 1095, 1096, 1098], "live": [8, 42, 44, 45, 159, 162, 184, 194, 197, 207, 256, 542, 582, 583, 585, 586, 589, 590, 591, 603, 642, 653, 686, 687, 714, 716, 804, 830, 894, 912], "hack": [8, 42, 44, 45, 159, 162, 184, 194, 197, 207, 256, 259, 263, 266, 269, 542, 582, 583, 585, 586, 589, 590, 591, 603, 642, 653, 686, 687, 714, 716, 831, 912], "jupyt": [8, 9, 40, 184, 185, 189, 190, 191, 194, 195, 197, 198, 207, 208, 210, 211, 213, 214, 217, 219, 221, 224, 227, 230, 233, 236, 238, 239, 242, 251, 254, 257, 261, 270, 271, 275, 281, 286, 289, 292, 293, 296, 297, 312, 1076, 1077], "notebook": [8, 9, 40, 179, 184, 185, 189, 190, 191, 194, 195, 197, 198, 200, 207, 208, 210, 211, 213, 214, 215, 217, 219, 221, 224, 227, 230, 233, 236, 238, 239, 242, 251, 254, 257, 261, 270, 271, 275, 281, 286, 289, 292, 293, 296, 297, 312, 317, 1074, 1076, 1077], "link": [8, 23, 39, 124, 143, 161, 172, 175, 177, 179, 181, 184, 186, 191, 192, 194, 203, 207, 210, 213, 219, 226, 237, 240, 273, 279, 322, 324, 398, 400, 649, 663, 670, 688, 695, 699, 750, 761, 762, 812, 833, 854, 872, 879, 887, 963, 964, 995, 1025, 1026, 1071, 1087, 1089, 1090, 1092, 1093, 1094, 1095, 1103, 1108], "programmierung": [9, 11, 159, 184, 185, 194, 195, 203, 219, 221, 231, 233, 335], "grundlagen": [9, 11, 172, 183, 184, 185, 194, 195, 197, 198, 203, 207, 211, 214, 217, 219, 221, 231, 233, 236, 239, 242, 251, 254, 275, 335], "detail": [10, 78, 192, 196, 228, 235, 267, 312, 334, 410, 488, 578, 1001], "content": [11, 24, 37, 135, 137, 139, 140, 141, 142, 143, 144, 145, 146, 155, 164, 168, 169, 199, 319, 423, 525, 528, 534, 537, 543, 625, 702, 802, 822, 835, 841, 847, 850, 867, 875, 876, 883, 892, 908, 910, 912, 927, 937, 940, 954, 974, 1029, 1030, 1034, 1043, 1057, 1064, 1112, 1114, 1117, 1125, 1128, 1130], "anhand": [11, 183, 203, 219, 231, 335, 1131], "von": [11, 23, 154, 159, 163, 166, 173, 183, 190, 203, 204, 219, 231, 312, 335, 1131], "12": [11, 23, 45, 163, 182, 183, 187, 194, 202, 215, 216, 218, 249, 317, 322, 326, 328, 335, 1098], "und": [11, 23, 153, 157, 173, 183, 184, 188, 190, 194, 196, 199, 203, 219, 222, 228, 231, 235, 241, 318, 335, 360, 369, 1124, 1135], "13": [11, 23, 41, 45, 150, 172, 183, 184, 194, 247, 256, 259, 260, 262, 335], "4": [11, 23, 107, 142, 167, 176, 179, 183, 191, 192, 194, 197, 201, 202, 219, 231, 256, 326, 335, 340, 398, 402, 408, 444, 447, 549, 667, 973, 1098], "templat": [12, 201, 218, 267, 298, 507, 520, 521, 522, 523, 539, 540, 541, 569, 570, 571, 577, 610, 656, 659, 664, 666, 694], "descript": [12, 59, 62, 355, 370, 379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 455, 542, 550, 565, 568, 571, 607, 612, 621, 623, 626, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 640, 682, 683, 707, 715, 719, 723, 725, 867, 875, 876, 930], "sidebar": [12, 37], "metadata": [12, 244, 245, 247, 855], "about": [13, 107, 137, 156, 215, 220, 232, 250, 253, 259, 263, 280, 287, 437, 647, 684, 862, 963, 1015, 1018, 1019, 1020], "thi": [13, 32, 37, 114, 115, 117, 119, 124, 142, 147, 148, 150, 151, 161, 170, 556, 570, 685, 792, 871, 894, 947, 964, 971, 973], "site": [13, 28, 32, 124, 144, 146, 170], "licens": 13, "gplv3": 13, "github": [13, 120, 144, 146, 176, 177, 189, 197, 317, 485, 499, 1071], "sphinx": [13, 40, 66, 146], "instal": [13, 61, 143, 147, 151, 155, 168, 169, 172, 197, 201, 202, 282, 317, 322, 337, 432, 748, 890, 945, 956, 961, 962, 995, 1025, 1026, 1058, 1071, 1087, 1105, 1107, 1112, 1114, 1127], "instruct": [13, 401, 711, 918, 948, 965], "pip": [13, 273], "venv": [13, 273], "work": [13, 17, 65, 97, 113, 123, 128, 142, 176, 207, 245, 247, 264, 265, 266, 267, 324, 418, 419, 420, 499, 570, 724, 792, 793, 829, 832, 836, 961], "progress": [13, 17, 123], "more": [13, 142, 160, 173, 212, 215, 220, 228, 232, 235, 237, 249, 250, 252, 253, 256, 258, 259, 262, 268, 269, 272, 273, 278, 279, 280, 287, 290, 294, 317, 340, 346, 369, 385, 387, 401, 411, 427, 437, 439, 549, 559, 562, 569, 582, 588, 642, 684, 685, 689, 706, 781, 810, 811, 812, 816, 817, 862, 889, 931, 968, 970, 972, 1015, 1018, 1019, 1020, 1070, 1079, 1105, 1117], "opentrain": [14, 23], "draft": [15, 867, 1024], "topic": [15, 21, 73, 74, 98, 99, 101, 102, 103, 104, 136, 172, 176, 179, 200, 201, 202, 213, 218, 237, 240, 256, 259, 262, 265, 266, 290, 294, 298, 299, 307, 321, 325, 326, 355, 370, 379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 448, 491, 492, 493, 494, 495, 496, 497, 500, 542, 550, 565, 568, 571, 587, 593, 597, 605, 610, 612, 615, 621, 639, 640, 644, 651, 658, 669, 682, 683, 693, 698, 707, 715, 719, 723, 725, 726, 727, 750, 870, 885, 903, 905, 924, 930, 951, 957, 958, 973, 978, 986, 1024, 1073, 1077, 1081, 1085, 1087, 1091, 1104, 1110], "miscellan": [16, 122, 133, 137, 156, 160, 180, 209, 220, 222, 228, 238, 244, 245, 249, 253, 256, 265, 268, 269, 274, 279, 280, 290, 291, 294, 298, 520, 542, 621, 625, 656, 719, 909, 920, 922, 1017, 1085, 1098], "s5": [17, 18, 137], "integr": [17, 646, 662], "web": [17, 93, 94, 138], "slide": [17, 18, 30, 45, 160, 320, 332, 941, 945], "implement": [17, 114, 115, 117, 119, 228, 291, 303, 309, 449, 456, 466, 471, 481, 482, 483, 484, 488, 496, 501, 502, 546, 547, 552, 558, 560, 618, 642, 653, 731, 734, 753, 789, 968, 974, 990, 1049], "note": [17, 37, 61, 122, 155, 303, 442, 818], "todo": [17, 137, 166, 169, 180, 186, 304, 305, 306, 323, 425, 520, 521, 524, 527, 530, 533, 536, 539, 730, 734, 742, 774, 936, 939, 943, 1086, 1111, 1116], "test": [18, 37, 42, 43, 44, 45, 50, 71, 114, 115, 117, 119, 151, 172, 202, 226, 237, 240, 249, 258, 259, 262, 263, 264, 268, 269, 282, 284, 287, 290, 291, 294, 325, 331, 335, 426, 440, 449, 469, 485, 499, 501, 502, 562, 734, 753, 786, 878, 907, 959, 962, 1026, 1059, 1066, 1067, 1068, 1076, 1105, 1106, 1110, 1112, 1114, 1117, 1127, 1143], "level": [19, 414], "head": [19, 37, 761, 864, 1079], "imag": [19, 161, 180, 961], "screencast": [20, 134], "written": [21, 113, 545, 548], "new": [21, 136, 202, 218, 244, 245, 247, 298, 335, 488, 525, 641, 642, 682, 718, 753, 786, 1088], "write": [21, 42, 50, 58, 139, 488, 525, 552, 664, 679, 702, 731, 899, 906, 991, 1021, 1027, 1096], "netide": [22, 23], "f\u00f6rderantrag": [22, 23], "daten": [23, 196, 204], "antragsteller_in": 23, "allgemein": 23, "projektnam": 23, "untertitel": 23, "3": [23, 97, 107, 113, 120, 142, 167, 176, 177, 179, 180, 181, 182, 183, 186, 191, 192, 197, 201, 202, 203, 205, 207, 212, 213, 216, 219, 223, 231, 238, 256, 259, 262, 265, 267, 268, 269, 273, 277, 279, 290, 291, 292, 294, 335, 340, 390, 394, 398, 402, 408, 410, 411, 413, 414, 444, 447, 449, 485, 549, 662, 721, 902, 918, 922, 923, 973, 1002, 1010, 1016, 1021, 1098], "allgemeinverst\u00e4ndlich": 23, "kurzbeschreibung": 23, "de": [23, 249, 335, 799], "anschlussf\u00f6rderung": 23, "die": [23, 53, 148, 166, 204, 1132], "besonder": [23, 183], "bedeutung": 23, "ihr": 23, "f\u00fcr": [23, 167, 173, 183, 335, 1123], "da": [23, 163, 173, 190, 199, 232], "internet": 23, "internetnutzung": 23, "IN": 23, "\u00f6sterreich": 23, "zielgrupp": 23, "projektziel": 23, "5": [23, 142, 160, 167, 172, 173, 175, 183, 201, 202, 204, 256, 326, 335, 398, 408, 444, 447, 668, 800, 801, 1098], "l\u00f6sung": [23, 173], "beschreibung": 23, "der": [23, 183, 188, 204, 318, 335, 1120], "probleml\u00f6sung": 23, "wesentlich": 23, "element": [23, 183, 220, 238, 240, 503, 505, 506, 510, 598, 600, 601, 1007], "ein": [23, 173, 204, 1131, 1136], "nachhaltigen": 23, "impact": 23, "nach": [23, 240], "projektend": 23, "6": [23, 120, 183, 184, 204, 205, 238, 335, 398, 408, 444, 447, 1016, 1135], "umfeldanalys": 23, "wa": [23, 172, 188, 631], "ist": [23, 173], "stand": 23, "technik": 23, "method": [23, 196, 199, 209, 220, 222, 225, 228, 238, 253, 265, 274, 280, 292, 309, 311, 319, 498, 534, 546, 553, 554, 555, 558, 560, 562, 565, 617, 620, 628, 632, 700, 701, 702, 703, 704, 732, 767, 769, 783, 988, 990, 1016, 1017, 1018, 1106], "wissen": 23, "welch": 23, "ander": [23, 159, 318], "l\u00f6sungen": 23, "vorhaben": 23, "den": [23, 148, 188, 204], "genannten": 23, "problemen": 23, "gibt": [23, 183], "e": [23, 417, 701], "schon": 23, "7": [23, 176, 183, 184, 204, 335, 398, 408, 1135], "alleinstellungsmerkm": 23, "8": [23, 183, 184, 203, 204, 335, 398, 408, 879, 1084, 1135], "projektergebniss": 23, "erforderlich": 23, "lizenzen": 23, "dritter": 23, "9": [23, 176, 177, 183, 184, 204, 335, 398, 408, 973, 1120, 1135], "erfolgreich": 23, "projektabschluss": 23, "sonstigen": 23, "aktivit\u00e4ten": 23, "im": [23, 183, 209, 222, 235, 238, 253, 260, 274, 280, 292, 335, 1011], "projektbereich": 23, "angaben": 23, "zur": [23, 154, 173, 183], "fachlichen": 23, "eignung": 23, "mitarbeiterinnen": 23, "projektkernteam": 23, "erfahrung": 23, "vorgesehenen": 23, "projektleiterin": 23, "zum": [23, 159, 204], "maxim": 23, "min\u00fctigen": 23, "video": [23, 24, 31, 191, 249, 279, 650], "risiken": 23, "erfolgskriterien": 23, "am": [23, 173, 232, 335], "angestrebt": 23, "jahr": 23, "10": [23, 45, 99, 100, 120, 126, 157, 160, 165, 176, 179, 183, 218, 219, 246, 247, 248, 249, 250, 264, 287, 288, 290, 291, 293, 317, 321, 322, 323, 327, 335, 398, 505, 800, 801], "umsetzung": 23, "einj\u00e4hrig": 23, "wichtig": 23, "partner_innen": 23, "arbeitsschwerpunkt": 23, "ressourcen": 23, "nutzer_innen": 23, "kommunikationskan\u00e4l": 23, "11": [23, 45, 120, 158, 163, 181, 182, 183, 212, 213, 218, 243, 247, 249, 252, 253, 287, 294, 295, 296, 297, 324, 325, 335, 398, 520, 643, 646, 679, 680, 691, 700, 725], "projekttermin": 23, "termin": [23, 804, 916, 979], "projektstart": 23, "kosten": 23, "finanzierung": 23, "projektkosten": 23, "personalkosten": 23, "sonstig": 23, "gesamtkosten": 23, "wir": [23, 188, 204], "beantragen": 23, "folgend": 23, "f\u00f6rderung": 23, "restlichen": 23, "werden": [23, 183], "finanziert": 23, "durch": [23, 173], "sonderprei": 23, "14": [23, 45, 163, 172, 183, 184, 187, 201, 243, 335, 1098], "erg\u00e4nzend": 23, "transparenz": 23, "mehrfachantr\u00e4g": 23, "nutzung": 23, "whataventur": 23, "plattform": 23, "eingereicht": 23, "teil": 23, "einer": [23, 163, 172, 183, 335], "schulischen": 23, "verpflichtung": 23, "z": 23, "b": 23, "htl": 23, "diplomarbeit": 23, "wie": [23, 190, 196], "haben": [23, 173], "sie": [23, 173], "erfahren": 23, "mehrfachnennungen": 23, "m\u00f6glich": 23, "16": [23, 202, 226, 240, 252, 253, 335, 973, 1120], "datenschutz": 23, "screenplai": [24, 63, 302, 426, 522, 525, 528, 531, 534, 537, 540, 572, 573, 574, 575, 576, 579, 580, 581, 599, 600, 601, 602, 728, 731, 736, 741, 746, 748, 786, 789, 792, 937, 940, 944, 1012, 1100, 1107, 1112, 1114, 1117], "The": [24, 39, 43, 45, 61, 100, 114, 138, 151, 183, 199, 202, 205, 212, 229, 238, 241, 256, 264, 266, 268, 274, 277, 284, 287, 290, 291, 294, 298, 338, 346, 347, 384, 385, 400, 407, 408, 417, 418, 422, 423, 432, 500, 501, 553, 577, 598, 599, 621, 641, 642, 650, 655, 657, 659, 684, 702, 705, 716, 769, 799, 808, 809, 816, 833, 836, 847, 850, 853, 855, 864, 866, 870, 886, 888, 890, 891, 893, 899, 907, 911, 926, 928, 935, 947, 949, 950, 959, 960, 968, 969, 971, 975, 979, 987, 990, 994, 996, 998, 1005, 1010, 1016, 1058, 1079, 1086, 1095, 1106, 1127], "problem": [24, 382, 404, 427, 428, 436, 442, 443, 444, 447, 453, 500, 501, 643, 655, 659, 679, 680, 689, 705, 729, 763, 810, 829, 888, 890, 894, 949, 964, 965, 969, 983, 1078, 1101, 1108], "And": [24, 42, 61, 63, 151, 247, 250, 253, 256, 259, 264, 265, 266, 267, 268, 269, 274, 277, 279, 282, 284, 287, 290, 291, 294, 298, 358, 402, 426, 427, 429, 432, 433, 438, 439, 440, 446, 449, 455, 463, 464, 469, 477, 483, 498, 545, 546, 552, 557, 573, 577, 578, 579, 581, 599, 614, 615, 619, 622, 647, 653, 655, 657, 670, 687, 690, 691, 692, 694, 695, 700, 712, 714, 716, 721, 737, 795, 799, 800, 801, 805, 808, 814, 816, 852, 864, 866, 871, 875, 881, 882, 893, 906, 928, 956, 957, 959, 961, 962, 963, 964, 966, 971, 975, 976, 979, 983, 984, 985, 990, 991, 992, 993, 1057, 1058, 1059, 1067, 1079, 1084, 1089, 1090, 1092, 1093, 1094, 1105, 1127], "me": [24, 144, 905], "open": [24, 128, 153, 269, 452, 731, 732, 896, 899, 902, 904, 941, 968, 1021], "sourc": [24, 40, 143, 153, 169, 427, 445, 729, 732, 734, 737, 739, 742, 746, 751, 753, 763, 765, 773, 776, 781, 900, 949, 1026, 1084], "walk": [24, 256, 317], "through": [24, 256, 317], "us": [25, 26, 27, 28, 29, 30, 31, 32, 38, 42, 141, 145, 147, 151, 161, 162, 168, 170, 180, 199, 201, 202, 215, 218, 343, 345, 348, 363, 378, 400, 410, 418, 419, 428, 430, 444, 447, 464, 485, 585, 609, 630, 638, 650, 654, 655, 691, 705, 716, 865, 877, 878, 879, 915, 931, 948, 949, 959, 960, 966, 968, 971, 974, 984, 993, 1100, 1106, 1107], "case": [25, 26, 27, 28, 29, 30, 201, 374, 378, 449, 511, 513, 516, 690, 691, 900, 904, 905, 906, 958, 966, 993, 1106, 1112], "custom": [25, 128, 131, 144, 307, 546, 547, 561, 567, 591, 645, 1093, 1095, 1112], "subtract": [25, 544], "known": [25, 139], "calcul": [26, 199, 367, 446, 991], "minimum": [26, 751], "durat": 26, "trainer": [27, 155], "editor": [27, 192], "end": [27, 656], "user": [27, 42, 46, 202, 204, 335, 548, 627, 632, 633, 634, 635, 636, 637, 737, 805, 806, 808, 809, 810, 818, 819, 830, 890, 970, 1060, 1062, 1064, 1065, 1067, 1100], "audienc": [27, 1127], "from": [28, 29, 31, 38, 40, 42, 43, 45, 57, 100, 126, 132, 151, 161, 169, 170, 178, 218, 228, 256, 259, 264, 273, 291, 335, 353, 375, 381, 423, 426, 569, 572, 613, 622, 626, 652, 653, 692, 741, 746, 787, 792, 877, 889, 907, 931, 940, 947, 989, 1026, 1066, 1070, 1071, 1076, 1078, 1120], "other": [28, 38, 52, 199, 268, 280, 319, 650, 751, 773, 818, 978], "menu": 29, "choos": 29, "show": 30, "plain": [30, 585, 613, 614, 642], "text": [30, 277, 384, 860, 863, 866, 1021, 1096], "file": [30, 31, 42, 48, 161, 163, 199, 209, 212, 228, 235, 237, 238, 252, 256, 260, 270, 272, 273, 274, 277, 278, 279, 308, 309, 324, 382, 426, 428, 434, 449, 528, 559, 731, 732, 733, 741, 773, 800, 801, 804, 822, 827, 828, 834, 835, 838, 839, 840, 848, 852, 855, 856, 860, 863, 865, 881, 889, 890, 894, 895, 899, 900, 901, 902, 903, 904, 905, 906, 908, 909, 913, 937, 941, 947, 948, 962, 968, 997, 1021, 1026, 1027, 1028, 1049, 1051, 1060, 1062, 1079, 1112], "send": [31, 941, 945], "A": [31, 45, 63, 117, 140, 151, 218, 244, 245, 247, 259, 263, 264, 265, 266, 268, 273, 298, 335, 341, 350, 380, 407, 425, 426, 429, 443, 463, 477, 485, 488, 498, 503, 518, 544, 559, 560, 569, 578, 608, 619, 620, 633, 642, 647, 655, 684, 687, 700, 703, 705, 800, 801, 804, 818, 829, 852, 856, 889, 891, 895, 896, 897, 900, 903, 904, 905, 906, 913, 926, 931, 934, 947, 960, 961, 964, 965, 966, 969, 974, 993, 996, 1058, 1084, 1089, 1092, 1095, 1096, 1105], "v4l": 31, "camera": 31, "devic": [31, 63, 81, 97, 113, 728, 729, 730, 731, 732, 733, 736, 737, 738, 739, 740, 741, 763, 767, 768, 769, 804, 877, 879, 937], "output": [31, 50, 161, 173, 308, 440, 623, 815, 973, 1076, 1112], "over": [31, 212, 220, 222, 724, 879, 1009, 1010], "ssh": [31, 192, 256, 277, 314, 322, 880, 883, 884, 885, 886, 887, 888, 889, 890], "captur": [31, 684, 685, 687], "To": [31, 37, 39, 42, 44, 53, 137, 235, 264, 448, 449, 464, 485, 611, 622, 642, 646, 655, 657, 659, 670, 684, 692, 700, 702, 704, 705, 716, 744, 785, 787, 800, 801, 881, 882, 889, 949, 959, 961, 966, 968, 969, 989, 990, 1067, 1088, 1089, 1095], "plai": [31, 63, 670], "remot": [31, 97, 113, 122, 453, 466, 480, 800, 801, 881, 882, 886, 889, 890], "system": [31, 142, 215, 256, 277, 324, 335, 356, 420, 617, 708, 822, 828, 890, 892, 893, 894, 899, 910, 928, 931, 934, 1000, 1100, 1120, 1138, 1139, 1140, 1141, 1142], "emoji": 32, "code": [32, 41, 43, 45, 107, 170, 171, 173, 174, 197, 213, 266, 268, 269, 282, 335, 404, 414, 424, 425, 426, 428, 434, 435, 436, 441, 445, 521, 524, 527, 530, 533, 536, 539, 569, 654, 702, 734, 735, 739, 740, 741, 742, 743, 753, 754, 763, 764, 775, 776, 777, 781, 782, 905, 936, 939, 943, 963, 964, 965, 1066, 1067, 1068, 1071, 1074, 1077, 1084, 1097, 1107, 1111, 1116, 1127], "sphinxemoji": 32, "setup": [32, 63, 78, 109, 143, 147, 169, 176, 177, 179, 180, 181, 202, 252, 258, 259, 262, 265, 267, 269, 272, 273, 277, 278, 279, 440, 498, 500, 870, 878, 886, 897, 961, 962, 995, 1058, 1059, 1107, 1117], "most": [32, 38, 63, 657, 1100], "here": [32, 141, 449, 889], "all": [32, 38, 53, 63, 196, 199, 218, 264, 294, 335, 616, 642, 650, 685, 705, 792, 810, 947, 963, 981, 1069], "recip": 33, "isoamsa": 34, "txt": [34, 35, 36, 38], "ad": [34, 35, 36, 144, 963, 1088, 1095], "mathemat": [34, 35, 36], "symbol": [34, 35, 36, 344, 359, 420, 854, 947], "arrow": 34, "isoamsr": 35, "relat": [35, 156, 259, 262, 362], "isonum": 36, "binari": [36, 464, 1021], "oper": [36, 160, 173, 183, 196, 212, 215, 218, 225, 228, 232, 235, 249, 264, 284, 312, 346, 361, 362, 363, 366, 367, 369, 370, 375, 387, 498, 520, 545, 546, 552, 560, 600, 700, 708, 714, 731, 732, 733, 815, 894, 931, 990, 1000, 1002, 1004, 1020, 1090, 1098], "layout": [37, 228, 393], "page": [37, 94, 144, 146, 744, 833, 865, 893], "admonit": 37, "i": [37, 45, 141, 142, 159, 199, 209, 215, 220, 225, 228, 235, 237, 238, 270, 274, 277, 279, 309, 321, 346, 372, 419, 425, 443, 498, 517, 544, 551, 613, 619, 620, 655, 657, 680, 684, 689, 692, 701, 705, 709, 713, 746, 757, 778, 793, 804, 808, 809, 814, 815, 816, 829, 839, 852, 879, 889, 890, 891, 894, 895, 896, 897, 898, 899, 902, 904, 906, 908, 909, 926, 929, 947, 964, 966, 971, 1021, 1078, 1092, 1098, 1117], "an": [37, 114, 144, 215, 268, 283, 290, 294, 313, 317, 335, 431, 436, 546, 655, 670, 734, 852, 878, 889, 894, 931, 964, 975, 984, 1011, 1013, 1107, 1125], "tip": 37, "hint": [37, 466, 496], "import": [37, 151, 159, 199, 209, 218, 317, 551, 945, 970, 978, 1086], "attent": [37, 1013], "caution": [37, 620], "error": [37, 43, 151, 215, 268, 269, 290, 291, 294, 385, 410, 444, 566, 576, 577, 661, 664, 815, 879, 891, 900, 904, 905, 906, 983, 1039], "danger": [37, 352, 713, 830], "blech": 37, "titl": 37, "blah": 37, "kursdaten": [37, 1121, 1122, 1123, 1124, 1129, 1131, 1132, 1136, 1137, 1138, 1139, 1141, 1142, 1143], "local": [37, 39, 97, 113, 122, 160, 183, 383, 415, 432, 453, 886, 889, 922, 949, 1012, 1107], "bleh": 37, "do": [37, 42, 137, 199, 241, 376, 413, 432, 443, 642, 763, 785, 800, 801, 816, 947], "mmlalia": 38, "mathml": 38, "alias": 38, "entiti": [38, 916], "restructuredtext": 39, "cheat": [39, 317], "sheet": [39, 317], "further": [39, 125, 164, 200, 201, 223, 308, 317, 414, 650, 704, 1000], "document": [39, 146, 196, 212, 292, 312, 582, 583, 584, 585, 586, 588, 589, 590, 591, 594, 595, 598, 603, 737, 753, 755, 759, 761, 783, 787, 790, 800, 801, 804, 808, 815, 816, 817, 818, 833, 834, 835, 836, 852, 855, 856, 889, 891, 893, 895, 896, 897, 899, 902, 903, 904, 905, 906, 909, 947, 948, 999, 1023, 1033, 1096, 1105, 1112], "extern": [39, 282, 303, 381, 430, 559, 748, 749, 878, 964, 1034, 1127], "section": 39, "refer": [39, 137, 140, 183, 209, 212, 215, 222, 235, 238, 244, 245, 247, 250, 253, 257, 260, 265, 268, 274, 280, 292, 350, 388, 415, 557, 651, 654, 655, 657, 684, 685, 687, 696, 701, 703, 704, 721, 722, 780, 1011], "That": [39, 241, 244, 245, 247, 264, 291, 298, 389, 447, 544, 551, 642, 645, 655, 684, 702, 703, 773, 808, 879, 889, 894, 895, 898, 966, 993, 1114], "we": [39, 42, 45, 53, 424, 426, 763, 792, 959, 1112], "anoth": [39, 228, 424, 931, 963], "contain": [39, 218, 238, 264, 267, 520, 536, 537, 538, 577, 578, 592, 593, 596, 597, 598, 642, 646, 694, 761, 961], "abov": 39, "footnot": 39, "sphinxish": 40, "run": [40, 126, 145, 440, 499, 562, 781, 870, 895, 896, 897, 961, 962, 998, 1074, 1077, 1105], "seminar": 41, "clean": [41, 43, 45, 206, 266, 268, 269, 335, 425, 426], "2022": [41, 98, 99, 100, 101, 102, 103, 104, 218, 219, 220, 223, 226, 229, 231, 234, 237, 240, 243, 246, 247, 248, 249, 250, 252, 253, 327, 328, 329, 335], "04": [41, 104, 145, 218, 229, 231, 234, 267, 268, 269, 270, 271, 317, 335, 961], "agenda": [41, 176, 177, 179, 180, 181, 182, 187, 191, 192, 229, 234, 246, 255, 259, 262, 268, 272, 276, 278, 282, 284, 290, 294, 298, 330, 331, 1127], "timelin": 41, "befor": [42, 63, 128, 161, 284, 287, 700, 1112], "formal": [42, 346], "unit": [42, 43, 45, 71, 172, 202, 240, 249, 259, 262, 325, 485, 501, 562, 1059, 1110], "initi": [42, 209, 244, 245, 247, 298, 348, 360, 409, 496, 527, 528, 529, 544, 551, 562, 599, 622, 642, 644, 645, 646, 647, 691, 713, 767, 778, 790, 920, 922], "structur": [42, 43, 133, 137, 160, 223, 244, 245, 247, 249, 271, 282, 293, 297, 298, 378, 386, 393, 396, 402, 438, 485, 520, 691, 696, 716, 741, 769, 965, 978, 1105, 1112, 1127], "snippet": [42, 44, 50], "userdb": [42, 46, 49, 50, 55, 58, 201, 520, 634, 638], "bin": 42, "binaryfil": 42, "cpp": [42, 434, 485, 488, 660, 661, 662, 665, 666, 667, 668, 671, 672, 674, 675, 676, 677, 678], "extend": [42, 196, 562, 987], "read": [42, 49, 50, 58, 199, 206, 308, 309, 319, 353, 414, 426, 449, 650, 692, 731, 789, 895, 899, 905, 907, 1021, 1027, 1028, 1060, 1061, 1062, 1063, 1076, 1096], "iter": [42, 162, 173, 178, 183, 188, 190, 196, 199, 204, 205, 209, 212, 215, 220, 222, 225, 228, 237, 238, 249, 250, 252, 253, 259, 262, 266, 270, 272, 273, 274, 278, 279, 291, 292, 309, 577, 578, 601, 642, 670, 677, 690, 691, 692, 724, 761, 973, 975, 976, 977, 989, 1009, 1010, 1019], "bug": [42, 47, 53, 363, 528, 692], "faschingbau": [42, 144], "As": [42, 447, 464, 655, 694, 879, 913, 947, 984, 1114], "last": [42, 363, 384, 385, 414, 567, 570, 706, 923, 945, 1112], "name": [42, 43, 209, 212, 228, 357, 395, 553, 642, 773, 817, 835, 941, 1012, 1023], "wrap": [42, 172, 410, 642, 969], "up": [42, 142, 172, 206, 249, 267, 268, 290, 322, 410, 642, 984], "what": [42, 45, 49, 53, 147, 150, 215, 225, 372, 413, 424, 548, 617, 636, 642, 654, 655, 684, 705, 742, 763, 773, 789, 793, 808, 816, 834, 873, 886, 889, 890, 894, 895, 898, 902, 934, 947, 959, 963, 971, 975, 979, 1022, 1092, 1095], "have": [42, 45, 424, 763, 959, 964], "messag": [43, 140, 141, 423, 429, 921, 940, 941, 1087, 1112], "book": [43, 45, 187, 237, 279, 338, 423, 1071], "survei": [43, 424], "comment": [43, 196, 220, 235, 260, 312, 999, 1040], "format": [43, 50, 199, 205, 220, 280, 1016, 1068], "object": [43, 173, 178, 215, 222, 228, 232, 240, 241, 249, 252, 253, 265, 266, 268, 269, 272, 273, 278, 284, 285, 287, 290, 291, 294, 305, 424, 442, 447, 527, 528, 529, 544, 546, 549, 552, 554, 558, 560, 615, 617, 631, 646, 649, 652, 655, 701, 941, 964, 965, 970, 978, 984, 986, 988, 1022, 1089, 1093, 1098], "data": [43, 115, 160, 162, 188, 197, 223, 237, 240, 249, 273, 290, 291, 292, 294, 358, 402, 405, 426, 550, 554, 577, 696, 808, 922, 989, 1057, 1071, 1076, 1078], "handl": [43, 215, 218, 228, 240, 259, 262, 267, 268, 269, 290, 291, 294, 328, 436, 444, 566, 891, 970, 1023], "boundari": [43, 1084], "class": [43, 173, 199, 218, 222, 225, 228, 241, 249, 265, 270, 284, 287, 429, 447, 454, 455, 472, 473, 485, 488, 502, 521, 522, 523, 546, 553, 554, 559, 561, 562, 563, 564, 570, 585, 613, 614, 633, 642, 643, 645, 653, 654, 686, 700, 729, 969, 983, 984, 987, 988, 989, 990], "switch": [44, 118, 119, 374, 406, 497], "googletest": [44, 168, 499, 1110], "git": [44, 77, 120, 122, 143, 151, 155, 197, 201, 202, 256, 317, 322, 335, 746, 1071], "submodul": 44, "establish": [44, 45, 962], "demo": [44, 258, 259, 266, 430, 449, 686, 701, 804, 830, 894, 929, 933], "straightforward": [44, 173], "main": [44, 391, 482, 483, 484, 963], "convers": [44, 196, 212, 220, 222, 228, 232, 235, 253, 264, 270, 274, 280, 292, 312, 363, 390, 614, 622, 1002, 1016], "fix": [44, 143, 151, 244, 245, 247, 264, 298, 309, 552, 670, 716, 763, 764, 776, 777], "shortcom": 44, "softwar": [45, 169, 266, 424, 425, 879, 952, 955, 1129], "craft": [45, 266, 425], "09": [45, 120, 145, 200, 210, 218, 284, 285, 286, 287, 288, 289, 335], "00": 45, "15": [45, 183, 189, 226, 259, 262, 272, 273, 274, 317, 324, 329, 335, 800, 801], "introductori": [45, 256, 670, 912], "word": [45, 235, 384, 385, 414, 417, 567, 570, 697, 706, 833, 1038, 1055], "engin": [45, 237, 879], "disciplin": 45, "coffe": 45, "break": [45, 183, 220, 377, 1006, 1009], "project": [45, 109, 116, 120, 144, 160, 201, 202, 216, 240, 245, 247, 249, 265, 267, 268, 269, 282, 284, 287, 290, 291, 294, 323, 324, 325, 329, 331, 424, 426, 485, 490, 499, 500, 562, 1058, 1099, 1105, 1127, 1130], "enter": [45, 63, 212, 577, 620, 655, 681, 690, 704, 776, 865, 933, 963, 971, 983, 984, 1079, 1084, 1089], "framework": 45, "lunch": 45, "cornerston": 45, "45": 45, "keep": [45, 145, 835], "small": 45, "23": [45, 181, 207, 223, 229, 247, 255, 265, 276, 277, 335], "59": 45, "extrem": 45, "program": [45, 50, 63, 93, 156, 172, 178, 199, 202, 218, 228, 240, 241, 249, 252, 256, 266, 268, 269, 272, 273, 274, 278, 284, 287, 290, 291, 294, 324, 335, 339, 340, 342, 378, 379, 380, 386, 412, 417, 422, 424, 429, 449, 482, 483, 484, 488, 544, 705, 734, 786, 818, 829, 830, 871, 873, 892, 907, 910, 911, 914, 926, 936, 944, 947, 979, 986, 995, 996, 998, 1000, 1047, 1059, 1070, 1097, 1098, 1126, 1138, 1139, 1140, 1141, 1142], "session": 45, "find": [46, 125, 143, 161, 444, 503, 584, 602, 720, 861, 1114], "crash": [46, 143], "If": [46, 49, 548, 642, 657, 789, 903, 904, 970, 1095], "Not": [46, 63, 65, 114, 115, 117, 119, 151, 232, 241, 510, 512, 515, 584, 620, 636, 642, 664, 679, 680, 692, 701, 763, 789, 829, 900, 903, 904, 905, 906, 926, 947, 964, 974, 1089, 1112], "found": [46, 512, 515, 584, 636, 1114], "state": [46, 141, 201, 670, 776, 778], "exist": [48, 65, 137, 510, 900, 903, 904, 906, 987, 1095], "ar": [48, 140, 141, 220, 222, 235, 285, 410, 426, 548, 554, 642, 670, 931, 941, 969, 978, 990, 1094, 1114], "overwritten": 48, "done": [49, 448, 611, 705], "twice": 49, "altern": [50, 651], "csv": [50, 212, 229, 237, 240, 249, 252, 272, 273, 274, 278, 279, 294, 426, 1027, 1028, 1029, 1060, 1061, 1062, 1063, 1068, 1079], "frontend": 50, "featur": [51, 53, 63, 252, 268, 269, 270, 272, 273, 278, 290, 294, 403, 426, 682, 972, 987, 1006, 1076, 1078], "search": [52, 582, 584, 585, 588, 598, 602, 622, 635, 636, 637, 862, 964, 1017, 1100], "By": [52, 168, 232, 264, 350, 557, 601, 632, 635, 637, 659, 670, 681, 684, 685, 687, 692, 696, 704, 720, 721, 722, 970, 1003, 1092, 1093, 1094, 1105], "index": [52, 183, 201, 220, 232, 280, 415, 668, 873, 1008, 1093, 1100, 1101, 1102], "backlog": 53, "need": [53, 309, 449, 664, 666, 931, 1079], "chang": [53, 818, 829, 836], "Or": [53, 426, 434, 435, 449, 653, 692, 893, 984, 1089], "Will": 53, "refactor": [53, 56, 426, 502, 741, 742, 743, 781, 1061, 1063, 1068], "after": [53, 176, 207, 376, 792, 808, 987], "backingstor": [54, 55, 57], "ha": [54, 55, 667], "too": [54, 55, 420, 435, 642, 686, 709], "mani": [54, 55, 228, 414, 436, 692, 855, 935], "respons": [54, 55, 204, 452], "interfac": [54, 69, 86, 118, 180, 228, 267, 304, 435, 439, 449, 452, 456, 464, 475, 482, 483, 498, 500, 530, 531, 532, 539, 540, 541, 616, 732, 804, 872, 873, 876, 878, 983, 1080], "load": [57, 161, 401, 437, 751, 752, 877, 919, 981], "constructor": [57, 178, 228, 244, 245, 247, 253, 298, 498, 528, 534, 545, 546, 547, 548, 549, 551, 552, 561, 562, 563, 564, 631, 646, 647, 648, 653, 655, 679, 699, 700, 985], "bool": 58, "realli": [58, 642, 704], "submiss": [59, 62, 109], "pointless": [59, 60, 62, 63, 990], "blink": [59, 60, 62, 63, 317], "With": [59, 60, 62, 63, 97, 113, 170, 201, 248, 264, 266, 268, 290, 294, 335, 419, 427, 448, 463, 477, 499, 570, 652, 705, 799, 800, 801, 862, 865, 870, 875, 901, 964, 1012, 1092, 1094, 1106, 1107, 1110], "asyncio": [59, 60, 62, 63], "libgpiod": [59, 60, 61, 62, 63], "raspberri": [59, 60, 62, 63, 151, 180, 303, 335, 753, 774, 870, 874, 877, 952, 956, 958, 960, 1136], "pi": [59, 60, 61, 62, 63, 151, 180, 335, 753, 773, 774, 870, 877, 959, 960, 1136], "biographi": [59, 62], "abstract": [59, 62, 249, 284, 287, 442, 457, 471, 809, 895, 896, 897, 983], "fedora": [61, 143, 150, 746, 747, 748, 749, 961], "prepar": [61, 143, 161, 176, 177, 179, 180, 181, 182, 192, 201, 216, 226, 245, 247, 255, 485, 562, 773], "tarbal": [61, 151], "On": [61, 63, 201, 235, 237, 259, 263, 264, 268, 290, 294, 337, 499, 501, 546, 577, 578, 582, 588, 691, 716, 816, 895, 896, 897, 902, 907, 911, 934, 961, 1026], "build": [61, 68, 141, 143, 151, 168, 169, 202, 220, 427, 429, 437, 485, 499, 561, 562, 563, 564, 741, 746, 747, 748, 749, 751, 773, 774, 877, 895, 896, 897, 907, 948, 949, 952, 955, 959, 960, 961, 963, 964, 965, 1019, 1114, 1132], "present": 63, "start": [63, 218, 244, 245, 247, 335, 449, 652, 664, 964, 1087, 1112], "point": [63, 232, 235, 498, 544, 546, 554, 560, 562, 563, 564, 570, 652, 664, 716, 800, 801, 959, 1002], "greet": [63, 291, 1033], "multipl": [63, 178, 385, 426, 427, 739, 740, 741, 835, 889, 947, 968, 970, 1007, 1089, 1092, 1106], "background": [63, 145, 147, 543, 641], "thread": [63, 140, 142, 151, 268, 269, 326, 520, 642, 708, 709, 714, 915, 916, 917, 922, 924, 931, 934, 979], "charact": [63, 339, 346, 349, 352, 359, 728, 729, 730, 731, 732, 733, 736, 737, 738, 1055], "base": [63, 151, 220, 228, 244, 245, 247, 249, 284, 287, 298, 447, 613, 614, 642, 655, 670, 690, 691, 965, 970, 983], "gpio": [63, 86, 119, 158, 180, 303, 304, 305, 306, 317, 753, 754, 877, 879, 911, 912, 913], "entir": [63, 264, 746, 748, 833, 889], "matrix": 63, "off": [63, 201], "bring": [63, 122, 322, 616], "togeth": [63, 432, 616, 835], "modular": [63, 218, 380], "bit": [63, 273, 366, 818, 829, 831, 996, 998], "row": [63, 264, 1088, 1092, 1093, 1094], "coroutin": [63, 247, 669, 670], "enough": [63, 544, 620], "sequenc": [63, 209, 212, 220, 252, 259, 262, 272, 273, 278, 279, 359, 518, 582, 588, 974, 1007, 1015], "loop": [63, 160, 162, 173, 183, 188, 220, 222, 232, 235, 238, 244, 245, 247, 266, 268, 290, 294, 298, 342, 375, 376, 414, 486, 690, 914, 975, 1006, 1009], "forev": 63, "strip": [63, 205, 222, 228, 309], "down": [63, 435], "factori": [63, 442, 457, 471, 501], "turn": [63, 974], "Into": [63, 262, 284, 287, 290, 353, 449, 486, 503, 579, 633, 642, 686, 1061, 1063, 1068], "anti": [63, 714, 716], "clumsi": [63, 716], "decor": [63, 199, 249, 259, 262, 266, 268, 269, 284, 290, 291, 294, 447, 461, 475, 969], "wrapper": 63, "final": [63, 228, 244, 245, 247, 298, 681, 808, 812, 970], "playground": 63, "cycl": [63, 114, 115, 117, 119, 916], "fast": [63, 178], "forward": [63, 247, 351, 415, 704, 888], "ani": [63, 264, 443, 498, 926], "cancel": 63, "goodby": 63, "hochk\u00f6nig": 64, "k\u00f6nigsjodl": 64, "klettersteig": 64, "tour": [64, 249, 642], "werfen": 64, "ostpreussenh\u00fctt": 64, "matrashau": 64, "blog": [65, 137], "articl": [65, 147, 148, 150, 151], "yet": [65, 228], "revisit": [65, 342, 410, 653], "post": [65, 152, 161, 940], "pending_xref": 66, "cmake": [68, 168, 169, 201, 256, 282, 283, 335, 427, 429, 431, 435, 485, 499, 907, 948, 949, 962, 1114, 1115, 1127], "oo": [70, 108, 120, 173, 199, 202, 218, 225, 228, 237, 240, 244, 245, 247, 249, 259, 262, 265, 267, 284, 287, 291, 298, 326, 452, 489, 498, 520, 979], "graph": [72, 73, 74, 418, 420, 625, 726, 774, 1029, 1030, 1034, 1043, 1057, 1064], "embed": [73, 74, 78, 96, 97, 107, 108, 112, 113, 121, 158, 167, 256, 265, 267, 300, 316, 318, 319, 331, 333, 335, 1128, 1129], "comput": [73, 74, 78, 96, 107, 108, 112, 121, 314, 316, 318, 319, 331, 333, 413, 414, 498, 800, 801, 809], "current": [73, 74, 447, 724, 836], "depend": [73, 74, 114, 115, 117, 119, 169, 282, 284, 303, 304, 305, 306, 308, 430, 431, 433, 434, 438, 448, 452, 462, 485, 490, 507, 509, 520, 528, 587, 593, 597, 605, 607, 610, 615, 623, 624, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 644, 651, 658, 669, 693, 698, 750, 751, 800, 801, 802, 806, 820, 821, 822, 841, 846, 847, 850, 883, 885, 892, 898, 900, 908, 910, 912, 924, 927, 949, 951, 953, 954, 957, 958, 964, 979, 981, 1027, 1028, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1073, 1077, 1081, 1084, 1087, 1091, 1104, 1110, 1127], "ex": [75, 76, 82, 83, 84, 85, 91, 92], "race": [75, 76, 88, 710, 763, 764, 771, 917, 918, 981], "condit": [75, 76, 88, 368, 376, 385, 710, 714, 763, 764, 771, 917, 918, 920, 921, 981], "avoid": [76, 88], "goal": [76, 82, 83, 84, 85, 87, 88, 89, 91, 125, 127, 128, 130, 161, 265, 267, 1125, 1128], "outcom": [76, 82, 83, 84, 85, 179, 287, 319], "introduct": [77, 80, 160, 244, 245, 247, 259, 262, 266, 267, 277, 282, 283, 298, 320, 335, 338, 355, 413, 417, 431, 448, 456, 543, 640, 646, 690, 699, 708, 723, 753, 773, 807, 970, 1105, 1125, 1127, 1138], "2019": [78, 160, 163, 335], "overview": [78, 120, 156, 256, 268, 269, 292, 298, 332, 336, 652, 659, 670, 694, 700, 714, 716, 724, 744, 798, 809, 835, 866, 877, 878, 879, 880, 915, 947, 969, 1073, 1077], "knowledg": [78, 1127], "transfer": [78, 702], "unix": [80, 110, 111, 164, 322, 338, 400, 410, 446, 998], "hardwar": [81, 84, 85, 120, 128, 131, 256, 400, 874, 876, 877, 879, 912, 1129], "manag": [81, 142, 190, 220, 240, 249, 259, 262, 265, 266, 268, 284, 287, 290, 291, 294, 324, 325, 329, 424, 552, 612, 700, 783, 784, 949, 968, 987, 1099, 1129], "averag": [82, 83, 91, 446, 474], "sensor": [82, 83, 85, 91, 92, 94, 267, 291, 442, 443, 447, 449, 454, 472, 474, 475, 481, 485, 487, 488, 489, 500, 501, 502, 509, 700, 877, 879, 907, 1057, 1059], "parallel": 83, "led": [84, 117, 317], "temperatur": [84, 85, 92, 117, 485, 488, 877, 879, 907], "displai": [84, 91, 117], "sysf": [86, 119, 180, 303, 317, 878, 912, 913], "gpiod": 86, "multithread": [87, 158, 218, 244, 245, 247, 256, 290, 291, 294, 298, 325, 332, 714, 715, 944, 979, 980, 982, 1141], "semaphor": [88, 140, 716, 940, 941], "mutex": [88, 140, 401, 712, 716, 763, 764, 765, 766, 778, 779, 918, 919, 934, 981], "commun": [89, 237, 466, 714, 920, 941], "wait": [89, 131, 714, 716, 789, 790, 791, 920, 940], "someth": [89, 173, 544, 642, 716, 789, 790, 791, 1009], "simpl": [93, 178, 440, 544, 554, 569, 620, 632, 776, 778, 804, 818, 947, 964, 969, 989, 1019, 1096, 1105], "2020": [96, 145, 165, 167, 172, 173, 175, 176, 177, 179, 181, 182, 187, 335], "ss2022": [97, 105, 800, 801], "block": [97, 113, 371, 567, 894, 895, 896, 897, 898, 945, 1098], "cross": [97, 108, 113, 151, 256, 753, 773, 948, 950, 951, 952, 957, 959, 960, 962, 1120], "develop": [97, 108, 113, 114, 115, 117, 119, 172, 187, 201, 204, 226, 237, 240, 256, 259, 261, 262, 265, 266, 267, 268, 269, 290, 291, 294, 300, 320, 335, 750, 950, 951, 957, 1128, 1129, 1130, 1143], "03": [98, 99, 100, 101, 102, 103, 120, 189, 192, 197, 216, 218, 226, 229, 246, 259, 260, 262, 265, 266, 282, 317, 335, 639, 642, 643], "08": [98, 207, 210, 218, 231, 335], "homework": [98, 99, 100, 101, 104], "until": 100, "21": [100, 101, 229, 310, 317, 335], "exercis": [100, 109, 133, 155, 160, 161, 173, 176, 177, 181, 189, 190, 192, 201, 202, 212, 218, 235, 240, 244, 245, 247, 249, 252, 256, 260, 265, 267, 268, 272, 273, 278, 279, 280, 284, 287, 290, 291, 294, 298, 307, 309, 317, 323, 341, 343, 345, 347, 349, 351, 353, 365, 389, 398, 442, 443, 444, 446, 447, 448, 450, 451, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 518, 519, 520, 550, 561, 562, 563, 564, 565, 606, 607, 608, 615, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 704, 720, 721, 722, 795, 802, 813, 819, 822, 823, 825, 827, 837, 838, 839, 840, 841, 842, 843, 844, 845, 847, 848, 849, 850, 851, 860, 881, 882, 883, 884, 900, 901, 907, 941, 945, 952, 954, 955, 956, 957, 986, 1027, 1028, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068], "creat": [100, 122, 134, 139, 143, 146, 168, 169, 499, 642, 709, 793, 799, 800, 801, 818, 823, 825, 827, 835, 839, 841, 852, 884, 901, 903, 904, 906, 940, 941, 959, 961, 966, 1058, 1076, 1078], "copi": [100, 173, 222, 257, 365, 503, 537, 545, 552, 557, 572, 578, 579, 583, 590, 642, 653, 655, 680, 685, 687, 691, 696, 700, 701, 720, 787, 835, 837, 838, 841, 881, 882, 889, 900, 1011, 1089], "move": [100, 244, 245, 247, 265, 298, 498, 544, 560, 651, 652, 653, 654, 655, 700, 702, 721, 753, 833, 840, 841, 856], "remov": [100, 238, 435, 515, 516, 598, 601, 720, 841, 844, 852, 941], "l": [100, 850, 855], "command": [100, 444, 459, 473, 751, 818, 829, 833, 850, 855, 870, 961], "22": [102, 179, 186, 191, 278, 279, 280, 294, 295, 296, 297, 335, 1098], "24": [102, 116, 120, 186, 218, 248, 268, 269, 270, 271, 290, 291, 293, 294, 295, 296, 297, 335], "ku": 102, "28": [103, 160, 177, 218, 266, 323, 335], "01": [104, 109, 210, 216, 218, 219, 220, 249, 255, 317, 327, 328, 335, 800, 801], "ws2022": [106, 107, 108], "plan": [106, 120, 229, 320], "evolut": 106, "fh": [107, 108, 121, 485, 486, 487, 488, 489, 561, 562, 563, 564, 624, 806, 820, 821, 846, 953], "joanneum": [107, 108, 121], "2023": [107, 108, 109, 110, 111, 120, 247, 255, 256, 259, 260, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 300, 335], "question": [107, 108, 128, 199, 332, 426, 440, 485, 624, 806, 820, 821, 824, 826, 846, 932, 953, 982, 1098], "inherit": [107, 159, 199, 228, 249, 284, 287, 456, 530, 531, 532, 613, 614, 615, 618, 642, 902, 979, 987], "memori": [107, 142, 164, 190, 390, 393, 397, 399, 401, 408, 415, 514, 524, 525, 526, 552, 611, 612, 744, 757, 758, 759, 760, 786, 787, 788, 806, 810, 940, 941, 1129, 1139], "leak": [107, 514, 525, 552, 702], "ye": [108, 1084], "No": [108, 141, 180, 464, 642, 659, 705, 970, 1095, 1112], "lab": 109, "exam": [109, 110, 111, 113, 200, 213, 215, 226, 317, 332, 498, 800, 801, 802, 932, 982, 1098], "17": [109, 212, 213, 215, 219, 220, 226, 243, 250, 256, 272, 273, 274, 335, 559], "ss2023": [110, 111, 113], "06": [110, 111, 200, 201, 218, 247, 278, 279, 280, 317, 335], "30": [110, 111, 158, 167, 177, 182, 229, 335], "handout": 110, "concept": [110, 111, 247, 277, 298, 658, 659, 662, 663, 664, 667, 668, 694, 807, 1078], "toolchain": [110, 111, 151, 202, 282, 773, 947, 948, 953, 954, 956, 957, 958, 959, 960, 961, 962, 1127], "solv": [111, 919, 1078, 1101, 1108], "finish": [113, 127, 136, 202, 792], "iot": 114, "boil": 114, "pot": 114, "begin": [114, 300, 338, 692], "requir": [114, 115, 117, 119, 206, 237, 284, 287, 319, 430, 442, 463, 466, 485, 486, 487, 491, 492, 493, 494, 495, 496, 497, 664, 900, 907, 1027, 1028, 1049, 1058, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068], "futur": [114, 115, 117, 119, 326, 716], "part": [114, 115, 117, 119, 229, 1114], "Of": [114, 115, 117, 119, 264, 273, 284, 287, 427, 498, 544, 576, 577, 617, 655, 687, 692, 702, 704, 714, 720, 721, 722, 800, 801, 808, 900, 911, 935, 949, 970, 973, 993, 1089, 1095], "logger": [115, 449], "ws2023": [116, 120], "task": [116, 120, 323, 931], "via": [117, 120, 148, 149, 314, 879], "pwm": [117, 878], "control": [117, 237, 252, 259, 262, 272, 273, 278, 279, 449, 670, 870, 878], "05": [120, 197, 200, 231, 237, 240, 243, 246, 272, 273, 274, 276, 277, 309, 310, 317, 335], "vo": 120, "recap": [120, 188, 201, 202, 216, 249, 269, 284, 287, 291, 292, 537, 699, 947, 973], "polymorph": [120, 202, 491, 492, 493, 494, 495, 496, 497, 500, 617, 706], "collabor": 120, "necessarili": 120, "organiz": 120, "design": [120, 248, 266, 268, 269, 284, 287, 335, 352, 409, 424, 448, 452, 462, 615, 1128], "graz": [121, 163, 165, 172, 210, 335], "branch": [122, 372], "upstream": 122, "track": [122, 963], "submit": [122, 792, 793], "appli": [122, 143, 1095], "patch": [122, 143], "packag": [124, 127, 145, 151, 168, 249, 266, 284, 290, 310, 773, 952, 955, 978, 1026, 1098, 1099, 1100, 1101, 1102, 1103, 1107], "pypi": [124, 197, 237, 1026, 1071, 1101, 1103], "audio": [125, 129], "chip": [125, 878], "bringup": [125, 128, 879], "get": [126, 139, 169, 220, 716, 761, 786, 911], "debian": [126, 127], "kernel": [126, 127, 128, 132, 141, 143, 187, 335, 420, 737, 746, 747, 748, 749, 750, 751, 765, 767, 773, 774, 806, 809, 874, 877, 1130], "config": [126, 773], "within": 126, "qemu": 126, "extract": [126, 132, 199, 486, 1061, 1063, 1068, 1076], "boot": [126, 139, 150, 335, 809], "etc": [127, 188, 196, 199, 228, 238, 241, 274, 849, 877, 905, 999, 1049], "yocto": [128, 132, 868], "everyth": [128, 156, 215, 432, 804, 815, 894], "like": [128, 298, 544, 926], "i2": 129, "kontron": 129, "smarc": 129, "modul": [129, 173, 197, 199, 237, 238, 250, 266, 273, 290, 291, 310, 317, 420, 435, 499, 688, 741, 746, 748, 749, 751, 752, 767, 773, 878, 978, 1068, 1071, 1079, 1098, 1106, 1114], "dirti": 130, "upgrad": 130, "path": [130, 151, 199, 209, 215, 222, 438, 724, 805, 857, 959, 964, 1058, 1114], "step": [130, 444, 447, 449, 485, 577, 670, 720, 721, 948, 949, 963, 983, 1008], "intel": 132, "bsp": 132, "improv": 133, "beginn": [133, 197, 209, 232, 237, 249, 273, 1070, 1071], "split": [133, 159, 222, 228, 309, 1017, 1076], "openshot": 134, "seo": [135, 136], "sitemap": 135, "meta": [135, 136], "stack": [136, 142, 183, 204, 397, 655], "hang": 136, "dbu": [136, 449], "stuff": [136, 317, 410, 809, 843], "extens": 137, "rest": [137, 199, 294, 899], "style": [137, 373, 424, 544, 646, 700, 718, 1016], "convert": [137, 160, 264, 989, 1067], "rst": 137, "exampl": [137, 222, 228, 232, 313, 346, 350, 385, 387, 407, 410, 446, 485, 570, 595, 646, 647, 665, 666, 667, 668, 694, 703, 797, 815, 817, 818, 866, 890, 894, 899, 902, 920, 945, 968, 983, 1003, 1013, 1016, 1017, 1018, 1019, 1040, 1082, 1090, 1095, 1105, 1106], "add": [137, 258, 436, 440, 498, 734, 781, 792, 944, 987, 1088], "miss": [137, 249, 646, 903], "past": [137, 385], "learn": [138, 259, 319, 1072, 1078], "beagleboard": 139, "how": [139, 142, 150, 172, 202, 220, 354, 393, 418, 419, 420, 554, 692, 702, 816, 829, 832, 975, 1078], "repair": 139, "nand": 139, "also": [139, 391, 804, 809, 810, 815, 816, 895, 896, 897, 899, 926, 929, 933, 935, 1014, 1078], "40w": 139, "x": [139, 202, 534], "loader": 139, "u": [139, 890], "bootabl": 139, "mmc": 139, "sd": [139, 180], "card": [139, 180, 258, 801], "port": [140, 888], "There": [140, 220, 424, 552, 708, 789, 879, 889, 894, 905, 906], "": [140, 155, 180, 366, 390, 424, 544, 636, 642, 645, 705, 737, 742, 761, 773, 789, 818, 834, 886, 934, 947, 975, 979, 1022], "alwai": [140, 220, 240, 680, 904], "better": [140, 341, 426, 783, 993, 1084], "wai": [140, 199, 220, 228, 414, 935, 979, 998], "process": [140, 142, 161, 256, 277, 771, 772, 805, 806, 810, 811, 926, 927, 928, 931, 935], "signal": [140, 164, 400, 714, 920, 943, 944, 945, 946], "aren": 140, "t": [140, 197, 692, 1071], "queue": [140, 183, 714, 790, 921, 940, 941], "timer": [140, 781, 783, 784, 897, 931], "poll": [140, 714, 716], "event": [140, 734, 753, 763, 781, 782, 786, 914, 920, 936, 938], "dispatch": 140, "interrupt": [140, 753, 754, 755, 756, 769, 778, 914, 931], "realtim": [140, 142, 328, 332, 335, 765, 933, 934, 1120, 1129], "save": [141, 702], "solid": [141, 424], "disk": [141, 180, 804], "life": [141, 703, 916], "gentoo": [141, 773], "rant": [141, 161, 429, 949], "swap": [141, 235, 389, 705, 816, 1036], "tmpf": 141, "instanc": [141, 199, 225, 228], "syslog": 141, "var": 141, "mountpoint": 141, "logrot": 141, "o": [141, 199, 209, 215, 222, 223, 228, 235, 237, 238, 270, 274, 277, 279, 309, 346, 757, 814, 815, 816, 839, 852, 894, 895, 896, 897, 898, 899, 908, 909, 929, 1021, 1098], "schedul": [141, 277, 327, 328, 332, 806, 810, 916, 929, 930, 932, 933, 934], "ram": 141, "thing": [141, 202, 223, 244, 245, 247, 298], "left": [141, 366, 557], "why": [142, 143, 151, 220, 424, 452, 544, 547, 551, 552, 699, 705, 746, 792, 817, 871, 878, 886, 890, 915, 968, 1013], "p": 142, "suck": [142, 753], "count": [142, 701, 780, 816, 1055], "consumpt": 142, "conclus": [142, 778, 870, 878], "pthread": 142, "experi": 142, "100": 142, "default": [142, 173, 220, 222, 244, 245, 247, 298, 313, 498, 546, 548, 549, 561, 562, 563, 564, 631, 679, 700, 832, 945, 1013, 1093], "eat": 142, "limit": [142, 974], "than": [142, 505, 990], "my": [142, 145, 241, 339, 340, 426, 741, 812, 829], "could": [142, 703], "take": [142, 391, 702, 993], "doe": [142, 570, 816, 829, 832, 900, 903, 904], "differ": [142, 173, 390, 575, 577, 835, 889], "It": [143, 172, 264, 321, 390, 616, 829, 890, 903, 904, 947], "rpm": [143, 145, 170, 746], "prerequisit": [143, 151, 169, 268, 290, 294, 319, 748, 1026], "rpmbuild": 143, "directori": [143, 168, 169, 324, 426, 427, 499, 724, 800, 801, 818, 823, 824, 825, 826, 835, 836, 837, 844, 851, 852, 855, 856, 861, 889, 900, 948, 949, 968, 1105], "download": [143, 189, 191, 317, 322, 336, 502, 959, 962, 1119], "For": [143, 145, 151, 229, 232, 256, 259, 261, 262, 265, 267, 300, 335, 347, 472, 546, 557, 642, 670, 691, 716, 808, 894, 959, 960, 961, 971, 989, 1058, 1128], "domain": [144, 164, 262, 717], "configur": [144, 146, 151, 428, 834, 872, 877, 879, 914], "subdomain": 144, "www": 144, "apex": 144, "microsoft": 145, "team": 145, "screen": [145, 865], "share": [145, 432, 437, 697, 701, 704, 721, 800, 801, 827, 940, 941, 963, 964, 1139], "x11": 145, "reviv": 145, "meh": 145, "updat": 145, "annoy": 145, "re": [145, 970], "regist": [145, 414], "itself": 145, "autostart": 145, "browser": [145, 204], "recommend": [145, 176, 319, 1106, 1127], "deploi": 146, "gener": [146, 150, 160, 169, 173, 178, 205, 212, 215, 220, 222, 228, 247, 249, 253, 259, 262, 266, 268, 269, 273, 280, 282, 290, 291, 292, 294, 375, 504, 545, 548, 552, 670, 671, 673, 674, 679, 726, 879, 886, 913, 948, 949, 973, 974, 975, 976, 977, 1002, 1041, 1054, 1127], "public": [146, 199, 439, 546, 800, 801, 825, 826, 886], "repo": [146, 168], "jfasch": [146, 830], "home": [146, 805, 835, 851, 890], "time": [146, 155, 159, 264, 430, 717, 781, 782, 810, 922, 1033], "deploy": [146, 282, 432, 773, 1127], "bigbluebutton": 147, "onlin": [147, 156, 1119], "tl": 147, "dr": 147, "host": [147, 192, 773, 961], "check": [147, 440, 464, 818, 879, 920, 956, 1017, 1037], "els": [147, 215, 222, 228, 238, 268, 290, 294, 348, 372, 373, 374, 551, 566, 856, 873, 886, 970, 1006, 1009], "traunstein": 148, "zierlersteig": 148, "kaltenbachwildni": 148, "anstieg": 148, "auf": [148, 189], "zierlerberg": 148, "rinn": 148, "abstieg": 148, "grintovec": 149, "plan\u0161arsko": 149, "jezero": 149, "\u010de\u0161ka": 149, "ko\u010da": 149, "anreis": 149, "hinauf": 149, "runter": 149, "zusammenfassung": 149, "brick": 150, "1399": 150, "dell": 150, "xp": 150, "happen": 150, "virtualbox": 150, "secur": [150, 180, 256, 277, 314, 885, 889], "enrol": 150, "machin": [150, 180, 201, 259, 314, 881, 882, 907, 1072, 1078], "owner": [150, 818], "mok": 150, "pair": [150, 642, 884, 886], "stage": 150, "reboot": 150, "diagnost": [150, 877], "crosstool": [151, 960, 961], "ng": [151, 960, 961], "prebuilt": [151, 1095], "clone": [151, 155, 168, 499], "repositori": [151, 155, 331, 499, 509], "releas": [151, 429, 755, 765, 981], "glibc": 151, "version": [151, 426, 429, 432, 642, 670, 903], "gcc": [151, 401, 414, 947], "simplest": [151, 670, 675, 713, 967, 990, 1106, 1112], "stdio": 151, "h": [151, 673, 865], "iostream": 151, "distribut": [151, 1026], "afterword": [151, 650], "schulung": [153, 173], "entwicklung": 153, "beratung": 153, "richtlinien": 154, "ver\u00f6ffentlichung": 154, "kursmateri": 154, "window": [155, 192, 209, 265, 267, 337, 812], "workflow": [155, 202], "conflict": [155, 919, 981], "individu": 156, "languag": [156, 172, 202, 218, 244, 245, 247, 252, 272, 273, 278, 335, 403, 422, 682, 926, 972, 994, 996], "qualivis": [157, 335], "z\u00fcrich": [157, 335], "2013": [157, 335, 1120], "fragen": [157, 190], "antworten": 157, "kursnotizen": 158, "2015": [158, 335], "userspac": [158, 732, 734, 786, 787, 788, 877, 878, 914], "can": [158, 179, 202, 237, 391, 443, 447, 498, 557, 642, 702, 871, 872, 873, 875], "bu": [158, 179, 449, 872, 875, 879], "driver": [158, 187, 258, 335, 750, 751, 769, 877, 1130], "beispiel": [158, 173, 232, 861], "heizungssteuerung": 158, "k\u00f6nnen": [159, 183, 196], "viel": 159, "mutabl": [159, 162, 173, 183, 190, 196, 209, 212, 220, 222, 225, 228, 235, 238, 241, 253, 260, 270, 274, 280, 292, 1011, 1013], "immut": [159, 162, 173, 190, 196, 209, 220, 225, 228, 235, 241, 250, 257, 260, 274, 555, 1011], "kann": [159, 204], "man": [159, 204, 833], "nicht": [159, 173, 183], "oft": 159, "genug": 159, "wiederholen": 159, "hart": 159, "indizieren": 159, "weich": 159, "nettfragen": 159, "shortcut": [159, 989, 1019], "objektorientiert": 159, "date": [159, 205, 264, 322], "delta": 159, "datetim": [159, 178, 199, 205, 260], "bissl": 159, "potschert": [159, 183], "schreiben": [159, 183], "scho": 159, "formen": 159, "represent": [159, 992], "__str__": [159, 987, 992], "subprocess": [159, 238], "enumer": [159, 183, 188, 190, 196, 199, 220, 228, 235, 253, 270, 292], "zip": [159, 199], "comprehens": [159, 183, 205, 212, 215, 220, 222, 228, 232, 253, 259, 260, 262, 292, 967, 973, 1018, 1098], "exec": [159, 225, 241, 249, 253, 280, 971], "eval": [159, 160, 196, 225, 235, 253, 280, 292], "umgebend": 159, "context": [159, 220, 259, 262, 266, 771, 772, 792, 968, 971], "eigen": 159, "json": [159, 181, 188, 204, 205, 215, 232, 235, 241, 249, 250, 285, 288, 1067], "individualtrain": [160, 175, 335], "tage": [160, 335], "beginnend": [160, 335], "inhalt": [160, 163, 944, 1122], "51": 160, "58": 160, "94": [160, 173], "121": 160, "famou": [160, 417], "overload": [160, 218, 228, 249, 284, 520, 546, 553, 560, 700, 990, 992], "getter": [160, 498, 554], "setter": 160, "listcomprehens": 160, "express": [160, 173, 188, 205, 212, 238, 241, 253, 368, 370, 446, 464, 478, 649, 862, 973, 1031, 1090], "global": [160, 173, 183, 241, 291, 354, 360, 381, 383, 397, 434, 527, 528, 529, 558, 559, 560, 891, 966, 1012], "scope": [160, 183, 291, 713, 716, 966, 1012], "variabl": [160, 183, 196, 199, 209, 212, 220, 228, 235, 238, 250, 270, 274, 312, 340, 354, 357, 360, 381, 383, 389, 408, 464, 528, 555, 559, 685, 714, 805, 891, 920, 921, 928, 1001, 1012, 1036], "closur": [160, 183, 249, 266, 268, 269, 284, 290, 294, 684, 966, 968, 1098], "between": [160, 563, 1076], "walkthrough": 161, "reduc": [161, 365], "eight": 161, "color": 161, "pil": 161, "numpi": [161, 163, 190, 197, 237, 240, 259, 262, 273, 279, 291, 335, 1071, 1076], "cluster": 161, "excurs": [161, 237, 684], "matplotlib": [161, 190, 209, 241, 279, 1025, 1076], "now": [161, 173], "come": [161, 197, 432, 626, 947, 1071], "let": 161, "kmean": 161, "result": [161, 418, 1083], "properti": [161, 199, 228, 438, 439, 991], "center": 161, "restor": 161, "alpha": 161, "back": [161, 595, 1067], "rgba": 161, "random": [162, 199, 232, 237, 475, 488, 496, 1091], "type": [162, 188, 212, 215, 225, 228, 235, 244, 245, 247, 249, 250, 264, 266, 284, 287, 288, 292, 298, 313, 356, 358, 359, 363, 370, 395, 405, 410, 429, 439, 548, 577, 598, 599, 642, 643, 646, 657, 659, 696, 744, 753, 848, 855, 918, 968, 970, 983, 990, 1013, 1078], "except": [162, 199, 215, 218, 225, 228, 240, 241, 249, 259, 262, 266, 267, 284, 287, 328, 520, 567, 568, 636, 685, 692, 716, 970, 1098], "demonstr": 162, "dict": [162, 212, 220, 222, 228, 235, 989], "access": [162, 201, 348, 401, 402, 546, 554, 562, 628, 724, 757, 786, 787, 788, 984, 991, 1018, 1019], "indic": [162, 190], "slice": [162, 173, 188, 199, 222, 228, 232, 253, 274, 280, 810, 1008, 1092, 1094], "protocol": [162, 173, 188, 209, 212, 215, 220, 222, 225, 228, 238, 253, 266, 270, 274, 292, 670, 870, 934, 975, 977], "standardthemen": 163, "hauptthema": 163, "numerik": 163, "lesen": [163, 183], "mat": 163, "l\u00f6sen": 163, "uni": 163, "\u00fcbung": [163, 166, 183], "propos": 164, "posix": [164, 714, 915, 924, 937, 939, 940, 941, 942], "ipc": [164, 165, 335, 937, 939, 940, 941, 942, 1139], "virtual": [164, 237, 258, 530, 531, 532, 617, 619, 620, 744, 806, 810, 872, 940, 1058, 1107, 1108, 1109, 1139], "socket": [164, 873, 896], "applic": [164, 931], "your": [164, 257, 258, 405, 664, 819], "compani": 164, "thought": 164, "handgestrickt": 166, "um": 166, "fallen": 166, "lustvol": 166, "erleiden": 166, "programmier": 167, "baden": [167, 335], "w\u00fcrttemberg": [167, 335], "kursinform": 167, "kursaufbau": 167, "kursverlauf": [167, 175], "hand": 168, "our": [168, 879], "privat": [168, 199, 228, 439, 546, 618, 680, 800, 801, 823, 824], "makefil": [169, 499, 741, 751, 948, 949, 963], "argh": 170, "visual": [170, 197, 213, 418, 433, 1071, 1097, 1107], "studio": [170, 197, 213, 1071, 1097, 1107], "flatpak": 170, "issu": [170, 966], "m": 170, "bei": [172, 183, 335], "firma": [172, 335], "environ": [172, 237, 245, 247, 256, 258, 265, 266, 267, 324, 805, 928, 995, 1058, 1107, 1108, 1109, 1117], "driven": [172, 201, 226, 237, 240, 268, 269, 290, 291, 294, 335, 936, 1143], "dai": [172, 176, 177, 179, 180, 181, 191, 192, 201, 202, 207, 210, 212, 213, 216, 223, 256, 259, 262, 265, 266, 267, 268, 269, 273, 277, 279, 284, 290, 291, 294, 691, 1033, 1125], "advanc": [172, 176, 179, 188, 191, 200, 216, 226, 229, 240, 249, 252, 262, 268, 269, 270, 271, 272, 273, 278, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 335, 403, 1070, 1071, 1133], "18": [173, 175, 201, 220, 240, 252, 253, 267, 283, 317, 335, 961, 1098], "19": [173, 175, 179, 213, 229, 316, 317, 331, 333, 335], "sy": [173, 199, 804, 1000], "multilin": [173, 205, 209, 312, 1015], "docstr": [173, 220, 232, 235, 238, 260, 292, 312], "datentypen": [173, 183, 190, 203, 219, 231], "ausflug": [173, 222], "variablen": [173, 183, 190, 203, 219, 222, 231, 241], "deren": 173, "unterbau": 173, "zuweisung": 173, "mit": [173, 183, 188, 201, 335, 861, 1120, 1136], "hilf": 173, "tupl": [173, 178, 183, 188, 190, 196, 199, 209, 212, 215, 220, 222, 228, 232, 235, 238, 244, 245, 247, 250, 253, 260, 270, 274, 298, 311, 312, 642, 691, 696, 1003, 1011, 1079], "unpack": [173, 178, 183, 188, 190, 199, 215, 220, 232, 238, 244, 245, 247, 250, 260, 298, 311, 312, 642, 691, 959, 1079], "unendlich": 173, "breit": 173, "divis": [173, 183], "floor": [173, 183], "konvertierung": 173, "konstruktoren": [173, 190], "welchen": 173, "typ": [173, 183], "typen": 173, "besser": 173, "laufzeitverhalten": [173, 183], "geeigneter": 173, "datenstrukturen": [173, 183, 184, 204, 222, 1135], "boolean": [173, 183, 209, 212, 220, 222, 228, 232, 235, 362, 446, 1004, 1031, 1090], "short": [173, 212, 228, 362, 456, 753], "circuit": [173, 212, 228, 362], "evalu": [173, 212, 228], "warum": [173, 183], "sind": [173, 183], "mehr": [173, 188], "rang": [173, 178, 183, 190, 199, 205, 209, 212, 220, 222, 225, 232, 235, 238, 244, 245, 247, 250, 260, 274, 280, 291, 298, 576, 577, 642, 670, 690, 691, 692, 693, 694, 695, 973, 1010, 1025], "foli": 173, "161": 173, "shallow": [173, 222, 1011], "deep": [173, 222, 1011], "dem": [173, 1136], "deepcopi": 173, "funktionen": [173, 183, 184, 188, 1135], "first": [173, 202, 339, 489, 705, 734, 735, 769, 1107], "gotcha": [173, 751, 781, 935], "paramet": [173, 220, 222, 266, 313, 352, 388, 391, 394, 408, 426, 430, 655, 659, 694, 705, 773, 903, 948, 1013, 1083], "90": 173, "ff": 173, "lokal": [173, 183, 241], "92": 173, "uniq": [173, 1053, 1054], "punkt": [173, 183], "zusammengefasst": 173, "hier": 173, "sch\u00f6nere": 173, "al": [173, 183, 232], "comprens": 173, "125": 173, "lesbarkeit": 173, "perform": [173, 196, 416, 692], "review": [173, 202], "pprint": 173, "praktisch": 173, "debug": [173, 429, 771, 969], "datentransform": 173, "127ff": 173, "complet": [173, 520, 833], "collect": [173, 222, 225, 250, 947, 989, 1089, 1103], "namedtupl": [173, 989], "parameter\u00fcbergab": [173, 183], "variabel": 173, "lang": 173, "argumentlisten": 173, "erst": 173, "klass": 173, "weiterf\u00fchrend": [175, 197], "workspac": [176, 177, 179, 181], "core": [176, 213, 256, 948], "special": [176, 857], "tutori": [176, 179, 191, 197, 207, 237, 240, 273, 1071], "parti": [176, 207], "v": [178, 183, 190, 196, 199, 220, 225, 228, 232, 235, 241, 257, 260, 270, 274, 285, 311, 312, 350, 359, 371, 374, 378, 380, 429, 432, 539, 540, 541, 555, 701, 709, 751, 771, 772, 778, 779, 893, 929, 999, 1002, 1010, 1021, 1100], "return": [178, 241, 394, 652, 653, 655, 670], "orient": [178, 228, 241, 249, 252, 253, 266, 268, 269, 272, 273, 278, 284, 287, 290, 291, 294, 305, 424, 544, 615, 986, 1098], "addit": [179, 544, 560, 622, 987], "brought": 179, "thoma": 179, "cloud": [180, 314], "particip": 180, "desk": 180, "interlud": [180, 753], "bloodi": 180, "wild": [180, 229, 284, 287, 290], "watchdog": 180, "support": [180, 192, 645, 769], "25": [181, 191, 200, 207, 218, 223, 234, 276, 277, 284, 285, 286, 289, 335], "grundlegend": [183, 184, 1135], "sprachelement": [183, 184, 1135], "syntax": [183, 190, 196, 228, 238, 260, 274, 312, 685, 694, 999], "semantik": 183, "einr\u00fcckung": 183, "ihren": 183, "\u00e4ndern": 183, "kommentar": 183, "sprach": 183, "standarddatentypen": 183, "elementar": [183, 184, 1135], "beliebig": 183, "gro\u00df": 183, "vergleichsoperatoren": 183, "pr\u00e4zedenz": 183, "vor": 183, "strichrechnung": 183, "modulo": 183, "un\u00e4rer": 183, "negat": [183, 1090], "erzwingen": 183, "auch": 183, "zeichenketten": 183, "raw": [183, 190, 205, 209, 222, 228, 250, 280, 984, 1015, 1066], "f": [183, 205, 220, 238, 280, 1016], "konvertierungen": 183, "pr\u00e4zendenzregeln": 183, "literal": 183, "primit": [183, 708, 973], "konstanten": 183, "operatoren": 183, "ausdr\u00fcck": 183, "operatorrangfolgen": 183, "\u00fcbungen": [183, 1119], "zwei": 183, "vertauschen": 183, "kontrollstrukturen": [183, 184, 203, 219, 220, 231, 1135], "anweisungen": 183, "folgen": 183, "bedingungen": 183, "verzweigungen": 183, "bedingt": 183, "anweisung": 183, "verzweigung": [183, 184, 1135], "geschachtelt": 183, "mehrfach": 183, "fallauswahl": 183, "schleifen": [183, 184, 1135], "z\u00e4hlergesteuert": 183, "kopfgesteuert": 183, "schleif": [183, 188], "fu\u00dfgesteuert": 183, "jf": 183, "continu": [183, 218, 220, 259, 267, 269, 291, 377, 1006, 1009], "sequenti": [183, 188, 220, 232, 584, 585, 592, 593, 973, 1007], "schnell\u00fcbersicht": 183, "sprunganweisungen": 183, "endlosschleifen": 183, "ben\u00f6tigt": 183, "Suche": 183, "eindimensional": 183, "record": [183, 1065, 1067], "tupel": 183, "listen": [183, 188, 222, 312], "sort": [183, 235, 503, 582, 587, 588, 591, 1093], "revers": [183, 589, 590, 607, 608, 609, 990], "stapel": 183, "schlangen": 183, "versuch": 183, "zur\u00fcck": 183, "hybrid": 183, "supergscheit": 183, "methoden": [183, 184, 1135], "prozeduren": [183, 184, 1135], "funktionspoint": 183, "so": [183, 196, 199, 209, 241, 265, 424, 544, 642, 655, 657, 684, 1092], "heisst": [183, 188], "funktionsobjekt": 183, "primzahlenbeispiel": 183, "funktion": 183, "laufzeitfehl": 183, "existiert": 183, "zuweisen": 183, "fehlerfal": 183, "peter": 183, "unterprogramm": 183, "wert": 183, "referenzen": 183, "r\u00fcckgabewert": 183, "oder": [183, 318, 1120], "inner": [183, 966], "standardbibliotheken": 183, "built": [183, 266, 548, 646, 751, 970], "funktionalit\u00e4ten": 183, "struktur": 184, "herdt": [184, 1135], "kapitel": [184, 1135], "ganz": [188, 220], "kurz": 188, "mehreren": 188, "returnwerten": 188, "bzw": [188, 318], "containerdatentypen": 188, "untypisiert": 188, "l\u00f6schen": 188, "begriff": 188, "zufal": 188, "regular": [188, 201, 202, 238, 241, 253, 862], "hallo": 190, "speicher": 190, "sch\u00fctze": 190, "ich": 190, "davor": 190, "aber": 190, "gemischten": 190, "wiederholung": [190, 225], "objektidentit\u00e4t": 190, "statement": [190, 199, 371, 385, 966, 968, 981, 999, 1005, 1083, 1086], "operationen": 190, "verloren": 190, "interpol": 190, "mittel": [190, 196], "scipi": 190, "shell": [192, 256, 277, 314, 335, 805, 816, 818, 834, 846, 847, 853, 885, 902, 911, 926, 1121], "script": [192, 277, 335, 880, 911, 978, 997, 1121], "29": [192, 266, 317, 325, 335], "assign": [196, 222, 228, 235, 312, 367, 464, 545, 551, 552, 652, 653, 655, 700, 966, 1001, 1008, 1012, 1088], "fun": [196, 235, 249, 1001], "arithmet": [196, 201, 220, 232, 312, 340, 361, 390, 464, 478, 537, 560, 573, 574, 578, 581, 990, 1002], "complex": [196, 235, 312, 1117], "nur": 196, "sum": [196, 626], "weiter": 196, "dynamisch": 196, "evaluierung": 196, "scienc": [197, 223, 237, 240, 273, 290, 291, 292, 294, 1071], "don": [197, 692, 1071], "batteri": [197, 312, 1017, 1071], "confer": [197, 273, 1071], "talk": [197, 273, 871, 877, 878, 1071], "zipfil": 199, "One": [199, 238, 264, 309, 366, 385, 424, 426, 559, 692, 705, 786, 871, 889, 922, 947, 963], "member": [199, 228, 546, 551, 552, 554, 559, 628, 629, 646], "attribut": [199, 225, 241, 298, 810, 913, 984, 991, 1096], "protect": [199, 618, 692, 763], "posit": [199, 544, 964, 993, 1023], "keyword": [199, 220, 244, 245, 247, 298, 313, 407, 408, 966, 993, 1013], "argument": [199, 220, 228, 249, 284, 313, 391, 900, 926, 969, 993, 1000, 1013, 1023], "mix": [199, 212, 280, 685, 1047, 1048], "yield": [199, 215, 220, 238, 266, 280, 973, 976], "filter": [199, 228, 257, 258, 264, 292, 504, 505, 506, 692, 1090], "nonetyp": [199, 212], "none": [199, 220], "recurs": [199, 393, 552, 649, 724, 835], "fibonacci": [199, 670, 672, 974, 1041], "sever": 199, "same": [199, 528, 553, 559, 684, 1012, 1106], "oserror": 199, "errno": [199, 891], "platform": [199, 877], "assert": [199, 241, 292], "assertionerror": 199, "27": [200, 218, 234, 284, 285, 286, 289, 335], "predefin": [200, 385, 1117], "stream": [200, 744, 815, 1021], "pcap": [200, 213, 215, 226, 1098], "syllabu": [200, 213, 1098], "programmieren": [201, 335], "tool": [201, 274, 277, 292, 319, 798, 863, 866, 877, 1132], "massacr": 201, "group": [201, 202, 216, 249, 256, 268, 269, 284, 287, 290, 291, 294, 323, 355, 370, 379, 386, 392, 396, 399, 403, 412, 416, 421, 422, 542, 550, 565, 568, 571, 612, 621, 640, 682, 683, 707, 715, 719, 723, 725, 810, 818, 827, 867, 875, 876, 930], "kick": 201, "encapsul": [201, 410, 550, 716], "flow": [201, 231, 237, 252, 259, 262, 272, 273, 278, 279, 379], "pointer": [201, 202, 218, 244, 245, 247, 265, 267, 298, 387, 388, 390, 392, 408, 520, 537, 552, 556, 557, 573, 574, 575, 577, 578, 581, 601, 642, 657, 697, 698, 699, 700, 702], "standard": [201, 213, 218, 222, 237, 265, 267, 273, 358, 405, 429, 507, 567, 577, 610, 621, 623, 650, 815, 899, 1021, 1071, 1114], "librari": [201, 213, 218, 237, 265, 267, 273, 352, 427, 432, 433, 437, 507, 567, 577, 610, 621, 650, 893, 964, 965, 1071, 1139], "stl": [201, 520, 536, 537, 538, 569, 577, 578, 606], "07": [202, 218, 249, 282, 283, 317, 321, 335], "kid": 202, "recapitul": 202, "some": [202, 220, 225, 264, 267, 277, 685, 716], "jump": [202, 390], "complic": [202, 469, 963], "Be": [202, 443, 447, 448, 552, 557, 611, 703, 708], "toolbox": 202, "databas": [202, 294, 627, 751, 1027, 1029, 1064, 1080, 1081, 1083], "gtest": [202, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118], "smart": [202, 218, 244, 245, 247, 267, 298, 520, 697, 698, 699, 700], "datenbank": 204, "showcas": 204, "full": 204, "kommt": 204, "db": 204, "aufgab": 204, "formulieren": 204, "damit": 204, "dies": 204, "http": [204, 292], "verbindung": 204, "client": [204, 480, 1087], "schicken": 204, "jetzt": 204, "schickman": 204, "weg": 204, "vom": [204, 335], "server": [204, 1087], "php": 204, "j": 204, "empfangen": 204, "nun": 204, "muessen": 204, "verwandlen": 204, "liter": [205, 312, 464, 716, 717], "quot": [205, 209, 235, 1079], "friend": [205, 712], "sinc": [205, 238, 244, 245, 247, 298, 559, 1016], "pars": [205, 1000, 1023, 1049], "sap": [206, 259, 261, 262, 263, 264, 301, 335], "export": 206, "solut": [206, 382, 404, 427, 436, 442, 443, 444, 447, 448, 453, 462, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 552, 579, 609, 646, 648, 655, 679, 680, 689, 810, 829, 888, 890, 894, 963, 965, 981, 1108], "terminologi": [209, 277, 807, 945, 1078], "31": [210, 218, 226, 335], "numer": 210, "ai": 210, "mountain": 210, "io": [212, 228, 256, 260, 413, 757, 758, 813, 913], "common": [212, 414, 426, 592, 974, 983], "wtf": [212, 897, 945], "creativ": [215, 799, 987], "shift": [215, 366, 560], "sampl": [215, 705, 775, 830, 1028, 1049, 1070, 1098, 1105, 1130], "hmmm": 216, "02": [218, 223, 237, 256, 329, 335, 812], "undefin": [218, 1012], "behavior": [218, 694], "again": [218, 266, 277, 554, 641, 853, 990, 1121], "26": [218, 248, 255, 268, 269, 270, 271, 290, 291, 293, 317, 335], "repeat": [218, 845], "quickli": 218, "algorithm": [218, 235, 259, 267, 298, 390, 503, 520, 537, 572, 573, 577, 578, 587, 591, 1076, 1078], "functor": [218, 520, 585, 684, 686, 687, 705], "unifi": 218, "model": [218, 1076, 1078], "uml": [218, 456], "todai": [218, 966], "associ": [218, 369, 456, 596, 597], "dynam": [218, 249, 268, 269, 270, 290, 294, 298, 397, 524, 525, 526, 578, 611, 612, 729, 759, 760, 964, 984, 993], "alloc": [218, 414, 534, 579, 604, 605, 612, 744, 767, 909, 973], "week": 218, "zahl": 220, "miscellanea": 220, "brace": [220, 244, 245, 247, 298, 644, 645, 646, 647, 1090], "singl": [220, 427, 452, 889, 947, 1112], "hour_of_dai": 220, "membership": [220, 1007], "best": 220, "intro": [222, 256, 317, 536, 537, 538, 913, 967], "doc": [222, 292], "ident": [222, 285], "datenypen": 222, "libarari": 222, "chainmap": 222, "dequ": 222, "suchalgorithmen": 222, "pitfal": [222, 265, 268, 313, 548, 617, 642, 670, 687], "fromkei": [222, 235], "join": [222, 228, 1017, 1044], "lstrip": [222, 309], "rstrip": [222, 309], "sequentiel": 225, "konstant": 225, "suchzeit": 225, "metaprogram": 225, "everywher": [225, 241, 552, 971], "defaultdict": [225, 250], "hello": [228, 238, 339, 674, 751, 752, 997], "world": [228, 339, 346, 751, 752, 997], "blahblah": [228, 232, 235, 238, 577, 996], "mqtt": [228, 291, 294, 1065, 1087], "commandlin": [228, 256, 294, 303, 308, 391, 419, 426, 833, 888, 911, 945, 1000, 1023], "lifetim": [228, 354, 383, 687, 701, 709, 1080], "preview": [228, 437], "explicit": [228, 348, 544, 556, 647, 685, 687, 700, 713, 981], "max": 228, "iteratoren": 228, "generatoren": 228, "ordereddict": 228, "duck": [228, 244, 245, 247, 284, 287, 298, 983], "resolut": 228, "order": [228, 528, 970, 990], "mro": 228, "super": 228, "__bases__": 228, "__mro__": 228, "self": [228, 552, 985], "call": [228, 384, 388, 414, 418, 420, 520, 776, 893, 899, 928, 934, 993], "mangl": [228, 553], "udemi": 228, "claus": [228, 268, 290, 294, 970], "lambda": [228, 244, 245, 247, 274, 298, 642, 683, 684, 685, 686, 705, 1098], "oppos": 228, "20": [229, 243, 247, 265, 267, 278, 279, 280, 298, 309, 317, 335, 961], "discuss": [231, 268, 269, 323, 348, 350, 714, 776, 781, 789], "chart": 231, "interact": [232, 280, 997, 1048], "1st": 232, "explan": [232, 292], "preced": [232, 235, 369, 1002], "float": [232, 235, 292, 1002], "einschub": 232, "vergleich": 232, "filterketten": 232, "zen": 232, "datensatz": 232, "notat": 232, "letzt": 232, "letzten": 232, "infinit": [235, 974], "long": [235, 642], "comparison": [235, 544, 591, 724, 798, 990, 1002], "digit": [235, 317, 1038], "english": [235, 319, 1038], "determin": [235, 819, 1035, 1045, 1046], "maximum": [235, 1035, 1045, 1046], "two": [235, 389, 482, 483, 544, 563, 647, 941, 1035, 1036, 1045, 1046], "out": [235, 268, 269, 449, 547, 576, 577, 935, 949, 966, 1008], "duplic": [235, 427, 569, 902], "encod": [235, 237, 238, 249, 259, 279, 280, 317, 1084], "nest": [238, 380, 393], "onli": [238, 264, 390, 657, 705, 746, 1040], "itertool": 238, "chain": [238, 776], "destructor": [238, 528, 534, 549, 614, 619, 699], "prient": 240, "next": [240, 413, 678, 1112], "standesregist": 240, "sqlite3": [240, 430, 1027, 1083], "xml": [240, 1096], "tree": [240, 746, 773, 811, 837, 844, 882, 889, 928], "projektabschlusstag": 240, "id": [241, 269, 810, 830, 890, 916, 928, 1120], "anyth": 241, "defin": [241, 436, 548, 685, 970], "own": [241, 426, 654, 664, 810], "lookup": [241, 512, 513], "vorbesprechung": 243, "legend": 243, "neuerungen": 243, "seit": 243, "2011": [243, 244, 245, 247, 335], "ausblick": 243, "thank": [244, 245, 247, 298], "you": [244, 245, 247, 298, 657], "readablil": [244, 245, 247, 298], "writabl": [244, 245, 247, 298, 900], "err": [244, 245, 247, 298, 601, 691], "bind": [244, 245, 247, 298, 691, 696, 704, 705, 1083], "auto": [244, 245, 247, 298, 642, 657, 690, 691, 920, 1106], "without": [244, 245, 247, 298, 558, 579, 653, 909], "simpli": [244, 245, 247, 298, 890], "deserv": [244, 245, 247, 298], "ag": [244, 245, 247, 298, 632], "overrid": [244, 245, 247, 298, 689], "delet": [244, 245, 247, 298, 525, 594, 680, 833], "strongli": [244, 245, 247, 298, 643], "enum": [244, 245, 247, 298, 406, 643, 741], "deleg": [244, 245, 247, 298, 648], "nullptr": [244, 245, 247, 298, 656], "rvalu": [244, 245, 247, 651, 654, 655], "skeleton": [245, 247, 265, 267, 562, 800, 801], "perfect": [247, 364, 406, 704], "view": [247, 645, 692, 694, 695, 737, 799], "architectur": [248, 335, 424, 642, 681, 773], "pattern": [248, 266, 268, 269, 335, 448, 462, 974, 1128], "mondai": 248, "tuesdai": 248, "wednesdai": 248, "forc": [249, 363], "front": [249, 268, 290, 984], "seri": [249, 252, 272, 273, 278, 279, 520, 1057, 1064, 1089], "piec": 249, "go": [249, 902, 1079], "kickoff": [249, 268, 269, 284, 287, 291, 294], "livehack": [249, 258, 426, 449, 651, 736, 1012, 1100, 1107], "Such": [250, 622, 655], "noob": 252, "wsl": [256, 265, 267, 812, 961], "quick": 256, "permiss": [256, 277, 818, 820, 821, 822, 828, 832, 851, 882], "uart": [256, 804], "susi": 256, "untold": [256, 259, 265, 266, 269], "whet": [257, 258], "appetit": [257, 258], "panda": [257, 259, 260, 262, 264, 266, 279, 291, 1076, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095], "regex": 257, "pipelin": 258, "categori": 258, "payment": 258, "select": [258, 264, 266, 870, 877, 937, 1089, 1090, 1092, 1094, 1112], "uncategor": 258, "dataset": [259, 263, 264, 1075, 1077], "origin": [259, 262, 569, 686, 687, 783, 1079], "automat": [259, 262, 282, 360, 383, 679, 1127], "cleanup": [259, 262, 781, 792], "conversiosn": 260, "outlook": [262, 298], "specif": [262, 922, 1059], "usecas": 264, "drop": [264, 444, 692], "column": [264, 1089, 1090, 1092, 1093, 1094, 1095], "nan": 264, "datafram": [264, 1076, 1089, 1093], "isna": 264, "to_datetim": 264, "dated": 264, "workabl": 264, "usag": [264, 269, 393, 397, 420, 436, 440, 485, 500, 546, 583, 584, 590, 617, 645, 649, 657, 701, 702, 703, 732, 776, 816, 855, 872, 879, 903, 947, 1025], "modifi": [264, 401, 408, 485, 919, 981, 1011, 1095], "increas": 264, "price": 264, "particular": 264, "store": [264, 401, 449, 919, 981], "readabl": [264, 404, 716, 905], "combin": [264, 367, 463, 464, 477], "prefer": [265, 267], "ubuntu": [265, 267, 961], "under": [265, 267, 835, 895, 968], "unsupport": 265, "heavi": [265, 267, 809], "weight": [265, 267], "resourc": [265, 319, 552, 612, 700, 713, 769], "r": [265, 852, 889], "littl": [265, 375, 426, 996], "concurr": 265, "far": [265, 709, 1078], "fact": [266, 755, 817, 984, 987], "fixtur": [266, 501, 724, 1105, 1106, 1116, 1117, 1118], "omin": [266, 969], "warm": 267, "resolv": 267, "cont": 267, "d": [267, 449], "insid": [268, 269, 554, 559, 654, 655], "construct": [268, 290, 294, 989, 1006], "emphasi": [268, 290, 294], "recoveri": [268, 269, 290, 291, 294], "broader": 268, "sens": 268, "morn": [269, 273, 277, 279, 291], "pytest": [269, 1104, 1105], "awaken": 273, "bash": [277, 335, 853, 1121], "bourn": [277, 853, 1121], "inspect": [277, 860, 863], "wakeup": [277, 279, 933, 935], "redirect": [277, 813, 814, 815, 816, 839, 852, 902], "pipe": [277, 694, 799, 813, 814, 816, 817, 864, 866], "archiv": [277, 795, 796, 798, 799, 961, 962, 965], "compress": [277, 795, 796, 798, 799], "network": [277, 466, 767, 768, 871, 896, 1142], "least": [277, 1112], "day2": 279, "interpret": [280, 418, 450, 463, 464, 477, 478, 1048], "len": 280, "abl": 280, "callabl": [280, 705], "summer": [284, 287, 320], "sandbox": [284, 287], "equal": [285, 498, 544, 560, 561, 562, 563, 564, 584, 990], "spoiler": 287, "annot": 288, "multiprocess": 290, "idea": 290, "veri": [291, 689, 1096], "leftov": 291, "yesterdai": 291, "ifi": 291, "toolcas": [291, 298, 660, 661, 662], "arg": [291, 969], "kwarg": [291, 969], "includ": [291, 384, 438, 1017], "receiv": [291, 941], "udp": 291, "datagram": [291, 871], "compositesink": 291, "sink": 291, "timestamp": [291, 781], "org": [292, 317], "aaarghhh": 292, "expresss": 292, "constexpr": [298, 649], "constinit": 298, "constev": 298, "semant": [298, 651, 652, 653, 654, 655, 941], "erasur": 298, "versu": [298, 964], "static": [298, 383, 407, 498, 558, 559, 963, 964, 965, 988], "checker": 302, "blinklicht": [303, 304, 305, 306], "electron": [303, 870], "aspect": 303, "circuitri": 303, "header": [303, 382, 428, 434, 559, 877, 1060], "pinout": [303, 877], "unittest": [306, 1106, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1143], "ece19": 307, "g2": [309, 801], "big": [309, 335, 761], "swoop": 309, "size": [309, 358, 517, 667, 849], "chunk": 309, "line": [309, 353, 385, 547, 816, 833, 999, 1040, 1051, 1055], "str": [309, 992], "byte": 311, "btw": 312, "wertebereich": 312, "sidenot": [313, 1013], "pure": [313, 617, 619, 1013], "beauti": [313, 420, 804, 879, 1013], "login": [314, 808, 880], "formalit\u00e4ten": 315, "ec": [316, 331, 333, 800, 801], "daili": 317, "pass": [317, 557], "fail": [317, 904, 1105, 1112, 1114], "reiter": 317, "argpars": [317, 1000, 1023], "onc": 317, "deutsch": [318, 335], "lehrinhalt": 318, "lernergebniss": 318, "lv": 318, "empfohlen": [318, 1121, 1123, 1124, 1129, 1131, 1132, 1136, 1137, 1138, 1139, 1141, 1142, 1143], "verpflichtend": 318, "fachliteratur": 318, "lernressourcen": 318, "instrument": 318, "art": 318, "vermittlung": 318, "voraussetzungen": 318, "begleitbedingungen": 318, "pr\u00fcfungsmethod": 318, "beurteilungskriterien": 318, "mode": [319, 429, 818, 870, 903, 997, 1021], "deliveri": [319, 944, 945], "co": 319, "requisit": 319, "assess": 319, "criteria": [319, 929], "whose": 321, "fault": 321, "newcom": 322, "jjjj": 325, "sidewai": [326, 559, 705, 716, 969, 974], "bisher": 335, "gehalten": 335, "entwickl": 335, "fortgeschritten": [335, 1123], "wiener": 335, "neustadt": 335, "einf\u00fchrung": [335, 1122, 1124, 1131], "ober\u00f6sterreich": 335, "pictur": [335, 761], "obersteiermark": 335, "korn": 335, "salzburg": 335, "ausgew\u00e4hlt": 335, "themen": 335, "2018": 335, "raum": 335, "n\u00fcrnberg": 335, "oberb\u00fcren": 335, "schweiz": 335, "2017": 335, "m\u00fcnchen": [335, 1120], "lowlevel": 335, "refresh": 335, "programmiererstandpunkt": 335, "2016": 335, "wien": 335, "workshop": 335, "bodenseo": 335, "hemmenhofen": 335, "bodense": 335, "systemnah": 335, "2014": 335, "mathia": 335, "kettner": 335, "siemen": 335, "braunschweig": 335, "intermedi": [335, 475, 966, 983], "scratch": [335, 1120], "lpd": 335, "hannov": 335, "unter": 335, "k\u00f6ln": 335, "projektverwaltung": 335, "subvers": [335, 1137], "lka": 335, "niedersachsen": 335, "konfigur": 335, "gnu": [335, 418, 947, 1132], "make": [335, 432, 499, 641, 680, 757, 800, 801, 948, 949, 1132], "2012": 335, "hamburg": 335, "fehlerdiagnos": 335, "polizei": 335, "stia": 335, "admont": 335, "bi": 335, "2010": 335, "softwareentwicklung": 335, "darmstadt": 335, "ulm": 335, "bundeswehr": 335, "wildflecken": 335, "cool": [338, 1016], "gui": 338, "Their": [338, 358], "hobbi": 338, "histori": [338, 543, 641, 737, 941, 966, 996, 1075], "second": [340, 342], "fahrenheit": [341, 343, 345, 472], "tabl": [341, 343, 345, 498, 990], "simplif": 342, "constant": [344, 359, 384, 414, 475], "preprocessor": [344, 384, 385], "macro": [345, 384, 385, 434, 732, 753], "outsid": 346, "cat": [346, 858], "poor": [346, 347], "wc": 347, "definit": [348, 350, 352, 360, 378, 380, 381, 384, 436, 559, 642, 732, 933, 1010], "memset": 348, "histogram": 349, "nonsens": 350, "signatur": 350, "declar": [350, 351, 380, 381, 382, 559], "mistak": 352, "stdin": [353, 866, 880], "variant": [358, 447, 453, 642, 718, 941], "qualifi": 358, "width": [358, 390, 564, 577, 878, 1008], "escap": [359, 1015], "logic": 362, "implicit": [363, 702], "sign": 363, "truncat": [363, 909], "propag": 363, "unsign": 363, "compil": [363, 380, 385, 401, 402, 427, 428, 429, 545, 548, 552, 681, 702, 753, 773, 947, 950, 959, 963], "warn": [363, 369, 385, 923, 945], "cast": 363, "increment": [364, 577, 670, 981], "decrement": [364, 577], "confus": [364, 1002, 1090], "manipul": [366, 702, 909, 945], "bitwis": [366, 1090], "AND": 366, "OR": 366, "xor": 366, "right": [366, 1052], "invert": [366, 1089], "complement": 366, "summari": [369, 544, 705, 773, 799, 964, 984, 1092, 1094], "true": [372, 447, 557, 1093], "fals": 372, "truth": 372, "option": [372, 419, 434, 435, 436, 799, 833, 835, 855, 862, 877, 889, 1079], "matter": 373, "distinct": 374, "purpos": [375, 913], "closer": 375, "comma": 375, "infam": 375, "idiom": 375, "bodi": 376, "goto": 378, "label": [378, 1094], "monolith": [380, 427, 449, 502], "separ": [380, 381, 427, 449, 714, 857, 963], "visibl": [383, 407], "replac": [384, 487], "inlin": [384, 414, 547, 559], "guard": 384, "rule": [385, 424, 545, 548, 559, 647, 655, 692, 811], "span": 385, "stringif": [385, 992], "token": 385, "address": [387, 744, 787, 810, 877, 931, 1090], "arbitrari": [390, 577, 969, 993], "see": [391, 804, 809, 810, 815, 816, 895, 896, 897, 899, 926, 929, 933, 935, 1014, 1078], "struct": [393, 394, 409, 544, 633, 696], "typedef": 395, "alia": 395, "singli": 398, "volatil": [400, 834], "lie": 400, "valid": 400, "handler": [400, 944, 945], "intrins": 401, "atom": [401, 711, 716, 771, 772, 776, 777, 792, 918], "builtin": 401, "align": 402, "unalign": 402, "pad": 402, "saniti": [404, 412, 426], "readabilti": 404, "shoot": 404, "offens": 404, "unobvi": 404, "ambigu": [404, 410, 647], "smell": 404, "know": 405, "size_t": 405, "discret": 406, "tradit": [406, 424, 993], "approach": [406, 434, 435, 436], "wishlist": 406, "close": [406, 452, 697, 941], "somewhat": 407, "contriv": 407, "hoorai": 407, "correct": [408, 555, 689], "const": [408, 517, 534, 554, 555, 557, 629, 630, 642, 657, 691, 696], "non": [408, 491, 492, 493, 494, 495, 496, 497, 534, 554, 1112], "good": [409, 434, 435, 544, 559, 577, 646, 655, 664, 665, 692, 694], "old": [409, 559, 577, 642, 655, 664, 665, 694], "c99": 409, "explict": 410, "safeti": [410, 426], "scheme": 410, "artifici": [410, 1072], "valgrind": [411, 525], "action": [411, 945], "optim": [413, 414, 415], "bound": [413, 414, 525, 929], "unnecessari": 414, "peephol": 414, "subexpress": 414, "elimin": [414, 702, 1040], "strength": 414, "reduct": 414, "fold": 414, "invari": 414, "unrol": 414, "tail": [414, 864], "cpu": [414, 810, 929, 935], "cach": [415, 436, 692], "multidimension": 415, "thrash": 415, "profil": [417, 418, 420, 421], "donald": 417, "knuth": 417, "toni": 417, "hoar": 417, "larri": 417, "wall": 417, "practic": 417, "brian": 417, "w": 417, "kernighan": 417, "rob": 417, "pike": 417, "gprof": 418, "flat": 418, "callgrind": 419, "analysi": 419, "per": [419, 741, 781, 1117], "kcachegrind": 419, "oprofil": 420, "much": [420, 435, 686, 968], "wide": 420, "offlin": 420, "graphic": 420, "accomplish": 424, "disclaim": [424, 812], "principl": [424, 452], "yagni": 424, "uncl": 425, "bob": 425, "typic": [426, 811, 915, 931], "bookkeep": 426, "effort": 426, "spaghetti": 426, "request": [426, 732, 734, 753, 755, 913], "concaten": [426, 1088], "input": [426, 815, 973, 1076], "yyyi": 426, "mm": 426, "where": [426, 432, 809, 947], "testabl": 426, "explicitli": [426, 685, 702], "categor": 426, "net": 426, "place": [426, 503, 548, 589, 800, 801, 1011], "overengin": [426, 559], "boilerpl": [427, 686, 769], "execut": [427, 433, 818, 964, 970, 978, 998, 1047, 1112, 1114], "consist": [427, 744], "paus": 429, "diagram": 429, "cmake_build_typ": 429, "k": [429, 1073], "printf": [429, 546], "popular": [429, 805], "find_packag": 430, "prefix": [432, 969], "target": [432, 433, 435, 438, 439, 501, 907, 948, 1127], "runpath": 432, "abi": 432, "blacklist": [434, 435], "flag": [434, 623, 759, 899, 1016], "libhello": 434, "bad": [434, 435, 692, 742], "push": 435, "target_compile_definit": 435, "backlist": 435, "availablil": 435, "use_blacklist": 436, "normal": 437, "subdirectori": 438, "reorgan": 438, "i2c": [442, 877, 879], "subhierarchi": 442, "instanti": [442, 449, 598, 659, 739], "adapt": [443, 449, 458, 463, 465, 472, 477, 705], "must": [443, 906], "adapte": 443, "asensor": 443, "real": [443, 551, 642, 703, 830], "measur": [443, 486, 717, 933, 935], "motiv": [444, 447, 463, 464, 560, 643, 646, 648, 657, 659, 684, 690, 793, 975, 985, 991], "insert": [444, 510, 511, 594, 595, 598, 599, 600, 634, 704, 720, 721, 761], "bulk": 444, "6a": 444, "initializer_list": [444, 645, 647], "socialdb": 445, "composit": [446, 456, 460, 474, 724], "filesystem": [446, 724, 941], "thermomet": [446, 466, 467, 480, 481, 500], "aggreg": [447, 456, 646], "conret": 447, "realiz": 447, "situat": [447, 890], "constantsensor": 447, "decoratedconstantsensor": 447, "randomsensor": [447, 488], "decoratedrandomsensor": 447, "verifi": [447, 845, 879, 881, 1076], "still": [447, 642, 968, 973], "hold": [447, 989], "studi": [449, 690, 691, 958], "heat": 449, "pull": 449, "dbuslogg": 449, "dbusvaluestor": 449, "either": 449, "stop": [449, 700], "help": [449, 833, 865, 1100, 1107], "observ": [451, 479, 975], "which": [452, 906, 947], "liskov": 452, "substitut": [452, 557], "segreg": 452, "invers": [452, 934], "proxi": [453, 463, 466, 467, 477, 480, 481], "foundat": 454, "hierarchi": [454, 567, 811, 970], "hypothet": [454, 990], "singleton": [455, 468, 469, 470, 482, 483, 484], "connector": 456, "uniniti": [464, 557], "round": [467, 481], "flexibl": [468, 469, 482, 483], "strict": [469, 483], "inflex": [470, 484], "i2csensorfactori": 471, "concret": [471, 482, 483], "i2csensorfactory_vendor1": 471, "stub": [480, 780], "socialinsur": [482, 483], "oegk": [482, 483], "sv": [482, 483], "introduc": [485, 546, 692], "relationship": [485, 619, 620, 1076], "onewir": [485, 501, 502, 879, 907], "firstnam": 485, "lastnam": [485, 635, 637], "w1sensor": [485, 502], "answer": [485, 684], "try": [489, 567, 700, 970], "ledstripedisplay_nopoli": 491, "cover": [491, 492, 493, 494, 495, 496, 497, 500], "hysteresis_nopoli": 492, "averagingsensor_nopoli": 493, "constantsensor_nopoli": 494, "mocksensor_nopoli": 495, "randomsensor_nopoli": 496, "mock": 497, "shape": [498, 833], "procedur": 498, "circl": 498, "area": [498, 564], "squar": 498, "massag": 499, "sub": 499, "notfound": 501, "find_is_const": 501, "isol": [501, 1080, 1117], "realiti": 501, "pc": 501, "greater": 505, "odd": 506, "overwrit": 510, "sunni": [511, 513, 516, 900, 904, 905, 906], "uniquifi": 518, "transcript": 520, "malloc": 525, "free": 525, "mismatch": [525, 890], "across": 528, "ownership": [533, 534, 535, 702, 818], "raii": [533, 534, 535, 713], "dealloc": 534, "naiv": [537, 558, 609, 789, 944, 974, 1089], "ol": [544, 691], "look": [544, 895, 896, 897], "distanc": [544, 563], "length": 544, "manual": [545, 548, 552, 705, 833, 893, 911, 914, 975], "specifi": [546, 900], "otherwis": 546, "lifecycl": 549, "dragon": [552, 708], "memberwis": 552, "straighforward": 552, "correctli": 552, "underli": [553, 643], "mechan": 553, "just": 553, "pollut": 555, "hidden": [556, 855], "cannot": 557, "easili": 557, "odr": 559, "litt": 559, "defnit": 559, "ostream": [560, 561, 562, 563, 564], "cout": 560, "cuboid": 561, "upon": [561, 563, 564], "point3d": [561, 563], "surfac": 561, "volum": [561, 961], "unari": [562, 563], "rectangl": [563, 564], "coordin": [563, 564], "absolut": [563, 724, 857, 1070], "height": 564, "catch": [567, 970], "throw": 567, "spirit": [577, 701, 702, 703], "pre": [579, 646], "destin": [579, 900], "back_insert_iter": 579, "binary_search": 582, "intellig": [582, 588, 977, 1072], "find_if": [585, 635], "customiz": 585, "for_each": 586, "lower_bound": 588, "reverse_copi": [590, 609], "characterist": [592, 595], "modif": [595, 963], "fill": [598, 1083], "definin": 599, "subscript": 600, "eras": 601, "multimap": 603, "deriv": [613, 614], "larger": [617, 965, 973], "want": [617, 642, 653, 657, 680, 741, 746, 904, 987], "substr": [622, 1017], "paint": 623, "american": 623, "onto": 623, "moodl": [624, 806, 820, 821, 846, 953], "quiz": [624, 806, 820, 821, 846, 953], "cin": 626, "n": 632, "year": 632, "transform": [633, 705, 721, 973], "wrong": [636, 716, 900], "great": [641, 931], "around": [642, 670], "school": 642, "item": [642, 704, 720, 721, 722, 968, 974], "inevit": 642, "union": [642, 718], "consider": [642, 931], "uniform": 644, "implementor": 645, "direct": [645, 744], "inconsist": 646, "heap": 646, "refus": 646, "narrow": 646, "mess": [647, 1084], "realist": [647, 971, 1105], "int": [647, 926], "nicolai": 647, "josutti": 647, "complain": 647, "said": 650, "guidelin": 650, "well": 650, "smartptr": 652, "lvalu": [655, 704], "wish": [655, 983], "theori": 655, "Ones": 655, "sai": [657, 835], "decai": 657, "chosen": 659, "rescu": [659, 684, 706, 949, 969, 990, 1095], "syntact": [659, 969], "variat": [659, 691, 696, 773], "conceptless": [660, 661], "fulfil": 664, "has_siz": 664, "index_returns_doubl": 664, "func": 665, "ret": 668, "doubl": 668, "foreword": 670, "prototyp": 670, "examp": 670, "explain": 670, "drive": [670, 870], "anatomi": [670, 751], "resum": 670, "suspens": 670, "caller": 670, "co_yield": 670, "mimick": 670, "fibo": 671, "suspend": [676, 677, 678], "decis": [681, 929], "cleanli": 681, "care": 684, "handwritten": [686, 687], "proggi": 686, "morph": 686, "possibl": 687, "temporari": [687, 968, 1105], "made": 687, "hard": [689, 854], "aris": 689, "gool": 691, "prevent": [691, 702], "accident": [691, 721], "dangl": 692, "easi": [692, 709], "constraint": 692, "dogmat": 692, "sigh": 692, "storag": [694, 922], "abbrevi": 694, "avail": [694, 732], "compat": 696, "unique_ptr": [698, 701, 702], "shared_ptr": [698, 701, 721], "handwrit": 700, "ctor": 700, "auto_ptr": 700, "mayb": 700, "uniqu": [701, 722], "But": [701, 904], "juggl": 701, "make_shar": 701, "cyclic": 701, "chanc": 702, "leakag": 702, "keystrok": 702, "make_uniqu": 702, "acknowledg": 702, "prove": 702, "weak_ptr": [703, 721], "borrow": 703, "invalid": 703, "univers": 704, "dual": 704, "bag": [704, 720, 721, 722], "null": 705, "pointlessli": 705, "hardcod": [705, 737], "placehold": 705, "classic": 706, "upsid": 706, "technic": 706, "downsid": 706, "joinabl": 709, "detach": [709, 916], "cornercas": 709, "recursive_mutex": 712, "timed_mutex": 712, "recursive_timed_mutex": 712, "lock": [713, 716, 765, 778], "unlock": [713, 778], "consid": 713, "acquisit": [713, 1057], "lock_guard": 713, "condition_vari": 714, "safe": [714, 945], "predic": [714, 920], "concern": 714, "promis": 716, "chrono": [716, 717], "utterli": 716, "becom": [716, 965], "readi": 716, "minim": 716, "pro": 716, "clock": 717, "sleep": [717, 771, 776, 777], "rel": [724, 857, 978], "compon": 724, "creation": [724, 805, 916, 917], "create_directori": 724, "entri": 724, "classif": 724, "is_xxx": 724, "directory_entri": 724, "modern": [728, 729, 730, 1125], "slideshow": [729, 732, 734, 737, 739, 742, 744, 751, 753, 755, 757, 759, 761, 763, 765, 767, 769, 771, 776, 778, 781, 783, 787, 790, 793, 941, 945, 1013, 1101, 1108], "hook": 731, "necessari": 731, "ioctl": [731, 732, 734, 753, 786, 899], "vtabl": 732, "kernelspac": 732, "_io": [732, 753], "major": [736, 737], "minor": [736, 737], "space": [737, 787, 806, 809, 810, 931], "hair": 741, "pretti": 741, "wswitch": 741, "dma": [744, 745, 769], "physic": 744, "scatterlist": 744, "sync": 744, "when": 746, "explod": 746, "loadabl": 751, "init": [751, 769, 811, 1120], "exit": [751, 880, 916, 926], "unload": 751, "raspi": [753, 754, 890], "legaci": [753, 1043], "api": [753, 783, 915, 934], "my_activate_gpio": 753, "servic": [755, 811, 1087], "routin": [755, 769], "reserv": 757, "kmalloc": [759, 760, 776], "doubli": [761, 762], "node": [761, 902], "empti": [761, 852, 984, 1040], "consequ": 763, "rt": [765, 766], "mutual": [765, 778], "exclus": [765, 778], "registr": 767, "layer": 767, "util": [767, 872], "pci": [769, 770], "foremost": 769, "probe": 769, "bar": 769, "rasperri": 773, "crossdev": 773, "artifact": [773, 1073], "bootload": 773, "jjj": 774, "mainten": 775, "spinlock": [776, 778, 779], "spin_lock": 776, "irq": 776, "spin_lock_irqsav": 776, "spin_unlock_irqrestor": 776, "ah": [776, 1084], "bulletproof": 778, "dup": 780, "fork": 780, "defer": [781, 792], "jiffi": 783, "wheel": [783, 1026], "get_one_ev": 786, "copy_to_us": 786, "noth": 789, "o_nonblock": 789, "wake": 790, "workqueu": [792, 793, 794], "did": 792, "destroi": [793, 1107], "gzip": 797, "tar": 799, "etiquett": 799, "Being": 799, "g1": 800, "lot": [800, 801], "precondit": [800, 801], "credenti": [800, 819], "backup": [800, 801, 835], "busi": 801, "ok": [804, 926], "serial": 804, "pseudo": 804, "partit": 804, "proc": 804, "authent": [808, 886], "prompt": 808, "verif": [808, 1059], "success": 808, "imperson": 808, "uid": [810, 829, 830], "parent": [811, 928], "child": 811, "subsystem": 812, "0": [812, 926, 1080, 1120], "stdout": [816, 866, 880, 902], "stderr": 816, "trick": [816, 1015], "teacher": 818, "constel": 818, "root": [818, 830], "octal": 818, "tune": [818, 933, 1079], "setuid": [829, 830], "passwd": [829, 849, 905, 1049], "sudo": 829, "password": [829, 1037], "chmod": [829, 998], "toi": 829, "effect": [830, 945, 984], "ugli": 831, "sticki": 831, "umask": 832, "edit": 833, "tabul": 833, "filenam": 833, "bashrc": [834, 835], "cp": 835, "similar": 835, "its": [835, 1079], "pwd": 836, "cd": 836, "mkdir": [842, 852], "funni": 843, "dev": 848, "touch": 852, "rm": 852, "rmdir": 852, "renam": 856, "mv": 856, "somewher": 856, "cut": [859, 1008], "durchsuchen": 861, "optionen": 861, "verkn\u00fcpfungen": 861, "grep": 862, "less": [865, 966, 990], "brushless": 870, "motor": 870, "speed": 870, "esc": 870, "fwd": 870, "rev": 870, "calibr": 870, "exchang": 871, "packet": 871, "vcan": 872, "frame": [873, 1088], "mcp2515": 874, "schemat": 874, "solder": 874, "spi": 874, "lm73": 877, "slave": [877, 879], "master": [877, 879], "enabl": [877, 879], "bcm2835": 877, "datasheet": 877, "connect": [877, 896, 1083], "i2cdetect": 877, "detect": 877, "hwmon": [877, 879], "monitor": [877, 879], "pca9685": 878, "puls": 878, "wire": [878, 879], "ds18b20": 879, "alter": 879, "w1": 879, "attach": 879, "pin": [879, 913], "ds2482": 879, "800": 879, "channel": 879, "announc": 879, "hotplug": 879, "lm": 879, "caveat": [879, 1080], "topologi": 879, "symptom": 879, "statu": [880, 916, 926], "adjust": [882, 959], "wear": 886, "admin": 886, "hat": 886, "scp": 889, "sshf": 890, "mount": 890, "logdata": 890, "unmount": 890, "fusermount": 890, "umount": 890, "helper": [891, 1090], "simplic": [895, 896, 897], "watch": 895, "strace": 895, "supervis": 895, "descriptor": [899, 902, 909], "filedescriptor": 899, "offset": [899, 909], "lseek": 899, "hole": 901, "o_creat": 903, "bogu": 903, "o_excl": 904, "alreadi": 904, "o_rdonli": 905, "even": [905, 906, 1032], "o_wronli": 906, "writeabl": 906, "implicitli": 906, "scatter": 909, "gather": 909, "retriev": 911, "wise": 912, "legal": 915, "pthread_join": 916, "synchron": [918, 944], "win32": 920, "reset": 920, "trylock": 925, "islock": 925, "argc": 926, "char": 926, "argv": [926, 1000], "procf": 928, "pid": 928, "ppid": 928, "getpid": 928, "getppid": 928, "multitask": 929, "fair": [929, 933], "runnabl": [929, 935], "bare": 931, "metal": 931, "hm": 931, "awai": [931, 1066], "stabil": 931, "latenc": [933, 935], "nice": 933, "inexact": 933, "immedi": 933, "preempt_rt": 933, "polici": 934, "prioriti": 934, "runn": 934, "frequenc": 935, "scale": 935, "mysteri": 935, "remain": 935, "sysprog": [936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946], "mmap": 940, "segment": 940, "produc": [940, 974], "consum": 940, "mq_open": 941, "mq_send": 941, "mq_receiv": 941, "mq_close": 941, "mq_unlink": 941, "notif": 941, "mq_notifi": 941, "mqueue": 941, "sem_open": 941, "sem_wait": 941, "sem_post": 941, "sem_clos": 941, "sem_unlink": 941, "barebon": 944, "alarm": 944, "louder": 944, "innoc": 944, "sigalrm": 944, "programmat": 945, "mask": 945, "pend": 945, "sigset_t": 945, "async": 945, "seem": 947, "nm": 947, "agnost": 948, "goodi": 949, "nativ": [950, 955], "sysroot": [950, 959], "linaro": 959, "defunct": 959, "patienc": 959, "against": [959, 964, 990], "docker": 961, "autoconf": 961, "71": 961, "zoom": 963, "rememb": 963, "reloc": 964, "independ": 964, "pic": 964, "runtim": 964, "def": 966, "reach": 966, "theoret": 966, "nonloc": 966, "hood": 968, "monkeypatch": 968, "print": [968, 993], "contextlib": 968, "contextmanag": 968, "involv": 968, "prefixprint": 968, "mind": 969, "sugar": 969, "functool": [969, 990], "rais": 970, "regardless": 970, "coverag": 973, "infin": 974, "form": 978, "daemon": 979, "mother": 981, "acquir": 981, "abc": 983, "late": 983, "abtract": 983, "Its": 984, "interrelationship": 986, "salari": 987, "introspect": 987, "isinst": 987, "issubclass": 987, "classmethod": 988, "staticmethod": 988, "_make": 989, "_asdict": 989, "dunder": 990, "compar": 990, "incompat": 990, "lotsa": 990, "magic": 990, "__gt__": 990, "term": 990, "__lt__": 990, "total_ord": 990, "them": 990, "readonli": 991, "repr": 992, "__repr__": 992, "suppli": 993, "ultim": 993, "fundament": 994, "guido": 996, "van": 996, "rossum": 996, "hash": 998, "bang": 998, "she": 998, "doze": 998, "registri": 998, "indent": 999, "cosmet": 1000, "rudimentari": 1000, "python2": 1002, "unicod": 1002, "esoter": 1006, "delimit": 1015, "interv": 1023, "axi": 1025, "setuptool": 1026, "manifest": 1026, "publish": [1026, 1065, 1087], "usernam": 1037, "prime": [1042, 1050, 1056], "strategi": 1049, "revert": 1051, "justifi": 1052, "activ": 1058, "dictread": [1060, 1061, 1079], "cp1252": [1060, 1062], "reader": [1062, 1063, 1079], "nohead": 1062, "both": 1068, "interrel": 1069, "product": 1070, "david": 1071, "beazlei": 1071, "raymond": 1071, "hetting": 1071, "mean": 1073, "linear": [1074, 1076, 1077], "regress": [1074, 1076, 1077], "weather": 1075, "ndarrai": 1076, "plot": 1076, "splice": 1076, "mankind": 1078, "god": 1078, "insan": 1079, "scsv": 1079, "dbapi": [1080, 1082, 1083], "transact": 1080, "postgresql": 1082, "postgr": 1082, "cursor": 1083, "queri": 1083, "ascii": 1084, "iso": 1084, "latin": 1084, "8859": 1084, "lieb": 1084, "gr\u00fc\u00dfe": 1084, "j\u00f6rg": 1084, "\u795d\u597d": 1084, "utf": 1084, "decod": 1084, "incomplet": 1086, "broker": 1087, "subscrib": 1087, "payload": 1087, "append": 1088, "deprec": 1088, "bitmap": 1090, "neat": 1090, "iloc": [1092, 1093], "Then": 1092, "inplac": 1093, "loc": [1093, 1094], "hiccup": 1094, "inclus": 1094, "lowercas": 1095, "email": 1095, "normalized_email": 1095, "ing": 1095, "elementtre": 1096, "etre": 1096, "sax": 1096, "dom": 1096, "34": 1098, "invoc": 1100, "subcommand": 1100, "upload": 1103, "pythonpath": 1105, "mark": 1105, "expect": [1105, 1114], "recogn": 1106, "meat": 1106, "freez": 1107, "recreat": 1107, "fatal": 1112, "failur": 1112, "assert_": 1112, "suit": 1112, "teardown": 1117, "organisatorisch": 1119, "buchung": 1119, "kursablauf": 1119, "kursgestaltung": 1119, "unterlagen": 1119, "grub": 1120, "97": 1120, "bauen": 1120, "prozess": 1120, "verschieden": 1120, "zielpublikum": [1121, 1123, 1124, 1129, 1131, 1136, 1137, 1143], "kursinhalt": [1121, 1123, 1124, 1129, 1131, 1132, 1136, 1137, 1138, 1139, 1141, 1142, 1143], "vorkenntniss": [1121, 1123, 1124, 1129, 1131, 1132, 1136, 1137, 1138, 1139, 1141, 1142, 1143], "three": 1125, "prior": 1127, "beispielen": 1131, "mutter": 1132, "aller": 1132, "woch": 1136, "svn": 1137}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "nbsphinx": 3, "sphinx": 60}, "alltitles": {"Kontakt": [[0, "kontakt"]], "Navigation": [[0, "navigation"]], "Google Maps": [[0, "google-maps"]], "Google Streetview": [[0, "google-streetview"]], "Curriculum Vitae": [[1, "curriculum-vitae"]], "\u00dcber Mich": [[2, "uber-mich"]], "Projekte": [[3, "projekte"]], "Projekte aus selbstst\u00e4ndiger T\u00e4tigkeit": [[3, "projekte-aus-selbststandiger-tatigkeit"]], "Projekte aus nichtselbstst\u00e4ndiger T\u00e4tigkeit": [[3, "projekte-aus-nichtselbststandiger-tatigkeit"]], "Skills": [[4, "skills"], [137, "skills"]], "Angebot: In-House Schulungen": [[5, "angebot-in-house-schulungen"]], "Zu meiner Person": [[5, "zu-meiner-person"]], "Schwerpunke": [[5, "schwerpunke"]], "C/C++": [[5, "c-c"]], "Python": [[5, "python"], [95, "python"], [317, "python"], [322, "python"]], "Linux": [[5, "linux"], [79, "linux"], [155, "linux"], [869, "linux"]], "Schulungsstil": [[5, "schulungsstil"]], "Preise": [[5, "preise"]], "Course Material": [[6, "course-material"], [425, "course-material"], [1070, "course-material"]], "Einleitung": [[7, "Einleitung"], [193, "Einleitung"]], "Datatypes": [[7, "Datatypes"], [190, "Datatypes"], [193, "Datatypes"], [196, "Datatypes"], [209, "Datatypes"], [212, "Datatypes"], [220, "Datatypes"], [222, "Datatypes"], [228, "Datatypes"], [232, "Datatypes"], [235, "Datatypes"], [238, "Datatypes"], [252, "datatypes"], [259, "datatypes"], [262, "datatypes"], [270, "Datatypes"], [272, "datatypes"], [273, "datatypes"], [274, "Datatypes"], [278, "datatypes"], [279, "datatypes"], [312, "Datatypes"], [1002, "datatypes"]], "Numbers": [[7, "Numbers"], [193, "Numbers"], [196, "Numbers"], [220, "Numbers"], [312, "Numbers"], [1002, "numbers"]], "Integer Numbers": [[7, "Integer-Numbers"], [193, "Integer-Numbers"], [1002, "integer-numbers"]], "Strings": [[7, "Strings"], [190, "Strings"], [193, "Strings"], [196, "Strings"], [205, "Strings"], [209, "Strings"], [209, "id3"], [212, "Strings"], [220, "Strings"], [232, "Strings"], [250, "Strings"], [253, "Strings"], [253, "id1"], [253, "id3"], [260, "Strings"], [312, "Strings"]], "Compound Datatypes": [[7, "Compound-Datatypes"], [193, "Compound-Datatypes"], [205, "Compound-Datatypes"], [209, "Compound-Datatypes"], [212, "Compound-Datatypes"], [215, "Compound-Datatypes"], [220, "Compound-Datatypes"], [222, "Compound-Datatypes"], [228, "Compound-Datatypes"], [232, "Compound-Datatypes"], [235, "Compound-Datatypes"], [238, "Compound-Datatypes"], [250, "Compound-Datatypes"], [274, "Compound-Datatypes"], [280, "Compound-Datatypes"], [292, "Compound-Datatypes"], [1003, "compound-datatypes"]], "Lists (Array in JavaScript, std::vector<> in C++, Array in Java)": [[7, "Lists-(Array-in-JavaScript,-std::vector<>-in-C++,-Array-in-Java)"], [193, "Lists-(Array-in-JavaScript,-std::vector<>-in-C++,-Array-in-Java)"]], "Dictionary (Key/Value Map in Javascript)": [[7, "Dictionary-(Key/Value-Map-in-Javascript)"], [193, "Dictionary-(Key/Value-Map-in-Javascript)"]], "Set: mathematische Mengen": [[7, "Set:-mathematische-Mengen"], [193, "Set:-mathematische-Mengen"]], "while": [[7, "while"], [193, "while"], [212, "while"], [228, "while"], [260, "while"]], "Functions": [[7, "Functions"], [43, "functions"], [193, "Functions"], [196, "Functions"], [209, "Functions"], [220, "Functions"], [222, "Functions"], [228, "Functions"], [232, "Functions"], [237, "functions"], [253, "Functions"], [260, "Functions"], [274, "Functions"], [290, "functions"], [294, "functions"], [350, "functions"], [350, "id1"], [1014, "functions"]], "Python Basics (2021-xx-xx - 2021-yy-yy)": [[8, "python-basics-2021-xx-xx-2021-yy-yy"]], "Training Information": [[8, null], [176, null], [177, null], [179, null], [180, null], [181, null], [182, null], [184, null], [186, null], [187, null], [191, null], [194, null], [197, null], [200, null], [201, null], [202, null], [203, null], [207, null], [210, null], [219, null], [223, null], [226, null], [229, null], [231, null], [234, null], [237, null], [240, null], [249, null], [252, null], [259, null], [262, null]], "\u00dcberblick": [[8, "uberblick"], [184, "uberblick"], [194, "uberblick"], [203, "uberblick"], [219, "uberblick"], [231, "uberblick"]], "Log": [[8, "log"], [124, "log"], [176, "log"], [177, "log"], [180, "log"], [181, "log"], [189, "log"], [191, "log"], [192, "log"], [194, "log"], [197, "log"], [201, "log"], [203, "log"], [207, "log"], [210, "log"], [219, "log"], [231, "log"], [240, "log"]], "Tag 1": [[8, "tag-1"], [167, "tag-1"], [186, "tag-1"], [194, "tag-1"], [197, "tag-1"], [203, "tag-1"], [219, "tag-1"], [231, "tag-1"]], "Tag 2": [[8, "tag-2"], [167, "tag-2"], [186, "tag-2"], [194, "tag-2"], [197, "tag-2"], [203, "tag-2"], [219, "tag-2"], [231, "tag-2"]], "Live-Hacking (Jupyter Notebook)": [[8, "live-hacking-jupyter-notebook"], [184, "live-hacking-jupyter-notebook"], [194, "live-hacking-jupyter-notebook"], [197, "live-hacking-jupyter-notebook"], [207, "live-hacking-jupyter-notebook"]], "Links": [[8, "links"], [39, "links"], [124, "links"], [161, "Links"], [172, "links"], [177, "links"], [179, "links"], [181, "links"], [184, "links"], [191, "links"], [192, "links"], [194, "links"], [203, "links"], [207, "links"], [210, "links"], [213, "links"], [219, "links"], [226, "links"], [237, "links"], [240, "links"], [273, "links"], [279, "links"], [322, "links"], [400, "links"], [649, "links"], [670, "links"], [688, "links"], [699, "links"], [750, "links"], [812, "links"], [833, "links"], [872, null], [879, "links"], [995, null], [1025, null], [1026, "links"], [1087, "links"], [1089, "links"], [1090, "links"], [1092, "links"], [1093, "links"], [1094, "links"], [1095, "links"], [1108, "links"]], "Programmierung Grundlagen (Jupyter Notebook)": [[9, "programmierung-grundlagen-jupyter-notebook"], [185, "programmierung-grundlagen-jupyter-notebook"], [195, "programmierung-grundlagen-jupyter-notebook"], [221, "programmierung-grundlagen-jupyter-notebook"], [233, "programmierung-grundlagen-jupyter-notebook"]], "Details": [[10, "details"], [78, "details"], [334, "details"]], "Course List": [[11, "course-list"]], "Contents": [[11, null], [24, null], [135, null], [137, null], [139, null], [140, null], [141, null], [142, null], [143, null], [144, null], [145, null], [146, null], [155, null], [164, null], [168, "contents"], [169, null], [423, "contents"], [525, null], [528, null], [534, null], [537, null], [625, "id1"], [802, "id1"], [822, "id1"], [841, "id1"], [847, "id1"], [850, "id1"], [867, "id1"], [875, "id1"], [876, "id1"], [883, "id1"], [892, "id1"], [908, "id1"], [910, "id1"], [912, "id1"], [927, "id1"], [937, null], [940, null], [954, "id1"], [974, null], [1029, "id1"], [1030, "id1"], [1034, "id1"], [1043, "id1"], [1057, "id1"], [1064, "id1"], [1112, null], [1114, null], [1117, null], [1125, "contents"], [1128, "contents"]], "Programmierung Grundlagen, anhand von Python (12. und 13.4.2021)": [[11, "programmierung-grundlagen-anhand-von-python-12-und-13-4-2021"], [335, "programmierung-grundlagen-anhand-von-python-12-und-13-4-2021"]], "Templates for Course Descriptions": [[12, "templates-for-course-descriptions"]], "Sidebar: Course Metadata": [[12, "sidebar-course-metadata"]], "About This Site": [[13, "about-this-site"]], "License: GPLv3": [[13, "license-gplv3"]], "Github": [[13, "github"], [317, "github"]], "Sphinx": [[13, "sphinx"], [66, "sphinx"]], "Installation Instructions": [[13, "installation-instructions"]], "pip and venv": [[13, null]], "Work in Progress": [[13, "work-in-progress"], [123, "work-in-progress"]], "More": [[13, "more"]], "OpenTraining": [[14, "opentraining"]], "Draft Topics": [[15, "draft-topics"]], "Miscellaneous": [[16, "miscellaneous"], [122, "miscellaneous"], [133, "miscellaneous"], [160, "miscellaneous"], [180, "miscellaneous"], [244, "miscellaneous"], [245, "miscellaneous"], [265, "miscellaneous"], [279, "miscellaneous"], [290, "miscellaneous"], [291, "miscellaneous"], [294, "miscellaneous"], [298, "miscellaneous"], [520, "miscellaneous"], [520, "id1"], [656, "miscellaneous"], [719, "miscellaneous"], [909, "miscellaneous"], [922, "miscellaneous"]], "S5 Integration": [[17, "s5-integration"]], "Work in Progress: S5 Web Slides": [[17, "work-in-progress-s5-web-slides"]], "Implementation Notes": [[17, "implementation-notes"], [303, "implementation-notes"]], "Todo": [[17, "id1"], [137, null], [137, null], [137, null], [137, null], [137, null], [137, null], [137, null], [137, null], [137, null], [137, null], [137, null], [137, null], [137, null], [137, null], [137, null], [137, null], [137, null], [137, null], [137, null], [166, "id1"], [169, "id2"], [169, "id3"], [425, "todo"], [521, "id1"], [524, "id1"], [527, "id1"], [530, "id1"], [533, "id1"], [536, "id1"], [539, "id1"], [730, "id1"], [734, "id1"], [742, "id2"], [936, "id1"], [939, "id1"], [943, "id1"], [1111, "id1"], [1116, "id1"]], "S5 Slide Tests": [[18, "s5-slide-tests"]], "Level 1 Heading": [[19, "level-1-heading"]], "Level 2 Heading": [[19, "level-2-heading"]], "Level 2 Heading, Image": [[19, "level-2-heading-image"]], "Screencasts": [[20, "screencasts"]], "Topics to be Written": [[21, "topics-to-be-written"]], "New Topics to Write": [[21, "new-topics-to-write"]], "Netidee F\u00f6rderantrag": [[22, "netidee-forderantrag"]], "Netidee F\u00f6rderantrag: OpenTraining": [[23, "netidee-forderantrag-opentraining"]], "1. DATEN ANTRAGSTELLER_IN": [[23, "daten-antragsteller-in"]], "2. ALLGEMEINES": [[23, "allgemeines"]], "2.1 Projektname": [[23, "projektname"]], "2.2 Projekt-Untertitel": [[23, "projekt-untertitel"]], "2.3 Allgemeinverst\u00e4ndliche KURZbeschreibung des Projektes": [[23, "allgemeinverstandliche-kurzbeschreibung-des-projektes"]], "2.4 Anschlussf\u00f6rderung": [[23, "anschlussforderung"]], "3. DIE BESONDERE BEDEUTUNG IHRES PROJEKTES F\u00dcR DAS INTERNET (DIE INTERNETNUTZUNG) IN \u00d6STERREICH?": [[23, "die-besondere-bedeutung-ihres-projektes-fur-das-internet-die-internetnutzung-in-osterreich"]], "4. ZIELGRUPPE UND PROJEKTZIEL": [[23, "zielgruppe-und-projektziel"]], "5. L\u00d6SUNG": [[23, "losung"]], "5.1 Beschreibung der Probleml\u00f6sung": [[23, "beschreibung-der-problemlosung"]], "5.2 Wesentliche Elemente eines nachhaltigen Impact NACH netidee Projektende": [[23, "wesentliche-elemente-eines-nachhaltigen-impact-nach-netidee-projektende"]], "6. UMFELDANALYSE": [[23, "umfeldanalyse"]], "6.1 Was ist der Stand der Technik / Methode / des Wissens?": [[23, "was-ist-der-stand-der-technik-methode-des-wissens"]], "6.2 Welche andere L\u00f6sungen/Vorhaben zu den genannten Problemen gibt es schon?": [[23, "welche-andere-losungen-vorhaben-zu-den-genannten-problemen-gibt-es-schon"]], "7. ALLEINSTELLUNGSMERKMAL": [[23, "alleinstellungsmerkmal"]], "8. PROJEKTERGEBNISSE": [[23, "projektergebnisse"]], "8.1 Liste der Projektergebnisse": [[23, "liste-der-projektergebnisse"]], "8.2 Erforderliche Lizenzen Dritter": [[23, "erforderliche-lizenzen-dritter"]], "9. ERFOLGREICHER PROJEKTABSCHLUSS": [[23, "erfolgreicher-projektabschluss"]], "9.1 Ihre sonstigen Aktivit\u00e4ten im Projektbereich": [[23, "ihre-sonstigen-aktivitaten-im-projektbereich"]], "9.2 Angaben zur fachlichen Eignung der MitarbeiterInnen im Projektkernteam": [[23, "angaben-zur-fachlichen-eignung-der-mitarbeiterinnen-im-projektkernteam"]], "9.3 Erfahrung des/der vorgesehenen ProjektleiterIn": [[23, "erfahrung-des-der-vorgesehenen-projektleiterin"]], "9.4 Link zum maximal 2-min\u00fctigen Video des Projektkernteams": [[23, "link-zum-maximal-2-minutigen-video-des-projektkernteams"]], "9.5 Risiken": [[23, "risiken"]], "9.6 Erfolgskriterien am netidee-Projektende": [[23, "erfolgskriterien-am-netidee-projektende"]], "9.7 Angestrebter Impact 3 Jahre nach netidee-Projektende": [[23, "angestrebter-impact-3-jahre-nach-netidee-projektende"]], "10. UMSETZUNG (EINJ\u00c4HRIGES NETIDEE PROJEKT)": [[23, "umsetzung-einjahriges-netidee-projekt"]], "10.1 Wichtige Partner_innen": [[23, "wichtige-partner-innen"]], "10.2 Arbeitsschwerpunkte": [[23, "arbeitsschwerpunkte"]], "10.3 Wesentliche Ressourcen": [[23, "wesentliche-ressourcen"]], "10.4 Nutzer_innen-Kommunikationskan\u00e4le": [[23, "nutzer-innen-kommunikationskanale"]], "11. PROJEKTTERMINE": [[23, "projekttermine"]], "11.1 Termine Projektstart - Projektende": [[23, "termine-projektstart-projektende"]], "Projektstart": [[23, "projektstart"]], "12. KOSTEN UND FINANZIERUNG": [[23, "kosten-und-finanzierung"]], "12.1 Projektkosten": [[23, "projektkosten"]], "Personalkosten": [[23, "personalkosten"]], "Sonstige Kosten": [[23, "sonstige-kosten"]], "Gesamtkosten in \u20ac": [[23, "gesamtkosten-in"]], "12.2 Wir beantragen folgende netidee-F\u00f6rderung": [[23, "wir-beantragen-folgende-netidee-forderung"]], "13.3 Die restlichen Kosten werden finanziert durch": [[23, "die-restlichen-kosten-werden-finanziert-durch"]], "13. SONDERPREIS": [[23, "sonderpreis"]], "14. ERG\u00c4NZENDE ANGABEN": [[23, "erganzende-angaben"]], "14.1 Transparenz Mehrfachantr\u00e4ge": [[23, "transparenz-mehrfachantrage"]], "14.2 Nutzung der WhatAVenture-Plattform": [[23, "nutzung-der-whataventure-plattform"]], "14.3 Das eingereichte Projekt ist Teil einer schulischen Verpflichtung (z.B. HTL Diplomarbeit)": [[23, "das-eingereichte-projekt-ist-teil-einer-schulischen-verpflichtung-z-b-htl-diplomarbeit"]], "14.4 Wie haben Sie von der netidee erfahren? (Mehrfachnennungen m\u00f6glich)": [[23, "wie-haben-sie-von-der-netidee-erfahren-mehrfachnennungen-moglich"]], "16. DATENSCHUTZ": [[23, "datenschutz"]], "Video Screenplay": [[24, "video-screenplay"]], "The Problem And Me": [[24, "the-problem-and-me"]], "Open Source Training Material": [[24, "open-source-training-material"]], "Walk-Through": [[24, "walk-through"]], "Use Case: Custom Training, Subtract Known": [[25, "use-case-custom-training-subtract-known"]], "Use Case: Calculate Minimum Training Duration": [[26, "use-case-calculate-minimum-training-duration"]], "Use Cases": [[27, "use-cases"]], "Trainer": [[27, "trainer"]], "Editor": [[27, "editor"]], "End User (Training Audience)": [[27, "end-user-training-audience"]], "Use Case: Use Training Material From Other Sites": [[28, "use-case-use-training-material-from-other-sites"]], "Use Case: Menu to Choose From": [[29, "use-case-menu-to-choose-from"]], "Use Case: Slide Show Material as Plain-Text Files": [[30, "use-case-slide-show-material-as-plain-text-files"]], "Sending A V4L Camera Device Output Over SSH": [[31, "sending-a-v4l-camera-device-output-over-ssh"]], "Capture Video To File": [[31, "capture-video-to-file"]], "Play Video From Remote System, Using SSH": [[31, "play-video-from-remote-system-using-ssh"]], "Emoji Codes (sphinxemoji)": [[32, "emoji-codes-sphinxemoji"]], "Setup": [[32, "setup"], [252, "setup"], [259, "setup"], [262, "setup"], [272, "setup"], [273, "setup"], [277, "setup"], [278, "setup"], [279, "setup"], [870, "setup"], [995, "setup"], [1107, "setup"]], "Most Used Here In This Site": [[32, "most-used-here-in-this-site"]], "All Codes": [[32, "all-codes"]], "Recipes": [[33, "recipes"]], "isoamsa.txt: Added Mathematical Symbols: Arrows": [[34, "isoamsa-txt-added-mathematical-symbols-arrows"]], "isoamsr.txt: Added Mathematical Symbols: Relations": [[35, "isoamsr-txt-added-mathematical-symbols-relations"]], "isonum.txt: Added Mathematical Symbols: Binary Operators": [[36, "isonum-txt-added-mathematical-symbols-binary-operators"]], "Layout Test Page": [[37, "layout-test-page"]], "Admonitions": [[37, "admonitions"]], "Admonition": [[37, "admonition"]], "This is an .. admonition::": [[37, null]], "Tip": [[37, "tip"]], "Note": [[37, "note"]], "Hint": [[37, "hint"]], "Important": [[37, "important"]], "Attention": [[37, "attention"]], "Caution": [[37, "caution"]], "Error": [[37, "error"]], "Danger": [[37, "danger"]], "Sidebar": [[37, "sidebar"]], "Blech Sidebar Title Blah": [[37, null]], "Sidebar \u201cKursdaten\u201d": [[37, "sidebar-kursdaten"]], "Kursdaten": [[37, null], [1121, null], [1122, null], [1123, null], [1124, null], [1129, null], [1131, null], [1132, null], [1136, null], [1137, null], [1138, null], [1139, null], [1141, null], [1142, null], [1143, null]], "Local Content": [[37, "local-content"]], "Local Heading 1": [[37, "local-heading-1"], [37, "id3"]], "Local Heading 1.1": [[37, "local-heading-1-1"], [37, "id4"]], "Local Heading 1.2": [[37, "local-heading-1-2"], [37, "id5"]], "Local Heading 2": [[37, "local-heading-2"], [37, "id6"]], "Sidebar with Local Content": [[37, "sidebar-with-local-content"]], "Bleh Content Blah": [[37, null]], "To Do": [[37, "to-do"]], "mmlalias.txt: MathML aliases for entities from other sets": [[38, "mmlalias-txt-mathml-aliases-for-entities-from-other-sets"]], "Most used": [[38, "id1"]], "All": [[38, "id2"]], "reStructuredText Cheat Sheet": [[39, "restructuredtext-cheat-sheet"]], "Further Information": [[39, "further-information"], [125, "further-information"], [200, "further-information"], [201, "further-information"], [223, "further-information"], [308, "further-information"], [317, "further-information"], [704, "further-information"]], "Local Documents": [[39, "local-documents"]], "External Links": [[39, "external-links"]], "Section References": [[39, "section-references"]], "Section That We Refer To": [[39, "section-that-we-refer-to"]], "Another Section Contains a Link To The Referred Section Above": [[39, "another-section-contains-a-link-to-the-referred-section-above"]], "Footnotes": [[39, "footnotes"]], "Sphinxish": [[40, "sphinxish"]], "Jupyter Notebooks": [[40, "jupyter-notebooks"]], "Running Sphinx From Source": [[40, "running-sphinx-from-source"]], "Seminar on \u201cClean Code\u201d (2022-04-13)": [[41, "seminar-on-clean-code-2022-04-13"]], "Seminar Agenda and Timeline": [[41, "seminar-agenda-and-timeline"]], "Live Hacking Before (Formal) Unit Testing": [[42, "live-hacking-before-formal-unit-testing"]], "Initial Structure": [[42, "initial-structure"]], "Snippets": [[42, null], [42, null], [42, null], [42, null], [42, null], [42, null], [44, null], [44, null], [50, null], [50, null]], "User": [[42, "user"]], "UserDB": [[42, "userdb"]], "bin/userdb-write-binaryfile.cpp": [[42, "bin-userdb-write-binaryfile-cpp"]], "Extend UserDB To Write": [[42, "extend-userdb-to-write"]], "Extend UserDB To Read From File, And Iterate": [[42, "extend-userdb-to-read-from-file-and-iterate"]], "Bug: Use \u201cFaschingbauer\u201d As Last Name": [[42, "bug-use-faschingbauer-as-last-name"]], "Wrap Up: What Do We Have?": [[42, "wrap-up-what-do-we-have"]], "Clean Code: Messages From The Book": [[43, "clean-code-messages-from-the-book"]], "Survey": [[43, null], [424, null]], "Names": [[43, "names"]], "Comments": [[43, "comments"]], "Formatting": [[43, "formatting"]], "Objects and Data Structures": [[43, "objects-and-data-structures"]], "Error Handling": [[43, "error-handling"], [891, "error-handling"]], "Boundaries": [[43, "boundaries"]], "Unit Tests": [[43, "unit-tests"], [501, "unit-tests"]], "Classes": [[43, "classes"], [199, "Classes"], [284, "classes"]], "Live Hacking: Switch To googletest": [[44, "live-hacking-switch-to-googletest"]], "Git Submodule": [[44, "git-submodule"]], "Establish Tests: Demo": [[44, "establish-tests-demo"]], "Straightforward main() Conversion": [[44, "straightforward-main-conversion"]], "Fix Shortcomings": [[44, "fix-shortcomings"]], "Is Software A Craft? Software Is A Craft!": [[45, "is-software-a-craft-software-is-a-craft"]], "09:00-09:15 Introductory Words": [[45, "introductory-words"]], "09:15-10:00 Software Engineering: A Discipline? (What Have We Established?)": [[45, "software-engineering-a-discipline-what-have-we-established"]], "10:00-10:15 Coffee Break": [[45, "coffee-break"]], "10:15-11:00 Establishing \u201cThe Project\u201d (Live Hacking, Slides)": [[45, "establishing-the-project-live-hacking-slides"]], "11:00-12:00 Enter Unit Testing Frameworks": [[45, "enter-unit-testing-frameworks"]], "12:00-13:00 Lunch Break": [[45, "lunch-break"]], "13:00-14:00 Cornerstones From The \u201cClean Code\u201d Book": [[45, "cornerstones-from-the-clean-code-book"]], "14:00-14:45 Keeping Code Clean In The Small": [[45, "keeping-code-clean-in-the-small"]], "14:45-15:00 Coffee Break": [[45, "id1"]], "15:00-23:59 \u201cExtreme Programming\u201d Session": [[45, "extreme-programming-session"]], "UserDB::find() Crashes If User Not Found": [[46, "userdb-find-crashes-if-user-not-found"]], "State": [[46, "state"]], "Bugs": [[47, "bugs"], [53, "bugs"]], "Existing Files Are Overwritten": [[48, "existing-files-are-overwritten"]], "UserDB::read(): What If Done Twice?": [[49, "userdb-read-what-if-done-twice"]], "UserDB: Alternative Output Format - CSV": [[50, "userdb-alternative-output-format-csv"]], "Write CSV: Test": [[50, "write-csv-test"]], "Write CSV: Frontend Program": [[50, "write-csv-frontend-program"], [50, "id1"]], "Read CSV: Test": [[50, "read-csv-test"]], "Features": [[51, "features"]], "Search By Other Indexes": [[52, "search-by-other-indexes"]], "Backlog: What Needs To Change, Or We Will All Die": [[53, "backlog-what-needs-to-change-or-we-will-all-die"]], "Refactoring After Featuritis": [[53, "refactoring-after-featuritis"]], "BackingStore Has Too Many Responsibilities \u27f6 Interface": [[54, "backingstore-has-too-many-responsibilities-longrightarrow-interface"]], "UserDB Has Too Many Responsibilities \u27f6 BackingStore": [[55, "userdb-has-too-many-responsibilities-longrightarrow-backingstore"]], "BackingStore": [[55, "backingstore"]], "Refactoring": [[56, "refactoring"], [502, "refactoring"], [781, "refactoring"]], "Load From BackingStore in Constructor": [[57, "load-from-backingstore-in-constructor"]], "UserDB::{read,write}(): bool, Really?": [[58, "userdb-read-write-bool-really"]], "Submission: Pointless Blinking With Python, asyncio, and libgpiod (and a Raspberry Pi of Course)": [[59, "submission-pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"], [62, "submission-pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"]], "Biography": [[59, "biography"], [62, "biography"]], "Abstract": [[59, "abstract"], [62, "abstract"]], "Description": [[59, "description"], [62, "description"], [455, "description"], [607, "description"], [623, "description"], [626, "description"], [628, "description"], [629, "description"], [630, "description"], [631, "description"], [632, "description"], [633, "description"], [634, "description"], [635, "description"], [637, "description"], [638, "description"]], "Pointless Blinking With Python, asyncio, and libgpiod (and a Raspberry Pi of Course)": [[60, "pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"]], "Installation Notes": [[61, "installation-notes"]], "libgpiod": [[61, "libgpiod"]], "Fedora: Prepare Tarballs": [[61, "fedora-prepare-tarballs"]], "On The Pi: Build And Install": [[61, "on-the-pi-build-and-install"]], "Screenplay: Pointless Blinking With Python, asyncio, and libgpiod (and a Raspberry Pi of Course)": [[63, "screenplay-pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"]], "Setup Before Presentation": [[63, "setup-before-presentation"]], "Starting Point": [[63, "starting-point"], [652, "starting-point"]], "Greeting": [[63, "greeting"]], "Multiple Background Threads": [[63, "multiple-background-threads"]], "Enter asyncio": [[63, "enter-asyncio"]], "Character Device Based GPIO": [[63, "character-device-based-gpio"]], "GPIO Device": [[63, "gpio-device"]], "Most Basic Feature: Setting GPIO Values": [[63, "most-basic-feature-setting-gpio-values"]], "Entire Matrix On/Off": [[63, "entire-matrix-on-off"]], "Bringing All Together": [[63, "bringing-all-together"]], "Modularize": [[63, "modularize"]], "Play A Bit: Blink Entire Rows": [[63, "play-a-bit-blink-entire-rows"]], "Coroutines?": [[63, "coroutines"]], "Not Enough: sequence()": [[63, "not-enough-sequence"]], "Looping: forever()": [[63, "looping-forever"]], "A Stripped-Down Program (\u27f6 Factory)": [[63, "a-stripped-down-program-longrightarrow-factory"]], "Turn blink() Into A Factory": [[63, "turn-blink-into-a-factory"]], "Anti-Clumsy Decorator: blink() Wrapper": [[63, "anti-clumsy-decorator-blink-wrapper"]], "@program, Finally": [[63, "program-finally"]], "Playground: cycle()": [[63, "playground-cycle"]], "Fast Forward: any(), And Cancellation": [[63, "fast-forward-any-and-cancellation"]], "Playground: on()": [[63, "playground-on"]], "Goodbye": [[63, "goodbye"]], "Hochk\u00f6nig": [[64, "hochkonig"]], "K\u00f6nigsjodler (Klettersteig)": [[64, "konigsjodler-klettersteig"]], "Tour: Werfen - Ostpreussenh\u00fctte - Matrashaus - Werfen": [[64, "tour-werfen-ostpreussenhutte-matrashaus-werfen"]], "Blog": [[65, "blog"], [137, "blog"]], "Articles": [[65, "articles"]], "In the Works": [[65, "in-the-works"]], "Not Yet in the Works": [[65, "not-yet-in-the-works"]], "Revisit Existing Posts": [[65, "revisit-existing-posts"]], "pending_xref": [[66, "pending-xref"]], "C++": [[67, "c"], [110, "c"], [111, "c"], [137, "c"]], "C++: Building with CMake": [[68, "c-building-with-cmake"]], "C++: Interfaces": [[69, "c-interfaces"]], "C++: OO Basics": [[70, "c-oo-basics"]], "C++: Unit Testing": [[71, "c-unit-testing"]], "Graph": [[72, "graph"], [625, "graph"], [774, "graph"], [1029, "graph"], [1030, "graph"], [1034, "graph"], [1043, "graph"], [1057, "graph"], [1064, "graph"]], "Embedded Computing 1": [[73, "embedded-computing-1"], [78, "embedded-computing-1"]], "Current Curriculum": [[73, "current-curriculum"], [74, "current-curriculum"]], "Topics": [[73, "topics"], [74, "topics"], [98, "topics"], [99, "topics"], [101, "topics"], [102, "topics"], [103, "topics"], [104, "topics"], [136, "topics"], [172, "topics"], [172, "id2"], [200, "topics"], [237, "topics"], [240, null], [321, "topics"], [325, "topics"], [355, "topics"], [370, "topics"], [379, "topics"], [386, "topics"], [392, "topics"], [396, "topics"], [399, "topics"], [403, "topics"], [412, "topics"], [416, "topics"], [421, "topics"], [422, "topics"], [542, "topics"], [550, "topics"], [565, "topics"], [568, "topics"], [571, "topics"], [587, "topics"], [593, "topics"], [597, "topics"], [605, "topics"], [610, "topics"], [612, "topics"], [615, "topics"], [621, "topics"], [639, "topics"], [640, "topics"], [644, "topics"], [651, "topics"], [658, "topics"], [669, "topics"], [682, "topics"], [683, "topics"], [693, "topics"], [698, "topics"], [707, "topics"], [715, "topics"], [719, "topics"], [723, "topics"], [725, "topics"], [727, "topics"], [885, "topics"], [903, null], [905, null], [905, null], [924, "topics"], [930, "topics"], [951, "topics"], [957, "topics"], [958, "topics"], [978, null], [986, "topics"], [1081, "topics"], [1091, "topics"], [1104, "topics"], [1110, "topics"]], "Dependency Graph": [[73, "dependency-graph"], [74, "dependency-graph"]], "Embedded Computing 2": [[74, "embedded-computing-2"], [78, "embedded-computing-2"]], "EX: Race Conditions": [[75, "ex-race-conditions"]], "EX: Avoiding Race Condition": [[76, "ex-avoiding-race-condition"]], "Goals": [[76, "goals"], [82, "goals"], [83, "goals"], [84, "goals"], [85, "goals"], [87, "goals"], [88, "goals"], [89, "goals"], [91, "goals"]], "Outcome": [[76, "outcome"], [82, "outcome"], [83, "outcome"], [84, "outcome"], [85, "outcome"], [179, "outcome"]], "Git Introduction": [[77, "git-introduction"]], "Embedded Computing 2019": [[78, "embedded-computing-2019"]], "Overview": [[78, "overview"], [652, "overview"], [700, "overview"], [714, "overview"], [716, "overview"], [724, "overview"], [798, "overview"], [809, "overview"], [866, "overview"], [877, "overview"], [878, "overview"], [879, "overview"], [879, "id1"], [880, "overview"], [915, "overview"]], "Knowledge Transferred": [[78, "knowledge-transferred"]], "Course Setup": [[78, "course-setup"]], "Introduction to Linux and Unix": [[80, "introduction-to-linux-and-unix"]], "Linux Hardware Device Management": [[81, "linux-hardware-device-management"]], "EX: Averaging Sensor": [[82, "ex-averaging-sensor"]], "EX: Averaging Sensor (parallel)": [[83, "ex-averaging-sensor-parallel"]], "EX: LED Temperature Display": [[84, "ex-led-temperature-display"]], "Hardware": [[84, "hardware"], [85, "hardware"]], "EX: Temperature Sensors": [[85, "ex-temperature-sensors"], [92, "ex-temperature-sensors"]], "GPIO": [[86, "gpio"]], "sysfs Interface": [[86, "sysfs-interface"]], "gpiod Interface": [[86, "gpiod-interface"]], "Multithreading": [[87, "multithreading"], [158, "multithreading"], [218, "multithreading"], [244, "multithreading"], [245, "multithreading"], [247, "multithreading"], [290, "multithreading"], [291, "multithreading"], [294, "multithreading"], [298, "multithreading"], [325, "multithreading"], [332, "multithreading"], [715, "multithreading"], [944, "multithreading"], [980, "multithreading"]], "Avoiding Race Conditions: Semaphore/Mutex": [[88, "avoiding-race-conditions-semaphore-mutex"]], "Communication: Waiting for Something": [[89, "communication-waiting-for-something"]], "Python Basics": [[90, "python-basics"]], "EX: Averaging Sensor, Display": [[91, "ex-averaging-sensor-display"]], "Simple Web Programming": [[93, "simple-web-programming"]], "Sensors Web Pages": [[94, "sensors-web-pages"]], "Embedded Computing 2020": [[96, "embedded-computing-2020"]], "SS2022": [[97, "ss2022"]], "Block 1: Linux, and Working With Remote/Embedded Devices": [[97, "block-1-linux-and-working-with-remote-embedded-devices"], [113, "block-1-linux-and-working-with-remote-embedded-devices"]], "Block 2: C on Linux: Local and Cross Development": [[97, "block-2-c-on-linux-local-and-cross-development"], [113, "block-2-c-on-linux-local-and-cross-development"]], "Block 3: C++": [[97, "block-3-c"], [113, "block-3-c"]], "2022-03-08": [[98, "id1"]], "Homework": [[98, "homework"], [99, "homework"], [101, "homework"], [104, "homework"]], "2022-03-10": [[99, "id1"]], "2022-03-10 (Homework until 2022-03-21)": [[100, "homework-until-2022-03-21"]], "From Exercises: Create/Copy/Move/Remove": [[100, "from-trainings-material-soup-linux-basics-shell-exercises-cp-mv-mkdir-rm-group"]], "From  Exercises: The ls Command": [[100, "from-trainings-material-soup-linux-basics-shell-exercises-ls-group"]], "2022-03-21": [[101, "id1"]], "2022-03-22, 2022-03-24 (KU)": [[102, "ku"]], "2022-03-28": [[103, "id1"]], "2022-04-01": [[104, "id1"]], "SS2022: Logs": [[105, "ss2022-logs"]], "WS2022": [[106, "ws2022"]], "Plan: Evolution": [[106, "plan-evolution"]], "FH Joanneum (Embedded Computing): WS2022/2023 (Questions About Code)": [[107, "fh-joanneum-embedded-computing-ws2022-2023-questions-about-code"]], "Question 1: C++ Inheritance": [[107, "question-1-c-inheritance"]], "Question 2: C++ Inheritance": [[107, "question-2-c-inheritance"]], "Question 3: Memory Leak": [[107, "question-3-memory-leak"]], "Question 4: std::vector": [[107, "question-4-std-vector"]], "FH Joanneum (Embedded Computing): WS2022/2023 (Yes/No Questions)": [[108, "fh-joanneum-embedded-computing-ws2022-2023-yes-no-questions"]], "Cross Development": [[108, "cross-development"], [256, "cross-development"], [950, "cross-development"], [951, "cross-development"]], "C++, OO": [[108, "c-oo"]], "Lab Exam 2023-01-17": [[109, "lab-exam-2023-01-17"]], "Project Setup": [[109, "project-setup"], [500, "project-setup"], [1058, "project-setup"]], "Exercises": [[109, "exercises"], [155, "exercises"], [160, "exercises"], [192, "exercises"], [202, "exercises"], [202, "id1"], [202, "id3"], [260, "Exercises"], [265, "exercises"], [284, "exercises"], [284, "id1"], [287, "exercises"], [291, "exercises"], [453, "exercises"], [455, "exercises"], [462, "exercises"], [490, "exercises"], [507, "exercises"], [509, "exercises"], [550, "exercises"], [565, "exercises"], [615, "exercises"], [639, "exercises"], [957, "exercises"], [986, "exercises"], [1030, "exercises"]], "Exam Submission": [[109, "exam-submission"]], "SS2023: Exam 2023-06-30 (Handout)": [[110, "ss2023-exam-2023-06-30-handout"]], "UNIX/Linux Concepts": [[110, "unix-linux-concepts"], [111, "unix-linux-concepts"]], "Toolchain": [[110, "toolchain"], [111, "toolchain"]], "SS2023: Exam 2023-06-30 (Solved)": [[111, "ss2023-exam-2023-06-30-solved"]], "Embedded Computing 2021": [[112, "embedded-computing-2021"]], "SS2023": [[113, "ss2023"]], "Finish: Written Exam": [[113, "finish-written-exam"]], "An IoT Boiling Pot (The Beginning)": [[114, "an-iot-boiling-pot-the-beginning"]], "Requirements": [[114, "requirements"], [115, "requirements"], [117, "requirements"], [119, "requirements"], [442, "requirements"], [466, "requirements"], [497, "requirements"]], "Implementation": [[114, "implementation"], [115, "implementation"], [117, "implementation"], [119, "implementation"], [501, "implementation"]], "Testing": [[114, "testing"], [115, "testing"], [117, "testing"], [119, "testing"], [258, "testing"]], "Future (Not Part Of This Development Cycle)": [[114, "future-not-part-of-this-development-cycle"], [115, "future-not-part-of-this-development-cycle"], [117, "future-not-part-of-this-development-cycle"], [119, "future-not-part-of-this-development-cycle"]], "Dependencies": [[114, "dependencies"], [115, "dependencies"], [117, "dependencies"], [119, "dependencies"], [303, "dependencies"], [304, "dependencies"], [305, "dependencies"], [306, "dependencies"], [308, "dependencies"], [431, "dependencies"], [448, "dependencies"], [462, "dependencies"], [490, "dependencies"], [507, "dependencies"], [509, "dependencies"], [520, "dependencies"], [587, "dependencies"], [593, "dependencies"], [597, "dependencies"], [605, "dependencies"], [607, "dependencies"], [610, "dependencies"], [615, "dependencies"], [623, "dependencies"], [624, "dependencies"], [626, "dependencies"], [628, "dependencies"], [629, "dependencies"], [630, "dependencies"], [631, "dependencies"], [632, "dependencies"], [633, "dependencies"], [634, "dependencies"], [635, "dependencies"], [636, "dependencies"], [637, "dependencies"], [638, "dependencies"], [644, "dependencies"], [651, "dependencies"], [658, "dependencies"], [669, "dependencies"], [693, "dependencies"], [698, "dependencies"], [800, "dependencies"], [801, "dependencies"], [802, "dependencies"], [806, "dependencies"], [820, "dependencies"], [821, "dependencies"], [822, "dependencies"], [841, "dependencies"], [846, "dependencies"], [847, "dependencies"], [850, "dependencies"], [883, "dependencies"], [885, "dependencies"], [892, "dependencies"], [898, "dependencies"], [900, "dependencies"], [908, "dependencies"], [910, "dependencies"], [912, "dependencies"], [924, "dependencies"], [927, "dependencies"], [951, "dependencies"], [953, "dependencies"], [954, "dependencies"], [957, "dependencies"], [958, "dependencies"], [979, "dependencies"], [981, "dependencies"], [1027, "dependencies"], [1028, "dependencies"], [1031, "dependencies"], [1032, "dependencies"], [1033, "dependencies"], [1035, "dependencies"], [1036, "dependencies"], [1037, "dependencies"], [1038, "dependencies"], [1039, "dependencies"], [1040, "dependencies"], [1044, "dependencies"], [1045, "dependencies"], [1046, "dependencies"], [1047, "dependencies"], [1048, "dependencies"], [1050, "dependencies"], [1051, "dependencies"], [1052, "dependencies"], [1053, "dependencies"], [1054, "dependencies"], [1055, "dependencies"], [1056, "dependencies"], [1058, "dependencies"], [1059, "dependencies"], [1060, "dependencies"], [1061, "dependencies"], [1062, "dependencies"], [1063, "dependencies"], [1065, "dependencies"], [1066, "dependencies"], [1067, "dependencies"], [1068, "dependencies"], [1081, "dependencies"], [1084, "dependencies"], [1087, "dependencies"], [1091, "dependencies"], [1104, "dependencies"], [1110, "dependencies"]], "Data Logger": [[115, "data-logger"]], "WS2023/24: Project": [[116, "ws2023-24-project"]], "Tasks": [[116, "tasks"], [120, "tasks"], [931, "tasks"]], "Temperature Display: LED Via A PWM Controller": [[117, "temperature-display-led-via-a-pwm-controller"]], "Switch Interface": [[118, "switch-interface"]], "SysFS GPIO Switch": [[119, "sysfs-gpio-switch"]], "WS2023/24": [[120, "ws2023-24"]], "2023-10-05 (6 VO)": [[120, "vo"]], "OO: Recap": [[120, "oo-recap"]], "Plan \ud83d\udcaa": [[120, "plan-muscle"]], "OO: Polymorphism": [[120, "oo-polymorphism"]], "Git Collaboration (via Github, but not necessarily)": [[120, "git-collaboration-via-github-but-not-necessarily"]], "2023-11-03 (6 VO)": [[120, "id1"]], "Organizational": [[120, "organizational"]], "OO: Design?": [[120, "oo-design"]], "Project": [[120, "project"], [160, "project"]], "Hardware Overview": [[120, "hardware-overview"]], "2023-11-09 (3 VO)": [[120, "id2"]], "2023-11-10 (3 VO)": [[120, "id3"]], "Embedded Computing (FH Joanneum Graz)": [[121, "embedded-computing-fh-joanneum-graz"]], "Git Notes": [[122, "git-notes"]], "Bring Local Branch Upstream": [[122, "bring-local-branch-upstream"]], "Create Remote Tracking Branch": [[122, "create-remote-tracking-branch"]], "Create, Submit, Apply Patches": [[122, "create-submit-apply-patches"]], "Packaging this Site on PyPI": [[124, "packaging-this-site-on-pypi"]], "Audio Chip Bringup": [[125, "audio-chip-bringup"]], "Goal": [[125, "goal"], [127, "goal"], [128, "goal"], [130, "goal"], [265, "goal"], [267, "goal"], [1125, "goal"], [1128, "goal"]], "Findings": [[125, "findings"]], "Get Debian 10 Kernel Config": [[126, "get-debian-10-kernel-config"]], "Run Debian within Qemu": [[126, "run-debian-within-qemu"]], "Extract Kernel Config from /boot": [[126, "extract-kernel-config-from-boot"]], "Finish: Debian Kernel Package etc.": [[127, "finish-debian-kernel-package-etc"]], "Yocto Kernel Bringup on Customer Hardware": [[128, "yocto-kernel-bringup-on-customer-hardware"]], "Open Questions: Everything Works Like Before?": [[128, "open-questions-everything-works-like-before"]], "I2S Audio for a Kontron SMARC Module": [[129, "i2s-audio-for-a-kontron-smarc-module"]], "Dirty Upgrade Path": [[130, "dirty-upgrade-path"]], "Steps": [[130, "steps"]], "Wait for Customer Hardware": [[131, "wait-for-customer-hardware"]], "Extract Kernel from Intel Yocto BSP": [[132, "extract-kernel-from-intel-yocto-bsp"]], "Python Training Improvements": [[133, "python-training-improvements"]], "Beginner Course": [[133, "beginner-course"]], "Exercise Structure": [[133, "exercise-structure"]], "Split Exercises": [[133, "split-exercises"]], "Creating Screencasts": [[134, "creating-screencasts"]], "OpenShot": [[134, "openshot"]], "SEO": [[135, "seo"]], "Sitemap": [[135, "sitemap"]], "Meta Information": [[135, "meta-information"]], "Courses": [[135, "courses"]], "Stacks (Hanging)": [[136, "stacks-hanging"]], "DBus (New Topic)": [[136, "dbus-new-topic"]], "Finish Meta/SEO and Stuff": [[136, "finish-meta-seo-and-stuff"]], "Miscellaneous To Do": [[137, "miscellaneous-to-do"]], "Extensions": [[137, "extensions"]], "reST Todos": [[137, "rest-todos"]], "Styling": [[137, "styling"]], "Convert to RST/S5": [[137, "convert-to-rst-s5"]], "Examples": [[137, "examples"], [446, "examples"], [646, "examples"], [694, "examples"], [797, "examples"], [899, null]], "Convert Existing Content": [[137, "convert-existing-content"]], "Add Missing": [[137, "add-missing"]], "Structure": [[137, "structure"], [485, "structure"]], "References, Past Trainings": [[137, "references-past-trainings"]], "About": [[137, "about"]], "Learning The Web": [[138, "learning-the-web"]], "Beagleboard: How to Repair NAND (also known as 40W)": [[139, "beagleboard-how-to-repair-nand-also-known-as-40w"]], "Basics": [[139, "basics"], [210, "basics"], [237, "basics"], [252, "basics"], [272, "basics"], [273, "basics"], [273, "id1"], [278, "basics"], [279, "basics"], [279, "id1"], [312, "Basics"], [380, "basics"], [566, "basics"], [578, "basics"], [598, "basics"], [696, "basics"], [799, "basics"], [915, "basics"], [1023, "basics"]], "Getting X-Loader and U-Boot": [[139, "getting-x-loader-and-u-boot"]], "Creating a Bootable MMC/SD card": [[139, "creating-a-bootable-mmc-sd-card"]], "Repairing the NAND": [[139, "repairing-the-nand"]], "Writing X-Loader to NAND": [[139, "writing-x-loader-to-nand"]], "Writing U-Boot to NAND": [[139, "writing-u-boot-to-nand"]], "Porting to Linux (There\u2019s Always A Better Way)": [[140, "porting-to-linux-there-s-always-a-better-way"]], "Processes are Threads": [[140, "processes-are-threads"]], "Signals Aren\u2019t Messages": [[140, "signals-aren-t-messages"]], "References": [[140, null], [140, null], [140, null], [212, "References"], [215, "References"], [557, "references"]], "Message Queues aren\u2019t Message Queues": [[140, "message-queues-aren-t-message-queues"]], "Semaphores and Mutexes": [[140, "semaphores-and-mutexes"]], "Timers": [[140, "timers"]], "Polling": [[140, "polling"]], "Event Dispatching": [[140, "event-dispatching"]], "Interrupts": [[140, "interrupts"], [756, "interrupts"]], "Realtime": [[140, "realtime"], [933, "realtime"], [1120, "realtime"]], "Saving Solid State Disk Life (Gentoo)": [[141, "saving-solid-state-disk-life-gentoo"]], "Rant": [[141, "rant"], [161, "Rant"], [949, null]], "No Swap": [[141, "no-swap"]], "tmpfs instances here and there": [[141, "tmpfs-instances-here-and-there"]], "Syslog, /var/log/messages": [[141, "syslog-var-log-messages"]], "Mountpoint for messages": [[141, "mountpoint-for-messages"]], "Logrotate": [[141, "logrotate"]], "Kernel I/O Scheduler": [[141, "kernel-i-o-scheduler"]], "Use RAM for the Kernel Build": [[141, "use-ram-for-the-kernel-build"]], "Things that are left": [[141, "things-that-are-left"]], "\u201cWhy ps Sucks\u201d or \u201cCounting Memory Consumption\u201d": [[142, "why-ps-sucks-or-counting-memory-consumption"]], "Process Stack Management": [[142, "process-stack-management"]], "Conclusion": [[142, "conclusion"], [142, "id1"], [870, "conclusion"], [878, "conclusion"]], "Thread (pthread) Stack Management": [[142, "thread-pthread-stack-management"]], "Experiment #1: 100 default threads, eating no stack": [[142, "experiment-1-100-default-threads-eating-no-stack"]], "Experiment #2: 100 default threads, eating up stack": [[142, "experiment-2-100-default-threads-eating-up-stack"]], "Experiment #3: 100 threads with limited stack": [[142, "experiment-3-100-threads-with-limited-stack"]], "Experiment #4: more threads than my system could take (eat no stack)": [[142, "experiment-4-more-threads-than-my-system-could-take-eat-no-stack"]], "Experiment #5: more threads than my system could take (eat stack)": [[142, "experiment-5-more-threads-than-my-system-could-take-eat-stack"]], "How does this work?": [[142, "how-does-this-work"]], "Realtime is different": [[142, "realtime-is-different"]], "Patching and Building the Fedora Kernel": [[143, "patching-and-building-the-fedora-kernel"]], "Why?": [[143, "why"], [886, "why"], [968, "why"]], "Find Kernel Source (Git), Fix It, and Create Patch": [[143, "find-kernel-source-git-fix-it-and-create-patch"]], "Link": [[143, null], [143, null]], "Prepare the RPM Build": [[143, "prepare-the-rpm-build"]], "Install Prerequisites": [[143, "install-prerequisites"]], "Setup rpmbuild Directory": [[143, "setup-rpmbuild-directory"]], "Download and Install Source RPM For Crashing Kernel": [[143, "download-and-install-source-rpm-for-crashing-kernel"]], "Apply the Patch": [[143, "apply-the-patch"]], "Build the Kernel RPMs": [[143, "build-the-kernel-rpms"]], "Install Kernel": [[143, "install-kernel"]], "Adding a Custom Domain to a Github Pages Project Site": [[144, "adding-a-custom-domain-to-a-github-pages-project-site"]], "Configure a Subdomain, www.faschingbauer.me": [[144, "configure-a-subdomain-www-faschingbauer-me"]], "Configure an Apex Domain, faschingbauer.me": [[144, "configure-an-apex-domain-faschingbauer-me"]], "Using Microsoft Teams on Linux": [[145, "using-microsoft-teams-on-linux"]], "Screen Sharing: X11 Revival": [[145, "screen-sharing-x11-revival"]], "RPM Package (Meh!)": [[145, "rpm-package-meh"]], "Updated on 2020-04-09": [[145, null]], "Annoyance #1: Keeps Running in Background": [[145, "annoyance-1-keeps-running-in-background"]], "Annoyance #2: (Re)Registers Itself For Autostart": [[145, "annoyance-2-re-registers-itself-for-autostart"]], "Run In Browser (My Recommendation)": [[145, "run-in-browser-my-recommendation"]], "Deploying Sphinx Generated Documentation to Github Pages": [[146, "deploying-sphinx-generated-documentation-to-github-pages"]], "Create \u201cSite Publication Repo\u201d": [[146, "create-site-publication-repo"]], "Configure Github Pages for jfasch-home-pages": [[146, "configure-github-pages-for-jfasch-home-pages"]], "Time for Deployment": [[146, "time-for-deployment"]], "Using BigBlueButton for Online Training": [[147, "using-bigbluebutton-for-online-training"]], "In this Article": [[147, null], [148, null], [150, null]], "TL;DR": [[147, "tl-dr"]], "Background Information": [[147, "background-information"]], "Hosting Setup": [[147, "hosting-setup"]], "BigBlueButton Installation": [[147, "bigbluebutton-installation"]], "Functionality Check": [[147, "functionality-check"]], "What Else?": [[147, "what-else"], [873, "what-else"], [886, "what-else"]], "Traunstein via Zierlersteig": [[148, "traunstein-via-zierlersteig"]], "Kaltenbachwildnis": [[148, "kaltenbachwildnis"]], "Anstieg auf den Zierlerberg": [[148, "anstieg-auf-den-zierlerberg"]], "Die Rinne": [[148, "die-rinne"]], "Abstieg": [[148, "abstieg"]], "Grintovec (via Plan\u0161arsko Jezero, \u010ce\u0161ka Ko\u010da)": [[149, "grintovec-via-plansarsko-jezero-ceska-koca"]], "Anreise": [[149, "anreise"]], "\u010ce\u0161ka Ko\u010da": [[149, "ceska-koca"]], "Hinauf": [[149, "hinauf"]], "Runter": [[149, "runter"]], "Zusammenfassung": [[149, "zusammenfassung"]], "How to Brick a \u20ac1399 Dell XPS 13": [[150, "how-to-brick-a-1399-dell-xps-13"]], "What Happened?": [[150, "what-happened"]], "VirtualBox, Fedora, and Secure Boot": [[150, "virtualbox-fedora-and-secure-boot"]], "Enrolling Machine Owner Key (MOK)": [[150, "enrolling-machine-owner-key-mok"]], "Generate Key Pair": [[150, "generate-key-pair"]], "Stage Key for Enrollment": [[150, "stage-key-for-enrollment"]], "Reboot, Brick": [[150, "reboot-brick"]], "Diagnostics": [[150, "diagnostics"]], "Building A Cross Toolchain For The Raspberry Pi, Using crosstool-ng": [[151, "building-a-cross-toolchain-for-the-raspberry-pi-using-crosstool-ng"], [960, "building-a-cross-toolchain-for-the-raspberry-pi-using-crosstool-ng"]], "Why This Article? Why Not Use A Prebuilt Toolchain?": [[151, "why-this-article-why-not-use-a-prebuilt-toolchain"]], "Installing crosstool-ng": [[151, "installing-crosstool-ng"]], "Prerequisites": [[151, "prerequisites"], [1026, "prerequisites"]], "Installing From Cloned Git Repository": [[151, "installing-from-cloned-git-repository"]], "Installing From Release Tarball": [[151, "installing-from-release-tarball"]], "PATH, And Basic Test": [[151, "path-and-basic-test"]], "Configure Toolchain Build": [[151, "configure-toolchain-build"]], "Base Configuration For The Raspberry": [[151, "base-configuration-for-the-raspberry"]], "Important: glibc Version": [[151, "important-glibc-version"]], "The Error": [[151, "the-error"], [151, "id4"]], "The Fix": [[151, "the-fix"], [151, "id5"]], "Important: GCC Version": [[151, "important-gcc-version"]], "Toolchain Build/Install": [[151, "toolchain-build-install"]], "Test": [[151, "test"], [753, "test"]], "Simplest: C, <stdio.h>": [[151, "simplest-c-stdio-h"]], "C++, <iostream>": [[151, "c-iostream"]], "C++, <thread>": [[151, "c-thread"]], "Packaging/Distributing The Toolchain": [[151, "packaging-distributing-the-toolchain"]], "Afterword": [[151, "afterword"]], "Posts": [[152, "posts"]], "Linux und Open Source": [[153, "linux-und-open-source"]], "Schulung": [[153, "schulung"]], "Entwicklung": [[153, "entwicklung"]], "Beratung": [[153, "beratung"]], "Richtlinien zur Ver\u00f6ffentlichung von Kursmaterial": [[154, "richtlinien-zur-veroffentlichung-von-kursmaterial"]], "Installing Git": [[155, "installing-git"]], "Windows": [[155, "windows"]], "Workflow": [[155, "workflow"]], "Cloning the Repository": [[155, "cloning-the-repository"]], "Exercise Time": [[155, "exercise-time"]], "Conflicts": [[155, "conflicts"]], "Trainer\u2019s Notes": [[155, "trainer-s-notes"]], "Courses: Overview": [[156, "courses-overview"]], "Online Trainings": [[156, null]], "Individual Trainings": [[156, null]], "Everything About Linux": [[156, "everything-about-linux"]], "Programming Languages": [[156, "programming-languages"]], "Miscellaneous but Related": [[156, "miscellaneous-but-related"]], "Qualivision, Z\u00fcrich, 1.10.2013": [[157, "qualivision-zurich-1-10-2013"]], "Fragen und Antworten": [[157, "fragen-und-antworten"]], "Kursnotizen: Linux Embedded 2015-11-30": [[158, "kursnotizen-linux-embedded-2015-11-30"]], "GPIOs in Userspace": [[158, "gpios-in-userspace"]], "CAN Bus": [[158, "can-bus"], [179, "can-bus"]], "Driver Beispiele": [[158, "driver-beispiele"]], "Heizungssteuerung": [[158, "heizungssteuerung"]], "Live Hacking": [[159, "Live-Hacking"], [582, "live-hacking"], [583, "live-hacking"], [585, "live-hacking"], [586, "live-hacking"], [589, "live-hacking"], [590, "live-hacking"], [591, "live-hacking"], [603, "live-hacking"]], "Strings k\u00f6nnen viel: split()": [[159, "Strings-k\u00f6nnen-viel:-split()"]], "Mutability, Immutability: kann man nicht oft genug wiederholen": [[159, "Mutability,-Immutability:-kann-man-nicht-oft-genug-wiederholen"]], "Dictionaries": [[159, "Dictionaries"], [188, "Dictionaries"], [260, "Dictionaries"], [274, "Dictionaries"], [312, "Dictionaries"], [1019, "dictionaries"]], "\u201cHartes\u201d Indizieren \u2026": [[159, "\u201cHartes\u201d-Indizieren-\u2026"]], "\u201cWeiches\u201d Nettfragen \u2026": [[159, "\u201cWeiches\u201d-Nettfragen-\u2026"]], "Shortcuts": [[159, "Shortcuts"]], "Objektorientierte Programmierung": [[159, "Objektorientierte-Programmierung"]], "Inheritance": [[159, "Inheritance"], [199, "Inheritance"], [987, "inheritance"]], "Date and Time and Time Deltas - datetime": [[159, "Date-and-Time-and-Time-Deltas---datetime"]], "Bissl potschert zum Schreiben is scho \u2026 (andere Formen von import)": [[159, "Bissl-potschert-zum-Schreiben-is-scho-\u2026-(andere-Formen-von-import)"]], "String Representations: __str__()": [[159, "String-Representations:-__str__()"]], "subprocess": [[159, "subprocess"], [238, "subprocess"]], "enumerate(), zip()": [[159, "enumerate(),-zip()"]], "List Comprehension": [[159, "List-Comprehension"], [183, "List-Comprehension"], [222, "List-Comprehension"], [292, "List-Comprehension"], [973, "list-comprehension"], [1018, "list-comprehension"]], "exec(), eval()": [[159, "exec(),-eval()"]], "Umgebender Context": [[159, "Umgebender-Context"]], "Eigener Context": [[159, "Eigener-Context"]], "json": [[159, "json"], [235, "json"]], "Python Individualtraining (5 Tage, beginnend 28.10.2019)": [[160, "python-individualtraining-5-tage-beginnend-28-10-2019"], [335, "python-individualtraining-5-tage-beginnend-28-10-2019"]], "Inhalt": [[160, null], [163, null], [944, null], [1122, "inhalt"]], "Slide 51, \u201cExercises: Basics\u201d": [[160, "slide-51-exercises-basics"]], "Slide 58, \u201cExercises: While Loop\u201d": [[160, "slide-58-exercises-while-loop"]], "Slide 94, \u201cExercises: Lists, Loops, Functions\u201d": [[160, "slide-94-exercises-lists-loops-functions"]], "Slide 121, \u201cExercises: Strings\u201d": [[160, "slide-121-exercises-strings"]], "Famous Generator Introduction": [[160, "famous-generator-introduction"]], "eval(): Convert a String into a Python Data Structure": [[160, "eval-convert-a-string-into-a-python-data-structure"]], "Operator Overloading": [[160, "operator-overloading"], [218, "operator-overloading"], [228, "Operator-Overloading"], [249, "operator-overloading"], [284, "operator-overloading"], [520, "operator-overloading"], [546, "operator-overloading"], [560, "operator-overloading"], [990, "operator-overloading"]], "Getters and Setters": [[160, "getters-and-setters"]], "More on Listcomprehensions and Generator Expressions": [[160, "more-on-listcomprehensions-and-generator-expressions"]], "More on Local and Global Scope and Global Variables": [[160, "more-on-local-and-global-scope-and-global-variables"]], "Closures: Between Local and Global": [[160, "closures-between-local-and-global"]], "Goals of this Training": [[161, "Goals-of-this-Training"]], "Exercise": [[161, "Exercise"], [202, "exercise"], [244, "exercise"], [244, "id1"], [245, "exercise"], [247, "exercise"], [256, "exercise"], [265, "exercise"], [287, "exercise"], [298, "exercise"], [317, "exercise"], [323, "exercise"], [442, "exercise"], [443, "exercise"], [444, "exercise"], [446, "exercise"], [447, "exercise"], [450, "exercise"], [451, "exercise"], [636, "exercise"]], "Walkthrough: Reduce Image to Eight Colors": [[161, "Walkthrough:-Reduce-Image-to-Eight-Colors"]], "Load Image from File: PIL": [[161, "Load-Image-from-File:-PIL"]], "Image as NumPy Array": [[161, "Image-as-NumPy-Array"]], "Preparation before Clustering": [[161, "Preparation-before-Clustering"]], "Excursion: matplotlib": [[161, "Excursion:-matplotlib"]], "Now Comes the Clustering": [[161, "Now-Comes-the-Clustering"]], "Let KMeans find eight clusters \u2026": [[161, "Let-KMeans-find-eight-clusters-\u2026"]], "Use the result: output-properties": [[161, "Use-the-result:-output-properties"]], "Clusters be their Centers": [[161, "Clusters-be-their-Centers"]], "Post Processing: Restore Alpha, Back into RGBA": [[161, "Post-Processing:-Restore-Alpha,-Back-into-RGBA"]], "Random Live Hacking": [[162, "Random-Live-Hacking"]], "Data Types": [[162, "Data-Types"], [292, "Data-Types"]], "Mutable, Immutable": [[162, "Mutable,-Immutable"]], "Exception, demonstrated using dict access": [[162, "Exception,-demonstrated-using-dict-access"]], "Indices and Slicing": [[162, "Indices-and-Slicing"]], "for loops": [[162, "for-loops"]], "Iterator protocol": [[162, "Iterator-protocol"], [225, "Iterator-protocol"]], "Python (12.11.2019 - 14.11.2019 in Graz)": [[163, "python-12-11-2019-14-11-2019-in-graz"]], "Material": [[163, null], [165, null], [316, null]], "Standardthemen": [[163, "standardthemen"]], "Das Hauptthema: Numerik, NumPy": [[163, "das-hauptthema-numerik-numpy"]], "Lesen von .mat Files": [[163, "lesen-von-mat-files"]], "L\u00f6sen einer Uni-\u00dcbung": [[163, "losen-einer-uni-ubung"]], "Proposal": [[164, "proposal"]], "Signals": [[164, "signals"]], "Posix IPC (and Virtual Memory)": [[164, "posix-ipc-and-virtual-memory"]], "Unix Domain Sockets": [[164, "unix-domain-sockets"]], "Application in your Company": [[164, "application-in-your-company"]], "Further Thoughts": [[164, "further-thoughts"]], "IPC in Linux (10.1.2020 in Graz)": [[165, "ipc-in-linux-10-1-2020-in-graz"]], "\u00dcbung: handgestrickter String, um die Fallen von C++ lustvoll zu erleiden": [[166, "ubung-handgestrickter-string-um-die-fallen-von-c-lustvoll-zu-erleiden"]], "C++ f\u00fcr Embedded C Programmierer (30.3.2020 - 3.4.2020 Baden W\u00fcrttemberg)": [[167, "c-fur-embedded-c-programmierer-30-3-2020-3-4-2020-baden-wurttemberg"]], "Kursinformation": [[167, null]], "Kursaufbau": [[167, "kursaufbau"]], "Kursverlauf": [[167, "kursverlauf"], [175, "kursverlauf"]], "Tag 3": [[167, "tag-3"], [186, "tag-3"], [197, "tag-3"], [219, "tag-3"], [231, "tag-3"]], "Tag 4": [[167, "tag-4"], [197, "tag-4"], [219, "tag-4"], [231, "tag-4"]], "Tag 5": [[167, "tag-5"]], "Installing googletest By Hand": [[168, "installing-googletest-by-hand"]], "Clone googletest Repo": [[168, "clone-googletest-repo"]], "Create Build Directory": [[168, "create-build-directory"], [169, "create-build-directory"], [499, "create-build-directory"]], "CMake, Build and Install": [[168, "cmake-build-and-install"]], "Build Packages to Use Our Private googletest Install": [[168, "build-packages-to-use-our-private-googletest-install"]], "Software Setup, Build": [[169, "software-setup-build"]], "Getting the Source": [[169, "getting-the-source"]], "Install Prerequisites and Dependencies": [[169, "install-prerequisites-and-dependencies"]], "Generate Makefile Build from CMake Sources": [[169, "generate-makefile-build-from-cmake-sources"]], "Argh: Using This Site With Visual Studio Code": [[170, "argh-using-this-site-with-visual-studio-code"]], "Flatpak": [[170, "flatpak"]], "Issues": [[170, "issues"]], "RPM From M$": [[170, "rpm-from-m"]], "Code": [[171, "code"], [174, "code"]], "Python Grundlagen (13.5.2020 - 14.5.2020 bei einer Firma in Graz)": [[172, "python-grundlagen-13-5-2020-14-5-2020-bei-einer-firma-in-graz"]], "Information": [[172, null], [175, null]], "Environment": [[172, "environment"], [805, "environment"]], "Unit Testing and Test Driven Development": [[172, "unit-testing-and-test-driven-development"]], "Python Installation": [[172, "python-installation"], [995, "python-installation"]], "Programming Environment": [[172, "programming-environment"], [256, "programming-environment"], [995, "programming-environment"]], "Day 1: Language Basics": [[172, "day-1-language-basics"]], "Day 2: Advanced Topics": [[172, "day-2-advanced-topics"]], "Wrap-Up": [[172, "wrap-up"]], "How Was It?": [[172, "how-was-it"]], "Python Schulung 18. und 19.5.2020": [[173, "Python-Schulung-18.-und-19.5.2020"]], "Das sys Modul": [[173, "Das-sys-Modul"]], "Multiline Strings und Docstrings": [[173, "Multiline-Strings-und-Docstrings"]], "Datentypen (Ausflug)": [[173, "Datentypen-(Ausflug)"]], "Variablen und deren Unterbau": [[173, "Variablen-und-deren-Unterbau"]], "Ausflug \u201cPythonic\u201d: Zuweisung mit Hilfe von \u201cTuple Unpacking\u201d": [[173, "Ausflug-\u201cPythonic\u201d:-Zuweisung-mit-Hilfe-von-\u201cTuple-Unpacking\u201d"]], "Mutability am Beispiel list": [[173, "Mutability-am-Beispiel-list"]], "Integers haben unendliche Breite": [[173, "Integers-haben-unendliche-Breite"]], "Division und Floor Division": [[173, "Division-und-Floor-Division"]], "Konvertierung durch Konstruktoren": [[173, "Konvertierung-durch-Konstruktoren"]], "Welchen Typ haben Typen?": [[173, "Welchen-Typ-haben-Typen?"]], "list und Mutability": [[173, "list-und-Mutability"]], "Tuple und Immutability": [[173, "Tuple-und-Immutability"]], "Besseres Laufzeitverhalten durch Geeignetere Datenstrukturen": [[173, "Besseres-Laufzeitverhalten-durch-Geeignetere-Datenstrukturen"]], "Boolean: Short Circuit Evaluation": [[173, "Boolean:-Short-Circuit-Evaluation"]], "while Loops, und warum sie nicht Pythonic sind": [[173, "while-Loops,-und-warum-sie-nicht-Pythonic-sind"]], "Mehr \u00fcber range(): Iterator Protocol (Folie 161)": [[173, "Mehr-\u00fcber-range():-Iterator-Protocol-(Folie-161)"]], "Mutability, Shallow und Deep Copy": [[173, "Mutability,-Shallow-und-Deep-Copy"]], "Shallow Copy mit dem Slice-Operator": [[173, "Shallow-Copy-mit-dem-Slice-Operator"]], "Deep Copy (copy.deepcopy())": [[173, "Deep-Copy-(copy.deepcopy())"]], "Funktionen": [[173, "Funktionen"]], "Funktionen sind \u201cFirst Class Objects\u201d": [[173, "Funktionen-sind-\u201cFirst-Class-Objects\u201d"]], "Gotcha: Mutable Default Parameters (Folie 90 ff.)": [[173, "Gotcha:-Mutable-Default-Parameters-(Folie-90-ff.)"]], "Globale und lokale Variablen (Folie 92)": [[173, "Globale-und-lokale-Variablen-(Folie-92)"]], "Exercise: uniq() (Folie 94, Punkt 2)": [[173, "Exercise:-uniq()-(Folie-94,-Punkt-2)"]], "Zusammengefasst: hier eine \u201csch\u00f6nere\u201d L\u00f6sung": [[173, "Zusammengefasst:-hier-eine-\u201csch\u00f6nere\u201d-L\u00f6sung"]], "Funktionen als Parameter": [[173, "Funktionen-als-Parameter"]], "List Comprensions (Folie 125)": [[173, "List-Comprensions-(Folie-125)"]], "Generator Expressions: Lesbarkeit und Performance": [[173, "Generator-Expressions:-Lesbarkeit-und-Performance"]], "Code Review": [[173, "Code-Review"]], "pprint() ist praktisch f\u00fcr Debug-Output": [[173, "pprint()-ist-praktisch-f\u00fcr-Debug-Output"]], "Straightforward Datentransformation": [[173, "Straightforward-Datentransformation"]], "Ausflug: More on Dictionaries (Folie 127ff.)": [[173, "Ausflug:-More-on-Dictionaries-(Folie-127ff.)"]], "Now for something completely different: collections.namedtuple": [[173, "Now-for-something-completely-different:-collections.namedtuple"]], "Mehr zur Parameter\u00fcbergabe: variabel lange Argumentlisten": [[173, "Mehr-zur-Parameter\u00fcbergabe:-variabel-lange-Argumentlisten"]], "OO: eine erste Klasse": [[173, "OO:-eine-erste-Klasse"]], "Python Individualtraining (18.5.2020 - 19.5.2020)": [[175, "python-individualtraining-18-5-2020-19-5-2020"], [335, "python-individualtraining-18-5-2020-19-5-2020"]], "Weiterf\u00fchrende Links": [[175, "weiterfuhrende-links"]], "Python Advanced (7.9.2020 - 10.9.2020)": [[176, "python-advanced-7-9-2020-10-9-2020"], [335, "python-advanced-7-9-2020-10-9-2020"]], "Preparation": [[176, "preparation"], [177, "preparation"], [179, "preparation"], [180, "preparation"], [181, "preparation"], [182, "preparation"], [562, "preparation"]], "Workspace Setup": [[176, "workspace-setup"], [177, "workspace-setup"], [179, "workspace-setup"], [181, "workspace-setup"]], "Github for Exercises": [[176, "github-for-exercises"], [177, "github-for-exercises"]], "Agenda": [[176, "agenda"], [177, "agenda"], [179, "agenda"], [180, "agenda"], [181, "agenda"], [182, "agenda"], [187, "agenda"], [191, "agenda"], [192, "agenda"], [229, "agenda"], [234, "agenda"], [246, "agenda"], [255, "agenda"], [276, "agenda"], [284, "agenda"], [1127, "agenda"]], "Advanced Core Python Topics": [[176, "advanced-core-python-topics"]], "Special Topics": [[176, "special-topics"]], "Day 1": [[176, "day-1"], [177, "day-1"], [179, "day-1"], [180, "day-1"], [181, "day-1"], [191, "day-1"], [192, "day-1"], [201, "day-1"], [202, "day-1"], [207, "day-1"], [210, "day-1"], [213, "day-1"], [216, "day-1"], [223, "day-1"], [265, "day-1"], [266, "day-1"], [267, "day-1"], [273, "day-1"], [277, "day-1"], [279, "day-1"], [284, "day-1"], [291, "day-1"]], "Day 2": [[176, "day-2"], [177, "day-2"], [179, "day-2"], [180, "day-2"], [181, "day-2"], [191, "day-2"], [192, "day-2"], [201, "day-2"], [202, "day-2"], [207, "day-2"], [210, "day-2"], [212, "Day-2"], [213, "day-2"], [216, "day-2"], [223, "day-2"], [256, "day-2"], [265, "day-2"], [267, "day-2"], [273, "day-2"], [277, "day-2"], [284, "day-2"], [291, "day-2"]], "Day 3": [[176, "day-3"], [177, "day-3"], [179, "day-3"], [180, "day-3"], [181, "day-3"], [191, "day-3"], [192, "day-3"], [201, "day-3"], [202, "day-3"], [207, "day-3"], [212, "Day-3"], [213, "day-3"], [216, "day-3"], [223, "day-3"], [256, "day-3"], [259, "day-3"], [265, "day-3"], [267, "day-3"], [273, "day-3"], [277, "day-3"], [279, "day-3"], [291, "day-3"]], "Day 4": [[176, "day-4"], [179, "day-4"], [191, "day-4"], [192, "day-4"], [201, "day-4"], [202, "day-4"], [256, "day-4"]], "Recommended Tutorials": [[176, "recommended-tutorials"]], "After Work Party": [[176, "after-work-party"], [207, "after-work-party"]], "Python Basics (28.9.2020 - 30.9.2020)": [[177, "python-basics-28-9-2020-30-9-2020"], [335, "python-basics-28-9-2020-30-9-2020"]], "Iterables": [[178, "Iterables"]], "set constructor": [[178, "set-constructor"]], "Fast vs.\u00a0Simple": [[178, "Fast-vs.\u00a0Simple"]], "for, Iterables, range and Generators": [[178, "for,-Iterables,-range-and-Generators"]], "Tuples, Tuple Unpacking, Returning Multiple Values from Functions": [[178, "Tuples,-Tuple-Unpacking,-Returning-Multiple-Values-from-Functions"]], "Object Oriented Programming": [[178, "Object-Oriented-Programming"], [228, "Object-Oriented-Programming"], [241, "Object-Oriented-Programming"], [252, "object-oriented-programming"], [266, "object-oriented-programming"], [268, "object-oriented-programming"], [269, "object-oriented-programming"], [272, "object-oriented-programming"], [273, "object-oriented-programming"], [278, "object-oriented-programming"], [284, "object-oriented-programming"], [287, "object-oriented-programming"], [290, "object-oriented-programming"], [291, "object-oriented-programming"], [294, "object-oriented-programming"], [424, "object-oriented-programming"], [986, "object-oriented-programming"]], "datetime": [[178, "datetime"], [205, "datetime"], [260, "datetime"]], "Python Basic and Advanced (19.10.2020 - 22.10.2020)": [[179, "python-basic-and-advanced-19-10-2020-22-10-2020"]], "Additional Topics, brought in by Thomas": [[179, "additional-topics-brought-in-by-thomas"]], "Notebook": [[179, "notebook"], [200, "notebook"], [215, "Notebook"], [317, "notebook"]], "Tutorials": [[179, "tutorials"], [207, "tutorials"]], "Linux on Raspberry Pi": [[180, "linux-on-raspberry-pi"]], "Cloud Machine": [[180, "cloud-machine"]], "Raspberry on Participant\u2019s Desks": [[180, "raspberry-on-participant-s-desks"]], "Basic security": [[180, "basic-security"]], "Interlude: SD Card Setup (No Bloody Disk Imager)": [[180, "interlude-sd-card-setup-no-bloody-disk-imager"]], "GPIO, using sysfs interface": [[180, "gpio-using-sysfs-interface"]], "In the Wild: Watchdog": [[180, "in-the-wild-watchdog"]], "TODO": [[180, "todo"], [304, "todo"], [305, "todo"], [306, "todo"], [1086, "todo"]], "Support Material": [[180, "support-material"]], "Python Basics (23.11.2020 - 25.11.2020)": [[181, "python-basics-23-11-2020-25-11-2020"], [335, "python-basics-23-11-2020-25-11-2020"]], "Exercise: JSON": [[181, "exercise-json"]], "Linux Basics (30.11.2020 - 3.12.2020)": [[182, "linux-basics-30-11-2020-3-12-2020"], [335, "linux-basics-30-11-2020-3-12-2020"]], "6 Grundlegende Sprachelemente": [[183, "6-Grundlegende-Sprachelemente"]], "6.1 Syntax und Semantik": [[183, "6.1-Syntax-und-Semantik"]], "Zur Syntax mit der Einr\u00fcckung \u2026": [[183, "Zur-Syntax-mit-der-Einr\u00fcckung-\u2026"]], "In Python k\u00f6nnen Variablen ihren Typ \u00e4ndern": [[183, "In-Python-k\u00f6nnen-Variablen-ihren-Typ-\u00e4ndern"]], "Kommentare": [[183, "Kommentare"]], "6.2 Grundlegende Elemente einer Sprache": [[183, "6.2-Grundlegende-Elemente-einer-Sprache"]], "6.3 Standarddatentypen (elementare Datentypen)": [[183, "6.3-Standarddatentypen-(elementare-Datentypen)"]], "Integers sind beliebig gro\u00df": [[183, "Integers-sind-beliebig-gro\u00df"]], "Vergleichsoperatoren": [[183, "Vergleichsoperatoren"]], "Operator Pr\u00e4zedenz: Punkt vor Strichrechnung": [[183, "Operator-Pr\u00e4zedenz:-Punkt-vor-Strichrechnung"]], "Floor Division": [[183, "Floor-Division"]], "Modulo Operator: %": [[183, "Modulo-Operator:-%"]], "(Un\u00e4rer) Negations Operator": [[183, "(Un\u00e4rer)-Negations-Operator"]], "Operator Pr\u00e4zedenz erzwingen": [[183, "Operator-Pr\u00e4zedenz-erzwingen"]], "Strings gibts auch (Zeichenketten)": [[183, "Strings-gibts-auch-(Zeichenketten)"]], "Raw Strings": [[183, "Raw-Strings"], [205, "Raw-Strings"], [222, "Raw-Strings"], [228, "Raw-Strings"], [250, "Raw-Strings"], [280, "Raw-Strings"], [1015, "raw-strings"]], "f-Strings": [[183, "f-Strings"]], "Konvertierungen": [[183, "Konvertierungen"]], "Boolean": [[183, "Boolean"], [209, "Boolean"], [212, "Boolean"], [220, "Boolean"], [222, "Boolean"], [232, "Boolean"], [235, "Boolean"], [1004, "boolean"]], "Pr\u00e4zendenzregeln: and vor or": [[183, "Pr\u00e4zendenzregeln:-and-vor-or"]], "6.4 Literale f\u00fcr primitive Datentypen": [[183, "6.4-Literale-f\u00fcr-primitive-Datentypen"]], "6.5 Variablen und Konstanten": [[183, "6.5-Variablen-und-Konstanten"]], "6.6 Operatoren": [[183, "6.6-Operatoren"]], "6.7 Ausdr\u00fccke und Operatorrangfolgen": [[183, "6.7-Ausdr\u00fccke-und-Operatorrangfolgen"]], "6.8 \u00dcbungen": [[183, "6.8-\u00dcbungen"]], "Zwei Variablen vertauschen": [[183, "Zwei-Variablen-vertauschen"]], "Zwei Variablen vertauschen mit Tuple Unpacking": [[183, "Zwei-Variablen-vertauschen-mit-Tuple-Unpacking"]], "\u00dcbung 1, 5.": [[183, "\u00dcbung-1,-5."]], "7 Kontrollstrukturen": [[183, "7-Kontrollstrukturen"]], "7.1 Anweisungen und Folgen": [[183, "7.1-Anweisungen-und-Folgen"]], "7.2 Bedingungen und Kontrollstrukturen": [[183, "7.2-Bedingungen-und-Kontrollstrukturen"]], "7.3 Grundlagen zu Verzweigungen": [[183, "7.3-Grundlagen-zu-Verzweigungen"]], "7.4 Bedingte Anweisung": [[183, "7.4-Bedingte-Anweisung"]], "7.5 Verzweigung": [[183, "7.5-Verzweigung"]], "7.6 Geschachtelte Verzweigung": [[183, "7.6-Geschachtelte-Verzweigung"]], "7.7 Mehrfache Verzweigung (Fallauswahl)": [[183, "7.7-Mehrfache-Verzweigung-(Fallauswahl)"]], "7.8 Schleifen": [[183, "7.8-Schleifen"]], "7.9 Z\u00e4hlergesteuerte Schleifen (Iteration)": [[183, "7.9-Z\u00e4hlergesteuerte-Schleifen-(Iteration)"]], "7.10 Kopfgesteuerte bedingte Schleife": [[183, "7.10-Kopfgesteuerte-bedingte-Schleife"]], "7.11 Fu\u00dfgesteuerte bedingte Schleife": [[183, "7.11-Fu\u00dfgesteuerte-bedingte-Schleife"]], "(jf) break und continue": [[183, "(jf)-break-und-continue"]], "(jf) Sequential Datatypes": [[183, "(jf)-Sequential-Datatypes"]], "(jf) for Loops": [[183, "(jf)-for-Loops"]], "Iteration mit Dictionaries": [[183, "Iteration-mit-Dictionaries"]], "(jf) The range() Function": [[183, "(jf)-The-range()-Function"]], "7.12 Schnell\u00fcbersicht": [[183, "7.12-Schnell\u00fcbersicht"]], "7.13 Sprunganweisungen": [[183, "7.13-Sprunganweisungen"]], "7.14 Endlosschleifen": [[183, "7.14-Endlosschleifen"]], "7.15 \u00dcbungen": [[183, "7.15-\u00dcbungen"]], "8 Elementare Datenstrukturen": [[183, "8-Elementare-Datenstrukturen"]], "8.1 Warum werden Datenstrukturen ben\u00f6tigt?": [[183, "8.1-Warum-werden-Datenstrukturen-ben\u00f6tigt?"]], "(jf) Compound Datatypes": [[183, "(jf)-Compound-Datatypes"]], "(jf) References, (Im)mutability": [[183, "(jf)-References,-(Im)mutability"]], "(jf) Laufzeitverhalten bei der Suche (der in Operator)": [[183, "(jf)-Laufzeitverhalten-bei-der-Suche-(der-in-Operator)"]], "Liste": [[183, "Liste"]], "Set": [[183, "Set"], [204, "Set"], [205, "Set"], [209, "Set"], [209, "id1"], [212, "Set"], [215, "Set"], [215, "id1"], [222, "Set"], [235, "Set"], [238, "Set"], [250, "Set"], [253, "Set"], [253, "id5"], [260, "Set"], [270, "Set"], [274, "Set"], [292, "Set"]], "8.2 Arrays": [[183, "8.2-Arrays"]], "8.3 Eindimensionale Arrays": [[183, "8.3-Eindimensionale-Arrays"]], "8.4 Records": [[183, "8.4-Records"]], "8.5 Zeichenketten": [[183, "8.5-Zeichenketten"]], "8.6 Tupel und Listen": [[183, "8.6-Tupel-und-Listen"]], "sorted, reversed": [[183, "sorted,-reversed"]], "8.7 Dictionaries": [[183, "8.7-Dictionaries"]], "(jf) Records in Python": [[183, "(jf)-Records-in-Python"]], "8.8 Mengen": [[183, "8.8-Mengen"]], "8.9 Besondere Datenstrukturen anhand von Stapel (Stack) und Schlangen (Queue)": [[183, "8.9-Besondere-Datenstrukturen-anhand-von-Stapel-(Stack)-und-Schlangen-(Queue)"]], "8.10 \u00dcbungen": [[183, "8.10-\u00dcbungen"]], "\u00dcbung 1": [[183, "\u00dcbung-1"]], "Versuch 1: in und index()": [[183, "Versuch-1:-in-und-index()"]], "Versuch 2: Zur\u00fcck zu while \u2026": [[183, "Versuch-2:-Zur\u00fcck-zu-while-\u2026"]], "Versuch 3: hybrid potschert mit for": [[183, "Versuch-3:-hybrid-potschert-mit-for"]], "Versuch 4: supergscheit mit for und enumerate()": [[183, "Versuch-4:-supergscheit-mit-for-und-enumerate()"]], "9 Methoden, Prozeduren und Funktionen": [[183, "9-Methoden,-Prozeduren-und-Funktionen"]], "Funktionspointer (so heissts in C): Funktionsobjekte (Python)": [[183, "Funktionspointer-(so-heissts-in-C):-Funktionsobjekte-(Python)"]], "(jf) Primzahlenbeispiel mit Funktion": [[183, "(jf)-Primzahlenbeispiel-mit-Funktion"]], "(jf) Local vs.\u00a0Global Scope": [[183, "(jf)-Local-vs.\u00a0Global-Scope"]], "Laufzeitfehler: Variable existiert nicht": [[183, "Laufzeitfehler:-Variable-existiert-nicht"]], "Lokale Variable": [[183, "Lokale-Variable"]], "Globale Variable (lesen)": [[183, "Globale-Variable-(lesen)"]], "Globale Variable (schreiben/zuweisen)": [[183, "Globale-Variable-(schreiben/zuweisen)"]], "Fehlerfall von Peter": [[183, "Fehlerfall-von-Peter"]], "9.1 Unterprogramme": [[183, "9.1-Unterprogramme"]], "9.2 Parameter\u00fcbergabe": [[183, "9.2-Parameter\u00fcbergabe"]], "9.3 Parameter\u00fcbergabe als Wert": [[183, "9.3-Parameter\u00fcbergabe-als-Wert"]], "9.4 Parameter\u00fcbergabe \u00fcber Referenzen": [[183, "9.4-Parameter\u00fcbergabe-\u00fcber-Referenzen"]], "9.5 R\u00fcckgabewerte von Funktionen oder Methoden": [[183, "9.5-R\u00fcckgabewerte-von-Funktionen-oder-Methoden"]], "9.6 Innere Funktionen - Closures": [[183, "9.6-Innere-Funktionen---Closures"]], "9.7 Standardbibliotheken und Built-in-Funktionalit\u00e4ten": [[183, "9.7-Standardbibliotheken-und-Built-in-Funktionalit\u00e4ten"]], "9.8 \u00dcbungen": [[183, "9.8-\u00dcbungen"]], "Programmierung Grundlagen (13. und 14.1.2021)": [[184, "programmierung-grundlagen-13-und-14-1-2021"]], "Struktur": [[184, "struktur"]], "Herdt Kapitel 6: Grundlegende Sprachelemente": [[184, "herdt-kapitel-6-grundlegende-sprachelemente"], [1135, "herdt-kapitel-6-grundlegende-sprachelemente"]], "Herdt Kapitel 7: Kontrollstrukturen": [[184, "herdt-kapitel-7-kontrollstrukturen"], [1135, "herdt-kapitel-7-kontrollstrukturen"]], "Verzweigung": [[184, "verzweigung"], [1135, "verzweigung"]], "Schleifen": [[184, "schleifen"], [1135, "schleifen"]], "Herdt Kapitel 8: Elementare Datenstrukturen": [[184, "herdt-kapitel-8-elementare-datenstrukturen"], [1135, "herdt-kapitel-8-elementare-datenstrukturen"]], "Herdt Kapitel 9: Methoden, Prozeduren und Funktionen": [[184, "herdt-kapitel-9-methoden-prozeduren-und-funktionen"], [1135, "herdt-kapitel-9-methoden-prozeduren-und-funktionen"]], "Python Basics (22.2.2021 - 24.2.2021)": [[186, "python-basics-22-2-2021-24-2-2021"], [335, "python-basics-22-2-2021-24-2-2021"]], "Links (ToDo)": [[186, "links-todo"]], "Linux Kernel Driver Development Basics (14.12.2020)": [[187, "linux-kernel-driver-development-basics-14-12-2020"]], "Books": [[187, "books"], [237, "books"], [279, "books"], [1071, "books"]], "Python Advanced": [[188, "Python-Advanced"]], "Data Types Recap": [[188, "Data-Types-Recap"]], "Sequential Datatypes": [[188, "Sequential-Datatypes"], [220, "Sequential-Datatypes"], [232, "Sequential-Datatypes"], [1007, "sequential-datatypes"], [1007, "id1"]], "Slicing etc.": [[188, "Slicing-etc."]], "Mapping Types (Dictionary, und mehr)": [[188, "Mapping-Types-(Dictionary,-und-mehr)"]], "Sets": [[188, "Sets"], [188, "id1"], [196, "Sets"], [1020, "sets"]], "for Schleife, ganz kurz": [[188, "for-Schleife,-ganz-kurz"]], "Tuple": [[188, "Tuple"], [212, "Tuple"], [215, "Tuple"], [222, "Tuple"], [235, "Tuple"], [238, "Tuple"], [250, "Tuple"]], "Funktionen mit mehreren Returnwerten (bzw. Tuple Unpacking)": [[188, "Funktionen-mit-mehreren-Returnwerten-(bzw.-Tuple-Unpacking)"]], "Iteration \u00fcber Containerdatentypen": [[188, "Iteration-\u00fcber-Containerdatentypen"]], "Listen": [[188, "Listen"], [222, "Listen"], [312, "Listen"]], "Was heisst \u201cUntypisiert\u201d?": [[188, "Was-heisst-\u201cUntypisiert\u201d?"]], "Wir l\u00f6schen den Integer": [[188, "Wir-l\u00f6schen-den-Integer"]], "Iterator Protocol, for Loops": [[188, "Iterator-Protocol,-for-Loops"]], "Iterable: Der Begriff": [[188, "Iterable:-Der-Begriff"]], "Zufall": [[188, "Zufall"]], "Regular Expressions": [[188, "Regular-Expressions"], [241, "Regular-Expressions"], [253, "Regular-Expressions"], [862, "regular-expressions"]], "enumerate()": [[188, "enumerate()"], [196, "enumerate()"], [199, "enumerate()"], [235, "enumerate()"], [253, "enumerate()"], [270, "enumerate()"], [292, "enumerate()"]], "JSON": [[188, "JSON"], [205, "JSON"], [215, "JSON"], [241, "JSON"], [250, "JSON"], [285, "JSON"], [288, "JSON"]], "2021-03-15": [[189, "id1"]], "Exercises (auf Github)": [[189, "exercises-auf-github"]], "Jupyter Notebook": [[189, "jupyter-notebook"], [191, "jupyter-notebook"], [208, "jupyter-notebook"], [210, "jupyter-notebook"], [213, "jupyter-notebook"], [219, "jupyter-notebook"], [224, "jupyter-notebook"], [227, "jupyter-notebook"], [230, "jupyter-notebook"], [312, "Jupyter-Notebook"], [1077, "jupyter-notebook"]], "Download": [[189, null], [191, null]], "Hallo Jupyter Notebook": [[190, "Hallo-Jupyter-Notebook"]], "Syntax": [[190, "Syntax"], [260, "Syntax"], [312, "Syntax"], [312, "id1"]], "Raw strings": [[190, "Raw-strings"]], "Variablen": [[190, "Variablen"], [222, "Variablen"]], "Tuple Unpacking": [[190, "Tuple-Unpacking"], [232, "Tuple-Unpacking"], [250, "Tuple-Unpacking"], [260, "Tuple-Unpacking"], [311, "Tuple-Unpacking"], [312, "Tuple-Unpacking"], [312, "id2"]], "Speicher, Memory Management": [[190, "Speicher,-Memory-Management"]], "Mutable vs.\u00a0Immutable": [[190, "Mutable-vs.\u00a0Immutable"], [241, "Mutable-vs.\u00a0Immutable"]], "Wie sch\u00fctze ich mich davor?": [[190, "Wie-sch\u00fctze-ich-mich-davor?"]], "Aber!!!!": [[190, "Aber!!!!"]], "Dictionary": [[190, "Dictionary"], [196, "Dictionary"], [204, "Dictionary"], [205, "Dictionary"], [209, "Dictionary"], [209, "id2"], [212, "Dictionary"], [215, "Dictionary"], [215, "id2"], [222, "Dictionary"], [235, "Dictionary"], [238, "Dictionary"], [250, "Dictionary"], [253, "Dictionary"], [253, "id4"], [260, "Dictionary"], [270, "Dictionary"], [274, "Dictionary"], [280, "Dictionary"], [292, "Dictionary"]], "Exercise: Liste von gemischten Datentypen": [[190, "Exercise:-Liste-von-gemischten-Datentypen"]], "Konstruktoren": [[190, "Konstruktoren"]], "Tag 2: Wiederholung, Fragen": [[190, "Tag-2:-Wiederholung,-Fragen"]], "for und range()": [[190, "for-und-range()"]], "Objektidentit\u00e4t": [[190, "Objektidentit\u00e4t"]], "Das with Statement": [[190, "Das-with-Statement"], [199, "Das-with-Statement"]], "Tuple Unpacking, Dictionary Iteration": [[190, "Tuple-Unpacking,-Dictionary-Iteration"]], "String Operationen": [[190, "String-Operationen"]], "enumerate(), und verlorene Indices": [[190, "enumerate(),-und-verlorene-Indices"]], "NumPy, matplotlib": [[190, "NumPy,-matplotlib"]], "Interpolation mittels scipy": [[190, "Interpolation-mittels-scipy"]], "Python Basic and Advanced (22.3.2021 - 25.3.2021)": [[191, "python-basic-and-advanced-22-3-2021-25-3-2021"]], "(Tutorial) Videos": [[191, "tutorial-videos"]], "Linux Basics, Shell Scripting (2021-03-29)": [[192, "linux-basics-shell-scripting-2021-03-29"]], "Course Details": [[192, null]], "Course Preparation": [[192, "course-preparation"], [245, "course-preparation"], [247, "course-preparation"], [255, "course-preparation"]], "SSH": [[192, "ssh"], [322, "ssh"]], "Linux and/or Shell on Windows Host": [[192, "linux-and-or-shell-on-windows-host"]], "Editor Support for Shell Scripting": [[192, "editor-support-for-shell-scripting"]], "Programmierung Grundlagen (12. und 13.4.2021)": [[194, "programmierung-grundlagen-12-und-13-4-2021"]], "Syntax etc.": [[196, "Syntax-etc."], [228, "Syntax-etc."], [274, "Syntax-etc."], [999, "syntax-etc"]], "Comments vs.\u00a0Documentation": [[196, "Comments-vs.\u00a0Documentation"]], "Variables": [[196, "Variables"], [209, "Variables"], [212, "Variables"], [228, "Variables"], [238, "Variables"], [270, "Variables"], [274, "Variables"], [312, "Variables"], [1001, "variables"]], "Assignment Fun": [[196, "Assignment-Fun"], [235, "Assignment-Fun"], [1001, "assignment-fun"]], "Assignment Details": [[196, "Assignment-Details"], [228, "Assignment-Details"], [235, "Assignment-Details"], [312, "Assignment-Details"], [1001, "assignment-details"]], "Operators": [[196, "Operators"], [232, "Operators"]], "Integer Arithmetic": [[196, "Integer-Arithmetic"]], "String Methods": [[196, "String-Methods"], [311, "String-Methods"]], "Datatype Conversions": [[196, "Datatype-Conversions"], [220, "Datatype-Conversions"], [222, "Datatype-Conversions"], [228, "Datatype-Conversions"], [232, "Datatype-Conversions"], [235, "Datatype-Conversions"], [253, "Datatype-Conversions"], [270, "Datatype-Conversions"], [274, "Datatype-Conversions"], [280, "Datatype-Conversions"], [292, "Datatype-Conversions"], [312, "Datatype-Conversions"], [1002, "datatype-conversions"]], "Strings k\u00f6nnen alles!": [[196, "Strings-k\u00f6nnen-alles!"]], "Complex Datatypes": [[196, "Complex-Datatypes"], [312, "Complex-Datatypes"]], "List (mutable)": [[196, "List-(mutable)"], [209, "List-(mutable)"]], "extend()? Iterable?": [[196, "extend()?-Iterable?"]], "Tuple (wie Liste, nur immutable)": [[196, "Tuple-(wie-Liste,-nur-immutable)"]], "in Operator": [[196, "in-Operator"], [235, "in-Operator"]], "Iteration \u00fcber Daten: mittels for": [[196, "Iteration-\u00fcber-Daten:-mittels-for"]], "enumerate(), sum(), map(), und so weiter": [[196, "enumerate(),-sum(),-map(),-und-so-weiter"]], "sum()": [[196, "sum()"]], "map()": [[196, "map()"], [199, "map()"]], "list() function": [[196, "list()-function"]], "Performance: in Operator, und list und set": [[196, "Performance:-in-Operator,-und-list-und-set"]], "Dynamische Evaluierung: eval()": [[196, "Dynamische-Evaluierung:-eval()"]], "Python Grundlagen (2021-05-03 - 2021-05-05)": [[197, "python-grundlagen-2021-05-03-2021-05-05"], [335, "python-grundlagen-2021-05-03-2021-05-05"]], "Weiterf\u00fchrende Information": [[197, "weiterfuhrende-information"]], "Visual Studio Code": [[197, "visual-studio-code"], [213, "visual-studio-code"], [1071, "visual-studio-code"]], "Python Beginner Tutorials": [[197, "python-beginner-tutorials"], [237, "python-beginner-tutorials"], [1071, "python-beginner-tutorials"]], "NumPy and Data Science Tutorials": [[197, "numpy-and-data-science-tutorials"], [237, "numpy-and-data-science-tutorials"], [240, "numpy-and-data-science-tutorials"], [273, "numpy-and-data-science-tutorials"], [1071, "numpy-and-data-science-tutorials"]], "PyPI (Installing Modules that don\u2019t come as Batteries)": [[197, "pypi-installing-modules-that-don-t-come-as-batteries"], [1071, "pypi-installing-modules-that-don-t-come-as-batteries"]], "Git, and Github": [[197, "git-and-github"], [1071, "git-and-github"]], "Conference Talks": [[197, "conference-talks"], [273, "conference-talks"], [1071, "conference-talks"]], "Python Grundlagen (Jupyter Notebook)": [[198, "python-grundlagen-jupyter-notebook"], [211, "python-grundlagen-jupyter-notebook"], [214, "python-grundlagen-jupyter-notebook"], [217, "python-grundlagen-jupyter-notebook"], [236, "python-grundlagen-jupyter-notebook"], [239, "python-grundlagen-jupyter-notebook"], [242, "python-grundlagen-jupyter-notebook"], [251, "python-grundlagen-jupyter-notebook"], [254, "python-grundlagen-jupyter-notebook"], [275, "python-grundlagen-jupyter-notebook"]], "import zipfile": [[199, "import-zipfile"]], "Read Contents \u2026": [[199, "Read-Contents-\u2026"]], "Extract One Member": [[199, "Extract-One-Member"]], "All in One, Using with": [[199, "All-in-One,-Using-with"]], "Functionality: Methods": [[199, "Functionality:-Methods"]], "Class Attributes vs.\u00a0Instance Attributes (not Variables)": [[199, "Class-Attributes-vs.\u00a0Instance-Attributes-(not-Variables)"]], "Instance Attributes": [[199, "Instance-Attributes"]], "Class Attributes": [[199, "Class-Attributes"]], "Public, Protected, Private": [[199, "Public,-Protected,-Private"]], "Properties": [[199, "Properties"], [228, "Properties"], [439, "properties"], [991, "properties"]], "Functions, Positional and Keyword Arguments": [[199, "Functions,-Positional-and-Keyword-Arguments"]], "Positional Arguments": [[199, "Positional-Arguments"]], "Keyword Arguments": [[199, "Keyword-Arguments"], [220, "Keyword-Arguments"], [313, "Keyword-Arguments"], [1013, "keyword-arguments"]], "Mixing Positional and Keyword Arguments": [[199, "Mixing-Positional-and-Keyword-Arguments"]], "The range() Function": [[199, "The-range()-Function"], [205, "The-range()-Function"], [212, "The-range()-Function"]], "Functional Programming, Iteration, yield, map(), filter(), \u2026": [[199, "Functional-Programming,-Iteration,-yield,-map(),-filter(),-\u2026"]], "Iterable": [[199, "Iterable"], [215, "Iterable"]], "list(), and iterable?": [[199, "list(),-and-iterable?"]], "Tuple Unpacking and the Rest": [[199, "Tuple-Unpacking-and-the-Rest"]], "Decorators, etc.": [[199, "Decorators,-etc."]], "NoneType and None": [[199, "NoneType-and-None"]], "File I/O": [[199, "File-I/O"], [228, "File-I/O"], [235, "File-I/O"], [238, "File-I/O"], [270, "File-I/O"], [274, "File-I/O"], [309, "File-I/O"], [908, "file-i-o"], [1021, "file-i-o"]], "Iteration, yield, Recursion": [[199, "Iteration,-yield,-Recursion"]], "Recursion": [[199, "Recursion"]], "Iteratively Calculating Fibonacci Numbers -> yield": [[199, "Iteratively-Calculating-Fibonacci-Numbers-->-yield"]], "map(), filter(), zip(), enumerate() \u2026": [[199, "map(),-filter(),-zip(),-enumerate()-\u2026"]], "map(), and several other ways to do the same": [[199, "map(),-and-several-other-ways-to-do-the-same"]], "zip()": [[199, "zip()"]], "filter(), and several other methods to do the same": [[199, "filter(),-and-several-other-methods-to-do-the-same"]], "OSError, errno": [[199, "OSError,-errno"]], "The platform Module, sys.path": [[199, "The-platform-Module,-sys.path"]], "os.path": [[199, "os.path"], [215, "os.path"], [222, "os.path"]], "Exceptions und so (assert())": [[199, "Exceptions-und-so-(assert())"]], "AssertionError": [[199, "AssertionError"]], "Random Questions": [[199, "Random-Questions"]], "Slicing": [[199, "Slicing"], [222, "Slicing"], [228, "Slicing"], [253, "Slicing"], [274, "Slicing"], [1092, "slicing"]], "OO": [[199, "OO"], [267, "oo"], [326, "oo"], [520, "oo"]], "String Formatting": [[199, "String-Formatting"], [205, "String-Formatting"], [1016, "string-formatting"]], "import datetime": [[199, "import-datetime"]], "Python Advanced (2021-05-25 - 2021-05-27)": [[200, "python-advanced-2021-05-25-2021-05-27"]], "Predefined streams": [[200, "predefined-streams"]], "PCAP Exam Syllabus": [[200, "pcap-exam-syllabus"], [213, "pcap-exam-syllabus"]], "2021-06-09": [[200, "id1"]], "Programmieren mit C (2021-06-14 - 2021-06-18)": [[201, "programmieren-mit-c-2021-06-14-2021-06-18"], [335, "programmieren-mit-c-2021-06-14-2021-06-18"]], "Preparation: Tools": [[201, "preparation-tools"]], "State machine": [[201, "state-machine"]], "Regular Course Topics": [[201, "regular-course-topics"]], "Development Tools (Git & CMake) Installation Massacre": [[201, "development-tools-git-cmake-installation-massacre"]], "Regular Course Material": [[201, "regular-course-material"], [201, "id1"]], "Group Project Kick-Off :-)": [[201, "group-project-kick-off"]], "Exercise: Encapsulate Index Access to userdb": [[201, "exercise-encapsulate-index-access-to-userdb"]], "Group Project (Use Case Driven Course Flow :-) )": [[201, "group-project-use-case-driven-course-flow"]], "Day 5": [[201, "day-5"], [202, "day-5"], [256, "day-5"]], "Pointer Recap": [[201, "pointer-recap"]], "On With Group Project": [[201, "on-with-group-project"]], "C++ Basics": [[201, "c-basics"]], "Pointers, Pointer Arithmetic, and the Standard Template Library (STL)": [[201, "pointers-pointer-arithmetic-and-the-standard-template-library-stl"]], "The C++ Programming Language (2021-07-12 - 2021-07-16)": [[202, "the-c-programming-language-2021-07-12-2021-07-16"]], "Setup for the new kids": [[202, "setup-for-the-new-kids"]], "Recapitulate some C": [[202, "recapitulate-some-c"]], "Group project review": [[202, "group-project-review"]], "Jump into C++": [[202, "jump-into-c"]], "Regular Topics": [[202, "regular-topics"], [202, "id2"], [202, "id4"]], "Toolchain: C/C++ Build (How Complicated Can Things Be?)": [[202, "toolchain-c-c-build-how-complicated-can-things-be"]], "Exercises: Using the C++ Toolbox": [[202, "exercises-using-the-c-toolbox"]], "Finish First \u201cUser Database\u201d Functionality": [[202, "finish-first-user-database-functionality"]], "Unit Testing": [[202, "unit-testing"], [259, "unit-testing"], [262, "unit-testing"], [325, "unit-testing"]], "GTest Installation": [[202, "gtest-installation"]], "Git Workflows": [[202, "git-workflows"]], "Day X": [[202, "day-x"]], "Smart Pointers, Recap": [[202, "smart-pointers-recap"]], "std::map": [[202, "std-map"], [598, "std-map"]], "OO, and Polymorphism": [[202, "oo-and-polymorphism"]], "Programmierung Grundlagen, anhand von Python (2. und 3.8.2021)": [[203, "programmierung-grundlagen-anhand-von-python-2-und-3-8-2021"], [335, "programmierung-grundlagen-anhand-von-python-2-und-3-8-2021"]], "Variablen und Datentypen": [[203, "variablen-und-datentypen"], [219, "variablen-und-datentypen"], [231, "variablen-und-datentypen"]], "Kontrollstrukturen": [[203, "kontrollstrukturen"], [219, "kontrollstrukturen"], [220, "Kontrollstrukturen"], [231, "kontrollstrukturen"]], "Datenstrukturen": [[204, "Datenstrukturen"]], "List": [[204, "List"], [205, "List"], [212, "List"], [215, "List"], [235, "List"], [238, "List"], [250, "List"], [253, "List"], [280, "List"], [292, "List"], [1100, "list"]], "Iteration": [[204, "Iteration"], [204, "id1"], [205, "Iteration"], [205, "id1"], [215, "Iteration"], [238, "Iteration"], [250, "Iteration"], [292, "Iteration"]], "User Datenbank: Showcase Full Stack Development": [[204, "User-Datenbank:-Showcase-Full-Stack-Development"]], "5: Response kommt von der DB": [[204, "5:-Response-kommt-von-der-DB"]], "6: Aufgabe: Formulieren eines JSON Strings, damit man diese Daten \u00fcber die HTTP Verbindung zum Client/Browser schicken kann.": [[204, "6:-Aufgabe:-Formulieren-eines-JSON-Strings,-damit-man-diese-Daten-\u00fcber-die-HTTP-Verbindung-zum-Client/Browser-schicken-kann."]], "7. Jetzt schickman weg: vom Server (PHP) zum Browser (JS)": [[204, "7.-Jetzt-schickman-weg:-vom-Server-(PHP)-zum-Browser-(JS)"]], "8. in JS JSON string empfangen": [[204, "8.-in-JS-JSON-string-empfangen"]], "9. Nun muessen wir den JSON-String in JS verwandlen": [[204, "9.-Nun-muessen-wir-den-JSON-String-in-JS-verwandlen"]], "Iterable?": [[205, "Iterable?"]], "List Comprehension, Generator Expression": [[205, "List-Comprehension,-Generator-Expression"]], "Literals": [[205, "Literals"], [464, "literals"]], "Quoting?": [[205, "Quoting?"], [209, "Quoting?"]], "Multiline Strings": [[205, "Multiline-Strings"], [209, "Multiline-Strings"], [1015, "multiline-strings"]], "Functionality": [[205, "Functionality"], [797, "functionality"]], "strip() and friends": [[205, "strip()-and-friends"]], "f-Strings (since Python 3.6)": [[205, "f-Strings-(since-Python-3.6)"]], "Parsing date formats": [[205, "Parsing-date-formats"]], "Read a Cleaned-Up SAP Export": [[206, "read-a-cleaned-up-sap-export"]], "Requirement": [[206, "requirement"], [463, "requirement"], [485, "requirement"], [486, "requirement"], [487, "requirement"], [491, "requirement"], [492, "requirement"], [493, "requirement"], [494, "requirement"], [495, "requirement"], [496, "requirement"], [900, "requirement"], [907, "requirement"], [1027, "requirement"], [1028, "requirement"], [1049, "requirement"], [1060, "requirement"], [1061, "requirement"], [1062, "requirement"], [1063, "requirement"], [1065, "requirement"], [1066, "requirement"], [1067, "requirement"], [1068, "requirement"]], "Solution": [[206, "solution"], [442, "solution"], [444, "solution"], [447, "solution"], [1108, "solution"]], "Python Grundlagen (2021-08-23 - 2021-08-25)": [[207, "python-grundlagen-2021-08-23-2021-08-25"]], "Initial Terminology": [[209, "Initial-Terminology"]], "Sequence": [[209, "Sequence"]], "Tuple (immutable)": [[209, "Tuple-(immutable)"]], "References, (Im)mutability": [[209, "References,-(Im)mutability"], [222, "References,-(Im)mutability"], [235, "References,-(Im)mutability"], [238, "References,-(Im)mutability"], [253, "References,-(Im)mutability"], [260, "References,-(Im)mutability"], [274, "References,-(Im)mutability"], [280, "References,-(Im)mutability"], [280, "id1"], [292, "References,-(Im)mutability"], [1011, "references-im-mutability"]], "Iteration, for, and range()": [[209, "Iteration,-for,-and-range()"]], "Iterator Protocol (not so important for beginners)": [[209, "Iterator-Protocol-(not-so-important-for-beginners)"]], "Iteration, and Compound Datatypes": [[209, "Iteration,-and-Compound-Datatypes"]], "List and Tuple": [[209, "List-and-Tuple"]], "matplotlib": [[209, "matplotlib"], [241, "matplotlib"]], "File I/O, and Strings": [[209, "File-I/O,-and-Strings"]], "Raw strings: Windows path names": [[209, "Raw-strings:-Windows-path-names"]], "Miscellaneous String Methods": [[209, "Miscellaneous-String-Methods"], [220, "Miscellaneous-String-Methods"], [222, "Miscellaneous-String-Methods"], [228, "Miscellaneous-String-Methods"], [238, "Miscellaneous-String-Methods"], [253, "Miscellaneous-String-Methods"], [274, "Miscellaneous-String-Methods"], [280, "Miscellaneous-String-Methods"], [1017, "miscellaneous-string-methods"]], "Python Basics (2021-08-31 - 2021-09-01)": [[210, "python-basics-2021-08-31-2021-09-01"], [335, "python-basics-2021-08-31-2021-09-01"]], "Numerics, and AI": [[210, "numerics-and-ai"]], "Mountains near Graz": [[210, "mountains-near-graz"]], "2021-11-17": [[212, "2021-11-17"]], "Enter Tuples": [[212, "Enter-Tuples"]], "Datatype Conversions, Type Names": [[212, "Datatype-Conversions,-Type-Names"]], "NoneType": [[212, "NoneType"]], "Short Circuit Evaluation of Boolean Expression": [[212, "Short-Circuit-Evaluation-of-Boolean-Expression"]], "Exercise: Mixed List": [[212, "Exercise:-Mixed-List"]], "Python Documentation": [[212, "Python-Documentation"]], "for": [[212, "for"], [274, "for"], [312, "for"]], "Iteration over Compound Datatypes": [[212, "Iteration-over-Compound-Datatypes"], [222, "Iteration-over-Compound-Datatypes"]], "File IO": [[212, "File-IO"], [228, "File-IO"], [256, "file-io"], [260, "File-IO"]], "Generators, Iterator Protocol, for": [[212, "Generators,-Iterator-Protocol,-for"]], "Common Sequence Operation": [[212, "Common-Sequence-Operation"]], "Comprehensions": [[212, "Comprehensions"], [215, "Comprehensions"], [228, "Comprehensions"], [260, "Comprehensions"], [292, "Comprehensions"]], "List, Iterable? WTF?": [[212, "List,-Iterable?-WTF?"]], "Dict and iterable": [[212, "Dict-and-iterable"]], "More on Lists": [[212, "More-on-Lists"], [220, "More-on-Lists"], [235, "More-on-Lists"]], "More on Dictionaries": [[212, "More-on-Dictionaries"], [220, "More-on-Dictionaries"]], "References, Mutability": [[212, "References,-Mutability"]], "CSV": [[212, "CSV"], [229, "csv"], [237, "csv"], [274, "CSV"]], "Python Basics (2021-11-17 - 2021-11-19)": [[213, "python-basics-2021-11-17-2021-11-19"], [335, "python-basics-2021-11-17-2021-11-19"]], "Python (Core Topics)": [[213, "python-core-topics"]], "Python Standard Library": [[213, "python-standard-library"]], "More About Strings": [[215, "More-About-Strings"], [232, "More-About-Strings"], [280, "More-About-Strings"], [1015, "more-about-strings"]], "List, Tuple": [[215, "List,-Tuple"], [270, "List,-Tuple"], [274, "List,-Tuple"]], "Tuple Unpacking: What Else": [[215, "Tuple-Unpacking:-What-Else"]], "Iterator Protocol": [[215, "Iterator-Protocol"], [222, "Iterator-Protocol"], [253, "Iterator-Protocol"], [270, "Iterator-Protocol"], [274, "Iterator-Protocol"]], "yield": [[215, "yield"], [238, "yield"]], "Everything is an Object of a Type": [[215, "Everything-is-an-Object-of-a-Type"]], "Generators, used more creatively": [[215, "Generators,-used-more-creatively"]], "Exception Handling and Exception Types": [[215, "Exception-Handling-and-Exception-Types"]], "2021-12-17": [[215, "2021-12-17"]], "Shift Operators": [[215, "Shift-Operators"]], "PCAP Sample Exam": [[215, "PCAP-Sample-Exam"]], "System Errors": [[215, "System-Errors"]], "Python Advanced (2021-12-01 - 2021-12-03)": [[216, "python-advanced-2021-12-01-2021-12-03"], [335, "python-advanced-2021-12-01-2021-12-03"]], "Basics Recap": [[216, "basics-recap"], [269, "basics-recap"]], "Group Project Preparation": [[216, "group-project-preparation"]], "Hmmm?": [[216, "hmmm"]], "C/C++ Programming (2021-12-06 - 2021-12-10, 2022-01-24 - 2022-02-04)": [[218, "c-c-programming-2021-12-06-2021-12-10-2022-01-24-2022-02-04"], [335, "c-c-programming-2021-12-06-2021-12-10-2022-01-24-2022-02-04"]], "2021-12-06": [[218, "id1"]], "2021-12-07": [[218, "id2"]], "2021-12-08": [[218, "id3"]], "2021-12-09": [[218, "id4"]], "2022-01-24": [[218, "id5"]], "Undefined Behavior": [[218, "undefined-behavior"]], "Modularization": [[218, "modularization"], [380, "modularization"]], "2022-01-25": [[218, "id6"]], "C++ and OO (Classes)": [[218, "c-and-oo-classes"]], "Modularization (again)": [[218, "modularization-again"]], "2022-01-26": [[218, "id7"]], "Modularization: Repeating Important Topics (Quickly)": [[218, "modularization-repeating-important-topics-quickly"]], "Classes (continued)": [[218, "classes-continued"]], "2022-01-27": [[218, "id8"]], "2022-01-28": [[218, "id9"]], "Standard Template Library: Container Templates": [[218, "standard-template-library-container-templates"]], "2022-01-31": [[218, "id10"]], "2022-02-01": [[218, "id11"]], "Algorithms": [[218, "algorithms"], [587, "algorithms"]], "Functors": [[218, "functors"]], "Unified Modeling Language (UML)": [[218, "unified-modeling-language-uml"]], "Exercise (Using All From Today)": [[218, "exercise-using-all-from-today"]], "2022-02-02": [[218, "id12"]], "Associative Container: std::map": [[218, "associative-container-std-map"]], "Exceptions, and Exception Handling": [[218, "exceptions-and-exception-handling"]], "2022-02-03": [[218, "id13"]], "2022-02-04": [[218, "id14"]], "C++11: A New Language": [[218, "c-11-a-new-language"]], "Dynamic Allocation, Smart Pointers": [[218, "dynamic-allocation-smart-pointers"]], "2022-02-07: Start of Exercise Week": [[218, "start-of-exercise-week"]], "Programmierung Grundlagen, anhand von Python (2022-01-17 - 2022-01-10)": [[219, "programmierung-grundlagen-anhand-von-python-2022-01-17-2022-01-10"], [335, "programmierung-grundlagen-anhand-von-python-2022-01-17-2022-01-10"]], "2022-01-17": [[220, "2022-01-17"]], "Variables and Datatypes": [[220, "Variables-and-Datatypes"]], "Comments vs Docstrings": [[220, "Comments-vs-Docstrings"]], "Integer (Ganze Zahl)": [[220, "Integer-(Ganze-Zahl)"]], "Integer Numbers: Arithmetic": [[220, "Integer-Numbers:-Arithmetic"], [232, "Integer-Numbers:-Arithmetic"], [1002, "integer-numbers-arithmetic"]], "Some Methods": [[220, "Some-Methods"]], "String Formatting: f-Strings": [[220, "String-Formatting:-f-Strings"]], "More about Strings": [[220, "More-about-Strings"]], "if": [[220, "if"], [260, "if"]], "2022-01-18": [[220, "2022-01-18"]], "Miscellanea": [[220, "Miscellanea"]], "Braces: Single Element Tuples?": [[220, "Braces:-Single-Element-Tuples?"]], "Ranges -> range() (hour_of_day)": [[220, "Ranges-->-range()-(hour_of_day)"]], "while Loops": [[220, "while-Loops"], [222, "while-Loops"], [235, "while-Loops"], [1006, "while-loops"], [1006, "id1"]], "break and continue": [[220, "break-and-continue"], [377, "break-and-continue"], [377, "id1"], [1006, "break-and-continue"]], "yield, Generator, Iteration Protocol": [[220, "yield,-Generator,-Iteration-Protocol"]], "Sequence Membership": [[220, "Sequence-Membership"], [1007, "sequence-membership"]], "list (mutable)": [[220, "list-(mutable)"]], "tuple (immutable)": [[220, "tuple-(immutable)"]], "dict (mutable)": [[220, "dict-(mutable)"]], "set (mutable)": [[220, "set-(mutable)"]], "Why Index Based Iteration is not Always the Best Way to Iterate": [[220, "Why-Index-Based-Iteration-is-not-Always-the-Best-Way-to-Iterate"]], "How to get Indexes if There are None? (enumerate(), and Tuple Unpacking)": [[220, "How-to-get-Indexes-if-There-are-None?-(enumerate(),-and-Tuple-Unpacking)"]], "Default Parameters": [[220, "Default-Parameters"], [222, "Default-Parameters"], [313, "Default-Parameters"], [1013, "default-parameters"]], "List Comprehensions": [[220, "List-Comprehensions"], [232, "List-Comprehensions"]], "Iteration over Dictionaries": [[220, "Iteration-over-Dictionaries"]], "Building Dictionaries": [[220, "Building-Dictionaries"], [1019, "building-dictionaries"]], "More on Sets": [[220, "More-on-Sets"]], "with: Context Managers": [[220, "with:-Context-Managers"]], "Strings Intro": [[222, "Strings-Intro"]], "Doc Strings": [[222, "Doc-Strings"]], "Object Identity": [[222, "Object-Identity"]], "Integers": [[222, "Integers"], [232, "Integers"], [235, "Integers"], [253, "Integers"], [260, "Integers"], [280, "Integers"]], "Variablen? Datenypen?": [[222, "Variablen?-Datenypen?"]], "Objects, Classes": [[222, "Objects,-Classes"]], "Python Standard Libarary Examples": [[222, "Python-Standard-Libarary-Examples"]], "collections": [[222, "collections"]], "ChainMap": [[222, "ChainMap"]], "deque": [[222, "deque"]], "Suchalgorithmen und Datenstrukturen (Ausflug)": [[222, "Suchalgorithmen-und-Datenstrukturen-(Ausflug)"]], "Slice Assignment": [[222, "Slice-Assignment"], [1008, "slice-assignment"]], "Lists are mutable": [[222, "Lists-are-mutable"]], "Shallow copy and deep copy": [[222, "Shallow-copy-and-deep-copy"]], "else": [[222, "else"], [228, "else"]], "for Loops, range()": [[222, "for-Loops,-range()"]], "Default Parameters: Pitfalls": [[222, "Default-Parameters:-Pitfalls"]], "dict.fromkeys()": [[222, "dict.fromkeys()"], [235, "dict.fromkeys()"]], "Generators": [[222, "Generators"], [228, "Generators"], [268, "generators"], [269, "generators"], [273, "generators"], [290, "generators"], [294, "generators"]], "join, split": [[222, "join,-split"]], "strip, lstrip, rstrip": [[222, "strip,-lstrip,-rstrip"]], "Python Basics (2022-02-23 - 2022-02-25)": [[223, "python-basics-2022-02-23-2022-02-25"], [335, "python-basics-2022-02-23-2022-02-25"]], "Data Structures": [[223, "data-structures"]], "OS Things": [[223, "os-things"]], "Data Science": [[223, "data-science"], [291, "data-science"], [292, "Data-Science"]], "Wiederholung": [[225, "Wiederholung"]], "Mutable/Immutable": [[225, "Mutable/Immutable"]], "Attribute": [[225, "Attribute"]], "Sequentielle vs.\u00a0Konstante Suchzeit": [[225, "Sequentielle-vs.\u00a0Konstante-Suchzeit"]], "Exceptions": [[225, "Exceptions"], [241, "Exceptions"], [266, "exceptions"], [520, "exceptions"], [567, "exceptions"], [568, "exceptions"]], "for vs.\u00a0while, range()": [[225, "for-vs.\u00a0while,-range()"]], "String Methods (some)": [[225, "String-Methods-(some)"]], "eval()": [[225, "eval()"], [235, "eval()"], [292, "eval()"]], "exec()": [[225, "exec()"], [241, "exec()"]], "Dictionary Iteration": [[225, "Dictionary-Iteration"]], "Classes, Attributes, OO": [[225, "Classes,-Attributes,-OO"]], "Types and Instances": [[225, "Types-and-Instances"]], "Metaprogramming? Types? What is a Type?": [[225, "Metaprogramming?-Types?-What-is-a-Type?"]], "OO Everywhere": [[225, "OO-Everywhere"]], "Dictionary Operations": [[225, "Dictionary-Operations"]], "collections.defaultdict": [[225, "collections.defaultdict"], [250, "collections.defaultdict"]], "Python Advanced (2022-03-15 - 2022-03-17, 2022-03-31)": [[226, "python-advanced-2022-03-15-2022-03-17-2022-03-31"]], "2022-03-15": [[226, "id1"]], "2022-03-16": [[226, "id2"]], "Test Driven Development": [[226, "test-driven-development"], [268, "test-driven-development"], [290, "test-driven-development"], [291, "test-driven-development"]], "2022-03-17": [[226, "id3"]], "2022-03-31": [[226, "id4"]], "PCAP exam preparation": [[226, "pcap-exam-preparation"]], "Hello World": [[228, "Hello-World"], [339, "hello-world"], [997, "hello-world"]], "Blahblah": [[228, "Blahblah"], [577, "blahblah"], [996, "blahblah"]], "Object Oriented?": [[228, "Object-Oriented?"]], "MQTT": [[228, "MQTT"], [294, "mqtt"], [1087, "mqtt"]], "Commandline Arguments": [[228, "Commandline-Arguments"], [391, "commandline-arguments"], [391, "id1"]], "Object Lifetime": [[228, "Object-Lifetime"]], "Boolean, Short Circuit Evaluation": [[228, "Boolean,-Short-Circuit-Evaluation"]], "More String Methods": [[228, "More-String-Methods"], [228, "id1"]], "Dictionary Preview": [[228, "Dictionary-Preview"]], "list: Mutable": [[228, "list:-Mutable"]], "list(): explicit constructor": [[228, "list():-explicit-constructor"]], "tuple: Immutable": [[228, "tuple:-Immutable"]], "dict: Mutable": [[228, "dict:-Mutable"]], "set: Mutable": [[228, "set:-Mutable"]], "List comprehension": [[228, "List-comprehension"]], "DIctionary Comprehension": [[228, "DIctionary-Comprehension"]], "Set Comprehension": [[228, "Set-Comprehension"], [292, "Set-Comprehension"], [967, "set-comprehension"]], "max": [[228, "max"]], "for, enumerate()": [[228, "for,-enumerate()"]], "Iteratoren, Generatoren": [[228, "Iteratoren,-Generatoren"]], "Generatoren": [[228, "Generatoren"]], "split und join": [[228, "split-und-join"]], "strip()": [[228, "strip()"]], "dict vs.\u00a0OrderedDict": [[228, "dict-vs.\u00a0OrderedDict"]], "Duck Typing": [[228, "Duck-Typing"], [983, "duck-typing"]], "Interfaces": [[228, "Interfaces"], [616, "interfaces"], [616, "id1"]], "Implementation Inheritance": [[228, "Implementation-Inheritance"]], "Method Resolution Order (MRO), and super()": [[228, "Method-Resolution-Order-(MRO),-and-super()"]], "__bases__": [[228, "__bases__"]], "__mro__": [[228, "__mro__"]], "Object Layout (self)": [[228, "Object-Layout-(self)"]], "More from OO": [[228, "More-from-OO"]], "Calling Base Class Constructor (Many Ways)": [[228, "Calling-Base-Class-Constructor-(Many-Ways)"]], "Name Mangling (\u201cprivate\u201d Members)": [[228, "Name-Mangling-(\u201cprivate\u201d-Members)"]], "Yet Another Example From Udemy": [[228, "Yet-Another-Example-From-Udemy"]], "Exception Handling": [[228, "Exception-Handling"], [259, "exception-handling"], [262, "exception-handling"], [267, "exception-handling"], [328, "exception-handling"], [970, "exception-handling"]], "Order of except Clauses": [[228, "Order-of-except-Clauses"]], "finally": [[228, "finally"]], "lambda": [[228, "lambda"]], "map(), filter()": [[228, "map(),-filter()"], [292, "map(),-filter()"]], "Generators, Iteration Protocol": [[228, "Generators,-Iteration-Protocol"]], "Class Variables (as Opposed to Instance Variables)": [[228, "Class-Variables-(as-Opposed-to-Instance-Variables)"]], "Python (2022-03-23, 2022-03-30, 2022-04-19 - 2022-03-21)": [[229, "python-2022-03-23-2022-03-30-2022-04-19-2022-03-21"], [335, "python-2022-03-23-2022-03-30-2022-04-19-2022-03-21"]], "2022-03-23: Basics": [[229, "basics"]], "2022-03-30: Basics": [[229, "id1"]], "2022-04-19, 2022-04-20, 2022-04-21: Advanced": [[229, "advanced"]], "Plan For The Wild Part": [[229, "plan-for-the-wild-part"]], "Programmierung Grundlagen, anhand von Python (2022-04-05 - 2022-04-08)": [[231, "programmierung-grundlagen-anhand-von-python-2022-04-05-2022-04-08"], [335, "programmierung-grundlagen-anhand-von-python-2022-04-05-2022-04-08"]], "Discussion: Flow Charts?": [[231, "discussion-flow-charts"]], "BlahBlah": [[232, "BlahBlah"], [235, "BlahBlah"], [238, "BlahBlah"]], "Interactive": [[232, "Interactive"]], "For Beginners": [[232, "For-Beginners"]], "Not For Beginners?": [[232, "Not-For-Beginners?"]], "Strings, 1st Explanation": [[232, "Strings,-1st-Explanation"]], "Operator Precedence": [[232, "Operator-Precedence"], [235, "Operator-Precedence"], [1002, "operator-precedence"]], "Floating Point Numbers": [[232, "Floating-Point-Numbers"], [1002, "floating-point-numbers"]], "Docstrings": [[232, "Docstrings"], [238, "Docstrings"], [312, "Docstrings"]], "Einschub: String-Vergleich vs.\u00a0Integer-Vergleich": [[232, "Einschub:-String-Vergleich-vs.\u00a0Integer-Vergleich"]], "Random Numbers": [[232, "Random-Numbers"]], "Indexing and Slicing": [[232, "Indexing-and-Slicing"], [280, "Indexing-and-Slicing"], [1008, "indexing-and-slicing"]], "for Loops": [[232, "for-Loops"], [342, "for-loops"], [1009, "for-loops"]], "range()": [[232, "range()"], [260, "range()"]], "Filterketten": [[232, "Filterketten"]], "Zen": [[232, "Zen"]], "Compound Datatypes By Example: List, Tuple": [[232, "Compound-Datatypes-By-Example:-List,-Tuple"], [1003, "compound-datatypes-by-example-list-tuple"]], "Compound Datatypes By Example: Dictionary": [[232, "Compound-Datatypes-By-Example:-Dictionary"], [1003, "compound-datatypes-by-example-dictionary"]], "Datensatz als Dictionary?": [[232, "Datensatz-als-Dictionary?"]], "JSON (Javascript Object Notation)": [[232, "JSON-(Javascript-Object-Notation)"]], "Compound Datatypes By Example: Set": [[232, "Compound-Datatypes-By-Example:-Set"], [1003, "compound-datatypes-by-example-set"]], "Das Letzte Beispiel am Letzten Tag": [[232, "Das-Letzte-Beispiel-am-Letzten-Tag"]], "Python Basics (2022-04-25 - 2022-04-27)": [[234, "python-basics-2022-04-25-2022-04-27"], [335, "python-basics-2022-04-25-2022-04-27"]], "Strings und Quotes": [[235, "Strings-und-Quotes"]], "Comments vs.\u00a0Docstrings": [[235, "Comments-vs.\u00a0Docstrings"]], "Variables and Types": [[235, "Variables-and-Types"]], "Swap": [[235, "Swap"]], "Integers are Infinitely long": [[235, "Integers-are-Infinitely-long"]], "Floating Point Comparison": [[235, "Floating-Point-Comparison"]], "Mutability/Immutability": [[235, "Mutability/Immutability"]], "Exercise: Digit To English Word": [[235, "Exercise:-Digit-To-English-Word"]], "Exercise: Determine Maximum of Two Numbers": [[235, "Exercise:-Determine-Maximum-of-Two-Numbers"], [1035, "exercise-determine-maximum-of-two-numbers"], [1045, "exercise-determine-maximum-of-two-numbers"]], "Ranges": [[235, "Ranges"], [693, "ranges"]], "Exercise: Sort out Duplicates": [[235, "Exercise:-Sort-out-Duplicates"]], "Algorithmic Complexity": [[235, "Algorithmic-Complexity"]], "More On Dictionaries": [[235, "More-On-Dictionaries"]], "More On Sets": [[235, "More-On-Sets"]], "eval(), json": [[235, "eval(),-json"]], "Encoding": [[235, "Encoding"], [259, "encoding"], [280, "Encoding"], [317, "encoding"], [1084, "encoding"]], "Python (2022-05-02 - 2022-05-05)": [[237, "python-2022-05-02-2022-05-05"], [335, "python-2022-05-02-2022-05-05"]], "Control Flow and Iteration": [[237, "control-flow-and-iteration"]], "Encoding, Strings, and File I/O": [[237, "encoding-strings-and-file-i-o"]], "Excursion: CAN Communication, OO, Modules": [[237, "excursion-can-communication-oo-modules"]], "Modules": [[237, "modules"], [250, "Modules"], [291, "modules"], [317, "modules"], [688, "modules"], [978, "modules"]], "CSV, Functions": [[237, "csv-functions"]], "PyPI, Virtual Environments": [[237, "pypi-virtual-environments"]], "Requirements Engineering, Test Driven Development": [[237, "requirements-engineering-test-driven-development"]], "More On DataTypes": [[237, "more-on-datatypes"]], "Random Topics": [[237, "random-topics"]], "Standard Library": [[237, "standard-library"]], "Hello Jupyter Notebook": [[238, "Hello-Jupyter-Notebook"]], "Syntax etc": [[238, "Syntax-etc"]], "Mutability": [[238, "Mutability"], [270, "Mutability"]], "Removing Elements": [[238, "Removing-Elements"], [598, "removing-elements"]], "Nested Lists?": [[238, "Nested-Lists?"]], "while loops, and else": [[238, "while-loops,-and-else"]], "for loops (and else)": [[238, "for-loops-(and-else)"]], "The range() Function, Iterator Protocol": [[238, "The-range()-Function,-Iterator-Protocol"]], "Encoding, and String": [[238, "Encoding,-and-String"]], "Regular Expression": [[238, "Regular-Expression"]], "f-Strings (since Python 3.6 !!)": [[238, "f-Strings-(since-Python-3.6-!!)"]], "Tuples Containing Only One Element": [[238, "Tuples-Containing-Only-One-Element"]], "Iterables, Lists, and the itertools Modules": [[238, "Iterables,-Lists,-and-the-itertools-Modules"]], "itertools.chain()": [[238, "itertools.chain()"]], "Destructor?": [[238, "Destructor?"]], "Tuple Unpacking on Dictionaries": [[238, "Tuple-Unpacking-on-Dictionaries"]], "Python Advanced (2022-05-16 - 2022-05-18)": [[240, "python-advanced-2022-05-16-2022-05-18"], [335, "python-advanced-2022-05-16-2022-05-18"]], "Project Management": [[240, "project-management"], [291, "project-management"], [324, "project-management"], [325, "project-management"], [329, "project-management"]], "Unit Testing, Test Driven Development": [[240, "unit-testing-test-driven-development"]], "Object Priented Programming": [[240, "object-priented-programming"]], "OO: next exercise (CSV as always \ud83d\ude44)": [[240, "oo-next-exercise-csv-as-always-rolling-eyes"]], "Exercise: Exception Handling": [[240, "exercise-exception-handling"]], "Standesregister nach SQLite3": [[240, "standesregister-nach-sqlite3"]], "XML/Element Tree": [[240, "xml-element-tree"]], "Projektabschlusstag": [[240, "projektabschlusstag"]], "Basic Python": [[240, "basic-python"], [1134, "basic-python"]], "Assert": [[241, "Assert"]], "The id() function": [[241, "The-id()-function"]], "class Person": [[241, "class-Person"]], "Functions That Do Not Return Anything": [[241, "Functions-That-Do-Not-Return-Anything"]], "Classes, Attributes, und so (Dictionaries Everywhere!)": [[241, "Classes,-Attributes,-und-so-(Dictionaries-Everywhere!)"]], "Globale, lokale, und Class Variablen": [[241, "Globale,-lokale,-und-Class-Variablen"]], "Defining my Own Exceptions": [[241, "Defining-my-Own-Exceptions"]], "Dictionary Lookup, keys() etc.": [[241, "Dictionary-Lookup,-keys()-etc."]], "Integers, Strings, und so": [[241, "Integers,-Strings,-und-so"]], "Vorbesprechung 2022-05-11": [[243, "vorbesprechung-2022-05-11"]], "Legende": [[243, "legende"]], "Neuerungen in C++ seit 2011": [[243, "neuerungen-in-c-seit-2011"]], "Neuerungen in C++ 14": [[243, "neuerungen-in-c-14"]], "Neuerungen in C++ 17": [[243, "neuerungen-in-c-17"]], "Neuerungen in C++ 20 (Ausblick)": [[243, "neuerungen-in-c-20-ausblick"]], "C++: A New Language Starting In 2011": [[244, "c-a-new-language-starting-in-2011"], [245, "c-a-new-language-starting-in-2011"]], "Metadata": [[244, "metadata"], [245, "metadata"], [247, "metadata"], [855, "metadata"]], "Introduction": [[244, "introduction"], [245, "introduction"], [247, "introduction"], [266, "introduction"], [267, "introduction"], [298, "introduction"], [338, "introduction"], [355, "introduction"], [417, "introduction"], [448, "introduction"], [543, "introduction"], [640, "introduction"], [699, "introduction"], [723, "introduction"], [773, "introduction"], [970, "introduction"]], "Pythonicity (Thank You: Readablility and Writability)": [[244, "pythonicity-thank-you-readablility-and-writability"], [245, "pythonicity-thank-you-readablility-and-writability"], [247, "pythonicity-thank-you-readablility-and-writability"], [298, "pythonicity-thank-you-readablility-and-writability"]], "Range Based for Loops": [[244, "range-based-for-loops"], [245, "range-based-for-loops"], [247, "range-based-for-loops"], [298, "range-based-for-loops"]], "Tuple Unpacking (err, Structured Binding)": [[244, "tuple-unpacking-err-structured-binding"], [245, "tuple-unpacking-err-structured-binding"], [247, "tuple-unpacking-err-structured-binding"], [298, "tuple-unpacking-err-structured-binding"]], "Duck Typing (err, auto) Without A Duck": [[244, "duck-typing-err-auto-without-a-duck"], [245, "duck-typing-err-auto-without-a-duck"], [247, "duck-typing-err-auto-without-a-duck"], [298, "duck-typing-err-auto-without-a-duck"]], "Things That Simply Deserved Fixing Since Ages": [[244, "things-that-simply-deserved-fixing-since-ages"], [245, "things-that-simply-deserved-fixing-since-ages"], [247, "things-that-simply-deserved-fixing-since-ages"], [298, "things-that-simply-deserved-fixing-since-ages"]], "Brace Initialization": [[244, "brace-initialization"], [245, "brace-initialization"], [247, "brace-initialization"], [298, "brace-initialization"]], "New OO keywords: override, final, default, delete": [[244, "new-oo-keywords-override-final-default-delete"], [245, "new-oo-keywords-override-final-default-delete"], [247, "new-oo-keywords-override-final-default-delete"], [298, "new-oo-keywords-override-final-default-delete"]], "Strongly Typed enum": [[244, "strongly-typed-enum"], [245, "strongly-typed-enum"], [247, "strongly-typed-enum"], [298, "strongly-typed-enum"], [643, "strongly-typed-enum"]], "Delegating Constructor": [[244, "delegating-constructor"], [245, "delegating-constructor"], [247, "delegating-constructor"], [298, "delegating-constructor"], [648, "delegating-constructor"]], "nullptr": [[244, "nullptr"], [245, "nullptr"], [247, "nullptr"], [298, "nullptr"], [656, "nullptr"]], "Smart Pointers": [[244, "smart-pointers"], [245, "smart-pointers"], [247, "smart-pointers"], [267, "smart-pointers"], [520, "smart-pointers"]], "Moving, \u201cRValue References\u201d": [[244, "moving-rvalue-references"], [245, "moving-rvalue-references"]], "Functions (std::bind<>, std::function<>, Lambdas)": [[244, "functions-std-bind-std-function-lambdas"], [245, "functions-std-bind-std-function-lambdas"], [247, "functions-std-bind-std-function-lambdas"]], "Work Environment": [[245, "work-environment"], [247, "work-environment"], [265, "work-environment"], [266, "work-environment"], [267, "work-environment"], [324, "work-environment"]], "Skeleton Project": [[245, "skeleton-project"], [247, "skeleton-project"], [562, "skeleton-project"]], "Linux Basics (2022-10-03 - 2022-10-05)": [[246, "linux-basics-2022-10-03-2022-10-05"], [335, "linux-basics-2022-10-03-2022-10-05"]], "C++: A New Language Starting In 2011 (2022-10-11 - 2022-10-13)": [[247, "c-a-new-language-starting-in-2011-2022-10-11-2022-10-13"], [335, "c-a-new-language-starting-in-2011-2022-10-11-2022-10-13"]], "Moving, \u201cRValue References\u201d, And Perfect Forwarding": [[247, "moving-rvalue-references-and-perfect-forwarding"]], "News in C++20 (2023-06-13)": [[247, "news-in-c-20-2023-06-13"]], "Coroutines and C++23 Generators": [[247, "coroutines-and-c-23-generators"]], "Ranges And Views": [[247, "ranges-and-views"]], "Concepts": [[247, "concepts"], [298, "concepts"], [658, "concepts"]], "Design- and Architectural Patterns With C++ (2022-10-24 - 2022-10-26)": [[248, "design-and-architectural-patterns-with-c-2022-10-24-2022-10-26"], [335, "design-and-architectural-patterns-with-c-2022-10-24-2022-10-26"]], "Monday": [[248, "monday"]], "Tuesday": [[248, "tuesday"]], "Wednesday": [[248, "wednesday"]], "Python: Tour-De-Force (2022-11-07 - 2022-11-10, 2022-12-01)": [[249, "python-tour-de-force-2022-11-07-2022-11-10-2022-12-01"]], "Up Front: Project Management": [[249, "up-front-project-management"], [268, "up-front-project-management"], [290, "up-front-project-management"]], "Object Oriented Programming: Classes": [[249, "object-oriented-programming-classes"]], "Exercise Series: CSV": [[249, "exercise-series-csv"]], "Missing Pieces: Encoding, Unit Testing": [[249, "missing-pieces-encoding-unit-testing"]], "Exercise Series: CSV, JSON": [[249, "exercise-series-csv-json"]], "Iteration, Generators": [[249, "iteration-generators"]], "Going Dynamic: type(), exec()": [[249, "going-dynamic-type-exec"]], "More OO: Inheritance, Abstract Base Classes": [[249, "more-oo-inheritance-abstract-base-classes"]], "Group Project Kickoff": [[249, "group-project-kickoff"], [269, "group-project-kickoff"], [291, "group-project-kickoff"], [294, "group-project-kickoff"]], "Data Structures Recap": [[249, "data-structures-recap"]], "Miscellaneous Livehacking": [[249, "miscellaneous-livehacking"]], "Function Arguments, Closures, Decorators": [[249, "function-arguments-closures-decorators"], [284, "function-arguments-closures-decorators"]], "Exceptions, with": [[249, "exceptions-with"], [284, "exceptions-with"], [287, "exceptions-with"]], "Package Management": [[249, "package-management"]], "Videos": [[249, "videos"]], "Beginner": [[249, "beginner"], [273, "beginner"]], "Advanced": [[249, "advanced"], [273, "advanced"]], "Fun": [[249, "fun"]], "Python (2022-10-17)": [[250, "Python-(2022-10-17)"]], "Tuple Unpacking, Lists Iteration, And Such": [[250, "Tuple-Unpacking,-Lists-Iteration,-And-Such"]], "Variables, Types": [[250, "Variables,-Types"]], "Immutable? References?": [[250, "Immutable?-References?"]], "And range()?": [[250, "And-range()?"]], "More About Dictionaries": [[250, "More-About-Dictionaries"], [250, "id1"], [253, "More-About-Dictionaries"], [280, "More-About-Dictionaries"], [1019, "more-about-dictionaries"]], "More About Lists": [[250, "More-About-Lists"], [253, "More-About-Lists"], [280, "More-About-Lists"], [1018, "more-about-lists"]], "Python (2022-11-16 - 2022-11-18)": [[252, "python-2022-11-16-2022-11-18"], [253, "Python-(2022-11-16---2022-11-18)"], [335, "python-2022-11-16-2022-11-18"]], "Control Flow, Sequences, Iteration": [[252, "control-flow-sequences-iteration"], [259, "control-flow-sequences-iteration"], [262, "control-flow-sequences-iteration"], [272, "control-flow-sequences-iteration"], [273, "control-flow-sequences-iteration"], [278, "control-flow-sequences-iteration"], [279, "control-flow-sequences-iteration"], [279, "id2"]], "More Datatypes": [[252, "more-datatypes"], [259, "more-datatypes"], [262, "more-datatypes"], [272, "more-datatypes"], [273, "more-datatypes"], [273, "id2"], [278, "more-datatypes"], [279, "more-datatypes"], [340, "more-datatypes"]], "Exercise Series: CSV Files": [[252, "exercise-series-csv-files"], [272, "exercise-series-csv-files"], [273, "exercise-series-csv-files"], [278, "exercise-series-csv-files"], [279, "exercise-series-csv-files"]], "Advanced Language Features": [[252, "advanced-language-features"], [272, "advanced-language-features"], [273, "advanced-language-features"], [278, "advanced-language-features"], [403, "advanced-language-features"]], "Noob Exercises": [[252, "noob-exercises"]], "Object Oriented": [[253, "Object-Oriented"]], "Lists and Tuples": [[253, "Lists-and-Tuples"]], "for, and Iteration, and Generators": [[253, "for,-and-Iteration,-and-Generators"]], "Lists, Dictionaries, Generators, Constructors": [[253, "Lists,-Dictionaries,-Generators,-Constructors"]], "And Lists? Mutable!": [[253, "And-Lists?-Mutable!"]], "Tuples?": [[253, "Tuples?"]], "set": [[253, "set"]], "More About Sets": [[253, "More-About-Sets"], [280, "More-About-Sets"], [1020, "more-about-sets"]], "Comprehensions (List, Dictionary, Set)": [[253, "Comprehensions-(List,-Dictionary,-Set)"], [967, "comprehensions-list-dictionary-set"]], "Generator Expressions": [[253, "Generator-Expressions"]], "eval and exec": [[253, "eval-and-exec"]], "Linux Basics (2023-01-23 - 2023-01-26)": [[255, "linux-basics-2023-01-23-2023-01-26"], [335, "linux-basics-2023-01-23-2023-01-26"]], "Embedded Linux Systems Programming (2023-02-13 - 2023-02-17)": [[256, "embedded-linux-systems-programming-2023-02-13-2023-02-17"], [335, "embedded-linux-systems-programming-2023-02-13-2023-02-17"]], "WSL For Core Linux Topics": [[256, "wsl-for-core-linux-topics"]], "Cross Development For Hardware Topics": [[256, "cross-development-for-hardware-topics"]], "Day 1: Overview": [[256, "day-1-overview"]], "Introductory Live Hacking": [[256, "introductory-live-hacking"]], "The Shell": [[256, "the-shell"]], "Processes Quick Walk-Through": [[256, "processes-quick-walk-through"]], "Permissions": [[256, "permissions"]], "Development: CMake Quick Intro, And Git Quick Intro": [[256, "development-cmake-quick-intro-and-git-quick-intro"]], "UART": [[256, "uart"]], "SUSI": [[256, "susi"]], "Secure Shell (SSH)": [[256, "secure-shell-ssh"]], "Miscellaneous Hardware": [[256, "miscellaneous-hardware"]], "Group Exercise": [[256, "group-exercise"]], "Untold": [[256, "untold"], [266, "untold"], [269, "untold"]], "More From The Commandline": [[256, "more-from-the-commandline"]], "Multithreading (And C++)": [[256, "multithreading-and-c"]], "Whetting Your Appetite (Jupyter Notebook)": [[257, "Whetting-Your-Appetite-(Jupyter-Notebook)"]], "Filter in Pandas": [[257, "Filter-in-Pandas"]], "Copy vs Reference": [[257, "Copy-vs-Reference"]], "Immutable": [[257, "Immutable"]], "String": [[257, "String"]], "Regex": [[257, "Regex"]], "Whetting Your Appetite (Livehacking Demo)": [[258, "whetting-your-appetite-livehacking-demo"]], "Pipeline Driver": [[258, "pipeline-driver"]], "Virtual Environment Setup": [[258, "virtual-environment-setup"]], "Filter: Add Category: card-payment": [[258, "filter-add-category-card-payment"]], "Filter: Select Uncategorized": [[258, "filter-select-uncategorized"]], "More Categories": [[258, "more-categories"]], "Python For SAP Developers (2023-03-13 - 2023-03-15)": [[259, "python-for-sap-developers-2023-03-13-2023-03-15"], [335, "python-for-sap-developers-2023-03-13-2023-03-15"]], "Day 1 (Basics)": [[259, "day-1-basics"]], "Demo": [[259, "demo"]], "Day 2 (Basics, Continued)": [[259, "day-2-basics-continued"]], "Pandas": [[259, "pandas"], [260, "Pandas"], [262, "pandas"], [266, "pandas"], [291, "pandas"], [1091, "pandas"]], "Hacking About On A SAP Test Dataset": [[259, "hacking-about-on-a-sap-test-dataset"], [263, "hacking-about-on-a-sap-test-dataset"]], "Untold (From Original Agenda)": [[259, "untold-from-original-agenda"]], "OO Introduction": [[259, "oo-introduction"], [262, "oo-introduction"]], "Context Managers (Automatic Cleanup)": [[259, "context-managers-automatic-cleanup"], [262, "context-managers-automatic-cleanup"]], "Iteration, Generators, Comprehensions": [[259, "iteration-generators-comprehensions"], [262, "iteration-generators-comprehensions"]], "Decorators, and Related Topics": [[259, "decorators-and-related-topics"], [262, "decorators-and-related-topics"]], "Machine Learning: Pandas, NumPy, And Algorithms": [[259, "machine-learning-pandas-numpy-and-algorithms"]], "2023-03-13": [[260, "2023-03-13"]], "Comment vs Docstring": [[260, "Comment-vs-Docstring"]], "Mutable? Immutable?": [[260, "Mutable?-Immutable?"]], "Lists": [[260, "Lists"], [260, "id2"], [274, "Lists"]], "Tuples": [[260, "Tuples"]], "DataType Conversiosn": [[260, "DataType-Conversiosn"]], "String, File IO Exercise": [[260, "String,-File-IO-Exercise"]], "Python For SAP Developers (Jupyter Notebook)": [[261, "python-for-sap-developers-jupyter-notebook"]], "Original Agenda: Python For SAP Developers (2023-03-13 - 2023-03-15)": [[262, "original-agenda-python-for-sap-developers-2023-03-13-2023-03-15"]], "Day 1: Basics": [[262, "day-1-basics"]], "Day 2: Outlook Into Advanced Python": [[262, "day-2-outlook-into-advanced-python"]], "Day 3: Domain Specifics": [[262, "day-3-domain-specifics"]], "NumPy": [[262, "numpy"], [291, "numpy"]], "Some Usecases On A Test Dataset From SAP": [[264, "Some-Usecases-On-A-Test-Dataset-From-SAP"]], "Dropping Columns That Contain Only NaN Values": [[264, "Dropping-Columns-That-Contain-Only-NaN-Values"]], "DataFrame.isna()": [[264, "DataFrame.isna()"]], "DataFrame.all() (and any())": [[264, "DataFrame.all()-(and-any())"]], "Column Selection": [[264, "Column-Selection"]], "Dropping Columns": [[264, "Dropping-Columns"]], "Fixing Date Values/Columns, And Operating With Date And Time": [[264, "Fixing-Date-Values/Columns,-And-Operating-With-Date-And-Time"]], "pandas.to_datetime()": [[264, "pandas.to_datetime()"]], "Converting The Entire DateDATE Column To A Workable Type (And Working With It)": [[264, "Converting-The-Entire-DateDATE-Column-To-A-Workable-Type-(And-Working-With-It)"]], "Conversion": [[264, "Conversion"]], "Usage: A Filter": [[264, "Usage:-A-Filter"]], "Modify Rows: Increase All Prices Of One Particular Store By 10%": [[264, "Modify-Rows:-Increase-All-Prices-Of-One-Particular-Store-By-10%"]], "Filter Readability: Combining Filters": [[264, "Filter-Readability:-Combining-Filters"]], "C++ For Embedded Developers (2023-03-20 - 2023-03-23)": [[265, "c-for-embedded-developers-2023-03-20-2023-03-23"]], "Preferred: Ubuntu under Windows (WSL)": [[265, "preferred-ubuntu-under-windows-wsl"], [267, "preferred-ubuntu-under-windows-wsl"]], "Unsupported Environments": [[265, "unsupported-environments"]], "Skeleton Project Setup": [[265, "skeleton-project-setup"], [267, "skeleton-project-setup"]], "Classes, Objects, Methods": [[265, "classes-objects-methods"]], "Heavy Weight OO \ud83d\udcaa": [[265, "heavy-weight-oo-muscle"], [267, "heavy-weight-oo-muscle"]], "Resource Management Pitfalls": [[265, "resource-management-pitfalls"]], "R-Value References/Moving, And Managed Pointers": [[265, "r-value-references-moving-and-managed-pointers"]], "A Little Concurrency": [[265, "a-little-concurrency"]], "Untold So Far": [[265, "untold-so-far"]], "C++ Standard Library": [[265, "c-standard-library"]], "Miscellaneous Topics": [[265, "miscellaneous-topics"]], "Clean Code Development With Python (2023-03-28 - 2023-03-29)": [[266, "clean-code-development-with-python-2023-03-28-2023-03-29"]], "Clean Code?": [[266, "clean-code"], [268, "clean-code"], [269, "clean-code"]], "Demo Hacking": [[266, "demo-hacking"]], "Python Development: Select Topics": [[266, "python-development-select-topics"]], "Built-In Types: Facts": [[266, "built-in-types-facts"]], "for Loops, And The Iterator Protocol": [[266, "for-loops-and-the-iterator-protocol"]], "Day 2: Clean Code? (Software Development: A Craft)": [[266, "day-2-clean-code-software-development-a-craft"]], "Closures, And Function Parameters": [[266, "closures-and-function-parameters"]], "Generators (Again), yield Fixtures, And yield Context Managers": [[266, "generators-again-yield-fixtures-and-yield-context-managers"]], "Decorators (The Ominous @)": [[266, "decorators-the-ominous"]], "Modules And Packages": [[266, "modules-and-packages"], [290, "modules-and-packages"]], "Design Patterns": [[266, "design-patterns"]], "C++ For Embedded Developers (2023-04-18 - 2023-04-20)": [[267, "c-for-embedded-developers-2023-04-18-2023-04-20"], [335, "c-for-embedded-developers-2023-04-18-2023-04-20"]], "Some Details": [[267, "some-details"]], "Standard Template Library": [[267, "standard-template-library"], [610, "standard-template-library"]], "Warm-Up": [[267, "warm-up"]], "Sensor Exercise, Resolved": [[267, "sensor-exercise-resolved"]], "OO, Cont\u2019d": [[267, "oo-cont-d"]], "Smart Pointers (Continued)": [[267, "smart-pointers-continued"]], "Exercises: Containers And Algorithms": [[267, "exercises-containers-and-algorithms"]], "Exercises: OO And Interfaces": [[267, "exercises-oo-and-interfaces"]], "Agenda: Python Advanced (2023-04-24 - 2023-04-26)": [[268, "agenda-python-advanced-2023-04-24-2023-04-26"]], "Day 1: Python Inside Out": [[268, "day-1-python-inside-out"], [269, "day-1-python-inside-out"]], "Exercise Prerequisites": [[268, "exercise-prerequisites"], [290, "exercise-prerequisites"]], "References And Other Pitfalls": [[268, "references-and-other-pitfalls"]], "Looping Constructs (With An Emphasis On The else Clause)": [[268, "looping-constructs-with-an-emphasis-on-the-else-clause"], [290, "looping-constructs-with-an-emphasis-on-the-else-clause"], [294, "looping-constructs-with-an-emphasis-on-the-else-clause"]], "Closures, Decorators And More": [[268, "closures-decorators-and-more"], [269, "closures-decorators-and-more"], [290, "closures-decorators-and-more"], [294, "closures-decorators-and-more"]], "Dynamic Features": [[268, "dynamic-features"], [269, "dynamic-features"], [270, "Dynamic-Features"], [290, "dynamic-features"], [294, "dynamic-features"]], "Error Handling And Recovery": [[268, "error-handling-and-recovery"], [269, "error-handling-and-recovery"], [290, "error-handling-and-recovery"], [291, "error-handling-and-recovery"], [294, "error-handling-and-recovery"]], "Miscellaneous Threading": [[268, "miscellaneous-threading"], [269, "miscellaneous-threading"]], "Day 2: Clean Code (In A Broader Sense), Group Project Kickoff": [[268, "day-2-clean-code-in-a-broader-sense-group-project-kickoff"]], "Group Project: Discussion": [[268, "group-project-discussion"]], "Design Patterns Overview": [[268, "design-patterns-overview"], [269, "design-patterns-overview"]], "Day 3: Group Project": [[268, "day-3-group-project"], [269, "day-3-group-project"]], "Python Advanced (2023-04-24 - 2023-04-26)": [[269, "python-advanced-2023-04-24-2023-04-26"], [335, "python-advanced-2023-04-24-2023-04-26"]], "Day 2: Object Oriented Programming, And Miscellaneous Discussion": [[269, "day-2-object-oriented-programming-and-miscellaneous-discussion"]], "Morning Opening": [[269, "morning-opening"]], "Object Oriented Programming (Continued)": [[269, "object-oriented-programming-continued"]], "Project Setup (IDE Usage?)": [[269, "project-setup-ide-usage"]], "Continue Hacking": [[269, "continue-hacking"]], "Test Driven Development, pytest": [[269, "test-driven-development-pytest"]], "Jupyter Notebook: Python Advanced (2023-04-24 - 2023-04-26)": [[270, "Jupyter-Notebook:-Python-Advanced-(2023-04-24---2023-04-26)"]], "is vs.\u00a0==": [[270, "is-vs.\u00a0=="]], "Compound DataTypes": [[270, "Compound-DataTypes"]], "class": [[270, "class"]], "Jupyter Notebook (Structure): Python Advanced (2023-04-24 - 2023-04-26)": [[271, "jupyter-notebook-structure-python-advanced-2023-04-24-2023-04-26"]], "Agenda: Python Basics (2023-05-15 - 2023-05-17)": [[272, "agenda-python-basics-2023-05-15-2023-05-17"]], "Python Basics (2023-05-15 - 2023-05-17)": [[273, "python-basics-2023-05-15-2023-05-17"], [274, "Python-Basics-(2023-05-15---2023-05-17)"], [335, "python-basics-2023-05-15-2023-05-17"]], "Morning Awakening": [[273, "morning-awakening"]], "A Bit Of venv, A Bit Of pip": [[273, "a-bit-of-venv-a-bit-of-pip"]], "Modules from Standard Library": [[273, "modules-from-standard-library"], [1071, "modules-from-standard-library"]], "Immutable vs.\u00a0Mutable": [[274, "Immutable-vs.\u00a0Mutable"]], "The range Function": [[274, "The-range-Function"], [1010, "the-range-function"]], "Lambda, And Functional Programming Tools": [[274, "Lambda,-And-Functional-Programming-Tools"]], "Agenda: Linux Basics (2023-05-23 - 2023-05-25)": [[276, "agenda-linux-basics-2023-05-23-2023-05-25"]], "Linux Basics (2023-05-23 - 2023-05-25)": [[277, "linux-basics-2023-05-23-2023-05-25"], [335, "linux-basics-2023-05-23-2023-05-25"]], "Introduction: Concepts and Terminology": [[277, "introduction-concepts-and-terminology"], [807, "introduction-concepts-and-terminology"]], "The Shell (Bash - \u201cBourne Again Shell\u201d)": [[277, "the-shell-bash-bourne-again-shell"], [277, "id1"], [853, "the-shell-bash-bourne-again-shell"]], "Tools: Inspecting Text Files": [[277, "tools-inspecting-text-files"], [863, "tools-inspecting-text-files"]], "File System Permissions": [[277, "file-system-permissions"], [277, "id2"], [828, "file-system-permissions"]], "Morning Wakeup": [[277, "morning-wakeup"], [279, "morning-wakeup"]], "I/O Redirection And Pipes": [[277, "i-o-redirection-and-pipes"], [814, "i-o-redirection-and-pipes"]], "Archiving and Compression": [[277, "archiving-and-compression"], [796, "archiving-and-compression"], [798, "archiving-and-compression"]], "Networking": [[277, "networking"]], "Processes And Scheduling": [[277, "processes-and-scheduling"]], "SSH: Secure Shell": [[277, "ssh-secure-shell"], [885, "ssh-secure-shell"]], "Shell Scripting (at least some of it)": [[277, "shell-scripting-at-least-some-of-it"]], "Agenda: Python Basics (2023-06-20 - 2023-06-22)": [[278, "agenda-python-basics-2023-06-20-2023-06-22"]], "Python Basics (2023-06-20 - 2023-06-22)": [[279, "python-basics-2023-06-20-2023-06-22"], [280, "Python-Basics-(2023-06-20---2023-06-22)"], [335, "python-basics-2023-06-20-2023-06-22"]], "Day2": [[279, "day2"]], "File I/O, And Encoding": [[279, "file-i-o-and-encoding"]], "Python Videos": [[279, "python-videos"]], "NumPy, Pandas, Matplotlib": [[279, "numpy-pandas-matplotlib"]], "DataTypes": [[280, "DataTypes"]], "(Im)mutable?": [[280, "(Im)mutable?"]], "Exercise: Mixed List, Interactive Interpreter": [[280, "Exercise:-Mixed-List,-Interactive-Interpreter"]], "len(), range(), for": [[280, "len(),-range(),-for"]], "Generators, yield": [[280, "Generators,-yield"]], "Other -ables: Callable": [[280, "Other--ables:-Callable"]], "exec() (and eval())": [[280, "exec()-(and-eval())"]], "Formatting (f-Strings)": [[280, "Formatting-(f-Strings)"]], "Python Basics (Jupyter Notebook)": [[281, "python-basics-jupyter-notebook"]], "Agenda: CMake (2023-07-03)": [[282, "agenda-cmake-2023-07-03"]], "Toolchain Introduction": [[282, "toolchain-introduction"], [1127, "toolchain-introduction"]], "Project Structure, Dependencies": [[282, "project-structure-dependencies"], [1127, "project-structure-dependencies"]], "External Dependencies": [[282, "external-dependencies"], [430, "external-dependencies"], [1127, "external-dependencies"]], "Code Generators": [[282, "code-generators"], [1127, "code-generators"]], "Automatic Testing": [[282, "automatic-testing"], [1127, "automatic-testing"]], "Installation And Deployment": [[282, "installation-and-deployment"], [1127, "installation-and-deployment"]], "CMake: An Introduction (2023-07-18)": [[283, "cmake-an-introduction-2023-07-18"], [335, "cmake-an-introduction-2023-07-18"]], "Python Advanced (2023-09-25 - 2023-09-27)": [[284, "python-advanced-2023-09-25-2023-09-27"], [285, "Python-Advanced-(2023-09-25---2023-09-27)"], [335, "python-advanced-2023-09-25-2023-09-27"]], "Recap Of Python Basics Course (Before Summer)": [[284, "recap-of-python-basics-course-before-summer"], [287, "recap-of-python-basics-course-before-summer"]], "Project Management: Requirements, Sandboxing, Testing": [[284, "project-management-requirements-sandboxing-testing"], [287, "project-management-requirements-sandboxing-testing"]], "Into The Wild: Group Project Kickoff": [[284, "into-the-wild-group-project-kickoff"], [287, "into-the-wild-group-project-kickoff"]], "OO Design: Duck Typing, Inheritance, And Abstract Base Classes": [[284, "oo-design-duck-typing-inheritance-and-abstract-base-classes"], [287, "oo-design-duck-typing-inheritance-and-abstract-base-classes"]], "Package And Dependency Management": [[284, "package-and-dependency-management"]], "Equality vs.\u00a0Identity": [[285, "Equality-vs.\u00a0Identity"]], "Functions Are Objects": [[285, "Functions-Are-Objects"]], "Python Advanced, Jupyter Notebook (2023-09-25 - 2023-09-27)": [[286, "python-advanced-jupyter-notebook-2023-09-25-2023-09-27"], [289, "python-advanced-jupyter-notebook-2023-09-25-2023-09-27"]], "Python Advanced (2023-10-09 - 2023-10-11)": [[287, "python-advanced-2023-10-09-2023-10-11"], [335, "python-advanced-2023-10-09-2023-10-11"]], "Classes: Basics": [[287, "classes-basics"]], "Classes: More": [[287, "classes-more"]], "Spoiler: Group Project Outcome": [[287, "spoiler-group-project-outcome"]], "More About Functions": [[287, "more-about-functions"]], "Python Advanced (2023-10-09 - 2023-10-09)": [[288, "Python-Advanced-(2023-10-09---2023-10-09)"]], "Type Annotations": [[288, "Type-Annotations"]], "Agenda: Python Advanced (2023-10-24 - 2023-10-26)": [[290, "agenda-python-advanced-2023-10-24-2023-10-26"]], "Day 1: Basic Python": [[290, "day-1-basic-python"], [294, "day-1-basic-python"]], "Datatypes, Datatypes": [[290, "datatypes-datatypes"], [294, "datatypes-datatypes"]], "Day 2: Advanced Python Features": [[290, "day-2-advanced-python-features"]], "Multiprocessing": [[290, "multiprocessing"]], "Day 3: Into The Wild": [[290, "day-3-into-the-wild"]], "Data Science Topics": [[290, "data-science-topics"], [294, "data-science-topics"]], "Group Project: An Idea": [[290, "group-project-an-idea"]], "Python Advanced (2023-10-24 - 2023-10-26)": [[291, "python-advanced-2023-10-24-2023-10-26"], [335, "python-advanced-2023-10-24-2023-10-26"]], "Python Basics Recap": [[291, "python-basics-recap"], [292, "Python-Basics-Recap"]], "The Very Basics": [[291, "the-very-basics"]], "range(), And Iteration In General": [[291, "range-and-iteration-in-general"]], "Leftovers From Yesterday": [[291, "leftovers-from-yesterday"]], "Object Oriented Programming, Continued": [[291, "object-oriented-programming-continued"], [291, "id1"]], "Group Project, OO-ified": [[291, "group-project-oo-ified"]], "Decorator Toolcase: *args, **kwargs": [[291, "decorator-toolcase-args-kwargs"]], "Morning Greeting": [[291, "morning-greeting"]], "Decorator Toolcase, Continued (Including Function Scoping and global)": [[291, "decorator-toolcase-continued-including-function-scoping-and-global"]], "Sensor Implementation That Receives UDP Datagrams": [[291, "sensor-implementation-that-receives-udp-datagrams"]], "CompositeSink": [[291, "compositesink"]], "MQTT Sink Implementation": [[291, "mqtt-sink-implementation"]], "Timestamps?": [[291, "timestamps"]], "Jupyter Notebook: Python Advanced": [[292, "Jupyter-Notebook:-Python-Advanced"]], "Jupyter Notebook Explanation": [[292, "Jupyter-Notebook-Explanation"]], "Integers and Floats": [[292, "Integers-and-Floats"]], "Strings: String Methods, Docstrings, \u2026": [[292, "Strings:-String-Methods,-Docstrings,-\u2026"]], "Python Documentation Overview: https://docs.python.org/3/": [[292, "Python-Documentation-Overview:-https://docs.python.org/3/"]], "assert": [[292, "assert"]], "Iteration, Generators, Iterator Protocol": [[292, "Iteration,-Generators,-Iterator-Protocol"]], "AAARGHHH": [[292, "AAARGHHH"]], "Generator Expresssions": [[292, "Generator-Expresssions"]], "Dictionary Comprehension": [[292, "Dictionary-Comprehension"], [967, "dictionary-comprehension"]], "Functional Tools": [[292, "Functional-Tools"]], "filter()": [[292, "filter()"]], "Jupyter Notebook (Structure): Python Advanced (2023-10-24 - 2023-10-26)": [[293, "jupyter-notebook-structure-python-advanced-2023-10-24-2023-10-26"]], "Agenda: Python Advanced (2023-11-22 - 2023-11-24)": [[294, "agenda-python-advanced-2023-11-22-2023-11-24"]], "Exercise Prerequisites: The Commandline": [[294, "exercise-prerequisites-the-commandline"]], "Day 2: Group Project Kickoff, Advanced Topics": [[294, "day-2-group-project-kickoff-advanced-topics"]], "Project Management, Test Driven Development": [[294, "project-management-test-driven-development"]], "Day 3: More Advanced Topics (All The Rest, And More)": [[294, "day-3-more-advanced-topics-all-the-rest-and-more"]], "CSV And Databases": [[294, "csv-and-databases"]], "Python Advanced (2023-11-22 - 2023-22-24)": [[295, "python-advanced-2023-11-22-2023-22-24"]], "Jupyter Notebook: Python Advanced (2023-11-22 - 2023-11-24)": [[296, "Jupyter-Notebook:-Python-Advanced-(2023-11-22---2023-11-24)"]], "Jupyter Notebook (Structure): Python Advanced (2023-11-22 - 2023-11-24)": [[297, "jupyter-notebook-structure-python-advanced-2023-11-22-2023-11-24"]], "Agenda: C++: Advanced Topics": [[298, "agenda-c-advanced-topics"]], "constexpr, constinit, consteval": [[298, "constexpr-constinit-consteval"]], "Smart Pointers, And Move Semantics": [[298, "smart-pointers-and-move-semantics"]], "Types, Functions, Type Erasure, Toolcase": [[298, "types-functions-type-erasure-toolcase"]], "Functions (std::function<>, Lambdas)": [[298, "functions-std-function-lambdas"]], "Type Erasure": [[298, "type-erasure"]], "C++ Toolcase": [[298, "c-toolcase"]], "Dynamic Versus Static Typing: Templates": [[298, "dynamic-versus-static-typing-templates"]], "Outlook In >=20": [[298, "outlook-in-20"]], "Attributes And The Like": [[298, "attributes-and-the-like"]], "<algorithm> Overview": [[298, "algorithm-overview"]], "Miscellaneous Miscellaneous": [[298, "miscellaneous-miscellaneous"]], "C++: Advanced Topics": [[299, "c-advanced-topics"]], "C++ For Embedded Developers (Beginning of 2023)": [[300, "c-for-embedded-developers-beginning-of-2023"]], "Python/SAP": [[301, "python-sap"]], "Screenplay Checker": [[302, "screenplay-checker"]], "GPIO: Blinklicht": [[303, "gpio-blinklicht"]], "Commandline": [[303, "commandline"], [308, "commandline"], [833, "commandline"]], "sysfs GPIO": [[303, "sysfs-gpio"]], "Electronic Aspect": [[303, "electronic-aspect"]], "External Circuitry": [[303, "external-circuitry"]], "Raspberry Header Pinout": [[303, "raspberry-header-pinout"]], "GPIO: Blinklicht Interface": [[304, "gpio-blinklicht-interface"]], "GPIO: Object Oriented Blinklicht": [[305, "gpio-object-oriented-blinklicht"]], "GPIO: Blinklicht Unittests": [[306, "gpio-blinklicht-unittests"]], "ECE19: Exercises and Custom Topics": [[307, "ece19-exercises-and-custom-topics"]], "Reading a File": [[308, "reading-a-file"], [895, "reading-a-file"]], "Output": [[308, "output"]], "2021-05-20 (G2)": [[309, "2021-05-20-(G2)"]], "Reading File in One Big Swoop": [[309, "Reading-File-in-One-Big-Swoop"]], "Reading File in Fixed Sized Chunks": [[309, "Reading-File-in-Fixed-Sized-Chunks"]], "Reading File Line by Line": [[309, "Reading-File-Line-by-Line"]], "Iterating a File": [[309, "Iterating-a-File"]], "String Methods (Needed to Implement the Exercise)": [[309, "String-Methods-(Needed-to-Implement-the-Exercise)"]], "str.strip(), str.rstrip(), str.lstrip()": [[309, "str.strip(),-str.rstrip(),-str.lstrip()"]], "str.split()": [[309, "str.split()"]], "2021-05-21": [[310, "2021-05-21"], [317, "id11"]], "Modules and Packages": [[310, "Modules-and-Packages"], [978, "modules-and-packages"]], "Strings vs.\u00a0Bytes": [[311, "Strings-vs.\u00a0Bytes"]], "Batteries": [[312, "Batteries"]], "Key Value Map": [[312, "Key-Value-Map"]], "Comments vs Documentation": [[312, "Comments-vs-Documentation"]], "Multiline String (btw.)": [[312, "Multiline-String-(btw.)"]], "Integer Numbers (Literals)": [[312, "Integer-Numbers-(Literals)"]], "Arithmetic Operators": [[312, "Arithmetic-Operators"], [361, "arithmetic-operators"], [990, "arithmetic-operators"]], "Wertebereich von Integers": [[312, "Wertebereich-von-Integers"]], "An Example": [[313, "An-Example"], [1013, "an-example"]], "Sidenote: Pure Beauty": [[313, "Sidenote:-Pure-Beauty"], [1013, "sidenote-pure-beauty"]], "Parameters and Types": [[313, "Parameters-and-Types"], [1013, "parameters-and-types"]], "Pitfalls": [[313, "Pitfalls"]], "Cloud Computer, SSH Login": [[314, "cloud-computer-ssh-login"]], "Machine, Logins": [[314, "machine-logins"]], "Login via Secure Shell (SSH)": [[314, "login-via-secure-shell-ssh"]], "Formalit\u00e4ten": [[315, "formalitaten"]], "Embedded Computing 1 (ECE 19)": [[316, "embedded-computing-1-ece-19"]], "Daily Log": [[317, "daily-log"]], "2021-03-04": [[317, "id1"]], "2021-03-05": [[317, "id2"]], "Cheat Sheets": [[317, null]], "2021-03-18": [[317, "id3"]], "2021-03-26": [[317, "id4"]], "2021-04-15": [[317, "id5"]], "2021-04-21": [[317, "id6"]], "Git Intro": [[317, "git-intro"]], "Download and Installation": [[317, null], [322, null]], "2021-04-29": [[317, "id7"]], "2021-05-10": [[317, "id8"]], "Org Stuff": [[317, "org-stuff"]], "Python: Functions": [[317, "python-functions"]], "2021-05-12": [[317, "id9"]], "Python: Walk-Through Passing and Failing an Exam": [[317, "python-walk-through-passing-and-failing-an-exam"]], "2021-05-{19,20}": [[317, "id10"]], "Reiterating on Exercise": [[317, "reiterating-on-exercise"]], "import argparse": [[317, "import-argparse"]], "Exercise digit (Once More)": [[317, "exercise-digit-once-more"]], "2021-06-01": [[317, "id12"]], "sysfs GPIO: Blinking an LED": [[317, "sysfs-gpio-blinking-an-led"]], "2021-06-07": [[317, "id13"]], "Embedded Computing 1 (Deutsch)": [[318, "embedded-computing-1-deutsch"]], "Lehrinhalte": [[318, "lehrinhalte"]], "Lernergebnisse der LV": [[318, "lernergebnisse-der-lv"]], "Empfohlene oder verpflichtende Fachliteratur und andere Lernressourcen bzw. \u2013instrumente": [[318, "empfohlene-oder-verpflichtende-fachliteratur-und-andere-lernressourcen-bzw-instrumente"]], "Art der Vermittlung": [[318, "art-der-vermittlung"]], "Voraussetzungen und Begleitbedingungen": [[318, "voraussetzungen-und-begleitbedingungen"]], "Pr\u00fcfungsmethode und Beurteilungskriterien": [[318, "prufungsmethode-und-beurteilungskriterien"]], "Embedded Computing 1 (English)": [[319, "embedded-computing-1-english"]], "Course Content": [[319, "course-content"]], "Learning Outcome": [[319, "learning-outcome"]], "Recommended or Required Reading and Other Learning Resources / Tools": [[319, "recommended-or-required-reading-and-other-learning-resources-tools"]], "Mode of delivery": [[319, "mode-of-delivery"]], "Prerequisites and Co-Requisites": [[319, "prerequisites-and-co-requisites"]], "Assessment Methods and Criteria": [[319, "assessment-methods-and-criteria"]], "Plan for Summer 2021": [[320, "plan-for-summer-2021"]], "Linux Introduction": [[320, "linux-introduction"]], "Slides": [[320, null], [320, null], [320, null]], "C/C++ Development": [[320, "c-c-development"]], "Python Development": [[320, "python-development"]], "2021-10-07": [[321, "id1"]], "Whose Fault It Is": [[321, "whose-fault-it-is"]], "2021-10-12 (Bringing Newcomers Up-to-Date)": [[322, "bringing-newcomers-up-to-date"]], "Linux/UNIX": [[322, "linux-unix"]], "Git": [[322, "git"]], "2021-10-28": [[323, "id1"]], "Group Project": [[323, "group-project"]], "Discussion of Tasks": [[323, "discussion-of-tasks"]], "TODOs": [[323, "todos"]], "2021-11-15": [[324, "id1"]], "Systems Programming: Files, Directories, Links \u2026": [[324, "systems-programming-files-directories-links"]], "2021-11-29": [[325, "id1"]], "jjjj": [[325, "jjjj"]], "2021-12-1{4,5}": [[326, "id1"]], "Future Topics": [[326, "future-topics"]], "Threading": [[326, "threading"]], "C++ Sideways": [[326, "c-sideways"]], "2022-01-10": [[327, "id1"]], "Scheduling": [[327, "scheduling"], [929, "scheduling"], [930, "scheduling"]], "2022-01-12": [[328, "id1"]], "Scheduling and Realtime": [[328, "scheduling-and-realtime"], [332, "scheduling-and-realtime"]], "2022-02-15": [[329, "id1"]], "Agenda/Log": [[330, "agenda-log"], [331, "agenda-log"]], "Embedded Computing 2 (ECE 19)": [[331, "embedded-computing-2-ece-19"]], "Project Repository": [[331, "project-repository"]], "Test Material": [[331, "test-material"]], "Exam Material Overview": [[332, "exam-material-overview"]], "Questions": [[332, "questions"], [332, "id1"], [624, "questions"], [806, "questions"], [820, "questions"], [821, "questions"], [846, "questions"], [953, "questions"]], "Slide Material": [[332, "slide-material"], [332, "id2"]], "Embedded Computing 1+2, ECE 19": [[333, "embedded-computing-1-2-ece-19"]], "Bisher Gehaltene": [[335, "bisher-gehaltene"]], "Python Advanced (2023-11-22 - 2023-11-24)": [[335, "python-advanced-2023-11-22-2023-11-24"]], "Clean Code Development With Python (2023-03-28 - 2023-03-30)": [[335, "clean-code-development-with-python-2023-03-28-2023-03-30"]], "C++ For Embedded Developers (2023-03-20 - 2023-03-22)": [[335, "c-for-embedded-developers-2023-03-20-2023-03-22"]], "Python (2022-11-07 - 2022-11-10, 2022-12-01)": [[335, "python-2022-11-07-2022-11-10-2022-12-01"]], "C++: A New Language Starting In 2011 (2022-07-26 - 2022-07-27)": [[335, "c-a-new-language-starting-in-2011-2022-07-26-2022-07-27"]], "C++: A New Language Starting In 2011 (2022-06-14 - 2022-06-15)": [[335, "c-a-new-language-starting-in-2011-2022-06-14-2022-06-15"]], "Python Advanced (2022-03-15 - 2022-03-17)": [[335, "python-advanced-2022-03-15-2022-03-17"]], "Python Basics (2021-08-23 - 2021-08-25)": [[335, "python-basics-2021-08-23-2021-08-25"]], "Programmieren mit C++ (2021-07-12 - 2021-07-16)": [[335, "programmieren-mit-c-2021-07-12-2021-07-16"]], "Linux Basics, Shell Scripting (2019-03-29 - 1.4.2021)": [[335, "linux-basics-shell-scripting-2019-03-29-1-4-2021"]], "Python (22.3.2021 - 25.3.2021)": [[335, "python-22-3-2021-25-3-2021"]], "Python Advanced (15.3.2021 - 17.3.2021)": [[335, "python-advanced-15-3-2021-17-3-2021"]], "Linux Kernel Driver Development Basics (8.3.2021 - 12.3.2020)": [[335, "linux-kernel-driver-development-basics-8-3-2021-12-3-2020"]], "Programmierung Grundlagen, anhand von Python (13. und 14.1.2021)": [[335, "programmierung-grundlagen-anhand-von-python-13-und-14-1-2021"]], "Linux und Raspberry Pi (3.11.2020, 4.11.2020, 17.11.2020)": [[335, "linux-und-raspberry-pi-3-11-2020-4-11-2020-17-11-2020"]], "Python Basics (19.10.2020 - 22.10.2020)": [[335, "python-basics-19-10-2020-22-10-2020"]], "Python Advanced (13.5.2020 - 14.5.2020 bei einer Firma in Graz)": [[335, "python-advanced-13-5-2020-14-5-2020-bei-einer-firma-in-graz"]], "C++ f\u00fcr Embedded-Entwickler (30.3.2020 - 4.4.2020, bei einer Firma in Baden-W\u00fcrttemberg)": [[335, "c-fur-embedded-entwickler-30-3-2020-4-4-2020-bei-einer-firma-in-baden-wurttemberg"]], "IPC in Linux (10.1.2020, bei einer Firma in Graz)": [[335, "ipc-in-linux-10-1-2020-bei-einer-firma-in-graz"]], "Python/NumPy (12.11.2019 - 13.11.2019 in Graz)": [[335, "python-numpy-12-11-2019-13-11-2019-in-graz"]], "Python Advanced (9.10.2019 - 10.10.2019 bei einer Firma in Graz)": [[335, "python-advanced-9-10-2019-10-10-2019-bei-einer-firma-in-graz"]], "C f\u00fcr Fortgeschrittene (30.9.2019 - 4.10.2019 in Wiener Neustadt)": [[335, "c-fur-fortgeschrittene-30-9-2019-4-10-2019-in-wiener-neustadt"]], "Einf\u00fchrung in Raspberry Pi (8.7.2019 - 10.7.2019 in Graz)": [[335, "einfuhrung-in-raspberry-pi-8-7-2019-10-7-2019-in-graz"]], "Python Basics (24.6.2019 - 27.6.2019, bei einer Firma in Ober\u00f6sterreich)": [[335, "python-basics-24-6-2019-27-6-2019-bei-einer-firma-in-oberosterreich"]], "Linux Basics (13.6.2019 - 19.6.2019, bei einer Firma in Ober\u00f6sterreich)": [[335, "linux-basics-13-6-2019-19-6-2019-bei-einer-firma-in-oberosterreich"]], "Python Basics (3.6.2019 - 6.6.2019, bei einer Firma in Ober\u00f6sterreich)": [[335, "python-basics-3-6-2019-6-6-2019-bei-einer-firma-in-oberosterreich"]], "Linux Big Picture (27.5.2019 - 29.5.2019, bei einer Firma in Baden-W\u00fcrttemberg)": [[335, "linux-big-picture-27-5-2019-29-5-2019-bei-einer-firma-in-baden-wurttemberg"]], "Python Basics (23.5.2019 - 24.5.2019, bei einer Firma in der Obersteiermark)": [[335, "python-basics-23-5-2019-24-5-2019-bei-einer-firma-in-der-obersteiermark"]], "Korn Shell Scripting (20.5.2019 - 22.5.2019 bei einer Firma in Salzburg)": [[335, "korn-shell-scripting-20-5-2019-22-5-2019-bei-einer-firma-in-salzburg"]], "Linux Basics (13.5.2019 - 15.5.2019, bei einer Firma in Ober\u00f6sterreich)": [[335, "linux-basics-13-5-2019-15-5-2019-bei-einer-firma-in-oberosterreich"]], "C: Ausgew\u00e4hlte Themen (17.12.2018 - 19.12.2018 in Graz)": [[335, "c-ausgewahlte-themen-17-12-2018-19-12-2018-in-graz"]], "Python Basics (1.10.2018 - 4.10.2018, bei einer Firma in Ober\u00f6sterreich)": [[335, "python-basics-1-10-2018-4-10-2018-bei-einer-firma-in-oberosterreich"]], "Linux Basics, Shell Scripting (16.7.2018 - 20.7.2018, bei einer Firma in Ober\u00f6sterreich)": [[335, "linux-basics-shell-scripting-16-7-2018-20-7-2018-bei-einer-firma-in-oberosterreich"]], "Advanced C on Linux (9.7.2018 - 11.7.2018, Raum N\u00fcrnberg)": [[335, "advanced-c-on-linux-9-7-2018-11-7-2018-raum-nurnberg"]], "Linux f\u00fcr Fortgeschrittene (12.3.2018 - 16.3.2018, Oberb\u00fcren/Schweiz)": [[335, "linux-fur-fortgeschrittene-12-3-2018-16-3-2018-oberburen-schweiz"]], "Linux und Python (11.9.2017 - 13.9.2017, bei einer Firma im Raum M\u00fcnchen)": [[335, "linux-und-python-11-9-2017-13-9-2017-bei-einer-firma-im-raum-munchen"]], "Linux Lowlevel Programming (28.8.2017 - 30.8.2017, Raum N\u00fcrnberg)": [[335, "linux-lowlevel-programming-28-8-2017-30-8-2017-raum-nurnberg"]], "C Refresher (23.8.2017 - 24.8.2017, Raum N\u00fcrnberg)": [[335, "c-refresher-23-8-2017-24-8-2017-raum-nurnberg"]], "C++11: Ausgew\u00e4hlte Themen (6.6.2017 - 8.6.2017 bei einer Firma in Graz)": [[335, "c-11-ausgewahlte-themen-6-6-2017-8-6-2017-bei-einer-firma-in-graz"]], "Linux vom Programmiererstandpunkt (30.12.2016 in Wien)": [[335, "linux-vom-programmiererstandpunkt-30-12-2016-in-wien"]], "Embedded Linux anhand des Raspberry Pi (17.10.2016 - 21.10.2016 bei einer Firma in Baden-W\u00fcrttemberg)": [[335, "embedded-linux-anhand-des-raspberry-pi-17-10-2016-21-10-2016-bei-einer-firma-in-baden-wurttemberg"]], "Linux vom Programmiererstandpunkt (20.9.2016 in Wien)": [[335, "linux-vom-programmiererstandpunkt-20-9-2016-in-wien"]], "C for Advanced Users (5.7.2016 - 6.7.2016, Raum N\u00fcrnberg)": [[335, "c-for-advanced-users-5-7-2016-6-7-2016-raum-nurnberg"]], "Einf\u00fchrung in C++ (22.2.2016 - 26.2.2016 bei einer Firma in Graz)": [[335, "einfuhrung-in-c-22-2-2016-26-2-2016-bei-einer-firma-in-graz"]], "Advanced Python Workshop (20.2.2017 - 23.2.2017, bei einer Firma in Ober\u00f6sterreich)": [[335, "advanced-python-workshop-20-2-2017-23-2-2017-bei-einer-firma-in-oberosterreich"]], "Embedded Linux (30.11.2015 - 4.12.2015, Bodenseo, Hemmenhofen am Bodensee)": [[335, "embedded-linux-30-11-2015-4-12-2015-bodenseo-hemmenhofen-am-bodensee"]], "Linux Kernel, Realtime (17.11.2015 - 19.11.2015 bei einer Firma in Graz)": [[335, "linux-kernel-realtime-17-11-2015-19-11-2015-bei-einer-firma-in-graz"]], "Linux Basics (3.11.2015 - 5.11.2015 bei einer Firma in Graz)": [[335, "linux-basics-3-11-2015-5-11-2015-bei-einer-firma-in-graz"]], "Einf\u00fchrung in Python (5.10.2015 - 6.10.2015 in Wien)": [[335, "einfuhrung-in-python-5-10-2015-6-10-2015-in-wien"]], "Linux Basics, Systemnahe Programmierung (27.7.2015 - 31.7.2015, bei einer Firma in Ober\u00f6sterreich)": [[335, "linux-basics-systemnahe-programmierung-27-7-2015-31-7-2015-bei-einer-firma-in-oberosterreich"]], "Design Patterns and Test Driven Development (1.7.2015 - 3.7.2015, Raum N\u00fcrnberg)": [[335, "design-patterns-and-test-driven-development-1-7-2015-3-7-2015-raum-nurnberg"]], "C for Advanced Users (9.12.2014 - 11.12.2014, Raum N\u00fcrnberg)": [[335, "c-for-advanced-users-9-12-2014-11-12-2014-raum-nurnberg"]], "Python (1.6.2015 - 3.6.2015, Mathias Kettner in M\u00fcnchen)": [[335, "python-1-6-2015-3-6-2015-mathias-kettner-in-munchen"]], "Linux Basics, Kernel, Git (9.3.2015 - 13.3.2015, Siemens Braunschweig)": [[335, "linux-basics-kernel-git-9-3-2015-13-3-2015-siemens-braunschweig"]], "Embedded Linux (28.1.2015 - 30.1.2015, bei einer Firma im Raum M\u00fcnchen)": [[335, "embedded-linux-28-1-2015-30-1-2015-bei-einer-firma-im-raum-munchen"]], "C for Intermediate Users (9.12.2014 - 11.12.2014, Raum N\u00fcrnberg)": [[335, "c-for-intermediate-users-9-12-2014-11-12-2014-raum-nurnberg"]], "Linux from Scratch (1.12.2014 - 5.12.2014 LPD Hannover)": [[335, "linux-from-scratch-1-12-2014-5-12-2014-lpd-hannover"]], "Einf\u00fchrung in C++ (7.10.2014 - 10.10.2014 in Wien)": [[335, "einfuhrung-in-c-7-10-2014-10-10-2014-in-wien"]], "Systemnahe Programmierung unter Linux (14.4.2014 - 17.4.2014 in K\u00f6ln)": [[335, "systemnahe-programmierung-unter-linux-14-4-2014-17-4-2014-in-koln"]], "Einf\u00fchrung in C++ (3.3.2014 - 14.3.2014 in Wien)": [[335, "einfuhrung-in-c-3-3-2014-14-3-2014-in-wien"]], "Projektverwaltung mit Subversion und CMake (24.2.2014 - 27.2.2014 in Wien)": [[335, "projektverwaltung-mit-subversion-und-cmake-24-2-2014-27-2-2014-in-wien"]], "Einf\u00fchrung in Python (23.6.2014 - 26.6.2014, LKA Niedersachsen)": [[335, "einfuhrung-in-python-23-6-2014-26-6-2014-lka-niedersachsen"]], "Linux: Boot-Konfiguration und Systemnahe Programmierung (27.5.2014 - 30.5.2014 in Graz)": [[335, "linux-boot-konfiguration-und-systemnahe-programmierung-27-5-2014-30-5-2014-in-graz"]], "Einf\u00fchrung in C (11.11.2013 - 22.11.2013 in Wien)": [[335, "einfuhrung-in-c-11-11-2013-22-11-2013-in-wien"]], "Linux Basics (28.10.2013 - 31.10.2013 in Wien)": [[335, "linux-basics-28-10-2013-31-10-2013-in-wien"]], "Linux Basics, Embedded Linux (14.10.2013 - 15.10.2013 bei einer Firma im Raum M\u00fcnchen)": [[335, "linux-basics-embedded-linux-14-10-2013-15-10-2013-bei-einer-firma-im-raum-munchen"]], "Shell/Bash Scripting (7.10.2013 - 9.10.2013, bei einer Firma in Ober\u00f6sterreich)": [[335, "shell-bash-scripting-7-10-2013-9-10-2013-bei-einer-firma-in-oberosterreich"]], "Alles Linux (1.10.2013 - 4.10.2013, QualiVision in Z\u00fcrich)": [[335, "alles-linux-1-10-2013-4-10-2013-qualivision-in-zurich"]], "Linux from Scratch (16.9.2013 - 20.9.2013, Mathias Kettner in M\u00fcnchen)": [[335, "linux-from-scratch-16-9-2013-20-9-2013-mathias-kettner-in-munchen"]], "Linux Basics (2.7.2013 - 4.7.2013, bei einer Firma in Ober\u00f6sterreich)": [[335, "linux-basics-2-7-2013-4-7-2013-bei-einer-firma-in-oberosterreich"]], "Linux - Einf\u00fchrung und Programmierung (27.5.2013 - 29.5.2013, bei einer Firma im Raum M\u00fcnchen)": [[335, "linux-einfuhrung-und-programmierung-27-5-2013-29-5-2013-bei-einer-firma-im-raum-munchen"]], "GNU Make (23.4.2013 in Graz)": [[335, "gnu-make-23-4-2013-in-graz"]], "Linux Basics & Embedded (14.1.2013 - 18.1.2013, bei einer Firma in Ober\u00f6sterreich)": [[335, "linux-basics-embedded-14-1-2013-18-1-2013-bei-einer-firma-in-oberosterreich"]], "Linux Systemnah, Embedded, C++ (26.11.2012 - 28.11.2012, bei einer Firma in Hamburg)": [[335, "linux-systemnah-embedded-c-26-11-2012-28-11-2012-bei-einer-firma-in-hamburg"]], "Fehlerdiagnose unter Linux (19.11.2012 - 21.11.2012, Polizei Niedersachsen in Hannover)": [[335, "fehlerdiagnose-unter-linux-19-11-2012-21-11-2012-polizei-niedersachsen-in-hannover"]], "Systemnahe Programmierung unter Linux (29.10.2012 - 30.10.2012, bei einer Firma im Raum M\u00fcnchen)": [[335, "systemnahe-programmierung-unter-linux-29-10-2012-30-10-2012-bei-einer-firma-im-raum-munchen"]], "Einf\u00fchrung in Python (15.10.2012 - 17.10.2012, Mathias Kettner in M\u00fcnchen)": [[335, "einfuhrung-in-python-15-10-2012-17-10-2012-mathias-kettner-in-munchen"]], "Einf\u00fchrung in Python (25.9.2012 - 27.9.2012, STIA in Admont)": [[335, "einfuhrung-in-python-25-9-2012-27-9-2012-stia-in-admont"]], "Linux Systemnah (13.2.2012 bis 15.2.2012, bei einer Firma in Z\u00fcrich)": [[335, "linux-systemnah-13-2-2012-bis-15-2-2012-bei-einer-firma-in-zurich"]], "Einf\u00fchrung in Python (24.1.2012 - 26.1.2012, Mathias Kettner in M\u00fcnchen)": [[335, "einfuhrung-in-python-24-1-2012-26-1-2012-mathias-kettner-in-munchen"]], "Linux Systemnah (19.9.2011 - 22.9.2011, bei einer Firma in Ober\u00f6sterreich)": [[335, "linux-systemnah-19-9-2011-22-9-2011-bei-einer-firma-in-oberosterreich"]], "Linux Basics (13.9.2011 - 15.9.2011, bei einer Firma in Ober\u00f6sterreich)": [[335, "linux-basics-13-9-2011-15-9-2011-bei-einer-firma-in-oberosterreich"]], "Linux Systemnah (4.7.2011 - 7.7.2011, Bodenseo, Hemmenhofen am Bodensee)": [[335, "linux-systemnah-4-7-2011-7-7-2011-bodenseo-hemmenhofen-am-bodensee"]], "Linux Systemnah (14.2.2011 - 18.2.2011, Bodenseo, Hemmenhofen am Bodensee)": [[335, "linux-systemnah-14-2-2011-18-2-2011-bodenseo-hemmenhofen-am-bodensee"]], "Linux from Scratch (12.12.2010 - 17.12.2010, Mathias Kettner in M\u00fcnchen)": [[335, "linux-from-scratch-12-12-2010-17-12-2010-mathias-kettner-in-munchen"]], "Softwareentwicklung unter Linux (6.12.2010 - 10.12.2010, bei einer Firma in Darmstadt)": [[335, "softwareentwicklung-unter-linux-6-12-2010-10-12-2010-bei-einer-firma-in-darmstadt"]], "Softwareentwicklung unter Linux (24.11.2010 - 26.11.2010, bei einer Firma im Raum Ulm)": [[335, "softwareentwicklung-unter-linux-24-11-2010-26-11-2010-bei-einer-firma-im-raum-ulm"]], "Linux Kernel (25.10.2010 - 26.10.2010, Deutsche Bundeswehr in Wildflecken)": [[335, "linux-kernel-25-10-2010-26-10-2010-deutsche-bundeswehr-in-wildflecken"]], "Softwareentwicklung unter Linux (20.10.2010 - 24.10.2010, Mathias Kettner)": [[335, "softwareentwicklung-unter-linux-20-10-2010-24-10-2010-mathias-kettner"]], "Training Material: Overview and Download": [[336, "training-material-overview-and-download"]], "Installation": [[337, "installation"], [890, "installation"], [1025, "installation"], [1087, "installation"], [1112, "installation"]], "On Windows": [[337, "on-windows"]], "On Linux": [[337, "on-linux"]], "The Book (1)": [[338, "the-book-1"]], "The Book (2)": [[338, "the-book-2"]], "The Beginning": [[338, "the-beginning"]], "Cool Guys and Their Hobby": [[338, "cool-guys-and-their-hobby"]], "History of UNIX": [[338, "history-of-unix"]], "My First Program (1)": [[339, "my-first-program-1"]], "My First Program (2)": [[339, "my-first-program-2"]], "Character Arrays - Strings": [[339, "character-arrays-strings"]], "Variables and Arithmetic": [[340, "variables-and-arithmetic"]], "My Second Program (1)": [[340, "my-second-program-1"]], "My Second Program (2)": [[340, "my-second-program-2"]], "My Second Program (3)": [[340, "my-second-program-3"]], "My Second Program (4)": [[340, "my-second-program-4"]], "Exercise: A Better Fahrenheit Table": [[341, "exercise-a-better-fahrenheit-table"]], "for: Loop Simplification (1)": [[342, "for-loop-simplification-1"]], "for: Loop Simplification (2)": [[342, "for-loop-simplification-2"]], "Second Program, revisited": [[342, "second-program-revisited"]], "Exercise: Fahrenheit Table Using for": [[343, "exercise-fahrenheit-table-using-for"]], "Symbolic Constants": [[344, "symbolic-constants"]], "C Preprocessor: Symbolic Constants": [[344, "c-preprocessor-symbolic-constants"]], "Exercise: Fahrenheit Table Using Macros": [[345, "exercise-fahrenheit-table-using-macros"]], "Character I/O": [[346, "character-i-o"]], "The Outside World": [[346, "the-outside-world"]], "cat for the Poor (1)": [[346, "cat-for-the-poor-1"]], "cat for the Poor (2)": [[346, "cat-for-the-poor-2"]], "More Examples \u2026": [[346, "more-examples"]], "More Examples - if": [[346, "more-examples-if"]], "if, Formally": [[346, "if-formally"]], "Operators, Formally": [[346, "operators-formally"]], "Exercise: wc For The Poor": [[347, "exercise-wc-for-the-poor"]], "Arrays": [[348, "arrays"]], "Array Definition, Explicit Initialization": [[348, "array-definition-explicit-initialization"]], "Array Access": [[348, "array-access"]], "Discussion: Initialization": [[348, "discussion-initialization"]], "Discussion: if, else": [[348, "discussion-if-else"]], "Array Initializer": [[348, "array-initializer"]], "Discussion: Initializer": [[348, "discussion-initializer"]], "Initialization using memset()": [[348, "initialization-using-memset"]], "Discussion: memset()": [[348, "discussion-memset"]], "Exercise: Character Histogram": [[349, "exercise-character-histogram"]], "A Nonsensical Example": [[350, "a-nonsensical-example"]], "Function Signature": [[350, "function-signature"]], "Discussion": [[350, "discussion"]], "Definition vs. Declaration (1)": [[350, "definition-vs-declaration-1"]], "Definition vs. Declaration (2)": [[350, "definition-vs-declaration-2"]], "By Value / By Reference": [[350, "by-value-by-reference"]], "Exercise: Forward Declaration": [[351, "exercise-forward-declaration"]], "Character Arrays": [[352, "character-arrays"]], "Strings: Mistake by Design?": [[352, "strings-mistake-by-design"]], "Strings: Definition": [[352, "strings-definition"]], "Strings: Library Functions": [[352, "strings-library-functions"]], "Strings as Parameters": [[352, "strings-as-parameters"]], "Strings: Dangers": [[352, "strings-dangers"]], "Exercise: Read Line Into String from stdin": [[353, "exercise-read-line-into-string-from-stdin"]], "Lifetime of Variables": [[354, "lifetime-of-variables"]], "Lifetime": [[354, "lifetime"]], "Global Variables": [[354, "global-variables"], [528, "global-variables"]], "Global Variables: How?": [[354, "global-variables-how"]], "Group Description": [[355, "group-description"], [370, "group-description"], [379, "group-description"], [386, "group-description"], [392, "group-description"], [396, "group-description"], [399, "group-description"], [403, "group-description"], [412, "group-description"], [416, "group-description"], [421, "group-description"], [422, "group-description"], [542, "group-description"], [550, "group-description"], [565, "group-description"], [568, "group-description"], [571, "group-description"], [612, "group-description"], [621, "group-description"], [640, "group-description"], [682, "group-description"], [683, "group-description"], [707, "group-description"], [715, "group-description"], [719, "group-description"], [723, "group-description"], [725, "group-description"], [867, "group-description"], [875, "group-description"], [876, "group-description"], [930, "group-description"]], "Type System": [[356, "type-system"]], "Variable Names": [[357, "variable-names"]], "Variable- and Function Names": [[357, "variable-and-function-names"]], "Data Types, Sizes": [[358, "data-types-sizes"]], "Standard Data Types And Their Sizes": [[358, "standard-data-types-and-their-sizes"]], "Integer Variants (\u201cQualifiers\u201d)": [[358, "integer-variants-qualifiers"]], "Widths": [[358, "widths"]], "Constants": [[359, "constants"]], "Constants and Types": [[359, "constants-and-types"]], "Character Constants: Escape Sequences": [[359, "character-constants-escape-sequences"]], "String Constants": [[359, "string-constants"]], "Character vs. String Constants": [[359, "character-vs-string-constants"]], "Symbolic Constants (1)": [[359, "symbolic-constants-1"]], "Symbolic Constants (2)": [[359, "symbolic-constants-2"]], "Variable Definitions": [[360, "variable-definitions"]], "Definitions und Initialization": [[360, "definitions-und-initialization"]], "Initialization of Automatic Variables": [[360, "initialization-of-automatic-variables"]], "Initialization of Global Variables": [[360, "initialization-of-global-variables"]], "Arithmetic Operators (1)": [[361, "arithmetic-operators-1"]], "Arithmetic Operators (2)": [[361, "arithmetic-operators-2"]], "Relational and Logical Operators": [[362, "relational-and-logical-operators"]], "Relational Operators (1)": [[362, "relational-operators-1"]], "Relational Operators (2)": [[362, "relational-operators-2"]], "Logical (Boolean) Operators": [[362, "logical-boolean-operators"]], "Boolean Operators: Short-Circuit": [[362, "boolean-operators-short-circuit"]], "Type Conversions": [[363, "type-conversions"]], "Implicit Type Conversions": [[363, "implicit-type-conversions"]], "Sign Bugs": [[363, "sign-bugs"]], "Truncation": [[363, "truncation"]], "Sign Propagation": [[363, "sign-propagation"]], "Conversion Using Operators": [[363, "conversion-using-operators"]], "Conversion and unsigned (1)": [[363, "conversion-and-unsigned-1"]], "Conversion and unsigned (2)": [[363, "conversion-and-unsigned-2"]], "Compiler Warnings": [[363, "compiler-warnings"]], "Last Warning": [[363, "last-warning"], [923, "last-warning"]], "Forced Conversion - Cast": [[363, "forced-conversion-cast"]], "Increment, Decrement": [[364, "increment-decrement"]], "Confusion: ++, --": [[364, "confusion"]], "Confused to perfection (1)": [[364, "confused-to-perfection-1"]], "Confused to perfection (2)": [[364, "confused-to-perfection-2"]], "Exercise: Copy and Reduce String": [[365, "exercise-copy-and-reduce-string"]], "Bit-Operators": [[366, "bit-operators"]], "Bit Manipulation": [[366, "bit-manipulation"]], "Bitwise AND and OR": [[366, "bitwise-and-and-or"]], "Bitwise XOR": [[366, "bitwise-xor"]], "Shift Left": [[366, "shift-left"]], "Shift Right": [[366, "shift-right"]], "Inverting (\u201cOne\u2019s-Complement\u201d)": [[366, "inverting-one-s-complement"]], "Assignment with Calculation": [[367, "assignment-with-calculation"]], "Combined Operators": [[367, "combined-operators"]], "?: - Conditional Expression": [[368, "conditional-expression"]], "?: - Conditional Expression (1)": [[368, "conditional-expression-1"]], "?: - Conditional Expression (2)": [[368, "conditional-expression-2"]], "Precedence, Associativity": [[369, "precedence-associativity"]], "Summary: Operators": [[369, "summary-operators"]], "Operators: Precedence und Associativity (1)": [[369, "operators-precedence-und-associativity-1"]], "Operators: Precedence und Associativity (2)": [[369, "operators-precedence-und-associativity-2"]], "More Warnings": [[369, "more-warnings"]], "Types, Operators, Expressions": [[370, "types-operators-expressions"]], "Statements and Blocks": [[371, "statements-and-blocks"]], "Statement vs. Block": [[371, "statement-vs-block"]], "if - else": [[372, "if-else"]], "Branches": [[372, "branches"]], "True or False? What is Truth?": [[372, "true-or-false-what-is-truth"]], "else is optional (1)": [[372, "else-is-optional-1"]], "else is optional (2)": [[372, "else-is-optional-2"]], "else - if": [[373, "else-if"]], "Style Matters": [[373, "style-matters"]], "switch": [[374, "switch"], [374, "id1"]], "Case Distinctions": [[374, "case-distinctions"]], "if - else if vs. switch": [[374, "if-else-if-vs-switch"]], "Loops: while and for": [[375, "loops-while-and-for"]], "while: general purpose loop": [[375, "while-general-purpose-loop"]], "From while to for (1)": [[375, "from-while-to-for-1"]], "From while to for (2)": [[375, "from-while-to-for-2"]], "for, a Little Closer": [[375, "for-a-little-closer"]], "Comma Operator": [[375, "comma-operator"]], "for: Infamous Idioms": [[375, "for-infamous-idioms"]], "Loops: do - while": [[376, "loops-do-while"]], "do - while: Condition After Body": [[376, "do-while-condition-after-body"]], "goto and Labels": [[378, "goto-and-labels"]], "Structured Programming vs. goto": [[378, "structured-programming-vs-goto"]], "goto: Definition": [[378, "goto-definition"]], "goto: Use Cases": [[378, "goto-use-cases"]], "Program Flow": [[379, "program-flow"]], "Nesting": [[380, "nesting"]], "Declaration vs. Definition": [[380, "declaration-vs-definition"]], "A Monolithic Program": [[380, "a-monolithic-program"]], "Separate Compilation": [[380, "separate-compilation"]], "Extern/Global Variables": [[381, "extern-global-variables"]], "Variables: Declaration and Definition": [[381, "variables-declaration-and-definition"]], "Variables: Separating Declaration from Definition (1)": [[381, "variables-separating-declaration-from-definition-1"]], "Variables: Separating Declaration from Definition (2)": [[381, "variables-separating-declaration-from-definition-2"]], "Header Files": [[382, "header-files"]], "Declarations: Problems (1)": [[382, "declarations-problems-1"]], "Declarations: Problems (2)": [[382, "declarations-problems-2"]], "Declarations: Solutions": [[382, "declarations-solutions"]], "Static Variables": [[383, "static-variables"]], "Lifetime and Visibility (1)": [[383, "lifetime-and-visibility-1"]], "Automatic Variables": [[383, "automatic-variables"]], "Local static Variable": [[383, "local-static-variable"]], "Global static Variable": [[383, "global-static-variable"]], "Global Variable": [[383, "global-variable"], [1012, "global-variable"]], "C Preprocessor: Basics": [[384, "c-preprocessor-basics"]], "#include": [[384, "include"]], "Macros: Text Replacement": [[384, "macros-text-replacement"]], "Macros: Constant Definition": [[384, "macros-constant-definition"]], "Macros: Inline Replacement as Function Call (1)": [[384, "macros-inline-replacement-as-function-call-1"]], "Macros: Inline Replacement as Function Call (2)": [[384, "macros-inline-replacement-as-function-call-2"]], "Include Guards (1)": [[384, "include-guards-1"]], "Include Guards (2)": [[384, "include-guards-2"]], "The C Preprocessor: Last Words": [[384, "the-c-preprocessor-last-words"], [385, "the-c-preprocessor-last-words"]], "C Preprocessor: More": [[385, "c-preprocessor-more"]], "Conditional Compilation: Rules": [[385, "conditional-compilation-rules"]], "Conditional Compilation: Examples": [[385, "conditional-compilation-examples"]], "Conditional Compilation: Last Words": [[385, "conditional-compilation-last-words"]], "Macros: Spanning Multiple Lines": [[385, "macros-spanning-multiple-lines"]], "Macros: Multiple Statements as One Statement (1)": [[385, "macros-multiple-statements-as-one-statement-1"]], "Macros: Multiple Statements as One Statement (2)": [[385, "macros-multiple-statements-as-one-statement-2"]], "Stringification (1)": [[385, "stringification-1"]], "Stringification (2)": [[385, "stringification-2"]], "Token Pasting (1)": [[385, "token-pasting-1"]], "Token Pasting (2)": [[385, "token-pasting-2"]], "Warnings and Errors": [[385, "warnings-and-errors"]], "Predefined Macros (1)": [[385, "predefined-macros-1"]], "Functions and Program Structure": [[386, "functions-and-program-structure"]], "Pointers and Addresses": [[387, "pointers-and-addresses"]], "Pointers: Basics": [[387, "pointers-basics"]], "Pointer: Operators": [[387, "pointer-operators"]], "More Examples": [[387, "more-examples"]], "Pointers as Function Parameters": [[388, "pointers-as-function-parameters"]], "Call by Reference (1)": [[388, "call-by-reference-1"]], "Call by Reference (2)": [[388, "call-by-reference-2"]], "Exercise: Function That Swaps Two Variables": [[389, "exercise-function-that-swaps-two-variables"]], "Pointers and Arrays": [[390, "pointers-and-arrays"], [392, "pointers-and-arrays"]], "It\u2019s Only Memory": [[390, "it-s-only-memory"]], "Conversion Array \u27f6 Pointer": [[390, "conversion-array-longrightarrow-pointer"]], "Pointer Arithmetic (1)": [[390, "pointer-arithmetic-1"]], "Pointer Arithmetic (2)": [[390, "pointer-arithmetic-2"]], "Pointer Arithmetic (3)": [[390, "pointer-arithmetic-3"]], "Pointer Arithmetic: Difference": [[390, "pointer-arithmetic-difference"]], "Pointer Arithmetic: Array Algorithms": [[390, "pointer-arithmetic-array-algorithms"]], "Pointer Arithmetic: Jump Width? (1)": [[390, "pointer-arithmetic-jump-width-1"]], "Pointer Arithmetic: Jump Width? (2)": [[390, "pointer-arithmetic-jump-width-2"]], "Pointer Arithmetic: Arbitrary Datatypes": [[390, "pointer-arithmetic-arbitrary-datatypes"]], "See also": [[391, null], [804, null], [809, null], [809, null], [810, null], [810, null], [810, null], [815, null], [816, null], [899, null], [926, null], [929, null], [933, null], [935, null], [1014, null]], "main() Can Take Parameters": [[391, "main-can-take-parameters"]], "struct: Basics": [[393, "struct-basics"]], "struct: Compound Datatypes": [[393, "struct-compound-datatypes"]], "struct: How?": [[393, "struct-how"]], "Usage": [[393, "usage"], [583, "usage"], [590, "usage"]], "Nested Structures": [[393, "nested-structures"]], "Memory Layout": [[393, "memory-layout"]], "Recursive Structures?": [[393, "recursive-structures"]], "struct: Functions": [[394, "struct-functions"]], "Parameters and Return (1)": [[394, "parameters-and-return-1"]], "Parameters and Return (2)": [[394, "parameters-and-return-2"]], "Parameters and Return (3)": [[394, "parameters-and-return-3"]], "typedef: Type Alias": [[395, "typedef-type-alias"]], "Alias for Type Names": [[395, "alias-for-type-names"]], "Structures": [[396, "structures"]], "Dynamic Memory": [[397, "dynamic-memory"], [397, "id1"]], "Stack and Global Memory": [[397, "stack-and-global-memory"]], "Dynamic Memory - Usage": [[397, "dynamic-memory-usage"]], "Singly Linked List": [[398, "singly-linked-list"]], "Exercises (1)": [[398, "exercises-1"]], "Exercises (2)": [[398, "exercises-2"]], "Exercises (3)": [[398, "exercises-3"]], "Exercises (4)": [[398, "exercises-4"]], "Exercises (5)": [[398, "exercises-5"]], "Exercises (6)": [[398, "exercises-6"]], "Exercises (7)": [[398, "exercises-7"]], "Exercises (8)": [[398, "exercises-8"]], "Exercises (9)": [[398, "exercises-9"]], "Exercises (10)": [[398, "exercises-10"]], "Exercises (11)": [[398, "exercises-11"]], "Memory": [[399, "memory"]], "Volatile": [[400, "volatile"]], "volatile: The Lie (1)": [[400, "volatile-the-lie-1"]], "volatile: The Lie (2)": [[400, "volatile-the-lie-2"]], "volatile: Valid Use: Hardware": [[400, "volatile-valid-use-hardware"]], "volatile: Valid Use: Unix Signal Handlers": [[400, "volatile-valid-use-unix-signal-handlers"]], "Compiler Intrinsics": [[401, "compiler-intrinsics"]], "Atomic Memory Access": [[401, "atomic-memory-access"]], "Atomic Memory Access: Load/Modify/Store": [[401, "atomic-memory-access-load-modify-store"]], "Load/Modify/Store: Mutex": [[401, "load-modify-store-mutex"]], "Atomic Instructions": [[401, "atomic-instructions"], [918, "atomic-instructions"]], "More GCC \u201cBuiltins\u201d": [[401, "more-gcc-builtins"]], "Alignment": [[402, "alignment"]], "Data Alignment": [[402, "data-alignment"]], "Data Alignment, Compilers": [[402, "data-alignment-compilers"]], "Unaligned Data Access (1)": [[402, "unaligned-data-access-1"]], "Unaligned Data Access (2)": [[402, "unaligned-data-access-2"]], "Padding (1)": [[402, "padding-1"]], "Padding (2)": [[402, "padding-2"]], "Padding (3)": [[402, "padding-3"]], "Padding (4)": [[402, "padding-4"]], "Structure Alignment (1)": [[402, "structure-alignment-1"]], "Structure Alignment (2)": [[402, "structure-alignment-2"]], "And Arrays? (1)": [[402, "and-arrays-1"]], "And Arrays? (2)": [[402, "and-arrays-2"]], "And Arrays? (3)": [[402, "and-arrays-3"]], "Sanity and Readabilty": [[404, "sanity-and-readabilty"]], "Shooting Offense: Unobvious Solution": [[404, "shooting-offense-unobvious-solution"]], "Shooting Offense: Unobvious Problem": [[404, "shooting-offense-unobvious-problem"]], "Shooting Offenses": [[404, "shooting-offenses"]], "Ambiguity": [[404, "ambiguity"]], "Readability": [[404, "readability"]], "Code Smells": [[404, "code-smells"]], "Know Your Integers": [[405, "know-your-integers"]], "Standard Data Types: size_t (1)": [[405, "standard-data-types-size-t-1"]], "Standard Data Types: size_t (2)": [[405, "standard-data-types-size-t-2"]], "Discrete Values - enum": [[406, "discrete-values-enum"], [406, "id1"]], "Discrete Values": [[406, "discrete-values"]], "Discrete Values - Traditional Approach (1)": [[406, "discrete-values-traditional-approach-1"]], "Discrete Values - Traditional Approach (2)": [[406, "discrete-values-traditional-approach-2"]], "Discrete Values - Wishlist": [[406, "discrete-values-wishlist"]], "Discrete Values - enum and switch": [[406, "discrete-values-enum-and-switch"], [406, "id2"]], "Discrete Values - Close to Perfection": [[406, "discrete-values-close-to-perfection"]], "Visibility - static": [[407, "visibility-static"]], "Visibility": [[407, "visibility"]], "A Somewhat Contrived Example (1)": [[407, "a-somewhat-contrived-example-1"]], "A Somewhat Contrived Example (2)": [[407, "a-somewhat-contrived-example-2"]], "The static Keyword (Hooray!)": [[407, "the-static-keyword-hooray"]], "Correctness - const": [[408, "correctness-const"]], "Non-Modifiable Memory (1)": [[408, "non-modifiable-memory-1"]], "Non-Modifiable Memory (2)": [[408, "non-modifiable-memory-2"]], "The const Keyword (1)": [[408, "the-const-keyword-1"]], "The const Keyword (2)": [[408, "the-const-keyword-2"]], "const Variables": [[408, "const-variables"]], "const Parameters (1)": [[408, "const-parameters-1"]], "const Parameters (2)": [[408, "const-parameters-2"]], "Pointers, Pointers, Pointers \u2026 (1)": [[408, "pointers-pointers-pointers-1"]], "Pointers, Pointers, Pointers \u2026 (2)": [[408, "pointers-pointers-pointers-2"]], "Pointers, Pointers, Pointers \u2026 (3)": [[408, "pointers-pointers-pointers-3"]], "Pointers, Pointers, Pointers \u2026 (4)": [[408, "pointers-pointers-pointers-4"]], "Pointers, Pointers, Pointers \u2026 (5)": [[408, "pointers-pointers-pointers-5"]], "Pointers, Pointers, Pointers \u2026 (6)": [[408, "pointers-pointers-pointers-6"]], "Pointers, Pointers, Pointers \u2026 (7)": [[408, "pointers-pointers-pointers-7"]], "Pointers, Pointers, Pointers \u2026 (8)": [[408, "pointers-pointers-pointers-8"]], "Pointers, Pointers, Pointers \u2026 (9)": [[408, "pointers-pointers-pointers-9"]], "Struct Initialization": [[409, "struct-initialization"]], "Good Old Struct Initialization": [[409, "good-old-struct-initialization"]], "C99 Designated Initializer": [[409, "c99-designated-initializer"]], "Explict Type Safety": [[410, "explict-type-safety"]], "Integer Types Are Ambiguous": [[410, "integer-types-are-ambiguous"]], "Example: Ambiguous Error Schemes (1)": [[410, "example-ambiguous-error-schemes-1"]], "Example: Ambiguous Error Schemes (2)": [[410, "example-ambiguous-error-schemes-2"]], "Example: Ambiguous Error Schemes (3)": [[410, "example-ambiguous-error-schemes-3"]], "Artificial Integer Type Safety": [[410, "artificial-integer-type-safety"]], "Error Schemes, Revisited": [[410, "error-schemes-revisited"]], "Error Schemes: Encapsulating Unix Details": [[410, "error-schemes-encapsulating-unix-details"]], "Error Schemes: Using Encapsulated Stuff": [[410, "error-schemes-using-encapsulated-stuff"]], "Wrap-Up: Artificial Type Safety": [[410, "wrap-up-artificial-type-safety"]], "valgrind": [[411, "valgrind"]], "Valgrind": [[411, "id1"]], "Valgrind in Action (1)": [[411, "valgrind-in-action-1"]], "Valgrind in Action (2)": [[411, "valgrind-in-action-2"]], "Valgrind in Action (3)": [[411, "valgrind-in-action-3"]], "Valgrind: more \u2026": [[411, "valgrind-more"]], "Program Sanity": [[412, "program-sanity"]], "Optimization": [[413, "optimization"]], "Optimization - Introduction": [[413, "optimization-introduction"]], "Compute Bound or IO Bound? (1)": [[413, "compute-bound-or-io-bound-1"]], "Compute Bound or IO Bound? (2)": [[413, "compute-bound-or-io-bound-2"]], "Compute Bound or IO Bound? (3)": [[413, "compute-bound-or-io-bound-3"]], "What to do Next?": [[413, "what-to-do-next"]], "Optimizations: Compute Bound Code": [[414, "optimizations-compute-bound-code"]], "Many Ways of Optimization": [[414, "many-ways-of-optimization"]], "Unnecessary Optimizations": [[414, "unnecessary-optimizations"]], "Inlining (1)": [[414, "inlining-1"]], "Inlining (2)": [[414, "inlining-2"]], "Inlining (3)": [[414, "inlining-3"]], "Register Allocation (1)": [[414, "register-allocation-1"]], "Register Allocation (2)": [[414, "register-allocation-2"]], "Peephole Optimization": [[414, "peephole-optimization"]], "Peephole Optimization: Common Subexpression Elimination": [[414, "peephole-optimization-common-subexpression-elimination"]], "Peephole Optimization: Strength Reduction": [[414, "peephole-optimization-strength-reduction"]], "Peephole Optimization: Constant Folding": [[414, "peephole-optimization-constant-folding"]], "Loop Invariants": [[414, "loop-invariants"]], "Loop Unrolling": [[414, "loop-unrolling"]], "Tail Call Optimization": [[414, "tail-call-optimization"]], "CPU Optimization, Last Words": [[414, "cpu-optimization-last-words"]], "GCC: Optimization \u201cLevels\u201d": [[414, "gcc-optimization-levels"]], "Further Reading": [[414, "further-reading"]], "Optimizations: Memory Optimizations": [[415, "optimizations-memory-optimizations"]], "Memory: Caches": [[415, "memory-caches"]], "Locality of reference": [[415, "locality-of-reference"]], "Multidimensional Arrays": [[415, "multidimensional-arrays"]], "Multidimensional Arrays: Cache Thrashing": [[415, "multidimensional-arrays-cache-thrashing"]], "Multidimensional Arrays: Forward Indexing": [[415, "multidimensional-arrays-forward-indexing"]], "Performance": [[416, "performance"]], "Profiling - Famous Words": [[417, "profiling-famous-words"]], "Donald E. Knuth": [[417, null]], "Tony Hoare": [[417, null]], "Larry Wall": [[417, null]], "The Practice of Programming, Brian W. Kernighan and\n             Rob Pike": [[417, null]], "Profiling - Introduction": [[417, "profiling-introduction"]], "GNU Profiler - gprof": [[418, "gnu-profiler-gprof"]], "gprof - How it Works": [[418, "gprof-how-it-works"]], "Using gprof": [[418, "using-gprof"]], "gprof: Flat Profile": [[418, "gprof-flat-profile"]], "gprof: Call Graph": [[418, "gprof-call-graph"]], "gprof: Interpreting The Results": [[418, "gprof-interpreting-the-results"]], "gprof: Visualization": [[418, "gprof-visualization"]], "callgrind": [[419, "callgrind"]], "callgrind - How it Works": [[419, "callgrind-how-it-works"]], "callgrind - How it is Used": [[419, "callgrind-how-it-is-used"]], "callgrind - Analysis Per Commandline": [[419, "callgrind-analysis-per-commandline"]], "callgrind - Analysis With kcachegrind": [[419, "callgrind-analysis-with-kcachegrind"]], "callgrind - Useful Options": [[419, "callgrind-useful-options"]], "oprofile": [[420, "oprofile"]], "oprofile - How it Works": [[420, "oprofile-how-it-works"]], "oprofile - Basic Usage (1)": [[420, "oprofile-basic-usage-1"]], "oprofile - Basic Usage (2)": [[420, "oprofile-basic-usage-2"]], "oprofile - Too Much Information": [[420, "oprofile-too-much-information"]], "oprofile - Call Graph": [[420, "oprofile-call-graph"]], "oprofile - Kernel Symbols (1)": [[420, "oprofile-kernel-symbols-1"]], "oprofile - Kernel Symbols (2)": [[420, "oprofile-kernel-symbols-2"]], "oprofile - Kernel Modules": [[420, "oprofile-kernel-modules"]], "oprofile - System-Wide Profiling": [[420, "oprofile-system-wide-profiling"]], "oprofile - Offline Profiling": [[420, "oprofile-offline-profiling"]], "oprofile - Graphical Beauty": [[420, "oprofile-graphical-beauty"]], "Profiling": [[421, "profiling"]], "The C Programming Language": [[422, "the-c-programming-language"]], "Messages From The Book": [[423, "messages-from-the-book"]], "What\u2019s There? What Have We Accomplished?": [[424, "what-s-there-what-have-we-accomplished"]], "Rules? Why Rules?": [[424, "rules-why-rules"]], "Coding Style": [[424, "coding-style"]], "Disclaimer": [[424, null]], "Design Principles: SOLID": [[424, "design-principles-solid"]], "Another One: YAGNI": [[424, "another-one-yagni"]], "Architecture": [[424, "architecture"]], "Project Management: Traditional": [[424, "project-management-traditional"]], "Project Management: Software": [[424, "project-management-software"]], "So What?": [[424, "so-what"]], "Is Software A Craft? Software Is A Craft! \u27f6 Clean Code": [[425, "is-software-a-craft-software-is-a-craft-longrightarrow-clean-code"]], "Uncle Bob": [[425, "uncle-bob"]], "A Typical Project (Livehacking Screenplay: My Own Bookkeeping Effort)": [[426, "a-typical-project-livehacking-screenplay-my-own-bookkeeping-effort"]], "Spaghetti Version": [[426, "spaghetti-version"]], "A Little Better: Functions (And Commandline Parameters)": [[426, "a-little-better-functions-and-commandline-parameters"]], "Feature Request: Concatenate Input Data From Multiple CSV Files": [[426, "feature-request-concatenate-input-data-from-multiple-csv-files"]], "Feature Request: Concatenate Input Data From YYYY-MM.csv Files": [[426, "feature-request-concatenate-input-data-from-yyyy-mm-csv-files"]], "Where Are We? Questions!": [[426, "where-are-we-questions"]], "Testability: Input Cleaning": [[426, "testability-input-cleaning"]], "Testability: Reading Input (One Or Multiple Files, Explicitly)": [[426, "testability-reading-input-one-or-multiple-files-explicitly"]], "Test Sanity: Common Code": [[426, "test-sanity-common-code"]], "Testability: Reading Input From Directory": [[426, "testability-reading-input-from-directory"]], "Testability: Categorization": [[426, "testability-categorization"]], "Safety Net In Place \u27f6 Refactoring Categorization": [[426, "safety-net-in-place-longrightarrow-refactoring-categorization"]], "Refactoring Input Reading (\u27f6 Overengineering)": [[426, "refactoring-input-reading-longrightarrow-overengineering"]], "Basics: Boilerplate, And Executables": [[427, "basics-boilerplate-and-executables"]], "Single Monolithic Executable": [[427, "single-monolithic-executable"]], "Building With CMake": [[427, "building-with-cmake"]], "Building With CMake: Separate Source And Build Directories": [[427, "building-with-cmake-separate-source-and-build-directories"]], "Executables Consisting Of Multiple Sources": [[427, "executables-consisting-of-multiple-sources"]], "Problem: Duplicate Compilation": [[427, "problem-duplicate-compilation"]], "Problem: More Functionality": [[427, "problem-more-functionality"]], "Solution: Libraries": [[427, "solution-libraries"], [965, "solution-libraries"]], "\u201cConfigured\u201d Header Files": [[428, "configured-header-files"]], "Problem": [[428, "problem"], [436, "problem"], [442, "problem"], [443, "problem"], [444, "problem"], [447, "problem"], [453, "problem"], [501, "problem"], [763, "problem"], [894, "problem"]], "Configured Files": [[428, "configured-files"]], "Use In Compiled Code": [[428, "use-in-compiled-code"]], "C++, Debug/Release, CMake \u201cProgramming\u201d, Rants": [[429, "c-debug-release-cmake-programming-rants"]], "Pause": [[429, "pause"]], "Class Diagram": [[429, "class-diagram"]], "C++ Standard Version": [[429, "c-standard-version"]], "Debug Vs. Release Builds: CMAKE_BUILD_TYPE": [[429, "debug-vs-release-builds-cmake-build-type"]], "Compiler Type": [[429, "compiler-type"]], "Strings And Lists": [[429, "strings-and-lists"]], "MESSAGE() (A.k.a printf() Debugging)": [[429, "message-a-k-a-printf-debugging"]], "MESSAGE(): Popular \u201cModes\u201d": [[429, "message-popular-modes"]], "FIND_PACKAGE()": [[430, "find-package"]], "FIND_PACKAGE(... REQUIRED)": [[430, "find-package-required"]], "SQLite3 Parameters": [[430, "sqlite3-parameters"]], "Using SQLite3 Parameters": [[430, "using-sqlite3-parameters"]], "Demo Time": [[430, "demo-time"]], "CMake: An Introduction": [[431, "cmake-an-introduction"]], "Installation (\u201cDeployment\u201d)": [[432, "installation-deployment"]], "\u201cPrefix\u201d: Where Everything Comes Together": [[432, "prefix-where-everything-comes-together"]], "Installing Targets": [[432, "installing-targets"]], "Doing The Installation (make install)": [[432, "doing-the-installation-make-install"]], "And Shared Libraries?": [[432, "and-shared-libraries"]], "Shared Libraries: Installed Vs. Local (RUNPATH)": [[432, "shared-libraries-installed-vs-local-runpath"]], "Shared Libraries: ABI Versions": [[432, "shared-libraries-abi-versions"]], "Libraries, And Dependencies": [[433, "libraries-and-dependencies"]], "Libraries And Executables": [[433, "libraries-and-executables"]], "Targets And Dependencies": [[433, "targets-and-dependencies"]], "Visualizing Dependencies": [[433, "visualizing-dependencies"]], "Optional Code, Approach 1: Optional blacklist, C Macro  (Global Flags)": [[434, "optional-code-approach-1-optional-blacklist-c-macro-global-flags"]], "Optional blacklist, C Macro": [[434, "optional-blacklist-c-macro"]], "Optional Dependency In libhello": [[434, "optional-dependency-in-libhello"]], "Optional Dependency In libhello Header File": [[434, "optional-dependency-in-libhello-header-file"]], "Optional Dependency In libhello CPP File": [[434, "optional-dependency-in-libhello-cpp-file"]], "Good Or Bad?": [[434, "good-or-bad"], [435, "good-or-bad"]], "Optional Code, Approach 2: Pushing Optionality Down In Module Interface": [[435, "optional-code-approach-2-pushing-optionality-down-in-module-interface"]], "Remove Too Much CMake Optionality": [[435, "remove-too-much-cmake-optionality"]], "TARGET_COMPILE_DEFINITIONS() (backlist Availablility)": [[435, "target-compile-definitions-backlist-availablility"]], "Push Optionality Down In blacklist (\u27f6 INTERFACE Targets)": [[435, "push-optionality-down-in-blacklist-longrightarrow-interface-targets"]], "Optional Code: Problem Definition, OPTION()": [[436, "optional-code-problem-definition-option"]], "Solution: Add An Option": [[436, "solution-add-an-option"]], "Define Option USE_BLACKLIST; Option Usage, Cache": [[436, "define-option-use-blacklist-option-usage-cache"]], "Option Handling: Many Approaches": [[436, "option-handling-many-approaches"]], "Shared Libraries (Preview)": [[437, "shared-libraries-preview"]], "\u201cNormal\u201d Libraries": [[437, "normal-libraries"]], "Building Shared Libraries": [[437, "building-shared-libraries"]], "More About Loading": [[437, "more-about-loading"]], "Structure - Subdirectories, Dependencies, and Include Paths": [[438, "structure-subdirectories-dependencies-and-include-paths"]], "Reorganization": [[438, "reorganization"]], "Dependencies, And Target Properties": [[438, "dependencies-and-target-properties"]], "Targets, Properties, And More": [[439, "targets-properties-and-more"]], "Target Types": [[439, "target-types"]], "Properties: PRIVATE, PUBLIC, INTERFACE?": [[439, "properties-private-public-interface"]], "Running Tests": [[440, "running-tests"], [1105, "running-tests"]], "Setup And Usage": [[440, "setup-and-usage"]], "Add Simple Test": [[440, "add-simple-test"]], "Checking Test Output": [[440, "checking-test-output"]], "Questionability": [[440, "questionability"]], "C++ Code": [[441, "c-code"]], "Abstract Factory": [[442, "abstract-factory"]], "I2C Sensor Subhierarchy": [[442, "i2c-sensor-subhierarchy"]], "Problem: I2C Sensor Instantiation": [[442, "problem-i2c-sensor-instantiation"]], "Solution: Factory Objects": [[442, "solution-factory-objects"]], "Notes": [[442, "notes"]], "Adapter": [[443, "adapter"]], "Solution: Adaptation": [[443, "solution-adaptation"]], "Basic Adaptation": [[443, "basic-adaptation"]], "Adapter Must Be-A Sensor": [[443, "adapter-must-be-a-sensor"]], "Adaptee Can Be-Any ASensor": [[443, "adaptee-can-be-any-asensor"]], "Adapter Is Doing Real Measurements": [[443, "adapter-is-doing-real-measurements"]], "Command": [[444, "command"]], "Motivation": [[444, "motivation"], [447, "motivation"], [463, "motivation"], [464, "motivation"], [560, "motivation"], [657, "motivation"], [659, "motivation"], [684, "motivation"], [690, "motivation"], [985, "motivation"], [991, "motivation"]], "Step 1: Basic insert()": [[444, "step-1-basic-insert"]], "Step 2: Basic find()": [[444, "step-2-basic-find"]], "Step 3: drop()": [[444, "step-3-drop"]], "Step 4: Handle find() Errors": [[444, "step-4-handle-find-errors"]], "Step 5: Handle insert() Errors": [[444, "step-5-handle-insert-errors"]], "Step 6: Bulk Insert?": [[444, "step-6-bulk-insert"]], "Step 6a: Bulk Insert Using std::initializer_list?": [[444, "step-6a-bulk-insert-using-std-initializer-list"]], "SocialDB Source Code": [[445, "socialdb-source-code"]], "Composite": [[446, "composite"]], "Unix Filesystem": [[446, "unix-filesystem"]], "Boolean Expressions": [[446, "boolean-expressions"]], "Thermometers, And Average Calculation": [[446, "thermometers-and-average-calculation"]], "Decorator": [[447, "decorator"]], "Variant 1: Aggregate Base Class Objects": [[447, "variant-1-aggregate-base-class-objects"]], "Variant 2: Aggregate Conrete Class Objects": [[447, "variant-2-aggregate-conrete-class-objects"]], "Step 1: Realize Current Situation": [[447, "step-1-realize-current-situation"]], "Step 2: Decorate ConstantSensor \u27f6 DecoratedConstantSensor": [[447, "step-2-decorate-constantsensor-longrightarrow-decoratedconstantsensor"]], "Step 3: Decorate RandomSensor \u27f6 DecoratedRandomSensor": [[447, "step-3-decorate-randomsensor-longrightarrow-decoratedrandomsensor"]], "Step 4: Verify That DecoratedConstantSensor Can Be Used As Sensor": [[447, "step-4-verify-that-decoratedconstantsensor-can-be-used-as-sensor"]], "Step 5: Verify That DecoratedRandomSensor Can Be Used As Sensor": [[447, "step-5-verify-that-decoratedrandomsensor-can-be-used-as-sensor"]], "Step 6: Verify That Current Situation Still Holds True": [[447, "step-6-verify-that-current-situation-still-holds-true"]], "Design Patterns With C++": [[448, "design-patterns-with-c"]], "Topics/Exercises": [[448, "topics-exercises"]], "Solutions": [[448, "solutions"], [462, "solutions"], [476, "solutions"]], "To Be Done": [[448, "to-be-done"]], "Case Study/Livehacking: Heating Control (Reading Sensors)": [[449, "case-study-livehacking-heating-control-reading-sensors"]], "Step 1: Monolithic": [[449, "step-1-monolithic"]], "Step 2: And D-Bus? \u27f6 Interfaces": [[449, "step-2-and-d-bus-longrightarrow-interfaces"]], "Step 3: Start D-Bus Implementation": [[449, "step-3-start-d-bus-implementation"]], "Pull Demo Logger/Store Out Into Separate Files": [[449, "pull-demo-logger-store-out-into-separate-files"]], "Adapter: DBusLogger": [[449, "adapter-dbuslogger"]], "Adapter: DBusValueStore": [[449, "adapter-dbusvaluestore"]], "Demo Program To Instantiate Either Demo Or DBus": [[449, "demo-program-to-instantiate-either-demo-or-dbus"]], "Stop Here, Need Help": [[449, "stop-here-need-help"]], "Tests": [[449, "tests"], [469, "tests"]], "Interpreter": [[450, "interpreter"]], "Observer": [[451, "observer"]], "OO Design Principles": [[452, "oo-design-principles"]], "Principles: Why? Which?": [[452, "principles-why-which"]], "Single Responsibility": [[452, "single-responsibility"]], "Open/Closed": [[452, "open-closed"]], "Liskov Substitution": [[452, "liskov-substitution"]], "Interface Segregation": [[452, "interface-segregation"]], "Dependency Inversion": [[452, "dependency-inversion"]], "Proxy": [[453, "proxy"]], "Solution: Proxy": [[453, "solution-proxy"]], "Local Variant": [[453, "local-variant"]], "Remote Variant": [[453, "remote-variant"]], "Exercise Foundation: Sensor Hierarchy": [[454, "exercise-foundation-sensor-hierarchy"]], "Hypothetical": [[454, "hypothetical"]], "Class Hierarchy": [[454, "class-hierarchy"]], "Singleton": [[455, "singleton"]], "And class Person?": [[455, "and-class-person"]], "UML Short Introduction": [[456, "uml-short-introduction"]], "Interface": [[456, "interface"]], "Interface Implementation, Inheritance": [[456, "interface-implementation-inheritance"]], "Connectors: Association, Aggregation, Composition": [[456, "connectors-association-aggregation-composition"]], "Association": [[456, "association"]], "Aggregation": [[456, "aggregation"]], "Composition": [[456, "composition"]], "Exercise: Abstract Factory": [[457, "exercise-abstract-factory"]], "Exercise: Adapter": [[458, "exercise-adapter"], [465, "exercise-adapter"]], "Exercise: Command": [[459, "exercise-command"]], "Exercise: Composite": [[460, "exercise-composite"]], "Exercise: Decorator": [[461, "exercise-decorator"]], "Exercises: Design Patterns": [[462, "exercises-design-patterns"]], "Exercise: Interpreter Combined With Adapter (And A Proxy)": [[463, "exercise-interpreter-combined-with-adapter-and-a-proxy"]], "Exercise: Arithmetic Expression Interpreter": [[464, "exercise-arithmetic-expression-interpreter"]], "Expression Interface": [[464, "expression-interface"]], "Arithmetic (Binary) Expressions": [[464, "arithmetic-binary-expressions"]], "Check: Combined Arithmetic Expressions": [[464, "check-combined-arithmetic-expressions"]], "And Variables?": [[464, "and-variables"]], "No Uninitialized Variables!!": [[464, "no-uninitialized-variables"]], "Assigning To Variables": [[464, "assigning-to-variables"]], "Using Variables As Expressions": [[464, "using-variables-as-expressions"]], "Exercise: Proxy (Remote Thermometer)": [[466, "exercise-proxy-remote-thermometer"]], "Network Communication": [[466, "network-communication"]], "Implementation Hints": [[466, "implementation-hints"]], "Exercise: Proxy (Rounding Thermometer)": [[467, "exercise-proxy-rounding-thermometer"]], "Exercise: Singleton (Flexible)": [[468, "exercise-singleton-flexible"]], "Exercise: Singleton (Flexible And Strict)": [[469, "exercise-singleton-flexible-and-strict"]], "Complications": [[469, "complications"]], "Exercise: Singleton (Inflexible)": [[470, "exercise-singleton-inflexible"]], "Solution: Abstract Factory": [[471, "solution-abstract-factory"]], "I2CSensorFactory Abstract Factory": [[471, "i2csensorfactory-abstract-factory"]], "Concrete Factory Implementations": [[471, "concrete-factory-implementations"]], "I2CSensorFactory_Vendor1": [[471, "i2csensorfactory-vendor1"], [471, "id1"]], "Solution: Adapter": [[472, "solution-adapter"]], "Adapter Class For Fahrenheit Sensors": [[472, "adapter-class-for-fahrenheit-sensors"]], "Solution: Command": [[473, "solution-command"]], "Command Classes": [[473, "command-classes"]], "Solution: Composite": [[474, "solution-composite"]], "Averaging (Composite) Sensor": [[474, "averaging-composite-sensor"]], "Solution: Decorator": [[475, "solution-decorator"]], "Decorated Sensor (Intermediate Interface)": [[475, "decorated-sensor-intermediate-interface"]], "Decorated Constant Sensor": [[475, "decorated-constant-sensor"]], "Decorated Random Sensor": [[475, "decorated-random-sensor"]], "Solution: Interpreter Combined With Adapter (And A Proxy)": [[477, "solution-interpreter-combined-with-adapter-and-a-proxy"]], "Solution: Arithmetic Expression Interpreter": [[478, "solution-arithmetic-expression-interpreter"]], "Solution: Observer": [[479, "solution-observer"]], "Solution: Proxy (Remote Thermometer)": [[480, "solution-proxy-remote-thermometer"]], "Client (Proxy) Thermometer": [[480, "client-proxy-thermometer"]], "Remote Stub": [[480, "remote-stub"]], "Solution: Proxy (Rounding Thermometer)": [[481, "solution-proxy-rounding-thermometer"]], "Rounding Sensor (Proxy) Implementation": [[481, "rounding-sensor-proxy-implementation"]], "Solution: Singleton (Flexible)": [[482, "solution-singleton-flexible"]], "Main Program": [[482, "main-program"], [483, "main-program"], [484, "main-program"]], "SocialInsurance Interface": [[482, "socialinsurance-interface"], [483, "socialinsurance-interface"]], "Two Concrete Implementations": [[482, "two-concrete-implementations"], [483, "two-concrete-implementations"]], "OEGK": [[482, "oegk"], [483, "oegk"]], "SVS": [[482, "svs"], [483, "svs"]], "Solution: Singleton (Flexible And Strict)": [[483, "solution-singleton-flexible-and-strict"]], "Solution: Singleton (Inflexible)": [[484, "solution-singleton-inflexible"]], "Singleton Implementation": [[484, "singleton-implementation"]], "Exercise (FH): Introducing a Sensor Class": [[485, "exercise-fh-introducing-a-sensor-class"]], "Github Project": [[485, "github-project"]], "CMake Build": [[485, "cmake-build"], [907, "cmake-build"]], "Dependencies/Usage Relationships": [[485, "dependencies-usage-relationships"]], "Onewire Sensor Usage: Example/Unit-Test": [[485, "onewire-sensor-usage-example-unit-test"]], "Step 1: Preparation": [[485, "step-1-preparation"]], "Step 2: Modify onewire-temperature-<firstname>-<lastname>.cpp To Use class W1Sensor": [[485, "step-2-modify-onewire-temperature-firstname-lastname-cpp-to-use-class-w1sensor"]], "Step 3: Answer A Question": [[485, "step-3-answer-a-question"]], "Exercise (FH): Extract Measurement Loop Into Function": [[486, "exercise-fh-extract-measurement-loop-into-function"]], "Exercise (FH): Replace Sensor": [[487, "exercise-fh-replace-sensor"]], "Exercise (FH): Write A Sensor Class: RandomSensor": [[488, "exercise-fh-write-a-sensor-class-randomsensor"]], "New Sensor Class: RandomSensor": [[488, "new-sensor-class-randomsensor"]], "Implementation Details": [[488, "implementation-details"]], "New Program: random-temperature.cpp": [[488, "new-program-random-temperature-cpp"]], "FH Sensor OO (First Try)": [[489, "fh-sensor-oo-first-try"]], "C++ Exercises": [[490, "c-exercises"]], "Exercise Projects": [[490, "exercise-projects"]], "Exercise: LEDStripeDisplay_nopoly (Non-Polymorphic)": [[491, "exercise-ledstripedisplay-nopoly-non-polymorphic"]], "Topics Covered": [[491, "topics-covered"], [492, "topics-covered"], [493, "topics-covered"], [494, "topics-covered"], [495, "topics-covered"], [496, "topics-covered"], [497, "topics-covered"], [500, "topics-covered"]], "Exercise: Hysteresis_nopoly (Non-Polymorphic)": [[492, "exercise-hysteresis-nopoly-non-polymorphic"]], "Exercise: AveragingSensor_nopoly (Non-Polymorphic)": [[493, "exercise-averagingsensor-nopoly-non-polymorphic"]], "Exercise: ConstantSensor_nopoly (Non-Polymorphic)": [[494, "exercise-constantsensor-nopoly-non-polymorphic"]], "Exercise: MockSensor_nopoly (Non-Polymorphic)": [[495, "exercise-mocksensor-nopoly-non-polymorphic"]], "Exercise: RandomSensor_nopoly (Non-Polymorphic)": [[496, "exercise-randomsensor-nopoly-non-polymorphic"]], "Implementation Hint: Randomicity In C++": [[496, "implementation-hint-randomicity-in-c"]], "Implementation Hint: Initializer Lists": [[496, "implementation-hint-initializer-lists"]], "Exercise: Mocking Switch (Non-Polymorphic)": [[497, "exercise-mocking-switch-non-polymorphic"]], "OO Basics, Interfaces (Shapes)": [[498, "oo-basics-interfaces-shapes"]], "Exercise Table": [[498, "exercise-table"]], "Setup, Exam Procedure": [[498, "setup-exam-procedure"]], "Point": [[498, "point"]], "Point: Constructor and Getter Methods": [[498, "point-constructor-and-getter-methods"]], "Point: Default Constructor": [[498, "point-default-constructor"]], "Point: Static Method: equal()": [[498, "point-static-method-equal"]], "Point: operator==()": [[498, "point-operator"]], "Point: Method: move()": [[498, "point-method-move"]], "Point: operator+=()": [[498, "point-suite-operator-plus-equals"]], "Point: Static Method: add()": [[498, "point-static-method-add"]], "Point: operator+()": [[498, "point-suite-operator-plus"]], "Circle": [[498, "circle"]], "Circle: Constructor": [[498, "circle-constructor"]], "Circle: operator==()": [[498, "circle-operator"]], "Circle: Method: area()": [[498, "circle-method-area"]], "Square": [[498, "square"]], "Square: Constructor": [[498, "square-constructor"]], "Square: operator==()": [[498, "square-operator"]], "Square: Method: area()": [[498, "square-method-area"]], "Interface: Shape": [[498, "interface-shape"]], "Interface: Circle And Square Is-A Shape": [[498, "interface-circle-and-square-is-a-shape"]], "Interface: Can Compute Area Of Any Shape": [[498, "interface-can-compute-area-of-any-shape"]], "Working On Exercise Projects": [[499, "working-on-exercise-projects"]], "Clone Github Repository": [[499, "clone-github-repository"]], "Massage googletest Sub-Module": [[499, "massage-googletest-sub-module"]], "Build Directory: Create Makefiles With cmake": [[499, "build-directory-create-makefiles-with-cmake"]], "Build Directory: Build With make": [[499, "build-directory-build-with-make"]], "Build Directory: Run Tests": [[499, "build-directory-run-tests"]], "Exercise: Sensor Interface": [[500, "exercise-sensor-interface"]], "Problem: Polymorphic Thermometer Usage": [[500, "problem-polymorphic-thermometer-usage"]], "The Exercise": [[500, "the-exercise"]], "Exercise: OneWire Sensor Factory": [[501, "exercise-onewire-sensor-factory"]], "Fixture": [[501, "fixture"], [724, "fixture"]], "basic": [[501, "basic"]], "notfound": [[501, "notfound"]], "find_is_const": [[501, "find-is-const"]], "Testing In Isolation": [[501, "testing-in-isolation"]], "Testing In Reality": [[501, "testing-in-reality"]], "On The PC": [[501, "on-the-pc"]], "On The Target": [[501, "on-the-target"]], "Exercise: OneWire Sensor Class": [[502, "exercise-onewire-sensor-class"]], "Download Monolithic Sensor Implementation": [[502, "download-monolithic-sensor-implementation"]], "Test Monolithic Implementation": [[502, "test-monolithic-implementation"]], "class W1Sensor": [[502, "class-w1sensor"]], "Exercise: Algorithms": [[503, "exercise-algorithms"]], "Copy Into std::vector": [[503, "copy-into-std-vector"]], "Find Element In std::vector": [[503, "find-element-in-std-vector"]], "Sort In-Place": [[503, "sort-in-place"]], "Sort Into A Copy": [[503, "sort-into-a-copy"]], "Exercise: Generic Filter": [[504, "exercise-generic-filter"]], "Exercise: Filter Elements Greater Than 10": [[505, "exercise-filter-elements-greater-than-10"]], "Exercise: Filter Odd Elements": [[506, "exercise-filter-odd-elements"]], "C++ Exercises: Standard Template Library": [[507, "c-exercises-standard-template-library"]], "Exercise: std::map<>": [[508, "exercise-std-map"]], "Exercises: Sensor Repository (std::map)": [[509, "exercises-sensor-repository-std-map"]], "Insert - Not Overwriting Existing Elements": [[510, "insert-not-overwriting-existing-elements"]], "Insert - Sunny Case": [[511, "insert-sunny-case"]], "Lookup - Not Found": [[512, "lookup-not-found"]], "Lookup - Sunny Case": [[513, "lookup-sunny-case"]], "Memory Leaks?": [[514, "memory-leaks"]], "Remove - Not Found": [[515, "remove-not-found"]], "Remove - Sunny Case": [[516, "remove-sunny-case"]], ".size() Is const": [[517, "size-is-const"]], "Exercise: Uniquify A Sequence": [[518, "exercise-uniquify-a-sequence"]], "Exercise: std::vector<>": [[519, "exercise-std-vector"]], "C++: TODO List": [[520, "c-todo-list"]], "Structural": [[520, "structural"]], "STL, Containers and Algorithms": [[520, "stl-containers-and-algorithms"]], "Templates/Overloading": [[520, "templates-overloading"]], "Functors: Overloading the Function Call Operator": [[520, "functors-overloading-the-function-call-operator"]], "Threads": [[520, "threads"]], "C++ >= 11": [[520, "c-11"]], "UserDB Exercise": [[520, "userdb-exercise"]], "Complete Transcription of C++11": [[520, "complete-transcription-of-c-11"]], "Exercise series": [[520, "exercise-series"]], "Code: C++: Class Templates": [[521, "code-c-class-templates"]], "Screenplay: C++: Class Templates": [[522, "screenplay-c-class-templates"]], "C++: Class Templates": [[523, "c-class-templates"]], "Code: C++: Dynamic Memory": [[524, "code-c-dynamic-memory"]], "Screenplay: C++: Dynamic Memory": [[525, "screenplay-c-dynamic-memory"]], "C: malloc()/free()": [[525, "c-malloc-free"]], "valgrind: Memory Leak": [[525, "valgrind-memory-leak"]], "valgrind: Array Bounds Write": [[525, "valgrind-array-bounds-write"]], "C++: new, delete": [[525, "c-new-delete"]], "C++: new, delete on Arrays": [[525, "c-new-delete-on-arrays"]], "valgrind: delete Mismatch": [[525, "valgrind-delete-mismatch"]], "C++: Dynamic Memory": [[526, "c-dynamic-memory"]], "Code: C++: Global Objects Initialization": [[527, "code-c-global-objects-initialization"]], "Screenplay: C++: Global Objects Initialization": [[528, "screenplay-c-global-objects-initialization"]], "Constructor and Destructor Order in Same File": [[528, "constructor-and-destructor-order-in-same-file"]], "Constructor and Destructor Order Across Files": [[528, "constructor-and-destructor-order-across-files"]], "Constructor and Destructor Order Across Files: Dependencies, Bugs": [[528, "constructor-and-destructor-order-across-files-dependencies-bugs"]], "C++: Global Objects Initialization": [[529, "c-global-objects-initialization"]], "Code: C++: Inheritance, Interfaces, virtual": [[530, "code-c-inheritance-interfaces-virtual"]], "Screenplay: C++: Inheritance, Interfaces, virtual": [[531, "screenplay-c-inheritance-interfaces-virtual"]], "C++: Inheritance, Interfaces, virtual": [[532, "c-inheritance-interfaces-virtual"]], "Code: C++: Ownership/RAII": [[533, "code-c-ownership-raii"]], "Screenplay: C++: Ownership/RAII": [[534, "screenplay-c-ownership-raii"]], "Allocate in Constructor": [[534, "allocate-in-constructor"]], "Deallocate in Destructor - Ownership": [[534, "deallocate-in-destructor-ownership"]], "Ownership: 2 x non-const": [[534, "ownership-2-x-non-const"]], "Ownership: const Method": [[534, "ownership-const-method"]], "Ownership: 2 x const": [[534, "ownership-2-x-const"]], "C++: Ownership/RAII": [[535, "c-ownership-raii"]], "Code: C++: STL Containers (Intro)": [[536, "code-c-stl-containers-intro"]], "Screenplay: C++: STL Containers (Intro)": [[537, "screenplay-c-stl-containers-intro"]], "Pointer Arithmetics Recap": [[537, "pointer-arithmetics-recap"]], "Container: std::vector": [[537, "container-std-vector"]], "Algorithm: std::vector and Naive Copy": [[537, "algorithm-std-vector-and-naive-copy"]], "Algorithm: std::vector and std::copy<>": [[537, "algorithm-std-vector-and-std-copy"]], "Container: std::list": [[537, "container-std-list"]], "Container: std::map": [[537, "container-std-map"]], "C++: STL Containers (Intro)": [[538, "c-stl-containers-intro"]], "Code: C++: Templates vs. Interfaces": [[539, "code-c-templates-vs-interfaces"]], "Screenplay: C++: Templates vs. Interfaces": [[540, "screenplay-c-templates-vs-interfaces"]], "C++: Templates vs. Interfaces": [[541, "c-templates-vs-interfaces"]], "C++: Miscellaneous Live-Hacking": [[542, "c-miscellaneous-live-hacking"]], "Background": [[543, "background"]], "History": [[543, "history"], [966, "history"]], "Content": [[543, "content"]], "Object Oriented Programming In Good Ol\u2019 C": [[544, "object-oriented-programming-in-good-ol-c"]], "C Is Simple, So Why C++?": [[544, "c-is-simple-so-why-c"]], "struct point: Something That Looks Like A Point": [[544, "struct-point-something-that-looks-like-a-point"]], "Good Style: Explicit Initialization Functions": [[544, "good-style-explicit-initialization-functions"]], "Comparison Functions: (In)Equality": [[544, "comparison-functions-in-equality"]], "Moving Points": [[544, "moving-points"]], "Vector Addition and Subtraction": [[544, "vector-addition-and-subtraction"]], "Distance Of Two Points": [[544, "distance-of-two-points"]], "Length Of A Point\u2019s Position Vector": [[544, "length-of-a-point-s-position-vector"]], "Summary: Is C Good Enough?": [[544, "summary-is-c-good-enough"]], "Copy Constructor, Assignment Operator": [[545, "copy-constructor-assignment-operator"]], "Compiler Generated Copy Constructor": [[545, "compiler-generated-copy-constructor"]], "Rule": [[545, null], [548, null], [647, "rule"]], "Manually Written Copy Constructor And Assignment Operator": [[545, "manually-written-copy-constructor-and-assignment-operator"]], "Classes and Objects": [[546, "classes-and-objects"]], "Introducing C++: class point": [[546, "introducing-c-class-point"]], "Access Specifiers: public And private": [[546, "access-specifiers-public-and-private"]], "Default Constructor": [[546, "default-constructor"], [548, "default-constructor"], [561, "default-constructor"], [562, "default-constructor"], [563, "default-constructor"], [564, "default-constructor"]], "Custom Constructor: Usage": [[546, "custom-constructor-usage"]], "Custom Constructor: Implementation": [[546, "custom-constructor-implementation"]], "Access Methods For Otherwise Private Members": [[546, "access-methods-for-otherwise-private-members"]], "Methods: Operations On An Object": [[546, "methods-operations-on-an-object"]], "And printf()?!": [[546, "and-printf"]], "Custom Constructor": [[547, "custom-constructor"], [561, "custom-constructor"]], "Constructors: why? (1)": [[547, "constructors-why-1"]], "Constructors: why? (2)": [[547, "constructors-why-2"]], "Constructors: Implementation - Inline": [[547, "constructors-implementation-inline"]], "Constructors: Implementation - Out-of-Line": [[547, "constructors-implementation-out-of-line"]], "Compiler Generated Default Constructor": [[548, "compiler-generated-default-constructor"]], "Compiler Generated Default Constructor: Pitfall: Built-In Types": [[548, "compiler-generated-default-constructor-pitfall-built-in-types"]], "Manually Written Default Constructor": [[548, "manually-written-default-constructor"]], "What If User-Defined Constructors Are In Place?": [[548, "what-if-user-defined-constructors-are-in-place"]], "More Constructors, Destructors": [[549, "more-constructors-destructors"]], "Default Constructor (1)": [[549, "default-constructor-1"]], "Default Constructor (2)": [[549, "default-constructor-2"]], "Object Lifecycle - Destructor": [[549, "object-lifecycle-destructor"]], "Destructors (1)": [[549, "destructors-1"]], "Destructors (2)": [[549, "destructors-2"]], "Destructors (3)": [[549, "destructors-3"]], "Destructors (4)": [[549, "destructors-4"]], "Data Encapsulation": [[550, "data-encapsulation"]], "Constructors: Member Initialization": [[551, "constructors-member-initialization"]], "Member Initialization? Assignment?": [[551, "member-initialization-assignment"]], "Real Initialization: Initializer List": [[551, "real-initialization-initializer-list"]], "Why Is That Important?": [[551, "why-is-that-important"]], "Why Else Is That Important?": [[551, "why-else-is-that-important"]], "Object Copy (And Resource Management): There Be Dragons": [[552, "object-copy-and-resource-management-there-be-dragons"]], "Copy in C": [[552, "copy-in-c"]], "Copy Constructor": [[552, "copy-constructor"]], "Pointer Members, And Compiler Generated Copy": [[552, "pointer-members-and-compiler-generated-copy"]], "Why? Dragons Everywhere!": [[552, "why-dragons-everywhere"]], "Solution: Write Copy Constructor Manually": [[552, "solution-write-copy-constructor-manually"]], "Copy Constructor: Recursive/Memberwise": [[552, "copy-constructor-recursive-memberwise"]], "Assignment Operator": [[552, "assignment-operator"]], "Assignment Operator and Pointer Members: Memory Leak": [[552, "assignment-operator-and-pointer-members-memory-leak"]], "Assignment Operator and Pointer Members: Memory Leak, Straighforward Fix": [[552, "assignment-operator-and-pointer-members-memory-leak-straighforward-fix"]], "Assignment Operator and Pointer Members: Self-Assignment": [[552, "assignment-operator-and-pointer-members-self-assignment"]], "Assignment Operator: Self Assignment, Correctly Implemented": [[552, "assignment-operator-self-assignment-correctly-implemented"]], "Overloading": [[553, "overloading"]], "Functions in C": [[553, "functions-in-c"]], "Functions in C++ \u2014 Overloading": [[553, "functions-in-c-overloading"]], "Underlying Mechanism: Name Mangling": [[553, "underlying-mechanism-name-mangling"]], "Overloading Class Methods: Just The Same": [[553, "overloading-class-methods-just-the-same"]], "Methods": [[554, "methods"], [701, "methods"], [702, "methods"], [703, "methods"], [988, "methods"]], "Objects - Data and Methods": [[554, "objects-data-and-methods"]], "class point Again": [[554, "class-point-again"]], "Simple Methods: Access Methods (\u201cGetters\u201d)": [[554, "simple-methods-access-methods-getters"]], "How Are Members Accessed Inside Methods?": [[554, "how-are-members-accessed-inside-methods"]], "const Methods": [[554, "const-methods"], [555, "const-methods"]], "Non const Methods": [[554, "non-const-methods"]], "const": [[555, "const"]], "const: Immutable Variable": [[555, "const-immutable-variable"]], "const Correctness vs. Pollution": [[555, "const-correctness-vs-pollution"]], "this": [[556, "this"]], "Hidden Pointer: this (1)": [[556, "hidden-pointer-this-1"]], "Hidden Pointer: this (2)": [[556, "hidden-pointer-this-2"]], "Explicit this Pointer": [[556, "explicit-this-pointer"]], "Pass By Copy/Reference": [[557, "pass-by-copy-reference"]], "Pointers Can Be Left Uninitialized": [[557, "pointers-can-be-left-uninitialized"]], "References Cannot (Easily) Be Left Uninitialized": [[557, "references-cannot-easily-be-left-uninitialized"]], "Copy? Reference? C? Pointers!": [[557, "copy-reference-c-pointers"]], "C++: True References": [[557, "c-true-references"]], "And const? Pointers?": [[557, "and-const-pointers"]], "const References": [[557, "const-references"]], "const Reference: Substitute For \u201cPass by Copy\u201d": [[557, "const-reference-substitute-for-pass-by-copy"]], "static Methods": [[558, "static-methods"]], "Methods without Object": [[558, "methods-without-object"]], "Naive Implementation: Global Function": [[558, "naive-implementation-global-function"]], "C++: static Method": [[558, "c-static-method"]], "static Member Variables": [[559, "static-member-variables"]], "Good Old C: extern Global Variables": [[559, "good-old-c-extern-global-variables"]], "ODR: One Definition Rule": [[559, "odr-one-definition-rule"]], "(A Litte) More Overengineered: Declaration In Header File": [[559, "a-litte-more-overengineered-declaration-in-header-file"]], "Same Inside A Class: static Member Variable": [[559, "same-inside-a-class-static-member-variable"]], "Sideway: Definition In A Header File?": [[559, "sideway-definition-in-a-header-file"]], "static inline Member Defnition (Since C++17)": [[559, "static-inline-member-defnition-since-c-17"]], "Implementing (In)Equality": [[560, "implementing-in-equality"]], "Implementing (In)Equality: Global Function": [[560, "implementing-in-equality-global-function"]], "Implementing (In)Equality: Object Method": [[560, "implementing-in-equality-object-method"]], "Implementing Arithmetic: + (Vector Addition)": [[560, "implementing-arithmetic-vector-addition"]], "Implementing Arithmetic: + (Vector Addition): Global Function": [[560, "implementing-arithmetic-vector-addition-global-function"]], "Implementing Arithmetic: + (Vector Addition): Object Method": [[560, "implementing-arithmetic-vector-addition-object-method"]], "Implementing Arithmetic: += (Moving A Point)": [[560, "implementing-arithmetic-moving-a-point"]], "Implementing ostream Shift: std::cout << ...": [[560, "implementing-ostream-shift-std-cout"]], "Exercise (FH): class cuboid": [[561, "exercise-fh-class-cuboid"]], "Building class cuboid Upon class point3d": [[561, "building-class-cuboid-upon-class-point3d"]], "(In-)Equality": [[561, "in-equality"], [562, "in-equality"], [563, "in-equality"], [564, "in-equality"]], "+=": [[561, "id2"], [562, "id1"], [563, "id2"], [564, "id2"]], "-=": [[561, "id4"], [563, "id4"]], "+": [[561, "id6"], [562, "id2"], [563, "id6"], [564, "id3"]], "-": [[561, "id8"], [563, "id8"]], "<< (std::ostream)": [[561, "std-ostream"], [562, "std-ostream"], [563, "std-ostream"], [564, "std-ostream"]], "Surface": [[561, "surface"]], "Volume": [[561, "volume"]], "Exercise (FH): class point": [[562, "exercise-fh-class-point"]], "Initial Build": [[562, "initial-build"]], "Initial Test Run": [[562, "initial-test-run"]], "Extending class point: More Unit Tests": [[562, "extending-class-point-more-unit-tests"]], "Access Methods": [[562, "access-methods"]], "Unary -": [[562, "unary"], [563, "unary"]], "Exercise (FH): class point3d": [[563, "exercise-fh-class-point3d"]], "Building class rectangle Upon class point": [[563, "building-class-rectangle-upon-class-point"], [564, "building-class-rectangle-upon-class-point"]], "Coordinates": [[563, "coordinates"], [564, "coordinates"]], "Absolute Value": [[563, "absolute-value"]], "Distance Between Two Points": [[563, "distance-between-two-points"]], "Exercise (FH): class rectangle": [[564, "exercise-fh-class-rectangle"]], "Width, Height, Area": [[564, "width-height-area"]], "Functions and Methods": [[565, "functions-and-methods"]], "Error Handling: if - else if - else": [[566, "error-handling-if-else-if-else"]], "try - catch": [[567, "try-catch"]], "try - Block": [[567, "try-block"]], "catch - Block": [[567, "catch-block"]], "Standard Library: Exception-Hierarchy": [[567, "standard-library-exception-hierarchy"]], "Custom Exceptions (1)": [[567, "custom-exceptions-1"]], "Custom Exceptions (2)": [[567, "custom-exceptions-2"]], "Throwing Exceptions - throw": [[567, "throwing-exceptions-throw"]], "Last Words": [[567, "last-words"], [570, "last-words"]], "Function Templates": [[569, "function-templates"]], "Origin: Duplicated Code": [[569, "origin-duplicated-code"]], "A simple Function-Template": [[569, "a-simple-function-template"]], "More Templates from the STL": [[569, "more-templates-from-the-stl"]], "Class Templates": [[570, "class-templates"]], "Does This Work With Classes?": [[570, "does-this-work-with-classes"]], "Example: point as a Class Template (1)": [[570, "example-point-as-a-class-template-1"]], "Example: point as a Class Template (2)": [[570, "example-point-as-a-class-template-2"]], "C++ Template Basics": [[571, "c-template-basics"]], "Screenplay: std::copy<>() From <algorithm>": [[572, "screenplay-std-copy-from-algorithm"]], "Screenplay: Pointer Arithmetic, And Algorithms": [[573, "screenplay-pointer-arithmetic-and-algorithms"]], "Screenplay: Pointer Arithmetic Basics": [[574, "screenplay-pointer-arithmetic-basics"]], "Screenplay: Pointer Difference": [[575, "screenplay-pointer-difference"]], "Screenplay: Out Of Range Errors": [[576, "screenplay-out-of-range-errors"]], "Standard Template Library: Basics": [[577, "standard-template-library-basics"]], "Containers, Iterators, Algorithms": [[577, "containers-iterators-algorithms"]], "Pointer Increment and Decrement": [[577, "pointer-increment-and-decrement"]], "Out Of Range Errors (The Spirit Of C)": [[577, "out-of-range-errors-the-spirit-of-c"]], "Pointer Difference": [[577, "pointer-difference"]], "Step Width? (1)": [[577, "step-width-1"]], "Step Width? (2)": [[577, "step-width-2"]], "And Arbitrary Data Types?": [[577, "and-arbitrary-data-types"]], "Enter Algorithms (On Good Old C Arrays)": [[577, "enter-algorithms-on-good-old-c-arrays"]], "STL Algorithms": [[577, "stl-algorithms"]], "STL Containers": [[577, "stl-containers"]], "std::vector (And std::copy())": [[578, "std-vector-and-std-copy"]], "Dynamicity Details": [[578, "dynamicity-details"]], "STL Iterators: Pointer Arithmetic On A std::vector<>": [[578, "stl-iterators-pointer-arithmetic-on-a-std-vector"]], "Algorithms And Containers : std::copy": [[578, "algorithms-and-containers-std-copy"]], "Screenplay: std::vector And std::copy()": [[579, "screenplay-std-vector-and-std-copy"]], "std::vector<> Into C Array": [[579, "std-vector-into-c-array"]], "Copying Into std::vector (Without Allocation)": [[579, "copying-into-std-vector-without-allocation"]], "Solution 1: Pre-allocate Destination": [[579, "solution-1-pre-allocate-destination"]], "Solution 2: std::back_insert_iterator": [[579, "solution-2-std-back-insert-iterator"]], "Screenplay: std::vector Basics": [[580, "screenplay-std-vector-basics"]], "Screenplay: std::vector, And Pointer Arithmetics": [[581, "screenplay-std-vector-and-pointer-arithmetics"]], "Documentation": [[582, null], [583, null], [584, null], [585, null], [586, null], [588, null], [589, null], [590, null], [591, null], [594, null], [595, null], [598, null], [603, null], [737, null], [737, null], [753, null], [755, "documentation"], [755, null], [759, "documentation"], [761, null], [761, null], [761, null], [787, "documentation"], [790, "documentation"], [800, null], [801, null], [804, null], [808, null], [808, null], [815, null], [816, null], [817, null], [817, null], [817, null], [818, null], [833, null], [833, null], [833, null], [834, null], [835, null], [836, null], [852, null], [852, null], [852, null], [855, null], [856, null], [889, null], [891, null], [893, null], [895, null], [896, null], [897, null], [899, null], [899, null], [899, null], [899, null], [899, null], [899, null], [902, null], [903, null], [904, null], [905, null], [905, null], [906, null], [909, null], [909, null], [909, null], [909, null], [947, null], [947, null], [948, null], [1023, null], [1033, null], [1112, "documentation"]], "binary_search<>: On Sorted Sequence": [[582, "binary-search-on-sorted-sequence"]], "More Intelligent Search": [[582, "more-intelligent-search"], [588, "more-intelligent-search"]], "copy<>": [[583, "copy"]], "find<>: Sequential Search, by Equality": [[584, "find-sequential-search-by-equality"]], "Basic Usage": [[584, "basic-usage"], [703, "basic-usage"], [855, "basic-usage"], [1025, "basic-usage"]], "Not Found?": [[584, "not-found"]], "find_if<>: Sequential Search, Customizable": [[585, "find-if-sequential-search-customizable"]], "if, Using a Plain Function": [[585, "if-using-a-plain-function"]], "if, Using a Functor Class": [[585, "if-using-a-functor-class"]], "for_each<>": [[586, "for-each"]], "Basic Algorithms": [[587, "basic-algorithms"]], "Sorted Arrays": [[587, "sorted-arrays"]], "lower_bound<>: On Sorted Sequence": [[588, "lower-bound-on-sorted-sequence"]], "reverse<>: Reversing In-Place": [[589, "reverse-reversing-in-place"]], "reverse_copy<>: Copying and Reversing": [[590, "reverse-copy-copying-and-reversing"]], "sort<>": [[591, "sort"]], "Algorithm: std::sort": [[591, "algorithm-std-sort"]], "Algorithm: std::sort, custom comparison": [[591, "algorithm-std-sort-custom-comparison"]], "Sequential Containers": [[592, "sequential-containers"], [593, "sequential-containers"]], "Common Characteristics": [[592, "common-characteristics"]], "list<>": [[594, "list"]], "Insertion and Deletion": [[594, "insertion-and-deletion"]], "vector<>": [[595, "vector"]], "Characteristics": [[595, "characteristics"]], "Modification at the Back": [[595, "modification-at-the-back"]], "Insertion": [[595, "insertion"]], "Example": [[595, "example"], [1040, "example"]], "Associative Containers": [[596, "associative-containers"], [597, "associative-containers"]], "Type Instantiation": [[598, "type-instantiation"]], "Filling The Container": [[598, "filling-the-container"]], "Inserting Elements": [[598, "inserting-elements"]], "Searching": [[598, "searching"], [622, "searching"]], "Screenplay: std::map Initialization And Inserting": [[599, "screenplay-std-map-initialization-and-inserting"]], "Definining The Type": [[599, "definining-the-type"]], "Initialization": [[599, "initialization"], [622, "initialization"]], "Screenplay: Inserting Elements": [[600, "screenplay-inserting-elements"]], "Subscript Operator": [[600, "subscript-operator"]], "insert()": [[600, "insert"]], "Screenplay: Removing (Erasing) Elements": [[601, "screenplay-removing-erasing-elements"]], "By Pointer (Err, Iterator)": [[601, "by-pointer-err-iterator"]], "By Key": [[601, "by-key"]], "Screenplay: Searching": [[602, "screenplay-searching"]], "find(key)": [[602, "find-key"]], "[key]": [[602, "key"]], "at(key)": [[602, "at-key"]], "multimap<>": [[603, "multimap"]], "Allocator Basics": [[604, "allocator-basics"]], "Allocators": [[605, "allocators"]], "STL: Exercises": [[606, "stl-exercises"]], "Exercise: Reverse a String": [[607, "exercise-reverse-a-string"]], "Exercise: Reverse A String": [[608, "exercise-reverse-a-string"]], "Solution: Reverse a String": [[609, "solution-reverse-a-string"]], "Naive": [[609, "naive"]], "Using std::reverse<>": [[609, "using-std-reverse"]], "Using std::reverse_copy<>": [[609, "using-std-reverse-copy"]], "Dynamic Memory (To Be Done)": [[611, "dynamic-memory-to-be-done"]], "Dynamic Memory Allocation, Resource Management": [[612, "dynamic-memory-allocation-resource-management"]], "Inheritance Basics": [[613, "inheritance-basics"]], "Plain (Base) Class": [[613, "plain-base-class"], [614, "plain-base-class"]], "Inheriting (Deriving) From Base": [[613, "inheriting-deriving-from-base"]], "Derived is-a Base?": [[613, "derived-is-a-base"]], "Destructors And Inheritance": [[614, "destructors-and-inheritance"]], "Derived Class, And Destructor": [[614, "derived-class-and-destructor"]], "And Base Class Conversion?": [[614, "and-base-class-conversion"]], "Inheritance And Object Oriented Design": [[615, "inheritance-and-object-oriented-design"]], "Bringing It All Together": [[616, "bringing-it-all-together"]], "Polymorphic Usage Of Objects": [[617, "polymorphic-usage-of-objects"]], "What Larger Systems Want": [[617, "what-larger-systems-want"]], "Pitfall \u27f6 Pure Virtual Methods": [[617, "pitfall-longrightarrow-pure-virtual-methods"]], "Pure Virtual Method": [[617, "pure-virtual-method"]], "Inheritance: private, protected (Implementation Inheritance)": [[618, "inheritance-private-protected-implementation-inheritance"]], "Virtual Destructors": [[619, "virtual-destructors"]], "Is-A Relationships And Destructors": [[619, "is-a-relationships-and-destructors"]], "Pure Virtual Destructor?": [[619, "pure-virtual-destructor"]], "Virtual Methods": [[620, "virtual-methods"]], "Simple Is-A Relationship Is Not Enough": [[620, "simple-is-a-relationship-is-not-enough"]], "Enter virtual": [[620, "enter-virtual"]], "Caution: virtual": [[620, "caution-virtual"]], "The Standard Library: Miscellaneous Topics": [[621, "the-standard-library-miscellaneous-topics"]], "std::string": [[622, "std-string"]], "Addition, And Such": [[622, "addition-and-such"]], "Conversion From String": [[622, "conversion-from-string"]], "Conversion To String": [[622, "conversion-to-string"]], "Substrings": [[622, "substrings"]], "Exercise: Paint the American Flag Onto Standard Output": [[623, "exercise-paint-the-american-flag-onto-standard-output"]], "FH/Moodle Quiz: C++": [[624, "fh-moodle-quiz-c"]], "Exercises: Miscellaneous": [[625, "exercises-miscellaneous"]], "Exercise: Sum of Integers Coming From cin": [[626, "exercise-sum-of-integers-coming-from-cin"]], "Exercises: User Database": [[627, "exercises-user-database"]], "Exercise: Access Methods for Members": [[628, "exercise-access-methods-for-members"]], "Exercise: const Members": [[629, "exercise-const-members"]], "Exercise: Use const": [[630, "exercise-use-const"]], "Exercise: Default Constructor (was: Arrays of Objects)": [[631, "exercise-default-constructor-was-arrays-of-objects"]], "Exercise: Simple Method (Users Age By n Years)": [[632, "exercise-simple-method-users-age-by-n-years"]], "Exercise: Transform struct User Into A Class": [[633, "exercise-transform-struct-user-into-a-class"]], "Exercise: Insert a User into UserDB": [[634, "exercise-insert-a-user-into-userdb"]], "Exercise: Search a User By Lastname (std::find_if)": [[635, "exercise-search-a-user-by-lastname-std-find-if"]], "Exercise: Search, \u201cUser Not Found\u201d Exception": [[636, "exercise-search-user-not-found-exception"]], "What\u2019s Wrong?": [[636, "what-s-wrong"]], "Exercise: Search a User By Lastname": [[637, "exercise-search-a-user-by-lastname"]], "Exercise: Use std::vector in UserDB": [[638, "exercise-use-std-vector-in-userdb"]], "C++ 03": [[639, "c-03"]], "History, Background": [[641, "history-background"]], "Make C++ Great Again": [[641, "make-c-great-again"]], "The \u201cNew\u201d C++": [[641, "the-new-c"]], "A Live-Hacked Tour Around The New C++": [[642, "a-live-hacked-tour-around-the-new-c"]], "C++03 To-Do List Version": [[642, "c-03-to-do-list-version"]], "Real Container Initialization": [[642, "real-container-initialization"]], "Long iterator Type Names \u27f6 auto": [[642, "long-iterator-type-names-longrightarrow-auto"]], "More auto: Unpacking std::pair": [[642, "more-auto-unpacking-std-pair"]], "Pitfall: Plain auto Creates Copy \u27f6 const auto&": [[642, "pitfall-plain-auto-creates-copy-longrightarrow-const-auto"]], "Iterators Are So Old-School: Range Based For": [[642, "iterators-are-so-old-school-range-based-for"]], "Still Too Old-School: Want Python\u2019s Tuple Unpacking": [[642, "still-too-old-school-want-python-s-tuple-unpacking"]], "What If To-Do List Items Can Really Do Something? \u27f6 Functions": [[642, "what-if-to-do-list-items-can-really-do-something-longrightarrow-functions"]], "Function Pointers Are Old-School \u27f6 std::function": [[642, "function-pointers-are-old-school-longrightarrow-std-function"]], "Definitely Not Old-School: Lambda": [[642, "definitely-not-old-school-lambda"]], "Inevitable: Threads": [[642, "inevitable-threads"]], "Unions? std::variant!": [[642, "unions-std-variant"]], "Wrapping All That Into A Class": [[642, "wrapping-all-that-into-a-class"]], "Architectural Considerations: No Implementation Inheritance Wanted": [[642, "architectural-considerations-no-implementation-inheritance-wanted"]], "Wrapping Up: Initializer": [[642, "wrapping-up-initializer"]], "C++03 enum Types: Motivation": [[643, "c-03-enum-types-motivation"]], "C++03 enum Types: Problems": [[643, "c-03-enum-types-problems"]], "C++11 enum class": [[643, "c-11-enum-class"]], "C++11 enum class: Underlying Type": [[643, "c-11-enum-class-underlying-type"]], "Brace Initialization (Uniform Initialization)": [[644, "brace-initialization-uniform-initialization"]], "std::initializer_list: Brace Initialization, Implementor\u2019s View": [[645, "std-initializer-list-brace-initialization-implementor-s-view"]], "std::initializer_list": [[645, "std-initializer-list"]], "Direct Usage": [[645, "direct-usage"]], "Custom Class That Supports Brace Initialization": [[645, "custom-class-that-supports-brace-initialization"]], "Brace Initialization: Introduction": [[646, "brace-initialization-introduction"]], "Motivation: Inconsistent Initialization Styles": [[646, "motivation-inconsistent-initialization-styles"]], "Motivation: Integral Types Initialization": [[646, "motivation-integral-types-initialization"]], "Motivation: Aggregate Initialization": [[646, "motivation-aggregate-initialization"]], "Motivation: Object Initialization/Constructor": [[646, "motivation-object-initialization-constructor"]], "Motivation: Container Initialization (Missing Pre C++11)": [[646, "motivation-container-initialization-missing-pre-c-11"]], "Motivation: Member Array Initialization": [[646, "motivation-member-array-initialization"]], "Motivation: Heap Array Initialization": [[646, "motivation-heap-array-initialization"]], "Solution: Brace Initialization In C++11": [[646, "solution-brace-initialization-in-c-11"]], "Good: Refuses To Narrow Built-In Types": [[646, "good-refuses-to-narrow-built-in-types"]], "Brace Initialization: A Mess": [[647, "brace-initialization-a-mess"]], "Explicit Constructor And Brace Initialization": [[647, "explicit-constructor-and-brace-initialization"]], "Ambiguity: Explicit And std::initializer_list Constructor": [[647, "ambiguity-explicit-and-std-initializer-list-constructor"]], "Realistic Example: std::vector: Two int (Explicit)": [[647, "realistic-example-std-vector-two-int-explicit"]], "Realistic Example: std::vector: Two int (std::initializer_list)": [[647, "realistic-example-std-vector-two-int-std-initializer-list"]], "Nicolai Josuttis, Complaining About C++": [[647, "nicolai-josuttis-complaining-about-c"]], "Delegating Constructor: Motivation": [[648, "delegating-constructor-motivation"]], "Delegating Constructor: Solution": [[648, "delegating-constructor-solution"]], "constexpr": [[649, "constexpr"]], "Basic Usage: Expressions": [[649, "basic-usage-expressions"]], "constexpr Functions": [[649, "constexpr-functions"]], "Recursive constexpr": [[649, "recursive-constexpr"]], "constexpr Objects": [[649, "constexpr-objects"]], "Afterword, Further Reading": [[650, "afterword-further-reading"]], "Uses In The Standard Library": [[650, "uses-in-the-standard-library"]], "Other Uses": [[650, "other-uses"]], "All Said \u27f6 Guidelines": [[650, "all-said-longrightarrow-guidelines"]], "Further Reading (Well, Videos \ud83d\ude09)": [[650, "further-reading-well-videos-wink"]], "Move Semantics, Rvalue References": [[651, "move-semantics-rvalue-references"]], "Alternative Livehacking": [[651, "alternative-livehacking"]], "SmartPtr With Move Semantics": [[652, "smartptr-with-move-semantics"]], "Return SmartPtr Object From Function": [[652, "return-smartptr-object-from-function"]], "Assign SmartPtr Object \u27f6 Moved": [[652, "assign-smartptr-object-longrightarrow-moved"]], "Implementing Move Semantics (class String, Live Hacked)": [[653, "implementing-move-semantics-class-string-live-hacked"]], "Copy Semantics, Revisited": [[653, "copy-semantics-revisited"]], "class String, Without Copy": [[653, "class-string-without-copy"]], "Return From Function: Copy (Or Move) Wanted": [[653, "return-from-function-copy-or-move-wanted"]], "Move Constructor? Move?": [[653, "move-constructor-move"]], "Implementing Move Constructor": [[653, "implementing-move-constructor"]], "And Move Assignment?": [[653, "and-move-assignment"]], "Implementing Move Assignment": [[653, "implementing-move-assignment"]], "Using Move Semantics In Own Code": [[654, "using-move-semantics-in-own-code"]], "Using String: class Person": [[654, "using-string-class-person"]], "What?": [[654, "what"], [816, "what"]], "Using Rvalue References Inside Function: std::move": [[654, "using-rvalue-references-inside-function-std-move"]], "Lvalues, Rvalues, And Such": [[655, "lvalues-rvalues-and-such"]], "Return Object Problem: Reference To Stack-Based Object": [[655, "return-object-problem-reference-to-stack-based-object"]], "Return Object Problem: Solution: Copy": [[655, "return-object-problem-solution-copy"]], "Move Semantics: Wish List": [[655, "move-semantics-wish-list"]], "Theory: Lvalues": [[655, "theory-lvalues"]], "Theory: Rvalues": [[655, "theory-rvalues"]], "Lvalue References (The Good Old Ones)": [[655, "lvalue-references-the-good-old-ones"]], "Rvalue References: So What Is That?": [[655, "rvalue-references-so-what-is-that"]], "Rvalue References As Function Parameters": [[655, "rvalue-references-as-function-parameters"]], "Use Of Rvalue References Parameter Inside A Function: Is An Lvalue": [[655, "use-of-rvalue-references-parameter-inside-a-function-is-an-lvalue"]], "Enter Move Constructor And Move Assignment": [[655, "enter-move-constructor-and-move-assignment"]], "Rules": [[655, null]], "Templates end with \u201c>>\u201d": [[656, "templates-end-with"]], "auto": [[657, "auto"]], "Most Basic Usage": [[657, "most-basic-usage"]], "auto Is Only The Basic Type": [[657, "auto-is-only-the-basic-type"]], "If You Want Reference, Say So!": [[657, "if-you-want-reference-say-so"]], "If You Want Const-Reference, Say So!": [[657, "if-you-want-const-reference-say-so"]], "If You Want Pointer, Say So!": [[657, "if-you-want-pointer-say-so"]], "And Arrays? Decay To Pointers!": [[657, "and-arrays-decay-to-pointers"]], "Concepts: Overview": [[659, "concepts-overview"]], "No Problem: Template Instantiation Chosen By Parameter Type": [[659, "no-problem-template-instantiation-chosen-by-parameter-type"]], "Problem: Template Instantiation Chosen By Parameter Type": [[659, "problem-template-instantiation-chosen-by-parameter-type"]], "Concepts To The Rescue": [[659, "concepts-to-the-rescue"]], "Syntactic Variations": [[659, "syntactic-variations"]], "toolcase-1-conceptless.cpp": [[660, "toolcase-1-conceptless-cpp"]], "toolcase-2-conceptless-error.cpp": [[661, "toolcase-2-conceptless-error-cpp"]], "toolcase-3-concept-integral.cpp": [[662, "toolcase-3-concept-integral-cpp"]], "Concepts: Links": [[663, "concepts-links"]], "Writing Your Own Concepts": [[664, "writing-your-own-concepts"]], "Starting Point: Good Old Function": [[664, "starting-point-good-old-function"]], "Need Template": [[664, "need-template"]], "Error: Requirement Not Fulfilled": [[664, "error-requirement-not-fulfilled"]], "Concept: has_size": [[664, "concept-has-size"]], "Concept: index_returns_double": [[664, "concept-index-returns-double"]], "example-1-good-old-func.cpp": [[665, "example-1-good-old-func-cpp"]], "example-2-need-template.cpp": [[666, "example-2-need-template-cpp"]], "example-4-concept-has-size.cpp": [[667, "example-4-concept-has-size-cpp"]], "example-5-concept-index-ret-double.cpp": [[668, "example-5-concept-index-ret-double-cpp"]], "Coroutines": [[669, "coroutines"]], "Coroutines: An Overview": [[670, "coroutines-an-overview"]], "Foreword": [[670, "foreword"]], "Prototypical Introductory Exampe: Fibonacci Numbers": [[670, "prototypical-introductory-exampe-fibonacci-numbers"]], "Step By Step: Simplest": [[670, "step-by-step-simplest"]], "Simplest: Incremental Fixing And Explaining": [[670, "simplest-incremental-fixing-and-explaining"]], "Driving Coroutines: Coroutine Anatomy": [[670, "driving-coroutines-coroutine-anatomy"]], "Driving Coroutines: Resuming": [[670, "driving-coroutines-resuming"]], "Suspension: Returning Control To Caller (co_yield)": [[670, "suspension-returning-control-to-caller-co-yield"]], "Playing Around: Iteration, Mimicking Python Iterator Protocol": [[670, "playing-around-iteration-mimicking-python-iterator-protocol"]], "Playing Around: Iteration, Range-Based-For": [[670, "playing-around-iteration-range-based-for"]], "Playing Around: Generic Generator": [[670, "playing-around-generic-generator"]], "Playing Around: Fibonacci Numbers, Generator Version": [[670, "playing-around-fibonacci-numbers-generator-version"]], "Pitfalls: Coroutines Are Stateful!": [[670, "pitfalls-coroutines-are-stateful"]], "fibo-generator.cpp": [[671, "fibo-generator-cpp"]], "fibonacci.cpp": [[672, "fibonacci-cpp"]], "generator.h": [[673, "generator-h"]], "generator-hello.cpp": [[674, "generator-hello-cpp"]], "simplest.cpp": [[675, "simplest-cpp"]], "suspend.cpp": [[676, "suspend-cpp"]], "suspend-iter.cpp": [[677, "suspend-iter-cpp"]], "suspend-next.cpp": [[678, "suspend-next-cpp"]], "= default": [[679, "default"]], "Problem: Default Constructor Not Automatically Generated": [[679, "problem-default-constructor-not-automatically-generated"]], "C++ < 11 Solution: Write Default Constructor \ud83d\ude20 \ud83d\udc4e": [[679, "c-11-solution-write-default-constructor-angry-thumbsdown"]], "C++ >= 11 Solution: = default": [[679, "c-11-solution-default"]], "= delete": [[680, "delete"]], "Problem: Copy Is Not Always Wanted": [[680, "problem-copy-is-not-always-wanted"]], "C++ < 11 Solution: Make Copy private": [[680, "c-11-solution-make-copy-private"]], "C++ >= 11 Solution: = delete Copy": [[680, "c-11-solution-delete-copy"]], "final": [[681, "final"]], "Architectural Decisions": [[681, "architectural-decisions"]], "Enter final: Architectural Cleanliness By Compiler": [[681, "enter-final-architectural-cleanliness-by-compiler"]], "New Language Features": [[682, "new-language-features"]], "Lambda": [[683, "lambda"], [684, "lambda"]], "Lambda To The Rescue": [[684, "lambda-to-the-rescue"]], "Excursion: Python Closures": [[684, "excursion-python-closures"]], "Same In C++: Capturing": [[684, "same-in-c-capturing"]], "So What Is That? (Answer: A Functor)": [[684, "so-what-is-that-answer-a-functor"]], "Capturing By Reference \u27f6 Careful!": [[684, "capturing-by-reference-longrightarrow-careful"]], "More About Capturing": [[684, "more-about-capturing"]], "Lambda: More Capturing": [[685, "lambda-more-capturing"]], "More Capture Syntax": [[685, "more-capture-syntax"]], "Capturing Explicitly, By Copy": [[685, "capturing-explicitly-by-copy"]], "Capturing Explicitly, By Reference": [[685, "capturing-explicitly-by-reference"]], "Mixed Explicit Capture": [[685, "mixed-explicit-capture"]], "Define Variables In Capture": [[685, "define-variables-in-capture"]], "Capturing All By Reference": [[685, "capturing-all-by-reference"]], "Capturing All By Copy": [[685, "capturing-all-by-copy"]], "Capturing All By Copy, Except Some By Reference": [[685, "capturing-all-by-copy-except-some-by-reference"]], "Capturing this": [[685, "capturing-this"]], "Live Hacking: Handwritten Functors (Too Much Boilerplate)": [[686, "live-hacking-handwritten-functors-too-much-boilerplate"]], "Original Lambda Demo Proggy": [[686, "original-lambda-demo-proggy"]], "Morph Lambda Into Handwritten Functor Class": [[686, "morph-lambda-into-handwritten-functor-class"]], "Live Hacking: Handwritten Functors, And Capturing By Reference (Pitfalls)": [[687, "live-hacking-handwritten-functors-and-capturing-by-reference-pitfalls"]], "Original, Handwritten Functor (By Copy)": [[687, "original-handwritten-functor-by-copy"]], "Possible Pitfall: Capturing A Reference": [[687, "possible-pitfall-capturing-a-reference"]], "Lifetime Of Temporary, Made Explicit": [[687, "lifetime-of-temporary-made-explicit"]], "Lifetime Of Temporary, Made Explicit \u27f6 \ud83d\ude91": [[687, "lifetime-of-temporary-made-explicit-longrightarrow-ambulance"]], "override": [[689, "override"]], "Correct Overriding \u2026": [[689, "correct-overriding"]], "\u2026 Is Very Hard": [[689, "is-very-hard"]], "More Problems Arise": [[689, "more-problems-arise"]], "Solution: override": [[689, "solution-override"]], "Range Based for Loops: Introduction": [[690, "range-based-for-loops-introduction"]], "Enter Range Based for Loops": [[690, "enter-range-based-for-loops"]], "Range Based for Loops, And auto": [[690, "range-based-for-loops-and-auto"]], "Case Study: std::map Iteration": [[690, "case-study-std-map-iteration"]], "Case Study: Range Based for On std::map": [[691, "case-study-range-based-for-on-std-map"]], "Gool Ol\u2019 Days: Iteration In C++ < 11": [[691, "gool-ol-days-iteration-in-c-11"]], "Basic C++11 Iteration: Range Based For, auto, And Initialization": [[691, "basic-c-11-iteration-range-based-for-auto-and-initialization"]], "Variation: Preventing Accidental Copy Using const auto&": [[691, "variation-preventing-accidental-copy-using-const-auto"]], "Pythonicity: Tuple Unpacking, err Structured Binding": [[691, "pythonicity-tuple-unpacking-err-structured-binding"]], "Structured Binding - Preventing Accidental Copy": [[691, "structured-binding-preventing-accidental-copy"]], "Ranges And Views: Good Or Bad?": [[692, "ranges-and-views-good-or-bad"]], "Dangling Iterator Protection": [[692, "dangling-iterator-protection"]], "Performance: views::drop Is Easy": [[692, "performance-views-drop-is-easy"]], "Performance: views::filter Is Not Easy": [[692, "performance-views-filter-is-not-easy"]], "Constraints: How To Read?": [[692, "constraints-how-to-read"]], "And drop()? std::vector Is Easy": [[692, "and-drop-std-vector-is-easy"]], "And drop()? std::list Is Not Easy": [[692, "and-drop-std-list-is-not-easy"]], "One Of Many Bugs, Introduced By .begin() Caching": [[692, "one-of-many-bugs-introduced-by-begin-caching"]], "Exceptions From Rules \u27f6 Dogmatic Don\u2019ts (Sigh, C++)": [[692, "exceptions-from-rules-longrightarrow-dogmatic-don-ts-sigh-c"]], "Ranges: Overview": [[694, "ranges-overview"]], "Ranges?": [[694, "ranges"]], "Containers And Views (Storage Behavior)": [[694, "containers-and-views-storage-behavior"]], "Pipe Syntax": [[694, "pipe-syntax"]], "Views As Parameters: Good Old Template": [[694, "views-as-parameters-good-old-template"]], "Views As Parameters: Abbreviated Function Template": [[694, "views-as-parameters-abbreviated-function-template"]], "Views As Parameters: Concepts": [[694, "views-as-parameters-concepts"]], "Available <ranges> Concepts": [[694, "available-ranges-concepts"]], "Ranges And Views: Links": [[695, "ranges-and-views-links"]], "Structured Binding": [[696, "structured-binding"]], "Variations, Compatible Data Types": [[696, "variations-compatible-data-types"]], "struct: By Copy": [[696, "struct-by-copy"]], "struct: Reference": [[696, "struct-reference"]], "struct: By const Reference": [[696, "struct-by-const-reference"]], "std::tuple: By Copy": [[696, "std-tuple-by-copy"]], "std::tuple: By Reference": [[696, "std-tuple-by-reference"]], "std::tuple: By const Reference": [[696, "std-tuple-by-const-reference"]], "Arrays: By Copy": [[696, "arrays-by-copy"]], "Arrays: By Reference": [[696, "arrays-by-reference"]], "Arrays: By const Reference": [[696, "arrays-by-const-reference"]], "Smart Pointers: Closing Words": [[697, "smart-pointers-closing-words"]], "Shared Pointers: Closing Words": [[697, "shared-pointers-closing-words"]], "Smart Pointers (std::unique_ptr, std::shared_ptr)": [[698, "smart-pointers-std-unique-ptr-std-shared-ptr"]], "Why Smart Pointers?": [[699, "why-smart-pointers"]], "Recap: Constructors and Destructors": [[699, "recap-constructors-and-destructors"]], "(Trying To) Handwrite A Smart Pointer Class in C++ Before C++11": [[700, "trying-to-handwrite-a-smart-pointer-class-in-c-before-c-11"]], "Sensors To Manage": [[700, "sensors-to-manage"]], "Basic Resource Management, Operator Overloading": [[700, "basic-resource-management-operator-overloading"]], "Copy Constructor And Assignment Operator (And Default Ctor)": [[700, "copy-constructor-and-assignment-operator-and-default-ctor"]], "auto_ptr Style": [[700, "auto-ptr-style"]], "Explicit move() Method Maybe?": [[700, "explicit-move-method-maybe"]], "Stop!!!": [[700, "stop"]], "std::shared_ptr": [[701, "std-shared-ptr"]], "Spirit: Not Unique, But Shared (i.e. Reference Counted)": [[701, "spirit-not-unique-but-shared-i-e-reference-counted"]], "std::shared_ptr: Copy": [[701, "std-shared-ptr-copy"]], "std::shared_ptr vs. std::unique_ptr": [[701, "std-shared-ptr-vs-std-unique-ptr"]], "std::shared_ptr: Object Lifetime": [[701, "std-shared-ptr-object-lifetime"]], "std::shared_ptr: Juggling": [[701, "std-shared-ptr-juggling"]], "Demo: Basic Usage": [[701, "demo-basic-usage"]], "Demo: std::make_shared": [[701, "demo-std-make-shared"]], "Demo: Cyclic References": [[701, "demo-cyclic-references"]], "std::unique_ptr": [[702, "std-unique-ptr"]], "The Spirit Of std::unique_ptr": [[702, "the-spirit-of-std-unique-ptr"]], "Basic Usage: Prevent Leaks": [[702, "basic-usage-prevent-leaks"]], "Eliminate Chance Of Leakage \u27f6 Ownership": [[702, "eliminate-chance-of-leakage-longrightarrow-ownership"]], "Saving Keystrokes: std::make_unique<>()": [[702, "saving-keystrokes-std-make-unique"]], "Explicitly Acknowledging Ownership Transfer: std::move()": [[702, "explicitly-acknowledging-ownership-transfer-std-move"]], "Compiler Can Prove: Implicit Ownership Transfer": [[702, "compiler-can-prove-implicit-ownership-transfer"]], "How To Write Code That Can Take Ownership?": [[702, "how-to-write-code-that-can-take-ownership"]], "Manipulating Pointer Content": [[702, "manipulating-pointer-content"]], "std::weak_ptr": [[703, "std-weak-ptr"]], "Spirit: Borrowed Reference That Could Be Invalid": [[703, "spirit-borrowed-reference-that-could-be-invalid"]], "A Real-Life Example": [[703, "a-real-life-example"]], "Perfect Forwarding": [[704, "perfect-forwarding"]], "Universal References? Forwarding References? REALLY?": [[704, "universal-references-forwarding-references-really"]], "Universal Reference? Binds To Lvalues?": [[704, "universal-reference-binds-to-lvalues"]], "Enter Forwarding": [[704, "enter-forwarding"]], "Exercise: Dual insert() Method In Exercise: Bag Of Items, By Shared Reference": [[704, "exercise-dual-insert-method-in-trainings-material-soup-cxx11-exercises-bag-shared"]], "std::bind": [[705, "std-bind"]], "Why? What\u2019s The Problem?": [[705, "why-what-s-the-problem"]], "Sample Program: All Done Manually": [[705, "sample-program-all-done-manually"]], "Sideway: std::transform": [[705, "sideway-std-transform"]], "Sample Program: Using std::transform": [[705, "sample-program-using-std-transform"]], "std::bind: Null Adaptation, Pointlessly": [[705, "std-bind-null-adaptation-pointlessly"]], "std::bind: Adapting One Parameter To No Parameter": [[705, "std-bind-adapting-one-parameter-to-no-parameter"]], "std::bind: Hardcoding Parameters": [[705, "std-bind-hardcoding-parameters"]], "std::bind: Swapping Parameters \u27f6 std::placeholders": [[705, "std-bind-swapping-parameters-longrightarrow-std-placeholders"]], "std::bind: Hardcoding Only First Parameter \u27f6 std::placeholders": [[705, "std-bind-hardcoding-only-first-parameter-longrightarrow-std-placeholders"]], "std::bind: Functor (Is-A Callable)": [[705, "std-bind-functor-is-a-callable"]], "std::bind: Lambda (Is-A Callable)": [[705, "std-bind-lambda-is-a-callable"]], "Sample Program: Using std::transform With std::bind": [[705, "sample-program-using-std-transform-with-std-bind"]], "Summary": [[705, "summary"], [773, "summary"], [773, "id1"], [1092, "summary"], [1094, "summary"]], "std::function": [[706, "std-function"]], "Classic Polymorphism": [[706, "classic-polymorphism"]], "Classic Polymorphism: Upsides": [[706, "classic-polymorphism-upsides"]], "Classic Polymorphism: Technical Downsides": [[706, "classic-polymorphism-technical-downsides"]], "Classic Polymorphism: More Downsides": [[706, "classic-polymorphism-more-downsides"]], "std::function to the Rescue (1)": [[706, "std-function-to-the-rescue-1"]], "std::function to the Rescue (2)": [[706, "std-function-to-the-rescue-2"]], "std::function: Last Words": [[706, "std-function-last-words"]], "Functions, Functions": [[707, "functions-functions"]], "Threads Introduction": [[708, "threads-introduction"]], "Operating System Primitives": [[708, "operating-system-primitives"]], "There Be Dragons": [[708, "there-be-dragons"]], "Threads in C++": [[709, "threads-in-c"]], "Creating Threads is Far Too Easy": [[709, "creating-threads-is-far-too-easy"]], "Joinable vs. Detached": [[709, "joinable-vs-detached"]], "Cornercases in Thread Lifetime": [[709, "cornercases-in-thread-lifetime"]], "Race Conditions": [[710, "race-conditions"], [771, "race-conditions"]], "std::atomic": [[711, "std-atomic"]], "Atomic Instructions (1)": [[711, "atomic-instructions-1"]], "Atomic Instructions (2)": [[711, "atomic-instructions-2"]], "std::mutex And Friends": [[712, "std-mutex-and-friends"]], "std::mutex": [[712, "std-mutex"]], "std::recursive_mutex": [[712, "std-recursive-mutex"]], "std::timed_mutex": [[712, "std-timed-mutex"]], "std::recursive_timed_mutex": [[712, "std-recursive-timed-mutex"]], "Scoped Locking": [[713, "scoped-locking"]], "Explicit Unlocking Considered Dangerous": [[713, "explicit-unlocking-considered-dangerous"]], "RAII - Resource Acquisition Is Initialization": [[713, "raii-resource-acquisition-is-initialization"]], "Simplest: std::lock_guard": [[713, "simplest-std-lock-guard"]], "std::condition_variable (Live Hacking Multithreaded Queue)": [[714, "std-condition-variable-live-hacking-multithreaded-queue"]], "Overview: Operations": [[714, "overview-operations"]], "Communication, Polling: Thread-Safe Queue": [[714, "communication-polling-thread-safe-queue"]], "Anti-Polling: Thread-Safe Queue, And POSIX Condition Variables": [[714, "anti-polling-thread-safe-queue-and-posix-condition-variables"]], "Discussion: Signalling And Waiting, Predicates: Separation Of Concerns": [[714, "discussion-signalling-and-waiting-predicates-separation-of-concerns"]], "Thread-Safe Queue, And C++ Condition Variables": [[714, "thread-safe-queue-and-c-condition-variables"]], "std::promise and std::future (And Some std::chrono) (Some Live Hacking)": [[716, "std-promise-and-std-future-and-some-std-chrono-some-live-hacking"]], "Overview: std::promise": [[716, "overview-std-promise"]], "Overview: std::future": [[716, "overview-std-future"]], "Utterly Wrong: Waiting For Something To Become Ready": [[716, "utterly-wrong-waiting-for-something-to-become-ready"]], "Sideways: std::chrono, And Literals": [[716, "sideways-std-chrono-and-literals"]], "Minimal Fix: Use std::mutex": [[716, "minimal-fix-use-std-mutex"]], "Anti-Clumsiness: Scoped Locking": [[716, "anti-clumsiness-scoped-locking"]], "Pro-Readability: Encapsulate": [[716, "pro-readability-encapsulate"]], "Atomics On Structures?": [[716, "atomics-on-structures"]], "Anti-Polling: Semaphore": [[716, "anti-polling-semaphore"]], "Getting To The Point: std::promise And std::future": [[716, "getting-to-the-point-std-promise-and-std-future"]], "And Exceptions?": [[716, "and-exceptions"]], "std::chrono": [[717, "std-chrono"], [717, "id1"]], "Clock Domains": [[717, "clock-domains"]], "Measuring Time (1)": [[717, "measuring-time-1"]], "Measuring Time (2)": [[717, "measuring-time-2"]], "Sleeping, and Literals": [[717, "sleeping-and-literals"]], "New-Style Union: std::variant": [[718, "new-style-union-std-variant"]], "Exercise: Bag Of Items, By Copy": [[720, "exercise-bag-of-items-by-copy"]], "Step 1: Insert, Find": [[720, "step-1-insert-find"]], "Step 2: Remove": [[720, "step-2-remove"]], "Exercise: Bag Of Items, By Shared Reference": [[721, "exercise-bag-of-items-by-shared-reference"]], "Step 1: Transform into std::shared_ptr": [[721, "step-1-transform-into-std-shared-ptr"]], "Step 2: Accidental Move-Insert?": [[721, "step-2-accidental-move-insert"]], "Step 3: Move-Insert, And std::weak_ptr": [[721, "step-3-move-insert-and-std-weak-ptr"]], "Exercise: Bag Of Items, By Unique Reference": [[722, "exercise-bag-of-items-by-unique-reference"]], "std::filesystem": [[724, "std-filesystem"]], "Paths: Composition, Comparison": [[724, "paths-composition-comparison"]], "Absolute and Relative Paths": [[724, "absolute-and-relative-paths"], [857, "absolute-and-relative-paths"]], "Path Component Access": [[724, "path-component-access"]], "Iterating Over Path Components": [[724, "iterating-over-path-components"]], "Current Working Directory": [[724, "current-working-directory"], [836, "current-working-directory"]], "Directory Creation: std::filesystem::create_directory()": [[724, "directory-creation-std-filesystem-create-directory"]], "Directory Creation: std::filesystem::create_directories()": [[724, "directory-creation-std-filesystem-create-directories"]], "Directory Entry Classification: std::filesystem::is_xxx()": [[724, "directory-entry-classification-std-filesystem-is-xxx"]], "Directory Entries: Basics": [[724, "directory-entries-basics"]], "Directory Entries: std::filesystem::directory_entry": [[724, "directory-entries-std-filesystem-directory-entry"]], "Iterating Over Directory Entries": [[724, "iterating-over-directory-entries"]], "Recursive Directory Iteration": [[724, "recursive-directory-iteration"]], "C++ 11": [[725, "c-11"]], "Generated Topic Graph": [[726, "generated-topic-graph"]], "Modern Character Devices (Screenplay)": [[728, "modern-character-devices-screenplay"]], "Modern Character Devices (Slideshow)": [[729, "modern-character-devices-slideshow"]], "Source": [[729, null], [732, null], [734, null], [737, null], [739, null], [742, null], [751, null], [753, null], [763, null], [765, null], [776, null], [781, null]], "Character Devices: Problems": [[729, "character-devices-problems"]], "Dynamic Device Numbers": [[729, "dynamic-device-numbers"]], "Device Classes": [[729, "device-classes"]], "Devices": [[729, "devices"]], "Modern Character Devices": [[730, "modern-character-devices"]], "File Operations on Character Devices (Screenplay)": [[731, "file-operations-on-character-devices-screenplay"]], "Hooks Necessary": [[731, "hooks-necessary"]], "Implement open(), read(), write()": [[731, "implement-open-read-write"]], "ioctl()": [[731, "ioctl"]], "File Operations on Character Devices (Slideshow)": [[732, "file-operations-on-character-devices-slideshow"]], "File Operations: Interface Definition (\u201cvtable\u201d) (1)": [[732, "file-operations-interface-definition-vtable-1"]], "Available Methods": [[732, "available-methods"]], "open(): Userspace": [[732, "open-userspace"]], "open(): Kernelspace": [[732, "open-kernelspace"]], "ioctl(): Userspace": [[732, "ioctl-userspace"]], "ioctl(): Kernelspace": [[732, "ioctl-kernelspace"]], "ioctl(): Requests": [[732, "ioctl-requests"]], "_IO*() Macros": [[732, "io-macros"]], "_IO*() Macros: Usage": [[732, "io-macros-usage"]], "File Operations on Character Devices": [[733, "file-operations-on-character-devices"]], "Coding: First Functionality (Slideshow)": [[734, "coding-first-functionality-slideshow"]], "Implement Event List": [[734, "implement-event-list"]], "Implement ioctl Request to Add an Event": [[734, "implement-ioctl-request-to-add-an-event"]], "Implement a Userspace Test Program": [[734, "implement-a-userspace-test-program"]], "Coding: First Functionality": [[735, "coding-first-functionality"]], "Character Device Basics (Livehacking Screenplay)": [[736, "character-device-basics-livehacking-screenplay"]], "Major and Minor Numbers": [[736, "major-and-minor-numbers"]], "Character Device": [[736, "character-device"]], "Character Device Basics (Slideshow)": [[737, "character-device-basics-slideshow"]], "Major and Minor Numbers: User\u2019s View": [[737, "major-and-minor-numbers-user-s-view"]], "Major and Minor Numbers: Kernel Space": [[737, "major-and-minor-numbers-kernel-space"]], "History: Hardcoded Device Numbers (1)": [[737, "history-hardcoded-device-numbers-1"]], "History: Hardcoded Device Numbers (2)": [[737, "history-hardcoded-device-numbers-2"]], "Character Device (1)": [[737, "character-device-1"]], "Character Device (2)": [[737, "character-device-2"]], "And User Space?": [[737, "and-user-space"]], "Character Device Basics": [[738, "character-device-basics"]], "Coding: Multiple Devices (Slideshow)": [[739, "coding-multiple-devices-slideshow"]], "Instantiate Multiple Devices": [[739, "instantiate-multiple-devices"]], "Coding: Multiple Devices": [[740, "coding-multiple-devices"]], "Coding: Refactoring (Screenplay)": [[741, "coding-refactoring-screenplay"]], "Build Module From Multiple Files": [[741, "build-module-from-multiple-files"]], "Per-Device Structure": [[741, "per-device-structure"]], "Want My Hair Pretty": [[741, "want-my-hair-pretty"]], "Makefile: -Wswitch-enum": [[741, "makefile-wswitch-enum"]], "Coding: Refactoring (Slideshow)": [[742, "coding-refactoring-slideshow"]], "What\u2019s Bad?": [[742, "what-s-bad"]], "Coding: Refactoring": [[743, "coding-refactoring"]], "DMA (Slideshow)": [[744, "dma-slideshow"]], "Address Types": [[744, "address-types"]], "Physical Memory Allocation": [[744, "physical-memory-allocation"]], "DMA Mappings: Overview": [[744, "dma-mappings-overview"]], "Consistent DMA Mappings": [[744, "consistent-dma-mappings"]], "Streaming Mappings: Direction": [[744, "streaming-mappings-direction"]], "Streaming Mappings: To Virtual Address": [[744, "streaming-mappings-to-virtual-address"]], "Streaming Mappings: To Page": [[744, "streaming-mappings-to-page"]], "Streaming Mappings: Scatterlists (1)": [[744, "streaming-mappings-scatterlists-1"]], "Streaming Mappings: Scatterlists (2)": [[744, "streaming-mappings-scatterlists-2"]], "Streaming Mappings: Syncing": [[744, "streaming-mappings-syncing"]], "DMA": [[745, "dma"]], "Building a Fedora Kernel (Screenplay)": [[746, "building-a-fedora-kernel-screenplay"]], "Why Build the Entire Kernel When I Only Want to Build a Module": [[746, "why-build-the-entire-kernel-when-i-only-want-to-build-a-module"]], "Building from \u201cExploded Git Tree\u201d": [[746, "building-from-exploded-git-tree"]], "Building from the RPM Source": [[746, "building-from-the-rpm-source"]], "Fedora: Building the Kernel": [[747, "fedora-building-the-kernel"]], "Fedora: Building External Kernel Modules (Screenplay)": [[748, "fedora-building-external-kernel-modules-screenplay"]], "Prerequisite: Build Entire Kernel": [[748, "prerequisite-build-entire-kernel"]], "Build Modules": [[748, "build-modules"]], "Install Modules": [[748, "install-modules"]], "Fedora: Building External Kernel Modules": [[749, "fedora-building-external-kernel-modules"]], "Linux Kernel Driver Development": [[750, "linux-kernel-driver-development"], [1130, "linux-kernel-driver-development"]], "Topics and Dependencies": [[750, "topics-and-dependencies"]], "Module Loading, Hello World (Slideshow)": [[751, "module-loading-hello-world-slideshow"]], "Kernel Driver Anatomy": [[751, "kernel-driver-anatomy"]], "Built-In vs. Loadable Module": [[751, "built-in-vs-loadable-module"]], "Minimum Module Source": [[751, "minimum-module-source"]], "Gotchas: init() and exit()": [[751, "gotchas-init-and-exit"]], "Module Build": [[751, "module-build"]], "Minimum Makefile, Building": [[751, "minimum-makefile-building"]], "Modules: Load/Unload Commands": [[751, "modules-load-unload-commands"]], "Modules: Dependency (and other) Databases": [[751, "modules-dependency-and-other-databases"]], "Module Loading, Hello World": [[752, "module-loading-hello-world"]], "Coding: Raspi GPIO Interrupts (Slideshow)": [[753, "coding-raspi-gpio-interrupts-slideshow"]], "Move to Raspberry Pi, Cross Compiling": [[753, "move-to-raspberry-pi-cross-compiling"]], "Cross Compilation": [[753, "cross-compilation"]], "Cross Compilation Sucks": [[753, "cross-compilation-sucks"]], "Short (Legacy) GPIO API Introduction": [[753, "short-legacy-gpio-api-introduction"]], "Implement New Event Type: Interrupt": [[753, "implement-new-event-type-interrupt"]], "New ioctl: MY_ACTIVATE_GPIO": [[753, "new-ioctl-my-activate-gpio"]], "Interlude: _IO*() Macros": [[753, "interlude-io-macros"]], "Request GPIO": [[753, "request-gpio"]], "Request Interrupt": [[753, "request-interrupt"]], "Coding: Raspi GPIO Interrupts": [[754, "coding-raspi-gpio-interrupts"]], "Interrupts (Slideshow)": [[755, "interrupts-slideshow"]], "Interrupt Facts": [[755, "interrupt-facts"]], "Interrupt Service Routine": [[755, "interrupt-service-routine"]], "Requesting (and Releasing) Interrupts (1)": [[755, "requesting-and-releasing-interrupts-1"]], "IO Memory (Slideshow)": [[757, "io-memory-slideshow"]], "I/O Memory": [[757, "i-o-memory"]], "I/O Memory: Reservation": [[757, "i-o-memory-reservation"]], "Making I/O Memory Accessible": [[757, "making-i-o-memory-accessible"]], "Accessing I/O Memory": [[757, "accessing-i-o-memory"]], "IO Memory": [[758, "io-memory"]], "Dynamic Memory: kmalloc() (Slideshow)": [[759, "dynamic-memory-kmalloc-slideshow"]], "Dynamic Memory: kmalloc()": [[759, "dynamic-memory-kmalloc"], [760, "dynamic-memory-kmalloc"]], "Dynamic Memory: Flags": [[759, "dynamic-memory-flags"]], "Doubly Linked Lists (Slideshow)": [[761, "doubly-linked-lists-slideshow"]], "Big Picture": [[761, "big-picture"]], "List Head": [[761, "list-head"]], "Insert a Node": [[761, "insert-a-node"]], "Iteration, and Getting a Node\u2019s Container": [[761, "iteration-and-getting-a-node-s-container"]], "Emptying a List": [[761, "emptying-a-list"]], "Doubly Linked Lists": [[762, "doubly-linked-lists"]], "Coding: Fix Race Condition (Mutex) (Slideshow)": [[763, "coding-fix-race-condition-mutex-slideshow"]], "What Do We Have?": [[763, "what-do-we-have"]], "Consequences of Not Protecting": [[763, "consequences-of-not-protecting"]], "Protect Event List": [[763, "protect-event-list"]], "Protect Device List": [[763, "protect-device-list"]], "Coding: Fix Race Condition (Mutex)": [[764, "coding-fix-race-condition-mutex"]], "Mutex (and RT Mutex) (Slideshow)": [[765, "mutex-and-rt-mutex-slideshow"]], "Locking in the Kernel": [[765, "locking-in-the-kernel"]], "Mutual Exclusion: Mutex": [[765, "mutual-exclusion-mutex"]], "Mutex: Locking (1)": [[765, "mutex-locking-1"]], "Mutex: Locking (2)": [[765, "mutex-locking-2"]], "Mutex: Releasing": [[765, "mutex-releasing"]], "Realtime Mutex": [[765, "realtime-mutex"]], "Mutex (and RT Mutex)": [[766, "mutex-and-rt-mutex"]], "Network Devices (Slideshow)": [[767, "network-devices-slideshow"]], "Module Initialization: Device Allocation": [[767, "module-initialization-device-allocation"]], "Module Initialization: Device Registration": [[767, "module-initialization-device-registration"]], "Device Methods": [[767, "device-methods"]], "Kernel Networking Layer Utilities": [[767, "kernel-networking-layer-utilities"]], "Network Devices": [[768, "network-devices"]], "PCI (Slideshow)": [[769, "pci-slideshow"]], "First and Foremost": [[769, "first-and-foremost"]], "PCI Driver Methods": [[769, "pci-driver-methods"]], "PCI Driver Structure, and the init() Method": [[769, "pci-driver-structure-and-the-init-method"]], "PCI Device Structure, and the probe() Method": [[769, "pci-device-structure-and-the-probe-method"]], "The probe() Method: Boilerplate": [[769, "the-probe-method-boilerplate"]], "The probe() Method: Interrupt": [[769, "the-probe-method-interrupt"]], "The probe() Method: PCI Resources (BARs)": [[769, "the-probe-method-pci-resources-bars"]], "DMA Support Routines": [[769, "dma-support-routines"]], "PCI": [[770, "pci"]], "Process vs.Atomic Context (Slideshow)": [[771, "process-vs-atomic-context-slideshow"]], "Process Context": [[771, "process-context"]], "Atomic Context": [[771, "atomic-context"]], "Atomic vs. Process Context": [[771, "atomic-vs-process-context"]], "\u201cSleep While Atomic\u201d Debugging": [[771, "sleep-while-atomic-debugging"]], "Process vs.Atomic Context": [[772, "process-vs-atomic-context"]], "Rasperry Pi: Kernel Build": [[773, "rasperry-pi-kernel-build"]], "Cross Toolchain on Host": [[773, "cross-toolchain-on-host"]], "Architecture Name - What\u2019s That?": [[773, "architecture-name-what-s-that"]], "Building a Toolchain with Gentoo\u2019s crossdev": [[773, "building-a-toolchain-with-gentoo-s-crossdev"]], "Other Toolchains": [[773, "other-toolchains"]], "Kernel Source": [[773, "kernel-source"]], "Kernel Compilation": [[773, "kernel-compilation"]], "Parameters for the Build": [[773, "parameters-for-the-build"]], "Preparing the Kernel .config File": [[773, "preparing-the-kernel-config-file"]], "Building the Kernel Artifacts": [[773, "building-the-kernel-artifacts"]], "Packaging": [[773, "packaging"], [1026, "packaging"]], "Bootloader Artifacts": [[773, "bootloader-artifacts"]], "Module Tree": [[773, "module-tree"]], "Deployment": [[773, "deployment"]], "Variation": [[773, "variation"]], "Raspberry Pi: Building the Kernel": [[774, "raspberry-pi-building-the-kernel"]], "Todo jjj": [[774, "todo-jjj"]], "Sample Code Maintenance": [[775, "sample-code-maintenance"]], "Coding: Fix Sleep While Atomic (Slideshow)": [[776, "coding-fix-sleep-while-atomic-slideshow"]], "Simple Spinlock Usage: spin_lock()": [[776, "simple-spinlock-usage-spin-lock"]], "Discuss Call Chain, IRQ State": [[776, "discuss-call-chain-irq-state"]], "Enter spin_lock_irqsave(), spin_unlock_irqrestore()": [[776, "enter-spin-lock-irqsave-spin-unlock-irqrestore"]], "Ah, kmalloc()": [[776, "ah-kmalloc"]], "Coding: Fix Sleep While Atomic": [[777, "coding-fix-sleep-while-atomic"]], "Spinlock (vs. Mutex) (Slideshow)": [[778, "spinlock-vs-mutex-slideshow"]], "Mutual Exclusion: Spinlock": [[778, "mutual-exclusion-spinlock"]], "Spinlock Initialization": [[778, "spinlock-initialization"]], "Simple Lock/Unlock": [[778, "simple-lock-unlock"]], "Simple is not Bulletproof: Interrupt State": [[778, "simple-is-not-bulletproof-interrupt-state"]], "Mutual Exclusion: Conclusion": [[778, "mutual-exclusion-conclusion"]], "Spinlock (vs. Mutex)": [[779, "spinlock-vs-mutex"]], "dup(), fork(), and Reference Counting (Stub)": [[780, "dup-fork-and-reference-counting-stub"]], "Coding: Timed Event (Slideshow)": [[781, "coding-timed-event-slideshow"]], "Per-Event Timestamp": [[781, "per-event-timestamp"]], "Discussion: Deferred Events": [[781, "discussion-deferred-events"]], "Add Timer": [[781, "add-timer"]], "Gotcha: Cleanup Running Timer": [[781, "gotcha-cleanup-running-timer"]], "More Gotchas": [[781, "more-gotchas"]], "Coding: Timed Event": [[782, "coding-timed-event"]], "Timer Management (Slideshow)": [[783, "timer-management-slideshow"]], "Original Timer API": [[783, "original-timer-api"]], "jiffies": [[783, "jiffies"]], "\u201cTimer Wheel\u201d Methods": [[783, "timer-wheel-methods"]], "Better Documentation": [[783, "better-documentation"]], "Timer Management": [[784, "timer-management"]], "To Do List": [[785, "to-do-list"]], "Accessing Userspace Memory (Screenplay)": [[786, "accessing-userspace-memory-screenplay"]], "New ioctl: GET_ONE_EVENT": [[786, "new-ioctl-get-one-event"]], "Getting One Event": [[786, "getting-one-event"]], "copy_to_user()": [[786, "copy-to-user"]], "Userspace Test Program": [[786, "userspace-test-program"]], "Accessing Userspace Memory (Slideshow)": [[787, "accessing-userspace-memory-slideshow"]], "Address Spaces": [[787, "address-spaces"]], "Copying To and From Userspace": [[787, "copying-to-and-from-userspace"]], "Accessing Userspace Memory": [[788, "accessing-userspace-memory"]], "Waiting for Something (Screenplay)": [[789, "waiting-for-something-screenplay"]], "read() Not Implemented": [[789, "read-not-implemented"]], "Implementing read() Naively": [[789, "implementing-read-naively"]], "Discussion: What If Nothing\u2019s There?": [[789, "discussion-what-if-nothing-s-there"]], "Implementing O_NONBLOCK": [[789, "implementing-o-nonblock"]], "Waiting for Something (Slideshow)": [[790, "waiting-for-something-slideshow"]], "Waiting for Something": [[790, "waiting-for-something"], [791, "waiting-for-something"]], "Wait Queues: Initializing": [[790, "wait-queues-initializing"]], "Wait Queue: Waiting": [[790, "wait-queue-waiting"]], "Wait Queue: Waking": [[790, "wait-queue-waking"]], "Workqueue (Screenplay)": [[792, "workqueue-screenplay"]], "Add Workqueue": [[792, "add-workqueue"]], "Submit/Defer Work From Atomic Context": [[792, "submit-defer-work-from-atomic-context"]], "Cleanup (Why We Did This, After All)": [[792, "cleanup-why-we-did-this-after-all"]], "Finish": [[792, "finish"]], "Workqueue (Slideshow)": [[793, "workqueue-slideshow"]], "Workqueue: Motivation": [[793, "workqueue-motivation"]], "Creating/Destroying a Workqueue": [[793, "creating-destroying-a-workqueue"]], "What is Work?": [[793, "what-is-work"]], "Submitting Work": [[793, "submitting-work"]], "Workqueue": [[794, "workqueue"]], "Exercises: Archiving And Compression": [[795, "exercises-archiving-and-compression"]], "gzip": [[797, "gzip"]], "Compression Tools: Comparison": [[798, "compression-tools-comparison"]], "tar": [[799, "tar"]], "Creating And Viewing Archives": [[799, "creating-and-viewing-archives"]], "(De)Compression": [[799, "de-compression"]], "Etiquette": [[799, "etiquette"]], "Option Summary": [[799, "option-summary"]], "Being Creative With The Pipe": [[799, "being-creative-with-the-pipe"]], "Exam (ECE/SS2022/G1): Do A Lot With Files And Directories": [[800, "exam-ece-ss2022-g1-do-a-lot-with-files-and-directories"]], "Precondition: Logged-In To Remote/Exam Computer": [[800, "precondition-logged-in-to-remote-exam-computer"], [801, "precondition-logged-in-to-remote-exam-computer"]], "Create Exam Skeleton (5 Points)": [[800, "create-exam-skeleton-5-points"], [801, "create-exam-skeleton-5-points"]], "Create Credentials Files (10 Points)": [[800, "create-credentials-files-10-points"]], "Public Place (10 Points)": [[800, "public-place-10-points"], [801, "public-place-10-points"]], "Private Place (10 Points)": [[800, "private-place-10-points"], [801, "private-place-10-points"]], "Shared File in Public Place (10 Points)": [[800, "shared-file-in-public-place-10-points"], [801, "shared-file-in-public-place-10-points"]], "Make A Backup Of ~/exam-01 (15 Points)": [[800, "make-a-backup-of-exam-01-15-points"], [801, "make-a-backup-of-exam-01-15-points"]], "Exam (ECE/SS2022/G2): Do A Lot With Files And Directories": [[801, "exam-ece-ss2022-g2-do-a-lot-with-files-and-directories"]], "Create Business Cards (10 Points)": [[801, "create-business-cards-10-points"]], "Exercises/Exams: Linux Basics": [[802, "exercises-exams-linux-basics"]], "Linux Basics": [[803, "linux-basics"]], "Everything Is A File (Live Demo)": [[804, "everything-is-a-file-live-demo"]], "Simple is beautiful": [[804, "simple-is-beautiful"]], "Ok: a File is a File": [[804, "ok-a-file-is-a-file"]], "Is a Serial Interface (UART) a File?": [[804, "is-a-serial-interface-uart-a-file"]], "Pseudo Terminals": [[804, "pseudo-terminals"]], "Disks and Partitions": [[804, "disks-and-partitions"]], "/proc and /sys": [[804, "proc-and-sys"]], "Pseudo Devices": [[804, "pseudo-devices"]], "Environment (Variables)": [[805, "environment-variables"]], "Shell: Environment Variables, And Process Creation": [[805, "shell-environment-variables-and-process-creation"]], "Popular Environment Variables: HOME, SHELL, USER": [[805, "popular-environment-variables-home-shell-user"]], "Popular Environment Variables: PATH": [[805, "popular-environment-variables-path"]], "FH/Moodle Quiz: Linux Basics": [[806, "fh-moodle-quiz-linux-basics"]], "User Space, Kernel Space": [[806, "user-space-kernel-space"]], "Processes, Scheduling, and Virtual Memory": [[806, "processes-scheduling-and-virtual-memory"]], "Login? What Is That?": [[808, "login-what-is-that"]], "Authentication: Prompting The User For Login Data": [[808, "authentication-prompting-the-user-for-login-data"]], "Authentication: Verification Of Login Data": [[808, "authentication-verification-of-login-data"]], "And After Successful Authentication?": [[808, "and-after-successful-authentication"]], "Impersonation": [[808, "impersonation"]], "Logged In, Finally": [[808, "logged-in-finally"]], "User Space, Kernel Space?": [[809, "user-space-kernel-space"]], "User Space: Abstractions": [[809, "user-space-abstractions"]], "Kernel: Where The Heavy Stuff Is": [[809, "kernel-where-the-heavy-stuff-is"]], "Booting a Computer": [[809, "booting-a-computer"]], "Processes, Scheduling, Address Spaces": [[810, "processes-scheduling-address-spaces"]], "Problem: Owning the CPU?": [[810, "problem-owning-the-cpu"]], "Solution: Scheduling (Time Slices)": [[810, "solution-scheduling-time-slices"]], "Problem: Owning all Memory?": [[810, "problem-owning-all-memory"]], "Solution: Virtual Memory": [[810, "solution-virtual-memory"]], "Process Attributes: User ID (UID)": [[810, "process-attributes-user-id-uid"]], "Process Attributes: Groups": [[810, "process-attributes-groups"]], "Processes: More Attributes": [[810, "processes-more-attributes"]], "Process Hierarchy (Parent, Child Process)": [[811, "process-hierarchy-parent-child-process"]], "More Process Rules": [[811, "more-process-rules"]], "Typical Process Tree": [[811, "typical-process-tree"]], "Services, init": [[811, "services-init"]], "Windows Subsystem for Linux (WSL)": [[812, "windows-subsystem-for-linux-wsl"]], "Disclaimer!": [[812, null]], "More Links": [[812, "more-links"]], "My $0.02": [[812, "my-0-02"]], "WSL, Finally": [[812, "wsl-finally"]], "Exercises: IO-Redirection, Pipes": [[813, "exercises-io-redirection-pipes"]], "I/O Redirection": [[815, "i-o-redirection"]], "Standard I/O Streams": [[815, "standard-i-o-streams"]], "I/O Redirection Operators": [[815, "i-o-redirection-operators"]], "Example: Standard Output Redirection": [[815, "example-standard-output-redirection"]], "Example: Standard Input Redirection": [[815, "example-standard-input-redirection"]], "Example: Standard Error Redirection": [[815, "example-standard-error-redirection"]], "Example: Everything Redirection": [[815, "example-everything-redirection"]], "I/O Redirection: Swap stdout And stderr": [[816, "i-o-redirection-swap-stdout-and-stderr"]], "Basic Pipe Usage": [[816, "basic-pipe-usage"]], "Basic Pipe Usage: What The Shell Does": [[816, "basic-pipe-usage-what-the-shell-does"]], "And How Do I Count Lines On stderr?": [[816, "and-how-do-i-count-lines-on-stderr"]], "More Tricks": [[816, "more-tricks"]], "Pipes": [[817, "pipes"]], "Why Pipes?": [[817, "why-pipes"]], "Pipe Facts": [[817, "pipe-facts"]], "Pipe Examples": [[817, "pipe-examples"]], "More Pipe Examples": [[817, "more-pipe-examples"]], "Named Pipes": [[817, "named-pipes"]], "Permissions: Mode, User and Group Ownership": [[818, "permissions-mode-user-and-group-ownership"]], "Owner and Permissions": [[818, "owner-and-permissions"]], "A Simple Example": [[818, "a-simple-example"]], "Teacher\u2019s note: create that constellation (as root)": [[818, null]], "Permission Check: User": [[818, "permission-check-user"]], "Permission Check: Group": [[818, "permission-check-group"]], "Permission Check: Others": [[818, "permission-check-others"]], "Programs: Execute Permissions": [[818, "programs-execute-permissions"]], "Directory Permissions": [[818, "directory-permissions"]], "Permission Bits, octal": [[818, "permission-bits-octal"]], "Shell Commands: Tuning Permissions": [[818, "shell-commands-tuning-permissions"]], "Shell Commands: Changing User/Group Ownership": [[818, "shell-commands-changing-user-group-ownership"]], "Exercise: Determine Your User Credentials": [[819, "exercise-determine-your-user-credentials"]], "FH/Moodle Quiz: Permissions": [[820, "fh-moodle-quiz-permissions"], [821, "fh-moodle-quiz-permissions"]], "Exercises: File System Permissions": [[822, "exercises-file-system-permissions"]], "Exercise: Create Private Directory": [[823, "exercise-create-private-directory"]], "Question: Private Directory": [[824, "question-private-directory"]], "Exercise: Create Public Directory": [[825, "exercise-create-public-directory"]], "Question: Public Directory": [[826, "question-public-directory"]], "Exercise: Create Group-Shared File": [[827, "exercise-create-group-shared-file"]], "SetUID Programs: passwd, sudo, \u2026": [[829, "setuid-programs-passwd-sudo"]], "Problem: Change My Password": [[829, "problem-change-my-password"]], "Solution: Set-UID Bit": [[829, "solution-set-uid-bit"]], "Set-UID: How Does It Work?": [[829, "set-uid-how-does-it-work"]], "Command: chmod": [[829, "command-chmod"]], "Set-UID Is Not A Toy!": [[829, "set-uid-is-not-a-toy"]], "SetUID: Live Demo": [[830, "setuid-live-demo"]], "Real and Effective User ID": [[830, "real-and-effective-user-id"]], "Sample Program": [[830, "sample-program"]], "Set-UID jfasch?": [[830, "set-uid-jfasch"]], "Set-UID root? Danger!": [[830, "set-uid-root-danger"]], "Ugly Hack: Sticky Bit": [[831, "ugly-hack-sticky-bit"]], "Sticky Bit": [[831, "sticky-bit"]], "Default Permissions: umask": [[832, "default-permissions-umask"]], "Default Permissions - umask": [[832, "id1"]], "umask: How Does it Work?": [[832, "umask-how-does-it-work"]], "Shape (1)": [[833, "shape-1"]], "Shape (2)": [[833, "shape-2"]], "Options": [[833, "options"], [862, "options"]], "Help and Manual": [[833, "help-and-manual"]], "Man Pages: Navigation": [[833, "man-pages-navigation"]], "Commandline Editing: Moving, Deleting": [[833, "commandline-editing-moving-deleting"]], "Commandline Editing: Entire Words": [[833, "commandline-editing-entire-words"]], "Commandline Editing: Entire Lines": [[833, "commandline-editing-entire-lines"]], "The Tabulator Key: Command Completion": [[833, "the-tabulator-key-command-completion"]], "The Tabulator Key: Filename Completion": [[833, "the-tabulator-key-filename-completion"]], "Shell Configuration File: ~/.bashrc": [[834, "shell-configuration-file-bashrc"]], "What\u2019s Volatile?": [[834, "what-s-volatile"]], "Copying: cp": [[835, "copying-cp"]], "Option Overview": [[835, "option-overview"]], "Creating backup copy of, say, .bashrc in the home directory": [[835, "creating-backup-copy-of-say-bashrc-in-the-home-directory"]], "Similar: copy a file into a different directory, under a different name": [[835, "similar-copy-a-file-into-a-different-directory-under-a-different-name"]], "Similar: copy a file into a different directory, keeping its name": [[835, "similar-copy-a-file-into-a-different-directory-keeping-its-name"]], "Copy multiple files into a directory": [[835, "copy-multiple-files-into-a-directory"]], "Copying a directory, together with its contents \u27f6 recursive copy": [[835, "copying-a-directory-together-with-its-contents-longrightarrow-recursive-copy"]], "Current Working Directory: pwd": [[836, "current-working-directory-pwd"]], "Changing The Current Working Directory: cd": [[836, "changing-the-current-working-directory-cd"]], "Exercise: Copy Directory Tree": [[837, "exercise-copy-directory-tree"]], "Exercise: Copy Files": [[838, "exercise-copy-files"]], "Exercise: Create Files (I/O Redirection)": [[839, "exercise-create-files-i-o-redirection"]], "Exercise: Move Files": [[840, "exercise-move-files"]], "Exercises: Create/Copy/Move/Remove": [[841, "exercises-create-copy-move-remove"]], "Exercise: mkdir": [[842, "exercise-mkdir"]], "Exercise: Funny Stuff": [[843, "exercise-funny-stuff"]], "Exercise: Remove Directory Tree": [[844, "exercise-remove-directory-tree"]], "Exercise: Verify, Repeat": [[845, "exercise-verify-repeat"]], "FH/Moodle Quiz: Shell": [[846, "fh-moodle-quiz-shell"]], "The Shell - Exercises": [[847, "the-shell-exercises"]], "Exercise: File Types in /dev": [[848, "exercise-file-types-in-dev"]], "Exercise: Size of /etc/passwd": [[849, "exercise-size-of-etc-passwd"]], "Exercises: The ls Command": [[850, "exercises-the-ls-command"]], "Exercise: Permissions of Home Directory": [[851, "exercise-permissions-of-home-directory"]], "Creating And Removing Files and Directories": [[852, "creating-and-removing-files-and-directories"]], "Creating a Directory: mkdir": [[852, "creating-a-directory-mkdir"]], "Creating a File: I/O redirection": [[852, "creating-a-file-i-o-redirection"]], "Creating an Empty File: touch": [[852, "creating-an-empty-file-touch"]], "Removing A File: rm": [[852, "removing-a-file-rm"]], "Removing A Directory: rmdir, rm -r": [[852, "removing-a-directory-rmdir-rm-r"]], "Symbolic Links, Hard Links": [[854, "symbolic-links-hard-links"]], "Directory Listings: The ls Command": [[855, "directory-listings-the-ls-command"]], "Many Options": [[855, "many-options"]], "Hidden Files": [[855, "hidden-files"]], "File Types": [[855, "file-types"]], "Moving and Renaming: mv": [[856, "moving-and-renaming-mv"]], "Renaming A File (or Directory)": [[856, "renaming-a-file-or-directory"]], "Moving a File to Somewhere Else": [[856, "moving-a-file-to-somewhere-else"]], "Moving a Directory to Somewhere Else": [[856, "moving-a-directory-to-somewhere-else"]], "Path Separator": [[857, "path-separator"]], "Relative Paths": [[857, "relative-paths"]], "Absolute Paths": [[857, "absolute-paths"]], "Special Paths": [[857, "special-paths"]], "cat": [[858, "cat"], [858, "id1"]], "cut": [[859, "cut"], [859, "id1"]], "Exercises: Inspecting Text Files": [[860, "exercises-inspecting-text-files"]], "find": [[861, "find"]], "Directories durchsuchen mit find": [[861, "directories-durchsuchen-mit-find"]], "find: Optionen": [[861, "find-optionen"]], "find: Beispiele": [[861, "find-beispiele"]], "find: Verkn\u00fcpfungen": [[861, "find-verknupfungen"]], "find: Verkn\u00fcpfungen: Beispiele": [[861, "find-verknupfungen-beispiele"]], "grep": [[862, "grep"]], "Searching With grep": [[862, "searching-with-grep"]], "More About Regular Expressions": [[862, "more-about-regular-expressions"]], "head And tail": [[864, "head-and-tail"]], "head": [[864, "head"]], "tail": [[864, "tail"]], "head And tail In The Pipe": [[864, "head-and-tail-in-the-pipe"]], "less": [[865, "less"]], "Paging Files Using less": [[865, "paging-files-using-less"]], "Help Screen (Enter With h)": [[865, "help-screen-enter-with-h"]], "stdin, stdout, And The Pipe": [[866, "stdin-stdout-and-the-pipe"]], "stdin, stdout: Examples": [[866, "stdin-stdout-examples"]], "Pipe: Examples": [[866, "pipe-examples"]], "Basics Text Tools": [[866, "basics-text-tools"]], "Drafts": [[867, "drafts"]], "Yocto": [[868, "yocto"]], "Controlling a Brushless Motor With Raspberry Pi": [[870, "controlling-a-brushless-motor-with-raspberry-pi"]], "Topic": [[870, null]], "Electronic Speed Controller (ESC)": [[870, "electronic-speed-controller-esc"]], "Select Running Mode: \u201cFwd/Rev\u201d": [[870, "select-running-mode-fwd-rev"]], "The \u201cCommand Protocol\u201d, and Calibration": [[870, "the-command-protocol-and-calibration"]], "Driving the Motor": [[870, "driving-the-motor"]], "CAN/Linux Basics": [[871, "can-linux-basics"]], "Why This Talk?": [[871, "why-this-talk"]], "Network Programming: Datagram Exchange": [[871, "network-programming-datagram-exchange"]], "And CAN?": [[871, "and-can"]], "One CAN Network Packet \u2026": [[871, "one-can-network-packet"]], "CAN Interfaces": [[872, "can-interfaces"]], "CAN-Interface: Configuration": [[872, "can-interface-configuration"]], "CAN Utils": [[872, "can-utils"]], "CAN Utils: Usage (1)": [[872, "can-utils-usage-1"]], "CAN Utils: Usage (2)": [[872, "can-utils-usage-2"]], "vcan: Virtual CAN-Bus": [[872, "vcan-virtual-can-bus"]], "Programming": [[873, "programming"]], "CAN Programming": [[873, "can-programming"]], "CAN in C - Socket, Interface Index": [[873, "can-in-c-socket-interface-index"]], "CAN in Python - Socket, Interface Index": [[873, "can-in-python-socket-interface-index"]], "CAN in C - Frames (1)": [[873, "can-in-c-frames-1"]], "CAN in C - Frames (2)": [[873, "can-in-c-frames-2"]], "CAN in Python - Frames": [[873, "can-in-python-frames"]], "Hardware, Kernel": [[874, "hardware-kernel"]], "MCP2515: Schematic": [[874, "mcp2515-schematic"]], "MCP2515: Soldering": [[874, "mcp2515-soldering"]], "MCP2515: SPI": [[874, "mcp2515-spi"]], "MCP2515: Raspberry": [[874, "mcp2515-raspberry"]], "CAN Bus With Linux And Python": [[875, "can-bus-with-linux-and-python"]], "Linux Hardware Interfaces": [[876, "linux-hardware-interfaces"]], "Linux and I2C (using LM73 Temperature Sensor as Slave)": [[877, "linux-and-i2c-using-lm73-temperature-sensor-as-slave"]], "Configuring I2C Master": [[877, "configuring-i2c-master"]], "Enable I2C, Load BCM2835 Platform Driver": [[877, "enable-i2c-load-bcm2835-platform-driver"]], "Raspberry Pi GPIO header pinout": [[877, null]], "Enable Userspace I2C": [[877, "enable-userspace-i2c"]], "Slave Device: LM73": [[877, "slave-device-lm73"]], "Datasheet etc.": [[877, null]], "Optional: Address Selection": [[877, "optional-address-selection"]], "Connecting LM73 to Raspberry Pi": [[877, "connecting-lm73-to-raspberry-pi"]], "i2c-tools/i2cdetect: Diagnostics, Detecting Devices": [[877, "i2c-tools-i2cdetect-diagnostics-detecting-devices"]], "Using the Device: Talking I2C from Userspace": [[877, "using-the-device-talking-i2c-from-userspace"]], "Using the Device: hwmon - Hardware Monitoring": [[877, "using-the-device-hwmon-hardware-monitoring"]], "Building the Kernel, Enabling LM73": [[877, "building-the-kernel-enabling-lm73"]], "Loading the Driver": [[877, "loading-the-driver"]], "Hardware Monitoring (hwmon) Devices": [[877, "hardware-monitoring-hwmon-devices"]], "PWM Userspace Interface (using PCA9685)": [[878, "pwm-userspace-interface-using-pca9685"]], "Pulse Width Modulation (PWM)": [[878, "pulse-width-modulation-pwm"]], "Why An External PWM Controller?": [[878, "why-an-external-pwm-controller"]], "Wiring, Setup, and Testing": [[878, "wiring-setup-and-testing"]], "Talk to Chip Using the sysfs Interface": [[878, "talk-to-chip-using-the-sysfs-interface"]], "Linux and OneWire (using DS18B20 Temperature Sensor as Slave)": [[879, "linux-and-onewire-using-ds18b20-temperature-sensor-as-slave"]], "Master Device, Alterative 1: w1-gpio - OneWire Master in Software": [[879, "master-device-alterative-1-w1-gpio-onewire-master-in-software"]], "Wiring: Attach OneWire Device to GPIO Pin": [[879, "wiring-attach-onewire-device-to-gpio-pin"]], "Master Device, Alterative 2: DS2482 - I2C OneWire Master in Hardware": [[879, "master-device-alterative-2-ds2482-i2c-onewire-master-in-hardware"]], "DS2482-800: 8-Channel 1-Wire Master": [[879, null]], "Wiring: Attach DS2482-800 via I2C": [[879, "wiring-attach-ds2482-800-via-i2c"]], "Configure Software": [[879, "configure-software"]], "Enable I2C, and Check": [[879, "enable-i2c-and-check"]], "Verify That Our Device Is There": [[879, "verify-that-our-device-is-there"]], "Announce (\u201cHotplug\u201d) DS2482 to Linux": [[879, "announce-hotplug-ds2482-to-linux"]], "Wiring: Attach OneWire Device to DS2482-800": [[879, "wiring-attach-onewire-device-to-ds2482-800"]], "Over-Engineering? Beauty?": [[879, "over-engineering-beauty"]], "Hardware Bringup": [[879, "hardware-bringup"]], "Device Usage": [[879, "device-usage"]], "Slave Device: DS18B20 Temperature Sensor": [[879, "slave-device-ds18b20-temperature-sensor"]], "Using the Device": [[879, "using-the-device"]], "As a Generic OneWire Device": [[879, "as-a-generic-onewire-device"]], "As a Hardware Monitoring (hwmon) Device": [[879, "as-a-hardware-monitoring-hwmon-device"]], "lm-sensors": [[879, "lm-sensors"]], "OneWire Caveats": [[879, "onewire-caveats"]], "Bus Topology": [[879, "bus-topology"]], "Error Symptoms": [[879, "error-symptoms"]], "SSH: Basics": [[880, "ssh-basics"]], "Login": [[880, "login"]], "Exit Status, stdin, stdout: Scripting": [[880, "exit-status-stdin-stdout-scripting"]], "Exercise: Copy a File To Remote Machine, And Verify": [[881, "exercise-copy-a-file-to-remote-machine-and-verify"]], "Exercise: Copy a Tree To Remote Machine (And Adjust Permissions)": [[882, "exercise-copy-a-tree-to-remote-machine-and-adjust-permissions"]], "Exercises: SSH": [[883, "exercises-ssh"]], "Exercise: Create SSH Key Pair": [[884, "exercise-create-ssh-key-pair"]], "SSH: Public Key Authentication": [[886, "ssh-public-key-authentication"]], "Local Setup, Key Generation": [[886, "local-setup-key-generation"]], "Key Pair?": [[886, "key-pair"]], "Remote Setup (Wearing The Remote Admin\u2019s Hat)": [[886, "remote-setup-wearing-the-remote-admin-s-hat"]], "SSH: Links": [[887, "ssh-links"]], "SSH: Port Forwarding": [[888, "ssh-port-forwarding"]], "Port Forwarding - The Problem (1)": [[888, "port-forwarding-the-problem-1"]], "Port Forwarding - The Problem (2)": [[888, "port-forwarding-the-problem-2"]], "Port Forwarding - The Solution (1)": [[888, "port-forwarding-the-solution-1"]], "Port Forwarding - The Solution (2)": [[888, "port-forwarding-the-solution-2"]], "Port Forwarding - The Commandline": [[888, "port-forwarding-the-commandline"]], "SSH: Secure Copy (scp)": [[889, "ssh-secure-copy-scp"]], "What Is That?": [[889, "what-is-that"]], "Copy Single File From Local To Remote": [[889, "copy-single-file-from-local-to-remote"]], "Copy Single File from Remote To Local": [[889, "copy-single-file-from-remote-to-local"]], "Copy An Entire Directory Tree (-r)": [[889, "copy-an-entire-directory-tree-r"]], "Copy Multiple File From Here To There": [[889, "copy-multiple-file-from-here-to-there"]], "Copy From One Remote To A Different Remote": [[889, "copy-from-one-remote-to-a-different-remote"]], "More Options": [[889, "more-options"]], "SSH File System (sshfs)": [[890, "ssh-file-system-sshfs"]], "What Is It?": [[890, "what-is-it"]], "Why Is It?": [[890, "why-is-it"]], "Example Situation: The Raspi": [[890, "example-situation-the-raspi"]], "Mounting Remote  $HOME/logdata": [[890, "mounting-remote-home-logdata"]], "Unmounting: fusermount -u, or Simply umount": [[890, "unmounting-fusermount-u-or-simply-umount"]], "User ID Mismatch: Problem": [[890, "user-id-mismatch-problem"]], "User ID Mismatch: Solution (User Mapping)": [[890, "user-id-mismatch-solution-user-mapping"]], "The errno Variable": [[891, "the-errno-variable"]], "errno Is A Global Variable": [[891, "errno-is-a-global-variable"]], "Helper Functions": [[891, "helper-functions"]], "Linux Systems Programming: Basics": [[892, "linux-systems-programming-basics"]], "System Calls vs. Library Functions": [[893, "system-calls-vs-library-functions"]], "System Calls": [[893, "system-calls"]], "System Calls And The C-Library": [[893, "system-calls-and-the-c-library"]], "Library Function Or System Call?": [[893, "library-function-or-system-call"]], "Manual Pages": [[893, "manual-pages"]], "Blocking I/O: What is That? (\u201cEverything is a file\u201d)": [[894, "blocking-i-o-what-is-that-everything-is-a-file"]], "Examples/Live Demos": [[894, null]], "Solution: This Is What An Operating System Is There For": [[894, "solution-this-is-what-an-operating-system-is-there-for"]], "Blocking I/O (On A File): What is That?": [[895, "blocking-i-o-on-a-file-what-is-that"]], "See Also": [[895, null], [896, null], [897, null], [1078, "see-also"]], "Abstractions": [[895, "abstractions"], [896, "abstractions"], [897, "abstractions"]], "Simplicity": [[895, "simplicity"], [896, "simplicity"], [897, "simplicity"]], "Build, Run, Look": [[895, "build-run-look"], [896, "build-run-look"], [897, "build-run-look"]], "Watch: Run Under strace Supervision": [[895, "watch-run-under-strace-supervision"]], "Blocking I/O: On A Network Socket": [[896, "blocking-i-o-on-a-network-socket"]], "Opening a Network Connection": [[896, "opening-a-network-connection"]], "Blocking I/O: On A Timer? WTF?": [[897, "blocking-i-o-on-a-timer-wtf"]], "Setup A Timer": [[897, "setup-a-timer"]], "Blocking I/O: What Is That?": [[898, "blocking-i-o-what-is-that"]], "File I/O: Basics": [[899, "file-i-o-basics"]], "File Descriptors": [[899, "file-descriptors"]], "Standard Filedescriptors": [[899, "standard-filedescriptors"]], "File I/O: System Calls": [[899, "file-i-o-system-calls"]], "open()": [[899, "open"]], "open() Flags": [[899, "open-flags"]], "read()": [[899, "read"]], "write()": [[899, "write"]], "File Offset: lseek()": [[899, "file-offset-lseek"]], "The Rest: ioctl()": [[899, "the-rest-ioctl"]], "Exercise: Copy A File": [[900, "exercise-copy-a-file"]], "Sunny Case: Source File Exists, Destination Does Not Exist": [[900, "sunny-case-source-file-exists-destination-does-not-exist"]], "Error: Wrong Number Of Arguments Specified": [[900, "error-wrong-number-of-arguments-specified"]], "Error: Source File Does Not Exist": [[900, "error-source-file-does-not-exist"]], "Error: Destination File Exists": [[900, "error-destination-file-exists"]], "Error: Destination Directory Not Writable": [[900, "error-destination-directory-not-writable"]], "Exercise: Create File With Hole": [[901, "exercise-create-file-with-hole"]], "Duplicating (Whats Going On?)": [[902, "duplicating-whats-going-on"]], "File Descriptors, Open File, I-Node": [[902, "file-descriptors-open-file-i-node"]], "File Descriptors and Inheritance": [[902, "file-descriptors-and-inheritance"]], "Duplicating File Descriptors": [[902, "duplicating-file-descriptors"]], "Example: Shell Stdout-Redirection (1)": [[902, "example-shell-stdout-redirection-1"]], "Example: Shell Stdout-Redirection (2)": [[902, "example-shell-stdout-redirection-2"]], "Example: Shell Stdout-Redirection (3)": [[902, "example-shell-stdout-redirection-3"]], "O_CREAT: Creating A File": [[903, "o-creat-creating-a-file"]], "Creating A File If It Does Not Exist (Bogus Version)": [[903, "creating-a-file-if-it-does-not-exist-bogus-version"]], "Bogus O_CREAT Usage: Mode Parameter Missing": [[903, "bogus-o-creat-usage-mode-parameter-missing"]], "Creating A File If It Does Not Exist": [[903, "creating-a-file-if-it-does-not-exist"]], "O_EXCL: Creating A File, But Failing If It Already Exists": [[904, "o-excl-creating-a-file-but-failing-if-it-already-exists"]], "Is \u201cCreate or Open\u201d Always Wanted?": [[904, "is-create-or-open-always-wanted"]], "Sunny Case: File Does Not Exist": [[904, "sunny-case-file-does-not-exist"]], "Error: File Exists": [[904, "error-file-exists"]], "O_RDONLY: Reading a File": [[905, "o-rdonly-reading-a-file"]], "Me and /etc/passwd": [[905, "me-and-etc-passwd"]], "Code: Reading A File": [[905, "code-reading-a-file"]], "Sunny Case: Reading /etc/passwd": [[905, "sunny-case-reading-etc-passwd"]], "Error: File Not Readable": [[905, "error-file-not-readable"]], "Error: File Not Even There": [[905, "error-file-not-even-there"]], "O_WRONLY: Writing A File (Which Must Exist)": [[906, "o-wronly-writing-a-file-which-must-exist"]], "Writing (And Not Creating) A File": [[906, "writing-and-not-creating-a-file"]], "Error: File Not Writeable": [[906, "error-file-not-writeable"]], "Error: File Not Even There \u27f6 Not Implicitly Created": [[906, "error-file-not-even-there-longrightarrow-not-implicitly-created"]], "Sunny Case: File Exists, And Is Writeable": [[906, "sunny-case-file-exists-and-is-writeable"]], "Exercise: Read Temperature From Onewire Sensor": [[907, "exercise-read-temperature-from-onewire-sensor"]], "Onewire Basics": [[907, "onewire-basics"]], "Program": [[907, "program"], [1059, "program"]], "Test On The Target Machine": [[907, "test-on-the-target-machine"]], "I/O without Offset Manipulation": [[909, "i-o-without-offset-manipulation"]], "Scatter/Gather I/O": [[909, "scatter-gather-i-o"]], "Scatter/Gather I/O, without Offset Manipulation": [[909, "scatter-gather-i-o-without-offset-manipulation"]], "Truncating Files": [[909, "truncating-files"]], "File Descriptors - Allocation": [[909, "file-descriptors-allocation"]], "Linux Systems Programming": [[910, "linux-systems-programming"], [1140, "linux-systems-programming"]], "Get Value Of GPIO": [[911, "get-value-of-gpio"]], "Retrieving Value Manually, On The Commandline": [[911, "retrieving-value-manually-on-the-commandline"]], "Shell Script": [[911, "shell-script"]], "C Program": [[911, "c-program"]], "Introductory Live Hacking, Hardware-Wise (sysfs GPIO)": [[912, "introductory-live-hacking-hardware-wise-sysfs-gpio"]], "Intro: sysfs GPIO": [[913, "intro-sysfs-gpio"]], "sysfs?": [[913, "sysfs"]], "General Purpose IO (GPIO)": [[913, "general-purpose-io-gpio"]], "Requesting A GPIO Pin": [[913, "requesting-a-gpio-pin"]], "GPIO Attributes As Files": [[913, "gpio-attributes-as-files"]], "Interrupts In Userspace": [[914, "interrupts-in-userspace"]], "Manual Configuration": [[914, "manual-configuration"]], "C Program: Configuration, Event Loop": [[914, "c-program-configuration-event-loop"]], "Why Threads?": [[915, "why-threads"]], "Typical Uses": [[915, "typical-uses"]], "Legal (1)": [[915, "legal-1"]], "Legal (2)": [[915, "legal-2"]], "POSIX Thread API": [[915, "posix-thread-api"]], "Thread Life Cycle": [[916, "thread-life-cycle"], [916, "id1"]], "Thread Creation": [[916, "thread-creation"]], "Thread Termination (1)": [[916, "thread-termination-1"]], "Thread Termination (2)": [[916, "thread-termination-2"]], "Exit Status, pthread_join()": [[916, "exit-status-pthread-join"]], "Detached Threads": [[916, "detached-threads"]], "Thread ID": [[916, "thread-id"]], "Scheduled Entities (1)": [[916, "scheduled-entities-1"]], "Scheduled Entities (2)": [[916, "scheduled-entities-2"]], "Thread Creation, Race Condition": [[917, "thread-creation-race-condition"]], "Synchronization": [[918, "synchronization"]], "Race Conditions (1)": [[918, "race-conditions-1"]], "Race Conditions (2)": [[918, "race-conditions-2"]], "Mutex (1)": [[918, "mutex-1"]], "Mutex (2)": [[918, "mutex-2"]], "Mutex (3)": [[918, "mutex-3"]], "Mutex Types": [[918, "mutex-types"]], "Mutex: Solve Load/Modify/Store Conflict": [[919, "mutex-solve-load-modify-store-conflict"]], "Communication: Condition Variable": [[920, "communication-condition-variable"]], "Condition Variable (1)": [[920, "condition-variable-1"]], "Condition Variable (2)": [[920, "condition-variable-2"]], "Condition Variable: wait()": [[920, "condition-variable-wait"]], "Condition Variable: signal()": [[920, "condition-variable-signal"]], "Example: WIN32 Auto Reset Event (1)": [[920, "example-win32-auto-reset-event-1"]], "Example: WIN32 Auto Reset Event (2)": [[920, "example-win32-auto-reset-event-2"]], "Condition Variable: Checking the Predicate": [[920, "condition-variable-checking-the-predicate"]], "Condition Variable: Initialization": [[920, "condition-variable-initialization"]], "Condition Variable: Miscellaneous": [[920, "condition-variable-miscellaneous"]], "Condition Variable: Message Queue": [[921, "condition-variable-message-queue"]], "One-Time Initialization (1)": [[922, "one-time-initialization-1"]], "One-Time Initialization (2)": [[922, "one-time-initialization-2"]], "One-Time Initialization (3)": [[922, "one-time-initialization-3"]], "Thread Specific Data, Thread Local Storage": [[922, "thread-specific-data-thread-local-storage"]], "Last Warning (1)": [[923, "last-warning-1"]], "Last Warning (2)": [[923, "last-warning-2"]], "Last Warning (3)": [[923, "last-warning-3"]], "POSIX Threads": [[924, "posix-threads"]], "Trylock/islocked": [[925, "trylock-islocked"]], "Process: Arguments, Exit Status": [[926, "process-arguments-exit-status"]], "The Shell: A Program Like Any Program": [[926, "the-shell-a-program-like-any-program"]], "The Shell: A Programming Language": [[926, "the-shell-a-programming-language"]], "Exit Status": [[926, "exit-status"]], "Exit Status: 0 is \u201cOK\u201d": [[926, "exit-status-0-is-ok"]], "Exit Status: != 0 is \u201cNot OK\u201d": [[926, "exit-status-0-is-not-ok"]], "Argument Vector (int argc, char** argv)": [[926, "argument-vector-int-argc-char-argv"]], "Processes": [[927, "processes"]], "The Process Tree (And Environment, And procfs)": [[928, "the-process-tree-and-environment-and-procfs"]], "Process ID (PID) And Parent Process ID (PPID)": [[928, "process-id-pid-and-parent-process-id-ppid"]], "System Calls: getpid(), getppid()": [[928, "system-calls-getpid-getppid"]], "Environment Variables": [[928, "environment-variables"]], "Scheduling (and Multitasking)": [[929, "scheduling-and-multitasking"]], "Fairness Criteria": [[929, "fairness-criteria"]], "CPU bound vs. I/O bound": [[929, "cpu-bound-vs-i-o-bound"]], "Demo: I/O vs CPU bound": [[929, "demo-i-o-vs-cpu-bound"]], "Scheduling Decision, Runnability": [[929, "scheduling-decision-runnability"]], "Tasks? Processes? Threads?": [[931, "tasks-processes-threads"]], "A Typical Bare Metal Application": [[931, "a-typical-bare-metal-application"]], "Hm. Need Another Timer Interrupt!": [[931, "hm-need-another-timer-interrupt"]], "Away From Interrupts: Use An Operating System": [[931, "away-from-interrupts-use-an-operating-system"]], "Tasks?": [[931, "id1"]], "Threads Are Great: More Functionality": [[931, "threads-are-great-more-functionality"]], "Are Threads Great?": [[931, "are-threads-great"]], "Stability Considerations": [[931, "stability-considerations"]], "Processes, Address Spaces": [[931, "processes-address-spaces"]], "Stabilizing": [[931, "stabilizing"]], "Scheduling: Exam Questions": [[932, "scheduling-exam-questions"]], "Wakeup Latency, and Fair Scheduling": [[933, "wakeup-latency-and-fair-scheduling"]], "Nice Value: Inexact Tuning": [[933, "nice-value-inexact-tuning"]], "Enter Realtime: Definition": [[933, "enter-realtime-definition"]], "Realtime on Linux": [[933, "realtime-on-linux"]], "Demo: Measuring Wakeup Latency": [[933, "demo-measuring-wakeup-latency"]], "Immediately?": [[933, "immediately"]], "Immediately! \u27f6 PREEMPT_RT": [[933, "immediately-longrightarrow-preempt-rt"]], "Realtime API": [[934, "realtime-api"]], "Scheduling Policies": [[934, "scheduling-policies"]], "Scheduling Priorities": [[934, "scheduling-priorities"]], "What\u2019s Runnning On A System?": [[934, "what-s-runnning-on-a-system"]], "Scheduling: System Calls": [[934, "scheduling-system-calls"]], "Scheduling: Threads (1)": [[934, "scheduling-threads-1"]], "Scheduling: Threads (2)": [[934, "scheduling-threads-2"]], "Priority Inversion": [[934, "priority-inversion"]], "Priority Inversion: Mutex Protocols (1)": [[934, "priority-inversion-mutex-protocols-1"]], "Wakeup Latency, CPU Frequency (Gotcha)": [[935, "wakeup-latency-cpu-frequency-gotcha"]], "Measuring Wakeup Latency": [[935, "measuring-wakeup-latency"]], "Many Runnable Processes (Gotcha: CPU Frequency Scaling)": [[935, "many-runnable-processes-gotcha-cpu-frequency-scaling"]], "CPU Frequency Scaling Out Of The Way": [[935, "cpu-frequency-scaling-out-of-the-way"]], "Mysteries Remaining": [[935, "mysteries-remaining"]], "Code: Sysprog: Event Driven Programming": [[936, "code-sysprog-event-driven-programming"]], "Screenplay: Sysprog: POSIX IPC": [[937, "screenplay-sysprog-posix-ipc"], [940, "screenplay-sysprog-posix-ipc"]], "select on Device Files": [[937, "select-on-device-files"]], "Sysprog: Events": [[938, "sysprog-events"]], "Code: Sysprog: POSIX IPC": [[939, "code-sysprog-posix-ipc"]], "Virtual Memory, mmap()": [[940, "virtual-memory-mmap"]], "POSIX Shared Memory": [[940, "posix-shared-memory"]], "Create Shared Memory Segment": [[940, "create-shared-memory-segment"]], "Produce into Shared Memory": [[940, "produce-into-shared-memory"]], "Consume from Shared Memory": [[940, "consume-from-shared-memory"]], "POSIX Semaphores": [[940, "posix-semaphores"]], "Create Semaphore": [[940, "create-semaphore"]], "Wait": [[940, "wait"]], "Post": [[940, "post"]], "POSIX Message Queues": [[940, "posix-message-queues"]], "Create": [[940, "create"]], "Produce": [[940, "produce"]], "Consume": [[940, "consume"]], "Slides: Sysprog: POSIX IPC": [[941, "slides-sysprog-posix-ipc"]], "Slideshow": [[941, null], [945, null]], "History: Two IPC Variants": [[941, "history-two-ipc-variants"]], "Object Names": [[941, "object-names"]], "File Semantics": [[941, "file-semantics"]], "Message Queues": [[941, "message-queues"]], "Open/Create: mq_open()": [[941, "open-create-mq-open"]], "Sending/Receiving: mq_send(), mq_receive()": [[941, "sending-receiving-mq-send-mq-receive"]], "Closing/Removing: mq_close(), mq_unlink()": [[941, "closing-removing-mq-close-mq-unlink"]], "Notification: mq_notify()": [[941, "notification-mq-notify"]], "Message Queues are Files": [[941, "message-queues-are-files"]], "Message Queue Filesystem: mqueue": [[941, "message-queue-filesystem-mqueue"]], "Semaphores": [[941, "semaphores"]], "Open/Create: sem_open()": [[941, "open-create-sem-open"]], "Communication: sem_wait(), sem_post()": [[941, "communication-sem-wait-sem-post"]], "Closing/Removing: sem_close(), ``sem_unlink()": [[941, "closing-removing-sem-close-sem-unlink"]], "Semaphores are Files": [[941, "semaphores-are-files"]], "Shared Memory (1)": [[941, "shared-memory-1"]], "Shared Memory (2)": [[941, "shared-memory-2"]], "Exercise: POSIX Message Queues": [[941, "exercise-posix-message-queues"]], "Sysprog: POSIX IPC": [[942, "sysprog-posix-ipc"]], "Code: Sysprog: Signals": [[943, "code-sysprog-signals"]], "Screenplay: Sysprog: Signals": [[944, "screenplay-sysprog-signals"]], "Barebones Naive Program": [[944, "barebones-naive-program"]], "Signal Handler": [[944, "signal-handler"]], "Alarm": [[944, "alarm"]], "Alarm (Louder)": [[944, "alarm-louder"]], "Synchronous Delivery": [[944, "synchronous-delivery"]], "Innocent Multithreaded Program": [[944, "innocent-multithreaded-program"]], "Add SIGALRM": [[944, "add-sigalrm"]], "Slides: Sysprog: Signals": [[945, "slides-sysprog-signals"]], "Example Signals": [[945, "example-signals"]], "Terminology": [[945, "terminology"]], "Default Actions": [[945, "default-actions"]], "Important Signals": [[945, "important-signals"]], "Sending, Commandline": [[945, "sending-commandline"]], "Sending Signals, Programmatically": [[945, "sending-signals-programmatically"]], "Warning!": [[945, "warning"]], "Blocking Signals: Signal Mask": [[945, "blocking-signals-signal-mask"]], "Signal Mask Manipulation": [[945, "signal-mask-manipulation"]], "Pending Signals": [[945, "pending-signals"]], "Signal Set: sigset_t": [[945, "signal-set-sigset-t"]], "Signal Handlers": [[945, "signal-handlers"]], "Installing a Signal Handler (1)": [[945, "installing-a-signal-handler-1"]], "Installing a Signal Handler (2)": [[945, "installing-a-signal-handler-2"]], "Effects of Signal Delivery": [[945, "effects-of-signal-delivery"]], "Last Warning!": [[945, "last-warning"]], "WTF Async Signal Safe?": [[945, "wtf-async-signal-safe"]], "Exercise: Signals": [[945, "exercise-signals"]], "Sysprog: Signals": [[946, "sysprog-signals"]], "Toolchain: Basics": [[947, "toolchain-basics"]], "GCC - GNU Compiler Collection": [[947, "gcc-gnu-compiler-collection"]], "All-In-One Usage: Single File": [[947, "all-in-one-usage-single-file"]], "All-In-One Usage: Multiple Files": [[947, "all-in-one-usage-multiple-files"]], "This Is Not As Simple As It Seems!": [[947, "this-is-not-as-simple-as-it-seems"]], "What\u2019s In A Program? \u27f6 Symbols (nm)": [[947, "what-s-in-a-program-longrightarrow-symbols-nm"]], "Overview: Where Do Which Symbols Come From (\u27f6 The Toolchain)": [[947, "overview-where-do-which-symbols-come-from-longrightarrow-the-toolchain"]], "Recap: Toolchain": [[947, "recap-toolchain"]], "CMake: Cross Build": [[948, "cmake-cross-build"]], "Cross Build: Parameters": [[948, "cross-build-parameters"]], "Core Build Instructions: Target Agnostic": [[948, "core-build-instructions-target-agnostic"]], "Toolchain Files": [[948, "toolchain-files"]], "Step 1: Generate Makefile in Build Directory": [[948, "step-1-generate-makefile-in-build-directory"]], "Step 2: Build Using make": [[948, "step-2-build-using-make"], [949, "step-2-build-using-make"]], "CMake: Local Build": [[949, "cmake-local-build"]], "make: Problems": [[949, "make-problems"]], "CMake To The Rescue": [[949, "cmake-to-the-rescue"]], "Out-Of-Source Build": [[949, "out-of-source-build"]], "Step 1: Generate Makefile In Build Directory": [[949, "step-1-generate-makefile-in-build-directory"]], "Goodie: Dependency Management": [[949, "goodie-dependency-management"]], "Native Compilation": [[950, "native-compilation"]], "Cross?": [[950, "cross"]], "The sysroot": [[950, "the-sysroot"]], "Exercise: Build Software Package (Cross, Raspberry)": [[952, "exercise-build-software-package-cross-raspberry"]], "FH/Moodle Quiz: Toolchain": [[953, "fh-moodle-quiz-toolchain"]], "Exercises: Toolchain": [[954, "exercises-toolchain"]], "Exercise: Build Software Package (Native)": [[955, "exercise-build-software-package-native"]], "Exercise: Install And Check Raspberry Toolchain": [[956, "exercise-install-and-check-raspberry-toolchain"]], "Toolchain, And Cross Development": [[957, "toolchain-and-cross-development"]], "Case Study: Raspberry Toolchain": [[958, "case-study-raspberry-toolchain"]], "Linaro Toolchain For The Pi (Defunct)": [[959, "linaro-toolchain-for-the-pi-defunct"]], "Download And Unpack Linaro Toolchain": [[959, "download-and-unpack-linaro-toolchain"]], "Create a sysroot": [[959, "create-a-sysroot"]], "Patience!": [[959, null]], "Test Cross Build": [[959, "test-cross-build"]], "What We Have": [[959, "what-we-have"]], "Use Cross Compiler To Build Against sysroot": [[959, "use-cross-compiler-to-build-against-sysroot"]], "Adjust $PATH To Point To Toolchain": [[959, "adjust-path-to-point-to-toolchain"]], "Building A Toolchain On Fedora For Ubuntu 18.04 (WSL)": [[961, "building-a-toolchain-on-fedora-for-ubuntu-18-04-wsl"]], "Install And Run Docker": [[961, "install-and-run-docker"]], "Create Ubuntu Images (18.04 and 20.04)": [[961, "create-ubuntu-images-18-04-and-20-04"]], "Create Docker Volume": [[961, "create-docker-volume"]], "Container Work": [[961, "container-work"]], "Command To Run Container On Volumes": [[961, "command-to-run-container-on-volumes"]], "Setup container": [[961, "setup-container"]], "Install autoconf 2.71": [[961, "install-autoconf-2-71"]], "Install crosstool-ng": [[961, "install-crosstool-ng"]], "Build Toolchain": [[961, "build-toolchain"]], "crosstool-ng Toolchain Build": [[961, "crosstool-ng-toolchain-build"]], "Create Toolchain Archive": [[961, "create-toolchain-archive"]], "Install Toolchain On Host": [[961, "install-toolchain-on-host"]], "Cross Toolchain Setup": [[962, "cross-toolchain-setup"]], "Download And Install Toolchain Archive": [[962, "download-and-install-toolchain-archive"]], "Establish CMake Toolchain File": [[962, "establish-cmake-toolchain-file"]], "Test Run": [[962, "test-run"]], "Zooming In: Separate Compilation, and Linking Statically": [[963, "zooming-in-separate-compilation-and-linking-statically"]], "Remember: All-In-One Build \u2026": [[963, "remember-all-in-one-build"]], "Adding Another main(): What About Shared Code?": [[963, "adding-another-main-what-about-shared-code"]], "Solution: Separate Compilation And Linking Steps": [[963, "solution-separate-compilation-and-linking-steps"]], "Complication: Modification Tracking": [[963, "complication-modification-tracking"]], "Enter Makefiles": [[963, "enter-makefiles"]], "Shared Libraries (Shared Objects)": [[964, "shared-libraries-shared-objects"]], "Problems With Static Libraries": [[964, "problems-with-static-libraries"]], "And Dynamic Libraries?": [[964, "and-dynamic-libraries"]], "Relocations": [[964, "relocations"]], "Building A Shared Library: Position Independent Code (PIC)": [[964, "building-a-shared-library-position-independent-code-pic"]], "Linking Executables Against Shared Libraries": [[964, "linking-executables-against-shared-libraries"]], "And Build Dependencies?": [[964, "and-build-dependencies"]], "And Runtime Dependencies?": [[964, "and-runtime-dependencies"]], "And Starting An Executable Having External Dependencies?": [[964, "and-starting-an-executable-having-external-dependencies"]], "This Is Not Simple: Library Search Path": [[964, "this-is-not-simple-library-search-path"]], "Summary: Static Versus Dynamic Libraries": [[964, "summary-static-versus-dynamic-libraries"]], "Object Code Archives/Static Libraries": [[965, "object-code-archives-static-libraries"]], "Code Bases Become Larger (1)": [[965, "code-bases-become-larger-1"]], "Code Bases Become Larger (2)": [[965, "code-bases-become-larger-2"]], "Problem: Structure": [[965, "problem-structure"]], "Build Instructions: Building A Library": [[965, "build-instructions-building-a-library"]], "Closures": [[966, "closures"]], "Today": [[966, "today"]], "def is a Statement": [[966, "def-is-a-statement"]], "Functions That Create Functions": [[966, "functions-that-create-functions"]], "Inner Function Reaches Out To Global Scope": [[966, "inner-function-reaches-out-to-global-scope"]], "And Intermediate Scope? \u27f6 Closure": [[966, "and-intermediate-scope-longrightarrow-closure"]], "A Less Theoretical \u201cUse Case\u201d": [[966, "a-less-theoretical-use-case"]], "Scope Issues: Assignment to Global Scope (global Keyword)": [[966, "scope-issues-assignment-to-global-scope-global-keyword"]], "Scope Issues: Assignment to Intermediate Scope (nonlocal Keyword)": [[966, "scope-issues-assignment-to-intermediate-scope-nonlocal-keyword"]], "Intro": [[967, "intro"]], "Simplest: List Comprehension": [[967, "simplest-list-comprehension"]], "Context Managers: The with Statement": [[968, "context-managers-the-with-statement"]], "Example: Open File": [[968, "example-open-file"]], "Example: Temporary Directory": [[968, "example-temporary-directory"]], "Example: Multiple with Items": [[968, "example-multiple-with-items"]], "Under The Hood: Context Manager": [[968, "under-the-hood-context-manager"]], "Example: Monkeypatching The print Function": [[968, "example-monkeypatching-the-print-function"]], "Still Much Typing \u27f6 @contextlib.contextmanager": [[968, "still-much-typing-longrightarrow-contextlib-contextmanager"]], "More Involved: Using Closures To Implement PrefixPrint": [[968, "more-involved-using-closures-to-implement-prefixprint"]], "Decorators": [[969, "decorators"]], "The Ominous \u201c@\u201d": [[969, "the-ominous"]], "Decorators Overview": [[969, "decorators-overview"]], "A Simple Minded Function": [[969, "a-simple-minded-function"]], "Decorator Basics": [[969, "decorator-basics"]], "Decorators are Syntactic Sugar": [[969, "decorators-are-syntactic-sugar"]], "Problem: Arbitrary Function Arguments": [[969, "problem-arbitrary-function-arguments"]], "*args, **kwargs To The Rescue": [[969, "args-kwargs-to-the-rescue"]], "Sideways: functools.wraps": [[969, "sideways-functools-wraps"]], "Class Decorator: debug() with prefix": [[969, "class-decorator-debug-with-prefix"]], "Basic Exception Handling: try, except": [[970, "basic-exception-handling-try-except"]], "Catching Exceptions By Type": [[970, "catching-exceptions-by-type"]], "Exception Objects": [[970, "exception-objects"]], "Catching Multiple Exception Types: Exception List": [[970, "catching-multiple-exception-types-exception-list"]], "Catching Multiple Exception Types: Multiple except Clauses": [[970, "catching-multiple-exception-types-multiple-except-clauses"]], "Catching Multiple Exception Types: By Base Type": [[970, "catching-multiple-exception-types-by-base-type"]], "Important: Order Of except Clauses": [[970, "important-order-of-except-clauses"]], "Built-In Exception Hierarchy": [[970, "built-in-exception-hierarchy"]], "Raising Exceptions": [[970, "raising-exceptions"]], "Re-Raising Exceptions": [[970, "re-raising-exceptions"]], "User-Defined Exceptions": [[970, "user-defined-exceptions"]], "User-Defined Exceptions: More": [[970, "user-defined-exceptions-more"]], "else: Executed If No Exception": [[970, "else-executed-if-no-exception"]], "finally: Executed Regardless Of Exception": [[970, "finally-executed-regardless-of-exception"]], "The exec() Function": [[971, "the-exec-function"]], "Dictionaries Everywhere: Context": [[971, "dictionaries-everywhere-context"]], "Enter exec()": [[971, "enter-exec"]], "exec(), and Context": [[971, "exec-and-context"]], "And What Is This Used For, Realistically?": [[971, "and-what-is-this-used-for-realistically"]], "Python: More Language Features": [[972, "python-more-language-features"]], "Iteration, Comprehensions, and Generators": [[973, "iteration-comprehensions-and-generators"]], "Coverage Of This Topic": [[973, "coverage-of-this-topic"]], "for Recap: Sequential Datatypes": [[973, "for-recap-sequential-datatypes"]], "Primitive Transformation [1,2,3,4] \u27f6 [1,4,9,16]": [[973, "primitive-transformation-1-2-3-4-longrightarrow-1-4-9-16"]], "Larger Input List (Still Allocated)": [[973, "larger-input-list-still-allocated"]], "Input List \u27f6 range": [[973, "input-list-longrightarrow-range"]], "Output List \u27f6 yield": [[973, "output-list-longrightarrow-yield"]], "Generator Function \u27f6 Generator Expression": [[973, "generator-function-longrightarrow-generator-expression"]], "Implementing A Fibonacci Number Generator": [[974, "implementing-a-fibonacci-number-generator"]], "Fibonacci Numbers: Naive List": [[974, "fibonacci-numbers-naive-list"]], "Fibonacci Numbers: Naive List, Limited": [[974, "fibonacci-numbers-naive-list-limited"]], "Sideway: Infinity by Not Using Functions": [[974, "sideway-infinity-by-not-using-functions"]], "Fibonacci Numbers: Function Producing Infinite Sequence": [[974, "fibonacci-numbers-function-producing-infinite-sequence"]], "Common Pattern: Turn List into Generated Items": [[974, "common-pattern-turn-list-into-generated-items"]], "The Iterator Protocol": [[975, "the-iterator-protocol"], [975, "id1"]], "Iteration in Python": [[975, "iteration-in-python"]], "What\u2019s an Iterator?": [[975, "what-s-an-iterator"]], "What\u2019s an Iterable?": [[975, "what-s-an-iterable"]], "The Iterator Protocol: Manual Iteration": [[975, "the-iterator-protocol-manual-iteration"]], "The Iterator Protocol, And The for Loop": [[975, "the-iterator-protocol-and-the-for-loop"]], "Generators: Motivation": [[975, "generators-motivation"]], "Generators: How?": [[975, "generators-how"]], "Observations": [[975, "observations"]], "Iteration, Generators, And yield": [[976, "iteration-generators-and-yield"]], "Iterating Intelligently: Generators, and the Iterator Protocol": [[977, "iterating-intelligently-generators-and-the-iterator-protocol"]], "Modules are Objects": [[978, "modules-are-objects"]], "Other Forms (1)": [[978, "other-forms-1"]], "Other Forms (2)": [[978, "other-forms-2"]], "Packages": [[978, "packages"]], "Executing Modules as Scripts": [[978, "executing-modules-as-scripts"]], "Package Structure": [[978, "package-structure"]], "Relative Imports (1)": [[978, "relative-imports-1"]], "Relative Imports (2)": [[978, "relative-imports-2"]], "Multithreading (Python)": [[979, "multithreading-python"]], "What\u2019s a Thread?": [[979, "what-s-a-thread"]], "Threads: The Pythonic Way": [[979, "threads-the-pythonic-way"]], "Threads: The OO Way - Inheritance": [[979, "threads-the-oo-way-inheritance"]], "And Program Termination?": [[979, "and-program-termination"]], "Daemon Threads": [[979, "daemon-threads"]], "Race Conditions, and Mutexes": [[981, "race-conditions-and-mutexes"]], "Mother of All Race conditions: Integer Increment": [[981, "mother-of-all-race-conditions-integer-increment"]], "Load Modify Store Conflict": [[981, "load-modify-store-conflict"]], "Solution: Mutex (Explicit Acquire/Release)": [[981, "solution-mutex-explicit-acquire-release"]], "Solution: Mutex (with Statement)": [[981, "solution-mutex-with-statement"]], "Multithreading: Exam Questions": [[982, "multithreading-exam-questions"]], "Abstract Base Classes (abc), And Duck Typing": [[983, "abstract-base-classes-abc-and-duck-typing"]], "Duck Typing: Examples": [[983, "duck-typing-examples"]], "Duck Typing Problem: Late Errors": [[983, "duck-typing-problem-late-errors"]], "Intermediate Step: Common Base Class (\u201cInterface\u201d)": [[983, "intermediate-step-common-base-class-interface"]], "Enter Abstract Base Classes: Wish List": [[983, "enter-abstract-base-classes-wish-list"]], "Abtract Base Class": [[983, "abtract-base-class"]], "Classes And Dictionaries": [[984, "classes-and-dictionaries"]], "Facts Up-Front": [[984, "facts-up-front"]], "Using Raw Dictionaries As Objects": [[984, "using-raw-dictionaries-as-objects"]], "Enter Classes: An Empty Class, And Its Effects": [[984, "enter-classes-an-empty-class-and-its-effects"]], "Attributes": [[984, "attributes"], [1096, "attributes"]], "Summary: Classes Or Raw Dictionaries": [[984, "summary-classes-or-raw-dictionaries"]], "Dynamic Attribute Access": [[984, "dynamic-attribute-access"]], "Constructor": [[985, "constructor"]], "And self?": [[985, "and-self"]], "Interrelationships": [[986, "interrelationships"]], "Extending Existing Classes": [[987, "extending-existing-classes"]], "Additional Feature: Salary": [[987, "additional-feature-salary"]], "Want Manager": [[987, "want-manager"]], "Introspecting Inheritance: isinstance(), issubclass()": [[987, "introspecting-inheritance-isinstance-issubclass"]], "isinstance()": [[987, "isinstance"]], "issubclass()": [[987, "issubclass"]], "Add __str__(), Creatively, After The Fact": [[987, "add-str-creatively-after-the-fact"]], "Object Methods": [[988, "object-methods"]], "Class Methods (@classmethod)": [[988, "class-methods-classmethod"]], "Static Methods (@staticmethod)": [[988, "static-methods-staticmethod"]], "collections.namedtuple": [[989, "collections-namedtuple"]], "Shortcut For Simple Data-Holding Classes": [[989, "shortcut-for-simple-data-holding-classes"]], "Constructing From Iterable: _make()": [[989, "constructing-from-iterable-make"]], "Convert To dict: _asdict()": [[989, "convert-to-dict-asdict"]], "Operators Are \u201cDunder\u201d Methods": [[990, "operators-are-dunder-methods"]], "Hypothetical And Pointless class Number": [[990, "hypothetical-and-pointless-class-number"]], "Simplest: Equality Comparison (==)": [[990, "simplest-equality-comparison"]], "Comparing Against Incompatible Types? (Lotsa Magic!)": [[990, "comparing-against-incompatible-types-lotsa-magic"]], "Ordering: Less-Than (<) Operator": [[990, "ordering-less-than-operator"]], "Ordering Magic, Again: __gt__ in terms of __lt__": [[990, "ordering-magic-again-gt-in-terms-of-lt"]], "Table: Comparison Operators": [[990, "table-comparison-operators"]], "@functools.total_ordering To The Rescue": [[990, "functools-total-ordering-to-the-rescue"]], "Arithmetic Operators, Reverse Operations": [[990, "arithmetic-operators-reverse-operations"]], "Table: Operators And The Methods To Implement Them": [[990, "table-operators-and-the-methods-to-implement-them"]], "Readonly Attributes": [[991, "readonly-attributes"]], "And Write Access?": [[991, "and-write-access"]], "Calculated Attributes": [[991, "calculated-attributes"]], "str() And repr()": [[992, "str-and-repr"]], "Stringification And Representation": [[992, "stringification-and-representation"]], "Overloading str() And repr(): __str__(), __repr__()": [[992, "overloading-str-and-repr-str-repr"]], "Positional and Keyword Arguments": [[993, "positional-and-keyword-arguments"]], "Traditional Function Call": [[993, "traditional-function-call"]], "Supplying Function Arguments Dynamically": [[993, "supplying-function-arguments-dynamically"]], "Functions That Takes Arbitrary Number Of Positional Arguments": [[993, "functions-that-takes-arbitrary-number-of-positional-arguments"]], "Functions That Take Arbitrary Keyword Arguments": [[993, "functions-that-take-arbitrary-keyword-arguments"]], "And Arbitrary Positional And Keyword Arguments?": [[993, "and-arbitrary-positional-and-keyword-arguments"]], "Ultimate Dynamicity: Arbitrary Positional And Keyword Arguments": [[993, "ultimate-dynamicity-arbitrary-positional-and-keyword-arguments"]], "Use Case: A Better print()": [[993, "use-case-a-better-print"]], "Python: The Language Fundamentals": [[994, "python-the-language-fundamentals"]], "The Python Programming Language": [[996, "the-python-programming-language"]], "A Little Bit of History": [[996, "a-little-bit-of-history"]], "Guido Van Rossum": [[996, "guido-van-rossum"]], "Hello World: Interactive Mode": [[997, "hello-world-interactive-mode"]], "Hello World: Script Files": [[997, "hello-world-script-files"]], "Running Python Programs": [[998, "running-python-programs"]], "The UNIX Way: Executable Bit, chmod": [[998, "the-unix-way-executable-bit-chmod"]], "The UNIX Way: Hash-Bang (She-Bang)": [[998, "the-unix-way-hash-bang-she-bang"]], "The UNIX Way: Running": [[998, "the-unix-way-running"]], "The Doze Way: Registry": [[998, "the-doze-way-registry"]], "Syntax: Indentation (1)": [[999, "syntax-indentation-1"]], "Syntax: Indentation (2)": [[999, "syntax-indentation-2"]], "Syntax: Statements and Lines": [[999, "syntax-statements-and-lines"]], "Comments vs. Documentation": [[999, "comments-vs-documentation"]], "Commandline Arguments (sys.argv)": [[1000, "commandline-arguments-sys-argv"]], "Operating Systems and Programs": [[1000, "operating-systems-and-programs"]], "Commandline Arguments in Python": [[1000, "commandline-arguments-in-python"]], "Cosmetics: Rudimentary Argument Parsing": [[1000, "cosmetics-rudimentary-argument-parsing"]], "Further information: argparse": [[1000, null]], "Variables (1)": [[1001, "variables-1"]], "Variables (2)": [[1001, "variables-2"]], "Integer Numbers: Comparison": [[1002, "integer-numbers-comparison"]], "Numbers: Python2 vs. Python 3 (1)": [[1002, "numbers-python2-vs-python-3-1"]], "Numbers: Python2 vs. Python 3 (2)": [[1002, "numbers-python2-vs-python-3-2"]], "Strings: Python 2": [[1002, "strings-python-2"]], "Strings: Python 2 \u2014 Confusion": [[1002, "strings-python-2-confusion"]], "Strings: Python 2 - unicode (1)": [[1002, "strings-python-2-unicode-1"]], "Strings: Python 2 \u2014 unicode (2)": [[1002, "strings-python-2-unicode-2"]], "Strings: Python 3": [[1002, "strings-python-3"]], "Python 3, Generally": [[1002, "python-3-generally"]], "Boolean Values": [[1004, "boolean-values"]], "Boolean Operators": [[1004, "boolean-operators"]], "The if Statement": [[1005, "the-if-statement"], [1005, "id1"]], "Looping Constructs": [[1006, "looping-constructs"]], "Esoteric Feature: while/else": [[1006, "esoteric-feature-while-else"]], "Sequence Elements": [[1007, "sequence-elements"]], "Sequence Multiplication": [[1007, "sequence-multiplication"]], "Indexing (1)": [[1008, "indexing-1"]], "Indexing (2)": [[1008, "indexing-2"]], "Slicing: Cutting Out": [[1008, "slicing-cutting-out"]], "Slicing: Step Width": [[1008, "slicing-step-width"]], "Iteration over \u2026 Something": [[1009, "iteration-over-something"]], "break, continue, else": [[1009, "break-continue-else"]], "Iteration over Numbers: range()": [[1010, "iteration-over-numbers-range"]], "range(): Definition": [[1010, "range-definition"]], "range(): Python 2 vs. Python 3": [[1010, "range-python-2-vs-python-3"]], "Immutability: Numbers": [[1011, "immutability-numbers"]], "Modifying An Integer In-Place? (Immutability)": [[1011, "modifying-an-integer-in-place-immutability"]], "Immutability: Tuples": [[1011, "immutability-tuples"]], "Mutability: Lists (1)": [[1011, "mutability-lists-1"]], "Mutability: Lists (2)": [[1011, "mutability-lists-2"]], "Shallow Copy": [[1011, "shallow-copy"]], "Deep Copy": [[1011, "deep-copy"]], "Functions: Global and Local Scope (Livehacking Screenplay)": [[1012, "functions-global-and-local-scope-livehacking-screenplay"]], "Undefined Variable": [[1012, "undefined-variable"]], "Local Variable": [[1012, "local-variable"]], "Local and Global Variable With Same Name": [[1012, "local-and-global-variable-with-same-name"]], "Assignment to Global Variable: global": [[1012, "assignment-to-global-variable-global"]], "Functions (Slideshow)": [[1013, "functions-slideshow"]], "Why Functions?": [[1013, "why-functions"]], "Mutable Default Parameters: Attention!": [[1013, "mutable-default-parameters-attention"]], "String Delimiters": [[1015, "string-delimiters"]], "Escape Sequences": [[1015, "escape-sequences"]], "More String Tricks": [[1015, "more-string-tricks"]], "C-Style Formatting (1)": [[1016, "c-style-formatting-1"]], "C-Style Formatting: Conversions": [[1016, "c-style-formatting-conversions"]], "C-Style Formatting: Flags": [[1016, "c-style-formatting-flags"]], "C-Style Formatting: Examples": [[1016, "c-style-formatting-examples"]], "The format Method": [[1016, "the-format-method"]], "Cool Since 3.6: f-Strings": [[1016, "cool-since-3-6-f-strings"]], "Batteries Included: Checks": [[1017, "batteries-included-checks"]], "Batteries Included: Search": [[1017, "batteries-included-search"]], "Substring Search: Examples": [[1017, "substring-search-examples"]], "Split and Join (1)": [[1017, "split-and-join-1"]], "Split and Join (2)": [[1017, "split-and-join-2"]], "List Access": [[1018, "list-access"]], "List Methods: Examples": [[1018, "list-methods-examples"]], "Dictionary Access": [[1019, "dictionary-access"]], "Examples: Simple Access": [[1019, "examples-simple-access"]], "Examples: Shortcuts": [[1019, "examples-shortcuts"]], "Dictionary Iteration (1)": [[1019, "dictionary-iteration-1"]], "Dictionary Iteration (2)": [[1019, "dictionary-iteration-2"]], "Operations on Sets (1)": [[1020, "operations-on-sets-1"]], "Operations on Sets (2)": [[1020, "operations-on-sets-2"]], "Python 2 vs. Python 3": [[1021, "python-2-vs-python-3"]], "Opening Files": [[1021, "opening-files"]], "Reading Files": [[1021, "reading-files"]], "Reading Files: Pythonic": [[1021, "reading-files-pythonic"]], "Writing Files (1)": [[1021, "writing-files-1"]], "Writing Files (2)": [[1021, "writing-files-2"]], "File Modes": [[1021, "file-modes"]], "Text vs. Binary Mode": [[1021, "text-vs-binary-mode"]], "Standard Streams": [[1021, "standard-streams"]], "Function Objects": [[1022, "function-objects"]], "What\u2019s a Function?": [[1022, "what-s-a-function"]], "Function Objects?": [[1022, "id1"]], "Function Objects! (1)": [[1022, "function-objects-1"]], "Function Objects! (2)": [[1022, "function-objects-2"]], "Commandline Parsing with argparse": [[1023, "commandline-parsing-with-argparse"]], "Handling Positional Arguments": [[1023, "handling-positional-arguments"]], "Handling Named Arguments: --interval \u2026": [[1023, "handling-named-arguments-interval"]], "Python: Draft Topics": [[1024, "python-draft-topics"]], "Matplotlib": [[1025, "matplotlib"]], "Axis Ranges": [[1025, "axis-ranges"]], "Package Installation (setuptools)": [[1026, "package-installation-setuptools"]], "Files": [[1026, "files"]], "Test \u201cInstallation\u201d": [[1026, "test-installation"]], "Source Distribution": [[1026, "source-distribution"]], "Manifest": [[1026, "manifest"]], "Installing From Wheel File": [[1026, "installing-from-wheel-file"]], "Publishing On PyPI": [[1026, "publishing-on-pypi"]], "Exercise: Read CSV File, Write into Sqlite3 Database": [[1027, "exercise-read-csv-file-write-into-sqlite3-database"]], "Exercise: Read CSV File": [[1028, "exercise-read-csv-file"]], "Sample CSV File": [[1028, "sample-csv-file"]], "CSV and Databases": [[1029, "csv-and-databases"]], "Exercise: Boolean Expressions": [[1031, "exercise-boolean-expressions"]], "Exercise: Even Numbers (while)": [[1032, "exercise-even-numbers-while"]], "Exercise: Greeting, Depending on Time of Day": [[1033, "exercise-greeting-depending-on-time-of-day"]], "Exercises (External)": [[1034, "exercises-external"]], "Exercise: Swap Two Variables": [[1036, "exercise-swap-two-variables"]], "Exercise: Username/Password Check": [[1037, "exercise-username-password-check"]], "Exercise: Digit to English Word": [[1038, "exercise-digit-to-english-word"]], "Exercise: Dictionary: Errors?": [[1039, "exercise-dictionary-errors"]], "Exercise: Eliminate Empty/Comment-Only Lines": [[1040, "exercise-eliminate-empty-comment-only-lines"]], "Exercise: Generator: Fibonacci": [[1041, "exercise-generator-fibonacci"]], "Exercise: Primeness (for)": [[1042, "exercise-primeness-for"]], "Exercises (Legacy)": [[1043, "exercises-legacy"]], "Exercise: Functions: join()": [[1044, "exercise-functions-join"]], "Exercise: Determine Maximum of Two Numbers (Function)": [[1046, "exercise-determine-maximum-of-two-numbers-function"]], "Exercise: Mixed List (Executable Program)": [[1047, "exercise-mixed-list-executable-program"]], "Exercise: Mixed List (Interactive Interpreter)": [[1048, "exercise-mixed-list-interactive-interpreter"]], "Exercise: Parsing /etc/passwd": [[1049, "exercise-parsing-etc-passwd"]], "Sample /etc/passwd file": [[1049, null]], "Implementation Strategy": [[1049, "implementation-strategy"]], "Exercise: Primeness (Function)": [[1050, "exercise-primeness-function"]], "Exercise: Reverting Lines of a File": [[1051, "exercise-reverting-lines-of-a-file"]], "Exercise: String (Right-Justify)": [[1052, "exercise-string-right-justify"]], "Exercise: Function: uniq()": [[1053, "exercise-function-uniq"]], "Exercise: Generator: uniq()": [[1054, "exercise-generator-uniq"]], "Exercise: Counting Lines, Words, Characters": [[1055, "exercise-counting-lines-words-characters"]], "Exercise: Primeness (while)": [[1056, "exercise-primeness-while"]], "Sensors, And Data Acquisition (Exercise Series)": [[1057, "sensors-and-data-acquisition-exercise-series"]], "Setting Paths": [[1058, "setting-paths"]], "Create (And Activate) A Virtual Environment For The Project": [[1058, "create-and-activate-a-virtual-environment-for-the-project"]], "Install Requirements": [[1058, "install-requirements"]], "Exercise: Basic \u201cSensor\u201d": [[1059, "exercise-basic-sensor"]], "Specification, And Setup": [[1059, "specification-and-setup"]], "Verification": [[1059, "verification"]], "Unit Test": [[1059, "unit-test"]], "Exercise: Read CSV File (csv.dictreader)": [[1060, "exercise-read-csv-file-csv-dictreader"]], "Users-header-cp1252.csv": [[1060, "id1"]], "Exercise: Refactoring - Extract CSV Reading Into Function (csv.dictreader)": [[1061, "exercise-refactoring-extract-csv-reading-into-function-csv-dictreader"]], "Exercise: Read CSV File (csv.reader)": [[1062, "exercise-read-csv-file-csv-reader"]], "Users-noheader-cp1252.csv": [[1062, "id2"]], "Exercise: Refactoring - Extract CSV Reading Into Function (csv.reader)": [[1063, "exercise-refactoring-extract-csv-reading-into-function-csv-reader"]], "User Database (Exercise Series)": [[1064, "user-database-exercise-series"]], "Exercise: MQTT: Publish User Records": [[1065, "exercise-mqtt-publish-user-records"]], "Exercise: Away From Raw Dictionaries": [[1066, "exercise-away-from-raw-dictionaries"]], "Test Code": [[1066, "test-code"], [1067, "test-code"], [1068, "test-code"]], "Exercise: Convert User Record To JSON And Back": [[1067, "exercise-convert-user-record-to-json-and-back"]], "Exercise: Refactoring - Extract Both CSV Formats Into Module": [[1068, "exercise-refactoring-extract-both-csv-formats-into-module"]], "Python: All Material, Interrelated": [[1069, "python-all-material-interrelated"]], "Python Programming: From Absolute Beginner to Advanced Productivity": [[1070, "python-programming-from-absolute-beginner-to-advanced-productivity"]], "Sample Trainings": [[1070, "sample-trainings"]], "More Information": [[1070, "more-information"]], "Python Links": [[1071, "python-links"]], "Advanced Python": [[1071, "advanced-python"], [1133, "advanced-python"]], "David Beazley": [[1071, "david-beazley"]], "Raymond Hettinger": [[1071, "raymond-hettinger"]], "Machine Learning, Artificial Intelligence": [[1072, "machine-learning-artificial-intelligence"]], "K-Means": [[1073, "k-means"]], "Topic Overview": [[1073, "topic-overview"], [1077, "topic-overview"]], "Artifacts": [[1073, "artifacts"]], "Topic Dependencies": [[1073, "topic-dependencies"], [1077, "topic-dependencies"]], "Linear Regression: Running Code (no Notebook!)": [[1074, "linear-regression-running-code-no-notebook"]], "Weather History Dataset": [[1075, "weather-history-dataset"]], "Linear Regression: Jupyter Notebook": [[1076, "Linear-Regression:-Jupyter-Notebook"]], "pandas.DataFrame": [[1076, "pandas.DataFrame"]], "Reading Data": [[1076, "Reading-Data"]], "Relationship Between pandas.DataFrame and numpy.ndarray": [[1076, "Relationship-Between-pandas.DataFrame-and-numpy.ndarray"]], "Extracting Input and Output Features from a pandas.DataFrame": [[1076, "Extracting-Input-and-Output-Features-from-a-pandas.DataFrame"]], "Plotting with matplotlib": [[1076, "Plotting-with-matplotlib"]], "Data Splicing: Split into Training and Test Data": [[1076, "Data-Splicing:-Split-into-Training-and-Test-Data"]], "Creating the Model: Algorithm + Training Data": [[1076, "Creating-the-Model:-Algorithm-+-Training-Data"]], "Verify the Model": [[1076, "Verify-the-Model"]], "Linear Regression": [[1077, "linear-regression"]], "Running Code": [[1077, "running-code"]], "Dataset": [[1077, "dataset"]], "Machine Learning: Concepts and Terminology": [[1078, "machine-learning-concepts-and-terminology"]], "How Far Is Mankind from Creating God": [[1078, "how-far-is-mankind-from-creating-god"]], "Basic Terminology: Algorithm and Model": [[1078, "basic-terminology-algorithm-and-model"]], "Basic Terminology: Features and Data": [[1078, "basic-terminology-features-and-data"]], "Types of Machine Learning": [[1078, "types-of-machine-learning"]], "Problems Solved": [[1078, "problems-solved"], [1101, "problems-solved"], [1108, "problems-solved"]], "CSV Files": [[1079, "csv-files"]], "CSV in its Origins": [[1079, "csv-in-its-origins"]], "The csv Module: csv.reader": [[1079, "the-csv-module-csv-reader"]], "And Tuple Unpacking?": [[1079, "and-tuple-unpacking"]], "Going Insane: CSV? SCSV?": [[1079, "going-insane-csv-scsv"]], "More Tuning Needed: Quoting": [[1079, "more-tuning-needed-quoting"]], "Tuning Options": [[1079, "tuning-options"]], "And Headings?": [[1079, "and-headings"]], "Enter csv.DictReader": [[1079, "enter-csv-dictreader"]], "DBAPI 2": [[1080, "dbapi-2"]], "Database Interfaces": [[1080, "database-interfaces"]], "DBAPI 2.0": [[1080, "dbapi-2-0"]], "Caveat: Transaction Lifetime": [[1080, "caveat-transaction-lifetime"]], "Caveat: Isolation": [[1080, "caveat-isolation"]], "Databases": [[1081, "databases"]], "DBAPI 2: PostgreSQL": [[1082, "dbapi-2-postgresql"]], "DBAPI 2 Example: Postgres": [[1082, "dbapi-2-example-postgres"]], "DBAPI 2: sqlite3": [[1083, "dbapi-2-sqlite3"]], "SQLite3": [[1083, "sqlite3"]], "SQLite3 Connection": [[1083, "sqlite3-connection"]], "SQLite3: Cursors and Statements": [[1083, "sqlite3-cursors-and-statements"]], "SQLite3: Filling the Database": [[1083, "sqlite3-filling-the-database"]], "SQLite3: Queries - Result Set": [[1083, "sqlite3-queries-result-set"]], "SQLite3: Bind Parameters": [[1083, "sqlite3-bind-parameters"]], "ASCII": [[1084, "ascii"]], "ISO Latin 1 (ISO-8859-1)": [[1084, "iso-latin-1-iso-8859-1"]], "And Python?": [[1084, "and-python"]], "Liebe Gr\u00fc\u00dfe, J\u00f6rg": [[1084, "liebe-grusze-jorg"]], "A Better Encoding for Liebe Gr\u00fc\u00dfe, J\u00f6rg: ISO-8859-1": [[1084, "a-better-encoding-for-liebe-grusze-jorg-iso-8859-1"]], "Encoding Mess": [[1084, "encoding-mess"]], "And \u795d\u597d, J\u00f6rg? (1)": [[1084, "and-jorg-1"]], "And \u795d\u597d, J\u00f6rg? (2)": [[1084, "and-jorg-2"]], "Enter UTF-8": [[1084, "enter-utf-8"]], "Boundary Code": [[1084, "boundary-code"]], "Ah Yes: decode()": [[1084, "ah-yes-decode"]], "And Source Encoding?": [[1084, "and-source-encoding"]], "Python: Miscellaneous Topics": [[1085, "python-miscellaneous-topics"]], "The import Statement (incomplete)": [[1086, "the-import-statement-incomplete"]], "Server/Broker": [[1087, "server-broker"]], "Client": [[1087, "client"]], "Starting the Service": [[1087, "starting-the-service"]], "Publishing a Message in Python": [[1087, "publishing-a-message-in-python"]], "Subscribing a Topic in Python": [[1087, "subscribing-a-topic-in-python"]], "Message Payload?": [[1087, "message-payload"]], "Pandas: Adding Rows": [[1088, "pandas-adding-rows"]], "Add Rows: Assign To New Row Number": [[1088, "add-rows-assign-to-new-row-number"]], "Add Rows: append() (Deprecated)": [[1088, "add-rows-append-deprecated"]], "Add Rows: Concatenating Frames": [[1088, "add-rows-concatenating-frames"]], "Pandas: Basics (DataFrame And Series)": [[1089, "pandas-basics-dataframe-and-series"]], "Naive: Objects, And Collections Of Objects": [[1089, "naive-objects-and-collections-of-objects"]], "Inverted: Objects, And Collections Of Objects (\u27f6 DataFrame)": [[1089, "inverted-objects-and-collections-of-objects-longrightarrow-dataframe"]], "Enter pandas, DataFrame, Series": [[1089, "enter-pandas-dataframe-series"]], "Selecting A Column \u27f6 Series": [[1089, "selecting-a-column-longrightarrow-series"]], "Selecting Multiple Columns": [[1089, "selecting-multiple-columns"]], "To Copy Or Not To Copy": [[1089, "to-copy-or-not-to-copy"]], "Pandas: Filters": [[1090, "pandas-filters"]], "Basic Filter Example": [[1090, "basic-filter-example"]], "Filter? Bitmap!": [[1090, "filter-bitmap"]], "Confusion: Filter/Column Addressing": [[1090, "confusion-filter-column-addressing"]], "Column Selection And Filters": [[1090, "column-selection-and-filters"]], "Boolean Expressions: Bitwise Operators! Braces!": [[1090, "boolean-expressions-bitwise-operators-braces"]], "Negation: ~": [[1090, "negation"]], "Neat Helpers": [[1090, "neat-helpers"]], "Random Material": [[1091, "random-material"]], "Pandas: Selecting Rows (And Columns) With iloc[]": [[1092, "pandas-selecting-rows-and-columns-with-iloc"]], "Row By Number: iloc[]": [[1092, "row-by-number-iloc"]], "So What Is A Row, Then?": [[1092, "so-what-is-a-row-then"]], "Selecting Multiple Rows": [[1092, "selecting-multiple-rows"]], "Selecting Rows And Columns": [[1092, "selecting-rows-and-columns"]], "Pandas: Indexes": [[1093, "pandas-indexes"]], "Default Index: Row Number": [[1093, "default-index-row-number"]], "Setting Custom Index": [[1093, "setting-custom-index"]], "Setting Custom Index, inplace=True": [[1093, "setting-custom-index-inplace-true"]], "Custom Index, And loc[]": [[1093, "custom-index-and-loc"]], "Custom Index, And iloc[]": [[1093, "custom-index-and-iloc"]], "Sorting DataFrame Object By Index Column": [[1093, "sorting-dataframe-object-by-index-column"]], "Pandas: Selecting Rows (And Columns) With loc[]": [[1094, "pandas-selecting-rows-and-columns-with-loc"]], "Rows (And Columns) By Label": [[1094, "rows-and-columns-by-label"]], "Hiccup: Slices Are Inclusive": [[1094, "hiccup-slices-are-inclusive"]], "Column Selection By Label": [[1094, "column-selection-by-label"]], "Columns By Slicing: Inclusive": [[1094, "columns-by-slicing-inclusive"]], "Pandas: Adding/Modifying Columns": [[1095, "pandas-adding-modifying-columns"]], "Example 1: Lowercasing A Column Of Strings": [[1095, "example-1-lowercasing-a-column-of-strings"]], "Example 1: Modifying The email Column": [[1095, "example-1-modifying-the-email-column"]], "Example 2: Adding A normalized_email Column": [[1095, "example-2-adding-a-normalized-email-column"]], "What If No Prebuilt Functionality Exists? apply() To The Rescue!": [[1095, "what-if-no-prebuilt-functionality-exists-apply-to-the-rescue"]], "apply() -ing Custom Functions": [[1095, "apply-ing-custom-functions"]], "XML: ElementTree (etree)": [[1096, "xml-elementtree-etree"]], "SAX and DOM": [[1096, "sax-and-dom"]], "ElementTree": [[1096, "elementtree"]], "A Very Simple Document": [[1096, "a-very-simple-document"]], "Text (1)": [[1096, "text-1"]], "Text (2)": [[1096, "text-2"]], "Writing XML Documents": [[1096, "writing-xml-documents"]], "Reading XML Documents": [[1096, "reading-xml-documents"]], "Visual Studio Code for Python Programming": [[1097, "visual-studio-code-for-python-programming"]], "PCAP Exam": [[1098, "pcap-exam"]], "Syllabus": [[1098, "syllabus"]], "Exam block #1: Modules and Packages (12%)": [[1098, "exam-block-1-modules-and-packages-12"]], "Exam block #2: Exceptions (14%)": [[1098, "exam-block-2-exceptions-14"]], "Exam block #3: Strings (18%)": [[1098, "exam-block-3-strings-18"]], "Exam block #4: Object-Oriented Programming (34%)": [[1098, "exam-block-4-object-oriented-programming-34"]], "Exam block #5: Miscellaneous (List Comprehensions, Lambdas, Closures, and I/O Operations) (22%)": [[1098, "exam-block-5-miscellaneous-list-comprehensions-lambdas-closures-and-i-o-operations-22"]], "Sample Questions": [[1098, "sample-questions"]], "Python: Project/Package Management": [[1099, "python-project-package-management"]], "Python Package Index (Livehacking Screenplay)": [[1100, "python-package-index-livehacking-screenplay"]], "Invocation": [[1100, "invocation"]], "Help": [[1100, "help"]], "Most Used Subcommands": [[1100, "most-used-subcommands"]], "Subcommand Help": [[1100, "subcommand-help"]], "System vs. User": [[1100, "system-vs-user"]], "Search": [[1100, "search"]], "Python Package Index (Slideshow)": [[1101, "python-package-index-slideshow"]], "Python Package Index (PyPI)": [[1101, "python-package-index-pypi"]], "Python Package Index": [[1102, "python-package-index"]], "Packaging, PyPI Upload (Link Collection)": [[1103, "packaging-pypi-upload-link-collection"]], "PyTest": [[1104, "pytest"]], "pytest Introduction, By Example": [[1105, "pytest-introduction-by-example"]], "Sample Project Structure": [[1105, "sample-project-structure"]], "pytest: Installation, Documentation": [[1105, "pytest-installation-documentation"]], "And PYTHONPATH?": [[1105, "and-pythonpath"]], "A Simple Test": [[1105, "a-simple-test"]], "Failing Tests": [[1105, "failing-tests"]], "A More Realistic Example": [[1105, "a-more-realistic-example"]], "Fixtures": [[1105, "fixtures"]], "Temporary Test Directory": [[1105, "temporary-test-directory"]], "Marking Tests as Expected to Fail": [[1105, "marking-tests-as-expected-to-fail"]], "The unittest Module": [[1106, "the-unittest-module"]], "Simplest Example": [[1106, "simplest-example"]], "Using a Fixture": [[1106, "using-a-fixture"]], "Multiple Test Cases With Same Fixture": [[1106, "multiple-test-cases-with-same-fixture"]], "Auto Recognizing Test Methods": [[1106, "auto-recognizing-test-methods"]], "The Meat of a Test": [[1106, "the-meat-of-a-test"]], "Recommendations": [[1106, "recommendations"]], "Virtual Environments (Livehacking Screenplay)": [[1107, "virtual-environments-livehacking-screenplay"]], "First: Help": [[1107, "first-help"]], "Local Package Installation": [[1107, "local-package-installation"]], "Freezing an Environment": [[1107, "freezing-an-environment"]], "Destroying an Environment": [[1107, "destroying-an-environment"]], "Recreating an Environment": [[1107, "recreating-an-environment"]], "Using Virtual Environments With Visual Studio Code": [[1107, "using-virtual-environments-with-visual-studio-code"]], "Virtual Environments (Slideshow)": [[1108, "virtual-environments-slideshow"]], "Virtual Environments (Links)": [[1108, "virtual-environments-links"]], "Virtual Environments": [[1109, "virtual-environments"]], "Unit Testing With googletest": [[1110, "unit-testing-with-googletest"]], "Code: Unittest: GTest Basics": [[1111, "code-unittest-gtest-basics"]], "Screenplay: Unittest: GTest Basics": [[1112, "screenplay-unittest-gtest-basics"]], "Before We Start": [[1112, "before-we-start"]], "Simplest Test: No Test": [[1112, "simplest-test-no-test"]], "Next Simplest: Single File": [[1112, "next-simplest-single-file"]], "Executing Tests Selectively": [[1112, "executing-tests-selectively"]], "Fatal Failure": [[1112, "fatal-failure"]], "FAIL()": [[1112, "fail"]], "ASSERT_*()": [[1112, "assert"]], "Non-Fatal Failure": [[1112, "non-fatal-failure"]], "Custom Message Output": [[1112, "custom-message-output"]], "Last Not Least: Structure": [[1112, "last-not-least-structure"]], "Test Cases and Suites": [[1112, "test-cases-and-suites"]], "Unittest: GTest Basics": [[1113, "unittest-gtest-basics"]], "Screenplay: Unittest: GTest and CMake": [[1114, "screenplay-unittest-gtest-and-cmake"]], "Installed: to be found in Standard Paths": [[1114, "installed-to-be-found-in-standard-paths"]], "CMake: \u201cFind Modules\u201d": [[1114, "cmake-find-modules"]], "Executing Tests As Part of Build": [[1114, "executing-tests-as-part-of-build"]], "Tests That Are Expected to Fail": [[1114, "tests-that-are-expected-to-fail"]], "Unittest: GTest and CMake": [[1115, "unittest-gtest-and-cmake"]], "Code: Unittest: GTest Fixtures": [[1116, "code-unittest-gtest-fixtures"]], "Screenplay: Unittest: GTest Fixtures": [[1117, "screenplay-unittest-gtest-fixtures"]], "Predefined Environment for a Number of Tests": [[1117, "predefined-environment-for-a-number-of-tests"]], "Environment is Isolated Per Test": [[1117, "environment-is-isolated-per-test"]], "More Complex Environment: SetUp(), TearDown()": [[1117, "more-complex-environment-setup-teardown"]], "Unittest: GTest Fixtures": [[1118, "unittest-gtest-fixtures"]], "Organisatorisches: Buchung, Kursablauf": [[1119, "organisatorisches-buchung-kursablauf"]], "Online Schulungen": [[1119, null]], "Buchung": [[1119, "buchung"]], "Kursgestaltung": [[1119, "kursgestaltung"]], "\u00dcbungen": [[1119, "ubungen"]], "Unterlagen & Download": [[1119, "unterlagen-download"]], "Linux from Scratch, 16.9.2013, M\u00fcnchen": [[1120, "linux-from-scratch-16-9-2013-munchen"]], "GRUB 0.97": [[1120, "grub-0-97"]], "Cross Systeme Bauen": [[1120, "cross-systeme-bauen"]], "Init, oder der Prozess mit der ID 1": [[1120, "init-oder-der-prozess-mit-der-id-1"]], "Verschiedenes": [[1120, "verschiedenes"]], "Shell Scripting/Bourne Again Shell (Bash)": [[1121, "shell-scripting-bourne-again-shell-bash"]], "Zielpublikum": [[1121, "zielpublikum"], [1123, "zielpublikum"], [1124, "zielpublikum"], [1129, "zielpublikum"], [1131, "zielpublikum"], [1136, "zielpublikum"], [1137, "zielpublikum"], [1143, "zielpublikum"]], "Kursinhalt": [[1121, "kursinhalt"], [1123, "kursinhalt"], [1124, "kursinhalt"], [1129, "kursinhalt"], [1131, "kursinhalt"], [1132, "kursinhalt"], [1136, "kursinhalt"], [1137, "kursinhalt"], [1138, "kursinhalt"], [1139, "kursinhalt"], [1141, "kursinhalt"], [1142, "kursinhalt"], [1143, "kursinhalt"]], "Empfohlene Vorkenntnisse": [[1121, "empfohlene-vorkenntnisse"], [1123, "empfohlene-vorkenntnisse"], [1124, "empfohlene-vorkenntnisse"], [1129, "empfohlene-vorkenntnisse"], [1131, "empfohlene-vorkenntnisse"], [1132, "empfohlene-vorkenntnisse"], [1136, "empfohlene-vorkenntnisse"], [1137, "empfohlene-vorkenntnisse"], [1138, "empfohlene-vorkenntnisse"], [1139, "empfohlene-vorkenntnisse"], [1141, "empfohlene-vorkenntnisse"], [1142, "empfohlene-vorkenntnisse"], [1143, "empfohlene-vorkenntnisse"]], "C: Einf\u00fchrung": [[1122, "c-einfuhrung"]], "C f\u00fcr Fortgeschrittene": [[1123, "c-fur-fortgeschrittene"]], "C++: Einf\u00fchrung und \u00dcberblick": [[1124, "c-einfuhrung-und-uberblick"]], "An Introduction to Modern C++, In Three Days": [[1125, "an-introduction-to-modern-c-in-three-days"]], "C and C++ Programming": [[1126, "c-and-c-programming"]], "CMake": [[1127, "cmake"]], "The Course": [[1127, null]], "Target Audience": [[1127, "target-audience"]], "Recommended Prior Knowledge": [[1127, "recommended-prior-knowledge"]], "Design Patterns For Embedded C++ Developers": [[1128, "design-patterns-for-embedded-c-developers"]], "Embedded Software Development: Hardware, Realtime, and Memory Management": [[1129, "embedded-software-development-hardware-realtime-and-memory-management"]], "Course Contents": [[1130, "course-contents"]], "Sample Project": [[1130, "sample-project"]], "Linux Basics: Eine Einf\u00fchrung Anhand von Beispielen": [[1131, "linux-basics-eine-einfuhrung-anhand-von-beispielen"]], "GNU Make: Die Mutter aller Build Tools": [[1132, "gnu-make-die-mutter-aller-build-tools"]], "Herdt": [[1135, "herdt"]], "Eine Woche mit dem Raspberry Pi": [[1136, "eine-woche-mit-dem-raspberry-pi"]], "Subversion (SVN)": [[1137, "subversion-svn"]], "Linux Systems Programming: Introduction": [[1138, "linux-systems-programming-introduction"]], "Linux Systems Programming: Virtual Memory, IPC, Shared Libraries": [[1139, "linux-systems-programming-virtual-memory-ipc-shared-libraries"]], "Linux Systems Programming: Multithreading": [[1141, "linux-systems-programming-multithreading"]], "Linux Systems Programming: Network Programming": [[1142, "linux-systems-programming-network-programming"]], "Unittesting and Test Driven Development": [[1143, "unittesting-and-test-driven-development"]]}, "indexentries": {}})