Search.setIndex({"docnames": ["about/myself/contact", "about/myself/cv-de", "about/myself/index", "about/myself/projects-de", "about/myself/skills-de", "about/site/courses/index", "about/site/courses/samples/detail/2021-04-12/Notebook", "about/site/courses/samples/detail/2021-04-12/index", "about/site/courses/samples/detail/2021-04-12/notebook-wrapper", "about/site/courses/samples/detail/index", "about/site/courses/samples/index", "about/site/courses/templates", "about/site/index", "about/site/opentraining/index", "about/site/opentraining/misc/draft-topics/index", "about/site/opentraining/misc/index", "about/site/opentraining/misc/s5/index", "about/site/opentraining/misc/s5/tests/index", "about/site/opentraining/misc/s5/tests/test-slides", "about/site/opentraining/misc/screencast", "about/site/opentraining/misc/topics-to-write", "about/site/opentraining/netidee/index", "about/site/opentraining/netidee/netidee-antrag", "about/site/opentraining/netidee/netidee-video-2min", "about/site/opentraining/usecases/agenda-subtract-known", "about/site/opentraining/usecases/duration", "about/site/opentraining/usecases/index", "about/site/opentraining/usecases/linking", "about/site/opentraining/usecases/menu", "about/site/opentraining/usecases/slides", "about/site/recipes/emoji", "about/site/recipes/index", "about/site/recipes/isoamsa", "about/site/recipes/isoamsr", "about/site/recipes/isonum", "about/site/recipes/layout-test", "about/site/recipes/mathml", "about/site/recipes/rst-cheatsheet", "about/site/recipes/sphinxish", "about/site/work-in-progress/2022-04-13/index", "about/site/work-in-progress/2022-04-13/seminar/block-before-googletest", "about/site/work-in-progress/2022-04-13/seminar/clean-code-craftsmanship", "about/site/work-in-progress/2022-04-13/seminar/enter-googletest", "about/site/work-in-progress/2022-04-13/seminar/index", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/find-error", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-existing-files", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-store-content-on-read", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/csv", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/other-indexes", "about/site/work-in-progress/2022-04-13/seminar/tasks/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-interface", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-monolithic", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/pass-store-in-ctor", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/store-enum-switch", "about/site/work-in-progress/blink/glt", "about/site/work-in-progress/blink/index", "about/site/work-in-progress/blink/installation", "about/site/work-in-progress/blink/pycon-2023", "about/site/work-in-progress/blink/screenplay", "about/site/work-in-progress/blog-queue/hochkoenig/index", "about/site/work-in-progress/blog-queue/index", "about/site/work-in-progress/blog-queue/sphinx", "about/site/work-in-progress/fh-joanneum/2019/cxx", "about/site/work-in-progress/fh-joanneum/2019/cxx_build", "about/site/work-in-progress/fh-joanneum/2019/cxx_iface", "about/site/work-in-progress/fh-joanneum/2019/cxx_oo_basics", "about/site/work-in-progress/fh-joanneum/2019/cxx_unittest", "about/site/work-in-progress/fh-joanneum/2019/ec", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-1", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-2", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race_fixed", "about/site/work-in-progress/fh-joanneum/2019/git", "about/site/work-in-progress/fh-joanneum/2019/index", "about/site/work-in-progress/fh-joanneum/2019/linux", "about/site/work-in-progress/fh-joanneum/2019/linux_basics", "about/site/work-in-progress/fh-joanneum/2019/linux_dev_mgmt", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor_parallel", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_led_display", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_sensors", "about/site/work-in-progress/fh-joanneum/2019/linux_gpio", "about/site/work-in-progress/fh-joanneum/2019/mt", "about/site/work-in-progress/fh-joanneum/2019/mt_lock", "about/site/work-in-progress/fh-joanneum/2019/mt_wait", "about/site/work-in-progress/fh-joanneum/2019/py_basics", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_avg_display", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_sensors", "about/site/work-in-progress/fh-joanneum/2019/py_web", "about/site/work-in-progress/fh-joanneum/2019/py_web_sensors", "about/site/work-in-progress/fh-joanneum/2019/python", "about/site/work-in-progress/fh-joanneum/2020/index", "about/site/work-in-progress/fh-joanneum/2020/ss2022", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-08", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10-homework", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-21", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-22,24", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-28", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-04-01", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/index", "about/site/work-in-progress/fh-joanneum/2020/ws2022", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-code-general", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-yesno", "about/site/work-in-progress/fh-joanneum/2020/ws2022/lab-exam-2023-01-17", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30-solved", "about/site/work-in-progress/fh-joanneum/2021/index", "about/site/work-in-progress/fh-joanneum/2021/ss2023", "about/site/work-in-progress/fh-joanneum/index", "about/site/work-in-progress/git", "about/site/work-in-progress/index", "about/site/work-in-progress/packaging/index", "about/site/work-in-progress/project-xxx/audio-chip", "about/site/work-in-progress/project-xxx/debian-config", "about/site/work-in-progress/project-xxx/debian-kernel-package", "about/site/work-in-progress/project-xxx/hardware-bringup", "about/site/work-in-progress/project-xxx/index", "about/site/work-in-progress/project-xxx/kernel-upgrade-dirty", "about/site/work-in-progress/project-xxx/wait-hardware", "about/site/work-in-progress/project-xxx/yocto-kernel", "about/site/work-in-progress/python-training", "about/site/work-in-progress/screencast", "about/site/work-in-progress/seo", "about/site/work-in-progress/stacks", "about/site/work-in-progress/todo-misc", "about/site/work-in-progress/web", "blog/2010/07/beagleboard-how-to-repair-nand-also-known-as-40w", "blog/2011/01/porting-to-linux-there-s-always-a-better-way", "blog/2011/01/saving-solid-state-disk-life--gentoo", "blog/2012/04/Why-ps-sucks", "blog/2020/02/fedora-kernel-build", "blog/2020/03/custom-domain-gh-pages", "blog/2020/03/ms-teams-on-linux", "blog/2020/03/sphinx-gh-pages", "blog/2020/04/bbb", "blog/2020/09/traunstein", "blog/2021/08/grintovec", "blog/2021/09/xps13-shim-mok-brick/index", "blog/2022/09/cross-raspi", "blog/index", "index", "trainings/codex", "trainings/exercises", "trainings/index", "trainings/log/detail/2013-10-01/index", "trainings/log/detail/2015-11-30/index", "trainings/log/detail/2019-10-28/LiveHacking", "trainings/log/detail/2019-10-28/index", "trainings/log/detail/2019-11-12/code/BigPlan", "trainings/log/detail/2019-11-12/code/LiveHacking", "trainings/log/detail/2019-11-12/index", "trainings/log/detail/2020-01-10/Proposal", "trainings/log/detail/2020-01-10/index", "trainings/log/detail/2020-03-30/code/exercise-string/index", "trainings/log/detail/2020-03-30/index", "trainings/log/detail/2020-03-30/install-googletest", "trainings/log/detail/2020-03-30/setup", "trainings/log/detail/2020-03-30/vs-code", "trainings/log/detail/2020-05-12/code/index", "trainings/log/detail/2020-05-12/index", "trainings/log/detail/2020-05-18/Livehacking", "trainings/log/detail/2020-05-18/code/index", "trainings/log/detail/2020-05-18/index", "trainings/log/detail/2020-09-07/index", "trainings/log/detail/2020-09-28/index", "trainings/log/detail/2020-10-19/Notebook", "trainings/log/detail/2020-10-19/index", "trainings/log/detail/2020-11-03/index", "trainings/log/detail/2020-11-23/index", "trainings/log/detail/2020-11-30/index", "trainings/log/detail/2021-01-13/Notebook", "trainings/log/detail/2021-01-13/index", "trainings/log/detail/2021-01-13/notebook-wrapper", "trainings/log/detail/2021-02-22/index", "trainings/log/detail/2021-03-08/index", "trainings/log/detail/2021-03-15/Notebook", "trainings/log/detail/2021-03-15/index", "trainings/log/detail/2021-03-22/Notebook", "trainings/log/detail/2021-03-22/index", "trainings/log/detail/2021-03-29/index", "trainings/log/detail/2021-04-12/Notebook", "trainings/log/detail/2021-04-12/index", "trainings/log/detail/2021-04-12/notebook-wrapper", "trainings/log/detail/2021-05-03/Notebook", "trainings/log/detail/2021-05-03/index", "trainings/log/detail/2021-05-03/notebook-wrapper", "trainings/log/detail/2021-05-25/Notebook", "trainings/log/detail/2021-05-25/index", "trainings/log/detail/2021-06-14/index", "trainings/log/detail/2021-07-12/index", "trainings/log/detail/2021-08-02/index", "trainings/log/detail/2021-08-02/notebook", "trainings/log/detail/2021-08-23/Notebook", "trainings/log/detail/2021-08-23/exercises/sap-cleaned", "trainings/log/detail/2021-08-23/index", "trainings/log/detail/2021-08-23/notebook-wrapper", "trainings/log/detail/2021-08-31/Notebook", "trainings/log/detail/2021-08-31/index", "trainings/log/detail/2021-08-31/notebook-wrapper", "trainings/log/detail/2021-11-17/Notebook", "trainings/log/detail/2021-11-17/index", "trainings/log/detail/2021-11-17/notebook-wrapper", "trainings/log/detail/2021-12-01/2021-12-01", "trainings/log/detail/2021-12-01/index", "trainings/log/detail/2021-12-01/notebook-wrapper", "trainings/log/detail/2021-12-06/index", "trainings/log/detail/2022-01-17/index", "trainings/log/detail/2022-01-17/notebook", "trainings/log/detail/2022-01-17/notebook-wrapper", "trainings/log/detail/2022-02-23/Notebook", "trainings/log/detail/2022-02-23/index", "trainings/log/detail/2022-02-23/notebook-wrapper", "trainings/log/detail/2022-03-15/Notebook", "trainings/log/detail/2022-03-15/index", "trainings/log/detail/2022-03-15/notebook-wrapper", "trainings/log/detail/2022-03-23/Notebook", "trainings/log/detail/2022-03-23/index", "trainings/log/detail/2022-03-23/notebook-wrapper", "trainings/log/detail/2022-04-05/index", "trainings/log/detail/2022-04-05/notebook", "trainings/log/detail/2022-04-05/notebook-wrapper", "trainings/log/detail/2022-04-25/index", "trainings/log/detail/2022-04-25/notebook", "trainings/log/detail/2022-04-25/notebook-wrapper", "trainings/log/detail/2022-05-02/index", "trainings/log/detail/2022-05-02/notebook", "trainings/log/detail/2022-05-02/notebook-wrapper", "trainings/log/detail/2022-05-16/index", "trainings/log/detail/2022-05-16/notebook", "trainings/log/detail/2022-05-16/notebook-wrapper", "trainings/log/detail/2022-06-14/2022-05-11", "trainings/log/detail/2022-06-14/index", "trainings/log/detail/2022-07-26/index", "trainings/log/detail/2022-10-03/index", "trainings/log/detail/2022-10-11/index", "trainings/log/detail/2022-10-24/index", "trainings/log/detail/2022-11-07/index", "trainings/log/detail/2022-11-07/notebook", "trainings/log/detail/2022-11-07/notebook-wrapper", "trainings/log/detail/2022-11-16/index", "trainings/log/detail/2022-11-16/notebook", "trainings/log/detail/2022-11-16/notebook-wrapper", "trainings/log/detail/2023-01-23/index", "trainings/log/detail/2023-02-13/index", "trainings/log/detail/2023-03-13-Python-SAP/Demo/demo-notebook", "trainings/log/detail/2023-03-13-Python-SAP/demo", "trainings/log/detail/2023-03-13-Python-SAP/index", "trainings/log/detail/2023-03-13-Python-SAP/notebook", "trainings/log/detail/2023-03-13-Python-SAP/notebook-wrapper", "trainings/log/detail/2023-03-13-Python-SAP/original-agenda", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/index", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/sap-dataset", "trainings/log/detail/2023-03-20--C++-embedded/index", "trainings/log/detail/2023-03-28--Python-Clean-Code/index", "trainings/log/detail/2023-04-18--C++-embedded/index", "trainings/log/detail/2023-04-24--Python-Advanced/agenda", "trainings/log/detail/2023-04-24--Python-Advanced/index", "trainings/log/detail/2023-04-24--Python-Advanced/notebook", "trainings/log/detail/2023-04-24--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-05-15--Python-Basics/agenda", "trainings/log/detail/2023-05-15--Python-Basics/index", "trainings/log/detail/2023-05-15--Python-Basics/notebook", "trainings/log/detail/2023-05-15--Python-Basics/notebook-wrapper", "trainings/log/detail/2023-05-23--Linux-Basics/agenda", "trainings/log/detail/2023-05-23--Linux-Basics/index", "trainings/log/detail/2023-06-20--Python-Basics/agenda", "trainings/log/detail/2023-06-20--Python-Basics/index", "trainings/log/detail/2023-06-20--Python-Basics/notebook", "trainings/log/detail/2023-06-20--Python-Basics/notebook-wrapper", "trainings/log/detail/2023-07-03--CMake/agenda", "trainings/log/detail/2023-07-03--CMake/index", "trainings/log/detail/2023-09-25--Python-Advanced/index", "trainings/log/detail/2023-09-25--Python-Advanced/notebook", "trainings/log/detail/2023-09-25--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-10-XX--Python-Advanced/agenda", "trainings/log/detail/2023-10-XX--Python-Advanced/index", "trainings/log/detail/2023-10-XX--Python-Advanced/notebook", "trainings/log/detail/2023-10-XX--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-XX-XX-C++-Advanced/agenda", "trainings/log/detail/2023-XX-XX-C++-Advanced/index", "trainings/log/detail/2023-XX-XX-C++-embedded/index", "trainings/log/detail/2023-XX-XX-Python-SAP/index", "trainings/log/detail/FH-ECE-19/EC1/2021-05-12/screenplay-checker", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-abc", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-oo", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-unittest", "trainings/log/detail/FH-ECE-19/EC1/Exercises/fh-group", "trainings/log/detail/FH-ECE-19/EC1/Exercises/file-read", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-20-G2", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-21", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Checker-Explanations", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Datatypes", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Functions", "trainings/log/detail/FH-ECE-19/EC1/cloud-computer", "trainings/log/detail/FH-ECE-19/EC1/formales", "trainings/log/detail/FH-ECE-19/EC1/index", "trainings/log/detail/FH-ECE-19/EC1/log", "trainings/log/detail/FH-ECE-19/EC1/lv-de", "trainings/log/detail/FH-ECE-19/EC1/lv-en", "trainings/log/detail/FH-ECE-19/EC1/plan", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-07", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-12", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-28", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-15", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-29", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-12-14", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-10", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-12", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-02-15", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/index", "trainings/log/detail/FH-ECE-19/EC2/index", "trainings/log/detail/FH-ECE-19/EC2/test-material", "trainings/log/detail/FH-ECE-19/index", "trainings/log/detail/index", "trainings/log/index", "trainings/material/index", "trainings/material/soup/c/010-introduction/000-installation/topic", "trainings/material/soup/c/010-introduction/010-introduction/topic", "trainings/material/soup/c/010-introduction/020-getting-started/topic", "trainings/material/soup/c/010-introduction/030-variables-and-arithmetic-expressions/topic", "trainings/material/soup/c/010-introduction/040-exercise-fahrenheit-float/topic", "trainings/material/soup/c/010-introduction/050-the-for-statement/topic", "trainings/material/soup/c/010-introduction/060-exercise-fahrenheit-for/topic", "trainings/material/soup/c/010-introduction/070-symbolic-constants/topic", "trainings/material/soup/c/010-introduction/080-exercise-fahrenheit-cpp/topic", "trainings/material/soup/c/010-introduction/090-character-input-and-output/topic", "trainings/material/soup/c/010-introduction/100-exercise-wc/topic", "trainings/material/soup/c/010-introduction/110-arrays/topic", "trainings/material/soup/c/010-introduction/120-exercise-histogram/topic", "trainings/material/soup/c/010-introduction/130-functions/topic", "trainings/material/soup/c/010-introduction/140-exercise-power-declaration/topic", "trainings/material/soup/c/010-introduction/150-character-arrays/topic", "trainings/material/soup/c/010-introduction/160-exercise-string-read-line/topic", "trainings/material/soup/c/010-introduction/170-external-variables-and-scope/topic", "trainings/material/soup/c/010-introduction/group", "trainings/material/soup/c/020-types-operators-expressions/010-introduction/topic", "trainings/material/soup/c/020-types-operators-expressions/020-variable-names/topic", "trainings/material/soup/c/020-types-operators-expressions/030-data-types-and-sizes/topic", "trainings/material/soup/c/020-types-operators-expressions/040-constants/topic", "trainings/material/soup/c/020-types-operators-expressions/050-declarations/topic", "trainings/material/soup/c/020-types-operators-expressions/060-arithmetic-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/070-relational-and-logical-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/080-type-conversions/topic", "trainings/material/soup/c/020-types-operators-expressions/090-increment-and-decrement-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/100-exercise-string-reduce/topic", "trainings/material/soup/c/020-types-operators-expressions/110-bitwise-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/120-assignment-operators-and-expressions/topic", "trainings/material/soup/c/020-types-operators-expressions/130-conditional-expressions/topic", "trainings/material/soup/c/020-types-operators-expressions/140-precedence-and-order-of-evaluation/topic", "trainings/material/soup/c/020-types-operators-expressions/group", "trainings/material/soup/c/030-program-flow/010-statements-and-blocks/topic", "trainings/material/soup/c/030-program-flow/020-if-else/topic", "trainings/material/soup/c/030-program-flow/030-else-if/topic", "trainings/material/soup/c/030-program-flow/040-switch/topic", "trainings/material/soup/c/030-program-flow/050-loops-while-and-for/topic", "trainings/material/soup/c/030-program-flow/060-loops-do-while/topic", "trainings/material/soup/c/030-program-flow/070-break-and-continue/topic", "trainings/material/soup/c/030-program-flow/080-goto-and-labels/topic", "trainings/material/soup/c/030-program-flow/group", "trainings/material/soup/c/040-functions-and-program-structure/010-basics-of-functions/topic", "trainings/material/soup/c/040-functions-and-program-structure/020-external-variables/topic", "trainings/material/soup/c/040-functions-and-program-structure/030-header-files/topic", "trainings/material/soup/c/040-functions-and-program-structure/040-static-variables/topic", "trainings/material/soup/c/040-functions-and-program-structure/050-c-preprocessor/topic", "trainings/material/soup/c/040-functions-and-program-structure/060-c-preprocessor-advanced/topic", "trainings/material/soup/c/040-functions-and-program-structure/group", "trainings/material/soup/c/050-pointers-and-arrays/010-pointers-and-addresses/topic", "trainings/material/soup/c/050-pointers-and-arrays/020-pointers-and-function-arguments/topic", "trainings/material/soup/c/050-pointers-and-arrays/030-exercise-swap/topic", "trainings/material/soup/c/050-pointers-and-arrays/040-pointers-and-arrays/topic", "trainings/material/soup/c/050-pointers-and-arrays/050-command-line-arguments/topic", "trainings/material/soup/c/050-pointers-and-arrays/group", "trainings/material/soup/c/060-structures/010-basics-of-structures/topic", "trainings/material/soup/c/060-structures/020-structures-and-functions/topic", "trainings/material/soup/c/060-structures/030-typedef/topic", "trainings/material/soup/c/060-structures/group", "trainings/material/soup/c/070-memory/010-malloc/topic", "trainings/material/soup/c/070-memory/020-exercise-linked-list/topic", "trainings/material/soup/c/070-memory/group", "trainings/material/soup/c/080-advanced-language-features/010-volatile/topic", "trainings/material/soup/c/080-advanced-language-features/020-atomic/topic", "trainings/material/soup/c/080-advanced-language-features/030-alignment/topic", "trainings/material/soup/c/080-advanced-language-features/group", "trainings/material/soup/c/090-program-sanity/010-introduction/topic", "trainings/material/soup/c/090-program-sanity/020-integral-types/topic", "trainings/material/soup/c/090-program-sanity/030-discrete-values/topic", "trainings/material/soup/c/090-program-sanity/040-static/topic", "trainings/material/soup/c/090-program-sanity/050-const/topic", "trainings/material/soup/c/090-program-sanity/060-struct-initialization/topic", "trainings/material/soup/c/090-program-sanity/070-explicit-type-safety/topic", "trainings/material/soup/c/090-program-sanity/080-valgrind/topic", "trainings/material/soup/c/090-program-sanity/group", "trainings/material/soup/c/100-performance/010-introduction/topic", "trainings/material/soup/c/100-performance/020-computebound/topic", "trainings/material/soup/c/100-performance/030-memory/topic", "trainings/material/soup/c/100-performance/group", "trainings/material/soup/c/110-profiling/010-introduction/topic", "trainings/material/soup/c/110-profiling/020-gprof/topic", "trainings/material/soup/c/110-profiling/030-callgrind/topic", "trainings/material/soup/c/110-profiling/040-oprofile/topic", "trainings/material/soup/c/110-profiling/group", "trainings/material/soup/c/group", "trainings/material/soup/clean-code/book-messages", "trainings/material/soup/clean-code/craft-sw", "trainings/material/soup/clean-code/group", "trainings/material/soup/clean-code/intro-python/livehacking", "trainings/material/soup/cmake/basics", "trainings/material/soup/cmake/configure_file", "trainings/material/soup/cmake/cxx-and-rants", "trainings/material/soup/cmake/external-dependencies", "trainings/material/soup/cmake/group", "trainings/material/soup/cmake/installation", "trainings/material/soup/cmake/libraries", "trainings/material/soup/cmake/optional-code-approach-1", "trainings/material/soup/cmake/optional-code-approach-2", "trainings/material/soup/cmake/optional-code-problem", "trainings/material/soup/cmake/shared-libraries", "trainings/material/soup/cmake/structure", "trainings/material/soup/cmake/targets-properties", "trainings/material/soup/cmake/testing", "trainings/material/soup/cxx-code/index", "trainings/material/soup/cxx-design-patterns/abstract-factory/abstract-factory", "trainings/material/soup/cxx-design-patterns/adapter/adapter", "trainings/material/soup/cxx-design-patterns/command/command", "trainings/material/soup/cxx-design-patterns/command/socialdb", "trainings/material/soup/cxx-design-patterns/composite/composite", "trainings/material/soup/cxx-design-patterns/decorator/decorator", "trainings/material/soup/cxx-design-patterns/group", "trainings/material/soup/cxx-design-patterns/heating-screenplay/heating-screenplay", "trainings/material/soup/cxx-design-patterns/interpreter/interpreter", "trainings/material/soup/cxx-design-patterns/observer/observer", "trainings/material/soup/cxx-design-patterns/oo-principles", "trainings/material/soup/cxx-design-patterns/proxy/proxy", "trainings/material/soup/cxx-design-patterns/sensor-hierarchy", "trainings/material/soup/cxx-design-patterns/singleton/singleton", "trainings/material/soup/cxx-design-patterns/uml/uml", "trainings/material/soup/cxx-exercises/design-patterns/abstract-factory", "trainings/material/soup/cxx-exercises/design-patterns/adapter", "trainings/material/soup/cxx-exercises/design-patterns/command", "trainings/material/soup/cxx-exercises/design-patterns/composite", "trainings/material/soup/cxx-exercises/design-patterns/decorator", "trainings/material/soup/cxx-exercises/design-patterns/group", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-and-adapter", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-basic", "trainings/material/soup/cxx-exercises/design-patterns/observer", "trainings/material/soup/cxx-exercises/design-patterns/proxy-remote", "trainings/material/soup/cxx-exercises/design-patterns/proxy-round", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible-strict", "trainings/material/soup/cxx-exercises/design-patterns/singleton-inflexible", "trainings/material/soup/cxx-exercises/design-patterns/solutions/abstract-factory", "trainings/material/soup/cxx-exercises/design-patterns/solutions/adapter", "trainings/material/soup/cxx-exercises/design-patterns/solutions/command", "trainings/material/soup/cxx-exercises/design-patterns/solutions/composite", "trainings/material/soup/cxx-exercises/design-patterns/solutions/decorator", "trainings/material/soup/cxx-exercises/design-patterns/solutions/group", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-and-adapter", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-basic", "trainings/material/soup/cxx-exercises/design-patterns/solutions/observer", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-remote", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-round", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible-strict", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-inflexible", "trainings/material/soup/cxx-exercises/display-led-stripe-nopoly/display-led-stripe-nopoly", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-loop-function", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-no-polymorphism", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-random-sensor", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/group", "trainings/material/soup/cxx-exercises/group", "trainings/material/soup/cxx-exercises/hysteresis-nopoly/hysteresis-nopoly", "trainings/material/soup/cxx-exercises/oo-shapes/shapes", "trainings/material/soup/cxx-exercises/project-setup", "trainings/material/soup/cxx-exercises/sensor-avg-nopoly/sensor-avg-nopoly", "trainings/material/soup/cxx-exercises/sensor-interface/sensor-interface", "trainings/material/soup/cxx-exercises/sensor-w1-factory/sensor-w1-factory", "trainings/material/soup/cxx-exercises/sensor-w1/sensor-w1", "trainings/material/soup/cxx-exercises/sensors-core-nopoly/sensor-const-nopoly", "trainings/material/soup/cxx-exercises/sensors-core-nopoly/sensor-mock-nopoly", "trainings/material/soup/cxx-exercises/sensors-core-nopoly/sensor-random-nopoly", "trainings/material/soup/cxx-exercises/stl/algo", "trainings/material/soup/cxx-exercises/stl/filter-generic", "trainings/material/soup/cxx-exercises/stl/filter-greater-10", "trainings/material/soup/cxx-exercises/stl/filter-odd", "trainings/material/soup/cxx-exercises/stl/group", "trainings/material/soup/cxx-exercises/stl/map", "trainings/material/soup/cxx-exercises/stl/sensor-repository/group", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-no-overwrite", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-sunny", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-not-found", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-sunny", "trainings/material/soup/cxx-exercises/stl/sensor-repository/no-memleak", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-not-found", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-sunny", "trainings/material/soup/cxx-exercises/stl/sensor-repository/size-const", "trainings/material/soup/cxx-exercises/stl/uniq", "trainings/material/soup/cxx-exercises/stl/vector", "trainings/material/soup/cxx-exercises/switch-mock-nopoly/switch-mock-nopoly", "trainings/material/soup/cxx-todo/index", "trainings/material/soup/cxx/cxx_class_templates/code/index", "trainings/material/soup/cxx/cxx_class_templates/screenplay", "trainings/material/soup/cxx/cxx_class_templates/topic", "trainings/material/soup/cxx/cxx_dynamic_memory/code/index", "trainings/material/soup/cxx/cxx_dynamic_memory/screenplay", "trainings/material/soup/cxx/cxx_dynamic_memory/topic", "trainings/material/soup/cxx/cxx_global_initialization/code/index", "trainings/material/soup/cxx/cxx_global_initialization/screenplay", "trainings/material/soup/cxx/cxx_global_initialization/topic", "trainings/material/soup/cxx/cxx_inheritance_virtual/code/index", "trainings/material/soup/cxx/cxx_inheritance_virtual/screenplay", "trainings/material/soup/cxx/cxx_inheritance_virtual/topic", "trainings/material/soup/cxx/cxx_ownership_raii/code/index", "trainings/material/soup/cxx/cxx_ownership_raii/screenplay", "trainings/material/soup/cxx/cxx_ownership_raii/topic", "trainings/material/soup/cxx/cxx_stl_container_intro/code/index", "trainings/material/soup/cxx/cxx_stl_container_intro/screenplay", "trainings/material/soup/cxx/cxx_stl_container_intro/topic", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/code/index", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/screenplay", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/topic", "trainings/material/soup/cxx/group", "trainings/material/soup/cxx03/001-introduction/topic", "trainings/material/soup/cxx03/020-data-encapsulation/c", "trainings/material/soup/cxx03/020-data-encapsulation/copy-basics", "trainings/material/soup/cxx03/020-data-encapsulation/cpp-introduction", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-custom", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-default", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-dtor", "trainings/material/soup/cxx03/020-data-encapsulation/group", "trainings/material/soup/cxx03/020-data-encapsulation/initializer-list", "trainings/material/soup/cxx03/020-data-encapsulation/object-copy", "trainings/material/soup/cxx03/030-functions-and-methods/010-overloading/topic", "trainings/material/soup/cxx03/030-functions-and-methods/020-methods/topic", "trainings/material/soup/cxx03/030-functions-and-methods/030-const/topic", "trainings/material/soup/cxx03/030-functions-and-methods/040-this/topic", "trainings/material/soup/cxx03/030-functions-and-methods/050-references/topic", "trainings/material/soup/cxx03/030-functions-and-methods/060-static/topic", "trainings/material/soup/cxx03/030-functions-and-methods/065-static-member-variables/topic", "trainings/material/soup/cxx03/030-functions-and-methods/070-operators/topic", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-cuboid", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point3d", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-rectangle", "trainings/material/soup/cxx03/030-functions-and-methods/group", "trainings/material/soup/cxx03/040-exceptions/010-basics/topic", "trainings/material/soup/cxx03/040-exceptions/020-try-catch/topic", "trainings/material/soup/cxx03/040-exceptions/group", "trainings/material/soup/cxx03/050-templates/010-function-templates/topic", "trainings/material/soup/cxx03/050-templates/020-class-templates/topic", "trainings/material/soup/cxx03/050-templates/group", "trainings/material/soup/cxx03/060-stl/010-basics/algo-copy", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-algo", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-basics", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-difference", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-out-of-range", "trainings/material/soup/cxx03/060-stl/010-basics/topic", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/topic", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-and-copy", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-basic", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-pointer-arith", "trainings/material/soup/cxx03/060-stl/020-algorithm/binary_search", "trainings/material/soup/cxx03/060-stl/020-algorithm/copy", "trainings/material/soup/cxx03/060-stl/020-algorithm/find", "trainings/material/soup/cxx03/060-stl/020-algorithm/find_if", "trainings/material/soup/cxx03/060-stl/020-algorithm/for_each", "trainings/material/soup/cxx03/060-stl/020-algorithm/group", "trainings/material/soup/cxx03/060-stl/020-algorithm/lower_bound", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse_copy", "trainings/material/soup/cxx03/060-stl/020-algorithm/sort", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/basics", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/group", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/list", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/vector", "trainings/material/soup/cxx03/060-stl/050-associative-containers/basics", "trainings/material/soup/cxx03/060-stl/050-associative-containers/group", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-init-fill", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-insert", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-remove", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-search", "trainings/material/soup/cxx03/060-stl/050-associative-containers/multimap", "trainings/material/soup/cxx03/060-stl/allocators/allocator_basics", "trainings/material/soup/cxx03/060-stl/allocators/group", "trainings/material/soup/cxx03/060-stl/exercises/group", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/exercise", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/group", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/solution", "trainings/material/soup/cxx03/060-stl/group", "trainings/material/soup/cxx03/070-dynamic-memory/000-todo/topic", "trainings/material/soup/cxx03/070-dynamic-memory/group", "trainings/material/soup/cxx03/100-inheritance-oo-design/basics", "trainings/material/soup/cxx03/100-inheritance-oo-design/destructor", "trainings/material/soup/cxx03/100-inheritance-oo-design/group", "trainings/material/soup/cxx03/100-inheritance-oo-design/interface", "trainings/material/soup/cxx03/100-inheritance-oo-design/polymorphism", "trainings/material/soup/cxx03/100-inheritance-oo-design/private-protected", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-destructor", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-method", "trainings/material/soup/cxx03/900-standard-library-miscellanea/group", "trainings/material/soup/cxx03/900-standard-library-miscellanea/string/topic", "trainings/material/soup/cxx03/exercises-misc/american-flag/exercise", "trainings/material/soup/cxx03/exercises-misc/fh-questions", "trainings/material/soup/cxx03/exercises-misc/group", "trainings/material/soup/cxx03/exercises-misc/sum-integers-from-stdin/exercise", "trainings/material/soup/cxx03/exercises-userdb/group", "trainings/material/soup/cxx03/exercises-userdb/user-access-methods/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-const-members/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-const/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-default-ctor/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-simple-method/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-to-cxx-ctor/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-insert/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-find_if/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-notfound-exception/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-search/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-vector/exercise", "trainings/material/soup/cxx03/group", "trainings/material/soup/cxx11/010-introduction/group", "trainings/material/soup/cxx11/010-introduction/history", "trainings/material/soup/cxx11/010-introduction/overview-livehacking", "trainings/material/soup/cxx11/020-new-language-features/010-strongly-typed-enums/topic", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/group", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/implementor-view", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/intro", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/mess", "trainings/material/soup/cxx11/020-new-language-features/050-delegating-ctor/topic", "trainings/material/soup/cxx11/020-new-language-features/055-constexpr/topic", "trainings/material/soup/cxx11/020-new-language-features/060-move/afterword", "trainings/material/soup/cxx11/020-new-language-features/060-move/group", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-smartptr-move", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-string-move", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-using-string-move", "trainings/material/soup/cxx11/020-new-language-features/060-move/overview", "trainings/material/soup/cxx11/020-new-language-features/070-miscellaneous/topic", "trainings/material/soup/cxx11/020-new-language-features/auto", "trainings/material/soup/cxx11/020-new-language-features/concepts/group", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-1-conceptless", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-2-conceptless-error", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-3-concept-integral", "trainings/material/soup/cxx11/020-new-language-features/concepts/links", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-1-good-old-func", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-2-need-template", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-4-concept-has-size", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-5-concept-index-ret-double", "trainings/material/soup/cxx11/020-new-language-features/coroutines/group", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibo-generator", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibonacci", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-h", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-hello", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/simplest", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-iter", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-next", "trainings/material/soup/cxx11/020-new-language-features/default", "trainings/material/soup/cxx11/020-new-language-features/delete", "trainings/material/soup/cxx11/020-new-language-features/final", "trainings/material/soup/cxx11/020-new-language-features/group", "trainings/material/soup/cxx11/020-new-language-features/lambda/group", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-capture", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor-pitfall", "trainings/material/soup/cxx11/020-new-language-features/modules", "trainings/material/soup/cxx11/020-new-language-features/override", "trainings/material/soup/cxx11/020-new-language-features/range-based-for", "trainings/material/soup/cxx11/020-new-language-features/range-based-for-map", "trainings/material/soup/cxx11/020-new-language-features/ranges/good-bad", "trainings/material/soup/cxx11/020-new-language-features/ranges/group", "trainings/material/soup/cxx11/020-new-language-features/ranges/intro", "trainings/material/soup/cxx11/020-new-language-features/ranges/links", "trainings/material/soup/cxx11/020-new-language-features/structured-binding", "trainings/material/soup/cxx11/030-smart-pointers/040-closing-words/topic", "trainings/material/soup/cxx11/030-smart-pointers/group", "trainings/material/soup/cxx11/030-smart-pointers/introduction", "trainings/material/soup/cxx11/030-smart-pointers/introduction-livehack", "trainings/material/soup/cxx11/030-smart-pointers/sharedptr", "trainings/material/soup/cxx11/030-smart-pointers/uniqueptr", "trainings/material/soup/cxx11/030-smart-pointers/weakptr", "trainings/material/soup/cxx11/035-perfect-forwarding/topic", "trainings/material/soup/cxx11/040-bind-function/010-bind/topic", "trainings/material/soup/cxx11/040-bind-function/020-function/topic", "trainings/material/soup/cxx11/040-bind-function/group", "trainings/material/soup/cxx11/050-multithreading/010-introduction/topic", "trainings/material/soup/cxx11/050-multithreading/020-thread/topic", "trainings/material/soup/cxx11/050-multithreading/030-race-conditions/topic", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/atomics", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/mutex", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/scoped-locking", "trainings/material/soup/cxx11/050-multithreading/condition-variable", "trainings/material/soup/cxx11/050-multithreading/group", "trainings/material/soup/cxx11/050-multithreading/promise-future", "trainings/material/soup/cxx11/100-miscellaneous/010-chrono/topic", "trainings/material/soup/cxx11/100-miscellaneous/any-variant-optional/variant", "trainings/material/soup/cxx11/100-miscellaneous/group", "trainings/material/soup/cxx11/exercises/bag-copy", "trainings/material/soup/cxx11/exercises/bag-shared", "trainings/material/soup/cxx11/exercises/bag-unique", "trainings/material/soup/cxx11/exercises/group", "trainings/material/soup/cxx11/filesystem/topic", "trainings/material/soup/cxx11/group", "trainings/material/soup/graph", "trainings/material/soup/index", "trainings/material/soup/kernel/cdev-auto/screenplay", "trainings/material/soup/kernel/cdev-auto/slides", "trainings/material/soup/kernel/cdev-auto/topic", "trainings/material/soup/kernel/cdev-file-operations/screenplay", "trainings/material/soup/kernel/cdev-file-operations/slides", "trainings/material/soup/kernel/cdev-file-operations/topic", "trainings/material/soup/kernel/cdev-first-functionality/slides", "trainings/material/soup/kernel/cdev-first-functionality/topic", "trainings/material/soup/kernel/cdev-manual/screenplay", "trainings/material/soup/kernel/cdev-manual/slides", "trainings/material/soup/kernel/cdev-manual/topic", "trainings/material/soup/kernel/cdev-multiple-devices/slides", "trainings/material/soup/kernel/cdev-multiple-devices/topic", "trainings/material/soup/kernel/cdev-refactoring/screenplay", "trainings/material/soup/kernel/cdev-refactoring/slides", "trainings/material/soup/kernel/cdev-refactoring/topic", "trainings/material/soup/kernel/dma/slides", "trainings/material/soup/kernel/dma/topic", "trainings/material/soup/kernel/fedora-kernel-build/screenplay", "trainings/material/soup/kernel/fedora-kernel-build/topic", "trainings/material/soup/kernel/fedora-module-build/screenplay", "trainings/material/soup/kernel/fedora-module-build/topic", "trainings/material/soup/kernel/group", "trainings/material/soup/kernel/hello-world/slides", "trainings/material/soup/kernel/hello-world/topic", "trainings/material/soup/kernel/interrupt-coding/slides", "trainings/material/soup/kernel/interrupt-coding/topic", "trainings/material/soup/kernel/interrupt/slides", "trainings/material/soup/kernel/interrupt/topic", "trainings/material/soup/kernel/iomemory/slides", "trainings/material/soup/kernel/iomemory/topic", "trainings/material/soup/kernel/kmalloc/slides", "trainings/material/soup/kernel/kmalloc/topic", "trainings/material/soup/kernel/list/slides", "trainings/material/soup/kernel/list/topic", "trainings/material/soup/kernel/mutex-coding/slides", "trainings/material/soup/kernel/mutex-coding/topic", "trainings/material/soup/kernel/mutex/slides", "trainings/material/soup/kernel/mutex/topic", "trainings/material/soup/kernel/netdev/slides", "trainings/material/soup/kernel/netdev/topic", "trainings/material/soup/kernel/pci/slides", "trainings/material/soup/kernel/pci/topic", "trainings/material/soup/kernel/process-vs-atomic/slides", "trainings/material/soup/kernel/process-vs-atomic/topic", "trainings/material/soup/kernel/raspi-kernel-build/story", "trainings/material/soup/kernel/raspi-kernel-build/topic", "trainings/material/soup/kernel/sample-project", "trainings/material/soup/kernel/spinlock-coding/slides", "trainings/material/soup/kernel/spinlock-coding/topic", "trainings/material/soup/kernel/spinlock/slides", "trainings/material/soup/kernel/spinlock/topic", "trainings/material/soup/kernel/stub-sysprog-dup/topic", "trainings/material/soup/kernel/time_timer-coding/slides", "trainings/material/soup/kernel/time_timer-coding/topic", "trainings/material/soup/kernel/time_timer/slides", "trainings/material/soup/kernel/time_timer/topic", "trainings/material/soup/kernel/todo", "trainings/material/soup/kernel/usermem/screenplay", "trainings/material/soup/kernel/usermem/slides", "trainings/material/soup/kernel/usermem/topic", "trainings/material/soup/kernel/waitqueue/screenplay", "trainings/material/soup/kernel/waitqueue/slides", "trainings/material/soup/kernel/waitqueue/topic", "trainings/material/soup/kernel/workqueue/screenplay", "trainings/material/soup/kernel/workqueue/slides", "trainings/material/soup/kernel/workqueue/topic", "trainings/material/soup/linux/basics/archiving-compression/exercises", "trainings/material/soup/linux/basics/archiving-compression/group", "trainings/material/soup/linux/basics/archiving-compression/gzip", "trainings/material/soup/linux/basics/archiving-compression/overview", "trainings/material/soup/linux/basics/archiving-compression/tar", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G1", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G2", "trainings/material/soup/linux/basics/exercises/group", "trainings/material/soup/linux/basics/group", "trainings/material/soup/linux/basics/intro/demo-everything-is-a-file", "trainings/material/soup/linux/basics/intro/environment", "trainings/material/soup/linux/basics/intro/exercises/fh-questions", "trainings/material/soup/linux/basics/intro/group", "trainings/material/soup/linux/basics/intro/login", "trainings/material/soup/linux/basics/intro/overview", "trainings/material/soup/linux/basics/intro/process", "trainings/material/soup/linux/basics/intro/process-tree", "trainings/material/soup/linux/basics/intro/wsl", "trainings/material/soup/linux/basics/io-redirection-pipes/exercises", "trainings/material/soup/linux/basics/io-redirection-pipes/group", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection-swap-stdout-stderr", "trainings/material/soup/linux/basics/io-redirection-pipes/pipes", "trainings/material/soup/linux/basics/permissions/basics", "trainings/material/soup/linux/basics/permissions/exercises/credentials", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions-nocheat", "trainings/material/soup/linux/basics/permissions/exercises/group", "trainings/material/soup/linux/basics/permissions/exercises/private-directory", "trainings/material/soup/linux/basics/permissions/exercises/private-directory-question", "trainings/material/soup/linux/basics/permissions/exercises/public-directory", "trainings/material/soup/linux/basics/permissions/exercises/public-directory-question", "trainings/material/soup/linux/basics/permissions/exercises/shared-file", "trainings/material/soup/linux/basics/permissions/group", "trainings/material/soup/linux/basics/permissions/setuid", "trainings/material/soup/linux/basics/permissions/setuid-livedemo", "trainings/material/soup/linux/basics/permissions/sticky", "trainings/material/soup/linux/basics/permissions/umask", "trainings/material/soup/linux/basics/shell/commandline", "trainings/material/soup/linux/basics/shell/configfiles", "trainings/material/soup/linux/basics/shell/cp", "trainings/material/soup/linux/basics/shell/cwd", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/copy-tree", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-copy-files", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-create-files", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-move-files", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/group", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/mkdir-p-rm-r", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-rf", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-tree", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/verify-hierarchy", "trainings/material/soup/linux/basics/shell/exercises/fh-questions", "trainings/material/soup/linux/basics/shell/exercises/group", "trainings/material/soup/linux/basics/shell/exercises/ls/dev-types", "trainings/material/soup/linux/basics/shell/exercises/ls/etc-passwd-size", "trainings/material/soup/linux/basics/shell/exercises/ls/group", "trainings/material/soup/linux/basics/shell/exercises/ls/home-permissions", "trainings/material/soup/linux/basics/shell/file_dir_create_rm", "trainings/material/soup/linux/basics/shell/group", "trainings/material/soup/linux/basics/shell/links", "trainings/material/soup/linux/basics/shell/ls", "trainings/material/soup/linux/basics/shell/mv", "trainings/material/soup/linux/basics/shell/paths", "trainings/material/soup/linux/basics/text-tools/cat", "trainings/material/soup/linux/basics/text-tools/cut", "trainings/material/soup/linux/basics/text-tools/exercises", "trainings/material/soup/linux/basics/text-tools/find", "trainings/material/soup/linux/basics/text-tools/grep", "trainings/material/soup/linux/basics/text-tools/group", "trainings/material/soup/linux/basics/text-tools/head-tail", "trainings/material/soup/linux/basics/text-tools/less", "trainings/material/soup/linux/basics/text-tools/overview", "trainings/material/soup/linux/drafts/group", "trainings/material/soup/linux/drafts/yocto", "trainings/material/soup/linux/group", "trainings/material/soup/linux/hardware/brushless-motor/topic", "trainings/material/soup/linux/hardware/can/10-intro", "trainings/material/soup/linux/hardware/can/20-interfaces", "trainings/material/soup/linux/hardware/can/30-programming", "trainings/material/soup/linux/hardware/can/40-harware", "trainings/material/soup/linux/hardware/can/group", "trainings/material/soup/linux/hardware/group", "trainings/material/soup/linux/hardware/i2c/topic", "trainings/material/soup/linux/hardware/pwm/topic", "trainings/material/soup/linux/hardware/w1/topic", "trainings/material/soup/linux/ssh/basics", "trainings/material/soup/linux/ssh/exercises/copy-file", "trainings/material/soup/linux/ssh/exercises/copy-tree", "trainings/material/soup/linux/ssh/exercises/group", "trainings/material/soup/linux/ssh/exercises/pubkey", "trainings/material/soup/linux/ssh/group", "trainings/material/soup/linux/ssh/key-pair", "trainings/material/soup/linux/ssh/links", "trainings/material/soup/linux/ssh/portforwarding", "trainings/material/soup/linux/ssh/scp", "trainings/material/soup/linux/ssh/sshfs", "trainings/material/soup/linux/sysprog/basics/errorhandling", "trainings/material/soup/linux/sysprog/basics/group", "trainings/material/soup/linux/sysprog/basics/syscalls", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-file", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-network", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-timer", "trainings/material/soup/linux/sysprog/blocking-io/group", "trainings/material/soup/linux/sysprog/file-io/basics", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-copy", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-hole", "trainings/material/soup/linux/sysprog/file-io/duplicate", "trainings/material/soup/linux/sysprog/file-io/example-O_CREAT", "trainings/material/soup/linux/sysprog/file-io/example-O_EXCL", "trainings/material/soup/linux/sysprog/file-io/example-O_RDONLY", "trainings/material/soup/linux/sysprog/file-io/example-O_WRONLY", "trainings/material/soup/linux/sysprog/file-io/exercise-sensor-read", "trainings/material/soup/linux/sysprog/file-io/group", "trainings/material/soup/linux/sysprog/file-io/misc", "trainings/material/soup/linux/sysprog/group", "trainings/material/soup/linux/sysprog/intro-hw/get", "trainings/material/soup/linux/sysprog/intro-hw/group", "trainings/material/soup/linux/sysprog/intro-hw/sysfs-gpio", "trainings/material/soup/linux/sysprog/intro-hw/watch", "trainings/material/soup/linux/sysprog/posix-threads/010-introduction/topic", "trainings/material/soup/linux/sysprog/posix-threads/020-lifecycle/topic", "trainings/material/soup/linux/sysprog/posix-threads/030-exercise-pthcreate-race-condition/topic", "trainings/material/soup/linux/sysprog/posix-threads/040-mutex/topic", "trainings/material/soup/linux/sysprog/posix-threads/050-exercise-mutex/topic", "trainings/material/soup/linux/sysprog/posix-threads/060-condition-variable/topic", "trainings/material/soup/linux/sysprog/posix-threads/070-exercise-condition-variable/topic", "trainings/material/soup/linux/sysprog/posix-threads/080-miscellaneous/topic", "trainings/material/soup/linux/sysprog/posix-threads/090-last-warning/topic", "trainings/material/soup/linux/sysprog/posix-threads/group", "trainings/material/soup/linux/sysprog/posix-threads/locked-trylock", "trainings/material/soup/linux/sysprog/process/commandline", "trainings/material/soup/linux/sysprog/process/group", "trainings/material/soup/linux/sysprog/process/tree", "trainings/material/soup/linux/sysprog/scheduling/basics", "trainings/material/soup/linux/sysprog/scheduling/group", "trainings/material/soup/linux/sysprog/scheduling/processes-and-threads", "trainings/material/soup/linux/sysprog/scheduling/questions", "trainings/material/soup/linux/sysprog/scheduling/realtime", "trainings/material/soup/linux/sysprog/scheduling/realtime-api", "trainings/material/soup/linux/sysprog/scheduling/wakup-latency", "trainings/material/soup/linux/sysprog/sysprog_events/code/index", "trainings/material/soup/linux/sysprog/sysprog_events/screenplay", "trainings/material/soup/linux/sysprog/sysprog_events/topic", "trainings/material/soup/linux/sysprog/sysprog_ipc/code/index", "trainings/material/soup/linux/sysprog/sysprog_ipc/screenplay", "trainings/material/soup/linux/sysprog/sysprog_ipc/slides", "trainings/material/soup/linux/sysprog/sysprog_ipc/topic", "trainings/material/soup/linux/sysprog/sysprog_signals/code/index", "trainings/material/soup/linux/sysprog/sysprog_signals/screenplay", "trainings/material/soup/linux/sysprog/sysprog_signals/slides", "trainings/material/soup/linux/sysprog/sysprog_signals/topic", "trainings/material/soup/linux/toolchain/basics/topic", "trainings/material/soup/linux/toolchain/cmake/cross", "trainings/material/soup/linux/toolchain/cmake/local", "trainings/material/soup/linux/toolchain/cross/basics", "trainings/material/soup/linux/toolchain/cross/group", "trainings/material/soup/linux/toolchain/exercises/cross-build", "trainings/material/soup/linux/toolchain/exercises/fh-2022-questions", "trainings/material/soup/linux/toolchain/exercises/group", "trainings/material/soup/linux/toolchain/exercises/native-build", "trainings/material/soup/linux/toolchain/exercises/raspberry-toolchain", "trainings/material/soup/linux/toolchain/group", "trainings/material/soup/linux/toolchain/raspberry-pi/group", "trainings/material/soup/linux/toolchain/raspberry-pi/linaro", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-details", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-docker-fedora", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-setup", "trainings/material/soup/linux/toolchain/separate-compilation/topic", "trainings/material/soup/linux/toolchain/shared-libraries/topic", "trainings/material/soup/linux/toolchain/static-library/topic", "trainings/material/soup/python/advanced/closures/topic", "trainings/material/soup/python/advanced/comprehensions/topic", "trainings/material/soup/python/advanced/context-mgr/topic", "trainings/material/soup/python/advanced/decorators/topic", "trainings/material/soup/python/advanced/exceptions/topic", "trainings/material/soup/python/advanced/exec/topic", "trainings/material/soup/python/advanced/group", "trainings/material/soup/python/advanced/iteration-generation/iteration-generation/topic", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/fibonacci-generator", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/iterator-protocol", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/topic", "trainings/material/soup/python/advanced/iteration-generation/topic", "trainings/material/soup/python/advanced/modules", "trainings/material/soup/python/advanced/multithreading/basics", "trainings/material/soup/python/advanced/multithreading/group", "trainings/material/soup/python/advanced/multithreading/mutex", "trainings/material/soup/python/advanced/multithreading/questions", "trainings/material/soup/python/advanced/oo/abc/topic", "trainings/material/soup/python/advanced/oo/classes-and-dicts/topic", "trainings/material/soup/python/advanced/oo/constructor/topic", "trainings/material/soup/python/advanced/oo/group", "trainings/material/soup/python/advanced/oo/inheritance/topic", "trainings/material/soup/python/advanced/oo/methods/topic", "trainings/material/soup/python/advanced/oo/namedtuple/topic", "trainings/material/soup/python/advanced/oo/operator-overloading/topic", "trainings/material/soup/python/advanced/oo/properties/topic", "trainings/material/soup/python/advanced/oo/str-repr/topic", "trainings/material/soup/python/advanced/starargs/topic", "trainings/material/soup/python/basics/group", "trainings/material/soup/python/basics/installation", "trainings/material/soup/python/basics/python_0110_blahblah/topic", "trainings/material/soup/python/basics/python_0120_helloworld/topic", "trainings/material/soup/python/basics/python_0125_running/topic", "trainings/material/soup/python/basics/python_0130_syntax_etc/topic", "trainings/material/soup/python/basics/python_0139_commandline_argv/topic", "trainings/material/soup/python/basics/python_0140_variables/topic", "trainings/material/soup/python/basics/python_0150_datatypes_overview/topic", "trainings/material/soup/python/basics/python_0150_datatypes_overview_compound/topic", "trainings/material/soup/python/basics/python_0160_boolean/topic", "trainings/material/soup/python/basics/python_0170_if/topic", "trainings/material/soup/python/basics/python_0193_while/topic", "trainings/material/soup/python/basics/python_0200_sequential_types/topic", "trainings/material/soup/python/basics/python_0210_indexing_slicing/topic", "trainings/material/soup/python/basics/python_0220_for/topic", "trainings/material/soup/python/basics/python_0225_range/topic", "trainings/material/soup/python/basics/python_0250_refs_flat_deep_copy/topic", "trainings/material/soup/python/basics/python_0270_functions/screenplay-scoping", "trainings/material/soup/python/basics/python_0270_functions/slideshow", "trainings/material/soup/python/basics/python_0270_functions/topic", "trainings/material/soup/python/basics/python_0300_strings/topic", "trainings/material/soup/python/basics/python_0310_strings_formatting/topic", "trainings/material/soup/python/basics/python_0320_strings_methods/topic", "trainings/material/soup/python/basics/python_0400_lists/topic", "trainings/material/soup/python/basics/python_0450_dictionaries/topic", "trainings/material/soup/python/basics/python_0460_sets/topic", "trainings/material/soup/python/basics/python_0500_files/topic", "trainings/material/soup/python/basics/python_1000_function_objects/topic", "trainings/material/soup/python/drafts/argparse/topic", "trainings/material/soup/python/drafts/group", "trainings/material/soup/python/drafts/matplotlib/topic", "trainings/material/soup/python/drafts/setuptools/topic", "trainings/material/soup/python/exercises/csv/csv-db", "trainings/material/soup/python/exercises/csv/csv-module", "trainings/material/soup/python/exercises/csv/group", "trainings/material/soup/python/exercises/group", "trainings/material/soup/python/exercises/herdt/boolean", "trainings/material/soup/python/exercises/herdt/exercise_while_even_numbers", "trainings/material/soup/python/exercises/herdt/greet", "trainings/material/soup/python/exercises/herdt/group", "trainings/material/soup/python/exercises/herdt/max_numbers", "trainings/material/soup/python/exercises/herdt/swap", "trainings/material/soup/python/exercises/herdt/username_password", "trainings/material/soup/python/exercises/legacy/cmdline_digit", "trainings/material/soup/python/exercises/legacy/dict_keyerror", "trainings/material/soup/python/exercises/legacy/distill", "trainings/material/soup/python/exercises/legacy/fibonacci-generator", "trainings/material/soup/python/exercises/legacy/for_primeness", "trainings/material/soup/python/exercises/legacy/group", "trainings/material/soup/python/exercises/legacy/join_function", "trainings/material/soup/python/exercises/legacy/max_numbers", "trainings/material/soup/python/exercises/legacy/max_numbers_function", "trainings/material/soup/python/exercises/legacy/mixed_list_executable", "trainings/material/soup/python/exercises/legacy/mixed_list_interactive", "trainings/material/soup/python/exercises/legacy/passwd", "trainings/material/soup/python/exercises/legacy/primeness_function", "trainings/material/soup/python/exercises/legacy/revert", "trainings/material/soup/python/exercises/legacy/string-rightjustify", "trainings/material/soup/python/exercises/legacy/uniq_function", "trainings/material/soup/python/exercises/legacy/uniq_generator", "trainings/material/soup/python/exercises/legacy/wc", "trainings/material/soup/python/exercises/legacy/while_primeness", "trainings/material/soup/python/exercises/sensors/group", "trainings/material/soup/python/exercises/sensors/project-setup", "trainings/material/soup/python/exercises/sensors/sensor-const", "trainings/material/soup/python/exercises/userdb/csvdictreader", "trainings/material/soup/python/exercises/userdb/csvdictreader-function", "trainings/material/soup/python/exercises/userdb/csvreader", "trainings/material/soup/python/exercises/userdb/csvreader-function", "trainings/material/soup/python/exercises/userdb/group", "trainings/material/soup/python/exercises/userdb/mqtt-publish-csv", "trainings/material/soup/python/exercises/userdb/user-class-person", "trainings/material/soup/python/exercises/userdb/user_json", "trainings/material/soup/python/exercises/userdb/userdb_csv", "trainings/material/soup/python/graph", "trainings/material/soup/python/group", "trainings/material/soup/python/link-collection", "trainings/material/soup/python/misc/ai/group", "trainings/material/soup/python/misc/ai/k-means", "trainings/material/soup/python/misc/ai/linear-regression/code", "trainings/material/soup/python/misc/ai/linear-regression/history_data", "trainings/material/soup/python/misc/ai/linear-regression/linear_regression", "trainings/material/soup/python/misc/ai/linear-regression/topic", "trainings/material/soup/python/misc/ai/machine-learning-intro", "trainings/material/soup/python/misc/context_manager/screenplay", "trainings/material/soup/python/misc/context_manager/slides", "trainings/material/soup/python/misc/context_manager/topic", "trainings/material/soup/python/misc/csv/topic", "trainings/material/soup/python/misc/db/dbapi2", "trainings/material/soup/python/misc/db/group", "trainings/material/soup/python/misc/db/postgres", "trainings/material/soup/python/misc/db/sqlite3", "trainings/material/soup/python/misc/encoding/topic", "trainings/material/soup/python/misc/group", "trainings/material/soup/python/misc/import", "trainings/material/soup/python/misc/mqtt/topic", "trainings/material/soup/python/misc/pandas/add_row", "trainings/material/soup/python/misc/pandas/basics", "trainings/material/soup/python/misc/pandas/filters", "trainings/material/soup/python/misc/pandas/group", "trainings/material/soup/python/misc/pandas/iloc", "trainings/material/soup/python/misc/pandas/indexes", "trainings/material/soup/python/misc/pandas/loc", "trainings/material/soup/python/misc/pandas/mod_col", "trainings/material/soup/python/misc/python_5550_xml_etree/topic", "trainings/material/soup/python/misc/vscode", "trainings/material/soup/python/pcap-exam", "trainings/material/soup/python/swdev/group", "trainings/material/soup/python/swdev/pip/screenplay", "trainings/material/soup/python/swdev/pip/slides", "trainings/material/soup/python/swdev/pip/topic", "trainings/material/soup/python/swdev/pypi", "trainings/material/soup/python/swdev/pytest/group", "trainings/material/soup/python/swdev/pytest/intro", "trainings/material/soup/python/swdev/unittest", "trainings/material/soup/python/swdev/venv/screenplay", "trainings/material/soup/python/swdev/venv/slides", "trainings/material/soup/python/swdev/venv/topic", "trainings/material/soup/unittest/group", "trainings/material/soup/unittest/unittest_gtest_basics/code/index", "trainings/material/soup/unittest/unittest_gtest_basics/screenplay", "trainings/material/soup/unittest/unittest_gtest_basics/topic", "trainings/material/soup/unittest/unittest_gtest_cmake/screenplay", "trainings/material/soup/unittest/unittest_gtest_cmake/topic", "trainings/material/soup/unittest/unittest_gtest_fixture/code/index", "trainings/material/soup/unittest/unittest_gtest_fixture/screenplay", "trainings/material/soup/unittest/unittest_gtest_fixture/topic", "trainings/org", "trainings/repertoire/_hidden/kettner-lfs-2013-09-16", "trainings/repertoire/bash", "trainings/repertoire/c-like/c", "trainings/repertoire/c-like/c-advanced", "trainings/repertoire/c-like/cxx", "trainings/repertoire/c-like/cxx11", "trainings/repertoire/c-like/index", "trainings/repertoire/cmake", "trainings/repertoire/design-patterns/design-patterns", "trainings/repertoire/embedded", "trainings/repertoire/kernel-programming-basics", "trainings/repertoire/linux-basics", "trainings/repertoire/make", "trainings/repertoire/python/advanced", "trainings/repertoire/python/basics", "trainings/repertoire/python/herdt", "trainings/repertoire/raspi-hands-on", "trainings/repertoire/svn", "trainings/repertoire/sysprog/basics", "trainings/repertoire/sysprog/fortgeschrittenes", "trainings/repertoire/sysprog/index", "trainings/repertoire/sysprog/multithreading", "trainings/repertoire/sysprog/network", "trainings/repertoire/unittests"], "filenames": ["about/myself/contact.rst", "about/myself/cv-de.rst", "about/myself/index.rst", "about/myself/projects-de.rst", "about/myself/skills-de.rst", "about/site/courses/index.rst", "about/site/courses/samples/detail/2021-04-12/Notebook.ipynb", "about/site/courses/samples/detail/2021-04-12/index.rst", "about/site/courses/samples/detail/2021-04-12/notebook-wrapper.rst", "about/site/courses/samples/detail/index.rst", "about/site/courses/samples/index.rst", "about/site/courses/templates.rst", "about/site/index.rst", "about/site/opentraining/index.rst", "about/site/opentraining/misc/draft-topics/index.rst", "about/site/opentraining/misc/index.rst", "about/site/opentraining/misc/s5/index.rst", "about/site/opentraining/misc/s5/tests/index.rst", "about/site/opentraining/misc/s5/tests/test-slides.rst", "about/site/opentraining/misc/screencast.rst", "about/site/opentraining/misc/topics-to-write.rst", "about/site/opentraining/netidee/index.rst", "about/site/opentraining/netidee/netidee-antrag.rst", "about/site/opentraining/netidee/netidee-video-2min.rst", "about/site/opentraining/usecases/agenda-subtract-known.rst", "about/site/opentraining/usecases/duration.rst", "about/site/opentraining/usecases/index.rst", "about/site/opentraining/usecases/linking.rst", "about/site/opentraining/usecases/menu.rst", "about/site/opentraining/usecases/slides.rst", "about/site/recipes/emoji.rst", "about/site/recipes/index.rst", "about/site/recipes/isoamsa.rst", "about/site/recipes/isoamsr.rst", "about/site/recipes/isonum.rst", "about/site/recipes/layout-test.rst", "about/site/recipes/mathml.rst", "about/site/recipes/rst-cheatsheet.rst", "about/site/recipes/sphinxish.rst", "about/site/work-in-progress/2022-04-13/index.rst", "about/site/work-in-progress/2022-04-13/seminar/block-before-googletest.rst", "about/site/work-in-progress/2022-04-13/seminar/clean-code-craftsmanship.rst", "about/site/work-in-progress/2022-04-13/seminar/enter-googletest.rst", "about/site/work-in-progress/2022-04-13/seminar/index.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/find-error.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-existing-files.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-store-content-on-read.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/csv.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/other-indexes.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-interface.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-monolithic.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/pass-store-in-ctor.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/store-enum-switch.rst", "about/site/work-in-progress/blink/glt.rst", "about/site/work-in-progress/blink/index.rst", "about/site/work-in-progress/blink/installation.rst", "about/site/work-in-progress/blink/pycon-2023.rst", "about/site/work-in-progress/blink/screenplay.rst", "about/site/work-in-progress/blog-queue/hochkoenig/index.rst", "about/site/work-in-progress/blog-queue/index.rst", "about/site/work-in-progress/blog-queue/sphinx.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_build.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_iface.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_oo_basics.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_unittest.rst", "about/site/work-in-progress/fh-joanneum/2019/ec.rst", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-1.rst", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-2.rst", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race.rst", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race_fixed.rst", "about/site/work-in-progress/fh-joanneum/2019/git.rst", "about/site/work-in-progress/fh-joanneum/2019/index.rst", "about/site/work-in-progress/fh-joanneum/2019/linux.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_basics.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_dev_mgmt.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor_parallel.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_led_display.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_sensors.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_gpio.rst", "about/site/work-in-progress/fh-joanneum/2019/mt.rst", "about/site/work-in-progress/fh-joanneum/2019/mt_lock.rst", "about/site/work-in-progress/fh-joanneum/2019/mt_wait.rst", "about/site/work-in-progress/fh-joanneum/2019/py_basics.rst", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_avg_display.rst", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_sensors.rst", "about/site/work-in-progress/fh-joanneum/2019/py_web.rst", "about/site/work-in-progress/fh-joanneum/2019/py_web_sensors.rst", "about/site/work-in-progress/fh-joanneum/2019/python.rst", "about/site/work-in-progress/fh-joanneum/2020/index.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-08.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10-homework.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-21.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-22,24.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-28.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-04-01.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/index.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-code-general.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-yesno.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022/lab-exam-2023-01-17.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30-solved.rst", "about/site/work-in-progress/fh-joanneum/2021/index.rst", "about/site/work-in-progress/fh-joanneum/2021/ss2023.rst", "about/site/work-in-progress/fh-joanneum/index.rst", "about/site/work-in-progress/git.rst", "about/site/work-in-progress/index.rst", "about/site/work-in-progress/packaging/index.rst", "about/site/work-in-progress/project-xxx/audio-chip.rst", "about/site/work-in-progress/project-xxx/debian-config.rst", "about/site/work-in-progress/project-xxx/debian-kernel-package.rst", "about/site/work-in-progress/project-xxx/hardware-bringup.rst", "about/site/work-in-progress/project-xxx/index.rst", "about/site/work-in-progress/project-xxx/kernel-upgrade-dirty.rst", "about/site/work-in-progress/project-xxx/wait-hardware.rst", "about/site/work-in-progress/project-xxx/yocto-kernel.rst", "about/site/work-in-progress/python-training.rst", "about/site/work-in-progress/screencast.rst", "about/site/work-in-progress/seo.rst", "about/site/work-in-progress/stacks.rst", "about/site/work-in-progress/todo-misc.rst", "about/site/work-in-progress/web.rst", "blog/2010/07/beagleboard-how-to-repair-nand-also-known-as-40w.rst", "blog/2011/01/porting-to-linux-there-s-always-a-better-way.rst", "blog/2011/01/saving-solid-state-disk-life--gentoo.rst", "blog/2012/04/Why-ps-sucks.rst", "blog/2020/02/fedora-kernel-build.rst", "blog/2020/03/custom-domain-gh-pages.rst", "blog/2020/03/ms-teams-on-linux.rst", "blog/2020/03/sphinx-gh-pages.rst", "blog/2020/04/bbb.rst", "blog/2020/09/traunstein.rst", "blog/2021/08/grintovec.rst", "blog/2021/09/xps13-shim-mok-brick/index.rst", "blog/2022/09/cross-raspi.rst", "blog/index.rst", "index.rst", "trainings/codex.rst", "trainings/exercises.rst", "trainings/index.rst", "trainings/log/detail/2013-10-01/index.rst", "trainings/log/detail/2015-11-30/index.rst", "trainings/log/detail/2019-10-28/LiveHacking.ipynb", "trainings/log/detail/2019-10-28/index.rst", "trainings/log/detail/2019-11-12/code/BigPlan.ipynb", "trainings/log/detail/2019-11-12/code/LiveHacking.ipynb", "trainings/log/detail/2019-11-12/index.rst", "trainings/log/detail/2020-01-10/Proposal.rst", "trainings/log/detail/2020-01-10/index.rst", "trainings/log/detail/2020-03-30/code/exercise-string/index.rst", "trainings/log/detail/2020-03-30/index.rst", "trainings/log/detail/2020-03-30/install-googletest.rst", "trainings/log/detail/2020-03-30/setup.rst", "trainings/log/detail/2020-03-30/vs-code.rst", "trainings/log/detail/2020-05-12/code/index.rst", "trainings/log/detail/2020-05-12/index.rst", "trainings/log/detail/2020-05-18/Livehacking.ipynb", "trainings/log/detail/2020-05-18/code/index.rst", "trainings/log/detail/2020-05-18/index.rst", "trainings/log/detail/2020-09-07/index.rst", "trainings/log/detail/2020-09-28/index.rst", "trainings/log/detail/2020-10-19/Notebook.ipynb", "trainings/log/detail/2020-10-19/index.rst", "trainings/log/detail/2020-11-03/index.rst", "trainings/log/detail/2020-11-23/index.rst", "trainings/log/detail/2020-11-30/index.rst", "trainings/log/detail/2021-01-13/Notebook.ipynb", "trainings/log/detail/2021-01-13/index.rst", "trainings/log/detail/2021-01-13/notebook-wrapper.rst", "trainings/log/detail/2021-02-22/index.rst", "trainings/log/detail/2021-03-08/index.rst", "trainings/log/detail/2021-03-15/Notebook.ipynb", "trainings/log/detail/2021-03-15/index.rst", "trainings/log/detail/2021-03-22/Notebook.ipynb", "trainings/log/detail/2021-03-22/index.rst", "trainings/log/detail/2021-03-29/index.rst", "trainings/log/detail/2021-04-12/Notebook.ipynb", "trainings/log/detail/2021-04-12/index.rst", "trainings/log/detail/2021-04-12/notebook-wrapper.rst", "trainings/log/detail/2021-05-03/Notebook.ipynb", "trainings/log/detail/2021-05-03/index.rst", "trainings/log/detail/2021-05-03/notebook-wrapper.rst", "trainings/log/detail/2021-05-25/Notebook.ipynb", "trainings/log/detail/2021-05-25/index.rst", "trainings/log/detail/2021-06-14/index.rst", "trainings/log/detail/2021-07-12/index.rst", "trainings/log/detail/2021-08-02/index.rst", "trainings/log/detail/2021-08-02/notebook.ipynb", "trainings/log/detail/2021-08-23/Notebook.ipynb", "trainings/log/detail/2021-08-23/exercises/sap-cleaned.rst", "trainings/log/detail/2021-08-23/index.rst", "trainings/log/detail/2021-08-23/notebook-wrapper.rst", "trainings/log/detail/2021-08-31/Notebook.ipynb", "trainings/log/detail/2021-08-31/index.rst", "trainings/log/detail/2021-08-31/notebook-wrapper.rst", "trainings/log/detail/2021-11-17/Notebook.ipynb", "trainings/log/detail/2021-11-17/index.rst", "trainings/log/detail/2021-11-17/notebook-wrapper.rst", "trainings/log/detail/2021-12-01/2021-12-01.ipynb", "trainings/log/detail/2021-12-01/index.rst", "trainings/log/detail/2021-12-01/notebook-wrapper.rst", "trainings/log/detail/2021-12-06/index.rst", "trainings/log/detail/2022-01-17/index.rst", "trainings/log/detail/2022-01-17/notebook.ipynb", "trainings/log/detail/2022-01-17/notebook-wrapper.rst", "trainings/log/detail/2022-02-23/Notebook.ipynb", "trainings/log/detail/2022-02-23/index.rst", "trainings/log/detail/2022-02-23/notebook-wrapper.rst", "trainings/log/detail/2022-03-15/Notebook.ipynb", "trainings/log/detail/2022-03-15/index.rst", "trainings/log/detail/2022-03-15/notebook-wrapper.rst", "trainings/log/detail/2022-03-23/Notebook.ipynb", "trainings/log/detail/2022-03-23/index.rst", "trainings/log/detail/2022-03-23/notebook-wrapper.rst", "trainings/log/detail/2022-04-05/index.rst", "trainings/log/detail/2022-04-05/notebook.ipynb", "trainings/log/detail/2022-04-05/notebook-wrapper.rst", "trainings/log/detail/2022-04-25/index.rst", "trainings/log/detail/2022-04-25/notebook.ipynb", "trainings/log/detail/2022-04-25/notebook-wrapper.rst", "trainings/log/detail/2022-05-02/index.rst", "trainings/log/detail/2022-05-02/notebook.ipynb", "trainings/log/detail/2022-05-02/notebook-wrapper.rst", "trainings/log/detail/2022-05-16/index.rst", "trainings/log/detail/2022-05-16/notebook.ipynb", "trainings/log/detail/2022-05-16/notebook-wrapper.rst", "trainings/log/detail/2022-06-14/2022-05-11.rst", "trainings/log/detail/2022-06-14/index.rst", "trainings/log/detail/2022-07-26/index.rst", "trainings/log/detail/2022-10-03/index.rst", "trainings/log/detail/2022-10-11/index.rst", "trainings/log/detail/2022-10-24/index.rst", "trainings/log/detail/2022-11-07/index.rst", "trainings/log/detail/2022-11-07/notebook.ipynb", "trainings/log/detail/2022-11-07/notebook-wrapper.rst", "trainings/log/detail/2022-11-16/index.rst", "trainings/log/detail/2022-11-16/notebook.ipynb", "trainings/log/detail/2022-11-16/notebook-wrapper.rst", "trainings/log/detail/2023-01-23/index.rst", "trainings/log/detail/2023-02-13/index.rst", "trainings/log/detail/2023-03-13-Python-SAP/Demo/demo-notebook.ipynb", "trainings/log/detail/2023-03-13-Python-SAP/demo.rst", "trainings/log/detail/2023-03-13-Python-SAP/index.rst", "trainings/log/detail/2023-03-13-Python-SAP/notebook.ipynb", "trainings/log/detail/2023-03-13-Python-SAP/notebook-wrapper.rst", "trainings/log/detail/2023-03-13-Python-SAP/original-agenda.rst", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/index.rst", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/sap-dataset.ipynb", "trainings/log/detail/2023-03-20--C++-embedded/index.rst", "trainings/log/detail/2023-03-28--Python-Clean-Code/index.rst", "trainings/log/detail/2023-04-18--C++-embedded/index.rst", "trainings/log/detail/2023-04-24--Python-Advanced/agenda.rst", "trainings/log/detail/2023-04-24--Python-Advanced/index.rst", "trainings/log/detail/2023-04-24--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-04-24--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-05-15--Python-Basics/agenda.rst", "trainings/log/detail/2023-05-15--Python-Basics/index.rst", "trainings/log/detail/2023-05-15--Python-Basics/notebook.ipynb", "trainings/log/detail/2023-05-15--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/2023-05-23--Linux-Basics/agenda.rst", "trainings/log/detail/2023-05-23--Linux-Basics/index.rst", "trainings/log/detail/2023-06-20--Python-Basics/agenda.rst", "trainings/log/detail/2023-06-20--Python-Basics/index.rst", "trainings/log/detail/2023-06-20--Python-Basics/notebook.ipynb", "trainings/log/detail/2023-06-20--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/2023-07-03--CMake/agenda.rst", "trainings/log/detail/2023-07-03--CMake/index.rst", "trainings/log/detail/2023-09-25--Python-Advanced/index.rst", "trainings/log/detail/2023-09-25--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-09-25--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-10-XX--Python-Advanced/agenda.rst", "trainings/log/detail/2023-10-XX--Python-Advanced/index.rst", "trainings/log/detail/2023-10-XX--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-10-XX--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-XX-XX-C++-Advanced/agenda.rst", "trainings/log/detail/2023-XX-XX-C++-Advanced/index.rst", "trainings/log/detail/2023-XX-XX-C++-embedded/index.rst", "trainings/log/detail/2023-XX-XX-Python-SAP/index.rst", "trainings/log/detail/FH-ECE-19/EC1/2021-05-12/screenplay-checker.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-abc.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-oo.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-unittest.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/fh-group.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/file-read.rst", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-20-G2.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-21.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Checker-Explanations.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Datatypes.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Functions.ipynb", "trainings/log/detail/FH-ECE-19/EC1/cloud-computer.rst", "trainings/log/detail/FH-ECE-19/EC1/formales.rst", "trainings/log/detail/FH-ECE-19/EC1/index.rst", "trainings/log/detail/FH-ECE-19/EC1/log.rst", "trainings/log/detail/FH-ECE-19/EC1/lv-de.rst", "trainings/log/detail/FH-ECE-19/EC1/lv-en.rst", "trainings/log/detail/FH-ECE-19/EC1/plan.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-07.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-12.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-28.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-15.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-29.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-12-14.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-10.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-12.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-02-15.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/index.rst", "trainings/log/detail/FH-ECE-19/EC2/index.rst", "trainings/log/detail/FH-ECE-19/EC2/test-material.rst", "trainings/log/detail/FH-ECE-19/index.rst", "trainings/log/detail/index.rst", "trainings/log/index.rst", "trainings/material/index.rst", "trainings/material/soup/c/010-introduction/000-installation/topic.rst", "trainings/material/soup/c/010-introduction/010-introduction/topic.rst", "trainings/material/soup/c/010-introduction/020-getting-started/topic.rst", "trainings/material/soup/c/010-introduction/030-variables-and-arithmetic-expressions/topic.rst", "trainings/material/soup/c/010-introduction/040-exercise-fahrenheit-float/topic.rst", "trainings/material/soup/c/010-introduction/050-the-for-statement/topic.rst", "trainings/material/soup/c/010-introduction/060-exercise-fahrenheit-for/topic.rst", "trainings/material/soup/c/010-introduction/070-symbolic-constants/topic.rst", "trainings/material/soup/c/010-introduction/080-exercise-fahrenheit-cpp/topic.rst", "trainings/material/soup/c/010-introduction/090-character-input-and-output/topic.rst", "trainings/material/soup/c/010-introduction/100-exercise-wc/topic.rst", "trainings/material/soup/c/010-introduction/110-arrays/topic.rst", "trainings/material/soup/c/010-introduction/120-exercise-histogram/topic.rst", "trainings/material/soup/c/010-introduction/130-functions/topic.rst", "trainings/material/soup/c/010-introduction/140-exercise-power-declaration/topic.rst", "trainings/material/soup/c/010-introduction/150-character-arrays/topic.rst", "trainings/material/soup/c/010-introduction/160-exercise-string-read-line/topic.rst", "trainings/material/soup/c/010-introduction/170-external-variables-and-scope/topic.rst", "trainings/material/soup/c/010-introduction/group.rst", "trainings/material/soup/c/020-types-operators-expressions/010-introduction/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/020-variable-names/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/030-data-types-and-sizes/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/040-constants/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/050-declarations/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/060-arithmetic-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/070-relational-and-logical-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/080-type-conversions/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/090-increment-and-decrement-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/100-exercise-string-reduce/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/110-bitwise-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/120-assignment-operators-and-expressions/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/130-conditional-expressions/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/140-precedence-and-order-of-evaluation/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/group.rst", "trainings/material/soup/c/030-program-flow/010-statements-and-blocks/topic.rst", "trainings/material/soup/c/030-program-flow/020-if-else/topic.rst", "trainings/material/soup/c/030-program-flow/030-else-if/topic.rst", "trainings/material/soup/c/030-program-flow/040-switch/topic.rst", "trainings/material/soup/c/030-program-flow/050-loops-while-and-for/topic.rst", "trainings/material/soup/c/030-program-flow/060-loops-do-while/topic.rst", "trainings/material/soup/c/030-program-flow/070-break-and-continue/topic.rst", "trainings/material/soup/c/030-program-flow/080-goto-and-labels/topic.rst", "trainings/material/soup/c/030-program-flow/group.rst", "trainings/material/soup/c/040-functions-and-program-structure/010-basics-of-functions/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/020-external-variables/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/030-header-files/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/040-static-variables/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/050-c-preprocessor/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/060-c-preprocessor-advanced/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/group.rst", "trainings/material/soup/c/050-pointers-and-arrays/010-pointers-and-addresses/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/020-pointers-and-function-arguments/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/030-exercise-swap/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/040-pointers-and-arrays/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/050-command-line-arguments/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/group.rst", "trainings/material/soup/c/060-structures/010-basics-of-structures/topic.rst", "trainings/material/soup/c/060-structures/020-structures-and-functions/topic.rst", "trainings/material/soup/c/060-structures/030-typedef/topic.rst", "trainings/material/soup/c/060-structures/group.rst", "trainings/material/soup/c/070-memory/010-malloc/topic.rst", "trainings/material/soup/c/070-memory/020-exercise-linked-list/topic.rst", "trainings/material/soup/c/070-memory/group.rst", "trainings/material/soup/c/080-advanced-language-features/010-volatile/topic.rst", "trainings/material/soup/c/080-advanced-language-features/020-atomic/topic.rst", "trainings/material/soup/c/080-advanced-language-features/030-alignment/topic.rst", "trainings/material/soup/c/080-advanced-language-features/group.rst", "trainings/material/soup/c/090-program-sanity/010-introduction/topic.rst", "trainings/material/soup/c/090-program-sanity/020-integral-types/topic.rst", "trainings/material/soup/c/090-program-sanity/030-discrete-values/topic.rst", "trainings/material/soup/c/090-program-sanity/040-static/topic.rst", "trainings/material/soup/c/090-program-sanity/050-const/topic.rst", "trainings/material/soup/c/090-program-sanity/060-struct-initialization/topic.rst", "trainings/material/soup/c/090-program-sanity/070-explicit-type-safety/topic.rst", "trainings/material/soup/c/090-program-sanity/080-valgrind/topic.rst", "trainings/material/soup/c/090-program-sanity/group.rst", "trainings/material/soup/c/100-performance/010-introduction/topic.rst", "trainings/material/soup/c/100-performance/020-computebound/topic.rst", "trainings/material/soup/c/100-performance/030-memory/topic.rst", "trainings/material/soup/c/100-performance/group.rst", "trainings/material/soup/c/110-profiling/010-introduction/topic.rst", "trainings/material/soup/c/110-profiling/020-gprof/topic.rst", "trainings/material/soup/c/110-profiling/030-callgrind/topic.rst", "trainings/material/soup/c/110-profiling/040-oprofile/topic.rst", "trainings/material/soup/c/110-profiling/group.rst", "trainings/material/soup/c/group.rst", "trainings/material/soup/clean-code/book-messages.rst", "trainings/material/soup/clean-code/craft-sw.rst", "trainings/material/soup/clean-code/group.rst", "trainings/material/soup/clean-code/intro-python/livehacking.rst", "trainings/material/soup/cmake/basics.rst", "trainings/material/soup/cmake/configure_file.rst", "trainings/material/soup/cmake/cxx-and-rants.rst", "trainings/material/soup/cmake/external-dependencies.rst", "trainings/material/soup/cmake/group.rst", "trainings/material/soup/cmake/installation.rst", "trainings/material/soup/cmake/libraries.rst", "trainings/material/soup/cmake/optional-code-approach-1.rst", "trainings/material/soup/cmake/optional-code-approach-2.rst", "trainings/material/soup/cmake/optional-code-problem.rst", "trainings/material/soup/cmake/shared-libraries.rst", "trainings/material/soup/cmake/structure.rst", "trainings/material/soup/cmake/targets-properties.rst", "trainings/material/soup/cmake/testing.rst", "trainings/material/soup/cxx-code/index.rst", "trainings/material/soup/cxx-design-patterns/abstract-factory/abstract-factory.rst", "trainings/material/soup/cxx-design-patterns/adapter/adapter.rst", "trainings/material/soup/cxx-design-patterns/command/command.rst", "trainings/material/soup/cxx-design-patterns/command/socialdb.rst", "trainings/material/soup/cxx-design-patterns/composite/composite.rst", "trainings/material/soup/cxx-design-patterns/decorator/decorator.rst", "trainings/material/soup/cxx-design-patterns/group.rst", "trainings/material/soup/cxx-design-patterns/heating-screenplay/heating-screenplay.rst", "trainings/material/soup/cxx-design-patterns/interpreter/interpreter.rst", "trainings/material/soup/cxx-design-patterns/observer/observer.rst", "trainings/material/soup/cxx-design-patterns/oo-principles.rst", "trainings/material/soup/cxx-design-patterns/proxy/proxy.rst", "trainings/material/soup/cxx-design-patterns/sensor-hierarchy.rst", "trainings/material/soup/cxx-design-patterns/singleton/singleton.rst", "trainings/material/soup/cxx-design-patterns/uml/uml.rst", "trainings/material/soup/cxx-exercises/design-patterns/abstract-factory.rst", "trainings/material/soup/cxx-exercises/design-patterns/adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/command.rst", "trainings/material/soup/cxx-exercises/design-patterns/composite.rst", "trainings/material/soup/cxx-exercises/design-patterns/decorator.rst", "trainings/material/soup/cxx-exercises/design-patterns/group.rst", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-and-adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-basic.rst", "trainings/material/soup/cxx-exercises/design-patterns/observer.rst", "trainings/material/soup/cxx-exercises/design-patterns/proxy-remote.rst", "trainings/material/soup/cxx-exercises/design-patterns/proxy-round.rst", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible.rst", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible-strict.rst", "trainings/material/soup/cxx-exercises/design-patterns/singleton-inflexible.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/abstract-factory.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/command.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/composite.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/decorator.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/group.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-and-adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-basic.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/observer.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-remote.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-round.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible-strict.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-inflexible.rst", "trainings/material/soup/cxx-exercises/display-led-stripe-nopoly/display-led-stripe-nopoly.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-loop-function.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-no-polymorphism.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-random-sensor.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/group.rst", "trainings/material/soup/cxx-exercises/group.rst", "trainings/material/soup/cxx-exercises/hysteresis-nopoly/hysteresis-nopoly.rst", "trainings/material/soup/cxx-exercises/oo-shapes/shapes.rst", "trainings/material/soup/cxx-exercises/project-setup.rst", "trainings/material/soup/cxx-exercises/sensor-avg-nopoly/sensor-avg-nopoly.rst", "trainings/material/soup/cxx-exercises/sensor-interface/sensor-interface.rst", "trainings/material/soup/cxx-exercises/sensor-w1-factory/sensor-w1-factory.rst", "trainings/material/soup/cxx-exercises/sensor-w1/sensor-w1.rst", "trainings/material/soup/cxx-exercises/sensors-core-nopoly/sensor-const-nopoly.rst", "trainings/material/soup/cxx-exercises/sensors-core-nopoly/sensor-mock-nopoly.rst", "trainings/material/soup/cxx-exercises/sensors-core-nopoly/sensor-random-nopoly.rst", "trainings/material/soup/cxx-exercises/stl/algo.rst", "trainings/material/soup/cxx-exercises/stl/filter-generic.rst", "trainings/material/soup/cxx-exercises/stl/filter-greater-10.rst", "trainings/material/soup/cxx-exercises/stl/filter-odd.rst", "trainings/material/soup/cxx-exercises/stl/group.rst", "trainings/material/soup/cxx-exercises/stl/map.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/group.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-no-overwrite.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-sunny.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-not-found.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-sunny.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/no-memleak.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-not-found.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-sunny.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/size-const.rst", "trainings/material/soup/cxx-exercises/stl/uniq.rst", "trainings/material/soup/cxx-exercises/stl/vector.rst", "trainings/material/soup/cxx-exercises/switch-mock-nopoly/switch-mock-nopoly.rst", "trainings/material/soup/cxx-todo/index.rst", "trainings/material/soup/cxx/cxx_class_templates/code/index.rst", "trainings/material/soup/cxx/cxx_class_templates/screenplay.rst", "trainings/material/soup/cxx/cxx_class_templates/topic.rst", "trainings/material/soup/cxx/cxx_dynamic_memory/code/index.rst", "trainings/material/soup/cxx/cxx_dynamic_memory/screenplay.rst", "trainings/material/soup/cxx/cxx_dynamic_memory/topic.rst", "trainings/material/soup/cxx/cxx_global_initialization/code/index.rst", "trainings/material/soup/cxx/cxx_global_initialization/screenplay.rst", "trainings/material/soup/cxx/cxx_global_initialization/topic.rst", "trainings/material/soup/cxx/cxx_inheritance_virtual/code/index.rst", "trainings/material/soup/cxx/cxx_inheritance_virtual/screenplay.rst", "trainings/material/soup/cxx/cxx_inheritance_virtual/topic.rst", "trainings/material/soup/cxx/cxx_ownership_raii/code/index.rst", "trainings/material/soup/cxx/cxx_ownership_raii/screenplay.rst", "trainings/material/soup/cxx/cxx_ownership_raii/topic.rst", "trainings/material/soup/cxx/cxx_stl_container_intro/code/index.rst", "trainings/material/soup/cxx/cxx_stl_container_intro/screenplay.rst", "trainings/material/soup/cxx/cxx_stl_container_intro/topic.rst", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/code/index.rst", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/screenplay.rst", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/topic.rst", "trainings/material/soup/cxx/group.rst", "trainings/material/soup/cxx03/001-introduction/topic.rst", "trainings/material/soup/cxx03/020-data-encapsulation/c.rst", "trainings/material/soup/cxx03/020-data-encapsulation/copy-basics.rst", "trainings/material/soup/cxx03/020-data-encapsulation/cpp-introduction.rst", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-custom.rst", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-default.rst", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-dtor.rst", "trainings/material/soup/cxx03/020-data-encapsulation/group.rst", "trainings/material/soup/cxx03/020-data-encapsulation/initializer-list.rst", "trainings/material/soup/cxx03/020-data-encapsulation/object-copy.rst", "trainings/material/soup/cxx03/030-functions-and-methods/010-overloading/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/020-methods/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/030-const/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/040-this/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/050-references/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/060-static/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/065-static-member-variables/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/070-operators/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-cuboid.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point3d.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-rectangle.rst", "trainings/material/soup/cxx03/030-functions-and-methods/group.rst", "trainings/material/soup/cxx03/040-exceptions/010-basics/topic.rst", "trainings/material/soup/cxx03/040-exceptions/020-try-catch/topic.rst", "trainings/material/soup/cxx03/040-exceptions/group.rst", "trainings/material/soup/cxx03/050-templates/010-function-templates/topic.rst", "trainings/material/soup/cxx03/050-templates/020-class-templates/topic.rst", "trainings/material/soup/cxx03/050-templates/group.rst", "trainings/material/soup/cxx03/060-stl/010-basics/algo-copy.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-algo.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-basics.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-difference.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-out-of-range.rst", "trainings/material/soup/cxx03/060-stl/010-basics/topic.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/topic.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-and-copy.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-basic.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-pointer-arith.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/binary_search.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/copy.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/find.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/find_if.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/for_each.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/group.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/lower_bound.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse_copy.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/sort.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/basics.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/group.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/list.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/vector.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/basics.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/group.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-init-fill.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-insert.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-remove.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-search.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/multimap.rst", "trainings/material/soup/cxx03/060-stl/allocators/allocator_basics.rst", "trainings/material/soup/cxx03/060-stl/allocators/group.rst", "trainings/material/soup/cxx03/060-stl/exercises/group.rst", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/exercise.rst", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/group.rst", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/solution.rst", "trainings/material/soup/cxx03/060-stl/group.rst", "trainings/material/soup/cxx03/070-dynamic-memory/000-todo/topic.rst", "trainings/material/soup/cxx03/070-dynamic-memory/group.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/basics.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/destructor.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/group.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/interface.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/polymorphism.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/private-protected.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-destructor.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-method.rst", "trainings/material/soup/cxx03/900-standard-library-miscellanea/group.rst", "trainings/material/soup/cxx03/900-standard-library-miscellanea/string/topic.rst", "trainings/material/soup/cxx03/exercises-misc/american-flag/exercise.rst", "trainings/material/soup/cxx03/exercises-misc/fh-questions.rst", "trainings/material/soup/cxx03/exercises-misc/group.rst", "trainings/material/soup/cxx03/exercises-misc/sum-integers-from-stdin/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/group.rst", "trainings/material/soup/cxx03/exercises-userdb/user-access-methods/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-const-members/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-const/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-default-ctor/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-simple-method/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-to-cxx-ctor/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-insert/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-find_if/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-notfound-exception/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-search/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-vector/exercise.rst", "trainings/material/soup/cxx03/group.rst", "trainings/material/soup/cxx11/010-introduction/group.rst", "trainings/material/soup/cxx11/010-introduction/history.rst", "trainings/material/soup/cxx11/010-introduction/overview-livehacking.rst", "trainings/material/soup/cxx11/020-new-language-features/010-strongly-typed-enums/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/group.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/implementor-view.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/mess.rst", "trainings/material/soup/cxx11/020-new-language-features/050-delegating-ctor/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/055-constexpr/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/afterword.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/group.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-smartptr-move.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-string-move.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-using-string-move.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/overview.rst", "trainings/material/soup/cxx11/020-new-language-features/070-miscellaneous/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/auto.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/group.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-1-conceptless.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-2-conceptless-error.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-3-concept-integral.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/links.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-1-good-old-func.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-2-need-template.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-4-concept-has-size.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-5-concept-index-ret-double.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/group.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibo-generator.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibonacci.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-h.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-hello.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/simplest.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-iter.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-next.rst", "trainings/material/soup/cxx11/020-new-language-features/default.rst", "trainings/material/soup/cxx11/020-new-language-features/delete.rst", "trainings/material/soup/cxx11/020-new-language-features/final.rst", "trainings/material/soup/cxx11/020-new-language-features/group.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/group.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-capture.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor-pitfall.rst", "trainings/material/soup/cxx11/020-new-language-features/modules.rst", "trainings/material/soup/cxx11/020-new-language-features/override.rst", "trainings/material/soup/cxx11/020-new-language-features/range-based-for.rst", "trainings/material/soup/cxx11/020-new-language-features/range-based-for-map.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/good-bad.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/group.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/links.rst", "trainings/material/soup/cxx11/020-new-language-features/structured-binding.rst", "trainings/material/soup/cxx11/030-smart-pointers/040-closing-words/topic.rst", "trainings/material/soup/cxx11/030-smart-pointers/group.rst", "trainings/material/soup/cxx11/030-smart-pointers/introduction.rst", "trainings/material/soup/cxx11/030-smart-pointers/introduction-livehack.rst", "trainings/material/soup/cxx11/030-smart-pointers/sharedptr.rst", "trainings/material/soup/cxx11/030-smart-pointers/uniqueptr.rst", "trainings/material/soup/cxx11/030-smart-pointers/weakptr.rst", "trainings/material/soup/cxx11/035-perfect-forwarding/topic.rst", "trainings/material/soup/cxx11/040-bind-function/010-bind/topic.rst", "trainings/material/soup/cxx11/040-bind-function/020-function/topic.rst", "trainings/material/soup/cxx11/040-bind-function/group.rst", "trainings/material/soup/cxx11/050-multithreading/010-introduction/topic.rst", "trainings/material/soup/cxx11/050-multithreading/020-thread/topic.rst", "trainings/material/soup/cxx11/050-multithreading/030-race-conditions/topic.rst", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/atomics.rst", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/mutex.rst", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/scoped-locking.rst", "trainings/material/soup/cxx11/050-multithreading/condition-variable.rst", "trainings/material/soup/cxx11/050-multithreading/group.rst", "trainings/material/soup/cxx11/050-multithreading/promise-future.rst", "trainings/material/soup/cxx11/100-miscellaneous/010-chrono/topic.rst", "trainings/material/soup/cxx11/100-miscellaneous/any-variant-optional/variant.rst", "trainings/material/soup/cxx11/100-miscellaneous/group.rst", "trainings/material/soup/cxx11/exercises/bag-copy.rst", "trainings/material/soup/cxx11/exercises/bag-shared.rst", "trainings/material/soup/cxx11/exercises/bag-unique.rst", "trainings/material/soup/cxx11/exercises/group.rst", "trainings/material/soup/cxx11/filesystem/topic.rst", "trainings/material/soup/cxx11/group.rst", "trainings/material/soup/graph.rst", "trainings/material/soup/index.rst", "trainings/material/soup/kernel/cdev-auto/screenplay.rst", "trainings/material/soup/kernel/cdev-auto/slides.rst", "trainings/material/soup/kernel/cdev-auto/topic.rst", "trainings/material/soup/kernel/cdev-file-operations/screenplay.rst", "trainings/material/soup/kernel/cdev-file-operations/slides.rst", "trainings/material/soup/kernel/cdev-file-operations/topic.rst", "trainings/material/soup/kernel/cdev-first-functionality/slides.rst", "trainings/material/soup/kernel/cdev-first-functionality/topic.rst", "trainings/material/soup/kernel/cdev-manual/screenplay.rst", "trainings/material/soup/kernel/cdev-manual/slides.rst", "trainings/material/soup/kernel/cdev-manual/topic.rst", "trainings/material/soup/kernel/cdev-multiple-devices/slides.rst", "trainings/material/soup/kernel/cdev-multiple-devices/topic.rst", "trainings/material/soup/kernel/cdev-refactoring/screenplay.rst", "trainings/material/soup/kernel/cdev-refactoring/slides.rst", "trainings/material/soup/kernel/cdev-refactoring/topic.rst", "trainings/material/soup/kernel/dma/slides.rst", "trainings/material/soup/kernel/dma/topic.rst", "trainings/material/soup/kernel/fedora-kernel-build/screenplay.rst", "trainings/material/soup/kernel/fedora-kernel-build/topic.rst", "trainings/material/soup/kernel/fedora-module-build/screenplay.rst", "trainings/material/soup/kernel/fedora-module-build/topic.rst", "trainings/material/soup/kernel/group.rst", "trainings/material/soup/kernel/hello-world/slides.rst", "trainings/material/soup/kernel/hello-world/topic.rst", "trainings/material/soup/kernel/interrupt-coding/slides.rst", "trainings/material/soup/kernel/interrupt-coding/topic.rst", "trainings/material/soup/kernel/interrupt/slides.rst", "trainings/material/soup/kernel/interrupt/topic.rst", "trainings/material/soup/kernel/iomemory/slides.rst", "trainings/material/soup/kernel/iomemory/topic.rst", "trainings/material/soup/kernel/kmalloc/slides.rst", "trainings/material/soup/kernel/kmalloc/topic.rst", "trainings/material/soup/kernel/list/slides.rst", "trainings/material/soup/kernel/list/topic.rst", "trainings/material/soup/kernel/mutex-coding/slides.rst", "trainings/material/soup/kernel/mutex-coding/topic.rst", "trainings/material/soup/kernel/mutex/slides.rst", "trainings/material/soup/kernel/mutex/topic.rst", "trainings/material/soup/kernel/netdev/slides.rst", "trainings/material/soup/kernel/netdev/topic.rst", "trainings/material/soup/kernel/pci/slides.rst", "trainings/material/soup/kernel/pci/topic.rst", "trainings/material/soup/kernel/process-vs-atomic/slides.rst", "trainings/material/soup/kernel/process-vs-atomic/topic.rst", "trainings/material/soup/kernel/raspi-kernel-build/story.rst", "trainings/material/soup/kernel/raspi-kernel-build/topic.rst", "trainings/material/soup/kernel/sample-project.rst", "trainings/material/soup/kernel/spinlock-coding/slides.rst", "trainings/material/soup/kernel/spinlock-coding/topic.rst", "trainings/material/soup/kernel/spinlock/slides.rst", "trainings/material/soup/kernel/spinlock/topic.rst", "trainings/material/soup/kernel/stub-sysprog-dup/topic.rst", "trainings/material/soup/kernel/time_timer-coding/slides.rst", "trainings/material/soup/kernel/time_timer-coding/topic.rst", "trainings/material/soup/kernel/time_timer/slides.rst", "trainings/material/soup/kernel/time_timer/topic.rst", "trainings/material/soup/kernel/todo.rst", "trainings/material/soup/kernel/usermem/screenplay.rst", "trainings/material/soup/kernel/usermem/slides.rst", "trainings/material/soup/kernel/usermem/topic.rst", "trainings/material/soup/kernel/waitqueue/screenplay.rst", "trainings/material/soup/kernel/waitqueue/slides.rst", "trainings/material/soup/kernel/waitqueue/topic.rst", "trainings/material/soup/kernel/workqueue/screenplay.rst", "trainings/material/soup/kernel/workqueue/slides.rst", "trainings/material/soup/kernel/workqueue/topic.rst", "trainings/material/soup/linux/basics/archiving-compression/exercises.rst", "trainings/material/soup/linux/basics/archiving-compression/group.rst", "trainings/material/soup/linux/basics/archiving-compression/gzip.rst", "trainings/material/soup/linux/basics/archiving-compression/overview.rst", "trainings/material/soup/linux/basics/archiving-compression/tar.rst", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G1.rst", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G2.rst", "trainings/material/soup/linux/basics/exercises/group.rst", "trainings/material/soup/linux/basics/group.rst", "trainings/material/soup/linux/basics/intro/demo-everything-is-a-file.rst", "trainings/material/soup/linux/basics/intro/environment.rst", "trainings/material/soup/linux/basics/intro/exercises/fh-questions.rst", "trainings/material/soup/linux/basics/intro/group.rst", "trainings/material/soup/linux/basics/intro/login.rst", "trainings/material/soup/linux/basics/intro/overview.rst", "trainings/material/soup/linux/basics/intro/process.rst", "trainings/material/soup/linux/basics/intro/process-tree.rst", "trainings/material/soup/linux/basics/intro/wsl.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/exercises.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/group.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection-swap-stdout-stderr.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/pipes.rst", "trainings/material/soup/linux/basics/permissions/basics.rst", "trainings/material/soup/linux/basics/permissions/exercises/credentials.rst", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions.rst", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions-nocheat.rst", "trainings/material/soup/linux/basics/permissions/exercises/group.rst", "trainings/material/soup/linux/basics/permissions/exercises/private-directory.rst", "trainings/material/soup/linux/basics/permissions/exercises/private-directory-question.rst", "trainings/material/soup/linux/basics/permissions/exercises/public-directory.rst", "trainings/material/soup/linux/basics/permissions/exercises/public-directory-question.rst", "trainings/material/soup/linux/basics/permissions/exercises/shared-file.rst", "trainings/material/soup/linux/basics/permissions/group.rst", "trainings/material/soup/linux/basics/permissions/setuid.rst", "trainings/material/soup/linux/basics/permissions/setuid-livedemo.rst", "trainings/material/soup/linux/basics/permissions/sticky.rst", "trainings/material/soup/linux/basics/permissions/umask.rst", "trainings/material/soup/linux/basics/shell/commandline.rst", "trainings/material/soup/linux/basics/shell/configfiles.rst", "trainings/material/soup/linux/basics/shell/cp.rst", "trainings/material/soup/linux/basics/shell/cwd.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/copy-tree.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-copy-files.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-create-files.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-move-files.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/group.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/mkdir-p-rm-r.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-rf.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-tree.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/verify-hierarchy.rst", "trainings/material/soup/linux/basics/shell/exercises/fh-questions.rst", "trainings/material/soup/linux/basics/shell/exercises/group.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/dev-types.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/etc-passwd-size.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/group.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/home-permissions.rst", "trainings/material/soup/linux/basics/shell/file_dir_create_rm.rst", "trainings/material/soup/linux/basics/shell/group.rst", "trainings/material/soup/linux/basics/shell/links.rst", "trainings/material/soup/linux/basics/shell/ls.rst", "trainings/material/soup/linux/basics/shell/mv.rst", "trainings/material/soup/linux/basics/shell/paths.rst", "trainings/material/soup/linux/basics/text-tools/cat.rst", "trainings/material/soup/linux/basics/text-tools/cut.rst", "trainings/material/soup/linux/basics/text-tools/exercises.rst", "trainings/material/soup/linux/basics/text-tools/find.rst", "trainings/material/soup/linux/basics/text-tools/grep.rst", "trainings/material/soup/linux/basics/text-tools/group.rst", "trainings/material/soup/linux/basics/text-tools/head-tail.rst", "trainings/material/soup/linux/basics/text-tools/less.rst", "trainings/material/soup/linux/basics/text-tools/overview.rst", "trainings/material/soup/linux/drafts/group.rst", "trainings/material/soup/linux/drafts/yocto.rst", "trainings/material/soup/linux/group.rst", "trainings/material/soup/linux/hardware/brushless-motor/topic.rst", "trainings/material/soup/linux/hardware/can/10-intro.rst", "trainings/material/soup/linux/hardware/can/20-interfaces.rst", "trainings/material/soup/linux/hardware/can/30-programming.rst", "trainings/material/soup/linux/hardware/can/40-harware.rst", "trainings/material/soup/linux/hardware/can/group.rst", "trainings/material/soup/linux/hardware/group.rst", "trainings/material/soup/linux/hardware/i2c/topic.rst", "trainings/material/soup/linux/hardware/pwm/topic.rst", "trainings/material/soup/linux/hardware/w1/topic.rst", "trainings/material/soup/linux/ssh/basics.rst", "trainings/material/soup/linux/ssh/exercises/copy-file.rst", "trainings/material/soup/linux/ssh/exercises/copy-tree.rst", "trainings/material/soup/linux/ssh/exercises/group.rst", "trainings/material/soup/linux/ssh/exercises/pubkey.rst", "trainings/material/soup/linux/ssh/group.rst", "trainings/material/soup/linux/ssh/key-pair.rst", "trainings/material/soup/linux/ssh/links.rst", "trainings/material/soup/linux/ssh/portforwarding.rst", "trainings/material/soup/linux/ssh/scp.rst", "trainings/material/soup/linux/ssh/sshfs.rst", "trainings/material/soup/linux/sysprog/basics/errorhandling.rst", "trainings/material/soup/linux/sysprog/basics/group.rst", "trainings/material/soup/linux/sysprog/basics/syscalls.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-file.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-network.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-timer.rst", "trainings/material/soup/linux/sysprog/blocking-io/group.rst", "trainings/material/soup/linux/sysprog/file-io/basics.rst", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-copy.rst", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-hole.rst", "trainings/material/soup/linux/sysprog/file-io/duplicate.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_CREAT.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_EXCL.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_RDONLY.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_WRONLY.rst", "trainings/material/soup/linux/sysprog/file-io/exercise-sensor-read.rst", "trainings/material/soup/linux/sysprog/file-io/group.rst", "trainings/material/soup/linux/sysprog/file-io/misc.rst", "trainings/material/soup/linux/sysprog/group.rst", "trainings/material/soup/linux/sysprog/intro-hw/get.rst", "trainings/material/soup/linux/sysprog/intro-hw/group.rst", "trainings/material/soup/linux/sysprog/intro-hw/sysfs-gpio.rst", "trainings/material/soup/linux/sysprog/intro-hw/watch.rst", "trainings/material/soup/linux/sysprog/posix-threads/010-introduction/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/020-lifecycle/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/030-exercise-pthcreate-race-condition/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/040-mutex/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/050-exercise-mutex/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/060-condition-variable/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/070-exercise-condition-variable/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/080-miscellaneous/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/090-last-warning/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/group.rst", "trainings/material/soup/linux/sysprog/posix-threads/locked-trylock.rst", "trainings/material/soup/linux/sysprog/process/commandline.rst", "trainings/material/soup/linux/sysprog/process/group.rst", "trainings/material/soup/linux/sysprog/process/tree.rst", "trainings/material/soup/linux/sysprog/scheduling/basics.rst", "trainings/material/soup/linux/sysprog/scheduling/group.rst", "trainings/material/soup/linux/sysprog/scheduling/processes-and-threads.rst", "trainings/material/soup/linux/sysprog/scheduling/questions.rst", "trainings/material/soup/linux/sysprog/scheduling/realtime.rst", "trainings/material/soup/linux/sysprog/scheduling/realtime-api.rst", "trainings/material/soup/linux/sysprog/scheduling/wakup-latency.rst", "trainings/material/soup/linux/sysprog/sysprog_events/code/index.rst", "trainings/material/soup/linux/sysprog/sysprog_events/screenplay.rst", "trainings/material/soup/linux/sysprog/sysprog_events/topic.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/code/index.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/screenplay.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/slides.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/topic.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/code/index.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/screenplay.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/slides.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/topic.rst", "trainings/material/soup/linux/toolchain/basics/topic.rst", "trainings/material/soup/linux/toolchain/cmake/cross.rst", "trainings/material/soup/linux/toolchain/cmake/local.rst", "trainings/material/soup/linux/toolchain/cross/basics.rst", "trainings/material/soup/linux/toolchain/cross/group.rst", "trainings/material/soup/linux/toolchain/exercises/cross-build.rst", "trainings/material/soup/linux/toolchain/exercises/fh-2022-questions.rst", "trainings/material/soup/linux/toolchain/exercises/group.rst", "trainings/material/soup/linux/toolchain/exercises/native-build.rst", "trainings/material/soup/linux/toolchain/exercises/raspberry-toolchain.rst", "trainings/material/soup/linux/toolchain/group.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/group.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/linaro.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-details.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-docker-fedora.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-setup.rst", "trainings/material/soup/linux/toolchain/separate-compilation/topic.rst", "trainings/material/soup/linux/toolchain/shared-libraries/topic.rst", "trainings/material/soup/linux/toolchain/static-library/topic.rst", "trainings/material/soup/python/advanced/closures/topic.rst", "trainings/material/soup/python/advanced/comprehensions/topic.rst", "trainings/material/soup/python/advanced/context-mgr/topic.rst", "trainings/material/soup/python/advanced/decorators/topic.rst", "trainings/material/soup/python/advanced/exceptions/topic.rst", "trainings/material/soup/python/advanced/exec/topic.rst", "trainings/material/soup/python/advanced/group.rst", "trainings/material/soup/python/advanced/iteration-generation/iteration-generation/topic.rst", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/fibonacci-generator.rst", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/iterator-protocol.rst", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/topic.rst", "trainings/material/soup/python/advanced/iteration-generation/topic.rst", "trainings/material/soup/python/advanced/modules.rst", "trainings/material/soup/python/advanced/multithreading/basics.rst", "trainings/material/soup/python/advanced/multithreading/group.rst", "trainings/material/soup/python/advanced/multithreading/mutex.rst", "trainings/material/soup/python/advanced/multithreading/questions.rst", "trainings/material/soup/python/advanced/oo/abc/topic.rst", "trainings/material/soup/python/advanced/oo/classes-and-dicts/topic.rst", "trainings/material/soup/python/advanced/oo/constructor/topic.rst", "trainings/material/soup/python/advanced/oo/group.rst", "trainings/material/soup/python/advanced/oo/inheritance/topic.rst", "trainings/material/soup/python/advanced/oo/methods/topic.rst", "trainings/material/soup/python/advanced/oo/namedtuple/topic.rst", "trainings/material/soup/python/advanced/oo/operator-overloading/topic.rst", "trainings/material/soup/python/advanced/oo/properties/topic.rst", "trainings/material/soup/python/advanced/oo/str-repr/topic.rst", "trainings/material/soup/python/advanced/starargs/topic.rst", "trainings/material/soup/python/basics/group.rst", "trainings/material/soup/python/basics/installation.rst", "trainings/material/soup/python/basics/python_0110_blahblah/topic.rst", "trainings/material/soup/python/basics/python_0120_helloworld/topic.rst", "trainings/material/soup/python/basics/python_0125_running/topic.rst", "trainings/material/soup/python/basics/python_0130_syntax_etc/topic.rst", "trainings/material/soup/python/basics/python_0139_commandline_argv/topic.rst", "trainings/material/soup/python/basics/python_0140_variables/topic.rst", "trainings/material/soup/python/basics/python_0150_datatypes_overview/topic.rst", "trainings/material/soup/python/basics/python_0150_datatypes_overview_compound/topic.rst", "trainings/material/soup/python/basics/python_0160_boolean/topic.rst", "trainings/material/soup/python/basics/python_0170_if/topic.rst", "trainings/material/soup/python/basics/python_0193_while/topic.rst", "trainings/material/soup/python/basics/python_0200_sequential_types/topic.rst", "trainings/material/soup/python/basics/python_0210_indexing_slicing/topic.rst", "trainings/material/soup/python/basics/python_0220_for/topic.rst", "trainings/material/soup/python/basics/python_0225_range/topic.rst", "trainings/material/soup/python/basics/python_0250_refs_flat_deep_copy/topic.rst", "trainings/material/soup/python/basics/python_0270_functions/screenplay-scoping.rst", "trainings/material/soup/python/basics/python_0270_functions/slideshow.rst", "trainings/material/soup/python/basics/python_0270_functions/topic.rst", "trainings/material/soup/python/basics/python_0300_strings/topic.rst", "trainings/material/soup/python/basics/python_0310_strings_formatting/topic.rst", "trainings/material/soup/python/basics/python_0320_strings_methods/topic.rst", "trainings/material/soup/python/basics/python_0400_lists/topic.rst", "trainings/material/soup/python/basics/python_0450_dictionaries/topic.rst", "trainings/material/soup/python/basics/python_0460_sets/topic.rst", "trainings/material/soup/python/basics/python_0500_files/topic.rst", "trainings/material/soup/python/basics/python_1000_function_objects/topic.rst", "trainings/material/soup/python/drafts/argparse/topic.rst", "trainings/material/soup/python/drafts/group.rst", "trainings/material/soup/python/drafts/matplotlib/topic.rst", "trainings/material/soup/python/drafts/setuptools/topic.rst", "trainings/material/soup/python/exercises/csv/csv-db.rst", "trainings/material/soup/python/exercises/csv/csv-module.rst", "trainings/material/soup/python/exercises/csv/group.rst", "trainings/material/soup/python/exercises/group.rst", "trainings/material/soup/python/exercises/herdt/boolean.rst", "trainings/material/soup/python/exercises/herdt/exercise_while_even_numbers.rst", "trainings/material/soup/python/exercises/herdt/greet.rst", "trainings/material/soup/python/exercises/herdt/group.rst", "trainings/material/soup/python/exercises/herdt/max_numbers.rst", "trainings/material/soup/python/exercises/herdt/swap.rst", "trainings/material/soup/python/exercises/herdt/username_password.rst", "trainings/material/soup/python/exercises/legacy/cmdline_digit.rst", "trainings/material/soup/python/exercises/legacy/dict_keyerror.rst", "trainings/material/soup/python/exercises/legacy/distill.rst", "trainings/material/soup/python/exercises/legacy/fibonacci-generator.rst", "trainings/material/soup/python/exercises/legacy/for_primeness.rst", "trainings/material/soup/python/exercises/legacy/group.rst", "trainings/material/soup/python/exercises/legacy/join_function.rst", "trainings/material/soup/python/exercises/legacy/max_numbers.rst", "trainings/material/soup/python/exercises/legacy/max_numbers_function.rst", "trainings/material/soup/python/exercises/legacy/mixed_list_executable.rst", "trainings/material/soup/python/exercises/legacy/mixed_list_interactive.rst", "trainings/material/soup/python/exercises/legacy/passwd.rst", "trainings/material/soup/python/exercises/legacy/primeness_function.rst", "trainings/material/soup/python/exercises/legacy/revert.rst", "trainings/material/soup/python/exercises/legacy/string-rightjustify.rst", "trainings/material/soup/python/exercises/legacy/uniq_function.rst", "trainings/material/soup/python/exercises/legacy/uniq_generator.rst", "trainings/material/soup/python/exercises/legacy/wc.rst", "trainings/material/soup/python/exercises/legacy/while_primeness.rst", "trainings/material/soup/python/exercises/sensors/group.rst", "trainings/material/soup/python/exercises/sensors/project-setup.rst", "trainings/material/soup/python/exercises/sensors/sensor-const.rst", "trainings/material/soup/python/exercises/userdb/csvdictreader.rst", "trainings/material/soup/python/exercises/userdb/csvdictreader-function.rst", "trainings/material/soup/python/exercises/userdb/csvreader.rst", "trainings/material/soup/python/exercises/userdb/csvreader-function.rst", "trainings/material/soup/python/exercises/userdb/group.rst", "trainings/material/soup/python/exercises/userdb/mqtt-publish-csv.rst", "trainings/material/soup/python/exercises/userdb/user-class-person.rst", "trainings/material/soup/python/exercises/userdb/user_json.rst", "trainings/material/soup/python/exercises/userdb/userdb_csv.rst", "trainings/material/soup/python/graph.rst", "trainings/material/soup/python/group.rst", "trainings/material/soup/python/link-collection.rst", "trainings/material/soup/python/misc/ai/group.rst", "trainings/material/soup/python/misc/ai/k-means.rst", "trainings/material/soup/python/misc/ai/linear-regression/code.rst", "trainings/material/soup/python/misc/ai/linear-regression/history_data.rst", "trainings/material/soup/python/misc/ai/linear-regression/linear_regression.ipynb", "trainings/material/soup/python/misc/ai/linear-regression/topic.rst", "trainings/material/soup/python/misc/ai/machine-learning-intro.rst", "trainings/material/soup/python/misc/context_manager/screenplay.rst", "trainings/material/soup/python/misc/context_manager/slides.rst", "trainings/material/soup/python/misc/context_manager/topic.rst", "trainings/material/soup/python/misc/csv/topic.rst", "trainings/material/soup/python/misc/db/dbapi2.rst", "trainings/material/soup/python/misc/db/group.rst", "trainings/material/soup/python/misc/db/postgres.rst", "trainings/material/soup/python/misc/db/sqlite3.rst", "trainings/material/soup/python/misc/encoding/topic.rst", "trainings/material/soup/python/misc/group.rst", "trainings/material/soup/python/misc/import.rst", "trainings/material/soup/python/misc/mqtt/topic.rst", "trainings/material/soup/python/misc/pandas/add_row.rst", "trainings/material/soup/python/misc/pandas/basics.rst", "trainings/material/soup/python/misc/pandas/filters.rst", "trainings/material/soup/python/misc/pandas/group.rst", "trainings/material/soup/python/misc/pandas/iloc.rst", "trainings/material/soup/python/misc/pandas/indexes.rst", "trainings/material/soup/python/misc/pandas/loc.rst", "trainings/material/soup/python/misc/pandas/mod_col.rst", "trainings/material/soup/python/misc/python_5550_xml_etree/topic.rst", "trainings/material/soup/python/misc/vscode.rst", "trainings/material/soup/python/pcap-exam.rst", "trainings/material/soup/python/swdev/group.rst", "trainings/material/soup/python/swdev/pip/screenplay.rst", "trainings/material/soup/python/swdev/pip/slides.rst", "trainings/material/soup/python/swdev/pip/topic.rst", "trainings/material/soup/python/swdev/pypi.rst", "trainings/material/soup/python/swdev/pytest/group.rst", "trainings/material/soup/python/swdev/pytest/intro.rst", "trainings/material/soup/python/swdev/unittest.rst", "trainings/material/soup/python/swdev/venv/screenplay.rst", "trainings/material/soup/python/swdev/venv/slides.rst", "trainings/material/soup/python/swdev/venv/topic.rst", "trainings/material/soup/unittest/group.rst", "trainings/material/soup/unittest/unittest_gtest_basics/code/index.rst", "trainings/material/soup/unittest/unittest_gtest_basics/screenplay.rst", "trainings/material/soup/unittest/unittest_gtest_basics/topic.rst", "trainings/material/soup/unittest/unittest_gtest_cmake/screenplay.rst", "trainings/material/soup/unittest/unittest_gtest_cmake/topic.rst", "trainings/material/soup/unittest/unittest_gtest_fixture/code/index.rst", "trainings/material/soup/unittest/unittest_gtest_fixture/screenplay.rst", "trainings/material/soup/unittest/unittest_gtest_fixture/topic.rst", "trainings/org.rst", "trainings/repertoire/_hidden/kettner-lfs-2013-09-16.rst", "trainings/repertoire/bash.rst", "trainings/repertoire/c-like/c.rst", "trainings/repertoire/c-like/c-advanced.rst", "trainings/repertoire/c-like/cxx.rst", "trainings/repertoire/c-like/cxx11.rst", "trainings/repertoire/c-like/index.rst", "trainings/repertoire/cmake.rst", "trainings/repertoire/design-patterns/design-patterns.rst", "trainings/repertoire/embedded.rst", "trainings/repertoire/kernel-programming-basics.rst", "trainings/repertoire/linux-basics.rst", "trainings/repertoire/make.rst", "trainings/repertoire/python/advanced.rst", "trainings/repertoire/python/basics.rst", "trainings/repertoire/python/herdt.rst", "trainings/repertoire/raspi-hands-on.rst", "trainings/repertoire/svn.rst", "trainings/repertoire/sysprog/basics.rst", "trainings/repertoire/sysprog/fortgeschrittenes.rst", "trainings/repertoire/sysprog/index.rst", "trainings/repertoire/sysprog/multithreading.rst", "trainings/repertoire/sysprog/network.rst", "trainings/repertoire/unittests.rst"], "titles": ["Kontakt", "Curriculum Vitae", "\u00dcber Mich", "Projekte", "Skills", "Course Material", "Einleitung", "Python Basics (2021-xx-xx - 2021-yy-yy)", "Programmierung Grundlagen (Jupyter Notebook)", "Details", "Course List", "Templates for Course Descriptions", "About This Site", "OpenTraining", "Draft Topics", "Miscellaneous", "S5 Integration", "S5 Slide Tests", "Level 1 Heading", "Screencasts", "Topics to be Written", "Netidee F\u00f6rderantrag", "Netidee F\u00f6rderantrag: OpenTraining", "Video Screenplay", "Use Case: Custom Training, Subtract Known", "Use Case: Calculate Minimum Training Duration", "Use Cases", "Use Case: Use Training Material From Other Sites", "Use Case: Menu to Choose From", "Use Case: Slide Show Material as Plain-Text Files", "Emoji Codes (<code class=\"docutils literal notranslate\"><span class=\"pre\">sphinxemoji</span></code>)", "Recipes", "<code class=\"docutils literal notranslate\"><span class=\"pre\">isoamsa.txt</span></code>: Added Mathematical Symbols: Arrows", "<code class=\"docutils literal notranslate\"><span class=\"pre\">isoamsr.txt</span></code>: Added Mathematical Symbols: Relations", "<code class=\"docutils literal notranslate\"><span class=\"pre\">isonum.txt</span></code>: Added Mathematical Symbols: Binary Operators", "Layout Test Page", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mmlalias.txt</span></code>: MathML aliases for entities from other sets", "reStructuredText Cheat Sheet", "Sphinxish", "Seminar on \u201cClean Code\u201d (2022-04-13)", "Live Hacking Before (Formal) Unit Testing", "Clean Code: Messages From The Book", "Live Hacking: Switch To <code class=\"docutils literal notranslate\"><span class=\"pre\">googletest</span></code>", "Is Software A Craft? Software Is A Craft!", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB::find()</span></code> Crashes If User Not Found", "Bugs", "Existing Files Are Overwritten", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB::read()</span></code>: What If Done Twice?", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB</span></code>: Alternative Output Format - CSV", "Features", "Search By Other Indexes", "Backlog: What Needs To Change, Or We Will All Die", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BackingStore</span></code> Has Too Many Responsibilities \u27f6 Interface", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB</span></code> Has Too Many Responsibilities \u27f6 <code class=\"docutils literal notranslate\"><span class=\"pre\">BackingStore</span></code>", "Refactoring", "Load From BackingStore in Constructor", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB::{read,write}()</span></code>: <code class=\"docutils literal notranslate\"><span class=\"pre\">bool</span></code>, Really?", "Submission: Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "Installation Notes", "Submission: Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "Screenplay: Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "Hochk\u00f6nig", "Blog", "Sphinx", "C++", "C++: Building with CMake", "C++: Interfaces", "C++: OO Basics", "C++: Unit Testing", "Graph", "Embedded Computing 1", "Embedded Computing 2", "EX: Race Conditions", "EX: Avoiding Race Condition", "Git Introduction", "Embedded Computing 2019", "Linux", "Introduction to Linux and Unix", "Linux Hardware Device Management", "EX: Averaging Sensor", "EX: Averaging Sensor (parallel)", "EX: LED Temperature Display", "EX: Temperature Sensors", "GPIO", "Multithreading", "Avoiding Race Conditions: Semaphore/Mutex", "Communication: Waiting for Something", "Python Basics", "EX: Averaging Sensor, Display", "EX: Temperature Sensors", "Simple Web Programming", "Sensors Web Pages", "Python", "Embedded Computing 2020", "SS2022", "2022-03-08", "2022-03-10", "2022-03-10 (Homework until 2022-03-21)", "2022-03-21", "2022-03-22, 2022-03-24 (KU)", "2022-03-28", "2022-04-01", "SS2022: Logs", "WS2022", "FH Joanneum (Embedded Computing): WS2022/2023 (Questions About Code)", "FH Joanneum (Embedded Computing): WS2022/2023 (Yes/No Questions)", "Lab Exam 2023-01-17", "SS2023: Exam 2023-06-30 (Handout)", "SS2023: Exam 2023-06-30 (Solved)", "Embedded Computing 2021", "SS2023", "Embedded Computing (FH Joanneum Graz)", "Git Notes", "Work in Progress", "Packaging this Site on PyPI", "Audio Chip Bringup", "Get Debian 10 Kernel Config", "Finish: Debian Kernel Package etc.", "Yocto Kernel Bringup on Customer Hardware", "I2S Audio for a Kontron SMARC Module", "Dirty Upgrade Path", "Wait for Customer Hardware", "Extract Kernel from Intel Yocto BSP", "Python Training Improvements", "Creating Screencasts", "SEO", "Stacks (Hanging)", "Miscellaneous To Do", "Learning The Web", "Beagleboard: How to Repair NAND (also known as 40W)", "Porting to Linux (There\u2019s Always A Better Way)", "Saving Solid State Disk Life (Gentoo)", "\u201cWhy <code class=\"docutils literal notranslate\"><span class=\"pre\">ps</span></code> Sucks\u201d or \u201cCounting Memory Consumption\u201d", "Patching and Building the Fedora Kernel", "Adding a Custom Domain to a Github Pages Project Site", "Using Microsoft Teams on Linux", "Deploying Sphinx Generated Documentation to Github Pages", "Using BigBlueButton for Online Training", "Traunstein via Zierlersteig", "Grintovec (via Plan\u0161arsko Jezero, \u010ce\u0161ka Ko\u010da)", "How to Brick a \u20ac1399 Dell XPS 13", "Building A Cross Toolchain For The Raspberry Pi, Using <code class=\"docutils literal notranslate\"><span class=\"pre\">crosstool-ng</span></code>", "Posts", "Linux und Open Source", "Richtlinien zur Ver\u00f6ffentlichung von Kursmaterial", "Exercises", "Courses: Overview", "Qualivision, Z\u00fcrich, 1.10.2013", "Kursnotizen: Linux Embedded 2015-11-30", "Live Hacking", "Python Individualtraining (5 Tage, beginnend 28.10.2019)", "Goals of this Training", "Random Live Hacking", "Python (12.11.2019 - 14.11.2019 in Graz)", "Proposal", "IPC in Linux (10.1.2020 in Graz)", "\u00dcbung: handgestrickter String, um die Fallen von C++ lustvoll zu erleiden", "C++ f\u00fcr Embedded C Programmierer (30.3.2020 - 3.4.2020 Baden W\u00fcrttemberg)", "Installing <code class=\"docutils literal notranslate\"><span class=\"pre\">googletest</span></code> By Hand", "Software Setup, Build", "Argh: Using This Site With Visual Studio Code", "Code", "Python Grundlagen (13.5.2020 - 14.5.2020 bei einer Firma in Graz)", "Python Schulung 18. und 19.5.2020", "Code", "Python Individualtraining (18.5.2020 - 19.5.2020)", "Python Advanced (7.9.2020 - 10.9.2020)", "Python Basics (28.9.2020 - 30.9.2020)", "Iterables", "Python Basic and Advanced (19.10.2020 - 22.10.2020)", "Linux on Raspberry Pi", "Python Basics (23.11.2020 - 25.11.2020)", "Linux Basics (30.11.2020 - 3.12.2020)", "6 Grundlegende Sprachelemente", "Programmierung Grundlagen (13. und 14.1.2021)", "Programmierung Grundlagen (Jupyter Notebook)", "Python Basics (22.2.2021 - 24.2.2021)", "Linux Kernel Driver Development Basics (14.12.2020)", "Python Advanced", "2021-03-15", "Hallo Jupyter Notebook", "Python Basic and Advanced (22.3.2021 - 25.3.2021)", "Linux Basics, Shell Scripting (2021-03-29)", "Einleitung", "Programmierung Grundlagen (12. und 13.4.2021)", "Programmierung Grundlagen (Jupyter Notebook)", "Syntax etc.", "Python Grundlagen (2021-05-03 - 2021-05-05)", "Python Grundlagen (Jupyter Notebook)", "Das <code class=\"docutils literal notranslate\"><span class=\"pre\">with</span></code> Statement", "Python Advanced (2021-05-25 - 2021-05-27)", "Programmieren mit C (2021-06-14 - 2021-06-18)", "The C++ Programming Language (2021-07-12 - 2021-07-16)", "Programmierung Grundlagen, anhand von Python (2. und 3.8.2021)", "Datenstrukturen", "Compound Datatypes", "Read a Cleaned-Up SAP Export", "Python Grundlagen (2021-08-23 - 2021-08-25)", "Jupyter Notebook", "Initial Terminology", "Python Basics (2021-08-31 - 2021-09-01)", "Python Grundlagen (Jupyter Notebook)", "2021-11-17", "Python Basics (2021-11-17 - 2021-11-19)", "Python Grundlagen (Jupyter Notebook)", "Notebook", "Python Advanced (2021-12-01 - 2021-12-03)", "Python Grundlagen (Jupyter Notebook)", "C/C++ Programming (2021-12-06 - 2021-12-10, 2022-01-24 - 2022-02-04)", "Programmierung Grundlagen, anhand von Python (2022-01-17 - 2022-01-10)", "2022-01-17", "Programmierung Grundlagen (Jupyter Notebook)", "Datatypes", "Python Basics (2022-02-23 - 2022-02-25)", "Jupyter Notebook", "Wiederholung", "Python Advanced (2022-03-15 - 2022-03-17, 2022-03-31)", "Jupyter Notebook", "Hello World", "Python (2022-03-23, 2022-03-30, 2022-04-19 - 2022-03-21)", "Jupyter Notebook", "Programmierung Grundlagen, anhand von Python (2022-04-05 - 2022-04-08)", "BlahBlah", "Programmierung Grundlagen (Jupyter Notebook)", "Python Basics (2022-04-25 - 2022-04-27)", "BlahBlah", "Python Grundlagen (Jupyter Notebook)", "Python (2022-05-02 - 2022-05-05)", "Hello Jupyter Notebook", "Python Grundlagen (Jupyter Notebook)", "Python Advanced (2022-05-16 - 2022-05-18)", "Assert", "Python Grundlagen (Jupyter Notebook)", "Vorbesprechung 2022-05-11", "C++: A New Language Starting In 2011", "C++: A New Language Starting In 2011", "Linux Basics (2022-10-03 - 2022-10-05)", "C++: A New Language Starting In 2011 (2022-10-11 - 2022-10-13)", "Design- and Architectural Patterns With C++ (2022-10-24 - 2022-10-26)", "Python (2022-11-07 - 2022-11-10, 2022-12-01)", "Python (2022-10-17)", "Python Grundlagen (Jupyter Notebook)", "Python (2022-11-16 - 2022-11-18)", "Python (2022-11-16 - 2022-11-18)", "Python Grundlagen (Jupyter Notebook)", "Linux Basics (2023-01-23 - 2023-01-26)", "Embedded Linux Systems Programming (2023-02-13 - 2023-02-17)", "Whetting Your Appetite (Jupyter Notebook)", "Whetting Your Appetite (Livehacking Demo)", "Python For SAP Developers (2023-03-13 - 2023-03-15)", "2023-03-13", "Python For SAP Developers (Jupyter Notebook)", "Original Agenda: Python For SAP Developers (2023-03-13 - 2023-03-15)", "Hacking About On A SAP Test Dataset", "Some Usecases On A Test Dataset From SAP", "C++ For Embedded Developers (2023-03-20 - 2023-03-23)", "Clean Code Development With Python (2023-03-28 - 2023-03-29)", "C++ For Embedded Developers (2023-04-18 - 2023-04-20)", "Agenda: Python Advanced (2023-04-24 - 2023-04-26)", "Python Advanced (2023-04-24 - 2023-04-26)", "Jupyter Notebook: Python Advanced (2023-04-24 - 2023-04-26)", "Jupyter Notebook (Structure): Python Advanced (2023-04-24 - 2023-04-26)", "Agenda: Python Basics (2023-05-15 - 2023-05-17)", "Python Basics (2023-05-15 - 2023-05-17)", "Python Basics (2023-05-15 - 2023-05-17)", "Python Grundlagen (Jupyter Notebook)", "Agenda: Linux Basics (2023-05-23 - 2023-05-25)", "Linux Basics (2023-05-23 - 2023-05-25)", "Agenda: Python Basics (2023-06-20 - 2023-06-22)", "Python Basics (2023-06-20 - 2023-06-22)", "Python Basics (2023-06-20 - 2023-06-22)", "Python Basics (Jupyter Notebook)", "Agenda: CMake (2023-07-03)", "CMake: An Introduction (2023-07-18)", "Python Advanced (2023-09-25 - 2023-09-27)", "Python Advanced (2023-09-25 - 2023-09-27)", "Python Basics (Jupyter Notebook)", "Agenda: Python Advanced (2023-10-23 - 2023-10-25)", "Python Advanced (2023-04-24 - 2023-04-26)", "Jupyter Notebook: Python Advanced", "Jupyter Notebook (Structure): Python Advanced (2023-04-24 - 2023-04-26)", "Agenda: C++: Advanced Topics", "C++: Advanced Topics", "C++ For Embedded Developers (Beginning of 2023)", "Python/SAP", "Screenplay Checker", "GPIO: Blinklicht", "GPIO: Blinklicht Interface", "GPIO: Object Oriented Blinklicht", "GPIO: Blinklicht Unittests", "ECE19: Exercises and Custom Topics", "Reading a File", "2021-05-20 (G2)", "2021-05-21", "Tuple Unpacking", "Basics", "An Example", "Cloud Computer, SSH Login", "Formalit\u00e4ten", "Embedded Computing 1 (ECE 19)", "Daily Log", "Embedded Computing 1 (Deutsch)", "Embedded Computing 1 (English)", "Plan for Summer 2021", "2021-10-07", "2021-10-12 (Bringing Newcomers Up-to-Date)", "2021-10-28", "2021-11-15", "2021-11-29", "2021-12-1{4,5}", "2022-01-10", "2022-01-12", "2022-02-15", "Agenda/Log", "Embedded Computing 2 (ECE 19)", "Exam Material Overview", "Embedded Computing 1+2, ECE 19", "Details", "Bisher Gehaltene", "Training Material: Overview and Download", "Installation", "Introduction", "Hello World", "Variables and Arithmetic", "Exercise: A Better Fahrenheit Table", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> Loops", "Exercise: Fahrenheit Table Using <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code>", "Symbolic Constants", "Exercise: Fahrenheit Table Using Macros", "Character I/O", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">wc</span></code> For The Poor", "Arrays", "Exercise: Character Histogram", "Functions", "Exercise: Forward Declaration", "Character Arrays", "Exercise: Read Line Into String from <code class=\"docutils literal notranslate\"><span class=\"pre\">stdin</span></code>", "Lifetime of Variables", "Introduction", "Type System", "Variable Names", "Data Types, Sizes", "Constants", "Variable Definitions", "Arithmetic Operators", "Relational and Logical Operators", "Type Conversions", "Increment, Decrement", "Exercise: Copy and Reduce String", "Bit-Operators", "Assignment with Calculation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">?:</span></code> - Conditional Expression", "Precedence, Associativity", "Types, Operators, Expressions", "Statements and Blocks", "<code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code> - <code class=\"docutils literal notranslate\"><span class=\"pre\">else</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">else</span></code> - <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">switch</span></code>", "Loops: <code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code>", "Loops: <code class=\"docutils literal notranslate\"><span class=\"pre\">do</span> <span class=\"pre\">-</span> <span class=\"pre\">while</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">break</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">continue</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">goto</span></code> and Labels", "Program Flow", "Basics", "Extern/Global Variables", "Header Files", "Static Variables", "C Preprocessor: Basics", "C Preprocessor: More", "Functions and Program Structure", "Pointers and Addresses", "Pointers as Function Parameters", "Exercise: Function That Swaps Two Variables", "Pointers and Arrays", "Commandline Arguments", "Pointers and Arrays", "<code class=\"docutils literal notranslate\"><span class=\"pre\">struct</span></code>: Basics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">struct</span></code>: Functions", "<code class=\"docutils literal notranslate\"><span class=\"pre\">typedef</span></code>: Type Alias", "Structures", "Dynamic Memory", "Singly Linked List", "Memory", "Volatile", "Compiler Intrinsics", "Alignment", "Advanced Language Features", "Sanity and Readabilty", "Know Your Integers", "Discrete Values - <code class=\"docutils literal notranslate\"><span class=\"pre\">enum</span></code>", "Visibility - <code class=\"docutils literal notranslate\"><span class=\"pre\">static</span></code>", "Correctness - <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "Struct Initialization", "Explict Type Safety", "<code class=\"docutils literal notranslate\"><span class=\"pre\">valgrind</span></code>", "Program Sanity", "Optimization", "Optimizations: Compute Bound Code", "Optimizations: Memory Optimizations", "Performance", "Introduction", "GNU Profiler - <code class=\"docutils literal notranslate\"><span class=\"pre\">gprof</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">callgrind</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">oprofile</span></code>", "Profiling", "The C Programming Language", "Messages From The Book", "What\u2019s There? What Have We Accomplished?", "Is Software A Craft? Software Is A Craft! \u27f6 <em>Clean Code</em>", "A Typical Project (Livehacking Screenplay: My Own Bookkeeping Effort)", "Basics: Boilerplate, And Executables", "\u201cConfigured\u201d Header Files", "C++, Debug/Release, CMake \u201cProgramming\u201d, Rants", "External Dependencies", "CMake: An Introduction", "Installation (\u201cDeployment\u201d)", "Libraries, And <em>Dependencies</em>", "Optional Code, Approach 1: Optional <code class=\"docutils literal notranslate\"><span class=\"pre\">blacklist</span></code>, C Macro  (Global Flags)", "Optional Code, Approach 2: Pushing Optionality Down In Module <em>Interface</em>", "Optional Code: Problem Definition, <code class=\"docutils literal notranslate\"><span class=\"pre\">OPTION()</span></code>", "Shared Libraries (Preview)", "Structure - Subdirectories, Dependencies, and Include Paths", "Targets, Properties, And More", "Running Tests", "C++ Code", "Abstract Factory", "Adapter", "Command", "SocialDB Source Code", "Composite", "Decorator", "Design Patterns With C++", "Case Study/Livehacking: Heating Control (Reading Sensors)", "Interpreter", "Observer", "OO Design Principles", "Proxy", "Exercise Foundation: <code class=\"docutils literal notranslate\"><span class=\"pre\">Sensor</span></code> Hierarchy", "Singleton", "UML Short Introduction", "Exercise: Abstract Factory", "Exercise: Adapter", "Exercise: Command", "Exercise: Composite", "Exercise: Decorator", "Exercises: Design Patterns", "Exercise: Interpreter Combined With Adapter (And A Proxy)", "Exercise: Arithmetic Expression Interpreter", "Exercise: Adapter", "Exercise: Proxy (Remote Thermometer)", "Exercise: Proxy (Rounding Thermometer)", "Exercise: Singleton (Flexible)", "Exercise: Singleton (Flexible <em>And</em> Strict)", "Exercise: Singleton (Inflexible)", "Solution: Abstract Factory", "Solution: Adapter", "Solution: Command", "Solution: Composite", "Solution: Decorator", "Solutions", "Solution: Interpreter Combined With Adapter (And A Proxy)", "Solution: Arithmetic Expression Interpreter", "Solution: Observer", "Solution: Proxy (Remote Thermometer)", "Solution: Proxy (Rounding Thermometer)", "Solution: Singleton (Flexible)", "Solution: Singleton (Flexible <em>And</em> Strict)", "Solution: Singleton (Inflexible)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">LEDStripeDisplay_nopoly</span></code> (Non-Polymorphic)", "Exercise (FH): Introducing a Sensor Class", "Exercise (FH): Extract Measurement Loop Into Function", "Exercise (FH): Replace Sensor", "Exercise (FH): Write A Sensor Class: <code class=\"docutils literal notranslate\"><span class=\"pre\">RandomSensor</span></code>", "FH Sensor OO (First Try)", "C++ Exercises", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">Hysteresis_nopoly</span></code> (Non-Polymorphic)", "OO Basics, Interfaces (Shapes)", "Working On Exercise Projects", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">AveragingSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: Sensor Interface", "Exercise: OneWire Sensor Factory", "Exercise: OneWire Sensor Class", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">ConstantSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">MockSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">RandomSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: Algorithms", "Exercise: Generic Filter", "Exercise: Filter Elements Greater Than 10", "Exercise: Filter Odd Elements", "C++ Exercises: Standard Template Library", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::map&lt;&gt;</span></code>", "Exercises: Sensor Repository (<code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code>)", "Insert - Not Overwriting Existing Elements", "Insert - Sunny Case", "Lookup - Not Found", "Lookup - Sunny Case", "Memory Leaks?", "Remove - Not Found", "Remove - Sunny Case", "<code class=\"docutils literal notranslate\"><span class=\"pre\">.size()</span></code> Is <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "Exercise: Uniquify A Sequence", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector&lt;&gt;</span></code>", "Exercise: Mocking Switch (Non-Polymorphic)", "C++: TODO List", "Code: C++: Class Templates", "Screenplay: C++: Class Templates", "C++: Class Templates", "Code: C++: Dynamic Memory", "Screenplay: C++: Dynamic Memory", "C++: Dynamic Memory", "Code: C++: Global Objects Initialization", "Screenplay: C++: Global Objects Initialization", "C++: Global Objects Initialization", "Code: C++: Inheritance, Interfaces, <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>", "Screenplay: C++: Inheritance, Interfaces, <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>", "C++: Inheritance, Interfaces, <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>", "Code: C++: Ownership/RAII", "Screenplay: C++: Ownership/RAII", "C++: Ownership/RAII", "Code: C++: STL Containers (Intro)", "Screenplay: C++: STL Containers (Intro)", "C++: STL Containers (Intro)", "Code: C++: Templates vs. Interfaces", "Screenplay: C++: Templates vs. Interfaces", "C++: Templates vs. Interfaces", "C++: Miscellaneous Live-Hacking", "Introduction", "Object Oriented Programming In Good Ol\u2019 C", "Copy Constructor, Assignment Operator", "Classes and Objects", "Custom Constructor", "Default Constructor", "More Constructors, Destructors", "Data Encapsulation", "Constructors: Member Initialization", "Object Copy (And Resource Management): There Be Dragons", "Overloading", "Methods", "<code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">this</span></code>", "References", "<code class=\"docutils literal notranslate\"><span class=\"pre\">static</span></code> Methods", "<code class=\"docutils literal notranslate\"><span class=\"pre\">static</span></code> Member Variables", "Operator Overloading", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">cuboid</span></code>", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">point</span></code>", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">point3d</span></code>", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">rectangle</span></code>", "Functions and Methods", "Basics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">try</span></code> - <code class=\"docutils literal notranslate\"><span class=\"pre\">catch</span></code>", "Exceptions", "Function Templates", "Class Templates", "C++ Template Basics", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::copy&lt;&gt;()</span></code> From <code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;algorithm&gt;</span></code>", "Screenplay: Pointer Arithmetic, And Algorithms", "Screenplay: Pointer Arithmetic Basics", "Screenplay: Pointer Difference", "Screenplay: Out Of Range Errors", "Standard Template Library: Basics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code> (And <code class=\"docutils literal notranslate\"><span class=\"pre\">std::copy()</span></code>)", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">std::copy()</span></code>", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code> Basics", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code>, And Pointer Arithmetics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">binary_search&lt;&gt;</span></code>: On Sorted Sequence", "<code class=\"docutils literal notranslate\"><span class=\"pre\">copy&lt;&gt;</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find&lt;&gt;</span></code>: Sequential Search, by Equality", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find_if&lt;&gt;</span></code>: Sequential Search, Customizable", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for_each&lt;&gt;</span></code>", "Algorithms", "<code class=\"docutils literal notranslate\"><span class=\"pre\">lower_bound&lt;&gt;</span></code>: On Sorted Sequence", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reverse&lt;&gt;</span></code>: Reversing In-Place", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reverse_copy&lt;&gt;</span></code>: Copying <em>and</em> Reversing", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sort&lt;&gt;</span></code>", "Sequential Containers", "Sequential Containers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">list&lt;&gt;</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">vector&lt;&gt;</span></code>", "Associative Containers", "Associative Containers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code>", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code> Initialization And Inserting", "Screenplay: Inserting Elements", "Screenplay: Removing (Erasing) Elements", "Screenplay: Searching", "<code class=\"docutils literal notranslate\"><span class=\"pre\">multimap&lt;&gt;</span></code>", "Allocator Basics", "Allocators", "STL: Exercises", "Exercise: Reverse a String", "Exercise: Reverse A String", "Solution: Reverse a String", "Standard Template Library", "Dynamic Memory (To Be Done)", "Dynamic Memory Allocation, Resource Management", "Inheritance Basics", "Destructors And Inheritance", "Inheritance And Object Oriented Design", "Interfaces", "<em>Polymorphic</em> Usage Of Objects", "Inheritance: <code class=\"docutils literal notranslate\"><span class=\"pre\">private</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">protected</span></code> (Implementation Inheritance)", "Virtual Destructors", "Virtual Methods", "The Standard Library: Miscellaneous Topics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::string</span></code>", "Exercise: Paint the American Flag Onto Standard Output", "FH/Moodle Quiz: C++", "Exercises: Miscellaneous", "Exercise: Sum of Integers Coming From <code class=\"docutils literal notranslate\"><span class=\"pre\">cin</span></code>", "Exercises: User Database", "Exercise: Access Methods for Members", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code> Members", "Exercise: Use <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "Exercise: Default Constructor (was: Arrays of Objects)", "Exercise: Simple Method (Users Age By <code class=\"docutils literal notranslate\"><span class=\"pre\">n</span></code> Years)", "Exercise: Transform <code class=\"docutils literal notranslate\"><span class=\"pre\">struct</span> <span class=\"pre\">User</span></code> Into A Class", "Exercise: Insert a User into UserDB", "Exercise: Search a User By Lastname (<code class=\"docutils literal notranslate\"><span class=\"pre\">std::find_if</span></code>)", "Exercise: Search, \u201cUser Not Found\u201d Exception", "Exercise: Search a User By Lastname", "Exercise: Use std::vector in UserDB", "C++ 03", "Introduction", "History, Background", "A Live-Hacked Tour Around The New C++", "Strongly Typed <code class=\"docutils literal notranslate\"><span class=\"pre\">enum</span></code>", "Brace Initialization (Uniform Initialization)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::initializer_list</span></code>: Brace Initialization, Implementor\u2019s View", "Brace Initialization: Introduction", "Brace Initialization: A Mess", "Delegating Constructor", "<code class=\"docutils literal notranslate\"><span class=\"pre\">constexpr</span></code>", "Afterword, Further Reading", "Move Semantics, Rvalue References", "<code class=\"docutils literal notranslate\"><span class=\"pre\">SmartPtr</span></code> With Move Semantics", "Implementing Move Semantics (<code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">String</span></code>, Live Hacked)", "Using Move Semantics In Own Code", "Lvalues, Rvalues, And Such", "Miscellaneous", "<code class=\"docutils literal notranslate\"><span class=\"pre\">auto</span></code>", "Concepts", "Concepts: Overview", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toolcase-1-conceptless.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toolcase-2-conceptless-error.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toolcase-3-concept-integral.cpp</span></code>", "Concepts: Links", "Writing Your Own Concepts", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-1-good-old-func.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-2-need-template.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-4-concept-has-size.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-5-concept-index-ret-double.cpp</span></code>", "Coroutines", "Coroutines: An Overview", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fibo-generator.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fibonacci.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">generator.h</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">generator-hello.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">simplest.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">suspend.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">suspend-iter.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">suspend-next.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">=</span> <span class=\"pre\">default</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">=</span> <span class=\"pre\">delete</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">final</span></code>", "New Language Features", "Lambda", "Lambda", "Lambda: More Capturing", "Live Hacking: Handwritten Functors (Too Much Boilerplate)", "Live Hacking: Handwritten Functors, And Capturing By Reference (Pitfalls)", "Modules", "<code class=\"docutils literal notranslate\"><span class=\"pre\">override</span></code>", "Range Based <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> Loops: Introduction", "Case Study: Range Based <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> On <code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code>", "Ranges And Views: Good Or Bad?", "Ranges", "Ranges: Overview", "Ranges And Views: Links", "Structured Binding", "Smart Pointers: Closing Words", "Smart Pointers (<code class=\"docutils literal notranslate\"><span class=\"pre\">std::unique_ptr</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">std::shared_ptr</span></code>)", "Introduction", "(Trying To) Handwrite A Smart Pointer Class in C++ Before C++11", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::shared_ptr</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::unique_ptr</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::weak_ptr</span></code>", "Perfect Forwarding", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::bind</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::function</span></code>", "Functions, Functions", "Threads Introduction", "Threads in C++", "Race Conditions", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::atomic</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::mutex</span></code> And Friends", "Scoped Locking", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::condition_variable</span></code> (Live Hacking Multithreaded Queue)", "Multithreading", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::promise</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">std::future</span></code> (And Some <code class=\"docutils literal notranslate\"><span class=\"pre\">std::chrono</span></code>) (Some Live Hacking)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::chrono</span></code>", "New-Style Union: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::variant</span></code>", "Miscellaneous", "Exercise: Bag Of Items, By Copy", "Exercise: Bag Of Items, By Shared Reference", "Exercise: Bag Of Items, By Unique Reference", "Introduction", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::filesystem</span></code>", "C++ 11", "Generated Topic Graph", "Topics", "Modern Character Devices (Screenplay)", "Modern Character Devices (Slideshow)", "Modern Character Devices", "File Operations on Character Devices (Screenplay)", "File Operations on Character Devices (Slideshow)", "File Operations on Character Devices", "Coding: First Functionality (Slideshow)", "Coding: First Functionality", "Character Device Basics (Livehacking Screenplay)", "Character Device Basics (Slideshow)", "Character Device Basics", "Coding: Multiple Devices (Slideshow)", "Coding: Multiple Devices", "Coding: Refactoring (Screenplay)", "Coding: Refactoring (Slideshow)", "Coding: Refactoring", "DMA (Slideshow)", "DMA", "Building a Fedora Kernel (Screenplay)", "Fedora: Building the Kernel", "Fedora: Building External Kernel Modules (Screenplay)", "Fedora: Building External Kernel Modules", "Linux Kernel Driver Development", "Module Loading, Hello World (Slideshow)", "Module Loading, Hello World", "Coding: Raspi GPIO Interrupts (Slideshow)", "Coding: Raspi GPIO Interrupts", "Interrupts (Slideshow)", "Interrupts", "IO Memory (Slideshow)", "IO Memory", "Dynamic Memory: <code class=\"docutils literal notranslate\"><span class=\"pre\">kmalloc()</span></code> (Slideshow)", "Dynamic Memory: <code class=\"docutils literal notranslate\"><span class=\"pre\">kmalloc()</span></code>", "Doubly Linked Lists (Slideshow)", "Doubly Linked Lists", "Coding: Fix Race Condition (Mutex) (Slideshow)", "Coding: Fix Race Condition (Mutex)", "Mutex (and RT Mutex) (Slideshow)", "Mutex (and RT Mutex)", "Network Devices (Slideshow)", "Network Devices", "PCI (Slideshow)", "PCI", "Process vs.Atomic Context (Slideshow)", "Process vs.Atomic Context", "Rasperry Pi: Kernel Build", "Raspberry Pi: Building the Kernel", "Sample Code Maintenance", "Coding: Fix <em>Sleep While Atomic</em> (Slideshow)", "Coding: Fix <em>Sleep While Atomic</em>", "Spinlock (vs. Mutex) (Slideshow)", "Spinlock (vs. Mutex)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">dup()</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">fork()</span></code>, and Reference Counting (Stub)", "Coding: Timed Event (Slideshow)", "Coding: Timed Event", "Timer Management (Slideshow)", "Timer Management", "To Do List", "Accessing Userspace Memory (Screenplay)", "Accessing Userspace Memory (Slideshow)", "Accessing Userspace Memory", "Waiting for Something (Screenplay)", "Waiting for Something (Slideshow)", "Waiting for Something", "Workqueue (Screenplay)", "Workqueue (Slideshow)", "Workqueue", "Exercises: Archiving And Compression", "Archiving and Compression", "<code class=\"docutils literal notranslate\"><span class=\"pre\">gzip</span></code>", "Archiving and Compression", "<code class=\"docutils literal notranslate\"><span class=\"pre\">tar</span></code>", "Exam (ECE/SS2022/G1): Do A Lot With Files And Directories", "Exam (ECE/SS2022/G2): Do A Lot With Files And Directories", "Exercises/Exams: Linux Basics", "Linux Basics", "Everything Is A File (Live Demo)", "Environment (Variables)", "FH/Moodle Quiz: Linux Basics", "Introduction: Concepts and Terminology", "Login? What Is That?", "Overview", "Processes, Scheduling, Address Spaces", "Process Hierarchy (Parent, Child Process)", "Windows Subsystem for Linux (WSL)", "Exercises: IO-Redirection, Pipes", "I/O Redirection And Pipes", "I/O Redirection", "I/O Redirection: Swap <code class=\"docutils literal notranslate\"><span class=\"pre\">stdout</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">stderr</span></code>", "Pipes", "Permissions: Mode, User and Group Ownership", "Exercise: Determine Your User Credentials", "FH/Moodle Quiz: Permissions", "FH/Moodle Quiz: Permissions", "Exercises: File System Permissions", "Exercise: Create Private Directory", "Question: Private Directory", "Exercise: Create Public Directory", "Question: Public Directory", "Exercise: Create Group-Shared File", "File System Permissions", "SetUID Programs: <code class=\"docutils literal notranslate\"><span class=\"pre\">passwd</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">sudo</span></code>, \u2026", "SetUID: Live Demo", "Ugly Hack: Sticky Bit", "Default Permissions: <code class=\"docutils literal notranslate\"><span class=\"pre\">umask</span></code>", "Commandline", "Shell Configuration File: <code class=\"docutils literal notranslate\"><span class=\"pre\">~/.bashrc</span></code>", "Copying: <code class=\"docutils literal notranslate\"><span class=\"pre\">cp</span></code>", "Current Working Directory", "Exercise: Copy Directory Tree", "Exercise: Copy Files", "Exercise: Create Files (I/O Redirection)", "Exercise: Move Files", "Exercises: Create/Copy/Move/Remove", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">mkdir</span></code>", "Exercise: Funny Stuff", "Exercise: Remove Directory Tree", "Exercise: Verify, Repeat", "FH/Moodle Quiz: Shell", "The Shell - Exercises", "Exercise: File Types in <code class=\"docutils literal notranslate\"><span class=\"pre\">/dev</span></code>", "Exercise: Size of <code class=\"docutils literal notranslate\"><span class=\"pre\">/etc/passwd</span></code>", "Exercises: The <code class=\"docutils literal notranslate\"><span class=\"pre\">ls</span></code> Command", "Exercise: Permissions of Home Directory", "Creating And Removing Files and Directories", "The Shell (Bash - \u201cBourne Again Shell\u201d)", "Symbolic Links, Hard Links", "Directory Listings: The <code class=\"docutils literal notranslate\"><span class=\"pre\">ls</span></code> Command", "Moving and Renaming: <code class=\"docutils literal notranslate\"><span class=\"pre\">mv</span></code>", "Absolute and Relative Paths", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cat</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cut</span></code>", "Exercises: Inspecting Text Files", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">grep</span></code>", "Tools: Inspecting Text Files", "<code class=\"docutils literal notranslate\"><span class=\"pre\">head</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">tail</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">less</span></code>", "Overview", "Drafts", "Yocto", "Linux", "Controlling a Brushless Motor With Raspberry Pi", "CAN/Linux Basics", "CAN Interfaces", "Programming", "Hardware, Kernel", "CAN Bus With Linux And Python", "Linux Hardware Interfaces", "Linux and I2C (using LM73 Temperature Sensor as Slave)", "PWM Userspace Interface (using PCA9685)", "Linux and OneWire (using DS18B20 Temperature Sensor as Slave)", "SSH: Basics", "Exercise: Copy a File To Remote Machine, And Verify", "Exercise: Copy a Tree To Remote Machine (And Adjust Permissions)", "Exercises: SSH", "Exercise: Create SSH Key Pair", "SSH: Secure Shell", "SSH: Public Key Authentication", "SSH: Links", "SSH: Port Forwarding", "SSH: Secure Copy (<code class=\"docutils literal notranslate\"><span class=\"pre\">scp</span></code>)", "SSH File System (<code class=\"docutils literal notranslate\"><span class=\"pre\">sshfs</span></code>)", "Error Handling", "Linux Systems Programming: Basics", "System Calls vs. Library Functions", "Blocking I/O: What is That? (\u201cEverything is a file\u201d)", "Blocking I/O (On A File): What is That?", "Blocking I/O: On A Network Socket", "Blocking I/O: On A Timer? WTF?", "Blocking I/O: What Is That?", "File I/O: Basics", "Exercise: Copy A File", "Exercise: Create File With Hole", "Duplicating (Whats Going On?)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_CREAT</span></code>: Creating A File", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_EXCL</span></code>: Creating A File, But Failing If It Already Exists", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_RDONLY</span></code>: Reading a File", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_WRONLY</span></code>: Writing A File (Which Must Exist)", "Exercise: Read Temperature From Onewire Sensor", "File I/O", "Miscellaneous", "Linux Systems Programming", "Get Value Of GPIO", "Introductory Live Hacking, Hardware-Wise (<code class=\"docutils literal notranslate\"><span class=\"pre\">sysfs</span></code> GPIO)", "Intro: <code class=\"docutils literal notranslate\"><span class=\"pre\">sysfs</span></code> GPIO", "Interrupts In Userspace", "Basics", "Thread Life Cycle", "Thread Creation, Race Condition", "Synchronization", "Mutex: Solve Load/Modify/Store Conflict", "Communication: Condition Variable", "Condition Variable: Message Queue", "Miscellaneous", "Last Warning", "POSIX Threads", "Trylock/islocked", "Process: Arguments, Exit Status", "Processes", "The Process Tree (And Environment, And <code class=\"docutils literal notranslate\"><span class=\"pre\">procfs</span></code>)", "Scheduling (and Multitasking)", "Scheduling", "Tasks? Processes? Threads?", "Scheduling: Exam Questions", "Realtime", "Realtime API", "Wakeup Latency, CPU Frequency (Gotcha)", "Code: Sysprog: Event Driven Programming", "Screenplay: Sysprog: POSIX IPC", "Sysprog: Events", "Code: Sysprog: POSIX IPC", "Screenplay: Sysprog: POSIX IPC", "Slides: Sysprog: POSIX IPC", "Sysprog: POSIX IPC", "Code: Sysprog: Signals", "Screenplay: Sysprog: Signals", "Slides: Sysprog: Signals", "Sysprog: Signals", "Toolchain: Basics", "CMake: Cross Build", "CMake: Local Build", "Cross Development", "Cross Development", "Exercise: Build Software Package (Cross, Raspberry)", "FH/Moodle Quiz: Toolchain", "Exercises: Toolchain", "Exercise: Build Software Package (Native)", "Exercise: Install And Check Raspberry Toolchain", "Toolchain, And Cross Development", "Case Study: Raspberry Toolchain", "Linaro Toolchain For The Pi (Defunct)", "Building A Cross Toolchain For The Raspberry Pi, Using <code class=\"docutils literal notranslate\"><span class=\"pre\">crosstool-ng</span></code>", "Building A Toolchain <em>On</em> Fedora <em>For</em> Ubuntu 18.04 (WSL)", "Cross Toolchain Setup", "Zooming In: Separate Compilation, and Linking <em>Statically</em>", "Shared Libraries (Shared Objects)", "Object Code Archives/Static Libraries", "Closures", "Comprehensions (List, Dictionary, Set)", "Context Managers: The <code class=\"docutils literal notranslate\"><span class=\"pre\">with</span></code> Statement", "Decorators", "Exception Handling", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">exec()</span></code> Function", "Python: More Language Features", "Iteration, Comprehensions, and Generators", "Implementing A Fibonacci Number Generator", "The Iterator Protocol", "Iteration, Generators, And <code class=\"docutils literal notranslate\"><span class=\"pre\">yield</span></code>", "Iterating Intelligently: Generators, and the Iterator Protocol", "Modules and Packages", "Multithreading (Python)", "Multithreading", "Race Conditions, and Mutexes", "Multithreading: Exam Questions", "Abstract Base Classes (<code class=\"docutils literal notranslate\"><span class=\"pre\">abc</span></code>), And Duck Typing", "Classes And Dictionaries", "Constructor", "Object Oriented Programming", "Inheritance", "Methods", "<code class=\"docutils literal notranslate\"><span class=\"pre\">collections.namedtuple</span></code>", "Operator Overloading", "Properties", "<code class=\"docutils literal notranslate\"><span class=\"pre\">str()</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">repr()</span></code>", "Positional and Keyword Arguments", "Python: The Language Fundamentals", "Python Installation", "Blahblah", "Hello World", "Running Python Programs", "Syntax etc.", "Commandline Arguments (<code class=\"docutils literal notranslate\"><span class=\"pre\">sys.argv</span></code>)", "Variables", "Datatypes", "Compound Datatypes", "Boolean", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code> Statement", "<code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code> Loops", "Sequential Datatypes", "Indexing and Slicing", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> Loops", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">range</span></code> Function", "References, (Im)mutability", "Functions: Global and Local Scope (Livehacking Screenplay)", "Functions (Slideshow)", "Functions", "More About Strings", "String Formatting", "Miscellaneous String Methods", "More About Lists", "More About Dictionaries", "More About Sets", "File I/O", "Function Objects", "Commandline Parsing with <code class=\"docutils literal notranslate\"><span class=\"pre\">argparse</span></code>", "Python: Draft Topics", "Matplotlib", "Package Installation (<code class=\"docutils literal notranslate\"><span class=\"pre\">setuptools</span></code>)", "Exercise: Read CSV File, Write into Sqlite3 Database", "Exercise: Read CSV File", "CSV and Databases", "Exercises", "Exercise: Boolean Expressions", "Exercise: Even Numbers (<code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code>)", "Exercise: Greeting, Depending on Time of Day", "Exercises (External)", "Exercise: Determine Maximum of Two Numbers", "Exercise: Swap Two Variables", "Exercise: Username/Password Check", "Exercise: Digit to English Word", "Exercise: Dictionary: Errors?", "Exercise: Eliminate Empty/Comment-Only Lines", "Exercise: Generator: Fibonacci", "Exercise: Primeness (<code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code>)", "Exercises (Legacy)", "Exercise: Functions: <code class=\"docutils literal notranslate\"><span class=\"pre\">join()</span></code>", "Exercise: Determine Maximum of Two Numbers", "Exercise: Determine Maximum of Two Numbers (Function)", "Exercise: Mixed List (Executable Program)", "Exercise: Mixed List (Interactive Interpreter)", "Exercise: Parsing <code class=\"docutils literal notranslate\"><span class=\"pre\">/etc/passwd</span></code>", "Exercise: Primeness (Function)", "Exercise: Reverting Lines of a File", "Exercise: String (Right-Justify)", "Exercise: Function: <code class=\"docutils literal notranslate\"><span class=\"pre\">uniq()</span></code>", "Exercise: Generator: <code class=\"docutils literal notranslate\"><span class=\"pre\">uniq()</span></code>", "Exercise: Counting Lines, Words, Characters", "Exercise: Primeness (<code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code>)", "Sensors, And Data Acquisition (Exercise Series)", "Project Setup", "Exercise: Basic \u201cSensor\u201d", "Exercise: Read CSV File (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.dictreader</span></code>)", "Exercise: Refactoring - Extract CSV Reading Into Function (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.dictreader</span></code>)", "Exercise: Read CSV File (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.reader</span></code>)", "Exercise: Refactoring - Extract CSV Reading Into Function (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.reader</span></code>)", "User Database (Exercise Series)", "Exercise: MQTT: Publish User Records", "Exercise: Away From Raw Dictionaries", "Exercise: Convert User Record To JSON And Back", "Exercise: Refactoring - Extract Both CSV Formats Into Module", "Python: All Material, Interrelated", "Python Programming: From Absolute Beginner to Advanced Productivity", "Python Links", "Machine Learning, Artificial Intelligence", "K-Means", "Linear Regression: Running Code (<em>no Notebook!</em>)", "Weather History Dataset", "Linear Regression: Jupyter Notebook", "Linear Regression", "Machine Learning: Concepts and Terminology", "Context Managers (Livehacking Tutorial)", "Context Managers (Slideshow)", "Context Managers (the <code class=\"docutils literal notranslate\"><span class=\"pre\">with</span></code> Statement) (<em>incomplete</em>)", "CSV Files", "DBAPI 2", "Databases", "DBAPI 2: PostgreSQL", "DBAPI 2: <code class=\"docutils literal notranslate\"><span class=\"pre\">sqlite3</span></code>", "Encoding", "Python: Miscellaneous Topics", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">import</span></code> Statement (incomplete)", "MQTT", "Pandas: Adding Rows", "Pandas: Basics (<code class=\"docutils literal notranslate\"><span class=\"pre\">DataFrame</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">Series</span></code>)", "Pandas: Filters", "Pandas", "Pandas: Selecting Rows (And Columns) With <code class=\"docutils literal notranslate\"><span class=\"pre\">iloc[]</span></code>", "Pandas: Indexes", "Pandas: Selecting Rows (And Columns) With <code class=\"docutils literal notranslate\"><span class=\"pre\">loc[]</span></code>", "Pandas: Adding/Modifying Columns", "XML: ElementTree (<code class=\"docutils literal notranslate\"><span class=\"pre\">etree</span></code>)", "Visual Studio Code for Python Programming", "PCAP Exam", "Python: Project/Package Management", "Python Package Index (Livehacking Screenplay)", "Python Package Index (Slideshow)", "Python Package Index", "Packaging, PyPI Upload (Link Collection)", "PyTest", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pytest</span></code> Introduction, By Example", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">unittest</span></code> Module", "Virtual Environments (Livehacking Screenplay)", "Virtual Environments (Slideshow)", "Virtual Environments", "Unit Testing With <code class=\"docutils literal notranslate\"><span class=\"pre\">googletest</span></code>", "Code: Unittest: GTest Basics", "Screenplay: Unittest: GTest Basics", "Unittest: GTest Basics", "Screenplay: Unittest: GTest and CMake", "Unittest: GTest and CMake", "Code: Unittest: GTest Fixtures", "Screenplay: Unittest: GTest Fixtures", "Unittest: GTest Fixtures", "Organisatorisches: Buchung, Kursablauf", "Linux from Scratch, 16.9.2013, M\u00fcnchen", "Shell Scripting/Bourne Again Shell (Bash)", "C: Einf\u00fchrung", "C f\u00fcr Fortgeschrittene", "C++: Einf\u00fchrung und \u00dcberblick", "An Introduction to Modern C++, In Three Days", "C and C++ Programming", "CMake", "Design Patterns For Embedded C++ Developers", "Embedded Software Development: Hardware, Realtime, and Memory Management", "Linux Kernel Driver Development", "Linux Basics: Eine Einf\u00fchrung Anhand von Beispielen", "GNU Make: Die Mutter aller Build Tools", "Advanced Python", "Basic Python", "Herdt", "Eine Woche mit dem Raspberry Pi", "Subversion (SVN)", "Linux Systems Programming: Introduction", "Linux Systems Programming: Virtual Memory, IPC, Shared Libraries", "Linux Systems Programming", "Linux Systems Programming: Multithreading", "Linux Systems Programming: Network Programming", "Unittesting and Test Driven Development"], "terms": {"di": [0, 22, 145, 148, 216, 410, 1044, 1046, 1050, 1052], "j\u00f6rg": [0, 22, 149, 183, 191, 195, 210, 213, 216, 226, 229, 244, 265, 271, 292, 293, 295, 297, 362, 436, 952, 955, 993, 1017, 1044, 1045, 1046, 1047, 1050, 1051, 1052], "faschingbau": [0, 11, 22, 35, 48, 57, 60, 113, 130, 137, 138, 146, 164, 167, 168, 170, 171, 172, 173, 183, 190, 195, 196, 203, 206, 211, 213, 216, 219, 223, 226, 229, 232, 244, 251, 261, 265, 271, 292, 293, 295, 298, 301, 306, 362, 393, 410, 415, 428, 435, 436, 470, 481, 541, 587, 616, 617, 618, 619, 620, 621, 638, 784, 785, 792, 794, 799, 813, 829, 842, 848, 873, 910, 952, 955, 956, 968, 969, 971, 972, 973, 975, 976, 978, 984, 1006, 1033, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1054, 1063, 1066, 1072, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1086, 1106, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130], "offic": [0, 30, 136, 152], "co": [0, 11, 30, 35, 113, 127, 138, 167, 168, 170, 171, 172, 173, 234, 251, 255, 301, 306, 408, 415, 634, 956, 978, 1054, 1072, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1086, 1104, 1106, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130], "43": [0, 6, 134, 141, 153, 164, 174, 179, 181, 184, 187, 190, 195, 196, 200, 203, 206, 211, 213, 219, 223, 226, 229, 232, 241, 244, 248, 251, 261, 265, 271, 293, 295, 296, 385, 398, 410, 569, 639, 689, 705, 839, 848, 861, 863, 902, 965], "0": [0, 6, 20, 22, 30, 59, 61, 105, 108, 109, 115, 117, 127, 130, 132, 133, 134, 136, 142, 146, 150, 151, 152, 153, 154, 164, 167, 169, 171, 174, 179, 181, 182, 183, 184, 187, 190, 191, 192, 195, 196, 200, 203, 204, 206, 209, 211, 213, 216, 219, 222, 223, 226, 229, 231, 232, 234, 236, 241, 244, 247, 248, 249, 251, 255, 259, 260, 261, 265, 271, 278, 279, 287, 293, 294, 295, 296, 297, 298, 301, 323, 324, 326, 328, 330, 332, 333, 334, 336, 343, 344, 346, 347, 348, 356, 359, 361, 362, 368, 369, 371, 374, 389, 390, 391, 392, 394, 395, 398, 399, 402, 404, 408, 410, 411, 414, 418, 419, 421, 424, 427, 428, 433, 435, 438, 440, 447, 448, 450, 452, 453, 454, 455, 457, 458, 459, 462, 463, 466, 467, 468, 469, 473, 476, 477, 478, 480, 481, 482, 485, 493, 499, 500, 509, 512, 518, 521, 528, 529, 530, 532, 533, 536, 537, 538, 539, 541, 543, 544, 545, 546, 547, 548, 551, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 569, 570, 573, 574, 575, 579, 583, 584, 585, 586, 587, 591, 593, 597, 598, 600, 601, 603, 604, 606, 608, 610, 615, 616, 617, 618, 619, 620, 621, 622, 626, 630, 631, 634, 637, 638, 639, 641, 643, 644, 645, 646, 648, 649, 650, 651, 652, 654, 655, 656, 658, 659, 660, 661, 662, 663, 664, 668, 670, 671, 673, 675, 676, 678, 680, 684, 685, 687, 688, 689, 690, 695, 698, 700, 704, 708, 712, 715, 716, 720, 723, 735, 737, 747, 770, 771, 773, 788, 792, 794, 799, 802, 813, 814, 817, 839, 841, 842, 843, 848, 854, 857, 861, 862, 863, 872, 874, 877, 879, 880, 881, 883, 884, 886, 887, 888, 889, 890, 893, 895, 897, 898, 904, 912, 913, 915, 917, 918, 919, 921, 924, 925, 928, 929, 931, 932, 934, 943, 946, 947, 949, 951, 953, 954, 957, 959, 963, 965, 967, 980, 983, 984, 985, 986, 990, 992, 994, 997, 999, 1000, 1001, 1005, 1007, 1009, 1010, 1012, 1015, 1016, 1017, 1022, 1024, 1033, 1043, 1050, 1052, 1058, 1059, 1060, 1063, 1070, 1071, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1087, 1092, 1094, 1099, 1104], "664": [0, 206, 802], "5783814": 0, "gpg": 0, "kei": [0, 8, 30, 40, 95, 99, 100, 106, 111, 126, 128, 130, 142, 150, 159, 164, 169, 171, 172, 174, 179, 181, 183, 186, 187, 188, 190, 195, 196, 198, 200, 201, 203, 204, 206, 211, 213, 214, 216, 219, 223, 226, 228, 229, 233, 237, 240, 241, 244, 246, 247, 251, 261, 264, 265, 267, 268, 270, 271, 295, 298, 301, 306, 334, 382, 582, 584, 587, 626, 675, 710, 784, 785, 792, 849, 853, 865, 866, 867, 869, 874, 955, 959, 968, 986, 987, 1003, 1012, 1022, 1023, 1045, 1047, 1055, 1066, 1079, 1080, 1087, 1112, 1118], "prankergass": [0, 190, 211, 829], "33": [0, 6, 128, 141, 153, 164, 169, 174, 179, 181, 184, 187, 190, 195, 196, 200, 203, 206, 211, 213, 216, 219, 223, 226, 232, 241, 244, 248, 251, 255, 261, 265, 271, 295, 296, 297, 410, 431, 788, 829, 931, 1059, 1060], "8020": [0, 190, 206, 211, 249, 410, 784, 785, 823, 829], "graz": [0, 1, 3, 22, 57, 60, 114, 172, 190, 249, 318, 410, 784, 785, 823, 829, 1054], "uid": [0, 211, 216, 219, 301, 306, 708, 784, 785, 792, 802, 874, 889, 945, 1033], "vat": [0, 175, 1122], "atu63522469": 0, "write": [0, 12, 15, 26, 28, 35, 41, 46, 51, 52, 53, 54, 55, 57, 60, 61, 64, 68, 76, 95, 131, 132, 133, 142, 147, 151, 164, 167, 168, 170, 171, 172, 183, 188, 190, 191, 192, 193, 198, 200, 201, 204, 207, 209, 211, 217, 219, 228, 231, 238, 240, 247, 257, 264, 270, 282, 287, 290, 292, 301, 303, 305, 307, 312, 328, 331, 332, 337, 349, 351, 373, 384, 388, 394, 395, 398, 408, 410, 433, 436, 448, 450, 453, 464, 474, 475, 481, 482, 487, 492, 504, 510, 515, 521, 526, 528, 529, 532, 542, 544, 591, 598, 607, 610, 612, 626, 631, 642, 654, 666, 675, 681, 690, 704, 708, 709, 710, 716, 718, 728, 730, 737, 741, 757, 773, 784, 785, 788, 794, 799, 800, 802, 803, 804, 805, 811, 813, 815, 818, 836, 848, 850, 853, 857, 861, 862, 863, 870, 877, 879, 880, 881, 884, 886, 887, 888, 889, 891, 892, 893, 894, 895, 897, 898, 901, 905, 911, 915, 924, 925, 928, 929, 933, 936, 939, 957, 968, 973, 974, 978, 1001, 1002, 1007, 1012, 1013, 1014, 1016, 1019, 1020, 1021, 1022, 1024, 1025, 1028, 1029, 1031, 1033, 1035, 1036, 1037, 1039, 1040, 1044, 1046, 1049, 1053, 1055, 1071, 1082, 1085, 1092, 1093, 1094, 1112, 1113, 1125], "review": [0, 132, 155, 166, 260, 279, 325], "http": [0, 3, 4, 7, 12, 19, 22, 30, 35, 37, 42, 57, 59, 60, 83, 104, 111, 115, 117, 127, 135, 136, 137, 138, 142, 146, 148, 150, 158, 159, 160, 161, 167, 168, 171, 172, 180, 185, 191, 193, 194, 200, 206, 207, 209, 216, 217, 219, 223, 231, 236, 238, 247, 250, 256, 257, 258, 260, 264, 270, 274, 275, 279, 300, 301, 306, 321, 470, 478, 504, 546, 606, 679, 683, 688, 713, 728, 730, 734, 757, 758, 856, 858, 861, 897, 943, 945, 1000, 1010, 1064, 1069, 1071, 1085, 1087, 1088], "g": [0, 30, 46, 61, 95, 111, 134, 138, 142, 146, 151, 152, 154, 164, 179, 183, 192, 196, 200, 203, 206, 211, 213, 216, 219, 223, 241, 247, 255, 271, 323, 343, 347, 350, 353, 358, 364, 365, 366, 368, 371, 386, 390, 398, 402, 403, 410, 411, 413, 416, 422, 423, 436, 440, 448, 470, 477, 481, 528, 532, 533, 562, 582, 600, 601, 630, 634, 637, 639, 648, 668, 689, 697, 701, 708, 716, 735, 757, 776, 795, 802, 817, 839, 846, 849, 856, 874, 883, 893, 913, 915, 917, 928, 929, 931, 932, 933, 934, 945, 950, 952, 954, 962, 974, 976, 977, 995, 996, 1000, 1001, 1067, 1071, 1082, 1094, 1099, 1115], "page": [0, 31, 37, 59, 70, 72, 76, 104, 111, 126, 127, 128, 130, 131, 133, 134, 138, 143, 163, 168, 171, 192, 217, 247, 273, 308, 332, 333, 336, 381, 392, 432, 470, 710, 716, 735, 741, 743, 755, 781, 784, 785, 801, 850, 854, 863, 874, 884, 887, 915, 1062], "r": [0, 6, 12, 30, 36, 41, 59, 134, 136, 137, 141, 142, 150, 152, 153, 154, 163, 164, 167, 169, 170, 174, 179, 181, 184, 187, 190, 192, 196, 197, 200, 203, 206, 209, 211, 213, 216, 219, 223, 226, 229, 231, 232, 241, 244, 248, 249, 251, 261, 265, 271, 293, 296, 301, 310, 322, 343, 368, 398, 410, 417, 431, 450, 451, 480, 485, 548, 575, 678, 686, 708, 721, 730, 735, 753, 757, 758, 788, 794, 799, 802, 813, 816, 817, 819, 839, 846, 854, 861, 862, 863, 865, 866, 874, 885, 888, 889, 897, 931, 932, 933, 943, 945, 946, 953, 974, 979, 982, 988, 999, 1005, 1010, 1042, 1071, 1094, 1130], "ctb02zug3crheb0": 0, "geboren": [1, 22], "am": [1, 3, 6, 16, 30, 35, 57, 60, 63, 105, 113, 131, 132, 133, 134, 136, 137, 138, 139, 140, 150, 163, 175, 184, 220, 224, 251, 539, 676, 757, 796, 845, 850, 863, 872, 874, 889, 999, 1106, 1107, 1109, 1122, 1125, 1129], "19": [1, 6, 22, 111, 141, 143, 152, 153, 154, 163, 169, 172, 174, 179, 181, 183, 184, 187, 190, 195, 196, 200, 203, 206, 207, 211, 213, 216, 219, 223, 226, 229, 232, 241, 244, 248, 251, 255, 261, 265, 271, 294, 295, 296, 298, 306, 309, 318, 386, 410, 417, 686, 817, 839, 863, 934, 943, 975, 981, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1054, 1059, 1060, 1067, 1075, 1087, 1092, 1094], "6": [1, 6, 30, 59, 61, 107, 132, 134, 142, 146, 148, 151, 152, 153, 154, 164, 169, 171, 176, 179, 181, 182, 184, 187, 190, 191, 192, 194, 197, 199, 200, 203, 204, 206, 211, 213, 216, 219, 223, 226, 230, 232, 241, 244, 248, 251, 255, 261, 265, 271, 293, 294, 296, 297, 301, 325, 326, 348, 385, 391, 402, 447, 448, 486, 487, 488, 489, 501, 521, 528, 530, 533, 536, 537, 540, 542, 545, 546, 547, 548, 566, 567, 568, 569, 575, 606, 607, 643, 689, 708, 813, 836, 839, 843, 848, 854, 861, 862, 863, 877, 885, 898, 931, 943, 945, 948, 954, 957, 963, 986, 987, 990, 992, 994, 1010, 1016, 1033, 1040, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1059, 1060, 1067, 1071, 1085, 1087, 1092, 1093, 1094, 1099, 1123], "1966": [1, 22, 172, 206, 216, 226, 229, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1067], "diplom": [1, 22], "au": [1, 7, 22, 30, 139, 140, 148, 149, 150, 154, 164, 175, 185, 187, 194, 210, 213, 219, 220, 222, 234, 271, 296, 301, 302, 319, 1107, 1109, 1110, 1111, 1116, 1122, 1125], "technisch": [1, 22, 319, 1124], "mathematik": [1, 22], "an": [1, 3, 12, 16, 20, 22, 27, 36, 38, 41, 43, 44, 46, 52, 53, 55, 56, 57, 60, 67, 71, 72, 76, 80, 81, 83, 90, 105, 106, 108, 109, 111, 119, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 161, 163, 164, 167, 169, 170, 171, 174, 182, 183, 187, 188, 190, 191, 192, 193, 195, 198, 200, 203, 204, 207, 208, 209, 211, 214, 216, 217, 219, 223, 229, 231, 232, 236, 238, 240, 247, 250, 253, 255, 256, 257, 258, 260, 264, 265, 275, 279, 282, 287, 288, 312, 318, 320, 324, 326, 330, 333, 334, 347, 356, 364, 368, 371, 374, 375, 386, 389, 390, 391, 392, 394, 397, 404, 408, 410, 414, 417, 423, 426, 427, 428, 431, 432, 436, 437, 438, 447, 448, 450, 451, 452, 453, 469, 470, 472, 477, 480, 481, 485, 487, 488, 489, 501, 504, 528, 529, 531, 533, 536, 537, 538, 542, 544, 545, 546, 547, 548, 561, 566, 579, 582, 585, 586, 591, 597, 600, 601, 608, 613, 617, 619, 620, 621, 622, 626, 627, 630, 634, 638, 647, 653, 666, 668, 676, 678, 685, 686, 688, 689, 690, 696, 708, 709, 710, 711, 716, 721, 723, 726, 728, 735, 757, 765, 770, 783, 784, 785, 789, 790, 794, 802, 811, 816, 817, 820, 823, 842, 844, 854, 861, 863, 865, 866, 871, 874, 879, 880, 881, 882, 884, 888, 889, 890, 891, 895, 897, 898, 904, 910, 912, 913, 916, 917, 918, 919, 925, 929, 931, 932, 937, 941, 946, 947, 950, 951, 954, 960, 961, 962, 966, 971, 972, 974, 976, 977, 978, 982, 983, 984, 986, 990, 996, 1005, 1006, 1007, 1010, 1012, 1025, 1031, 1032, 1033, 1049, 1054, 1055, 1057, 1059, 1060, 1061, 1062, 1070, 1071, 1074, 1079, 1080, 1084, 1087, 1092, 1093, 1095, 1104, 1106, 1107, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1123, 1125, 1126, 1130], "der": [1, 3, 6, 7, 10, 62, 127, 139, 140, 141, 145, 148, 149, 150, 151, 154, 156, 158, 164, 166, 175, 176, 177, 180, 181, 184, 185, 187, 190, 194, 210, 211, 213, 219, 222, 223, 226, 234, 293, 301, 306, 1106, 1108, 1109, 1110, 1111, 1116, 1118, 1119, 1122, 1123, 1124, 1125, 1126, 1128, 1129, 1130], "tu": [1, 22], "iicm": [1, 22], "1993": [1, 22], "universit\u00e4tsassist": [1, 22], "ebendort": [1, 22], "bi": [1, 3, 22, 30, 139, 140, 164, 174, 271, 1107, 1126], "1998": [1, 3, 22, 142, 150, 206, 527], "vorlesungen": 1, "programmieren": [1, 150, 154, 302, 318, 1111, 1116, 1119, 1123, 1125, 1129, 1130], "basi": [1, 3, 6, 23, 76, 155, 163, 184, 193, 207, 219, 253, 296, 371, 1115, 1126, 1127], "c": [1, 3, 4, 8, 11, 20, 22, 36, 40, 41, 61, 63, 70, 71, 72, 76, 83, 85, 104, 107, 116, 126, 127, 130, 131, 132, 133, 134, 137, 144, 147, 149, 151, 159, 160, 164, 169, 170, 176, 179, 181, 186, 187, 190, 191, 200, 203, 204, 206, 210, 211, 213, 216, 219, 223, 226, 231, 232, 241, 244, 251, 257, 261, 265, 271, 274, 287, 296, 300, 302, 303, 308, 314, 315, 318, 320, 321, 322, 323, 324, 326, 330, 332, 334, 335, 336, 339, 342, 344, 346, 347, 348, 350, 354, 358, 359, 362, 363, 364, 365, 366, 370, 372, 374, 375, 376, 380, 381, 383, 384, 386, 387, 388, 390, 391, 392, 394, 395, 396, 398, 399, 400, 402, 403, 404, 405, 411, 414, 415, 416, 417, 420, 421, 422, 427, 428, 430, 431, 436, 440, 446, 448, 451, 457, 469, 470, 473, 476, 477, 479, 480, 481, 483, 484, 486, 492, 503, 527, 529, 531, 532, 533, 534, 538, 539, 540, 544, 545, 547, 549, 552, 557, 562, 564, 565, 569, 571, 575, 577, 579, 581, 582, 583, 584, 587, 589, 590, 591, 593, 594, 596, 597, 598, 599, 600, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 628, 634, 635, 639, 640, 641, 642, 643, 647, 653, 654, 665, 666, 667, 669, 670, 671, 672, 673, 674, 677, 678, 679, 680, 682, 683, 685, 686, 688, 689, 690, 691, 692, 694, 699, 700, 707, 708, 710, 711, 713, 716, 720, 721, 725, 726, 730, 732, 735, 737, 747, 757, 759, 760, 765, 773, 776, 781, 783, 789, 794, 796, 799, 814, 817, 839, 845, 848, 854, 855, 861, 862, 863, 875, 879, 880, 881, 886, 887, 888, 889, 890, 899, 902, 907, 915, 918, 920, 921, 924, 927, 928, 929, 931, 932, 933, 939, 941, 943, 947, 948, 949, 950, 952, 953, 977, 985, 986, 994, 995, 999, 1005, 1012, 1069, 1070, 1074, 1093, 1094, 1101, 1104, 1114, 1116, 1117, 1119, 1125, 1126, 1127, 1128, 1129, 1130], "und": [1, 3, 4, 5, 6, 7, 35, 37, 124, 139, 140, 145, 149, 150, 154, 156, 158, 166, 170, 176, 180, 182, 184, 189, 191, 195, 200, 211, 215, 216, 221, 223, 227, 233, 234, 251, 261, 271, 296, 297, 301, 306, 318, 320, 356, 364, 797, 844, 845, 864, 1106, 1107, 1108, 1109, 1110, 1114, 1116, 1118, 1119, 1123, 1124, 1125, 1126, 1128, 1129, 1130], "\u00fcbertragungsprotokol": [1, 144], "forschungst\u00e4tigkeit": 1, "volltextsuch": 1, "hyperwav": [1, 3, 22], "2001": [1, 3, 22, 200, 206, 216, 219, 244], "leitung": 1, "serverprogrammierung": 1, "oo": [1, 41, 70, 71, 72, 76, 104, 111, 144, 167, 180, 182, 191, 210, 217, 218, 221, 247, 251, 257, 259, 260, 264, 279, 305, 314, 315, 410, 432, 475, 526, 527, 534, 597, 598, 601, 603, 604, 626, 690, 710, 749, 759, 956, 970, 1112, 1115], "design": [1, 3, 19, 22, 51, 55, 72, 76, 78, 80, 83, 104, 127, 128, 131, 144, 147, 167, 193, 194, 210, 256, 258, 309, 318, 320, 347, 377, 397, 398, 401, 409, 418, 425, 426, 427, 428, 430, 431, 433, 435, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 475, 477, 480, 526, 527, 533, 535, 551, 623, 672, 685, 689, 690, 692, 708, 710, 711, 862, 931, 1050, 1093, 1111, 1114], "analys": [1, 3, 144, 1109], "ration": [1, 3, 36, 137], "rose": [1, 3, 30], "f\u00fcr": [1, 3, 62, 139, 140, 145, 149, 151, 154, 175, 176, 187, 194, 210, 222, 234, 248, 301, 306, 318, 320, 819, 1106, 1107, 1109, 1116, 1122, 1123, 1125, 1128], "java": [1, 8, 174, 175, 186, 198, 207, 587, 600, 685, 690, 697, 967, 980, 986, 995, 1122, 1130], "releasemanag": [1, 3, 22, 144, 1124], "cv": [1, 3, 22, 30, 127, 201, 1124], "subvers": [1, 3, 147, 320, 839], "systemnah": [1, 3, 22, 126, 144, 921, 924, 928, 1125], "programmierung": [1, 3, 4, 5, 7, 22, 124, 144, 198, 225, 234, 318, 1107, 1108, 1109, 1111, 1116, 1123, 1125, 1128], "unter": [1, 3, 22, 62, 140, 148, 149, 166, 174, 302, 845, 1107, 1108, 1111, 1116, 1119, 1123, 1126, 1128, 1129], "unix": [1, 70, 71, 72, 76, 95, 128, 131, 160, 183, 247, 287, 301, 302, 303, 314, 315, 319, 336, 390, 436, 610, 701, 708, 710, 714, 716, 749, 782, 783, 784, 799, 801, 813, 841, 844, 850, 854, 857, 862, 874, 899, 915, 925, 981, 1005, 1033, 1107, 1108, 1110, 1114, 1116, 1118, 1119, 1123, 1125, 1126, 1127, 1129], "window": [1, 3, 30, 95, 96, 101, 102, 111, 119, 131, 136, 138, 148, 150, 163, 171, 188, 202, 204, 206, 217, 220, 231, 236, 238, 240, 246, 247, 259, 275, 278, 287, 298, 301, 304, 306, 319, 331, 398, 692, 695, 710, 787, 791, 817, 853, 883, 899, 904, 979, 981, 982, 1005, 1055, 1094], "nt": 1, "salomon": [1, 3, 22], "friesach": [1, 3, 22], "bei": [1, 3, 22, 139, 140, 145, 149, 154, 158, 164, 166, 175, 176, 179, 181, 219, 234, 293, 318, 917, 1106, 1107, 1122, 1124], "2006": [1, 3, 22, 206], "magicdraw": 1, "datenbankdesign": [1, 3], "einer": [1, 3, 139, 140, 145, 150, 158, 164, 166, 175, 176, 181, 188, 296, 318, 845, 917, 1106, 1107, 1111, 1122, 1123, 1128], "objektrelationalen": [1, 3], "datenbankschnittstel": [1, 3], "sp\u00e4ter": [1, 139, 149, 220, 1109], "softwarearchitekt": 1, "leiter": [1, 22], "abteilung": [1, 175, 1122], "forschung": 1, "entwicklung": [1, 3, 4, 302, 1118, 1124], "atron": [1, 3, 22], "unterpremst\u00e4tten": [1, 3, 22], "2010": [1, 3, 22, 127, 143, 206, 980], "enterpris": 1, "architect": [1, 418, 1086], "softwarearchitektur": [1, 3, 22], "versionsmanag": 1, "ibm": 1, "clearcas": [1, 137, 1124], "massgeblich": 1, "portierung": [1, 3, 4, 144], "spielautomatensoftwar": 1, "von": [1, 3, 4, 5, 6, 7, 62, 113, 139, 140, 148, 149, 158, 166, 170, 171, 173, 175, 176, 179, 182, 184, 185, 187, 196, 213, 220, 225, 232, 241, 248, 301, 302, 306, 318, 320, 782, 844, 845, 1106, 1107, 1108, 1109, 1110, 1111, 1114, 1116, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129], "enea": [1, 3, 131], "os": [1, 3, 131], "nach": [1, 3, 4, 139, 140, 144, 145, 150, 154, 158, 174, 175, 181, 219, 220, 226, 319, 779, 1106, 1122], "linux": [1, 3, 4, 23, 35, 37, 41, 57, 59, 60, 61, 63, 70, 71, 72, 76, 82, 83, 84, 85, 96, 101, 102, 104, 116, 123, 126, 127, 128, 130, 132, 133, 134, 138, 141, 142, 143, 148, 155, 158, 163, 170, 192, 193, 200, 206, 209, 216, 219, 220, 223, 228, 231, 236, 238, 240, 249, 256, 258, 259, 275, 278, 287, 298, 300, 301, 302, 303, 307, 308, 314, 315, 318, 320, 362, 384, 392, 401, 404, 421, 432, 446, 469, 475, 476, 479, 480, 481, 482, 483, 484, 485, 503, 512, 526, 693, 699, 708, 709, 710, 711, 713, 714, 716, 717, 719, 721, 722, 724, 726, 727, 728, 729, 730, 731, 733, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 761, 762, 763, 766, 767, 768, 771, 772, 774, 775, 777, 778, 780, 782, 783, 784, 785, 791, 793, 795, 798, 801, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 817, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 837, 845, 847, 850, 854, 856, 857, 858, 862, 864, 865, 866, 867, 868, 869, 870, 872, 873, 874, 877, 879, 880, 881, 882, 883, 884, 889, 891, 892, 895, 896, 897, 898, 900, 908, 911, 914, 916, 921, 924, 925, 928, 931, 932, 933, 935, 936, 937, 938, 939, 940, 941, 942, 943, 945, 946, 947, 948, 949, 979, 981, 1043, 1071, 1092, 1095, 1108, 1109, 1110, 1111, 1114, 1116, 1119, 1123], "beteiligt": [1, 22], "seit": [1, 22, 158, 164, 174, 179, 1107, 1116], "april": [1, 3, 22], "selbstst\u00e4ndig": [1, 22], "fh": [1, 22, 95, 104, 107, 108, 109, 111, 114, 136, 183, 298, 300, 301, 306, 307, 309, 475, 481, 506, 526, 534, 549, 609, 623, 710, 787, 791, 806, 812, 831, 837, 853, 938, 941, 1101], "joanneum": [1, 114, 136, 1101], "kapfenberg": 1, "2011": [1, 3, 127, 128, 143, 256, 258, 318, 322, 527, 626], "2015": [1, 22, 191, 217, 255, 318, 633, 1055], "lehrveranstaltung": [1, 302], "im": [1, 3, 7, 28, 30, 36, 88, 139, 140, 149, 150, 154, 158, 163, 164, 166, 167, 170, 172, 175, 176, 179, 181, 185, 187, 188, 194, 195, 198, 201, 202, 204, 207, 210, 214, 215, 216, 222, 223, 225, 227, 228, 230, 243, 245, 250, 252, 253, 257, 259, 260, 263, 264, 266, 269, 270, 272, 278, 279, 287, 288, 289, 290, 291, 292, 301, 306, 710, 956, 978, 1012, 1013, 1014, 1024, 1027, 1035, 1036, 1038, 1039, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1060, 1071, 1072, 1094, 1107, 1110, 1116, 1118, 1122, 1123, 1125, 1126, 1129, 1130], "lehrgang": 1, "softwar": [1, 12, 22, 23, 39, 66, 71, 72, 76, 83, 95, 102, 111, 130, 138, 141, 142, 147, 158, 164, 170, 174, 183, 200, 206, 207, 216, 217, 219, 244, 256, 258, 259, 260, 273, 279, 298, 319, 320, 386, 418, 426, 427, 436, 438, 604, 690, 710, 711, 741, 788, 801, 853, 854, 861, 862, 877, 929, 938, 941, 1010, 1057, 1114, 1115, 1117, 1130], "avl": [1, 22, 128], "2018": [1, 22, 134, 206, 631], "2019": [1, 38, 112, 127, 169, 191, 240, 264, 318, 504, 631, 672, 839, 1054, 1055, 1057], "linuxexpert": [1, 22], "architekt": [1, 22], "build": [1, 4, 16, 27, 38, 40, 42, 48, 70, 71, 72, 76, 82, 85, 95, 102, 106, 111, 115, 121, 127, 131, 136, 137, 143, 147, 158, 161, 171, 192, 209, 212, 236, 238, 240, 247, 256, 258, 261, 268, 273, 274, 275, 304, 307, 308, 319, 320, 323, 364, 377, 392, 404, 416, 417, 418, 420, 422, 432, 446, 452, 469, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 503, 504, 509, 512, 526, 617, 654, 674, 684, 698, 710, 714, 717, 719, 722, 724, 726, 727, 734, 736, 737, 738, 742, 748, 753, 754, 759, 761, 766, 772, 775, 778, 814, 853, 862, 863, 887, 888, 889, 890, 904, 923, 927, 931, 934, 938, 941, 942, 946, 993, 1004, 1010, 1087, 1092, 1098, 1102, 1107, 1112, 1114], "manag": [1, 13, 22, 28, 61, 66, 70, 71, 72, 76, 92, 95, 106, 130, 132, 141, 146, 147, 155, 158, 160, 163, 167, 170, 171, 177, 178, 182, 187, 188, 191, 193, 203, 209, 212, 217, 219, 220, 226, 229, 244, 251, 258, 260, 261, 264, 265, 268, 279, 304, 305, 307, 314, 315, 319, 320, 381, 398, 409, 427, 440, 497, 504, 529, 534, 623, 634, 635, 637, 666, 671, 682, 683, 685, 686, 687, 691, 699, 707, 709, 710, 728, 734, 741, 743, 766, 772, 775, 778, 788, 792, 793, 848, 853, 862, 870, 882, 915, 916, 929, 945, 956, 965, 984, 1008, 1012, 1053, 1054, 1055, 1056, 1057, 1061, 1072, 1074, 1087, 1089, 1091, 1092, 1096, 1101, 1112, 1114, 1117, 1124], "schittstel": 1, "zum": [1, 3, 139, 140, 149, 154, 158, 164, 174, 187, 194, 211, 271, 319, 1107, 1109, 1110, 1111, 1123, 1126, 1128], "weiser": 1, "alter": [1, 166, 167, 217, 240, 319, 530, 538, 844, 1055], "mann": 1, "2020": [1, 22, 111, 112, 127, 128, 134, 138, 139, 143, 146, 150, 169, 171, 206, 318, 481, 482, 634, 647, 784, 785, 864, 873, 891, 980, 1054, 1059, 1101, 1123], "embed": [1, 3, 4, 22, 70, 85, 102, 114, 126, 127, 128, 131, 133, 144, 147, 171, 173, 196, 239, 299, 304, 306, 318, 320, 692, 710, 745, 757, 795, 817, 863, 874, 915, 931, 958, 999, 1108, 1109, 1110, 1114, 1118, 1119, 1123, 1127], "comput": [1, 22, 27, 28, 30, 70, 82, 85, 99, 114, 134, 173, 223, 232, 256, 258, 286, 299, 301, 304, 306, 318, 327, 400, 405, 406, 431, 528, 538, 541, 547, 580, 676, 689, 701, 710, 779, 786, 854, 862, 864, 865, 872, 899, 913, 916, 980, 1071, 1087, 1117], "electron": [1, 136, 319, 862], "engin": [1, 134, 207, 209, 275, 319, 390, 394, 398, 408, 439, 473, 485, 862, 978, 1130], "kontakt": [2, 22], "curriculum": 2, "vita": 2, "skill": [2, 83, 127, 915, 978], "projekt": [2, 128, 149, 1119, 1123], "stand": [3, 141, 190, 304, 757, 863, 947, 1066], "j\u00e4nner": [3, 22], "2014": [3, 128, 149, 170, 206, 240, 255, 264, 859, 1055], "devicedriv": 3, "die": [3, 6, 7, 35, 43, 44, 45, 49, 53, 54, 57, 60, 62, 127, 140, 145, 148, 149, 150, 151, 154, 158, 164, 166, 174, 175, 177, 179, 181, 184, 185, 187, 190, 194, 203, 210, 213, 216, 219, 222, 223, 226, 251, 296, 301, 302, 306, 319, 320, 454, 468, 710, 844, 845, 917, 1055, 1106, 1107, 1108, 1109, 1110, 1111, 1116, 1118, 1122, 1123, 1124, 1125, 1126, 1128, 1129, 1130], "pci": [3, 178, 710, 734, 735, 796, 853, 861, 897, 1117], "hardwar": [3, 63, 67, 70, 71, 72, 76, 78, 116, 120, 130, 131, 134, 144, 147, 206, 207, 219, 256, 259, 260, 278, 279, 287, 302, 303, 304, 319, 320, 336, 347, 350, 386, 404, 408, 481, 483, 484, 485, 503, 701, 710, 737, 757, 788, 793, 794, 853, 854, 855, 856, 859, 862, 878, 880, 881, 894, 897, 929, 1106, 1115, 1117, 1123], "ein": [3, 6, 7, 35, 139, 140, 145, 148, 149, 150, 151, 154, 156, 158, 166, 170, 171, 173, 174, 175, 177, 179, 181, 182, 184, 185, 187, 188, 190, 194, 196, 200, 203, 204, 210, 211, 213, 216, 219, 220, 222, 223, 226, 234, 241, 244, 251, 261, 265, 271, 293, 296, 301, 306, 319, 320, 364, 491, 783, 844, 845, 917, 985, 1106, 1107, 1108, 1109, 1110, 1111, 1114, 1116, 1119, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130], "messger\u00e4teherstel": 3, "de": [3, 6, 7, 30, 35, 127, 139, 141, 145, 148, 149, 154, 158, 164, 166, 174, 175, 184, 185, 194, 210, 219, 222, 226, 301, 395, 688, 779, 781, 845, 858, 1054, 1083, 1106, 1107, 1108, 1109, 1111, 1116, 1118, 1122, 1123, 1125, 1126, 1128, 1129, 1130], "untenstehenden": 3, "zeit": [3, 140, 175, 1107, 1109, 1129], "dato": 3, "ort": 3, "raum": [3, 154], "anbindung": 3, "verschieden": [3, 22, 164, 319, 1108, 1109, 1110, 1116, 1123, 1128], "hardwareinterfac": 3, "i2c": [3, 4, 63, 76, 79, 83, 116, 119, 131, 132, 158, 171, 247, 304, 307, 312, 319, 425, 455, 514, 515, 523, 710, 757, 853, 860, 862, 897, 1116, 1123], "spi": [3, 4, 76, 131, 149, 158, 319, 514, 515, 523, 855, 856, 857, 862, 897, 1116, 1123], "can": [3, 11, 16, 28, 55, 56, 66, 73, 78, 81, 106, 108, 109, 111, 125, 127, 128, 130, 131, 132, 133, 135, 136, 137, 138, 142, 146, 147, 148, 151, 153, 155, 159, 160, 161, 163, 167, 168, 169, 183, 190, 192, 200, 203, 206, 207, 209, 216, 219, 223, 226, 229, 247, 250, 253, 255, 256, 258, 261, 265, 271, 273, 282, 287, 293, 295, 298, 301, 306, 312, 319, 324, 326, 330, 334, 338, 344, 347, 358, 362, 368, 369, 372, 379, 384, 386, 390, 391, 392, 393, 394, 397, 398, 402, 403, 404, 408, 410, 411, 413, 419, 421, 422, 428, 433, 436, 437, 440, 447, 448, 452, 453, 454, 466, 471, 482, 484, 512, 518, 528, 530, 535, 537, 538, 543, 544, 551, 562, 566, 582, 583, 588, 597, 601, 604, 608, 613, 618, 620, 621, 622, 631, 633, 636, 637, 638, 639, 643, 648, 672, 675, 676, 678, 684, 685, 688, 689, 690, 693, 696, 698, 706, 708, 710, 716, 728, 743, 747, 751, 755, 757, 762, 765, 771, 783, 784, 785, 788, 789, 790, 792, 794, 795, 796, 797, 799, 800, 802, 807, 809, 811, 813, 815, 817, 818, 853, 854, 860, 861, 862, 863, 866, 868, 870, 872, 873, 874, 881, 883, 887, 891, 900, 902, 913, 916, 917, 925, 929, 933, 943, 948, 950, 952, 953, 954, 955, 957, 958, 959, 962, 965, 966, 967, 974, 975, 977, 978, 983, 986, 987, 990, 995, 997, 1003, 1005, 1007, 1010, 1012, 1019, 1029, 1040, 1050, 1051, 1052, 1054, 1060, 1062, 1064, 1070, 1071, 1077, 1079, 1084, 1087, 1092, 1112, 1114, 1116, 1123, 1127, 1129], "custom": [3, 26, 28, 30, 37, 95, 116, 120, 124, 127, 131, 134, 136, 137, 143, 147, 160, 168, 170, 172, 200, 206, 209, 216, 219, 220, 247, 249, 256, 258, 287, 288, 289, 290, 292, 300, 301, 319, 408, 413, 432, 446, 475, 477, 479, 480, 485, 504, 526, 528, 534, 599, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 635, 654, 656, 666, 671, 682, 691, 699, 707, 709, 710, 730, 757, 873, 904, 929, 1054, 1100], "firmwar": [3, 119, 131, 132, 134, 141, 150, 854, 861, 897], "kunden": [3, 22, 145, 249, 319, 1106], "dezemb": [3, 22], "2012": [3, 22, 127, 143, 206], "backport": 3, "integr": [3, 15, 22, 36, 41, 128, 136, 138, 146, 158, 163, 183, 273, 303, 308, 309, 310, 398, 424, 427, 431, 643, 730, 739, 796, 817, 854, 856, 862, 863, 1083, 1092, 1095, 1114, 1116, 1123], "touchcontrol": 3, "driver": [3, 76, 83, 116, 119, 131, 134, 136, 144, 147, 148, 247, 302, 303, 318, 320, 404, 710, 711, 713, 714, 716, 717, 718, 719, 720, 721, 722, 724, 726, 727, 728, 729, 731, 732, 733, 736, 737, 738, 740, 741, 742, 744, 746, 748, 750, 751, 752, 754, 756, 757, 758, 761, 763, 766, 768, 772, 775, 778, 788, 793, 796, 853, 862, 863, 883, 897, 1107, 1127, 1129], "systemintegrationsfirma": 3, "stuttgart": 3, "mai": [3, 41, 63, 106, 108, 109, 119, 131, 135, 137, 142, 146, 190, 200, 206, 213, 216, 219, 223, 229, 256, 265, 334, 341, 343, 347, 356, 413, 417, 450, 535, 588, 686, 696, 700, 708, 739, 741, 749, 757, 790, 799, 804, 805, 817, 862, 863, 885, 887, 888, 889, 891, 946, 947, 955, 997, 1083, 1094], "2013": [3, 22, 127, 318], "python": [3, 4, 5, 6, 9, 12, 20, 22, 23, 27, 28, 38, 59, 63, 70, 72, 76, 83, 89, 90, 114, 115, 126, 127, 128, 144, 146, 147, 150, 152, 160, 175, 176, 180, 183, 184, 185, 187, 190, 192, 199, 200, 206, 215, 216, 219, 223, 226, 247, 249, 258, 287, 288, 289, 290, 291, 292, 296, 297, 300, 302, 303, 308, 309, 310, 314, 315, 316, 318, 320, 332, 480, 625, 643, 662, 674, 680, 697, 710, 711, 817, 839, 853, 855, 860, 861, 902, 950, 951, 952, 953, 955, 957, 958, 960, 961, 962, 964, 965, 966, 967, 970, 974, 975, 981, 985, 989, 990, 996, 998, 1000, 1001, 1003, 1006, 1007, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1056, 1057, 1058, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1073, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1090, 1091, 1092, 1094, 1095, 1096, 1112, 1116, 1122, 1123, 1130], "programm": [3, 57, 60, 149, 150, 154, 163, 174, 179, 183, 187, 219, 244, 256, 257, 258, 296, 302, 319, 368, 381, 388, 394, 398, 528, 530, 531, 600, 634, 668, 671, 793, 799, 850, 862, 883, 917, 978, 979, 983, 1005, 1062, 1072, 1086, 1109, 1112, 1117, 1125, 1126, 1128, 1130], "zur": [3, 139, 154, 158, 166, 176, 187, 296, 301, 306, 319, 917, 1107, 1109, 1110, 1111, 1123, 1128, 1129, 1130], "IT": [3, 247, 249, 532], "wie": [3, 139, 140, 148, 149, 150, 154, 158, 164, 166, 174, 179, 182, 189, 213, 296, 319, 1106, 1107, 1109, 1110, 1111, 1116, 1119, 1123, 1124, 1126, 1128, 1129], "beispiel": [3, 22, 150, 174, 175, 197, 203, 224, 319, 1109, 1110, 1111, 1122, 1123, 1125, 1126, 1128, 1130], "e": [3, 6, 30, 35, 36, 40, 46, 61, 95, 111, 134, 136, 137, 138, 139, 140, 142, 145, 146, 148, 149, 150, 152, 153, 154, 158, 164, 166, 174, 175, 179, 181, 183, 184, 187, 190, 191, 192, 195, 196, 200, 203, 204, 206, 209, 211, 213, 216, 219, 220, 223, 226, 229, 232, 241, 244, 247, 248, 251, 253, 255, 261, 265, 271, 294, 295, 296, 297, 301, 306, 319, 323, 340, 343, 347, 350, 353, 358, 368, 371, 386, 390, 394, 397, 398, 410, 411, 413, 416, 422, 423, 427, 436, 440, 448, 453, 457, 470, 477, 481, 482, 521, 528, 532, 533, 543, 551, 562, 582, 600, 601, 615, 620, 627, 630, 634, 637, 648, 654, 668, 689, 698, 700, 701, 708, 716, 735, 776, 783, 784, 785, 794, 795, 799, 800, 801, 802, 817, 839, 846, 861, 862, 863, 874, 883, 893, 895, 913, 916, 917, 928, 929, 931, 933, 934, 945, 950, 954, 962, 974, 976, 977, 995, 1000, 1001, 1024, 1067, 1071, 1076, 1079, 1082, 1085, 1086, 1092, 1094, 1106, 1107, 1109, 1111, 1115, 1116, 1122, 1123, 1125, 1126, 1128, 1130], "bill": [3, 251], "email": [3, 30, 40, 113, 132, 138, 142, 147, 171, 187, 251, 312, 870, 1071, 1075, 1076, 1077, 1079, 1080, 1081], "kommunik": [3, 22, 1123, 1126, 1128, 1129, 1130], "extrakt": 3, "attach": [3, 152, 200, 206, 216, 219, 431, 739, 862, 915, 1062], "signaturverifik": 3, "informationssystem": 3, "februar": 3, "juni": 3, "vollautomatisch": 3, "instal": [3, 28, 30, 43, 58, 88, 95, 96, 102, 111, 115, 127, 128, 131, 132, 136, 158, 161, 167, 168, 170, 172, 183, 198, 200, 201, 204, 206, 209, 214, 216, 219, 220, 228, 231, 240, 243, 250, 253, 256, 257, 258, 263, 264, 268, 269, 270, 274, 275, 339, 354, 363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 414, 415, 421, 432, 446, 469, 475, 476, 479, 480, 483, 484, 485, 490, 492, 497, 503, 526, 534, 549, 552, 555, 571, 577, 581, 590, 593, 594, 599, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 628, 635, 666, 682, 691, 699, 707, 709, 710, 730, 737, 753, 757, 758, 796, 853, 856, 861, 863, 928, 930, 933, 936, 938, 941, 962, 978, 982, 1008, 1053, 1069, 1076, 1087, 1088, 1095, 1100, 1102], "serveranlagen": 3, "herstel": 3, "radar\u00fcberwachungssystemen": 3, "septemb": 3, "unterschleissheim": 3, "m\u00fcnchen": 3, "instandhaltungsarbeiten": 3, "hauseigenen": 3, "system": [3, 13, 22, 35, 43, 71, 76, 78, 95, 99, 100, 106, 108, 109, 111, 127, 128, 131, 132, 137, 138, 142, 144, 146, 147, 148, 149, 155, 158, 160, 161, 171, 183, 188, 191, 198, 200, 203, 204, 208, 209, 214, 216, 217, 219, 226, 229, 235, 236, 237, 244, 246, 251, 256, 261, 264, 265, 267, 298, 301, 302, 303, 304, 305, 306, 312, 314, 315, 318, 320, 354, 363, 370, 374, 376, 380, 383, 387, 394, 395, 396, 400, 401, 405, 406, 408, 413, 416, 418, 431, 432, 439, 452, 475, 481, 526, 561, 604, 628, 666, 699, 700, 701, 707, 708, 709, 710, 713, 716, 728, 730, 749, 755, 757, 787, 788, 789, 790, 791, 792, 793, 795, 796, 797, 800, 801, 803, 804, 805, 807, 808, 809, 810, 811, 814, 817, 843, 844, 848, 853, 857, 862, 863, 864, 869, 875, 879, 880, 881, 882, 884, 887, 889, 892, 893, 895, 896, 897, 898, 908, 911, 914, 916, 917, 919, 925, 928, 929, 931, 932, 933, 954, 955, 966, 982, 1010, 1055, 1085, 1094, 1108, 1115, 1117, 1118], "auf": [3, 7, 22, 62, 127, 132, 140, 145, 148, 149, 150, 154, 158, 164, 166, 174, 175, 179, 185, 187, 194, 195, 210, 213, 220, 222, 234, 296, 301, 302, 306, 319, 845, 1106, 1107, 1108, 1109, 1110, 1111, 1116, 1118, 1119, 1122, 1126, 1129, 1130], "gentoo": [3, 127, 130, 143, 404, 1107], "updat": [3, 42, 130, 132, 146, 150, 178, 203, 211, 226, 236, 238, 244, 251, 256, 258, 265, 271, 301, 308, 478, 481, 546, 767, 915, 945, 946, 947, 948, 949, 1003, 1005, 1082, 1095, 1101, 1124], "betriebssystem": [3, 1116, 1118, 1123, 1125], "usb": [3, 4, 61, 130, 131, 132, 134, 319, 397, 735, 788, 1116], "touchscreen": 3, "cheat": [3, 31, 63, 171, 183, 401, 654, 817], "detect": [3, 30, 104, 151, 163, 366, 369, 403, 411, 509, 536, 639, 664, 685, 751, 862, 863, 889, 898, 921, 932, 933, 1034], "m\u00fcnzeinwurf": 3, "via": [3, 16, 61, 83, 131, 134, 138, 143, 152, 167, 168, 190, 196, 217, 219, 247, 250, 253, 256, 265, 300, 307, 428, 433, 453, 538, 562, 673, 687, 737, 757, 760, 788, 793, 799, 814, 850, 861, 872, 873, 880, 887, 897, 918, 925, 943, 1009, 1112], "gpio": [3, 4, 57, 60, 63, 70, 71, 72, 76, 82, 111, 128, 247, 256, 291, 304, 306, 310, 710, 734, 759, 761, 766, 772, 775, 778, 853, 858, 862, 894, 898, 1116, 1123], "interrupt": [3, 61, 84, 108, 109, 149, 178, 247, 404, 710, 728, 734, 749, 751, 752, 754, 755, 759, 760, 761, 765, 766, 769, 772, 775, 776, 778, 788, 790, 793, 796, 853, 858, 875, 877, 878, 879, 880, 881, 882, 894, 896, 897, 913, 916, 917, 919, 928, 929, 1116, 1117, 1123], "m\u00e4rz": 3, "firma": [3, 145, 154, 249, 318, 1106, 1116, 1123], "spielo": 3, "intern": [3, 55, 82, 164, 169, 192, 200, 203, 204, 206, 216, 219, 250, 253, 294, 308, 337, 367, 382, 397, 413, 422, 427, 541, 582, 629, 672, 704, 735, 743, 769, 861, 862, 863, 904, 955, 959, 1003, 1012, 1071, 1076], "datenkonvertierung": 3, "einem": [3, 22, 139, 149, 150, 154, 158, 164, 166, 174, 175, 179, 181, 187, 213, 219, 226, 241, 301, 302, 306, 319, 1107, 1109, 1111, 1116, 1125, 1129, 1130], "konvertierung": [3, 22, 1109], "asterix": 3, "format": [3, 16, 22, 28, 29, 40, 49, 51, 52, 53, 54, 88, 113, 134, 150, 151, 153, 154, 161, 168, 170, 172, 175, 179, 188, 191, 198, 199, 201, 207, 212, 213, 217, 219, 220, 225, 228, 229, 240, 243, 244, 249, 263, 264, 265, 269, 270, 272, 278, 324, 325, 330, 366, 410, 710, 711, 757, 788, 794, 817, 877, 931, 970, 978, 1014, 1024, 1027, 1035, 1036, 1038, 1039, 1048, 1049, 1050, 1051, 1053, 1055, 1060, 1074, 1087, 1122, 1126], "zweck": [3, 164, 1123], "extern": [3, 12, 20, 22, 28, 61, 83, 130, 134, 138, 160, 163, 170, 192, 193, 198, 209, 214, 219, 228, 249, 264, 274, 301, 306, 334, 338, 364, 366, 368, 370, 376, 380, 383, 387, 391, 396, 400, 405, 406, 415, 416, 512, 628, 666, 672, 707, 709, 710, 714, 717, 719, 722, 724, 727, 730, 734, 735, 736, 738, 742, 748, 754, 757, 761, 766, 767, 772, 775, 778, 853, 863, 913, 979, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1053, 1055, 1099, 1101, 1109, 1116, 1123], "datenquellen": 3, "export": [3, 38, 59, 131, 142, 167, 192, 193, 196, 198, 287, 672, 713, 789, 818, 854, 862, 895, 897, 898, 943, 945, 948, 1046, 1066], "daten": [3, 164, 166, 179, 189, 194, 917, 1129], "soap": [3, 30], "ip": [3, 113, 135, 138, 148, 155, 183, 298, 301, 307, 312, 509, 521, 856, 874, 880, 916, 1087, 1116, 1123, 1127, 1129], "kamera": 3, "einen": [3, 22, 139, 140, 150, 154, 158, 164, 166, 174, 187, 223, 319, 587, 844, 1106, 1107, 1108, 1109, 1111, 1118, 1126, 1128, 1129, 1130], "videomautsystemen": 3, "implement": [3, 15, 22, 23, 27, 40, 48, 51, 52, 53, 57, 60, 61, 67, 80, 82, 83, 95, 108, 109, 111, 116, 131, 133, 136, 151, 159, 167, 169, 187, 192, 193, 200, 206, 210, 213, 214, 216, 217, 221, 223, 238, 244, 253, 256, 257, 258, 259, 260, 265, 278, 279, 288, 289, 294, 301, 312, 335, 337, 369, 379, 381, 382, 398, 408, 413, 420, 423, 424, 426, 427, 428, 430, 431, 432, 435, 436, 438, 447, 448, 452, 453, 454, 469, 470, 474, 476, 477, 478, 479, 483, 484, 486, 487, 488, 489, 491, 493, 498, 501, 502, 503, 527, 529, 533, 537, 545, 546, 547, 548, 553, 582, 588, 597, 599, 600, 601, 604, 608, 616, 617, 618, 619, 620, 621, 622, 623, 629, 634, 635, 636, 638, 648, 663, 664, 665, 666, 672, 673, 675, 684, 688, 690, 692, 698, 704, 705, 708, 709, 710, 716, 723, 726, 743, 771, 788, 790, 794, 796, 854, 861, 863, 874, 877, 883, 899, 904, 925, 949, 953, 954, 959, 960, 961, 967, 971, 995, 1030, 1034, 1043, 1050, 1055, 1067, 1070, 1074, 1112, 1117], "gige": 3, "vision": [3, 249], "clientlibrari": 3, "softwarebasiert": 3, "kamerasimul": 3, "t\u00e4tigkeiten": 3, "hardwareteil": 3, "rs232": [3, 4, 171], "lagesensor": 3, "anpassung": 3, "cryptsetup": 3, "filesystemverschl\u00fcsselung": 3, "anforderungen": [3, 1106], "applik": [3, 148], "august": [3, 22], "logistik": 3, "autom": [3, 170, 183, 214, 228, 270, 319, 854, 865, 872, 945, 947, 955, 1055], "beteiligten": 3, "protokol": [3, 4, 1116, 1123, 1128], "server": [3, 113, 135, 138, 144, 150, 171, 183, 194, 203, 219, 226, 229, 240, 244, 251, 261, 265, 404, 450, 464, 783, 857, 870, 872, 880, 925, 1070, 1087, 1104, 1123], "zu": [3, 7, 139, 140, 145, 148, 149, 154, 158, 164, 175, 176, 179, 181, 185, 194, 195, 210, 211, 220, 222, 226, 234, 241, 301, 306, 319, 779, 1106, 1107, 1108, 1109, 1110, 1111, 1116, 1119, 1122, 1123, 1124, 1125, 1126, 1128, 1129, 1130], "sp": [3, 636], "tcp": [3, 131, 138, 155, 171, 855, 880, 1074, 1116, 1123, 1127, 1129], "autonomen": 3, "fahrzeugen": 3, "kundenapplikationen": 3, "autonom": [3, 173, 854, 1062], "fahrzeug": 3, "mikrocontrol": 3, "seriel": [3, 4, 1116, 1118], "beratend": 3, "versionskontrol": [3, 22, 144, 1124], "architektur": [3, 22, 144, 319], "2008": [3, 142, 206, 980], "ylog": [3, 22], "gmbh": [3, 22, 410], "dobl": [3, 22], "heizsystem": 3, "parametrisierung": 3, "anlag": [3, 179], "mit": [3, 4, 6, 7, 22, 127, 139, 140, 148, 149, 150, 154, 156, 158, 166, 170, 171, 175, 176, 177, 180, 181, 184, 185, 187, 194, 195, 196, 197, 210, 219, 220, 222, 223, 226, 234, 265, 297, 301, 302, 306, 318, 320, 844, 1010, 1106, 1108, 1109, 1110, 1111, 1116, 1118, 1122, 1124, 1125, 1126, 1128, 1129, 1130], "iar": 3, "arm": [3, 130, 142, 183, 342, 737, 757, 758, 861, 874, 928, 931, 932, 943], "workbench": 3, "segger": [3, 131], "embo": [3, 131], "vba": 3, "excel": [3, 76, 132, 170, 196, 1046, 1060], "verteilung": 3, "microsoft": [3, 10, 137, 138, 141, 143, 147, 158, 166, 236, 238, 247, 256, 258, 319, 321, 369, 385, 796, 1046, 1106], "net": [3, 22, 37, 41, 111, 117, 148, 149, 174, 226, 232, 409, 481, 482, 751, 757, 784, 785, 845, 880, 1071], "versionskontrollinfrastruktur": 3, "assoziiert": [3, 150, 1125, 1126], "script": [3, 36, 59, 121, 124, 127, 130, 132, 137, 138, 147, 162, 170, 171, 173, 198, 200, 206, 216, 219, 246, 247, 267, 292, 301, 318, 320, 402, 410, 421, 672, 757, 799, 802, 817, 945, 956, 982, 983, 1007, 1010, 1094, 1107, 1118], "shell": [3, 4, 30, 95, 97, 99, 102, 111, 147, 151, 170, 171, 173, 211, 219, 237, 246, 267, 286, 287, 300, 301, 302, 303, 306, 318, 320, 322, 404, 410, 432, 446, 469, 475, 476, 479, 480, 483, 484, 485, 503, 526, 699, 708, 709, 710, 757, 780, 784, 785, 786, 787, 790, 791, 792, 794, 795, 798, 799, 801, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 817, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 832, 833, 834, 835, 845, 846, 847, 850, 853, 854, 864, 865, 866, 867, 868, 876, 882, 883, 884, 892, 894, 897, 898, 908, 911, 914, 916, 931, 933, 935, 936, 937, 938, 939, 940, 941, 942, 945, 981, 982, 984, 1005, 1007, 1033, 1099, 1107, 1114, 1116, 1118, 1119, 1123, 1124, 1125, 1127], "oststeiermark": 3, "erweiterung": [3, 319], "buildumgebung": 3, "cmake": [3, 4, 42, 63, 70, 71, 72, 76, 85, 95, 104, 111, 128, 137, 142, 147, 158, 161, 193, 209, 236, 238, 256, 258, 304, 318, 320, 321, 412, 414, 416, 417, 420, 421, 422, 423, 424, 432, 446, 469, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 503, 526, 546, 710, 711, 853, 941, 1097, 1119], "www": [3, 19, 22, 57, 60, 83, 127, 137, 146, 148, 168, 171, 172, 217, 244, 321, 688, 713, 728, 734, 758, 897, 1069, 1071, 1085], "org": [3, 4, 22, 59, 117, 123, 127, 130, 134, 138, 142, 148, 150, 161, 171, 174, 191, 200, 206, 207, 216, 219, 223, 244, 257, 305, 321, 713, 728, 730, 734, 757, 758, 897, 943, 945, 979, 1000, 1010, 1049, 1064, 1069, 1087, 1088], "confix": [3, 128], "2009": [3, 1055], "schulungen": [3, 22, 127, 128, 145], "dem": [3, 7, 22, 139, 140, 148, 149, 150, 154, 158, 171, 175, 185, 194, 197, 210, 211, 220, 222, 234, 265, 301, 306, 319, 320, 917, 1106, 1107, 1108, 1110, 1111, 1116, 1118, 1125, 1126, 1128], "umkrei": 3, "softwareentwicklung": [3, 4, 144], "nicht": [3, 6, 22, 35, 139, 140, 145, 148, 154, 158, 175, 176, 179, 184, 187, 206, 211, 213, 219, 226, 232, 251, 261, 296, 301, 319, 845, 1107, 1108, 1109, 1110, 1111, 1116, 1118, 1119, 1122, 1123, 1124, 1125, 1128, 1129, 1130], "from": [3, 7, 12, 20, 26, 31, 32, 33, 34, 37, 42, 51, 52, 54, 59, 61, 63, 66, 71, 72, 76, 79, 80, 82, 84, 88, 95, 96, 97, 99, 100, 101, 104, 107, 108, 109, 111, 113, 120, 124, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 144, 146, 147, 148, 150, 151, 153, 154, 159, 163, 164, 167, 168, 170, 171, 172, 173, 175, 181, 182, 183, 188, 190, 191, 192, 193, 195, 197, 198, 200, 204, 206, 207, 213, 214, 216, 217, 220, 221, 223, 226, 228, 231, 235, 236, 238, 240, 241, 243, 246, 249, 253, 256, 257, 258, 259, 260, 263, 265, 267, 268, 269, 270, 275, 278, 279, 282, 286, 287, 288, 289, 290, 291, 292, 294, 298, 300, 301, 303, 304, 305, 306, 308, 309, 322, 323, 329, 331, 332, 336, 339, 342, 345, 346, 347, 350, 354, 361, 363, 364, 369, 370, 376, 377, 380, 383, 384, 386, 387, 388, 390, 392, 396, 397, 398, 400, 404, 405, 406, 408, 409, 411, 412, 416, 419, 420, 421, 422, 424, 426, 427, 428, 433, 437, 447, 451, 453, 470, 471, 472, 473, 475, 477, 478, 479, 480, 481, 482, 485, 504, 512, 515, 521, 526, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 541, 543, 544, 546, 547, 557, 561, 562, 579, 591, 598, 601, 603, 609, 612, 619, 623, 626, 627, 628, 630, 634, 639, 643, 648, 654, 660, 665, 666, 678, 680, 684, 685, 686, 687, 690, 692, 698, 700, 705, 706, 707, 708, 709, 710, 711, 712, 713, 716, 726, 728, 732, 737, 739, 745, 749, 757, 758, 759, 760, 765, 767, 769, 777, 782, 783, 784, 785, 788, 789, 792, 793, 794, 796, 799, 800, 801, 807, 809, 814, 816, 817, 818, 819, 820, 822, 823, 836, 841, 849, 850, 853, 854, 856, 857, 858, 859, 862, 863, 866, 870, 874, 877, 878, 879, 880, 881, 884, 887, 889, 890, 892, 894, 897, 900, 905, 910, 911, 916, 917, 919, 928, 929, 934, 943, 945, 947, 949, 954, 955, 956, 959, 962, 963, 964, 965, 966, 967, 970, 974, 977, 978, 979, 982, 983, 986, 989, 998, 1001, 1002, 1004, 1005, 1008, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1056, 1057, 1058, 1059, 1061, 1065, 1066, 1068, 1070, 1071, 1072, 1073, 1074, 1078, 1079, 1080, 1083, 1085, 1086, 1087, 1089, 1091, 1092, 1094, 1096, 1099, 1101, 1104, 1115, 1122], "scratch": [3, 40, 163, 861, 1062], "mathia": [3, 1107], "kettner": [3, 127], "novemb": [3, 22], "bodenseo": [3, 1123], "singen": 3, "bodense": [3, 1123], "spielesoftwar": 3, "entwurf": [3, 22], "systemschnittstellen": [3, 1125], "driverentwicklung": [3, 144], "powerpc": 3, "vanilla": [3, 134], "kernel": [3, 4, 41, 59, 63, 76, 108, 109, 113, 116, 120, 121, 126, 127, 128, 130, 131, 133, 141, 142, 143, 144, 147, 149, 164, 171, 203, 216, 219, 226, 229, 244, 247, 251, 261, 265, 287, 307, 318, 320, 362, 384, 397, 710, 711, 712, 713, 714, 716, 717, 718, 719, 720, 722, 724, 726, 727, 728, 729, 736, 737, 738, 740, 742, 743, 744, 745, 746, 747, 748, 750, 752, 753, 754, 755, 756, 761, 763, 766, 768, 769, 770, 771, 772, 775, 777, 778, 782, 788, 792, 794, 795, 796, 801, 845, 850, 853, 857, 859, 860, 862, 863, 874, 877, 880, 881, 883, 886, 897, 899, 900, 913, 915, 916, 919, 924, 928, 929, 931, 1107, 1116, 1127], "abteilungsleitung": 3, "ag": [3, 30, 136, 138, 150, 164, 206, 209, 251, 295, 393, 611, 612, 613, 614, 615, 617, 618, 619, 620, 621, 622, 623, 710, 782, 931, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083], "realtim": [4, 76, 78, 144, 147, 148, 247, 302, 303, 314, 315, 320, 698, 700, 710, 755, 759, 762, 765, 776, 853, 857, 862, 863, 894, 913, 914, 916, 925, 1126, 1127, 1128], "hardwareintegr": [4, 144], "netzwerkprogrammierung": [4, 1116, 1129], "multithread": [4, 28, 57, 60, 70, 71, 72, 73, 76, 126, 127, 131, 133, 144, 163, 167, 198, 207, 217, 234, 256, 258, 310, 314, 315, 319, 320, 385, 395, 626, 654, 692, 709, 710, 902, 907, 916, 929, 930, 956, 965, 1053, 1055, 1112, 1116, 1127], "kerneldriv": 4, "rs485": 4, "In": [4, 6, 22, 40, 42, 48, 61, 95, 101, 102, 104, 108, 109, 111, 119, 130, 131, 132, 133, 135, 137, 140, 142, 144, 146, 155, 159, 164, 169, 176, 179, 183, 184, 192, 200, 206, 209, 213, 216, 217, 219, 220, 223, 231, 247, 256, 258, 265, 274, 286, 296, 301, 318, 342, 356, 409, 411, 414, 415, 421, 426, 431, 432, 433, 446, 447, 448, 450, 452, 453, 469, 470, 473, 475, 476, 477, 478, 479, 480, 482, 483, 484, 490, 492, 503, 526, 530, 533, 534, 537, 541, 542, 549, 552, 555, 571, 577, 581, 590, 593, 594, 599, 604, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 635, 639, 643, 648, 666, 673, 676, 682, 686, 691, 693, 699, 707, 709, 710, 718, 723, 730, 755, 757, 769, 786, 789, 790, 799, 801, 803, 807, 809, 811, 813, 828, 829, 853, 855, 861, 863, 866, 870, 873, 880, 888, 891, 894, 896, 904, 910, 915, 917, 925, 932, 936, 937, 938, 939, 941, 955, 962, 963, 979, 982, 1000, 1002, 1012, 1013, 1023, 1032, 1038, 1043, 1051, 1055, 1067, 1070, 1074, 1082, 1083, 1094, 1095, 1109, 1113, 1116, 1123, 1125], "userspac": [4, 79, 83, 84, 116, 131, 132, 203, 219, 226, 229, 244, 247, 251, 261, 265, 319, 397, 404, 710, 715, 726, 734, 735, 743, 749, 755, 759, 765, 769, 773, 775, 793, 795, 853, 856, 860, 863, 874, 894, 896, 897, 915, 919, 925, 1116, 1117], "host": [4, 106, 130, 137, 142, 298, 312, 737, 758, 855, 861, 932, 934, 943, 1069, 1074, 1087], "devic": [4, 67, 70, 71, 72, 76, 82, 87, 116, 130, 131, 136, 149, 170, 178, 260, 279, 302, 303, 304, 470, 481, 482, 696, 698, 700, 708, 710, 719, 726, 727, 728, 734, 735, 738, 739, 741, 748, 757, 759, 761, 766, 772, 773, 775, 776, 778, 790, 793, 796, 799, 839, 853, 862, 874, 877, 883, 891, 897, 916, 919, 920, 922, 925, 941, 966, 1107, 1116, 1117, 1118, 1123], "libusb": [4, 131], "gadgetf": [4, 131], "modbu": [4, 148], "verschiedenen": [4, 22, 158, 175, 1109, 1110, 1122, 1128], "rto": [4, 131], "yocto": [4, 116, 120, 121, 142, 710, 757, 851, 934, 1107], "programmiersprachen": [4, 7, 175, 185, 194, 210, 222, 1111, 1128], "incl": [4, 22, 128, 1118], "buildsystem": 4, "autoconf": [4, 59, 142], "automak": [4, 137, 142, 945, 1119], "meson": [4, 137, 142, 923, 927, 945], "ninja": [4, 30, 142, 411, 933, 945], "make": [4, 12, 16, 41, 42, 43, 59, 61, 63, 66, 68, 76, 78, 107, 116, 121, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 146, 147, 151, 152, 155, 159, 160, 163, 167, 168, 169, 173, 182, 183, 190, 192, 193, 204, 207, 219, 223, 236, 238, 260, 265, 268, 273, 279, 301, 304, 320, 353, 365, 369, 377, 384, 386, 388, 398, 404, 408, 411, 412, 413, 417, 419, 420, 422, 424, 426, 427, 428, 431, 447, 448, 453, 454, 472, 480, 482, 497, 504, 509, 515, 533, 544, 546, 548, 551, 563, 598, 600, 613, 626, 634, 639, 643, 680, 685, 686, 690, 700, 704, 705, 718, 725, 726, 730, 732, 735, 737, 757, 758, 774, 786, 796, 800, 802, 823, 836, 855, 856, 861, 862, 863, 884, 887, 889, 910, 913, 915, 917, 919, 924, 928, 931, 943, 945, 946, 947, 948, 952, 956, 959, 962, 974, 1005, 1012, 1025, 1033, 1060, 1076, 1114, 1115, 1125], "perl": [4, 142, 668, 846, 982], "leider": [4, 139, 206, 219, 226, 241, 1107, 1109], "objektorientiert": [4, 319, 1111], "ooa": 4, "ood": 4, "unit": [4, 70, 71, 72, 76, 80, 82, 95, 104, 111, 133, 151, 166, 167, 170, 171, 182, 191, 209, 223, 248, 249, 256, 260, 273, 279, 310, 314, 315, 391, 410, 411, 424, 450, 474, 478, 484, 512, 543, 672, 700, 701, 710, 711, 863, 915, 997, 1005, 1055, 1070, 1093, 1114, 1115], "test": [4, 15, 16, 31, 38, 70, 71, 72, 76, 80, 82, 95, 111, 127, 131, 133, 134, 136, 137, 138, 144, 147, 150, 151, 157, 158, 159, 162, 166, 167, 170, 182, 188, 191, 204, 206, 207, 209, 219, 236, 238, 258, 265, 274, 310, 312, 314, 320, 321, 333, 395, 408, 409, 415, 419, 426, 427, 428, 429, 430, 431, 432, 435, 436, 438, 439, 448, 450, 451, 469, 474, 476, 477, 479, 480, 483, 484, 485, 486, 487, 488, 489, 491, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 509, 521, 523, 528, 529, 530, 541, 542, 544, 545, 547, 548, 606, 617, 618, 619, 620, 621, 622, 631, 633, 636, 637, 638, 669, 675, 680, 684, 685, 686, 687, 689, 704, 705, 706, 708, 710, 711, 715, 747, 757, 760, 762, 765, 773, 817, 855, 856, 861, 884, 939, 947, 978, 987, 997, 1001, 1004, 1024, 1049, 1055, 1061, 1062, 1070, 1078, 1085, 1098, 1100, 1102, 1105, 1115], "driven": [4, 43, 69, 76, 80, 131, 144, 147, 158, 167, 182, 209, 247, 249, 275, 320, 408, 435, 545, 547, 548, 915, 921, 922, 1083, 1092, 1115], "develop": [4, 20, 43, 69, 71, 76, 78, 80, 101, 102, 132, 134, 136, 137, 138, 142, 144, 147, 155, 158, 166, 167, 170, 175, 182, 188, 193, 194, 201, 203, 204, 209, 214, 239, 244, 249, 274, 275, 300, 302, 303, 312, 318, 320, 386, 398, 404, 408, 413, 421, 432, 446, 469, 475, 476, 479, 480, 481, 482, 483, 484, 485, 503, 526, 545, 547, 548, 601, 625, 699, 709, 710, 711, 714, 717, 719, 720, 722, 724, 727, 729, 730, 731, 733, 736, 738, 740, 742, 744, 746, 748, 750, 752, 754, 756, 757, 758, 761, 763, 766, 768, 772, 775, 778, 787, 790, 791, 793, 796, 853, 855, 856, 876, 882, 884, 892, 894, 908, 911, 914, 916, 932, 933, 936, 937, 938, 939, 940, 942, 948, 980, 1010, 1012, 1055, 1092, 1093, 1114, 1127], "gui": [4, 130, 136, 142, 146, 209, 308, 309, 796, 899, 1125], "gtk": [4, 127], "qt": 4, "sampl": [5, 111, 131, 142, 188, 191, 192, 204, 208, 214, 220, 223, 240, 256, 287, 404, 473, 698, 904, 924, 1007], "log": [5, 94, 128, 136, 137, 146, 153, 158, 161, 170, 190, 200, 206, 216, 219, 247, 249, 261, 300, 413, 414, 433, 690, 720, 757, 786, 793, 795, 817, 854, 856, 862, 864, 868, 870, 873, 874, 1054, 1057, 1087, 1101], "record": [5, 28, 38, 51, 126, 127, 135, 137, 138, 164, 175, 176, 182, 192, 197, 204, 220, 240, 255, 275, 292, 304, 403, 404, 710, 856, 950, 955, 970, 1012, 1014, 1033, 1044, 1045, 1046, 1047, 1048, 1050, 1053, 1066, 1122], "grundlagen": [5, 7, 22, 124, 225, 264, 318, 1109, 1111, 1118, 1119, 1122, 1123, 1125, 1126, 1129], "anhand": [5, 149, 158, 171, 173, 175, 176, 225, 318, 320, 1108, 1114, 1122, 1127], "12": [5, 6, 7, 38, 61, 104, 111, 113, 127, 136, 141, 142, 143, 152, 153, 157, 164, 169, 175, 176, 179, 181, 184, 187, 190, 191, 195, 196, 197, 200, 203, 204, 208, 211, 213, 216, 219, 223, 226, 229, 231, 232, 241, 244, 247, 248, 249, 251, 255, 261, 265, 271, 295, 296, 300, 314, 315, 318, 386, 410, 411, 419, 504, 637, 643, 676, 708, 788, 799, 802, 817, 839, 841, 848, 861, 863, 865, 889, 897, 915, 931, 943, 945, 946, 952, 958, 986, 997, 1054, 1057, 1059, 1060, 1087, 1098, 1122], "13": [5, 6, 61, 104, 114, 124, 134, 136, 143, 150, 152, 153, 164, 169, 172, 176, 179, 181, 184, 187, 190, 195, 197, 200, 203, 204, 206, 211, 213, 216, 219, 223, 226, 229, 232, 241, 244, 248, 249, 252, 255, 261, 265, 271, 296, 297, 318, 402, 409, 414, 417, 528, 643, 685, 721, 799, 839, 862, 887, 897, 917, 945, 952, 954, 995, 1006, 1059, 1060, 1087, 1122], "4": [5, 6, 7, 30, 59, 61, 104, 107, 123, 128, 130, 134, 136, 142, 150, 151, 152, 153, 154, 157, 164, 169, 171, 175, 176, 179, 181, 184, 187, 190, 191, 195, 196, 197, 198, 200, 201, 203, 204, 206, 211, 213, 214, 216, 219, 223, 226, 228, 229, 232, 240, 241, 244, 248, 249, 251, 255, 261, 264, 265, 270, 271, 294, 295, 296, 298, 301, 314, 315, 318, 332, 348, 368, 371, 374, 391, 395, 398, 399, 409, 410, 412, 430, 433, 473, 476, 477, 479, 480, 481, 483, 484, 485, 486, 502, 505, 521, 528, 530, 538, 539, 542, 544, 545, 546, 547, 548, 560, 561, 569, 579, 629, 631, 633, 648, 649, 650, 652, 654, 663, 665, 669, 676, 678, 689, 708, 757, 758, 795, 843, 846, 848, 856, 861, 862, 863, 885, 898, 915, 919, 951, 953, 954, 961, 963, 967, 974, 977, 986, 987, 992, 995, 996, 997, 1001, 1002, 1006, 1007, 1009, 1010, 1012, 1016, 1029, 1033, 1044, 1046, 1050, 1052, 1055, 1059, 1060, 1062, 1071, 1075, 1076, 1077, 1079, 1080, 1082, 1087, 1092, 1107, 1122], "2021": [5, 9, 22, 112, 124, 141, 143, 179, 181, 190, 196, 197, 200, 205, 208, 231, 298, 300, 314, 315, 318, 504, 647, 672, 813, 817, 839, 840, 917, 931, 945, 981], "templat": [5, 63, 72, 104, 158, 193, 234, 256, 261, 303, 304, 412, 475, 492, 526, 527, 571, 577, 581, 582, 589, 590, 591, 593, 611, 618, 619, 620, 621, 622, 623, 630, 636, 641, 644, 645, 646, 647, 651, 652, 654, 657, 684, 688, 690, 698, 700, 708, 710, 902, 1111, 1113], "descript": [5, 7, 37, 104, 115, 133, 134, 146, 147, 163, 167, 168, 170, 171, 172, 173, 178, 193, 198, 200, 204, 206, 209, 216, 219, 223, 235, 236, 239, 273, 274, 320, 413, 423, 431, 441, 442, 443, 444, 445, 449, 459, 478, 678, 685, 686, 687, 696, 698, 700, 708, 757, 769, 781, 783, 792, 817, 819, 839, 846, 849, 850, 863, 875, 883, 933, 945, 996, 1010, 1033, 1094, 1115], "sidebar": [5, 16, 63, 128, 769], "metadata": [5, 27, 37, 127, 146, 244, 789, 792, 862, 865, 891, 953, 1117], "einr\u00fcckung": [6, 176, 184], "ist": [6, 7, 139, 140, 145, 148, 149, 150, 154, 158, 166, 174, 175, 179, 181, 184, 185, 187, 190, 194, 196, 200, 203, 204, 209, 210, 211, 213, 216, 219, 222, 226, 232, 241, 251, 265, 293, 296, 297, 301, 306, 319, 364, 917, 1076, 1106, 1107, 1108, 1109, 1110, 1111, 1116, 1119, 1122, 1123, 1124, 1125, 1126, 1128, 1129, 1130], "wichtig": [6, 184, 234, 301, 306, 1130], "1": [6, 30, 37, 40, 48, 59, 61, 70, 72, 85, 104, 107, 108, 109, 113, 123, 124, 127, 132, 134, 137, 138, 140, 141, 142, 146, 147, 149, 150, 151, 152, 153, 154, 159, 160, 161, 164, 166, 169, 176, 179, 180, 181, 184, 187, 190, 191, 195, 196, 197, 200, 203, 206, 209, 211, 213, 216, 219, 223, 226, 229, 231, 232, 236, 241, 244, 248, 249, 251, 255, 261, 265, 271, 274, 286, 287, 293, 294, 295, 296, 297, 298, 299, 301, 304, 306, 314, 315, 318, 332, 333, 355, 362, 371, 375, 377, 385, 402, 409, 410, 411, 413, 414, 415, 416, 417, 419, 420, 421, 422, 424, 426, 427, 447, 448, 454, 464, 473, 474, 476, 477, 480, 481, 482, 485, 487, 491, 493, 494, 495, 496, 497, 498, 499, 505, 508, 511, 514, 517, 520, 521, 523, 528, 529, 530, 536, 538, 542, 544, 545, 546, 547, 548, 553, 558, 560, 566, 567, 568, 569, 570, 575, 579, 591, 593, 601, 603, 606, 610, 620, 626, 627, 629, 630, 631, 633, 636, 637, 639, 641, 643, 645, 646, 648, 650, 651, 652, 654, 655, 656, 663, 669, 671, 674, 675, 676, 678, 680, 681, 684, 685, 687, 688, 689, 698, 706, 708, 710, 715, 720, 726, 730, 735, 757, 774, 783, 784, 785, 788, 789, 790, 792, 793, 794, 795, 796, 799, 800, 801, 802, 803, 807, 809, 811, 813, 814, 818, 819, 820, 836, 839, 840, 841, 842, 843, 845, 846, 848, 849, 850, 852, 854, 861, 862, 864, 865, 873, 874, 875, 877, 879, 880, 881, 883, 884, 885, 887, 888, 889, 890, 895, 897, 898, 910, 912, 913, 915, 917, 919, 920, 921, 924, 927, 928, 930, 931, 934, 943, 945, 946, 947, 948, 950, 951, 953, 954, 955, 958, 959, 961, 963, 965, 967, 968, 974, 975, 977, 979, 980, 981, 982, 984, 987, 988, 989, 990, 991, 994, 996, 997, 1002, 1007, 1009, 1010, 1012, 1017, 1020, 1023, 1033, 1037, 1040, 1043, 1044, 1046, 1050, 1051, 1052, 1058, 1059, 1060, 1061, 1070, 1075, 1076, 1077, 1079, 1080, 1081, 1086, 1087, 1092, 1093, 1094, 1099, 1103, 1106, 1112, 1114, 1115, 1119, 1122, 1124, 1129], "i": [6, 11, 12, 13, 16, 20, 26, 27, 28, 29, 30, 36, 37, 38, 39, 40, 41, 47, 51, 52, 53, 55, 57, 59, 60, 61, 63, 64, 66, 67, 76, 78, 80, 82, 83, 85, 87, 88, 89, 95, 96, 97, 98, 102, 104, 105, 106, 107, 108, 109, 111, 116, 118, 119, 124, 125, 127, 128, 130, 131, 134, 135, 136, 137, 138, 141, 142, 146, 147, 148, 151, 152, 153, 154, 155, 158, 159, 160, 161, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 179, 181, 182, 183, 184, 187, 188, 191, 192, 193, 195, 196, 198, 201, 202, 203, 204, 207, 208, 209, 210, 212, 213, 214, 217, 218, 220, 221, 222, 223, 225, 227, 230, 231, 232, 236, 237, 238, 240, 241, 243, 244, 246, 247, 248, 249, 250, 251, 253, 255, 256, 257, 258, 259, 260, 262, 263, 264, 266, 267, 269, 271, 273, 275, 278, 279, 282, 286, 287, 288, 289, 290, 291, 292, 296, 297, 298, 301, 304, 306, 307, 309, 312, 314, 315, 319, 320, 322, 323, 324, 325, 326, 332, 333, 334, 336, 338, 339, 340, 342, 343, 346, 347, 348, 350, 351, 353, 354, 355, 358, 359, 360, 361, 362, 363, 365, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 423, 424, 426, 428, 430, 431, 432, 433, 436, 439, 440, 447, 448, 450, 451, 452, 453, 454, 467, 469, 470, 471, 473, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 490, 492, 497, 501, 504, 509, 512, 515, 518, 521, 526, 527, 529, 530, 531, 532, 533, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 551, 553, 556, 557, 561, 562, 563, 564, 565, 566, 567, 569, 570, 575, 579, 582, 583, 584, 586, 588, 591, 593, 598, 600, 601, 606, 607, 608, 610, 612, 613, 615, 616, 617, 618, 619, 620, 621, 622, 625, 626, 627, 628, 630, 631, 633, 634, 636, 637, 638, 640, 643, 648, 649, 650, 651, 652, 654, 665, 666, 669, 670, 674, 675, 678, 679, 680, 684, 686, 687, 688, 690, 692, 696, 698, 699, 700, 701, 704, 707, 708, 709, 710, 711, 712, 713, 716, 718, 721, 723, 725, 726, 728, 732, 735, 739, 743, 745, 747, 749, 751, 753, 755, 757, 758, 759, 764, 765, 767, 769, 770, 771, 773, 774, 782, 783, 784, 785, 786, 787, 789, 790, 791, 794, 795, 796, 797, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 814, 816, 817, 818, 819, 820, 821, 822, 824, 825, 828, 829, 831, 832, 833, 837, 839, 841, 844, 846, 849, 850, 853, 854, 855, 856, 857, 859, 860, 861, 862, 864, 865, 866, 867, 868, 869, 870, 872, 877, 884, 887, 889, 891, 894, 895, 897, 898, 899, 900, 901, 902, 904, 905, 907, 908, 911, 914, 915, 916, 917, 918, 919, 924, 925, 928, 929, 932, 933, 934, 935, 939, 941, 942, 943, 944, 945, 946, 947, 949, 951, 952, 953, 954, 956, 957, 958, 959, 962, 963, 965, 966, 967, 968, 969, 971, 972, 974, 975, 976, 977, 978, 979, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 999, 1000, 1001, 1002, 1003, 1004, 1006, 1007, 1009, 1010, 1012, 1013, 1014, 1015, 1017, 1024, 1027, 1030, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1057, 1058, 1059, 1060, 1061, 1064, 1065, 1066, 1067, 1070, 1071, 1072, 1073, 1074, 1076, 1077, 1080, 1081, 1083, 1084, 1086, 1087, 1088, 1092, 1093, 1094, 1095, 1097, 1099, 1101, 1105, 1107, 1109, 1112, 1114, 1115, 1116, 1117, 1125, 1126, 1127, 1129], "41": [6, 136, 141, 152, 153, 164, 174, 179, 181, 184, 187, 190, 192, 195, 196, 200, 203, 206, 211, 213, 219, 223, 226, 229, 232, 241, 244, 248, 251, 261, 265, 271, 293, 295, 296, 433, 689, 747, 839, 862, 967, 1010, 1012, 1059, 1094], "42": [6, 20, 40, 59, 148, 150, 151, 153, 164, 174, 179, 181, 184, 187, 190, 195, 196, 200, 203, 206, 211, 213, 216, 219, 223, 226, 229, 232, 241, 244, 251, 261, 265, 271, 293, 296, 297, 343, 369, 371, 372, 374, 377, 385, 390, 392, 398, 412, 422, 427, 431, 448, 450, 480, 481, 482, 484, 485, 486, 487, 488, 489, 501, 509, 521, 528, 536, 537, 541, 543, 569, 572, 575, 582, 606, 610, 630, 631, 639, 641, 669, 676, 689, 690, 700, 704, 705, 706, 720, 802, 839, 848, 856, 902, 910, 924, 931, 932, 933, 953, 954, 955, 962, 965, 983, 985, 986, 995, 996, 997, 1000, 1019, 1104], "print": [6, 61, 127, 150, 151, 153, 154, 164, 167, 169, 170, 174, 179, 181, 182, 183, 184, 187, 190, 191, 195, 196, 197, 200, 203, 204, 206, 211, 213, 216, 219, 222, 223, 226, 229, 232, 241, 244, 248, 249, 251, 261, 265, 271, 293, 294, 295, 296, 297, 327, 331, 333, 402, 413, 557, 584, 607, 654, 668, 676, 678, 794, 795, 801, 817, 819, 820, 861, 909, 919, 950, 953, 954, 955, 957, 958, 959, 963, 965, 967, 968, 971, 973, 976, 981, 982, 983, 984, 989, 990, 993, 994, 995, 996, 997, 999, 1000, 1005, 1006, 1020, 1022, 1032, 1033, 1034, 1036, 1037, 1043, 1058, 1063, 1066, 1070, 1074, 1083], "ja": [6, 22, 140, 164, 181, 184, 187, 200, 203, 232], "da": [6, 7, 62, 139, 140, 145, 148, 149, 150, 151, 158, 166, 170, 174, 175, 179, 182, 184, 185, 187, 191, 194, 195, 196, 200, 203, 210, 211, 213, 216, 219, 220, 222, 224, 232, 234, 241, 251, 261, 265, 282, 293, 296, 301, 306, 319, 845, 1106, 1107, 1108, 1109, 1110, 1111, 1116, 1118, 1122, 1123, 1124, 1125, 1126, 1129, 1130], "kleiner": [6, 184, 844], "basta": [6, 131, 184, 986], "2": [6, 28, 30, 40, 48, 59, 61, 70, 102, 104, 124, 127, 132, 134, 140, 141, 142, 148, 150, 151, 152, 153, 154, 165, 169, 175, 176, 179, 180, 184, 187, 190, 191, 195, 196, 197, 200, 205, 206, 211, 213, 216, 217, 219, 223, 226, 229, 231, 232, 241, 244, 248, 249, 251, 255, 261, 265, 271, 274, 287, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304, 310, 318, 331, 332, 344, 350, 351, 371, 375, 402, 408, 409, 410, 411, 414, 415, 416, 420, 421, 422, 423, 424, 426, 448, 473, 474, 476, 477, 480, 481, 487, 491, 493, 494, 495, 496, 498, 499, 504, 519, 521, 528, 529, 530, 536, 538, 539, 542, 544, 545, 546, 547, 548, 553, 558, 562, 566, 567, 568, 569, 570, 575, 579, 583, 584, 585, 586, 591, 601, 606, 626, 629, 630, 631, 633, 636, 639, 641, 643, 644, 646, 648, 651, 652, 654, 664, 665, 668, 669, 674, 675, 676, 678, 680, 681, 684, 685, 686, 687, 688, 689, 698, 700, 708, 710, 716, 757, 784, 785, 792, 795, 796, 799, 800, 801, 813, 836, 839, 842, 843, 848, 850, 852, 854, 858, 861, 862, 874, 877, 879, 880, 881, 883, 884, 887, 888, 889, 890, 891, 893, 895, 897, 898, 910, 912, 915, 917, 919, 930, 931, 946, 948, 950, 951, 953, 954, 956, 959, 961, 963, 967, 971, 974, 975, 977, 978, 979, 980, 981, 982, 984, 987, 988, 989, 991, 996, 997, 1002, 1007, 1009, 1011, 1012, 1013, 1014, 1016, 1020, 1023, 1033, 1037, 1040, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1053, 1055, 1058, 1059, 1060, 1068, 1075, 1076, 1077, 1079, 1080, 1081, 1086, 1087, 1092, 1093, 1094, 1098, 1099, 1106, 1114, 1115, 1122, 1125, 1126, 1128, 1129, 1130], "1234": [6, 30, 184, 187, 197, 206, 211, 213, 265, 296, 872, 880, 929, 986], "3": [6, 30, 59, 61, 104, 107, 108, 109, 113, 127, 136, 141, 142, 146, 148, 150, 151, 152, 153, 154, 161, 163, 164, 169, 175, 176, 179, 180, 181, 184, 187, 190, 191, 195, 197, 199, 200, 205, 206, 209, 211, 213, 216, 219, 223, 226, 228, 230, 231, 232, 234, 241, 244, 248, 249, 251, 255, 261, 265, 271, 294, 295, 296, 297, 301, 302, 303, 306, 318, 332, 344, 345, 346, 359, 368, 369, 390, 391, 399, 402, 404, 409, 410, 411, 414, 419, 430, 447, 448, 473, 474, 477, 478, 479, 480, 481, 485, 486, 487, 488, 489, 493, 494, 495, 496, 498, 499, 501, 504, 521, 528, 530, 536, 537, 538, 540, 541, 542, 544, 545, 546, 547, 548, 553, 556, 557, 558, 559, 560, 561, 562, 563, 565, 566, 567, 568, 569, 570, 575, 591, 601, 606, 608, 629, 630, 631, 633, 641, 643, 644, 648, 649, 650, 651, 652, 654, 669, 674, 676, 678, 680, 685, 686, 688, 689, 708, 715, 721, 757, 795, 800, 814, 817, 839, 841, 843, 848, 850, 856, 858, 861, 862, 863, 865, 874, 875, 877, 879, 880, 881, 884, 888, 889, 890, 898, 899, 900, 904, 910, 912, 915, 918, 919, 920, 923, 925, 928, 929, 931, 932, 933, 951, 953, 954, 956, 959, 961, 963, 967, 974, 977, 978, 979, 980, 981, 984, 985, 987, 989, 991, 992, 995, 996, 997, 1002, 1003, 1004, 1006, 1009, 1010, 1012, 1029, 1033, 1037, 1043, 1044, 1046, 1050, 1052, 1055, 1058, 1059, 1060, 1063, 1064, 1066, 1069, 1075, 1076, 1077, 1079, 1080, 1082, 1087, 1092, 1093, 1094, 1101, 1106, 1108, 1110, 1112, 1115, 1118, 1122], "decim": [6, 184, 219, 223, 265, 287, 324, 410, 986, 1000], "5": [6, 30, 59, 61, 123, 127, 134, 136, 142, 152, 153, 154, 159, 162, 165, 169, 175, 176, 179, 181, 182, 184, 187, 188, 190, 191, 194, 196, 197, 198, 200, 201, 203, 204, 206, 211, 213, 214, 216, 219, 223, 226, 228, 229, 231, 232, 236, 240, 241, 244, 248, 251, 255, 261, 264, 265, 270, 271, 287, 293, 295, 296, 301, 306, 314, 315, 318, 324, 326, 331, 348, 350, 359, 386, 391, 395, 404, 409, 413, 416, 427, 430, 433, 448, 456, 469, 473, 477, 478, 479, 481, 482, 486, 487, 488, 489, 501, 502, 508, 521, 528, 529, 530, 536, 540, 541, 544, 545, 547, 548, 569, 579, 606, 626, 630, 633, 634, 636, 637, 643, 645, 646, 648, 663, 664, 676, 678, 685, 686, 687, 689, 708, 730, 735, 758, 786, 788, 839, 843, 848, 854, 861, 862, 863, 879, 881, 889, 898, 915, 931, 943, 951, 953, 954, 957, 963, 967, 974, 980, 985, 986, 987, 991, 992, 994, 997, 1000, 1002, 1006, 1007, 1010, 1033, 1037, 1044, 1046, 1050, 1052, 1055, 1059, 1060, 1066, 1071, 1082, 1087, 1092, 1094, 1099, 1103, 1109, 1111, 1116, 1117, 1122, 1123], "10": [6, 61, 95, 100, 103, 104, 107, 111, 120, 127, 133, 134, 139, 141, 142, 152, 153, 164, 169, 171, 175, 176, 179, 181, 184, 187, 188, 190, 195, 196, 197, 198, 200, 201, 203, 204, 206, 211, 213, 216, 219, 223, 226, 228, 229, 231, 232, 242, 244, 249, 251, 258, 259, 260, 261, 264, 265, 270, 271, 279, 287, 294, 295, 296, 297, 300, 314, 315, 318, 330, 332, 334, 336, 344, 362, 369, 386, 388, 402, 412, 422, 452, 469, 473, 475, 478, 479, 485, 487, 490, 511, 512, 517, 518, 520, 521, 526, 536, 539, 541, 548, 615, 616, 622, 626, 633, 637, 638, 664, 676, 685, 686, 687, 688, 698, 710, 747, 757, 765, 786, 788, 794, 813, 817, 819, 839, 841, 845, 848, 856, 861, 862, 863, 880, 889, 897, 924, 927, 931, 932, 933, 945, 946, 955, 957, 958, 986, 987, 994, 1016, 1017, 1037, 1043, 1054, 1055, 1059, 1060, 1063, 1079, 1080, 1087, 1092, 1104, 1122], "hexadecim": [6, 184, 223, 343, 862, 986, 999, 1000], "16": [6, 61, 127, 136, 138, 139, 141, 150, 152, 153, 158, 159, 164, 169, 174, 179, 181, 184, 187, 190, 195, 196, 200, 203, 206, 211, 213, 216, 219, 223, 226, 229, 232, 241, 245, 248, 251, 255, 261, 265, 271, 293, 294, 295, 296, 297, 301, 306, 307, 318, 342, 386, 393, 404, 411, 548, 606, 685, 735, 747, 839, 856, 861, 863, 874, 879, 880, 888, 897, 931, 933, 945, 946, 951, 958, 961, 986, 1012, 1059, 1060, 1094], "7": [6, 30, 40, 61, 128, 131, 134, 136, 141, 148, 151, 152, 153, 154, 164, 169, 176, 179, 181, 182, 184, 187, 188, 190, 194, 196, 197, 198, 200, 201, 203, 206, 211, 213, 216, 219, 223, 226, 228, 229, 231, 232, 240, 241, 244, 248, 249, 251, 255, 261, 265, 270, 271, 286, 295, 296, 301, 306, 307, 318, 332, 336, 350, 377, 386, 410, 411, 414, 419, 427, 447, 448, 469, 473, 480, 481, 485, 486, 487, 488, 489, 501, 509, 517, 521, 528, 536, 537, 541, 543, 544, 545, 547, 568, 572, 575, 584, 601, 610, 630, 638, 663, 664, 665, 669, 676, 704, 705, 706, 788, 789, 800, 801, 817, 839, 848, 861, 862, 863, 880, 888, 912, 915, 924, 925, 928, 929, 932, 933, 954, 957, 963, 967, 980, 985, 986, 987, 990, 992, 994, 995, 1010, 1022, 1040, 1043, 1055, 1059, 1060, 1066, 1071, 1082, 1092], "0x1234": [6, 184, 986], "4660": [6, 184, 206, 986], "8": [6, 30, 61, 107, 127, 133, 134, 138, 142, 150, 151, 152, 153, 154, 158, 163, 164, 167, 169, 176, 179, 181, 182, 184, 187, 188, 190, 191, 196, 197, 198, 200, 201, 203, 204, 206, 210, 211, 213, 216, 219, 223, 226, 228, 229, 232, 240, 241, 244, 247, 248, 251, 255, 261, 265, 268, 270, 271, 293, 294, 295, 296, 301, 318, 342, 386, 398, 404, 410, 414, 416, 419, 447, 484, 514, 521, 528, 533, 536, 541, 545, 547, 548, 637, 685, 708, 730, 753, 757, 788, 794, 802, 839, 841, 848, 854, 855, 856, 857, 861, 862, 931, 948, 954, 957, 963, 986, 987, 992, 1000, 1005, 1009, 1010, 1016, 1052, 1055, 1059, 1060, 1069, 1085, 1087, 1094], "bin\u00e4r": [6, 22, 184, 187], "9": [6, 7, 30, 59, 61, 127, 132, 136, 139, 146, 150, 151, 152, 153, 154, 162, 164, 166, 169, 170, 171, 172, 173, 176, 177, 179, 181, 182, 183, 184, 185, 187, 188, 190, 191, 192, 194, 196, 197, 198, 200, 203, 204, 206, 211, 213, 216, 219, 220, 223, 226, 229, 231, 232, 241, 244, 247, 248, 251, 255, 256, 258, 261, 265, 271, 293, 294, 296, 297, 301, 306, 318, 324, 326, 332, 341, 344, 402, 410, 427, 447, 456, 469, 521, 523, 539, 548, 638, 648, 676, 735, 813, 836, 839, 861, 862, 863, 879, 915, 951, 961, 980, 981, 987, 992, 994, 1002, 1006, 1010, 1017, 1022, 1059, 1060, 1071, 1085, 1087, 1092], "0b100110": [6, 184, 213, 986], "38": [6, 22, 127, 134, 141, 153, 164, 174, 179, 181, 184, 187, 190, 195, 196, 200, 203, 206, 211, 213, 216, 219, 223, 226, 229, 232, 241, 244, 248, 251, 261, 265, 271, 293, 296, 297, 431, 447, 473, 539, 685, 839, 934, 943, 967, 1059, 1060], "arithmet": [6, 106, 151, 184, 189, 209, 212, 224, 239, 256, 301, 325, 339, 346, 347, 353, 354, 363, 369, 370, 376, 380, 383, 385, 386, 387, 396, 400, 405, 406, 425, 434, 446, 447, 460, 475, 522, 526, 556, 560, 561, 564, 569, 626, 628, 666, 675, 676, 707, 709, 710], "11": [6, 38, 61, 104, 111, 127, 128, 143, 152, 153, 158, 159, 163, 164, 169, 170, 171, 175, 176, 179, 181, 184, 187, 190, 193, 195, 196, 197, 200, 205, 206, 207, 211, 213, 216, 219, 223, 226, 229, 232, 235, 236, 241, 245, 248, 251, 255, 261, 265, 271, 282, 293, 294, 295, 296, 297, 304, 307, 314, 315, 318, 320, 322, 336, 402, 404, 418, 430, 478, 511, 520, 521, 527, 529, 530, 532, 536, 538, 539, 545, 547, 557, 562, 564, 569, 582, 583, 584, 587, 624, 628, 631, 634, 635, 640, 641, 642, 643, 653, 665, 666, 667, 668, 669, 670, 671, 673, 676, 677, 680, 682, 685, 686, 688, 689, 691, 698, 699, 700, 707, 708, 710, 711, 782, 795, 839, 848, 902, 907, 931, 932, 933, 981, 987, 992, 1010, 1044, 1046, 1050, 1052, 1054, 1057, 1059, 1060, 1074, 1092, 1104, 1111, 1112, 1113, 1122], "man": [6, 30, 35, 111, 131, 133, 139, 140, 148, 154, 158, 164, 166, 174, 175, 181, 184, 187, 192, 194, 196, 207, 213, 220, 223, 247, 268, 301, 306, 308, 319, 416, 509, 518, 530, 692, 708, 716, 735, 783, 784, 785, 788, 789, 792, 799, 800, 801, 802, 803, 807, 809, 811, 814, 818, 819, 820, 836, 839, 840, 842, 843, 845, 846, 848, 849, 863, 870, 873, 874, 875, 877, 879, 880, 881, 883, 884, 886, 887, 888, 889, 890, 893, 899, 900, 902, 904, 906, 907, 910, 912, 918, 925, 928, 929, 931, 947, 948, 1107, 1108, 1109, 1111, 1119, 1122, 1124, 1125, 1126, 1128, 1129, 1130], "behaviour": [6, 184, 192, 743, 889, 1005], "erzwingen": [6, 164, 176, 184], "floor": [6, 36, 176, 184, 187, 191, 203, 204, 206, 211, 213, 219, 223, 296, 974, 986, 1085], "divis": [6, 34, 36, 176, 184, 187, 203, 206, 211, 213, 219, 296, 324, 345, 447, 448, 462, 974, 986, 1040], "modul": [6, 11, 20, 22, 28, 63, 114, 121, 127, 134, 136, 141, 153, 159, 161, 163, 166, 167, 168, 169, 170, 177, 178, 184, 187, 191, 193, 198, 200, 201, 204, 206, 207, 210, 211, 213, 214, 216, 217, 219, 220, 222, 223, 225, 226, 230, 231, 234, 240, 242, 243, 244, 249, 251, 259, 260, 263, 265, 269, 270, 273, 274, 275, 279, 286, 287, 296, 302, 303, 304, 306, 312, 319, 364, 408, 410, 414, 415, 421, 423, 424, 436, 625, 666, 709, 710, 713, 714, 716, 717, 719, 721, 722, 723, 724, 726, 727, 734, 737, 738, 742, 748, 753, 754, 758, 759, 761, 766, 769, 772, 775, 778, 853, 854, 861, 863, 952, 953, 954, 955, 956, 959, 967, 968, 970, 974, 975, 979, 980, 983, 984, 995, 996, 997, 1001, 1003, 1006, 1007, 1008, 1011, 1012, 1013, 1014, 1048, 1049, 1050, 1051, 1053, 1054, 1056, 1057, 1061, 1063, 1067, 1068, 1070, 1071, 1072, 1073, 1074, 1079, 1080, 1086, 1087, 1089, 1091, 1092, 1095, 1096, 1102, 1114, 1116, 1117, 1123, 1127, 1130], "restklassen": [6, 184], "rest": [6, 16, 38, 138, 140, 150, 174, 184, 187, 191, 193, 211, 219, 251, 265, 296, 322, 332, 357, 411, 559, 560, 621, 678, 745, 796, 857, 887, 915, 974, 977, 1001, 1030, 1034, 1066, 1081, 1114, 1130], "14": [6, 61, 124, 128, 141, 152, 153, 164, 169, 176, 179, 181, 183, 184, 187, 190, 191, 195, 196, 200, 203, 204, 206, 211, 213, 216, 219, 223, 226, 229, 231, 232, 235, 241, 244, 248, 251, 255, 261, 265, 271, 293, 294, 296, 297, 298, 318, 410, 421, 422, 424, 433, 527, 601, 625, 637, 676, 678, 686, 688, 799, 802, 814, 839, 841, 861, 862, 863, 865, 880, 889, 919, 931, 932, 933, 952, 1054, 1059, 1060, 1111, 1122], "15": [6, 59, 61, 104, 111, 127, 130, 138, 141, 150, 152, 153, 161, 164, 167, 169, 175, 176, 179, 181, 183, 184, 187, 190, 195, 196, 200, 203, 206, 211, 213, 214, 216, 219, 223, 226, 229, 232, 241, 244, 248, 251, 255, 261, 266, 271, 275, 294, 296, 297, 298, 300, 307, 314, 315, 318, 410, 476, 479, 493, 494, 495, 496, 498, 499, 603, 663, 686, 708, 786, 800, 854, 888, 897, 967, 1058, 1059, 1060, 1083, 1087, 1122], "oper": [6, 28, 31, 32, 33, 36, 71, 76, 78, 95, 106, 130, 131, 133, 137, 149, 150, 152, 155, 158, 163, 167, 168, 169, 170, 172, 176, 181, 184, 189, 190, 191, 192, 193, 198, 200, 204, 205, 208, 211, 213, 214, 218, 221, 224, 227, 229, 232, 234, 244, 251, 256, 257, 258, 259, 260, 261, 264, 265, 275, 278, 279, 287, 301, 306, 324, 332, 342, 348, 363, 368, 369, 370, 374, 376, 377, 380, 383, 385, 387, 389, 392, 396, 398, 400, 405, 406, 428, 429, 448, 468, 475, 482, 490, 492, 521, 526, 527, 528, 533, 534, 538, 541, 545, 546, 547, 548, 549, 552, 553, 555, 561, 569, 570, 571, 577, 581, 582, 585, 590, 593, 594, 606, 611, 618, 619, 620, 621, 622, 623, 626, 628, 634, 636, 637, 639, 643, 648, 650, 651, 652, 654, 657, 661, 664, 666, 668, 669, 670, 671, 676, 678, 685, 686, 689, 696, 700, 707, 708, 709, 710, 719, 724, 727, 728, 734, 738, 748, 757, 759, 761, 766, 772, 773, 775, 778, 784, 785, 788, 817, 823, 848, 849, 853, 861, 862, 863, 874, 879, 880, 881, 882, 883, 884, 895, 898, 902, 904, 924, 928, 932, 945, 948, 956, 959, 966, 967, 970, 987, 991, 995, 1000, 1001, 1006, 1020, 1053, 1055, 1067, 1076, 1099, 1104, 1111, 1117], "preced": [6, 33, 36, 184, 206, 211, 219, 224, 227, 324, 330, 345, 346, 354, 359, 363, 368, 370, 374, 376, 378, 380, 383, 387, 396, 400, 405, 406, 557, 561, 628, 666, 707, 709, 710, 817, 866], "implizit": [6, 164, 184, 261, 1109, 1126], "klammerung": [6, 184, 845], "durch": [6, 139, 140, 148, 154, 158, 166, 174, 184, 216, 226, 301, 306, 319, 845, 1106, 1107, 1109], "pr\u00e4zedenz": [6, 164, 176, 184], "17": [6, 61, 94, 104, 111, 136, 142, 146, 150, 152, 153, 164, 169, 171, 174, 179, 181, 184, 187, 190, 195, 196, 200, 205, 207, 208, 212, 213, 214, 216, 219, 223, 226, 232, 235, 236, 242, 244, 248, 251, 255, 261, 266, 271, 275, 293, 296, 297, 318, 536, 584, 625, 634, 643, 664, 676, 686, 708, 721, 757, 788, 839, 863, 879, 885, 915, 919, 946, 975, 1017, 1059, 1060, 1071, 1083], "18": [6, 61, 134, 141, 142, 146, 152, 153, 169, 174, 179, 181, 184, 187, 190, 191, 195, 196, 200, 203, 204, 206, 212, 213, 219, 223, 226, 229, 232, 241, 245, 247, 248, 251, 255, 261, 265, 271, 294, 296, 297, 300, 318, 536, 601, 665, 673, 685, 710, 721, 730, 757, 794, 800, 802, 836, 839, 853, 863, 887, 889, 923, 934, 941, 942, 943, 946, 975, 1010, 1017, 1059, 1060], "6666666666666665": [6, 184], "frage": [6, 140, 150, 154, 181, 184, 187, 193, 213, 319, 1116, 1123, 1130], "warum": [6, 22, 175, 176, 184, 226, 1116, 1122, 1123, 1128, 1130], "6665": [6, 184], "6667": [6, 184], "ieee": [6, 184], "floatingpoint": [6, 184, 345, 346, 470, 757, 1032], "representaion": [6, 184], "20": [6, 7, 22, 61, 127, 134, 136, 141, 150, 151, 152, 153, 164, 169, 174, 175, 179, 181, 184, 185, 187, 190, 195, 196, 200, 203, 206, 211, 213, 216, 219, 223, 226, 229, 231, 232, 241, 244, 248, 251, 255, 257, 261, 265, 272, 296, 297, 300, 318, 324, 326, 328, 344, 368, 408, 448, 476, 477, 479, 511, 512, 517, 518, 520, 521, 536, 633, 636, 637, 638, 647, 654, 676, 678, 679, 684, 685, 686, 687, 776, 782, 802, 817, 839, 854, 861, 862, 863, 917, 934, 943, 954, 957, 958, 982, 1001, 1009, 1010, 1036, 1059, 1060, 1092, 1094, 1101], "true": [6, 33, 36, 48, 56, 61, 108, 109, 132, 134, 136, 141, 150, 151, 152, 153, 163, 164, 169, 174, 179, 181, 182, 184, 187, 190, 191, 195, 196, 200, 203, 204, 206, 211, 213, 216, 217, 219, 223, 226, 229, 232, 241, 244, 248, 251, 255, 261, 265, 271, 287, 293, 296, 330, 346, 347, 359, 371, 374, 414, 473, 536, 544, 569, 597, 608, 610, 631, 654, 655, 656, 657, 659, 660, 661, 662, 687, 696, 698, 700, 745, 747, 777, 790, 817, 830, 898, 904, 909, 910, 913, 915, 916, 924, 925, 928, 937, 952, 958, 959, 963, 965, 966, 967, 968, 971, 974, 987, 988, 990, 991, 992, 995, 1001, 1004, 1005, 1071, 1075, 1077, 1082, 1098, 1099, 1101], "zahlen": [6, 174, 175, 184, 1109, 1122], "vergleichen": [6, 164, 184], "21": [6, 95, 97, 100, 103, 104, 111, 138, 141, 152, 153, 164, 169, 172, 174, 179, 181, 184, 187, 190, 195, 196, 200, 203, 206, 211, 213, 219, 223, 226, 229, 232, 241, 244, 248, 251, 255, 261, 265, 271, 296, 300, 318, 410, 747, 799, 839, 862, 863, 874, 945, 1059, 1060], "ab": [6, 22, 30, 139, 141, 164, 174, 175, 184, 219, 223, 226, 241, 244, 265, 528, 530, 538, 547, 633, 689, 1060, 1116, 1122], "0001": [6, 134, 152, 184], "sind": [6, 22, 139, 140, 149, 150, 154, 158, 166, 175, 176, 181, 184, 187, 203, 220, 301, 306, 319, 844, 845, 917, 1106, 1109, 1110, 1111, 1116, 1118, 1119, 1122, 1123, 1125, 1126, 1129, 1130], "aber": [6, 22, 35, 140, 148, 150, 154, 164, 174, 175, 179, 182, 184, 213, 216, 219, 271, 319, 845, 1107, 1109, 1111, 1118, 1125, 1129, 1130], "unendlich": [6, 7, 175, 184, 185], "lang": [6, 136, 139, 140, 149, 184, 292, 293, 310, 319, 413, 1108, 1124, 1129], "22": [6, 61, 95, 103, 104, 111, 133, 136, 141, 143, 152, 153, 164, 169, 171, 174, 179, 180, 181, 184, 187, 190, 191, 195, 196, 200, 203, 204, 206, 211, 213, 219, 223, 226, 229, 232, 241, 244, 248, 251, 255, 261, 265, 272, 293, 295, 296, 297, 318, 802, 839, 863, 864, 872, 873, 888, 932, 933, 1017, 1054, 1059, 1060, 1123], "1000000": [6, 133, 164, 184, 261, 296, 402, 854, 862], "23": [6, 61, 111, 134, 141, 142, 143, 149, 152, 153, 154, 164, 169, 171, 174, 179, 181, 184, 187, 190, 195, 196, 200, 203, 206, 211, 213, 216, 217, 219, 222, 223, 226, 232, 241, 244, 248, 251, 255, 261, 265, 271, 279, 318, 374, 410, 413, 654, 802, 839, 861, 862, 943, 954, 1012, 1017, 1059, 1060, 1094, 1101], "32": [6, 141, 142, 148, 150, 153, 164, 169, 174, 179, 181, 184, 187, 190, 193, 195, 196, 200, 203, 206, 211, 213, 216, 219, 223, 226, 229, 232, 241, 244, 248, 251, 255, 261, 265, 271, 296, 324, 326, 342, 347, 386, 427, 433, 456, 473, 481, 753, 782, 788, 813, 839, 855, 857, 932, 933, 943, 1010], "4294967295": [6, 184, 203, 211, 219], "24": [6, 61, 95, 103, 134, 141, 149, 152, 153, 154, 164, 169, 174, 179, 181, 184, 187, 190, 195, 196, 200, 203, 206, 211, 213, 216, 219, 223, 226, 229, 232, 241, 244, 248, 251, 255, 265, 271, 293, 294, 296, 297, 318, 421, 619, 621, 643, 685, 686, 757, 784, 785, 839, 861, 948, 1059, 1060], "64": [6, 133, 136, 141, 164, 169, 174, 179, 181, 184, 187, 190, 192, 193, 196, 200, 203, 206, 211, 213, 216, 219, 223, 226, 229, 232, 241, 244, 251, 261, 265, 271, 296, 301, 306, 330, 342, 347, 371, 386, 392, 395, 421, 753, 895, 898, 921, 928, 931, 948, 1012, 1059, 1107], "18446744073709551615": [6, 164, 174, 184, 187, 200, 203, 211, 213, 219, 223, 226, 229, 251, 296], "overflow": [6, 40, 42, 48, 133, 174, 184, 200, 203, 204, 206, 209, 210, 216, 219, 226, 229, 244, 251, 261, 265, 347, 349, 385, 394, 794], "wenn": [6, 22, 139, 140, 145, 150, 158, 164, 166, 174, 175, 181, 184, 220, 226, 261, 844, 1106, 1108, 1109, 1116, 1118, 1119, 1122, 1125, 1130], "verwendet": [6, 22, 154, 158, 164, 184, 226, 1107, 1109, 1119, 1123, 1125, 1130], "wird": [6, 22, 139, 140, 145, 148, 149, 150, 158, 164, 174, 175, 181, 184, 213, 301, 306, 319, 1106, 1107, 1110, 1111, 1116, 1118, 1119, 1122, 1123, 1124, 1125, 1126, 1128, 1129, 1130], "wert": [6, 22, 175, 176, 181, 184, 216, 219, 223, 226, 232, 261, 265, 271, 1122, 1130], "w\u00e4re": [6, 148, 174, 184, 220, 1111, 1118], "dort": [6, 62, 140, 148, 150, 158, 174, 175, 184, 319, 1122, 1128, 1130], "25": [6, 61, 95, 141, 142, 152, 153, 154, 164, 169, 174, 179, 181, 184, 187, 190, 195, 196, 200, 203, 206, 211, 213, 216, 217, 219, 222, 223, 226, 229, 231, 232, 241, 244, 248, 251, 255, 261, 265, 271, 277, 279, 287, 296, 297, 318, 520, 521, 643, 680, 737, 839, 863, 931, 957, 1000, 1044, 1046, 1050, 1052, 1059, 1060, 1075, 1076, 1077, 1079, 1080, 1081, 1082], "18446744073709551616": [6, 164, 174, 184, 187, 200, 203, 211, 213, 223, 226, 244, 251, 261, 265, 271, 296], "26": [6, 134, 136, 141, 142, 143, 152, 153, 164, 174, 179, 181, 184, 187, 190, 195, 196, 200, 203, 206, 211, 213, 216, 219, 223, 226, 229, 232, 236, 241, 244, 248, 251, 255, 265, 271, 296, 300, 318, 520, 521, 648, 664, 817, 839, 863, 895, 897, 898, 931, 933, 1059, 1060, 1087, 1123], "1000": [6, 22, 164, 174, 184, 187, 190, 200, 203, 206, 211, 213, 219, 223, 226, 229, 244, 251, 261, 265, 271, 293, 296, 481, 482, 504, 579, 626, 700, 767, 792, 794, 799, 813, 814, 841, 842, 846, 848, 874, 881, 889, 910, 915, 919, 945, 952, 1001, 1033, 1063], "10715086071862673209484250490600018105614048117055336074437503883703510511249361224931983788156958581275946729175531468251871452856923140435984577574698574803934567774824230985421074605062371141877954182153046474983581941267398767559165543946077062914571196477686542167660429831652624386837205668069376": [6, 164, 174, 184, 187, 200, 223, 226, 244, 271], "27": [6, 61, 95, 111, 141, 143, 152, 153, 164, 174, 179, 181, 183, 184, 187, 190, 195, 196, 200, 203, 206, 211, 213, 216, 219, 222, 223, 226, 229, 231, 232, 241, 244, 248, 251, 255, 261, 265, 271, 277, 293, 295, 296, 298, 318, 410, 480, 509, 676, 839, 861, 863, 931, 1059, 1075, 1076, 1077, 1079, 1080, 1081, 1082], "10000": [6, 43, 184, 203, 206, 219, 251, 955, 971], "19950631168807583848837421626835850838234968318861924548520089498529438830221946631919961684036194597899331129423209124271556491349413781117593785932096323957855730046793794526765246551266059895520550086918193311542508608460618104685509074866089624888090489894838009253941633257850621568309473902556912388065225096643874441046759871626985453222868538161694315775629640762836880760732228535091641476183956381458969463899410840960536267821064621427333394036525565649530603142680234969400335934316651459297773279665775606172582031407994198179607378245683762280037302885487251900834464581454650557929601414833921615734588139257095379769119277800826957735674444123062018757836325502728323789270710373802866393031428133241401624195671690574061419654342324638801248856147305207431992259611796250130992860241708340807605932320161268492288496255841312844061536738951487114256315111089745514203313820202931640957596464756010405845841566072044962867016515061920631004186422275908670900574606417856951911456055068251250406007519842261898059237118054444788072906395242548339221982707404473162376760846613033778706039803413197133493654622700563169937455508241780972810983291314403571877524768509857276937926433221599399876886660808368837838027643282775172273657572744784112294389733810861607423253291974813120197604178281965697475898164531258434135959862784130128185406283476649088690521047580882615823961985770122407044330583075869039319604603404973156583208672105913300903752823415539745394397715257455290510212310947321610753474825740775273986348298498340756937955646638621874569499279016572103701364433135817214311791398222983845847334440270964182851005072927748364550578634501100852987812389473928699540834346158807043959118985815145779177143619698728131459483783202081474982171858011389071228250905826817436220577475921417653715687725614904582904992461028630081535583308130101987675856234343538955409175623400844887526162643568648833519463720377293240094456246923254350400678027273837755376406726898636241037491410966718557050759098100246789880178271925953381282421954028302759408448955014676668389697996886241636313376393903373455801407636741877711055384225739499110186468219696581651485130494222369947714763069155468217682876200362777257723781365331611196811280792669481887201298643660768551639860534602297871557517947385246369446923087894265948217008051120322365496288169035739121368338393591756418733850510970271613915439590991598154654417336311656936031122249937969999226781732358023111862644575299135758175008199839236284615249881088960232244362173771618086357015468484058622329792853875623486556440536962622018963571028812361567512543338303270029097668650568557157505516727518899194129711337690149916181315171544007728650573189557450920330185304847113818315407324053319038462084036421763703911550639789000742853672196280903477974533320468368795868580237952218629120080742819551317948157624448298518461509704888027274721574688131594750409732115080498190455803416826949787141316063210686391511681774304792596709376": [6, 184, 203, 219, 251], "28": [6, 22, 95, 103, 127, 134, 141, 142, 152, 153, 164, 169, 174, 179, 181, 184, 187, 190, 195, 196, 200, 203, 206, 211, 213, 216, 219, 223, 226, 229, 232, 241, 244, 248, 251, 255, 261, 265, 271, 295, 296, 297, 314, 315, 318, 410, 422, 470, 481, 482, 509, 518, 601, 648, 747, 799, 839, 863, 891, 932, 933, 945, 1012, 1059, 1104], "hallo": [6, 164, 174, 179, 182, 184, 187, 195, 203, 206, 213, 216, 219, 223, 226, 232, 244, 248, 251, 271, 296, 344, 536, 708, 788, 836, 864, 877, 880, 886], "39": [6, 128, 141, 150, 152, 153, 164, 169, 174, 179, 181, 183, 184, 187, 190, 195, 196, 200, 203, 206, 211, 213, 216, 219, 223, 226, 229, 232, 241, 244, 248, 251, 255, 261, 265, 271, 293, 294, 295, 296, 297, 298, 447, 601, 648, 802, 931, 1059, 1060], "29": [6, 95, 104, 141, 142, 152, 153, 164, 169, 174, 179, 181, 184, 187, 190, 195, 196, 200, 203, 206, 211, 213, 219, 223, 226, 229, 232, 241, 244, 248, 251, 255, 261, 265, 271, 293, 296, 300, 314, 315, 318, 410, 688, 721, 861, 863, 931, 934, 943, 1059], "30": [6, 22, 61, 95, 104, 107, 111, 127, 128, 133, 141, 143, 153, 163, 164, 169, 174, 179, 181, 183, 184, 187, 190, 195, 196, 200, 203, 206, 211, 213, 216, 219, 223, 226, 229, 232, 241, 244, 251, 255, 261, 265, 268, 271, 293, 295, 296, 298, 318, 331, 345, 410, 473, 476, 511, 512, 517, 518, 520, 521, 637, 638, 685, 686, 687, 813, 839, 845, 861, 862, 863, 919, 945, 957, 958, 1010, 1059, 1066, 1074, 1092, 1101], "eingebettet": [6, 184], "34": [6, 141, 142, 150, 153, 164, 169, 174, 179, 181, 183, 184, 187, 190, 191, 195, 196, 200, 203, 204, 206, 211, 213, 216, 219, 223, 226, 229, 231, 232, 241, 244, 248, 249, 251, 255, 261, 265, 271, 295, 296, 297, 298, 433, 447, 451, 452, 453, 454, 466, 467, 468, 566, 567, 568, 569, 570, 575, 607, 814, 817, 839, 967, 986, 1059, 1060], "31": [6, 104, 111, 134, 136, 141, 153, 164, 169, 174, 179, 181, 184, 187, 190, 195, 196, 200, 203, 206, 211, 213, 214, 216, 219, 223, 226, 229, 232, 241, 244, 248, 251, 255, 261, 265, 271, 295, 296, 318, 382, 410, 417, 663, 839, 897, 929, 946, 980, 1012, 1059, 1085], "eingenbettet": [6, 184], "mississippi": [6, 184, 187, 196, 200, 203, 211, 213, 219, 223, 229, 232, 244, 251, 265, 271, 606], "count": [6, 28, 61, 85, 87, 131, 143, 146, 184, 187, 188, 191, 196, 200, 203, 206, 211, 213, 216, 219, 223, 229, 232, 244, 250, 251, 265, 271, 330, 331, 332, 333, 346, 402, 458, 480, 512, 626, 676, 701, 710, 713, 716, 717, 718, 719, 721, 724, 727, 728, 734, 738, 748, 761, 766, 772, 775, 778, 788, 797, 817, 839, 850, 853, 883, 886, 893, 904, 925, 1001, 1014, 1024, 1027, 1035, 1038, 1053, 1060, 1065, 1071, 1112], "ss": [6, 30, 184, 187, 196, 200, 203, 211, 213, 219, 223, 229, 232, 244, 251, 265, 271, 606], "35": [6, 127, 141, 153, 164, 171, 174, 179, 181, 184, 187, 190, 195, 196, 200, 203, 206, 211, 213, 216, 219, 223, 226, 229, 232, 241, 244, 248, 251, 255, 261, 265, 271, 293, 295, 296, 297, 447, 476, 619, 621, 637, 1059], "find": [6, 16, 40, 42, 45, 46, 51, 63, 111, 130, 131, 132, 133, 137, 142, 147, 159, 160, 161, 171, 173, 184, 187, 191, 193, 196, 200, 204, 206, 209, 211, 213, 216, 219, 223, 226, 229, 232, 237, 244, 246, 249, 251, 256, 258, 265, 267, 268, 271, 273, 282, 286, 295, 301, 306, 389, 395, 402, 414, 422, 429, 436, 457, 462, 463, 466, 467, 468, 470, 475, 490, 491, 521, 526, 529, 543, 545, 547, 548, 569, 571, 582, 585, 587, 590, 594, 606, 619, 621, 623, 626, 669, 673, 706, 710, 723, 762, 783, 784, 785, 787, 792, 796, 797, 799, 800, 801, 803, 817, 844, 847, 850, 853, 862, 863, 874, 902, 931, 934, 948, 978, 982, 993, 1001, 1061, 1063, 1085, 1102, 1114, 1116, 1117, 1118, 1123], "36": [6, 127, 132, 136, 141, 153, 164, 174, 179, 181, 184, 187, 190, 195, 196, 200, 203, 206, 211, 213, 216, 219, 223, 226, 232, 241, 244, 248, 251, 255, 261, 265, 271, 293, 296, 301, 306, 414, 427, 433, 451, 469, 480, 481, 482, 483, 484, 485, 636, 685, 686, 687, 708, 839, 861, 967, 1043], "37": [6, 141, 152, 153, 164, 165, 169, 174, 179, 181, 184, 187, 190, 192, 195, 196, 200, 203, 206, 211, 213, 216, 219, 223, 226, 229, 232, 241, 244, 248, 251, 261, 265, 271, 295, 296, 297, 451, 1059, 1075, 1076, 1077, 1079, 1080, 1081, 1082], "capit": [6, 36, 184, 187, 196, 203, 213, 219, 244, 265, 295, 817, 1012], "zeil": [6, 150, 164, 174, 181, 184, 187, 190, 196, 200, 219, 223, 241, 244, 296], "nnoch": [6, 181, 184, 200], "noch": [6, 139, 140, 150, 154, 158, 164, 174, 175, 179, 181, 184, 187, 190, 200, 213, 219, 220, 223, 244, 251, 319, 1111, 1122, 1129], "some": [6, 16, 20, 104, 118, 130, 131, 132, 133, 135, 138, 141, 142, 146, 152, 155, 160, 163, 167, 170, 172, 183, 184, 190, 192, 200, 206, 207, 212, 218, 219, 223, 235, 236, 238, 244, 247, 250, 251, 253, 257, 259, 260, 267, 279, 282, 319, 343, 377, 388, 404, 427, 433, 504, 529, 531, 551, 569, 582, 585, 639, 648, 676, 684, 686, 696, 699, 709, 710, 716, 721, 730, 745, 753, 757, 774, 776, 794, 799, 854, 862, 863, 884, 887, 913, 915, 917, 925, 954, 956, 983, 999, 1005, 1051, 1072, 1092, 1114, 1115], "name": [6, 22, 37, 38, 55, 63, 108, 109, 111, 113, 123, 127, 130, 131, 133, 134, 135, 138, 145, 146, 151, 153, 155, 160, 163, 164, 167, 170, 172, 174, 179, 184, 187, 190, 191, 202, 204, 205, 206, 209, 211, 213, 216, 221, 223, 226, 241, 244, 248, 249, 251, 255, 265, 286, 292, 295, 296, 297, 312, 334, 348, 354, 362, 363, 369, 370, 376, 380, 383, 387, 388, 391, 393, 396, 400, 402, 404, 405, 406, 408, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 431, 433, 448, 452, 453, 454, 459, 462, 466, 467, 468, 478, 481, 487, 492, 497, 530, 540, 542, 544, 608, 621, 627, 628, 638, 639, 648, 666, 668, 672, 678, 686, 707, 708, 709, 710, 713, 721, 725, 735, 739, 751, 753, 777, 783, 784, 785, 788, 796, 797, 799, 802, 803, 817, 823, 839, 845, 850, 857, 861, 862, 863, 865, 866, 873, 874, 877, 879, 883, 891, 924, 928, 931, 932, 933, 943, 945, 946, 948, 949, 950, 953, 955, 962, 967, 969, 972, 976, 977, 979, 980, 984, 985, 993, 995, 997, 999, 1000, 1001, 1006, 1010, 1012, 1017, 1033, 1034, 1044, 1050, 1052, 1060, 1066, 1069, 1070, 1071, 1076, 1077, 1079, 1080, 1081, 1082, 1085, 1092, 1099, 1101, 1111, 1115, 1117, 1118], "directori": [6, 16, 42, 59, 95, 97, 98, 100, 107, 111, 127, 130, 131, 132, 133, 142, 146, 157, 162, 165, 171, 183, 184, 190, 191, 192, 193, 200, 203, 204, 206, 216, 219, 231, 236, 237, 238, 246, 247, 259, 260, 264, 267, 268, 273, 278, 279, 286, 287, 301, 306, 312, 314, 315, 368, 402, 404, 409, 412, 416, 418, 420, 422, 423, 425, 428, 430, 432, 446, 447, 469, 470, 473, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 503, 505, 508, 511, 514, 517, 520, 523, 526, 617, 699, 709, 710, 735, 757, 759, 779, 783, 786, 787, 788, 790, 791, 792, 794, 796, 797, 799, 800, 801, 803, 804, 805, 806, 811, 812, 814, 816, 817, 822, 823, 824, 825, 826, 827, 829, 830, 831, 832, 833, 834, 837, 841, 846, 853, 861, 862, 863, 865, 870, 874, 876, 879, 882, 889, 890, 891, 892, 894, 897, 899, 908, 911, 914, 916, 920, 923, 927, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 945, 946, 947, 948, 954, 962, 982, 1033, 1042, 1043, 1085, 1094, 1098, 1103, 1114, 1118, 1127], "40": [6, 22, 104, 127, 134, 141, 153, 164, 174, 179, 181, 184, 187, 190, 195, 196, 200, 203, 206, 211, 213, 216, 219, 223, 226, 229, 231, 232, 241, 244, 248, 251, 261, 265, 271, 293, 296, 332, 410, 431, 433, 447, 517, 518, 539, 685, 686, 687, 839, 858, 861, 862, 863, 943, 957, 958, 982], "multilin": [6, 174, 184, 199, 202, 206, 211, 219, 223, 301, 369, 955, 983], "jetzt": [6, 139, 150, 154, 164, 174, 181, 184, 194, 223], "schluss": [6, 139, 164, 184], "l": [6, 30, 36, 59, 61, 97, 111, 134, 138, 142, 150, 151, 153, 154, 159, 164, 169, 174, 179, 181, 182, 183, 184, 187, 190, 195, 196, 200, 203, 206, 209, 211, 213, 216, 219, 223, 226, 229, 232, 237, 241, 244, 246, 247, 251, 261, 265, 267, 268, 271, 293, 295, 296, 301, 306, 374, 375, 382, 386, 398, 403, 404, 410, 417, 420, 421, 436, 448, 475, 521, 526, 545, 575, 626, 699, 708, 709, 710, 721, 735, 757, 758, 784, 785, 786, 787, 788, 790, 791, 794, 796, 799, 800, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 821, 824, 825, 828, 829, 831, 832, 833, 835, 836, 837, 841, 846, 850, 853, 854, 856, 861, 862, 863, 864, 865, 872, 874, 879, 880, 882, 884, 885, 887, 888, 889, 892, 894, 897, 900, 908, 911, 914, 915, 916, 925, 929, 931, 932, 933, 934, 943, 945, 946, 951, 953, 974, 982, 984, 987, 988, 992, 994, 1002, 1010, 1037, 1101, 1118], "44": [6, 127, 134, 141, 153, 164, 174, 179, 181, 184, 187, 190, 195, 196, 200, 203, 206, 211, 213, 216, 219, 223, 226, 229, 232, 241, 244, 248, 251, 261, 265, 271, 293, 296, 863, 1087], "geht": [6, 7, 22, 62, 139, 140, 148, 150, 158, 164, 174, 175, 179, 184, 185, 194, 195, 210, 216, 222, 232, 296, 319, 845], "45": [6, 28, 49, 51, 53, 54, 70, 71, 72, 85, 88, 120, 123, 136, 139, 141, 153, 163, 164, 167, 169, 174, 179, 181, 184, 187, 188, 190, 196, 200, 203, 206, 211, 213, 219, 223, 226, 229, 232, 241, 244, 251, 261, 265, 271, 287, 288, 289, 290, 291, 292, 295, 296, 301, 306, 339, 354, 363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 415, 432, 446, 469, 475, 476, 479, 480, 483, 484, 485, 490, 492, 503, 526, 534, 549, 552, 555, 566, 567, 568, 569, 570, 571, 575, 577, 581, 590, 593, 594, 599, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 628, 635, 642, 666, 667, 677, 682, 691, 699, 707, 708, 709, 710, 714, 717, 719, 722, 724, 727, 729, 733, 734, 736, 738, 740, 742, 748, 750, 752, 754, 761, 763, 766, 768, 772, 775, 778, 780, 784, 785, 786, 787, 790, 791, 798, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 837, 847, 853, 860, 865, 866, 867, 868, 869, 876, 882, 884, 892, 894, 896, 908, 911, 914, 916, 933, 935, 936, 937, 938, 939, 940, 941, 942, 956, 963, 964, 965, 966, 970, 978, 989, 998, 1008, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1027, 1028, 1029, 1030, 1031, 1032, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1056, 1057, 1059, 1061, 1065, 1068, 1071, 1072, 1074, 1078, 1086, 1089, 1091, 1096, 1097], "46": [6, 141, 164, 169, 174, 179, 181, 184, 187, 190, 196, 200, 203, 206, 211, 213, 216, 219, 223, 226, 229, 232, 241, 244, 251, 261, 265, 271, 293, 296, 839, 863, 879, 1059, 1060], "47": [6, 134, 136, 141, 164, 169, 174, 179, 181, 184, 187, 190, 196, 200, 203, 206, 211, 213, 219, 223, 226, 229, 232, 241, 244, 248, 251, 261, 265, 271, 293, 296, 297, 676, 850, 915, 943, 1000, 1059], "try": [6, 26, 111, 127, 130, 131, 133, 138, 150, 153, 163, 164, 167, 171, 174, 179, 181, 184, 187, 190, 193, 196, 198, 200, 203, 206, 209, 211, 213, 216, 219, 223, 226, 228, 229, 231, 232, 235, 236, 238, 240, 241, 244, 247, 248, 251, 258, 259, 260, 261, 264, 265, 271, 279, 282, 287, 294, 295, 296, 297, 301, 305, 306, 316, 394, 398, 424, 428, 452, 457, 466, 475, 477, 490, 492, 526, 534, 552, 555, 571, 577, 581, 586, 590, 593, 594, 611, 613, 615, 618, 619, 620, 621, 622, 623, 654, 662, 666, 676, 682, 686, 700, 704, 706, 709, 710, 762, 765, 862, 883, 928, 952, 959, 1012, 1055, 1061, 1063, 1075, 1076, 1080, 1094], "except": [6, 20, 28, 41, 44, 59, 61, 72, 108, 109, 132, 136, 142, 150, 151, 158, 163, 164, 167, 168, 170, 172, 174, 179, 181, 184, 187, 191, 192, 193, 196, 198, 200, 203, 204, 207, 208, 211, 213, 217, 218, 221, 223, 226, 228, 229, 233, 241, 244, 248, 251, 259, 260, 261, 264, 265, 271, 278, 279, 286, 288, 294, 295, 296, 297, 301, 306, 314, 315, 334, 386, 389, 423, 428, 429, 436, 463, 475, 490, 492, 526, 555, 571, 577, 581, 590, 593, 594, 598, 611, 618, 619, 621, 622, 623, 627, 630, 654, 662, 683, 685, 686, 697, 710, 725, 757, 790, 795, 861, 915, 929, 952, 956, 959, 962, 965, 968, 978, 980, 983, 1001, 1003, 1053, 1055, 1065, 1072, 1075, 1080, 1094, 1104, 1111], "index": [6, 12, 22, 28, 37, 49, 51, 88, 108, 109, 127, 128, 137, 150, 152, 157, 162, 164, 165, 167, 168, 170, 172, 176, 177, 179, 182, 184, 187, 188, 190, 191, 193, 196, 198, 201, 203, 204, 206, 207, 209, 210, 212, 213, 214, 217, 219, 220, 222, 224, 225, 226, 228, 229, 231, 240, 241, 243, 244, 249, 250, 251, 253, 255, 257, 259, 260, 263, 264, 265, 269, 270, 272, 275, 278, 279, 301, 308, 332, 348, 374, 402, 410, 505, 508, 511, 514, 517, 520, 521, 523, 561, 562, 564, 569, 608, 648, 676, 688, 710, 753, 920, 923, 927, 978, 979, 991, 994, 1001, 1007, 1008, 1009, 1010, 1012, 1014, 1027, 1033, 1038, 1053, 1055, 1056, 1057, 1059, 1060, 1061, 1072, 1074, 1076, 1078, 1079, 1081, 1085, 1086, 1096, 1098, 1103], "out": [6, 42, 43, 48, 53, 61, 63, 73, 83, 104, 111, 117, 123, 124, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 141, 142, 146, 151, 152, 159, 160, 163, 167, 170, 171, 179, 184, 187, 192, 200, 206, 207, 209, 216, 219, 223, 227, 256, 287, 301, 307, 312, 323, 344, 362, 368, 369, 377, 388, 395, 402, 403, 404, 408, 410, 411, 416, 421, 424, 426, 428, 453, 454, 470, 473, 477, 497, 504, 521, 528, 530, 544, 559, 601, 604, 639, 654, 673, 676, 689, 700, 706, 725, 726, 735, 757, 765, 770, 784, 785, 788, 792, 796, 799, 803, 813, 844, 850, 854, 861, 862, 863, 880, 881, 897, 915, 918, 928, 929, 931, 943, 948, 955, 959, 999, 1000, 1007, 1033, 1036, 1065, 1066, 1071, 1073, 1079, 1081, 1082, 1087, 1093, 1112], "rang": [6, 28, 40, 61, 88, 106, 111, 138, 151, 152, 153, 158, 167, 170, 172, 175, 176, 179, 182, 184, 187, 188, 191, 198, 199, 201, 202, 204, 205, 206, 209, 210, 212, 214, 215, 218, 219, 224, 225, 227, 228, 230, 232, 234, 242, 243, 244, 250, 252, 253, 260, 261, 263, 264, 266, 269, 270, 272, 278, 279, 293, 347, 374, 390, 392, 438, 469, 473, 476, 485, 504, 520, 521, 557, 559, 562, 565, 666, 704, 707, 709, 710, 721, 854, 861, 910, 916, 919, 951, 954, 956, 961, 963, 965, 967, 977, 978, 986, 990, 1007, 1011, 1012, 1013, 1014, 1024, 1026, 1027, 1028, 1030, 1034, 1035, 1036, 1037, 1038, 1039, 1053, 1065, 1068, 1071, 1072, 1079, 1081, 1111, 1112, 1122], "48": [6, 134, 141, 150, 164, 169, 174, 179, 181, 184, 187, 190, 196, 203, 206, 211, 213, 216, 219, 223, 226, 229, 232, 241, 244, 251, 261, 265, 271, 293, 296, 297, 861], "append": [6, 150, 151, 152, 153, 154, 164, 169, 171, 174, 179, 181, 182, 183, 184, 187, 190, 195, 196, 197, 200, 203, 204, 206, 211, 213, 216, 219, 223, 226, 229, 232, 241, 244, 248, 251, 261, 265, 271, 296, 297, 410, 413, 502, 521, 563, 579, 591, 618, 718, 730, 745, 757, 784, 785, 799, 802, 823, 836, 861, 870, 883, 919, 951, 957, 958, 971, 987, 992, 995, 997, 1002, 1005, 1006, 1032, 1083, 1087], "one": [6, 20, 26, 30, 38, 42, 43, 48, 57, 60, 61, 64, 78, 82, 83, 104, 108, 109, 111, 113, 119, 121, 125, 127, 130, 131, 132, 133, 134, 135, 137, 138, 141, 142, 146, 151, 152, 153, 155, 160, 163, 164, 167, 169, 171, 174, 179, 181, 182, 183, 184, 187, 190, 192, 193, 200, 203, 206, 211, 213, 214, 216, 217, 219, 222, 223, 226, 229, 231, 241, 244, 247, 250, 251, 253, 255, 257, 261, 265, 270, 271, 273, 286, 287, 292, 293, 298, 301, 307, 319, 324, 331, 342, 347, 349, 357, 362, 364, 365, 369, 372, 374, 379, 382, 390, 391, 392, 394, 398, 402, 404, 410, 411, 413, 414, 416, 418, 422, 423, 426, 427, 428, 433, 435, 436, 438, 439, 447, 452, 454, 469, 473, 477, 478, 479, 481, 483, 504, 515, 521, 532, 533, 541, 542, 544, 545, 546, 547, 548, 559, 560, 568, 579, 582, 586, 601, 608, 625, 626, 629, 630, 631, 634, 643, 654, 673, 675, 676, 684, 686, 687, 688, 689, 690, 696, 698, 700, 708, 718, 725, 732, 735, 745, 751, 757, 765, 773, 777, 782, 783, 784, 790, 799, 801, 802, 817, 836, 850, 854, 856, 857, 858, 861, 862, 863, 864, 866, 870, 873, 874, 880, 881, 883, 884, 887, 890, 891, 893, 899, 900, 901, 902, 904, 907, 910, 913, 915, 916, 917, 924, 928, 931, 934, 937, 943, 946, 947, 949, 950, 952, 954, 955, 957, 963, 965, 966, 968, 979, 980, 983, 984, 985, 987, 991, 992, 994, 996, 997, 1001, 1003, 1005, 1006, 1013, 1023, 1026, 1033, 1034, 1059, 1060, 1061, 1062, 1067, 1071, 1072, 1074, 1076, 1082, 1083, 1084, 1088, 1092, 1094, 1099, 1101, 1114, 1117], "49": [6, 141, 150, 164, 169, 174, 179, 181, 184, 187, 190, 196, 200, 203, 206, 211, 213, 219, 223, 226, 229, 232, 241, 244, 248, 251, 261, 265, 271, 293, 296, 297, 669, 802, 943, 957], "50": [6, 104, 107, 141, 152, 164, 169, 174, 179, 181, 184, 187, 190, 196, 200, 203, 206, 211, 213, 219, 223, 226, 229, 232, 241, 244, 248, 251, 261, 265, 271, 293, 296, 297, 302, 303, 393, 395, 411, 477, 517, 518, 839, 861, 862, 863, 957, 980, 1000, 1012, 1059, 1060, 1075, 1092], "extend": [6, 132, 133, 164, 181, 182, 184, 189, 195, 200, 203, 206, 211, 213, 219, 223, 226, 229, 241, 244, 251, 257, 261, 265, 271, 296, 431, 438, 447, 473, 545, 547, 548, 600, 718, 789, 987, 992, 1002, 1060, 1075], "slice": [6, 28, 88, 152, 154, 163, 167, 168, 170, 172, 177, 180, 181, 184, 191, 203, 204, 206, 207, 210, 214, 215, 221, 222, 224, 225, 226, 228, 240, 243, 245, 250, 253, 260, 263, 264, 266, 269, 270, 272, 278, 279, 710, 755, 916, 978, 991, 995, 1014, 1027, 1038, 1053, 1072, 1076, 1078, 1080, 1085], "inclus": [6, 170, 184, 211, 223, 368, 561, 1016, 1079], "exclus": [6, 158, 184, 206, 223, 260, 279, 350, 561, 696, 883, 916, 965, 1001, 1005, 1016, 1079], "51": [6, 141, 164, 169, 174, 179, 181, 184, 187, 190, 196, 200, 203, 206, 211, 213, 219, 223, 226, 229, 232, 241, 244, 248, 251, 261, 265, 271, 293, 296, 583, 584, 585, 586, 839, 841, 1059], "l\u00f6schen": [6, 174, 180, 184, 301], "52": [6, 141, 150, 164, 169, 174, 179, 181, 184, 187, 190, 196, 200, 203, 206, 211, 213, 219, 223, 226, 229, 232, 241, 244, 251, 261, 265, 271, 296, 297, 863, 1059], "del": [6, 36, 150, 153, 154, 164, 179, 181, 184, 187, 195, 200, 203, 206, 211, 213, 219, 223, 226, 229, 232, 241, 244, 251, 261, 265, 271, 294, 296, 962, 987, 1003], "53": [6, 134, 164, 169, 174, 179, 181, 184, 187, 190, 196, 200, 203, 206, 211, 213, 219, 223, 226, 229, 232, 241, 244, 248, 251, 261, 265, 271, 293, 296, 308, 452, 453, 679, 737, 839, 861, 931, 943, 1059, 1060], "iter": [6, 23, 28, 61, 151, 154, 158, 163, 167, 168, 170, 172, 175, 176, 180, 182, 184, 188, 189, 191, 192, 194, 198, 199, 201, 202, 204, 205, 207, 208, 209, 210, 212, 214, 215, 218, 221, 223, 225, 226, 230, 242, 245, 251, 259, 260, 262, 266, 271, 278, 279, 286, 301, 307, 359, 361, 374, 410, 435, 481, 504, 521, 563, 564, 565, 569, 572, 579, 582, 584, 586, 591, 641, 648, 657, 678, 704, 710, 880, 952, 956, 958, 967, 980, 990, 1004, 1005, 1011, 1012, 1013, 1014, 1027, 1038, 1050, 1053, 1055, 1064, 1065, 1068, 1070, 1072, 1083, 1085, 1122], "mittel": [6, 10, 22, 154, 164, 166, 182, 184, 189, 319, 1106, 1109, 1118, 1126], "54": [6, 141, 150, 164, 169, 174, 179, 181, 184, 187, 190, 196, 200, 203, 206, 211, 213, 216, 219, 223, 226, 229, 232, 241, 244, 251, 261, 265, 271, 293, 295, 296, 308, 583, 584, 585, 586, 686, 747, 839, 861, 943, 1059], "element": [6, 7, 33, 36, 104, 107, 108, 109, 111, 151, 153, 154, 164, 169, 170, 175, 176, 179, 181, 182, 184, 185, 187, 190, 194, 195, 196, 200, 203, 204, 206, 210, 212, 213, 219, 222, 223, 226, 230, 251, 255, 258, 261, 270, 295, 296, 332, 359, 374, 382, 386, 389, 475, 487, 490, 492, 501, 521, 526, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 572, 576, 579, 583, 586, 608, 626, 629, 631, 648, 662, 676, 678, 710, 718, 925, 957, 959, 976, 987, 992, 993, 1002, 1004, 1037, 1066, 1083, 1092, 1115, 1122], "55": [6, 141, 150, 164, 169, 174, 179, 181, 184, 187, 190, 196, 200, 203, 206, 211, 213, 219, 223, 226, 229, 232, 241, 244, 248, 251, 261, 265, 271, 293, 295, 296, 297, 308, 385, 410, 616, 617, 618, 619, 621, 931, 1012], "def": [6, 61, 150, 151, 154, 164, 169, 170, 174, 179, 181, 182, 184, 187, 190, 191, 196, 197, 200, 203, 204, 206, 211, 213, 216, 219, 223, 226, 229, 232, 241, 244, 249, 251, 261, 265, 271, 296, 297, 410, 668, 909, 952, 953, 954, 957, 958, 959, 962, 963, 965, 967, 969, 971, 972, 973, 974, 975, 976, 977, 983, 986, 996, 997, 1002, 1006, 1037, 1043, 1050, 1051, 1052, 1063, 1074, 1079, 1080, 1082, 1092, 1093], "is_integ": [6, 184, 241], "elem": [6, 150, 154, 164, 169, 174, 179, 181, 184, 196, 203, 206, 211, 216, 241, 244, 251, 261, 265, 271, 487, 585, 587, 634, 654, 656, 658, 661, 675, 676, 678, 698, 959, 1002, 1006], "type": [6, 28, 48, 76, 81, 98, 108, 109, 123, 124, 127, 130, 131, 134, 136, 138, 146, 150, 151, 154, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 180, 181, 183, 184, 187, 190, 191, 192, 195, 196, 200, 205, 208, 209, 211, 213, 217, 218, 221, 223, 227, 229, 231, 232, 234, 242, 244, 247, 248, 251, 259, 260, 261, 264, 265, 271, 275, 278, 279, 293, 294, 295, 296, 301, 303, 304, 312, 334, 345, 346, 353, 358, 363, 364, 368, 370, 374, 376, 377, 380, 383, 384, 385, 386, 387, 390, 392, 393, 395, 396, 400, 405, 406, 410, 426, 428, 437, 440, 448, 454, 480, 487, 509, 518, 528, 530, 536, 537, 541, 543, 544, 554, 562, 591, 597, 601, 604, 606, 608, 610, 616, 628, 629, 634, 639, 640, 648, 654, 665, 666, 668, 673, 674, 675, 676, 685, 686, 688, 689, 690, 695, 705, 706, 707, 708, 709, 710, 713, 716, 718, 723, 726, 745, 757, 783, 787, 799, 802, 814, 817, 820, 831, 833, 834, 837, 845, 853, 854, 856, 861, 862, 865, 870, 879, 880, 883, 886, 887, 888, 889, 890, 900, 912, 921, 924, 928, 929, 931, 948, 950, 953, 956, 959, 963, 968, 969, 970, 977, 981, 983, 985, 986, 987, 991, 993, 994, 995, 1000, 1001, 1003, 1005, 1007, 1020, 1031, 1032, 1050, 1053, 1055, 1060, 1067, 1071, 1076, 1077, 1079, 1087, 1092, 1094, 1112, 1113], "int": [6, 20, 44, 105, 108, 109, 133, 142, 151, 153, 164, 170, 174, 179, 181, 182, 184, 187, 191, 192, 197, 200, 203, 204, 206, 209, 211, 213, 216, 219, 223, 226, 229, 232, 241, 244, 250, 251, 253, 261, 265, 271, 294, 296, 297, 323, 324, 326, 328, 330, 332, 333, 334, 336, 337, 338, 342, 343, 344, 346, 347, 348, 352, 362, 364, 365, 366, 367, 368, 369, 371, 372, 374, 375, 377, 378, 379, 382, 384, 385, 389, 390, 391, 392, 393, 394, 398, 399, 433, 440, 447, 448, 452, 453, 454, 455, 458, 461, 462, 464, 466, 467, 468, 471, 473, 477, 480, 482, 485, 486, 487, 488, 489, 491, 501, 504, 509, 512, 518, 521, 528, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 551, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 579, 582, 583, 584, 585, 586, 587, 591, 593, 597, 598, 601, 603, 604, 606, 607, 608, 610, 615, 616, 617, 618, 619, 620, 621, 622, 626, 627, 629, 630, 633, 639, 640, 641, 643, 644, 645, 646, 648, 649, 650, 651, 652, 654, 655, 656, 658, 659, 660, 661, 662, 663, 664, 668, 669, 670, 671, 673, 674, 675, 676, 678, 680, 687, 688, 689, 690, 693, 695, 698, 700, 713, 716, 721, 723, 728, 735, 737, 739, 741, 745, 749, 751, 753, 762, 767, 774, 794, 814, 857, 861, 875, 877, 879, 880, 881, 883, 886, 887, 888, 889, 890, 893, 895, 898, 900, 902, 904, 906, 912, 915, 918, 919, 921, 924, 925, 928, 929, 931, 943, 947, 949, 974, 985, 986, 994, 995, 997, 1000, 1006, 1007, 1022, 1045, 1047, 1050, 1051, 1080, 1099, 1104], "return": [6, 20, 26, 61, 105, 127, 130, 132, 133, 134, 138, 142, 150, 151, 154, 164, 168, 170, 172, 174, 179, 181, 182, 184, 187, 190, 191, 192, 196, 197, 200, 203, 204, 206, 209, 211, 213, 216, 219, 223, 226, 229, 233, 234, 241, 244, 249, 251, 255, 261, 265, 296, 297, 323, 324, 326, 330, 332, 334, 343, 352, 362, 368, 374, 375, 377, 384, 385, 388, 389, 391, 392, 394, 398, 410, 417, 426, 427, 428, 429, 433, 435, 438, 447, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 473, 480, 481, 484, 485, 487, 504, 512, 518, 521, 528, 529, 530, 532, 533, 536, 537, 538, 539, 541, 542, 543, 544, 545, 546, 547, 551, 553, 554, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 569, 570, 573, 574, 575, 579, 582, 583, 584, 585, 586, 587, 593, 597, 598, 601, 603, 604, 610, 614, 615, 616, 617, 618, 619, 620, 621, 622, 626, 631, 633, 634, 641, 643, 644, 645, 646, 648, 649, 650, 651, 652, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 668, 669, 670, 671, 672, 673, 676, 678, 683, 684, 686, 687, 688, 689, 690, 696, 698, 700, 704, 705, 706, 708, 713, 720, 728, 735, 739, 747, 749, 771, 773, 777, 794, 814, 861, 875, 877, 879, 880, 881, 883, 884, 886, 887, 888, 889, 890, 895, 898, 899, 900, 910, 912, 915, 921, 924, 925, 928, 929, 931, 943, 947, 948, 949, 950, 952, 953, 954, 955, 957, 958, 959, 967, 971, 972, 974, 975, 976, 997, 999, 1001, 1002, 1003, 1006, 1012, 1028, 1030, 1034, 1037, 1038, 1045, 1047, 1050, 1077, 1079, 1080, 1082, 1092, 1099, 1104], "els": [6, 20, 41, 48, 61, 108, 109, 131, 133, 134, 137, 146, 151, 154, 164, 167, 170, 174, 182, 184, 187, 190, 191, 192, 196, 200, 203, 204, 207, 208, 209, 211, 215, 216, 221, 223, 226, 230, 232, 241, 243, 244, 249, 251, 261, 265, 271, 286, 297, 308, 330, 336, 347, 352, 363, 369, 370, 376, 380, 383, 387, 388, 396, 400, 405, 406, 410, 418, 419, 433, 457, 464, 467, 521, 544, 568, 569, 579, 586, 600, 620, 628, 633, 666, 687, 689, 696, 700, 707, 709, 710, 739, 749, 773, 784, 785, 790, 809, 811, 814, 820, 841, 862, 875, 878, 883, 909, 910, 912, 915, 917, 955, 962, 974, 975, 978, 989, 997, 1003, 1063, 1080, 1085, 1111], "fals": [6, 44, 108, 109, 134, 136, 150, 151, 164, 169, 174, 179, 181, 182, 184, 187, 190, 196, 200, 203, 204, 206, 211, 213, 216, 219, 223, 226, 229, 232, 241, 244, 248, 251, 255, 261, 265, 271, 295, 310, 326, 330, 347, 384, 410, 544, 569, 601, 608, 631, 643, 696, 700, 777, 790, 817, 909, 910, 915, 917, 937, 952, 967, 971, 974, 987, 988, 990, 991, 995, 1076, 1077, 1080, 1082, 1099], "56": [6, 127, 141, 164, 169, 174, 179, 181, 184, 187, 190, 196, 200, 203, 206, 211, 213, 219, 223, 226, 229, 232, 241, 244, 248, 251, 261, 265, 271, 293, 295, 296, 308, 347, 451, 539, 836, 861, 863, 1059, 1075, 1076, 1077, 1079, 1080, 1081, 1082], "x": [6, 22, 30, 40, 59, 61, 136, 142, 150, 151, 152, 154, 164, 174, 179, 181, 183, 184, 187, 190, 200, 203, 206, 207, 211, 213, 219, 223, 226, 229, 231, 232, 241, 244, 248, 251, 260, 261, 265, 279, 297, 301, 343, 346, 347, 353, 368, 369, 371, 374, 377, 378, 382, 384, 392, 394, 398, 421, 473, 477, 519, 528, 529, 530, 531, 533, 535, 536, 537, 538, 539, 540, 542, 544, 546, 547, 554, 561, 569, 629, 630, 631, 633, 648, 650, 651, 652, 669, 680, 689, 783, 784, 785, 788, 792, 794, 799, 802, 804, 805, 813, 814, 839, 842, 846, 848, 854, 861, 862, 863, 879, 889, 895, 897, 898, 906, 910, 931, 932, 933, 934, 939, 943, 945, 946, 951, 952, 980, 982, 988, 996, 997, 999, 1000, 1001, 1004, 1005, 1009, 1033, 1060, 1063, 1080, 1092, 1093, 1099], "filter": [6, 28, 104, 107, 111, 148, 151, 184, 191, 204, 221, 244, 250, 253, 257, 258, 265, 475, 490, 526, 684, 685, 710, 782, 801, 850, 1053, 1072, 1078, 1081, 1085, 1099], "57": [6, 127, 141, 164, 169, 174, 179, 181, 184, 187, 190, 196, 200, 203, 206, 211, 213, 219, 223, 226, 229, 232, 241, 244, 251, 261, 265, 271, 293, 296, 297, 417, 422, 839, 861, 874, 932, 933, 1059], "zero": [6, 30, 36, 127, 133, 149, 151, 152, 154, 164, 174, 182, 184, 187, 200, 206, 211, 213, 216, 219, 223, 226, 241, 265, 301, 323, 332, 350, 675, 685, 689, 716, 728, 743, 788, 817, 832, 839, 863, 883, 904, 910, 913, 916, 919, 924, 925, 991], "two": [6, 11, 16, 28, 30, 32, 33, 34, 36, 40, 42, 52, 67, 83, 104, 119, 121, 124, 125, 130, 131, 132, 133, 146, 151, 152, 153, 159, 163, 164, 169, 174, 175, 177, 179, 181, 182, 184, 187, 188, 190, 192, 193, 194, 198, 200, 201, 204, 206, 209, 210, 211, 213, 214, 219, 220, 222, 223, 225, 227, 228, 229, 241, 243, 244, 247, 249, 250, 251, 259, 261, 263, 264, 265, 269, 270, 271, 287, 293, 301, 307, 310, 319, 320, 331, 338, 368, 374, 376, 377, 380, 382, 383, 386, 387, 389, 391, 394, 396, 400, 405, 406, 408, 409, 410, 411, 420, 423, 436, 438, 448, 452, 453, 473, 477, 480, 504, 512, 515, 521, 537, 542, 544, 561, 584, 626, 627, 628, 629, 630, 666, 672, 675, 676, 678, 685, 688, 690, 707, 709, 710, 755, 757, 760, 822, 824, 844, 854, 856, 861, 862, 863, 880, 883, 884, 891, 901, 902, 910, 915, 924, 929, 939, 949, 957, 963, 966, 969, 974, 977, 978, 984, 987, 990, 1001, 1003, 1005, 1011, 1014, 1016, 1017, 1018, 1021, 1023, 1024, 1027, 1028, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1050, 1053, 1054, 1060, 1062, 1071, 1079, 1093, 1099, 1112, 1122, 1127], "58": [6, 134, 141, 164, 169, 174, 179, 181, 184, 187, 190, 196, 200, 203, 206, 211, 213, 219, 223, 226, 229, 232, 241, 244, 251, 261, 265, 271, 296, 301, 306, 308, 410, 863, 932, 933, 943, 1059, 1060], "59": [6, 141, 164, 169, 174, 179, 181, 184, 187, 190, 196, 200, 203, 206, 211, 213, 219, 223, 226, 229, 232, 241, 244, 251, 261, 265, 271, 293, 296, 308, 933, 934, 943, 1059], "three": [6, 11, 30, 34, 36, 41, 61, 108, 109, 132, 144, 151, 152, 163, 164, 167, 168, 174, 179, 181, 182, 184, 190, 198, 200, 203, 206, 211, 213, 216, 219, 223, 226, 229, 241, 244, 249, 250, 251, 253, 259, 260, 261, 265, 270, 271, 279, 301, 319, 388, 563, 608, 790, 799, 802, 817, 854, 861, 863, 883, 915, 924, 959, 969, 987, 991, 1001, 1003, 1005, 1017, 1023, 1054, 1055, 1113, 1127], "60": [6, 61, 104, 141, 164, 169, 174, 179, 181, 184, 187, 190, 196, 200, 203, 206, 211, 213, 219, 223, 226, 229, 231, 232, 241, 244, 248, 251, 261, 265, 271, 295, 296, 452, 453, 454, 466, 467, 468, 469, 799, 861, 862, 863, 957, 1059, 1060], "61": [6, 61, 141, 152, 164, 169, 174, 179, 181, 184, 187, 190, 196, 203, 206, 211, 213, 219, 223, 226, 232, 241, 244, 251, 261, 265, 271, 293, 296, 301, 306, 1059, 1060], "62": [6, 141, 164, 169, 174, 179, 181, 184, 187, 190, 196, 200, 203, 206, 211, 213, 219, 223, 226, 229, 232, 241, 244, 248, 251, 261, 265, 271, 296, 799, 1012, 1059], "63": [6, 141, 164, 169, 174, 179, 181, 184, 187, 190, 196, 203, 206, 211, 213, 219, 223, 226, 229, 232, 241, 244, 248, 251, 261, 265, 271, 293, 296, 301, 306, 1012, 1059], "k": [6, 28, 133, 152, 154, 164, 167, 179, 181, 184, 187, 191, 192, 203, 206, 211, 213, 216, 219, 226, 229, 241, 244, 250, 251, 261, 271, 278, 302, 303, 322, 450, 583, 626, 688, 710, 817, 864, 899, 1053, 1056, 1062, 1072, 1092], "v": [6, 19, 22, 30, 86, 113, 127, 131, 138, 152, 155, 158, 164, 168, 170, 172, 176, 178, 179, 182, 183, 184, 189, 191, 192, 193, 194, 200, 203, 204, 206, 207, 209, 210, 212, 218, 221, 222, 224, 227, 229, 233, 240, 241, 244, 247, 252, 260, 262, 266, 270, 271, 279, 287, 301, 398, 422, 427, 448, 475, 508, 526, 583, 603, 626, 630, 634, 639, 640, 641, 648, 649, 650, 651, 652, 657, 660, 661, 662, 668, 674, 675, 676, 699, 706, 709, 710, 719, 724, 727, 729, 734, 738, 740, 744, 748, 749, 750, 752, 754, 757, 759, 761, 765, 766, 768, 772, 775, 778, 783, 787, 790, 791, 794, 817, 819, 846, 853, 876, 882, 884, 892, 894, 908, 911, 914, 916, 924, 925, 931, 974, 997, 1085, 1094, 1095, 1107, 1109, 1126, 1128], "65": [6, 164, 169, 174, 179, 181, 184, 187, 190, 196, 200, 203, 206, 211, 213, 219, 223, 226, 229, 232, 241, 244, 248, 251, 261, 265, 271, 293, 296, 616, 919, 1059, 1060], "item": [6, 131, 151, 153, 164, 169, 174, 179, 181, 184, 187, 190, 191, 195, 196, 200, 203, 204, 206, 211, 213, 216, 219, 223, 226, 229, 231, 235, 236, 238, 241, 244, 249, 251, 261, 265, 271, 282, 295, 386, 390, 392, 411, 675, 707, 709, 710, 924, 925, 959, 960, 961, 967, 993, 1000, 1003, 1005, 1043, 1085, 1092], "66": [6, 134, 141, 164, 169, 174, 179, 181, 184, 187, 190, 196, 203, 206, 211, 213, 219, 223, 226, 229, 232, 241, 244, 251, 261, 265, 271, 296, 606, 1012, 1059, 1060], "": [6, 7, 13, 19, 22, 33, 35, 36, 38, 41, 42, 43, 46, 53, 57, 59, 60, 61, 63, 64, 76, 87, 102, 106, 107, 111, 117, 127, 128, 130, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 148, 151, 152, 153, 155, 157, 158, 160, 161, 163, 164, 167, 169, 170, 174, 175, 179, 181, 182, 183, 184, 185, 187, 190, 192, 193, 196, 197, 200, 203, 204, 206, 207, 209, 210, 211, 213, 216, 217, 219, 223, 226, 229, 232, 235, 236, 238, 241, 244, 247, 248, 249, 250, 251, 253, 256, 257, 258, 259, 260, 261, 265, 268, 271, 273, 275, 278, 279, 282, 286, 287, 295, 296, 298, 301, 304, 305, 319, 321, 334, 336, 342, 347, 368, 369, 372, 381, 386, 388, 390, 391, 392, 393, 394, 398, 409, 410, 411, 413, 414, 416, 418, 419, 422, 423, 426, 427, 428, 430, 431, 432, 433, 436, 437, 448, 450, 451, 453, 454, 458, 470, 472, 477, 478, 480, 481, 487, 493, 495, 496, 505, 508, 511, 512, 514, 517, 520, 523, 530, 532, 533, 536, 537, 540, 541, 543, 544, 553, 563, 573, 574, 584, 591, 593, 598, 600, 603, 604, 606, 610, 613, 617, 627, 628, 630, 632, 634, 637, 638, 639, 640, 643, 647, 648, 654, 663, 666, 668, 671, 675, 676, 678, 680, 684, 685, 686, 688, 690, 698, 700, 701, 706, 708, 709, 710, 716, 725, 728, 730, 735, 741, 743, 753, 762, 765, 777, 782, 783, 784, 785, 788, 789, 792, 794, 795, 799, 800, 801, 803, 807, 809, 811, 813, 814, 815, 817, 819, 820, 836, 839, 840, 842, 843, 845, 846, 848, 849, 850, 854, 857, 861, 862, 863, 864, 865, 872, 873, 874, 875, 877, 878, 879, 880, 881, 883, 884, 886, 887, 888, 889, 890, 891, 893, 895, 897, 898, 900, 901, 902, 906, 907, 910, 912, 915, 916, 917, 919, 920, 921, 923, 925, 927, 928, 929, 934, 943, 945, 946, 947, 948, 949, 950, 952, 953, 954, 957, 958, 960, 961, 962, 966, 967, 974, 978, 979, 980, 983, 987, 988, 994, 997, 1000, 1001, 1004, 1005, 1012, 1017, 1024, 1035, 1042, 1043, 1044, 1046, 1054, 1061, 1066, 1067, 1070, 1071, 1074, 1081, 1082, 1083, 1084, 1086, 1087, 1092, 1093, 1098, 1101, 1103, 1104, 1107, 1112, 1114, 1117, 1130], "rot": [6, 184, 195], "gruen": [6, 184], "blau": [6, 184, 195], "67": [6, 141, 152, 164, 174, 179, 181, 184, 187, 190, 196, 203, 206, 211, 213, 219, 223, 226, 229, 232, 241, 244, 251, 261, 265, 271, 296, 301, 306, 410, 469, 919, 1000, 1012, 1059, 1060], "69": [6, 59, 136, 141, 164, 169, 174, 179, 181, 184, 187, 190, 196, 200, 203, 206, 211, 213, 219, 223, 226, 229, 232, 241, 244, 251, 261, 265, 271, 296, 1059, 1060, 1082], "schwarz": [6, 184, 195], "70": [6, 59, 133, 141, 164, 169, 171, 174, 179, 181, 184, 187, 190, 196, 203, 206, 211, 213, 219, 223, 226, 229, 232, 241, 244, 248, 251, 261, 265, 271, 296, 410, 469, 861, 862, 863, 957, 1059, 1060, 1092], "add": [6, 22, 40, 42, 47, 63, 113, 115, 126, 127, 131, 132, 133, 137, 138, 142, 146, 151, 160, 163, 164, 167, 170, 179, 181, 182, 184, 187, 190, 192, 196, 200, 203, 204, 206, 211, 216, 219, 223, 226, 229, 235, 236, 241, 244, 247, 251, 255, 261, 265, 271, 301, 307, 349, 350, 389, 390, 398, 411, 412, 418, 421, 428, 430, 431, 447, 448, 452, 457, 458, 470, 479, 480, 482, 504, 518, 528, 541, 542, 544, 546, 615, 616, 617, 626, 634, 654, 665, 676, 684, 698, 700, 723, 725, 726, 730, 737, 745, 747, 757, 770, 773, 783, 856, 861, 862, 863, 891, 915, 917, 919, 925, 930, 943, 945, 952, 953, 975, 979, 987, 1005, 1010, 1080, 1092, 1093, 1099], "71": [6, 141, 164, 169, 174, 179, 181, 184, 187, 190, 196, 203, 206, 211, 213, 219, 223, 226, 229, 232, 241, 244, 251, 261, 265, 271, 296, 301, 306, 932, 933, 1059, 1060], "72": [6, 141, 164, 169, 174, 179, 181, 184, 187, 190, 196, 203, 206, 211, 213, 219, 223, 226, 229, 232, 241, 244, 248, 251, 261, 265, 271, 293, 296, 301, 306, 536, 848, 943, 1012, 1059, 1060], "remov": [6, 55, 97, 107, 111, 137, 138, 151, 153, 164, 179, 184, 190, 196, 204, 206, 211, 213, 219, 223, 226, 230, 231, 237, 244, 246, 247, 261, 265, 267, 268, 271, 413, 414, 432, 446, 469, 475, 476, 477, 479, 480, 483, 484, 485, 490, 491, 492, 497, 501, 503, 521, 526, 556, 562, 579, 612, 634, 687, 698, 699, 700, 705, 708, 709, 710, 718, 735, 745, 753, 776, 783, 784, 785, 786, 787, 790, 791, 804, 805, 807, 809, 810, 811, 812, 814, 815, 821, 822, 823, 824, 826, 827, 829, 831, 837, 853, 864, 874, 876, 882, 884, 887, 892, 894, 897, 908, 911, 914, 916, 933, 935, 936, 937, 938, 939, 940, 941, 942, 943, 947, 957, 977, 987, 1002, 1003, 1004, 1037], "73": [6, 141, 152, 164, 174, 179, 181, 184, 187, 190, 196, 203, 206, 211, 213, 219, 223, 226, 232, 241, 244, 251, 261, 265, 271, 293, 296, 1059], "74": [6, 134, 136, 141, 164, 174, 179, 181, 184, 187, 190, 196, 203, 206, 211, 213, 219, 223, 226, 229, 232, 241, 244, 251, 261, 265, 271, 296, 839, 848, 1012, 1059, 1060], "75": [6, 141, 164, 174, 179, 181, 184, 187, 190, 192, 196, 200, 203, 206, 211, 213, 219, 223, 226, 229, 232, 241, 244, 251, 261, 265, 271, 296, 410, 1059, 1060], "sum": [6, 36, 61, 164, 184, 188, 189, 203, 204, 206, 209, 211, 219, 222, 223, 226, 229, 244, 251, 359, 374, 389, 391, 392, 394, 458, 480, 504, 528, 542, 544, 557, 561, 609, 623, 710, 916, 974, 990, 1076], "100": [6, 30, 130, 131, 136, 146, 150, 151, 164, 174, 181, 184, 187, 190, 196, 200, 203, 206, 211, 213, 216, 219, 222, 223, 226, 229, 231, 232, 241, 244, 247, 248, 249, 251, 255, 261, 265, 271, 296, 297, 301, 306, 359, 365, 366, 408, 411, 424, 433, 466, 467, 469, 493, 556, 557, 558, 559, 560, 562, 563, 564, 565, 579, 626, 643, 664, 728, 767, 813, 816, 839, 856, 895, 917, 919, 923, 924, 932, 933, 958, 990, 994, 1012, 1043, 1092], "5050": [6, 164, 184, 206, 219, 226, 251], "bestimmen": [6, 184], "maximum": [6, 28, 124, 164, 174, 175, 177, 179, 182, 184, 187, 188, 194, 198, 200, 201, 203, 204, 206, 210, 211, 213, 214, 216, 219, 220, 222, 223, 225, 227, 228, 243, 244, 250, 251, 263, 264, 265, 269, 270, 297, 349, 622, 700, 710, 718, 794, 854, 919, 925, 997, 1014, 1016, 1017, 1018, 1021, 1024, 1027, 1028, 1034, 1035, 1036, 1037, 1038, 1039, 1053, 1054, 1058, 1059, 1060, 1061, 1087, 1122], "zwei": [6, 62, 140, 150, 158, 164, 176, 179, 181, 184, 187, 200, 203, 211, 216, 219, 223, 229, 251, 271, 296, 491, 583, 584, 585, 586, 844, 1109, 1126], "inlin": [6, 152, 158, 170, 184, 200, 229, 232, 234, 256, 369, 391, 394, 515, 530, 544, 583, 620, 672, 690, 951, 1030], "ohn": [6, 22, 148, 150, 158, 184, 187, 779, 845, 1108, 1128, 1129, 1130], "funktion": [6, 22, 154, 158, 164, 175, 176, 177, 181, 184, 187, 190, 211, 213, 216, 219, 251, 296, 1122], "666": [6, 40, 48, 105, 150, 151, 164, 174, 179, 181, 184, 187, 190, 196, 200, 203, 206, 211, 213, 216, 219, 223, 226, 229, 232, 241, 244, 251, 261, 265, 271, 292, 293, 294, 296, 297, 332, 412, 431, 482, 486, 487, 488, 489, 493, 494, 495, 496, 498, 499, 501, 509, 521, 528, 532, 541, 543, 566, 567, 568, 569, 570, 572, 575, 583, 586, 606, 610, 639, 641, 648, 650, 651, 652, 656, 676, 680, 683, 685, 690, 693, 704, 705, 706, 715, 716, 950, 954, 996, 997, 1000, 1104], "b": [6, 20, 30, 36, 61, 71, 72, 105, 113, 134, 146, 150, 151, 152, 154, 164, 169, 174, 179, 181, 184, 187, 190, 197, 200, 203, 204, 206, 211, 213, 216, 219, 223, 226, 229, 232, 241, 244, 248, 251, 261, 265, 271, 293, 295, 296, 297, 333, 341, 343, 352, 368, 382, 385, 398, 528, 530, 538, 539, 545, 546, 547, 548, 553, 597, 598, 603, 604, 633, 639, 673, 680, 690, 708, 757, 788, 800, 817, 839, 844, 845, 861, 862, 863, 902, 918, 947, 953, 962, 965, 977, 985, 986, 992, 995, 997, 999, 1000, 1005, 1071, 1074, 1087, 1107, 1116, 1118, 1123], "var1": [6, 174, 184, 1020], "var2": [6, 174, 184, 1020], "6712": [6, 184, 206], "isn": [6, 130, 146, 184, 250, 253, 309, 323, 374, 561, 565, 604, 627, 654, 674, 861, 999, 1099], "fehler": [6, 158, 164, 184, 301, 306], "link": [6, 12, 16, 26, 30, 42, 63, 101, 102, 111, 124, 127, 128, 130, 131, 137, 138, 139, 140, 141, 142, 148, 150, 158, 164, 171, 184, 207, 209, 237, 238, 246, 247, 255, 260, 267, 268, 273, 279, 301, 314, 315, 364, 377, 383, 387, 391, 396, 400, 405, 406, 411, 414, 416, 417, 422, 432, 446, 469, 470, 475, 476, 479, 480, 483, 484, 485, 503, 504, 511, 512, 526, 541, 628, 634, 642, 666, 676, 677, 707, 708, 709, 710, 718, 719, 723, 724, 727, 735, 738, 747, 748, 757, 759, 761, 766, 772, 775, 778, 787, 837, 839, 844, 853, 862, 869, 899, 902, 904, 931, 932, 933, 934, 936, 937, 938, 939, 941, 943, 949, 1054, 1086, 1096, 1099, 1106, 1107, 1114], "recht": [6, 62, 139, 140, 150, 158, 164, 175, 184, 1122, 1123], "\u212c": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 167, 168, 170, 171, 172, 173, 175, 177, 178, 185, 188, 191, 192, 193, 194, 198, 201, 204, 207, 209, 210, 214, 217, 220, 222, 225, 231, 235, 236, 237, 238, 239, 246, 247, 249, 256, 257, 258, 259, 260, 267, 268, 273, 274, 275, 278, 279, 282, 283, 284, 286, 287, 288, 289, 290, 292, 301, 308, 309, 310, 311, 312, 313, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 381, 382, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 402, 403, 404, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 447, 448, 455, 456, 457, 458, 459, 461, 462, 463, 469, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 553, 554, 561, 562, 563, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 591, 593, 595, 597, 598, 600, 601, 602, 603, 604, 606, 607, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 625, 626, 627, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 647, 648, 653, 654, 663, 664, 665, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 700, 701, 708, 712, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 734, 735, 737, 739, 741, 743, 745, 747, 749, 751, 753, 755, 759, 760, 762, 764, 765, 767, 770, 771, 773, 774, 776, 777, 779, 781, 782, 783, 788, 789, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 813, 814, 815, 816, 817, 818, 819, 820, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 848, 849, 850, 855, 856, 857, 858, 861, 864, 870, 871, 872, 873, 874, 875, 877, 878, 879, 880, 881, 882, 883, 886, 887, 888, 889, 890, 893, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 909, 910, 912, 913, 915, 917, 918, 919, 931, 932, 933, 934, 939, 943, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 957, 959, 962, 963, 965, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1011, 1012, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1064, 1066, 1067, 1069, 1070, 1071, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1088, 1092, 1093, 1094, 1095, 1122], "\u2145": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 167, 168, 170, 171, 172, 173, 175, 177, 178, 185, 188, 191, 192, 193, 194, 198, 201, 204, 207, 209, 210, 214, 217, 220, 222, 225, 231, 235, 236, 237, 238, 239, 246, 247, 249, 256, 257, 258, 259, 260, 267, 268, 273, 274, 275, 278, 279, 282, 283, 284, 286, 287, 288, 289, 290, 292, 301, 308, 309, 310, 311, 312, 313, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 381, 382, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 402, 403, 404, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 447, 448, 455, 456, 457, 458, 459, 461, 462, 463, 469, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 553, 554, 561, 562, 563, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 591, 593, 595, 597, 598, 600, 601, 602, 603, 604, 606, 607, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 625, 626, 627, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 647, 648, 653, 654, 663, 664, 665, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 700, 701, 708, 712, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 734, 735, 737, 739, 741, 743, 745, 747, 749, 751, 753, 755, 759, 760, 762, 764, 765, 767, 770, 771, 773, 774, 776, 777, 779, 781, 782, 783, 788, 789, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 813, 814, 815, 816, 817, 818, 819, 820, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 848, 849, 850, 855, 856, 857, 858, 861, 864, 870, 871, 872, 873, 874, 875, 877, 878, 879, 880, 881, 882, 883, 886, 887, 888, 889, 890, 893, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 909, 910, 912, 913, 915, 917, 918, 919, 931, 932, 933, 934, 939, 943, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 957, 959, 962, 963, 965, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1011, 1012, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1064, 1066, 1067, 1069, 1070, 1071, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1088, 1092, 1093, 1094, 1095, 1122], "\u212d": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 167, 168, 170, 171, 172, 173, 175, 177, 178, 185, 188, 191, 192, 193, 194, 198, 201, 204, 207, 209, 210, 214, 217, 220, 222, 225, 231, 235, 236, 237, 238, 239, 246, 247, 249, 256, 257, 258, 259, 260, 267, 268, 273, 274, 275, 278, 279, 282, 283, 284, 286, 287, 288, 289, 290, 292, 301, 308, 309, 310, 311, 312, 313, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 381, 382, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 402, 403, 404, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 447, 448, 455, 456, 457, 458, 459, 461, 462, 463, 469, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 553, 554, 561, 562, 563, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 591, 593, 595, 597, 598, 600, 601, 602, 603, 604, 606, 607, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 625, 626, 627, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 647, 648, 653, 654, 663, 664, 665, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 700, 701, 708, 712, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 734, 735, 737, 739, 741, 743, 745, 747, 749, 751, 753, 755, 759, 760, 762, 764, 765, 767, 770, 771, 773, 774, 776, 777, 779, 781, 782, 783, 788, 789, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 813, 814, 815, 816, 817, 818, 819, 820, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 848, 849, 850, 855, 856, 857, 858, 861, 864, 870, 871, 872, 873, 874, 875, 877, 878, 879, 880, 881, 882, 883, 886, 887, 888, 889, 890, 893, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 909, 910, 912, 913, 915, 917, 918, 919, 931, 932, 933, 934, 939, 943, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 957, 959, 962, 963, 965, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1011, 1012, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1064, 1066, 1067, 1069, 1070, 1071, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1088, 1092, 1093, 1094, 1095, 1122], "\u2102": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 167, 168, 170, 171, 172, 173, 175, 177, 178, 185, 188, 191, 192, 193, 194, 198, 201, 204, 207, 209, 210, 214, 217, 220, 222, 225, 231, 235, 236, 237, 238, 239, 246, 247, 249, 256, 257, 258, 259, 260, 267, 268, 273, 274, 275, 278, 279, 282, 283, 284, 286, 287, 288, 289, 290, 292, 301, 308, 309, 310, 311, 312, 313, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 381, 382, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 402, 403, 404, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 447, 448, 455, 456, 457, 458, 459, 461, 462, 463, 469, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 553, 554, 561, 562, 563, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 591, 593, 595, 597, 598, 600, 601, 602, 603, 604, 606, 607, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 625, 626, 627, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 647, 648, 653, 654, 663, 664, 665, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 700, 701, 708, 712, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 734, 735, 737, 739, 741, 743, 745, 747, 749, 751, 753, 755, 759, 760, 762, 764, 765, 767, 770, 771, 773, 774, 776, 777, 779, 781, 782, 783, 788, 789, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 813, 814, 815, 816, 817, 818, 819, 820, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 848, 849, 850, 855, 856, 857, 858, 861, 864, 870, 871, 872, 873, 874, 875, 877, 878, 879, 880, 881, 882, 883, 886, 887, 888, 889, 890, 893, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 909, 910, 912, 913, 915, 917, 918, 919, 931, 932, 933, 934, 939, 943, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 957, 959, 962, 963, 965, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1011, 1012, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1064, 1066, 1067, 1069, 1070, 1071, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1088, 1092, 1093, 1094, 1095, 1122], "\u2146": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 167, 168, 170, 171, 172, 173, 175, 177, 178, 185, 188, 191, 192, 193, 194, 198, 201, 204, 207, 209, 210, 214, 217, 220, 222, 225, 231, 235, 236, 237, 238, 239, 246, 247, 249, 256, 257, 258, 259, 260, 267, 268, 273, 274, 275, 278, 279, 282, 283, 284, 286, 287, 288, 289, 290, 292, 301, 308, 309, 310, 311, 312, 313, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 381, 382, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 402, 403, 404, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 447, 448, 455, 456, 457, 458, 459, 461, 462, 463, 469, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 553, 554, 561, 562, 563, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 591, 593, 595, 597, 598, 600, 601, 602, 603, 604, 606, 607, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 625, 626, 627, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 647, 648, 653, 654, 663, 664, 665, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 700, 701, 708, 712, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 734, 735, 737, 739, 741, 743, 745, 747, 749, 751, 753, 755, 759, 760, 762, 764, 765, 767, 770, 771, 773, 774, 776, 777, 779, 781, 782, 783, 788, 789, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 813, 814, 815, 816, 817, 818, 819, 820, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 848, 849, 850, 855, 856, 857, 858, 861, 864, 870, 871, 872, 873, 874, 875, 877, 878, 879, 880, 881, 882, 883, 886, 887, 888, 889, 890, 893, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 909, 910, 912, 913, 915, 917, 918, 919, 931, 932, 933, 934, 939, 943, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 957, 959, 962, 963, 965, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1011, 1012, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1064, 1066, 1067, 1069, 1070, 1071, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1088, 1092, 1093, 1094, 1095, 1122], "\u03dd": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 167, 168, 170, 171, 172, 173, 175, 177, 178, 185, 188, 191, 192, 193, 194, 198, 201, 204, 207, 209, 210, 214, 217, 220, 222, 225, 231, 235, 236, 237, 238, 239, 246, 247, 249, 256, 257, 258, 259, 260, 267, 268, 273, 274, 275, 278, 279, 282, 283, 284, 286, 287, 288, 289, 290, 292, 301, 308, 309, 310, 311, 312, 313, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 381, 382, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 402, 403, 404, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 447, 448, 455, 456, 457, 458, 459, 461, 462, 463, 469, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 553, 554, 561, 562, 563, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 591, 593, 595, 597, 598, 600, 601, 602, 603, 604, 606, 607, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 625, 626, 627, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 647, 648, 653, 654, 663, 664, 665, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 700, 701, 708, 712, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 734, 735, 737, 739, 741, 743, 745, 747, 749, 751, 753, 755, 759, 760, 762, 764, 765, 767, 770, 771, 773, 774, 776, 777, 779, 781, 782, 783, 788, 789, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 813, 814, 815, 816, 817, 818, 819, 820, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 848, 849, 850, 855, 856, 857, 858, 861, 864, 870, 871, 872, 873, 874, 875, 877, 878, 879, 880, 881, 882, 883, 886, 887, 888, 889, 890, 893, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 909, 910, 912, 913, 915, 917, 918, 919, 931, 932, 933, 934, 939, 943, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 957, 959, 962, 963, 965, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1011, 1012, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1064, 1066, 1067, 1069, 1070, 1071, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1088, 1092, 1093, 1094, 1095, 1122], "\u2130": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 167, 168, 170, 171, 172, 173, 175, 177, 178, 185, 188, 191, 192, 193, 194, 198, 201, 204, 207, 209, 210, 214, 217, 220, 222, 225, 231, 235, 236, 237, 238, 239, 246, 247, 249, 256, 257, 258, 259, 260, 267, 268, 273, 274, 275, 278, 279, 282, 283, 284, 286, 287, 288, 289, 290, 292, 301, 308, 309, 310, 311, 312, 313, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 381, 382, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 402, 403, 404, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 447, 448, 455, 456, 457, 458, 459, 461, 462, 463, 469, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 553, 554, 561, 562, 563, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 591, 593, 595, 597, 598, 600, 601, 602, 603, 604, 606, 607, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 625, 626, 627, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 647, 648, 653, 654, 663, 664, 665, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 700, 701, 708, 712, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 734, 735, 737, 739, 741, 743, 745, 747, 749, 751, 753, 755, 759, 760, 762, 764, 765, 767, 770, 771, 773, 774, 776, 777, 779, 781, 782, 783, 788, 789, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 813, 814, 815, 816, 817, 818, 819, 820, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 848, 849, 850, 855, 856, 857, 858, 861, 864, 870, 871, 872, 873, 874, 875, 877, 878, 879, 880, 881, 882, 883, 886, 887, 888, 889, 890, 893, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 909, 910, 912, 913, 915, 917, 918, 919, 931, 932, 933, 934, 939, 943, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 957, 959, 962, 963, 965, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1011, 1012, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1064, 1066, 1067, 1069, 1070, 1071, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1088, 1092, 1093, 1094, 1095, 1122], "\u2147": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 167, 168, 170, 171, 172, 173, 175, 177, 178, 185, 188, 191, 192, 193, 194, 198, 201, 204, 207, 209, 210, 214, 217, 220, 222, 225, 231, 235, 236, 237, 238, 239, 246, 247, 249, 256, 257, 258, 259, 260, 267, 268, 273, 274, 275, 278, 279, 282, 283, 284, 286, 287, 288, 289, 290, 292, 301, 308, 309, 310, 311, 312, 313, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 381, 382, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 402, 403, 404, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 447, 448, 455, 456, 457, 458, 459, 461, 462, 463, 469, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 553, 554, 561, 562, 563, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 591, 593, 595, 597, 598, 600, 601, 602, 603, 604, 606, 607, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 625, 626, 627, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 647, 648, 653, 654, 663, 664, 665, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 700, 701, 708, 712, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 734, 735, 737, 739, 741, 743, 745, 747, 749, 751, 753, 755, 759, 760, 762, 764, 765, 767, 770, 771, 773, 774, 776, 777, 779, 781, 782, 783, 788, 789, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 813, 814, 815, 816, 817, 818, 819, 820, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 848, 849, 850, 855, 856, 857, 858, 861, 864, 870, 871, 872, 873, 874, 875, 877, 878, 879, 880, 881, 882, 883, 886, 887, 888, 889, 890, 893, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 909, 910, 912, 913, 915, 917, 918, 919, 931, 932, 933, 934, 939, 943, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 957, 959, 962, 963, 965, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1011, 1012, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1064, 1066, 1067, 1069, 1070, 1071, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1088, 1092, 1093, 1094, 1095, 1122], "\u2131": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 167, 168, 170, 171, 172, 173, 175, 177, 178, 185, 188, 191, 192, 193, 194, 198, 201, 204, 207, 209, 210, 214, 217, 220, 222, 225, 231, 235, 236, 237, 238, 239, 246, 247, 249, 256, 257, 258, 259, 260, 267, 268, 273, 274, 275, 278, 279, 282, 283, 284, 286, 287, 288, 289, 290, 292, 301, 308, 309, 310, 311, 312, 313, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 381, 382, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 402, 403, 404, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 447, 448, 455, 456, 457, 458, 459, 461, 462, 463, 469, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 553, 554, 561, 562, 563, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 591, 593, 595, 597, 598, 600, 601, 602, 603, 604, 606, 607, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 625, 626, 627, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 647, 648, 653, 654, 663, 664, 665, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 700, 701, 708, 712, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 734, 735, 737, 739, 741, 743, 745, 747, 749, 751, 753, 755, 759, 760, 762, 764, 765, 767, 770, 771, 773, 774, 776, 777, 779, 781, 782, 783, 788, 789, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 813, 814, 815, 816, 817, 818, 819, 820, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 848, 849, 850, 855, 856, 857, 858, 861, 864, 870, 871, 872, 873, 874, 875, 877, 878, 879, 880, 881, 882, 883, 886, 887, 888, 889, 890, 893, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 909, 910, 912, 913, 915, 917, 918, 919, 931, 932, 933, 934, 939, 943, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 957, 959, 962, 963, 965, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1011, 1012, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1064, 1066, 1067, 1069, 1070, 1071, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1088, 1092, 1093, 1094, 1095, 1122], "\u02c7": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 167, 168, 170, 171, 172, 173, 175, 177, 178, 185, 188, 191, 192, 193, 194, 198, 201, 204, 207, 209, 210, 214, 217, 220, 222, 225, 231, 235, 236, 237, 238, 239, 246, 247, 249, 256, 257, 258, 259, 260, 267, 268, 273, 274, 275, 278, 279, 282, 283, 284, 286, 287, 288, 289, 290, 292, 301, 308, 309, 310, 311, 312, 313, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 381, 382, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 402, 403, 404, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 447, 448, 455, 456, 457, 458, 459, 461, 462, 463, 469, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 553, 554, 561, 562, 563, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 591, 593, 595, 597, 598, 600, 601, 602, 603, 604, 606, 607, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 625, 626, 627, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 647, 648, 653, 654, 663, 664, 665, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 700, 701, 708, 712, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 734, 735, 737, 739, 741, 743, 745, 747, 749, 751, 753, 755, 759, 760, 762, 764, 765, 767, 770, 771, 773, 774, 776, 777, 779, 781, 782, 783, 788, 789, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 813, 814, 815, 816, 817, 818, 819, 820, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 848, 849, 850, 855, 856, 857, 858, 861, 864, 870, 871, 872, 873, 874, 875, 877, 878, 879, 880, 881, 882, 883, 886, 887, 888, 889, 890, 893, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 909, 910, 912, 913, 915, 917, 918, 919, 931, 932, 933, 934, 939, 943, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 957, 959, 962, 963, 965, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1011, 1012, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1064, 1066, 1067, 1069, 1070, 1071, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1088, 1092, 1093, 1094, 1095, 1122], "\u210f": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 167, 168, 170, 171, 172, 173, 175, 177, 178, 185, 188, 191, 192, 193, 194, 198, 201, 204, 207, 209, 210, 214, 217, 220, 222, 225, 231, 235, 236, 237, 238, 239, 246, 247, 249, 256, 257, 258, 259, 260, 267, 268, 273, 274, 275, 278, 279, 282, 283, 284, 286, 287, 288, 289, 290, 292, 301, 308, 309, 310, 311, 312, 313, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 381, 382, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 402, 403, 404, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 447, 448, 455, 456, 457, 458, 459, 461, 462, 463, 469, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 553, 554, 561, 562, 563, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 591, 593, 595, 597, 598, 600, 601, 602, 603, 604, 606, 607, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 625, 626, 627, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 647, 648, 653, 654, 663, 664, 665, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 700, 701, 708, 712, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 734, 735, 737, 739, 741, 743, 745, 747, 749, 751, 753, 755, 759, 760, 762, 764, 765, 767, 770, 771, 773, 774, 776, 777, 779, 781, 782, 783, 788, 789, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 813, 814, 815, 816, 817, 818, 819, 820, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 848, 849, 850, 855, 856, 857, 858, 861, 864, 870, 871, 872, 873, 874, 875, 877, 878, 879, 880, 881, 882, 883, 886, 887, 888, 889, 890, 893, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 909, 910, 912, 913, 915, 917, 918, 919, 931, 932, 933, 934, 939, 943, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 957, 959, 962, 963, 965, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1011, 1012, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1064, 1066, 1067, 1069, 1070, 1071, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1088, 1092, 1093, 1094, 1095, 1122], "\u210b": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 167, 168, 170, 171, 172, 173, 175, 177, 178, 185, 188, 191, 192, 193, 194, 198, 201, 204, 207, 209, 210, 214, 217, 220, 222, 225, 231, 235, 236, 237, 238, 239, 246, 247, 249, 256, 257, 258, 259, 260, 267, 268, 273, 274, 275, 278, 279, 282, 283, 284, 286, 287, 288, 289, 290, 292, 301, 308, 309, 310, 311, 312, 313, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 381, 382, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 402, 403, 404, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 447, 448, 455, 456, 457, 458, 459, 461, 462, 463, 469, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 553, 554, 561, 562, 563, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 591, 593, 595, 597, 598, 600, 601, 602, 603, 604, 606, 607, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 625, 626, 627, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 647, 648, 653, 654, 663, 664, 665, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 700, 701, 708, 712, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 734, 735, 737, 739, 741, 743, 745, 747, 749, 751, 753, 755, 759, 760, 762, 764, 765, 767, 770, 771, 773, 774, 776, 777, 779, 781, 782, 783, 788, 789, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 813, 814, 815, 816, 817, 818, 819, 820, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 848, 849, 850, 855, 856, 857, 858, 861, 864, 870, 871, 872, 873, 874, 875, 877, 878, 879, 880, 881, 882, 883, 886, 887, 888, 889, 890, 893, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 909, 910, 912, 913, 915, 917, 918, 919, 931, 932, 933, 934, 939, 943, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 957, 959, 962, 963, 965, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1011, 1012, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1064, 1066, 1067, 1069, 1070, 1071, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1088, 1092, 1093, 1094, 1095, 1122], "\u2111": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 167, 168, 170, 171, 172, 173, 175, 177, 178, 185, 188, 191, 192, 193, 194, 198, 201, 204, 207, 209, 210, 214, 217, 220, 222, 225, 231, 235, 236, 237, 238, 239, 246, 247, 249, 256, 257, 258, 259, 260, 267, 268, 273, 274, 275, 278, 279, 282, 283, 284, 286, 287, 288, 289, 290, 292, 301, 308, 309, 310, 311, 312, 313, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 381, 382, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 402, 403, 404, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 447, 448, 455, 456, 457, 458, 459, 461, 462, 463, 469, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 553, 554, 561, 562, 563, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 591, 593, 595, 597, 598, 600, 601, 602, 603, 604, 606, 607, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 625, 626, 627, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 647, 648, 653, 654, 663, 664, 665, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 700, 701, 708, 712, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 734, 735, 737, 739, 741, 743, 745, 747, 749, 751, 753, 755, 759, 760, 762, 764, 765, 767, 770, 771, 773, 774, 776, 777, 779, 781, 782, 783, 788, 789, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 813, 814, 815, 816, 817, 818, 819, 820, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 848, 849, 850, 855, 856, 857, 858, 861, 864, 870, 871, 872, 873, 874, 875, 877, 878, 879, 880, 881, 882, 883, 886, 887, 888, 889, 890, 893, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 909, 910, 912, 913, 915, 917, 918, 919, 931, 932, 933, 934, 939, 943, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 957, 959, 962, 963, 965, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1011, 1012, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1064, 1066, 1067, 1069, 1070, 1071, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1088, 1092, 1093, 1094, 1095, 1122], "\u2148": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 167, 168, 170, 171, 172, 173, 175, 177, 178, 185, 188, 191, 192, 193, 194, 198, 201, 204, 207, 209, 210, 214, 217, 220, 222, 225, 231, 235, 236, 237, 238, 239, 246, 247, 249, 256, 257, 258, 259, 260, 267, 268, 273, 274, 275, 278, 279, 282, 283, 284, 286, 287, 288, 289, 290, 292, 301, 308, 309, 310, 311, 312, 313, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 381, 382, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 402, 403, 404, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 447, 448, 455, 456, 457, 458, 459, 461, 462, 463, 469, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 553, 554, 561, 562, 563, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 591, 593, 595, 597, 598, 600, 601, 602, 603, 604, 606, 607, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 625, 626, 627, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 647, 648, 653, 654, 663, 664, 665, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 700, 701, 708, 712, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 734, 735, 737, 739, 741, 743, 745, 747, 749, 751, 753, 755, 759, 760, 762, 764, 765, 767, 770, 771, 773, 774, 776, 777, 779, 781, 782, 783, 788, 789, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 813, 814, 815, 816, 817, 818, 819, 820, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 848, 849, 850, 855, 856, 857, 858, 861, 864, 870, 871, 872, 873, 874, 875, 877, 878, 879, 880, 881, 882, 883, 886, 887, 888, 889, 890, 893, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 909, 910, 912, 913, 915, 917, 918, 919, 931, 932, 933, 934, 939, 943, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 957, 959, 962, 963, 965, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1011, 1012, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1064, 1066, 1067, 1069, 1070, 1071, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1088, 1092, 1093, 1094, 1095, 1122], "\u2110": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 167, 168, 170, 171, 172, 173, 175, 177, 178, 185, 188, 191, 192, 193, 194, 198, 201, 204, 207, 209, 210, 214, 217, 220, 222, 225, 231, 235, 236, 237, 238, 239, 246, 247, 249, 256, 257, 258, 259, 260, 267, 268, 273, 274, 275, 278, 279, 282, 283, 284, 286, 287, 288, 289, 290, 292, 301, 308, 309, 310, 311, 312, 313, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 381, 382, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 402, 403, 404, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 447, 448, 455, 456, 457, 458, 459, 461, 462, 463, 469, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 553, 554, 561, 562, 563, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 591, 593, 595, 597, 598, 600, 601, 602, 603, 604, 606, 607, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 625, 626, 627, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 647, 648, 653, 654, 663, 664, 665, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 700, 701, 708, 712, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 734, 735, 737, 739, 741, 743, 745, 747, 749, 751, 753, 755, 759, 760, 762, 764, 765, 767, 770, 771, 773, 774, 776, 777, 779, 781, 782, 783, 788, 789, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 813, 814, 815, 816, 817, 818, 819, 820, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 848, 849, 850, 855, 856, 857, 858, 861, 864, 870, 871, 872, 873, 874, 875, 877, 878, 879, 880, 881, 882, 883, 886, 887, 888, 889, 890, 893, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 909, 910, 912, 913, 915, 917, 918, 919, 931, 932, 933, 934, 939, 943, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 957, 959, 962, 963, 965, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1011, 1012, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1064, 1066, 1067, 1069, 1070, 1071, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1088, 1092, 1093, 1094, 1095, 1122], "\u2124": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 167, 168, 170, 171, 172, 173, 175, 177, 178, 185, 188, 191, 192, 193, 194, 198, 201, 204, 207, 209, 210, 214, 217, 220, 222, 225, 231, 235, 236, 237, 238, 239, 246, 247, 249, 256, 257, 258, 259, 260, 267, 268, 273, 274, 275, 278, 279, 282, 283, 284, 286, 287, 288, 289, 290, 292, 301, 308, 309, 310, 311, 312, 313, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 381, 382, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 402, 403, 404, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 447, 448, 455, 456, 457, 458, 459, 461, 462, 463, 469, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 553, 554, 561, 562, 563, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 591, 593, 595, 597, 598, 600, 601, 602, 603, 604, 606, 607, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 625, 626, 627, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 647, 648, 653, 654, 663, 664, 665, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 700, 701, 708, 712, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 734, 735, 737, 739, 741, 743, 745, 747, 749, 751, 753, 755, 759, 760, 762, 764, 765, 767, 770, 771, 773, 774, 776, 777, 779, 781, 782, 783, 788, 789, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 813, 814, 815, 816, 817, 818, 819, 820, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 848, 849, 850, 855, 856, 857, 858, 861, 864, 870, 871, 872, 873, 874, 875, 877, 878, 879, 880, 881, 882, 883, 886, 887, 888, 889, 890, 893, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 909, 910, 912, 913, 915, 917, 918, 919, 931, 932, 933, 934, 939, 943, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 957, 959, 962, 963, 965, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1011, 1012, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1064, 1066, 1067, 1069, 1070, 1071, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1088, 1092, 1093, 1094, 1095, 1122], "\u2112": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 167, 168, 170, 171, 172, 173, 175, 177, 178, 185, 188, 191, 192, 193, 194, 198, 201, 204, 207, 209, 210, 214, 217, 220, 222, 225, 231, 235, 236, 237, 238, 239, 246, 247, 249, 256, 257, 258, 259, 260, 267, 268, 273, 274, 275, 278, 279, 282, 283, 284, 286, 287, 288, 289, 290, 292, 301, 308, 309, 310, 311, 312, 313, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 381, 382, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 402, 403, 404, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 447, 448, 455, 456, 457, 458, 459, 461, 462, 463, 469, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 553, 554, 561, 562, 563, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 591, 593, 595, 597, 598, 600, 601, 602, 603, 604, 606, 607, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 625, 626, 627, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 647, 648, 653, 654, 663, 664, 665, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 700, 701, 708, 712, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 734, 735, 737, 739, 741, 743, 745, 747, 749, 751, 753, 755, 759, 760, 762, 764, 765, 767, 770, 771, 773, 774, 776, 777, 779, 781, 782, 783, 788, 789, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 813, 814, 815, 816, 817, 818, 819, 820, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 848, 849, 850, 855, 856, 857, 858, 861, 864, 870, 871, 872, 873, 874, 875, 877, 878, 879, 880, 881, 882, 883, 886, 887, 888, 889, 890, 893, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 909, 910, 912, 913, 915, 917, 918, 919, 931, 932, 933, 934, 939, 943, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 957, 959, 962, 963, 965, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1011, 1012, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1064, 1066, 1067, 1069, 1070, 1071, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1088, 1092, 1093, 1094, 1095, 1122], "\u2133": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 167, 168, 170, 171, 172, 173, 175, 177, 178, 185, 188, 191, 192, 193, 194, 198, 201, 204, 207, 209, 210, 214, 217, 220, 222, 225, 231, 235, 236, 237, 238, 239, 246, 247, 249, 256, 257, 258, 259, 260, 267, 268, 273, 274, 275, 278, 279, 282, 283, 284, 286, 287, 288, 289, 290, 292, 301, 308, 309, 310, 311, 312, 313, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 381, 382, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 402, 403, 404, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 447, 448, 455, 456, 457, 458, 459, 461, 462, 463, 469, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 553, 554, 561, 562, 563, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 591, 593, 595, 597, 598, 600, 601, 602, 603, 604, 606, 607, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 625, 626, 627, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 647, 648, 653, 654, 663, 664, 665, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 700, 701, 708, 712, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 734, 735, 737, 739, 741, 743, 745, 747, 749, 751, 753, 755, 759, 760, 762, 764, 765, 767, 770, 771, 773, 774, 776, 777, 779, 781, 782, 783, 788, 789, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 813, 814, 815, 816, 817, 818, 819, 820, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 848, 849, 850, 855, 856, 857, 858, 861, 864, 870, 871, 872, 873, 874, 875, 877, 878, 879, 880, 881, 882, 883, 886, 887, 888, 889, 890, 893, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 909, 910, 912, 913, 915, 917, 918, 919, 931, 932, 933, 934, 939, 943, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 957, 959, 962, 963, 965, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1011, 1012, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1064, 1066, 1067, 1069, 1070, 1071, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1088, 1092, 1093, 1094, 1095, 1122], "\u2115": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 167, 168, 170, 171, 172, 173, 175, 177, 178, 185, 188, 191, 192, 193, 194, 198, 201, 204, 207, 209, 210, 214, 217, 220, 222, 225, 231, 235, 236, 237, 238, 239, 246, 247, 249, 256, 257, 258, 259, 260, 267, 268, 273, 274, 275, 278, 279, 282, 283, 284, 286, 287, 288, 289, 290, 292, 301, 308, 309, 310, 311, 312, 313, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 381, 382, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 402, 403, 404, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 447, 448, 455, 456, 457, 458, 459, 461, 462, 463, 469, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 553, 554, 561, 562, 563, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 591, 593, 595, 597, 598, 600, 601, 602, 603, 604, 606, 607, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 625, 626, 627, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 647, 648, 653, 654, 663, 664, 665, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 700, 701, 708, 712, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 734, 735, 737, 739, 741, 743, 745, 747, 749, 751, 753, 755, 759, 760, 762, 764, 765, 767, 770, 771, 773, 774, 776, 777, 779, 781, 782, 783, 788, 789, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 813, 814, 815, 816, 817, 818, 819, 820, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 848, 849, 850, 855, 856, 857, 858, 861, 864, 870, 871, 872, 873, 874, 875, 877, 878, 879, 880, 881, 882, 883, 886, 887, 888, 889, 890, 893, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 909, 910, 912, 913, 915, 917, 918, 919, 931, 932, 933, 934, 939, 943, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 957, 959, 962, 963, 965, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1011, 1012, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1064, 1066, 1067, 1069, 1070, 1071, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1088, 1092, 1093, 1094, 1095, 1122], "\u2134": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 167, 168, 170, 171, 172, 173, 175, 177, 178, 185, 188, 191, 192, 193, 194, 198, 201, 204, 207, 209, 210, 214, 217, 220, 222, 225, 231, 235, 236, 237, 238, 239, 246, 247, 249, 256, 257, 258, 259, 260, 267, 268, 273, 274, 275, 278, 279, 282, 283, 284, 286, 287, 288, 289, 290, 292, 301, 308, 309, 310, 311, 312, 313, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 381, 382, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 402, 403, 404, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 447, 448, 455, 456, 457, 458, 459, 461, 462, 463, 469, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 553, 554, 561, 562, 563, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 591, 593, 595, 597, 598, 600, 601, 602, 603, 604, 606, 607, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 625, 626, 627, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 647, 648, 653, 654, 663, 664, 665, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 700, 701, 708, 712, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 734, 735, 737, 739, 741, 743, 745, 747, 749, 751, 753, 755, 759, 760, 762, 764, 765, 767, 770, 771, 773, 774, 776, 777, 779, 781, 782, 783, 788, 789, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 813, 814, 815, 816, 817, 818, 819, 820, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 848, 849, 850, 855, 856, 857, 858, 861, 864, 870, 871, 872, 873, 874, 875, 877, 878, 879, 880, 881, 882, 883, 886, 887, 888, 889, 890, 893, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 909, 910, 912, 913, 915, 917, 918, 919, 931, 932, 933, 934, 939, 943, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 957, 959, 962, 963, 965, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1011, 1012, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1064, 1066, 1067, 1069, 1070, 1071, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1088, 1092, 1093, 1094, 1095, 1122], "\u210c": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 167, 168, 170, 171, 172, 173, 175, 177, 178, 185, 188, 191, 192, 193, 194, 198, 201, 204, 207, 209, 210, 214, 217, 220, 222, 225, 231, 235, 236, 237, 238, 239, 246, 247, 249, 256, 257, 258, 259, 260, 267, 268, 273, 274, 275, 278, 279, 282, 283, 284, 286, 287, 288, 289, 290, 292, 301, 308, 309, 310, 311, 312, 313, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 381, 382, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 402, 403, 404, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 447, 448, 455, 456, 457, 458, 459, 461, 462, 463, 469, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 553, 554, 561, 562, 563, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 591, 593, 595, 597, 598, 600, 601, 602, 603, 604, 606, 607, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 625, 626, 627, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 647, 648, 653, 654, 663, 664, 665, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 700, 701, 708, 712, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 734, 735, 737, 739, 741, 743, 745, 747, 749, 751, 753, 755, 759, 760, 762, 764, 765, 767, 770, 771, 773, 774, 776, 777, 779, 781, 782, 783, 788, 789, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 813, 814, 815, 816, 817, 818, 819, 820, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 848, 849, 850, 855, 856, 857, 858, 861, 864, 870, 871, 872, 873, 874, 875, 877, 878, 879, 880, 881, 882, 883, 886, 887, 888, 889, 890, 893, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 909, 910, 912, 913, 915, 917, 918, 919, 931, 932, 933, 934, 939, 943, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 957, 959, 962, 963, 965, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1011, 1012, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1064, 1066, 1067, 1069, 1070, 1071, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1088, 1092, 1093, 1094, 1095, 1122], "\u2119": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 167, 168, 170, 171, 172, 173, 175, 177, 178, 185, 188, 191, 192, 193, 194, 198, 201, 204, 207, 209, 210, 214, 217, 220, 222, 225, 231, 235, 236, 237, 238, 239, 246, 247, 249, 256, 257, 258, 259, 260, 267, 268, 273, 274, 275, 278, 279, 282, 283, 284, 286, 287, 288, 289, 290, 292, 301, 308, 309, 310, 311, 312, 313, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 381, 382, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 402, 403, 404, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 447, 448, 455, 456, 457, 458, 459, 461, 462, 463, 469, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 553, 554, 561, 562, 563, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 591, 593, 595, 597, 598, 600, 601, 602, 603, 604, 606, 607, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 625, 626, 627, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 647, 648, 653, 654, 663, 664, 665, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 700, 701, 708, 712, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 734, 735, 737, 739, 741, 743, 745, 747, 749, 751, 753, 755, 759, 760, 762, 764, 765, 767, 770, 771, 773, 774, 776, 777, 779, 781, 782, 783, 788, 789, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 813, 814, 815, 816, 817, 818, 819, 820, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 848, 849, 850, 855, 856, 857, 858, 861, 864, 870, 871, 872, 873, 874, 875, 877, 878, 879, 880, 881, 882, 883, 886, 887, 888, 889, 890, 893, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 909, 910, 912, 913, 915, 917, 918, 919, 931, 932, 933, 934, 939, 943, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 957, 959, 962, 963, 965, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1011, 1012, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1064, 1066, 1067, 1069, 1070, 1071, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1088, 1092, 1093, 1094, 1095, 1122], "\u210d": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 167, 168, 170, 171, 172, 173, 175, 177, 178, 185, 188, 191, 192, 193, 194, 198, 201, 204, 207, 209, 210, 214, 217, 220, 222, 225, 231, 235, 236, 237, 238, 239, 246, 247, 249, 256, 257, 258, 259, 260, 267, 268, 273, 274, 275, 278, 279, 282, 283, 284, 286, 287, 288, 289, 290, 292, 301, 308, 309, 310, 311, 312, 313, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 381, 382, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 402, 403, 404, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 447, 448, 455, 456, 457, 458, 459, 461, 462, 463, 469, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 553, 554, 561, 562, 563, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 591, 593, 595, 597, 598, 600, 601, 602, 603, 604, 606, 607, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 625, 626, 627, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 647, 648, 653, 654, 663, 664, 665, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 700, 701, 708, 712, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 734, 735, 737, 739, 741, 743, 745, 747, 749, 751, 753, 755, 759, 760, 762, 764, 765, 767, 770, 771, 773, 774, 776, 777, 779, 781, 782, 783, 788, 789, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 813, 814, 815, 816, 817, 818, 819, 820, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 848, 849, 850, 855, 856, 857, 858, 861, 864, 870, 871, 872, 873, 874, 875, 877, 878, 879, 880, 881, 882, 883, 886, 887, 888, 889, 890, 893, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 909, 910, 912, 913, 915, 917, 918, 919, 931, 932, 933, 934, 939, 943, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 957, 959, 962, 963, 965, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1011, 1012, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1064, 1066, 1067, 1069, 1070, 1071, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1088, 1092, 1093, 1094, 1095, 1122], "\u211a": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 167, 168, 170, 171, 172, 173, 175, 177, 178, 185, 188, 191, 192, 193, 194, 198, 201, 204, 207, 209, 210, 214, 217, 220, 222, 225, 231, 235, 236, 237, 238, 239, 246, 247, 249, 256, 257, 258, 259, 260, 267, 268, 273, 274, 275, 278, 279, 282, 283, 284, 286, 287, 288, 289, 290, 292, 301, 308, 309, 310, 311, 312, 313, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 381, 382, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 402, 403, 404, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 447, 448, 455, 456, 457, 458, 459, 461, 462, 463, 469, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 553, 554, 561, 562, 563, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 591, 593, 595, 597, 598, 600, 601, 602, 603, 604, 606, 607, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 625, 626, 627, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 647, 648, 653, 654, 663, 664, 665, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 700, 701, 708, 712, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 734, 735, 737, 739, 741, 743, 745, 747, 749, 751, 753, 755, 759, 760, 762, 764, 765, 767, 770, 771, 773, 774, 776, 777, 779, 781, 782, 783, 788, 789, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 813, 814, 815, 816, 817, 818, 819, 820, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 848, 849, 850, 855, 856, 857, 858, 861, 864, 870, 871, 872, 873, 874, 875, 877, 878, 879, 880, 881, 882, 883, 886, 887, 888, 889, 890, 893, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 909, 910, 912, 913, 915, 917, 918, 919, 931, 932, 933, 934, 939, 943, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 957, 959, 962, 963, 965, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1011, 1012, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1064, 1066, 1067, 1069, 1070, 1071, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1088, 1092, 1093, 1094, 1095, 1122], "\u211c": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 167, 168, 170, 171, 172, 173, 175, 177, 178, 185, 188, 191, 192, 193, 194, 198, 201, 204, 207, 209, 210, 214, 217, 220, 222, 225, 231, 235, 236, 237, 238, 239, 246, 247, 249, 256, 257, 258, 259, 260, 267, 268, 273, 274, 275, 278, 279, 282, 283, 284, 286, 287, 288, 289, 290, 292, 301, 308, 309, 310, 311, 312, 313, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 381, 382, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 402, 403, 404, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 447, 448, 455, 456, 457, 458, 459, 461, 462, 463, 469, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 553, 554, 561, 562, 563, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 591, 593, 595, 597, 598, 600, 601, 602, 603, 604, 606, 607, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 625, 626, 627, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 647, 648, 653, 654, 663, 664, 665, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 700, 701, 708, 712, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 734, 735, 737, 739, 741, 743, 745, 747, 749, 751, 753, 755, 759, 760, 762, 764, 765, 767, 770, 771, 773, 774, 776, 777, 779, 781, 782, 783, 788, 789, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 813, 814, 815, 816, 817, 818, 819, 820, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 848, 849, 850, 855, 856, 857, 858, 861, 864, 870, 871, 872, 873, 874, 875, 877, 878, 879, 880, 881, 882, 883, 886, 887, 888, 889, 890, 893, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 909, 910, 912, 913, 915, 917, 918, 919, 931, 932, 933, 934, 939, 943, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 957, 959, 962, 963, 965, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1011, 1012, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1064, 1066, 1067, 1069, 1070, 1071, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1088, 1092, 1093, 1094, 1095, 1122], "\u211b": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 167, 168, 170, 171, 172, 173, 175, 177, 178, 185, 188, 191, 192, 193, 194, 198, 201, 204, 207, 209, 210, 214, 217, 220, 222, 225, 231, 235, 236, 237, 238, 239, 246, 247, 249, 256, 257, 258, 259, 260, 267, 268, 273, 274, 275, 278, 279, 282, 283, 284, 286, 287, 288, 289, 290, 292, 301, 308, 309, 310, 311, 312, 313, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 381, 382, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 402, 403, 404, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 447, 448, 455, 456, 457, 458, 459, 461, 462, 463, 469, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 553, 554, 561, 562, 563, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 591, 593, 595, 597, 598, 600, 601, 602, 603, 604, 606, 607, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 625, 626, 627, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 647, 648, 653, 654, 663, 664, 665, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 700, 701, 708, 712, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 734, 735, 737, 739, 741, 743, 745, 747, 749, 751, 753, 755, 759, 760, 762, 764, 765, 767, 770, 771, 773, 774, 776, 777, 779, 781, 782, 783, 788, 789, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 813, 814, 815, 816, 817, 818, 819, 820, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 848, 849, 850, 855, 856, 857, 858, 861, 864, 870, 871, 872, 873, 874, 875, 877, 878, 879, 880, 881, 882, 883, 886, 887, 888, 889, 890, 893, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 909, 910, 912, 913, 915, 917, 918, 919, 931, 932, 933, 934, 939, 943, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 957, 959, 962, 963, 965, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1011, 1012, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1064, 1066, 1067, 1069, 1070, 1071, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1088, 1092, 1093, 1094, 1095, 1122], "\u211d": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 167, 168, 170, 171, 172, 173, 175, 177, 178, 185, 188, 191, 192, 193, 194, 198, 201, 204, 207, 209, 210, 214, 217, 220, 222, 225, 231, 235, 236, 237, 238, 239, 246, 247, 249, 256, 257, 258, 259, 260, 267, 268, 273, 274, 275, 278, 279, 282, 283, 284, 286, 287, 288, 289, 290, 292, 301, 308, 309, 310, 311, 312, 313, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 381, 382, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 402, 403, 404, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 447, 448, 455, 456, 457, 458, 459, 461, 462, 463, 469, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 553, 554, 561, 562, 563, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 591, 593, 595, 597, 598, 600, 601, 602, 603, 604, 606, 607, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 625, 626, 627, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 647, 648, 653, 654, 663, 664, 665, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 700, 701, 708, 712, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 734, 735, 737, 739, 741, 743, 745, 747, 749, 751, 753, 755, 759, 760, 762, 764, 765, 767, 770, 771, 773, 774, 776, 777, 779, 781, 782, 783, 788, 789, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 813, 814, 815, 816, 817, 818, 819, 820, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 848, 849, 850, 855, 856, 857, 858, 861, 864, 870, 871, 872, 873, 874, 875, 877, 878, 879, 880, 881, 882, 883, 886, 887, 888, 889, 890, 893, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 909, 910, 912, 913, 915, 917, 918, 919, 931, 932, 933, 934, 939, 943, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 957, 959, 962, 963, 965, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1011, 1012, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1064, 1066, 1067, 1069, 1070, 1071, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1088, 1092, 1093, 1094, 1095, 1122], "\u03f5": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 167, 168, 170, 171, 172, 173, 175, 177, 178, 185, 188, 191, 192, 193, 194, 198, 201, 204, 207, 209, 210, 214, 217, 220, 222, 225, 231, 235, 236, 237, 238, 239, 246, 247, 249, 256, 257, 258, 259, 260, 267, 268, 273, 274, 275, 278, 279, 282, 283, 284, 286, 287, 288, 289, 290, 292, 301, 308, 309, 310, 311, 312, 313, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 381, 382, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 402, 403, 404, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 447, 448, 455, 456, 457, 458, 459, 461, 462, 463, 469, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 553, 554, 561, 562, 563, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 591, 593, 595, 597, 598, 600, 601, 602, 603, 604, 606, 607, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 625, 626, 627, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 647, 648, 653, 654, 663, 664, 665, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 700, 701, 708, 712, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 734, 735, 737, 739, 741, 743, 745, 747, 749, 751, 753, 755, 759, 760, 762, 764, 765, 767, 770, 771, 773, 774, 776, 777, 779, 781, 782, 783, 788, 789, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 813, 814, 815, 816, 817, 818, 819, 820, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 848, 849, 850, 855, 856, 857, 858, 861, 864, 870, 871, 872, 873, 874, 875, 877, 878, 879, 880, 881, 882, 883, 886, 887, 888, 889, 890, 893, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 909, 910, 912, 913, 915, 917, 918, 919, 931, 932, 933, 934, 939, 943, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 957, 959, 962, 963, 965, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1011, 1012, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1064, 1066, 1067, 1069, 1070, 1071, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1088, 1092, 1093, 1094, 1095, 1122], "\u03d5": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 167, 168, 170, 171, 172, 173, 175, 177, 178, 185, 188, 191, 192, 193, 194, 198, 201, 204, 207, 209, 210, 214, 217, 220, 222, 225, 231, 235, 236, 237, 238, 239, 246, 247, 249, 256, 257, 258, 259, 260, 267, 268, 273, 274, 275, 278, 279, 282, 283, 284, 286, 287, 288, 289, 290, 292, 301, 308, 309, 310, 311, 312, 313, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 381, 382, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 402, 403, 404, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 447, 448, 455, 456, 457, 458, 459, 461, 462, 463, 469, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 553, 554, 561, 562, 563, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 591, 593, 595, 597, 598, 600, 601, 602, 603, 604, 606, 607, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 625, 626, 627, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 647, 648, 653, 654, 663, 664, 665, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 700, 701, 708, 712, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 734, 735, 737, 739, 741, 743, 745, 747, 749, 751, 753, 755, 759, 760, 762, 764, 765, 767, 770, 771, 773, 774, 776, 777, 779, 781, 782, 783, 788, 789, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 813, 814, 815, 816, 817, 818, 819, 820, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 848, 849, 850, 855, 856, 857, 858, 861, 864, 870, 871, 872, 873, 874, 875, 877, 878, 879, 880, 881, 882, 883, 886, 887, 888, 889, 890, 893, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 909, 910, 912, 913, 915, 917, 918, 919, 931, 932, 933, 934, 939, 943, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 957, 959, 962, 963, 965, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1011, 1012, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1064, 1066, 1067, 1069, 1070, 1071, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1088, 1092, 1093, 1094, 1095, 1122], "\u03c5": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 167, 168, 170, 171, 172, 173, 175, 177, 178, 185, 188, 191, 192, 193, 194, 198, 201, 204, 207, 209, 210, 214, 217, 220, 222, 225, 231, 235, 236, 237, 238, 239, 246, 247, 249, 256, 257, 258, 259, 260, 267, 268, 273, 274, 275, 278, 279, 282, 283, 284, 286, 287, 288, 289, 290, 292, 301, 308, 309, 310, 311, 312, 313, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 381, 382, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 402, 403, 404, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 447, 448, 455, 456, 457, 458, 459, 461, 462, 463, 469, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 553, 554, 561, 562, 563, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 591, 593, 595, 597, 598, 600, 601, 602, 603, 604, 606, 607, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 625, 626, 627, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 647, 648, 653, 654, 663, 664, 665, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 700, 701, 708, 712, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 734, 735, 737, 739, 741, 743, 745, 747, 749, 751, 753, 755, 759, 760, 762, 764, 765, 767, 770, 771, 773, 774, 776, 777, 779, 781, 782, 783, 788, 789, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 813, 814, 815, 816, 817, 818, 819, 820, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 848, 849, 850, 855, 856, 857, 858, 861, 864, 870, 871, 872, 873, 874, 875, 877, 878, 879, 880, 881, 882, 883, 886, 887, 888, 889, 890, 893, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 909, 910, 912, 913, 915, 917, 918, 919, 931, 932, 933, 934, 939, 943, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 957, 959, 962, 963, 965, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1011, 1012, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1064, 1066, 1067, 1069, 1070, 1071, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1088, 1092, 1093, 1094, 1095, 1122], "\u03b5": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 167, 168, 170, 171, 172, 173, 175, 177, 178, 185, 188, 191, 192, 193, 194, 198, 201, 204, 207, 209, 210, 214, 217, 220, 222, 225, 231, 235, 236, 237, 238, 239, 246, 247, 249, 256, 257, 258, 259, 260, 267, 268, 273, 274, 275, 278, 279, 282, 283, 284, 286, 287, 288, 289, 290, 292, 301, 308, 309, 310, 311, 312, 313, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 381, 382, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 402, 403, 404, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 447, 448, 455, 456, 457, 458, 459, 461, 462, 463, 469, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 553, 554, 561, 562, 563, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 591, 593, 595, 597, 598, 600, 601, 602, 603, 604, 606, 607, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 625, 626, 627, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 647, 648, 653, 654, 663, 664, 665, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 700, 701, 708, 712, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 734, 735, 737, 739, 741, 743, 745, 747, 749, 751, 753, 755, 759, 760, 762, 764, 765, 767, 770, 771, 773, 774, 776, 777, 779, 781, 782, 783, 788, 789, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 813, 814, 815, 816, 817, 818, 819, 820, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 848, 849, 850, 855, 856, 857, 858, 861, 864, 870, 871, 872, 873, 874, 875, 877, 878, 879, 880, 881, 882, 883, 886, 887, 888, 889, 890, 893, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 909, 910, 912, 913, 915, 917, 918, 919, 931, 932, 933, 934, 939, 943, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 957, 959, 962, 963, 965, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1011, 1012, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1064, 1066, 1067, 1069, 1070, 1071, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1088, 1092, 1093, 1094, 1095, 1122], "\u03f0": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 167, 168, 170, 171, 172, 173, 175, 177, 178, 185, 188, 191, 192, 193, 194, 198, 201, 204, 207, 209, 210, 214, 217, 220, 222, 225, 231, 235, 236, 237, 238, 239, 246, 247, 249, 256, 257, 258, 259, 260, 267, 268, 273, 274, 275, 278, 279, 282, 283, 284, 286, 287, 288, 289, 290, 292, 301, 308, 309, 310, 311, 312, 313, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 381, 382, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 402, 403, 404, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 447, 448, 455, 456, 457, 458, 459, 461, 462, 463, 469, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 553, 554, 561, 562, 563, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 591, 593, 595, 597, 598, 600, 601, 602, 603, 604, 606, 607, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 625, 626, 627, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 647, 648, 653, 654, 663, 664, 665, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 700, 701, 708, 712, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 734, 735, 737, 739, 741, 743, 745, 747, 749, 751, 753, 755, 759, 760, 762, 764, 765, 767, 770, 771, 773, 774, 776, 777, 779, 781, 782, 783, 788, 789, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 813, 814, 815, 816, 817, 818, 819, 820, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 848, 849, 850, 855, 856, 857, 858, 861, 864, 870, 871, 872, 873, 874, 875, 877, 878, 879, 880, 881, 882, 883, 886, 887, 888, 889, 890, 893, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 909, 910, 912, 913, 915, 917, 918, 919, 931, 932, 933, 934, 939, 943, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 957, 959, 962, 963, 965, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1011, 1012, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1064, 1066, 1067, 1069, 1070, 1071, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1088, 1092, 1093, 1094, 1095, 1122], "\u03c6": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 167, 168, 170, 171, 172, 173, 175, 177, 178, 185, 188, 191, 192, 193, 194, 198, 201, 204, 207, 209, 210, 214, 217, 220, 222, 225, 231, 235, 236, 237, 238, 239, 246, 247, 249, 256, 257, 258, 259, 260, 267, 268, 273, 274, 275, 278, 279, 282, 283, 284, 286, 287, 288, 289, 290, 292, 301, 308, 309, 310, 311, 312, 313, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 381, 382, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 402, 403, 404, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 447, 448, 455, 456, 457, 458, 459, 461, 462, 463, 469, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 553, 554, 561, 562, 563, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 591, 593, 595, 597, 598, 600, 601, 602, 603, 604, 606, 607, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 625, 626, 627, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 647, 648, 653, 654, 663, 664, 665, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 700, 701, 708, 712, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 734, 735, 737, 739, 741, 743, 745, 747, 749, 751, 753, 755, 759, 760, 762, 764, 765, 767, 770, 771, 773, 774, 776, 777, 779, 781, 782, 783, 788, 789, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 813, 814, 815, 816, 817, 818, 819, 820, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 848, 849, 850, 855, 856, 857, 858, 861, 864, 870, 871, 872, 873, 874, 875, 877, 878, 879, 880, 881, 882, 883, 886, 887, 888, 889, 890, 893, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 909, 910, 912, 913, 915, 917, 918, 919, 931, 932, 933, 934, 939, 943, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 957, 959, 962, 963, 965, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1011, 1012, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1064, 1066, 1067, 1069, 1070, 1071, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1088, 1092, 1093, 1094, 1095, 1122], "\u03d6": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 167, 168, 170, 171, 172, 173, 175, 177, 178, 185, 188, 191, 192, 193, 194, 198, 201, 204, 207, 209, 210, 214, 217, 220, 222, 225, 231, 235, 236, 237, 238, 239, 246, 247, 249, 256, 257, 258, 259, 260, 267, 268, 273, 274, 275, 278, 279, 282, 283, 284, 286, 287, 288, 289, 290, 292, 301, 308, 309, 310, 311, 312, 313, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 381, 382, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 402, 403, 404, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 447, 448, 455, 456, 457, 458, 459, 461, 462, 463, 469, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 553, 554, 561, 562, 563, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 591, 593, 595, 597, 598, 600, 601, 602, 603, 604, 606, 607, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 625, 626, 627, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 647, 648, 653, 654, 663, 664, 665, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 700, 701, 708, 712, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 734, 735, 737, 739, 741, 743, 745, 747, 749, 751, 753, 755, 759, 760, 762, 764, 765, 767, 770, 771, 773, 774, 776, 777, 779, 781, 782, 783, 788, 789, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 813, 814, 815, 816, 817, 818, 819, 820, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 848, 849, 850, 855, 856, 857, 858, 861, 864, 870, 871, 872, 873, 874, 875, 877, 878, 879, 880, 881, 882, 883, 886, 887, 888, 889, 890, 893, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 909, 910, 912, 913, 915, 917, 918, 919, 931, 932, 933, 934, 939, 943, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 957, 959, 962, 963, 965, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1011, 1012, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1064, 1066, 1067, 1069, 1070, 1071, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1088, 1092, 1093, 1094, 1095, 1122], "\u03f1": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 167, 168, 170, 171, 172, 173, 175, 177, 178, 185, 188, 191, 192, 193, 194, 198, 201, 204, 207, 209, 210, 214, 217, 220, 222, 225, 231, 235, 236, 237, 238, 239, 246, 247, 249, 256, 257, 258, 259, 260, 267, 268, 273, 274, 275, 278, 279, 282, 283, 284, 286, 287, 288, 289, 290, 292, 301, 308, 309, 310, 311, 312, 313, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 381, 382, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 402, 403, 404, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 447, 448, 455, 456, 457, 458, 459, 461, 462, 463, 469, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 553, 554, 561, 562, 563, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 591, 593, 595, 597, 598, 600, 601, 602, 603, 604, 606, 607, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 625, 626, 627, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 647, 648, 653, 654, 663, 664, 665, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 700, 701, 708, 712, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 734, 735, 737, 739, 741, 743, 745, 747, 749, 751, 753, 755, 759, 760, 762, 764, 765, 767, 770, 771, 773, 774, 776, 777, 779, 781, 782, 783, 788, 789, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 813, 814, 815, 816, 817, 818, 819, 820, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 848, 849, 850, 855, 856, 857, 858, 861, 864, 870, 871, 872, 873, 874, 875, 877, 878, 879, 880, 881, 882, 883, 886, 887, 888, 889, 890, 893, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 909, 910, 912, 913, 915, 917, 918, 919, 931, 932, 933, 934, 939, 943, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 957, 959, 962, 963, 965, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1011, 1012, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1064, 1066, 1067, 1069, 1070, 1071, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1088, 1092, 1093, 1094, 1095, 1122], "\u03c2": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 167, 168, 170, 171, 172, 173, 175, 177, 178, 185, 188, 191, 192, 193, 194, 198, 201, 204, 207, 209, 210, 214, 217, 220, 222, 225, 231, 235, 236, 237, 238, 239, 246, 247, 249, 256, 257, 258, 259, 260, 267, 268, 273, 274, 275, 278, 279, 282, 283, 284, 286, 287, 288, 289, 290, 292, 301, 308, 309, 310, 311, 312, 313, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 381, 382, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 402, 403, 404, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 447, 448, 455, 456, 457, 458, 459, 461, 462, 463, 469, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 553, 554, 561, 562, 563, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 591, 593, 595, 597, 598, 600, 601, 602, 603, 604, 606, 607, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 625, 626, 627, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 647, 648, 653, 654, 663, 664, 665, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 700, 701, 708, 712, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 734, 735, 737, 739, 741, 743, 745, 747, 749, 751, 753, 755, 759, 760, 762, 764, 765, 767, 770, 771, 773, 774, 776, 777, 779, 781, 782, 783, 788, 789, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 813, 814, 815, 816, 817, 818, 819, 820, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 848, 849, 850, 855, 856, 857, 858, 861, 864, 870, 871, 872, 873, 874, 875, 877, 878, 879, 880, 881, 882, 883, 886, 887, 888, 889, 890, 893, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 909, 910, 912, 913, 915, 917, 918, 919, 931, 932, 933, 934, 939, 943, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 957, 959, 962, 963, 965, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1011, 1012, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1064, 1066, 1067, 1069, 1070, 1071, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1088, 1092, 1093, 1094, 1095, 1122], "\u03d1": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 167, 168, 170, 171, 172, 173, 175, 177, 178, 185, 188, 191, 192, 193, 194, 198, 201, 204, 207, 209, 210, 214, 217, 220, 222, 225, 231, 235, 236, 237, 238, 239, 246, 247, 249, 256, 257, 258, 259, 260, 267, 268, 273, 274, 275, 278, 279, 282, 283, 284, 286, 287, 288, 289, 290, 292, 301, 308, 309, 310, 311, 312, 313, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 381, 382, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 402, 403, 404, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 447, 448, 455, 456, 457, 458, 459, 461, 462, 463, 469, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 553, 554, 561, 562, 563, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 591, 593, 595, 597, 598, 600, 601, 602, 603, 604, 606, 607, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 625, 626, 627, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 647, 648, 653, 654, 663, 664, 665, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 700, 701, 708, 712, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 734, 735, 737, 739, 741, 743, 745, 747, 749, 751, 753, 755, 759, 760, 762, 764, 765, 767, 770, 771, 773, 774, 776, 777, 779, 781, 782, 783, 788, 789, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 813, 814, 815, 816, 817, 818, 819, 820, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 848, 849, 850, 855, 856, 857, 858, 861, 864, 870, 871, 872, 873, 874, 875, 877, 878, 879, 880, 881, 882, 883, 886, 887, 888, 889, 890, 893, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 909, 910, 912, 913, 915, 917, 918, 919, 931, 932, 933, 934, 939, 943, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 957, 959, 962, 963, 965, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1011, 1012, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1064, 1066, 1067, 1069, 1070, 1071, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1088, 1092, 1093, 1094, 1095, 1122], "\u2128": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 167, 168, 170, 171, 172, 173, 175, 177, 178, 185, 188, 191, 192, 193, 194, 198, 201, 204, 207, 209, 210, 214, 217, 220, 222, 225, 231, 235, 236, 237, 238, 239, 246, 247, 249, 256, 257, 258, 259, 260, 267, 268, 273, 274, 275, 278, 279, 282, 283, 284, 286, 287, 288, 289, 290, 292, 301, 308, 309, 310, 311, 312, 313, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 381, 382, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 402, 403, 404, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 447, 448, 455, 456, 457, 458, 459, 461, 462, 463, 469, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 553, 554, 561, 562, 563, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 591, 593, 595, 597, 598, 600, 601, 602, 603, 604, 606, 607, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 625, 626, 627, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 647, 648, 653, 654, 663, 664, 665, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 700, 701, 708, 712, 713, 715, 716, 718, 720, 721, 723, 725, 726, 728, 734, 735, 737, 739, 741, 743, 745, 747, 749, 751, 753, 755, 759, 760, 762, 764, 765, 767, 770, 771, 773, 774, 776, 777, 779, 781, 782, 783, 788, 789, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 813, 814, 815, 816, 817, 818, 819, 820, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 848, 849, 850, 855, 856, 857, 858, 861, 864, 870, 871, 872, 873, 874, 875, 877, 878, 879, 880, 881, 882, 883, 886, 887, 888, 889, 890, 893, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 909, 910, 912, 913, 915, 917, 918, 919, 931, 932, 933, 934, 939, 943, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 957, 959, 962, 963, 965, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1011, 1012, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1064, 1066, 1067, 1069, 1070, 1071, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1088, 1092, 1093, 1094, 1095, 1122], "start": [7, 40, 108, 109, 125, 127, 130, 131, 132, 133, 136, 141, 142, 146, 150, 155, 160, 167, 168, 170, 171, 172, 173, 175, 177, 178, 179, 182, 183, 185, 188, 192, 193, 198, 204, 213, 219, 220, 229, 231, 244, 247, 249, 251, 253, 256, 258, 260, 265, 268, 279, 287, 304, 318, 321, 328, 331, 332, 341, 344, 358, 381, 402, 403, 416, 424, 428, 431, 438, 504, 515, 521, 587, 598, 603, 606, 626, 678, 701, 708, 718, 757, 770, 784, 785, 789, 790, 793, 795, 796, 817, 818, 830, 839, 841, 854, 880, 881, 890, 893, 900, 901, 905, 909, 910, 913, 915, 918, 924, 928, 931, 945, 950, 957, 962, 963, 965, 966, 974, 984, 985, 991, 1001, 1017, 1024, 1025, 1043, 1062, 1067, 1075, 1076, 1080, 1083, 1092, 1100, 1112, 1115], "mittwoch": [7, 175, 177, 185], "00": [7, 133, 134, 136, 141, 146, 154, 158, 166, 167, 168, 170, 171, 172, 173, 175, 177, 179, 181, 183, 185, 188, 192, 198, 200, 206, 216, 219, 220, 247, 248, 255, 256, 258, 294, 402, 410, 424, 679, 701, 708, 784, 785, 839, 861, 862, 863, 915, 934, 943, 981, 1092], "cours": [7, 12, 38, 102, 113, 114, 127, 128, 129, 130, 131, 133, 146, 159, 160, 170, 178, 182, 188, 193, 198, 209, 217, 220, 237, 239, 247, 256, 258, 259, 273, 274, 275, 301, 319, 320, 322, 371, 372, 388, 415, 426, 432, 438, 478, 708, 732, 757, 769, 784, 785, 846, 855, 884, 891, 933, 955, 956, 978, 1010, 1042, 1051, 1055, 1071, 1072, 1086, 1112, 1115, 1127], "tectrain": [7, 10, 154, 166, 175, 177, 185, 188, 191, 192, 193, 194, 198, 210, 222, 319], "materi": [7, 11, 12, 13, 16, 22, 26, 63, 95, 104, 124, 127, 128, 131, 145, 146, 163, 166, 167, 168, 170, 172, 173, 175, 177, 178, 182, 185, 188, 191, 193, 194, 197, 198, 201, 204, 207, 209, 210, 222, 225, 228, 231, 235, 236, 238, 240, 243, 250, 253, 259, 260, 264, 270, 274, 275, 278, 279, 301, 309, 319, 411, 413, 414, 415, 416, 417, 419, 420, 422, 424, 426, 427, 428, 429, 430, 431, 433, 435, 438, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 477, 480, 486, 487, 488, 489, 491, 493, 494, 495, 496, 498, 499, 500, 501, 502, 526, 606, 686, 711, 859, 870, 895, 898, 955, 956, 958, 978, 979, 1007, 1057, 1072, 1073, 1086, 1097, 1101, 1109, 1111, 1114, 1116, 1117, 1123], "program": [7, 28, 29, 40, 57, 60, 70, 71, 72, 74, 76, 82, 83, 88, 95, 99, 108, 109, 111, 124, 126, 127, 128, 130, 131, 132, 133, 136, 138, 141, 142, 144, 146, 149, 151, 152, 154, 155, 159, 166, 167, 168, 170, 171, 172, 177, 182, 183, 188, 191, 192, 198, 200, 201, 204, 207, 210, 214, 217, 220, 221, 222, 228, 233, 237, 246, 249, 250, 253, 256, 258, 266, 267, 268, 270, 274, 286, 287, 288, 289, 290, 291, 292, 298, 300, 301, 302, 303, 304, 305, 306, 307, 312, 314, 315, 318, 320, 325, 327, 328, 331, 333, 334, 336, 337, 338, 339, 342, 344, 347, 349, 354, 367, 376, 380, 381, 383, 385, 387, 388, 395, 397, 400, 402, 403, 404, 405, 409, 410, 411, 415, 416, 420, 421, 424, 426, 432, 436, 446, 447, 448, 452, 453, 454, 469, 470, 472, 474, 475, 476, 479, 480, 482, 483, 484, 485, 490, 492, 503, 515, 521, 526, 527, 533, 534, 549, 552, 555, 571, 577, 581, 590, 591, 593, 594, 599, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 628, 635, 666, 668, 671, 676, 681, 682, 686, 691, 693, 699, 707, 709, 710, 711, 715, 726, 728, 737, 757, 771, 773, 774, 787, 789, 790, 791, 792, 793, 794, 797, 799, 800, 801, 812, 817, 820, 846, 850, 853, 854, 856, 859, 860, 861, 862, 870, 874, 877, 879, 880, 881, 882, 883, 884, 887, 888, 889, 890, 892, 896, 897, 901, 905, 908, 911, 914, 915, 916, 917, 921, 922, 924, 929, 930, 932, 939, 943, 945, 948, 949, 955, 956, 958, 964, 965, 966, 967, 978, 981, 985, 986, 989, 990, 993, 997, 998, 1000, 1007, 1008, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1026, 1027, 1028, 1029, 1030, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1058, 1060, 1061, 1062, 1065, 1067, 1068, 1070, 1071, 1072, 1074, 1078, 1086, 1087, 1089, 1091, 1092, 1096, 1099, 1108, 1109, 1110, 1111, 1112, 1114, 1115, 1117, 1118, 1119], "absolut": [7, 28, 63, 88, 97, 111, 129, 133, 138, 144, 147, 154, 164, 167, 168, 170, 172, 183, 188, 192, 200, 206, 207, 214, 216, 217, 219, 220, 223, 228, 231, 237, 240, 243, 246, 247, 250, 253, 259, 260, 264, 267, 268, 270, 275, 278, 279, 287, 288, 289, 290, 291, 292, 298, 300, 301, 304, 319, 404, 432, 446, 469, 475, 476, 479, 480, 483, 484, 485, 503, 526, 696, 699, 709, 710, 711, 755, 767, 783, 784, 785, 786, 787, 790, 791, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 817, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 837, 853, 873, 876, 882, 884, 892, 894, 908, 911, 914, 916, 933, 935, 936, 937, 938, 939, 940, 941, 942, 948, 956, 963, 964, 965, 966, 970, 978, 989, 998, 1008, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1027, 1028, 1029, 1030, 1031, 1032, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1061, 1062, 1065, 1068, 1071, 1072, 1074, 1078, 1081, 1083, 1086, 1089, 1091, 1096], "beginn": [7, 28, 30, 76, 88, 128, 129, 139, 144, 147, 158, 164, 167, 168, 170, 172, 183, 198, 201, 202, 204, 207, 214, 217, 220, 224, 231, 243, 250, 253, 259, 260, 270, 275, 278, 279, 287, 288, 289, 290, 291, 292, 300, 301, 304, 346, 654, 710, 711, 956, 963, 964, 965, 966, 970, 978, 980, 986, 989, 998, 1008, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1027, 1028, 1029, 1030, 1031, 1032, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1061, 1062, 1065, 1068, 1071, 1072, 1074, 1078, 1086, 1089, 1091, 1096], "advanc": [7, 28, 76, 88, 128, 138, 144, 147, 152, 155, 158, 168, 172, 180, 183, 188, 198, 203, 204, 214, 228, 250, 270, 277, 287, 288, 289, 290, 291, 292, 300, 301, 302, 303, 304, 318, 396, 398, 400, 405, 406, 558, 628, 666, 701, 707, 709, 710, 711, 898, 955, 956, 958, 963, 964, 965, 966, 970, 978, 980, 989, 998, 1008, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1027, 1028, 1029, 1030, 1031, 1032, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1060, 1061, 1062, 1065, 1068, 1071, 1072, 1074, 1078, 1085, 1086, 1089, 1091, 1096, 1099, 1113], "product": [7, 28, 36, 41, 76, 83, 88, 133, 144, 147, 167, 168, 170, 172, 188, 207, 214, 217, 220, 228, 231, 240, 243, 250, 253, 255, 259, 260, 264, 270, 275, 278, 279, 287, 288, 289, 290, 291, 292, 300, 301, 304, 404, 408, 424, 710, 711, 854, 863, 934, 948, 956, 963, 964, 965, 966, 970, 978, 989, 998, 1008, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1027, 1028, 1029, 1030, 1031, 1032, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1061, 1062, 1065, 1068, 1071, 1072, 1074, 1078, 1086, 1089, 1091, 1096], "html": [7, 16, 17, 22, 37, 38, 128, 137, 150, 158, 175, 185, 188, 191, 195, 198, 201, 204, 207, 223, 254, 296, 606, 713, 728, 734, 817, 839, 925, 929, 1000, 1064, 1069], "download": [7, 16, 61, 63, 104, 119, 130, 136, 138, 142, 146, 151, 154, 163, 170, 175, 183, 185, 188, 191, 192, 193, 198, 201, 204, 214, 217, 220, 222, 225, 228, 231, 240, 243, 250, 254, 261, 292, 321, 411, 414, 469, 476, 479, 480, 481, 483, 484, 485, 503, 530, 615, 617, 621, 622, 644, 645, 646, 649, 650, 651, 652, 654, 655, 656, 657, 658, 659, 660, 661, 662, 676, 678, 817, 819, 839, 841, 854, 861, 862, 863, 873, 939, 945, 979, 1012, 1024, 1033, 1043, 1044, 1046, 1057, 1059, 1061, 1087], "github": [7, 22, 40, 42, 63, 95, 104, 107, 111, 113, 115, 127, 128, 138, 142, 143, 145, 146, 149, 151, 158, 159, 160, 170, 172, 177, 178, 182, 183, 185, 192, 193, 194, 198, 200, 201, 204, 207, 209, 210, 214, 217, 220, 222, 225, 228, 231, 235, 236, 238, 239, 240, 243, 247, 250, 256, 257, 258, 260, 264, 268, 270, 274, 275, 279, 282, 300, 305, 306, 307, 308, 315, 320, 321, 474, 504, 546, 713, 716, 718, 721, 723, 726, 735, 737, 747, 749, 757, 758, 759, 760, 765, 769, 856, 861, 863, 931, 932, 933, 935, 941, 945, 947, 948, 949], "repositori": [7, 22, 75, 95, 107, 113, 118, 127, 134, 137, 145, 149, 158, 160, 167, 168, 178, 183, 185, 188, 192, 193, 194, 198, 201, 204, 209, 210, 214, 217, 220, 222, 225, 231, 239, 247, 257, 258, 260, 264, 270, 274, 275, 279, 286, 300, 301, 306, 475, 490, 526, 710, 757, 1101, 1106], "kurssprach": [7, 175, 185, 194, 210, 222], "kurs": [7, 22, 128, 145, 166, 177, 185, 194, 210, 222, 1106, 1107, 1108, 1116, 1123, 1130], "viel": [7, 22, 149, 154, 158, 164, 175, 185, 194, 200, 210, 211, 222, 241, 1109, 1110, 1116, 1124, 1125], "spezifisch": [7, 175, 185, 194, 210, 222, 1107, 1126, 1129], "werden": [7, 35, 139, 140, 145, 148, 149, 150, 158, 164, 166, 175, 176, 179, 185, 194, 195, 210, 222, 234, 845, 1106, 1107, 1108, 1109, 1110, 1111, 1116, 1118, 1119, 1122, 1123, 1125, 1126, 1128, 1129, 1130], "hier": [7, 16, 22, 62, 139, 140, 145, 148, 149, 151, 154, 158, 166, 170, 174, 175, 181, 185, 191, 194, 195, 204, 210, 213, 222, 223, 265, 319, 1106, 1109, 1116, 1122, 1123, 1125, 1126, 1128], "unterrichtet": [7, 175, 185, 194, 210, 222], "themenreihenfolg": [7, 175, 185, 194, 210, 222], "\u00fcbungen": [7, 145, 158, 166, 175, 176, 185, 194, 210, 222, 319, 1109, 1116, 1118, 1122, 1125], "herdt": [7, 124, 185, 194, 210, 222], "skriptum": [7, 175, 185, 194, 210, 222, 1122], "beispielen": [7, 145, 171, 173, 175, 185, 194, 210, 222, 319, 320, 1114, 1127], "\u00fcbernommen": [7, 175, 185, 194, 210, 222], "etwa": [7, 22, 139, 140, 149, 154, 164, 166, 175, 185, 187, 194, 210, 222, 319, 1107, 1109, 1116, 1122, 1123, 1125, 1130], "allgemein": [7, 175, 185, 194, 210, 222, 1122], "gehalten": [7, 127, 154, 166, 175, 185, 194, 210, 222, 1106, 1111, 1122], "allgemeinen": [7, 175, 179, 185, 194, 210, 222, 1125], "dadurch": [7, 175, 185, 194, 210, 222, 319, 1109, 1129], "verwirrend": [7, 175, 185, 194, 210, 222, 1122], "weswegen": [7, 175, 185, 194, 210, 222], "vielen": [7, 22, 149, 174, 185, 194, 210, 222, 319, 1116, 1118], "f\u00e4llen": [7, 22, 175, 185, 194, 210, 222], "ausnahmen": [7, 175, 185, 194, 210, 222], "gemacht": [7, 22, 139, 145, 175, 185, 194, 210, 222, 1122, 1130], "kursstruktur": [7, 185], "sieh": [7, 22, 148, 149, 150, 154, 158, 164, 175, 177, 180, 185, 194, 210, 222, 319, 1107, 1108, 1122], "jjj": [7, 128, 172, 177, 185, 207, 255, 260, 279, 310, 712, 713, 714, 718, 726], "hello": [7, 28, 61, 88, 124, 142, 164, 167, 170, 174, 175, 177, 181, 185, 187, 188, 192, 194, 196, 198, 200, 201, 204, 206, 209, 210, 211, 213, 214, 220, 221, 222, 223, 225, 226, 228, 230, 243, 244, 250, 253, 261, 263, 264, 269, 270, 287, 288, 289, 290, 291, 292, 296, 297, 301, 336, 339, 343, 354, 363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 424, 533, 536, 606, 628, 634, 637, 654, 659, 660, 661, 662, 666, 707, 709, 710, 714, 717, 719, 722, 724, 727, 734, 738, 742, 748, 754, 759, 761, 766, 769, 772, 775, 778, 784, 785, 788, 789, 821, 823, 828, 829, 836, 853, 864, 886, 910, 931, 932, 933, 943, 945, 947, 948, 949, 956, 963, 964, 965, 966, 970, 978, 982, 983, 989, 992, 994, 998, 999, 1008, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1027, 1028, 1029, 1030, 1031, 1032, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1065, 1068, 1071, 1072, 1078, 1082, 1086, 1108, 1122], "py": [7, 16, 20, 30, 38, 61, 63, 115, 127, 146, 150, 151, 154, 162, 163, 164, 167, 168, 170, 172, 182, 185, 191, 197, 200, 204, 206, 207, 210, 211, 214, 216, 217, 219, 220, 222, 223, 229, 231, 243, 249, 250, 251, 259, 260, 264, 265, 270, 278, 279, 286, 301, 410, 668, 861, 917, 919, 952, 953, 954, 955, 957, 958, 959, 962, 963, 965, 967, 968, 974, 975, 981, 982, 984, 990, 996, 997, 1001, 1007, 1009, 1010, 1011, 1012, 1016, 1017, 1019, 1020, 1022, 1024, 1029, 1033, 1035, 1037, 1039, 1040, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1057, 1058, 1063, 1066, 1074, 1079, 1080, 1085, 1092, 1093], "commandlin": [7, 28, 40, 78, 88, 97, 111, 124, 127, 149, 151, 171, 173, 183, 185, 188, 192, 198, 209, 210, 214, 220, 221, 222, 225, 228, 243, 250, 253, 259, 263, 264, 269, 270, 278, 301, 302, 303, 304, 305, 319, 376, 380, 383, 387, 396, 400, 405, 406, 409, 411, 421, 432, 446, 469, 473, 475, 476, 479, 480, 483, 484, 485, 503, 526, 628, 666, 699, 707, 709, 710, 726, 757, 780, 784, 785, 786, 787, 790, 791, 797, 798, 799, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 818, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 837, 847, 853, 854, 862, 876, 882, 884, 892, 894, 908, 910, 911, 914, 916, 930, 931, 933, 935, 936, 937, 938, 939, 940, 941, 942, 949, 978, 1008, 1011, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1021, 1022, 1024, 1026, 1027, 1028, 1029, 1030, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1108, 1116, 1118, 1119, 1123, 1124, 1125], "swap": [7, 28, 133, 169, 175, 185, 187, 194, 206, 209, 210, 222, 227, 228, 237, 246, 247, 267, 268, 376, 380, 383, 387, 396, 400, 405, 406, 504, 628, 666, 707, 709, 710, 743, 787, 798, 799, 853, 985, 1014, 1016, 1017, 1018, 1019, 1021, 1053, 1122, 1126], "exercis": [7, 28, 76, 91, 95, 100, 102, 104, 111, 128, 150, 158, 163, 170, 171, 175, 177, 182, 185, 188, 194, 198, 201, 204, 205, 207, 210, 214, 217, 220, 222, 225, 227, 228, 237, 239, 246, 250, 252, 253, 267, 268, 272, 286, 287, 288, 289, 290, 292, 300, 303, 306, 314, 315, 332, 339, 354, 363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 425, 433, 474, 493, 494, 495, 496, 498, 499, 500, 506, 526, 593, 594, 608, 628, 666, 694, 707, 709, 710, 711, 718, 780, 784, 785, 787, 791, 798, 808, 810, 812, 837, 847, 853, 869, 892, 894, 903, 911, 930, 937, 978, 979, 1013, 1042, 1053, 1054, 1092, 1112, 1115, 1117, 1122, 1127], "greet": [7, 28, 164, 175, 185, 188, 194, 200, 201, 210, 211, 213, 219, 220, 222, 225, 228, 243, 244, 297, 420, 710, 932, 933, 939, 949, 1014, 1016, 1018, 1021, 1053, 1122], "depend": [7, 12, 27, 28, 61, 76, 111, 124, 127, 128, 131, 132, 138, 142, 161, 163, 175, 185, 188, 193, 194, 200, 201, 206, 207, 210, 216, 219, 220, 222, 225, 228, 243, 260, 268, 274, 279, 301, 316, 324, 340, 342, 350, 353, 369, 386, 398, 404, 408, 412, 416, 419, 423, 426, 433, 439, 474, 481, 511, 513, 521, 601, 627, 675, 698, 708, 710, 716, 769, 780, 787, 791, 798, 801, 812, 837, 847, 854, 862, 880, 932, 943, 947, 949, 956, 978, 979, 981, 1014, 1018, 1027, 1053, 1065, 1086, 1087, 1117, 1119, 1122], "time": [7, 28, 34, 36, 41, 51, 61, 71, 74, 83, 87, 96, 108, 109, 111, 121, 130, 131, 132, 133, 135, 136, 138, 151, 152, 155, 163, 167, 169, 170, 171, 175, 181, 183, 185, 188, 190, 192, 193, 194, 200, 201, 203, 206, 207, 210, 211, 219, 220, 222, 225, 226, 228, 229, 243, 244, 247, 250, 251, 253, 256, 257, 259, 260, 261, 265, 268, 278, 279, 287, 308, 319, 336, 344, 358, 364, 367, 390, 392, 397, 398, 401, 402, 403, 404, 408, 413, 424, 426, 427, 430, 436, 481, 515, 528, 535, 537, 578, 579, 633, 640, 654, 668, 676, 678, 689, 696, 700, 708, 710, 728, 730, 734, 735, 737, 749, 755, 757, 759, 772, 775, 778, 782, 788, 789, 790, 796, 797, 801, 817, 848, 853, 854, 861, 862, 863, 873, 883, 889, 890, 891, 895, 898, 899, 901, 904, 907, 913, 915, 916, 917, 918, 919, 924, 946, 947, 953, 957, 963, 966, 967, 978, 979, 980, 983, 990, 993, 996, 997, 1014, 1016, 1018, 1021, 1053, 1059, 1071, 1076, 1087, 1117, 1122, 1128], "dai": [7, 11, 28, 132, 133, 135, 141, 144, 150, 151, 155, 169, 175, 185, 188, 194, 196, 205, 210, 219, 220, 222, 225, 228, 243, 251, 255, 307, 309, 310, 319, 409, 414, 415, 426, 447, 710, 774, 813, 878, 915, 956, 978, 985, 994, 1014, 1016, 1018, 1021, 1053, 1054, 1061, 1086, 1113, 1114, 1115, 1117, 1122, 1127], "hen": [7, 185], "vehikelkauf": [7, 185], "datentypen": [7, 154, 158, 175, 176, 182, 185, 216, 234, 302, 1109, 1122, 1129], "\u00fcbersicht": [7, 175, 185, 188, 198, 201, 204], "git": [7, 12, 22, 59, 63, 70, 71, 72, 76, 111, 114, 118, 123, 135, 137, 145, 158, 159, 160, 163, 180, 182, 183, 185, 207, 209, 220, 231, 236, 238, 256, 257, 258, 307, 308, 314, 315, 411, 473, 478, 546, 710, 732, 757, 758, 817, 856, 861, 945, 946, 1010, 1101, 1106], "scm": [7, 59, 134, 158, 185, 730], "com": [7, 12, 19, 22, 35, 40, 42, 48, 83, 104, 111, 113, 115, 127, 136, 137, 138, 142, 146, 158, 159, 160, 161, 167, 168, 171, 172, 180, 185, 187, 193, 207, 209, 217, 219, 231, 236, 238, 244, 247, 250, 251, 256, 257, 258, 260, 264, 270, 274, 275, 279, 300, 301, 306, 312, 321, 470, 478, 504, 546, 566, 567, 568, 569, 570, 572, 573, 574, 575, 578, 587, 606, 688, 757, 758, 817, 856, 861, 864, 872, 873, 945, 1010, 1071, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1085], "pep": [7, 127, 175, 185, 257, 259, 260, 278, 279], "The": [7, 12, 16, 28, 29, 38, 47, 51, 55, 57, 60, 61, 63, 76, 82, 88, 97, 104, 105, 106, 107, 108, 109, 111, 114, 124, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 143, 146, 147, 148, 151, 152, 154, 155, 159, 160, 161, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 182, 183, 185, 188, 191, 194, 198, 199, 200, 201, 204, 205, 206, 209, 210, 213, 214, 216, 217, 219, 222, 223, 225, 228, 230, 233, 235, 236, 237, 238, 240, 243, 246, 249, 250, 253, 256, 258, 260, 263, 264, 266, 267, 269, 270, 279, 287, 288, 289, 290, 291, 292, 298, 301, 302, 303, 304, 306, 307, 318, 319, 320, 323, 325, 333, 339, 347, 349, 351, 352, 353, 354, 359, 363, 367, 370, 376, 380, 383, 386, 387, 390, 396, 398, 400, 405, 409, 411, 413, 426, 427, 428, 431, 432, 437, 446, 447, 448, 450, 452, 454, 469, 470, 473, 475, 476, 477, 478, 479, 482, 483, 484, 485, 487, 490, 492, 503, 526, 527, 529, 533, 534, 536, 545, 546, 547, 548, 549, 552, 555, 563, 571, 577, 581, 590, 593, 594, 599, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 627, 628, 631, 635, 637, 647, 666, 676, 678, 682, 691, 698, 699, 704, 707, 708, 709, 710, 711, 718, 720, 730, 732, 735, 751, 757, 759, 762, 780, 782, 784, 785, 786, 787, 790, 791, 794, 795, 798, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 814, 816, 819, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 832, 833, 835, 847, 853, 857, 861, 862, 863, 876, 878, 882, 884, 887, 888, 889, 890, 892, 894, 897, 901, 902, 904, 905, 908, 911, 914, 915, 916, 925, 928, 929, 932, 935, 936, 937, 938, 939, 940, 941, 942, 945, 946, 947, 948, 949, 950, 954, 956, 957, 960, 961, 964, 965, 966, 968, 969, 970, 977, 979, 981, 983, 984, 991, 995, 998, 1002, 1003, 1005, 1006, 1007, 1008, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1061, 1062, 1065, 1067, 1068, 1071, 1072, 1074, 1078, 1080, 1086, 1089, 1092, 1094, 1096, 1099, 1109, 1112, 1113, 1115, 1122], "zen": [7, 134, 175, 185, 213, 224, 257, 643], "corei": [7, 152, 163, 166, 167, 170, 172, 175, 177, 183, 185, 188, 191, 198, 201, 204, 214, 217, 228, 231, 240, 264, 270, 301, 306, 1055, 1076, 1077, 1079, 1080, 1081, 1082, 1084, 1095], "schaefer": [7, 172, 175, 177, 183, 185], "youtub": [7, 19, 138, 152, 163, 166, 168, 170, 172, 175, 177, 185, 192, 259, 260, 278, 279, 287], "channel": [7, 136, 152, 175, 185, 854, 862, 924], "trainer": [7, 11, 22, 23, 57, 60, 138, 157, 158, 163, 175, 185, 236, 238, 256, 413, 415, 478, 530, 678, 862, 956, 963, 978, 979, 1054, 1072, 1084, 1086, 1092, 1112, 1117], "hacker": [7, 175, 185, 1117], "schier": [7, 175, 185], "anzahl": [7, 175, 185], "sehr": [7, 22, 35, 139, 140, 154, 158, 164, 166, 174, 175, 179, 185, 216, 319, 1107, 1109, 1116, 1119, 1122, 1123, 1125, 1130], "guten": [7, 154, 164, 166, 175, 185, 219, 223, 319, 1111], "tutori": [7, 138, 152, 163, 166, 171, 175, 183, 185, 191, 192, 194, 201, 204, 214, 217, 240, 270, 287, 301, 306, 817, 863, 1007, 1009, 1065, 1076, 1077, 1079, 1080, 1081, 1082, 1084, 1095], "stil": [7, 175, 185], "repertoir": [7, 27, 146, 175, 185, 432], "hat": [7, 22, 35, 134, 139, 140, 148, 149, 150, 151, 154, 158, 164, 166, 174, 175, 179, 181, 185, 196, 216, 271, 294, 301, 319, 981, 1106, 1109, 1111, 1116, 1123, 1124, 1125, 1128, 1129, 1130], "besser": [7, 22, 139, 150, 174, 175, 185, 195, 1122], "al": [7, 22, 30, 95, 139, 140, 145, 148, 149, 150, 154, 156, 158, 166, 175, 176, 183, 185, 187, 195, 213, 214, 216, 224, 228, 270, 302, 319, 536, 685, 782, 818, 839, 844, 845, 877, 1055, 1106, 1109, 1111, 1116, 1122, 1123, 1124, 1125, 1128], "ander": [7, 154, 164, 175, 185, 195, 203, 216, 296, 301, 306, 310, 319, 783, 1107, 1108, 1111, 1116, 1119, 1124, 1128, 1129], "auswahl": [7, 175, 185], "einleitung": [8, 186], "datatyp": [8, 28, 88, 124, 163, 167, 170, 175, 176, 177, 180, 182, 186, 188, 189, 194, 198, 199, 201, 202, 204, 205, 207, 208, 209, 210, 212, 214, 215, 220, 221, 222, 224, 225, 227, 230, 240, 242, 245, 252, 260, 262, 266, 272, 279, 287, 288, 289, 290, 291, 292, 301, 306, 340, 347, 532, 561, 629, 710, 924, 956, 961, 963, 964, 965, 966, 970, 978, 989, 998, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1065, 1068, 1071, 1072, 1078, 1086, 1122], "number": [8, 23, 26, 28, 34, 51, 55, 57, 60, 61, 66, 76, 78, 80, 82, 83, 108, 109, 121, 124, 130, 132, 133, 136, 138, 141, 142, 146, 149, 151, 154, 160, 163, 167, 170, 173, 174, 175, 177, 182, 183, 186, 188, 189, 191, 194, 198, 200, 201, 203, 204, 206, 207, 210, 212, 213, 214, 216, 219, 220, 222, 224, 225, 227, 228, 229, 231, 236, 238, 240, 243, 244, 250, 251, 256, 257, 258, 259, 260, 261, 263, 264, 265, 269, 270, 273, 278, 279, 287, 292, 301, 308, 319, 324, 326, 328, 330, 332, 333, 334, 340, 344, 346, 347, 358, 369, 385, 389, 394, 398, 402, 408, 410, 420, 438, 439, 447, 473, 477, 481, 485, 486, 497, 504, 531, 551, 559, 562, 569, 585, 610, 619, 622, 631, 643, 669, 676, 678, 708, 710, 716, 718, 725, 728, 737, 739, 751, 753, 759, 767, 771, 782, 790, 797, 823, 842, 844, 846, 848, 850, 862, 873, 874, 877, 881, 882, 883, 888, 889, 890, 891, 910, 915, 916, 924, 925, 929, 931, 934, 954, 955, 957, 959, 960, 961, 971, 983, 984, 985, 990, 991, 1001, 1002, 1003, 1005, 1006, 1014, 1017, 1018, 1021, 1024, 1025, 1027, 1028, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1049, 1053, 1054, 1055, 1058, 1066, 1084, 1085, 1087, 1092, 1105, 1114, 1117, 1122], "integ": [8, 36, 73, 74, 86, 149, 151, 153, 168, 169, 170, 172, 176, 180, 186, 189, 193, 200, 203, 204, 206, 209, 212, 215, 216, 217, 219, 224, 227, 233, 245, 252, 265, 272, 301, 324, 325, 330, 340, 343, 345, 346, 347, 358, 369, 371, 373, 374, 385, 386, 390, 396, 400, 405, 406, 447, 448, 451, 470, 504, 532, 558, 561, 609, 623, 627, 628, 630, 666, 669, 695, 707, 709, 710, 716, 891, 901, 902, 903, 910, 950, 963, 966, 994, 1000, 1006, 1032, 1063, 1079, 1081, 1109, 1113, 1128], "string": [8, 28, 40, 48, 56, 88, 95, 104, 127, 128, 133, 158, 167, 168, 169, 170, 172, 175, 176, 179, 182, 186, 188, 189, 191, 192, 194, 198, 199, 201, 202, 204, 205, 207, 208, 209, 210, 212, 214, 215, 218, 220, 221, 222, 224, 225, 227, 230, 233, 235, 236, 238, 240, 242, 243, 245, 249, 250, 252, 253, 255, 263, 264, 266, 269, 270, 272, 278, 286, 287, 288, 289, 290, 291, 292, 297, 301, 306, 312, 325, 328, 332, 339, 348, 354, 363, 369, 370, 376, 380, 383, 387, 392, 396, 400, 405, 406, 410, 418, 429, 433, 435, 450, 452, 453, 454, 457, 459, 462, 463, 464, 466, 467, 468, 470, 481, 482, 486, 491, 502, 504, 512, 518, 521, 527, 529, 532, 533, 536, 551, 553, 570, 573, 574, 575, 579, 582, 583, 584, 585, 586, 587, 590, 594, 605, 607, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 628, 629, 630, 632, 634, 635, 639, 654, 658, 660, 661, 662, 663, 666, 668, 670, 671, 675, 685, 686, 687, 688, 690, 707, 708, 709, 710, 789, 880, 891, 895, 898, 902, 910, 915, 924, 928, 955, 956, 959, 967, 976, 978, 983, 991, 1005, 1012, 1013, 1014, 1019, 1024, 1027, 1028, 1029, 1032, 1035, 1038, 1039, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1069, 1070, 1071, 1072, 1074, 1077, 1109, 1122], "compound": [8, 28, 88, 124, 167, 170, 175, 176, 177, 186, 188, 194, 198, 199, 201, 202, 204, 205, 207, 208, 210, 212, 214, 215, 220, 221, 222, 224, 225, 227, 228, 230, 242, 243, 250, 253, 260, 262, 263, 264, 266, 269, 270, 272, 278, 279, 287, 288, 289, 290, 291, 292, 301, 324, 355, 374, 710, 956, 963, 964, 965, 966, 970, 978, 1011, 1012, 1013, 1014, 1022, 1023, 1024, 1027, 1028, 1029, 1030, 1031, 1032, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1065, 1068, 1071, 1072, 1078, 1086, 1122], "list": [8, 26, 28, 35, 61, 88, 97, 111, 115, 124, 127, 128, 131, 138, 142, 153, 158, 160, 163, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 179, 182, 183, 186, 188, 189, 191, 194, 198, 199, 201, 202, 204, 205, 207, 208, 209, 210, 212, 214, 215, 216, 221, 222, 224, 225, 227, 228, 230, 232, 236, 237, 240, 242, 243, 245, 246, 247, 250, 252, 253, 256, 257, 258, 262, 263, 264, 266, 267, 268, 269, 270, 272, 278, 286, 293, 296, 298, 301, 305, 306, 307, 319, 377, 383, 387, 388, 396, 400, 402, 404, 405, 406, 410, 411, 414, 423, 430, 432, 433, 473, 475, 477, 481, 518, 520, 522, 526, 530, 531, 536, 561, 577, 590, 594, 613, 623, 628, 631, 666, 674, 680, 685, 698, 699, 707, 708, 709, 710, 711, 719, 723, 724, 727, 734, 735, 738, 748, 759, 761, 765, 766, 772, 775, 778, 783, 784, 785, 786, 787, 790, 791, 797, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 821, 824, 825, 828, 829, 831, 832, 833, 834, 835, 837, 845, 853, 862, 882, 884, 886, 892, 894, 902, 904, 908, 911, 914, 916, 931, 933, 948, 952, 955, 956, 959, 960, 961, 974, 976, 978, 979, 985, 986, 991, 992, 993, 994, 997, 1003, 1005, 1006, 1007, 1012, 1014, 1024, 1027, 1028, 1029, 1030, 1034, 1035, 1036, 1037, 1038, 1039, 1045, 1047, 1050, 1052, 1053, 1054, 1055, 1060, 1066, 1076, 1079, 1083, 1094, 1099, 1106, 1109, 1122, 1123], "arrai": [8, 95, 106, 111, 154, 175, 176, 181, 186, 188, 192, 193, 195, 201, 209, 214, 219, 228, 231, 235, 236, 256, 264, 270, 324, 333, 339, 343, 354, 363, 370, 380, 383, 387, 389, 391, 392, 395, 396, 400, 405, 406, 480, 486, 510, 518, 521, 559, 560, 562, 564, 566, 569, 570, 575, 579, 591, 611, 618, 619, 620, 621, 622, 623, 626, 628, 666, 674, 689, 707, 709, 710, 728, 789, 794, 910, 987, 991, 1003, 1055, 1058, 1060, 1087, 1122], "javascript": [8, 22, 129, 164, 174, 186, 195, 219, 224, 950, 996], "std": [8, 40, 48, 56, 104, 106, 107, 108, 109, 111, 142, 158, 159, 186, 234, 247, 256, 258, 412, 413, 418, 426, 429, 431, 433, 435, 440, 447, 450, 452, 453, 454, 457, 458, 459, 462, 463, 464, 465, 466, 467, 468, 469, 470, 473, 475, 477, 480, 481, 482, 485, 487, 488, 489, 490, 501, 504, 512, 522, 526, 529, 530, 532, 537, 538, 539, 543, 551, 553, 557, 558, 559, 560, 561, 566, 567, 568, 569, 570, 572, 573, 574, 578, 579, 581, 584, 585, 586, 587, 590, 591, 594, 595, 597, 598, 601, 603, 604, 605, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 623, 628, 630, 633, 634, 635, 636, 637, 639, 640, 641, 643, 644, 645, 646, 648, 649, 650, 651, 652, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 666, 668, 670, 671, 673, 678, 681, 684, 688, 691, 693, 699, 703, 704, 706, 707, 709, 710, 861, 895, 898, 902, 910, 912, 924, 928, 1060, 1099, 1104, 1112], "vector": [8, 12, 104, 106, 108, 109, 111, 158, 186, 192, 209, 235, 236, 249, 255, 256, 258, 431, 433, 457, 458, 469, 475, 477, 487, 488, 489, 490, 501, 520, 522, 526, 530, 532, 537, 542, 566, 568, 569, 570, 572, 575, 577, 590, 594, 608, 610, 611, 618, 619, 620, 621, 623, 629, 630, 634, 639, 640, 641, 648, 649, 650, 651, 652, 654, 674, 675, 678, 704, 706, 710, 928, 984, 1062, 1082, 1104], "dictionari": [8, 28, 61, 88, 153, 163, 167, 168, 169, 170, 172, 175, 176, 177, 180, 182, 186, 188, 189, 194, 198, 199, 201, 202, 204, 205, 207, 208, 210, 212, 214, 215, 218, 221, 222, 224, 225, 227, 228, 230, 233, 240, 242, 243, 245, 250, 252, 253, 257, 259, 260, 262, 263, 264, 266, 269, 270, 272, 275, 278, 279, 301, 306, 309, 675, 710, 956, 959, 963, 964, 965, 966, 969, 970, 974, 978, 1012, 1014, 1022, 1027, 1032, 1033, 1038, 1041, 1042, 1043, 1045, 1047, 1048, 1053, 1055, 1065, 1066, 1072, 1076, 1083, 1086, 1122], "valu": [8, 56, 82, 106, 111, 131, 133, 135, 146, 148, 150, 151, 152, 164, 168, 170, 172, 174, 179, 181, 186, 187, 188, 190, 191, 192, 193, 195, 196, 198, 200, 201, 203, 204, 206, 207, 209, 211, 213, 214, 216, 219, 223, 226, 228, 229, 240, 241, 244, 247, 249, 251, 261, 264, 265, 270, 271, 287, 295, 301, 323, 328, 330, 332, 333, 343, 346, 347, 348, 356, 358, 359, 367, 369, 371, 372, 377, 388, 392, 394, 396, 400, 405, 406, 410, 413, 418, 420, 423, 428, 431, 433, 447, 448, 450, 453, 457, 459, 462, 464, 465, 467, 477, 481, 483, 484, 485, 491, 504, 521, 530, 531, 532, 535, 541, 544, 582, 584, 586, 587, 628, 630, 631, 637, 639, 648, 654, 657, 660, 661, 662, 666, 675, 686, 700, 704, 707, 709, 710, 713, 716, 735, 737, 739, 741, 757, 767, 789, 802, 853, 862, 883, 891, 893, 894, 896, 897, 898, 901, 904, 910, 913, 924, 925, 928, 929, 948, 950, 952, 955, 959, 963, 965, 967, 974, 985, 986, 987, 995, 997, 1000, 1002, 1003, 1007, 1012, 1015, 1020, 1022, 1025, 1032, 1034, 1055, 1058, 1060, 1066, 1069, 1070, 1076, 1077, 1080, 1081, 1082, 1085, 1099], "map": [8, 30, 32, 40, 57, 60, 104, 106, 107, 133, 140, 158, 164, 178, 180, 182, 186, 188, 189, 191, 192, 195, 203, 204, 206, 221, 235, 236, 238, 244, 256, 258, 265, 282, 301, 404, 429, 433, 462, 466, 467, 468, 475, 481, 490, 520, 522, 526, 581, 584, 585, 586, 587, 590, 594, 623, 626, 630, 634, 640, 666, 685, 686, 687, 689, 709, 710, 741, 753, 915, 924, 925, 973, 977, 986, 987, 1006, 1062, 1085, 1116, 1126], "set": [8, 13, 20, 28, 31, 57, 60, 63, 76, 83, 88, 106, 111, 113, 131, 132, 133, 134, 135, 136, 137, 138, 142, 146, 147, 148, 151, 152, 163, 164, 167, 168, 170, 171, 172, 175, 176, 180, 181, 182, 186, 188, 189, 192, 194, 198, 199, 201, 202, 204, 205, 207, 208, 210, 212, 214, 215, 216, 221, 222, 224, 225, 227, 228, 230, 236, 238, 240, 242, 243, 245, 247, 249, 250, 252, 253, 256, 257, 258, 260, 262, 263, 264, 266, 269, 270, 272, 275, 278, 279, 301, 306, 308, 319, 321, 336, 342, 359, 364, 365, 374, 377, 389, 390, 398, 404, 412, 413, 414, 416, 418, 420, 421, 423, 428, 431, 433, 448, 453, 462, 463, 467, 476, 477, 478, 479, 480, 481, 501, 530, 531, 545, 546, 547, 548, 561, 630, 639, 654, 684, 685, 700, 708, 710, 728, 741, 743, 753, 757, 762, 767, 789, 796, 802, 818, 854, 856, 861, 862, 863, 870, 875, 877, 883, 891, 895, 899, 904, 912, 913, 916, 917, 928, 930, 931, 932, 943, 946, 952, 955, 956, 959, 968, 969, 975, 978, 979, 982, 986, 991, 1010, 1032, 1043, 1050, 1051, 1053, 1055, 1057, 1060, 1061, 1062, 1067, 1071, 1086, 1087, 1099, 1101, 1104, 1115, 1122], "mathematisch": [8, 186, 244], "mengen": [8, 175, 176, 186, 1122], "while": [8, 12, 28, 51, 52, 61, 88, 124, 135, 137, 138, 146, 152, 163, 167, 168, 170, 171, 172, 173, 175, 176, 177, 179, 181, 182, 183, 186, 187, 188, 190, 191, 194, 195, 196, 198, 200, 201, 204, 205, 206, 209, 210, 212, 214, 215, 217, 218, 220, 221, 222, 223, 225, 227, 228, 230, 240, 243, 244, 250, 252, 253, 257, 259, 263, 264, 265, 269, 270, 271, 278, 287, 288, 289, 290, 291, 292, 293, 301, 304, 306, 324, 326, 330, 332, 334, 341, 346, 348, 362, 363, 369, 370, 374, 376, 380, 383, 384, 387, 389, 391, 396, 398, 400, 405, 406, 416, 428, 433, 447, 454, 473, 521, 557, 561, 562, 565, 567, 569, 572, 587, 610, 616, 626, 628, 639, 654, 655, 656, 662, 666, 687, 698, 700, 704, 707, 709, 710, 734, 737, 745, 747, 757, 759, 765, 766, 772, 775, 778, 790, 794, 801, 853, 854, 861, 862, 874, 879, 880, 881, 882, 889, 898, 904, 909, 910, 913, 915, 921, 924, 928, 943, 948, 956, 957, 958, 959, 963, 966, 978, 979, 983, 988, 993, 1005, 1011, 1012, 1013, 1014, 1018, 1024, 1026, 1027, 1028, 1030, 1034, 1035, 1036, 1037, 1038, 1039, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1061, 1062, 1065, 1068, 1072, 1086, 1109, 1113, 1115, 1117, 1122], "function": [8, 20, 28, 36, 48, 57, 60, 61, 76, 78, 80, 88, 95, 108, 109, 111, 124, 128, 131, 133, 142, 150, 163, 164, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 179, 182, 183, 186, 188, 189, 191, 192, 194, 198, 199, 201, 202, 204, 205, 206, 207, 209, 210, 212, 214, 215, 216, 217, 220, 221, 222, 224, 225, 226, 230, 233, 234, 241, 243, 245, 247, 249, 250, 252, 253, 256, 258, 259, 260, 261, 263, 264, 266, 269, 270, 271, 279, 286, 296, 297, 303, 304, 306, 319, 323, 324, 330, 333, 337, 338, 339, 344, 349, 353, 354, 362, 363, 364, 365, 367, 369, 374, 376, 377, 380, 381, 382, 383, 385, 387, 388, 389, 391, 396, 398, 400, 402, 405, 406, 409, 417, 423, 431, 436, 448, 470, 474, 475, 481, 487, 488, 489, 490, 492, 501, 515, 521, 526, 530, 533, 536, 538, 539, 540, 541, 547, 552, 555, 557, 571, 577, 581, 590, 593, 594, 601, 604, 607, 608, 609, 611, 612, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 628, 630, 631, 634, 635, 643, 646, 652, 654, 663, 664, 665, 666, 668, 670, 671, 676, 682, 686, 688, 689, 699, 707, 708, 709, 710, 721, 724, 727, 728, 734, 738, 741, 745, 748, 751, 757, 759, 761, 766, 772, 773, 775, 776, 777, 778, 787, 790, 791, 853, 861, 874, 876, 882, 883, 884, 891, 892, 894, 899, 900, 901, 907, 908, 910, 911, 914, 916, 929, 931, 939, 949, 956, 959, 960, 961, 962, 970, 978, 980, 983, 984, 988, 990, 1011, 1012, 1013, 1014, 1017, 1020, 1021, 1024, 1025, 1026, 1027, 1032, 1035, 1036, 1038, 1039, 1040, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1060, 1065, 1068, 1072, 1074, 1085, 1088, 1092, 1104, 1112, 1113, 1114, 1122], "basic": [9, 27, 28, 70, 71, 72, 75, 76, 81, 95, 99, 101, 104, 108, 109, 111, 127, 128, 131, 133, 138, 141, 146, 147, 152, 155, 158, 167, 180, 193, 198, 209, 217, 219, 222, 223, 247, 249, 256, 257, 258, 266, 274, 275, 282, 300, 301, 302, 303, 304, 306, 308, 312, 318, 320, 370, 376, 380, 383, 387, 396, 398, 400, 402, 403, 405, 406, 413, 415, 416, 423, 430, 432, 433, 446, 469, 475, 476, 479, 480, 483, 484, 485, 490, 492, 503, 504, 520, 521, 526, 552, 560, 565, 577, 581, 589, 590, 593, 594, 598, 599, 601, 604, 611, 618, 619, 620, 621, 622, 623, 628, 631, 632, 634, 637, 639, 666, 683, 699, 705, 707, 709, 710, 714, 717, 719, 724, 727, 734, 738, 748, 757, 759, 761, 766, 772, 775, 777, 778, 780, 784, 785, 791, 793, 798, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 837, 847, 853, 859, 860, 865, 866, 867, 868, 869, 879, 880, 881, 882, 884, 889, 892, 894, 902, 908, 911, 914, 916, 924, 927, 928, 932, 933, 935, 936, 937, 938, 939, 940, 941, 942, 943, 948, 986, 1014, 1041, 1042, 1053, 1054, 1066, 1072, 1078, 1079, 1081, 1097, 1101, 1113, 1114, 1127], "xx": [9, 200, 231, 265, 271], "yy": 9, "kur": [10, 22, 149, 151, 154, 166, 319, 1107, 1108, 1109, 1110, 1111, 1116, 1118, 1119, 1125, 1126, 1128], "fand": [10, 166, 319], "onlin": [10, 22, 136, 143, 145, 146, 158, 163, 166, 319], "team": [10, 138, 143, 146, 147, 158, 166, 167, 168, 183, 192, 217, 259, 319, 796, 802, 809, 811, 957, 1054, 1106, 1114], "statt": [10, 22, 166, 319, 1123, 1124, 1130], "wurd": [10, 140, 154, 158, 164, 166, 175, 301, 306, 319, 1111, 1122, 1123, 1129], "\u00fcber": [10, 22, 139, 140, 145, 149, 150, 154, 158, 166, 175, 176, 180, 189, 194, 220, 302, 319, 1106, 1116, 1122, 1123, 1128, 1129], "meinen": [10, 22, 166, 194, 210, 222, 319], "partner": [10, 22, 166, 319, 1106], "gebucht": [10, 140, 154, 166, 319], "mehr": [10, 22, 139, 148, 150, 174, 180, 200, 319, 1106, 1107, 1109, 1111, 1116, 1123, 1124, 1125, 1130], "durat": [11, 26, 136, 146, 381, 415, 481, 696, 700, 701, 956, 978, 1054, 1086, 1114, 1115, 1117, 1127], "each": [11, 38, 61, 74, 104, 108, 109, 131, 132, 133, 146, 152, 170, 171, 183, 200, 203, 206, 216, 219, 223, 256, 258, 265, 286, 292, 298, 301, 306, 374, 399, 402, 404, 428, 436, 470, 478, 480, 540, 626, 701, 708, 745, 753, 757, 784, 790, 811, 815, 817, 861, 862, 863, 901, 905, 913, 947, 959, 962, 967, 973, 1033, 1054, 1060, 1062, 1066, 1067, 1082, 1087, 1117, 1127], "about": [11, 22, 28, 29, 37, 40, 41, 42, 43, 44, 47, 61, 63, 66, 73, 78, 81, 82, 88, 95, 111, 119, 124, 125, 127, 131, 132, 133, 135, 138, 146, 155, 159, 160, 163, 167, 168, 169, 170, 171, 172, 175, 182, 183, 188, 191, 192, 193, 194, 198, 200, 201, 204, 207, 208, 209, 210, 212, 214, 216, 217, 219, 220, 222, 224, 225, 228, 237, 240, 242, 243, 245, 246, 247, 253, 257, 258, 263, 264, 267, 269, 270, 272, 278, 282, 287, 288, 289, 290, 291, 292, 301, 303, 306, 312, 342, 347, 356, 358, 386, 389, 390, 392, 398, 402, 404, 408, 422, 428, 521, 530, 531, 554, 561, 627, 636, 640, 641, 671, 675, 680, 689, 690, 708, 710, 726, 728, 757, 767, 776, 784, 785, 803, 820, 854, 861, 862, 863, 874, 878, 884, 899, 916, 924, 950, 956, 957, 959, 966, 967, 974, 978, 986, 997, 1005, 1012, 1013, 1014, 1024, 1027, 1035, 1036, 1038, 1039, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1062, 1071, 1072, 1073, 1074, 1078, 1087, 1092, 1101, 1114, 1115, 1122, 1127], "book": [11, 28, 30, 127, 131, 136, 146, 147, 158, 167, 192, 214, 250, 259, 260, 279, 409, 415, 817, 956, 978, 1054, 1072, 1086, 1113, 1115, 1117, 1127], "separ": [11, 36, 76, 101, 102, 111, 131, 158, 160, 170, 190, 203, 209, 219, 223, 226, 229, 244, 247, 250, 251, 253, 261, 265, 273, 331, 369, 390, 410, 413, 420, 432, 436, 446, 469, 475, 476, 479, 480, 483, 484, 485, 503, 504, 521, 526, 551, 672, 700, 708, 710, 725, 726, 759, 793, 797, 802, 848, 850, 853, 863, 899, 915, 931, 933, 936, 937, 938, 939, 941, 949, 954, 1011, 1028, 1033, 1054, 1066, 1099, 1109, 1114, 1127], "requir": [11, 12, 26, 35, 37, 40, 59, 87, 106, 111, 123, 127, 131, 132, 133, 136, 138, 142, 151, 159, 161, 163, 167, 171, 179, 190, 193, 204, 207, 209, 211, 216, 217, 231, 247, 256, 258, 259, 312, 323, 356, 386, 388, 411, 420, 423, 431, 451, 453, 474, 477, 481, 504, 553, 566, 582, 619, 630, 636, 637, 643, 646, 651, 652, 676, 683, 854, 862, 863, 874, 879, 915, 917, 924, 943, 948, 956, 969, 978, 979, 997, 1006, 1007, 1010, 1066, 1072, 1086, 1087, 1092, 1094, 1095, 1101, 1113, 1115, 1117, 1127, 1130], "particip": [11, 136, 138, 160, 163, 247, 470, 856, 979, 993, 1013, 1054, 1127], "should": [11, 35, 41, 43, 53, 55, 75, 78, 127, 132, 133, 136, 138, 142, 146, 153, 159, 163, 167, 192, 193, 207, 213, 219, 223, 247, 287, 292, 307, 308, 322, 347, 369, 384, 394, 398, 408, 413, 420, 426, 431, 436, 437, 439, 440, 448, 481, 529, 536, 538, 634, 637, 639, 643, 654, 698, 716, 735, 747, 749, 753, 757, 782, 801, 817, 824, 829, 861, 862, 863, 870, 889, 905, 916, 954, 963, 967, 975, 986, 1020, 1024, 1033, 1061, 1063, 1074, 1087, 1092, 1093, 1127], "fluent": [11, 270, 302, 303, 1055, 1127], "target": [11, 16, 38, 61, 106, 132, 134, 142, 183, 192, 274, 303, 392, 395, 411, 414, 415, 421, 424, 437, 541, 710, 730, 732, 737, 757, 819, 884, 909, 933, 934, 943, 945, 952, 956, 963, 965, 978, 1062, 1072, 1086, 1094, 1117], "audienc": [11, 131, 133, 163, 168, 956, 978, 1010, 1072, 1086, 1112, 1117], "languag": [11, 28, 41, 57, 60, 76, 88, 111, 127, 152, 154, 166, 167, 168, 170, 172, 175, 177, 182, 183, 185, 188, 190, 191, 192, 194, 210, 214, 217, 220, 222, 225, 250, 253, 256, 257, 258, 287, 288, 289, 290, 291, 292, 301, 304, 318, 320, 322, 324, 336, 339, 350, 354, 363, 368, 370, 376, 380, 381, 383, 396, 400, 405, 408, 413, 415, 432, 446, 447, 448, 469, 475, 476, 478, 479, 480, 483, 484, 485, 490, 492, 503, 526, 527, 534, 539, 541, 549, 552, 554, 555, 571, 577, 581, 590, 593, 594, 599, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 628, 630, 635, 642, 643, 653, 667, 672, 674, 677, 682, 686, 689, 690, 691, 699, 707, 709, 710, 711, 789, 846, 854, 855, 931, 933, 950, 959, 963, 964, 965, 966, 967, 970, 975, 979, 983, 985, 986, 989, 998, 1006, 1008, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1027, 1028, 1029, 1030, 1031, 1032, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1057, 1061, 1065, 1068, 1071, 1072, 1074, 1078, 1083, 1086, 1089, 1091, 1096, 1101, 1109, 1112, 1113, 1114, 1115, 1117], "english": [11, 28, 104, 124, 151, 170, 177, 188, 198, 201, 210, 214, 220, 222, 225, 227, 228, 243, 250, 255, 263, 264, 269, 270, 299, 300, 301, 306, 415, 710, 956, 978, 1014, 1024, 1027, 1028, 1030, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1053, 1054, 1071, 1072, 1086], "german": [11, 13, 415, 956, 978, 1054, 1071, 1072, 1074, 1086], "see": [11, 12, 22, 26, 28, 40, 41, 43, 44, 48, 51, 53, 55, 61, 63, 75, 76, 83, 87, 97, 104, 111, 116, 117, 119, 124, 127, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 146, 148, 151, 152, 153, 161, 163, 167, 168, 177, 182, 183, 187, 190, 192, 193, 198, 200, 203, 204, 206, 207, 209, 210, 216, 219, 223, 228, 231, 240, 244, 247, 249, 253, 255, 256, 257, 258, 260, 264, 265, 273, 274, 279, 284, 287, 292, 301, 304, 305, 307, 312, 315, 320, 323, 332, 333, 334, 336, 342, 359, 372, 378, 381, 391, 397, 410, 411, 416, 420, 421, 422, 423, 427, 428, 431, 432, 433, 441, 442, 443, 444, 445, 449, 452, 453, 469, 470, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 491, 492, 501, 502, 503, 504, 512, 518, 521, 526, 528, 529, 530, 531, 536, 538, 539, 544, 545, 547, 562, 566, 579, 593, 597, 598, 600, 601, 604, 613, 617, 619, 620, 622, 626, 629, 634, 636, 637, 638, 639, 641, 648, 654, 668, 669, 671, 674, 675, 676, 678, 680, 684, 685, 686, 687, 688, 689, 698, 700, 705, 708, 711, 713, 716, 718, 720, 721, 723, 725, 726, 728, 730, 732, 735, 737, 743, 745, 747, 749, 751, 753, 757, 760, 764, 765, 771, 773, 783, 784, 785, 789, 792, 795, 796, 813, 817, 818, 820, 821, 823, 826, 828, 844, 854, 861, 862, 863, 884, 887, 889, 890, 891, 895, 898, 900, 902, 905, 912, 924, 928, 931, 932, 933, 934, 939, 941, 944, 945, 946, 947, 948, 949, 952, 953, 954, 955, 956, 959, 967, 968, 971, 972, 974, 977, 979, 981, 984, 992, 995, 996, 997, 1007, 1010, 1013, 1022, 1026, 1029, 1040, 1051, 1052, 1058, 1060, 1066, 1071, 1072, 1074, 1076, 1079, 1080, 1081, 1086, 1089, 1092, 1097, 1099, 1104, 1114, 1115, 1117, 1127], "also": [11, 12, 22, 26, 55, 61, 63, 127, 132, 133, 135, 136, 138, 139, 141, 142, 143, 150, 152, 153, 154, 155, 158, 160, 161, 163, 164, 167, 173, 175, 193, 200, 206, 216, 217, 219, 223, 229, 235, 236, 238, 247, 249, 256, 257, 258, 264, 265, 274, 287, 319, 410, 411, 416, 421, 428, 437, 447, 450, 452, 453, 469, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 491, 492, 502, 503, 528, 529, 530, 531, 536, 538, 544, 562, 579, 582, 597, 598, 626, 634, 637, 638, 639, 641, 654, 665, 668, 671, 674, 675, 676, 678, 680, 684, 686, 689, 690, 698, 700, 708, 747, 757, 762, 783, 795, 801, 802, 817, 821, 823, 826, 828, 848, 854, 864, 873, 874, 887, 891, 895, 902, 912, 933, 934, 941, 946, 948, 950, 952, 953, 954, 956, 959, 967, 971, 977, 979, 983, 986, 996, 997, 1000, 1010, 1022, 1026, 1029, 1040, 1060, 1061, 1072, 1076, 1079, 1080, 1081, 1086, 1089, 1092, 1114, 1116, 1122, 1123, 1127], "train": [11, 12, 13, 22, 28, 29, 30, 35, 63, 104, 114, 126, 127, 132, 136, 143, 144, 146, 154, 155, 158, 159, 160, 163, 166, 190, 200, 206, 216, 219, 249, 256, 258, 261, 273, 309, 319, 411, 413, 414, 415, 416, 417, 419, 420, 422, 424, 426, 427, 428, 429, 430, 431, 433, 435, 438, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 477, 480, 486, 487, 488, 489, 491, 493, 494, 495, 496, 498, 499, 500, 501, 502, 526, 606, 686, 711, 713, 716, 721, 726, 732, 735, 743, 864, 870, 872, 873, 874, 895, 898, 921, 924, 928, 955, 956, 958, 978, 979, 1007, 1010, 1013, 1057, 1058, 1061, 1062, 1072, 1086, 1097, 1101, 1106, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130], "sourc": [12, 22, 27, 29, 37, 59, 63, 66, 71, 84, 108, 109, 111, 130, 131, 132, 133, 136, 137, 138, 142, 146, 148, 149, 151, 152, 159, 172, 177, 182, 200, 206, 214, 216, 219, 223, 228, 236, 238, 240, 243, 244, 247, 268, 275, 364, 365, 368, 403, 412, 413, 414, 416, 417, 418, 419, 421, 422, 423, 432, 478, 482, 486, 601, 634, 637, 643, 648, 654, 684, 725, 755, 758, 769, 801, 817, 818, 850, 891, 931, 932, 934, 935, 937, 941, 943, 945, 946, 947, 948, 949, 986, 1042, 1051, 1094, 1101, 1107, 1117, 1124], "under": [12, 20, 33, 53, 130, 131, 133, 138, 159, 170, 172, 319, 433, 448, 481, 793, 794, 861, 862, 863, 864, 865, 866, 873, 874, 916, 931, 955, 962, 969, 1003, 1092], "why": [12, 23, 27, 43, 48, 63, 64, 67, 111, 127, 131, 132, 137, 143, 163, 167, 168, 170, 172, 183, 192, 212, 250, 253, 259, 260, 278, 279, 282, 301, 304, 305, 308, 322, 334, 340, 347, 350, 368, 379, 384, 385, 390, 394, 397, 404, 409, 447, 471, 529, 544, 562, 575, 601, 604, 620, 626, 627, 643, 674, 690, 693, 706, 725, 737, 753, 757, 788, 794, 797, 854, 907, 910, 928, 943, 945, 953, 954, 957, 1003, 1005, 1055, 1060, 1073, 1081], "appli": [12, 74, 81, 128, 133, 172, 190, 249, 255, 351, 386, 392, 410, 541, 641, 676, 730, 757, 797, 800, 817, 861, 862, 887, 948, 1077], "websit": [12, 22, 132, 146, 1088, 1101], "contain": [12, 16, 28, 33, 36, 59, 104, 105, 106, 108, 109, 111, 127, 128, 134, 137, 142, 146, 151, 153, 158, 159, 161, 163, 164, 167, 170, 172, 190, 192, 193, 200, 206, 216, 217, 219, 223, 230, 231, 234, 235, 236, 249, 256, 265, 286, 287, 296, 303, 304, 310, 312, 349, 368, 382, 402, 404, 410, 412, 413, 417, 431, 447, 470, 473, 475, 478, 480, 481, 490, 491, 492, 526, 527, 529, 537, 546, 563, 566, 579, 590, 594, 608, 617, 622, 623, 629, 634, 674, 686, 689, 704, 705, 706, 708, 710, 713, 718, 726, 728, 730, 751, 753, 757, 777, 784, 785, 788, 797, 799, 822, 823, 824, 829, 836, 861, 862, 863, 870, 891, 899, 900, 915, 925, 931, 934, 939, 943, 948, 955, 957, 962, 979, 1001, 1004, 1010, 1012, 1024, 1033, 1037, 1052, 1055, 1057, 1061, 1066, 1069, 1071, 1076, 1087, 1088, 1092, 1098, 1099, 1111, 1112], "give": [12, 26, 38, 51, 57, 60, 108, 109, 124, 128, 130, 131, 133, 138, 141, 152, 155, 159, 160, 167, 172, 183, 191, 223, 228, 240, 256, 258, 320, 334, 335, 350, 366, 369, 377, 402, 408, 410, 413, 428, 477, 485, 497, 515, 551, 566, 612, 620, 643, 672, 757, 783, 790, 808, 810, 862, 863, 882, 883, 895, 898, 917, 919, 924, 925, 931, 934, 943, 952, 955, 978, 995, 1007, 1055, 1059, 1060, 1087, 1092, 1094, 1112, 1115, 1117], "structur": [12, 28, 63, 76, 87, 106, 131, 146, 168, 182, 209, 210, 217, 219, 220, 222, 225, 228, 231, 234, 243, 250, 253, 260, 264, 270, 274, 275, 279, 301, 305, 307, 309, 324, 334, 342, 347, 376, 378, 382, 383, 387, 396, 399, 400, 405, 406, 410, 411, 415, 423, 430, 448, 474, 478, 501, 551, 584, 617, 626, 628, 666, 707, 709, 710, 745, 747, 751, 755, 757, 777, 813, 844, 880, 886, 902, 907, 925, 995, 997, 1037, 1043, 1083, 1086, 1093, 1100, 1112], "much": [12, 26, 33, 36, 61, 78, 130, 131, 132, 133, 138, 141, 146, 155, 161, 163, 167, 168, 169, 171, 193, 204, 206, 207, 209, 211, 217, 231, 232, 235, 236, 238, 250, 253, 259, 260, 278, 279, 282, 304, 336, 347, 358, 394, 398, 408, 423, 448, 527, 537, 543, 562, 583, 603, 626, 627, 636, 637, 641, 654, 666, 667, 668, 672, 674, 676, 686, 690, 709, 710, 713, 728, 735, 743, 745, 751, 753, 757, 796, 797, 846, 854, 857, 860, 862, 874, 916, 925, 928, 929, 931, 933, 943, 950, 953, 954, 967, 968, 973, 974, 977, 986, 1003, 1055, 1061, 1062, 1064, 1092, 1094, 1112], "like": [12, 20, 26, 27, 29, 37, 41, 43, 53, 57, 60, 61, 63, 75, 76, 111, 124, 130, 131, 132, 133, 135, 136, 138, 141, 142, 146, 151, 154, 155, 159, 160, 161, 163, 167, 169, 172, 182, 183, 190, 192, 193, 200, 206, 207, 209, 210, 216, 219, 232, 234, 236, 238, 244, 247, 249, 250, 253, 256, 258, 287, 292, 304, 312, 333, 336, 340, 362, 364, 369, 374, 386, 390, 398, 401, 408, 414, 418, 420, 423, 426, 427, 428, 448, 473, 477, 478, 480, 481, 482, 497, 504, 512, 515, 521, 530, 533, 536, 540, 541, 542, 544, 565, 582, 591, 598, 600, 603, 606, 607, 616, 617, 625, 626, 629, 630, 636, 637, 654, 672, 674, 675, 685, 686, 689, 690, 696, 706, 708, 711, 713, 715, 718, 726, 728, 730, 735, 741, 747, 749, 751, 753, 757, 762, 770, 773, 777, 785, 788, 789, 793, 794, 796, 799, 817, 819, 822, 824, 829, 846, 854, 855, 857, 861, 862, 863, 864, 873, 874, 878, 882, 884, 887, 891, 897, 899, 900, 918, 925, 929, 931, 933, 934, 947, 950, 952, 954, 957, 959, 967, 972, 977, 979, 981, 983, 985, 987, 991, 995, 997, 1000, 1001, 1004, 1007, 1009, 1012, 1020, 1023, 1033, 1034, 1037, 1043, 1044, 1045, 1046, 1047, 1049, 1054, 1057, 1060, 1062, 1063, 1064, 1066, 1074, 1076, 1077, 1082, 1092, 1093, 1094, 1099, 1101, 1112, 1117], "topic": [12, 15, 26, 27, 28, 57, 60, 67, 76, 88, 95, 104, 111, 124, 128, 133, 137, 138, 151, 155, 168, 171, 172, 173, 175, 183, 188, 198, 201, 207, 217, 219, 220, 235, 236, 240, 258, 260, 264, 279, 287, 288, 289, 290, 292, 300, 301, 306, 307, 312, 314, 315, 318, 319, 320, 504, 545, 547, 606, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 708, 757, 759, 769, 780, 787, 789, 791, 798, 803, 807, 809, 811, 812, 837, 847, 860, 862, 865, 866, 868, 884, 934, 943, 944, 948, 956, 961, 978, 979, 983, 1010, 1012, 1013, 1014, 1024, 1027, 1035, 1038, 1039, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1062, 1065, 1071, 1086, 1089, 1092, 1096, 1114, 1115, 1122], "other": [12, 26, 28, 31, 37, 38, 49, 51, 57, 60, 61, 76, 78, 80, 108, 109, 113, 119, 127, 131, 132, 133, 134, 135, 138, 142, 146, 155, 159, 163, 167, 168, 170, 171, 172, 183, 191, 200, 206, 207, 216, 219, 223, 244, 265, 272, 273, 287, 304, 308, 312, 332, 338, 347, 356, 374, 377, 388, 404, 408, 411, 413, 419, 420, 423, 424, 425, 431, 512, 527, 529, 530, 536, 538, 539, 542, 543, 544, 554, 582, 604, 627, 636, 637, 668, 672, 684, 686, 688, 690, 701, 708, 710, 728, 747, 749, 783, 790, 793, 794, 810, 815, 817, 819, 839, 856, 861, 862, 863, 866, 870, 873, 882, 883, 889, 890, 902, 907, 910, 916, 925, 929, 931, 933, 943, 950, 952, 954, 963, 966, 967, 968, 971, 974, 977, 981, 983, 984, 985, 986, 992, 993, 997, 999, 1001, 1003, 1004, 1017, 1033, 1060, 1067, 1070, 1072, 1074, 1092, 1104, 1112, 1114, 1115, 1117, 1127], "exampl": [12, 16, 23, 28, 37, 38, 63, 76, 85, 111, 124, 125, 127, 130, 131, 132, 133, 138, 141, 142, 146, 150, 151, 152, 155, 159, 163, 167, 169, 171, 182, 190, 192, 196, 200, 203, 206, 207, 209, 215, 216, 217, 220, 221, 222, 224, 228, 231, 240, 247, 249, 250, 253, 257, 259, 260, 264, 265, 273, 275, 278, 279, 289, 292, 301, 309, 312, 325, 331, 332, 333, 341, 347, 399, 411, 422, 423, 424, 431, 435, 437, 447, 448, 450, 452, 473, 474, 481, 504, 540, 542, 544, 553, 562, 569, 607, 616, 634, 643, 648, 663, 664, 668, 669, 673, 676, 680, 686, 690, 708, 710, 716, 728, 735, 757, 784, 785, 789, 794, 814, 817, 827, 839, 846, 854, 861, 862, 863, 864, 873, 877, 884, 887, 888, 889, 890, 891, 899, 906, 925, 928, 930, 931, 932, 933, 934, 935, 941, 947, 948, 949, 950, 953, 954, 955, 959, 966, 973, 976, 978, 979, 980, 982, 990, 995, 1004, 1010, 1012, 1028, 1033, 1051, 1052, 1053, 1061, 1062, 1063, 1071, 1073, 1079, 1080, 1086, 1091, 1099, 1101, 1114, 1115], "here": [12, 13, 61, 66, 71, 72, 75, 76, 78, 79, 83, 104, 117, 119, 128, 130, 131, 133, 134, 136, 137, 138, 141, 142, 146, 151, 153, 159, 160, 161, 163, 167, 169, 172, 182, 183, 187, 190, 191, 192, 193, 198, 201, 209, 210, 214, 217, 219, 223, 236, 238, 240, 244, 247, 249, 253, 256, 258, 265, 268, 284, 287, 292, 298, 301, 304, 305, 307, 320, 323, 388, 390, 397, 404, 420, 426, 428, 448, 453, 464, 467, 471, 473, 478, 481, 486, 501, 504, 512, 526, 529, 530, 533, 539, 545, 547, 551, 563, 591, 597, 617, 619, 620, 626, 637, 643, 648, 654, 664, 668, 673, 676, 678, 684, 686, 689, 698, 711, 725, 730, 732, 735, 747, 753, 757, 783, 817, 854, 856, 861, 862, 863, 870, 874, 881, 887, 891, 897, 902, 915, 924, 928, 929, 940, 943, 947, 949, 952, 953, 954, 955, 967, 970, 974, 979, 982, 983, 990, 996, 1006, 1007, 1013, 1034, 1037, 1054, 1060, 1061, 1062, 1063, 1066, 1071, 1085, 1092, 1094, 1097, 1101, 1115, 1117], "discuss": [12, 40, 48, 111, 163, 167, 168, 170, 172, 207, 217, 253, 257, 258, 278, 301, 305, 308, 309, 312, 314, 315, 319, 421, 509, 512, 515, 518, 521, 524, 694, 700, 737, 770, 817, 924, 928, 957, 1099, 1101, 1104, 1115], "over": [12, 32, 33, 36, 40, 59, 63, 87, 95, 124, 127, 128, 130, 131, 133, 135, 136, 141, 151, 155, 163, 167, 169, 170, 171, 182, 187, 190, 192, 193, 200, 205, 206, 207, 209, 212, 215, 243, 247, 250, 253, 259, 260, 278, 279, 286, 301, 304, 347, 358, 359, 374, 388, 408, 418, 426, 436, 450, 527, 533, 561, 579, 591, 619, 626, 674, 675, 693, 704, 757, 854, 858, 862, 864, 870, 891, 905, 913, 916, 931, 943, 945, 950, 953, 990, 1003, 1007], "lwn": [12, 37, 148, 737, 749, 767, 1107], "attribut": [12, 128, 131, 133, 148, 167, 181, 187, 191, 200, 203, 206, 211, 213, 218, 219, 223, 226, 229, 233, 234, 241, 244, 248, 251, 261, 265, 271, 294, 296, 305, 312, 386, 402, 404, 416, 431, 698, 708, 789, 795, 816, 820, 887, 899, 900, 917, 918, 925, 929, 953, 954, 967, 969, 980, 1006, 1060, 1128], "sharealik": 12, "cc": [12, 22, 30, 113, 149, 157, 158, 159, 236, 411, 433, 477, 480, 481, 505, 508, 511, 512, 514, 515, 517, 518, 520, 521, 523, 546, 684, 685, 690, 735, 923, 924, 927, 928, 933, 1098, 1099, 1101, 1103, 1104], "BY": [12, 22, 33, 654], "sa": [12, 22, 30, 915], "don": [12, 23, 56, 59, 76, 82, 111, 119, 124, 130, 131, 132, 133, 136, 137, 138, 146, 161, 163, 167, 171, 182, 183, 193, 200, 204, 206, 207, 209, 216, 219, 271, 309, 333, 374, 386, 389, 390, 392, 398, 404, 408, 410, 427, 480, 512, 518, 527, 528, 543, 544, 551, 561, 597, 604, 634, 637, 639, 654, 668, 669, 681, 690, 695, 700, 725, 730, 749, 757, 762, 792, 817, 819, 824, 830, 841, 854, 857, 861, 862, 866, 874, 878, 879, 880, 881, 900, 901, 902, 907, 928, 929, 934, 955, 963, 965, 979, 982, 986, 1010, 1067, 1073, 1080, 1087, 1098, 1104], "t": [12, 23, 41, 48, 56, 59, 61, 63, 76, 82, 111, 119, 124, 128, 130, 132, 133, 136, 137, 138, 141, 142, 146, 148, 150, 161, 163, 164, 167, 170, 171, 174, 179, 181, 182, 183, 187, 193, 196, 200, 203, 204, 206, 207, 209, 211, 213, 216, 217, 219, 223, 226, 229, 232, 238, 241, 244, 249, 250, 251, 253, 255, 261, 265, 271, 287, 293, 295, 296, 298, 309, 321, 323, 324, 326, 332, 333, 343, 358, 364, 366, 369, 374, 384, 386, 388, 389, 390, 392, 398, 404, 408, 410, 413, 427, 477, 480, 485, 504, 512, 518, 527, 528, 530, 537, 543, 544, 551, 553, 554, 561, 565, 597, 604, 626, 627, 629, 634, 636, 637, 639, 643, 644, 645, 646, 654, 657, 668, 669, 674, 680, 681, 684, 685, 686, 688, 690, 693, 695, 698, 700, 716, 725, 730, 737, 749, 751, 757, 762, 774, 777, 783, 784, 785, 792, 794, 817, 818, 819, 823, 824, 830, 836, 839, 841, 854, 857, 861, 862, 863, 866, 870, 874, 878, 879, 880, 881, 888, 900, 901, 902, 907, 917, 924, 925, 928, 929, 931, 932, 934, 943, 946, 949, 955, 956, 963, 965, 967, 975, 979, 982, 985, 986, 987, 993, 999, 1003, 1005, 1006, 1007, 1010, 1012, 1059, 1063, 1067, 1071, 1073, 1080, 1087, 1098, 1099, 1104, 1114], "want": [12, 16, 26, 28, 29, 43, 48, 59, 61, 76, 82, 113, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 146, 151, 154, 159, 163, 167, 170, 171, 182, 183, 190, 193, 200, 207, 211, 213, 247, 249, 250, 253, 287, 298, 312, 334, 346, 362, 390, 402, 404, 408, 412, 413, 428, 431, 452, 472, 481, 485, 504, 515, 528, 533, 536, 544, 569, 604, 620, 634, 639, 654, 675, 680, 686, 688, 689, 690, 708, 713, 732, 757, 762, 792, 794, 796, 799, 814, 817, 818, 836, 854, 857, 861, 862, 863, 874, 878, 879, 880, 881, 886, 900, 915, 917, 918, 919, 928, 931, 933, 943, 945, 947, 950, 951, 952, 953, 954, 955, 956, 958, 962, 969, 974, 978, 985, 994, 997, 1007, 1011, 1013, 1049, 1054, 1067, 1071, 1072, 1074, 1076, 1080, 1092, 1094, 1095, 1099, 1112, 1117], "anybodi": [12, 63, 131, 136, 163, 182, 183, 391, 889, 900, 1104], "monei": [12, 132, 135, 138, 206, 796, 1012], "my": [12, 16, 23, 27, 30, 37, 57, 60, 61, 63, 95, 113, 119, 130, 131, 132, 134, 135, 137, 138, 141, 142, 146, 159, 163, 167, 170, 183, 190, 217, 231, 233, 247, 257, 298, 301, 306, 398, 409, 431, 481, 521, 539, 550, 604, 686, 708, 741, 753, 757, 759, 785, 792, 807, 809, 814, 820, 841, 854, 861, 863, 865, 866, 873, 874, 879, 880, 881, 890, 925, 967, 986, 1009, 1049, 1074, 1092, 1112], "without": [12, 130, 131, 132, 133, 141, 142, 167, 211, 275, 334, 358, 365, 391, 394, 398, 403, 408, 419, 431, 436, 448, 515, 521, 527, 533, 597, 604, 627, 654, 672, 692, 693, 700, 728, 741, 757, 796, 797, 839, 863, 865, 874, 900, 919, 924, 925, 929, 952, 953, 956, 957, 959, 966, 968, 970, 972, 974, 981, 986, 1003, 1092, 1094, 1112, 1117], "modif": [12, 53, 104, 146, 209, 334, 336, 342, 347, 378, 408, 431, 436, 478, 541, 701, 708, 730, 757, 802, 818, 839, 966, 986, 1003, 1067, 1104], "back": [12, 28, 30, 61, 64, 132, 133, 136, 142, 167, 169, 171, 196, 204, 209, 220, 222, 240, 255, 275, 384, 399, 450, 469, 504, 524, 544, 558, 563, 601, 634, 648, 683, 690, 710, 725, 730, 739, 757, 759, 788, 820, 854, 861, 874, 915, 925, 931, 950, 957, 970, 974, 986, 1014, 1048, 1049, 1050, 1053, 1082], "m": [12, 22, 30, 36, 59, 115, 117, 132, 133, 134, 136, 138, 141, 146, 159, 164, 169, 174, 183, 187, 196, 197, 198, 200, 204, 219, 223, 229, 231, 236, 248, 297, 301, 302, 303, 308, 322, 410, 433, 477, 478, 480, 481, 484, 521, 546, 654, 676, 685, 725, 726, 732, 735, 767, 794, 796, 817, 861, 874, 919, 972, 1009, 1010, 1017, 1042, 1043, 1060, 1073, 1087, 1092, 1094, 1099], "lawyer": 12, "understand": [12, 111, 130, 131, 133, 137, 138, 141, 142, 146, 155, 163, 167, 192, 219, 250, 253, 256, 258, 259, 260, 275, 278, 279, 303, 312, 340, 388, 397, 404, 436, 473, 613, 634, 643, 664, 675, 757, 796, 802, 854, 974, 1012, 1055, 1060, 1061, 1081, 1112, 1113, 1114], "permit": [12, 133, 138, 183, 247, 298, 509, 530, 537, 861, 872, 916, 980, 1083], "exactli": [12, 76, 131, 133, 155, 161, 190, 260, 279, 292, 326, 366, 473, 478, 561, 637, 674, 757, 863, 888, 889, 929, 947, 1066, 1086], "gnu": [12, 142, 147, 183, 192, 298, 304, 320, 405, 406, 411, 413, 536, 685, 710, 737, 758, 817, 932, 933, 943, 945, 947, 1110, 1114], "free": [12, 30, 137, 142, 158, 183, 298, 381, 395, 433, 510, 530, 536, 538, 598, 617, 618, 620, 621, 637, 664, 683, 684, 685, 721, 728, 759, 879, 880, 881, 893, 916, 929, 931, 1061, 1074, 1083, 1109], "document": [12, 23, 38, 40, 63, 76, 84, 111, 128, 131, 133, 135, 142, 143, 149, 152, 159, 171, 183, 189, 190, 198, 200, 205, 206, 207, 209, 216, 219, 223, 236, 238, 240, 249, 256, 258, 261, 285, 287, 292, 301, 308, 309, 384, 385, 388, 395, 411, 412, 413, 414, 416, 419, 420, 421, 422, 423, 424, 436, 478, 501, 543, 547, 561, 562, 606, 617, 619, 629, 634, 641, 643, 648, 664, 665, 671, 673, 676, 678, 685, 686, 687, 689, 696, 697, 698, 700, 704, 708, 728, 730, 753, 757, 758, 765, 769, 783, 789, 796, 803, 807, 809, 811, 841, 842, 843, 845, 846, 848, 849, 857, 861, 862, 863, 897, 904, 912, 945, 947, 948, 952, 954, 955, 959, 963, 965, 967, 973, 990, 1000, 1001, 1066, 1069, 1076, 1077, 1080, 1082, 1090, 1093, 1100, 1101, 1120, 1121], "A": [12, 19, 22, 26, 27, 28, 36, 37, 38, 39, 59, 63, 67, 71, 72, 76, 80, 82, 83, 95, 96, 106, 107, 108, 109, 111, 118, 130, 133, 134, 135, 136, 138, 143, 146, 147, 148, 151, 152, 153, 167, 169, 170, 171, 179, 183, 190, 192, 194, 200, 203, 206, 210, 216, 217, 219, 223, 231, 237, 239, 243, 246, 247, 258, 260, 265, 267, 268, 271, 278, 279, 287, 293, 298, 302, 303, 318, 323, 326, 327, 339, 340, 341, 354, 359, 363, 369, 370, 372, 375, 376, 380, 383, 384, 385, 386, 387, 390, 392, 393, 394, 396, 398, 400, 405, 406, 408, 414, 421, 424, 425, 426, 430, 431, 434, 436, 446, 448, 460, 474, 475, 478, 481, 490, 526, 531, 532, 537, 539, 540, 541, 590, 591, 593, 594, 597, 608, 611, 612, 613, 614, 615, 616, 618, 619, 620, 621, 622, 623, 624, 628, 630, 643, 654, 664, 666, 669, 676, 682, 688, 692, 701, 706, 707, 708, 709, 710, 711, 718, 732, 734, 751, 774, 786, 787, 790, 791, 796, 799, 800, 804, 805, 810, 814, 820, 850, 853, 860, 861, 863, 878, 882, 883, 886, 892, 894, 899, 900, 901, 902, 911, 916, 917, 928, 929, 932, 934, 939, 941, 942, 943, 946, 947, 953, 954, 955, 959, 960, 961, 962, 963, 965, 966, 967, 968, 985, 986, 993, 995, 1000, 1006, 1010, 1011, 1012, 1017, 1040, 1043, 1046, 1057, 1061, 1066, 1067, 1070, 1074, 1077, 1078, 1084, 1087, 1093, 1094, 1104, 1112, 1113, 1114, 1115, 1117, 1127], "ago": [12, 133, 137, 193, 782], "wa": [12, 35, 51, 63, 76, 127, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 146, 148, 150, 151, 152, 154, 158, 159, 164, 166, 167, 170, 174, 180, 181, 187, 190, 193, 196, 197, 207, 209, 211, 213, 220, 223, 232, 244, 251, 257, 260, 265, 279, 282, 301, 306, 319, 322, 369, 394, 414, 518, 526, 527, 536, 537, 582, 611, 618, 619, 620, 621, 622, 623, 630, 634, 637, 692, 708, 710, 732, 739, 747, 753, 792, 814, 844, 846, 854, 863, 890, 910, 929, 954, 986, 1060, 1077, 1080, 1087, 1092, 1094, 1097, 1107, 1109, 1110, 1111, 1112, 1124, 1130], "debian": [12, 76, 119, 120, 121, 138, 142, 146, 148, 160, 171, 183, 268, 298, 319, 497, 710, 757, 856, 933, 945, 1094, 1099], "resolut": [12, 217, 221, 223, 391, 639, 701, 735, 767, 863], "us": [12, 13, 16, 20, 23, 37, 38, 43, 46, 52, 57, 59, 60, 61, 63, 66, 68, 69, 72, 75, 76, 79, 80, 82, 83, 84, 86, 87, 95, 104, 105, 111, 123, 124, 126, 127, 128, 130, 131, 133, 134, 137, 141, 143, 146, 148, 151, 155, 157, 158, 160, 163, 167, 169, 170, 182, 183, 188, 191, 198, 200, 201, 203, 204, 207, 208, 210, 214, 216, 217, 219, 223, 226, 228, 229, 231, 236, 238, 240, 244, 247, 249, 250, 251, 253, 255, 256, 257, 258, 259, 260, 261, 264, 265, 270, 273, 275, 278, 279, 282, 286, 287, 292, 298, 301, 304, 306, 307, 310, 319, 330, 333, 334, 337, 338, 339, 342, 344, 353, 354, 356, 358, 359, 363, 364, 365, 368, 369, 370, 372, 376, 377, 380, 383, 387, 391, 392, 396, 398, 399, 400, 404, 405, 406, 408, 410, 411, 413, 418, 419, 420, 421, 424, 426, 427, 429, 430, 433, 436, 437, 438, 440, 447, 450, 451, 452, 469, 471, 473, 474, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 491, 492, 497, 501, 502, 503, 504, 505, 508, 511, 514, 517, 520, 523, 528, 530, 531, 535, 536, 539, 541, 543, 544, 545, 547, 548, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 570, 573, 574, 575, 579, 582, 583, 584, 585, 586, 587, 591, 597, 600, 601, 603, 604, 607, 608, 610, 611, 613, 615, 616, 617, 618, 619, 620, 621, 623, 625, 626, 628, 629, 630, 631, 633, 635, 637, 641, 643, 648, 654, 656, 663, 664, 666, 668, 669, 671, 673, 676, 681, 685, 686, 687, 688, 690, 692, 696, 698, 701, 704, 707, 708, 709, 710, 715, 716, 718, 720, 723, 725, 726, 728, 730, 732, 735, 737, 741, 743, 745, 749, 751, 753, 757, 758, 760, 762, 770, 771, 773, 776, 777, 783, 784, 785, 788, 792, 793, 796, 797, 799, 801, 803, 809, 814, 817, 819, 822, 823, 824, 826, 836, 842, 844, 848, 853, 854, 857, 858, 860, 864, 865, 866, 873, 874, 877, 883, 884, 887, 888, 889, 891, 895, 897, 898, 900, 902, 903, 904, 906, 907, 910, 912, 913, 916, 917, 920, 923, 924, 925, 927, 928, 929, 931, 934, 941, 942, 945, 946, 947, 948, 949, 953, 956, 957, 959, 960, 961, 962, 963, 966, 967, 972, 974, 976, 978, 979, 980, 982, 986, 988, 990, 994, 995, 996, 997, 1000, 1003, 1005, 1007, 1010, 1012, 1015, 1016, 1017, 1020, 1021, 1022, 1026, 1028, 1031, 1032, 1033, 1034, 1038, 1040, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1054, 1055, 1057, 1058, 1060, 1061, 1062, 1064, 1066, 1067, 1070, 1071, 1074, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1092, 1095, 1098, 1099, 1101, 1103, 1104, 1112, 1114, 1115, 1117], "gfdl": 12, "becaus": [12, 16, 36, 59, 64, 78, 125, 130, 131, 133, 142, 146, 155, 163, 167, 169, 183, 193, 200, 206, 216, 219, 326, 347, 386, 395, 398, 401, 408, 410, 419, 428, 431, 448, 477, 481, 528, 529, 536, 539, 579, 601, 620, 676, 684, 687, 726, 737, 755, 757, 796, 836, 854, 861, 862, 863, 872, 883, 884, 887, 890, 904, 910, 925, 928, 929, 952, 955, 981, 1011, 1071, 1087, 1094, 1099, 1112], "too": [12, 26, 51, 54, 61, 78, 131, 133, 138, 147, 160, 163, 179, 190, 192, 209, 219, 223, 226, 235, 236, 238, 249, 251, 259, 260, 265, 278, 279, 282, 343, 388, 398, 408, 422, 428, 527, 541, 648, 650, 654, 666, 667, 668, 674, 680, 686, 708, 709, 710, 755, 757, 762, 789, 854, 863, 864, 870, 887, 900, 917, 933, 952, 953, 954, 957, 1003, 1007, 1088, 1112], "restrict": [12, 132, 161, 171, 386, 391, 420, 471, 551, 755, 784, 785, 873, 1071], "articl": [12, 146, 148, 737, 749, 767, 861, 863, 943], "describ": [12, 63, 105, 111, 128, 130, 131, 132, 133, 136, 138, 141, 142, 157, 183, 219, 223, 231, 257, 265, 268, 298, 431, 440, 482, 505, 508, 511, 514, 517, 520, 523, 676, 690, 757, 767, 790, 817, 863, 868, 920, 923, 927, 932, 940, 946, 947, 976, 1060, 1098, 1101, 1103], "pretti": [12, 132, 133, 155, 169, 173, 192, 209, 219, 398, 413, 561, 618, 693, 950, 1083], "same": [12, 16, 23, 27, 37, 38, 41, 42, 63, 131, 132, 133, 135, 137, 138, 141, 142, 146, 151, 152, 153, 155, 163, 164, 169, 172, 183, 191, 195, 200, 206, 209, 216, 217, 219, 222, 223, 241, 250, 253, 259, 260, 265, 278, 279, 288, 289, 298, 305, 330, 334, 345, 346, 347, 364, 365, 369, 374, 377, 386, 388, 392, 394, 398, 399, 402, 403, 413, 431, 435, 438, 439, 450, 470, 471, 477, 483, 501, 504, 511, 513, 527, 530, 536, 539, 542, 561, 564, 570, 579, 582, 583, 584, 608, 619, 627, 632, 639, 641, 643, 646, 648, 672, 673, 676, 688, 689, 690, 696, 725, 726, 730, 735, 737, 739, 747, 749, 755, 757, 773, 789, 795, 801, 817, 818, 820, 844, 854, 861, 862, 863, 864, 873, 874, 880, 886, 900, 901, 902, 915, 919, 925, 929, 931, 947, 953, 954, 957, 962, 963, 966, 968, 972, 974, 990, 992, 995, 1000, 1002, 1003, 1004, 1037, 1045, 1047, 1061, 1066, 1067, 1070, 1071, 1074, 1076, 1079, 1080, 1081, 1092, 1094, 1099], "issu": [12, 131, 134, 141, 142, 193, 258, 259, 260, 278, 279, 321, 334, 392, 893, 919, 928, 945, 963], "how": [12, 22, 23, 35, 40, 43, 48, 63, 68, 69, 73, 75, 76, 79, 80, 82, 83, 84, 85, 86, 89, 102, 111, 117, 119, 127, 128, 131, 134, 136, 137, 138, 142, 143, 146, 151, 153, 155, 159, 160, 166, 167, 168, 169, 170, 171, 172, 183, 188, 190, 191, 192, 198, 200, 201, 203, 204, 206, 207, 209, 212, 214, 217, 228, 231, 235, 236, 240, 247, 250, 253, 255, 256, 257, 258, 259, 260, 264, 270, 273, 275, 278, 279, 287, 303, 304, 308, 319, 334, 340, 365, 372, 374, 375, 386, 388, 390, 392, 397, 401, 408, 410, 412, 419, 433, 439, 470, 473, 478, 485, 504, 521, 528, 536, 537, 540, 551, 561, 600, 604, 610, 620, 626, 648, 685, 688, 689, 690, 700, 704, 705, 711, 718, 720, 721, 735, 747, 757, 762, 773, 784, 785, 790, 797, 817, 836, 844, 850, 854, 861, 862, 863, 871, 879, 880, 881, 884, 887, 890, 891, 897, 910, 913, 916, 917, 919, 924, 928, 929, 941, 943, 945, 947, 960, 961, 978, 979, 982, 996, 999, 1013, 1051, 1052, 1055, 1060, 1061, 1077, 1079, 1080, 1083, 1092, 1095, 1101, 1104, 1114, 1115, 1117], "do": [12, 26, 30, 38, 41, 43, 48, 56, 57, 60, 61, 76, 81, 83, 87, 89, 95, 111, 114, 130, 131, 132, 133, 134, 135, 136, 137, 138, 142, 146, 147, 148, 150, 151, 152, 155, 159, 160, 163, 167, 168, 171, 181, 182, 183, 191, 193, 200, 203, 207, 209, 211, 213, 214, 217, 219, 222, 223, 229, 231, 233, 236, 238, 247, 250, 253, 287, 289, 296, 298, 301, 303, 337, 356, 358, 359, 361, 362, 363, 368, 369, 370, 376, 377, 380, 383, 386, 387, 394, 396, 400, 405, 406, 408, 410, 412, 428, 433, 436, 439, 447, 448, 470, 472, 478, 504, 512, 518, 521, 527, 529, 541, 545, 547, 548, 551, 588, 601, 604, 618, 619, 620, 628, 634, 639, 643, 665, 666, 672, 676, 678, 684, 685, 686, 688, 689, 690, 706, 707, 709, 710, 730, 734, 745, 749, 753, 755, 757, 782, 786, 787, 790, 794, 797, 801, 802, 811, 813, 818, 822, 824, 853, 854, 857, 861, 862, 863, 865, 866, 872, 874, 878, 879, 880, 881, 882, 883, 889, 900, 901, 903, 907, 913, 915, 916, 919, 921, 924, 929, 947, 948, 950, 952, 954, 955, 956, 959, 968, 978, 979, 980, 983, 986, 990, 996, 997, 1010, 1012, 1031, 1055, 1061, 1062, 1063, 1072, 1073, 1080, 1083, 1092, 1099, 1101, 1117], "choos": [12, 26, 130, 131, 142, 155, 163, 521, 757, 854, 861, 863, 946, 979, 986, 999, 1061, 1071, 1094], "altogeth": [12, 141, 190, 259, 260, 278, 279, 637, 765, 957], "have": [12, 26, 27, 29, 35, 41, 48, 63, 67, 78, 80, 82, 100, 108, 109, 111, 113, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 146, 151, 152, 153, 155, 159, 160, 161, 163, 167, 170, 171, 182, 183, 188, 190, 191, 192, 193, 200, 203, 204, 206, 207, 214, 219, 223, 226, 236, 238, 240, 247, 249, 250, 253, 256, 257, 259, 260, 264, 265, 279, 287, 292, 301, 304, 306, 333, 334, 338, 347, 366, 368, 388, 390, 393, 394, 398, 402, 404, 409, 411, 414, 418, 419, 423, 426, 427, 428, 432, 435, 436, 448, 470, 473, 477, 481, 493, 521, 527, 531, 535, 537, 539, 544, 545, 547, 548, 579, 585, 601, 604, 608, 613, 619, 620, 621, 625, 626, 630, 638, 641, 643, 654, 663, 668, 672, 673, 675, 678, 681, 685, 686, 689, 690, 705, 721, 725, 726, 728, 730, 735, 737, 749, 757, 760, 765, 773, 782, 790, 794, 796, 799, 800, 802, 809, 824, 844, 854, 861, 862, 863, 864, 866, 870, 872, 874, 878, 879, 881, 886, 891, 893, 899, 907, 924, 928, 929, 932, 933, 941, 945, 946, 949, 952, 955, 963, 967, 968, 972, 982, 985, 986, 990, 997, 1004, 1015, 1019, 1029, 1034, 1050, 1055, 1060, 1062, 1063, 1066, 1067, 1071, 1074, 1076, 1080, 1083, 1087, 1092, 1094, 1099, 1101, 1114, 1115], "idea": [12, 13, 130, 131, 191, 204, 213, 223, 256, 258, 259, 260, 275, 279, 392, 616, 638, 676, 684, 757, 854, 889, 899, 919, 943, 954, 978, 986, 1085, 1117], "choosealicens": 12, "appear": [12, 131, 132, 133, 134, 135, 136, 137, 138, 141, 151, 155, 159, 161, 163, 164, 183, 192, 219, 259, 260, 278, 279, 323, 366, 369, 413, 414, 431, 501, 543, 686, 753, 757, 765, 781, 861, 862, 863, 874, 932, 954, 1026, 1027, 1037, 1046, 1075, 1080], "help": [12, 28, 130, 131, 133, 134, 142, 146, 164, 183, 187, 192, 200, 206, 211, 213, 216, 219, 223, 226, 229, 231, 244, 251, 256, 260, 265, 279, 292, 296, 301, 319, 369, 390, 392, 394, 395, 404, 413, 530, 533, 539, 626, 639, 674, 684, 686, 728, 796, 856, 861, 946, 978, 981, 1007, 1010, 1083, 1092, 1099, 1114], "happen": [12, 26, 108, 109, 130, 131, 133, 146, 163, 167, 171, 190, 209, 273, 306, 374, 386, 390, 394, 408, 413, 533, 550, 622, 654, 668, 671, 693, 720, 753, 757, 774, 789, 790, 794, 863, 887, 889, 899, 904, 928, 966, 967, 1006, 1020, 1023, 1037, 1054, 1060, 1064, 1092, 1101, 1114], "clone": [12, 59, 75, 107, 111, 113, 123, 133, 134, 137, 158, 160, 163, 180, 192, 193, 209, 236, 238, 268, 301, 306, 470, 473, 546, 730, 757, 758, 861, 945, 946], "jfasch": [12, 38, 41, 59, 104, 111, 113, 127, 128, 134, 135, 136, 141, 142, 146, 150, 159, 160, 161, 164, 167, 180, 190, 200, 203, 206, 207, 209, 211, 216, 219, 226, 229, 231, 236, 238, 244, 247, 249, 250, 251, 256, 257, 258, 260, 261, 264, 265, 270, 274, 275, 279, 300, 301, 306, 309, 411, 413, 414, 416, 417, 419, 420, 422, 424, 433, 470, 478, 480, 481, 482, 504, 546, 606, 684, 685, 686, 730, 732, 757, 783, 784, 785, 788, 789, 792, 794, 799, 802, 813, 818, 819, 820, 836, 839, 841, 842, 846, 848, 850, 861, 864, 872, 873, 874, 879, 885, 887, 888, 889, 910, 915, 931, 932, 933, 934, 943, 945, 946, 947, 948, 949, 952, 954, 955, 958, 982, 1001, 1007, 1010, 1033, 1063, 1079, 1080, 1092, 1094], "home": [12, 30, 38, 40, 41, 48, 59, 63, 98, 113, 127, 128, 132, 134, 135, 136, 138, 142, 146, 159, 160, 161, 164, 183, 190, 200, 203, 204, 206, 211, 216, 219, 226, 229, 231, 236, 238, 244, 247, 249, 251, 261, 265, 309, 404, 411, 413, 414, 416, 417, 419, 420, 422, 424, 433, 478, 480, 481, 482, 546, 606, 639, 684, 685, 686, 710, 732, 757, 783, 784, 785, 787, 792, 794, 796, 797, 799, 802, 807, 809, 811, 813, 814, 817, 818, 820, 821, 822, 823, 824, 828, 831, 834, 837, 839, 841, 842, 848, 853, 864, 865, 870, 872, 873, 910, 912, 928, 931, 932, 933, 943, 945, 946, 947, 948, 949, 952, 955, 958, 1007, 1033, 1042, 1063, 1079, 1080, 1092, 1094], "built": [12, 27, 111, 130, 131, 133, 134, 137, 142, 159, 164, 166, 167, 175, 176, 188, 191, 200, 206, 211, 214, 216, 217, 219, 223, 231, 240, 244, 247, 249, 264, 273, 336, 340, 364, 385, 411, 419, 422, 423, 447, 470, 582, 639, 695, 700, 726, 730, 732, 757, 861, 863, 874, 932, 933, 934, 939, 947, 952, 955, 959, 975, 990, 1006, 1055, 1061, 1062, 1082, 1092, 1094, 1095, 1110, 1114, 1122], "wonder": [12, 725, 743, 770, 957], "gener": [12, 22, 23, 28, 37, 63, 66, 67, 76, 78, 79, 107, 108, 109, 124, 128, 131, 135, 138, 143, 150, 153, 163, 167, 168, 170, 171, 172, 173, 182, 190, 198, 199, 200, 204, 205, 207, 208, 209, 210, 212, 214, 215, 216, 220, 221, 222, 223, 228, 229, 243, 245, 249, 258, 263, 265, 269, 270, 272, 304, 307, 324, 334, 336, 342, 347, 358, 368, 386, 392, 395, 397, 398, 401, 411, 412, 413, 417, 473, 475, 478, 485, 490, 526, 533, 537, 553, 561, 562, 565, 616, 634, 637, 664, 678, 684, 690, 698, 737, 739, 741, 760, 790, 801, 817, 854, 856, 861, 874, 899, 928, 929, 931, 934, 945, 946, 952, 953, 954, 956, 974, 980, 982, 983, 984, 990, 994, 1011, 1012, 1013, 1014, 1027, 1053, 1055, 1062, 1065, 1067, 1068, 1070, 1071, 1072, 1080, 1087, 1092, 1115, 1116, 1123], "homepag": [12, 135, 137, 145, 148, 149, 163, 190, 198, 200, 235, 236, 238, 395, 943, 1092], "content": [12, 26, 37, 47, 48, 55, 61, 163, 170, 171, 172, 183, 191, 209, 211, 219, 241, 247, 293, 368, 371, 373, 482, 529, 579, 587, 675, 759, 762, 783, 784, 785, 799, 802, 804, 805, 839, 842, 850, 862, 866, 889, 931, 986, 1005, 1011, 1024, 1054, 1077, 1094, 1127], "which": [12, 13, 16, 27, 55, 66, 76, 78, 81, 87, 108, 109, 116, 123, 124, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 142, 146, 151, 153, 159, 160, 161, 163, 167, 169, 171, 183, 190, 192, 200, 204, 206, 207, 219, 222, 223, 231, 232, 249, 250, 253, 255, 260, 265, 279, 282, 319, 337, 342, 343, 349, 353, 374, 386, 398, 408, 409, 410, 411, 413, 416, 418, 419, 426, 428, 439, 469, 470, 471, 472, 473, 478, 479, 483, 484, 485, 497, 503, 509, 515, 528, 535, 537, 541, 543, 551, 598, 608, 612, 613, 619, 620, 622, 631, 637, 638, 676, 680, 681, 689, 690, 706, 708, 710, 726, 735, 757, 759, 777, 783, 790, 794, 796, 799, 800, 801, 802, 808, 810, 813, 817, 830, 841, 844, 853, 854, 857, 861, 862, 863, 874, 883, 884, 887, 889, 891, 892, 894, 899, 904, 911, 913, 915, 916, 924, 929, 932, 937, 945, 949, 952, 954, 956, 966, 967, 971, 979, 983, 986, 995, 1026, 1045, 1047, 1050, 1052, 1071, 1073, 1074, 1076, 1079, 1094, 1099, 1112], "differ": [12, 33, 36, 57, 60, 67, 74, 79, 83, 86, 118, 130, 131, 136, 138, 142, 152, 159, 163, 167, 179, 203, 204, 247, 249, 255, 256, 258, 265, 282, 287, 322, 334, 342, 347, 348, 364, 365, 368, 386, 392, 394, 398, 408, 410, 427, 428, 473, 478, 481, 504, 511, 512, 521, 530, 531, 535, 541, 543, 544, 553, 557, 562, 601, 604, 608, 630, 643, 646, 673, 688, 701, 708, 730, 735, 749, 755, 757, 777, 782, 788, 792, 793, 795, 814, 839, 854, 857, 861, 863, 870, 881, 889, 891, 904, 913, 915, 916, 936, 941, 946, 948, 949, 954, 967, 974, 982, 995, 999, 1004, 1005, 1006, 1067, 1076, 1094, 1095, 1115, 1117], "so": [12, 16, 22, 30, 35, 37, 47, 53, 64, 118, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 146, 150, 151, 152, 153, 154, 155, 159, 160, 161, 163, 164, 175, 176, 181, 189, 191, 192, 193, 202, 203, 204, 233, 247, 255, 257, 261, 273, 287, 296, 301, 304, 319, 333, 337, 338, 346, 348, 364, 374, 375, 377, 386, 390, 392, 394, 395, 399, 409, 411, 414, 416, 421, 422, 426, 448, 450, 470, 481, 497, 537, 544, 548, 561, 584, 591, 600, 607, 616, 665, 675, 680, 683, 684, 686, 701, 716, 718, 721, 726, 730, 732, 735, 757, 770, 782, 796, 797, 799, 801, 807, 809, 811, 817, 821, 828, 854, 860, 861, 862, 863, 866, 868, 870, 878, 881, 884, 889, 891, 899, 917, 919, 928, 931, 932, 933, 934, 945, 947, 948, 957, 958, 962, 974, 979, 981, 986, 1003, 1005, 1007, 1009, 1019, 1023, 1029, 1033, 1060, 1066, 1074, 1081, 1084, 1092, 1094, 1098, 1099, 1101, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1114, 1116, 1122, 1125, 1130], "ye": [12, 30, 48, 59, 133, 134, 137, 142, 183, 298, 584, 693, 784, 785, 802, 804, 805, 863, 874, 931, 999, 1032], "realli": [12, 20, 41, 48, 51, 53, 54, 63, 132, 133, 134, 136, 138, 152, 163, 167, 170, 427, 643, 680, 690, 710, 749, 862, 863, 874, 897, 1055, 1062, 1071], "great": [12, 76, 136, 138, 193, 213, 223, 408, 527, 542, 698, 757, 862, 1112, 1117], "static": [12, 22, 63, 95, 101, 102, 108, 109, 111, 131, 133, 135, 137, 138, 148, 158, 192, 193, 200, 206, 209, 216, 219, 223, 247, 256, 258, 265, 301, 307, 370, 376, 380, 383, 385, 387, 394, 396, 398, 400, 405, 406, 411, 416, 417, 421, 423, 432, 446, 454, 466, 467, 468, 469, 470, 471, 475, 476, 479, 480, 483, 484, 485, 490, 492, 503, 512, 521, 526, 530, 533, 544, 549, 552, 555, 571, 575, 577, 581, 590, 593, 594, 611, 618, 619, 620, 621, 622, 623, 628, 637, 666, 668, 670, 671, 675, 686, 689, 695, 700, 707, 709, 710, 716, 735, 753, 757, 759, 853, 899, 902, 904, 906, 915, 921, 928, 932, 933, 934, 936, 937, 938, 939, 941, 1069, 1104, 1107, 1109, 1110, 1111], "It": [12, 20, 37, 41, 43, 53, 57, 60, 76, 119, 130, 131, 132, 133, 136, 137, 138, 141, 142, 151, 153, 155, 159, 160, 164, 169, 170, 183, 192, 193, 200, 206, 209, 216, 219, 223, 231, 236, 238, 247, 250, 253, 256, 314, 315, 331, 342, 346, 364, 369, 392, 394, 408, 426, 431, 436, 439, 448, 450, 469, 473, 476, 478, 480, 530, 610, 622, 639, 640, 676, 686, 710, 721, 757, 784, 785, 796, 799, 814, 853, 854, 862, 863, 884, 889, 891, 892, 894, 907, 911, 916, 932, 933, 943, 948, 953, 955, 966, 974, 978, 979, 1012, 1028, 1033, 1037, 1040, 1046, 1061, 1070, 1082, 1092, 1093, 1112, 1114, 1115, 1117], "let": [12, 16, 40, 57, 60, 61, 131, 132, 133, 136, 137, 138, 141, 146, 153, 154, 155, 160, 161, 193, 207, 211, 213, 219, 223, 250, 253, 255, 257, 260, 275, 279, 390, 398, 408, 410, 412, 419, 422, 426, 428, 430, 435, 448, 454, 472, 477, 478, 481, 487, 504, 518, 528, 529, 541, 545, 547, 548, 598, 604, 610, 616, 626, 643, 671, 675, 680, 684, 726, 730, 749, 757, 765, 792, 801, 814, 819, 854, 861, 862, 874, 887, 889, 890, 904, 913, 915, 931, 933, 943, 946, 947, 953, 955, 959, 996, 1003, 1005, 1012, 1020, 1042, 1050, 1055, 1062, 1066, 1071, 1074, 1092, 1112], "me": [12, 22, 30, 35, 57, 60, 111, 125, 130, 131, 132, 133, 136, 137, 138, 141, 142, 146, 159, 160, 161, 163, 167, 190, 192, 193, 217, 268, 301, 390, 392, 393, 408, 411, 515, 539, 604, 639, 680, 686, 730, 792, 819, 854, 862, 863, 874, 878, 931, 934, 943, 959, 962, 1003, 1055, 1059, 1093], "focu": [12, 134, 138, 141, 155, 163, 167, 250, 253, 397, 401, 433, 625, 654, 854, 862, 864, 979, 1062, 1086, 1115], "myself": [12, 127, 128, 138, 159, 167, 182, 198, 730, 792, 814, 819, 836], "ey": [12, 30, 35, 216, 219, 229, 251, 990], "toward": [12, 163, 307, 390, 450, 579], "consist": [12, 26, 163, 178, 219, 292, 309, 323, 326, 364, 366, 404, 469, 478, 528, 817, 891, 925, 979, 980, 983, 1024, 1033, 1057, 1081], "won": [12, 141, 142, 219, 249, 287, 321, 388, 413, 477, 480, 530, 680, 686, 725, 737, 862, 874, 881, 934, 956, 1005, 1063], "break": [12, 34, 36, 124, 154, 163, 164, 169, 176, 182, 183, 191, 203, 206, 212, 213, 216, 219, 222, 223, 226, 229, 244, 251, 265, 293, 358, 362, 363, 370, 376, 380, 383, 387, 390, 394, 396, 398, 400, 405, 406, 408, 569, 600, 610, 612, 619, 628, 654, 662, 666, 687, 700, 707, 709, 710, 747, 879, 880, 889, 915, 921, 928, 959, 967, 1005, 1063, 1071], "move": [12, 52, 61, 97, 111, 115, 119, 127, 128, 132, 142, 160, 168, 171, 182, 193, 209, 234, 237, 246, 247, 258, 267, 268, 285, 286, 301, 304, 408, 409, 422, 466, 469, 504, 529, 530, 537, 538, 539, 540, 542, 588, 634, 654, 666, 678, 682, 685, 687, 688, 691, 698, 699, 700, 706, 707, 709, 710, 726, 759, 781, 784, 785, 786, 787, 820, 821, 822, 823, 826, 827, 828, 829, 831, 837, 853, 854, 878, 879, 916, 949, 986, 1088, 1111, 1112, 1113, 1120, 1121], "around": [12, 23, 35, 57, 60, 96, 111, 131, 132, 133, 138, 142, 152, 163, 167, 191, 217, 228, 235, 236, 238, 258, 282, 347, 422, 436, 438, 447, 473, 528, 624, 627, 629, 679, 681, 709, 710, 757, 762, 889, 904, 925, 928, 949, 955, 971, 975, 977, 999, 1051, 1055, 1057, 1061, 1062, 1076, 1077, 1080], "last": [12, 57, 60, 111, 127, 131, 132, 133, 148, 153, 163, 164, 170, 182, 183, 190, 198, 200, 203, 206, 207, 216, 219, 229, 244, 249, 251, 265, 292, 298, 305, 307, 374, 392, 556, 558, 559, 560, 561, 565, 568, 657, 660, 661, 662, 708, 710, 757, 817, 820, 823, 839, 848, 850, 853, 881, 886, 894, 903, 908, 910, 915, 930, 941, 952, 953, 954, 955, 959, 963, 967, 968, 974, 975, 980, 988, 996, 997, 1001, 1003, 1006, 1007, 1017, 1044, 1050, 1052, 1063, 1066, 1071, 1079, 1080, 1093, 1100, 1130], "least": [12, 23, 35, 57, 60, 63, 79, 133, 141, 155, 159, 161, 163, 170, 171, 190, 192, 193, 207, 209, 219, 223, 249, 253, 255, 265, 267, 322, 340, 346, 347, 360, 386, 389, 390, 398, 414, 426, 497, 583, 626, 676, 678, 685, 690, 693, 720, 753, 755, 789, 854, 856, 864, 902, 925, 929, 950, 959, 963, 979, 980, 990, 1013, 1061, 1100], "ha": [12, 20, 23, 26, 27, 41, 43, 51, 54, 61, 76, 108, 109, 118, 128, 130, 131, 132, 133, 134, 135, 136, 138, 141, 142, 146, 151, 153, 155, 159, 160, 163, 167, 169, 170, 171, 181, 183, 187, 188, 190, 191, 193, 200, 203, 206, 209, 211, 213, 214, 216, 219, 223, 226, 229, 232, 240, 241, 244, 247, 248, 249, 250, 251, 253, 255, 256, 258, 261, 264, 265, 271, 273, 285, 287, 294, 296, 298, 307, 321, 330, 333, 343, 346, 347, 356, 359, 367, 368, 375, 381, 382, 385, 389, 391, 392, 398, 404, 408, 410, 413, 419, 421, 422, 423, 424, 426, 427, 428, 431, 436, 437, 440, 448, 453, 467, 470, 484, 501, 512, 527, 529, 530, 531, 532, 535, 536, 537, 540, 541, 544, 551, 561, 582, 583, 600, 601, 604, 613, 614, 619, 620, 622, 631, 633, 636, 639, 648, 649, 650, 654, 663, 664, 665, 668, 676, 684, 686, 689, 690, 692, 698, 708, 710, 711, 721, 726, 751, 753, 755, 757, 767, 770, 771, 773, 777, 784, 788, 789, 790, 792, 794, 795, 796, 802, 813, 815, 820, 846, 854, 860, 861, 862, 863, 872, 874, 877, 883, 889, 899, 901, 902, 904, 912, 913, 915, 916, 917, 918, 925, 929, 931, 945, 947, 948, 950, 952, 953, 954, 957, 959, 962, 967, 968, 969, 977, 979, 982, 985, 986, 990, 995, 996, 1000, 1017, 1037, 1052, 1054, 1055, 1061, 1062, 1066, 1067, 1071, 1079, 1080, 1082, 1084, 1092, 1094, 1099, 1101, 1112, 1114, 1115, 1117, 1120, 1121], "extens": [12, 13, 22, 27, 30, 35, 38, 126, 141, 163, 190, 192, 200, 206, 216, 219, 287, 368, 408, 436, 527, 665, 708, 711, 782, 794, 931, 962, 979, 982, 1087, 1092], "interfac": [12, 51, 54, 70, 71, 72, 76, 78, 80, 83, 104, 127, 128, 131, 148, 150, 151, 158, 167, 193, 207, 209, 217, 221, 239, 240, 247, 256, 274, 282, 290, 291, 301, 302, 303, 307, 310, 319, 320, 408, 414, 415, 420, 425, 426, 427, 428, 431, 432, 438, 446, 450, 452, 453, 475, 483, 485, 504, 526, 551, 599, 601, 623, 665, 672, 673, 689, 690, 710, 853, 854, 859, 861, 863, 897, 931, 953, 1070, 1111, 1116, 1117, 1123, 1126, 1129], "lot": [12, 63, 67, 90, 95, 128, 130, 131, 133, 138, 142, 160, 163, 167, 183, 260, 279, 304, 340, 389, 394, 398, 404, 418, 521, 598, 710, 741, 751, 757, 786, 787, 796, 817, 853, 862, 879, 931, 946, 974, 979, 1001, 1057, 1113], "littl": [12, 26, 42, 133, 135, 138, 141, 142, 151, 163, 191, 200, 206, 207, 209, 216, 219, 241, 247, 258, 319, 369, 397, 398, 409, 538, 541, 544, 600, 606, 686, 689, 713, 854, 856, 862, 910, 932, 1002, 1074], "maintain": [12, 27, 29, 52, 68, 78, 128, 130, 131, 138, 160, 169, 190, 192, 200, 204, 206, 216, 219, 228, 301, 315, 394, 408, 576, 626, 637, 735, 757, 765, 767, 769, 900, 931, 932, 933, 935, 941, 946, 947, 948, 949, 997, 1060, 1114], "packag": [12, 20, 22, 28, 30, 59, 95, 102, 111, 114, 120, 121, 127, 132, 146, 161, 163, 164, 167, 168, 170, 177, 182, 188, 190, 191, 192, 198, 200, 204, 206, 207, 210, 214, 216, 217, 219, 220, 222, 225, 228, 231, 249, 259, 260, 264, 268, 273, 279, 301, 302, 303, 304, 308, 319, 320, 411, 413, 416, 417, 710, 730, 853, 861, 862, 933, 938, 941, 956, 979, 986, 1008, 1009, 1011, 1012, 1013, 1014, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1061, 1068, 1072, 1073, 1074, 1079, 1080, 1091, 1092, 1093, 1095, 1096, 1101, 1114], "virtual": [12, 28, 67, 78, 104, 105, 127, 133, 136, 138, 158, 163, 167, 178, 182, 198, 214, 217, 220, 231, 236, 238, 240, 247, 256, 257, 258, 259, 260, 264, 275, 278, 279, 308, 319, 320, 423, 427, 429, 432, 433, 438, 440, 446, 450, 455, 457, 458, 459, 462, 463, 464, 465, 466, 467, 475, 480, 524, 526, 551, 598, 599, 600, 623, 665, 673, 684, 686, 690, 710, 716, 788, 793, 796, 855, 861, 863, 872, 881, 897, 915, 925, 979, 982, 1008, 1009, 1010, 1053, 1055, 1056, 1057, 1061, 1072, 1074, 1086, 1089, 1092, 1111, 1118, 1127], "environ": [12, 20, 28, 63, 73, 76, 95, 102, 111, 119, 127, 131, 142, 146, 167, 173, 182, 183, 188, 198, 201, 204, 214, 217, 220, 231, 237, 240, 246, 259, 260, 264, 267, 268, 275, 278, 279, 302, 303, 314, 315, 433, 453, 467, 477, 478, 480, 481, 546, 684, 685, 710, 787, 791, 795, 796, 817, 818, 837, 853, 854, 894, 911, 916, 932, 941, 942, 943, 948, 950, 962, 982, 984, 1008, 1009, 1010, 1053, 1055, 1056, 1057, 1061, 1062, 1072, 1074, 1086, 1087, 1089, 1092, 1093, 1099, 1103, 1105], "repo": [12, 113, 142, 146, 158, 161, 172, 287, 292, 301, 305, 306, 493, 494, 495, 496, 498, 499, 500, 730, 757, 759, 945, 1101], "creat": [12, 16, 20, 23, 37, 40, 42, 52, 57, 59, 60, 61, 75, 97, 99, 100, 107, 111, 114, 117, 124, 127, 131, 132, 133, 135, 138, 141, 142, 146, 148, 150, 151, 152, 167, 168, 169, 170, 171, 172, 183, 188, 196, 201, 206, 207, 209, 214, 216, 219, 223, 228, 231, 236, 237, 238, 246, 247, 255, 258, 259, 260, 264, 265, 267, 268, 270, 275, 279, 301, 306, 325, 402, 404, 410, 411, 424, 426, 428, 431, 432, 433, 446, 447, 448, 452, 454, 455, 469, 470, 473, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 503, 526, 528, 531, 542, 582, 584, 600, 615, 618, 620, 629, 631, 654, 668, 671, 680, 686, 687, 699, 700, 705, 706, 708, 709, 710, 713, 716, 720, 721, 726, 728, 730, 732, 735, 741, 753, 757, 786, 787, 788, 789, 790, 791, 797, 799, 800, 804, 805, 806, 808, 810, 812, 815, 821, 822, 824, 826, 827, 828, 829, 831, 837, 853, 861, 862, 863, 865, 866, 867, 869, 870, 872, 874, 876, 882, 883, 884, 891, 892, 893, 894, 899, 900, 901, 907, 908, 911, 914, 915, 916, 923, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 946, 947, 952, 953, 955, 957, 959, 963, 967, 968, 969, 971, 985, 986, 995, 996, 997, 1006, 1009, 1010, 1011, 1023, 1031, 1032, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1055, 1057, 1058, 1059, 1061, 1067, 1070, 1074, 1083, 1092, 1094, 1095, 1114], "popul": [12, 133, 137, 223, 256, 713], "yourself": [12, 131, 138, 142, 153, 209, 353, 529, 546, 551, 762, 819, 902, 925, 978, 1117], "root": [12, 36, 61, 78, 111, 113, 130, 136, 138, 141, 142, 153, 158, 159, 160, 167, 171, 181, 203, 209, 219, 223, 226, 229, 244, 247, 251, 261, 265, 286, 287, 292, 321, 388, 397, 401, 404, 413, 421, 427, 481, 547, 603, 708, 721, 757, 758, 759, 788, 792, 794, 813, 817, 829, 830, 836, 839, 841, 842, 843, 845, 846, 848, 854, 861, 862, 863, 865, 866, 870, 879, 884, 889, 897, 917, 931, 934, 943, 945, 954, 1033, 1042, 1043, 1083, 1092], "bin": [12, 22, 48, 61, 111, 127, 130, 132, 142, 151, 154, 164, 181, 191, 200, 203, 206, 211, 216, 219, 223, 226, 229, 241, 244, 249, 251, 261, 265, 301, 309, 411, 412, 413, 414, 416, 417, 418, 419, 422, 424, 470, 480, 481, 735, 757, 789, 792, 794, 799, 802, 813, 817, 818, 842, 843, 848, 861, 863, 879, 886, 889, 895, 909, 910, 919, 931, 932, 933, 943, 945, 948, 952, 958, 982, 1009, 1010, 1033, 1042, 1043, 1058, 1063, 1074, 1087, 1092, 1094, 1106], "activ": [12, 136, 146, 148, 171, 231, 626, 737, 739, 743, 751, 792, 794, 849, 1009, 1092, 1094], "txt": [12, 31, 40, 42, 111, 126, 133, 149, 150, 154, 157, 158, 159, 160, 161, 190, 192, 197, 200, 209, 210, 219, 231, 241, 292, 293, 333, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 424, 470, 477, 478, 480, 481, 482, 505, 508, 511, 512, 514, 517, 520, 523, 617, 708, 728, 783, 784, 785, 797, 801, 811, 821, 822, 823, 824, 828, 829, 836, 857, 861, 862, 863, 897, 920, 923, 927, 932, 933, 943, 954, 1001, 1024, 1042, 1094, 1095, 1098, 1101, 1103], "fedorish": [12, 730, 874, 1074], "your": [12, 41, 63, 100, 107, 111, 130, 131, 133, 134, 135, 136, 137, 138, 141, 142, 146, 147, 160, 163, 166, 167, 171, 183, 191, 192, 209, 217, 223, 236, 238, 240, 247, 250, 253, 282, 287, 298, 307, 309, 353, 388, 396, 398, 400, 405, 406, 408, 417, 427, 431, 452, 470, 473, 478, 481, 482, 543, 617, 618, 620, 621, 628, 634, 642, 666, 707, 709, 710, 732, 749, 757, 762, 783, 784, 785, 787, 794, 796, 797, 806, 807, 808, 809, 810, 811, 812, 818, 821, 822, 823, 824, 826, 835, 853, 854, 861, 863, 865, 866, 870, 874, 889, 891, 943, 946, 957, 968, 974, 979, 983, 1024, 1038, 1042, 1043, 1055, 1060, 1074, 1084, 1087, 1092, 1093, 1094, 1101, 1117], "mileag": [12, 236, 238, 1074, 1092], "might": [12, 26, 57, 59, 60, 130, 131, 132, 134, 136, 138, 141, 142, 146, 159, 161, 163, 171, 192, 200, 206, 211, 216, 219, 250, 253, 256, 287, 312, 384, 398, 408, 413, 422, 423, 428, 431, 452, 481, 535, 544, 663, 673, 686, 687, 688, 708, 732, 743, 747, 753, 757, 799, 854, 861, 862, 863, 874, 879, 888, 910, 917, 928, 943, 946, 954, 963, 966, 979, 1057, 1074, 1092, 1095, 1099], "vari": [12, 200, 206, 216, 219, 223, 236, 238, 259, 260, 278, 279, 324, 398, 582, 701, 757, 863, 948, 1070, 1074, 1092, 1112], "dnf": [12, 59, 127, 134, 142, 146, 160, 321, 414, 421, 497, 730, 758, 856, 874, 933, 945, 1074, 1099, 1101], "pandoc": 12, "graphviz": [12, 417, 933], "dia": [12, 203, 261, 839, 1012], "gtest": [12, 42, 63, 111, 158, 159, 160, 161, 321, 426, 427, 428, 430, 431, 433, 435, 448, 450, 451, 469, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 521, 528, 529, 530, 541, 542, 544, 545, 546, 547, 548, 606, 631, 633, 636, 637, 638, 669, 675, 680, 684, 685, 686, 687, 689, 704, 705, 706, 708, 710, 1097], "devel": [12, 127, 142, 160, 414, 416, 421, 730, 1099, 1101], "markdown": [12, 22, 296, 1010], "handl": [12, 20, 28, 44, 72, 125, 131, 151, 163, 167, 168, 170, 172, 178, 191, 193, 198, 200, 204, 207, 208, 216, 221, 228, 240, 247, 257, 264, 265, 275, 301, 306, 308, 314, 315, 322, 362, 369, 374, 390, 394, 414, 475, 504, 526, 541, 551, 584, 588, 610, 619, 620, 621, 654, 656, 683, 686, 698, 699, 709, 710, 716, 720, 739, 751, 787, 790, 791, 853, 861, 876, 878, 879, 880, 881, 882, 883, 884, 886, 889, 891, 892, 894, 902, 908, 911, 914, 916, 919, 925, 928, 956, 974, 979, 980, 995, 1005, 1053, 1055, 1065, 1072, 1085, 1111, 1117, 1126], "jupyt": [12, 146, 151, 152, 154, 163, 164, 166, 174, 214, 216, 217, 219, 220, 249, 250, 253, 254, 260, 264, 270, 275, 279, 301, 306, 839, 979, 1057, 1058, 1062, 1122], "notebook": [12, 30, 146, 150, 151, 152, 154, 163, 166, 174, 207, 214, 217, 219, 220, 222, 225, 228, 231, 240, 243, 249, 250, 253, 254, 260, 264, 270, 275, 279, 286, 306, 979, 1057, 1062, 1122], "those": [12, 23, 76, 124, 131, 132, 138, 141, 146, 161, 163, 167, 172, 190, 192, 193, 200, 204, 209, 210, 211, 213, 219, 223, 255, 256, 257, 258, 260, 279, 286, 298, 301, 307, 312, 333, 388, 398, 408, 410, 412, 413, 414, 427, 428, 431, 432, 497, 541, 563, 604, 607, 614, 629, 664, 680, 688, 690, 708, 723, 726, 757, 784, 785, 801, 802, 854, 861, 862, 863, 928, 947, 948, 949, 950, 954, 955, 956, 962, 967, 978, 1019, 1029, 1050, 1060, 1071, 1072, 1079, 1092, 1114, 1115, 1117], "funki": [12, 16, 133], "graph": [12, 28, 76, 85, 201, 214, 228, 231, 264, 270, 301, 308, 403, 417, 423, 933, 947, 948, 1055, 1061], "histor": [12, 23, 76, 133, 155, 334, 347, 392, 625, 716, 795, 874, 929, 1046, 1104], "baggag": [12, 334, 347, 625, 929, 1046], "convert": [12, 16, 28, 40, 124, 152, 182, 190, 196, 200, 203, 206, 209, 213, 216, 219, 220, 223, 240, 265, 275, 286, 347, 369, 394, 404, 412, 417, 427, 477, 597, 604, 638, 639, 710, 711, 891, 931, 970, 1012, 1014, 1019, 1026, 1029, 1048, 1049, 1050, 1053, 1071], "draw": [12, 128, 171, 309, 344, 485, 678, 714, 718, 726, 747, 770], "svg": [12, 128], "ani": [12, 37, 43, 47, 115, 124, 127, 130, 131, 132, 133, 136, 138, 142, 146, 151, 155, 166, 169, 171, 183, 190, 192, 200, 206, 216, 219, 223, 234, 235, 236, 244, 260, 265, 279, 282, 287, 308, 309, 342, 386, 394, 408, 431, 436, 481, 482, 483, 484, 485, 497, 503, 515, 533, 536, 562, 600, 608, 613, 626, 629, 631, 648, 654, 672, 673, 676, 685, 686, 687, 689, 690, 698, 708, 715, 716, 728, 730, 749, 757, 767, 774, 784, 785, 794, 797, 804, 805, 808, 809, 810, 817, 829, 839, 854, 861, 862, 863, 866, 889, 900, 904, 924, 950, 952, 953, 954, 955, 959, 966, 967, 974, 977, 986, 991, 993, 1004, 1005, 1010, 1034, 1036, 1051, 1062, 1081, 1086, 1087, 1099, 1112, 1117], "That": [12, 82, 96, 97, 111, 130, 131, 132, 133, 136, 141, 142, 146, 155, 163, 167, 170, 209, 233, 237, 239, 253, 256, 258, 312, 376, 377, 380, 383, 387, 396, 400, 405, 406, 414, 427, 428, 438, 450, 452, 454, 471, 473, 481, 532, 536, 618, 628, 666, 692, 698, 699, 707, 709, 710, 784, 785, 787, 788, 790, 791, 793, 794, 803, 806, 807, 808, 809, 810, 811, 812, 817, 853, 854, 862, 865, 866, 867, 868, 869, 872, 890, 894, 908, 914, 916, 941, 942, 953, 979, 986, 1045, 1047, 1052, 1084, 1092, 1102, 1112], "sloppili": [12, 887], "track": [12, 134, 138, 146, 170, 190, 200, 206, 216, 219, 685, 730, 757, 758, 762, 794, 966], "opentrain": [12, 21, 27, 115, 128, 168, 175, 193, 309, 320, 1092, 1122], "recip": [12, 37, 123, 127, 131, 132, 302, 303, 388, 553], "sphinx": [13, 16, 22, 37, 63, 127, 128, 143, 307, 711, 1092], "togeth": [13, 23, 41, 48, 102, 104, 108, 109, 121, 138, 141, 142, 146, 151, 161, 163, 167, 171, 183, 192, 209, 236, 238, 255, 256, 258, 273, 309, 319, 365, 398, 399, 469, 481, 504, 526, 544, 545, 547, 548, 698, 700, 721, 734, 757, 784, 785, 843, 844, 862, 863, 893, 907, 931, 937, 941, 943, 946, 950, 1028, 1061, 1084, 1087, 1095, 1097, 1099, 1112, 1114], "form": [13, 28, 133, 138, 151, 155, 179, 200, 206, 207, 216, 219, 256, 258, 320, 385, 401, 440, 448, 450, 488, 489, 501, 600, 711, 757, 762, 765, 789, 839, 863, 990, 1009, 1012, 1045, 1047, 1050, 1051, 1057, 1066, 1087, 1092, 1112], "short": [13, 30, 33, 41, 104, 131, 138, 146, 159, 163, 167, 170, 171, 172, 182, 183, 200, 204, 205, 206, 211, 214, 216, 217, 221, 239, 255, 256, 257, 258, 259, 260, 279, 324, 340, 342, 347, 351, 352, 377, 386, 432, 446, 475, 482, 526, 531, 535, 710, 753, 759, 762, 796, 817, 842, 861, 863, 874, 881, 891, 913, 918, 951, 965, 988, 991, 1007, 1082, 1092, 1094, 1112], "video": [13, 21, 125, 134, 136, 138, 149, 163, 166, 167, 170, 175, 188, 191, 192, 214, 258, 261, 264, 409, 676, 854, 862, 1055, 1062, 1074], "explain": [13, 61, 63, 95, 125, 130, 136, 142, 155, 163, 167, 169, 193, 204, 209, 211, 213, 214, 222, 223, 260, 279, 286, 316, 319, 388, 398, 518, 797, 817, 820, 854, 863, 919, 1002, 1055, 1092, 1117], "case": [13, 23, 41, 95, 102, 104, 107, 130, 131, 132, 135, 138, 141, 142, 146, 152, 155, 167, 169, 171, 173, 193, 206, 207, 213, 219, 223, 226, 235, 236, 238, 239, 247, 250, 253, 265, 282, 309, 331, 338, 357, 359, 390, 392, 410, 413, 416, 425, 432, 436, 439, 475, 477, 478, 481, 490, 492, 512, 526, 533, 543, 582, 588, 608, 620, 626, 643, 654, 666, 673, 676, 684, 698, 708, 709, 710, 730, 757, 770, 773, 785, 789, 792, 799, 813, 829, 846, 853, 854, 863, 873, 874, 880, 891, 910, 915, 929, 936, 938, 941, 943, 945, 947, 954, 955, 985, 986, 997, 1001, 1024, 1066, 1082, 1092, 1100, 1115], "netide": 13, "f\u00f6rderantrag": 13, "miscellan": [13, 28, 88, 114, 167, 175, 188, 191, 198, 201, 202, 204, 210, 212, 214, 215, 220, 221, 222, 225, 228, 230, 238, 243, 245, 249, 250, 253, 263, 264, 266, 269, 272, 287, 288, 289, 290, 291, 292, 301, 309, 320, 432, 446, 469, 475, 476, 479, 480, 483, 484, 485, 490, 492, 503, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 635, 666, 682, 691, 699, 707, 709, 710, 711, 853, 883, 884, 889, 892, 894, 908, 911, 956, 978, 1008, 1012, 1013, 1014, 1024, 1027, 1035, 1036, 1038, 1039, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1057, 1061, 1062, 1065, 1071, 1074, 1078, 1086, 1089, 1096, 1111, 1112, 1113, 1122], "s5": [15, 22, 127, 925, 929, 1126], "slide": [15, 22, 23, 26, 35, 127, 128, 131, 149, 156, 158, 163, 167, 171, 172, 173, 182, 183, 192, 193, 209, 235, 236, 247, 312, 315, 320, 521, 769, 926, 930, 1027, 1071, 1108, 1109, 1110, 1118, 1119, 1125, 1126, 1128, 1129, 1130], "work": [15, 23, 26, 38, 40, 41, 42, 55, 59, 69, 76, 78, 96, 97, 102, 104, 107, 113, 116, 117, 127, 128, 130, 131, 132, 134, 136, 137, 138, 141, 142, 146, 155, 159, 160, 161, 170, 171, 173, 183, 188, 190, 192, 200, 201, 204, 206, 207, 209, 214, 216, 219, 223, 228, 237, 240, 246, 247, 249, 250, 253, 260, 261, 264, 265, 267, 268, 270, 279, 287, 301, 306, 307, 309, 314, 315, 320, 321, 365, 366, 386, 388, 398, 408, 410, 411, 413, 414, 416, 417, 419, 420, 422, 424, 427, 428, 431, 432, 433, 446, 469, 473, 475, 476, 477, 479, 480, 481, 483, 484, 485, 503, 521, 526, 546, 575, 582, 615, 617, 619, 627, 629, 631, 674, 680, 684, 685, 686, 690, 692, 699, 706, 709, 710, 711, 720, 725, 735, 737, 741, 755, 757, 762, 765, 779, 783, 784, 785, 786, 787, 790, 791, 792, 794, 796, 801, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 817, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 837, 839, 841, 850, 853, 854, 862, 866, 870, 874, 876, 881, 882, 884, 887, 890, 892, 894, 899, 908, 911, 913, 914, 916, 929, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 946, 948, 954, 955, 958, 977, 980, 981, 982, 1001, 1007, 1009, 1010, 1032, 1042, 1043, 1055, 1062, 1065, 1074, 1076, 1077, 1079, 1080, 1082, 1092, 1101, 1112, 1117, 1118, 1124], "progress": [15, 127, 320, 711, 819, 1101], "web": [15, 22, 70, 72, 76, 114, 128, 138, 167, 170, 191, 194, 240, 264, 710, 1055, 1062, 1071, 1074], "note": [15, 30, 34, 38, 42, 58, 61, 111, 114, 116, 130, 131, 133, 138, 151, 152, 163, 182, 190, 192, 203, 204, 206, 231, 260, 265, 279, 292, 293, 410, 414, 416, 420, 450, 497, 521, 530, 531, 537, 542, 601, 643, 663, 664, 665, 676, 678, 684, 685, 686, 688, 716, 757, 774, 784, 785, 844, 862, 880, 891, 943, 996, 999, 1001, 1005, 1060, 1074, 1076, 1079, 1099], "screencast": [15, 22, 114, 1055], "written": [15, 40, 41, 76, 104, 130, 131, 136, 146, 169, 219, 303, 365, 368, 384, 392, 394, 398, 411, 448, 538, 604, 617, 637, 711, 796, 883, 890, 925, 932, 933, 941, 973, 980, 1010, 1114], "new": [15, 30, 40, 42, 47, 48, 53, 61, 63, 76, 105, 128, 131, 133, 134, 135, 136, 137, 138, 141, 146, 158, 163, 183, 200, 204, 206, 216, 219, 223, 231, 241, 258, 264, 265, 287, 312, 318, 347, 377, 381, 382, 390, 394, 408, 411, 431, 433, 451, 455, 467, 470, 474, 477, 480, 481, 493, 494, 495, 496, 498, 499, 504, 510, 518, 527, 528, 533, 536, 582, 584, 595, 597, 598, 603, 620, 624, 628, 630, 631, 635, 636, 637, 639, 642, 653, 664, 667, 671, 673, 675, 677, 678, 682, 683, 684, 685, 686, 687, 691, 692, 699, 701, 703, 707, 709, 710, 714, 751, 757, 765, 789, 813, 836, 854, 857, 861, 862, 863, 886, 887, 888, 897, 899, 900, 906, 918, 949, 968, 983, 986, 995, 1034, 1059, 1060, 1080, 1087, 1092, 1111, 1112, 1113, 1115], "draft": [15, 28, 163, 710, 853, 1007, 1053, 1054, 1072], "convers": [16, 170, 182, 189, 192, 193, 200, 205, 206, 209, 212, 215, 216, 221, 224, 227, 245, 256, 258, 262, 266, 272, 301, 325, 340, 354, 363, 370, 376, 380, 383, 387, 394, 396, 400, 405, 406, 410, 447, 509, 597, 601, 625, 627, 628, 630, 666, 707, 709, 710, 760, 1005, 1022, 1026, 1029, 1040], "old": [16, 28, 127, 128, 131, 133, 136, 161, 171, 203, 204, 219, 251, 261, 265, 320, 343, 382, 403, 408, 431, 504, 557, 564, 569, 584, 616, 622, 625, 630, 631, 672, 690, 701, 714, 720, 730, 749, 854, 862, 918, 994, 1000, 1012, 1033, 1082, 1113], "latex": [16, 22, 23, 504], "beamer": [16, 22, 23], "To": [16, 28, 43, 44, 45, 49, 53, 54, 59, 76, 100, 114, 130, 131, 133, 135, 146, 155, 159, 163, 178, 190, 200, 206, 216, 219, 220, 223, 227, 235, 236, 238, 240, 260, 275, 279, 282, 334, 337, 392, 404, 428, 474, 482, 582, 596, 607, 623, 625, 666, 682, 705, 709, 710, 730, 734, 745, 757, 786, 792, 853, 854, 861, 862, 867, 869, 882, 891, 947, 956, 970, 1014, 1020, 1043, 1048, 1049, 1050, 1053, 1061, 1071], "put": [16, 56, 67, 78, 124, 130, 131, 132, 159, 167, 282, 410, 414, 418, 419, 477, 526, 612, 636, 672, 698, 726, 734, 747, 749, 774, 854, 862, 891, 916, 931, 946, 949, 954, 1012, 1097], "more": [16, 20, 26, 28, 41, 43, 57, 60, 63, 67, 76, 80, 88, 95, 99, 104, 111, 124, 128, 131, 132, 135, 136, 138, 141, 142, 144, 146, 152, 153, 155, 160, 163, 167, 168, 169, 170, 171, 172, 173, 175, 177, 182, 183, 188, 190, 191, 192, 193, 194, 198, 201, 204, 205, 207, 208, 209, 210, 212, 213, 214, 217, 220, 221, 222, 224, 225, 227, 231, 235, 236, 237, 238, 242, 245, 246, 256, 257, 258, 265, 267, 268, 272, 274, 282, 287, 288, 289, 290, 291, 292, 304, 306, 312, 319, 320, 331, 336, 340, 343, 347, 357, 358, 359, 368, 370, 376, 377, 380, 383, 387, 388, 393, 394, 396, 398, 400, 402, 403, 404, 405, 406, 410, 413, 415, 416, 419, 432, 439, 446, 448, 452, 453, 464, 470, 475, 477, 480, 504, 521, 526, 530, 534, 583, 597, 598, 599, 611, 612, 613, 614, 615, 616, 618, 619, 620, 621, 622, 623, 625, 628, 635, 636, 647, 654, 663, 666, 667, 675, 676, 678, 680, 682, 683, 685, 686, 689, 691, 699, 700, 707, 708, 709, 710, 713, 716, 728, 730, 735, 741, 743, 745, 749, 751, 753, 757, 783, 788, 793, 817, 820, 850, 854, 856, 860, 861, 862, 863, 874, 880, 883, 886, 889, 900, 902, 913, 917, 919, 925, 929, 931, 932, 933, 941, 943, 947, 948, 949, 955, 957, 959, 963, 964, 965, 966, 970, 973, 974, 978, 979, 981, 985, 986, 997, 1008, 1011, 1012, 1013, 1014, 1024, 1026, 1027, 1033, 1035, 1036, 1038, 1039, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1056, 1057, 1060, 1061, 1062, 1063, 1065, 1067, 1068, 1071, 1072, 1074, 1077, 1081, 1086, 1087, 1089, 1091, 1093, 1094, 1096, 1101, 1105, 1112, 1114, 1115, 1122], "precis": [16, 163, 167, 223, 240, 264, 324, 342, 606, 701, 757, 1000, 1055], "restructuredtext": [16, 22, 30, 31, 32, 33, 34, 36, 711], "turn": [16, 73, 108, 109, 131, 133, 136, 141, 142, 163, 167, 183, 192, 209, 255, 301, 398, 413, 414, 450, 469, 476, 633, 648, 813, 854, 861, 862, 863, 931, 933, 937, 947, 955, 960, 961, 971, 973, 1084], "rst2s5": 16, "tool": [16, 30, 59, 66, 111, 138, 142, 147, 163, 171, 173, 183, 193, 219, 237, 246, 261, 266, 267, 301, 304, 306, 319, 320, 321, 366, 401, 403, 404, 408, 600, 654, 672, 710, 781, 787, 788, 801, 853, 863, 874, 877, 932, 933, 941, 945, 979, 980, 983, 1010, 1086, 1110, 1112, 1114, 1116, 1123], "thi": [16, 23, 27, 28, 29, 37, 38, 41, 42, 43, 48, 51, 52, 55, 57, 59, 60, 61, 63, 67, 75, 76, 82, 83, 87, 88, 95, 102, 104, 107, 108, 109, 111, 114, 121, 125, 128, 130, 131, 132, 134, 135, 136, 137, 146, 148, 150, 151, 153, 155, 157, 158, 159, 160, 163, 167, 168, 169, 170, 171, 172, 173, 183, 190, 192, 193, 200, 203, 204, 206, 209, 211, 213, 214, 216, 219, 222, 223, 229, 232, 236, 238, 240, 247, 255, 256, 258, 260, 265, 275, 279, 285, 287, 292, 301, 304, 307, 319, 320, 322, 326, 333, 334, 347, 356, 357, 381, 385, 386, 388, 389, 390, 392, 397, 398, 408, 412, 413, 418, 419, 420, 424, 430, 438, 439, 450, 452, 454, 473, 475, 478, 480, 486, 487, 488, 489, 490, 491, 492, 493, 497, 498, 501, 502, 504, 505, 508, 511, 512, 514, 515, 517, 518, 520, 521, 523, 526, 528, 529, 530, 532, 533, 536, 538, 539, 541, 544, 549, 552, 555, 557, 559, 560, 563, 571, 575, 577, 581, 583, 588, 590, 591, 593, 594, 598, 601, 604, 608, 610, 611, 612, 613, 614, 615, 616, 618, 619, 620, 621, 622, 623, 626, 635, 636, 637, 648, 654, 656, 657, 660, 661, 662, 663, 664, 665, 666, 671, 674, 676, 678, 679, 682, 684, 686, 688, 689, 690, 691, 698, 699, 700, 701, 707, 708, 709, 710, 711, 716, 721, 726, 730, 732, 739, 753, 757, 762, 769, 777, 784, 785, 788, 789, 796, 799, 801, 802, 811, 813, 814, 817, 822, 824, 854, 859, 860, 861, 862, 863, 866, 873, 874, 880, 887, 888, 889, 890, 891, 895, 898, 907, 910, 919, 920, 923, 924, 927, 929, 932, 933, 935, 941, 943, 944, 945, 946, 947, 949, 950, 951, 952, 953, 956, 959, 961, 963, 965, 967, 974, 977, 978, 979, 981, 983, 990, 993, 995, 996, 997, 1000, 1001, 1003, 1005, 1006, 1007, 1011, 1027, 1042, 1057, 1058, 1059, 1060, 1061, 1062, 1066, 1071, 1072, 1073, 1074, 1075, 1076, 1080, 1083, 1086, 1087, 1092, 1094, 1097, 1098, 1099, 1101, 1103, 1104, 1112, 1114, 1115, 1117, 1120, 1121, 1127], "sens": [16, 76, 133, 135, 152, 155, 160, 163, 182, 423, 431, 448, 533, 544, 551, 598, 626, 639, 718, 757, 796, 863, 887, 910, 917, 924, 974, 1004, 1060, 1115], "entir": [16, 23, 29, 78, 108, 109, 124, 128, 131, 132, 133, 136, 142, 146, 155, 160, 167, 170, 188, 191, 192, 200, 214, 217, 220, 223, 235, 236, 238, 240, 250, 257, 260, 264, 270, 275, 279, 338, 367, 371, 378, 381, 386, 394, 402, 410, 428, 634, 665, 685, 757, 784, 785, 790, 814, 819, 828, 836, 854, 861, 863, 866, 872, 889, 900, 933, 962, 966, 980, 985, 986, 1003, 1005, 1024, 1055, 1092, 1095, 1098, 1115], "site": [16, 22, 26, 37, 59, 63, 114, 127, 128, 131, 143, 146, 158, 159, 160, 164, 190, 200, 206, 216, 219, 543, 689, 796, 1059, 1079, 1080, 1087, 1094, 1101], "massag": [16, 30, 121, 142, 160, 236, 238, 711, 861, 933], "itself": [16, 26, 131, 133, 159, 163, 169, 200, 206, 216, 219, 265, 290, 336, 368, 404, 413, 419, 447, 448, 471, 481, 531, 538, 597, 674, 689, 698, 701, 732, 735, 757, 777, 783, 784, 785, 799, 817, 846, 916, 929, 943, 971, 974, 979, 1000, 1040, 1084, 1101], "upon": [16, 26, 67, 95, 133, 134, 163, 167, 171, 178, 217, 249, 256, 390, 408, 436, 487, 504, 543, 561, 684, 701, 730, 863, 929, 1017, 1084, 1092, 1112], "you": [16, 20, 41, 56, 57, 60, 107, 111, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 146, 147, 151, 152, 153, 155, 159, 160, 163, 167, 169, 170, 171, 183, 188, 190, 191, 192, 193, 200, 203, 206, 207, 209, 213, 214, 216, 217, 219, 223, 231, 240, 247, 250, 253, 256, 258, 260, 264, 279, 287, 292, 298, 301, 304, 306, 309, 332, 333, 346, 362, 388, 392, 408, 450, 470, 471, 472, 473, 476, 477, 478, 481, 484, 518, 529, 530, 536, 541, 544, 545, 547, 548, 562, 583, 591, 598, 604, 612, 613, 617, 634, 640, 668, 678, 689, 705, 706, 708, 730, 732, 749, 757, 762, 783, 784, 785, 788, 789, 792, 796, 797, 803, 807, 809, 811, 817, 818, 819, 821, 822, 823, 824, 828, 829, 854, 857, 861, 862, 863, 864, 865, 866, 868, 870, 873, 874, 878, 880, 884, 889, 891, 899, 900, 901, 902, 903, 907, 931, 932, 933, 934, 936, 939, 943, 946, 947, 950, 955, 956, 965, 967, 978, 979, 983, 986, 999, 1005, 1012, 1021, 1023, 1038, 1042, 1043, 1052, 1055, 1061, 1071, 1074, 1080, 1092, 1093, 1094, 1101, 1104, 1112, 1117], "view": [16, 61, 136, 137, 141, 152, 154, 167, 169, 235, 236, 240, 247, 282, 319, 336, 338, 401, 628, 666, 675, 677, 709, 710, 784, 785, 794, 801, 854, 863, 865, 986, 1054, 1112, 1115, 1117], "state": [16, 43, 111, 127, 138, 143, 163, 171, 193, 200, 203, 206, 216, 217, 219, 341, 358, 390, 408, 469, 476, 485, 503, 528, 634, 668, 698, 715, 753, 774, 788, 846, 856, 900, 904, 915, 916, 953, 959], "rather": [16, 63, 83, 127, 131, 133, 134, 135, 136, 137, 138, 141, 142, 146, 155, 159, 163, 167, 183, 192, 210, 211, 287, 312, 324, 366, 398, 399, 408, 426, 479, 482, 483, 484, 485, 503, 521, 528, 530, 544, 551, 562, 582, 607, 613, 627, 648, 698, 700, 730, 757, 762, 794, 796, 842, 854, 861, 862, 863, 865, 872, 877, 900, 901, 928, 932, 947, 972, 979, 982, 990, 1030, 1031, 1034, 1045, 1047, 1062, 1072, 1094, 1099, 1112, 1114], "huge": [16, 137, 142, 152, 439, 675, 735, 753, 978, 980, 1088], "tabl": [16, 37, 61, 63, 124, 128, 130, 163, 169, 170, 187, 195, 200, 206, 207, 209, 210, 213, 214, 216, 219, 226, 231, 265, 320, 324, 339, 353, 354, 358, 359, 363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 606, 628, 666, 675, 707, 709, 710, 796, 1003, 1012, 1044, 1046, 1070, 1071], "isnot": 16, "big": [16, 102, 128, 131, 132, 138, 163, 167, 187, 193, 207, 214, 217, 260, 279, 301, 347, 392, 404, 478, 533, 563, 626, 690, 877, 1055, 1070, 1127], "fat": [16, 128, 130, 134, 138, 207, 620, 690, 788, 1070], "sai": [16, 23, 63, 64, 104, 119, 130, 131, 132, 133, 135, 136, 137, 138, 141, 142, 146, 151, 152, 163, 167, 204, 209, 231, 250, 253, 257, 259, 260, 278, 279, 287, 301, 392, 398, 404, 414, 424, 428, 437, 448, 454, 470, 472, 478, 512, 521, 530, 540, 588, 601, 613, 622, 626, 654, 658, 660, 661, 662, 664, 669, 676, 679, 680, 685, 716, 730, 757, 796, 799, 801, 836, 854, 861, 863, 874, 878, 889, 891, 901, 913, 924, 928, 934, 943, 946, 947, 957, 979, 995, 1007, 1012, 1042, 1064, 1066, 1101, 1115], "file": [16, 26, 28, 32, 33, 34, 36, 38, 42, 45, 48, 51, 52, 53, 54, 66, 76, 78, 83, 88, 89, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 109, 111, 115, 118, 123, 124, 127, 128, 130, 131, 132, 133, 136, 137, 142, 146, 150, 153, 155, 157, 158, 159, 160, 162, 163, 165, 167, 168, 170, 171, 172, 173, 178, 180, 181, 182, 183, 188, 191, 192, 193, 196, 197, 198, 201, 202, 204, 205, 206, 207, 209, 210, 211, 213, 214, 216, 217, 220, 221, 222, 223, 225, 227, 230, 231, 235, 236, 237, 240, 244, 246, 249, 250, 252, 253, 259, 260, 262, 266, 267, 271, 273, 274, 278, 279, 286, 287, 288, 289, 290, 291, 298, 301, 302, 303, 304, 305, 306, 312, 314, 315, 319, 330, 333, 334, 364, 365, 367, 368, 369, 370, 376, 380, 383, 387, 391, 396, 400, 402, 404, 405, 406, 409, 411, 413, 415, 416, 417, 422, 423, 426, 432, 446, 469, 470, 471, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 503, 505, 508, 511, 513, 514, 517, 520, 523, 526, 531, 533, 545, 546, 547, 548, 554, 606, 610, 617, 620, 628, 643, 666, 672, 676, 686, 699, 707, 708, 709, 710, 713, 718, 719, 723, 724, 726, 727, 734, 735, 738, 748, 753, 759, 761, 764, 766, 772, 773, 775, 778, 781, 782, 783, 786, 787, 789, 790, 791, 793, 794, 796, 797, 799, 800, 801, 802, 803, 804, 805, 807, 808, 809, 810, 813, 815, 816, 817, 821, 825, 826, 827, 828, 829, 831, 834, 837, 842, 845, 850, 853, 854, 857, 861, 862, 863, 864, 866, 867, 869, 870, 876, 877, 880, 881, 882, 891, 894, 895, 898, 899, 905, 908, 911, 914, 916, 920, 922, 923, 924, 927, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 945, 947, 948, 949, 954, 955, 956, 959, 962, 967, 970, 973, 978, 982, 984, 986, 997, 1003, 1006, 1007, 1013, 1014, 1024, 1027, 1038, 1039, 1042, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1060, 1063, 1071, 1072, 1083, 1087, 1092, 1093, 1094, 1095, 1098, 1100, 1103, 1109, 1114, 1116, 1117, 1118, 1125, 1126, 1127, 1129], "rst": [16, 22, 30, 32, 33, 34, 36, 111, 115, 127, 150, 157, 162, 165, 171, 219, 229, 309, 505, 508, 511, 514, 517, 520, 523, 920, 923, 927, 1098, 1103], "render": [16, 38, 136], "dure": [16, 26, 43, 44, 102, 104, 121, 130, 131, 132, 133, 137, 138, 142, 146, 151, 163, 167, 219, 304, 367, 371, 372, 386, 398, 403, 447, 454, 478, 485, 564, 582, 639, 678, 753, 757, 762, 789, 795, 861, 863, 872, 933, 947, 948, 967, 980, 982, 997, 1084, 1092], "regular": [16, 131, 155, 166, 180, 196, 203, 204, 211, 230, 231, 233, 235, 236, 245, 264, 265, 326, 392, 410, 541, 543, 675, 708, 745, 757, 802, 836, 839, 841, 850, 863, 874, 924, 925, 967, 997, 999, 1055], "process": [16, 27, 59, 61, 63, 71, 76, 78, 95, 97, 108, 109, 111, 136, 141, 148, 155, 161, 163, 170, 171, 173, 207, 237, 246, 259, 260, 267, 278, 279, 303, 304, 311, 316, 369, 375, 404, 413, 432, 446, 469, 475, 476, 479, 480, 483, 484, 485, 503, 526, 693, 699, 708, 709, 710, 719, 724, 727, 729, 734, 738, 740, 743, 744, 747, 748, 749, 750, 752, 754, 757, 761, 762, 763, 766, 768, 771, 772, 774, 775, 777, 778, 784, 785, 786, 787, 788, 791, 792, 793, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 816, 818, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 837, 853, 862, 865, 866, 867, 868, 869, 872, 876, 877, 878, 882, 883, 884, 886, 887, 889, 891, 892, 894, 899, 900, 901, 908, 913, 914, 916, 917, 918, 925, 928, 929, 931, 933, 935, 936, 937, 938, 939, 940, 941, 942, 948, 949, 958, 966, 979, 980, 1034, 1104, 1117, 1126, 1127], "mean": [16, 28, 71, 72, 108, 109, 111, 131, 133, 136, 138, 152, 154, 155, 167, 187, 190, 191, 204, 206, 219, 223, 250, 265, 273, 278, 286, 287, 324, 345, 346, 347, 369, 388, 393, 398, 452, 530, 538, 541, 542, 608, 654, 676, 680, 688, 689, 710, 716, 732, 792, 799, 802, 804, 805, 813, 854, 861, 862, 863, 890, 897, 913, 917, 919, 947, 950, 959, 974, 982, 985, 999, 1000, 1005, 1033, 1053, 1056, 1060, 1062, 1066, 1072, 1077, 1085, 1099, 1114, 1117], "specif": [16, 61, 134, 200, 206, 207, 216, 219, 265, 271, 287, 321, 369, 386, 398, 428, 469, 478, 483, 485, 629, 672, 686, 708, 716, 730, 753, 757, 783, 793, 854, 861, 863, 877, 883, 899, 900, 925, 931, 943, 954, 962, 963, 1067, 1083, 1092, 1127, 1128], "markup": [16, 37], "class": [16, 20, 28, 40, 42, 53, 56, 61, 67, 68, 71, 72, 83, 90, 95, 104, 105, 106, 108, 109, 111, 138, 149, 150, 151, 153, 158, 167, 168, 169, 170, 172, 174, 175, 187, 191, 193, 200, 203, 204, 206, 207, 211, 215, 217, 218, 221, 223, 226, 229, 231, 233, 235, 236, 238, 243, 244, 248, 250, 251, 253, 257, 258, 259, 260, 262, 263, 264, 265, 269, 271, 278, 279, 282, 287, 289, 295, 296, 303, 304, 305, 312, 338, 384, 408, 410, 418, 426, 427, 428, 429, 430, 432, 433, 435, 436, 440, 446, 447, 448, 450, 451, 453, 454, 455, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 472, 474, 475, 476, 479, 480, 481, 483, 484, 485, 490, 492, 497, 503, 504, 512, 515, 518, 524, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 539, 540, 542, 544, 549, 551, 552, 555, 561, 570, 571, 577, 581, 587, 590, 593, 594, 599, 600, 601, 603, 604, 608, 609, 611, 612, 613, 614, 615, 616, 618, 619, 620, 621, 622, 623, 630, 631, 632, 633, 634, 635, 636, 639, 643, 648, 650, 651, 652, 654, 656, 657, 660, 661, 662, 663, 664, 665, 666, 668, 669, 671, 673, 680, 682, 685, 686, 689, 690, 691, 698, 699, 700, 704, 705, 706, 707, 709, 710, 712, 854, 861, 862, 863, 895, 897, 898, 952, 954, 956, 962, 963, 964, 965, 966, 969, 970, 975, 976, 977, 978, 980, 983, 985, 986, 994, 1014, 1041, 1042, 1043, 1048, 1050, 1053, 1065, 1071, 1072, 1085, 1086, 1092, 1093, 1104, 1112, 1122], "handout": [16, 111], "warn": [16, 30, 38, 127, 142, 183, 193, 244, 256, 298, 309, 334, 358, 389, 390, 392, 413, 427, 477, 480, 528, 532, 583, 627, 639, 710, 726, 732, 735, 794, 853, 862, 883, 894, 908, 930, 954, 1005, 1087], "produc": [16, 106, 151, 153, 192, 206, 386, 398, 403, 654, 660, 662, 698, 700, 874, 904, 905, 923, 931, 934, 947, 960, 961, 994, 997, 999, 1066], "error": [16, 20, 26, 28, 44, 63, 86, 95, 127, 130, 131, 132, 133, 136, 137, 146, 150, 153, 161, 164, 167, 170, 177, 188, 192, 198, 200, 203, 207, 208, 209, 213, 216, 219, 223, 226, 228, 231, 240, 241, 244, 247, 250, 253, 264, 265, 286, 301, 306, 308, 312, 331, 334, 336, 343, 347, 361, 362, 368, 374, 375, 377, 390, 391, 392, 395, 412, 413, 414, 416, 417, 418, 419, 422, 429, 433, 452, 453, 454, 466, 475, 481, 504, 521, 526, 528, 530, 531, 535, 536, 537, 538, 539, 541, 543, 551, 554, 559, 601, 603, 604, 613, 620, 627, 630, 634, 636, 637, 638, 639, 643, 663, 664, 665, 673, 676, 678, 680, 685, 686, 688, 699, 700, 709, 710, 713, 720, 735, 745, 749, 753, 757, 773, 787, 790, 791, 797, 800, 853, 854, 862, 864, 876, 878, 879, 880, 881, 882, 883, 891, 892, 894, 902, 908, 910, 911, 914, 915, 916, 924, 928, 929, 933, 934, 943, 948, 954, 984, 985, 996, 997, 1001, 1005, 1007, 1014, 1027, 1053, 1055, 1062, 1087, 1092, 1094, 1099, 1112], "output": [16, 22, 38, 49, 51, 53, 54, 59, 61, 83, 84, 105, 127, 133, 135, 136, 137, 150, 153, 159, 171, 172, 183, 192, 200, 206, 209, 210, 216, 219, 247, 286, 301, 306, 324, 325, 330, 331, 332, 333, 337, 369, 403, 404, 410, 411, 412, 452, 454, 470, 480, 486, 487, 488, 489, 501, 504, 512, 515, 541, 591, 609, 610, 623, 671, 676, 684, 710, 715, 770, 781, 788, 797, 800, 801, 802, 813, 817, 839, 843, 844, 849, 850, 854, 864, 875, 883, 886, 889, 897, 900, 901, 905, 925, 928, 929, 931, 961, 1000, 1005, 1006, 1016, 1017, 1019, 1020, 1021, 1022, 1024, 1029, 1035, 1037, 1039, 1044, 1045, 1046, 1047, 1058, 1061, 1062, 1070, 1074, 1083, 1087, 1100, 1107, 1123], "must": [16, 37, 41, 42, 108, 109, 111, 134, 138, 153, 159, 163, 164, 166, 167, 170, 174, 175, 188, 190, 192, 200, 206, 207, 214, 216, 217, 219, 240, 265, 324, 341, 344, 358, 366, 384, 386, 401, 408, 410, 414, 420, 431, 436, 437, 450, 453, 454, 467, 468, 477, 481, 487, 488, 489, 501, 512, 538, 539, 541, 543, 553, 554, 588, 601, 608, 615, 622, 630, 631, 633, 634, 654, 678, 680, 692, 696, 710, 735, 741, 749, 755, 762, 784, 785, 801, 811, 819, 853, 864, 870, 873, 883, 884, 887, 892, 894, 902, 911, 913, 915, 925, 931, 934, 949, 954, 955, 972, 977, 983, 996, 997, 999, 1000, 1002, 1005, 1034, 1055, 1093, 1104], "role": [16, 37, 63, 134, 138, 404, 481, 854], "somewher": [16, 152, 171, 183, 190, 223, 235, 236, 286, 298, 369, 386, 388, 408, 433, 454, 521, 654, 900, 957, 982, 1071], "top": [16, 27, 30, 32, 33, 36, 37, 48, 130, 131, 133, 134, 146, 152, 154, 155, 171, 173, 200, 206, 209, 216, 219, 411, 760, 769, 854, 874, 913, 915, 954, 962, 984, 1030, 1034, 1112, 1116, 1118, 1123], "insid": [16, 33, 37, 40, 48, 111, 130, 131, 159, 161, 183, 200, 206, 216, 219, 236, 256, 258, 273, 286, 301, 330, 334, 344, 362, 365, 367, 368, 386, 391, 410, 473, 478, 487, 536, 542, 544, 700, 708, 718, 728, 796, 826, 836, 861, 863, 886, 900, 919, 945, 950, 953, 962, 999, 1005, 1076, 1079, 1083, 1095, 1114, 1117], "ideal": [16, 142, 158, 200, 206, 216, 219, 236, 238, 397, 413, 424, 431, 484, 600, 654, 716, 735, 753, 757, 850, 870, 934, 974, 976], "slideshow": [16, 22, 210, 222, 249, 259, 270, 278, 714, 717, 719, 722, 724, 727, 729, 736, 738, 740, 742, 744, 746, 748, 750, 752, 754, 756, 761, 763, 766, 768, 772, 775, 778, 998, 1065, 1089, 1096], "manual": [16, 59, 61, 128, 138, 146, 169, 170, 200, 201, 206, 209, 216, 219, 249, 251, 332, 333, 336, 343, 381, 386, 410, 527, 569, 619, 626, 637, 663, 675, 676, 712, 713, 716, 757, 784, 785, 854, 861, 862, 884, 887, 900, 902, 904, 945, 947, 952, 960, 961, 965, 969, 1010, 1063], "theme": [16, 63, 293, 986, 1005], "url": [16, 128, 135, 137, 146, 158, 478, 953, 1010], "_static": 16, "ui": [16, 30, 138, 347, 606], "default": [16, 22, 56, 59, 95, 108, 109, 111, 131, 132, 137, 138, 142, 148, 159, 168, 170, 172, 179, 181, 192, 200, 203, 206, 209, 212, 215, 216, 219, 223, 226, 229, 234, 237, 244, 246, 247, 251, 255, 256, 258, 261, 265, 267, 268, 294, 301, 347, 358, 390, 398, 404, 410, 411, 413, 416, 420, 423, 429, 432, 446, 448, 457, 458, 475, 480, 526, 528, 529, 534, 535, 538, 539, 563, 582, 583, 599, 604, 606, 608, 611, 612, 613, 614, 616, 618, 619, 620, 621, 622, 623, 626, 627, 634, 635, 664, 666, 682, 691, 696, 698, 699, 700, 707, 709, 710, 753, 781, 784, 785, 787, 799, 812, 817, 836, 848, 849, 853, 854, 856, 861, 862, 864, 870, 873, 887, 891, 897, 900, 902, 904, 916, 928, 930, 932, 934, 945, 974, 976, 982, 1001, 1003, 1005, 1010, 1046, 1066, 1076, 1079, 1081, 1087, 1092, 1094, 1112], "given": [16, 37, 57, 60, 67, 79, 100, 104, 105, 108, 109, 116, 131, 133, 136, 138, 142, 152, 200, 206, 216, 219, 223, 247, 255, 256, 258, 265, 287, 334, 349, 392, 451, 478, 481, 485, 504, 528, 597, 608, 633, 708, 718, 728, 739, 757, 794, 799, 808, 810, 817, 839, 861, 941, 953, 1040, 1049, 1055, 1057, 1066, 1077, 1080, 1115, 1127], "path": [16, 20, 95, 97, 111, 119, 120, 127, 136, 159, 163, 171, 174, 191, 202, 203, 204, 208, 211, 215, 216, 219, 237, 246, 247, 267, 268, 271, 273, 274, 286, 287, 292, 294, 301, 306, 368, 404, 410, 412, 415, 416, 418, 432, 446, 469, 475, 476, 479, 480, 481, 482, 483, 484, 485, 503, 526, 551, 683, 699, 709, 710, 721, 735, 747, 757, 783, 784, 785, 786, 787, 790, 791, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 817, 818, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 837, 853, 873, 876, 882, 883, 884, 892, 893, 894, 908, 910, 911, 912, 914, 916, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 945, 952, 962, 979, 982, 1043, 1085, 1087, 1092, 1094, 1102, 1114], "commit": [16, 44, 75, 113, 134, 137, 145, 146, 188, 192, 193, 204, 207, 217, 309, 730, 1055, 1067, 1070, 1092, 1124], "place": [16, 53, 111, 119, 128, 132, 133, 135, 136, 137, 138, 146, 151, 160, 164, 187, 203, 209, 219, 255, 256, 324, 340, 362, 369, 386, 409, 418, 422, 426, 450, 452, 466, 481, 497, 543, 557, 559, 560, 571, 582, 590, 593, 594, 604, 623, 689, 692, 700, 705, 708, 710, 735, 757, 786, 807, 808, 809, 810, 861, 862, 870, 916, 946, 948, 957, 987, 996, 1000, 1002, 1020, 1080, 1094], "_download": 16, "7a046b2e956b892f20b3485964f7b2cf": 16, "rel": [16, 76, 97, 111, 131, 138, 167, 183, 204, 237, 246, 247, 267, 268, 319, 432, 446, 469, 475, 476, 479, 480, 483, 484, 485, 503, 526, 643, 648, 699, 709, 710, 757, 784, 785, 786, 787, 790, 791, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 837, 853, 861, 873, 876, 882, 884, 892, 894, 908, 911, 914, 916, 933, 935, 936, 937, 938, 939, 940, 941, 942, 948, 1059, 1060, 1070, 1083], "up": [16, 20, 26, 30, 32, 33, 36, 41, 43, 51, 76, 121, 128, 130, 131, 132, 134, 136, 138, 141, 146, 150, 151, 182, 188, 193, 198, 200, 204, 206, 216, 219, 231, 236, 238, 247, 256, 286, 304, 308, 314, 315, 382, 389, 398, 399, 404, 408, 412, 413, 433, 477, 478, 480, 481, 497, 521, 545, 546, 547, 548, 551, 598, 603, 668, 671, 684, 685, 698, 716, 720, 725, 726, 728, 739, 741, 749, 753, 757, 758, 796, 817, 818, 836, 849, 854, 856, 861, 862, 863, 870, 880, 913, 919, 924, 929, 931, 934, 943, 952, 955, 966, 970, 976, 999, 1012, 1016, 1033, 1038, 1050, 1055, 1060, 1066, 1074, 1087, 1093, 1099, 1104, 1115], "uri": 16, "well": [16, 40, 63, 131, 133, 136, 137, 138, 142, 155, 159, 167, 190, 192, 219, 255, 257, 265, 273, 287, 347, 369, 398, 408, 436, 476, 477, 481, 482, 509, 529, 533, 544, 558, 626, 633, 640, 663, 676, 686, 690, 782, 801, 817, 850, 857, 862, 863, 874, 887, 889, 907, 931, 933, 946, 954, 955, 958, 962, 965, 969, 972, 975, 986, 990, 1000, 1058, 1060, 1071, 1088, 1114], "blah": [18, 22, 37, 60, 63, 113, 131, 134, 153, 164, 171, 174, 179, 187, 190, 196, 200, 206, 207, 209, 211, 216, 219, 226, 229, 241, 248, 251, 261, 265, 293, 294, 301, 309, 312, 392, 639, 708, 713, 721, 880, 881, 924, 925, 950, 985, 991, 1010, 1063, 1074], "watch": [19, 30, 132, 133, 134, 152, 159, 163, 167, 168, 172, 258, 260, 264, 279, 409, 676, 854, 862, 898, 958, 979, 1084], "w5g8k7a2gbg": 19, "bore": [19, 192, 214, 228, 244, 270, 817, 925, 929, 986, 1055], "good": [19, 26, 28, 41, 95, 111, 128, 130, 131, 132, 133, 138, 146, 155, 163, 167, 170, 188, 191, 192, 200, 204, 209, 210, 211, 213, 214, 217, 223, 238, 240, 250, 253, 256, 258, 264, 265, 282, 320, 343, 347, 388, 392, 394, 402, 403, 408, 431, 432, 446, 469, 475, 476, 479, 480, 483, 484, 485, 490, 492, 503, 509, 526, 530, 534, 535, 549, 552, 555, 571, 577, 581, 584, 590, 593, 594, 599, 603, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 635, 637, 666, 677, 682, 688, 691, 697, 699, 701, 707, 709, 710, 714, 716, 749, 757, 762, 782, 796, 800, 850, 854, 862, 863, 887, 889, 906, 915, 918, 919, 925, 928, 954, 967, 985, 986, 997, 1000, 1002, 1005, 1017, 1027, 1054, 1055, 1062, 1084, 1114], "j2hzby8e4yq": 19, "pov": 19, "classmethod": [20, 244], "staticmethod": [20, 244], "member": [20, 33, 36, 41, 55, 61, 108, 109, 111, 146, 152, 153, 154, 164, 169, 191, 209, 221, 234, 249, 256, 265, 305, 377, 386, 393, 430, 473, 475, 479, 485, 504, 518, 526, 528, 529, 531, 532, 533, 534, 540, 544, 545, 547, 549, 582, 583, 587, 608, 611, 614, 615, 616, 618, 619, 620, 621, 622, 623, 626, 634, 638, 639, 648, 654, 664, 680, 686, 706, 710, 718, 723, 725, 745, 753, 757, 770, 776, 783, 784, 785, 800, 801, 802, 803, 804, 805, 811, 846, 850, 861, 889, 943, 1004, 1083, 1104], "final": [20, 36, 40, 59, 76, 104, 127, 153, 163, 167, 170, 190, 192, 200, 206, 207, 216, 221, 234, 240, 264, 410, 478, 481, 550, 551, 626, 637, 666, 709, 710, 720, 751, 757, 784, 785, 850, 862, 863, 931, 948, 952, 965, 1017, 1033, 1055, 1063, 1112], "exec": [20, 28, 138, 163, 172, 203, 217, 218, 226, 233, 245, 249, 251, 259, 260, 261, 265, 272, 275, 278, 279, 710, 845, 850, 883, 886, 907, 931, 956, 1053, 1125], "dict": [20, 150, 163, 164, 168, 179, 181, 182, 187, 190, 204, 205, 206, 207, 210, 212, 215, 216, 217, 221, 227, 241, 244, 251, 261, 265, 271, 293, 296, 301, 626, 952, 955, 967, 968, 977, 1003], "There": [20, 43, 53, 55, 63, 66, 79, 95, 127, 128, 130, 132, 133, 134, 135, 138, 142, 143, 159, 160, 164, 166, 167, 170, 174, 175, 188, 193, 209, 212, 213, 214, 217, 223, 250, 253, 256, 257, 258, 259, 260, 278, 279, 287, 322, 332, 338, 347, 362, 365, 386, 388, 395, 398, 409, 410, 414, 423, 428, 453, 454, 504, 512, 529, 534, 579, 604, 622, 623, 635, 637, 643, 666, 671, 682, 686, 690, 691, 699, 707, 709, 710, 730, 757, 762, 788, 817, 854, 861, 862, 907, 917, 928, 929, 980, 986, 997, 1055, 1067, 1093, 1099], "half": [20, 34, 131, 132, 133, 193, 394, 413, 755, 796, 862, 915, 952], "heart": [20, 30, 36, 121, 413, 796, 1061], "split": [20, 127, 128, 151, 154, 187, 191, 196, 197, 200, 203, 204, 206, 211, 215, 221, 229, 232, 244, 249, 251, 265, 271, 292, 301, 386, 410, 432, 504, 952, 1061, 1085], "pimp": 20, "elabor": [20, 142, 207, 217, 388, 411, 862], "namespac": [20, 163, 200, 206, 213, 216, 219, 223, 234, 244, 433, 435, 450, 482, 486, 487, 488, 489, 491, 501, 502, 521, 543, 551, 556, 557, 558, 559, 560, 566, 567, 569, 570, 573, 574, 575, 579, 593, 610, 616, 617, 626, 641, 663, 673, 676, 698, 700, 701, 861, 895, 898, 910, 912, 962], "__init__": [20, 61, 127, 150, 151, 162, 164, 167, 169, 187, 190, 191, 203, 204, 206, 213, 216, 219, 223, 229, 232, 241, 244, 251, 261, 265, 410, 952, 953, 954, 962, 967, 968, 969, 971, 972, 973, 974, 975, 976, 1085, 1092], "__all__": [20, 219, 223], "etc": [20, 22, 28, 61, 88, 98, 111, 120, 124, 128, 132, 136, 145, 148, 149, 153, 160, 167, 170, 174, 175, 177, 180, 181, 188, 189, 191, 192, 194, 198, 201, 203, 204, 206, 210, 211, 214, 220, 221, 222, 223, 225, 226, 228, 230, 233, 243, 244, 247, 250, 251, 253, 261, 263, 264, 266, 269, 270, 287, 288, 289, 290, 291, 292, 301, 306, 309, 319, 342, 347, 403, 413, 421, 435, 518, 606, 668, 674, 701, 708, 710, 716, 730, 757, 769, 779, 787, 789, 792, 794, 797, 799, 800, 801, 802, 813, 817, 820, 831, 834, 836, 837, 839, 841, 842, 843, 844, 845, 846, 848, 850, 853, 863, 864, 865, 873, 874, 877, 878, 879, 884, 890, 899, 910, 924, 925, 929, 931, 952, 954, 956, 963, 964, 965, 966, 970, 978, 989, 998, 1001, 1005, 1008, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1027, 1028, 1029, 1030, 1031, 1032, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1063, 1064, 1065, 1068, 1071, 1072, 1078, 1083, 1086, 1107, 1108, 1116, 1118, 1122, 1123, 1126, 1128], "user": [20, 22, 28, 45, 51, 61, 63, 82, 99, 100, 108, 109, 111, 115, 117, 127, 128, 130, 131, 132, 133, 135, 136, 138, 146, 153, 159, 162, 163, 164, 167, 171, 178, 187, 190, 192, 194, 203, 209, 211, 216, 217, 219, 220, 222, 223, 226, 229, 231, 240, 241, 244, 247, 250, 251, 253, 261, 265, 268, 275, 282, 286, 298, 301, 310, 366, 397, 408, 410, 411, 413, 418, 426, 436, 453, 454, 475, 487, 504, 526, 529, 530, 536, 543, 587, 591, 610, 612, 613, 614, 615, 622, 623, 639, 643, 675, 686, 699, 709, 710, 716, 718, 728, 730, 755, 757, 770, 771, 784, 785, 787, 791, 795, 796, 797, 801, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 817, 841, 845, 848, 853, 854, 855, 862, 864, 870, 877, 882, 883, 884, 887, 889, 892, 894, 899, 908, 911, 912, 914, 916, 917, 928, 931, 945, 947, 948, 949, 952, 969, 970, 1007, 1014, 1016, 1017, 1021, 1033, 1034, 1040, 1045, 1047, 1050, 1052, 1053, 1064, 1069, 1074, 1077, 1081, 1084, 1094, 1101, 1112], "import": [20, 28, 61, 63, 119, 127, 133, 138, 141, 151, 152, 153, 154, 163, 164, 167, 169, 170, 175, 179, 181, 182, 183, 191, 195, 196, 197, 202, 203, 204, 206, 211, 213, 216, 219, 223, 226, 229, 232, 235, 236, 241, 244, 248, 249, 250, 251, 253, 255, 261, 265, 271, 294, 296, 324, 340, 410, 413, 414, 551, 568, 634, 672, 686, 689, 710, 739, 757, 799, 817, 854, 857, 861, 870, 882, 909, 919, 930, 951, 952, 953, 955, 963, 965, 967, 973, 974, 977, 983, 984, 985, 986, 987, 988, 990, 995, 999, 1007, 1008, 1009, 1010, 1043, 1050, 1051, 1052, 1053, 1055, 1056, 1057, 1058, 1060, 1061, 1066, 1069, 1070, 1072, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1089, 1092, 1093, 1096, 1099, 1117, 1122], "pythonpath": [20, 38, 59, 163, 249, 962, 1010], "goto": [20, 363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710, 928], "orgi": [20, 418, 630], "perspect": [20, 36, 138, 160], "alwai": [20, 41, 63, 78, 127, 128, 133, 143, 160, 167, 190, 212, 223, 249, 250, 253, 293, 301, 306, 324, 342, 368, 369, 381, 393, 394, 398, 399, 401, 402, 418, 419, 438, 448, 483, 527, 533, 543, 562, 565, 621, 626, 630, 641, 665, 674, 678, 681, 685, 690, 716, 735, 753, 757, 762, 783, 817, 818, 861, 862, 863, 877, 883, 889, 917, 928, 933, 943, 948, 954, 982, 986, 1000, 1055, 1060, 1061, 1062, 1092, 1093, 1112], "valgrind": [20, 95, 158, 192, 319, 396, 400, 401, 403, 405, 406, 433, 497, 508, 510, 518, 521, 536, 671, 684, 685, 710, 1109, 1110], "supervis": [20, 1062], "hack": [20, 51, 57, 60, 95, 125, 127, 128, 146, 154, 158, 163, 167, 168, 192, 193, 207, 209, 217, 228, 235, 236, 237, 238, 246, 258, 259, 267, 268, 275, 282, 301, 305, 309, 310, 312, 319, 320, 368, 411, 432, 433, 446, 469, 473, 475, 476, 479, 480, 483, 484, 485, 490, 492, 503, 504, 546, 561, 562, 582, 624, 635, 666, 667, 668, 672, 684, 699, 708, 709, 710, 711, 787, 812, 813, 853, 894, 941, 979, 1078, 1084, 1092, 1111, 1112, 1126], "someth": [20, 41, 53, 64, 70, 71, 72, 76, 81, 82, 85, 124, 130, 131, 133, 134, 136, 138, 142, 146, 152, 159, 163, 171, 179, 181, 182, 183, 193, 203, 207, 214, 229, 232, 256, 258, 275, 282, 296, 359, 360, 374, 428, 450, 478, 481, 521, 532, 536, 541, 544, 551, 575, 619, 620, 621, 631, 634, 648, 678, 686, 688, 689, 704, 705, 706, 710, 718, 730, 734, 745, 753, 757, 759, 762, 777, 829, 853, 854, 857, 861, 862, 863, 878, 879, 887, 889, 890, 902, 913, 915, 916, 928, 943, 950, 952, 953, 955, 959, 976, 983, 985, 990, 1000, 1006, 1037, 1062, 1117], "malloc": [20, 158, 381, 382, 395, 510, 743, 877, 929, 931, 1109], "seomth": 20, "cleanup": [20, 131, 150, 312, 527, 603, 639, 683, 929, 952, 1064, 1093], "obviou": [20, 55, 138, 146, 152, 213, 223, 250, 253, 298, 369, 388, 410, 481, 527, 634, 643, 684, 690, 883, 925, 950, 986, 997, 1115], "lead": [20, 108, 109, 131, 133, 137, 138, 155, 192, 219, 223, 247, 265, 328, 336, 346, 418, 608, 620, 757, 783, 796, 862, 915, 924, 925, 943, 970, 996, 1007, 1017, 1071, 1086], "sever": [20, 85, 111, 131, 191, 192, 366, 435, 440, 614, 625, 755, 813, 854, 954, 980, 991], "code": [20, 22, 27, 28, 31, 38, 40, 51, 53, 61, 63, 68, 71, 78, 83, 101, 102, 106, 111, 114, 116, 124, 127, 128, 130, 131, 132, 133, 134, 137, 138, 145, 146, 149, 151, 154, 155, 156, 158, 159, 160, 163, 166, 167, 168, 170, 172, 177, 182, 183, 187, 191, 192, 193, 198, 200, 201, 203, 206, 209, 214, 216, 217, 219, 220, 228, 238, 240, 243, 247, 249, 250, 253, 256, 258, 261, 263, 264, 265, 269, 270, 271, 274, 275, 278, 286, 287, 296, 301, 306, 318, 321, 328, 330, 334, 338, 344, 358, 364, 369, 385, 386, 390, 392, 394, 400, 401, 403, 404, 405, 406, 407, 411, 413, 414, 415, 417, 422, 423, 424, 426, 427, 428, 430, 431, 432, 433, 435, 436, 438, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 475, 476, 477, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 507, 509, 510, 512, 513, 515, 516, 518, 519, 521, 522, 524, 525, 526, 527, 528, 529, 530, 532, 536, 537, 538, 539, 541, 542, 543, 544, 545, 546, 547, 548, 554, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 569, 570, 573, 574, 575, 579, 583, 584, 585, 586, 587, 591, 597, 598, 600, 601, 603, 604, 606, 612, 615, 619, 620, 626, 627, 631, 633, 635, 636, 637, 639, 641, 643, 654, 663, 664, 665, 666, 668, 669, 670, 671, 673, 675, 680, 684, 685, 687, 688, 689, 690, 698, 700, 704, 705, 706, 708, 709, 710, 711, 716, 721, 734, 735, 749, 755, 757, 762, 769, 772, 773, 775, 778, 796, 823, 853, 854, 862, 863, 878, 879, 895, 898, 902, 906, 915, 919, 921, 922, 924, 926, 928, 930, 931, 932, 933, 934, 935, 936, 938, 939, 941, 943, 954, 955, 957, 958, 959, 963, 965, 974, 976, 979, 980, 982, 983, 989, 990, 991, 997, 1001, 1002, 1003, 1010, 1030, 1034, 1053, 1057, 1063, 1064, 1072, 1074, 1083, 1086, 1092, 1093, 1095, 1099, 1100, 1101, 1104, 1105, 1112, 1117, 1125, 1126, 1130], "duplic": [20, 40, 47, 95, 151, 164, 209, 217, 227, 249, 286, 328, 330, 391, 392, 435, 493, 501, 515, 536, 543, 554, 632, 689, 710, 764, 800, 853, 889, 892, 894, 911, 1037, 1092, 1094], "when": [20, 27, 29, 41, 61, 63, 73, 78, 108, 109, 118, 119, 128, 130, 131, 132, 133, 136, 138, 146, 148, 160, 163, 169, 192, 193, 200, 204, 206, 207, 209, 216, 217, 219, 222, 223, 236, 238, 247, 255, 256, 258, 265, 273, 287, 292, 301, 312, 319, 326, 334, 336, 342, 347, 358, 365, 369, 384, 389, 390, 391, 392, 393, 398, 408, 410, 413, 416, 420, 423, 424, 427, 428, 432, 452, 454, 481, 482, 530, 532, 533, 536, 544, 566, 582, 597, 598, 601, 603, 608, 610, 615, 619, 621, 626, 629, 631, 633, 634, 637, 654, 668, 673, 676, 681, 685, 686, 689, 693, 696, 698, 700, 708, 725, 728, 735, 739, 751, 753, 755, 757, 771, 790, 792, 796, 799, 801, 813, 817, 839, 850, 862, 863, 870, 874, 878, 879, 883, 886, 887, 905, 907, 913, 916, 917, 919, 924, 928, 929, 931, 933, 948, 952, 953, 954, 959, 963, 966, 972, 974, 979, 982, 985, 986, 988, 990, 995, 996, 997, 1007, 1046, 1064, 1066, 1071, 1076, 1087, 1092, 1094, 1101, 1112, 1114, 1115], "void": [20, 40, 42, 53, 56, 105, 133, 134, 142, 174, 192, 204, 301, 323, 324, 326, 330, 332, 334, 338, 344, 348, 362, 364, 365, 366, 367, 369, 372, 374, 375, 378, 381, 382, 384, 385, 391, 392, 395, 411, 418, 427, 428, 429, 433, 435, 439, 448, 457, 458, 462, 463, 466, 467, 468, 471, 477, 480, 481, 482, 509, 521, 528, 530, 531, 532, 533, 536, 537, 538, 539, 540, 541, 543, 544, 551, 557, 561, 570, 583, 597, 600, 601, 604, 606, 607, 616, 618, 626, 627, 632, 636, 639, 640, 654, 656, 657, 659, 660, 661, 662, 664, 665, 668, 669, 670, 671, 672, 673, 675, 676, 678, 683, 684, 685, 686, 688, 690, 693, 695, 698, 700, 718, 721, 728, 735, 737, 739, 741, 743, 751, 753, 762, 767, 771, 777, 794, 814, 875, 879, 880, 881, 883, 893, 900, 902, 904, 906, 910, 915, 921, 924, 925, 928, 929, 931, 943, 947, 949, 1104], "f": [20, 36, 41, 61, 107, 111, 117, 132, 133, 134, 142, 154, 164, 169, 170, 175, 176, 179, 181, 187, 188, 190, 191, 197, 199, 200, 203, 204, 206, 210, 212, 213, 216, 219, 223, 226, 228, 230, 232, 240, 241, 244, 248, 251, 256, 261, 265, 270, 272, 293, 295, 297, 312, 338, 343, 353, 355, 364, 367, 372, 391, 392, 394, 398, 402, 410, 427, 533, 537, 553, 627, 633, 639, 640, 669, 690, 693, 716, 721, 783, 794, 801, 817, 836, 843, 845, 846, 861, 862, 863, 864, 886, 917, 919, 924, 939, 943, 946, 950, 952, 953, 954, 955, 967, 969, 971, 972, 975, 976, 977, 996, 997, 1005, 1012, 1017, 1050, 1052, 1055, 1063, 1064, 1066, 1092, 1122], "alloc": [20, 133, 134, 151, 153, 192, 200, 203, 206, 216, 219, 241, 336, 365, 381, 386, 389, 392, 395, 433, 517, 519, 533, 535, 536, 543, 562, 567, 574, 579, 590, 594, 598, 623, 634, 637, 671, 676, 685, 686, 690, 710, 713, 716, 718, 743, 745, 759, 762, 794, 800, 879, 880, 881, 901, 961, 1012], "variabl": [20, 28, 85, 87, 88, 95, 102, 108, 109, 127, 132, 133, 142, 146, 150, 152, 153, 159, 163, 164, 167, 168, 169, 170, 172, 175, 176, 177, 182, 183, 188, 189, 191, 192, 194, 198, 201, 202, 204, 205, 206, 209, 210, 212, 214, 220, 221, 222, 223, 225, 227, 228, 230, 234, 237, 242, 243, 244, 246, 247, 250, 253, 256, 260, 262, 263, 264, 266, 267, 268, 269, 270, 278, 279, 287, 288, 289, 290, 291, 292, 301, 303, 304, 323, 325, 326, 334, 339, 347, 354, 358, 359, 362, 363, 364, 368, 370, 371, 374, 376, 380, 381, 383, 384, 386, 387, 388, 394, 395, 396, 398, 400, 405, 406, 412, 414, 418, 420, 439, 447, 453, 462, 467, 473, 513, 518, 533, 541, 542, 549, 561, 601, 608, 623, 628, 634, 637, 639, 666, 668, 680, 699, 706, 707, 708, 709, 710, 726, 745, 757, 787, 788, 791, 794, 818, 837, 853, 894, 899, 902, 906, 907, 908, 913, 931, 941, 942, 943, 948, 950, 952, 955, 956, 962, 963, 964, 965, 966, 970, 978, 982, 984, 989, 993, 995, 997, 998, 1001, 1006, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1021, 1022, 1023, 1024, 1027, 1028, 1029, 1030, 1031, 1032, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1062, 1065, 1068, 1071, 1072, 1078, 1080, 1085, 1086, 1087, 1113, 1115, 1122, 1128], "filenam": [20, 40, 48, 53, 56, 130, 150, 154, 179, 197, 200, 203, 204, 206, 211, 216, 219, 229, 244, 247, 260, 261, 265, 279, 293, 410, 470, 473, 482, 708, 757, 783, 784, 846, 884, 887, 888, 889, 890, 891, 895, 898, 924, 952, 962, 1007, 1012, 1024, 1033, 1035, 1039, 1045, 1047], "getenv": [20, 467, 912], "fopen": 20, "read": [20, 28, 41, 45, 51, 53, 54, 55, 71, 72, 81, 83, 111, 130, 131, 132, 133, 134, 136, 138, 141, 142, 146, 159, 163, 167, 168, 170, 172, 178, 188, 191, 198, 201, 204, 206, 207, 209, 211, 217, 219, 220, 225, 226, 228, 231, 238, 239, 240, 243, 247, 249, 251, 257, 261, 263, 264, 265, 268, 269, 270, 286, 287, 288, 289, 290, 291, 301, 305, 307, 312, 331, 332, 339, 347, 354, 363, 370, 376, 380, 383, 384, 386, 387, 388, 390, 392, 395, 396, 400, 404, 405, 406, 409, 425, 432, 453, 470, 475, 481, 482, 509, 515, 526, 529, 530, 532, 535, 538, 541, 587, 591, 610, 613, 625, 628, 635, 643, 666, 680, 688, 704, 707, 708, 709, 710, 716, 730, 741, 757, 759, 783, 784, 785, 788, 794, 799, 800, 801, 802, 804, 805, 808, 817, 818, 850, 853, 857, 861, 862, 863, 870, 875, 877, 878, 880, 881, 884, 887, 890, 892, 893, 894, 895, 897, 898, 905, 907, 911, 915, 921, 924, 925, 928, 929, 948, 954, 955, 970, 973, 975, 983, 991, 1013, 1014, 1024, 1033, 1043, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1061, 1066, 1074, 1081, 1085, 1125], "onli": [20, 28, 40, 41, 87, 106, 108, 109, 111, 121, 127, 128, 130, 131, 133, 134, 135, 136, 137, 138, 141, 142, 146, 151, 152, 159, 163, 167, 169, 170, 188, 190, 193, 200, 203, 206, 209, 210, 211, 213, 216, 217, 219, 220, 222, 223, 228, 230, 231, 232, 243, 244, 247, 249, 250, 256, 260, 263, 265, 269, 270, 273, 279, 292, 295, 309, 316, 326, 332, 334, 335, 336, 338, 343, 344, 346, 351, 358, 359, 362, 364, 366, 367, 368, 369, 385, 386, 390, 391, 392, 393, 394, 403, 408, 410, 411, 413, 414, 417, 422, 423, 427, 428, 429, 431, 439, 447, 448, 450, 452, 453, 454, 466, 467, 477, 478, 482, 488, 489, 504, 515, 528, 529, 530, 531, 533, 535, 537, 538, 541, 543, 544, 550, 564, 566, 582, 583, 587, 597, 598, 600, 604, 608, 612, 613, 620, 622, 626, 633, 637, 639, 643, 648, 654, 664, 668, 671, 675, 676, 680, 681, 685, 686, 692, 694, 696, 698, 700, 710, 713, 715, 718, 721, 726, 737, 743, 753, 757, 762, 765, 770, 774, 782, 783, 784, 785, 792, 795, 799, 801, 802, 807, 813, 817, 818, 839, 846, 854, 855, 856, 861, 862, 863, 864, 874, 879, 880, 883, 885, 886, 887, 891, 893, 897, 899, 902, 907, 910, 913, 915, 916, 917, 918, 924, 925, 928, 929, 931, 932, 943, 947, 948, 952, 953, 954, 957, 963, 967, 969, 972, 974, 975, 980, 981, 982, 983, 985, 986, 987, 988, 990, 991, 995, 1000, 1001, 1005, 1007, 1010, 1014, 1019, 1027, 1029, 1030, 1033, 1034, 1038, 1040, 1053, 1055, 1060, 1061, 1062, 1067, 1070, 1079, 1083, 1084, 1092, 1098, 1099, 1101, 1104, 1112, 1114, 1117, 1129], "bullshit": [20, 63, 175, 187, 223, 413, 676, 1122], "everyon": [20, 63, 131, 136, 146, 167, 408, 613, 664, 804, 805, 815, 917], "get": [20, 53, 61, 95, 108, 109, 119, 120, 127, 128, 131, 133, 134, 141, 142, 150, 163, 164, 167, 169, 174, 181, 182, 183, 190, 192, 193, 200, 203, 206, 207, 209, 212, 213, 216, 219, 226, 232, 236, 238, 241, 244, 247, 251, 261, 265, 271, 296, 301, 304, 306, 321, 347, 392, 401, 424, 428, 433, 448, 457, 462, 539, 546, 618, 626, 636, 654, 660, 680, 681, 684, 685, 686, 687, 689, 708, 710, 718, 723, 730, 757, 759, 773, 776, 790, 792, 796, 797, 817, 853, 863, 870, 873, 879, 880, 881, 894, 896, 901, 918, 925, 929, 946, 952, 965, 968, 974, 978, 986, 1003, 1063, 1076, 1083, 1094, 1099, 1104, 1117], "point": [20, 32, 34, 36, 38, 59, 87, 95, 104, 107, 111, 130, 131, 132, 133, 135, 136, 137, 138, 141, 142, 146, 151, 152, 153, 154, 158, 163, 167, 168, 169, 170, 172, 190, 192, 193, 200, 203, 206, 209, 216, 219, 224, 227, 249, 258, 265, 287, 307, 308, 309, 312, 323, 324, 325, 330, 336, 338, 340, 342, 346, 368, 371, 374, 377, 378, 381, 382, 392, 394, 423, 428, 431, 438, 439, 447, 471, 473, 480, 504, 505, 506, 529, 531, 533, 535, 536, 537, 539, 540, 542, 545, 549, 560, 561, 569, 584, 585, 598, 603, 604, 623, 626, 629, 631, 633, 637, 643, 654, 676, 680, 685, 689, 701, 710, 753, 757, 786, 794, 796, 800, 801, 817, 854, 855, 863, 873, 877, 880, 883, 916, 929, 932, 945, 949, 950, 951, 953, 957, 965, 991, 995, 997, 1000, 1062, 1067, 1069, 1071, 1092, 1094, 1101, 1104, 1109, 1113], "unobvi": [20, 757], "best": [20, 29, 37, 46, 55, 131, 132, 133, 142, 155, 212, 334, 366, 388, 395, 398, 399, 408, 486, 531, 536, 600, 665, 678, 698, 745, 747, 749, 753, 755, 794, 817, 839, 855, 862, 863, 899, 913, 917, 945, 959, 965, 1002, 1007, 1009, 1069, 1079], "resourc": [20, 78, 95, 108, 109, 131, 133, 136, 148, 158, 193, 209, 250, 253, 258, 304, 312, 440, 504, 518, 529, 533, 534, 598, 623, 634, 635, 637, 666, 671, 682, 683, 685, 686, 691, 698, 699, 707, 709, 710, 741, 743, 751, 790, 794, 795, 862, 879, 880, 881, 899, 913, 916, 952, 1005, 1064], "leaki": 20, "erron": [20, 395, 1017], "worst": [20, 131, 366, 863, 915, 928, 1112, 1115], "extract": [20, 28, 53, 95, 120, 124, 191, 217, 220, 225, 228, 240, 243, 263, 264, 269, 270, 350, 369, 474, 475, 504, 515, 526, 708, 710, 757, 770, 783, 945, 970, 992, 1014, 1048, 1049, 1050, 1051, 1053, 1061], "common": [20, 23, 123, 131, 188, 204, 205, 217, 223, 228, 369, 378, 409, 480, 562, 689, 708, 782, 854, 855, 863, 887, 924, 954, 959, 960, 961, 977, 986, 987, 991, 997, 1001, 1004, 1055, 1066, 1067, 1092, 1115], "hm": [20, 30, 61, 171, 181, 200, 203, 206, 213, 293, 747, 773, 774, 881, 974, 1059, 1094, 1099, 1101], "end": [20, 22, 30, 35, 40, 104, 125, 130, 133, 134, 136, 138, 141, 163, 164, 169, 170, 175, 179, 183, 203, 204, 206, 207, 209, 219, 223, 226, 229, 243, 244, 265, 271, 292, 293, 330, 333, 337, 358, 374, 386, 390, 391, 392, 394, 397, 398, 401, 431, 453, 454, 462, 463, 466, 467, 468, 518, 521, 533, 557, 559, 561, 562, 563, 565, 566, 568, 569, 570, 572, 573, 575, 579, 582, 586, 587, 593, 610, 626, 654, 657, 661, 668, 674, 675, 676, 678, 683, 684, 697, 698, 749, 755, 757, 773, 800, 801, 802, 817, 845, 849, 850, 861, 863, 879, 880, 881, 883, 889, 905, 924, 957, 977, 981, 983, 990, 993, 997, 1001, 1005, 1079, 1081, 1083, 1087, 1122, 1125], "sketch": [20, 128, 134, 163, 170, 171, 183, 192, 193, 260, 279, 305, 309, 371, 372, 382, 394, 626, 714, 726, 924], "clearest": 20, "ach": 20, "bad": [20, 41, 127, 130, 133, 140, 155, 163, 188, 194, 210, 211, 213, 222, 223, 238, 259, 260, 278, 279, 282, 347, 390, 394, 408, 550, 616, 666, 677, 684, 709, 710, 725, 737, 762, 765, 874, 875, 900, 902, 906, 907, 928, 947, 952, 954, 967, 968, 979, 986, 997, 1027, 1055, 1112], "earliest": 20, "noth": [20, 41, 61, 121, 130, 131, 133, 136, 141, 146, 160, 171, 190, 203, 229, 322, 361, 368, 392, 410, 417, 521, 600, 634, 641, 654, 668, 671, 725, 735, 753, 755, 789, 839, 854, 862, 863, 878, 880, 902, 924, 929, 955, 962, 974, 995, 997, 1003, 1092, 1099, 1101], "jump": [20, 43, 102, 130, 358, 362, 521, 668, 671, 678, 796, 849, 928, 1066], "outest": 20, "level": [20, 76, 131, 132, 142, 200, 206, 216, 219, 240, 273, 312, 336, 362, 368, 408, 411, 413, 414, 420, 428, 436, 647, 648, 708, 739, 741, 753, 760, 769, 793, 854, 861, 870, 874, 933, 941, 954, 962, 974, 995, 1005, 1030, 1034, 1067, 1070, 1080, 1087, 1114], "cleanup_stage1": 20, "screenplai": [21, 58, 124, 133, 154, 158, 210, 222, 231, 249, 257, 259, 270, 278, 301, 409, 425, 433, 504, 507, 510, 513, 516, 519, 522, 525, 561, 562, 582, 714, 717, 722, 727, 731, 733, 769, 772, 775, 778, 922, 926, 930, 998, 1089, 1096, 1100, 1102, 1105], "dies": [22, 139, 140, 145, 148, 149, 150, 158, 164, 174, 175, 179, 187, 194, 211, 213, 219, 220, 223, 301, 306, 319, 1107, 1109, 1110, 1111, 1116, 1122, 1123, 1125, 1129, 1130], "einreichungsunterlagen": 22, "diesem": [22, 140, 174, 1109, 1126], "formular": 22, "projekten": [22, 1123, 1124], "mehrer": [22, 1116], "projektpartn": 22, "muss": [22, 154, 164, 174, 179, 220, 301, 306, 1107, 1109, 1116, 1123], "federf\u00fchrend": 22, "auftreten": 22, "projektleitung": 22, "projektabwicklung": 22, "seiten": 22, "f\u00f6rdergeb": 22, "erfolgtausschlie\u00dflich": 22, "federf\u00fchrenden": 22, "antragstel": 22, "s\u00e4mtlich": 22, "weiterenprojektpartn": 22, "innen": 22, "zus\u00e4tzlich": [22, 139], "anzugeben": 22, "aufteilung": 22, "f\u00f6rdersumm": 22, "erfolgen": [22, 145, 175], "soll": [22, 140, 166, 195, 234, 1106], "punkt": [22, 140, 150, 166, 176, 220], "erfolgreichemf\u00f6rderantrag": 22, "anschluss": 22, "individuel": [22, 166, 1106], "f\u00f6rdervertrag": 22, "erstellt": 22, "derzuerkannten": 22, "direkt": [22, 158, 1109, 1125], "\u00fcberweisungen": 22, "f\u00f6rderraten": 22, "anteil": 22, "dieprojektpartn": 22, "fall": [22, 140, 149, 163, 166, 174, 179, 223, 234, 350, 358, 476, 648, 654, 739, 897, 898, 915, 1057, 1080], "allenprojektpartn": 22, "unterschreiben": 22, "verbindlich": 22, "vereinbart": 22, "privatperson": 22, "organis": [22, 192], "uni": 22, "contemporari": 22, "open": [22, 32, 33, 36, 37, 40, 46, 47, 52, 61, 66, 111, 130, 131, 134, 138, 146, 148, 152, 154, 168, 170, 172, 181, 190, 191, 193, 197, 200, 203, 204, 206, 211, 214, 219, 226, 229, 231, 244, 247, 249, 251, 256, 258, 261, 265, 293, 308, 347, 408, 410, 416, 723, 751, 759, 784, 785, 793, 794, 796, 799, 801, 842, 861, 870, 878, 879, 884, 887, 889, 890, 893, 895, 898, 899, 921, 924, 928, 931, 948, 954, 955, 1024, 1050, 1052, 1063, 1064, 1066, 1085, 1092, 1107, 1124, 1125], "wer": [22, 139], "unser": [22, 167, 175, 1107], "motiv": [22, 27, 95, 796, 815, 913, 960, 961], "300": [22, 150, 152, 164, 200, 203, 206, 211, 213, 219, 223, 226, 244, 265, 271, 293, 324, 326, 328, 344, 368, 556, 557, 558, 559, 560, 562, 563, 564, 565, 579, 730], "zeichen": [22, 213], "ich": [22, 62, 139, 140, 148, 149, 150, 154, 164, 174, 182, 213, 265, 301, 319, 1069, 1106, 1107, 1116, 1123, 1124, 1130], "einzelunternehm": 22, "lebe": 22, "einerseit": [22, 145], "kleineren": 22, "gr\u00f6\u00dferen": [22, 1124], "andererseit": [22, 145], "haupts\u00e4chlich": [22, 175, 1122], "unternehmen": 22, "halt": [22, 108, 109, 174, 203, 219, 226, 229, 244, 251, 261, 265, 790, 848, 863], "bringen": [22, 1107], "schulungsunterlagen": [22, 1106], "deren": [22, 148, 170, 1111, 1124, 1128, 1129], "wartbarkeit": 22, "nichtverf\u00fcgbarkeit": 22, "problem": [22, 43, 55, 78, 105, 111, 119, 131, 138, 147, 150, 152, 154, 155, 161, 163, 164, 167, 168, 170, 172, 183, 187, 192, 209, 211, 217, 231, 236, 238, 249, 253, 256, 257, 259, 260, 268, 273, 274, 279, 287, 308, 319, 347, 358, 368, 369, 372, 386, 392, 394, 410, 415, 439, 454, 497, 504, 539, 553, 566, 598, 601, 604, 625, 698, 710, 757, 796, 856, 917, 941, 943, 947, 952, 957, 959, 962, 963, 974, 986, 1000, 1050, 1055, 1057, 1061, 1083, 1092, 1093, 1107, 1114, 1115], "darstellt": 22, "wen": 22, "nutzen": [22, 1125], "400": [22, 128, 133, 150, 164, 174, 203, 206, 248, 265, 410, 579, 1012, 1015], "stellen": [22, 145], "kursverlauf": 22, "vorhandenem": 22, "zusammen": [22, 1106], "bereiten": [22, 174], "kursergebniss": 22, "editoren": 22, "kreieren": 22, "warten": 22, "kursmateri": 22, "endbenutz": 22, "konsumieren": 22, "auch": [22, 139, 140, 145, 150, 154, 164, 176, 179, 181, 187, 190, 195, 216, 220, 226, 251, 296, 297, 319, 1106, 1107, 1108, 1109, 1110, 1116, 1119, 1123, 1128, 1130], "usecas": [22, 874, 977], "gel\u00f6st": [22, 164], "500": [22, 174, 181, 200, 203, 206, 248, 579, 854, 881, 1012, 1015], "hierarchisch": 22, "gruppierung": 22, "einzelthemen": 22, "zuwenig": 22, "themen": [22, 145, 156, 158, 1116], "bauen": [22, 1109, 1119, 1128], "aufeinand": [22, 844], "explizit": [22, 148, 158, 164, 174, 234, 261, 1109, 1110, 1126], "abh\u00e4ngigkeitsbeziehungen": [22, 1119], "fehlen": 22, "extrem": [22, 131, 190, 211, 219, 226, 229, 251, 301, 306, 369, 408, 561, 630, 678, 757, 784, 785, 1070, 1107, 1119], "verringert": 22, "zusammenarbeit": [22, 1106], "trainern": 22, "fehlend": [22, 150], "aggregierbarkeit": 22, "bzw": [22, 139, 148, 154, 158, 180, 319, 1116, 1123, 1125], "referenzierbarkeit": 22, "fremdunterlagen": 22, "analog": [22, 164, 924, 1076], "librari": [22, 61, 69, 72, 76, 83, 95, 101, 102, 104, 106, 108, 109, 111, 131, 133, 142, 150, 152, 154, 159, 160, 161, 168, 170, 172, 191, 193, 200, 206, 216, 219, 223, 235, 236, 247, 249, 273, 274, 302, 303, 304, 319, 320, 323, 324, 333, 341, 364, 381, 391, 398, 404, 414, 415, 420, 422, 423, 432, 446, 469, 470, 473, 475, 476, 479, 480, 482, 483, 484, 485, 492, 503, 512, 526, 527, 571, 577, 581, 589, 590, 591, 593, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 643, 648, 674, 699, 708, 709, 710, 735, 787, 790, 791, 853, 874, 875, 876, 881, 882, 884, 891, 892, 894, 899, 902, 908, 911, 914, 916, 928, 931, 932, 933, 934, 936, 937, 938, 939, 941, 943, 978, 980, 995, 997, 1000, 1064, 1070, 1088, 1101, 1109, 1111, 1113, 1114, 1125, 1127], "anfangen": 22, "geben": [22, 1110, 1111], "trainingsunterlagen": 22, "ging": [22, 139, 319], "funktioniert": [22, 164, 213], "projektergebni": 22, "basiert": [22, 234, 1107, 1110, 1119, 1126], "popul\u00e4ren": 22, "dokumentationstool": 22, "gestaltet": [22, 158, 1106, 1116], "eigentlich": [22, 150, 164, 1107, 1110], "kern": 22, "begleitet": [22, 166], "meinem": [22, 140, 149, 175, 845, 1122], "eigenen": [22, 1116, 1123], "schulungsmateri": 22, "damit": [22, 139, 164, 194, 220, 301, 306, 319, 1107, 1125, 1129], "quasi": [22, 154, 158], "spin": [22, 698, 760, 794], "off": [22, 130, 132, 133, 136, 141, 152, 163, 183, 226, 347, 350, 389, 397, 398, 413, 419, 420, 469, 476, 503, 521, 601, 654, 689, 751, 762, 788, 813, 841, 854, 861, 863, 889, 898, 907, 917, 924, 983, 1001, 1035, 1060, 1117], "anwendbar": [22, 1129], "klarer": 22, "bezug": [22, 220], "f\u00f6rdervoraussetzung": 22, "bitt": [22, 139, 158, 164, 174, 175, 1106, 1122], "gehen": 22, "folgenden": [22, 158, 319, 845], "ausschlie\u00dflich": 22, "jene": 22, "aspekt": [22, 1108, 1116, 1123, 1126], "denen": [22, 139, 1116], "klaren": 22, "mehrwert": 22, "technologi": [22, 203, 915, 931, 1012], "infrastruktur": [22, 1107, 1116, 1123], "sozial": 22, "gesellschaft": 22, "umwelt": 22, "wirtschaftlich": [22, 166], "oder": [22, 127, 148, 154, 158, 164, 175, 176, 181, 195, 204, 213, 220, 817, 845, 1083, 1106, 1109, 1110, 1116, 1119, 1122, 1123, 1124, 1126, 1129, 1130], "wissenschaftlich": 22, "kooperationen": 22, "regionalpolitik": 22, "framework": [22, 76, 148, 158, 167, 193, 209, 424, 478, 861, 863, 1084, 1092, 1093, 1128, 1130], "jeglich": [22, 1116], "art": [22, 30, 43, 943, 1115], "konsistenzgecheckt": 22, "crossreferenc": 22, "webseiten": 22, "hinweg": [22, 175, 1122], "erm\u00f6glicht": [22, 166, 319], "gesellschaftlich": 22, "\u00f6ffentlich": [22, 145, 1106], "verf\u00fcgbarkeit": 22, "erleichterung": 22, "machen": [22, 139, 150, 154, 164, 213, 296, 319, 1107, 1110, 1111, 1116, 1130], "commun": [22, 61, 70, 71, 72, 76, 79, 81, 85, 116, 119, 131, 146, 155, 163, 178, 247, 298, 307, 308, 384, 428, 699, 700, 709, 710, 716, 757, 769, 790, 853, 854, 861, 862, 863, 878, 883, 894, 899, 908, 915, 918, 924, 929, 963, 1051, 1054, 1074, 1112, 1115, 1117, 1126, 1127], "trainerinnen": 22, "kann": [22, 35, 139, 140, 148, 154, 158, 164, 174, 187, 194, 234, 301, 306, 319, 1106, 1107, 1109, 1111, 1116, 1123, 1124, 1125, 1128, 1130], "sch\u00f6pfen": 22, "trainerinnenn": 22, "gegeneinand": 22, "arbeiten": [22, 164, 175, 1122], "genau": [22, 148, 150, 164, 296, 845, 1109, 1126, 1128, 1129], "die_der": 22, "adressat_in": 22, "je": [22, 30, 140, 174], "konkret": 22, "eingrenzen": 22, "desto": 22, "k\u00f6nnen": [22, 145, 148, 158, 164, 176, 189, 301, 302, 306, 319, 845, 1106, 1108, 1109, 1119, 1129, 1130], "bed\u00fcrfniss": [22, 166], "dieser": [22, 35, 139, 158, 174, 226, 296, 319, 1106, 1107, 1108, 1116, 1118, 1119, 1125, 1126], "adressat_innen": 22, "ber\u00fccksichtigen": 22, "wahrscheinlich": [22, 154, 1116, 1123], "deshalb": 22, "nachhaltig": 22, "wirkung": 22, "weil": [22, 150, 164, 166, 187, 226, 319, 1107, 1109, 1111], "speziellen": 22, "konzepten": 22, "unterschiedlich": [22, 175, 220, 1122], "zielgruppen": 22, "beziehung": [22, 158], "zueinand": 22, "stehen": [22, 164, 1128], "anbieter_innen": 22, "nachfrager_innen": 22, "drei": [22, 139, 150, 158, 164, 174, 179, 181, 200, 203, 211, 213, 216, 219, 226, 229, 244, 251, 261, 265, 271, 296], "angeben": 22, "sollt": [22, 139, 140, 145, 148, 187, 1109, 1128], "m\u00f6glichst": 22, "erheblich": 22, "ihrer": [22, 211, 301, 306, 1116, 1123], "jeweiligen": [22, 1106], "sein": [22, 140, 148, 149, 166, 174, 175, 187, 213, 251, 1107, 1109, 1122, 1123, 1125, 1128, 1129, 1130], "dann": [22, 140, 150, 158, 164, 175, 213, 219, 220, 226, 261, 319, 1107, 1119, 1122, 1130], "einzelnen": 22, "aussieht": [22, 1108], "erst": [22, 158, 174, 187, 213, 220, 226, 244, 296, 1107, 1109], "bestandteil": [22, 1128], "um": [22, 30, 139, 140, 148, 150, 154, 158, 164, 174, 175, 213, 226, 241, 319, 1106, 1108, 1109, 1110, 1111, 1116, 1122, 1126], "n": [22, 33, 36, 38, 48, 61, 109, 133, 142, 150, 151, 152, 158, 164, 174, 179, 181, 182, 190, 192, 195, 196, 197, 200, 203, 204, 206, 209, 211, 213, 216, 219, 223, 226, 229, 241, 244, 251, 255, 261, 265, 292, 293, 294, 296, 301, 323, 324, 326, 330, 332, 334, 336, 338, 343, 346, 356, 358, 364, 365, 369, 374, 382, 386, 391, 410, 411, 418, 481, 518, 537, 543, 561, 607, 608, 611, 612, 614, 615, 618, 619, 620, 621, 622, 623, 631, 633, 648, 710, 735, 771, 790, 794, 804, 814, 817, 830, 846, 848, 849, 863, 875, 877, 878, 879, 880, 881, 887, 888, 890, 915, 921, 925, 928, 931, 937, 943, 947, 949, 974, 975, 977, 992, 994, 999, 1000, 1005, 1006, 1050, 1052, 1092, 1104], "ihrem": [22, 1106], "l\u00f6sen": 22, "wollen": [22, 35, 179, 319, 1111, 1116, 1119, 1123, 1125], "hilfestellung": 22, "abgrenzung": 22, "organisationen": 22, "privatpersonen": 22, "bestimmt": 22, "branch": [22, 48, 52, 59, 123, 134, 137, 146, 250, 253, 362, 403, 404, 730, 757, 759, 769, 861, 863, 990, 1124, 1130], "firmen": 22, "gruppen": 22, "staatlich": 22, "verwaltung": 22, "privat": [22, 55, 100, 105, 111, 133, 145, 146, 158, 160, 167, 168, 171, 191, 204, 209, 221, 240, 256, 258, 300, 301, 306, 418, 422, 427, 429, 433, 435, 440, 450, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 473, 512, 518, 527, 531, 533, 535, 536, 538, 539, 540, 542, 544, 554, 569, 570, 587, 597, 599, 600, 604, 612, 623, 626, 629, 630, 632, 633, 636, 637, 648, 650, 651, 652, 654, 656, 657, 660, 661, 662, 663, 669, 670, 671, 684, 685, 686, 689, 690, 698, 700, 710, 751, 786, 787, 792, 806, 812, 853, 870, 975, 1085, 1087, 1104, 1126], "verein": 22, "npo": 22, "wissenschaft": 22, "universit\u00e4t": 22, "fachhochschulen": 22, "richtungen": 22, "regionen": 22, "stadt": [22, 196], "land": [22, 416], "bezirk": 22, "gemeinden": 22, "interessensgruppen": 22, "selbstvermarkter_innen": 22, "landwirtschaft": 22, "handwerk": 22, "u": [22, 30, 32, 33, 34, 36, 40, 51, 57, 60, 111, 113, 133, 136, 141, 151, 161, 164, 167, 169, 175, 192, 203, 207, 211, 213, 216, 219, 241, 248, 265, 346, 377, 402, 686, 726, 732, 767, 794, 802, 813, 814, 816, 817, 841, 854, 861, 862, 863, 882, 919, 928, 931, 941, 949, 986, 988, 1012, 1066, 1070, 1074, 1087, 1092, 1099, 1115, 1122], "altersgrupp": 22, "genderspezifisch": 22, "frauen": 22, "region": [22, 131, 713, 741], "grupp": [22, 179, 310, 845], "sch\u00fcler_innen": 22, "lehrer_innen": 22, "thematisch": 22, "muttersprach": 22, "deutsch": [22, 195, 299, 300, 1106], "fl\u00fcchtling": 22, "posit": [22, 28, 61, 138, 164, 167, 168, 170, 172, 174, 179, 187, 191, 200, 207, 211, 216, 217, 219, 226, 229, 240, 243, 250, 253, 255, 257, 259, 260, 263, 265, 269, 271, 275, 278, 279, 287, 332, 369, 382, 521, 562, 569, 578, 579, 710, 817, 854, 862, 878, 879, 883, 924, 952, 953, 956, 997, 998, 1000, 1001, 1002, 1053, 1065, 1071, 1072, 1079, 1094, 1099], "zielgruppentyp": 22, "350": [22, 203, 206, 251, 265, 1012], "bereitet": 22, "schulung": [22, 126, 139, 140, 154, 163, 166, 319, 320, 713, 716, 721, 726, 735, 743, 921, 924, 928, 956, 958, 978, 1054, 1072, 1086, 1106, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1118, 1119, 1127], "vor": [22, 139, 140, 154, 164, 176, 211, 1119, 1128], "agenda": [22, 26, 155, 260, 264, 268, 270, 274, 279, 283], "lt": [22, 30, 33, 34, 133, 138, 150, 153, 158, 159, 164, 169, 174, 179, 181, 187, 190, 195, 200, 203, 206, 211, 213, 216, 219, 223, 226, 229, 232, 241, 244, 248, 251, 261, 265, 271, 295, 296, 297, 475, 490, 492, 526, 571, 577, 581, 590, 593, 594, 623, 710], "zielvorgaben": 22, "basierend": [22, 150, 1106, 1111], "existierendem": 22, "f\u00fchrt": [22, 140, 1126], "jederzeit": [22, 145, 154, 319], "\u00fcberblick": [22, 154, 158, 220, 234, 319, 320, 1106, 1114, 1116, 1122, 1123, 1126, 1128], "behaltend": 22, "behandelten": 22, "fragen": [22, 166, 182, 301, 306, 319, 1106, 1116, 1123], "antworten": [22, 166], "weiterf\u00fchrend": 22, "info": [22, 141, 248, 249, 398, 402, 403, 404, 410, 411, 413, 536, 685, 732, 862, 902, 932, 933, 1092], "bed\u00fcrfni": [22, 139], "schulungsagenden": 22, "erstellen": [22, 319, 1111, 1116], "zeitaufw\u00e4ndig": 22, "fehlertr\u00e4chtig": 22, "vom": [22, 62, 139, 148, 149, 150, 164, 174, 175, 194, 219, 223, 1116, 1122, 1123, 1130], "erwartet": [22, 140, 164], "w\u00e4hrend": [22, 1106], "einzugehen": [22, 166, 1129], "geplanten": [22, 1106], "verlassen": [22, 779], "birgt": 22, "chao": [22, 815, 986], "teilnehmerinnen": 22, "\u00fcbersichtlich": 22, "nachbearbeitung": 22, "hinterlassen": [22, 139], "absch\u00e4tzung": 22, "zielgruppengr\u00f6\u00df": 22, "affinem": 22, "background": [22, 142, 235, 236, 238, 282, 624, 628, 654, 666, 693, 707, 709, 710, 732, 795, 862, 900, 909, 915, 963], "inklus": [22, 151, 164, 174, 187, 1106, 1111, 1116], "betroffen": 22, "eu": [22, 30], "20000": [22, 130, 206], "erkennung": 22, "abstand": 22, "erfordert": [22, 1116], "vgl": [22, 164, 1126, 1129], "frosch": 22, "wassergla": 22, "selbst": [22, 35, 154, 164, 174, 779, 1106, 1107, 1116, 1119, 1125, 1130], "umstellung": 22, "zus\u00e4tzlichen": 22, "aufwand": 22, "bedeutet": [22, 282], "besten": [22, 154, 220, 1109], "einsatz": [22, 1107], "erw\u00e4gung": 22, "ziehen": 22, "angegebenen": 22, "erheblichen": [22, 1109], "wesentlichen": [22, 166, 1108], "bed\u00fcrfnissen": 22, "kenntni": 22, "erlangt": 22, "mitgli": 22, "editor": [22, 29, 61, 146, 163, 287, 842, 979, 983, 1062, 1084], "verfasst": 22, "oft": [22, 139, 164, 166, 1110], "identisch": 22, "obig": 22, "behebt": 22, "inkonsistenzen": 22, "baut": [22, 1107, 1125], "neue": [22, 164, 174, 206, 234, 296, 319, 1126], "verliert": [22, 1130], "aufbaubeziehungen": 22, "thema": [22, 149, 166, 220, 234, 301, 306, 1106], "verlangt": [22, 1106], "grundlag": 22, "folienmateri": 22, "meist": [22, 1125], "powerpoint": [22, 29], "anderen": [22, 164, 174, 179, 181, 319, 1106, 1107, 1109, 1111, 1130], "propriet\u00e4r": 22, "formaten": 22, "praktisch": [22, 150, 1106], "unm\u00f6glich": 22, "macht": [22, 148, 150, 154, 158, 164, 170, 174, 216, 220, 296, 1109, 1116, 1123, 1130], "artefakttypen": 22, "livehack": [22, 23, 58, 111, 124, 150, 156, 158, 167, 168, 175, 194, 207, 209, 210, 222, 231, 236, 238, 239, 247, 250, 257, 259, 264, 270, 275, 278, 301, 319, 409, 425, 432, 504, 708, 710, 722, 759, 998, 1065, 1089, 1096, 1122], "st\u00fcckwerk": 22, "gew\u00f6hnlich": 22, "trainerin": 22, "oben": [22, 139, 164, 175, 181, 1122], "zielt": 22, "darauf": [22, 139, 150, 1106, 1109], "transpar": [22, 28, 35, 741, 743, 793, 1071], "wiederzuverwenden": 22, "sodass": [22, 35, 158, 1125, 1130], "aufgebrochen": 22, "schwer": [22, 154, 164, 319, 1116, 1123, 1128], "abzusch\u00e4tzen": 22, "abzielt": 22, "weg": [22, 139, 140, 150, 154, 166, 179, 194, 234, 319, 1107, 1109, 1110, 1111, 1123], "dorthin": 22, "m\u00fcssen": [22, 164, 301, 306, 1116, 1123], "unterst\u00fctzt": [22, 1130], "kursf\u00fchrung": [22, 319], "fragt": [22, 140], "unklarheiten": 22, "weist": [22, 139], "etwaig": 22, "verwandt": [22, 1109], "hin": [22, 319], "plausibl": [22, 133], "realistisch": 22, "bzgl": 22, "kursdauer": 22, "strukturierten": [22, 175], "langweiligen": 22, "tatsachen": 22, "entsprechend": 22, "hunderttausend": 22, "allerd": [22, 164, 166, 1110, 1111, 1125, 1130], "keinen": [22, 139, 1109], "einfluss": 22, "wahl": [22, 1130], "gespr\u00e4ch": 22, "betroffenen": 22, "assoziieren": 22, "metadaten": 22, "setzt": [22, 148, 1107, 1116], "vorau": 22, "beziehungen": 22, "passt": [22, 174, 175, 1122], "ganz": [22, 139, 140, 149, 150, 154, 164, 166, 180, 181, 195, 212, 213, 319, 1110, 1111, 1125], "gut": [22, 139, 140, 164, 175, 319, 637, 1106, 1122], "y": [22, 109, 113, 142, 151, 152, 154, 181, 190, 196, 197, 203, 204, 206, 207, 219, 229, 232, 241, 244, 251, 261, 265, 271, 347, 353, 371, 374, 377, 378, 382, 394, 398, 410, 473, 477, 528, 529, 530, 531, 533, 535, 536, 537, 538, 539, 540, 542, 544, 546, 547, 554, 561, 569, 608, 629, 630, 631, 633, 648, 650, 651, 652, 669, 680, 689, 725, 726, 757, 758, 790, 804, 817, 819, 830, 836, 861, 862, 863, 937, 945, 951, 1009, 1012, 1060], "algorithmen": [22, 234, 1111], "automatisch": [22, 1126, 1130], "berechnen": 22, "semiautomatisch": 22, "kursnavig": 22, "nachbereitung": 22, "plaintext": 22, "meisten": [22, 158, 164, 319, 1107, 1128], "artefakt": [22, 1111], "text": [22, 26, 37, 38, 58, 127, 141, 152, 163, 166, 171, 172, 179, 191, 192, 197, 204, 211, 213, 231, 234, 237, 244, 246, 265, 267, 343, 417, 710, 787, 849, 853, 880, 931, 979, 986, 992, 1001, 1010, 1033, 1070, 1077, 1082, 1084, 1085, 1119], "restrukturierung": 22, "o": [22, 28, 30, 36, 61, 76, 83, 88, 95, 96, 98, 105, 108, 109, 111, 113, 124, 131, 133, 134, 141, 142, 150, 154, 158, 168, 170, 171, 172, 174, 179, 181, 182, 188, 191, 192, 196, 198, 201, 202, 203, 204, 207, 208, 209, 210, 215, 216, 220, 221, 222, 223, 225, 227, 230, 232, 234, 237, 241, 243, 246, 247, 248, 250, 251, 253, 256, 257, 260, 262, 263, 264, 266, 267, 269, 271, 278, 279, 286, 287, 288, 289, 290, 291, 292, 301, 306, 308, 319, 321, 323, 339, 354, 363, 369, 370, 374, 376, 380, 383, 386, 387, 396, 398, 400, 402, 403, 405, 406, 410, 411, 417, 422, 436, 463, 475, 481, 526, 544, 628, 666, 692, 698, 699, 700, 707, 708, 709, 710, 725, 726, 734, 735, 757, 764, 783, 784, 785, 786, 787, 788, 790, 791, 793, 794, 802, 814, 817, 821, 822, 824, 825, 828, 829, 831, 837, 845, 846, 850, 853, 854, 861, 862, 874, 884, 887, 888, 889, 890, 891, 894, 899, 900, 908, 911, 914, 915, 916, 925, 931, 932, 933, 937, 939, 943, 947, 948, 949, 952, 954, 956, 957, 958, 962, 978, 981, 984, 986, 992, 1000, 1007, 1012, 1013, 1014, 1024, 1027, 1035, 1038, 1039, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1060, 1071, 1072, 1087, 1092, 1099, 1109, 1116, 1129], "konsistent": 22, "referenzierung": 22, "fremdmateri": 22, "speisekart": 22, "unterst\u00fctzung": 22, "themenauswahl": [22, 1106], "korrekt": [22, 1109], "vorbereitet": [22, 319], "ma\u00dfnahmen": 22, "sicherstellung": 22, "geplant": 22, "beispielsweis": [22, 145, 1129], "rahmen": 22, "webplattform": 22, "entsteht": 22, "erh\u00f6hung": 22, "sichtbarkeit": [22, 1109, 1126], "aktuel": 22, "inhalt": [22, 164, 166, 196, 302, 779, 1106, 1130], "wartung": 22, "performanceverbesserungen": 22, "plane": [22, 152, 154, 1057], "kein": [22, 149, 150, 154, 164, 174, 181, 196, 232, 251, 296, 319, 1124], "impactmein": 22, "sicherzustellen": 22, "erkl\u00e4rung": [22, 188], "erkl\u00e4ren": [22, 1109], "gew\u00fcnscht": [22, 164], "erreicht": [22, 139, 140, 1123], "hatt": [22, 139, 140, 154, 164, 166], "button": [22, 111, 130, 138, 217, 854], "gew\u00e4hlt": [22, 139, 140], "dzugeh\u00f6rig": 22, "textfeld": 22, "l\u00e4sst": [22, 1125], "sich": [22, 35, 139, 140, 145, 148, 149, 150, 154, 164, 166, 174, 195, 213, 216, 226, 302, 1106, 1107, 1109, 1110, 1111, 1116, 1119, 1123, 1124, 1125, 1128, 1129, 1130], "bearbeiten": 22, "daher": [22, 1130], "mein": [22, 139, 140, 145, 149, 150, 164, 174, 175, 194, 319, 856, 924, 1107, 1122], "konvertiert": 22, "unten": [22, 140, 154, 164, 1107], "beschriebenen": 22, "kan\u00e4len": 22, "promot": [22, 135], "angab": 22, "quellen": 22, "literatur": [22, 192, 541], "lightweight": [22, 121, 146, 163, 167, 183, 217, 219, 231, 629, 687, 690, 1055, 1070, 1112], "daringfirebal": 22, "project": [22, 23, 28, 29, 36, 40, 51, 57, 60, 63, 66, 104, 111, 113, 121, 127, 131, 132, 136, 137, 138, 143, 150, 152, 154, 160, 163, 167, 170, 177, 182, 191, 210, 214, 217, 220, 247, 250, 257, 264, 305, 306, 312, 314, 319, 320, 390, 397, 401, 409, 411, 412, 413, 416, 417, 419, 421, 424, 425, 426, 432, 473, 474, 477, 481, 545, 547, 548, 692, 710, 757, 796, 852, 854, 856, 861, 862, 873, 891, 931, 932, 933, 946, 947, 1008, 1014, 1041, 1043, 1053, 1054, 1056, 1057, 1061, 1072, 1074, 1089, 1091, 1095, 1096, 1101], "docutil": [22, 30, 32, 33, 34, 36], "sourceforg": 22, "io": [22, 30, 53, 61, 89, 131, 135, 137, 152, 154, 168, 170, 171, 172, 173, 180, 182, 183, 191, 192, 205, 221, 237, 244, 246, 252, 267, 268, 289, 301, 304, 306, 308, 323, 527, 708, 710, 734, 753, 754, 769, 787, 790, 798, 853, 862, 863, 916, 924, 945, 952, 1005, 1108, 1116, 1118, 1123, 1125, 1129], "generatoren": [22, 154, 221, 319], "staticgen": 22, "learn": [22, 28, 63, 66, 68, 73, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 114, 131, 133, 151, 152, 154, 163, 167, 171, 192, 201, 278, 287, 302, 304, 408, 672, 710, 799, 854, 862, 916, 978, 979, 1053, 1057, 1061, 1072, 1094], "moodl": [22, 104, 107, 108, 109, 111, 138, 305, 307, 308, 609, 623, 710, 787, 791, 806, 812, 831, 837, 853, 938, 941], "schoologi": 22, "eduongo": 22, "produkt": 22, "dienstleistungen": 22, "gem\u00e4\u00df": [22, 140], "recherch": [22, 154], "hinblick": [22, 1118], "ihnen": [22, 140, 844, 1106, 1116, 1123], "nennen": 22, "beschreiben": 22, "st\u00e4rken": [22, 1109], "schw\u00e4chen": [22, 1111], "konkurrierenden": 22, "konzept": [22, 319, 1116, 1118, 1125], "relevant": [22, 154, 319, 1129], "anbiet": 22, "ziel": [22, 1107, 1123], "allumfassend": 22, "eh": [22, 30, 164, 174, 179, 187, 213, 219, 223, 226, 271], "all": [22, 23, 28, 33, 38, 40, 43, 44, 45, 49, 53, 54, 55, 57, 59, 60, 63, 68, 78, 86, 108, 109, 118, 124, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 145, 146, 147, 151, 152, 153, 158, 160, 163, 164, 166, 167, 169, 174, 179, 183, 189, 191, 192, 200, 203, 206, 207, 211, 216, 217, 219, 236, 238, 241, 244, 247, 249, 256, 258, 265, 286, 288, 289, 296, 312, 324, 328, 338, 342, 343, 346, 347, 348, 359, 367, 368, 374, 384, 386, 388, 390, 391, 394, 397, 398, 401, 403, 408, 410, 411, 412, 413, 414, 417, 418, 422, 423, 426, 427, 431, 433, 436, 438, 439, 447, 448, 453, 454, 469, 479, 481, 482, 504, 532, 533, 536, 538, 543, 561, 562, 579, 584, 597, 598, 612, 620, 622, 637, 639, 641, 654, 664, 668, 673, 674, 676, 686, 687, 690, 693, 695, 698, 710, 716, 718, 725, 728, 730, 735, 743, 747, 749, 753, 755, 757, 765, 771, 774, 783, 784, 785, 789, 790, 792, 793, 795, 797, 799, 800, 801, 802, 817, 818, 829, 836, 839, 841, 843, 844, 845, 846, 848, 854, 855, 856, 857, 861, 862, 863, 873, 874, 878, 880, 883, 889, 891, 900, 907, 913, 916, 917, 918, 929, 933, 939, 943, 948, 949, 953, 954, 955, 966, 974, 979, 980, 984, 986, 999, 1000, 1003, 1004, 1005, 1010, 1016, 1017, 1033, 1034, 1050, 1054, 1055, 1067, 1071, 1080, 1087, 1092, 1094, 1099, 1106, 1107, 1109, 1111, 1115, 1116, 1123, 1124, 1127, 1130], "vielmehr": 22, "bietet": [22, 145, 148, 1125], "beim": [22, 139, 140, 150, 154, 164, 1109], "verfassen": 22, "kernthema": 22, "bleibt": [22, 1126], "zwischen": [22, 148, 164, 174, 181, 187, 319, 1109, 1110, 1111, 1123, 1130], "benutz": [22, 1126], "vorgaben": 22, "existiert": [22, 164, 176], "wald": 22, "dass": [22, 139, 140, 148, 150, 154, 158, 164, 175, 179, 181, 195, 301, 306, 319, 1106, 1109, 1110, 1111, 1116, 1122, 1123, 1126, 1130], "beisteuert": 22, "eben": [22, 145, 148, 174], "\u00fcbergreifend": 22, "definiert": [22, 150, 164, 1106, 1109], "ansatz": 22, "mir": [22, 139, 140, 154, 164, 175, 179, 211, 301, 306, 319, 1109, 1122], "bekannt": [22, 164, 1111], "verfolgt": [22, 1123], "essentiel": 22, "gesundheit": 22, "unterlagen": [22, 127, 194, 210, 222, 319], "licht": 22, "lesen": [22, 148, 149, 150, 164, 176, 301, 306], "einig": [22, 140, 151, 166, 319, 1109, 1116], "plugin": [22, 133, 436, 673, 945], "helfen": 22, "lieblo": 22, "halbherzig": 22, "On": [22, 95, 99, 104, 107, 108, 109, 111, 113, 131, 133, 146, 167, 183, 193, 209, 225, 227, 235, 236, 238, 241, 247, 253, 256, 282, 301, 386, 392, 401, 404, 436, 475, 477, 571, 590, 594, 623, 626, 666, 674, 693, 709, 710, 735, 758, 762, 787, 790, 791, 853, 855, 861, 863, 870, 874, 875, 878, 882, 889, 892, 894, 911, 919, 929, 934, 941, 942, 946, 984, 1074, 1078, 1094, 1112], "zentral": [22, 127], "ergebni": [22, 216], "niemand": 22, "doc": [22, 35, 37, 63, 135, 137, 150, 151, 153, 183, 191, 198, 200, 206, 215, 216, 219, 223, 226, 241, 286, 298, 301, 306, 309, 310, 321, 521, 713, 728, 734, 737, 817, 839, 897, 1000, 1064, 1069], "show": [22, 23, 26, 28, 41, 56, 61, 111, 130, 131, 133, 134, 138, 159, 167, 170, 171, 183, 192, 200, 206, 209, 216, 217, 219, 247, 259, 260, 273, 278, 279, 286, 287, 305, 307, 308, 309, 312, 371, 411, 413, 422, 453, 469, 470, 521, 610, 720, 739, 741, 773, 784, 785, 817, 839, 842, 844, 846, 854, 856, 861, 862, 863, 882, 913, 915, 919, 924, 928, 941, 943, 951, 990, 1007, 1009, 1060, 1061, 1087, 1094, 1101, 1114], "revealj": 22, "option": [22, 76, 125, 131, 132, 133, 137, 141, 146, 150, 155, 171, 183, 207, 219, 223, 231, 234, 235, 236, 244, 249, 253, 265, 273, 274, 282, 301, 321, 330, 331, 347, 358, 359, 398, 411, 414, 415, 423, 424, 430, 457, 481, 710, 726, 777, 781, 784, 785, 793, 845, 863, 864, 866, 874, 887, 891, 925, 933, 989, 1007, 1010, 1087, 1094, 1101, 1109, 1114, 1127], "webslid": 22, "tv": [22, 30, 138], "sicht": [22, 149, 220, 1109], "entscheidend": 22, "usp": 22, "wodurch": 22, "vorteilhaft": 22, "unterscheidet": [22, 1109], "600": [22, 200, 206, 579], "kernfeatur": 22, "inbeziehungsetzen": 22, "dessen": [22, 149, 164, 261, 319, 1107, 1111, 1124], "versagen": 22, "implementierung": 22, "solcher": [22, 148, 164], "featur": [22, 28, 40, 44, 53, 54, 76, 78, 111, 136, 138, 148, 159, 164, 167, 168, 170, 172, 177, 182, 191, 200, 206, 209, 216, 217, 219, 220, 222, 223, 262, 282, 303, 319, 320, 396, 400, 405, 406, 408, 409, 411, 625, 628, 635, 642, 653, 667, 677, 678, 682, 686, 691, 699, 706, 707, 709, 710, 749, 757, 854, 862, 863, 883, 915, 925, 932, 933, 949, 963, 964, 965, 966, 970, 973, 980, 992, 993, 1008, 1011, 1012, 1013, 1014, 1027, 1038, 1041, 1042, 1043, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1057, 1058, 1061, 1065, 1068, 1072, 1074, 1076, 1086, 1089, 1091, 1092, 1096, 1107, 1109, 1110, 1112, 1116, 1123], "indem": [22, 174, 302, 1116], "foku": [22, 319], "schulbetrieb": 22, "legen": [22, 844], "ferner": 22, "schwere": 22, "abh\u00e4ngigkeiten": [22, 1119], "fett": [22, 164, 181], "datenbanken": [22, 187, 319], "webserv": [22, 862], "hintergrund": [22, 174], "redaktionel": 22, "arbeit": [22, 154, 1107], "offlin": 22, "laptop": [22, 132, 134, 141, 873], "zug": 22, "erledigen": [22, 1107], "einschr\u00e4nkung": 22, "geserv": 22, "erarbeitet": [22, 1106], "sinn": [22, 158, 1109], "prinzip": [22, 1126, 1128, 1130], "kostenlo": 22, "genutzt": [22, 148], "weiterentwickelt": [22, 1111, 1116], "f\u00f6rderbedingungen": 22, "projektseit": 22, "ver\u00f6ffentlichen": 22, "nachvollziehbar": 22, "strukturieren": 22, "f\u00f6rderzusag": 22, "hinwei": 22, "verpflichtend": 22, "gesondert": 22, "erw\u00e4hnen": 22, "projektzwischenbericht": 22, "projektzusammenfassung": 22, "projektendbericht": 22, "entwicklerdokument": 22, "anwenderdokument": 22, "dienstleistungsbeschreibung": 22, "abh\u00e4ngig": 22, "dokument": [22, 149, 164, 175, 196, 211, 223, 296, 1124], "externkommunik": 22, "erreichung": 22, "nachhaltigkeit": 22, "projektergebnistyp": 22, "haupteigenschaften": 22, "funktionalit\u00e4t": [22, 164], "sourcecod": [22, 148], "bestehend": 22, "unabh\u00e4ngigem": 22, "unitgetestetem": 22, "core": [22, 57, 60, 127, 130, 131, 133, 134, 163, 166, 170, 175, 188, 203, 214, 217, 219, 226, 229, 244, 248, 251, 261, 265, 324, 336, 381, 425, 426, 433, 438, 452, 453, 480, 536, 541, 634, 664, 684, 728, 732, 757, 794, 832, 848, 913, 916, 917, 928, 929, 945, 1012, 1055, 1060, 1076, 1077, 1079, 1080, 1092, 1127], "reih": [22, 145, 158, 166], "direct": [22, 35, 37, 61, 111, 128, 131, 192, 250, 253, 287, 358, 369, 404, 417, 544, 690, 716, 793, 850, 877, 879, 895, 897, 898, 933, 947, 974, 1060, 1071, 1080, 1114, 1117], "generierten": 22, "kursagenda": 22, "graphen": 22, "lizenz": 22, "gpl": [22, 536, 685, 713], "pypi": [22, 114, 127, 163, 167, 182, 198, 214, 240, 1086, 1087, 1092], "installierbar": 22, "paket": [22, 148, 1107], "generiert": [22, 164], "readthedoc": [22, 30, 37], "gehostet": 22, "verf\u00fcgbar": [22, 917, 1119], "obigen": 22, "bisherigen": [22, 1111], "aktuellen": [22, 174], "bereich": [22, 154, 319], "umfeld": 22, "projektantrag": 22, "bisher": [22, 127, 1106], "softwarebasi": 22, "grundlegend": [22, 176, 1111, 1116, 1123, 1125, 1128], "semiprofessionel": 22, "visualisierung": 22, "plan": [22, 40, 59, 130, 154, 163, 198, 207, 217, 300, 301, 305, 309, 315, 408, 524, 634, 692, 757, 1092, 1099], "kurz": [22, 139, 140, 164, 166, 175, 180, 195, 220, 1108, 1122, 1125], "lebensl\u00e4uf": 22, "projektbeteiligten": 22, "sowi": [22, 1119], "ver\u00f6ffentlichungen": 22, "b\u00fccher": 22, "fachartikel": 22, "patent": 22, "vortr\u00e4g": 22, "gebiet": [22, 140, 1128], "projektinhalt": 22, "verdeutlichen": [22, 1107], "teamleitung": 22, "softwareprojekt": 22, "stefan": [22, 149], "walkner": 22, "1983": [22, 527], "hallein": 22, "master": [22, 59, 113, 134, 137, 146, 302, 303, 753, 757, 846, 858], "scienc": [22, 27, 76, 138, 152, 163, 167, 172, 201, 270, 303, 527, 580, 980, 1059, 1060, 1061, 1062], "salzburg": 22, "consult": [22, 57, 60, 128, 131, 144, 182, 200, 206, 216, 219, 223, 307, 433], "isamberth": 22, "adnet": 22, "2000": [22, 187, 190, 206, 211, 223, 244, 410, 436, 917], "2002": [22, 206, 536, 685], "divers": [22, 155, 1108], "2005": [22, 527], "2007": 22, "entwicklungsleit": 22, "nextsens": 22, "2016": [22, 166, 167, 188, 191, 206, 214, 240, 247, 255, 264, 1055], "programmiererfahrung": [22, 1116, 1123, 1130], "bash": [22, 97, 111, 128, 138, 147, 171, 181, 183, 203, 211, 219, 226, 229, 237, 244, 246, 247, 251, 258, 261, 265, 267, 301, 302, 303, 306, 308, 320, 432, 446, 469, 475, 476, 479, 480, 483, 484, 485, 503, 526, 676, 679, 699, 708, 709, 710, 780, 784, 785, 786, 787, 789, 790, 791, 792, 794, 795, 798, 799, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 817, 818, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 842, 847, 848, 853, 876, 879, 882, 884, 886, 889, 892, 894, 895, 908, 910, 911, 914, 916, 931, 933, 935, 936, 937, 938, 939, 940, 941, 942, 945, 952, 1033, 1063, 1107, 1118], "davon": [22, 139, 150, 1109, 1128], "teamleit": 22, "m\u00f6chten": [22, 1130], "ggf": 22, "kennenlernen": 22, "knackig": [22, 127], "darstellung": 22, "handelnden": 22, "personen": 22, "sendung": 22, "minuten": [22, 845], "millionen": 22, "ihren": [22, 164, 176], "antrag": 22, "nochmal": 22, "vorgelesen": 22, "bekommen": [22, 158, 319, 1106, 1119], "un": [22, 158, 166, 319, 735, 841, 974, 1107], "hintergrundmusik": 22, "windger\u00e4usch": 22, "gerad": [22, 140, 174, 175, 319, 1109, 1122], "f\u00f6rdern": 22, "sollen": 22, "animiert": 22, "produktvideo": 22, "interessieren": 22, "sicher": [22, 150, 154], "mindesten": [22, 150], "vier": [22, 150, 164, 174, 179, 181, 196, 200, 203, 211, 213, 216, 223, 229, 241, 244, 248, 251, 261, 271, 296, 1116, 1129], "monat": 22, "einreichschluss": 22, "uneingeschr\u00e4nkt": 22, "aufrufbar": 22, "youtu": [22, 679, 683], "hobyb1zukdi": 22, "projektrisiken": 22, "sehen": [22, 140], "wenig": [22, 149, 164, 234, 319, 1107], "pflegen": 22, "frontalen": 22, "vortragsstil": 22, "starker": 22, "paradigmenwechsel": 22, "wechsel": 22, "jahrelang": 22, "gewohnten": 22, "verfahrensweisen": 22, "abrupt": 22, "gro\u00dfer": 22, "monolithisch": 22, "zerhacken": 22, "welchen": 22, "bewerten": 22, "messen": 22, "zielerreichung": 22, "kriterium": 22, "arbeitserleichterung": 22, "minimal": [22, 164], "erfolg": [22, 1109], "mindestkriterien": 22, "positiven": 22, "projekterfolg": 22, "jedenfal": 22, "abgedeckt": 22, "ausgezeichnet": 22, "kriterien": [22, 145, 158, 845], "angestrebten": 22, "ausgezeichneten": 22, "anerkennen": 22, "gesteigerten": 22, "effekt": [22, 164, 175, 1122, 1130], "weiter": [22, 35, 139, 140, 164, 166, 175, 189, 213, 231, 261, 845, 1106, 1116, 1122, 1123, 1125, 1126, 1130], "bekundet": 22, "interess": [22, 220, 1107, 1118], "medien": [22, 1129], "berichtet": 22, "migrat": [22, 158], "zehn": [22, 174], "migrieren": 22, "verwenden": [22, 145, 158, 164, 170, 174, 179, 1129], "untereinand": 22, "zutun": 22, "zusammenzuarbeiten": 22, "kooperationspartner_innen": 22, "dienstleister_innen": 22, "mitwirkend": 22, "zielgruppenvertreter_innen": 22, "werbeagentur": 22, "schaar": 22, "logo": 22, "webdesign": 22, "wof\u00fcr": 22, "arbeitsstunden": 22, "geld": 22, "allem": [22, 139, 154, 164, 319, 1128], "eingesetzt": [22, 1107, 1124], "basisarbeit": 22, "workflow": [22, 158, 192, 207, 730, 925, 1124], "datenstrukturen": [22, 176, 194, 215, 1111], "zeitgem\u00e4\u00df": 22, "interakt": [22, 1005], "know": [22, 40, 57, 60, 63, 67, 78, 82, 128, 130, 131, 132, 133, 136, 137, 138, 146, 151, 152, 155, 159, 160, 163, 167, 171, 182, 183, 190, 193, 250, 253, 257, 303, 334, 336, 342, 347, 364, 374, 386, 388, 390, 392, 396, 397, 398, 400, 404, 405, 406, 408, 417, 423, 427, 428, 440, 479, 481, 512, 528, 530, 536, 538, 542, 561, 598, 601, 604, 625, 626, 628, 637, 639, 641, 664, 666, 675, 684, 686, 690, 700, 707, 709, 710, 712, 728, 735, 757, 796, 817, 854, 857, 861, 863, 874, 879, 881, 890, 900, 928, 949, 957, 962, 963, 974, 979, 982, 985, 986, 1005, 1012, 1050, 1054, 1092, 1117], "person": [22, 138, 168, 187, 190, 229, 231, 233, 240, 244, 251, 275, 308, 393, 428, 429, 432, 457, 541, 600, 870, 968, 969, 971, 972, 973, 975, 976, 1050, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1092, 1093], "welchem": [22, 150], "umfang": 22, "sachressourcen": 22, "ben\u00f6tigt": [22, 175, 176, 1122], "zugekauft": 22, "backendprogrammierung": 22, "programmiersprach": [22, 1108, 1111, 1123, 1125], "ca": [22, 30, 139, 141, 1087], "200": [22, 127, 128, 150, 152, 164, 181, 183, 190, 197, 200, 203, 206, 211, 213, 219, 223, 226, 229, 241, 244, 248, 255, 265, 271, 293, 298, 556, 557, 558, 559, 560, 562, 563, 564, 565, 579, 633, 735, 915, 1029], "stunden": 22, "webprogrammierung": 22, "css": [22, 128, 129], "150": [22, 150, 164, 174, 181, 190, 200, 203, 206, 211, 213, 219, 223, 226, 229, 232, 241, 244, 261, 265, 271, 626], "kreativarbeit": 22, "erreichen": [22, 1123, 1126], "pers\u00f6nlich": [22, 319], "freund": 22, "ebenfal": [22, 1124], "t\u00e4tig": 22, "mich": [22, 139, 154, 174, 182, 319, 1106], "ermutigt": 22, "\u00fcberhaupt": [22, 1116, 1123, 1130], "starten": [22, 1128], "repr\u00e4sent": 22, "post": [22, 64, 91, 127, 131, 133, 135, 136, 137, 138, 141, 192, 207, 256, 334, 348, 432, 528, 854, 923, 925, 928, 1054], "meiner": [22, 220, 319, 1107], "facebookseit": 22, "relevanten": 22, "foren": 22, "linkedin": 22, "typisch": [22, 175, 1109], "projektbeginn": 22, "liegt": [22, 139, 150, 154, 223, 1110, 1126], "abschluss": [22, 140, 301], "oktob": 22, "projektdau": 22, "\u00fcberschreiten": 22, "mitarbeiter_innen": 22, "stundenanzahl": 22, "jeweilig": 22, "stundens\u00e4tz": 22, "senior": 22, "junior": 22, "programmierer_in": 22, "designer_in": 22, "contentmanager_in": 22, "projektmanager_in": 22, "assistenz": 22, "administr": [22, 138, 794, 861, 870, 877, 916], "sachbearbeiter_in": 22, "social": [22, 43, 428, 435, 439, 452, 453, 454, 457, 463, 466, 467, 468], "media": [22, 76, 148, 757, 862], "spzialist_in": 22, "firmeneigent\u00fcmer_innen": 22, "gesellschafter_innen": 22, "vereinsfunktion\u00e4r_innen": 22, "betr\u00e4gt": 22, "f\u00f6rderbar": 22, "stundensatz": 22, "brutto": 22, "nachweislich": 22, "angestellt": 22, "projektmitarbeiter_innen": 22, "errechnet": 22, "vollzeitvertrag": 22, "jahresstundenteil": 22, "1720": [22, 206], "teilzeitbesch\u00e4ftigten": 22, "aliquot": 22, "reduziert": [22, 154], "dienstgeberanteil": 22, "faktor": 22, "ber\u00fccksichtigt": 22, "kalkul": 22, "jahresbruttogehalt": 22, "hohe": 22, "risiko": 22, "h\u00f6herer": 22, "eigenmittelanteil": 22, "bedingung": 22, "festgelegt": 22, "erh\u00f6hen": 22, "gemeinkosten": 22, "gef\u00f6rdert": 22, "antr\u00e4gen": 22, "diplomarbeiten": 22, "mitarbeit": 22, "betrag": 22, "8000": [22, 206], "frontendprogrammierung": 22, "4500": [22, 206], "sachkosten": 22, "projektbedingt": 22, "reisekosten": 22, "betriebskosten": 22, "unmittelbar": 22, "projektt\u00e4tigkeit": 22, "entstehen": [22, 293], "leistungen": 22, "reisen": 22, "gliedern": 22, "rechnung": [22, 140, 248], "enthalten": 22, "umsatzsteu": 22, "darf": [22, 301], "kostenabrechnung": 22, "nur": [22, 139, 145, 149, 150, 154, 164, 166, 174, 175, 179, 181, 189, 211, 296, 319, 1108, 1109, 1116, 1119, 1122, 1123, 1124, 1126, 1128, 1129, 1130], "f\u00f6rdernehmer_in": 22, "vorsteuerabzugsberechtigt": 22, "13500": [22, 206], "beantragt": 22, "differenz": [22, 226], "aufgliedern": 22, "eigenmittel": 22, "f\u00f6rderungseinrichtungen": 22, "fremdmittel": 22, "kredit": 22, "leas": 22, "pro": [22, 167, 845, 948], "bono": 22, "beitrag": 22, "restfinanzierung": 22, "gesamtbetrag": 22, "ber\u00fccksichtigten": 22, "einzelkosten": 22, "achtung": 22, "gesamtprojektkosten": 22, "h\u00f6her": 22, "auszuf\u00fcllen": 22, "leer": [22, 181, 187, 195, 251], "bleiben": [22, 140, 164, 174, 1116, 1123, 1126], "reich": [22, 164], "nein": [22, 175, 181, 187, 232, 241, 1122], "neben": [22, 154], "antr\u00e4g": 22, "oderstipendium": 22, "laufenden": 22, "call": [22, 30, 40, 48, 61, 64, 108, 109, 127, 130, 131, 132, 133, 134, 136, 141, 148, 151, 153, 161, 167, 169, 190, 198, 200, 206, 211, 214, 216, 221, 223, 228, 229, 232, 247, 249, 251, 264, 265, 273, 301, 306, 308, 319, 323, 330, 334, 335, 338, 349, 365, 367, 371, 377, 378, 381, 391, 394, 395, 403, 411, 414, 426, 433, 437, 452, 453, 454, 471, 475, 477, 478, 481, 482, 484, 497, 512, 526, 530, 533, 536, 538, 542, 551, 597, 598, 601, 603, 604, 608, 610, 615, 622, 630, 631, 639, 643, 654, 657, 660, 661, 662, 663, 673, 676, 684, 689, 690, 698, 699, 700, 709, 710, 711, 725, 735, 737, 739, 743, 745, 747, 749, 751, 753, 755, 757, 762, 765, 771, 776, 777, 783, 787, 790, 791, 792, 793, 795, 797, 800, 801, 814, 817, 853, 857, 865, 875, 876, 879, 880, 881, 882, 884, 886, 892, 893, 894, 899, 900, 907, 908, 910, 911, 914, 915, 916, 925, 928, 929, 931, 933, 950, 952, 953, 954, 959, 965, 967, 968, 969, 971, 972, 974, 975, 976, 996, 997, 1001, 1003, 1006, 1007, 1012, 1030, 1034, 1055, 1060, 1063, 1071, 1074, 1079, 1080, 1093, 1094, 1095, 1114, 1118, 1126, 1127, 1129], "weiteren": 22, "stipendium": 22, "imlaufenden": 22, "habe": [22, 139, 140, 149, 154, 170, 319], "zuge": 22, "projektantragsstellung": 22, "rundschreiben": 22, "expert": [22, 27, 135, 136, 141, 481, 796, 817, 863, 1059], "group": [22, 28, 99, 100, 111, 124, 127, 146, 151, 163, 168, 170, 179, 182, 183, 190, 196, 203, 211, 220, 223, 229, 232, 244, 258, 265, 268, 271, 301, 314, 315, 319, 330, 355, 398, 399, 475, 504, 710, 757, 784, 785, 787, 790, 791, 792, 803, 804, 805, 806, 807, 808, 809, 810, 812, 813, 839, 843, 844, 845, 846, 850, 853, 861, 873, 874, 882, 883, 884, 889, 892, 894, 908, 911, 916, 929, 952, 1033, 1092], "wirtschaftkamm": 22, "nehmen": [22, 140, 1108], "larg": [23, 29, 36, 76, 133, 136, 138, 163, 182, 183, 192, 203, 209, 250, 253, 377, 386, 388, 392, 398, 399, 438, 663, 672, 708, 751, 757, 931, 955, 957, 959, 979, 986, 1012, 1033, 1072, 1076, 1080, 1099], "amount": [23, 104, 108, 109, 131, 132, 133, 136, 142, 163, 170, 198, 248, 249, 398, 410, 541, 663, 664, 788, 790, 874, 891, 979], "pdf": [23, 35, 156, 158, 163, 167, 170, 171, 173, 223, 237, 246, 247, 267, 268, 300, 301, 304, 306, 309, 320, 817, 839, 840, 863, 895, 933, 1027, 1108, 1109, 1110, 1118, 1119, 1125, 1126, 1128, 1129, 1130], "Not": [23, 41, 45, 51, 78, 107, 133, 134, 135, 138, 141, 163, 166, 167, 207, 209, 210, 211, 224, 233, 260, 264, 279, 338, 347, 369, 381, 384, 386, 392, 408, 411, 475, 490, 492, 526, 533, 535, 537, 542, 543, 611, 623, 643, 654, 658, 660, 661, 662, 680, 687, 690, 696, 701, 708, 710, 720, 728, 735, 739, 741, 855, 893, 913, 915, 917, 919, 929, 952, 954, 959, 960, 961, 962, 972, 974, 986, 995, 1000, 1055, 1059, 1067, 1081, 1083, 1100, 1112], "satisfi": [23, 30, 167, 427, 543, 631, 643, 676], "colleagu": [23, 27, 142, 183, 388, 600, 957, 974, 986], "aren": [23, 128, 213, 223, 639, 818, 907, 917], "either": [23, 37, 40, 41, 131, 133, 141, 142, 247, 250, 253, 386, 453, 626, 634, 637, 698, 784, 785, 814, 817, 849, 863, 954, 1021, 1074, 1112], "nobodi": [23, 41, 131, 133, 152, 163, 203, 219, 226, 229, 244, 251, 261, 265, 389, 391, 528, 569, 641, 712, 784, 785, 794, 809, 811, 817, 818, 870, 878, 1007, 1061, 1064, 1095, 1101], "doe": [23, 36, 43, 46, 47, 59, 67, 76, 81, 82, 108, 109, 111, 127, 130, 131, 132, 135, 136, 137, 138, 141, 142, 146, 151, 159, 163, 167, 169, 181, 190, 193, 206, 223, 226, 232, 250, 251, 253, 256, 258, 260, 279, 301, 312, 328, 334, 342, 346, 347, 348, 349, 356, 365, 366, 375, 378, 381, 382, 384, 386, 388, 390, 392, 397, 398, 399, 402, 403, 404, 408, 410, 411, 412, 416, 422, 423, 426, 428, 431, 436, 440, 448, 450, 452, 477, 481, 482, 483, 484, 485, 503, 509, 518, 521, 528, 529, 530, 533, 536, 538, 539, 541, 544, 567, 574, 582, 588, 597, 600, 601, 607, 608, 615, 626, 631, 632, 634, 641, 643, 663, 665, 673, 674, 676, 680, 684, 685, 686, 689, 690, 692, 696, 697, 706, 708, 720, 721, 725, 726, 728, 735, 749, 757, 762, 773, 783, 792, 796, 797, 799, 802, 850, 854, 861, 862, 863, 874, 879, 880, 882, 886, 889, 900, 904, 907, 913, 915, 916, 925, 929, 931, 932, 933, 934, 939, 943, 947, 948, 950, 952, 953, 954, 955, 957, 959, 968, 972, 974, 975, 979, 982, 985, 1003, 1004, 1005, 1024, 1032, 1034, 1061, 1064, 1066, 1067, 1069, 1076, 1077, 1080, 1081, 1082, 1084, 1087, 1092, 1112, 1114], "even": [23, 28, 57, 60, 76, 119, 131, 132, 133, 138, 142, 152, 153, 163, 167, 170, 171, 175, 177, 182, 188, 190, 191, 193, 194, 203, 207, 210, 211, 214, 217, 220, 222, 223, 225, 228, 229, 240, 250, 253, 264, 265, 365, 374, 388, 394, 398, 426, 431, 527, 535, 538, 584, 631, 673, 676, 683, 692, 708, 710, 749, 757, 794, 813, 854, 862, 879, 880, 913, 915, 916, 932, 951, 963, 974, 1000, 1003, 1014, 1017, 1018, 1053, 1055, 1079, 1087, 1094, 1114, 1122], "tech": [23, 43, 130], "although": [23, 28, 76, 131, 133, 137, 142, 153, 163, 169, 193, 213, 223, 319, 477, 626, 627, 668, 690, 796, 799, 870, 950, 955, 1012, 1061], "gain": [23, 138, 250, 253, 398, 757, 796], "incred": 23, "momentum": 23, "expect": [23, 36, 48, 130, 133, 179, 200, 206, 207, 216, 219, 226, 251, 265, 375, 413, 428, 472, 536, 601, 654, 663, 676, 730, 741, 854, 862, 863, 902, 919, 928, 974, 984, 997, 1027, 1037, 1060, 1098, 1099, 1102], "context": [23, 28, 57, 60, 108, 109, 131, 152, 155, 167, 170, 172, 174, 181, 212, 216, 217, 219, 223, 226, 232, 240, 244, 249, 259, 260, 261, 264, 271, 275, 278, 279, 319, 385, 447, 448, 462, 530, 536, 664, 685, 708, 710, 719, 724, 727, 729, 734, 737, 738, 739, 740, 743, 744, 748, 749, 750, 752, 753, 754, 761, 762, 763, 765, 766, 767, 768, 771, 772, 775, 777, 778, 790, 794, 853, 854, 877, 917, 928, 929, 956, 965, 1053, 1067, 1072], "defin": [23, 51, 124, 134, 151, 153, 168, 170, 172, 174, 179, 187, 190, 191, 193, 200, 204, 206, 209, 213, 216, 219, 223, 231, 233, 244, 255, 265, 275, 282, 296, 307, 328, 333, 338, 343, 344, 347, 364, 365, 366, 367, 368, 369, 382, 390, 391, 392, 394, 398, 411, 412, 417, 418, 419, 436, 440, 448, 470, 471, 477, 504, 512, 529, 530, 531, 533, 535, 536, 538, 539, 542, 543, 544, 551, 554, 575, 579, 600, 607, 626, 627, 636, 637, 638, 639, 640, 643, 663, 668, 672, 681, 684, 689, 690, 716, 718, 730, 794, 814, 854, 855, 863, 874, 881, 899, 921, 931, 933, 947, 949, 953, 955, 957, 969, 974, 986, 996, 1051, 1067, 1071, 1085, 1104, 1112, 1114, 1117], "solv": [23, 43, 78, 87, 111, 127, 128, 131, 132, 161, 163, 167, 168, 170, 172, 183, 188, 201, 209, 214, 217, 228, 231, 253, 257, 264, 268, 270, 273, 287, 368, 410, 419, 625, 699, 709, 710, 757, 796, 853, 894, 908, 941, 943, 945, 974, 1050, 1055, 1061, 1114, 1115], "provid": [23, 26, 35, 56, 63, 66, 131, 133, 134, 135, 137, 138, 141, 142, 146, 159, 200, 206, 207, 216, 219, 223, 257, 273, 384, 413, 418, 419, 428, 439, 447, 600, 663, 690, 757, 793, 796, 836, 862, 863, 870, 884, 916, 925, 957, 966, 984, 997, 1060, 1086, 1094, 1114], "depth": [23, 163, 167, 188, 200, 206, 216, 217, 219, 388, 688, 959, 1055, 1059, 1060], "repres": [23, 131, 133, 155, 200, 206, 216, 219, 223, 244, 255, 287, 397, 431, 448, 450, 537, 708, 728, 753, 790, 793, 861, 863, 891, 986, 1012, 1050, 1054, 1076, 1083, 1117], "own": [23, 27, 38, 41, 63, 108, 109, 131, 132, 134, 135, 141, 146, 159, 163, 209, 233, 238, 247, 257, 282, 388, 394, 409, 423, 431, 448, 453, 517, 518, 527, 604, 617, 618, 620, 621, 635, 639, 642, 654, 664, 666, 678, 686, 701, 708, 709, 710, 757, 790, 792, 793, 802, 804, 805, 813, 814, 836, 846, 861, 862, 874, 881, 899, 904, 915, 916, 928, 947, 954, 971, 976, 977, 979, 1062, 1099, 1114, 1115, 1117], "yield": [23, 28, 150, 151, 164, 167, 168, 170, 179, 191, 198, 204, 208, 210, 212, 213, 219, 223, 228, 230, 240, 243, 244, 251, 259, 260, 261, 264, 265, 270, 272, 279, 369, 438, 447, 654, 657, 660, 661, 662, 710, 952, 956, 958, 959, 961, 980, 990, 1011, 1012, 1013, 1014, 1027, 1038, 1053, 1065, 1068, 1072], "multipl": [23, 33, 34, 57, 60, 74, 104, 108, 109, 131, 132, 134, 148, 163, 167, 170, 190, 191, 192, 204, 206, 223, 258, 324, 326, 330, 331, 334, 343, 345, 348, 357, 364, 368, 386, 391, 404, 409, 416, 448, 462, 469, 530, 543, 601, 608, 621, 648, 654, 676, 678, 685, 693, 696, 700, 701, 708, 710, 726, 728, 734, 738, 739, 747, 748, 749, 757, 759, 761, 762, 765, 766, 772, 775, 778, 790, 793, 794, 797, 799, 804, 805, 850, 853, 862, 883, 899, 904, 924, 937, 974, 985, 986, 999, 1000, 1005, 1055, 1083, 1085], "artifact": [23, 137, 141, 155, 160, 273, 404, 718, 931, 932, 933, 943, 1101, 1114], "complet": [23, 40, 61, 76, 111, 127, 130, 131, 152, 163, 171, 179, 188, 201, 204, 207, 214, 228, 229, 231, 258, 264, 270, 275, 282, 286, 287, 368, 385, 398, 411, 423, 469, 480, 529, 530, 604, 673, 688, 708, 751, 757, 784, 785, 795, 857, 863, 878, 915, 952, 956, 978, 979, 1055, 1060, 1061, 1066, 1072, 1074, 1086, 1087, 1104, 1112], "prepar": [26, 111, 127, 130, 163, 220, 301, 319, 432, 474, 504, 566, 603, 924, 948, 1051, 1060, 1093], "base": [26, 28, 29, 40, 43, 51, 76, 78, 95, 105, 111, 123, 131, 133, 134, 146, 153, 158, 163, 164, 167, 170, 171, 174, 178, 181, 183, 193, 207, 209, 212, 216, 217, 221, 226, 228, 234, 241, 244, 249, 251, 255, 256, 257, 258, 259, 260, 265, 270, 278, 279, 297, 301, 305, 312, 334, 342, 369, 386, 404, 409, 410, 428, 432, 437, 438, 440, 447, 473, 480, 487, 504, 515, 557, 559, 560, 561, 562, 564, 565, 569, 601, 603, 604, 606, 648, 665, 666, 673, 678, 685, 689, 701, 704, 707, 709, 710, 730, 737, 741, 753, 757, 759, 808, 810, 850, 854, 913, 925, 929, 931, 932, 945, 946, 948, 956, 963, 965, 970, 971, 1011, 1017, 1033, 1053, 1062, 1066, 1080, 1111, 1112, 1115], "exist": [26, 36, 44, 45, 51, 53, 54, 107, 108, 109, 124, 127, 137, 142, 171, 183, 190, 256, 260, 279, 286, 298, 301, 304, 386, 408, 410, 426, 431, 451, 454, 475, 481, 490, 492, 526, 536, 584, 619, 621, 630, 684, 708, 710, 757, 784, 785, 790, 792, 799, 808, 810, 819, 823, 824, 836, 853, 861, 863, 874, 879, 883, 889, 892, 894, 911, 918, 925, 943, 947, 948, 953, 954, 963, 968, 1003, 1005, 1023, 1067, 1075, 1076, 1087, 1092, 1094], "navig": [26, 1083], "through": [26, 32, 36, 59, 71, 76, 102, 128, 130, 131, 133, 138, 142, 146, 159, 163, 167, 169, 172, 183, 191, 192, 193, 198, 204, 217, 257, 259, 260, 275, 278, 279, 308, 312, 319, 338, 358, 377, 397, 401, 414, 423, 454, 476, 484, 545, 547, 548, 597, 598, 601, 604, 626, 641, 643, 668, 676, 680, 686, 690, 728, 755, 788, 796, 844, 854, 862, 863, 872, 925, 928, 929, 954, 959, 962, 977, 979, 982, 1017, 1062, 1085, 1112, 1113, 1117], "deviat": [26, 138, 151, 159, 168, 192, 223, 319, 757], "after": [26, 41, 127, 128, 131, 132, 133, 138, 141, 151, 160, 163, 170, 183, 190, 200, 206, 216, 219, 222, 223, 229, 244, 249, 256, 258, 265, 287, 326, 334, 335, 368, 388, 395, 414, 416, 452, 453, 476, 478, 535, 538, 551, 586, 634, 636, 637, 639, 648, 654, 701, 708, 735, 739, 745, 797, 800, 817, 818, 850, 861, 901, 919, 924, 925, 928, 931, 950, 952, 954, 979, 980, 984, 1020, 1033, 1051, 1059, 1071, 1083, 1093, 1094, 1099], "writeup": [26, 142, 943], "what": [26, 27, 41, 42, 44, 45, 46, 49, 53, 54, 55, 56, 57, 60, 63, 67, 76, 81, 84, 85, 95, 96, 97, 102, 105, 111, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 142, 146, 150, 151, 152, 153, 154, 155, 157, 159, 163, 164, 167, 168, 169, 170, 171, 172, 173, 182, 190, 192, 193, 207, 208, 209, 218, 223, 231, 237, 247, 250, 253, 257, 259, 260, 273, 278, 279, 282, 286, 287, 293, 301, 304, 306, 308, 309, 312, 323, 331, 336, 346, 347, 349, 362, 371, 374, 381, 384, 386, 388, 389, 392, 393, 394, 398, 402, 404, 409, 410, 413, 418, 420, 427, 429, 431, 452, 453, 463, 470, 472, 478, 485, 504, 505, 508, 511, 514, 517, 520, 521, 523, 533, 536, 538, 539, 540, 541, 542, 544, 551, 554, 561, 597, 604, 613, 631, 634, 637, 643, 648, 654, 664, 675, 676, 684, 685, 686, 690, 693, 697, 699, 700, 706, 708, 709, 710, 718, 721, 725, 728, 730, 735, 753, 760, 765, 770, 783, 784, 785, 787, 788, 790, 791, 793, 794, 796, 797, 799, 801, 802, 803, 806, 807, 808, 809, 810, 811, 812, 817, 832, 833, 835, 853, 854, 861, 862, 863, 865, 866, 867, 868, 869, 880, 881, 887, 888, 889, 890, 892, 894, 899, 900, 901, 902, 903, 908, 911, 914, 916, 917, 919, 920, 923, 924, 925, 927, 929, 932, 941, 942, 946, 948, 949, 950, 954, 956, 957, 960, 961, 965, 966, 974, 978, 979, 997, 1003, 1007, 1012, 1015, 1023, 1050, 1054, 1062, 1067, 1074, 1083, 1092, 1094, 1098, 1099, 1101, 1103, 1114, 1117], "collect": [26, 28, 127, 130, 132, 175, 182, 191, 197, 198, 215, 217, 218, 219, 231, 240, 242, 249, 257, 259, 260, 264, 275, 278, 279, 286, 397, 404, 515, 561, 676, 685, 697, 710, 757, 788, 860, 941, 952, 956, 962, 970, 1004, 1010, 1014, 1043, 1048, 1050, 1053, 1054, 1064, 1072, 1086, 1087, 1092, 1094, 1122], "question": [26, 28, 30, 33, 34, 36, 100, 111, 133, 138, 146, 151, 163, 167, 169, 191, 192, 193, 203, 204, 206, 207, 209, 229, 301, 308, 315, 343, 372, 378, 390, 409, 412, 416, 420, 474, 537, 597, 604, 692, 696, 710, 735, 749, 765, 784, 785, 787, 806, 812, 836, 853, 861, 863, 874, 878, 894, 913, 914, 947, 955, 956, 959, 964, 1053, 1055], "ask": [26, 131, 136, 138, 146, 163, 166, 167, 232, 264, 301, 308, 408, 427, 428, 450, 470, 521, 533, 544, 665, 687, 813, 868, 870, 974, 1055], "answer": [26, 43, 135, 138, 151, 163, 167, 169, 170, 193, 204, 211, 308, 412, 416, 474, 597, 604, 606, 676, 681, 700, 721, 765, 784, 785, 790, 802, 804, 805, 808, 810, 861, 863, 870, 874, 913, 916, 947, 954, 955, 959, 966, 983, 986, 1055], "cover": [26, 76, 79, 124, 138, 155, 163, 167, 171, 173, 191, 192, 204, 217, 256, 258, 408, 427, 861, 863, 945, 954, 956, 979, 1027, 1050, 1055, 1059, 1060, 1085, 1086, 1092, 1115, 1117], "been": [26, 57, 60, 130, 131, 132, 133, 135, 136, 137, 142, 146, 151, 152, 163, 171, 200, 206, 216, 219, 250, 253, 255, 265, 298, 307, 367, 381, 382, 411, 422, 431, 448, 504, 663, 711, 753, 771, 777, 782, 792, 796, 800, 820, 854, 861, 862, 863, 874, 883, 893, 904, 929, 932, 933, 950, 957, 995, 1094, 1112, 1114, 1115], "further": [26, 128, 130, 137, 141, 157, 206, 238, 253, 309, 374, 385, 423, 481, 505, 508, 511, 514, 517, 520, 523, 635, 666, 709, 710, 728, 751, 757, 839, 864, 900, 920, 923, 927, 962, 1098, 1103, 1117], "inform": [26, 27, 28, 104, 130, 133, 134, 136, 141, 150, 151, 152, 154, 159, 179, 200, 206, 216, 219, 244, 259, 260, 278, 279, 385, 395, 402, 403, 413, 422, 690, 708, 716, 728, 792, 817, 850, 854, 861, 863, 865, 897, 953, 981, 1055, 1066, 1071, 1087, 1094], "internet": [26, 63, 76, 130, 132, 135, 136, 138, 159, 171, 179, 207, 220, 259, 260, 275, 278, 279, 298, 410, 854, 855, 857, 915, 955, 1115, 1129], "subtract": [26, 200, 223, 255, 345, 448, 462, 676, 816, 916, 966, 974, 986], "known": [26, 127, 132, 143, 183, 200, 206, 216, 219, 236, 238, 256, 273, 298, 344, 346, 358, 365, 392, 398, 563, 728, 817, 946, 1062, 1114, 1115], "calcul": [26, 80, 83, 133, 167, 191, 200, 223, 344, 346, 354, 363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 447, 477, 479, 480, 628, 633, 666, 693, 707, 709, 710, 899, 916, 957, 959, 1030, 1062, 1070, 1092], "minimum": [26, 61, 223, 648, 757, 952, 1058, 1059, 1060, 1061], "come": [26, 41, 76, 108, 109, 127, 128, 130, 131, 132, 133, 136, 137, 138, 141, 142, 153, 159, 160, 163, 183, 209, 236, 238, 249, 256, 257, 292, 298, 322, 324, 325, 341, 368, 404, 411, 448, 477, 564, 601, 604, 609, 623, 675, 678, 680, 690, 700, 710, 725, 757, 788, 790, 794, 800, 813, 817, 854, 861, 862, 863, 889, 915, 943, 954, 955, 959, 977, 978, 979, 980, 986, 997, 1005, 1007, 1012, 1017, 1035, 1046, 1066, 1069, 1074, 1088, 1115], "she": [26, 190, 601, 634, 792, 794, 999, 1007], "who": [26, 28, 43, 128, 131, 135, 138, 142, 161, 163, 209, 219, 244, 319, 394, 398, 408, 413, 436, 453, 481, 606, 676, 686, 730, 757, 765, 784, 785, 792, 796, 802, 813, 854, 862, 863, 878, 889, 931, 948, 950, 956, 978, 1054, 1072, 1084, 1092, 1112, 1115, 1117], "repetit": [26, 244, 817, 1112], "prone": [26, 343, 531, 541, 561, 634, 678, 745, 933, 1001, 1099, 1112], "possibl": [26, 57, 59, 60, 104, 111, 113, 118, 121, 127, 130, 131, 138, 141, 146, 153, 163, 167, 183, 193, 200, 206, 209, 211, 216, 217, 219, 236, 238, 247, 256, 259, 260, 265, 279, 333, 344, 347, 364, 377, 384, 390, 394, 398, 399, 402, 408, 414, 423, 426, 428, 431, 436, 440, 448, 450, 481, 518, 528, 530, 531, 536, 543, 544, 562, 579, 620, 626, 627, 634, 648, 652, 665, 676, 684, 685, 686, 690, 735, 762, 792, 801, 826, 855, 856, 861, 862, 872, 875, 904, 952, 953, 954, 962, 967, 975, 977, 986, 995, 1000, 1002, 1003, 1005, 1054, 1055, 1067, 1079], "abl": [26, 27, 29, 41, 130, 131, 133, 134, 136, 138, 146, 163, 183, 190, 272, 388, 394, 420, 427, 431, 481, 633, 643, 784, 785, 802, 808, 810, 811, 854, 862, 863, 889, 925, 956, 1070, 1117], "fix": [26, 44, 61, 63, 74, 105, 127, 131, 144, 146, 167, 188, 193, 203, 204, 209, 228, 231, 258, 259, 260, 278, 279, 301, 326, 349, 392, 408, 410, 416, 453, 482, 497, 509, 521, 527, 546, 562, 612, 619, 640, 710, 725, 730, 734, 737, 738, 758, 759, 765, 766, 772, 775, 778, 801, 853, 857, 877, 887, 918, 928, 948, 950, 953, 980, 1012, 1055, 1063], "inconsist": [26, 528, 1081], "easi": [26, 66, 119, 131, 133, 134, 135, 136, 137, 138, 142, 151, 152, 155, 167, 213, 223, 347, 362, 388, 404, 626, 643, 685, 737, 739, 743, 755, 762, 796, 861, 862, 863, 890, 907, 925, 934, 948, 974, 978, 986, 995, 997, 1061, 1092, 1093, 1117], "plain": [26, 133, 193, 312, 504, 540, 543, 622, 675, 690, 760, 862, 953, 966], "happi": [26, 63, 136, 163, 392, 536, 1060], "clear": [26, 41, 131, 133, 138, 150, 183, 193, 222, 302, 303, 369, 394, 398, 413, 423, 429, 435, 542, 597, 630, 648, 685, 757, 765, 793, 796, 817, 877, 951, 966, 986, 988, 1059, 1060, 1094], "front": [26, 76, 128, 138, 163, 219, 265, 398, 579, 698, 1115], "later": [26, 78, 130, 131, 134, 141, 152, 163, 324, 328, 334, 336, 338, 394, 398, 404, 411, 530, 531, 533, 545, 547, 548, 582, 637, 668, 671, 716, 718, 720, 725, 741, 743, 753, 760, 799, 861, 883, 899, 900, 902, 913, 917, 967, 975, 985, 988, 990, 1071, 1077], "menu": [26, 127, 171, 757, 1107], "mine": [27, 130, 131, 134, 142, 159, 163, 167, 319, 518, 757], "hi": [27, 43, 146, 151, 163, 167, 170, 188, 214, 217, 391, 485, 967, 1055], "data": [27, 28, 47, 68, 71, 76, 87, 106, 108, 109, 131, 132, 133, 134, 138, 141, 150, 152, 154, 163, 167, 168, 172, 180, 182, 187, 197, 200, 201, 206, 207, 209, 216, 219, 223, 229, 244, 248, 249, 250, 251, 253, 256, 258, 259, 260, 265, 270, 273, 275, 279, 303, 304, 319, 333, 347, 354, 363, 370, 376, 377, 380, 382, 383, 387, 392, 396, 397, 399, 400, 405, 406, 409, 416, 432, 446, 469, 475, 476, 479, 480, 481, 483, 484, 485, 490, 492, 501, 503, 526, 527, 529, 533, 536, 549, 552, 554, 555, 566, 571, 577, 581, 590, 593, 594, 599, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 628, 632, 635, 666, 678, 682, 690, 691, 699, 700, 707, 708, 709, 710, 712, 715, 716, 747, 751, 755, 762, 770, 788, 794, 799, 801, 809, 855, 857, 861, 862, 863, 864, 874, 878, 880, 888, 893, 899, 902, 905, 907, 919, 943, 952, 954, 959, 963, 966, 979, 980, 991, 993, 994, 995, 1003, 1014, 1042, 1043, 1053, 1057, 1058, 1059, 1061, 1066, 1067, 1071, 1072, 1076, 1077, 1080, 1082, 1083, 1087, 1092, 1113, 1114, 1128], "convinc": [27, 347], "him": [27, 163, 167, 170, 188, 191, 214, 240, 264, 675, 904, 1055], "wai": [27, 41, 48, 57, 60, 61, 63, 78, 79, 121, 127, 128, 130, 133, 138, 142, 143, 146, 152, 155, 159, 164, 166, 167, 169, 170, 171, 174, 175, 183, 188, 191, 203, 204, 209, 212, 213, 214, 216, 217, 221, 223, 231, 235, 236, 249, 250, 253, 257, 259, 260, 278, 279, 289, 293, 343, 347, 351, 352, 362, 368, 384, 385, 386, 394, 410, 411, 418, 428, 430, 431, 435, 451, 453, 473, 477, 482, 497, 504, 512, 528, 529, 536, 541, 544, 582, 584, 610, 616, 627, 643, 664, 674, 686, 690, 713, 726, 735, 749, 751, 757, 784, 785, 793, 799, 801, 804, 805, 854, 862, 863, 874, 881, 889, 915, 918, 928, 929, 933, 939, 943, 954, 966, 971, 977, 980, 981, 984, 995, 999, 1000, 1002, 1005, 1007, 1012, 1040, 1055, 1076, 1084, 1092, 1099, 1117], "go": [27, 38, 40, 57, 59, 60, 61, 63, 78, 95, 128, 131, 134, 135, 137, 138, 160, 163, 170, 174, 183, 192, 193, 209, 250, 253, 255, 275, 304, 408, 410, 428, 470, 630, 668, 680, 686, 698, 710, 718, 721, 725, 757, 759, 788, 800, 817, 819, 853, 854, 861, 862, 889, 892, 894, 899, 907, 911, 931, 934, 948, 979, 1013], "relev": [27, 133, 206, 231, 334, 423, 481, 690, 757, 770, 861, 862, 954, 1054, 1073, 1087], "part": [27, 41, 78, 90, 104, 111, 124, 131, 132, 133, 134, 136, 138, 141, 152, 155, 163, 170, 171, 172, 193, 219, 231, 250, 253, 265, 303, 310, 324, 347, 381, 408, 431, 436, 450, 472, 481, 528, 626, 698, 708, 728, 735, 757, 777, 784, 785, 817, 852, 854, 861, 862, 863, 864, 879, 931, 978, 979, 992, 997, 999, 1045, 1047, 1061, 1062, 1076, 1077, 1079, 1080, 1081, 1082, 1102], "natur": [27, 36, 73, 131, 133, 138, 163, 217, 223, 265, 319, 324, 342, 386, 427, 428, 580, 582, 626, 686, 862, 990], "straighforward": 27, "approach": [27, 33, 36, 130, 131, 170, 274, 326, 410, 414, 415, 423, 684, 710, 796, 862, 915, 917, 1075], "would": [27, 55, 102, 105, 130, 132, 133, 135, 136, 142, 151, 153, 160, 163, 167, 169, 182, 193, 206, 219, 223, 258, 260, 279, 358, 377, 384, 386, 397, 398, 412, 413, 416, 423, 426, 480, 497, 501, 536, 540, 542, 544, 591, 598, 607, 631, 637, 676, 686, 698, 706, 757, 760, 784, 785, 808, 810, 813, 839, 862, 863, 873, 874, 890, 899, 907, 928, 947, 948, 952, 954, 955, 975, 986, 990, 994, 997, 1003, 1007, 1012, 1033, 1060, 1063, 1066, 1076, 1083], "copi": [27, 34, 40, 48, 68, 95, 97, 99, 100, 111, 121, 123, 127, 131, 132, 133, 134, 137, 142, 146, 152, 158, 161, 171, 178, 181, 193, 203, 209, 215, 219, 223, 226, 229, 235, 236, 237, 238, 241, 246, 247, 251, 255, 256, 258, 265, 267, 268, 271, 282, 304, 334, 336, 348, 354, 363, 368, 370, 372, 376, 377, 380, 383, 387, 396, 400, 405, 406, 421, 453, 454, 467, 468, 470, 475, 490, 502, 504, 506, 515, 520, 522, 524, 526, 527, 528, 534, 544, 545, 547, 548, 557, 561, 571, 579, 588, 590, 593, 594, 606, 608, 614, 617, 620, 623, 628, 629, 630, 634, 635, 636, 654, 666, 668, 678, 682, 686, 687, 691, 699, 706, 707, 708, 709, 710, 732, 737, 757, 758, 773, 783, 784, 785, 786, 787, 788, 797, 817, 823, 824, 826, 827, 828, 829, 831, 837, 853, 864, 867, 869, 874, 886, 891, 892, 893, 894, 901, 902, 907, 911, 924, 941, 942, 943, 945, 947, 948, 952, 953, 987, 1002, 1005, 1071, 1075, 1080, 1094, 1099, 1101, 1112, 1124], "dumb": [27, 43, 151, 182, 286, 728, 902, 904], "reason": [27, 59, 118, 133, 146, 152, 163, 192, 211, 298, 381, 388, 390, 392, 398, 401, 414, 426, 545, 547, 548, 582, 626, 669, 688, 725, 741, 753, 757, 808, 810, 907, 915, 916, 929, 943, 948, 986, 995, 997, 1060], "ar": [27, 30, 41, 43, 45, 51, 53, 54, 55, 56, 57, 59, 60, 61, 63, 66, 76, 78, 79, 87, 104, 106, 107, 108, 109, 115, 118, 124, 125, 128, 130, 133, 134, 135, 137, 138, 141, 142, 146, 147, 148, 151, 152, 153, 155, 159, 161, 163, 167, 168, 169, 170, 171, 172, 183, 190, 191, 192, 193, 200, 203, 204, 206, 207, 209, 210, 212, 214, 215, 216, 217, 219, 223, 227, 231, 236, 238, 240, 247, 249, 250, 253, 255, 256, 257, 258, 260, 265, 268, 273, 279, 286, 287, 288, 292, 298, 301, 303, 304, 306, 307, 323, 325, 326, 328, 331, 333, 334, 336, 338, 341, 342, 345, 346, 347, 353, 356, 359, 364, 365, 368, 372, 374, 375, 377, 378, 379, 384, 385, 386, 388, 389, 392, 395, 398, 401, 408, 409, 411, 413, 416, 417, 422, 423, 426, 427, 428, 438, 448, 450, 453, 469, 473, 477, 478, 480, 481, 482, 488, 492, 497, 501, 512, 518, 521, 528, 529, 530, 531, 533, 536, 537, 540, 541, 542, 544, 551, 554, 561, 562, 563, 566, 576, 582, 583, 588, 591, 598, 600, 601, 603, 604, 608, 614, 615, 616, 617, 621, 627, 629, 630, 631, 634, 637, 638, 639, 643, 648, 665, 668, 669, 674, 675, 676, 678, 680, 684, 685, 686, 687, 689, 690, 692, 695, 697, 701, 708, 710, 712, 713, 716, 726, 728, 730, 735, 741, 743, 745, 749, 751, 753, 755, 757, 762, 776, 783, 784, 785, 788, 790, 792, 793, 795, 796, 797, 799, 800, 802, 803, 808, 810, 817, 818, 820, 830, 835, 839, 841, 844, 854, 855, 861, 862, 863, 864, 870, 872, 874, 877, 879, 880, 883, 884, 891, 897, 899, 900, 902, 904, 905, 907, 910, 916, 917, 918, 919, 924, 928, 929, 931, 932, 933, 934, 937, 939, 943, 945, 946, 948, 949, 950, 952, 954, 955, 957, 959, 963, 966, 967, 968, 969, 973, 975, 978, 979, 982, 983, 984, 985, 986, 988, 991, 995, 1003, 1005, 1006, 1007, 1009, 1017, 1022, 1050, 1054, 1055, 1060, 1061, 1062, 1066, 1067, 1070, 1071, 1072, 1074, 1076, 1077, 1080, 1082, 1083, 1086, 1092, 1094, 1095, 1098, 1099, 1102, 1114, 1115, 1117], "need": [27, 41, 43, 44, 45, 49, 53, 54, 59, 61, 102, 131, 132, 133, 136, 138, 142, 146, 147, 152, 163, 170, 171, 173, 183, 193, 207, 209, 231, 289, 301, 331, 333, 336, 356, 364, 365, 384, 390, 391, 397, 401, 403, 404, 408, 411, 413, 416, 418, 421, 423, 427, 428, 450, 477, 478, 480, 481, 485, 515, 521, 527, 528, 543, 563, 583, 597, 604, 608, 637, 643, 672, 686, 689, 695, 700, 710, 716, 730, 732, 745, 749, 753, 757, 796, 800, 813, 818, 854, 855, 856, 857, 861, 862, 863, 870, 874, 880, 881, 884, 887, 898, 902, 913, 934, 943, 947, 948, 949, 953, 958, 971, 979, 980, 982, 985, 994, 999, 1010, 1011, 1060, 1061, 1071, 1086, 1094, 1115], "mechan": [27, 30, 87, 118, 131, 132, 155, 163, 167, 178, 193, 247, 426, 604, 904, 925, 963, 1055, 1087, 1112, 1117, 1127], "where": [27, 51, 87, 107, 111, 116, 117, 127, 130, 131, 132, 133, 134, 136, 138, 141, 146, 151, 152, 159, 160, 163, 164, 167, 190, 191, 192, 193, 200, 203, 206, 207, 209, 216, 219, 223, 231, 240, 247, 265, 273, 301, 306, 307, 342, 346, 356, 364, 365, 367, 368, 369, 382, 386, 397, 399, 409, 419, 432, 439, 471, 473, 478, 497, 504, 521, 540, 601, 604, 608, 626, 684, 685, 689, 751, 755, 757, 769, 799, 800, 814, 817, 820, 841, 846, 854, 861, 862, 863, 870, 875, 881, 883, 886, 889, 890, 906, 916, 917, 924, 928, 929, 932, 943, 947, 948, 955, 957, 959, 962, 984, 986, 996, 1037, 1055, 1062, 1070, 1092, 1114, 1117], "could": [27, 48, 55, 108, 109, 111, 127, 128, 131, 132, 136, 138, 142, 152, 161, 163, 169, 183, 192, 193, 203, 213, 219, 247, 257, 259, 260, 278, 279, 319, 347, 391, 412, 414, 427, 428, 452, 481, 536, 544, 608, 620, 626, 639, 640, 648, 663, 673, 688, 711, 728, 757, 770, 796, 814, 862, 863, 870, 881, 887, 924, 986, 1037, 1051, 1070, 1080, 1087, 1099, 1112], "exchang": [27, 76, 160, 203, 408, 436, 452, 477, 636, 637, 728, 801, 919, 1012, 1020], "meta": [27, 37, 123, 138, 757, 769, 817], "retriev": [27, 142, 654, 757, 959, 1007], "check": [27, 28, 36, 86, 95, 102, 116, 130, 131, 133, 134, 135, 136, 137, 142, 146, 151, 163, 167, 171, 175, 200, 206, 209, 216, 219, 223, 247, 260, 279, 286, 309, 312, 334, 349, 358, 360, 361, 366, 374, 381, 385, 393, 395, 411, 469, 476, 497, 509, 521, 528, 536, 543, 544, 561, 582, 620, 636, 637, 648, 685, 708, 710, 730, 732, 737, 757, 773, 774, 776, 853, 854, 861, 862, 884, 889, 895, 898, 902, 932, 933, 938, 941, 943, 950, 979, 984, 997, 1007, 1010, 1014, 1016, 1018, 1034, 1040, 1053, 1087, 1092, 1101, 1112, 1122], "everyth": [27, 40, 41, 96, 111, 124, 131, 137, 138, 155, 163, 167, 171, 182, 190, 208, 209, 237, 246, 247, 250, 253, 267, 268, 312, 319, 336, 356, 359, 384, 398, 404, 408, 470, 527, 528, 530, 537, 541, 546, 551, 601, 643, 672, 676, 692, 699, 708, 709, 710, 726, 735, 755, 759, 762, 787, 790, 791, 793, 794, 818, 839, 853, 854, 855, 861, 862, 863, 880, 882, 883, 894, 907, 908, 914, 916, 919, 929, 951, 957, 962, 966, 1062, 1080, 1125, 1126, 1127, 1129], "clearli": [27, 41, 146, 163, 386, 633, 654, 681, 757, 776, 890, 955, 986, 1007, 1114], "intersphinx": [27, 128], "spinx": 27, "possibli": [28, 75, 83, 131, 163, 410, 544, 620, 634, 643, 648, 663, 675, 685, 697, 698, 802, 839, 862, 910, 945, 1074], "arrang": [28, 82, 108, 109, 135, 481, 690, 790, 850], "subgroup": [28, 33, 36, 504], "refer": [28, 64, 88, 95, 108, 109, 111, 127, 130, 136, 137, 151, 153, 158, 167, 170, 172, 175, 176, 187, 188, 190, 192, 193, 198, 201, 202, 204, 205, 207, 208, 209, 214, 215, 216, 219, 223, 225, 227, 228, 230, 234, 242, 243, 245, 250, 252, 253, 257, 258, 260, 263, 264, 266, 269, 270, 272, 273, 278, 279, 282, 287, 288, 289, 290, 291, 292, 301, 365, 371, 378, 417, 475, 477, 490, 492, 504, 526, 527, 528, 529, 544, 545, 547, 548, 549, 552, 555, 571, 577, 581, 590, 593, 594, 595, 603, 608, 611, 614, 615, 618, 619, 620, 621, 622, 623, 634, 654, 666, 667, 675, 678, 682, 686, 691, 699, 707, 708, 709, 710, 716, 717, 719, 721, 724, 727, 734, 738, 748, 757, 761, 766, 769, 772, 775, 778, 800, 830, 839, 853, 854, 861, 862, 886, 925, 931, 947, 950, 955, 956, 978, 1005, 1006, 1012, 1013, 1014, 1024, 1027, 1035, 1036, 1038, 1039, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1065, 1071, 1072, 1092, 1094, 1112, 1113, 1114, 1122], "veri": [28, 33, 35, 36, 130, 131, 133, 152, 163, 167, 170, 172, 183, 188, 191, 214, 217, 240, 264, 312, 319, 340, 347, 357, 358, 378, 394, 395, 397, 403, 410, 413, 428, 515, 526, 539, 554, 572, 600, 629, 630, 668, 671, 674, 685, 688, 757, 762, 767, 795, 796, 855, 860, 862, 863, 880, 881, 897, 902, 917, 931, 959, 967, 983, 986, 990, 991, 997, 1001, 1005, 1010, 1055, 1062, 1066, 1088, 1097, 1104, 1112], "unawar": [28, 146, 163, 170], "simpli": [28, 59, 125, 131, 134, 136, 138, 142, 146, 155, 219, 220, 259, 260, 278, 279, 347, 389, 431, 470, 536, 545, 547, 548, 597, 607, 618, 654, 675, 676, 681, 686, 700, 735, 789, 802, 861, 883, 887, 931, 947, 955], "interest": [28, 132, 133, 146, 152, 163, 171, 301, 413, 428, 954, 956, 1077], "catalog": [28, 1115], "chapter": [28, 40, 183, 192, 200, 206, 216, 219, 220, 504, 817], "subchapt": 28, "cluster_python": [28, 88, 167, 188, 287, 288, 289, 290, 291, 292, 301, 710, 956, 963, 964, 965, 966, 970, 978, 989, 998, 1008, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1027, 1028, 1029, 1030, 1031, 1032, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1061, 1062, 1065, 1068, 1071, 1072, 1074, 1078, 1086, 1089, 1091, 1096], "cluster_python_exercis": [28, 188, 301, 710, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1027, 1028, 1029, 1030, 1031, 1032, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053], "cluster_python_exercises_legaci": [28, 188, 301, 710, 1014, 1022, 1023, 1024, 1027, 1028, 1029, 1030, 1031, 1032, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1053], "legaci": [28, 127, 188, 301, 431, 710, 1014, 1022, 1023, 1024, 1028, 1029, 1030, 1031, 1032, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1053, 1107], "cluster_python_exercises_csv": [28, 710, 1011, 1012, 1013, 1014, 1053], "csv": [28, 42, 49, 51, 52, 53, 54, 76, 104, 167, 170, 179, 182, 188, 192, 193, 196, 198, 200, 201, 204, 205, 207, 211, 214, 217, 219, 225, 226, 229, 244, 248, 249, 251, 254, 255, 259, 260, 266, 271, 275, 278, 279, 409, 710, 799, 802, 817, 839, 967, 970, 973, 1007, 1014, 1048, 1049, 1050, 1051, 1053, 1055, 1058, 1059, 1060, 1061, 1072], "databas": [28, 40, 41, 53, 76, 128, 150, 151, 170, 192, 198, 203, 204, 207, 209, 210, 213, 217, 231, 259, 260, 278, 279, 292, 428, 429, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 710, 813, 844, 865, 973, 1012, 1014, 1033, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1053, 1072, 1076, 1088, 1104], "cluster_python_exercises_userdb": [28, 710, 1014, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053], "seri": [28, 98, 132, 203, 207, 248, 249, 250, 251, 253, 255, 257, 388, 409, 438, 710, 866, 980, 1012, 1014, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1053, 1054, 1060, 1072, 1077, 1078, 1079, 1081, 1082, 1127], "cluster_python_exercises_herdt": [28, 710, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1053], "cluster_python_exercises_sensor": [28, 710, 1014, 1041, 1042, 1043, 1053], "sensor": [28, 67, 70, 71, 72, 76, 79, 82, 95, 104, 107, 111, 158, 167, 171, 207, 228, 239, 247, 256, 259, 260, 275, 278, 279, 301, 305, 307, 425, 430, 432, 440, 446, 447, 450, 451, 455, 461, 464, 469, 471, 475, 476, 479, 483, 484, 485, 490, 493, 494, 495, 496, 497, 498, 499, 500, 526, 534, 599, 636, 685, 686, 687, 710, 757, 853, 860, 892, 894, 911, 967, 1014, 1042, 1053, 1123], "And": [28, 95, 97, 100, 101, 102, 104, 111, 131, 132, 133, 135, 138, 161, 167, 170, 190, 193, 198, 200, 209, 211, 220, 228, 235, 236, 237, 239, 240, 242, 243, 245, 246, 249, 253, 263, 264, 266, 267, 269, 274, 409, 415, 421, 425, 432, 434, 446, 460, 469, 475, 476, 479, 480, 483, 484, 485, 486, 490, 502, 503, 504, 526, 534, 556, 564, 569, 579, 582, 590, 594, 623, 635, 666, 667, 668, 677, 682, 689, 691, 699, 707, 708, 709, 710, 780, 786, 787, 790, 791, 795, 799, 807, 809, 811, 812, 821, 822, 823, 824, 825, 826, 827, 828, 829, 831, 837, 847, 853, 860, 867, 869, 876, 882, 884, 889, 892, 894, 898, 908, 911, 914, 916, 919, 931, 933, 935, 936, 937, 938, 939, 942, 954, 956, 961, 964, 965, 966, 970, 971, 995, 1011, 1012, 1013, 1014, 1027, 1038, 1048, 1049, 1050, 1053, 1065, 1068, 1072, 1078, 1086, 1112], "acquisit": [28, 131, 158, 259, 260, 275, 278, 279, 518, 710, 1010, 1014, 1042, 1043, 1053], "cluster_python_db": [28, 710, 1011, 1013, 1014, 1053, 1068], "cluster_python_bas": [28, 88, 167, 188, 287, 288, 289, 290, 291, 292, 301, 710, 956, 963, 964, 965, 966, 970, 978, 989, 998, 1008, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1027, 1028, 1029, 1030, 1031, 1032, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1065, 1068, 1071, 1072, 1078, 1086], "fundament": [28, 57, 60, 71, 88, 154, 163, 166, 167, 168, 170, 172, 175, 177, 182, 185, 188, 191, 194, 204, 210, 214, 222, 225, 287, 288, 289, 290, 291, 292, 301, 319, 320, 408, 438, 710, 735, 956, 963, 964, 965, 966, 970, 989, 998, 1003, 1008, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1027, 1028, 1029, 1030, 1031, 1032, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1065, 1068, 1071, 1072, 1078, 1086, 1087], "cluster_python_swdev": [28, 167, 710, 1008, 1053, 1056, 1057, 1061, 1072, 1074, 1086, 1089, 1091, 1096], "cluster_python_swdev_pytest": [28, 710, 1053, 1086, 1091], "pytest": [28, 207, 217, 220, 228, 231, 240, 249, 257, 259, 264, 275, 278, 309, 410, 710, 1043, 1051, 1052, 1053, 1086], "cluster_python_draft": [28, 710, 1008, 1053], "cluster_python_advanc": [28, 167, 710, 956, 963, 964, 965, 966, 970, 1008, 1011, 1012, 1013, 1014, 1027, 1038, 1041, 1042, 1043, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1061, 1065, 1068, 1072, 1074, 1086, 1089, 1091, 1096], "cluster_python_advanced_multithread": [28, 710, 956, 963, 964, 965, 966, 1053], "cluster_python_advanced_oo": [28, 167, 710, 956, 963, 964, 965, 966, 970, 1014, 1041, 1042, 1043, 1048, 1050, 1053, 1065, 1072, 1086], "object": [28, 61, 68, 71, 72, 76, 88, 95, 101, 102, 104, 105, 106, 108, 109, 111, 124, 146, 148, 151, 153, 158, 163, 167, 170, 179, 181, 182, 187, 190, 191, 193, 196, 198, 200, 203, 204, 207, 208, 209, 210, 211, 215, 216, 217, 221, 222, 224, 226, 229, 233, 241, 245, 247, 248, 250, 251, 253, 255, 258, 261, 265, 271, 288, 290, 291, 294, 296, 301, 302, 303, 304, 338, 364, 391, 409, 411, 416, 417, 421, 422, 423, 428, 430, 432, 437, 446, 448, 454, 469, 473, 475, 476, 477, 479, 480, 481, 483, 484, 485, 490, 492, 497, 503, 504, 518, 526, 527, 529, 531, 534, 535, 537, 539, 540, 545, 547, 548, 549, 551, 552, 555, 571, 577, 581, 582, 583, 590, 593, 594, 597, 598, 603, 604, 608, 609, 611, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 623, 626, 634, 635, 637, 638, 648, 654, 666, 668, 670, 671, 675, 676, 681, 682, 684, 686, 687, 690, 691, 697, 699, 700, 704, 705, 707, 708, 709, 710, 800, 853, 931, 932, 933, 936, 937, 938, 939, 941, 947, 950, 952, 955, 956, 959, 963, 964, 965, 966, 967, 969, 971, 973, 974, 976, 978, 979, 980, 986, 995, 997, 1003, 1004, 1014, 1041, 1042, 1043, 1048, 1050, 1053, 1060, 1063, 1065, 1072, 1077, 1079, 1081, 1082, 1083, 1086, 1092, 1112, 1113, 1115, 1117], "orient": [28, 68, 71, 72, 76, 95, 111, 151, 167, 170, 182, 191, 193, 198, 204, 207, 210, 221, 222, 231, 233, 245, 250, 253, 256, 258, 288, 290, 291, 301, 302, 303, 336, 409, 432, 446, 469, 475, 476, 477, 479, 480, 483, 484, 485, 490, 492, 503, 526, 527, 534, 549, 552, 555, 571, 577, 581, 590, 593, 594, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 635, 666, 682, 690, 691, 699, 707, 709, 710, 956, 963, 964, 965, 966, 980, 1014, 1041, 1042, 1043, 1048, 1050, 1053, 1065, 1072, 1086, 1092, 1113, 1115], "cluster_python_misc": [28, 88, 167, 188, 287, 288, 289, 290, 291, 292, 301, 710, 956, 978, 1008, 1012, 1013, 1014, 1024, 1027, 1035, 1038, 1039, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1061, 1062, 1065, 1071, 1072, 1074, 1078, 1086, 1089, 1096], "cluster_python_misc_ai": [28, 167, 710, 1053, 1056, 1057, 1061, 1062, 1072], "machin": [28, 100, 108, 109, 111, 123, 133, 138, 152, 167, 183, 190, 191, 200, 201, 204, 206, 216, 219, 273, 278, 300, 304, 324, 340, 342, 350, 358, 386, 390, 404, 481, 482, 710, 757, 784, 785, 790, 793, 796, 846, 853, 867, 868, 869, 870, 872, 873, 874, 916, 931, 934, 941, 955, 1053, 1057, 1061, 1072, 1085, 1114], "artifici": [28, 167, 192, 250, 278, 386, 620, 710, 874, 947, 1053, 1057, 1061, 1062, 1072], "intellig": [28, 131, 167, 207, 243, 250, 253, 263, 269, 278, 307, 710, 728, 952, 956, 1053, 1057, 1061, 1062, 1072], "cluster_python_misc_panda": [28, 710, 1053, 1072, 1078], "panda": [28, 152, 163, 182, 188, 201, 214, 228, 231, 249, 252, 264, 278, 319, 410, 710, 979, 1053, 1055, 1058, 1061, 1072], "python_python_5550_xml_etre": [28, 710, 1053], "xml": [28, 127, 128, 710, 1053, 1072], "elementtre": [28, 231, 710, 1053, 1072], "etre": [28, 231, 710, 1053, 1072], "python_basics_python_0450_dictionari": [28, 88, 710, 956, 978, 1014, 1027, 1038, 1053], "gt": [28, 30, 33, 34, 51, 53, 54, 70, 71, 72, 85, 88, 120, 150, 153, 164, 167, 169, 174, 181, 187, 188, 190, 195, 200, 203, 206, 211, 213, 216, 219, 223, 226, 229, 232, 241, 244, 248, 251, 261, 265, 271, 287, 288, 289, 290, 291, 292, 295, 296, 301, 339, 354, 363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 415, 432, 446, 469, 475, 476, 479, 480, 483, 484, 485, 490, 492, 503, 526, 534, 549, 552, 555, 571, 577, 581, 590, 593, 594, 599, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 628, 635, 642, 666, 667, 677, 682, 691, 699, 707, 709, 710, 714, 717, 719, 722, 724, 727, 729, 733, 734, 736, 738, 740, 742, 748, 750, 752, 754, 761, 763, 766, 768, 772, 775, 778, 780, 784, 785, 786, 787, 790, 791, 798, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 837, 847, 853, 860, 865, 866, 867, 868, 869, 876, 882, 884, 892, 894, 896, 908, 911, 914, 916, 933, 935, 936, 937, 938, 939, 940, 941, 942, 956, 963, 964, 965, 966, 970, 978, 989, 998, 1008, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1027, 1028, 1029, 1030, 1031, 1032, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1061, 1065, 1068, 1071, 1072, 1074, 1078, 1086, 1089, 1091, 1096, 1097], "python_basics_python_0220_for": [28, 88, 167, 188, 287, 288, 289, 290, 291, 292, 301, 710, 956, 978, 1011, 1012, 1013, 1014, 1024, 1027, 1028, 1030, 1034, 1035, 1036, 1037, 1038, 1039, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1065, 1068, 1072], "loop": [28, 30, 32, 36, 40, 57, 60, 87, 88, 95, 108, 109, 111, 119, 124, 131, 146, 155, 167, 170, 172, 175, 176, 177, 180, 188, 190, 191, 192, 194, 198, 201, 204, 209, 210, 212, 214, 215, 220, 222, 224, 225, 227, 228, 230, 240, 243, 250, 253, 260, 263, 264, 269, 270, 279, 287, 288, 289, 290, 291, 292, 293, 301, 306, 324, 327, 330, 339, 342, 354, 361, 362, 363, 370, 376, 380, 383, 384, 387, 388, 396, 400, 405, 406, 474, 475, 515, 526, 557, 562, 619, 626, 628, 654, 666, 689, 700, 707, 709, 710, 745, 755, 760, 774, 788, 790, 794, 801, 857, 879, 880, 881, 889, 915, 919, 925, 928, 929, 956, 957, 960, 961, 966, 978, 1011, 1012, 1013, 1014, 1016, 1018, 1024, 1026, 1027, 1028, 1030, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1065, 1068, 1072, 1074, 1111, 1112, 1113, 1122], "python_advanced_modul": [28, 167, 710, 956, 1008, 1011, 1012, 1013, 1014, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1061, 1068, 1072, 1074, 1086, 1089, 1091, 1096], "python_exercises_legacy_uniq_gener": [28, 710, 1014, 1027, 1038, 1053], "uniq": [28, 150, 151, 168, 170, 182, 188, 198, 201, 204, 210, 214, 220, 222, 225, 243, 250, 263, 264, 269, 270, 501, 710, 850, 1014, 1024, 1027, 1028, 1035, 1036, 1039, 1053], "python_exercises_legacy_uniq_funct": [28, 188, 710, 1014, 1024, 1027, 1028, 1035, 1036, 1037, 1038, 1039, 1053], "python_exercises_legacy_passwd": [28, 710, 1014, 1027, 1038, 1053], "pars": [28, 150, 187, 188, 198, 199, 201, 204, 210, 214, 219, 220, 222, 228, 231, 259, 264, 278, 287, 292, 305, 710, 1008, 1014, 1027, 1038, 1053, 1055, 1083], "passwd": [28, 98, 99, 111, 171, 181, 190, 203, 204, 206, 210, 211, 214, 219, 220, 222, 226, 228, 229, 237, 244, 246, 247, 251, 261, 265, 267, 268, 708, 710, 787, 789, 792, 794, 797, 799, 801, 812, 831, 834, 836, 837, 839, 842, 844, 848, 850, 853, 854, 862, 864, 865, 873, 874, 878, 879, 884, 890, 910, 924, 952, 954, 1001, 1005, 1014, 1027, 1038, 1053, 1063, 1064, 1087], "python_advanced_python_1010_generators_yield": [28, 167, 710, 956, 1011, 1012, 1013, 1014, 1027, 1038, 1053, 1065, 1068, 1072], "python_exercises_legacy_revert": [28, 188, 710, 1014, 1024, 1027, 1035, 1038, 1053], "revert": [28, 131, 188, 710, 735, 753, 915, 974, 1014, 1024, 1027, 1038, 1053], "line": [28, 32, 33, 34, 36, 61, 127, 128, 131, 133, 136, 146, 150, 153, 154, 167, 171, 181, 183, 187, 188, 190, 191, 196, 197, 200, 201, 203, 204, 206, 207, 209, 210, 211, 214, 216, 217, 219, 220, 222, 223, 226, 228, 229, 231, 232, 243, 244, 249, 250, 251, 253, 257, 261, 263, 264, 265, 269, 270, 271, 292, 301, 324, 330, 331, 339, 343, 346, 348, 354, 363, 365, 370, 376, 380, 383, 387, 392, 396, 399, 400, 402, 405, 406, 410, 413, 416, 423, 453, 454, 604, 607, 610, 628, 666, 707, 709, 710, 726, 730, 737, 739, 757, 784, 785, 788, 797, 799, 801, 823, 844, 846, 848, 849, 850, 854, 858, 861, 862, 863, 905, 915, 946, 952, 957, 958, 982, 999, 1003, 1005, 1006, 1007, 1012, 1014, 1027, 1033, 1038, 1052, 1053, 1055, 1058, 1063, 1066, 1071, 1093], "python_exercises_legacy_wc": [28, 188, 710, 1014, 1024, 1027, 1035, 1038, 1039, 1053], "word": [28, 41, 63, 124, 131, 151, 159, 163, 167, 170, 177, 182, 188, 192, 198, 201, 209, 210, 214, 217, 219, 220, 222, 225, 227, 228, 235, 236, 238, 243, 250, 257, 263, 264, 265, 269, 270, 282, 301, 306, 331, 384, 426, 431, 504, 604, 682, 691, 699, 709, 710, 797, 799, 846, 918, 1014, 1024, 1027, 1028, 1030, 1034, 1035, 1036, 1037, 1038, 1040, 1053], "charact": [28, 133, 149, 174, 179, 183, 188, 192, 196, 203, 209, 219, 226, 229, 247, 250, 265, 271, 324, 325, 331, 339, 342, 348, 349, 354, 363, 370, 376, 380, 383, 386, 387, 391, 393, 396, 400, 405, 406, 591, 628, 666, 707, 708, 709, 710, 719, 724, 727, 734, 738, 748, 751, 759, 761, 766, 772, 773, 775, 778, 797, 799, 817, 839, 853, 861, 916, 966, 985, 999, 1000, 1001, 1005, 1007, 1014, 1017, 1024, 1027, 1035, 1038, 1053, 1071, 1099], "python_basics_python_0500_fil": [28, 88, 188, 287, 288, 289, 290, 291, 292, 301, 710, 956, 978, 1012, 1013, 1014, 1024, 1027, 1035, 1038, 1039, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1072], "python_basics_python_0139_commandline_argv": [28, 88, 188, 301, 710, 978, 1008, 1011, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1021, 1022, 1024, 1027, 1028, 1029, 1030, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053], "argument": [28, 55, 61, 88, 95, 111, 124, 130, 133, 136, 150, 151, 164, 167, 179, 188, 191, 198, 200, 204, 206, 207, 209, 210, 212, 214, 216, 217, 220, 221, 222, 223, 225, 228, 243, 244, 247, 250, 253, 257, 259, 260, 263, 264, 265, 269, 270, 278, 279, 301, 323, 324, 369, 376, 380, 383, 387, 396, 400, 405, 406, 410, 473, 504, 528, 538, 539, 628, 643, 663, 666, 676, 688, 707, 708, 709, 710, 715, 716, 817, 839, 853, 887, 889, 891, 894, 911, 949, 952, 956, 978, 980, 981, 998, 1006, 1008, 1011, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1021, 1022, 1024, 1026, 1027, 1028, 1029, 1030, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1063, 1065, 1069, 1072, 1085, 1092, 1094], "sy": [28, 30, 88, 132, 149, 151, 153, 154, 179, 181, 182, 188, 191, 197, 200, 204, 206, 211, 214, 216, 219, 220, 222, 223, 225, 226, 228, 241, 243, 244, 249, 250, 253, 259, 263, 264, 265, 269, 270, 278, 286, 287, 294, 301, 397, 410, 470, 481, 482, 710, 712, 716, 737, 814, 843, 854, 861, 862, 863, 879, 880, 881, 883, 887, 888, 889, 890, 891, 893, 895, 897, 898, 912, 919, 921, 924, 928, 945, 955, 962, 977, 978, 997, 1005, 1007, 1008, 1011, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1021, 1022, 1024, 1026, 1027, 1028, 1029, 1030, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1083, 1085, 1092, 1107], "argv": [28, 40, 48, 88, 133, 150, 151, 154, 164, 182, 188, 191, 192, 197, 200, 204, 206, 209, 210, 214, 216, 219, 220, 222, 225, 228, 243, 249, 250, 253, 259, 263, 264, 269, 270, 278, 286, 294, 301, 375, 410, 411, 433, 473, 710, 861, 887, 888, 889, 890, 891, 895, 898, 912, 919, 928, 949, 955, 962, 978, 1007, 1008, 1011, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1021, 1022, 1024, 1026, 1027, 1028, 1029, 1030, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1099, 1104], "python_exercises_legacy_max_numb": [28, 188, 710, 1014, 1024, 1027, 1028, 1029, 1030, 1034, 1035, 1036, 1037, 1038, 1039, 1053], "determin": [28, 100, 111, 124, 130, 154, 159, 161, 169, 170, 175, 177, 182, 188, 194, 198, 200, 201, 204, 210, 214, 220, 222, 225, 227, 228, 243, 250, 263, 264, 269, 270, 604, 638, 639, 676, 710, 765, 787, 806, 807, 808, 809, 810, 811, 812, 849, 853, 862, 880, 917, 918, 948, 1014, 1016, 1017, 1018, 1021, 1024, 1027, 1028, 1034, 1035, 1036, 1037, 1038, 1039, 1053, 1087, 1122], "python_exercises_legacy_mixed_list_execut": [28, 188, 710, 1014, 1024, 1027, 1028, 1029, 1030, 1031, 1034, 1035, 1036, 1037, 1038, 1039, 1053], "mix": [28, 170, 177, 188, 191, 198, 201, 204, 205, 209, 211, 214, 243, 250, 263, 264, 269, 270, 272, 347, 386, 389, 390, 392, 394, 537, 710, 983, 986, 1002, 1005, 1014, 1024, 1027, 1028, 1029, 1030, 1034, 1035, 1036, 1037, 1038, 1039, 1053, 1054, 1071, 1076, 1082, 1127], "execut": [28, 42, 61, 106, 108, 109, 111, 124, 127, 131, 133, 141, 142, 146, 151, 158, 163, 170, 177, 183, 188, 198, 200, 201, 204, 206, 214, 216, 219, 243, 250, 263, 264, 269, 270, 273, 274, 286, 287, 294, 301, 323, 324, 358, 360, 364, 386, 391, 395, 404, 412, 415, 416, 428, 447, 450, 457, 464, 470, 478, 512, 536, 551, 654, 708, 710, 755, 757, 783, 784, 785, 792, 794, 799, 804, 805, 813, 817, 864, 873, 902, 915, 929, 931, 932, 933, 934, 937, 941, 943, 947, 949, 955, 959, 963, 966, 979, 989, 990, 993, 1012, 1014, 1024, 1027, 1028, 1029, 1030, 1034, 1035, 1036, 1037, 1038, 1039, 1053, 1067, 1070, 1100, 1102, 1114, 1125, 1126], "python_basics_python_0140_vari": [28, 88, 167, 188, 287, 288, 289, 290, 291, 292, 301, 710, 956, 963, 964, 965, 966, 970, 978, 989, 998, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1027, 1028, 1029, 1030, 1031, 1032, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1065, 1068, 1071, 1072, 1078, 1086], "python_basics_python_0170_if": [28, 88, 167, 188, 287, 288, 289, 290, 291, 292, 301, 710, 956, 978, 989, 1011, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1021, 1024, 1027, 1028, 1029, 1030, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1065, 1068, 1072], "statement": [28, 52, 88, 108, 109, 151, 163, 167, 168, 169, 170, 175, 177, 182, 188, 191, 192, 194, 198, 201, 204, 210, 214, 220, 222, 225, 228, 234, 240, 243, 250, 253, 257, 259, 260, 263, 264, 269, 270, 275, 278, 279, 287, 288, 289, 290, 291, 292, 301, 306, 323, 326, 330, 343, 356, 358, 359, 362, 363, 368, 370, 376, 380, 383, 387, 390, 396, 400, 405, 406, 582, 608, 627, 628, 666, 707, 709, 710, 718, 790, 830, 916, 937, 951, 954, 956, 957, 962, 966, 968, 978, 985, 988, 990, 997, 1008, 1011, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1021, 1024, 1027, 1028, 1029, 1030, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1061, 1068, 1072, 1074, 1086, 1089, 1092, 1096, 1122], "python_exercises_legacy_distil": [28, 188, 710, 1014, 1024, 1027, 1038, 1053], "elimin": [28, 56, 124, 188, 210, 217, 219, 220, 222, 228, 243, 250, 263, 269, 270, 453, 497, 689, 710, 850, 957, 1014, 1027, 1038, 1053], "empti": [28, 36, 40, 46, 48, 131, 134, 141, 149, 169, 171, 188, 200, 203, 210, 211, 217, 219, 220, 222, 223, 226, 228, 229, 232, 243, 244, 249, 250, 251, 261, 263, 265, 269, 270, 296, 330, 382, 521, 530, 531, 535, 545, 547, 563, 564, 582, 600, 620, 626, 675, 685, 686, 698, 708, 710, 720, 757, 784, 785, 797, 801, 811, 848, 857, 870, 904, 924, 962, 1003, 1014, 1027, 1028, 1032, 1038, 1053], "comment": [28, 32, 33, 34, 36, 42, 124, 133, 168, 188, 189, 191, 204, 210, 212, 216, 217, 220, 222, 227, 228, 243, 250, 252, 263, 269, 270, 301, 324, 369, 388, 416, 453, 454, 477, 710, 862, 1000, 1014, 1027, 1038, 1053, 1071, 1085], "python_exercises_legacy_join_funct": [28, 188, 710, 1014, 1024, 1027, 1028, 1035, 1036, 1038, 1039, 1053], "join": [28, 33, 61, 142, 170, 188, 190, 191, 196, 198, 200, 203, 204, 206, 211, 215, 221, 229, 244, 251, 261, 265, 271, 286, 295, 410, 502, 626, 687, 693, 698, 700, 710, 900, 905, 928, 1014, 1024, 1027, 1035, 1036, 1038, 1039, 1053, 1085, 1092], "python_basics_python_0150_datatypes_overview": [28, 88, 167, 188, 287, 288, 289, 290, 291, 292, 301, 710, 956, 963, 964, 965, 966, 970, 978, 989, 998, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1027, 1028, 1029, 1030, 1031, 1032, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1065, 1068, 1071, 1072, 1078, 1086], "python_basics_python_0270_funct": [28, 88, 167, 188, 710, 956, 978, 998, 1011, 1012, 1013, 1014, 1024, 1027, 1028, 1030, 1034, 1035, 1036, 1037, 1038, 1039, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1065, 1068, 1072], "python_basics_python_0150_datatypes_overview_compound": [28, 88, 167, 188, 287, 288, 289, 290, 291, 292, 301, 710, 956, 963, 964, 965, 966, 970, 978, 1011, 1012, 1013, 1014, 1022, 1023, 1024, 1027, 1028, 1029, 1030, 1031, 1032, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1065, 1068, 1071, 1072, 1078, 1086], "python_exercises_legacy_function_prim": [28, 188, 710, 1014, 1024, 1027, 1028, 1034, 1035, 1036, 1037, 1038, 1039, 1053], "prime": [28, 36, 150, 151, 170, 174, 175, 177, 182, 188, 194, 198, 210, 214, 217, 222, 228, 243, 250, 263, 264, 269, 270, 386, 710, 1014, 1024, 1027, 1028, 1030, 1035, 1036, 1037, 1038, 1039, 1053, 1122], "python_exercises_legacy_max_numbers_funct": [28, 188, 710, 1014, 1024, 1027, 1028, 1030, 1034, 1035, 1036, 1037, 1038, 1039, 1053], "python_exercises_legacy_cmdline_digit": [28, 188, 301, 710, 1014, 1022, 1024, 1027, 1028, 1030, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1053], "digit": [28, 124, 150, 151, 170, 177, 182, 188, 198, 201, 210, 214, 219, 220, 222, 223, 225, 227, 228, 243, 250, 263, 264, 265, 269, 270, 286, 306, 332, 341, 710, 1014, 1024, 1027, 1028, 1030, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1053], "python_basics_python_0120_helloworld": [28, 88, 167, 188, 287, 288, 289, 290, 291, 292, 301, 710, 956, 963, 964, 965, 966, 970, 978, 989, 998, 1008, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1027, 1028, 1029, 1030, 1031, 1032, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1065, 1068, 1071, 1072, 1078, 1086], "world": [28, 76, 88, 124, 127, 128, 131, 136, 142, 161, 167, 170, 174, 175, 177, 181, 188, 192, 194, 196, 198, 200, 201, 204, 206, 209, 210, 211, 213, 214, 220, 221, 222, 223, 225, 226, 228, 231, 243, 244, 250, 253, 263, 264, 269, 270, 287, 288, 289, 290, 291, 292, 296, 301, 334, 339, 343, 354, 363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 411, 416, 424, 447, 452, 454, 625, 628, 666, 692, 700, 707, 709, 710, 714, 717, 719, 722, 724, 727, 734, 738, 742, 748, 754, 759, 761, 766, 769, 772, 775, 778, 795, 808, 820, 853, 891, 902, 917, 918, 931, 943, 945, 947, 948, 949, 956, 963, 964, 965, 966, 970, 978, 982, 983, 989, 992, 994, 998, 999, 1008, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1027, 1028, 1029, 1030, 1031, 1032, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1060, 1065, 1068, 1071, 1072, 1078, 1086, 1108, 1112, 1122], "python_exercises_legacy_mixed_list_interact": [28, 188, 710, 1014, 1024, 1027, 1028, 1029, 1030, 1031, 1032, 1034, 1035, 1036, 1037, 1038, 1039, 1053], "interact": [28, 61, 83, 127, 138, 170, 171, 177, 188, 198, 200, 201, 204, 206, 214, 216, 219, 224, 243, 244, 250, 263, 264, 269, 270, 272, 710, 817, 865, 870, 873, 883, 945, 980, 1014, 1023, 1024, 1027, 1028, 1029, 1030, 1031, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1053, 1060, 1071], "interpret": [28, 61, 127, 133, 151, 152, 163, 167, 170, 177, 188, 191, 198, 200, 201, 204, 206, 214, 216, 219, 223, 239, 240, 243, 249, 250, 263, 264, 265, 269, 270, 272, 278, 301, 386, 421, 425, 432, 436, 446, 460, 475, 526, 710, 757, 841, 863, 884, 931, 932, 979, 980, 981, 982, 1012, 1014, 1023, 1024, 1027, 1028, 1029, 1030, 1031, 1034, 1035, 1036, 1037, 1038, 1039, 1053, 1055, 1064, 1071, 1094, 1115], "python_basics_python_0160_boolean": [28, 88, 167, 188, 287, 288, 289, 290, 291, 292, 301, 710, 956, 978, 989, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1024, 1027, 1028, 1029, 1030, 1031, 1032, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1065, 1068, 1072], "boolean": [28, 56, 82, 88, 151, 152, 167, 168, 170, 172, 175, 176, 177, 188, 194, 198, 201, 202, 204, 205, 206, 210, 212, 214, 215, 220, 221, 222, 224, 225, 227, 228, 243, 250, 253, 263, 264, 269, 270, 287, 288, 289, 290, 291, 292, 301, 306, 330, 353, 369, 710, 904, 956, 978, 986, 989, 990, 1001, 1011, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1024, 1027, 1028, 1029, 1030, 1031, 1032, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1065, 1068, 1070, 1072, 1122], "python_exercises_legacy_dict_keyerror": [28, 710, 1014, 1023, 1027, 1053], "python_exercises_legacy_for_prim": [28, 188, 710, 1014, 1024, 1027, 1028, 1030, 1034, 1035, 1036, 1037, 1038, 1039, 1053], "python_exercises_legacy_python_1011_generators_yield": [28, 710, 1014, 1027, 1053], "fibonacci": [28, 151, 154, 170, 191, 204, 243, 257, 259, 260, 264, 270, 278, 279, 633, 655, 710, 959, 960, 961, 1014, 1027, 1053], "python_exercises_legacy_python_0350_exercis": [28, 188, 710, 1014, 1024, 1027, 1035, 1036, 1038, 1039, 1053], "right": [28, 32, 33, 34, 36, 40, 61, 78, 82, 124, 130, 131, 133, 136, 151, 171, 182, 183, 188, 193, 198, 211, 213, 219, 223, 231, 244, 257, 265, 287, 293, 325, 345, 346, 347, 353, 364, 394, 424, 469, 478, 530, 545, 547, 548, 626, 638, 654, 680, 685, 690, 710, 718, 737, 741, 757, 776, 799, 800, 802, 817, 872, 902, 952, 974, 985, 991, 1014, 1024, 1027, 1035, 1038, 1039, 1053], "justifi": [28, 151, 163, 188, 198, 219, 265, 325, 692, 710, 979, 1014, 1024, 1027, 1035, 1038, 1039, 1053], "python_exercises_legacy_while_prim": [28, 188, 710, 1014, 1024, 1027, 1028, 1030, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1053], "python_basics_python_0225_rang": [28, 88, 167, 188, 710, 956, 978, 1011, 1012, 1013, 1014, 1024, 1027, 1028, 1030, 1034, 1035, 1036, 1037, 1038, 1039, 1053, 1065, 1068, 1072], "python_basics_python_0210_indexing_sl": [28, 88, 710, 978, 1014, 1027, 1038, 1053, 1072, 1078], "python_basics_python_0193_whil": [28, 88, 167, 188, 287, 288, 289, 290, 291, 292, 301, 710, 956, 978, 1011, 1012, 1013, 1014, 1016, 1018, 1024, 1027, 1028, 1030, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1065, 1068, 1072], "python_basics_python_0300_str": [28, 88, 167, 188, 287, 288, 289, 290, 291, 292, 301, 710, 956, 978, 1012, 1013, 1014, 1024, 1027, 1035, 1036, 1038, 1039, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1071, 1072], "python_basics_python_0310_strings_format": [28, 88, 188, 710, 978, 1014, 1024, 1027, 1035, 1036, 1038, 1039, 1053], "python_basics_python_0320_strings_method": [28, 88, 167, 188, 287, 288, 289, 290, 291, 292, 301, 710, 956, 978, 1012, 1013, 1014, 1024, 1027, 1035, 1036, 1038, 1039, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1071, 1072], "method": [28, 40, 41, 52, 53, 55, 61, 63, 67, 68, 71, 88, 95, 104, 105, 108, 109, 136, 167, 168, 169, 170, 172, 175, 188, 189, 191, 193, 198, 201, 202, 204, 209, 210, 212, 214, 215, 217, 218, 220, 221, 222, 223, 225, 228, 230, 240, 243, 245, 249, 250, 253, 255, 257, 258, 259, 260, 263, 264, 266, 269, 270, 272, 275, 278, 279, 287, 288, 289, 290, 291, 292, 301, 305, 306, 382, 408, 428, 430, 432, 436, 446, 453, 454, 473, 475, 480, 481, 482, 484, 490, 492, 497, 504, 517, 519, 526, 527, 528, 531, 540, 552, 554, 555, 571, 577, 581, 587, 590, 593, 594, 597, 598, 599, 600, 603, 608, 609, 611, 614, 615, 618, 619, 620, 621, 622, 623, 626, 635, 648, 665, 666, 669, 673, 682, 690, 691, 699, 700, 704, 705, 707, 708, 709, 710, 718, 720, 725, 726, 735, 737, 747, 759, 770, 902, 952, 953, 956, 959, 963, 967, 968, 969, 970, 971, 975, 978, 983, 992, 995, 1012, 1013, 1014, 1024, 1027, 1035, 1036, 1038, 1039, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1060, 1067, 1071, 1072, 1077, 1080, 1082, 1085, 1115, 1122, 1129], "python_exercises_csv_csv_db": [28, 710, 1011, 1013, 1014, 1053], "sqlite3": [28, 83, 167, 198, 204, 210, 217, 710, 1013, 1014, 1053, 1067, 1068, 1072], "python_db_sqlite3": [28, 710, 1011, 1013, 1014, 1053, 1068], "dbapi": [28, 167, 198, 210, 710, 1011, 1013, 1014, 1053, 1068], "python_exercises_csv_csv_modul": [28, 710, 1012, 1013, 1014, 1053], "python_misc_csv": [28, 710, 1012, 1013, 1014, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1072], "python_exercises_userdb_user_json": [28, 710, 1014, 1048, 1049, 1050, 1051, 1053], "json": [28, 76, 83, 90, 111, 128, 164, 170, 180, 194, 198, 199, 207, 208, 216, 219, 220, 224, 227, 233, 242, 275, 321, 710, 970, 1014, 1048, 1049, 1050, 1053, 1074, 1088], "python_exercises_userdb_userdb_modul": [28, 710, 1014, 1048, 1049, 1050, 1051, 1052, 1053], "refactor": [28, 41, 53, 128, 217, 220, 225, 228, 240, 243, 259, 263, 264, 269, 270, 369, 409, 426, 673, 710, 718, 724, 734, 738, 748, 759, 761, 766, 772, 775, 778, 853, 970, 1014, 1048, 1049, 1050, 1051, 1053], "both": [28, 52, 61, 83, 111, 121, 131, 133, 138, 151, 163, 169, 190, 206, 209, 217, 220, 223, 225, 228, 240, 243, 255, 263, 264, 269, 270, 402, 408, 410, 411, 436, 477, 480, 504, 536, 544, 617, 673, 684, 710, 728, 751, 757, 796, 897, 901, 905, 918, 941, 947, 954, 967, 970, 974, 981, 988, 995, 999, 1004, 1014, 1017, 1020, 1026, 1048, 1049, 1050, 1051, 1053, 1061, 1092, 1099, 1112], "Into": [28, 95, 209, 214, 217, 220, 225, 228, 240, 243, 249, 263, 264, 269, 270, 339, 354, 363, 369, 370, 376, 380, 383, 387, 396, 400, 404, 405, 406, 474, 475, 526, 611, 612, 613, 614, 615, 616, 618, 619, 620, 621, 622, 623, 628, 666, 707, 709, 710, 945, 970, 1014, 1048, 1049, 1050, 1051, 1053], "python_exercises_userdb_csvdictread": [28, 710, 1014, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053], "dictread": [28, 182, 203, 204, 217, 220, 225, 228, 240, 243, 263, 264, 269, 270, 710, 970, 1012, 1014, 1048, 1049, 1050, 1051, 1052, 1053], "python_exercises_userdb_csvread": [28, 710, 1014, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053], "reader": [28, 128, 203, 217, 220, 225, 228, 240, 243, 263, 264, 269, 270, 391, 410, 433, 710, 801, 967, 970, 997, 1014, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053], "python_exercises_userdb_csvdictreader_funct": [28, 710, 1014, 1045, 1048, 1049, 1050, 1051, 1052, 1053], "python_exercises_userdb_user_class_person": [28, 710, 1014, 1048, 1050, 1053], "awai": [28, 61, 75, 82, 130, 131, 132, 136, 155, 171, 192, 198, 206, 240, 243, 263, 264, 269, 275, 290, 422, 685, 710, 796, 817, 928, 952, 970, 1014, 1048, 1053], "raw": [28, 61, 176, 179, 182, 187, 199, 202, 211, 215, 221, 235, 236, 240, 242, 243, 247, 249, 263, 264, 269, 272, 275, 286, 296, 322, 410, 411, 417, 440, 447, 481, 565, 686, 710, 793, 970, 986, 991, 1007, 1014, 1048, 1053, 1063], "python_advanced_oo_namedtupl": [28, 710, 956, 970, 1014, 1048, 1050, 1053], "namedtupl": [28, 167, 175, 182, 197, 198, 200, 206, 216, 219, 240, 257, 259, 260, 264, 275, 278, 279, 710, 956, 970, 1014, 1048, 1050, 1053, 1076, 1122], "python_exercises_userdb_mqtt_publish_csv": [28, 710, 1014, 1048, 1049, 1053], "mqtt": [28, 180, 182, 196, 198, 207, 220, 221, 225, 259, 260, 275, 278, 279, 307, 310, 312, 710, 970, 1010, 1014, 1048, 1051, 1053, 1072], "publish": [28, 135, 137, 146, 207, 219, 220, 240, 298, 307, 309, 710, 970, 1014, 1048, 1051, 1053, 1055, 1090], "python_exercises_userdb_csvreader_funct": [28, 710, 1014, 1047, 1048, 1053], "python_exercises_herdt_swap": [28, 710, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1053], "python_exercises_herdt_boolean": [28, 710, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1053], "express": [28, 57, 60, 150, 166, 167, 169, 170, 180, 190, 199, 204, 205, 207, 211, 230, 231, 233, 234, 235, 236, 239, 240, 245, 264, 265, 270, 324, 326, 330, 334, 343, 344, 346, 347, 348, 351, 353, 356, 358, 359, 361, 363, 369, 370, 376, 380, 383, 387, 396, 400, 405, 406, 410, 425, 434, 446, 447, 450, 454, 460, 461, 475, 477, 526, 528, 606, 628, 639, 643, 648, 666, 707, 709, 710, 817, 850, 931, 951, 961, 967, 988, 990, 997, 999, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1051, 1052, 1053, 1055, 1079, 1111, 1112, 1113], "python_exercises_herdt_max_numb": [28, 710, 1014, 1016, 1017, 1018, 1019, 1021, 1053], "python_exercises_herdt_username_password": [28, 710, 1014, 1016, 1018, 1021, 1053], "usernam": [28, 146, 175, 183, 204, 298, 710, 784, 792, 801, 864, 874, 1001, 1014, 1016, 1018, 1033, 1053, 1122], "password": [28, 138, 141, 146, 171, 175, 183, 204, 298, 301, 306, 710, 792, 814, 854, 862, 864, 865, 870, 1014, 1016, 1018, 1033, 1053, 1069, 1122], "python_exercises_herdt_greet": [28, 710, 1014, 1016, 1017, 1018, 1021, 1053], "python_exercises_herdt_while_even_numb": [28, 710, 1014, 1016, 1018, 1053], "python_exercises_sensors_project_setup": [28, 710, 1014, 1041, 1042, 1043, 1053], "setup": [28, 104, 111, 115, 119, 128, 146, 158, 162, 163, 201, 203, 219, 226, 229, 231, 236, 238, 244, 247, 251, 261, 265, 298, 301, 306, 307, 392, 425, 439, 450, 452, 466, 478, 481, 482, 485, 619, 621, 710, 725, 751, 848, 853, 861, 863, 878, 880, 891, 928, 932, 936, 938, 941, 942, 952, 959, 967, 1010, 1014, 1041, 1053, 1093, 1103, 1105], "python_exercises_sensors_sensor_const": [28, 710, 1014, 1041, 1042, 1043, 1053], "python_advanced_oo_method": [28, 710, 956, 970, 1014, 1041, 1042, 1043, 1053], "python_db_dbapi2": [28, 710, 1011, 1013, 1014, 1053, 1068], "python_db_postgr": [28, 710, 1053, 1068], "postgresql": [28, 710, 1053, 1067, 1068], "python_misc_encod": [28, 88, 167, 188, 287, 288, 289, 290, 291, 292, 301, 710, 956, 978, 1012, 1013, 1014, 1024, 1027, 1035, 1038, 1039, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1071, 1072], "encod": [28, 41, 88, 150, 167, 168, 170, 172, 188, 191, 198, 200, 203, 206, 207, 210, 216, 217, 219, 225, 227, 230, 244, 248, 249, 251, 264, 265, 272, 286, 287, 288, 289, 290, 291, 292, 306, 410, 710, 956, 978, 986, 991, 1005, 1012, 1013, 1014, 1024, 1027, 1035, 1038, 1039, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1066, 1072, 1074], "python_basics_python_0110_blahblah": [28, 88, 167, 188, 287, 288, 289, 290, 291, 292, 301, 710, 956, 963, 964, 965, 966, 970, 978, 989, 998, 1008, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1027, 1028, 1029, 1030, 1031, 1032, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1065, 1068, 1071, 1072, 1078, 1086], "blahblah": [28, 88, 167, 170, 175, 177, 188, 194, 198, 201, 204, 210, 214, 220, 221, 222, 224, 225, 227, 228, 230, 243, 250, 253, 263, 264, 269, 270, 287, 288, 289, 290, 291, 292, 301, 710, 956, 963, 964, 965, 966, 970, 978, 989, 998, 1008, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1027, 1028, 1029, 1030, 1031, 1032, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1065, 1068, 1071, 1072, 1078, 1086, 1122], "python_basics_python_0200_sequential_typ": [28, 88, 167, 188, 287, 288, 289, 290, 291, 292, 301, 710, 956, 978, 1011, 1012, 1013, 1014, 1024, 1027, 1028, 1030, 1034, 1035, 1036, 1037, 1038, 1039, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1065, 1068, 1071, 1072, 1078], "sequenti": [28, 61, 88, 104, 106, 167, 168, 170, 172, 175, 176, 177, 180, 188, 193, 198, 201, 204, 209, 210, 212, 214, 222, 224, 225, 228, 232, 240, 243, 250, 253, 256, 258, 260, 261, 263, 264, 269, 270, 278, 279, 287, 288, 289, 290, 291, 292, 301, 306, 399, 475, 486, 490, 526, 561, 571, 579, 590, 594, 623, 710, 861, 863, 893, 956, 961, 978, 1011, 1012, 1013, 1014, 1024, 1027, 1028, 1030, 1034, 1035, 1036, 1037, 1038, 1039, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1065, 1068, 1071, 1072, 1078, 1122], "python_basics_python_0250_refs_flat_deep_copi": [28, 88, 167, 188, 287, 288, 289, 290, 291, 292, 301, 710, 956, 978, 1012, 1013, 1014, 1024, 1027, 1035, 1036, 1038, 1039, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1071, 1072], "mutabl": [28, 88, 163, 167, 168, 170, 172, 175, 176, 182, 188, 189, 198, 201, 202, 204, 205, 206, 207, 212, 214, 215, 218, 221, 225, 227, 228, 230, 233, 243, 245, 250, 252, 253, 257, 259, 260, 262, 263, 264, 266, 269, 270, 272, 278, 279, 287, 288, 289, 290, 291, 292, 301, 676, 710, 956, 978, 987, 991, 1012, 1013, 1014, 1024, 1027, 1035, 1036, 1038, 1039, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1071, 1072, 1122], "python_basics_instal": [28, 88, 167, 710, 978, 1053], "python_basics_python_0130_syntax_etc": [28, 88, 167, 188, 287, 288, 289, 290, 291, 292, 301, 710, 956, 963, 964, 965, 966, 970, 978, 989, 998, 1008, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1027, 1028, 1029, 1030, 1031, 1032, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1065, 1068, 1071, 1072, 1078, 1086], "syntax": [28, 66, 88, 124, 154, 163, 167, 170, 171, 173, 175, 176, 177, 182, 188, 189, 194, 198, 201, 204, 210, 211, 214, 216, 220, 221, 222, 225, 228, 230, 241, 243, 250, 252, 253, 263, 264, 266, 269, 270, 282, 287, 288, 289, 290, 291, 292, 301, 448, 527, 528, 631, 648, 675, 688, 710, 845, 951, 953, 954, 955, 956, 963, 964, 965, 966, 970, 978, 980, 989, 997, 998, 1000, 1008, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1027, 1028, 1029, 1030, 1031, 1032, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1065, 1068, 1071, 1072, 1078, 1086, 1112, 1122], "python_basics_python_0400_list": [28, 88, 710, 978, 1053], "python_basics_python_1000_function_object": [28, 88, 710, 978, 1053], "python_basics_python_0125_run": [28, 88, 188, 301, 710, 978, 1008, 1011, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1021, 1022, 1024, 1027, 1028, 1029, 1030, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053], "run": [28, 40, 57, 60, 61, 88, 95, 106, 108, 109, 121, 124, 127, 130, 131, 132, 133, 134, 137, 138, 141, 142, 150, 162, 163, 170, 171, 183, 188, 192, 193, 198, 203, 211, 219, 220, 223, 226, 229, 231, 236, 243, 244, 247, 250, 251, 253, 261, 263, 264, 265, 269, 270, 274, 286, 301, 304, 326, 344, 386, 389, 397, 398, 402, 403, 415, 416, 428, 433, 452, 453, 454, 477, 480, 481, 482, 508, 535, 548, 557, 569, 626, 684, 685, 708, 710, 730, 745, 755, 757, 758, 767, 790, 792, 794, 795, 796, 797, 813, 814, 817, 818, 848, 861, 862, 863, 864, 872, 874, 882, 884, 900, 913, 915, 916, 917, 919, 924, 929, 931, 934, 939, 941, 943, 947, 952, 963, 966, 978, 979, 981, 1008, 1011, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1021, 1022, 1024, 1027, 1028, 1029, 1030, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1057, 1074, 1087, 1093, 1098, 1099, 1104, 1117], "python_basics_python_0460_set": [28, 88, 710, 978, 1053], "python_swdev_pip": [28, 167, 710, 1008, 1053, 1056, 1057, 1061, 1072, 1074, 1086, 1089, 1096], "python_misc_import": [28, 167, 710, 1008, 1053, 1056, 1057, 1061, 1072, 1074, 1086, 1089, 1096], "incomplet": [28, 161, 167, 200, 206, 216, 219, 223, 419, 526, 601, 710, 860, 1008, 1053, 1056, 1057, 1061, 1072, 1074, 1086, 1089, 1096, 1097], "python_swdev_venv": [28, 167, 710, 1008, 1053, 1056, 1057, 1061, 1072, 1074, 1086, 1096], "python_swdev_unittest": [28, 710, 1053, 1086], "unittest": [28, 63, 111, 127, 128, 144, 147, 158, 160, 163, 166, 167, 177, 180, 191, 193, 198, 240, 249, 260, 279, 291, 301, 309, 310, 319, 320, 708, 710, 997, 1053, 1055, 1086, 1097], "python_advanced_oo_inherit": [28, 167, 710, 956, 963, 964, 965, 966, 970, 1053, 1065, 1072, 1086], "inherit": [28, 63, 67, 71, 104, 148, 158, 167, 191, 204, 217, 221, 223, 256, 257, 258, 259, 260, 264, 278, 279, 310, 432, 446, 475, 477, 480, 524, 526, 527, 551, 600, 603, 604, 623, 665, 710, 749, 789, 792, 795, 816, 818, 925, 954, 956, 964, 965, 966, 967, 970, 972, 975, 1053, 1065, 1072, 1085, 1086, 1128], "python_swdev_pytest_intro": [28, 710, 1053, 1086, 1091], "introduct": [28, 70, 71, 72, 76, 95, 96, 97, 104, 111, 144, 147, 192, 193, 207, 209, 217, 220, 228, 231, 237, 239, 240, 246, 247, 249, 256, 259, 260, 264, 267, 275, 278, 279, 300, 305, 309, 318, 320, 354, 363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 446, 469, 475, 476, 479, 480, 483, 484, 485, 490, 492, 503, 504, 526, 534, 549, 552, 555, 571, 577, 581, 590, 593, 594, 599, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 628, 635, 647, 654, 666, 682, 691, 699, 709, 710, 711, 759, 780, 784, 785, 786, 787, 790, 798, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 837, 847, 852, 853, 865, 866, 867, 868, 869, 876, 882, 884, 892, 894, 897, 908, 911, 914, 916, 933, 935, 936, 937, 938, 939, 940, 941, 942, 978, 1051, 1052, 1053, 1062, 1086, 1091, 1113, 1127], "By": [28, 49, 51, 131, 133, 138, 142, 146, 158, 164, 200, 206, 207, 209, 216, 217, 219, 220, 224, 228, 231, 235, 236, 238, 240, 249, 257, 259, 260, 264, 275, 278, 279, 282, 309, 341, 368, 391, 394, 611, 612, 614, 615, 618, 620, 622, 623, 666, 667, 707, 709, 710, 726, 799, 848, 861, 897, 916, 932, 943, 967, 974, 1051, 1052, 1053, 1062, 1086, 1091], "python_drafts_matplotlib": [28, 710, 1008, 1053], "matplotlib": [28, 163, 182, 201, 202, 214, 228, 229, 231, 233, 264, 310, 710, 951, 1008, 1053, 1055, 1061], "python_drafts_setuptool": [28, 710, 1008, 1053], "setuptool": [28, 59, 127, 240, 275, 710, 1008, 1053, 1094], "python_drafts_argpars": [28, 710, 1008, 1053], "argpars": [28, 207, 228, 259, 278, 287, 710, 1008, 1053], "python_advanced_closur": [28, 167, 710, 956, 1053, 1065, 1072], "closur": [28, 57, 60, 61, 150, 163, 167, 175, 176, 191, 204, 207, 217, 250, 253, 670, 710, 953, 956, 996, 998, 1053, 1065, 1072, 1122], "python_advanced_context_mgr": [28, 710, 956, 1053], "python_advanced_except": [28, 167, 710, 956, 1053, 1065, 1072], "python_advanced_iteration_gener": [28, 710, 956, 1053], "comprehens": [28, 61, 66, 151, 152, 164, 167, 170, 176, 190, 191, 192, 199, 204, 205, 207, 208, 209, 212, 215, 221, 224, 240, 243, 245, 252, 257, 263, 264, 269, 270, 278, 671, 710, 728, 745, 753, 956, 961, 1053, 1077], "python_advanced_oo_classes_and_dict": [28, 167, 710, 956, 963, 964, 965, 966, 970, 1014, 1041, 1042, 1043, 1048, 1050, 1053, 1065, 1072, 1086], "python_advanced_comprehens": [28, 710, 956, 1053], "python_advanced_stararg": [28, 167, 710, 956, 1053, 1065, 1072], "keyword": [28, 37, 61, 115, 126, 164, 167, 168, 169, 170, 172, 191, 193, 207, 212, 217, 219, 240, 243, 244, 250, 253, 257, 259, 260, 263, 265, 269, 275, 278, 279, 301, 368, 398, 541, 542, 544, 562, 613, 673, 710, 906, 952, 953, 954, 956, 980, 996, 998, 1010, 1053, 1065, 1069, 1072, 1109, 1111], "python_advanced_exec": [28, 710, 956, 1053], "python_advanced_decor": [28, 167, 710, 956, 1053, 1065, 1072], "decor": [28, 57, 60, 151, 163, 166, 167, 182, 191, 207, 217, 231, 425, 432, 446, 460, 475, 526, 710, 952, 956, 967, 974, 975, 977, 998, 1053, 1055, 1065, 1072, 1092, 1115], "python_advanced_multithreading_mutex": [28, 710, 956, 964, 965, 966, 1053], "race": [28, 70, 71, 72, 76, 85, 131, 149, 209, 235, 236, 238, 247, 258, 259, 260, 278, 279, 282, 309, 310, 316, 385, 395, 504, 676, 692, 699, 709, 710, 734, 738, 759, 761, 766, 770, 772, 775, 778, 853, 883, 893, 894, 899, 907, 908, 914, 956, 964, 966, 1053, 1117, 1127, 1128], "condit": [28, 70, 71, 72, 76, 85, 87, 131, 142, 149, 190, 209, 229, 235, 236, 238, 247, 258, 259, 260, 278, 279, 282, 309, 310, 316, 324, 326, 330, 353, 354, 356, 357, 359, 361, 363, 370, 376, 380, 383, 385, 387, 395, 396, 400, 405, 406, 413, 418, 419, 420, 504, 521, 610, 628, 666, 676, 686, 692, 699, 700, 707, 709, 710, 734, 738, 759, 761, 766, 770, 772, 774, 775, 778, 853, 883, 889, 893, 894, 899, 907, 908, 910, 914, 956, 964, 966, 989, 990, 1005, 1053, 1059, 1077, 1117, 1127, 1128], "mutex": [28, 70, 71, 72, 74, 76, 85, 87, 149, 178, 209, 234, 235, 236, 238, 247, 258, 259, 260, 278, 279, 282, 309, 310, 316, 504, 693, 695, 697, 698, 699, 709, 710, 734, 738, 755, 759, 760, 761, 766, 772, 775, 776, 778, 853, 894, 899, 904, 907, 908, 956, 964, 966, 1053, 1112, 1117, 1128], "python_advanced_multithreading_bas": [28, 710, 956, 963, 964, 965, 966, 1053], "python_advanced_multithreading_exam_quest": [28, 710, 956, 964, 966, 1053], "exam": [28, 94, 95, 104, 111, 192, 208, 214, 237, 246, 267, 303, 315, 710, 787, 853, 894, 914, 956, 964, 1053, 1054], "python_advanced_oo_operator_overload": [28, 167, 710, 956, 970, 1053], "overload": [28, 95, 150, 158, 167, 193, 221, 256, 257, 258, 259, 260, 275, 278, 279, 282, 394, 475, 477, 490, 492, 526, 528, 549, 552, 553, 555, 561, 571, 577, 581, 582, 590, 593, 594, 608, 609, 611, 612, 614, 615, 616, 618, 619, 620, 621, 622, 623, 634, 635, 639, 666, 682, 691, 699, 707, 709, 710, 716, 956, 970, 1053, 1111], "python_advanced_oo_properti": [28, 710, 956, 970, 1053], "properti": [28, 38, 151, 167, 191, 204, 221, 223, 240, 244, 257, 259, 260, 264, 274, 275, 278, 279, 305, 414, 415, 416, 421, 424, 710, 956, 970, 1053, 1085, 1098, 1101], "python_advanced_oo_constructor": [28, 167, 710, 956, 963, 964, 965, 966, 970, 1053, 1065, 1072, 1086], "constructor": [28, 41, 51, 54, 68, 95, 108, 109, 111, 158, 164, 167, 170, 190, 191, 193, 204, 209, 217, 221, 240, 243, 245, 250, 253, 256, 257, 258, 259, 260, 261, 263, 264, 269, 275, 278, 279, 303, 304, 305, 378, 432, 446, 473, 475, 479, 480, 481, 485, 504, 513, 519, 526, 527, 528, 534, 551, 582, 598, 599, 608, 611, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 623, 626, 634, 635, 636, 638, 664, 666, 682, 685, 686, 687, 691, 696, 697, 698, 699, 700, 707, 709, 710, 716, 718, 749, 902, 956, 963, 964, 965, 966, 968, 970, 971, 972, 986, 1053, 1065, 1072, 1085, 1086, 1092, 1104, 1112], "python_advanced_oo_str_repr": [28, 710, 956, 970, 1053], "str": [28, 150, 153, 164, 174, 179, 181, 182, 187, 190, 192, 200, 203, 206, 211, 213, 216, 219, 223, 226, 229, 232, 240, 241, 243, 244, 248, 249, 250, 251, 253, 255, 257, 259, 260, 261, 263, 264, 265, 269, 271, 275, 278, 279, 286, 292, 295, 296, 297, 301, 374, 392, 410, 459, 464, 545, 546, 547, 548, 663, 675, 710, 954, 956, 968, 970, 971, 974, 983, 985, 986, 997, 1001, 1005, 1012, 1020, 1022, 1053, 1063, 1071, 1077, 1082, 1083], "repr": [28, 181, 200, 206, 216, 219, 223, 226, 229, 240, 243, 244, 250, 253, 257, 259, 260, 263, 264, 265, 269, 275, 278, 279, 710, 954, 956, 970, 971, 1053], "python_advanced_oo_abc": [28, 710, 956, 970, 1053], "abstract": [28, 76, 82, 167, 207, 239, 256, 257, 258, 259, 260, 278, 279, 305, 369, 408, 410, 425, 432, 436, 438, 440, 446, 448, 460, 475, 480, 526, 561, 600, 601, 678, 710, 790, 794, 863, 878, 956, 970, 1053, 1115, 1117], "abc": [28, 30, 150, 164, 167, 169, 174, 179, 181, 187, 190, 192, 196, 200, 203, 206, 207, 211, 213, 216, 219, 223, 226, 229, 232, 240, 241, 244, 251, 257, 259, 260, 261, 265, 271, 275, 278, 279, 288, 296, 410, 480, 553, 574, 591, 593, 710, 956, 970, 986, 1053], "duck": [28, 30, 127, 166, 167, 217, 221, 240, 257, 259, 260, 264, 275, 278, 279, 425, 480, 710, 956, 963, 970, 1053, 1055, 1060, 1112], "python_misc_mqtt": [28, 710, 1053, 1072, 1074], "python_misc_context_manag": [28, 167, 710, 1053, 1065, 1072], "python_misc_vscod": [28, 710, 1053, 1072], "visual": [28, 76, 102, 158, 163, 167, 168, 170, 172, 183, 192, 193, 198, 201, 214, 220, 228, 231, 243, 247, 250, 253, 257, 263, 264, 269, 270, 301, 306, 321, 710, 796, 862, 933, 979, 1012, 1053, 1072], "studio": [28, 102, 158, 163, 167, 168, 170, 172, 183, 192, 193, 198, 201, 214, 220, 228, 243, 247, 250, 253, 257, 263, 264, 269, 270, 301, 306, 321, 710, 796, 979, 1053, 1072], "python_misc_ai_k_mean": [28, 167, 710, 1053, 1056, 1057, 1072], "python_misc_ai_linear_regress": [28, 167, 710, 1053, 1056, 1057, 1061, 1072], "linear": [28, 152, 154, 164, 167, 169, 187, 195, 250, 278, 377, 399, 551, 676, 710, 793, 862, 928, 990, 1053, 1056, 1057, 1062, 1072], "regress": [28, 167, 219, 250, 278, 710, 1053, 1056, 1057, 1062, 1072], "python_misc_ai_machine_learning_intro": [28, 167, 710, 1053, 1056, 1057, 1061, 1062, 1072], "concept": [28, 76, 95, 96, 97, 111, 131, 141, 155, 163, 167, 169, 171, 173, 183, 234, 237, 246, 247, 250, 267, 278, 303, 304, 319, 322, 369, 392, 432, 446, 469, 475, 476, 479, 480, 483, 484, 485, 503, 526, 568, 625, 666, 676, 699, 709, 710, 780, 784, 785, 786, 787, 790, 796, 798, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 837, 847, 853, 865, 866, 867, 868, 869, 876, 882, 884, 892, 894, 898, 908, 911, 914, 916, 933, 935, 936, 937, 938, 939, 940, 941, 942, 985, 993, 1003, 1053, 1056, 1057, 1061, 1071, 1072, 1074, 1127], "terminologi": [28, 96, 97, 111, 137, 155, 167, 202, 237, 246, 247, 250, 267, 278, 359, 432, 446, 469, 475, 476, 479, 480, 483, 484, 485, 503, 526, 541, 699, 709, 710, 780, 784, 785, 786, 787, 790, 798, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 837, 846, 847, 853, 865, 866, 867, 868, 869, 876, 882, 884, 892, 894, 908, 911, 914, 915, 916, 930, 933, 935, 936, 937, 938, 939, 940, 941, 942, 1053, 1056, 1057, 1061, 1072, 1130], "python_misc_pandas_bas": [28, 710, 1053, 1072, 1078], "datafram": [28, 249, 250, 251, 253, 257, 260, 279, 410, 710, 1053, 1058, 1061, 1072, 1075, 1077, 1078, 1079, 1081, 1082], "python_misc_pandas_filt": [28, 710, 1053, 1072, 1078], "python_misc_pandas_index": [28, 710, 1053, 1072, 1078], "python_misc_pandas_loc": [28, 710, 1053, 1072, 1078], "select": [28, 61, 130, 131, 133, 137, 190, 195, 203, 220, 250, 253, 347, 369, 710, 757, 801, 858, 863, 897, 898, 917, 920, 922, 925, 945, 1012, 1053, 1058, 1070, 1072, 1078, 1080, 1092, 1100, 1127, 1129], "row": [28, 132, 154, 170, 190, 203, 207, 209, 211, 223, 248, 249, 250, 253, 257, 270, 357, 399, 710, 797, 902, 954, 973, 993, 1012, 1044, 1046, 1053, 1060, 1066, 1070, 1072, 1076, 1077, 1078, 1082], "column": [28, 61, 124, 133, 136, 151, 154, 200, 219, 248, 249, 250, 251, 253, 257, 399, 410, 710, 797, 802, 813, 1012, 1024, 1036, 1053, 1060, 1066, 1072, 1078], "With": [28, 114, 119, 132, 138, 158, 219, 228, 247, 249, 250, 253, 258, 265, 273, 275, 318, 359, 388, 404, 414, 424, 425, 434, 446, 460, 475, 526, 635, 666, 709, 710, 711, 757, 786, 787, 853, 860, 861, 892, 894, 911, 929, 932, 943, 974, 978, 1053, 1072, 1076, 1078, 1080, 1088, 1112, 1114, 1115, 1117], "loc": [28, 151, 244, 248, 249, 250, 251, 253, 255, 257, 385, 710, 902, 965, 1053, 1072, 1075, 1076, 1077, 1078, 1079], "python_misc_pandas_iloc": [28, 710, 1053, 1072, 1078], "iloc": [28, 250, 251, 253, 255, 257, 410, 710, 1053, 1072, 1076, 1078, 1081], "python_misc_pandas_add_row": [28, 710, 1053, 1072, 1078], "ad": [28, 30, 31, 37, 83, 137, 141, 142, 143, 146, 151, 171, 183, 193, 249, 250, 253, 257, 298, 349, 368, 390, 417, 427, 431, 436, 545, 547, 548, 583, 637, 673, 710, 726, 861, 863, 913, 917, 918, 953, 971, 986, 1005, 1053, 1072, 1078, 1079, 1083, 1093], "python_misc_pandas_mod_col": [28, 710, 1053, 1072, 1078], "modifi": [28, 40, 73, 86, 108, 109, 133, 138, 146, 149, 151, 171, 190, 247, 249, 250, 253, 257, 258, 259, 260, 278, 279, 312, 327, 329, 335, 372, 384, 391, 408, 410, 412, 421, 431, 433, 436, 452, 453, 474, 477, 481, 482, 487, 488, 489, 501, 515, 518, 528, 535, 538, 539, 541, 544, 556, 608, 612, 614, 617, 620, 634, 648, 671, 676, 688, 699, 701, 704, 705, 708, 709, 710, 730, 745, 765, 784, 785, 797, 802, 853, 866, 870, 875, 894, 902, 908, 946, 947, 953, 955, 966, 987, 1030, 1034, 1052, 1053, 1072, 1078, 1080, 1124, 1128], "As": [29, 44, 66, 78, 111, 128, 131, 133, 138, 142, 148, 160, 163, 167, 198, 211, 273, 275, 304, 321, 359, 390, 393, 470, 472, 481, 536, 541, 543, 544, 621, 730, 757, 783, 792, 861, 862, 870, 872, 889, 917, 925, 947, 953, 974, 979, 983, 1040, 1044, 1057, 1102, 1114], "follow": [29, 37, 41, 76, 104, 105, 107, 121, 130, 131, 133, 134, 135, 136, 138, 146, 151, 155, 159, 160, 163, 167, 171, 172, 183, 200, 206, 216, 217, 219, 223, 232, 236, 238, 255, 256, 258, 264, 265, 298, 320, 322, 325, 342, 343, 356, 359, 386, 388, 390, 392, 397, 398, 401, 409, 411, 416, 426, 427, 430, 431, 447, 448, 450, 451, 452, 453, 454, 469, 473, 476, 477, 478, 480, 481, 482, 484, 485, 497, 504, 530, 545, 546, 547, 548, 601, 608, 610, 615, 617, 618, 621, 622, 625, 643, 676, 704, 705, 708, 718, 720, 726, 757, 783, 784, 785, 790, 792, 794, 796, 808, 810, 811, 817, 821, 829, 830, 854, 861, 862, 863, 884, 887, 888, 889, 890, 899, 916, 925, 929, 931, 937, 939, 941, 943, 945, 946, 947, 950, 954, 955, 959, 966, 985, 999, 1007, 1012, 1015, 1020, 1024, 1026, 1030, 1033, 1034, 1037, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1080, 1084, 1094, 1115], "version": [29, 59, 130, 134, 136, 137, 138, 141, 144, 146, 147, 159, 160, 161, 163, 170, 179, 181, 190, 191, 200, 204, 206, 210, 216, 219, 226, 231, 234, 243, 249, 255, 256, 257, 258, 265, 294, 309, 369, 408, 409, 411, 412, 414, 421, 424, 521, 618, 620, 621, 668, 672, 684, 705, 730, 732, 749, 757, 758, 773, 817, 861, 862, 932, 933, 943, 945, 946, 948, 979, 980, 986, 1010, 1085, 1087, 1094, 1095, 1101, 1107], "control": [29, 43, 57, 60, 61, 84, 130, 137, 144, 146, 149, 160, 163, 168, 170, 171, 172, 173, 182, 183, 198, 201, 214, 219, 225, 239, 302, 303, 304, 306, 309, 347, 361, 362, 408, 411, 425, 432, 469, 476, 481, 484, 527, 710, 730, 755, 757, 762, 817, 853, 855, 856, 860, 861, 863, 879, 928, 933, 952, 955, 963, 975, 988, 990, 1093, 1095, 1113, 1123, 1129], "done": [29, 40, 44, 45, 48, 51, 53, 54, 55, 61, 73, 82, 85, 89, 100, 108, 109, 118, 123, 127, 128, 130, 132, 133, 135, 136, 137, 138, 141, 146, 151, 152, 155, 159, 163, 170, 192, 207, 211, 217, 219, 235, 236, 238, 250, 253, 260, 265, 279, 282, 287, 293, 304, 310, 325, 326, 374, 381, 382, 384, 386, 397, 408, 410, 411, 412, 416, 450, 470, 478, 482, 528, 540, 541, 569, 583, 591, 596, 620, 621, 623, 626, 633, 654, 657, 661, 662, 672, 678, 686, 690, 698, 700, 710, 716, 726, 728, 747, 749, 757, 759, 784, 785, 789, 790, 792, 793, 801, 813, 836, 854, 855, 857, 862, 863, 879, 880, 881, 891, 905, 913, 919, 928, 932, 933, 941, 945, 947, 954, 957, 958, 959, 977, 986, 997, 1005, 1006, 1007, 1010, 1013, 1034, 1070, 1092, 1117], "No": [29, 41, 61, 78, 121, 127, 131, 133, 137, 138, 146, 173, 190, 206, 207, 223, 249, 312, 332, 334, 348, 364, 368, 375, 386, 391, 403, 408, 412, 413, 416, 418, 421, 422, 423, 424, 436, 477, 521, 531, 532, 544, 551, 561, 576, 579, 597, 615, 625, 627, 630, 634, 637, 641, 685, 686, 693, 700, 735, 737, 739, 741, 755, 757, 762, 774, 793, 799, 801, 804, 805, 820, 828, 836, 839, 855, 857, 863, 877, 884, 889, 890, 899, 900, 902, 904, 913, 917, 925, 928, 934, 948, 950, 967, 974, 980, 983, 986, 987, 995, 999, 1003, 1005, 1062, 1066, 1070, 1071, 1080, 1083, 1092, 1094, 1100], "proprietari": 29, "accept": [29, 30, 58, 133, 159, 255, 408, 410, 676, 686, 688, 725, 857, 883, 953, 977, 1127, 1129], "proven": [29, 397, 401, 545, 547, 548, 637], "difficult": [29, 66, 190, 353, 371, 521, 743, 755, 917], "unicod": [30, 32, 33, 34, 36, 191, 200, 204, 206, 216, 219, 241, 265, 336, 985, 991, 1005, 1071, 1085], "sphinxemojicod": 30, "pip": [30, 59, 115, 127, 163, 167, 188, 217, 231, 883, 979, 1009, 1010, 1042, 1055, 1074, 1086, 1087, 1088, 1092, 1094, 1095], "conf": [30, 63, 132, 134, 136, 421, 757, 863, 955], "grimac": 30, "astonish": 30, "rolling_ey": 30, "face_with_raised_eyebrow": 30, "flush": [30, 244, 481, 716, 728], "innoc": [30, 137, 391, 692, 796, 930, 974], "kiss": 30, "kissing_heart": 30, "middle_fing": 30, "metal": [30, 76, 78, 85, 87, 131, 319, 854, 862, 863], "muscl": 30, "nerd": [30, 817], "ok_hand": 30, "penguin": 30, "pig": [30, 386], "point_up": 30, "sleep": [30, 61, 131, 206, 235, 236, 259, 260, 278, 279, 287, 359, 368, 698, 710, 734, 737, 739, 749, 759, 762, 766, 772, 774, 775, 778, 853, 854, 862, 891, 895, 898, 913, 915, 916, 919, 924, 963], "sunglass": 30, "think": [30, 40, 41, 67, 131, 132, 146, 169, 193, 369, 390, 391, 394, 480, 485, 531, 551, 626, 634, 636, 685, 784, 785, 788, 878, 924, 986], "thumbsdown": 30, "thumbsup": 30, "wink": 30, "1_tone1": 30, "1_tone2": 30, "1_tone3": 30, "1_tone4": 30, "1_tone5": 30, "1st_place_med": 30, "2nd_place_med": 30, "3rd_place_med": 30, "8ball": 30, "abacu": 30, "abcd": [30, 181, 187, 203, 223, 265], "ac": [30, 141, 179], "accordion": 30, "adhesive_bandag": 30, "admission_ticket": 30, "adult": [30, 975], "adult_dark_skin_ton": 30, "adult_light_skin_ton": 30, "adult_medium_dark_skin_ton": 30, "adult_medium_light_skin_ton": 30, "adult_medium_skin_ton": 30, "adult_tone1": 30, "adult_tone2": 30, "adult_tone3": 30, "adult_tone4": 30, "adult_tone5": 30, "ae": [30, 141], "aerial_tramwai": 30, "af": [30, 141], "afghanistan": 30, "ai": [30, 167, 1062, 1072], "airplan": [30, 854], "airplane_arriv": 30, "airplane_departur": 30, "airplane_smal": 30, "aland_island": 30, "alarm_clock": 30, "albania": 30, "alemb": 30, "algeria": 30, "alien": 30, "ambul": 30, "american_samoa": 30, "amphora": 30, "anatomical_heart": 30, "anchor": 30, "andorra": 30, "angel": [30, 255], "angel_tone1": 30, "angel_tone2": 30, "angel_tone3": 30, "angel_tone4": 30, "angel_tone5": 30, "anger": 30, "anger_right": 30, "angola": 30, "angri": 30, "anguilla": 30, "anguish": 30, "ant": 30, "antarctica": 30, "antigua_barbuda": 30, "ao": 30, "appl": [30, 931, 997], "aq": 30, "aquariu": 30, "archeri": 30, "argentina": 30, "ari": [30, 33, 36], "armenia": 30, "arrow_backward": 30, "arrow_double_down": 30, "arrow_double_up": 30, "arrow_down": 30, "arrow_down_smal": 30, "arrow_forward": 30, "arrow_heading_down": 30, "arrow_heading_up": 30, "arrow_left": 30, "arrow_lower_left": 30, "arrow_lower_right": 30, "arrow_right": 30, "arrow_right_hook": 30, "arrow_up": 30, "arrow_up_down": 30, "arrow_up_smal": 30, "arrow_upper_left": 30, "arrow_upper_right": 30, "arrows_clockwis": 30, "arrows_counterclockwis": 30, "articulated_lorri": 30, "artificial_satellit": 30, "artist": 30, "artist_dark_skin_ton": 30, "artist_light_skin_ton": 30, "artist_medium_dark_skin_ton": 30, "artist_medium_light_skin_ton": 30, "artist_medium_skin_ton": 30, "artist_tone1": 30, "artist_tone2": 30, "artist_tone3": 30, "artist_tone4": 30, "artist_tone5": 30, "aruba": 30, "ascens": 30, "astronaut": 30, "astronaut_dark_skin_ton": 30, "astronaut_light_skin_ton": 30, "astronaut_medium_dark_skin_ton": 30, "astronaut_medium_light_skin_ton": 30, "astronaut_medium_skin_ton": 30, "astronaut_tone1": 30, "astronaut_tone2": 30, "astronaut_tone3": 30, "astronaut_tone4": 30, "astronaut_tone5": 30, "athletic_sho": 30, "atm": 30, "atom": [30, 63, 74, 86, 154, 209, 234, 235, 236, 238, 247, 258, 282, 504, 636, 685, 698, 699, 709, 710, 719, 724, 727, 729, 734, 737, 738, 740, 743, 744, 748, 749, 750, 752, 754, 759, 762, 763, 766, 767, 768, 772, 775, 777, 778, 853, 893, 903, 904, 966, 1112], "atom_symbol": 30, "australia": 30, "austria": [30, 131, 319], "auto_rickshaw": 30, "avocado": 30, "aw": 30, "ax": [30, 152, 951], "az": 30, "azerbaijan": 30, "ba": [30, 141], "babi": 30, "baby_bottl": 30, "baby_chick": 30, "baby_symbol": 30, "baby_tone1": 30, "baby_tone2": 30, "baby_tone3": 30, "baby_tone4": 30, "baby_tone5": 30, "back_of_hand": 30, "back_of_hand_tone1": 30, "back_of_hand_tone2": 30, "back_of_hand_tone3": 30, "back_of_hand_tone4": 30, "back_of_hand_tone5": 30, "bacon": 30, "badger": 30, "badminton": 30, "bagel": 30, "baggage_claim": 30, "baguette_bread": 30, "bahama": 30, "bahrain": 30, "balance_scal": 30, "bald": 30, "ballet_sho": 30, "balloon": 30, "ballot_box": 30, "ballot_box_with_ballot": 30, "ballot_box_with_check": 30, "bamboo": 30, "banana": 30, "bangbang": 30, "bangladesh": 30, "banjo": 30, "bank": [30, 410], "bar_chart": 30, "barbado": 30, "barber": 30, "basebal": 30, "basket": 30, "basketbal": 30, "basketball_man": 30, "basketball_play": 30, "basketball_player_tone1": 30, "basketball_player_tone2": 30, "basketball_player_tone3": 30, "basketball_player_tone4": 30, "basketball_player_tone5": 30, "basketball_woman": 30, "bat": [30, 1094], "bath": 30, "bath_tone1": 30, "bath_tone2": 30, "bath_tone3": 30, "bath_tone4": 30, "bath_tone5": 30, "bathtub": 30, "batteri": [30, 87, 163, 301, 854, 978, 979, 980, 1006, 1088], "bb": [30, 123, 134, 861], "bd": [30, 141], "beach": 30, "beach_umbrella": 30, "beach_with_umbrella": 30, "bear": [30, 902, 1081], "bearded_person": 30, "bearded_person_dark_skin_ton": 30, "bearded_person_light_skin_ton": 30, "bearded_person_medium_dark_skin_ton": 30, "bearded_person_medium_light_skin_ton": 30, "bearded_person_medium_skin_ton": 30, "bearded_person_tone1": 30, "bearded_person_tone2": 30, "bearded_person_tone3": 30, "bearded_person_tone4": 30, "bearded_person_tone5": 30, "beaver": 30, "bed": 30, "bee": 30, "beer": [30, 388], "beetl": 30, "belaru": 30, "belgium": 30, "beliz": 30, "bell": [30, 974, 977], "bell_pepp": 30, "bellhop": 30, "bellhop_bel": 30, "benin": 30, "bento": 30, "bermuda": 30, "beverage_box": 30, "bf": [30, 141], "bg": [30, 410], "bh": 30, "bhutan": 30, "bicyclist": 30, "bicyclist_tone1": 30, "bicyclist_tone2": 30, "bicyclist_tone3": 30, "bicyclist_tone4": 30, "bicyclist_tone5": 30, "bike": 30, "biking_man": 30, "biking_woman": 30, "bikini": 30, "billed_cap": 30, "biohazard": 30, "biohazard_sign": 30, "bird": 30, "birthdai": [30, 172, 616], "bison": [30, 142, 737, 861, 945], "bj": 30, "bl": 30, "black_cat": 30, "black_circl": 30, "black_flag": 30, "black_heart": 30, "black_jok": 30, "black_large_squar": 30, "black_medium_small_squar": 30, "black_medium_squar": 30, "black_nib": 30, "black_small_squar": 30, "black_square_button": 30, "blond": 30, "haired_man": 30, "haired_man_dark_skin_ton": 30, "haired_man_light_skin_ton": 30, "haired_man_medium_dark_skin_ton": 30, "haired_man_medium_light_skin_ton": 30, "haired_man_medium_skin_ton": 30, "haired_man_tone1": 30, "haired_man_tone2": 30, "haired_man_tone3": 30, "haired_man_tone4": 30, "haired_man_tone5": 30, "haired_woman": 30, "haired_woman_dark_skin_ton": 30, "haired_woman_light_skin_ton": 30, "haired_woman_medium_dark_skin_ton": 30, "haired_woman_medium_light_skin_ton": 30, "haired_woman_medium_skin_ton": 30, "haired_woman_tone1": 30, "haired_woman_tone2": 30, "haired_woman_tone3": 30, "haired_woman_tone4": 30, "haired_woman_tone5": 30, "blond_haired_person": 30, "blond_haired_person_tone1": 30, "blond_haired_person_tone2": 30, "blond_haired_person_tone3": 30, "blond_haired_person_tone4": 30, "blond_haired_person_tone5": 30, "blonde_man": 30, "blonde_woman": 30, "blossom": 30, "blowfish": 30, "blue_book": 30, "blue_car": 30, "blue_circl": 30, "blue_heart": 30, "blue_squar": 30, "blueberri": 30, "blush": 30, "bm": 30, "bn": 30, "bo": [30, 968], "boar": 30, "boat": 30, "bolivia": 30, "bomb": 30, "bone": 30, "bookmark": [30, 1070], "bookmark_tab": 30, "boom": [30, 654, 671], "boomerang": 30, "boot": [30, 121, 132, 134, 138, 150, 251, 404, 701, 730, 735, 753, 757, 767, 795, 861, 862, 863, 1107], "bosnia_herzegovina": 30, "botswana": 30, "bottle_with_popping_cork": 30, "bouquet": 30, "bouvet_island": 30, "bow": 30, "bow_and_arrow": 30, "bow_tone1": 30, "bow_tone2": 30, "bow_tone3": 30, "bow_tone4": 30, "bow_tone5": 30, "bowing_man": 30, "bowing_woman": 30, "bowl_with_spoon": 30, "bowl": 30, "boxing_glov": 30, "boi": 30, "boy_tone1": 30, "boy_tone2": 30, "boy_tone3": 30, "boy_tone4": 30, "boy_tone5": 30, "bq": 30, "br": [30, 229, 1063], "brain": [30, 57, 60], "brazil": 30, "bread": 30, "breast_feed": 30, "breast_feeding_dark_skin_ton": 30, "breast_feeding_light_skin_ton": 30, "breast_feeding_medium_dark_skin_ton": 30, "breast_feeding_medium_light_skin_ton": 30, "breast_feeding_medium_skin_ton": 30, "breast_feeding_tone1": 30, "breast_feeding_tone2": 30, "breast_feeding_tone3": 30, "breast_feeding_tone4": 30, "breast_feeding_tone5": 30, "brick": [30, 130, 143], "bride_with_veil": 30, "bride_with_veil_tone1": 30, "bride_with_veil_tone2": 30, "bride_with_veil_tone3": 30, "bride_with_veil_tone4": 30, "bride_with_veil_tone5": 30, "bridge_at_night": 30, "briefcas": 30, "brief": [30, 402, 817], "british_indian_ocean_territori": 30, "british_virgin_island": 30, "broccoli": 30, "broken_heart": 30, "broom": 30, "brown_circl": 30, "brown_heart": 30, "brown_squar": 30, "brunei": 30, "bt": 30, "bubble_tea": 30, "bucket": [30, 728], "bug": [30, 44, 53, 54, 105, 132, 133, 134, 174, 193, 209, 220, 310, 366, 368, 369, 384, 389, 391, 395, 408, 413, 418, 509, 511, 513, 521, 527, 528, 531, 536, 598, 601, 654, 664, 683, 700, 710, 747, 875, 906, 915, 916, 948, 968, 969, 983, 986], "building_construct": 30, "bulb": 30, "bulgaria": 30, "bullettrain_front": 30, "bullettrain_sid": 30, "burkina_faso": 30, "burrito": 30, "burundi": 30, "bu": [30, 79, 178, 203, 219, 226, 228, 229, 244, 247, 251, 261, 265, 426, 440, 455, 470, 481, 482, 710, 728, 753, 817, 853, 855, 860, 861, 862, 891, 897, 953, 1054, 1116, 1123, 1127, 1129], "business_suit_levit": 30, "busstop": 30, "bust_in_silhouett": 30, "busts_in_silhouett": 30, "butter": 30, "butterfli": 30, "bv": 30, "bw": 30, "bz": 30, "cactu": 30, "cake": 30, "calendar": 30, "calendar_spir": 30, "call_m": 30, "call_me_hand": 30, "call_me_hand_tone1": 30, "call_me_hand_tone2": 30, "call_me_hand_tone3": 30, "call_me_hand_tone4": 30, "call_me_hand_tone5": 30, "call_me_tone1": 30, "call_me_tone2": 30, "call_me_tone3": 30, "call_me_tone4": 30, "call_me_tone5": 30, "cambodia": 30, "camel": 30, "camera": [30, 136, 138, 862], "camera_flash": 30, "camera_with_flash": 30, "cameroon": 30, "camp": 30, "canada": 30, "canary_island": 30, "cancer": 30, "candl": 30, "candi": 30, "canned_food": 30, "cano": 30, "cape_verd": 30, "capital_abcd": 30, "capricorn": 30, "car": [30, 249, 410, 854], "card_box": 30, "card_file_box": 30, "card_index": 30, "card_index_divid": 30, "caribbean_netherland": 30, "carousel_hors": 30, "carpentry_saw": 30, "carrot": 30, "cartwheel": 30, "cartwheel_tone1": 30, "cartwheel_tone2": 30, "cartwheel_tone3": 30, "cartwheel_tone4": 30, "cartwheel_tone5": 30, "cat2": 30, "cat": [30, 133, 137, 171, 183, 237, 246, 247, 249, 267, 268, 286, 287, 386, 410, 481, 710, 715, 720, 737, 757, 773, 784, 785, 787, 788, 797, 799, 801, 829, 836, 844, 845, 847, 848, 850, 853, 854, 861, 862, 863, 864, 888, 890, 891, 895, 919, 925, 928, 1118], "cayman_island": 30, "cd": [30, 59, 117, 134, 135, 137, 138, 141, 142, 146, 159, 160, 193, 203, 223, 231, 236, 238, 287, 301, 306, 411, 478, 482, 546, 730, 732, 757, 758, 781, 783, 784, 785, 788, 794, 802, 807, 809, 817, 841, 854, 861, 862, 870, 883, 932, 933, 945, 946, 1010], "central_african_republ": 30, "ceuta_melilla": 30, "cf": [30, 783, 900], "cg": 30, "ch": 30, "chad": 30, "chain": [30, 124, 130, 141, 151, 213, 230, 388, 762, 910], "chair": [30, 163], "champagn": 30, "champagne_glass": 30, "chart": [30, 177, 192, 201, 214, 228, 231, 264, 270, 1055, 1062], "chart_with_downwards_trend": 30, "chart_with_upwards_trend": 30, "checkered_flag": 30, "chees": 30, "cheese_wedg": 30, "cherri": 30, "cherry_blossom": 30, "chess_pawn": 30, "chestnut": 30, "chicken": 30, "child": [30, 97, 148, 237, 246, 247, 267, 268, 708, 710, 787, 789, 791, 792, 803, 806, 807, 808, 809, 810, 811, 812, 821, 822, 823, 826, 828, 829, 853, 865, 866, 867, 868, 869, 894, 900, 907, 912, 929, 941, 942, 972, 1083], "child_dark_skin_ton": 30, "child_light_skin_ton": 30, "child_medium_dark_skin_ton": 30, "child_medium_light_skin_ton": 30, "child_medium_skin_ton": 30, "child_tone1": 30, "child_tone2": 30, "child_tone3": 30, "child_tone4": 30, "child_tone5": 30, "children_cross": 30, "chile": 30, "china": 30, "chipmunk": 30, "chocolate_bar": 30, "chopstick": 30, "christmas_island": 30, "christmas_tre": 30, "church": 30, "ci": [30, 1092], "cinema": 30, "circus_t": 30, "city_dusk": 30, "city_sunris": 30, "city_sunset": 30, "cityscap": 30, "ck": 30, "cl": [30, 219, 244, 971, 972], "clamp": 30, "clap": 30, "clap_tone1": 30, "clap_tone2": 30, "clap_tone3": 30, "clap_tone4": 30, "clap_tone5": 30, "clapper": 30, "classical_build": 30, "clinking_glass": 30, "clipboard": 30, "clipperton_island": 30, "clock1030": 30, "clock10": 30, "clock1130": 30, "clock11": 30, "clock1230": 30, "clock12": 30, "clock130": 30, "clock1": 30, "clock230": 30, "clock2": 30, "clock330": 30, "clock3": 30, "clock430": 30, "clock4": 30, "clock530": 30, "clock5": 30, "clock630": 30, "clock6": 30, "clock730": 30, "clock7": 30, "clock830": 30, "clock8": 30, "clock930": 30, "clock9": 30, "clock": [30, 206, 207, 397, 861], "closed_book": 30, "closed_lock_with_kei": 30, "closed_umbrella": 30, "cloud": [30, 99, 138, 183, 207, 300, 301, 304, 629, 631, 870, 1059, 1060, 1087], "cloud_lightn": 30, "cloud_rain": 30, "cloud_snow": 30, "cloud_tornado": 30, "cloud_with_lightn": 30, "cloud_with_lightning_and_rain": 30, "cloud_with_rain": 30, "cloud_with_snow": 30, "cloud_with_tornado": 30, "clown": 30, "clown_fac": 30, "club": [30, 36], "cm": 30, "cn": [30, 141], "coat": 30, "cockroach": 30, "cocktail": 30, "coconut": [30, 255], "cocos_island": 30, "coffe": [30, 134, 601, 861], "coffin": 30, "coin": 30, "cold_fac": 30, "cold_sweat": 30, "colombia": 30, "comet": 30, "comoro": 30, "compass": 30, "compress": [30, 132, 146, 237, 246, 247, 267, 710, 781, 787, 853, 941, 942, 943, 946], "computer_mous": 30, "confetti_bal": 30, "confound": 30, "confus": [30, 131, 135, 163, 192, 343, 351, 397, 544, 554, 630, 641, 997, 1084], "congo": 30, "congo_brazzavil": 30, "congo_kinshasa": 30, "congratul": 30, "construct": [30, 163, 169, 250, 253, 346, 359, 369, 398, 408, 512, 563, 582, 583, 639, 687, 969, 976, 993, 1004], "construction_sit": 30, "construction_work": 30, "construction_worker_man": 30, "construction_worker_tone1": 30, "construction_worker_tone2": 30, "construction_worker_tone3": 30, "construction_worker_tone4": 30, "construction_worker_tone5": 30, "construction_worker_woman": 30, "control_knob": 30, "convenience_stor": 30, "cook": [30, 247], "cook_dark_skin_ton": 30, "cook_island": 30, "cook_light_skin_ton": 30, "cook_medium_dark_skin_ton": 30, "cook_medium_light_skin_ton": 30, "cook_medium_skin_ton": 30, "cook_tone1": 30, "cook_tone2": 30, "cook_tone3": 30, "cook_tone4": 30, "cook_tone5": 30, "cooki": [30, 739, 753], "cool": [30, 63, 117, 132, 133, 136, 138, 146, 151, 152, 163, 164, 167, 182, 247, 260, 279, 319, 404, 410, 438, 447, 584, 626, 627, 643, 646, 665, 675, 678, 700, 757, 813, 863, 948, 952, 955, 972, 991, 1005, 1055, 1062, 1070, 1112], "cop": 30, "cop_tone1": 30, "cop_tone2": 30, "cop_tone3": 30, "cop_tone4": 30, "cop_tone5": 30, "copyright": [30, 34, 142, 183, 200, 206, 216, 219, 244, 294, 298, 536, 685, 981], "corn": 30, "costa_rica": 30, "cote_divoir": 30, "couch": 30, "couch_and_lamp": 30, "coupl": [30, 41, 130, 131, 132, 133, 138, 151, 163, 167, 322, 359, 393, 398, 674, 850, 885, 904], "couple_mm": 30, "couple_with_heart": 30, "couple_with_heart_dark_skin_ton": 30, "couple_with_heart_light_skin_ton": 30, "couple_with_heart_man_man": 30, "couple_with_heart_man_man_dark_skin_ton": 30, "couple_with_heart_man_man_dark_skin_tone_light_skin_ton": 30, "couple_with_heart_man_man_dark_skin_tone_medium_dark_skin_ton": 30, "couple_with_heart_man_man_dark_skin_tone_medium_light_skin_ton": 30, "couple_with_heart_man_man_dark_skin_tone_medium_skin_ton": 30, "couple_with_heart_man_man_light_skin_ton": 30, "couple_with_heart_man_man_light_skin_tone_dark_skin_ton": 30, "couple_with_heart_man_man_light_skin_tone_medium_dark_skin_ton": 30, "couple_with_heart_man_man_light_skin_tone_medium_light_skin_ton": 30, "couple_with_heart_man_man_light_skin_tone_medium_skin_ton": 30, "couple_with_heart_man_man_medium_dark_skin_ton": 30, "couple_with_heart_man_man_medium_dark_skin_tone_dark_skin_ton": 30, "couple_with_heart_man_man_medium_dark_skin_tone_light_skin_ton": 30, "couple_with_heart_man_man_medium_dark_skin_tone_medium_light_skin_ton": 30, "couple_with_heart_man_man_medium_dark_skin_tone_medium_skin_ton": 30, "couple_with_heart_man_man_medium_light_skin_ton": 30, "couple_with_heart_man_man_medium_light_skin_tone_dark_skin_ton": 30, "couple_with_heart_man_man_medium_light_skin_tone_light_skin_ton": 30, "couple_with_heart_man_man_medium_light_skin_tone_medium_dark_skin_ton": 30, "couple_with_heart_man_man_medium_light_skin_tone_medium_skin_ton": 30, "couple_with_heart_man_man_medium_skin_ton": 30, "couple_with_heart_man_man_medium_skin_tone_dark_skin_ton": 30, "couple_with_heart_man_man_medium_skin_tone_light_skin_ton": 30, "couple_with_heart_man_man_medium_skin_tone_medium_dark_skin_ton": 30, "couple_with_heart_man_man_medium_skin_tone_medium_light_skin_ton": 30, "couple_with_heart_man_man_tone1": 30, "couple_with_heart_man_man_tone1_tone2": 30, "couple_with_heart_man_man_tone1_tone3": 30, "couple_with_heart_man_man_tone1_tone4": 30, "couple_with_heart_man_man_tone1_tone5": 30, "couple_with_heart_man_man_tone2": 30, "couple_with_heart_man_man_tone2_tone1": 30, "couple_with_heart_man_man_tone2_tone3": 30, "couple_with_heart_man_man_tone2_tone4": 30, "couple_with_heart_man_man_tone2_tone5": 30, "couple_with_heart_man_man_tone3": 30, "couple_with_heart_man_man_tone3_tone1": 30, "couple_with_heart_man_man_tone3_tone2": 30, "couple_with_heart_man_man_tone3_tone4": 30, "couple_with_heart_man_man_tone3_tone5": 30, "couple_with_heart_man_man_tone4": 30, "couple_with_heart_man_man_tone4_tone1": 30, "couple_with_heart_man_man_tone4_tone2": 30, "couple_with_heart_man_man_tone4_tone3": 30, "couple_with_heart_man_man_tone4_tone5": 30, "couple_with_heart_man_man_tone5": 30, "couple_with_heart_man_man_tone5_tone1": 30, "couple_with_heart_man_man_tone5_tone2": 30, "couple_with_heart_man_man_tone5_tone3": 30, "couple_with_heart_man_man_tone5_tone4": 30, "couple_with_heart_medium_dark_skin_ton": 30, "couple_with_heart_medium_light_skin_ton": 30, "couple_with_heart_medium_skin_ton": 30, "couple_with_heart_mm": 30, "couple_with_heart_person_person_dark_skin_tone_light_skin_ton": 30, "couple_with_heart_person_person_dark_skin_tone_medium_dark_skin_ton": 30, "couple_with_heart_person_person_dark_skin_tone_medium_light_skin_ton": 30, "couple_with_heart_person_person_dark_skin_tone_medium_skin_ton": 30, "couple_with_heart_person_person_light_skin_tone_dark_skin_ton": 30, "couple_with_heart_person_person_light_skin_tone_medium_dark_skin_ton": 30, "couple_with_heart_person_person_light_skin_tone_medium_light_skin_ton": 30, "couple_with_heart_person_person_light_skin_tone_medium_skin_ton": 30, "couple_with_heart_person_person_medium_dark_skin_tone_dark_skin_ton": 30, "couple_with_heart_person_person_medium_dark_skin_tone_light_skin_ton": 30, "couple_with_heart_person_person_medium_dark_skin_tone_medium_light_skin_ton": 30, "couple_with_heart_person_person_medium_dark_skin_tone_medium_skin_ton": 30, "couple_with_heart_person_person_medium_light_skin_tone_dark_skin_ton": 30, "couple_with_heart_person_person_medium_light_skin_tone_light_skin_ton": 30, "couple_with_heart_person_person_medium_light_skin_tone_medium_dark_skin_ton": 30, "couple_with_heart_person_person_medium_light_skin_tone_medium_skin_ton": 30, "couple_with_heart_person_person_medium_skin_tone_dark_skin_ton": 30, "couple_with_heart_person_person_medium_skin_tone_light_skin_ton": 30, "couple_with_heart_person_person_medium_skin_tone_medium_dark_skin_ton": 30, "couple_with_heart_person_person_medium_skin_tone_medium_light_skin_ton": 30, "couple_with_heart_person_person_tone1_tone2": 30, "couple_with_heart_person_person_tone1_tone3": 30, "couple_with_heart_person_person_tone1_tone4": 30, "couple_with_heart_person_person_tone1_tone5": 30, "couple_with_heart_person_person_tone2_tone1": 30, "couple_with_heart_person_person_tone2_tone3": 30, "couple_with_heart_person_person_tone2_tone4": 30, "couple_with_heart_person_person_tone2_tone5": 30, "couple_with_heart_person_person_tone3_tone1": 30, "couple_with_heart_person_person_tone3_tone2": 30, "couple_with_heart_person_person_tone3_tone4": 30, "couple_with_heart_person_person_tone3_tone5": 30, "couple_with_heart_person_person_tone4_tone1": 30, "couple_with_heart_person_person_tone4_tone2": 30, "couple_with_heart_person_person_tone4_tone3": 30, "couple_with_heart_person_person_tone4_tone5": 30, "couple_with_heart_person_person_tone5_tone1": 30, "couple_with_heart_person_person_tone5_tone2": 30, "couple_with_heart_person_person_tone5_tone3": 30, "couple_with_heart_person_person_tone5_tone4": 30, "couple_with_heart_tone1": 30, "couple_with_heart_tone2": 30, "couple_with_heart_tone3": 30, "couple_with_heart_tone4": 30, "couple_with_heart_tone5": 30, "couple_with_heart_woman_man": 30, "couple_with_heart_woman_man_dark_skin_ton": 30, "couple_with_heart_woman_man_dark_skin_tone_light_skin_ton": 30, "couple_with_heart_woman_man_dark_skin_tone_medium_dark_skin_ton": 30, "couple_with_heart_woman_man_dark_skin_tone_medium_light_skin_ton": 30, "couple_with_heart_woman_man_dark_skin_tone_medium_skin_ton": 30, "couple_with_heart_woman_man_light_skin_ton": 30, "couple_with_heart_woman_man_light_skin_tone_dark_skin_ton": 30, "couple_with_heart_woman_man_light_skin_tone_medium_dark_skin_ton": 30, "couple_with_heart_woman_man_light_skin_tone_medium_light_skin_ton": 30, "couple_with_heart_woman_man_light_skin_tone_medium_skin_ton": 30, "couple_with_heart_woman_man_medium_dark_skin_ton": 30, "couple_with_heart_woman_man_medium_dark_skin_tone_dark_skin_ton": 30, "couple_with_heart_woman_man_medium_dark_skin_tone_light_skin_ton": 30, "couple_with_heart_woman_man_medium_dark_skin_tone_medium_light_skin_ton": 30, "couple_with_heart_woman_man_medium_dark_skin_tone_medium_skin_ton": 30, "couple_with_heart_woman_man_medium_light_skin_ton": 30, "couple_with_heart_woman_man_medium_light_skin_tone_dark_skin_ton": 30, "couple_with_heart_woman_man_medium_light_skin_tone_light_skin_ton": 30, "couple_with_heart_woman_man_medium_light_skin_tone_medium_dark_skin_ton": 30, "couple_with_heart_woman_man_medium_light_skin_tone_medium_skin_ton": 30, "couple_with_heart_woman_man_medium_skin_ton": 30, "couple_with_heart_woman_man_medium_skin_tone_dark_skin_ton": 30, "couple_with_heart_woman_man_medium_skin_tone_light_skin_ton": 30, "couple_with_heart_woman_man_medium_skin_tone_medium_dark_skin_ton": 30, "couple_with_heart_woman_man_medium_skin_tone_medium_light_skin_ton": 30, "couple_with_heart_woman_man_tone1": 30, "couple_with_heart_woman_man_tone1_tone2": 30, "couple_with_heart_woman_man_tone1_tone3": 30, "couple_with_heart_woman_man_tone1_tone4": 30, "couple_with_heart_woman_man_tone1_tone5": 30, "couple_with_heart_woman_man_tone2": 30, "couple_with_heart_woman_man_tone2_tone1": 30, "couple_with_heart_woman_man_tone2_tone3": 30, "couple_with_heart_woman_man_tone2_tone4": 30, "couple_with_heart_woman_man_tone2_tone5": 30, "couple_with_heart_woman_man_tone3": 30, "couple_with_heart_woman_man_tone3_tone1": 30, "couple_with_heart_woman_man_tone3_tone2": 30, "couple_with_heart_woman_man_tone3_tone4": 30, "couple_with_heart_woman_man_tone3_tone5": 30, "couple_with_heart_woman_man_tone4": 30, "couple_with_heart_woman_man_tone4_tone1": 30, "couple_with_heart_woman_man_tone4_tone2": 30, "couple_with_heart_woman_man_tone4_tone3": 30, "couple_with_heart_woman_man_tone4_tone5": 30, "couple_with_heart_woman_man_tone5": 30, "couple_with_heart_woman_man_tone5_tone1": 30, "couple_with_heart_woman_man_tone5_tone2": 30, "couple_with_heart_woman_man_tone5_tone3": 30, "couple_with_heart_woman_man_tone5_tone4": 30, "couple_with_heart_woman_woman": 30, "couple_with_heart_woman_woman_dark_skin_ton": 30, "couple_with_heart_woman_woman_dark_skin_tone_light_skin_ton": 30, "couple_with_heart_woman_woman_dark_skin_tone_medium_dark_skin_ton": 30, "couple_with_heart_woman_woman_dark_skin_tone_medium_light_skin_ton": 30, "couple_with_heart_woman_woman_dark_skin_tone_medium_skin_ton": 30, "couple_with_heart_woman_woman_light_skin_ton": 30, "couple_with_heart_woman_woman_light_skin_tone_dark_skin_ton": 30, "couple_with_heart_woman_woman_light_skin_tone_medium_dark_skin_ton": 30, "couple_with_heart_woman_woman_light_skin_tone_medium_light_skin_ton": 30, "couple_with_heart_woman_woman_light_skin_tone_medium_skin_ton": 30, "couple_with_heart_woman_woman_medium_dark_skin_ton": 30, "couple_with_heart_woman_woman_medium_dark_skin_tone_dark_skin_ton": 30, "couple_with_heart_woman_woman_medium_dark_skin_tone_light_skin_ton": 30, "couple_with_heart_woman_woman_medium_dark_skin_tone_medium_light_skin_ton": 30, "couple_with_heart_woman_woman_medium_dark_skin_tone_medium_skin_ton": 30, "couple_with_heart_woman_woman_medium_light_skin_ton": 30, "couple_with_heart_woman_woman_medium_light_skin_tone_dark_skin_ton": 30, "couple_with_heart_woman_woman_medium_light_skin_tone_light_skin_ton": 30, "couple_with_heart_woman_woman_medium_light_skin_tone_medium_dark_skin_ton": 30, "couple_with_heart_woman_woman_medium_light_skin_tone_medium_skin_ton": 30, "couple_with_heart_woman_woman_medium_skin_ton": 30, "couple_with_heart_woman_woman_medium_skin_tone_dark_skin_ton": 30, "couple_with_heart_woman_woman_medium_skin_tone_light_skin_ton": 30, "couple_with_heart_woman_woman_medium_skin_tone_medium_dark_skin_ton": 30, "couple_with_heart_woman_woman_medium_skin_tone_medium_light_skin_ton": 30, "couple_with_heart_woman_woman_tone1": 30, "couple_with_heart_woman_woman_tone1_tone2": 30, "couple_with_heart_woman_woman_tone1_tone3": 30, "couple_with_heart_woman_woman_tone1_tone4": 30, "couple_with_heart_woman_woman_tone1_tone5": 30, "couple_with_heart_woman_woman_tone2": 30, "couple_with_heart_woman_woman_tone2_tone1": 30, "couple_with_heart_woman_woman_tone2_tone3": 30, "couple_with_heart_woman_woman_tone2_tone4": 30, "couple_with_heart_woman_woman_tone2_tone5": 30, "couple_with_heart_woman_woman_tone3": 30, "couple_with_heart_woman_woman_tone3_tone1": 30, "couple_with_heart_woman_woman_tone3_tone2": 30, "couple_with_heart_woman_woman_tone3_tone4": 30, "couple_with_heart_woman_woman_tone3_tone5": 30, "couple_with_heart_woman_woman_tone4": 30, "couple_with_heart_woman_woman_tone4_tone1": 30, "couple_with_heart_woman_woman_tone4_tone2": 30, "couple_with_heart_woman_woman_tone4_tone3": 30, "couple_with_heart_woman_woman_tone4_tone5": 30, "couple_with_heart_woman_woman_tone5": 30, "couple_with_heart_woman_woman_tone5_tone1": 30, "couple_with_heart_woman_woman_tone5_tone2": 30, "couple_with_heart_woman_woman_tone5_tone3": 30, "couple_with_heart_woman_woman_tone5_tone4": 30, "couple_with_heart_ww": 30, "couple_ww": 30, "couplekiss": 30, "couplekiss_man_man": 30, "couplekiss_man_woman": 30, "couplekiss_mm": 30, "couplekiss_woman_woman": 30, "couplekiss_ww": 30, "cow2": 30, "cow": 30, "cowboi": 30, "cowboy_hat_fac": 30, "cp": [30, 97, 111, 132, 134, 137, 171, 173, 237, 246, 247, 267, 268, 301, 306, 710, 757, 784, 785, 786, 787, 788, 817, 821, 822, 824, 825, 828, 829, 831, 837, 853, 861, 873, 884, 945, 1118], "cr": [30, 1005], "crab": 30, "crayon": 30, "credit_card": 30, "crescent_moon": 30, "cricket": 30, "cricket_bat_bal": 30, "cricket_gam": 30, "croatia": 30, "crocodil": 30, "croissant": 30, "cross": [30, 36, 63, 101, 102, 104, 130, 143, 167, 261, 273, 274, 302, 303, 304, 432, 446, 469, 475, 476, 479, 480, 481, 482, 483, 484, 485, 503, 526, 699, 709, 710, 787, 790, 791, 853, 876, 882, 884, 891, 892, 894, 908, 911, 914, 916, 933, 937, 938, 939, 940, 942, 945, 1114], "crossed_fing": 30, "crossed_flag": 30, "crossed_sword": 30, "crown": 30, "cruise_ship": 30, "cry": [30, 131], "crying_cat_fac": 30, "crystal_bal": 30, "cu": 30, "cuba": 30, "cucumb": 30, "cup_with_straw": 30, "cupcak": 30, "cupid": 30, "curacao": 30, "curling_ston": 30, "curly_hair": 30, "curly_loop": 30, "currency_exchang": 30, "curri": [30, 192], "custard": 30, "cut_of_meat": 30, "cw": 30, "cx": 30, "cy": 30, "cyclon": 30, "cypru": 30, "cz": 30, "czech_republ": 30, "dagger": [30, 36], "dagger_knif": 30, "dancer": 30, "dancer_tone1": 30, "dancer_tone2": 30, "dancer_tone3": 30, "dancer_tone4": 30, "dancer_tone5": 30, "dancing_men": 30, "dancing_women": 30, "dango": 30, "dark_sunglass": 30, "dart": 30, "dash": [30, 32, 33, 36, 570], "date": [30, 128, 134, 142, 146, 163, 169, 199, 231, 247, 249, 314, 315, 410, 758, 950, 1044, 1046, 1050, 1052, 1059, 1067], "deaf_man": 30, "deaf_man_dark_skin_ton": 30, "deaf_man_light_skin_ton": 30, "deaf_man_medium_dark_skin_ton": 30, "deaf_man_medium_light_skin_ton": 30, "deaf_man_medium_skin_ton": 30, "deaf_man_tone1": 30, "deaf_man_tone2": 30, "deaf_man_tone3": 30, "deaf_man_tone4": 30, "deaf_man_tone5": 30, "deaf_person": 30, "deaf_person_dark_skin_ton": 30, "deaf_person_light_skin_ton": 30, "deaf_person_medium_dark_skin_ton": 30, "deaf_person_medium_light_skin_ton": 30, "deaf_person_medium_skin_ton": 30, "deaf_person_tone1": 30, "deaf_person_tone2": 30, "deaf_person_tone3": 30, "deaf_person_tone4": 30, "deaf_person_tone5": 30, "deaf_woman": 30, "deaf_woman_dark_skin_ton": 30, "deaf_woman_light_skin_ton": 30, "deaf_woman_medium_dark_skin_ton": 30, "deaf_woman_medium_light_skin_ton": 30, "deaf_woman_medium_skin_ton": 30, "deaf_woman_tone1": 30, "deaf_woman_tone2": 30, "deaf_woman_tone3": 30, "deaf_woman_tone4": 30, "deaf_woman_tone5": 30, "deciduous_tre": 30, "deer": 30, "denmark": 30, "department_stor": 30, "derelict_hous": 30, "derelict_house_build": 30, "desert": 30, "desert_island": 30, "desktop": [30, 119, 131, 136, 192, 261, 839, 916, 1116, 1123], "desktop_comput": 30, "detective_tone1": 30, "detective_tone2": 30, "detective_tone3": 30, "detective_tone4": 30, "detective_tone5": 30, "dg": 30, "diamond_shape_with_a_dot_insid": 30, "diamond": [30, 32, 36, 191, 204, 1085], "diego_garcia": 30, "digit_eight": 30, "digit_f": 30, "digit_four": 30, "digit_nin": 30, "digit_on": 30, "digit_seven": 30, "digit_six": 30, "digit_thre": 30, "digit_two": 30, "digit_zero": 30, "disappoint": 30, "disappointed_reliev": 30, "disguised_fac": 30, "divid": [30, 33, 34, 36, 223, 1062], "diving_mask": 30, "diya_lamp": 30, "dizzi": 30, "dizzy_fac": 30, "dj": 30, "djibouti": 30, "dk": 30, "dm": 30, "dna": 30, "do_not_litt": 30, "dodo": 30, "dog2": 30, "dog": [30, 386], "dollar": [30, 34], "doll": 30, "dolphin": 30, "dominica": 30, "dominican_republ": 30, "door": [30, 209, 504, 747, 965], "double_vertical_bar": 30, "doughnut": 30, "dove": 30, "dove_of_peac": 30, "dragon": [30, 95, 193, 209, 256, 258, 504, 528, 529, 534, 623, 635, 637, 666, 671, 682, 686, 691, 699, 707, 709, 710, 928], "dragon_fac": 30, "dress": [30, 128], "dromedary_camel": 30, "drool": 30, "drooling_fac": 30, "drop_of_blood": 30, "droplet": 30, "drum": 30, "drum_with_drumstick": 30, "dumpl": 30, "dvd": 30, "dz": 30, "mail": [30, 128, 203, 219, 226, 229, 244, 251, 261, 265, 848, 1071, 1106], "ea": [30, 141], "eagl": [30, 203, 1012], "ear": 30, "ear_of_ric": 30, "ear_tone1": 30, "ear_tone2": 30, "ear_tone3": 30, "ear_tone4": 30, "ear_tone5": 30, "ear_with_hearing_aid": 30, "ear_with_hearing_aid_dark_skin_ton": 30, "ear_with_hearing_aid_light_skin_ton": 30, "ear_with_hearing_aid_medium_dark_skin_ton": 30, "ear_with_hearing_aid_medium_light_skin_ton": 30, "ear_with_hearing_aid_medium_skin_ton": 30, "ear_with_hearing_aid_tone1": 30, "ear_with_hearing_aid_tone2": 30, "ear_with_hearing_aid_tone3": 30, "ear_with_hearing_aid_tone4": 30, "ear_with_hearing_aid_tone5": 30, "earth_africa": 30, "earth_america": 30, "earth_asia": 30, "ec": [30, 95, 141, 183, 298, 301, 306, 309, 318, 710, 786, 787, 817, 853], "ecuador": 30, "ee": [30, 141], "eg": [30, 33], "egg": [30, 59, 999], "eggplant": 30, "egypt": 30, "eight": [30, 133, 151, 164, 174, 182, 211, 213, 301, 863, 1071], "eight_pointed_black_star": 30, "eight_spoked_asterisk": 30, "eject": 30, "eject_symbol": 30, "el_salvador": 30, "electric_plug": 30, "eleph": 30, "elev": 30, "elf": [30, 139, 142, 174, 190, 200, 416, 512, 900, 931, 932, 948, 982, 1126], "elf_dark_skin_ton": 30, "elf_light_skin_ton": 30, "elf_medium_dark_skin_ton": 30, "elf_medium_light_skin_ton": 30, "elf_medium_skin_ton": 30, "elf_tone1": 30, "elf_tone2": 30, "elf_tone3": 30, "elf_tone4": 30, "elf_tone5": 30, "england": 30, "envelop": [30, 757], "envelope_with_arrow": 30, "equatorial_guinea": 30, "er": [30, 140, 149, 164, 166, 174, 211, 1107, 1108, 1109], "eritrea": 30, "estonia": 30, "et": [30, 95, 536, 685, 877, 932, 933, 974], "ethiopia": 30, "euro": [30, 452, 453, 454, 466, 467, 468], "european_castl": 30, "european_post_offic": 30, "european_union": 30, "evergreen_tre": 30, "exclam": [30, 34], "expecting_woman": 30, "expecting_woman_tone1": 30, "expecting_woman_tone2": 30, "expecting_woman_tone3": 30, "expecting_woman_tone4": 30, "expecting_woman_tone5": 30, "exploding_head": 30, "expressionless": 30, "eye_in_speech_bubbl": 30, "eye_speech_bubbl": 30, "eyeglass": 30, "face_exh": 30, "face_in_cloud": 30, "face_palm": 30, "face_palm_tone1": 30, "face_palm_tone2": 30, "face_palm_tone3": 30, "face_palm_tone4": 30, "face_palm_tone5": 30, "face_vomit": 30, "face_with_cowboy_hat": 30, "face_with_hand_over_mouth": 30, "face_with_head_bandag": 30, "face_with_monocl": 30, "face_with_rolling_ey": 30, "face_with_spiral_ey": 30, "face_with_symbols_over_mouth": 30, "face_with_thermomet": 30, "facepalm": 30, "facepalm_tone1": 30, "facepalm_tone2": 30, "facepalm_tone3": 30, "facepalm_tone4": 30, "facepalm_tone5": 30, "factori": [30, 104, 191, 204, 239, 258, 310, 425, 432, 446, 460, 475, 526, 710, 883, 1085, 1115], "factory_work": 30, "factory_worker_dark_skin_ton": 30, "factory_worker_light_skin_ton": 30, "factory_worker_medium_dark_skin_ton": 30, "factory_worker_medium_light_skin_ton": 30, "factory_worker_medium_skin_ton": 30, "factory_worker_tone1": 30, "factory_worker_tone2": 30, "factory_worker_tone3": 30, "factory_worker_tone4": 30, "factory_worker_tone5": 30, "fairi": 30, "fairy_dark_skin_ton": 30, "fairy_light_skin_ton": 30, "fairy_medium_dark_skin_ton": 30, "fairy_medium_light_skin_ton": 30, "fairy_medium_skin_ton": 30, "fairy_tone1": 30, "fairy_tone2": 30, "fairy_tone3": 30, "fairy_tone4": 30, "fairy_tone5": 30, "falafel": 30, "falkland_island": 30, "fallen_leaf": 30, "famili": [30, 155, 857, 863], "family_man_boi": 30, "family_man_boy_boi": 30, "family_man_girl": 30, "family_man_girl_boi": 30, "family_man_girl_girl": 30, "family_man_man_boi": 30, "family_man_man_boy_boi": 30, "family_man_man_girl": 30, "family_man_man_girl_boi": 30, "family_man_man_girl_girl": 30, "family_man_woman_boi": 30, "family_man_woman_boy_boi": 30, "family_man_woman_girl": 30, "family_man_woman_girl_boi": 30, "family_man_woman_girl_girl": 30, "family_mmb": 30, "family_mmbb": 30, "family_mmg": 30, "family_mmgb": 30, "family_mmgg": 30, "family_mwbb": 30, "family_mwg": 30, "family_mwgb": 30, "family_mwgg": 30, "family_woman_boi": 30, "family_woman_boy_boi": 30, "family_woman_girl": 30, "family_woman_girl_boi": 30, "family_woman_girl_girl": 30, "family_woman_woman_boi": 30, "family_woman_woman_boy_boi": 30, "family_woman_woman_girl": 30, "family_woman_woman_girl_boi": 30, "family_woman_woman_girl_girl": 30, "family_wwb": 30, "family_wwbb": 30, "family_wwg": 30, "family_wwgb": 30, "family_wwgg": 30, "farmer": 30, "farmer_dark_skin_ton": 30, "farmer_light_skin_ton": 30, "farmer_medium_dark_skin_ton": 30, "farmer_medium_light_skin_ton": 30, "farmer_medium_skin_ton": 30, "farmer_tone1": 30, "farmer_tone2": 30, "farmer_tone3": 30, "farmer_tone4": 30, "farmer_tone5": 30, "faroe_island": 30, "fast_forward": 30, "fax": 30, "fear": [30, 249, 891], "feather": 30, "feet": 30, "female_detect": 30, "female_sign": 30, "fencer": 30, "fenc": 30, "ferris_wheel": 30, "ferri": 30, "fi": [30, 887, 895, 910], "field_hockei": 30, "fiji": 30, "file_cabinet": 30, "file_fold": 30, "film_fram": 30, "film_projector": 30, "film_strip": 30, "fingers_cross": 30, "fingers_crossed_tone1": 30, "fingers_crossed_tone2": 30, "fingers_crossed_tone3": 30, "fingers_crossed_tone4": 30, "fingers_crossed_tone5": 30, "finland": 30, "fire": [30, 41, 61, 388], "fire_engin": 30, "fire_extinguish": 30, "firecrack": 30, "firefight": 30, "firefighter_dark_skin_ton": 30, "firefighter_light_skin_ton": 30, "firefighter_medium_dark_skin_ton": 30, "firefighter_medium_light_skin_ton": 30, "firefighter_medium_skin_ton": 30, "firefighter_tone1": 30, "firefighter_tone2": 30, "firefighter_tone3": 30, "firefighter_tone4": 30, "firefighter_tone5": 30, "firework": 30, "first_plac": 30, "first_place_med": 30, "first_quarter_moon": 30, "first_quarter_moon_with_fac": 30, "fish": [30, 32, 1094], "fish_cak": 30, "fishing_pole_and_fish": 30, "fist": 30, "fist_left": 30, "fist_oncom": 30, "fist_rais": 30, "fist_right": 30, "fist_tone1": 30, "fist_tone2": 30, "fist_tone3": 30, "fist_tone4": 30, "fist_tone5": 30, "five": [30, 34, 61, 131, 151, 164, 174, 182, 203, 213, 219, 229, 244, 265, 282, 301, 319, 1012, 1054], "fj": 30, "fk": 30, "flag_ac": 30, "flag_ad": 30, "flag_a": 30, "flag_af": 30, "flag_ag": 30, "flag_ai": 30, "flag_al": 30, "flag_am": 30, "flag_ao": 30, "flag_aq": 30, "flag_ar": 30, "flag_at": 30, "flag_au": 30, "flag_aw": 30, "flag_ax": 30, "flag_az": 30, "flag_ba": 30, "flag_bb": 30, "flag_bd": 30, "flag_b": 30, "flag_bf": 30, "flag_bg": 30, "flag_bh": 30, "flag_bi": 30, "flag_bj": 30, "flag_bl": 30, "flag_black": 30, "flag_bm": 30, "flag_bn": 30, "flag_bo": 30, "flag_bq": 30, "flag_br": 30, "flag_bt": 30, "flag_bv": 30, "flag_bw": 30, "flag_bz": 30, "flag_ca": 30, "flag_cc": 30, "flag_cd": 30, "flag_cf": 30, "flag_cg": 30, "flag_ch": 30, "flag_ci": 30, "flag_ck": 30, "flag_cl": 30, "flag_cm": 30, "flag_cn": 30, "flag_co": 30, "flag_cp": 30, "flag_cr": 30, "flag_cu": 30, "flag_cv": 30, "flag_cw": 30, "flag_cx": 30, "flag_cz": 30, "flag_d": 30, "flag_dg": 30, "flag_dj": 30, "flag_dk": 30, "flag_dm": 30, "flag_do": 30, "flag_dz": 30, "flag_ea": 30, "flag_ec": 30, "flag_e": 30, "flag_eg": 30, "flag_eh": 30, "flag_er": 30, "flag_": 30, "flag_et": 30, "flag_eu": 30, "flag_fi": 30, "flag_fj": 30, "flag_fk": 30, "flag_fm": 30, "flag_fo": 30, "flag_fr": 30, "flag_ga": 30, "flag_gb": 30, "flag_gd": 30, "flag_g": 30, "flag_gf": 30, "flag_gg": 30, "flag_gh": 30, "flag_gi": 30, "flag_gl": 30, "flag_gm": 30, "flag_gn": 30, "flag_gp": 30, "flag_gq": 30, "flag_gr": 30, "flag_gt": 30, "flag_gu": 30, "flag_gw": 30, "flag_hk": 30, "flag_hm": 30, "flag_hn": 30, "flag_hr": 30, "flag_ht": 30, "flag_hu": 30, "flag_ic": 30, "flag_id": 30, "flag_i": 30, "flag_il": 30, "flag_im": 30, "flag_in": 30, "flag_io": 30, "flag_iq": 30, "flag_ir": 30, "flag_it": 30, "flag_j": 30, "flag_jm": 30, "flag_jo": 30, "flag_jp": 30, "flag_k": 30, "flag_kg": 30, "flag_kh": 30, "flag_ki": 30, "flag_km": 30, "flag_kn": 30, "flag_kp": 30, "flag_kr": 30, "flag_kw": 30, "flag_kz": 30, "flag_la": 30, "flag_lb": 30, "flag_lc": 30, "flag_li": 30, "flag_lk": 30, "flag_lr": 30, "flag_l": 30, "flag_lt": 30, "flag_lu": 30, "flag_lv": 30, "flag_ma": 30, "flag_mc": 30, "flag_md": 30, "flag_m": 30, "flag_mf": 30, "flag_mg": 30, "flag_mh": 30, "flag_mk": 30, "flag_ml": 30, "flag_mm": 30, "flag_mn": 30, "flag_mo": 30, "flag_mp": 30, "flag_mq": 30, "flag_mr": 30, "flag_mt": 30, "flag_mu": 30, "flag_mv": 30, "flag_mw": 30, "flag_mx": 30, "flag_mi": 30, "flag_mz": 30, "flag_na": 30, "flag_nc": 30, "flag_n": 30, "flag_nf": 30, "flag_ng": 30, "flag_ni": 30, "flag_nl": 30, "flag_no": 30, "flag_np": 30, "flag_nr": 30, "flag_nu": 30, "flag_nz": 30, "flag_om": 30, "flag_pa": 30, "flag_p": 30, "flag_pf": 30, "flag_pg": 30, "flag_ph": 30, "flag_pk": 30, "flag_pl": 30, "flag_pm": 30, "flag_pn": 30, "flag_pr": 30, "flag_pt": 30, "flag_pw": 30, "flag_pi": 30, "flag_qa": 30, "flag_r": 30, "flag_ro": 30, "flag_ru": 30, "flag_rw": 30, "flag_sa": 30, "flag_sb": 30, "flag_sc": 30, "flag_sd": 30, "flag_s": 30, "flag_sg": 30, "flag_sh": 30, "flag_si": 30, "flag_sj": 30, "flag_sk": 30, "flag_sl": 30, "flag_sm": 30, "flag_sn": 30, "flag_so": 30, "flag_sr": 30, "flag_ss": 30, "flag_st": 30, "flag_sv": 30, "flag_sx": 30, "flag_sz": 30, "flag_ta": 30, "flag_tc": 30, "flag_td": 30, "flag_tf": 30, "flag_tg": 30, "flag_th": 30, "flag_tj": 30, "flag_tk": 30, "flag_tl": 30, "flag_tm": 30, "flag_tn": 30, "flag_to": 30, "flag_tr": 30, "flag_tt": 30, "flag_tv": 30, "flag_tw": 30, "flag_tz": 30, "flag_ua": 30, "flag_ug": 30, "flag_um": 30, "flag_u": 30, "flag_ui": 30, "flag_uz": 30, "flag_va": 30, "flag_vc": 30, "flag_v": 30, "flag_vg": 30, "flag_vi": 30, "flag_vn": 30, "flag_vu": 30, "flag_wf": 30, "flag_whit": 30, "flag_w": 30, "flag_xk": 30, "flag_y": 30, "flag_yt": 30, "flag_za": 30, "flag_zm": 30, "flag_zw": 30, "flag": [30, 46, 131, 133, 148, 159, 170, 200, 206, 209, 213, 216, 219, 244, 247, 258, 260, 274, 279, 294, 413, 414, 415, 420, 423, 609, 623, 700, 710, 716, 725, 739, 762, 765, 767, 855, 857, 886, 887, 888, 890, 904, 925, 929, 990], "flame": [30, 134], "flamingo": 30, "flan": 30, "flashlight": 30, "flatbread": 30, "fleur": 30, "li": [30, 127, 223, 562], "fleur_de_li": 30, "flight_arriv": 30, "flight_departur": 30, "floppy_disk": 30, "flower_playing_card": 30, "fly": [30, 783, 854], "flying_disc": 30, "flying_sauc": 30, "fm": 30, "fo": 30, "fog": 30, "foggi": 30, "fondu": 30, "foot": [30, 67, 362, 819], "foot_dark_skin_ton": 30, "foot_light_skin_ton": 30, "foot_medium_dark_skin_ton": 30, "foot_medium_light_skin_ton": 30, "foot_medium_skin_ton": 30, "foot_tone1": 30, "foot_tone2": 30, "foot_tone3": 30, "foot_tone4": 30, "foot_tone5": 30, "footbal": 30, "footprint": [30, 163, 979], "fork_and_knif": 30, "fork_and_knife_with_pl": 30, "fork_knife_pl": 30, "fortune_cooki": 30, "fountain": 30, "fountain_pen": 30, "four": [30, 33, 63, 130, 135, 151, 163, 164, 167, 174, 181, 182, 190, 206, 211, 213, 223, 226, 229, 240, 244, 247, 261, 264, 265, 271, 301, 757, 823, 993, 1001, 1054, 1055, 1066, 1092, 1115], "four_leaf_clov": 30, "fox": [30, 386], "fox_fac": 30, "fr": [30, 142], "frame_photo": 30, "frame_with_pictur": 30, "framed_pictur": 30, "franc": 30, "french_bread": 30, "french_guiana": 30, "french_polynesia": 30, "french_southern_territori": 30, "fried_egg": 30, "fried_shrimp": 30, "fri": 30, "frog": 30, "frowning2": 30, "frown": [30, 33, 67, 1112], "frowning_fac": 30, "frowning_man": 30, "frowning_woman": 30, "fuelpump": 30, "full_moon": 30, "full_moon_with_fac": 30, "funeral_urn": 30, "ga": 30, "gabon": 30, "gambia": 30, "game_di": 30, "garlic": 30, "gay_pride_flag": 30, "gb": [30, 885], "gd": 30, "ge": [30, 33], "gear": 30, "gem": 30, "gemini": 30, "geni": 30, "georgia": 30, "germani": [30, 131, 132, 319], "gf": 30, "gg": [30, 33, 36], "gh": [30, 127, 1080], "ghana": 30, "ghost": 30, "gi": [30, 127, 214], "gibraltar": 30, "gift": [30, 167, 198], "gift_heart": 30, "giraff": 30, "girl": 30, "girl_tone1": 30, "girl_tone2": 30, "girl_tone3": 30, "girl_tone4": 30, "girl_tone5": 30, "gl": [30, 33], "glass_of_milk": 30, "globe_with_meridian": 30, "glove": 30, "gm": 30, "gn": 30, "goal": [30, 40, 66, 131, 250, 253, 286, 410, 420, 689, 784, 785, 947, 956], "goal_net": 30, "goat": 30, "goggl": 30, "golf": 30, "golfer": 30, "golfing_man": 30, "golfing_woman": 30, "gorilla": 30, "gp": 30, "gq": 30, "gr": [30, 271, 1071], "grandma": 30, "grandma_tone1": 30, "grandma_tone2": 30, "grandma_tone3": 30, "grandma_tone4": 30, "grandma_tone5": 30, "grape": 30, "great_britain": 30, "greec": 30, "green_appl": 30, "green_book": 30, "green_circl": 30, "green_heart": 30, "green_salad": 30, "green_squar": 30, "greenland": 30, "grenada": 30, "grey_exclam": 30, "grey_quest": 30, "grin": 30, "gu": 30, "guadeloup": 30, "guam": 30, "guard": [30, 193, 209, 418, 697, 698, 700], "guard_tone1": 30, "guard_tone2": 30, "guard_tone3": 30, "guard_tone4": 30, "guard_tone5": 30, "guardsman": 30, "guardsman_tone1": 30, "guardsman_tone2": 30, "guardsman_tone3": 30, "guardsman_tone4": 30, "guardsman_tone5": 30, "guardswoman": 30, "guatemala": 30, "guernsei": 30, "guide_dog": 30, "guinea": 30, "guinea_bissau": 30, "guitar": 30, "gun": 30, "guyana": 30, "gw": 30, "gy": 30, "haircut": 30, "haircut_man": 30, "haircut_tone1": 30, "haircut_tone2": 30, "haircut_tone3": 30, "haircut_tone4": 30, "haircut_tone5": 30, "haircut_woman": 30, "haiti": 30, "hamburg": 30, "hammer": [30, 131, 207, 247, 737, 747], "hammer_and_pick": 30, "hammer_and_wrench": 30, "hammer_pick": 30, "hamster": 30, "hand": [30, 127, 139, 146, 151, 158, 167, 182, 193, 209, 228, 255, 309, 336, 347, 366, 368, 431, 450, 518, 529, 545, 547, 548, 674, 801, 817, 862, 863, 879, 907, 941, 959, 974, 981, 1112, 1118, 1130], "hand_splai": 30, "hand_splayed_tone1": 30, "hand_splayed_tone2": 30, "hand_splayed_tone3": 30, "hand_splayed_tone4": 30, "hand_splayed_tone5": 30, "hand_with_index_and_middle_finger_cross": 30, "hand_with_index_and_middle_fingers_crossed_tone1": 30, "hand_with_index_and_middle_fingers_crossed_tone2": 30, "hand_with_index_and_middle_fingers_crossed_tone3": 30, "hand_with_index_and_middle_fingers_crossed_tone4": 30, "hand_with_index_and_middle_fingers_crossed_tone5": 30, "handbag": 30, "handbal": 30, "handball_tone1": 30, "handball_tone2": 30, "handball_tone3": 30, "handball_tone4": 30, "handball_tone5": 30, "handshak": [30, 698], "handshake_tone1": 30, "handshake_tone2": 30, "handshake_tone3": 30, "handshake_tone4": 30, "handshake_tone5": 30, "hankei": 30, "hash": [30, 163, 169, 170, 181, 187, 200, 206, 207, 210, 214, 216, 219, 223, 244, 251, 265, 301, 421, 757, 1003, 1087], "hatched_chick": 30, "hatching_chick": 30, "head_bandag": 30, "headphon": 30, "headston": 30, "health_work": 30, "health_worker_dark_skin_ton": 30, "health_worker_light_skin_ton": 30, "health_worker_medium_dark_skin_ton": 30, "health_worker_medium_light_skin_ton": 30, "health_worker_medium_skin_ton": 30, "health_worker_tone1": 30, "health_worker_tone2": 30, "health_worker_tone3": 30, "health_worker_tone4": 30, "health_worker_tone5": 30, "hear_no_evil": 30, "heart_decor": 30, "heart_exclam": 30, "heart_ey": 30, "heart_eyes_cat": 30, "heart_on_fir": 30, "heartbeat": 30, "heartpuls": 30, "heavy_check_mark": 30, "heavy_division_sign": 30, "heavy_dollar_sign": 30, "heavy_heart_exclam": 30, "heavy_heart_exclamation_mark_orna": 30, "heavy_minus_sign": 30, "heavy_multiplication_x": 30, "heavy_plus_sign": 30, "hedgehog": 30, "helicopt": 30, "helmet_with_cross": 30, "helmet_with_white_cross": 30, "herb": 30, "hibiscu": 30, "high_bright": 30, "high_heel": 30, "hiking_boot": 30, "hindu_templ": 30, "hippopotamu": 30, "hk": 30, "hn": 30, "hocho": 30, "hockei": 30, "hole": [30, 209, 710, 853, 883, 892, 893, 894, 911, 924], "hondura": 30, "honey_pot": 30, "hong_kong": 30, "hook": [30, 32, 36, 182, 200, 206, 216, 219, 249, 402, 437, 693, 716], "hors": 30, "horse_rac": 30, "horse_racing_tone1": 30, "horse_racing_tone2": 30, "horse_racing_tone3": 30, "horse_racing_tone4": 30, "horse_racing_tone5": 30, "hospit": 30, "hot_dog": 30, "hot_fac": 30, "hot_pepp": 30, "hotdog": 30, "hotel": [30, 136, 319], "hotspr": 30, "hourglass": 30, "hourglass_flowing_sand": 30, "hous": [30, 131], "house_abandon": 30, "house_build": 30, "house_with_garden": 30, "hr": 30, "ht": 30, "hu": [30, 292, 293, 310], "hug": 30, "hugging_fac": 30, "hungari": 30, "hush": 30, "hut": 30, "ic": [30, 347, 428, 457, 1111], "ice_cream": 30, "ice_cub": 30, "ice_hockei": 30, "ice_sk": 30, "icecream": 30, "iceland": 30, "id": [30, 40, 44, 105, 108, 109, 133, 136, 146, 150, 153, 163, 164, 174, 181, 187, 200, 203, 206, 213, 216, 217, 219, 226, 229, 233, 241, 244, 251, 257, 261, 265, 271, 296, 417, 452, 453, 454, 466, 467, 468, 481, 721, 753, 755, 777, 784, 785, 790, 792, 801, 802, 803, 813, 820, 841, 843, 844, 855, 861, 863, 870, 889, 899, 941, 968, 979, 995, 1033, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1061, 1066, 1084, 1128], "ideograph_advantag": 30, "ie": 30, "il": [30, 141], "imp": 30, "inbox_trai": 30, "incoming_envelop": 30, "india": [30, 191, 240, 264, 1055], "indonesia": 30, "infin": [30, 170, 219, 960, 961], "information_desk_person": 30, "information_desk_person_tone1": 30, "information_desk_person_tone2": 30, "information_desk_person_tone3": 30, "information_desk_person_tone4": 30, "information_desk_person_tone5": 30, "\u2139": 30, "information_sourc": 30, "interrobang": 30, "iphon": 30, "iq": 30, "ir": [30, 817], "iran": 30, "iraq": 30, "ireland": 30, "island": 30, "isle_of_man": 30, "israel": [30, 191, 240, 1055], "itali": 30, "izakaya_lantern": 30, "jack_o_lantern": 30, "jamaica": 30, "japan": 30, "japanese_castl": 30, "japanese_goblin": 30, "japanese_ogr": 30, "jean": 30, "jersei": 30, "jigsaw": 30, "jm": 30, "jo": [30, 174, 187, 200, 203, 213, 216, 219, 223, 226, 265, 271], "jordan": 30, "joi": 30, "joy_cat": 30, "joystick": 30, "jp": 30, "judg": 30, "judge_dark_skin_ton": 30, "judge_light_skin_ton": 30, "judge_medium_dark_skin_ton": 30, "judge_medium_light_skin_ton": 30, "judge_medium_skin_ton": 30, "judge_tone1": 30, "judge_tone2": 30, "judge_tone3": 30, "judge_tone4": 30, "judge_tone5": 30, "juggler": 30, "juggler_tone1": 30, "juggler_tone2": 30, "juggler_tone3": 30, "juggler_tone4": 30, "juggler_tone5": 30, "juggl": 30, "juggling_tone1": 30, "juggling_tone2": 30, "juggling_tone3": 30, "juggling_tone4": 30, "juggling_tone5": 30, "kaaba": 30, "kangaroo": 30, "karate_uniform": 30, "kayak": 30, "kazakhstan": 30, "ke": 30, "kenya": 30, "key2": 30, "keyboard": [30, 301, 799, 849], "keycap_ten": 30, "kg": 30, "kh": 30, "ki": [30, 172], "kick_scoot": 30, "kimono": 30, "kiribati": 30, "kiss_dark_skin_ton": 30, "kiss_light_skin_ton": 30, "kiss_man_man_dark_skin_ton": 30, "kiss_man_man_dark_skin_tone_light_skin_ton": 30, "kiss_man_man_dark_skin_tone_medium_dark_skin_ton": 30, "kiss_man_man_dark_skin_tone_medium_light_skin_ton": 30, "kiss_man_man_dark_skin_tone_medium_skin_ton": 30, "kiss_man_man_light_skin_ton": 30, "kiss_man_man_light_skin_tone_dark_skin_ton": 30, "kiss_man_man_light_skin_tone_medium_dark_skin_ton": 30, "kiss_man_man_light_skin_tone_medium_light_skin_ton": 30, "kiss_man_man_light_skin_tone_medium_skin_ton": 30, "kiss_man_man_medium_dark_skin_ton": 30, "kiss_man_man_medium_dark_skin_tone_dark_skin_ton": 30, "kiss_man_man_medium_dark_skin_tone_light_skin_ton": 30, "kiss_man_man_medium_dark_skin_tone_medium_light_skin_ton": 30, "kiss_man_man_medium_dark_skin_tone_medium_skin_ton": 30, "kiss_man_man_medium_light_skin_ton": 30, "kiss_man_man_medium_light_skin_tone_dark_skin_ton": 30, "kiss_man_man_medium_light_skin_tone_light_skin_ton": 30, "kiss_man_man_medium_light_skin_tone_medium_dark_skin_ton": 30, "kiss_man_man_medium_light_skin_tone_medium_skin_ton": 30, "kiss_man_man_medium_skin_ton": 30, "kiss_man_man_medium_skin_tone_dark_skin_ton": 30, "kiss_man_man_medium_skin_tone_light_skin_ton": 30, "kiss_man_man_medium_skin_tone_medium_dark_skin_ton": 30, "kiss_man_man_medium_skin_tone_medium_light_skin_ton": 30, "kiss_man_man_tone1": 30, "kiss_man_man_tone1_tone2": 30, "kiss_man_man_tone1_tone3": 30, "kiss_man_man_tone1_tone4": 30, "kiss_man_man_tone1_tone5": 30, "kiss_man_man_tone2": 30, "kiss_man_man_tone2_tone1": 30, "kiss_man_man_tone2_tone3": 30, "kiss_man_man_tone2_tone4": 30, "kiss_man_man_tone2_tone5": 30, "kiss_man_man_tone3": 30, "kiss_man_man_tone3_tone1": 30, "kiss_man_man_tone3_tone2": 30, "kiss_man_man_tone3_tone4": 30, "kiss_man_man_tone3_tone5": 30, "kiss_man_man_tone4": 30, "kiss_man_man_tone4_tone1": 30, "kiss_man_man_tone4_tone2": 30, "kiss_man_man_tone4_tone3": 30, "kiss_man_man_tone4_tone5": 30, "kiss_man_man_tone5": 30, "kiss_man_man_tone5_tone1": 30, "kiss_man_man_tone5_tone2": 30, "kiss_man_man_tone5_tone3": 30, "kiss_man_man_tone5_tone4": 30, "kiss_medium_dark_skin_ton": 30, "kiss_medium_light_skin_ton": 30, "kiss_medium_skin_ton": 30, "kiss_mm": 30, "kiss_person_person_dark_skin_tone_light_skin_ton": 30, "kiss_person_person_dark_skin_tone_medium_dark_skin_ton": 30, "kiss_person_person_dark_skin_tone_medium_light_skin_ton": 30, "kiss_person_person_dark_skin_tone_medium_skin_ton": 30, "kiss_person_person_light_skin_tone_dark_skin_ton": 30, "kiss_person_person_light_skin_tone_medium_dark_skin_ton": 30, "kiss_person_person_light_skin_tone_medium_light_skin_ton": 30, "kiss_person_person_light_skin_tone_medium_skin_ton": 30, "kiss_person_person_medium_dark_skin_tone_dark_skin_ton": 30, "kiss_person_person_medium_dark_skin_tone_light_skin_ton": 30, "kiss_person_person_medium_dark_skin_tone_medium_light_skin_ton": 30, "kiss_person_person_medium_dark_skin_tone_medium_skin_ton": 30, "kiss_person_person_medium_light_skin_tone_dark_skin_ton": 30, "kiss_person_person_medium_light_skin_tone_light_skin_ton": 30, "kiss_person_person_medium_light_skin_tone_medium_dark_skin_ton": 30, "kiss_person_person_medium_light_skin_tone_medium_skin_ton": 30, "kiss_person_person_medium_skin_tone_dark_skin_ton": 30, "kiss_person_person_medium_skin_tone_light_skin_ton": 30, "kiss_person_person_medium_skin_tone_medium_dark_skin_ton": 30, "kiss_person_person_medium_skin_tone_medium_light_skin_ton": 30, "kiss_person_person_tone1_tone2": 30, "kiss_person_person_tone1_tone3": 30, "kiss_person_person_tone1_tone4": 30, "kiss_person_person_tone1_tone5": 30, "kiss_person_person_tone2_tone1": 30, "kiss_person_person_tone2_tone3": 30, "kiss_person_person_tone2_tone4": 30, "kiss_person_person_tone2_tone5": 30, "kiss_person_person_tone3_tone1": 30, "kiss_person_person_tone3_tone2": 30, "kiss_person_person_tone3_tone4": 30, "kiss_person_person_tone3_tone5": 30, "kiss_person_person_tone4_tone1": 30, "kiss_person_person_tone4_tone2": 30, "kiss_person_person_tone4_tone3": 30, "kiss_person_person_tone4_tone5": 30, "kiss_person_person_tone5_tone1": 30, "kiss_person_person_tone5_tone2": 30, "kiss_person_person_tone5_tone3": 30, "kiss_person_person_tone5_tone4": 30, "kiss_tone1": 30, "kiss_tone2": 30, "kiss_tone3": 30, "kiss_tone4": 30, "kiss_tone5": 30, "kiss_woman_man": 30, "kiss_woman_man_dark_skin_ton": 30, "kiss_woman_man_dark_skin_tone_light_skin_ton": 30, "kiss_woman_man_dark_skin_tone_medium_dark_skin_ton": 30, "kiss_woman_man_dark_skin_tone_medium_light_skin_ton": 30, "kiss_woman_man_dark_skin_tone_medium_skin_ton": 30, "kiss_woman_man_light_skin_ton": 30, "kiss_woman_man_light_skin_tone_dark_skin_ton": 30, "kiss_woman_man_light_skin_tone_medium_dark_skin_ton": 30, "kiss_woman_man_light_skin_tone_medium_light_skin_ton": 30, "kiss_woman_man_light_skin_tone_medium_skin_ton": 30, "kiss_woman_man_medium_dark_skin_ton": 30, "kiss_woman_man_medium_dark_skin_tone_dark_skin_ton": 30, "kiss_woman_man_medium_dark_skin_tone_light_skin_ton": 30, "kiss_woman_man_medium_dark_skin_tone_medium_light_skin_ton": 30, "kiss_woman_man_medium_dark_skin_tone_medium_skin_ton": 30, "kiss_woman_man_medium_light_skin_ton": 30, "kiss_woman_man_medium_light_skin_tone_dark_skin_ton": 30, "kiss_woman_man_medium_light_skin_tone_light_skin_ton": 30, "kiss_woman_man_medium_light_skin_tone_medium_dark_skin_ton": 30, "kiss_woman_man_medium_light_skin_tone_medium_skin_ton": 30, "kiss_woman_man_medium_skin_ton": 30, "kiss_woman_man_medium_skin_tone_dark_skin_ton": 30, "kiss_woman_man_medium_skin_tone_light_skin_ton": 30, "kiss_woman_man_medium_skin_tone_medium_dark_skin_ton": 30, "kiss_woman_man_medium_skin_tone_medium_light_skin_ton": 30, "kiss_woman_man_tone1": 30, "kiss_woman_man_tone1_tone2": 30, "kiss_woman_man_tone1_tone3": 30, "kiss_woman_man_tone1_tone4": 30, "kiss_woman_man_tone1_tone5": 30, "kiss_woman_man_tone2": 30, "kiss_woman_man_tone2_tone1": 30, "kiss_woman_man_tone2_tone3": 30, "kiss_woman_man_tone2_tone4": 30, "kiss_woman_man_tone2_tone5": 30, "kiss_woman_man_tone3": 30, "kiss_woman_man_tone3_tone1": 30, "kiss_woman_man_tone3_tone2": 30, "kiss_woman_man_tone3_tone4": 30, "kiss_woman_man_tone3_tone5": 30, "kiss_woman_man_tone4": 30, "kiss_woman_man_tone4_tone1": 30, "kiss_woman_man_tone4_tone2": 30, "kiss_woman_man_tone4_tone3": 30, "kiss_woman_man_tone4_tone5": 30, "kiss_woman_man_tone5": 30, "kiss_woman_man_tone5_tone1": 30, "kiss_woman_man_tone5_tone2": 30, "kiss_woman_man_tone5_tone3": 30, "kiss_woman_man_tone5_tone4": 30, "kiss_woman_woman_dark_skin_ton": 30, "kiss_woman_woman_dark_skin_tone_light_skin_ton": 30, "kiss_woman_woman_dark_skin_tone_medium_dark_skin_ton": 30, "kiss_woman_woman_dark_skin_tone_medium_light_skin_ton": 30, "kiss_woman_woman_dark_skin_tone_medium_skin_ton": 30, "kiss_woman_woman_light_skin_ton": 30, "kiss_woman_woman_light_skin_tone_dark_skin_ton": 30, "kiss_woman_woman_light_skin_tone_medium_dark_skin_ton": 30, "kiss_woman_woman_light_skin_tone_medium_light_skin_ton": 30, "kiss_woman_woman_light_skin_tone_medium_skin_ton": 30, "kiss_woman_woman_medium_dark_skin_ton": 30, "kiss_woman_woman_medium_dark_skin_tone_dark_skin_ton": 30, "kiss_woman_woman_medium_dark_skin_tone_light_skin_ton": 30, "kiss_woman_woman_medium_dark_skin_tone_medium_light_skin_ton": 30, "kiss_woman_woman_medium_dark_skin_tone_medium_skin_ton": 30, "kiss_woman_woman_medium_light_skin_ton": 30, "kiss_woman_woman_medium_light_skin_tone_dark_skin_ton": 30, "kiss_woman_woman_medium_light_skin_tone_light_skin_ton": 30, "kiss_woman_woman_medium_light_skin_tone_medium_dark_skin_ton": 30, "kiss_woman_woman_medium_light_skin_tone_medium_skin_ton": 30, "kiss_woman_woman_medium_skin_ton": 30, "kiss_woman_woman_medium_skin_tone_dark_skin_ton": 30, "kiss_woman_woman_medium_skin_tone_light_skin_ton": 30, "kiss_woman_woman_medium_skin_tone_medium_dark_skin_ton": 30, "kiss_woman_woman_medium_skin_tone_medium_light_skin_ton": 30, "kiss_woman_woman_tone1": 30, "kiss_woman_woman_tone1_tone2": 30, "kiss_woman_woman_tone1_tone3": 30, "kiss_woman_woman_tone1_tone4": 30, "kiss_woman_woman_tone1_tone5": 30, "kiss_woman_woman_tone2": 30, "kiss_woman_woman_tone2_tone1": 30, "kiss_woman_woman_tone2_tone3": 30, "kiss_woman_woman_tone2_tone4": 30, "kiss_woman_woman_tone2_tone5": 30, "kiss_woman_woman_tone3": 30, "kiss_woman_woman_tone3_tone1": 30, "kiss_woman_woman_tone3_tone2": 30, "kiss_woman_woman_tone3_tone4": 30, "kiss_woman_woman_tone3_tone5": 30, "kiss_woman_woman_tone4": 30, "kiss_woman_woman_tone4_tone1": 30, "kiss_woman_woman_tone4_tone2": 30, "kiss_woman_woman_tone4_tone3": 30, "kiss_woman_woman_tone4_tone5": 30, "kiss_woman_woman_tone5": 30, "kiss_woman_woman_tone5_tone1": 30, "kiss_woman_woman_tone5_tone2": 30, "kiss_woman_woman_tone5_tone3": 30, "kiss_woman_woman_tone5_tone4": 30, "kiss_ww": 30, "kissing_cat": 30, "kissing_closed_ey": 30, "kissing_smiling_ey": 30, "kite": 30, "kiwi": 30, "kiwi_fruit": 30, "kiwifruit": 30, "km": [30, 152, 154], "kn": 30, "knife": [30, 716, 883, 1112], "knot": 30, "koala": 30, "koko": 30, "korea": 30, "kosovo": 30, "kp": 30, "kr": 30, "kuwait": 30, "kw": [30, 200, 206, 216, 219], "ky": 30, "kyrgyzstan": 30, "kz": 30, "la": 30, "lab_coat": 30, "label": [30, 37, 38, 56, 152, 154, 201, 214, 228, 231, 264, 270, 358, 363, 370, 376, 380, 383, 387, 390, 396, 400, 405, 406, 627, 628, 666, 707, 709, 710, 737, 1055, 1062, 1077, 1080], "lacross": 30, "ladder": 30, "lady_beetl": 30, "lao": 30, "large_blue_circl": 30, "large_blue_diamond": 30, "large_orange_diamond": 30, "last_quarter_moon": 30, "last_quarter_moon_with_fac": 30, "latin_cross": 30, "latvia": 30, "laugh": 30, "lb": 30, "lc": [30, 168], "leafy_green": 30, "leav": [30, 47, 63, 128, 131, 132, 138, 141, 171, 200, 223, 260, 279, 312, 530, 532, 541, 542, 557, 559, 560, 705, 708, 720, 725, 735, 757, 862, 887, 907, 995, 1071], "lebanon": 30, "ledger": 30, "left_facing_fist": 30, "left_facing_fist_tone1": 30, "left_facing_fist_tone2": 30, "left_facing_fist_tone3": 30, "left_facing_fist_tone4": 30, "left_facing_fist_tone5": 30, "left_fist": 30, "left_fist_tone1": 30, "left_fist_tone2": 30, "left_fist_tone3": 30, "left_fist_tone4": 30, "left_fist_tone5": 30, "left_luggag": 30, "left_right_arrow": 30, "left_speech_bubbl": 30, "leftwards_arrow_with_hook": 30, "leg": [30, 33], "leg_dark_skin_ton": 30, "leg_light_skin_ton": 30, "leg_medium_dark_skin_ton": 30, "leg_medium_light_skin_ton": 30, "leg_medium_skin_ton": 30, "leg_tone1": 30, "leg_tone2": 30, "leg_tone3": 30, "leg_tone4": 30, "leg_tone5": 30, "lemon": 30, "leo": [30, 292, 293, 310], "leopard": 30, "lesotho": 30, "level_slid": 30, "levit": 30, "levitate_tone1": 30, "levitate_tone2": 30, "levitate_tone3": 30, "levitate_tone4": 30, "levitate_tone5": 30, "liar": 30, "liberia": 30, "libra": 30, "libya": 30, "liechtenstein": 30, "lifter": 30, "lifter_tone1": 30, "lifter_tone2": 30, "lifter_tone3": 30, "lifter_tone4": 30, "lifter_tone5": 30, "light_rail": 30, "linked_paperclip": 30, "lion": 30, "lion_fac": 30, "lip": 30, "lipstick": 30, "lithuania": 30, "lizard": 30, "lk": 30, "llama": 30, "lobster": 30, "lock": [30, 131, 133, 163, 167, 200, 206, 209, 216, 219, 235, 236, 238, 247, 268, 278, 282, 310, 384, 424, 504, 687, 693, 696, 698, 699, 705, 709, 710, 747, 755, 760, 765, 794, 870, 902, 907, 909, 917, 924, 965, 1055, 1112, 1124, 1127], "lock_with_ink_pen": 30, "lollipop": 30, "long_drum": 30, "loud_sound": 30, "loudspeak": 30, "love_hotel": 30, "love_lett": 30, "love_you_gestur": 30, "love_you_gesture_dark_skin_ton": 30, "love_you_gesture_light_skin_ton": 30, "love_you_gesture_medium_dark_skin_ton": 30, "love_you_gesture_medium_light_skin_ton": 30, "love_you_gesture_medium_skin_ton": 30, "love_you_gesture_tone1": 30, "love_you_gesture_tone2": 30, "love_you_gesture_tone3": 30, "love_you_gesture_tone4": 30, "love_you_gesture_tone5": 30, "low_bright": 30, "lower_left_ballpoint_pen": 30, "lower_left_crayon": 30, "lower_left_fountain_pen": 30, "lower_left_paintbrush": 30, "lr": 30, "lu": 30, "luggag": 30, "lung": 30, "luxembourg": 30, "lv": 30, "ly": 30, "lying_fac": 30, "ma": 30, "macau": 30, "macedonia": 30, "madagascar": 30, "mag": 30, "mag_right": 30, "mage": 30, "mage_dark_skin_ton": 30, "mage_light_skin_ton": 30, "mage_medium_dark_skin_ton": 30, "mage_medium_light_skin_ton": 30, "mage_medium_skin_ton": 30, "mage_tone1": 30, "mage_tone2": 30, "mage_tone3": 30, "mage_tone4": 30, "mage_tone5": 30, "magic_wand": 30, "magnet": 30, "mahjong": 30, "mailbox": 30, "mailbox_clos": 30, "mailbox_with_mail": 30, "mailbox_with_no_mail": 30, "malawi": 30, "malaysia": 30, "maldiv": 30, "male_danc": 30, "male_dancer_tone1": 30, "male_dancer_tone2": 30, "male_dancer_tone3": 30, "male_dancer_tone4": 30, "male_dancer_tone5": 30, "male_detect": 30, "male_sign": 30, "mali": 30, "malta": 30, "mammoth": 30, "man_artist": 30, "man_artist_dark_skin_ton": 30, "man_artist_light_skin_ton": 30, "man_artist_medium_dark_skin_ton": 30, "man_artist_medium_light_skin_ton": 30, "man_artist_medium_skin_ton": 30, "man_artist_tone1": 30, "man_artist_tone2": 30, "man_artist_tone3": 30, "man_artist_tone4": 30, "man_artist_tone5": 30, "man_astronaut": 30, "man_astronaut_dark_skin_ton": 30, "man_astronaut_light_skin_ton": 30, "man_astronaut_medium_dark_skin_ton": 30, "man_astronaut_medium_light_skin_ton": 30, "man_astronaut_medium_skin_ton": 30, "man_astronaut_tone1": 30, "man_astronaut_tone2": 30, "man_astronaut_tone3": 30, "man_astronaut_tone4": 30, "man_astronaut_tone5": 30, "man_bald": 30, "man_bald_dark_skin_ton": 30, "man_bald_light_skin_ton": 30, "man_bald_medium_dark_skin_ton": 30, "man_bald_medium_light_skin_ton": 30, "man_bald_medium_skin_ton": 30, "man_bald_tone1": 30, "man_bald_tone2": 30, "man_bald_tone3": 30, "man_bald_tone4": 30, "man_bald_tone5": 30, "man_beard": 30, "man_bik": 30, "man_biking_dark_skin_ton": 30, "man_biking_light_skin_ton": 30, "man_biking_medium_dark_skin_ton": 30, "man_biking_medium_light_skin_ton": 30, "man_biking_medium_skin_ton": 30, "man_biking_tone1": 30, "man_biking_tone2": 30, "man_biking_tone3": 30, "man_biking_tone4": 30, "man_biking_tone5": 30, "man_bouncing_bal": 30, "man_bouncing_ball_dark_skin_ton": 30, "man_bouncing_ball_light_skin_ton": 30, "man_bouncing_ball_medium_dark_skin_ton": 30, "man_bouncing_ball_medium_light_skin_ton": 30, "man_bouncing_ball_medium_skin_ton": 30, "man_bouncing_ball_tone1": 30, "man_bouncing_ball_tone2": 30, "man_bouncing_ball_tone3": 30, "man_bouncing_ball_tone4": 30, "man_bouncing_ball_tone5": 30, "man_bow": 30, "man_bowing_dark_skin_ton": 30, "man_bowing_light_skin_ton": 30, "man_bowing_medium_dark_skin_ton": 30, "man_bowing_medium_light_skin_ton": 30, "man_bowing_medium_skin_ton": 30, "man_bowing_tone1": 30, "man_bowing_tone2": 30, "man_bowing_tone3": 30, "man_bowing_tone4": 30, "man_bowing_tone5": 30, "man_cartwheel": 30, "man_cartwheeling_dark_skin_ton": 30, "man_cartwheeling_light_skin_ton": 30, "man_cartwheeling_medium_dark_skin_ton": 30, "man_cartwheeling_medium_light_skin_ton": 30, "man_cartwheeling_medium_skin_ton": 30, "man_cartwheeling_tone1": 30, "man_cartwheeling_tone2": 30, "man_cartwheeling_tone3": 30, "man_cartwheeling_tone4": 30, "man_cartwheeling_tone5": 30, "man_climb": 30, "man_climbing_dark_skin_ton": 30, "man_climbing_light_skin_ton": 30, "man_climbing_medium_dark_skin_ton": 30, "man_climbing_medium_light_skin_ton": 30, "man_climbing_medium_skin_ton": 30, "man_climbing_tone1": 30, "man_climbing_tone2": 30, "man_climbing_tone3": 30, "man_climbing_tone4": 30, "man_climbing_tone5": 30, "man_construction_work": 30, "man_construction_worker_dark_skin_ton": 30, "man_construction_worker_light_skin_ton": 30, "man_construction_worker_medium_dark_skin_ton": 30, "man_construction_worker_medium_light_skin_ton": 30, "man_construction_worker_medium_skin_ton": 30, "man_construction_worker_tone1": 30, "man_construction_worker_tone2": 30, "man_construction_worker_tone3": 30, "man_construction_worker_tone4": 30, "man_construction_worker_tone5": 30, "man_cook": 30, "man_cook_dark_skin_ton": 30, "man_cook_light_skin_ton": 30, "man_cook_medium_dark_skin_ton": 30, "man_cook_medium_light_skin_ton": 30, "man_cook_medium_skin_ton": 30, "man_cook_tone1": 30, "man_cook_tone2": 30, "man_cook_tone3": 30, "man_cook_tone4": 30, "man_cook_tone5": 30, "man_curly_hair": 30, "man_curly_haired_dark_skin_ton": 30, "man_curly_haired_light_skin_ton": 30, "man_curly_haired_medium_dark_skin_ton": 30, "man_curly_haired_medium_light_skin_ton": 30, "man_curly_haired_medium_skin_ton": 30, "man_curly_haired_tone1": 30, "man_curly_haired_tone2": 30, "man_curly_haired_tone3": 30, "man_curly_haired_tone4": 30, "man_curly_haired_tone5": 30, "man_danc": 30, "man_dancing_tone1": 30, "man_dancing_tone2": 30, "man_dancing_tone3": 30, "man_dancing_tone4": 30, "man_dancing_tone5": 30, "man_dark_skin_tone_beard": 30, "man_detect": 30, "man_detective_dark_skin_ton": 30, "man_detective_light_skin_ton": 30, "man_detective_medium_dark_skin_ton": 30, "man_detective_medium_light_skin_ton": 30, "man_detective_medium_skin_ton": 30, "man_detective_tone1": 30, "man_detective_tone2": 30, "man_detective_tone3": 30, "man_detective_tone4": 30, "man_detective_tone5": 30, "man_elf": 30, "man_elf_dark_skin_ton": 30, "man_elf_light_skin_ton": 30, "man_elf_medium_dark_skin_ton": 30, "man_elf_medium_light_skin_ton": 30, "man_elf_medium_skin_ton": 30, "man_elf_tone1": 30, "man_elf_tone2": 30, "man_elf_tone3": 30, "man_elf_tone4": 30, "man_elf_tone5": 30, "man_facepalm": 30, "man_facepalming_dark_skin_ton": 30, "man_facepalming_light_skin_ton": 30, "man_facepalming_medium_dark_skin_ton": 30, "man_facepalming_medium_light_skin_ton": 30, "man_facepalming_medium_skin_ton": 30, "man_facepalming_tone1": 30, "man_facepalming_tone2": 30, "man_facepalming_tone3": 30, "man_facepalming_tone4": 30, "man_facepalming_tone5": 30, "man_factory_work": 30, "man_factory_worker_dark_skin_ton": 30, "man_factory_worker_light_skin_ton": 30, "man_factory_worker_medium_dark_skin_ton": 30, "man_factory_worker_medium_light_skin_ton": 30, "man_factory_worker_medium_skin_ton": 30, "man_factory_worker_tone1": 30, "man_factory_worker_tone2": 30, "man_factory_worker_tone3": 30, "man_factory_worker_tone4": 30, "man_factory_worker_tone5": 30, "man_fairi": 30, "man_fairy_dark_skin_ton": 30, "man_fairy_light_skin_ton": 30, "man_fairy_medium_dark_skin_ton": 30, "man_fairy_medium_light_skin_ton": 30, "man_fairy_medium_skin_ton": 30, "man_fairy_tone1": 30, "man_fairy_tone2": 30, "man_fairy_tone3": 30, "man_fairy_tone4": 30, "man_fairy_tone5": 30, "man_farm": 30, "man_farmer_dark_skin_ton": 30, "man_farmer_light_skin_ton": 30, "man_farmer_medium_dark_skin_ton": 30, "man_farmer_medium_light_skin_ton": 30, "man_farmer_medium_skin_ton": 30, "man_farmer_tone1": 30, "man_farmer_tone2": 30, "man_farmer_tone3": 30, "man_farmer_tone4": 30, "man_farmer_tone5": 30, "man_feeding_babi": 30, "man_feeding_baby_dark_skin_ton": 30, "man_feeding_baby_light_skin_ton": 30, "man_feeding_baby_medium_dark_skin_ton": 30, "man_feeding_baby_medium_light_skin_ton": 30, "man_feeding_baby_medium_skin_ton": 30, "man_feeding_baby_tone1": 30, "man_feeding_baby_tone2": 30, "man_feeding_baby_tone3": 30, "man_feeding_baby_tone4": 30, "man_feeding_baby_tone5": 30, "man_firefight": 30, "man_firefighter_dark_skin_ton": 30, "man_firefighter_light_skin_ton": 30, "man_firefighter_medium_dark_skin_ton": 30, "man_firefighter_medium_light_skin_ton": 30, "man_firefighter_medium_skin_ton": 30, "man_firefighter_tone1": 30, "man_firefighter_tone2": 30, "man_firefighter_tone3": 30, "man_firefighter_tone4": 30, "man_firefighter_tone5": 30, "man_frown": 30, "man_frowning_dark_skin_ton": 30, "man_frowning_light_skin_ton": 30, "man_frowning_medium_dark_skin_ton": 30, "man_frowning_medium_light_skin_ton": 30, "man_frowning_medium_skin_ton": 30, "man_frowning_tone1": 30, "man_frowning_tone2": 30, "man_frowning_tone3": 30, "man_frowning_tone4": 30, "man_frowning_tone5": 30, "man_geni": 30, "man_gesturing_no": 30, "man_gesturing_no_dark_skin_ton": 30, "man_gesturing_no_light_skin_ton": 30, "man_gesturing_no_medium_dark_skin_ton": 30, "man_gesturing_no_medium_light_skin_ton": 30, "man_gesturing_no_medium_skin_ton": 30, "man_gesturing_no_tone1": 30, "man_gesturing_no_tone2": 30, "man_gesturing_no_tone3": 30, "man_gesturing_no_tone4": 30, "man_gesturing_no_tone5": 30, "man_gesturing_ok": 30, "man_gesturing_ok_dark_skin_ton": 30, "man_gesturing_ok_light_skin_ton": 30, "man_gesturing_ok_medium_dark_skin_ton": 30, "man_gesturing_ok_medium_light_skin_ton": 30, "man_gesturing_ok_medium_skin_ton": 30, "man_gesturing_ok_tone1": 30, "man_gesturing_ok_tone2": 30, "man_gesturing_ok_tone3": 30, "man_gesturing_ok_tone4": 30, "man_gesturing_ok_tone5": 30, "man_getting_face_massag": 30, "man_getting_face_massage_dark_skin_ton": 30, "man_getting_face_massage_light_skin_ton": 30, "man_getting_face_massage_medium_dark_skin_ton": 30, "man_getting_face_massage_medium_light_skin_ton": 30, "man_getting_face_massage_medium_skin_ton": 30, "man_getting_face_massage_tone1": 30, "man_getting_face_massage_tone2": 30, "man_getting_face_massage_tone3": 30, "man_getting_face_massage_tone4": 30, "man_getting_face_massage_tone5": 30, "man_getting_haircut": 30, "man_getting_haircut_dark_skin_ton": 30, "man_getting_haircut_light_skin_ton": 30, "man_getting_haircut_medium_dark_skin_ton": 30, "man_getting_haircut_medium_light_skin_ton": 30, "man_getting_haircut_medium_skin_ton": 30, "man_getting_haircut_tone1": 30, "man_getting_haircut_tone2": 30, "man_getting_haircut_tone3": 30, "man_getting_haircut_tone4": 30, "man_getting_haircut_tone5": 30, "man_golf": 30, "man_golfing_dark_skin_ton": 30, "man_golfing_light_skin_ton": 30, "man_golfing_medium_dark_skin_ton": 30, "man_golfing_medium_light_skin_ton": 30, "man_golfing_medium_skin_ton": 30, "man_golfing_tone1": 30, "man_golfing_tone2": 30, "man_golfing_tone3": 30, "man_golfing_tone4": 30, "man_golfing_tone5": 30, "man_guard": 30, "man_guard_dark_skin_ton": 30, "man_guard_light_skin_ton": 30, "man_guard_medium_dark_skin_ton": 30, "man_guard_medium_light_skin_ton": 30, "man_guard_medium_skin_ton": 30, "man_guard_tone1": 30, "man_guard_tone2": 30, "man_guard_tone3": 30, "man_guard_tone4": 30, "man_guard_tone5": 30, "man_health_work": 30, "man_health_worker_dark_skin_ton": 30, "man_health_worker_light_skin_ton": 30, "man_health_worker_medium_dark_skin_ton": 30, "man_health_worker_medium_light_skin_ton": 30, "man_health_worker_medium_skin_ton": 30, "man_health_worker_tone1": 30, "man_health_worker_tone2": 30, "man_health_worker_tone3": 30, "man_health_worker_tone4": 30, "man_health_worker_tone5": 30, "man_in_business_suit_levit": 30, "man_in_business_suit_levitating_dark_skin_ton": 30, "man_in_business_suit_levitating_light_skin_ton": 30, "man_in_business_suit_levitating_medium_dark_skin_ton": 30, "man_in_business_suit_levitating_medium_light_skin_ton": 30, "man_in_business_suit_levitating_medium_skin_ton": 30, "man_in_business_suit_levitating_tone1": 30, "man_in_business_suit_levitating_tone2": 30, "man_in_business_suit_levitating_tone3": 30, "man_in_business_suit_levitating_tone4": 30, "man_in_business_suit_levitating_tone5": 30, "man_in_lotus_posit": 30, "man_in_lotus_position_dark_skin_ton": 30, "man_in_lotus_position_light_skin_ton": 30, "man_in_lotus_position_medium_dark_skin_ton": 30, "man_in_lotus_position_medium_light_skin_ton": 30, "man_in_lotus_position_medium_skin_ton": 30, "man_in_lotus_position_tone1": 30, "man_in_lotus_position_tone2": 30, "man_in_lotus_position_tone3": 30, "man_in_lotus_position_tone4": 30, "man_in_lotus_position_tone5": 30, "man_in_manual_wheelchair": 30, "man_in_manual_wheelchair_dark_skin_ton": 30, "man_in_manual_wheelchair_light_skin_ton": 30, "man_in_manual_wheelchair_medium_dark_skin_ton": 30, "man_in_manual_wheelchair_medium_light_skin_ton": 30, "man_in_manual_wheelchair_medium_skin_ton": 30, "man_in_manual_wheelchair_tone1": 30, "man_in_manual_wheelchair_tone2": 30, "man_in_manual_wheelchair_tone3": 30, "man_in_manual_wheelchair_tone4": 30, "man_in_manual_wheelchair_tone5": 30, "man_in_motorized_wheelchair": 30, "man_in_motorized_wheelchair_dark_skin_ton": 30, "man_in_motorized_wheelchair_light_skin_ton": 30, "man_in_motorized_wheelchair_medium_dark_skin_ton": 30, "man_in_motorized_wheelchair_medium_light_skin_ton": 30, "man_in_motorized_wheelchair_medium_skin_ton": 30, "man_in_motorized_wheelchair_tone1": 30, "man_in_motorized_wheelchair_tone2": 30, "man_in_motorized_wheelchair_tone3": 30, "man_in_motorized_wheelchair_tone4": 30, "man_in_motorized_wheelchair_tone5": 30, "man_in_steamy_room": 30, "man_in_steamy_room_dark_skin_ton": 30, "man_in_steamy_room_light_skin_ton": 30, "man_in_steamy_room_medium_dark_skin_ton": 30, "man_in_steamy_room_medium_light_skin_ton": 30, "man_in_steamy_room_medium_skin_ton": 30, "man_in_steamy_room_tone1": 30, "man_in_steamy_room_tone2": 30, "man_in_steamy_room_tone3": 30, "man_in_steamy_room_tone4": 30, "man_in_steamy_room_tone5": 30, "man_in_tuxedo": 30, "man_in_tuxedo_dark_skin_ton": 30, "man_in_tuxedo_light_skin_ton": 30, "man_in_tuxedo_medium_dark_skin_ton": 30, "man_in_tuxedo_medium_light_skin_ton": 30, "man_in_tuxedo_medium_skin_ton": 30, "man_in_tuxedo_tone1": 30, "man_in_tuxedo_tone2": 30, "man_in_tuxedo_tone3": 30, "man_in_tuxedo_tone4": 30, "man_in_tuxedo_tone5": 30, "man_judg": 30, "man_judge_dark_skin_ton": 30, "man_judge_light_skin_ton": 30, "man_judge_medium_dark_skin_ton": 30, "man_judge_medium_light_skin_ton": 30, "man_judge_medium_skin_ton": 30, "man_judge_tone1": 30, "man_judge_tone2": 30, "man_judge_tone3": 30, "man_judge_tone4": 30, "man_judge_tone5": 30, "man_juggl": 30, "man_juggling_dark_skin_ton": 30, "man_juggling_light_skin_ton": 30, "man_juggling_medium_dark_skin_ton": 30, "man_juggling_medium_light_skin_ton": 30, "man_juggling_medium_skin_ton": 30, "man_juggling_tone1": 30, "man_juggling_tone2": 30, "man_juggling_tone3": 30, "man_juggling_tone4": 30, "man_juggling_tone5": 30, "man_kneel": 30, "man_kneeling_dark_skin_ton": 30, "man_kneeling_light_skin_ton": 30, "man_kneeling_medium_dark_skin_ton": 30, "man_kneeling_medium_light_skin_ton": 30, "man_kneeling_medium_skin_ton": 30, "man_kneeling_tone1": 30, "man_kneeling_tone2": 30, "man_kneeling_tone3": 30, "man_kneeling_tone4": 30, "man_kneeling_tone5": 30, "man_lifting_weight": 30, "man_lifting_weights_dark_skin_ton": 30, "man_lifting_weights_light_skin_ton": 30, "man_lifting_weights_medium_dark_skin_ton": 30, "man_lifting_weights_medium_light_skin_ton": 30, "man_lifting_weights_medium_skin_ton": 30, "man_lifting_weights_tone1": 30, "man_lifting_weights_tone2": 30, "man_lifting_weights_tone3": 30, "man_lifting_weights_tone4": 30, "man_lifting_weights_tone5": 30, "man_light_skin_tone_beard": 30, "man_mag": 30, "man_mage_dark_skin_ton": 30, "man_mage_light_skin_ton": 30, "man_mage_medium_dark_skin_ton": 30, "man_mage_medium_light_skin_ton": 30, "man_mage_medium_skin_ton": 30, "man_mage_tone1": 30, "man_mage_tone2": 30, "man_mage_tone3": 30, "man_mage_tone4": 30, "man_mage_tone5": 30, "man_mechan": 30, "man_mechanic_dark_skin_ton": 30, "man_mechanic_light_skin_ton": 30, "man_mechanic_medium_dark_skin_ton": 30, "man_mechanic_medium_light_skin_ton": 30, "man_mechanic_medium_skin_ton": 30, "man_mechanic_tone1": 30, "man_mechanic_tone2": 30, "man_mechanic_tone3": 30, "man_mechanic_tone4": 30, "man_mechanic_tone5": 30, "man_medium_dark_skin_tone_beard": 30, "man_medium_light_skin_tone_beard": 30, "man_medium_skin_tone_beard": 30, "man_mountain_bik": 30, "man_mountain_biking_dark_skin_ton": 30, "man_mountain_biking_light_skin_ton": 30, "man_mountain_biking_medium_dark_skin_ton": 30, "man_mountain_biking_medium_light_skin_ton": 30, "man_mountain_biking_medium_skin_ton": 30, "man_mountain_biking_tone1": 30, "man_mountain_biking_tone2": 30, "man_mountain_biking_tone3": 30, "man_mountain_biking_tone4": 30, "man_mountain_biking_tone5": 30, "man_office_work": 30, "man_office_worker_dark_skin_ton": 30, "man_office_worker_light_skin_ton": 30, "man_office_worker_medium_dark_skin_ton": 30, "man_office_worker_medium_light_skin_ton": 30, "man_office_worker_medium_skin_ton": 30, "man_office_worker_tone1": 30, "man_office_worker_tone2": 30, "man_office_worker_tone3": 30, "man_office_worker_tone4": 30, "man_office_worker_tone5": 30, "man_pilot": 30, "man_pilot_dark_skin_ton": 30, "man_pilot_light_skin_ton": 30, "man_pilot_medium_dark_skin_ton": 30, "man_pilot_medium_light_skin_ton": 30, "man_pilot_medium_skin_ton": 30, "man_pilot_tone1": 30, "man_pilot_tone2": 30, "man_pilot_tone3": 30, "man_pilot_tone4": 30, "man_pilot_tone5": 30, "man_playing_handbal": 30, "man_playing_handball_dark_skin_ton": 30, "man_playing_handball_light_skin_ton": 30, "man_playing_handball_medium_dark_skin_ton": 30, "man_playing_handball_medium_light_skin_ton": 30, "man_playing_handball_medium_skin_ton": 30, "man_playing_handball_tone1": 30, "man_playing_handball_tone2": 30, "man_playing_handball_tone3": 30, "man_playing_handball_tone4": 30, "man_playing_handball_tone5": 30, "man_playing_water_polo": 30, "man_playing_water_polo_dark_skin_ton": 30, "man_playing_water_polo_light_skin_ton": 30, "man_playing_water_polo_medium_dark_skin_ton": 30, "man_playing_water_polo_medium_light_skin_ton": 30, "man_playing_water_polo_medium_skin_ton": 30, "man_playing_water_polo_tone1": 30, "man_playing_water_polo_tone2": 30, "man_playing_water_polo_tone3": 30, "man_playing_water_polo_tone4": 30, "man_playing_water_polo_tone5": 30, "man_police_offic": 30, "man_police_officer_dark_skin_ton": 30, "man_police_officer_light_skin_ton": 30, "man_police_officer_medium_dark_skin_ton": 30, "man_police_officer_medium_light_skin_ton": 30, "man_police_officer_medium_skin_ton": 30, "man_police_officer_tone1": 30, "man_police_officer_tone2": 30, "man_police_officer_tone3": 30, "man_police_officer_tone4": 30, "man_police_officer_tone5": 30, "man_pout": 30, "man_pouting_dark_skin_ton": 30, "man_pouting_light_skin_ton": 30, "man_pouting_medium_dark_skin_ton": 30, "man_pouting_medium_light_skin_ton": 30, "man_pouting_medium_skin_ton": 30, "man_pouting_tone1": 30, "man_pouting_tone2": 30, "man_pouting_tone3": 30, "man_pouting_tone4": 30, "man_pouting_tone5": 30, "man_raising_hand": 30, "man_raising_hand_dark_skin_ton": 30, "man_raising_hand_light_skin_ton": 30, "man_raising_hand_medium_dark_skin_ton": 30, "man_raising_hand_medium_light_skin_ton": 30, "man_raising_hand_medium_skin_ton": 30, "man_raising_hand_tone1": 30, "man_raising_hand_tone2": 30, "man_raising_hand_tone3": 30, "man_raising_hand_tone4": 30, "man_raising_hand_tone5": 30, "man_red_hair": 30, "man_red_haired_dark_skin_ton": 30, "man_red_haired_light_skin_ton": 30, "man_red_haired_medium_dark_skin_ton": 30, "man_red_haired_medium_light_skin_ton": 30, "man_red_haired_medium_skin_ton": 30, "man_red_haired_tone1": 30, "man_red_haired_tone2": 30, "man_red_haired_tone3": 30, "man_red_haired_tone4": 30, "man_red_haired_tone5": 30, "man_rowing_boat": 30, "man_rowing_boat_dark_skin_ton": 30, "man_rowing_boat_light_skin_ton": 30, "man_rowing_boat_medium_dark_skin_ton": 30, "man_rowing_boat_medium_light_skin_ton": 30, "man_rowing_boat_medium_skin_ton": 30, "man_rowing_boat_tone1": 30, "man_rowing_boat_tone2": 30, "man_rowing_boat_tone3": 30, "man_rowing_boat_tone4": 30, "man_rowing_boat_tone5": 30, "man_run": 30, "man_running_dark_skin_ton": 30, "man_running_light_skin_ton": 30, "man_running_medium_dark_skin_ton": 30, "man_running_medium_light_skin_ton": 30, "man_running_medium_skin_ton": 30, "man_running_tone1": 30, "man_running_tone2": 30, "man_running_tone3": 30, "man_running_tone4": 30, "man_running_tone5": 30, "man_scientist": 30, "man_scientist_dark_skin_ton": 30, "man_scientist_light_skin_ton": 30, "man_scientist_medium_dark_skin_ton": 30, "man_scientist_medium_light_skin_ton": 30, "man_scientist_medium_skin_ton": 30, "man_scientist_tone1": 30, "man_scientist_tone2": 30, "man_scientist_tone3": 30, "man_scientist_tone4": 30, "man_scientist_tone5": 30, "man_shrug": 30, "man_shrugging_dark_skin_ton": 30, "man_shrugging_light_skin_ton": 30, "man_shrugging_medium_dark_skin_ton": 30, "man_shrugging_medium_light_skin_ton": 30, "man_shrugging_medium_skin_ton": 30, "man_shrugging_tone1": 30, "man_shrugging_tone2": 30, "man_shrugging_tone3": 30, "man_shrugging_tone4": 30, "man_shrugging_tone5": 30, "man_sing": 30, "man_singer_dark_skin_ton": 30, "man_singer_light_skin_ton": 30, "man_singer_medium_dark_skin_ton": 30, "man_singer_medium_light_skin_ton": 30, "man_singer_medium_skin_ton": 30, "man_singer_tone1": 30, "man_singer_tone2": 30, "man_singer_tone3": 30, "man_singer_tone4": 30, "man_singer_tone5": 30, "man_stand": 30, "man_standing_dark_skin_ton": 30, "man_standing_light_skin_ton": 30, "man_standing_medium_dark_skin_ton": 30, "man_standing_medium_light_skin_ton": 30, "man_standing_medium_skin_ton": 30, "man_standing_tone1": 30, "man_standing_tone2": 30, "man_standing_tone3": 30, "man_standing_tone4": 30, "man_standing_tone5": 30, "man_stud": 30, "man_student_dark_skin_ton": 30, "man_student_light_skin_ton": 30, "man_student_medium_dark_skin_ton": 30, "man_student_medium_light_skin_ton": 30, "man_student_medium_skin_ton": 30, "man_student_tone1": 30, "man_student_tone2": 30, "man_student_tone3": 30, "man_student_tone4": 30, "man_student_tone5": 30, "man_superhero": 30, "man_superhero_dark_skin_ton": 30, "man_superhero_light_skin_ton": 30, "man_superhero_medium_dark_skin_ton": 30, "man_superhero_medium_light_skin_ton": 30, "man_superhero_medium_skin_ton": 30, "man_superhero_tone1": 30, "man_superhero_tone2": 30, "man_superhero_tone3": 30, "man_superhero_tone4": 30, "man_superhero_tone5": 30, "man_supervillain": 30, "man_supervillain_dark_skin_ton": 30, "man_supervillain_light_skin_ton": 30, "man_supervillain_medium_dark_skin_ton": 30, "man_supervillain_medium_light_skin_ton": 30, "man_supervillain_medium_skin_ton": 30, "man_supervillain_tone1": 30, "man_supervillain_tone2": 30, "man_supervillain_tone3": 30, "man_supervillain_tone4": 30, "man_supervillain_tone5": 30, "man_surf": 30, "man_surfing_dark_skin_ton": 30, "man_surfing_light_skin_ton": 30, "man_surfing_medium_dark_skin_ton": 30, "man_surfing_medium_light_skin_ton": 30, "man_surfing_medium_skin_ton": 30, "man_surfing_tone1": 30, "man_surfing_tone2": 30, "man_surfing_tone3": 30, "man_surfing_tone4": 30, "man_surfing_tone5": 30, "man_swim": 30, "man_swimming_dark_skin_ton": 30, "man_swimming_light_skin_ton": 30, "man_swimming_medium_dark_skin_ton": 30, "man_swimming_medium_light_skin_ton": 30, "man_swimming_medium_skin_ton": 30, "man_swimming_tone1": 30, "man_swimming_tone2": 30, "man_swimming_tone3": 30, "man_swimming_tone4": 30, "man_swimming_tone5": 30, "man_teach": 30, "man_teacher_dark_skin_ton": 30, "man_teacher_light_skin_ton": 30, "man_teacher_medium_dark_skin_ton": 30, "man_teacher_medium_light_skin_ton": 30, "man_teacher_medium_skin_ton": 30, "man_teacher_tone1": 30, "man_teacher_tone2": 30, "man_teacher_tone3": 30, "man_teacher_tone4": 30, "man_teacher_tone5": 30, "man_technologist": 30, "man_technologist_dark_skin_ton": 30, "man_technologist_light_skin_ton": 30, "man_technologist_medium_dark_skin_ton": 30, "man_technologist_medium_light_skin_ton": 30, "man_technologist_medium_skin_ton": 30, "man_technologist_tone1": 30, "man_technologist_tone2": 30, "man_technologist_tone3": 30, "man_technologist_tone4": 30, "man_technologist_tone5": 30, "man_tipping_hand": 30, "man_tipping_hand_dark_skin_ton": 30, "man_tipping_hand_light_skin_ton": 30, "man_tipping_hand_medium_dark_skin_ton": 30, "man_tipping_hand_medium_light_skin_ton": 30, "man_tipping_hand_medium_skin_ton": 30, "man_tipping_hand_tone1": 30, "man_tipping_hand_tone2": 30, "man_tipping_hand_tone3": 30, "man_tipping_hand_tone4": 30, "man_tipping_hand_tone5": 30, "man_tone1": 30, "man_tone1_beard": 30, "man_tone2": 30, "man_tone2_beard": 30, "man_tone3": 30, "man_tone3_beard": 30, "man_tone4": 30, "man_tone4_beard": 30, "man_tone5": 30, "man_tone5_beard": 30, "man_vampir": 30, "man_vampire_dark_skin_ton": 30, "man_vampire_light_skin_ton": 30, "man_vampire_medium_dark_skin_ton": 30, "man_vampire_medium_light_skin_ton": 30, "man_vampire_medium_skin_ton": 30, "man_vampire_tone1": 30, "man_vampire_tone2": 30, "man_vampire_tone3": 30, "man_vampire_tone4": 30, "man_vampire_tone5": 30, "man_walk": 30, "man_walking_dark_skin_ton": 30, "man_walking_light_skin_ton": 30, "man_walking_medium_dark_skin_ton": 30, "man_walking_medium_light_skin_ton": 30, "man_walking_medium_skin_ton": 30, "man_walking_tone1": 30, "man_walking_tone2": 30, "man_walking_tone3": 30, "man_walking_tone4": 30, "man_walking_tone5": 30, "man_wearing_turban": 30, "man_wearing_turban_dark_skin_ton": 30, "man_wearing_turban_light_skin_ton": 30, "man_wearing_turban_medium_dark_skin_ton": 30, "man_wearing_turban_medium_light_skin_ton": 30, "man_wearing_turban_medium_skin_ton": 30, "man_wearing_turban_tone1": 30, "man_wearing_turban_tone2": 30, "man_wearing_turban_tone3": 30, "man_wearing_turban_tone4": 30, "man_wearing_turban_tone5": 30, "man_white_hair": 30, "man_white_haired_dark_skin_ton": 30, "man_white_haired_light_skin_ton": 30, "man_white_haired_medium_dark_skin_ton": 30, "man_white_haired_medium_light_skin_ton": 30, "man_white_haired_medium_skin_ton": 30, "man_white_haired_tone1": 30, "man_white_haired_tone2": 30, "man_white_haired_tone3": 30, "man_white_haired_tone4": 30, "man_white_haired_tone5": 30, "man_with_chinese_cap": 30, "man_with_chinese_cap_tone1": 30, "man_with_chinese_cap_tone2": 30, "man_with_chinese_cap_tone3": 30, "man_with_chinese_cap_tone4": 30, "man_with_chinese_cap_tone5": 30, "man_with_gua_pi_mao": 30, "man_with_gua_pi_mao_tone1": 30, "man_with_gua_pi_mao_tone2": 30, "man_with_gua_pi_mao_tone3": 30, "man_with_gua_pi_mao_tone4": 30, "man_with_gua_pi_mao_tone5": 30, "man_with_probing_can": 30, "man_with_probing_cane_dark_skin_ton": 30, "man_with_probing_cane_light_skin_ton": 30, "man_with_probing_cane_medium_dark_skin_ton": 30, "man_with_probing_cane_medium_light_skin_ton": 30, "man_with_probing_cane_medium_skin_ton": 30, "man_with_probing_cane_tone1": 30, "man_with_probing_cane_tone2": 30, "man_with_probing_cane_tone3": 30, "man_with_probing_cane_tone4": 30, "man_with_probing_cane_tone5": 30, "man_with_turban": 30, "man_with_turban_tone1": 30, "man_with_turban_tone2": 30, "man_with_turban_tone3": 30, "man_with_turban_tone4": 30, "man_with_turban_tone5": 30, "man_with_veil": 30, "man_with_veil_dark_skin_ton": 30, "man_with_veil_light_skin_ton": 30, "man_with_veil_medium_dark_skin_ton": 30, "man_with_veil_medium_light_skin_ton": 30, "man_with_veil_medium_skin_ton": 30, "man_with_veil_tone1": 30, "man_with_veil_tone2": 30, "man_with_veil_tone3": 30, "man_with_veil_tone4": 30, "man_with_veil_tone5": 30, "man_zombi": 30, "mango": 30, "mans_sho": 30, "mantelpiece_clock": 30, "mantlepiece_clock": 30, "manual_wheelchair": 30, "maple_leaf": 30, "marshall_island": 30, "martial_arts_uniform": 30, "martiniqu": 30, "mask": [30, 152, 223, 350, 753, 804, 805, 816, 899, 928, 930], "massage_man": 30, "massage_tone1": 30, "massage_tone2": 30, "massage_tone3": 30, "massage_tone4": 30, "massage_tone5": 30, "massage_woman": 30, "mate": [30, 217, 809], "mauritania": 30, "mauritiu": 30, "mayott": 30, "mc": [30, 134, 249, 410], "md": [30, 115, 321, 758], "meat_on_bon": 30, "mechanic_dark_skin_ton": 30, "mechanic_light_skin_ton": 30, "mechanic_medium_dark_skin_ton": 30, "mechanic_medium_light_skin_ton": 30, "mechanic_medium_skin_ton": 30, "mechanic_tone1": 30, "mechanic_tone2": 30, "mechanic_tone3": 30, "mechanic_tone4": 30, "mechanic_tone5": 30, "mechanical_arm": 30, "mechanical_leg": 30, "medal": 30, "medal_militari": 30, "medal_sport": 30, "medical_symbol": 30, "mega": [30, 952], "melon": 30, "memo": 30, "men_holding_hands_dark_skin_ton": 30, "men_holding_hands_dark_skin_tone_light_skin_ton": 30, "men_holding_hands_dark_skin_tone_medium_dark_skin_ton": 30, "men_holding_hands_dark_skin_tone_medium_light_skin_ton": 30, "men_holding_hands_dark_skin_tone_medium_skin_ton": 30, "men_holding_hands_light_skin_ton": 30, "men_holding_hands_light_skin_tone_dark_skin_ton": 30, "men_holding_hands_light_skin_tone_medium_dark_skin_ton": 30, "men_holding_hands_light_skin_tone_medium_light_skin_ton": 30, "men_holding_hands_light_skin_tone_medium_skin_ton": 30, "men_holding_hands_medium_dark_skin_ton": 30, "men_holding_hands_medium_dark_skin_tone_dark_skin_ton": 30, "men_holding_hands_medium_dark_skin_tone_light_skin_ton": 30, "men_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 30, "men_holding_hands_medium_dark_skin_tone_medium_skin_ton": 30, "men_holding_hands_medium_light_skin_ton": 30, "men_holding_hands_medium_light_skin_tone_dark_skin_ton": 30, "men_holding_hands_medium_light_skin_tone_light_skin_ton": 30, "men_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 30, "men_holding_hands_medium_light_skin_tone_medium_skin_ton": 30, "men_holding_hands_medium_skin_ton": 30, "men_holding_hands_medium_skin_tone_dark_skin_ton": 30, "men_holding_hands_medium_skin_tone_light_skin_ton": 30, "men_holding_hands_medium_skin_tone_medium_dark_skin_ton": 30, "men_holding_hands_medium_skin_tone_medium_light_skin_ton": 30, "men_holding_hands_tone1": 30, "men_holding_hands_tone1_tone2": 30, "men_holding_hands_tone1_tone3": 30, "men_holding_hands_tone1_tone4": 30, "men_holding_hands_tone1_tone5": 30, "men_holding_hands_tone2": 30, "men_holding_hands_tone2_tone1": 30, "men_holding_hands_tone2_tone3": 30, "men_holding_hands_tone2_tone4": 30, "men_holding_hands_tone2_tone5": 30, "men_holding_hands_tone3": 30, "men_holding_hands_tone3_tone1": 30, "men_holding_hands_tone3_tone2": 30, "men_holding_hands_tone3_tone4": 30, "men_holding_hands_tone3_tone5": 30, "men_holding_hands_tone4": 30, "men_holding_hands_tone4_tone1": 30, "men_holding_hands_tone4_tone2": 30, "men_holding_hands_tone4_tone3": 30, "men_holding_hands_tone4_tone5": 30, "men_holding_hands_tone5": 30, "men_holding_hands_tone5_tone1": 30, "men_holding_hands_tone5_tone2": 30, "men_holding_hands_tone5_tone3": 30, "men_holding_hands_tone5_tone4": 30, "men_with_bunny_ears_parti": 30, "men_wrestl": 30, "mending_heart": 30, "menorah": 30, "men": [30, 348, 404, 527], "mermaid": 30, "mermaid_dark_skin_ton": 30, "mermaid_light_skin_ton": 30, "mermaid_medium_dark_skin_ton": 30, "mermaid_medium_light_skin_ton": 30, "mermaid_medium_skin_ton": 30, "mermaid_tone1": 30, "mermaid_tone2": 30, "mermaid_tone3": 30, "mermaid_tone4": 30, "mermaid_tone5": 30, "merman": 30, "merman_dark_skin_ton": 30, "merman_light_skin_ton": 30, "merman_medium_dark_skin_ton": 30, "merman_medium_light_skin_ton": 30, "merman_medium_skin_ton": 30, "merman_tone1": 30, "merman_tone2": 30, "merman_tone3": 30, "merman_tone4": 30, "merman_tone5": 30, "merperson": 30, "merperson_dark_skin_ton": 30, "merperson_light_skin_ton": 30, "merperson_medium_dark_skin_ton": 30, "merperson_medium_light_skin_ton": 30, "merperson_medium_skin_ton": 30, "merperson_tone1": 30, "merperson_tone2": 30, "merperson_tone3": 30, "merperson_tone4": 30, "merperson_tone5": 30, "metal_tone1": 30, "metal_tone2": 30, "metal_tone3": 30, "metal_tone4": 30, "metal_tone5": 30, "metro": 30, "mexico": 30, "mf": [30, 203, 1012], "mg": 30, "mh": 30, "microb": 30, "micronesia": 30, "microphone2": 30, "microphon": [30, 136, 138], "microscop": 30, "middle_finger_tone1": 30, "middle_finger_tone2": 30, "middle_finger_tone3": 30, "middle_finger_tone4": 30, "middle_finger_tone5": 30, "military_helmet": 30, "military_med": 30, "milk": 30, "milk_glass": 30, "milky_wai": 30, "minibu": 30, "minidisc": 30, "mirror": 30, "mk": 30, "ml": 30, "mm": [30, 409], "mn": 30, "mo": [30, 518], "mobile_phon": 30, "mobile_phone_off": 30, "moldova": 30, "monaco": 30, "money_mouth": 30, "money_mouth_fac": 30, "money_with_w": 30, "moneybag": 30, "mongolia": 30, "monkei": 30, "monkey_fac": 30, "monorail": 30, "montenegro": 30, "montserrat": 30, "moon": 30, "moon_cak": 30, "morocco": 30, "mortar_board": 30, "mosqu": 30, "mosquito": 30, "mother_christma": 30, "mother_christmas_tone1": 30, "mother_christmas_tone2": 30, "mother_christmas_tone3": 30, "mother_christmas_tone4": 30, "mother_christmas_tone5": 30, "motor_boat": 30, "motor_scoot": 30, "motorbik": 30, "motorboat": 30, "motorcycl": 30, "motorized_wheelchair": 30, "motorwai": 30, "mount_fuji": 30, "mountain": 30, "mountain_bicyclist": 30, "mountain_bicyclist_tone1": 30, "mountain_bicyclist_tone2": 30, "mountain_bicyclist_tone3": 30, "mountain_bicyclist_tone4": 30, "mountain_bicyclist_tone5": 30, "mountain_biking_man": 30, "mountain_biking_woman": 30, "mountain_cablewai": 30, "mountain_railwai": 30, "mountain_snow": 30, "mouse2": 30, "mous": [30, 131, 136, 817, 993, 1001], "mouse_three_button": 30, "mouse_trap": 30, "movie_camera": 30, "moyai": 30, "mozambiqu": 30, "mp": [30, 36], "mq": [30, 923, 924], "mr": [30, 111, 200, 211, 219, 223, 1017], "mrs_clau": 30, "mrs_claus_tone1": 30, "mrs_claus_tone2": 30, "mrs_claus_tone3": 30, "mrs_claus_tone4": 30, "mrs_claus_tone5": 30, "mt": [30, 310, 927, 928], "mu": [30, 223], "muscle_tone1": 30, "muscle_tone2": 30, "muscle_tone3": 30, "muscle_tone4": 30, "muscle_tone5": 30, "mushroom": 30, "musical_keyboard": 30, "musical_not": 30, "musical_scor": 30, "mute": 30, "mv": [30, 97, 111, 171, 173, 237, 246, 247, 267, 268, 301, 306, 710, 730, 787, 824, 837, 853, 1118], "mw": 30, "mx": 30, "mx_clau": 30, "mx_claus_dark_skin_ton": 30, "mx_claus_light_skin_ton": 30, "mx_claus_medium_dark_skin_ton": 30, "mx_claus_medium_light_skin_ton": 30, "mx_claus_medium_skin_ton": 30, "mx_claus_tone1": 30, "mx_claus_tone2": 30, "mx_claus_tone3": 30, "mx_claus_tone4": 30, "mx_claus_tone5": 30, "myanmar": 30, "mz": 30, "na": [30, 200, 203, 206, 219, 226, 244], "nail_car": 30, "nail_care_tone1": 30, "nail_care_tone2": 30, "nail_care_tone3": 30, "nail_care_tone4": 30, "nail_care_tone5": 30, "name_badg": 30, "namibia": 30, "national_park": 30, "nauru": 30, "nauseated_fac": 30, "nazar_amulet": 30, "nc": [30, 171, 173, 246, 267, 268, 330, 880], "ne": [30, 528, 546, 548, 895], "neckti": 30, "negative_squared_cross_mark": 30, "nepal": 30, "nerd_fac": 30, "nesting_dol": 30, "netherland": [30, 132, 980], "neutral_fac": 30, "new_caledonia": 30, "new_moon": 30, "new_moon_with_fac": 30, "new_zealand": 30, "newspaper2": 30, "newspap": [30, 41], "newspaper_rol": 30, "next_track": 30, "next_track_button": 30, "nf": [30, 203, 219, 226, 229, 244, 251, 261, 265, 874], "ng": [30, 132, 143, 247, 710, 853, 932, 934, 941, 942, 943], "ni": 30, "nicaragua": 30, "niger": 30, "nigeria": 30, "night_with_star": 30, "nine": [30, 151, 164, 174, 182, 200, 211, 301], "ninja_dark_skin_ton": 30, "ninja_light_skin_ton": 30, "ninja_medium_dark_skin_ton": 30, "ninja_medium_light_skin_ton": 30, "ninja_medium_skin_ton": 30, "ninja_tone1": 30, "ninja_tone2": 30, "ninja_tone3": 30, "ninja_tone4": 30, "ninja_tone5": 30, "niue": 30, "nl": [30, 330], "no_bel": 30, "no_bicycl": 30, "no_entri": 30, "no_entry_sign": 30, "no_good": 30, "no_good_man": 30, "no_good_tone1": 30, "no_good_tone2": 30, "no_good_tone3": 30, "no_good_tone4": 30, "no_good_tone5": 30, "no_good_woman": 30, "no_mobile_phon": 30, "no_mouth": 30, "no_pedestrian": 30, "no_smok": 30, "non": [30, 76, 111, 113, 127, 133, 134, 141, 158, 171, 193, 211, 219, 223, 228, 247, 256, 258, 265, 364, 386, 404, 420, 423, 475, 517, 519, 526, 528, 531, 539, 543, 544, 583, 598, 633, 639, 680, 684, 685, 700, 710, 743, 749, 762, 773, 794, 797, 799, 839, 864, 865, 873, 891, 906, 910, 917, 925, 950, 954, 966, 967, 990, 1003, 1023, 1040, 1079, 1080, 1086, 1100, 1115], "potable_wat": 30, "norfolk_island": 30, "north_korea": 30, "northern_mariana_island": 30, "norwai": 30, "nose": 30, "nose_tone1": 30, "nose_tone2": 30, "nose_tone3": 30, "nose_tone4": 30, "nose_tone5": 30, "notebook_with_decorative_cov": 30, "notepad_spir": 30, "np": [30, 154, 181, 249, 410, 1058, 1080], "nr": [30, 179, 223, 716], "nu": 30, "nut_and_bolt": 30, "nz": 30, "o2": [30, 398], "ocean": 30, "octagonal_sign": 30, "octopu": 30, "oden": 30, "office_work": 30, "office_worker_dark_skin_ton": 30, "office_worker_light_skin_ton": 30, "office_worker_medium_dark_skin_ton": 30, "office_worker_medium_light_skin_ton": 30, "office_worker_medium_skin_ton": 30, "office_worker_tone1": 30, "office_worker_tone2": 30, "office_worker_tone3": 30, "office_worker_tone4": 30, "office_worker_tone5": 30, "oil": 30, "oil_drum": 30, "ok": [30, 51, 63, 130, 132, 133, 137, 146, 163, 179, 209, 249, 297, 338, 374, 392, 394, 424, 433, 478, 480, 481, 530, 538, 541, 546, 551, 561, 613, 620, 631, 639, 654, 673, 676, 685, 686, 771, 862, 889, 907, 934, 945, 963, 966, 979, 1099], "ok_hand_tone1": 30, "ok_hand_tone2": 30, "ok_hand_tone3": 30, "ok_hand_tone4": 30, "ok_hand_tone5": 30, "ok_man": 30, "ok_woman": 30, "ok_woman_tone1": 30, "ok_woman_tone2": 30, "ok_woman_tone3": 30, "ok_woman_tone4": 30, "ok_woman_tone5": 30, "old_kei": 30, "older_adult": 30, "older_adult_dark_skin_ton": 30, "older_adult_light_skin_ton": 30, "older_adult_medium_dark_skin_ton": 30, "older_adult_medium_light_skin_ton": 30, "older_adult_medium_skin_ton": 30, "older_adult_tone1": 30, "older_adult_tone2": 30, "older_adult_tone3": 30, "older_adult_tone4": 30, "older_adult_tone5": 30, "older_man": 30, "older_man_tone1": 30, "older_man_tone2": 30, "older_man_tone3": 30, "older_man_tone4": 30, "older_man_tone5": 30, "older_woman": 30, "older_woman_tone1": 30, "older_woman_tone2": 30, "older_woman_tone3": 30, "older_woman_tone4": 30, "older_woman_tone5": 30, "oliv": [30, 195], "om": [30, 664], "om_symbol": 30, "oman": 30, "oncoming_automobil": 30, "oncoming_bu": 30, "oncoming_police_car": 30, "oncoming_taxi": 30, "one_piece_swimsuit": 30, "onion": 30, "open_file_fold": 30, "open_hand": 30, "open_hands_tone1": 30, "open_hands_tone2": 30, "open_hands_tone3": 30, "open_hands_tone4": 30, "open_hands_tone5": 30, "open_mouth": 30, "open_umbrella": 30, "ophiuchu": 30, "orange_book": 30, "orange_circl": 30, "orange_heart": 30, "orange_squar": 30, "orangutan": 30, "orthodox_cross": 30, "otter": 30, "outbox_trai": 30, "owl": 30, "ox": 30, "oyster": 30, "pa": [30, 200, 206, 216, 219, 374, 558, 560, 561], "paella": 30, "page_facing_up": 30, "page_with_curl": 30, "pager": [30, 849], "paintbrush": 30, "pakistan": 30, "palau": 30, "palestinian_territori": 30, "palm_tre": 30, "palms_up_togeth": 30, "palms_up_together_dark_skin_ton": 30, "palms_up_together_light_skin_ton": 30, "palms_up_together_medium_dark_skin_ton": 30, "palms_up_together_medium_light_skin_ton": 30, "palms_up_together_medium_skin_ton": 30, "palms_up_together_tone1": 30, "palms_up_together_tone2": 30, "palms_up_together_tone3": 30, "palms_up_together_tone4": 30, "palms_up_together_tone5": 30, "panama": 30, "pancak": 30, "panda_fac": 30, "paperclip": 30, "papua_new_guinea": 30, "parachut": 30, "paraguai": 30, "parasol_on_ground": 30, "park": 30, "parrot": 30, "part_alternation_mark": 30, "partly_sunni": 30, "partying_fac": 30, "passenger_ship": 30, "passport_control": 30, "pause_button": 30, "paw_print": 30, "pe": 30, "peac": 30, "peace_symbol": 30, "peach": 30, "peacock": 30, "peanut": 30, "pear": 30, "pen": 30, "pen_ballpoint": 30, "pen_fountain": 30, "pencil2": 30, "pencil": 30, "pensiv": 30, "people_holding_hand": 30, "people_holding_hands_dark_skin_ton": 30, "people_holding_hands_dark_skin_tone_light_skin_ton": 30, "people_holding_hands_dark_skin_tone_medium_dark_skin_ton": 30, "people_holding_hands_dark_skin_tone_medium_light_skin_ton": 30, "people_holding_hands_dark_skin_tone_medium_skin_ton": 30, "people_holding_hands_light_skin_ton": 30, "people_holding_hands_light_skin_tone_dark_skin_ton": 30, "people_holding_hands_light_skin_tone_medium_dark_skin_ton": 30, "people_holding_hands_light_skin_tone_medium_light_skin_ton": 30, "people_holding_hands_light_skin_tone_medium_skin_ton": 30, "people_holding_hands_medium_dark_skin_ton": 30, "people_holding_hands_medium_dark_skin_tone_dark_skin_ton": 30, "people_holding_hands_medium_dark_skin_tone_light_skin_ton": 30, "people_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 30, "people_holding_hands_medium_dark_skin_tone_medium_skin_ton": 30, "people_holding_hands_medium_light_skin_ton": 30, "people_holding_hands_medium_light_skin_tone_dark_skin_ton": 30, "people_holding_hands_medium_light_skin_tone_light_skin_ton": 30, "people_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 30, "people_holding_hands_medium_light_skin_tone_medium_skin_ton": 30, "people_holding_hands_medium_skin_ton": 30, "people_holding_hands_medium_skin_tone_dark_skin_ton": 30, "people_holding_hands_medium_skin_tone_light_skin_ton": 30, "people_holding_hands_medium_skin_tone_medium_dark_skin_ton": 30, "people_holding_hands_medium_skin_tone_medium_light_skin_ton": 30, "people_holding_hands_tone1": 30, "people_holding_hands_tone1_tone2": 30, "people_holding_hands_tone1_tone3": 30, "people_holding_hands_tone1_tone4": 30, "people_holding_hands_tone1_tone5": 30, "people_holding_hands_tone2": 30, "people_holding_hands_tone2_tone1": 30, "people_holding_hands_tone2_tone3": 30, "people_holding_hands_tone2_tone4": 30, "people_holding_hands_tone2_tone5": 30, "people_holding_hands_tone3": 30, "people_holding_hands_tone3_tone1": 30, "people_holding_hands_tone3_tone2": 30, "people_holding_hands_tone3_tone4": 30, "people_holding_hands_tone3_tone5": 30, "people_holding_hands_tone4": 30, "people_holding_hands_tone4_tone1": 30, "people_holding_hands_tone4_tone2": 30, "people_holding_hands_tone4_tone3": 30, "people_holding_hands_tone4_tone5": 30, "people_holding_hands_tone5": 30, "people_holding_hands_tone5_tone1": 30, "people_holding_hands_tone5_tone2": 30, "people_holding_hands_tone5_tone3": 30, "people_holding_hands_tone5_tone4": 30, "people_hug": 30, "people_with_bunny_ears_parti": 30, "people_wrestl": 30, "performing_art": 30, "persever": 30, "person_bald": 30, "person_bik": 30, "person_biking_tone1": 30, "person_biking_tone2": 30, "person_biking_tone3": 30, "person_biking_tone4": 30, "person_biking_tone5": 30, "person_bouncing_bal": 30, "person_bouncing_ball_tone1": 30, "person_bouncing_ball_tone2": 30, "person_bouncing_ball_tone3": 30, "person_bouncing_ball_tone4": 30, "person_bouncing_ball_tone5": 30, "person_bow": 30, "person_bowing_tone1": 30, "person_bowing_tone2": 30, "person_bowing_tone3": 30, "person_bowing_tone4": 30, "person_bowing_tone5": 30, "person_climb": 30, "person_climbing_dark_skin_ton": 30, "person_climbing_light_skin_ton": 30, "person_climbing_medium_dark_skin_ton": 30, "person_climbing_medium_light_skin_ton": 30, "person_climbing_medium_skin_ton": 30, "person_climbing_tone1": 30, "person_climbing_tone2": 30, "person_climbing_tone3": 30, "person_climbing_tone4": 30, "person_climbing_tone5": 30, "person_curly_hair": 30, "person_dark_skin_tone_bald": 30, "person_dark_skin_tone_curly_hair": 30, "person_dark_skin_tone_red_hair": 30, "person_dark_skin_tone_white_hair": 30, "person_doing_cartwheel": 30, "person_doing_cartwheel_tone1": 30, "person_doing_cartwheel_tone2": 30, "person_doing_cartwheel_tone3": 30, "person_doing_cartwheel_tone4": 30, "person_doing_cartwheel_tone5": 30, "person_facepalm": 30, "person_facepalming_tone1": 30, "person_facepalming_tone2": 30, "person_facepalming_tone3": 30, "person_facepalming_tone4": 30, "person_facepalming_tone5": 30, "person_feeding_babi": 30, "person_feeding_baby_dark_skin_ton": 30, "person_feeding_baby_light_skin_ton": 30, "person_feeding_baby_medium_dark_skin_ton": 30, "person_feeding_baby_medium_light_skin_ton": 30, "person_feeding_baby_medium_skin_ton": 30, "person_feeding_baby_tone1": 30, "person_feeding_baby_tone2": 30, "person_feeding_baby_tone3": 30, "person_feeding_baby_tone4": 30, "person_feeding_baby_tone5": 30, "person_fenc": 30, "person_frown": 30, "person_frowning_tone1": 30, "person_frowning_tone2": 30, "person_frowning_tone3": 30, "person_frowning_tone4": 30, "person_frowning_tone5": 30, "person_gesturing_no": 30, "person_gesturing_no_tone1": 30, "person_gesturing_no_tone2": 30, "person_gesturing_no_tone3": 30, "person_gesturing_no_tone4": 30, "person_gesturing_no_tone5": 30, "person_gesturing_ok": 30, "person_gesturing_ok_tone1": 30, "person_gesturing_ok_tone2": 30, "person_gesturing_ok_tone3": 30, "person_gesturing_ok_tone4": 30, "person_gesturing_ok_tone5": 30, "person_getting_haircut": 30, "person_getting_haircut_tone1": 30, "person_getting_haircut_tone2": 30, "person_getting_haircut_tone3": 30, "person_getting_haircut_tone4": 30, "person_getting_haircut_tone5": 30, "person_getting_massag": 30, "person_getting_massage_tone1": 30, "person_getting_massage_tone2": 30, "person_getting_massage_tone3": 30, "person_getting_massage_tone4": 30, "person_getting_massage_tone5": 30, "person_golf": 30, "person_golfing_dark_skin_ton": 30, "person_golfing_light_skin_ton": 30, "person_golfing_medium_dark_skin_ton": 30, "person_golfing_medium_light_skin_ton": 30, "person_golfing_medium_skin_ton": 30, "person_golfing_tone1": 30, "person_golfing_tone2": 30, "person_golfing_tone3": 30, "person_golfing_tone4": 30, "person_golfing_tone5": 30, "person_in_bed_dark_skin_ton": 30, "person_in_bed_light_skin_ton": 30, "person_in_bed_medium_dark_skin_ton": 30, "person_in_bed_medium_light_skin_ton": 30, "person_in_bed_medium_skin_ton": 30, "person_in_bed_tone1": 30, "person_in_bed_tone2": 30, "person_in_bed_tone3": 30, "person_in_bed_tone4": 30, "person_in_bed_tone5": 30, "person_in_lotus_posit": 30, "person_in_lotus_position_dark_skin_ton": 30, "person_in_lotus_position_light_skin_ton": 30, "person_in_lotus_position_medium_dark_skin_ton": 30, "person_in_lotus_position_medium_light_skin_ton": 30, "person_in_lotus_position_medium_skin_ton": 30, "person_in_lotus_position_tone1": 30, "person_in_lotus_position_tone2": 30, "person_in_lotus_position_tone3": 30, "person_in_lotus_position_tone4": 30, "person_in_lotus_position_tone5": 30, "person_in_manual_wheelchair": 30, "person_in_manual_wheelchair_dark_skin_ton": 30, "person_in_manual_wheelchair_light_skin_ton": 30, "person_in_manual_wheelchair_medium_dark_skin_ton": 30, "person_in_manual_wheelchair_medium_light_skin_ton": 30, "person_in_manual_wheelchair_medium_skin_ton": 30, "person_in_manual_wheelchair_tone1": 30, "person_in_manual_wheelchair_tone2": 30, "person_in_manual_wheelchair_tone3": 30, "person_in_manual_wheelchair_tone4": 30, "person_in_manual_wheelchair_tone5": 30, "person_in_motorized_wheelchair": 30, "person_in_motorized_wheelchair_dark_skin_ton": 30, "person_in_motorized_wheelchair_light_skin_ton": 30, "person_in_motorized_wheelchair_medium_dark_skin_ton": 30, "person_in_motorized_wheelchair_medium_light_skin_ton": 30, "person_in_motorized_wheelchair_medium_skin_ton": 30, "person_in_motorized_wheelchair_tone1": 30, "person_in_motorized_wheelchair_tone2": 30, "person_in_motorized_wheelchair_tone3": 30, "person_in_motorized_wheelchair_tone4": 30, "person_in_motorized_wheelchair_tone5": 30, "person_in_steamy_room": 30, "person_in_steamy_room_dark_skin_ton": 30, "person_in_steamy_room_light_skin_ton": 30, "person_in_steamy_room_medium_dark_skin_ton": 30, "person_in_steamy_room_medium_light_skin_ton": 30, "person_in_steamy_room_medium_skin_ton": 30, "person_in_steamy_room_tone1": 30, "person_in_steamy_room_tone2": 30, "person_in_steamy_room_tone3": 30, "person_in_steamy_room_tone4": 30, "person_in_steamy_room_tone5": 30, "person_in_tuxedo": 30, "person_in_tuxedo_tone1": 30, "person_in_tuxedo_tone2": 30, "person_in_tuxedo_tone3": 30, "person_in_tuxedo_tone4": 30, "person_in_tuxedo_tone5": 30, "person_juggl": 30, "person_juggling_tone1": 30, "person_juggling_tone2": 30, "person_juggling_tone3": 30, "person_juggling_tone4": 30, "person_juggling_tone5": 30, "person_kneel": 30, "person_kneeling_dark_skin_ton": 30, "person_kneeling_light_skin_ton": 30, "person_kneeling_medium_dark_skin_ton": 30, "person_kneeling_medium_light_skin_ton": 30, "person_kneeling_medium_skin_ton": 30, "person_kneeling_tone1": 30, "person_kneeling_tone2": 30, "person_kneeling_tone3": 30, "person_kneeling_tone4": 30, "person_kneeling_tone5": 30, "person_lifting_weight": 30, "person_lifting_weights_tone1": 30, "person_lifting_weights_tone2": 30, "person_lifting_weights_tone3": 30, "person_lifting_weights_tone4": 30, "person_lifting_weights_tone5": 30, "person_light_skin_tone_bald": 30, "person_light_skin_tone_curly_hair": 30, "person_light_skin_tone_red_hair": 30, "person_light_skin_tone_white_hair": 30, "person_medium_dark_skin_tone_bald": 30, "person_medium_dark_skin_tone_curly_hair": 30, "person_medium_dark_skin_tone_red_hair": 30, "person_medium_dark_skin_tone_white_hair": 30, "person_medium_light_skin_tone_bald": 30, "person_medium_light_skin_tone_curly_hair": 30, "person_medium_light_skin_tone_red_hair": 30, "person_medium_light_skin_tone_white_hair": 30, "person_medium_skin_tone_bald": 30, "person_medium_skin_tone_curly_hair": 30, "person_medium_skin_tone_red_hair": 30, "person_medium_skin_tone_white_hair": 30, "person_mountain_bik": 30, "person_mountain_biking_tone1": 30, "person_mountain_biking_tone2": 30, "person_mountain_biking_tone3": 30, "person_mountain_biking_tone4": 30, "person_mountain_biking_tone5": 30, "person_playing_handbal": 30, "person_playing_handball_tone1": 30, "person_playing_handball_tone2": 30, "person_playing_handball_tone3": 30, "person_playing_handball_tone4": 30, "person_playing_handball_tone5": 30, "person_playing_water_polo": 30, "person_playing_water_polo_tone1": 30, "person_playing_water_polo_tone2": 30, "person_playing_water_polo_tone3": 30, "person_playing_water_polo_tone4": 30, "person_playing_water_polo_tone5": 30, "person_pout": 30, "person_pouting_tone1": 30, "person_pouting_tone2": 30, "person_pouting_tone3": 30, "person_pouting_tone4": 30, "person_pouting_tone5": 30, "person_raising_hand": 30, "person_raising_hand_tone1": 30, "person_raising_hand_tone2": 30, "person_raising_hand_tone3": 30, "person_raising_hand_tone4": 30, "person_raising_hand_tone5": 30, "person_red_hair": 30, "person_rowing_boat": 30, "person_rowing_boat_tone1": 30, "person_rowing_boat_tone2": 30, "person_rowing_boat_tone3": 30, "person_rowing_boat_tone4": 30, "person_rowing_boat_tone5": 30, "person_run": 30, "person_running_tone1": 30, "person_running_tone2": 30, "person_running_tone3": 30, "person_running_tone4": 30, "person_running_tone5": 30, "person_shrug": 30, "person_shrugging_tone1": 30, "person_shrugging_tone2": 30, "person_shrugging_tone3": 30, "person_shrugging_tone4": 30, "person_shrugging_tone5": 30, "person_stand": 30, "person_standing_dark_skin_ton": 30, "person_standing_light_skin_ton": 30, "person_standing_medium_dark_skin_ton": 30, "person_standing_medium_light_skin_ton": 30, "person_standing_medium_skin_ton": 30, "person_standing_tone1": 30, "person_standing_tone2": 30, "person_standing_tone3": 30, "person_standing_tone4": 30, "person_standing_tone5": 30, "person_surf": 30, "person_surfing_tone1": 30, "person_surfing_tone2": 30, "person_surfing_tone3": 30, "person_surfing_tone4": 30, "person_surfing_tone5": 30, "person_swim": 30, "person_swimming_tone1": 30, "person_swimming_tone2": 30, "person_swimming_tone3": 30, "person_swimming_tone4": 30, "person_swimming_tone5": 30, "person_tipping_hand": 30, "person_tipping_hand_tone1": 30, "person_tipping_hand_tone2": 30, "person_tipping_hand_tone3": 30, "person_tipping_hand_tone4": 30, "person_tipping_hand_tone5": 30, "person_tone1_bald": 30, "person_tone1_curly_hair": 30, "person_tone1_red_hair": 30, "person_tone1_white_hair": 30, "person_tone2_bald": 30, "person_tone2_curly_hair": 30, "person_tone2_red_hair": 30, "person_tone2_white_hair": 30, "person_tone3_bald": 30, "person_tone3_curly_hair": 30, "person_tone3_red_hair": 30, "person_tone3_white_hair": 30, "person_tone4_bald": 30, "person_tone4_curly_hair": 30, "person_tone4_red_hair": 30, "person_tone4_white_hair": 30, "person_tone5_bald": 30, "person_tone5_curly_hair": 30, "person_tone5_red_hair": 30, "person_tone5_white_hair": 30, "person_walk": 30, "person_walking_tone1": 30, "person_walking_tone2": 30, "person_walking_tone3": 30, "person_walking_tone4": 30, "person_walking_tone5": 30, "person_wearing_turban": 30, "person_wearing_turban_tone1": 30, "person_wearing_turban_tone2": 30, "person_wearing_turban_tone3": 30, "person_wearing_turban_tone4": 30, "person_wearing_turban_tone5": 30, "person_white_hair": 30, "person_with_bal": 30, "person_with_ball_tone1": 30, "person_with_ball_tone2": 30, "person_with_ball_tone3": 30, "person_with_ball_tone4": 30, "person_with_ball_tone5": 30, "person_with_blond_hair": 30, "person_with_blond_hair_tone1": 30, "person_with_blond_hair_tone2": 30, "person_with_blond_hair_tone3": 30, "person_with_blond_hair_tone4": 30, "person_with_blond_hair_tone5": 30, "person_with_pouting_fac": 30, "person_with_pouting_face_tone1": 30, "person_with_pouting_face_tone2": 30, "person_with_pouting_face_tone3": 30, "person_with_pouting_face_tone4": 30, "person_with_pouting_face_tone5": 30, "person_with_probing_can": 30, "person_with_probing_cane_dark_skin_ton": 30, "person_with_probing_cane_light_skin_ton": 30, "person_with_probing_cane_medium_dark_skin_ton": 30, "person_with_probing_cane_medium_light_skin_ton": 30, "person_with_probing_cane_medium_skin_ton": 30, "person_with_probing_cane_tone1": 30, "person_with_probing_cane_tone2": 30, "person_with_probing_cane_tone3": 30, "person_with_probing_cane_tone4": 30, "person_with_probing_cane_tone5": 30, "person_with_veil": 30, "person_with_veil_tone1": 30, "person_with_veil_tone2": 30, "person_with_veil_tone3": 30, "person_with_veil_tone4": 30, "person_with_veil_tone5": 30, "peru": 30, "petri_dish": 30, "pf": [30, 134], "pg": [30, 402], "ph": 30, "philippin": 30, "phone": 30, "pick": [30, 76, 124, 134, 141, 192, 412, 481, 913, 943, 948], "pickup_truck": 30, "pie": 30, "pig2": 30, "pig_nos": 30, "pill": 30, "pilot": 30, "pilot_dark_skin_ton": 30, "pilot_light_skin_ton": 30, "pilot_medium_dark_skin_ton": 30, "pilot_medium_light_skin_ton": 30, "pilot_medium_skin_ton": 30, "pilot_tone1": 30, "pilot_tone2": 30, "pilot_tone3": 30, "pilot_tone4": 30, "pilot_tone5": 30, "pinched_fing": 30, "pinched_fingers_dark_skin_ton": 30, "pinched_fingers_light_skin_ton": 30, "pinched_fingers_medium_dark_skin_ton": 30, "pinched_fingers_medium_light_skin_ton": 30, "pinched_fingers_medium_skin_ton": 30, "pinched_fingers_tone1": 30, "pinched_fingers_tone2": 30, "pinched_fingers_tone3": 30, "pinched_fingers_tone4": 30, "pinched_fingers_tone5": 30, "pinching_hand": 30, "pinching_hand_dark_skin_ton": 30, "pinching_hand_light_skin_ton": 30, "pinching_hand_medium_dark_skin_ton": 30, "pinching_hand_medium_light_skin_ton": 30, "pinching_hand_medium_skin_ton": 30, "pinching_hand_tone1": 30, "pinching_hand_tone2": 30, "pinching_hand_tone3": 30, "pinching_hand_tone4": 30, "pinching_hand_tone5": 30, "pineappl": [30, 255], "ping_pong": 30, "pirate_flag": 30, "pisc": 30, "pitcairn_island": 30, "pizza": 30, "pi\u00f1ata": 30, "pk": 30, "pl": 30, "placard": 30, "place_of_worship": 30, "plate_with_cutleri": 30, "play_or_pause_button": 30, "play_paus": 30, "pleading_fac": 30, "plunger": 30, "pm": [30, 36], "pn": 30, "point_down": 30, "point_down_tone1": 30, "point_down_tone2": 30, "point_down_tone3": 30, "point_down_tone4": 30, "point_down_tone5": 30, "point_left": 30, "point_left_tone1": 30, "point_left_tone2": 30, "point_left_tone3": 30, "point_left_tone4": 30, "point_left_tone5": 30, "point_right": 30, "point_right_tone1": 30, "point_right_tone2": 30, "point_right_tone3": 30, "point_right_tone4": 30, "point_right_tone5": 30, "point_up_2": 30, "point_up_2_tone1": 30, "point_up_2_tone2": 30, "point_up_2_tone3": 30, "point_up_2_tone4": 30, "point_up_2_tone5": 30, "point_up_tone1": 30, "point_up_tone2": 30, "point_up_tone3": 30, "point_up_tone4": 30, "point_up_tone5": 30, "poland": 30, "polar_bear": 30, "police_car": 30, "police_offic": 30, "police_officer_tone1": 30, "police_officer_tone2": 30, "police_officer_tone3": 30, "police_officer_tone4": 30, "police_officer_tone5": 30, "policeman": 30, "policewoman": 30, "poo": 30, "poodl": 30, "poop": 30, "popcorn": 30, "portug": 30, "post_offic": 30, "postal_horn": 30, "postbox": 30, "potato": 30, "potted_pl": 30, "pouch": 30, "poultry_leg": 30, "pound": [30, 34], "pound_symbol": 30, "pouting_cat": 30, "pouting_man": 30, "pouting_woman": 30, "pr": [30, 33, 219, 234], "prai": 30, "pray_tone1": 30, "pray_tone2": 30, "pray_tone3": 30, "pray_tone4": 30, "pray_tone5": 30, "prayer_bead": 30, "pregnant_woman": 30, "pregnant_woman_tone1": 30, "pregnant_woman_tone2": 30, "pregnant_woman_tone3": 30, "pregnant_woman_tone4": 30, "pregnant_woman_tone5": 30, "pretzel": 30, "previous_track": 30, "previous_track_button": 30, "princ": 30, "prince_tone1": 30, "prince_tone2": 30, "prince_tone3": 30, "prince_tone4": 30, "prince_tone5": 30, "princess": 30, "princess_tone1": 30, "princess_tone2": 30, "princess_tone3": 30, "princess_tone4": 30, "princess_tone5": 30, "printer": 30, "probing_can": 30, "projector": 30, "p": [30, 36, 61, 111, 127, 131, 132, 136, 137, 143, 159, 171, 173, 174, 190, 203, 219, 223, 249, 251, 334, 368, 374, 377, 378, 381, 382, 386, 457, 477, 478, 481, 482, 528, 530, 533, 538, 539, 540, 541, 542, 544, 546, 547, 561, 569, 629, 632, 633, 636, 638, 641, 650, 651, 652, 654, 656, 657, 660, 661, 662, 668, 670, 671, 680, 684, 689, 700, 705, 708, 721, 757, 776, 784, 785, 794, 817, 819, 836, 839, 846, 856, 864, 873, 880, 891, 900, 915, 928, 943, 952, 1012, 1094, 1118], "pt": [30, 688, 788, 915], "pud": 30, "puerto_rico": 30, "punch": 30, "punch_tone1": 30, "punch_tone2": 30, "punch_tone3": 30, "punch_tone4": 30, "punch_tone5": 30, "purple_circl": 30, "purple_heart": 30, "purple_squar": 30, "purs": 30, "pushpin": 30, "put_litter_in_its_plac": 30, "pw": 30, "qa": 30, "qatar": 30, "rabbit2": 30, "rabbit": 30, "raccoon": 30, "race_car": 30, "racehors": 30, "racing_car": 30, "racing_motorcycl": 30, "radio": 30, "radio_button": 30, "radioact": 30, "radioactive_sign": 30, "rage": 30, "railroad_track": 30, "railway_car": 30, "railway_track": 30, "rainbow": 30, "rainbow_flag": 30, "raised_back_of_hand": 30, "raised_back_of_hand_tone1": 30, "raised_back_of_hand_tone2": 30, "raised_back_of_hand_tone3": 30, "raised_back_of_hand_tone4": 30, "raised_back_of_hand_tone5": 30, "raised_hand": 30, "raised_hand_tone1": 30, "raised_hand_tone2": 30, "raised_hand_tone3": 30, "raised_hand_tone4": 30, "raised_hand_tone5": 30, "raised_hand_with_fingers_splai": 30, "raised_hand_with_fingers_splayed_tone1": 30, "raised_hand_with_fingers_splayed_tone2": 30, "raised_hand_with_fingers_splayed_tone3": 30, "raised_hand_with_fingers_splayed_tone4": 30, "raised_hand_with_fingers_splayed_tone5": 30, "raised_hand_with_part_between_middle_and_ring_fing": 30, "raised_hand_with_part_between_middle_and_ring_fingers_tone1": 30, "raised_hand_with_part_between_middle_and_ring_fingers_tone2": 30, "raised_hand_with_part_between_middle_and_ring_fingers_tone3": 30, "raised_hand_with_part_between_middle_and_ring_fingers_tone4": 30, "raised_hand_with_part_between_middle_and_ring_fingers_tone5": 30, "raised_hands_tone1": 30, "raised_hands_tone2": 30, "raised_hands_tone3": 30, "raised_hands_tone4": 30, "raised_hands_tone5": 30, "raising_hand": 30, "raising_hand_man": 30, "raising_hand_tone1": 30, "raising_hand_tone2": 30, "raising_hand_tone3": 30, "raising_hand_tone4": 30, "raising_hand_tone5": 30, "raising_hand_woman": 30, "ram": [30, 133, 134, 138, 256, 757, 793, 795, 879], "ramen": 30, "rat": 30, "razor": 30, "re": [30, 36, 61, 133, 138, 170, 179, 182, 183, 193, 196, 203, 204, 206, 211, 213, 219, 223, 229, 231, 232, 241, 244, 248, 264, 265, 271, 301, 306, 364, 410, 411, 420, 428, 453, 478, 530, 536, 654, 676, 726, 762, 771, 776, 818, 907, 928, 943, 947, 952, 957, 976, 999, 1050, 1055], "receipt": 30, "record_button": 30, "recycl": 30, "red_car": 30, "red_circl": 30, "red_envelop": 30, "red_hair": 30, "red_squar": 30, "regional_indicator_a": 30, "regional_indicator_b": 30, "regional_indicator_c": 30, "regional_indicator_d": 30, "regional_indicator_": 30, "regional_indicator_f": 30, "regional_indicator_g": 30, "regional_indicator_h": 30, "regional_indicator_i": 30, "regional_indicator_j": 30, "regional_indicator_k": 30, "regional_indicator_l": 30, "regional_indicator_m": 30, "regional_indicator_n": 30, "regional_indicator_o": 30, "regional_indicator_p": 30, "regional_indicator_q": 30, "regional_indicator_r": 30, "regional_indicator_t": 30, "regional_indicator_u": 30, "regional_indicator_v": 30, "regional_indicator_w": 30, "regional_indicator_x": 30, "regional_indicator_z": 30, "regist": [30, 34, 36, 131, 141, 149, 174, 178, 206, 219, 265, 287, 350, 384, 435, 463, 480, 482, 492, 713, 720, 728, 735, 741, 753, 844, 861, 877, 881, 982, 1074], "relax": 30, "reliev": [30, 55], "reminder_ribbon": 30, "repeat": [30, 41, 98, 111, 121, 137, 192, 217, 247, 308, 398, 410, 546, 710, 757, 787, 817, 821, 825, 828, 831, 836, 837, 853, 866, 893, 990], "repeat_on": 30, "rescue_worker_helmet": 30, "restroom": 30, "reunion": 30, "reversed_hand_with_middle_finger_extend": 30, "reversed_hand_with_middle_finger_extended_tone1": 30, "reversed_hand_with_middle_finger_extended_tone2": 30, "reversed_hand_with_middle_finger_extended_tone3": 30, "reversed_hand_with_middle_finger_extended_tone4": 30, "reversed_hand_with_middle_finger_extended_tone5": 30, "revolving_heart": 30, "rewind": [30, 293, 676], "rhino": 30, "rhinocero": 30, "ribbon": 30, "rice": 30, "rice_bal": 30, "rice_crack": 30, "rice_scen": 30, "right_anger_bubbl": 30, "right_facing_fist": 30, "right_facing_fist_tone1": 30, "right_facing_fist_tone2": 30, "right_facing_fist_tone3": 30, "right_facing_fist_tone4": 30, "right_facing_fist_tone5": 30, "right_fist": 30, "right_fist_tone1": 30, "right_fist_tone2": 30, "right_fist_tone3": 30, "right_fist_tone4": 30, "right_fist_tone5": 30, "ring": [30, 33, 36, 817], "ringed_planet": 30, "ro": 30, "robot": [30, 219], "robot_fac": 30, "rock": [30, 260, 279, 408, 947, 949, 1088], "rocket": [30, 138], "rofl": 30, "roll_ey": 30, "roll_of_pap": 30, "rolled_up_newspap": 30, "roller_coast": 30, "roller_sk": 30, "rolling_on_the_floor_laugh": 30, "romania": 30, "rooster": 30, "rosett": 30, "rotating_light": 30, "round_pushpin": 30, "rowboat": 30, "rowboat_tone1": 30, "rowboat_tone2": 30, "rowboat_tone3": 30, "rowboat_tone4": 30, "rowboat_tone5": 30, "rowing_man": 30, "rowing_woman": 30, "ru": 30, "rugby_footbal": 30, "runner": [30, 42, 1099, 1130], "runner_tone1": 30, "runner_tone2": 30, "runner_tone3": 30, "runner_tone4": 30, "runner_tone5": 30, "running_man": 30, "running_shirt_with_sash": 30, "running_woman": 30, "russia": [30, 1071], "rw": [30, 59, 61, 132, 133, 142, 150, 219, 229, 417, 708, 713, 721, 788, 799, 802, 813, 816, 836, 839, 854, 861, 862, 863, 865, 874, 885, 888, 889, 897, 925, 931, 932, 933, 943, 945, 946, 982, 1010], "rwanda": 30, "safety_pin": 30, "safety_vest": 30, "sagittariu": 30, "sailboat": 30, "saint_martin": 30, "sake": 30, "salad": 30, "salt": [30, 813], "samoa": 30, "san_marino": 30, "sandal": 30, "sandwich": 30, "santa": 30, "santa_tone1": 30, "santa_tone2": 30, "santa_tone3": 30, "santa_tone4": 30, "santa_tone5": 30, "sao_tome_princip": 30, "sari": 30, "satellit": 30, "satellite_orbit": 30, "saudi": 30, "saudi_arabia": 30, "saudiarabia": 30, "sauropod": 30, "saxophon": 30, "sb": [30, 248], "sc": [30, 33], "scale": [30, 76, 163, 209, 223, 398, 861, 934, 947], "scarf": 30, "school": [30, 223, 470, 504, 1080, 1113], "school_satchel": 30, "scientist": [30, 163, 979, 1060, 1061, 1062, 1072], "scientist_dark_skin_ton": 30, "scientist_light_skin_ton": 30, "scientist_medium_dark_skin_ton": 30, "scientist_medium_light_skin_ton": 30, "scientist_medium_skin_ton": 30, "scientist_tone1": 30, "scientist_tone2": 30, "scientist_tone3": 30, "scientist_tone4": 30, "scientist_tone5": 30, "scissor": 30, "scooter": 30, "scorpion": 30, "scorpiu": 30, "scotland": 30, "scream": [30, 192, 817], "scream_cat": 30, "screwdriv": 30, "scroll": [30, 137, 470], "sd": [30, 203, 219, 223, 226, 229, 244, 251, 261, 265, 757], "se": [30, 533], "seal": 30, "seat": 30, "second_plac": 30, "second_place_med": 30, "secret": [30, 613, 634, 870, 954, 1069], "see_no_evil": 30, "seedl": 30, "selfi": 30, "selfie_tone1": 30, "selfie_tone2": 30, "selfie_tone3": 30, "selfie_tone4": 30, "selfie_tone5": 30, "seneg": 30, "serbia": 30, "service_dog": 30, "seven": [30, 34, 82, 151, 164, 174, 182, 211, 301, 1022, 1033], "sewing_needl": 30, "seychel": 30, "sg": 30, "sh": [30, 59, 138, 142, 231, 730, 784, 785, 802, 863, 885, 895, 1042], "shaking_hand": 30, "shaking_hands_tone1": 30, "shaking_hands_tone2": 30, "shaking_hands_tone3": 30, "shaking_hands_tone4": 30, "shaking_hands_tone5": 30, "shallow_pan_of_food": 30, "shamrock": 30, "shark": 30, "shaved_ic": 30, "sheep": 30, "shelled_peanut": 30, "shield": [30, 131], "shinto_shrin": 30, "ship": [30, 136], "shirt": [30, 41, 128], "shit": [30, 190], "shop": [30, 255], "shopping_bag": 30, "shopping_cart": 30, "shopping_trollei": 30, "shower": 30, "shrimp": 30, "shrug": 30, "shrug_tone1": 30, "shrug_tone2": 30, "shrug_tone3": 30, "shrug_tone4": 30, "shrug_tone5": 30, "shushing_fac": 30, "si": 30, "sick": [30, 432], "sierra_leon": 30, "sign_of_the_horn": 30, "sign_of_the_horns_tone1": 30, "sign_of_the_horns_tone2": 30, "sign_of_the_horns_tone3": 30, "sign_of_the_horns_tone4": 30, "sign_of_the_horns_tone5": 30, "signal_strength": 30, "singapor": 30, "singer": 30, "singer_dark_skin_ton": 30, "singer_light_skin_ton": 30, "singer_medium_dark_skin_ton": 30, "singer_medium_light_skin_ton": 30, "singer_medium_skin_ton": 30, "singer_tone1": 30, "singer_tone2": 30, "singer_tone3": 30, "singer_tone4": 30, "singer_tone5": 30, "sint_maarten": 30, "six": [30, 151, 164, 174, 182, 200, 301, 990], "six_pointed_star": 30, "sj": 30, "sk": 30, "skateboard": 30, "skeleton": [30, 134, 146, 411, 786], "ski": 30, "skier": 30, "skull": 30, "skull_and_crossbon": 30, "skull_crossbon": 30, "skunk": 30, "sl": [30, 293, 915], "sled": 30, "sleeping_accommod": 30, "sleeping_b": 30, "sleepi": 30, "sleuth_or_spi": 30, "sleuth_or_spy_tone1": 30, "sleuth_or_spy_tone2": 30, "sleuth_or_spy_tone3": 30, "sleuth_or_spy_tone4": 30, "sleuth_or_spy_tone5": 30, "slight_frown": 30, "slight_smil": 30, "slightly_frowning_fac": 30, "slightly_smiling_fac": 30, "slot_machin": 30, "sloth": 30, "slovakia": 30, "slovenia": [30, 198], "sm": 30, "small_airplan": 30, "small_blue_diamond": 30, "small_orange_diamond": 30, "small_red_triangl": 30, "small_red_triangle_down": 30, "smile": [30, 33], "smile_cat": 30, "smilei": [30, 61], "smiley_cat": 30, "smiling_face_with_3_heart": 30, "smiling_face_with_tear": 30, "smiling_imp": 30, "smirk": 30, "smirk_cat": 30, "smoke": 30, "sn": 30, "snail": 30, "snake": 30, "sneez": 30, "sneezing_fac": 30, "snow_capped_mountain": 30, "snowboard": 30, "snowboarder_dark_skin_ton": 30, "snowboarder_light_skin_ton": 30, "snowboarder_medium_dark_skin_ton": 30, "snowboarder_medium_light_skin_ton": 30, "snowboarder_medium_skin_ton": 30, "snowboarder_tone1": 30, "snowboarder_tone2": 30, "snowboarder_tone3": 30, "snowboarder_tone4": 30, "snowboarder_tone5": 30, "snowflak": 30, "snowman2": 30, "snowman": 30, "snowman_with_snow": 30, "sob": 30, "soccer": 30, "sock": 30, "softbal": 30, "solomon_island": 30, "somalia": 30, "soon": [30, 132, 133, 138, 533, 620, 757, 863, 915, 929, 1074], "sound": [30, 57, 60, 130, 134, 137, 138, 207, 690, 799, 854, 862, 863, 1093], "south_africa": 30, "south_georgia_south_sandwich_island": 30, "south_sudan": 30, "space_invad": 30, "spade": [30, 36], "spaghetti": [30, 398, 409], "spain": 30, "sparkl": 30, "sparkler": 30, "sparkling_heart": 30, "speak_no_evil": 30, "speaker": 30, "speaking_head": 30, "speaking_head_in_silhouett": 30, "speech_balloon": 30, "speech_left": 30, "speedboat": 30, "spider": 30, "spider_web": 30, "spiral_calendar": 30, "spiral_calendar_pad": 30, "spiral_note_pad": 30, "spiral_notepad": 30, "spong": 30, "spoon": 30, "sports_med": 30, "spy": 30, "spy_tone1": 30, "spy_tone2": 30, "spy_tone3": 30, "spy_tone4": 30, "spy_tone5": 30, "squeeze_bottl": 30, "squid": 30, "sr": [30, 203, 1012], "sri_lanka": 30, "st": [30, 197, 410, 925, 927, 928], "st_barthelemi": 30, "st_helena": 30, "st_kitts_nevi": 30, "st_lucia": 30, "st_pierre_miquelon": 30, "st_vincent_grenadin": 30, "stadium": 30, "star2": 30, "star": [30, 36, 570, 863, 945], "star_and_cresc": 30, "star_of_david": 30, "star_struck": 30, "station": 30, "statue_of_liberti": 30, "steam_locomot": 30, "stethoscop": 30, "stew": 30, "stop_button": 30, "stop_sign": 30, "stopwatch": 30, "straight_rul": 30, "strawberri": 30, "stuck_out_tongu": 30, "stuck_out_tongue_closed_ey": 30, "stuck_out_tongue_winking_ey": 30, "student": [30, 99, 104, 111, 138, 231, 286, 287, 292, 293, 301, 955, 1094], "student_dark_skin_ton": 30, "student_light_skin_ton": 30, "student_medium_dark_skin_ton": 30, "student_medium_light_skin_ton": 30, "student_medium_skin_ton": 30, "student_tone1": 30, "student_tone2": 30, "student_tone3": 30, "student_tone4": 30, "student_tone5": 30, "studio_microphon": 30, "stuffed_flatbread": 30, "stuffed_pita": 30, "sudan": 30, "sun_behind_large_cloud": 30, "sun_behind_rain_cloud": 30, "sun_behind_small_cloud": 30, "sun_with_fac": 30, "sunflow": 30, "sunni": [30, 107, 250, 253, 475, 481, 490, 492, 526, 710, 910, 954], "sunris": 30, "sunrise_over_mountain": 30, "superhero": 30, "superhero_dark_skin_ton": 30, "superhero_light_skin_ton": 30, "superhero_medium_dark_skin_ton": 30, "superhero_medium_light_skin_ton": 30, "superhero_medium_skin_ton": 30, "superhero_tone1": 30, "superhero_tone2": 30, "superhero_tone3": 30, "superhero_tone4": 30, "superhero_tone5": 30, "supervillain": 30, "supervillain_dark_skin_ton": 30, "supervillain_light_skin_ton": 30, "supervillain_medium_dark_skin_ton": 30, "supervillain_medium_light_skin_ton": 30, "supervillain_medium_skin_ton": 30, "supervillain_tone1": 30, "supervillain_tone2": 30, "supervillain_tone3": 30, "supervillain_tone4": 30, "supervillain_tone5": 30, "surfer": 30, "surfer_tone1": 30, "surfer_tone2": 30, "surfer_tone3": 30, "surfer_tone4": 30, "surfer_tone5": 30, "surfing_man": 30, "surfing_woman": 30, "surinam": 30, "sushi": 30, "suspension_railwai": 30, "sv": [30, 452, 453], "swan": 30, "swaziland": 30, "sweat": 30, "sweat_drop": 30, "sweat_smil": 30, "sweden": 30, "sweet_potato": 30, "swimmer": 30, "swimmer_tone1": 30, "swimmer_tone2": 30, "swimmer_tone3": 30, "swimmer_tone4": 30, "swimmer_tone5": 30, "swimming_man": 30, "swimming_woman": 30, "switzerland": 30, "sx": 30, "symbol": [30, 31, 36, 111, 142, 171, 192, 200, 206, 209, 216, 219, 237, 246, 247, 267, 268, 339, 354, 363, 370, 376, 380, 383, 387, 390, 391, 396, 400, 405, 406, 628, 666, 672, 707, 708, 709, 710, 713, 732, 735, 757, 787, 802, 817, 837, 839, 853, 862, 962], "synagogu": 30, "syria": 30, "syring": 30, "sz": [30, 133, 136], "t_rex": 30, "ta": 30, "table_tenni": 30, "taco": 30, "tada": 30, "taiwan": 30, "tajikistan": 30, "takeout_box": 30, "tamal": 30, "tanabata_tre": 30, "tangerin": 30, "tanzania": 30, "tauru": 30, "taxi": 30, "tc": 30, "td": [30, 195], "tea": 30, "teacher": [30, 104, 136, 414, 416, 784, 785, 943], "teacher_dark_skin_ton": 30, "teacher_light_skin_ton": 30, "teacher_medium_dark_skin_ton": 30, "teacher_medium_light_skin_ton": 30, "teacher_medium_skin_ton": 30, "teacher_tone1": 30, "teacher_tone2": 30, "teacher_tone3": 30, "teacher_tone4": 30, "teacher_tone5": 30, "teapot": 30, "technologist": 30, "technologist_dark_skin_ton": 30, "technologist_light_skin_ton": 30, "technologist_medium_dark_skin_ton": 30, "technologist_medium_light_skin_ton": 30, "technologist_medium_skin_ton": 30, "technologist_tone1": 30, "technologist_tone2": 30, "technologist_tone3": 30, "technologist_tone4": 30, "technologist_tone5": 30, "teddy_bear": 30, "telephon": 30, "telephone_receiv": 30, "telescop": 30, "ten": [30, 133, 154, 174, 213, 219, 848], "tenni": 30, "tent": 30, "test_tub": 30, "tf": [30, 226, 783, 952], "tg": 30, "th": [30, 167, 195, 332, 374, 478, 561, 992, 1001], "thailand": 30, "thermomet": [30, 67, 80, 82, 83, 158, 167, 219, 239, 305, 307, 308, 310, 425, 432, 435, 437, 446, 447, 460, 475, 514, 515, 523, 526, 601, 604, 710, 863], "thermometer_fac": 30, "thinking_fac": 30, "third_plac": 30, "third_place_med": 30, "thong_sand": 30, "thought_balloon": 30, "thread": [30, 57, 60, 63, 81, 87, 89, 136, 148, 149, 158, 163, 167, 178, 200, 206, 207, 209, 216, 219, 234, 235, 236, 238, 247, 256, 258, 282, 311, 314, 315, 316, 404, 433, 450, 464, 527, 668, 676, 685, 687, 694, 696, 699, 700, 709, 710, 739, 749, 755, 769, 777, 853, 875, 894, 902, 904, 905, 907, 909, 913, 914, 916, 927, 928, 929, 965, 966, 1055, 1101, 1111, 1112, 1113, 1115, 1127, 1128, 1129], "three_button_mous": 30, "thumbdown": 30, "thumbdown_tone1": 30, "thumbdown_tone2": 30, "thumbdown_tone3": 30, "thumbdown_tone4": 30, "thumbdown_tone5": 30, "thumbsdown_tone1": 30, "thumbsdown_tone2": 30, "thumbsdown_tone3": 30, "thumbsdown_tone4": 30, "thumbsdown_tone5": 30, "thumbsup_tone1": 30, "thumbsup_tone2": 30, "thumbsup_tone3": 30, "thumbsup_tone4": 30, "thumbsup_tone5": 30, "thumbup": 30, "thumbup_tone1": 30, "thumbup_tone2": 30, "thumbup_tone3": 30, "thumbup_tone4": 30, "thumbup_tone5": 30, "thunder_cloud_and_rain": 30, "thunder_cloud_rain": 30, "ticket": 30, "tiger2": 30, "tiger": 30, "timer": [30, 57, 60, 63, 111, 155, 256, 389, 701, 710, 734, 759, 766, 772, 775, 776, 778, 790, 793, 853, 862, 878, 882, 894, 913, 919, 921, 929, 1126, 1129], "timer_clock": 30, "timor_lest": 30, "tipping_hand_man": 30, "tipping_hand_woman": 30, "tired_fac": 30, "tj": 30, "tk": 30, "tl": [30, 136], "tm": 30, "tn": [30, 171], "togo": 30, "toilet": [30, 209, 504, 747, 965], "tokelau": 30, "tokyo_tow": 30, "tomato": 30, "tone1": 30, "tone2": 30, "tone3": 30, "tone4": 30, "tone5": 30, "tonga": 30, "tongu": [30, 1112], "toolbox": [30, 152], "tooth": 30, "toothbrush": 30, "tophat": 30, "tornado": 30, "tr": [30, 195], "track_next": 30, "track_previ": 30, "trackbal": 30, "tractor": 30, "traffic_light": 30, "train2": 30, "tram": 30, "transgender_flag": 30, "transgender_symbol": 30, "triangular_flag_on_post": 30, "triangular_rul": 30, "trident": 30, "trinidad_tobago": 30, "tristan_da_cunha": 30, "triumph": 30, "trolleybu": 30, "trophi": 30, "tropical_drink": 30, "tropical_fish": 30, "truck": 30, "trumpet": 30, "tt": 30, "tulip": 30, "tumbler_glass": 30, "tunisia": 30, "turkei": 30, "turkmenistan": 30, "turks_caicos_island": 30, "turtl": 30, "tuvalu": 30, "tuxedo_tone1": 30, "tuxedo_tone2": 30, "tuxedo_tone3": 30, "tuxedo_tone4": 30, "tuxedo_tone5": 30, "tw": 30, "twisted_rightwards_arrow": 30, "two_heart": 30, "two_men_holding_hand": 30, "two_women_holding_hand": 30, "tz": 30, "u5272": 30, "u5408": 30, "u55b6": 30, "u6307": 30, "u6708": 30, "u6709": 30, "u6e80": 30, "u7121": 30, "u7533": 30, "u7981": 30, "u7a7a": 30, "ua": [30, 198, 207], "ug": 30, "uganda": 30, "ukrain": 30, "umbrella2": 30, "umbrella": 30, "umbrella_on_ground": 30, "unamus": 30, "underag": 30, "unicorn": 30, "unicorn_fac": 30, "united_arab_emir": 30, "united_n": 30, "united_st": 30, "unlock": [30, 696, 698, 700, 749, 755, 902, 1124], "upside_down": 30, "upside_down_fac": 30, "urn": 30, "uruguai": 30, "us_virgin_island": 30, "uz": 30, "uzbekistan": 30, "v_tone1": 30, "v_tone2": 30, "v_tone3": 30, "v_tone4": 30, "v_tone5": 30, "va": [30, 250, 253], "vampir": 30, "vampire_dark_skin_ton": 30, "vampire_light_skin_ton": 30, "vampire_medium_dark_skin_ton": 30, "vampire_medium_light_skin_ton": 30, "vampire_medium_skin_ton": 30, "vampire_tone1": 30, "vampire_tone2": 30, "vampire_tone3": 30, "vampire_tone4": 30, "vampire_tone5": 30, "vanuatu": 30, "vatican_c": 30, "vc": [30, 113, 137], "ve": [30, 131, 133, 799, 1093], "venezuela": 30, "vertical_traffic_light": 30, "vg": 30, "vh": 30, "vi": 30, "vibration_mod": 30, "video_camera": 30, "video_gam": 30, "vietnam": 30, "violin": 30, "virgo": 30, "vn": 30, "volcano": 30, "volleybal": 30, "vu": 30, "vulcan": 30, "vulcan_salut": 30, "vulcan_tone1": 30, "vulcan_tone2": 30, "vulcan_tone3": 30, "vulcan_tone4": 30, "vulcan_tone5": 30, "waffl": 30, "wale": 30, "walk": [30, 130, 150, 163, 259, 260, 278, 279, 308, 319, 626, 643, 801, 863, 967], "walking_man": 30, "walking_tone1": 30, "walking_tone2": 30, "walking_tone3": 30, "walking_tone4": 30, "walking_tone5": 30, "walking_woman": 30, "wallis_futuna": 30, "waning_crescent_moon": 30, "waning_gibbous_moon": 30, "wastebasket": 30, "water_buffalo": 30, "water_polo": 30, "water_polo_tone1": 30, "water_polo_tone2": 30, "water_polo_tone3": 30, "water_polo_tone4": 30, "water_polo_tone5": 30, "watermelon": [30, 255], "wave": [30, 32, 36, 247, 264], "wave_tone1": 30, "wave_tone2": 30, "wave_tone3": 30, "wave_tone4": 30, "wave_tone5": 30, "waving_black_flag": 30, "waving_white_flag": 30, "wavy_dash": 30, "waxing_crescent_moon": 30, "waxing_gibbous_moon": 30, "wc": [30, 191, 192, 209, 229, 339, 354, 363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 410, 628, 666, 707, 709, 710, 797, 800, 850, 864, 1039], "weari": 30, "wed": [30, 190], "weight_lift": 30, "weight_lifter_tone1": 30, "weight_lifter_tone2": 30, "weight_lifter_tone3": 30, "weight_lifter_tone4": 30, "weight_lifter_tone5": 30, "weight_lifting_man": 30, "weight_lifting_woman": 30, "western_sahara": 30, "wf": 30, "whale2": 30, "whale": 30, "wheel_of_dharma": 30, "wheelchair": 30, "whiski": 30, "white_check_mark": 30, "white_circl": 30, "white_flag": 30, "white_flow": 30, "white_frowning_fac": 30, "white_hair": 30, "white_heart": 30, "white_large_squar": 30, "white_medium_small_squar": 30, "white_medium_squar": 30, "white_small_squar": 30, "white_square_button": 30, "white_sun_behind_cloud": 30, "white_sun_behind_cloud_with_rain": 30, "white_sun_cloud": 30, "white_sun_rain_cloud": 30, "white_sun_small_cloud": 30, "white_sun_with_small_cloud": 30, "wilted_flow": 30, "wilted_ros": 30, "wind_blowing_fac": 30, "wind_chim": 30, "wind_fac": 30, "wine_glass": 30, "wolf": 30, "woman": 30, "woman_and_man_holding_hands_dark_skin_ton": 30, "woman_and_man_holding_hands_dark_skin_tone_light_skin_ton": 30, "woman_and_man_holding_hands_dark_skin_tone_medium_dark_skin_ton": 30, "woman_and_man_holding_hands_dark_skin_tone_medium_light_skin_ton": 30, "woman_and_man_holding_hands_dark_skin_tone_medium_skin_ton": 30, "woman_and_man_holding_hands_light_skin_ton": 30, "woman_and_man_holding_hands_light_skin_tone_dark_skin_ton": 30, "woman_and_man_holding_hands_light_skin_tone_medium_dark_skin_ton": 30, "woman_and_man_holding_hands_light_skin_tone_medium_light_skin_ton": 30, "woman_and_man_holding_hands_light_skin_tone_medium_skin_ton": 30, "woman_and_man_holding_hands_medium_dark_skin_ton": 30, "woman_and_man_holding_hands_medium_dark_skin_tone_dark_skin_ton": 30, "woman_and_man_holding_hands_medium_dark_skin_tone_light_skin_ton": 30, "woman_and_man_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 30, "woman_and_man_holding_hands_medium_dark_skin_tone_medium_skin_ton": 30, "woman_and_man_holding_hands_medium_light_skin_ton": 30, "woman_and_man_holding_hands_medium_light_skin_tone_dark_skin_ton": 30, "woman_and_man_holding_hands_medium_light_skin_tone_light_skin_ton": 30, "woman_and_man_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 30, "woman_and_man_holding_hands_medium_light_skin_tone_medium_skin_ton": 30, "woman_and_man_holding_hands_medium_skin_ton": 30, "woman_and_man_holding_hands_medium_skin_tone_dark_skin_ton": 30, "woman_and_man_holding_hands_medium_skin_tone_light_skin_ton": 30, "woman_and_man_holding_hands_medium_skin_tone_medium_dark_skin_ton": 30, "woman_and_man_holding_hands_medium_skin_tone_medium_light_skin_ton": 30, "woman_and_man_holding_hands_tone1": 30, "woman_and_man_holding_hands_tone1_tone2": 30, "woman_and_man_holding_hands_tone1_tone3": 30, "woman_and_man_holding_hands_tone1_tone4": 30, "woman_and_man_holding_hands_tone1_tone5": 30, "woman_and_man_holding_hands_tone2": 30, "woman_and_man_holding_hands_tone2_tone1": 30, "woman_and_man_holding_hands_tone2_tone3": 30, "woman_and_man_holding_hands_tone2_tone4": 30, "woman_and_man_holding_hands_tone2_tone5": 30, "woman_and_man_holding_hands_tone3": 30, "woman_and_man_holding_hands_tone3_tone1": 30, "woman_and_man_holding_hands_tone3_tone2": 30, "woman_and_man_holding_hands_tone3_tone4": 30, "woman_and_man_holding_hands_tone3_tone5": 30, "woman_and_man_holding_hands_tone4": 30, "woman_and_man_holding_hands_tone4_tone1": 30, "woman_and_man_holding_hands_tone4_tone2": 30, "woman_and_man_holding_hands_tone4_tone3": 30, "woman_and_man_holding_hands_tone4_tone5": 30, "woman_and_man_holding_hands_tone5": 30, "woman_and_man_holding_hands_tone5_tone1": 30, "woman_and_man_holding_hands_tone5_tone2": 30, "woman_and_man_holding_hands_tone5_tone3": 30, "woman_and_man_holding_hands_tone5_tone4": 30, "woman_artist": 30, "woman_artist_dark_skin_ton": 30, "woman_artist_light_skin_ton": 30, "woman_artist_medium_dark_skin_ton": 30, "woman_artist_medium_light_skin_ton": 30, "woman_artist_medium_skin_ton": 30, "woman_artist_tone1": 30, "woman_artist_tone2": 30, "woman_artist_tone3": 30, "woman_artist_tone4": 30, "woman_artist_tone5": 30, "woman_astronaut": 30, "woman_astronaut_dark_skin_ton": 30, "woman_astronaut_light_skin_ton": 30, "woman_astronaut_medium_dark_skin_ton": 30, "woman_astronaut_medium_light_skin_ton": 30, "woman_astronaut_medium_skin_ton": 30, "woman_astronaut_tone1": 30, "woman_astronaut_tone2": 30, "woman_astronaut_tone3": 30, "woman_astronaut_tone4": 30, "woman_astronaut_tone5": 30, "woman_bald": 30, "woman_bald_dark_skin_ton": 30, "woman_bald_light_skin_ton": 30, "woman_bald_medium_dark_skin_ton": 30, "woman_bald_medium_light_skin_ton": 30, "woman_bald_medium_skin_ton": 30, "woman_bald_tone1": 30, "woman_bald_tone2": 30, "woman_bald_tone3": 30, "woman_bald_tone4": 30, "woman_bald_tone5": 30, "woman_beard": 30, "woman_bik": 30, "woman_biking_dark_skin_ton": 30, "woman_biking_light_skin_ton": 30, "woman_biking_medium_dark_skin_ton": 30, "woman_biking_medium_light_skin_ton": 30, "woman_biking_medium_skin_ton": 30, "woman_biking_tone1": 30, "woman_biking_tone2": 30, "woman_biking_tone3": 30, "woman_biking_tone4": 30, "woman_biking_tone5": 30, "woman_bouncing_bal": 30, "woman_bouncing_ball_dark_skin_ton": 30, "woman_bouncing_ball_light_skin_ton": 30, "woman_bouncing_ball_medium_dark_skin_ton": 30, "woman_bouncing_ball_medium_light_skin_ton": 30, "woman_bouncing_ball_medium_skin_ton": 30, "woman_bouncing_ball_tone1": 30, "woman_bouncing_ball_tone2": 30, "woman_bouncing_ball_tone3": 30, "woman_bouncing_ball_tone4": 30, "woman_bouncing_ball_tone5": 30, "woman_bow": 30, "woman_bowing_dark_skin_ton": 30, "woman_bowing_light_skin_ton": 30, "woman_bowing_medium_dark_skin_ton": 30, "woman_bowing_medium_light_skin_ton": 30, "woman_bowing_medium_skin_ton": 30, "woman_bowing_tone1": 30, "woman_bowing_tone2": 30, "woman_bowing_tone3": 30, "woman_bowing_tone4": 30, "woman_bowing_tone5": 30, "woman_cartwheel": 30, "woman_cartwheeling_dark_skin_ton": 30, "woman_cartwheeling_light_skin_ton": 30, "woman_cartwheeling_medium_dark_skin_ton": 30, "woman_cartwheeling_medium_light_skin_ton": 30, "woman_cartwheeling_medium_skin_ton": 30, "woman_cartwheeling_tone1": 30, "woman_cartwheeling_tone2": 30, "woman_cartwheeling_tone3": 30, "woman_cartwheeling_tone4": 30, "woman_cartwheeling_tone5": 30, "woman_climb": 30, "woman_climbing_dark_skin_ton": 30, "woman_climbing_light_skin_ton": 30, "woman_climbing_medium_dark_skin_ton": 30, "woman_climbing_medium_light_skin_ton": 30, "woman_climbing_medium_skin_ton": 30, "woman_climbing_tone1": 30, "woman_climbing_tone2": 30, "woman_climbing_tone3": 30, "woman_climbing_tone4": 30, "woman_climbing_tone5": 30, "woman_construction_work": 30, "woman_construction_worker_dark_skin_ton": 30, "woman_construction_worker_light_skin_ton": 30, "woman_construction_worker_medium_dark_skin_ton": 30, "woman_construction_worker_medium_light_skin_ton": 30, "woman_construction_worker_medium_skin_ton": 30, "woman_construction_worker_tone1": 30, "woman_construction_worker_tone2": 30, "woman_construction_worker_tone3": 30, "woman_construction_worker_tone4": 30, "woman_construction_worker_tone5": 30, "woman_cook": 30, "woman_cook_dark_skin_ton": 30, "woman_cook_light_skin_ton": 30, "woman_cook_medium_dark_skin_ton": 30, "woman_cook_medium_light_skin_ton": 30, "woman_cook_medium_skin_ton": 30, "woman_cook_tone1": 30, "woman_cook_tone2": 30, "woman_cook_tone3": 30, "woman_cook_tone4": 30, "woman_cook_tone5": 30, "woman_curly_hair": 30, "woman_curly_haired_dark_skin_ton": 30, "woman_curly_haired_light_skin_ton": 30, "woman_curly_haired_medium_dark_skin_ton": 30, "woman_curly_haired_medium_light_skin_ton": 30, "woman_curly_haired_medium_skin_ton": 30, "woman_curly_haired_tone1": 30, "woman_curly_haired_tone2": 30, "woman_curly_haired_tone3": 30, "woman_curly_haired_tone4": 30, "woman_curly_haired_tone5": 30, "woman_dark_skin_tone_beard": 30, "woman_detect": 30, "woman_detective_dark_skin_ton": 30, "woman_detective_light_skin_ton": 30, "woman_detective_medium_dark_skin_ton": 30, "woman_detective_medium_light_skin_ton": 30, "woman_detective_medium_skin_ton": 30, "woman_detective_tone1": 30, "woman_detective_tone2": 30, "woman_detective_tone3": 30, "woman_detective_tone4": 30, "woman_detective_tone5": 30, "woman_elf": 30, "woman_elf_dark_skin_ton": 30, "woman_elf_light_skin_ton": 30, "woman_elf_medium_dark_skin_ton": 30, "woman_elf_medium_light_skin_ton": 30, "woman_elf_medium_skin_ton": 30, "woman_elf_tone1": 30, "woman_elf_tone2": 30, "woman_elf_tone3": 30, "woman_elf_tone4": 30, "woman_elf_tone5": 30, "woman_facepalm": 30, "woman_facepalming_dark_skin_ton": 30, "woman_facepalming_light_skin_ton": 30, "woman_facepalming_medium_dark_skin_ton": 30, "woman_facepalming_medium_light_skin_ton": 30, "woman_facepalming_medium_skin_ton": 30, "woman_facepalming_tone1": 30, "woman_facepalming_tone2": 30, "woman_facepalming_tone3": 30, "woman_facepalming_tone4": 30, "woman_facepalming_tone5": 30, "woman_factory_work": 30, "woman_factory_worker_dark_skin_ton": 30, "woman_factory_worker_light_skin_ton": 30, "woman_factory_worker_medium_dark_skin_ton": 30, "woman_factory_worker_medium_light_skin_ton": 30, "woman_factory_worker_medium_skin_ton": 30, "woman_factory_worker_tone1": 30, "woman_factory_worker_tone2": 30, "woman_factory_worker_tone3": 30, "woman_factory_worker_tone4": 30, "woman_factory_worker_tone5": 30, "woman_fairi": 30, "woman_fairy_dark_skin_ton": 30, "woman_fairy_light_skin_ton": 30, "woman_fairy_medium_dark_skin_ton": 30, "woman_fairy_medium_light_skin_ton": 30, "woman_fairy_medium_skin_ton": 30, "woman_fairy_tone1": 30, "woman_fairy_tone2": 30, "woman_fairy_tone3": 30, "woman_fairy_tone4": 30, "woman_fairy_tone5": 30, "woman_farm": 30, "woman_farmer_dark_skin_ton": 30, "woman_farmer_light_skin_ton": 30, "woman_farmer_medium_dark_skin_ton": 30, "woman_farmer_medium_light_skin_ton": 30, "woman_farmer_medium_skin_ton": 30, "woman_farmer_tone1": 30, "woman_farmer_tone2": 30, "woman_farmer_tone3": 30, "woman_farmer_tone4": 30, "woman_farmer_tone5": 30, "woman_feeding_babi": 30, "woman_feeding_baby_dark_skin_ton": 30, "woman_feeding_baby_light_skin_ton": 30, "woman_feeding_baby_medium_dark_skin_ton": 30, "woman_feeding_baby_medium_light_skin_ton": 30, "woman_feeding_baby_medium_skin_ton": 30, "woman_feeding_baby_tone1": 30, "woman_feeding_baby_tone2": 30, "woman_feeding_baby_tone3": 30, "woman_feeding_baby_tone4": 30, "woman_feeding_baby_tone5": 30, "woman_firefight": 30, "woman_firefighter_dark_skin_ton": 30, "woman_firefighter_light_skin_ton": 30, "woman_firefighter_medium_dark_skin_ton": 30, "woman_firefighter_medium_light_skin_ton": 30, "woman_firefighter_medium_skin_ton": 30, "woman_firefighter_tone1": 30, "woman_firefighter_tone2": 30, "woman_firefighter_tone3": 30, "woman_firefighter_tone4": 30, "woman_firefighter_tone5": 30, "woman_frown": 30, "woman_frowning_dark_skin_ton": 30, "woman_frowning_light_skin_ton": 30, "woman_frowning_medium_dark_skin_ton": 30, "woman_frowning_medium_light_skin_ton": 30, "woman_frowning_medium_skin_ton": 30, "woman_frowning_tone1": 30, "woman_frowning_tone2": 30, "woman_frowning_tone3": 30, "woman_frowning_tone4": 30, "woman_frowning_tone5": 30, "woman_geni": 30, "woman_gesturing_no": 30, "woman_gesturing_no_dark_skin_ton": 30, "woman_gesturing_no_light_skin_ton": 30, "woman_gesturing_no_medium_dark_skin_ton": 30, "woman_gesturing_no_medium_light_skin_ton": 30, "woman_gesturing_no_medium_skin_ton": 30, "woman_gesturing_no_tone1": 30, "woman_gesturing_no_tone2": 30, "woman_gesturing_no_tone3": 30, "woman_gesturing_no_tone4": 30, "woman_gesturing_no_tone5": 30, "woman_gesturing_ok": 30, "woman_gesturing_ok_dark_skin_ton": 30, "woman_gesturing_ok_light_skin_ton": 30, "woman_gesturing_ok_medium_dark_skin_ton": 30, "woman_gesturing_ok_medium_light_skin_ton": 30, "woman_gesturing_ok_medium_skin_ton": 30, "woman_gesturing_ok_tone1": 30, "woman_gesturing_ok_tone2": 30, "woman_gesturing_ok_tone3": 30, "woman_gesturing_ok_tone4": 30, "woman_gesturing_ok_tone5": 30, "woman_getting_face_massag": 30, "woman_getting_face_massage_dark_skin_ton": 30, "woman_getting_face_massage_light_skin_ton": 30, "woman_getting_face_massage_medium_dark_skin_ton": 30, "woman_getting_face_massage_medium_light_skin_ton": 30, "woman_getting_face_massage_medium_skin_ton": 30, "woman_getting_face_massage_tone1": 30, "woman_getting_face_massage_tone2": 30, "woman_getting_face_massage_tone3": 30, "woman_getting_face_massage_tone4": 30, "woman_getting_face_massage_tone5": 30, "woman_getting_haircut": 30, "woman_getting_haircut_dark_skin_ton": 30, "woman_getting_haircut_light_skin_ton": 30, "woman_getting_haircut_medium_dark_skin_ton": 30, "woman_getting_haircut_medium_light_skin_ton": 30, "woman_getting_haircut_medium_skin_ton": 30, "woman_getting_haircut_tone1": 30, "woman_getting_haircut_tone2": 30, "woman_getting_haircut_tone3": 30, "woman_getting_haircut_tone4": 30, "woman_getting_haircut_tone5": 30, "woman_golf": 30, "woman_golfing_dark_skin_ton": 30, "woman_golfing_light_skin_ton": 30, "woman_golfing_medium_dark_skin_ton": 30, "woman_golfing_medium_light_skin_ton": 30, "woman_golfing_medium_skin_ton": 30, "woman_golfing_tone1": 30, "woman_golfing_tone2": 30, "woman_golfing_tone3": 30, "woman_golfing_tone4": 30, "woman_golfing_tone5": 30, "woman_guard": 30, "woman_guard_dark_skin_ton": 30, "woman_guard_light_skin_ton": 30, "woman_guard_medium_dark_skin_ton": 30, "woman_guard_medium_light_skin_ton": 30, "woman_guard_medium_skin_ton": 30, "woman_guard_tone1": 30, "woman_guard_tone2": 30, "woman_guard_tone3": 30, "woman_guard_tone4": 30, "woman_guard_tone5": 30, "woman_health_work": 30, "woman_health_worker_dark_skin_ton": 30, "woman_health_worker_light_skin_ton": 30, "woman_health_worker_medium_dark_skin_ton": 30, "woman_health_worker_medium_light_skin_ton": 30, "woman_health_worker_medium_skin_ton": 30, "woman_health_worker_tone1": 30, "woman_health_worker_tone2": 30, "woman_health_worker_tone3": 30, "woman_health_worker_tone4": 30, "woman_health_worker_tone5": 30, "woman_in_lotus_posit": 30, "woman_in_lotus_position_dark_skin_ton": 30, "woman_in_lotus_position_light_skin_ton": 30, "woman_in_lotus_position_medium_dark_skin_ton": 30, "woman_in_lotus_position_medium_light_skin_ton": 30, "woman_in_lotus_position_medium_skin_ton": 30, "woman_in_lotus_position_tone1": 30, "woman_in_lotus_position_tone2": 30, "woman_in_lotus_position_tone3": 30, "woman_in_lotus_position_tone4": 30, "woman_in_lotus_position_tone5": 30, "woman_in_manual_wheelchair": 30, "woman_in_manual_wheelchair_dark_skin_ton": 30, "woman_in_manual_wheelchair_light_skin_ton": 30, "woman_in_manual_wheelchair_medium_dark_skin_ton": 30, "woman_in_manual_wheelchair_medium_light_skin_ton": 30, "woman_in_manual_wheelchair_medium_skin_ton": 30, "woman_in_manual_wheelchair_tone1": 30, "woman_in_manual_wheelchair_tone2": 30, "woman_in_manual_wheelchair_tone3": 30, "woman_in_manual_wheelchair_tone4": 30, "woman_in_manual_wheelchair_tone5": 30, "woman_in_motorized_wheelchair": 30, "woman_in_motorized_wheelchair_dark_skin_ton": 30, "woman_in_motorized_wheelchair_light_skin_ton": 30, "woman_in_motorized_wheelchair_medium_dark_skin_ton": 30, "woman_in_motorized_wheelchair_medium_light_skin_ton": 30, "woman_in_motorized_wheelchair_medium_skin_ton": 30, "woman_in_motorized_wheelchair_tone1": 30, "woman_in_motorized_wheelchair_tone2": 30, "woman_in_motorized_wheelchair_tone3": 30, "woman_in_motorized_wheelchair_tone4": 30, "woman_in_motorized_wheelchair_tone5": 30, "woman_in_steamy_room": 30, "woman_in_steamy_room_dark_skin_ton": 30, "woman_in_steamy_room_light_skin_ton": 30, "woman_in_steamy_room_medium_dark_skin_ton": 30, "woman_in_steamy_room_medium_light_skin_ton": 30, "woman_in_steamy_room_medium_skin_ton": 30, "woman_in_steamy_room_tone1": 30, "woman_in_steamy_room_tone2": 30, "woman_in_steamy_room_tone3": 30, "woman_in_steamy_room_tone4": 30, "woman_in_steamy_room_tone5": 30, "woman_in_tuxedo": 30, "woman_in_tuxedo_dark_skin_ton": 30, "woman_in_tuxedo_light_skin_ton": 30, "woman_in_tuxedo_medium_dark_skin_ton": 30, "woman_in_tuxedo_medium_light_skin_ton": 30, "woman_in_tuxedo_medium_skin_ton": 30, "woman_in_tuxedo_tone1": 30, "woman_in_tuxedo_tone2": 30, "woman_in_tuxedo_tone3": 30, "woman_in_tuxedo_tone4": 30, "woman_in_tuxedo_tone5": 30, "woman_judg": 30, "woman_judge_dark_skin_ton": 30, "woman_judge_light_skin_ton": 30, "woman_judge_medium_dark_skin_ton": 30, "woman_judge_medium_light_skin_ton": 30, "woman_judge_medium_skin_ton": 30, "woman_judge_tone1": 30, "woman_judge_tone2": 30, "woman_judge_tone3": 30, "woman_judge_tone4": 30, "woman_judge_tone5": 30, "woman_juggl": 30, "woman_juggling_dark_skin_ton": 30, "woman_juggling_light_skin_ton": 30, "woman_juggling_medium_dark_skin_ton": 30, "woman_juggling_medium_light_skin_ton": 30, "woman_juggling_medium_skin_ton": 30, "woman_juggling_tone1": 30, "woman_juggling_tone2": 30, "woman_juggling_tone3": 30, "woman_juggling_tone4": 30, "woman_juggling_tone5": 30, "woman_kneel": 30, "woman_kneeling_dark_skin_ton": 30, "woman_kneeling_light_skin_ton": 30, "woman_kneeling_medium_dark_skin_ton": 30, "woman_kneeling_medium_light_skin_ton": 30, "woman_kneeling_medium_skin_ton": 30, "woman_kneeling_tone1": 30, "woman_kneeling_tone2": 30, "woman_kneeling_tone3": 30, "woman_kneeling_tone4": 30, "woman_kneeling_tone5": 30, "woman_lifting_weight": 30, "woman_lifting_weights_dark_skin_ton": 30, "woman_lifting_weights_light_skin_ton": 30, "woman_lifting_weights_medium_dark_skin_ton": 30, "woman_lifting_weights_medium_light_skin_ton": 30, "woman_lifting_weights_medium_skin_ton": 30, "woman_lifting_weights_tone1": 30, "woman_lifting_weights_tone2": 30, "woman_lifting_weights_tone3": 30, "woman_lifting_weights_tone4": 30, "woman_lifting_weights_tone5": 30, "woman_light_skin_tone_beard": 30, "woman_mag": 30, "woman_mage_dark_skin_ton": 30, "woman_mage_light_skin_ton": 30, "woman_mage_medium_dark_skin_ton": 30, "woman_mage_medium_light_skin_ton": 30, "woman_mage_medium_skin_ton": 30, "woman_mage_tone1": 30, "woman_mage_tone2": 30, "woman_mage_tone3": 30, "woman_mage_tone4": 30, "woman_mage_tone5": 30, "woman_mechan": 30, "woman_mechanic_dark_skin_ton": 30, "woman_mechanic_light_skin_ton": 30, "woman_mechanic_medium_dark_skin_ton": 30, "woman_mechanic_medium_light_skin_ton": 30, "woman_mechanic_medium_skin_ton": 30, "woman_mechanic_tone1": 30, "woman_mechanic_tone2": 30, "woman_mechanic_tone3": 30, "woman_mechanic_tone4": 30, "woman_mechanic_tone5": 30, "woman_medium_dark_skin_tone_beard": 30, "woman_medium_light_skin_tone_beard": 30, "woman_medium_skin_tone_beard": 30, "woman_mountain_bik": 30, "woman_mountain_biking_dark_skin_ton": 30, "woman_mountain_biking_light_skin_ton": 30, "woman_mountain_biking_medium_dark_skin_ton": 30, "woman_mountain_biking_medium_light_skin_ton": 30, "woman_mountain_biking_medium_skin_ton": 30, "woman_mountain_biking_tone1": 30, "woman_mountain_biking_tone2": 30, "woman_mountain_biking_tone3": 30, "woman_mountain_biking_tone4": 30, "woman_mountain_biking_tone5": 30, "woman_office_work": 30, "woman_office_worker_dark_skin_ton": 30, "woman_office_worker_light_skin_ton": 30, "woman_office_worker_medium_dark_skin_ton": 30, "woman_office_worker_medium_light_skin_ton": 30, "woman_office_worker_medium_skin_ton": 30, "woman_office_worker_tone1": 30, "woman_office_worker_tone2": 30, "woman_office_worker_tone3": 30, "woman_office_worker_tone4": 30, "woman_office_worker_tone5": 30, "woman_pilot": 30, "woman_pilot_dark_skin_ton": 30, "woman_pilot_light_skin_ton": 30, "woman_pilot_medium_dark_skin_ton": 30, "woman_pilot_medium_light_skin_ton": 30, "woman_pilot_medium_skin_ton": 30, "woman_pilot_tone1": 30, "woman_pilot_tone2": 30, "woman_pilot_tone3": 30, "woman_pilot_tone4": 30, "woman_pilot_tone5": 30, "woman_playing_handbal": 30, "woman_playing_handball_dark_skin_ton": 30, "woman_playing_handball_light_skin_ton": 30, "woman_playing_handball_medium_dark_skin_ton": 30, "woman_playing_handball_medium_light_skin_ton": 30, "woman_playing_handball_medium_skin_ton": 30, "woman_playing_handball_tone1": 30, "woman_playing_handball_tone2": 30, "woman_playing_handball_tone3": 30, "woman_playing_handball_tone4": 30, "woman_playing_handball_tone5": 30, "woman_playing_water_polo": 30, "woman_playing_water_polo_dark_skin_ton": 30, "woman_playing_water_polo_light_skin_ton": 30, "woman_playing_water_polo_medium_dark_skin_ton": 30, "woman_playing_water_polo_medium_light_skin_ton": 30, "woman_playing_water_polo_medium_skin_ton": 30, "woman_playing_water_polo_tone1": 30, "woman_playing_water_polo_tone2": 30, "woman_playing_water_polo_tone3": 30, "woman_playing_water_polo_tone4": 30, "woman_playing_water_polo_tone5": 30, "woman_police_offic": 30, "woman_police_officer_dark_skin_ton": 30, "woman_police_officer_light_skin_ton": 30, "woman_police_officer_medium_dark_skin_ton": 30, "woman_police_officer_medium_light_skin_ton": 30, "woman_police_officer_medium_skin_ton": 30, "woman_police_officer_tone1": 30, "woman_police_officer_tone2": 30, "woman_police_officer_tone3": 30, "woman_police_officer_tone4": 30, "woman_police_officer_tone5": 30, "woman_pout": 30, "woman_pouting_dark_skin_ton": 30, "woman_pouting_light_skin_ton": 30, "woman_pouting_medium_dark_skin_ton": 30, "woman_pouting_medium_light_skin_ton": 30, "woman_pouting_medium_skin_ton": 30, "woman_pouting_tone1": 30, "woman_pouting_tone2": 30, "woman_pouting_tone3": 30, "woman_pouting_tone4": 30, "woman_pouting_tone5": 30, "woman_raising_hand": 30, "woman_raising_hand_dark_skin_ton": 30, "woman_raising_hand_light_skin_ton": 30, "woman_raising_hand_medium_dark_skin_ton": 30, "woman_raising_hand_medium_light_skin_ton": 30, "woman_raising_hand_medium_skin_ton": 30, "woman_raising_hand_tone1": 30, "woman_raising_hand_tone2": 30, "woman_raising_hand_tone3": 30, "woman_raising_hand_tone4": 30, "woman_raising_hand_tone5": 30, "woman_red_hair": 30, "woman_red_haired_dark_skin_ton": 30, "woman_red_haired_light_skin_ton": 30, "woman_red_haired_medium_dark_skin_ton": 30, "woman_red_haired_medium_light_skin_ton": 30, "woman_red_haired_medium_skin_ton": 30, "woman_red_haired_tone1": 30, "woman_red_haired_tone2": 30, "woman_red_haired_tone3": 30, "woman_red_haired_tone4": 30, "woman_red_haired_tone5": 30, "woman_rowing_boat": 30, "woman_rowing_boat_dark_skin_ton": 30, "woman_rowing_boat_light_skin_ton": 30, "woman_rowing_boat_medium_dark_skin_ton": 30, "woman_rowing_boat_medium_light_skin_ton": 30, "woman_rowing_boat_medium_skin_ton": 30, "woman_rowing_boat_tone1": 30, "woman_rowing_boat_tone2": 30, "woman_rowing_boat_tone3": 30, "woman_rowing_boat_tone4": 30, "woman_rowing_boat_tone5": 30, "woman_run": 30, "woman_running_dark_skin_ton": 30, "woman_running_light_skin_ton": 30, "woman_running_medium_dark_skin_ton": 30, "woman_running_medium_light_skin_ton": 30, "woman_running_medium_skin_ton": 30, "woman_running_tone1": 30, "woman_running_tone2": 30, "woman_running_tone3": 30, "woman_running_tone4": 30, "woman_running_tone5": 30, "woman_scientist": 30, "woman_scientist_dark_skin_ton": 30, "woman_scientist_light_skin_ton": 30, "woman_scientist_medium_dark_skin_ton": 30, "woman_scientist_medium_light_skin_ton": 30, "woman_scientist_medium_skin_ton": 30, "woman_scientist_tone1": 30, "woman_scientist_tone2": 30, "woman_scientist_tone3": 30, "woman_scientist_tone4": 30, "woman_scientist_tone5": 30, "woman_shrug": 30, "woman_shrugging_dark_skin_ton": 30, "woman_shrugging_light_skin_ton": 30, "woman_shrugging_medium_dark_skin_ton": 30, "woman_shrugging_medium_light_skin_ton": 30, "woman_shrugging_medium_skin_ton": 30, "woman_shrugging_tone1": 30, "woman_shrugging_tone2": 30, "woman_shrugging_tone3": 30, "woman_shrugging_tone4": 30, "woman_shrugging_tone5": 30, "woman_sing": 30, "woman_singer_dark_skin_ton": 30, "woman_singer_light_skin_ton": 30, "woman_singer_medium_dark_skin_ton": 30, "woman_singer_medium_light_skin_ton": 30, "woman_singer_medium_skin_ton": 30, "woman_singer_tone1": 30, "woman_singer_tone2": 30, "woman_singer_tone3": 30, "woman_singer_tone4": 30, "woman_singer_tone5": 30, "woman_stand": 30, "woman_standing_dark_skin_ton": 30, "woman_standing_light_skin_ton": 30, "woman_standing_medium_dark_skin_ton": 30, "woman_standing_medium_light_skin_ton": 30, "woman_standing_medium_skin_ton": 30, "woman_standing_tone1": 30, "woman_standing_tone2": 30, "woman_standing_tone3": 30, "woman_standing_tone4": 30, "woman_standing_tone5": 30, "woman_stud": 30, "woman_student_dark_skin_ton": 30, "woman_student_light_skin_ton": 30, "woman_student_medium_dark_skin_ton": 30, "woman_student_medium_light_skin_ton": 30, "woman_student_medium_skin_ton": 30, "woman_student_tone1": 30, "woman_student_tone2": 30, "woman_student_tone3": 30, "woman_student_tone4": 30, "woman_student_tone5": 30, "woman_superhero": 30, "woman_superhero_dark_skin_ton": 30, "woman_superhero_light_skin_ton": 30, "woman_superhero_medium_dark_skin_ton": 30, "woman_superhero_medium_light_skin_ton": 30, "woman_superhero_medium_skin_ton": 30, "woman_superhero_tone1": 30, "woman_superhero_tone2": 30, "woman_superhero_tone3": 30, "woman_superhero_tone4": 30, "woman_superhero_tone5": 30, "woman_supervillain": 30, "woman_supervillain_dark_skin_ton": 30, "woman_supervillain_light_skin_ton": 30, "woman_supervillain_medium_dark_skin_ton": 30, "woman_supervillain_medium_light_skin_ton": 30, "woman_supervillain_medium_skin_ton": 30, "woman_supervillain_tone1": 30, "woman_supervillain_tone2": 30, "woman_supervillain_tone3": 30, "woman_supervillain_tone4": 30, "woman_supervillain_tone5": 30, "woman_surf": 30, "woman_surfing_dark_skin_ton": 30, "woman_surfing_light_skin_ton": 30, "woman_surfing_medium_dark_skin_ton": 30, "woman_surfing_medium_light_skin_ton": 30, "woman_surfing_medium_skin_ton": 30, "woman_surfing_tone1": 30, "woman_surfing_tone2": 30, "woman_surfing_tone3": 30, "woman_surfing_tone4": 30, "woman_surfing_tone5": 30, "woman_swim": 30, "woman_swimming_dark_skin_ton": 30, "woman_swimming_light_skin_ton": 30, "woman_swimming_medium_dark_skin_ton": 30, "woman_swimming_medium_light_skin_ton": 30, "woman_swimming_medium_skin_ton": 30, "woman_swimming_tone1": 30, "woman_swimming_tone2": 30, "woman_swimming_tone3": 30, "woman_swimming_tone4": 30, "woman_swimming_tone5": 30, "woman_teach": 30, "woman_teacher_dark_skin_ton": 30, "woman_teacher_light_skin_ton": 30, "woman_teacher_medium_dark_skin_ton": 30, "woman_teacher_medium_light_skin_ton": 30, "woman_teacher_medium_skin_ton": 30, "woman_teacher_tone1": 30, "woman_teacher_tone2": 30, "woman_teacher_tone3": 30, "woman_teacher_tone4": 30, "woman_teacher_tone5": 30, "woman_technologist": 30, "woman_technologist_dark_skin_ton": 30, "woman_technologist_light_skin_ton": 30, "woman_technologist_medium_dark_skin_ton": 30, "woman_technologist_medium_light_skin_ton": 30, "woman_technologist_medium_skin_ton": 30, "woman_technologist_tone1": 30, "woman_technologist_tone2": 30, "woman_technologist_tone3": 30, "woman_technologist_tone4": 30, "woman_technologist_tone5": 30, "woman_tipping_hand": 30, "woman_tipping_hand_dark_skin_ton": 30, "woman_tipping_hand_light_skin_ton": 30, "woman_tipping_hand_medium_dark_skin_ton": 30, "woman_tipping_hand_medium_light_skin_ton": 30, "woman_tipping_hand_medium_skin_ton": 30, "woman_tipping_hand_tone1": 30, "woman_tipping_hand_tone2": 30, "woman_tipping_hand_tone3": 30, "woman_tipping_hand_tone4": 30, "woman_tipping_hand_tone5": 30, "woman_tone1": 30, "woman_tone1_beard": 30, "woman_tone2": 30, "woman_tone2_beard": 30, "woman_tone3": 30, "woman_tone3_beard": 30, "woman_tone4": 30, "woman_tone4_beard": 30, "woman_tone5": 30, "woman_tone5_beard": 30, "woman_vampir": 30, "woman_vampire_dark_skin_ton": 30, "woman_vampire_light_skin_ton": 30, "woman_vampire_medium_dark_skin_ton": 30, "woman_vampire_medium_light_skin_ton": 30, "woman_vampire_medium_skin_ton": 30, "woman_vampire_tone1": 30, "woman_vampire_tone2": 30, "woman_vampire_tone3": 30, "woman_vampire_tone4": 30, "woman_vampire_tone5": 30, "woman_walk": 30, "woman_walking_dark_skin_ton": 30, "woman_walking_light_skin_ton": 30, "woman_walking_medium_dark_skin_ton": 30, "woman_walking_medium_light_skin_ton": 30, "woman_walking_medium_skin_ton": 30, "woman_walking_tone1": 30, "woman_walking_tone2": 30, "woman_walking_tone3": 30, "woman_walking_tone4": 30, "woman_walking_tone5": 30, "woman_wearing_turban": 30, "woman_wearing_turban_dark_skin_ton": 30, "woman_wearing_turban_light_skin_ton": 30, "woman_wearing_turban_medium_dark_skin_ton": 30, "woman_wearing_turban_medium_light_skin_ton": 30, "woman_wearing_turban_medium_skin_ton": 30, "woman_wearing_turban_tone1": 30, "woman_wearing_turban_tone2": 30, "woman_wearing_turban_tone3": 30, "woman_wearing_turban_tone4": 30, "woman_wearing_turban_tone5": 30, "woman_white_hair": 30, "woman_white_haired_dark_skin_ton": 30, "woman_white_haired_light_skin_ton": 30, "woman_white_haired_medium_dark_skin_ton": 30, "woman_white_haired_medium_light_skin_ton": 30, "woman_white_haired_medium_skin_ton": 30, "woman_white_haired_tone1": 30, "woman_white_haired_tone2": 30, "woman_white_haired_tone3": 30, "woman_white_haired_tone4": 30, "woman_white_haired_tone5": 30, "woman_with_headscarf": 30, "woman_with_headscarf_dark_skin_ton": 30, "woman_with_headscarf_light_skin_ton": 30, "woman_with_headscarf_medium_dark_skin_ton": 30, "woman_with_headscarf_medium_light_skin_ton": 30, "woman_with_headscarf_medium_skin_ton": 30, "woman_with_headscarf_tone1": 30, "woman_with_headscarf_tone2": 30, "woman_with_headscarf_tone3": 30, "woman_with_headscarf_tone4": 30, "woman_with_headscarf_tone5": 30, "woman_with_probing_can": 30, "woman_with_probing_cane_dark_skin_ton": 30, "woman_with_probing_cane_light_skin_ton": 30, "woman_with_probing_cane_medium_dark_skin_ton": 30, "woman_with_probing_cane_medium_light_skin_ton": 30, "woman_with_probing_cane_medium_skin_ton": 30, "woman_with_probing_cane_tone1": 30, "woman_with_probing_cane_tone2": 30, "woman_with_probing_cane_tone3": 30, "woman_with_probing_cane_tone4": 30, "woman_with_probing_cane_tone5": 30, "woman_with_turban": 30, "woman_with_veil": 30, "woman_with_veil_dark_skin_ton": 30, "woman_with_veil_light_skin_ton": 30, "woman_with_veil_medium_dark_skin_ton": 30, "woman_with_veil_medium_light_skin_ton": 30, "woman_with_veil_medium_skin_ton": 30, "woman_with_veil_tone1": 30, "woman_with_veil_tone2": 30, "woman_with_veil_tone3": 30, "woman_with_veil_tone4": 30, "woman_with_veil_tone5": 30, "woman_zombi": 30, "womans_cloth": 30, "womans_flat_sho": 30, "womans_hat": 30, "women_holding_hands_dark_skin_ton": 30, "women_holding_hands_dark_skin_tone_light_skin_ton": 30, "women_holding_hands_dark_skin_tone_medium_dark_skin_ton": 30, "women_holding_hands_dark_skin_tone_medium_light_skin_ton": 30, "women_holding_hands_dark_skin_tone_medium_skin_ton": 30, "women_holding_hands_light_skin_ton": 30, "women_holding_hands_light_skin_tone_dark_skin_ton": 30, "women_holding_hands_light_skin_tone_medium_dark_skin_ton": 30, "women_holding_hands_light_skin_tone_medium_light_skin_ton": 30, "women_holding_hands_light_skin_tone_medium_skin_ton": 30, "women_holding_hands_medium_dark_skin_ton": 30, "women_holding_hands_medium_dark_skin_tone_dark_skin_ton": 30, "women_holding_hands_medium_dark_skin_tone_light_skin_ton": 30, "women_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 30, "women_holding_hands_medium_dark_skin_tone_medium_skin_ton": 30, "women_holding_hands_medium_light_skin_ton": 30, "women_holding_hands_medium_light_skin_tone_dark_skin_ton": 30, "women_holding_hands_medium_light_skin_tone_light_skin_ton": 30, "women_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 30, "women_holding_hands_medium_light_skin_tone_medium_skin_ton": 30, "women_holding_hands_medium_skin_ton": 30, "women_holding_hands_medium_skin_tone_dark_skin_ton": 30, "women_holding_hands_medium_skin_tone_light_skin_ton": 30, "women_holding_hands_medium_skin_tone_medium_dark_skin_ton": 30, "women_holding_hands_medium_skin_tone_medium_light_skin_ton": 30, "women_holding_hands_tone1": 30, "women_holding_hands_tone1_tone2": 30, "women_holding_hands_tone1_tone3": 30, "women_holding_hands_tone1_tone4": 30, "women_holding_hands_tone1_tone5": 30, "women_holding_hands_tone2": 30, "women_holding_hands_tone2_tone1": 30, "women_holding_hands_tone2_tone3": 30, "women_holding_hands_tone2_tone4": 30, "women_holding_hands_tone2_tone5": 30, "women_holding_hands_tone3": 30, "women_holding_hands_tone3_tone1": 30, "women_holding_hands_tone3_tone2": 30, "women_holding_hands_tone3_tone4": 30, "women_holding_hands_tone3_tone5": 30, "women_holding_hands_tone4": 30, "women_holding_hands_tone4_tone1": 30, "women_holding_hands_tone4_tone2": 30, "women_holding_hands_tone4_tone3": 30, "women_holding_hands_tone4_tone5": 30, "women_holding_hands_tone5": 30, "women_holding_hands_tone5_tone1": 30, "women_holding_hands_tone5_tone2": 30, "women_holding_hands_tone5_tone3": 30, "women_holding_hands_tone5_tone4": 30, "women_with_bunny_ears_parti": 30, "women_wrestl": 30, "women": 30, "wood": 30, "woozy_fac": 30, "world_map": 30, "worm": [30, 421], "worri": [30, 389], "worship_symbol": 30, "wrench": 30, "wrestler": 30, "wrestlers_tone1": 30, "wrestlers_tone2": 30, "wrestlers_tone3": 30, "wrestlers_tone4": 30, "wrestlers_tone5": 30, "wrestl": 30, "wrestling_tone1": 30, "wrestling_tone2": 30, "wrestling_tone3": 30, "wrestling_tone4": 30, "wrestling_tone5": 30, "writing_hand": 30, "writing_hand_tone1": 30, "writing_hand_tone2": 30, "writing_hand_tone3": 30, "writing_hand_tone4": 30, "writing_hand_tone5": 30, "w": [30, 38, 167, 171, 174, 196, 200, 206, 216, 219, 226, 247, 261, 302, 303, 322, 410, 545, 606, 802, 816, 862, 863, 897, 952, 992, 1005, 1050, 1052, 1083, 1087, 1092], "xk": 30, "yarn": 30, "yawning_fac": 30, "yellow_circl": 30, "yellow_heart": 30, "yellow_squar": 30, "yemen": 30, "yen": [30, 34], "yin_yang": 30, "yo_yo": 30, "yt": 30, "yum": 30, "za": [30, 271, 341], "zambia": 30, "zany_fac": 30, "zap": 30, "zebra": 30, "zimbabw": 30, "zipper_mouth": 30, "zipper_mouth_fac": 30, "zm": 30, "zombi": 30, "zw": 30, "zzz": 30, "sheet": [31, 63, 132, 171, 183, 305, 307, 308, 654, 817, 861, 862], "layout": [31, 127, 148, 217, 221, 386, 399, 1092], "emoji": 31, "sphinxemoji": 31, "mmlalia": 31, "mathml": 31, "alias": [31, 342, 818], "entiti": [31, 131, 350, 364, 391, 408, 428, 436, 543, 726, 915, 1071], "isoamsa": 31, "mathemat": [31, 223, 1004], "arrow": [31, 33, 34, 36, 71, 72, 817, 947], "isoamsr": 31, "relat": [31, 67, 119, 152, 163, 167, 188, 192, 247, 260, 279, 354, 363, 370, 374, 376, 380, 383, 387, 396, 400, 405, 406, 413, 528, 628, 666, 683, 707, 708, 709, 710, 725, 734, 782, 860, 915, 925, 1055, 1092, 1093], "isonum": 31, "binari": [31, 40, 48, 52, 53, 56, 74, 85, 86, 127, 131, 137, 191, 192, 200, 204, 206, 207, 209, 214, 216, 219, 229, 309, 353, 386, 398, 566, 643, 735, 749, 757, 802, 931, 934, 947, 959, 986, 991, 1063, 1071, 1085], "sphinxish": 31, "taken": [32, 33, 34, 36, 38, 71, 72, 130, 134, 135, 142, 191, 388, 420, 481, 493, 541, 696, 760, 782, 792, 817, 931, 982, 1071, 1085], "standard": [32, 33, 34, 36, 104, 111, 123, 138, 159, 163, 168, 170, 172, 193, 200, 206, 215, 216, 219, 223, 234, 247, 249, 273, 292, 301, 302, 303, 304, 306, 322, 323, 324, 330, 331, 336, 337, 341, 386, 475, 492, 512, 526, 527, 571, 577, 581, 588, 589, 590, 591, 593, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 643, 648, 674, 676, 678, 679, 708, 710, 797, 800, 801, 817, 850, 864, 880, 886, 889, 902, 905, 929, 959, 978, 979, 995, 1071, 1083, 1088, 1102, 1108, 1109, 1111, 1112, 1113, 1114, 1118], "definit": [32, 33, 34, 36, 105, 127, 131, 133, 134, 136, 138, 151, 160, 163, 164, 169, 183, 190, 192, 256, 258, 274, 301, 322, 323, 324, 354, 363, 366, 369, 370, 376, 380, 383, 387, 393, 394, 395, 396, 398, 399, 400, 405, 406, 413, 415, 419, 427, 428, 450, 473, 512, 530, 531, 532, 537, 538, 544, 545, 547, 556, 559, 560, 582, 608, 617, 628, 638, 654, 666, 668, 681, 685, 689, 707, 709, 710, 735, 757, 818, 862, 863, 931, 950, 957, 963, 968, 979, 983, 996, 997, 1000, 1067, 1081, 1099, 1109, 1112], "includ": [32, 33, 34, 36, 42, 105, 123, 133, 138, 142, 146, 148, 159, 163, 170, 182, 183, 192, 193, 200, 204, 206, 207, 209, 216, 219, 223, 244, 258, 265, 274, 298, 309, 323, 324, 326, 330, 332, 334, 365, 366, 381, 386, 389, 391, 395, 402, 411, 412, 414, 415, 416, 418, 423, 426, 427, 428, 429, 430, 431, 433, 435, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 473, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 512, 518, 521, 528, 529, 530, 532, 536, 537, 538, 539, 541, 542, 543, 544, 545, 546, 547, 548, 553, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 569, 570, 573, 574, 575, 579, 583, 584, 585, 586, 587, 593, 597, 598, 601, 603, 604, 606, 610, 615, 616, 617, 618, 619, 620, 621, 622, 625, 626, 627, 629, 631, 633, 636, 637, 638, 639, 641, 643, 644, 645, 646, 649, 650, 651, 652, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 668, 669, 670, 671, 673, 675, 676, 678, 680, 684, 685, 686, 687, 688, 689, 690, 693, 695, 698, 700, 701, 704, 705, 706, 708, 710, 716, 721, 726, 728, 735, 737, 739, 741, 743, 745, 749, 751, 753, 762, 767, 771, 774, 777, 794, 814, 817, 823, 850, 855, 857, 861, 877, 879, 880, 881, 883, 886, 887, 888, 889, 890, 893, 895, 898, 906, 910, 912, 915, 921, 924, 928, 931, 934, 943, 946, 947, 949, 951, 979, 980, 1005, 1006, 1081, 1088, 1094, 1099, 1101, 1104, 1114], "substitut": [32, 33, 34, 36, 104, 183, 219, 265, 298, 392, 408, 412, 643, 874, 1070], "angzarr": 32, "0237c": 32, "angl": [32, 34, 36, 1115], "WITH": [32, 33, 36, 880], "downward": [32, 33, 34, 36, 420], "zigzag": 32, "cirmid": 32, "02aef": 32, "vertic": [32, 33, 34, 36, 343], "circl": [32, 33, 36, 193, 504, 797], "abov": [32, 33, 36, 76, 111, 131, 133, 134, 135, 136, 138, 142, 146, 150, 169, 172, 183, 192, 200, 206, 216, 219, 223, 312, 359, 382, 392, 402, 428, 448, 450, 469, 473, 476, 481, 482, 511, 521, 538, 539, 543, 544, 563, 607, 669, 718, 751, 757, 767, 784, 785, 801, 829, 861, 862, 863, 887, 891, 917, 924, 947, 955, 986, 1000, 1074, 1080, 1092, 1099], "cudarrl": 32, "02938": 32, "side": [32, 151, 173, 247, 256, 338, 347, 388, 450, 477, 521, 545, 547, 548, 698, 737, 741, 796, 817, 865, 955, 988, 1034, 1060, 1062, 1074], "arc": 32, "clockwis": [32, 36], "cudarrr": 32, "02935": 32, "rightward": [32, 33, 34, 36], "THEN": 32, "curv": [32, 33], "cularr": 32, "021b6": [32, 36], "anticlockwis": [32, 36], "semicircl": [32, 36], "cularrp": 32, "0293d": 32, "plu": [32, 33, 34, 36, 63, 132, 138, 200, 206, 216, 219, 232, 359, 482, 512, 544, 546, 548, 757, 883], "curarr": 32, "021b7": [32, 36], "curarrm": 32, "0293c": 32, "minu": [32, 33, 34, 36, 211, 546, 689], "darr": [32, 34], "021a1": 32, "head": [32, 36, 38, 59, 132, 134, 137, 171, 173, 183, 237, 246, 255, 267, 268, 698, 710, 787, 843, 844, 847, 850, 853, 878, 879, 946, 1012], "021d3": [32, 36], "doubl": [32, 33, 34, 36, 193, 209, 213, 219, 309, 324, 342, 343, 344, 347, 366, 386, 395, 427, 433, 438, 440, 447, 456, 458, 459, 464, 465, 466, 467, 468, 470, 473, 477, 480, 481, 482, 485, 496, 528, 530, 536, 538, 539, 543, 547, 579, 606, 630, 633, 636, 639, 643, 648, 649, 650, 651, 664, 683, 684, 686, 689, 698, 757, 817, 861, 955, 975, 999, 1079], "darr2": 32, "021ca": [32, 36], "pair": [32, 36, 99, 100, 146, 188, 198, 201, 204, 209, 213, 214, 219, 226, 228, 240, 241, 264, 270, 429, 433, 436, 482, 504, 582, 583, 584, 587, 629, 675, 676, 680, 710, 721, 726, 853, 865, 866, 867, 869, 949, 959, 1003, 1055, 1069, 1087], "ddarr": 32, "ddotrahd": 32, "02911": 32, "dot": [32, 33, 34, 36, 135, 402, 417, 422, 839, 933], "stem": [32, 726], "dfisht": 32, "0297f": 32, "down": [32, 33, 36, 130, 131, 134, 159, 236, 274, 307, 328, 369, 414, 415, 426, 433, 469, 477, 478, 480, 481, 504, 546, 579, 604, 626, 643, 668, 685, 710, 725, 726, 757, 803, 849, 856, 863, 931, 934, 1099, 1104], "tail": [32, 36, 132, 171, 173, 183, 237, 246, 267, 268, 698, 710, 745, 787, 844, 847, 850, 853, 1083], "dhar": 32, "02965": 32, "harpoon": [32, 36], "barb": [32, 36], "left": [32, 33, 34, 36, 61, 82, 108, 109, 130, 131, 133, 151, 182, 193, 219, 265, 345, 346, 353, 359, 431, 469, 477, 528, 531, 535, 543, 544, 601, 608, 634, 799, 800, 817, 861, 870, 889, 931, 959, 963, 974, 975, 986, 1000, 1054, 1060, 1081], "besid": [32, 33, 36, 146], "dharl": 32, "021c3": [32, 36], "leftward": [32, 33, 34, 36], "dharr": 32, "021c2": [32, 36], "dlarr": 32, "02199": [32, 36], "south": [32, 36], "west": [32, 36, 140], "drarr": 32, "02198": [32, 36], "east": [32, 36], "duarr": 32, "021f5": [32, 36], "OF": [32, 33, 36, 134, 676], "upward": [32, 34, 36], "duhar": 32, "0296f": [32, 36], "dzigrarr": 32, "027ff": 32, "long": [32, 33, 36, 51, 130, 131, 132, 133, 134, 138, 141, 159, 163, 171, 183, 200, 204, 206, 209, 216, 219, 227, 255, 301, 319, 330, 340, 342, 343, 347, 351, 352, 379, 386, 388, 397, 401, 403, 404, 423, 428, 481, 530, 531, 536, 541, 606, 676, 685, 695, 716, 728, 737, 739, 755, 757, 762, 767, 771, 796, 817, 839, 863, 874, 880, 883, 913, 921, 950, 957, 997, 1007, 1055, 1062, 1076, 1083, 1112], "squiggl": 32, "erarr": 32, "02971": 32, "equal": [32, 33, 34, 36, 133, 155, 167, 183, 190, 193, 219, 223, 255, 256, 265, 324, 330, 346, 353, 358, 369, 394, 397, 475, 485, 486, 490, 526, 571, 590, 594, 621, 623, 689, 710, 792, 796, 850, 874, 913, 917, 918, 986, 1040, 1099], "sign": [32, 33, 34, 36, 134, 141, 146, 209, 340, 342, 350, 394, 408, 432, 606, 669, 730, 986, 1000, 1060, 1109, 1110], "harr": 32, "021d4": [32, 36], "02194": [32, 36], "harrcir": 32, "02948": 32, "small": [32, 36, 41, 104, 130, 132, 133, 163, 183, 187, 243, 322, 394, 398, 431, 478, 528, 640, 685, 854, 855, 861, 893, 925, 978, 1001, 1070, 1099], "harrw": 32, "021ad": [32, 36], "hoarr": 32, "021ff": 32, "imof": 32, "022b7": 32, "imag": [32, 33, 36, 125, 127, 130, 131, 132, 133, 141, 154, 216, 219, 223, 241, 301, 307, 404, 410, 417, 536, 735, 757, 854, 1057, 1062], "laarr": 32, "021da": [32, 36], "tripl": [32, 33, 36, 57, 60], "larr": [32, 34], "0219e": [32, 36], "larr2": 32, "021c7": [32, 36], "larrbf": 32, "0291f": 32, "bar": [32, 33, 34, 36, 137, 158, 178, 201, 214, 219, 228, 231, 261, 264, 265, 270, 310, 410, 469, 690, 953, 995, 1055], "TO": [32, 33, 36, 1010], "black": [32, 36, 136, 187, 195, 207, 210, 582, 943], "larrf": 32, "0291d": 32, "larrhk": 32, "021a9": [32, 36], "larrlp": 32, "021ab": [32, 36], "larrpl": 32, "02939": 32, "larrsim": 32, "02973": 32, "tild": [32, 33, 36], "larrtl": 32, "021a2": [32, 36], "latail": 32, "0291b": 32, "02919": 32, "lbarr": 32, "0290e": 32, "0290c": 32, "ldca": 32, "02936": 32, "ldrdhar": 32, "02967": 32, "ldrushar": 32, "0294b": 32, "ldsh": 32, "021b2": 32, "tip": [32, 36, 188, 198, 201, 204, 228, 240, 264, 270, 1055], "lfisht": 32, "0297c": 32, "lhar": 32, "02962": 32, "lhard": 32, "021bd": [32, 36], "lharu": 32, "021bc": [32, 36], "lharul": 32, "0296a": 32, "llarr": 32, "llhard": 32, "0296b": 32, "below": [32, 33, 36, 127, 131, 132, 133, 136, 138, 142, 151, 163, 172, 190, 223, 236, 333, 335, 402, 409, 420, 453, 467, 469, 476, 477, 481, 620, 622, 636, 648, 668, 669, 685, 689, 698, 700, 705, 706, 708, 730, 751, 792, 796, 800, 817, 854, 863, 884, 928, 931, 1099], "loarr": 32, "021fd": 32, "lrarr": 32, "021c6": [32, 36], "lrarr2": 32, "lrhar": 32, "021cb": [32, 36], "lrhar2": 32, "lrhard": 32, "0296d": 32, "lsh": [32, 36], "021b0": [32, 36], "lurdshar": 32, "0294a": 32, "luruhar": 32, "02966": 32, "02905": 32, "021a6": [32, 36], "midcir": 32, "02af0": 32, "mumap": 32, "022b8": [32, 36], "multimap": [32, 36, 256, 504, 581, 590, 594, 623, 710], "nearhk": 32, "02924": 32, "north": [32, 36], "nearr": 32, "021d7": 32, "02197": [32, 36], "nesear": 32, "02928": [32, 36], "AND": [32, 33, 36, 330, 346, 369, 532, 845, 974], "nharr": 32, "021ce": [32, 36], "stroke": [32, 36], "021ae": [32, 36], "nlarr": 32, "021cd": [32, 36], "0219a": [32, 36], "nrarr": 32, "021cf": [32, 36], "0219b": [32, 36], "nrarrc": 32, "02933": 32, "00338": [32, 36], "directli": [32, 38, 127, 146, 232, 257, 287, 426, 543, 612, 728, 741, 753, 760, 771, 863, 873, 877, 931, 954, 974, 982, 1045, 1047, 1077], "slash": [32, 36, 841, 925], "nrarrw": 32, "0219d": [32, 36], "nvharr": 32, "02904": 32, "nvlarr": 32, "02902": 32, "nvrarr": 32, "02903": 32, "nwarhk": 32, "02923": 32, "nwarr": 32, "021d6": 32, "02196": [32, 36], "nwnear": 32, "02927": 32, "olarr": 32, "021ba": [32, 36], "orarr": 32, "021bb": [32, 36], "origof": 32, "022b6": 32, "origin": [32, 33, 36, 59, 61, 113, 128, 134, 136, 141, 146, 152, 164, 196, 200, 206, 209, 211, 216, 219, 244, 255, 260, 264, 265, 267, 268, 270, 274, 279, 283, 368, 384, 428, 431, 477, 529, 537, 538, 539, 567, 618, 619, 621, 622, 680, 684, 687, 689, 700, 730, 757, 758, 781, 784, 785, 800, 814, 952, 1057, 1071, 1094], "raarr": 32, "021db": [32, 36], "rarr": [32, 34], "021a0": [32, 36], "rarr2": 32, "021c9": [32, 36], "rarrap": 32, "02975": 32, "almost": [32, 33, 36, 57, 60, 133, 146, 155, 192, 347, 395, 397, 418, 533, 598, 626, 674, 690, 925], "rarrbf": 32, "02920": 32, "rarrc": 32, "rarrf": 32, "0291e": 32, "rarrhk": 32, "021aa": [32, 36], "rarrlp": 32, "021ac": [32, 36], "rarrpl": 32, "02945": 32, "rarrsim": 32, "02974": 32, "rarrtl": 32, "02916": 32, "021a3": [32, 36], "rarrw": 32, "ratail": 32, "0291c": 32, "0291a": 32, "rbarr": 32, "02910": [32, 36], "0290f": [32, 36], "0290d": [32, 36], "rdca": 32, "02937": 32, "rdldhar": 32, "02969": 32, "rdsh": 32, "021b3": 32, "rfisht": 32, "0297d": 32, "rhar": 32, "02964": 32, "rhard": 32, "021c1": [32, 36], "rharu": 32, "021c0": [32, 36], "rharul": 32, "0296c": 32, "rlarr": 32, "021c4": [32, 36], "rlarr2": 32, "rlhar": 32, "021cc": [32, 36], "rlhar2": 32, "roarr": 32, "021fe": 32, "rrarr": 32, "rsh": [32, 36, 544, 864], "021b1": [32, 36], "ruluhar": 32, "02968": 32, "searhk": 32, "02925": [32, 36], "searr": 32, "021d8": 32, "seswar": 32, "02929": [32, 36], "simrarr": 32, "02972": 32, "slarr": 32, "02190": [32, 34, 36], "srarr": 32, "02192": [32, 34, 36], "swarhk": 32, "02926": [32, 36], "swarr": 32, "021d9": 32, "swnwar": 32, "0292a": 32, "uarr": [32, 34], "0219f": 32, "021d1": [32, 36], "uarr2": 32, "021c8": [32, 36], "uarrocir": 32, "02949": 32, "udarr": 32, "021c5": [32, 36], "udhar": 32, "0296e": [32, 36], "ufisht": 32, "0297e": 32, "uhar": 32, "02963": 32, "uharl": 32, "021bf": [32, 36], "uharr": 32, "021be": [32, 36], "uuarr": 32, "varr": 32, "021d5": [32, 36], "02195": [32, 36], "xharr": 32, "027fa": [32, 36], "027f7": [32, 36], "xlarr": 32, "027f8": [32, 36], "027f5": [32, 36], "xmap": 32, "027fc": [32, 36], "xrarr": 32, "027f9": [32, 36], "027f6": [32, 36], "zigrarr": 32, "021dd": 32, "ap": [33, 887], "02a70": 33, "approxim": [33, 36, 133, 229], "OR": [33, 36, 206, 330, 346, 369, 386, 845, 974], "0224a": [33, 36], "apid": 33, "0224b": 33, "asymp": 33, "02248": [33, 36], "barv": 33, "02ae7": 33, "tack": [33, 36], "overbar": 33, "bcong": 33, "0224c": [33, 36], "bepsi": 33, "003f6": [33, 36], "greek": [33, 36], "revers": [33, 34, 36, 176, 203, 209, 226, 244, 251, 256, 265, 271, 327, 504, 511, 512, 571, 575, 590, 594, 623, 668, 710, 712, 751, 790, 854, 915, 1002, 1035], "lunat": [33, 36], "epsilon": [33, 36], "bowti": 33, "022c8": 33, "bsim": 33, "0223d": [33, 36], "bsime": 33, "022cd": [33, 36], "bsolhsub": 33, "0005c": [33, 34], "02282": [33, 36], "solidu": [33, 34], "subset": [33, 36, 219, 934, 947, 1004], "bump": 33, "0224e": [33, 36], "geometr": [33, 36, 223], "equival": [33, 36, 76, 90, 104, 107, 219, 355, 359, 374, 379, 540, 617, 781, 783, 818, 850, 883, 963, 985, 995, 1005], "02aae": 33, "bumpi": 33, "0224f": [33, 36], "between": [33, 36, 67, 87, 101, 131, 132, 133, 135, 141, 142, 152, 167, 179, 192, 200, 203, 206, 211, 213, 216, 219, 223, 226, 241, 244, 251, 265, 270, 287, 297, 331, 334, 347, 369, 374, 381, 394, 399, 408, 419, 440, 450, 473, 485, 544, 561, 620, 676, 686, 690, 701, 711, 712, 716, 762, 788, 789, 794, 854, 861, 891, 901, 915, 916, 917, 918, 925, 929, 963, 974, 984, 986, 997, 1061, 1117], "cire": 33, "02257": [33, 36], "colon": [33, 34, 36, 1033], "02237": [33, 36], "proport": [33, 36, 132], "02a74": 33, "02254": [33, 36], "congdot": 33, "02a6d": 33, "congruent": [33, 36], "csub": 33, "02acf": 33, "close": [33, 52, 136, 142, 151, 163, 181, 190, 191, 204, 211, 235, 236, 238, 261, 265, 282, 374, 408, 413, 482, 504, 654, 682, 691, 699, 709, 710, 800, 861, 879, 880, 881, 883, 884, 886, 887, 888, 889, 890, 893, 895, 898, 924, 928, 952, 1063, 1067, 1085, 1125], "csube": 33, "02ad1": 33, "csup": 33, "02ad0": 33, "superset": [33, 36, 1004, 1111], "csupe": 33, "02ad2": 33, "cuepr": 33, "022de": [33, 36], "cuesc": 33, "022df": [33, 36], "succe": [33, 36, 735, 836, 865, 954], "cupr": 33, "0227c": [33, 36], "dashv": 33, "02ae4": [33, 36], "turnstil": [33, 36], "022a3": [33, 36], "easter": [33, 183], "02a6e": 33, "asterisk": [33, 34, 36], "ecir": 33, "02256": [33, 36], "IN": [33, 36, 135], "ecolon": 33, "02255": [33, 36], "eddot": 33, "02a77": [33, 36], "edot": 33, "02251": [33, 36], "efdot": 33, "02252": [33, 36], "THE": [33, 36, 880], "02a9a": 33, "greater": [33, 34, 36, 104, 111, 258, 346, 475, 485, 487, 490, 526, 668, 710, 743, 986], "than": [33, 34, 36, 41, 63, 66, 104, 111, 127, 131, 132, 136, 138, 141, 142, 146, 163, 167, 170, 174, 183, 190, 193, 200, 206, 211, 213, 216, 219, 223, 250, 253, 258, 287, 346, 347, 366, 368, 397, 398, 399, 410, 411, 413, 419, 426, 475, 477, 487, 490, 526, 530, 542, 545, 547, 548, 613, 626, 637, 663, 676, 700, 710, 713, 728, 743, 749, 753, 757, 817, 842, 846, 854, 862, 872, 873, 880, 883, 900, 928, 932, 947, 948, 963, 968, 985, 986, 1030, 1034, 1067, 1074, 1077, 1094, 1112], "02a96": [33, 36], "slant": [33, 36], "egsdot": 33, "02a98": 33, "el": [33, 179, 190, 226], "02a99": 33, "less": [33, 34, 36, 57, 60, 76, 127, 131, 132, 133, 138, 142, 192, 206, 223, 237, 246, 247, 253, 267, 268, 324, 346, 347, 351, 394, 397, 428, 485, 584, 604, 630, 676, 678, 700, 710, 728, 730, 757, 787, 801, 817, 844, 847, 848, 850, 853, 883, 968, 986, 1005, 1087, 1088, 1101, 1112, 1118], "02a95": [33, 36], "elsdot": 33, "02a97": 33, "equest": 33, "0225f": [33, 36], "equivdd": 33, "02a78": 33, "erdot": 33, "02253": [33, 36], "esdot": 33, "02250": [33, 36], "limit": [33, 36, 61, 131, 132, 148, 170, 200, 206, 216, 219, 265, 347, 389, 582, 626, 757, 794, 899, 918, 960, 961, 986, 1059, 1084], "esim": 33, "02a73": 33, "02242": [33, 36], "fork": [33, 41, 133, 148, 152, 710, 716, 717, 719, 724, 727, 734, 738, 748, 761, 766, 772, 775, 778, 853, 886, 899, 907, 925, 1125], "022d4": [33, 36], "pitchfork": [33, 36], "forkv": 33, "02ad9": 33, "02322": 33, "gap": 33, "02a86": [33, 36], "02267": [33, 36], "gel": 33, "02a8c": [33, 36], "022db": [33, 36], "02a7e": [33, 36], "gescc": 33, "02aa9": 33, "gesdot": 33, "02a80": 33, "gesdoto": 33, "02a82": 33, "gesdotol": 33, "02a84": 33, "gesl": 33, "0fe00": [33, 36], "02a94": 33, "022d9": [33, 36], "02277": [33, 36], "gla": 33, "02aa5": 33, "gle": 33, "02a92": 33, "glj": 33, "02aa4": 33, "overlap": [33, 219, 223, 265, 741, 966], "gsdot": 33, "022d7": [33, 36], "gsim": 33, "02273": [33, 36], "gsime": 33, "02a8e": 33, "similar": [33, 57, 60, 131, 133, 163, 167, 171, 173, 204, 217, 231, 349, 356, 427, 454, 478, 480, 515, 527, 536, 654, 689, 690, 705, 706, 728, 743, 757, 801, 947, 949, 1055], "gsiml": 33, "02a90": 33, "0226b": [33, 36], "gtcc": 33, "02aa7": 33, "gtcir": 33, "02a7a": 33, "gtdot": 33, "gtquest": 33, "02a7c": 33, "mark": [33, 34, 36, 190, 231, 302, 303, 343, 365, 665, 673, 773, 963, 965, 1087], "gtrarr": 33, "02978": 33, "homtht": 33, "0223b": 33, "homothet": 33, "lap": 33, "02a85": [33, 36], "lat": 33, "02aab": 33, "larger": [33, 66, 76, 163, 170, 193, 210, 223, 273, 395, 398, 410, 448, 528, 545, 547, 728, 777, 799, 861, 863, 928, 948, 961, 1114], "late": [33, 131, 133, 256, 258, 689, 690, 863, 919, 963, 980, 997, 1115], "02aad": 33, "ldot": 33, "022d6": [33, 36], "le": [33, 448], "02266": [33, 36], "02a8b": [33, 36], "022da": [33, 36], "02a7d": [33, 36], "lescc": 33, "02aa8": 33, "lesdot": 33, "02a7f": 33, "lesdoto": 33, "02a81": 33, "lesdotor": 33, "02a83": 33, "lesg": 33, "02a93": 33, "lg": [33, 271, 1071], "02276": [33, 36], "lge": 33, "02a91": 33, "ll": [33, 36, 57, 60, 111, 130, 131, 132, 134, 136, 138, 141, 146, 147, 159, 161, 171, 173, 187, 216, 219, 247, 250, 253, 470, 478, 545, 547, 548, 757, 783, 854, 863, 874, 889, 936, 939, 945, 978, 1074], "022d8": 33, "lsim": 33, "02272": [33, 36], "lsime": 33, "02a8d": 33, "lsimg": 33, "02a8f": 33, "0226a": [33, 36], "ltcc": 33, "02aa6": 33, "ltcir": 33, "02a79": 33, "ltdot": 33, "ltlarr": 33, "02976": 33, "ltquest": 33, "02a7b": 33, "ltrie": 33, "022b4": [33, 36], "normal": [33, 36, 86, 119, 131, 133, 138, 146, 149, 154, 163, 223, 386, 413, 418, 423, 542, 544, 773, 789, 794, 915, 929, 982, 1061, 1077, 1092, 1104], "mcomma": 33, "02a29": 33, "comma": [33, 34, 169, 182, 203, 1066], "mddot": 33, "0223a": 33, "mid": 33, "02223": [33, 36], "mlcp": 33, "02adb": 33, "transvers": 33, "intersect": [33, 36, 187, 211, 1004], "model": [33, 234, 249, 255, 258, 385, 986, 1058, 1061, 1083], "022a7": 33, "mstpo": 33, "0223e": 33, "invert": [33, 34, 61, 163, 897], "lazi": [33, 200, 206, 216, 219, 338, 685], "02abb": 33, "0227a": [33, 36], "prap": 33, "02ab7": [33, 36], "prcue": 33, "pre": [33, 133, 163, 192, 348, 530, 532, 536, 582, 583, 584, 634, 675, 676, 817, 979, 994, 1070], "02ab3": 33, "02aaf": [33, 36], "singl": [33, 34, 36, 42, 57, 60, 61, 82, 104, 108, 109, 111, 113, 131, 133, 151, 190, 191, 200, 204, 206, 212, 213, 216, 219, 223, 247, 324, 330, 342, 343, 355, 401, 404, 408, 410, 413, 439, 452, 537, 591, 665, 676, 684, 686, 697, 716, 726, 728, 790, 792, 793, 794, 817, 822, 823, 824, 826, 842, 854, 862, 866, 902, 913, 915, 916, 925, 928, 932, 934, 937, 943, 947, 948, 949, 962, 999, 1000, 1007, 1022, 1028, 1061, 1071, 1079, 1082, 1085, 1087, 1092, 1093, 1100], "prsim": 33, "0227e": [33, 36], "prurel": 33, "022b0": 33, "ratio": [33, 223], "02236": 33, "rtrie": 33, "022b5": [33, 36], "AS": [33, 36, 880], "rtriltri": 33, "029ce": 33, "triangl": [33, 36, 504], "samalg": 33, "02210": [33, 36], "coproduct": [33, 36], "02abc": 33, "0227b": [33, 36], "scap": 33, "02ab8": [33, 36], "sccue": 33, "0227d": [33, 36], "sce": 33, "02ab4": 33, "02ab0": [33, 36], "scsim": 33, "0227f": [33, 36], "sdote": 33, "02a66": 33, "sfrown": 33, "simg": 33, "02a9e": 33, "02aa0": 33, "siml": 33, "02a9d": 33, "02a9f": 33, "smid": 33, "02323": 33, "smt": 33, "02aaa": 33, "smaller": [33, 209, 223, 324, 386, 395, 410, 949], "smte": 33, "02aac": 33, "spar": [33, 249, 410], "02225": [33, 36], "parallel": [33, 36, 57, 60, 70, 71, 72, 76, 89, 137, 160, 163, 167, 169, 204, 259, 260, 278, 279, 418, 698, 710, 747, 749, 757, 760, 793, 801, 902, 913, 916, 963, 965, 966, 1050, 1055, 1116, 1117, 1124, 1128], "sqsub": 33, "0228f": [33, 36], "squar": [33, 34, 36, 61, 151, 164, 174, 190, 196, 203, 206, 211, 213, 219, 223, 232, 244, 258, 265, 436, 547, 957, 1006, 1009, 1079], "sqsube": 33, "02291": [33, 36], "sqsup": 33, "02290": [33, 36], "sqsupe": 33, "02292": [33, 36], "ssmile": 33, "sub": [33, 207, 219, 265, 431, 448, 528, 953, 992, 1001, 1007, 1101], "022d0": [33, 36], "sube": 33, "02ac5": [33, 36], "subedot": 33, "02ac3": 33, "submult": 33, "02ac1": 33, "subplu": 33, "02abf": 33, "subrarr": 33, "02979": 33, "subsim": 33, "02ac7": 33, "subsub": 33, "02ad5": 33, "subsup": 33, "02ad3": 33, "sup": [33, 887], "022d1": [33, 36], "supdsub": 33, "02ad8": 33, "supe": 33, "02ac6": [33, 36], "supedot": 33, "02ac4": 33, "suphsol": 33, "02283": [33, 36], "0002f": [33, 34], "suphsub": 33, "02ad7": 33, "suplarr": 33, "0297b": 33, "supmult": 33, "02ac2": 33, "supplu": 33, "02ac0": 33, "supsim": 33, "02ac8": 33, "supsub": 33, "02ad4": 33, "supsup": 33, "02ad6": 33, "thkap": 33, "thksim": 33, "0223c": [33, 36], "topfork": 33, "02ada": 33, "tee": [33, 801], "trie": 33, "0225c": [33, 36], "delta": [33, 36, 146, 196], "twixt": 33, "0226c": [33, 36], "vbar": 33, "02aeb": 33, "02ae8": 33, "underbar": 33, "vbarv": 33, "02ae9": 33, "vdash": 33, "022ab": 33, "022a9": 33, "forc": [33, 130, 132, 136, 159, 219, 319, 393, 408, 436, 532, 792, 870, 899, 933, 1054, 1112], "022a8": [33, 36], "022a2": [33, 36], "vdashl": 33, "02ae6": 33, "veebar": 33, "022bb": 33, "xor": [33, 974], "vltri": 33, "022b2": [33, 36], "vprop": 33, "0221d": [33, 36], "vrtri": 33, "022b3": [33, 36], "vvdash": 33, "022aa": 33, "\u00bd": 34, "\u00bc": 34, "\u215b": 34, "\u00be": 34, "\u215c": 34, "\u215d": 34, "\u215e": 34, "_": [34, 37, 61, 151, 152, 187, 200, 203, 204, 206, 213, 216, 219, 226, 229, 241, 265, 293, 341, 410, 540, 663, 747, 817, 919, 945, 963, 965], "\u00b5": 34, "\u03c9": 34, "\u00aa": 34, "\u00ba": 34, "\u00b9": 34, "\u00b2": 34, "\u00b3": 34, "amp": [34, 203], "00026": 34, "ampersand": [34, 639], "apo": 34, "00027": 34, "apostroph": 34, "ast": [34, 448], "0002a": 34, "brvbar": 34, "000a6": 34, "broken": [34, 384, 385, 654, 749, 762, 967, 1033, 1066], "bsol": 34, "cent": 34, "000a2": 34, "0003a": 34, "0002c": 34, "commat": 34, "00040": 34, "commerci": [34, 138, 735, 796], "AT": 34, "000a9": 34, "curren": 34, "000a4": 34, "currenc": [34, 249, 410], "02193": [34, 36], "deg": 34, "000b0": 34, "degre": [34, 427, 438, 470, 580, 863, 980], "000f7": [34, 36], "00024": 34, "0003d": 34, "excl": 34, "00021": 34, "frac12": 34, "000bd": 34, "vulgar": 34, "fraction": [34, 223, 287], "ONE": [34, 627], "frac14": 34, "000bc": 34, "quarter": 34, "frac18": 34, "0215b": 34, "eighth": 34, "frac34": 34, "000be": 34, "frac38": 34, "0215c": 34, "frac58": 34, "0215d": 34, "frac78": 34, "0215e": 34, "0003e": 34, "horbar": 34, "02015": 34, "horizont": [34, 343], "hyphen": 34, "02010": 34, "iexcl": 34, "000a1": 34, "iquest": 34, "000bf": 34, "laquo": 34, "000ab": 34, "quotat": [34, 36], "lcub": 34, "0007b": [34, 36], "curli": [34, 36], "bracket": [34, 36, 983], "ldquo": 34, "0201c": [34, 36], "lowbar": 34, "0005f": 34, "low": [34, 127, 174, 203, 223, 240, 336, 368, 404, 408, 413, 436, 459, 469, 473, 476, 485, 684, 686, 739, 753, 793, 861, 917, 933, 1012, 1114], "lpar": 34, "00028": 34, "parenthesi": 34, "lsqb": 34, "0005b": [34, 36], "lsquo": 34, "02018": [34, 36], "0003c": 34, "micro": [34, 200, 206, 216, 219], "000b5": 34, "middot": 34, "000b7": [34, 36], "middl": [34, 36, 37, 61, 141, 152, 207, 223, 275, 388, 408, 469, 504, 735, 854, 864, 870, 931, 965], "nbsp": 34, "000a0": [34, 36], "NO": [34, 36, 142, 183, 298, 607, 863, 928], "space": [34, 36, 61, 76, 97, 108, 109, 111, 127, 131, 132, 133, 138, 151, 154, 178, 192, 219, 237, 244, 246, 247, 265, 267, 268, 292, 303, 304, 312, 331, 350, 352, 371, 432, 437, 446, 450, 469, 475, 476, 479, 480, 483, 484, 485, 503, 526, 535, 544, 579, 699, 709, 710, 718, 755, 770, 784, 785, 786, 787, 791, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 831, 832, 833, 834, 835, 837, 853, 862, 865, 866, 867, 868, 869, 876, 880, 881, 882, 883, 884, 892, 894, 899, 907, 908, 910, 911, 914, 916, 924, 931, 933, 935, 936, 937, 938, 939, 940, 941, 942, 948, 963, 966, 1000], "000ac": 34, "NOT": [34, 36, 161, 330, 369, 414, 453, 454, 467, 468, 728, 845, 1077], "num": [34, 136, 150, 151, 164, 174, 190, 204, 206, 211, 213, 219, 223, 241, 244, 374, 559, 561, 643, 644, 645, 646, 655, 675, 845, 850, 958, 1066], "00023": 34, "ohm": 34, "02126": 34, "ordf": 34, "000aa": 34, "feminin": 34, "ordin": [34, 219, 226, 229, 265, 271, 1071], "indic": [34, 182, 200, 206, 211, 216, 219, 255, 582, 718], "ordm": 34, "000ba": 34, "masculin": 34, "para": 34, "000b6": 34, "pilcrow": 34, "percnt": 34, "00025": 34, "percent": [34, 223], "period": [34, 82, 148, 171, 402, 535, 701, 767, 854, 862, 881, 891, 913, 915, 928, 1087], "0002e": 34, "full": [34, 149, 194, 198, 244, 347, 362, 390, 395, 497, 509, 544, 648, 685, 698, 796, 801, 862, 904, 910, 955, 974, 1007, 1066, 1074], "stop": [34, 125, 136, 192, 219, 256, 258, 260, 265, 279, 286, 413, 453, 467, 751, 854, 929, 954, 1080, 1099], "0002b": 34, "plusmn": 34, "000b1": [34, 36], "000a3": 34, "quest": 34, "0003f": 34, "quot": [34, 151, 199, 202, 206, 213, 219, 227, 343, 782, 845, 846, 864, 999], "00022": 34, "raquo": 34, "000bb": 34, "rcub": 34, "0007d": [34, 36], "rdquo": 34, "0201d": [34, 36], "reg": 34, "000ae": [34, 36], "rpar": 34, "00029": 34, "rsqb": 34, "0005d": [34, 36], "rsquo": 34, "02019": [34, 36], "sect": 34, "000a7": 34, "section": [34, 36, 86, 131, 135, 136, 137, 146, 155, 168, 192, 217, 250, 253, 256, 319, 512, 530, 612, 697, 747, 749, 817, 860, 861, 877, 931, 932, 933, 935, 941, 947, 948, 949, 1092], "semi": [34, 251, 440, 684, 899, 950], "0003b": 34, "semicolon": [34, 413, 1066], "shy": 34, "000ad": 34, "soft": [34, 128, 308, 755], "sol": 34, "sung": 34, "0266a": 34, "sup1": 34, "000b9": 34, "superscript": 34, "sup2": 34, "000b2": 34, "sup3": 34, "000b3": 34, "000d7": 34, "trade": 34, "02122": 34, "02191": [34, 36], "verbar": 34, "0007c": [34, 36], "000a5": 34, "lorem": 35, "ipsum": 35, "h\u00f6dlmoser": 35, "anywai": [35, 41, 51, 59, 130, 132, 133, 142, 161, 163, 183, 192, 193, 219, 350, 398, 404, 408, 414, 530, 536, 545, 547, 548, 626, 634, 637, 641, 675, 676, 686, 749, 757, 796, 817, 907, 963, 1077, 1092], "hmm": [35, 128, 137, 150, 161, 515, 648, 928], "annoi": [35, 41, 287, 410, 626, 1092], "thing": [35, 38, 40, 41, 47, 98, 124, 130, 131, 133, 134, 135, 136, 137, 138, 142, 151, 155, 159, 162, 163, 167, 171, 183, 200, 206, 207, 209, 216, 219, 229, 290, 348, 364, 368, 392, 398, 401, 408, 432, 436, 504, 511, 512, 528, 530, 537, 542, 544, 566, 626, 648, 665, 689, 698, 708, 716, 721, 753, 757, 782, 796, 801, 850, 854, 855, 882, 887, 910, 915, 931, 943, 947, 948, 954, 968, 982, 1005, 1099, 1117], "thin": [35, 36], "border": 35, "anfrag": [35, 1108, 1109, 1110, 1111, 1116, 1118, 1119, 1123, 1124, 1125, 1126, 1128, 1129, 1130], "dauer": [35, 1108, 1109, 1110, 1111, 1116, 1118, 1119, 1123, 1124, 1125, 1126, 1128, 1129, 1130], "tage": [35, 156, 158, 166, 318, 1108, 1109, 1110, 1111, 1116, 1118, 1119, 1123, 1125, 1126, 1128, 1129, 1130], "sysprog": [35, 127, 128, 247, 320, 710, 764, 769, 853, 894, 895, 898, 1125, 1126, 1128, 1129], "catcher": 35, "somehow": [35, 40, 115, 132, 542, 765, 1087, 1088], "einf\u00fchrungskur": [35, 1108, 1125, 1126, 1128, 1129], "richtet": [35, 1110, 1125], "programmier": [35, 318, 319, 1110, 1111, 1116, 1118, 1119, 1124, 1125], "kennen": [35, 302, 1125], "lernen": [35, 1125], "zusammenh\u00e4ng": [35, 1125], "grundpfeil": [35, 1125], "erkl\u00e4rt": [35, 151, 154, 158, 1109, 1125, 1129, 1130], "gro\u00dfe": [35, 164, 1125], "bild": [35, 154, 1125], "orientieren": [35, 1125], "zurechtfinden": [35, 302, 1125], "somedai": 35, "better": [35, 55, 59, 63, 125, 127, 128, 132, 136, 142, 143, 153, 163, 164, 166, 167, 169, 170, 171, 174, 175, 188, 192, 198, 200, 201, 203, 204, 209, 210, 211, 213, 214, 217, 220, 223, 228, 232, 240, 247, 260, 264, 270, 279, 327, 339, 347, 354, 363, 368, 369, 370, 376, 380, 383, 387, 388, 396, 398, 400, 405, 406, 409, 413, 418, 419, 424, 426, 504, 531, 539, 553, 566, 583, 606, 618, 621, 626, 628, 666, 678, 689, 707, 709, 710, 757, 836, 862, 863, 883, 899, 902, 928, 929, 957, 968, 986, 1000, 1012, 1051, 1052, 1055, 1060, 1062, 1070, 1076, 1092, 1101], "yet": [35, 76, 121, 127, 131, 138, 141, 151, 153, 220, 221, 231, 244, 365, 398, 426, 435, 448, 450, 481, 482, 497, 504, 597, 700, 757, 774, 784, 785, 862, 870, 874, 928, 955, 985, 1012, 1082, 1092, 1101], "redefin": 35, "wrap": [35, 61, 190, 228, 447, 686, 692, 757, 1083], "look": [35, 40, 41, 43, 57, 60, 63, 80, 87, 100, 111, 124, 125, 130, 131, 132, 133, 134, 136, 138, 141, 146, 151, 159, 163, 167, 170, 182, 188, 192, 217, 247, 250, 253, 256, 257, 275, 286, 319, 382, 390, 398, 404, 408, 410, 413, 414, 421, 470, 480, 481, 497, 515, 541, 553, 565, 617, 630, 654, 686, 692, 693, 711, 716, 726, 753, 757, 784, 785, 789, 793, 796, 807, 809, 814, 821, 829, 844, 855, 861, 862, 870, 887, 897, 924, 925, 948, 952, 962, 979, 982, 1020, 1024, 1033, 1055, 1062, 1066, 1077, 1094, 1112, 1115], "mdbootstrap": 35, "jqueri": 35, "icon": 35, "longrightarrow": 36, "rightarrow": 36, "doubleleftrightarrow": 36, "02220": 36, "applyfunct": 36, "02061": 36, "applic": [36, 61, 76, 92, 116, 131, 136, 148, 161, 183, 298, 319, 394, 397, 404, 481, 562, 565, 633, 674, 795, 855, 862, 874, 899, 1062], "approx": [36, 1043, 1092], "approxeq": 36, "assign": [36, 95, 151, 152, 153, 158, 164, 174, 181, 189, 200, 203, 206, 209, 211, 215, 216, 221, 223, 227, 251, 255, 256, 258, 301, 307, 308, 330, 347, 353, 354, 363, 370, 376, 377, 380, 383, 387, 392, 394, 396, 400, 405, 406, 440, 447, 453, 454, 462, 467, 468, 530, 531, 534, 541, 597, 606, 613, 623, 627, 628, 630, 634, 641, 664, 666, 671, 680, 686, 706, 707, 709, 710, 861, 863, 902, 913, 916, 918, 995, 1006, 1080, 1082], "backcong": 36, "backepsilon": 36, "backprim": 36, "02035": 36, "backsim": 36, "backsimeq": 36, "backslash": [36, 343, 841, 999], "02216": 36, "barwedg": 36, "02305": 36, "02235": 36, "bernoulli": 36, "0212c": 36, "bigcap": 36, "022c2": 36, "bigcirc": 36, "025ef": 36, "bigcup": 36, "022c3": 36, "union": [36, 187, 195, 211, 386, 703, 1004, 1113], "bigodot": 36, "02a00": 36, "bigoplu": 36, "02a01": 36, "bigotim": 36, "02a02": 36, "bigsqcup": 36, "02a06": 36, "bigstar": 36, "02605": 36, "bigtriangledown": 36, "025bd": 36, "white": [36, 255, 332], "bigtriangleup": 36, "025b3": 36, "biguplu": 36, "02a04": 36, "bigve": 36, "022c1": 36, "logic": [36, 133, 290, 338, 354, 363, 368, 370, 376, 380, 383, 387, 392, 396, 400, 405, 406, 433, 450, 628, 666, 707, 709, 710, 1077], "bigwedg": 36, "022c0": 36, "bkarow": 36, "blacklozeng": 36, "029eb": 36, "lozeng": 36, "blacksquar": 36, "025aa": 36, "blacktriangl": 36, "025b4": 36, "blacktriangledown": 36, "025be": 36, "blacktriangleleft": 36, "025c2": 36, "blacktriangleright": 36, "025b8": 36, "bot": [36, 1092], "022a5": 36, "boxminu": 36, "0229f": 36, "boxplu": 36, "0229e": 36, "boxtim": 36, "022a0": 36, "breve": 36, "002d8": 36, "bullet": [36, 133, 1062], "02022": 36, "bumpeq": 36, "capitaldifferentiald": 36, "02145": 36, "struck": 36, "ital": 36, "d": [36, 83, 95, 105, 111, 131, 132, 133, 134, 150, 153, 161, 164, 169, 174, 179, 181, 187, 190, 193, 196, 197, 201, 203, 204, 206, 211, 213, 216, 219, 223, 226, 229, 241, 244, 247, 251, 260, 261, 264, 265, 271, 279, 293, 295, 296, 301, 324, 331, 332, 334, 338, 365, 369, 398, 408, 410, 424, 431, 436, 530, 536, 543, 597, 598, 603, 604, 606, 610, 636, 673, 685, 686, 698, 700, 730, 751, 765, 781, 784, 785, 794, 796, 800, 801, 814, 817, 818, 839, 843, 845, 850, 856, 861, 862, 863, 875, 880, 928, 931, 953, 955, 981, 987, 992, 994, 995, 999, 1000, 1003, 1023], "caylei": 36, "0212d": 36, "letter": [36, 63, 341, 985], "cedilla": 36, "000b8": 36, "centerdot": 36, "checkmark": 36, "02713": 36, "circeq": 36, "circlearrowleft": 36, "circlearrowright": 36, "circledast": 36, "0229b": 36, "circledcirc": 36, "0229a": 36, "circleddash": 36, "0229d": 36, "circledot": 36, "02299": 36, "circledr": 36, "024c8": 36, "latin": [36, 210, 271], "circleminu": 36, "02296": 36, "circleplu": 36, "02295": 36, "circletim": 36, "02297": 36, "clockwisecontourintegr": 36, "02232": 36, "contour": 36, "closecurlydoublequot": 36, "closecurlyquot": 36, "clubsuit": 36, "02663": 36, "suit": [36, 42, 95, 127, 167, 236, 240, 309, 386, 395, 426, 427, 428, 430, 431, 433, 435, 448, 450, 451, 470, 477, 478, 480, 481, 482, 545, 546, 547, 548, 637, 638, 675, 684, 685, 704, 705, 706, 708, 1093, 1100, 1115, 1130], "coloneq": 36, "complement": [36, 104, 347], "02201": 36, "complex": [36, 67, 131, 142, 146, 163, 169, 189, 206, 211, 213, 219, 223, 227, 229, 244, 251, 265, 301, 322, 365, 377, 392, 701, 861, 862, 886, 902, 925, 986, 995, 1105, 1115], "02102": 36, "02261": 36, "ident": [36, 215, 265, 521, 974, 976, 995], "contourintegr": 36, "0222e": 36, "counterclockwisecontourintegr": 36, "02233": 36, "cupcap": 36, "0224d": 36, "curlyeqprec": 36, "curlyeqsucc": 36, "curlyve": 36, "022ce": 36, "curlywedg": 36, "022cf": 36, "curvearrowleft": 36, "curvearrowright": 36, "dbkarow": 36, "ddagger": 36, "02021": 36, "ddotseq": 36, "02207": 36, "nabla": 36, "diacriticalacut": 36, "000b4": 36, "acut": 36, "accent": 36, "diacriticaldot": 36, "002d9": 36, "diacriticaldoubleacut": 36, "002dd": 36, "diacriticalgrav": 36, "00060": 36, "grave": 36, "diacriticaltild": 36, "002dc": 36, "022c4": 36, "diamondsuit": 36, "02666": 36, "differentiald": 36, "02146": 36, "digamma": 36, "003dd": 36, "div": [36, 398, 448], "divideontim": 36, "022c7": 36, "doteq": 36, "doteqdot": 36, "dotequ": 36, "dotminu": 36, "02238": 36, "dotplu": 36, "02214": 36, "dotsquar": 36, "022a1": 36, "doublebarwedg": 36, "02306": 36, "doublecontourintegr": 36, "0222f": 36, "surfac": [36, 163, 793, 861, 862, 1060, 1062], "doubledot": 36, "000a8": 36, "diaeresi": 36, "doubledownarrow": 36, "doubleleftarrow": 36, "021d0": 36, "doubleleftte": 36, "doublelongleftarrow": 36, "doublelongleftrightarrow": 36, "doublelongrightarrow": 36, "doublerightarrow": 36, "021d2": 36, "doublerightte": 36, "doubleuparrow": 36, "doubleupdownarrow": 36, "doubleverticalbar": 36, "downarrow": 36, "downarrowuparrow": 36, "downdownarrow": 36, "downharpoonleft": 36, "downharpoonright": 36, "downleftvector": 36, "downrightvector": 36, "downte": 36, "022a4": 36, "downteearrow": 36, "021a7": 36, "drbkarow": 36, "02208": 36, "emptyset": 36, "02205": 36, "eqcirc": 36, "eqcolon": 36, "eqsim": 36, "eqslantgtr": 36, "eqslantless": 36, "equaltild": 36, "equilibrium": 36, "02203": 36, "THERE": [36, 532], "02130": 36, "exponential": 36, "02147": 36, "fallingdotseq": 36, "foral": [36, 1006], "02200": 36, "FOR": [36, 142, 164, 171], "fouriertrf": 36, "02131": 36, "geq": 36, "02265": 36, "geqq": 36, "geqslant": 36, "ggg": 36, "gnapprox": 36, "02a8a": 36, "gneq": 36, "02a88": 36, "gneqq": 36, "02269": 36, "BUT": 36, "greaterequ": 36, "greaterequalless": 36, "greaterfullequ": 36, "greaterless": 36, "greaterslantequ": 36, "greatertild": 36, "gtrapprox": 36, "gtrdot": 36, "gtreqless": 36, "gtreqqless": 36, "gtrless": 36, "gtrsim": 36, "gvertneqq": 36, "hacek": 36, "002c7": 36, "caron": 36, "hbar": 36, "0210f": 36, "planck": 36, "constant": [36, 192, 200, 206, 209, 210, 211, 216, 219, 223, 261, 330, 338, 339, 344, 354, 358, 363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 472, 578, 628, 639, 666, 676, 678, 707, 709, 710], "pi": [36, 76, 104, 111, 114, 143, 147, 173, 203, 206, 247, 258, 307, 318, 320, 344, 371, 374, 392, 477, 481, 482, 541, 561, 641, 710, 734, 738, 761, 766, 772, 775, 778, 853, 860, 862, 863, 874, 919, 932, 934, 941, 942, 945, 986], "heartsuit": 36, "02665": 36, "hilbertspac": 36, "0210b": 36, "h": [36, 40, 42, 95, 111, 133, 138, 154, 157, 159, 164, 170, 174, 179, 192, 193, 200, 203, 204, 211, 213, 223, 236, 247, 258, 282, 323, 324, 326, 330, 332, 334, 342, 365, 366, 368, 374, 381, 389, 391, 395, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431, 433, 435, 438, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 505, 511, 512, 514, 515, 518, 521, 523, 528, 529, 530, 531, 536, 537, 538, 539, 541, 542, 543, 544, 545, 546, 547, 548, 606, 615, 616, 617, 618, 619, 620, 621, 622, 631, 633, 636, 637, 638, 654, 655, 658, 669, 672, 675, 676, 680, 684, 685, 686, 687, 689, 698, 700, 704, 705, 706, 708, 716, 721, 725, 726, 728, 735, 737, 739, 741, 743, 745, 749, 751, 753, 762, 767, 770, 771, 774, 776, 777, 783, 794, 801, 814, 817, 839, 845, 855, 857, 861, 877, 879, 880, 881, 883, 884, 886, 887, 888, 889, 890, 893, 895, 898, 912, 915, 919, 921, 923, 924, 928, 929, 931, 932, 933, 934, 939, 943, 946, 947, 949, 992, 1007, 1087, 1094, 1099, 1101, 1104], "hksearow": 36, "hkswarow": 36, "hookleftarrow": 36, "hookrightarrow": 36, "hslash": 36, "humpdownhump": 36, "humpequ": 36, "iiiint": 36, "02a0c": 36, "quadrupl": 36, "iiint": 36, "0222d": 36, "02111": 36, "imaginaryi": 36, "02148": 36, "imaglin": 36, "02110": 36, "imagpart": 36, "impli": [36, 690, 1087], "02124": 36, "z": [36, 107, 150, 151, 154, 164, 174, 206, 207, 219, 222, 244, 271, 331, 341, 352, 353, 414, 547, 610, 680, 783, 844, 929, 981, 1107, 1116, 1118, 1123], "0222b": 36, "interc": 36, "022ba": 36, "intercal": 36, "intprod": 36, "02a3c": 36, "interior": 36, "invisiblecomma": 36, "02063": 36, "invis": [36, 454], "invisibletim": 36, "02062": 36, "langl": 36, "02329": 36, "laplacetrf": 36, "02112": 36, "lbrace": 36, "lbrack": 36, "leftanglebracket": 36, "leftarrow": 36, "leftarrowbar": 36, "021e4": 36, "leftarrowrightarrow": 36, "leftarrowtail": 36, "leftceil": 36, "02308": 36, "ceil": [36, 191, 204, 223, 1085], "leftdoublebracket": 36, "0301a": 36, "leftdownvector": 36, "leftfloor": 36, "0230a": 36, "leftharpoondown": 36, "leftharpoonup": 36, "leftleftarrow": 36, "leftrightarrow": 36, "leftrightharpoon": 36, "leftrightsquigarrow": 36, "leftte": 36, "leftteearrow": 36, "021a4": 36, "leftthreetim": 36, "022cb": 36, "semidirect": 36, "lefttriangl": 36, "lefttriangleequ": 36, "leftupvector": 36, "leftvector": 36, "leq": 36, "02264": 36, "leqq": 36, "leqslant": 36, "lessapprox": 36, "lessdot": 36, "lesseqgtr": 36, "lesseqqgtr": 36, "lessequalgreat": 36, "lessfullequ": 36, "lessgreat": 36, "lessgtr": 36, "lesssim": 36, "lessslantequ": 36, "lesstild": 36, "llcorner": 36, "0231e": 36, "bottom": [36, 178, 470, 477, 755, 817, 836, 854, 954], "corner": [36, 192, 255, 319, 331, 411, 423, 477, 698], "lleftarrow": 36, "lmoustach": 36, "023b0": 36, "upper": [36, 164, 187, 211, 213, 219, 229, 244, 251, 265, 286, 295, 324, 328, 344, 368, 916, 1016], "lower": [36, 133, 187, 200, 206, 211, 216, 219, 223, 229, 244, 265, 286, 295, 324, 328, 344, 368, 428, 572, 917, 925, 974, 1082], "lnapprox": 36, "02a89": 36, "lneq": 36, "02a87": 36, "lneqq": 36, "02268": 36, "longleftarrow": 36, "longleftrightarrow": 36, "longmapsto": 36, "looparrowleft": 36, "looparrowright": 36, "lowerleftarrow": 36, "lowerrightarrow": 36, "025ca": 36, "lrcorner": 36, "0231f": 36, "lvertneqq": 36, "maltes": 36, "02720": 36, "mapsto": 36, "measuredangl": 36, "02221": 36, "measur": [36, 95, 133, 223, 256, 260, 279, 394, 401, 447, 451, 469, 474, 475, 476, 479, 480, 481, 483, 484, 485, 526, 604, 710, 716, 783, 792, 883, 924, 948, 1060, 1062], "mellintrf": 36, "02133": 36, "minusplu": 36, "02213": 36, "napprox": 36, "02249": 36, "0266e": 36, "music": [36, 133, 261], "02115": 36, "nearrow": 36, "negativemediumspac": 36, "0200b": 36, "width": [36, 200, 206, 209, 210, 216, 219, 241, 249, 265, 324, 347, 436, 521, 545, 854, 925, 1000, 1066, 1116, 1123], "negativethickspac": 36, "negativethinspac": 36, "negativeverythinspac": 36, "nestedgreatergreat": 36, "nestedlessless": 36, "nexist": 36, "02204": 36, "ngeq": 36, "02271": 36, "neither": [36, 151, 426, 453, 467, 637, 802, 804, 805, 887, 996], "nor": [36, 151, 207, 453, 467, 537, 637, 802, 804, 805, 854, 874, 887, 996], "ngeqq": 36, "ngeqslant": 36, "ngtr": 36, "0226f": 36, "nleftarrow": 36, "nleftrightarrow": 36, "nleq": 36, "02270": 36, "nleqq": 36, "nleqslant": 36, "nless": 36, "0226e": 36, "nonbreakingspac": 36, "notcongru": 36, "02262": 36, "notdoubleverticalbar": 36, "02226": 36, "notel": 36, "02209": 36, "notequ": 36, "02260": 36, "notequaltild": 36, "notexist": 36, "notgreat": 36, "notgreaterequ": 36, "notgreaterfullequ": 36, "notgreatergreat": 36, "notgreaterless": 36, "02279": 36, "notgreaterslantequ": 36, "notgreatertild": 36, "02275": 36, "nothumpdownhump": 36, "notlefttriangl": 36, "022ea": 36, "notlefttriangleequ": 36, "022ec": 36, "notless": 36, "notlessequ": 36, "notlessgreat": 36, "02278": 36, "notlessless": 36, "notlessslantequ": 36, "notlesstild": 36, "02274": 36, "notpreced": 36, "02280": 36, "notprecedesequ": 36, "notprecedesslantequ": 36, "022e0": 36, "notreverseel": 36, "0220c": 36, "notrighttriangl": 36, "022eb": 36, "notrighttriangleequ": 36, "022ed": 36, "notsquaresubsetequ": 36, "022e2": 36, "notsquaresupersetequ": 36, "022e3": 36, "notsubset": 36, "020d2": 36, "notsubsetequ": 36, "02288": 36, "notsucce": 36, "02281": 36, "notsucceedsequ": 36, "notsucceedsslantequ": 36, "022e1": 36, "notsuperset": 36, "notsupersetequ": 36, "02289": 36, "nottild": 36, "02241": 36, "nottildeequ": 36, "02244": 36, "asymptot": 36, "nottildefullequ": 36, "02247": 36, "actual": [36, 40, 41, 46, 59, 133, 136, 141, 146, 163, 190, 200, 206, 209, 216, 219, 223, 250, 253, 255, 304, 428, 438, 597, 604, 626, 684, 716, 854, 862, 886, 929, 952, 968, 977, 1010, 1058, 1060, 1062, 1084, 1099], "nottildetild": 36, "notverticalbar": 36, "02224": 36, "nparallel": 36, "nprec": 36, "npreceq": 36, "nrightarrow": 36, "nshortmid": 36, "nshortparallel": 36, "nsimeq": 36, "nsubset": 36, "nsubseteq": 36, "nsubseteqq": 36, "nsucc": 36, "nsucceq": 36, "nsupset": 36, "nsupseteq": 36, "nsupseteqq": 36, "ntriangleleft": 36, "ntrianglelefteq": 36, "ntriangleright": 36, "ntrianglerighteq": 36, "nwarrow": 36, "oint": 36, "opencurlydoublequot": 36, "opencurlyquot": 36, "orderof": 36, "02134": 36, "partiald": 36, "02202": 36, "partial": [36, 257, 735, 1059], "differenti": [36, 67, 620, 688, 757, 802, 861, 986, 1054, 1071], "plusminu": 36, "poincareplan": 36, "0210c": 36, "prec": 36, "precapprox": 36, "preccurlyeq": 36, "precedesequ": 36, "precedesslantequ": 36, "precedestild": 36, "preceq": 36, "precnapprox": 36, "02ab9": 36, "precneqq": 36, "02ab5": 36, "precnsim": 36, "022e8": 36, "precsim": 36, "02119": 36, "propto": 36, "quaternion": 36, "0210d": 36, "questeq": 36, "rangl": 36, "0232a": 36, "0211a": 36, "q": [36, 111, 171, 223, 368, 374, 528, 546, 547, 561, 689, 794, 817, 849, 924, 1087], "rbrace": 36, "rbrack": 36, "0211c": 36, "realin": 36, "0211b": 36, "realpart": 36, "real": [36, 71, 122, 138, 141, 146, 149, 151, 167, 188, 201, 206, 207, 214, 216, 219, 223, 228, 231, 241, 249, 255, 264, 270, 287, 348, 397, 404, 418, 424, 430, 447, 470, 479, 481, 483, 484, 485, 503, 527, 528, 533, 648, 663, 681, 684, 718, 757, 794, 795, 817, 854, 862, 874, 915, 1001, 1055, 1058, 1060, 1093, 1112, 1115], "0211d": 36, "reverseel": 36, "0220b": 36, "reverseequilibrium": 36, "reverseupequilibrium": 36, "rightanglebracket": 36, "rightarrowbar": 36, "021e5": 36, "rightarrowleftarrow": 36, "rightarrowtail": 36, "rightceil": 36, "02309": 36, "rightdoublebracket": 36, "0301b": 36, "rightdownvector": 36, "rightfloor": 36, "0230b": 36, "rightharpoondown": 36, "rightharpoonup": 36, "rightleftarrow": 36, "rightleftharpoon": 36, "rightrightarrow": 36, "rightsquigarrow": 36, "rightte": 36, "rightteearrow": 36, "rightthreetim": 36, "022cc": 36, "righttriangl": 36, "righttriangleequ": 36, "rightupvector": 36, "rightvector": 36, "risingdotseq": 36, "rmoustach": 36, "023b1": 36, "rrightarrow": 36, "searrow": 36, "setminu": 36, "shortdownarrow": 36, "shortleftarrow": 36, "shortmid": 36, "shortparallel": 36, "shortrightarrow": 36, "shortuparrow": 36, "simeq": 36, "02243": 36, "smallcircl": 36, "02218": 36, "smallsetminu": 36, "spadesuit": 36, "02660": 36, "sqrt": [36, 191, 204, 528, 530, 538, 539, 547, 633, 648, 649, 650, 651, 652, 689, 1085], "0221a": 36, "sqsubset": 36, "sqsubseteq": 36, "sqsupset": 36, "sqsupseteq": 36, "025a1": 36, "squareintersect": 36, "02293": 36, "cap": [36, 203, 1012], "squaresubset": 36, "squaresubsetequ": 36, "squaresuperset": 36, "squaresupersetequ": 36, "squareunion": 36, "02294": 36, "cup": [36, 261], "022c6": 36, "straightepsilon": 36, "003f5": 36, "straightphi": 36, "003d5": 36, "phi": 36, "subseteq": 36, "02286": 36, "subseteqq": 36, "subsetequ": 36, "subsetneq": 36, "0228a": 36, "subsetneqq": 36, "02acb": 36, "succ": 36, "succapprox": 36, "succcurlyeq": 36, "succeedsequ": 36, "succeedsslantequ": 36, "succeedstild": 36, "succeq": 36, "succnapprox": 36, "02aba": 36, "succneqq": 36, "02ab6": 36, "succnsim": 36, "022e9": 36, "succsim": 36, "suchthat": 36, "02211": 36, "summat": 36, "supersetequ": 36, "02287": 36, "supset": 36, "supseteq": 36, "supseteqq": 36, "supsetneq": 36, "0228b": 36, "supsetneqq": 36, "02acc": 36, "swarrow": 36, "therefor": [36, 121, 131], "02234": 36, "thickapprox": 36, "thicksim": 36, "thinspac": 36, "02009": 36, "tildeequ": 36, "tildefullequ": 36, "02245": 36, "tildetild": 36, "toea": 36, "tosa": 36, "025b5": 36, "triangledown": 36, "025bf": 36, "triangleleft": 36, "025c3": 36, "trianglelefteq": 36, "triangleq": 36, "triangleright": 36, "025b9": 36, "trianglerighteq": 36, "tripledot": 36, "020db": 36, "combin": [36, 83, 106, 108, 109, 134, 152, 183, 239, 353, 364, 369, 386, 394, 425, 434, 446, 460, 475, 526, 561, 600, 678, 710, 739, 797, 799, 801, 817, 839, 850, 887, 888, 890, 937, 990, 1005, 1021, 1077, 1112], "twoheadleftarrow": 36, "twoheadrightarrow": 36, "ulcorn": 36, "0231c": 36, "unionplu": 36, "0228e": 36, "multiset": 36, "uparrow": 36, "uparrowdownarrow": 36, "updownarrow": 36, "upequilibrium": 36, "upharpoonleft": 36, "upharpoonright": 36, "upperleftarrow": 36, "upperrightarrow": 36, "upsilon": 36, "003c5": 36, "upte": 36, "upteearrow": 36, "021a5": 36, "upuparrow": 36, "urcorn": 36, "0231d": 36, "varepsilon": 36, "003b5": 36, "varkappa": 36, "003f0": 36, "kappa": 36, "varnoth": 36, "varphi": 36, "003c6": 36, "varpi": 36, "003d6": 36, "varpropto": 36, "varrho": 36, "003f1": 36, "rho": 36, "varsigma": 36, "003c2": 36, "sigma": [36, 223], "varsubsetneq": 36, "variant": [36, 175, 191, 204, 234, 235, 236, 282, 324, 340, 457, 521, 674, 678, 680, 703, 735, 1085, 1119, 1122], "varsubsetneqq": 36, "varsupsetneq": 36, "varsupsetneqq": 36, "vartheta": 36, "003d1": 36, "theta": 36, "vartriangleleft": 36, "vartriangleright": 36, "vee": 36, "02228": 36, "vert": 36, "02016": 36, "verticalbar": 36, "verticaltild": 36, "02240": 36, "wreath": 36, "verythinspac": 36, "0200a": 36, "hair": 36, "wedg": 36, "02227": 36, "wp": 36, "02118": 36, "wr": 36, "zeetrf": 36, "02128": 36, "restructured text": 37, "cheat sheet": 37, "restructur": 37, "guid": [37, 115, 136, 146, 167, 192, 321, 401, 484, 631, 728, 743, 796], "author": [37, 134, 141, 219, 544, 730, 861, 1010, 1067], "overridden": [37, 347, 598, 665, 1092], "titl": [37, 38, 127, 137, 201, 214, 219, 228, 231, 264, 265, 270, 971, 1055, 1060], "favorit": [37, 163, 167, 170, 188, 192, 214, 217, 287, 757, 863, 915, 979, 1055], "__": [37, 148, 150, 158, 265, 679, 683, 975], "ref": [37, 111, 146, 235, 236, 626, 641, 685, 705], "uniqu": [37, 146, 193, 235, 236, 238, 282, 481, 504, 686, 698, 705, 707, 709, 710, 863, 877, 891, 950, 1003, 1007, 1080], "across": [37, 41, 131, 138, 148, 200, 206, 216, 219, 249, 258, 319, 347, 367, 391, 426, 431, 450, 513, 689, 700, 708, 784, 785, 796, 814, 861, 863, 883, 891, 925, 986, 997, 1067], "tree": [37, 40, 98, 100, 111, 121, 123, 132, 134, 137, 142, 146, 159, 160, 167, 191, 204, 207, 210, 214, 247, 275, 377, 399, 404, 416, 448, 478, 481, 582, 585, 710, 732, 735, 749, 759, 782, 784, 785, 787, 801, 817, 818, 825, 829, 831, 837, 846, 853, 862, 867, 869, 874, 894, 902, 911, 934, 939, 959, 971, 1062, 1083, 1085, 1092, 1094], "next": [37, 40, 61, 96, 111, 127, 132, 133, 138, 146, 151, 153, 164, 169, 171, 179, 183, 190, 196, 200, 203, 204, 206, 209, 211, 213, 216, 219, 223, 229, 235, 236, 241, 244, 251, 261, 265, 271, 286, 293, 307, 341, 359, 361, 382, 410, 448, 452, 466, 476, 481, 521, 558, 634, 647, 654, 656, 678, 747, 757, 776, 801, 817, 849, 861, 863, 883, 893, 913, 932, 958, 959, 962, 990, 993, 1060, 1100], "_dummi": 37, "dummi": [37, 137, 307, 308, 737, 776, 1099], "One": [37, 41, 57, 60, 61, 74, 78, 80, 95, 104, 131, 133, 142, 159, 170, 191, 209, 230, 231, 256, 287, 301, 312, 328, 368, 381, 390, 393, 402, 404, 409, 415, 420, 426, 481, 504, 512, 527, 546, 551, 561, 566, 631, 665, 690, 700, 757, 762, 788, 790, 793, 801, 817, 861, 862, 863, 887, 899, 904, 915, 916, 924, 929, 934, 966, 990, 1066, 1067, 1071, 1076, 1114, 1128], "a_footnot": 37, "footer": 37, "block": [37, 96, 108, 109, 130, 131, 132, 133, 171, 173, 191, 198, 200, 204, 206, 216, 219, 228, 231, 240, 261, 264, 286, 301, 306, 310, 324, 326, 344, 363, 369, 370, 376, 380, 383, 387, 395, 396, 398, 400, 405, 406, 433, 533, 536, 628, 654, 666, 685, 696, 697, 698, 699, 700, 707, 708, 709, 710, 743, 759, 769, 773, 787, 788, 790, 791, 793, 794, 839, 853, 862, 886, 893, 894, 899, 904, 908, 909, 914, 916, 924, 925, 928, 930, 952, 954, 980, 983, 990, 993, 1055], "rubric": 37, "nbsphinx": 38, "capabl": [38, 76, 131, 132, 138, 695, 757, 783, 846, 854, 862, 915, 1084, 1115], "nice": [38, 128, 131, 148, 171, 193, 258, 403, 404, 424, 473, 539, 626, 776, 783, 856, 862, 913, 976, 1012, 1060, 1062, 1074, 1080, 1095], "few": [38, 131, 132, 133, 134, 137, 138, 163, 167, 200, 322, 392, 643, 757, 795, 954, 958, 1093, 1117], "keep": [38, 41, 108, 109, 132, 133, 146, 155, 167, 170, 174, 190, 223, 287, 312, 336, 392, 398, 399, 608, 648, 749, 757, 762, 781, 796, 799, 855, 907, 943, 946, 966, 983, 1060, 1061, 1112], "mind": [38, 131, 132, 325, 692, 983], "though": [38, 41, 43, 51, 66, 130, 131, 136, 138, 141, 142, 146, 147, 152, 159, 163, 167, 169, 170, 188, 191, 193, 204, 206, 207, 209, 214, 217, 231, 240, 249, 250, 253, 264, 287, 328, 338, 347, 359, 364, 426, 427, 428, 431, 440, 448, 450, 478, 480, 481, 504, 528, 530, 531, 535, 538, 541, 544, 545, 547, 548, 561, 562, 597, 604, 626, 634, 636, 643, 648, 654, 671, 675, 680, 685, 686, 689, 696, 711, 712, 716, 735, 749, 788, 795, 796, 799, 802, 836, 850, 854, 861, 862, 863, 873, 881, 883, 910, 915, 917, 919, 925, 934, 952, 954, 955, 958, 963, 965, 972, 974, 982, 986, 999, 1024, 1055, 1062, 1066, 1079, 1087, 1088, 1092, 1094, 1112, 1115], "toplevel": [38, 42, 107, 111, 159, 192, 241, 412, 414, 418, 419, 420, 422, 470, 730, 758, 783, 952, 1101], "begin": [38, 40, 41, 113, 130, 131, 141, 169, 190, 191, 203, 206, 219, 223, 235, 236, 240, 257, 265, 318, 324, 332, 344, 347, 368, 374, 391, 392, 394, 424, 431, 521, 531, 544, 557, 559, 561, 562, 563, 565, 566, 568, 569, 570, 572, 573, 574, 575, 579, 582, 593, 626, 641, 654, 657, 661, 668, 674, 675, 678, 692, 783, 817, 841, 849, 875, 883, 959, 983, 1005, 1055, 1093], "deeper": [38, 132, 163, 250, 253, 413, 910], "trail": [38, 135, 219, 261, 265, 292, 293], "underscor": [38, 341, 955, 962, 975, 985], "For": [38, 111, 129, 130, 131, 135, 138, 141, 143, 144, 146, 147, 152, 155, 160, 161, 163, 167, 183, 188, 191, 198, 201, 204, 209, 219, 222, 224, 228, 236, 238, 239, 240, 264, 270, 312, 318, 320, 332, 333, 339, 354, 363, 370, 376, 380, 383, 385, 387, 396, 400, 405, 406, 423, 448, 504, 529, 536, 540, 553, 562, 582, 628, 666, 673, 676, 680, 685, 690, 707, 709, 710, 728, 743, 757, 784, 785, 794, 817, 853, 854, 862, 863, 864, 873, 877, 904, 925, 932, 933, 934, 941, 942, 946, 979, 980, 990, 997, 1005, 1028, 1033, 1055, 1058, 1060, 1062], "ipynb": [38, 150, 170, 180, 182, 219, 229, 250, 254, 260, 264, 270, 275, 279, 1057, 1061], "labels_": [38, 152, 154], "result": [38, 76, 124, 133, 142, 148, 150, 170, 174, 190, 200, 206, 209, 216, 219, 223, 232, 241, 261, 265, 331, 347, 382, 389, 391, 392, 398, 428, 453, 457, 544, 572, 633, 639, 648, 676, 728, 873, 919, 947, 959, 974, 988, 994, 1006, 1066], "cluster": [38, 154, 1057, 1062], "membership": [38, 152, 169, 170, 212, 440, 987, 1004], "input": [38, 66, 84, 151, 152, 153, 154, 164, 167, 170, 172, 194, 200, 206, 209, 216, 219, 222, 223, 244, 247, 301, 306, 330, 331, 337, 361, 369, 392, 397, 409, 486, 487, 488, 489, 501, 541, 591, 610, 633, 708, 728, 783, 801, 832, 850, 854, 864, 880, 883, 895, 897, 898, 905, 961, 976, 1005, 1017, 1021, 1022, 1034, 1037, 1040, 1046, 1049, 1057, 1058, 1061, 1062, 1123], "sequenc": [38, 104, 107, 124, 151, 152, 154, 164, 170, 191, 193, 202, 204, 205, 206, 209, 212, 216, 219, 223, 241, 256, 258, 265, 271, 323, 377, 428, 475, 488, 489, 490, 526, 571, 590, 594, 610, 623, 631, 678, 710, 916, 959, 960, 961, 977, 986, 987, 992, 994, 997, 1001, 1002, 1025, 1037, 1071, 1085, 1115], "bring": [38, 43, 124, 127, 131, 133, 141, 142, 163, 167, 170, 173, 209, 247, 250, 253, 256, 258, 309, 314, 315, 504, 543, 582, 606, 617, 625, 753, 757, 769, 861, 862, 863, 932, 979, 1027, 1050, 1071, 1112, 1115], "bigplan": [38, 154, 1057], "686": [38, 152, 206, 945], "unknown": [38, 249, 410, 713, 862, 968], "cmd": [38, 137, 751, 776, 1094], "color": [38, 136, 154, 839, 1057, 1063, 1087], "tmp": [38, 113, 127, 132, 134, 137, 174, 187, 190, 206, 211, 219, 223, 226, 229, 231, 236, 238, 241, 244, 251, 261, 265, 271, 333, 375, 398, 411, 416, 417, 424, 481, 482, 606, 683, 735, 757, 779, 783, 788, 797, 801, 802, 815, 816, 817, 819, 821, 822, 824, 826, 829, 836, 839, 840, 845, 866, 873, 884, 885, 887, 888, 890, 915, 921, 952, 953, 954, 959, 967, 968, 974, 975, 996, 997, 1001, 1005, 1011, 1070, 1079, 1080, 1093, 1094], "craft": [39, 51, 217, 259, 260, 279, 408, 453, 690, 711], "tar": [40, 59, 107, 111, 118, 127, 142, 171, 173, 237, 246, 247, 267, 268, 404, 710, 757, 779, 780, 782, 787, 853, 939, 941, 942, 943, 945, 946, 952, 1010, 1094, 1118], "xz": [40, 59, 134, 142, 247, 397, 939, 943, 945, 946], "push": [40, 75, 113, 135, 137, 146, 149, 192, 207, 217, 274, 307, 369, 414, 415, 426, 450, 698, 710, 757, 899, 917, 1030, 1034, 1092], "cmakelist": [40, 42, 111, 157, 158, 159, 160, 161, 192, 209, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 424, 470, 477, 478, 480, 481, 482, 505, 508, 511, 512, 514, 517, 520, 523, 617, 920, 923, 927, 932, 933, 1098, 1101, 1103], "src": [40, 131, 132, 134, 192, 206, 236, 238, 244, 307, 336, 348, 398, 422, 423, 433, 470, 473, 477, 478, 480, 481, 486, 546, 563, 684, 685, 783, 801, 845, 1005, 1010, 1092], "talk": [40, 43, 48, 82, 111, 131, 135, 146, 151, 155, 163, 167, 170, 175, 207, 209, 210, 303, 408, 409, 671, 680, 757, 776, 854, 859, 863, 870, 1064, 1104], "memori": [40, 41, 47, 53, 71, 76, 78, 95, 107, 108, 109, 126, 130, 131, 132, 134, 136, 143, 147, 151, 152, 153, 156, 158, 163, 169, 170, 178, 182, 183, 187, 200, 206, 209, 216, 219, 234, 256, 258, 260, 265, 279, 319, 320, 322, 336, 342, 364, 365, 371, 384, 386, 387, 389, 395, 396, 398, 400, 404, 405, 406, 433, 448, 450, 452, 453, 454, 456, 458, 459, 466, 467, 475, 490, 492, 493, 518, 526, 527, 532, 533, 543, 561, 562, 563, 579, 598, 608, 623, 626, 628, 637, 664, 666, 671, 678, 683, 685, 686, 687, 707, 709, 710, 719, 724, 727, 729, 734, 738, 748, 752, 753, 754, 757, 759, 761, 762, 766, 769, 775, 778, 788, 793, 795, 801, 853, 870, 879, 899, 901, 902, 915, 916, 948, 952, 965, 966, 979, 986, 1070, 1109, 1110, 1113, 1117, 1118, 1127], "load": [40, 41, 51, 54, 61, 73, 86, 130, 141, 142, 149, 150, 154, 170, 178, 179, 195, 196, 200, 206, 216, 219, 223, 226, 232, 241, 258, 259, 260, 278, 279, 384, 404, 416, 699, 709, 710, 713, 714, 716, 717, 719, 722, 724, 725, 727, 732, 734, 737, 738, 742, 748, 751, 753, 754, 757, 759, 761, 766, 769, 772, 775, 778, 793, 853, 862, 863, 894, 902, 908, 931, 948, 1055, 1076, 1117, 1126, 1128], "store": [40, 55, 61, 73, 86, 104, 130, 132, 149, 151, 159, 160, 190, 193, 200, 258, 259, 260, 278, 279, 332, 384, 428, 610, 654, 668, 671, 678, 699, 709, 710, 723, 757, 796, 809, 853, 870, 894, 902, 908, 932, 950, 954, 955, 959, 1003, 1033, 1070, 1087, 1128], "search": [40, 49, 51, 104, 124, 126, 127, 131, 152, 155, 161, 163, 169, 170, 179, 190, 191, 193, 196, 200, 203, 204, 206, 209, 210, 211, 214, 216, 219, 232, 241, 244, 248, 251, 256, 261, 265, 271, 273, 368, 395, 398, 410, 475, 481, 486, 490, 526, 571, 576, 590, 594, 611, 623, 710, 735, 799, 817, 849, 910, 932, 945, 962, 991, 1061, 1085, 1092, 1114], "payload": [40, 718, 745, 855, 857], "primari": [40, 131, 142, 163, 249, 250, 253, 402, 755, 784, 785, 792, 794, 1033], "insert": [40, 61, 107, 125, 130, 146, 150, 167, 169, 174, 204, 206, 209, 211, 213, 219, 223, 226, 244, 265, 271, 301, 365, 382, 386, 402, 429, 435, 457, 463, 475, 490, 491, 492, 504, 521, 526, 562, 563, 576, 586, 587, 611, 619, 620, 621, 623, 630, 637, 639, 654, 675, 706, 708, 710, 735, 741, 751, 753, 757, 817, 861, 874, 905, 915, 987, 1002, 1003, 1011, 1070, 1092], "const": [40, 56, 68, 95, 105, 107, 108, 109, 111, 158, 193, 209, 256, 258, 282, 336, 344, 348, 366, 368, 374, 382, 394, 396, 398, 400, 405, 406, 411, 427, 429, 430, 431, 433, 435, 450, 451, 457, 458, 459, 462, 463, 464, 466, 467, 468, 475, 477, 480, 481, 483, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 501, 502, 504, 512, 517, 519, 521, 526, 528, 529, 530, 531, 533, 535, 536, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 554, 555, 561, 565, 567, 568, 569, 570, 571, 577, 581, 583, 586, 587, 590, 593, 594, 597, 600, 601, 604, 606, 607, 608, 611, 612, 615, 616, 618, 619, 620, 621, 622, 623, 630, 632, 633, 634, 635, 636, 637, 638, 639, 648, 649, 650, 651, 652, 654, 656, 657, 660, 661, 662, 663, 664, 666, 668, 669, 670, 671, 673, 674, 676, 678, 682, 684, 685, 686, 687, 688, 691, 699, 700, 704, 705, 706, 707, 708, 709, 710, 713, 716, 721, 737, 739, 743, 751, 753, 767, 771, 777, 875, 883, 887, 888, 889, 890, 893, 895, 898, 900, 902, 904, 912, 918, 921, 924, 925, 929, 949, 967, 1043, 1069, 1104, 1110, 1111], "care": [40, 44, 46, 78, 130, 131, 133, 136, 138, 163, 171, 203, 292, 324, 347, 356, 358, 374, 398, 399, 422, 453, 454, 529, 543, 561, 604, 675, 676, 680, 689, 704, 711, 735, 747, 749, 757, 762, 783, 784, 785, 862, 870, 874, 886, 899, 907, 933, 955, 979, 983, 995, 1002, 1005, 1006, 1012, 1035, 1059, 1070, 1083, 1094], "dump": [40, 131, 150, 179, 195, 196, 206, 219, 223, 226, 232, 241, 433, 452, 453, 536, 541, 664, 684, 795, 928, 929], "db": [40, 48, 141, 167, 192, 193, 194, 198, 204, 217, 232, 414, 428, 429, 435, 457, 463, 618, 619, 620, 621, 622, 690, 1011], "pull": [40, 42, 48, 61, 75, 111, 135, 146, 183, 192, 193, 207, 286, 309, 410, 414, 426, 543, 730, 757, 959, 962, 1082], "paramet": [40, 56, 61, 108, 109, 130, 133, 138, 148, 151, 158, 159, 163, 168, 169, 170, 172, 174, 182, 183, 187, 190, 191, 192, 193, 200, 204, 206, 209, 210, 212, 215, 216, 219, 226, 229, 250, 251, 253, 255, 287, 292, 301, 323, 332, 334, 338, 349, 353, 368, 369, 374, 376, 377, 380, 383, 387, 388, 394, 396, 400, 405, 406, 409, 411, 416, 473, 477, 487, 504, 518, 528, 530, 533, 537, 540, 541, 544, 548, 553, 554, 608, 614, 628, 631, 638, 654, 666, 668, 673, 686, 698, 707, 709, 710, 715, 716, 723, 737, 760, 765, 770, 773, 776, 777, 797, 799, 862, 877, 900, 910, 925, 933, 946, 955, 969, 972, 977, 984, 1000, 1007, 1012, 1022, 1028, 1030, 1034, 1040, 1049, 1060, 1066, 1069, 1076, 1079, 1080, 1082, 1085, 1108, 1109], "stdin": [40, 183, 191, 200, 206, 209, 216, 219, 294, 301, 333, 339, 354, 363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710, 783, 799, 800, 832, 883, 1003, 1005, 1006, 1017, 1071, 1083, 1118], "entri": [40, 128, 132, 133, 137, 195, 206, 323, 423, 439, 582, 584, 604, 745, 783, 796, 800, 801, 802, 839, 845, 877, 883, 897, 948, 955, 1003, 1069, 1101], "o_creat": [40, 710, 853, 883, 884, 888, 892, 894, 911, 924], "o_trunc": [40, 46, 883], "o_wronli": [40, 710, 853, 883, 884, 886, 887, 888, 892, 893, 894, 895, 898, 911, 924], "0666": [40, 816, 887, 888, 924], "assert": [40, 44, 167, 191, 204, 216, 219, 233, 249, 410, 433, 575, 616, 619, 621, 627, 700, 881, 893, 895, 898, 924, 928, 929, 967, 1043, 1050, 1051, 1052, 1085, 1092, 1098, 1099, 1101, 1109], "ing": [40, 889], "mode": [40, 99, 111, 134, 146, 148, 183, 191, 200, 203, 204, 206, 216, 219, 223, 226, 244, 247, 251, 265, 268, 398, 475, 526, 699, 709, 710, 716, 749, 755, 783, 784, 785, 787, 790, 791, 794, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 817, 853, 856, 863, 877, 882, 883, 884, 892, 894, 908, 911, 914, 916, 924, 925, 980, 982, 1085, 1087], "binaryus": 40, "hton": [40, 880], "arpa": [40, 880], "inet": [40, 148, 880], "again": [40, 97, 111, 130, 131, 133, 136, 138, 142, 146, 147, 159, 163, 167, 169, 170, 171, 183, 192, 217, 222, 231, 237, 240, 246, 247, 264, 267, 270, 301, 302, 303, 306, 307, 312, 319, 320, 369, 410, 432, 436, 446, 469, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 503, 521, 526, 528, 530, 543, 544, 548, 558, 637, 648, 690, 698, 699, 705, 708, 709, 710, 777, 780, 784, 785, 786, 787, 790, 791, 798, 801, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 847, 853, 863, 870, 873, 876, 878, 880, 881, 882, 884, 889, 892, 894, 895, 904, 908, 910, 911, 914, 916, 925, 933, 935, 936, 937, 938, 939, 940, 941, 942, 952, 972, 977, 995, 1000, 1005, 1055, 1076, 1079, 1112], "od": [40, 219], "hardwir": [40, 61, 718, 879, 972], "enter": [40, 108, 109, 164, 171, 200, 205, 206, 216, 219, 228, 229, 231, 232, 249, 286, 301, 306, 326, 521, 544, 603, 637, 643, 654, 686, 735, 757, 773, 790, 813, 915, 916, 990, 1042], "joerg": [40, 48, 113, 150, 164, 165, 167, 168, 170, 172, 179, 183, 187, 190, 196, 203, 206, 209, 211, 213, 216, 219, 223, 226, 229, 232, 241, 244, 251, 258, 260, 261, 265, 271, 279, 295, 298, 393, 420, 428, 435, 470, 481, 486, 502, 541, 575, 587, 606, 616, 617, 618, 619, 621, 638, 784, 785, 792, 794, 799, 813, 829, 842, 848, 873, 910, 968, 969, 971, 972, 973, 975, 976, 984, 1006, 1033, 1050, 1063, 1066, 1075, 1076, 1077, 1079, 1080, 1081, 1082], "huber": [40, 213, 219, 1066], "caro": [40, 203, 213, 216, 223, 226, 229, 232, 241, 244, 251, 265, 428, 435, 486, 502, 575, 587, 619, 621, 971, 973, 993, 1044, 1046, 1050, 1052, 1075, 1076, 1077, 1079, 1080, 1081, 1082], "johanna": [40, 203, 213, 216, 223, 226, 244, 251, 265, 428, 486, 502, 575, 587, 993, 1044, 1046, 1050, 1052, 1075, 1076, 1077, 1079, 1080, 1081, 1082], "bodi": [40, 48, 53, 108, 109, 137, 323, 324, 326, 330, 359, 369, 398, 487, 521, 530, 531, 535, 538, 608, 626, 627, 630, 689, 959, 1093], "compil": [40, 41, 63, 101, 102, 106, 108, 109, 111, 132, 133, 142, 151, 158, 159, 160, 179, 193, 196, 209, 216, 232, 241, 244, 247, 248, 256, 265, 271, 273, 309, 321, 334, 343, 344, 353, 356, 358, 365, 366, 375, 377, 384, 387, 390, 391, 392, 393, 394, 396, 397, 398, 400, 401, 402, 403, 405, 406, 410, 414, 417, 419, 422, 423, 426, 432, 446, 448, 453, 454, 467, 468, 469, 475, 476, 478, 479, 480, 481, 483, 484, 485, 503, 512, 518, 521, 526, 528, 531, 533, 537, 539, 543, 554, 582, 601, 608, 613, 615, 626, 627, 628, 629, 631, 633, 634, 636, 637, 639, 641, 643, 648, 651, 654, 663, 664, 666, 672, 675, 676, 678, 680, 684, 685, 707, 709, 710, 725, 726, 741, 853, 861, 932, 933, 936, 937, 938, 939, 941, 955, 980, 985, 997, 999, 1099, 1101, 1109, 1110, 1112, 1113, 1114, 1125], "still": [40, 52, 59, 119, 125, 130, 131, 132, 133, 141, 142, 151, 152, 153, 193, 203, 209, 247, 249, 292, 312, 321, 372, 384, 410, 413, 419, 473, 493, 515, 518, 536, 537, 558, 564, 597, 612, 637, 654, 671, 675, 680, 684, 685, 687, 688, 689, 720, 725, 757, 760, 800, 814, 836, 861, 862, 863, 913, 915, 917, 928, 950, 958, 961, 967, 980, 983, 986, 1010, 1046, 1072, 1080, 1101, 1109], "funni": [40, 42, 48, 98, 111, 163, 247, 431, 710, 787, 825, 831, 837, 853, 932], "temp": [40, 42, 219, 310, 684, 685, 686], "got": [40, 43, 131, 141, 193, 265, 368, 640, 883, 956], "overwritten": [40, 45, 51, 53, 54, 563, 710, 884, 962], "suspect": [40, 133, 135], "inmem": 40, "loos": [40, 41, 167, 183, 322, 347, 394, 747], "foolishli": 40, "main": [40, 48, 61, 105, 124, 133, 136, 137, 142, 170, 192, 204, 216, 217, 219, 236, 247, 255, 258, 260, 273, 275, 279, 301, 321, 323, 324, 326, 330, 332, 334, 335, 349, 364, 365, 366, 368, 372, 384, 391, 395, 398, 399, 402, 404, 410, 411, 413, 417, 433, 447, 452, 453, 454, 470, 471, 473, 477, 480, 481, 485, 504, 512, 515, 518, 532, 536, 537, 539, 541, 543, 544, 546, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 569, 570, 573, 574, 575, 579, 583, 584, 585, 586, 587, 593, 597, 598, 601, 603, 604, 610, 615, 616, 617, 618, 619, 620, 621, 622, 626, 631, 641, 644, 645, 646, 649, 650, 651, 652, 654, 655, 656, 658, 659, 660, 661, 662, 663, 664, 668, 670, 671, 673, 676, 678, 684, 685, 687, 688, 689, 690, 693, 698, 700, 708, 718, 725, 726, 728, 757, 794, 796, 814, 861, 863, 864, 877, 879, 880, 881, 887, 888, 889, 890, 895, 898, 899, 901, 905, 910, 912, 915, 916, 921, 924, 925, 928, 931, 939, 943, 949, 963, 966, 981, 1045, 1047, 1099, 1104, 1117], "chang": [40, 43, 44, 45, 49, 53, 54, 75, 78, 111, 130, 133, 135, 136, 137, 138, 141, 142, 146, 154, 167, 183, 192, 223, 231, 308, 347, 384, 386, 390, 393, 394, 398, 408, 411, 426, 472, 477, 478, 479, 481, 482, 537, 562, 619, 673, 698, 708, 710, 730, 735, 783, 792, 794, 796, 814, 823, 826, 841, 854, 856, 861, 862, 873, 877, 898, 928, 931, 946, 962, 986, 995, 1034, 1045, 1047, 1050, 1076, 1080, 1095, 1112], "errorhandl": 40, "just": [40, 44, 61, 67, 82, 106, 121, 130, 131, 132, 133, 134, 135, 137, 138, 142, 146, 153, 155, 159, 163, 170, 193, 204, 207, 232, 273, 289, 330, 349, 374, 377, 386, 404, 408, 413, 423, 428, 470, 473, 477, 480, 481, 482, 509, 528, 529, 530, 536, 539, 540, 541, 544, 563, 591, 598, 604, 608, 612, 626, 633, 637, 639, 640, 654, 669, 672, 686, 688, 690, 708, 715, 720, 728, 730, 737, 741, 747, 749, 757, 773, 796, 817, 820, 821, 850, 854, 862, 863, 878, 880, 881, 887, 888, 890, 899, 900, 910, 917, 925, 943, 950, 953, 954, 957, 959, 977, 978, 984, 985, 986, 993, 997, 1005, 1006, 1060, 1061, 1071, 1076, 1077, 1081, 1082, 1088, 1092, 1104, 1114], "silent": [40, 63, 213, 223, 630, 861], "truncat": [40, 219, 265, 324, 345, 447, 799, 883, 1005], "faschingb": 40, "echo": [40, 132, 183, 219, 247, 287, 481, 610, 730, 739, 757, 784, 785, 788, 789, 797, 801, 811, 820, 823, 827, 836, 854, 856, 861, 862, 863, 864, 884, 886, 895, 897, 898, 910, 913, 919, 928, 1094], "success": [40, 160, 200, 206, 216, 219, 385, 414, 643, 696, 735, 739, 829, 1021], "failur": [40, 41, 200, 206, 216, 219, 231, 236, 265, 286, 394, 404, 410, 424, 477, 482, 1092, 1093, 1100, 1101, 1104], "renam": [40, 48, 55, 61, 64, 97, 111, 124, 127, 190, 237, 246, 247, 267, 268, 521, 673, 710, 725, 726, 787, 824, 837, 853, 949, 1070], "most": [41, 42, 55, 57, 60, 63, 85, 127, 130, 131, 133, 134, 137, 142, 153, 155, 161, 163, 167, 169, 191, 200, 203, 206, 207, 216, 217, 219, 223, 229, 249, 251, 265, 286, 322, 330, 359, 362, 369, 384, 386, 392, 397, 398, 402, 403, 413, 427, 440, 478, 543, 544, 582, 634, 678, 683, 686, 692, 735, 743, 757, 762, 782, 784, 785, 788, 795, 819, 850, 854, 861, 863, 875, 883, 889, 902, 917, 925, 928, 929, 931, 952, 953, 954, 959, 966, 967, 968, 974, 975, 983, 985, 986, 987, 990, 993, 996, 997, 1001, 1003, 1006, 1007, 1012, 1054, 1055, 1063, 1067, 1071, 1075, 1079, 1080, 1086, 1088, 1092, 1093, 1099, 1114, 1115, 1117], "somebodi": [41, 138, 146, 159, 193, 336, 393, 414, 512, 536, 588, 648, 654, 665, 696, 747, 765, 919], "concis": [41, 130, 163, 167, 217, 302, 303, 413, 757, 1055], "longer": [41, 146, 919, 980, 1112], "necessari": [41, 59, 124, 132, 138, 142, 151, 160, 174, 190, 193, 250, 253, 326, 336, 368, 408, 410, 414, 426, 473, 531, 535, 603, 629, 630, 664, 674, 686, 698, 753, 757, 792, 861, 863, 864, 879, 917, 928, 948, 975, 982, 986, 1010, 1065, 1070, 1092], "gosh": [41, 127, 347, 392, 394, 588, 671, 907, 953, 959, 986], "hungarian": [41, 388], "notat": [41, 158, 198, 214, 219, 224, 265, 388, 701, 862, 968], "userdb": [41, 45, 46, 49, 51, 52, 54, 55, 193, 195, 209, 217, 264, 275, 611, 619, 620, 621, 623, 710, 1044, 1045, 1046, 1047, 1052], "bolt": [41, 193], "onto": [41, 57, 60, 141, 152, 193, 209, 450, 532, 609, 623, 686, 710, 757, 842, 854, 862, 881, 913, 936, 943], "unclear": [41, 469, 929], "semant": [41, 47, 79, 131, 155, 235, 236, 238, 256, 379, 393, 394, 448, 529, 582, 588, 627, 634, 666, 682, 685, 686, 687, 688, 691, 699, 707, 709, 710, 716, 721, 749, 928, 929, 986, 1067, 1112], "backingstor": [41, 51, 54, 710], "mangl": [41, 190, 191, 204, 221, 980, 1085], "prefix": [41, 59, 127, 142, 200, 204, 206, 216, 219, 265, 294, 540, 570, 626, 757, 943, 945, 952, 974, 975, 1000, 1007, 1063, 1094], "m_": 41, "enough": [41, 134, 138, 155, 163, 213, 223, 256, 265, 312, 336, 427, 603, 861, 874, 902, 932, 954, 971, 979, 1000, 1071, 1076, 1083, 1086, 1093, 1114], "take": [41, 46, 84, 100, 108, 109, 124, 125, 130, 131, 132, 135, 136, 137, 138, 141, 146, 148, 151, 152, 154, 159, 163, 164, 169, 170, 171, 191, 204, 209, 211, 219, 223, 229, 253, 286, 287, 292, 301, 331, 368, 371, 388, 390, 397, 399, 403, 404, 408, 409, 411, 426, 427, 450, 451, 453, 454, 473, 477, 481, 497, 504, 518, 530, 537, 541, 544, 546, 584, 608, 626, 631, 638, 639, 648, 676, 678, 684, 688, 698, 720, 747, 757, 783, 784, 785, 861, 891, 919, 943, 949, 953, 957, 979, 995, 996, 1012, 1019, 1022, 1024, 1028, 1029, 1030, 1033, 1034, 1035, 1037, 1039, 1049, 1054, 1062, 1066, 1071, 1076, 1085, 1087, 1094], "dogmat": [41, 209, 319, 1071], "switch": [41, 43, 52, 56, 57, 60, 108, 109, 111, 132, 136, 138, 150, 151, 192, 200, 206, 216, 217, 219, 287, 288, 290, 307, 310, 313, 343, 357, 361, 363, 370, 376, 380, 383, 385, 387, 396, 400, 403, 405, 406, 410, 413, 426, 440, 469, 475, 476, 526, 587, 627, 628, 666, 707, 709, 710, 737, 755, 762, 771, 774, 776, 790, 794, 854, 857, 915, 948, 1109, 1113], "bool": [41, 48, 51, 53, 54, 174, 181, 203, 206, 209, 211, 213, 216, 219, 226, 229, 244, 248, 249, 251, 255, 265, 418, 420, 486, 487, 491, 493, 498, 528, 530, 544, 545, 546, 547, 548, 566, 569, 575, 584, 631, 643, 644, 645, 646, 654, 657, 661, 668, 698, 700, 710, 770, 777, 915, 921, 928, 986, 1012, 1077, 1082], "wear": [41, 128, 132], "incorrect": [41, 200, 206, 216, 219, 223, 347, 366, 1083], "metaphor": 41, "But": [41, 131, 132, 133, 136, 147, 183, 192, 330, 336, 365, 368, 374, 377, 390, 392, 398, 408, 527, 528, 536, 541, 542, 543, 561, 579, 597, 598, 636, 639, 675, 684, 688, 690, 710, 739, 741, 757, 767, 784, 785, 839, 853, 861, 862, 863, 870, 884, 892, 894, 899, 907, 911, 934, 948, 950, 971, 974, 980, 1060, 1066], "support": [41, 76, 132, 134, 138, 142, 151, 155, 167, 179, 181, 200, 203, 206, 211, 213, 216, 219, 223, 226, 241, 244, 251, 297, 366, 390, 404, 410, 527, 528, 530, 634, 686, 690, 704, 708, 713, 749, 839, 861, 862, 863, 873, 925, 931, 959, 967, 974, 980, 997, 1010, 1060, 1062, 1080, 1099], "copy_process": 41, "law": [41, 183, 298, 341, 386, 954, 1082], "tdd": [41, 111, 162, 167, 177, 217, 259, 275, 320, 1092], "until": [41, 53, 95, 96, 97, 100, 103, 108, 109, 111, 119, 121, 131, 133, 135, 137, 182, 191, 203, 222, 240, 260, 279, 358, 364, 389, 392, 482, 546, 610, 654, 660, 698, 700, 725, 745, 755, 765, 767, 773, 790, 794, 801, 817, 829, 836, 878, 879, 880, 881, 904, 918, 925, 929, 958, 959, 980, 988, 990, 1055], "fail": [41, 42, 127, 131, 133, 141, 142, 146, 158, 163, 193, 219, 236, 268, 286, 312, 411, 414, 424, 433, 477, 613, 634, 636, 643, 648, 708, 710, 735, 757, 836, 853, 863, 884, 889, 892, 894, 909, 910, 911, 928, 948, 952, 954, 963, 1005, 1021, 1080, 1093, 1094, 1098, 1100, 1102], "suffici": [41, 146, 151, 163, 287, 535, 563, 604, 608, 619, 627, 730, 839, 929, 977, 979, 1007, 1093], "pass": [41, 42, 46, 53, 55, 56, 61, 108, 109, 151, 159, 163, 168, 169, 170, 172, 179, 190, 192, 196, 200, 206, 209, 211, 213, 216, 219, 223, 226, 229, 231, 232, 236, 241, 244, 249, 250, 253, 261, 265, 286, 312, 332, 334, 336, 347, 368, 372, 375, 377, 394, 424, 426, 431, 433, 473, 477, 478, 480, 481, 486, 487, 528, 538, 539, 545, 546, 547, 548, 557, 608, 614, 638, 668, 676, 681, 685, 688, 704, 705, 706, 723, 760, 801, 861, 887, 890, 901, 910, 933, 950, 952, 953, 954, 955, 967, 968, 969, 971, 977, 995, 997, 1005, 1007, 1043, 1054, 1075, 1092, 1099], "current": [41, 97, 107, 111, 117, 119, 132, 133, 134, 136, 138, 141, 142, 146, 171, 193, 200, 206, 216, 219, 237, 244, 246, 247, 265, 267, 268, 293, 312, 315, 320, 369, 402, 410, 426, 428, 432, 446, 469, 475, 476, 478, 479, 480, 483, 484, 485, 503, 526, 616, 620, 685, 686, 699, 709, 710, 726, 757, 765, 779, 783, 784, 785, 786, 787, 790, 791, 792, 794, 800, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 817, 818, 821, 822, 823, 824, 825, 826, 827, 828, 829, 831, 832, 833, 834, 835, 837, 839, 841, 853, 862, 876, 882, 883, 884, 892, 894, 899, 901, 908, 911, 914, 915, 916, 933, 935, 936, 937, 938, 939, 940, 941, 942, 948, 953, 958, 979, 982, 990, 993, 1118], "initi": [41, 43, 61, 108, 109, 111, 113, 130, 131, 134, 138, 146, 148, 158, 163, 167, 172, 178, 187, 191, 192, 202, 203, 204, 219, 223, 226, 229, 234, 244, 251, 256, 258, 261, 265, 324, 326, 333, 377, 382, 392, 396, 400, 402, 405, 406, 428, 430, 448, 453, 454, 467, 468, 469, 473, 475, 476, 477, 479, 483, 484, 504, 518, 521, 526, 530, 531, 532, 534, 539, 541, 543, 545, 547, 562, 563, 564, 569, 582, 587, 608, 613, 615, 616, 617, 622, 623, 637, 648, 666, 674, 685, 686, 688, 700, 707, 709, 710, 715, 718, 720, 721, 728, 735, 743, 753, 757, 784, 785, 793, 818, 848, 862, 863, 878, 881, 899, 902, 915, 924, 925, 931, 966, 969, 999, 1060, 1067, 1085, 1112, 1117], "mess": [41, 131, 217, 236, 238, 282, 628, 666, 709, 710, 986, 999, 1093], "roughli": [41, 63, 133, 138, 397, 782, 915, 924], "took": [41, 130, 137, 167, 1020], "our": [41, 51, 57, 60, 68, 75, 102, 111, 113, 132, 133, 135, 137, 142, 146, 153, 167, 182, 183, 192, 193, 207, 209, 247, 258, 260, 279, 301, 394, 397, 408, 419, 427, 431, 436, 448, 452, 470, 481, 485, 619, 622, 730, 737, 757, 861, 862, 887, 890, 915, 925, 929, 931, 943, 946, 949, 955, 1052, 1060, 1066], "craftsmanship": [41, 43], "anoth": [41, 61, 76, 130, 131, 132, 133, 137, 138, 141, 142, 146, 153, 155, 160, 163, 169, 170, 193, 200, 206, 209, 216, 221, 223, 229, 244, 247, 250, 253, 256, 338, 356, 357, 371, 379, 391, 398, 409, 426, 427, 430, 435, 450, 453, 454, 467, 468, 473, 479, 482, 538, 541, 542, 544, 626, 631, 654, 678, 686, 690, 700, 745, 757, 783, 784, 785, 790, 799, 801, 813, 850, 861, 863, 873, 874, 888, 902, 904, 916, 924, 929, 946, 949, 950, 953, 954, 971, 978, 986, 1002, 1006, 1011, 1066, 1074, 1080, 1083, 1092, 1115], "If": [41, 43, 45, 51, 53, 54, 55, 87, 111, 130, 131, 132, 133, 136, 137, 138, 146, 147, 155, 163, 200, 206, 213, 216, 219, 223, 231, 236, 238, 247, 253, 265, 301, 306, 347, 356, 386, 398, 418, 420, 426, 476, 477, 478, 497, 528, 533, 597, 604, 620, 621, 634, 639, 685, 689, 690, 698, 700, 710, 730, 735, 749, 757, 762, 774, 783, 792, 796, 799, 817, 818, 826, 829, 853, 854, 861, 862, 863, 864, 870, 884, 892, 894, 902, 907, 911, 924, 946, 947, 959, 967, 969, 979, 986, 994, 996, 1007, 1032, 1060, 1066, 1080, 1093, 1112], "isol": [41, 52, 161, 163, 167, 217, 231, 861, 915, 916, 966, 1055, 1070, 1087, 1103, 1105], "wrong": [41, 76, 131, 133, 256, 347, 369, 388, 604, 690, 730, 887, 902, 916, 950, 954, 966, 985, 1049, 1060], "oracl": [41, 1067], "conduct": [41, 1092], "serious": 41, "safeti": [41, 209, 390, 393, 396, 400, 405, 406, 409, 504, 627, 697, 710, 716, 854, 928, 929, 952], "architectur": [41, 106, 128, 138, 190, 318, 342, 369, 386, 409, 690, 718, 854, 881, 931, 932, 941, 943, 1115], "treat": [41, 79, 223, 334, 364, 799], "them": [41, 61, 64, 108, 109, 124, 128, 130, 131, 133, 136, 137, 138, 141, 142, 146, 151, 152, 153, 160, 163, 167, 168, 170, 172, 188, 190, 193, 204, 228, 231, 240, 260, 270, 279, 364, 386, 417, 428, 432, 448, 480, 545, 547, 548, 601, 608, 610, 613, 626, 676, 690, 757, 783, 789, 790, 796, 799, 824, 836, 863, 870, 915, 916, 925, 928, 931, 932, 943, 948, 953, 954, 955, 956, 977, 979, 1001, 1033, 1036, 1055, 1061, 1071, 1082, 1099], "carefulli": [41, 133, 146, 394, 453, 643, 1061], "fast": [41, 138, 146, 170, 192, 207, 209, 223, 232, 398, 504, 676, 690, 1003, 1088, 1124], "independ": [41, 61, 211, 223, 336, 369, 541, 841, 855, 863, 933], "self": [41, 57, 60, 61, 131, 132, 142, 150, 151, 158, 164, 167, 169, 187, 190, 191, 203, 204, 206, 213, 216, 217, 221, 223, 229, 232, 244, 251, 261, 265, 271, 402, 410, 528, 530, 634, 636, 637, 671, 684, 690, 696, 718, 749, 753, 912, 948, 952, 953, 954, 963, 967, 968, 971, 972, 973, 974, 975, 976, 986, 1079, 1080, 1085, 1093, 1098, 1099, 1101, 1112], "valid": [41, 130, 133, 141, 219, 222, 265, 312, 367, 374, 390, 394, 553, 561, 585, 620, 634, 671, 674, 700, 770, 985, 986, 1000, 1001, 1017, 1022, 1079, 1080, 1087], "first": [41, 51, 59, 61, 85, 121, 128, 130, 133, 134, 136, 137, 138, 142, 146, 151, 161, 163, 170, 190, 203, 204, 211, 213, 217, 219, 223, 247, 249, 260, 265, 279, 286, 292, 298, 322, 330, 353, 368, 369, 374, 382, 398, 399, 410, 411, 412, 413, 414, 416, 417, 418, 419, 421, 422, 424, 475, 515, 521, 526, 528, 534, 536, 540, 559, 560, 561, 565, 584, 587, 619, 621, 626, 648, 655, 656, 675, 676, 678, 704, 705, 706, 710, 724, 727, 734, 738, 748, 757, 759, 761, 766, 772, 775, 778, 795, 796, 797, 802, 813, 817, 823, 839, 841, 844, 848, 850, 853, 854, 861, 862, 880, 884, 904, 912, 915, 918, 924, 932, 933, 947, 948, 949, 950, 954, 955, 959, 966, 968, 972, 980, 981, 982, 983, 985, 986, 995, 996, 999, 1005, 1006, 1012, 1035, 1044, 1050, 1052, 1061, 1066, 1074, 1093, 1099, 1112, 1117], "debug": [41, 131, 132, 160, 190, 200, 206, 216, 219, 270, 274, 301, 306, 319, 369, 395, 398, 402, 403, 404, 412, 414, 415, 431, 509, 654, 671, 710, 715, 737, 739, 799, 817, 883, 907, 928, 1005, 1087, 1110, 1113, 1118, 1127], "fact": [41, 51, 131, 132, 163, 366, 374, 398, 408, 757, 802, 887, 925, 1067], "hard": [41, 68, 76, 83, 111, 121, 131, 133, 136, 137, 142, 147, 152, 159, 163, 170, 192, 207, 213, 223, 237, 246, 247, 267, 268, 347, 366, 395, 408, 436, 512, 708, 710, 757, 787, 793, 796, 837, 839, 853, 856, 862, 943, 952, 954, 974, 991, 1005, 1057, 1081, 1112, 1128], "principl": [41, 51, 52, 81, 104, 127, 133, 142, 257, 258, 259, 260, 279, 409, 432, 433, 710, 757, 861, 863, 874, 934, 1066], "mayb": [41, 43, 55, 56, 59, 61, 76, 111, 121, 124, 131, 132, 133, 136, 137, 146, 159, 163, 190, 206, 207, 257, 258, 259, 260, 275, 279, 304, 307, 309, 310, 411, 430, 431, 432, 464, 517, 518, 588, 636, 706, 862, 946, 968, 1101], "overview": [41, 96, 111, 127, 138, 155, 171, 173, 188, 192, 204, 237, 238, 246, 250, 253, 256, 258, 267, 268, 315, 319, 432, 446, 469, 475, 476, 479, 480, 483, 484, 485, 503, 526, 546, 642, 653, 666, 677, 699, 709, 710, 780, 784, 785, 786, 787, 790, 791, 798, 800, 801, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 817, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 837, 847, 853, 865, 866, 867, 868, 869, 876, 877, 880, 882, 884, 892, 894, 908, 911, 914, 916, 933, 935, 936, 937, 938, 939, 940, 941, 942, 946, 978, 1055, 1112, 1113, 1115, 1117], "respons": [41, 51, 54, 87, 116, 130, 141, 146, 194, 408, 450, 464, 473, 530, 538, 686, 710, 753, 765, 862, 863, 886, 915, 916, 982, 1062, 1117], "googl": [42, 126, 131, 138, 140, 152, 155, 158, 159, 163, 164, 167, 188, 193, 321, 478, 684, 685, 846, 980, 1055, 1099, 1101, 1130], "cloner": 42, "init": [42, 113, 130, 132, 148, 152, 229, 236, 238, 332, 359, 457, 458, 478, 485, 511, 528, 546, 564, 712, 720, 725, 745, 747, 759, 793, 845, 929], "cpp": [42, 48, 95, 111, 142, 157, 167, 192, 193, 209, 236, 247, 256, 258, 321, 412, 413, 414, 419, 426, 427, 428, 430, 431, 433, 435, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 466, 467, 468, 469, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 528, 529, 530, 531, 532, 536, 537, 539, 541, 542, 543, 544, 545, 546, 547, 548, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 569, 570, 573, 574, 575, 579, 583, 584, 585, 586, 587, 593, 597, 598, 601, 603, 604, 606, 610, 615, 616, 617, 618, 619, 620, 621, 622, 626, 631, 633, 636, 637, 638, 641, 643, 648, 654, 663, 664, 665, 668, 669, 670, 671, 672, 673, 675, 676, 678, 680, 684, 685, 686, 687, 688, 689, 698, 700, 704, 705, 706, 708, 861, 891, 895, 898, 910, 912, 915, 931], "assert_eq": [42, 426, 428, 431, 435, 448, 469, 476, 477, 481, 482, 486, 487, 488, 489, 491, 493, 494, 495, 498, 499, 500, 501, 502, 521, 528, 529, 530, 541, 542, 544, 545, 546, 547, 548, 606, 631, 633, 636, 637, 638, 669, 680, 684, 685, 686, 687, 689, 704, 705, 706, 708, 1099, 1104], "test_f": [42, 450, 481, 482, 708, 1104], "simplefixtur": 42, "public": [42, 53, 99, 100, 105, 111, 128, 141, 146, 183, 191, 204, 232, 237, 246, 247, 255, 261, 267, 268, 298, 301, 306, 382, 418, 419, 420, 422, 427, 429, 433, 435, 438, 439, 440, 450, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 473, 481, 482, 497, 512, 518, 527, 528, 529, 531, 532, 533, 535, 536, 537, 538, 539, 540, 542, 543, 544, 551, 554, 569, 570, 587, 597, 598, 600, 601, 603, 604, 612, 613, 618, 620, 621, 626, 629, 630, 631, 632, 633, 636, 637, 639, 648, 650, 651, 652, 654, 656, 657, 660, 661, 662, 663, 664, 665, 669, 670, 671, 673, 684, 685, 686, 689, 690, 698, 700, 708, 710, 721, 725, 786, 787, 792, 806, 812, 853, 865, 866, 867, 868, 869, 874, 975, 980, 1085, 1104], "myfirstsuit": 42, "test_find": 42, "wtf": [42, 51, 111, 169, 200, 205, 206, 209, 211, 229, 268, 521, 536, 710, 853, 878, 882, 894, 928, 930, 953], "tallk": 42, "morph": [42, 61, 158, 167, 192, 193, 258, 506, 518, 521, 524, 530, 626, 678, 759, 957], "fixtur": [42, 158, 167, 259, 260, 275, 278, 279, 309, 439, 450, 482, 710, 1097, 1130], "trivial": [42, 131, 142, 273, 348, 364, 521, 538, 634, 639, 690, 762, 770, 863, 879, 915, 1114], "tempfil": [42, 952], "crap": [42, 132, 207, 249, 394, 410, 413, 588, 627, 863, 928], "null": [42, 61, 132, 133, 134, 149, 174, 190, 203, 219, 226, 229, 244, 251, 261, 265, 323, 336, 343, 371, 382, 392, 397, 410, 481, 541, 640, 715, 721, 728, 753, 788, 797, 799, 800, 817, 832, 839, 881, 886, 893, 900, 902, 904, 906, 912, 915, 916, 921, 924, 928], "deriv": [42, 105, 153, 207, 219, 288, 312, 482, 504, 530, 601, 603, 604, 665, 673, 954, 967, 1104], "seminar": [43, 114], "psycho": 43, "rule": [43, 132, 138, 163, 213, 219, 223, 256, 282, 309, 324, 343, 345, 346, 347, 362, 368, 386, 397, 398, 399, 401, 409, 411, 436, 448, 453, 554, 600, 634, 637, 641, 643, 663, 689, 690, 796, 817, 878, 954, 977, 985, 986, 996, 1005, 1071, 1119], "dont": [43, 223, 408, 730], "scenario": [43, 133, 146, 155, 163, 167, 331, 452, 604, 698, 916, 917, 924], "robert": [43, 436], "martin": [43, 408, 409, 436], "someon": [43, 163, 204, 219, 226, 229, 260, 279, 308, 543, 698, 749, 814, 820, 841, 863, 887, 931, 979], "mistak": [43, 131, 137, 138, 188, 204, 228, 861, 1055, 1071], "kill": [43, 132, 133, 209, 817, 871, 900, 919, 928, 929, 958, 1118], "peopl": [43, 61, 128, 131, 133, 135, 136, 138, 146, 151, 163, 192, 226, 319, 408, 436, 454, 643, 757, 796, 963, 979, 1007, 1062, 1067], "polit": [43, 676], "thei": [43, 53, 63, 76, 119, 130, 131, 132, 133, 134, 135, 136, 137, 138, 142, 151, 153, 155, 159, 171, 193, 200, 204, 206, 209, 216, 219, 223, 265, 273, 312, 338, 344, 364, 392, 395, 398, 404, 408, 409, 413, 422, 427, 428, 448, 453, 454, 477, 480, 504, 521, 531, 536, 562, 566, 598, 626, 627, 630, 637, 638, 685, 686, 692, 716, 730, 749, 757, 782, 792, 796, 818, 854, 861, 862, 863, 874, 899, 928, 929, 934, 949, 959, 967, 974, 977, 1027, 1050, 1057, 1060, 1061, 1071, 1074, 1077, 1092, 1098, 1114, 1117], "regul": 43, "ethic": 43, "everi": [43, 51, 57, 60, 61, 76, 87, 108, 109, 124, 131, 137, 167, 190, 219, 260, 279, 333, 390, 404, 408, 431, 436, 452, 472, 473, 541, 551, 603, 625, 627, 632, 708, 728, 741, 757, 782, 790, 792, 794, 795, 811, 818, 820, 862, 877, 912, 915, 928, 929, 948, 950, 959, 995, 1013, 1024, 1035, 1061, 1099, 1114], "particular": [43, 130, 142, 163, 377, 402, 428, 452, 504, 708, 803, 978, 979], "electr": 43, "seem": [43, 119, 130, 132, 133, 152, 257, 427, 861, 863, 928, 1114], "adher": [43, 799], "immedi": [43, 61, 131, 132, 137, 138, 209, 250, 253, 256, 258, 287, 369, 579, 693, 698, 739, 749, 753, 854, 904, 913, 916, 918, 999, 1099], "survei": [43, 152], "had": [43, 130, 132, 133, 137, 138, 142, 146, 151, 163, 167, 196, 198, 217, 338, 377, 448, 515, 527, 612, 626, 751, 784, 785, 796, 821, 861, 874, 945, 979, 986, 1005, 1077, 1081], "life": [43, 127, 138, 143, 146, 149, 151, 159, 533, 663, 684, 699, 709, 710, 757, 796, 853, 894, 908, 914, 980, 1001, 1058], "accomplish": [43, 55, 76, 171, 257, 259, 260, 279, 394, 409, 861], "befor": [43, 127, 131, 132, 134, 135, 136, 138, 141, 146, 151, 167, 170, 174, 192, 219, 235, 236, 238, 259, 260, 265, 278, 279, 282, 326, 334, 335, 344, 364, 413, 481, 515, 521, 560, 586, 601, 627, 639, 654, 666, 671, 672, 682, 686, 687, 692, 693, 698, 700, 701, 708, 709, 710, 721, 735, 745, 751, 757, 783, 819, 854, 863, 902, 917, 919, 931, 954, 959, 977, 1020, 1045, 1047, 1051, 1060, 1076, 1080, 1083, 1093, 1094, 1100], "formal": [43, 141, 155, 192, 193, 469, 1093], "googletest": [43, 63, 95, 158, 160, 161, 193, 236, 238, 273, 424, 433, 470, 477, 480, 481, 546, 684, 685, 686, 710, 711, 1099, 1101, 1114], "messag": [43, 126, 128, 136, 137, 146, 149, 155, 161, 169, 170, 196, 200, 203, 206, 216, 219, 226, 229, 244, 251, 259, 260, 261, 265, 279, 289, 301, 306, 409, 412, 414, 433, 538, 554, 613, 643, 648, 668, 670, 671, 680, 690, 698, 710, 732, 757, 790, 794, 799, 853, 875, 894, 904, 908, 983, 997, 1007, 1049, 1094, 1098, 1100, 1126, 1127, 1128], "saniti": [43, 400, 405, 406, 409, 413, 417, 543, 628, 666, 707, 709, 710], "perform": [43, 131, 137, 146, 148, 170, 189, 190, 219, 260, 279, 307, 348, 351, 374, 381, 386, 394, 397, 398, 401, 404, 405, 406, 412, 521, 561, 579, 582, 604, 625, 639, 681, 710, 741, 919, 936, 946, 947, 1005, 1092, 1110, 1113], "delici": [43, 51], "fearlessli": [43, 51], "backlog": [43, 44, 45, 49, 53, 54, 710], "Or": [43, 44, 45, 49, 53, 54, 131, 238, 282, 393, 409, 512, 640, 666, 677, 709, 710, 848, 874, 884, 910, 985, 999, 1079, 1083], "Will": [43, 44, 45, 49, 53, 54, 131, 164, 223, 287, 710, 718, 931, 997, 1087, 1101, 1107, 1126], "high": [44, 51, 152, 192, 206, 223, 408, 436, 459, 473, 476, 485, 684, 686, 701, 739, 751, 755, 767, 776], "speed": [44, 51, 121, 126, 131, 200, 204, 206, 216, 219, 223, 399, 689, 751, 757, 917, 919, 1059, 1060], "hype": 44, "we": [44, 45, 48, 49, 53, 54, 57, 59, 60, 66, 113, 121, 127, 130, 131, 133, 134, 135, 136, 137, 138, 142, 146, 147, 150, 151, 152, 153, 154, 155, 159, 160, 163, 167, 168, 169, 170, 171, 173, 182, 183, 190, 191, 192, 193, 197, 200, 203, 204, 206, 207, 209, 236, 238, 240, 247, 250, 253, 255, 257, 259, 260, 279, 287, 304, 307, 308, 312, 323, 338, 349, 356, 364, 377, 386, 388, 392, 394, 397, 402, 409, 411, 419, 420, 426, 427, 428, 431, 433, 435, 438, 447, 448, 452, 453, 470, 471, 472, 473, 478, 480, 481, 485, 515, 521, 530, 542, 566, 597, 601, 618, 619, 620, 621, 622, 626, 637, 648, 654, 680, 681, 686, 689, 700, 710, 718, 721, 725, 726, 730, 732, 735, 753, 757, 759, 765, 773, 784, 785, 799, 800, 814, 820, 821, 836, 854, 861, 862, 863, 870, 874, 879, 880, 881, 887, 888, 889, 890, 902, 915, 924, 941, 945, 946, 947, 955, 974, 979, 1005, 1007, 1011, 1013, 1042, 1049, 1050, 1051, 1055, 1060, 1061, 1062, 1066, 1073, 1074, 1080, 1083, 1100, 1101, 1117], "did": [44, 132, 133, 135, 137, 138, 141, 142, 150, 159, 163, 170, 255, 388, 392, 408, 433, 472, 619, 688, 690, 705, 730, 735, 757, 796, 854, 865, 874, 955, 1112], "consequ": [44, 130, 131, 250, 253, 368, 389, 392, 393, 436, 887, 974, 1077, 1112], "unsign": [44, 204, 209, 340, 342, 350, 379, 382, 386, 394, 440, 455, 471, 480, 481, 482, 536, 606, 607, 616, 664, 698, 700, 713, 716, 721, 728, 737, 739, 741, 747, 753, 762, 767, 771, 883, 924, 925, 1109, 1110], "introduc": [44, 56, 76, 95, 192, 209, 217, 258, 273, 390, 398, 410, 426, 431, 453, 472, 473, 474, 475, 504, 526, 612, 710, 776, 928, 957, 983, 997, 1062, 1114], "throw": [44, 135, 138, 209, 428, 452, 453, 457, 463, 464, 466, 467, 468, 482, 504, 582, 620, 662, 683, 686, 697, 700, 1104], "notfounderror": 44, "cbda1e98040d084c31ff6e83f04d78dbebf5c1c2": 44, "cluster_clean_cod": [44, 45, 49, 51, 53, 54, 710], "cluster_clean_code_bug": [44, 45, 51, 53, 54, 710], "clean_code_bugs_find_error": [44, 45, 51, 710], "twice": [45, 51, 53, 54, 55, 131, 330, 369, 391, 411, 634, 637, 696, 710, 777, 817, 854, 870, 902, 947], "crash": [45, 51, 61, 108, 109, 129, 131, 132, 133, 136, 188, 190, 200, 206, 216, 219, 319, 359, 366, 452, 536, 563, 608, 684, 710, 915, 929, 1055], "found": [45, 51, 106, 107, 118, 127, 130, 142, 151, 163, 196, 200, 203, 206, 209, 211, 213, 216, 219, 229, 244, 251, 265, 273, 287, 301, 395, 404, 414, 416, 424, 462, 466, 467, 468, 475, 481, 486, 490, 491, 492, 521, 526, 566, 569, 572, 582, 586, 587, 611, 619, 621, 623, 631, 705, 710, 728, 789, 792, 799, 846, 863, 931, 934, 943, 948, 954, 962, 971, 1001, 1033, 1059, 1062, 1102, 1114], "clean_code_bugs_overwrite_store_content_on_read": [45, 51, 53, 54, 710], "clean_code_bugs_overwrite_existing_fil": [45, 51, 53, 54, 710], "explicitli": [46, 132, 133, 137, 163, 203, 213, 223, 256, 346, 347, 365, 403, 409, 453, 530, 533, 541, 582, 631, 634, 637, 690, 788, 916, 925, 953, 963, 982, 1071, 1079], "solut": [46, 63, 111, 136, 138, 146, 147, 155, 157, 163, 182, 192, 193, 198, 201, 204, 209, 214, 220, 236, 239, 250, 259, 260, 264, 270, 279, 282, 368, 369, 372, 391, 394, 412, 425, 452, 475, 504, 526, 532, 533, 553, 590, 592, 594, 601, 615, 623, 638, 643, 648, 674, 690, 710, 818, 819, 836, 899, 904, 917, 918, 934, 959, 995, 1026, 1038, 1071, 1115], "force_overwrit": 46, "descriptor": [46, 131, 155, 187, 219, 223, 244, 265, 308, 533, 716, 737, 773, 793, 799, 800, 857, 879, 880, 881, 925], "mani": [47, 51, 54, 57, 60, 87, 131, 133, 137, 138, 155, 160, 163, 179, 190, 211, 221, 226, 247, 251, 255, 256, 258, 264, 287, 308, 312, 336, 348, 350, 359, 374, 388, 390, 395, 410, 411, 423, 424, 427, 430, 435, 438, 479, 504, 551, 561, 580, 582, 601, 613, 625, 626, 634, 654, 675, 680, 688, 696, 710, 716, 718, 735, 743, 749, 753, 757, 783, 793, 794, 796, 797, 850, 862, 880, 881, 900, 910, 913, 928, 929, 931, 941, 950, 952, 954, 959, 968, 978, 983, 986, 989, 993, 1001, 1005, 1007, 1011, 1060, 1062, 1064, 1066, 1067, 1071, 1080, 1099, 1112, 1115], "overwrit": [47, 107, 452, 453, 466, 475, 490, 492, 526, 536, 582, 584, 613, 710, 757, 819, 824, 836, 888, 1003], "present": [47, 59, 128, 134, 138, 142, 146, 151, 164, 219, 265, 273, 420, 532, 753, 757, 792, 863, 874, 893, 954, 1037, 1080, 1114], "continu": [48, 51, 61, 87, 97, 104, 108, 109, 124, 132, 141, 142, 154, 163, 164, 167, 176, 181, 182, 183, 212, 217, 223, 229, 239, 298, 362, 363, 369, 370, 376, 380, 383, 387, 392, 396, 400, 405, 406, 408, 410, 413, 414, 431, 545, 547, 548, 608, 628, 636, 666, 705, 706, 707, 708, 709, 710, 854, 856, 860, 866, 889, 890, 928, 929, 934, 945, 952, 959, 963, 996, 999, 1017, 1062, 1080, 1099], "expected_cont": 48, "fill": [48, 133, 134, 146, 168, 219, 220, 265, 350, 626, 630, 675, 685, 728, 753, 757, 823, 880, 957], "strategi": [48, 203, 384, 862, 1012, 1092], "hurri": [48, 369], "read_fil": 48, "compar": [48, 111, 191, 193, 204, 219, 260, 265, 279, 347, 389, 403, 404, 413, 477, 528, 685, 865, 900, 997, 1002, 1026, 1030, 1060, 1085], "binaryfil": 48, "per": [48, 76, 137, 164, 292, 312, 342, 381, 386, 469, 747, 753, 767, 771, 776, 777, 789, 793, 813, 839, 906, 915, 932, 1105, 1130], "doesn": [48, 133, 136, 244, 364, 366, 369, 384, 398, 680, 716, 777, 784, 785, 819, 823, 836, 932, 943, 999], "belong": [48, 160, 163, 336, 356, 382, 409, 504, 528, 542, 544, 802, 810, 889, 970, 984], "test_write_csv": 48, "test_read_csv": [48, 1052], "ah": [48, 57, 60, 137, 153, 190, 192, 206, 583, 931, 1007, 1074], "altern": [49, 51, 53, 54, 61, 63, 66, 76, 81, 130, 131, 138, 164, 183, 209, 270, 343, 420, 528, 537, 551, 562, 565, 634, 683, 689, 710, 757, 796, 817, 857, 861, 863, 875, 883, 889, 900, 906, 924, 931, 979, 999, 1002, 1079, 1083, 1087, 1094, 1104, 1107, 1123, 1124, 1126, 1129], "cluster_clean_code_featur": [49, 51, 53, 54, 710], "clean_code_features_other_index": [49, 51, 710], "clean_code_features_csv": [49, 51, 53, 54, 710], "establish": [51, 69, 171, 183, 247, 259, 260, 278, 279, 298, 408, 757, 915, 1115], "were": [51, 124, 131, 133, 137, 146, 163, 167, 319, 368, 424, 527, 536, 537, 563, 630, 669, 784, 785, 863, 890, 945, 953, 977, 986, 1005, 1010, 1071, 1077, 1112], "occas": [51, 87, 132, 685], "ourselv": [51, 163, 854], "gather": [51, 138, 170, 259, 260, 278, 279, 286, 402, 404, 1039], "wreak": [51, 108, 109, 384, 608], "havoc": [51, 108, 109, 384, 608], "shoehorn": 51, "violat": [51, 131, 408, 436, 664, 686, 771, 915, 929], "nearli": [51, 163, 169, 386, 907], "solid": [51, 127, 143, 256, 258, 409, 436, 1110, 1111, 1125, 1126, 1128, 1129], "chanc": [51, 131, 133, 168, 388, 408, 712, 757, 882, 1117], "clean": [51, 61, 114, 146, 198, 217, 318, 386, 397, 398, 401, 407, 528, 626, 711, 931, 933, 943, 952, 1005, 1054], "cluster_clean_code_refactor": [51, 53, 54, 710], "clean_code_refactoring_pass_store_in_ctor": [51, 54, 710], "clean_code_refactoring_backingstore_monolith": [51, 53, 54, 710], "clean_code_refactoring_store_enum_switch": [51, 53, 54, 710], "clean_code_refactoring_backingstore_interfac": [51, 54, 710], "now": [52, 59, 130, 131, 132, 133, 134, 135, 137, 138, 146, 150, 159, 169, 179, 196, 203, 209, 213, 223, 231, 251, 255, 287, 288, 301, 364, 377, 392, 397, 422, 428, 435, 448, 453, 469, 476, 478, 542, 566, 569, 575, 579, 587, 630, 681, 686, 701, 715, 735, 757, 765, 767, 773, 789, 792, 854, 861, 862, 863, 889, 890, 898, 943, 945, 950, 953, 968, 971, 995, 1050, 1060, 1062, 1083, 1093, 1112], "violatin": 52, "respect": [52, 57, 60, 63, 124, 132, 146, 193, 255, 257, 293, 340, 388, 408, 453, 472, 530, 537, 600, 634, 685, 686, 788, 796, 861, 915, 929, 974], "mainli": [53, 131, 167, 256, 265, 582, 708, 897, 957], "bugfix": 53, "ongo": [53, 917], "scene": [53, 931, 974], "pleas": [53, 111, 132, 133, 136, 138, 142, 159, 163, 167, 168, 170, 171, 172, 173, 183, 209, 236, 238, 247, 268, 292, 334, 368, 398, 482, 543, 545, 546, 547, 548, 796, 854, 862, 863, 878, 907, 925, 933, 934, 979, 1084], "wait": [53, 70, 71, 72, 76, 81, 85, 120, 131, 132, 133, 134, 135, 137, 178, 287, 598, 626, 693, 701, 710, 734, 749, 755, 759, 762, 765, 767, 790, 793, 801, 853, 854, 880, 882, 886, 898, 910, 913, 916, 923, 925, 928, 1003, 1074, 1099, 1117, 1125], "unnecessarili": [53, 67, 925], "conflict": [53, 73, 75, 258, 259, 260, 278, 279, 334, 385, 537, 627, 699, 709, 710, 713, 716, 726, 853, 862, 894, 902, 908, 928, 962, 1095], "rip": [53, 134, 410, 470, 915, 1073], "detail": [53, 82, 128, 133, 136, 141, 145, 146, 158, 164, 178, 189, 190, 192, 193, 200, 206, 216, 220, 221, 223, 227, 249, 260, 279, 301, 408, 413, 436, 474, 478, 481, 533, 685, 735, 817, 861, 863, 917, 949, 1057, 1101, 1110], "instanc": [53, 55, 105, 108, 109, 138, 179, 187, 191, 200, 203, 204, 211, 213, 218, 221, 223, 226, 241, 244, 251, 265, 297, 312, 426, 431, 439, 450, 452, 453, 454, 466, 467, 468, 472, 480, 597, 608, 615, 620, 668, 671, 718, 723, 726, 924, 925, 952, 954, 968, 969, 971, 974, 997, 1085], "its": [53, 55, 57, 60, 63, 82, 85, 106, 108, 109, 125, 130, 131, 132, 133, 135, 136, 137, 138, 141, 142, 148, 153, 155, 159, 160, 161, 163, 183, 190, 191, 193, 200, 204, 206, 216, 219, 223, 232, 247, 249, 250, 253, 256, 258, 265, 292, 303, 334, 356, 367, 369, 384, 386, 388, 395, 397, 419, 427, 431, 450, 453, 454, 470, 471, 472, 473, 477, 479, 481, 527, 528, 529, 531, 533, 538, 568, 608, 626, 638, 648, 674, 693, 708, 721, 730, 735, 757, 762, 784, 785, 788, 790, 794, 799, 804, 805, 817, 818, 839, 841, 862, 865, 866, 873, 883, 884, 889, 904, 910, 913, 915, 916, 917, 925, 947, 952, 954, 957, 962, 967, 971, 977, 985, 995, 997, 1002, 1006, 1012, 1060, 1062, 1084, 1085, 1092, 1094, 1112, 1114, 1115, 1117], "replac": [53, 61, 95, 136, 181, 192, 200, 203, 204, 206, 207, 209, 216, 219, 251, 265, 286, 328, 343, 384, 410, 474, 475, 526, 559, 560, 619, 626, 654, 671, 685, 700, 708, 710, 760, 863, 903, 915, 929, 953, 1063], "symptom": [55, 141], "mismatch": [55, 510], "appar": [55, 59, 61, 63, 64, 133, 135, 136, 138, 142, 192, 203, 255, 413, 427, 598, 643, 654, 686, 725, 861, 919, 1071], "onc": [55, 130, 132, 133, 136, 137, 138, 141, 146, 151, 152, 286, 304, 326, 351, 360, 368, 398, 411, 427, 428, 429, 433, 438, 450, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 478, 481, 543, 561, 562, 616, 657, 668, 678, 696, 708, 718, 721, 753, 854, 863, 905, 928, 929, 948, 954, 955, 956, 990, 1011, 1020, 1033, 1067, 1070, 1094], "sync": [55, 132, 203, 219, 226, 229, 244, 251, 261, 265, 384, 388, 757, 848], "imho": [55, 665], "forbidden": [56, 386], "accord": [56, 61, 111, 130, 133, 219, 617, 801, 817, 850, 854, 862, 863], "uncl": [56, 319], "bob": [56, 219, 319, 408], "enum": [56, 192, 193, 343, 358, 396, 400, 405, 406, 410, 413, 628, 666, 707, 709, 710, 716, 718, 726, 915, 1112], "instead": [56, 61, 124, 130, 131, 132, 133, 151, 152, 160, 192, 209, 211, 219, 249, 265, 286, 307, 312, 349, 398, 426, 470, 473, 482, 548, 564, 620, 622, 639, 643, 685, 686, 700, 725, 726, 735, 788, 817, 839, 862, 904, 924, 931, 933, 943, 949, 980, 1026, 1038, 1050, 1077, 1099], "born": [57, 60, 795, 980], "bound": [57, 60, 61, 209, 213, 244, 256, 271, 385, 395, 400, 405, 406, 510, 538, 540, 542, 639, 710, 795, 799, 855, 916, 919, 972, 993, 1016, 1079], "employe": [57, 60, 158, 190, 971], "year": [57, 60, 130, 131, 132, 133, 137, 142, 163, 203, 209, 251, 255, 408, 527, 611, 612, 614, 615, 618, 619, 620, 621, 622, 623, 625, 672, 710, 1012], "emploi": [57, 60, 132, 142, 167, 369, 757], "configur": [57, 59, 60, 61, 66, 71, 76, 80, 82, 83, 84, 102, 111, 116, 117, 130, 132, 133, 136, 138, 161, 171, 237, 246, 247, 256, 267, 268, 274, 275, 301, 307, 411, 415, 416, 418, 419, 431, 433, 438, 469, 476, 479, 481, 710, 730, 737, 757, 771, 787, 788, 789, 792, 801, 837, 850, 853, 854, 862, 874, 881, 895, 897, 925, 932, 933, 945, 955, 1025, 1066, 1070, 1079, 1087, 1115], "pattern": [57, 60, 80, 104, 127, 128, 144, 147, 166, 167, 193, 196, 219, 258, 309, 318, 320, 408, 425, 426, 427, 428, 430, 431, 433, 435, 436, 437, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 475, 526, 689, 690, 710, 711, 817, 846, 913, 960, 961, 1099, 1119], "led": [57, 60, 70, 71, 72, 76, 89, 149, 171, 247, 287, 310, 469, 710, 716, 854, 862], "hei": [57, 60, 131, 171, 223, 543, 544, 792, 878, 1000, 1071], "reinvent": [57, 60, 191, 240, 1055], "wheel": [57, 60, 115, 127, 759, 794, 889, 1087], "admit": [57, 60, 138], "notori": [57, 60], "fun": [57, 60, 131, 136, 189, 191, 227, 256, 319, 432, 669, 757, 796, 854, 861, 862, 959, 971, 983, 999, 1054, 1055, 1086, 1093, 1112], "live": [57, 60, 68, 95, 96, 111, 127, 128, 132, 136, 154, 158, 163, 167, 172, 183, 191, 192, 193, 194, 207, 209, 217, 228, 235, 236, 237, 238, 240, 246, 248, 249, 256, 257, 258, 259, 260, 264, 267, 268, 279, 282, 301, 305, 309, 310, 312, 319, 320, 321, 381, 398, 410, 411, 416, 432, 437, 446, 448, 450, 469, 473, 475, 476, 479, 480, 483, 484, 485, 490, 492, 503, 504, 561, 562, 582, 624, 635, 666, 667, 668, 685, 699, 708, 709, 710, 711, 721, 757, 787, 790, 791, 796, 812, 813, 853, 894, 962, 979, 1012, 1055, 1084, 1093, 1111, 1112, 1126], "session": [57, 60, 127, 136, 138, 156, 163, 167, 171, 175, 200, 206, 216, 219, 231, 235, 236, 238, 249, 257, 307, 759, 788, 789, 871, 882, 1043, 1055, 1084, 1092, 1122], "simpl": [57, 60, 70, 72, 73, 76, 84, 118, 127, 131, 135, 136, 138, 141, 142, 146, 151, 155, 158, 159, 163, 167, 170, 193, 209, 211, 213, 219, 223, 275, 322, 323, 330, 369, 371, 385, 388, 395, 410, 411, 412, 413, 414, 418, 419, 421, 431, 529, 536, 537, 575, 603, 611, 612, 614, 615, 618, 619, 620, 621, 622, 623, 643, 676, 686, 695, 710, 716, 730, 737, 749, 757, 759, 767, 793, 846, 854, 855, 861, 862, 891, 897, 899, 902, 917, 925, 928, 932, 933, 934, 939, 955, 959, 979, 980, 988, 1007, 1055, 1061, 1066, 1082, 1098, 1099], "thu": [57, 60, 131, 132, 133, 169, 353, 428, 730, 735, 777, 784, 887, 1070, 1117], "techniqu": [57, 60, 67, 68, 69, 388, 398, 480, 608, 857], "usag": [57, 60, 63, 78, 104, 133, 138, 183, 193, 204, 217, 231, 256, 258, 259, 278, 287, 307, 319, 369, 394, 395, 402, 413, 417, 423, 432, 433, 446, 473, 474, 475, 526, 536, 543, 544, 562, 597, 599, 603, 604, 623, 625, 637, 648, 654, 668, 675, 710, 759, 794, 817, 846, 849, 864, 895, 898, 913, 949, 954, 957, 1007, 1049, 1051, 1087, 1094, 1101, 1112], "At": [57, 60, 131, 132, 135, 138, 142, 146, 163, 167, 193, 203, 207, 209, 243, 333, 362, 366, 398, 426, 684, 749, 950, 967, 1055], "flow": [57, 60, 132, 163, 168, 170, 171, 172, 173, 177, 182, 183, 198, 201, 214, 225, 302, 303, 304, 306, 342, 362, 370, 376, 380, 383, 387, 396, 398, 400, 405, 406, 628, 666, 675, 707, 709, 710, 928, 963, 988, 990, 997, 1113], "event": [57, 60, 61, 84, 134, 155, 191, 200, 204, 206, 216, 219, 247, 259, 260, 279, 404, 654, 698, 710, 725, 726, 734, 759, 760, 772, 773, 774, 775, 778, 790, 794, 853, 857, 882, 894, 897, 913, 916, 917, 921, 925, 966, 1074, 1083, 1085, 1117, 1126, 1128, 1129], "save": [57, 60, 61, 83, 127, 130, 131, 143, 151, 154, 200, 206, 216, 219, 250, 253, 256, 350, 352, 626, 657, 660, 661, 662, 801, 819, 873, 882, 919, 948, 952, 958, 968, 1001, 1060, 1094, 1112], "schedul": [57, 60, 61, 63, 97, 108, 109, 111, 131, 148, 171, 173, 237, 246, 247, 267, 314, 315, 426, 432, 446, 469, 475, 476, 479, 480, 483, 484, 485, 503, 526, 699, 709, 710, 739, 749, 755, 762, 777, 784, 785, 786, 787, 791, 793, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 831, 832, 833, 834, 835, 837, 853, 865, 866, 867, 868, 869, 876, 882, 884, 892, 894, 899, 908, 910, 911, 915, 919, 933, 935, 936, 937, 938, 939, 940, 941, 942, 1070, 1107, 1117, 1118, 1128], "overhead": [57, 60, 398, 404, 515, 524, 689, 690], "usual": [57, 60, 82, 106, 111, 131, 132, 138, 141, 146, 151, 161, 163, 223, 257, 273, 324, 364, 365, 391, 404, 408, 414, 416, 421, 426, 440, 448, 454, 478, 528, 544, 585, 639, 674, 675, 689, 698, 701, 708, 716, 728, 730, 735, 745, 751, 753, 757, 771, 773, 777, 793, 795, 799, 818, 854, 855, 862, 883, 897, 915, 916, 931, 932, 933, 934, 943, 952, 953, 954, 955, 959, 962, 965, 966, 972, 974, 976, 977, 979, 982, 988, 993, 1054, 1061, 1062, 1071, 1094, 1095, 1101, 1114], "exhibit": [57, 60, 209, 620, 863, 884, 889], "glitch": [57, 60, 133, 138, 862, 863], "caus": [57, 60, 131, 134, 146, 200, 206, 216, 219, 223, 863, 910, 915, 1080], "hiccup": [57, 60, 138, 249, 933], "twist": [57, 60, 741], "amazingli": [57, 60, 801], "submiss": 58, "submit": [58, 107, 751], "grazer": [58, 149, 170, 859], "linuxtag": [58, 170, 859], "2023": [58, 94, 104, 111, 248, 249, 252, 255, 266, 272, 277, 318, 409, 410, 679], "pure": [59, 67, 138, 301, 364, 437, 600, 626, 665, 690, 796, 986, 1112], "local": [59, 131, 132, 134, 137, 146, 159, 163, 164, 171, 172, 176, 192, 193, 207, 209, 210, 216, 219, 222, 223, 244, 247, 259, 261, 270, 273, 278, 287, 301, 334, 338, 362, 364, 381, 419, 423, 432, 446, 448, 469, 475, 476, 477, 478, 479, 480, 483, 484, 485, 503, 526, 533, 551, 634, 637, 639, 668, 710, 730, 757, 762, 784, 785, 789, 839, 853, 861, 863, 864, 865, 866, 872, 874, 880, 891, 899, 941, 943, 950, 953, 998, 1087, 1114, 1115, 1128], "easili": [59, 125, 132, 138, 287, 343, 362, 395, 408, 427, 600, 676, 739, 755, 883, 913, 919, 949, 962, 994, 1112], "guess": [59, 213, 223, 249, 388, 393, 643, 870, 925], "autotool": [59, 142], "portabl": [59, 155, 336, 398, 693, 899, 906, 925, 929, 986, 1067], "archiv": [59, 101, 102, 111, 142, 143, 171, 173, 237, 246, 247, 267, 404, 417, 423, 432, 446, 469, 475, 476, 479, 480, 483, 484, 485, 503, 526, 710, 787, 817, 853, 933, 936, 938, 939, 941, 942, 943, 948, 952, 1087], "m4": 59, "macro": [59, 209, 274, 328, 339, 342, 354, 363, 370, 376, 380, 383, 387, 390, 396, 400, 405, 406, 414, 415, 419, 420, 423, 628, 666, 672, 707, 709, 710, 726, 745, 759, 799, 877, 883, 889, 899, 933, 1005, 1099, 1104, 1109, 1113], "stock": [59, 203, 204, 1011, 1012], "sudo": [59, 99, 111, 127, 134, 136, 138, 146, 160, 171, 209, 237, 246, 247, 256, 258, 267, 268, 414, 421, 497, 710, 787, 812, 814, 853, 854, 862, 863, 917, 945, 1094], "pwd": [59, 107, 159, 236, 238, 301, 306, 417, 478, 481, 546, 732, 735, 784, 785, 794, 839, 841, 854, 932, 933, 946, 948, 1092], "blink": [59, 114, 258, 261, 287, 290, 854, 895, 898], "pub": [59, 134, 171, 730, 870, 1049], "lib": [59, 111, 127, 136, 142, 170, 190, 193, 203, 219, 226, 229, 244, 251, 258, 261, 265, 416, 477, 735, 747, 753, 757, 848, 863, 928, 932, 934, 943, 945, 1087, 1094], "remot": [59, 100, 102, 134, 136, 138, 146, 183, 192, 239, 287, 425, 446, 460, 475, 526, 710, 730, 757, 758, 762, 783, 786, 853, 862, 864, 867, 868, 869, 872, 880, 943, 955, 1115, 1116, 1123], "v0": 59, "v1": [59, 249, 433, 448, 630], "v2": [59, 61, 138, 158, 249, 433, 448, 630], "autotooleri": 59, "autogen": 59, "step": [59, 61, 130, 131, 137, 138, 142, 146, 167, 206, 209, 210, 236, 238, 251, 255, 260, 279, 324, 326, 328, 344, 368, 410, 413, 430, 474, 478, 521, 546, 551, 684, 757, 784, 785, 931, 939, 1079, 1080, 1093], "noconfigur": 59, "suppress": [59, 137, 183, 402, 427, 536, 685, 836, 1087], "absorb": [59, 124, 169, 407, 409, 637, 1012], "Be": [59, 95, 209, 256, 258, 287, 341, 374, 478, 504, 529, 534, 596, 623, 635, 637, 666, 668, 671, 682, 691, 699, 707, 709, 710, 783, 928, 943], "awar": [59, 287, 385, 418, 917], "enabl": [59, 130, 136, 163, 171, 192, 200, 206, 216, 219, 247, 257, 347, 398, 424, 431, 453, 509, 755, 757, 762, 809, 854, 858, 862, 874, 917, 941, 945, 955, 1117], "mkdir": [59, 98, 111, 117, 132, 137, 141, 159, 160, 236, 238, 247, 301, 306, 478, 481, 482, 546, 708, 710, 757, 784, 785, 786, 787, 821, 822, 823, 824, 825, 828, 829, 831, 837, 853, 870, 874, 924, 943, 945, 946, 952], "dist": [59, 115, 689, 1010], "406332": 59, "apr": [59, 61, 190, 200, 229, 294, 932, 933, 946], "transfer": [59, 131, 193, 196, 273, 287, 404, 482, 536, 637, 728, 757, 770, 771, 783, 784, 785, 844, 864, 870, 873, 1074, 1112, 1114], "scp": [59, 95, 99, 111, 117, 142, 171, 237, 246, 247, 267, 268, 481, 482, 710, 730, 784, 785, 853, 864, 865, 866, 867, 869, 874, 891, 941, 942, 943], "192": [59, 164, 171, 203, 206, 211, 213, 216, 219, 223, 226, 229, 241, 244, 251, 261, 265, 271, 307, 730, 792, 874, 1129], "168": [59, 164, 171, 174, 181, 190, 203, 206, 211, 213, 216, 219, 223, 226, 229, 232, 241, 244, 261, 265, 271, 307, 730, 792, 874, 943, 1129], "82": [59, 141, 150, 164, 174, 179, 181, 187, 190, 196, 203, 206, 211, 213, 219, 223, 226, 229, 232, 241, 244, 251, 261, 265, 271, 296, 1012, 1059, 1060], "prerequisit": [59, 102, 209, 730, 861, 982], "apt": [59, 142, 146, 160, 209, 256, 258, 497, 737, 856, 861, 863, 874, 933, 945, 1094, 1099], "python3": [59, 61, 84, 115, 127, 142, 151, 164, 170, 190, 200, 206, 216, 219, 223, 909, 919, 945, 955, 982, 1079, 1080, 1087, 1094], "along": [59, 132, 138, 191, 204, 319, 368, 438, 708, 802, 910, 931, 962, 1085], "omit": [59, 61, 137, 146, 151, 200, 206, 216, 219, 220, 223, 305, 349, 386, 398, 410, 430, 604, 626, 673, 735, 751, 800, 861, 862, 863, 870, 886, 887, 891, 902, 952, 955, 1007, 1092], "bind": [59, 132, 234, 256, 258, 346, 353, 584, 626, 639, 666, 690, 691, 693, 699, 709, 710, 857, 931, 963, 967, 986, 997, 1077, 1112, 1127, 1129], "cxx": [59, 128, 411, 426, 427, 428, 429, 430, 431, 433, 435, 438, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 477, 480, 486, 487, 488, 489, 491, 493, 494, 495, 496, 498, 499, 500, 501, 502, 932, 933], "xf": [59, 142, 783, 945], "ld_library_path": [59, 416, 948], "gpiod": [59, 61, 737], "py3": [59, 115, 127, 1010], "aarch64": [59, 142, 943], "multi": [61, 1061, 1071], "chmod": [61, 138, 301, 784, 785, 802, 807, 809, 811, 814, 866, 870], "snippet": [61, 151, 170, 286, 591, 862, 955], "subdirectori": [61, 137, 146, 158, 160, 183, 274, 411, 415, 416, 470, 478, 710, 732, 783, 784, 785, 797, 807, 809, 826, 841, 845, 862, 863, 943, 1043, 1099], "stuff": [61, 68, 76, 98, 111, 130, 133, 137, 146, 151, 163, 167, 170, 183, 192, 193, 214, 228, 247, 249, 270, 287, 305, 404, 410, 512, 559, 708, 710, 716, 725, 757, 787, 817, 825, 831, 837, 853, 861, 891, 952, 954, 1010, 1050, 1055, 1057, 1092], "stuff_complet": 61, "strace": [61, 95, 131, 133, 319, 715, 720, 773, 880, 886, 899, 915, 924, 1125], "pid": [61, 131, 133, 134, 403, 776, 789, 793, 795, 899, 915, 918, 924, 928, 929], "4677": 61, "11hello": 61, "clock_gettime64": 61, "clock_monoton": [61, 701, 881, 915], "tv_sec": [61, 915], "164646": 61, "tv_nsec": [61, 915], "833862215": 61, "_newselect": 61, "tv_usec": 61, "500000": [61, 856, 862, 1060], "unfinish": [61, 133], "4679": 61, "resum": [61, 656, 657, 660, 661, 662, 753, 915], "timeout": [61, 696, 698, 700, 880, 1087], "mi": [61, 211], "845864201": 61, "4678": [61, 206], "fd": [61, 141, 203, 247, 482, 716, 861, 875, 879, 880, 881, 883, 887, 888, 889, 890, 893, 895, 898, 921, 924, 928, 1012], "fourth": 61, "involv": [61, 76, 131, 134, 138, 141, 193, 247, 259, 260, 278, 279, 307, 384, 392, 398, 404, 470, 536, 538, 627, 728, 757, 854, 932, 941, 943], "occasion": [61, 119, 146, 163, 192, 209, 394, 408, 418, 620, 757, 801, 979, 993, 1054, 1072], "due": [61, 138, 163, 426, 690, 1087], "weird": [61, 247, 394, 664, 716, 741, 910, 928], "gil": [61, 163, 167, 259, 260, 278, 279, 1055], "jitter": [61, 917, 919], "heavi": [61, 155, 163, 436, 863, 979, 1117], "usr": [61, 131, 132, 136, 142, 151, 154, 159, 161, 183, 190, 191, 200, 203, 206, 216, 219, 223, 226, 229, 244, 249, 251, 261, 265, 298, 301, 411, 413, 414, 416, 417, 421, 643, 676, 686, 730, 757, 783, 789, 801, 813, 845, 848, 861, 863, 909, 919, 928, 931, 932, 933, 934, 943, 946, 948, 955, 958, 982, 1043, 1058, 1074, 1087, 1094, 1101], "env": [61, 127, 132, 154, 249, 909, 919, 982, 1009, 1043, 1058, 1074], "hello_left": 61, "hello_right": 61, "rjust": [61, 151, 219, 265], "hello_middl": 61, "center": [61, 154, 196, 211, 213, 219, 223, 244, 251, 265, 295, 402, 477], "t1": [61, 150, 213, 223, 244, 248, 265, 900], "t2": [61, 150, 206, 213, 223, 244, 900], "t3": 61, "async": [61, 131, 163, 167, 200, 206, 216, 217, 219, 654, 907, 930, 1055, 1127], "await": 61, "epoll_wait": 61, "201": [61, 134, 164, 181, 190, 203, 206, 211, 213, 216, 219, 223, 226, 244, 251, 261, 265, 271], "multiplex": [61, 862, 881, 915, 1129], "create_task": 61, "sysf": [61, 111, 128, 178, 247, 288, 289, 481, 710, 713, 714, 759, 853, 854, 861, 863, 894, 895, 898, 1116, 1123], "unmaintain": [61, 237, 246, 247, 933, 997, 1109], "immun": [61, 543, 701], "hotplug": [61, 861], "reset": [61, 130, 433, 435, 685, 686, 687, 708, 1080, 1128], "pullup": 61, "pulldown": 61, "rpi": [61, 113, 142, 287, 757, 758, 861], "hope": [61, 131, 133, 136, 138, 142], "major": [61, 136, 149, 200, 206, 216, 219, 256, 258, 408, 412, 543, 716, 723, 788, 916, 980, 986, 1001], "releas": [61, 134, 160, 274, 369, 415, 686, 697, 698, 700, 710, 716, 730, 854, 861, 904, 909, 945, 948, 980, 1093, 1124], "ton": [61, 684, 796, 858, 883, 915, 919, 1112], "bartosz": 61, "golaszewski": 61, "dev": [61, 98, 131, 132, 142, 148, 149, 159, 160, 203, 209, 219, 226, 229, 244, 247, 251, 256, 258, 261, 265, 307, 397, 416, 485, 710, 712, 713, 715, 721, 728, 737, 751, 753, 757, 770, 787, 788, 797, 799, 800, 817, 831, 834, 837, 839, 853, 856, 861, 862, 863, 886, 893, 913, 916, 919, 921, 924, 925, 945, 1099, 1101, 1117], "gpiochip0": [61, 737, 897], "ioctl": [61, 247, 390, 723, 725, 751, 759, 760, 765, 771, 857, 861], "crw": [61, 721, 788, 839, 861, 862, 863], "254": [61, 152, 203, 206, 211, 213, 216, 223, 226, 244, 251, 261, 265, 271], "request": [61, 91, 96, 132, 133, 136, 193, 195, 220, 226, 409, 428, 450, 464, 633, 634, 637, 638, 715, 759, 883, 898, 1092], "request_lin": 61, "consum": [61, 133, 136, 153, 203, 402, 419, 448, 698, 700, 782, 790, 797, 904, 905, 916, 921, 923, 925, 928, 955, 977, 986, 1012, 1070, 1117], "mytest": 61, "config": [61, 95, 120, 121, 127, 132, 134, 136, 142, 150, 244, 261, 265, 305, 312, 321, 481, 686, 710, 730, 758, 839, 861, 862, 863, 870, 945, 955, 1087], "lineset": 61, "set_valu": [61, 700], "all_io": 61, "transform": [61, 64, 151, 166, 167, 170, 172, 182, 187, 188, 190, 191, 198, 209, 211, 214, 217, 240, 247, 249, 258, 264, 282, 286, 398, 488, 489, 501, 504, 557, 611, 612, 613, 614, 615, 616, 618, 619, 620, 621, 622, 623, 654, 678, 710, 941, 961, 1005, 1038, 1055], "ntime": [61, 965], "task": [61, 75, 146, 188, 201, 214, 228, 231, 234, 264, 270, 305, 308, 310, 311, 314, 315, 316, 319, 710, 784, 785, 802, 844, 853, 861, 864, 879, 894, 900, 913, 914, 916, 917, 1055, 1092], "interv": [61, 87, 170, 200, 206, 207, 216, 219, 223, 244, 305, 471, 473, 481, 482, 626, 700, 701, 881, 891, 915, 919], "none": [61, 115, 127, 130, 131, 136, 141, 150, 152, 164, 174, 181, 182, 191, 196, 197, 200, 203, 206, 212, 213, 216, 219, 223, 226, 232, 241, 244, 248, 249, 251, 261, 265, 271, 296, 388, 389, 410, 413, 533, 619, 621, 880, 897, 925, 952, 955, 977, 1003, 1010, 1083, 1099], "itertool": [61, 228, 230, 959], "cram": [61, 124, 161, 725, 915, 952, 1071], "goe": [61, 63, 83, 134, 136, 151, 256, 398, 433, 497, 601, 621, 630, 680, 721, 757, 799, 800, 886, 913, 919, 929, 932, 939, 982, 985, 1005], "stuff_raw": 61, "mod": [61, 219, 244, 264, 735], "sidewai": [61, 167, 170, 225, 314, 315, 960, 961], "numpi": [61, 163, 167, 182, 201, 207, 214, 249, 255, 410, 979, 1054, 1058, 1061, 1072, 1076, 1087, 1094], "transpos": [61, 817], "col": 61, "tolist": 61, "outsid": [61, 219, 437, 450, 530, 538, 543, 685, 686, 747, 818, 900, 916, 955], "instanti": [61, 127, 190, 305, 428, 439, 453, 454, 467, 468, 470, 473, 554, 583, 601, 622, 648, 654, 676, 689, 690, 967, 968, 1058], "coro": [61, 654, 656, 657, 659, 660, 661, 662], "cannot": [61, 108, 109, 127, 131, 132, 133, 138, 142, 153, 154, 160, 161, 163, 170, 190, 223, 250, 253, 287, 364, 365, 368, 369, 388, 390, 392, 395, 398, 416, 419, 431, 454, 477, 521, 530, 533, 535, 538, 539, 562, 597, 598, 600, 601, 603, 604, 608, 627, 630, 633, 639, 665, 675, 676, 680, 686, 688, 698, 700, 753, 757, 762, 777, 794, 799, 802, 813, 828, 836, 872, 916, 925, 947, 948, 949, 953, 955, 967, 972, 979, 987, 988, 994, 995, 1005, 1079, 1080, 1092, 1117], "stuff_raw2": 61, "01": [61, 94, 95, 103, 104, 111, 127, 128, 136, 141, 143, 150, 154, 172, 183, 190, 197, 206, 212, 219, 231, 248, 249, 251, 255, 298, 300, 314, 315, 318, 397, 410, 411, 424, 511, 512, 701, 786, 813, 863, 917, 919, 946, 1043, 1054, 1059, 1092], "05": [61, 95, 111, 134, 141, 146, 190, 225, 248, 255, 266, 275, 300, 318, 417, 1059, 1063], "runtimeerror": [61, 154, 190, 244, 286, 952, 954], "reus": [61, 146, 152, 947, 997], "alreadi": [61, 78, 111, 131, 132, 134, 142, 153, 155, 163, 167, 223, 250, 253, 381, 392, 398, 430, 450, 452, 463, 466, 481, 501, 582, 710, 716, 730, 737, 745, 755, 757, 760, 777, 853, 861, 862, 863, 870, 883, 884, 886, 891, 892, 894, 911, 946, 952, 979, 1005, 1087, 1092, 1094, 1101], "bare": [61, 76, 78, 85, 87, 106, 113, 131, 319, 854, 862], "create_coro": 61, "ctor": [61, 158, 167, 216, 265, 275, 477, 504, 512, 529, 532, 533, 536, 546, 548, 583, 606, 630, 631, 633, 637, 638, 663, 671, 686, 776], "nest": [61, 127, 191, 204, 213, 223, 230, 234, 251, 261, 332, 361, 362, 388, 648, 700, 704, 762, 952, 995, 1085], "_blink": 61, "coro_cr": 61, "creator": [61, 125, 142], "create_factory_for_blink": 61, "blinkfunc": 61, "blink_func": 61, "stuff_decorator_stage1": 61, "stage1": 61, "stararg": [61, 953, 956, 977], "func": [61, 190, 200, 206, 216, 219, 250, 264, 487, 557, 626, 641, 648, 689, 953, 957], "becom": [61, 66, 76, 87, 90, 131, 133, 159, 171, 250, 253, 273, 275, 347, 377, 379, 386, 389, 410, 426, 430, 470, 630, 685, 686, 687, 757, 794, 813, 846, 862, 863, 870, 913, 916, 917, 952, 958, 988, 1093, 1099, 1114, 1115], "obsolet": [61, 163, 979], "prog": [61, 204, 286], "demo": [61, 95, 96, 111, 131, 154, 158, 163, 166, 168, 171, 172, 175, 183, 190, 198, 201, 204, 207, 209, 214, 220, 237, 240, 243, 246, 247, 267, 268, 301, 319, 411, 412, 416, 417, 421, 424, 473, 485, 610, 687, 710, 787, 790, 791, 812, 813, 853, 882, 924, 933, 979, 1061, 1098, 1118, 1122], "opposit": [61, 135, 362, 863, 916, 1071], "futur": [61, 111, 138, 203, 223, 235, 236, 238, 247, 282, 292, 314, 315, 386, 450, 620, 654, 696, 698, 699, 709, 710, 767, 1112], "steig": [62, 139], "normalweg": 62, "w\u00e4r": 62, "umst\u00e4nden": [62, 1107, 1111, 1126], "renat": 62, "beschreibung": [62, 175, 177, 185, 188, 191, 192, 194, 210, 222, 845], "bergfex": 62, "reden": 62, "sie": [62, 139, 145, 150, 154, 211, 216, 296, 302, 319, 779, 844, 1106, 1108, 1109, 1110, 1116, 1126, 1128, 1129, 1130], "tagen": [62, 1116], "wir": [62, 149, 154, 158, 164, 166, 174, 175, 180, 194, 213, 219, 226, 319, 587, 1107, 1122, 1123], "w\u00fcrden": 62, "denk": [62, 139, 195, 1126], "beiden": [62, 150, 164, 211, 219, 226], "h\u00fctten": [62, 140], "schlafen": 62, "hochk\u00f6nig": 63, "cite": [63, 138, 152, 163], "complain": [63, 133, 142, 146, 160, 348, 521, 536, 537, 732, 760, 870], "subrepo": 63, "whole": [63, 210, 222, 223, 225, 228, 231, 240, 243, 286, 410, 639, 648, 690, 732, 735, 757, 802, 884, 953, 1024, 1115], "subtitl": 63, "fight": [63, 796], "against": [63, 133, 142, 183, 191, 203, 204, 368, 410, 414, 418, 470, 481, 701, 730, 732, 737, 741, 749, 792, 889, 934, 939, 949, 963, 1021, 1085, 1092, 1117], "fake": [63, 861], "simplest": [63, 169, 231, 411, 428, 561, 568, 675, 696, 762, 792, 846, 910, 943, 981, 986, 1092, 1100], "unprofession": [63, 135], "populist": 63, "gtest_discover_test": 63, "robust": 63, "sentenc": 63, "implicitli": [63, 187, 192, 203, 375, 425, 533, 541, 631, 639, 720, 887, 952, 984, 1071], "gtest_add_test": 63, "scan": [63, 200, 223, 226, 861, 863], "primit": [63, 131, 175, 176, 256, 961, 1112, 1122], "sort": [63, 83, 104, 106, 118, 131, 158, 164, 172, 176, 191, 193, 203, 204, 209, 211, 213, 214, 219, 227, 241, 244, 251, 256, 265, 271, 398, 399, 402, 403, 413, 504, 562, 580, 590, 594, 623, 664, 668, 676, 689, 698, 700, 710, 797, 801, 839, 850, 863, 954, 1002, 1003, 1057, 1085, 1087], "port": [63, 127, 128, 133, 138, 143, 203, 237, 246, 267, 268, 287, 319, 710, 790, 796, 844, 853, 864, 869, 873, 891, 1012, 1070, 1074, 1087, 1116, 1123], "trap": [63, 132, 193, 381, 386, 404, 532, 1111, 1113], "hehe": [63, 163, 170], "html_sidebar": 63, "rtd": [63, 128], "linkcheck": 63, "admonit": 63, "matrix": [63, 152, 154, 255, 308, 310, 399], "thoma": [63, 125], "cokela": 63, "ablog": 63, "couldn": [63, 138, 142, 167, 170, 993], "figur": [63, 111, 117, 123, 128, 136, 137, 152, 207, 951], "piec": [63, 76, 124, 132, 388, 504, 556, 862, 893], "especi": [63, 84, 90, 132, 136, 155, 163, 247, 301, 319, 321, 347, 358, 388, 408, 630, 732, 863], "feed": [63, 82, 128, 1060], "blog_baseurl": 63, "nicer": [63, 917], "pour": [63, 426, 783], "tag": [63, 134, 136, 139, 140, 164, 180, 182, 224, 413, 421, 730, 945, 948, 1124], "resolv": [64, 75, 142, 146, 200, 203, 206, 209, 216, 219, 226, 229, 244, 251, 261, 265, 365, 391, 540, 874, 931, 934, 1059, 1060], "buildenviron": 64, "resolve_refer": 64, "builder": [64, 203, 1012], "get_and_resolve_doctre": 64, "apply_post_transform": 64, "addnod": 64, "docstr": [64, 127, 187, 190, 200, 206, 212, 224, 227, 230, 252, 301, 983], "emit": [64, 82, 453, 454, 799], "doctre": 64, "increasingli": 66, "whose": [66, 142, 200, 206, 216, 219, 255, 265, 314, 315, 448, 518, 621, 622, 854, 955, 1092, 1099], "mainten": [66, 343, 369, 388, 948], "easier": [66, 78, 83, 90, 152, 193, 410, 436, 541, 625, 757, 1112], "never": [66, 108, 109, 131, 132, 133, 138, 151, 213, 219, 223, 265, 347, 368, 384, 395, 398, 408, 426, 448, 527, 608, 686, 796, 854, 877, 902, 932], "simpler": [66, 142, 193, 257, 260, 279, 326, 385, 419, 565, 753, 757, 862, 874], "wors": [66, 119, 134, 219, 394, 410, 648, 879, 1095], "makefil": [66, 95, 193, 236, 238, 411, 422, 726, 730, 758, 759, 936, 939, 941, 948, 949], "everytbodi": 67, "runtim": [67, 131, 142, 164, 168, 192, 216, 219, 323, 344, 392, 402, 403, 416, 421, 452, 453, 466, 485, 515, 524, 564, 582, 583, 626, 668, 675, 689, 690, 900, 931, 967, 985, 997, 1061, 1062], "dispatch": [67, 515, 524, 600, 603, 604], "hell": [67, 183, 217, 394, 427, 640, 671, 693, 747, 782, 907, 1071], "destructor": [67, 68, 95, 104, 193, 209, 230, 256, 258, 303, 304, 432, 446, 475, 480, 497, 504, 513, 519, 526, 527, 528, 529, 534, 536, 551, 599, 600, 611, 612, 613, 614, 615, 616, 618, 619, 620, 621, 622, 623, 635, 639, 666, 682, 691, 697, 699, 707, 709, 710, 718, 749, 762, 774, 1104], "opportun": [67, 138, 141, 151, 163, 182, 398, 617, 968, 1115], "shoot": [67, 819], "oneself": [67, 1117], "encapsul": [68, 71, 191, 204, 209, 256, 258, 287, 408, 428, 432, 446, 469, 473, 475, 476, 479, 480, 483, 484, 485, 490, 492, 503, 504, 526, 527, 549, 552, 555, 571, 577, 581, 590, 593, 594, 599, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 635, 666, 682, 691, 699, 707, 709, 710, 726, 759, 925, 980, 1063, 1085, 1113], "hide": [68, 192, 204, 260, 279, 980], "fanci": [68, 1000, 1061, 1084], "whatnot": [68, 207, 698, 757, 854, 862, 880, 910], "boost": [69, 209, 421, 424, 504, 654, 918, 1130], "feel": [69, 131, 133, 142, 163, 521, 618, 620, 621, 626, 899, 917, 979], "cluster_ecpropos": [70, 71, 72, 85, 710], "cluster_ecproposal_ec1": [70, 71, 72, 85, 710], "cluster_ecproposal_ec1_mt": [70, 71, 72, 85, 710], "cluster_ecproposal_ec1_cxx": [70, 71, 72, 85, 710], "cluster_ecproposal_ec1_linux": [70, 71, 72, 710], "cluster_ecproposal_ec2": [70, 72, 710], "cluster_ecproposal_ec2_python": [70, 72, 710], "ecproposal_ec1_git": [70, 71, 72, 710], "ecproposal_ec1_mt_exercise_mt_race_fix": [70, 71, 72, 85, 710], "ex": [70, 71, 72, 76, 85, 119, 191, 204, 497, 515, 676, 710, 802, 817, 1085, 1094], "avoid": [70, 71, 72, 76, 85, 131, 138, 146, 223, 334, 369, 447, 477, 480, 493, 528, 532, 583, 710, 755, 846, 862, 1113], "ecproposal_ec1_mt_exercise_mt_rac": [70, 71, 72, 85, 710], "ecproposal_ec1_mt_lock": [70, 71, 72, 85, 710], "semaphor": [70, 71, 72, 74, 76, 85, 87, 126, 155, 156, 178, 200, 206, 216, 219, 319, 698, 710, 749, 904, 1117, 1127], "ecproposal_ec1_cxx_build": [70, 71, 72, 85, 710], "ecproposal_ec1_mt_wait": [70, 71, 72, 85, 710], "ecproposal_ec1_cxx_unittest": [70, 71, 72, 710], "ecproposal_ec1_cxx_oo_bas": [70, 71, 72, 710], "ecproposal_ec1_cxx_ifac": [70, 71, 72, 710], "ecproposal_ec1_linux_dev_mgmt": [70, 71, 72, 710], "ecproposal_ec1_linux_bas": [70, 71, 72, 710], "ecproposal_ec1_linux_exercise_sensor": [70, 71, 72, 710], "temperatur": [70, 71, 72, 76, 80, 89, 92, 95, 111, 167, 200, 247, 307, 310, 325, 327, 329, 427, 433, 438, 459, 469, 474, 475, 476, 479, 480, 481, 482, 483, 484, 485, 496, 515, 526, 604, 636, 710, 757, 853, 860, 892, 894, 911, 967, 1043, 1058, 1059, 1060, 1061], "ecproposal_ec1_linux_exercise_avg_sensor": [70, 71, 72, 710], "averag": [70, 71, 72, 76, 82, 83, 167, 203, 207, 223, 258, 431, 447, 479, 480, 710, 919, 1012], "ecproposal_ec1_linux_exercise_avg_sensor_parallel": [70, 71, 72, 710], "ecproposal_ec1_linux_gpio": [70, 71, 72, 710], "ecproposal_ec1_linux_exercise_led_displai": [70, 71, 72, 710], "displai": [70, 71, 72, 76, 136, 200, 206, 216, 219, 244, 247, 249, 251, 256, 261, 265, 310, 402, 469, 710, 792, 839, 848, 861, 915, 1094], "ecproposal_ec2_python_flask": [70, 72, 710], "ecproposal_ec2_python_bas": [70, 72, 710], "ecproposal_ec2_python_web_sensor": [70, 72, 710], "ecproposal_ec2_python_exercise_avg_displai": [70, 72, 710], "ecproposal_ec2_python_exercise_sensor": [70, 72, 710], "qualiti": [71, 138, 192, 255, 862, 1086], "assur": 71, "characterist": 71, "polymorph": [72, 104, 111, 190, 191, 204, 256, 258, 260, 275, 279, 410, 432, 446, 475, 526, 599, 603, 604, 623, 684, 689, 710, 1085, 1112, 1115], "concurr": [72, 163, 167, 217, 676, 747, 963, 1055], "increment": [73, 149, 192, 206, 209, 232, 255, 326, 330, 334, 354, 363, 370, 374, 376, 380, 383, 387, 396, 400, 405, 406, 504, 521, 628, 666, 707, 709, 710, 789, 901, 902, 903, 924, 925, 963], "lossi": 73, "access": [74, 76, 86, 108, 109, 128, 132, 133, 134, 136, 138, 151, 161, 171, 178, 190, 200, 203, 206, 209, 216, 219, 226, 229, 244, 247, 251, 261, 265, 275, 287, 301, 304, 306, 338, 377, 398, 399, 437, 453, 483, 484, 485, 503, 504, 527, 539, 541, 544, 545, 547, 548, 562, 587, 601, 608, 611, 614, 615, 618, 619, 620, 621, 622, 623, 637, 654, 669, 673, 685, 710, 715, 725, 728, 734, 745, 753, 757, 759, 775, 790, 793, 802, 804, 805, 828, 853, 863, 872, 873, 879, 883, 887, 889, 893, 897, 901, 915, 916, 924, 929, 950, 955, 962, 963, 966, 985, 992, 994, 1007, 1023, 1059, 1079, 1094, 1117], "flavor": [74, 85, 131, 411, 675, 680], "stash": 75, "suffic": [75, 138, 336, 386], "purpos": [75, 76, 78, 124, 132, 136, 142, 163, 182, 200, 206, 216, 219, 231, 244, 304, 332, 410, 422, 529, 561, 601, 690, 757, 790, 799, 862, 884, 889, 910, 931, 949, 979, 1060, 1093, 1116, 1123], "unifi": [76, 170, 554], "intention": [76, 192, 265, 641], "power": [76, 87, 130, 132, 147, 152, 192, 209, 302, 303, 304, 322, 334, 335, 377, 386, 757, 767, 774, 788, 854, 858, 861, 862, 863, 882, 897, 915, 919, 956, 974, 978, 980, 986, 991, 1003, 1081], "being": [76, 79, 119, 131, 134, 135, 141, 155, 163, 169, 190, 219, 223, 301, 347, 374, 391, 427, 430, 515, 539, 582, 684, 686, 690, 692, 698, 708, 739, 753, 757, 792, 874, 889, 915, 962, 969, 979, 982, 1059, 1101, 1104, 1117], "address": [76, 97, 104, 108, 109, 111, 131, 133, 134, 135, 138, 171, 178, 183, 190, 192, 193, 209, 211, 237, 246, 247, 258, 267, 268, 298, 303, 304, 312, 365, 367, 376, 380, 383, 386, 387, 395, 396, 400, 405, 406, 426, 432, 437, 440, 446, 448, 450, 455, 469, 475, 476, 479, 480, 481, 483, 484, 485, 503, 526, 536, 541, 628, 638, 639, 666, 680, 699, 707, 709, 710, 737, 741, 753, 755, 784, 785, 786, 787, 790, 791, 793, 797, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 831, 832, 833, 834, 835, 837, 853, 855, 857, 862, 863, 865, 866, 867, 868, 869, 874, 876, 880, 882, 884, 891, 892, 894, 899, 907, 908, 910, 911, 914, 916, 924, 931, 933, 935, 936, 937, 938, 939, 940, 941, 942, 948, 963, 966, 1059, 1060, 1082, 1092], "crucial": [76, 131, 155, 401, 563], "mmu": [76, 131, 728, 771, 794, 915], "sophist": [76, 200, 427, 448, 481, 622], "permiss": [76, 95, 98, 99, 100, 111, 166, 167, 171, 173, 183, 190, 206, 226, 237, 246, 261, 264, 267, 287, 296, 301, 302, 303, 304, 306, 475, 526, 612, 699, 708, 709, 710, 716, 757, 784, 785, 787, 790, 791, 794, 800, 803, 807, 808, 809, 810, 811, 813, 814, 815, 819, 831, 834, 836, 837, 839, 853, 854, 862, 864, 867, 869, 870, 873, 874, 879, 882, 883, 884, 887, 889, 890, 892, 894, 908, 911, 914, 916, 917, 929, 954, 1055, 1087, 1094, 1118, 1127], "nativ": [76, 95, 102, 111, 130, 136, 138, 164, 200, 236, 238, 256, 308, 710, 757, 853, 932, 936, 938, 941, 1067, 1070, 1076], "varieti": [76, 404, 793, 931, 1115], "storag": [76, 136, 141, 411, 639, 757, 793, 854, 862, 879, 899, 1128], "underli": [76, 191, 198, 214, 223, 264, 301, 306, 676, 863, 1055, 1060, 1067], "platform": [76, 138, 191, 200, 204, 206, 216, 219, 223, 231, 249, 294, 303, 321, 737, 757, 862, 863, 897, 915, 1043, 1085, 1092, 1094], "offer": [76, 131, 141, 182, 257, 362, 539, 543], "pc": [76, 106, 127, 183, 247, 287, 304, 307, 482, 855, 856, 862, 1107], "popular": [76, 142, 155, 159, 357, 634, 782, 863, 915, 931, 947, 973, 1057, 1066, 1074, 1088, 1115], "often": [76, 87, 130, 131, 132, 133, 163, 213, 223, 250, 253, 273, 343, 353, 374, 413, 428, 440, 554, 676, 757, 817, 893, 959, 979, 993, 1114, 1115], "appropri": [76, 118, 124, 131, 141, 146, 151, 183, 223, 343, 357, 369, 480, 690, 753, 861, 873, 924, 1061, 1070, 1115], "prototyp": [76, 287, 334, 426, 487, 521, 637, 757, 854, 862, 875, 952, 1070], "higher": [76, 131, 142, 200, 206, 216, 219, 708, 755, 854, 916, 918, 925, 933, 941, 1070, 1114], "raspberri": [76, 95, 102, 104, 113, 114, 126, 143, 147, 173, 247, 258, 304, 306, 307, 318, 320, 482, 710, 734, 738, 757, 761, 766, 772, 775, 778, 853, 860, 862, 863, 874, 919, 932, 934, 938, 941, 943, 945, 956, 978, 982, 1072, 1074, 1086, 1107, 1116], "fulli": [76, 135, 138, 142, 167, 390, 481, 925], "distribut": [76, 136, 141, 146, 158, 163, 183, 193, 211, 223, 298, 426, 473, 485, 693, 728, 757, 795, 796, 917, 979], "en": [76, 136, 148, 158, 219, 247, 606], "vogu": 76, "serial": [76, 130, 131, 141, 171, 206, 207, 219, 790, 792, 1116, 1123], "groundwork": 76, "lai": 76, "instruct": [76, 130, 134, 138, 161, 192, 247, 256, 258, 398, 470, 685, 700, 903, 915, 946, 1043], "consolid": [76, 163], "makeri": 76, "everybodi": [76, 136, 257, 390, 436, 530, 569, 612, 788, 982, 986, 1092, 1112], "clarifi": 76, "earli": [76, 127, 130, 163, 167, 172, 257, 762, 774, 789, 917, 950, 967, 1005, 1114], "matter": [76, 130, 135, 136, 138, 146, 163, 169, 171, 328, 372, 404, 411, 418, 428, 528, 529, 541, 544, 630, 669, 676, 686, 688, 732, 757, 759, 802, 813, 855, 861, 863, 874, 954, 979, 1083, 1094, 1104, 1115], "rewrit": [76, 78, 131, 410], "translat": [76, 89, 90, 151, 164, 182, 219, 223, 226, 229, 265, 675, 1022], "flask": [76, 91, 128, 167, 170, 953], "network": [76, 108, 109, 117, 126, 127, 128, 131, 138, 148, 149, 171, 173, 178, 203, 219, 226, 229, 240, 244, 246, 247, 251, 261, 265, 267, 303, 319, 320, 404, 437, 710, 711, 734, 774, 790, 792, 793, 795, 853, 856, 857, 862, 863, 864, 874, 878, 879, 882, 883, 894, 913, 1123, 1127], "oppos": [78, 111, 130, 170, 204, 211, 221, 256, 275, 369, 413, 418, 515, 841, 855, 862, 870, 904, 917, 924, 929, 948, 974, 985, 986, 1071, 1079], "ahead": [78, 146, 408, 969], "optimz": 78, "donald": [78, 397], "knuth": [78, 397], "prematur": [78, 397, 401], "optim": [78, 132, 244, 256, 384, 400, 401, 405, 406, 413, 710, 741, 1070, 1111, 1113], "evil": [78, 209, 338, 388, 397, 401, 413, 541], "knowledg": [79, 83, 250, 253, 256, 481, 619, 621, 757, 855, 863, 956, 978, 1086], "onewir": [79, 83, 95, 104, 111, 247, 258, 301, 304, 474, 475, 526, 710, 853, 860, 861, 892, 894, 911], "protocol": [79, 123, 136, 169, 170, 180, 202, 205, 207, 208, 212, 215, 218, 221, 230, 243, 245, 250, 253, 259, 260, 262, 263, 266, 269, 278, 279, 307, 310, 342, 350, 437, 450, 715, 844, 855, 857, 861, 863, 864, 872, 873, 893, 952, 956, 960, 967, 1064], "aspect": [79, 163, 167, 193, 217, 256, 258, 433, 788, 861, 863, 1055, 1086, 1092, 1117], "regard": [79, 138, 163, 287, 817, 979, 986, 1088, 1092], "filesystem": [79, 83, 104, 111, 130, 133, 142, 171, 173, 183, 234, 301, 306, 481, 709, 710, 757, 783, 862, 874, 890, 897, 915, 934, 1092, 1118, 1123, 1125, 1129], "hwmon": [79, 83, 307, 310], "composit": [80, 104, 167, 193, 239, 257, 258, 275, 425, 432, 446, 460, 475, 526, 710, 959, 1115], "mock": [80, 111, 257, 259, 260, 278, 279, 288, 290, 469, 475, 476, 479, 484, 515, 526, 710, 1099], "pool": [81, 192, 777, 916, 918, 1064], "pin": [82, 247, 287, 854, 858, 861, 862], "light": [82, 141, 796, 978, 1092], "linearli": [82, 223, 568, 793], "cold": [82, 182], "hot": [82, 133, 399, 402, 739], "queri": [82, 987], "said": [82, 108, 109, 133, 146, 163, 250, 253, 260, 279, 448, 561, 608, 692, 698, 718, 854, 862, 863, 874, 901, 916, 959, 979, 999, 1071, 1084], "ds18s20": [83, 307, 1092], "datasheet": [83, 116, 753, 854, 863], "lm73": [83, 247, 307, 310, 710, 853, 860, 863], "ti": [83, 130, 408, 482, 530, 687], "hoc": [83, 193, 368], "report": [83, 130, 133, 134, 146, 148, 150, 312, 394, 404, 527, 875, 910, 1099, 1101], "experi": [83, 119, 138, 163, 408, 413, 512, 862, 863, 1093], "subsystem": [84, 95, 96, 101, 102, 111, 149, 171, 178, 183, 220, 236, 238, 240, 246, 247, 256, 258, 259, 275, 278, 710, 735, 753, 767, 787, 791, 793, 853, 854, 861, 862, 863, 897, 913, 954, 1092, 1116, 1117, 1123], "deprec": [84, 260, 279, 595, 883, 897, 1112], "foremost": 85, "osen": [85, 87, 141, 692, 708, 915], "recurs": [85, 86, 167, 191, 200, 206, 216, 219, 696, 749, 762, 801, 802, 817, 829, 839, 846, 866, 873, 910, 991, 995, 1112], "mother": [86, 106, 147, 209, 504, 972, 1112], "protect": [86, 131, 133, 183, 191, 203, 256, 258, 349, 368, 466, 467, 527, 530, 541, 597, 599, 600, 604, 623, 698, 710, 741, 749, 755, 794, 836, 862, 903, 904, 915, 963, 966, 975, 1104, 1117], "critic": [86, 131, 141, 404, 697, 747, 749, 1087], "kind": [86, 131, 133, 141, 146, 151, 163, 167, 200, 206, 207, 216, 217, 219, 231, 247, 259, 260, 278, 279, 433, 481, 533, 580, 630, 639, 684, 698, 788, 854, 861, 862, 963, 1055, 1084, 1086, 1117], "poll": [87, 137, 148, 749, 751, 774, 897, 902, 904, 921, 925, 1116, 1123, 1127, 1129], "second": [87, 130, 133, 134, 138, 150, 163, 169, 190, 196, 200, 204, 206, 216, 219, 223, 249, 251, 287, 322, 332, 386, 402, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 462, 466, 467, 468, 469, 473, 481, 521, 536, 584, 586, 587, 626, 655, 656, 675, 686, 687, 700, 701, 704, 705, 706, 767, 794, 799, 802, 862, 881, 884, 891, 915, 924, 928, 932, 933, 947, 948, 949, 999, 1007, 1087, 1099, 1112], "readi": [87, 130, 854, 1092], "rare": [87, 136, 153, 167, 411, 421, 478, 481, 536, 634, 685, 839, 861, 878, 990, 994, 1007, 1093], "btw": [87, 135, 141, 163, 169, 183, 190, 210, 213, 301, 385, 726, 792, 1044, 1046], "increas": [87, 133, 398, 854, 917, 919, 947, 1115], "tight": [87, 155, 342, 700, 760, 1083], "bui": [87, 131, 427], "bigger": [87, 131, 163, 398, 1061], "avail": [87, 130, 131, 133, 134, 136, 142, 146, 155, 159, 163, 183, 192, 200, 206, 216, 219, 273, 278, 320, 412, 414, 419, 423, 428, 453, 454, 654, 690, 696, 700, 730, 757, 762, 789, 813, 854, 858, 861, 862, 913, 916, 917, 934, 945, 950, 955, 962, 986, 1004, 1005, 1054, 1066, 1083, 1087, 1094, 1095, 1114, 1117], "intro": [91, 111, 128, 158, 182, 192, 201, 214, 215, 228, 231, 250, 253, 258, 264, 270, 526, 626, 634, 654, 678, 710, 853, 877, 894, 896, 898, 1055, 1113, 1115, 1127], "rout": [91, 167, 953], "jinja2": 91, "ss2022": [94, 710, 786, 787, 853], "ws2022": 94, "lab": [94, 104, 111, 301], "vo": [95, 104, 111, 307], "ku": [95, 103, 104, 111], "g1": [95, 710, 786, 787, 853], "g2": [95, 301, 710, 786, 787, 853], "2022": [95, 103, 104, 114, 143, 206, 212, 216, 219, 235, 236, 242, 245, 314, 315, 318, 410, 421, 478, 654, 679, 683, 708, 817, 819, 933, 943, 1010, 1054, 1085], "03": [95, 103, 111, 127, 128, 136, 141, 143, 150, 158, 193, 214, 216, 219, 248, 249, 252, 255, 261, 274, 297, 300, 304, 318, 320, 402, 409, 410, 411, 432, 446, 469, 473, 475, 476, 479, 480, 483, 484, 485, 490, 492, 503, 504, 521, 526, 527, 529, 530, 532, 534, 536, 537, 539, 541, 544, 549, 552, 555, 571, 577, 581, 589, 590, 591, 593, 594, 596, 599, 605, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 625, 635, 666, 682, 691, 699, 707, 709, 710, 711, 819, 943, 1059, 1085, 1101, 1111], "08": [95, 97, 103, 111, 134, 141, 142, 143, 197, 200, 225, 229, 255, 318, 422, 854, 861, 863, 885, 946, 1059], "cont": [95, 111, 201, 264], "command": [95, 97, 111, 127, 130, 135, 141, 171, 183, 188, 198, 200, 206, 207, 214, 216, 219, 228, 231, 237, 239, 246, 247, 264, 267, 268, 287, 301, 306, 319, 369, 390, 401, 413, 423, 424, 425, 432, 446, 450, 460, 475, 478, 526, 536, 685, 699, 709, 710, 757, 783, 784, 785, 786, 787, 790, 791, 792, 794, 795, 796, 797, 799, 801, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 819, 820, 821, 822, 824, 825, 826, 828, 829, 831, 832, 833, 835, 837, 845, 850, 853, 862, 863, 864, 865, 866, 873, 877, 882, 884, 892, 894, 908, 910, 911, 914, 915, 916, 917, 931, 932, 939, 943, 947, 1007, 1055, 1087, 1094, 1101, 1115], "wsl": [95, 96, 101, 102, 111, 220, 240, 246, 259, 275, 278, 710, 787, 791, 853, 934, 941, 942, 946], "homework": [95, 100, 103, 111, 133], "ssh": [95, 99, 100, 111, 113, 128, 138, 142, 171, 203, 219, 226, 229, 237, 244, 246, 251, 261, 265, 267, 287, 300, 301, 307, 308, 314, 315, 319, 481, 482, 710, 783, 784, 785, 792, 839, 848, 853, 854, 862, 865, 866, 891, 941, 942, 943, 1116, 1118, 1123], "sshf": [95, 99, 111, 237, 246, 247, 267, 268, 308, 710, 853, 864, 869, 934, 943], "toolchain": [95, 101, 102, 104, 106, 111, 126, 143, 158, 160, 247, 319, 410, 411, 417, 432, 446, 469, 475, 476, 479, 480, 481, 482, 483, 484, 485, 503, 526, 699, 709, 710, 758, 787, 790, 791, 853, 876, 882, 884, 891, 892, 894, 908, 911, 914, 916, 933, 934, 935, 936, 939, 947, 948, 949, 980, 1107, 1109, 1110, 1111, 1119, 1125, 1127], "04": [95, 103, 111, 114, 127, 138, 141, 143, 158, 159, 183, 231, 247, 248, 251, 255, 298, 300, 318, 411, 710, 853, 934, 941, 942, 946, 1059, 1092], "bashrc": [95, 102, 111, 130, 142, 203, 237, 246, 247, 261, 267, 268, 710, 787, 789, 837, 839, 853, 873, 943, 945], "studi": [95, 102, 192, 235, 236, 238, 239, 247, 282, 425, 432, 626, 666, 709, 710, 853, 936, 938, 941], "09": [95, 127, 134, 143, 167, 183, 248, 277, 298, 318, 410, 413, 839, 862, 863, 887, 982, 1059], "ds18b20": [95, 111, 247, 301, 710, 853, 860, 891], "slave": [95, 111, 247, 710, 853, 858, 860, 891], "redirect": [95, 98, 111, 132, 135, 171, 173, 183, 200, 206, 216, 219, 237, 246, 247, 267, 286, 301, 306, 710, 784, 785, 786, 787, 801, 821, 822, 824, 825, 828, 829, 831, 837, 850, 853, 883, 1005, 1108, 1118, 1125], "pipe": [95, 131, 136, 138, 151, 171, 173, 183, 237, 246, 247, 249, 267, 286, 301, 306, 708, 710, 787, 794, 799, 839, 844, 853, 883, 927, 928, 929, 943, 1005, 1108, 1118, 1125], "06": [95, 104, 111, 141, 172, 216, 235, 248, 255, 272, 300, 318, 410, 421, 504, 708, 982, 1059], "02": [95, 104, 111, 127, 134, 141, 143, 150, 154, 180, 190, 217, 231, 248, 249, 255, 314, 315, 318, 402, 410, 411, 863, 931, 932, 933, 943, 945, 1059], "past": [95, 131, 135, 136, 193, 209, 374, 559, 561, 565, 568, 572, 637, 730, 732, 796, 1050, 1054, 1109], "2p": [95, 102], "3p": [95, 102], "5p": [95, 102], "pointer": [95, 106, 111, 134, 158, 234, 293, 302, 303, 304, 319, 332, 334, 336, 377, 378, 380, 381, 383, 385, 386, 387, 396, 400, 405, 406, 440, 481, 497, 515, 520, 522, 527, 528, 530, 538, 545, 547, 556, 560, 564, 568, 569, 572, 578, 582, 595, 628, 635, 636, 637, 664, 666, 671, 673, 675, 680, 685, 687, 690, 691, 699, 705, 706, 707, 709, 710, 716, 723, 728, 739, 745, 774, 777, 875, 901, 929, 1005, 1109, 1110, 1111, 1112, 1113, 1115], "exit": [95, 111, 127, 131, 133, 161, 182, 200, 206, 209, 216, 219, 241, 247, 294, 319, 323, 375, 417, 424, 433, 536, 603, 683, 685, 710, 720, 725, 759, 853, 863, 879, 880, 881, 883, 884, 889, 891, 894, 895, 911, 921, 928, 929, 948, 954, 962, 963, 981, 984, 997, 1007, 1017, 1034, 1087, 1094], "statu": [95, 111, 127, 132, 134, 146, 200, 206, 209, 216, 219, 231, 241, 247, 319, 323, 375, 413, 417, 424, 603, 708, 710, 759, 773, 853, 884, 889, 891, 894, 911, 915, 928, 948, 984, 1010, 1072], "yai": [95, 127, 203, 211, 213, 226, 232, 251, 261, 569, 620, 626, 910], "07": [95, 104, 111, 127, 141, 143, 154, 167, 196, 197, 231, 236, 248, 249, 255, 271, 300, 314, 315, 318, 416, 784, 785, 861, 982, 1010, 1054, 1059], "ol": [95, 111, 209, 256, 258, 265, 310, 432, 446, 469, 475, 476, 479, 480, 483, 484, 485, 490, 492, 503, 526, 530, 534, 549, 552, 555, 571, 577, 581, 590, 593, 594, 599, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 635, 666, 678, 682, 688, 691, 699, 707, 709, 710, 850, 925, 1000, 1005, 1027], "randomsensor": [95, 433, 438, 447, 459, 474, 475, 480, 485, 493, 494, 495, 496, 498, 499, 526, 684, 685, 686, 687, 710, 967], "rectangl": [95, 124, 436, 504, 533, 549, 623, 710], "mystr": [95, 157, 209], "point3d": [95, 549, 623, 710], "cuboid": [95, 549, 623, 710], "hierarchi": [97, 104, 108, 109, 167, 168, 170, 172, 190, 191, 204, 207, 219, 237, 246, 247, 267, 268, 312, 399, 426, 427, 428, 431, 432, 446, 447, 451, 453, 475, 480, 526, 710, 787, 790, 791, 792, 803, 806, 807, 808, 809, 810, 811, 812, 817, 823, 829, 836, 853, 865, 866, 867, 868, 869, 894, 912, 941, 942, 1085], "parent": [97, 107, 108, 109, 133, 146, 148, 237, 246, 247, 267, 268, 708, 710, 737, 787, 789, 790, 791, 792, 793, 802, 803, 806, 807, 808, 809, 810, 811, 812, 820, 821, 822, 823, 824, 826, 828, 829, 830, 841, 853, 865, 866, 867, 868, 869, 894, 900, 941, 942], "login": [97, 111, 136, 138, 171, 183, 237, 300, 301, 710, 784, 785, 787, 788, 789, 791, 793, 794, 795, 803, 806, 807, 808, 809, 810, 811, 812, 818, 853, 854, 862, 865, 866, 867, 868, 869, 870, 872, 874, 891, 941, 942, 1033, 1107, 1116, 1123], "bourn": [97, 111, 147, 171, 173, 237, 246, 247, 267, 301, 302, 303, 306, 319, 320, 432, 446, 469, 475, 476, 479, 480, 483, 484, 485, 503, 526, 699, 708, 709, 710, 780, 784, 785, 786, 787, 790, 791, 798, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 847, 853, 876, 882, 884, 892, 894, 895, 908, 911, 914, 916, 933, 935, 936, 937, 938, 939, 940, 941, 942], "verifi": [98, 100, 111, 119, 141, 147, 159, 171, 183, 247, 312, 521, 539, 710, 787, 792, 821, 824, 825, 828, 831, 837, 853, 866, 867, 869, 1021, 1058, 1061, 1087], "joke": [98, 131], "mostli": [98, 217, 319, 324, 330, 342, 358, 388, 397, 542, 583, 685, 690, 725, 793, 796, 817, 883, 910, 913, 934, 1114], "size": [98, 107, 130, 132, 133, 150, 152, 158, 200, 201, 206, 209, 214, 216, 219, 223, 228, 231, 247, 264, 265, 270, 301, 332, 349, 354, 363, 370, 374, 376, 380, 381, 383, 386, 387, 389, 394, 395, 396, 398, 400, 405, 406, 428, 429, 435, 475, 482, 486, 490, 491, 492, 493, 494, 498, 499, 502, 509, 521, 526, 528, 532, 536, 541, 545, 547, 548, 561, 562, 563, 564, 569, 574, 575, 579, 583, 585, 586, 591, 593, 620, 622, 628, 631, 632, 637, 648, 649, 650, 652, 666, 676, 685, 689, 690, 698, 707, 708, 709, 710, 716, 728, 743, 753, 773, 782, 787, 788, 794, 801, 831, 834, 837, 839, 845, 849, 853, 857, 862, 883, 885, 924, 925, 931, 948, 951, 1055, 1071], "secur": [99, 111, 134, 136, 138, 183, 203, 209, 237, 246, 267, 300, 710, 784, 785, 790, 792, 795, 813, 817, 853, 854, 862, 864, 865, 866, 867, 868, 872, 883, 891, 941, 942, 948, 950, 982, 1012], "account": [99, 108, 109, 111, 136, 138, 158, 163, 167, 168, 203, 209, 219, 226, 229, 244, 248, 249, 251, 261, 265, 301, 306, 331, 404, 410, 608, 626, 730, 861, 874, 979, 1059], "authent": [99, 111, 171, 183, 192, 237, 246, 247, 267, 268, 298, 301, 710, 784, 785, 853, 864, 865, 866, 867, 868, 869, 874, 1021], "ownership": [99, 111, 158, 193, 247, 268, 475, 493, 497, 504, 526, 639, 681, 684, 685, 699, 709, 710, 784, 785, 787, 790, 791, 794, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 853, 882, 883, 884, 892, 894, 908, 911, 914, 916, 1112, 1115], "setuid": [99, 111, 171, 237, 246, 247, 267, 268, 710, 787, 792, 812, 853], "send": [99, 111, 113, 128, 131, 142, 167, 168, 170, 171, 172, 173, 206, 207, 226, 228, 229, 247, 268, 301, 306, 450, 781, 797, 813, 856, 857, 861, 870, 880, 928, 930, 1051, 1071], "quick": [100, 111, 163, 170, 188, 192, 198, 207, 214, 228, 240, 270, 453, 690, 844, 854, 1055, 1084], "credenti": [100, 111, 138, 231, 710, 785, 786, 787, 792, 806, 807, 808, 809, 810, 811, 812, 853, 870, 899, 952], "share": [100, 101, 104, 108, 109, 111, 113, 126, 131, 133, 138, 142, 146, 155, 156, 158, 159, 161, 164, 183, 193, 200, 203, 206, 216, 219, 223, 226, 229, 234, 235, 236, 238, 244, 247, 251, 261, 265, 274, 282, 298, 319, 320, 364, 391, 392, 398, 404, 411, 415, 422, 423, 427, 439, 480, 504, 512, 626, 687, 689, 690, 698, 700, 707, 709, 710, 735, 739, 755, 762, 786, 787, 790, 796, 806, 809, 810, 812, 848, 853, 862, 886, 899, 901, 907, 913, 919, 931, 934, 941, 943, 963, 966, 1101, 1116, 1117, 1125, 1127], "adjust": [100, 121, 125, 710, 757, 853, 862, 867, 869, 925, 932], "ubuntu": [101, 132, 138, 142, 146, 158, 159, 160, 161, 171, 236, 238, 247, 319, 710, 796, 853, 856, 874, 933, 934, 941, 942, 946, 1094, 1099], "zoom": [101, 102, 111, 138, 147, 163, 247, 261, 319, 411, 432, 446, 469, 475, 476, 479, 480, 483, 484, 485, 503, 526, 710, 839, 853, 933, 936, 937, 938, 939, 941, 1106], "recap": [102, 111, 167, 171, 180, 209, 256, 257, 301, 522, 961], "endeavor": 102, "hoop": [102, 796, 928], "doze": [102, 137, 192, 193, 206, 301, 308, 386, 708, 796, 841, 999, 1005, 1094], "pictur": [102, 128, 131, 152, 163, 167, 260, 261, 279, 398, 404, 478, 769, 817, 819, 839, 854, 873, 877, 1127], "fit": [102, 142, 147, 152, 154, 342, 347, 427, 551, 626, 648, 716, 757, 854, 1058, 1060, 1072], "theori": [104, 167, 371, 398, 1060], "Of": [104, 111, 133, 136, 166, 167, 217, 235, 236, 238, 240, 247, 256, 258, 282, 432, 446, 475, 480, 526, 559, 599, 610, 623, 707, 709, 710, 786, 801, 848, 853, 891, 894, 896, 961, 1055, 1071, 1115], "ece20": [104, 107, 470, 481, 546, 784, 785, 792], "uml": [104, 239, 257, 259, 260, 279, 432, 446, 475, 480, 526, 710], "foundat": [104, 214, 244, 432, 446, 475, 526, 710, 757, 1123], "adapt": [104, 134, 167, 239, 257, 425, 432, 434, 435, 446, 450, 460, 464, 475, 526, 690, 710, 862, 863, 1115], "syllabu": [104, 309], "vote": 104, "beurteilungsschema": 104, "grade": [104, 107, 111, 305, 315, 1092], "total": [104, 107, 133, 142, 146, 150, 203, 219, 229, 236, 397, 402, 410, 424, 433, 448, 477, 478, 480, 481, 536, 546, 685, 839, 841, 854, 861, 862, 863, 874, 897, 925, 932, 933, 934, 943, 946, 1010, 1012, 1099], "compos": [104, 113, 147, 209, 336, 428, 607, 757, 945, 948, 957, 971, 1017, 1071], "practic": [104, 204, 213, 217, 223, 371, 408, 561, 600, 637, 672, 679, 861, 887, 929, 1066, 1085, 1112, 1115], "theoret": [104, 303, 322, 693], "semest": [104, 107, 305, 307], "addition": [104, 130, 133, 347, 431, 448], "deliv": [104, 131, 857, 928, 929], "variou": [104, 133, 209, 235, 236, 684, 698, 700, 757, 789, 1117], "weight": [104, 154, 163, 393, 751, 863, 979], "decid": [104, 132, 133, 138, 163, 217, 397, 427, 487, 501, 566, 753, 757, 777, 861, 962, 979], "excerpt": [104, 167, 170, 303, 304, 1012, 1072], "w1": [104, 111, 247, 470, 481, 482, 891], "soup": [104, 128, 411, 413, 414, 416, 417, 419, 420, 422, 424, 426, 427, 428, 429, 430, 431, 433, 435, 438, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 477, 480, 486, 487, 488, 489, 491, 493, 494, 495, 496, 498, 499, 500, 501, 502, 606, 686, 895, 898, 955, 958, 1007, 1092, 1101], "armv8": [104, 142, 247, 482, 932, 945, 946], "rpi4": [104, 142, 247, 482, 932, 945, 946], "gnueabihf": [104, 142, 247, 482, 757, 932, 943, 945, 946], "shape": [104, 124, 152, 154, 193, 255, 256, 475, 504, 526, 546, 626, 710, 757, 883, 1060, 1066, 1076], "algorithm": [104, 132, 141, 152, 200, 206, 214, 216, 219, 227, 229, 235, 236, 256, 265, 398, 475, 490, 515, 522, 526, 553, 564, 566, 567, 569, 570, 573, 574, 590, 593, 594, 623, 668, 676, 678, 689, 693, 710, 1034, 1057, 1061], "find_if": [104, 106, 193, 209, 256, 282, 568, 571, 590, 594, 611, 620, 623, 689, 710], "customiz": [104, 256, 571, 590, 594, 623, 710], "binary_search": [104, 106, 193, 209, 256, 571, 590, 594, 623, 710], "associ": [104, 142, 160, 168, 170, 172, 188, 193, 247, 250, 253, 256, 258, 345, 346, 354, 359, 363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 469, 475, 490, 492, 526, 561, 590, 594, 623, 626, 628, 654, 666, 707, 709, 710, 716, 723, 781, 855, 883, 955, 985, 986, 987, 1003, 1005, 1062, 1115], "hour": [104, 136, 138, 163, 167, 200, 222, 240, 251, 264, 307, 1017, 1055, 1062], "sent": [104, 131, 132, 171, 404, 450, 797, 905, 925, 929, 1074], "015": 104, "voluntari": 104, "odd": [104, 111, 223, 258, 386, 475, 487, 490, 526, 710, 862, 957, 959], "char": [105, 133, 149, 192, 209, 219, 265, 324, 331, 336, 337, 340, 342, 343, 344, 347, 348, 361, 366, 369, 374, 375, 382, 386, 392, 393, 395, 411, 429, 433, 463, 467, 473, 482, 486, 518, 533, 536, 537, 541, 551, 591, 606, 607, 621, 637, 639, 664, 671, 688, 713, 716, 721, 737, 739, 751, 777, 861, 875, 879, 880, 883, 887, 888, 889, 890, 893, 895, 898, 912, 915, 921, 924, 925, 928, 949, 994, 1000, 1069, 1099, 1104], "cout": [105, 142, 412, 418, 433, 447, 452, 453, 454, 466, 467, 468, 470, 473, 480, 481, 485, 512, 530, 532, 537, 539, 543, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 579, 583, 584, 585, 586, 587, 593, 597, 598, 601, 603, 604, 607, 610, 617, 620, 626, 631, 641, 643, 644, 645, 646, 649, 650, 651, 652, 654, 655, 656, 658, 659, 660, 661, 662, 663, 668, 670, 671, 673, 674, 676, 678, 687, 688, 689, 690, 698, 700, 701, 800, 861, 895, 898, 910, 912, 924, 928, 1099], "endl": [105, 142, 412, 433, 447, 452, 453, 454, 466, 467, 468, 470, 473, 480, 481, 485, 512, 530, 532, 537, 539, 543, 544, 551, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 579, 583, 584, 585, 586, 587, 593, 597, 598, 601, 603, 604, 607, 610, 617, 620, 626, 641, 643, 644, 645, 646, 649, 650, 651, 652, 654, 655, 656, 658, 659, 660, 661, 662, 663, 668, 670, 671, 673, 674, 676, 678, 687, 688, 689, 690, 698, 700, 701, 861, 895, 898, 910, 912, 924, 928, 1099], "constitut": 105, "_id": 105, "objectcontain": 105, "add_object": 105, "_contain": [105, 676], "push_back": [105, 457, 458, 521, 562, 563, 564, 569, 572, 575, 579, 583, 630, 631, 634, 639, 698, 928, 1104], "fragment": [105, 399, 959, 1099], "iostream": [105, 200, 206, 216, 219, 433, 447, 452, 453, 454, 462, 466, 467, 468, 470, 473, 480, 485, 512, 530, 532, 537, 539, 543, 544, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 569, 570, 573, 574, 575, 579, 583, 584, 585, 586, 587, 593, 597, 598, 601, 603, 604, 610, 616, 617, 618, 619, 620, 621, 626, 631, 641, 644, 645, 646, 649, 650, 651, 652, 654, 655, 656, 658, 659, 660, 661, 662, 663, 668, 670, 671, 673, 676, 678, 687, 688, 689, 690, 698, 700, 708, 861, 895, 898, 902, 910, 912, 924, 928, 929, 1099], "my_vector": 105, "sysroot": [106, 142, 932, 946], "intel": [106, 116, 120, 134, 710, 931], "header": [106, 127, 159, 193, 209, 234, 264, 273, 274, 368, 369, 370, 376, 380, 383, 387, 391, 396, 400, 405, 406, 410, 415, 416, 417, 422, 423, 433, 554, 628, 643, 648, 666, 672, 707, 709, 710, 801, 858, 863, 932, 934, 943, 1012, 1045, 1049, 1050, 1052, 1060, 1066, 1114], "match": [106, 130, 137, 166, 179, 196, 203, 204, 206, 211, 219, 229, 231, 232, 241, 244, 264, 265, 271, 366, 410, 481, 639, 643, 663, 676, 680, 792, 801, 874, 934, 954, 1000, 1055, 1099], "linker": [106, 108, 109, 126, 158, 273, 365, 391, 398, 402, 403, 414, 421, 543, 554, 757, 931, 934, 937, 941, 948, 1109, 1110, 1111, 1114, 1119, 1125], "uniquifi": [107, 258, 475, 490, 526, 710], "lookup": [107, 151, 168, 181, 200, 206, 211, 216, 219, 233, 265, 393, 448, 475, 490, 492, 526, 641, 710, 967, 996, 1003, 1033, 1071, 1080, 1129], "leak": [107, 133, 381, 395, 433, 453, 454, 475, 490, 492, 493, 510, 518, 521, 526, 527, 533, 598, 672, 683, 685, 710, 955], "sure": [107, 130, 131, 132, 133, 134, 136, 137, 138, 141, 142, 171, 183, 190, 207, 209, 249, 298, 392, 427, 428, 431, 450, 453, 454, 478, 509, 606, 680, 705, 757, 862, 863, 884, 888, 943, 955, 1115], "gz": [107, 127, 757, 758, 781, 782, 783, 1010, 1094], "whatev": [107, 130, 131, 133, 138, 154, 169, 229, 287, 404, 450, 529, 629, 654, 708, 822, 824, 874, 879, 915, 917, 985, 1052, 1060, 1070, 1071, 1094], "quiz": [108, 109, 111, 609, 623, 710, 787, 791, 806, 812, 831, 837, 853, 938, 941], "servic": [108, 109, 127, 136, 137, 138, 171, 203, 219, 226, 229, 244, 251, 261, 265, 404, 410, 693, 749, 755, 760, 790, 793, 844, 863, 872, 874, 881, 917, 984], "owner": [108, 109, 132, 171, 301, 306, 686, 716, 757, 790, 804, 805, 813, 839, 874, 902], "dimension": [108, 109, 152, 648, 790, 1060, 1061], "identifi": [108, 109, 132, 141, 200, 206, 216, 219, 265, 347, 369, 390, 392, 402, 617, 715, 755, 790, 861, 863, 1001, 1062], "pthread": [108, 109, 131, 142, 148, 200, 206, 216, 219, 692, 698, 790, 899, 904, 907, 915, 929, 934], "timeslic": [108, 109, 131, 790, 913, 918], "suspend": [108, 109, 131, 132, 654, 656, 696, 753, 788, 790, 801, 904, 929], "favor": [108, 109, 790, 916, 1112], "fair": [108, 109, 131, 755, 790, 916, 918], "ensur": [108, 109, 219, 428, 476, 790], "evenli": [108, 109, 211, 790], "cpu": [108, 109, 130, 131, 134, 138, 141, 164, 174, 178, 258, 312, 316, 384, 385, 397, 399, 404, 562, 693, 700, 710, 728, 741, 755, 762, 767, 777, 788, 790, 793, 797, 853, 861, 862, 863, 877, 894, 902, 904, 914, 915, 916, 917, 918, 965, 982, 1117], "infinit": [108, 109, 131, 151, 170, 200, 204, 206, 209, 211, 216, 219, 227, 260, 264, 279, 359, 377, 384, 790, 794, 913, 916, 959, 960, 961, 990, 1025], "illus": [108, 109, 790, 794, 913, 916, 1117], "action": [108, 109, 141, 170, 226, 411, 417, 529, 608, 816, 817, 878, 883, 915, 928, 930, 1062, 1087], "undefin": [108, 109, 192, 340, 347, 374, 417, 535, 543, 567, 574, 579, 603, 608, 639, 668, 928], "behavior": [108, 109, 131, 133, 136, 168, 190, 192, 219, 347, 567, 574, 579, 608, 639, 656, 790, 884, 888, 929, 932, 952, 957, 974], "declar": [108, 109, 191, 192, 204, 209, 323, 339, 354, 363, 368, 370, 376, 377, 380, 383, 384, 387, 390, 391, 392, 396, 398, 400, 405, 406, 411, 531, 541, 601, 608, 617, 618, 628, 639, 648, 664, 666, 686, 707, 709, 710, 863, 883, 887, 889, 890, 916, 1085, 1101], "promis": [108, 109, 133, 235, 236, 238, 247, 282, 334, 392, 450, 518, 530, 539, 608, 654, 656, 657, 660, 661, 698, 699, 709, 710, 928, 980, 1112], "caller": [108, 109, 133, 209, 334, 336, 372, 378, 402, 404, 541, 608, 620, 637, 686, 688, 693, 696, 749, 760, 900, 904, 955, 1034], "uniniti": [108, 109, 395, 521, 528, 530, 531, 532, 535, 608, 712], "guarante": [108, 109, 131, 169, 200, 219, 386, 431, 608, 721, 728, 862, 863, 916, 917, 925, 952], "contigu": [108, 109, 399, 562, 579, 608, 743, 893, 1079], "vec": [108, 109, 528, 530, 537, 544, 545, 546, 547, 548, 608], "ss2023": 110, "firstnam": [111, 164, 190, 203, 211, 213, 216, 219, 223, 226, 229, 231, 232, 241, 244, 251, 265, 271, 287, 292, 428, 429, 457, 463, 473, 474, 482, 541, 587, 613, 617, 619, 621, 638, 784, 785, 821, 822, 824, 826, 829, 955, 968, 969, 971, 972, 973, 975, 976, 984, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1066, 1075, 1076, 1077, 1079, 1080, 1081, 1082], "lastnam": [111, 164, 193, 203, 209, 211, 213, 216, 219, 223, 226, 229, 231, 232, 244, 251, 265, 271, 287, 292, 428, 429, 457, 463, 473, 474, 482, 541, 587, 611, 613, 617, 620, 623, 638, 710, 784, 785, 821, 822, 824, 826, 829, 955, 968, 969, 971, 972, 973, 975, 976, 984, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1066, 1075, 1076, 1077, 1079, 1080, 1081, 1082], "bouncem": [111, 481, 482, 784, 785], "procf": [111, 171, 173, 247, 710, 795, 853, 894, 911, 1116, 1123], "umask": [111, 237, 246, 247, 267, 268, 301, 306, 710, 787, 812, 836, 853, 887, 899], "diff": [111, 187, 206, 528, 530, 974, 1118], "raspi": [111, 127, 261, 301, 307, 710, 734, 757, 758, 759, 761, 766, 772, 775, 778, 853, 855, 856, 857, 858, 861, 862, 863, 945, 946], "spirit": [111, 362], "readm": [111, 115, 150, 256, 258, 861, 862], "modular": [111, 163, 168, 170, 198, 217, 249, 303, 304, 334, 411, 931, 958], "plc": 111, "sallok": 111, "constantsensor_nopoli": [111, 475, 485, 526, 710], "randomsensor_nopoli": [111, 475, 526, 710], "ece21": 111, "labexam": 111, "hysteresis_nopoli": [111, 469, 475, 526, 710], "upload": [111, 137, 817, 1010, 1086], "j": [111, 128, 136, 142, 179, 194, 196, 206, 211, 213, 216, 219, 223, 226, 229, 241, 244, 251, 265, 271, 348, 351, 368, 392, 399, 448, 541, 630, 641, 689, 767, 783, 939, 943, 959, 1071, 1077], "bz2": [111, 132, 404, 757, 779, 782, 952], "influenc": [111, 932, 1112], "felber": 111, "vscode": [111, 161, 307, 321, 839], "folder": [111, 137], "comprehend": [111, 217, 347, 353, 928], "workspacefold": 111, "suppli": [111, 133, 171, 482, 487, 532, 716, 757, 773, 792, 854, 858, 861, 863, 878, 887, 1016, 1064], "cpprefer": [111, 566, 567, 568, 569, 570, 572, 573, 574, 575, 578, 587, 606], "averagingsensor_nopoli": [111, 475, 526, 710], "toolcas": [111, 256, 258, 643], "mocksensor_nopoli": [111, 469, 475, 476, 479, 526, 710], "specifi": [111, 131, 148, 219, 231, 265, 342, 410, 419, 469, 473, 478, 485, 532, 612, 626, 641, 665, 676, 757, 817, 874, 887, 891, 917, 929, 982, 997, 1005, 1009, 1026, 1045, 1047, 1079, 1081, 1087], "hint": [111, 146, 219, 231, 260, 279, 325, 428, 487, 497, 501, 613, 784, 785, 797, 866, 915], "target_link_librari": [111, 159, 414, 416, 417, 418, 419, 423, 470, 505, 508, 514, 520, 523, 927, 932, 933, 1098, 1101, 1103], "inter": [111, 131, 149, 155, 916, 1116, 1123, 1126, 1128], "likewis": [111, 206, 515, 546, 783, 802, 873, 889, 939, 1060, 1101], "ledstripedisplay_nopoli": [111, 475, 526, 710], "checkout": [113, 123, 134, 146, 160, 730, 757, 758, 1124], "dir": [113, 164, 183, 191, 204, 213, 216, 223, 241, 244, 264, 265, 286, 294, 375, 410, 411, 417, 422, 802, 932, 933, 945, 968, 1085, 1087, 1094], "wo": [113, 139, 149, 150, 158, 164, 166, 319, 1109, 1110, 1128], "sinc": [113, 142, 148, 193, 199, 230, 297, 398, 401, 530, 538, 539, 569, 582, 625, 626, 654, 675, 680, 686, 701, 708, 757, 861, 874, 881, 887, 890, 902, 917, 924, 985, 1113], "libgpiod": [113, 114, 128, 258, 287, 289], "jf": [113, 124, 138, 175, 176, 234, 251, 301, 306, 320, 450, 464, 732, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1117, 1122], "aon": 113, "client": [113, 136, 138, 149, 194, 198, 226, 240, 408, 436, 437, 450, 689, 690, 857, 870, 872, 880, 925, 1070, 1087], "biz": 113, "svn": [113, 127, 147, 193, 319, 320], "recommend": [113, 142, 163, 171, 183, 216, 398, 551, 582, 757, 817, 862, 1010, 1067, 1075], "lokalen": 113, "fetch": [113, 132, 146, 757, 900, 928], "myremot": 113, "orig": [113, 134, 181], "stia": 113, "improv": [114, 398, 401, 413, 669, 684, 708, 950], "stack": [114, 152, 153, 154, 161, 175, 176, 194, 200, 203, 206, 216, 219, 226, 229, 244, 251, 261, 265, 392, 398, 448, 532, 563, 683, 790, 794, 862, 887, 899, 1122], "hang": [114, 174, 528, 760, 783], "seo": [114, 769], "blog": [114, 127, 131, 134, 141, 146, 688], "i2": [114, 116, 121, 226, 261, 710], "audio": [114, 119, 133, 138, 710, 1116], "kontron": [114, 123, 710], "smarc": [114, 123, 710], "pointless": [114, 244, 258, 265, 390, 537], "asyncio": [114, 163, 167, 217, 258, 654, 1055], "proper": [115, 131, 159, 384, 732, 757, 889, 974], "manifest": [115, 943, 1095], "cfg": [115, 123], "author_email": 115, "classifi": [115, 1010, 1057], "tox": 115, "ini": [115, 136, 150, 309, 312, 1092], "travi": 115, "yml": 115, "upgrad": [115, 119, 120, 150, 710, 1087, 1094], "zip": [115, 123, 127, 191, 211, 217, 231, 244, 817, 823, 839], "zipfil": [115, 191], "99": [115, 141, 150, 164, 174, 181, 187, 190, 196, 203, 206, 211, 213, 216, 219, 223, 226, 229, 232, 241, 244, 248, 251, 261, 265, 271, 296, 301, 306, 402, 918, 994, 1029, 1059], "999": [115, 203, 206, 219, 226, 229, 244, 251, 261, 265], "whl": [115, 127, 1010, 1087], "uninstal": [115, 416, 1087, 1092], "pypa": 115, "sampleproject": 115, "devicetre": [116, 862], "connect": [116, 131, 138, 151, 171, 183, 204, 247, 298, 306, 307, 382, 700, 788, 850, 854, 855, 862, 863, 872, 877, 883, 897, 1067, 1069, 1074, 1087, 1115, 1127, 1129], "signal": [116, 127, 128, 156, 258, 319, 402, 700, 710, 728, 749, 794, 853, 854, 862, 894, 899, 907, 915, 916, 921, 925, 1118, 1125, 1126, 1129], "audio_mck": 116, "i2s0_ck": 116, "i2s0_lrck": 116, "i2s0_sdout": 116, "alsa": [116, 134], "tlv320dac3203irg": 116, "tlv320dac3203": 116, "drive": [116, 249, 388, 476, 862, 883, 1062], "suggest": [116, 130, 131, 133, 135, 137, 138, 146, 155, 163, 170, 171, 172, 173, 217, 236, 238, 256, 258, 362, 979, 1007, 1092], "tlv320aic32x4": 116, "compat": [116, 136, 152, 255, 537, 627, 643, 708, 713, 732, 934, 980, 1003, 1071, 1087, 1088], "tlv320aic31xxsw": 116, "tlv320aic31xx": 116, "wget": [117, 136, 138, 142, 261, 943, 945], "cdimag": 117, "amd64": [117, 183, 298, 342], "iso": [117, 191, 209, 210, 226, 229, 249, 271, 322, 410, 527, 543, 781], "netinst": 117, "img": [117, 152, 154, 397, 757, 861], "qcow2": 117, "virtualdebian": 117, "30g": [117, 138], "kvm": [117, 134], "hda": 117, "cdrom": 117, "2048": [117, 141, 206], "nic": 117, "sic": [117, 142], "box": [117, 121, 163, 854, 861, 979], "order": [118, 124, 130, 136, 137, 141, 142, 151, 163, 164, 167, 169, 200, 206, 211, 217, 221, 223, 226, 256, 273, 327, 353, 364, 386, 398, 413, 428, 447, 501, 504, 511, 513, 576, 622, 708, 712, 728, 741, 757, 846, 854, 861, 863, 879, 918, 943, 959, 979, 1027, 1037, 1114], "deliveri": [118, 122, 131, 927, 930], "outcom": [119, 167, 172, 258, 757, 816, 817, 939, 1011], "dirti": [119, 120, 133, 147, 368, 433, 710], "forget": [119, 124, 131, 132, 133, 207, 333, 336, 381, 410, 1067, 1073, 1093, 1112], "situat": [119, 131, 133, 142, 163, 190, 477, 478, 482, 497, 560, 637, 751, 757, 808, 810, 854, 870, 889, 917, 934, 943, 946, 947, 995, 1107, 1112], "graphic": [119, 403, 792, 793, 862], "plug": [119, 132, 134, 432], "monitor": [119, 134, 148], "4k": [119, 133, 915, 924], "dual": [119, 121], "gnome": [119, 131, 136, 203, 219, 226, 229, 244, 251, 261, 265, 404, 757, 792, 848, 916], "applianc": [119, 133, 404], "automat": [119, 133, 135, 137, 138, 146, 181, 183, 187, 193, 200, 206, 216, 219, 223, 256, 258, 338, 347, 374, 391, 394, 398, 410, 439, 440, 529, 532, 597, 601, 639, 668, 713, 728, 757, 861, 863, 890, 952, 1005, 1012, 1017], "x11": 119, "wayland": [119, 136], "benchmark": 119, "glxgear": 119, "su": [119, 945], "pect": 119, "cluster_project_xxx": [120, 710], "project_xxx_hardware_bringup": [120, 710], "bringup": [120, 121, 710], "project_xxx_dirty_upgrad": [120, 710], "project_xxx_wait_hardwar": [120, 710], "project_xxx_debian_config": [120, 710], "project_xxx_debian_kernel_packag": [120, 710], "finish": [120, 163, 182, 693, 710, 767, 966], "project_xxx_audio_chip": [120, 710], "chip": [120, 149, 203, 710, 854, 858, 861, 879, 881, 915, 1012], "project_xxx_yocto_kernel": [120, 710], "bsp": [120, 710], "shot": [121, 138, 362, 626, 700, 708], "dac": 121, "massacr": [121, 150, 209, 301, 362, 368, 394, 418, 626, 962], "distro": [121, 416, 986, 1101], "bootload": [121, 130, 141, 404, 793, 861, 863], "oldconfig": [121, 132, 730, 737, 757, 758], "qemu": [121, 203, 219, 226, 229, 244, 251, 261, 265], "grub": [121, 141], "stabl": [121, 138, 142, 408, 735, 757, 796, 915, 947, 949, 1010, 1088], "yoctoproject": 123, "v5": [123, 134], "bsp_smarc": 123, "sxal4_smarc": 123, "sxal_r1": 123, "0_combin": 123, "sxal4_5": 123, "sxal4": 123, "inc": [123, 134, 255, 385, 422, 423, 695, 902, 965], "filesextrapaths_prepend": 123, "thisdir": 123, "linux_vers": 123, "linux_version_extens": 123, "linux_kernel_typ": 123, "kbranch": 123, "kmeta": 123, "lic_files_chksum": 123, "md5": 123, "bbea815ee2795b2f4230826c0c6b8814": 123, "srcrev_machine_pn": 123, "3604bc07c035939266d78d65084c6cd54ffc6d56": 123, "srcrev_meta_pn": 123, "8d42b14fe517ef036dc4e7b290f16d142f4f1d39": 123, "src_uri": 123, "bareclon": 123, "cach": [123, 127, 132, 258, 261, 384, 398, 403, 404, 562, 579, 839, 916, 1087, 1094, 1110], "destsuffix": 123, "scc": 123, "pv": 123, "srcpv": 123, "include_patch": 123, "patch": [123, 142, 143, 917, 945, 1107], "compatible_machin": 123, "therebi": [124, 163, 634, 848, 928, 974, 1012], "made": [124, 125, 130, 131, 132, 134, 137, 138, 142, 146, 183, 198, 223, 247, 301, 333, 371, 372, 374, 377, 408, 428, 432, 448, 454, 654, 741, 757, 788, 789, 794, 854, 861, 887, 893, 898, 916, 934, 959, 966, 976, 1012, 1060], "special": [124, 127, 131, 178, 211, 213, 219, 223, 247, 323, 375, 436, 447, 450, 453, 454, 497, 521, 526, 639, 641, 695, 706, 783, 794, 799, 855, 877, 883, 905, 929, 948, 953, 972, 974, 982, 991, 993, 997, 1057, 1062, 1097, 1117, 1118], "node": [124, 136, 141, 151, 382, 402, 419, 582, 713, 716, 720, 726, 735, 947, 1074, 1092], "simplifi": 124, "fine": [124, 133, 138, 167, 413, 414, 529, 641, 643, 737, 767, 874, 878, 946, 963, 975, 984, 990, 1005, 1071], "grain": [124, 138, 410, 413, 767, 975, 990], "surround": [124, 627, 668, 680], "cut": [124, 152, 170, 183, 223, 237, 246, 267, 268, 347, 382, 710, 747, 787, 801, 847, 850, 853, 863], "linewis": 124, "wherev": [124, 326], "obs studio": 125, "video edit": 125, "screen record": 125, "These": [125, 133, 135, 136, 200, 206, 216, 219, 413, 426, 730, 757, 861, 933], "offici": [125, 167, 168, 171, 172, 173, 178, 526, 945, 1097], "jonathan": [125, 302, 303, 1107], "himself": [125, 863], "paus": [125, 133, 915, 928], "bit": [125, 130, 131, 133, 136, 138, 141, 142, 163, 164, 167, 174, 193, 204, 206, 207, 213, 237, 240, 246, 247, 250, 253, 267, 268, 296, 301, 306, 312, 324, 330, 336, 342, 347, 354, 363, 370, 371, 376, 380, 383, 386, 387, 396, 400, 405, 406, 470, 478, 544, 628, 663, 666, 676, 686, 707, 709, 710, 753, 757, 776, 787, 788, 812, 814, 816, 853, 854, 855, 857, 862, 864, 887, 915, 932, 941, 951, 991, 1055, 1071, 1107, 1112], "meanwhil": 125, "freez": [125, 1087, 1095], "frame": [125, 136, 148, 170, 200, 206, 216, 219, 249, 255, 381, 394, 398, 448, 639, 855, 856, 1076], "photo": 125, "length": [125, 187, 190, 200, 206, 216, 219, 248, 255, 265, 410, 477, 533, 545, 606, 728, 741, 753, 855, 857, 883, 893, 925, 1060, 1071, 1075, 1082], "grab": [125, 854, 862], "neil": 126, "patel": 126, "insight": [126, 130, 413, 943, 1086], "consol": [126, 183, 792, 795, 850, 1034, 1118], "crawlabl": 126, "dn": [126, 135, 138, 203, 219, 226, 229, 244, 251, 261, 265, 1129], "domain": [126, 127, 137, 138, 143, 394, 408, 420, 916, 1054, 1057, 1127, 1129], "ipc": [126, 127, 128, 131, 318, 320, 708, 710, 853, 894, 922, 1127], "queue": [126, 127, 132, 141, 142, 149, 155, 175, 176, 178, 207, 235, 236, 238, 247, 259, 260, 278, 279, 282, 450, 699, 709, 710, 751, 759, 777, 790, 794, 853, 894, 904, 908, 1122, 1126, 1127, 1128], "pydbu": 127, "openh": [127, 128, 149, 190], "traceback": [127, 153, 200, 206, 216, 219, 229, 249, 251, 265, 952, 953, 954, 959, 967, 968, 974, 975, 996, 997, 1001, 1003, 1006, 1007, 1063, 1071, 1079, 1080, 1093], "recent": [127, 130, 133, 138, 153, 161, 200, 206, 216, 219, 229, 249, 251, 265, 322, 757, 836, 952, 953, 954, 959, 967, 968, 974, 975, 996, 997, 1001, 1003, 1006, 1007, 1063, 1071, 1079, 1080, 1093], "oh_test": 127, "easysuit": 127, "oh_dbus_easysuit": 127, "easysuite_error": 127, "error_suit": 127, "dbusheatingerror": 127, "modulenotfounderror": [127, 244, 249, 954], "research": [127, 130, 131, 244, 1061], "pygobject": 127, "714": [127, 206], "kb": [127, 133, 1094], "venv": [127, 164, 190, 200, 206, 216, 217, 219, 231, 261, 308, 309, 839, 1009, 1042, 1055, 1073, 1079, 1080, 1086, 1092, 1094, 1095], "standalon": [127, 386, 639, 928, 1099], "ss_9wmug": 127, "__env_pip__": 127, "ignor": [127, 148, 160, 219, 265, 312, 348, 368, 398, 420, 428, 626, 641, 654, 676, 715, 799, 862, 887, 929, 952, 1087], "9lrqmi4l": 127, "overlai": [127, 757, 861, 862], "locat": [127, 128, 132, 137, 142, 163, 200, 206, 216, 219, 223, 273, 301, 319, 371, 384, 392, 398, 426, 448, 541, 561, 637, 685, 732, 757, 861, 862, 863, 883, 901, 925, 932, 952, 1059, 1079, 1114], "pycairo": 127, "cwd": [127, 478, 708, 783, 794, 820, 839, 841, 845, 933], "821": [127, 206], "py2": 127, "344": [127, 206, 219, 251, 265], "517": [127, 206, 251], "tmpabab356k_in_process": 127, "build_wheel": 127, "tmpt1yod7mc": 127, "o4u45fjc": 127, "pycairo_33865a19ad6b4a719885f07926efe16d": 127, "bdist_wheel": [127, 1010], "build_pi": 127, "x86_64": [127, 134, 136, 183, 190, 298, 321, 347, 481, 546, 730, 735, 934, 943], "cairo": 127, "pyi": 127, "build_ext": 127, "pkg": 127, "perhap": [127, 223, 726, 1066], "pkg_config_path": 127, "gobject": 127, "introspect": [127, 915], "cp39": 127, "linux_x86_64": 127, "lib64": [127, 159, 164, 190, 200, 206, 216, 219, 223, 404, 414, 416, 421, 931, 934, 948, 955, 1079, 1080, 1087, 1101], "_vendor": 127, "pep517": 127, "in_process": 127, "_in_process": 127, "tmpf2wjv23h": 127, "4rtfumdz": 127, "pygobject_beef4432e2454eb0b7facc57fadf42b8": 127, "pygtkcompat": 127, "generictreemodel": 127, "_signalhelp": 127, "_propertyhelp": 127, "_ossighelp": 127, "_option": 127, "_gtktemplat": 127, "_error": [127, 457], "_constant": 127, "overrid": [127, 191, 204, 219, 234, 427, 433, 435, 440, 455, 457, 458, 459, 461, 462, 464, 482, 601, 665, 666, 709, 710, 952, 967, 1085, 1104], "keysym": 127, "pango": 127, "gio": 127, "gdkpixbuf": 127, "gdk": 127, "glib": 127, "gimarshallingtest": 127, "tmp56g_ixbz": 127, "bvay4iv4": 127, "pygobject_6777f13e15934fb2b13139399b143557": 127, "todo": [127, 172, 207, 235, 236, 314, 315, 480, 626, 711, 1065], "summari": [127, 168, 433, 536, 685, 1092], "explan": [127, 130, 133, 159, 163, 170, 193, 224, 301, 402, 423, 504, 757, 788, 854, 862, 889, 919, 924, 1058, 1061, 1065, 1094], "pseudo": [127, 133, 151], "gmunden": [127, 139, 319], "beliv": 127, "style": [127, 131, 136, 200, 206, 209, 216, 219, 258, 394, 409, 410, 504, 529, 530, 535, 569, 603, 606, 617, 626, 631, 662, 678, 703, 725, 774, 897, 983, 1024, 1049, 1060], "c1": [127, 141, 431, 545, 630], "misc": [127, 128, 150, 151, 504, 726, 770, 1111], "w3school": 127, "howto": [127, 128, 728], "howto_css_image_transpar": 127, "asp": 127, "titelseit": 127, "mitt": 127, "howto_js_read_mor": 127, "subdir": [127, 708, 952], "gegen": [127, 1107], "clutter": [127, 160], "404": [127, 137, 206, 213, 251, 265], "prio": [127, 169, 917, 918, 924], "beagleboard": [127, 132, 143], "repair": [127, 143, 203], "nand": [127, 143], "40w": [127, 143], "fedora": [127, 136, 142, 143, 146, 160, 247, 497, 710, 714, 717, 719, 722, 724, 727, 734, 736, 737, 738, 742, 748, 754, 758, 761, 766, 772, 775, 778, 813, 817, 853, 856, 933, 934, 941, 942, 943, 946, 1074, 1099], "suck": [127, 128, 143], "disk": [127, 130, 131, 134, 138, 143, 397, 793, 794, 814, 843, 878, 879, 948, 1005, 1107], "contact": [127, 1114], "ssl": [127, 138, 1087], "certif": [127, 138, 141, 188, 217, 1085, 1087], "070": [127, 626], "fortgeschritten": [127, 320, 1109], "700": [127, 206, 579, 687, 870], "lf": [127, 190, 464, 1005], "descr": [127, 211], "050": [127, 626, 927, 928], "080": [127, 606, 626], "020": [127, 206, 247, 606, 626, 923, 924, 927, 928], "060": [127, 128, 167, 309, 626], "_hidden": 127, "010": [127, 626, 816, 920, 921, 923, 924, 927, 928], "190": [127, 164, 181, 190, 203, 206, 211, 213, 216, 219, 223, 226, 229, 232, 241, 244, 251, 261, 265, 271], "propos": [127, 394, 473], "030": [127, 626, 636, 686, 923, 924, 927, 928], "040": [127, 626, 923, 924, 927, 928], "central": [128, 160, 193, 322, 366, 426, 708, 948, 993, 1005, 1115], "rstjinja": 128, "105": [128, 150, 164, 174, 179, 181, 187, 200, 203, 206, 211, 213, 219, 223, 226, 229, 232, 241, 244, 251, 261, 265, 271, 296, 301, 306, 919], "110": [128, 135, 150, 164, 174, 181, 187, 196, 200, 203, 206, 211, 213, 219, 223, 226, 229, 241, 244, 248, 251, 261, 265, 271, 296, 466, 467, 626, 816, 923, 924], "cxx_class_templ": [128, 526, 710], "cxx_dynamic_memori": [128, 526, 710], "cxx_global_initi": [128, 526, 710], "cxx_inheritance_virtu": [128, 526, 710], "cxx_ownership_raii": [128, 526, 710], "cxx_stl_container_intro": [128, 526, 710], "cxx_templates_vs_interfac": [128, 526, 710], "maj": [128, 714], "min": [128, 244, 714, 1060], "cdev": [128, 713, 714, 716, 720, 721, 726], "fop": [128, 714, 721], "devtmpf": [128, 713, 714, 759], "dynam": [128, 158, 166, 167, 200, 206, 216, 217, 219, 262, 275, 319, 383, 387, 396, 400, 405, 406, 416, 447, 480, 515, 524, 526, 533, 598, 600, 603, 604, 623, 628, 637, 666, 690, 707, 709, 710, 714, 719, 724, 727, 729, 734, 738, 748, 752, 754, 759, 761, 766, 772, 775, 778, 783, 794, 853, 902, 904, 913, 931, 932, 971, 985, 1006, 1055, 1113, 1117], "auto": [128, 140, 148, 152, 158, 234, 428, 433, 457, 458, 462, 463, 466, 467, 468, 521, 529, 538, 539, 562, 584, 585, 587, 628, 629, 636, 643, 646, 648, 651, 654, 655, 656, 658, 659, 660, 661, 662, 666, 668, 669, 670, 671, 676, 678, 680, 685, 686, 687, 689, 700, 704, 705, 706, 707, 708, 709, 710, 757, 928, 1112, 1123, 1128], "sysprog_ev": 128, "sysprog_ipc": 128, "sysprog_sign": 128, "unittest_gtest_bas": [128, 710, 1097], "unittest_gtest_fixtur": [128, 710, 1097], "brows": [128, 130, 146, 796, 862], "blender": 128, "corda": 128, "figclass": 128, "homebrain": [128, 249, 261, 839, 840], "literalinclud": 128, "within": [128, 133, 209, 219, 265, 319, 469, 476, 481, 485, 530, 601, 664, 721, 854, 966, 983, 995, 1082], "045": [128, 247], "tex": 128, "055": 128, "056": 128, "910": [128, 206, 839], "glt": 128, "virtmem": 128, "tester": [128, 1092, 1118], "fart": 128, "ungern": 128, "lost": [128, 138, 203, 209, 395, 504, 626, 685, 870, 904, 907, 924, 966, 1092, 1093, 1099], "he": [128, 132, 146, 154, 163, 167, 170, 183, 188, 191, 193, 214, 217, 240, 259, 260, 264, 278, 279, 639, 641, 676, 679, 872, 905, 918, 929, 971, 999, 1055, 1084], "subscrib": [128, 207, 219], "friend": [130, 131, 178, 199, 235, 236, 238, 247, 258, 282, 404, 467, 544, 699, 700, 709, 710, 728, 749, 854, 1101], "alia": [130, 135, 183, 209, 380, 383, 387, 396, 400, 405, 406, 414, 628, 666, 707, 709, 710, 817, 818, 945], "rm": [130, 132, 136, 137, 171, 173, 301, 306, 864, 874, 1094], "rf": [130, 132, 817, 827, 1094], "creativ": [130, 208, 1064], "variat": [130, 688, 762, 799], "thereof": [130, 247, 255, 431, 548, 971], "happili": [130, 131, 209, 394, 543], "stage3": 130, "decad": [130, 138, 155, 757, 861, 863, 874, 953, 1115], "busybox": [130, 131], "initramf": [130, 782], "resid": [130, 133], "flash": [130, 133, 138, 404, 795, 854, 915], "correct": [130, 138, 142, 170, 190, 192, 203, 301, 347, 384, 388, 389, 396, 399, 400, 405, 406, 408, 436, 504, 536, 601, 603, 604, 636, 681, 684, 692, 710, 800, 804, 805, 829, 861, 862, 863, 916, 958, 966, 1060, 1087], "eras": [130, 463, 521, 582, 687, 704, 814], "hit": [130, 132, 133, 152, 155, 193, 708, 817, 846, 849, 1087], "sole": 130, "liter": [130, 153, 169, 174, 181, 191, 199, 200, 204, 211, 216, 219, 223, 226, 235, 236, 244, 251, 265, 282, 293, 297, 301, 328, 336, 343, 392, 447, 462, 477, 626, 639, 757, 929, 986, 999, 1003, 1085], "told": [130, 133, 414, 453, 854], "reboot": [130, 132, 149, 757, 818, 861, 862, 863], "fatal": [130, 158, 412, 422, 757, 1100], "saw": [130, 133, 163, 192, 312, 349, 530, 887, 889], "termin": [130, 132, 136, 150, 161, 183, 229, 231, 247, 250, 253, 256, 258, 260, 279, 323, 326, 330, 333, 336, 343, 355, 361, 384, 404, 410, 422, 426, 452, 453, 481, 504, 533, 654, 660, 687, 693, 773, 792, 795, 799, 800, 801, 817, 839, 849, 850, 883, 901, 905, 910, 915, 927, 928, 929, 984, 986, 990, 1005, 1017, 1034, 1062, 1071, 1074, 1123], "115200": 130, "8n1": 130, "remaind": [130, 131, 134, 136, 159, 163, 247, 735, 757, 854, 862, 933], "recov": [130, 150], "fauxpa": 130, "annot": [130, 191, 240, 403, 527, 1055], "beagl": 130, "omap": 130, "rom": 130, "stage": [130, 146, 192, 1062], "processor": [130, 131, 190, 191, 204, 342, 386, 579, 690, 757, 762, 899, 916, 931, 1085], "sram": 130, "dram": 130, "latter": [130, 133, 915, 955, 995, 1062], "abil": [130, 626], "press": [130, 737, 774, 817, 854], "wrote": [130, 133, 309, 1112], "board": [130, 132, 757, 861], "ones": [130, 146, 153, 155, 219, 257, 265, 330, 398, 862, 863, 988, 1075], "revis": [130, 134, 137, 234, 527, 625, 1112], "slightli": [130, 142, 163, 192, 209, 210, 504, 983], "season": 130, "c4": [130, 141], "valuabl": [130, 402, 784, 785, 947, 949, 955], "c3": [130, 134, 141], "angstrom": 130, "mlo": 130, "ift": 130, "fdisk": [130, 1107], "obvoiusli": 130, "fat32": [130, 757], "fat16": 130, "partit": [130, 131, 132, 219, 265, 757], "mount": [130, 132, 247, 307, 713, 757, 788, 897, 924, 925, 934, 943, 945], "sector": [130, 203, 1012], "intend": [130, 136, 137, 138, 148, 183, 200, 206, 216, 219, 413, 730, 862, 889, 890, 1010], "slot": [130, 893, 974], "partli": [130, 132, 390], "meaning": [130, 138, 739], "hold": [130, 132, 151, 167, 169, 170, 190, 217, 324, 336, 356, 428, 558, 613, 620, 671, 676, 690, 698, 721, 755, 759, 760, 854, 861, 917, 955, 968, 990, 1038, 1060], "scr": 130, "omap3": 130, "mmc1": 130, "arch": [130, 134, 737, 757, 758, 861], "mach": [130, 192, 197, 213], "omap2": 130, "omap3beagl": 130, "Near": 130, "notic": [130, 131, 133, 146, 200, 206, 216, 219, 394, 413, 414, 472, 706, 797, 901, 903, 963, 1080], "offset": [130, 728, 886, 948], "128k": 130, "0x80000": 130, "byte": [130, 133, 146, 148, 150, 200, 206, 216, 219, 226, 229, 244, 265, 271, 286, 301, 324, 332, 342, 343, 374, 377, 386, 389, 395, 399, 433, 528, 533, 536, 541, 548, 561, 685, 771, 788, 794, 817, 848, 855, 861, 878, 879, 880, 883, 885, 887, 888, 889, 890, 913, 916, 921, 924, 928, 980, 986, 991, 1005, 1063, 1071], "reli": [130, 163, 675, 767, 986], "ecc": [130, 134], "nandecc": 130, "hw": 130, "80000": 130, "0x0": [130, 861], "0x60000": 130, "unlik": [130, 183, 234, 690, 697, 854, 994, 1076, 1117], "intermedi": [130, 151, 431, 931, 980], "nevertheless": [130, 131, 138, 250, 253, 757], "0x20000": 130, "fatload": 130, "80200000": 130, "20392": 130, "131072": [130, 715], "40000": 130, "0x40000": 130, "60000": 130, "incarn": [130, 138, 368, 674], "choic": [130, 131, 132, 155, 191, 204, 223, 398, 408, 418, 478, 531, 600, 685, 861, 915, 943, 1074, 1085], "finger": [130, 141, 398, 796, 854], "sw": [130, 503], "0x1e0000": 130, "1e0000": 130, "0x240000": 130, "275928": 130, "1966080": 130, "prompt": [130, 138, 141, 151, 183, 194, 222, 231, 789, 817, 819, 862, 870, 980, 981, 1017, 1021, 1034, 1040, 1094], "280000": 130, "400000": [130, 862, 1060], "month": [131, 193, 203, 251, 255, 343], "met": [131, 390, 863], "microcontrol": [131, 359, 854, 862, 915], "clue": 131, "minim": [131, 133, 142, 151, 392, 398, 551, 839, 943, 954], "vxwork": 131, "ce": [131, 141, 945], "quit": [131, 133, 136, 258, 369, 384, 386, 604, 619, 758, 817, 818, 849, 854, 862, 905, 928, 943], "blob": [131, 247, 258, 321, 504, 757], "presenc": [131, 133, 420, 1117], "disabl": [131, 134, 136, 142, 200, 206, 216, 219, 369, 749, 755, 760, 762, 917, 1087, 1107], "probabl": [131, 137, 163, 223, 253, 293, 419, 424, 529, 634, 757, 769, 817, 863, 915, 991, 1005, 1071, 1074], "term": [131, 133, 155, 183, 223, 256, 258, 298, 398, 541, 544, 608, 686, 689, 790, 863, 882, 916, 928, 1060, 1099], "sooner": [131, 146, 394, 760], "chose": [131, 142, 209, 620, 841, 874, 943], "opinion": [131, 142, 163, 217, 708, 796, 963], "stori": [131, 132, 133, 137, 138, 142, 159, 160, 192, 255, 379, 512, 530, 544, 732, 735, 758, 796, 857, 874], "unless": [131, 213, 219, 223, 265, 598, 631, 783, 839, 900, 986, 1005, 1079], "hire": 131, "cheap": [131, 133, 411, 541, 634, 639, 675, 676, 762, 1112], "misl": 131, "posix": [131, 133, 156, 692, 699, 701, 709, 710, 794, 853, 883, 894, 900, 904, 906, 914, 922, 1005, 1126, 1127], "tell": [131, 132, 133, 136, 137, 138, 146, 160, 207, 391, 562, 783, 863, 931], "pitfal": [131, 215, 235, 236, 238, 282, 301, 562, 641, 666, 667, 668, 686, 709, 710, 854, 1112], "seen": [131, 133, 138, 151, 164, 192, 334, 353, 391, 426, 436, 728, 753, 782, 902, 1062, 1069, 1104], "didn": [131, 132, 133, 142, 163, 167, 183, 193, 217, 757, 836, 888, 1005, 1007, 1055, 1059], "rtoss": 131, "commonli": [131, 200, 223, 250, 253, 440, 701, 708, 743, 777, 819, 883, 931, 1083], "tear": [131, 236, 433, 477, 478, 480, 481, 546, 685, 726, 931, 1099], "notif": [131, 136, 155, 698, 858, 929], "dread": 131, "segment": [131, 133, 366, 469, 541, 664, 684, 915, 925], "fault": [131, 133, 314, 315, 366, 541, 684, 915], "arriv": [131, 749, 774, 913, 928], "handler": [131, 200, 206, 216, 219, 258, 265, 402, 737, 739, 767, 899, 915, 927, 930], "pai": [131, 255, 397, 420, 788], "attent": [131, 187, 203, 211, 332, 353, 355, 384, 403, 413, 563, 568, 637, 668, 671, 749, 917, 952, 1081, 1104], "safe": [131, 200, 206, 207, 216, 219, 229, 394, 634, 676, 678, 686, 700, 870, 875, 899, 902, 907, 930], "pthread_": 131, "defer": [131, 408, 755, 777], "trick": [131, 188, 198, 201, 204, 228, 240, 264, 270, 369, 1055], "asynchron": [131, 200, 206, 216, 219, 287, 878, 895, 898, 928, 929], "sigwait": [131, 928], "sigwaitinfo": 131, "sigtimedwait": 131, "caught": [131, 200, 206, 216, 219, 401, 551], "synchron": [131, 203, 209, 219, 226, 229, 244, 251, 259, 260, 261, 265, 278, 279, 693, 699, 709, 710, 848, 853, 878, 894, 900, 901, 908, 914, 915, 925, 927, 930, 1117], "dedic": [131, 132, 163, 168, 217, 247, 250, 253, 394, 410, 725, 795, 796, 861, 862, 863, 897, 899, 933, 951, 962, 995, 1115], "signalfd": [131, 883, 921, 1126, 1127], "Its": [131, 133, 136, 477, 846, 916], "emb": 131, "among": [131, 155, 163, 200, 206, 216, 219, 391, 685, 802, 861, 883, 889, 913, 929, 979, 1066, 1067, 1092, 1115], "epol": [131, 897, 921, 925, 1127, 1129], "err": [131, 170, 190, 255, 481, 582, 721, 751, 753, 788, 855, 857, 861, 974, 1080], "naiv": [131, 151, 206, 209, 273, 386, 419, 428, 520, 522, 536, 603, 684, 706, 765, 899, 919, 930, 960, 961, 1062, 1070, 1104, 1114], "intra": 131, "oss": 131, "synchronis": [131, 899, 1128], "pthread_mutex_init": [131, 698, 902], "critical_sect": 131, "closest": [131, 634], "pendant": [131, 521, 716], "expir": [131, 767, 881, 913, 915, 929], "sometim": [131, 146, 223, 358, 374, 398, 535, 625, 788, 795, 888, 900, 945, 951, 982, 1092], "api": [131, 138, 155, 178, 192, 219, 312, 316, 710, 713, 720, 728, 735, 739, 751, 853, 894, 906, 914, 917, 925, 1010, 1069, 1088, 1116, 1117], "setitim": 131, "timer_cr": [131, 915], "drawback": [131, 368, 385, 390, 395, 439, 562, 870], "unfortun": [131, 132, 155, 192, 453, 854, 862, 1076], "straightforward": [131, 210, 648, 686, 725, 957, 974, 992, 1060], "nanosleep": [131, 700, 915], "timerfd_cr": [131, 881, 883, 1126, 1127], "conjunct": 131, "emul": [131, 236, 238, 256, 386, 395, 401], "stupid": [131, 133, 190, 206, 209, 211, 343, 368, 374, 392, 398, 408, 634, 689, 774, 836, 878, 959, 1005], "screw": [131, 588], "otherwis": [131, 132, 217, 219, 223, 260, 265, 279, 292, 347, 358, 384, 394, 544, 582, 639, 668, 675, 690, 696, 728, 741, 749, 757, 765, 784, 785, 870, 899, 904, 910, 925, 954, 983, 986, 1003, 1005, 1024, 1035, 1104], "millisecond": [131, 200, 206, 216, 219, 687, 701, 765, 862], "etern": 131, "nowadai": [131, 133, 135, 136, 192, 259, 260, 278, 279, 324, 342, 732, 767, 792, 795, 883, 929, 1071], "imagin": [131, 133, 388, 393, 394, 426, 439, 757, 796, 813, 854, 863, 902, 929], "moder": [131, 138, 198], "tri": [131, 132, 133, 142, 146, 152, 163, 211, 312, 478, 613, 696, 708, 854, 863, 916, 1112], "achiev": [131, 190, 223, 604, 913, 966], "albeit": [131, 448, 674, 910, 991, 1112], "lose": [131, 182, 193, 213, 216, 219, 229, 990], "wealth": 131, "socket": [131, 149, 170, 240, 708, 710, 790, 793, 853, 878, 882, 883, 894, 925, 929, 1087, 1126, 1127, 1129], "arbitrari": [131, 152, 219, 223, 328, 344, 362, 398, 413, 551, 578, 579, 631, 689, 701, 716, 858, 883, 887, 915, 955, 991, 1005, 1033], "uart": [131, 390, 790], "mention": [131, 132, 159, 163, 167, 193, 217, 259, 260, 278, 279, 472, 481, 669, 769, 862, 950, 1055, 1074], "previous": [131, 200, 206, 216, 219, 223, 929, 1112], "regardless": [131, 369, 862], "surpris": [131, 133, 247, 392, 597, 950, 974], "anyon": [131, 518, 728], "alon": [131, 132, 133, 146, 256, 258, 398, 402, 643, 995, 1062, 1117], "advantag": [131, 390, 541], "consid": [131, 133, 163, 167, 191, 200, 206, 216, 217, 219, 223, 247, 265, 362, 389, 390, 398, 450, 604, 817, 861, 916, 971, 979, 1055, 1086, 1087, 1114], "regularli": [131, 395], "buffer": [131, 219, 244, 259, 260, 265, 278, 279, 330, 459, 464, 639, 773, 801, 875, 878, 879, 880, 881, 889, 928, 1005], "ttys0": 131, "stream": [131, 136, 138, 178, 204, 219, 244, 527, 544, 801, 855, 913, 959, 1083, 1085, 1129], "eventfd": [131, 883, 921, 1126, 1127], "complic": [131, 132, 141, 170, 213, 223, 340, 359, 398, 423, 554, 637, 643, 663, 716, 753, 855, 863, 928, 931, 959, 1074, 1114, 1117], "infrastructur": [131, 403, 713, 925], "unregist": [131, 435], "callback": [131, 167, 200, 206, 216, 219, 310, 654, 767, 776, 1074], "comfort": [131, 183, 304, 678, 861, 1083], "excit": 131, "hundr": [131, 133, 138, 241, 244, 883], "panel": 131, "deal": [131, 207, 392, 538, 757, 863, 984, 1057, 1071, 1112, 1117], "touch": [131, 137, 163, 200, 206, 216, 219, 410, 802, 811, 816, 861, 884, 890, 1117], "stai": [131, 155, 167, 198, 928], "harder": [131, 690, 864], "buggi": [131, 536, 664, 676, 915], "examin": [131, 133, 394, 544, 685, 817, 910], "debugg": [131, 200, 206, 216, 217, 219, 431, 1110, 1125], "gdb": [131, 183, 319, 1110], "remain": [131, 132, 142, 151, 164, 211, 219, 265, 488, 489, 501, 531, 579, 585, 616, 622, 627, 689, 697, 739, 870, 918, 929, 931, 1030, 1033, 1034, 1037, 1045, 1047, 1063, 1066, 1101], "spidev": 131, "bluntli": 131, "whether": [131, 151, 219, 223, 244, 255, 265, 333, 397, 487, 533, 566, 708, 753, 862, 1034, 1040, 1087], "deadlin": 131, "howev": [131, 141, 160, 223, 427, 730, 732, 854, 897, 899], "sched_setschedul": [131, 148, 918], "pthread_attr_setschedparam": [131, 918], "runnabl": [131, 755, 916, 917, 918], "prioriti": [131, 148, 219, 749, 755, 757, 759, 794, 916, 917, 925, 1128], "anymor": [131, 137, 142, 155, 192, 209, 410, 414, 543, 637, 639, 648, 672, 685, 686, 690, 792, 861, 904, 915, 917, 948, 986, 988, 1080], "potenti": [131, 411, 541, 648, 696, 874, 954, 966, 1011], "harm": [131, 362, 390, 686, 688, 954], "polici": [131, 136, 148, 410, 426, 600, 604, 735, 916, 917, 1128], "sched_fifo": [131, 917, 918, 1107], "sched_rr": [131, 133, 918, 1107], "round": [131, 198, 203, 213, 223, 239, 244, 425, 432, 433, 435, 437, 446, 447, 460, 475, 526, 710, 918, 1128], "robin": [131, 198, 918, 1128], "manner": [131, 368, 757, 861], "troubl": 131, "trigger": [131, 312, 739, 743, 861, 974, 1067], "certain": [131, 163, 170, 389, 394, 452, 469, 476, 654, 676, 753, 788, 801, 904, 931, 979], "circumst": [131, 916], "deadlock": [131, 504, 696, 697, 749, 762, 902, 916, 917], "inspect": [131, 133, 200, 206, 216, 219, 237, 246, 257, 267, 710, 787, 853, 874], "deploy": [131, 163, 167, 188, 274, 415, 421, 710, 732, 1055], "uclibc": 131, "minut": [131, 137, 138, 163, 167, 170, 207, 863, 1055, 1074], "investig": 131, "spend": [131, 138, 152, 163, 167, 188, 191, 214, 240, 264, 397, 1055], "todai": [132, 183, 191, 207, 240, 257, 273, 310, 336, 1055, 1114, 1117], "browser": [132, 138, 150, 161, 194], "significantli": [132, 928], "decreas": [132, 133, 386, 817, 919], "lifetim": [132, 190, 192, 209, 221, 339, 354, 363, 370, 376, 380, 381, 383, 387, 396, 400, 405, 406, 440, 533, 616, 628, 639, 666, 707, 709, 710, 1065], "week": [132, 147, 388], "forth": [132, 399, 788, 861, 874, 986], "spare": 132, "volum": 132, "undertak": 132, "indirectli": [132, 685], "pocket": 132, "purchas": [132, 223], "corsair": 132, "120": [132, 150, 164, 174, 181, 196, 200, 203, 206, 211, 213, 216, 219, 223, 226, 229, 241, 244, 251, 261, 265, 271, 545, 626, 923, 924], "receiv": [132, 151, 206, 209, 247, 334, 450, 541, 639, 716, 728, 749, 757, 817, 854, 857, 863, 870, 878, 883, 905, 913, 928, 929, 952, 955, 1005, 1036, 1051, 1071], "overhaul": 132, "reserv": [132, 138, 155, 167, 203, 219, 244, 265, 341, 563, 721, 753, 813, 918, 1012], "fresh": 132, "livecd": 132, "ssd": [132, 397, 879], "vanish": 132, "gone": [132, 153, 203, 654, 686, 737, 760, 818, 907], "nowher": [132, 271, 495], "depart": 132, "unusu": 132, "cope": 132, "bet": 132, "themselv": [132, 368, 408, 448], "aggress": 132, "harddisk": 132, "treatment": [132, 223, 817, 948], "proud": 132, "120g": 132, "fresher": 132, "plenti": [132, 134, 402], "4g": [132, 133], "shouldn": [132, 626, 757, 1003], "hibern": 132, "fstab": 132, "room": [132, 138, 167, 428, 579, 751, 863, 1071, 1115], "swapon": 132, "sda1": 132, "swapoff": 132, "overal": 132, "mitig": [132, 751], "temporari": [132, 141, 158, 200, 206, 209, 216, 219, 259, 260, 278, 279, 413, 481, 482, 634, 638, 639, 654, 668, 676, 708, 801, 931, 957, 1038], "perfect": [132, 138, 146, 192, 240, 282, 322, 579, 635, 666, 689, 709, 710, 957, 1010, 1055, 1090, 1112], "portag": [132, 757, 846], "openoffic": 132, "tmpdir": [132, 257, 410, 481, 708, 952, 1050, 1052, 1092], "gcc": [132, 133, 159, 179, 181, 200, 206, 216, 219, 294, 321, 323, 347, 364, 368, 386, 389, 390, 392, 402, 403, 411, 413, 512, 695, 757, 758, 794, 814, 879, 880, 881, 887, 888, 889, 890, 899, 902, 932, 943, 945, 946, 947, 948, 949, 981, 1101, 1107], "500m": 132, "2g": 132, "6g": 132, "throwawai": 132, "1tb": 132, "sdc1": [132, 788], "mnt": [132, 788, 796, 925], "emerg": 132, "umount": 132, "runnung": 132, "logfil": [132, 170, 799, 850], "offend": [132, 134, 136, 146, 453, 915], "candid": [132, 151, 192, 398, 643, 663, 676, 954, 1026], "destin": [132, 349, 416, 521, 562, 637, 873, 880], "app": [132, 136, 915, 1070], "admin": [132, 138, 301, 868, 872], "cron": [132, 800, 984], "rc": [132, 854], "grep": [132, 136, 142, 171, 173, 183, 237, 246, 267, 268, 710, 776, 781, 787, 792, 794, 799, 801, 813, 844, 847, 850, 853, 861, 863, 864, 900, 910, 915, 1074, 1116, 1118, 1123], "tune": [132, 133, 142, 398, 784, 785, 807, 809, 811, 818, 866, 983], "rotat": [132, 854, 879], "exce": [132, 167, 718, 915, 925], "20m": [132, 854, 913], "compresscmd": 132, "bzip2": [132, 142, 171, 173, 782, 783, 945], "compressopt": 132, "compressext": 132, "missingok": 132, "sharedscript": 132, "postrot": 132, "reload": [132, 171], "endscript": 132, "adjac": [132, 308, 685, 728], "sda": [132, 861, 863], "cfq": 132, "noop": [132, 856], "believ": [132, 138, 854, 863, 891], "r5": 132, "menuconfig": [132, 142, 757, 861, 945], "xorg": [132, 136], "hardcod": [132, 305, 504, 716, 720, 1021], "emerge_log_dir": 132, "unionf": 132, "fuse": [132, 134, 864, 874], "persist": [132, 148, 338, 342, 350, 420, 818, 862], "held": [133, 319, 715, 749, 762], "compani": [133, 136, 137, 138, 173, 183, 223, 249, 260, 275, 279, 408, 426, 427, 796, 1057], "z\u00fcrich": [133, 318], "hardcor": 133, "attitud": [133, 138, 257], "began": 133, "dive": [133, 250, 253, 1072], "inevit": [133, 319, 678], "came": [133, 200, 204, 206, 216, 219, 814, 820, 861, 986, 1038, 1112], "mb": [133, 795], "heap": [133, 381, 433, 533, 536, 588, 668, 685, 718, 743], "128": [133, 136, 150, 164, 174, 181, 187, 190, 196, 200, 203, 206, 209, 211, 213, 216, 219, 223, 226, 229, 241, 244, 251, 261, 265, 271, 397, 541, 861, 889, 946, 1071], "dead": [133, 142, 398], "attempt": [133, 138, 161, 219, 320, 634, 636, 1087], "reject": [133, 146], "proof": [133, 155, 386, 397, 401, 431, 515], "evid": 133, "fortun": [133, 138, 398, 410, 639, 1060], "overnight": [133, 198], "night": [133, 167], "instinct": 133, "defens": [133, 340, 341], "grow": [133, 562, 794, 947], "growth": [133, 203, 1012], "cumbersom": [133, 135, 170, 539, 562, 630, 674, 713, 899, 925, 1099], "handi": [133, 1123], "tricki": 133, "alloca": 133, "essenti": [133, 160, 209, 256, 258, 616], "stdio": [133, 192, 204, 323, 324, 326, 330, 332, 334, 365, 391, 411, 537, 543, 794, 814, 861, 879, 880, 881, 883, 884, 887, 888, 889, 890, 902, 915, 921, 924, 928, 929, 931, 934, 943, 947, 949, 1005], "unistd": [133, 389, 482, 518, 814, 861, 877, 879, 880, 881, 883, 886, 887, 888, 889, 890, 893, 895, 898, 912, 915, 921, 924, 928], "stdlib": [133, 381, 395, 861, 879, 880, 881, 912, 921, 928], "size_t": [133, 381, 394, 429, 509, 518, 521, 564, 569, 575, 579, 585, 606, 620, 632, 637, 648, 649, 650, 651, 652, 704, 705, 706, 708, 716, 743, 875, 883, 893, 925, 928], "stack_growth": 133, "argc": [133, 375, 433, 473, 861, 887, 888, 889, 890, 895, 898, 912, 928, 949, 1099, 1104], "mem": [133, 149, 518, 721], "fprintf": [133, 356, 369, 875, 915, 949], "stderr": [133, 182, 191, 200, 206, 216, 219, 229, 237, 246, 247, 267, 268, 294, 301, 356, 369, 413, 710, 787, 798, 799, 853, 875, 883, 915, 949, 984, 997, 1005, 1118], "atoi": [133, 891], "printf": [133, 142, 192, 204, 323, 324, 326, 332, 334, 338, 364, 365, 368, 369, 391, 411, 537, 543, 794, 814, 877, 881, 921, 928, 929, 931, 943, 947, 949, 994, 1000], "getpid": [133, 928], "memset": [133, 880, 915, 924, 928], "24299": 133, "vsz": 133, "rss": 133, "3944": [133, 206], "986": [133, 203, 206, 219, 226, 229, 244, 251, 261, 265, 848], "188": [133, 164, 181, 190, 203, 206, 211, 213, 216, 219, 223, 226, 241, 244, 251, 261, 265, 271], "320": [133, 206, 216, 219, 244, 251, 265, 271], "exact": [133, 183, 223, 298, 362, 673, 690, 730, 732, 1087], "glibc": [133, 737, 943, 945, 946, 1107], "presum": 133, "assum": [133, 219, 223, 265, 392, 539, 700, 735, 817, 861, 863, 874, 946, 1015, 1094], "writabl": [133, 392, 802, 817, 889], "eater": [133, 919], "1k": 133, "furthermor": 133, "188k": 133, "anyth": [133, 137, 138, 163, 190, 206, 210, 233, 255, 256, 308, 408, 419, 423, 440, 469, 550, 619, 639, 704, 705, 706, 854, 866, 874, 878, 884, 913, 947, 952, 953, 954, 997, 1005, 1060, 1080, 1084], "proce": [133, 141, 220, 253, 307, 481], "million": [133, 169, 426, 604, 757, 957], "24908": 133, "4800": [133, 206], "1200": [133, 206, 579, 1080], "1044": [133, 206], "1376": [133, 206], "grown": [133, 136], "reflect": [133, 757, 916, 946, 947, 974], "greedi": 133, "10000000": [133, 206, 350, 901, 957, 965], "24960": 133, "8mb": 133, "barrier": [133, 384, 685, 700, 741], "ulimit": [133, 794], "8192": [133, 206, 369, 794], "8000000": 133, "25018": 133, "11632": [133, 206], "2908": [133, 206], "7876": [133, 206], "8236": [133, 206], "demand": [133, 136, 153, 253, 392, 757, 808, 810, 959, 994], "magic": [133, 135, 375, 410, 654, 716, 757, 959, 1092], "hood": [133, 931], "bother": [133, 874, 878], "pthread_attr_setstacks": 133, "2mb": 133, "rlimit_stack": 133, "pthread_creat": [133, 900, 915], "nthread": 133, "act": [133, 190, 492, 563, 863, 874, 877, 929, 965], "shut": [133, 725, 757], "sit": [133, 209, 307, 438, 801, 861, 862, 872, 874, 878, 928, 1074], "stack_limit": 133, "thread_func": 133, "arg": [133, 150, 164, 190, 191, 200, 204, 206, 216, 217, 219, 223, 229, 244, 265, 411, 716, 900, 952, 956, 977, 984, 1007, 1063, 1085, 1101, 1107], "pthread_attr_t": [133, 900, 918], "attr": [133, 148, 900, 902, 904, 918, 924, 925], "pthread_attr_init": 133, "ld": [133, 417, 421, 512, 530, 603, 735, 757, 784, 785, 802, 815, 839, 921, 931, 932, 943, 948], "strerror": [133, 206, 875, 884, 915, 928], "p_attr": 133, "pthread_t": [133, 900, 915, 918], "rv": [133, 179, 241], "31524": 133, "825840": 133, "206460": 133, "819936": 133, "1404": [133, 206], "800mb": 133, "writeabl": [133, 813, 836], "worth": [133, 757, 863, 983, 1054, 1112, 1127], "physic": [133, 136, 171, 178, 259, 260, 278, 279, 399, 604, 741, 793, 862, 881, 885, 915, 916], "eaten": 133, "field": [133, 136, 138, 150, 155, 161, 197, 204, 211, 219, 229, 232, 249, 251, 255, 265, 293, 312, 325, 792, 797, 816, 850, 1001, 1012, 1033, 1062, 1066], "alleg": 133, "wast": [133, 141, 142, 394, 681, 698, 1071], "moment": [133, 167, 394, 426, 428, 622, 671], "carri": [133, 138, 153, 390, 422, 431, 448, 708, 861, 918, 931, 954], "771": [133, 206], "766604": 133, "aha": [133, 153, 164, 286, 720, 737, 862, 1071, 1099], "hasn": [133, 136, 137, 146, 751, 774, 985], "effect": [133, 137, 158, 302, 303, 338, 388, 398, 450, 597, 712, 741, 813, 818, 861, 873, 874, 916, 930, 955, 967, 988, 1034, 1062, 1086, 1094], "4096": [133, 150, 206, 708, 784, 785, 854, 861, 862, 863, 874, 897, 924], "1026": [133, 206], "invalid": [133, 174, 181, 211, 216, 217, 219, 223, 226, 244, 251, 258, 265, 297, 312, 395, 453, 464, 467, 521, 536, 619, 620, 621, 634, 637, 643, 684, 686, 700, 715, 904, 1007], "insist": [133, 163, 543, 1101], "pthread_stack_min": 133, "16384": [133, 138, 206, 861, 862, 863], "1125": 133, "7840": [133, 206], "1960": [133, 206], "1936": [133, 206], "risk": [133, 426, 854, 862, 872, 917, 982], "512": [133, 206, 251, 399, 794], "513": [133, 206, 251, 685], "2212": [133, 206], "4210920": 133, "1052730": 133, "4205016": 133, "4576": [133, 206], "misunderstand": [133, 694], "obvious": [133, 134, 136, 142, 154, 324, 388, 392, 419, 448, 512, 538, 544, 582, 597, 598, 626, 637, 671, 675, 680, 708, 755, 757, 770, 793, 794, 800, 814, 862, 863, 873, 889, 890, 917, 929, 931, 947, 968, 971, 1114], "overcommit": 133, "kept": [133, 138, 163, 169, 369, 384, 794, 855, 931, 959], "plai": [133, 141, 183, 386, 404, 757, 854, 972, 975, 1062], "stutter": 133, "4353": 133, "red": [133, 134, 179, 181, 187, 195, 207, 210, 223, 255, 294, 582, 854, 981, 1074], "chili": 133, "pepper": 133, "overli": [133, 800, 958], "adob": 133, "riddanc": 133, "8462": [133, 206], "3284640": 133, "821160": 133, "3278736": 133, "3064580": 133, "lie": [133, 676], "constraint": [133, 141, 643, 646, 648, 863], "800": [133, 174, 206, 579, 1015], "4000000": 133, "11338": [133, 206], "900": [133, 206, 579], "12156": [133, 206], "shrink": [133, 562], "inadvert": 133, "3mb": 133, "nois": 133, "henc": [133, 138, 481, 539, 583, 879, 883, 931], "14386": [133, 206], "child_stack": 133, "0x7f5813f22ff0": 133, "clone_vm": 133, "clone_f": 133, "clone_fil": 133, "clone_sigha": 133, "14413": 133, "mmap": [133, 923, 925, 1126], "8392704": 133, "prot_read": [133, 924], "prot_writ": [133, 924], "map_priv": [133, 924], "map_anonym": 133, "map_stack": 133, "0x7fd14f9af000": 133, "mprotect": 133, "0x7fd14f1ae000": 133, "prot_non": 133, "placehold": [133, 454, 482, 641, 690, 863], "addit": [133, 151, 163, 190, 219, 222, 286, 345, 392, 413, 447, 448, 462, 480, 530, 542, 548, 619, 757, 794, 870, 974, 986, 1002, 1004, 1087], "proc": [133, 203, 219, 226, 229, 244, 251, 261, 265, 720, 737, 739, 741, 757, 758, 883, 900, 924, 928, 1125], "7fd14f1af000": 133, "7fd14f9af000": 133, "00000000": 133, "7fd14f9b0000": 133, "topmost": [133, 1092], "redund": [133, 369, 398], "smap": 133, "7fd14f1ae000": 133, "pss": 133, "shared_clean": 133, "shared_dirti": 133, "private_clean": 133, "private_dirti": 133, "referenc": [133, 151, 174, 425, 543, 685, 686, 687, 891, 1101], "anonym": [133, 428, 730, 924], "anonhugepag": 133, "kernelpages": 133, "mmupages": 133, "miss": [133, 152, 159, 161, 163, 179, 206, 211, 216, 223, 301, 358, 403, 404, 412, 414, 422, 480, 515, 536, 627, 663, 732, 735, 881, 915, 933, 956], "shallow": [133, 203, 215, 629], "extent": [133, 163, 170, 183, 298, 389, 394, 757, 931, 979], "8k": [133, 801], "swamp": 133, "panic": [133, 146, 765, 817], "meaningless": 133, "global": [133, 134, 152, 158, 163, 167, 172, 176, 179, 192, 200, 203, 206, 209, 210, 216, 219, 222, 233, 236, 244, 256, 259, 261, 265, 270, 274, 278, 296, 301, 347, 364, 370, 376, 380, 383, 387, 391, 394, 396, 400, 401, 405, 406, 414, 415, 420, 433, 439, 448, 477, 478, 480, 481, 526, 533, 546, 628, 666, 669, 684, 685, 695, 707, 709, 710, 726, 863, 899, 902, 906, 907, 909, 931, 952, 955, 963, 965, 998, 1012, 1055, 1087, 1095, 1099], "dig": [133, 135], "thorough": [133, 142, 978, 1062, 1084, 1127], "counter": [133, 216, 326, 332, 333, 342, 398, 403, 404, 528, 637, 924], "delai": [133, 200, 206, 216, 219, 862], "substanti": 133, "overcom": [133, 301, 388], "beforehand": 133, "mlock": [133, 1126], "mlockal": [133, 1126], "contradictori": 133, "lengthi": 133, "felt": 133, "lucki": [133, 536], "kilomet": [133, 668, 817], "agre": [133, 163, 167, 307, 436, 916, 1061], "glad": 133, "outdat": [134, 142, 757, 1087], "halfwai": 134, "procedur": [134, 142, 334, 678, 854, 1012], "thunderbolt": 134, "hdmi": 134, "unplug": 134, "oop": [134, 1111], "feb": [134, 179, 181, 183, 298, 343, 839, 897, 943], "derefer": [134, 541], "0000000000000080": 134, "supervisor": 134, "error_cod": 134, "0x0000": 134, "pgd": 134, "p4d": 134, "0000": [134, 219, 265, 863], "smp": [134, 183, 190, 298], "pti": 134, "281": [134, 203, 206, 211, 213, 216, 219, 223, 226, 244, 251, 265, 271], "comm": 134, "kworker": 134, "taint": 134, "fc31": 134, "asustek": 134, "zenbook": 134, "ux391ua": 134, "bio": 134, "204": [134, 164, 190, 203, 206, 211, 213, 216, 219, 223, 226, 229, 241, 244, 251, 265, 271, 433], "workqueu": [134, 710, 734, 759, 772, 775, 853], "ucsi_connector_chang": 134, "typec_ucsi": 134, "0010": 134, "ucsi_displayport_remove_partn": 134, "0xa": 134, "0x20": [134, 747], "c7": [134, 141, 1087], "83": [134, 141, 150, 164, 174, 179, 181, 187, 190, 196, 200, 203, 206, 211, 213, 216, 219, 223, 226, 229, 232, 241, 244, 248, 251, 261, 265, 271, 296, 758, 1059, 1060], "5b": [134, 141], "e9": [134, 141], "6d": [134, 141, 325, 326], "f3": [134, 141], "3d": [134, 141, 152], "fb": [134, 141], "2e": [134, 141, 630], "0f": [134, 141], "1f": [134, 141], "84": [134, 141, 150, 164, 174, 179, 181, 187, 190, 196, 200, 203, 206, 211, 213, 216, 219, 223, 226, 229, 232, 241, 244, 251, 261, 265, 271, 296, 301, 306, 1059, 1060], "90": [134, 141, 150, 174, 179, 181, 187, 190, 196, 203, 206, 211, 213, 219, 223, 226, 229, 232, 241, 244, 248, 251, 261, 265, 271, 296, 410, 1059, 1060, 1092], "85": [134, 141, 150, 164, 174, 179, 181, 187, 190, 196, 203, 206, 211, 213, 219, 223, 226, 229, 232, 241, 244, 248, 251, 261, 265, 271, 296, 932, 933, 1059, 1060, 1099], "ff": [134, 141, 319, 863], "8b": 134, "78": [134, 141, 164, 174, 179, 181, 187, 190, 196, 203, 206, 211, 213, 219, 223, 226, 232, 241, 244, 248, 251, 261, 265, 271, 296, 477, 1059, 1060], "c6": 134, "rsp": [134, 203, 1012], "0018": 134, "ffff9daa002d3df8": 134, "eflag": 134, "00010202": 134, "rax": 134, "0000000000000008": 134, "rbx": 134, "ffff901f4ce35710": 134, "rcx": 134, "0000000000003c7d": 134, "rdx": 134, "0000000000003c7c": 134, "rsi": [134, 817], "0000000000000001": 134, "rdi": 134, "rbp": 134, "0000000000000000": [134, 949], "r08": 134, "ffffffffbc7dbe60": 134, "r09": 134, "ffff9daa002d3cf0": 134, "r10": 134, "ffff901f54951a18": 134, "r11": 134, "ffff901f56a68a78": 134, "r12": 134, "r13": 134, "r14": 134, "ffff901f4ce35860": 134, "r15": 134, "ffff901f4ce355d8": 134, "ffff901f56a00000": 134, "knlg": 134, "cr0": 134, "0000000080050033": 134, "cr2": 134, "cr3": 134, "000000028fbbc003": 134, "cr4": 134, "00000000003606f0": 134, "trace": [134, 153, 200, 206, 216, 219, 413, 747], "ucsi_unregister_altmod": 134, "0x77": 134, "0x90": [134, 747], "ucsi_unregister_partn": 134, "0x13": 134, "0x30": [134, 350], "0x247": 134, "0x340": 134, "process_one_work": 134, "0x1b5": 134, "0x360": 134, "worker_thread": 134, "0x50": 134, "0x3c0": 134, "kthread": 134, "0xf9": 134, "0x130": 134, "kthread_park": 134, "ret_from_fork": 134, "0x35": 134, "0x40": [134, 862], "cdc_ether": 134, "usbnet": 134, "r8152": 134, "mii": 134, "rc_cec": 134, "typec_displayport": 134, "uinput": 134, "rfcomm": 134, "ccm": 134, "xt_checksum": 134, "xt_masquerad": 134, "nf_nat_tftp": 134, "nf_conntrack_tftp": 134, "tun": [134, 139, 154, 158, 174, 181, 220, 1109, 1110, 1111], "bridg": 134, "stp": 134, "llc": 134, "nf_conntrack_netbios_n": 134, "nf_conntrack_broadcast": 134, "xt_ct": 134, "ip6t_reject": 134, "nf_reject_ipv6": 134, "ip6t_rpfilt": 134, "ipt_reject": 134, "nf_reject_ipv4": 134, "xt_conntrack": 134, "ebtable_nat": 134, "ebtable_brout": 134, "ip6table_nat": 134, "ip6table_mangl": 134, "ip6table_raw": 134, "ip6table_secur": 134, "iptable_nat": 134, "nf_nat": 134, "iptable_mangl": 134, "iptable_raw": 134, "iptable_secur": 134, "nf_conntrack": 134, "nf_defrag_ipv6": 134, "nf_defrag_ipv4": 134, "libcrc32c": 134, "ip_set": 134, "nfnetlink": 134, "ebtable_filt": 134, "ebtabl": 134, "ip6table_filt": 134, "ip6_tabl": 134, "iptable_filt": 134, "cmac": 134, "bnep": 134, "sunrpc": 134, "vfat": [134, 757, 788], "snd_hda_codec_hdmi": 134, "snd_soc_skl": 134, "snd_soc_sst_ipc": 134, "snd_soc_sst_dsp": 134, "snd_hda_ext_cor": 134, "x86_pkg_temp_therm": 134, "intel_powerclamp": 134, "snd_soc_acpi_intel_match": 134, "coretemp": 134, "snd_soc_acpi": 134, "kvm_intel": 134, "snd_soc_cor": 134, "snd_hda_codec_realtek": 134, "snd_hda_codec_gener": 134, "snd_compress": 134, "ledtrig_audio": 134, "ac97_bu": 134, "snd_pcm_dmaengin": 134, "iwlmvm": 134, "snd_hda_intel": 134, "snd_intel_dspcfg": 134, "irqbypass": 134, "snd_hda_codec": 134, "uvcvideo": 134, "mac80211": 134, "btusb": 134, "itco_wdt": 134, "btrtl": 134, "crct10dif_pclmul": 134, "videobuf2_vmalloc": 134, "itco_vendor_support": 134, "videobuf2_memop": 134, "mei_hdcp": 134, "btbcm": 134, "btintel": 134, "crc32_pclmul": 134, "intel_rapl_msr": 134, "snd_hda_cor": 134, "videobuf2_v4l2": 134, "libarc4": 134, "ghash_clmulni_intel": 134, "videobuf2_common": 134, "snd_hwdep": 134, "intel_cst": 134, "bluetooth": [134, 1116, 1129], "snd_seq": 134, "asus_nb_wmi": 134, "iwlwifi": 134, "videodev": 134, "snd_seq_devic": 134, "intel_uncor": 134, "asus_wmi": 134, "snd_pcm": 134, "intel_rapl_perf": 134, "cdc_acm": 134, "sparse_keymap": 134, "wmi_bmof": 134, "ecdh_gener": 134, "cfg80211": 134, "intel_wmi_thunderbolt": 134, "pcspkr": 134, "snd_timer": 134, "snd": 134, "i2c_i801": 134, "soundcor": 134, "joydev": 134, "idma64": 134, "intel_xhci_usb_role_switch": 134, "mei_m": 134, "ucsi_acpi": 134, "processor_thermal_devic": 134, "intel_rapl_common": 134, "mei": [134, 206], "intel_soc_dts_iosf": 134, "intel_pch_therm": 134, "typec": 134, "int3403_therm": 134, "int340x_thermal_zon": 134, "int3400_therm": 134, "acpi_thermal_rel": 134, "acpi_pad": 134, "binfmt_misc": 134, "ip_tabl": 134, "rfkill": 134, "i915": 134, "i2c_algo_bit": 134, "drm_kms_helper": 134, "hid_multitouch": 134, "drm": 134, "nvme": 134, "crc32c_intel": 134, "nvme_cor": 134, "serio_raw": 134, "wmi": 134, "i2c_hid": 134, "76d248e576fee192": 134, "deferenc": 134, "dp": 134, "ness": [134, 170, 255], "ucsi": 134, "displayport": 134, "linu": [134, 749, 757], "struct": [134, 158, 192, 193, 209, 369, 374, 380, 381, 382, 383, 386, 387, 390, 392, 394, 396, 400, 405, 406, 428, 433, 450, 481, 482, 530, 531, 536, 538, 540, 541, 561, 611, 612, 613, 614, 615, 616, 618, 619, 620, 621, 622, 623, 626, 628, 629, 630, 631, 638, 654, 657, 659, 660, 661, 662, 666, 671, 689, 690, 700, 707, 708, 709, 710, 716, 718, 721, 723, 725, 726, 728, 741, 745, 747, 749, 751, 753, 759, 760, 765, 767, 770, 774, 776, 777, 855, 857, 861, 880, 881, 893, 904, 915, 918, 924, 925, 928, 929, 1113], "typec_altmod": 134, "alt": [134, 164, 817, 845, 1109, 1116, 1123], "ucsi_dp": 134, "typec_altmode_get_drvdata": 134, "271": [134, 203, 206, 211, 213, 219, 244, 251, 265, 271], "bugzilla": 134, "1785972": 134, "upstream": [134, 137, 142, 146, 735], "john": [134, 398], "stebbin": 134, "roundtrip": 134, "wiki": [134, 148, 259, 260, 278, 279, 730, 757], "explod": [134, 732, 994], "jwboyer": [134, 730], "f31": 134, "quiet": [134, 167, 1087], "4382f76bc8ef9fce5e7e96d4cdb0c073564ad249": 134, "josh": 134, "boyer": 134, "fedoraproject": [134, 730], "mon": 134, "rpmdevtool": [134, 730], "koji": 134, "rpmdev": 134, "setuptre": 134, "spec": [134, 219, 730, 753], "srpm": 134, "unam": [134, 730, 735, 753, 757, 758], "correspond": [134, 146, 219, 323, 366, 862, 939, 947, 986, 1022, 1057, 1087], "kenrel": 134, "ivh": [134, 136], "crypto": 134, "ccp": 134, "sha": 134, "drop": [134, 146, 429, 448, 457, 678, 685, 687, 776, 924, 929], "edit": [134, 136, 137, 146, 178, 183, 219, 247, 322, 477, 730, 757, 862, 1010, 1084, 1125], "zips": 134, "ko": [134, 726, 735, 757], "endif": [134, 366, 368, 369, 411, 413, 418, 419, 512, 521, 530, 536, 538, 539, 579, 637, 638, 684, 700, 931, 947, 949, 1101], "buildid": [134, 730, 932], "primary_target": 134, "825": [134, 206], "asoc": 134, "patch601": 134, "patch999": 134, "roedel": [134, 478, 482, 933, 946, 1042, 1094], "patienc": [134, 163, 979], "oldpackag": 134, "uefi": [134, 141], "footnot": [134, 136, 137, 138, 141, 142, 147, 154, 160, 163, 166, 250, 253, 427, 454, 497, 545, 547, 548, 561, 591, 610, 726, 728, 789, 796, 811, 861, 862, 863, 884, 887, 947, 979, 982, 1012, 1046, 1061, 1112, 1115], "previou": [135, 151, 470, 521, 537, 619, 817, 849, 889, 956, 958, 978, 980, 1024, 1086], "serv": [135, 137, 359, 1061, 1093, 1127], "market": [135, 138, 203, 247, 255, 1012], "intent": [135, 137, 141, 142, 431, 686, 690, 730, 887, 889, 890], "remark": 135, "organ": [135, 160, 364, 399, 410, 438, 579, 793, 879, 946], "numer": [135, 152, 168, 170, 172, 206, 216, 219, 223, 255, 265, 413, 585, 874], "enforc": [135, 193, 386, 408, 543, 716, 863], "cname": [135, 137], "propag": [135, 340, 398, 414, 422, 423, 604, 654, 864], "1100": [135, 200, 206, 223, 579], "3600": [135, 206], "185": [135, 164, 181, 203, 206, 211, 213, 219, 223, 226, 229, 232, 241, 244, 251, 261, 265, 271], "199": [135, 164, 181, 203, 206, 211, 213, 216, 219, 223, 226, 244, 251, 261, 265, 271, 757, 1012], "109": [135, 150, 164, 174, 179, 181, 187, 200, 203, 206, 211, 213, 219, 223, 226, 229, 241, 244, 248, 251, 261, 265, 271, 296, 301, 306], "153": [135, 150, 164, 174, 181, 190, 203, 206, 211, 213, 219, 223, 226, 229, 232, 241, 244, 261, 265, 271, 308], "111": [135, 150, 152, 164, 174, 181, 187, 203, 206, 211, 213, 216, 219, 223, 226, 229, 241, 244, 248, 251, 261, 265, 271, 296], "108": [135, 150, 164, 174, 181, 187, 190, 196, 203, 206, 211, 213, 216, 219, 223, 226, 229, 241, 244, 248, 251, 261, 265, 271, 296], "strip": [135, 154, 163, 197, 199, 200, 203, 211, 215, 216, 221, 223, 229, 232, 244, 251, 261, 265, 271, 301, 310, 931, 932, 934, 943, 962, 1035, 1083], "breviti": 135, "fqdn": 135, "qualifi": [135, 392, 538, 539, 676], "surf": 135, "consequenti": [135, 138, 141, 169, 788, 861, 951, 972, 1101], "microsoft team": 136, "chrome": 136, "google chrom": 136, "confer": [136, 138, 167, 191, 214, 240], "virtual classroom": 136, "classroom": [136, 138], "remote train": 136, "dr": [136, 946], "chromium": [136, 171], "frequent": [136, 138, 146, 163, 223, 842, 862, 979, 1000], "meet": [136, 138, 163, 386, 801, 943, 956], "face": [136, 138, 163, 213, 223, 692], "travel": [136, 817], "corona": [136, 138, 163], "viru": [136, 138], "conferenc": 136, "dramat": 136, "march": 136, "spent": [136, 397, 701, 953, 1061], "weston": 136, "shown": [136, 169, 292, 839, 925, 1071], "invest": [136, 138, 142, 223], "smooth": 136, "layer": [136, 236, 238, 256, 716, 788, 862, 874, 884, 893], "cornercas": 136, "hover": 136, "sharer": 136, "gdm": [136, 203, 219, 226, 229, 244, 251, 261, 265, 792, 848], "daemon": [136, 183, 203, 219, 226, 229, 244, 251, 261, 265, 404, 792, 795, 842, 843, 846, 848, 864, 872, 877, 879, 909, 965], "uncom": [136, 453, 454, 648, 861], "waylanden": 136, "defaultsess": 136, "deb": [136, 268], "5153": 136, "thank": [136, 217, 244, 640, 676, 739, 899, 1060], "marjan": 136, "javorka": 136, "fashion": 136, "efl": [136, 776, 864, 915], "61762": 136, "1670": [136, 206], "80": [136, 141, 150, 164, 174, 179, 181, 187, 190, 196, 200, 203, 206, 211, 213, 219, 223, 226, 229, 232, 241, 244, 248, 251, 261, 265, 271, 296, 402, 469, 839, 915, 945, 957, 1012, 1059, 1060, 1092], "947213": 136, "61764": 136, "98775": 136, "zygot": 136, "sandbox": [136, 163, 167, 217, 231, 249, 1055, 1094, 1095], "61800": 136, "239615": 136, "gpu": 136, "sharedarraybuff": 136, "sparerendererforsiteperprocess": 136, "prefer": [136, 213, 223, 342, 398, 440, 544, 631, 639, 643, 749, 801, 1007], "kaaaaaaaaacaaabaaqaaaaaaaaaaagaaaaaaaaaaaaaiaaaaaaaaaagaaaaaaaaa": 136, "token": [136, 193, 209, 328, 368, 792, 905, 1010, 1109], "4327801531638606376": 136, "61825": 136, "420846": 136, "autoplai": 136, "gestur": 136, "12993561460135093079": 136, "asar": 136, "agent": [136, 870, 1062], "mozilla": [136, 261, 839], "applewebkit": 136, "537": [136, 206], "khtml": 136, "gecko": 136, "microsoftteam": 136, "preview": [136, 221, 274, 415, 710], "3497": 136, "safari": 136, "webview": 136, "preload": 136, "preload_notif": 136, "fff": 136, "eyjjci5jb21wyw55ijoirwxly3ryb24ilcjjci5kdw1wcyi6iiisimnylmvuywjszwqiomzhbhnllcjjci5wcm9kdwn0ijoirwxly3ryb24ilcjjci5zzxnzaw9uijoiiiwiy3iudxjsijoiiiwiy3iudmvyc2lvbii6iny0ljiumtiifq": 136, "raster": 136, "v8_context_snapshot_data": 136, "v8_natives_data": 136, "101": [136, 150, 164, 174, 181, 187, 196, 203, 206, 211, 213, 216, 219, 223, 226, 232, 241, 244, 251, 261, 265, 271, 296, 301, 306, 990, 1059, 1060], "msteam": 136, "notificationsmanag": 136, "61973": 136, "790018": 136, "432557619363765409": 136, "mainwindow": 136, "62033": 136, "1259666": 136, "5585537623314398260": 136, "pluginhost": 136, "wish": [136, 138, 146, 167, 402, 411, 550, 617, 698, 978, 1076, 1077, 1094], "insan": [136, 275, 788], "killal": [136, 919, 929], "63500": 136, "298385": 136, "63502": 136, "blood": 136, "pressur": [136, 200], "rise": [136, 476, 739, 897, 898, 915], "wipe": 136, "logout": 136, "pop": [136, 149, 211, 213, 226, 241, 251, 261, 271, 369, 698, 977, 1002], "desir": [136, 200, 206, 216, 219, 343, 347, 358, 485, 530, 532, 538, 620, 755, 888, 890, 1062], "morn": [136, 172, 182, 200, 209, 211, 217, 1017], "webassembli": 136, "blow": 136, "water": [136, 255], "tab": [136, 137, 150, 219, 247, 265, 292, 343, 757, 817, 999, 1024, 1118], "firefox": [136, 404, 900, 929, 1070], "dom": [136, 195], "gave": [136, 138, 151, 163, 859, 1060], "3987": 136, "132": [136, 150, 152, 164, 174, 181, 190, 203, 206, 211, 213, 216, 219, 223, 226, 229, 241, 244, 261, 265, 271], "plagu": 136, "rememb": [136, 137, 152, 159, 169, 190, 353, 386, 436, 562, 563, 597, 600, 637, 638, 686, 753, 757, 799, 814, 817, 836, 861, 870, 872, 953, 1019, 1029], "invent": [136, 336, 368, 428, 450, 451, 1114, 1115], "game": [136, 203, 219, 226, 229, 244, 251, 261, 265, 813, 877, 993], "pornwatch": 136, "teamview": 136, "webpag": 137, "properli": [137, 622, 700, 757, 943], "retrospect": 137, "jekyl": 137, "bend": [137, 485], "companion": [137, 255], "pollut": [137, 369, 392, 398, 431, 627, 933], "distinguish": [137, 537, 690, 789, 943], "handwritten": [137, 235, 236, 238, 282, 536, 636, 666, 667, 668, 684, 709, 710], "remind": 137, "pile": [137, 146, 438, 929], "incomprehens": [137, 217, 600, 1112], "blame": [137, 863], "technic": [137, 138, 160, 423, 427, 527, 582, 626, 959, 1071, 1104], "nojekyl": 137, "eof": [137, 187, 190, 209, 210, 226, 293, 330, 331, 332, 333, 346, 610, 759, 773, 879, 880, 883, 889, 921, 928, 981], "doctyp": 137, "constel": 137, "machineri": [137, 259, 260, 278, 279], "eventu": [137, 146, 401, 897, 946], "click": [137, 138], "danc": [137, 481, 777, 947], "cri": [137, 689], "backup": [137, 171, 411, 786, 788, 870, 1076], "haven": [137, 138, 163, 504, 854, 861], "subdomain": 137, "afterthough": 137, "preserv": [137, 148, 169, 226, 386, 784, 785, 819, 873, 1083], "_build": 137, "restor": [137, 146, 153, 200, 206, 216, 219, 730, 929, 952], "shini": 137, "nervous": 137, "marketinges": [137, 247], "familiar": [137, 163, 219, 303, 304, 693, 862, 979], "big blue button": 138, "strongli": [138, 200, 206, 216, 219, 250, 253, 480, 582, 628, 666, 707, 709, 710, 1112], "shame": 138, "pursu": 138, "collabor": [138, 148, 155, 160, 167, 240], "moreov": 138, "focus": 138, "teach": [138, 163, 319], "trust": [138, 141, 203, 259, 260, 278, 279, 634, 870, 872, 1012, 1087, 1104], "benefit": [138, 250, 253, 256, 258, 392, 1050], "beat": [138, 213, 223, 1054], "talent": 138, "whiteboard": [138, 924], "chat": 138, "wide": [138, 142, 324, 325, 789, 870, 925, 931], "breakout": [138, 861], "stabil": [138, 433, 863, 1088], "thousand": [138, 244, 788], "curiou": [138, 1055], "curious": 138, "licens": [138, 244, 420, 713, 981, 1010], "lgpl": 138, "blindsid": 138, "govern": [138, 743, 883], "html5": 138, "exception": [138, 863], "modern": [138, 142, 144, 155, 158, 163, 170, 192, 214, 414, 688, 710, 717, 719, 724, 727, 734, 738, 748, 759, 761, 766, 772, 775, 778, 853, 931, 950, 980, 1055, 1084, 1113, 1115], "heavili": [138, 160, 163, 247, 249, 319, 480, 679, 757, 854, 863, 979], "webrtc": 138, "pain": [138, 757, 934, 943], "death": [138, 190, 929], "firewal": [138, 171, 872], "busi": [138, 408, 418, 543, 762, 774, 786, 821, 823, 828, 829], "indefinit": [138, 616], "vm": [138, 304], "encrypt": [138, 792, 813, 864, 872, 873, 874, 1033, 1074], "bbb": [138, 150, 211, 229], "provis": 138, "gcp": 138, "expertis": [138, 481], "n1": [138, 164, 223], "accordingli": [138, 171, 473, 477, 481, 515, 861, 863, 948, 983, 986, 1083], "500gb": 138, "10gb": 138, "spars": [138, 213, 223, 546, 548, 753], "mandatori": [138, 863, 980], "issuanc": 138, "udp": [138, 855, 857, 1127, 1129], "32768": 138, "clickabl": 138, "7443": 138, "755": [138, 206, 301, 802, 982], "xenial": 138, "220": [138, 164, 179, 190, 200, 203, 206, 211, 213, 219, 223, 226, 241, 244, 251, 261, 265, 271], "hostnam": [138, 1087], "certbot": 138, "greenlight": 138, "letsencrypt": 138, "minor": [138, 142, 200, 206, 216, 219, 249, 716, 723, 788], "docker": [138, 142], "bundl": [138, 161, 1070, 1087], "rake": 138, "succesfulli": 138, "screenshot": [138, 161, 301], "tryout": [138, 863], "kid": [138, 183, 201, 287], "layman": 138, "knew": [138, 167, 641, 948], "reproduc": [138, 141, 257, 395, 863], "thought": [138, 369, 681, 757, 1071], "fred": [138, 855, 955], "dixon": 138, "leader": 138, "aka": [138, 183, 206, 209, 211, 231, 504, 688], "canva": 138, "bradlei": 138, "schreffler": 138, "upfront": 138, "far": [138, 163, 171, 192, 198, 206, 209, 249, 338, 353, 374, 375, 377, 388, 392, 397, 422, 551, 561, 626, 689, 735, 799, 863, 957, 979, 1060, 1112], "exhaust": [138, 913, 916, 959], "heard": 138, "tast": [138, 328, 544, 600, 626, 669, 689], "era": 138, "budget": [138, 187], "advertis": [138, 679], "viabl": 138, "shout": [138, 668, 671], "loud": [138, 347, 562, 630, 668, 674, 675], "traunse": 139, "hike": [139, 140, 167], "bergsteigen": [139, 140], "climb": [139, 140, 167, 198], "klettern": [139, 140], "outdoor": [139, 140], "donnerstag": 139, "geistigen": 139, "ersch\u00f6pfung": 139, "k\u00f6rperlich": 139, "erfahren": [139, 140, 319, 1110], "dazu": [139, 148, 149, 154, 158, 175, 301, 306, 319, 1108, 1122, 1130], "ausgesucht": [139, 140], "zwar": [139, 1107, 1111, 1123], "lo": [139, 140, 181, 219, 255, 485, 737, 967], "\u00fcbernachtung": 139, "gmundner": [139, 167], "h\u00fctte": [139, 140, 167], "n\u00e4chsten": 139, "naturfreundesteig": 139, "zusammenfassung": [139, 145], "wunsch": 139, "vollend": 139, "erf\u00fcllt": 139, "unversichert": 139, "unmarkiert": 139, "leicht": [139, 175, 1107, 1122, 1128, 1129], "panik": 139, "geraten": 139, "h\u00e4nde": [139, 140], "braucht": [139, 140], "fingern\u00e4gel": 139, "z\u00e4hne": 139, "mitunt": [139, 140, 1119], "verkoffert": 139, "augen": [139, 226], "offenhalten": 139, "jeder": [139, 1106, 1109, 1110, 1129], "spur": 139, "folgen": [139, 175, 176, 1109, 1122], "eher": [139, 175, 1108, 1122], "fr\u00fcher": [139, 220], "umdrehen": 139, "sackgass": 139, "erweist": 139, "vielleicht": [139, 164, 175, 226, 1111, 1122], "weggehen": 139, "stirnlamp": 139, "mitnehmen": 139, "tour": [139, 198, 235, 236, 238, 258, 282, 319, 473, 624, 709, 710, 1054, 1112, 1113], "war": [139, 149, 154, 156, 164, 175, 179, 319, 408, 1107, 1109, 1111, 1122, 1128, 1129], "sch\u00f6nsten": 139, "jemal": 139, "zuletzt": 139, "traumhaften": 139, "gegend": 139, "immer": [139, 140, 154, 158, 164, 166, 179, 251, 1107, 1111, 1118, 1128], "griffweit": 139, "erscheint": 139, "paar": [139, 149, 164, 166, 174, 181, 213, 301, 306, 1107, 1130], "eindr\u00fcck": 139, "m\u00fcder": 139, "abklatsch": 139, "erinnerungen": 139, "hirn": 139, "eingebrannt": 139, "haben": [139, 140, 149, 154, 158, 166, 174, 175, 187, 319, 587, 1107, 1108, 1109, 1110, 1111, 1116, 1122, 1124, 1125, 1126, 1129], "einstieg": [139, 175, 1122], "traunsteinstra\u00df": 139, "hundert": [139, 150, 223], "meter": 139, "s\u00fcdlich": 139, "hoisn": [139, 167], "wirt": [139, 167], "markiert": [139, 140], "wanderweg": [139, 140], "wegweisern": [139, 140], "bergauf": [139, 140], "kupp": 139, "klamm": 139, "einsteigt": 139, "bergab": 139, "touristisch": 139, "erschlossen": 139, "trifft": 139, "familien": 139, "kindern": [139, 1123], "ungef\u00e4hr": 139, "rechter": 139, "felsstock": 139, "adlerhorst": 139, "sieht": [139, 150, 154, 164], "rau": [139, 213], "touristenzon": 139, "rauf": 139, "schart": 139, "durchschnaufen": 139, "einstellen": 139, "gen\u00fcsslich": 139, "h\u00f6henmet": 139, "verspeisen": 139, "steinmanderl": 139, "verfehlen": 139, "erkennbar": [139, 150, 1125], "kamm": 139, "r\u00fcber": 139, "traunsteinfelsen": 139, "erstreckt": [139, 140], "sch\u00f6nste": 139, "teil": [139, 149, 158, 166, 1107, 1109], "meditativ": 139, "wundersch\u00f6n": [139, 140], "steil": 139, "voll": 139, "zecken": 139, "schon": [139, 140, 149, 164, 166, 174, 204, 319, 1109, 1111, 1116, 1123, 1125, 1128], "bl\u00fcht": 139, "rinnen": 139, "leichtest": [139, 150], "dahin": [139, 1107], "wieder": [139, 164, 166, 174, 179, 181, 195, 1109, 1123], "vertun": 139, "manderl": 139, "aufstellen": 139, "nachwelt": 139, "nemesi": 139, "bergverr\u00fcckten": 139, "gleich": [139, 150, 164, 174, 175, 179, 181, 213, 261, 296, 1107, 1122, 1129], "schl\u00fcsselstel": 139, "quert": 139, "latschen": 139, "\u00f6fter": [139, 140], "festhalten": 139, "gel\u00e4nd": 139, "einsam": 139, "bohrhaken": 139, "verrotteten": 139, "schuhband": 139, "festh\u00e4lt": 139, "runterfallen": 139, "glaub": [139, 148, 149], "stell": [139, 164, 195], "umgehen": [139, 1116], "querung": 139, "hierher": 139, "st\u00fcck": 139, "reinzum\u00fcnden": 139, "scheint": [139, 148], "gibt": [139, 140, 145, 148, 150, 151, 154, 164, 175, 176, 187, 213, 296, 1106, 1107, 1108, 1109, 1111, 1116, 1122, 1128], "foto": [139, 819], "mittendrin": 139, "besch\u00e4ftigt": 139, "hose": 139, "kacken": 139, "gesagt": [139, 154, 164, 174, 319, 1107], "manderln": 139, "aufnahmen": 139, "zunehmenden": 139, "sonnenuntergang": 139, "unvergesslich": 139, "nacht": [139, 140], "geworden": 139, "halten": [139, 140], "zumindest": [139, 164, 1109], "hinauf": 139, "stund": [139, 844, 1130], "gekostet": 139, "exklus": [139, 164, 174], "schneck": 139, "j\u00e4gerbrot": 139, "schein": 139, "ausstieg": 139, "hernlersteig": 139, "m\u00fcndet": 139, "gmundnerh\u00fctt": 139, "gem\u00fctlich": [139, 140], "nett": [139, 140, 154, 265, 319, 1116, 1123], "wirtsleut": 139, "h\u00fcttenruh": 139, "ansitzen": 139, "schweinsbraten": 139, "reinkommt": 139, "k\u00fcche": 139, "geputzt": 139, "backerbsen": 139, "morgen": [139, 219, 223], "hochnebel": 139, "blick": [139, 140, 1108], "flugzeug": 139, "gipfel": [139, 140], "dolin": 139, "nebel": 139, "dabei": [139, 150, 154, 190, 319, 1106], "verziehen": 139, "r\u00fcckweg": 139, "hoisnwirt": 139, "miesweg": 139, "karibik": 139, "steiner alpen": 140, "kamni\u0161ke alp": 140, "kamni\u0161ko savinjskih alp": 140, "alten": [140, 1111], "tradit": [140, 203, 206, 394, 409, 545, 547, 548, 550, 570, 799, 863, 1002, 1033, 1126], "bleiburg": [140, 198], "k\u00e4rnten": [140, 319], "den": [140, 148, 149, 150, 154, 158, 164, 166, 174, 175, 180, 187, 194, 223, 271, 301, 302, 306, 319, 779, 1107, 1108, 1109, 1110, 1111, 1116, 1119, 1122, 1123, 1129, 1130], "umliegenden": 140, "bergen": 140, "interessantesten": 140, "2558m": [140, 198], "steiner": 140, "alpen": 140, "davor": [140, 182], "gekannt": 140, "nun": [140, 158, 164, 187, 194, 219, 587], "gesehen": [140, 164, 170, 204], "steht": [140, 164, 174, 175, 1119, 1122], "fest": 140, "n\u00e4chste": [140, 158], "jahr": [140, 164], "\u00fcberschreitung": 140, "soweit": [140, 1116, 1123], "h\u00f6chst": 140, "interessant": [140, 1108], "steinhaufen": 140, "unge\u00fcbt": 140, "verloren": [140, 179, 182], "mal": [140, 154, 164, 175, 226, 319, 1107, 1111, 1122], "h\u00f6henangst": 140, "schauen": [140, 175, 1122], "helm": 140, "schaden": 140, "schottersurf": 140, "kommen": [140, 145, 213, 301, 306, 319, 845], "ihr": [140, 145, 149, 154, 164, 779, 1106, 1108, 1110, 1111, 1116, 1123, 1129], "artikel": [140, 148], "rein": [140, 150, 175, 1122, 1123], "ins": [140, 149, 319, 695, 1107, 1123], "eisenkappel": 140, "seebergsattel": 140, "openstreetmap": 140, "klein": [140, 149, 150, 154, 1107, 1109, 1110], "dorf": 140, "uhren": 140, "stehengeblieben": 140, "scheinen": 140, "parkplatz": 140, "geparkt": 140, "wissend": 140, "hinten": 140, "tal": 140, "beginnt": [140, 174, 1130], "ahnen": 140, "stetig": 140, "verzagen": 140, "eingang": [140, 1107], "kar": 140, "pl\u00f6tzlich": 140, "freundlich": 140, "vorhanden": [140, 1116, 1123], "fr\u00fchst\u00fcck": 140, "lager": [140, 255], "respektvol": 140, "erklimmenden": 140, "zieht": 140, "haltend": 140, "wand": 140, "wiederum": [140, 164], "gilt": [140, 154, 195, 319], "mittlerweil": [140, 1107, 1124], "akzeptiert": 140, "deswegen": [140, 174, 179, 1109], "schliesslich": [140, 1107], "stehend": 140, "denn": [140, 164, 174, 1128, 1130], "hinaufkomm": 140, "passiert": [140, 164, 181], "anf\u00e4ngern": 140, "geschehen": 140, "jung": [140, 319], "izola": 140, "slowenien": 140, "stellten": 140, "ankam": 140, "ob": [140, 148, 174, 1111, 1130], "beantwortet": 140, "adoptivs\u00f6hn": 140, "gewonnen": 140, "nachbarberg": 140, "ko\u010dna": 140, "sichtlich": 140, "spa\u00df": [140, 220, 1125], "abstieg": 140, "erweitert": 140, "rund": 140, "fertig": [140, 174, 191, 219, 647, 654], "empfehl": [140, 1107], "runterzugehen": 140, "raufgekommen": 140, "ostseitigen": 140, "westseitig": 140, "sch\u00f6ner": [140, 164], "langen": 140, "grat": 140, "felst\u00fcrm": 140, "daf\u00fcr": [140, 158, 164, 174, 175, 1107], "anstrengend": 140, "200m": 140, "pulverhangerl": 140, "zur\u00fcck": [140, 164, 176, 1116, 1123], "wohlverdient": 140, "la\u0161ko": 140, "geschmack": 140, "schroff": 140, "selektiv": 140, "jedermann": 140, "kett": 140, "umfasst": 140, "2000m": 140, "umschlossen": 140, "gletschergeformten": 140, "karen": 140, "steilen": 140, "w\u00e4nden": 140, "ost": 140, "richtung": [140, 1118], "schlafm\u00f6glichkeiten": 140, "biwak": 140, "einladung": 140, "\u00fcberquerung": 140, "dringend": 140, "f\u00e4llig": [140, 319], "fu\u00dfnoten": [140, 1106], "belieben": 140, "gummi": 140, "reifen": 140, "fahren": 140, "mehrplatzlag": 140, "reserviert": 140, "h\u00fcttenschl\u00e4fer": 140, "ohrenst\u00f6psel": 140, "f\u00e4lle": 140, "eingetreten": 140, "fassen": [140, 219], "typ": [140, 176, 187, 197, 845, 1070], "geschnarcht": 140, "geschrien": 140, "modules sign": 141, "secure boot": 141, "shim": 141, "dell xps 13": 141, "unresolv": [141, 732, 735, 931], "upset": [141, 679], "tendenc": 141, "vendor": [141, 142, 424, 426, 481, 753, 757, 861, 891], "efi": 141, "implementor": [141, 235, 236, 238, 282, 628, 666, 675, 709, 710, 716, 1092, 1112], "shine": 141, "stuck": 141, "cryptographi": 141, "third": [141, 178, 190, 219, 265, 414, 542, 544, 655, 656, 735, 737, 802, 844, 887], "parti": [141, 146, 432, 544, 728, 735, 883, 924, 1074], "signatur": [141, 187, 219, 223, 244, 265, 530, 626, 673, 689, 690, 925], "openssl": [141, 813], "req": 141, "x509": 141, "newkei": 141, "rsa": [141, 870], "keyout": 141, "xps13": 141, "priv": [141, 751], "outform": 141, "36500": [141, 481], "subj": 141, "passphras": [141, 171, 870], "expiri": 141, "0x2": 141, "97": [141, 150, 164, 174, 179, 181, 187, 190, 203, 206, 211, 213, 216, 219, 223, 226, 232, 241, 244, 251, 261, 265, 271, 296, 301, 306, 402, 1059], "e5": 141, "ef": 141, "88": [141, 150, 164, 174, 179, 181, 187, 190, 192, 196, 203, 206, 211, 213, 216, 219, 223, 226, 229, 232, 241, 244, 248, 251, 261, 265, 271, 296, 301, 306, 404, 999, 1059, 1060, 1099], "3a": 141, "b3": 141, "9c": 141, "1b": 141, "a4": 141, "d7": 141, "sha256withrsaencrypt": 141, "issuer": [141, 428], "sep": [141, 142, 170, 190, 203, 206, 211, 219, 223, 226, 244, 265, 410, 607, 839, 861, 863, 874, 931, 954], "gmt": 141, "aug": [141, 206, 854, 862], "2121": 141, "subject": [141, 411, 718, 755, 1092], "rsaencrypt": 141, "modulu": [141, 200, 206, 216, 219], "b5": 141, "2d": [141, 193, 544, 1000], "5c": 141, "6f": [141, 919], "b0": 141, "95": [141, 150, 164, 174, 179, 181, 187, 190, 196, 200, 203, 206, 211, 213, 216, 219, 223, 226, 229, 232, 241, 244, 248, 251, 261, 265, 271, 296, 1059, 1060], "f6": 141, "9e": 141, "9d": 141, "0d": 141, "bc": [141, 737, 861], "f5": 141, "6e": 141, "fe": [141, 410], "94": [141, 150, 174, 179, 181, 187, 190, 196, 203, 206, 211, 213, 219, 223, 226, 229, 232, 241, 244, 251, 261, 265, 271, 296, 453, 454, 1059], "2b": [141, 863], "e6": 141, "b2": 141, "a0": [141, 862], "f8": 141, "7d": 141, "1c": 141, "2c": 141, "9f": 141, "4d": [141, 1000], "86": [141, 150, 164, 174, 179, 181, 187, 190, 196, 203, 206, 211, 213, 219, 223, 226, 229, 232, 241, 244, 251, 261, 265, 271, 296, 1059, 1060], "e3": [141, 447], "dd": [141, 788, 817, 1107], "7b": 141, "3f": 141, "aa": 141, "b8": 141, "a5": [141, 862], "d5": 141, "0b": 141, "81": [141, 150, 152, 164, 174, 179, 181, 187, 190, 192, 196, 203, 206, 211, 213, 219, 223, 226, 229, 232, 241, 244, 248, 251, 261, 265, 271, 296, 933, 957, 1059, 1060], "d1": [141, 213, 601], "e8": 141, "dc": [141, 428], "c5": 141, "d2": [141, 213, 601], "c2": [141, 431, 545, 630], "0a": [141, 330], "a1": [141, 203, 248, 1012], "e1": [141, 191, 204, 447, 627, 1085], "89": [141, 150, 164, 174, 179, 181, 187, 190, 196, 200, 203, 206, 211, 213, 216, 219, 223, 226, 229, 232, 241, 244, 248, 251, 261, 265, 271, 296, 402, 861, 862, 863, 933, 1059, 1060], "4c": 141, "4a": 141, "77": [141, 164, 172, 174, 179, 181, 183, 187, 190, 196, 200, 203, 206, 211, 213, 219, 223, 226, 229, 232, 241, 244, 251, 261, 265, 271, 296, 298, 301, 306, 1059, 1060], "a9": 141, "68": [141, 164, 169, 174, 179, 181, 187, 190, 196, 200, 203, 206, 211, 213, 219, 223, 226, 229, 232, 241, 244, 251, 261, 265, 271, 293, 296, 839, 1059, 1060], "b6": 141, "a8": 141, "9b": 141, "d8": 141, "7f": [141, 863], "e2": [141, 191, 204, 447, 627, 1085], "a3": 141, "79": [141, 164, 174, 179, 181, 187, 190, 196, 200, 203, 206, 211, 213, 219, 223, 226, 229, 232, 241, 244, 248, 251, 261, 265, 271, 296, 301, 306, 1059, 1060], "f4": 141, "96": [141, 150, 164, 174, 179, 181, 187, 190, 200, 203, 206, 211, 213, 219, 223, 226, 229, 232, 241, 244, 248, 251, 261, 265, 271, 296, 402, 932, 933, 1059, 1060], "4f": [141, 1000], "1d": 141, "7e": 141, "4e": 141, "0e": 141, "d9": 141, "8c": 141, "d3": [141, 601], "c8": 141, "f7": 141, "8e": 141, "d6": 141, "3b": 141, "1e": 141, "4b": [141, 863, 919], "5e": [141, 986], "5f": 141, "7c": 141, "expon": [141, 986], "65537": 141, "0x10001": 141, "x509v3": 141, "98": [141, 150, 164, 174, 181, 187, 190, 196, 203, 206, 211, 213, 216, 219, 223, 226, 229, 232, 241, 244, 251, 261, 265, 271, 296, 301, 306, 527, 564, 933], "0c": [141, 863], "keyid": 141, "c0": 141, "8f": 141, "b1": 141, "b7": 141, "9a": 141, "fa": 141, "7a": 141, "df": [141, 167, 410], "a6": 141, "c9": 141, "76": [141, 164, 174, 179, 181, 187, 190, 192, 196, 203, 206, 211, 213, 219, 223, 226, 229, 232, 241, 244, 248, 251, 261, 265, 271, 296, 301, 306, 421, 422, 686, 1012, 1059, 1060], "f0": 141, "b4": 141, "f9": 141, "eb": 141, "f1": 141, "6c": [141, 863], "2f": [141, 326, 1000], "5a": 141, "e0": 141, "d0": 141, "93": [141, 150, 164, 174, 179, 181, 187, 190, 196, 200, 203, 206, 211, 213, 219, 223, 226, 232, 241, 244, 251, 261, 265, 271, 296, 1059], "8d": 141, "2a": 141, "fc": [141, 427, 428], "1a": 141, "b9": 141, "cb": [141, 591], "miidbtccae2gawibagiuarax5e9vn4g6eclb5bocbruks9cwdqyjkozihvcnaqel": 141, "bqawetepma0ga1ueawwgamzhc2nomcaxdtixmdkwnzeyntc1nloydzixmjewode0": 141, "mti1nzu2wjarmq8wdqydvqqddazqzmfzy2gwggeima0gcsqgsib3dqebaquaa4ib": 141, "dwawggekaoibaqc1lvzqb2aw15x2nlvnnmth6qxdnq1xvokb9vbu6zx": 141, "wl72mzqr": 141, "5rkvwabpeph9hcwdnwcm9mjnhupdexi": 141, "hmszvaowukuzi2kflrpvc": 141, "79gwnr4": 141, "jc": 141, "xdlzwnekcnuhsogjwxxttbydsghpd8q": 141, "valspcvotvjdokib4eyxnavjbdjdldd": 141, "rb8ueftirkn5abigzdoortik9jy1v2ocui5zqu8dkg4vph4mtkp": 141, "nb3kgq7zt5ym": 141, "b8ce2f": 141, "ettmprmfi94x": 141, "7i5tuqrbsylistict": 141, "rf1kw6": 141, "zuzvmwyow9cyzwc5rar": 141, "ys0exg3v": 141, "hyjl7vaxa23rb": 141, "xyiuztxqunxragmbaagjuzbrmb0ga1uddgqwbbqk": 141, "p1jr3huijl4otbwyvngmdz1idzafbgnvhsmegdawgbqkp1jr3huijl4otbwyvngm": 141, "dz1idzapbgnvhrmbaf8ebtadaqh": 141, "ma0gcsqgsib3dqebcwuaa4ibaqa5yke5gyfa": 141, "h49rsbdpobkbr5rv0hz693pljj02mn9hprusmgbygdujyx6odqbzcfah8ko0": 141, "xra": 141, "kdtflvc7uuvwtp": 141, "envqn8vx6twkd0r7maeyze8q6w2y1p1xcbrbwhmhemi": 141, "tjjadwenms9xosesipxkduey9oa6ep6indatkyt2lrw5tyagfocnxyiniybsvdtw": 141, "yqfvxbjphkw": 141, "dintokuzmazeiq3j0hi8o789xdyxlf2snsdshq5huaz67c5brli": 141, "ahemjzbycfiiq65b5x": 141, "y7aq": 141, "eg70tffm4fd8iys4tyxajdhcarqvfpdxazkhx": 141, "rk": 141, "b3lljngstu2g": 141, "mokutil": 141, "mokmanag": 141, "bloodi": [141, 928, 1071], "fan": [141, 163, 167, 193, 217, 1055], "highest": [141, 200, 206, 216, 219, 265, 353, 398, 862, 918], "rate": [141, 163, 223, 390, 776, 915], "melt": 141, "7390": [141, 206], "cross develop": 142, "raspberry pi": [142, 854, 855, 856, 857, 858, 861, 862, 863], "crosstool-ng": 142, "c++": [142, 144, 1111, 1112, 1113, 1115], "sadli": [142, 193, 392, 726, 861, 895, 898, 932, 954], "linaro": [142, 710, 853, 941, 942], "libstdc": [142, 943, 945], "unsatisfi": 142, "libpthread": [142, 934], "feedback": [142, 158, 161, 170, 171, 172], "thankfulli": 142, "gperf": [142, 945], "flex": [142, 737, 861, 945], "texinfo": [142, 945], "help2man": [142, 945], "libtool": [142, 945], "ncurs": [142, 730], "unzip": [142, 758, 945], "rsync": [142, 945], "diffutil": 142, "libncurses5": [142, 945], "gawk": [142, 945], "util": [142, 149, 170, 425, 431, 450, 464, 579, 634, 637, 639, 945, 952, 1087], "ct": [142, 945], "zlib": [142, 945], "extra": [142, 164, 174, 200, 359, 420, 512, 683, 757], "prior": [142, 783, 799, 824, 861, 931, 947, 1001], "bootstrap": [142, 945, 1094], "latest": [142, 713, 728, 734, 1087], "yann": 142, "morin": 142, "warranti": [142, 183, 298], "merchant": 142, "chosen": [142, 413, 854, 861, 863, 889, 893, 913, 917, 1061, 1077], "rpi3": 142, "armv7": 142, "rpi2": 142, "23179": 142, "libc": [142, 931, 948], "glibc_2": [142, 931], "ldd": [142, 414, 416, 948], "0xb6e06000": 142, "invok": [142, 172, 191, 204, 287, 292, 428, 530, 542, 601, 631, 910, 932, 969, 981, 982, 1007, 1085], "rpt2": 142, "rpi1": 142, "deb10u1": 142, "quirk": [142, 854], "werror": [142, 334, 347, 390, 413, 725, 726, 1101], "behind": [142, 182, 347, 398, 428, 450, 560, 757, 872, 931, 974, 1075], "glibcxx_3": 142, "libgcc_": 142, "downgrad": 142, "cmake_find_root_path": [142, 932], "cmake_sysroot": [142, 932], "viewpoint": 142, "bye": [142, 654, 658, 660, 661, 662, 1071], "relocat": 142, "pack": [142, 146, 192, 478, 504, 783, 817, 855, 857], "fragil": 142, "sdk": 142, "job": [142, 163, 173, 232, 391, 854, 862, 879, 880, 881, 950, 968, 980, 984, 1060, 1092], "buildroot": 142, "encount": [142, 171, 219, 223, 862, 863, 889], "ct_prefix": 142, "categori": [143, 155, 410, 1057], "crosstool": [143, 247, 710, 853, 932, 934, 941, 942, 943], "1399": 143, "dell": 143, "xp": [143, 408], "grintovec": [143, 198], "plan\u0161arsko": 143, "jezero": 143, "\u010de\u0161ka": [143, 198], "ko\u010da": [143, 198], "traunstein": [143, 167, 319], "zierlersteig": [143, 167], "bigbluebutton": [143, 147, 1106], "deploi": [143, 171, 301, 306, 426, 747, 784, 785, 862, 863, 868, 870, 874], "consumpt": 143, "buildmanag": 144, "embeddedentwicklung": 144, "anpassungen": 144, "paketen": 144, "rootfilesystem": [144, 934], "dient": 145, "vermarktung": 145, "angebot": 145, "referenz": [145, 234], "kursteilnehm": [145, 319], "beendigung": 145, "entstandenen": 145, "zur\u00fcckgreifen": 145, "finden": [145, 149, 158, 1106], "sofern": 145, "kund": [145, 158], "w\u00fcnscht": 145, "abstufungen": 145, "\u00f6ffentlichkeit": [145, 1123], "vorab": [145, 158, 194], "besprochen": 145, "folgend": [145, 164, 175, 220, 1122], "hierbei": 145, "anwendung": [145, 1128], "g\u00e4nzlich": 145, "abgesehen": 145, "ausdr\u00fccklich": 145, "zustimmt": 145, "namen": [145, 164, 174, 223, 845, 1130], "individuen": 145, "prinzipiel": 145, "erw\u00e4hnt": [145, 158], "erlaubni": 145, "sollten": [145, 213, 251], "vorgehen": [145, 231, 1123, 1130], "speziel": [145, 174, 175, 234, 1119, 1122, 1125, 1129], "anbietet": 145, "nie": [145, 154, 166, 319, 1111], "zug\u00e4nglich": 145, "onlinekursen": 145, "m\u00f6glichkeit": [145, 148, 166, 1109, 1128, 1129], "\u00fcbungsmateri": 145, "zustimmen": 145, "einzeln": [145, 158], "teilnehm": [145, 154, 158, 166, 319, 1116, 1123], "keinesfal": 145, "ver\u00f6ffentlicht": 145, "verschiedenst": 145, "m\u00f6glichkeiten": [145, 158, 1125, 1128], "entstanden": [145, 158, 166], "nichtsdestotrotz": [145, 1109], "verf\u00fcgung": [145, 164, 1111, 1128], "accompani": [146, 167, 256, 258, 1058, 1117], "privaci": [146, 163, 167, 168], "guidelin": [146, 163, 863], "certainli": [146, 889], "redhat": [146, 268, 404], "gitk": [146, 817], "traine": [146, 173], "visibl": [146, 172, 192, 258, 287, 334, 336, 338, 362, 364, 395, 396, 400, 405, 406, 471, 619, 710, 728, 861, 863, 925, 996, 1024, 1067], "suppos": [146, 167, 223, 286, 450, 735, 757, 774, 796, 854, 902, 1049, 1092], "respositori": [146, 158], "user1": 146, "user2": 146, "user3": 146, "untrack": 146, "beast": 146, "similarli": 146, "unstag": 146, "accident": [146, 541, 673, 741, 784, 785, 824, 888, 996], "7434a5b": 146, "100755": 146, "cowork": 146, "employ": [146, 408], "favourit": 146, "forward": [146, 209, 235, 236, 237, 246, 267, 268, 282, 339, 354, 363, 369, 370, 376, 380, 383, 387, 396, 400, 405, 406, 591, 628, 635, 666, 676, 707, 709, 710, 757, 817, 841, 849, 853, 854, 864, 869, 1112], "enumer": [146, 152, 154, 164, 170, 175, 176, 180, 182, 188, 189, 191, 212, 216, 221, 227, 241, 245, 262, 265, 343, 390, 410, 627, 718, 753, 863, 1122], "unpack": [146, 150, 170, 176, 180, 182, 187, 191, 195, 200, 203, 208, 212, 213, 219, 224, 226, 230, 231, 242, 247, 249, 252, 261, 265, 286, 301, 680, 757, 783, 855, 857, 861, 932, 939, 945, 946, 985, 1003, 1112], "869": [146, 206], "124": [146, 150, 164, 171, 174, 181, 187, 190, 200, 203, 206, 211, 213, 216, 219, 223, 226, 229, 241, 244, 251, 261, 265, 271, 1012], "kib": 146, "a4b9666": 146, "bf5bb75": 146, "went": [146, 167], "retri": [146, 875, 974, 1087], "noon": [146, 917, 1005], "lack": [146, 388, 413, 481, 619, 621, 863, 943], "unavoid": 146, "her": [146, 150, 175, 219, 222, 621, 792, 813, 1021, 1066, 1122], "confid": 146, "merg": [146, 192, 759, 917, 1003, 1124], "gentl": [147, 1113], "histori": [147, 155, 191, 209, 235, 236, 238, 240, 282, 347, 624, 628, 630, 666, 707, 709, 710, 716, 759, 788, 794, 845, 1055, 1061, 1070, 1114, 1118, 1125], "tinker": 147, "solder": 147, "sysv": [148, 932], "grace": [148, 260, 279, 693], "sigterm": [148, 928, 929], "sigkil": 148, "beeinflussen": 148, "shutdown": [148, 203, 219, 226, 229, 244, 251, 261, 265, 309, 735, 848, 925, 963], "herausgefunden": [148, 154, 319], "nachfolgend": [148, 1107], "manpag": 148, "verhindern": 148, "genehm": 148, "systemd": [148, 203, 219, 226, 229, 244, 251, 261, 265, 757, 795, 848, 863, 928, 1107], "inhibit": [148, 626, 664], "children": [148, 402], "vererbt": 148, "attributen": 148, "setprior": 148, "execv": [148, 886, 931], "sched_reset_on_fork": 148, "ORed": 148, "privileg": [148, 203, 219, 226, 229, 244, 251, 261, 265, 813, 848], "playback": 148, "prevent": [148, 151, 200, 206, 209, 216, 219, 247, 384, 390, 394, 794, 883, 888, 917, 928, 954, 966, 996], "evad": 148, "rlimit_rttim": 148, "getr": 148, "anstel": 148, "prozessen": 148, "teilen": 148, "prozess": [148, 302, 1116, 1118, 1125, 1126, 1129], "startenden": 148, "gestarteten": 148, "weitergegeben": 148, "ausser": [148, 175, 296, 1122], "unterbunden": 148, "pthread_attr_setinheritsch": 148, "pthread_inherit_sch": 148, "pthread_explicit_sch": 148, "newli": [148, 390], "sowa": [148, 154, 319, 1107], "\u00e4hnlich": [148, 179], "wikipedia": [148, 209, 398, 541, 863, 874, 918, 950, 1071], "filter_driv": 148, "offenbar": [148, 164, 319, 1109], "miser": [148, 579], "netzwerkdrivern": 148, "hoher": 148, "interruptlast": 148, "verbessern": 148, "n\u00f6tig": [148, 1118], "diesbez\u00fcglich": 148, "\u00fcberlegt": 148, "schaltet": 148, "netzwerkdriv": 148, "30107": 148, "linuxfound": 148, "workgroup": 148, "napi": [148, 178, 751], "implementationen": 148, "libmodbu": 148, "freemodbu": 148, "konfiguriert": [148, 149], "jumbo": 148, "jumbo_fram": 148, "mtu": [148, 856], "1500": [148, 206], "eth0": 148, "9000": [148, 206], "ifconfig": [148, 751], "abgelegt": 148, "konfigur": [148, 150], "ifac": [148, 453, 467, 690], "vorsicht": [148, 174, 845], "routern": 148, "fragmentieren": 148, "tracerout": 148, "netzwerkverbindung": 148, "g\u00fcte": 148, "wissen": [148, 319, 1109, 1116], "sar": 148, "sysstat": 148, "schmerzvol": 148, "netter": 148, "ausprogrammiert": 149, "konflikt": [149, 1124], "parallelen": [149, 1128], "demonstr": [149, 151, 171, 243, 485, 529, 1057, 1061, 1104], "mutter": [149, 319, 320, 1128], "aller": [149, 158, 319, 320, 1107, 1128], "danach": [149, 1106], "hilf": [149, 174, 301, 306, 1118], "gefixt": 149, "kommunk": 149, "variablen": [149, 150, 175, 176, 179, 182, 187, 215, 233, 234, 293, 296, 302, 1108, 1118, 1119, 1122], "frontal": 149, "vorgef\u00fchrt": 149, "diskuss": [149, 158, 180, 319], "dank": [149, 154, 319, 1107], "beispielcod": 149, "h\u00e4ndisch": [149, 1110], "zweier": [149, 175, 1122], "bewundern": 149, "k\u00f6nnt": 149, "euch": 149, "erinnern": [149, 319], "blinken": 149, "liess": 149, "irgendwo": [149, 223], "hatten": [149, 154, 319], "edg": [149, 193, 739, 897, 898], "waren": [149, 154, 1107, 1111], "kleinen": 149, "empf": 149, "unbedingt": [149, 164, 1107], "beispielprogramm": 149, "horcht": 149, "gesprochen": 149, "ausf\u00fchrlich": [149, 234], "schamlos": 149, "eigenwerbung": 149, "vortrag": [149, 1106], "linuxtagen": 149, "\u00fcberbleibsel": 149, "ehemaligen": 149, "socketcan": [149, 855, 856], "absorbiert": 149, "worden": [149, 158, 1107], "enth\u00e4lt": [149, 164], "schnuckelig": 149, "aufzeichnen": 149, "replai": [149, 856], "folien": [149, 158, 166, 1106], "freitag": [149, 1107], "kerneldrivertag": 149, "sorri": [149, 155, 796], "emanuel": 149, "beispieldriv": 149, "random": [149, 151, 167, 179, 191, 203, 204, 207, 211, 213, 216, 219, 224, 226, 229, 251, 260, 279, 296, 301, 344, 431, 433, 438, 447, 474, 480, 493, 494, 495, 496, 498, 499, 500, 531, 684, 788, 863, 874, 893, 921, 955, 967, 990, 1062, 1074, 1085], "han": 149, "findet": 149, "angeboten": [149, 1106], "promin": [149, 683, 753], "implementiert": [149, 164, 195, 1116, 1130], "gute": [149, 166, 1116, 1123], "anfang": [149, 150, 158], "mcp2515": [149, 757], "angesprochen": [149, 166], "fortgeschrittener": [149, 166], "einpflegt": 149, "agiert": 149, "mcp251x": 149, "at91": 149, "soc": [149, 861, 862, 863, 897], "deinem": 149, "stecker": 149, "verbaut": 149, "at91_can": 149, "lacht": 149, "zeilenweisen": 150, "nutzdaten": [150, 203], "extrahieren": [150, 177], "wollend": [150, 1123], "spalt": 150, "offensichtlich": [150, 1110], "separiert": 150, "felder": 150, "antwort": [150, 251], "stdtype": 150, "gscheitesten": 150, "aufeinanderfolgend": 150, "whitespac": [150, 211, 219, 265, 332, 1001, 1024, 1083], "nimmt": [150, 175, 187, 211, 213, 219, 251, 1109, 1122], "tupl": [150, 163, 168, 170, 172, 176, 180, 182, 188, 189, 191, 195, 198, 201, 202, 204, 205, 207, 208, 212, 214, 215, 216, 221, 224, 227, 228, 230, 240, 242, 245, 248, 249, 252, 262, 264, 266, 270, 271, 286, 301, 457, 959, 977, 978, 985, 986, 991, 1000, 1003, 1032, 1055, 1079, 1080, 1112], "weiss": [150, 154, 164, 1125, 1130], "rauskommen": 150, "aaa": [150, 211, 223, 229, 265], "tbbb": 150, "tccc": 150, "feld0": 150, "feld1": 150, "feld2": 150, "ccc": [150, 229], "optional": [150, 1109], "splittet": 150, "bearbeitet": [150, 1129], "manuel": [150, 174, 179], "ddd": 150, "eee": 150, "maxsplit": [150, 219, 265, 410], "restfield": 150, "len": [150, 151, 152, 154, 164, 174, 179, 181, 182, 187, 190, 191, 195, 196, 200, 203, 206, 211, 213, 216, 219, 223, 226, 229, 241, 244, 251, 261, 265, 272, 293, 296, 410, 753, 857, 958, 971, 984, 986, 992, 994, 1001, 1003, 1005, 1006, 1050, 1071, 1075, 1079, 1082], "10101010": 150, "switchnumb": 150, "rsplit": [150, 219, 265, 410, 1001], "l1": [150, 153, 164, 181, 187, 190, 200, 203, 206, 211, 213, 219, 223, 226, 229, 232, 241, 244, 248, 251, 261, 265, 271, 448], "l2": [150, 153, 164, 181, 187, 190, 195, 200, 203, 206, 213, 219, 223, 226, 229, 232, 241, 244, 248, 251, 261, 265, 271], "\u00e4nderung": [150, 164, 1130], "87": [150, 164, 174, 179, 181, 187, 190, 196, 203, 206, 211, 213, 219, 223, 226, 229, 232, 241, 244, 251, 261, 265, 271, 296, 301, 306, 1012, 1059, 1060], "zeigen": [150, 844], "dasselb": 150, "objekt": [150, 164, 174, 265], "140070310441600": 150, "ver\u00e4ndert": 150, "91": [150, 164, 174, 179, 181, 187, 190, 196, 200, 203, 206, 211, 213, 216, 219, 223, 226, 232, 241, 244, 251, 261, 265, 271, 296, 301, 306, 1059, 1060], "140070371015728": 150, "92": [150, 151, 174, 179, 181, 183, 187, 190, 196, 203, 206, 211, 213, 216, 219, 223, 226, 229, 232, 241, 244, 251, 261, 265, 271, 296, 301, 306, 841, 1059, 1060], "attributeerror": [150, 164, 200, 206, 211, 213, 216, 219, 223, 226, 229, 232, 241, 244, 248, 251, 261, 265, 271, 954, 967, 968, 975], "gottseidank": 150, "alternativ": 150, "aufruf": [150, 164, 170, 174, 219, 297], "paaren": 150, "keyerror": [150, 153, 164, 174, 181, 190, 200, 203, 206, 211, 213, 216, 219, 226, 229, 241, 244, 251, 261, 265, 271, 296, 954, 1003, 1080], "nix": [150, 151, 164, 182, 190, 211, 213, 216, 241, 261, 296, 482], "umstaendlich": 150, "einfach": [150, 164, 175, 179, 261, 1110, 1111, 1116, 1122, 1124, 1126, 1128, 1130], "102": [150, 164, 174, 179, 181, 187, 196, 200, 203, 206, 211, 213, 216, 219, 223, 226, 229, 232, 241, 244, 248, 251, 261, 265, 271, 296, 301, 306], "103": [150, 164, 174, 181, 187, 196, 203, 206, 211, 213, 216, 219, 223, 226, 229, 232, 241, 244, 251, 261, 265, 271, 296], "104": [150, 152, 164, 174, 179, 181, 187, 200, 203, 206, 211, 213, 216, 219, 223, 226, 229, 232, 241, 244, 251, 261, 265, 271, 296, 1012], "106": [150, 164, 174, 179, 181, 187, 190, 196, 200, 203, 206, 211, 213, 216, 219, 223, 226, 229, 241, 244, 248, 251, 261, 265, 271, 296, 839], "setdefault": [150, 191, 211, 226, 241, 244, 251, 261, 265, 271, 1003], "107": [150, 164, 174, 179, 181, 183, 187, 190, 203, 206, 211, 213, 219, 223, 226, 229, 241, 244, 251, 261, 265, 271, 296, 298, 397], "meinvoelligsinnlosertyp": 150, "sinnlose_addit": 150, "sinnlobj": 150, "112": [150, 164, 171, 174, 179, 181, 187, 196, 200, 203, 206, 211, 213, 219, 223, 226, 229, 241, 244, 248, 251, 261, 265, 271, 296, 839], "113": [150, 164, 174, 179, 181, 187, 190, 200, 203, 206, 211, 213, 219, 223, 226, 229, 232, 241, 244, 248, 251, 261, 265, 271, 433], "__main__": [150, 154, 164, 169, 187, 190, 200, 203, 204, 206, 211, 213, 216, 219, 223, 226, 229, 232, 244, 251, 261, 265, 271, 296, 301, 955, 958, 962, 968, 976, 1087, 1093], "0x7f64a8934890": 150, "114": [150, 152, 164, 174, 181, 187, 196, 200, 203, 206, 211, 213, 219, 223, 226, 229, 241, 244, 251, 261, 265, 271], "115": [150, 164, 174, 179, 181, 187, 200, 203, 206, 211, 213, 219, 223, 226, 229, 241, 244, 251, 261, 265, 271], "116": [150, 164, 174, 181, 187, 196, 200, 203, 206, 211, 213, 216, 219, 223, 226, 229, 241, 244, 251, 261, 265, 271], "nochwenigersinnvol": 150, "der_absolute_unsinn": 150, "super": [150, 166, 167, 174, 188, 190, 191, 206, 214, 217, 221, 240, 244, 255, 264, 447, 952, 954, 971, 1055, 1062], "unsinn": 150, "uebertreibs_jetzt_bitt": 150, "117": [150, 164, 174, 181, 187, 200, 203, 206, 211, 213, 216, 219, 223, 226, 229, 241, 244, 251, 261, 265, 271], "118": [150, 164, 174, 181, 196, 200, 203, 206, 211, 213, 216, 219, 223, 226, 229, 241, 244, 251, 261, 265, 271, 839, 1012], "0x7f64a894a790": 150, "119": [150, 164, 174, 181, 183, 190, 203, 206, 211, 213, 219, 223, 226, 229, 241, 244, 251, 261, 265, 271, 298], "121": [150, 152, 164, 174, 181, 187, 190, 196, 203, 206, 211, 213, 219, 223, 226, 229, 241, 244, 251, 261, 265, 271], "1335": 150, "122": [150, 152, 164, 174, 179, 181, 187, 190, 200, 203, 206, 211, 213, 216, 219, 223, 226, 229, 241, 244, 251, 261, 265, 271, 933], "819508": 150, "123": [150, 164, 174, 181, 182, 187, 190, 196, 200, 203, 206, 211, 213, 216, 219, 223, 226, 229, 241, 244, 251, 261, 265, 271, 343, 856, 1012, 1019, 1093], "uptim": 150, "timedelta": [150, 169, 196, 198, 251], "358": [150, 206, 251, 265, 404], "125": [150, 174, 179, 181, 187, 190, 200, 203, 206, 211, 213, 219, 223, 226, 229, 241, 244, 251, 261, 265, 271], "irgendwann_einmal_gewesen": 150, "834972": 150, "126": [150, 164, 174, 179, 181, 187, 190, 203, 206, 211, 213, 216, 219, 223, 226, 229, 241, 244, 261, 265, 271], "datetime_from_batteri": 150, "840837": 150, "127": [150, 164, 174, 179, 181, 187, 190, 196, 203, 206, 211, 213, 219, 223, 226, 229, 241, 244, 261, 265, 271, 872, 880], "846889": 150, "woher": [150, 213], "ausschauen": 150, "sinnlo": [150, 213], "sinnlos": [150, 187, 265], "repraesent": 150, "129": [150, 164, 174, 181, 183, 190, 200, 203, 206, 211, 213, 216, 219, 223, 226, 229, 232, 241, 244, 251, 261, 265, 271, 298], "130": [150, 164, 174, 181, 196, 203, 206, 211, 213, 216, 219, 223, 226, 229, 241, 244, 251, 255, 261, 265, 271, 626, 730, 999], "completedprocess": [150, 219, 229], "returncod": [150, 219, 229], "erfolgreich": 150, "beendet": [150, 1128], "schau": 150, "du": [150, 164, 219, 226, 232, 880, 885], "verwendest": 150, "anzuzeigen": 150, "cell": [150, 163, 854, 979, 1060], "gesendet": 150, "ausf\u00fchrt": 150, "krieg": 150, "131": [150, 164, 174, 181, 190, 196, 203, 206, 211, 213, 219, 223, 226, 229, 241, 244, 261, 265, 271, 676], "capture_output": [150, 229], "stdout": [150, 183, 187, 191, 200, 206, 216, 219, 229, 237, 244, 246, 247, 267, 268, 286, 294, 296, 301, 305, 307, 597, 710, 781, 783, 787, 798, 799, 842, 845, 848, 853, 883, 928, 955, 1005, 1007, 1012, 1017, 1021, 1024, 1039, 1074, 1083, 1118], "ndrwxrwxr": [150, 229], "mar": [150, 219, 343, 784, 785, 788, 802, 814, 836, 839, 841, 865, 879, 889, 931, 934, 943], "2607": 150, "33768": 150, "ndrwxr": 150, "xr": [150, 421, 784, 785, 802, 804, 805, 813, 814, 839, 854, 861, 862, 863, 931, 943, 945, 946, 982], "switchzeug": 150, "sondern": [150, 164, 175, 1107, 1116, 1119, 1122, 1129], "keiner": [150, 164, 1111], "seinen": [150, 164], "formuliert": [150, 158], "logisch": [150, 174], "irgendwa": [150, 196, 211, 213], "konverti": 150, "musst": 150, "dich": 150, "festlegen": 150, "133": [150, 164, 174, 181, 203, 206, 211, 213, 219, 223, 226, 229, 241, 244, 251, 261, 265, 271], "stdout_as_utf8": 150, "utf": [150, 191, 200, 203, 204, 206, 210, 216, 219, 229, 251, 265, 271, 986, 1005, 1052, 1085], "134": [150, 164, 174, 181, 190, 203, 206, 211, 213, 216, 219, 223, 226, 229, 232, 241, 244, 261, 265, 271, 685], "135": [150, 164, 174, 181, 190, 203, 206, 211, 213, 219, 223, 226, 229, 232, 241, 244, 261, 265, 271], "drwxrwxr": [150, 229, 839, 897, 932, 933, 934, 943, 945], "drwxr": [150, 784, 785, 802, 839, 854, 861, 862, 863, 943, 945], "136": [150, 152, 164, 174, 181, 190, 203, 206, 211, 213, 216, 219, 223, 226, 229, 241, 244, 261, 265, 271, 422], "fuer": [150, 211, 216, 223], "listdir": [150, 257, 261, 308, 410], "ipynb_checkpoint": [150, 229], "gitignor": [150, 411, 933], "137": [150, 161, 164, 174, 181, 203, 206, 211, 213, 216, 219, 223, 226, 229, 232, 241, 244, 261, 265, 271], "rekurs": 150, "iterieren": [150, 154, 164, 179, 187], "dirpath": 150, "dirnam": [150, 203, 206, 257, 410, 481, 708, 1092], "checkpoint": [150, 200, 206, 216, 219], "itg": 150, "scope": [150, 158, 164, 175, 176, 179, 210, 222, 235, 236, 238, 247, 259, 270, 278, 282, 301, 338, 344, 448, 497, 518, 531, 533, 542, 627, 668, 680, 683, 698, 699, 709, 710, 953, 998, 1112, 1122, 1126], "getter": [150, 539, 587], "setter": [150, 190, 975], "fibo": [150, 151, 170, 190, 204, 654, 656, 958], "listcomprehens": 150, "generatorexpress": [150, 151], "switchdb": 150, "schema": [150, 231, 528, 1011], "michi": 150, "pyexec": 150, "ifadminstatu": 150, "ifdescr": 150, "iflastchang": 150, "snmpenginetim": 150, "ifoperstatu": 150, "fein": [150, 174], "helferlein": 150, "hochtrabend": 150, "nennt": 150, "funktional": 150, "138": [150, 164, 174, 181, 190, 203, 206, 211, 213, 219, 223, 226, 229, 241, 244, 261, 265, 271, 1012], "139": [150, 164, 174, 181, 190, 203, 206, 211, 213, 219, 223, 226, 229, 241, 244, 261, 265, 271], "140": [150, 164, 174, 181, 190, 203, 206, 211, 213, 216, 219, 223, 226, 229, 232, 241, 244, 248, 261, 265, 271, 626], "l_quadrat": 150, "141": [150, 164, 174, 181, 203, 206, 211, 213, 219, 223, 226, 229, 232, 241, 244, 261, 265, 271, 343, 839], "kompliziert": [150, 164, 216, 219, 241, 1107, 1126], "anm": 150, "versionen": [150, 220], "aufgebaut": 150, "rausnehmen": 150, "konfigurationsfil": 150, "configpars": 150, "142": [150, 164, 174, 181, 190, 203, 206, 211, 213, 219, 223, 226, 229, 241, 244, 248, 261, 265, 271, 874, 919], "143": [150, 164, 174, 181, 190, 203, 206, 211, 213, 216, 219, 223, 226, 229, 232, 241, 244, 261, 265, 271], "liste_als_str": 150, "144": [150, 164, 174, 181, 190, 197, 203, 206, 211, 213, 216, 219, 223, 226, 229, 232, 241, 244, 251, 261, 265, 271, 422], "145": [150, 164, 174, 181, 190, 203, 206, 211, 213, 216, 219, 223, 226, 229, 232, 241, 244, 261, 265, 271, 1076], "herbert": 150, "146": [150, 164, 174, 181, 190, 203, 206, 211, 213, 219, 223, 226, 229, 232, 241, 244, 261, 265, 271], "heraussen": 150, "147": [150, 164, 174, 181, 190, 203, 206, 211, 213, 216, 219, 223, 226, 229, 241, 244, 261, 265, 271, 792], "148": [150, 164, 174, 181, 190, 203, 206, 211, 213, 219, 223, 226, 229, 232, 241, 244, 261, 265, 271, 545], "149": [150, 164, 174, 181, 203, 206, 211, 213, 216, 219, 223, 226, 229, 232, 241, 244, 261, 265, 271], "151": [150, 164, 174, 181, 190, 203, 206, 211, 213, 219, 223, 226, 229, 232, 241, 244, 261, 265, 271, 308], "152": [150, 164, 174, 181, 190, 203, 206, 211, 213, 219, 223, 226, 229, 241, 244, 261, 265, 271, 308], "mein_dict": 150, "gerhard": 150, "175": [150, 164, 181, 190, 203, 206, 211, 213, 216, 219, 223, 226, 229, 241, 244, 265, 271], "154": [150, 164, 174, 181, 190, 203, 206, 211, 213, 219, 223, 226, 229, 241, 244, 261, 265, 271, 839], "dict_as_json_str": 150, "155": [150, 164, 174, 181, 190, 203, 206, 211, 213, 216, 219, 223, 226, 229, 232, 241, 244, 261, 265, 271, 308], "gelesenes_dict_von_json": 150, "nahm": 151, "woch": [151, 171, 319, 320, 1107], "anspruch": 151, "platz": 151, "gesammelten": 151, "notizen": 151, "schnell": [151, 154, 174, 195, 220, 1110], "sachen": [151, 177], "is_prim": [151, 174, 177, 182, 1034], "divisor": [151, 182, 708, 1026], "unmodifi": [151, 164, 200, 211, 431, 477, 528, 542, 861, 863, 954, 967, 1037], "randomnumb": 151, "howmani": 151, "randrang": [151, 179, 203, 211, 213, 216, 219, 223, 226, 229, 251, 296, 955, 990], "prev": [151, 747], "cur": [151, 271, 348], "fibonum": 151, "tend": [151, 250, 253, 260, 279, 398, 730, 796, 946], "input_list_str": 151, "input_list": [151, 226, 1037], "__n": 151, "__lt__": [151, 213, 216, 219, 223, 241, 244, 265], "rh": [151, 200, 204, 219, 336, 378, 394, 448, 462, 528, 542, 544, 668], "__le__": [151, 213, 216, 219, 223, 241, 244, 265, 974], "__eq__": [151, 213, 216, 219, 223, 241, 244, 265, 974], "__iadd__": 151, "iadd": 151, "__add__": [151, 216, 219, 223, 241, 265, 974], "new_numb": [151, 206], "__radd__": [151, 216, 223, 241, 974], "radd": 151, "lh": [151, 200, 204, 336, 378, 394, 448, 462, 518, 528, 542, 544, 668, 788], "makesnosens": 151, "__number": 151, "input_numb": 151, "numnber": 151, "list_of_squar": 151, "shorter": [151, 962, 973, 1005, 1054], "compehens": 151, "effort": [151, 223, 257, 391, 392, 409, 862], "local_assign": 151, "read_global_vari": 151, "enclos": [151, 219, 361], "local_shadows_glob": 151, "explicit_global_assign": 151, "creation": [151, 260, 279, 692, 694, 699, 709, 710, 816, 853, 883, 894, 899, 908, 914, 925, 934, 996, 1005, 1006, 1094], "captur": [151, 234, 235, 236, 238, 258, 282, 286, 301, 666, 667, 670, 709, 710, 854, 950, 1112], "create_funct": 151, "inner_funct": 151, "whic": 151, "f_one": 151, "f_two": 151, "launch": [151, 167], "somewhat": [151, 192, 398, 431], "discov": [151, 163, 170], "area": [151, 160, 193, 223, 753, 862, 1123, 1129], "scikit": [152, 154, 201, 1094], "manipul": [152, 413, 562, 685, 708, 755, 861, 874, 883, 918, 930, 993, 1011], "appreci": [152, 203, 796, 1012], "beauti": [152, 166, 167, 170, 188, 190, 191, 198, 209, 213, 214, 217, 223, 240, 264, 301, 374, 504, 562, 899, 956, 1005, 1012, 1055], "spectral": [152, 1057], "matlab": [152, 154, 207, 319, 1054, 1057], "mat": 152, "scipi": [152, 154, 182, 201, 1094], "loadmat": [152, 154], "sklearn": [152, 154, 1058, 1060, 1094], "pixel": 152, "rgb": [152, 154, 310], "dimens": [152, 154, 1060, 1115], "xkcd": 152, "schafer": [152, 163, 166, 167, 170, 188, 191, 198, 201, 204, 214, 217, 228, 231, 240, 264, 270, 301, 306, 1055, 1076, 1077, 1079, 1080, 1081, 1082, 1084, 1095], "keith": [152, 163, 167, 188, 201, 214, 228, 231, 264, 270, 1055], "galli": [152, 163, 167, 188, 201, 214, 228, 231, 264, 270, 1055], "sci": 152, "kit": [152, 310], "spyder": [152, 163, 979], "pycharm": [152, 163, 257, 979], "retain": [152, 367, 997], "invoc": [152, 448], "comparison": [152, 169, 192, 206, 209, 219, 227, 265, 343, 347, 353, 504, 668, 988, 1030], "misfeatur": 152, "png": [152, 154, 417, 933, 1057], "imgfil": 152, "veggi": [152, 154, 1057], "pillow": [152, 154], "welcom": 152, "cooper": [152, 693], "477x686": 152, "imgarrai": [152, 154], "ndim": [152, 1060], "477": [152, 206, 251], "dtype": [152, 154, 248, 251, 255, 1060, 1076, 1077, 1079, 1080, 1081, 1082], "uint8": 152, "255": [152, 187, 203, 206, 211, 213, 216, 219, 223, 226, 244, 251, 261, 265, 271, 910], "172": [152, 164, 181, 203, 206, 211, 213, 216, 219, 223, 226, 229, 232, 241, 244, 251, 261, 265, 271, 393], "nrow": [152, 154], "ncol": [152, 154], "reshap": [152, 154, 188, 201, 214, 228, 231, 264, 270, 1055, 1058, 1060], "irrelev": [152, 169, 174, 207, 343, 385, 408, 802, 986, 1071], "colorspac": 152, "mpl_toolkit": 152, "mplot3d": 152, "axes3d": 152, "pyplot": [152, 181, 200, 229, 232, 951, 1009, 1060], "plt": [152, 181, 200, 229, 232, 951, 1009, 1060], "fig": 152, "add_subplot": 152, "set_xlabel": 152, "set_ylabel": 152, "set_zlabel": 152, "ndindex": 152, "scatter": [152, 728], "rgb_linear": 152, "n_cluster": [152, 154], "copy_x": 152, "max_it": 152, "n_init": 152, "n_job": 152, "precompute_dist": 152, "random_st": [152, 1058, 1060], "tol": 152, "verbos": [152, 159, 413, 686, 783, 817, 819, 990, 1087], "cluster_cent": 152, "int32": [152, 394], "327222": 152, "cluster_centers_": [152, 154], "20529747": 152, "50360681": 152, "3796182": 152, "94408609": 152, "75471018": 152, "53133237": 152, "226": [152, 164, 183, 203, 206, 211, 213, 216, 219, 223, 226, 229, 244, 251, 261, 265, 271, 298], "64913628": 152, "76939951": 152, "92569235": 152, "71464963": 152, "47333306": 152, "60640492": 152, "8888303": 152, "92275244": 152, "84313209": 152, "157": [152, 164, 174, 181, 203, 206, 211, 213, 219, 223, 226, 229, 241, 244, 261, 265, 271], "30685398": 152, "43988931": 152, "03959132": 152, "225": [152, 164, 203, 206, 211, 213, 219, 223, 226, 229, 244, 251, 265, 271, 417, 1012], "55934051": 152, "182": [152, 164, 181, 203, 206, 211, 213, 216, 219, 223, 226, 232, 241, 244, 261, 265, 271], "98255893": 152, "3232048": 152, "241": [152, 203, 206, 211, 213, 216, 219, 226, 229, 244, 261, 265, 271, 1012], "37322907": 152, "159": [152, 164, 174, 181, 203, 206, 211, 213, 216, 219, 223, 226, 229, 241, 244, 261, 265, 271], "54158234": 152, "51775529": 152, "idx": [152, 154, 219], "cube": 152, "concaten": [152, 154, 191, 203, 204, 211, 219, 265, 295, 343, 409, 842, 991, 999, 1085], "axi": [152, 154, 255, 1079, 1080], "reduced_img": [152, 154], "fromarrai": [152, 154], "float": [153, 164, 168, 170, 172, 174, 181, 182, 187, 190, 200, 203, 204, 206, 209, 211, 213, 216, 219, 224, 227, 241, 244, 249, 261, 265, 271, 296, 297, 324, 325, 326, 330, 340, 342, 343, 347, 377, 386, 391, 410, 438, 447, 553, 554, 643, 861, 919, 929, 967, 985, 1000, 1007, 1012, 1109, 1113], "franziska": [153, 154], "baseexcept": [153, 190, 219, 223, 244, 954], "callabl": [153, 167, 203, 216, 226, 229, 244, 251, 261, 265, 272, 626, 668, 690, 698, 968, 969, 1006], "forev": [153, 368, 369], "rescu": [153, 211, 541, 562, 684, 686, 757, 952], "pooh": [153, 554], "hex": [153, 164, 174, 181, 196, 206, 216, 229, 241, 244, 251, 261, 271, 296, 312, 481, 863, 1000], "0x7f03d41165f0": 153, "nonexist": 153, "react": [153, 168, 170, 172, 273, 390, 551, 861, 878, 954, 1114], "ensu": 153, "catch": [153, 193, 209, 232, 258, 286, 312, 457, 475, 490, 492, 526, 552, 555, 571, 577, 581, 586, 590, 593, 594, 611, 618, 619, 620, 621, 622, 623, 654, 662, 700, 710, 929], "jessa": [153, 174, 181, 203, 232], "verdammt": [153, 301], "ipython": [153, 190, 200, 206, 216, 219, 244, 261, 839], "bd3a1af9b474": 153, "issubclass": [153, 190, 206, 219, 244], "rais": [153, 154, 168, 170, 172, 190, 191, 200, 204, 206, 207, 211, 213, 216, 217, 219, 223, 231, 232, 265, 286, 312, 952, 959, 965, 975, 1001, 1003, 1079, 1080, 1085], "bummer": [153, 206, 700, 999], "peter": [153, 176, 213, 223, 292, 293, 992], "paul": [153, 292, 293, 992], "mari": [153, 992], "pet": 153, "perfectli": [153, 209], "bloh": [153, 190], "blech": [153, 261, 639, 1074], "range_iter": [153, 164, 179, 196, 203, 211, 213, 216, 219, 229, 241, 244, 251, 261], "0x7f03d402e570": 153, "stopiter": [153, 164, 179, 190, 196, 200, 203, 206, 211, 213, 216, 219, 223, 229, 241, 244, 251, 261, 265, 271, 654, 662, 954, 959], "einf\u00fchrung": [154, 158, 171, 173, 320, 978, 1108, 1113, 1114, 1116, 1125, 1127], "beantwortung": [154, 319], "herrschaft": [154, 319], "gestellt": [154, 164, 319, 1111], "schulungsr\u00e4umen": [154, 319], "platzhirsch": [154, 319], "schlagen": [154, 319], "spass": [154, 319, 1116, 1118, 1123], "unglaublich": [154, 319], "lustig": [154, 175, 319, 1107, 1118], "vermittelt": [154, 319, 1128], "gelernt": [154, 319, 1116], "anwend": [154, 319], "beachten": [154, 175, 319, 1122], "zudem": [154, 319], "kursleit": [154, 319], "sympathisch": [154, 319], "kompet": [154, 319], "w\u00fcrde": [154, 164, 319], "weiterempfehlen": [154, 319], "wiederholen": [154, 319], "christoph": [154, 196, 319], "jemand": [154, 319], "lassen": [154, 164, 175, 319, 1110, 1116, 1122, 1126, 1130], "bevor": [154, 1116, 1123, 1130], "anf\u00e4ngerthemen": 154, "vorbei": [154, 213, 219, 1119], "herumzureiten": 154, "gehackt": [154, 194], "zeug": [154, 1125], "chef": 154, "vorgespr\u00e4ch": 154, "\u00fcbungsbeispiel": [154, 164], "mitgegeben": 154, "ausgehend": [154, 175, 319], "spektralbild": 154, "sagt": [154, 211], "verwend": [154, 187, 319], "clusteringalgorithmu": 154, "kategorisieren": 154, "abgebildeten": 154, "st\u00fccke": [154, 158], "erkennen": [154, 1111], "hab": 154, "erlaubt": [154, 164, 1107], "kursvorbereitung": 154, "appet": 154, "reduzieren": 154, "farbredukt": 154, "farben": 154, "bilddaten": 154, "schreiben": [154, 176, 301, 302, 306, 1109, 1126, 1128], "interoperiert": 154, "nahtlo": [154, 1116, 1123], "zufal": [154, 180, 1110], "alpha": [154, 219, 265, 1010], "ausgangsbild": 154, "abzuschneiden": 154, "restoren": 154, "algorithmu": [154, 174, 219, 223, 226], "reduc": [154, 354, 363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 426, 628, 666, 707, 709, 710, 863, 1057], "acht": [154, 174, 175, 219, 251, 271, 1122], "\u00fcberschaubar": 154, "ausdrucksst\u00e4rk": 154, "bemerkbar": 154, "wegschneiden": 154, "pil": 154, "kmean": 154, "nrgba": 154, "disregard": [154, 347], "arbitrarili": [154, 716, 889, 893, 952], "linear_rgb": 154, "rgba": 154, "ergeben": 154, "testprogramm": 154, "imndata": 154, "teilzeitmitarbeiterin": 154, "studiert": 154, "physik": 154, "folgendem": [154, 196, 1130], "bekackten": 154, "inputformat": 154, "parsen": [154, 179], "zwischendurch": 154, "gruppenarbeit": 154, "h2o": 154, "dat": 154, "mass": [154, 260, 279], "0000000e": 154, "2662399e": 154, "5994910e": 154, "4391972e": 154, "0048070e": 154, "0078250e": 154, "hessian": 154, "hartre": 154, "bohr": 154, "kamu": 154, "05054e": 154, "61610e": 154, "00000e": 154, "20781e": 154, "08051e": 154, "83024e": 154, "06829e": 154, "42629e": 154, "65256e": 154, "52600e": 154, "69570e": 154, "91733e": 154, "04388e": 154, "34292e": 154, "04780e": 154, "63758e": 154, "19019e": 154, "41217e": 154, "11622e": 154, "21912e": 154, "11752e": 154, "04198e": 154, "36702e": 154, "14839e": 154, "71613e": 154, "96373e": 154, "40456e": 154, "21369e": 154, "24236e": 154, "60956e": 154, "84350e": 154, "29686e": 154, "92365e": 154, "einigen": [154, 175, 319], "runden": [154, 164], "nachdenken": 154, "einigerma\u00dfen": 154, "zufrieden": 154, "load_dat": 154, "matrix_lin": 154, "readlin": [154, 181, 183, 190, 191, 203, 204, 210, 219, 226, 251, 261, 293, 817, 1005, 1085], "vergeigt": 154, "matrix_el": 154, "unnecessari": [154, 338, 368], "triangular": 154, "max": [154, 164, 182, 187, 200, 206, 209, 211, 213, 216, 221, 226, 244, 352, 368, 504, 553, 794, 855, 1060], "row_no": 154, "__name__": [154, 190, 191, 204, 213, 219, 223, 244, 261, 265, 294, 301, 953, 955, 958, 962, 1085], "bildverarbeitung": 154, "ahnung": [154, 196], "beeeeeep": 155, "broad": [155, 427, 1062, 1112, 1113], "responsibl": [155, 916, 1092], "sane": [155, 312, 794, 1066, 1092], "interfer": [155, 398, 411, 862], "paradigm": [155, 793, 801, 854, 862, 1127], "breakag": [155, 737], "nontrivi": [155, 163, 167, 303, 979, 1086], "inappropri": [155, 325, 330, 431, 715], "conclus": [155, 163, 170, 755], "awkward": 155, "encourag": [155, 716], "hear": 155, "predat": [155, 720, 846, 925], "transport": [155, 207, 209, 478, 700, 1051, 1074], "doubt": [155, 200, 206, 216, 219, 223, 685, 986], "schulungsbeschreibung": [156, 1106], "drehbuch": 156, "workshop": 156, "infolgedessen": 156, "virtuel": [156, 220, 1116, 1126, 1127], "konzipiert": [156, 166, 319], "add_subdirectori": [157, 418, 422, 923, 1101], "group1": 157, "group2": 157, "montag": [158, 166, 167, 188, 192, 1107], "vorbereitung": [158, 319, 1109], "mitbringen": 158, "teilzunehmen": 158, "stattfinden": [158, 234], "folgt": 158, "hierzu": 158, "privatheitsrichtlinien": 158, "bauanleitung": 158, "ausprobieren": 158, "willkommen": 158, "schulungsbeschreibungen": 158, "raii": [158, 260, 279, 526, 710], "stl": [158, 310, 374, 486, 487, 488, 489, 491, 493, 494, 495, 496, 498, 499, 500, 501, 502, 526, 527, 565, 569, 591, 593, 594, 608, 623, 634, 710, 1111, 1112, 1113], "scott": [158, 633, 688], "meyer": [158, 436, 688], "primer": [158, 1099], "sonstig": 158, "argh": [158, 369, 620, 648, 954, 1087, 1099], "kursanforderung": 158, "erg\u00e4nzend": 158, "lasst": 158, "testgetrieben": 158, "entwickeln": 158, "testcas": [158, 1093], "aufgab": [158, 164, 194, 1119], "hacken": 158, "diskutieren": 158, "niederschrift": 158, "geschehenen": 158, "geh\u00f6renden": 158, "privaten": 158, "entwickelt": [158, 1116, 1123, 1125], "verl\u00e4uft": 158, "ansehen": 158, "clonen": 158, "wann": [158, 166], "zugeh\u00f6rigen": 158, "entspricht": 158, "unbetr\u00e4chtlich": 158, "gcc5": 158, "laufen": [158, 1107], "darau": [158, 166], "installationsanleitung": 158, "benutzung": [158, 301, 306], "zuerst": [158, 1130], "aggreg": [158, 399, 410, 528, 769, 1076, 1099], "klassen": [158, 164, 170, 302, 1111], "konstruktoren": [158, 182, 234, 302, 1111], "methoden": [158, 164, 176, 296, 1111], "referenzen": [158, 164, 175, 176, 234, 1111, 1122], "klass": [158, 187], "\u00e4quival": 158, "\u00fcbergab": 158, "langsam": [158, 164, 213], "ausbauen": 158, "dynamisch": [158, 189, 1109, 1111, 1126], "dynmem": 158, "demonstrieren": 158, "alloziert": [158, 164, 181], "delet": [158, 170, 200, 219, 234, 244, 265, 296, 395, 426, 429, 468, 481, 493, 497, 510, 518, 533, 536, 595, 598, 603, 626, 636, 637, 638, 666, 671, 683, 684, 685, 686, 709, 710, 735, 765, 794, 1067, 1094, 1111, 1112], "konstruktor": 158, "destruktor": 158, "vermeiden": [158, 164, 1128], "dtor": [158, 426, 512, 598, 603, 634, 637, 671], "ausflug": [158, 174, 215], "capac": [158, 579], "\u00fcbung": [158, 175, 176, 1122], "handgestrickt": 158, "fallen": [158, 1110, 1111], "lustvol": 158, "erleiden": 158, "teufel": [158, 1110], "smart": [158, 234, 256, 302, 303, 304, 319, 408, 481, 595, 635, 636, 666, 686, 691, 699, 707, 709, 710, 1112, 1115], "shared_ptr": [158, 193, 209, 235, 236, 238, 256, 258, 282, 440, 504, 595, 626, 635, 666, 681, 687, 688, 691, 699, 707, 709, 710, 1112], "unique_ptr": [158, 193, 209, 235, 236, 238, 256, 258, 282, 426, 433, 440, 466, 467, 504, 595, 634, 635, 666, 681, 684, 691, 699, 706, 707, 709, 710, 1112], "demonstriert": 158, "vorgriff": 158, "sortieren": [158, 1111], "employeerecord": 158, "parametrisierbarem": 158, "koordinatentyp": 158, "102ff": 158, "arten": [158, 1109], "containern": 158, "pointerarithmetik": 158, "wiederholung": [158, 175, 182, 218, 1122], "iteratoren": [158, 221], "laufzeitverhalten": [158, 176], "verbesserungen": 158, "gegen\u00fcb": [158, 1109], "6ff": 158, "lambda": [158, 190, 191, 204, 206, 209, 221, 234, 241, 258, 261, 266, 410, 504, 569, 641, 666, 671, 676, 678, 690, 693, 698, 709, 710, 950, 1111, 1112, 1113], "gegen\u00fcberstellung": 158, "sort_algorithm_reverse_lambda": 158, "vererbung": [158, 1111], "fallstudi": 158, "livegehackt": 158, "angebunden": 158, "komplex": [158, 211, 213, 219, 226, 251, 1128], "aufbauen": 158, "vergleichbaren": 158, "anbinden": 158, "wurden": [158, 166], "eigen": [158, 177, 1111, 1116, 1123, 1128, 1129], "kapitel": [158, 301, 306, 1109], "behandelt": [158, 1106], "vorbeigehen": 158, "dcmake_cxx_flag": 159, "dcmake_install_prefix": [159, 416], "libgtest": [159, 160, 256, 258, 1099, 1101], "claim": [159, 336, 545, 547, 548, 792, 885], "simlp": 159, "concret": [159, 167, 193, 256, 426, 433, 438, 453, 515, 601, 603, 698, 967, 1062], "find_packag": [159, 161, 1101], "add_execut": [159, 411, 417, 423, 470, 505, 508, 511, 514, 517, 520, 523, 617, 920, 927, 932, 933, 1098, 1101, 1103], "add_test": [159, 424, 508, 1098, 1101], "emphasi": [159, 282], "ultim": [159, 190, 210, 536, 701, 862], "luke": [159, 219, 1101], "thetoplevel": 159, "findgtest": [159, 161, 1101], "gtest_root": 159, "dgtest_root": 159, "paranoidli": 159, "bitrot": [160, 1101], "var": [160, 164, 203, 219, 226, 229, 244, 251, 261, 265, 462, 757, 789, 819, 839, 844, 845, 848, 945], "libgmock": [160, 256, 258], "gmock": [160, 1099], "dcmake_build_typ": [160, 413], "loudli": [160, 536, 760, 870], "flathub": 161, "appstream": 161, "visualstudio": [161, 220, 321], "flatpakref": 161, "stone": 161, "snap": 161, "hate": [161, 530], "textual": [161, 163, 478], "findpackagehandlestandardarg": 161, "gtest_librari": 161, "gtest_include_dir": 161, "gtest_main_librari": 161, "378": [161, 203, 206, 213, 251, 1012], "_fphsa_failure_messag": 161, "197": [161, 164, 181, 190, 203, 206, 211, 213, 216, 219, 223, 226, 232, 244, 261, 265, 271], "find_package_handle_standard_arg": 161, "occur": [161, 223, 328, 343, 348, 349, 395, 419, 501, 696, 755, 817, 846, 916, 1000, 1001, 1005, 1117], "gessmann": 161, "cpoint_demo": 161, "cmakefil": [161, 411, 417, 422, 932, 933], "cmakeoutput": 161, "sigh": [161, 193, 481, 688, 1046], "jail": 161, "dict_extensions_suit": 162, "thing_suit": 162, "xsv": 162, "dict_extens": 162, "wednesdai": [163, 171, 253], "thursdai": [163, 167], "publicli": [163, 518], "freedom": [163, 398, 604], "spontan": 163, "cost": 163, "agil": [163, 177, 408, 1086], "methodologi": 163, "formul": [163, 259, 410, 643, 701, 880, 1115], "diadact": [163, 979], "anaconda": [163, 257, 979], "dictat": [163, 273, 347, 386, 925, 979, 980, 1067, 1084, 1087, 1114], "volumin": [163, 979], "nodepad": [163, 979], "configurabilti": [163, 1084], "eclips": [163, 979, 1074], "pydev": [163, 979], "seemingli": [163, 167, 931, 979, 1055], "strang": [163, 861, 979], "emac": [163, 183, 261, 817, 839, 931, 979, 1084], "immutabilii": 163, "crisi": 163, "slept": 163, "lunch": 163, "squeez": 163, "Such": [163, 238, 242, 635, 666, 676, 682, 691, 699, 707, 709, 710, 931, 1092], "takeawai": 163, "nonverb": 163, "antenna": 163, "Being": [163, 800, 841, 863, 995], "stubborn": 163, "greybeard": 163, "distutil": 163, "azur": 163, "devop": [163, 978], "heavyweight": [163, 307, 690], "reach": [163, 211, 610, 685, 716, 721, 788, 889, 1000], "afternoon": 163, "simplic": [163, 448, 788, 855, 878, 952], "paral": 163, "imposs": [163, 223, 394, 430, 654, 665, 755, 907], "expand": [163, 219, 265, 368, 369, 860, 889, 931, 933], "entertain": [163, 167, 188, 191, 214, 240, 264, 1055], "david": [163, 166, 167, 175, 188, 191, 214, 240, 255, 259, 260, 264, 278, 279, 302, 303, 634, 683], "beazlei": [163, 166, 167, 175, 188, 191, 214, 240, 259, 260, 264, 278, 279, 302, 303], "freelanc": 163, "raymond": [163, 166, 167, 170, 174, 175, 188, 191, 198, 214, 217, 240, 264], "hetting": [163, 166, 167, 170, 174, 175, 188, 191, 198, 214, 217, 240, 264], "bias": 163, "humor": [163, 861, 1000], "emphas": [163, 170, 192, 521, 712, 720, 737, 1087], "dissect": [163, 167, 255, 671, 959, 1055], "multiprocess": [163, 167, 217, 259, 260, 279, 1055, 1116, 1123, 1127], "truli": [163, 167, 1055], "chri": [163, 167, 188, 1055], "wilcox": [163, 167, 188, 1055], "frontier": [163, 167, 240, 264, 1055], "whop": [163, 167, 240, 264, 946, 1055, 1062], "simul": [163, 307, 308, 481], "covid": 163, "apart": [163, 223, 260, 279, 361, 627, 855, 957], "ipykernel_launch": [164, 216, 219], "57bd7d77": 164, "6e54": 164, "4dcd": 164, "b7a8": 164, "452f82f88569": 164, "welt": [164, 174, 187, 296, 319, 1107, 1128], "gern": [164, 1106, 1116, 1123], "doku": [164, 174, 241], "aeh": 164, "__doc__": [164, 187, 190, 200, 203, 206, 211, 213, 216, 219, 223, 226, 229, 232, 241, 244, 251, 265, 294, 296, 955, 983, 1006], "interaktiven": 164, "modu": 164, "formatierung": [164, 174, 234], "\u00fcbernimmt": 164, "nachdem": [164, 174], "welch": [164, 204], "hamma": 164, "bieten": [164, 1126], "sech": [164, 174, 187, 219, 226, 251, 265], "zurueck": [164, 223, 261], "objektidentit\u00e4t": [164, 182], "0x7fe9d8578dc0": 164, "referenzieren": 164, "wechselt": 164, "zeigt": [164, 174, 1123], "identit\u00e4t": 164, "0x7fe9c4454d90": 164, "listen": [164, 170, 175, 176, 180, 215, 234, 301, 741, 856, 872, 1074, 1122, 1127, 1129], "ausdrucksstark": 164, "trotzdem": [164, 1116, 1123], "lesbar": [164, 213], "beid": [164, 179, 195, 1130], "modifizieren": 164, "modifik": 164, "sichtbar": [164, 319], "gerechnet": 164, "valueerror": [164, 174, 190, 196, 203, 211, 213, 216, 219, 223, 226, 229, 232, 244, 251, 265, 954, 1001], "typeerror": [164, 200, 203, 206, 211, 213, 216, 219, 223, 226, 229, 241, 244, 251, 261, 265, 295, 953, 954, 967, 974, 997, 1006, 1063, 1080], "gel\u00f6scht": 164, "retten": 164, "uff": 164, "140641996429568": 164, "\u00e4ndern": [164, 176, 1130], "erzeugt": [164, 174], "operanden": 164, "unver\u00e4ndert": 164, "new_l": [164, 219, 987], "140641996429632": 164, "hurra": [164, 181, 244], "killerfeatur": 164, "abcabc": [164, 203], "sequentiel": [164, 174, 213, 218, 1111], "suche": 164, "Suche": [164, 176, 187, 195, 213], "umst\u00e4ndlich": [164, 174], "andrea": [164, 165, 223, 647, 654], "pfeifer": 164, "gefundener_us": 164, "glauben": 164, "klammern": 164, "begrenz": 164, "interpretiert": 164, "overriden": 164, "ausdruck": 164, "evaluierungsreihenfolg": 164, "9223372036854775808": 164, "einstellig": 164, "schreibt": [164, 845, 1130], "datenmengen": 164, "abzulegen": 164, "sucht": 164, "solchen": [164, 174], "vorstellungsvermoegen": 164, "milliarden": 164, "sebastian": 164, "hugo": [164, 206], "machma": 164, "behandeln": 164, "nichtvorhandensein": 164, "ausnahm": 164, "regel": 164, "mim": 164, "victor": 164, "festzustellen": 164, "evaluiert": 164, "aufgerufen": 164, "operand": [164, 181, 200, 203, 229, 345, 346, 347, 353, 544, 545, 547, 548, 643, 676, 974, 988], "bereit": [164, 175, 1106, 1111, 1122], "gesamtergebni": 164, "jaja": [164, 219], "rechten": 164, "sparen": 164, "potschert": [164, 176, 179, 182, 206, 213, 226], "berechnung": [164, 213], "summ": [164, 187, 213, 219, 223, 226, 251], "einzig": [164, 454, 468, 1125, 1128], "iteriert": [164, 174], "bildet": [164, 219], "primitiveren": 164, "intelligenteren": 164, "0x7fe9c43c3c90": 164, "letzt": [164, 179, 224], "schleif": [164, 175, 176, 180, 1122], "jede": [164, 301, 306, 1106, 1129, 1130], "selb": [164, 174], "k\u00fcrzer": 164, "vergleicht": 164, "objektidentit\u00e4ten": 164, "objektinhalt": 164, "modifiziert": 164, "kopieren": [164, 301, 306, 1111], "vermeintlich": 164, "modifiktionen": 164, "sch\u00fctzen": 164, "l3": [164, 181, 213, 219, 229, 241, 251, 261, 271, 448], "kopi": [164, 213], "klar": [164, 174, 1107], "geschachtelt": [164, 175, 176, 1122], "gleicher": 164, "referenziert": [164, 174], "erachtet": 164, "ersparst": 164, "kopien": 164, "ran": [164, 236, 416, 433, 477, 478, 480, 481, 546, 685, 948, 1099], "mehreren": [164, 180, 1129], "parametern": [164, 187], "beliebigen": [164, 845], "definieren": 164, "vergleichbar": 164, "unterst\u00fctzen": 164, "ihn": [164, 223], "\u00e4pfel": 164, "birnen": 164, "verglichen": 164, "hingegen": [164, 174, 1125], "php": [164, 194, 210, 688], "falschem": 164, "uebergeben": 164, "vergleich": [164, 187, 195, 224, 234], "aepfeln": 164, "140641996137808": 164, "add_to_list": 164, "__defaults__": [164, 213, 223, 244, 265, 997], "meine_list": [164, 174], "defaultwert": 164, "benutzt": [164, 1116], "allerhand": 164, "seiteneffekten": 164, "aufpassen": 164, "ewig": 164, "existierend": 164, "unf\u00e4ll": 164, "wechselwirkungen": 164, "eventuellen": 164, "globalen": [164, 174], "156": [164, 174, 181, 203, 206, 211, 213, 216, 219, 223, 226, 229, 241, 244, 261, 265, 271], "erzwingt": 164, "158": [164, 174, 181, 190, 203, 206, 211, 213, 216, 219, 223, 226, 229, 232, 241, 244, 248, 261, 265, 271], "160": [164, 174, 181, 190, 203, 206, 211, 213, 219, 223, 226, 241, 244, 255, 261, 265, 271, 415, 710], "gesucht": 164, "genauer": 164, "n\u00e4chst\u00e4u\u00dferen": 164, "162": [164, 174, 181, 203, 206, 211, 213, 216, 219, 223, 226, 229, 241, 244, 261, 265, 271], "nirgend": 164, "163": [164, 174, 181, 197, 203, 206, 211, 213, 219, 223, 226, 229, 241, 244, 261, 265, 271], "gibtsnetglob": 164, "gibtsnet": 164, "164": [164, 174, 181, 190, 203, 206, 211, 213, 219, 223, 226, 229, 241, 244, 261, 265, 271], "nameerror": [164, 179, 213, 219, 244, 265, 271, 954, 996], "aufgabenstellung": 164, "kandidat": 164, "ersten": [164, 166, 179, 271, 293, 1108, 1128, 1130], "unsportlich": 164, "zweiten": [164, 166, 271], "unnachhaltig": 164, "dritten": [164, 271], "gelegenheit": 164, "gab": [164, 166], "erz\u00e4hlen": [164, 1109], "165": [164, 174, 181, 203, 206, 211, 213, 216, 219, 223, 226, 229, 241, 244, 251, 261, 265, 271, 1012], "seq": [164, 182, 244, 747, 919, 957], "fromkei": [164, 210, 215, 227], "166": [164, 174, 181, 203, 206, 211, 213, 219, 223, 226, 241, 244, 261, 265, 271], "167": [164, 174, 181, 203, 206, 211, 213, 216, 219, 223, 226, 229, 241, 244, 251, 261, 265, 271], "xxx": [164, 181, 203, 211, 213, 219, 229, 251, 295, 297, 377, 453], "kksvjhbsk": 164, "sgkysdudsvvc": 164, "dict_kei": [164, 232, 261, 1003], "diesmal": 164, "169": [164, 174, 181, 190, 203, 206, 211, 213, 216, 219, 223, 226, 232, 241, 244, 261, 265, 271], "170": [164, 181, 190, 197, 203, 206, 211, 213, 216, 219, 223, 226, 229, 241, 244, 261, 265, 271], "irgendein": [164, 196], "171": [164, 181, 183, 190, 203, 206, 211, 213, 219, 223, 226, 229, 232, 241, 244, 261, 265, 271, 298], "sonst": [164, 174, 211, 213, 226], "kategori": 164, "number_str": 164, "173": [164, 181, 203, 206, 211, 213, 216, 219, 223, 226, 229, 241, 244, 251, 261, 265, 271, 848], "ihm": [164, 166, 175], "174": [164, 181, 203, 206, 211, 213, 216, 219, 223, 226, 232, 241, 244, 261, 265, 271, 839], "176": [164, 181, 203, 206, 211, 213, 216, 219, 223, 226, 229, 241, 244, 265, 271], "177": [164, 181, 203, 206, 211, 213, 219, 223, 226, 229, 241, 244, 261, 265, 271], "178": [164, 181, 190, 203, 206, 211, 213, 219, 223, 226, 232, 241, 244, 261, 265, 271], "179": [164, 171, 181, 203, 206, 211, 213, 216, 219, 223, 226, 229, 232, 241, 244, 251, 261, 265, 271], "180": [164, 181, 203, 206, 211, 213, 216, 219, 223, 226, 229, 232, 241, 244, 251, 261, 265, 271, 410, 741], "181": [164, 181, 203, 206, 211, 213, 219, 223, 226, 241, 244, 251, 261, 265, 271, 410], "heisst": [164, 176, 180, 181, 1110, 1116], "sequenz": 164, "kopiert": 164, "unterschi": [164, 181, 187, 211], "vermutlich": [164, 1128], "sobald": [164, 166], "183": [164, 181, 190, 203, 206, 211, 213, 219, 223, 226, 229, 232, 241, 244, 251, 261, 265, 271], "\u00fcbergeben": 164, "184": [164, 181, 203, 206, 211, 213, 216, 219, 223, 226, 232, 241, 244, 251, 261, 265, 271], "it1": 164, "it2": 164, "multipli": [164, 191, 204, 223, 265, 633, 1085], "n2": [164, 223], "combined_iter": 164, "186": [164, 181, 190, 203, 206, 211, 213, 216, 219, 223, 226, 229, 232, 241, 244, 251, 261, 265, 271], "schlecht": 164, "simplen": 164, "transformationen": 164, "generieren": 164, "quadratzahlen": [164, 213], "187": [164, 203, 206, 211, 213, 219, 223, 226, 229, 232, 241, 244, 251, 261, 265, 271], "quadrat": 164, "naeherung": 164, "performant": 164, "gen_squar": 164, "189": [164, 181, 203, 206, 211, 213, 216, 219, 223, 226, 232, 241, 244, 261, 265, 271], "syntaktisch": [164, 187], "191": [164, 181, 190, 203, 206, 211, 213, 219, 223, 226, 229, 232, 241, 244, 261, 265, 271], "genexpr": [164, 190], "0x7fe9c43f2900": 164, "193": [164, 181, 190, 203, 206, 211, 213, 219, 223, 226, 229, 241, 244, 251, 261, 265, 271], "194": [164, 181, 190, 203, 206, 211, 213, 216, 219, 223, 226, 232, 241, 244, 251, 265, 271], "195": [164, 181, 203, 206, 211, 213, 216, 219, 223, 226, 232, 244, 265, 271], "indent": [164, 179, 197, 204, 210, 219, 220, 356, 977, 980, 990, 1083], "196": [164, 181, 190, 203, 206, 211, 213, 216, 219, 223, 226, 232, 241, 244, 251, 261, 265, 271], "userlist": 164, "nochwa": [164, 213, 251], "dropdown": 164, "dropdownlist": 164, "fehleranf\u00e4llig": 164, "198": [164, 181, 190, 203, 206, 211, 213, 216, 219, 223, 226, 232, 244, 251, 261, 265, 271], "202": [164, 181, 190, 200, 203, 206, 211, 213, 216, 219, 223, 226, 229, 241, 244, 251, 265, 271, 410, 433], "203": [164, 181, 190, 192, 203, 206, 211, 213, 216, 219, 223, 226, 241, 244, 265, 271], "205": [164, 190, 203, 206, 211, 213, 216, 219, 223, 226, 229, 241, 244, 261, 265, 271], "206": [164, 203, 206, 211, 213, 219, 223, 226, 229, 241, 244, 265, 271], "207": [164, 190, 203, 206, 211, 213, 219, 223, 226, 229, 244, 265, 271], "208": [164, 203, 206, 211, 213, 219, 223, 226, 229, 244, 265, 271], "209": [164, 190, 203, 206, 211, 213, 219, 223, 226, 229, 241, 244, 265, 271], "user_a": 164, "user_b": 164, "n\u00e4herung": 164, "nackten": [164, 1109], "210": [164, 190, 203, 206, 211, 213, 219, 223, 226, 244, 251, 265, 271], "hantiert": [164, 1110], "anderem": [164, 1116, 1123], "211": [164, 190, 203, 206, 211, 213, 219, 223, 226, 229, 241, 244, 261, 265, 271], "reviewten": 164, "funktionsaufruf": [164, 226], "sonder": 164, "stackoverflowprogrammierung": 164, "entgegenwirken": 164, "ausholen": 164, "212": [164, 190, 203, 206, 211, 213, 216, 219, 223, 226, 229, 241, 244, 265, 271], "veloc": [164, 190, 297, 997], "length_m": [164, 190, 297, 997], "time_": [164, 190, 297, 997], "213": [164, 203, 206, 211, 213, 216, 219, 223, 226, 229, 241, 244, 265, 271], "spiel": 164, "214": [164, 203, 206, 211, 213, 219, 223, 226, 229, 241, 244, 265, 271], "liegen": 164, "positionel": 164, "215": [164, 203, 206, 211, 213, 219, 223, 226, 229, 241, 244, 251, 265, 271], "param": [164, 174, 187, 204, 232, 265, 639, 688, 689, 862, 918], "216": [164, 190, 203, 206, 211, 213, 219, 223, 226, 241, 244, 251, 265, 271], "217": [164, 203, 206, 211, 213, 216, 219, 223, 226, 229, 244, 251, 261, 265, 271], "218": [164, 203, 206, 211, 213, 216, 219, 223, 226, 229, 241, 244, 251, 261, 265, 271], "219": [164, 190, 203, 206, 211, 213, 219, 223, 226, 229, 241, 244, 261, 265, 271], "entpacken": 164, "positionellen": 164, "221": [164, 190, 203, 206, 211, 213, 219, 223, 226, 229, 241, 244, 251, 261, 265, 271], "kwarg": [164, 190, 217, 219, 223, 244, 265, 952, 956, 977, 1063], "explizi": 164, "rauskletzeln": 164, "222": [164, 203, 206, 211, 213, 219, 223, 226, 229, 241, 244, 261, 265, 271, 417], "223": [164, 203, 206, 211, 213, 216, 219, 223, 226, 229, 244, 251, 265, 271, 1071], "celebrate_another_birthdai": 164, "224": [164, 203, 206, 211, 213, 216, 219, 223, 226, 229, 244, 251, 265, 271], "227": [164, 203, 206, 211, 213, 219, 223, 226, 229, 244, 251, 261, 265, 271], "228": [164, 203, 206, 211, 213, 216, 219, 223, 226, 229, 244, 251, 265, 271], "zeiterfassung": 165, "__pycache__": [165, 191, 204, 1085], "supp": 165, "cpython": [165, 190, 200, 206, 216, 219], "pyc": 165, "dienstag": 166, "anleitung": 166, "offen": [166, 319, 1106], "vorwissen": [166, 1111], "konkreten": [166, 319], "aufgabenstellungen": 166, "dienstgeb": 166, "mitgebracht": 166, "quickstart": [166, 1117], "vorgetragen": 166, "wenngleich": [166, 319, 1116, 1126, 1128, 1129], "un\u00fcblichen": 166, "reihenfolg": [166, 1107], "verbrachten": 166, "firmenprojekt": 166, "entspringenden": 166, "festgehalten": 166, "empfehlungen": 166, "weitergehen": 166, "k\u00f6nnte": [166, 1130], "idiomat": [166, 167, 170, 188, 191, 198, 214, 217, 240, 264, 1055], "lieblingsphras": 166, "bringt": [166, 1109, 1128], "forgiv": [166, 167, 264, 1055], "eafp": [166, 167, 264, 1055], "begriff": [166, 180], "viertelstund": 166, "regex": [166, 179, 204, 206, 231, 232, 241, 264, 271, 999, 1055], "unumg\u00e4nglich": [166, 1124], "textuel": 166, "analysieren": 166, "hero": [166, 167, 188, 191, 214, 240, 264, 1055], "unterhaltsamen": 166, "keynot": [166, 167, 188, 191, 214, 217, 240, 264, 1055], "konferenz": 166, "pydata": [166, 167, 188, 191, 214, 240, 264, 1055], "chicago": [166, 167, 188, 191, 214, 240, 264, 1055], "witzig": 166, "kommt": [166, 181, 191, 194, 220, 1119, 1128, 1130], "selten": 166, "l\u00e4nge": 166, "ganzen": [166, 175, 1122], "abend": 166, "totalschaden": 166, "\u00fcbertragen": 166, "jedem": 166, "angemeldet": 166, "experienc": [167, 256, 258, 319, 983, 1117], "machinelearn": 167, "fuzzi": [167, 206], "improvis": 167, "shall": 167, "jango": 167, "rush": 167, "strong": [167, 217, 346, 1062, 1067], "claus": [167, 170, 200, 206, 216, 221, 243, 648, 957, 990, 993], "whet": [167, 250], "appetit": [167, 250], "get_temperatur": [167, 219, 427, 430, 431, 433, 438, 440, 450, 451, 456, 458, 459, 461, 464, 465, 470, 473, 479, 480, 481, 482, 483, 484, 485, 496, 515, 636, 684, 685, 686, 687, 967, 1043], "__dict__": [167, 187, 190, 191, 203, 204, 213, 216, 219, 223, 232, 244, 261, 265, 968, 974, 1085], "con": [167, 842, 948], "fiction": 167, "get_temperature_celsiu": 167, "competitor": 167, "eana": 167, "get_temperature_fahrenheit": 167, "eanaadapt": 167, "unserthermomet": 167, "revisit": [167, 209, 217, 240, 258, 561], "shift": [167, 208, 386, 398, 530, 579, 862, 974], "visitor": 167, "gang": [167, 1115], "idiom": [167, 527, 664], "classic": [167, 385, 436, 527, 749, 1115], "travers": [167, 399, 672, 684, 954, 959, 995], "convolut": [167, 1063], "__call__": [167, 213, 223, 244, 265, 271, 953], "__str__": [167, 190, 191, 204, 213, 216, 219, 223, 241, 244, 265, 312, 954, 1085], "__repr__": [167, 213, 216, 219, 223, 241, 244, 265], "poor": [167, 209, 339, 354, 363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710, 747, 854, 884, 929], "deleg": [167, 536, 666, 709, 710, 1112], "deck": [167, 192, 504], "sensordata": 167, "sensordata_test": 167, "historydata": 167, "slowli": [167, 521, 626, 739, 854], "csvreport": 167, "csv2sqlite3": 167, "frontend": [167, 537, 931, 949, 1088], "flaskerl": 167, "reiter": [167, 188, 207, 209, 214, 217, 309, 538, 1055], "phrase": [167, 170, 188, 211, 213, 214, 217, 219, 244, 784, 785, 972, 1055], "impress": [167, 384], "brought": [167, 398, 963], "cloth": 167, "extraordinari": 167, "mondai": [168, 170, 172, 173, 198, 247, 253, 256, 258], "preliminari": [168, 170, 171, 172, 173], "homogen": [168, 319], "versu": [168, 170, 172], "immut": [168, 170, 172, 174, 175, 182, 189, 191, 202, 203, 204, 206, 212, 218, 221, 227, 233, 242, 250, 252, 253, 266, 296, 368, 978, 985, 986, 987, 991, 1085, 1122], "datastructur": [168, 192, 210, 991], "exercise4": 168, "uh2ebfw8oym": [168, 172], "f26namfjggw": 168, "5qqq3yzbkp8": 168, "ugharkscop9uthgcoaec": 168, "pairwis": [169, 203, 543], "vale": 169, "bewar": [169, 347, 861, 929, 1060, 1062], "cheaper": [169, 398, 545, 547, 548, 626], "memorywis": 169, "johann": 169, "syntact": [169, 190, 355, 497, 538, 626, 678], "sugar": [169, 626, 678], "allow": [169, 170, 190, 219, 341, 408, 613, 686, 708, 739, 762, 1017, 1092, 1112], "retval": [169, 394, 584, 900], "dlc": 169, "msg1": 169, "readabl": [169, 213, 223, 257, 334, 365, 369, 389, 390, 391, 398, 408, 410, 470, 583, 604, 619, 627, 630, 665, 676, 678, 684, 689, 690, 792, 802, 808, 813, 817, 839, 864, 931, 957, 976, 997, 1005, 1007, 1026], "0x7f41f5ff26a0": 169, "msglist": 169, "0x7f41f5ff4160": 169, "0x7f41f5ff41c0": 169, "291130": 169, "now_timestamp": 169, "1603884859": 169, "3412576": 169, "fromtimestamp": 169, "341258": 169, "372": [169, 206, 213, 251], "45259": 169, "microsecond": [169, 389, 794], "programmverweis": 170, "xy": [170, 213, 216, 251, 546, 995], "zab": 170, "eventcodefil": 170, "definedlisaev": 170, "event_id": 170, "bla": 170, "blubb": 170, "verbessert": 170, "stringformatierung": 170, "ctype": 170, "headerfil": [170, 845], "lst": [170, 206, 799, 1107], "callbackfunc": 170, "datetim": [170, 191, 197, 198, 199, 204, 252, 255, 1012], "observ": [170, 239, 257, 286, 425, 432, 446, 449, 460, 475, 526, 710, 960, 961, 1070, 1115], "longish": 170, "resurrect": [170, 411, 817], "outputsequ": 170, "resist": 170, "uncondition": [170, 760, 954], "suitabl": [170, 219, 265, 730, 854, 903, 967, 976], "analysi": [170, 398, 1057, 1060, 1076], "cp1252": [170, 1049, 1050, 1052], "csvlog": 170, "csv_reader": 170, "recv": [170, 171, 857], "tuesdai": [171, 253, 268], "246": [171, 203, 206, 211, 213, 216, 219, 226, 244, 261, 265, 271, 1071], "corpor": [171, 244], "commandin": [171, 173], "comress": [171, 173], "gzip": [171, 173, 237, 246, 267, 268, 710, 757, 780, 782, 783, 787, 853, 941, 942, 1118], "diagnos": [171, 173, 302, 303, 1116, 1123], "netstat": [171, 173, 246, 267, 268, 1074, 1116, 1123], "netcat": [171, 173, 246, 267, 268], "subshel": [171, 173, 183], "telnetd": 171, "insecur": [171, 870], "proto": 171, "foreign": [171, 247, 369], "34490": 171, "56062": 171, "sshd": [171, 203, 219, 226, 229, 244, 251, 261, 265, 789, 793, 795, 848, 864, 874], "systemctl": [171, 945, 1074], "freedesktop": 171, "systemd1": 171, "quickli": [171, 258, 273, 304, 368, 428, 862, 1114], "unprivileg": 171, "putti": [171, 183, 298], "puttygen": 171, "id_rsa": [171, 870], "authorized_kei": [171, 870], "trivia": 171, "hoorai": [171, 216, 229, 251, 990], "idiot": 171, "blinker": 171, "briana": 171, "mac": [171, 188, 204, 817, 981, 1055, 1095], "wakeup": [172, 209, 312, 316, 698, 710, 753, 853, 862, 881, 894, 904, 914, 916], "patrick": 172, "1996": [172, 206], "wagna": 172, "gernot": 172, "1982": [172, 206], "birthplac": 172, "txt2json": 172, "equip": [173, 247, 309, 854, 1116, 1123], "wobei": 174, "deppert": [174, 187, 296], "sidestep": 174, "builtin_function_or_method": [174, 244, 271], "sozusagen": 174, "genauso": [174, 1106], "aufrufen": [174, 845], "zaehler": 174, "initialwert": 174, "zaehlen": 174, "naechsten": 174, "schleifendurchlauf": 174, "locker": [174, 755], "mein_integ": 174, "1024": [174, 206, 788, 794, 817, 879], "sch\u00fctzt": 174, "passen": [174, 241], "gehandhabt": 174, "1267650600228229401496703205376": [174, 200, 203, 211, 223, 229, 251], "hoch": 174, "rechnen": [174, 301, 306], "tut": [174, 296, 1109], "ausschliesslich": [174, 1118], "ganzzahldivis": 174, "ganzzahligen": 174, "resultat": 174, "gleichen": [174, 1116, 1129], "vorrang": 174, "ghi": [174, 213], "viert": 174, "nwelt": 174, "nwie": 174, "linefe": [174, 183, 204, 211, 330, 331, 999, 1005, 1035, 1083], "bedeutung": [174, 1111, 1118], "unangetastet": 174, "glump": 174, "nebenlaeufigkeitsdemo": 174, "ebenlaeufigkeitsdemo": 174, "l\u00f6sung": [174, 187, 196, 319, 856], "formatierungsm\u00f6glichkeit": 174, "pfx_var1": 174, "pfx_var2": 174, "ausgab": [174, 1109], "notwendig": [174, 1108, 1124, 1125], "abzubrechen": 174, "ignorieren": [174, 175, 181, 1122], "gefunden": [174, 244, 845], "value1": [174, 1015], "501": [174, 206, 1015], "value2": [174, 1015], "799": [174, 203, 206, 1012, 1015], "value3": [174, 1015], "sprachen": [174, 175, 1109, 1122], "neg": [174, 219, 223, 347, 389, 394, 606, 735, 848, 1099], "indiz": 174, "erscheinen": 174, "komisch": 174, "bequem": 174, "mapping_t": 174, "f\u00fcnf": [174, 1116], "sieben": [174, 187, 213, 584], "neun": 174, "explicit": [174, 193, 200, 204, 213, 221, 223, 344, 353, 381, 394, 398, 411, 453, 454, 467, 468, 504, 530, 532, 533, 557, 583, 626, 627, 636, 643, 648, 656, 663, 668, 683, 686, 728, 883, 897, 929, 949, 950, 980, 983, 986, 1066, 1079], "implicit": [174, 200, 213, 223, 334, 340, 344, 509, 625, 627, 643, 817, 886, 972, 986], "primzahlen": 174, "checken": 174, "primzahl": [174, 175, 1122], "checkenden": 174, "zahl": [174, 181, 187, 212, 213, 216, 226, 296], "probier": 174, "gach": [174, 213], "teiler": 174, "teiler_kandidaten": 174, "prim": 174, "gleichema\u00dfen": 174, "vollst\u00e4ndigkeit": 174, "halber": 174, "startend": [174, 213], "schrittweit": 174, "0x7f24f2ac0e50": 174, "ablegen": 174, "0x7f24f2ac0e70": 174, "arschlangsam": 174, "num_comparison": 174, "datenstruktur": [174, 195], "suchen": [174, 195, 844, 1111, 1118], "einf\u00fcgen": [174, 1116], "optimiert": [174, 187], "perfekt": 174, "einitreten": 174, "himmi": 174, "list_reverseiter": [174, 203, 226, 251], "0x7f24ec31d190": 174, "bricht": 174, "beinhart": 174, "liefert": [174, 1118], "lieber": 174, "zweit": [174, 187, 213, 244, 296, 1116], "po": [174, 213, 219, 223, 244, 249, 261, 265, 410, 482, 579, 606], "wirklichkeit": 174, "ordin\u00e4r": 174, "alternativen": 174, "fruit": 174, "gemma": 174, "divisor_candid": 174, "161": [174, 181, 203, 206, 211, 213, 216, 219, 223, 226, 229, 241, 244, 261, 265, 271], "wegen": 174, "dogma": 174, "zugewiesen": 174, "meine_vari": 174, "eine_vari": [174, 251, 261], "angelegt": 174, "streng": 174, "obigem": 174, "dazusagen": 174, "noch_eine_globale_vari": 174, "increment_diese_vari": 174, "offiziel": [175, 177, 185, 188, 191, 192, 194, 210, 222], "leitfaden": 175, "kommentar": [175, 176, 187, 251, 296, 1122], "platziert": [175, 195], "hackereien": 175, "gleicherma\u00dfen": 175, "sogenannten": 175, "semantik": [175, 176, 1122], "sprach": [175, 176, 1109, 1110, 1111, 1122, 1123, 1130], "standarddatentypen": [175, 176, 1122], "literal": [175, 176, 234, 1122], "python2": [175, 213, 1122], "endg\u00fcltig": [175, 1122], "rausl\u00f6schen": [175, 1122], "konstanten": [175, 176, 1122], "typen": [175, 181, 1118, 1122, 1128], "operatoren": [175, 176, 845, 1111, 1122], "angeschnitten": [175, 1122], "vertiefung": [175, 191, 1122], "nocheinm": [175, 319, 1122], "ausdr\u00fcck": [175, 176, 234, 1122], "operatorrangfolgen": [175, 176, 1122], "grundlegenden": [175, 302, 1118, 1122], "sprachelementen": [175, 1122], "rede": [175, 1122], "syntaxdiagramm": [175, 1122], "gespritzt": [175, 1122], "gesamt": [175, 1122], "sperrig": [175, 1122], "n\u00fctzt": [175, 1122], "menschlich": [175, 1122], "abzubilden": [175, 1122], "tabel": [175, 1122], "anweisungen": [175, 176, 1122], "gro\u00dfen": [175, 1122], "fisch": [175, 1122], "instruktiv": [175, 1122], "bedingungen": [175, 176, 1108, 1122], "verzweigungen": [175, 176, 1122], "bedingt": [175, 176, 1109, 1122], "anweisung": [175, 176, 1122], "formulierungen": [175, 1122], "mehrfach": [175, 176, 1122], "fallauswahl": [175, 176, 1122], "benutzereingaben": [175, 1122], "\u00fcberpr\u00fcfen": [175, 1122], "schleifenkonstrukt": [175, 1122], "weitgehend": [175, 1122], "unserem": [175, 1122], "vehikel": [175, 1122], "hilfreich": [175, 1118, 1122], "klarstellung": [175, 1122], "fu\u00dfgesteuert": [175, 176, 1122], "z\u00e4hlergesteuert": [175, 176, 1122], "auslassen": [175, 1122], "kopfgesteuert": [175, 176, 1122], "gewinnt": [175, 1122], "konsol": [175, 1122], "anzeigen": [175, 1118, 1122], "voraussetzung": [175, 1122], "ausblick": [175, 1122], "schnell\u00fcbersicht": [175, 176, 1122], "sprunganweisungen": [175, 176, 1122], "endlosschleifen": [175, 176, 1122], "naja": [175, 1122], "reinschauen": [175, 1122], "mager": [175, 1122], "ersatz": [175, 1122], "ausgelassen": [175, 1122], "eindimensional": [175, 176, 1122], "gefolgt": [175, 213, 1122], "zeichenketten": [175, 176, 1122], "tupel": [175, 176, 179, 1122], "besonder": [175, 176, 1122], "stapel": [175, 176, 1122], "schlangen": [175, 176, 1122], "tempo": [175, 1122], "schauma": [175, 181, 1122], "fallt": [175, 1122], "gscheit": [175, 182, 1122], "gemeinsam": [175, 1106, 1108, 1122, 1125], "dr\u00fcber": [175, 1122], "vielzahl": [175, 1122, 1126, 1129], "l\u00f6sungsm\u00f6glichkeiten": [175, 1122], "eingegangen": [175, 1106, 1122, 1126], "pythonischst": [175, 1122], "bestritten": [175, 1122], "unterprogramm": [175, 176, 1122], "parameter\u00fcbergab": [175, 176, 1122], "r\u00fcckgabewert": [175, 176, 1122], "inner": [175, 176, 196, 410, 953, 1122], "standardbibliotheken": [175, 176, 1122], "funktionalit\u00e4ten": [175, 176, 1122], "berechnet": [175, 211, 219, 1122], "satz": 175, "gepr\u00e4gt": 175, "konferenzen": 175, "definitiv": 175, "sehenswert": 175, "anf\u00e4nger": [175, 1125], "hochinteress": 175, "sprachelement": 176, "elementar": 176, "beliebig": [176, 211, 1123], "gro\u00df": [176, 1128], "vergleichsoperatoren": 176, "strichrechnung": 176, "modulo": [176, 187, 200, 206, 211, 219, 296, 345, 974, 986], "un\u00e4rer": 176, "negat": [176, 200, 223, 846, 974, 986, 1004], "konvertierungen": [176, 1109], "pr\u00e4zendenzregeln": 176, "vertauschen": [176, 187, 296], "kontrollstrukturen": [176, 212, 1109], "verzweigung": 176, "schleifen": [176, 234, 1108], "versuch": [176, 188], "hybrid": [176, 600], "supergscheit": 176, "prozeduren": 176, "funktionen": [176, 180, 234, 302, 1108, 1109, 1111, 1119], "funktionspoint": 176, "funktionsobjekt": 176, "primzahlenbeispiel": 176, "laufzeitfehl": 176, "lokal": [176, 187, 233, 234, 1129], "zuweisen": 176, "fehlerfal": 176, "anschliessend": 177, "interaktiv": 177, "uebungen": 177, "idealerweis": [177, 251], "ueblichen": 177, "negoti": 178, "deiniti": [178, 735, 1117], "unload": [178, 737, 751, 753, 1117], "synchronizt": 178, "spinlock": [178, 710, 734, 749, 755, 759, 761, 765, 766, 772, 775, 776, 778, 853, 917, 1117], "rcu": 178, "halv": 178, "softirq": 178, "tasklet": [178, 755], "irss": 178, "kmalloc": [178, 710, 719, 724, 727, 728, 729, 734, 738, 747, 748, 752, 754, 761, 766, 769, 772, 775, 778, 853], "dma": [178, 710, 734, 752, 754, 796, 853, 878, 879, 880, 1117], "coher": [178, 728], "20201125": [179, 181], "unbekannten": 179, "lookup_t": [179, 182, 296], "12345": [179, 211, 223, 251, 1093], "noch_eine_list": 179, "gesamte_list": 179, "vorl\u00e4ufig": 179, "letz": 179, "indented_text": 179, "nebenbei": [179, 181, 296], "eine_zum_sterben_verurteilte_vari": 179, "ein_set": 179, "sequenzen": 179, "grottenlangsam": 179, "subscript": [179, 213, 217, 374, 561, 582, 586, 1079], "multiple_return_valu": 179, "xyz": [179, 181, 187, 206, 213, 244], "mein_formatierter_str": 179, "my_rang": [179, 219, 265, 271], "retlist": 179, "zeichenkett": 179, "funktionieren": [179, 1111, 1129], "my_list": [179, 190, 232], "airms_eth": 179, "simplizistisch": 179, "bl\u00f6d": 179, "phase": [179, 452, 466, 925, 959], "i_oder_v": 179, "iv": 179, "rms_eth": 179, "vorcompilieren": 179, "acirms_eth": 179, "my_regex": 179, "zeilennumm": 179, "dazuhaben": 179, "meine_zu_sendenden_daten": 179, "345": [179, 200, 206, 219, 251], "234": [179, 203, 206, 211, 213, 216, 219, 223, 226, 229, 244, 261, 265, 271, 296], "meine_zu_sendenden_daten_in_string_form": 179, "ueblicherweis": 179, "ueber": 179, "verschickt": 179, "empfangen": [179, 194], "geschrieben": [179, 1129], "empfaeng": 179, "empfangenen": 179, "natuerlich": 179, "zurueckkonvertieren": 179, "meine_empfangenen_daten_python_form": 179, "gegangen": [179, 232], "wurscht": [179, 219, 845], "returnwerten": 180, "containerdatentypen": 180, "untypisiert": 180, "zeilen": [181, 223, 1118], "neiner": 181, "nund": [181, 200], "nb": 181, "stoppt": 181, "newlin": [181, 183, 196, 219, 244, 261, 292, 323, 330, 343, 983, 999], "ndrin": 181, "drin": [181, 182, 187, 223, 251, 261, 296, 301], "zuviel": [181, 1111], "mischt": 181, "unsupport": [181, 203, 229, 974], "140546731085392": 181, "0x7fd395fb0e50": 181, "0x7fd3900395b0": 181, "new_t": [181, 987], "0x7fd390052800": 181, "667": [181, 203, 206, 226, 232, 521], "2923750584022716461": 181, "529344067295497451": 181, "unhash": [181, 241, 251, 265], "fuenf": [181, 203, 213, 241, 251, 265, 296], "verschluckt": 181, "6000000": 181, "elementen": [181, 195], "nonetyp": [181, 191, 205, 206, 261, 271], "_io": [181, 200, 203, 206, 216, 219, 251, 265, 293, 759], "textiowrapp": [181, 200, 203, 206, 216, 219, 251, 265, 293, 952], "oi": 181, "456": [181, 182, 206, 213, 251, 343], "hansi": [181, 219, 223, 226], "linspac": 181, "11111111": 181, "22222222": 181, "33333333": 181, "44444444": 181, "55555556": 181, "66666667": 181, "77777778": 181, "88888889": 181, "sin": 181, "8961922": 181, "79522006": 181, "19056796": 181, "96431712": 181, "66510151": 181, "37415123": 181, "99709789": 181, "51060568": 181, "54402111": 181, "plot": [181, 200, 229, 232, 951, 1009, 1061, 1062], "line2d": [181, 229, 232], "0x7fd35cd3ef40": 181, "splev": 181, "splrep": 181, "spline": 181, "represent": [181, 200, 219, 672, 767, 861, 862], "spl": 181, "evalu": [181, 200, 205, 211, 221, 326, 346, 351, 353, 361, 368, 369, 447, 448, 461, 462, 633, 643, 800, 817, 954, 988, 990, 997, 1099], "x2": [181, 223], "y2": 181, "0x7fd341a486d0": 181, "speicher": [182, 1109, 1116, 1123], "sch\u00fctze": 182, "gemischten": 182, "operationen": [182, 1128], "interpol": [182, 223, 1060], "lag": 182, "gib": [182, 261], "depp": [182, 211], "ret_l": 182, "uniq_l": 182, "read_excel": [182, 1060], "invit": [183, 600], "effici": [183, 228, 358, 397, 399, 401, 562, 566, 576, 579, 681, 801, 848, 850, 959, 1062, 1076, 1079, 1117], "expans": [183, 845, 846, 1108], "ecdsa": [183, 298], "fingerprint": [183, 298, 865, 916], "sha256": [183, 298, 865], "in22o4vcd400x0bb4flcb5": [183, 298], "vqnrvkvoirgfqq6mapo": [183, 298], "perman": [183, 298], "individu": [183, 298, 350, 408], "sat": [183, 298], "straight": [183, 648, 1080], "startung": 183, "standpoint": 183, "suboptim": [183, 232], "pwned": 183, "hidden": [183, 439, 634, 730, 931], "clumsi": [183, 209, 210, 250, 253, 424, 428, 528, 536, 544, 557, 584, 626, 689, 951, 952, 968, 969, 1079, 1112], "clumsier": 183, "dumpbin": 183, "hmoe": 183, "frcoll": 183, "bunch": [183, 690, 784, 943, 967], "oom": [183, 203, 219, 226, 229, 244, 251, 261, 265, 958], "killer": [183, 203, 219, 226, 229, 244, 251, 261, 265, 992], "amoc": 183, "snapshot": [183, 668, 701, 795, 943], "tinkernut": 183, "raspberi": 183, "awesom": [183, 1092], "tunnel": [183, 249, 864, 872, 883], "centric": [183, 1117], "virtualbox": [183, 796], "cygwin": [183, 236, 238, 256, 796], "assort": 183, "nano": 183, "univers": [183, 258, 481, 883, 980, 1117], "scripe": 183, "voellig": 187, "wohl": [187, 271, 1109, 1130], "selbsterklaerend": 187, "printet": 187, "builtin": [187, 193, 200, 206, 207, 216, 219, 223, 244, 265, 817, 955], "accur": [187, 219, 223, 244, 265, 403], "__weakref__": [187, 203, 213, 216, 219, 223, 232, 244, 265], "weak": [187, 219, 223, 244, 265, 687, 1062], "_abc": [187, 200, 206, 216, 219], "_1": [187, 689, 690], "a123": 187, "vernichten": 187, "laufzeit": 187, "140032702361168": 187, "refcount": [187, 685, 687, 952, 1112], "dezim": 187, "oktal": 187, "0o755": [187, 223, 296], "493": [187, 206, 223], "0b11": [187, 223, 226], "sql": [187, 198, 210, 1067, 1070], "0b11111111": 187, "ordnung": 187, "uhrzeit": 187, "vormittag": 187, "6666666666666666": [187, 223], "nda": [187, 241], "python_dir": 187, "jan": [187, 216, 219, 292, 293, 310, 343, 721, 813, 839, 897, 931, 945, 982], "lowercas": [187, 219, 265, 817, 864, 1000, 1017, 1022], "140032636418048": 187, "ein_iterierbares_d": 187, "extraw\u00fcrschtl": 187, "sex": [187, 200, 222, 223, 1017], "diver": 187, "translation_t": [187, 223, 226, 229], "bag": [187, 235, 236, 238, 282, 411, 421, 707, 709, 710, 925, 987], "green": [187, 223, 450, 481, 482, 546, 854], "blue": [187, 195, 203, 223, 1012], "mengenoperationen": 187, "set1": 187, "set2": 187, "symm_diff": 187, "lisa": 187, "eugeni": [187, 190], "okan": 187, "mcguir": 187, "sinner": 187, "vornam": [187, 195, 196], "nachnam": [187, 195, 196], "persnr": 187, "personalnumm": 187, "doch": [187, 261, 271, 319, 1128], "5000": [187, 200, 206, 971], "4000": [187, 206], "3000": [187, 200, 206, 226, 265], "15000": [187, 206], "uppercas": [187, 219, 265, 817, 1000, 1017], "verfuegbar": 187, "restlichen": 187, "gehaelt": 187, "konstant": [187, 195, 218], "unexpect": [187, 388], "pcap": [188, 208, 214, 1054], "certifi": 188, "math": [188, 191, 201, 203, 204, 206, 214, 223, 228, 231, 264, 270, 528, 530, 980, 1055, 1085], "statist": [188, 201, 214, 223, 228, 231, 264, 270, 402, 919, 1039, 1055, 1060, 1092], "undo": [188, 817, 1055], "brad": [188, 1055], "traversi": [188, 1055], "evaluierung": 189, "eval": [189, 217, 218, 227, 245, 259, 260, 265, 272, 278, 279, 976], "openfil": 190, "hanld": 190, "soemth": [190, 771], "zf": 190, "namelist": 190, "zipdemo": 190, "extracted_nam": 190, "isinst": [190, 191, 204, 206, 219, 232, 244, 974, 1080, 1085], "superclass": [190, 191, 204, 219, 1085], "subclass": [190, 191, 204, 219, 223, 954, 971, 1085], "class1": 190, "class2": 190, "salari": 190, "selina": 190, "orgl": 190, "8010": [190, 206, 410], "birth": [190, 216, 229, 528, 708, 1044, 1045, 1046, 1047, 1050, 1051, 1052], "1622102062": 190, "4778333": 190, "019427776336669922": 190, "009679079055786133": 190, "daniel": [190, 193, 292, 293, 310], "ortner": 190, "num_employe": 190, "__first": 190, "__last": 190, "__address": 190, "_person__first": 190, "_person__last": 190, "_person__address": 190, "_first": 190, "_last": 190, "_address": 190, "do_debug": 190, "val": [190, 219, 689, 862], "ueberhaupt": 190, "l_float": 190, "0x7fd9881b04a0": 190, "functool": [190, 257], "wrapper": [190, 219, 229, 234, 271, 431, 629, 654, 877, 925, 953, 974, 1057], "komplexen": 190, "testfil": 190, "nzeil": [190, 219], "seek": [190, 265, 293], "nth_fibo": 190, "accomod": 190, "0x7fd9801cec10": 190, "0x7fd9801b8d60": 190, "0x7fd9801b4900": 190, "0x7fd98014cd40": 190, "gen": [190, 265], "sequenceno": 190, "kv_pair": 190, "permissionerror": [190, 206, 226, 244, 261, 954], "deni": [190, 206, 226, 261, 453, 467, 800, 836, 864, 872, 884, 889, 890, 954, 1087], "eacc": 190, "filenotfounderror": [190, 206, 244, 954], "64bit": 190, "utc": 190, "python_implement": [190, 191, 204, 1085], "python_version_tupl": [190, 191, 204, 1085], "python39": 190, "dynload": 190, "isfil": [190, 286, 410], "isdir": [190, 410], "my_path": 190, "hopefulli": 190, "the_except": 190, "__class__": [190, 213, 216, 219, 223, 232, 241, 244, 265], "__bases__": [190, 191, 204, 221, 1085], "distrust": 190, "guido": [190, 1082], "incompet": 190, "precondit": [190, 786], "abdefg": 190, "beg": [190, 369, 955], "bdefg": 190, "stringifi": 190, "0x7ffa9c2ac3a0": 190, "formatstr": 190, "ding": [190, 220, 924], "formatierter_str": 190, "oserror": [191, 219, 244, 954], "errno": [191, 204, 206, 226, 261, 394, 735, 884, 899, 928, 929, 946, 954, 1085, 1087], "assertionerror": [191, 216, 232, 244, 954, 967, 1092, 1093], "jjjj": [191, 314, 315, 407], "line_count": 191, "aud": 191, "qualifii": [191, 204, 1085], "trunc": [191, 204, 1085], "hypot": [191, 204, 1085], "seed": [191, 204, 223, 485, 1085], "ascii": [191, 204, 219, 226, 229, 244, 265, 271, 330, 333, 336, 342, 985, 986, 999, 1005, 1066, 1085], "codepoint": [191, 204, 1085], "escap": [191, 204, 219, 241, 323, 1066, 1085], "ord": [191, 204, 223, 244, 994, 1085], "chr": [191, 204, 244, 1085], "isxxx": [191, 204, 1085], "rfind": [191, 204, 219, 265, 271, 1001, 1085], "grammar": [191, 204, 1085], "compon": [191, 204, 401, 841, 916, 1085], "instrospect": [191, 204, 1085], "hasattr": [191, 204, 219, 232, 244, 968, 974, 1085], "__module__": [191, 203, 204, 213, 216, 219, 223, 232, 244, 265, 1085], "bytearrai": [191, 204, 219, 244, 1085], "histogram": [191, 192, 209, 339, 354, 363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 514, 515, 523, 628, 666, 707, 709, 710], "defaultdict": [191, 217, 218, 242], "make_histogram": [191, 515, 524], "fileobj": 191, "stringio": [191, 219], "8859": [191, 209, 210, 226, 229, 249, 271, 410], "pycon": [191, 217, 240, 264, 1055], "2017": [191, 217, 240, 536, 634, 685, 1055], "metaprogram": [191, 218, 240, 643, 967, 1055, 1113], "contract": [191, 193, 240, 1055], "evolut": [191, 240, 817, 1055], "unauthor": [191, 240, 1055], "biographi": [191, 240, 1055], "lesson": [191, 240, 298, 304, 409, 672, 947, 1055], "evolv": [191, 240, 669, 1055], "assembli": [191, 240, 264, 931, 933, 1055, 1114], "revolv": [191, 217, 1055, 1061], "mro": [191, 217, 221, 1055], "cpa": 192, "fahr": [192, 324, 326], "tomorrow": [192, 207, 308, 309], "correctli": [192, 287, 386, 861, 884, 1007, 1066], "consecut": [192, 349, 678, 850], "becam": 192, "44ff": 192, "gig": 192, "upcom": 192, "msi": 192, "wswitch": [192, 390, 627, 726], "wall": [192, 206, 207, 347, 397, 413, 701, 725, 726, 1101], "77ff": 192, "skip": [192, 219, 293, 411, 413, 732, 862, 932, 933, 954, 1094], "89ff": 192, "alongsid": [192, 751], "num_us": 192, "199ff": 192, "204ff": 192, "208ff": 192, "220ff": 192, "222ff": 192, "db_get_user_at_index": 192, "298ff": 192, "strcpy": [192, 209, 336, 382, 518, 533, 536, 637, 671, 857, 915], "strlen": [192, 336, 361, 389, 533, 536, 637, 671, 895, 898, 928], "bahavior": 192, "dest": [192, 336], "strtol": 192, "stringif": [192, 1109], "db_error_str": 192, "sexi": [192, 907], "caleb": 192, "discret": [193, 223, 396, 400, 405, 406, 628, 666, 707, 709, 710], "bleed": 193, "rect": [193, 377, 504], "sphere": [193, 504], "preprocessor": [193, 209, 343, 370, 376, 380, 383, 387, 392, 396, 400, 405, 406, 625, 628, 666, 707, 709, 710, 931, 1099, 1113], "julia": 193, "yesterdai": [193, 209, 217, 257], "distanc": [193, 530, 538, 539, 559, 676, 689], "has_lastnam": 193, "botton": 193, "mingw": [193, 236, 238, 256, 308, 321, 796], "resembl": 193, "tortur": 193, "functor": [193, 235, 236, 238, 282, 570, 666, 667, 709, 710], "rudimentarili": [193, 984, 1058], "gotten": 193, "recourc": 193, "outright": [193, 249, 384, 959, 990], "geniu": [193, 249, 561, 959, 990], "cycl": [193, 228, 408, 410, 654, 685, 699, 709, 710, 853, 854, 862, 894, 908, 914], "livehackingli": 193, "zuordnung": [194, 210, 222], "bissl": 194, "commandlineargument": [194, 1108], "stoff": 194, "summenbeispiel": 194, "showcas": 194, "datenbank": 194, "formulieren": 194, "verbindung": [194, 1106, 1116, 1123, 1129], "schicken": [194, 1106], "schickman": 194, "muessen": 194, "verwandlen": 194, "fractal": [194, 210], "schatzi": 195, "zeitkomplexit\u00e4t": 195, "foreach": 195, "assozi": [195, 1111], "color_transl": 195, "gelb": 195, "yellow": 195, "hashtabl": [195, 1080], "englisch": [195, 1106], "sack": 195, "my_color": 195, "her_color": 195, "pink": 195, "gr\u00fcn": 195, "beig": 195, "vereiningungsmeng": 195, "schnittmeng": 195, "symmetrisch": 195, "differenzmeng": 195, "sei": 195, "gewesen": 195, "waer": [195, 271], "1037190666": [195, 211, 213, 219, 223, 226, 229, 232, 428, 435, 452, 453, 454, 466, 467, 468, 587, 968], "6666010185": 195, "schwarzbauer": 195, "json_string_fuer_den_brows": 195, "response_dict": 195, "svnr": [195, 203, 206, 213, 219, 223, 226, 229, 231, 232, 271, 429, 435, 457, 463, 968, 1075], "pprint": [195, 197, 204, 206, 241, 955, 1066], "formatieren": 195, "endlich": 195, "transfer_string_in_php_am_serv": 195, "u00f6rg": 195, "transfer_string_in_js_am_brows": 195, "response_dict_am_brows": 195, "verwandeln": [195, 1125], "schlussendlich": 195, "geeignet": [195, 1107], "platzieren": 195, "meine_t": 195, "sozialversicherungsnumm": 195, "simmer": 196, "mein_str": 196, "sq": [196, 203, 206, 213, 223, 244, 265], "docu": 196, "nmehrzeilig": 196, "nvon": 196, "mehrzeilig": 196, "deppertem": 196, "irrelevant": 196, "quargel": [196, 197], "190666": 196, "inkorrekt": 196, "geburtsdatum": 196, "endswith": [196, 211, 213, 219, 229, 244, 248, 251, 265, 271, 1001], "sss": 196, "isalpha": [196, 200, 211, 213, 219, 223, 244, 265, 271, 1001], "isidentifi": [196, 200, 213, 219, 229, 244, 265, 271, 1001], "islow": [196, 219, 229, 244, 265, 1001], "arg1": 196, "arg2": 196, "arg3": 196, "abcblah": 196, "blahabcbcabcc": 196, "lah": 196, "rstrip": [196, 200, 204, 211, 215, 216, 219, 229, 244, 261, 265, 271, 292, 301], "lstrip": [196, 211, 215, 219, 244, 265, 271, 301], "wieviel": [196, 1116, 1123], "995237": 196, "datestr": 196, "dt": [196, 757, 861], "strptime": [196, 197, 198, 204], "uuid": 196, "msg_aussi": 196, "sea": [196, 211, 244, 297, 647], "oida": [196, 213, 216, 265, 413], "msgid": 196, "uuid4": 196, "timestamp": [196, 206, 226, 255, 259, 260, 278, 279, 410, 690, 718, 819, 839, 873, 924], "345654325678": 196, "json_aussi": 196, "6563515ef0824d42b459389cefd09127": 196, "json_eini": 196, "sender": [196, 929], "msg_eini": 196, "sauberestextfil": 197, "12345678": 197, "2270": [197, 206], "20333": 197, "360": [197, 206], "91011121": 197, "30333": 197, "36756788": 197, "1112": [197, 206], "1244": [197, 206], "31333": 197, "45011121": 197, "44444": 197, "340": [197, 206, 213, 219, 251, 265], "sauber": 197, "read_sauberes_text_fil": 197, "item1": 197, "item13": 197, "werk": 197, "lort": 197, "charg": [197, 432, 439, 452, 453, 454, 466, 467, 468], "sonderbestandsnumm": 197, "materialkurztext": 197, "lagerplatz": 197, "verfueg_bestand": 197, "bme": 197, "we_datum": 197, "verf\u00fcg": 197, "bestand": 197, "datum": [197, 1062], "sap": [198, 249, 318, 1078], "api2": 198, "opc": [198, 207], "rrdtool": 198, "rrd": 198, "subprocess": [198, 214, 219, 228, 230, 240, 264, 286, 301, 306, 1055], "commmon": [200, 369], "140576769461632": 200, "simplicit": 200, "inputfil": [200, 410], "450": [200, 206, 213, 248, 251], "paragraph": [200, 423], "highli": [200, 481], "pathnam": [200, 206, 216, 219, 716, 883, 887, 999], "displayhook": [200, 206, 216, 219, 294], "excepthook": [200, 206, 216, 219, 294], "uncaught": [200, 206, 216, 219, 504], "systemexit": [200, 206, 216, 219, 241, 244, 294, 954], "behav": [200, 206, 209, 216, 219, 478, 504, 630, 685, 686, 705, 773, 799, 919], "last_typ": [200, 206, 216, 219, 294], "last_valu": [200, 206, 216, 219, 294, 654, 657, 660, 661, 662], "last_traceback": [200, 206, 216, 219, 294], "builtin_module_nam": [200, 206, 216, 219, 294], "pertain": [200, 206, 216, 219], "exec_prefix": [200, 206, 216, 219, 294], "float_info": [200, 206, 216, 219, 294], "float_repr_styl": [200, 206, 216, 219, 294], "hash_info": [200, 206, 216, 219, 294], "hexvers": [200, 206, 216, 219, 294], "int_info": [200, 206, 216, 219, 294], "maxsiz": [200, 206, 216, 219, 294], "largest": [200, 206, 216, 219, 386], "maxunicod": [200, 206, 216, 219, 294], "thread_info": [200, 206, 216, 219, 294], "version_info": [200, 206, 216, 219, 294], "__stdin__": [200, 206, 216, 219, 294], "__stdout__": [200, 206, 216, 219, 294], "__stderr__": [200, 206, 216, 219, 294], "__displayhook__": [200, 206, 216, 219, 294], "__excepthook__": [200, 206, 216, 219, 294], "screen": [200, 206, 216, 219, 793, 799, 817], "exc_info": [200, 206, 216, 219, 294], "getdlopenflag": [200, 206, 216, 219, 294], "dlopen": [200, 206, 216, 219, 1126], "getprofil": [200, 206, 216, 219, 294], "profil": [200, 206, 216, 219, 319, 397, 403, 406, 710, 757, 789, 1110, 1113], "getrefcount": [200, 206, 216, 219, 226, 294], "getrecursionlimit": [200, 206, 216, 219, 294], "getsizeof": [200, 206, 216, 219, 241, 244, 294], "gettrac": [200, 206, 216, 219, 294], "setdlopenflag": [200, 206, 216, 219, 294], "setprofil": [200, 206, 216, 219, 294], "setrecursionlimit": [200, 206, 216, 219, 294], "settrac": [200, 206, 216, 219, 294], "__breakpointhook__": [200, 206, 216, 219, 294], "breakpointhook": [200, 206, 216, 219, 294], "breakpoint": [200, 206, 216, 219, 244], "exctyp": [200, 206, 216, 219], "__unraisablehook__": [200, 206, 216, 219, 294], "unraisablehook": [200, 206, 216, 219, 294], "unrais": [200, 206, 216, 219], "exc_typ": [200, 206, 216, 219, 952], "exc_valu": [200, 206, 216, 219, 952], "exc_traceback": [200, 206, 216, 219, 952], "err_msg": [200, 206, 216, 219], "addaudithook": [200, 206, 216, 219, 294], "audit": [200, 206, 216, 219, 294], "call_trac": [200, 206, 216, 219, 294], "afterward": [200, 206, 216, 219, 348, 398, 535, 685, 686, 687, 700, 753, 925, 1093], "older": [200, 206, 216, 219, 782, 925], "get_asyncgen_hook": [200, 206, 216, 219, 294], "firstit": [200, 206, 216, 219], "get_coroutine_origin_tracking_depth": [200, 206, 216, 219, 294], "coroutin": [200, 206, 216, 219, 282, 656, 657, 659, 660, 661, 662, 666, 709, 710, 1055], "getallocatedblock": [200, 206, 216, 219, 294], "getdefaultencod": [200, 206, 216, 219, 265, 294], "getfilesystemencodeerror": [200, 206, 216, 219, 294], "getfilesystemencod": [200, 206, 216, 219, 294], "getswitchinterv": [200, 206, 216, 219, 294], "setswitchinterv": [200, 206, 216, 219, 294], "is_fin": [200, 206, 216, 219, 294], "set_asyncgen_hook": [200, 206, 216, 219, 294], "set_coroutine_origin_tracking_depth": [200, 206, 216, 219, 294], "cr_origin": [200, 206, 216, 219], "rtld_global": [200, 206, 216, 219], "rtld_xxx": [200, 206, 216, 219], "rtld_lazi": [200, 206, 216, 219], "frequenc": [200, 206, 216, 219, 223, 259, 260, 278, 279, 287, 312, 316, 710, 853, 854, 862, 894, 914, 916], "uninterrupt": [200, 206, 216, 219, 749], "workload": [200, 206, 216, 219], "typic": [200, 206, 216, 219, 247, 257, 273, 369, 409, 413, 430, 454, 478, 610, 728, 777, 802, 932, 977, 987, 1112, 1114], "005": [200, 206, 216, 219], "abiflag": [200, 206, 216, 219, 294], "api_vers": [200, 206, 216, 219, 294], "1013": [200, 206, 216, 219], "ipyk": 200, "base_exec_prefix": [200, 206, 216, 219, 294], "base_prefix": [200, 206, 216, 219, 294], "_ast": [200, 206, 216, 219], "_codec": [200, 206, 216, 219], "_collect": [200, 206, 216, 219], "_f": [200, 206, 216, 219], "byteord": [200, 206, 216, 219, 241, 294, 855], "foundati": [200, 206, 216, 219], "emati": [200, 206, 216, 219], "ipykernel": [200, 206, 216, 219, 244], "zmqshelldisplayhook": [200, 206, 216, 219], "dont_write_bytecod": [200, 206, 216, 219, 294], "opt": [200, 206, 216, 219, 375], "ation": [200, 206, 216, 219], "7976931348623157e": [200, 206, 216, 219], "308": [200, 206, 213, 216, 219, 261, 271], "max_": [200, 206, 216, 219], "epsilo": [200, 206, 216, 219], "2305843009213693": [200, 206, 216, 219], "iphash2": [200, 206, 216, 219], "50922736": 200, "cache_tag": [200, 206, 216, 219], "xv": [200, 206, 216, 219], "bits_per_digit": [200, 206, 216, 219], "sizeof_digit": [200, 206, 216, 219], "syntaxerror": [200, 211, 216, 223, 244, 954], "eol": [200, 223], "9223372036854775807": [200, 206, 216, 219], "1114111": [200, 206, 216, 219], "meta_path": [200, 206, 216, 219, 294], "_frozen_importlib": [200, 206, 216, 219, 244], "builtinimport": [200, 206, 216, 219, 244], "_fro": [200, 206, 216, 219], "homepa": 200, "path_hook": [200, 206, 216, 219, 294], "zipimport": [200, 206, 216, 219], "filefind": [200, 206, 216, 219], "path_importer_cach": [200, 206, 216, 219, 294], "jfa": [200, 206, 216, 219], "platlibdir": [200, 206, 216, 219, 294], "ps1": [200, 206, 216, 219, 294, 1094], "ps2": [200, 206, 216, 219, 294], "ps3": [200, 206, 216, 219, 294], "pycache_prefix": [200, 206, 216, 219, 294], "outstream": [200, 206, 216, 219], "versio": [200, 206, 216, 219], "202103": 200, "releaselev": [200, 206, 216, 219], "warnopt": [200, 206, 216, 219, 294], "isdigit": [200, 211, 219, 223, 244, 251, 265, 271, 1001], "pp": [200, 251, 374, 561], "list_of_str": 200, "tensorflow": 201, "kesselfal": 201, "rettenbachklamm": 201, "hochtor": 201, "hochschwab": 201, "_a": [203, 219, 244], "_123": 203, "140575811317328": 203, "140575811316208": 203, "0xffffffff": [203, 204, 347], "4294967296": [203, 211], "0x48": [203, 861], "330": [203, 206, 219, 244, 251, 265], "332": [203, 206, 219, 251, 265], "333": [203, 206, 219, 251, 265, 297], "334": [203, 206, 219, 251], "dstr": 203, "777": [203, 206], "aliv": [203, 367, 907, 950], "bcd": 203, "dusan": 203, "alex": [203, 217, 972], "mist": [203, 251], "span": [203, 229, 232, 234, 241, 265, 324, 343, 367, 732], "141592653589793": [203, 206], "roll": [203, 222, 243, 259, 260, 279, 990, 1109], "dice": [203, 222, 243, 259, 260, 279, 990], "win": [203, 219, 229, 848, 915, 990], "rnd": [203, 226], "convention": 203, "wise": [203, 247, 392, 536, 608, 639, 708, 710, 725, 735, 755, 853, 894, 954], "resultset": [203, 206, 1070], "sbin": [203, 219, 226, 229, 244, 251, 261, 265, 789, 793, 795, 842, 848, 879, 889], "nologin": [203, 219, 226, 229, 244, 251, 261, 265, 842, 848, 879, 889], "adm": [203, 219, 226, 229, 244, 251, 261, 265, 843, 846, 848], "lp": [203, 219, 226, 229, 244, 251, 261, 265, 848], "spool": [203, 219, 226, 229, 244, 251, 261, 265, 848], "lpd": [203, 219, 226, 229, 244, 251, 261, 265, 848], "ftp": [203, 219, 226, 229, 244, 251, 261, 265, 844, 945], "65534": [203, 219, 226, 229, 244, 251, 261, 265], "apach": [203, 219, 226, 229, 244, 251, 261, 265], "httpd": [203, 219, 226, 229, 244, 251, 261, 265], "coredump": [203, 219, 226, 229, 244, 251, 261, 265, 848, 928], "997": [203, 206, 219, 226, 229, 244, 251, 261, 265], "dumper": [203, 219, 226, 229, 244, 251, 261, 265, 848], "998": [203, 206, 219, 226, 229, 244, 251, 261, 265], "996": [203, 206, 219, 226, 229, 244, 251, 261, 265], "timesync": [203, 219, 226, 229, 244, 251, 261, 265, 848], "995": [203, 206, 219, 226, 229, 244, 251, 261, 265], "tss": [203, 219, 226, 229, 244, 251, 261, 265], "tpm": [203, 219, 226, 229, 244, 251, 261, 265], "dbu": [203, 219, 226, 229, 244, 251, 261, 265, 795], "polkitd": [203, 219, 226, 229, 244, 251, 261, 265, 795], "994": [203, 206, 219, 226, 229, 244, 251, 261, 265], "avahi": [203, 219, 226, 229, 244, 251, 261, 265, 795], "mdn": [203, 219, 226, 229, 244, 251, 261, 265], "unbound": [203, 219, 226, 229, 244, 251, 261, 265, 986], "992": [203, 206, 219, 226, 229, 244, 251, 261, 265], "dnsmasq": [203, 219, 226, 229, 244, 251, 261, 265, 795], "991": [203, 206, 219, 226, 229, 244, 251, 261, 265], "dhcp": [203, 219, 226, 229, 244, 251, 261, 265], "nm": [203, 219, 226, 229, 244, 251, 261, 265, 404, 537, 757, 943, 949], "openconnect": [203, 219, 226, 229, 244, 251, 261, 265], "993": [203, 206, 219, 226, 229, 244, 251, 261, 265], "989": [203, 206, 219, 226, 229, 244, 251, 261, 265], "networkmanag": [203, 219, 226, 229, 244, 251, 261, 265, 404, 795], "usbmuxd": [203, 219, 226, 229, 244, 251, 261, 265], "gluster": [203, 219, 226, 229, 244, 251, 261, 265], "988": [203, 206, 219, 226, 229, 244, 251, 261, 265], "glusterf": [203, 219, 226, 229, 244, 251, 261, 265], "rtkit": [203, 219, 226, 229, 244, 251, 261, 265], "realtimekit": [203, 219, 226, 229, 244, 251, 261, 265], "pipewir": [203, 219, 226, 229, 244, 251, 261, 265], "987": [203, 206, 219, 226, 229, 244, 251, 261, 265], "geoclu": [203, 219, 226, 229, 244, 251, 261, 265], "990": [203, 206, 219, 226, 229, 244, 251, 261, 265], "chroni": [203, 219, 226, 229, 244, 251, 261, 265], "984": [203, 206, 219, 226, 229, 244, 251, 261, 265, 848], "saslauth": [203, 219, 226, 229, 244, 251, 261, 265], "saslauthd": [203, 219, 226, 229, 244, 251, 261, 265], "radvd": [203, 219, 226, 229], "rpc": [203, 219, 226, 229, 244, 251, 261, 265], "rpcbind": [203, 219, 226, 229, 244, 251, 261, 265], "openvpn": [203, 219, 226, 229, 244, 251, 261, 265], "982": [203, 206, 219, 226, 229, 244, 251, 261, 265, 848], "981": [203, 206, 219, 226, 229], "spawn": [203, 219, 226, 229, 244, 251, 261, 265], "colord": [203, 219, 226, 229, 244, 251, 261, 265], "985": [203, 206, 219, 226, 229, 244, 251, 261, 265, 848], "980": [203, 206, 219, 226, 229, 626], "rpcuser": [203, 219, 226, 229, 244, 251, 261, 265], "abrt": [203, 219, 226, 229, 244, 251, 261, 265, 795, 848], "flatpak": [203, 219, 226, 229, 244, 251, 261, 265, 268, 848], "979": [203, 206, 219, 226, 229], "helper": [203, 219, 223, 226, 229, 244, 251, 261, 265, 342, 536, 600, 648, 689, 751, 848, 1083, 1087], "983": [203, 206, 219, 226, 229, 244, 251, 261, 265, 848], "978": [203, 206, 219, 226, 229, 244, 251, 261, 265, 848], "vboxadd": [203, 219, 226, 229, 244, 251, 261, 265, 848], "tcpdump": [203, 219, 226, 229, 244, 251, 261, 265, 848], "mosquitto": [203, 207, 219, 226, 229, 244, 251, 261, 265, 1049, 1074], "974": [203, 206, 219, 226, 229], "broker": [203, 207, 219, 226, 229, 244, 251, 261, 265, 795, 1049], "doit": [203, 433], "mappingproxi": [203, 219, 232], "229": [203, 206, 211, 213, 219, 223, 226, 244, 251, 261, 265, 271], "230": [203, 206, 211, 213, 216, 219, 223, 226, 229, 244, 251, 261, 265, 271], "231": [203, 206, 211, 213, 216, 219, 223, 226, 244, 251, 265, 271, 452, 453, 454, 466, 467, 468], "232": [203, 206, 211, 213, 216, 219, 223, 226, 229, 244, 265, 271], "233": [203, 206, 211, 213, 219, 223, 226, 229, 244, 251, 261, 265, 271], "inputlist": [203, 957], "ret": [203, 206, 211, 410, 648, 921, 957, 1002], "235": [203, 206, 211, 213, 216, 219, 223, 226, 229, 244, 251, 261, 265, 271], "236": [203, 206, 211, 213, 216, 219, 223, 226, 229, 244, 265, 271, 395], "237": [203, 206, 211, 213, 219, 223, 226, 229, 244, 261, 265, 271], "238": [203, 206, 211, 213, 216, 219, 223, 226, 229, 244, 251, 261, 265, 271], "239": [203, 206, 211, 213, 219, 223, 226, 244, 251, 261, 265, 271], "240": [203, 206, 211, 213, 216, 219, 223, 226, 229, 244, 261, 265, 271], "242": [203, 206, 211, 213, 216, 219, 226, 229, 244, 261, 265, 271], "243": [203, 206, 211, 213, 219, 226, 229, 244, 261, 265, 271], "244": [203, 206, 211, 213, 216, 219, 226, 229, 244, 265, 271], "245": [203, 206, 211, 213, 226, 244, 261, 265, 271], "247": [203, 206, 211, 213, 219, 223, 226, 244, 261, 265, 271], "248": [203, 206, 211, 213, 216, 223, 226, 244, 251, 261, 265, 271], "249": [203, 206, 211, 213, 219, 223, 226, 229, 244, 251, 265, 271], "250": [203, 206, 211, 213, 219, 223, 226, 229, 244, 251, 255, 261, 265, 271, 846], "251": [203, 206, 211, 213, 216, 219, 223, 226, 244, 251, 261, 265, 271], "252": [203, 206, 211, 213, 216, 223, 226, 244, 251, 261, 265, 271, 1071], "253": [203, 206, 211, 213, 216, 219, 226, 229, 244, 251, 265, 271], "256": [203, 206, 211, 213, 219, 226, 229, 244, 251, 261, 265, 271, 333, 541, 1057, 1071], "257": [203, 206, 211, 213, 216, 219, 223, 226, 229, 244, 251, 261, 265, 271], "258": [203, 206, 211, 213, 216, 219, 223, 226, 244, 251, 261, 265, 271], "0x7fda5444e6a0": 203, "259": [203, 206, 211, 213, 216, 219, 226, 244, 251, 261, 265, 271], "260": [203, 206, 211, 213, 216, 219, 226, 244, 251, 261, 265, 271], "261": [203, 206, 211, 213, 219, 223, 229, 244, 251, 261, 265, 271], "262": [203, 206, 211, 213, 219, 229, 244, 251, 261, 265, 271], "263": [203, 206, 211, 213, 219, 223, 226, 229, 244, 251, 261, 265, 271], "264": [203, 206, 211, 213, 216, 219, 226, 229, 244, 251, 265, 271], "265": [203, 206, 211, 213, 219, 226, 244, 251, 265, 271], "266": [203, 206, 211, 213, 216, 219, 223, 229, 244, 265, 271], "267": [203, 206, 211, 213, 216, 219, 226, 229, 244, 251, 265, 271], "268": [203, 206, 211, 213, 219, 226, 229, 244, 251, 265, 271], "269": [203, 206, 211, 213, 216, 219, 223, 226, 244, 251, 261, 265, 271, 933], "270": [203, 206, 211, 213, 219, 223, 226, 244, 251, 261, 265, 271], "other_map": 203, "272": [203, 206, 211, 213, 216, 219, 223, 226, 244, 251, 261, 265, 271], "273": [203, 206, 211, 213, 219, 223, 244, 251, 265, 271, 476, 493, 494, 495, 496, 498, 499, 967], "274": [203, 206, 211, 213, 216, 219, 223, 226, 244, 251, 261, 265, 271], "140575811316304": 203, "275": [203, 206, 211, 213, 219, 223, 226, 244, 251, 261, 265, 271], "276": [203, 206, 211, 213, 216, 226, 244, 251, 261, 265, 271], "277": [203, 206, 211, 213, 216, 219, 223, 226, 244, 261, 265, 271], "278": [203, 206, 211, 213, 219, 226, 244, 251, 265, 271], "279": [203, 206, 211, 213, 216, 219, 223, 226, 244, 251, 265, 271], "280": [203, 206, 211, 213, 216, 219, 223, 244, 251, 265, 271, 932, 933], "140575692459008": 203, "282": [203, 206, 211, 213, 216, 219, 223, 226, 244, 251, 265, 271], "283": [203, 206, 211, 213, 216, 219, 223, 226, 244, 265, 271], "284": [203, 206, 211, 213, 219, 223, 226, 244, 248, 271], "elementwis": 203, "285": [203, 206, 211, 213, 216, 219, 244, 251, 265, 271], "286": [203, 206, 211, 213, 216, 219, 223, 244, 265, 271], "287": [203, 206, 211, 213, 216, 219, 223, 226, 244, 251, 271], "140575692438848": 203, "288": [203, 206, 211, 213, 219, 223, 226, 244, 251, 265, 271], "140575692448960": 203, "289": [203, 206, 211, 213, 219, 244, 251, 265, 271], "290": [203, 206, 211, 213, 219, 244, 251, 265, 271], "292": [203, 206, 211, 219, 223, 244, 251, 261, 265], "293": [203, 206, 211, 213, 219, 244, 251, 261, 265, 271], "295": [203, 206, 211, 213, 219, 223, 244, 251, 261, 265], "296": [203, 206, 211, 213, 219, 244, 251, 261, 265, 271], "298": [203, 206, 211, 219, 223, 244, 251, 261, 265, 271], "deep": [203, 215, 643, 648, 919], "301": [203, 206, 211, 216, 219, 223, 244, 251, 261, 265, 271], "302": [203, 206, 213, 219, 223, 244, 251, 265, 271, 1012], "deepcopi": [203, 213, 226, 251, 271, 995], "303": [203, 206, 213, 216, 219, 251, 265, 271, 933], "304": [203, 206, 213, 216, 219, 223], "305": [203, 206, 216, 219, 244, 261, 265, 271], "314": [203, 206, 213, 216, 219, 244, 251, 261, 265, 271], "315": [203, 206, 219, 244, 265, 271], "rdr": [203, 204, 410, 433, 1066], "delimit": [203, 204, 219, 248, 249, 265, 557, 843, 983, 1066], "fund_nam": [203, 204, 1012], "fund_isin": [203, 204, 1012], "fund_tick": [203, 204, 1012], "as_of_d": [203, 204, 1012], "fund_in_univers": [203, 204, 1012], "fund_of_fund": [203, 204, 1012], "fund_holdings_count": [203, 204, 1012], "fund_holding_funds_count": [203, 204, 1012], "american": [203, 209, 609, 623, 710, 1012, 1071], "fund": [203, 1012], "balanc": [203, 207, 377, 1012], "us0240711020": [203, 1012], "abalx": [203, 1012], "20210103": [203, 1012], "084": [203, 1012], "dodg": [203, 1012], "cox": [203, 1012], "us2562011047": [203, 1012], "dodbx": [203, 1012], "410": [203, 206, 251, 265, 1012], "us2562191062": [203, 1012], "dodgx": [203, 1012], "franklin": [203, 1012], "incom": [203, 219, 1012, 1074], "us3534963000": [203, 1012], "fkinx": [203, 1012], "america": [203, 1012], "us3998741066": [203, 1012], "agthx": [203, 1012], "price": [203, 223, 403, 426, 1012], "us7414791092": [203, 1012], "prgfx": [203, 1012], "fidel": [203, 1012], "puritan": [203, 1012], "us3163451079": [203, 1012], "fpurx": [203, 1012], "contrafund": [203, 1012], "us3160711095": [203, 1012], "fcntx": [203, 1012], "363": [203, 206, 251, 265, 1012], "us77954m1053": [203, 1012], "prwcx": [203, 1012], "westburi": [203, 1012], "us6804141090": [203, 1012], "owlsx": [203, 1012], "us1401931035": [203, 1012], "caibx": [203, 1012], "582": [203, 206, 1012], "harbor": [203, 1012], "institut": [203, 204, 439, 454, 1012, 1085], "us4115115044": [203, 1012], "hacax": [203, 1012], "us77954q1067": [203, 1012], "trbcx": [203, 1012], "dreyfu": [203, 1012], "treasuri": [203, 1012], "cash": [203, 1012], "inst": [203, 1012], "us2619411083": [203, 1012], "dirxx": [203, 1012], "blackrock": [203, 1012], "us09251t5092": [203, 1012], "malox": [203, 1012], "us3163453059": [203, 1012], "flpsx": [203, 1012], "liquid": [203, 1012], "us09248u5517": [203, 1012], "tttxx": [203, 1012], "dfa": [203, 1012], "portfolio": [203, 223, 1012], "us2332038841": [203, 1012], "dfgbx": [203, 1012], "feder": [203, 1012], "herm": [203, 1012], "us60934n6821": [203, 1012], "utixx": [203, 1012], "oakmark": [203, 1012], "investor": [203, 223, 1012], "us4138382027": [203, 1012], "oakix": [203, 1012], "asset": [203, 1012], "us00767h4939": [203, 1012], "787": [203, 206, 1012], "fpa": [203, 1012], "crescent": [203, 1012], "us30254t7596": [203, 1012], "fpacx": [203, 1012], "us3534968058": [203, 1012], "fcisx": [203, 1012], "us5529836943": [203, 1012], "meiix": [203, 1012], "goldman": [203, 1012], "sach": [203, 1012, 1130], "instrument": [203, 401, 403, 861, 1012], "us38142b5003": [203, 1012], "ftixx": [203, 1012], "schwab": [203, 1012], "us8085098551": [203, 1012], "swppx": [203, 1012], "508": [203, 206, 251, 1012], "templeton": [203, 1012], "bond": [203, 1012], "advisor": [203, 1012], "us8802084009": [203, 1012], "tgbax": [203, 1012], "us32008f6060": [203, 1012], "sgiix": [203, 1012], "ishar": [203, 1012], "etf": [203, 1012], "us4642872000": [203, 1012], "ivv": [203, 1012], "507": [203, 206, 1012], "vanguard": [203, 1012], "admir": [203, 1012], "us9229087104": [203, 1012], "vfiax": [203, 1012], "510": [203, 206, 1012], "us9229087286": [203, 1012], "vtsax": [203, 1012], "370": [203, 206, 251, 265, 1012], "spdr": [203, 1012], "midcap": [203, 1012], "us78467y1073": [203, 1012], "mdy": [203, 1012], "dow": [203, 1012], "jone": [203, 302, 303, 1012], "industri": [203, 757, 1012], "us78467x1090": [203, 1012], "health": [203, 1012], "us81369y2090": [203, 1012], "xlv": [203, 1012], "discretionari": [203, 1012], "us81369y4070": [203, 1012], "xly": [203, 1012], "energi": [203, 1012], "us81369y5069": [203, 1012], "xle": [203, 1012], "financi": [203, 1012], "us81369y6059": [203, 1012], "xlf": [203, 1012], "us81369y8030": [203, 1012], "xlk": [203, 1012], "invesco": [203, 1012], "qqq": [203, 1012], "us46090e1038": [203, 1012], "us2562061034": [203, 1012], "dodfx": [203, 1012], "msci": [203, 1012], "eaf": [203, 1012], "us4642874659": [203, 1012], "efa": [203, 1012], "897": [203, 206, 1012], "jpmorgan": [203, 1012], "sec": [203, 424, 915, 1012, 1087], "mny": [203, 1012], "mkt": [203, 1012], "us4812a28358": [203, 1012], "jtsxx": [203, 1012], "eql": [203, 1012], "wght": [203, 1012], "us46137v3574": [203, 1012], "us4812a03757": [203, 1012], "cjtxx": [203, 1012], "us00143w8753": [203, 1012], "odvyx": [203, 1012], "dividend": [203, 1012], "us78464a7634": [203, 1012], "sdy": [203, 1012], "equiti": [203, 1012], "us2332033719": [203, 1012], "dfiex": [203, 1012], "888": [203, 206, 1012], "edgewood": [203, 1012], "us0075w07594": [203, 1012], "egfix": [203, 1012], "prudenti": [203, 1012], "us00767h7585": [203, 1012], "r6": [203, 1012], "us55273h3536": [203, 1012], "meikx": [203, 1012], "327": [203, 206, 219, 244, 251, 261], "328": [203, 206, 213, 219, 251], "geschieht": [204, 319, 844], "wunder": 204, "groesser": 204, "jave": 204, "shorthand": [204, 334, 836, 968], "lin": 204, "lout": 204, "faster": [204, 223, 386, 398, 919, 925], "outputlist": 204, "getus": [204, 1033], "userdatabas": [204, 1033], "userid": [204, 216], "groupid": 204, "loginshel": 204, "userrecord": 204, "dens": [204, 213, 223], "pratic": 204, "_fix_float_numb": 204, "fieldnam": [204, 1066], "_fix_bool": 204, "elif": [204, 211, 332, 369, 410, 974, 989, 990], "_fix_dat": 204, "read_stock": [204, 1012], "csvfile": [204, 967], "converted_record": 204, "csvname": [204, 249, 410], "dbname": [204, 1069], "stmt": 204, "predefin": [204, 889, 924, 929, 1085, 1105], "circuit": [205, 211, 221, 862, 988, 1116, 1123], "windows_path": [206, 211], "festplatt": [206, 1126], "eue": [206, 296], "lehrer": 206, "50923504": 206, "202107": 206, "140106795875920": 206, "140106669190640": 206, "669": [206, 223], "140106669191024": 206, "0j": 206, "copied_l": [206, 213], "140106669249856": 206, "copied_t": 206, "tuple_containing_one_el": 206, "tran": 206, "satan": [206, 216], "queen": [206, 226, 1044, 1046, 1050, 1052, 1066], "10000000000": [206, 261, 296], "prod": 206, "resultset_to_local_db": 206, "my_local_db": 206, "basenam": 206, "normalized_path": 206, "normpath": [206, 213, 962], "291": [206, 211, 219, 244, 261, 271, 402], "294": [206, 211, 219, 244, 261, 265, 271], "297": [206, 211, 213, 219, 223, 265], "299": [206, 211, 216, 219, 223, 244, 251, 261, 265, 271], "306": [206, 216, 223, 244, 261, 265, 271], "307": [206, 213, 219, 244, 261, 265, 271], "309": [206, 213, 216, 219, 251, 261, 265, 271], "310": [206, 213, 216, 219, 265, 271, 347], "311": [206, 213, 244, 265, 271], "312": [206, 213, 219, 244, 251, 261, 271], "313": [206, 213, 219, 251, 265, 271], "316": [206, 213, 216, 219, 244, 265], "317": [206, 213, 216, 244, 251, 261, 265], "318": [206, 216, 219, 251, 265], "319": [206, 213, 216, 219, 244, 261, 265], "321": [206, 216, 219, 251, 261, 265, 271], "322": [206, 216, 219, 251, 271], "323": [206, 213, 216, 219, 244, 265, 271], "324": [206, 216, 219, 244, 261, 265, 271, 481], "325": [206, 213, 219, 251, 261, 271], "326": [206, 213, 219, 244, 261, 271], "329": [206, 219, 244, 251], "331": [206, 213, 219, 244, 265], "335": [206, 213, 219, 251, 265], "336": [206, 213, 219, 265, 417], "337": [206, 219, 251, 265], "338": [206, 213, 251, 265], "339": [206, 213, 219, 265], "341": [206, 213, 219, 251, 265], "342": [206, 213, 219, 251, 271], "343": [206, 219, 251, 265], "346": [206, 219, 265, 583, 584, 585, 586], "347": [206, 251, 265], "348": [206, 219], "349": [206, 219, 265, 397], "351": [206, 213, 219, 265], "352": [206, 213, 219, 251, 265], "353": [206, 213, 219, 251, 265], "354": [206, 219, 265, 431], "355": [206, 251, 265], "356": [206, 226, 265], "357": [206, 251, 265], "359": [206, 265], "361": [206, 265], "362": [206, 251, 265], "364": [206, 265], "365": 206, "366": [206, 251, 265], "367": [206, 265], "368": [206, 265], "369": [206, 251, 265], "371": [206, 251], "373": [206, 213, 251], "374": [206, 213, 265], "375": [206, 213, 223, 251, 265, 397], "376": [206, 251, 265], "377": [206, 213, 251, 265], "379": [206, 251, 265], "380": [206, 251, 265], "381": [206, 213, 251, 265], "382": [206, 251, 265], "383": [206, 213, 251, 255], "384": [206, 251, 265], "385": [206, 251, 265], "386": [206, 251, 265], "387": 206, "388": [206, 251, 265], "389": 206, "390": [206, 265], "391": [206, 251], "392": [206, 251], "393": [206, 213, 251, 265], "394": [206, 213, 251, 265], "395": [206, 213, 251, 265], "396": [206, 213, 251, 802], "397": [206, 213, 265], "398": [206, 213, 265], "399": [206, 213, 265], "401": [206, 213, 251, 265], "402": [206, 251], "403": [206, 213, 265], "405": [206, 265], "406": [206, 213, 251, 265], "407": [206, 251, 265], "408": [206, 213, 251, 265], "409": [206, 213, 251, 265], "411": [206, 213, 251, 265], "412": [206, 265], "413": [206, 213, 251, 265], "414": [206, 213, 251, 265], "415": [206, 265], "416": [206, 213, 251], "417": [206, 213, 251, 265], "418": [206, 213, 251], "419": [206, 213, 251, 265], "420": [206, 213, 251, 265], "421": [206, 213, 251, 265], "422": [206, 213], "423": [206, 251, 265], "424": [206, 213, 251, 265], "425": [206, 251], "426": 206, "427": [206, 213, 251], "428": [206, 213, 251], "429": [206, 251], "430": [206, 213, 251], "431": [206, 251], "432": [206, 213, 251], "433": [206, 251], "434": [206, 251], "435": 206, "436": [206, 251], "437": [206, 213, 251], "438": [206, 213], "439": [206, 251], "440": [206, 213, 251], "441": [206, 213, 251], "442": [206, 213, 251], "443": [206, 213], "444": [206, 213], "445": [206, 213], "446": [206, 251], "447": [206, 213, 251], "448": [206, 251], "449": [206, 213], "451": [206, 213], "452": [206, 213, 251], "453": [206, 213], "454": [206, 213, 251], "455": [206, 213], "457": 206, "458": [206, 251], "459": 206, "460": [206, 251], "461": [206, 251], "462": [206, 251], "463": 206, "464": [206, 251], "465": [206, 251, 255], "466": [206, 251], "467": [206, 251], "468": [206, 251], "469": [206, 251, 686], "470": [206, 251], "471": [206, 251], "472": [206, 251], "473": 206, "474": [206, 251], "475": [206, 251], "476": [206, 251], "478": 206, "479": [206, 251], "480": [206, 251], "481": [206, 251], "482": [206, 251], "483": [206, 251], "484": 206, "485": 206, "486": [206, 251], "487": [206, 251], "488": [206, 251], "489": 206, "490": [206, 839], "491": 206, "492": 206, "494": [206, 251], "495": 206, "496": 206, "497": [206, 251], "498": [206, 251], "499": 206, "502": [206, 251], "503": 206, "504": [206, 251], "505": [206, 219, 251], "506": [206, 251], "509": 206, "511": 206, "514": 206, "515": [206, 251, 685], "516": [206, 251], "518": [206, 251], "519": 206, "520": [206, 251], "521": [206, 251], "522": 206, "523": 206, "524": [206, 251], "525": [206, 251], "526": 206, "527": 206, "528": 206, "529": 206, "530": 206, "531": [206, 251], "532": 206, "533": 206, "534": 206, "535": 206, "536": [206, 839], "538": 206, "539": 206, "540": 206, "541": 206, "542": 206, "543": 206, "544": 206, "545": 206, "546": 206, "547": 206, "548": [206, 255], "549": 206, "550": 206, "551": 206, "552": 206, "553": 206, "554": [206, 841], "555": 206, "556": 206, "557": 206, "558": 206, "559": 206, "560": 206, "561": 206, "562": 206, "563": 206, "564": 206, "565": 206, "566": 206, "567": 206, "568": 206, "569": 206, "570": 206, "571": 206, "572": 206, "573": 206, "574": 206, "575": 206, "576": 206, "577": 206, "578": 206, "579": 206, "580": 206, "581": 206, "583": 206, "584": 206, "585": 206, "586": 206, "587": 206, "588": 206, "589": 206, "590": 206, "591": 206, "592": 206, "593": 206, "594": 206, "595": 206, "596": [206, 945], "597": 206, "598": 206, "599": 206, "601": 206, "602": 206, "603": 206, "604": 206, "605": 206, "606": 206, "607": 206, "608": 206, "609": 206, "610": [206, 839], "611": 206, "612": [206, 802], "613": 206, "614": 206, "615": 206, "616": 206, "617": 206, "618": 206, "619": 206, "620": 206, "621": 206, "622": 206, "623": 206, "624": 206, "625": [206, 223], "626": 206, "627": 206, "628": 206, "629": 206, "630": 206, "631": 206, "632": 206, "633": 206, "634": 206, "635": 206, "636": 206, "637": 206, "638": 206, "639": 206, "640": [206, 536], "641": 206, "642": 206, "643": 206, "644": [206, 982], "645": 206, "646": 206, "647": 206, "648": 206, "649": 206, "650": 206, "651": 206, "652": 206, "653": 206, "654": 206, "655": 206, "656": 206, "657": 206, "658": 206, "659": 206, "660": 206, "661": 206, "662": 206, "663": 206, "665": 206, "668": [206, 986], "670": 206, "671": 206, "672": 206, "673": 206, "674": 206, "675": 206, "676": 206, "677": 206, "678": 206, "679": 206, "680": 206, "681": 206, "682": [206, 839], "683": 206, "684": 206, "685": 206, "687": 206, "688": 206, "689": 206, "690": 206, "691": 206, "692": 206, "693": 206, "694": 206, "695": 206, "696": 206, "697": 206, "698": [206, 839, 879], "699": 206, "701": 206, "702": 206, "703": [206, 259, 260, 278, 279], "704": 206, "705": 206, "706": 206, "707": 206, "708": [206, 219], "709": 206, "710": [206, 536], "711": 206, "712": 206, "713": 206, "715": [206, 610], "716": 206, "717": 206, "718": 206, "719": 206, "720": 206, "721": 206, "722": 206, "723": 206, "724": 206, "725": 206, "726": 206, "727": 206, "728": 206, "729": 206, "730": [206, 248], "731": 206, "732": 206, "733": 206, "734": 206, "735": 206, "736": 206, "737": 206, "738": 206, "739": 206, "740": 206, "741": 206, "742": 206, "743": 206, "744": 206, "745": 206, "746": [206, 933], "747": 206, "748": 206, "749": 206, "750": 206, "751": 206, "752": 206, "753": 206, "754": 206, "756": 206, "757": 206, "758": 206, "759": 206, "760": 206, "761": 206, "762": 206, "763": 206, "764": 206, "765": 206, "766": 206, "767": 206, "768": 206, "769": 206, "770": 206, "772": 206, "773": 206, "774": 206, "775": 206, "776": 206, "778": 206, "779": 206, "780": 206, "781": 206, "782": [206, 255], "783": 206, "784": 206, "785": 206, "786": 206, "788": 206, "789": [206, 213], "790": 206, "791": [206, 685], "792": 206, "793": 206, "794": 206, "795": 206, "796": 206, "797": 206, "798": 206, "801": [206, 248], "802": 206, "803": 206, "804": 206, "805": 206, "806": 206, "807": 206, "808": 206, "809": 206, "810": 206, "811": 206, "812": 206, "813": 206, "814": 206, "815": [206, 223], "816": [206, 229], "817": 206, "818": 206, "819": 206, "820": 206, "822": 206, "823": 206, "824": 206, "826": 206, "827": 206, "828": [206, 255], "829": 206, "830": 206, "831": 206, "832": 206, "833": 206, "834": 206, "835": 206, "836": 206, "837": 206, "838": 206, "839": 206, "840": 206, "841": 206, "842": 206, "843": 206, "844": 206, "845": 206, "846": 206, "847": 206, "848": 206, "849": 206, "850": 206, "851": 206, "852": 206, "853": 206, "854": 206, "855": 206, "856": 206, "857": 206, "858": 206, "859": 206, "860": 206, "861": 206, "862": 206, "863": 206, "864": 206, "865": 206, "866": 206, "867": 206, "868": 206, "870": 206, "871": 206, "872": 206, "873": 206, "874": [206, 433], "875": 206, "876": 206, "877": 206, "878": 206, "879": [206, 397], "880": 206, "881": 206, "882": 206, "883": 206, "884": 206, "885": 206, "886": 206, "887": 206, "889": 206, "890": 206, "891": 206, "892": 206, "893": 206, "894": 206, "895": 206, "896": 206, "898": 206, "899": 206, "901": 206, "902": [206, 839], "903": 206, "904": 206, "905": 206, "906": 206, "907": 206, "908": 206, "909": 206, "911": 206, "912": 206, "913": 206, "914": 206, "915": 206, "916": 206, "917": [206, 255], "918": 206, "919": 206, "920": 206, "921": 206, "922": 206, "923": 206, "924": 206, "925": 206, "926": 206, "927": 206, "928": 206, "929": 206, "930": 206, "931": 206, "932": 206, "933": 206, "934": 206, "935": 206, "936": 206, "937": 206, "938": 206, "939": 206, "940": 206, "941": 206, "942": 206, "943": 206, "944": 206, "945": 206, "946": 206, "947": 206, "948": 206, "949": 206, "950": 206, "951": 206, "952": 206, "953": 206, "954": 206, "955": 206, "956": 206, "957": 206, "958": 206, "959": 206, "960": 206, "961": 206, "962": 206, "963": 206, "964": 206, "965": [206, 1079, 1080], "966": [206, 1079, 1080], "967": [206, 1079, 1080], "968": [206, 1079, 1080], "969": [206, 1079, 1080], "970": 206, "971": 206, "972": 206, "973": 206, "975": 206, "976": [206, 244, 251, 261, 265], "977": [206, 244, 251, 261, 265, 848], "timeaxi": 206, "myrang": 206, "1002": [206, 583, 584, 585, 586, 802], "1004": 206, "1006": 206, "1008": 206, "1010": 206, "1012": 206, "1014": 206, "1016": 206, "1018": 206, "1020": [206, 784, 785, 792], "1022": 206, "1028": 206, "1030": 206, "1032": 206, "1034": 206, "1036": 206, "1038": 206, "1040": 206, "1042": [206, 919], "1046": 206, "1048": 206, "1050": 206, "1052": 206, "1054": 206, "1056": 206, "1058": 206, "1060": 206, "1062": 206, "1064": 206, "1066": 206, "1068": [206, 255], "1070": [206, 255], "1072": [206, 255], "1074": 206, "1076": 206, "1078": 206, "1080": 206, "1082": 206, "1084": 206, "1086": 206, "1088": 206, "1090": 206, "1092": 206, "1094": 206, "1096": 206, "1098": 206, "1102": 206, "1104": 206, "1106": 206, "1108": 206, "1110": 206, "1114": 206, "1116": 206, "1118": 206, "1120": 206, "1122": 206, "1124": 206, "1126": 206, "1128": 206, "1130": 206, "1132": 206, "1134": 206, "1136": 206, "1138": 206, "1140": 206, "1142": 206, "1144": 206, "1146": 206, "1148": 206, "1150": 206, "1152": [206, 1080], "1154": [206, 1080], "1156": 206, "1158": 206, "1160": 206, "1162": 206, "1164": 206, "1166": 206, "1168": 206, "1170": 206, "1172": 206, "1174": 206, "1176": 206, "1178": 206, "1180": 206, "1182": 206, "1184": 206, "1186": 206, "1188": 206, "1190": 206, "1192": 206, "1194": 206, "1196": 206, "1198": 206, "1202": [206, 1080], "1204": [206, 1080], "1206": 206, "1208": 206, "1210": 206, "1212": 206, "1214": 206, "1216": 206, "1218": 206, "1220": 206, "1222": 206, "1224": 206, "1226": 206, "1228": 206, "1230": 206, "1232": 206, "1236": 206, "1238": 206, "1240": 206, "1242": 206, "1246": 206, "1248": 206, "1250": 206, "1252": 206, "1254": [206, 452, 453, 454, 466, 467, 468], "1256": 206, "1258": 206, "1260": [206, 417], "1262": 206, "1264": 206, "1266": 206, "1268": 206, "1270": 206, "1272": 206, "1274": 206, "1276": 206, "1278": 206, "1280": 206, "1282": 206, "1284": 206, "1286": 206, "1288": 206, "1290": 206, "1292": 206, "1294": 206, "1296": 206, "1298": 206, "1300": 206, "1302": 206, "1304": 206, "1306": 206, "1308": 206, "1310": 206, "1312": 206, "1314": 206, "1316": 206, "1318": 206, "1320": 206, "1322": 206, "1324": 206, "1326": 206, "1328": 206, "1330": 206, "1332": 206, "1334": 206, "1336": 206, "1338": 206, "1340": 206, "1342": 206, "1344": 206, "1346": 206, "1348": 206, "1350": 206, "1352": [206, 889], "1354": 206, "1356": 206, "1358": 206, "1360": 206, "1362": 206, "1364": 206, "1366": 206, "1368": 206, "1370": 206, "1372": 206, "1374": 206, "1378": 206, "1380": 206, "1382": 206, "1384": 206, "1386": 206, "1388": 206, "1390": 206, "1392": [206, 433], "1394": 206, "1396": 206, "1398": 206, "1400": 206, "1402": 206, "1406": 206, "1408": 206, "1410": 206, "1412": 206, "1414": 206, "1416": [206, 1000], "1418": 206, "1420": 206, "1422": 206, "1424": 206, "1426": 206, "1428": 206, "1430": 206, "1432": 206, "1434": 206, "1436": 206, "1438": 206, "1440": 206, "1442": 206, "1444": 206, "1446": 206, "1448": 206, "1450": [206, 1079], "1452": [206, 1079], "1454": [206, 1079], "1456": 206, "1458": 206, "1460": 206, "1462": 206, "1464": 206, "1466": 206, "1468": 206, "1470": 206, "1472": 206, "1474": 206, "1476": 206, "1478": 206, "1480": 206, "1482": 206, "1484": 206, "1486": 206, "1488": 206, "1490": 206, "1492": 206, "1494": 206, "1496": 206, "1498": 206, "1502": 206, "1504": 206, "1506": 206, "1508": 206, "1510": 206, "1512": 206, "1514": 206, "1516": 206, "1518": [206, 1079], "1520": [206, 1079], "1522": [206, 1079], "1524": 206, "1526": 206, "1528": 206, "1530": 206, "1532": 206, "1534": 206, "1536": [206, 931], "1538": 206, "1540": 206, "1542": 206, "1544": 206, "1546": 206, "1548": 206, "1550": 206, "1552": 206, "1554": 206, "1556": 206, "1558": [206, 800], "1560": 206, "1562": 206, "1564": 206, "1566": 206, "1568": 206, "1570": 206, "1572": 206, "1574": 206, "1576": 206, "1578": 206, "1580": 206, "1582": 206, "1584": 206, "1586": 206, "1588": 206, "1590": 206, "1592": 206, "1594": 206, "1596": 206, "1598": 206, "1600": 206, "1602": 206, "1604": [206, 925], "1606": 206, "1608": 206, "1610": 206, "1612": 206, "1614": 206, "1616": 206, "1618": 206, "1620": 206, "1622": 206, "1624": 206, "1626": 206, "1628": 206, "1630": 206, "1632": 206, "1634": [206, 452, 453], "1636": 206, "1638": 206, "1640": 206, "1642": 206, "1644": 206, "1646": 206, "1648": 206, "1650": 206, "1652": 206, "1654": 206, "1656": 206, "1658": 206, "1660": 206, "1662": 206, "1664": 206, "1666": 206, "1668": 206, "1672": 206, "1674": 206, "1676": 206, "1678": 206, "1680": 206, "1682": 206, "1684": 206, "1686": 206, "1688": [206, 932, 933], "1690": 206, "1692": 206, "1694": 206, "1696": 206, "1698": 206, "1700": 206, "1702": 206, "1704": 206, "1706": [206, 943], "1708": 206, "1710": 206, "1712": 206, "1714": 206, "1716": 206, "1718": 206, "1722": 206, "1724": 206, "1726": 206, "1728": 206, "1730": 206, "1732": 206, "1734": 206, "1736": 206, "1738": 206, "1740": 206, "1742": 206, "1744": 206, "1746": 206, "1748": 206, "1750": 206, "1752": 206, "1754": 206, "1756": 206, "1758": 206, "1760": 206, "1762": 206, "1764": [206, 265], "1766": 206, "1768": 206, "1770": 206, "1772": 206, "1774": 206, "1776": 206, "1778": 206, "1780": 206, "1782": 206, "1784": 206, "1786": 206, "1788": 206, "1790": 206, "1792": 206, "1794": 206, "1796": 206, "1798": 206, "1800": [206, 931], "1802": 206, "1804": 206, "1806": 206, "1808": 206, "1810": 206, "1812": 206, "1814": 206, "1816": 206, "1818": 206, "1820": 206, "1822": 206, "1824": 206, "1826": 206, "1828": 206, "1830": 206, "1832": 206, "1834": 206, "1836": 206, "1838": 206, "1840": 206, "1842": 206, "1844": 206, "1846": 206, "1848": 206, "1850": 206, "1852": 206, "1854": 206, "1856": 206, "1858": 206, "1860": 206, "1862": 206, "1864": 206, "1866": 206, "1868": 206, "1870": 206, "1872": 206, "1874": 206, "1876": 206, "1878": 206, "1880": 206, "1882": 206, "1884": 206, "1886": 206, "1888": 206, "1890": 206, "1892": 206, "1894": 206, "1896": 206, "1898": 206, "1900": [206, 216, 1044, 1046, 1050, 1052], "1902": 206, "1904": 206, "1906": 206, "1908": 206, "1910": 206, "1912": 206, "1914": 206, "1916": 206, "1918": 206, "1920": 206, "1922": 206, "1924": 206, "1926": 206, "1928": 206, "1930": 206, "1932": 206, "1934": 206, "1938": 206, "1940": 206, "1942": 206, "1944": 206, "1946": 206, "1948": 206, "1950": 206, "1952": 206, "1954": [206, 1010], "1956": [206, 980], "1958": 206, "1962": 206, "1964": 206, "1968": [206, 362], "1970": [206, 701], "1972": 206, "1974": 206, "1976": 206, "1978": [206, 322], "1980": [206, 527, 931], "1984": 206, "1986": [206, 1044, 1046, 1050, 1052], "1988": [206, 322, 436], "1990": [206, 527], "1992": 206, "1994": 206, "2004": 206, "2024": 206, "2026": 206, "2028": 206, "2030": 206, "2032": 206, "2034": 206, "2036": 206, "2038": 206, "2040": 206, "2042": 206, "2044": 206, "2046": 206, "2050": 206, "2052": 206, "2054": 206, "2056": 206, "2058": 206, "2060": 206, "2062": 206, "2064": 206, "2066": 206, "2068": 206, "2070": 206, "2072": 206, "2074": 206, "2076": 206, "2078": 206, "2080": 206, "2082": 206, "2084": 206, "2086": 206, "2088": 206, "2090": 206, "2092": 206, "2094": 206, "2096": 206, "2098": 206, "2100": 206, "2102": 206, "2104": 206, "2106": 206, "2108": 206, "2110": 206, "2112": 206, "2114": 206, "2116": 206, "2118": 206, "2120": 206, "2122": 206, "2124": 206, "2126": 206, "2128": 206, "2130": 206, "2132": 206, "2134": 206, "2136": 206, "2138": 206, "2140": 206, "2142": 206, "2144": 206, "2146": 206, "2148": 206, "2150": 206, "2152": 206, "2154": 206, "2156": 206, "2158": 206, "2160": 206, "2162": 206, "2164": 206, "2166": 206, "2168": 206, "2170": 206, "2172": 206, "2174": 206, "2176": 206, "2178": 206, "2180": 206, "2182": 206, "2184": 206, "2186": 206, "2188": 206, "2190": 206, "2192": 206, "2194": 206, "2196": 206, "2198": 206, "2200": 206, "2202": 206, "2204": 206, "2206": 206, "2208": 206, "2210": 206, "2214": 206, "2216": 206, "2218": 206, "2220": 206, "2222": 206, "2224": 206, "2226": 206, "2228": 206, "2230": 206, "2232": 206, "2234": 206, "2236": 206, "2238": 206, "2240": 206, "2242": 206, "2244": 206, "2246": 206, "2248": 206, "2250": 206, "2252": 206, "2254": 206, "2256": 206, "2258": 206, "2260": 206, "2262": 206, "2264": 206, "2266": 206, "2268": 206, "2272": 206, "2274": 206, "2276": 206, "2278": 206, "2280": 206, "2282": 206, "2284": 206, "2286": 206, "2288": 206, "2290": 206, "2292": 206, "2294": 206, "2296": 206, "2298": 206, "2300": 206, "2302": 206, "2304": 206, "2306": 206, "2308": 206, "2310": 206, "2312": 206, "2314": 206, "2316": 206, "2318": 206, "2320": 206, "2322": 206, "2324": 206, "2326": 206, "2328": 206, "2330": 206, "2332": [206, 839], "2334": 206, "2336": 206, "2338": 206, "2340": 206, "2342": 206, "2344": 206, "2346": 206, "2348": 206, "2350": 206, "2352": 206, "2354": 206, "2356": 206, "2358": 206, "2360": 206, "2362": 206, "2364": 206, "2366": 206, "2368": 206, "2370": 206, "2372": 206, "2374": 206, "2376": 206, "2378": 206, "2380": 206, "2382": 206, "2384": 206, "2386": 206, "2388": 206, "2390": 206, "2392": 206, "2394": 206, "2396": 206, "2398": 206, "2400": 206, "2402": 206, "2404": 206, "2406": 206, "2408": 206, "2410": 206, "2412": 206, "2414": 206, "2416": 206, "2418": 206, "2420": 206, "2422": 206, "2424": 206, "2426": 206, "2428": 206, "2430": 206, "2432": 206, "2434": 206, "2436": 206, "2438": 206, "2440": 206, "2442": 206, "2444": 206, "2446": 206, "2448": 206, "2450": 206, "2452": 206, "2454": 206, "2456": 206, "2458": 206, "2460": [206, 676], "2462": 206, "2464": 206, "2466": 206, "2468": 206, "2470": 206, "2472": 206, "2474": 206, "2476": 206, "2478": 206, "2480": 206, "2482": 206, "2484": 206, "2486": 206, "2488": 206, "2490": 206, "2492": 206, "2494": 206, "2496": 206, "2498": 206, "2500": 206, "2502": 206, "2504": 206, "2506": 206, "2508": 206, "2510": 206, "2512": 206, "2514": 206, "2516": 206, "2518": 206, "2520": 206, "2522": 206, "2524": 206, "2526": 206, "2528": 206, "2530": 206, "2532": 206, "2534": 206, "2536": 206, "2538": 206, "2540": 206, "2542": 206, "2544": 206, "2546": 206, "2548": 206, "2550": 206, "2552": 206, "2554": 206, "2556": 206, "2558": 206, "2560": 206, "2562": 206, "2564": 206, "2566": 206, "2568": 206, "2570": 206, "2572": 206, "2574": 206, "2576": 206, "2578": 206, "2580": 206, "2582": 206, "2584": 206, "2586": 206, "2588": 206, "2590": 206, "2592": 206, "2594": 206, "2596": 206, "2598": 206, "2600": 206, "2602": 206, "2604": 206, "2606": 206, "2608": 206, "2610": 206, "2612": 206, "2614": 206, "2616": 206, "2618": 206, "2620": 206, "2622": 206, "2624": 206, "2626": 206, "2628": 206, "2630": 206, "2632": 206, "2634": 206, "2636": 206, "2638": 206, "2640": [206, 265], "2642": 206, "2644": 206, "2646": 206, "2648": 206, "2650": 206, "2652": 206, "2654": 206, "2656": 206, "2658": 206, "2660": 206, "2662": 206, "2664": 206, "2666": 206, "2668": 206, "2670": 206, "2672": 206, "2674": 206, "2676": 206, "2678": 206, "2680": 206, "2682": 206, "2684": 206, "2686": 206, "2688": 206, "2690": 206, "2692": 206, "2694": 206, "2696": 206, "2698": 206, "2700": 206, "2702": 206, "2704": 206, "2706": 206, "2708": 206, "2710": 206, "2712": 206, "2714": 206, "2716": 206, "2718": 206, "2720": 206, "2722": 206, "2724": 206, "2726": 206, "2728": 206, "2730": [206, 261], "2732": 206, "2734": 206, "2736": 206, "2738": 206, "2740": 206, "2742": 206, "2744": 206, "2746": [206, 839, 865, 889], "2748": [206, 226, 244, 251], "2750": 206, "2752": 206, "2754": 206, "2756": 206, "2758": 206, "2760": 206, "2762": 206, "2764": 206, "2766": 206, "2768": 206, "2770": 206, "2772": 206, "2774": 206, "2776": 206, "2778": 206, "2780": 206, "2782": 206, "2784": 206, "2786": 206, "2788": 206, "2790": 206, "2792": 206, "2794": 206, "2796": 206, "2798": 206, "2800": [206, 249, 410], "2802": [206, 410], "2804": 206, "2806": 206, "2808": 206, "2810": 206, "2812": 206, "2814": 206, "2816": 206, "2818": 206, "2820": 206, "2822": 206, "2824": 206, "2826": 206, "2828": [206, 404], "2830": 206, "2832": 206, "2834": 206, "2836": 206, "2838": 206, "2840": 206, "2842": 206, "2844": 206, "2846": 206, "2848": 206, "2850": 206, "2852": 206, "2854": 206, "2856": 206, "2858": 206, "2860": 206, "2862": 206, "2864": 206, "2866": 206, "2868": 206, "2870": 206, "2872": 206, "2874": 206, "2876": 206, "2878": 206, "2880": 206, "2882": 206, "2884": 206, "2886": 206, "2888": 206, "2890": 206, "2892": 206, "2894": 206, "2896": 206, "2898": 206, "2900": 206, "2902": 206, "2904": 206, "2906": 206, "2910": 206, "2912": 206, "2914": 206, "2916": 206, "2918": 206, "2920": 206, "2922": 206, "2924": 206, "2926": 206, "2928": 206, "2930": 206, "2932": 206, "2934": 206, "2936": 206, "2938": 206, "2940": 206, "2942": 206, "2944": 206, "2946": 206, "2948": 206, "2950": 206, "2952": 206, "2954": 206, "2956": 206, "2958": 206, "2960": 206, "2962": 206, "2964": 206, "2966": 206, "2968": 206, "2970": 206, "2972": 206, "2974": 206, "2976": 206, "2978": 206, "2980": 206, "2982": 206, "2984": 206, "2986": 206, "2988": 206, "2990": 206, "2992": 206, "2994": 206, "2996": 206, "2998": 206, "3002": 206, "3004": 206, "3006": 206, "3008": 206, "3010": 206, "3012": 206, "3014": 206, "3016": 206, "3018": 206, "3020": 206, "3022": 206, "3024": 206, "3026": 206, "3028": 206, "3030": 206, "3032": 206, "3034": 206, "3036": 206, "3038": 206, "3040": 206, "3042": 206, "3044": 206, "3046": 206, "3048": 206, "3050": 206, "3052": 206, "3054": 206, "3056": 206, "3058": 206, "3060": 206, "3062": 206, "3064": 206, "3066": 206, "3068": 206, "3070": 206, "3072": 206, "3074": 206, "3076": 206, "3078": 206, "3080": 206, "3082": 206, "3084": 206, "3086": 206, "3088": 206, "3090": 206, "3092": 206, "3094": 206, "3096": 206, "3098": 206, "3100": 206, "3102": 206, "3104": 206, "3106": 206, "3108": 206, "3110": [206, 255], "3112": 206, "3114": 206, "3116": 206, "3118": 206, "3120": 206, "3122": 206, "3124": 206, "3126": 206, "3128": 206, "3130": 206, "3132": 206, "3134": 206, "3136": 206, "3138": 206, "3140": 206, "3142": 206, "3144": 206, "3146": 206, "3148": 206, "3150": 206, "3152": 206, "3154": 206, "3156": 206, "3158": 206, "3160": 206, "3162": 206, "3164": 206, "3166": 206, "3168": 206, "3170": 206, "3172": 206, "3174": 206, "3176": 206, "3178": 206, "3180": 206, "3182": 206, "3184": 206, "3186": 206, "3188": 206, "3190": 206, "3192": 206, "3194": 206, "3196": 206, "3198": 206, "3200": 206, "3202": 206, "3204": 206, "3206": 206, "3208": 206, "3210": 206, "3212": 206, "3214": 206, "3216": 206, "3218": 206, "3220": 206, "3222": 206, "3224": 206, "3226": 206, "3228": 206, "3230": 206, "3232": 206, "3234": 206, "3236": 206, "3238": 206, "3240": 206, "3242": 206, "3244": 206, "3246": 206, "3248": 206, "3250": 206, "3252": 206, "3254": 206, "3256": 206, "3258": 206, "3260": 206, "3262": 206, "3264": 206, "3266": 206, "3268": 206, "3270": 206, "3272": 206, "3274": 206, "3276": 206, "3278": 206, "3280": 206, "3282": 206, "3284": 206, "3286": 206, "3288": 206, "3290": 206, "3292": 206, "3294": 206, "3296": 206, "3298": 206, "3300": 206, "3302": 206, "3304": 206, "3306": 206, "3308": 206, "3310": 206, "3312": 206, "3314": 206, "3316": 206, "3318": 206, "3320": 206, "3322": 206, "3324": 206, "3326": 206, "3328": 206, "3330": 206, "3332": 206, "3334": 206, "3336": 206, "3338": 206, "3340": 206, "3342": 206, "3344": 206, "3346": 206, "3348": 206, "3350": 206, "3352": 206, "3354": 206, "3356": 206, "3358": 206, "3360": 206, "3362": 206, "3364": 206, "3366": 206, "3368": 206, "3370": 206, "3372": 206, "3374": 206, "3376": 206, "3378": 206, "3380": 206, "3382": 206, "3384": 206, "3386": 206, "3388": 206, "3390": 206, "3392": 206, "3394": 206, "3396": 206, "3398": 206, "3400": 206, "3402": 206, "3404": 206, "3406": 206, "3408": 206, "3410": 206, "3412": 206, "3414": 206, "3416": 206, "3418": 206, "3420": 206, "3422": 206, "3424": 206, "3426": 206, "3428": 206, "3430": 206, "3432": 206, "3434": 206, "3436": 206, "3438": 206, "3440": 206, "3442": 206, "3444": 206, "3446": 206, "3448": 206, "3450": 206, "3452": 206, "3454": 206, "3456": 206, "3458": 206, "3460": 206, "3462": 206, "3464": 206, "3466": 206, "3468": 206, "3470": 206, "3472": 206, "3474": 206, "3476": 206, "3478": 206, "3480": 206, "3482": 206, "3484": 206, "3486": 206, "3488": 206, "3490": 206, "3492": 206, "3494": 206, "3496": 206, "3498": 206, "3500": 206, "3502": 206, "3504": 206, "3506": 206, "3508": 206, "3510": 206, "3512": 206, "3514": 206, "3516": 206, "3518": 206, "3520": 206, "3522": 206, "3524": 206, "3526": 206, "3528": 206, "3530": 206, "3532": 206, "3534": 206, "3536": 206, "3538": 206, "3540": 206, "3542": 206, "3544": 206, "3546": 206, "3548": 206, "3550": 206, "3552": 206, "3554": 206, "3556": 206, "3558": 206, "3560": 206, "3562": 206, "3564": 206, "3566": 206, "3568": 206, "3570": 206, "3572": 206, "3574": 206, "3576": 206, "3578": 206, "3580": 206, "3582": 206, "3584": 206, "3586": 206, "3588": 206, "3590": 206, "3592": 206, "3594": 206, "3596": 206, "3598": 206, "3602": 206, "3604": 206, "3606": 206, "3608": 206, "3610": 206, "3612": 206, "3614": 206, "3616": 206, "3618": 206, "3620": [206, 1080], "3622": [206, 1080], "3624": [206, 1080], "3626": 206, "3628": 206, "3630": 206, "3632": 206, "3634": 206, "3636": 206, "3638": 206, "3640": 206, "3642": 206, "3644": 206, "3646": 206, "3648": 206, "3650": 206, "3652": 206, "3654": 206, "3656": 206, "3658": 206, "3660": 206, "3662": 206, "3664": 206, "3666": 206, "3668": 206, "3670": 206, "3672": 206, "3674": 206, "3676": 206, "3678": 206, "3680": 206, "3682": 206, "3684": 206, "3686": 206, "3688": 206, "3690": 206, "3692": 206, "3694": 206, "3696": 206, "3698": 206, "3700": 206, "3702": 206, "3704": 206, "3706": 206, "3708": 206, "3710": 206, "3712": 206, "3714": 206, "3716": 206, "3718": 206, "3720": 206, "3722": [206, 886], "3724": 206, "3726": 206, "3728": 206, "3730": 206, "3732": 206, "3734": 206, "3736": 206, "3738": 206, "3740": 206, "3742": 206, "3744": 206, "3746": 206, "3748": 206, "3750": 206, "3752": 206, "3754": 206, "3756": 206, "3758": 206, "3760": 206, "3762": 206, "3764": 206, "3766": 206, "3768": 206, "3770": [206, 255], "3772": 206, "3774": 206, "3776": 206, "3778": 206, "3780": 206, "3782": 206, "3784": 206, "3786": 206, "3788": 206, "3790": 206, "3792": 206, "3794": 206, "3796": 206, "3798": 206, "3800": 206, "3802": 206, "3804": 206, "3806": 206, "3808": 206, "3810": 206, "3812": 206, "3814": 206, "3816": 206, "3818": 206, "3820": 206, "3822": 206, "3824": 206, "3826": 206, "3828": 206, "3830": 206, "3832": 206, "3834": 206, "3836": 206, "3838": 206, "3840": 206, "3842": 206, "3844": 206, "3846": 206, "3848": 206, "3850": 206, "3852": 206, "3854": 206, "3856": 206, "3858": 206, "3860": 206, "3862": 206, "3864": 206, "3866": 206, "3868": 206, "3870": 206, "3872": 206, "3874": [206, 1080], "3876": [206, 1080], "3878": [206, 1080], "3880": 206, "3882": 206, "3884": 206, "3886": 206, "3888": 206, "3890": 206, "3892": 206, "3894": 206, "3896": 206, "3898": 206, "3900": 206, "3902": 206, "3904": 206, "3906": 206, "3908": 206, "3910": 206, "3912": 206, "3914": 206, "3916": 206, "3918": 206, "3920": 206, "3922": 206, "3924": 206, "3926": 206, "3928": 206, "3930": 206, "3932": 206, "3934": 206, "3936": 206, "3938": 206, "3940": 206, "3942": 206, "3946": 206, "3948": 206, "3950": 206, "3952": 206, "3954": 206, "3956": 206, "3958": 206, "3960": 206, "3962": 206, "3964": 206, "3966": 206, "3968": 206, "3970": 206, "3972": 206, "3974": 206, "3976": 206, "3978": 206, "3980": 206, "3982": 206, "3984": 206, "3986": 206, "3988": 206, "3990": 206, "3992": 206, "3994": 206, "3996": 206, "3998": 206, "4002": 206, "4004": 206, "4006": 206, "4008": 206, "4010": 206, "4012": 206, "4014": 206, "4016": 206, "4018": 206, "4020": 206, "4022": 206, "4024": 206, "4026": 206, "4028": 206, "4030": 206, "4032": 206, "4034": 206, "4036": 206, "4038": 206, "4040": 206, "4042": 206, "4044": 206, "4046": 206, "4048": 206, "4050": 206, "4052": 206, "4054": 206, "4056": 206, "4058": 206, "4060": 206, "4062": 206, "4064": 206, "4066": 206, "4068": 206, "4070": 206, "4072": 206, "4074": 206, "4076": 206, "4078": 206, "4080": 206, "4082": 206, "4084": 206, "4086": 206, "4088": 206, "4090": 206, "4092": 206, "4094": 206, "4098": 206, "4100": 206, "4102": 206, "4104": 206, "4106": 206, "4108": 206, "4110": 206, "4112": 206, "4114": 206, "4116": 206, "4118": 206, "4120": 206, "4122": 206, "4124": 206, "4126": 206, "4128": 206, "4130": 206, "4132": 206, "4134": 206, "4136": 206, "4138": 206, "4140": 206, "4142": 206, "4144": 206, "4146": 206, "4148": 206, "4150": 206, "4152": 206, "4154": 206, "4156": 206, "4158": 206, "4160": 206, "4162": 206, "4164": 206, "4166": 206, "4168": 206, "4170": 206, "4172": 206, "4174": 206, "4176": 206, "4178": 206, "4180": 206, "4182": 206, "4184": 206, "4186": 206, "4188": 206, "4190": 206, "4192": 206, "4194": 206, "4196": 206, "4198": 206, "4200": 206, "4202": 206, "4204": 206, "4206": 206, "4208": 206, "4210": 206, "4212": 206, "4214": 206, "4216": 206, "4218": 206, "4220": 206, "4222": 206, "4224": 206, "4226": 206, "4228": 206, "4230": 206, "4232": 206, "4234": 206, "4236": 206, "4238": 206, "4240": 206, "4242": 206, "4244": 206, "4246": 206, "4248": 206, "4250": 206, "4252": 206, "4254": 206, "4256": 206, "4258": 206, "4260": 206, "4262": 206, "4264": 206, "4266": 206, "4268": 206, "4270": 206, "4272": 206, "4274": 206, "4276": 206, "4278": 206, "4280": 206, "4282": 206, "4284": 206, "4286": 206, "4288": 206, "4290": 206, "4292": 206, "4294": 206, "4296": 206, "4298": 206, "4300": 206, "4302": 206, "4304": 206, "4306": 206, "4308": 206, "4310": 206, "4312": 206, "4314": 206, "4316": 206, "4318": 206, "4320": 206, "4322": 206, "4324": 206, "4326": 206, "4328": 206, "4330": 206, "4332": 206, "4334": 206, "4336": 206, "4338": 206, "4340": 206, "4342": 206, "4344": 206, "4346": 206, "4348": 206, "4350": 206, "4352": 206, "4354": 206, "4356": 206, "4358": 206, "4360": 206, "4362": 206, "4364": 206, "4366": 206, "4368": 206, "4370": 206, "4372": 206, "4374": 206, "4376": 206, "4378": 206, "4380": 206, "4382": 206, "4384": 206, "4386": 206, "4388": 206, "4390": 206, "4392": 206, "4394": 206, "4396": 206, "4398": 206, "4400": 206, "4402": 206, "4404": 206, "4406": 206, "4408": 206, "4410": 206, "4412": 206, "4414": 206, "4416": 206, "4418": 206, "4420": 206, "4422": 206, "4424": 206, "4426": 206, "4428": 206, "4430": 206, "4432": 206, "4434": 206, "4436": 206, "4438": 206, "4440": 206, "4442": 206, "4444": 206, "4446": 206, "4448": 206, "4450": 206, "4452": 206, "4454": 206, "4456": 206, "4458": 206, "4460": 206, "4462": 206, "4464": 206, "4466": 206, "4468": 206, "4470": 206, "4472": 206, "4474": 206, "4476": 206, "4478": 206, "4480": 206, "4482": 206, "4484": 206, "4486": 206, "4488": 206, "4490": 206, "4492": 206, "4494": 206, "4496": 206, "4498": 206, "4502": 206, "4504": 206, "4506": 206, "4508": 206, "4510": 206, "4512": 206, "4514": 206, "4516": 206, "4518": 206, "4520": 206, "4522": 206, "4524": 206, "4526": 206, "4528": 206, "4530": 206, "4532": 206, "4534": 206, "4536": 206, "4538": 206, "4540": 206, "4542": 206, "4544": 206, "4546": 206, "4548": 206, "4550": 206, "4552": 206, "4554": 206, "4556": 206, "4558": 206, "4560": 206, "4562": 206, "4564": 206, "4566": 206, "4568": 206, "4570": 206, "4572": 206, "4574": 206, "4578": 206, "4580": 206, "4582": 206, "4584": 206, "4586": 206, "4588": 206, "4590": 206, "4592": 206, "4594": 206, "4596": 206, "4598": 206, "4600": 206, "4602": 206, "4604": 206, "4606": 206, "4608": 206, "4610": 206, "4612": 206, "4614": 206, "4616": 206, "4618": 206, "4620": 206, "4622": 206, "4624": 206, "4626": 206, "4628": [206, 219], "4630": [206, 404], "4632": 206, "4634": 206, "4636": 206, "4638": 206, "4640": 206, "4642": 206, "4644": 206, "4646": 206, "4648": 206, "4650": 206, "4652": 206, "4654": 206, "4656": 206, "4658": 206, "4662": 206, "4664": 206, "4666": 206, "4668": 206, "4670": 206, "4672": 206, "4674": 206, "4676": 206, "4680": 206, "4682": 206, "4684": 206, "4686": 206, "4688": 206, "4690": 206, "4692": 206, "4694": 206, "4696": 206, "4698": 206, "4700": 206, "4702": 206, "4704": 206, "4706": 206, "4708": 206, "4710": 206, "4712": 206, "4714": 206, "4716": 206, "4718": 206, "4720": 206, "4722": 206, "4724": 206, "4726": 206, "4728": 206, "4730": 206, "4732": 206, "4734": 206, "4736": 206, "4738": 206, "4740": 206, "4742": 206, "4744": 206, "4746": 206, "4748": 206, "4750": 206, "4752": 206, "4754": 206, "4756": 206, "4758": 206, "4760": 206, "4762": 206, "4764": 206, "4766": 206, "4768": 206, "4770": 206, "4772": 206, "4774": 206, "4776": 206, "4778": 206, "4780": 206, "4782": 206, "4784": 206, "4786": 206, "4788": 206, "4790": 206, "4792": 206, "4794": 206, "4796": 206, "4798": 206, "4802": 206, "4804": 206, "4806": 206, "4808": 206, "4810": 206, "4812": 206, "4814": 206, "4816": 206, "4818": 206, "4820": 206, "4822": 206, "4824": 206, "4826": 206, "4828": 206, "4830": 206, "4832": 206, "4834": 206, "4836": 206, "4838": 206, "4840": 206, "4842": 206, "4844": 206, "4846": 206, "4848": 206, "4850": 206, "4852": 206, "4854": 206, "4856": 206, "4858": 206, "4860": 206, "4862": 206, "4864": 206, "4866": [206, 216], "4868": 206, "4870": 206, "4872": 206, "4874": 206, "4876": 206, "4878": 206, "4880": 206, "4882": [206, 802], "4884": 206, "4886": 206, "4888": 206, "4890": 206, "4892": 206, "4894": 206, "4896": 206, "4898": 206, "4900": 206, "4902": 206, "4904": 206, "4906": 206, "4908": 206, "4910": 206, "4912": 206, "4914": 206, "4916": 206, "4918": 206, "4920": 206, "4922": 206, "4924": 206, "4926": [206, 219], "4928": 206, "4930": 206, "4932": 206, "4934": 206, "4936": 206, "4938": 206, "4940": 206, "4942": 206, "4944": 206, "4946": 206, "4948": 206, "4950": [206, 223], "4952": 206, "4954": 206, "4956": 206, "4958": 206, "4960": 206, "4962": 206, "4964": 206, "4966": 206, "4968": 206, "4970": 206, "4972": 206, "4974": 206, "4976": 206, "4978": 206, "4980": 206, "4982": 206, "4984": 206, "4986": 206, "4988": 206, "4990": 206, "4992": 206, "4994": 206, "4996": 206, "4998": 206, "5002": 206, "5004": 206, "5006": 206, "5008": 206, "5010": 206, "5012": 206, "5014": 206, "5016": 206, "5018": 206, "5020": 206, "5022": 206, "5024": 206, "5026": 206, "5028": 206, "5030": 206, "5032": 206, "5034": 206, "5036": 206, "5038": 206, "5040": 206, "5042": 206, "5044": 206, "5046": 206, "5048": 206, "5052": 206, "5054": 206, "5056": 206, "5058": 206, "5060": 206, "5062": 206, "5064": 206, "5066": 206, "5068": 206, "5070": 206, "5072": 206, "5074": 206, "5076": 206, "5078": 206, "5080": [206, 839], "5082": 206, "5084": 206, "5086": 206, "5088": 206, "5090": 206, "5092": 206, "5094": 206, "5096": 206, "5098": 206, "5100": 206, "5102": 206, "5104": 206, "5106": 206, "5108": 206, "5110": 206, "5112": 206, "5114": 206, "5116": 206, "5118": 206, "5120": 206, "5122": 206, "5124": 206, "5126": 206, "5128": 206, "5130": 206, "5132": 206, "5134": 206, "5136": 206, "5138": 206, "5140": 206, "5142": 206, "5144": 206, "5146": 206, "5148": 206, "5150": 206, "5152": 206, "5154": 206, "5156": 206, "5158": 206, "5160": 206, "5162": 206, "5164": 206, "5166": 206, "5168": 206, "5170": 206, "5172": 206, "5174": 206, "5176": 206, "5178": 206, "5180": 206, "5182": 206, "5184": 206, "5186": 206, "5188": 206, "5190": 206, "5192": 206, "5194": 206, "5196": 206, "5198": 206, "5200": 206, "5202": 206, "5204": 206, "5206": 206, "5208": 206, "5210": 206, "5212": 206, "5214": 206, "5216": 206, "5218": 206, "5220": 206, "5222": 206, "5224": 206, "5226": 206, "5228": 206, "5230": 206, "5232": 206, "5234": 206, "5236": 206, "5238": 206, "5240": 206, "5242": 206, "5244": 206, "5246": 206, "5248": 206, "5250": 206, "5252": 206, "5254": 206, "5256": 206, "5258": 206, "5260": 206, "5262": 206, "5264": 206, "5266": 206, "5268": 206, "5270": 206, "5272": 206, "5274": 206, "5276": 206, "5278": 206, "5280": 206, "5282": 206, "5284": 206, "5286": 206, "5288": 206, "5290": 206, "5292": 206, "5294": 206, "5296": 206, "5298": 206, "5300": 206, "5302": 206, "5304": 206, "5306": 206, "5308": 206, "5310": 206, "5312": 206, "5314": 206, "5316": 206, "5318": 206, "5320": 206, "5322": 206, "5324": 206, "5326": 206, "5328": 206, "5330": 206, "5332": 206, "5334": 206, "5336": 206, "5338": 206, "5340": 206, "5342": 206, "5344": 206, "5346": 206, "5348": 206, "5350": 206, "5352": 206, "5354": 206, "5356": 206, "5358": 206, "5360": 206, "5362": [206, 249, 410], "5364": 206, "5366": 206, "5368": 206, "5370": 206, "5372": 206, "5374": 206, "5376": 206, "5378": 206, "5380": 206, "5382": 206, "5384": 206, "5386": 206, "5388": 206, "5390": 206, "5392": 206, "5394": 206, "5396": 206, "5398": 206, "5400": 206, "5402": 206, "5404": 206, "5406": 206, "5408": 206, "5410": [206, 404], "5412": 206, "5414": 206, "5416": 206, "5418": 206, "5420": 206, "5422": 206, "5424": 206, "5426": 206, "5428": 206, "5430": 206, "5432": 206, "5434": 206, "5436": 206, "5438": 206, "5440": 206, "5442": 206, "5444": 206, "5446": 206, "5448": 206, "5450": 206, "5452": 206, "5454": 206, "5456": 206, "5458": 206, "5460": 206, "5462": 206, "5464": 206, "5466": 206, "5468": 206, "5470": 206, "5472": 206, "5474": 206, "5476": 206, "5478": 206, "5480": 206, "5482": 206, "5484": 206, "5486": 206, "5488": 206, "5490": 206, "5492": 206, "5494": 206, "5496": 206, "5498": 206, "5500": 206, "5502": 206, "5504": 206, "5506": 206, "5508": 206, "5510": 206, "5512": 206, "5514": 206, "5516": 206, "5518": 206, "5520": 206, "5522": 206, "5524": 206, "5526": 206, "5528": 206, "5530": 206, "5532": 206, "5534": 206, "5536": 206, "5538": 206, "5540": 206, "5542": 206, "5544": 206, "5546": 206, "5548": 206, "5550": 206, "5552": 206, "5554": 206, "5556": 206, "5558": 206, "5560": 206, "5562": 206, "5564": 206, "5566": 206, "5568": 206, "5570": 206, "5572": 206, "5574": 206, "5576": 206, "5578": 206, "5580": 206, "5582": 206, "5584": 206, "5586": 206, "5588": 206, "5590": 206, "5592": 206, "5594": 206, "5596": 206, "5598": 206, "5600": 206, "5602": 206, "5604": 206, "5606": 206, "5608": 206, "5610": 206, "5612": 206, "5614": 206, "5616": 206, "5618": 206, "5620": 206, "5622": 206, "5624": 206, "5626": 206, "5628": 206, "5630": 206, "5632": 206, "5634": 206, "5636": 206, "5638": 206, "5640": 206, "5642": 206, "5644": 206, "5646": 206, "5648": 206, "5650": 206, "5652": 206, "5654": 206, "5656": 206, "5658": 206, "5660": 206, "5662": 206, "5664": 206, "5666": 206, "5668": 206, "5670": 206, "5672": 206, "5674": 206, "5676": 206, "5678": [206, 872], "5680": 206, "5682": 206, "5684": 206, "5686": 206, "5688": 206, "5690": 206, "5692": 206, "5694": 206, "5696": 206, "5698": 206, "5700": 206, "5702": 206, "5704": 206, "5706": 206, "5708": 206, "5710": 206, "5712": 206, "5714": 206, "5716": 206, "5718": 206, "5720": 206, "5722": 206, "5724": 206, "5726": 206, "5728": 206, "5730": 206, "5732": 206, "5734": 206, "5736": 206, "5738": 206, "5740": 206, "5742": 206, "5744": 206, "5746": 206, "5748": 206, "5750": 206, "5752": 206, "5754": 206, "5756": 206, "5758": 206, "5760": 206, "5762": 206, "5764": 206, "5766": 206, "5768": 206, "5770": 206, "5772": 206, "5774": 206, "5776": 206, "5778": 206, "5780": 206, "5782": 206, "5784": 206, "5786": 206, "5788": 206, "5790": 206, "5792": 206, "5794": 206, "5796": 206, "5798": 206, "5800": 206, "5802": 206, "5804": 206, "5806": 206, "5808": 206, "5810": 206, "5812": 206, "5814": 206, "5816": 206, "5818": 206, "5820": 206, "5822": 206, "5824": 206, "5826": 206, "5828": 206, "5830": 206, "5832": [206, 216], "5834": 206, "5836": 206, "5838": 206, "5840": 206, "5842": 206, "5844": 206, "5846": 206, "5848": 206, "5850": 206, "5852": 206, "5854": 206, "5856": 206, "5858": 206, "5860": 206, "5862": 206, "5864": 206, "5866": 206, "5868": 206, "5870": 206, "5872": 206, "5874": 206, "5876": 206, "5878": 206, "5880": 206, "5882": 206, "5884": 206, "5886": 206, "5888": 206, "5890": 206, "5892": 206, "5894": 206, "5896": 206, "5898": 206, "5900": 206, "5902": 206, "5904": 206, "5906": 206, "5908": 206, "5910": 206, "5912": 206, "5914": 206, "5916": 206, "5918": 206, "5920": 206, "5922": 206, "5924": 206, "5926": 206, "5928": 206, "5930": 206, "5932": 206, "5934": 206, "5936": 206, "5938": 206, "5940": 206, "5942": 206, "5944": 206, "5946": 206, "5948": 206, "5950": 206, "5952": 206, "5954": 206, "5956": 206, "5958": 206, "5960": 206, "5962": 206, "5964": 206, "5966": 206, "5968": 206, "5970": 206, "5972": 206, "5974": 206, "5976": 206, "5978": 206, "5980": 206, "5982": 206, "5984": 206, "5986": 206, "5988": 206, "5990": 206, "5992": 206, "5994": 206, "5996": 206, "5998": 206, "6000": [206, 971], "6002": 206, "6004": 206, "6006": 206, "6008": 206, "6010": 206, "6012": 206, "6014": 206, "6016": 206, "6018": 206, "6020": 206, "6022": 206, "6024": 206, "6026": 206, "6028": 206, "6030": 206, "6032": 206, "6034": 206, "6036": 206, "6038": 206, "6040": 206, "6042": 206, "6044": 206, "6046": 206, "6048": 206, "6050": 206, "6052": 206, "6054": 206, "6056": 206, "6058": 206, "6060": 206, "6062": 206, "6064": 206, "6066": 206, "6068": 206, "6070": 206, "6072": 206, "6074": 206, "6076": 206, "6078": 206, "6080": 206, "6082": 206, "6084": 206, "6086": 206, "6088": 206, "6090": 206, "6092": 206, "6094": 206, "6096": 206, "6098": 206, "6100": 206, "6102": 206, "6104": 206, "6106": 206, "6108": 206, "6110": 206, "6112": 206, "6114": 206, "6116": 206, "6118": 206, "6120": 206, "6122": 206, "6124": 206, "6126": 206, "6128": 206, "6130": 206, "6132": 206, "6134": 206, "6136": 206, "6138": 206, "6140": 206, "6142": 206, "6144": 206, "6146": 206, "6148": 206, "6150": 206, "6152": 206, "6154": 206, "6156": 206, "6158": 206, "6160": 206, "6162": 206, "6164": 206, "6166": 206, "6168": 206, "6170": 206, "6172": 206, "6174": 206, "6176": 206, "6178": 206, "6180": 206, "6182": 206, "6184": 206, "6186": 206, "6188": 206, "6190": 206, "6192": 206, "6194": 206, "6196": 206, "6198": 206, "6200": 206, "6202": 206, "6204": 206, "6206": 206, "6208": 206, "6210": 206, "6212": 206, "6214": 206, "6216": 206, "6218": 206, "6220": 206, "6222": 206, "6224": 206, "6226": 206, "6228": 206, "6230": 206, "6232": 206, "6234": 206, "6236": 206, "6238": 206, "6240": 206, "6242": 206, "6244": 206, "6246": 206, "6248": 206, "6250": 206, "6252": 206, "6254": 206, "6256": 206, "6258": 206, "6260": 206, "6262": 206, "6264": 206, "6266": 206, "6268": 206, "6270": 206, "6272": 206, "6274": 206, "6276": 206, "6278": 206, "6280": 206, "6282": 206, "6284": 206, "6286": 206, "6288": 206, "6290": 206, "6292": 206, "6294": 206, "6296": 206, "6298": 206, "6300": 206, "6302": 206, "6304": 206, "6306": 206, "6308": 206, "6310": 206, "6312": 206, "6314": 206, "6316": 206, "6318": 206, "6320": 206, "6322": 206, "6324": 206, "6326": 206, "6328": 206, "6330": 206, "6332": 206, "6334": 206, "6336": 206, "6338": 206, "6340": 206, "6342": 206, "6344": 206, "6346": 206, "6348": 206, "6350": 206, "6352": 206, "6354": 206, "6356": 206, "6358": 206, "6360": 206, "6362": 206, "6364": 206, "6366": 206, "6368": 206, "6370": 206, "6372": 206, "6374": 206, "6376": 206, "6378": 206, "6380": 206, "6382": 206, "6384": 206, "6386": 206, "6388": 206, "6390": 206, "6392": 206, "6394": 206, "6396": 206, "6398": 206, "6400": 206, "6402": 206, "6404": 206, "6406": 206, "6408": 206, "6410": 206, "6412": 206, "6414": 206, "6416": 206, "6418": 206, "6420": 206, "6422": 206, "6424": 206, "6426": 206, "6428": 206, "6430": 206, "6432": 206, "6434": 206, "6436": 206, "6438": 206, "6440": 206, "6442": 206, "6444": 206, "6446": 206, "6448": 206, "6450": 206, "6452": 206, "6454": 206, "6456": 206, "6458": 206, "6460": 206, "6462": 206, "6464": 206, "6466": 206, "6468": 206, "6470": 206, "6472": 206, "6474": 206, "6476": 206, "6478": 206, "6480": 206, "6482": 206, "6484": 206, "6486": 206, "6488": 206, "6490": 206, "6492": 206, "6494": 206, "6496": 206, "6498": 206, "6500": 206, "6502": 206, "6504": 206, "6506": 206, "6508": 206, "6510": 206, "6512": 206, "6514": 206, "6516": 206, "6518": 206, "6520": 206, "6522": 206, "6524": 206, "6526": 206, "6528": 206, "6530": 206, "6532": 206, "6534": 206, "6536": 206, "6538": 206, "6540": 206, "6542": 206, "6544": 206, "6546": 206, "6548": 206, "6550": 206, "6552": 206, "6554": 206, "6556": 206, "6558": 206, "6560": 206, "6562": 206, "6564": 206, "6566": 206, "6568": 206, "6570": 206, "6572": 206, "6574": 206, "6576": 206, "6578": 206, "6580": 206, "6582": 206, "6584": 206, "6586": 206, "6588": 206, "6590": 206, "6592": 206, "6594": 206, "6596": 206, "6598": 206, "6600": 206, "6602": 206, "6604": 206, "6606": 206, "6608": 206, "6610": 206, "6612": 206, "6614": 206, "6616": 206, "6618": 206, "6620": 206, "6622": 206, "6624": 206, "6626": 206, "6628": 206, "6630": 206, "6632": 206, "6634": 206, "6636": 206, "6638": 206, "6640": 206, "6642": 206, "6644": 206, "6646": 206, "6648": 206, "6650": 206, "6652": 206, "6654": 206, "6656": 206, "6658": 206, "6660": 206, "6662": 206, "6664": 206, "6666": 206, "6668": 206, "6670": 206, "6672": 206, "6674": 206, "6676": 206, "6678": 206, "6680": 206, "6682": 206, "6684": 206, "6686": 206, "6688": 206, "6690": 206, "6692": 206, "6694": 206, "6696": 206, "6698": 206, "6700": 206, "6702": 206, "6704": 206, "6706": 206, "6708": 206, "6710": 206, "6714": 206, "6716": [206, 229], "6718": 206, "6720": 206, "6722": 206, "6724": 206, "6726": 206, "6728": 206, "6730": 206, "6732": 206, "6734": 206, "6736": 206, "6738": 206, "6740": 206, "6742": 206, "6744": 206, "6746": 206, "6748": 206, "6750": 206, "6752": 206, "6754": 206, "6756": 206, "6758": 206, "6760": 206, "6762": 206, "6764": 206, "6766": 206, "6768": 206, "6770": 206, "6772": 206, "6774": 206, "6776": 206, "6778": 206, "6780": 206, "6782": 206, "6784": 206, "6786": 206, "6788": 206, "6790": 206, "6792": 206, "6794": 206, "6796": 206, "6798": 206, "6800": 206, "6802": 206, "6804": 206, "6806": 206, "6808": 206, "6810": 206, "6812": 206, "6814": 206, "6816": 206, "6818": 206, "6820": 206, "6822": 206, "6824": 206, "6826": 206, "6828": 206, "6830": 206, "6832": 206, "6834": 206, "6836": 206, "6838": 206, "6840": 206, "6842": 206, "6844": 206, "6846": 206, "6848": 206, "6850": 206, "6852": 206, "6854": 206, "6856": 206, "6858": [206, 255], "6860": 206, "6862": 206, "6864": 206, "6866": 206, "6868": 206, "6870": 206, "6872": 206, "6874": 206, "6876": 206, "6878": 206, "6880": 206, "6882": 206, "6884": 206, "6886": 206, "6888": 206, "6890": 206, "6892": 206, "6894": 206, "6896": 206, "6898": 206, "6900": 206, "6902": 206, "6904": 206, "6906": 206, "6908": 206, "6910": 206, "6912": 206, "6914": 206, "6916": 206, "6918": 206, "6920": 206, "6922": 206, "6924": 206, "6926": 206, "6928": 206, "6930": 206, "6932": 206, "6934": 206, "6936": 206, "6938": 206, "6940": 206, "6942": 206, "6944": 206, "6946": 206, "6948": 206, "6950": 206, "6952": 206, "6954": 206, "6956": 206, "6958": 206, "6960": 206, "6962": 206, "6964": 206, "6966": 206, "6968": 206, "6970": 206, "6972": 206, "6974": 206, "6976": 206, "6978": 206, "6980": 206, "6982": 206, "6984": 206, "6986": 206, "6988": 206, "6990": 206, "6992": 206, "6994": 206, "6996": 206, "6998": 206, "7000": 206, "7002": 206, "7004": 206, "7006": 206, "7008": 206, "7010": 206, "7012": 206, "7014": 206, "7016": 206, "7018": 206, "7020": 206, "7022": 206, "7024": 206, "7026": 206, "7028": 206, "7030": 206, "7032": 206, "7034": 206, "7036": 206, "7038": 206, "7040": 206, "7042": 206, "7044": 206, "7046": 206, "7048": 206, "7050": 206, "7052": 206, "7054": 206, "7056": 206, "7058": 206, "7060": 206, "7062": 206, "7064": 206, "7066": 206, "7068": 206, "7070": 206, "7072": 206, "7074": 206, "7076": 206, "7078": 206, "7080": 206, "7082": 206, "7084": 206, "7086": 206, "7088": 206, "7090": 206, "7092": 206, "7094": 206, "7096": 206, "7098": 206, "7100": 206, "7102": 206, "7104": 206, "7106": 206, "7108": 206, "7110": 206, "7112": 206, "7114": 206, "7116": 206, "7118": 206, "7120": 206, "7122": 206, "7124": 206, "7126": 206, "7128": 206, "7130": 206, "7132": 206, "7134": 206, "7136": 206, "7138": 206, "7140": 206, "7142": 206, "7144": 206, "7146": 206, "7148": 206, "7150": 206, "7152": 206, "7154": 206, "7156": 206, "7158": 206, "7160": 206, "7162": 206, "7164": 206, "7166": 206, "7168": 206, "7170": 206, "7172": 206, "7174": 206, "7176": 206, "7178": 206, "7180": 206, "7182": 206, "7184": 206, "7186": 206, "7188": 206, "7190": 206, "7192": 206, "7194": 206, "7196": 206, "7198": 206, "7200": 206, "7202": 206, "7204": 206, "7206": 206, "7208": 206, "7210": 206, "7212": 206, "7214": 206, "7216": 206, "7218": 206, "7220": 206, "7222": 206, "7224": 206, "7226": 206, "7228": 206, "7230": 206, "7232": 206, "7234": 206, "7236": 206, "7238": 206, "7240": 206, "7242": 206, "7244": 206, "7246": 206, "7248": 206, "7250": 206, "7252": 206, "7254": 206, "7256": 206, "7258": 206, "7260": 206, "7262": 206, "7264": 206, "7266": 206, "7268": 206, "7270": 206, "7272": 206, "7274": 206, "7276": 206, "7278": 206, "7280": 206, "7282": 206, "7284": 206, "7286": 206, "7288": 206, "7290": 206, "7292": 206, "7294": 206, "7296": 206, "7298": 206, "7300": 206, "7302": 206, "7304": 206, "7306": 206, "7308": 206, "7310": 206, "7312": 206, "7314": 206, "7316": 206, "7318": 206, "7320": 206, "7322": 206, "7324": 206, "7326": 206, "7328": 206, "7330": 206, "7332": 206, "7334": 206, "7336": 206, "7338": 206, "7340": 206, "7342": 206, "7344": 206, "7346": 206, "7348": 206, "7350": 206, "7352": 206, "7354": 206, "7356": 206, "7358": 206, "7360": 206, "7362": 206, "7364": 206, "7366": 206, "7368": 206, "7370": 206, "7372": 206, "7374": 206, "7376": 206, "7378": 206, "7380": 206, "7382": 206, "7384": 206, "7386": 206, "7388": 206, "7392": 206, "7394": 206, "7396": 206, "7398": 206, "7400": 206, "7402": 206, "7404": 206, "7406": 206, "7408": 206, "7410": 206, "7412": 206, "7414": 206, "7416": 206, "7418": 206, "7420": 206, "7422": 206, "7424": 206, "7426": 206, "7428": 206, "7430": 206, "7432": 206, "7434": 206, "7436": 206, "7438": 206, "7440": 206, "7442": 206, "7444": 206, "7446": 206, "7448": 206, "7450": 206, "7452": 206, "7454": 206, "7456": 206, "7458": 206, "7460": 206, "7462": 206, "7464": 206, "7466": 206, "7468": 206, "7470": 206, "7472": 206, "7474": 206, "7476": 206, "7478": 206, "7480": 206, "7482": 206, "7484": 206, "7486": 206, "7488": 206, "7490": 206, "7492": 206, "7494": 206, "7496": 206, "7498": 206, "7500": 206, "7502": 206, "7504": 206, "7506": 206, "7508": 206, "7510": 206, "7512": 206, "7514": 206, "7516": 206, "7518": 206, "7520": 206, "7522": 206, "7524": 206, "7526": 206, "7528": 206, "7530": 206, "7532": 206, "7534": 206, "7536": 206, "7538": 206, "7540": 206, "7542": 206, "7544": 206, "7546": 206, "7548": 206, "7550": 206, "7552": 206, "7554": 206, "7556": 206, "7558": 206, "7560": 206, "7562": 206, "7564": 206, "7566": 206, "7568": 206, "7570": 206, "7572": 206, "7574": 206, "7576": 206, "7578": 206, "7580": 206, "7582": 206, "7584": 206, "7586": 206, "7588": 206, "7590": 206, "7592": 206, "7594": 206, "7596": 206, "7598": 206, "7600": 206, "7602": 206, "7604": 206, "7606": 206, "7608": 206, "7610": 206, "7612": 206, "7614": 206, "7616": 206, "7618": 206, "7620": 206, "7622": 206, "7624": 206, "7626": 206, "7628": 206, "7630": 206, "7632": 206, "7634": 206, "7636": 206, "7638": 206, "7640": 206, "7642": 206, "7644": 206, "7646": 206, "7648": 206, "7650": 206, "7652": 206, "7654": 206, "7656": 206, "7658": 206, "7660": 206, "7662": 206, "7664": 206, "7666": 206, "7668": 206, "7670": 206, "7672": 206, "7674": 206, "7676": 206, "7678": 206, "7680": 206, "7682": 206, "7684": 206, "7686": 206, "7688": 206, "7690": 206, "7692": 206, "7694": 206, "7696": 206, "7698": 206, "7700": 206, "7702": 206, "7704": 206, "7706": 206, "7708": 206, "7710": 206, "7712": 206, "7714": 206, "7716": 206, "7718": 206, "7720": 206, "7722": 206, "7724": 206, "7726": 206, "7728": 206, "7730": 206, "7732": 206, "7734": 206, "7736": 206, "7738": 206, "7740": 206, "7742": 206, "7744": 206, "7746": 206, "7748": 206, "7750": 206, "7752": 206, "7754": 206, "7756": 206, "7758": 206, "7760": 206, "7762": 206, "7764": 206, "7766": 206, "7768": 206, "7770": 206, "7772": 206, "7774": 206, "7776": 206, "7778": 206, "7780": 206, "7782": 206, "7784": 206, "7786": 206, "7788": 206, "7790": 206, "7792": 206, "7794": 206, "7796": 206, "7798": 206, "7800": 206, "7802": 206, "7804": 206, "7806": 206, "7808": 206, "7810": 206, "7812": 206, "7814": 206, "7816": 206, "7818": 206, "7820": 206, "7822": 206, "7824": 206, "7826": 206, "7828": 206, "7830": 206, "7832": 206, "7834": 206, "7836": 206, "7838": 206, "7842": 206, "7844": 206, "7846": 206, "7848": 206, "7850": 206, "7852": 206, "7854": 206, "7856": 206, "7858": 206, "7860": 206, "7862": 206, "7864": 206, "7866": 206, "7868": 206, "7870": 206, "7872": 206, "7874": 206, "7878": 206, "7880": 206, "7882": 206, "7884": 206, "7886": 206, "7888": 206, "7890": 206, "7892": 206, "7894": 206, "7896": 206, "7898": 206, "7900": 206, "7902": 206, "7904": 206, "7906": 206, "7908": 206, "7910": 206, "7912": 206, "7914": 206, "7916": 206, "7918": 206, "7920": 206, "7922": 206, "7924": 206, "7926": 206, "7928": 206, "7930": 206, "7932": 206, "7934": 206, "7936": 206, "7938": 206, "7940": 206, "7942": 206, "7944": 206, "7946": 206, "7948": 206, "7950": 206, "7952": 206, "7954": 206, "7956": 206, "7958": 206, "7960": 206, "7962": 206, "7964": 206, "7966": 206, "7968": 206, "7970": 206, "7972": 206, "7974": 206, "7976": 206, "7978": 206, "7980": 206, "7982": 206, "7984": 206, "7986": 206, "7988": 206, "7990": 206, "7992": 206, "7994": 206, "7996": 206, "7998": 206, "8002": 206, "8004": 206, "8006": 206, "8008": 206, "8012": 206, "8014": 206, "8016": 206, "8018": 206, "8022": 206, "8024": 206, "8026": 206, "8028": 206, "8030": 206, "8032": 206, "8034": 206, "8036": 206, "8038": 206, "8040": 206, "8042": 206, "8044": 206, "8046": 206, "8048": 206, "8050": 206, "8052": 206, "8054": 206, "8056": 206, "8058": 206, "8060": 206, "8062": 206, "8064": 206, "8066": 206, "8068": 206, "8070": 206, "8072": 206, "8074": 206, "8076": 206, "8078": 206, "8080": 206, "8082": 206, "8084": 206, "8086": 206, "8088": 206, "8090": 206, "8092": 206, "8094": 206, "8096": 206, "8098": 206, "8100": 206, "8102": [206, 932, 933], "8104": 206, "8106": 206, "8108": 206, "8110": 206, "8112": 206, "8114": 206, "8116": 206, "8118": 206, "8120": 206, "8122": 206, "8124": 206, "8126": 206, "8128": 206, "8130": 206, "8132": 206, "8134": 206, "8136": 206, "8138": 206, "8140": 206, "8142": 206, "8144": 206, "8146": 206, "8148": 206, "8150": 206, "8152": 206, "8154": 206, "8156": 206, "8158": 206, "8160": 206, "8162": 206, "8164": 206, "8166": 206, "8168": 206, "8170": 206, "8172": 206, "8174": 206, "8176": 206, "8178": 206, "8180": 206, "8182": 206, "8184": 206, "8186": 206, "8188": 206, "8190": 206, "8194": 206, "8196": 206, "8198": 206, "8200": 206, "8202": 206, "8204": 206, "8206": 206, "8208": 206, "8210": 206, "8212": 206, "8214": 206, "8216": 206, "8218": 206, "8220": 206, "8222": 206, "8224": 206, "8226": 206, "8228": 206, "8230": 206, "8232": 206, "8234": 206, "8238": 206, "8240": 206, "8242": 206, "8244": 206, "8246": 206, "8248": 206, "8250": 206, "8252": 206, "8254": 206, "8256": 206, "8258": 206, "8260": [206, 757], "8262": 206, "8264": 206, "8266": 206, "8268": 206, "8270": 206, "8272": 206, "8274": 206, "8276": 206, "8278": 206, "8280": 206, "8282": 206, "8284": 206, "8286": 206, "8288": 206, "8290": 206, "8292": 206, "8294": 206, "8296": 206, "8298": 206, "8300": 206, "8302": 206, "8304": 206, "8306": 206, "8308": 206, "8310": 206, "8312": 206, "8314": 206, "8316": 206, "8318": 206, "8320": 206, "8322": 206, "8324": 206, "8326": 206, "8328": 206, "8330": 206, "8332": 206, "8334": 206, "8336": 206, "8338": 206, "8340": 206, "8342": 206, "8344": 206, "8346": 206, "8348": 206, "8350": 206, "8352": 206, "8354": 206, "8356": 206, "8358": 206, "8360": 206, "8362": 206, "8364": 206, "8366": 206, "8368": 206, "8370": 206, "8372": 206, "8374": 206, "8376": 206, "8378": 206, "8380": 206, "8382": 206, "8384": 206, "8386": 206, "8388": 206, "8390": 206, "8392": 206, "8394": 206, "8396": 206, "8398": 206, "8400": 206, "8402": 206, "8404": 206, "8406": 206, "8408": 206, "8410": 206, "8412": 206, "8414": 206, "8416": 206, "8418": 206, "8420": 206, "8422": 206, "8424": 206, "8426": 206, "8428": 206, "8430": 206, "8432": 206, "8434": 206, "8436": 206, "8438": 206, "8440": 206, "8442": 206, "8444": 206, "8446": 206, "8448": 206, "8450": 206, "8452": 206, "8454": 206, "8456": 206, "8458": 206, "8460": 206, "8464": 206, "8466": 206, "8468": 206, "8470": 206, "8472": 206, "8474": 206, "8476": 206, "8478": 206, "8480": 206, "8482": 206, "8484": 206, "8486": 206, "8488": 206, "8490": 206, "8492": 206, "8494": 206, "8496": 206, "8498": 206, "8500": 206, "8502": 206, "8504": 206, "8506": 206, "8508": 206, "8510": 206, "8512": 206, "8514": 206, "8516": 206, "8518": 206, "8520": 206, "8522": 206, "8524": 206, "8526": 206, "8528": 206, "8530": 206, "8532": 206, "8534": 206, "8536": 206, "8538": 206, "8540": 206, "8542": 206, "8544": 206, "8546": 206, "8548": 206, "8550": 206, "8552": 206, "8554": 206, "8556": 206, "8558": 206, "8560": 206, "8562": 206, "8564": 206, "8566": 206, "8568": 206, "8570": 206, "8572": 206, "8574": 206, "8576": 206, "8578": 206, "8580": 206, "8582": 206, "8584": 206, "8586": 206, "8588": 206, "8590": 206, "8592": 206, "8594": 206, "8596": 206, "8598": 206, "8600": 206, "8602": 206, "8604": 206, "8606": 206, "8608": 206, "8610": 206, "8612": 206, "8614": 206, "8616": 206, "8618": 206, "8620": 206, "8622": 206, "8624": 206, "8626": 206, "8628": 206, "8630": 206, "8632": 206, "8634": 206, "8636": 206, "8638": 206, "8640": 206, "8642": 206, "8644": 206, "8646": 206, "8648": 206, "8650": 206, "8652": 206, "8654": 206, "8656": 206, "8658": 206, "8660": 206, "8662": 206, "8664": 206, "8666": 206, "8668": 206, "8670": 206, "8672": 206, "8674": 206, "8676": 206, "8678": 206, "8680": 206, "8682": 206, "8684": 206, "8686": 206, "8688": 206, "8690": 206, "8692": 206, "8694": 206, "8696": 206, "8698": 206, "8700": 206, "8702": 206, "8704": 206, "8706": 206, "8708": 206, "8710": 206, "8712": 206, "8714": 206, "8716": 206, "8718": 206, "8720": 206, "8722": 206, "8724": 206, "8726": 206, "8728": 206, "8730": 206, "8732": 206, "8734": 206, "8736": 206, "8738": 206, "8740": 206, "8742": 206, "8744": 206, "8746": 206, "8748": 206, "8750": 206, "8752": 206, "8754": 206, "8756": 206, "8758": 206, "8760": 206, "8762": 206, "8764": 206, "8766": 206, "8768": 206, "8770": 206, "8772": 206, "8774": 206, "8776": 206, "8778": 206, "8780": 206, "8782": 206, "8784": 206, "8786": 206, "8788": 206, "8790": 206, "8792": 206, "8794": 206, "8796": 206, "8798": 206, "8800": 206, "8802": 206, "8804": 206, "8806": 206, "8808": 206, "8810": 206, "8812": 206, "8814": 206, "8816": 206, "8818": 206, "8820": 206, "8822": 206, "8824": 206, "8826": 206, "8828": 206, "8830": 206, "8832": 206, "8834": 206, "8836": 206, "8838": 206, "8840": 206, "8842": 206, "8844": 206, "8846": 206, "8848": 206, "8850": 206, "8852": 206, "8854": 206, "8856": 206, "8858": 206, "8860": 206, "8862": 206, "8864": 206, "8866": 206, "8868": 206, "8870": 206, "8872": 206, "8874": 206, "8876": 206, "8878": 206, "8880": 206, "8882": 206, "8884": 206, "8886": 206, "8888": 206, "8890": 206, "8892": 206, "8894": 206, "8896": 206, "8898": 206, "8900": 206, "8902": 206, "8904": 206, "8906": 206, "8908": 206, "8910": 206, "8912": 206, "8914": 206, "8916": 206, "8918": 206, "8920": 206, "8922": 206, "8924": 206, "8926": 206, "8928": 206, "8930": 206, "8932": 206, "8934": 206, "8936": 206, "8938": 206, "8940": 206, "8942": 206, "8944": 206, "8946": 206, "8948": 206, "8950": 206, "8952": 206, "8954": 206, "8956": 206, "8958": 206, "8960": 206, "8962": 206, "8964": 206, "8966": 206, "8968": 206, "8970": 206, "8972": 206, "8974": 206, "8976": 206, "8978": 206, "8980": 206, "8982": 206, "8984": 206, "8986": 206, "8988": 206, "8990": 206, "8992": 206, "8994": 206, "8996": 206, "8998": 206, "9002": 206, "9004": 206, "9006": 206, "9008": 206, "9010": 206, "9012": 206, "9014": 206, "9016": 206, "9018": 206, "9020": 206, "9022": 206, "9024": 206, "9026": 206, "9028": 206, "9030": 206, "9032": 206, "9034": 206, "9036": 206, "9038": 206, "9040": 206, "9042": 206, "9044": 206, "9046": 206, "9048": 206, "9050": 206, "9052": 206, "9054": 206, "9056": 206, "9058": 206, "9060": 206, "9062": 206, "9064": 206, "9066": 206, "9068": 206, "9070": 206, "9072": 206, "9074": 206, "9076": 206, "9078": 206, "9080": 206, "9082": 206, "9084": 206, "9086": 206, "9088": 206, "9090": 206, "9092": 206, "9094": 206, "9096": 206, "9098": 206, "9100": 206, "9102": 206, "9104": 206, "9106": 206, "9108": 206, "9110": 206, "9112": 206, "9114": 206, "9116": 206, "9118": 206, "9120": 206, "9122": 206, "9124": 206, "9126": 206, "9128": 206, "9130": 206, "9132": 206, "9134": 206, "9136": 206, "9138": 206, "9140": 206, "9142": 206, "9144": 206, "9146": 206, "9148": 206, "9150": 206, "9152": 206, "9154": 206, "9156": 206, "9158": 206, "9160": 206, "9162": 206, "9164": 206, "9166": 206, "9168": 206, "9170": 206, "9172": 206, "9174": 206, "9176": 206, "9178": 206, "9180": 206, "9182": 206, "9184": 206, "9186": 206, "9188": 206, "9190": 206, "9192": 206, "9194": 206, "9196": 206, "9198": 206, "9200": 206, "9202": 206, "9204": 206, "9206": 206, "9208": 206, "9210": 206, "9212": 206, "9214": 206, "9216": 206, "9218": 206, "9220": 206, "9222": 206, "9224": 206, "9226": 206, "9228": 206, "9230": 206, "9232": 206, "9234": 206, "9236": 206, "9238": 206, "9240": 206, "9242": 206, "9244": 206, "9246": 206, "9248": 206, "9250": 206, "9252": 206, "9254": 206, "9256": 206, "9258": 206, "9260": 206, "9262": 206, "9264": 206, "9266": 206, "9268": 206, "9270": 206, "9272": 206, "9274": 206, "9276": 206, "9278": 206, "9280": 206, "9282": 206, "9284": 206, "9286": 206, "9288": 206, "9290": 206, "9292": 206, "9294": 206, "9296": 206, "9298": 206, "9300": 206, "9302": 206, "9304": 206, "9306": 206, "9308": 206, "9310": 206, "9312": 206, "9314": 206, "9316": 206, "9318": 206, "9320": 206, "9322": 206, "9324": 206, "9326": 206, "9328": 206, "9330": 206, "9332": 206, "9334": 206, "9336": 206, "9338": 206, "9340": 206, "9342": 206, "9344": 206, "9346": 206, "9348": 206, "9350": 206, "9352": 206, "9354": 206, "9356": 206, "9358": 206, "9360": 206, "9362": 206, "9364": 206, "9366": 206, "9368": 206, "9370": 206, "9372": 206, "9374": 206, "9376": 206, "9378": 206, "9380": 206, "9382": 206, "9384": 206, "9386": 206, "9388": 206, "9390": 206, "9392": 206, "9394": [206, 817], "9396": 206, "9398": 206, "9400": 206, "9402": 206, "9404": 206, "9406": 206, "9408": 206, "9410": 206, "9412": 206, "9414": 206, "9416": 206, "9418": 206, "9420": 206, "9422": 206, "9424": 206, "9426": 206, "9428": 206, "9430": 206, "9432": 206, "9434": 206, "9436": 206, "9438": 206, "9440": 206, "9442": 206, "9444": 206, "9446": 206, "9448": 206, "9450": 206, "9452": 206, "9454": 206, "9456": 206, "9458": 206, "9460": 206, "9462": 206, "9464": 206, "9466": 206, "9468": 206, "9470": 206, "9472": 206, "9474": 206, "9476": 206, "9478": 206, "9480": 206, "9482": 206, "9484": 206, "9486": 206, "9488": 206, "9490": 206, "9492": 206, "9494": 206, "9496": 206, "9498": 206, "9500": 206, "9502": 206, "9504": 206, "9506": 206, "9508": 206, "9510": 206, "9512": 206, "9514": 206, "9516": 206, "9518": 206, "9520": 206, "9522": 206, "9524": 206, "9526": 206, "9528": 206, "9530": 206, "9532": 206, "9534": 206, "9536": 206, "9538": 206, "9540": 206, "9542": 206, "9544": 206, "9546": 206, "9548": 206, "9550": 206, "9552": 206, "9554": 206, "9556": 206, "9558": 206, "9560": 206, "9562": 206, "9564": 206, "9566": 206, "9568": 206, "9570": 206, "9572": 206, "9574": 206, "9576": 206, "9578": 206, "9580": 206, "9582": 206, "9584": 206, "9586": 206, "9588": 206, "9590": 206, "9592": 206, "9594": 206, "9596": 206, "9598": 206, "9600": 206, "9602": 206, "9604": 206, "9606": 206, "9608": 206, "9610": 206, "9612": 206, "9614": 206, "9616": 206, "9618": 206, "9620": 206, "9622": 206, "9624": 206, "9626": 206, "9628": 206, "9630": 206, "9632": 206, "9634": 206, "9636": 206, "9638": 206, "9640": 206, "9642": 206, "9644": 206, "9646": 206, "9648": 206, "9650": 206, "9652": 206, "9654": 206, "9656": 206, "9658": 206, "9660": 206, "9662": 206, "9664": 206, "9666": 206, "9668": 206, "9670": 206, "9672": 206, "9674": 206, "9676": 206, "9678": 206, "9680": 206, "9682": 206, "9684": 206, "9686": 206, "9688": 206, "9690": 206, "9692": 206, "9694": 206, "9696": 206, "9698": 206, "9700": 206, "9702": 206, "9704": 206, "9706": 206, "9708": 206, "9710": 206, "9712": 206, "9714": 206, "9716": 206, "9718": 206, "9720": 206, "9722": 206, "9724": 206, "9726": 206, "9728": 206, "9730": 206, "9732": 206, "9734": 206, "9736": 206, "9738": 206, "9740": 206, "9742": 206, "9744": 206, "9746": 206, "9748": 206, "9750": 206, "9752": 206, "9754": 206, "9756": 206, "9758": 206, "9760": 206, "9762": 206, "9764": 206, "9766": 206, "9768": [206, 216], "9770": 206, "9772": 206, "9774": 206, "9776": 206, "9778": 206, "9780": 206, "9782": 206, "9784": 206, "9786": 206, "9788": 206, "9790": 206, "9792": 206, "9794": 206, "9796": 206, "9798": 206, "9800": 206, "9802": 206, "9804": 206, "9806": 206, "9808": 206, "9810": 206, "9812": 206, "9814": 206, "9816": 206, "9818": 206, "9820": 206, "9822": 206, "9824": 206, "9826": 206, "9828": 206, "9830": 206, "9832": 206, "9834": 206, "9836": 206, "9838": 206, "9840": 206, "9842": 206, "9844": 206, "9846": 206, "9848": 206, "9850": 206, "9852": 206, "9854": 206, "9856": 206, "9858": 206, "9860": 206, "9862": 206, "9864": 206, "9866": 206, "9868": 206, "9870": 206, "9872": 206, "9874": 206, "9876": 206, "9878": 206, "9880": 206, "9882": 206, "9884": 206, "9886": 206, "9888": 206, "9890": 206, "9892": 206, "9894": 206, "9896": 206, "9898": 206, "9900": 206, "9902": 206, "9904": 206, "9906": 206, "9908": 206, "9910": 206, "9912": 206, "9914": 206, "9916": 206, "9918": 206, "9920": 206, "9922": 206, "9924": 206, "9926": 206, "9928": 206, "9930": 206, "9932": 206, "9934": 206, "9936": 206, "9938": 206, "9940": 206, "9942": 206, "9944": 206, "9946": 206, "9948": 206, "9950": 206, "9952": 206, "9954": 206, "9956": 206, "9958": 206, "9960": 206, "9962": 206, "9964": 206, "9966": 206, "9968": 206, "9970": 206, "9972": 206, "9974": 206, "9976": 206, "9978": 206, "9980": 206, "9982": 206, "9984": 206, "9986": 206, "9988": 206, "9990": 206, "9992": 206, "9994": 206, "9996": 206, "9998": 206, "10002": 206, "10004": 206, "10006": 206, "10008": 206, "10010": 206, "10012": 206, "10014": 206, "10016": 206, "10018": 206, "10020": 206, "10022": 206, "10024": 206, "10026": 206, "10028": 206, "10030": 206, "10032": 206, "10034": 206, "10036": 206, "10038": 206, "10040": 206, "10042": 206, "10044": 206, "10046": 206, "10048": 206, "10050": 206, "10052": 206, "10054": 206, "10056": 206, "10058": 206, "10060": 206, "10062": 206, "10064": 206, "10066": 206, "10068": 206, "10070": 206, "10072": 206, "10074": 206, "10076": 206, "10078": 206, "10080": 206, "10082": 206, "10084": 206, "10086": 206, "10088": 206, "10090": 206, "10092": 206, "10094": 206, "10096": 206, "10098": 206, "10100": 206, "10102": 206, "10104": 206, "10106": 206, "10108": 206, "10110": 206, "10112": 206, "10114": 206, "10116": 206, "10118": 206, "10120": 206, "10122": 206, "10124": 206, "10126": 206, "10128": 206, "10130": 206, "10132": 206, "10134": 206, "10136": 206, "10138": 206, "10140": 206, "10142": 206, "10144": 206, "10146": 206, "10148": 206, "10150": 206, "10152": 206, "10154": 206, "10156": 206, "10158": 206, "10160": 206, "10162": 206, "10164": 206, "10166": 206, "10168": 206, "10170": 206, "10172": 206, "10174": 206, "10176": 206, "10178": 206, "10180": 206, "10182": 206, "10184": 206, "10186": 206, "10188": 206, "10190": 206, "10192": 206, "10194": 206, "10196": 206, "10198": 206, "10200": 206, "10202": 206, "10204": 206, "10206": 206, "10208": 206, "10210": 206, "10212": 206, "10214": 206, "10216": 206, "10218": 206, "10220": 206, "10222": 206, "10224": 206, "10226": [206, 255], "10228": 206, "10230": 206, "10232": 206, "10234": 206, "10236": 206, "10238": 206, "10240": 206, "10242": 206, "10244": 206, "10246": 206, "10248": 206, "10250": 206, "10252": 206, "10254": 206, "10256": 206, "10258": 206, "10260": 206, "10262": 206, "10264": 206, "10266": 206, "10268": 206, "10270": 206, "10272": 206, "10274": 206, "10276": 206, "10278": 206, "10280": 206, "10282": 206, "10284": 206, "10286": 206, "10288": 206, "10290": 206, "10292": 206, "10294": 206, "10296": 206, "10298": 206, "10300": 206, "10302": 206, "10304": 206, "10306": 206, "10308": 206, "10310": 206, "10312": 206, "10314": 206, "10316": 206, "10318": 206, "10320": 206, "10322": 206, "10324": 206, "10326": 206, "10328": 206, "10330": 206, "10332": 206, "10334": 206, "10336": 206, "10338": 206, "10340": 206, "10342": 206, "10344": 206, "10346": 206, "10348": 206, "10350": 206, "10352": 206, "10354": 206, "10356": 206, "10358": 206, "10360": 206, "10362": 206, "10364": 206, "10366": 206, "10368": 206, "10370": 206, "10372": 206, "10374": 206, "10376": 206, "10378": 206, "10380": 206, "10382": 206, "10384": 206, "10386": 206, "10388": 206, "10390": 206, "10392": 206, "10394": 206, "10396": 206, "10398": 206, "10400": 206, "10402": 206, "10404": 206, "10406": 206, "10408": 206, "10410": 206, "10412": 206, "10414": 206, "10416": 206, "10418": 206, "10420": 206, "10422": 206, "10424": 206, "10426": 206, "10428": 206, "10430": 206, "10432": 206, "10434": 206, "10436": 206, "10438": 206, "10440": 206, "10442": 206, "10444": 206, "10446": 206, "10448": 206, "10450": 206, "10452": 206, "10454": 206, "10456": 206, "10458": 206, "10460": 206, "10462": 206, "10464": 206, "10466": 206, "10468": 206, "10470": 206, "10472": 206, "10474": 206, "10476": 206, "10478": 206, "10480": 206, "10482": 206, "10484": 206, "10486": 206, "10488": 206, "10490": 206, "10492": 206, "10494": 206, "10496": 206, "10498": 206, "10500": 206, "10502": 206, "10504": 206, "10506": 206, "10508": 206, "10510": 206, "10512": 206, "10514": 206, "10516": 206, "10518": 206, "10520": 206, "10522": 206, "10524": 206, "10526": 206, "10528": 206, "10530": 206, "10532": 206, "10534": 206, "10536": 206, "10538": 206, "10540": 206, "10542": 206, "10544": 206, "10546": 206, "10548": 206, "10550": 206, "10552": [206, 943], "10554": 206, "10556": 206, "10558": 206, "10560": 206, "10562": 206, "10564": 206, "10566": 206, "10568": 206, "10570": 206, "10572": 206, "10574": 206, "10576": 206, "10578": 206, "10580": 206, "10582": 206, "10584": 206, "10586": 206, "10588": 206, "10590": 206, "10592": 206, "10594": 206, "10596": 206, "10598": 206, "10600": 206, "10602": 206, "10604": 206, "10606": 206, "10608": 206, "10610": 206, "10612": 206, "10614": 206, "10616": 206, "10618": 206, "10620": 206, "10622": 206, "10624": 206, "10626": 206, "10628": 206, "10630": 206, "10632": 206, "10634": 206, "10636": 206, "10638": 206, "10640": 206, "10642": 206, "10644": 206, "10646": 206, "10648": 206, "10650": 206, "10652": 206, "10654": 206, "10656": 206, "10658": 206, "10660": 206, "10662": 206, "10664": 206, "10666": 206, "10668": 206, "10670": 206, "10672": 206, "10674": 206, "10676": 206, "10678": 206, "10680": 206, "10682": 206, "10684": 206, "10686": 206, "10688": 206, "10690": 206, "10692": 206, "10694": 206, "10696": 206, "10698": 206, "10700": 206, "10702": 206, "10704": 206, "10706": 206, "10708": 206, "10710": 206, "10712": 206, "10714": 206, "10716": 206, "10718": 206, "10720": 206, "10722": 206, "10724": 206, "10726": 206, "10728": 206, "10730": 206, "10732": 206, "10734": 206, "10736": 206, "10738": 206, "10740": 206, "10742": 206, "10744": 206, "10746": 206, "10748": 206, "10750": 206, "10752": 206, "10754": 206, "10756": 206, "10758": 206, "10760": 206, "10762": 206, "10764": 206, "10766": 206, "10768": 206, "10770": 206, "10772": 206, "10774": 206, "10776": 206, "10778": 206, "10780": 206, "10782": 206, "10784": 206, "10786": 206, "10788": 206, "10790": 206, "10792": 206, "10794": 206, "10796": 206, "10798": 206, "10800": 206, "10802": 206, "10804": 206, "10806": 206, "10808": 206, "10810": 206, "10812": 206, "10814": 206, "10816": 206, "10818": 206, "10820": 206, "10822": 206, "10824": 206, "10826": 206, "10828": 206, "10830": 206, "10832": 206, "10834": 206, "10836": 206, "10838": 206, "10840": 206, "10842": 206, "10844": 206, "10846": 206, "10848": 206, "10850": 206, "10852": 206, "10854": 206, "10856": 206, "10858": 206, "10860": 206, "10862": 206, "10864": 206, "10866": 206, "10868": 206, "10870": 206, "10872": 206, "10874": 206, "10876": 206, "10878": 206, "10880": 206, "10882": 206, "10884": 206, "10886": 206, "10888": 206, "10890": 206, "10892": 206, "10894": 206, "10896": 206, "10898": 206, "10900": 206, "10902": 206, "10904": 206, "10906": 206, "10908": 206, "10910": 206, "10912": 206, "10914": 206, "10916": 206, "10918": 206, "10920": 206, "10922": 206, "10924": 206, "10926": 206, "10928": 206, "10930": 206, "10932": 206, "10934": 206, "10936": 206, "10938": 206, "10940": 206, "10942": 206, "10944": 206, "10946": 206, "10948": 206, "10950": 206, "10952": 206, "10954": 206, "10956": 206, "10958": 206, "10960": 206, "10962": 206, "10964": 206, "10966": 206, "10968": 206, "10970": 206, "10972": 206, "10974": 206, "10976": 206, "10978": 206, "10980": 206, "10982": 206, "10984": 206, "10986": 206, "10988": 206, "10990": 206, "10992": 206, "10994": 206, "10996": 206, "10998": 206, "11000": 206, "11002": 206, "11004": 206, "11006": 206, "11008": 206, "11010": 206, "11012": 206, "11014": 206, "11016": 206, "11018": 206, "11020": 206, "11022": 206, "11024": 206, "11026": 206, "11028": 206, "11030": 206, "11032": 206, "11034": 206, "11036": 206, "11038": 206, "11040": 206, "11042": 206, "11044": 206, "11046": 206, "11048": 206, "11050": 206, "11052": 206, "11054": 206, "11056": 206, "11058": 206, "11060": 206, "11062": 206, "11064": 206, "11066": 206, "11068": 206, "11070": 206, "11072": 206, "11074": 206, "11076": 206, "11078": 206, "11080": 206, "11082": 206, "11084": 206, "11086": 206, "11088": 206, "11090": 206, "11092": 206, "11094": 206, "11096": 206, "11098": 206, "11100": 206, "11102": 206, "11104": 206, "11106": 206, "11108": 206, "11110": 206, "11112": 206, "11114": 206, "11116": 206, "11118": 206, "11120": 206, "11122": 206, "11124": 206, "11126": 206, "11128": 206, "11130": 206, "11132": 206, "11134": 206, "11136": 206, "11138": 206, "11140": 206, "11142": 206, "11144": 206, "11146": 206, "11148": 206, "11150": 206, "11152": 206, "11154": 206, "11156": 206, "11158": 206, "11160": 206, "11162": 206, "11164": 206, "11166": 206, "11168": 206, "11170": 206, "11172": 206, "11174": 206, "11176": 206, "11178": 206, "11180": 206, "11182": 206, "11184": 206, "11186": 206, "11188": 206, "11190": 206, "11192": 206, "11194": 206, "11196": 206, "11198": 206, "11200": 206, "11202": 206, "11204": 206, "11206": 206, "11208": 206, "11210": 206, "11212": 206, "11214": 206, "11216": 206, "11218": 206, "11220": 206, "11222": 206, "11224": 206, "11226": 206, "11228": 206, "11230": 206, "11232": 206, "11234": 206, "11236": 206, "11238": 206, "11240": 206, "11242": 206, "11244": 206, "11246": 206, "11248": 206, "11250": 206, "11252": 206, "11254": 206, "11256": 206, "11258": 206, "11260": 206, "11262": 206, "11264": 206, "11266": 206, "11268": 206, "11270": 206, "11272": 206, "11274": 206, "11276": 206, "11278": 206, "11280": 206, "11282": 206, "11284": 206, "11286": 206, "11288": 206, "11290": 206, "11292": 206, "11294": 206, "11296": 206, "11298": 206, "11300": 206, "11302": 206, "11304": 206, "11306": 206, "11308": 206, "11310": 206, "11312": 206, "11314": 206, "11316": 206, "11318": 206, "11320": 206, "11322": 206, "11324": 206, "11326": 206, "11328": 206, "11330": 206, "11332": 206, "11334": 206, "11336": 206, "11340": 206, "11342": 206, "11344": 206, "11346": 206, "11348": [206, 255], "11350": 206, "11352": 206, "11354": 206, "11356": 206, "11358": 206, "11360": 206, "11362": 206, "11364": 206, "11366": 206, "11368": 206, "11370": 206, "11372": 206, "11374": 206, "11376": 206, "11378": 206, "11380": 206, "11382": 206, "11384": 206, "11386": 206, "11388": 206, "11390": 206, "11392": 206, "11394": 206, "11396": 206, "11398": 206, "11400": 206, "11402": 206, "11404": 206, "11406": 206, "11408": 206, "11410": 206, "11412": 206, "11414": 206, "11416": 206, "11418": 206, "11420": 206, "11422": 206, "11424": 206, "11426": 206, "11428": 206, "11430": 206, "11432": 206, "11434": 206, "11436": 206, "11438": 206, "11440": 206, "11442": 206, "11444": 206, "11446": 206, "11448": 206, "11450": 206, "11452": 206, "11454": 206, "11456": 206, "11458": 206, "11460": 206, "11462": 206, "11464": 206, "11466": 206, "11468": 206, "11470": 206, "11472": 206, "11474": 206, "11476": 206, "11478": 206, "11480": 206, "11482": 206, "11484": 206, "11486": 206, "11488": 206, "11490": 206, "11492": 206, "11494": 206, "11496": 206, "11498": 206, "11500": 206, "11502": 206, "11504": 206, "11506": 206, "11508": 206, "11510": 206, "11512": 206, "11514": 206, "11516": 206, "11518": 206, "11520": 206, "11522": 206, "11524": 206, "11526": 206, "11528": 206, "11530": 206, "11532": 206, "11534": 206, "11536": 206, "11538": 206, "11540": 206, "11542": 206, "11544": 206, "11546": 206, "11548": 206, "11550": 206, "11552": 206, "11554": 206, "11556": 206, "11558": 206, "11560": 206, "11562": 206, "11564": 206, "11566": 206, "11568": 206, "11570": 206, "11572": 206, "11574": 206, "11576": 206, "11578": 206, "11580": 206, "11582": 206, "11584": 206, "11586": 206, "11588": 206, "11590": 206, "11592": 206, "11594": 206, "11596": 206, "11598": 206, "11600": 206, "11602": 206, "11604": 206, "11606": 206, "11608": 206, "11610": 206, "11612": 206, "11614": 206, "11616": 206, "11618": 206, "11620": 206, "11622": 206, "11624": 206, "11626": 206, "11628": 206, "11630": 206, "11634": 206, "11636": 206, "11638": 206, "11640": 206, "11642": 206, "11644": 206, "11646": 206, "11648": 206, "11650": 206, "11652": 206, "11654": 206, "11656": 206, "11658": 206, "11660": 206, "11662": 206, "11664": 206, "11666": 206, "11668": 206, "11670": 206, "11672": 206, "11674": 206, "11676": 206, "11678": 206, "11680": 206, "11682": 206, "11684": 206, "11686": 206, "11688": 206, "11690": 206, "11692": 206, "11694": 206, "11696": 206, "11698": 206, "11700": 206, "11702": 206, "11704": 206, "11706": 206, "11708": 206, "11710": 206, "11712": 206, "11714": 206, "11716": 206, "11718": 206, "11720": 206, "11722": 206, "11724": 206, "11726": 206, "11728": 206, "11730": 206, "11732": 206, "11734": 206, "11736": 206, "11738": 206, "11740": 206, "11742": 206, "11744": 206, "11746": 206, "11748": 206, "11750": 206, "11752": 206, "11754": 206, "11756": 206, "11758": 206, "11760": 206, "11762": 206, "11764": 206, "11766": 206, "11768": 206, "11770": 206, "11772": 206, "11774": 206, "11776": 206, "11778": 206, "11780": 206, "11782": 206, "11784": 206, "11786": 206, "11788": 206, "11790": 206, "11792": 206, "11794": 206, "11796": 206, "11798": 206, "11800": 206, "11802": 206, "11804": 206, "11806": 206, "11808": 206, "11810": 206, "11812": 206, "11814": 206, "11816": 206, "11818": 206, "11820": 206, "11822": 206, "11824": 206, "11826": 206, "11828": 206, "11830": 206, "11832": 206, "11834": 206, "11836": 206, "11838": 206, "11840": 206, "11842": 206, "11844": 206, "11846": 206, "11848": 206, "11850": 206, "11852": 206, "11854": 206, "11856": 206, "11858": 206, "11860": 206, "11862": 206, "11864": 206, "11866": 206, "11868": 206, "11870": 206, "11872": 206, "11874": 206, "11876": 206, "11878": 206, "11880": 206, "11882": 206, "11884": 206, "11886": 206, "11888": 206, "11890": 206, "11892": 206, "11894": 206, "11896": 206, "11898": 206, "11900": 206, "11902": 206, "11904": 206, "11906": 206, "11908": 206, "11910": 206, "11912": 206, "11914": 206, "11916": 206, "11918": 206, "11920": 206, "11922": 206, "11924": 206, "11926": 206, "11928": 206, "11930": 206, "11932": 206, "11934": 206, "11936": 206, "11938": 206, "11940": 206, "11942": 206, "11944": 206, "11946": 206, "11948": 206, "11950": 206, "11952": 206, "11954": 206, "11956": 206, "11958": 206, "11960": 206, "11962": 206, "11964": 206, "11966": 206, "11968": 206, "11970": 206, "11972": 206, "11974": 206, "11976": 206, "11978": 206, "11980": 206, "11982": 206, "11984": 206, "11986": 206, "11988": 206, "11990": 206, "11992": 206, "11994": 206, "11996": 206, "11998": 206, "12000": 206, "12002": 206, "12004": 206, "12006": 206, "12008": 206, "12010": 206, "12012": 206, "12014": 206, "12016": 206, "12018": 206, "12020": 206, "12022": 206, "12024": 206, "12026": 206, "12028": 206, "12030": 206, "12032": 206, "12034": 206, "12036": 206, "12038": 206, "12040": 206, "12042": 206, "12044": 206, "12046": 206, "12048": 206, "12050": 206, "12052": 206, "12054": 206, "12056": 206, "12058": 206, "12060": 206, "12062": 206, "12064": 206, "12066": 206, "12068": 206, "12070": 206, "12072": 206, "12074": 206, "12076": 206, "12078": 206, "12080": 206, "12082": 206, "12084": 206, "12086": 206, "12088": 206, "12090": 206, "12092": 206, "12094": 206, "12096": 206, "12098": 206, "12100": 206, "12102": 206, "12104": 206, "12106": 206, "12108": 206, "12110": 206, "12112": 206, "12114": 206, "12116": 206, "12118": 206, "12120": 206, "12122": 206, "12124": 206, "12126": 206, "12128": 206, "12130": 206, "12132": 206, "12134": 206, "12136": 206, "12138": 206, "12140": 206, "12142": 206, "12144": 206, "12146": 206, "12148": 206, "12150": 206, "12152": 206, "12154": 206, "12158": 206, "12160": 206, "12162": 206, "12164": 206, "12166": 206, "12168": 206, "12170": 206, "12172": 206, "12174": 206, "12176": 206, "12178": 206, "12180": 206, "12182": 206, "12184": 206, "12186": 206, "12188": 206, "12190": 206, "12192": 206, "12194": 206, "12196": 206, "12198": 206, "12200": 206, "12202": 206, "12204": 206, "12206": 206, "12208": 206, "12210": 206, "12212": 206, "12214": 206, "12216": 206, "12218": 206, "12220": 206, "12222": 206, "12224": 206, "12226": 206, "12228": 206, "12230": 206, "12232": 206, "12234": 206, "12236": 206, "12238": 206, "12240": 206, "12242": 206, "12244": 206, "12246": 206, "12248": 206, "12250": 206, "12252": 206, "12254": 206, "12256": 206, "12258": 206, "12260": 206, "12262": 206, "12264": 206, "12266": 206, "12268": 206, "12270": 206, "12272": 206, "12274": 206, "12276": 206, "12278": 206, "12280": 206, "12282": 206, "12284": 206, "12286": 206, "12288": 206, "12290": 206, "12292": 206, "12294": 206, "12296": 206, "12298": 206, "12300": 206, "12302": 206, "12304": 206, "12306": 206, "12308": 206, "12310": 206, "12312": 206, "12314": 206, "12316": 206, "12318": 206, "12320": 206, "12322": 206, "12324": 206, "12326": 206, "12328": 206, "12330": 206, "12332": 206, "12334": 206, "12336": 206, "12338": 206, "12340": 206, "12342": 206, "12344": 206, "12346": 206, "12348": 206, "12350": 206, "12352": 206, "12354": 206, "12356": 206, "12358": 206, "12360": 206, "12362": 206, "12364": 206, "12366": 206, "12368": 206, "12370": 206, "12372": 206, "12374": 206, "12376": 206, "12378": 206, "12380": 206, "12382": 206, "12384": 206, "12386": 206, "12388": 206, "12390": 206, "12392": 206, "12394": 206, "12396": 206, "12398": 206, "12400": 206, "12402": 206, "12404": 206, "12406": 206, "12408": 206, "12410": 206, "12412": 206, "12414": 206, "12416": 206, "12418": 206, "12420": 206, "12422": 206, "12424": 206, "12426": 206, "12428": 206, "12430": 206, "12432": 206, "12434": 206, "12436": 206, "12438": 206, "12440": 206, "12442": 206, "12444": 206, "12446": 206, "12448": 206, "12450": 206, "12452": 206, "12454": 206, "12456": 206, "12458": 206, "12460": 206, "12462": 206, "12464": 206, "12466": 206, "12468": 206, "12470": 206, "12472": 206, "12474": 206, "12476": 206, "12478": 206, "12480": 206, "12482": 206, "12484": 206, "12486": 206, "12488": 206, "12490": 206, "12492": 206, "12494": 206, "12496": 206, "12498": 206, "12500": 206, "12502": 206, "12504": 206, "12506": 206, "12508": 206, "12510": 206, "12512": 206, "12514": 206, "12516": 206, "12518": 206, "12520": 206, "12522": 206, "12524": 206, "12526": 206, "12528": 206, "12530": 206, "12532": 206, "12534": 206, "12536": 206, "12538": 206, "12540": 206, "12542": 206, "12544": 206, "12546": 206, "12548": 206, "12550": 206, "12552": 206, "12554": 206, "12556": 206, "12558": 206, "12560": 206, "12562": 206, "12564": 206, "12566": 206, "12568": 206, "12570": 206, "12572": 206, "12574": 206, "12576": 206, "12578": 206, "12580": 206, "12582": 206, "12584": 206, "12586": 206, "12588": 206, "12590": 206, "12592": 206, "12594": 206, "12596": 206, "12598": 206, "12600": 206, "12602": 206, "12604": 206, "12606": 206, "12608": 206, "12610": 206, "12612": 206, "12614": 206, "12616": 206, "12618": 206, "12620": 206, "12622": 206, "12624": 206, "12626": 206, "12628": 206, "12630": 206, "12632": 206, "12634": 206, "12636": 206, "12638": 206, "12640": 206, "12642": 206, "12644": 206, "12646": 206, "12648": 206, "12650": 206, "12652": 206, "12654": 206, "12656": 206, "12658": 206, "12660": 206, "12662": 206, "12664": 206, "12666": 206, "12668": 206, "12670": 206, "12672": 206, "12674": 206, "12676": 206, "12678": 206, "12680": 206, "12682": 206, "12684": 206, "12686": 206, "12688": 206, "12690": 206, "12692": 206, "12694": 206, "12696": 206, "12698": 206, "12700": 206, "12702": 206, "12704": 206, "12706": 206, "12708": 206, "12710": 206, "12712": 206, "12714": 206, "12716": 206, "12718": 206, "12720": 206, "12722": 206, "12724": 206, "12726": 206, "12728": 206, "12730": 206, "12732": 206, "12734": 206, "12736": 206, "12738": 206, "12740": 206, "12742": 206, "12744": 206, "12746": 206, "12748": 206, "12750": 206, "12752": 206, "12754": 206, "12756": 206, "12758": 206, "12760": 206, "12762": 206, "12764": 206, "12766": 206, "12768": 206, "12770": 206, "12772": 206, "12774": 206, "12776": 206, "12778": 206, "12780": 206, "12782": 206, "12784": 206, "12786": 206, "12788": 206, "12790": 206, "12792": 206, "12794": 206, "12796": 206, "12798": 206, "12800": 206, "12802": 206, "12804": 206, "12806": 206, "12808": 206, "12810": 206, "12812": 206, "12814": 206, "12816": 206, "12818": 206, "12820": 206, "12822": 206, "12824": 206, "12826": 206, "12828": 206, "12830": 206, "12832": 206, "12834": 206, "12836": 206, "12838": 206, "12840": 206, "12842": 206, "12844": 206, "12846": 206, "12848": 206, "12850": 206, "12852": 206, "12854": 206, "12856": 206, "12858": 206, "12860": 206, "12862": 206, "12864": 206, "12866": 206, "12868": 206, "12870": 206, "12872": 206, "12874": 206, "12876": 206, "12878": 206, "12880": 206, "12882": 206, "12884": 206, "12886": 206, "12888": 206, "12890": 206, "12892": 206, "12894": 206, "12896": 206, "12898": 206, "12900": 206, "12902": 206, "12904": 206, "12906": 206, "12908": 206, "12910": 206, "12912": 206, "12914": 206, "12916": 206, "12918": 206, "12920": 206, "12922": 206, "12924": 206, "12926": 206, "12928": 206, "12930": 206, "12932": 206, "12934": 206, "12936": 206, "12938": 206, "12940": 206, "12942": 206, "12944": 206, "12946": 206, "12948": 206, "12950": 206, "12952": 206, "12954": 206, "12956": 206, "12958": 206, "12960": 206, "12962": 206, "12964": 206, "12966": 206, "12968": 206, "12970": 206, "12972": 206, "12974": 206, "12976": 206, "12978": 206, "12980": 206, "12982": 206, "12984": 206, "12986": 206, "12988": 206, "12990": 206, "12992": 206, "12994": 206, "12996": 206, "12998": 206, "13000": 206, "13002": 206, "13004": 206, "13006": 206, "13008": 206, "13010": 206, "13012": 206, "13014": 206, "13016": 206, "13018": 206, "13020": 206, "13022": 206, "13024": 206, "13026": 206, "13028": 206, "13030": 206, "13032": 206, "13034": 206, "13036": 206, "13038": 206, "13040": 206, "13042": 206, "13044": 206, "13046": 206, "13048": 206, "13050": 206, "13052": 206, "13054": 206, "13056": 206, "13058": 206, "13060": 206, "13062": 206, "13064": 206, "13066": 206, "13068": 206, "13070": 206, "13072": 206, "13074": 206, "13076": 206, "13078": 206, "13080": 206, "13082": 206, "13084": 206, "13086": 206, "13088": 206, "13090": 206, "13092": 206, "13094": 206, "13096": 206, "13098": 206, "13100": 206, "13102": 206, "13104": 206, "13106": 206, "13108": 206, "13110": 206, "13112": 206, "13114": 206, "13116": 206, "13118": 206, "13120": 206, "13122": 206, "13124": 206, "13126": 206, "13128": 206, "13130": 206, "13132": 206, "13134": 206, "13136": 206, "13138": 206, "13140": 206, "13142": 206, "13144": 206, "13146": 206, "13148": 206, "13150": 206, "13152": 206, "13154": 206, "13156": 206, "13158": 206, "13160": 206, "13162": 206, "13164": 206, "13166": 206, "13168": 206, "13170": 206, "13172": 206, "13174": 206, "13176": 206, "13178": 206, "13180": 206, "13182": 206, "13184": 206, "13186": 206, "13188": 206, "13190": 206, "13192": 206, "13194": 206, "13196": 206, "13198": 206, "13200": 206, "13202": 206, "13204": 206, "13206": 206, "13208": 206, "13210": 206, "13212": 206, "13214": 206, "13216": 206, "13218": 206, "13220": 206, "13222": 206, "13224": 206, "13226": 206, "13228": 206, "13230": 206, "13232": 206, "13234": 206, "13236": 206, "13238": 206, "13240": 206, "13242": 206, "13244": 206, "13246": 206, "13248": 206, "13250": 206, "13252": 206, "13254": 206, "13256": 206, "13258": 206, "13260": 206, "13262": 206, "13264": 206, "13266": 206, "13268": 206, "13270": 206, "13272": 206, "13274": 206, "13276": 206, "13278": 206, "13280": 206, "13282": 206, "13284": 206, "13286": 206, "13288": 206, "13290": 206, "13292": 206, "13294": 206, "13296": 206, "13298": 206, "13300": 206, "13302": 206, "13304": 206, "13306": 206, "13308": 206, "13310": 206, "13312": 206, "13314": 206, "13316": 206, "13318": 206, "13320": 206, "13322": 206, "13324": 206, "13326": 206, "13328": 206, "13330": 206, "13332": 206, "13334": 206, "13336": 206, "13338": 206, "13340": 206, "13342": 206, "13344": 206, "13346": 206, "13348": 206, "13350": 206, "13352": 206, "13354": 206, "13356": 206, "13358": 206, "13360": 206, "13362": 206, "13364": 206, "13366": 206, "13368": 206, "13370": 206, "13372": 206, "13374": 206, "13376": 206, "13378": 206, "13380": 206, "13382": 206, "13384": 206, "13386": 206, "13388": 206, "13390": 206, "13392": 206, "13394": 206, "13396": 206, "13398": 206, "13400": 206, "13402": 206, "13404": 206, "13406": 206, "13408": 206, "13410": 206, "13412": 206, "13414": 206, "13416": 206, "13418": 206, "13420": 206, "13422": 206, "13424": 206, "13426": 206, "13428": 206, "13430": 206, "13432": 206, "13434": 206, "13436": 206, "13438": 206, "13440": 206, "13442": 206, "13444": 206, "13446": 206, "13448": 206, "13450": 206, "13452": 206, "13454": 206, "13456": 206, "13458": 206, "13460": 206, "13462": 206, "13464": 206, "13466": 206, "13468": 206, "13470": 206, "13472": 206, "13474": 206, "13476": 206, "13478": 206, "13480": 206, "13482": 206, "13484": 206, "13486": 206, "13488": 206, "13490": 206, "13492": 206, "13494": 206, "13496": 206, "13498": 206, "13502": 206, "13504": 206, "13506": 206, "13508": 206, "13510": 206, "13512": 206, "13514": 206, "13516": 206, "13518": 206, "13520": 206, "13522": 206, "13524": 206, "13526": 206, "13528": 206, "13530": 206, "13532": 206, "13534": 206, "13536": 206, "13538": 206, "13540": 206, "13542": 206, "13544": 206, "13546": 206, "13548": 206, "13550": 206, "13552": 206, "13554": 206, "13556": 206, "13558": 206, "13560": 206, "13562": 206, "13564": 206, "13566": 206, "13568": 206, "13570": 206, "13572": 206, "13574": 206, "13576": 206, "13578": 206, "13580": 206, "13582": 206, "13584": 206, "13586": 206, "13588": 206, "13590": 206, "13592": 206, "13594": 206, "13596": 206, "13598": 206, "13600": 206, "13602": 206, "13604": 206, "13606": 206, "13608": 206, "13610": 206, "13612": 206, "13614": 206, "13616": 206, "13618": 206, "13620": 206, "13622": 206, "13624": 206, "13626": 206, "13628": 206, "13630": 206, "13632": 206, "13634": 206, "13636": 206, "13638": 206, "13640": 206, "13642": 206, "13644": 206, "13646": 206, "13648": 206, "13650": 206, "13652": 206, "13654": 206, "13656": 206, "13658": 206, "13660": 206, "13662": 206, "13664": 206, "13666": 206, "13668": 206, "13670": 206, "13672": 206, "13674": 206, "13676": 206, "13678": 206, "13680": 206, "13682": 206, "13684": 206, "13686": 206, "13688": 206, "13690": 206, "13692": 206, "13694": 206, "13696": 206, "13698": 206, "13700": 206, "13702": 206, "13704": 206, "13706": 206, "13708": 206, "13710": 206, "13712": 206, "13714": 206, "13716": 206, "13718": 206, "13720": 206, "13722": 206, "13724": 206, "13726": 206, "13728": 206, "13730": 206, "13732": 206, "13734": 206, "13736": 206, "13738": 206, "13740": 206, "13742": 206, "13744": 206, "13746": 206, "13748": 206, "13750": 206, "13752": 206, "13754": 206, "13756": 206, "13758": 206, "13760": 206, "13762": 206, "13764": 206, "13766": 206, "13768": 206, "13770": 206, "13772": 206, "13774": 206, "13776": 206, "13778": 206, "13780": 206, "13782": 206, "13784": 206, "13786": 206, "13788": 206, "13790": 206, "13792": 206, "13794": 206, "13796": 206, "13798": 206, "13800": 206, "13802": 206, "13804": 206, "13806": 206, "13808": 206, "13810": 206, "13812": 206, "13814": 206, "13816": 206, "13818": 206, "13820": 206, "13822": 206, "13824": 206, "13826": 206, "13828": 206, "13830": 206, "13832": 206, "13834": 206, "13836": 206, "13838": 206, "13840": 206, "13842": 206, "13844": 206, "13846": 206, "13848": 206, "13850": 206, "13852": 206, "13854": 206, "13856": 206, "13858": 206, "13860": 206, "13862": 206, "13864": 206, "13866": 206, "13868": 206, "13870": 206, "13872": 206, "13874": 206, "13876": 206, "13878": 206, "13880": 206, "13882": 206, "13884": 206, "13886": 206, "13888": 206, "13890": 206, "13892": 206, "13894": 206, "13896": 206, "13898": 206, "13900": 206, "13902": 206, "13904": 206, "13906": 206, "13908": 206, "13910": 206, "13912": 206, "13914": 206, "13916": 206, "13918": 206, "13920": 206, "13922": 206, "13924": 206, "13926": 206, "13928": 206, "13930": 206, "13932": 206, "13934": 206, "13936": 206, "13938": 206, "13940": 206, "13942": 206, "13944": 206, "13946": 206, "13948": 206, "13950": 206, "13952": 206, "13954": 206, "13956": 206, "13958": 206, "13960": [206, 900], "13962": 206, "13964": 206, "13966": 206, "13968": 206, "13970": 206, "13972": 206, "13974": 206, "13976": 206, "13978": 206, "13980": 206, "13982": 206, "13984": 206, "13986": 206, "13988": 206, "13990": 206, "13992": 206, "13994": 206, "13996": 206, "13998": 206, "14000": 206, "14002": 206, "14004": 206, "14006": 206, "14008": 206, "14010": 206, "14012": 206, "14014": 206, "14016": 206, "14018": 206, "14020": 206, "14022": 206, "14024": 206, "14026": 206, "14028": 206, "14030": 206, "14032": 206, "14034": 206, "14036": 206, "14038": 206, "14040": 206, "14042": 206, "14044": 206, "14046": 206, "14048": 206, "14050": 206, "14052": 206, "14054": 206, "14056": 206, "14058": 206, "14060": 206, "14062": 206, "14064": 206, "14066": 206, "14068": 206, "14070": 206, "14072": 206, "14074": 206, "14076": 206, "14078": 206, "14080": 206, "14082": 206, "14084": 206, "14086": 206, "14088": 206, "14090": 206, "14092": 206, "14094": 206, "14096": 206, "14098": 206, "14100": 206, "14102": 206, "14104": 206, "14106": 206, "14108": 206, "14110": 206, "14112": 206, "14114": 206, "14116": 206, "14118": 206, "14120": 206, "14122": 206, "14124": 206, "14126": 206, "14128": 206, "14130": 206, "14132": 206, "14134": 206, "14136": 206, "14138": 206, "14140": 206, "14142": 206, "14144": 206, "14146": 206, "14148": 206, "14150": 206, "14152": 206, "14154": 206, "14156": 206, "14158": 206, "14160": 206, "14162": 206, "14164": 206, "14166": 206, "14168": 206, "14170": 206, "14172": 206, "14174": 206, "14176": 206, "14178": 206, "14180": 206, "14182": 206, "14184": 206, "14186": 206, "14188": 206, "14190": 206, "14192": 206, "14194": 206, "14196": 206, "14198": 206, "14200": 206, "14202": 206, "14204": 206, "14206": 206, "14208": 206, "14210": 206, "14212": 206, "14214": 206, "14216": 206, "14218": 206, "14220": 206, "14222": 206, "14224": 206, "14226": 206, "14228": 206, "14230": 206, "14232": 206, "14234": 206, "14236": 206, "14238": 206, "14240": 206, "14242": 206, "14244": 206, "14246": 206, "14248": 206, "14250": 206, "14252": 206, "14254": 206, "14256": 206, "14258": 206, "14260": 206, "14262": 206, "14264": 206, "14266": 206, "14268": 206, "14270": 206, "14272": 206, "14274": 206, "14276": 206, "14278": 206, "14280": 206, "14282": 206, "14284": 206, "14286": 206, "14288": 206, "14290": 206, "14292": 206, "14294": 206, "14296": 206, "14298": 206, "14300": 206, "14302": 206, "14304": 206, "14306": 206, "14308": 206, "14310": 206, "14312": 206, "14314": 206, "14316": 206, "14318": 206, "14320": 206, "14322": 206, "14324": 206, "14326": 206, "14328": 206, "14330": 206, "14332": 206, "14334": 206, "14336": 206, "14338": 206, "14340": 206, "14342": 206, "14344": 206, "14346": 206, "14348": 206, "14350": 206, "14352": 206, "14354": 206, "14356": 206, "14358": 206, "14360": 206, "14362": 206, "14364": 206, "14366": 206, "14368": 206, "14370": 206, "14372": 206, "14374": 206, "14376": 206, "14378": 206, "14380": 206, "14382": 206, "14384": 206, "14388": 206, "14390": 206, "14392": 206, "14394": 206, "14396": 206, "14398": 206, "14400": 206, "14402": 206, "14404": 206, "14406": 206, "14408": 206, "14410": 206, "14412": 206, "14414": 206, "14416": 206, "14418": 206, "14420": 206, "14422": 206, "14424": 206, "14426": 206, "14428": 206, "14430": 206, "14432": 206, "14434": 206, "14436": 206, "14438": 206, "14440": 206, "14442": 206, "14444": 206, "14446": 206, "14448": 206, "14450": 206, "14452": 206, "14454": 206, "14456": 206, "14458": 206, "14460": 206, "14462": 206, "14464": 206, "14466": 206, "14468": 206, "14470": 206, "14472": 206, "14474": 206, "14476": 206, "14478": 206, "14480": 206, "14482": 206, "14484": 206, "14486": 206, "14488": 206, "14490": 206, "14492": 206, "14494": 206, "14496": 206, "14498": 206, "14500": 206, "14502": 206, "14504": 206, "14506": 206, "14508": 206, "14510": 206, "14512": 206, "14514": 206, "14516": 206, "14518": 206, "14520": 206, "14522": 206, "14524": 206, "14526": 206, "14528": 206, "14530": 206, "14532": 206, "14534": 206, "14536": 206, "14538": 206, "14540": 206, "14542": 206, "14544": 206, "14546": 206, "14548": 206, "14550": 206, "14552": 206, "14554": 206, "14556": 206, "14558": 206, "14560": 206, "14562": 206, "14564": 206, "14566": 206, "14568": 206, "14570": 206, "14572": 206, "14574": 206, "14576": 206, "14578": 206, "14580": 206, "14582": 206, "14584": 206, "14586": 206, "14588": 206, "14590": 206, "14592": 206, "14594": 206, "14596": 206, "14598": 206, "14600": 206, "14602": 206, "14604": 206, "14606": 206, "14608": 206, "14610": 206, "14612": 206, "14614": 206, "14616": 206, "14618": 206, "14620": 206, "14622": 206, "14624": 206, "14626": 206, "14628": 206, "14630": 206, "14632": 206, "14634": 206, "14636": 206, "14638": 206, "14640": 206, "14642": 206, "14644": 206, "14646": 206, "14648": 206, "14650": 206, "14652": 206, "14654": 206, "14656": 206, "14658": 206, "14660": 206, "14662": 206, "14664": 206, "14666": 206, "14668": 206, "14670": 206, "14672": 206, "14674": 206, "14676": 206, "14678": 206, "14680": 206, "14682": 206, "14684": 206, "14686": 206, "14688": 206, "14690": 206, "14692": 206, "14694": 206, "14696": 206, "14698": 206, "14700": 206, "14702": 206, "14704": 206, "14706": 206, "14708": 206, "14710": 206, "14712": 206, "14714": 206, "14716": 206, "14718": 206, "14720": 206, "14722": 206, "14724": 206, "14726": 206, "14728": 206, "14730": 206, "14732": 206, "14734": 206, "14736": 206, "14738": 206, "14740": 206, "14742": 206, "14744": 206, "14746": 206, "14748": 206, "14750": 206, "14752": 206, "14754": 206, "14756": 206, "14758": 206, "14760": 206, "14762": 206, "14764": 206, "14766": 206, "14768": 206, "14770": 206, "14772": 206, "14774": 206, "14776": 206, "14778": 206, "14780": 206, "14782": 206, "14784": 206, "14786": 206, "14788": 206, "14790": 206, "14792": 206, "14794": 206, "14796": 206, "14798": 206, "14800": 206, "14802": 206, "14804": 206, "14806": 206, "14808": 206, "14810": 206, "14812": 206, "14814": 206, "14816": 206, "14818": 206, "14820": 206, "14822": 206, "14824": 206, "14826": 206, "14828": 206, "14830": 206, "14832": 206, "14834": 206, "14836": 206, "14838": 206, "14840": 206, "14842": 206, "14844": 206, "14846": 206, "14848": 206, "14850": 206, "14852": 206, "14854": 206, "14856": 206, "14858": 206, "14860": 206, "14862": 206, "14864": 206, "14866": 206, "14868": 206, "14870": 206, "14872": 206, "14874": 206, "14876": 206, "14878": 206, "14880": 206, "14882": [206, 527], "14884": 206, "14886": 206, "14888": 206, "14890": 206, "14892": 206, "14894": 206, "14896": 206, "14898": 206, "14900": 206, "14902": 206, "14904": 206, "14906": 206, "14908": 206, "14910": 206, "14912": 206, "14914": 206, "14916": 206, "14918": 206, "14920": 206, "14922": 206, "14924": 206, "14926": 206, "14928": 206, "14930": 206, "14932": 206, "14934": 206, "14936": 206, "14938": 206, "14940": 206, "14942": 206, "14944": 206, "14946": 206, "14948": 206, "14950": 206, "14952": 206, "14954": 206, "14956": 206, "14958": 206, "14960": 206, "14962": 206, "14964": 206, "14966": 206, "14968": 206, "14970": 206, "14972": 206, "14974": 206, "14976": 206, "14978": 206, "14980": 206, "14982": 206, "14984": 206, "14986": 206, "14988": 206, "14990": [206, 255], "14992": 206, "14994": 206, "14996": 206, "14998": 206, "15002": 206, "15004": 206, "15006": 206, "15008": 206, "15010": 206, "15012": 206, "15014": 206, "15016": 206, "15018": 206, "15020": 206, "15022": 206, "15024": 206, "15026": 206, "15028": 206, "15030": 206, "15032": 206, "15034": 206, "15036": 206, "15038": 206, "15040": 206, "15042": 206, "15044": 206, "15046": 206, "15048": 206, "15050": 206, "15052": 206, "15054": 206, "15056": 206, "15058": 206, "15060": 206, "15062": 206, "15064": 206, "15066": 206, "15068": 206, "15070": 206, "15072": 206, "15074": 206, "15076": 206, "15078": 206, "15080": 206, "15082": 206, "15084": 206, "15086": 206, "15088": 206, "15090": 206, "15092": 206, "15094": 206, "15096": 206, "15098": 206, "15100": 206, "15102": 206, "15104": 206, "15106": 206, "15108": 206, "15110": 206, "15112": 206, "15114": 206, "15116": 206, "15118": 206, "15120": 206, "15122": 206, "15124": 206, "15126": 206, "15128": 206, "15130": 206, "15132": 206, "15134": 206, "15136": 206, "15138": 206, "15140": 206, "15142": 206, "15144": 206, "15146": 206, "15148": 206, "15150": 206, "15152": 206, "15154": 206, "15156": 206, "15158": 206, "15160": 206, "15162": 206, "15164": 206, "15166": 206, "15168": 206, "15170": 206, "15172": 206, "15174": 206, "15176": 206, "15178": 206, "15180": 206, "15182": 206, "15184": 206, "15186": 206, "15188": 206, "15190": 206, "15192": 206, "15194": 206, "15196": 206, "15198": 206, "15200": 206, "15202": 206, "15204": 206, "15206": 206, "15208": 206, "15210": 206, "15212": 206, "15214": 206, "15216": 206, "15218": 206, "15220": 206, "15222": 206, "15224": 206, "15226": 206, "15228": 206, "15230": 206, "15232": 206, "15234": 206, "15236": 206, "15238": 206, "15240": 206, "15242": 206, "15244": [206, 945], "15246": 206, "15248": 206, "15250": 206, "15252": 206, "15254": 206, "15256": 206, "15258": 206, "15260": 206, "15262": 206, "15264": 206, "15266": 206, "15268": 206, "15270": 206, "15272": 206, "15274": 206, "15276": 206, "15278": 206, "15280": 206, "15282": 206, "15284": 206, "15286": 206, "15288": 206, "15290": 206, "15292": 206, "15294": 206, "15296": 206, "15298": 206, "15300": 206, "15302": 206, "15304": 206, "15306": 206, "15308": 206, "15310": 206, "15312": 206, "15314": 206, "15316": 206, "15318": 206, "15320": 206, "15322": 206, "15324": 206, "15326": 206, "15328": 206, "15330": 206, "15332": 206, "15334": 206, "15336": 206, "15338": 206, "15340": 206, "15342": 206, "15344": 206, "15346": 206, "15348": 206, "15350": 206, "15352": 206, "15354": 206, "15356": 206, "15358": 206, "15360": 206, "15362": 206, "15364": 206, "15366": 206, "15368": 206, "15370": 206, "15372": 206, "15374": 206, "15376": 206, "15378": 206, "15380": 206, "15382": 206, "15384": 206, "15386": 206, "15388": 206, "15390": 206, "15392": 206, "15394": 206, "15396": 206, "15398": 206, "15400": 206, "15402": 206, "15404": 206, "15406": 206, "15408": 206, "15410": 206, "15412": 206, "15414": 206, "15416": 206, "15418": 206, "15420": 206, "15422": 206, "15424": 206, "15426": 206, "15428": 206, "15430": 206, "15432": 206, "15434": 206, "15436": 206, "15438": 206, "15440": 206, "15442": 206, "15444": 206, "15446": 206, "15448": 206, "15450": 206, "15452": 206, "15454": 206, "15456": 206, "15458": 206, "15460": 206, "15462": 206, "15464": 206, "15466": 206, "15468": 206, "15470": 206, "15472": 206, "15474": 206, "15476": 206, "15478": 206, "15480": 206, "15482": 206, "15484": 206, "15486": 206, "15488": 206, "15490": 206, "15492": 206, "15494": 206, "15496": 206, "15498": 206, "15500": 206, "15502": 206, "15504": 206, "15506": 206, "15508": 206, "15510": 206, "15512": 206, "15514": 206, "15516": 206, "15518": 206, "15520": 206, "15522": 206, "15524": 206, "15526": 206, "15528": 206, "15530": 206, "15532": 206, "15534": 206, "15536": 206, "15538": 206, "15540": 206, "15542": 206, "15544": 206, "15546": 206, "15548": 206, "15550": 206, "15552": 206, "15554": 206, "15556": 206, "15558": 206, "15560": 206, "15562": 206, "15564": 206, "15566": 206, "15568": 206, "15570": 206, "15572": 206, "15574": 206, "15576": 206, "15578": 206, "15580": 206, "15582": 206, "15584": 206, "15586": 206, "15588": 206, "15590": 206, "15592": 206, "15594": 206, "15596": 206, "15598": 206, "15600": 206, "15602": 206, "15604": 206, "15606": 206, "15608": 206, "15610": 206, "15612": 206, "15614": 206, "15616": 206, "15618": 206, "15620": 206, "15622": 206, "15624": 206, "15626": 206, "15628": 206, "15630": 206, "15632": 206, "15634": 206, "15636": 206, "15638": 206, "15640": 206, "15642": 206, "15644": 206, "15646": 206, "15648": 206, "15650": 206, "15652": 206, "15654": 206, "15656": 206, "15658": 206, "15660": 206, "15662": 206, "15664": 206, "15666": 206, "15668": 206, "15670": 206, "15672": 206, "15674": 206, "15676": 206, "15678": 206, "15680": 206, "15682": 206, "15684": 206, "15686": 206, "15688": 206, "15690": 206, "15692": 206, "15694": 206, "15696": 206, "15698": 206, "15700": 206, "15702": 206, "15704": 206, "15706": 206, "15708": 206, "15710": 206, "15712": 206, "15714": 206, "15716": 206, "15718": 206, "15720": 206, "15722": 206, "15724": 206, "15726": 206, "15728": 206, "15730": 206, "15732": 206, "15734": 206, "15736": 206, "15738": 206, "15740": 206, "15742": 206, "15744": 206, "15746": 206, "15748": 206, "15750": 206, "15752": 206, "15754": 206, "15756": 206, "15758": 206, "15760": 206, "15762": 206, "15764": 206, "15766": 206, "15768": 206, "15770": 206, "15772": 206, "15774": 206, "15776": 206, "15778": 206, "15780": 206, "15782": 206, "15784": 206, "15786": 206, "15788": 206, "15790": 206, "15792": 206, "15794": 206, "15796": 206, "15798": 206, "15800": 206, "15802": 206, "15804": 206, "15806": 206, "15808": 206, "15810": 206, "15812": 206, "15814": 206, "15816": 206, "15818": 206, "15820": 206, "15822": 206, "15824": 206, "15826": 206, "15828": 206, "15830": 206, "15832": 206, "15834": 206, "15836": 206, "15838": 206, "15840": 206, "15842": 206, "15844": 206, "15846": 206, "15848": 206, "15850": 206, "15852": 206, "15854": 206, "15856": 206, "15858": 206, "15860": 206, "15862": 206, "15864": 206, "15866": 206, "15868": 206, "15870": 206, "15872": 206, "15874": 206, "15876": 206, "15878": 206, "15880": 206, "15882": 206, "15884": 206, "15886": 206, "15888": 206, "15890": 206, "15892": 206, "15894": 206, "15896": 206, "15898": 206, "15900": 206, "15902": 206, "15904": 206, "15906": 206, "15908": 206, "15910": 206, "15912": 206, "15914": 206, "15916": 206, "15918": 206, "15920": 206, "15922": 206, "15924": 206, "15926": 206, "15928": 206, "15930": 206, "15932": 206, "15934": 206, "15936": 206, "15938": 206, "15940": 206, "15942": 206, "15944": 206, "15946": 206, "15948": 206, "15950": 206, "15952": 206, "15954": 206, "15956": 206, "15958": 206, "15960": 206, "15962": 206, "15964": 206, "15966": 206, "15968": 206, "15970": 206, "15972": 206, "15974": 206, "15976": 206, "15978": 206, "15980": 206, "15982": 206, "15984": 206, "15986": 206, "15988": 206, "15990": 206, "15992": 206, "15994": 206, "15996": 206, "15998": 206, "16000": 206, "16002": 206, "16004": 206, "16006": 206, "16008": 206, "16010": 206, "16012": 206, "16014": 206, "16016": 206, "16018": 206, "16020": 206, "16022": 206, "16024": 206, "16026": 206, "16028": 206, "16030": 206, "16032": 206, "16034": 206, "16036": 206, "16038": 206, "16040": 206, "16042": 206, "16044": 206, "16046": 206, "16048": 206, "16050": 206, "16052": 206, "16054": 206, "16056": 206, "16058": 206, "16060": 206, "16062": 206, "16064": 206, "16066": 206, "16068": 206, "16070": 206, "16072": 206, "16074": 206, "16076": 206, "16078": 206, "16080": 206, "16082": 206, "16084": 206, "16086": 206, "16088": 206, "16090": 206, "16092": 206, "16094": 206, "16096": 206, "16098": 206, "16100": 206, "16102": 206, "16104": 206, "16106": 206, "16108": 206, "16110": 206, "16112": 206, "16114": 206, "16116": 206, "16118": 206, "16120": 206, "16122": 206, "16124": 206, "16126": 206, "16128": 206, "16130": 206, "16132": 206, "16134": 206, "16136": 206, "16138": 206, "16140": 206, "16142": 206, "16144": 206, "16146": 206, "16148": 206, "16150": 206, "16152": 206, "16154": 206, "16156": 206, "16158": 206, "16160": 206, "16162": 206, "16164": 206, "16166": 206, "16168": 206, "16170": 206, "16172": 206, "16174": 206, "16176": 206, "16178": 206, "16180": 206, "16182": 206, "16184": 206, "16186": 206, "16188": 206, "16190": 206, "16192": 206, "16194": 206, "16196": 206, "16198": 206, "16200": 206, "16202": 206, "16204": 206, "16206": 206, "16208": 206, "16210": 206, "16212": 206, "16214": 206, "16216": 206, "16218": 206, "16220": 206, "16222": 206, "16224": 206, "16226": 206, "16228": 206, "16230": 206, "16232": 206, "16234": 206, "16236": 206, "16238": 206, "16240": 206, "16242": 206, "16244": 206, "16246": 206, "16248": 206, "16250": 206, "16252": 206, "16254": 206, "16256": 206, "16258": 206, "16260": 206, "16262": 206, "16264": 206, "16266": 206, "16268": 206, "16270": 206, "16272": 206, "16274": 206, "16276": 206, "16278": 206, "16280": 206, "16282": 206, "16284": 206, "16286": 206, "16288": 206, "16290": 206, "16292": 206, "16294": 206, "16296": 206, "16298": 206, "16300": 206, "16302": 206, "16304": 206, "16306": 206, "16308": 206, "16310": 206, "16312": 206, "16314": 206, "16316": 206, "16318": 206, "16320": 206, "16322": 206, "16324": 206, "16326": 206, "16328": 206, "16330": 206, "16332": 206, "16334": 206, "16336": 206, "16338": 206, "16340": 206, "16342": 206, "16344": 206, "16346": 206, "16348": 206, "16350": 206, "16352": 206, "16354": 206, "16356": 206, "16358": 206, "16360": 206, "16362": 206, "16364": 206, "16366": 206, "16368": 206, "16370": 206, "16372": 206, "16374": 206, "16376": 206, "16378": 206, "16380": 206, "16382": 206, "16386": 206, "16388": 206, "16390": 206, "16392": 206, "16394": 206, "16396": 206, "16398": 206, "16400": 206, "16402": 206, "16404": 206, "16406": 206, "16408": 206, "16410": 206, "16412": 206, "16414": 206, "16416": 206, "16418": 206, "16420": 206, "16422": 206, "16424": 206, "16426": 206, "16428": 206, "16430": 206, "16432": 206, "16434": 206, "16436": 206, "16438": 206, "16440": 206, "16442": 206, "16444": 206, "16446": 206, "16448": 206, "16450": 206, "16452": 206, "16454": 206, "16456": 206, "16458": 206, "16460": 206, "16462": 206, "16464": 206, "16466": 206, "16468": 206, "16470": 206, "16472": 206, "16474": 206, "16476": 206, "16478": 206, "16480": 206, "16482": 206, "16484": 206, "16486": 206, "16488": 206, "16490": 206, "16492": 206, "16494": 206, "16496": 206, "16498": 206, "16500": 206, "16502": 206, "16504": 206, "16506": 206, "16508": 206, "16510": 206, "16512": 206, "16514": 206, "16516": 206, "16518": 206, "16520": 206, "16522": 206, "16524": 206, "16526": 206, "16528": 206, "16530": 206, "16532": 206, "16534": 206, "16536": 206, "16538": 206, "16540": 206, "16542": 206, "16544": 206, "16546": 206, "16548": 206, "16550": 206, "16552": 206, "16554": 206, "16556": 206, "16558": 206, "16560": 206, "16562": 206, "16564": 206, "16566": 206, "16568": 206, "16570": 206, "16572": 206, "16574": 206, "16576": 206, "16578": 206, "16580": 206, "16582": 206, "16584": 206, "16586": 206, "16588": 206, "16590": 206, "16592": 206, "16594": 206, "16596": 206, "16598": 206, "16600": 206, "16602": 206, "16604": 206, "16606": 206, "16608": 206, "16610": 206, "16612": 206, "16614": 206, "16616": 206, "16618": 206, "16620": 206, "16622": 206, "16624": 206, "16626": 206, "16628": 206, "16630": 206, "16632": 206, "16634": 206, "16636": 206, "16638": 206, "16640": 206, "16642": 206, "16644": 206, "16646": 206, "16648": 206, "16650": 206, "16652": 206, "16654": 206, "16656": 206, "16658": 206, "16660": 206, "16662": 206, "16664": 206, "16666": 206, "16668": 206, "16670": 206, "16672": 206, "16674": 206, "16676": 206, "16678": 206, "16680": 206, "16682": 206, "16684": 206, "16686": 206, "16688": 206, "16690": 206, "16692": 206, "16694": 206, "16696": 206, "16698": 206, "16700": 206, "16702": 206, "16704": 206, "16706": 206, "16708": 206, "16710": 206, "16712": 206, "16714": 206, "16716": 206, "16718": 206, "16720": 206, "16722": 206, "16724": 206, "16726": 206, "16728": 206, "16730": 206, "16732": 206, "16734": 206, "16736": 206, "16738": 206, "16740": 206, "16742": 206, "16744": 206, "16746": 206, "16748": 206, "16750": 206, "16752": 206, "16754": 206, "16756": 206, "16758": 206, "16760": 206, "16762": 206, "16764": 206, "16766": 206, "16768": 206, "16770": 206, "16772": 206, "16774": 206, "16776": 206, "16778": 206, "16780": 206, "16782": 206, "16784": 206, "16786": 206, "16788": 206, "16790": 206, "16792": 206, "16794": 206, "16796": 206, "16798": 206, "16800": 206, "16802": 206, "16804": 206, "16806": 206, "16808": 206, "16810": 206, "16812": 206, "16814": 206, "16816": 206, "16818": 206, "16820": 206, "16822": 206, "16824": 206, "16826": 206, "16828": 206, "16830": 206, "16832": 206, "16834": 206, "16836": 206, "16838": 206, "16840": 206, "16842": 206, "16844": 206, "16846": 206, "16848": 206, "16850": 206, "16852": 206, "16854": 206, "16856": 206, "16858": 206, "16860": 206, "16862": 206, "16864": 206, "16866": 206, "16868": 206, "16870": 206, "16872": 206, "16874": 206, "16876": 206, "16878": 206, "16880": 206, "16882": 206, "16884": 206, "16886": 206, "16888": 206, "16890": 206, "16892": 206, "16894": 206, "16896": 206, "16898": 206, "16900": 206, "16902": 206, "16904": 206, "16906": 206, "16908": 206, "16910": 206, "16912": 206, "16914": 206, "16916": 206, "16918": 206, "16920": 206, "16922": 206, "16924": 206, "16926": 206, "16928": 206, "16930": 206, "16932": 206, "16934": 206, "16936": 206, "16938": 206, "16940": 206, "16942": 206, "16944": 206, "16946": 206, "16948": 206, "16950": 206, "16952": 206, "16954": 206, "16956": 206, "16958": 206, "16960": 206, "16962": 206, "16964": 206, "16966": 206, "16968": 206, "16970": 206, "16972": 206, "16974": 206, "16976": 206, "16978": 206, "16980": 206, "16982": 206, "16984": 206, "16986": 206, "16988": 206, "16990": 206, "16992": 206, "16994": 206, "16996": 206, "16998": 206, "17000": 206, "17002": 206, "17004": 206, "17006": 206, "17008": 206, "17010": 206, "17012": 206, "17014": 206, "17016": 206, "17018": 206, "17020": 206, "17022": 206, "17024": 206, "17026": 206, "17028": 206, "17030": 206, "17032": 206, "17034": 206, "17036": 206, "17038": 206, "17040": 206, "17042": 206, "17044": 206, "17046": 206, "17048": 206, "17050": 206, "17052": 206, "17054": 206, "17056": 206, "17058": 206, "17060": 206, "17062": 206, "17064": 206, "17066": 206, "17068": 206, "17070": 206, "17072": 206, "17074": 206, "17076": 206, "17078": 206, "17080": 206, "17082": 206, "17084": 206, "17086": 206, "17088": 206, "17090": 206, "17092": 206, "17094": 206, "17096": 206, "17098": 206, "17100": 206, "17102": 206, "17104": 206, "17106": 206, "17108": 206, "17110": 206, "17112": 206, "17114": 206, "17116": 206, "17118": 206, "17120": 206, "17122": 206, "17124": 206, "17126": [206, 255], "17128": 206, "17130": 206, "17132": 206, "17134": 206, "17136": 206, "17138": 206, "17140": 206, "17142": 206, "17144": 206, "17146": 206, "17148": 206, "17150": 206, "17152": 206, "17154": 206, "17156": 206, "17158": 206, "17160": 206, "17162": 206, "17164": 206, "17166": 206, "17168": 206, "17170": 206, "17172": 206, "17174": 206, "17176": 206, "17178": 206, "17180": 206, "17182": 206, "17184": 206, "17186": 206, "17188": 206, "17190": 206, "17192": 206, "17194": 206, "17196": 206, "17198": 206, "17200": 206, "17202": 206, "17204": 206, "17206": 206, "17208": 206, "17210": 206, "17212": 206, "17214": 206, "17216": 206, "17218": 206, "17220": 206, "17222": 206, "17224": 206, "17226": 206, "17228": 206, "17230": 206, "17232": 206, "17234": 206, "17236": 206, "17238": 206, "17240": 206, "17242": 206, "17244": 206, "17246": 206, "17248": 206, "17250": 206, "17252": 206, "17254": 206, "17256": 206, "17258": 206, "17260": 206, "17262": 206, "17264": 206, "17266": 206, "17268": 206, "17270": 206, "17272": 206, "17274": 206, "17276": 206, "17278": 206, "17280": 206, "17282": 206, "17284": 206, "17286": 206, "17288": 206, "17290": 206, "17292": 206, "17294": 206, "17296": 206, "17298": 206, "17300": 206, "17302": 206, "17304": 206, "17306": 206, "17308": 206, "17310": 206, "17312": 206, "17314": 206, "17316": 206, "17318": 206, "17320": 206, "17322": 206, "17324": 206, "17326": 206, "17328": 206, "17330": 206, "17332": 206, "17334": 206, "17336": 206, "17338": 206, "17340": 206, "17342": 206, "17344": 206, "17346": 206, "17348": 206, "17350": 206, "17352": 206, "17354": 206, "17356": 206, "17358": 206, "17360": 206, "17362": 206, "17364": 206, "17366": 206, "17368": 206, "17370": 206, "17372": 206, "17374": 206, "17376": 206, "17378": 206, "17380": 206, "17382": 206, "17384": 206, "17386": 206, "17388": 206, "17390": 206, "17392": 206, "17394": 206, "17396": 206, "17398": 206, "17400": 206, "17402": 206, "17404": 206, "17406": 206, "17408": 206, "17410": 206, "17412": 206, "17414": 206, "17416": 206, "17418": 206, "17420": 206, "17422": 206, "17424": 206, "17426": 206, "17428": 206, "17430": 206, "17432": 206, "17434": 206, "17436": 206, "17438": 206, "17440": 206, "17442": 206, "17444": 206, "17446": 206, "17448": 206, "17450": 206, "17452": 206, "17454": 206, "17456": 206, "17458": 206, "17460": 206, "17462": 206, "17464": 206, "17466": 206, "17468": 206, "17470": 206, "17472": 206, "17474": 206, "17476": 206, "17478": 206, "17480": 206, "17482": 206, "17484": 206, "17486": 206, "17488": 206, "17490": 206, "17492": 206, "17494": 206, "17496": 206, "17498": 206, "17500": 206, "17502": 206, "17504": 206, "17506": 206, "17508": 206, "17510": 206, "17512": 206, "17514": 206, "17516": 206, "17518": 206, "17520": 206, "17522": 206, "17524": 206, "17526": 206, "17528": 206, "17530": 206, "17532": 206, "17534": 206, "17536": 206, "17538": 206, "17540": 206, "17542": 206, "17544": 206, "17546": 206, "17548": 206, "17550": 206, "17552": 206, "17554": 206, "17556": 206, "17558": 206, "17560": 206, "17562": 206, "17564": 206, "17566": 206, "17568": 206, "17570": 206, "17572": 206, "17574": 206, "17576": 206, "17578": 206, "17580": 206, "17582": 206, "17584": 206, "17586": 206, "17588": 206, "17590": 206, "17592": 206, "17594": 206, "17596": 206, "17598": 206, "17600": 206, "17602": 206, "17604": 206, "17606": 206, "17608": 206, "17610": 206, "17612": 206, "17614": 206, "17616": 206, "17618": 206, "17620": 206, "17622": 206, "17624": 206, "17626": 206, "17628": 206, "17630": 206, "17632": 206, "17634": 206, "17636": 206, "17638": 206, "17640": 206, "17642": 206, "17644": 206, "17646": 206, "17648": 206, "17650": 206, "17652": 206, "17654": 206, "17656": 206, "17658": 206, "17660": 206, "17662": 206, "17664": 206, "17666": 206, "17668": 206, "17670": 206, "17672": 206, "17674": 206, "17676": 206, "17678": 206, "17680": 206, "17682": 206, "17684": 206, "17686": 206, "17688": 206, "17690": 206, "17692": 206, "17694": 206, "17696": 206, "17698": 206, "17700": 206, "17702": 206, "17704": 206, "17706": 206, "17708": 206, "17710": 206, "17712": 206, "17714": 206, "17716": 206, "17718": 206, "17720": 206, "17722": 206, "17724": 206, "17726": 206, "17728": 206, "17730": 206, "17732": 206, "17734": 206, "17736": 206, "17738": 206, "17740": 206, "17742": 206, "17744": 206, "17746": 206, "17748": 206, "17750": 206, "17752": 206, "17754": 206, "17756": 206, "17758": 206, "17760": 206, "17762": 206, "17764": 206, "17766": 206, "17768": 206, "17770": 206, "17772": 206, "17774": 206, "17776": 206, "17778": 206, "17780": 206, "17782": 206, "17784": 206, "17786": 206, "17788": 206, "17790": 206, "17792": 206, "17794": 206, "17796": 206, "17798": 206, "17800": 206, "17802": 206, "17804": 206, "17806": 206, "17808": 206, "17810": 206, "17812": 206, "17814": 206, "17816": 206, "17818": 206, "17820": 206, "17822": 206, "17824": 206, "17826": 206, "17828": 206, "17830": 206, "17832": 206, "17834": 206, "17836": 206, "17838": 206, "17840": 206, "17842": 206, "17844": 206, "17846": 206, "17848": 206, "17850": 206, "17852": 206, "17854": 206, "17856": 206, "17858": 206, "17860": 206, "17862": 206, "17864": 206, "17866": 206, "17868": 206, "17870": 206, "17872": 206, "17874": 206, "17876": 206, "17878": 206, "17880": 206, "17882": 206, "17884": 206, "17886": 206, "17888": 206, "17890": 206, "17892": 206, "17894": 206, "17896": 206, "17898": 206, "17900": 206, "17902": 206, "17904": 206, "17906": 206, "17908": 206, "17910": 206, "17912": 206, "17914": 206, "17916": 206, "17918": 206, "17920": 206, "17922": 206, "17924": 206, "17926": 206, "17928": 206, "17930": 206, "17932": 206, "17934": 206, "17936": 206, "17938": 206, "17940": 206, "17942": 206, "17944": 206, "17946": 206, "17948": 206, "17950": 206, "17952": 206, "17954": 206, "17956": 206, "17958": 206, "17960": 206, "17962": 206, "17964": 206, "17966": 206, "17968": 206, "17970": 206, "17972": 206, "17974": 206, "17976": 206, "17978": 206, "17980": 206, "17982": 206, "17984": 206, "17986": 206, "17988": 206, "17990": 206, "17992": 206, "17994": 206, "17996": 206, "17998": 206, "18000": [206, 863], "18002": 206, "18004": 206, "18006": 206, "18008": 206, "18010": 206, "18012": 206, "18014": 206, "18016": 206, "18018": 206, "18020": 206, "18022": 206, "18024": 206, "18026": 206, "18028": 206, "18030": 206, "18032": 206, "18034": 206, "18036": 206, "18038": 206, "18040": 206, "18042": 206, "18044": 206, "18046": 206, "18048": 206, "18050": 206, "18052": 206, "18054": 206, "18056": 206, "18058": 206, "18060": 206, "18062": 206, "18064": 206, "18066": 206, "18068": 206, "18070": 206, "18072": 206, "18074": 206, "18076": 206, "18078": 206, "18080": 206, "18082": 206, "18084": 206, "18086": 206, "18088": 206, "18090": 206, "18092": 206, "18094": 206, "18096": 206, "18098": 206, "18100": 206, "18102": 206, "18104": 206, "18106": 206, "18108": 206, "18110": 206, "18112": 206, "18114": 206, "18116": 206, "18118": 206, "18120": 206, "18122": 206, "18124": 206, "18126": 206, "18128": 206, "18130": 206, "18132": 206, "18134": 206, "18136": 206, "18138": 206, "18140": 206, "18142": 206, "18144": 206, "18146": 206, "18148": 206, "18150": 206, "18152": 206, "18154": 206, "18156": 206, "18158": 206, "18160": 206, "18162": 206, "18164": 206, "18166": 206, "18168": 206, "18170": 206, "18172": 206, "18174": 206, "18176": 206, "18178": 206, "18180": 206, "18182": 206, "18184": 206, "18186": 206, "18188": 206, "18190": 206, "18192": 206, "18194": 206, "18196": 206, "18198": 206, "18200": 206, "18202": 206, "18204": 206, "18206": 206, "18208": 206, "18210": 206, "18212": 206, "18214": 206, "18216": 206, "18218": 206, "18220": 206, "18222": 206, "18224": 206, "18226": 206, "18228": 206, "18230": 206, "18232": 206, "18234": 206, "18236": 206, "18238": 206, "18240": 206, "18242": 206, "18244": 206, "18246": 206, "18248": 206, "18250": 206, "18252": 206, "18254": 206, "18256": 206, "18258": 206, "18260": 206, "18262": 206, "18264": 206, "18266": 206, "18268": 206, "18270": 206, "18272": 206, "18274": 206, "18276": 206, "18278": 206, "18280": 206, "18282": 206, "18284": 206, "18286": 206, "18288": 206, "18290": 206, "18292": 206, "18294": 206, "18296": 206, "18298": 206, "18300": 206, "18302": 206, "18304": 206, "18306": 206, "18308": 206, "18310": 206, "18312": 206, "18314": 206, "18316": 206, "18318": 206, "18320": 206, "18322": 206, "18324": 206, "18326": 206, "18328": 206, "18330": 206, "18332": 206, "18334": 206, "18336": 206, "18338": 206, "18340": 206, "18342": 206, "18344": 206, "18346": 206, "18348": 206, "18350": 206, "18352": 206, "18354": 206, "18356": 206, "18358": 206, "18360": 206, "18362": 206, "18364": 206, "18366": 206, "18368": 206, "18370": 206, "18372": 206, "18374": 206, "18376": 206, "18378": 206, "18380": 206, "18382": 206, "18384": [206, 931], "18386": 206, "18388": 206, "18390": 206, "18392": 206, "18394": 206, "18396": 206, "18398": 206, "18400": 206, "18402": 206, "18404": 206, "18406": 206, "18408": 206, "18410": 206, "18412": 206, "18414": 206, "18416": 206, "18418": 206, "18420": 206, "18422": 206, "18424": 206, "18426": 206, "18428": 206, "18430": 206, "18432": 206, "18434": 206, "18436": 206, "18438": 206, "18440": 206, "18442": 206, "18444": 206, "18446": 206, "18448": 206, "18450": 206, "18452": 206, "18454": 206, "18456": 206, "18458": 206, "18460": 206, "18462": 206, "18464": 206, "18466": 206, "18468": 206, "18470": 206, "18472": 206, "18474": 206, "18476": 206, "18478": 206, "18480": 206, "18482": 206, "18484": 206, "18486": 206, "18488": 206, "18490": 206, "18492": 206, "18494": 206, "18496": 206, "18498": 206, "18500": 206, "18502": 206, "18504": 206, "18506": 206, "18508": 206, "18510": 206, "18512": 206, "18514": 206, "18516": 206, "18518": 206, "18520": 206, "18522": 206, "18524": 206, "18526": 206, "18528": 206, "18530": 206, "18532": 206, "18534": 206, "18536": 206, "18538": 206, "18540": 206, "18542": 206, "18544": 206, "18546": 206, "18548": 206, "18550": 206, "18552": 206, "18554": 206, "18556": 206, "18558": 206, "18560": 206, "18562": 206, "18564": 206, "18566": 206, "18568": 206, "18570": 206, "18572": 206, "18574": 206, "18576": 206, "18578": 206, "18580": 206, "18582": 206, "18584": 206, "18586": 206, "18588": 206, "18590": 206, "18592": 206, "18594": 206, "18596": 206, "18598": 206, "18600": 206, "18602": 206, "18604": 206, "18606": 206, "18608": 206, "18610": 206, "18612": 206, "18614": 206, "18616": 206, "18618": 206, "18620": 206, "18622": 206, "18624": 206, "18626": 206, "18628": 206, "18630": 206, "18632": 206, "18634": 206, "18636": 206, "18638": 206, "18640": 206, "18642": 206, "18644": 206, "18646": 206, "18648": 206, "18650": 206, "18652": 206, "18654": 206, "18656": 206, "18658": 206, "18660": 206, "18662": 206, "18664": 206, "18666": 206, "18668": 206, "18670": 206, "18672": 206, "18674": 206, "18676": 206, "18678": 206, "18680": 206, "18682": 206, "18684": 206, "18686": 206, "18688": 206, "18690": 206, "18692": 206, "18694": 206, "18696": 206, "18698": 206, "18700": 206, "18702": 206, "18704": 206, "18706": 206, "18708": 206, "18710": 206, "18712": 206, "18714": 206, "18716": 206, "18718": 206, "18720": 206, "18722": 206, "18724": 206, "18726": 206, "18728": 206, "18730": 206, "18732": 206, "18734": 206, "18736": 206, "18738": 206, "18740": 206, "18742": 206, "18744": 206, "18746": 206, "18748": 206, "18750": 206, "18752": 206, "18754": 206, "18756": 206, "18758": 206, "18760": 206, "18762": 206, "18764": 206, "18766": 206, "18768": 206, "18770": 206, "18772": 206, "18774": 206, "18776": 206, "18778": 206, "18780": 206, "18782": 206, "18784": 206, "18786": 206, "18788": 206, "18790": 206, "18792": 206, "18794": 206, "18796": 206, "18798": 206, "18800": 206, "18802": 206, "18804": 206, "18806": 206, "18808": 206, "18810": 206, "18812": 206, "18814": 206, "18816": 206, "18818": 206, "18820": 206, "18822": 206, "18824": 206, "18826": 206, "18828": 206, "18830": 206, "18832": 206, "18834": 206, "18836": 206, "18838": 206, "18840": 206, "18842": 206, "18844": 206, "18846": 206, "18848": 206, "18850": 206, "18852": 206, "18854": 206, "18856": 206, "18858": 206, "18860": 206, "18862": 206, "18864": 206, "18866": 206, "18868": 206, "18870": 206, "18872": 206, "18874": 206, "18876": 206, "18878": 206, "18880": 206, "18882": 206, "18884": 206, "18886": 206, "18888": 206, "18890": 206, "18892": 206, "18894": 206, "18896": 206, "18898": 206, "18900": 206, "18902": 206, "18904": 206, "18906": 206, "18908": 206, "18910": 206, "18912": 206, "18914": 206, "18916": 206, "18918": 206, "18920": 206, "18922": 206, "18924": 206, "18926": 206, "18928": 206, "18930": 206, "18932": 206, "18934": 206, "18936": 206, "18938": 206, "18940": 206, "18942": 206, "18944": 206, "18946": 206, "18948": 206, "18950": 206, "18952": 206, "18954": 206, "18956": 206, "18958": 206, "18960": 206, "18962": 206, "18964": 206, "18966": 206, "18968": 206, "18970": 206, "18972": 206, "18974": 206, "18976": 206, "18978": 206, "18980": 206, "18982": 206, "18984": 206, "18986": 206, "18988": 206, "18990": 206, "18992": 206, "18994": 206, "18996": 206, "18998": 206, "19000": 206, "19002": 206, "19004": 206, "19006": 206, "19008": 206, "19010": 206, "19012": 206, "19014": 206, "19016": 206, "19018": 206, "19020": 206, "19022": 206, "19024": 206, "19026": 206, "19028": 206, "19030": 206, "19032": 206, "19034": 206, "19036": 206, "19038": 206, "19040": 206, "19042": 206, "19044": 206, "19046": 206, "19048": 206, "19050": 206, "19052": 206, "19054": 206, "19056": 206, "19058": 206, "19060": 206, "19062": 206, "19064": 206, "19066": 206, "19068": 206, "19070": 206, "19072": 206, "19074": 206, "19076": 206, "19078": 206, "19080": 206, "19082": 206, "19084": 206, "19086": 206, "19088": 206, "19090": 206, "19092": 206, "19094": 206, "19096": 206, "19098": 206, "19100": 206, "19102": 206, "19104": 206, "19106": 206, "19108": 206, "19110": 206, "19112": 206, "19114": 206, "19116": 206, "19118": 206, "19120": 206, "19122": 206, "19124": 206, "19126": 206, "19128": 206, "19130": 206, "19132": 206, "19134": 206, "19136": 206, "19138": 206, "19140": 206, "19142": 206, "19144": 206, "19146": 206, "19148": 206, "19150": 206, "19152": 206, "19154": 206, "19156": 206, "19158": 206, "19160": 206, "19162": 206, "19164": 206, "19166": 206, "19168": 206, "19170": 206, "19172": 206, "19174": 206, "19176": 206, "19178": 206, "19180": 206, "19182": 206, "19184": 206, "19186": 206, "19188": 206, "19190": 206, "19192": 206, "19194": 206, "19196": 206, "19198": 206, "19200": 206, "19202": 206, "19204": 206, "19206": 206, "19208": 206, "19210": 206, "19212": 206, "19214": 206, "19216": 206, "19218": 206, "19220": 206, "19222": 206, "19224": 206, "19226": 206, "19228": 206, "19230": 206, "19232": 206, "19234": 206, "19236": 206, "19238": 206, "19240": 206, "19242": 206, "19244": 206, "19246": 206, "19248": 206, "19250": 206, "19252": 206, "19254": 206, "19256": 206, "19258": 206, "19260": 206, "19262": 206, "19264": 206, "19266": 206, "19268": 206, "19270": 206, "19272": 206, "19274": 206, "19276": 206, "19278": 206, "19280": 206, "19282": 206, "19284": 206, "19286": 206, "19288": 206, "19290": 206, "19292": 206, "19294": 206, "19296": 206, "19298": 206, "19300": 206, "19302": 206, "19304": 206, "19306": 206, "19308": 206, "19310": 206, "19312": 206, "19314": 206, "19316": 206, "19318": 206, "19320": 206, "19322": 206, "19324": 206, "19326": 206, "19328": 206, "19330": 206, "19332": 206, "19334": 206, "19336": 206, "19338": 206, "19340": 206, "19342": 206, "19344": 206, "19346": 206, "19348": 206, "19350": 206, "19352": 206, "19354": 206, "19356": 206, "19358": 206, "19360": 206, "19362": 206, "19364": 206, "19366": 206, "19368": 206, "19370": 206, "19372": 206, "19374": 206, "19376": 206, "19378": 206, "19380": 206, "19382": 206, "19384": 206, "19386": 206, "19388": 206, "19390": 206, "19392": 206, "19394": 206, "19396": 206, "19398": 206, "19400": 206, "19402": 206, "19404": 206, "19406": 206, "19408": 206, "19410": 206, "19412": 206, "19414": 206, "19416": 206, "19418": 206, "19420": 206, "19422": 206, "19424": 206, "19426": 206, "19428": 206, "19430": 206, "19432": 206, "19434": 206, "19436": 206, "19438": 206, "19440": 206, "19442": 206, "19444": 206, "19446": 206, "19448": 206, "19450": 206, "19452": 206, "19454": 206, "19456": 206, "19458": 206, "19460": 206, "19462": 206, "19464": 206, "19466": 206, "19468": 206, "19470": 206, "19472": 206, "19474": 206, "19476": 206, "19478": 206, "19480": 206, "19482": 206, "19484": 206, "19486": 206, "19488": 206, "19490": 206, "19492": 206, "19494": 206, "19496": 206, "19498": 206, "19500": 206, "19502": 206, "19504": 206, "19506": 206, "19508": 206, "19510": 206, "19512": 206, "19514": 206, "19516": 206, "19518": 206, "19520": 206, "19522": 206, "19524": 206, "19526": 206, "19528": 206, "19530": 206, "19532": 206, "19534": 206, "19536": 206, "19538": 206, "19540": 206, "19542": 206, "19544": 206, "19546": 206, "19548": 206, "19550": 206, "19552": 206, "19554": 206, "19556": 206, "19558": 206, "19560": 206, "19562": 206, "19564": 206, "19566": 206, "19568": 206, "19570": 206, "19572": 206, "19574": 206, "19576": 206, "19578": 206, "19580": 206, "19582": 206, "19584": 206, "19586": 206, "19588": 206, "19590": 206, "19592": 206, "19594": 206, "19596": 206, "19598": 206, "19600": 206, "19602": 206, "19604": 206, "19606": 206, "19608": 206, "19610": 206, "19612": 206, "19614": 206, "19616": 206, "19618": 206, "19620": 206, "19622": 206, "19624": 206, "19626": 206, "19628": 206, "19630": 206, "19632": 206, "19634": 206, "19636": 206, "19638": 206, "19640": 206, "19642": 206, "19644": 206, "19646": 206, "19648": 206, "19650": 206, "19652": 206, "19654": 206, "19656": 206, "19658": 206, "19660": 206, "19662": 206, "19664": 206, "19666": 206, "19668": 206, "19670": 206, "19672": 206, "19674": 206, "19676": 206, "19678": 206, "19680": 206, "19682": 206, "19684": 206, "19686": 206, "19688": 206, "19690": 206, "19692": 206, "19694": 206, "19696": 206, "19698": 206, "19700": 206, "19702": 206, "19704": 206, "19706": 206, "19708": 206, "19710": 206, "19712": 206, "19714": 206, "19716": 206, "19718": 206, "19720": 206, "19722": 206, "19724": 206, "19726": 206, "19728": 206, "19730": 206, "19732": 206, "19734": 206, "19736": 206, "19738": 206, "19740": 206, "19742": 206, "19744": 206, "19746": 206, "19748": 206, "19750": 206, "19752": 206, "19754": 206, "19756": 206, "19758": 206, "19760": 206, "19762": 206, "19764": 206, "19766": 206, "19768": 206, "19770": 206, "19772": 206, "19774": 206, "19776": 206, "19778": 206, "19780": 206, "19782": 206, "19784": 206, "19786": 206, "19788": 206, "19790": 206, "19792": 206, "19794": 206, "19796": 206, "19798": 206, "19800": 206, "19802": 206, "19804": 206, "19806": 206, "19808": 206, "19810": 206, "19812": 206, "19814": 206, "19816": 206, "19818": 206, "19820": 206, "19822": 206, "19824": 206, "19826": 206, "19828": 206, "19830": 206, "19832": 206, "19834": 206, "19836": 206, "19838": 206, "19840": 206, "19842": 206, "19844": 206, "19846": 206, "19848": 206, "19850": 206, "19852": 206, "19854": 206, "19856": 206, "19858": 206, "19860": 206, "19862": 206, "19864": 206, "19866": 206, "19868": 206, "19870": 206, "19872": 206, "19874": 206, "19876": 206, "19878": 206, "19880": 206, "19882": 206, "19884": 206, "19886": 206, "19888": 206, "19890": 206, "19892": 206, "19894": 206, "19896": 206, "19898": 206, "19900": 206, "19902": 206, "19904": 206, "19906": 206, "19908": 206, "19910": 206, "19912": 206, "19914": 206, "19916": 206, "19918": 206, "19920": 206, "19922": 206, "19924": 206, "19926": 206, "19928": 206, "19930": 206, "19932": 206, "19934": 206, "19936": 206, "19938": 206, "19940": 206, "19942": 206, "19944": 206, "19946": 206, "19948": 206, "19950": 206, "19952": 206, "19954": 206, "19956": 206, "19958": 206, "19960": 206, "19962": 206, "19964": 206, "19966": 206, "19968": 206, "19970": 206, "19972": 206, "19974": 206, "19976": 206, "19978": 206, "19980": 206, "19982": 206, "19984": 206, "19986": 206, "19988": 206, "19990": 206, "19992": 206, "19994": 206, "19996": 206, "19998": 206, "l_to_send": 206, "json_to_send": 206, "json_receiv": 206, "l_receiv": 206, "sine": [206, 247, 264], "140106668681968": 206, "wallclock_axi": 206, "1638538131": 206, "1975703": 206, "2978473": 206, "3981225": 206, "498449": 206, "5987027": 206, "698947": 206, "7996597": 206, "899947": 206, "1638538132": 206, "0001943": 206, "1010473": 206, "0b10110": 206, "0x16": [206, 747], "0b1011": [206, 241], "bit_3": 206, "0b00001": 206, "0b1": [206, 223], "0b1000": [206, 223], "0b11110": 206, "bitwis": [206, 353, 386, 883, 887, 974], "num1": [206, 223], "0b110101101": 206, "num2": [206, 223], "0b101110100": 206, "0b100100100": 206, "0b111111101": 206, "0b1010": 206, "0b10100": [206, 223], "1fuzzi2fuzzi3fuzzi4": 206, "0b11011001": 206, "abcdef": [206, 213, 219, 223], "cde": 206, "lexic": [206, 413, 708], "indexerror": [206, 223, 226, 244, 301, 954, 1007, 1079], "auer": 206, "aue": 206, "zerodivisionerror": [206, 219, 244, 954], "lst1": 206, "lst2": 206, "toc": 207, "treeset": 207, "searchabl": [207, 210], "iot": [207, 247], "diesel": 207, "vibrat": 207, "lighter": 207, "sensorrandom": 207, "sensorsin": 207, "sensorconst": 207, "decoupl": [207, 426, 915], "wild": [207, 209, 214, 249], "yesterai": 207, "deseri": [207, 219], "decod": [207, 219, 226, 229, 265, 271, 1005], "swallow": [207, 788, 954], "walkthrough": [207, 209, 214, 1127], "1h": 207, "exchangeformat": 207, "test_mqtt_format": 207, "parser": [207, 219, 273, 312, 640, 1007, 1114], "mosquitto_sub": [207, 1074], "writer": [207, 716, 801], "deserializeerror": 207, "dangl": [207, 356, 527, 541], "fahrenheit": [209, 324, 326, 339, 354, 363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 427, 628, 666, 707, 709, 710], "nonconst": [209, 539], "getchar": [209, 330, 332, 337, 346], "dry": 209, "verif": [209, 1060], "umlaut": [209, 210, 286, 986, 1071], "\u00f6": [209, 229, 1071], "canari": 209, "asid": [209, 364, 365, 377, 639, 916], "brainfuck": 209, "nok": [209, 676, 910], "singli": [209, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "typedef": [209, 380, 383, 387, 396, 400, 405, 406, 626, 628, 666, 674, 690, 707, 709, 710, 777, 925], "commonplac": [209, 1117], "boundari": [209, 219, 265, 386, 700, 855], "neighborhood": 209, "norm": [209, 1071], "signed": [209, 340, 389], "unsigned": 209, "excurs": [209, 430, 1054], "pointerarith": 209, "lower_bound": [209, 256, 282, 566, 571, 590, 594, 623, 710], "for_each": [209, 256, 571, 590, 594, 623, 674, 710], "diagram": [209, 430, 448, 450, 770, 854, 861, 863], "search_by_lastnam": [209, 619, 620, 621], "const_iter": [209, 521, 565, 568, 569, 570, 572, 587, 626, 641, 674, 675], "calloper": [209, 504], "exc": [209, 504], "ostream": [209, 504, 530, 690, 1099], "paint": [209, 609, 623, 710], "reverse_copi": [209, 256, 504, 571, 590, 594, 623, 710], "cin": [209, 573, 591, 593, 609, 623, 710], "accumul": [209, 504], "raci": [209, 504], "wsl2": [209, 236, 238, 256, 258, 308], "libsqlite3": [209, 414], "libboost": 209, "libgtk": 209, "prosaic": 209, "roman": 209, "mad": [209, 388], "wxwidget": 209, "lieb": [210, 271], "gr\u00fc\u00dfe": [210, 271], "utf8": 210, "distil": [210, 270, 287, 952, 1024], "4j": 211, "unlimitxdeadbeef": [211, 213, 219, 265, 271, 296, 481], "3735928559": [211, 213, 219, 223, 265, 271, 296], "0b10010011": 211, "ippi": 211, "0b0101": 211, "0101": 211, "teifl": 211, "fun1": 211, "fun2": 211, "ipykernel_165524": 211, "729327466": 211, "nsecond": [211, 999], "rline": 211, "carriag": [211, 343, 999], "neuer": 211, "ordner": 211, "euer": 211, "regex_str": [211, 229], "calim": 211, "yaaai": 211, "needl": [211, 993, 1001], "haystack": [211, 993, 1001], "finit": [211, 260, 279, 358, 846], "haystack_s": 211, "0x7fe07c0cdf90": 211, "list_iter": [211, 229], "0x7fe07c0cd7f0": 211, "unicode_code_point": 211, "l_new": 211, "ijk": 211, "mengenlehr": 211, "s1": [211, 219, 223, 226, 229, 244, 251, 261, 271, 430, 447, 479, 536, 630, 636, 684, 1004], "s2": [211, 219, 223, 226, 229, 244, 251, 261, 271, 430, 447, 479, 536, 630, 636, 684, 1004], "gunnar": 211, "liam": 211, "maximumum": 211, "variable2": 211, "maximum2": 211, "mrmr": 211, "einser": 211, "square_numb": [211, 1002], "squares_gener": 211, "other_d": [211, 244], "nove": 211, "isspac": [211, 213, 216, 219, 244, 265, 1001], "buchhaltung": [211, 817, 839, 840], "startswith": [211, 219, 248, 249, 251, 265, 410, 1001, 1077], "buch": [211, 1109], "oooo": 211, "isupp": [211, 219, 229, 265, 1001], "zz": 211, "traurig": 211, "substr": [211, 213, 219, 229, 244, 251, 265, 1099], "gid": [211, 219, 708, 784, 785, 792, 794, 802, 874, 889, 1033], "count_byt": 211, "nbyte": 211, "2691": [211, 708, 813], "miscellanea": [212, 877], "brace": [212, 219, 265, 330, 353, 356, 368, 428, 521, 530, 562, 564, 569, 582, 583, 626, 666, 675, 707, 709, 710, 983, 986], "hour_of_dai": 212, "ein_str": 213, "ein_anderer_str": 213, "fghjgfgh": 213, "dfghgfgh": 213, "do_someth": [213, 232, 296, 359, 361, 369, 384, 398, 683, 983], "komplett": 213, "returnwert": [213, 1109], "sinnloser": 213, "weis": [213, 1130], "vorgenommen": 213, "obacht": 213, "140672599989840": 213, "140672464974720": 213, "hoechst": [213, 251], "rechnern": 213, "100000": [213, 229, 639, 862, 1060], "": [213, 229], "exponenti": [213, 986, 1000], "__annotations__": [213, 223, 244, 265, 955], "__closure__": [213, 223, 244, 265], "__code__": [213, 223, 244, 265], "__delattr__": [213, 216, 219, 223, 241, 244, 265], "__dir__": [213, 216, 223, 241, 244, 265], "__format__": [213, 216, 219, 223, 241, 244, 265], "__ge__": [213, 216, 219, 223, 241, 244, 265, 974], "__get__": [213, 223, 244, 265], "__getattribute__": [213, 216, 219, 223, 241, 244, 265], "__globals__": [213, 223, 244, 265], "__gt__": [213, 216, 219, 223, 241, 244, 265], "__hash__": [213, 216, 219, 223, 241, 244, 265], "__init_subclass__": [213, 216, 223, 241, 244, 265], "__kwdefaults__": [213, 223, 244, 265], "__ne__": [213, 216, 219, 223, 241, 244, 265, 974], "__new__": [213, 216, 219, 223, 241, 244, 265], "__qualname__": [213, 223, 244, 265], "__reduce__": [213, 216, 219, 223, 241, 244, 265], "__reduce_ex__": [213, 216, 223, 241, 244, 265], "__setattr__": [213, 216, 219, 223, 241, 244, 265], "__sizeof__": [213, 216, 219, 223, 241, 244, 265], "__subclasshook__": [213, 216, 223, 241, 244, 265], "karteikart": 213, "my_formatted_person": 213, "123425041997": 213, "caros_str": 213, "joergs_str": 213, "0x7ff0dc48b490": 213, "next_po": 213, "tim": [213, 223, 292, 293], "ugli": [213, 223, 237, 246, 247, 260, 267, 268, 279, 325, 330, 504, 710, 782, 787, 812, 813, 853, 952, 953], "flat": [213, 223, 377, 403, 404, 924, 925], "puriti": [213, 223], "silenc": [213, 223, 369, 800], "ambigu": [213, 223, 356, 391, 392, 393, 540, 640, 817], "refus": [213, 223, 232, 420, 730, 783, 854, 870, 929], "temptat": [213, 223], "dutch": [213, 223], "honk": [213, 223], "wahr": 213, "falsch": [213, 226, 1116], "kriegt": 213, "nachkommastellen": 213, "moeglichkeit": 213, "f_str": 213, "punkt_po": 213, "nachkomma_str": 213, "praezedenz": 213, "wandel": 213, "vorn": 213, "anhaengen": 213, "wuenschen": 213, "wuerd": 213, "appendleft": 213, "extendleft": 213, "relem": 213, "popleft": 213, "sorted_l": 213, "sorted_t": 213, "sorted_": 213, "subtext": 213, "ssissippi": 213, "140672464726576": 213, "copied_text": 213, "140672464784832": 213, "140672464784064": 213, "140672599989872": 213, "140672464751872": 213, "140672464768512": 213, "140672464594880": 213, "jkl": 213, "suesser": [213, 219, 226, 229, 232, 248], "sechser_gewuerfelt": 213, "n_tri": [213, 216, 251, 990], "versag": [213, 251], "eva": [213, 265, 993], "xrang": [213, 994], "0x7ff0dc48bed0": 213, "hann": 213, "gruess": 213, "gott": [213, 244, 319], "fill_in_us": 213, "scho": 213, "my_db": 213, "uniq_dict": 213, "konfigurierbaren": 213, "startwert": 213, "ausgibt": 213, "sqnum": 213, "0x7ff014b01820": 213, "xslx": 213, "yz": 213, "lret": 213, "ochwa": 213, "followup": [214, 275, 472, 1044], "unbalanc": 214, "geospati": 214, "gdal": 214, "sweigart": [214, 228, 270, 1055], "datenypen": 215, "libarari": 215, "chainmap": 215, "dequ": [215, 698], "suchalgorithmen": 215, "51139385": 216, "77397a312b47": 216, "50924272": [216, 219], "20210728": [216, 219, 981], "eine_komplizierte_funkt": 216, "endeffekt": 216, "zusammenzuzaehlen": 216, "tarnt": 216, "vergeblich": 216, "komplexitaet": 216, "zahl_als_str": 216, "bledsinn": 216, "try_no": 216, "blahblahblah": 216, "cxyxyyyyxi": 216, "table_str": 216, "table_dict": 216, "139769175732912": 216, "139769175738624": 216, "satan_str": 216, "satan_int": 216, "result_of_print": 216, "result_of_evald_print": 216, "code_str": [216, 226], "compiled_cod": 216, "woswasi": [216, 223], "0x7f1e91eb42f0": 216, "philipp": [216, 223, 226, 244, 251, 265, 428, 502, 575, 587, 619, 621, 1044, 1046, 1050, 1052, 1075, 1076, 1077, 1079, 1080, 1081, 1082], "lastnma": 216, "0x7f1e8c0fe2e0": 216, "__abs__": [216, 223, 241], "__and__": [216, 223, 974], "__bool__": [216, 223, 241], "__ceil__": [216, 223, 241], "__divmod__": [216, 223, 241], "__float__": [216, 223, 241, 265], "__floor__": [216, 223, 241], "__floordiv__": [216, 223, 241, 974], "__getnewargs__": [216, 219, 223, 241, 265], "__index__": [216, 223], "__int__": [216, 223, 241, 265], "__invert__": [216, 223], "__lshift__": [216, 223, 974], "__mod__": [216, 219, 223, 241, 265, 974], "__mul__": [216, 219, 223, 241, 265, 974], "__neg__": [216, 223, 241], "__or__": [216, 223, 974], "__pos__": [216, 223, 241], "__pow__": [216, 223, 241, 974], "__rand__": [216, 223], "__rdivmod__": [216, 223, 241], "__rfloordiv__": [216, 223, 241], "__rlshift__": [216, 223], "__rmod__": [216, 219, 223, 241, 265], "__rmul__": [216, 219, 223, 241, 265], "__ror__": [216, 223], "__round__": [216, 223, 241], "__rpow__": [216, 223, 241], "__rrshift__": [216, 223, 974], "__rshift__": [216, 223, 974], "__rsub__": [216, 223, 241, 974], "__rtruediv__": [216, 223, 241], "__rxor__": [216, 223], "__sub__": [216, 223, 241, 974], "__truediv__": [216, 223, 241, 974], "__trunc__": [216, 223, 241], "__xor__": [216, 223, 974], "as_integer_ratio": [216, 223, 241], "bit_length": [216, 223], "conjug": [216, 223, 241], "denomin": [216, 223], "from_byt": [216, 223], "to_byt": [216, 223], "0x7f1e8c0b3130": 216, "int_list": 216, "0x7f1e8c0fe340": 216, "0x7f1e8c0fe760": 216, "u1": 216, "u2": 216, "type_of_us": 216, "scrambl": 216, "hansj\u00f6rg": [216, 410], "gr\u00f6jsnah": 216, "class_str": 216, "1997": [216, 226, 980, 1044, 1046, 1050, 1052], "0x7f1e8c1c2e50": 216, "joleckmi": 216, "predecessor": [217, 225, 231, 275], "cmdline": 217, "excess": [217, 359], "provocantli": 217, "udemi": [217, 221], "pybai": [217, 1055], "suchzeit": 218, "everywher": [218, 233, 389, 404, 420, 630, 769, 907, 993], "d_as_str": 219, "received_d": 219, "1939": 219, "145415": 219, "bytes_or_buff": [219, 265], "expos": [219, 265, 518, 604, 788, 854, 862, 863, 897], "strict": [219, 239, 265, 425, 439, 446, 460, 475, 526, 710, 1004, 1088], "__contains__": [219, 265], "format_spec": [219, 244, 265], "getattr": [219, 223, 244, 265, 968], "__getitem__": [219, 265, 1079, 1080], "__iter__": [219, 265, 959], "__len__": [219, 265], "casefold": [219, 265], "caseless": [219, 265], "fillchar": [219, 265], "pad": [219, 265, 1000], "occurr": [219, 265, 333], "codec": [219, 226, 229, 265, 271, 1071], "scheme": [219, 265, 542, 950, 954], "unicodeencodeerror": [219, 226, 229, 244, 265, 271, 954, 1071], "xmlcharrefreplac": [219, 265], "register_error": [219, 265], "suffix": [219, 265], "expandtab": [219, 244, 265], "tabsiz": [219, 265], "lowest": [219, 265, 353, 359, 917, 918, 1005], "format_map": [219, 265], "isalnum": [219, 265, 1001], "alphabet": [219, 265, 333, 388, 410, 801, 1071], "isascii": [219, 265], "007f": [219, 265], "isdecim": [219, 265], "iskeyword": [219, 229, 265], "isnumer": [219, 265], "isprint": [219, 265, 333, 361], "printabl": [219, 265, 333, 954], "istitl": [219, 265], "uncas": [219, 265], "pq": [219, 265], "ljust": [219, 265], "removeprefix": [219, 265], "removesuffix": [219, 265], "rindex": [219, 265, 1001], "rpartit": [219, 265], "discard": [219, 265, 392, 538, 539, 676, 799, 800], "splitlin": [219, 265], "keepend": [219, 265], "swapcas": [219, 265], "titlecas": [219, 265], "lookuperror": [219, 244, 265, 954], "untouch": [219, 265, 757], "zfill": [219, 265], "maketran": [219, 265], "usabl": [219, 265, 352, 431, 477, 637, 864], "numerischen": 219, "ecma": 219, "3rd": [219, 716], "interchang": [219, 608, 690, 1071], "marshal": 219, "pickl": [219, 223], "simplejson": 219, "foo": [219, 251, 261, 265, 497, 639, 672, 690, 954, 995], "baz": 219, "u1234": 219, "sort_kei": 219, "getvalu": 219, "compact": [219, 359], "mydict": 219, "obj": [219, 244, 466, 725, 726, 735, 968, 976, 1079, 1080], "x08ar": 219, "as_complex": 219, "dct": 219, "__complex__": 219, "object_hook": 219, "2j": 219, "parse_float": 219, "encode_complex": 219, "serializ": 219, "1j": 219, "jsonencod": 219, "iterencod": 219, "scanner": 219, "jsondecodeerror": 219, "jsondecod": 219, "msg": [219, 232, 344, 429, 433, 921, 923, 924, 928, 950, 953, 954], "unformat": 219, "lineno": [219, 226], "colno": 219, "delattr": [219, 223, 244], "setattr": [219, 223, 244, 968], "__setstate__": [219, 223], "with_traceback": [219, 223], "tb": [219, 223], "__traceback__": [219, 223], "__cause__": [219, 223], "__context__": [219, 223], "__suppress_context__": [219, 223], "parse_int": 219, "parse_const": 219, "object_pairs_hook": 219, "nan": [219, 251, 1060, 1075], "num_str": 219, "_w": 219, "0x7f99fff1bb70": 219, "raw_decod": 219, "extran": 219, "skipkei": 219, "ensure_ascii": 219, "check_circular": 219, "allow_nan": 219, "recogn": [219, 554, 863, 1115], "sensibl": 219, "circular": 219, "recursionerror": [219, 244, 954], "compliant": [219, 967], "item_separ": 219, "key_separ": 219, "_one_shot": 219, "chunk": [219, 301, 389, 751, 889, 1057, 1071], "bigobject": 219, "mysocket": 219, "fp": 219, "inf": 219, "complianc": 219, "ippolito": 219, "redivi": 219, "140299267714496": 219, "140299267930496": 219, "schweissparameter_aussi": 219, "strom_ma": 219, "200004": 219, "spannung_v": 219, "aufs_kabel": 219, "maschine_112": 219, "kabel": [219, 223], "vom_kabel": 219, "schweissparameter_eini": 219, "strom_a": 219, "hal": 219, "2c445fb3": 219, "6ca4": 219, "b9d9": 219, "7cfbbff55326": 219, "doesnt_exist": 219, "_a666": 219, "140299402960464": 219, "0b10000000000000000000000000000000000000000000000000000000000000000": [219, 223, 244, 261], "140299327492352": 219, "func_fals": 219, "func_tru": 219, "sex_opt": 219, "140298898107648": 219, "t_mit_einem_el": 219, "supi": 219, "squares_map": 219, "squares_set": 219, "numtri": 219, "even_numb": 219, "mississppi": 219, "xxxx": 219, "nbin": [219, 226, 251, 265], "ndaemon": [219, 226, 251, 265], "nadm": [219, 226, 251, 265], "nlp": [219, 226, 251, 265], "nsync": [219, 226, 251, 265], "nshutdown": [219, 226, 251, 265], "nhalt": [219, 226, 251, 265], "nmail": [219, 226, 251, 265], "noper": [219, 226, 251, 265], "ngame": [219, 226, 251, 265], "nftp": [219, 226, 251, 265], "nnobodi": [219, 226, 251, 265], "napach": [219, 226, 251, 265], "nsystemd": [219, 226, 251, 265], "ntss": [219, 226, 251, 265], "ndbu": [219, 226, 251, 265], "npolkitd": [219, 226, 251, 265], "navahi": [219, 226, 251, 265], "nunbound": [219, 226, 251, 265], "ndnsmasq": [219, 226, 251, 265], "nnm": [219, 226, 251, 265], "nusbmuxd": [219, 226, 251, 265], "ngluster": [219, 226, 251, 265], "nrtkit": [219, 226, 251, 265], "npipewir": [219, 226, 251, 265], "ngeoclu": [219, 226, 251, 265], "nchroni": [219, 226, 251, 265], "nsaslauth": [219, 226, 251, 265], "nradvd": [219, 226], "nrpc": [219, 226, 251, 265], "nqemu": [219, 226, 251, 265], "nopenvpn": [219, 226, 251, 265], "ncolord": [219, 226, 251, 265, 879], "nrpcuser": [219, 226, 251, 265], "nabrt": [219, 226, 251, 265], "nflatpak": [219, 226, 251, 265], "ngdm": [219, 226, 251, 265], "ngnome": [219, 226, 251, 265], "nvboxadd": [219, 226, 251, 265], "nsshd": [219, 226, 251, 265], "ntcpdump": [219, 226, 251, 265], "njfasch": [219, 226, 251, 265], "nmosquitto": [219, 226, 251, 265], "nsomeon": [219, 226], "1001": [219, 226, 229, 583, 584, 585, 586, 802, 814, 845, 874], "move_to_end": 219, "thermometera": 219, "thermometerb": 219, "get_average_temperatur": 219, "th_list": 219, "avg": [219, 391, 430, 447, 458, 479, 480], "ipykernel_9164": 219, "859664274": 219, "2942790015": 219, "0x7fac83797be0": 219, "basisklass": 219, "level2_1": 219, "l21": 219, "level2_2": 219, "level3": 219, "jedi": 219, "blueey": 219, "droid": 219, "r2d2": 219, "derivednoctor": 219, "dnoctor": 219, "derivedctorcallingsup": 219, "derivedctorcallingbasector": 219, "__firstnam": 219, "__lastnam": 219, "_user__firstnam": 219, "_user__lastnam": 219, "lightsab": 219, "padawan": 219, "arithmeticerror": [219, 244, 954], "waaah": 219, "abgebrannt": 219, "puh": 219, "intakt": 219, "is_even": [219, 223, 643, 644, 645, 646], "0x7fac81f52df0": 219, "0x7fac81cb5700": 219, "progamm": 219, "tumpfback": 219, "och": 219, "umpfback": 219, "rt": [219, 710, 734, 738, 748, 759, 761, 766, 769, 772, 775, 778, 853], "wholefil": 219, "notepad": 220, "betreiben": [220, 1116, 1123, 1124], "unterschiedlichen": 220, "sinnvol": 220, "umgebungen": 220, "unausweichlich": 220, "installationsverzeichni": 220, "verzeichniss": [220, 1118], "ausf\u00fchren": 220, "hernimmt": 220, "erfahrung": [220, 1108], "wei\u00df": 220, "rennt": 220, "ordereddict": 221, "__mro__": 221, "successor": [222, 353], "repeatedli": [222, 583, 1070], "kantenlaeng": 223, "ipykernel_101004": 223, "2437887948": 223, "0x10": [223, 226, 417], "0b1111111111111111111111111111111111111111111111111111111111111111": [223, 244, 261, 265], "1267650600228229401496703205381": 223, "735611673": 223, "ndigit": [223, 244, 332], "0b101": 223, "0b100": [223, 226], "register_statu": 223, "0b1001000": 223, "0b00001000": 223, "strom": 223, "liegt_strom_an": 223, "0b00111110": 223, "ever": [223, 408, 417, 448, 796, 862, 985, 1112], "deadbeef": [223, 481, 856], "gross": 223, "doktor": 223, "jawui": 223, "akademik": 223, "ndef": 223, "tdef": [223, 244], "geh": 223, "hochkomplex": 223, "verendet": 223, "euler": 223, "sche": 223, "dokumentiern": 223, "koennt": 223, "varianc": 223, "fmean": 223, "geometric_mean": 223, "harmonic_mean": 223, "harmon": 223, "median": 223, "median_low": 223, "median_high": 223, "median_group": 223, "50th": 223, "percentil": 223, "multimod": 223, "quantil": 223, "centr": 223, "nearest": [223, 451, 1062], "doctest": 223, "ellipsi": [223, 244], "8333333333": 223, "8333": 223, "spread": 223, "pvarianc": 223, "pstdev": 223, "stdev": [223, 917, 919], "38961843444": 223, "recalcul": 223, "statisticserror": 223, "normaldist": 223, "x1": 223, "unchang": [223, 627, 948], "jointli": 223, "rescal": 223, "cdf": 223, "cumul": [223, 402], "inv_cdf": 223, "invers": [223, 316, 408, 426, 433, 721, 916, 917, 1128], "coeffici": 223, "ovl": 223, "agreement": 223, "densiti": 223, "8035050657330205": 223, "dx": 223, "quartil": 223, "decil": 223, "zscore": 223, "score": 223, "from_sampl": 223, "readonli": 223, "dataset": [223, 1058, 1060, 1076, 1078, 1080, 1082], "subcontrari": 223, "reciproc": 223, "quantiti": [223, 255, 1062], "earn": 223, "5625": 223, "midpoint": 223, "estim": 223, "nomin": 223, "taught": [223, 978, 1117], "aabbbbbbbbcc": 223, "aabbbbccddddeeffffgg": 223, "986893273527251": 223, "0th": 223, "100th": 223, "xbar": 223, "0810874155219827": 223, "3720238095238095": 223, "01875": 223, "gesamter_gruss": 223, "excelsheet": 223, "hinters": 223, "gabali": 223, "helen": 223, "fischer": 223, "sssklndkfgv": 223, "fosvh": 223, "worl": [223, 226, 992], "lowr": 223, "dlrow": [223, 992], "olleh": [223, 992], "even_numbers_fun": 223, "even_numbers_gen": 223, "evennum": 223, "even_filt": 223, "tausend": 223, "1234250497": [223, 226, 229, 232, 428, 435, 587], "1234250597": 223, "users_json_str": 223, "liest": 223, "kontrah": 223, "verwandelt": 223, "gelesenes_ding_wieder_als_dict": 223, "schatz": 223, "erich": 223, "koxi": 223, "hatkeinenwert": 223, "fn": [223, 393, 410, 708, 1082], "ul": [223, 347], "ln": [223, 393], "1st": [224, 1101], "einschub": 224, "filterketten": 224, "datensatz": 224, "letzten": 224, "recapitul": 225, "naeherungsverfahren": 226, "addieren": 226, "140606563548752": 226, "wirklich": [226, 1107], "0o10": 226, "teilbar": 226, "00001": 226, "abd": [226, 553], "i1": [226, 261], "140606428182128": 226, "140606428182896": 226, "2345010101": 226, "elizabeth": [226, 1044, 1046, 1050, 1052, 1066], "1901": 226, "evi": 226, "maxim": [226, 408, 863], "wuerfeln": 226, "freuen": 226, "sechser": 226, "faellt": 226, "jammern": 226, "versuch_numm": 226, "versuchen": 226, "jammert": 226, "hlo": [226, 992], "output_list": [226, 1037], "nullt": 226, "34567654567": 226, "gsd": 226, "another_t": 226, "symmetisch": 226, "netzwerkkommunik": 226, "request_to_send": 226, "request_str_to_send": 226, "1651046407": 226, "3633313": 226, "cabl": [226, 788], "request_str_from_c": 226, "request_from_c": 226, "1651046335": 226, "8477345": 226, "139909434561408": 226, "139909544402512": 226, "139909544402544": 226, "139909543772528": 226, "139909433666288": 226, "roo": [226, 265, 848], "xf6": [226, 229, 271, 986, 1071], "joerg_latin": 226, "xf6rg": [226, 229, 271, 1071], "j\u0456rg": [226, 229, 271, 1071], "cyclic": 228, "140616191009600": 229, "140616191012720": 229, "140116274372176": 229, "0x7f6f5cc2de50": 229, "0x7f6f5cc2df30": 229, "18446744073709551617": 229, "multi_dict": 229, "ipykernel_189565": 229, "1743780635": 229, "140115753096128": 229, "ntri": 229, "bytes_joerg": 229, "bytes_joerg_iso_latin_1": 229, "bytes_joerg_utf_32": 229, "xff": [229, 271], "xfe": [229, 271], "x00": [229, 271, 861], "x00j": [229, 271], "x00r": [229, 271], "x00g": [229, 271], "bytes_joerg_utf_16": 229, "xfej": 229, "bytes_joerg_utf_8": 229, "xc3": [229, 265, 271, 986, 1071], "xb6rg": [229, 265, 271, 1071], "iso_latin_1": 229, "russian": 229, "bytes_received_by_russian": 229, "2435": 229, "010d": 229, "0000000666": 229, "ssi": 229, "garbag": [229, 403, 410, 426, 685, 697, 863, 890, 952, 1064], "ipykernel_4000": 229, "3227798639": 229, "ahja": 229, "24000": 229, "24500": 229, "25000": 229, "25500": 229, "26000": 229, "26500": 229, "__del__": 229, "whe": 229, "13397": 229, "116985": 229, "120725": 229, "118110": 229, "0x7fe3a392aa30": 229, "test_person_bas": 231, "pluggi": [231, 249, 1043, 1092], "rootdir": [231, 249, 757, 1043, 1092], "test_persondb_bas": 231, "test_pytest_demo": 231, "xfail": [231, 1092], "test_persondb": 231, "test_duplicate_svnr": 231, "test_update_sunnycas": 231, "test_update_notexist": 231, "test_update_exact_dupl": 231, "former": [231, 995], "persondb": 231, "sqlite": [231, 414, 1011, 1067], "ics_demand": 231, "maco": [231, 301, 306], "woe": 231, "homebrew": 231, "brew": 231, "flaviocop": 231, "str_mit_666": 232, "140240419976192": 232, "140240419593568": 232, "aclass": 232, "almostempti": 232, "beenther": 232, "kuckucksei": 232, "chirp": 232, "some_bullshit": 232, "bad_thing_happen": 232, "do_some_bullshit": 232, "boah": 232, "python_cod": 232, "a_global_vari": 232, "globale_vari": 232, "140240513015376": 232, "140240513014256": 232, "140240419270768": 232, "140240419271792": 232, "storesanintegerandmodifiesit": 232, "the_int": 232, "my_int": 232, "saiami": 232, "storesalistandmodifiesit": 232, "the_list": 232, "append_someth": 232, "salami": 232, "compute_squar": 232, "satanicerror": 232, "jess": 232, "invalidsvnr": 232, "rex_lin": 232, "json_str": [232, 1051], "python_l": 232, "0x7f8c0551f490": 232, "behandlung": 234, "kurzer": 234, "reicht": [234, 1107], "unwichtig": 234, "weggelassen": 234, "\u00fc": [234, 1071], "jeden": 234, "teilnehmer\u00fcbung": 234, "kernsprach": 234, "rvalu": [234, 256, 282, 529, 634, 666, 676, 682, 685, 686, 687, 688, 691, 699, 707, 709, 710, 1111, 1112, 1113], "constexpr": [234, 235, 236, 256, 258, 666, 676, 700, 709, 710, 1112], "uniform": [234, 235, 236, 238, 282, 408, 428, 530, 562, 582, 583, 626, 666, 675, 707, 709, 710, 967, 1112], "initialisierung": [234, 1128], "infer": 234, "speichermodel": 234, "atomar": [234, 1110, 1128], "standardbibliothek": 234, "regu\u00e4r": 234, "trait": [234, 282], "zufallszahlen": 234, "zeitbibliothek": 234, "sprachsyntax": 234, "deduct": [234, 641, 643], "erweiterungen": 234, "ge\u00e4ndert": 234, "definitionen": 234, "bibliothek": 234, "zusatzvari": 234, "constinit": 234, "modularisierung": [234, 302, 1109], "versionierung": 234, "routinen": 234, "synchronisierung": 234, "werkzeug": [234, 1109, 1116, 1118, 1123, 1126], "kalend": [234, 1106], "zeitzonen": 234, "zus\u00e4tz": 234, "chrono": [234, 235, 236, 238, 247, 282, 433, 626, 687, 698, 699, 703, 709, 710], "initializer_list": [235, 236, 238, 282, 429, 430, 457, 458, 626, 628, 666, 709, 710], "handwrit": [235, 236, 238, 282, 666, 682, 709, 710], "weak_ptr": [235, 236, 238, 282, 682, 707, 709, 710], "boilerpl": [235, 236, 238, 274, 282, 415, 666, 667, 668, 686, 709, 710, 933, 1108], "condition_vari": [235, 236, 238, 247, 282, 699, 709, 710, 1112], "emplace_back": [235, 236, 562], "cref": [235, 236], "interoper": [236, 238, 256, 258], "wazoo": [236, 238, 256, 258], "anviron": [236, 238], "submodul": [236, 238, 478, 546], "chdir": [236, 238], "gtest_main": [236, 433, 477, 480, 481, 505, 508, 520, 546, 684, 685, 1098, 1103], "dummy_suit": 236, "sticki": [237, 246, 247, 267, 268, 301, 306, 710, 787, 812, 853], "insod": 238, "lvalu": [238, 634, 635, 638, 666, 676, 682, 686, 691, 699, 707, 709, 710], "afterword": [238, 635, 666, 709, 710], "ain": [238, 408, 982], "singleton": [239, 425, 426, 432, 446, 460, 475, 526, 710, 1115], "inflex": [239, 328, 425, 439, 446, 452, 453, 460, 475, 526, 710], "flexibl": [239, 419, 425, 439, 446, 460, 475, 526, 572, 710, 900, 915, 931, 932, 933, 948, 949, 1000, 1107], "proxi": [239, 257, 259, 260, 278, 279, 307, 425, 432, 434, 435, 446, 460, 475, 526, 710, 1087, 1115], "serverthread": [239, 450, 464], "heat": [239, 425, 432, 476, 481, 710, 863, 1059, 1060], "my_si": [241, 962], "function_returns_two_valu": 241, "140134238766608": 241, "sizeof": [241, 332, 342, 353, 374, 381, 382, 386, 389, 509, 521, 533, 561, 627, 689, 857, 875, 879, 880, 881, 887, 888, 889, 890, 915, 921, 924, 928, 994], "__getformat__": 241, "__setformat__": 241, "fromhex": 241, "0b0010": 241, "0b1001": 241, "key_list": 241, "key_tupl": 241, "evil_list": 241, "evil_list_2": 241, "neinem": 241, "nviel": 241, "doze_path": [241, 244], "compiled_regex": 241, "l_json": 241, "l_json_sent": 241, "received_data": 241, "0x7f73869f06c0": 241, "create_avg_item": 241, "sensor1": [241, 433], "ninetynin": 241, "koppel": 243, "netzwerk": [243, 302, 1116, 1126, 1129], "condens": [243, 409], "nprint": 244, "noption": 244, "nfile": 244, "nsep": 244, "nend": 244, "nflush": 244, "forcibli": 244, "didact": [244, 319, 322, 545, 547, 548, 1115], "fullnam": [244, 251, 275, 971, 975], "nerst": 244, "nzweit": [244, 296], "andere_list": 244, "neue_list": 244, "140323934455312": 244, "140323934455344": 244, "140323934455376": 244, "140323852147712": 244, "140323933649904": 244, "140323833601584": 244, "frozenset": [244, 261], "__builtins__": [244, 265, 955], "gr\u00fc\u00df": 244, "nocheinprogramm": 244, "ocheinprogramm": 244, "dfghgfdfghj": 244, "jhghgh": 244, "matchstr": 244, "compiled_match": 244, "tprint": 244, "num_ss": 244, "isi": [244, 486, 502, 1075], "strippeditem": 244, "yet_another_d": 244, "s3": [244, 251, 447], "s4": 244, "isdisjoint": [244, 251, 1004], "nnoteworthi": 244, "nil": 244, "__package__": [244, 294, 955], "__loader__": [244, 294, 955], "__spec__": [244, 294, 955], "modulespec": 244, "loader": [244, 398, 416, 421, 931, 948, 1126], "__build_class__": 244, "__import__": 244, "dont_inherit": 244, "_feature_vers": 244, "divmod": 244, "raw_input": 244, "ipkernel": 244, "ipythonkernel": 244, "0x7f9fb16abcd0": 244, "class_or_tupl": 244, "aiter": 244, "async_iter": 244, "anext": 244, "oct": [244, 839, 861, 863], "pow": [244, 538, 539, 689], "exp": [244, 462], "notimpl": [244, 974], "memoryview": 244, "__debug__": 244, "stopasynciter": [244, 954], "generatorexit": [244, 954], "keyboardinterrupt": [244, 260, 279, 954], "importerror": [244, 954], "environmenterror": [244, 1087], "ioerror": [244, 1093], "eoferror": [244, 954], "notimplementederror": [244, 954], "unboundlocalerror": [244, 954], "indentationerror": [244, 954], "taberror": [244, 954], "unicodeerror": [244, 954], "unicodedecodeerror": [244, 954], "unicodetranslateerror": [244, 954], "floatingpointerror": [244, 954], "overflowerror": [244, 954], "systemerror": [244, 954], "referenceerror": [244, 954], "memoryerror": [244, 954], "buffererror": [244, 954], "userwarn": [244, 954], "encodingwarn": [244, 954], "deprecationwarn": [244, 954], "pendingdeprecationwarn": [244, 954], "syntaxwarn": [244, 954], "runtimewarn": [244, 954], "futurewarn": [244, 954, 1075], "importwarn": [244, 954], "unicodewarn": [244, 954], "byteswarn": [244, 954], "resourcewarn": [244, 954], "connectionerror": [244, 954], "blockingioerror": [244, 954], "brokenpipeerror": [244, 954], "childprocesserror": [244, 954], "connectionabortederror": [244, 954], "connectionrefusederror": [244, 954], "connectionreseterror": [244, 954], "fileexistserror": [244, 954], "isadirectoryerror": [244, 954], "notadirectoryerror": [244, 954], "interruptederror": [244, 954], "processlookuperror": [244, 954], "timeouterror": [244, 954], "closefd": 244, "beopen": 244, "1995": [244, 436, 1044, 1046, 1050, 1052], "nation": [244, 861], "1991": [244, 980], "sticht": 244, "centrum": 244, "amsterdam": [244, 980], "credit": [244, 728, 981], "cwi": 244, "cnri": 244, "zope": 244, "cast": [244, 353, 509, 597, 604, 716], "execfil": 244, "_pydev_imp": 244, "_pydev_execfil": 244, "glob": [244, 385, 845, 902, 950, 965, 1099], "runfil": 244, "_pydev_bundl": 244, "pydev_umd": 244, "wdir": 244, "__ipython__": 244, "exclud": [244, 404, 531], "transient": 244, "display_id": 244, "get_ipython": 244, "interactiveshel": 244, "zmqshell": 244, "zmqinteractiveshel": 244, "0x7f9fb1516200": 244, "config_fil": 244, "srcdir": 244, "dstdir": 244, "dst": [244, 348, 398, 486, 528, 547, 556, 557, 563, 1005], "untrust": 247, "lan": 247, "programmat": [247, 454, 854, 862, 910, 930, 1083], "stty": 247, "termio": 247, "ioctl_tti": 247, "setseri": 247, "tty": [247, 788, 843, 915, 921, 945], "tty_io": 247, "bidirection": 247, "nake": 247, "tiocgseri": 247, "tiocsseri": 247, "async_low_lat": 247, "cfmakeraw": 247, "ttyusb0": [247, 788], "low_lat": 247, "serial_struct": 247, "bidir": 247, "advantec": 247, "nonetheless": [247, 250, 253, 643, 1099], "mycat": 247, "mimick": [247, 684], "pwm": [247, 256, 710, 757, 853, 854, 860, 897, 1116, 1123], "pca9685": [247, 710, 853, 854, 860], "make_realtim": 247, "interfaceri": 247, "cif": 247, "samba": 247, "automationadmin": 247, "gsc": 247, "pd": [248, 249, 251, 255, 410, 1058, 1060, 1075, 1076, 1077, 1079, 1080, 1081, 1082], "read_csv": [248, 249, 255, 410, 1058, 1060], "txn": 248, "iso8859": 248, "time_book": [248, 249, 410], "time_valuta": [248, 249, 410], "at66666666666666": 248, "bezahlung": [248, 249, 251, 410], "kart": [248, 249, 251, 410], "eur": [248, 249, 410], "95111243": [248, 410], "abbuchung": [248, 410], "onlinebank": [248, 410], "gutschrift": 248, "000000144919": 248, "339099446722187": 248, "000": [248, 410, 816, 854], "card_pay": 248, "filt": 248, "9325008697": 248, "339099446790254": 248, "og": [248, 398], "237811001182": 248, "auszahlung": 248, "200075787001": 248, "tzb": 248, "anl": 248, "347159strom": 248, "200004871820": 248, "200004876265": 248, "200004848862": 248, "200004871863": 248, "dauerauftrag": 248, "qsnng6xau": 248, "00121672661": 248, "120016487112": [248, 410], "bx": 248, "000009219": 248, "entgelt": 248, "nichtdurchf\u00fchrung": 248, "032300005522384": 248, "saldo": 248, "messtechnik": 248, "602674240071": 248, "0004325259000023": 248, "oeamtc": 248, "mitgliedschaft": 248, "re_liv": 248, "billa": [248, 251, 410], "rew": 248, "dankt": [248, 249, 251, 410], "pipe_stag": 249, "max_colwidth": 249, "max_column": 249, "max_row": 249, "039": 249, "consolut": 249, "insuffici": [249, 640], "categor": [249, 409, 1062], "fuction": 249, "filt_uncat": 249, "uncat_row": 249, "unspecif": [249, 312, 735], "useless": [249, 634, 692, 801, 848, 904, 976], "food": [249, 255], "luxuri": 249, "categorize_card_pay": 249, "jet": 249, "uncertainti": 249, "categorize_v1": 249, "categorize_v2": 249, "secondari": 249, "test_categori": [249, 410], "test_bas": [249, 1043], "000009258": 249, "k002": [249, 410], "impos": [250, 253], "hurt": [250, 253, 347], "strength": [250, 253, 374, 978], "overengin": [250, 253, 347, 408, 409, 1107, 1115], "140480285361680": 251, "0xffffffffffffffff": [251, 271], "0x10000000000000000": [251, 271], "140479638276224": 251, "140480203220736": 251, "140480210406176": 251, "7940943354778932823": 251, "0x7fc4189e7c90": 251, "28800": 251, "237988": 251, "produce_dai": 251, "374557": 251, "l_mal_2": 251, "140480285361712": 251, "140479638477760": 251, "140479638427520": 251, "l4": 251, "l5": 251, "140480202528192": 251, "140479638428736": 251, "140480203212992": 251, "l6": 251, "140479598069936": 251, "is_old": 251, "ipykernel_370861": 251, "4290492544": 251, "abc123": 251, "0x7fc4189e5030": 251, "yyi": 251, "lichtenberg": [251, 428, 587, 619, 621, 1044, 1046, 1050, 1052, 1075, 1076, 1077, 1079, 1080, 1081, 1082], "persons2": [251, 1075, 1076], "set_index": [251, 1080], "sort_valu": 251, "inplac": [251, 255, 870, 1076], "flt": [251, 1077], "isin": [251, 1077], "reset_index": 251, "dropna": 251, "value_count": [251, 255], "int64": [251, 255, 1082], "conversiosn": 252, "9am": 253, "woven": [253, 257], "pipelin": [253, 319, 782, 797, 800, 801, 850, 864, 943], "accountid": 255, "accountdescript": 255, "accountparentid": 255, "storeid": 255, "storedescript": 255, "locationid": 255, "locationdescript": 255, "productid": 255, "productdescript": 255, "sales_managerid": 255, "dateyear": 255, "datequart": 255, "datemonth": 255, "datedai": 255, "categoryvers": 255, "categorycategori": 255, "categorytyp": 255, "valueunit": 255, "original_sales_pric": 255, "sale": 255, "st43": 255, "franchescini": 255, "ct14": 255, "salem": 255, "pd23": 255, "ipa": 255, "sm1": 255, "20144": 255, "201412": 255, "1779": 255, "763910": 255, "usd": 255, "st35": 255, "pd2": 255, "pepsi": 255, "sm4": 255, "201410": 255, "957113": 255, "st98": 255, "walter": 255, "pd24": 255, "amber": 255, "20142": 255, "201406": 255, "449395": 255, "st188": 255, "arrowhead": 255, "ct1": 255, "pd19": 255, "sm8": 255, "20164": 255, "201611": 255, "078689": 255, "st107": 255, "spire": 255, "ct5": 255, "san": 255, "jose": 255, "pd15": 255, "juic": 255, "sm5": 255, "20154": 255, "201512": 255, "303679": 255, "quantity_sold": 255, "sold": 255, "st4": 255, "gstore": 255, "ct13": 255, "portland": 255, "pd26": 255, "wine": 255, "000000": [255, 1060], "1069": 255, "st49": 255, "bai": 255, "depot": 255, "ct4": 255, "sacramento": 255, "pd27": 255, "20151": 255, "201501": 255, "592904": 255, "discount": 255, "st36": 255, "pricelow": 255, "arena": 255, "ct10": 255, "reno": 255, "pd22": 255, "sm3": 255, "20162": 255, "201605": 255, "4351": 255, "045830": 255, "1071": 255, "st7": 255, "street": [255, 823], "pd16": 255, "7905": 255, "590606": 255, "pd12": 255, "lemonad": 255, "20153": 255, "201507": 255, "1073": 255, "modified_model": 255, "sales_managerdescript": 255, "janet": 255, "buri": 255, "nanci": 255, "miller": 255, "setp": 255, "nan_field": 255, "bitfield": 255, "bitfi": 255, "nan_column": 255, "gabriel": [255, 672], "walton": 255, "carl": 255, "jjjjj": 255, "ref_t": 255, "datetime64": 255, "damn": 255, "ref_2015_12_04": 255, "flt_before_2015_12_04": 255, "rows_before_2015_12_04": 255, "st119": 255, "ct2": 255, "francisco": 255, "pd11": 255, "orang": [255, 997], "pulp": 255, "sm7": 255, "kiran": 255, "raj": 255, "201503": 255, "226847": 255, "13627": 255, "793342": 255, "3427": 255, "896898": 255, "15569": 255, "353983": 255, "float64": [255, 1060], "1957": 255, "740301": 255, "572676": 255, "686587": 255, "289381": 255, "flt_product_pd2": 255, "flt_2015": 255, "flt_only_sold": 255, "flt_combin": 255, "st139": 255, "farlo": 255, "ct15": 255, "eugen": 255, "sm11": 255, "jame": 255, "frank": 255, "201511": 255, "st178": 255, "rai": 255, "ct8": 255, "beverli": 255, "hill": 255, "201508": 255, "facet": [256, 258, 582], "rich": [256, 258, 1076, 1086], "toolset": [256, 258, 600], "conceptu": [256, 258, 399, 728, 735, 873], "undergon": [256, 258], "revolut": [256, 258], "odr": [256, 672], "explor": [256, 862], "rodata": [256, 948], "unspecifi": [256, 353, 440, 512, 928, 929], "bookkeep": [257, 409], "fewer": 257, "love": [257, 1050], "closer": 257, "augment": [257, 757, 1072], "test_blah": 257, "monkeypatch": [257, 259, 260, 275, 278, 279], "contextlib": [257, 1063, 1064, 1065], "chatgpt": 258, "ludwig": 258, "registri": [258, 492], "memleak": 258, "jason": [259, 260, 278, 279], "brownle": [259, 260, 278, 279], "contriv": [259, 260, 278, 279, 431, 955, 990], "subthread": [259, 260, 279], "introductori": [259, 260, 278, 279, 710, 853, 894, 1061, 1062, 1112], "sink": [259, 260, 275, 278, 279], "mindset": [259, 260, 278, 279, 757], "develp": 259, "logger": [260, 279, 690], "datalogg": [260, 279], "10am": [260, 279], "reopen": [260, 279], "drei_millionen_int": 261, "3_000_000": 261, "odd_numb": [261, 959], "odd_numbers_func": 261, "ret_num": 261, "0x7f32ccc4c610": 261, "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000": [261, 296], "139855258515840": 261, "139856078033344": 261, "139856078226432": 261, "139856160540176": 261, "i3": 261, "i4": 261, "nope": [261, 910], "0101010101010": 261, "bash_logout": [261, 839], "bash_profil": [261, 839], "thunderbird": [261, 819, 839], "gnupg": [261, 839], "hst": 261, "gitconfig": [261, 839], "pki": [261, 839], "mplayer": 261, "daham": 261, "20230403": 261, "222915": 261, "bash_histori": [261, 839], "python_histori": [261, 839], "lesshst": [261, 839], "139855258795072": 261, "139855260513728": 261, "139856085569920": 261, "doppelt": 261, "gemoppelt": 261, "trag": 261, "exakt": 261, "paarweis": 261, "read_lines_of_fil": 261, "0x7f32c7d8d390": 261, "nohead": [264, 1049, 1050, 1052], "userdb_csv": [264, 1050, 1051, 1052], "interleav": 264, "dosometh": 265, "0x7fe7fbf80df0": 265, "140634424624656": 265, "140634424623536": 265, "0o644": 265, "0b01110101": 265, "setting_blah": 265, "setting_foo": 265, "config_context": 265, "140634341074320": 265, "140634424624688": 265, "140634341076688": 265, "140634341077776": 265, "140634343012864": 265, "140634341099856": 265, "ipykernel_61373": 265, "1125713270": 265, "1234567876543234567654321234565432123456": 265, "140634281233520": 265, "140634341798400": 265, "140634341995008": 265, "140634341576640": 265, "140634341773312": 265, "140634281802304": 265, "global_vari": 265, "bar2": 265, "bar3": 265, "bar4": 265, "bar5": 265, "bar6": 265, "0x7fe7f869b7d0": 265, "0x7fe7f869b920": 265, "0x7fe7f869bbc0": 265, "punctuat": 265, "abcabcabcabcabc": 265, "rex": 265, "cba": [265, 591], "another_d": 265, "rb": 265, "30000": 265, "coreutil": 268, "autopoint": 268, "rpm": [268, 421], "fcntl": [268, 861, 879, 883, 887, 888, 889, 890, 895, 898, 921, 924, 928], "luciano": [270, 302, 303, 1055], "ramalho": [270, 302, 303, 1055], "140640823526928": 271, "0x7fe97e53c610": 271, "140640823526960": 271, "140640741310912": 271, "140640741034048": 271, "140640741341184": 271, "wasjetzt": 271, "140640722624768": 271, "140640722715136": 271, "l1_copi": 271, "my_funky_gener": 271, "meine_dumme_sequenz": 271, "0x7fe9785083a0": 271, "0x7fe98c21bce0": 271, "greeter": [271, 412, 413, 414, 418, 419, 947], "0x7fe9796976d0": 271, "140640740502720": 271, "140640722823952": 271, "140640741119552": 271, "l_copi": 271, "140640741312256": 271, "140640722734080": 271, "140640722760768": 271, "140640722739712": 271, "140640741402496": 271, "owher": 271, "0000042": [271, 1000], "bled": 271, "xfc": [271, 986, 1071], "xdfe": [271, 1071], "gr\u045c\u043fe": [271, 1071], "\u795d\u597d": 271, "big5": [271, 1071], "xaf": 271, "xac": 271, "xa6n": 271, "unterschrift": 271, "illeg": [271, 390, 1071], "multibyt": [271, 336, 1071], "xe7": [271, 1071], "xa5": [271, 1071], "x9d": [271, 1071], "xe5": [271, 1071], "xbd": [271, 1071], "incorpor": [273, 1114], "tradition": [273, 676, 856, 977, 1114], "lexer": [273, 1114], "aris": [273, 439, 1114], "compili": [273, 1114], "rant": [274, 415, 710, 1081], "blacklist": [274, 414, 415, 420, 423, 710], "broader": 282, "nodiscard": 282, "fallthrough": [282, 928], "noexcept": [282, 429, 463, 634, 637, 639, 654, 656, 657, 659, 660, 661, 662, 676, 686, 700], "string_view": 282, "commmandlin": 286, "omg": [286, 368, 716, 1093], "checker": [287, 292, 301], "horribl": 287, "gpio25": [287, 858], "embarass": 287, "winscp": 287, "cluster_ece19": [287, 288, 289, 290, 291, 292, 301, 710], "ece19": [287, 288, 289, 290, 292, 300, 301, 307, 308, 312, 710], "ece19_file_read": [287, 288, 289, 290, 291, 292, 301, 710], "ece19_blinklicht": [287, 288, 289, 290, 291, 301, 710], "ece19_blinklicht_oo": [288, 289, 290, 291, 301, 710], "ece19_blinklicht_abc": [290, 291, 301, 710], "ece19_blinklicht_unittest": [290, 291, 301, 710], "blinklicht": [291, 301, 306, 710], "1910420003": [292, 293], "corinna": [292, 293], "baumgartn": [292, 293, 310], "1910420002": [292, 293], "anzhelika": [292, 293, 301], "chernykh": [292, 293, 301, 310], "1910420005": [292, 293], "simon": [292, 293], "1910420006": [292, 293], "matthia": [292, 293, 310], "kappel": [292, 293, 310], "1810420009": [292, 293], "kolter": [292, 293], "1920420033": [292, 293], "kornberg": [292, 293, 310, 313], "1910420007": [292, 293], "lui": [292, 293, 310], "kraker": [292, 293, 310, 313], "1810420010": [292, 293], "leonid": [292, 293], "kudriaschov": [292, 293], "1910420008": [292, 293], "michael": [292, 293, 302, 303], "1910420010": [292, 293], "sonja": [292, 293, 310], "luka": [292, 293, 310, 313], "1910420013": [292, 293], "behnaz": [292, 293], "mehrabadi": [292, 293, 310], "1910420014": [292, 293], "moser": [292, 293, 310], "1910420015": [292, 293], "moritz": [292, 293], "nagelschmi": [292, 293, 310], "1910420018": [292, 293], "bianca": [292, 293], "reimer": [292, 293], "1910420020": [292, 293], "schmid": [292, 293, 310], "1910420021": [292, 293], "sch\u00fcttler": [292, 293], "1910420022": [292, 293], "schweiger": [292, 293, 310], "1910420024": [292, 293], "sinabel": [292, 293], "1910420025": [292, 293], "slovik": [292, 293, 310], "1910420026": [292, 293], "s\u00f6l": [292, 293, 310], "1910420027": [292, 293], "stangl": [292, 293, 310], "1910420028": [292, 293], "felix": [292, 293, 310], "themessl": [292, 293, 310], "1920420035": [292, 293], "astrid": [292, 293], "vogel": [292, 293, 310], "1810420029": [292, 293], "florian": [292, 293, 310], "zwittnigg": [292, 293], "matricul": [292, 955], "studentdb": 292, "greatli": [292, 394, 1112], "matnr": 292, "rid": [292, 392, 433, 759, 776], "zuweisung": 293, "n1910420002": 293, "n1910420005": 293, "n1910420006": 293, "n1810420009": 293, "n1920420033": 293, "n1910420007": 293, "n1810420010": 293, "n1910420008": 293, "n1910420010": 293, "n1910420013": 293, "n1910420014": 293, "n1910420015": 293, "n1910420018": 293, "n1910420020": 293, "n1910420021": 293, "n1910420022": 293, "n1910420024": 293, "n1910420025": 293, "n1910420026": 293, "n1910420027": 293, "n1910420028": 293, "n1920420035": 293, "n1810420029": 293, "n666": 293, "5g": 293, "n19": 293, "10420013": 293, "n181": 293, "0420029": 293, "20210324": 294, "orig_si": 294, "__interactivehook__": 294, "_base_execut": 294, "_clear_type_cach": 294, "_current_fram": 294, "_debugmallocstat": 294, "_framework": 294, "_getfram": 294, "_git": 294, "_home": 294, "_xoption": 294, "flo": 295, "ted": 295, "rainer": 295, "rg": 295, "some_numb": [296, 983], "auszuspucken": 296, "eine_neue_vari": 296, "klassisch": 296, "140705292246608": 296, "register_cont": 296, "0b11010001110101000": 296, "107432": 296, "erzwungen": 296, "0x1249ad2594c37ceb0b2784c4ce0bf38ace408e211a7caab24308a82e8f10000000000000000000000000": 296, "groesst": 296, "darstellbar": 296, "dos_path": 296, "ein_string_der_aussieht_wie_ein_integ": 296, "ein_integ": 296, "ver\u00e4ndernd": 296, "say_hello": [297, 972], "333333333333336": 297, "disclos": [298, 870], "formalit\u00e4ten": 300, "summer": [300, 301, 307], "daili": [300, 800], "organiz": 301, "shortcut": [301, 378, 817, 849, 986, 1118], "baustein": [301, 306], "navigieren": [301, 306], "sitzen": [301, 306], "nat\u00fcrlich": [301, 306, 319, 1106], "verstehen": [301, 306, 319, 1119], "pr\u00fcfung": [301, 306], "trocken": [301, 306], "pfade": [301, 306, 1107, 1118], "symbolisch": [301, 306, 844], "verschieben": [301, 306], "textfil": [301, 306], "113ff": [301, 306], "ansatzweis": [301, 306], "durchgegangen": [301, 306], "133ff": [301, 306], "durchgemacht": [301, 306], "wirkungsweis": [301, 306], "verstanden": [301, 306, 1109], "verkn\u00fcpfen": [301, 306], "aufw\u00e4rmen": 301, "fremden": 301, "fragerund": 301, "tire": [301, 306], "transact": [301, 306], "wertebereich": 301, "vpn": [301, 864], "gitlab": 301, "sidenot": 301, "stackoverflow": [301, 306, 384], "swoop": [301, 427], "hashbang": 301, "student1": 301, "student2": 301, "student3": 301, "undescript": 301, "contribut": [301, 931], "crlf": 301, "bang": [301, 421], "trial": [301, 934, 943, 1062], "relationship": [301, 440, 474, 515, 597, 690, 900, 933, 947, 963, 967, 1061], "systemkonzept": [302, 319, 1125], "adressr\u00e4um": [302, 319, 1116], "ger\u00e4t": 302, "destruktoren": [302, 1111], "containertempl": 302, "ausz\u00fcg": 302, "labor\u00fcbungen": 302, "absolventinnen": 302, "absolventen": 302, "entwicklungsplatform": 302, "zielplattform": [302, 1111], "dortigen": 302, "betriebssystemkonzept": [302, 1116, 1123], "verinnerlichen": 302, "eckpfeil": [302, 1111], "ansteuern": 302, "merkmal": 302, "nichttrivial": 302, "kerrisk": [302, 303], "handbook": [302, 303], "corbet": [302, 303, 1107], "allessandro": [302, 303], "rubini": [302, 303], "greg": [302, 303], "kroah": [302, 303], "hartman": [302, 303], "richard": [302, 303, 931], "steven": [302, 303, 398], "stephen": [302, 303], "rago": [302, 303], "brian": [302, 303, 322, 1109], "cookbook": [302, 303, 1099], "lutz": [302, 303], "integriert": 302, "\u00fcbungsanteil": 302, "informatik": 302, "einzelpr\u00fcfung": 302, "schriftlich": 302, "vorlesung": 302, "graduat": 303, "copver": 303, "warm": 304, "briefli": [305, 854], "filethermomet": 305, "ue": 307, "arduino": [307, 309, 854, 862, 1074], "homedirectori": [307, 845], "vbox": 307, "subnet": 307, "announc": [308, 419, 420, 597, 861, 862], "mgmt": 308, "64ff": 308, "readdir": [308, 708], "ow": [308, 452, 453, 454, 466, 467, 468], "readlink": 308, "tracker": [309, 310], "thermometers_docu": 309, "toctre": 309, "execconfig": 309, "wacom": [309, 371, 372], "schuettler": 310, "acquir": [310, 700, 762, 904, 909, 918], "zwittnig": 310, "simu": 310, "kudriaschow": 310, "hysteres": 310, "impl": 310, "marku": 310, "stepper": 310, "motor": [310, 710, 853, 860], "wasserfal": 310, "influxdb": 310, "grafana": 310, "hysteresi": [310, 476], "nachmittag": 310, "multitask": [311, 316, 699, 709, 710, 853, 894, 908, 914, 916, 917, 919, 1123], "latenc": [312, 316, 700, 710, 755, 853, 894, 914, 916], "gotcha": [312, 316, 710, 853, 874, 894, 914, 916, 924], "type_from_ini": 312, "ece19error": 312, "configfil": [312, 955], "prettier": [312, 543], "support_address": 312, "invalidtypeerror": 312, "newcom": [314, 315], "individualtrain": 318, "baden": 318, "w\u00fcrttemberg": 318, "beginnend": 318, "kursnotizen": 318, "qualivis": 318, "logbuch": 319, "kursteilnehmern": 319, "zustandegekommen": 319, "zukommen": 319, "potentiellen": 319, "zuk\u00fcnftigen": 319, "eindruck": [319, 1106], "zukommt": 319, "publizieren": 319, "einverst\u00e4ndni": 319, "richtlinien": 319, "thalheim": 319, "mixtur": [319, 562], "gr\u00e4felf": 319, "wel": 319, "regensburg": 319, "pr\u00e4sent": 319, "inhous": [319, 1057, 1106], "linuxcampu": 319, "sch\u00f6nen": 319, "teilnehmern": [319, 1130], "aktiv": 319, "mitgestaltet": 319, "kursabschluss": 319, "dran": 319, "provok": 319, "kam": 319, "anmeldung": 319, "zustand": 319, "freiheiten": 319, "gestanden": 319, "zusatzaufgab": 319, "gef\u00fchrt": [319, 1106], "einschr\u00e4nkungen": [319, 1124], "eintagesworkshop": 319, "leuten": 319, "kenn": 319, "einhergehend": 319, "l\u00f6sungen": [319, 1106, 1107], "darauffolgend": 319, "vertiefen": 319, "ausgew\u00e4hlten": 319, "bereichen": 319, "dbapi2": [319, 1070], "objektorientierung": 319, "r\u00e4umen": 319, "zweit\u00e4gig": 319, "gemisch": 319, "kursen": 319, "ziemlich": 319, "eingemacht": 319, "bestellt": 319, "neugier": 319, "leichtfertig": 319, "tief": 319, "hinabgestiegen": 319, "feiner": 319, "internen": 319, "forschungsprojekt": 319, "gebracht": 319, "diesen": [319, 1126], "zusammenschnitt": 319, "workshopcharakt": [319, 1130], "angegraut": 319, "bewusst": [319, 1128], "verwendung": 319, "wunderbar": 319, "automatisieren": 319, "zurerst": 319, "shellbenutzung": 319, "betriebssystemen": [319, 1118, 1123, 1125], "angeordnet": 319, "ge\u00fcbt": 319, "herk\u00f6mmlichen": [319, 1111], "auffrischung": 319, "eingerostet": 319, "neuigkeiten": 319, "align": [319, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710, 855, 857, 924, 1000, 1110, 1113], "querbeet": 319, "aufbauend": 319, "zuvor": 319, "grundkur": 319, "wichtigsten": 319, "neuerungen": [319, 1111], "tobak": 319, "lieblingsschulungen": 319, "basiswissen": 319, "hoeri": 319, "bastelwoch": 319, "betrachtung": 319, "realtimef\u00e4higkeit": 319, "xenomai": [319, 1107], "fad": 319, "auszugsweis": 319, "richtig": [319, 1126], "n\u00e4chten": 319, "schulungstagen": 319, "kurzweil": 319, "beschert": 319, "einf\u00fchrungscharakt": 319, "kernelprogrammierung": 319, "auftrag": 319, "hardwarenah": [319, 1116, 1123], "ausgew\u00e4ht": 319, "kernelstruktur": 319, "crosscompil": 319, "heut": [319, 1111, 1126], "newer": [320, 711, 874, 947, 1115], "msys2": 321, "5595": 321, "17619": 321, "pacman": 321, "mingw64": 321, "w64": 321, "x64": 321, "medium": [321, 411, 688, 929, 1129], "swlh": 321, "2b2e66352456": 321, "kernighan": [322, 1109, 1110], "denni": [322, 362, 561, 1109], "ritchi": [322, 362, 561, 1109, 1110], "ansi": 322, "iec": [322, 527], "9899": 322, "c11": 322, "pdp": [322, 336], "ken": 322, "thompson": 322, "tabul": [323, 331], "celsiu": [324, 325, 427, 438, 470, 861, 863], "brutal": [324, 343, 347, 368, 626, 643, 917], "ordinari": [324, 544, 598, 648, 741, 749, 820, 897, 977, 984], "everytim": [326, 344, 861], "ascend": [327, 1080], "unread": [328, 346, 403, 689, 932, 933, 953, 997], "putchar": 330, "caution": [330, 536, 783, 857], "obscur": [330, 338, 478, 604, 774, 883, 925], "alright": [330, 356], "inequ": [330, 544], "word1": [331, 502], "word2": [331, 502], "word3": [331, 502], "word4": 331, "word5": 331, "unixen": [331, 708, 925, 1094, 1107], "nonsens": [332, 350, 369, 529, 533, 536, 626, 685, 820, 915, 952, 1061, 1104], "illustr": [332, 955], "countchar": 332, "nwhite": 332, "nother": 332, "stat": [332, 708, 879, 887, 888, 889, 890, 915, 921, 924, 928, 1092], "nonprint": [333, 361], "decis": [333, 408, 487, 535, 551, 685, 854, 917, 957, 1062, 1115], "conveni": [333, 417, 783, 863, 928, 948, 1060], "xxxxxxxxxxxxxxxxxxxxxxxxx": 333, "xxxxxxxxxxxxxxxxxx": 333, "subroutin": [334, 402], "outer": [334, 361], "wimplicit": [334, 725], "hygien": 334, "dear": 334, "assembl": [336, 931], "contradict": [336, 631], "640k": 336, "a_str": 336, "strncpy": 336, "maxlen": [336, 337], "strcat": 336, "strncat": 336, "strcmp": [336, 637, 638], "strncmp": 336, "another_str": 336, "nonsensi": 337, "read_lin": 337, "longest": 337, "confin": [338, 955], "cluster_c": [339, 354, 363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 432, 446, 469, 475, 476, 479, 480, 483, 484, 485, 490, 492, 503, 526, 534, 549, 552, 555, 571, 577, 581, 590, 593, 594, 599, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 628, 635, 666, 682, 691, 699, 707, 709, 710], "cluster_c_introduct": [339, 354, 363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 432, 446, 469, 475, 476, 479, 480, 483, 484, 485, 490, 492, 503, 526, 534, 549, 552, 555, 571, 577, 581, 590, 593, 594, 599, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 628, 635, 666, 682, 691, 699, 707, 709, 710], "c_introduction_exercise_string_read_lin": [339, 354, 363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "c_introduction_character_arrai": [339, 354, 363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "c_introduction_hello_world": [339, 354, 363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "c_introduction_introduct": [339, 354, 363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "c_introduction_exercise_wc": [339, 354, 363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "c_introduction_character_io": [339, 354, 363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "c_introduction_exercise_fahrenheit_for": [339, 354, 363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "c_introduction_for_loop": [339, 354, 363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "c_introduction_exercise_power_declar": [339, 354, 363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "c_introduction_funct": [339, 354, 363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "c_introduction_exercise_fahrenheit_cpp": [339, 354, 363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "c_introduction_cpp_symbolic_const": [339, 354, 363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "c_introduction_exercise_fahrenheit_float": [339, 354, 363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "c_introduction_instal": [339, 354, 363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 432, 446, 469, 475, 476, 479, 480, 483, 484, 485, 490, 492, 503, 526, 534, 549, 552, 555, 571, 577, 581, 590, 593, 594, 599, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 628, 635, 666, 682, 691, 699, 707, 709, 710], "c_introduction_variables_and_arithmetic_express": [339, 354, 363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "c_introduction_external_variables_and_scop": [339, 354, 363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "c_introduction_exercise_histogram": [339, 354, 363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "c_introduction_arrai": [339, 354, 363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "z0": 341, "abbrevi": [342, 643, 646, 648, 652], "char_bit": 342, "x86": [342, 421, 931, 948], "stdint": [342, 861, 881, 924], "int8_t": 342, "uint8_t": [342, 440, 455, 627, 861], "int16_t": 342, "uint16_t": 342, "int32_t": 342, "uint32_t": 342, "int64_t": 342, "uint64_t": [342, 379, 481, 655, 656, 690, 881, 924], "052": 343, "0x2a": 343, "0b010010": 343, "42l": 343, "456f": 343, "456l": 343, "x61": 343, "alert": [343, 386, 392, 686, 986, 994, 1003, 1005], "backspac": [343, 817, 999], "formfe": 343, "ooo": 343, "octal": [343, 986, 999, 1000], "xhh": 343, "some_funct": 344, "some_vari": 344, "1415926535897932": 344, "some_nonsensical_numb": 344, "legal": [346, 390, 536, 634, 887, 929], "truth": [346, 884, 910], "eleg": [346, 689], "blank": 346, "num_lf": 346, "narrow": [347, 1062], "4294967295u": 347, "wsign": [347, 389], "wconvers": 347, "4294967296u": 347, "unscrupul": 347, "0x100000000": 347, "weaker": 347, "stronger": [347, 967, 1077], "1l": 347, "1u": 347, "losslessli": 347, "1ul": 347, "wtype": [347, 389], "wextra": [347, 389], "pedant": 347, "anti": [347, 762, 899], "sloppi": 347, "advic": [347, 986], "immens": [347, 929], "hazard": 347, "messi": [347, 418], "subtl": [348, 368, 391, 478, 980], "copy_and_omit": 348, "0x4b": 350, "01001011": 350, "0x0c": 350, "00001100": 350, "0x08": 350, "00001000": 350, "0x4f": 350, "01001111": 350, "0x47": 350, "01000111": 350, "0x03": 350, "00000011": 350, "0x80": 350, "00110000": 350, "001": 350, "0x4c": [350, 747], "01001100": 350, "0xb3": 350, "10110011": 350, "arr": [351, 630], "unari": [353, 986], "strongest": [353, 986], "intuit": [353, 401], "danger": [353, 371, 529, 757, 907, 928, 995, 1112], "decrement": [354, 363, 370, 374, 376, 380, 383, 387, 396, 400, 405, 406, 579, 628, 666, 685, 707, 709, 710, 716], "cluster_c_types_operators_express": [354, 363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "c_types_operators_expressions_increment_decrement_oper": [354, 363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "c_types_operators_expressions_type_convers": [354, 363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "c_types_operators_expressions_introduct": [354, 363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "c_types_operators_expressions_bit_oper": [354, 363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "c_types_operators_expressions_exercise_string_reduc": [354, 363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "c_types_operators_expressions_assignment_operators_and_express": [354, 363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "c_types_operators_expressions_precedence_and_order_of_evalu": [354, 363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "c_types_operators_expressions_conditional_express": [354, 363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "c_types_operators_expressions_variable_nam": [354, 363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "c_types_operators_expressions_relational_logical_oper": [354, 363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "c_types_operators_expressions_arithmetic_oper": [354, 363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "c_types_operators_expressions_const": [354, 363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "c_types_operators_expressions_datatypes_s": [354, 363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "c_types_operators_expressions_declar": [354, 363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "doabl": 359, "cond": [359, 904], "expr": [359, 369, 817], "precedenceof": 359, "innermost": [361, 598, 603], "concern": [361, 362, 410, 716, 793, 863, 954, 1114], "edsger": 362, "dijkstra": 362, "plea": 362, "manifold": 362, "judici": [362, 398, 1114], "do_complicated_stuff": 362, "cleanup_mess": 362, "cluster_c_program_flow": [363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "c_program_flow_if_els": [363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "c_program_flow_statements_and_block": [363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "c_program_flow_switch": [363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "c_program_flow_else_if": [363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "c_program_flow_goto_and_label": [363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "c_program_flow_break_and_continu": [363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "c_program_flow_loops_while_and_for": [363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "c_program_flow_loops_do_whil": [363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "vice": 364, "versa": 364, "g_lobal": [365, 366, 368], "print_g": [365, 366], "linkag": 366, "percept": [366, 793], "disciplin": [366, 388, 398, 408, 1061], "convent": [366, 410, 773, 817, 839, 877, 954, 969], "ifndef": [366, 368, 369, 411, 418, 512, 530, 536, 538, 539, 637, 638, 684, 931, 947, 949], "g_h": 366, "programx": 367, "cautious": 368, "c99": [368, 1110], "slow": [368, 399, 403, 579, 863, 874], "have_c_h": 368, "clash": [368, 391], "include_onc": 368, "newbi": [368, 630], "hurdl": 368, "ifdef": [369, 426, 579], "defined": 369, "unequ": 369, "tempt": 369, "horror": 369, "do_much": 369, "do_thi": [369, 690], "do_that": [369, 690], "do_less": 369, "__pragma": 369, "4127": 369, "warn_if": 369, "statem": 369, "function_help": 369, "function_quit": 369, "function_": 369, "inject_viru": 369, "doomed_process": 369, "win32": [369, 1128], "foreign_mem": 369, "virtualallocex": 369, "mem_commit": 369, "page_execut": 369, "page_readwrit": 369, "infect": 369, "__file__": [369, 955, 1092], "__line__": 369, "smell": [369, 423], "pest": 369, "cluster_c_functions_and_program_structur": [370, 376, 380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "c_functions_and_program_structure_external_vari": [370, 376, 380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "c_functions_and_program_structure_bas": [370, 376, 380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "c_functions_and_program_structure_c_preprocessor_advanc": [370, 376, 380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "c_functions_and_program_structure_c_preprocessor": [370, 376, 380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "c_functions_and_program_structure_static_vari": [370, 376, 380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "c_functions_and_program_structure_header_fil": [370, 376, 380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "dereferenc": [371, 639, 674, 678], "35129": 371, "calle": [372, 402, 404, 541], "tablet": 372, "excang": 373, "pa1": 374, "pa2": 374, "necessarili": [374, 404, 561, 708, 743, 757, 794, 874, 972, 1094, 1101], "cluster_c_pointers_and_arrai": [376, 380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "c_pointers_and_arrays_pointers_and_address": [376, 380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "c_pointers_and_arrays_pointers_and_function_argu": [376, 380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "c_pointers_and_arrays_command_line_argu": [376, 380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "c_pointers_and_arrays_pointers_and_arrai": [376, 380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "c_pointers_and_arrays_exercise_swap": [376, 380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "scalar": [377, 392, 1003], "fantasi": [377, 854, 856], "p1": [377, 477, 528, 530, 536, 542, 544, 546, 547, 631], "p2": [377, 477, 528, 530, 536, 542, 544, 547, 631], "laid": 377, "makepoint": 378, "addpoint": [378, 394], "addtopoint": 378, "pid_t": [379, 900, 918, 929], "cluster_c_structur": [380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "c_structures_structures_and_funct": [380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "c_structures_bas": [380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "c_structures_typedef": [380, 383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "dealloc": [381, 519, 671, 718, 745, 751], "ptr": [381, 504, 636, 684, 685, 686, 687], "do_something_with": [381, 629, 675], "list_init": 382, "list_destroi": 382, "list_insert": 382, "list_remov": 382, "list_count": 382, "list_print": 382, "keylen": 382, "cluster_c_memori": [383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "c_memory_exercise_linked_list": [383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "c_memory_malloc": [383, 387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "corollari": [384, 386, 692, 963], "reorder": [384, 700, 741], "use_count": [384, 385, 685, 687, 705], "use_resourc": [384, 385], "do_something_with_shared_resourc": [384, 385], "conceiv": [384, 980], "completion_flag": 384, "out_word": 384, "in_word": 384, "unforese": 384, "volatil": [385, 387, 396, 400, 405, 406, 628, 666, 694, 707, 709, 710, 767, 929, 1110, 1113], "instr": [385, 403, 902, 965], "pthread_mutex_t": [385, 698, 749, 902, 904], "use_count_mutex": 385, "pthread_mutex_initi": [385, 902], "pthread_mutex_lock": [385, 698, 902, 904], "pthread_mutex_unlock": [385, 698, 902, 904], "expens": [385, 392, 528, 541, 544, 634, 639, 675, 676, 685, 762, 899, 1112], "fetch_and_add": [385, 902], "__sync_fetch_and_add": [385, 695, 902, 903], "sheer": [385, 531], "neglig": 386, "penalti": 386, "memcpi": 386, "freeli": 386, "rearrang": [386, 578], "anim": 386, "pragma": [386, 427, 429, 433, 438, 450, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 481, 543, 657, 708], "textit": 386, "bogu": [386, 398, 539, 637, 638, 664, 863, 929], "__pad0": 386, "__pad1": 386, "bloat": [386, 974], "misalign": 386, "intrins": [387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "cluster_c_advanced_language_featur": [387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "c_advanced_language_features_atom": [387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "c_advanced_language_features_volatil": [387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "c_advanced_language_features_align": [387, 396, 400, 405, 406, 628, 666, 707, 709, 710], "matur": 388, "odditi": 388, "rectifi": 388, "fortran": 388, "lazy": [388, 669], "meant": [388, 928], "shortcom": [388, 453, 614, 619, 622], "holidai": 388, "handcraft": [388, 436, 990], "clariti": [389, 393, 886], "baud": 390, "idl": 390, "writing_request": 390, "reading_respons": 390, "wait_retri": 390, "protocol_engin": [390, 394], "deduc": [390, 626, 629, 654], "obligatori": 390, "anyhow": 390, "forgot": 390, "unambigu": [390, 626], "protocol_error": 390, "eat": [390, 398], "unintend": 392, "wwrite": 392, "max_bucket": 392, "unus": [392, 427, 477, 480, 528, 532, 543, 582, 583, 636, 735, 794, 910, 924], "pj": 392, "pointe": 392, "ppi": 392, "height": [393, 436, 545], "beman": 393, "daw": 393, "obfusc": 394, "ssize_t": [394, 482, 716, 875, 879, 880, 881, 883, 887, 888, 889, 890, 893, 895, 898, 921, 924, 925, 928], "send_fram": 394, "eng": 394, "send_sum": 394, "v_int32": 394, "spectacular": 394, "adequ": 394, "unix_error": 394, "app_error": 394, "unix_error_cr": 394, "unix_error_ok": 394, "uerr": 394, "app_error_cr": 394, "app_os_error": 394, "impact": [394, 398], "enhanc": [394, 790], "beyond": [395, 883], "consider": [395, 817], "slowdown": 395, "0x400552": 395, "0x51bb072": 395, "0x4c28c6d": 395, "vg_replace_malloc": [395, 536], "0x400545": 395, "loss": [395, 865], "rec": [395, 1045, 1047], "uncov": 395, "readabilti": [396, 400, 405, 406, 628, 666, 707, 709, 710], "explict": [396, 400, 405, 406, 710], "cluster_c_program_san": [396, 400, 405, 406, 628, 666, 707, 709, 710], "c_program_sanity_struct_initi": [396, 400, 405, 406, 710], "c_program_sanity_const": [396, 400, 405, 406, 710], "c_program_sanity_stat": [396, 400, 405, 406, 710], "c_program_sanity_discrete_valu": [396, 400, 405, 406, 628, 666, 707, 709, 710], "c_program_sanity_introduct": [396, 400, 405, 406, 628, 666, 707, 709, 710], "c_program_sanity_integral_typ": [396, 400, 405, 406, 628, 666, 707, 709, 710], "c_program_sanity_valgrind": [396, 400, 405, 406, 710], "c_program_sanity_explicit_type_safeti": [396, 400, 405, 406, 710], "hotspot": [397, 401], "checksum": [397, 865, 913], "externel": 397, "sha1sum": [397, 913, 916, 919], "8g": 397, "0m38": 397, "0m3": 397, "0m0": 397, "perceiv": 397, "daze": 397, "mp3": 397, "018": 397, "mult": 398, "rumour": 398, "uncondit": 398, "slower": [398, 794], "finlin": 398, "o3": [398, 413], "heurist": 398, "o1": 398, "magnitud": [398, 399], "overus": [398, 440, 968, 1112], "spill": 398, "fira": 398, "rtfm": [398, 1001, 1099], "compromis": [398, 408, 436], "transit": [398, 423], "fmove": 398, "outweigh": 398, "thrash": [398, 916, 1110], "understood": [398, 408, 481, 690, 757, 1114], "misnom": [398, 1005], "o0": [398, 413, 1101], "unagress": 398, "chew": [398, 700], "agress": 398, "muchnik": 398, "levin": 398, "nearbi": 399, "bounc": [399, 776], "4x3": 399, "rectangular": 399, "cluster_c_perform": [400, 405, 406, 710], "c_performance_computebound": [400, 405, 406, 710], "c_performance_introduct": [400, 405, 406, 710], "c_performance_memori": [400, 405, 406, 710], "bust": 401, "haul": 401, "cheater": 401, "fallibl": 401, "supplement": 401, "gprof": [401, 403, 404, 405, 406, 710, 1110], "callgrind": [401, 404, 405, 406, 710, 1110], "oprofil": [401, 405, 406, 710, 1110], "gmon": 402, "spot": 402, "38000000": 402, "find_dupl": [402, 404], "percentag": 402, "criterion": [402, 569], "37000000": 402, "luck": [402, 861, 952, 954], "gprof2dot": 402, "tjpeg": 402, "predict": [403, 404, 1058, 1060, 1061], "sluggishli": 403, "16761": 403, "callgrind_annot": 403, "atstart": 403, "callgrind_control": 403, "nmi": 404, "ophelp": 404, "operf": 404, "oprofile_data": 404, "opreport": 404, "opannot": 404, "oparch": 404, "opgprof": 404, "Their": 404, "2085": 404, "2505": 404, "maskabl": 404, "callgraph": 404, "pxe": 404, "vmlinux": [404, 732], "debuginfo": 404, "userland": [404, 716], "routin": [404, 410, 515, 708, 749, 755, 760, 881, 917, 949, 1049, 1051], "analyz": 404, "jcf": [404, 757, 783], "jxf": [404, 757, 783], "gdf": 404, "op2calltre": 404, "oprof": 404, "applet": 404, "viewabl": [404, 417], "kcachegrind": 404, "cluster_c_profil": [405, 406, 710], "c_profiling_callgrind": [405, 406, 710], "c_profiling_gprof": [405, 406, 710], "c_profiling_oprofil": [405, 406, 710], "c_profiling_introduct": [405, 406, 710], "worker": [408, 634], "consensu": [408, 431], "consent": [408, 975], "male": [408, 1017], "prcess": 408, "obei": [408, 410], "liskov": 408, "segreg": 408, "antipattern": [408, 436], "gonna": 408, "indecis": [408, 1115], "road": 408, "manufactur": [408, 863], "pcb": [408, 861], "bom": 408, "requiremenet": 408, "yyyi": 409, "testabl": [409, 1093], "yagni": 409, "fraunhof": 409, "make_categori": 410, "outputfil": 410, "to_datetim": 410, "make_float": 410, "orpheum": 410, "goingout": 410, "hervi": 410, "sport": 410, "card": [410, 757, 786, 821, 823, 828, 829], "to_csv": 410, "read_from_csv": 410, "write_to_csv": 410, "clean_data": 410, "csvname_or_list_thereof": 410, "concat": [410, 1075], "workaround": [410, 627, 630, 730, 1092], "burden": [410, 543, 957, 1093], "read_from_dir": 410, "re_yyyy_mm": 410, "inputdir": 410, "libreoffic": 410, "monolith": [410, 931], "factor": [410, 725, 726, 757], "test_data_clean": 410, "test_make_float": 410, "1999": 410, "test_date_convers": 410, "at666666666666666666": 410, "000009173": 410, "bawaatwwxxx": 410, "at211420020010848041": 410, "ausgleich": 410, "firmenkonto": 410, "test_input": 410, "read_from_csv_singl": 410, "read_from_csv_multipl": 410, "deliber": 410, "test_read_csv_singl": 410, "000009284": 410, "2371": 410, "000009283": 410, "at613400000005077508": 410, "world4you": 410, "writelin": [410, 1005, 1050, 1052], "test_read_csv_multipl": 410, "lines_2023_02": 410, "lines_2023_01": 410, "000009229": 410, "4111": 410, "bp": 410, "tankstel": 410, "000009228": 410, "at081400086210003454": 410, "\u00f6sterreichisch": 410, "gesundheitskass": 410, "_write_csv": 410, "read_from_csv_dir": 410, "test_read_csv_dir": 410, "testutil": 410, "write_csv": 410, "test_category_csv": 410, "000009168": 410, "000009169": 410, "2801": 410, "strassenbahn": 410, "eas": [410, 1070], "finer": 410, "refact": 410, "str_categori": 410, "cardunknown": 410, "flughafen": 410, "wien": 410, "test_more_of_it": 410, "000009153": 410, "parken": 410, "fl": 410, "inputread": 410, "recursivecsvinputread": 410, "singlecsvinputread": 410, "compositeinputread": 410, "input_abc": 410, "abstractmethod": [410, 967], "multiplecsvinputread": 410, "test_input_abc": 410, "cmake_minimum_requir": [411, 933, 1101], "identif": [411, 861, 932, 933], "abi": [411, 421, 735, 737, 877, 932, 933], "hello_nam": [411, 417], "hello_name_h": 411, "democonfig": [412, 414, 418, 419, 420], "libhello": [412, 413, 414, 416, 419, 422], "configure_fil": 412, "demo_version_major": 412, "demo_version_minor": 412, "cmake_current_binary_dir": 412, "demo_major": 412, "demo_minor": 412, "include_directori": [412, 423], "overkil": 412, "cmake_cxx_standard": [413, 1101], "dndebug": 413, "cmake_": 413, "_compiler_id": 413, "IF": [413, 418, 419, 420], "g3": [413, 1101], "strequal": 413, "cmake_c_compiler_id": 413, "cmake_c_flag": [413, 1101], "cmake_cxx_compiler_id": 413, "cmake_cxx_flag": [413, 1101], "howdi": [413, 537, 668, 670, 671, 797, 801, 887, 888, 890, 972], "bullshithowdi": 413, "fatal_error": 413, "send_error": 413, "attract": [413, 630], "findsqlite3": 414, "sqlite3_include_dir": 414, "sqlite3_librari": 414, "typo": [414, 968, 969], "sqlite3_vers": 414, "sqlite3_found": 414, "olden": 414, "0x00007f76ae011000": 414, "libz": 414, "0x00007f76adef7000": 414, "cluster_cmak": [415, 710], "cmake_shared_libraries_preview": [415, 710], "cmake_librari": [415, 710], "cmake_optional_code_approach_2": [415, 710], "cmake_optional_code_approach_1": [415, 710], "cmake_instal": [415, 710, 932, 933], "cmake_optional_code_problem": [415, 710], "cmake_structur": [415, 710], "cmake_cxx_and_r": [415, 710], "cmake_configure_fil": [415, 710], "cmake_test": [415, 710], "cmake_external_depend": [415, 710], "cmake_bas": [415, 710], "cmake_targets_properti": [415, 710], "cmake_install_prefix": 416, "set_properti": [416, 421], "dbuild_shared_lib": [416, 421], "ON": [416, 419, 420, 421, 469, 476, 503, 915], "readelf": [416, 931, 943, 948], "0x0000000000000001": [416, 948], "0x000000000000001d": 416, "0x00007f773aefe000": 416, "ldconfig": [416, 1107], "sonam": [416, 421], "add_librari": [417, 419, 421, 423, 470, 514, 523, 932, 933], "0x29": 417, "collect2": [417, 603, 948], "acycl": [417, 933, 947], "dag": 417, "jul": [417, 421], "tpng": [417, 933], "descend": [418, 419, 420, 422, 470, 818, 925], "use_blacklist": [418, 419], "macro_use_blacklist": [418, 420], "demo_use_blacklist": [418, 419], "namegreet": 418, "_blacklist": 418, "implic": [418, 741, 813, 874], "sayhello": 418, "is_forbidden": 418, "_name": [418, 459, 462, 466, 467, 468], "goodby": [418, 929], "use_backlist": 418, "condition": 418, "duse_blacklist": [419, 420], "target_compile_opt": [419, 423], "target_include_directori": [419, 420, 422, 423], "manyfold": 420, "target_compile_definit": [420, 423], "lightli": 420, "symlink": [421, 708, 861, 1094, 1118], "build_shared_lib": 421, "qf": 421, "libboost_regex": 421, "lrwxrwxrwx": [421, 839, 861, 862, 863, 897, 931], "rwxr": [421, 802, 804, 805, 814, 931, 943, 982], "289264": 421, "temporarili": [421, 918, 931], "project_vers": 421, "makefile2": 422, "compile_definit": 423, "dname": 423, "compile_opt": 423, "widest": 423, "asymmetr": 423, "enable_test": 424, "toplavel": 424, "set_tests_properti": [424, 1098, 1101], "pass_regular_express": 424, "ctest": 424, "cdash": 424, "kitwar": 424, "socialdb": [425, 428, 432, 457, 463], "i2csensor_vendor1": [426, 455], "0x37": 426, "suddenli": [426, 757, 797, 1066], "vener": [426, 447, 529, 544, 672], "damag": [426, 1080], "slip": 426, "cascad": 426, "i2csensor": [426, 440, 455], "create_i2c_sensor": 426, "i2csensorfactori": 426, "speak": [426, 844, 862, 959, 984], "vendor1": [426, 455], "abstract_factory_suit": 426, "instantiate_vendor1": 426, "i2csensorfactory_vendor1": 426, "i2c_factory_vendor1": 426, "i2c_sensor": 426, "assert_tru": [426, 477, 486, 491, 493, 498, 503, 528, 530, 545, 546, 547, 548, 631, 685, 686, 708, 1099], "dynamic_cast": [426, 453, 467], "a_sensor": [426, 636], "vendor2": [426, 455], "instantiate_vendor2": 426, "i2csensorfactory_vendor2": [426, 455], "i2c_factory_vendor2": 426, "i2csensor_vendor2": [426, 455], "pu": 426, "tinto": 426, "fahrenheitsensor": [427, 456], "get_temperature_f": [427, 456], "formula": 427, "adapter_suit": 427, "constantfahrenheitsensor": 427, "assert_float_eq": [427, 430, 431, 433, 450, 451, 477, 479, 481, 482, 483, 484, 485, 496, 528, 530, 547, 633, 636], "fahrenheitsensor_adapt": [427, 456], "adapter__is_a__sensor": 427, "adapter__knows__an_a_sensor": 427, "variablefahrenheitsensor": 427, "initial_valu": 427, "_valu": [427, 462], "change_temperatur": [427, 479, 481, 482], "adapter__definitely_knows__a_sensor__hel": 427, "multitud": 428, "socialdbcommand": [428, 457], "command_suit": 428, "2345110695": [428, 587], "socialdbinsertcommand": [428, 457], "3456060486": [428, 587], "insert_by_bas": 428, "socialdbfindcommand": [428, 457], "socialdbdropcommand": [428, 457], "notfound": [428, 429, 457, 619, 620, 621], "assert_throw": [428, 435, 708], "notinsert": [428, 429, 457], "bulkinsert": 428, "bulk_insert": 428, "socialdbbulkinsertcommand": [428, 457], "bic": 428, "std_initializer_list": 428, "bulk_insert__std_initializer_list": 428, "_msg": 429, "c_str": [429, 464, 482, 632, 637, 638, 928], "_db": 429, "hypthet": 430, "composite_suit": 430, "constantsensor": [430, 433, 438, 450, 451, 459, 472, 480, 483, 493, 494, 495, 496, 498, 499, 636, 684, 685, 686, 687, 967, 1043], "cs1": 430, "cs2": 430, "averagingsensor": [430, 458], "recompil": [431, 948], "decorator_suit": 431, "average_with_base_sensor": 431, "decoratedsensor": [431, 459], "propon": 431, "diagnost": 431, "decorated_sensor_const_added_function": 431, "decorated_sensor_random_added_function": 431, "decorated_sensor_const__is_a__sensor": 431, "decorated_sensor_random__is_a__sensor": 431, "assert_g": [431, 485, 496], "assert_l": [431, 485, 496], "average_with_decorated_sensor": 431, "mtqueue": [432, 450], "devis": 432, "notifi": [432, 698, 878, 925, 1074], "cluster_cxx_design_pattern": [432, 446, 475, 526, 710], "cluster_cxx": [432, 446, 469, 475, 476, 479, 480, 483, 484, 485, 490, 492, 503, 526, 710], "cluster_cxx_exercis": [432, 446, 469, 475, 476, 479, 480, 483, 484, 485, 490, 492, 503, 526, 710], "cluster_cxx_exercises_design_pattern": [432, 446, 475, 526, 710], "cluster_cxx03": [432, 446, 469, 475, 476, 479, 480, 483, 484, 485, 490, 492, 503, 526, 534, 549, 552, 555, 571, 577, 581, 589, 590, 591, 593, 594, 596, 599, 605, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 635, 666, 682, 691, 699, 707, 709, 710], "cluster_cxx03_inheritance_oo": [432, 446, 475, 480, 526, 599, 623, 710], "cluster_cxx03_data_encapsul": [432, 446, 469, 475, 476, 479, 480, 483, 484, 485, 490, 492, 503, 526, 534, 549, 552, 555, 571, 577, 581, 590, 593, 594, 599, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 635, 666, 682, 691, 699, 707, 709, 710], "cluster_linux": [432, 446, 469, 475, 476, 479, 480, 483, 484, 485, 503, 526, 699, 709, 710, 714, 717, 719, 722, 724, 727, 729, 731, 733, 734, 736, 738, 740, 742, 744, 746, 748, 750, 752, 754, 756, 758, 761, 763, 766, 768, 772, 775, 778, 780, 784, 785, 786, 787, 790, 791, 798, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 837, 847, 853, 859, 860, 865, 866, 867, 868, 869, 876, 882, 884, 892, 894, 896, 908, 911, 914, 916, 933, 935, 936, 937, 938, 939, 940, 941, 942], "cluster_linux_bas": [432, 446, 469, 475, 476, 479, 480, 483, 484, 485, 503, 526, 699, 709, 710, 780, 784, 785, 786, 787, 790, 791, 798, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 837, 847, 853, 865, 866, 867, 868, 869, 876, 882, 884, 892, 894, 908, 911, 914, 916, 933, 935, 936, 937, 938, 939, 940, 941, 942], "cluster_linux_basics_intro": [432, 446, 469, 475, 476, 479, 480, 483, 484, 485, 503, 526, 699, 709, 710, 780, 784, 785, 786, 787, 790, 791, 798, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 837, 847, 853, 865, 866, 867, 868, 869, 876, 882, 884, 892, 894, 908, 911, 914, 916, 933, 935, 936, 937, 938, 939, 940, 941, 942], "cluster_linux_basics_shel": [432, 446, 469, 475, 476, 479, 480, 483, 484, 485, 503, 526, 699, 709, 710, 780, 784, 785, 786, 787, 790, 791, 798, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 837, 847, 853, 876, 882, 884, 892, 894, 908, 911, 914, 916, 933, 935, 936, 937, 938, 939, 940, 941, 942], "cluster_linux_toolchain": [432, 446, 469, 475, 476, 479, 480, 483, 484, 485, 503, 526, 699, 709, 710, 787, 790, 791, 853, 876, 882, 884, 892, 894, 908, 911, 914, 916, 933, 935, 936, 937, 938, 939, 940, 941, 942], "cxx_design_patterns_abstract_factori": [432, 446, 475, 526, 710], "cxx_design_patterns_uml": [432, 446, 475, 526, 710], "cxx_design_patterns_sensor_hierarchi": [432, 446, 475, 526, 710], "cxx_design_patterns_singleton": [432, 446, 475, 526, 710], "cxx03_inheritance_oo_interfac": [432, 446, 475, 480, 526, 599, 623, 710], "cxx_design_patterns_interpret": [432, 446, 475, 526, 710], "cxx_design_patterns_heating_screenplai": [432, 710], "cxx_design_patterns_adapt": [432, 446, 475, 526, 710], "cxx_design_patterns_observ": [432, 446, 475, 526, 710], "cxx_design_patterns_composit": [432, 446, 475, 526, 710], "cxx_design_patterns_proxi": [432, 446, 475, 526, 710], "cxx_exercises_design_patterns_proxy_round": [432, 446, 475, 526, 710], "cxx_design_patterns_decor": [432, 446, 475, 526, 710], "cxx_design_patterns_oo_principl": [432, 710], "cxx_design_patterns_command": [432, 446, 475, 526, 710], "cxx_exercises_sensor_interfac": [432, 446, 475, 480, 526, 710], "linux_toolchain_cmake_loc": [432, 446, 469, 475, 476, 479, 480, 483, 484, 485, 503, 526, 710, 853, 933, 941], "cxx03_introduct": [432, 446, 469, 475, 476, 479, 480, 483, 484, 485, 490, 492, 503, 526, 534, 549, 552, 555, 571, 577, 581, 590, 593, 594, 599, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 635, 666, 682, 691, 699, 707, 709, 710], "cxx03_inheritance_oo_destructor": [432, 446, 475, 480, 526, 599, 623, 710], "cxx03_inheritance_oo_bas": [432, 446, 475, 480, 526, 599, 623, 710], "cxx03_data_encapsulation_ctor_dtor": [432, 446, 475, 480, 526, 534, 599, 611, 612, 613, 614, 615, 616, 618, 619, 620, 621, 622, 623, 635, 666, 682, 691, 699, 707, 709, 710], "cxx03_data_encapsulation_classes_object": [432, 446, 469, 475, 476, 479, 480, 483, 484, 485, 490, 492, 503, 526, 534, 549, 552, 555, 571, 577, 581, 590, 593, 594, 599, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 635, 666, 682, 691, 699, 707, 709, 710], "cxx03_inheritance_oo_polymorph": [432, 446, 475, 480, 526, 599, 623, 710], "cxx03_inheritance_oo_virtual_method": [432, 446, 475, 480, 526, 599, 623, 710], "cxx03_inheritance_oo_virtual_destructor": [432, 446, 475, 480, 526, 599, 623, 710], "cxx03_data_encapsulation_ctor_custom": [432, 446, 475, 479, 480, 485, 526, 534, 599, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 635, 666, 682, 691, 699, 707, 709, 710], "cxx03_data_encapsulation_ctor_default": [432, 446, 475, 480, 526, 534, 599, 611, 612, 613, 614, 615, 616, 618, 619, 620, 621, 622, 623, 635, 666, 682, 691, 699, 707, 709, 710], "cxx03_data_encapsulation_c": [432, 446, 469, 475, 476, 479, 480, 483, 484, 485, 490, 492, 503, 526, 534, 549, 552, 555, 571, 577, 581, 590, 593, 594, 599, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 635, 666, 682, 691, 699, 707, 709, 710], "linux_basics_intro_overview": [432, 446, 469, 475, 476, 479, 480, 483, 484, 485, 503, 526, 699, 709, 710, 780, 784, 785, 786, 787, 790, 791, 798, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 837, 847, 853, 865, 866, 867, 868, 869, 876, 882, 884, 892, 894, 908, 911, 914, 916, 933, 935, 936, 937, 938, 939, 940, 941, 942], "linux_basics_intro_process": [432, 446, 469, 475, 476, 479, 480, 483, 484, 485, 503, 526, 699, 709, 710, 784, 785, 786, 787, 790, 791, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 821, 822, 823, 824, 825, 826, 827, 828, 829, 831, 832, 833, 834, 835, 837, 853, 865, 866, 867, 868, 869, 876, 882, 884, 892, 894, 908, 911, 914, 916, 933, 935, 936, 937, 938, 939, 940, 941, 942], "linux_basics_shell_path": [432, 446, 469, 475, 476, 479, 480, 483, 484, 485, 503, 526, 699, 709, 710, 784, 785, 786, 787, 790, 791, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 837, 853, 876, 882, 884, 892, 894, 908, 911, 914, 916, 933, 935, 936, 937, 938, 939, 940, 941, 942], "linux_basics_shell_commandlin": [432, 446, 469, 475, 476, 479, 480, 483, 484, 485, 503, 526, 699, 709, 710, 780, 784, 785, 786, 787, 790, 791, 798, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 837, 847, 853, 876, 882, 884, 892, 894, 908, 911, 914, 916, 933, 935, 936, 937, 938, 939, 940, 941, 942], "linux_basics_shell_cwd": [432, 446, 469, 475, 476, 479, 480, 483, 484, 485, 503, 526, 699, 709, 710, 784, 785, 786, 787, 790, 791, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 821, 822, 823, 824, 825, 826, 827, 828, 829, 831, 832, 833, 834, 835, 837, 853, 876, 882, 884, 892, 894, 908, 911, 914, 916, 933, 935, 936, 937, 938, 939, 940, 941, 942], "linux_basics_shell_file_dir_create_rm": [432, 446, 469, 475, 476, 479, 480, 483, 484, 485, 503, 526, 699, 709, 710, 784, 785, 786, 787, 790, 791, 812, 821, 822, 823, 824, 825, 826, 827, 828, 829, 831, 837, 853, 876, 882, 884, 892, 894, 908, 911, 914, 916, 933, 935, 936, 937, 938, 939, 940, 941, 942], "linux_toolchain_bas": [432, 446, 469, 475, 476, 479, 480, 483, 484, 485, 503, 526, 699, 709, 710, 787, 790, 791, 853, 876, 882, 884, 892, 894, 908, 911, 914, 916, 933, 935, 936, 937, 938, 939, 940, 941, 942], "linux_toolchain_separate_compil": [432, 446, 469, 475, 476, 479, 480, 483, 484, 485, 503, 526, 710, 853, 933, 936, 937, 938, 939, 941], "linux_toolchain_static_librari": [432, 446, 469, 475, 476, 479, 480, 483, 484, 485, 503, 526, 710, 853, 933, 936, 938, 939, 941], "sensorread": 433, "chrono_liter": [433, 626, 698, 700, 701], "demologg": 433, "cerr": [433, 473, 551, 620, 690, 700, 861, 895, 898], "demovaluestor": 433, "_store": 433, "namedsensor": 433, "_sensor": [433, 440, 458, 459, 461, 464, 465, 686], "_logger": 433, "_value_stor": 433, "sensora": 433, "sensorb": 433, "sensorc": 433, "200000": [433, 862, 1060], "this_thread": [433, 626, 687, 698, 700], "sleep_for": [433, 626, 687, 698, 700], "12597": 433, "valuestor": 433, "2895": 433, "158243": 433, "cassert": [433, 575, 616, 619, 621, 627, 700], "boss": 433, "v3": 433, "abort": [433, 452, 453, 536, 664, 875], "meantim": [433, 878], "mocklogg": 433, "lines_log": 433, "mockvaluestor": 433, "sensorreader_suit": 433, "sensor2": 433, "141320": 433, "memcheck": [433, 536, 685], "detector": [433, 536, 685], "myobserv": 435, "socialdb_observ": [435, 463], "newcitizenobserv": [435, 463], "new_citizen": 435, "_new_citizen_svnr": 435, "new_citizen_ad": [435, 463], "observer_suit": 435, "register_on": 435, "register_new_citizen_notif": [435, 463], "register_mani": 435, "observer1": 435, "observer2": 435, "register_dupl": 435, "observeralreadyregist": [435, 463], "unregister_new_citizen_notif": [435, 463], "unregister_not_regist": 435, "observernotregist": [435, 463], "addict": [436, 796, 817, 1084, 1093], "bertrand": 436, "barbara": 436, "liskow": 436, "polish": 436, "be_sick": 439, "insur": [439, 452, 453, 454, 466, 467, 468], "teardown": [439, 482, 952, 1093, 1103, 1105], "purest": 440, "lightest": 440, "pidcontrol": 440, "_switch": 440, "cluster_cxx_exercises_design_patterns_solut": [446, 475, 526, 710], "cxx_exercises_design_patterns_composit": [446, 475, 526, 710], "cxx_exercises_design_patterns_interpreter_and_adapt": [446, 475, 526, 710], "cxx_exercises_design_patterns_interpreter_bas": [446, 475, 526, 710], "cxx_exercises_design_patterns_decor": [446, 475, 526, 710], "cxx_exercises_design_patterns_command": [446, 475, 526, 710], "cxx_exercises_design_patterns_proxy_remot": [446, 475, 526, 710], "cxx_exercises_design_patterns_adapt": [446, 475, 526, 710], "cxx_exercises_design_patterns_observ": [446, 475, 526, 710], "cxx_exercises_design_patterns_singleton_inflex": [446, 475, 526, 710], "cxx_exercises_design_patterns_abstract_factori": [446, 475, 526, 710], "cxx_exercises_design_patterns_singleton_flexible_strict": [446, 475, 526, 710], "cxx_exercises_design_patterns_singleton_flex": [446, 475, 526, 710], "cxx_exercises_design_patterns_solutions_proxy_remot": [446, 475, 526, 710], "cxx_exercises_design_patterns_solutions_interpreter_bas": [446, 475, 526, 710], "cxx_exercises_design_patterns_solutions_observ": [446, 475, 526, 710], "cxx_exercises_design_patterns_solutions_singleton_inflex": [446, 475, 526, 710], "cxx_exercises_design_patterns_solutions_singleton_flex": [446, 475, 526, 710], "cxx_exercises_design_patterns_solutions_interpreter_and_adapt": [446, 475, 526, 710], "cxx_exercises_design_patterns_solutions_composit": [446, 475, 526, 710], "cxx_exercises_design_patterns_solutions_proxy_round": [446, 475, 526, 710], "cxx_exercises_design_patterns_solutions_adapt": [446, 475, 526, 710], "cxx_exercises_design_patterns_solutions_command": [446, 475, 526, 710], "cxx_exercises_design_patterns_solutions_decor": [446, 475, 526, 710], "cxx_exercises_design_patterns_solutions_abstract_factori": [446, 475, 526, 710], "cxx_exercises_design_patterns_solutions_singleton_flexible_strict": [446, 475, 526, 710], "cla": 447, "sensorvalu": [447, 461], "roundingsensor": [447, 451, 465], "r1": [447, 548, 639], "r2": [447, 548, 639], "r3": 447, "sensorvalueexpress": [447, 461], "e1_e2": 447, "e1_e2_e3": 447, "num_measur": 447, "v_avg": 447, "v_ass": 447, "combinatin": 448, "interpreter_suit": 448, "e_lh": 448, "e_rh": 448, "e_add": 448, "e_sub": 448, "mul": 448, "e_mul": 448, "e_div": 448, "arithemet": 448, "arith": [448, 520, 521, 557, 558, 559, 560, 565], "combined_arith": 448, "l7": 448, "a_7_plus_3": 448, "s_3_minus_1": 448, "variable_not_set": 448, "analogi": [448, 473, 863, 925, 965], "assignment_valu": 448, "variable_assign": 448, "ass": 448, "variable_used_as_express": 448, "ass_v1": 448, "ass_v2": 448, "reachabl": [450, 685, 861, 863], "remoteadapt": [450, 464], "packet": [450, 751, 857, 880, 913], "response_promis": 450, "_adapt": 450, "_queue": [450, 698], "_thread": 450, "fulfil": [450, 481], "proxy_remote_suit": 450, "_c": 450, "remotesensoradapt": [450, 464], "remotesensor": [450, 464], "remote_sensor__is_a__sensor": 450, "somth": 450, "simplist": 450, "fullfil": 451, "proxy_round_suit": 451, "round_down": 451, "round_up": 451, "rouding_sensor__is_a__sensor": 451, "advis": [452, 1051], "hypothet": [452, 480, 481, 535, 854], "fee": 452, "socialinsur": [452, 453, 454, 468], "oegk": [452, 453], "startup": [452, 453, 454, 466, 789, 925, 931, 963], "set_inst": [452, 453, 466], "make_uniqu": [452, 466, 706], "debt": [452, 453, 454, 466, 467, 468], "runtime_error": [452, 453, 464, 466, 467, 468, 482, 700], "ala": [453, 544, 813, 879, 919, 1087], "socinsur": [453, 467], "inisur": 453, "reimplement": [453, 622], "compiabl": [453, 467], "iface_inst": [453, 467], "svs_instanc": [453, 467], "oegk_inst": [453, 467], "another_inst": [453, 454, 467, 468], "1485": [453, 454], "unset": [453, 904], "sozialversicherung": [454, 468], "unrealist": 454, "adapte": 456, "_adapte": 456, "_svnr": 457, "_firstnam": [457, 587, 975], "_lastnam": [457, 587, 975], "_result": 457, "_command": 457, "get_if": 457, "decoratedconstantsensor": 459, "sstream": [459, 464, 546, 548], "iomanip": 459, "ostringstream": [459, 464, 545, 546, 547, 548], "decoratedrandomsensor": 459, "_variabl": 462, "_lh": 462, "_rh": 462, "_context": 462, "_var": 462, "_exp": 462, "stdexcept": [462, 464, 466, 467, 468, 482, 708], "_new_citizen_observ": 463, "num_eras": 463, "_server": 464, "cstdio": 464, "num_item": 464, "sscanf": 464, "cmath": [465, 530, 538, 539, 547, 633, 649, 650, 651, 652, 689], "_instanc": [466, 467, 468], "nullptr": [466, 467, 481, 495, 499, 626, 636, 637, 684, 685, 686, 698, 700, 705, 706, 898, 1112], "_databas": [466, 467, 468], "0l": [466, 467], "cstdlib": [467, 482], "ssocinsur": 467, "mockswitch_nopoli": [469, 476, 503], "display_led_stripe_nopoly_suite__somewhere_in_the_middl": 469, "nopoli": [469, 476, 479, 483, 484, 485, 503], "stripe": 469, "display_led_stripe_nopoly_suit": 469, "somewhere_in_the_middl": 469, "sw0": 469, "sw1": 469, "sw2": 469, "sw3": 469, "sw4": 469, "sw5": 469, "sw6": 469, "sw7": 469, "display_led_stripe_nopoly_suite__below_rang": 469, "below_rang": 469, "display_led_stripe_nopoly_suite__above_rang": 469, "above_rang": 469, "display_led_stripe_nopoly_suite__mov": 469, "movement": [469, 854], "set_temperatur": [469, 476, 479, 484], "display_led_stripe_nopoly_suite__vari": 469, "variation_2_switch": 469, "variation_interval_not_from_0": 469, "cxx_exercises_switch_mock_nopoli": [469, 475, 476, 503, 526, 710], "cxx_exercises_display_led_stripe_nopoli": [469, 475, 526, 710], "cxx_exercises_sensor_mock_nopoli": [469, 475, 476, 479, 484, 526, 710], "toi": [470, 626, 929], "02131d959eaa": [470, 481, 482, 891], "millidegre": 470, "parameteriz": [471, 1057], "loop_and_measur": 471, "niter": 471, "w1sensor": [471, 472, 473, 474, 481], "counterpart": 472, "stod": 473, "uniform_real_distribut": [473, 485, 684], "default_random_engin": [473, 485, 684], "random_devic": [473, 485, 684], "_distribut": [473, 684], "_engin": [473, 684, 1080], "_x": [473, 530, 531, 533, 535, 537, 538, 539, 540, 542, 544, 554, 569, 633, 648, 650, 651, 652], "_y": [473, 530, 531, 533, 535, 537, 538, 539, 540, 542, 544, 554, 569, 633, 648, 650, 651, 652], "spit": [473, 1066], "cluster_cxx_exercises_stl": [475, 490, 492, 526, 710], "cluster_cxx_exercises_stl_sensor_repositori": [475, 490, 492, 526, 710], "cluster_cxx_exercises_fh_sensor_first_tri": [475, 526, 710], "cluster_cxx03_except": [475, 490, 492, 526, 552, 555, 571, 577, 581, 590, 593, 594, 611, 618, 619, 620, 621, 622, 623, 710], "cluster_cxx03_functions_and_method": [475, 490, 492, 526, 549, 552, 555, 571, 577, 581, 590, 593, 594, 608, 609, 611, 612, 614, 615, 616, 618, 619, 620, 621, 622, 623, 635, 666, 682, 691, 699, 707, 709, 710], "cluster_cxx03_stl": [475, 490, 492, 526, 571, 577, 581, 589, 590, 591, 593, 594, 611, 618, 619, 620, 621, 622, 623, 710], "cluster_cxx03_stl_associative_contain": [475, 490, 492, 526, 581, 590, 594, 623, 710], "cluster_cxx03_stl_algorithm": [475, 490, 526, 571, 590, 593, 594, 623, 710], "cluster_cxx03_templ": [475, 490, 492, 526, 555, 571, 577, 581, 590, 593, 594, 611, 618, 619, 620, 621, 622, 623, 710], "cluster_linux_basics_permiss": [475, 526, 699, 709, 710, 787, 790, 791, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 853, 882, 884, 892, 894, 908, 911, 914, 916], "cluster_linux_sysprog": [475, 526, 699, 709, 710, 787, 790, 791, 853, 876, 882, 884, 892, 894, 896, 908, 911, 914, 916], "cluster_linux_sysprog_bas": [475, 526, 699, 709, 710, 787, 790, 791, 853, 876, 882, 884, 892, 894, 908, 911, 914, 916], "cluster_linux_sysprog_fileio": [475, 526, 699, 709, 710, 787, 790, 791, 853, 882, 884, 892, 894, 908, 911, 914, 916], "cxx_exercises_hysteresis_nopoli": [475, 476, 526, 710], "cxx_exercises_sensor_w1": [475, 526, 710], "linux_sysprog_fileio_exercise_w1_sensor": [475, 526, 710, 853, 892, 894, 911], "cxx_exercises_sensor_avg_nopoli": [475, 479, 526, 710], "cxx03_data_encapsulation_initializer_list": [475, 479, 485, 526, 534, 623, 710], "cxx_exercises_sensor_random_nopoli": [475, 485, 526, 710], "cxx_exercises_sensor_const_nopoli": [475, 483, 485, 526, 710], "cxx_exercises_sensor_w1_factori": [475, 526, 710], "cxx_exercises_oo_shap": [475, 526, 710], "cxx03_functions_and_methods_method": [475, 490, 492, 526, 549, 552, 555, 571, 577, 581, 590, 593, 594, 611, 612, 614, 615, 616, 618, 619, 620, 621, 622, 623, 635, 666, 682, 691, 699, 707, 709, 710], "cxx03_functions_and_methods_stat": [475, 490, 492, 526, 549, 552, 555, 571, 577, 581, 590, 593, 594, 611, 618, 619, 620, 621, 622, 623, 710], "cxx03_functions_and_methods_const": [475, 490, 492, 526, 549, 552, 555, 571, 577, 581, 590, 593, 594, 611, 614, 615, 618, 619, 620, 621, 622, 623, 635, 666, 682, 691, 699, 707, 709, 710], "cxx03_functions_and_methods_oper": [475, 490, 492, 526, 549, 552, 555, 571, 577, 581, 590, 593, 594, 611, 618, 619, 620, 621, 622, 623, 710], "cxx_exercises_stl_vector": [475, 490, 526, 710], "cxx03_stl_vector_copy_etc": [475, 490, 526, 590, 594, 623, 710], "cxx_exercises_stl_filter_odd": [475, 490, 526, 710], "cxx_exercises_stl_uniq": [475, 490, 526, 710], "cxx_exercises_stl_algo": [475, 490, 526, 710], "cxx03_stl_algorithm_copi": [475, 490, 526, 571, 590, 594, 623, 710], "cxx03_stl_algorithm_find": [475, 490, 526, 571, 590, 594, 623, 710], "cxx_exercises_stl_filter_greater_10": [475, 490, 526, 710], "cxx_exercises_stl_filter_gener": [475, 490, 526, 710], "cxx_exercises_stl_map": [475, 490, 492, 526, 710], "cxx03_stl_associative_containers_map": [475, 490, 492, 526, 581, 590, 594, 623, 710], "cxx_exercises_stl_sensor_repository_size_const": [475, 490, 492, 526, 710], "cxx_exercises_stl_sensor_repository_insert_sunni": [475, 490, 492, 526, 710], "cxx_exercises_stl_sensor_repository_memory_leak": [475, 490, 492, 526, 710], "cxx_exercises_stl_sensor_repository_remove_not_found": [475, 490, 492, 526, 710], "cxx_exercises_stl_sensor_repository_lookup_not_found": [475, 490, 492, 526, 710], "cxx_exercises_stl_sensor_repository_remove_sunni": [475, 490, 492, 526, 710], "cxx_exercises_stl_sensor_repository_insert_no_overwrit": [475, 490, 492, 526, 710], "cxx_exercises_stl_sensor_repository_lookup_sunni": [475, 490, 492, 526, 710], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo": [475, 526, 710], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo_random_sensor": [475, 526, 710], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo_loop_funct": [475, 526, 710], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo_no_polymorph": [475, 526, 710], "cxx03_exceptions_try_catch": [475, 490, 492, 526, 552, 555, 571, 577, 581, 590, 593, 594, 611, 618, 619, 620, 621, 622, 623, 710], "cxx03_exceptions_bas": [475, 490, 492, 526, 552, 555, 571, 577, 581, 590, 593, 594, 611, 618, 619, 620, 621, 622, 623, 710], "cxx03_functions_and_methods_thi": [475, 490, 492, 526, 549, 552, 555, 571, 577, 581, 590, 593, 594, 611, 614, 615, 618, 619, 620, 621, 622, 623, 635, 666, 682, 691, 699, 707, 709, 710], "cxx03_functions_and_methods_overload": [475, 490, 492, 526, 549, 552, 555, 571, 577, 581, 590, 593, 594, 608, 609, 611, 612, 614, 615, 616, 618, 619, 620, 621, 622, 623, 635, 666, 682, 691, 699, 707, 709, 710], "cxx03_functions_and_methods_refer": [475, 490, 492, 526, 549, 552, 555, 571, 577, 581, 590, 593, 594, 611, 614, 615, 618, 619, 620, 621, 622, 623, 635, 666, 682, 691, 699, 707, 709, 710], "cxx03_stl_basic": [475, 490, 492, 526, 571, 577, 581, 590, 593, 594, 611, 618, 619, 620, 621, 622, 623, 710], "cxx03_templates_class_templ": [475, 490, 492, 526, 555, 571, 577, 581, 590, 593, 594, 611, 618, 619, 620, 621, 622, 623, 710], "cxx03_stl_associative_containers_bas": [475, 490, 492, 526, 581, 590, 594, 623, 710], "cxx03_templates_function_templ": [475, 490, 492, 526, 555, 571, 577, 581, 590, 593, 594, 611, 618, 619, 620, 621, 622, 623, 710], "linux_basics_shell_l": [475, 526, 699, 709, 710, 784, 785, 786, 787, 790, 791, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 821, 824, 825, 828, 829, 831, 832, 833, 834, 835, 837, 853, 882, 884, 892, 894, 908, 911, 914, 916], "linux_basics_permissions_bas": [475, 526, 699, 709, 710, 787, 790, 791, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 853, 882, 884, 892, 894, 908, 911, 914, 916], "linux_sysprog_basics_syscal": [475, 526, 699, 709, 710, 787, 790, 791, 853, 876, 882, 884, 892, 894, 908, 911, 914, 916], "linux_sysprog_basics_groupnod": [475, 526, 699, 709, 710, 787, 790, 791, 853, 876, 882, 884, 892, 894, 908, 911, 914, 916], "linux_sysprog_basics_errorhandl": [475, 526, 699, 709, 710, 787, 790, 791, 853, 876, 882, 884, 892, 894, 908, 911, 914, 916], "linux_sysprog_fileio_bas": [475, 526, 699, 709, 710, 787, 790, 791, 853, 882, 884, 892, 894, 908, 911, 914, 916], "thermostat": 476, "threshold": 476, "nop_when_within_rang": 476, "hysteresis_suit": 476, "hyst": 476, "falls_below_rang": 476, "rises_above_rang": 476, "rises_above_range_when_on": 476, "initial_failur": 477, "failit": 477, "point_suit": [477, 546], "ctor_and_gett": 477, "coordin": [477, 528, 530, 537, 538, 648, 879], "ctor_and_getters_const": 477, "default_ctor": [477, 545, 546, 547, 548], "equal_method": 477, "p3": 477, "p4": [477, 817], "assert_fals": [477, 486, 491, 493, 498, 528, 545, 546, 547, 548, 708], "equal_method_const": 477, "operator_equ": 477, "operator_equals_const": 477, "move_method": 477, "operator_plus_equ": 477, "add_method": 477, "new_p": 477, "add_method_const": 477, "operator_plu": [477, 545, 546, 547], "operator_plus_const": 477, "radiu": 477, "circle_suit": 477, "ctor_and_getters_using_operator_equ": 477, "14159": 477, "53981634": 477, "area_const": 477, "square_suit": 477, "bottom_left": [477, 548], "side_length": 477, "shape_suit": 477, "circle_is_a_shap": 477, "square_is_a_shap": 477, "area_is_shape_functionality__circl": 477, "area_is_shape_functionality__squar": 477, "human": [478, 481, 690, 817, 839, 931, 976, 1062], "ineffici": [478, 606, 774, 893], "epath": 478, "bag_copy_suit": [478, 704], "find_by_int_ok": [478, 704, 705, 706], "find_by_int_nok": [478, 704, 705, 706], "remove_by_int_ok": [478, 704, 705, 706], "bag_unique_suit": [478, 706], "bag_shared_suit": [478, 705], "insert_const_ref": [478, 705], "insert_mov": [478, 705], "sensor_avg_nopoly_suit": 479, "unrel": [480, 515, 524, 690, 915, 925, 954, 971, 1072], "tyo": 480, "sensor_const_suit": [480, 481], "is_a_sensor": [480, 481], "sensor_random_suit": [480, 481, 485], "5731": 480, "aptli": 481, "23062": 481, "w1sensorfactori": 481, "find_by_address": 481, "sensor_w1_factory_suit": 481, "fstream": [481, 708], "tmpdir_fixtur": 481, "device_dir": 481, "create_directori": 481, "ofstream": [481, 708], "42459": 481, "temp_milli": [481, 482], "w1_fs_root": 481, "sensor_factori": 481, "0x02131d959eaa": 481, "assert_n": [481, 521, 544, 545, 680, 705, 706], "horizon": 481, "0x012345678901": 481, "w1_sensor_suit": [481, 482], "test_read_sensor": [481, 482], "36700": 481, "basedir": 481, "0x2131d959eaa": 481, "dcmake_toolchain_fil": [482, 932, 946], "20687": 482, "write_temperatur": 482, "thaht": 482, "filename_pattern": 482, "xxxxxx": 482, "mkstemp": 482, "unlink": [482, 923, 925], "to_str": [482, 606], "off_t": [482, 883, 893, 898, 924], "lseek": [482, 893, 898, 924], "seek_set": [482, 883, 898, 924], "nwritten": [482, 887, 888, 889, 890, 895, 898, 924, 928], "sensor_const_nopoly_suit": 483, "subsequ": 484, "sensor_mock_nopoly_suit": 484, "uniformli": 485, "rd": 485, "obtain": [485, 697, 1005], "rng": 485, "tailor": 485, "algo": [486, 520, 521, 556, 557], "copy_into_vector": 486, "stl_exercises_suit": [486, 487, 488, 489, 491, 493, 494, 495, 496, 498, 499, 500, 501, 502], "required_cont": 486, "find_in_vector": 486, "my_vec": [486, 502], "wladimir": 486, "sort_in_plac": 486, "required_output": [486, 487, 488, 489, 501], "orig_input": [486, 487, 488, 489, 501], "alement": 487, "is_odd": 487, "filter_greater_10": 488, "filter_odd": 489, "map_insert": 491, "my_map": [491, 582, 583, 584, 585, 586], "map_insert_simpl": 491, "insert_check_dupl": 491, "map_insert_check_dupl": 491, "insert_remove_by_kei": 491, "map_insert_remove_by_kei": 491, "map_remove_by_kei": 491, "map_find": 491, "sensorrepositori": [492, 493, 494, 495, 496, 497, 498, 499, 500], "decript": 492, "sensor_repository_insert_dupl": 493, "add_sensor": [493, 494, 495, 496, 498, 499], "ofen": [493, 494, 495, 496, 498, 499], "weltraum": [493, 494, 495, 496, 498, 499], "mond": [493, 498], "sucess": 493, "sensor_repository_insert": 494, "sensor_repository_lookup_neg": 495, "get_sensor": [495, 496, 499], "sensor_repository_lookup_posit": 496, "complaint": 497, "ish": 497, "sensor_repository_remove_nonexist": 498, "remove_sensor": [498, 499], "sensor_repository_remov": 499, "sensor_repository_size_const": 500, "vector_append": 502, "vector_join": 502, "joined_cont": 502, "switch_mock_suit": 503, "initial_st": [503, 1104], "set_on_off": 503, "userdb_map": 504, "userdb_vector": 504, "dan": 504, "sak": 504, "cppcon": [504, 631, 633, 634, 647, 654, 672, 683], "transcrib": 504, "mallocfre": 509, "arrayofinteg": 509, "memoryleak": 509, "arrayboundswrit": 509, "newdelet": 509, "singleinteg": 509, "deletemismatch": 509, "thing1": [511, 512], "thing2": [511, 512], "global_str": 512, "__have_thing_h__": 512, "_content": 512, "denstruct": 512, "destruct": [512, 533, 603, 634, 684, 799], "essenc": [512, 1099], "collaps": 515, "thoroughli": [515, 861], "_mem": [518, 664], "determinist": [518, 683, 697, 952, 1003, 1064], "maybeown": 518, "pointerarithmet": 521, "bugp": 521, "105ff": 521, "num_el": 521, "another_arrai": 521, "yet_another_arrai": 521, "108ff": 521, "basics_cxx03": 521, "basics_cxx11": 521, "cbegin": [521, 574, 593, 630, 641], "my_copi": 521, "naivecopi": 521, "cend": [521, 574, 593, 630], "algocopi": 521, "backinsert": 521, "back_insert_iter": [521, 562], "nah": [521, 1101], "insertfind": 521, "make_pair": [521, 584, 587, 675], "erasebyposit": 521, "erasebykei": 521, "domin": 527, "bjarn": 527, "stroustrup": 527, "1985": 527, "2003": [527, 1112], "unif": 527, "point_c_suit": [528, 530], "struct_initi": 528, "point_init_default": 528, "c_default_constructor_init": 528, "point_create_default": 528, "c_default_constructor_cr": 528, "point_creat": [528, 530], "c_constructor": [528, 530], "eq": [528, 544, 546, 548], "point_equ": 528, "point_not_equ": 528, "eq_n": 528, "point_mov": [528, 530, 538, 540], "point_add": 528, "point_sub": 528, "add_sub": 528, "point_dist": 528, "point_ab": [528, 530], "hyp": [528, 530, 538], "unwant": [528, 579, 675, 735, 954, 975, 999], "cpp_copy_suit": 529, "generated_copy_ctor": 529, "copy1": [529, 685], "copy2": [529, 685], "copy3": 529, "copyabl": 529, "manual_copy_suit": 529, "copy_ctor": [529, 684], "assignment_oper": 529, "earlier": 530, "point_h": [530, 538, 539], "point_cpp_suit": 530, "constructor_coordin": 530, "inaccessibil": 530, "move_op_pluseq": 530, "whenev": [531, 538, 548, 634], "sth": 532, "dirty_stack": 532, "use_uniniti": 532, "onward": [532, 536, 543], "nw": 533, "memberwis": 533, "_c_str": [533, 536, 637], "cxx03_data_encapsulation_copy_bas": [534, 623, 710], "cxx03_data_encapsulation_object_copi": [534, 623, 635, 666, 682, 691, 699, 707, 709, 710], "string_h": [536, 637], "cstring": [536, 637, 638, 671], "tcach": [536, 664], "221601": 536, "julian": [536, 685], "seward": [536, 685], "libvex": [536, 685], "rerun": [536, 685], "realloc": [536, 579], "0x484465b": 536, "1103": 536, "0x401210": 536, "0x401194": 536, "0x4dc8c80": 536, "0x401188": 536, "0x484222f": 536, "0x4011c5": 536, "0x40116f": 536, "freed": [536, 716, 886, 952], "destroi": [536, 598, 620, 639, 656, 671, 686, 697, 747], "221807": 536, "twostr": 536, "twotwostr": 536, "s21": 536, "s22": 536, "segfault": [536, 771, 929], "paraamet": 537, "__pretty_function__": 537, "0000000000401176": 537, "_z1fi": 537, "00000000004011a0": 537, "_z1fpc": 537, "demangl": 537, "anywher": [538, 950], "fab": [538, 539], "distance_origin": [538, 539, 689], "prohibit": 538, "hid": 538, "standardes": 538, "d_orig": 539, "fpermiss": [539, 676], "arrog": 539, "goodi": [539, 855], "pascal": 541, "uninitil": 541, "pass_by_copi": 541, "references_suit": 541, "voila": [541, 861, 919, 932, 933, 943, 974], "tediou": [541, 880, 933, 1007], "pass_by_point": 541, "pass_by_refer": 541, "pass_by_const_point": 541, "const_point": 541, "pass_by_const_refer": 541, "const_refer": 541, "pass_by_copy_expens": 541, "copy_expens": 541, "pass_by_const_reference_cheap": 541, "const_reference_cheap": 541, "addend": [542, 669, 689], "straightforwardli": [542, 1012], "add_point": 542, "static_suit": 542, "global_funct": 542, "static_method": 542, "bss": 543, "definition1": 543, "definition2": 543, "forbid": 543, "trickeri": 543, "points_equ": 544, "oddli": 544, "operators_suit": 544, "equals_glob": 544, "difficulti": 544, "equals_object": 544, "vector_addition_glob": 544, "vector_addition_object": 544, "point_plus_equ": 544, "combo": [545, 547], "cuboid_suit": 545, "front_bottom_left": 545, "point_whl_ctor": 545, "operator_eq_n": [545, 546, 547, 548], "operator_pluseq": [545, 546, 547], "operator_minuseq": [545, 547], "operator_minu": [545, 547], "operator_ostream": [545, 546, 547, 548], "buf": [545, 546, 547, 548, 875, 883, 893], "entirei": [545, 547, 548], "starting_point": 546, "implementation_in_cpp_fil": 546, "rectangle_suit": [546, 548], "pluseq": 546, "operator_unary_minu": [546, 547], "minus_p": [546, 547], "point3d_suit": 547, "coordinates_ctor": 547, "071067812": 547, "69041576": 547, "top_right": 548, "top_left": 548, "bottom_right": 548, "rational": [548, 582], "operator_plus_equal_vec": 548, "plus_vec": 548, "cxx03_functions_and_methods_exercise_class_point3d": [549, 623, 710], "cxx03_functions_and_methods_exercise_class_point": [549, 623, 710], "cxx03_functions_and_methods_static_member_vari": [549, 623, 710], "cxx03_functions_and_methods_exercise_class_cuboid": [549, 623, 710], "cxx03_functions_and_methods_exercise_class_rectangl": [549, 623, 710], "dothat": [550, 551], "dothi": [550, 551], "dothos": [550, 551], "dammit": [550, 551, 630], "thisexcept": 551, "thatexcept": 551, "thrown": [551, 928], "myexcept": 551, "error_detect": 551, "granular": [551, 728, 915], "typenam": [553, 554, 636, 643, 644, 645, 646, 648, 650, 651, 652, 657, 678, 684, 688, 698, 700], "a_begin": [557, 559], "a_end": [557, 559], "src_begin": [557, 561], "src_end": [557, 561], "dst_begin": [557, 561], "decai": 558, "zeroth": 558, "unflex": 562, "shrink_to_fit": 562, "prealloc": [562, 563], "gool": [564, 631], "cplusplu": [566, 567, 568, 569, 570, 572, 573, 574, 575, 578, 587], "int_arrai": [566, 568, 572, 575], "binarili": 566, "is_el": 566, "original_begin": 567, "original_end": 567, "copy_run": 567, "original_run": 567, "int_array_c": 568, "match_666": 569, "match_42": 569, "x_equals_666": 569, "x_equals_4": 569, "x_equal": 569, "_criterion": 569, "yesno": [569, 784, 785], "output_stern": 570, "output_bindestrich": 570, "output_with_prefix": 570, "_prefix": 570, "cxx03_stl_algorithm_lower_bound": [571, 590, 594, 623, 710], "cxx03_stl_algorithm_sort": [571, 590, 594, 623, 710], "cxx03_stl_algorithm_binary_search": [571, 590, 594, 623, 710], "cxx03_stl_algorithm_revers": [571, 590, 593, 594, 623, 710], "cxx03_stl_algorithm_for_each": [571, 590, 594, 623, 710], "cxx03_stl_algorithm_reverse_copi": [571, 590, 593, 594, 623, 710], "cxx03_stl_algorithm_find_if": [571, 590, 594, 623, 710], "reversed_": [574, 593], "less_revers": 575, "greater_than": 575, "cluster_cxx03_stl_sequential_contain": [577, 590, 594, 623, 710], "cxx03_stl_sequential_containers_vector": [577, 590, 594, 623, 710], "cxx03_stl_sequential_containers_bas": [577, 590, 594, 623, 710], "cxx03_stl_sequential_containers_list": [577, 590, 594, 623, 710], "liek": 579, "logarithm": 579, "mein_int_arrai": 579, "insert_po": 579, "new_elems_as_vector": 579, "elems_to_insert": 579, "cxx03_stl_associative_containers_multimap": [581, 590, 594, 623, 710], "realiz": [582, 1003], "parameter": [582, 688, 693, 939, 953], "keytyp": [582, 626], "valuetyp": [582, 626], "some_map": 582, "key_typ": [582, 583], "mapped_typ": [582, 583], "value_typ": [582, 583], "emplac": 582, "collis": 582, "zweiundvierzig": 582, "out_of_rang": [582, 586], "mymap": [583, 584, 585, 586], "sechshundersechsundsechzig": 583, "kv": 583, "pre11": [583, 584], "einundfuenfzig": [583, 584, 585, 586], "vierundfuenfzig": [583, 584, 585, 586], "dreihundertsechsundvierzig": [583, 584, 585, 586], "tausendein": [583, 584, 585, 586], "tausendzwei": [583, 584, 585, 586], "retval_7": 584, "retval_2": 584, "n_remov": 585, "found_value_1001": 586, "found_value_666": 586, "found_valu": 586, "joerg_svnr": 587, "caro_svnr": 587, "johanna_svnr": 587, "philipp_svnr": 587, "datenzwilling_von_joerg": 587, "faschingzwil": 587, "meine_map": 587, "datenzwil": 587, "equal_rang": 587, "found_rang": 587, "svnr_notexist": 587, "1234567": 587, "memory_resourc": 588, "cluster_cxx03_stl_alloc": [589, 590, 594, 623, 710], "cxx03_stl_allocator_bas": [589, 590, 594, 623, 710], "cluster_cxx03_stl_exercis": [590, 591, 593, 594, 623, 710], "cluster_cxx03_stl_exercises_reverse_str": [590, 591, 593, 594, 623, 710], "cxx03_stl_exercises_reverse_string_solut": [590, 593, 594, 623, 710], "cxx03_stl_exercises_reverse_string_exercis": [590, 591, 593, 594, 623, 710], "auto_ptr": [595, 634, 1112], "cluster_cxx03_dynamic_memori": [596, 623, 710], "cxx03_dynamic_memory_todo": [596, 623, 710], "inher": [597, 598, 601, 603, 604, 917, 1005], "novirtu": [597, 598, 604], "mantra": [598, 782], "spoiler": [598, 963], "cxx03_inheritance_oo_private_protect": [599, 623, 710], "derived1": 601, "derived2": 601, "countless": 601, "derived3": 601, "unimpl": [601, 967], "polymorp": 603, "strictli": [603, 861, 862, 963], "indirect": [604, 690, 794, 948], "cluster_cxx03_standard_library_miscellanea": [605, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 710], "cxx03_standard_library_miscellanea_str": [605, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 710], "string_suit": 606, "another_hello": 606, "greeting1": 606, "greeting2": 606, "convert_to_signed_integ": 606, "stol": 606, "stoll": 606, "numstr": 606, "stoi": [606, 895, 898], "convert_to_unsigned_integ": 606, "stoull": 606, "stoui": 606, "stoul": 606, "convert_from_someth": 606, "basic_str": [606, 688], "i_str": 606, "ui_str": 606, "d_str": 606, "666000": 606, "sprintf": [606, 895, 898, 928, 929], "print_char": 607, "cluster_cxx03_exercises_misc": [607, 608, 609, 610, 623, 710], "cxx03_exercises_misc_american_flag": [607, 609, 623, 710], "cxx03_exercises_misc_fh_moodle_quiz": [608, 609, 623, 710], "cxx03_exercises_misc_sum_integers_from_stdin": [609, 610, 623, 710], "ctrl": [610, 929, 981], "cluster_cxx03_exercises_userdb": [611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 710], "cxx03_exercises_userdb_user_default_ctor": [611, 618, 619, 620, 621, 622, 623, 710], "cxx03_exercises_userdb_user_const": [611, 614, 615, 618, 619, 620, 621, 622, 623, 710], "cxx03_exercises_userdb_user_simple_method": [611, 612, 614, 615, 616, 618, 619, 620, 621, 622, 623, 710], "cxx03_exercises_userdb_user_const_memb": [611, 612, 613, 614, 615, 616, 618, 619, 620, 621, 622, 623, 710], "cxx03_exercises_userdb_userdb_search_find_if": [611, 619, 620, 623, 710], "cxx03_exercises_userdb_userdb_search": [611, 619, 620, 621, 623, 710], "cxx03_exercises_userdb_userdb_insert": [611, 618, 619, 620, 621, 623, 710], "cxx03_exercises_userdb_userdb_vector_bas": [611, 618, 619, 620, 621, 622, 623, 710], "cxx03_exercises_userdb_user_access_method": [611, 612, 614, 615, 618, 619, 620, 621, 622, 623, 710], "cxx03_exercises_userdb_user_ctor": [611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 710], "cxx03_exercises_userdb_userdb_search_notfound_except": [611, 620, 623, 710], "architecton": 613, "celebr": 616, "trittsich": [616, 617], "age_by_n_year": 616, "user_init": 617, "userdb_insert": 618, "doesnotexist": [619, 621], "isvalid": [619, 620, 621], "unnatur": 620, "_user": [620, 759], "thereaft": 620, "wrinkl": 620, "usernotfound": 620, "unreach": [620, 872], "userdb_search_by_lastnam": 621, "undetect": 621, "userdb_init": 622, "cluster_cxx11": [624, 628, 635, 642, 653, 666, 667, 677, 682, 691, 699, 707, 709, 710], "cluster_cxx11_introduct": [624, 628, 666, 707, 709, 710], "cxx11_introduction_overview_livehack": [624, 709, 710], "cxx11_introduction_histori": [624, 628, 666, 707, 709, 710], "ugliest": 625, "todo_list": 626, "tdl": 626, "desc": 626, "key_value_pair": 626, "up_1_to_10": 626, "down_1000_to_980": 626, "090": 626, "todo_item": 626, "make_shar": [626, 687, 705], "todolist": 626, "nocopi": 626, "add_item": 626, "_list": 626, "evangelist": 626, "cstdint": [627, 656], "wchar_t": 627, "cluster_cxx11_new_language_featur": [628, 635, 642, 653, 666, 667, 677, 682, 691, 699, 707, 709, 710], "cluster_cxx11_new_language_features_brace_initi": [628, 666, 707, 709, 710], "cxx11_new_language_features_strongly_typed_enum": [628, 666, 707, 709, 710], "cxx11_new_language_features_auto": [628, 666, 707, 709, 710], "cxx11_new_language_features_brace_initialization_intro": [628, 666, 707, 709, 710], "cxx11_new_language_features_brace_initialization_mess": [628, 666, 709, 710], "cxx11_new_language_features_brace_initialization_implementor_view": [628, 666, 709, 710], "pointcloud": [629, 631], "_point": 629, "data_": [630, 632], "memoriz": 630, "brace_initialization_suit": 631, "explicit_ctor_cal": 631, "initlist_ctor_cal": 631, "explicit_ctor": 631, "initlist_ctor": 631, "disabigu": 631, "nightmar": [631, 634, 948], "size_": 632, "constexpr_suit": 633, "basic_const_is_constexpr": 633, "constexpr_function_request": 633, "constexpr_function_not_request": 633, "constexpr_recursive_funct": 633, "6765": 633, "constexpr_ctor": 633, "schurr": 633, "olsen": [634, 683], "nicolai": [634, 676, 679], "josutti": [634, 676, 679], "smartptr": [635, 666, 684, 685, 709, 710], "cluster_cxx11_new_language_features_move_pf": [635, 666, 682, 691, 699, 707, 709, 710], "cluster_cxx11_smart_point": [635, 666, 682, 691, 699, 707, 709, 710], "cxx11_perfect_forward": [635, 666, 709, 710], "cxx11_new_language_features_move_pf_overview": [635, 666, 682, 691, 699, 707, 709, 710], "cxx11_new_language_features_miscellan": [635, 666, 682, 691, 699, 707, 709, 710], "cxx11_smart_pointers_unique_ptr": [635, 666, 682, 691, 699, 707, 709, 710], "cxx11_new_language_features_move_pf_afterword": [635, 666, 709, 710], "cxx11_new_language_features_move_pf_livehack_using_string_mov": [635, 666, 709, 710], "cxx11_new_language_features_move_pf_livehack_string_mov": [635, 666, 709, 710], "cxx11_smart_pointers_introduct": [635, 666, 682, 691, 699, 707, 709, 710], "_p": [636, 684, 950], "handwritten_suit": [636, 684], "explicit_mov": [636, 684], "assert_double_eq": [636, 684, 685], "create_constant_sensor": [636, 686], "prove": [636, 796], "return_by_copi": 636, "another_sensor": 636, "assigne": 636, "dubiou": 636, "bugfre": 637, "string_move_suit": 637, "make_a_string_from": 637, "ret_": 637, "move_return": 637, "move_assign": 637, "assig": 637, "person_h": 638, "person_suit": 638, "contructor": 638, "outliv": [639, 950], "rvr": 639, "ado": [641, 900, 1067], "mytyp": 641, "spellabl": 641, "0x7ffcd604846c": 641, "0x7ffcd6048468": 641, "iref": 641, "0x7ffffefe2b54": 641, "0x7ffffefe2b50": 641, "0x7ffc59ebd7bc": 641, "ciref": 641, "0x7ffc23e46284": 641, "0x7ffe4a148064": 641, "0x7ffc528e013c": 641, "cluster_cxx11_new_language_features_concept": [642, 666, 709, 710], "cxx11_new_language_features_concepts_writing_concept": [642, 666, 709, 710], "cxx11_new_language_features_concepts_intro": [642, 666, 709, 710], "cxx11_new_language_features_concepts_link": [642, 666, 709, 710], "conceptless": 643, "4ul": [643, 644], "4l": [643, 644], "satisfact": 643, "is_integral_v": 643, "_tp": [643, 676, 686], "hendrik": 647, "niemey": 647, "hypotenus": [648, 649, 650, 651, 652], "sumsq": [648, 649, 650, 651, 652], "point2d": [648, 650, 651, 652], "dozen": 648, "ruin": 648, "5l": 648, "same_a": 648, "commone_reference_with": 648, "common_reference_with": [648, 652], "has_siz": [651, 652], "index_returns_doubl": 652, "cluster_cxx11_new_language_features_coroutin": [653, 666, 709, 710], "cxx11_new_language_features_coroutines_intro": [653, 666, 709, 710], "stackless": 654, "asio": 654, "co_return": [654, 658, 659, 660, 661, 662], "hello_inst": [654, 658, 659, 660, 661, 662], "promise_typ": [654, 656, 657, 659, 660, 661, 662], "get_return_object": [654, 656, 657, 659, 660, 661, 662], "suspend_alwai": [654, 656, 657, 659, 660, 661, 662], "initial_suspend": [654, 656, 657, 659, 660, 661, 662], "final_suspend": [654, 656, 657, 659, 660, 661, 662], "return_void": [654, 657, 659, 660, 661, 662], "unhandled_except": [654, 656, 657, 659, 660, 661, 662], "suspend_nev": [654, 656, 657, 661], "coroutine_handl": [654, 656, 657, 660, 661, 662], "from_promis": [654, 656, 657, 660, 661, 662], "_coro": [654, 656], "yield_valu": [654, 656, 657, 660, 661, 662], "sentinel": [654, 657, 661, 662, 676], "_promis": [654, 657, 660, 661, 662], "glue": 654, "deciph": 654, "diagrammat": 654, "wei": 654, "co_yield": [655, 656, 657, 658, 660, 661, 662], "_elem": 656, "ed": [657, 660, 661, 662, 846, 883], "lackingdefaultconstructor": 663, "ldc": 663, "hasdefaultconstructor": 663, "hmpf": 663, "hdc": 663, "ownsmemori": 664, "om_copi": 664, "incontin": 665, "leaf": [665, 836], "method1": 665, "method2": 665, "cluster_cxx11_new_language_features_lambda": [666, 667, 709, 710], "cluster_cxx11_new_language_features_rang": [666, 677, 709, 710], "cxx11_new_language_features_delet": [666, 709, 710], "cxx11_new_language_features_range_based_for_map": [666, 709, 710], "cxx11_new_language_features_range_based_for": [666, 707, 709, 710], "cxx11_new_language_features_delegating_ctor": [666, 709, 710], "cxx11_new_language_features_livehack_smartptr_mov": [666, 709, 710], "cxx11_smart_pointers_introduction_livehack": [666, 682, 709, 710], "cxx11_new_language_features_default": [666, 709, 710], "cxx11_new_language_features_modul": [666, 709, 710], "cxx11_new_language_features_overrid": [666, 709, 710], "cxx11_new_language_features_constexpr": [666, 709, 710], "cxx11_new_language_features_fin": [666, 709, 710], "cxx11_new_language_features_structured_bind": [666, 709, 710], "cxx11_new_language_features_lambda_lambda_captur": [666, 667, 709, 710], "cxx11_new_language_features_lambda_lambda": [666, 667, 709, 710], "cxx11_new_language_features_lambda_lambda_is_functor": [666, 667, 709, 710], "cxx11_new_language_features_lambda_lambda_is_functor_pitfal": [666, 667, 709, 710], "cxx11_new_language_features_ranges_intro": [666, 677, 709, 710], "cxx11_new_language_features_ranges_good_bad": [666, 677, 709, 710], "cxx11_new_language_features_ranges_link": [666, 677, 709, 710], "elsewher": [668, 757, 957], "lamda": 668, "print_messag": [668, 670, 671], "create_print_funct": [668, 670, 671], "constantli": [669, 774, 916], "mere": 669, "catur": 669, "akin": 669, "lambda_capture_suit": 669, "explicit_by_copi": 669, "lambda_capure_suit": 669, "explicit_by_refer": 669, "dubio": 669, "explicit_mix": 669, "initialized_captur": 669, "all_by_refer": 669, "all_by_copi": 669, "all_by_copy_except": 669, "this_captur": 669, "_i": [669, 689], "add_to_yourself_and_guarantee_programmers_job_secur": 669, "print_message_func": [670, 671], "_messag": [670, 671], "piti": 671, "mpp": 672, "precompil": [672, 757, 931], "speedup": 672, "rei": 672, "bori": 672, "kolpackov": 672, "abandon": 672, "inde": 674, "range_based_for_suit": 675, "map_pre_11": 675, "map_bas": 675, "map_basic_const_auto_refer": 675, "ific": [675, 680], "map_unpack_copi": 675, "map_unpack_refer": 675, "map_unpack_const_refer": 675, "min_el": 676, "forward_rang": [676, 678], "drop_view": 676, "filter_view": 676, "ref_view": 676, "ranges_util": 676, "view_interfac": 676, "_deriv": 676, "sized_sentinel_for": 676, "decltyp": 676, "__cust": 676, "declval": 676, "__cust_access": 676, "__begin": 676, "_s_size": 676, "_m_deriv": 676, "forward_iter": 676, "coll": 676, "2nd": [676, 1101], "__cxx11": [676, 688], "_vp": 676, "__simple_view": 676, "random_access_rang": [676, 678], "sized_rang": 676, "pretend": 676, "comitte": [676, 679], "lazili": 678, "first_two_drop": 678, "first_two_dropped_next_two_taken": 678, "oldstyl": 678, "inspir": 678, "refin": 678, "input_rang": 678, "bidirectional_rang": 678, "backward": [678, 732, 817, 849, 854, 980, 1088], "contiguous_rang": 678, "tristan": 679, "brindl": 679, "cppnorth": 679, "l0bhzp6hmdm": 679, "nico": 679, "accu": 679, "rust": [679, 931], "parrai": 680, "decompos": 680, "structured_binding_suit": 680, "struct_copi": 680, "struct_refer": 680, "struct_const_refer": 680, "tuple_copi": 680, "make_tupl": 680, "affect": 680, "tuple_refer": 680, "tuple_const_refer": 680, "array_copi": 680, "array_refer": 680, "array_const_refer": 680, "suspici": 680, "designwis": 681, "uptr": 681, "cxx11_smart_pointers_weak_ptr": [682, 707, 709, 710], "cxx11_smart_pointers_shared_ptr": [682, 691, 699, 707, 709, 710], "cxx11_smart_pointers_closing_word": [682, 691, 699, 709, 710], "myclass": [683, 685], "unwind": 683, "yoky6hzlkx": 683, "steal": [684, 917], "cxx11_unique_ptr_sensors_h": 684, "_temp": 684, "basic_const": 684, "raw_": 684, "raw_s_ref": 684, "copy_ctor_bad": 684, "assignment_operator_bad": 684, "gtest_filt": [684, 685, 1099], "reveal": [684, 950], "vtabl": 684, "autoptr": 684, "copy_ctor_good_autoptr_styl": 684, "unexpectedli": 684, "assignment_operator_good_autoptr_styl": 684, "destiat": 684, "excus": 685, "shared_ptr_suit": 685, "rs1": [685, 686], "rs2": [685, 686], "rand1": [685, 686, 687], "rand2": [685, 686, 687], "cann": 685, "basic_make_shar": 685, "set_refer": 685, "_ref": 685, "cyclic_refer": 685, "303549": 685, "unique_ptr_suit": 686, "threw": 686, "ownership_error": 686, "cxx11": 686, "unique_ptr_suite_ownership_error_test": 686, "testbodi": 686, "_dp": 686, "default_delet": 686, "verbose_ctor": 686, "make_unique_auto": 686, "tranfer": 686, "create_random_sensor": 686, "implicit_ownership_transf": 686, "holdsasensor": 686, "taking_ownership_in_own_cod": 686, "sompil": 686, "raw1": 686, "tie": 687, "unti": 687, "weak_ptr_suit": 687, "borrowed_sensor": 687, "another_refer": 687, "sensor_ref": 687, "measurement_thread": 687, "rvref": 688, "lo_funct": 688, "adventur": 688, "grimm": 688, "jaud": 688, "factset": 688, "570f242261f8": 688, "suffer": [689, 862], "origin_dist": 689, "criteria": [689, 801, 1088], "predic": 689, "void_funct": 689, "bind_suit": 689, "plain_void_funct": 689, "one_parameter_funct": 689, "plain_one_parameter_funct": 689, "minus_hardcod": 689, "_1_minus_2": 689, "minus_swap_paramet": 689, "second_minus_first": 689, "_2": [689, 690], "minus_hardcode_first_paramet": 689, "_42_minus_param": 689, "funcfunc": 689, "tradeoff": [689, 762], "oneimplement": 690, "anotherimplement": 690, "do_much_work": 690, "c_using_on": 690, "c_using_anoth": 690, "explanatori": 690, "trampolin": 690, "rtti": 690, "pod": 690, "metaphys": 690, "ostreamlogg": 690, "databaselogg": 690, "logfunc_t": 690, "funcptrlogg": 690, "somebusinessclasswithneedforlog": 690, "successfulli": [690, 777, 792, 1087, 1094], "do_stupid_log": 690, "ostream_logg": 690, "database_logg": 690, "funcptr_logg": 690, "busy_logging_to_ostream": 690, "busy_logging_to_databas": 690, "busy_logging_to_funcptr": 690, "foo_func": 690, "explos": 690, "cluster_cxx11_functions_funct": [691, 699, 709, 710], "cxx11_functions_functions_bind": [691, 699, 709, 710], "cxx11_functions_functions_funct": [691, 699, 709, 710], "msdn": 692, "devil": 692, "singlethread": 692, "god": 692, "paralleliz": 693, "cancel": [693, 907], "interlockedincr": 695, "mutual": [696, 965], "try_lock": 696, "try_lock_for": 696, "unavail": 696, "try_lock_until": 696, "time_point": [696, 701], "do_something_errorpron": 697, "do_more_of_it": 697, "wake": [698, 739, 749, 880, 904, 913, 919], "waiter": [698, 749, 774, 904], "stop_wait": 698, "wait_for": [698, 700], "wait_until": [698, 700], "notify_on": 698, "notify_al": 698, "broadcast": [698, 855, 862, 904, 929, 1129], "thunder": 698, "herd": 698, "condvar": 698, "threadsafequeu": 698, "maxelem": 698, "_maxelem": 698, "dur": [698, 700], "scoped_lock": [698, 700], "_lock": [698, 700], "pop_front": 698, "2m": [698, 700, 854], "1m": [698, 782, 854], "consumer1": 698, "consumer2": 698, "pthread_cond_init": [698, 904], "_not_empti": 698, "_not_ful": 698, "pthread_cond_wait": [698, 904], "pthread_cond_sign": [698, 904], "pthread_cond_t": [698, 904], "unique_lock": 698, "cluster_linux_sysprog_posix_thread": [699, 709, 710, 853, 894, 908, 914], "cluster_linux_sysprog_blocking_io": [699, 709, 710, 787, 790, 791, 853, 882, 894, 908, 914, 916], "cluster_linux_sysprog_schedul": [699, 709, 710, 853, 894, 908, 914, 916], "cluster_cxx11_multithread": [699, 709, 710], "linux_sysprog_posix_threads_exercise_mutex": [699, 709, 710, 853, 894, 908], "linux_sysprog_posix_threads_mutex": [699, 709, 710, 853, 894, 908, 914], "linux_sysprog_posix_threads_exercise_pthcreate_racecondit": [699, 709, 710, 853, 894, 908, 914], "linux_sysprog_posix_threads_lifecycl": [699, 709, 710, 853, 894, 908, 914], "linux_sysprog_posix_threads_bas": [699, 709, 710, 853, 894, 908, 914], "linux_sysprog_posix_threads_condition_vari": [699, 709, 710, 853, 894, 908], "linux_sysprog_scheduling_bas": [699, 709, 710, 853, 894, 908, 914, 916], "linux_sysprog_blocking_io_blocking_io": [699, 709, 710, 787, 790, 791, 853, 882, 894, 908, 914, 916], "cxx11_multithreading_mutex": [699, 709, 710], "cxx11_multithreading_race_condit": [699, 709, 710], "cxx11_multithreading_introduct": [699, 709, 710], "cxx11_multithreading_promise_futur": [699, 709, 710], "cxx11_multithreading_thread": [699, 709, 710], "cxx11_multithreading_scoped_lock": [699, 709, 710], "cxx11_multithreading_chrono": [699, 709, 710], "cxx11_multithreading_atom": [699, 709, 710], "cxx11_multithreading_condition_vari": [699, 709, 710], "get_futur": 700, "set_except": 700, "exception_ptr": 700, "shared_futur": 700, "uncoordin": 700, "ten_million_years_": 700, "answer_poll_interval_m": 700, "answer_valid": 700, "chew_answ": 700, "timespec": [700, 904, 915, 925], "reaction": [700, 872, 954], "answer_computation_tim": 700, "answer_poll_interv": 700, "ten_million_year": 700, "lockguard": 700, "_answer_valid": 700, "_answer": 700, "_data": [700, 945], "binary_semaphor": 700, "__cplusplu": 700, "202001l": 700, "_notifi": 700, "answer_promis": 700, "answer_futur": 700, "make_exception_ptr": 700, "epoch": [701, 924], "time_t": 701, "notion": 701, "system_clock": 701, "monoton": [701, 765, 767], "ntp": 701, "steady_clock": 701, "timepoint": 701, "steadili": 701, "high_resolution_clock": 701, "brand": 701, "spent_milli": 701, "duration_cast": 701, "bagcopi": 704, "find_by_int": [704, 705, 706], "remove_by_int": [704, 705, 706], "nremov": [704, 705, 706], "bagshar": 705, "item2": [705, 706], "weakref": 705, "sharedref": 705, "baguniqu": 706, "constbag": 706, "cluster_cxx11_exercis": [707, 709, 710], "cxx11_exercises_bag_uniqu": [707, 709, 710], "cxx11_exercises_bag_copi": [707, 709, 710], "cxx11_exercises_bag_shar": [707, 709, 710], "withing": 708, "filesystem_suit": 708, "cd_to_tmpdir_fixtur": 708, "path_compose_compar": 708, "path_compose_compare_2": 708, "is_absolut": 708, "is_rel": 708, "path_abs_rel": 708, "abspath": 708, "relpath": 708, "parent_path": 708, "remove_filenam": 708, "replace_filenam": 708, "replace_extens": 708, "path_component_access": 708, "filename_part": 708, "dir_part": 708, "path_iter": 708, "current_directori": 708, "cwd_chdir": 708, "current_path": 708, "create_directory_error": 708, "filesystem_error": 708, "create_directory_singl": 708, "is_regular_fil": 708, "create_directory_multipl": 708, "is_directori": 708, "is_block_fil": 708, "is_character_fil": 708, "is_empti": 708, "is_fifo": 708, "is_oth": 708, "is_socket": 708, "is_symlink": 708, "greatest": 708, "nov": [708, 747, 813, 839, 861, 945, 981, 1010], "inod": [708, 716, 723], "919153": 708, "0644": [708, 802, 816], "system_u": 708, "object_r": 708, "passwd_file_t": 708, "s0": 708, "111282886": 708, "0100": 708, "737858445": 708, "743858359": 708, "file_s": 708, "hard_link_count": 708, "last_write_tim": 708, "ext4": [708, 757], "btrf": 708, "ntf": 708, "directory_iter": 708, "subdir1": 708, "subdir2": 708, "file1": [708, 726, 842], "file2": [708, 726, 842], "dirit": 708, "recursive_directory_iter": 708, "cxx11_filesystem": [709, 710], "cluster_linux_toolchain_cross": [710, 853, 935, 936, 938, 940, 941, 942], "cluster_linux_toolchain_raspi": [710, 853, 936, 938, 941, 942], "cluster_linux_toolchain_exercis": [710, 853, 936, 937, 938, 939, 940, 941], "cluster_linux_ssh": [710, 853, 865, 866, 867, 868, 869, 941, 942], "cluster_linux_ssh_exercis": [710, 853, 865, 866, 867, 868, 869], "cluster_linux_basics_archiving_compress": [710, 780, 787, 853, 941, 942], "cluster_linux_basics_shell_exercis": [710, 784, 785, 786, 787, 821, 822, 823, 824, 825, 826, 827, 828, 829, 831, 832, 833, 834, 835, 837, 853], "cluster_linux_basics_shell_exercises_cp_mv_mkdir_rm": [710, 784, 785, 786, 787, 821, 822, 823, 824, 825, 826, 827, 828, 829, 831, 837, 853], "cluster_linux_basics_shell_exercises_l": [710, 787, 831, 832, 833, 834, 835, 837, 853], "cluster_linux_basics_permissions_exercis": [710, 787, 803, 806, 807, 808, 809, 810, 811, 812, 853], "cluster_linux_basics_text_tool": [710, 787, 847, 853], "cluster_linux_basics_io_redir_pip": [710, 787, 798, 853], "cluster_linux_basics_exercis": [710, 784, 785, 786, 787, 853], "cluster_linux_sysprog_process": [710, 853, 894], "cluster_linux_sysprog_intro_hw": [710, 853, 894, 896], "cluster_linux_hardwar": [710, 853, 859, 860], "cluster_linux_hardware_can": [710, 853, 859, 860], "cluster_linux_kernel": [710, 714, 717, 719, 722, 724, 727, 729, 731, 733, 734, 736, 738, 740, 742, 744, 746, 748, 750, 752, 754, 756, 758, 761, 763, 766, 768, 772, 775, 778, 853], "cluster_unittest": [710, 1097], "linux_toolchain_shared_librari": [710, 853, 941], "linux_basics_intro_environ": [710, 787, 791, 837, 853, 894, 941, 942], "linux_toolchain_cmake_cross": [710, 853, 941], "linux_toolchain_cross_bas": [710, 853, 935, 936, 938, 940, 941, 942], "linux_toolchain_raspi_linaro_pi": [710, 853, 941, 942], "defunct": [710, 853, 941, 942], "linux_ssh_bas": [710, 853, 865, 866, 867, 868, 869, 941, 942], "linux_ssh_scp": [710, 853, 865, 866, 867, 869, 941, 942], "linux_basics_archiving_compression_tar": [710, 780, 787, 853, 941, 942], "linux_toolchain_raspi_docker_fedora_wsl": [710, 853, 941, 942], "linux_toolchain_raspi_detail": [710, 853, 941, 942], "linux_toolchain_raspi_toolchain_setup": [710, 853, 936, 938, 941, 942], "linux_toolchain_exercises_fh_moodle_quiz": [710, 853, 937, 938, 941], "linux_toolchain_exercises_native_build": [710, 853, 938, 939, 941], "linux_toolchain_exercises_raspberry_toolchain": [710, 853, 938, 940, 941], "linux_toolchain_exercises_cross_build": [710, 853, 936, 938, 941], "linux_basics_intro_login": [710, 787, 791, 803, 806, 807, 808, 809, 810, 811, 812, 853, 865, 866, 867, 868, 869, 941, 942], "linux_ssh_key_pair": [710, 853, 865, 866, 867, 868, 869], "linux_ssh_link": [710, 853, 869], "linux_ssh_sshf": [710, 853, 869], "linux_ssh_portforward": [710, 853, 869], "linux_ssh_exercises_copy_tre": [710, 853, 866, 867, 869], "linux_ssh_exercises_copy_fil": [710, 853, 865, 866, 867, 869], "linux_ssh_exercises_pubkei": [710, 853, 865, 866, 867, 868, 869], "linux_basics_archiving_compression_gzip": [710, 780, 787, 853, 941, 942], "linux_basics_archiving_compression_overview": [710, 780, 787, 853, 941, 942], "linux_basics_archiving_compression_exercis": [710, 780, 787, 853], "linux_basics_intro_process_tre": [710, 787, 791, 803, 806, 807, 808, 809, 810, 811, 812, 853, 865, 866, 867, 868, 869, 894, 941, 942], "linux_basics_intro_demo_everything_is_a_fil": [710, 787, 790, 791, 853], "linux_sysprog_blocking_io_blocking_io_fil": [710, 787, 790, 791, 853, 882, 894], "linux_basics_intro_wsl": [710, 787, 791, 853], "linux_basics_intro_fh_moodle_quiz": [710, 787, 790, 791, 853], "linux_basics_shell_cp": [710, 784, 785, 786, 787, 821, 822, 824, 825, 828, 829, 831, 837, 853], "linux_basics_shell_link": [710, 787, 837, 853], "linux_basics_shell_fh_moodle_quiz": [710, 787, 830, 837, 853], "linux_basics_shell_configfil": [710, 787, 837, 853], "linux_basics_shell_mv": [710, 787, 837, 853], "linux_basics_shell_exercises_cp_mv_mkdir_rm_echo_copy_fil": [710, 787, 821, 822, 825, 828, 829, 831, 837, 853], "linux_basics_shell_exercises_cp_mv_mkdir_rm_mkdir_p_rm_r": [710, 784, 785, 786, 787, 821, 822, 823, 824, 825, 826, 828, 829, 831, 837, 853], "linux_basics_shell_exercises_cp_mv_mkdir_rm_echo_create_fil": [710, 784, 785, 786, 787, 821, 822, 823, 824, 825, 828, 829, 831, 837, 853], "linux_basics_shell_exercises_cp_mv_mkdir_rm_rm_tre": [710, 787, 825, 828, 831, 837, 853], "linux_basics_shell_exercises_cp_mv_mkdir_rm_copy_tre": [710, 787, 821, 825, 828, 831, 837, 853], "linux_basics_shell_exercises_cp_mv_mkdir_rm_verify_hierarchi": [710, 787, 821, 825, 828, 829, 831, 837, 853], "linux_basics_shell_exercises_cp_mv_mkdir_rm_rm_rf": [710, 787, 825, 827, 831, 837, 853], "linux_basics_shell_exercises_cp_mv_mkdir_rm_echo_move_fil": [710, 787, 821, 824, 825, 828, 829, 831, 837, 853], "linux_basics_shell_exercises_ls_etc_passwd_s": [710, 787, 831, 833, 834, 837, 853], "linux_basics_shell_exercises_ls_dev_typ": [710, 787, 831, 832, 834, 837, 853], "linux_basics_shell_exercises_ls_home_permiss": [710, 787, 831, 834, 835, 837, 853], "linux_basics_permissions_sticki": [710, 787, 812, 853], "linux_basics_permissions_umask": [710, 787, 812, 853], "linux_basics_permissions_setuid_livedemo": [710, 787, 812, 853], "linux_basics_permissions_setuid": [710, 787, 812, 853], "linux_basics_permissions_fh_moodle_quiz": [710, 787, 804, 812, 853], "linux_basics_permissions_fh_moodle_quiz_nocheat": [710, 787, 805, 812, 853], "linux_basics_permissions_exercises_public_directory_quest": [710, 787, 806, 810, 812, 853], "linux_basics_permissions_exercises_public_directori": [710, 787, 806, 809, 810, 812, 853], "linux_basics_permissions_exercises_credenti": [710, 787, 803, 806, 807, 808, 809, 810, 811, 812, 853], "linux_basics_permissions_exercises_private_directori": [710, 787, 806, 807, 808, 812, 853], "linux_basics_permissions_exercises_private_directory_quest": [710, 787, 806, 808, 812, 853], "linux_basics_permissions_exercises_shared_fil": [710, 787, 806, 811, 812, 853], "linux_basics_text_tools_exercis": [710, 787, 847, 853], "linux_basics_text_tools_cat": [710, 787, 847, 853], "linux_basics_text_tools_cut": [710, 787, 847, 853], "linux_basics_text_tools_grep": [710, 787, 847, 853], "linux_basics_text_tools_head_tail": [710, 787, 847, 853], "linux_basics_text_tools_less": [710, 787, 847, 853], "linux_basics_text_tools_find": [710, 787, 847, 853], "linux_basics_text_tools_overview": [710, 787, 847, 853], "linux_basics_io_redir_pipes_pip": [710, 787, 798, 853], "linux_basics_io_redir_pipes_io_redir": [710, 787, 798, 853], "linux_basics_io_redir_pipes_io_redir_swap_stdout_stderr": [710, 787, 798, 853], "linux_basics_io_redir_pipes_exercis": [710, 787, 798, 853], "linux_basics_exercises_fh_ss2022_exam_01_g1": [710, 784, 786, 787, 853], "linux_basics_exercises_fh_ss2022_exam_01_g2": [710, 785, 786, 787, 853], "linux_sysprog_sign": [710, 853, 894], "linux_sysprog_ipc": [710, 853, 894], "linux_sysprog_ev": [710, 853, 894], "linux_sysprog_scheduling_realtim": [710, 853, 894, 914, 916], "linux_sysprog_scheduling_wakeup_lat": [710, 853, 894, 914, 916], "linux_sysprog_scheduling_exam_quest": [710, 853, 894, 914, 916], "linux_sysprog_scheduling_processes_and_thread": [710, 853, 894, 914, 916], "linux_sysprog_scheduling_realtime_api": [710, 853, 894, 914], "linux_sysprog_blocking_io_blocking_io_network": [710, 853, 882, 894], "linux_sysprog_blocking_io_blocking_io_tim": [710, 853, 882, 894], "linux_sysprog_posix_threads_mutex_trylock": [710, 853, 894, 908], "trylock": [710, 853, 894, 902, 908], "islock": [710, 853, 894, 902, 908], "linux_sysprog_posix_threads_last_warn": [710, 853, 894, 908], "linux_sysprog_posix_threads_miscellan": [710, 853, 894, 908], "linux_sysprog_posix_threads_exercise_condition_vari": [710, 853, 894, 908], "linux_sysprog_process_commandlin": [710, 853, 894], "linux_sysprog_process_tre": [710, 853, 894], "linux_sysprog_fileio_dupl": [710, 853, 892, 894, 911], "linux_sysprog_fileio_example_o_wronli": [710, 853, 892, 894, 911], "linux_sysprog_fileio_example_o_rdonli": [710, 853, 892, 894, 911], "o_rdonli": [710, 715, 853, 879, 883, 884, 887, 890, 891, 892, 894, 895, 898, 911, 921, 924, 928], "linux_sysprog_fileio_misc": [710, 853, 892, 894, 911], "linux_sysprog_fileio_fileio_group": [710, 853, 892, 894, 911], "linux_sysprog_fileio_basics_exercise_copi": [710, 853, 884, 892, 894, 911], "linux_sysprog_fileio_basics_exercise_hol": [710, 853, 892, 894, 911], "linux_sysprog_fileio_example_o_creat": [710, 853, 892, 894, 911], "linux_sysprog_fileio_example_o_excl": [710, 853, 892, 894, 911], "o_excl": [710, 853, 883, 884, 892, 894, 911, 924], "linux_sysprog_intro_hw_get": [710, 853, 894, 896], "linux_sysprog_intro_hw_sysfs_gpio": [710, 853, 894, 896], "linux_sysprog_intro_hw_watch": [710, 853, 894, 896], "linux_hardware_i2c": [710, 853, 860], "linux_hardware_brushless_motor": [710, 853, 860], "brushless": [710, 853, 860], "linux_hardware_pwm": [710, 853, 860], "linux_hardware_w1": [710, 853, 860], "linux_hardware_can_program": [710, 853, 859, 860], "linux_hardware_can_intro": [710, 853, 859, 860], "linux_hardware_can_interfac": [710, 853, 859, 860], "linux_hardware_can_hardwar": [710, 853, 859, 860], "linux_kernel_stub_sysprog_dup": [710, 717, 719, 724, 727, 734, 738, 748, 761, 766, 772, 775, 778, 853], "dup": [710, 716, 717, 719, 724, 727, 734, 738, 748, 761, 766, 772, 775, 778, 800, 853, 886, 925], "stub": [710, 717, 719, 724, 727, 734, 738, 748, 761, 766, 772, 775, 778, 853, 944], "linux_kernel_timer_cod": [710, 734, 766, 772, 775, 778, 853], "linux_kernel_spinlock_cod": [710, 734, 761, 766, 772, 775, 778, 853], "linux_kernel_tim": [710, 734, 766, 768, 772, 775, 778, 853], "linux_kernel_spinlock": [710, 734, 761, 763, 766, 772, 775, 778, 853], "linux_kernel_interrupt_cod": [710, 734, 738, 761, 766, 772, 775, 778, 853], "linux_kernel_process_vs_atom": [710, 719, 724, 727, 729, 734, 738, 740, 744, 748, 750, 752, 754, 756, 761, 763, 766, 768, 772, 775, 778, 853], "linux_kernel_cdev_file_oper": [710, 717, 719, 724, 727, 734, 738, 748, 761, 766, 772, 775, 778, 853], "linux_kernel_cdev_auto": [710, 714, 717, 719, 724, 727, 734, 738, 748, 761, 766, 772, 775, 778, 853], "linux_kernel_cdev_manu": [710, 714, 717, 719, 722, 724, 727, 734, 738, 748, 761, 766, 772, 775, 778, 853], "linux_kernel_waitqueu": [710, 734, 775, 853], "linux_kernel_usermem": [710, 734, 772, 775, 853], "linux_kernel_workqueu": [710, 734, 772, 775, 778, 853], "linux_kernel_cdev_refactor": [710, 724, 727, 734, 738, 748, 761, 766, 772, 775, 778, 853], "linux_kernel_cdev_first_function": [710, 719, 724, 727, 734, 738, 748, 761, 766, 772, 775, 778, 853], "linux_kernel_list": [710, 719, 724, 727, 734, 738, 746, 748, 761, 766, 772, 775, 778, 853], "doubli": [710, 719, 723, 724, 727, 734, 738, 747, 748, 759, 761, 766, 772, 775, 778, 853], "linux_kernel_kmalloc": [710, 719, 724, 727, 729, 734, 738, 748, 752, 754, 761, 766, 772, 775, 778, 853], "linux_kernel_mutex_cod": [710, 734, 738, 748, 761, 766, 772, 775, 778, 853], "linux_kernel_multiple_devic": [710, 724, 734, 738, 748, 761, 766, 772, 775, 778, 853], "linux_kernel_mutex": [710, 734, 738, 748, 750, 761, 766, 772, 775, 778, 853], "linux_kernel_fedora_module_build": [710, 714, 717, 719, 722, 724, 727, 733, 734, 736, 738, 742, 748, 754, 761, 766, 772, 775, 778, 853], "linux_kernel_fedora_kernel_build": [710, 714, 717, 719, 722, 724, 727, 731, 733, 734, 736, 738, 742, 748, 754, 761, 766, 772, 775, 778, 853], "linux_kernel_iomemori": [710, 734, 742, 754, 853], "linux_kernel_modules_hello_world": [710, 714, 717, 719, 722, 724, 727, 734, 736, 738, 742, 748, 754, 761, 766, 772, 775, 778, 853], "linux_kernel_netdev": [710, 734, 752, 853], "linux_kernel_dma": [710, 729, 734, 752, 754, 853], "linux_kernel_interrupt": [710, 734, 738, 740, 752, 754, 761, 766, 772, 775, 778, 853], "linux_kernel_pci": [710, 734, 754, 853], "linux_kernel_raspi_kernel_build": [710, 734, 738, 758, 761, 766, 772, 775, 778, 853], "unittest_gtest_cmak": [710, 1097], "interconnect": 711, "device_cr": [712, 713, 716], "cdev_init": [712, 720, 721], "cdev_add": [712, 720, 721], "unhappi": 712, "device_destroi": 712, "my_class": 712, "my_driv": [712, 715, 725, 726, 737, 747, 753, 759, 765, 776], "mknod": [712, 720, 721], "character devic": [713, 716, 721, 1117], "relatim": 713, "register_chrdev_region": [713, 720, 721], "alloc_chrdev_region": [713, 721], "htmldoc": 713, "chrdev": 713, "dev_t": [713, 721], "baseminor": 713, "highlight": 713, "bug_on": 713, "module_licens": [713, 735], "openat": [715, 879], "at_fdcwd": [715, 879], "0x7f3d11330000": 715, "einval": [715, 720, 735, 773], "enotti": 715, "file_oper": [716, 720, 721, 759], "citizenship": 716, "__user": [716, 771], "loff_t": 716, "unlocked_ioctl": 716, "my_op": 716, "this_modul": 716, "my_open": 716, "my_read": 716, "my_writ": 716, "my_ioctl": [716, 747], "mode_t": [716, 883, 887, 925], "filp": [716, 759, 773], "vf": 716, "swiss": [716, 883, 1112], "armi": [716, 883, 1112], "my_ioctl_request": [716, 718], "my_request_such": 716, "my_request_such_and_such": 716, "laden": [716, 1126], "endod": 716, "_iow": 716, "_ior": 716, "_ioc": 716, "_ioc_non": 716, "_ioc_read": 716, "_ioc_typecheck": 716, "_ioc_writ": 716, "_iowr": 716, "my_ev": [718, 725, 726, 765, 770], "my_event_typ": 718, "my_event_ioctl": 718, "jiffi": [718, 759, 765], "my_event_list": [718, 725, 726, 747], "list_head": [718, 745, 747, 770], "num_ev": 718, "my_event_list_init": 718, "my_event_list_destroi": 718, "my_event_list_add": [718, 747, 760, 765, 776], "my_ioctl_add_ev": 718, "printk": [718, 735, 737, 776], "unregister_chrdev_region": [720, 721], "caveat": [720, 759, 862], "register_chrdev": 720, "unregister_chrdev": 720, "kern_err": 720, "cdev_del": [720, 721], "my_driver_henkel": 720, "kmem": 721, "opaqu": 721, "majmin": 721, "mkdev": 721, "drivernam": 721, "my_fop": 721, "my_cdev": 721, "devicefil": 721, "ndevic": 723, "module_param": 723, "my_devic": [723, 725, 726, 737, 753, 765], "private_data": [723, 753, 759], "kbuild": [725, 726], "torn": [725, 1104], "ccflag": [725, 726], "container_of": [726, 777], "file3": 726, "distinct": [726, 793, 877, 1004], "my_device_init": 726, "my_device_destroi": [726, 765], "everyt": 728, "vmalloc": 728, "ioremap": [728, 741], "iommu": 728, "pysic": 728, "dma_addr_t": 728, "alloc_pag": 728, "gfp_mask": 728, "get_free_pag": 728, "__get_free_pag": 728, "2order": 728, "__get_dma_pag": 728, "zone": 728, "__free_pag": 728, "free_pag": 728, "addr": [728, 741, 753, 857, 862, 880, 924, 1092], "dma_handl": 728, "cpu_addr": [728, 753], "dma_alloc_coher": 728, "gfp": [728, 743, 769], "dma_free_coher": 728, "pci_dev": [728, 753], "gfp_kernel": [728, 743, 760], "gfp_atom": [728, 743], "dma_bidirect": 728, "dma_to_devic": 728, "dma_from_devic": 728, "dma_map_singl": 728, "dma_mapping_error": 728, "fuck": 728, "dma_unmap_singl": 728, "dma_map_pag": 728, "dma_unmap_pag": 728, "dma_address": 728, "sglist": 728, "sg_run": 728, "dma_map_sg": 728, "for_each_sg": 728, "hw_address": 728, "sg_dma_address": 728, "hw_len": 728, "sg_dma_len": 728, "dma_unmap_sg": 728, "nent": 728, "unmap": [728, 753], "recreat": [728, 829, 947], "dma_sync_single_for_cpu": 728, "dma_sync_sg_for_cpu": 728, "mel": [728, 743], "gorman": [728, 743], "incredibli": 728, "transcript": [730, 757, 1054], "building_a_custom_kernel": 730, "fc33": [730, 735], "extravers": [730, 758], "cleanli": 730, "uncommit": 730, "j6": 730, "fedpkg": 730, "pesign": 730, "grubbi": 730, "33rd": 730, "f33": 730, "builddep": 730, "libexec": [730, 943], "symver": [732, 735], "modpost": [732, 735], "module_src": 732, "kernel_build": 732, "install_mod_path": [732, 757], "modules_instal": [732, 757, 861], "fedora_kernel_build": 734, "fedora_module_build": 734, "modules_hello_world": 734, "cdev_manu": 734, "process_vs_atom": 734, "stub_sysprog_dup": 734, "cdev_auto": 734, "cdev_file_oper": 734, "cdev_first_function": 734, "cdev_refactor": 734, "multiple_devic": 734, "mutex_cod": 734, "raspi_kernel_build": 734, "interrupt_cod": 734, "spinlock_cod": 734, "timer_cod": 734, "iomemori": 734, "usermem": 734, "netdev": 734, "waitqueu": [734, 1117], "ldd3": [734, 745], "reilli": [734, 846], "probe": [735, 861, 862, 863], "hello_init": 735, "kern_debug": 735, "hello_exit": 735, "module_init": 735, "module_exit": 735, "exot": 735, "currect": [735, 830], "lsmod": [735, 861, 862, 863], "insmod": 735, "modprob": [735, 757, 758, 856, 861, 862, 863], "rmmod": [735, 765], "dep": 735, "softdep": 735, "rebuilt": 735, "depmod": [735, 753], "cross_compil": [737, 757, 758], "libssl": [737, 861], "gpio_request": 737, "gpio_fre": 737, "gpio_direction_input": 737, "gpio_direction_output": 737, "gpio_to_irq": 737, "my_device_activate_gpio": 737, "_destroi": 737, "3f200000": 737, "pinctrl": 737, "bcm2835": [737, 858], "request_irq": [737, 739, 753], "free_irq": [737, 739, 753], "priorit": [739, 755, 855, 913, 925], "preempt_rt": [739, 749, 1107], "mainlin": [739, 757, 917, 1107], "irqreturn_t": [739, 753], "irq_handl": [739, 753], "irq": [739, 753, 755, 759, 915], "opqu": 739, "irq_non": 739, "irq_wake_thread": 739, "irq_handler_t": 739, "irqf_shar": [739, 753], "irqf_trigger_ris": 739, "irqf_trigger_fal": 739, "irqf_trigger_high": 739, "irqf_trigger_low": 739, "iomem": 741, "ioport": 741, "request_mem_region": 741, "0x20200000": 741, "release_mem_region": 741, "asm": [741, 946], "iounmap": 741, "ioread8": 741, "ioread16": 741, "ioread32": 741, "iowrite8": 741, "u8": 741, "iowrite16": 741, "u16": 741, "iowrite32": 741, "u32": 741, "kmalloc kfre": 743, "dynamic memori": 743, "slab": 743, "gfp_t": [743, 760, 776], "kzalloc": 743, "kfree": 743, "scarc": 743, "discourag": 743, "stolen": [745, 854], "some_list": 745, "init_list_head": 745, "some_data": 745, "list_add": 745, "list_add_tail": 745, "new_payload": 745, "existing_payload": 745, "prepend": [745, 757, 789, 992], "list_for_each": 745, "list_entri": 745, "cursor": [745, 817, 1067], "run_payload": 745, "list_empti": 745, "list_first_entri": 745, "list_del": [745, 747], "a_payload": 745, "inject": [747, 760, 765, 1070], "opfer": 747, "corrupt": 747, "ffff91285ae68f00": 747, "ffff9128406cec00": 747, "list_debug": 747, "0x70": [747, 862], "0xb0": 747, "0xdd": 747, "ksys_ioctl": 747, "0x82": 747, "0xc0": 747, "__x64_sys_ioctl": 747, "do_syscall_64": 747, "0x4d": 747, "entry_syscall_64_after_hwfram": 747, "0x44": 747, "0xa9": 747, "unprotect": [747, 759, 975], "nevent": [747, 770], "my_device_list": 747, "preemptibl": [749, 917], "preemption": [749, 755, 762, 862, 913, 916, 917], "holder": [749, 973], "mutex_init": 749, "mutex_destroi": 749, "mutex_lock": 749, "mutex_lock_interrupt": 749, "eintr": [749, 875, 928, 929], "mutex_lock_interruptible_nest": 749, "mutex_trylock": 749, "eagain": [749, 759, 773], "mutex_unlock": 749, "torvald": [749, 757], "trickl": 749, "rtmutex": 749, "rt_mutex": 749, "net_devic": 751, "alloc_netdev": 751, "sizeof_priv": 751, "netdev_priv": 751, "funcion": 751, "ethernet": 751, "etherdevic": 751, "alloc_etherdev": 751, "free_netdev": 751, "register_netdev": 751, "unregister_netdev": 751, "devinc": 751, "hard_start_xmit": 751, "sk_buff": 751, "skb": 751, "transmiss": [751, 880, 1051], "tx_timeout": 751, "quota": [751, 783], "stead": 751, "do_ioctl": 751, "ifreq": [751, 857], "ifr": [751, 857], "netif_start_queu": 751, "netif_stop_queu": 751, "netif_wake_queu": 751, "udevd": 753, "pci_device_id": 753, "my_id": 753, "pci_devic": 753, "0xdead": 753, "0xbeef": 753, "0xbeee": 753, "module_device_t": 753, "my_prob": 753, "my_remov": 753, "my_suspend": 753, "pm_message_t": 753, "my_resum": 753, "my_shutdown": 753, "pci_driv": 753, "id_tabl": 753, "my_init": 753, "pci_register_driv": 753, "my_exit": [753, 962], "pci_unregister_driv": 753, "subsystem_vendor": 753, "subsystem_devic": 753, "u64": [753, 767], "dma_mask": 753, "device_count_resourc": 753, "pci_enable_devic": 753, "pdev": 753, "wizardri": 753, "pci_request_region": 753, "pci_set_mast": 753, "pci_clear_mast": 753, "pci_set_dma_mask": 753, "pci_set_drvdata": 753, "ioread": 753, "iowrit": 753, "pci_resource_len": 753, "bar_no": 753, "__iomem": 753, "pci_iomap": 753, "pci_iounmap": 753, "pci_alloc_consist": 753, "os_devic": 753, "_o": 753, "dma_addr": 753, "pci_free_consist": 753, "_size": 753, "_cpu_addr": 753, "t_os_dma_addr__get_n": 753, "_dma_addr": 753, "_os_devic": 753, "dma_bit_mask": 753, "pci_set_consistent_dma_mask": 753, "config_debug_atomic_sleep": [755, 760], "cross compil": 757, "educ": 757, "raspberrypi": [757, 758, 861, 933, 940], "borrow": 757, "pi2": 757, "1gb": 757, "canon": [757, 874], "workstat": 757, "boil": 757, "hf": 757, "armv6j": 757, "hardfloat": 757, "gnueabi": 757, "objcopi": 757, "raspberry_pi": 757, "local_overlai": 757, "ebuild": 757, "binutil": [757, 758], "repo_nam": 757, "9999": 757, "sourcedir": 757, "builddir": 757, "buildparam": 757, "kconfig": 757, "zconf": 757, "raspbian": 757, "bootdir": 757, "bootf": 757, "rootf": 757, "kernel7": 757, "Then": [757, 872, 1074], "assimil": 757, "bcmrpi_defconfig": 757, "bcm2709_defconfig": 757, "config_localvers": 757, "config_ikconfig": 757, "eveytim": 757, "config_can_mcp251x": 757, "config_sensors_lm73": 757, "zimag": [757, 758, 861], "dtb": [757, 758, 861], "j3": 757, "mkknlimg": 757, "te": 757, "superus": 757, "jtf": 757, "bcm2709": 757, "smi": 757, "ft5406": 757, "can1": [757, 856], "v7": [757, 758], "ipv4": [757, 1129], "xfrm4_mode_beet": 757, "inet_lro": 757, "esp4": 757, "xfrm4_mode_transport": 757, "udp_tunnel": 757, "sdb": 757, "57344": 757, "sdb1": 757, "4162560": 757, "sdb2": 757, "enjoi": 757, "ec2aa3d2": 757, "eee7": 757, "454e": 757, "d145df5ddcba": 757, "agnost": 757, "urg": 757, "rasperri": [758, 861, 863, 1116, 1123], "patchlevel": 758, "sublevel": 758, "_morph": [759, 769], "my_driver_hello": 759, "my_driver_cdev_manu": 759, "my_driver_cdev_dynamic_major": 759, "my_driver_cdev_file_oper": 759, "my_driver_cdev_first_function": 759, "my_driver_cdev_refactor": 759, "my_driver_multiple_devic": 759, "my_driver_mutex": 759, "my_driver_interrupt": 759, "my_driver_spinlock_atom": 759, "my_driver_time_tim": 759, "my_driver_workqueu": 759, "my_driver_usermem": 759, "copy_": 759, "my_driver_waitqueu": 759, "nonblock": [759, 773, 925, 1129], "spinlock_t": [760, 762], "isr": [760, 917, 1117], "spin_unlock": [760, 762], "reenabl": 760, "uniprocessor": 762, "multiprocessor": 762, "spin_lock_init": 762, "spin_lock": 762, "spin_trylock": 762, "irqflag": 762, "spin_lock_irqsav": 762, "spin_unlock_irqrestor": 762, "pend": [765, 794, 917, 930], "my_inject_deferred_ev": 765, "my_device_add_deferred_ev": 765, "del_timer_sync": [765, 767], "paranoia": 765, "symmetri": 765, "my_device_add_ev": 765, "my_inject_ev": 765, "tick": 767, "config_hz": 767, "friendli": [767, 1005, 1077, 1081], "hz": 767, "hrtimer": 767, "jiffies_to_msec": 767, "jiffies_to_usec": 767, "jiffies_to_nsec": 767, "msecs_to_jiffi": 767, "usecs_to_jiffi": 767, "timespec64_to_jiffi": 767, "timespec64": 767, "jiffies_to_timespec64": 767, "timer_list": 767, "my_tim": 767, "timerfunc": 767, "timer_setup": 767, "add_tim": 767, "del_tim": 767, "0520": 769, "0521": 769, "0525": 769, "0532": 769, "0710": 769, "preempt": [769, 913, 917], "caption": 769, "backlink": 769, "my_event_nod": 770, "my_get_one_ev": [770, 773], "my_device_get_one_ev": 770, "my_event_get_one_ev": 770, "efault": [770, 771], "uaccess": 771, "copy_to_us": 771, "copy_from_us": 771, "enosi": 773, "timerfd": [773, 881, 921], "f_flag": 773, "wait_queue_head_t": 774, "wq": [774, 776, 777], "init_waitqueue_head": 774, "sched": 774, "wait_ev": 774, "wait_event_interrupt": 774, "wait_event_timeout": 774, "timeout_jiffi": 774, "wait_event_interruptible_timeout": 774, "wake_up": 774, "wake_up_interrupt": 774, "task_interrupt": 774, "create_workqueu": [776, 777], "destroy_workqueu": [776, 777], "eo": 776, "rtprio": 776, "work_struct": [776, 777], "init_work": [776, 777], "chrt": [776, 917], "postpon": 777, "workqueue_struct": 777, "work_func_t": 777, "queue_work": 777, "packen": 779, "gunzip": 781, "zgrep": 781, "zcat": 781, "zless": 781, "intact": [781, 1030, 1034], "viro": 782, "cpio": 782, "cleaner": 782, "archivformat": 782, "lzma": 782, "430mb": 782, "95mb": 782, "74mb": 782, "5m": [782, 854], "64mb": 782, "togeht": 783, "ceph": 783, "gfs2": 783, "zcf": 783, "decompress": [783, 943], "zxf": 783, "ztf": 783, "dirt": 783, "livingroom": 783, "grumbl": 783, "reat": 783, "tract": 783, "ell": [783, 817], "vv": 783, "supplementari": [784, 785, 792, 794], "1021": [784, 785, 792], "somefil": [784, 785, 823], "chgrp": [784, 785, 802, 809, 811], "fellow": [784, 785], "picki": [784, 785, 967], "ttyusb1": 788, "stick": [788, 792], "2006854": 788, "sdc": 788, "2006823": 788, "deserv": [788, 846, 907, 933], "trash": [788, 817], "burn": [788, 863], "1mib": 788, "1mibf": 788, "0m": [788, 839, 915], "mkf": 788, "entropi": 788, "my_vari": 789, "1034184": 789, "1035812": 789, "ancestor": [789, 795, 873], "decriptor": [790, 889], "getti": 792, "kerbero": [792, 794], "gnome3": 792, "agetti": 792, "cleartext": [792, 813], "shadow": [792, 813, 889, 996, 1033], "brute": [792, 870, 933], "crack": 792, "attack": [792, 870, 948, 1070, 1115], "hierarch": 793, "peripher": [793, 1116, 1123], "grand": 793, "ten_integ": 794, "unfair": [794, 917], "dialout": [794, 889], "seg": 794, "kbyte": 794, "62715": 794, "819200": 794, "pstree": 795, "modemmanag": 795, "journ": 795, "abrtd": 795, "auditd": 795, "bluetoothd": 795, "cupsd": 795, "lau": 795, "firewalld": 795, "fwupd": 795, "constrain": 795, "tini": [795, 931], "enemi": 796, "guidanc": 796, "outlook": 796, "dicdat": 796, "acknowledg": [796, 854], "seamless": [796, 1083], "vmware": 796, "exampk": 796, "altruism": 796, "mkfifo": [797, 801], "stdin_fileno": [799, 883, 893, 929, 1005], "stdout_fileno": [799, 879, 880, 883, 889, 915, 924, 928, 929, 1005], "stderr_fileno": [799, 883, 1005], "religi": 799, "fed": 799, "filefor": 799, "sudoer": 800, "weekli": 800, "compet": [801, 862], "award": [801, 848], "plumber": 801, "sniff": 801, "fifo": [801, 883, 1128], "rendezv": 801, "unnam": 801, "chown": [802, 814, 945], "useradd": [802, 945], "groupadd": 802, "usermod": 802, "groupmod": 802, "teammember42": 802, "manfromthestreet": 802, "jun": [802, 933], "triplet": 802, "1003": 802, "110100100": 802, "110000000": 802, "0600": 802, "111101101": 802, "0755": 802, "bitmask": [802, 813, 929], "1317": 813, "mdmckqvpfaqquqypvzjjkihsbkkcniogknxtiobvbfw8u7zuf3": 813, "0g2rqr9cnydnqq5unt": 813, "wpu8jyzeuxktapl0": 813, "burnout": 813, "retyp": 813, "rwsr": [813, 814], "32712": 813, "rwxrwxrwx": 813, "4755": [813, 814], "uid_t": 814, "getuid": 814, "geteuid": 814, "rwxrwxr": [814, 879, 931, 932, 933], "24456": 814, "drwxrwxrwt": 815, "0022": 816, "strain": 817, "injuri": 817, "diseas": 817, "outout": 817, "20k": 817, "olevel": 817, "debugopt": 817, "expr1": 817, "expr2": 817, "daystart": 817, "regextyp": 817, "synopsi": 817, "findu": 817, "til": 817, "findutil": 817, "pression": 817, "print0": 817, "keystrok": 817, "noob": [817, 978], "pos1": 817, "misconfigur": 817, "esc": 817, "freak": 817, "cvsserver": 817, "gitview": 817, "oesterreich": 817, "clearanc": 817, "e7d76d19": 817, "dd3d": 817, "4d52": 817, "2c16dc73f9d1_vstv_921302213705_2021___vstvf": 817, "boardingpass_1d9xf3dvd1uzt00tsswu68duh": 817, "gif": [817, 1071], "einkommensteuerbescheid1": 817, "boardingpass_b6uy9xqgeojspx1hxshogcbbq": 817, "einkommensteuervorauszahlungsbescheid1": 817, "immobilienbewertung": 817, "etw": 817, "confirm": 817, "ova": 817, "umsatzsteuerbescheid1": [817, 839, 840], "h0020211105124337": 817, "vk9vst311192021_0022021": 817, "img_": 819, "jpg": 819, "bilder": 819, "121751": 820, "op": [820, 1006], "garbage1": [821, 822, 824, 828, 829], "garbage2": [821, 822, 824, 828, 829], "diretori": 823, "sweetheart": [823, 829, 836, 910], "citi": 823, "mqueue": [832, 924], "leavel": 836, "hintingx": 839, "1048576": 839, "drwx": [839, 841], "36817": 839, "umsatzsteuerbescheid": 840, "finanzamt": 840, "abgab": 840, "neighbor": [841, 1062], "enat": 842, "dereferenzieren": 844, "50k": [844, 845], "rekursiv": 845, "eintr\u00e4g": 845, "unterhalb": 845, "gefiltert": 845, "un\u00fcblich": 845, "gebr\u00e4uchlich": 845, "geh\u00f6ren": 845, "mmin": 845, "h\u00f6chsten": 845, "gefundenem": 845, "eintrag": 845, "heissen": 845, "beginnen": 845, "versteht": 845, "vergessen": 845, "j\u00fcnger": 845, "verkn\u00fcpft": 845, "metacharact": [845, 864], "gr\u00f6\u00dfer": 845, "lobal": 846, "egular": 846, "xpression": 846, "rint": 846, "sed": [846, 1116, 1123], "tream": 846, "itor": 846, "verb": 846, "insensit": [846, 1082], "entor": 846, "perlr": 846, "perlretut": 846, "perlrequick": 846, "jeffrei": 846, "friedl": 846, "philosopi": 850, "toether": 850, "hc": 850, "325324": 850, "xarg": 850, "bitbak": 852, "behan": 852, "webster": 852, "drone": 854, "electronic speed control": 854, "vehicl": 854, "rack": 854, "recognit": [854, 1062], "flight": 854, "wire": [854, 864, 943], "fritz": [854, 862], "brigh": 854, "heinrich": 854, "pwmchip0": [854, 862], "pwm0": [854, 862], "duty_cycl": [854, 862], "polar": 854, "uevent": [854, 861, 862, 863, 897], "puls": [854, 1116, 1123], "cheapest": 854, "quicrun": 854, "16bl30": 854, "brake": 854, "voltag": [854, 861], "11v": 854, "conclud": [854, 862], "lipo": 854, "madli": 854, "transmitt": 854, "throttl": 854, "neutral": [854, 1067], "chop": 854, "kindli": [854, 1071], "mechatron": 854, "50hz": 854, "duti": [854, 862], "nanosecond": [854, 862, 881], "20000000": [854, 965], "oscil": 854, "10bl60": 854, "000n": 854, "1500000": [854, 919], "2000000": 854, "1550000": 854, "1600000": 854, "acceler": 854, "1650000": 854, "1700000": 854, "1750000": 854, "1800000": 854, "1850000": 854, "1900000": 854, "1950000": 854, "logist": [854, 1062], "hobbi": 854, "can bu": [855, 856, 857, 858], "sinowatz": [855, 955], "donat": 855, "volkswagen": 855, "traffic": 855, "octet": 855, "arbitr": 855, "can_fram": [855, 857], "canid_t": [855, 857], "can_id": [855, 857], "eff": [855, 857], "rtr": [855, 857], "__u8": [855, 857], "can_dlc": [855, 857], "__attribute__": [855, 857], "can0": [856, 857], "noarp": 856, "qdisc": 856, "qlen": 856, "bitrat": 856, "relic": 856, "cansend": 856, "candump": 856, "canplay": 856, "cangen": 856, "snif": 856, "loopback": 856, "pf_can": 857, "sockaddr_can": 857, "sock_raw": 857, "can_raw": 857, "ifr_nam": 857, "siocgifindex": 857, "can_famili": 857, "af_can": 857, "can_ifindex": 857, "ifr_ifindex": 857, "sockaddr": [857, 880], "can_socket": 857, "packt": 857, "frame_layout": 857, "ib3x8": 857, "frame_s": 857, "calcsiz": 857, "recvfrom": 857, "sendto": 857, "lnxpp": 858, "can2udp": 858, "openwrt": 858, "asymmetrisch": 858, "mosi": 858, "miso": 858, "sclk": 858, "broadcom": 858, "ce0": 858, "3v": [858, 861], "5v": [858, 861], "transceiv": 858, "inter intergrated circuit": 861, "lm-sensor": 861, "handwork": [861, 863], "texa": 861, "maker": 861, "dtparam": [861, 862, 863], "i2c_arm": [861, 862, 863], "gpio2": 861, "gpio3": 861, "i2c_bcm2835": [861, 862, 863], "fe804000": [861, 863, 897], "i2c_dev": [861, 862], "sot": 861, "7v": 861, "rail": 861, "capacitor": 861, "idc": 861, "gnd": [861, 863], "vdd": 861, "smbdat": 861, "smbclk": 861, "unconnect": 861, "0x49": 861, "0x4a": 861, "jumper": 861, "3v3": [861, 863], "scl": [861, 863], "probl": 861, "i2c_slav": 861, "0x0703": 861, "o_rdwr": [861, 883, 890, 924], "msb_lsb": 861, "msb": 861, "lsb": [861, 932], "65535": 861, "dev_fd": 861, "perror": [861, 875, 879, 880, 881, 887, 888, 889, 890, 895, 898, 915, 921, 924, 928], "libncurs": 861, "bcm2711_defconfig": 861, "prebuilt": 861, "v7l": 861, "semiconductor": 861, "j4": 861, "kernel7l": 861, "new_devic": [861, 863], "0048": 861, "modalia": 861, "preinstal": 861, "hwmon0": 861, "thermal": 861, "thermal_zone0": 861, "hwmon1": [861, 863], "hwmon2": 861, "temp1_input": [861, 863], "temp1_max": 861, "temp1_max_alarm": 861, "temp1_min": 861, "temp1_min_alarm": 861, "update_interv": 861, "milli": [861, 863], "22000": 861, "randomli": [861, 863], "nomenclatur": 861, "pulse width modul": 862, "resistor": 862, "bright": 862, "potentiomet": 862, "ssop": 862, "ground": [862, 863], "0b1000000": 862, "buse": [862, 863], "i2cdetect": [862, 863], "charactr": 862, "pca": 862, "simultan": [862, 928], "peculiar": 862, "pca9685a": 862, "nxp": 862, "dtoverlai": [862, 863], "pwm_pca9685": 862, "regmap_i2c": 862, "3f804000": 862, "0040": [862, 897], "butt": [862, 943], "npwm": 862, "unexport": [862, 897], "intercept": [862, 954], "dim": 862, "300000": [862, 1060], "fade": 862, "800000": [862, 1060], "600000": [862, 1060], "50000": 862, "apolog": 862, "kenel": 862, "devlop": 862, "pleasur": 862, "cornerston": 863, "unstabl": 863, "parasit": 863, "bitbang": 863, "gpiopin": 863, "profession": 863, "addon": 863, "pinout": 863, "01144fe43baa": 863, "w1_bus_master8": 863, "w1_bus_master1": 863, "breadboard": [863, 1116, 1123], "amaz": 863, "400000000000": 863, "800000000000": 863, "behalf": [863, 877, 931], "ad0": 863, "ad1": 863, "ad2": 863, "vcc": 863, "0x18": 863, "0b0011000": 863, "shortli": [863, 954], "execstart": 863, "36864": 863, "w1_bus_master2": 863, "w1_bus_master3": 863, "w1_bus_master4": 863, "w1_bus_master5": 863, "w1_bus_master6": 863, "w1_bus_master7": 863, "busno": 863, "abtract": 863, "prepackag": 863, "afford": 863, "alarm": [863, 927, 930], "conv_tim": 863, "w1_slave_driv": 863, "eeprom": 863, "ext_pow": 863, "w1_slave": 863, "22750": 863, "crc": 863, "rpi_volt": 863, "isa": 863, "in0": 863, "cpu_therm": 863, "temp1": 863, "w1_slave_temp": 863, "reliabl": 863, "radiou": 863, "disappear": 863, "0c4000000000": 863, "0x28": 863, "dalla": [863, 891], "02131d9920aa": 863, "5d": 863, "011432f138f9": 863, "misbehavior": 863, "instabl": 863, "pump": 863, "nuclear": 863, "plant": 863, "ssh-keygen": [864, 870], "password authent": [864, 870], "key based authent": [864, 870], "remote login": [864, 870], "unencrypt": 864, "rlogin": 864, "telnet": 864, "nsa": 864, "primarili": [864, 957, 1079], "sftp": 864, "portno": 864, "unabl": 864, "propaget": 864, "sha256sum": 865, "72c18232434d0551af75f964ea66ae5d9271faba895f40a929fb17f19d7ab44c": 865, "mitm": 870, "uncomfort": 870, "keygen": 870, "safeguard": 870, "unrespons": 871, "port forward": 872, "portforward": 872, "secure copi": [872, 873], "hmmm": 872, "whateer": 872, "mydocu": 873, "recus": 873, "mobil": 873, "bandwidth": 873, "mediat": 873, "realist": 873, "descriptiotn": 873, "file system": 874, "network file system": 874, "smb": 874, "crawl": 874, "debianish": 874, "mountpoint": 874, "grant": 874, "idmap": 874, "errnum": 875, "strerror_r": 875, "buflen": 875, "cleanest": 875, "_r": 875, "reentrant": 875, "syscal": 877, "getaddrinfo": 877, "ri": 879, "nbytes_read": [879, 880, 881], "24608": 879, "1024root": 879, "nager": 879, "698nager": 879, "gatewai": 880, "peer": [880, 883], "netinet": 880, "af_inet": 880, "sock_stream": 880, "sockaddr_in": 880, "sin_famili": 880, "sin_port": 880, "inet_aton": 880, "sin_addr": 880, "ipproto_ip": 880, "sa_famili": 880, "inet_addr": 880, "10hallo": 880, "16thi": 880, "ong": 880, "14ong": 880, "timerfd_settim": 881, "itimerspec": [881, 915], "nasti": [882, 915], "ingenu": 883, "smae": 883, "o_append": 883, "o_cloexec": 883, "sigpip": [883, 929], "whenc": 883, "seek_cur": 883, "seek_end": 883, "occupi": [883, 885, 886], "status": 884, "srcfile": 884, "dstfile": 884, "1073741825": 885, "0k": 885, "texttt": 886, "dup2": 886, "oldfd": 886, "newfd": 886, "o_": 886, "bytes_to_writ": [887, 888, 890], "wxr": 887, "o_tmpfil": 887, "speci": 887, "pli": 887, "nread": [889, 895, 898, 921, 924, 928], "thats": [889, 890], "litter": 890, "misspel": 890, "24625": 891, "24562": 891, "pread": 893, "pwrite": 893, "readv": 893, "writev": 893, "uio": 893, "iovec": 893, "iov": 893, "iovcnt": 893, "preadv": 893, "pwritev": 893, "ftruncat": [893, 924, 925], "filedescriptor": 893, "gpio26": [895, 897, 898], "subtre": 897, "fe200000": 897, "gpiochip488": 897, "gpiochip504": 897, "active_low": 897, "fd_set": [898, 921], "exc_fd": 898, "fd_zero": [898, 921], "nreadi": 898, "fd_isset": [898, 921], "eek": 898, "intens": 899, "ppid": 899, "tid": 899, "tsd": 899, "spezif": 899, "_reentrant": 899, "lpthread": [899, 915, 934], "start_routin": 900, "pthread_exit": 900, "pthread_cancel": 900, "pthread_attr_setdetachst": 900, "detachst": 900, "pthread_create_detach": 900, "pthread_detach": 900, "pthread_self": 900, "pthread_equ": 900, "30650": 900, "13961": 900, "correl": 900, "gettid": 900, "pthread_mutexattr_t": [902, 918], "pthread_mutex_destroi": 902, "pthread_mutex_trylock": 902, "global_mutex": 902, "pthread_mutexattr_settyp": 902, "pthread_mutex_norm": 902, "pthread_mutex_errorcheck": 902, "pthread_mutex_recurs": 902, "pthread_mutex_default": 902, "pthread_cond_destroi": 904, "pthread_cond_broadcast": 904, "parlanc": 904, "set_autoreset_ev": 904, "ev": 904, "is_set": 904, "wait_autoreset_ev": 904, "acquiriert": 904, "autoreset": 904, "spuriou": 904, "woken": 904, "pthread_condattr_t": 904, "pthread_cond_initi": 904, "pthread_cond_timedwait": 904, "abstim": 904, "use_glob": 906, "pthread_once_t": 906, "global_onc": 906, "pthread_once_init": 906, "init_glob": 906, "pthread_onc": 906, "once_control": 906, "init_routin": 906, "pthread_key_cr": 906, "__thread": 906, "pthread_atfork": 907, "legales": 907, "lock_rac": 909, "succeed": [909, 1099], "foreground": [910, 963], "huh": 910, "paradox": 910, "setenv": 912, "putenv": 912, "unsetenv": 912, "clearenv": 912, "customvar": 912, "timesl": 913, "starv": 913, "throughput": 913, "sha1": [913, 916, 932], "voluntarili": [913, 916], "lrt": 915, "app_statu": 915, "tick_count": 915, "update_statu": 915, "sigact": [915, 928, 929], "sa_handl": [915, 928, 929], "sigrtmin": 915, "sigev": [915, 925], "sev": 915, "sigev_notifi": 915, "sigev_sign": 915, "sigev_signo": 915, "timer_t": 915, "tspec": 915, "nsec": 915, "timer_settim": 915, "diverg": 915, "show_statu": 915, "freerto": [915, 918], "syncron": 915, "update_status_func": 915, "initial_t": 915, "interval_t": 915, "show_status_func": 915, "update_task": 915, "show_task": 915, "231765": 915, "225819": 915, "5635": 915, "lwp": 915, "231766": 915, "231767": 915, "tracer": 915, "restart_syscal": 915, "clock_nanosleep": 915, "clock_realtim": 915, "500000000": 915, "033": 915, "7m": 915, "flash_func": 915, "is_revers": 915, "flash_task": 915, "flasher": 915, "indepen": 915, "toggl": 915, "fore": [915, 965], "particularli": 916, "suscept": 916, "renic": 917, "din": 917, "44300": 917, "echtzeitbetrieb": 917, "betrieb": 917, "rechensystem": 917, "verarbeitung": 917, "anfallend": 917, "st\u00e4ndig": 917, "derart": 917, "betriebsbereit": 917, "da\u00df": 917, "verarbeitungsergebniss": 917, "innerhalb": [917, 1129], "vorgegebenen": 917, "zeitspann": 917, "000014": 917, "013914m": 917, "91410827636698u": 917, "000002": [917, 919], "002382m": 917, "3820173632900326u": 917, "intrus": 917, "controversi": 917, "sched_oth": 918, "relinquish": 918, "sched_param": 918, "sched_getschedul": 918, "sched_prior": 918, "pthread_setschedparam": 918, "pthread_getschedparam": 918, "predefini": 918, "pthread_attr_setschedpolici": 918, "spoken": 918, "pthread_mutexattr_setprotocol": 918, "pthread_prio_inherit": 918, "pthread_prio_protect": 918, "risen": 918, "pthread_mutexattr_setprioceil": 918, "000105": 919, "105247m": 919, "24749755859354u": 919, "000015": 919, "014643m": 919, "64260525619006u": 919, "10m": 919, "105u": 919, "000067": 919, "067263m": 919, "2626495361326u": 919, "000003": 919, "002883m": 919, "8827592917392217u": 919, "ondemand": 919, "governor": 919, "cpufreq": 919, "scaling_governor": 919, "cpuinfo_cur_freq": 919, "067036m": 919, "03615188598611u": 919, "000001": 919, "001257m": 919, "2571678380193383u": 919, "000065": 919, "065188m": 919, "188407897949u": 919, "002376m": 919, "3758434034066656u": 919, "001042": 919, "042438m": 919, "4375534057617u": 919, "000017": 919, "017123m": 919, "123423079175748u": 919, "000143": 919, "142646m": 919, "6458358764593u": 919, "000005": 919, "004995m": 919, "994855006705264u": 919, "_syse": 921, "exit_failur": 921, "consume_fd": 921, "random_fd": 921, "tty_fd": 921, "nfd": 921, "ttys4": 921, "in_fd": 921, "eof_detect": 921, "shm": [923, 924, 925], "099": 923, "sem": [923, 924, 925], "shared memori": 924, "message queu": 924, "mman": 924, "fstat": 924, "st_size": 924, "map_fail": 924, "shm_open": [924, 925], "tmpf": [924, 925], "resiz": 924, "4095": 924, "weigh": 924, "map_shar": 924, "counter_loc": 924, "sem_t": [924, 925], "sem_open": 924, "sem_fail": 924, "sem_wait": 924, "sem_post": 924, "mq_attr": [924, 925], "mq_maxmsg": [924, 925], "mq_msgsize": [924, 925], "mqd_t": [924, 925], "mq_open": 924, "mq_send": 924, "mq_receiv": 924, "shm_unlink": 925, "overtak": 925, "mq_overview": 925, "oflag": 925, "mq_flag": 925, "mqde": 925, "msg_ptr": 925, "msg_len": 925, "msg_prio": 925, "sevp": 925, "disturb": [925, 928], "elegantli": 925, "qsize": 925, "signo": 925, "notify_pid": 925, "goiven": 925, "sem_overview": 925, "sem_trywait": 925, "sem_timedwait": 925, "abs_timeout": 925, "shm_close": 925, "shm_overview": 925, "035": [927, 928], "051": [927, 928], "segv": [928, 929], "mortem": [928, 1054], "core_pattern": 928, "termination_handl": 928, "sigint": [928, 929], "sig_atomic_t": [928, 929], "term_act": 928, "alarm_handl": 928, "alarm_act": 928, "sigset_t": [928, 930], "termination_sign": 928, "sigemptyset": [928, 929], "sigaddset": [928, 929], "sigquit": 928, "sigprocmask": [928, 929], "sig_block": 928, "impolit": 928, "sig": [928, 929], "consume_pip": 928, "pipenam": 928, "puzzl": 928, "pthread_sigmask": [928, 929], "sigtstp": 929, "sigalrm": [929, 930], "sigchld": 929, "abnorm": 929, "sigabrt": 929, "sigsegv": 929, "sigbu": 929, "sigil": 929, "sigfp": 929, "unblock": 929, "oldset": 929, "sigpend": 929, "sigfillset": 929, "signum": 929, "sigdelset": 929, "sigismemb": 929, "sigsetop": 929, "recept": 929, "sa_mask": 929, "sa_flag": 929, "oldact": 929, "sig_ign": 929, "sig_dfl": 929, "sighandler_t": 929, "_exit": 929, "barebon": 930, "louder": 930, "stallman": 931, "risc": 931, "llvm": 931, "24360": 931, "hello_h": [931, 947, 949], "24416": 931, "linkabl": [931, 1070, 1126], "0000000000401040": 931, "_start": 931, "0000000000401000": 931, "_init": 931, "00000000004011b8": 931, "_fini": 931, "crt": 931, "crt1": 931, "crti": 931, "crtn": 931, "0000000000404000": 931, "_global_offset_table_": 931, "reloc": 931, "1762320": 931, "0000000000401126": 931, "1224008": 931, "greetdemo": 932, "cmake_system_nam": 932, "toolchain_base_dir": [932, 946], "cmake_c_compil": 932, "cmake_cxx_compil": 932, "find_xxx": 932, "cmake_find_root_path_mode_program": 932, "cmake_find_root_path_mode_librari": 932, "cmake_find_root_path_mode_includ": 932, "toolchian": 932, "cmake_toolchain_fil": 932, "libgreet": [932, 933, 939, 948, 949], "13921": [932, 933], "cmakecach": [932, 933], "26192": [932, 933], "27920": [932, 933], "8503": [932, 933], "eabi5": 932, "armhf": 932, "5db807d9b005b19e1e0c957755fa7ca7b771edcb": 932, "debug_info": 932, "armv7l": 934, "challeng": 934, "metadistribut": 934, "miniumum": 934, "realiti": 934, "rasberri": 936, "clickabout": 941, "workabl": 943, "tarbal": 943, "lastest": 943, "x86_64_arm": 943, "precompos": 943, "uncompress": 943, "73812": 943, "1107168": 943, "1481768": 943, "1968456": 943, "1091864": 943, "1030432": 943, "1221816": 943, "lynxbe": 945, "y3p9kn7mjei": 945, "cli": 945, "containerd": 945, "dockerhub": 945, "hub": 945, "sh_18_04": 945, "78683068": 945, "1292296": 945, "70mb": 946, "73018472": 946, "auxvec": 946, "bitsperlong": 946, "bpf_perf_ev": 946, "rapidli": 947, "phoni": [947, 948, 949], "origaniz": 948, "relink": 948, "0x2e20": 948, "vdso": 948, "0x00007fffe9fa7000": 948, "0x00007f75ca289000": 948, "0x00007f75ca46d000": 948, "r_x86_64_32": 948, "fpic": 948, "whom": 949, "hello_flex": 949, "hello_flexible_h": 949, "cq": 949, "lisp": 950, "create_f": 950, "print_it": 950, "sytax": 951, "432x288": 951, "shutil": 952, "tarfil": 952, "temporarydirectori": 952, "tmpd": 952, "tarnam": 952, "expandvar": 952, "contrain": 952, "__enter__": [952, 1063, 1065], "__exit__": [952, 1063, 1065], "openforread": 952, "ipykernel_26522": 952, "2037535577": 952, "myprint": 952, "my_arg": 952, "orig_print": [952, 1063], "exc_val": 952, "exc_tb": 952, "myarg": 952, "total_ord": 953, "ipykernel_26540": 953, "2840657929": 953, "a_vari": 954, "fallback": [954, 974], "baseexceptiongroup": 954, "exceptiongroup": 954, "subtyp": 954, "maybe_fail": 954, "ipykernel_26558": 954, "104829323": 954, "lone": 954, "4008457068": 954, "mysubsystemerror": 954, "reallybaderror": 954, "someothererror": 954, "definitelybad": 954, "evenwors": 954, "collapsingtheworld": 954, "errorcod": 954, "__cached__": 955, "_frozen_importlib_extern": 955, "sourcefileload": 955, "0x7ff5bd9214e0": 955, "blindli": 955, "ansibl": 955, "matno": 955, "conffil": 955, "confcod": 955, "confdict": 955, "2525": 955, "8405": 955, "object ori": [956, 1115], "keyword argu": 956, "starstararg": [956, 977], "for loop": 956, "iterator protocol": 956, "operator overload": 956, "drawn": 957, "cnt": 957, "inputrang": 957, "disgust": 957, "gentli": 957, "smarter": 957, "nolimit": 958, "fibo_numb": 958, "jerki": 958, "max_numb": 958, "satisfactori": 958, "python_1010_generators_yield": 958, "glossari": 959, "ipykernel_26583": 959, "4235178104": 959, "breadth": 959, "coverag": 961, "subnamespac": 962, "mysupermodul": 962, "mysuperfunct": 962, "subpackage1": 962, "module1": 962, "module2": 962, "subpackage2": 962, "disambigu": 962, "increment_background": [963, 965], "background_integ": 963, "foreground_integ": 963, "runn": 963, "backgroundincrement": 963, "uncool": 963, "14784035": 965, "quack": 967, "mockup": 967, "35198674124715": 967, "19148132910277": 967, "645027678841984": 967, "7000994175664": 967, "861435289398585": 967, "__next__": 967, "brokensensor": 967, "gettemperatur": 967, "ipykernel_26601": 967, "2792400554": 967, "71536506": 967, "152158437": 967, "1134347102": 967, "refect": 968, "ipykernel_26622": 968, "1242235954": 968, "4119786358": 968, "emp": 971, "add_employe": 971, "mgr": 971, "isold": [971, 972, 1075], "haubentauch": [971, 972, 975, 1075], "parentcl": 971, "funnili": 971, "make_child": 972, "parent1": 972, "parent2": 972, "vvv": 972, "father": 972, "vvvvvv": 972, "tabular": 973, "someclass": 973, "persons_from_csv": 973, "person_dict": 973, "operators object oriented program": 974, "behaivor": 974, "number2": 974, "int2": 974, "ipykernel_26884": 974, "3709071117": 974, "151628379": 974, "whistl": [974, 977], "symmetr": [974, 1004], "commut": 974, "452733317": 974, "summar": 974, "ipykernel_26902": 975, "2144392361": 975, "attrnam": 975, "meier": 975, "3124626440": 975, "1226798660": 975, "expicitli": 976, "0x7f0d52780820": 976, "my_print": 977, "toolkit": 978, "marker": 980, "eighti": 980, "monti": 980, "incompat": [980, 986, 994, 1005], "benevol": 980, "bdfl": [980, 1067], "overse": 980, "januari": 980, "dropbox": 980, "awk": 982, "knob": 983, "sensit": 985, "throughout": 985, "0o01234": 986, "14159265359": [986, 1000], "3e12": 986, "afterthought": 986, "\u00e4\u00f6\u00fc": 986, "xa4": 986, "xb6": 986, "xbc": 986, "xe4": 986, "compel": 986, "codebas": 986, "ancient": 986, "sequencish": 990, "sixtim": 990, "seen_sixey": 990, "blahblahblahblahblah": 991, "aah": 992, "a_list": 992, "a_tupl": 992, "hlow": 992, "hlowrd": 992, "straw": [993, 1001], "heritag": 994, "140683453285904": 995, "140683453285936": 995, "140683453286160": 995, "140683142883904": 995, "140683143001520": 995, "ipykernel_26980": 996, "723444260": 996, "globvar": 996, "nonloc": 996, "parameterizab": 997, "ipykernel_26998": 997, "3939188879": 997, "3571579993": 997, "program_exit": 997, "exitstatu": 997, "spam": [999, 1062], "dec": 999, "x58": 999, "07d": 1000, "0x": 1000, "5x": 1000, "0x2f": 1000, "4x": 1000, "0x002f": 1000, "5o": 1000, "0o31": 1000, "04d": 1000, "0042": 1000, "05d": 1000, "00042": 1000, "thistl": 1001, "thorn": 1001, "ipykernel_27052": 1001, "677815794": 1001, "annoy": 1001, "sqn": 1002, "defval": 1003, "iterkei": 1003, "keyiter": 1003, "0x7ff2e8753418": 1003, "unord": 1004, "tunabl": 1005, "shoudn": 1005, "0x7fca2c785b70": 1006, "tof": 1006, "outputfilenam": 1007, "argumentpars": 1007, "add_argu": 1007, "parse_arg": 1007, "ou": 1007, "ylabel": [1009, 1060], "xmin": 1009, "xmax": 1009, "ymin": 1009, "ymax": 1009, "twine": 1010, "lotsa": [1010, 1087], "long_descript": 1010, "long_description_content_typ": 1010, "froniu": 1010, "rene": 1010, "allerstorf": 1010, "beta": 1010, "osi": 1010, "approv": 1010, "package_dir": 1010, "python_requir": 1010, "install_requir": 1010, "paho": [1010, 1074], "pyproject": 1010, "toml": 1010, "backend": 1010, "build_meta": 1010, "yadda": 1010, "sdist": 1010, "python_course_2022_11_07": 1010, "12549": 1010, "BE": 1010, "mydb": 1011, "hardli": 1012, "femal": 1017, "miracl": [1020, 1037], "previouslin": 1024, "ifi": 1037, "uniqifi": 1038, "sensor_const": 1043, "test_sensor_const": 1043, "ii": [1044, 1046, 1050, 1052, 1066], "user_record": [1045, 1047], "read_csv_head": [1045, 1052], "read_csv_nohead": [1047, 1051, 1052], "csvfilenam": 1049, "test_noheader_person": 1050, "read_noheader_person": 1050, "test_must_not_use_global_variables_as_return_object": 1050, "filename1": 1050, "noheader1": 1050, "filename2": 1050, "noheader2": 1050, "users1": 1050, "users2": 1050, "test_header_person": 1050, "read_header_person": 1050, "test_user_json_person": 1050, "userdb_json": [1050, 1051], "test_person_to_json": 1050, "joerg_sent": 1050, "to_json_person": 1050, "joerg_receiv": 1050, "from_json_person": 1050, "user_json": 1051, "envis": [1051, 1113], "to_json": 1051, "test_user_json": 1051, "test_user_to_json": 1051, "user_s": 1051, "json_user_s": 1051, "user_receiv": 1051, "from_json": 1051, "test_nohead": 1052, "test_head": 1052, "lectur": [1054, 1127], "unsupervis": [1057, 1062], "conveyor": 1057, "belt": 1057, "linear_regress": [1058, 1061], "model_select": [1058, 1060], "train_test_split": [1058, 1060], "linear_model": [1058, 1060], "linearregress": [1058, 1060], "history_data": [1058, 1059, 1060, 1061], "inputfeatur": [1058, 1060], "outputfeatur": [1058, 1060], "input_train": [1058, 1060], "input_test": [1058, 1060], "output_train": [1058, 1060], "output_test": [1058, 1060], "test_siz": [1058, 1060], "output_predict": [1058, 1060], "visualcross": 1059, "york": [1059, 1060], "wind": [1059, 1060], "chill": [1059, 1060], "precipit": [1059, 1060], "snow": [1059, 1060], "gust": [1059, 1060], "humid": [1059, 1060], "rain": 1059, "cloudi": 1059, "995833": 1060, "688889": 1060, "287500": 1060, "327273": 1060, "012222": 1060, "690278": 1060, "470769": 1060, "369444": 1060, "513421": 1060, "946106": 1060, "574023": 1060, "313256": 1060, "994536": 1060, "070695": 1060, "025980": 1060, "302423": 1060, "214825": 1060, "665492": 1060, "900000": 1060, "700000": 1060, "090000": 1060, "050000": 1060, "377500": 1060, "750000": 1060, "950000": 1060, "650000": 1060, "330000": 1060, "325000": 1060, "850000": 1060, "425000": 1060, "825000": 1060, "715000": 1060, "470000": 1060, "970000": 1060, "multidimension": 1060, "xlabel": 1060, "coef_": 1060, "80189231": 1060, "intercept_": 1060, "95355086": 1060, "609608": 1060, "571879": 1060, "736988": 1060, "170933": 1060, "798254": 1060, "189739": 1060, "180394": 1060, "449230": 1060, "661530": 1060, "057745": 1060, "850176": 1060, "284120": 1060, "685067": 1060, "weather": [1061, 1062], "ndarrai": [1061, 1080], "splice": [1061, 1062], "cute": 1061, "paper": 1061, "aspir": [1061, 1092], "dilig": 1062, "bite": 1062, "forecast": 1062, "agi": 1062, "asi": 1062, "forest": 1062, "predictor": 1062, "accuraci": 1062, "classif": 1062, "unlabel": 1062, "reinforc": 1062, "reward": 1062, "bay": 1062, "esoter": 1063, "contextmanag": 1063, "prefix_print": 1063, "pfarg": 1063, "sepp": 1066, "tupleunpack": 1066, "spell": 1066, "redundantli": 1066, "quotechar": 1066, "spreadsheet": 1066, "odbc": 1067, "mysql": 1067, "informix": 1067, "berkeleydb": 1067, "mongodb": 1067, "rollback": 1067, "initd": 1069, "psycopg": 1069, "libpq": 1069, "conninfo": 1069, "psycopg2": 1069, "localhost": [1069, 1074], "schwammerldb": 1069, "android": 1070, "schwammerln": 1070, "giftig": 1070, "geniessbar": 1070, "dbm": 1070, "steinpilz": 1070, "roehren": 1070, "speisetaeubl": 1070, "lamellen": 1070, "speitaeubl": 1070, "eierschwammerl": 1070, "teufelsroehrl": 1070, "overcod": 1071, "512119": 1071, "european": 1071, "steroid": 1071, "htmlhelp": 1071, "charset": 1071, "latin1": 1071, "chines": 1071, "enc": 1071, "0xfc": 1071, "0xdf": 1071, "0xf6": 1071, "\u00df": 1071, "cyril": 1071, "received_enc": 1071, "lg_enc": 1071, "bye_enc": 1071, "artificial intellig": 1072, "postgr": 1072, "mssql": 1072, "data sci": 1072, "ecosystem": 1072, "antp": 1074, "1883": 1074, "53767": 1074, "tcp6": 1074, "mosquitto_pub": 1074, "easiest": 1074, "message_receiv": 1074, "userdata": 1074, "on_messag": 1074, "loop_forev": 1074, "mosqitto_pub": 1074, "styrian": 1074, "esp": 1074, "666608091972": 1075, "ignore_index": 1075, "new_person": 1075, "saskia": 1075, "456710042003": 1075, "irrevers": 1076, "ipykernel_27444": 1079, "3315724720": 1079, "maybe_cal": [1079, 1080], "apply_if_cal": [1079, 1080], "_getitem_axi": [1079, 1080], "_is_scalar_access": [1079, 1080], "1519": 1079, "_validate_integ": 1079, "1521": 1079, "_ix": 1079, "len_axi": 1079, "_get_axi": 1079, "1451": 1079, "1453": 1079, "rangeindex": 1080, "get_loc": 1080, "toler": 1080, "3621": 1080, "casted_kei": 1080, "_lib": 1080, "pyx": 1080, "indexengin": 1080, "hashtable_class_help": 1080, "pxi": 1080, "pyobjecthasht": 1080, "get_item": 1080, "ipykernel_27469": 1080, "1471010945": 1080, "thru": 1080, "1201": 1080, "_validate_kei": 1080, "_get_label": 1080, "1203": 1080, "_get_slice_axi": 1080, "slice_obj": 1080, "1151": 1080, "5667": 1080, "1153": 1080, "1155": 1080, "_handle_lowerdim_multi_index_axis0": 1080, "tup": 1080, "drop_level": 1080, "new_index": 1080, "3875": 1080, "3877": 1080, "3623": 1080, "3625": 1080, "listlik": 1080, "_check_indexing_error": 1080, "sort_index": 1080, "multiindex": 1080, "contrari": 1081, "lower_email": 1082, "rentner": 1082, "is_palindrom": 1082, "facto": [1083, 1108], "subel": 1083, "attrib": 1083, "getroot": 1083, "examtop": 1085, "package manag": 1086, "project manag": [1086, 1114], "unit test": 1086, "virtual environ": 1086, "affin": 1086, "witch": 1087, "gnore": 1087, "ackup": 1087, "bort": 1087, "cert": 1087, "pem": 1087, "pythonhost": 1087, "e17846ef3601dcb6f118ea447439650e0c35cb4fe60274fbe24214156df2": 1087, "cp38": 1087, "manylinux2010_x86_64": 1087, "ext": 1087, "argcomplet": 1087, "asn1crypto": 1087, "ensurepip": [1088, 1094], "test_project": 1092, "test_soup": 1092, "test_task": 1092, "stringent": 1092, "discoveri": 1092, "syndrom": [1092, 1093, 1099], "test_person_point": 1092, "deselect": 1092, "tweak": 1092, "test_": 1092, "test_simpl": 1092, "test_trivi": 1092, "test_trivial_but_fail": 1092, "___________________________": 1092, "____________________________": 1092, "test_stat": 1092, "implementation_point": 1092, "implementor1": 1092, "implementor2": 1092, "documentation_point": 1092, "integration_point": 1092, "implementation_perc": 1092, "documentation_perc": 1092, "integration_perc": 1092, "total_perc": 1092, "total_point": 1092, "gathered_point": 1092, "test_another_task_aspect": 1092, "pathlib": 1092, "test_ini_file_pars": 1092, "my_test_fil": 1092, "mytestcas": 1093, "runtest": 1093, "assertequ": 1093, "texttestrunn": 1093, "__db": 1093, "create_databas": 1093, "fill_test_data": 1093, "remove_databas": 1093, "testfeature1": 1093, "testfeature2": 1093, "testsuit": 1093, "addtest": 1093, "testload": 1093, "loadtestsfromtestcas": 1093, "testsometh": 1093, "failif": 1093, "failunless": 1093, "failunlessequ": 1093, "failifequ": 1093, "failunlessalmostequ": 1093, "failunlessrais": 1093, "env_dir": 1094, "my_venv": 1094, "csh": 1094, "easy_instal": 1094, "pip3": 1094, "powershel": 1094, "joblib": 1094, "threadpoolctl": 1094, "deactiv": 1094, "my_recreated_venv": 1094, "persuad": 1094, "will_fail": [1098, 1101], "initgoogletest": [1099, 1104], "run_all_test": [1099, 1104], "lgtest": [1099, 1101], "onesuit": 1099, "test1": 1099, "test2": 1099, "anothersuit": 1099, "postive_pattern": 1099, "negative_pattern": 1099, "gtest_list_test": 1099, "faildemo": 1099, "failisfat": 1099, "assertdemo": 1099, "assertisfat": 1099, "expect_": 1099, "expectdemo": 1099, "expectisnonfat": 1099, "expect_tru": 1099, "expect_eq": 1099, "0x58": 1099, "0x55": 1099, "assert_": 1100, "repoqueri": 1101, "dpkg": 1101, "listfil": 1101, "joergfaschingbau": 1101, "cmake_compiler_is_gnucc": 1101, "predef": [1103, 1104], "predefinedtestenviron": 1104, "paranoidtest": 1104, "untechn": 1104, "thefixtur": 1104, "testthatmodifiesst": 1104, "complexfixtur": 1104, "first_n": 1104, "sometest": 1104, "egal": 1106, "welcher": 1106, "schulungstyp": 1106, "problemlo": 1106, "verifiziert": 1106, "formlos": 1106, "anliegen": 1106, "werd": 1106, "umgehend": 1106, "setzen": 1106, "besprechen": 1106, "gestaltung": 1106, "schl\u00fcssigkeit": 1106, "chronologisch": 1106, "gehaltenen": 1106, "querzulesen": 1106, "roter": 1106, "faden": 1106, "ablaufen": 1106, "gegenstand": 1106, "\u00e4nderungen": 1106, "kursgeschehen": 1106, "passieren": 1106, "detailliert": 1106, "kosten": 1106, "terminen": 1106, "inhouseschulungen": 1106, "absprach": 1106, "buchenden": 1106, "terminisiert": 1106, "zustandekommt": 1106, "zeitlich": 1106, "\u00f6rtlich": 1106, "flexibel": [1106, 1107], "zul\u00e4sst": 1106, "besond": 1106, "onlineschulungen": 1106, "erwiesen": 1106, "dedizierten": 1106, "implementieren": [1106, 1111], "instruktionen": [1106, 1110], "datenschutzrichtlinien": 1106, "genug": 1106, "durchweg": 1106, "wahlweis": 1106, "offenen": 1106, "anmelden": 1106, "inhouseschulung": 1106, "exklusiv": 1106, "\u00fcblicherweis": 1106, "firmenstandort": 1106, "basteln": [1106, 1123], "schwierig": 1106, "z\u00fcgig": 1107, "uhr": 1107, "punktlandung": 1107, "mbr": 1107, "bootet": 1107, "nachs\u00e4tz": 1107, "wahllos": 1107, "reinen": [1107, 1123], "gebastelt": 1107, "leichtfertigerweis": 1107, "richtigerweis": 1107, "multilib": 1107, "ausgestattet": [1107, 1116, 1123, 1130], "l\u00e4uft": 1107, "seltsamerweis": 1107, "dar\u00fcber": 1107, "zeitersparnisgr\u00fcnden": 1107, "hinweggeholfen": 1107, "vorcompilierten": 1107, "statisch": [1107, 1125], "gelinkten": 1107, "christof": 1107, "sourcen": 1107, "crosszucompilieren": 1107, "gescheitert": 1107, "ungl\u00fccklichen": 1107, "umstand": 1107, "schulungsrechn": 1107, "neu": 1107, "aufzusetzen": 1107, "kompil": 1107, "verschwunden": 1107, "buildscript": 1107, "konnt": 1107, "kreativen": 1107, "wiederhergestellt": 1107, "v\u00f6llig": 1107, "sinnfrei": 1107, "distributionen": 1107, "compilieren": [1107, 1109], "architekturen": 1107, "versucht": [1107, 1108, 1110], "richtigen": 1107, "leben": [1107, 1123], "anzuwenden": 1107, "leut": 1107, "anzusehen": 1107, "wort": [1107, 1109], "gefallen": 1107, "hart": 1107, "garantien": 1107, "durchau": 1107, "gerechtfertigt": 1107, "gesch\u00fctz": 1107, "auffahren": 1107, "enthaltenen": 1107, "n\u00fctzen": 1107, "stichwort": [1107, 1116, 1123], "guter": 1107, "mittelweg": 1107, "diffundieren": 1107, "aufruft": 1107, "startet": 1107, "ausgekl\u00fcgelt": 1107, "funktionsweis": 1107, "jeher": 1107, "kennt": [1107, 1129], "gewaltig": 1107, "geschichtsbelastet": 1107, "tr\u00e4gt": 1107, "intelligent": [1107, 1116, 1123], "trotz": 1107, "behauptungen": 1107, "gar": 1107, "lieblingsseit": 1107, "linuxthemen": 1107, "zentrisch": 1107, "bourne shel": [1108, 1118], "\u00fcbel": 1108, "sprechen": [1108, 1116, 1123], "vollst\u00e4ndig": 1108, "shellprogrammierung": 1108, "ruf": 1108, "schmutzigen": 1108, "stattdessen": 1108, "hauch": 1108, "pervers": 1108, "\u00e4sthetik": 1108, "verpassen": 1108, "geschicht": 1108, "kram": 1108, "environmentvariablen": 1108, "kontrollkonstrukt": [1108, 1109], "hauptteil": 1108, "stringmanipul": 1108, "obskur": 1108, "konstrukt": [1108, 1118], "auskommt": 1108, "umgang": [1108, 1118], "vorausgesetzt": [1108, 1110, 1111, 1119, 1125, 1126, 1128, 1129], "bibel": 1109, "hinzuf\u00fcgen": 1109, "erfind": 1109, "tickt": 1109, "wozu": 1109, "grenzen": 1109, "vorlag": 1109, "didaktik": 1109, "erg\u00e4nzt": 1109, "kontext": 1109, "heutigen": 1109, "dienen": 1109, "sprachkern": 1109, "unterrichten": 1109, "standardlibrari": 1109, "zugunsten": 1109, "bequemeren": 1109, "verzichten": 1109, "sprachdesign": 1109, "geachtet": 1109, "isoliert": 1109, "abseit": [1109, 1111, 1129], "mitbringt": 1109, "h\u00e4lt": 1109, "eignet": 1109, "hervorragend": [1109, 1116, 1124, 1129], "systemprogrammierung": 1109, "weglassen": 1109, "programmiert": [1109, 1111], "dementsprechend": [1109, 1129], "sinngem\u00e4ss": 1109, "aufgeteilt": 1109, "manipulieren": [1109, 1118], "maschineninstruktionen": 1109, "ausgef\u00fchrt": [1109, 1110], "geschwindigkeitsvorteil": 1109, "interpretierten": 1109, "nachteil": 1109, "verst\u00e4ndni": [1109, 1118, 1128], "speicherverwaltung": [1109, 1111, 1126], "integral": 1109, "zusammengesetzt": 1109, "speicherlayout": 1109, "wenigst": 1109, "worin": 1109, "programmstrukturierung": 1109, "deklar": 1109, "beliebtest": 1109, "unmeng": 1109, "flexibilit\u00e4t": [1109, 1126], "einbringen": 1109, "unbeliebtest": 1109, "fehlerm\u00f6glichkeiten": 1109, "verkettet": 1109, "fehlerszenarien": [1109, 1129], "absturz": 1109, "dahinsiechen": 1109, "debugginghilfen": 1109, "typumwandlungen": 1109, "hauptkritikpunkt": 1109, "sorglos": 1109, "integertypen": 1109, "breit": [1109, 1116], "regelwerk": 1109, "historisch": 1109, "aufarbeitung": 1109, "historischem": 1109, "ballast": 1109, "compileroptionen": 1109, "pr\u00e4prozessor": [1109, 1110], "leid": 1109, "grundz\u00fcgen": 1109, "gezeigt": [1109, 1118, 1123], "compilierung": 1109, "heutzutag": 1109, "wegzudenken": [1109, 1116], "grund": [1109, 1116], "damal": [1109, 1111], "programmen": [1109, 1110, 1125], "separat": 1109, "verbinden": 1109, "spielt": 1109, "archivieren": 1109, "linken": 1109, "programmgesundheit": 1109, "bedeutungen": 1109, "optimierungsm\u00f6glichkeiten": 1109, "memoryfehlern": 1109, "verwalten": 1109, "formatiert": 1109, "_und_": 1109, "komfort": 1109, "m\u00e4chtige": [1109, 1126], "jedoch": [1109, 1116, 1123, 1129], "weit": 1109, "fehlerimmunit\u00e4t": 1109, "allein": 1109, "verdienen": 1109, "erw\u00e4hnung": 1109, "stringbearbeitung": 1109, "heutig": 1109, "eigenwillig": 1109, "f\u00fclle": 1109, "erleichtern": 1109, "lauern": [1109, 1128], "gefahren": [1109, 1128, 1129], "sprachumfang": 1110, "angeht": 1110, "compiliert": 1110, "maschinencod": 1110, "pointern": 1110, "sofort": 1110, "beipflichten": 1110, "einmal": [1110, 1125, 1126, 1130], "beinharten": 1110, "typenkonvertierungen": 1110, "aufgesessen": 1110, "beleuchtet": [1110, 1128], "beschrittenen": 1110, "dunklen": 1110, "ecken": 1110, "widmet": 1110, "intensiv": 1110, "fehlersuch": 1110, "erkl\u00e4rungen": 1110, "sprachdefinit": 1110, "greifbar": 1110, "verdacht": 1110, "manch": 1110, "typkonversionen": 1110, "l\u00fccken": 1110, "typensystem": [1110, 1111], "techniken": [1110, 1116], "typensicherheit": 1110, "dunkl": 1110, "unn\u00f6tig": 1110, "programmhygien": 1110, "wege": 1110, "sauberen": 1110, "weisen": 1110, "optimierungstechniken": 1110, "anwenden": 1110, "optimierung": 1110, "erschweren": 1110, "lesbarkeit": 1110, "memoryzugriff": 1110, "ur": 1110, "beziehungsweis": 1110, "hardwareunterst\u00fctzung": 1110, "Ins": 1110, "kenntniss": [1110, 1111, 1119, 1125, 1126, 1128, 1129], "urspr\u00fcnglich": 1111, "erfunden": 1111, "leichter": 1111, "handhabbar": 1111, "neuen": 1111, "erm\u00f6glichen": [1111, 1126], "ressourcenverwaltung": 1111, "kontrolliert": 1111, "mainstream": 1111, "einzug": 1111, "hie\u00df": 1111, "treffend": 1111, "seitdem": 1111, "vereinzelt": 1111, "soviel": 1111, "dampflokomot": 1111, "stellt": [1111, 1129], "vielfalt": 1111, "sprachkonstrukt": 1111, "genial": 1111, "gewagt": 1111, "behaupten": 1111, "anbelangt": 1111, "sprachmittel": 1111, "wichtigst": 1111, "n\u00e4mlich": 1111, "reichlich": [1111, 1116, 1123], "umstieg": 1111, "erw\u00e4gen": 1111, "embeddedbetriebssystem": 1111, "einsetzen": 1111, "vielerort": 1111, "m\u00f6glich": [1111, 1116], "datenkapselung": 1111, "objekten": 1111, "fallstrick": 1111, "korrektheit": 1111, "100ste": 1111, "strukturiert": 1111, "fehlerbehandlung": 1111, "generisch": 1111, "mechanismen": [1111, 1126, 1128, 1130], "mehrfachvererbung": 1111, "teilweis": 1111, "kapiteln": 1111, "unterschied": 1111, "erl\u00e4utert": [1111, 1116], "c++ 11": 1112, "enjoy": 1112, "overrrid": 1112, "coolest": 1112, "optinion": 1112, "oneshot": 1112, "communict": 1112, "unlearn": 1112, "inventor": 1113, "weren": 1114, "intricaci": 1114, "interdepend": 1114, "rudimentari": 1114, "graviti": 1115, "vocabulari": 1115, "confront": 1115, "reusab": 1115, "nicknam": 1115, "zentrum": [1116, 1123], "vollwertig": 1116, "selben": 1116, "betriessystemkonzept": 1116, "jahrzehnten": 1116, "bew\u00e4hrt": 1116, "automot": 1116, "sektor": 1116, "vertreten": 1116, "altbew\u00e4hrten": 1116, "konsequ": [1116, 1126], "ausbaut": 1116, "hardwareschnittstellen": 1116, "echtzeitf\u00e4higkeit": 1116, "dahint": 1116, "rundet": 1116, "hardwarebastelworkshop": 1116, "embeddedprogrammier": [1116, 1123], "l\u00e4nger": [1116, 1123], "normalen": [1116, 1123], "dateisystem": [1116, 1123], "versagt": [1116, 1123], "teuer": [1116, 1123], "erkauft": [1116, 1123], "elektronik": [1116, 1123], "testen": [1116, 1123, 1130], "hostsoftwar": [1116, 1123], "architekten": [1116, 1123], "plattformzusammensetzung": [1116, 1123], "entscheiden": [1116, 1123, 1130], "rechtfertigen": [1116, 1123], "logik": [1116, 1123], "steck": [1116, 1123], "beantworten": [1116, 1123, 1130], "eingeladen": [1116, 1123], "l\u00f6tmateri": [1116, 1123], "mitzubringen": [1116, 1123], "bastelei": 1116, "erfolgt": 1116, "vorhandenen": [1116, 1123, 1130], "minicomputern": 1116, "prototypen": 1116, "desktopbetriebssystem": [1116, 1123], "verh\u00e4ltniss": [1116, 1123], "512mb": [1116, 1123], "m\u00fchsam": [1116, 1123], "produktivsystem": [1116, 1123], "ohnehin": [1116, 1123], "unangebracht": [1116, 1123], "anf\u00e4ng": [1116, 1123], "filesystemen": [1116, 1123], "durchzuf\u00fchren": 1116, "filedeskriptoren": [1116, 1118], "standbein": 1116, "getrennt": 1116, "abl\u00e4uf": 1116, "adressraum": 1116, "sorgfalt": 1116, "bloss": 1116, "gef\u00e4chert": 1116, "gewissen": 1116, "szenarien": 1116, "steuerungen": 1116, "gef\u00e4hrlich": 1116, "umfangreich": 1116, "hauptthema": 1116, "dennoch": 1116, "n\u00fctzlich": 1116, "haub": 1116, "schalten": [1116, 1123], "ausg\u00e4ngen": [1116, 1123], "abfragen": [1116, 1123], "eing\u00e4ngen": [1116, 1123], "sowohl": [1116, 1123], "dumm": [1116, 1123], "ereignisgesteuert": [1116, 1123], "mikrocontrollern": [1116, 1123], "aufgaben": [1116, 1123], "temperaturmessung": [1116, 1123], "expandierung": [1116, 1123], "ausgelagert": [1116, 1123, 1126], "dediziert": [1116, 1123], "angesteuert": [1116, 1123], "gegeben": [1116, 1123, 1125, 1126], "driverframework": 1116, "netzwerkstack": [1116, 1123], "einpasst": [1116, 1123], "schnittstellen": [1116, 1126], "implementationssprachen": 1116, "hardwareerfahrung": [1116, 1123], "linux kernel": 1117, "kernel driv": [1117, 1127], "wait queu": 1117, "block devic": 1117, "interrupt handl": 1117, "dose": 1117, "curios": 1117, "userpac": 1117, "massiv": 1117, "vital": 1117, "einblick": 1118, "gingen": 1118, "vieler": 1118, "demosess": 1118, "vertrackt": 1118, "entmystifiziert": 1118, "gef\u00fcrchteten": 1118, "erlernt": 1118, "inbetriebsetz": 1118, "hardwareingenieur": 1118, "angehend": 1118, "administratoren": 1118, "editieren": 1118, "bl\u00e4ttern": 1118, "textdateien": 1118, "schnittstel": 1118, "kombinationen": 1118, "kombin": 1118, "abschweifen": 1118, "programmierkenntniss": 1118, "zwingend": [1118, 1125], "make gnu": 1119, "gnu mak": 1119, "build manag": 1119, "seiner": [1119, 1126, 1130], "m\u00e4chtigen": 1119, "daran": 1119, "wendet": 1119, "interessiert": 1119, "gr\u00f6\u00dfere": 1119, "gebaut": 1119, "komplizierten": 1119, "griff": 1119, "regeln": 1119, "selbstdefiniert": 1119, "gewiss": [1119, 1124, 1126], "fertigkeit": 1119, "hemmenhofen": 1123, "gleichnamigen": 1123, "gerufen": 1123, "produktivem": 1123, "n\u00e4herzubringen": 1123, "spielekonsumenten": 1123, "kinder": 1123, "enden": 1123, "erstem": 1123, "breiteren": 1123, "drauf": 1123, "vorhandensein": 1123, "basisinfrastruktur": 1123, "vielem": 1123, "hervorragenden": 1123, "gestandenen": 1123, "obwohl": [1123, 1126], "sprachunabh\u00e4ngig": 1123, "brauchen": 1123, "computerspielen": 1123, "spielerischen": 1123, "f\u00fchren": 1123, "w\u00e4hlt": 1123, "lm": 1123, "netzwerkprotokol": [1123, 1129], "behaupt": 1124, "allen": 1124, "gro\u00dfkopferten": 1124, "kommerziellen": 1124, "systemen": 1124, "perforc": 1124, "etabliert": 1124, "erh\u00e4ltlich": 1124, "nachfolg": 1124, "abgel\u00f6st": 1124, "prim\u00e4r": 1124, "publikum": 1124, "sekund\u00e4r": 1124, "versionieren": 1124, "arbeitsweis": 1124, "bereinigung": 1124, "strategien": 1124, "programmierern": 1124, "vertrautheit": 1124, "vorteil": [1124, 1125], "umsteig": 1125, "\u00e4rgerni": 1125, "schl\u00e4gt": 1125, "ausgekl\u00fcgeltst": 1125, "systemcal": [1125, 1126, 1129], "sogenannt": 1125, "inspizieren": 1125, "grundprinzip": [1125, 1129], "sammlung": [1125, 1126], "ausf\u00fchrbar": 1125, "bedient": 1125, "bestehen": 1125, "handhabung": 1125, "gew\u00f6hnungsbed\u00fcrftig": 1125, "filedescriptoren": 1125, "lowlevel": 1125, "tiefen": 1126, "steigen": 1126, "alltagsprogrammier": 1126, "normalerweis": 1126, "verborgen": 1126, "hochperformant": 1126, "anwendungen": 1126, "modernen": [1126, 1128], "bertriebssystemen": 1126, "sogenanntem": 1126, "virtuellen": 1126, "speicherbereich": 1126, "instanzen": 1126, "desselben": 1126, "hauptspeich": 1126, "speicherzugriff": 1126, "schutzmechanismen": 1126, "miteinand": 1126, "kommunizieren": [1126, 1129], "semaphoren": 1126, "steinalt": 1126, "\u00fcberlebt": 1126, "keinesweg": 1126, "fehlerfrei": 1126, "benutzen": 1126, "verpasst": 1126, "beruht": 1126, "ladbar": 1126, "ressourcenschonung": 1126, "wasserdichten": 1126, "upgradepfad": 1126, "grundkenntni": [1126, 1128, 1129], "memory manag": 1127, "tcp-ip": 1127, "unverst\u00e4ndlich": 1128, "ungeachtet": 1128, "effizient": 1128, "propagiert": 1128, "soliden": 1128, "unbedacht": 1128, "handeln": 1128, "lebenszyklu": 1128, "gestartet": 1128, "versuchung": 1128, "gewalt": 1128, "terminieren": 1128, "konsequenzen": 1128, "joinabl": 1128, "detach": 1128, "eigenschaften": 1128, "racecondit": 1128, "vermeidung": 1128, "\u00fcberal": 1128, "vermutet": 1128, "integeroperationen": 1128, "kommunikationsmechanismen": 1128, "werkzeugkasten": 1128, "kommunikationskan\u00e4l": 1128, "niemal": 1128, "reihen": 1128, "traditionellen": 1128, "aufgenommen": 1128, "codebasi": 1128, "verzweigt": 1128, "ansehnlich": 1128, "realtimef\u00e4higkeiten": 1128, "priorit\u00e4ten": 1128, "f\u00fcgt": 1129, "benutzend": 1129, "programmierparadigma": 1129, "dar": 1129, "beschr\u00e4nkt": 1129, "streamverbindungen": 1129, "verbindungsaufnahm": 1129, "datagramm": 1129, "verbindungslos": 1129, "adressfamilien": 1129, "auffassung": 1129, "adress": 1129, "endpoint": 1129, "nummern": 1129, "adressen": 1129, "verbindungen": 1129, "hilfsfunktionen": 1129, "adresskonvertierung": 1129, "ipv6": 1129, "\u00e4quivalent": 1129, "ungleich": 1129, "ressourcenschonend": 1129, "pfadnamen": 1129, "bedienbar": 1129, "mittlerweis": 1129, "eingepasst": 1129, "angenehm": 1129, "umzugehen": 1129, "widmen": 1129, "verbundenen": 1129, "auszusetzen": 1129, "reagiert": 1129, "gelesen": 1129, "eventgetrieben": 1129, "knopfdruck": 1130, "abnimmt": 1130, "zahlreichen": 1130, "abgeklopft": 1130, "angst": 1130, "kaputtmachen": 1130, "konstruktiv": 1130, "einfachheit": 1130, "klarzumachen": 1130, "umzusetzen": 1130, "anstatt": 1130, "auszustatten": 1130, "gedanken": 1130, "erkannt": 1130, "entscheidung": 1130, "verbockt": 1130, "softwareentwickl": 1130, "jedwed": 1130, "stabilen": 1130, "abliefern": 1130, "entscheidungstr\u00e4g": 1130, "vorgesetzt": 1130, "schl\u00fcssige": 1130, "kan\u00e4l": 1130, "etablieren": 1130, "unittestframework": 1130, "tragen": 1130, "schwerf\u00e4llig": 1130, "halben": 1130, "\u00fcbrige": 1130, "zurechtzufinden": 1130, "vortragend": 1130, "aufgrund": 1130, "herkunft": 1130, "aufwarten": 1130, "beibringen": 1130, "\u00fcppigen": 1130, "verbergen": 1130, "pr\u00e4ferierten": 1130, "vortragenden": 1130, "acquaint": 275}, "objects": {}, "objtypes": {}, "objnames": {}, "titleterms": {"kontakt": 0, "navig": [0, 817], "googl": 0, "map": [0, 6, 179, 184, 187, 190, 193, 209, 219, 296, 491, 492, 521, 582, 583, 674, 675, 728, 874], "streetview": 0, "curriculum": [1, 71, 72], "vita": 1, "\u00fcber": [2, 164, 174, 179, 187, 195], "mich": [2, 181], "projekt": [3, 22], "au": 3, "selbstst\u00e4ndig": 3, "t\u00e4tigkeit": 3, "nichtselbstst\u00e4ndig": 3, "skill": [4, 128], "cours": [5, 10, 11, 57, 58, 60, 61, 76, 124, 126, 147, 183, 192, 236, 238, 246, 303, 409, 1054, 1114, 1117], "materi": [5, 23, 27, 29, 154, 156, 171, 192, 300, 315, 316, 320, 409, 1053, 1054, 1078], "einleitung": [6, 184], "datatyp": [6, 174, 179, 181, 184, 187, 196, 200, 203, 206, 211, 213, 219, 223, 226, 228, 229, 241, 243, 244, 250, 251, 253, 261, 263, 264, 265, 269, 270, 271, 278, 296, 324, 374, 377, 957, 986, 987, 991], "number": [6, 184, 187, 190, 211, 223, 226, 296, 654, 713, 720, 721, 884, 958, 974, 977, 986, 994, 995, 1016, 1019, 1029, 1030, 1075, 1079, 1080, 1104], "integ": [6, 164, 174, 179, 184, 187, 211, 213, 223, 226, 232, 244, 251, 271, 296, 342, 389, 394, 610, 965, 986, 995], "string": [6, 150, 151, 157, 164, 174, 181, 184, 187, 190, 195, 196, 200, 203, 206, 211, 213, 216, 219, 223, 226, 228, 229, 232, 241, 244, 248, 251, 265, 271, 293, 295, 296, 323, 336, 337, 343, 349, 413, 591, 592, 593, 606, 637, 638, 986, 999, 1000, 1001, 1036, 1082, 1085], "compound": [6, 174, 184, 196, 200, 203, 206, 211, 213, 219, 223, 226, 229, 241, 261, 265, 271, 377, 987], "list": [6, 10, 22, 150, 151, 164, 174, 181, 184, 187, 190, 195, 196, 200, 203, 206, 211, 213, 219, 223, 226, 229, 241, 244, 251, 261, 265, 271, 382, 413, 485, 504, 521, 535, 578, 626, 639, 676, 718, 745, 746, 747, 769, 839, 951, 954, 957, 958, 967, 987, 995, 1002, 1031, 1032, 1085, 1087], "arrai": [6, 152, 174, 184, 323, 332, 336, 374, 376, 386, 399, 509, 561, 563, 571, 615, 630, 641, 680], "javascript": [6, 184, 223], "std": [6, 105, 184, 193, 209, 235, 236, 238, 282, 428, 486, 491, 492, 502, 521, 544, 545, 546, 547, 548, 556, 562, 563, 564, 565, 575, 582, 583, 593, 606, 619, 622, 626, 629, 631, 638, 674, 675, 676, 680, 682, 685, 686, 687, 689, 690, 695, 696, 697, 698, 700, 701, 702, 705, 708], "vector": [6, 105, 184, 486, 502, 521, 528, 544, 562, 563, 564, 565, 579, 622, 631, 676, 910], "c": [6, 65, 66, 67, 68, 69, 95, 105, 106, 108, 109, 111, 128, 142, 157, 158, 174, 184, 192, 193, 209, 234, 235, 236, 238, 239, 247, 256, 258, 282, 283, 284, 304, 310, 319, 328, 368, 369, 406, 413, 418, 425, 432, 475, 485, 490, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 530, 536, 537, 541, 542, 543, 555, 561, 563, 608, 623, 625, 626, 627, 630, 631, 663, 664, 668, 675, 676, 684, 693, 698, 709, 857, 877, 895, 898, 1000, 1109, 1110, 1111, 1112, 1113, 1115], "java": [6, 184], "dictionari": [6, 150, 164, 174, 179, 181, 184, 187, 195, 196, 200, 203, 206, 211, 213, 216, 219, 223, 226, 229, 232, 241, 244, 251, 261, 265, 271, 296, 951, 955, 968, 987, 1003, 1023, 1050], "kei": [6, 141, 184, 232, 296, 585, 586, 817, 868, 870], "valu": [6, 61, 169, 184, 255, 256, 296, 334, 390, 547, 895, 917, 988], "set": [6, 36, 61, 169, 174, 179, 184, 187, 195, 196, 200, 203, 206, 211, 213, 219, 223, 226, 229, 241, 244, 251, 261, 265, 271, 813, 814, 929, 951, 987, 1004, 1042, 1070, 1080], "mathematisch": [6, 184], "mengen": [6, 174, 184], "while": [6, 151, 164, 174, 184, 203, 211, 213, 216, 219, 226, 229, 251, 359, 360, 755, 760, 761, 990, 1016, 1040], "function": [6, 41, 138, 151, 169, 174, 184, 187, 190, 193, 196, 200, 203, 211, 213, 219, 223, 228, 229, 232, 235, 236, 238, 240, 244, 251, 257, 265, 275, 278, 282, 301, 334, 336, 341, 368, 370, 372, 373, 378, 410, 411, 471, 504, 528, 537, 542, 544, 549, 553, 569, 626, 633, 636, 637, 638, 639, 648, 678, 690, 691, 718, 719, 781, 875, 877, 915, 950, 952, 953, 955, 957, 958, 977, 994, 996, 997, 998, 1006, 1028, 1030, 1034, 1037, 1045, 1047, 1082], "python": [7, 10, 57, 58, 60, 61, 88, 93, 124, 151, 154, 163, 164, 166, 167, 168, 170, 172, 174, 177, 179, 182, 188, 189, 191, 194, 196, 198, 201, 202, 203, 204, 205, 207, 208, 210, 213, 214, 217, 220, 222, 225, 227, 228, 229, 230, 231, 233, 235, 236, 238, 240, 241, 242, 243, 244, 245, 250, 252, 253, 257, 259, 260, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 275, 276, 277, 278, 279, 280, 281, 282, 285, 301, 304, 306, 319, 626, 654, 668, 675, 857, 859, 956, 959, 963, 978, 979, 980, 982, 984, 986, 994, 1005, 1008, 1053, 1054, 1055, 1071, 1072, 1074, 1084, 1086, 1087, 1088, 1089, 1120, 1121], "basic": [7, 61, 68, 88, 130, 142, 151, 163, 168, 170, 171, 172, 173, 177, 178, 182, 183, 192, 201, 204, 207, 214, 220, 225, 228, 231, 237, 243, 246, 250, 253, 260, 263, 264, 265, 267, 268, 269, 270, 271, 272, 277, 278, 279, 296, 319, 364, 368, 371, 377, 404, 411, 427, 428, 477, 481, 550, 555, 558, 561, 562, 564, 568, 571, 582, 588, 597, 633, 641, 675, 680, 684, 685, 686, 687, 708, 720, 721, 722, 783, 786, 787, 790, 800, 839, 850, 855, 864, 876, 883, 891, 899, 931, 953, 954, 1007, 1009, 1043, 1062, 1076, 1077, 1098, 1099, 1100, 1118, 1121], "2021": [7, 10, 110, 175, 177, 180, 182, 183, 185, 188, 191, 192, 193, 194, 198, 201, 203, 204, 206, 207, 209, 293, 294, 301, 304, 305, 306, 307, 308, 309, 310, 319], "xx": 7, "yy": 7, "train": [7, 23, 24, 25, 26, 27, 124, 128, 138, 147, 152, 167, 168, 170, 171, 172, 173, 175, 177, 178, 182, 185, 188, 191, 192, 193, 194, 198, 201, 210, 214, 217, 220, 222, 225, 228, 231, 240, 243, 250, 253, 320, 1054, 1060], "inform": [7, 37, 116, 126, 138, 163, 166, 167, 168, 170, 171, 172, 173, 175, 177, 178, 182, 185, 188, 191, 192, 193, 194, 198, 201, 210, 214, 217, 220, 222, 225, 228, 231, 240, 243, 250, 253, 292, 301, 404, 688, 984, 1054], "\u00fcberblick": [7, 175, 185, 194, 210, 222, 1111], "log": [7, 103, 115, 132, 167, 168, 171, 172, 180, 182, 183, 185, 188, 192, 194, 198, 201, 210, 222, 231, 301, 314, 315, 784, 785, 792], "tag": [7, 158, 177, 181, 185, 188, 194, 210, 222, 223], "1": [7, 18, 22, 35, 71, 76, 95, 105, 111, 133, 136, 148, 156, 158, 163, 167, 168, 170, 171, 172, 174, 175, 177, 182, 183, 185, 188, 192, 193, 194, 198, 201, 204, 207, 210, 214, 222, 247, 250, 253, 256, 257, 258, 259, 260, 264, 268, 270, 278, 279, 300, 302, 303, 310, 317, 319, 322, 323, 324, 326, 330, 334, 343, 345, 346, 347, 348, 352, 353, 356, 359, 365, 366, 367, 368, 369, 372, 374, 378, 382, 384, 386, 389, 390, 391, 392, 394, 395, 397, 398, 404, 418, 428, 431, 433, 470, 531, 533, 540, 551, 554, 561, 563, 644, 649, 690, 695, 701, 704, 705, 716, 721, 728, 739, 749, 817, 856, 857, 863, 872, 886, 899, 900, 902, 904, 906, 907, 918, 925, 929, 932, 933, 949, 957, 962, 983, 985, 986, 992, 995, 1000, 1001, 1003, 1004, 1005, 1006, 1071, 1082, 1083, 1085, 1107], "2": [7, 18, 22, 35, 72, 76, 95, 105, 111, 133, 136, 158, 163, 164, 167, 168, 170, 171, 172, 174, 177, 181, 182, 183, 185, 188, 192, 193, 194, 198, 201, 203, 204, 207, 210, 214, 222, 247, 250, 253, 256, 257, 258, 259, 260, 264, 268, 278, 279, 315, 317, 319, 322, 323, 324, 326, 330, 334, 343, 345, 346, 347, 348, 352, 353, 356, 359, 365, 366, 368, 369, 372, 374, 378, 382, 384, 386, 389, 390, 391, 392, 394, 395, 397, 398, 404, 419, 428, 431, 433, 470, 518, 531, 533, 540, 551, 554, 561, 563, 645, 650, 690, 695, 701, 704, 705, 721, 728, 749, 817, 856, 857, 863, 872, 886, 899, 900, 902, 904, 906, 907, 918, 925, 929, 932, 933, 945, 949, 957, 962, 983, 985, 986, 992, 994, 995, 1001, 1003, 1004, 1005, 1006, 1067, 1069, 1070, 1071, 1082, 1083, 1085], "live": [7, 40, 42, 43, 150, 153, 175, 185, 188, 198, 247, 526, 566, 567, 569, 570, 573, 574, 575, 587, 626, 637, 670, 671, 698, 700, 788, 814, 878, 896], "hack": [7, 40, 42, 43, 150, 153, 175, 185, 188, 198, 247, 250, 254, 257, 260, 279, 526, 566, 567, 569, 570, 573, 574, 575, 587, 626, 637, 670, 671, 698, 700, 815, 896], "jupyt": [7, 8, 38, 175, 176, 180, 181, 182, 185, 186, 188, 189, 198, 199, 201, 202, 204, 205, 208, 210, 212, 215, 218, 221, 224, 227, 229, 230, 233, 242, 245, 248, 252, 261, 262, 266, 272, 277, 280, 281, 296, 1060, 1061], "notebook": [7, 8, 38, 170, 175, 176, 180, 181, 182, 185, 186, 188, 189, 191, 198, 199, 201, 202, 204, 205, 206, 208, 210, 212, 215, 218, 221, 224, 227, 229, 230, 233, 242, 245, 248, 252, 261, 262, 266, 272, 277, 280, 281, 296, 301, 1058, 1060, 1061], "link": [7, 22, 37, 115, 134, 152, 163, 166, 168, 170, 172, 175, 177, 182, 183, 185, 194, 198, 201, 204, 210, 217, 228, 231, 264, 270, 306, 308, 382, 384, 633, 647, 654, 672, 679, 683, 734, 745, 746, 796, 817, 838, 856, 863, 871, 947, 948, 979, 1009, 1010, 1055, 1074, 1076, 1077, 1079, 1080, 1081, 1082, 1090, 1095], "programmierung": [8, 10, 150, 175, 176, 185, 186, 194, 210, 212, 222, 224, 319], "grundlagen": [8, 10, 163, 174, 175, 176, 185, 186, 188, 189, 194, 198, 202, 205, 208, 210, 212, 222, 224, 227, 230, 233, 242, 245, 266, 319], "detail": [9, 76, 183, 187, 219, 226, 258, 275, 296, 318, 394, 473, 562, 985], "content": [10, 23, 35, 126, 128, 130, 131, 132, 133, 134, 135, 136, 137, 146, 155, 159, 160, 190, 303, 407, 509, 512, 518, 521, 527, 609, 686, 786, 806, 819, 825, 831, 834, 851, 859, 860, 867, 876, 892, 894, 896, 911, 921, 924, 938, 958, 1013, 1014, 1018, 1027, 1041, 1048, 1099, 1101, 1104, 1112, 1115, 1117], "anhand": [10, 174, 194, 210, 222, 319, 1118], "von": [10, 22, 145, 150, 154, 157, 164, 174, 181, 194, 195, 210, 222, 296, 319, 1118], "12": [10, 22, 43, 154, 173, 174, 178, 185, 193, 206, 207, 209, 240, 301, 306, 310, 312, 319, 1085], "und": [10, 22, 144, 148, 164, 174, 175, 179, 181, 185, 187, 190, 194, 210, 213, 219, 222, 226, 232, 302, 319, 344, 353, 1111, 1122], "13": [10, 22, 39, 43, 141, 163, 174, 175, 185, 238, 247, 250, 251, 253, 319], "4": [10, 22, 105, 133, 158, 167, 170, 174, 182, 183, 185, 188, 192, 193, 210, 222, 247, 310, 319, 324, 382, 386, 392, 428, 431, 533, 651, 957, 1085], "templat": [11, 192, 209, 258, 282, 490, 504, 505, 506, 507, 523, 524, 525, 553, 554, 555, 561, 594, 640, 643, 648, 650, 678], "descript": [11, 57, 60, 339, 354, 363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 439, 526, 534, 549, 552, 555, 591, 596, 605, 607, 610, 612, 613, 614, 615, 616, 617, 618, 619, 621, 622, 624, 666, 667, 691, 699, 703, 707, 709, 851, 859, 860, 914], "sidebar": [11, 35], "metadata": [11, 235, 236, 238, 839], "about": [12, 105, 128, 147, 206, 211, 223, 241, 244, 250, 254, 271, 421, 631, 668, 846, 947, 999, 1002, 1003, 1004], "thi": [12, 30, 35, 115, 133, 138, 139, 141, 142, 152, 161, 540, 554, 669, 776, 855, 878, 931, 948, 955, 957], "site": [12, 27, 30, 115, 135, 137, 161], "licens": 12, "gplv3": 12, "github": [12, 135, 137, 167, 168, 180, 188, 301, 470, 478, 1055], "sphinx": [12, 38, 64, 137], "instal": [12, 59, 134, 138, 142, 146, 159, 160, 163, 188, 192, 193, 273, 301, 306, 321, 416, 732, 874, 929, 940, 945, 946, 979, 1009, 1010, 1042, 1055, 1074, 1092, 1094, 1099, 1101, 1114], "instruct": [12, 385, 695, 902, 932, 949], "pip": [12, 264], "venv": [12, 264], "work": [12, 16, 63, 95, 111, 114, 119, 133, 167, 198, 236, 238, 255, 256, 257, 258, 308, 402, 403, 404, 478, 554, 708, 776, 777, 813, 816, 820, 945], "progress": [12, 16, 114], "more": [12, 133, 151, 164, 203, 206, 211, 219, 223, 226, 228, 240, 241, 243, 244, 247, 249, 250, 253, 259, 260, 263, 264, 269, 270, 271, 275, 278, 279, 301, 324, 330, 353, 369, 371, 385, 395, 411, 421, 423, 533, 543, 546, 553, 566, 572, 626, 668, 669, 673, 690, 765, 794, 795, 796, 800, 801, 846, 873, 915, 952, 954, 956, 999, 1002, 1003, 1004, 1054, 1066, 1092, 1104], "opentrain": [13, 22], "draft": [14, 851, 1008], "topic": [14, 20, 71, 72, 96, 97, 99, 100, 101, 102, 127, 163, 167, 170, 191, 192, 193, 204, 209, 228, 231, 247, 250, 253, 256, 257, 278, 282, 283, 291, 305, 309, 310, 339, 354, 363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 432, 469, 476, 479, 480, 483, 484, 485, 503, 526, 534, 549, 552, 555, 571, 577, 581, 589, 594, 596, 599, 605, 623, 624, 628, 635, 642, 653, 666, 667, 677, 682, 691, 699, 703, 707, 709, 710, 711, 734, 854, 869, 887, 889, 908, 914, 935, 941, 942, 957, 962, 970, 1008, 1057, 1061, 1068, 1072, 1074, 1078, 1091, 1097], "miscellan": [15, 113, 124, 128, 147, 151, 171, 200, 211, 213, 219, 229, 235, 236, 240, 244, 247, 256, 259, 260, 265, 270, 271, 278, 279, 282, 504, 526, 605, 609, 640, 703, 893, 904, 906, 1001, 1072, 1085], "s5": [16, 17, 128], "integr": [16, 630, 646], "web": [16, 91, 92, 129], "slide": [16, 17, 29, 43, 151, 304, 316, 925, 929], "implement": [16, 219, 287, 293, 433, 440, 450, 455, 465, 466, 467, 468, 473, 481, 482, 485, 530, 531, 536, 542, 544, 602, 626, 637, 715, 718, 737, 773, 952, 958, 974, 1033], "note": [16, 35, 59, 113, 146, 287, 426, 802], "todo": [16, 128, 157, 160, 171, 177, 288, 289, 290, 307, 409, 504, 505, 508, 511, 514, 517, 520, 523, 714, 718, 726, 758, 920, 923, 927, 1073, 1098, 1103], "test": [17, 35, 40, 41, 42, 43, 48, 69, 142, 163, 193, 217, 228, 231, 240, 249, 250, 253, 254, 255, 259, 260, 273, 275, 278, 279, 309, 315, 319, 410, 424, 433, 453, 470, 478, 481, 482, 546, 718, 737, 770, 862, 891, 943, 946, 1010, 1043, 1050, 1051, 1052, 1060, 1092, 1093, 1097, 1099, 1101, 1104, 1114, 1130], "level": [18, 398], "head": [18, 35, 745, 848, 1066], "imag": [18, 152, 171, 945], "screencast": [19, 125], "written": [20, 529, 532], "new": [20, 127, 193, 209, 235, 236, 238, 282, 319, 473, 509, 625, 626, 666, 702, 737, 770, 1075], "write": [20, 40, 48, 56, 130, 473, 509, 536, 648, 663, 686, 715, 883, 890, 975, 1005, 1011, 1083], "netide": [21, 22], "f\u00f6rderantrag": [21, 22], "daten": [22, 187, 195], "antragsteller_in": 22, "allgemein": 22, "projektnam": 22, "untertitel": 22, "3": [22, 95, 105, 111, 133, 158, 167, 168, 170, 171, 172, 173, 174, 177, 182, 183, 188, 192, 193, 194, 196, 198, 203, 204, 207, 210, 214, 222, 229, 247, 250, 253, 256, 258, 259, 260, 264, 268, 270, 278, 279, 319, 324, 374, 378, 382, 386, 392, 394, 395, 397, 398, 428, 431, 433, 470, 533, 646, 705, 886, 902, 906, 907, 957, 986, 994, 1000, 1005, 1085], "allgemeinverst\u00e4ndlich": 22, "kurzbeschreibung": 22, "de": [22, 319, 783], "anschlussf\u00f6rderung": 22, "die": [22, 51, 139, 157, 195, 1119], "besonder": [22, 174], "bedeutung": 22, "ihr": 22, "f\u00fcr": [22, 158, 164, 174, 319, 1110], "da": [22, 154, 164, 181, 190, 223], "internet": 22, "internetnutzung": 22, "IN": 22, "\u00f6sterreich": 22, "zielgrupp": 22, "projektziel": 22, "5": [22, 133, 151, 158, 163, 164, 166, 174, 192, 193, 195, 247, 310, 319, 382, 392, 428, 431, 652, 784, 785, 1085], "l\u00f6sung": [22, 164], "beschreibung": 22, "der": [22, 174, 179, 195, 302, 319, 1107], "probleml\u00f6sung": 22, "wesentlich": 22, "element": [22, 174, 211, 229, 231, 486, 488, 489, 493, 582, 584, 585, 991], "ein": [22, 164, 195, 1118, 1123], "nachhaltigen": 22, "impact": 22, "nach": [22, 231], "projektend": 22, "6": [22, 174, 175, 195, 196, 229, 319, 382, 392, 428, 431, 1000, 1122], "umfeldanalys": 22, "wa": [22, 163, 179, 615], "ist": [22, 164], "stand": 22, "technik": 22, "method": [22, 187, 190, 200, 211, 213, 216, 219, 229, 244, 256, 265, 271, 293, 295, 303, 477, 518, 530, 537, 538, 539, 542, 544, 546, 549, 601, 604, 612, 616, 684, 685, 686, 687, 688, 716, 751, 753, 767, 972, 974, 1000, 1001, 1002, 1093], "wissen": 22, "welch": 22, "ander": [22, 150, 302], "l\u00f6sungen": 22, "vorhaben": 22, "zu": [22, 157, 174], "den": [22, 139, 179, 195], "genannten": 22, "problemen": 22, "gibt": [22, 174], "e": [22, 401, 685], "schon": 22, "7": [22, 167, 174, 175, 195, 319, 382, 392, 1122], "alleinstellungsmerkm": 22, "8": [22, 174, 175, 194, 195, 319, 382, 392, 863, 1071, 1122], "projektergebniss": 22, "erforderlich": 22, "lizenzen": 22, "dritter": 22, "9": [22, 167, 168, 174, 175, 195, 319, 382, 392, 957, 1107, 1122], "erfolgreich": 22, "projektabschluss": 22, "sonstigen": 22, "aktivit\u00e4ten": 22, "im": [22, 174, 200, 213, 226, 229, 244, 251, 265, 271, 319, 995], "projektbereich": 22, "angaben": 22, "zur": [22, 145, 164, 174], "fachlichen": 22, "eignung": 22, "mitarbeiterinnen": 22, "projektkernteam": 22, "erfahrung": 22, "vorgesehenen": 22, "projektleiterin": 22, "zum": [22, 150, 195], "maxim": 22, "min\u00fctigen": 22, "video": [22, 23, 182, 240, 270, 634], "risiken": 22, "erfolgskriterien": 22, "am": [22, 164, 223, 319], "angestrebt": 22, "jahr": 22, "10": [22, 43, 97, 98, 117, 148, 151, 156, 167, 170, 174, 209, 210, 237, 238, 239, 240, 241, 255, 278, 301, 305, 306, 307, 311, 319, 382, 488, 784, 785], "umsetzung": 22, "einj\u00e4hrig": 22, "wichtig": 22, "partner_innen": 22, "arbeitsschwerpunkt": 22, "ressourcen": 22, "nutzer_innen": 22, "kommunikationskan\u00e4l": 22, "11": [22, 43, 149, 154, 172, 173, 174, 203, 204, 209, 234, 238, 240, 243, 244, 308, 309, 319, 382, 504, 627, 630, 663, 664, 675, 684, 709], "projekttermin": 22, "termin": [22, 788, 900, 963], "projektstart": 22, "kosten": 22, "finanzierung": 22, "projektkosten": 22, "personalkosten": 22, "sonstig": 22, "gesamtkosten": 22, "wir": [22, 179, 195], "beantragen": 22, "folgend": 22, "f\u00f6rderung": 22, "restlichen": 22, "werden": [22, 174], "finanziert": 22, "durch": [22, 164], "sonderprei": 22, "14": [22, 43, 154, 163, 174, 175, 178, 192, 234, 319, 1085], "erg\u00e4nzend": 22, "transparenz": 22, "mehrfachantr\u00e4g": 22, "nutzung": 22, "whataventur": 22, "plattform": 22, "eingereicht": 22, "teil": 22, "einer": [22, 154, 163, 174, 319], "schulischen": 22, "verpflichtung": 22, "z": 22, "b": 22, "htl": 22, "diplomarbeit": 22, "wie": [22, 181, 187], "haben": [22, 164], "sie": [22, 164], "erfahren": 22, "mehrfachnennungen": 22, "m\u00f6glich": 22, "16": [22, 193, 217, 231, 243, 244, 319, 957, 1107], "datenschutz": 22, "screenplai": [23, 61, 286, 410, 506, 509, 512, 515, 518, 521, 524, 556, 557, 558, 559, 560, 563, 564, 565, 583, 584, 585, 586, 712, 715, 720, 725, 730, 732, 770, 773, 776, 921, 924, 928, 996, 1087, 1094, 1099, 1101, 1104], "The": [23, 37, 41, 43, 59, 98, 129, 142, 174, 190, 193, 196, 203, 220, 229, 232, 247, 255, 257, 259, 265, 268, 275, 278, 282, 322, 330, 331, 368, 369, 384, 391, 392, 401, 402, 406, 407, 416, 480, 481, 537, 561, 582, 583, 605, 625, 626, 634, 639, 641, 643, 668, 686, 689, 700, 753, 783, 792, 793, 800, 817, 820, 831, 834, 837, 839, 848, 850, 854, 870, 872, 874, 875, 877, 883, 891, 895, 910, 912, 919, 931, 933, 934, 943, 944, 952, 953, 955, 959, 963, 971, 974, 978, 980, 982, 989, 994, 1000, 1042, 1064, 1066, 1073, 1082, 1093, 1114], "problem": [23, 366, 388, 411, 412, 420, 426, 427, 428, 431, 437, 480, 481, 627, 639, 643, 663, 664, 673, 689, 713, 747, 794, 813, 872, 874, 878, 933, 948, 949, 953, 967, 1062, 1064, 1088, 1095], "And": [23, 40, 59, 61, 142, 238, 241, 244, 247, 250, 255, 256, 257, 258, 259, 260, 265, 268, 270, 273, 275, 278, 279, 282, 342, 386, 410, 411, 413, 416, 417, 422, 423, 424, 430, 433, 439, 447, 448, 453, 461, 467, 477, 529, 530, 536, 541, 557, 561, 562, 563, 565, 583, 598, 599, 603, 606, 631, 637, 639, 641, 654, 671, 674, 675, 676, 678, 679, 684, 696, 698, 700, 705, 721, 779, 783, 784, 785, 789, 792, 798, 800, 836, 848, 850, 855, 859, 865, 866, 877, 890, 912, 940, 941, 943, 945, 946, 947, 948, 950, 955, 959, 960, 963, 967, 968, 969, 974, 975, 976, 977, 1041, 1042, 1043, 1051, 1066, 1071, 1076, 1077, 1079, 1080, 1081, 1092, 1114], "me": [23, 135, 889], "open": [23, 119, 144, 260, 279, 436, 715, 716, 880, 883, 886, 888, 925, 952, 1005], "sourc": [23, 38, 134, 144, 160, 411, 429, 713, 716, 718, 721, 723, 726, 730, 735, 737, 747, 749, 757, 760, 765, 884, 933, 1010, 1071], "walk": [23, 247, 301], "through": [23, 247, 301], "us": [24, 25, 26, 27, 28, 29, 30, 36, 40, 132, 136, 138, 142, 152, 153, 159, 161, 171, 190, 192, 193, 206, 209, 327, 329, 332, 347, 362, 384, 394, 402, 403, 412, 414, 428, 431, 448, 470, 569, 593, 614, 622, 634, 638, 639, 675, 689, 700, 849, 861, 862, 863, 899, 915, 932, 933, 943, 944, 950, 952, 955, 958, 968, 977, 1087, 1093, 1094], "case": [24, 25, 26, 27, 28, 29, 192, 358, 362, 433, 494, 496, 499, 674, 675, 884, 888, 889, 890, 942, 950, 977, 1093, 1099], "custom": [24, 119, 122, 135, 291, 530, 531, 545, 551, 575, 629, 1080, 1082, 1099], "subtract": [24, 528], "known": [24, 130], "calcul": [25, 190, 351, 430, 975], "minimum": [25, 735], "durat": 25, "trainer": [26, 146], "editor": [26, 183], "end": [26, 640], "user": [26, 40, 44, 193, 195, 319, 532, 611, 616, 617, 618, 619, 620, 621, 721, 789, 790, 792, 793, 794, 802, 803, 814, 874, 954, 1044, 1046, 1048, 1049, 1051, 1087], "audienc": [26, 1114], "from": [27, 28, 36, 38, 40, 41, 43, 55, 98, 117, 123, 142, 152, 160, 161, 169, 209, 219, 247, 250, 255, 264, 319, 337, 359, 365, 407, 410, 553, 556, 597, 606, 610, 636, 637, 676, 725, 730, 771, 776, 861, 873, 891, 915, 924, 931, 973, 1010, 1050, 1054, 1055, 1060, 1062, 1107], "other": [27, 36, 50, 190, 259, 271, 303, 634, 735, 757, 802, 962], "menu": 28, "choos": 28, "show": 29, "plain": [29, 569, 597, 598, 626], "text": [29, 268, 368, 844, 847, 850, 1005, 1083], "file": [29, 40, 46, 152, 154, 190, 200, 203, 219, 226, 228, 229, 243, 247, 251, 261, 263, 264, 265, 268, 269, 270, 292, 293, 308, 366, 410, 412, 418, 433, 512, 543, 715, 716, 717, 725, 757, 784, 785, 788, 806, 811, 812, 818, 819, 822, 823, 824, 832, 836, 839, 840, 844, 847, 849, 865, 873, 874, 878, 879, 883, 884, 885, 886, 887, 888, 889, 890, 892, 893, 897, 921, 925, 931, 932, 946, 952, 981, 1005, 1010, 1011, 1012, 1033, 1035, 1044, 1046, 1066, 1099], "emoji": 30, "code": [30, 39, 41, 43, 105, 161, 162, 164, 165, 188, 204, 257, 259, 260, 273, 279, 319, 388, 398, 408, 409, 410, 412, 418, 419, 420, 425, 429, 505, 508, 511, 514, 517, 520, 523, 553, 638, 686, 718, 719, 723, 724, 725, 726, 727, 737, 738, 747, 748, 759, 760, 761, 765, 766, 889, 920, 923, 927, 947, 948, 949, 1050, 1051, 1052, 1055, 1058, 1061, 1071, 1084, 1094, 1098, 1103, 1114], "sphinxemoji": 30, "setup": [30, 61, 76, 107, 134, 138, 160, 167, 168, 170, 171, 172, 193, 243, 249, 250, 253, 256, 258, 260, 263, 264, 268, 269, 270, 279, 424, 477, 480, 854, 862, 870, 881, 945, 946, 979, 1042, 1043, 1094, 1104], "most": [30, 36, 61, 641, 1087], "here": [30, 132, 433, 873], "In": [30, 43, 63, 136, 138, 139, 141, 171, 174, 235, 236, 238, 257, 259, 282, 319, 410, 412, 418, 419, 481, 485, 486, 528, 532, 543, 544, 545, 546, 547, 548, 573, 630, 634, 638, 668, 669, 675, 688, 735, 784, 785, 792, 848, 898, 931, 933, 947, 954, 995, 1112], "all": [30, 36, 51, 61, 187, 190, 209, 255, 319, 600, 626, 634, 669, 689, 776, 794, 931, 947, 965, 1053], "recip": 31, "isoamsa": 32, "txt": [32, 33, 34, 36], "ad": [32, 33, 34, 135, 947, 1075, 1082], "mathemat": [32, 33, 34], "symbol": [32, 33, 34, 328, 343, 404, 838, 931], "arrow": 32, "isoamsr": 33, "relat": [33, 147, 250, 253, 346], "isonum": 34, "binari": [34, 448, 1005], "oper": [34, 151, 164, 174, 187, 203, 206, 209, 216, 219, 223, 226, 240, 255, 296, 330, 345, 346, 347, 350, 351, 353, 354, 359, 371, 477, 504, 529, 530, 536, 544, 584, 684, 692, 698, 715, 716, 717, 799, 878, 915, 974, 984, 986, 988, 1004, 1077, 1085], "layout": [35, 219, 377], "page": [35, 92, 135, 137, 728, 817, 849, 877], "admonit": 35, "i": [35, 43, 132, 133, 150, 190, 200, 206, 211, 216, 219, 226, 228, 229, 261, 265, 268, 270, 293, 305, 330, 356, 403, 409, 427, 477, 500, 528, 535, 597, 603, 604, 639, 641, 664, 668, 673, 676, 685, 689, 693, 697, 730, 741, 762, 777, 788, 792, 793, 798, 799, 800, 813, 823, 836, 863, 873, 874, 875, 878, 879, 880, 881, 882, 883, 886, 888, 890, 892, 893, 910, 913, 931, 948, 950, 955, 1005, 1062, 1079, 1085, 1104], "an": [35, 135, 206, 259, 274, 278, 297, 301, 319, 415, 420, 530, 639, 654, 718, 836, 862, 873, 878, 915, 948, 959, 968, 995, 997, 1094, 1112], "tip": 35, "hint": [35, 450, 485], "import": [35, 142, 150, 190, 200, 209, 301, 535, 929, 954, 962, 1073], "attent": [35, 997], "caution": [35, 604], "error": [35, 41, 142, 206, 259, 260, 278, 279, 369, 394, 428, 550, 560, 561, 645, 648, 799, 863, 875, 884, 888, 889, 890, 967, 1023], "danger": [35, 336, 697, 814], "blech": 35, "titl": 35, "blah": 35, "kursdaten": [35, 1108, 1109, 1110, 1111, 1116, 1118, 1119, 1123, 1124, 1125, 1126, 1128, 1129, 1130], "local": [35, 37, 95, 111, 113, 151, 174, 367, 399, 416, 437, 870, 873, 906, 933, 996, 1094], "bleh": 35, "To": [35, 37, 40, 42, 51, 128, 226, 255, 432, 433, 448, 470, 595, 606, 626, 630, 639, 641, 643, 654, 668, 676, 684, 686, 688, 689, 700, 728, 769, 771, 784, 785, 865, 866, 873, 933, 943, 945, 950, 952, 953, 973, 974, 1051, 1075, 1076, 1082], "do": [35, 40, 128, 190, 232, 360, 397, 416, 427, 626, 747, 769, 784, 785, 800, 931], "mmlalia": 36, "mathml": 36, "alias": 36, "entiti": [36, 900], "restructuredtext": 37, "cheat": [37, 301], "sheet": [37, 301], "further": [37, 116, 155, 191, 192, 214, 292, 301, 398, 634, 688, 984], "document": [37, 137, 187, 203, 296, 566, 567, 568, 569, 570, 572, 573, 574, 575, 578, 579, 582, 587, 721, 737, 739, 743, 745, 767, 771, 774, 784, 785, 788, 792, 799, 800, 801, 802, 817, 818, 819, 820, 836, 839, 840, 873, 875, 877, 879, 880, 881, 883, 886, 887, 888, 889, 890, 893, 931, 932, 983, 1007, 1017, 1083, 1092, 1099], "extern": [37, 273, 287, 365, 414, 543, 732, 733, 862, 948, 1018, 1114], "section": 37, "refer": [37, 128, 131, 174, 200, 203, 206, 213, 226, 229, 235, 236, 238, 241, 244, 248, 251, 256, 259, 265, 271, 334, 372, 399, 541, 635, 638, 639, 641, 668, 669, 671, 680, 685, 687, 688, 705, 706, 764, 995], "That": [37, 232, 235, 236, 238, 255, 282, 373, 431, 528, 535, 626, 629, 639, 668, 686, 687, 757, 792, 863, 873, 878, 879, 882, 950, 977, 1101], "we": [37, 40, 43, 51, 408, 410, 747, 776, 943, 1099], "anoth": [37, 219, 408, 915, 947], "contain": [37, 209, 229, 255, 258, 504, 520, 521, 522, 561, 562, 576, 577, 580, 581, 582, 626, 630, 678, 745, 945], "abov": 37, "footnot": 37, "sphinxish": 38, "run": [38, 117, 136, 424, 478, 546, 765, 854, 879, 880, 881, 945, 946, 982, 1058, 1061, 1092], "seminar": 39, "clean": [39, 41, 43, 197, 257, 259, 260, 279, 319, 409, 410], "2022": [39, 96, 97, 98, 99, 100, 101, 102, 209, 210, 211, 214, 217, 220, 222, 225, 228, 231, 234, 237, 238, 239, 240, 241, 243, 244, 311, 312, 313, 319], "04": [39, 102, 136, 209, 220, 222, 225, 258, 259, 260, 261, 262, 279, 281, 301, 319, 945], "agenda": [39, 167, 168, 170, 171, 172, 173, 178, 182, 183, 220, 225, 237, 246, 250, 253, 259, 263, 267, 269, 273, 278, 282, 314, 315, 1114], "timelin": 39, "befor": [40, 61, 119, 152, 684, 1099], "formal": [40, 330], "unit": [40, 41, 43, 69, 163, 193, 231, 240, 250, 253, 309, 470, 481, 546, 1043, 1097], "initi": [40, 200, 235, 236, 238, 282, 332, 344, 393, 485, 511, 512, 513, 528, 535, 546, 583, 606, 626, 628, 629, 630, 631, 675, 697, 751, 762, 774, 904, 906], "structur": [40, 41, 124, 128, 151, 214, 235, 236, 238, 240, 262, 273, 281, 282, 362, 370, 377, 380, 386, 422, 470, 504, 675, 680, 700, 725, 753, 949, 962, 1092, 1099, 1114], "snippet": [40, 42, 48], "userdb": [40, 44, 47, 48, 53, 56, 192, 504, 618, 622], "bin": 40, "binaryfil": 40, "cpp": [40, 418, 470, 473, 644, 645, 646, 649, 650, 651, 652, 655, 656, 658, 659, 660, 661, 662], "extend": [40, 187, 546, 971], "read": [40, 47, 48, 56, 190, 197, 292, 293, 303, 337, 398, 410, 433, 634, 676, 715, 773, 879, 883, 889, 891, 1005, 1011, 1012, 1044, 1045, 1046, 1047, 1060, 1083], "iter": [40, 153, 164, 169, 174, 179, 181, 187, 190, 195, 196, 200, 203, 206, 211, 213, 216, 219, 228, 229, 240, 241, 243, 244, 250, 253, 257, 261, 263, 264, 265, 269, 270, 293, 561, 562, 585, 626, 654, 661, 674, 675, 676, 708, 745, 957, 959, 960, 961, 973, 993, 994, 1003], "bug": [40, 45, 51, 347, 512, 676], "faschingbau": [40, 135], "As": [40, 431, 448, 639, 678, 863, 897, 931, 968, 1101], "last": [40, 347, 368, 369, 398, 551, 554, 690, 907, 929, 1099], "name": [40, 41, 200, 203, 219, 341, 379, 537, 626, 757, 801, 819, 925, 996, 1007], "wrap": [40, 163, 394, 626, 953], "up": [40, 133, 163, 197, 240, 258, 259, 278, 306, 394, 626, 968], "what": [40, 43, 47, 51, 138, 141, 206, 216, 356, 397, 408, 532, 601, 620, 626, 638, 639, 668, 689, 726, 747, 757, 773, 777, 792, 800, 818, 857, 870, 873, 874, 878, 879, 882, 886, 918, 931, 943, 947, 955, 959, 963, 1006, 1079, 1082], "have": [40, 43, 408, 747, 943, 948], "messag": [41, 131, 132, 407, 413, 905, 924, 925, 1074, 1099], "book": [41, 43, 178, 228, 270, 322, 407, 1055], "survei": [41, 408], "comment": [41, 187, 211, 226, 251, 296, 983, 1024], "format": [41, 48, 190, 196, 211, 271, 1000, 1052], "object": [41, 164, 169, 206, 213, 219, 223, 231, 232, 240, 243, 244, 256, 257, 259, 260, 263, 264, 269, 275, 278, 279, 289, 408, 426, 431, 511, 512, 513, 528, 530, 533, 536, 538, 542, 544, 599, 601, 615, 630, 633, 636, 639, 685, 925, 948, 949, 954, 962, 968, 970, 972, 1006, 1076, 1080, 1085], "data": [41, 151, 153, 179, 188, 214, 228, 231, 240, 264, 278, 342, 386, 389, 410, 534, 538, 561, 680, 792, 906, 973, 1041, 1055, 1060, 1062], "handl": [41, 206, 209, 219, 231, 250, 253, 258, 259, 260, 278, 279, 312, 420, 428, 550, 875, 954, 1007], "boundari": [41, 1071], "class": [41, 164, 190, 209, 213, 216, 219, 232, 240, 256, 261, 275, 413, 431, 438, 439, 456, 457, 470, 473, 482, 505, 506, 507, 530, 537, 538, 543, 545, 546, 547, 548, 554, 569, 597, 598, 617, 626, 627, 629, 637, 638, 670, 684, 713, 953, 967, 968, 971, 972, 973, 974], "switch": [42, 358, 390, 503], "googletest": [42, 159, 478, 1097], "git": [42, 75, 113, 134, 142, 146, 188, 192, 193, 247, 301, 306, 319, 730, 1055], "submodul": 42, "establish": [42, 43, 946], "demo": [42, 249, 250, 257, 414, 433, 670, 685, 788, 814, 878, 913, 917], "straightforward": [42, 164], "main": [42, 375, 466, 467, 468, 947], "convers": [42, 187, 203, 211, 213, 219, 223, 226, 244, 255, 261, 265, 271, 296, 347, 374, 598, 606, 986, 1000], "fix": [42, 134, 142, 235, 236, 238, 255, 282, 293, 536, 654, 700, 747, 748, 760, 761], "shortcom": 42, "softwar": [43, 160, 257, 408, 409, 863, 936, 939, 1116], "A": [43, 61, 131, 142, 209, 235, 236, 238, 250, 254, 255, 256, 257, 259, 264, 282, 319, 325, 334, 364, 391, 409, 410, 413, 427, 447, 461, 470, 473, 477, 486, 501, 528, 543, 544, 553, 562, 592, 603, 604, 617, 626, 631, 639, 668, 671, 684, 687, 689, 784, 785, 788, 802, 813, 836, 840, 873, 875, 879, 880, 881, 884, 887, 888, 889, 890, 897, 910, 915, 918, 931, 944, 945, 948, 949, 950, 958, 977, 980, 1042, 1071, 1076, 1079, 1082, 1083, 1092], "craft": [43, 257, 409], "09": [43, 136, 191, 201, 209, 275, 276, 319], "00": 43, "15": [43, 174, 180, 217, 250, 253, 263, 264, 265, 301, 308, 313, 319, 784, 785], "introductori": [43, 247, 654, 896], "word": [43, 226, 368, 369, 398, 401, 551, 554, 681, 690, 817, 1022, 1039], "engin": [43, 228, 863], "disciplin": 43, "coffe": 43, "break": [43, 174, 211, 361, 990, 993], "project": [43, 107, 135, 151, 192, 193, 207, 231, 236, 238, 240, 256, 258, 259, 260, 273, 275, 278, 279, 307, 308, 309, 313, 315, 408, 410, 470, 475, 478, 480, 546, 1042, 1086, 1092, 1114, 1117], "enter": [43, 61, 203, 561, 604, 639, 665, 674, 688, 760, 849, 917, 947, 955, 967, 968, 1066, 1071, 1076], "framework": 43, "lunch": 43, "cornerston": 43, "45": 43, "keep": [43, 136, 819], "small": 43, "23": [43, 172, 198, 214, 220, 238, 246, 256, 267, 268, 278, 319], "59": 43, "extrem": 43, "program": [43, 48, 61, 91, 147, 163, 169, 190, 193, 209, 219, 231, 232, 240, 243, 247, 257, 259, 260, 263, 264, 265, 269, 275, 278, 279, 308, 319, 323, 324, 326, 362, 363, 364, 370, 396, 401, 406, 408, 413, 433, 466, 467, 468, 473, 528, 689, 718, 770, 802, 813, 814, 855, 857, 876, 891, 894, 895, 898, 910, 920, 928, 931, 963, 970, 979, 980, 982, 984, 1031, 1043, 1054, 1084, 1085, 1113, 1125, 1126, 1127, 1128, 1129], "session": 43, "find": [44, 116, 134, 152, 428, 486, 568, 586, 704, 845, 1101], "crash": [44, 134], "If": [44, 47, 532, 626, 641, 773, 887, 888, 954, 1082], "Not": [44, 61, 63, 142, 223, 232, 493, 495, 498, 568, 604, 620, 626, 648, 663, 664, 676, 685, 747, 773, 813, 884, 887, 888, 889, 890, 910, 931, 948, 958, 1076, 1099], "found": [44, 495, 498, 568, 620, 1101], "state": [44, 132, 192, 654, 760, 762], "exist": [46, 63, 128, 493, 884, 887, 888, 890, 971, 1082], "ar": [46, 131, 132, 211, 213, 226, 394, 410, 532, 538, 626, 654, 915, 925, 953, 962, 974, 1081, 1101], "overwritten": 46, "done": [47, 432, 595, 689], "twice": 47, "altern": [48, 635], "output": [48, 152, 164, 292, 424, 607, 799, 957, 1060, 1099], "csv": [48, 203, 220, 228, 231, 240, 243, 263, 264, 265, 269, 270, 410, 1011, 1012, 1013, 1044, 1045, 1046, 1047, 1052, 1066], "frontend": 48, "featur": [49, 51, 61, 243, 259, 260, 261, 263, 264, 269, 278, 279, 387, 410, 666, 956, 971, 990, 1060, 1062], "search": [50, 566, 568, 569, 572, 582, 586, 606, 619, 620, 621, 846, 948, 1001, 1087], "By": [50, 159, 223, 255, 334, 541, 585, 616, 619, 621, 643, 654, 665, 668, 669, 671, 676, 680, 688, 704, 705, 706, 954, 987, 1079, 1080, 1081, 1092], "index": [50, 174, 192, 211, 223, 271, 399, 652, 857, 992, 1080, 1087, 1088, 1089], "backlog": 51, "need": [51, 293, 433, 648, 650, 915, 1066], "chang": [51, 802, 813, 820], "Or": [51, 410, 418, 419, 433, 637, 676, 877, 968, 1076], "Will": 51, "refactor": [51, 54, 410, 482, 725, 726, 727, 765, 1045, 1047, 1052], "after": [51, 167, 198, 360, 776, 792, 971], "backingstor": [52, 53, 55], "ha": [52, 53, 651], "too": [52, 53, 404, 419, 626, 670, 693], "mani": [52, 53, 219, 398, 420, 676, 839, 919], "respons": [52, 53, 195, 436], "interfac": [52, 67, 84, 171, 219, 258, 288, 419, 423, 433, 436, 440, 448, 459, 466, 467, 477, 480, 514, 515, 516, 523, 524, 525, 600, 716, 788, 856, 857, 860, 862, 967, 1067], "load": [55, 152, 385, 421, 735, 736, 861, 903, 965], "constructor": [55, 169, 219, 235, 236, 238, 244, 282, 477, 512, 518, 529, 530, 531, 532, 533, 535, 536, 545, 546, 547, 548, 615, 630, 631, 632, 637, 639, 663, 683, 684, 969], "bool": 56, "realli": [56, 626, 688], "submiss": [57, 60, 107], "pointless": [57, 58, 60, 61, 974], "blink": [57, 58, 60, 61, 301], "With": [57, 58, 60, 61, 95, 111, 161, 192, 239, 255, 257, 259, 278, 319, 403, 411, 432, 447, 461, 478, 554, 636, 689, 783, 784, 785, 846, 849, 854, 859, 885, 948, 996, 1079, 1081, 1093, 1094, 1097], "asyncio": [57, 58, 60, 61], "libgpiod": [57, 58, 59, 60, 61], "raspberri": [57, 58, 60, 61, 142, 171, 287, 319, 737, 758, 854, 858, 861, 936, 940, 942, 944, 1123], "pi": [57, 58, 59, 60, 61, 142, 171, 319, 737, 757, 758, 854, 861, 943, 944, 1123], "biographi": [57, 60], "abstract": [57, 60, 240, 275, 426, 441, 455, 793, 879, 880, 881, 967], "fedora": [59, 134, 141, 730, 731, 732, 733, 945], "prepar": [59, 134, 152, 167, 168, 170, 171, 172, 173, 183, 192, 207, 217, 236, 238, 246, 470, 546, 757], "tarbal": [59, 142], "On": [59, 61, 192, 226, 228, 250, 254, 255, 259, 278, 321, 478, 481, 530, 561, 562, 566, 572, 675, 700, 800, 879, 880, 881, 886, 891, 895, 918, 945, 1010], "build": [59, 66, 132, 134, 142, 159, 160, 193, 211, 411, 413, 421, 470, 478, 545, 546, 547, 548, 725, 730, 731, 732, 733, 735, 757, 758, 861, 879, 880, 881, 891, 932, 933, 936, 939, 943, 944, 945, 947, 948, 949, 1003, 1101, 1119], "present": 61, "start": [61, 209, 235, 236, 238, 319, 433, 636, 648, 948, 1074, 1099], "point": [61, 223, 226, 477, 528, 530, 538, 544, 546, 547, 548, 554, 636, 648, 700, 784, 785, 943, 986], "greet": [61, 1017], "multipl": [61, 169, 369, 410, 411, 723, 724, 725, 819, 873, 931, 952, 954, 991, 1076, 1079, 1093], "background": [61, 136, 138, 527, 625], "thread": [61, 131, 133, 142, 259, 260, 279, 310, 504, 626, 692, 693, 698, 899, 900, 901, 906, 908, 915, 918, 963], "charact": [61, 323, 330, 333, 336, 343, 712, 713, 714, 715, 716, 717, 720, 721, 722, 1039], "devic": [61, 79, 95, 111, 712, 713, 714, 715, 716, 717, 720, 721, 722, 723, 724, 725, 747, 751, 752, 753, 788, 861, 863, 921], "base": [61, 142, 211, 219, 235, 236, 238, 240, 275, 282, 431, 597, 598, 626, 639, 654, 674, 675, 949, 954, 967], "gpio": [61, 84, 149, 171, 287, 288, 289, 290, 301, 737, 738, 861, 863, 895, 896, 897], "entir": [61, 255, 730, 732, 817, 873], "matrix": 61, "off": [61, 192], "bring": [61, 113, 306, 600], "togeth": [61, 416, 600, 819], "modular": [61, 209, 364], "plai": [61, 654], "bit": [61, 264, 350, 802, 813, 815, 980, 982], "row": [61, 255, 1075, 1079, 1080, 1081], "coroutin": [61, 238, 653, 654], "enough": [61, 528, 604], "sequenc": [61, 200, 203, 211, 243, 250, 253, 263, 264, 269, 270, 343, 501, 566, 572, 958, 991, 999], "loop": [61, 151, 153, 164, 174, 179, 211, 213, 223, 226, 229, 235, 236, 238, 257, 259, 278, 282, 326, 359, 360, 398, 471, 674, 898, 959, 990, 993], "forev": 61, "strip": [61, 196, 213, 219, 293], "down": [61, 419], "factori": [61, 426, 441, 455, 481], "turn": [61, 958], "Into": [61, 253, 275, 278, 337, 433, 471, 486, 563, 617, 626, 670, 1045, 1047, 1052], "anti": [61, 698, 700], "clumsi": [61, 700], "decor": [61, 190, 240, 250, 253, 257, 259, 260, 275, 278, 279, 431, 445, 459, 953], "wrapper": 61, "final": [61, 219, 235, 236, 238, 282, 665, 792, 796, 954], "playground": 61, "cycl": [61, 900], "fast": [61, 169], "forward": [61, 238, 335, 399, 688, 872], "ani": [61, 255, 427, 477, 910], "cancel": 61, "goodby": 61, "hochk\u00f6nig": 62, "k\u00f6nigsjodl": 62, "klettersteig": 62, "tour": [62, 626], "werfen": 62, "ostpreussenh\u00fctt": 62, "matrashau": 62, "blog": [63, 128], "articl": [63, 138, 139, 141, 142], "yet": [63, 219], "revisit": [63, 326, 394, 637], "post": [63, 143, 152, 924], "pending_xref": 64, "cmake": [66, 159, 160, 192, 247, 273, 274, 319, 411, 413, 415, 419, 470, 478, 891, 932, 933, 946, 1101, 1102, 1114], "oo": [68, 106, 164, 190, 193, 209, 216, 219, 228, 231, 235, 236, 238, 240, 250, 253, 256, 258, 275, 282, 310, 436, 474, 477, 504, 963], "graph": [70, 71, 72, 167, 402, 404, 609, 710, 758, 1013, 1014, 1018, 1027, 1041, 1048], "embed": [71, 72, 76, 94, 95, 105, 106, 110, 111, 112, 149, 158, 247, 256, 258, 284, 300, 302, 303, 315, 317, 319, 1115, 1116], "comput": [71, 72, 76, 94, 105, 106, 110, 112, 298, 300, 302, 303, 315, 317, 397, 398, 477, 784, 785, 793], "current": [71, 72, 431, 708, 820], "depend": [71, 72, 160, 273, 287, 288, 289, 290, 292, 414, 415, 417, 418, 422, 432, 436, 446, 470, 475, 490, 492, 504, 512, 571, 577, 581, 589, 591, 594, 599, 607, 608, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 628, 635, 642, 653, 677, 682, 734, 735, 784, 785, 786, 790, 804, 805, 806, 825, 830, 831, 834, 867, 869, 876, 882, 884, 892, 894, 896, 908, 911, 933, 935, 937, 938, 941, 942, 948, 963, 965, 1011, 1012, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1028, 1029, 1030, 1031, 1032, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1057, 1061, 1068, 1071, 1074, 1078, 1091, 1097, 1114], "ex": [73, 74, 80, 81, 82, 83, 89, 90], "race": [73, 74, 86, 694, 747, 748, 755, 901, 902, 965], "condit": [73, 74, 86, 352, 360, 369, 694, 698, 747, 748, 755, 901, 902, 904, 905, 965], "avoid": [74, 86], "goal": [74, 80, 81, 82, 83, 85, 86, 87, 89, 116, 118, 119, 121, 152, 256, 258, 1112, 1115], "outcom": [74, 80, 81, 82, 83, 170, 303], "introduct": [75, 78, 151, 235, 236, 238, 250, 253, 257, 258, 268, 273, 274, 282, 304, 319, 322, 339, 397, 401, 415, 432, 440, 527, 624, 630, 674, 683, 692, 707, 737, 757, 791, 954, 1092, 1112, 1114, 1125], "2019": [76, 151, 154, 319], "overview": [76, 147, 247, 259, 260, 279, 282, 316, 320, 636, 643, 654, 678, 684, 698, 700, 708, 728, 782, 793, 819, 850, 861, 862, 863, 864, 899, 931, 953, 1057, 1061], "knowledg": [76, 1114], "transfer": [76, 686], "linux": [77, 78, 79, 95, 108, 109, 111, 131, 136, 144, 146, 147, 149, 156, 171, 173, 178, 183, 237, 246, 247, 267, 268, 304, 306, 319, 321, 734, 786, 787, 790, 796, 853, 855, 859, 860, 861, 863, 876, 894, 917, 1107, 1117, 1118, 1125, 1126, 1127, 1128, 1129], "unix": [78, 108, 109, 155, 306, 322, 384, 394, 430, 982], "hardwar": [79, 82, 83, 119, 122, 247, 384, 858, 860, 861, 863, 896, 1116], "manag": [79, 127, 133, 181, 211, 231, 240, 250, 253, 256, 257, 259, 275, 278, 308, 309, 313, 408, 536, 596, 684, 767, 768, 933, 952, 971, 1063, 1064, 1065, 1086, 1116], "averag": [80, 81, 89, 430, 458], "sensor": [80, 81, 83, 89, 90, 92, 258, 426, 427, 431, 433, 438, 456, 458, 459, 465, 470, 472, 473, 474, 480, 481, 482, 492, 684, 861, 863, 891, 1041, 1043], "parallel": 81, "led": [82, 301], "temperatur": [82, 83, 90, 470, 473, 861, 863, 891], "displai": [82, 89], "sysf": [84, 171, 287, 301, 862, 896, 897], "gpiod": 84, "multithread": [85, 149, 209, 235, 236, 238, 247, 278, 282, 309, 316, 698, 699, 928, 963, 964, 966, 1128], "semaphor": [86, 131, 700, 924, 925], "mutex": [86, 131, 385, 696, 700, 747, 748, 749, 750, 762, 763, 902, 903, 918, 965], "commun": [87, 228, 450, 698, 904, 925], "wait": [87, 122, 698, 700, 773, 774, 775, 904, 924], "someth": [87, 164, 528, 626, 700, 773, 774, 775, 993], "simpl": [91, 169, 424, 528, 538, 553, 604, 616, 760, 762, 788, 802, 931, 948, 973, 1003, 1083, 1092], "2020": [94, 136, 156, 158, 163, 164, 166, 167, 168, 170, 172, 173, 178, 319], "ss2022": [95, 103, 784, 785], "block": [95, 111, 355, 551, 878, 879, 880, 881, 882, 929, 1085], "remot": [95, 111, 113, 437, 450, 464, 784, 785, 865, 866, 870, 873, 874], "cross": [95, 106, 111, 142, 247, 737, 757, 932, 934, 935, 936, 941, 943, 944, 946, 1107], "develop": [95, 106, 111, 163, 178, 192, 195, 217, 228, 231, 247, 250, 252, 253, 256, 257, 258, 259, 260, 278, 279, 284, 304, 319, 734, 934, 935, 941, 1115, 1116, 1117, 1130], "03": [96, 97, 98, 99, 100, 101, 180, 183, 188, 207, 209, 217, 220, 237, 250, 251, 253, 256, 257, 273, 301, 319, 623, 626, 627], "08": [96, 198, 201, 209, 222, 319], "homework": [96, 97, 98, 99, 102], "until": 98, "21": [98, 99, 220, 294, 301, 319], "exercis": [98, 107, 124, 146, 151, 152, 164, 167, 168, 172, 180, 181, 183, 192, 193, 203, 209, 226, 231, 235, 236, 238, 240, 243, 247, 251, 256, 258, 259, 263, 264, 269, 270, 271, 275, 278, 282, 291, 293, 301, 307, 325, 327, 329, 331, 333, 335, 337, 349, 373, 382, 426, 427, 428, 430, 431, 432, 434, 435, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 501, 502, 503, 504, 534, 545, 546, 547, 548, 549, 590, 591, 592, 599, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 688, 704, 705, 706, 779, 786, 797, 803, 806, 807, 809, 811, 821, 822, 823, 824, 825, 826, 827, 828, 829, 831, 832, 833, 834, 835, 844, 865, 866, 867, 868, 884, 885, 891, 925, 929, 936, 938, 939, 940, 941, 970, 1011, 1012, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052], "creat": [98, 113, 125, 130, 134, 137, 159, 160, 478, 626, 693, 777, 783, 784, 785, 802, 807, 809, 811, 819, 823, 825, 836, 868, 885, 887, 888, 890, 924, 925, 943, 945, 950, 1042, 1060, 1062], "copi": [98, 164, 213, 248, 349, 486, 521, 529, 536, 541, 556, 562, 563, 567, 574, 626, 637, 639, 664, 669, 671, 675, 680, 684, 685, 704, 771, 819, 821, 822, 825, 865, 866, 873, 884, 995, 1076], "move": [98, 235, 236, 238, 256, 282, 477, 528, 544, 635, 636, 637, 638, 639, 684, 686, 705, 737, 817, 824, 825, 840], "remov": [98, 229, 419, 498, 499, 582, 585, 704, 825, 828, 836, 925], "l": [98, 834, 839], "command": [98, 428, 443, 457, 735, 802, 813, 817, 834, 839, 854, 945], "22": [100, 170, 177, 182, 269, 270, 271, 319, 1085], "24": [100, 177, 209, 239, 259, 260, 261, 262, 279, 281, 319], "ku": 100, "28": [101, 151, 168, 209, 257, 307, 319], "01": [102, 107, 201, 207, 209, 210, 211, 240, 246, 301, 311, 312, 319, 784, 785], "ws2022": [104, 105, 106], "plan": [104, 220, 304], "evolut": 104, "fh": [105, 106, 112, 470, 471, 472, 473, 474, 545, 546, 547, 548, 608, 790, 804, 805, 830, 937], "joanneum": [105, 106, 112], "2023": [105, 106, 107, 108, 109, 238, 246, 247, 250, 251, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 281, 284, 319], "question": [105, 106, 119, 190, 316, 410, 424, 470, 608, 790, 804, 805, 808, 810, 830, 916, 937, 966, 1085], "inherit": [105, 150, 190, 219, 240, 275, 440, 514, 515, 516, 597, 598, 599, 602, 626, 886, 963, 971], "memori": [105, 133, 155, 181, 374, 377, 381, 383, 385, 392, 399, 497, 508, 509, 510, 536, 595, 596, 728, 741, 742, 743, 744, 770, 771, 772, 790, 794, 924, 925, 1116, 1126], "leak": [105, 497, 509, 536, 686], "ye": [106, 1071], "No": [106, 132, 171, 448, 626, 643, 689, 954, 1082, 1099], "lab": 107, "exam": [107, 108, 109, 191, 204, 206, 217, 301, 316, 477, 784, 785, 786, 916, 966, 1085], "17": [107, 203, 204, 206, 210, 211, 217, 234, 241, 247, 263, 264, 265, 319, 543], "ss2023": [108, 109, 111], "06": [108, 109, 191, 192, 209, 238, 269, 270, 271, 301, 319], "30": [108, 109, 149, 158, 168, 173, 220, 319], "handout": 108, "concept": [108, 109, 238, 268, 282, 642, 643, 646, 647, 648, 651, 652, 678, 791, 1062], "toolchain": [108, 109, 142, 193, 273, 757, 931, 932, 937, 938, 940, 941, 942, 943, 944, 945, 946, 1114], "solv": [109, 903, 1062, 1088, 1095], "finish": [111, 118, 127, 193, 776], "graz": [112, 154, 156, 163, 201, 319], "branch": [113, 356], "upstream": 113, "track": [113, 947], "submit": [113, 776, 777], "appli": [113, 134, 1082], "patch": [113, 134], "packag": [115, 118, 136, 142, 159, 240, 257, 275, 278, 294, 757, 936, 939, 962, 1010, 1085, 1086, 1087, 1088, 1089, 1090, 1094], "pypi": [115, 188, 228, 1010, 1055, 1088, 1090], "audio": [116, 120], "chip": [116, 862], "bringup": [116, 119, 863], "get": [117, 130, 160, 211, 700, 745, 770, 895], "debian": [117, 118], "kernel": [117, 118, 119, 123, 132, 134, 178, 319, 404, 721, 730, 731, 732, 733, 734, 735, 749, 751, 757, 758, 790, 793, 858, 861, 1117], "config": [117, 757], "within": 117, "qemu": 117, "extract": [117, 123, 190, 471, 1045, 1047, 1052, 1060], "boot": [117, 130, 141, 319, 793], "etc": [118, 179, 187, 190, 219, 229, 232, 265, 833, 861, 889, 983, 1033], "yocto": [119, 123, 852], "everyth": [119, 147, 206, 416, 788, 799, 878], "like": [119, 282, 528, 910], "i2": 120, "kontron": 120, "smarc": 120, "modul": [120, 164, 188, 190, 228, 229, 241, 257, 264, 278, 294, 301, 404, 419, 478, 672, 725, 730, 732, 733, 735, 736, 751, 757, 862, 962, 1052, 1055, 1066, 1085, 1093, 1101], "dirti": 121, "upgrad": 121, "path": [121, 142, 190, 200, 206, 213, 422, 708, 789, 841, 943, 948, 1042, 1101], "step": [121, 428, 431, 433, 470, 561, 654, 704, 705, 932, 933, 947, 967, 992], "intel": 123, "bsp": 123, "improv": 124, "beginn": [124, 188, 200, 223, 228, 240, 264, 1054, 1055], "split": [124, 150, 213, 219, 293, 1001, 1060], "openshot": 125, "seo": [126, 127], "sitemap": 126, "meta": [126, 127], "stack": [127, 133, 174, 195, 381, 639], "hang": 127, "dbu": [127, 433], "perturb": 127, "encod": [127, 226, 228, 229, 240, 250, 270, 271, 301, 1071], "context": [127, 150, 211, 250, 253, 257, 755, 756, 776, 952, 955, 1063, 1064, 1065], "slideshow": [127, 713, 716, 718, 721, 723, 726, 728, 735, 737, 739, 741, 743, 745, 747, 749, 751, 753, 755, 760, 762, 765, 767, 771, 774, 777, 925, 929, 997, 1064, 1088, 1095], "abc": [127, 967], "stuff": [127, 301, 394, 793, 827], "extens": 128, "rest": [128, 190, 883], "style": [128, 357, 408, 528, 630, 684, 702, 1000], "convert": [128, 151, 255, 973, 1051], "rst": 128, "exampl": [128, 213, 219, 223, 297, 330, 334, 369, 371, 391, 394, 430, 470, 554, 579, 630, 631, 649, 650, 651, 652, 678, 687, 781, 799, 801, 802, 850, 874, 878, 883, 886, 904, 929, 952, 967, 987, 997, 1000, 1001, 1002, 1003, 1024, 1069, 1077, 1082, 1092, 1093], "add": [128, 249, 420, 424, 477, 718, 765, 776, 928, 971, 1075], "miss": [128, 240, 630, 887], "past": [128, 369], "learn": [129, 250, 303, 1056, 1062], "beagleboard": 130, "how": [130, 133, 141, 163, 193, 211, 338, 377, 402, 403, 404, 538, 676, 686, 800, 813, 816, 959, 1062], "repair": 130, "nand": 130, "also": [130, 375, 788, 793, 794, 799, 800, 879, 880, 881, 883, 910, 913, 917, 919, 998, 1062], "40w": 130, "x": [130, 193, 518], "loader": 130, "u": [130, 874], "bootabl": 130, "mmc": 130, "sd": [130, 171], "card": [130, 171, 249, 785], "port": [131, 872], "There": [131, 211, 408, 536, 692, 773, 863, 873, 878, 889, 890], "": [131, 146, 171, 350, 374, 408, 528, 620, 626, 629, 689, 721, 726, 745, 757, 773, 802, 818, 870, 918, 931, 959, 963, 1006], "alwai": [131, 211, 231, 664, 888], "better": [131, 325, 410, 767, 977, 1071], "wai": [131, 190, 211, 219, 398, 919, 963, 982], "process": [131, 133, 152, 247, 268, 755, 756, 789, 790, 794, 795, 910, 911, 912, 915, 919], "signal": [131, 155, 384, 698, 904, 927, 928, 929, 930], "aren": 131, "t": [131, 188, 676, 1055], "queue": [131, 174, 698, 774, 905, 924, 925], "timer": [131, 765, 767, 768, 881, 915], "poll": [131, 698, 700], "event": [131, 718, 737, 747, 765, 766, 770, 898, 904, 920, 922], "dispatch": 131, "interrupt": [131, 737, 738, 739, 740, 753, 762, 898, 915], "realtim": [131, 133, 312, 316, 319, 749, 917, 918, 1107, 1116], "save": [132, 686], "solid": [132, 408], "disk": [132, 171, 788], "life": [132, 687, 900], "gentoo": [132, 757], "rant": [132, 152, 413, 933], "swap": [132, 226, 373, 689, 800, 1020], "tmpf": 132, "instanc": [132, 190, 216, 219], "syslog": 132, "var": 132, "mountpoint": 132, "logrot": 132, "o": [132, 190, 200, 206, 213, 214, 219, 226, 228, 229, 261, 265, 268, 270, 293, 330, 741, 798, 799, 800, 823, 836, 878, 879, 880, 881, 882, 883, 892, 893, 913, 1005, 1085], "schedul": [132, 268, 311, 312, 316, 790, 794, 900, 913, 914, 916, 917, 918], "ram": 132, "thing": [132, 193, 214, 235, 236, 238, 282], "left": [132, 350, 541], "why": [133, 134, 142, 211, 408, 436, 528, 531, 535, 536, 683, 689, 730, 776, 801, 855, 862, 870, 874, 899, 952, 997], "p": 133, "suck": [133, 737], "count": [133, 685, 764, 800, 1039], "consumpt": 133, "conclus": [133, 762, 854, 862], "pthread": 133, "experi": 133, "100": 133, "default": [133, 164, 211, 213, 235, 236, 238, 282, 297, 477, 530, 532, 533, 545, 546, 547, 548, 615, 663, 684, 816, 929, 997, 1080], "eat": 133, "limit": [133, 958], "than": [133, 488, 974], "my": [133, 136, 232, 323, 324, 410, 725, 796, 813], "system": [133, 206, 247, 268, 308, 319, 340, 404, 601, 692, 806, 812, 874, 876, 877, 878, 883, 894, 912, 915, 918, 984, 1087, 1107, 1125, 1126, 1127, 1128, 1129], "could": [133, 687], "take": [133, 375, 686, 977], "doe": [133, 554, 800, 813, 816, 884, 887, 888], "differ": [133, 164, 374, 559, 561, 819, 873], "It": [134, 163, 255, 305, 374, 600, 813, 874, 887, 888, 931], "rpm": [134, 136, 161, 730], "prerequisit": [134, 142, 160, 259, 278, 303, 732, 1010], "rpmbuild": 134, "directori": [134, 159, 160, 308, 410, 411, 478, 708, 784, 785, 802, 807, 808, 809, 810, 819, 820, 821, 828, 835, 836, 839, 840, 845, 873, 884, 932, 933, 952, 1092], "download": [134, 180, 182, 301, 306, 320, 482, 943, 946, 1106], "For": [134, 136, 142, 220, 223, 247, 250, 252, 253, 256, 258, 284, 319, 331, 456, 530, 541, 626, 654, 675, 700, 792, 878, 943, 944, 945, 955, 973, 1042, 1115], "domain": [135, 155, 253, 701], "configur": [135, 137, 142, 412, 818, 856, 861, 863, 898], "subdomain": 135, "www": 135, "apex": 135, "microsoft": 136, "team": 136, "screen": [136, 849], "share": [136, 416, 421, 681, 685, 688, 705, 784, 785, 811, 924, 925, 947, 948, 1126], "x11": 136, "reviv": 136, "meh": 136, "updat": 136, "annoy": 136, "re": [136, 954], "regist": [136, 398], "itself": 136, "autostart": 136, "browser": [136, 195], "recommend": [136, 167, 303, 1093, 1114], "deploi": 137, "gener": [137, 141, 151, 160, 164, 169, 196, 203, 206, 211, 213, 219, 238, 240, 244, 250, 253, 257, 259, 260, 264, 271, 273, 278, 279, 359, 487, 529, 532, 536, 654, 655, 657, 658, 663, 710, 863, 870, 897, 932, 933, 957, 958, 959, 960, 961, 986, 1025, 1038, 1114], "public": [137, 190, 423, 530, 784, 785, 809, 810, 870], "repo": [137, 159], "jfasch": [137, 814], "home": [137, 789, 819, 835, 874], "time": [137, 146, 150, 255, 414, 701, 765, 766, 794, 906, 1017], "deploy": [137, 273, 416, 757, 1114], "bigbluebutton": 138, "onlin": [138, 147, 1106], "tl": 138, "dr": 138, "host": [138, 183, 757, 945], "check": [138, 424, 448, 802, 863, 904, 940, 1001, 1021], "els": [138, 206, 213, 219, 229, 259, 278, 332, 356, 357, 358, 535, 550, 840, 857, 870, 954, 990, 993], "traunstein": 139, "via": [139, 140, 298, 863], "zierlersteig": 139, "kaltenbachwildni": 139, "anstieg": 139, "auf": [139, 180], "zierlerberg": 139, "rinn": 139, "abstieg": 139, "grintovec": 140, "plan\u0161arsko": 140, "jezero": 140, "\u010de\u0161ka": 140, "ko\u010da": 140, "anreis": 140, "hinauf": 140, "runter": 140, "zusammenfassung": 140, "brick": 141, "1399": 141, "dell": 141, "xp": 141, "happen": 141, "virtualbox": 141, "secur": [141, 171, 247, 268, 298, 869, 873], "enrol": 141, "machin": [141, 171, 192, 250, 298, 865, 866, 891, 1056, 1062], "owner": [141, 802], "mok": 141, "pair": [141, 626, 868, 870], "stage": 141, "reboot": 141, "diagnost": [141, 861], "crosstool": [142, 944, 945], "ng": [142, 944, 945], "prebuilt": [142, 1082], "clone": [142, 146, 159, 478], "repositori": [142, 146, 315, 478, 492], "releas": [142, 413, 739, 749, 965], "glibc": 142, "version": [142, 410, 413, 416, 626, 654, 887], "gcc": [142, 385, 398, 931], "simplest": [142, 654, 659, 697, 951, 974, 1093, 1099], "stdio": 142, "h": [142, 657, 849], "iostream": 142, "distribut": [142, 1010], "afterword": [142, 634], "schulung": [144, 164], "entwicklung": 144, "beratung": 144, "richtlinien": 145, "ver\u00f6ffentlichung": 145, "kursmateri": 145, "window": [146, 183, 200, 256, 258, 321, 796], "workflow": [146, 193], "conflict": [146, 903, 965], "individu": 147, "languag": [147, 163, 193, 209, 235, 236, 238, 243, 263, 264, 269, 319, 387, 406, 666, 910, 956, 978, 980], "qualivis": [148, 319], "z\u00fcrich": [148, 319], "2013": [148, 319, 1107], "fragen": [148, 181], "antworten": 148, "kursnotizen": 149, "2015": [149, 319], "userspac": [149, 716, 718, 770, 771, 772, 861, 862, 898], "can": [149, 170, 193, 228, 375, 427, 431, 477, 541, 626, 686, 855, 856, 857, 859], "bu": [149, 170, 433, 856, 859, 863], "driver": [149, 178, 249, 319, 734, 735, 753, 861, 1117], "beispiel": [149, 164, 223, 845], "heizungssteuerung": 149, "k\u00f6nnen": [150, 174, 187], "viel": 150, "mutabl": [150, 153, 164, 174, 181, 187, 200, 203, 211, 213, 216, 219, 226, 229, 232, 244, 251, 261, 265, 271, 995, 997], "immut": [150, 153, 164, 181, 187, 200, 211, 216, 219, 226, 232, 241, 248, 251, 265, 539, 995], "kann": [150, 195], "man": [150, 195, 817], "nicht": [150, 164, 174], "oft": 150, "genug": 150, "wiederholen": 150, "hart": 150, "indizieren": 150, "weich": 150, "nettfragen": 150, "shortcut": [150, 973, 1003], "objektorientiert": 150, "date": [150, 196, 255, 306], "delta": 150, "datetim": [150, 169, 190, 196, 251], "bissl": 150, "potschert": [150, 174], "schreiben": [150, 174], "scho": 150, "formen": 150, "represent": [150, 976], "__str__": [150, 971, 976], "subprocess": [150, 229], "enumer": [150, 174, 179, 181, 187, 190, 211, 219, 226, 244, 261], "zip": [150, 190], "comprehens": [150, 174, 196, 203, 206, 211, 213, 219, 223, 244, 250, 251, 253, 951, 957, 1002, 1085], "exec": [150, 216, 232, 240, 244, 271, 955], "eval": [150, 151, 187, 216, 226, 244, 271], "umgebend": 150, "eigen": 150, "json": [150, 172, 179, 195, 196, 206, 223, 226, 232, 240, 241, 1051], "individualtrain": [151, 166, 319], "tage": [151, 319], "beginnend": [151, 319], "inhalt": [151, 154, 928, 1109], "51": 151, "58": 151, "94": [151, 164], "121": 151, "famou": [151, 401], "overload": [151, 209, 219, 240, 504, 530, 537, 544, 684, 974, 976], "getter": [151, 477, 538], "setter": 151, "listcomprehens": 151, "express": [151, 164, 179, 196, 203, 229, 232, 244, 352, 354, 430, 448, 462, 633, 846, 957, 1015, 1077], "global": [151, 164, 174, 232, 338, 344, 365, 367, 381, 418, 511, 512, 513, 542, 543, 544, 875, 950, 996], "scope": [151, 174, 697, 700, 950, 996], "variabl": [151, 174, 187, 190, 200, 203, 211, 219, 226, 229, 241, 261, 265, 296, 324, 338, 341, 344, 365, 367, 373, 392, 448, 512, 539, 543, 669, 698, 789, 875, 904, 905, 912, 985, 996, 1020], "closur": [151, 174, 240, 257, 259, 260, 275, 278, 279, 668, 950, 952, 1085], "between": [151, 547, 1060], "walkthrough": 152, "reduc": [152, 349], "eight": 152, "color": 152, "pil": 152, "numpi": [152, 154, 181, 188, 228, 231, 250, 253, 264, 270, 319, 1055, 1060], "cluster": 152, "excurs": [152, 228, 668], "matplotlib": [152, 181, 200, 232, 270, 1009, 1060], "now": [152, 164], "come": [152, 188, 416, 610, 931, 1055], "let": 152, "kmean": 152, "result": [152, 402, 1070], "properti": [152, 190, 219, 422, 423, 975], "center": 152, "restor": 152, "alpha": 152, "back": [152, 579, 1051], "rgba": 152, "random": [153, 190, 223, 228, 459, 473, 485, 1078], "type": [153, 179, 203, 206, 216, 219, 226, 235, 236, 238, 240, 241, 255, 257, 282, 297, 340, 342, 343, 347, 354, 379, 389, 394, 413, 423, 532, 561, 582, 583, 626, 627, 630, 641, 643, 680, 728, 737, 832, 839, 902, 952, 954, 967, 974, 997, 1062], "except": [153, 190, 206, 209, 216, 219, 231, 232, 240, 250, 253, 257, 258, 275, 312, 504, 551, 552, 620, 669, 676, 700, 954, 1063, 1085], "demonstr": 153, "dict": [153, 203, 211, 213, 219, 226, 973], "access": [153, 192, 332, 385, 386, 530, 538, 546, 612, 708, 741, 770, 771, 772, 968, 975, 1002, 1003], "indic": [153, 181], "slice": [153, 164, 179, 190, 213, 219, 223, 244, 265, 271, 794, 992, 1079, 1081], "protocol": [153, 164, 179, 200, 203, 206, 211, 213, 216, 219, 229, 244, 257, 261, 265, 654, 854, 918, 959, 961], "standardthemen": 154, "hauptthema": 154, "numerik": 154, "lesen": [154, 174], "mat": 154, "l\u00f6sen": 154, "uni": 154, "\u00fcbung": [154, 157, 174], "propos": 155, "posix": [155, 698, 899, 908, 921, 923, 924, 925, 926], "ipc": [155, 156, 319, 921, 923, 924, 925, 926, 1126], "virtual": [155, 228, 249, 514, 515, 516, 601, 603, 604, 728, 790, 794, 856, 924, 1042, 1094, 1095, 1096, 1126], "socket": [155, 857, 880], "applic": [155, 915], "your": [155, 248, 249, 389, 648, 803], "compani": 155, "thought": 155, "handgestrickt": 157, "um": 157, "fallen": 157, "lustvol": 157, "erleiden": 157, "programmier": 158, "baden": [158, 319], "w\u00fcrttemberg": [158, 319], "kursinform": 158, "kursaufbau": 158, "kursverlauf": [158, 166], "hand": 159, "our": [159, 863], "privat": [159, 190, 219, 423, 530, 602, 664, 784, 785, 807, 808], "makefil": [160, 478, 725, 735, 932, 933, 947], "argh": 161, "visual": [161, 188, 204, 402, 417, 1055, 1084, 1094], "studio": [161, 188, 204, 1055, 1084, 1094], "flatpak": 161, "issu": [161, 950], "m": 161, "bei": [163, 174, 319], "firma": [163, 319], "environ": [163, 228, 236, 238, 247, 249, 256, 257, 258, 308, 789, 912, 979, 1042, 1094, 1095, 1096, 1104], "driven": [163, 192, 217, 228, 231, 259, 260, 278, 279, 319, 920, 1130], "dai": [163, 167, 168, 170, 171, 172, 182, 183, 192, 193, 198, 201, 203, 204, 207, 214, 247, 250, 253, 256, 257, 258, 259, 260, 264, 268, 270, 278, 279, 675, 1017, 1112], "advanc": [163, 167, 170, 179, 182, 191, 207, 217, 220, 231, 240, 243, 253, 259, 260, 261, 262, 263, 264, 269, 275, 276, 278, 279, 280, 281, 282, 283, 319, 387, 1054, 1055, 1120], "18": [164, 166, 192, 211, 231, 243, 244, 258, 274, 301, 319, 945, 1085], "19": [164, 166, 170, 204, 220, 300, 301, 315, 317, 319], "sy": [164, 190, 788, 984], "multilin": [164, 196, 200, 296, 999], "docstr": [164, 211, 223, 226, 229, 251, 296], "datentypen": [164, 174, 181, 194, 210, 222], "ausflug": [164, 213], "variablen": [164, 174, 181, 194, 210, 213, 222, 232], "deren": 164, "unterbau": 164, "zuweisung": 164, "mit": [164, 174, 179, 192, 319, 845, 1107, 1123], "hilf": 164, "tupl": [164, 169, 174, 179, 181, 187, 190, 200, 203, 206, 211, 213, 219, 223, 226, 229, 235, 236, 238, 241, 244, 251, 261, 265, 282, 295, 296, 626, 675, 680, 987, 995, 1066], "unpack": [164, 169, 174, 179, 181, 190, 206, 211, 223, 229, 235, 236, 238, 241, 251, 282, 295, 296, 626, 675, 943, 1066], "unendlich": 164, "breit": 164, "divis": [164, 174], "floor": [164, 174], "konvertierung": 164, "konstruktoren": [164, 181], "welchen": 164, "typ": [164, 174], "typen": 164, "besser": 164, "laufzeitverhalten": [164, 174], "geeigneter": 164, "datenstrukturen": [164, 174, 175, 195, 213, 1122], "boolean": [164, 174, 200, 203, 211, 213, 219, 223, 226, 346, 430, 988, 1015, 1077], "short": [164, 203, 219, 346, 440, 737], "circuit": [164, 203, 219, 346], "evalu": [164, 203, 219], "warum": [164, 174], "sind": [164, 174], "mehr": [164, 179], "rang": [164, 169, 174, 181, 190, 196, 200, 203, 211, 213, 216, 223, 226, 229, 235, 236, 238, 241, 251, 265, 271, 282, 560, 561, 626, 654, 674, 675, 676, 677, 678, 679, 957, 994, 1009], "foli": 164, "161": 164, "shallow": [164, 213, 995], "deep": [164, 213, 995], "dem": [164, 1123], "deepcopi": 164, "funktionen": [164, 174, 175, 179, 1122], "first": [164, 193, 323, 474, 689, 718, 719, 753, 1094], "gotcha": [164, 735, 765, 919], "paramet": [164, 211, 213, 257, 297, 336, 372, 375, 378, 392, 410, 414, 639, 643, 678, 689, 757, 887, 932, 997, 1070], "90": 164, "ff": 164, "lokal": [164, 174, 232], "92": 164, "uniq": [164, 1037, 1038], "punkt": [164, 174], "zusammengefasst": 164, "hier": 164, "sch\u00f6nere": 164, "al": [164, 174, 223], "comprens": 164, "125": 164, "lesbarkeit": 164, "perform": [164, 187, 400, 676], "review": [164, 193], "pprint": 164, "praktisch": 164, "debug": [164, 413, 755, 953], "datentransform": 164, "127ff": 164, "complet": [164, 504, 817], "collect": [164, 213, 216, 241, 931, 973, 1076, 1090], "namedtupl": [164, 973], "parameter\u00fcbergab": [164, 174], "variabel": 164, "lang": 164, "argumentlisten": 164, "erst": 164, "klass": 164, "weiterf\u00fchrend": [166, 188], "workspac": [167, 168, 170, 172], "core": [167, 204, 247, 932], "special": [167, 841], "tutori": [167, 170, 182, 188, 198, 228, 231, 264, 1055, 1063], "parti": [167, 198], "v": [169, 174, 181, 187, 190, 211, 216, 219, 223, 226, 232, 248, 251, 261, 265, 295, 296, 334, 343, 355, 358, 362, 364, 413, 416, 523, 524, 525, 539, 685, 693, 735, 755, 756, 762, 763, 877, 913, 983, 986, 994, 1005, 1087], "return": [169, 232, 378, 636, 637, 639, 654], "orient": [169, 219, 232, 240, 243, 244, 257, 259, 260, 263, 264, 269, 275, 278, 279, 289, 408, 528, 599, 970, 1085], "addit": [170, 528, 544, 606, 971], "brought": 170, "thoma": 170, "cloud": [171, 298], "particip": 171, "desk": 171, "interlud": [171, 737], "bloodi": 171, "wild": [171, 220, 275, 278], "watchdog": 171, "support": [171, 183, 629, 753], "25": [172, 182, 191, 198, 209, 214, 225, 267, 268, 275, 276, 278, 319], "grundlegend": [174, 175, 1122], "sprachelement": [174, 175, 1122], "syntax": [174, 181, 187, 219, 229, 251, 265, 296, 669, 678, 983], "semantik": 174, "einr\u00fcckung": 174, "ihren": 174, "\u00e4ndern": 174, "kommentar": 174, "sprach": 174, "standarddatentypen": 174, "elementar": [174, 175, 1122], "beliebig": 174, "gro\u00df": 174, "vergleichsoperatoren": 174, "pr\u00e4zedenz": 174, "vor": 174, "strichrechnung": 174, "modulo": 174, "un\u00e4rer": 174, "negat": [174, 1077], "erzwingen": 174, "auch": 174, "zeichenketten": 174, "raw": [174, 181, 196, 200, 213, 219, 241, 271, 968, 999, 1050], "f": [174, 196, 211, 229, 271, 1000], "konvertierungen": 174, "pr\u00e4zendenzregeln": 174, "literal": 174, "primit": [174, 692, 957], "konstanten": 174, "operatoren": 174, "ausdr\u00fcck": 174, "operatorrangfolgen": 174, "\u00fcbungen": [174, 1106], "zwei": 174, "vertauschen": 174, "kontrollstrukturen": [174, 175, 194, 210, 211, 222, 1122], "anweisungen": 174, "folgen": 174, "bedingungen": 174, "verzweigungen": 174, "bedingt": 174, "anweisung": 174, "verzweigung": [174, 175, 1122], "geschachtelt": 174, "mehrfach": 174, "fallauswahl": 174, "schleifen": [174, 175, 1122], "z\u00e4hlergesteuert": 174, "kopfgesteuert": 174, "schleif": [174, 179], "fu\u00dfgesteuert": 174, "jf": 174, "continu": [174, 209, 211, 250, 258, 260, 279, 361, 990, 993], "sequenti": [174, 179, 211, 223, 568, 569, 576, 577, 957, 991], "schnell\u00fcbersicht": 174, "sprunganweisungen": 174, "endlosschleifen": 174, "ben\u00f6tigt": 174, "Suche": 174, "eindimensional": 174, "record": [174, 1049, 1051], "tupel": 174, "listen": [174, 179, 213, 296], "sort": [174, 226, 486, 566, 571, 572, 575, 1080], "revers": [174, 573, 574, 591, 592, 593, 974], "stapel": 174, "schlangen": 174, "versuch": 174, "zur\u00fcck": 174, "hybrid": 174, "supergscheit": 174, "methoden": [174, 175, 1122], "prozeduren": [174, 175, 1122], "funktionspoint": 174, "so": [174, 187, 190, 200, 232, 256, 408, 528, 626, 639, 641, 668, 1079], "heisst": [174, 179], "funktionsobjekt": 174, "primzahlenbeispiel": 174, "funktion": 174, "laufzeitfehl": 174, "existiert": 174, "zuweisen": 174, "fehlerfal": 174, "peter": 174, "unterprogramm": 174, "wert": 174, "referenzen": 174, "r\u00fcckgabewert": 174, "oder": [174, 302, 1107], "inner": [174, 950], "standardbibliotheken": 174, "built": [174, 257, 532, 630, 735, 954], "funktionalit\u00e4ten": 174, "struktur": 175, "herdt": [175, 1122], "kapitel": [175, 1122], "recap": [179, 192, 193, 207, 240, 260, 275, 279, 521, 683, 931, 957], "ganz": [179, 211], "kurz": 179, "mehreren": 179, "returnwerten": 179, "bzw": [179, 302], "containerdatentypen": 179, "untypisiert": 179, "l\u00f6schen": 179, "begriff": 179, "zufal": 179, "regular": [179, 192, 193, 229, 232, 244, 846], "hallo": 181, "speicher": 181, "sch\u00fctze": 181, "ich": 181, "davor": 181, "aber": 181, "gemischten": 181, "wiederholung": [181, 216], "objektidentit\u00e4t": 181, "statement": [181, 190, 355, 369, 950, 952, 965, 983, 989, 1064, 1065, 1070, 1073], "operationen": 181, "verloren": 181, "interpol": 181, "mittel": [181, 187], "scipi": 181, "shell": [183, 247, 268, 298, 319, 789, 800, 802, 818, 830, 831, 837, 869, 886, 895, 910, 1108], "script": [183, 268, 319, 864, 895, 962, 981, 1108], "29": [183, 257, 301, 309, 319], "ssh": [183, 247, 268, 298, 306, 864, 867, 868, 869, 870, 871, 872, 873, 874], "assign": [187, 213, 219, 226, 296, 351, 448, 529, 535, 536, 636, 637, 639, 684, 950, 985, 992, 996, 1075], "fun": [187, 226, 240, 985], "arithmet": [187, 192, 211, 223, 296, 324, 345, 374, 448, 462, 521, 544, 557, 558, 562, 565, 974, 986], "complex": [187, 226, 296, 1104], "nur": 187, "sum": [187, 610], "weiter": 187, "dynamisch": 187, "evaluierung": 187, "05": [188, 191, 222, 228, 231, 234, 237, 263, 264, 265, 267, 268, 293, 294, 301, 319], "scienc": [188, 214, 228, 231, 264, 278, 1055], "don": [188, 676, 1055], "batteri": [188, 296, 1001, 1055], "confer": [188, 264, 1055], "talk": [188, 264, 855, 861, 862, 1055], "zipfil": 190, "One": [190, 229, 255, 293, 350, 369, 408, 410, 543, 676, 689, 770, 855, 873, 906, 931, 947], "member": [190, 219, 530, 535, 536, 538, 543, 612, 613, 630], "attribut": [190, 216, 232, 282, 794, 897, 968, 975, 1083], "protect": [190, 602, 676, 747], "posit": [190, 528, 948, 977, 1007], "keyword": [190, 211, 235, 236, 238, 282, 297, 391, 392, 950, 977, 997], "argument": [190, 211, 219, 240, 275, 297, 375, 884, 910, 953, 977, 984, 997, 1007], "mix": [190, 203, 271, 669, 1031, 1032], "yield": [190, 206, 211, 229, 257, 271, 957, 960], "filter": [190, 219, 248, 249, 255, 487, 488, 489, 676, 1077], "nonetyp": [190, 203], "none": [190, 211], "recurs": [190, 377, 536, 633, 708, 819], "fibonacci": [190, 654, 656, 958, 1025], "sever": 190, "same": [190, 512, 537, 543, 668, 996, 1093], "oserror": 190, "errno": [190, 875], "platform": [190, 861], "assert": [190, 232], "assertionerror": 190, "27": [191, 209, 225, 275, 276, 319], "predefin": [191, 369, 1104], "stream": [191, 728, 799, 1005], "pcap": [191, 204, 206, 217, 1085], "syllabu": [191, 204, 1085], "programmieren": [192, 319], "tool": [192, 265, 268, 303, 782, 847, 850, 861, 1119], "massacr": 192, "group": [192, 193, 207, 240, 247, 259, 260, 275, 278, 279, 307, 339, 354, 363, 370, 376, 380, 383, 387, 396, 400, 405, 406, 526, 534, 549, 552, 555, 596, 605, 624, 666, 667, 691, 699, 703, 707, 709, 794, 802, 811, 851, 859, 860, 914], "kick": 192, "encapsul": [192, 394, 534, 700], "flow": [192, 222, 228, 243, 250, 253, 263, 264, 269, 270, 363], "pointer": [192, 193, 209, 235, 236, 238, 256, 258, 282, 371, 372, 374, 376, 392, 504, 521, 536, 540, 541, 557, 558, 559, 561, 562, 565, 585, 626, 641, 681, 682, 683, 684, 686], "standard": [192, 204, 209, 213, 228, 256, 258, 264, 342, 389, 413, 490, 551, 561, 594, 605, 607, 634, 799, 883, 1005, 1055, 1101], "librari": [192, 204, 209, 228, 256, 258, 264, 336, 411, 416, 417, 421, 490, 551, 561, 594, 605, 634, 877, 948, 949, 1055, 1126], "stl": [192, 504, 520, 521, 522, 553, 561, 562, 590], "07": [193, 209, 240, 273, 274, 301, 305, 319], "kid": 193, "recapitul": 193, "some": [193, 211, 216, 255, 258, 268, 669, 700], "jump": [193, 374], "complic": [193, 453, 947], "Be": [193, 427, 431, 432, 536, 541, 595, 687, 692], "toolbox": 193, "databas": [193, 611, 735, 1011, 1013, 1048, 1067, 1068, 1070], "gtest": [193, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105], "smart": [193, 209, 235, 236, 238, 258, 282, 504, 681, 682, 683, 684], "polymorph": [193, 469, 476, 479, 480, 483, 484, 485, 503, 601, 690], "datenbank": 195, "showcas": 195, "full": 195, "kommt": 195, "db": 195, "aufgab": 195, "formulieren": 195, "damit": 195, "dies": 195, "http": 195, "verbindung": 195, "client": [195, 464, 1074], "schicken": 195, "jetzt": 195, "schickman": 195, "weg": 195, "vom": [195, 319], "server": [195, 1074], "php": 195, "j": 195, "empfangen": 195, "nun": 195, "muessen": 195, "verwandlen": 195, "liter": [196, 296, 448, 700, 701], "quot": [196, 200, 226, 1066], "friend": [196, 696], "sinc": [196, 229, 235, 236, 238, 282, 543, 1000], "pars": [196, 984, 1007, 1033], "sap": [197, 250, 252, 253, 254, 255, 285, 319], "export": 197, "requir": [197, 228, 275, 303, 414, 426, 447, 450, 469, 470, 471, 472, 476, 479, 483, 484, 485, 503, 648, 884, 891, 1011, 1012, 1033, 1042, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052], "solut": [197, 366, 388, 411, 420, 426, 427, 428, 431, 432, 437, 446, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 536, 563, 593, 630, 632, 639, 663, 664, 673, 794, 813, 872, 874, 878, 947, 949, 965, 1064, 1095], "terminologi": [200, 268, 791, 929, 1062], "31": [201, 209, 217, 319], "numer": 201, "ai": 201, "mountain": 201, "over": [203, 211, 213, 708, 863, 993, 994], "io": [203, 219, 247, 251, 397, 741, 742, 797, 897], "common": [203, 398, 410, 576, 958, 967], "wtf": [203, 881, 929], "creativ": [206, 783, 971], "shift": [206, 350, 544], "sampl": [206, 689, 759, 814, 1012, 1033, 1054, 1085, 1092, 1117], "hmmm": 207, "02": [209, 214, 228, 247, 313, 319, 796], "undefin": [209, 996], "behavior": [209, 678], "again": [209, 257, 268, 538, 625, 837, 974, 1108], "26": [209, 239, 246, 259, 260, 261, 262, 279, 281, 301, 319], "repeat": [209, 829], "quickli": 209, "algorithm": [209, 226, 250, 258, 282, 374, 486, 504, 521, 556, 557, 561, 562, 571, 575, 1060, 1062], "functor": [209, 504, 569, 668, 670, 671, 689], "unifi": 209, "model": [209, 1060, 1062], "uml": [209, 440], "todai": [209, 950], "associ": [209, 353, 440, 580, 581], "dynam": [209, 240, 259, 260, 261, 278, 279, 282, 381, 508, 509, 510, 562, 595, 596, 713, 743, 744, 948, 968, 977], "alloc": [209, 398, 518, 563, 588, 589, 596, 728, 751, 893, 957], "week": 209, "zahl": 211, "miscellanea": 211, "brace": [211, 235, 236, 238, 282, 628, 629, 630, 631, 1077], "singl": [211, 411, 436, 873, 931, 1099], "hour_of_dai": 211, "membership": [211, 991], "best": 211, "intro": [213, 247, 301, 520, 521, 522, 897, 951], "doc": 213, "ident": 213, "datenypen": 213, "libarari": 213, "chainmap": 213, "dequ": 213, "suchalgorithmen": 213, "pitfal": [213, 256, 259, 297, 532, 601, 626, 654, 671], "fromkei": [213, 226], "join": [213, 219, 1001, 1028], "lstrip": [213, 293], "rstrip": [213, 293], "sequentiel": 216, "konstant": 216, "suchzeit": 216, "metaprogram": 216, "everywher": [216, 232, 536, 955], "defaultdict": [216, 241], "hello": [219, 229, 323, 658, 735, 736, 981], "world": [219, 323, 330, 735, 736, 981], "blahblah": [219, 223, 226, 229, 561, 980], "mqtt": [219, 1049, 1074], "commandlin": [219, 247, 287, 292, 375, 403, 410, 817, 872, 895, 929, 984, 1007], "lifetim": [219, 338, 367, 671, 685, 693, 1067], "preview": [219, 421], "explicit": [219, 332, 528, 540, 631, 669, 671, 684, 697, 965], "max": 219, "iteratoren": 219, "generatoren": 219, "ordereddict": 219, "duck": [219, 235, 236, 238, 282, 967], "resolut": 219, "order": [219, 512, 954, 974], "mro": 219, "super": 219, "__bases__": 219, "__mro__": 219, "self": [219, 536, 969], "call": [219, 368, 372, 398, 402, 404, 504, 760, 877, 883, 912, 918, 977], "mangl": [219, 537], "udemi": 219, "claus": [219, 259, 278, 954], "lambda": [219, 235, 236, 238, 265, 282, 626, 667, 668, 669, 670, 689, 1085], "oppos": 219, "20": [220, 234, 238, 256, 258, 269, 270, 271, 282, 293, 301, 319, 945], "part": [220, 1101], "discuss": [222, 259, 260, 279, 307, 332, 334, 698, 760, 765, 773], "chart": 222, "interact": [223, 271, 981, 1032], "1st": 223, "explan": 223, "preced": [223, 226, 353, 986], "float": [223, 226, 986], "einschub": 223, "vergleich": 223, "filterketten": 223, "zen": 223, "datensatz": 223, "notat": 223, "letzt": 223, "letzten": 223, "infinit": [226, 958], "long": [226, 626], "comparison": [226, 528, 575, 708, 782, 974, 986], "digit": [226, 301, 1022], "english": [226, 303, 1022], "determin": [226, 803, 1019, 1029, 1030], "maximum": [226, 1019, 1029, 1030], "two": [226, 373, 466, 467, 528, 547, 631, 925, 1019, 1020, 1029, 1030], "out": [226, 259, 260, 279, 433, 531, 560, 561, 919, 933, 950, 992], "duplic": [226, 411, 553, 886], "control": [228, 243, 250, 253, 263, 264, 269, 270, 433, 654, 854, 862], "nest": [229, 364, 377], "onli": [229, 255, 374, 641, 689, 730, 1024], "itertool": 229, "chain": [229, 760], "destructor": [229, 512, 518, 533, 598, 603, 683], "prient": 231, "next": [231, 397, 662, 1099], "standesregist": 231, "sqlite3": [231, 414, 1011, 1070], "xml": [231, 1083], "tree": [231, 730, 757, 795, 821, 828, 866, 873, 912], "projektabschlusstag": 231, "id": [232, 260, 279, 794, 814, 874, 900, 912, 1107], "person": [232, 439, 638], "anyth": 232, "defin": [232, 420, 532, 669, 954], "own": [232, 410, 638, 648, 794], "lookup": [232, 495, 496], "vorbesprechung": 234, "legend": 234, "neuerungen": 234, "seit": 234, "2011": [234, 235, 236, 238, 319], "ausblick": 234, "thank": [235, 236, 238, 282], "you": [235, 236, 238, 282, 641], "readablil": [235, 236, 238, 282], "writabl": [235, 236, 238, 282, 884], "err": [235, 236, 238, 282, 585, 675], "bind": [235, 236, 238, 282, 675, 680, 688, 689, 1070], "auto": [235, 236, 238, 282, 626, 641, 674, 675, 904, 1093], "without": [235, 236, 238, 282, 542, 563, 637, 893], "simpli": [235, 236, 238, 282, 874], "deserv": [235, 236, 238, 282], "ag": [235, 236, 238, 282, 616], "overrid": [235, 236, 238, 282, 673], "delet": [235, 236, 238, 282, 509, 578, 664, 817], "strongli": [235, 236, 238, 282, 627], "enum": [235, 236, 238, 282, 390, 627, 725], "deleg": [235, 236, 238, 282, 632], "nullptr": [235, 236, 238, 282, 640], "rvalu": [235, 236, 238, 635, 638, 639], "skeleton": [236, 238, 256, 258, 546, 784, 785], "perfect": [238, 348, 390, 688], "view": [238, 629, 676, 678, 679, 721, 783], "design": [239, 257, 259, 260, 275, 279, 319, 336, 393, 408, 432, 436, 446, 599, 1115], "architectur": [239, 319, 408, 626, 665, 757], "pattern": [239, 257, 259, 260, 279, 319, 432, 446, 958, 1115], "mondai": 239, "tuesdai": 239, "wednesdai": 239, "front": [240, 259, 278, 968], "seri": [240, 243, 263, 264, 269, 270, 504, 1041, 1048, 1076], "piec": 240, "go": [240, 886, 1066], "kickoff": [240, 259, 260, 275, 279], "livehack": [240, 249, 410, 433, 635, 720, 996, 1063, 1087, 1094], "Such": [241, 606, 639], "noob": 243, "wsl": [247, 256, 258, 796, 945], "quick": 247, "permiss": [247, 268, 802, 804, 805, 806, 812, 816, 835, 866], "uart": [247, 788], "susi": 247, "untold": [247, 250, 256, 257, 260, 279], "whet": [248, 249], "appetit": [248, 249], "panda": [248, 250, 251, 253, 255, 257, 270, 1060, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082], "regex": 248, "pipelin": 249, "categori": 249, "payment": 249, "select": [249, 255, 257, 854, 861, 921, 1076, 1077, 1079, 1081, 1099], "uncategor": 249, "dataset": [250, 254, 255, 1059, 1061], "origin": [250, 253, 553, 670, 671, 767, 1066], "automat": [250, 253, 273, 344, 367, 663, 1114], "cleanup": [250, 253, 765, 776], "conversiosn": 251, "outlook": [253, 282], "specif": [253, 906, 1043], "usecas": 255, "drop": [255, 428, 676], "column": [255, 1076, 1077, 1079, 1080, 1081, 1082], "nan": 255, "datafram": [255, 1060, 1076, 1080], "isna": 255, "to_datetim": 255, "dated": 255, "workabl": 255, "usag": [255, 260, 279, 377, 381, 404, 420, 424, 470, 480, 530, 567, 568, 574, 601, 629, 633, 641, 685, 686, 687, 716, 760, 800, 839, 856, 863, 887, 931, 1009], "modifi": [255, 385, 392, 470, 903, 965, 995, 1082], "increas": 255, "price": 255, "Of": [255, 264, 411, 477, 528, 560, 561, 601, 639, 671, 676, 686, 688, 698, 704, 705, 706, 784, 785, 792, 884, 895, 919, 933, 954, 957, 977, 1076, 1082], "particular": 255, "store": [255, 385, 433, 903, 965], "readabl": [255, 388, 700, 889], "combin": [255, 351, 447, 448, 461], "prefer": [256, 258], "ubuntu": [256, 258, 945], "under": [256, 258, 819, 879, 952], "unsupport": 256, "heavi": [256, 258, 793], "weight": [256, 258], "resourc": [256, 303, 536, 596, 684, 697, 753], "r": [256, 836, 873], "littl": [256, 359, 410, 980], "concurr": 256, "far": [256, 693, 1062], "fact": [257, 739, 801, 968, 971], "fixtur": [257, 481, 708, 1092, 1093, 1103, 1104, 1105], "omin": [257, 953], "warm": 258, "resolv": 258, "cont": 258, "d": [258, 433], "insid": [259, 260, 279, 538, 543, 638, 639], "construct": [259, 278, 973, 990], "emphasi": [259, 278], "recoveri": [259, 260, 278, 279], "broader": 259, "sens": 259, "morn": [260, 264, 268, 270, 279], "pytest": [260, 279, 1091, 1092], "awaken": 264, "bash": [268, 319, 837, 1108], "bourn": [268, 837, 1108], "inspect": [268, 844, 847], "wakeup": [268, 270, 917, 919], "redirect": [268, 797, 798, 799, 800, 823, 836, 886], "pipe": [268, 678, 783, 797, 798, 800, 801, 848, 850], "archiv": [268, 779, 780, 782, 783, 945, 946, 949], "compress": [268, 779, 780, 782, 783], "network": [268, 450, 751, 752, 855, 880, 1129], "least": [268, 1099], "day2": 270, "interpret": [271, 402, 434, 447, 448, 461, 462, 1032], "len": 271, "abl": 271, "callabl": [271, 689], "multiprocess": 278, "idea": 278, "constexpr": [282, 633], "constinit": 282, "constev": 282, "semant": [282, 635, 636, 637, 638, 639, 925], "erasur": 282, "toolcas": [282, 644, 645, 646], "versu": [282, 948], "static": [282, 367, 391, 477, 542, 543, 947, 948, 949, 972], "begin": [284, 322, 676], "checker": 286, "blinklicht": [287, 288, 289, 290], "electron": [287, 854], "aspect": 287, "circuitri": 287, "header": [287, 366, 412, 418, 543, 861, 1044], "pinout": [287, 861], "unittest": [290, 1093, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1130], "ece19": 291, "g2": [293, 785], "big": [293, 319, 745], "swoop": 293, "size": [293, 342, 500, 651, 833], "chunk": 293, "line": [293, 337, 369, 531, 800, 817, 983, 1024, 1035, 1039], "str": [293, 976], "byte": 295, "btw": 296, "wertebereich": 296, "sidenot": [297, 997], "pure": [297, 601, 603, 997], "beauti": [297, 404, 788, 863, 997], "login": [298, 792, 864], "formalit\u00e4ten": 299, "ec": [300, 315, 317, 784, 785], "daili": 301, "org": 301, "pass": [301, 541], "fail": [301, 888, 1092, 1099, 1101], "reiter": 301, "argpars": [301, 984, 1007], "onc": 301, "deutsch": [302, 319], "lehrinhalt": 302, "lernergebniss": 302, "lv": 302, "empfohlen": [302, 1108, 1110, 1111, 1116, 1118, 1119, 1123, 1124, 1125, 1126, 1128, 1129, 1130], "verpflichtend": 302, "fachliteratur": 302, "lernressourcen": 302, "instrument": 302, "art": 302, "vermittlung": 302, "voraussetzungen": 302, "begleitbedingungen": 302, "pr\u00fcfungsmethod": 302, "beurteilungskriterien": 302, "mode": [303, 413, 802, 854, 887, 981, 1005], "deliveri": [303, 928, 929], "co": 303, "requisit": 303, "assess": 303, "criteria": [303, 913], "summer": 304, "whose": 305, "fault": 305, "newcom": 306, "task": [307, 915], "jjjj": 309, "futur": [310, 700], "sidewai": [310, 543, 689, 700, 953, 958], "bisher": 319, "gehalten": 319, "entwickl": 319, "fortgeschritten": [319, 1110], "wiener": 319, "neustadt": 319, "einf\u00fchrung": [319, 1109, 1111, 1118], "ober\u00f6sterreich": 319, "pictur": [319, 745], "obersteiermark": 319, "korn": 319, "salzburg": 319, "ausgew\u00e4hlt": 319, "themen": 319, "2018": 319, "raum": 319, "n\u00fcrnberg": 319, "oberb\u00fcren": 319, "schweiz": 319, "2017": 319, "m\u00fcnchen": [319, 1107], "lowlevel": 319, "refresh": 319, "programmiererstandpunkt": 319, "2016": 319, "wien": 319, "workshop": 319, "bodenseo": 319, "hemmenhofen": 319, "bodense": 319, "systemnah": 319, "2014": 319, "mathia": 319, "kettner": 319, "siemen": 319, "braunschweig": 319, "intermedi": [319, 459, 950, 967], "scratch": [319, 1107], "lpd": 319, "hannov": 319, "unter": 319, "k\u00f6ln": 319, "projektverwaltung": 319, "subvers": [319, 1124], "lka": 319, "niedersachsen": 319, "konfigur": 319, "gnu": [319, 402, 931, 1119], "make": [319, 416, 478, 625, 664, 741, 784, 785, 932, 933, 1119], "2012": 319, "hamburg": 319, "fehlerdiagnos": 319, "polizei": 319, "stia": 319, "admont": 319, "bi": 319, "2010": 319, "softwareentwicklung": 319, "darmstadt": 319, "ulm": 319, "bundeswehr": 319, "wildflecken": 319, "cool": [322, 1000], "gui": 322, "Their": [322, 342], "hobbi": 322, "histori": [322, 527, 625, 721, 925, 950, 980, 1059], "second": [324, 326], "fahrenheit": [325, 327, 329, 456], "tabl": [325, 327, 329, 477, 974], "simplif": 326, "constant": [328, 343, 368, 398, 459], "preprocessor": [328, 368, 369], "macro": [329, 368, 369, 418, 716, 737], "outsid": 330, "cat": [330, 842], "poor": [330, 331], "wc": 331, "definit": [332, 334, 336, 344, 362, 364, 365, 368, 420, 543, 626, 716, 917, 994], "memset": 332, "histogram": 333, "nonsens": 334, "signatur": 334, "declar": [334, 335, 364, 365, 366, 543], "mistak": 336, "stdin": [337, 850, 864], "variant": [342, 431, 437, 626, 702, 925], "qualifi": 342, "width": [342, 374, 548, 561, 862, 992], "escap": [343, 999], "logic": 346, "implicit": [347, 686], "sign": 347, "truncat": [347, 893], "propag": 347, "unsign": 347, "compil": [347, 364, 369, 385, 386, 411, 412, 413, 529, 532, 536, 665, 686, 737, 757, 931, 934, 943, 947], "warn": [347, 353, 369, 907, 929], "forc": 347, "cast": 347, "increment": [348, 561, 654, 965], "decrement": [348, 561], "confus": [348, 986, 1077], "manipul": [350, 686, 893, 929], "bitwis": [350, 1077], "AND": 350, "OR": 350, "xor": 350, "right": [350, 1036], "invert": [350, 1076], "complement": 350, "summari": [353, 528, 689, 757, 783, 948, 968, 1079, 1081], "true": [356, 431, 541, 1080], "fals": 356, "truth": 356, "option": [356, 403, 418, 419, 420, 783, 817, 819, 839, 846, 861, 873, 1066], "matter": 357, "distinct": 358, "purpos": [359, 897], "closer": 359, "comma": 359, "infam": 359, "idiom": 359, "bodi": 360, "goto": 362, "label": [362, 1081], "monolith": [364, 411, 433, 482], "separ": [364, 365, 411, 433, 698, 841, 947], "visibl": [367, 391], "includ": [368, 422, 1001], "replac": [368, 472], "inlin": [368, 398, 531, 543], "guard": 368, "rule": [369, 408, 529, 532, 543, 631, 639, 676, 795], "span": 369, "stringif": [369, 976], "token": 369, "address": [371, 728, 771, 794, 861, 915, 1077], "arbitrari": [374, 561, 953, 977], "see": [375, 788, 793, 794, 799, 800, 879, 880, 881, 883, 910, 913, 917, 919, 998, 1062], "struct": [377, 378, 393, 528, 617, 680], "typedef": 379, "alia": 379, "singli": 382, "volatil": [384, 818], "lie": 384, "valid": 384, "handler": [384, 928, 929], "intrins": 385, "atom": [385, 695, 700, 755, 756, 760, 761, 776, 902], "builtin": 385, "align": 386, "unalign": 386, "pad": 386, "saniti": [388, 396, 410], "readabilti": 388, "shoot": 388, "offens": 388, "unobvi": 388, "ambigu": [388, 394, 631], "smell": 388, "know": 389, "size_t": 389, "discret": 390, "tradit": [390, 408, 977], "approach": [390, 418, 419, 420], "wishlist": 390, "close": [390, 436, 681, 925], "somewhat": 391, "contriv": 391, "hoorai": 391, "correct": [392, 539, 673], "const": [392, 500, 518, 538, 539, 541, 613, 614, 626, 641, 675, 680], "non": [392, 469, 476, 479, 483, 484, 485, 503, 518, 538, 1099], "good": [393, 418, 419, 528, 543, 561, 630, 639, 648, 649, 676, 678], "old": [393, 543, 561, 626, 639, 648, 649, 678], "c99": 393, "explict": 394, "safeti": [394, 410, 1063], "scheme": 394, "artifici": [394, 1056], "valgrind": [395, 509], "action": [395, 929], "optim": [397, 398, 399], "bound": [397, 398, 509, 913], "unnecessari": 398, "peephol": 398, "subexpress": 398, "elimin": [398, 686, 1024], "strength": 398, "reduct": 398, "fold": 398, "invari": 398, "unrol": 398, "tail": [398, 848], "cpu": [398, 794, 913, 919], "cach": [399, 420, 676], "multidimension": 399, "thrash": 399, "profil": [401, 402, 404, 405], "donald": 401, "knuth": 401, "toni": 401, "hoar": 401, "larri": 401, "wall": 401, "practic": 401, "brian": 401, "w": 401, "kernighan": 401, "rob": 401, "pike": 401, "gprof": 402, "flat": 402, "callgrind": 403, "analysi": 403, "per": [403, 725, 765, 1104], "kcachegrind": 403, "oprofil": 404, "much": [404, 419, 670, 952], "wide": 404, "offlin": 404, "graphic": 404, "accomplish": 408, "disclaim": [408, 796], "principl": [408, 436], "yagni": 408, "uncl": 409, "bob": 409, "typic": [410, 795, 899, 915], "bookkeep": 410, "effort": 410, "spaghetti": 410, "request": [410, 716, 718, 737, 739, 897], "concaten": [410, 1075], "input": [410, 799, 957, 1060], "yyyi": 410, "mm": 410, "where": [410, 416, 793, 931], "testabl": 410, "explicitli": [410, 669, 686], "categor": 410, "net": 410, "place": [410, 486, 532, 573, 784, 785, 995], "overengin": [410, 543], "boilerpl": [411, 670, 753], "execut": [411, 417, 802, 948, 954, 962, 982, 1031, 1099, 1101], "consist": [411, 728], "paus": 413, "diagram": 413, "cmake_build_typ": 413, "k": [413, 1057], "printf": [413, 530], "popular": [413, 789], "find_packag": 414, "prefix": [416, 953], "target": [416, 417, 419, 422, 423, 481, 891, 932, 1114], "runpath": 416, "abi": 416, "blacklist": [418, 419], "flag": [418, 607, 743, 883, 1000], "libhello": 418, "bad": [418, 419, 676, 726], "push": 419, "target_compile_definit": 419, "backlist": 419, "availablil": 419, "use_blacklist": 420, "normal": 421, "subdirectori": 422, "reorgan": 422, "i2c": [426, 861, 863], "subhierarchi": 426, "instanti": [426, 433, 582, 643, 723], "adapt": [427, 433, 442, 447, 449, 456, 461, 689], "must": [427, 890], "adapte": 427, "asensor": 427, "real": [427, 535, 626, 687, 814], "measur": [427, 471, 701, 917, 919], "motiv": [428, 431, 447, 448, 544, 627, 630, 632, 641, 643, 668, 674, 777, 959, 969, 975], "insert": [428, 493, 494, 578, 579, 582, 583, 584, 618, 688, 704, 705, 745], "bulk": 428, "6a": 428, "initializer_list": [428, 629, 631], "socialdb": 429, "composit": [430, 440, 444, 458, 708], "filesystem": [430, 708, 925], "thermomet": [430, 450, 451, 464, 465, 480], "aggreg": [431, 440, 630], "conret": 431, "realiz": 431, "situat": [431, 874], "constantsensor": 431, "decoratedconstantsensor": 431, "randomsensor": [431, 473], "decoratedrandomsensor": 431, "verifi": [431, 829, 863, 865, 1060], "still": [431, 626, 952, 957], "hold": [431, 973], "studi": [433, 674, 675, 942], "heat": 433, "pull": 433, "logger": 433, "dbuslogg": 433, "dbusvaluestor": 433, "either": 433, "stop": [433, 684], "help": [433, 817, 849, 1087, 1094], "observ": [435, 463, 959], "which": [436, 890, 931], "liskov": 436, "substitut": [436, 541], "segreg": 436, "invers": [436, 918], "proxi": [437, 447, 450, 451, 461, 464, 465], "foundat": 438, "hierarchi": [438, 551, 795, 954], "hypothet": [438, 974], "singleton": [439, 452, 453, 454, 466, 467, 468], "connector": 440, "uniniti": [448, 541], "round": [451, 465], "flexibl": [452, 453, 466, 467], "strict": [453, 467], "inflex": [454, 468], "i2csensorfactori": 455, "concret": [455, 466, 467], "i2csensorfactory_vendor1": 455, "stub": [464, 764], "socialinsur": [466, 467], "oegk": [466, 467], "sv": [466, 467], "ledstripedisplay_nopoli": 469, "cover": [469, 476, 479, 480, 483, 484, 485, 503], "introduc": [470, 530, 676], "relationship": [470, 603, 604, 1060], "onewir": [470, 481, 482, 863, 891], "firstnam": 470, "lastnam": [470, 619, 621], "w1sensor": [470, 482], "answer": [470, 668], "try": [474, 551, 684, 954], "hysteresis_nopoli": 476, "shape": [477, 817], "procedur": 477, "equal": [477, 528, 544, 545, 546, 547, 548, 568, 974], "circl": 477, "area": [477, 548], "squar": 477, "massag": 478, "sub": 478, "averagingsensor_nopoli": 479, "notfound": 481, "find_is_const": 481, "isol": [481, 1067, 1104], "realiti": 481, "pc": 481, "constantsensor_nopoli": 483, "mocksensor_nopoli": 484, "randomsensor_nopoli": 485, "greater": 488, "odd": 489, "overwrit": 493, "sunni": [494, 496, 499, 884, 888, 889, 890], "uniquifi": 501, "mock": 503, "transcript": 504, "malloc": 509, "free": 509, "mismatch": [509, 874], "across": 512, "ownership": [517, 518, 519, 686, 802], "raii": [517, 518, 519, 697], "dealloc": 518, "naiv": [521, 542, 593, 773, 928, 958, 1076], "ol": [528, 675], "look": [528, 879, 880, 881], "distanc": [528, 547], "length": 528, "manual": [529, 532, 536, 689, 817, 877, 895, 898, 959], "specifi": [530, 884], "otherwis": 530, "lifecycl": 533, "dragon": [536, 692], "memberwis": 536, "straighforward": 536, "correctli": 536, "underli": [537, 627], "mechan": 537, "just": 537, "pollut": 539, "hidden": [540, 839], "cannot": 541, "easili": 541, "odr": 543, "litt": 543, "defnit": 543, "ostream": [544, 545, 546, 547, 548], "cout": 544, "cuboid": 545, "upon": [545, 547, 548], "point3d": [545, 547], "surfac": 545, "volum": [545, 945], "unari": [546, 547], "rectangl": [547, 548], "coordin": [547, 548], "absolut": [547, 708, 841, 1054], "height": 548, "catch": [551, 954], "throw": 551, "spirit": [561, 685, 686, 687], "pre": [563, 630], "destin": [563, 884], "back_insert_iter": 563, "binary_search": 566, "intellig": [566, 572, 961, 1056], "find_if": [569, 619], "customiz": 569, "for_each": 570, "lower_bound": 572, "reverse_copi": [574, 593], "characterist": [576, 579], "modif": [579, 947], "fill": [582, 1070], "definin": 583, "subscript": 584, "eras": 585, "multimap": 587, "deriv": [597, 598], "larger": [601, 949, 957], "want": [601, 626, 637, 641, 664, 725, 730, 888, 971], "substr": [606, 1001], "paint": 607, "american": 607, "onto": 607, "moodl": [608, 790, 804, 805, 830, 937], "quiz": [608, 790, 804, 805, 830, 937], "cin": 610, "n": 616, "year": 616, "transform": [617, 689, 705, 957], "wrong": [620, 700, 884], "great": [625, 915], "around": [626, 654], "school": 626, "item": [626, 688, 704, 705, 706, 952, 958], "inevit": 626, "union": [626, 702], "consider": [626, 915], "uniform": 628, "implementor": 629, "direct": [629, 728], "inconsist": 630, "heap": 630, "refus": 630, "narrow": 630, "mess": [631, 1071], "realist": [631, 955, 1092], "int": [631, 910], "nicolai": 631, "josutti": 631, "complain": 631, "said": 634, "guidelin": 634, "well": 634, "smartptr": 636, "lvalu": [639, 688], "wish": [639, 967], "theori": 639, "Ones": 639, "sai": [641, 819], "decai": 641, "chosen": 643, "rescu": [643, 668, 690, 933, 953, 974, 1082], "syntact": [643, 953], "variat": [643, 675, 680, 757], "conceptless": [644, 645], "fulfil": 648, "has_siz": 648, "index_returns_doubl": 648, "func": 649, "ret": 652, "doubl": 652, "foreword": 654, "prototyp": 654, "examp": 654, "explain": 654, "drive": [654, 854], "anatomi": [654, 735], "resum": 654, "suspens": 654, "caller": 654, "co_yield": 654, "mimick": 654, "fibo": 655, "suspend": [660, 661, 662], "decis": [665, 913], "cleanli": 665, "captur": [668, 669, 671], "care": 668, "handwritten": [670, 671], "proggi": 670, "morph": 670, "possibl": 671, "temporari": [671, 952, 1092], "made": 671, "veri": [673, 1083], "hard": [673, 838], "aris": 673, "gool": 675, "prevent": [675, 686], "accident": [675, 705], "dangl": 676, "easi": [676, 693], "constraint": 676, "dogmat": 676, "sigh": 676, "storag": [678, 906], "abbrevi": 678, "avail": [678, 716], "compat": 680, "unique_ptr": [682, 685, 686], "shared_ptr": [682, 685, 705], "handwrit": 684, "ctor": 684, "auto_ptr": 684, "mayb": 684, "uniqu": [685, 706], "But": [685, 888], "juggl": 685, "make_shar": 685, "cyclic": 685, "chanc": 686, "leakag": 686, "keystrok": 686, "make_uniqu": 686, "acknowledg": 686, "prove": 686, "weak_ptr": [687, 705], "borrow": 687, "invalid": 687, "univers": 688, "dual": 688, "bag": [688, 704, 705, 706], "null": 689, "pointlessli": 689, "hardcod": [689, 721], "placehold": 689, "classic": 690, "upsid": 690, "technic": 690, "downsid": 690, "joinabl": 693, "detach": [693, 900], "cornercas": 693, "recursive_mutex": 696, "timed_mutex": 696, "recursive_timed_mutex": 696, "lock": [697, 700, 749, 762], "unlock": [697, 762], "consid": 697, "acquisit": [697, 1041], "lock_guard": 697, "condition_vari": 698, "safe": [698, 929], "predic": [698, 904], "concern": 698, "promis": 700, "chrono": [700, 701], "utterli": 700, "becom": [700, 949], "readi": 700, "minim": 700, "pro": 700, "clock": 701, "sleep": [701, 755, 760, 761], "rel": [708, 841, 962], "compon": 708, "creation": [708, 789, 900, 901], "create_directori": 708, "entri": 708, "classif": 708, "is_xxx": 708, "directory_entri": 708, "modern": [712, 713, 714, 1112], "hook": 715, "necessari": 715, "ioctl": [715, 716, 718, 737, 770, 883], "vtabl": 716, "kernelspac": 716, "_io": [716, 737], "major": [720, 721], "minor": [720, 721], "space": [721, 771, 790, 793, 794, 915], "hair": 725, "pretti": 725, "wswitch": 725, "dma": [728, 729, 753], "physic": 728, "scatterlist": 728, "sync": 728, "when": 730, "explod": 730, "loadabl": 735, "init": [735, 753, 795, 1107], "exit": [735, 864, 900, 910], "unload": 735, "raspi": [737, 738, 874], "legaci": [737, 1027], "api": [737, 767, 899, 918], "my_activate_gpio": 737, "servic": [739, 795, 1074], "routin": [739, 753], "reserv": 741, "kmalloc": [743, 744, 760], "doubli": [745, 746], "node": [745, 886], "empti": [745, 836, 968, 1024], "consequ": 747, "rt": [749, 750], "mutual": [749, 762], "exclus": [749, 762], "registr": 751, "layer": 751, "util": [751, 856], "pci": [753, 754], "foremost": 753, "probe": 753, "bar": 753, "rasperri": 757, "crossdev": 757, "artifact": [757, 1057], "bootload": 757, "jjj": 758, "mainten": 759, "spinlock": [760, 762, 763], "spin_lock": 760, "irq": 760, "spin_lock_irqsav": 760, "spin_unlock_irqrestor": 760, "ah": [760, 1071], "bulletproof": 762, "dup": 764, "fork": 764, "timestamp": 765, "defer": [765, 776], "jiffi": 767, "wheel": [767, 1010], "get_one_ev": 770, "copy_to_us": 770, "noth": 773, "o_nonblock": 773, "wake": 774, "workqueu": [776, 777, 778], "did": 776, "destroi": [777, 1094], "gzip": 781, "tar": 783, "etiquett": 783, "Being": 783, "g1": 784, "lot": [784, 785], "precondit": [784, 785], "credenti": [784, 803], "backup": [784, 785, 819], "busi": 785, "ok": [788, 910], "serial": 788, "pseudo": 788, "partit": 788, "proc": 788, "authent": [792, 870], "prompt": 792, "verif": [792, 1043], "success": 792, "imperson": 792, "uid": [794, 813, 814], "parent": [795, 912], "child": 795, "subsystem": 796, "0": [796, 910, 1067, 1107], "stdout": [800, 850, 864, 886], "stderr": 800, "trick": [800, 999], "teacher": 802, "constel": 802, "root": [802, 814], "octal": 802, "tune": [802, 917, 1066], "setuid": [813, 814], "passwd": [813, 833, 889, 1033], "sudo": 813, "password": [813, 1021], "chmod": [813, 982], "toi": 813, "effect": [814, 929, 968], "ugli": 815, "sticki": 815, "umask": 816, "edit": 817, "tabul": 817, "filenam": 817, "bashrc": [818, 819], "cp": 819, "similar": 819, "its": [819, 1066], "pwd": 820, "cd": 820, "mkdir": [826, 836], "funni": 827, "dev": 832, "touch": 836, "rm": 836, "rmdir": 836, "renam": 840, "mv": 840, "somewher": 840, "cut": [843, 992], "durchsuchen": 845, "optionen": 845, "verkn\u00fcpfungen": 845, "grep": 846, "less": [849, 950, 974], "brushless": 854, "motor": 854, "speed": 854, "esc": 854, "fwd": 854, "rev": 854, "calibr": 854, "datagram": 855, "exchang": 855, "packet": 855, "vcan": 856, "frame": [857, 1075], "mcp2515": 858, "schemat": 858, "solder": 858, "spi": 858, "lm73": 861, "slave": [861, 863], "master": [861, 863], "enabl": [861, 863], "bcm2835": 861, "datasheet": 861, "connect": [861, 880, 1070], "i2cdetect": 861, "detect": 861, "hwmon": [861, 863], "monitor": [861, 863], "pwm": 862, "pca9685": 862, "puls": 862, "wire": [862, 863], "ds18b20": 863, "alter": 863, "w1": 863, "attach": 863, "pin": [863, 897], "ds2482": 863, "800": 863, "channel": 863, "announc": 863, "hotplug": 863, "lm": 863, "caveat": [863, 1067], "topologi": 863, "symptom": 863, "statu": [864, 900, 910], "adjust": [866, 943], "wear": 870, "admin": 870, "hat": 870, "scp": 873, "sshf": 874, "mount": 874, "logdata": 874, "unmount": 874, "fusermount": 874, "umount": 874, "helper": [875, 1077], "simplic": [879, 880, 881], "watch": 879, "strace": 879, "supervis": 879, "descriptor": [883, 886, 893], "filedescriptor": 883, "offset": [883, 893], "lseek": 883, "hole": 885, "o_creat": 887, "bogu": 887, "o_excl": 888, "alreadi": 888, "o_rdonli": 889, "even": [889, 890, 1016], "o_wronli": 890, "writeabl": 890, "implicitli": 890, "scatter": 893, "gather": 893, "retriev": 895, "wise": 896, "legal": 899, "pthread_join": 900, "synchron": [902, 928], "win32": 904, "reset": 904, "trylock": 909, "islock": 909, "argc": 910, "char": 910, "argv": [910, 984], "procf": 912, "pid": 912, "ppid": 912, "getpid": 912, "getppid": 912, "multitask": 913, "fair": [913, 917], "runnabl": [913, 919], "bare": 915, "metal": 915, "hm": 915, "awai": [915, 1050], "stabil": 915, "latenc": [917, 919], "nice": 917, "inexact": 917, "immedi": 917, "preempt_rt": 917, "polici": 918, "prioriti": 918, "runn": 918, "frequenc": 919, "scale": 919, "mysteri": 919, "remain": 919, "sysprog": [920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930], "mmap": 924, "segment": 924, "produc": [924, 958], "consum": 924, "mq_open": 925, "send": [925, 929], "receiv": 925, "mq_send": 925, "mq_receiv": 925, "mq_close": 925, "mq_unlink": 925, "notif": 925, "mq_notifi": 925, "mqueue": 925, "sem_open": 925, "sem_wait": 925, "sem_post": 925, "sem_clos": 925, "sem_unlink": 925, "barebon": 928, "alarm": 928, "louder": 928, "innoc": 928, "sigalrm": 928, "programmat": 929, "mask": 929, "pend": 929, "sigset_t": 929, "async": 929, "seem": 931, "nm": 931, "agnost": 932, "goodi": 933, "nativ": [934, 939], "sysroot": [934, 943], "linaro": 943, "defunct": 943, "patienc": 943, "against": [943, 948, 974], "docker": 945, "autoconf": 945, "71": 945, "zoom": 947, "rememb": 947, "reloc": 948, "independ": 948, "pic": 948, "runtim": 948, "def": 950, "reach": 950, "theoret": 950, "nonloc": 950, "hood": 952, "monkeypatch": 952, "print": [952, 977], "contextlib": 952, "contextmanag": 952, "involv": 952, "prefixprint": 952, "sugar": 953, "arg": 953, "kwarg": 953, "functool": [953, 974], "rais": 954, "regardless": 954, "coverag": 957, "infin": 958, "form": 962, "daemon": 963, "mother": 965, "acquir": 965, "late": 967, "abtract": 967, "Its": 968, "interrelationship": 970, "salari": 971, "introspect": 971, "isinst": 971, "issubclass": 971, "classmethod": 972, "staticmethod": 972, "_make": 973, "_asdict": 973, "dunder": 974, "compar": 974, "incompat": 974, "lotsa": 974, "magic": 974, "__gt__": 974, "term": 974, "__lt__": 974, "total_ord": 974, "them": 974, "readonli": 975, "repr": 976, "__repr__": 976, "suppli": 977, "ultim": 977, "fundament": 978, "guido": 980, "van": 980, "rossum": 980, "hash": 982, "bang": 982, "she": 982, "doze": 982, "registri": 982, "indent": 983, "cosmet": 984, "rudimentari": 984, "python2": 986, "unicod": 986, "esoter": 990, "delimit": 999, "interv": 1007, "axi": 1009, "setuptool": 1010, "manifest": 1010, "publish": [1010, 1049, 1074], "usernam": 1021, "prime": [1026, 1034, 1040], "strategi": 1033, "revert": 1035, "justifi": 1036, "activ": 1042, "dictread": [1044, 1045, 1066], "cp1252": [1044, 1046], "reader": [1046, 1047, 1066], "nohead": 1046, "both": 1052, "interrel": 1053, "product": 1054, "david": 1055, "beazlei": 1055, "raymond": 1055, "hetting": 1055, "mean": 1057, "linear": [1058, 1060, 1061], "regress": [1058, 1060, 1061], "weather": 1059, "ndarrai": 1060, "plot": 1060, "splice": 1060, "mankind": 1062, "god": 1062, "unsafeti": 1063, "incomplet": [1065, 1073], "insan": 1066, "scsv": 1066, "dbapi": [1067, 1069, 1070], "transact": 1067, "postgresql": 1069, "postgr": 1069, "cursor": 1070, "queri": 1070, "ascii": 1071, "iso": 1071, "latin": 1071, "8859": 1071, "lieb": 1071, "gr\u00fc\u00dfe": 1071, "j\u00f6rg": 1071, "\u795d\u597d": 1071, "utf": 1071, "decod": 1071, "broker": 1074, "subscrib": 1074, "payload": 1074, "append": 1075, "deprec": 1075, "bitmap": 1077, "neat": 1077, "iloc": [1079, 1080], "Then": 1079, "inplac": 1080, "loc": [1080, 1081], "hiccup": 1081, "inclus": 1081, "lowercas": 1082, "email": 1082, "normalized_email": 1082, "ing": 1082, "elementtre": 1083, "etre": 1083, "sax": 1083, "dom": 1083, "34": 1085, "invoc": 1087, "subcommand": 1087, "upload": 1090, "pythonpath": 1092, "mark": 1092, "expect": [1092, 1101], "recogn": 1093, "meat": 1093, "freez": 1094, "recreat": 1094, "fatal": 1099, "failur": 1099, "assert_": 1099, "suit": 1099, "teardown": 1104, "organisatorisch": 1106, "buchung": 1106, "kursablauf": 1106, "schulungen": 1106, "kursgestaltung": 1106, "unterlagen": 1106, "grub": 1107, "97": 1107, "bauen": 1107, "prozess": 1107, "verschieden": 1107, "zielpublikum": [1108, 1110, 1111, 1116, 1118, 1123, 1124, 1130], "kursinhalt": [1108, 1110, 1111, 1116, 1118, 1119, 1123, 1124, 1125, 1126, 1128, 1129, 1130], "vorkenntniss": [1108, 1110, 1111, 1116, 1118, 1119, 1123, 1124, 1125, 1126, 1128, 1129, 1130], "three": 1112, "prior": 1114, "beispielen": 1118, "mutter": 1119, "aller": 1119, "woch": 1123, "svn": 1124, "sandbox": 275}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "nbsphinx": 3, "sphinx": 60}, "alltitles": {"Kontakt": [[0, "kontakt"]], "Navigation": [[0, "navigation"]], "Google Maps": [[0, "google-maps"]], "Google Streetview": [[0, "google-streetview"]], "Curriculum Vitae": [[1, "curriculum-vitae"]], "\u00dcber Mich": [[2, "uber-mich"]], "Projekte": [[3, "projekte"]], "Projekte aus selbstst\u00e4ndiger T\u00e4tigkeit": [[3, "projekte-aus-selbststandiger-tatigkeit"]], "Projekte aus nichtselbstst\u00e4ndiger T\u00e4tigkeit": [[3, "projekte-aus-nichtselbststandiger-tatigkeit"]], "Skills": [[4, "skills"], [128, "skills"]], "Course Material": [[5, "course-material"], [409, "course-material"], [1054, "course-material"]], "Einleitung": [[6, "Einleitung"], [184, "Einleitung"]], "Datatypes": [[6, "Datatypes"], [181, "Datatypes"], [184, "Datatypes"], [187, "Datatypes"], [200, "Datatypes"], [203, "Datatypes"], [211, "Datatypes"], [213, "Datatypes"], [219, "Datatypes"], [223, "Datatypes"], [226, "Datatypes"], [229, "Datatypes"], [243, "datatypes"], [250, "datatypes"], [253, "datatypes"], [261, "Datatypes"], [263, "datatypes"], [264, "datatypes"], [265, "Datatypes"], [269, "datatypes"], [270, "datatypes"], [296, "Datatypes"], [986, "datatypes"]], "Numbers": [[6, "Numbers"], [184, "Numbers"], [187, "Numbers"], [211, "Numbers"], [296, "Numbers"], [986, "numbers"]], "Integer Numbers": [[6, "Integer-Numbers"], [184, "Integer-Numbers"], [986, "integer-numbers"]], "Strings": [[6, "Strings"], [181, "Strings"], [184, "Strings"], [187, "Strings"], [196, "Strings"], [200, "Strings"], [200, "id3"], [203, "Strings"], [211, "Strings"], [223, "Strings"], [241, "Strings"], [244, "Strings"], [244, "id1"], [244, "id3"], [251, "Strings"], [296, "Strings"]], "Compound Datatypes": [[6, "Compound-Datatypes"], [184, "Compound-Datatypes"], [196, "Compound-Datatypes"], [200, "Compound-Datatypes"], [203, "Compound-Datatypes"], [206, "Compound-Datatypes"], [211, "Compound-Datatypes"], [213, "Compound-Datatypes"], [219, "Compound-Datatypes"], [223, "Compound-Datatypes"], [226, "Compound-Datatypes"], [229, "Compound-Datatypes"], [241, "Compound-Datatypes"], [265, "Compound-Datatypes"], [271, "Compound-Datatypes"], [987, "compound-datatypes"]], "Lists (Array in JavaScript, std::vector<> in C++, Array in Java)": [[6, "Lists-(Array-in-JavaScript,-std::vector<>-in-C++,-Array-in-Java)"], [184, "Lists-(Array-in-JavaScript,-std::vector<>-in-C++,-Array-in-Java)"]], "Dictionary (Key/Value Map in Javascript)": [[6, "Dictionary-(Key/Value-Map-in-Javascript)"], [184, "Dictionary-(Key/Value-Map-in-Javascript)"]], "Set: mathematische Mengen": [[6, "Set:-mathematische-Mengen"], [184, "Set:-mathematische-Mengen"]], "while": [[6, "while"], [184, "while"], [203, "while"], [219, "while"], [251, "while"]], "Functions": [[6, "Functions"], [41, "functions"], [184, "Functions"], [187, "Functions"], [200, "Functions"], [211, "Functions"], [213, "Functions"], [219, "Functions"], [223, "Functions"], [228, "functions"], [244, "Functions"], [251, "Functions"], [265, "Functions"], [278, "functions"], [334, "functions"], [334, "id1"], [998, "functions"]], "Python Basics (2021-xx-xx - 2021-yy-yy)": [[7, "python-basics-2021-xx-xx-2021-yy-yy"]], "Training Information": [[7, null], [167, null], [168, null], [170, null], [171, null], [172, null], [173, null], [175, null], [177, null], [178, null], [182, null], [185, null], [188, null], [191, null], [192, null], [193, null], [194, null], [198, null], [201, null], [210, null], [214, null], [217, null], [220, null], [222, null], [225, null], [228, null], [231, null], [240, null], [243, null], [250, null], [253, null]], "\u00dcberblick": [[7, "uberblick"], [175, "uberblick"], [185, "uberblick"], [194, "uberblick"], [210, "uberblick"], [222, "uberblick"]], "Log": [[7, "log"], [115, "log"], [167, "log"], [168, "log"], [171, "log"], [172, "log"], [180, "log"], [182, "log"], [183, "log"], [185, "log"], [188, "log"], [192, "log"], [194, "log"], [198, "log"], [201, "log"], [210, "log"], [222, "log"], [231, "log"]], "Tag 1": [[7, "tag-1"], [158, "tag-1"], [177, "tag-1"], [185, "tag-1"], [188, "tag-1"], [194, "tag-1"], [210, "tag-1"], [222, "tag-1"]], "Tag 2": [[7, "tag-2"], [158, "tag-2"], [177, "tag-2"], [185, "tag-2"], [188, "tag-2"], [194, "tag-2"], [210, "tag-2"], [222, "tag-2"]], "Live-Hacking (Jupyter Notebook)": [[7, "live-hacking-jupyter-notebook"], [175, "live-hacking-jupyter-notebook"], [185, "live-hacking-jupyter-notebook"], [188, "live-hacking-jupyter-notebook"], [198, "live-hacking-jupyter-notebook"]], "Links": [[7, "links"], [37, "links"], [115, "links"], [152, "Links"], [163, "links"], [168, "links"], [170, "links"], [172, "links"], [175, "links"], [182, "links"], [183, "links"], [185, "links"], [194, "links"], [198, "links"], [201, "links"], [204, "links"], [210, "links"], [217, "links"], [228, "links"], [231, "links"], [264, "links"], [270, "links"], [306, "links"], [384, "links"], [633, "links"], [654, "links"], [672, "links"], [683, "links"], [796, "links"], [817, "links"], [856, null], [863, "links"], [979, null], [1009, null], [1010, "links"], [1074, "links"], [1076, "links"], [1077, "links"], [1079, "links"], [1080, "links"], [1081, "links"], [1082, "links"], [1095, "links"], [734, "links"]], "Programmierung Grundlagen (Jupyter Notebook)": [[8, "programmierung-grundlagen-jupyter-notebook"], [176, "programmierung-grundlagen-jupyter-notebook"], [186, "programmierung-grundlagen-jupyter-notebook"], [212, "programmierung-grundlagen-jupyter-notebook"], [224, "programmierung-grundlagen-jupyter-notebook"]], "Details": [[9, "details"], [76, "details"], [318, "details"]], "Course List": [[10, "course-list"]], "Contents": [[10, null], [23, null], [126, null], [128, null], [130, null], [131, null], [132, null], [133, null], [134, null], [135, null], [136, null], [137, null], [146, null], [155, null], [159, "contents"], [160, null], [407, "contents"], [509, null], [512, null], [518, null], [521, null], [609, "id1"], [786, "id1"], [806, "id1"], [825, "id1"], [831, "id1"], [834, "id1"], [851, "id1"], [859, "id1"], [860, "id1"], [867, "id1"], [876, "id1"], [892, "id1"], [894, "id1"], [896, "id1"], [911, "id1"], [921, null], [924, null], [938, "id1"], [958, null], [1013, "id1"], [1014, "id1"], [1018, "id1"], [1027, "id1"], [1041, "id1"], [1048, "id1"], [1099, null], [1101, null], [1104, null], [1112, "contents"], [1115, "contents"]], "Programmierung Grundlagen, anhand von Python (12. und 13.4.2021)": [[10, "programmierung-grundlagen-anhand-von-python-12-und-13-4-2021"], [319, "programmierung-grundlagen-anhand-von-python-12-und-13-4-2021"]], "Templates for Course Descriptions": [[11, "templates-for-course-descriptions"]], "Sidebar: Course Metadata": [[11, "sidebar-course-metadata"]], "About This Site": [[12, "about-this-site"]], "License: GPLv3": [[12, "license-gplv3"]], "Github": [[12, "github"], [301, "github"]], "Sphinx": [[12, "sphinx"], [64, "sphinx"]], "Installation Instructions": [[12, "installation-instructions"]], "pip and venv": [[12, null]], "Work in Progress": [[12, "work-in-progress"], [114, "work-in-progress"]], "More": [[12, "more"]], "OpenTraining": [[13, "opentraining"]], "Draft Topics": [[14, "draft-topics"]], "Miscellaneous": [[15, "miscellaneous"], [113, "miscellaneous"], [124, "miscellaneous"], [151, "miscellaneous"], [171, "miscellaneous"], [235, "miscellaneous"], [236, "miscellaneous"], [256, "miscellaneous"], [270, "miscellaneous"], [278, "miscellaneous"], [282, "miscellaneous"], [504, "miscellaneous"], [504, "id1"], [640, "miscellaneous"], [893, "miscellaneous"], [906, "miscellaneous"], [703, "miscellaneous"]], "S5 Integration": [[16, "s5-integration"]], "Work in Progress: S5 Web Slides": [[16, "work-in-progress-s5-web-slides"]], "Implementation Notes": [[16, "implementation-notes"], [287, "implementation-notes"]], "Todo": [[16, "id1"], [128, null], [128, null], [128, null], [128, null], [128, null], [128, null], [128, null], [128, null], [128, null], [128, null], [128, null], [128, null], [128, null], [128, null], [128, null], [128, null], [128, null], [128, null], [128, null], [157, "id1"], [160, "id2"], [160, "id3"], [409, "todo"], [505, "id1"], [508, "id1"], [511, "id1"], [514, "id1"], [517, "id1"], [520, "id1"], [523, "id1"], [714, "id1"], [718, "id1"], [726, "id2"], [920, "id1"], [923, "id1"], [927, "id1"], [1098, "id1"], [1103, "id1"]], "S5 Slide Tests": [[17, "s5-slide-tests"]], "Level 1 Heading": [[18, "level-1-heading"]], "Level 2 Heading": [[18, "level-2-heading"]], "Level 2 Heading, Image": [[18, "level-2-heading-image"]], "Screencasts": [[19, "screencasts"]], "Topics to be Written": [[20, "topics-to-be-written"]], "New Topics to Write": [[20, "new-topics-to-write"]], "Netidee F\u00f6rderantrag": [[21, "netidee-forderantrag"]], "Netidee F\u00f6rderantrag: OpenTraining": [[22, "netidee-forderantrag-opentraining"]], "1. DATEN ANTRAGSTELLER_IN": [[22, "daten-antragsteller-in"]], "2. ALLGEMEINES": [[22, "allgemeines"]], "2.1 Projektname": [[22, "projektname"]], "2.2 Projekt-Untertitel": [[22, "projekt-untertitel"]], "2.3 Allgemeinverst\u00e4ndliche KURZbeschreibung des Projektes": [[22, "allgemeinverstandliche-kurzbeschreibung-des-projektes"]], "2.4 Anschlussf\u00f6rderung": [[22, "anschlussforderung"]], "3. DIE BESONDERE BEDEUTUNG IHRES PROJEKTES F\u00dcR DAS INTERNET (DIE INTERNETNUTZUNG) IN \u00d6STERREICH?": [[22, "die-besondere-bedeutung-ihres-projektes-fur-das-internet-die-internetnutzung-in-osterreich"]], "4. ZIELGRUPPE UND PROJEKTZIEL": [[22, "zielgruppe-und-projektziel"]], "5. L\u00d6SUNG": [[22, "losung"]], "5.1 Beschreibung der Probleml\u00f6sung": [[22, "beschreibung-der-problemlosung"]], "5.2 Wesentliche Elemente eines nachhaltigen Impact NACH netidee Projektende": [[22, "wesentliche-elemente-eines-nachhaltigen-impact-nach-netidee-projektende"]], "6. UMFELDANALYSE": [[22, "umfeldanalyse"]], "6.1 Was ist der Stand der Technik / Methode / des Wissens?": [[22, "was-ist-der-stand-der-technik-methode-des-wissens"]], "6.2 Welche andere L\u00f6sungen/Vorhaben zu den genannten Problemen gibt es schon?": [[22, "welche-andere-losungen-vorhaben-zu-den-genannten-problemen-gibt-es-schon"]], "7. ALLEINSTELLUNGSMERKMAL": [[22, "alleinstellungsmerkmal"]], "8. PROJEKTERGEBNISSE": [[22, "projektergebnisse"]], "8.1 Liste der Projektergebnisse": [[22, "liste-der-projektergebnisse"]], "8.2 Erforderliche Lizenzen Dritter": [[22, "erforderliche-lizenzen-dritter"]], "9. ERFOLGREICHER PROJEKTABSCHLUSS": [[22, "erfolgreicher-projektabschluss"]], "9.1 Ihre sonstigen Aktivit\u00e4ten im Projektbereich": [[22, "ihre-sonstigen-aktivitaten-im-projektbereich"]], "9.2 Angaben zur fachlichen Eignung der MitarbeiterInnen im Projektkernteam": [[22, "angaben-zur-fachlichen-eignung-der-mitarbeiterinnen-im-projektkernteam"]], "9.3 Erfahrung des/der vorgesehenen ProjektleiterIn": [[22, "erfahrung-des-der-vorgesehenen-projektleiterin"]], "9.4 Link zum maximal 2-min\u00fctigen Video des Projektkernteams": [[22, "link-zum-maximal-2-minutigen-video-des-projektkernteams"]], "9.5 Risiken": [[22, "risiken"]], "9.6 Erfolgskriterien am netidee-Projektende": [[22, "erfolgskriterien-am-netidee-projektende"]], "9.7 Angestrebter Impact 3 Jahre nach netidee-Projektende": [[22, "angestrebter-impact-3-jahre-nach-netidee-projektende"]], "10. UMSETZUNG (EINJ\u00c4HRIGES NETIDEE PROJEKT)": [[22, "umsetzung-einjahriges-netidee-projekt"]], "10.1 Wichtige Partner_innen": [[22, "wichtige-partner-innen"]], "10.2 Arbeitsschwerpunkte": [[22, "arbeitsschwerpunkte"]], "10.3 Wesentliche Ressourcen": [[22, "wesentliche-ressourcen"]], "10.4 Nutzer_innen-Kommunikationskan\u00e4le": [[22, "nutzer-innen-kommunikationskanale"]], "11. PROJEKTTERMINE": [[22, "projekttermine"]], "11.1 Termine Projektstart - Projektende": [[22, "termine-projektstart-projektende"]], "Projektstart": [[22, "projektstart"]], "12. KOSTEN UND FINANZIERUNG": [[22, "kosten-und-finanzierung"]], "12.1 Projektkosten": [[22, "projektkosten"]], "Personalkosten": [[22, "personalkosten"]], "Sonstige Kosten": [[22, "sonstige-kosten"]], "Gesamtkosten in \u20ac": [[22, "gesamtkosten-in"]], "12.2 Wir beantragen folgende netidee-F\u00f6rderung": [[22, "wir-beantragen-folgende-netidee-forderung"]], "13.3 Die restlichen Kosten werden finanziert durch": [[22, "die-restlichen-kosten-werden-finanziert-durch"]], "13. SONDERPREIS": [[22, "sonderpreis"]], "14. ERG\u00c4NZENDE ANGABEN": [[22, "erganzende-angaben"]], "14.1 Transparenz Mehrfachantr\u00e4ge": [[22, "transparenz-mehrfachantrage"]], "14.2 Nutzung der WhatAVenture-Plattform": [[22, "nutzung-der-whataventure-plattform"]], "14.3 Das eingereichte Projekt ist Teil einer schulischen Verpflichtung (z.B. HTL Diplomarbeit)": [[22, "das-eingereichte-projekt-ist-teil-einer-schulischen-verpflichtung-z-b-htl-diplomarbeit"]], "14.4 Wie haben Sie von der netidee erfahren? (Mehrfachnennungen m\u00f6glich)": [[22, "wie-haben-sie-von-der-netidee-erfahren-mehrfachnennungen-moglich"]], "16. DATENSCHUTZ": [[22, "datenschutz"]], "Video Screenplay": [[23, "video-screenplay"]], "The Problem And Me": [[23, "the-problem-and-me"]], "Open Source Training Material": [[23, "open-source-training-material"]], "Walk-Through": [[23, "walk-through"]], "Use Case: Custom Training, Subtract Known": [[24, "use-case-custom-training-subtract-known"]], "Use Case: Calculate Minimum Training Duration": [[25, "use-case-calculate-minimum-training-duration"]], "Use Cases": [[26, "use-cases"]], "Trainer": [[26, "trainer"]], "Editor": [[26, "editor"]], "End User (Training Audience)": [[26, "end-user-training-audience"]], "Use Case: Use Training Material From Other Sites": [[27, "use-case-use-training-material-from-other-sites"]], "Use Case: Menu to Choose From": [[28, "use-case-menu-to-choose-from"]], "Use Case: Slide Show Material as Plain-Text Files": [[29, "use-case-slide-show-material-as-plain-text-files"]], "Emoji Codes (sphinxemoji)": [[30, "emoji-codes-sphinxemoji"]], "Setup": [[30, "setup"], [243, "setup"], [250, "setup"], [253, "setup"], [263, "setup"], [264, "setup"], [268, "setup"], [269, "setup"], [270, "setup"], [854, "setup"], [979, "setup"], [1094, "setup"]], "Most Used Here In This Site": [[30, "most-used-here-in-this-site"]], "All Codes": [[30, "all-codes"]], "Recipes": [[31, "recipes"]], "isoamsa.txt: Added Mathematical Symbols: Arrows": [[32, "isoamsa-txt-added-mathematical-symbols-arrows"]], "isoamsr.txt: Added Mathematical Symbols: Relations": [[33, "isoamsr-txt-added-mathematical-symbols-relations"]], "isonum.txt: Added Mathematical Symbols: Binary Operators": [[34, "isonum-txt-added-mathematical-symbols-binary-operators"]], "Layout Test Page": [[35, "layout-test-page"]], "Admonitions": [[35, "admonitions"]], "Admonition": [[35, "admonition"]], "This is an .. admonition::": [[35, null]], "Tip": [[35, "tip"]], "Note": [[35, "note"]], "Hint": [[35, "hint"]], "Important": [[35, "important"]], "Attention": [[35, "attention"]], "Caution": [[35, "caution"]], "Error": [[35, "error"]], "Danger": [[35, "danger"]], "Sidebar": [[35, "sidebar"]], "Blech Sidebar Title Blah": [[35, null]], "Sidebar \u201cKursdaten\u201d": [[35, "sidebar-kursdaten"]], "Kursdaten": [[35, null], [1108, null], [1109, null], [1110, null], [1111, null], [1116, null], [1118, null], [1119, null], [1123, null], [1124, null], [1125, null], [1126, null], [1128, null], [1129, null], [1130, null]], "Local Content": [[35, "local-content"]], "Local Heading 1": [[35, "local-heading-1"], [35, "id3"]], "Local Heading 1.1": [[35, "local-heading-1-1"], [35, "id4"]], "Local Heading 1.2": [[35, "local-heading-1-2"], [35, "id5"]], "Local Heading 2": [[35, "local-heading-2"], [35, "id6"]], "Sidebar with Local Content": [[35, "sidebar-with-local-content"]], "Bleh Content Blah": [[35, null]], "To Do": [[35, "to-do"]], "mmlalias.txt: MathML aliases for entities from other sets": [[36, "mmlalias-txt-mathml-aliases-for-entities-from-other-sets"]], "Most used": [[36, "id1"]], "All": [[36, "id2"]], "reStructuredText Cheat Sheet": [[37, "restructuredtext-cheat-sheet"]], "Further Information": [[37, "further-information"], [116, "further-information"], [191, "further-information"], [192, "further-information"], [214, "further-information"], [292, "further-information"], [301, "further-information"], [688, "further-information"]], "Local Documents": [[37, "local-documents"]], "External Links": [[37, "external-links"]], "Section References": [[37, "section-references"]], "Section That We Refer To": [[37, "section-that-we-refer-to"]], "Another Section Contains a Link To The Referred Section Above": [[37, "another-section-contains-a-link-to-the-referred-section-above"]], "Footnotes": [[37, "footnotes"]], "Sphinxish": [[38, "sphinxish"]], "Jupyter Notebooks": [[38, "jupyter-notebooks"]], "Running Sphinx From Source": [[38, "running-sphinx-from-source"]], "Seminar on \u201cClean Code\u201d (2022-04-13)": [[39, "seminar-on-clean-code-2022-04-13"]], "Seminar Agenda and Timeline": [[39, "seminar-agenda-and-timeline"]], "Live Hacking Before (Formal) Unit Testing": [[40, "live-hacking-before-formal-unit-testing"]], "Initial Structure": [[40, "initial-structure"]], "Snippets": [[40, null], [40, null], [40, null], [40, null], [40, null], [40, null], [42, null], [42, null], [48, null], [48, null]], "User": [[40, "user"]], "UserDB": [[40, "userdb"]], "bin/userdb-write-binaryfile.cpp": [[40, "bin-userdb-write-binaryfile-cpp"]], "Extend UserDB To Write": [[40, "extend-userdb-to-write"]], "Extend UserDB To Read From File, And Iterate": [[40, "extend-userdb-to-read-from-file-and-iterate"]], "Bug: Use \u201cFaschingbauer\u201d As Last Name": [[40, "bug-use-faschingbauer-as-last-name"]], "Wrap Up: What Do We Have?": [[40, "wrap-up-what-do-we-have"]], "Clean Code: Messages From The Book": [[41, "clean-code-messages-from-the-book"]], "Survey": [[41, null], [408, null]], "Names": [[41, "names"]], "Comments": [[41, "comments"]], "Formatting": [[41, "formatting"]], "Objects and Data Structures": [[41, "objects-and-data-structures"]], "Error Handling": [[41, "error-handling"], [875, "error-handling"]], "Boundaries": [[41, "boundaries"]], "Unit Tests": [[41, "unit-tests"], [481, "unit-tests"]], "Classes": [[41, "classes"], [190, "Classes"], [275, "classes"]], "Live Hacking: Switch To googletest": [[42, "live-hacking-switch-to-googletest"]], "Git Submodule": [[42, "git-submodule"]], "Establish Tests: Demo": [[42, "establish-tests-demo"]], "Straightforward main() Conversion": [[42, "straightforward-main-conversion"]], "Fix Shortcomings": [[42, "fix-shortcomings"]], "Is Software A Craft? Software Is A Craft!": [[43, "is-software-a-craft-software-is-a-craft"]], "09:00-09:15 Introductory Words": [[43, "introductory-words"]], "09:15-10:00 Software Engineering: A Discipline? (What Have We Established?)": [[43, "software-engineering-a-discipline-what-have-we-established"]], "10:00-10:15 Coffee Break": [[43, "coffee-break"]], "10:15-11:00 Establishing \u201cThe Project\u201d (Live Hacking, Slides)": [[43, "establishing-the-project-live-hacking-slides"]], "11:00-12:00 Enter Unit Testing Frameworks": [[43, "enter-unit-testing-frameworks"]], "12:00-13:00 Lunch Break": [[43, "lunch-break"]], "13:00-14:00 Cornerstones From The \u201cClean Code\u201d Book": [[43, "cornerstones-from-the-clean-code-book"]], "14:00-14:45 Keeping Code Clean In The Small": [[43, "keeping-code-clean-in-the-small"]], "14:45-15:00 Coffee Break": [[43, "id1"]], "15:00-23:59 \u201cExtreme Programming\u201d Session": [[43, "extreme-programming-session"]], "UserDB::find() Crashes If User Not Found": [[44, "userdb-find-crashes-if-user-not-found"]], "State": [[44, "state"]], "Bugs": [[45, "bugs"], [51, "bugs"]], "Existing Files Are Overwritten": [[46, "existing-files-are-overwritten"]], "UserDB::read(): What If Done Twice?": [[47, "userdb-read-what-if-done-twice"]], "UserDB: Alternative Output Format - CSV": [[48, "userdb-alternative-output-format-csv"]], "Write CSV: Test": [[48, "write-csv-test"]], "Write CSV: Frontend Program": [[48, "write-csv-frontend-program"], [48, "id1"]], "Read CSV: Test": [[48, "read-csv-test"]], "Features": [[49, "features"]], "Search By Other Indexes": [[50, "search-by-other-indexes"]], "Backlog: What Needs To Change, Or We Will All Die": [[51, "backlog-what-needs-to-change-or-we-will-all-die"]], "Refactoring After Featuritis": [[51, "refactoring-after-featuritis"]], "BackingStore Has Too Many Responsibilities \u27f6 Interface": [[52, "backingstore-has-too-many-responsibilities-longrightarrow-interface"]], "UserDB Has Too Many Responsibilities \u27f6 BackingStore": [[53, "userdb-has-too-many-responsibilities-longrightarrow-backingstore"]], "BackingStore": [[53, "backingstore"]], "Refactoring": [[54, "refactoring"], [482, "refactoring"], [765, "refactoring"]], "Load From BackingStore in Constructor": [[55, "load-from-backingstore-in-constructor"]], "UserDB::{read,write}(): bool, Really?": [[56, "userdb-read-write-bool-really"]], "Submission: Pointless Blinking With Python, asyncio, and libgpiod (and a Raspberry Pi of Course)": [[57, "submission-pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"], [60, "submission-pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"]], "Biography": [[57, "biography"], [60, "biography"]], "Abstract": [[57, "abstract"], [60, "abstract"]], "Description": [[57, "description"], [60, "description"], [439, "description"], [591, "description"], [607, "description"], [610, "description"], [612, "description"], [613, "description"], [614, "description"], [615, "description"], [616, "description"], [617, "description"], [618, "description"], [619, "description"], [621, "description"], [622, "description"]], "Pointless Blinking With Python, asyncio, and libgpiod (and a Raspberry Pi of Course)": [[58, "pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"]], "Installation Notes": [[59, "installation-notes"]], "libgpiod": [[59, "libgpiod"]], "Fedora: Prepare Tarballs": [[59, "fedora-prepare-tarballs"]], "On The Pi: Build And Install": [[59, "on-the-pi-build-and-install"]], "Hochk\u00f6nig": [[62, "hochkonig"]], "K\u00f6nigsjodler (Klettersteig)": [[62, "konigsjodler-klettersteig"]], "Tour: Werfen - Ostpreussenh\u00fctte - Matrashaus - Werfen": [[62, "tour-werfen-ostpreussenhutte-matrashaus-werfen"]], "Blog": [[63, "blog"], [128, "blog"]], "Articles": [[63, "articles"]], "In the Works": [[63, "in-the-works"]], "Not Yet in the Works": [[63, "not-yet-in-the-works"]], "Revisit Existing Posts": [[63, "revisit-existing-posts"]], "pending_xref": [[64, "pending-xref"]], "C++": [[65, "c"], [108, "c"], [109, "c"], [128, "c"]], "C++: Building with CMake": [[66, "c-building-with-cmake"]], "C++: Interfaces": [[67, "c-interfaces"]], "C++: OO Basics": [[68, "c-oo-basics"]], "C++: Unit Testing": [[69, "c-unit-testing"]], "Graph": [[70, "graph"], [167, "graph"], [609, "graph"], [758, "graph"], [1013, "graph"], [1014, "graph"], [1018, "graph"], [1027, "graph"], [1041, "graph"], [1048, "graph"]], "Embedded Computing 1": [[71, "embedded-computing-1"], [76, "embedded-computing-1"]], "Current Curriculum": [[71, "current-curriculum"], [72, "current-curriculum"]], "Topics": [[71, "topics"], [72, "topics"], [96, "topics"], [97, "topics"], [99, "topics"], [100, "topics"], [101, "topics"], [102, "topics"], [127, "topics"], [163, "topics"], [163, "id2"], [191, "topics"], [228, "topics"], [231, null], [305, "topics"], [309, "topics"], [406, "topics"], [534, "topics"], [571, "topics"], [577, "topics"], [581, "topics"], [589, "topics"], [594, "topics"], [599, "topics"], [623, "topics"], [624, "topics"], [628, "topics"], [635, "topics"], [642, "topics"], [653, "topics"], [666, "topics"], [667, "topics"], [677, "topics"], [682, "topics"], [707, "topics"], [709, "topics"], [711, "topics"], [869, "topics"], [887, null], [889, null], [889, null], [935, "topics"], [941, "topics"], [942, "topics"], [962, null], [970, "topics"], [1068, "topics"], [1078, "topics"], [1091, "topics"], [339, "topics"], [354, "topics"], [363, "topics"], [370, "topics"], [376, "topics"], [380, "topics"], [383, "topics"], [387, "topics"], [396, "topics"], [400, "topics"], [405, "topics"], [526, "topics"], [549, "topics"], [552, "topics"], [555, "topics"], [596, "topics"], [605, "topics"], [691, "topics"], [699, "topics"], [703, "topics"], [908, "topics"], [914, "topics"], [1097, "topics"]], "Dependency Graph": [[71, "dependency-graph"], [72, "dependency-graph"]], "Embedded Computing 2": [[72, "embedded-computing-2"], [76, "embedded-computing-2"]], "EX: Race Conditions": [[73, "ex-race-conditions"]], "EX: Avoiding Race Condition": [[74, "ex-avoiding-race-condition"]], "Goals": [[74, "goals"], [80, "goals"], [81, "goals"], [82, "goals"], [83, "goals"], [85, "goals"], [86, "goals"], [87, "goals"], [89, "goals"]], "Outcome": [[74, "outcome"], [80, "outcome"], [81, "outcome"], [82, "outcome"], [83, "outcome"], [170, "outcome"]], "Git Introduction": [[75, "git-introduction"]], "Embedded Computing 2019": [[76, "embedded-computing-2019"]], "Overview": [[76, "overview"], [636, "overview"], [684, "overview"], [698, "overview"], [700, "overview"], [708, "overview"], [782, "overview"], [793, "overview"], [850, "overview"], [861, "overview"], [862, "overview"], [863, "overview"], [863, "id1"], [864, "overview"], [899, "overview"]], "Knowledge Transferred": [[76, "knowledge-transferred"]], "Course Setup": [[76, "course-setup"]], "Linux": [[77, "linux"], [146, "linux"], [853, "linux"]], "Introduction to Linux and Unix": [[78, "introduction-to-linux-and-unix"]], "Linux Hardware Device Management": [[79, "linux-hardware-device-management"]], "EX: Averaging Sensor": [[80, "ex-averaging-sensor"]], "EX: Averaging Sensor (parallel)": [[81, "ex-averaging-sensor-parallel"]], "EX: LED Temperature Display": [[82, "ex-led-temperature-display"]], "Hardware": [[82, "hardware"], [83, "hardware"]], "EX: Temperature Sensors": [[83, "ex-temperature-sensors"], [90, "ex-temperature-sensors"]], "GPIO": [[84, "gpio"]], "sysfs Interface": [[84, "sysfs-interface"]], "gpiod Interface": [[84, "gpiod-interface"]], "Multithreading": [[85, "multithreading"], [149, "multithreading"], [209, "multithreading"], [235, "multithreading"], [236, "multithreading"], [238, "multithreading"], [278, "multithreading"], [282, "multithreading"], [309, "multithreading"], [316, "multithreading"], [928, "multithreading"], [964, "multithreading"], [699, "multithreading"]], "Avoiding Race Conditions: Semaphore/Mutex": [[86, "avoiding-race-conditions-semaphore-mutex"]], "Communication: Waiting for Something": [[87, "communication-waiting-for-something"]], "Python Basics": [[88, "python-basics"]], "EX: Averaging Sensor, Display": [[89, "ex-averaging-sensor-display"]], "Simple Web Programming": [[91, "simple-web-programming"]], "Sensors Web Pages": [[92, "sensors-web-pages"]], "Python": [[93, "python"], [301, "python"], [306, "python"]], "Embedded Computing 2020": [[94, "embedded-computing-2020"]], "SS2022": [[95, "ss2022"]], "Block 1: Linux, and Working With Remote/Embedded Devices": [[95, "block-1-linux-and-working-with-remote-embedded-devices"], [111, "block-1-linux-and-working-with-remote-embedded-devices"]], "Block 2: C on Linux: Local and Cross Development": [[95, "block-2-c-on-linux-local-and-cross-development"], [111, "block-2-c-on-linux-local-and-cross-development"]], "Block 3: C++": [[95, "block-3-c"], [111, "block-3-c"]], "2022-03-08": [[96, "id1"]], "Homework": [[96, "homework"], [97, "homework"], [99, "homework"], [102, "homework"]], "2022-03-10": [[97, "id1"]], "2022-03-10 (Homework until 2022-03-21)": [[98, "homework-until-2022-03-21"]], "From Exercises: Create/Copy/Move/Remove": [[98, "from-trainings-material-soup-linux-basics-shell-exercises-cp-mv-mkdir-rm-group"]], "From  Exercises: The ls Command": [[98, "from-trainings-material-soup-linux-basics-shell-exercises-ls-group"]], "2022-03-21": [[99, "id1"]], "2022-03-22, 2022-03-24 (KU)": [[100, "ku"]], "2022-03-28": [[101, "id1"]], "2022-04-01": [[102, "id1"]], "SS2022: Logs": [[103, "ss2022-logs"]], "WS2022": [[104, "ws2022"]], "Plan: Evolution": [[104, "plan-evolution"]], "FH Joanneum (Embedded Computing): WS2022/2023 (Questions About Code)": [[105, "fh-joanneum-embedded-computing-ws2022-2023-questions-about-code"]], "Question 1: C++ Inheritance": [[105, "question-1-c-inheritance"]], "Question 2: C++ Inheritance": [[105, "question-2-c-inheritance"]], "Question 3: Memory Leak": [[105, "question-3-memory-leak"]], "Question 4: std::vector": [[105, "question-4-std-vector"]], "FH Joanneum (Embedded Computing): WS2022/2023 (Yes/No Questions)": [[106, "fh-joanneum-embedded-computing-ws2022-2023-yes-no-questions"]], "Cross Development": [[106, "cross-development"], [247, "cross-development"], [934, "cross-development"], [935, "cross-development"]], "C++, OO": [[106, "c-oo"]], "Lab Exam 2023-01-17": [[107, "lab-exam-2023-01-17"]], "Project Setup": [[107, "project-setup"], [480, "project-setup"], [1042, "project-setup"]], "Exercises": [[107, "exercises"], [146, "exercises"], [151, "exercises"], [183, "exercises"], [193, "exercises"], [193, "id1"], [193, "id3"], [251, "Exercises"], [256, "exercises"], [437, "exercises"], [439, "exercises"], [446, "exercises"], [475, "exercises"], [490, "exercises"], [492, "exercises"], [534, "exercises"], [599, "exercises"], [623, "exercises"], [941, "exercises"], [970, "exercises"], [1014, "exercises"], [549, "exercises"], [275, "exercises"]], "Exam Submission": [[107, "exam-submission"]], "SS2023: Exam 2023-06-30 (Handout)": [[108, "ss2023-exam-2023-06-30-handout"]], "UNIX/Linux Concepts": [[108, "unix-linux-concepts"], [109, "unix-linux-concepts"]], "Toolchain": [[108, "toolchain"], [109, "toolchain"]], "SS2023: Exam 2023-06-30 (Solved)": [[109, "ss2023-exam-2023-06-30-solved"]], "Embedded Computing 2021": [[110, "embedded-computing-2021"]], "SS2023": [[111, "ss2023"]], "Finish": [[111, "finish"], [776, "finish"]], "Embedded Computing (FH Joanneum Graz)": [[112, "embedded-computing-fh-joanneum-graz"]], "Git Notes": [[113, "git-notes"]], "Bring Local Branch Upstream": [[113, "bring-local-branch-upstream"]], "Create Remote Tracking Branch": [[113, "create-remote-tracking-branch"]], "Create, Submit, Apply Patches": [[113, "create-submit-apply-patches"]], "Packaging this Site on PyPI": [[115, "packaging-this-site-on-pypi"]], "Audio Chip Bringup": [[116, "audio-chip-bringup"]], "Goal": [[116, "goal"], [118, "goal"], [119, "goal"], [121, "goal"], [256, "goal"], [258, "goal"], [1112, "goal"], [1115, "goal"]], "Findings": [[116, "findings"]], "Get Debian 10 Kernel Config": [[117, "get-debian-10-kernel-config"]], "Run Debian within Qemu": [[117, "run-debian-within-qemu"]], "Extract Kernel Config from /boot": [[117, "extract-kernel-config-from-boot"]], "Finish: Debian Kernel Package etc.": [[118, "finish-debian-kernel-package-etc"]], "Yocto Kernel Bringup on Customer Hardware": [[119, "yocto-kernel-bringup-on-customer-hardware"]], "Open Questions: Everything Works Like Before?": [[119, "open-questions-everything-works-like-before"]], "I2S Audio for a Kontron SMARC Module": [[120, "i2s-audio-for-a-kontron-smarc-module"]], "Dirty Upgrade Path": [[121, "dirty-upgrade-path"]], "Steps": [[121, "steps"]], "Wait for Customer Hardware": [[122, "wait-for-customer-hardware"]], "Extract Kernel from Intel Yocto BSP": [[123, "extract-kernel-from-intel-yocto-bsp"]], "Python Training Improvements": [[124, "python-training-improvements"]], "Beginner Course": [[124, "beginner-course"]], "Exercise Structure": [[124, "exercise-structure"]], "Split Exercises": [[124, "split-exercises"]], "Creating Screencasts": [[125, "creating-screencasts"]], "OpenShot": [[125, "openshot"]], "SEO": [[126, "seo"]], "Sitemap": [[126, "sitemap"]], "Meta Information": [[126, "meta-information"]], "Courses": [[126, "courses"]], "Stacks (Hanging)": [[127, "stacks-hanging"]], "DBus (New Topic)": [[127, "dbus-new-topic"]], "Perturb Encoding": [[127, "perturb-encoding"]], "Context Managers (Slideshow)": [[127, "trainings-material-soup-python-misc-context-manager-slides"], [1064, "context-managers-slideshow"]], "ABC (new Topic)": [[127, "abc-new-topic"]], "Finish Meta/SEO and Stuff": [[127, "finish-meta-seo-and-stuff"]], "Miscellaneous To Do": [[128, "miscellaneous-to-do"]], "Extensions": [[128, "extensions"]], "reST Todos": [[128, "rest-todos"]], "Styling": [[128, "styling"]], "Convert to RST/S5": [[128, "convert-to-rst-s5"]], "Examples": [[128, "examples"], [430, "examples"], [630, "examples"], [678, "examples"], [781, "examples"], [883, null]], "Convert Existing Content": [[128, "convert-existing-content"]], "Add Missing": [[128, "add-missing"]], "Structure": [[128, "structure"], [470, "structure"]], "References, Past Trainings": [[128, "references-past-trainings"]], "About": [[128, "about"]], "Learning The Web": [[129, "learning-the-web"]], "Beagleboard: How to Repair NAND (also known as 40W)": [[130, "beagleboard-how-to-repair-nand-also-known-as-40w"]], "Basics": [[130, "basics"], [201, "basics"], [228, "basics"], [243, "basics"], [263, "basics"], [264, "basics"], [264, "id1"], [269, "basics"], [270, "basics"], [270, "id1"], [296, "Basics"], [364, "basics"], [550, "basics"], [562, "basics"], [582, "basics"], [680, "basics"], [783, "basics"], [899, "basics"], [1007, "basics"]], "Getting X-Loader and U-Boot": [[130, "getting-x-loader-and-u-boot"]], "Creating a Bootable MMC/SD card": [[130, "creating-a-bootable-mmc-sd-card"]], "Repairing the NAND": [[130, "repairing-the-nand"]], "Writing X-Loader to NAND": [[130, "writing-x-loader-to-nand"]], "Writing U-Boot to NAND": [[130, "writing-u-boot-to-nand"]], "Porting to Linux (There\u2019s Always A Better Way)": [[131, "porting-to-linux-there-s-always-a-better-way"]], "Processes are Threads": [[131, "processes-are-threads"]], "Signals Aren\u2019t Messages": [[131, "signals-aren-t-messages"]], "References": [[131, null], [131, null], [131, null], [203, "References"], [206, "References"], [541, "references"]], "Message Queues aren\u2019t Message Queues": [[131, "message-queues-aren-t-message-queues"]], "Semaphores and Mutexes": [[131, "semaphores-and-mutexes"]], "Timers": [[131, "timers"]], "Polling": [[131, "polling"]], "Event Dispatching": [[131, "event-dispatching"]], "Interrupts": [[131, "interrupts"], [740, "interrupts"]], "Realtime": [[131, "realtime"], [917, "realtime"], [1107, "realtime"]], "Saving Solid State Disk Life (Gentoo)": [[132, "saving-solid-state-disk-life-gentoo"]], "Rant": [[132, "rant"], [152, "Rant"], [933, null]], "No Swap": [[132, "no-swap"]], "tmpfs instances here and there": [[132, "tmpfs-instances-here-and-there"]], "Syslog, /var/log/messages": [[132, "syslog-var-log-messages"]], "Mountpoint for messages": [[132, "mountpoint-for-messages"]], "Logrotate": [[132, "logrotate"]], "Kernel I/O Scheduler": [[132, "kernel-i-o-scheduler"]], "Use RAM for the Kernel Build": [[132, "use-ram-for-the-kernel-build"]], "Things that are left": [[132, "things-that-are-left"]], "\u201cWhy ps Sucks\u201d or \u201cCounting Memory Consumption\u201d": [[133, "why-ps-sucks-or-counting-memory-consumption"]], "Process Stack Management": [[133, "process-stack-management"]], "Conclusion": [[133, "conclusion"], [133, "id1"], [854, "conclusion"], [862, "conclusion"]], "Thread (pthread) Stack Management": [[133, "thread-pthread-stack-management"]], "Experiment #1: 100 default threads, eating no stack": [[133, "experiment-1-100-default-threads-eating-no-stack"]], "Experiment #2: 100 default threads, eating up stack": [[133, "experiment-2-100-default-threads-eating-up-stack"]], "Experiment #3: 100 threads with limited stack": [[133, "experiment-3-100-threads-with-limited-stack"]], "Experiment #4: more threads than my system could take (eat no stack)": [[133, "experiment-4-more-threads-than-my-system-could-take-eat-no-stack"]], "Experiment #5: more threads than my system could take (eat stack)": [[133, "experiment-5-more-threads-than-my-system-could-take-eat-stack"]], "How does this work?": [[133, "how-does-this-work"]], "Realtime is different": [[133, "realtime-is-different"]], "Patching and Building the Fedora Kernel": [[134, "patching-and-building-the-fedora-kernel"]], "Why?": [[134, "why"], [870, "why"], [952, "why"]], "Find Kernel Source (Git), Fix It, and Create Patch": [[134, "find-kernel-source-git-fix-it-and-create-patch"]], "Link": [[134, null], [134, null]], "Prepare the RPM Build": [[134, "prepare-the-rpm-build"]], "Install Prerequisites": [[134, "install-prerequisites"]], "Setup rpmbuild Directory": [[134, "setup-rpmbuild-directory"]], "Download and Install Source RPM For Crashing Kernel": [[134, "download-and-install-source-rpm-for-crashing-kernel"]], "Apply the Patch": [[134, "apply-the-patch"]], "Build the Kernel RPMs": [[134, "build-the-kernel-rpms"]], "Install Kernel": [[134, "install-kernel"]], "Adding a Custom Domain to a Github Pages Project Site": [[135, "adding-a-custom-domain-to-a-github-pages-project-site"]], "Configure a Subdomain, www.faschingbauer.me": [[135, "configure-a-subdomain-www-faschingbauer-me"]], "Configure an Apex Domain, faschingbauer.me": [[135, "configure-an-apex-domain-faschingbauer-me"]], "Using Microsoft Teams on Linux": [[136, "using-microsoft-teams-on-linux"]], "Screen Sharing: X11 Revival": [[136, "screen-sharing-x11-revival"]], "RPM Package (Meh!)": [[136, "rpm-package-meh"]], "Updated on 2020-04-09": [[136, null]], "Annoyance #1: Keeps Running in Background": [[136, "annoyance-1-keeps-running-in-background"]], "Annoyance #2: (Re)Registers Itself For Autostart": [[136, "annoyance-2-re-registers-itself-for-autostart"]], "Run In Browser (My Recommendation)": [[136, "run-in-browser-my-recommendation"]], "Deploying Sphinx Generated Documentation to Github Pages": [[137, "deploying-sphinx-generated-documentation-to-github-pages"]], "Create \u201cSite Publication Repo\u201d": [[137, "create-site-publication-repo"]], "Configure Github Pages for jfasch-home-pages": [[137, "configure-github-pages-for-jfasch-home-pages"]], "Time for Deployment": [[137, "time-for-deployment"]], "Using BigBlueButton for Online Training": [[138, "using-bigbluebutton-for-online-training"]], "In this Article": [[138, null], [139, null], [141, null]], "TL;DR": [[138, "tl-dr"]], "Background Information": [[138, "background-information"]], "Hosting Setup": [[138, "hosting-setup"]], "BigBlueButton Installation": [[138, "bigbluebutton-installation"]], "Functionality Check": [[138, "functionality-check"]], "What Else?": [[138, "what-else"], [857, "what-else"], [870, "what-else"]], "Traunstein via Zierlersteig": [[139, "traunstein-via-zierlersteig"]], "Kaltenbachwildnis": [[139, "kaltenbachwildnis"]], "Anstieg auf den Zierlerberg": [[139, "anstieg-auf-den-zierlerberg"]], "Die Rinne": [[139, "die-rinne"]], "Abstieg": [[139, "abstieg"]], "Grintovec (via Plan\u0161arsko Jezero, \u010ce\u0161ka Ko\u010da)": [[140, "grintovec-via-plansarsko-jezero-ceska-koca"]], "Anreise": [[140, "anreise"]], "\u010ce\u0161ka Ko\u010da": [[140, "ceska-koca"]], "Hinauf": [[140, "hinauf"]], "Runter": [[140, "runter"]], "Zusammenfassung": [[140, "zusammenfassung"]], "How to Brick a \u20ac1399 Dell XPS 13": [[141, "how-to-brick-a-1399-dell-xps-13"]], "What Happened?": [[141, "what-happened"]], "VirtualBox, Fedora, and Secure Boot": [[141, "virtualbox-fedora-and-secure-boot"]], "Enrolling Machine Owner Key (MOK)": [[141, "enrolling-machine-owner-key-mok"]], "Generate Key Pair": [[141, "generate-key-pair"]], "Stage Key for Enrollment": [[141, "stage-key-for-enrollment"]], "Reboot, Brick": [[141, "reboot-brick"]], "Diagnostics": [[141, "diagnostics"]], "Building A Cross Toolchain For The Raspberry Pi, Using crosstool-ng": [[142, "building-a-cross-toolchain-for-the-raspberry-pi-using-crosstool-ng"], [944, "building-a-cross-toolchain-for-the-raspberry-pi-using-crosstool-ng"]], "Why This Article? Why Not Use A Prebuilt Toolchain?": [[142, "why-this-article-why-not-use-a-prebuilt-toolchain"]], "Installing crosstool-ng": [[142, "installing-crosstool-ng"]], "Prerequisites": [[142, "prerequisites"], [1010, "prerequisites"]], "Installing From Cloned Git Repository": [[142, "installing-from-cloned-git-repository"]], "Installing From Release Tarball": [[142, "installing-from-release-tarball"]], "PATH, And Basic Test": [[142, "path-and-basic-test"]], "Configure Toolchain Build": [[142, "configure-toolchain-build"]], "Base Configuration For The Raspberry": [[142, "base-configuration-for-the-raspberry"]], "Important: glibc Version": [[142, "important-glibc-version"]], "The Error": [[142, "the-error"], [142, "id4"]], "The Fix": [[142, "the-fix"], [142, "id5"]], "Important: GCC Version": [[142, "important-gcc-version"]], "Toolchain Build/Install": [[142, "toolchain-build-install"]], "Test": [[142, "test"], [737, "test"]], "Simplest: C, <stdio.h>": [[142, "simplest-c-stdio-h"]], "C++, <iostream>": [[142, "c-iostream"]], "C++, <thread>": [[142, "c-thread"]], "Packaging/Distributing The Toolchain": [[142, "packaging-distributing-the-toolchain"]], "Afterword": [[142, "afterword"]], "Posts": [[143, "posts"]], "Linux und Open Source": [[144, "linux-und-open-source"]], "Schulung": [[144, "schulung"]], "Entwicklung": [[144, "entwicklung"]], "Beratung": [[144, "beratung"]], "Richtlinien zur Ver\u00f6ffentlichung von Kursmaterial": [[145, "richtlinien-zur-veroffentlichung-von-kursmaterial"]], "Installing Git": [[146, "installing-git"]], "Windows": [[146, "windows"]], "Workflow": [[146, "workflow"]], "Cloning the Repository": [[146, "cloning-the-repository"]], "Exercise Time": [[146, "exercise-time"]], "Conflicts": [[146, "conflicts"]], "Trainer\u2019s Notes": [[146, "trainer-s-notes"]], "Courses: Overview": [[147, "courses-overview"]], "Online Trainings": [[147, null]], "Individual Trainings": [[147, null]], "Everything About Linux": [[147, "everything-about-linux"]], "Programming Languages": [[147, "programming-languages"]], "Miscellaneous but Related": [[147, "miscellaneous-but-related"]], "Qualivision, Z\u00fcrich, 1.10.2013": [[148, "qualivision-zurich-1-10-2013"]], "Fragen und Antworten": [[148, "fragen-und-antworten"]], "Kursnotizen: Linux Embedded 2015-11-30": [[149, "kursnotizen-linux-embedded-2015-11-30"]], "GPIOs in Userspace": [[149, "gpios-in-userspace"]], "CAN Bus": [[149, "can-bus"], [170, "can-bus"]], "Driver Beispiele": [[149, "driver-beispiele"]], "Heizungssteuerung": [[149, "heizungssteuerung"]], "Live Hacking": [[150, "Live-Hacking"], [566, "live-hacking"], [567, "live-hacking"], [569, "live-hacking"], [570, "live-hacking"], [573, "live-hacking"], [574, "live-hacking"], [575, "live-hacking"], [587, "live-hacking"]], "Strings k\u00f6nnen viel: split()": [[150, "Strings-k\u00f6nnen-viel:-split()"]], "Mutability, Immutability: kann man nicht oft genug wiederholen": [[150, "Mutability,-Immutability:-kann-man-nicht-oft-genug-wiederholen"]], "Dictionaries": [[150, "Dictionaries"], [179, "Dictionaries"], [251, "Dictionaries"], [265, "Dictionaries"], [296, "Dictionaries"], [1003, "dictionaries"]], "\u201cHartes\u201d Indizieren \u2026": [[150, "\u201cHartes\u201d-Indizieren-\u2026"]], "\u201cWeiches\u201d Nettfragen \u2026": [[150, "\u201cWeiches\u201d-Nettfragen-\u2026"]], "Shortcuts": [[150, "Shortcuts"]], "Objektorientierte Programmierung": [[150, "Objektorientierte-Programmierung"]], "Inheritance": [[150, "Inheritance"], [190, "Inheritance"], [971, "inheritance"]], "Date and Time and Time Deltas - datetime": [[150, "Date-and-Time-and-Time-Deltas---datetime"]], "Bissl potschert zum Schreiben is scho \u2026 (andere Formen von import)": [[150, "Bissl-potschert-zum-Schreiben-is-scho-\u2026-(andere-Formen-von-import)"]], "String Representations: __str__()": [[150, "String-Representations:-__str__()"]], "subprocess": [[150, "subprocess"], [229, "subprocess"]], "enumerate(), zip()": [[150, "enumerate(),-zip()"]], "List Comprehension": [[150, "List-Comprehension"], [174, "List-Comprehension"], [213, "List-Comprehension"], [957, "list-comprehension"], [1002, "list-comprehension"]], "exec(), eval()": [[150, "exec(),-eval()"]], "Umgebender Context": [[150, "Umgebender-Context"]], "Eigener Context": [[150, "Eigener-Context"]], "json": [[150, "json"], [226, "json"]], "Python Individualtraining (5 Tage, beginnend 28.10.2019)": [[151, "python-individualtraining-5-tage-beginnend-28-10-2019"], [319, "python-individualtraining-5-tage-beginnend-28-10-2019"]], "Inhalt": [[151, null], [154, null], [928, null], [1109, "inhalt"]], "Slide 51, \u201cExercises: Basics\u201d": [[151, "slide-51-exercises-basics"]], "Slide 58, \u201cExercises: While Loop\u201d": [[151, "slide-58-exercises-while-loop"]], "Slide 94, \u201cExercises: Lists, Loops, Functions\u201d": [[151, "slide-94-exercises-lists-loops-functions"]], "Slide 121, \u201cExercises: Strings\u201d": [[151, "slide-121-exercises-strings"]], "Famous Generator Introduction": [[151, "famous-generator-introduction"]], "eval(): Convert a String into a Python Data Structure": [[151, "eval-convert-a-string-into-a-python-data-structure"]], "Operator Overloading": [[151, "operator-overloading"], [209, "operator-overloading"], [219, "Operator-Overloading"], [240, "operator-overloading"], [504, "operator-overloading"], [530, "operator-overloading"], [544, "operator-overloading"], [974, "operator-overloading"]], "Getters and Setters": [[151, "getters-and-setters"]], "More on Listcomprehensions and Generator Expressions": [[151, "more-on-listcomprehensions-and-generator-expressions"]], "More on Local and Global Scope and Global Variables": [[151, "more-on-local-and-global-scope-and-global-variables"]], "Closures: Between Local and Global": [[151, "closures-between-local-and-global"]], "Project": [[151, "project"]], "Goals of this Training": [[152, "Goals-of-this-Training"]], "Exercise": [[152, "Exercise"], [193, "exercise"], [235, "exercise"], [235, "id1"], [236, "exercise"], [238, "exercise"], [247, "exercise"], [256, "exercise"], [282, "exercise"], [301, "exercise"], [307, "exercise"], [426, "exercise"], [427, "exercise"], [428, "exercise"], [430, "exercise"], [431, "exercise"], [434, "exercise"], [435, "exercise"], [620, "exercise"]], "Walkthrough: Reduce Image to Eight Colors": [[152, "Walkthrough:-Reduce-Image-to-Eight-Colors"]], "Load Image from File: PIL": [[152, "Load-Image-from-File:-PIL"]], "Image as NumPy Array": [[152, "Image-as-NumPy-Array"]], "Preparation before Clustering": [[152, "Preparation-before-Clustering"]], "Excursion: matplotlib": [[152, "Excursion:-matplotlib"]], "Now Comes the Clustering": [[152, "Now-Comes-the-Clustering"]], "Let KMeans find eight clusters \u2026": [[152, "Let-KMeans-find-eight-clusters-\u2026"]], "Use the result: output-properties": [[152, "Use-the-result:-output-properties"]], "Clusters be their Centers": [[152, "Clusters-be-their-Centers"]], "Post Processing: Restore Alpha, Back into RGBA": [[152, "Post-Processing:-Restore-Alpha,-Back-into-RGBA"]], "Random Live Hacking": [[153, "Random-Live-Hacking"]], "Data Types": [[153, "Data-Types"]], "Mutable, Immutable": [[153, "Mutable,-Immutable"]], "Exception, demonstrated using dict access": [[153, "Exception,-demonstrated-using-dict-access"]], "Indices and Slicing": [[153, "Indices-and-Slicing"]], "for loops": [[153, "for-loops"]], "Iterator protocol": [[153, "Iterator-protocol"], [216, "Iterator-protocol"]], "Python (12.11.2019 - 14.11.2019 in Graz)": [[154, "python-12-11-2019-14-11-2019-in-graz"]], "Material": [[154, null], [156, null], [300, null]], "Standardthemen": [[154, "standardthemen"]], "Das Hauptthema: Numerik, NumPy": [[154, "das-hauptthema-numerik-numpy"]], "Lesen von .mat Files": [[154, "lesen-von-mat-files"]], "L\u00f6sen einer Uni-\u00dcbung": [[154, "losen-einer-uni-ubung"]], "Proposal": [[155, "proposal"]], "Signals": [[155, "signals"]], "Posix IPC (and Virtual Memory)": [[155, "posix-ipc-and-virtual-memory"]], "Unix Domain Sockets": [[155, "unix-domain-sockets"]], "Application in your Company": [[155, "application-in-your-company"]], "Further Thoughts": [[155, "further-thoughts"]], "IPC in Linux (10.1.2020 in Graz)": [[156, "ipc-in-linux-10-1-2020-in-graz"]], "\u00dcbung: handgestrickter String, um die Fallen von C++ lustvoll zu erleiden": [[157, "ubung-handgestrickter-string-um-die-fallen-von-c-lustvoll-zu-erleiden"]], "C++ f\u00fcr Embedded C Programmierer (30.3.2020 - 3.4.2020 Baden W\u00fcrttemberg)": [[158, "c-fur-embedded-c-programmierer-30-3-2020-3-4-2020-baden-wurttemberg"]], "Kursinformation": [[158, null]], "Kursaufbau": [[158, "kursaufbau"]], "Kursverlauf": [[158, "kursverlauf"], [166, "kursverlauf"]], "Tag 3": [[158, "tag-3"], [177, "tag-3"], [188, "tag-3"], [210, "tag-3"], [222, "tag-3"]], "Tag 4": [[158, "tag-4"], [188, "tag-4"], [210, "tag-4"], [222, "tag-4"]], "Tag 5": [[158, "tag-5"]], "Installing googletest By Hand": [[159, "installing-googletest-by-hand"]], "Clone googletest Repo": [[159, "clone-googletest-repo"]], "Create Build Directory": [[159, "create-build-directory"], [160, "create-build-directory"], [478, "create-build-directory"]], "CMake, Build and Install": [[159, "cmake-build-and-install"]], "Build Packages to Use Our Private googletest Install": [[159, "build-packages-to-use-our-private-googletest-install"]], "Software Setup, Build": [[160, "software-setup-build"]], "Getting the Source": [[160, "getting-the-source"]], "Install Prerequisites and Dependencies": [[160, "install-prerequisites-and-dependencies"]], "Generate Makefile Build from CMake Sources": [[160, "generate-makefile-build-from-cmake-sources"]], "Argh: Using This Site With Visual Studio Code": [[161, "argh-using-this-site-with-visual-studio-code"]], "Flatpak": [[161, "flatpak"]], "Issues": [[161, "issues"]], "RPM From M$": [[161, "rpm-from-m"]], "Code": [[162, "code"], [165, "code"]], "Python Grundlagen (13.5.2020 - 14.5.2020 bei einer Firma in Graz)": [[163, "python-grundlagen-13-5-2020-14-5-2020-bei-einer-firma-in-graz"]], "Information": [[163, null], [166, null]], "Environment": [[163, "environment"], [789, "environment"]], "Unit Testing and Test Driven Development": [[163, "unit-testing-and-test-driven-development"]], "Python Installation": [[163, "python-installation"], [979, "python-installation"]], "Programming Environment": [[163, "programming-environment"], [247, "programming-environment"], [979, "programming-environment"]], "Day 1: Language Basics": [[163, "day-1-language-basics"]], "Day 2: Advanced Topics": [[163, "day-2-advanced-topics"]], "Wrap-Up": [[163, "wrap-up"]], "How Was It?": [[163, "how-was-it"]], "Python Schulung 18. und 19.5.2020": [[164, "Python-Schulung-18.-und-19.5.2020"]], "Das sys Modul": [[164, "Das-sys-Modul"]], "Multiline Strings und Docstrings": [[164, "Multiline-Strings-und-Docstrings"]], "Datentypen (Ausflug)": [[164, "Datentypen-(Ausflug)"]], "Variablen und deren Unterbau": [[164, "Variablen-und-deren-Unterbau"]], "Ausflug \u201cPythonic\u201d: Zuweisung mit Hilfe von \u201cTuple Unpacking\u201d": [[164, "Ausflug-\u201cPythonic\u201d:-Zuweisung-mit-Hilfe-von-\u201cTuple-Unpacking\u201d"]], "Mutability am Beispiel list": [[164, "Mutability-am-Beispiel-list"]], "Integers haben unendliche Breite": [[164, "Integers-haben-unendliche-Breite"]], "Division und Floor Division": [[164, "Division-und-Floor-Division"]], "Konvertierung durch Konstruktoren": [[164, "Konvertierung-durch-Konstruktoren"]], "Welchen Typ haben Typen?": [[164, "Welchen-Typ-haben-Typen?"]], "list und Mutability": [[164, "list-und-Mutability"]], "Tuple und Immutability": [[164, "Tuple-und-Immutability"]], "Besseres Laufzeitverhalten durch Geeignetere Datenstrukturen": [[164, "Besseres-Laufzeitverhalten-durch-Geeignetere-Datenstrukturen"]], "Boolean: Short Circuit Evaluation": [[164, "Boolean:-Short-Circuit-Evaluation"]], "while Loops, und warum sie nicht Pythonic sind": [[164, "while-Loops,-und-warum-sie-nicht-Pythonic-sind"]], "Mehr \u00fcber range(): Iterator Protocol (Folie 161)": [[164, "Mehr-\u00fcber-range():-Iterator-Protocol-(Folie-161)"]], "Mutability, Shallow und Deep Copy": [[164, "Mutability,-Shallow-und-Deep-Copy"]], "Shallow Copy mit dem Slice-Operator": [[164, "Shallow-Copy-mit-dem-Slice-Operator"]], "Deep Copy (copy.deepcopy())": [[164, "Deep-Copy-(copy.deepcopy())"]], "Funktionen": [[164, "Funktionen"]], "Funktionen sind \u201cFirst Class Objects\u201d": [[164, "Funktionen-sind-\u201cFirst-Class-Objects\u201d"]], "Gotcha: Mutable Default Parameters (Folie 90 ff.)": [[164, "Gotcha:-Mutable-Default-Parameters-(Folie-90-ff.)"]], "Globale und lokale Variablen (Folie 92)": [[164, "Globale-und-lokale-Variablen-(Folie-92)"]], "Exercise: uniq() (Folie 94, Punkt 2)": [[164, "Exercise:-uniq()-(Folie-94,-Punkt-2)"]], "Zusammengefasst: hier eine \u201csch\u00f6nere\u201d L\u00f6sung": [[164, "Zusammengefasst:-hier-eine-\u201csch\u00f6nere\u201d-L\u00f6sung"]], "Funktionen als Parameter": [[164, "Funktionen-als-Parameter"]], "List Comprensions (Folie 125)": [[164, "List-Comprensions-(Folie-125)"]], "Generator Expressions: Lesbarkeit und Performance": [[164, "Generator-Expressions:-Lesbarkeit-und-Performance"]], "Code Review": [[164, "Code-Review"]], "pprint() ist praktisch f\u00fcr Debug-Output": [[164, "pprint()-ist-praktisch-f\u00fcr-Debug-Output"]], "Straightforward Datentransformation": [[164, "Straightforward-Datentransformation"]], "Ausflug: More on Dictionaries (Folie 127ff.)": [[164, "Ausflug:-More-on-Dictionaries-(Folie-127ff.)"]], "Now for something completely different: collections.namedtuple": [[164, "Now-for-something-completely-different:-collections.namedtuple"]], "Mehr zur Parameter\u00fcbergabe: variabel lange Argumentlisten": [[164, "Mehr-zur-Parameter\u00fcbergabe:-variabel-lange-Argumentlisten"]], "OO: eine erste Klasse": [[164, "OO:-eine-erste-Klasse"]], "Python Individualtraining (18.5.2020 - 19.5.2020)": [[166, "python-individualtraining-18-5-2020-19-5-2020"], [319, "python-individualtraining-18-5-2020-19-5-2020"]], "Weiterf\u00fchrende Links": [[166, "weiterfuhrende-links"]], "Python Advanced (7.9.2020 - 10.9.2020)": [[167, "python-advanced-7-9-2020-10-9-2020"], [319, "python-advanced-7-9-2020-10-9-2020"]], "Preparation": [[167, "preparation"], [168, "preparation"], [170, "preparation"], [171, "preparation"], [172, "preparation"], [173, "preparation"], [546, "preparation"]], "Workspace Setup": [[167, "workspace-setup"], [168, "workspace-setup"], [170, "workspace-setup"], [172, "workspace-setup"]], "Github for Exercises": [[167, "github-for-exercises"], [168, "github-for-exercises"]], "Agenda": [[167, "agenda"], [168, "agenda"], [170, "agenda"], [171, "agenda"], [172, "agenda"], [173, "agenda"], [178, "agenda"], [182, "agenda"], [183, "agenda"], [220, "agenda"], [225, "agenda"], [237, "agenda"], [246, "agenda"], [267, "agenda"], [1114, "agenda"]], "Advanced Core Python Topics": [[167, "advanced-core-python-topics"]], "Special Topics": [[167, "special-topics"]], "Day 1": [[167, "day-1"], [168, "day-1"], [170, "day-1"], [171, "day-1"], [172, "day-1"], [182, "day-1"], [183, "day-1"], [192, "day-1"], [193, "day-1"], [198, "day-1"], [201, "day-1"], [204, "day-1"], [207, "day-1"], [214, "day-1"], [256, "day-1"], [257, "day-1"], [258, "day-1"], [264, "day-1"], [268, "day-1"], [270, "day-1"]], "Day 2": [[167, "day-2"], [168, "day-2"], [170, "day-2"], [171, "day-2"], [172, "day-2"], [182, "day-2"], [183, "day-2"], [192, "day-2"], [193, "day-2"], [198, "day-2"], [201, "day-2"], [203, "Day-2"], [204, "day-2"], [207, "day-2"], [214, "day-2"], [247, "day-2"], [256, "day-2"], [258, "day-2"], [264, "day-2"], [268, "day-2"]], "Day 3": [[167, "day-3"], [168, "day-3"], [170, "day-3"], [171, "day-3"], [172, "day-3"], [182, "day-3"], [183, "day-3"], [192, "day-3"], [193, "day-3"], [198, "day-3"], [203, "Day-3"], [204, "day-3"], [207, "day-3"], [214, "day-3"], [247, "day-3"], [250, "day-3"], [256, "day-3"], [258, "day-3"], [264, "day-3"], [268, "day-3"], [270, "day-3"]], "Day 4": [[167, "day-4"], [170, "day-4"], [182, "day-4"], [183, "day-4"], [192, "day-4"], [193, "day-4"], [247, "day-4"]], "Recommended Tutorials": [[167, "recommended-tutorials"]], "After Work Party": [[167, "after-work-party"], [198, "after-work-party"]], "Python Basics (28.9.2020 - 30.9.2020)": [[168, "python-basics-28-9-2020-30-9-2020"], [319, "python-basics-28-9-2020-30-9-2020"]], "Iterables": [[169, "Iterables"]], "set constructor": [[169, "set-constructor"]], "Fast vs.\u00a0Simple": [[169, "Fast-vs.\u00a0Simple"]], "for, Iterables, range and Generators": [[169, "for,-Iterables,-range-and-Generators"]], "Tuples, Tuple Unpacking, Returning Multiple Values from Functions": [[169, "Tuples,-Tuple-Unpacking,-Returning-Multiple-Values-from-Functions"]], "Object Oriented Programming": [[169, "Object-Oriented-Programming"], [219, "Object-Oriented-Programming"], [232, "Object-Oriented-Programming"], [243, "object-oriented-programming"], [257, "object-oriented-programming"], [259, "object-oriented-programming"], [260, "object-oriented-programming"], [263, "object-oriented-programming"], [264, "object-oriented-programming"], [269, "object-oriented-programming"], [278, "object-oriented-programming"], [279, "object-oriented-programming"], [408, "object-oriented-programming"], [970, "object-oriented-programming"], [275, "object-oriented-programming"]], "datetime": [[169, "datetime"], [196, "datetime"], [251, "datetime"]], "Python Basic and Advanced (19.10.2020 - 22.10.2020)": [[170, "python-basic-and-advanced-19-10-2020-22-10-2020"]], "Additional Topics, brought in by Thomas": [[170, "additional-topics-brought-in-by-thomas"]], "Notebook": [[170, "notebook"], [191, "notebook"], [206, "Notebook"], [301, "notebook"]], "Tutorials": [[170, "tutorials"], [198, "tutorials"]], "Linux on Raspberry Pi": [[171, "linux-on-raspberry-pi"]], "Cloud Machine": [[171, "cloud-machine"]], "Raspberry on Participant\u2019s Desks": [[171, "raspberry-on-participant-s-desks"]], "Basic security": [[171, "basic-security"]], "Interlude: SD Card Setup (No Bloody Disk Imager)": [[171, "interlude-sd-card-setup-no-bloody-disk-imager"]], "GPIO, using sysfs interface": [[171, "gpio-using-sysfs-interface"]], "In the Wild: Watchdog": [[171, "in-the-wild-watchdog"]], "TODO": [[171, "todo"], [288, "todo"], [289, "todo"], [290, "todo"], [1073, "todo"]], "Support Material": [[171, "support-material"]], "Python Basics (23.11.2020 - 25.11.2020)": [[172, "python-basics-23-11-2020-25-11-2020"], [319, "python-basics-23-11-2020-25-11-2020"]], "Exercise: JSON": [[172, "exercise-json"]], "Linux Basics (30.11.2020 - 3.12.2020)": [[173, "linux-basics-30-11-2020-3-12-2020"], [319, "linux-basics-30-11-2020-3-12-2020"]], "6 Grundlegende Sprachelemente": [[174, "6-Grundlegende-Sprachelemente"]], "6.1 Syntax und Semantik": [[174, "6.1-Syntax-und-Semantik"]], "Zur Syntax mit der Einr\u00fcckung \u2026": [[174, "Zur-Syntax-mit-der-Einr\u00fcckung-\u2026"]], "In Python k\u00f6nnen Variablen ihren Typ \u00e4ndern": [[174, "In-Python-k\u00f6nnen-Variablen-ihren-Typ-\u00e4ndern"]], "Kommentare": [[174, "Kommentare"]], "6.2 Grundlegende Elemente einer Sprache": [[174, "6.2-Grundlegende-Elemente-einer-Sprache"]], "6.3 Standarddatentypen (elementare Datentypen)": [[174, "6.3-Standarddatentypen-(elementare-Datentypen)"]], "Integers sind beliebig gro\u00df": [[174, "Integers-sind-beliebig-gro\u00df"]], "Vergleichsoperatoren": [[174, "Vergleichsoperatoren"]], "Operator Pr\u00e4zedenz: Punkt vor Strichrechnung": [[174, "Operator-Pr\u00e4zedenz:-Punkt-vor-Strichrechnung"]], "Floor Division": [[174, "Floor-Division"]], "Modulo Operator: %": [[174, "Modulo-Operator:-%"]], "(Un\u00e4rer) Negations Operator": [[174, "(Un\u00e4rer)-Negations-Operator"]], "Operator Pr\u00e4zedenz erzwingen": [[174, "Operator-Pr\u00e4zedenz-erzwingen"]], "Strings gibts auch (Zeichenketten)": [[174, "Strings-gibts-auch-(Zeichenketten)"]], "Raw Strings": [[174, "Raw-Strings"], [196, "Raw-Strings"], [213, "Raw-Strings"], [219, "Raw-Strings"], [241, "Raw-Strings"], [271, "Raw-Strings"], [999, "raw-strings"]], "f-Strings": [[174, "f-Strings"]], "Konvertierungen": [[174, "Konvertierungen"]], "Boolean": [[174, "Boolean"], [200, "Boolean"], [203, "Boolean"], [211, "Boolean"], [213, "Boolean"], [223, "Boolean"], [226, "Boolean"], [988, "boolean"]], "Pr\u00e4zendenzregeln: and vor or": [[174, "Pr\u00e4zendenzregeln:-and-vor-or"]], "6.4 Literale f\u00fcr primitive Datentypen": [[174, "6.4-Literale-f\u00fcr-primitive-Datentypen"]], "6.5 Variablen und Konstanten": [[174, "6.5-Variablen-und-Konstanten"]], "6.6 Operatoren": [[174, "6.6-Operatoren"]], "6.7 Ausdr\u00fccke und Operatorrangfolgen": [[174, "6.7-Ausdr\u00fccke-und-Operatorrangfolgen"]], "6.8 \u00dcbungen": [[174, "6.8-\u00dcbungen"]], "Zwei Variablen vertauschen": [[174, "Zwei-Variablen-vertauschen"]], "Zwei Variablen vertauschen mit Tuple Unpacking": [[174, "Zwei-Variablen-vertauschen-mit-Tuple-Unpacking"]], "\u00dcbung 1, 5.": [[174, "\u00dcbung-1,-5."]], "7 Kontrollstrukturen": [[174, "7-Kontrollstrukturen"]], "7.1 Anweisungen und Folgen": [[174, "7.1-Anweisungen-und-Folgen"]], "7.2 Bedingungen und Kontrollstrukturen": [[174, "7.2-Bedingungen-und-Kontrollstrukturen"]], "7.3 Grundlagen zu Verzweigungen": [[174, "7.3-Grundlagen-zu-Verzweigungen"]], "7.4 Bedingte Anweisung": [[174, "7.4-Bedingte-Anweisung"]], "7.5 Verzweigung": [[174, "7.5-Verzweigung"]], "7.6 Geschachtelte Verzweigung": [[174, "7.6-Geschachtelte-Verzweigung"]], "7.7 Mehrfache Verzweigung (Fallauswahl)": [[174, "7.7-Mehrfache-Verzweigung-(Fallauswahl)"]], "7.8 Schleifen": [[174, "7.8-Schleifen"]], "7.9 Z\u00e4hlergesteuerte Schleifen (Iteration)": [[174, "7.9-Z\u00e4hlergesteuerte-Schleifen-(Iteration)"]], "7.10 Kopfgesteuerte bedingte Schleife": [[174, "7.10-Kopfgesteuerte-bedingte-Schleife"]], "7.11 Fu\u00dfgesteuerte bedingte Schleife": [[174, "7.11-Fu\u00dfgesteuerte-bedingte-Schleife"]], "(jf) break und continue": [[174, "(jf)-break-und-continue"]], "(jf) Sequential Datatypes": [[174, "(jf)-Sequential-Datatypes"]], "(jf) for Loops": [[174, "(jf)-for-Loops"]], "Iteration mit Dictionaries": [[174, "Iteration-mit-Dictionaries"]], "(jf) The range() Function": [[174, "(jf)-The-range()-Function"]], "7.12 Schnell\u00fcbersicht": [[174, "7.12-Schnell\u00fcbersicht"]], "7.13 Sprunganweisungen": [[174, "7.13-Sprunganweisungen"]], "7.14 Endlosschleifen": [[174, "7.14-Endlosschleifen"]], "7.15 \u00dcbungen": [[174, "7.15-\u00dcbungen"]], "8 Elementare Datenstrukturen": [[174, "8-Elementare-Datenstrukturen"]], "8.1 Warum werden Datenstrukturen ben\u00f6tigt?": [[174, "8.1-Warum-werden-Datenstrukturen-ben\u00f6tigt?"]], "(jf) Compound Datatypes": [[174, "(jf)-Compound-Datatypes"]], "(jf) References, (Im)mutability": [[174, "(jf)-References,-(Im)mutability"]], "(jf) Laufzeitverhalten bei der Suche (der in Operator)": [[174, "(jf)-Laufzeitverhalten-bei-der-Suche-(der-in-Operator)"]], "Liste": [[174, "Liste"]], "Set": [[174, "Set"], [195, "Set"], [196, "Set"], [200, "Set"], [200, "id1"], [203, "Set"], [206, "Set"], [206, "id1"], [213, "Set"], [226, "Set"], [229, "Set"], [241, "Set"], [244, "Set"], [244, "id5"], [251, "Set"], [261, "Set"], [265, "Set"]], "8.2 Arrays": [[174, "8.2-Arrays"]], "8.3 Eindimensionale Arrays": [[174, "8.3-Eindimensionale-Arrays"]], "8.4 Records": [[174, "8.4-Records"]], "8.5 Zeichenketten": [[174, "8.5-Zeichenketten"]], "8.6 Tupel und Listen": [[174, "8.6-Tupel-und-Listen"]], "sorted, reversed": [[174, "sorted,-reversed"]], "8.7 Dictionaries": [[174, "8.7-Dictionaries"]], "(jf) Records in Python": [[174, "(jf)-Records-in-Python"]], "8.8 Mengen": [[174, "8.8-Mengen"]], "8.9 Besondere Datenstrukturen anhand von Stapel (Stack) und Schlangen (Queue)": [[174, "8.9-Besondere-Datenstrukturen-anhand-von-Stapel-(Stack)-und-Schlangen-(Queue)"]], "8.10 \u00dcbungen": [[174, "8.10-\u00dcbungen"]], "\u00dcbung 1": [[174, "\u00dcbung-1"]], "Versuch 1: in und index()": [[174, "Versuch-1:-in-und-index()"]], "Versuch 2: Zur\u00fcck zu while \u2026": [[174, "Versuch-2:-Zur\u00fcck-zu-while-\u2026"]], "Versuch 3: hybrid potschert mit for": [[174, "Versuch-3:-hybrid-potschert-mit-for"]], "Versuch 4: supergscheit mit for und enumerate()": [[174, "Versuch-4:-supergscheit-mit-for-und-enumerate()"]], "9 Methoden, Prozeduren und Funktionen": [[174, "9-Methoden,-Prozeduren-und-Funktionen"]], "Funktionspointer (so heissts in C): Funktionsobjekte (Python)": [[174, "Funktionspointer-(so-heissts-in-C):-Funktionsobjekte-(Python)"]], "(jf) Primzahlenbeispiel mit Funktion": [[174, "(jf)-Primzahlenbeispiel-mit-Funktion"]], "(jf) Local vs.\u00a0Global Scope": [[174, "(jf)-Local-vs.\u00a0Global-Scope"]], "Laufzeitfehler: Variable existiert nicht": [[174, "Laufzeitfehler:-Variable-existiert-nicht"]], "Lokale Variable": [[174, "Lokale-Variable"]], "Globale Variable (lesen)": [[174, "Globale-Variable-(lesen)"]], "Globale Variable (schreiben/zuweisen)": [[174, "Globale-Variable-(schreiben/zuweisen)"]], "Fehlerfall von Peter": [[174, "Fehlerfall-von-Peter"]], "9.1 Unterprogramme": [[174, "9.1-Unterprogramme"]], "9.2 Parameter\u00fcbergabe": [[174, "9.2-Parameter\u00fcbergabe"]], "9.3 Parameter\u00fcbergabe als Wert": [[174, "9.3-Parameter\u00fcbergabe-als-Wert"]], "9.4 Parameter\u00fcbergabe \u00fcber Referenzen": [[174, "9.4-Parameter\u00fcbergabe-\u00fcber-Referenzen"]], "9.5 R\u00fcckgabewerte von Funktionen oder Methoden": [[174, "9.5-R\u00fcckgabewerte-von-Funktionen-oder-Methoden"]], "9.6 Innere Funktionen - Closures": [[174, "9.6-Innere-Funktionen---Closures"]], "9.7 Standardbibliotheken und Built-in-Funktionalit\u00e4ten": [[174, "9.7-Standardbibliotheken-und-Built-in-Funktionalit\u00e4ten"]], "9.8 \u00dcbungen": [[174, "9.8-\u00dcbungen"]], "Programmierung Grundlagen (13. und 14.1.2021)": [[175, "programmierung-grundlagen-13-und-14-1-2021"]], "Struktur": [[175, "struktur"]], "Herdt Kapitel 6: Grundlegende Sprachelemente": [[175, "herdt-kapitel-6-grundlegende-sprachelemente"], [1122, "herdt-kapitel-6-grundlegende-sprachelemente"]], "Herdt Kapitel 7: Kontrollstrukturen": [[175, "herdt-kapitel-7-kontrollstrukturen"], [1122, "herdt-kapitel-7-kontrollstrukturen"]], "Verzweigung": [[175, "verzweigung"], [1122, "verzweigung"]], "Schleifen": [[175, "schleifen"], [1122, "schleifen"]], "Herdt Kapitel 8: Elementare Datenstrukturen": [[175, "herdt-kapitel-8-elementare-datenstrukturen"], [1122, "herdt-kapitel-8-elementare-datenstrukturen"]], "Herdt Kapitel 9: Methoden, Prozeduren und Funktionen": [[175, "herdt-kapitel-9-methoden-prozeduren-und-funktionen"], [1122, "herdt-kapitel-9-methoden-prozeduren-und-funktionen"]], "Python Basics (22.2.2021 - 24.2.2021)": [[177, "python-basics-22-2-2021-24-2-2021"], [319, "python-basics-22-2-2021-24-2-2021"]], "Links (ToDo)": [[177, "links-todo"]], "Linux Kernel Driver Development Basics (14.12.2020)": [[178, "linux-kernel-driver-development-basics-14-12-2020"]], "Books": [[178, "books"], [228, "books"], [270, "books"], [1055, "books"]], "Python Advanced": [[179, "Python-Advanced"]], "Data Types Recap": [[179, "Data-Types-Recap"]], "Sequential Datatypes": [[179, "Sequential-Datatypes"], [211, "Sequential-Datatypes"], [223, "Sequential-Datatypes"], [991, "sequential-datatypes"], [991, "id1"]], "Slicing etc.": [[179, "Slicing-etc."]], "Mapping Types (Dictionary, und mehr)": [[179, "Mapping-Types-(Dictionary,-und-mehr)"]], "Sets": [[179, "Sets"], [179, "id1"], [187, "Sets"], [1004, "sets"]], "for Schleife, ganz kurz": [[179, "for-Schleife,-ganz-kurz"]], "Tuple": [[179, "Tuple"], [203, "Tuple"], [206, "Tuple"], [213, "Tuple"], [226, "Tuple"], [229, "Tuple"], [241, "Tuple"]], "Funktionen mit mehreren Returnwerten (bzw. Tuple Unpacking)": [[179, "Funktionen-mit-mehreren-Returnwerten-(bzw.-Tuple-Unpacking)"]], "Iteration \u00fcber Containerdatentypen": [[179, "Iteration-\u00fcber-Containerdatentypen"]], "Listen": [[179, "Listen"], [213, "Listen"], [296, "Listen"]], "Was heisst \u201cUntypisiert\u201d?": [[179, "Was-heisst-\u201cUntypisiert\u201d?"]], "Wir l\u00f6schen den Integer": [[179, "Wir-l\u00f6schen-den-Integer"]], "Iterator Protocol, for Loops": [[179, "Iterator-Protocol,-for-Loops"]], "Iterable: Der Begriff": [[179, "Iterable:-Der-Begriff"]], "Zufall": [[179, "Zufall"]], "Regular Expressions": [[179, "Regular-Expressions"], [232, "Regular-Expressions"], [244, "Regular-Expressions"], [846, "regular-expressions"]], "enumerate()": [[179, "enumerate()"], [187, "enumerate()"], [190, "enumerate()"], [226, "enumerate()"], [244, "enumerate()"], [261, "enumerate()"]], "JSON": [[179, "JSON"], [196, "JSON"], [206, "JSON"], [232, "JSON"], [241, "JSON"]], "2021-03-15": [[180, "id1"]], "Exercises (auf Github)": [[180, "exercises-auf-github"]], "Jupyter Notebook": [[180, "jupyter-notebook"], [182, "jupyter-notebook"], [199, "jupyter-notebook"], [201, "jupyter-notebook"], [204, "jupyter-notebook"], [210, "jupyter-notebook"], [215, "jupyter-notebook"], [218, "jupyter-notebook"], [221, "jupyter-notebook"], [296, "Jupyter-Notebook"], [1061, "jupyter-notebook"]], "Download": [[180, null], [182, null]], "Hallo Jupyter Notebook": [[181, "Hallo-Jupyter-Notebook"]], "Syntax": [[181, "Syntax"], [251, "Syntax"], [296, "Syntax"], [296, "id1"]], "Raw strings": [[181, "Raw-strings"]], "Variablen": [[181, "Variablen"], [213, "Variablen"]], "Tuple Unpacking": [[181, "Tuple-Unpacking"], [223, "Tuple-Unpacking"], [241, "Tuple-Unpacking"], [251, "Tuple-Unpacking"], [295, "Tuple-Unpacking"], [296, "Tuple-Unpacking"], [296, "id2"]], "Speicher, Memory Management": [[181, "Speicher,-Memory-Management"]], "Mutable vs.\u00a0Immutable": [[181, "Mutable-vs.\u00a0Immutable"], [232, "Mutable-vs.\u00a0Immutable"]], "Wie sch\u00fctze ich mich davor?": [[181, "Wie-sch\u00fctze-ich-mich-davor?"]], "Aber!!!!": [[181, "Aber!!!!"]], "Dictionary": [[181, "Dictionary"], [187, "Dictionary"], [195, "Dictionary"], [196, "Dictionary"], [200, "Dictionary"], [200, "id2"], [203, "Dictionary"], [206, "Dictionary"], [206, "id2"], [213, "Dictionary"], [226, "Dictionary"], [229, "Dictionary"], [241, "Dictionary"], [244, "Dictionary"], [244, "id4"], [251, "Dictionary"], [261, "Dictionary"], [265, "Dictionary"], [271, "Dictionary"]], "Exercise: Liste von gemischten Datentypen": [[181, "Exercise:-Liste-von-gemischten-Datentypen"]], "Konstruktoren": [[181, "Konstruktoren"]], "Tag 2: Wiederholung, Fragen": [[181, "Tag-2:-Wiederholung,-Fragen"]], "for und range()": [[181, "for-und-range()"]], "Objektidentit\u00e4t": [[181, "Objektidentit\u00e4t"]], "Das with Statement": [[181, "Das-with-Statement"], [190, "Das-with-Statement"]], "Tuple Unpacking, Dictionary Iteration": [[181, "Tuple-Unpacking,-Dictionary-Iteration"]], "String Operationen": [[181, "String-Operationen"]], "enumerate(), und verlorene Indices": [[181, "enumerate(),-und-verlorene-Indices"]], "NumPy, matplotlib": [[181, "NumPy,-matplotlib"]], "Interpolation mittels scipy": [[181, "Interpolation-mittels-scipy"]], "Python Basic and Advanced (22.3.2021 - 25.3.2021)": [[182, "python-basic-and-advanced-22-3-2021-25-3-2021"]], "(Tutorial) Videos": [[182, "tutorial-videos"]], "Linux Basics, Shell Scripting (2021-03-29)": [[183, "linux-basics-shell-scripting-2021-03-29"]], "Course Details": [[183, null]], "Course Preparation": [[183, "course-preparation"], [236, "course-preparation"], [238, "course-preparation"], [246, "course-preparation"]], "SSH": [[183, "ssh"], [306, "ssh"]], "Linux and/or Shell on Windows Host": [[183, "linux-and-or-shell-on-windows-host"]], "Editor Support for Shell Scripting": [[183, "editor-support-for-shell-scripting"]], "Programmierung Grundlagen (12. und 13.4.2021)": [[185, "programmierung-grundlagen-12-und-13-4-2021"]], "Syntax etc.": [[187, "Syntax-etc."], [219, "Syntax-etc."], [265, "Syntax-etc."], [983, "syntax-etc"]], "Comments vs.\u00a0Documentation": [[187, "Comments-vs.\u00a0Documentation"]], "Variables": [[187, "Variables"], [200, "Variables"], [203, "Variables"], [219, "Variables"], [229, "Variables"], [261, "Variables"], [265, "Variables"], [296, "Variables"], [985, "variables"]], "Assignment Fun": [[187, "Assignment-Fun"], [226, "Assignment-Fun"], [985, "assignment-fun"]], "Assignment Details": [[187, "Assignment-Details"], [219, "Assignment-Details"], [226, "Assignment-Details"], [296, "Assignment-Details"], [985, "assignment-details"]], "Operators": [[187, "Operators"], [223, "Operators"]], "Integer Arithmetic": [[187, "Integer-Arithmetic"]], "String Methods": [[187, "String-Methods"], [295, "String-Methods"]], "Datatype Conversions": [[187, "Datatype-Conversions"], [211, "Datatype-Conversions"], [213, "Datatype-Conversions"], [219, "Datatype-Conversions"], [223, "Datatype-Conversions"], [226, "Datatype-Conversions"], [244, "Datatype-Conversions"], [261, "Datatype-Conversions"], [265, "Datatype-Conversions"], [271, "Datatype-Conversions"], [296, "Datatype-Conversions"], [986, "datatype-conversions"]], "Strings k\u00f6nnen alles!": [[187, "Strings-k\u00f6nnen-alles!"]], "Complex Datatypes": [[187, "Complex-Datatypes"], [296, "Complex-Datatypes"]], "List (mutable)": [[187, "List-(mutable)"], [200, "List-(mutable)"]], "extend()? Iterable?": [[187, "extend()?-Iterable?"]], "Tuple (wie Liste, nur immutable)": [[187, "Tuple-(wie-Liste,-nur-immutable)"]], "in Operator": [[187, "in-Operator"], [226, "in-Operator"]], "Iteration \u00fcber Daten: mittels for": [[187, "Iteration-\u00fcber-Daten:-mittels-for"]], "enumerate(), sum(), map(), und so weiter": [[187, "enumerate(),-sum(),-map(),-und-so-weiter"]], "sum()": [[187, "sum()"]], "map()": [[187, "map()"], [190, "map()"]], "list() function": [[187, "list()-function"]], "Performance: in Operator, und list und set": [[187, "Performance:-in-Operator,-und-list-und-set"]], "Dynamische Evaluierung: eval()": [[187, "Dynamische-Evaluierung:-eval()"]], "Python Grundlagen (2021-05-03 - 2021-05-05)": [[188, "python-grundlagen-2021-05-03-2021-05-05"], [319, "python-grundlagen-2021-05-03-2021-05-05"]], "Weiterf\u00fchrende Information": [[188, "weiterfuhrende-information"]], "Visual Studio Code": [[188, "visual-studio-code"], [204, "visual-studio-code"], [1055, "visual-studio-code"]], "Python Beginner Tutorials": [[188, "python-beginner-tutorials"], [228, "python-beginner-tutorials"], [1055, "python-beginner-tutorials"]], "NumPy and Data Science Tutorials": [[188, "numpy-and-data-science-tutorials"], [228, "numpy-and-data-science-tutorials"], [231, "numpy-and-data-science-tutorials"], [264, "numpy-and-data-science-tutorials"], [1055, "numpy-and-data-science-tutorials"]], "PyPI (Installing Modules that don\u2019t come as Batteries)": [[188, "pypi-installing-modules-that-don-t-come-as-batteries"], [1055, "pypi-installing-modules-that-don-t-come-as-batteries"]], "Git, and Github": [[188, "git-and-github"], [1055, "git-and-github"]], "Conference Talks": [[188, "conference-talks"], [264, "conference-talks"], [1055, "conference-talks"]], "Python Grundlagen (Jupyter Notebook)": [[189, "python-grundlagen-jupyter-notebook"], [202, "python-grundlagen-jupyter-notebook"], [205, "python-grundlagen-jupyter-notebook"], [208, "python-grundlagen-jupyter-notebook"], [227, "python-grundlagen-jupyter-notebook"], [230, "python-grundlagen-jupyter-notebook"], [233, "python-grundlagen-jupyter-notebook"], [242, "python-grundlagen-jupyter-notebook"], [245, "python-grundlagen-jupyter-notebook"], [266, "python-grundlagen-jupyter-notebook"]], "import zipfile": [[190, "import-zipfile"]], "Read Contents \u2026": [[190, "Read-Contents-\u2026"]], "Extract One Member": [[190, "Extract-One-Member"]], "All in One, Using with": [[190, "All-in-One,-Using-with"]], "Functionality: Methods": [[190, "Functionality:-Methods"]], "Class Attributes vs.\u00a0Instance Attributes (not Variables)": [[190, "Class-Attributes-vs.\u00a0Instance-Attributes-(not-Variables)"]], "Instance Attributes": [[190, "Instance-Attributes"]], "Class Attributes": [[190, "Class-Attributes"]], "Public, Protected, Private": [[190, "Public,-Protected,-Private"]], "Properties": [[190, "Properties"], [219, "Properties"], [423, "properties"], [975, "properties"]], "Functions, Positional and Keyword Arguments": [[190, "Functions,-Positional-and-Keyword-Arguments"]], "Positional Arguments": [[190, "Positional-Arguments"]], "Keyword Arguments": [[190, "Keyword-Arguments"], [211, "Keyword-Arguments"], [297, "Keyword-Arguments"], [997, "keyword-arguments"]], "Mixing Positional and Keyword Arguments": [[190, "Mixing-Positional-and-Keyword-Arguments"]], "The range() Function": [[190, "The-range()-Function"], [196, "The-range()-Function"], [203, "The-range()-Function"]], "Functional Programming, Iteration, yield, map(), filter(), \u2026": [[190, "Functional-Programming,-Iteration,-yield,-map(),-filter(),-\u2026"]], "Iterable": [[190, "Iterable"], [206, "Iterable"]], "list(), and iterable?": [[190, "list(),-and-iterable?"]], "Tuple Unpacking and the Rest": [[190, "Tuple-Unpacking-and-the-Rest"]], "Decorators, etc.": [[190, "Decorators,-etc."]], "NoneType and None": [[190, "NoneType-and-None"]], "File I/O": [[190, "File-I/O"], [219, "File-I/O"], [226, "File-I/O"], [229, "File-I/O"], [261, "File-I/O"], [265, "File-I/O"], [293, "File-I/O"], [892, "file-i-o"], [1005, "file-i-o"]], "Iteration, yield, Recursion": [[190, "Iteration,-yield,-Recursion"]], "Recursion": [[190, "Recursion"]], "Iteratively Calculating Fibonacci Numbers -> yield": [[190, "Iteratively-Calculating-Fibonacci-Numbers-->-yield"]], "map(), filter(), zip(), enumerate() \u2026": [[190, "map(),-filter(),-zip(),-enumerate()-\u2026"]], "map(), and several other ways to do the same": [[190, "map(),-and-several-other-ways-to-do-the-same"]], "zip()": [[190, "zip()"]], "filter(), and several other methods to do the same": [[190, "filter(),-and-several-other-methods-to-do-the-same"]], "OSError, errno": [[190, "OSError,-errno"]], "The platform Module, sys.path": [[190, "The-platform-Module,-sys.path"]], "os.path": [[190, "os.path"], [206, "os.path"], [213, "os.path"]], "Exceptions und so (assert())": [[190, "Exceptions-und-so-(assert())"]], "AssertionError": [[190, "AssertionError"]], "Random Questions": [[190, "Random-Questions"]], "Slicing": [[190, "Slicing"], [213, "Slicing"], [219, "Slicing"], [244, "Slicing"], [265, "Slicing"], [1079, "slicing"]], "OO": [[190, "OO"], [258, "oo"], [310, "oo"], [504, "oo"]], "String Formatting": [[190, "String-Formatting"], [196, "String-Formatting"], [1000, "string-formatting"]], "import datetime": [[190, "import-datetime"]], "Python Advanced (2021-05-25 - 2021-05-27)": [[191, "python-advanced-2021-05-25-2021-05-27"]], "Predefined streams": [[191, "predefined-streams"]], "PCAP Exam Syllabus": [[191, "pcap-exam-syllabus"], [204, "pcap-exam-syllabus"]], "2021-06-09": [[191, "id1"]], "Programmieren mit C (2021-06-14 - 2021-06-18)": [[192, "programmieren-mit-c-2021-06-14-2021-06-18"], [319, "programmieren-mit-c-2021-06-14-2021-06-18"]], "Preparation: Tools": [[192, "preparation-tools"]], "State machine": [[192, "state-machine"]], "Regular Course Topics": [[192, "regular-course-topics"]], "Development Tools (Git & CMake) Installation Massacre": [[192, "development-tools-git-cmake-installation-massacre"]], "Regular Course Material": [[192, "regular-course-material"], [192, "id1"]], "Group Project Kick-Off :-)": [[192, "group-project-kick-off"]], "Exercise: Encapsulate Index Access to userdb": [[192, "exercise-encapsulate-index-access-to-userdb"]], "Group Project (Use Case Driven Course Flow :-) )": [[192, "group-project-use-case-driven-course-flow"]], "Day 5": [[192, "day-5"], [193, "day-5"], [247, "day-5"]], "Pointer Recap": [[192, "pointer-recap"]], "On With Group Project": [[192, "on-with-group-project"]], "C++ Basics": [[192, "c-basics"]], "Pointers, Pointer Arithmetic, and the Standard Template Library (STL)": [[192, "pointers-pointer-arithmetic-and-the-standard-template-library-stl"]], "The C++ Programming Language (2021-07-12 - 2021-07-16)": [[193, "the-c-programming-language-2021-07-12-2021-07-16"]], "Setup for the new kids": [[193, "setup-for-the-new-kids"]], "Recapitulate some C": [[193, "recapitulate-some-c"]], "Group project review": [[193, "group-project-review"]], "Jump into C++": [[193, "jump-into-c"]], "Regular Topics": [[193, "regular-topics"], [193, "id2"], [193, "id4"]], "Toolchain: C/C++ Build (How Complicated Can Things Be?)": [[193, "toolchain-c-c-build-how-complicated-can-things-be"]], "Exercises: Using the C++ Toolbox": [[193, "exercises-using-the-c-toolbox"]], "Finish First \u201cUser Database\u201d Functionality": [[193, "finish-first-user-database-functionality"]], "Unit Testing": [[193, "unit-testing"], [250, "unit-testing"], [253, "unit-testing"], [309, "unit-testing"]], "GTest Installation": [[193, "gtest-installation"]], "Git Workflows": [[193, "git-workflows"]], "Day X": [[193, "day-x"]], "Smart Pointers, Recap": [[193, "smart-pointers-recap"]], "std::map": [[193, "std-map"], [582, "std-map"]], "OO, and Polymorphism": [[193, "oo-and-polymorphism"]], "Programmierung Grundlagen, anhand von Python (2. und 3.8.2021)": [[194, "programmierung-grundlagen-anhand-von-python-2-und-3-8-2021"], [319, "programmierung-grundlagen-anhand-von-python-2-und-3-8-2021"]], "Variablen und Datentypen": [[194, "variablen-und-datentypen"], [210, "variablen-und-datentypen"], [222, "variablen-und-datentypen"]], "Kontrollstrukturen": [[194, "kontrollstrukturen"], [210, "kontrollstrukturen"], [211, "Kontrollstrukturen"], [222, "kontrollstrukturen"]], "Datenstrukturen": [[195, "Datenstrukturen"]], "List": [[195, "List"], [196, "List"], [203, "List"], [206, "List"], [226, "List"], [229, "List"], [241, "List"], [244, "List"], [271, "List"], [1087, "list"]], "Iteration": [[195, "Iteration"], [195, "id1"], [196, "Iteration"], [196, "id1"], [206, "Iteration"], [229, "Iteration"], [241, "Iteration"]], "User Datenbank: Showcase Full Stack Development": [[195, "User-Datenbank:-Showcase-Full-Stack-Development"]], "5: Response kommt von der DB": [[195, "5:-Response-kommt-von-der-DB"]], "6: Aufgabe: Formulieren eines JSON Strings, damit man diese Daten \u00fcber die HTTP Verbindung zum Client/Browser schicken kann.": [[195, "6:-Aufgabe:-Formulieren-eines-JSON-Strings,-damit-man-diese-Daten-\u00fcber-die-HTTP-Verbindung-zum-Client/Browser-schicken-kann."]], "7. Jetzt schickman weg: vom Server (PHP) zum Browser (JS)": [[195, "7.-Jetzt-schickman-weg:-vom-Server-(PHP)-zum-Browser-(JS)"]], "8. in JS JSON string empfangen": [[195, "8.-in-JS-JSON-string-empfangen"]], "9. Nun muessen wir den JSON-String in JS verwandlen": [[195, "9.-Nun-muessen-wir-den-JSON-String-in-JS-verwandlen"]], "Iterable?": [[196, "Iterable?"]], "List Comprehension, Generator Expression": [[196, "List-Comprehension,-Generator-Expression"]], "Literals": [[196, "Literals"], [448, "literals"]], "Quoting?": [[196, "Quoting?"], [200, "Quoting?"]], "Multiline Strings": [[196, "Multiline-Strings"], [200, "Multiline-Strings"], [999, "multiline-strings"]], "Functionality": [[196, "Functionality"], [781, "functionality"]], "strip() and friends": [[196, "strip()-and-friends"]], "f-Strings (since Python 3.6)": [[196, "f-Strings-(since-Python-3.6)"]], "Parsing date formats": [[196, "Parsing-date-formats"]], "Read a Cleaned-Up SAP Export": [[197, "read-a-cleaned-up-sap-export"]], "Requirement": [[197, "requirement"], [447, "requirement"], [469, "requirement"], [470, "requirement"], [471, "requirement"], [472, "requirement"], [476, "requirement"], [479, "requirement"], [483, "requirement"], [484, "requirement"], [485, "requirement"], [884, "requirement"], [891, "requirement"], [1011, "requirement"], [1012, "requirement"], [1033, "requirement"], [1044, "requirement"], [1045, "requirement"], [1046, "requirement"], [1047, "requirement"], [1049, "requirement"], [1050, "requirement"], [1051, "requirement"], [1052, "requirement"]], "Solution": [[197, "solution"], [426, "solution"], [428, "solution"], [431, "solution"], [1095, "solution"]], "Python Grundlagen (2021-08-23 - 2021-08-25)": [[198, "python-grundlagen-2021-08-23-2021-08-25"]], "Initial Terminology": [[200, "Initial-Terminology"]], "Sequence": [[200, "Sequence"]], "Tuple (immutable)": [[200, "Tuple-(immutable)"]], "References, (Im)mutability": [[200, "References,-(Im)mutability"], [213, "References,-(Im)mutability"], [226, "References,-(Im)mutability"], [229, "References,-(Im)mutability"], [244, "References,-(Im)mutability"], [251, "References,-(Im)mutability"], [265, "References,-(Im)mutability"], [271, "References,-(Im)mutability"], [271, "id1"], [995, "references-im-mutability"]], "Iteration, for, and range()": [[200, "Iteration,-for,-and-range()"]], "Iterator Protocol (not so important for beginners)": [[200, "Iterator-Protocol-(not-so-important-for-beginners)"]], "Iteration, and Compound Datatypes": [[200, "Iteration,-and-Compound-Datatypes"]], "List and Tuple": [[200, "List-and-Tuple"]], "matplotlib": [[200, "matplotlib"], [232, "matplotlib"]], "File I/O, and Strings": [[200, "File-I/O,-and-Strings"]], "Raw strings: Windows path names": [[200, "Raw-strings:-Windows-path-names"]], "Miscellaneous String Methods": [[200, "Miscellaneous-String-Methods"], [211, "Miscellaneous-String-Methods"], [213, "Miscellaneous-String-Methods"], [219, "Miscellaneous-String-Methods"], [229, "Miscellaneous-String-Methods"], [244, "Miscellaneous-String-Methods"], [265, "Miscellaneous-String-Methods"], [271, "Miscellaneous-String-Methods"], [1001, "miscellaneous-string-methods"]], "Python Basics (2021-08-31 - 2021-09-01)": [[201, "python-basics-2021-08-31-2021-09-01"], [319, "python-basics-2021-08-31-2021-09-01"]], "Numerics, and AI": [[201, "numerics-and-ai"]], "Mountains near Graz": [[201, "mountains-near-graz"]], "2021-11-17": [[203, "2021-11-17"]], "Enter Tuples": [[203, "Enter-Tuples"]], "Datatype Conversions, Type Names": [[203, "Datatype-Conversions,-Type-Names"]], "NoneType": [[203, "NoneType"]], "Short Circuit Evaluation of Boolean Expression": [[203, "Short-Circuit-Evaluation-of-Boolean-Expression"]], "Exercise: Mixed List": [[203, "Exercise:-Mixed-List"]], "Python Documentation": [[203, "Python-Documentation"]], "for": [[203, "for"], [265, "for"], [296, "for"]], "Iteration over Compound Datatypes": [[203, "Iteration-over-Compound-Datatypes"], [213, "Iteration-over-Compound-Datatypes"]], "File IO": [[203, "File-IO"], [219, "File-IO"], [247, "file-io"], [251, "File-IO"]], "Generators, Iterator Protocol, for": [[203, "Generators,-Iterator-Protocol,-for"]], "Common Sequence Operation": [[203, "Common-Sequence-Operation"]], "Comprehensions": [[203, "Comprehensions"], [206, "Comprehensions"], [219, "Comprehensions"], [251, "Comprehensions"]], "List, Iterable? WTF?": [[203, "List,-Iterable?-WTF?"]], "Dict and iterable": [[203, "Dict-and-iterable"]], "More on Lists": [[203, "More-on-Lists"], [211, "More-on-Lists"], [226, "More-on-Lists"]], "More on Dictionaries": [[203, "More-on-Dictionaries"], [211, "More-on-Dictionaries"]], "References, Mutability": [[203, "References,-Mutability"]], "CSV": [[203, "CSV"], [220, "csv"], [228, "csv"], [265, "CSV"]], "Python Basics (2021-11-17 - 2021-11-19)": [[204, "python-basics-2021-11-17-2021-11-19"], [319, "python-basics-2021-11-17-2021-11-19"]], "Python (Core Topics)": [[204, "python-core-topics"]], "Python Standard Library": [[204, "python-standard-library"]], "More About Strings": [[206, "More-About-Strings"], [223, "More-About-Strings"], [271, "More-About-Strings"], [999, "more-about-strings"]], "List, Tuple": [[206, "List,-Tuple"], [261, "List,-Tuple"], [265, "List,-Tuple"]], "Tuple Unpacking: What Else": [[206, "Tuple-Unpacking:-What-Else"]], "Iterator Protocol": [[206, "Iterator-Protocol"], [213, "Iterator-Protocol"], [244, "Iterator-Protocol"], [261, "Iterator-Protocol"], [265, "Iterator-Protocol"]], "yield": [[206, "yield"], [229, "yield"]], "Everything is an Object of a Type": [[206, "Everything-is-an-Object-of-a-Type"]], "Generators, used more creatively": [[206, "Generators,-used-more-creatively"]], "Exception Handling and Exception Types": [[206, "Exception-Handling-and-Exception-Types"]], "2021-12-17": [[206, "2021-12-17"]], "Shift Operators": [[206, "Shift-Operators"]], "PCAP Sample Exam": [[206, "PCAP-Sample-Exam"]], "System Errors": [[206, "System-Errors"]], "Python Advanced (2021-12-01 - 2021-12-03)": [[207, "python-advanced-2021-12-01-2021-12-03"], [319, "python-advanced-2021-12-01-2021-12-03"]], "Basics Recap": [[207, "basics-recap"], [260, "basics-recap"], [279, "basics-recap"]], "Group Project Preparation": [[207, "group-project-preparation"]], "Hmmm?": [[207, "hmmm"]], "C/C++ Programming (2021-12-06 - 2021-12-10, 2022-01-24 - 2022-02-04)": [[209, "c-c-programming-2021-12-06-2021-12-10-2022-01-24-2022-02-04"], [319, "c-c-programming-2021-12-06-2021-12-10-2022-01-24-2022-02-04"]], "2021-12-06": [[209, "id1"]], "2021-12-07": [[209, "id2"]], "2021-12-08": [[209, "id3"]], "2021-12-09": [[209, "id4"]], "2022-01-24": [[209, "id5"]], "Undefined Behavior": [[209, "undefined-behavior"]], "Modularization": [[209, "modularization"], [364, "modularization"]], "2022-01-25": [[209, "id6"]], "C++ and OO (Classes)": [[209, "c-and-oo-classes"]], "Modularization (again)": [[209, "modularization-again"]], "2022-01-26": [[209, "id7"]], "Modularization: Repeating Important Topics (Quickly)": [[209, "modularization-repeating-important-topics-quickly"]], "Classes (continued)": [[209, "classes-continued"]], "2022-01-27": [[209, "id8"]], "2022-01-28": [[209, "id9"]], "Standard Template Library: Container Templates": [[209, "standard-template-library-container-templates"]], "2022-01-31": [[209, "id10"]], "2022-02-01": [[209, "id11"]], "Algorithms": [[209, "algorithms"], [571, "algorithms"]], "Functors": [[209, "functors"]], "Unified Modeling Language (UML)": [[209, "unified-modeling-language-uml"]], "Exercise (Using All From Today)": [[209, "exercise-using-all-from-today"]], "2022-02-02": [[209, "id12"]], "Associative Container: std::map": [[209, "associative-container-std-map"]], "Exceptions, and Exception Handling": [[209, "exceptions-and-exception-handling"]], "2022-02-03": [[209, "id13"]], "2022-02-04": [[209, "id14"]], "C++11: A New Language": [[209, "c-11-a-new-language"]], "Dynamic Allocation, Smart Pointers": [[209, "dynamic-allocation-smart-pointers"]], "2022-02-07: Start of Exercise Week": [[209, "start-of-exercise-week"]], "Programmierung Grundlagen, anhand von Python (2022-01-17 - 2022-01-10)": [[210, "programmierung-grundlagen-anhand-von-python-2022-01-17-2022-01-10"], [319, "programmierung-grundlagen-anhand-von-python-2022-01-17-2022-01-10"]], "2022-01-17": [[211, "2022-01-17"]], "Variables and Datatypes": [[211, "Variables-and-Datatypes"]], "Comments vs Docstrings": [[211, "Comments-vs-Docstrings"]], "Integer (Ganze Zahl)": [[211, "Integer-(Ganze-Zahl)"]], "Integer Numbers: Arithmetic": [[211, "Integer-Numbers:-Arithmetic"], [223, "Integer-Numbers:-Arithmetic"], [986, "integer-numbers-arithmetic"]], "Some Methods": [[211, "Some-Methods"]], "String Formatting: f-Strings": [[211, "String-Formatting:-f-Strings"]], "More about Strings": [[211, "More-about-Strings"]], "if": [[211, "if"], [251, "if"]], "2022-01-18": [[211, "2022-01-18"]], "Miscellanea": [[211, "Miscellanea"]], "Braces: Single Element Tuples?": [[211, "Braces:-Single-Element-Tuples?"]], "Ranges -> range() (hour_of_day)": [[211, "Ranges-->-range()-(hour_of_day)"]], "while Loops": [[211, "while-Loops"], [213, "while-Loops"], [226, "while-Loops"], [990, "while-loops"], [990, "id1"]], "break and continue": [[211, "break-and-continue"], [361, "break-and-continue"], [361, "id1"], [990, "break-and-continue"]], "yield, Generator, Iteration Protocol": [[211, "yield,-Generator,-Iteration-Protocol"]], "Sequence Membership": [[211, "Sequence-Membership"], [991, "sequence-membership"]], "list (mutable)": [[211, "list-(mutable)"]], "tuple (immutable)": [[211, "tuple-(immutable)"]], "dict (mutable)": [[211, "dict-(mutable)"]], "set (mutable)": [[211, "set-(mutable)"]], "Why Index Based Iteration is not Always the Best Way to Iterate": [[211, "Why-Index-Based-Iteration-is-not-Always-the-Best-Way-to-Iterate"]], "How to get Indexes if There are None? (enumerate(), and Tuple Unpacking)": [[211, "How-to-get-Indexes-if-There-are-None?-(enumerate(),-and-Tuple-Unpacking)"]], "Default Parameters": [[211, "Default-Parameters"], [213, "Default-Parameters"], [297, "Default-Parameters"], [997, "default-parameters"]], "List Comprehensions": [[211, "List-Comprehensions"], [223, "List-Comprehensions"]], "Iteration over Dictionaries": [[211, "Iteration-over-Dictionaries"]], "Building Dictionaries": [[211, "Building-Dictionaries"], [1003, "building-dictionaries"]], "More on Sets": [[211, "More-on-Sets"]], "with: Context Managers": [[211, "with:-Context-Managers"]], "Strings Intro": [[213, "Strings-Intro"]], "Doc Strings": [[213, "Doc-Strings"]], "Object Identity": [[213, "Object-Identity"]], "Integers": [[213, "Integers"], [223, "Integers"], [226, "Integers"], [244, "Integers"], [251, "Integers"], [271, "Integers"]], "Variablen? Datenypen?": [[213, "Variablen?-Datenypen?"]], "Objects, Classes": [[213, "Objects,-Classes"]], "Python Standard Libarary Examples": [[213, "Python-Standard-Libarary-Examples"]], "collections": [[213, "collections"]], "ChainMap": [[213, "ChainMap"]], "deque": [[213, "deque"]], "Suchalgorithmen und Datenstrukturen (Ausflug)": [[213, "Suchalgorithmen-und-Datenstrukturen-(Ausflug)"]], "Slice Assignment": [[213, "Slice-Assignment"], [992, "slice-assignment"]], "Lists are mutable": [[213, "Lists-are-mutable"]], "Shallow copy and deep copy": [[213, "Shallow-copy-and-deep-copy"]], "else": [[213, "else"], [219, "else"]], "for Loops, range()": [[213, "for-Loops,-range()"]], "Default Parameters: Pitfalls": [[213, "Default-Parameters:-Pitfalls"]], "dict.fromkeys()": [[213, "dict.fromkeys()"], [226, "dict.fromkeys()"]], "Generators": [[213, "Generators"], [219, "Generators"], [259, "generators"], [260, "generators"], [264, "generators"], [278, "generators"], [279, "generators"]], "join, split": [[213, "join,-split"]], "strip, lstrip, rstrip": [[213, "strip,-lstrip,-rstrip"]], "Python Basics (2022-02-23 - 2022-02-25)": [[214, "python-basics-2022-02-23-2022-02-25"], [319, "python-basics-2022-02-23-2022-02-25"]], "Data Structures": [[214, "data-structures"]], "OS Things": [[214, "os-things"]], "Data Science": [[214, "data-science"]], "Wiederholung": [[216, "Wiederholung"]], "Mutable/Immutable": [[216, "Mutable/Immutable"]], "Attribute": [[216, "Attribute"]], "Sequentielle vs.\u00a0Konstante Suchzeit": [[216, "Sequentielle-vs.\u00a0Konstante-Suchzeit"]], "Exceptions": [[216, "Exceptions"], [232, "Exceptions"], [257, "exceptions"], [504, "exceptions"], [551, "exceptions"], [552, "exceptions"]], "for vs.\u00a0while, range()": [[216, "for-vs.\u00a0while,-range()"]], "String Methods (some)": [[216, "String-Methods-(some)"]], "eval()": [[216, "eval()"], [226, "eval()"]], "exec()": [[216, "exec()"], [232, "exec()"]], "Dictionary Iteration": [[216, "Dictionary-Iteration"]], "Classes, Attributes, OO": [[216, "Classes,-Attributes,-OO"]], "Types and Instances": [[216, "Types-and-Instances"]], "Metaprogramming? Types? What is a Type?": [[216, "Metaprogramming?-Types?-What-is-a-Type?"]], "OO Everywhere": [[216, "OO-Everywhere"]], "Dictionary Operations": [[216, "Dictionary-Operations"]], "collections.defaultdict": [[216, "collections.defaultdict"], [241, "collections.defaultdict"]], "Python Advanced (2022-03-15 - 2022-03-17, 2022-03-31)": [[217, "python-advanced-2022-03-15-2022-03-17-2022-03-31"]], "2022-03-15": [[217, "id1"]], "2022-03-16": [[217, "id2"]], "Test Driven Development": [[217, "test-driven-development"], [259, "test-driven-development"], [278, "test-driven-development"]], "2022-03-17": [[217, "id3"]], "2022-03-31": [[217, "id4"]], "PCAP exam preparation": [[217, "pcap-exam-preparation"]], "Hello World": [[219, "Hello-World"], [323, "hello-world"], [981, "hello-world"]], "Blahblah": [[219, "Blahblah"], [561, "blahblah"], [980, "blahblah"]], "Object Oriented?": [[219, "Object-Oriented?"]], "MQTT": [[219, "MQTT"], [1074, "mqtt"]], "Commandline Arguments": [[219, "Commandline-Arguments"], [375, "commandline-arguments"], [375, "id1"]], "Object Lifetime": [[219, "Object-Lifetime"]], "Boolean, Short Circuit Evaluation": [[219, "Boolean,-Short-Circuit-Evaluation"]], "More String Methods": [[219, "More-String-Methods"], [219, "id1"]], "Dictionary Preview": [[219, "Dictionary-Preview"]], "list: Mutable": [[219, "list:-Mutable"]], "list(): explicit constructor": [[219, "list():-explicit-constructor"]], "tuple: Immutable": [[219, "tuple:-Immutable"]], "dict: Mutable": [[219, "dict:-Mutable"]], "set: Mutable": [[219, "set:-Mutable"]], "List comprehension": [[219, "List-comprehension"]], "DIctionary Comprehension": [[219, "DIctionary-Comprehension"]], "Set Comprehension": [[219, "Set-Comprehension"], [951, "set-comprehension"]], "max": [[219, "max"]], "for, enumerate()": [[219, "for,-enumerate()"]], "Iteratoren, Generatoren": [[219, "Iteratoren,-Generatoren"]], "Generatoren": [[219, "Generatoren"]], "split und join": [[219, "split-und-join"]], "strip()": [[219, "strip()"]], "dict vs.\u00a0OrderedDict": [[219, "dict-vs.\u00a0OrderedDict"]], "Duck Typing": [[219, "Duck-Typing"], [967, "duck-typing"]], "Interfaces": [[219, "Interfaces"], [600, "interfaces"], [600, "id1"]], "Implementation Inheritance": [[219, "Implementation-Inheritance"]], "Method Resolution Order (MRO), and super()": [[219, "Method-Resolution-Order-(MRO),-and-super()"]], "__bases__": [[219, "__bases__"]], "__mro__": [[219, "__mro__"]], "Object Layout (self)": [[219, "Object-Layout-(self)"]], "More from OO": [[219, "More-from-OO"]], "Calling Base Class Constructor (Many Ways)": [[219, "Calling-Base-Class-Constructor-(Many-Ways)"]], "Name Mangling (\u201cprivate\u201d Members)": [[219, "Name-Mangling-(\u201cprivate\u201d-Members)"]], "Yet Another Example From Udemy": [[219, "Yet-Another-Example-From-Udemy"]], "Exception Handling": [[219, "Exception-Handling"], [250, "exception-handling"], [253, "exception-handling"], [258, "exception-handling"], [312, "exception-handling"], [954, "exception-handling"]], "Order of except Clauses": [[219, "Order-of-except-Clauses"]], "finally": [[219, "finally"]], "lambda": [[219, "lambda"]], "map(), filter()": [[219, "map(),-filter()"]], "Generators, Iteration Protocol": [[219, "Generators,-Iteration-Protocol"]], "Class Variables (as Opposed to Instance Variables)": [[219, "Class-Variables-(as-Opposed-to-Instance-Variables)"]], "Python (2022-03-23, 2022-03-30, 2022-04-19 - 2022-03-21)": [[220, "python-2022-03-23-2022-03-30-2022-04-19-2022-03-21"], [319, "python-2022-03-23-2022-03-30-2022-04-19-2022-03-21"]], "2022-03-23: Basics": [[220, "basics"]], "2022-03-30: Basics": [[220, "id1"]], "2022-04-19, 2022-04-20, 2022-04-21: Advanced": [[220, "advanced"]], "Plan For The Wild Part": [[220, "plan-for-the-wild-part"]], "Programmierung Grundlagen, anhand von Python (2022-04-05 - 2022-04-08)": [[222, "programmierung-grundlagen-anhand-von-python-2022-04-05-2022-04-08"], [319, "programmierung-grundlagen-anhand-von-python-2022-04-05-2022-04-08"]], "Discussion: Flow Charts?": [[222, "discussion-flow-charts"]], "BlahBlah": [[223, "BlahBlah"], [226, "BlahBlah"], [229, "BlahBlah"]], "Interactive": [[223, "Interactive"]], "For Beginners": [[223, "For-Beginners"]], "Not For Beginners?": [[223, "Not-For-Beginners?"]], "Strings, 1st Explanation": [[223, "Strings,-1st-Explanation"]], "Operator Precedence": [[223, "Operator-Precedence"], [226, "Operator-Precedence"], [986, "operator-precedence"]], "Floating Point Numbers": [[223, "Floating-Point-Numbers"], [986, "floating-point-numbers"]], "Docstrings": [[223, "Docstrings"], [229, "Docstrings"], [296, "Docstrings"]], "Einschub: String-Vergleich vs.\u00a0Integer-Vergleich": [[223, "Einschub:-String-Vergleich-vs.\u00a0Integer-Vergleich"]], "Random Numbers": [[223, "Random-Numbers"]], "Indexing and Slicing": [[223, "Indexing-and-Slicing"], [271, "Indexing-and-Slicing"], [992, "indexing-and-slicing"]], "for Loops": [[223, "for-Loops"], [326, "for-loops"], [993, "for-loops"]], "range()": [[223, "range()"], [251, "range()"]], "Filterketten": [[223, "Filterketten"]], "Zen": [[223, "Zen"]], "Compound Datatypes By Example: List, Tuple": [[223, "Compound-Datatypes-By-Example:-List,-Tuple"], [987, "compound-datatypes-by-example-list-tuple"]], "Compound Datatypes By Example: Dictionary": [[223, "Compound-Datatypes-By-Example:-Dictionary"], [987, "compound-datatypes-by-example-dictionary"]], "Datensatz als Dictionary?": [[223, "Datensatz-als-Dictionary?"]], "JSON (Javascript Object Notation)": [[223, "JSON-(Javascript-Object-Notation)"]], "Compound Datatypes By Example: Set": [[223, "Compound-Datatypes-By-Example:-Set"], [987, "compound-datatypes-by-example-set"]], "Das Letzte Beispiel am Letzten Tag": [[223, "Das-Letzte-Beispiel-am-Letzten-Tag"]], "Python Basics (2022-04-25 - 2022-04-27)": [[225, "python-basics-2022-04-25-2022-04-27"], [319, "python-basics-2022-04-25-2022-04-27"]], "Strings und Quotes": [[226, "Strings-und-Quotes"]], "Comments vs.\u00a0Docstrings": [[226, "Comments-vs.\u00a0Docstrings"]], "Variables and Types": [[226, "Variables-and-Types"]], "Swap": [[226, "Swap"]], "Integers are Infinitely long": [[226, "Integers-are-Infinitely-long"]], "Floating Point Comparison": [[226, "Floating-Point-Comparison"]], "Mutability/Immutability": [[226, "Mutability/Immutability"]], "Exercise: Digit To English Word": [[226, "Exercise:-Digit-To-English-Word"]], "Exercise: Determine Maximum of Two Numbers": [[226, "Exercise:-Determine-Maximum-of-Two-Numbers"], [1019, "exercise-determine-maximum-of-two-numbers"], [1029, "exercise-determine-maximum-of-two-numbers"]], "Ranges": [[226, "Ranges"], [677, "ranges"]], "Exercise: Sort out Duplicates": [[226, "Exercise:-Sort-out-Duplicates"]], "Algorithmic Complexity": [[226, "Algorithmic-Complexity"]], "More On Dictionaries": [[226, "More-On-Dictionaries"]], "More On Sets": [[226, "More-On-Sets"]], "eval(), json": [[226, "eval(),-json"]], "Encoding": [[226, "Encoding"], [250, "encoding"], [271, "Encoding"], [301, "encoding"], [1071, "encoding"]], "Python (2022-05-02 - 2022-05-05)": [[228, "python-2022-05-02-2022-05-05"], [319, "python-2022-05-02-2022-05-05"]], "Control Flow and Iteration": [[228, "control-flow-and-iteration"]], "Encoding, Strings, and File I/O": [[228, "encoding-strings-and-file-i-o"]], "Excursion: CAN Communication, OO, Modules": [[228, "excursion-can-communication-oo-modules"]], "Modules": [[228, "modules"], [241, "Modules"], [301, "modules"], [672, "modules"], [962, "modules"]], "CSV, Functions": [[228, "csv-functions"]], "PyPI, Virtual Environments": [[228, "pypi-virtual-environments"]], "Requirements Engineering, Test Driven Development": [[228, "requirements-engineering-test-driven-development"]], "More On DataTypes": [[228, "more-on-datatypes"]], "Random Topics": [[228, "random-topics"]], "Standard Library": [[228, "standard-library"]], "Hello Jupyter Notebook": [[229, "Hello-Jupyter-Notebook"]], "Syntax etc": [[229, "Syntax-etc"]], "Mutability": [[229, "Mutability"], [261, "Mutability"]], "Removing Elements": [[229, "Removing-Elements"], [582, "removing-elements"]], "Nested Lists?": [[229, "Nested-Lists?"]], "while loops, and else": [[229, "while-loops,-and-else"]], "for loops (and else)": [[229, "for-loops-(and-else)"]], "The range() Function, Iterator Protocol": [[229, "The-range()-Function,-Iterator-Protocol"]], "Encoding, and String": [[229, "Encoding,-and-String"]], "Regular Expression": [[229, "Regular-Expression"]], "f-Strings (since Python 3.6 !!)": [[229, "f-Strings-(since-Python-3.6-!!)"]], "Tuples Containing Only One Element": [[229, "Tuples-Containing-Only-One-Element"]], "Iterables, Lists, and the itertools Modules": [[229, "Iterables,-Lists,-and-the-itertools-Modules"]], "itertools.chain()": [[229, "itertools.chain()"]], "Destructor?": [[229, "Destructor?"]], "Tuple Unpacking on Dictionaries": [[229, "Tuple-Unpacking-on-Dictionaries"]], "Python Advanced (2022-05-16 - 2022-05-18)": [[231, "python-advanced-2022-05-16-2022-05-18"], [319, "python-advanced-2022-05-16-2022-05-18"]], "Project Management": [[231, "project-management"], [308, "project-management"], [309, "project-management"], [313, "project-management"]], "Unit Testing, Test Driven Development": [[231, "unit-testing-test-driven-development"]], "Object Priented Programming": [[231, "object-priented-programming"]], "OO: next exercise (CSV as always \ud83d\ude44)": [[231, "oo-next-exercise-csv-as-always-rolling-eyes"]], "Exercise: Exception Handling": [[231, "exercise-exception-handling"]], "Standesregister nach SQLite3": [[231, "standesregister-nach-sqlite3"]], "XML/Element Tree": [[231, "xml-element-tree"]], "Projektabschlusstag": [[231, "projektabschlusstag"]], "Basic Python": [[231, "basic-python"], [1121, "basic-python"]], "Assert": [[232, "Assert"]], "The id() function": [[232, "The-id()-function"]], "class Person": [[232, "class-Person"]], "Functions That Do Not Return Anything": [[232, "Functions-That-Do-Not-Return-Anything"]], "Classes, Attributes, und so (Dictionaries Everywhere!)": [[232, "Classes,-Attributes,-und-so-(Dictionaries-Everywhere!)"]], "Globale, lokale, und Class Variablen": [[232, "Globale,-lokale,-und-Class-Variablen"]], "Defining my Own Exceptions": [[232, "Defining-my-Own-Exceptions"]], "Dictionary Lookup, keys() etc.": [[232, "Dictionary-Lookup,-keys()-etc."]], "Integers, Strings, und so": [[232, "Integers,-Strings,-und-so"]], "Vorbesprechung 2022-05-11": [[234, "vorbesprechung-2022-05-11"]], "Legende": [[234, "legende"]], "Neuerungen in C++ seit 2011": [[234, "neuerungen-in-c-seit-2011"]], "Neuerungen in C++ 14": [[234, "neuerungen-in-c-14"]], "Neuerungen in C++ 17": [[234, "neuerungen-in-c-17"]], "Neuerungen in C++ 20 (Ausblick)": [[234, "neuerungen-in-c-20-ausblick"]], "C++: A New Language Starting In 2011": [[235, "c-a-new-language-starting-in-2011"], [236, "c-a-new-language-starting-in-2011"]], "Metadata": [[235, "metadata"], [236, "metadata"], [238, "metadata"], [839, "metadata"]], "Introduction": [[235, "introduction"], [236, "introduction"], [238, "introduction"], [257, "introduction"], [258, "introduction"], [282, "introduction"], [322, "introduction"], [401, "introduction"], [432, "introduction"], [527, "introduction"], [624, "introduction"], [683, "introduction"], [707, "introduction"], [757, "introduction"], [954, "introduction"], [339, "introduction"]], "Pythonicity (Thank You: Readablility and Writability)": [[235, "pythonicity-thank-you-readablility-and-writability"], [236, "pythonicity-thank-you-readablility-and-writability"], [238, "pythonicity-thank-you-readablility-and-writability"], [282, "pythonicity-thank-you-readablility-and-writability"]], "Range Based for Loops": [[235, "range-based-for-loops"], [236, "range-based-for-loops"], [238, "range-based-for-loops"], [282, "range-based-for-loops"]], "Tuple Unpacking (err, Structured Binding)": [[235, "tuple-unpacking-err-structured-binding"], [236, "tuple-unpacking-err-structured-binding"], [238, "tuple-unpacking-err-structured-binding"], [282, "tuple-unpacking-err-structured-binding"]], "Duck Typing (err, auto) Without A Duck": [[235, "duck-typing-err-auto-without-a-duck"], [236, "duck-typing-err-auto-without-a-duck"], [238, "duck-typing-err-auto-without-a-duck"], [282, "duck-typing-err-auto-without-a-duck"]], "Things That Simply Deserved Fixing Since Ages": [[235, "things-that-simply-deserved-fixing-since-ages"], [236, "things-that-simply-deserved-fixing-since-ages"], [238, "things-that-simply-deserved-fixing-since-ages"], [282, "things-that-simply-deserved-fixing-since-ages"]], "Brace Initialization": [[235, "brace-initialization"], [236, "brace-initialization"], [238, "brace-initialization"], [282, "brace-initialization"]], "New OO keywords: override, final, default, delete": [[235, "new-oo-keywords-override-final-default-delete"], [236, "new-oo-keywords-override-final-default-delete"], [238, "new-oo-keywords-override-final-default-delete"], [282, "new-oo-keywords-override-final-default-delete"]], "Strongly Typed enum": [[235, "strongly-typed-enum"], [236, "strongly-typed-enum"], [238, "strongly-typed-enum"], [282, "strongly-typed-enum"], [627, "strongly-typed-enum"]], "Delegating Constructor": [[235, "delegating-constructor"], [236, "delegating-constructor"], [238, "delegating-constructor"], [282, "delegating-constructor"], [632, "delegating-constructor"]], "nullptr": [[235, "nullptr"], [236, "nullptr"], [238, "nullptr"], [282, "nullptr"], [640, "nullptr"]], "Smart Pointers": [[235, "smart-pointers"], [236, "smart-pointers"], [238, "smart-pointers"], [258, "smart-pointers"], [504, "smart-pointers"]], "Moving, \u201cRValue References\u201d": [[235, "moving-rvalue-references"], [236, "moving-rvalue-references"]], "Functions (std::bind<>, std::function<>, Lambdas)": [[235, "functions-std-bind-std-function-lambdas"], [236, "functions-std-bind-std-function-lambdas"], [238, "functions-std-bind-std-function-lambdas"]], "Work Environment": [[236, "work-environment"], [238, "work-environment"], [256, "work-environment"], [257, "work-environment"], [258, "work-environment"], [308, "work-environment"]], "Skeleton Project": [[236, "skeleton-project"], [238, "skeleton-project"], [546, "skeleton-project"]], "Linux Basics (2022-10-03 - 2022-10-05)": [[237, "linux-basics-2022-10-03-2022-10-05"], [319, "linux-basics-2022-10-03-2022-10-05"]], "C++: A New Language Starting In 2011 (2022-10-11 - 2022-10-13)": [[238, "c-a-new-language-starting-in-2011-2022-10-11-2022-10-13"], [319, "c-a-new-language-starting-in-2011-2022-10-11-2022-10-13"]], "Moving, \u201cRValue References\u201d, And Perfect Forwarding": [[238, "moving-rvalue-references-and-perfect-forwarding"]], "News in C++20 (2023-06-13)": [[238, "news-in-c-20-2023-06-13"]], "Coroutines and C++23 Generators": [[238, "coroutines-and-c-23-generators"]], "Ranges And Views": [[238, "ranges-and-views"]], "Concepts": [[238, "concepts"], [282, "concepts"], [642, "concepts"]], "Design- and Architectural Patterns With C++ (2022-10-24 - 2022-10-26)": [[239, "design-and-architectural-patterns-with-c-2022-10-24-2022-10-26"], [319, "design-and-architectural-patterns-with-c-2022-10-24-2022-10-26"]], "Monday": [[239, "monday"]], "Tuesday": [[239, "tuesday"]], "Wednesday": [[239, "wednesday"]], "Python (2022-11-07 - 2022-11-10, 2022-12-01)": [[240, "python-2022-11-07-2022-11-10-2022-12-01"], [319, "python-2022-11-07-2022-11-10-2022-12-01"]], "Up Front: Project Management": [[240, "up-front-project-management"], [259, "up-front-project-management"], [278, "up-front-project-management"]], "Object Oriented Programming: Classes": [[240, "object-oriented-programming-classes"]], "Exercise Series: CSV": [[240, "exercise-series-csv"]], "Missing Pieces: Encoding, Unit Testing": [[240, "missing-pieces-encoding-unit-testing"]], "Exercise Series: CSV, JSON": [[240, "exercise-series-csv-json"]], "Iteration, Generators": [[240, "iteration-generators"]], "Going Dynamic: type(), exec()": [[240, "going-dynamic-type-exec"]], "More OO: Inheritance, Abstract Base Classes": [[240, "more-oo-inheritance-abstract-base-classes"]], "Group Project Kickoff": [[240, "group-project-kickoff"], [260, "group-project-kickoff"], [279, "group-project-kickoff"]], "Data Structures Recap": [[240, "data-structures-recap"]], "Miscellaneous Livehacking": [[240, "miscellaneous-livehacking"]], "Function Arguments, Closures, Decorators": [[240, "function-arguments-closures-decorators"], [275, "function-arguments-closures-decorators"]], "Exceptions, with": [[240, "exceptions-with"], [275, "exceptions-with"]], "Package Management": [[240, "package-management"], [275, "package-management"]], "Videos": [[240, "videos"]], "Beginner": [[240, "beginner"], [264, "beginner"]], "Advanced": [[240, "advanced"], [264, "advanced"]], "Fun": [[240, "fun"]], "Python (2022-10-17)": [[241, "Python-(2022-10-17)"]], "Tuple Unpacking, Lists Iteration, And Such": [[241, "Tuple-Unpacking,-Lists-Iteration,-And-Such"]], "Variables, Types": [[241, "Variables,-Types"]], "Immutable? References?": [[241, "Immutable?-References?"]], "And range()?": [[241, "And-range()?"]], "More About Dictionaries": [[241, "More-About-Dictionaries"], [241, "id1"], [244, "More-About-Dictionaries"], [271, "More-About-Dictionaries"], [1003, "more-about-dictionaries"]], "More About Lists": [[241, "More-About-Lists"], [244, "More-About-Lists"], [271, "More-About-Lists"], [1002, "more-about-lists"]], "Python (2022-11-16 - 2022-11-18)": [[243, "python-2022-11-16-2022-11-18"], [244, "Python-(2022-11-16---2022-11-18)"], [319, "python-2022-11-16-2022-11-18"]], "Control Flow, Sequences, Iteration": [[243, "control-flow-sequences-iteration"], [250, "control-flow-sequences-iteration"], [253, "control-flow-sequences-iteration"], [263, "control-flow-sequences-iteration"], [264, "control-flow-sequences-iteration"], [269, "control-flow-sequences-iteration"], [270, "control-flow-sequences-iteration"], [270, "id2"]], "More Datatypes": [[243, "more-datatypes"], [250, "more-datatypes"], [253, "more-datatypes"], [263, "more-datatypes"], [264, "more-datatypes"], [264, "id2"], [269, "more-datatypes"], [270, "more-datatypes"], [324, "more-datatypes"]], "Exercise Series: CSV Files": [[243, "exercise-series-csv-files"], [263, "exercise-series-csv-files"], [264, "exercise-series-csv-files"], [269, "exercise-series-csv-files"], [270, "exercise-series-csv-files"]], "Advanced Language Features": [[243, "advanced-language-features"], [263, "advanced-language-features"], [264, "advanced-language-features"], [269, "advanced-language-features"], [387, "advanced-language-features"]], "Noob Exercises": [[243, "noob-exercises"]], "Object Oriented": [[244, "Object-Oriented"]], "Lists and Tuples": [[244, "Lists-and-Tuples"]], "for, and Iteration, and Generators": [[244, "for,-and-Iteration,-and-Generators"]], "Lists, Dictionaries, Generators, Constructors": [[244, "Lists,-Dictionaries,-Generators,-Constructors"]], "And Lists? Mutable!": [[244, "And-Lists?-Mutable!"]], "Tuples?": [[244, "Tuples?"]], "set": [[244, "set"]], "More About Sets": [[244, "More-About-Sets"], [271, "More-About-Sets"], [1004, "more-about-sets"]], "Comprehensions (List, Dictionary, Set)": [[244, "Comprehensions-(List,-Dictionary,-Set)"], [951, "comprehensions-list-dictionary-set"]], "Generator Expressions": [[244, "Generator-Expressions"]], "eval and exec": [[244, "eval-and-exec"]], "Linux Basics (2023-01-23 - 2023-01-26)": [[246, "linux-basics-2023-01-23-2023-01-26"], [319, "linux-basics-2023-01-23-2023-01-26"]], "Embedded Linux Systems Programming (2023-02-13 - 2023-02-17)": [[247, "embedded-linux-systems-programming-2023-02-13-2023-02-17"], [319, "embedded-linux-systems-programming-2023-02-13-2023-02-17"]], "WSL For Core Linux Topics": [[247, "wsl-for-core-linux-topics"]], "Cross Development For Hardware Topics": [[247, "cross-development-for-hardware-topics"]], "Day 1: Overview": [[247, "day-1-overview"]], "Introductory Live Hacking": [[247, "introductory-live-hacking"]], "The Shell": [[247, "the-shell"]], "Processes Quick Walk-Through": [[247, "processes-quick-walk-through"]], "Permissions": [[247, "permissions"]], "Development: CMake Quick Intro, And Git Quick Intro": [[247, "development-cmake-quick-intro-and-git-quick-intro"]], "UART": [[247, "uart"]], "SUSI": [[247, "susi"]], "Secure Shell (SSH)": [[247, "secure-shell-ssh"]], "Miscellaneous Hardware": [[247, "miscellaneous-hardware"]], "Group Exercise": [[247, "group-exercise"]], "Untold": [[247, "untold"], [257, "untold"], [260, "untold"], [279, "untold"]], "More From The Commandline": [[247, "more-from-the-commandline"]], "Multithreading (And C++)": [[247, "multithreading-and-c"]], "Whetting Your Appetite (Jupyter Notebook)": [[248, "Whetting-Your-Appetite-(Jupyter-Notebook)"]], "Filter in Pandas": [[248, "Filter-in-Pandas"]], "Copy vs Reference": [[248, "Copy-vs-Reference"]], "Immutable": [[248, "Immutable"]], "String": [[248, "String"]], "Regex": [[248, "Regex"]], "Whetting Your Appetite (Livehacking Demo)": [[249, "whetting-your-appetite-livehacking-demo"]], "Pipeline Driver": [[249, "pipeline-driver"]], "Virtual Environment Setup": [[249, "virtual-environment-setup"]], "Filter: Add Category: card-payment": [[249, "filter-add-category-card-payment"]], "Filter: Select Uncategorized": [[249, "filter-select-uncategorized"]], "More Categories": [[249, "more-categories"]], "Testing": [[249, "testing"]], "Python For SAP Developers (2023-03-13 - 2023-03-15)": [[250, "python-for-sap-developers-2023-03-13-2023-03-15"], [319, "python-for-sap-developers-2023-03-13-2023-03-15"]], "Day 1 (Basics)": [[250, "day-1-basics"]], "Demo": [[250, "demo"]], "Day 2 (Basics, Continued)": [[250, "day-2-basics-continued"]], "Pandas": [[250, "pandas"], [251, "Pandas"], [253, "pandas"], [257, "pandas"], [1078, "pandas"]], "Hacking About On A SAP Test Dataset": [[250, "hacking-about-on-a-sap-test-dataset"], [254, "hacking-about-on-a-sap-test-dataset"]], "Untold (From Original Agenda)": [[250, "untold-from-original-agenda"]], "OO Introduction": [[250, "oo-introduction"], [253, "oo-introduction"]], "Context Managers (Automatic Cleanup)": [[250, "context-managers-automatic-cleanup"], [253, "context-managers-automatic-cleanup"]], "Iteration, Generators, Comprehensions": [[250, "iteration-generators-comprehensions"], [253, "iteration-generators-comprehensions"]], "Decorators, and Related Topics": [[250, "decorators-and-related-topics"], [253, "decorators-and-related-topics"]], "Machine Learning: Pandas, NumPy, And Algorithms": [[250, "machine-learning-pandas-numpy-and-algorithms"]], "2023-03-13": [[251, "2023-03-13"]], "Comment vs Docstring": [[251, "Comment-vs-Docstring"]], "Mutable? Immutable?": [[251, "Mutable?-Immutable?"]], "Lists": [[251, "Lists"], [251, "id2"], [265, "Lists"]], "Tuples": [[251, "Tuples"]], "DataType Conversiosn": [[251, "DataType-Conversiosn"]], "String, File IO Exercise": [[251, "String,-File-IO-Exercise"]], "Python For SAP Developers (Jupyter Notebook)": [[252, "python-for-sap-developers-jupyter-notebook"]], "Original Agenda: Python For SAP Developers (2023-03-13 - 2023-03-15)": [[253, "original-agenda-python-for-sap-developers-2023-03-13-2023-03-15"]], "Day 1: Basics": [[253, "day-1-basics"]], "Day 2: Outlook Into Advanced Python": [[253, "day-2-outlook-into-advanced-python"]], "Day 3: Domain Specifics": [[253, "day-3-domain-specifics"]], "NumPy": [[253, "numpy"]], "Some Usecases On A Test Dataset From SAP": [[255, "Some-Usecases-On-A-Test-Dataset-From-SAP"]], "Dropping Columns That Contain Only NaN Values": [[255, "Dropping-Columns-That-Contain-Only-NaN-Values"]], "DataFrame.isna()": [[255, "DataFrame.isna()"]], "DataFrame.all() (and any())": [[255, "DataFrame.all()-(and-any())"]], "Column Selection": [[255, "Column-Selection"]], "Dropping Columns": [[255, "Dropping-Columns"]], "Fixing Date Values/Columns, And Operating With Date And Time": [[255, "Fixing-Date-Values/Columns,-And-Operating-With-Date-And-Time"]], "pandas.to_datetime()": [[255, "pandas.to_datetime()"]], "Converting The Entire DateDATE Column To A Workable Type (And Working With It)": [[255, "Converting-The-Entire-DateDATE-Column-To-A-Workable-Type-(And-Working-With-It)"]], "Conversion": [[255, "Conversion"]], "Usage: A Filter": [[255, "Usage:-A-Filter"]], "Modify Rows: Increase All Prices Of One Particular Store By 10%": [[255, "Modify-Rows:-Increase-All-Prices-Of-One-Particular-Store-By-10%"]], "Filter Readability: Combining Filters": [[255, "Filter-Readability:-Combining-Filters"]], "C++ For Embedded Developers (2023-03-20 - 2023-03-23)": [[256, "c-for-embedded-developers-2023-03-20-2023-03-23"]], "Preferred: Ubuntu under Windows (WSL)": [[256, "preferred-ubuntu-under-windows-wsl"], [258, "preferred-ubuntu-under-windows-wsl"]], "Unsupported Environments": [[256, "unsupported-environments"]], "Skeleton Project Setup": [[256, "skeleton-project-setup"], [258, "skeleton-project-setup"]], "Classes, Objects, Methods": [[256, "classes-objects-methods"]], "Heavy Weight OO \ud83d\udcaa": [[256, "heavy-weight-oo-muscle"], [258, "heavy-weight-oo-muscle"]], "Resource Management Pitfalls": [[256, "resource-management-pitfalls"]], "R-Value References/Moving, And Managed Pointers": [[256, "r-value-references-moving-and-managed-pointers"]], "A Little Concurrency": [[256, "a-little-concurrency"]], "Untold So Far": [[256, "untold-so-far"]], "C++ Standard Library": [[256, "c-standard-library"]], "Miscellaneous Topics": [[256, "miscellaneous-topics"]], "Clean Code Development With Python (2023-03-28 - 2023-03-29)": [[257, "clean-code-development-with-python-2023-03-28-2023-03-29"]], "Clean Code?": [[257, "clean-code"], [259, "clean-code"], [260, "clean-code"], [279, "clean-code"]], "Demo Hacking": [[257, "demo-hacking"]], "Python Development: Select Topics": [[257, "python-development-select-topics"]], "Built-In Types: Facts": [[257, "built-in-types-facts"]], "for Loops, And The Iterator Protocol": [[257, "for-loops-and-the-iterator-protocol"]], "Day 2: Clean Code? (Software Development: A Craft)": [[257, "day-2-clean-code-software-development-a-craft"]], "Closures, And Function Parameters": [[257, "closures-and-function-parameters"]], "Generators (Again), yield Fixtures, And yield Context Managers": [[257, "generators-again-yield-fixtures-and-yield-context-managers"]], "Decorators (The Ominous @)": [[257, "decorators-the-ominous"]], "Modules And Packages": [[257, "modules-and-packages"], [278, "modules-and-packages"]], "Design Patterns": [[257, "design-patterns"]], "C++ For Embedded Developers (2023-04-18 - 2023-04-20)": [[258, "c-for-embedded-developers-2023-04-18-2023-04-20"], [319, "c-for-embedded-developers-2023-04-18-2023-04-20"]], "Some Details": [[258, "some-details"]], "Standard Template Library": [[258, "standard-template-library"], [594, "standard-template-library"]], "Warm-Up": [[258, "warm-up"]], "Sensor Exercise, Resolved": [[258, "sensor-exercise-resolved"]], "OO, Cont\u2019d": [[258, "oo-cont-d"]], "Smart Pointers (Continued)": [[258, "smart-pointers-continued"]], "Exercises: Containers And Algorithms": [[258, "exercises-containers-and-algorithms"]], "Exercises: OO And Interfaces": [[258, "exercises-oo-and-interfaces"]], "Agenda: Python Advanced (2023-04-24 - 2023-04-26)": [[259, "agenda-python-advanced-2023-04-24-2023-04-26"]], "Day 1: Python Inside Out": [[259, "day-1-python-inside-out"], [260, "day-1-python-inside-out"], [279, "day-1-python-inside-out"]], "Exercise Prerequisites": [[259, "exercise-prerequisites"], [278, "exercise-prerequisites"]], "References And Other Pitfalls": [[259, "references-and-other-pitfalls"]], "Looping Constructs (With An Emphasis On The else Clause)": [[259, "looping-constructs-with-an-emphasis-on-the-else-clause"], [278, "looping-constructs-with-an-emphasis-on-the-else-clause"]], "Closures, Decorators And More": [[259, "closures-decorators-and-more"], [260, "closures-decorators-and-more"], [278, "closures-decorators-and-more"], [279, "closures-decorators-and-more"]], "Dynamic Features": [[259, "dynamic-features"], [260, "dynamic-features"], [261, "Dynamic-Features"], [278, "dynamic-features"], [279, "dynamic-features"]], "Error Handling And Recovery": [[259, "error-handling-and-recovery"], [260, "error-handling-and-recovery"], [278, "error-handling-and-recovery"], [279, "error-handling-and-recovery"]], "Miscellaneous Threading": [[259, "miscellaneous-threading"], [260, "miscellaneous-threading"], [279, "miscellaneous-threading"]], "Day 2: Clean Code (In A Broader Sense), Group Project Kickoff": [[259, "day-2-clean-code-in-a-broader-sense-group-project-kickoff"]], "Group Project: Discussion": [[259, "group-project-discussion"]], "Design Patterns Overview": [[259, "design-patterns-overview"], [260, "design-patterns-overview"], [279, "design-patterns-overview"]], "Day 3: Group Project": [[259, "day-3-group-project"], [260, "day-3-group-project"], [279, "day-3-group-project"]], "Python Advanced (2023-04-24 - 2023-04-26)": [[260, "python-advanced-2023-04-24-2023-04-26"], [279, "python-advanced-2023-04-24-2023-04-26"], [319, "python-advanced-2023-04-24-2023-04-26"]], "Day 2: Object Oriented Programming, And Miscellaneous Discussion": [[260, "day-2-object-oriented-programming-and-miscellaneous-discussion"], [279, "day-2-object-oriented-programming-and-miscellaneous-discussion"]], "Morning Opening": [[260, "morning-opening"], [279, "morning-opening"]], "Object Oriented Programming (Continued)": [[260, "object-oriented-programming-continued"], [279, "object-oriented-programming-continued"]], "Project Setup (IDE Usage?)": [[260, "project-setup-ide-usage"], [279, "project-setup-ide-usage"]], "Continue Hacking": [[260, "continue-hacking"], [279, "continue-hacking"]], "Test Driven Development, pytest": [[260, "test-driven-development-pytest"], [279, "test-driven-development-pytest"]], "Jupyter Notebook: Python Advanced (2023-04-24 - 2023-04-26)": [[261, "Jupyter-Notebook:-Python-Advanced-(2023-04-24---2023-04-26)"]], "is vs.\u00a0==": [[261, "is-vs.\u00a0=="]], "Compound DataTypes": [[261, "Compound-DataTypes"]], "class": [[261, "class"]], "Jupyter Notebook (Structure): Python Advanced (2023-04-24 - 2023-04-26)": [[262, "jupyter-notebook-structure-python-advanced-2023-04-24-2023-04-26"], [281, "jupyter-notebook-structure-python-advanced-2023-04-24-2023-04-26"]], "Agenda: Python Basics (2023-05-15 - 2023-05-17)": [[263, "agenda-python-basics-2023-05-15-2023-05-17"]], "Python Basics (2023-05-15 - 2023-05-17)": [[264, "python-basics-2023-05-15-2023-05-17"], [265, "Python-Basics-(2023-05-15---2023-05-17)"], [319, "python-basics-2023-05-15-2023-05-17"]], "Morning Awakening": [[264, "morning-awakening"]], "A Bit Of venv, A Bit Of pip": [[264, "a-bit-of-venv-a-bit-of-pip"]], "Modules from Standard Library": [[264, "modules-from-standard-library"], [1055, "modules-from-standard-library"]], "Immutable vs.\u00a0Mutable": [[265, "Immutable-vs.\u00a0Mutable"]], "The range Function": [[265, "The-range-Function"], [994, "the-range-function"]], "Lambda, And Functional Programming Tools": [[265, "Lambda,-And-Functional-Programming-Tools"]], "Agenda: Linux Basics (2023-05-23 - 2023-05-25)": [[267, "agenda-linux-basics-2023-05-23-2023-05-25"]], "Linux Basics (2023-05-23 - 2023-05-25)": [[268, "linux-basics-2023-05-23-2023-05-25"], [319, "linux-basics-2023-05-23-2023-05-25"]], "Introduction: Concepts and Terminology": [[268, "introduction-concepts-and-terminology"], [791, "introduction-concepts-and-terminology"]], "The Shell (Bash - \u201cBourne Again Shell\u201d)": [[268, "the-shell-bash-bourne-again-shell"], [268, "id1"], [837, "the-shell-bash-bourne-again-shell"]], "Tools: Inspecting Text Files": [[268, "tools-inspecting-text-files"], [847, "tools-inspecting-text-files"]], "File System Permissions": [[268, "file-system-permissions"], [268, "id2"], [812, "file-system-permissions"]], "Morning Wakeup": [[268, "morning-wakeup"], [270, "morning-wakeup"]], "I/O Redirection And Pipes": [[268, "i-o-redirection-and-pipes"], [798, "i-o-redirection-and-pipes"]], "Archiving and Compression": [[268, "archiving-and-compression"], [780, "archiving-and-compression"], [782, "archiving-and-compression"]], "Networking": [[268, "networking"]], "Processes And Scheduling": [[268, "processes-and-scheduling"]], "SSH: Secure Shell": [[268, "ssh-secure-shell"], [869, "ssh-secure-shell"]], "Shell Scripting (at least some of it)": [[268, "shell-scripting-at-least-some-of-it"]], "Agenda: Python Basics (2023-06-20 - 2023-06-22)": [[269, "agenda-python-basics-2023-06-20-2023-06-22"]], "Python Basics (2023-06-20 - 2023-06-22)": [[270, "python-basics-2023-06-20-2023-06-22"], [271, "Python-Basics-(2023-06-20---2023-06-22)"], [319, "python-basics-2023-06-20-2023-06-22"]], "Day2": [[270, "day2"]], "File I/O, And Encoding": [[270, "file-i-o-and-encoding"]], "Python Videos": [[270, "python-videos"]], "NumPy, Pandas, Matplotlib": [[270, "numpy-pandas-matplotlib"]], "DataTypes": [[271, "DataTypes"]], "(Im)mutable?": [[271, "(Im)mutable?"]], "Exercise: Mixed List, Interactive Interpreter": [[271, "Exercise:-Mixed-List,-Interactive-Interpreter"]], "len(), range(), for": [[271, "len(),-range(),-for"]], "Generators, yield": [[271, "Generators,-yield"]], "Other -ables: Callable": [[271, "Other--ables:-Callable"]], "exec() (and eval())": [[271, "exec()-(and-eval())"]], "Formatting (f-Strings)": [[271, "Formatting-(f-Strings)"]], "Python Basics (Jupyter Notebook)": [[272, "python-basics-jupyter-notebook"], [277, "python-basics-jupyter-notebook"]], "Agenda: CMake (2023-07-03)": [[273, "agenda-cmake-2023-07-03"]], "Toolchain Introduction": [[273, "toolchain-introduction"], [1114, "toolchain-introduction"]], "Project Structure, Dependencies": [[273, "project-structure-dependencies"], [1114, "project-structure-dependencies"]], "External Dependencies": [[273, "external-dependencies"], [414, "external-dependencies"], [1114, "external-dependencies"]], "Code Generators": [[273, "code-generators"], [1114, "code-generators"]], "Automatic Testing": [[273, "automatic-testing"], [1114, "automatic-testing"]], "Installation And Deployment": [[273, "installation-and-deployment"], [1114, "installation-and-deployment"]], "CMake: An Introduction (2023-07-18)": [[274, "cmake-an-introduction-2023-07-18"], [319, "cmake-an-introduction-2023-07-18"]], "Agenda: Python Advanced (2023-10-23 - 2023-10-25)": [[278, "agenda-python-advanced-2023-10-23-2023-10-25"]], "Day 1: Basic Python": [[278, "day-1-basic-python"]], "Datatypes, Datatypes": [[278, "datatypes-datatypes"]], "Day 2: Advanced Python Features": [[278, "day-2-advanced-python-features"]], "Multiprocessing": [[278, "multiprocessing"]], "Day 3: Into The Wild": [[278, "day-3-into-the-wild"]], "Data Science Topics": [[278, "data-science-topics"]], "Group Project: An Idea": [[278, "group-project-an-idea"]], "Jupyter Notebook: Python Advanced": [[280, "Jupyter-Notebook:-Python-Advanced"]], "Agenda: C++: Advanced Topics": [[282, "agenda-c-advanced-topics"]], "constexpr, constinit, consteval": [[282, "constexpr-constinit-consteval"]], "Smart Pointers, And Move Semantics": [[282, "smart-pointers-and-move-semantics"]], "Types, Functions, Type Erasure, Toolcase": [[282, "types-functions-type-erasure-toolcase"]], "Functions (std::function<>, Lambdas)": [[282, "functions-std-function-lambdas"]], "Type Erasure": [[282, "type-erasure"]], "C++ Toolcase": [[282, "c-toolcase"]], "Dynamic Versus Static Typing: Templates": [[282, "dynamic-versus-static-typing-templates"]], "Outlook In >=20": [[282, "outlook-in-20"]], "Attributes And The Like": [[282, "attributes-and-the-like"]], "<algorithm> Overview": [[282, "algorithm-overview"]], "Miscellaneous Miscellaneous": [[282, "miscellaneous-miscellaneous"]], "C++: Advanced Topics": [[283, "c-advanced-topics"]], "C++ For Embedded Developers (Beginning of 2023)": [[284, "c-for-embedded-developers-beginning-of-2023"]], "Python/SAP": [[285, "python-sap"]], "Screenplay Checker": [[286, "screenplay-checker"]], "GPIO: Blinklicht": [[287, "gpio-blinklicht"]], "Commandline": [[287, "commandline"], [292, "commandline"], [817, "commandline"]], "sysfs GPIO": [[287, "sysfs-gpio"]], "Electronic Aspect": [[287, "electronic-aspect"]], "External Circuitry": [[287, "external-circuitry"]], "Raspberry Header Pinout": [[287, "raspberry-header-pinout"]], "Dependencies": [[287, "dependencies"], [288, "dependencies"], [289, "dependencies"], [290, "dependencies"], [292, "dependencies"], [415, "dependencies"], [432, "dependencies"], [446, "dependencies"], [475, "dependencies"], [490, "dependencies"], [492, "dependencies"], [504, "dependencies"], [571, "dependencies"], [577, "dependencies"], [581, "dependencies"], [589, "dependencies"], [591, "dependencies"], [594, "dependencies"], [599, "dependencies"], [607, "dependencies"], [608, "dependencies"], [610, "dependencies"], [612, "dependencies"], [613, "dependencies"], [614, "dependencies"], [615, "dependencies"], [616, "dependencies"], [617, "dependencies"], [618, "dependencies"], [619, "dependencies"], [620, "dependencies"], [621, "dependencies"], [622, "dependencies"], [628, "dependencies"], [635, "dependencies"], [642, "dependencies"], [653, "dependencies"], [677, "dependencies"], [682, "dependencies"], [784, "dependencies"], [785, "dependencies"], [786, "dependencies"], [790, "dependencies"], [804, "dependencies"], [805, "dependencies"], [806, "dependencies"], [825, "dependencies"], [830, "dependencies"], [831, "dependencies"], [834, "dependencies"], [867, "dependencies"], [869, "dependencies"], [876, "dependencies"], [882, "dependencies"], [884, "dependencies"], [892, "dependencies"], [894, "dependencies"], [896, "dependencies"], [911, "dependencies"], [935, "dependencies"], [937, "dependencies"], [938, "dependencies"], [941, "dependencies"], [942, "dependencies"], [963, "dependencies"], [965, "dependencies"], [1011, "dependencies"], [1012, "dependencies"], [1015, "dependencies"], [1016, "dependencies"], [1017, "dependencies"], [1019, "dependencies"], [1020, "dependencies"], [1021, "dependencies"], [1022, "dependencies"], [1023, "dependencies"], [1024, "dependencies"], [1028, "dependencies"], [1029, "dependencies"], [1030, "dependencies"], [1031, "dependencies"], [1032, "dependencies"], [1034, "dependencies"], [1035, "dependencies"], [1036, "dependencies"], [1037, "dependencies"], [1038, "dependencies"], [1039, "dependencies"], [1040, "dependencies"], [1042, "dependencies"], [1043, "dependencies"], [1044, "dependencies"], [1045, "dependencies"], [1046, "dependencies"], [1047, "dependencies"], [1049, "dependencies"], [1050, "dependencies"], [1051, "dependencies"], [1052, "dependencies"], [1068, "dependencies"], [1071, "dependencies"], [1074, "dependencies"], [1078, "dependencies"], [1091, "dependencies"], [908, "dependencies"], [1097, "dependencies"]], "GPIO: Blinklicht Interface": [[288, "gpio-blinklicht-interface"]], "GPIO: Object Oriented Blinklicht": [[289, "gpio-object-oriented-blinklicht"]], "GPIO: Blinklicht Unittests": [[290, "gpio-blinklicht-unittests"]], "ECE19: Exercises and Custom Topics": [[291, "ece19-exercises-and-custom-topics"]], "Reading a File": [[292, "reading-a-file"], [879, "reading-a-file"]], "Output": [[292, "output"]], "2021-05-20 (G2)": [[293, "2021-05-20-(G2)"]], "Reading File in One Big Swoop": [[293, "Reading-File-in-One-Big-Swoop"]], "Reading File in Fixed Sized Chunks": [[293, "Reading-File-in-Fixed-Sized-Chunks"]], "Reading File Line by Line": [[293, "Reading-File-Line-by-Line"]], "Iterating a File": [[293, "Iterating-a-File"]], "String Methods (Needed to Implement the Exercise)": [[293, "String-Methods-(Needed-to-Implement-the-Exercise)"]], "str.strip(), str.rstrip(), str.lstrip()": [[293, "str.strip(),-str.rstrip(),-str.lstrip()"]], "str.split()": [[293, "str.split()"]], "2021-05-21": [[294, "2021-05-21"], [301, "id11"]], "Modules and Packages": [[294, "Modules-and-Packages"], [962, "modules-and-packages"]], "Strings vs.\u00a0Bytes": [[295, "Strings-vs.\u00a0Bytes"]], "Batteries": [[296, "Batteries"]], "Key Value Map": [[296, "Key-Value-Map"]], "Comments vs Documentation": [[296, "Comments-vs-Documentation"]], "Multiline String (btw.)": [[296, "Multiline-String-(btw.)"]], "Integer Numbers (Literals)": [[296, "Integer-Numbers-(Literals)"]], "Arithmetic Operators": [[296, "Arithmetic-Operators"], [345, "arithmetic-operators"], [974, "arithmetic-operators"]], "Wertebereich von Integers": [[296, "Wertebereich-von-Integers"]], "An Example": [[297, "An-Example"], [997, "an-example"]], "Sidenote: Pure Beauty": [[297, "Sidenote:-Pure-Beauty"], [997, "sidenote-pure-beauty"]], "Parameters and Types": [[297, "Parameters-and-Types"], [997, "parameters-and-types"]], "Pitfalls": [[297, "Pitfalls"]], "Cloud Computer, SSH Login": [[298, "cloud-computer-ssh-login"]], "Machine, Logins": [[298, "machine-logins"]], "Login via Secure Shell (SSH)": [[298, "login-via-secure-shell-ssh"]], "Formalit\u00e4ten": [[299, "formalitaten"]], "Embedded Computing 1 (ECE 19)": [[300, "embedded-computing-1-ece-19"]], "Daily Log": [[301, "daily-log"]], "2021-03-04": [[301, "id1"]], "2021-03-05": [[301, "id2"]], "Cheat Sheets": [[301, null]], "2021-03-18": [[301, "id3"]], "2021-03-26": [[301, "id4"]], "2021-04-15": [[301, "id5"]], "2021-04-21": [[301, "id6"]], "Git Intro": [[301, "git-intro"]], "Download and Installation": [[301, null], [306, null]], "2021-04-29": [[301, "id7"]], "2021-05-10": [[301, "id8"]], "Org Stuff": [[301, "org-stuff"]], "Python: Functions": [[301, "python-functions"]], "2021-05-12": [[301, "id9"]], "Python: Walk-Through Passing and Failing an Exam": [[301, "python-walk-through-passing-and-failing-an-exam"]], "2021-05-{19,20}": [[301, "id10"]], "Reiterating on Exercise": [[301, "reiterating-on-exercise"]], "import argparse": [[301, "import-argparse"]], "Exercise digit (Once More)": [[301, "exercise-digit-once-more"]], "2021-06-01": [[301, "id12"]], "sysfs GPIO: Blinking an LED": [[301, "sysfs-gpio-blinking-an-led"]], "2021-06-07": [[301, "id13"]], "Embedded Computing 1 (Deutsch)": [[302, "embedded-computing-1-deutsch"]], "Lehrinhalte": [[302, "lehrinhalte"]], "Lernergebnisse der LV": [[302, "lernergebnisse-der-lv"]], "Empfohlene oder verpflichtende Fachliteratur und andere Lernressourcen bzw. \u2013instrumente": [[302, "empfohlene-oder-verpflichtende-fachliteratur-und-andere-lernressourcen-bzw-instrumente"]], "Art der Vermittlung": [[302, "art-der-vermittlung"]], "Voraussetzungen und Begleitbedingungen": [[302, "voraussetzungen-und-begleitbedingungen"]], "Pr\u00fcfungsmethode und Beurteilungskriterien": [[302, "prufungsmethode-und-beurteilungskriterien"]], "Embedded Computing 1 (English)": [[303, "embedded-computing-1-english"]], "Course Content": [[303, "course-content"]], "Learning Outcome": [[303, "learning-outcome"]], "Recommended or Required Reading and Other Learning Resources / Tools": [[303, "recommended-or-required-reading-and-other-learning-resources-tools"]], "Mode of delivery": [[303, "mode-of-delivery"]], "Prerequisites and Co-Requisites": [[303, "prerequisites-and-co-requisites"]], "Assessment Methods and Criteria": [[303, "assessment-methods-and-criteria"]], "Plan for Summer 2021": [[304, "plan-for-summer-2021"]], "Linux Introduction": [[304, "linux-introduction"]], "Slides": [[304, null], [304, null], [304, null]], "C/C++ Development": [[304, "c-c-development"]], "Python Development": [[304, "python-development"]], "2021-10-07": [[305, "id1"]], "Whose Fault It Is": [[305, "whose-fault-it-is"]], "2021-10-12 (Bringing Newcomers Up-to-Date)": [[306, "bringing-newcomers-up-to-date"]], "Linux/UNIX": [[306, "linux-unix"]], "Git": [[306, "git"]], "2021-10-28": [[307, "id1"]], "Group Project": [[307, "group-project"]], "Discussion of Tasks": [[307, "discussion-of-tasks"]], "TODOs": [[307, "todos"]], "2021-11-15": [[308, "id1"]], "Systems Programming: Files, Directories, Links \u2026": [[308, "systems-programming-files-directories-links"]], "2021-11-29": [[309, "id1"]], "jjjj": [[309, "jjjj"]], "2021-12-1{4,5}": [[310, "id1"]], "Future Topics": [[310, "future-topics"]], "Threading": [[310, "threading"]], "C++ Sideways": [[310, "c-sideways"]], "2022-01-10": [[311, "id1"]], "Scheduling": [[311, "scheduling"], [913, "scheduling"], [914, "scheduling"]], "2022-01-12": [[312, "id1"]], "Scheduling and Realtime": [[312, "scheduling-and-realtime"], [316, "scheduling-and-realtime"]], "2022-02-15": [[313, "id1"]], "Agenda/Log": [[314, "agenda-log"], [315, "agenda-log"]], "Embedded Computing 2 (ECE 19)": [[315, "embedded-computing-2-ece-19"]], "Project Repository": [[315, "project-repository"]], "Test Material": [[315, "test-material"]], "Exam Material Overview": [[316, "exam-material-overview"]], "Questions": [[316, "questions"], [316, "id1"], [608, "questions"], [790, "questions"], [804, "questions"], [805, "questions"], [830, "questions"], [937, "questions"]], "Slide Material": [[316, "slide-material"], [316, "id2"]], "Embedded Computing 1+2, ECE 19": [[317, "embedded-computing-1-2-ece-19"]], "Training Material: Overview and Download": [[320, "training-material-overview-and-download"]], "Installation": [[321, "installation"], [874, "installation"], [1009, "installation"], [1074, "installation"], [1099, "installation"]], "On Windows": [[321, "on-windows"]], "On Linux": [[321, "on-linux"]], "The Book (1)": [[322, "the-book-1"]], "The Book (2)": [[322, "the-book-2"]], "The Beginning": [[322, "the-beginning"]], "Cool Guys and Their Hobby": [[322, "cool-guys-and-their-hobby"]], "History of UNIX": [[322, "history-of-unix"]], "My First Program (1)": [[323, "my-first-program-1"]], "My First Program (2)": [[323, "my-first-program-2"]], "Character Arrays - Strings": [[323, "character-arrays-strings"]], "Variables and Arithmetic": [[324, "variables-and-arithmetic"]], "My Second Program (1)": [[324, "my-second-program-1"]], "My Second Program (2)": [[324, "my-second-program-2"]], "My Second Program (3)": [[324, "my-second-program-3"]], "My Second Program (4)": [[324, "my-second-program-4"]], "Exercise: A Better Fahrenheit Table": [[325, "exercise-a-better-fahrenheit-table"]], "for: Loop Simplification (1)": [[326, "for-loop-simplification-1"]], "for: Loop Simplification (2)": [[326, "for-loop-simplification-2"]], "Second Program, revisited": [[326, "second-program-revisited"]], "Exercise: Fahrenheit Table Using for": [[327, "exercise-fahrenheit-table-using-for"]], "Symbolic Constants": [[328, "symbolic-constants"]], "C Preprocessor: Symbolic Constants": [[328, "c-preprocessor-symbolic-constants"]], "Exercise: Fahrenheit Table Using Macros": [[329, "exercise-fahrenheit-table-using-macros"]], "Character I/O": [[330, "character-i-o"]], "The Outside World": [[330, "the-outside-world"]], "cat for the Poor (1)": [[330, "cat-for-the-poor-1"]], "cat for the Poor (2)": [[330, "cat-for-the-poor-2"]], "More Examples \u2026": [[330, "more-examples"]], "More Examples - if": [[330, "more-examples-if"]], "if, Formally": [[330, "if-formally"]], "Operators, Formally": [[330, "operators-formally"]], "Exercise: wc For The Poor": [[331, "exercise-wc-for-the-poor"]], "Arrays": [[332, "arrays"]], "Array Definition, Explicit Initialization": [[332, "array-definition-explicit-initialization"]], "Array Access": [[332, "array-access"]], "Discussion: Initialization": [[332, "discussion-initialization"]], "Discussion: if, else": [[332, "discussion-if-else"]], "Array Initializer": [[332, "array-initializer"]], "Discussion: Initializer": [[332, "discussion-initializer"]], "Initialization using memset()": [[332, "initialization-using-memset"]], "Discussion: memset()": [[332, "discussion-memset"]], "Exercise: Character Histogram": [[333, "exercise-character-histogram"]], "A Nonsensical Example": [[334, "a-nonsensical-example"]], "Function Signature": [[334, "function-signature"]], "Discussion": [[334, "discussion"]], "Definition vs. Declaration (1)": [[334, "definition-vs-declaration-1"]], "Definition vs. Declaration (2)": [[334, "definition-vs-declaration-2"]], "By Value / By Reference": [[334, "by-value-by-reference"]], "Exercise: Forward Declaration": [[335, "exercise-forward-declaration"]], "Character Arrays": [[336, "character-arrays"]], "Strings: Mistake by Design?": [[336, "strings-mistake-by-design"]], "Strings: Definition": [[336, "strings-definition"]], "Strings: Library Functions": [[336, "strings-library-functions"]], "Strings as Parameters": [[336, "strings-as-parameters"]], "Strings: Dangers": [[336, "strings-dangers"]], "Exercise: Read Line Into String from stdin": [[337, "exercise-read-line-into-string-from-stdin"]], "Lifetime of Variables": [[338, "lifetime-of-variables"]], "Lifetime": [[338, "lifetime"]], "Global Variables": [[338, "global-variables"], [512, "global-variables"]], "Global Variables: How?": [[338, "global-variables-how"]], "Type System": [[340, "type-system"]], "Variable Names": [[341, "variable-names"]], "Variable- and Function Names": [[341, "variable-and-function-names"]], "Data Types, Sizes": [[342, "data-types-sizes"]], "Standard Data Types And Their Sizes": [[342, "standard-data-types-and-their-sizes"]], "Integer Variants (\u201cQualifiers\u201d)": [[342, "integer-variants-qualifiers"]], "Widths": [[342, "widths"]], "Constants": [[343, "constants"]], "Constants and Types": [[343, "constants-and-types"]], "Character Constants: Escape Sequences": [[343, "character-constants-escape-sequences"]], "String Constants": [[343, "string-constants"]], "Character vs. String Constants": [[343, "character-vs-string-constants"]], "Symbolic Constants (1)": [[343, "symbolic-constants-1"]], "Symbolic Constants (2)": [[343, "symbolic-constants-2"]], "Variable Definitions": [[344, "variable-definitions"]], "Definitions und Initialization": [[344, "definitions-und-initialization"]], "Initialization of Automatic Variables": [[344, "initialization-of-automatic-variables"]], "Initialization of Global Variables": [[344, "initialization-of-global-variables"]], "Arithmetic Operators (1)": [[345, "arithmetic-operators-1"]], "Arithmetic Operators (2)": [[345, "arithmetic-operators-2"]], "Relational and Logical Operators": [[346, "relational-and-logical-operators"]], "Relational Operators (1)": [[346, "relational-operators-1"]], "Relational Operators (2)": [[346, "relational-operators-2"]], "Logical (Boolean) Operators": [[346, "logical-boolean-operators"]], "Boolean Operators: Short-Circuit": [[346, "boolean-operators-short-circuit"]], "Type Conversions": [[347, "type-conversions"]], "Implicit Type Conversions": [[347, "implicit-type-conversions"]], "Sign Bugs": [[347, "sign-bugs"]], "Truncation": [[347, "truncation"]], "Sign Propagation": [[347, "sign-propagation"]], "Conversion Using Operators": [[347, "conversion-using-operators"]], "Conversion and unsigned (1)": [[347, "conversion-and-unsigned-1"]], "Conversion and unsigned (2)": [[347, "conversion-and-unsigned-2"]], "Compiler Warnings": [[347, "compiler-warnings"]], "Last Warning": [[347, "last-warning"], [907, "last-warning"]], "Forced Conversion - Cast": [[347, "forced-conversion-cast"]], "Increment, Decrement": [[348, "increment-decrement"]], "Confusion: ++, --": [[348, "confusion"]], "Confused to perfection (1)": [[348, "confused-to-perfection-1"]], "Confused to perfection (2)": [[348, "confused-to-perfection-2"]], "Exercise: Copy and Reduce String": [[349, "exercise-copy-and-reduce-string"]], "Bit-Operators": [[350, "bit-operators"]], "Bit Manipulation": [[350, "bit-manipulation"]], "Bitwise AND and OR": [[350, "bitwise-and-and-or"]], "Bitwise XOR": [[350, "bitwise-xor"]], "Shift Left": [[350, "shift-left"]], "Shift Right": [[350, "shift-right"]], "Inverting (\u201cOne\u2019s-Complement\u201d)": [[350, "inverting-one-s-complement"]], "Assignment with Calculation": [[351, "assignment-with-calculation"]], "Combined Operators": [[351, "combined-operators"]], "?: - Conditional Expression": [[352, "conditional-expression"]], "?: - Conditional Expression (1)": [[352, "conditional-expression-1"]], "?: - Conditional Expression (2)": [[352, "conditional-expression-2"]], "Precedence, Associativity": [[353, "precedence-associativity"]], "Summary: Operators": [[353, "summary-operators"]], "Operators: Precedence und Associativity (1)": [[353, "operators-precedence-und-associativity-1"]], "Operators: Precedence und Associativity (2)": [[353, "operators-precedence-und-associativity-2"]], "More Warnings": [[353, "more-warnings"]], "Statements and Blocks": [[355, "statements-and-blocks"]], "Statement vs. Block": [[355, "statement-vs-block"]], "if - else": [[356, "if-else"]], "Branches": [[356, "branches"]], "True or False? What is Truth?": [[356, "true-or-false-what-is-truth"]], "else is optional (1)": [[356, "else-is-optional-1"]], "else is optional (2)": [[356, "else-is-optional-2"]], "else - if": [[357, "else-if"]], "Style Matters": [[357, "style-matters"]], "switch": [[358, "switch"], [358, "id1"]], "Case Distinctions": [[358, "case-distinctions"]], "if - else if vs. switch": [[358, "if-else-if-vs-switch"]], "Loops: while and for": [[359, "loops-while-and-for"]], "while: general purpose loop": [[359, "while-general-purpose-loop"]], "From while to for (1)": [[359, "from-while-to-for-1"]], "From while to for (2)": [[359, "from-while-to-for-2"]], "for, a Little Closer": [[359, "for-a-little-closer"]], "Comma Operator": [[359, "comma-operator"]], "for: Infamous Idioms": [[359, "for-infamous-idioms"]], "Loops: do - while": [[360, "loops-do-while"]], "do - while: Condition After Body": [[360, "do-while-condition-after-body"]], "goto and Labels": [[362, "goto-and-labels"]], "Structured Programming vs. goto": [[362, "structured-programming-vs-goto"]], "goto: Definition": [[362, "goto-definition"]], "goto: Use Cases": [[362, "goto-use-cases"]], "Nesting": [[364, "nesting"]], "Declaration vs. Definition": [[364, "declaration-vs-definition"]], "A Monolithic Program": [[364, "a-monolithic-program"]], "Separate Compilation": [[364, "separate-compilation"]], "Extern/Global Variables": [[365, "extern-global-variables"]], "Variables: Declaration and Definition": [[365, "variables-declaration-and-definition"]], "Variables: Separating Declaration from Definition (1)": [[365, "variables-separating-declaration-from-definition-1"]], "Variables: Separating Declaration from Definition (2)": [[365, "variables-separating-declaration-from-definition-2"]], "Header Files": [[366, "header-files"]], "Declarations: Problems (1)": [[366, "declarations-problems-1"]], "Declarations: Problems (2)": [[366, "declarations-problems-2"]], "Declarations: Solutions": [[366, "declarations-solutions"]], "Static Variables": [[367, "static-variables"]], "Lifetime and Visibility (1)": [[367, "lifetime-and-visibility-1"]], "Automatic Variables": [[367, "automatic-variables"]], "Local static Variable": [[367, "local-static-variable"]], "Global static Variable": [[367, "global-static-variable"]], "Global Variable": [[367, "global-variable"], [996, "global-variable"]], "C Preprocessor: Basics": [[368, "c-preprocessor-basics"]], "#include": [[368, "include"]], "Macros: Text Replacement": [[368, "macros-text-replacement"]], "Macros: Constant Definition": [[368, "macros-constant-definition"]], "Macros: Inline Replacement as Function Call (1)": [[368, "macros-inline-replacement-as-function-call-1"]], "Macros: Inline Replacement as Function Call (2)": [[368, "macros-inline-replacement-as-function-call-2"]], "Include Guards (1)": [[368, "include-guards-1"]], "Include Guards (2)": [[368, "include-guards-2"]], "The C Preprocessor: Last Words": [[368, "the-c-preprocessor-last-words"], [369, "the-c-preprocessor-last-words"]], "C Preprocessor: More": [[369, "c-preprocessor-more"]], "Conditional Compilation: Rules": [[369, "conditional-compilation-rules"]], "Conditional Compilation: Examples": [[369, "conditional-compilation-examples"]], "Conditional Compilation: Last Words": [[369, "conditional-compilation-last-words"]], "Macros: Spanning Multiple Lines": [[369, "macros-spanning-multiple-lines"]], "Macros: Multiple Statements as One Statement (1)": [[369, "macros-multiple-statements-as-one-statement-1"]], "Macros: Multiple Statements as One Statement (2)": [[369, "macros-multiple-statements-as-one-statement-2"]], "Stringification (1)": [[369, "stringification-1"]], "Stringification (2)": [[369, "stringification-2"]], "Token Pasting (1)": [[369, "token-pasting-1"]], "Token Pasting (2)": [[369, "token-pasting-2"]], "Warnings and Errors": [[369, "warnings-and-errors"]], "Predefined Macros (1)": [[369, "predefined-macros-1"]], "Pointers and Addresses": [[371, "pointers-and-addresses"]], "Pointers: Basics": [[371, "pointers-basics"]], "Pointer: Operators": [[371, "pointer-operators"]], "More Examples": [[371, "more-examples"]], "Pointers as Function Parameters": [[372, "pointers-as-function-parameters"]], "Call by Reference (1)": [[372, "call-by-reference-1"]], "Call by Reference (2)": [[372, "call-by-reference-2"]], "Exercise: Function That Swaps Two Variables": [[373, "exercise-function-that-swaps-two-variables"]], "Pointers and Arrays": [[374, "pointers-and-arrays"], [376, "pointers-and-arrays"]], "It\u2019s Only Memory": [[374, "it-s-only-memory"]], "Conversion Array \u27f6 Pointer": [[374, "conversion-array-longrightarrow-pointer"]], "Pointer Arithmetic (1)": [[374, "pointer-arithmetic-1"]], "Pointer Arithmetic (2)": [[374, "pointer-arithmetic-2"]], "Pointer Arithmetic (3)": [[374, "pointer-arithmetic-3"]], "Pointer Arithmetic: Difference": [[374, "pointer-arithmetic-difference"]], "Pointer Arithmetic: Array Algorithms": [[374, "pointer-arithmetic-array-algorithms"]], "Pointer Arithmetic: Jump Width? (1)": [[374, "pointer-arithmetic-jump-width-1"]], "Pointer Arithmetic: Jump Width? (2)": [[374, "pointer-arithmetic-jump-width-2"]], "Pointer Arithmetic: Arbitrary Datatypes": [[374, "pointer-arithmetic-arbitrary-datatypes"]], "See also": [[375, null], [788, null], [793, null], [793, null], [794, null], [794, null], [794, null], [799, null], [800, null], [883, null], [910, null], [913, null], [917, null], [919, null], [998, null]], "main() Can Take Parameters": [[375, "main-can-take-parameters"]], "struct: Basics": [[377, "struct-basics"]], "struct: Compound Datatypes": [[377, "struct-compound-datatypes"]], "struct: How?": [[377, "struct-how"]], "Usage": [[377, "usage"], [567, "usage"], [574, "usage"]], "Nested Structures": [[377, "nested-structures"]], "Memory Layout": [[377, "memory-layout"]], "Recursive Structures?": [[377, "recursive-structures"]], "struct: Functions": [[378, "struct-functions"]], "Parameters and Return (1)": [[378, "parameters-and-return-1"]], "Parameters and Return (2)": [[378, "parameters-and-return-2"]], "Parameters and Return (3)": [[378, "parameters-and-return-3"]], "typedef: Type Alias": [[379, "typedef-type-alias"]], "Alias for Type Names": [[379, "alias-for-type-names"]], "Dynamic Memory": [[381, "dynamic-memory"], [381, "id1"]], "Stack and Global Memory": [[381, "stack-and-global-memory"]], "Dynamic Memory - Usage": [[381, "dynamic-memory-usage"]], "Singly Linked List": [[382, "singly-linked-list"]], "Exercises (1)": [[382, "exercises-1"]], "Exercises (2)": [[382, "exercises-2"]], "Exercises (3)": [[382, "exercises-3"]], "Exercises (4)": [[382, "exercises-4"]], "Exercises (5)": [[382, "exercises-5"]], "Exercises (6)": [[382, "exercises-6"]], "Exercises (7)": [[382, "exercises-7"]], "Exercises (8)": [[382, "exercises-8"]], "Exercises (9)": [[382, "exercises-9"]], "Exercises (10)": [[382, "exercises-10"]], "Exercises (11)": [[382, "exercises-11"]], "Volatile": [[384, "volatile"]], "volatile: The Lie (1)": [[384, "volatile-the-lie-1"]], "volatile: The Lie (2)": [[384, "volatile-the-lie-2"]], "volatile: Valid Use: Hardware": [[384, "volatile-valid-use-hardware"]], "volatile: Valid Use: Unix Signal Handlers": [[384, "volatile-valid-use-unix-signal-handlers"]], "Compiler Intrinsics": [[385, "compiler-intrinsics"]], "Atomic Memory Access": [[385, "atomic-memory-access"]], "Atomic Memory Access: Load/Modify/Store": [[385, "atomic-memory-access-load-modify-store"]], "Load/Modify/Store: Mutex": [[385, "load-modify-store-mutex"]], "Atomic Instructions": [[385, "atomic-instructions"], [902, "atomic-instructions"]], "More GCC \u201cBuiltins\u201d": [[385, "more-gcc-builtins"]], "Alignment": [[386, "alignment"]], "Data Alignment": [[386, "data-alignment"]], "Data Alignment, Compilers": [[386, "data-alignment-compilers"]], "Unaligned Data Access (1)": [[386, "unaligned-data-access-1"]], "Unaligned Data Access (2)": [[386, "unaligned-data-access-2"]], "Padding (1)": [[386, "padding-1"]], "Padding (2)": [[386, "padding-2"]], "Padding (3)": [[386, "padding-3"]], "Padding (4)": [[386, "padding-4"]], "Structure Alignment (1)": [[386, "structure-alignment-1"]], "Structure Alignment (2)": [[386, "structure-alignment-2"]], "And Arrays? (1)": [[386, "and-arrays-1"]], "And Arrays? (2)": [[386, "and-arrays-2"]], "And Arrays? (3)": [[386, "and-arrays-3"]], "Sanity and Readabilty": [[388, "sanity-and-readabilty"]], "Shooting Offense: Unobvious Solution": [[388, "shooting-offense-unobvious-solution"]], "Shooting Offense: Unobvious Problem": [[388, "shooting-offense-unobvious-problem"]], "Shooting Offenses": [[388, "shooting-offenses"]], "Ambiguity": [[388, "ambiguity"]], "Readability": [[388, "readability"]], "Code Smells": [[388, "code-smells"]], "Know Your Integers": [[389, "know-your-integers"]], "Standard Data Types: size_t (1)": [[389, "standard-data-types-size-t-1"]], "Standard Data Types: size_t (2)": [[389, "standard-data-types-size-t-2"]], "Discrete Values - enum": [[390, "discrete-values-enum"], [390, "id1"]], "Discrete Values": [[390, "discrete-values"]], "Discrete Values - Traditional Approach (1)": [[390, "discrete-values-traditional-approach-1"]], "Discrete Values - Traditional Approach (2)": [[390, "discrete-values-traditional-approach-2"]], "Discrete Values - Wishlist": [[390, "discrete-values-wishlist"]], "Discrete Values - enum and switch": [[390, "discrete-values-enum-and-switch"], [390, "id2"]], "Discrete Values - Close to Perfection": [[390, "discrete-values-close-to-perfection"]], "Visibility - static": [[391, "visibility-static"]], "Visibility": [[391, "visibility"]], "A Somewhat Contrived Example (1)": [[391, "a-somewhat-contrived-example-1"]], "A Somewhat Contrived Example (2)": [[391, "a-somewhat-contrived-example-2"]], "The static Keyword (Hooray!)": [[391, "the-static-keyword-hooray"]], "Correctness - const": [[392, "correctness-const"]], "Non-Modifiable Memory (1)": [[392, "non-modifiable-memory-1"]], "Non-Modifiable Memory (2)": [[392, "non-modifiable-memory-2"]], "The const Keyword (1)": [[392, "the-const-keyword-1"]], "The const Keyword (2)": [[392, "the-const-keyword-2"]], "const Variables": [[392, "const-variables"]], "const Parameters (1)": [[392, "const-parameters-1"]], "const Parameters (2)": [[392, "const-parameters-2"]], "Pointers, Pointers, Pointers \u2026 (1)": [[392, "pointers-pointers-pointers-1"]], "Pointers, Pointers, Pointers \u2026 (2)": [[392, "pointers-pointers-pointers-2"]], "Pointers, Pointers, Pointers \u2026 (3)": [[392, "pointers-pointers-pointers-3"]], "Pointers, Pointers, Pointers \u2026 (4)": [[392, "pointers-pointers-pointers-4"]], "Pointers, Pointers, Pointers \u2026 (5)": [[392, "pointers-pointers-pointers-5"]], "Pointers, Pointers, Pointers \u2026 (6)": [[392, "pointers-pointers-pointers-6"]], "Pointers, Pointers, Pointers \u2026 (7)": [[392, "pointers-pointers-pointers-7"]], "Pointers, Pointers, Pointers \u2026 (8)": [[392, "pointers-pointers-pointers-8"]], "Pointers, Pointers, Pointers \u2026 (9)": [[392, "pointers-pointers-pointers-9"]], "Struct Initialization": [[393, "struct-initialization"]], "Good Old Struct Initialization": [[393, "good-old-struct-initialization"]], "C99 Designated Initializer": [[393, "c99-designated-initializer"]], "Explict Type Safety": [[394, "explict-type-safety"]], "Integer Types Are Ambiguous": [[394, "integer-types-are-ambiguous"]], "Example: Ambiguous Error Schemes (1)": [[394, "example-ambiguous-error-schemes-1"]], "Example: Ambiguous Error Schemes (2)": [[394, "example-ambiguous-error-schemes-2"]], "Example: Ambiguous Error Schemes (3)": [[394, "example-ambiguous-error-schemes-3"]], "Artificial Integer Type Safety": [[394, "artificial-integer-type-safety"]], "Error Schemes, Revisited": [[394, "error-schemes-revisited"]], "Error Schemes: Encapsulating Unix Details": [[394, "error-schemes-encapsulating-unix-details"]], "Error Schemes: Using Encapsulated Stuff": [[394, "error-schemes-using-encapsulated-stuff"]], "Wrap-Up: Artificial Type Safety": [[394, "wrap-up-artificial-type-safety"]], "valgrind": [[395, "valgrind"]], "Valgrind": [[395, "id1"]], "Valgrind in Action (1)": [[395, "valgrind-in-action-1"]], "Valgrind in Action (2)": [[395, "valgrind-in-action-2"]], "Valgrind in Action (3)": [[395, "valgrind-in-action-3"]], "Valgrind: more \u2026": [[395, "valgrind-more"]], "Optimization": [[397, "optimization"]], "Optimization - Introduction": [[397, "optimization-introduction"]], "Compute Bound or IO Bound? (1)": [[397, "compute-bound-or-io-bound-1"]], "Compute Bound or IO Bound? (2)": [[397, "compute-bound-or-io-bound-2"]], "Compute Bound or IO Bound? (3)": [[397, "compute-bound-or-io-bound-3"]], "What to do Next?": [[397, "what-to-do-next"]], "Optimizations: Compute Bound Code": [[398, "optimizations-compute-bound-code"]], "Many Ways of Optimization": [[398, "many-ways-of-optimization"]], "Unnecessary Optimizations": [[398, "unnecessary-optimizations"]], "Inlining (1)": [[398, "inlining-1"]], "Inlining (2)": [[398, "inlining-2"]], "Inlining (3)": [[398, "inlining-3"]], "Register Allocation (1)": [[398, "register-allocation-1"]], "Register Allocation (2)": [[398, "register-allocation-2"]], "Peephole Optimization": [[398, "peephole-optimization"]], "Peephole Optimization: Common Subexpression Elimination": [[398, "peephole-optimization-common-subexpression-elimination"]], "Peephole Optimization: Strength Reduction": [[398, "peephole-optimization-strength-reduction"]], "Peephole Optimization: Constant Folding": [[398, "peephole-optimization-constant-folding"]], "Loop Invariants": [[398, "loop-invariants"]], "Loop Unrolling": [[398, "loop-unrolling"]], "Tail Call Optimization": [[398, "tail-call-optimization"]], "CPU Optimization, Last Words": [[398, "cpu-optimization-last-words"]], "GCC: Optimization \u201cLevels\u201d": [[398, "gcc-optimization-levels"]], "Further Reading": [[398, "further-reading"]], "Optimizations: Memory Optimizations": [[399, "optimizations-memory-optimizations"]], "Memory: Caches": [[399, "memory-caches"]], "Locality of reference": [[399, "locality-of-reference"]], "Multidimensional Arrays": [[399, "multidimensional-arrays"]], "Multidimensional Arrays: Cache Thrashing": [[399, "multidimensional-arrays-cache-thrashing"]], "Multidimensional Arrays: Forward Indexing": [[399, "multidimensional-arrays-forward-indexing"]], "Profiling - Famous Words": [[401, "profiling-famous-words"]], "Donald E. Knuth": [[401, null]], "Tony Hoare": [[401, null]], "Larry Wall": [[401, null]], "The Practice of Programming, Brian W. Kernighan and\n             Rob Pike": [[401, null]], "Profiling - Introduction": [[401, "profiling-introduction"]], "GNU Profiler - gprof": [[402, "gnu-profiler-gprof"]], "gprof - How it Works": [[402, "gprof-how-it-works"]], "Using gprof": [[402, "using-gprof"]], "gprof: Flat Profile": [[402, "gprof-flat-profile"]], "gprof: Call Graph": [[402, "gprof-call-graph"]], "gprof: Interpreting The Results": [[402, "gprof-interpreting-the-results"]], "gprof: Visualization": [[402, "gprof-visualization"]], "callgrind": [[403, "callgrind"]], "callgrind - How it Works": [[403, "callgrind-how-it-works"]], "callgrind - How it is Used": [[403, "callgrind-how-it-is-used"]], "callgrind - Analysis Per Commandline": [[403, "callgrind-analysis-per-commandline"]], "callgrind - Analysis With kcachegrind": [[403, "callgrind-analysis-with-kcachegrind"]], "callgrind - Useful Options": [[403, "callgrind-useful-options"]], "oprofile": [[404, "oprofile"]], "oprofile - How it Works": [[404, "oprofile-how-it-works"]], "oprofile - Basic Usage (1)": [[404, "oprofile-basic-usage-1"]], "oprofile - Basic Usage (2)": [[404, "oprofile-basic-usage-2"]], "oprofile - Too Much Information": [[404, "oprofile-too-much-information"]], "oprofile - Call Graph": [[404, "oprofile-call-graph"]], "oprofile - Kernel Symbols (1)": [[404, "oprofile-kernel-symbols-1"]], "oprofile - Kernel Symbols (2)": [[404, "oprofile-kernel-symbols-2"]], "oprofile - Kernel Modules": [[404, "oprofile-kernel-modules"]], "oprofile - System-Wide Profiling": [[404, "oprofile-system-wide-profiling"]], "oprofile - Offline Profiling": [[404, "oprofile-offline-profiling"]], "oprofile - Graphical Beauty": [[404, "oprofile-graphical-beauty"]], "The C Programming Language": [[406, "the-c-programming-language"]], "Group Description": [[406, "group-description"], [534, "group-description"], [624, "group-description"], [666, "group-description"], [667, "group-description"], [707, "group-description"], [709, "group-description"], [851, "group-description"], [859, "group-description"], [860, "group-description"], [339, "group-description"], [354, "group-description"], [363, "group-description"], [370, "group-description"], [376, "group-description"], [380, "group-description"], [383, "group-description"], [387, "group-description"], [396, "group-description"], [400, "group-description"], [405, "group-description"], [526, "group-description"], [549, "group-description"], [552, "group-description"], [555, "group-description"], [596, "group-description"], [605, "group-description"], [691, "group-description"], [699, "group-description"], [703, "group-description"], [914, "group-description"]], "Messages From The Book": [[407, "messages-from-the-book"]], "What\u2019s There? What Have We Accomplished?": [[408, "what-s-there-what-have-we-accomplished"]], "Rules? Why Rules?": [[408, "rules-why-rules"]], "Coding Style": [[408, "coding-style"]], "Disclaimer": [[408, null]], "Design Principles: SOLID": [[408, "design-principles-solid"]], "Another One: YAGNI": [[408, "another-one-yagni"]], "Architecture": [[408, "architecture"]], "Project Management: Traditional": [[408, "project-management-traditional"]], "Project Management: Software": [[408, "project-management-software"]], "So What?": [[408, "so-what"]], "Is Software A Craft? Software Is A Craft! \u27f6 Clean Code": [[409, "is-software-a-craft-software-is-a-craft-longrightarrow-clean-code"]], "Uncle Bob": [[409, "uncle-bob"]], "A Typical Project (Livehacking Screenplay: My Own Bookkeeping Effort)": [[410, "a-typical-project-livehacking-screenplay-my-own-bookkeeping-effort"]], "Spaghetti Version": [[410, "spaghetti-version"]], "A Little Better: Functions (And Commandline Parameters)": [[410, "a-little-better-functions-and-commandline-parameters"]], "Feature Request: Concatenate Input Data From Multiple CSV Files": [[410, "feature-request-concatenate-input-data-from-multiple-csv-files"]], "Feature Request: Concatenate Input Data From YYYY-MM.csv Files": [[410, "feature-request-concatenate-input-data-from-yyyy-mm-csv-files"]], "Where Are We? Questions!": [[410, "where-are-we-questions"]], "Testability: Input Cleaning": [[410, "testability-input-cleaning"]], "Testability: Reading Input (One Or Multiple Files, Explicitly)": [[410, "testability-reading-input-one-or-multiple-files-explicitly"]], "Test Sanity: Common Code": [[410, "test-sanity-common-code"]], "Testability: Reading Input From Directory": [[410, "testability-reading-input-from-directory"]], "Testability: Categorization": [[410, "testability-categorization"]], "Safety Net In Place \u27f6 Refactoring Categorization": [[410, "safety-net-in-place-longrightarrow-refactoring-categorization"]], "Refactoring Input Reading (\u27f6 Overengineering)": [[410, "refactoring-input-reading-longrightarrow-overengineering"]], "Basics: Boilerplate, And Executables": [[411, "basics-boilerplate-and-executables"]], "Single Monolithic Executable": [[411, "single-monolithic-executable"]], "Building With CMake": [[411, "building-with-cmake"]], "Building With CMake: Separate Source And Build Directories": [[411, "building-with-cmake-separate-source-and-build-directories"]], "Executables Consisting Of Multiple Sources": [[411, "executables-consisting-of-multiple-sources"]], "Problem: Duplicate Compilation": [[411, "problem-duplicate-compilation"]], "Problem: More Functionality": [[411, "problem-more-functionality"]], "Solution: Libraries": [[411, "solution-libraries"], [949, "solution-libraries"]], "\u201cConfigured\u201d Header Files": [[412, "configured-header-files"]], "Problem": [[412, "problem"], [420, "problem"], [426, "problem"], [427, "problem"], [428, "problem"], [431, "problem"], [437, "problem"], [481, "problem"], [747, "problem"], [878, "problem"], [1064, "problem"]], "Configured Files": [[412, "configured-files"]], "Use In Compiled Code": [[412, "use-in-compiled-code"]], "C++, Debug/Release, CMake \u201cProgramming\u201d, Rants": [[413, "c-debug-release-cmake-programming-rants"]], "Pause": [[413, "pause"]], "Class Diagram": [[413, "class-diagram"]], "C++ Standard Version": [[413, "c-standard-version"]], "Debug Vs. Release Builds: CMAKE_BUILD_TYPE": [[413, "debug-vs-release-builds-cmake-build-type"]], "Compiler Type": [[413, "compiler-type"]], "Strings And Lists": [[413, "strings-and-lists"]], "MESSAGE() (A.k.a printf() Debugging)": [[413, "message-a-k-a-printf-debugging"]], "MESSAGE(): Popular \u201cModes\u201d": [[413, "message-popular-modes"]], "FIND_PACKAGE()": [[414, "find-package"]], "FIND_PACKAGE(... REQUIRED)": [[414, "find-package-required"]], "SQLite3 Parameters": [[414, "sqlite3-parameters"]], "Using SQLite3 Parameters": [[414, "using-sqlite3-parameters"]], "Demo Time": [[414, "demo-time"]], "CMake: An Introduction": [[415, "cmake-an-introduction"]], "Installation (\u201cDeployment\u201d)": [[416, "installation-deployment"]], "\u201cPrefix\u201d: Where Everything Comes Together": [[416, "prefix-where-everything-comes-together"]], "Installing Targets": [[416, "installing-targets"]], "Doing The Installation (make install)": [[416, "doing-the-installation-make-install"]], "And Shared Libraries?": [[416, "and-shared-libraries"]], "Shared Libraries: Installed Vs. Local (RUNPATH)": [[416, "shared-libraries-installed-vs-local-runpath"]], "Shared Libraries: ABI Versions": [[416, "shared-libraries-abi-versions"]], "Libraries, And Dependencies": [[417, "libraries-and-dependencies"]], "Libraries And Executables": [[417, "libraries-and-executables"]], "Targets And Dependencies": [[417, "targets-and-dependencies"]], "Visualizing Dependencies": [[417, "visualizing-dependencies"]], "Optional Code, Approach 1: Optional blacklist, C Macro  (Global Flags)": [[418, "optional-code-approach-1-optional-blacklist-c-macro-global-flags"]], "Optional blacklist, C Macro": [[418, "optional-blacklist-c-macro"]], "Optional Dependency In libhello": [[418, "optional-dependency-in-libhello"]], "Optional Dependency In libhello Header File": [[418, "optional-dependency-in-libhello-header-file"]], "Optional Dependency In libhello CPP File": [[418, "optional-dependency-in-libhello-cpp-file"]], "Good Or Bad?": [[418, "good-or-bad"], [419, "good-or-bad"]], "Optional Code, Approach 2: Pushing Optionality Down In Module Interface": [[419, "optional-code-approach-2-pushing-optionality-down-in-module-interface"]], "Remove Too Much CMake Optionality": [[419, "remove-too-much-cmake-optionality"]], "TARGET_COMPILE_DEFINITIONS() (backlist Availablility)": [[419, "target-compile-definitions-backlist-availablility"]], "Push Optionality Down In blacklist (\u27f6 INTERFACE Targets)": [[419, "push-optionality-down-in-blacklist-longrightarrow-interface-targets"]], "Optional Code: Problem Definition, OPTION()": [[420, "optional-code-problem-definition-option"]], "Solution: Add An Option": [[420, "solution-add-an-option"]], "Define Option USE_BLACKLIST; Option Usage, Cache": [[420, "define-option-use-blacklist-option-usage-cache"]], "Option Handling: Many Approaches": [[420, "option-handling-many-approaches"]], "Shared Libraries (Preview)": [[421, "shared-libraries-preview"]], "\u201cNormal\u201d Libraries": [[421, "normal-libraries"]], "Building Shared Libraries": [[421, "building-shared-libraries"]], "More About Loading": [[421, "more-about-loading"]], "Structure - Subdirectories, Dependencies, and Include Paths": [[422, "structure-subdirectories-dependencies-and-include-paths"]], "Reorganization": [[422, "reorganization"]], "Dependencies, And Target Properties": [[422, "dependencies-and-target-properties"]], "Targets, Properties, And More": [[423, "targets-properties-and-more"]], "Target Types": [[423, "target-types"]], "Properties: PRIVATE, PUBLIC, INTERFACE?": [[423, "properties-private-public-interface"]], "Running Tests": [[424, "running-tests"], [1092, "running-tests"]], "Setup And Usage": [[424, "setup-and-usage"]], "Add Simple Test": [[424, "add-simple-test"]], "Checking Test Output": [[424, "checking-test-output"]], "Questionability": [[424, "questionability"]], "C++ Code": [[425, "c-code"]], "Abstract Factory": [[426, "abstract-factory"]], "I2C Sensor Subhierarchy": [[426, "i2c-sensor-subhierarchy"]], "Problem: I2C Sensor Instantiation": [[426, "problem-i2c-sensor-instantiation"]], "Solution: Factory Objects": [[426, "solution-factory-objects"]], "Requirements": [[426, "requirements"], [450, "requirements"], [503, "requirements"]], "Notes": [[426, "notes"]], "Adapter": [[427, "adapter"]], "Solution: Adaptation": [[427, "solution-adaptation"]], "Basic Adaptation": [[427, "basic-adaptation"]], "Adapter Must Be-A Sensor": [[427, "adapter-must-be-a-sensor"]], "Adaptee Can Be-Any ASensor": [[427, "adaptee-can-be-any-asensor"]], "Adapter Is Doing Real Measurements": [[427, "adapter-is-doing-real-measurements"]], "Command": [[428, "command"]], "Motivation": [[428, "motivation"], [431, "motivation"], [447, "motivation"], [448, "motivation"], [544, "motivation"], [641, "motivation"], [643, "motivation"], [668, "motivation"], [674, "motivation"], [969, "motivation"], [975, "motivation"]], "Step 1: Basic insert()": [[428, "step-1-basic-insert"]], "Step 2: Basic find()": [[428, "step-2-basic-find"]], "Step 3: drop()": [[428, "step-3-drop"]], "Step 4: Handle find() Errors": [[428, "step-4-handle-find-errors"]], "Step 5: Handle insert() Errors": [[428, "step-5-handle-insert-errors"]], "Step 6: Bulk Insert?": [[428, "step-6-bulk-insert"]], "Step 6a: Bulk Insert Using std::initializer_list?": [[428, "step-6a-bulk-insert-using-std-initializer-list"]], "SocialDB Source Code": [[429, "socialdb-source-code"]], "Composite": [[430, "composite"]], "Unix Filesystem": [[430, "unix-filesystem"]], "Boolean Expressions": [[430, "boolean-expressions"]], "Thermometers, And Average Calculation": [[430, "thermometers-and-average-calculation"]], "Decorator": [[431, "decorator"]], "Variant 1: Aggregate Base Class Objects": [[431, "variant-1-aggregate-base-class-objects"]], "Variant 2: Aggregate Conrete Class Objects": [[431, "variant-2-aggregate-conrete-class-objects"]], "Step 1: Realize Current Situation": [[431, "step-1-realize-current-situation"]], "Step 2: Decorate ConstantSensor \u27f6 DecoratedConstantSensor": [[431, "step-2-decorate-constantsensor-longrightarrow-decoratedconstantsensor"]], "Step 3: Decorate RandomSensor \u27f6 DecoratedRandomSensor": [[431, "step-3-decorate-randomsensor-longrightarrow-decoratedrandomsensor"]], "Step 4: Verify That DecoratedConstantSensor Can Be Used As Sensor": [[431, "step-4-verify-that-decoratedconstantsensor-can-be-used-as-sensor"]], "Step 5: Verify That DecoratedRandomSensor Can Be Used As Sensor": [[431, "step-5-verify-that-decoratedrandomsensor-can-be-used-as-sensor"]], "Step 6: Verify That Current Situation Still Holds True": [[431, "step-6-verify-that-current-situation-still-holds-true"]], "Design Patterns With C++": [[432, "design-patterns-with-c"]], "Topics/Exercises": [[432, "topics-exercises"]], "Solutions": [[432, "solutions"], [446, "solutions"], [460, "solutions"]], "To Be Done": [[432, "to-be-done"]], "Case Study/Livehacking: Heating Control (Reading Sensors)": [[433, "case-study-livehacking-heating-control-reading-sensors"]], "Step 1: Monolithic": [[433, "step-1-monolithic"]], "Step 2: And D-Bus? \u27f6 Interfaces": [[433, "step-2-and-d-bus-longrightarrow-interfaces"]], "Step 3: Start D-Bus Implementation": [[433, "step-3-start-d-bus-implementation"]], "Pull Demo Logger/Store Out Into Separate Files": [[433, "pull-demo-logger-store-out-into-separate-files"]], "Adapter: DBusLogger": [[433, "adapter-dbuslogger"]], "Adapter: DBusValueStore": [[433, "adapter-dbusvaluestore"]], "Demo Program To Instantiate Either Demo Or DBus": [[433, "demo-program-to-instantiate-either-demo-or-dbus"]], "Stop Here, Need Help": [[433, "stop-here-need-help"]], "Tests": [[433, "tests"], [453, "tests"]], "Interpreter": [[434, "interpreter"]], "Observer": [[435, "observer"]], "OO Design Principles": [[436, "oo-design-principles"]], "Principles: Why? Which?": [[436, "principles-why-which"]], "Single Responsibility": [[436, "single-responsibility"]], "Open/Closed": [[436, "open-closed"]], "Liskov Substitution": [[436, "liskov-substitution"]], "Interface Segregation": [[436, "interface-segregation"]], "Dependency Inversion": [[436, "dependency-inversion"]], "Proxy": [[437, "proxy"]], "Solution: Proxy": [[437, "solution-proxy"]], "Local Variant": [[437, "local-variant"]], "Remote Variant": [[437, "remote-variant"]], "Exercise Foundation: Sensor Hierarchy": [[438, "exercise-foundation-sensor-hierarchy"]], "Hypothetical": [[438, "hypothetical"]], "Class Hierarchy": [[438, "class-hierarchy"]], "Singleton": [[439, "singleton"]], "And class Person?": [[439, "and-class-person"]], "UML Short Introduction": [[440, "uml-short-introduction"]], "Interface": [[440, "interface"]], "Interface Implementation, Inheritance": [[440, "interface-implementation-inheritance"]], "Connectors: Association, Aggregation, Composition": [[440, "connectors-association-aggregation-composition"]], "Association": [[440, "association"]], "Aggregation": [[440, "aggregation"]], "Composition": [[440, "composition"]], "Exercise: Abstract Factory": [[441, "exercise-abstract-factory"]], "Exercise: Adapter": [[442, "exercise-adapter"], [449, "exercise-adapter"]], "Exercise: Command": [[443, "exercise-command"]], "Exercise: Composite": [[444, "exercise-composite"]], "Exercise: Decorator": [[445, "exercise-decorator"]], "Exercises: Design Patterns": [[446, "exercises-design-patterns"]], "Exercise: Interpreter Combined With Adapter (And A Proxy)": [[447, "exercise-interpreter-combined-with-adapter-and-a-proxy"]], "Exercise: Arithmetic Expression Interpreter": [[448, "exercise-arithmetic-expression-interpreter"]], "Expression Interface": [[448, "expression-interface"]], "Arithmetic (Binary) Expressions": [[448, "arithmetic-binary-expressions"]], "Check: Combined Arithmetic Expressions": [[448, "check-combined-arithmetic-expressions"]], "And Variables?": [[448, "and-variables"]], "No Uninitialized Variables!!": [[448, "no-uninitialized-variables"]], "Assigning To Variables": [[448, "assigning-to-variables"]], "Using Variables As Expressions": [[448, "using-variables-as-expressions"]], "Exercise: Proxy (Remote Thermometer)": [[450, "exercise-proxy-remote-thermometer"]], "Network Communication": [[450, "network-communication"]], "Implementation Hints": [[450, "implementation-hints"]], "Exercise: Proxy (Rounding Thermometer)": [[451, "exercise-proxy-rounding-thermometer"]], "Exercise: Singleton (Flexible)": [[452, "exercise-singleton-flexible"]], "Exercise: Singleton (Flexible And Strict)": [[453, "exercise-singleton-flexible-and-strict"]], "Complications": [[453, "complications"]], "Exercise: Singleton (Inflexible)": [[454, "exercise-singleton-inflexible"]], "Solution: Abstract Factory": [[455, "solution-abstract-factory"]], "I2CSensorFactory Abstract Factory": [[455, "i2csensorfactory-abstract-factory"]], "Concrete Factory Implementations": [[455, "concrete-factory-implementations"]], "I2CSensorFactory_Vendor1": [[455, "i2csensorfactory-vendor1"], [455, "id1"]], "Solution: Adapter": [[456, "solution-adapter"]], "Adapter Class For Fahrenheit Sensors": [[456, "adapter-class-for-fahrenheit-sensors"]], "Solution: Command": [[457, "solution-command"]], "Command Classes": [[457, "command-classes"]], "Solution: Composite": [[458, "solution-composite"]], "Averaging (Composite) Sensor": [[458, "averaging-composite-sensor"]], "Solution: Decorator": [[459, "solution-decorator"]], "Decorated Sensor (Intermediate Interface)": [[459, "decorated-sensor-intermediate-interface"]], "Decorated Constant Sensor": [[459, "decorated-constant-sensor"]], "Decorated Random Sensor": [[459, "decorated-random-sensor"]], "Solution: Interpreter Combined With Adapter (And A Proxy)": [[461, "solution-interpreter-combined-with-adapter-and-a-proxy"]], "Solution: Arithmetic Expression Interpreter": [[462, "solution-arithmetic-expression-interpreter"]], "Solution: Observer": [[463, "solution-observer"]], "Solution: Proxy (Remote Thermometer)": [[464, "solution-proxy-remote-thermometer"]], "Client (Proxy) Thermometer": [[464, "client-proxy-thermometer"]], "Remote Stub": [[464, "remote-stub"]], "Solution: Proxy (Rounding Thermometer)": [[465, "solution-proxy-rounding-thermometer"]], "Rounding Sensor (Proxy) Implementation": [[465, "rounding-sensor-proxy-implementation"]], "Solution: Singleton (Flexible)": [[466, "solution-singleton-flexible"]], "Main Program": [[466, "main-program"], [467, "main-program"], [468, "main-program"]], "SocialInsurance Interface": [[466, "socialinsurance-interface"], [467, "socialinsurance-interface"]], "Two Concrete Implementations": [[466, "two-concrete-implementations"], [467, "two-concrete-implementations"]], "OEGK": [[466, "oegk"], [467, "oegk"]], "SVS": [[466, "svs"], [467, "svs"]], "Solution: Singleton (Flexible And Strict)": [[467, "solution-singleton-flexible-and-strict"]], "Solution: Singleton (Inflexible)": [[468, "solution-singleton-inflexible"]], "Singleton Implementation": [[468, "singleton-implementation"]], "Exercise: LEDStripeDisplay_nopoly (Non-Polymorphic)": [[469, "exercise-ledstripedisplay-nopoly-non-polymorphic"]], "Topics Covered": [[469, "topics-covered"], [476, "topics-covered"], [479, "topics-covered"], [480, "topics-covered"], [483, "topics-covered"], [484, "topics-covered"], [485, "topics-covered"], [503, "topics-covered"]], "Exercise (FH): Introducing a Sensor Class": [[470, "exercise-fh-introducing-a-sensor-class"]], "Github Project": [[470, "github-project"]], "CMake Build": [[470, "cmake-build"], [891, "cmake-build"]], "Dependencies/Usage Relationships": [[470, "dependencies-usage-relationships"]], "Onewire Sensor Usage: Example/Unit-Test": [[470, "onewire-sensor-usage-example-unit-test"]], "Step 1: Preparation": [[470, "step-1-preparation"]], "Step 2: Modify onewire-temperature-<firstname>-<lastname>.cpp To Use class W1Sensor": [[470, "step-2-modify-onewire-temperature-firstname-lastname-cpp-to-use-class-w1sensor"]], "Step 3: Answer A Question": [[470, "step-3-answer-a-question"]], "Exercise (FH): Extract Measurement Loop Into Function": [[471, "exercise-fh-extract-measurement-loop-into-function"]], "Exercise (FH): Replace Sensor": [[472, "exercise-fh-replace-sensor"]], "Exercise (FH): Write A Sensor Class: RandomSensor": [[473, "exercise-fh-write-a-sensor-class-randomsensor"]], "New Sensor Class: RandomSensor": [[473, "new-sensor-class-randomsensor"]], "Implementation Details": [[473, "implementation-details"]], "New Program: random-temperature.cpp": [[473, "new-program-random-temperature-cpp"]], "FH Sensor OO (First Try)": [[474, "fh-sensor-oo-first-try"]], "C++ Exercises": [[475, "c-exercises"]], "Exercise Projects": [[475, "exercise-projects"]], "Exercise: Hysteresis_nopoly (Non-Polymorphic)": [[476, "exercise-hysteresis-nopoly-non-polymorphic"]], "OO Basics, Interfaces (Shapes)": [[477, "oo-basics-interfaces-shapes"]], "Exercise Table": [[477, "exercise-table"]], "Setup, Exam Procedure": [[477, "setup-exam-procedure"]], "Point": [[477, "point"]], "Point: Constructor and Getter Methods": [[477, "point-constructor-and-getter-methods"]], "Point: Default Constructor": [[477, "point-default-constructor"]], "Point: Static Method: equal()": [[477, "point-static-method-equal"]], "Point: operator==()": [[477, "point-operator"]], "Point: Method: move()": [[477, "point-method-move"]], "Point: operator+=()": [[477, "point-suite-operator-plus-equals"]], "Point: Static Method: add()": [[477, "point-static-method-add"]], "Point: operator+()": [[477, "point-suite-operator-plus"]], "Circle": [[477, "circle"]], "Circle: Constructor": [[477, "circle-constructor"]], "Circle: operator==()": [[477, "circle-operator"]], "Circle: Method: area()": [[477, "circle-method-area"]], "Square": [[477, "square"]], "Square: Constructor": [[477, "square-constructor"]], "Square: operator==()": [[477, "square-operator"]], "Square: Method: area()": [[477, "square-method-area"]], "Interface: Shape": [[477, "interface-shape"]], "Interface: Circle And Square Is-A Shape": [[477, "interface-circle-and-square-is-a-shape"]], "Interface: Can Compute Area Of Any Shape": [[477, "interface-can-compute-area-of-any-shape"]], "Working On Exercise Projects": [[478, "working-on-exercise-projects"]], "Clone Github Repository": [[478, "clone-github-repository"]], "Massage googletest Sub-Module": [[478, "massage-googletest-sub-module"]], "Build Directory: Create Makefiles With cmake": [[478, "build-directory-create-makefiles-with-cmake"]], "Build Directory: Build With make": [[478, "build-directory-build-with-make"]], "Build Directory: Run Tests": [[478, "build-directory-run-tests"]], "Exercise: AveragingSensor_nopoly (Non-Polymorphic)": [[479, "exercise-averagingsensor-nopoly-non-polymorphic"]], "Exercise: Sensor Interface": [[480, "exercise-sensor-interface"]], "Problem: Polymorphic Thermometer Usage": [[480, "problem-polymorphic-thermometer-usage"]], "The Exercise": [[480, "the-exercise"]], "Exercise: OneWire Sensor Factory": [[481, "exercise-onewire-sensor-factory"]], "Implementation": [[481, "implementation"]], "Fixture": [[481, "fixture"], [708, "fixture"]], "basic": [[481, "basic"]], "notfound": [[481, "notfound"]], "find_is_const": [[481, "find-is-const"]], "Testing In Isolation": [[481, "testing-in-isolation"]], "Testing In Reality": [[481, "testing-in-reality"]], "On The PC": [[481, "on-the-pc"]], "On The Target": [[481, "on-the-target"]], "Exercise: OneWire Sensor Class": [[482, "exercise-onewire-sensor-class"]], "Download Monolithic Sensor Implementation": [[482, "download-monolithic-sensor-implementation"]], "Test Monolithic Implementation": [[482, "test-monolithic-implementation"]], "class W1Sensor": [[482, "class-w1sensor"]], "Exercise: ConstantSensor_nopoly (Non-Polymorphic)": [[483, "exercise-constantsensor-nopoly-non-polymorphic"]], "Exercise: MockSensor_nopoly (Non-Polymorphic)": [[484, "exercise-mocksensor-nopoly-non-polymorphic"]], "Exercise: RandomSensor_nopoly (Non-Polymorphic)": [[485, "exercise-randomsensor-nopoly-non-polymorphic"]], "Implementation Hint: Randomicity In C++": [[485, "implementation-hint-randomicity-in-c"]], "Implementation Hint: Initializer Lists": [[485, "implementation-hint-initializer-lists"]], "Exercise: Algorithms": [[486, "exercise-algorithms"]], "Copy Into std::vector": [[486, "copy-into-std-vector"]], "Find Element In std::vector": [[486, "find-element-in-std-vector"]], "Sort In-Place": [[486, "sort-in-place"]], "Sort Into A Copy": [[486, "sort-into-a-copy"]], "Exercise: Generic Filter": [[487, "exercise-generic-filter"]], "Exercise: Filter Elements Greater Than 10": [[488, "exercise-filter-elements-greater-than-10"]], "Exercise: Filter Odd Elements": [[489, "exercise-filter-odd-elements"]], "C++ Exercises: Standard Template Library": [[490, "c-exercises-standard-template-library"]], "Exercise: std::map<>": [[491, "exercise-std-map"]], "Exercises: Sensor Repository (std::map)": [[492, "exercises-sensor-repository-std-map"]], "Insert - Not Overwriting Existing Elements": [[493, "insert-not-overwriting-existing-elements"]], "Insert - Sunny Case": [[494, "insert-sunny-case"]], "Lookup - Not Found": [[495, "lookup-not-found"]], "Lookup - Sunny Case": [[496, "lookup-sunny-case"]], "Memory Leaks?": [[497, "memory-leaks"]], "Remove - Not Found": [[498, "remove-not-found"]], "Remove - Sunny Case": [[499, "remove-sunny-case"]], ".size() Is const": [[500, "size-is-const"]], "Exercise: Uniquify A Sequence": [[501, "exercise-uniquify-a-sequence"]], "Exercise: std::vector<>": [[502, "exercise-std-vector"]], "Exercise: Mocking Switch (Non-Polymorphic)": [[503, "exercise-mocking-switch-non-polymorphic"]], "C++: TODO List": [[504, "c-todo-list"]], "Structural": [[504, "structural"]], "STL, Containers and Algorithms": [[504, "stl-containers-and-algorithms"]], "Templates/Overloading": [[504, "templates-overloading"]], "Functors: Overloading the Function Call Operator": [[504, "functors-overloading-the-function-call-operator"]], "Threads": [[504, "threads"]], "C++ >= 11": [[504, "c-11"]], "UserDB Exercise": [[504, "userdb-exercise"]], "Complete Transcription of C++11": [[504, "complete-transcription-of-c-11"]], "Exercise series": [[504, "exercise-series"]], "Code: C++: Class Templates": [[505, "code-c-class-templates"]], "Screenplay: C++: Class Templates": [[506, "screenplay-c-class-templates"]], "C++: Class Templates": [[507, "c-class-templates"]], "Code: C++: Dynamic Memory": [[508, "code-c-dynamic-memory"]], "Screenplay: C++: Dynamic Memory": [[509, "screenplay-c-dynamic-memory"]], "C: malloc()/free()": [[509, "c-malloc-free"]], "valgrind: Memory Leak": [[509, "valgrind-memory-leak"]], "valgrind: Array Bounds Write": [[509, "valgrind-array-bounds-write"]], "C++: new, delete": [[509, "c-new-delete"]], "C++: new, delete on Arrays": [[509, "c-new-delete-on-arrays"]], "valgrind: delete Mismatch": [[509, "valgrind-delete-mismatch"]], "C++: Dynamic Memory": [[510, "c-dynamic-memory"]], "Code: C++: Global Objects Initialization": [[511, "code-c-global-objects-initialization"]], "Screenplay: C++: Global Objects Initialization": [[512, "screenplay-c-global-objects-initialization"]], "Constructor and Destructor Order in Same File": [[512, "constructor-and-destructor-order-in-same-file"]], "Constructor and Destructor Order Across Files": [[512, "constructor-and-destructor-order-across-files"]], "Constructor and Destructor Order Across Files: Dependencies, Bugs": [[512, "constructor-and-destructor-order-across-files-dependencies-bugs"]], "C++: Global Objects Initialization": [[513, "c-global-objects-initialization"]], "Code: C++: Inheritance, Interfaces, virtual": [[514, "code-c-inheritance-interfaces-virtual"]], "Screenplay: C++: Inheritance, Interfaces, virtual": [[515, "screenplay-c-inheritance-interfaces-virtual"]], "C++: Inheritance, Interfaces, virtual": [[516, "c-inheritance-interfaces-virtual"]], "Code: C++: Ownership/RAII": [[517, "code-c-ownership-raii"]], "Screenplay: C++: Ownership/RAII": [[518, "screenplay-c-ownership-raii"]], "Allocate in Constructor": [[518, "allocate-in-constructor"]], "Deallocate in Destructor - Ownership": [[518, "deallocate-in-destructor-ownership"]], "Ownership: 2 x non-const": [[518, "ownership-2-x-non-const"]], "Ownership: const Method": [[518, "ownership-const-method"]], "Ownership: 2 x const": [[518, "ownership-2-x-const"]], "C++: Ownership/RAII": [[519, "c-ownership-raii"]], "Code: C++: STL Containers (Intro)": [[520, "code-c-stl-containers-intro"]], "Screenplay: C++: STL Containers (Intro)": [[521, "screenplay-c-stl-containers-intro"]], "Pointer Arithmetics Recap": [[521, "pointer-arithmetics-recap"]], "Container: std::vector": [[521, "container-std-vector"]], "Algorithm: std::vector and Naive Copy": [[521, "algorithm-std-vector-and-naive-copy"]], "Algorithm: std::vector and std::copy<>": [[521, "algorithm-std-vector-and-std-copy"]], "Container: std::list": [[521, "container-std-list"]], "Container: std::map": [[521, "container-std-map"]], "C++: STL Containers (Intro)": [[522, "c-stl-containers-intro"]], "Code: C++: Templates vs. Interfaces": [[523, "code-c-templates-vs-interfaces"]], "Screenplay: C++: Templates vs. Interfaces": [[524, "screenplay-c-templates-vs-interfaces"]], "C++: Templates vs. Interfaces": [[525, "c-templates-vs-interfaces"]], "Background": [[527, "background"]], "History": [[527, "history"], [950, "history"]], "Content": [[527, "content"]], "Object Oriented Programming In Good Ol\u2019 C": [[528, "object-oriented-programming-in-good-ol-c"]], "C Is Simple, So Why C++?": [[528, "c-is-simple-so-why-c"]], "struct point: Something That Looks Like A Point": [[528, "struct-point-something-that-looks-like-a-point"]], "Good Style: Explicit Initialization Functions": [[528, "good-style-explicit-initialization-functions"]], "Comparison Functions: (In)Equality": [[528, "comparison-functions-in-equality"]], "Moving Points": [[528, "moving-points"]], "Vector Addition and Subtraction": [[528, "vector-addition-and-subtraction"]], "Distance Of Two Points": [[528, "distance-of-two-points"]], "Length Of A Point\u2019s Position Vector": [[528, "length-of-a-point-s-position-vector"]], "Summary: Is C Good Enough?": [[528, "summary-is-c-good-enough"]], "Copy Constructor, Assignment Operator": [[529, "copy-constructor-assignment-operator"]], "Compiler Generated Copy Constructor": [[529, "compiler-generated-copy-constructor"]], "Rule": [[529, null], [532, null], [631, "rule"]], "Manually Written Copy Constructor And Assignment Operator": [[529, "manually-written-copy-constructor-and-assignment-operator"]], "Classes and Objects": [[530, "classes-and-objects"]], "Introducing C++: class point": [[530, "introducing-c-class-point"]], "Access Specifiers: public And private": [[530, "access-specifiers-public-and-private"]], "Default Constructor": [[530, "default-constructor"], [532, "default-constructor"], [545, "default-constructor"], [546, "default-constructor"], [547, "default-constructor"], [548, "default-constructor"]], "Custom Constructor: Usage": [[530, "custom-constructor-usage"]], "Custom Constructor: Implementation": [[530, "custom-constructor-implementation"]], "Access Methods For Otherwise Private Members": [[530, "access-methods-for-otherwise-private-members"]], "Methods: Operations On An Object": [[530, "methods-operations-on-an-object"]], "And printf()?!": [[530, "and-printf"]], "Custom Constructor": [[531, "custom-constructor"], [545, "custom-constructor"]], "Constructors: why? (1)": [[531, "constructors-why-1"]], "Constructors: why? (2)": [[531, "constructors-why-2"]], "Constructors: Implementation - Inline": [[531, "constructors-implementation-inline"]], "Constructors: Implementation - Out-of-Line": [[531, "constructors-implementation-out-of-line"]], "Compiler Generated Default Constructor": [[532, "compiler-generated-default-constructor"]], "Compiler Generated Default Constructor: Pitfall: Built-In Types": [[532, "compiler-generated-default-constructor-pitfall-built-in-types"]], "Manually Written Default Constructor": [[532, "manually-written-default-constructor"]], "What If User-Defined Constructors Are In Place?": [[532, "what-if-user-defined-constructors-are-in-place"]], "More Constructors, Destructors": [[533, "more-constructors-destructors"]], "Default Constructor (1)": [[533, "default-constructor-1"]], "Default Constructor (2)": [[533, "default-constructor-2"]], "Object Lifecycle - Destructor": [[533, "object-lifecycle-destructor"]], "Destructors (1)": [[533, "destructors-1"]], "Destructors (2)": [[533, "destructors-2"]], "Destructors (3)": [[533, "destructors-3"]], "Destructors (4)": [[533, "destructors-4"]], "Data Encapsulation": [[534, "data-encapsulation"]], "Constructors: Member Initialization": [[535, "constructors-member-initialization"]], "Member Initialization? Assignment?": [[535, "member-initialization-assignment"]], "Real Initialization: Initializer List": [[535, "real-initialization-initializer-list"]], "Why Is That Important?": [[535, "why-is-that-important"]], "Why Else Is That Important?": [[535, "why-else-is-that-important"]], "Object Copy (And Resource Management): There Be Dragons": [[536, "object-copy-and-resource-management-there-be-dragons"]], "Copy in C": [[536, "copy-in-c"]], "Copy Constructor": [[536, "copy-constructor"]], "Pointer Members, And Compiler Generated Copy": [[536, "pointer-members-and-compiler-generated-copy"]], "Why? Dragons Everywhere!": [[536, "why-dragons-everywhere"]], "Solution: Write Copy Constructor Manually": [[536, "solution-write-copy-constructor-manually"]], "Copy Constructor: Recursive/Memberwise": [[536, "copy-constructor-recursive-memberwise"]], "Assignment Operator": [[536, "assignment-operator"]], "Assignment Operator and Pointer Members: Memory Leak": [[536, "assignment-operator-and-pointer-members-memory-leak"]], "Assignment Operator and Pointer Members: Memory Leak, Straighforward Fix": [[536, "assignment-operator-and-pointer-members-memory-leak-straighforward-fix"]], "Assignment Operator and Pointer Members: Self-Assignment": [[536, "assignment-operator-and-pointer-members-self-assignment"]], "Assignment Operator: Self Assignment, Correctly Implemented": [[536, "assignment-operator-self-assignment-correctly-implemented"]], "Overloading": [[537, "overloading"]], "Functions in C": [[537, "functions-in-c"]], "Functions in C++ \u2014 Overloading": [[537, "functions-in-c-overloading"]], "Underlying Mechanism: Name Mangling": [[537, "underlying-mechanism-name-mangling"]], "Overloading Class Methods: Just The Same": [[537, "overloading-class-methods-just-the-same"]], "Methods": [[538, "methods"], [685, "methods"], [686, "methods"], [687, "methods"], [972, "methods"]], "Objects - Data and Methods": [[538, "objects-data-and-methods"]], "class point Again": [[538, "class-point-again"]], "Simple Methods: Access Methods (\u201cGetters\u201d)": [[538, "simple-methods-access-methods-getters"]], "How Are Members Accessed Inside Methods?": [[538, "how-are-members-accessed-inside-methods"]], "const Methods": [[538, "const-methods"], [539, "const-methods"]], "Non const Methods": [[538, "non-const-methods"]], "const": [[539, "const"]], "const: Immutable Variable": [[539, "const-immutable-variable"]], "const Correctness vs. Pollution": [[539, "const-correctness-vs-pollution"]], "this": [[540, "this"]], "Hidden Pointer: this (1)": [[540, "hidden-pointer-this-1"]], "Hidden Pointer: this (2)": [[540, "hidden-pointer-this-2"]], "Explicit this Pointer": [[540, "explicit-this-pointer"]], "Pass By Copy/Reference": [[541, "pass-by-copy-reference"]], "Pointers Can Be Left Uninitialized": [[541, "pointers-can-be-left-uninitialized"]], "References Cannot (Easily) Be Left Uninitialized": [[541, "references-cannot-easily-be-left-uninitialized"]], "Copy? Reference? C? Pointers!": [[541, "copy-reference-c-pointers"]], "C++: True References": [[541, "c-true-references"]], "And const? Pointers?": [[541, "and-const-pointers"]], "const References": [[541, "const-references"]], "const Reference: Substitute For \u201cPass by Copy\u201d": [[541, "const-reference-substitute-for-pass-by-copy"]], "static Methods": [[542, "static-methods"]], "Methods without Object": [[542, "methods-without-object"]], "Naive Implementation: Global Function": [[542, "naive-implementation-global-function"]], "C++: static Method": [[542, "c-static-method"]], "static Member Variables": [[543, "static-member-variables"]], "Good Old C: extern Global Variables": [[543, "good-old-c-extern-global-variables"]], "ODR: One Definition Rule": [[543, "odr-one-definition-rule"]], "(A Litte) More Overengineered: Declaration In Header File": [[543, "a-litte-more-overengineered-declaration-in-header-file"]], "Same Inside A Class: static Member Variable": [[543, "same-inside-a-class-static-member-variable"]], "Sideway: Definition In A Header File?": [[543, "sideway-definition-in-a-header-file"]], "static inline Member Defnition (Since C++17)": [[543, "static-inline-member-defnition-since-c-17"]], "Implementing (In)Equality": [[544, "implementing-in-equality"]], "Implementing (In)Equality: Global Function": [[544, "implementing-in-equality-global-function"]], "Implementing (In)Equality: Object Method": [[544, "implementing-in-equality-object-method"]], "Implementing Arithmetic: + (Vector Addition)": [[544, "implementing-arithmetic-vector-addition"]], "Implementing Arithmetic: + (Vector Addition): Global Function": [[544, "implementing-arithmetic-vector-addition-global-function"]], "Implementing Arithmetic: + (Vector Addition): Object Method": [[544, "implementing-arithmetic-vector-addition-object-method"]], "Implementing Arithmetic: += (Moving A Point)": [[544, "implementing-arithmetic-moving-a-point"]], "Implementing ostream Shift: std::cout << ...": [[544, "implementing-ostream-shift-std-cout"]], "Exercise (FH): class cuboid": [[545, "exercise-fh-class-cuboid"]], "Building class cuboid Upon class point3d": [[545, "building-class-cuboid-upon-class-point3d"]], "(In-)Equality": [[545, "in-equality"], [546, "in-equality"], [547, "in-equality"], [548, "in-equality"]], "+=": [[545, "id2"], [546, "id1"], [547, "id2"], [548, "id2"]], "-=": [[545, "id4"], [547, "id4"]], "+": [[545, "id6"], [546, "id2"], [547, "id6"], [548, "id3"]], "-": [[545, "id8"], [547, "id8"]], "<< (std::ostream)": [[545, "std-ostream"], [546, "std-ostream"], [547, "std-ostream"], [548, "std-ostream"]], "Surface": [[545, "surface"]], "Volume": [[545, "volume"]], "Exercise (FH): class point": [[546, "exercise-fh-class-point"]], "Initial Build": [[546, "initial-build"]], "Initial Test Run": [[546, "initial-test-run"]], "Extending class point: More Unit Tests": [[546, "extending-class-point-more-unit-tests"]], "Access Methods": [[546, "access-methods"]], "Unary -": [[546, "unary"], [547, "unary"]], "Exercise (FH): class point3d": [[547, "exercise-fh-class-point3d"]], "Building class rectangle Upon class point": [[547, "building-class-rectangle-upon-class-point"], [548, "building-class-rectangle-upon-class-point"]], "Coordinates": [[547, "coordinates"], [548, "coordinates"]], "Absolute Value": [[547, "absolute-value"]], "Distance Between Two Points": [[547, "distance-between-two-points"]], "Exercise (FH): class rectangle": [[548, "exercise-fh-class-rectangle"]], "Width, Height, Area": [[548, "width-height-area"]], "Error Handling: if - else if - else": [[550, "error-handling-if-else-if-else"]], "try - catch": [[551, "try-catch"]], "try - Block": [[551, "try-block"]], "catch - Block": [[551, "catch-block"]], "Standard Library: Exception-Hierarchy": [[551, "standard-library-exception-hierarchy"]], "Custom Exceptions (1)": [[551, "custom-exceptions-1"]], "Custom Exceptions (2)": [[551, "custom-exceptions-2"]], "Throwing Exceptions - throw": [[551, "throwing-exceptions-throw"]], "Last Words": [[551, "last-words"], [554, "last-words"]], "Function Templates": [[553, "function-templates"]], "Origin: Duplicated Code": [[553, "origin-duplicated-code"]], "A simple Function-Template": [[553, "a-simple-function-template"]], "More Templates from the STL": [[553, "more-templates-from-the-stl"]], "Class Templates": [[554, "class-templates"]], "Does This Work With Classes?": [[554, "does-this-work-with-classes"]], "Example: point as a Class Template (1)": [[554, "example-point-as-a-class-template-1"]], "Example: point as a Class Template (2)": [[554, "example-point-as-a-class-template-2"]], "Screenplay: std::copy<>() From <algorithm>": [[556, "screenplay-std-copy-from-algorithm"]], "Screenplay: Pointer Arithmetic, And Algorithms": [[557, "screenplay-pointer-arithmetic-and-algorithms"]], "Screenplay: Pointer Arithmetic Basics": [[558, "screenplay-pointer-arithmetic-basics"]], "Screenplay: Pointer Difference": [[559, "screenplay-pointer-difference"]], "Screenplay: Out Of Range Errors": [[560, "screenplay-out-of-range-errors"]], "Standard Template Library: Basics": [[561, "standard-template-library-basics"]], "Containers, Iterators, Algorithms": [[561, "containers-iterators-algorithms"]], "Pointer Increment and Decrement": [[561, "pointer-increment-and-decrement"]], "Out Of Range Errors (The Spirit Of C)": [[561, "out-of-range-errors-the-spirit-of-c"]], "Pointer Difference": [[561, "pointer-difference"]], "Step Width? (1)": [[561, "step-width-1"]], "Step Width? (2)": [[561, "step-width-2"]], "And Arbitrary Data Types?": [[561, "and-arbitrary-data-types"]], "Enter Algorithms (On Good Old C Arrays)": [[561, "enter-algorithms-on-good-old-c-arrays"]], "STL Algorithms": [[561, "stl-algorithms"]], "STL Containers": [[561, "stl-containers"]], "std::vector (And std::copy())": [[562, "std-vector-and-std-copy"]], "Dynamicity Details": [[562, "dynamicity-details"]], "STL Iterators: Pointer Arithmetic On A std::vector<>": [[562, "stl-iterators-pointer-arithmetic-on-a-std-vector"]], "Algorithms And Containers : std::copy": [[562, "algorithms-and-containers-std-copy"]], "Screenplay: std::vector And std::copy()": [[563, "screenplay-std-vector-and-std-copy"]], "std::vector<> Into C Array": [[563, "std-vector-into-c-array"]], "Copying Into std::vector (Without Allocation)": [[563, "copying-into-std-vector-without-allocation"]], "Solution 1: Pre-allocate Destination": [[563, "solution-1-pre-allocate-destination"]], "Solution 2: std::back_insert_iterator": [[563, "solution-2-std-back-insert-iterator"]], "Screenplay: std::vector Basics": [[564, "screenplay-std-vector-basics"]], "Screenplay: std::vector, And Pointer Arithmetics": [[565, "screenplay-std-vector-and-pointer-arithmetics"]], "Documentation": [[566, null], [567, null], [568, null], [569, null], [570, null], [572, null], [573, null], [574, null], [575, null], [578, null], [579, null], [582, null], [587, null], [721, null], [721, null], [737, null], [739, "documentation"], [739, null], [743, "documentation"], [745, null], [745, null], [745, null], [771, "documentation"], [774, "documentation"], [784, null], [785, null], [788, null], [792, null], [792, null], [799, null], [800, null], [801, null], [801, null], [801, null], [802, null], [817, null], [817, null], [817, null], [818, null], [819, null], [820, null], [836, null], [836, null], [836, null], [839, null], [840, null], [873, null], [875, null], [877, null], [879, null], [880, null], [881, null], [883, null], [883, null], [883, null], [883, null], [883, null], [883, null], [886, null], [887, null], [888, null], [889, null], [889, null], [890, null], [893, null], [893, null], [893, null], [893, null], [931, null], [931, null], [932, null], [1007, null], [1017, null], [1099, "documentation"]], "binary_search<>: On Sorted Sequence": [[566, "binary-search-on-sorted-sequence"]], "More Intelligent Search": [[566, "more-intelligent-search"], [572, "more-intelligent-search"]], "copy<>": [[567, "copy"]], "find<>: Sequential Search, by Equality": [[568, "find-sequential-search-by-equality"]], "Basic Usage": [[568, "basic-usage"], [687, "basic-usage"], [839, "basic-usage"], [1009, "basic-usage"]], "Not Found?": [[568, "not-found"]], "find_if<>: Sequential Search, Customizable": [[569, "find-if-sequential-search-customizable"]], "if, Using a Plain Function": [[569, "if-using-a-plain-function"]], "if, Using a Functor Class": [[569, "if-using-a-functor-class"]], "for_each<>": [[570, "for-each"]], "Basic Algorithms": [[571, "basic-algorithms"]], "Sorted Arrays": [[571, "sorted-arrays"]], "lower_bound<>: On Sorted Sequence": [[572, "lower-bound-on-sorted-sequence"]], "reverse<>: Reversing In-Place": [[573, "reverse-reversing-in-place"]], "reverse_copy<>: Copying and Reversing": [[574, "reverse-copy-copying-and-reversing"]], "sort<>": [[575, "sort"]], "Algorithm: std::sort": [[575, "algorithm-std-sort"]], "Algorithm: std::sort, custom comparison": [[575, "algorithm-std-sort-custom-comparison"]], "Sequential Containers": [[576, "sequential-containers"], [577, "sequential-containers"]], "Common Characteristics": [[576, "common-characteristics"]], "list<>": [[578, "list"]], "Insertion and Deletion": [[578, "insertion-and-deletion"]], "vector<>": [[579, "vector"]], "Characteristics": [[579, "characteristics"]], "Modification at the Back": [[579, "modification-at-the-back"]], "Insertion": [[579, "insertion"]], "Example": [[579, "example"], [1024, "example"]], "Associative Containers": [[580, "associative-containers"], [581, "associative-containers"]], "Type Instantiation": [[582, "type-instantiation"]], "Filling The Container": [[582, "filling-the-container"]], "Inserting Elements": [[582, "inserting-elements"]], "Searching": [[582, "searching"], [606, "searching"]], "Screenplay: std::map Initialization And Inserting": [[583, "screenplay-std-map-initialization-and-inserting"]], "Definining The Type": [[583, "definining-the-type"]], "Initialization": [[583, "initialization"], [606, "initialization"]], "Screenplay: Inserting Elements": [[584, "screenplay-inserting-elements"]], "Subscript Operator": [[584, "subscript-operator"]], "insert()": [[584, "insert"]], "Screenplay: Removing (Erasing) Elements": [[585, "screenplay-removing-erasing-elements"]], "By Pointer (Err, Iterator)": [[585, "by-pointer-err-iterator"]], "By Key": [[585, "by-key"]], "Screenplay: Searching": [[586, "screenplay-searching"]], "find(key)": [[586, "find-key"]], "[key]": [[586, "key"]], "at(key)": [[586, "at-key"]], "multimap<>": [[587, "multimap"]], "Allocator Basics": [[588, "allocator-basics"]], "Allocators": [[589, "allocators"]], "STL: Exercises": [[590, "stl-exercises"]], "Exercise: Reverse a String": [[591, "exercise-reverse-a-string"]], "Exercise: Reverse A String": [[592, "exercise-reverse-a-string"]], "Solution: Reverse a String": [[593, "solution-reverse-a-string"]], "Naive": [[593, "naive"]], "Using std::reverse<>": [[593, "using-std-reverse"]], "Using std::reverse_copy<>": [[593, "using-std-reverse-copy"]], "Dynamic Memory (To Be Done)": [[595, "dynamic-memory-to-be-done"]], "Inheritance Basics": [[597, "inheritance-basics"]], "Plain (Base) Class": [[597, "plain-base-class"], [598, "plain-base-class"]], "Inheriting (Deriving) From Base": [[597, "inheriting-deriving-from-base"]], "Derived is-a Base?": [[597, "derived-is-a-base"]], "Destructors And Inheritance": [[598, "destructors-and-inheritance"]], "Derived Class, And Destructor": [[598, "derived-class-and-destructor"]], "And Base Class Conversion?": [[598, "and-base-class-conversion"]], "Inheritance And Object Oriented Design": [[599, "inheritance-and-object-oriented-design"]], "Bringing It All Together": [[600, "bringing-it-all-together"]], "Polymorphic Usage Of Objects": [[601, "polymorphic-usage-of-objects"]], "What Larger Systems Want": [[601, "what-larger-systems-want"]], "Pitfall \u27f6 Pure Virtual Methods": [[601, "pitfall-longrightarrow-pure-virtual-methods"]], "Pure Virtual Method": [[601, "pure-virtual-method"]], "Inheritance: private, protected (Implementation Inheritance)": [[602, "inheritance-private-protected-implementation-inheritance"]], "Virtual Destructors": [[603, "virtual-destructors"]], "Is-A Relationships And Destructors": [[603, "is-a-relationships-and-destructors"]], "Pure Virtual Destructor?": [[603, "pure-virtual-destructor"]], "Virtual Methods": [[604, "virtual-methods"]], "Simple Is-A Relationship Is Not Enough": [[604, "simple-is-a-relationship-is-not-enough"]], "Enter virtual": [[604, "enter-virtual"]], "Caution: virtual": [[604, "caution-virtual"]], "std::string": [[606, "std-string"]], "Addition, And Such": [[606, "addition-and-such"]], "Conversion From String": [[606, "conversion-from-string"]], "Conversion To String": [[606, "conversion-to-string"]], "Substrings": [[606, "substrings"]], "Exercise: Paint the American Flag Onto Standard Output": [[607, "exercise-paint-the-american-flag-onto-standard-output"]], "FH/Moodle Quiz: C++": [[608, "fh-moodle-quiz-c"]], "Exercises: Miscellaneous": [[609, "exercises-miscellaneous"]], "Exercise: Sum of Integers Coming From cin": [[610, "exercise-sum-of-integers-coming-from-cin"]], "Exercises: User Database": [[611, "exercises-user-database"]], "Exercise: Access Methods for Members": [[612, "exercise-access-methods-for-members"]], "Exercise: const Members": [[613, "exercise-const-members"]], "Exercise: Use const": [[614, "exercise-use-const"]], "Exercise: Default Constructor (was: Arrays of Objects)": [[615, "exercise-default-constructor-was-arrays-of-objects"]], "Exercise: Simple Method (Users Age By n Years)": [[616, "exercise-simple-method-users-age-by-n-years"]], "Exercise: Transform struct User Into A Class": [[617, "exercise-transform-struct-user-into-a-class"]], "Exercise: Insert a User into UserDB": [[618, "exercise-insert-a-user-into-userdb"]], "Exercise: Search a User By Lastname (std::find_if)": [[619, "exercise-search-a-user-by-lastname-std-find-if"]], "Exercise: Search, \u201cUser Not Found\u201d Exception": [[620, "exercise-search-user-not-found-exception"]], "What\u2019s Wrong?": [[620, "what-s-wrong"]], "Exercise: Search a User By Lastname": [[621, "exercise-search-a-user-by-lastname"]], "Exercise: Use std::vector in UserDB": [[622, "exercise-use-std-vector-in-userdb"]], "C++ 03": [[623, "c-03"]], "History, Background": [[625, "history-background"]], "Make C++ Great Again": [[625, "make-c-great-again"]], "The \u201cNew\u201d C++": [[625, "the-new-c"]], "A Live-Hacked Tour Around The New C++": [[626, "a-live-hacked-tour-around-the-new-c"]], "C++03 To-Do List Version": [[626, "c-03-to-do-list-version"]], "Real Container Initialization": [[626, "real-container-initialization"]], "Long iterator Type Names \u27f6 auto": [[626, "long-iterator-type-names-longrightarrow-auto"]], "More auto: Unpacking std::pair": [[626, "more-auto-unpacking-std-pair"]], "Pitfall: Plain auto Creates Copy \u27f6 const auto&": [[626, "pitfall-plain-auto-creates-copy-longrightarrow-const-auto"]], "Iterators Are So Old-School: Range Based For": [[626, "iterators-are-so-old-school-range-based-for"]], "Still Too Old-School: Want Python\u2019s Tuple Unpacking": [[626, "still-too-old-school-want-python-s-tuple-unpacking"]], "What If To-Do List Items Can Really Do Something? \u27f6 Functions": [[626, "what-if-to-do-list-items-can-really-do-something-longrightarrow-functions"]], "Function Pointers Are Old-School \u27f6 std::function": [[626, "function-pointers-are-old-school-longrightarrow-std-function"]], "Definitely Not Old-School: Lambda": [[626, "definitely-not-old-school-lambda"]], "Inevitable: Threads": [[626, "inevitable-threads"]], "Unions? std::variant!": [[626, "unions-std-variant"]], "Wrapping All That Into A Class": [[626, "wrapping-all-that-into-a-class"]], "Architectural Considerations: No Implementation Inheritance Wanted": [[626, "architectural-considerations-no-implementation-inheritance-wanted"]], "Wrapping Up: Initializer": [[626, "wrapping-up-initializer"]], "C++03 enum Types: Motivation": [[627, "c-03-enum-types-motivation"]], "C++03 enum Types: Problems": [[627, "c-03-enum-types-problems"]], "C++11 enum class": [[627, "c-11-enum-class"]], "C++11 enum class: Underlying Type": [[627, "c-11-enum-class-underlying-type"]], "Brace Initialization (Uniform Initialization)": [[628, "brace-initialization-uniform-initialization"]], "std::initializer_list: Brace Initialization, Implementor\u2019s View": [[629, "std-initializer-list-brace-initialization-implementor-s-view"]], "std::initializer_list": [[629, "std-initializer-list"]], "Direct Usage": [[629, "direct-usage"]], "Custom Class That Supports Brace Initialization": [[629, "custom-class-that-supports-brace-initialization"]], "Brace Initialization: Introduction": [[630, "brace-initialization-introduction"]], "Motivation: Inconsistent Initialization Styles": [[630, "motivation-inconsistent-initialization-styles"]], "Motivation: Integral Types Initialization": [[630, "motivation-integral-types-initialization"]], "Motivation: Aggregate Initialization": [[630, "motivation-aggregate-initialization"]], "Motivation: Object Initialization/Constructor": [[630, "motivation-object-initialization-constructor"]], "Motivation: Container Initialization (Missing Pre C++11)": [[630, "motivation-container-initialization-missing-pre-c-11"]], "Motivation: Member Array Initialization": [[630, "motivation-member-array-initialization"]], "Motivation: Heap Array Initialization": [[630, "motivation-heap-array-initialization"]], "Solution: Brace Initialization In C++11": [[630, "solution-brace-initialization-in-c-11"]], "Good: Refuses To Narrow Built-In Types": [[630, "good-refuses-to-narrow-built-in-types"]], "Brace Initialization: A Mess": [[631, "brace-initialization-a-mess"]], "Explicit Constructor And Brace Initialization": [[631, "explicit-constructor-and-brace-initialization"]], "Ambiguity: Explicit And std::initializer_list Constructor": [[631, "ambiguity-explicit-and-std-initializer-list-constructor"]], "Realistic Example: std::vector: Two int (Explicit)": [[631, "realistic-example-std-vector-two-int-explicit"]], "Realistic Example: std::vector: Two int (std::initializer_list)": [[631, "realistic-example-std-vector-two-int-std-initializer-list"]], "Nicolai Josuttis, Complaining About C++": [[631, "nicolai-josuttis-complaining-about-c"]], "Delegating Constructor: Motivation": [[632, "delegating-constructor-motivation"]], "Delegating Constructor: Solution": [[632, "delegating-constructor-solution"]], "constexpr": [[633, "constexpr"]], "Basic Usage: Expressions": [[633, "basic-usage-expressions"]], "constexpr Functions": [[633, "constexpr-functions"]], "Recursive constexpr": [[633, "recursive-constexpr"]], "constexpr Objects": [[633, "constexpr-objects"]], "Afterword, Further Reading": [[634, "afterword-further-reading"]], "Uses In The Standard Library": [[634, "uses-in-the-standard-library"]], "Other Uses": [[634, "other-uses"]], "All Said \u27f6 Guidelines": [[634, "all-said-longrightarrow-guidelines"]], "Further Reading (Well, Videos \ud83d\ude09)": [[634, "further-reading-well-videos-wink"]], "Move Semantics, Rvalue References": [[635, "move-semantics-rvalue-references"]], "Alternative Livehacking": [[635, "alternative-livehacking"]], "Starting Point": [[636, "starting-point"], [61, "starting-point"]], "SmartPtr With Move Semantics": [[636, "smartptr-with-move-semantics"]], "Return SmartPtr Object From Function": [[636, "return-smartptr-object-from-function"]], "Assign SmartPtr Object \u27f6 Moved": [[636, "assign-smartptr-object-longrightarrow-moved"]], "Implementing Move Semantics (class String, Live Hacked)": [[637, "implementing-move-semantics-class-string-live-hacked"]], "Copy Semantics, Revisited": [[637, "copy-semantics-revisited"]], "class String, Without Copy": [[637, "class-string-without-copy"]], "Return From Function: Copy (Or Move) Wanted": [[637, "return-from-function-copy-or-move-wanted"]], "Move Constructor? Move?": [[637, "move-constructor-move"]], "Implementing Move Constructor": [[637, "implementing-move-constructor"]], "And Move Assignment?": [[637, "and-move-assignment"]], "Implementing Move Assignment": [[637, "implementing-move-assignment"]], "Using Move Semantics In Own Code": [[638, "using-move-semantics-in-own-code"]], "Using String: class Person": [[638, "using-string-class-person"]], "What?": [[638, "what"], [800, "what"]], "Using Rvalue References Inside Function: std::move": [[638, "using-rvalue-references-inside-function-std-move"]], "Lvalues, Rvalues, And Such": [[639, "lvalues-rvalues-and-such"]], "Return Object Problem: Reference To Stack-Based Object": [[639, "return-object-problem-reference-to-stack-based-object"]], "Return Object Problem: Solution: Copy": [[639, "return-object-problem-solution-copy"]], "Move Semantics: Wish List": [[639, "move-semantics-wish-list"]], "Theory: Lvalues": [[639, "theory-lvalues"]], "Theory: Rvalues": [[639, "theory-rvalues"]], "Lvalue References (The Good Old Ones)": [[639, "lvalue-references-the-good-old-ones"]], "Rvalue References: So What Is That?": [[639, "rvalue-references-so-what-is-that"]], "Rvalue References As Function Parameters": [[639, "rvalue-references-as-function-parameters"]], "Use Of Rvalue References Parameter Inside A Function: Is An Lvalue": [[639, "use-of-rvalue-references-parameter-inside-a-function-is-an-lvalue"]], "Enter Move Constructor And Move Assignment": [[639, "enter-move-constructor-and-move-assignment"]], "Rules": [[639, null]], "Templates end with \u201c>>\u201d": [[640, "templates-end-with"]], "auto": [[641, "auto"]], "Most Basic Usage": [[641, "most-basic-usage"]], "auto Is Only The Basic Type": [[641, "auto-is-only-the-basic-type"]], "If You Want Reference, Say So!": [[641, "if-you-want-reference-say-so"]], "If You Want Const-Reference, Say So!": [[641, "if-you-want-const-reference-say-so"]], "If You Want Pointer, Say So!": [[641, "if-you-want-pointer-say-so"]], "And Arrays? Decay To Pointers!": [[641, "and-arrays-decay-to-pointers"]], "Concepts: Overview": [[643, "concepts-overview"]], "No Problem: Template Instantiation Chosen By Parameter Type": [[643, "no-problem-template-instantiation-chosen-by-parameter-type"]], "Problem: Template Instantiation Chosen By Parameter Type": [[643, "problem-template-instantiation-chosen-by-parameter-type"]], "Concepts To The Rescue": [[643, "concepts-to-the-rescue"]], "Syntactic Variations": [[643, "syntactic-variations"]], "toolcase-1-conceptless.cpp": [[644, "toolcase-1-conceptless-cpp"]], "toolcase-2-conceptless-error.cpp": [[645, "toolcase-2-conceptless-error-cpp"]], "toolcase-3-concept-integral.cpp": [[646, "toolcase-3-concept-integral-cpp"]], "Concepts: Links": [[647, "concepts-links"]], "Writing Your Own Concepts": [[648, "writing-your-own-concepts"]], "Starting Point: Good Old Function": [[648, "starting-point-good-old-function"]], "Need Template": [[648, "need-template"]], "Error: Requirement Not Fulfilled": [[648, "error-requirement-not-fulfilled"]], "Concept: has_size": [[648, "concept-has-size"]], "Concept: index_returns_double": [[648, "concept-index-returns-double"]], "example-1-good-old-func.cpp": [[649, "example-1-good-old-func-cpp"]], "example-2-need-template.cpp": [[650, "example-2-need-template-cpp"]], "example-4-concept-has-size.cpp": [[651, "example-4-concept-has-size-cpp"]], "example-5-concept-index-ret-double.cpp": [[652, "example-5-concept-index-ret-double-cpp"]], "Coroutines": [[653, "coroutines"]], "Coroutines: An Overview": [[654, "coroutines-an-overview"]], "Foreword": [[654, "foreword"]], "Prototypical Introductory Exampe: Fibonacci Numbers": [[654, "prototypical-introductory-exampe-fibonacci-numbers"]], "Step By Step: Simplest": [[654, "step-by-step-simplest"]], "Simplest: Incremental Fixing And Explaining": [[654, "simplest-incremental-fixing-and-explaining"]], "Driving Coroutines: Coroutine Anatomy": [[654, "driving-coroutines-coroutine-anatomy"]], "Driving Coroutines: Resuming": [[654, "driving-coroutines-resuming"]], "Suspension: Returning Control To Caller (co_yield)": [[654, "suspension-returning-control-to-caller-co-yield"]], "Playing Around: Iteration, Mimicking Python Iterator Protocol": [[654, "playing-around-iteration-mimicking-python-iterator-protocol"]], "Playing Around: Iteration, Range-Based-For": [[654, "playing-around-iteration-range-based-for"]], "Playing Around: Generic Generator": [[654, "playing-around-generic-generator"]], "Playing Around: Fibonacci Numbers, Generator Version": [[654, "playing-around-fibonacci-numbers-generator-version"]], "Pitfalls: Coroutines Are Stateful!": [[654, "pitfalls-coroutines-are-stateful"]], "fibo-generator.cpp": [[655, "fibo-generator-cpp"]], "fibonacci.cpp": [[656, "fibonacci-cpp"]], "generator.h": [[657, "generator-h"]], "generator-hello.cpp": [[658, "generator-hello-cpp"]], "simplest.cpp": [[659, "simplest-cpp"]], "suspend.cpp": [[660, "suspend-cpp"]], "suspend-iter.cpp": [[661, "suspend-iter-cpp"]], "suspend-next.cpp": [[662, "suspend-next-cpp"]], "= default": [[663, "default"]], "Problem: Default Constructor Not Automatically Generated": [[663, "problem-default-constructor-not-automatically-generated"]], "C++ < 11 Solution: Write Default Constructor \ud83d\ude20 \ud83d\udc4e": [[663, "c-11-solution-write-default-constructor-angry-thumbsdown"]], "C++ >= 11 Solution: = default": [[663, "c-11-solution-default"]], "= delete": [[664, "delete"]], "Problem: Copy Is Not Always Wanted": [[664, "problem-copy-is-not-always-wanted"]], "C++ < 11 Solution: Make Copy private": [[664, "c-11-solution-make-copy-private"]], "C++ >= 11 Solution: = delete Copy": [[664, "c-11-solution-delete-copy"]], "final": [[665, "final"]], "Architectural Decisions": [[665, "architectural-decisions"]], "Enter final: Architectural Cleanliness By Compiler": [[665, "enter-final-architectural-cleanliness-by-compiler"]], "New Language Features": [[666, "new-language-features"]], "Lambda": [[667, "lambda"], [668, "lambda"]], "Lambda To The Rescue": [[668, "lambda-to-the-rescue"]], "Excursion: Python Closures": [[668, "excursion-python-closures"]], "Same In C++: Capturing": [[668, "same-in-c-capturing"]], "So What Is That? (Answer: A Functor)": [[668, "so-what-is-that-answer-a-functor"]], "Capturing By Reference \u27f6 Careful!": [[668, "capturing-by-reference-longrightarrow-careful"]], "More About Capturing": [[668, "more-about-capturing"]], "Lambda: More Capturing": [[669, "lambda-more-capturing"]], "More Capture Syntax": [[669, "more-capture-syntax"]], "Capturing Explicitly, By Copy": [[669, "capturing-explicitly-by-copy"]], "Capturing Explicitly, By Reference": [[669, "capturing-explicitly-by-reference"]], "Mixed Explicit Capture": [[669, "mixed-explicit-capture"]], "Define Variables In Capture": [[669, "define-variables-in-capture"]], "Capturing All By Reference": [[669, "capturing-all-by-reference"]], "Capturing All By Copy": [[669, "capturing-all-by-copy"]], "Capturing All By Copy, Except Some By Reference": [[669, "capturing-all-by-copy-except-some-by-reference"]], "Capturing this": [[669, "capturing-this"]], "Live Hacking: Handwritten Functors (Too Much Boilerplate)": [[670, "live-hacking-handwritten-functors-too-much-boilerplate"]], "Original Lambda Demo Proggy": [[670, "original-lambda-demo-proggy"]], "Morph Lambda Into Handwritten Functor Class": [[670, "morph-lambda-into-handwritten-functor-class"]], "Live Hacking: Handwritten Functors, And Capturing By Reference (Pitfalls)": [[671, "live-hacking-handwritten-functors-and-capturing-by-reference-pitfalls"]], "Original, Handwritten Functor (By Copy)": [[671, "original-handwritten-functor-by-copy"]], "Possible Pitfall: Capturing A Reference": [[671, "possible-pitfall-capturing-a-reference"]], "Lifetime Of Temporary, Made Explicit": [[671, "lifetime-of-temporary-made-explicit"]], "Lifetime Of Temporary, Made Explicit \u27f6 \ud83d\ude91": [[671, "lifetime-of-temporary-made-explicit-longrightarrow-ambulance"]], "override": [[673, "override"]], "Correct Overriding \u2026": [[673, "correct-overriding"]], "\u2026 Is Very Hard": [[673, "is-very-hard"]], "More Problems Arise": [[673, "more-problems-arise"]], "Solution: override": [[673, "solution-override"]], "Range Based for Loops: Introduction": [[674, "range-based-for-loops-introduction"]], "Enter Range Based for Loops": [[674, "enter-range-based-for-loops"]], "Range Based for Loops, And auto": [[674, "range-based-for-loops-and-auto"]], "Case Study: std::map Iteration": [[674, "case-study-std-map-iteration"]], "Case Study: Range Based for On std::map": [[675, "case-study-range-based-for-on-std-map"]], "Gool Ol\u2019 Days: Iteration In C++ < 11": [[675, "gool-ol-days-iteration-in-c-11"]], "Basic C++11 Iteration: Range Based For, auto, And Initialization": [[675, "basic-c-11-iteration-range-based-for-auto-and-initialization"]], "Variation: Preventing Accidental Copy Using const auto&": [[675, "variation-preventing-accidental-copy-using-const-auto"]], "Pythonicity: Tuple Unpacking, err Structured Binding": [[675, "pythonicity-tuple-unpacking-err-structured-binding"]], "Structured Binding - Preventing Accidental Copy": [[675, "structured-binding-preventing-accidental-copy"]], "Ranges And Views: Good Or Bad?": [[676, "ranges-and-views-good-or-bad"]], "Dangling Iterator Protection": [[676, "dangling-iterator-protection"]], "Performance: views::drop Is Easy": [[676, "performance-views-drop-is-easy"]], "Performance: views::filter Is Not Easy": [[676, "performance-views-filter-is-not-easy"]], "Constraints: How To Read?": [[676, "constraints-how-to-read"]], "And drop()? std::vector Is Easy": [[676, "and-drop-std-vector-is-easy"]], "And drop()? std::list Is Not Easy": [[676, "and-drop-std-list-is-not-easy"]], "One Of Many Bugs, Introduced By .begin() Caching": [[676, "one-of-many-bugs-introduced-by-begin-caching"]], "Exceptions From Rules \u27f6 Dogmatic Don\u2019ts (Sigh, C++)": [[676, "exceptions-from-rules-longrightarrow-dogmatic-don-ts-sigh-c"]], "Ranges: Overview": [[678, "ranges-overview"]], "Ranges?": [[678, "ranges"]], "Containers And Views (Storage Behavior)": [[678, "containers-and-views-storage-behavior"]], "Pipe Syntax": [[678, "pipe-syntax"]], "Views As Parameters: Good Old Template": [[678, "views-as-parameters-good-old-template"]], "Views As Parameters: Abbreviated Function Template": [[678, "views-as-parameters-abbreviated-function-template"]], "Views As Parameters: Concepts": [[678, "views-as-parameters-concepts"]], "Available <ranges> Concepts": [[678, "available-ranges-concepts"]], "Ranges And Views: Links": [[679, "ranges-and-views-links"]], "Structured Binding": [[680, "structured-binding"]], "Variations, Compatible Data Types": [[680, "variations-compatible-data-types"]], "struct: By Copy": [[680, "struct-by-copy"]], "struct: Reference": [[680, "struct-reference"]], "struct: By const Reference": [[680, "struct-by-const-reference"]], "std::tuple: By Copy": [[680, "std-tuple-by-copy"]], "std::tuple: By Reference": [[680, "std-tuple-by-reference"]], "std::tuple: By const Reference": [[680, "std-tuple-by-const-reference"]], "Arrays: By Copy": [[680, "arrays-by-copy"]], "Arrays: By Reference": [[680, "arrays-by-reference"]], "Arrays: By const Reference": [[680, "arrays-by-const-reference"]], "Smart Pointers: Closing Words": [[681, "smart-pointers-closing-words"]], "Shared Pointers: Closing Words": [[681, "shared-pointers-closing-words"]], "Smart Pointers (std::unique_ptr, std::shared_ptr)": [[682, "smart-pointers-std-unique-ptr-std-shared-ptr"]], "Why Smart Pointers?": [[683, "why-smart-pointers"]], "Recap: Constructors and Destructors": [[683, "recap-constructors-and-destructors"]], "(Trying To) Handwrite A Smart Pointer Class in C++ Before C++11": [[684, "trying-to-handwrite-a-smart-pointer-class-in-c-before-c-11"]], "Sensors To Manage": [[684, "sensors-to-manage"]], "Basic Resource Management, Operator Overloading": [[684, "basic-resource-management-operator-overloading"]], "Copy Constructor And Assignment Operator (And Default Ctor)": [[684, "copy-constructor-and-assignment-operator-and-default-ctor"]], "auto_ptr Style": [[684, "auto-ptr-style"]], "Explicit move() Method Maybe?": [[684, "explicit-move-method-maybe"]], "Stop!!!": [[684, "stop"]], "std::shared_ptr": [[685, "std-shared-ptr"]], "Spirit: Not Unique, But Shared (i.e. Reference Counted)": [[685, "spirit-not-unique-but-shared-i-e-reference-counted"]], "std::shared_ptr: Copy": [[685, "std-shared-ptr-copy"]], "std::shared_ptr vs. std::unique_ptr": [[685, "std-shared-ptr-vs-std-unique-ptr"]], "std::shared_ptr: Object Lifetime": [[685, "std-shared-ptr-object-lifetime"]], "std::shared_ptr: Juggling": [[685, "std-shared-ptr-juggling"]], "Demo: Basic Usage": [[685, "demo-basic-usage"]], "Demo: std::make_shared": [[685, "demo-std-make-shared"]], "Demo: Cyclic References": [[685, "demo-cyclic-references"]], "std::unique_ptr": [[686, "std-unique-ptr"]], "The Spirit Of std::unique_ptr": [[686, "the-spirit-of-std-unique-ptr"]], "Basic Usage: Prevent Leaks": [[686, "basic-usage-prevent-leaks"]], "Eliminate Chance Of Leakage \u27f6 Ownership": [[686, "eliminate-chance-of-leakage-longrightarrow-ownership"]], "Saving Keystrokes: std::make_unique<>()": [[686, "saving-keystrokes-std-make-unique"]], "Explicitly Acknowledging Ownership Transfer: std::move()": [[686, "explicitly-acknowledging-ownership-transfer-std-move"]], "Compiler Can Prove: Implicit Ownership Transfer": [[686, "compiler-can-prove-implicit-ownership-transfer"]], "How To Write Code That Can Take Ownership?": [[686, "how-to-write-code-that-can-take-ownership"]], "Manipulating Pointer Content": [[686, "manipulating-pointer-content"]], "std::weak_ptr": [[687, "std-weak-ptr"]], "Spirit: Borrowed Reference That Could Be Invalid": [[687, "spirit-borrowed-reference-that-could-be-invalid"]], "A Real-Life Example": [[687, "a-real-life-example"]], "Perfect Forwarding": [[688, "perfect-forwarding"]], "Universal References? Forwarding References? REALLY?": [[688, "universal-references-forwarding-references-really"]], "Universal Reference? Binds To Lvalues?": [[688, "universal-reference-binds-to-lvalues"]], "Enter Forwarding": [[688, "enter-forwarding"]], "Exercise: Dual insert() Method In Exercise: Bag Of Items, By Shared Reference": [[688, "exercise-dual-insert-method-in-trainings-material-soup-cxx11-exercises-bag-shared"]], "std::bind": [[689, "std-bind"]], "Why? What\u2019s The Problem?": [[689, "why-what-s-the-problem"]], "Sample Program: All Done Manually": [[689, "sample-program-all-done-manually"]], "Sideway: std::transform": [[689, "sideway-std-transform"]], "Sample Program: Using std::transform": [[689, "sample-program-using-std-transform"]], "std::bind: Null Adaptation, Pointlessly": [[689, "std-bind-null-adaptation-pointlessly"]], "std::bind: Adapting One Parameter To No Parameter": [[689, "std-bind-adapting-one-parameter-to-no-parameter"]], "std::bind: Hardcoding Parameters": [[689, "std-bind-hardcoding-parameters"]], "std::bind: Swapping Parameters \u27f6 std::placeholders": [[689, "std-bind-swapping-parameters-longrightarrow-std-placeholders"]], "std::bind: Hardcoding Only First Parameter \u27f6 std::placeholders": [[689, "std-bind-hardcoding-only-first-parameter-longrightarrow-std-placeholders"]], "std::bind: Functor (Is-A Callable)": [[689, "std-bind-functor-is-a-callable"]], "std::bind: Lambda (Is-A Callable)": [[689, "std-bind-lambda-is-a-callable"]], "Sample Program: Using std::transform With std::bind": [[689, "sample-program-using-std-transform-with-std-bind"]], "Summary": [[689, "summary"], [757, "summary"], [757, "id1"], [1079, "summary"], [1081, "summary"]], "std::function": [[690, "std-function"]], "Classic Polymorphism": [[690, "classic-polymorphism"]], "Classic Polymorphism: Upsides": [[690, "classic-polymorphism-upsides"]], "Classic Polymorphism: Technical Downsides": [[690, "classic-polymorphism-technical-downsides"]], "Classic Polymorphism: More Downsides": [[690, "classic-polymorphism-more-downsides"]], "std::function to the Rescue (1)": [[690, "std-function-to-the-rescue-1"]], "std::function to the Rescue (2)": [[690, "std-function-to-the-rescue-2"]], "std::function: Last Words": [[690, "std-function-last-words"]], "Threads Introduction": [[692, "threads-introduction"]], "Operating System Primitives": [[692, "operating-system-primitives"]], "There Be Dragons": [[692, "there-be-dragons"]], "Threads in C++": [[693, "threads-in-c"]], "Creating Threads is Far Too Easy": [[693, "creating-threads-is-far-too-easy"]], "Joinable vs. Detached": [[693, "joinable-vs-detached"]], "Cornercases in Thread Lifetime": [[693, "cornercases-in-thread-lifetime"]], "Race Conditions": [[694, "race-conditions"], [755, "race-conditions"]], "std::atomic": [[695, "std-atomic"]], "Atomic Instructions (1)": [[695, "atomic-instructions-1"]], "Atomic Instructions (2)": [[695, "atomic-instructions-2"]], "std::mutex And Friends": [[696, "std-mutex-and-friends"]], "std::mutex": [[696, "std-mutex"]], "std::recursive_mutex": [[696, "std-recursive-mutex"]], "std::timed_mutex": [[696, "std-timed-mutex"]], "std::recursive_timed_mutex": [[696, "std-recursive-timed-mutex"]], "Scoped Locking": [[697, "scoped-locking"]], "Explicit Unlocking Considered Dangerous": [[697, "explicit-unlocking-considered-dangerous"]], "RAII - Resource Acquisition Is Initialization": [[697, "raii-resource-acquisition-is-initialization"]], "Simplest: std::lock_guard": [[697, "simplest-std-lock-guard"]], "std::condition_variable (Live Hacking Multithreaded Queue)": [[698, "std-condition-variable-live-hacking-multithreaded-queue"]], "Overview: Operations": [[698, "overview-operations"]], "Communication, Polling: Thread-Safe Queue": [[698, "communication-polling-thread-safe-queue"]], "Anti-Polling: Thread-Safe Queue, And POSIX Condition Variables": [[698, "anti-polling-thread-safe-queue-and-posix-condition-variables"]], "Discussion: Signalling And Waiting, Predicates: Separation Of Concerns": [[698, "discussion-signalling-and-waiting-predicates-separation-of-concerns"]], "Thread-Safe Queue, And C++ Condition Variables": [[698, "thread-safe-queue-and-c-condition-variables"]], "std::promise and std::future (And Some std::chrono) (Some Live Hacking)": [[700, "std-promise-and-std-future-and-some-std-chrono-some-live-hacking"]], "Overview: std::promise": [[700, "overview-std-promise"]], "Overview: std::future": [[700, "overview-std-future"]], "Utterly Wrong: Waiting For Something To Become Ready": [[700, "utterly-wrong-waiting-for-something-to-become-ready"]], "Sideways: std::chrono, And Literals": [[700, "sideways-std-chrono-and-literals"]], "Minimal Fix: Use std::mutex": [[700, "minimal-fix-use-std-mutex"]], "Anti-Clumsiness: Scoped Locking": [[700, "anti-clumsiness-scoped-locking"]], "Pro-Readability: Encapsulate": [[700, "pro-readability-encapsulate"]], "Atomics On Structures?": [[700, "atomics-on-structures"]], "Anti-Polling: Semaphore": [[700, "anti-polling-semaphore"]], "Getting To The Point: std::promise And std::future": [[700, "getting-to-the-point-std-promise-and-std-future"]], "And Exceptions?": [[700, "and-exceptions"]], "std::chrono": [[701, "std-chrono"], [701, "id1"]], "Clock Domains": [[701, "clock-domains"]], "Measuring Time (1)": [[701, "measuring-time-1"]], "Measuring Time (2)": [[701, "measuring-time-2"]], "Sleeping, and Literals": [[701, "sleeping-and-literals"]], "New-Style Union: std::variant": [[702, "new-style-union-std-variant"]], "Exercise: Bag Of Items, By Copy": [[704, "exercise-bag-of-items-by-copy"]], "Step 1: Insert, Find": [[704, "step-1-insert-find"]], "Step 2: Remove": [[704, "step-2-remove"]], "Exercise: Bag Of Items, By Shared Reference": [[705, "exercise-bag-of-items-by-shared-reference"]], "Step 1: Transform into std::shared_ptr": [[705, "step-1-transform-into-std-shared-ptr"]], "Step 2: Accidental Move-Insert?": [[705, "step-2-accidental-move-insert"]], "Step 3: Move-Insert, And std::weak_ptr": [[705, "step-3-move-insert-and-std-weak-ptr"]], "Exercise: Bag Of Items, By Unique Reference": [[706, "exercise-bag-of-items-by-unique-reference"]], "std::filesystem": [[708, "std-filesystem"]], "Paths: Composition, Comparison": [[708, "paths-composition-comparison"]], "Absolute and Relative Paths": [[708, "absolute-and-relative-paths"], [841, "absolute-and-relative-paths"]], "Path Component Access": [[708, "path-component-access"]], "Iterating Over Path Components": [[708, "iterating-over-path-components"]], "Current Working Directory": [[708, "current-working-directory"], [820, "current-working-directory"]], "Directory Creation: std::filesystem::create_directory()": [[708, "directory-creation-std-filesystem-create-directory"]], "Directory Creation: std::filesystem::create_directories()": [[708, "directory-creation-std-filesystem-create-directories"]], "Directory Entry Classification: std::filesystem::is_xxx()": [[708, "directory-entry-classification-std-filesystem-is-xxx"]], "Directory Entries: Basics": [[708, "directory-entries-basics"]], "Directory Entries: std::filesystem::directory_entry": [[708, "directory-entries-std-filesystem-directory-entry"]], "Iterating Over Directory Entries": [[708, "iterating-over-directory-entries"]], "Recursive Directory Iteration": [[708, "recursive-directory-iteration"]], "C++ 11": [[709, "c-11"]], "Generated Topic Graph": [[710, "generated-topic-graph"]], "Modern Character Devices (Screenplay)": [[712, "modern-character-devices-screenplay"]], "Modern Character Devices (Slideshow)": [[713, "modern-character-devices-slideshow"]], "Source": [[713, null], [716, null], [718, null], [721, null], [723, null], [726, null], [735, null], [737, null], [747, null], [749, null], [760, null], [765, null]], "Character Devices: Problems": [[713, "character-devices-problems"]], "Dynamic Device Numbers": [[713, "dynamic-device-numbers"]], "Device Classes": [[713, "device-classes"]], "Devices": [[713, "devices"]], "Modern Character Devices": [[714, "modern-character-devices"]], "File Operations on Character Devices (Screenplay)": [[715, "file-operations-on-character-devices-screenplay"]], "Hooks Necessary": [[715, "hooks-necessary"]], "Implement open(), read(), write()": [[715, "implement-open-read-write"]], "ioctl()": [[715, "ioctl"]], "File Operations on Character Devices (Slideshow)": [[716, "file-operations-on-character-devices-slideshow"]], "File Operations: Interface Definition (\u201cvtable\u201d) (1)": [[716, "file-operations-interface-definition-vtable-1"]], "Available Methods": [[716, "available-methods"]], "open(): Userspace": [[716, "open-userspace"]], "open(): Kernelspace": [[716, "open-kernelspace"]], "ioctl(): Userspace": [[716, "ioctl-userspace"]], "ioctl(): Kernelspace": [[716, "ioctl-kernelspace"]], "ioctl(): Requests": [[716, "ioctl-requests"]], "_IO*() Macros": [[716, "io-macros"]], "_IO*() Macros: Usage": [[716, "io-macros-usage"]], "File Operations on Character Devices": [[717, "file-operations-on-character-devices"]], "Coding: First Functionality (Slideshow)": [[718, "coding-first-functionality-slideshow"]], "Implement Event List": [[718, "implement-event-list"]], "Implement ioctl Request to Add an Event": [[718, "implement-ioctl-request-to-add-an-event"]], "Implement a Userspace Test Program": [[718, "implement-a-userspace-test-program"]], "Coding: First Functionality": [[719, "coding-first-functionality"]], "Character Device Basics (Livehacking Screenplay)": [[720, "character-device-basics-livehacking-screenplay"]], "Major and Minor Numbers": [[720, "major-and-minor-numbers"]], "Character Device": [[720, "character-device"]], "Character Device Basics (Slideshow)": [[721, "character-device-basics-slideshow"]], "Major and Minor Numbers: User\u2019s View": [[721, "major-and-minor-numbers-user-s-view"]], "Major and Minor Numbers: Kernel Space": [[721, "major-and-minor-numbers-kernel-space"]], "History: Hardcoded Device Numbers (1)": [[721, "history-hardcoded-device-numbers-1"]], "History: Hardcoded Device Numbers (2)": [[721, "history-hardcoded-device-numbers-2"]], "Character Device (1)": [[721, "character-device-1"]], "Character Device (2)": [[721, "character-device-2"]], "And User Space?": [[721, "and-user-space"]], "Character Device Basics": [[722, "character-device-basics"]], "Coding: Multiple Devices (Slideshow)": [[723, "coding-multiple-devices-slideshow"]], "Instantiate Multiple Devices": [[723, "instantiate-multiple-devices"]], "Coding: Multiple Devices": [[724, "coding-multiple-devices"]], "Coding: Refactoring (Screenplay)": [[725, "coding-refactoring-screenplay"]], "Build Module From Multiple Files": [[725, "build-module-from-multiple-files"]], "Per-Device Structure": [[725, "per-device-structure"]], "Want My Hair Pretty": [[725, "want-my-hair-pretty"]], "Makefile: -Wswitch-enum": [[725, "makefile-wswitch-enum"]], "Coding: Refactoring (Slideshow)": [[726, "coding-refactoring-slideshow"]], "What\u2019s Bad?": [[726, "what-s-bad"]], "Coding: Refactoring": [[727, "coding-refactoring"]], "DMA (Slideshow)": [[728, "dma-slideshow"]], "Address Types": [[728, "address-types"]], "Physical Memory Allocation": [[728, "physical-memory-allocation"]], "DMA Mappings: Overview": [[728, "dma-mappings-overview"]], "Consistent DMA Mappings": [[728, "consistent-dma-mappings"]], "Streaming Mappings: Direction": [[728, "streaming-mappings-direction"]], "Streaming Mappings: To Virtual Address": [[728, "streaming-mappings-to-virtual-address"]], "Streaming Mappings: To Page": [[728, "streaming-mappings-to-page"]], "Streaming Mappings: Scatterlists (1)": [[728, "streaming-mappings-scatterlists-1"]], "Streaming Mappings: Scatterlists (2)": [[728, "streaming-mappings-scatterlists-2"]], "Streaming Mappings: Syncing": [[728, "streaming-mappings-syncing"]], "DMA": [[729, "dma"]], "Building a Fedora Kernel (Screenplay)": [[730, "building-a-fedora-kernel-screenplay"]], "Why Build the Entire Kernel When I Only Want to Build a Module": [[730, "why-build-the-entire-kernel-when-i-only-want-to-build-a-module"]], "Building from \u201cExploded Git Tree\u201d": [[730, "building-from-exploded-git-tree"]], "Building from the RPM Source": [[730, "building-from-the-rpm-source"]], "Fedora: Building the Kernel": [[731, "fedora-building-the-kernel"]], "Fedora: Building External Kernel Modules (Screenplay)": [[732, "fedora-building-external-kernel-modules-screenplay"]], "Prerequisite: Build Entire Kernel": [[732, "prerequisite-build-entire-kernel"]], "Build Modules": [[732, "build-modules"]], "Install Modules": [[732, "install-modules"]], "Fedora: Building External Kernel Modules": [[733, "fedora-building-external-kernel-modules"]], "Module Loading, Hello World (Slideshow)": [[735, "module-loading-hello-world-slideshow"]], "Kernel Driver Anatomy": [[735, "kernel-driver-anatomy"]], "Built-In vs. Loadable Module": [[735, "built-in-vs-loadable-module"]], "Minimum Module Source": [[735, "minimum-module-source"]], "Gotchas: init() and exit()": [[735, "gotchas-init-and-exit"]], "Module Build": [[735, "module-build"]], "Minimum Makefile, Building": [[735, "minimum-makefile-building"]], "Modules: Load/Unload Commands": [[735, "modules-load-unload-commands"]], "Modules: Dependency (and other) Databases": [[735, "modules-dependency-and-other-databases"]], "Module Loading, Hello World": [[736, "module-loading-hello-world"]], "Coding: Raspi GPIO Interrupts (Slideshow)": [[737, "coding-raspi-gpio-interrupts-slideshow"]], "Move to Raspberry Pi, Cross Compiling": [[737, "move-to-raspberry-pi-cross-compiling"]], "Cross Compilation": [[737, "cross-compilation"]], "Cross Compilation Sucks": [[737, "cross-compilation-sucks"]], "Short (Legacy) GPIO API Introduction": [[737, "short-legacy-gpio-api-introduction"]], "Implement New Event Type: Interrupt": [[737, "implement-new-event-type-interrupt"]], "New ioctl: MY_ACTIVATE_GPIO": [[737, "new-ioctl-my-activate-gpio"]], "Interlude: _IO*() Macros": [[737, "interlude-io-macros"]], "Request GPIO": [[737, "request-gpio"]], "Request Interrupt": [[737, "request-interrupt"]], "Coding: Raspi GPIO Interrupts": [[738, "coding-raspi-gpio-interrupts"]], "Interrupts (Slideshow)": [[739, "interrupts-slideshow"]], "Interrupt Facts": [[739, "interrupt-facts"]], "Interrupt Service Routine": [[739, "interrupt-service-routine"]], "Requesting (and Releasing) Interrupts (1)": [[739, "requesting-and-releasing-interrupts-1"]], "IO Memory (Slideshow)": [[741, "io-memory-slideshow"]], "I/O Memory": [[741, "i-o-memory"]], "I/O Memory: Reservation": [[741, "i-o-memory-reservation"]], "Making I/O Memory Accessible": [[741, "making-i-o-memory-accessible"]], "Accessing I/O Memory": [[741, "accessing-i-o-memory"]], "IO Memory": [[742, "io-memory"]], "Dynamic Memory: kmalloc() (Slideshow)": [[743, "dynamic-memory-kmalloc-slideshow"]], "Dynamic Memory: kmalloc()": [[743, "dynamic-memory-kmalloc"], [744, "dynamic-memory-kmalloc"]], "Dynamic Memory: Flags": [[743, "dynamic-memory-flags"]], "Doubly Linked Lists (Slideshow)": [[745, "doubly-linked-lists-slideshow"]], "Big Picture": [[745, "big-picture"]], "List Head": [[745, "list-head"]], "Insert a Node": [[745, "insert-a-node"]], "Iteration, and Getting a Node\u2019s Container": [[745, "iteration-and-getting-a-node-s-container"]], "Emptying a List": [[745, "emptying-a-list"]], "Doubly Linked Lists": [[746, "doubly-linked-lists"]], "Coding: Fix Race Condition (Mutex) (Slideshow)": [[747, "coding-fix-race-condition-mutex-slideshow"]], "What Do We Have?": [[747, "what-do-we-have"]], "Consequences of Not Protecting": [[747, "consequences-of-not-protecting"]], "Protect Event List": [[747, "protect-event-list"]], "Protect Device List": [[747, "protect-device-list"]], "Coding: Fix Race Condition (Mutex)": [[748, "coding-fix-race-condition-mutex"]], "Mutex (and RT Mutex) (Slideshow)": [[749, "mutex-and-rt-mutex-slideshow"]], "Locking in the Kernel": [[749, "locking-in-the-kernel"]], "Mutual Exclusion: Mutex": [[749, "mutual-exclusion-mutex"]], "Mutex: Locking (1)": [[749, "mutex-locking-1"]], "Mutex: Locking (2)": [[749, "mutex-locking-2"]], "Mutex: Releasing": [[749, "mutex-releasing"]], "Realtime Mutex": [[749, "realtime-mutex"]], "Mutex (and RT Mutex)": [[750, "mutex-and-rt-mutex"]], "Network Devices (Slideshow)": [[751, "network-devices-slideshow"]], "Module Initialization: Device Allocation": [[751, "module-initialization-device-allocation"]], "Module Initialization: Device Registration": [[751, "module-initialization-device-registration"]], "Device Methods": [[751, "device-methods"]], "Kernel Networking Layer Utilities": [[751, "kernel-networking-layer-utilities"]], "Network Devices": [[752, "network-devices"]], "PCI (Slideshow)": [[753, "pci-slideshow"]], "First and Foremost": [[753, "first-and-foremost"]], "PCI Driver Methods": [[753, "pci-driver-methods"]], "PCI Driver Structure, and the init() Method": [[753, "pci-driver-structure-and-the-init-method"]], "PCI Device Structure, and the probe() Method": [[753, "pci-device-structure-and-the-probe-method"]], "The probe() Method: Boilerplate": [[753, "the-probe-method-boilerplate"]], "The probe() Method: Interrupt": [[753, "the-probe-method-interrupt"]], "The probe() Method: PCI Resources (BARs)": [[753, "the-probe-method-pci-resources-bars"]], "DMA Support Routines": [[753, "dma-support-routines"]], "PCI": [[754, "pci"]], "Process vs.Atomic Context (Slideshow)": [[755, "process-vs-atomic-context-slideshow"]], "Process Context": [[755, "process-context"]], "Atomic Context": [[755, "atomic-context"]], "Atomic vs. Process Context": [[755, "atomic-vs-process-context"]], "\u201cSleep While Atomic\u201d Debugging": [[755, "sleep-while-atomic-debugging"]], "Process vs.Atomic Context": [[756, "process-vs-atomic-context"]], "Rasperry Pi: Kernel Build": [[757, "rasperry-pi-kernel-build"]], "Cross Toolchain on Host": [[757, "cross-toolchain-on-host"]], "Architecture Name - What\u2019s That?": [[757, "architecture-name-what-s-that"]], "Building a Toolchain with Gentoo\u2019s crossdev": [[757, "building-a-toolchain-with-gentoo-s-crossdev"]], "Other Toolchains": [[757, "other-toolchains"]], "Kernel Source": [[757, "kernel-source"]], "Kernel Compilation": [[757, "kernel-compilation"]], "Parameters for the Build": [[757, "parameters-for-the-build"]], "Preparing the Kernel .config File": [[757, "preparing-the-kernel-config-file"]], "Building the Kernel Artifacts": [[757, "building-the-kernel-artifacts"]], "Packaging": [[757, "packaging"], [1010, "packaging"]], "Bootloader Artifacts": [[757, "bootloader-artifacts"]], "Module Tree": [[757, "module-tree"]], "Deployment": [[757, "deployment"]], "Variation": [[757, "variation"]], "Raspberry Pi: Building the Kernel": [[758, "raspberry-pi-building-the-kernel"]], "Todo jjj": [[758, "todo-jjj"]], "Sample Code Maintenance": [[759, "sample-code-maintenance"]], "Coding: Fix Sleep While Atomic (Slideshow)": [[760, "coding-fix-sleep-while-atomic-slideshow"]], "Simple Spinlock Usage: spin_lock()": [[760, "simple-spinlock-usage-spin-lock"]], "Discuss Call Chain, IRQ State": [[760, "discuss-call-chain-irq-state"]], "Enter spin_lock_irqsave(), spin_unlock_irqrestore()": [[760, "enter-spin-lock-irqsave-spin-unlock-irqrestore"]], "Ah, kmalloc()": [[760, "ah-kmalloc"]], "Coding: Fix Sleep While Atomic": [[761, "coding-fix-sleep-while-atomic"]], "Spinlock (vs. Mutex) (Slideshow)": [[762, "spinlock-vs-mutex-slideshow"]], "Mutual Exclusion: Spinlock": [[762, "mutual-exclusion-spinlock"]], "Spinlock Initialization": [[762, "spinlock-initialization"]], "Simple Lock/Unlock": [[762, "simple-lock-unlock"]], "Simple is not Bulletproof: Interrupt State": [[762, "simple-is-not-bulletproof-interrupt-state"]], "Mutual Exclusion: Conclusion": [[762, "mutual-exclusion-conclusion"]], "Spinlock (vs. Mutex)": [[763, "spinlock-vs-mutex"]], "dup(), fork(), and Reference Counting (Stub)": [[764, "dup-fork-and-reference-counting-stub"]], "Coding: Timed Event (Slideshow)": [[765, "coding-timed-event-slideshow"]], "Per-Event Timestamp": [[765, "per-event-timestamp"]], "Discussion: Deferred Events": [[765, "discussion-deferred-events"]], "Add Timer": [[765, "add-timer"]], "Gotcha: Cleanup Running Timer": [[765, "gotcha-cleanup-running-timer"]], "More Gotchas": [[765, "more-gotchas"]], "Coding: Timed Event": [[766, "coding-timed-event"]], "Timer Management (Slideshow)": [[767, "timer-management-slideshow"]], "Original Timer API": [[767, "original-timer-api"]], "jiffies": [[767, "jiffies"]], "\u201cTimer Wheel\u201d Methods": [[767, "timer-wheel-methods"]], "Better Documentation": [[767, "better-documentation"]], "Timer Management": [[768, "timer-management"]], "To Do List": [[769, "to-do-list"]], "Accessing Userspace Memory (Screenplay)": [[770, "accessing-userspace-memory-screenplay"]], "New ioctl: GET_ONE_EVENT": [[770, "new-ioctl-get-one-event"]], "Getting One Event": [[770, "getting-one-event"]], "copy_to_user()": [[770, "copy-to-user"]], "Userspace Test Program": [[770, "userspace-test-program"]], "Accessing Userspace Memory (Slideshow)": [[771, "accessing-userspace-memory-slideshow"]], "Address Spaces": [[771, "address-spaces"]], "Copying To and From Userspace": [[771, "copying-to-and-from-userspace"]], "Accessing Userspace Memory": [[772, "accessing-userspace-memory"]], "Waiting for Something (Screenplay)": [[773, "waiting-for-something-screenplay"]], "read() Not Implemented": [[773, "read-not-implemented"]], "Implementing read() Naively": [[773, "implementing-read-naively"]], "Discussion: What If Nothing\u2019s There?": [[773, "discussion-what-if-nothing-s-there"]], "Implementing O_NONBLOCK": [[773, "implementing-o-nonblock"]], "Waiting for Something (Slideshow)": [[774, "waiting-for-something-slideshow"]], "Waiting for Something": [[774, "waiting-for-something"], [775, "waiting-for-something"]], "Wait Queues: Initializing": [[774, "wait-queues-initializing"]], "Wait Queue: Waiting": [[774, "wait-queue-waiting"]], "Wait Queue: Waking": [[774, "wait-queue-waking"]], "Workqueue (Screenplay)": [[776, "workqueue-screenplay"]], "Add Workqueue": [[776, "add-workqueue"]], "Submit/Defer Work From Atomic Context": [[776, "submit-defer-work-from-atomic-context"]], "Cleanup (Why We Did This, After All)": [[776, "cleanup-why-we-did-this-after-all"]], "Workqueue (Slideshow)": [[777, "workqueue-slideshow"]], "Workqueue: Motivation": [[777, "workqueue-motivation"]], "Creating/Destroying a Workqueue": [[777, "creating-destroying-a-workqueue"]], "What is Work?": [[777, "what-is-work"]], "Submitting Work": [[777, "submitting-work"]], "Workqueue": [[778, "workqueue"]], "Exercises: Archiving And Compression": [[779, "exercises-archiving-and-compression"]], "gzip": [[781, "gzip"]], "Compression Tools: Comparison": [[782, "compression-tools-comparison"]], "tar": [[783, "tar"]], "Creating And Viewing Archives": [[783, "creating-and-viewing-archives"]], "(De)Compression": [[783, "de-compression"]], "Etiquette": [[783, "etiquette"]], "Option Summary": [[783, "option-summary"]], "Being Creative With The Pipe": [[783, "being-creative-with-the-pipe"]], "Exam (ECE/SS2022/G1): Do A Lot With Files And Directories": [[784, "exam-ece-ss2022-g1-do-a-lot-with-files-and-directories"]], "Precondition: Logged-In To Remote/Exam Computer": [[784, "precondition-logged-in-to-remote-exam-computer"], [785, "precondition-logged-in-to-remote-exam-computer"]], "Create Exam Skeleton (5 Points)": [[784, "create-exam-skeleton-5-points"], [785, "create-exam-skeleton-5-points"]], "Create Credentials Files (10 Points)": [[784, "create-credentials-files-10-points"]], "Public Place (10 Points)": [[784, "public-place-10-points"], [785, "public-place-10-points"]], "Private Place (10 Points)": [[784, "private-place-10-points"], [785, "private-place-10-points"]], "Shared File in Public Place (10 Points)": [[784, "shared-file-in-public-place-10-points"], [785, "shared-file-in-public-place-10-points"]], "Make A Backup Of ~/exam-01 (15 Points)": [[784, "make-a-backup-of-exam-01-15-points"], [785, "make-a-backup-of-exam-01-15-points"]], "Exam (ECE/SS2022/G2): Do A Lot With Files And Directories": [[785, "exam-ece-ss2022-g2-do-a-lot-with-files-and-directories"]], "Create Business Cards (10 Points)": [[785, "create-business-cards-10-points"]], "Exercises/Exams: Linux Basics": [[786, "exercises-exams-linux-basics"]], "Linux Basics": [[787, "linux-basics"]], "Everything Is A File (Live Demo)": [[788, "everything-is-a-file-live-demo"]], "Simple is beautiful": [[788, "simple-is-beautiful"]], "Ok: a File is a File": [[788, "ok-a-file-is-a-file"]], "Is a Serial Interface (UART) a File?": [[788, "is-a-serial-interface-uart-a-file"]], "Pseudo Terminals": [[788, "pseudo-terminals"]], "Disks and Partitions": [[788, "disks-and-partitions"]], "/proc and /sys": [[788, "proc-and-sys"]], "Pseudo Devices": [[788, "pseudo-devices"]], "Environment (Variables)": [[789, "environment-variables"]], "Shell: Environment Variables, And Process Creation": [[789, "shell-environment-variables-and-process-creation"]], "Popular Environment Variables: HOME, SHELL, USER": [[789, "popular-environment-variables-home-shell-user"]], "Popular Environment Variables: PATH": [[789, "popular-environment-variables-path"]], "FH/Moodle Quiz: Linux Basics": [[790, "fh-moodle-quiz-linux-basics"]], "User Space, Kernel Space": [[790, "user-space-kernel-space"]], "Processes, Scheduling, and Virtual Memory": [[790, "processes-scheduling-and-virtual-memory"]], "Login? What Is That?": [[792, "login-what-is-that"]], "Authentication: Prompting The User For Login Data": [[792, "authentication-prompting-the-user-for-login-data"]], "Authentication: Verification Of Login Data": [[792, "authentication-verification-of-login-data"]], "And After Successful Authentication?": [[792, "and-after-successful-authentication"]], "Impersonation": [[792, "impersonation"]], "Logged In, Finally": [[792, "logged-in-finally"]], "User Space, Kernel Space?": [[793, "user-space-kernel-space"]], "User Space: Abstractions": [[793, "user-space-abstractions"]], "Kernel: Where The Heavy Stuff Is": [[793, "kernel-where-the-heavy-stuff-is"]], "Booting a Computer": [[793, "booting-a-computer"]], "Processes, Scheduling, Address Spaces": [[794, "processes-scheduling-address-spaces"]], "Problem: Owning the CPU?": [[794, "problem-owning-the-cpu"]], "Solution: Scheduling (Time Slices)": [[794, "solution-scheduling-time-slices"]], "Problem: Owning all Memory?": [[794, "problem-owning-all-memory"]], "Solution: Virtual Memory": [[794, "solution-virtual-memory"]], "Process Attributes: User ID (UID)": [[794, "process-attributes-user-id-uid"]], "Process Attributes: Groups": [[794, "process-attributes-groups"]], "Processes: More Attributes": [[794, "processes-more-attributes"]], "Process Hierarchy (Parent, Child Process)": [[795, "process-hierarchy-parent-child-process"]], "More Process Rules": [[795, "more-process-rules"]], "Typical Process Tree": [[795, "typical-process-tree"]], "Services, init": [[795, "services-init"]], "Windows Subsystem for Linux (WSL)": [[796, "windows-subsystem-for-linux-wsl"]], "Disclaimer!": [[796, null]], "More Links": [[796, "more-links"]], "My $0.02": [[796, "my-0-02"]], "WSL, Finally": [[796, "wsl-finally"]], "Exercises: IO-Redirection, Pipes": [[797, "exercises-io-redirection-pipes"]], "I/O Redirection": [[799, "i-o-redirection"]], "Standard I/O Streams": [[799, "standard-i-o-streams"]], "I/O Redirection Operators": [[799, "i-o-redirection-operators"]], "Example: Standard Output Redirection": [[799, "example-standard-output-redirection"]], "Example: Standard Input Redirection": [[799, "example-standard-input-redirection"]], "Example: Standard Error Redirection": [[799, "example-standard-error-redirection"]], "Example: Everything Redirection": [[799, "example-everything-redirection"]], "I/O Redirection: Swap stdout And stderr": [[800, "i-o-redirection-swap-stdout-and-stderr"]], "Basic Pipe Usage": [[800, "basic-pipe-usage"]], "Basic Pipe Usage: What The Shell Does": [[800, "basic-pipe-usage-what-the-shell-does"]], "And How Do I Count Lines On stderr?": [[800, "and-how-do-i-count-lines-on-stderr"]], "More Tricks": [[800, "more-tricks"]], "Pipes": [[801, "pipes"]], "Why Pipes?": [[801, "why-pipes"]], "Pipe Facts": [[801, "pipe-facts"]], "Pipe Examples": [[801, "pipe-examples"]], "More Pipe Examples": [[801, "more-pipe-examples"]], "Named Pipes": [[801, "named-pipes"]], "Permissions: Mode, User and Group Ownership": [[802, "permissions-mode-user-and-group-ownership"]], "Owner and Permissions": [[802, "owner-and-permissions"]], "A Simple Example": [[802, "a-simple-example"]], "Teacher\u2019s note: create that constellation (as root)": [[802, null]], "Permission Check: User": [[802, "permission-check-user"]], "Permission Check: Group": [[802, "permission-check-group"]], "Permission Check: Others": [[802, "permission-check-others"]], "Programs: Execute Permissions": [[802, "programs-execute-permissions"]], "Directory Permissions": [[802, "directory-permissions"]], "Permission Bits, octal": [[802, "permission-bits-octal"]], "Shell Commands: Tuning Permissions": [[802, "shell-commands-tuning-permissions"]], "Shell Commands: Changing User/Group Ownership": [[802, "shell-commands-changing-user-group-ownership"]], "Exercise: Determine Your User Credentials": [[803, "exercise-determine-your-user-credentials"]], "FH/Moodle Quiz: Permissions": [[804, "fh-moodle-quiz-permissions"], [805, "fh-moodle-quiz-permissions"]], "Exercises: File System Permissions": [[806, "exercises-file-system-permissions"]], "Exercise: Create Private Directory": [[807, "exercise-create-private-directory"]], "Question: Private Directory": [[808, "question-private-directory"]], "Exercise: Create Public Directory": [[809, "exercise-create-public-directory"]], "Question: Public Directory": [[810, "question-public-directory"]], "Exercise: Create Group-Shared File": [[811, "exercise-create-group-shared-file"]], "SetUID Programs: passwd, sudo, \u2026": [[813, "setuid-programs-passwd-sudo"]], "Problem: Change My Password": [[813, "problem-change-my-password"]], "Solution: Set-UID Bit": [[813, "solution-set-uid-bit"]], "Set-UID: How Does It Work?": [[813, "set-uid-how-does-it-work"]], "Command: chmod": [[813, "command-chmod"]], "Set-UID Is Not A Toy!": [[813, "set-uid-is-not-a-toy"]], "SetUID: Live Demo": [[814, "setuid-live-demo"]], "Real and Effective User ID": [[814, "real-and-effective-user-id"]], "Sample Program": [[814, "sample-program"]], "Set-UID jfasch?": [[814, "set-uid-jfasch"]], "Set-UID root? Danger!": [[814, "set-uid-root-danger"]], "Ugly Hack: Sticky Bit": [[815, "ugly-hack-sticky-bit"]], "Sticky Bit": [[815, "sticky-bit"]], "Default Permissions: umask": [[816, "default-permissions-umask"]], "Default Permissions - umask": [[816, "id1"]], "umask: How Does it Work?": [[816, "umask-how-does-it-work"]], "Shape (1)": [[817, "shape-1"]], "Shape (2)": [[817, "shape-2"]], "Options": [[817, "options"], [846, "options"]], "Help and Manual": [[817, "help-and-manual"]], "Man Pages: Navigation": [[817, "man-pages-navigation"]], "Commandline Editing: Moving, Deleting": [[817, "commandline-editing-moving-deleting"]], "Commandline Editing: Entire Words": [[817, "commandline-editing-entire-words"]], "Commandline Editing: Entire Lines": [[817, "commandline-editing-entire-lines"]], "The Tabulator Key: Command Completion": [[817, "the-tabulator-key-command-completion"]], "The Tabulator Key: Filename Completion": [[817, "the-tabulator-key-filename-completion"]], "Shell Configuration File: ~/.bashrc": [[818, "shell-configuration-file-bashrc"]], "What\u2019s Volatile?": [[818, "what-s-volatile"]], "Copying: cp": [[819, "copying-cp"]], "Option Overview": [[819, "option-overview"]], "Creating backup copy of, say, .bashrc in the home directory": [[819, "creating-backup-copy-of-say-bashrc-in-the-home-directory"]], "Similar: copy a file into a different directory, under a different name": [[819, "similar-copy-a-file-into-a-different-directory-under-a-different-name"]], "Similar: copy a file into a different directory, keeping its name": [[819, "similar-copy-a-file-into-a-different-directory-keeping-its-name"]], "Copy multiple files into a directory": [[819, "copy-multiple-files-into-a-directory"]], "Copying a directory, together with its contents \u27f6 recursive copy": [[819, "copying-a-directory-together-with-its-contents-longrightarrow-recursive-copy"]], "Current Working Directory: pwd": [[820, "current-working-directory-pwd"]], "Changing The Current Working Directory: cd": [[820, "changing-the-current-working-directory-cd"]], "Exercise: Copy Directory Tree": [[821, "exercise-copy-directory-tree"]], "Exercise: Copy Files": [[822, "exercise-copy-files"]], "Exercise: Create Files (I/O Redirection)": [[823, "exercise-create-files-i-o-redirection"]], "Exercise: Move Files": [[824, "exercise-move-files"]], "Exercises: Create/Copy/Move/Remove": [[825, "exercises-create-copy-move-remove"]], "Exercise: mkdir": [[826, "exercise-mkdir"]], "Exercise: Funny Stuff": [[827, "exercise-funny-stuff"]], "Exercise: Remove Directory Tree": [[828, "exercise-remove-directory-tree"]], "Exercise: Verify, Repeat": [[829, "exercise-verify-repeat"]], "FH/Moodle Quiz: Shell": [[830, "fh-moodle-quiz-shell"]], "The Shell - Exercises": [[831, "the-shell-exercises"]], "Exercise: File Types in /dev": [[832, "exercise-file-types-in-dev"]], "Exercise: Size of /etc/passwd": [[833, "exercise-size-of-etc-passwd"]], "Exercises: The ls Command": [[834, "exercises-the-ls-command"]], "Exercise: Permissions of Home Directory": [[835, "exercise-permissions-of-home-directory"]], "Creating And Removing Files and Directories": [[836, "creating-and-removing-files-and-directories"]], "Creating a Directory: mkdir": [[836, "creating-a-directory-mkdir"]], "Creating a File: I/O redirection": [[836, "creating-a-file-i-o-redirection"]], "Creating an Empty File: touch": [[836, "creating-an-empty-file-touch"]], "Removing A File: rm": [[836, "removing-a-file-rm"]], "Removing A Directory: rmdir, rm -r": [[836, "removing-a-directory-rmdir-rm-r"]], "Symbolic Links, Hard Links": [[838, "symbolic-links-hard-links"]], "Directory Listings: The ls Command": [[839, "directory-listings-the-ls-command"]], "Many Options": [[839, "many-options"]], "Hidden Files": [[839, "hidden-files"]], "File Types": [[839, "file-types"]], "Moving and Renaming: mv": [[840, "moving-and-renaming-mv"]], "Renaming A File (or Directory)": [[840, "renaming-a-file-or-directory"]], "Moving a File to Somewhere Else": [[840, "moving-a-file-to-somewhere-else"]], "Moving a Directory to Somewhere Else": [[840, "moving-a-directory-to-somewhere-else"]], "Path Separator": [[841, "path-separator"]], "Relative Paths": [[841, "relative-paths"]], "Absolute Paths": [[841, "absolute-paths"]], "Special Paths": [[841, "special-paths"]], "cat": [[842, "cat"], [842, "id1"]], "cut": [[843, "cut"], [843, "id1"]], "Exercises: Inspecting Text Files": [[844, "exercises-inspecting-text-files"]], "find": [[845, "find"]], "Directories durchsuchen mit find": [[845, "directories-durchsuchen-mit-find"]], "find: Optionen": [[845, "find-optionen"]], "find: Beispiele": [[845, "find-beispiele"]], "find: Verkn\u00fcpfungen": [[845, "find-verknupfungen"]], "find: Verkn\u00fcpfungen: Beispiele": [[845, "find-verknupfungen-beispiele"]], "grep": [[846, "grep"]], "Searching With grep": [[846, "searching-with-grep"]], "More About Regular Expressions": [[846, "more-about-regular-expressions"]], "head And tail": [[848, "head-and-tail"]], "head": [[848, "head"]], "tail": [[848, "tail"]], "head And tail In The Pipe": [[848, "head-and-tail-in-the-pipe"]], "less": [[849, "less"]], "Paging Files Using less": [[849, "paging-files-using-less"]], "Help Screen (Enter With h)": [[849, "help-screen-enter-with-h"]], "stdin, stdout, And The Pipe": [[850, "stdin-stdout-and-the-pipe"]], "stdin, stdout: Examples": [[850, "stdin-stdout-examples"]], "Pipe: Examples": [[850, "pipe-examples"]], "Basics Text Tools": [[850, "basics-text-tools"]], "Drafts": [[851, "drafts"]], "Yocto": [[852, "yocto"]], "Controlling a Brushless Motor With Raspberry Pi": [[854, "controlling-a-brushless-motor-with-raspberry-pi"]], "Topic": [[854, null]], "Electronic Speed Controller (ESC)": [[854, "electronic-speed-controller-esc"]], "Select Running Mode: \u201cFwd/Rev\u201d": [[854, "select-running-mode-fwd-rev"]], "The \u201cCommand Protocol\u201d, and Calibration": [[854, "the-command-protocol-and-calibration"]], "Driving the Motor": [[854, "driving-the-motor"]], "CAN/Linux Basics": [[855, "can-linux-basics"]], "Why This Talk?": [[855, "why-this-talk"]], "Network Programming: Datagram Exchange": [[855, "network-programming-datagram-exchange"]], "And CAN?": [[855, "and-can"]], "One CAN Network Packet \u2026": [[855, "one-can-network-packet"]], "CAN Interfaces": [[856, "can-interfaces"]], "CAN-Interface: Configuration": [[856, "can-interface-configuration"]], "CAN Utils": [[856, "can-utils"]], "CAN Utils: Usage (1)": [[856, "can-utils-usage-1"]], "CAN Utils: Usage (2)": [[856, "can-utils-usage-2"]], "vcan: Virtual CAN-Bus": [[856, "vcan-virtual-can-bus"]], "Programming": [[857, "programming"]], "CAN Programming": [[857, "can-programming"]], "CAN in C - Socket, Interface Index": [[857, "can-in-c-socket-interface-index"]], "CAN in Python - Socket, Interface Index": [[857, "can-in-python-socket-interface-index"]], "CAN in C - Frames (1)": [[857, "can-in-c-frames-1"]], "CAN in C - Frames (2)": [[857, "can-in-c-frames-2"]], "CAN in Python - Frames": [[857, "can-in-python-frames"]], "Hardware, Kernel": [[858, "hardware-kernel"]], "MCP2515: Schematic": [[858, "mcp2515-schematic"]], "MCP2515: Soldering": [[858, "mcp2515-soldering"]], "MCP2515: SPI": [[858, "mcp2515-spi"]], "MCP2515: Raspberry": [[858, "mcp2515-raspberry"]], "CAN Bus With Linux And Python": [[859, "can-bus-with-linux-and-python"]], "Linux Hardware Interfaces": [[860, "linux-hardware-interfaces"]], "Linux and I2C (using LM73 Temperature Sensor as Slave)": [[861, "linux-and-i2c-using-lm73-temperature-sensor-as-slave"]], "Configuring I2C Master": [[861, "configuring-i2c-master"]], "Enable I2C, Load BCM2835 Platform Driver": [[861, "enable-i2c-load-bcm2835-platform-driver"]], "Raspberry Pi GPIO header pinout": [[861, null]], "Enable Userspace I2C": [[861, "enable-userspace-i2c"]], "Slave Device: LM73": [[861, "slave-device-lm73"]], "Datasheet etc.": [[861, null]], "Optional: Address Selection": [[861, "optional-address-selection"]], "Connecting LM73 to Raspberry Pi": [[861, "connecting-lm73-to-raspberry-pi"]], "i2c-tools/i2cdetect: Diagnostics, Detecting Devices": [[861, "i2c-tools-i2cdetect-diagnostics-detecting-devices"]], "Using the Device: Talking I2C from Userspace": [[861, "using-the-device-talking-i2c-from-userspace"]], "Using the Device: hwmon - Hardware Monitoring": [[861, "using-the-device-hwmon-hardware-monitoring"]], "Building the Kernel, Enabling LM73": [[861, "building-the-kernel-enabling-lm73"]], "Loading the Driver": [[861, "loading-the-driver"]], "Hardware Monitoring (hwmon) Devices": [[861, "hardware-monitoring-hwmon-devices"]], "PWM Userspace Interface (using PCA9685)": [[862, "pwm-userspace-interface-using-pca9685"]], "Pulse Width Modulation (PWM)": [[862, "pulse-width-modulation-pwm"]], "Why An External PWM Controller?": [[862, "why-an-external-pwm-controller"]], "Wiring, Setup, and Testing": [[862, "wiring-setup-and-testing"]], "Talk to Chip Using the sysfs Interface": [[862, "talk-to-chip-using-the-sysfs-interface"]], "Linux and OneWire (using DS18B20 Temperature Sensor as Slave)": [[863, "linux-and-onewire-using-ds18b20-temperature-sensor-as-slave"]], "Master Device, Alterative 1: w1-gpio - OneWire Master in Software": [[863, "master-device-alterative-1-w1-gpio-onewire-master-in-software"]], "Wiring: Attach OneWire Device to GPIO Pin": [[863, "wiring-attach-onewire-device-to-gpio-pin"]], "Master Device, Alterative 2: DS2482 - I2C OneWire Master in Hardware": [[863, "master-device-alterative-2-ds2482-i2c-onewire-master-in-hardware"]], "DS2482-800: 8-Channel 1-Wire Master": [[863, null]], "Wiring: Attach DS2482-800 via I2C": [[863, "wiring-attach-ds2482-800-via-i2c"]], "Configure Software": [[863, "configure-software"]], "Enable I2C, and Check": [[863, "enable-i2c-and-check"]], "Verify That Our Device Is There": [[863, "verify-that-our-device-is-there"]], "Announce (\u201cHotplug\u201d) DS2482 to Linux": [[863, "announce-hotplug-ds2482-to-linux"]], "Wiring: Attach OneWire Device to DS2482-800": [[863, "wiring-attach-onewire-device-to-ds2482-800"]], "Over-Engineering? Beauty?": [[863, "over-engineering-beauty"]], "Hardware Bringup": [[863, "hardware-bringup"]], "Device Usage": [[863, "device-usage"]], "Slave Device: DS18B20 Temperature Sensor": [[863, "slave-device-ds18b20-temperature-sensor"]], "Using the Device": [[863, "using-the-device"]], "As a Generic OneWire Device": [[863, "as-a-generic-onewire-device"]], "As a Hardware Monitoring (hwmon) Device": [[863, "as-a-hardware-monitoring-hwmon-device"]], "lm-sensors": [[863, "lm-sensors"]], "OneWire Caveats": [[863, "onewire-caveats"]], "Bus Topology": [[863, "bus-topology"]], "Error Symptoms": [[863, "error-symptoms"]], "SSH: Basics": [[864, "ssh-basics"]], "Login": [[864, "login"]], "Exit Status, stdin, stdout: Scripting": [[864, "exit-status-stdin-stdout-scripting"]], "Exercise: Copy a File To Remote Machine, And Verify": [[865, "exercise-copy-a-file-to-remote-machine-and-verify"]], "Exercise: Copy a Tree To Remote Machine (And Adjust Permissions)": [[866, "exercise-copy-a-tree-to-remote-machine-and-adjust-permissions"]], "Exercises: SSH": [[867, "exercises-ssh"]], "Exercise: Create SSH Key Pair": [[868, "exercise-create-ssh-key-pair"]], "SSH: Public Key Authentication": [[870, "ssh-public-key-authentication"]], "Local Setup, Key Generation": [[870, "local-setup-key-generation"]], "Key Pair?": [[870, "key-pair"]], "Remote Setup (Wearing The Remote Admin\u2019s Hat)": [[870, "remote-setup-wearing-the-remote-admin-s-hat"]], "SSH: Links": [[871, "ssh-links"]], "SSH: Port Forwarding": [[872, "ssh-port-forwarding"]], "Port Forwarding - The Problem (1)": [[872, "port-forwarding-the-problem-1"]], "Port Forwarding - The Problem (2)": [[872, "port-forwarding-the-problem-2"]], "Port Forwarding - The Solution (1)": [[872, "port-forwarding-the-solution-1"]], "Port Forwarding - The Solution (2)": [[872, "port-forwarding-the-solution-2"]], "Port Forwarding - The Commandline": [[872, "port-forwarding-the-commandline"]], "SSH: Secure Copy (scp)": [[873, "ssh-secure-copy-scp"]], "What Is That?": [[873, "what-is-that"]], "Copy Single File From Local To Remote": [[873, "copy-single-file-from-local-to-remote"]], "Copy Single File from Remote To Local": [[873, "copy-single-file-from-remote-to-local"]], "Copy An Entire Directory Tree (-r)": [[873, "copy-an-entire-directory-tree-r"]], "Copy Multiple File From Here To There": [[873, "copy-multiple-file-from-here-to-there"]], "Copy From One Remote To A Different Remote": [[873, "copy-from-one-remote-to-a-different-remote"]], "More Options": [[873, "more-options"]], "SSH File System (sshfs)": [[874, "ssh-file-system-sshfs"]], "What Is It?": [[874, "what-is-it"]], "Why Is It?": [[874, "why-is-it"]], "Example Situation: The Raspi": [[874, "example-situation-the-raspi"]], "Mounting Remote  $HOME/logdata": [[874, "mounting-remote-home-logdata"]], "Unmounting: fusermount -u, or Simply umount": [[874, "unmounting-fusermount-u-or-simply-umount"]], "User ID Mismatch: Problem": [[874, "user-id-mismatch-problem"]], "User ID Mismatch: Solution (User Mapping)": [[874, "user-id-mismatch-solution-user-mapping"]], "The errno Variable": [[875, "the-errno-variable"]], "errno Is A Global Variable": [[875, "errno-is-a-global-variable"]], "Helper Functions": [[875, "helper-functions"]], "Linux Systems Programming: Basics": [[876, "linux-systems-programming-basics"]], "System Calls vs. Library Functions": [[877, "system-calls-vs-library-functions"]], "System Calls": [[877, "system-calls"]], "System Calls And The C-Library": [[877, "system-calls-and-the-c-library"]], "Library Function Or System Call?": [[877, "library-function-or-system-call"]], "Manual Pages": [[877, "manual-pages"]], "Blocking I/O: What is That? (\u201cEverything is a file\u201d)": [[878, "blocking-i-o-what-is-that-everything-is-a-file"]], "Examples/Live Demos": [[878, null]], "Solution: This Is What An Operating System Is There For": [[878, "solution-this-is-what-an-operating-system-is-there-for"]], "Blocking I/O (On A File): What is That?": [[879, "blocking-i-o-on-a-file-what-is-that"]], "See Also": [[879, null], [880, null], [881, null], [1062, "see-also"]], "Abstractions": [[879, "abstractions"], [880, "abstractions"], [881, "abstractions"]], "Simplicity": [[879, "simplicity"], [880, "simplicity"], [881, "simplicity"]], "Build, Run, Look": [[879, "build-run-look"], [880, "build-run-look"], [881, "build-run-look"]], "Watch: Run Under strace Supervision": [[879, "watch-run-under-strace-supervision"]], "Blocking I/O: On A Network Socket": [[880, "blocking-i-o-on-a-network-socket"]], "Opening a Network Connection": [[880, "opening-a-network-connection"]], "Blocking I/O: On A Timer? WTF?": [[881, "blocking-i-o-on-a-timer-wtf"]], "Setup A Timer": [[881, "setup-a-timer"]], "Blocking I/O: What Is That?": [[882, "blocking-i-o-what-is-that"]], "File I/O: Basics": [[883, "file-i-o-basics"]], "File Descriptors": [[883, "file-descriptors"]], "Standard Filedescriptors": [[883, "standard-filedescriptors"]], "File I/O: System Calls": [[883, "file-i-o-system-calls"]], "open()": [[883, "open"]], "open() Flags": [[883, "open-flags"]], "read()": [[883, "read"]], "write()": [[883, "write"]], "File Offset: lseek()": [[883, "file-offset-lseek"]], "The Rest: ioctl()": [[883, "the-rest-ioctl"]], "Exercise: Copy A File": [[884, "exercise-copy-a-file"]], "Sunny Case: Source File Exists, Destination Does Not Exist": [[884, "sunny-case-source-file-exists-destination-does-not-exist"]], "Error: Wrong Number Of Arguments Specified": [[884, "error-wrong-number-of-arguments-specified"]], "Error: Source File Does Not Exist": [[884, "error-source-file-does-not-exist"]], "Error: Destination File Exists": [[884, "error-destination-file-exists"]], "Error: Destination Directory Not Writable": [[884, "error-destination-directory-not-writable"]], "Exercise: Create File With Hole": [[885, "exercise-create-file-with-hole"]], "Duplicating (Whats Going On?)": [[886, "duplicating-whats-going-on"]], "File Descriptors, Open File, I-Node": [[886, "file-descriptors-open-file-i-node"]], "File Descriptors and Inheritance": [[886, "file-descriptors-and-inheritance"]], "Duplicating File Descriptors": [[886, "duplicating-file-descriptors"]], "Example: Shell Stdout-Redirection (1)": [[886, "example-shell-stdout-redirection-1"]], "Example: Shell Stdout-Redirection (2)": [[886, "example-shell-stdout-redirection-2"]], "Example: Shell Stdout-Redirection (3)": [[886, "example-shell-stdout-redirection-3"]], "O_CREAT: Creating A File": [[887, "o-creat-creating-a-file"]], "Creating A File If It Does Not Exist (Bogus Version)": [[887, "creating-a-file-if-it-does-not-exist-bogus-version"]], "Bogus O_CREAT Usage: Mode Parameter Missing": [[887, "bogus-o-creat-usage-mode-parameter-missing"]], "Creating A File If It Does Not Exist": [[887, "creating-a-file-if-it-does-not-exist"]], "O_EXCL: Creating A File, But Failing If It Already Exists": [[888, "o-excl-creating-a-file-but-failing-if-it-already-exists"]], "Is \u201cCreate or Open\u201d Always Wanted?": [[888, "is-create-or-open-always-wanted"]], "Sunny Case: File Does Not Exist": [[888, "sunny-case-file-does-not-exist"]], "Error: File Exists": [[888, "error-file-exists"]], "O_RDONLY: Reading a File": [[889, "o-rdonly-reading-a-file"]], "Me and /etc/passwd": [[889, "me-and-etc-passwd"]], "Code: Reading A File": [[889, "code-reading-a-file"]], "Sunny Case: Reading /etc/passwd": [[889, "sunny-case-reading-etc-passwd"]], "Error: File Not Readable": [[889, "error-file-not-readable"]], "Error: File Not Even There": [[889, "error-file-not-even-there"]], "O_WRONLY: Writing A File (Which Must Exist)": [[890, "o-wronly-writing-a-file-which-must-exist"]], "Writing (And Not Creating) A File": [[890, "writing-and-not-creating-a-file"]], "Error: File Not Writeable": [[890, "error-file-not-writeable"]], "Error: File Not Even There \u27f6 Not Implicitly Created": [[890, "error-file-not-even-there-longrightarrow-not-implicitly-created"]], "Sunny Case: File Exists, And Is Writeable": [[890, "sunny-case-file-exists-and-is-writeable"]], "Exercise: Read Temperature From Onewire Sensor": [[891, "exercise-read-temperature-from-onewire-sensor"]], "Onewire Basics": [[891, "onewire-basics"]], "Program": [[891, "program"], [1043, "program"]], "Test On The Target Machine": [[891, "test-on-the-target-machine"]], "I/O without Offset Manipulation": [[893, "i-o-without-offset-manipulation"]], "Scatter/Gather I/O": [[893, "scatter-gather-i-o"]], "Scatter/Gather I/O, without Offset Manipulation": [[893, "scatter-gather-i-o-without-offset-manipulation"]], "Truncating Files": [[893, "truncating-files"]], "File Descriptors - Allocation": [[893, "file-descriptors-allocation"]], "Linux Systems Programming": [[894, "linux-systems-programming"], [1127, "linux-systems-programming"]], "Get Value Of GPIO": [[895, "get-value-of-gpio"]], "Retrieving Value Manually, On The Commandline": [[895, "retrieving-value-manually-on-the-commandline"]], "Shell Script": [[895, "shell-script"]], "C Program": [[895, "c-program"]], "Introductory Live Hacking, Hardware-Wise (sysfs GPIO)": [[896, "introductory-live-hacking-hardware-wise-sysfs-gpio"]], "Intro: sysfs GPIO": [[897, "intro-sysfs-gpio"]], "sysfs?": [[897, "sysfs"]], "General Purpose IO (GPIO)": [[897, "general-purpose-io-gpio"]], "Requesting A GPIO Pin": [[897, "requesting-a-gpio-pin"]], "GPIO Attributes As Files": [[897, "gpio-attributes-as-files"]], "Interrupts In Userspace": [[898, "interrupts-in-userspace"]], "Manual Configuration": [[898, "manual-configuration"]], "C Program: Configuration, Event Loop": [[898, "c-program-configuration-event-loop"]], "Why Threads?": [[899, "why-threads"]], "Typical Uses": [[899, "typical-uses"]], "Legal (1)": [[899, "legal-1"]], "Legal (2)": [[899, "legal-2"]], "POSIX Thread API": [[899, "posix-thread-api"]], "Thread Life Cycle": [[900, "thread-life-cycle"], [900, "id1"]], "Thread Creation": [[900, "thread-creation"]], "Thread Termination (1)": [[900, "thread-termination-1"]], "Thread Termination (2)": [[900, "thread-termination-2"]], "Exit Status, pthread_join()": [[900, "exit-status-pthread-join"]], "Detached Threads": [[900, "detached-threads"]], "Thread ID": [[900, "thread-id"]], "Scheduled Entities (1)": [[900, "scheduled-entities-1"]], "Scheduled Entities (2)": [[900, "scheduled-entities-2"]], "Thread Creation, Race Condition": [[901, "thread-creation-race-condition"]], "Synchronization": [[902, "synchronization"]], "Race Conditions (1)": [[902, "race-conditions-1"]], "Race Conditions (2)": [[902, "race-conditions-2"]], "Mutex (1)": [[902, "mutex-1"]], "Mutex (2)": [[902, "mutex-2"]], "Mutex (3)": [[902, "mutex-3"]], "Mutex Types": [[902, "mutex-types"]], "Mutex: Solve Load/Modify/Store Conflict": [[903, "mutex-solve-load-modify-store-conflict"]], "Communication: Condition Variable": [[904, "communication-condition-variable"]], "Condition Variable (1)": [[904, "condition-variable-1"]], "Condition Variable (2)": [[904, "condition-variable-2"]], "Condition Variable: wait()": [[904, "condition-variable-wait"]], "Condition Variable: signal()": [[904, "condition-variable-signal"]], "Example: WIN32 Auto Reset Event (1)": [[904, "example-win32-auto-reset-event-1"]], "Example: WIN32 Auto Reset Event (2)": [[904, "example-win32-auto-reset-event-2"]], "Condition Variable: Checking the Predicate": [[904, "condition-variable-checking-the-predicate"]], "Condition Variable: Initialization": [[904, "condition-variable-initialization"]], "Condition Variable: Miscellaneous": [[904, "condition-variable-miscellaneous"]], "Condition Variable: Message Queue": [[905, "condition-variable-message-queue"]], "One-Time Initialization (1)": [[906, "one-time-initialization-1"]], "One-Time Initialization (2)": [[906, "one-time-initialization-2"]], "One-Time Initialization (3)": [[906, "one-time-initialization-3"]], "Thread Specific Data, Thread Local Storage": [[906, "thread-specific-data-thread-local-storage"]], "Last Warning (1)": [[907, "last-warning-1"]], "Last Warning (2)": [[907, "last-warning-2"]], "Last Warning (3)": [[907, "last-warning-3"]], "Trylock/islocked": [[909, "trylock-islocked"]], "Process: Arguments, Exit Status": [[910, "process-arguments-exit-status"]], "The Shell: A Program Like Any Program": [[910, "the-shell-a-program-like-any-program"]], "The Shell: A Programming Language": [[910, "the-shell-a-programming-language"]], "Exit Status": [[910, "exit-status"]], "Exit Status: 0 is \u201cOK\u201d": [[910, "exit-status-0-is-ok"]], "Exit Status: != 0 is \u201cNot OK\u201d": [[910, "exit-status-0-is-not-ok"]], "Argument Vector (int argc, char** argv)": [[910, "argument-vector-int-argc-char-argv"]], "Processes": [[911, "processes"]], "The Process Tree (And Environment, And procfs)": [[912, "the-process-tree-and-environment-and-procfs"]], "Process ID (PID) And Parent Process ID (PPID)": [[912, "process-id-pid-and-parent-process-id-ppid"]], "System Calls: getpid(), getppid()": [[912, "system-calls-getpid-getppid"]], "Environment Variables": [[912, "environment-variables"]], "Scheduling (and Multitasking)": [[913, "scheduling-and-multitasking"]], "Fairness Criteria": [[913, "fairness-criteria"]], "CPU bound vs. I/O bound": [[913, "cpu-bound-vs-i-o-bound"]], "Demo: I/O vs CPU bound": [[913, "demo-i-o-vs-cpu-bound"]], "Scheduling Decision, Runnability": [[913, "scheduling-decision-runnability"]], "Tasks? Processes? Threads?": [[915, "tasks-processes-threads"]], "Tasks": [[915, "tasks"]], "A Typical Bare Metal Application": [[915, "a-typical-bare-metal-application"]], "Hm. Need Another Timer Interrupt!": [[915, "hm-need-another-timer-interrupt"]], "Away From Interrupts: Use An Operating System": [[915, "away-from-interrupts-use-an-operating-system"]], "Tasks?": [[915, "id1"]], "Threads Are Great: More Functionality": [[915, "threads-are-great-more-functionality"]], "Are Threads Great?": [[915, "are-threads-great"]], "Stability Considerations": [[915, "stability-considerations"]], "Processes, Address Spaces": [[915, "processes-address-spaces"]], "Stabilizing": [[915, "stabilizing"]], "Scheduling: Exam Questions": [[916, "scheduling-exam-questions"]], "Wakeup Latency, and Fair Scheduling": [[917, "wakeup-latency-and-fair-scheduling"]], "Nice Value: Inexact Tuning": [[917, "nice-value-inexact-tuning"]], "Enter Realtime: Definition": [[917, "enter-realtime-definition"]], "Realtime on Linux": [[917, "realtime-on-linux"]], "Demo: Measuring Wakeup Latency": [[917, "demo-measuring-wakeup-latency"]], "Immediately?": [[917, "immediately"]], "Immediately! \u27f6 PREEMPT_RT": [[917, "immediately-longrightarrow-preempt-rt"]], "Realtime API": [[918, "realtime-api"]], "Scheduling Policies": [[918, "scheduling-policies"]], "Scheduling Priorities": [[918, "scheduling-priorities"]], "What\u2019s Runnning On A System?": [[918, "what-s-runnning-on-a-system"]], "Scheduling: System Calls": [[918, "scheduling-system-calls"]], "Scheduling: Threads (1)": [[918, "scheduling-threads-1"]], "Scheduling: Threads (2)": [[918, "scheduling-threads-2"]], "Priority Inversion": [[918, "priority-inversion"]], "Priority Inversion: Mutex Protocols (1)": [[918, "priority-inversion-mutex-protocols-1"]], "Wakeup Latency, CPU Frequency (Gotcha)": [[919, "wakeup-latency-cpu-frequency-gotcha"]], "Measuring Wakeup Latency": [[919, "measuring-wakeup-latency"]], "Many Runnable Processes (Gotcha: CPU Frequency Scaling)": [[919, "many-runnable-processes-gotcha-cpu-frequency-scaling"]], "CPU Frequency Scaling Out Of The Way": [[919, "cpu-frequency-scaling-out-of-the-way"]], "Mysteries Remaining": [[919, "mysteries-remaining"]], "Code: Sysprog: Event Driven Programming": [[920, "code-sysprog-event-driven-programming"]], "Screenplay: Sysprog: POSIX IPC": [[921, "screenplay-sysprog-posix-ipc"], [924, "screenplay-sysprog-posix-ipc"]], "select on Device Files": [[921, "select-on-device-files"]], "Sysprog: Events": [[922, "sysprog-events"]], "Code: Sysprog: POSIX IPC": [[923, "code-sysprog-posix-ipc"]], "Virtual Memory, mmap()": [[924, "virtual-memory-mmap"]], "POSIX Shared Memory": [[924, "posix-shared-memory"]], "Create Shared Memory Segment": [[924, "create-shared-memory-segment"]], "Produce into Shared Memory": [[924, "produce-into-shared-memory"]], "Consume from Shared Memory": [[924, "consume-from-shared-memory"]], "POSIX Semaphores": [[924, "posix-semaphores"]], "Create Semaphore": [[924, "create-semaphore"]], "Wait": [[924, "wait"]], "Post": [[924, "post"]], "POSIX Message Queues": [[924, "posix-message-queues"]], "Create": [[924, "create"]], "Produce": [[924, "produce"]], "Consume": [[924, "consume"]], "Slides: Sysprog: POSIX IPC": [[925, "slides-sysprog-posix-ipc"]], "Slideshow": [[925, null], [929, null]], "History: Two IPC Variants": [[925, "history-two-ipc-variants"]], "Object Names": [[925, "object-names"]], "File Semantics": [[925, "file-semantics"]], "Message Queues": [[925, "message-queues"]], "Open/Create: mq_open()": [[925, "open-create-mq-open"]], "Sending/Receiving: mq_send(), mq_receive()": [[925, "sending-receiving-mq-send-mq-receive"]], "Closing/Removing: mq_close(), mq_unlink()": [[925, "closing-removing-mq-close-mq-unlink"]], "Notification: mq_notify()": [[925, "notification-mq-notify"]], "Message Queues are Files": [[925, "message-queues-are-files"]], "Message Queue Filesystem: mqueue": [[925, "message-queue-filesystem-mqueue"]], "Semaphores": [[925, "semaphores"]], "Open/Create: sem_open()": [[925, "open-create-sem-open"]], "Communication: sem_wait(), sem_post()": [[925, "communication-sem-wait-sem-post"]], "Closing/Removing: sem_close(), ``sem_unlink()": [[925, "closing-removing-sem-close-sem-unlink"]], "Semaphores are Files": [[925, "semaphores-are-files"]], "Shared Memory (1)": [[925, "shared-memory-1"]], "Shared Memory (2)": [[925, "shared-memory-2"]], "Exercise: POSIX Message Queues": [[925, "exercise-posix-message-queues"]], "Sysprog: POSIX IPC": [[926, "sysprog-posix-ipc"]], "Code: Sysprog: Signals": [[927, "code-sysprog-signals"]], "Screenplay: Sysprog: Signals": [[928, "screenplay-sysprog-signals"]], "Barebones Naive Program": [[928, "barebones-naive-program"]], "Signal Handler": [[928, "signal-handler"]], "Alarm": [[928, "alarm"]], "Alarm (Louder)": [[928, "alarm-louder"]], "Synchronous Delivery": [[928, "synchronous-delivery"]], "Innocent Multithreaded Program": [[928, "innocent-multithreaded-program"]], "Add SIGALRM": [[928, "add-sigalrm"]], "Slides: Sysprog: Signals": [[929, "slides-sysprog-signals"]], "Example Signals": [[929, "example-signals"]], "Terminology": [[929, "terminology"]], "Default Actions": [[929, "default-actions"]], "Important Signals": [[929, "important-signals"]], "Sending, Commandline": [[929, "sending-commandline"]], "Sending Signals, Programmatically": [[929, "sending-signals-programmatically"]], "Warning!": [[929, "warning"]], "Blocking Signals: Signal Mask": [[929, "blocking-signals-signal-mask"]], "Signal Mask Manipulation": [[929, "signal-mask-manipulation"]], "Pending Signals": [[929, "pending-signals"]], "Signal Set: sigset_t": [[929, "signal-set-sigset-t"]], "Signal Handlers": [[929, "signal-handlers"]], "Installing a Signal Handler (1)": [[929, "installing-a-signal-handler-1"]], "Installing a Signal Handler (2)": [[929, "installing-a-signal-handler-2"]], "Effects of Signal Delivery": [[929, "effects-of-signal-delivery"]], "Last Warning!": [[929, "last-warning"]], "WTF Async Signal Safe?": [[929, "wtf-async-signal-safe"]], "Exercise: Signals": [[929, "exercise-signals"]], "Sysprog: Signals": [[930, "sysprog-signals"]], "Toolchain: Basics": [[931, "toolchain-basics"]], "GCC - GNU Compiler Collection": [[931, "gcc-gnu-compiler-collection"]], "All-In-One Usage: Single File": [[931, "all-in-one-usage-single-file"]], "All-In-One Usage: Multiple Files": [[931, "all-in-one-usage-multiple-files"]], "This Is Not As Simple As It Seems!": [[931, "this-is-not-as-simple-as-it-seems"]], "What\u2019s In A Program? \u27f6 Symbols (nm)": [[931, "what-s-in-a-program-longrightarrow-symbols-nm"]], "Overview: Where Do Which Symbols Come From (\u27f6 The Toolchain)": [[931, "overview-where-do-which-symbols-come-from-longrightarrow-the-toolchain"]], "Recap: Toolchain": [[931, "recap-toolchain"]], "CMake: Cross Build": [[932, "cmake-cross-build"]], "Cross Build: Parameters": [[932, "cross-build-parameters"]], "Core Build Instructions: Target Agnostic": [[932, "core-build-instructions-target-agnostic"]], "Toolchain Files": [[932, "toolchain-files"]], "Step 1: Generate Makefile in Build Directory": [[932, "step-1-generate-makefile-in-build-directory"]], "Step 2: Build Using make": [[932, "step-2-build-using-make"], [933, "step-2-build-using-make"]], "CMake: Local Build": [[933, "cmake-local-build"]], "make: Problems": [[933, "make-problems"]], "CMake To The Rescue": [[933, "cmake-to-the-rescue"]], "Out-Of-Source Build": [[933, "out-of-source-build"]], "Step 1: Generate Makefile In Build Directory": [[933, "step-1-generate-makefile-in-build-directory"]], "Goodie: Dependency Management": [[933, "goodie-dependency-management"]], "Native Compilation": [[934, "native-compilation"]], "Cross?": [[934, "cross"]], "The sysroot": [[934, "the-sysroot"]], "Exercise: Build Software Package (Cross, Raspberry)": [[936, "exercise-build-software-package-cross-raspberry"]], "FH/Moodle Quiz: Toolchain": [[937, "fh-moodle-quiz-toolchain"]], "Exercises: Toolchain": [[938, "exercises-toolchain"]], "Exercise: Build Software Package (Native)": [[939, "exercise-build-software-package-native"]], "Exercise: Install And Check Raspberry Toolchain": [[940, "exercise-install-and-check-raspberry-toolchain"]], "Toolchain, And Cross Development": [[941, "toolchain-and-cross-development"]], "Case Study: Raspberry Toolchain": [[942, "case-study-raspberry-toolchain"]], "Linaro Toolchain For The Pi (Defunct)": [[943, "linaro-toolchain-for-the-pi-defunct"]], "Download And Unpack Linaro Toolchain": [[943, "download-and-unpack-linaro-toolchain"]], "Create a sysroot": [[943, "create-a-sysroot"]], "Patience!": [[943, null]], "Test Cross Build": [[943, "test-cross-build"]], "What We Have": [[943, "what-we-have"]], "Use Cross Compiler To Build Against sysroot": [[943, "use-cross-compiler-to-build-against-sysroot"]], "Adjust $PATH To Point To Toolchain": [[943, "adjust-path-to-point-to-toolchain"]], "Building A Toolchain On Fedora For Ubuntu 18.04 (WSL)": [[945, "building-a-toolchain-on-fedora-for-ubuntu-18-04-wsl"]], "Install And Run Docker": [[945, "install-and-run-docker"]], "Create Ubuntu Images (18.04 and 20.04)": [[945, "create-ubuntu-images-18-04-and-20-04"]], "Create Docker Volume": [[945, "create-docker-volume"]], "Container Work": [[945, "container-work"]], "Command To Run Container On Volumes": [[945, "command-to-run-container-on-volumes"]], "Setup container": [[945, "setup-container"]], "Install autoconf 2.71": [[945, "install-autoconf-2-71"]], "Install crosstool-ng": [[945, "install-crosstool-ng"]], "Build Toolchain": [[945, "build-toolchain"]], "crosstool-ng Toolchain Build": [[945, "crosstool-ng-toolchain-build"]], "Create Toolchain Archive": [[945, "create-toolchain-archive"]], "Install Toolchain On Host": [[945, "install-toolchain-on-host"]], "Cross Toolchain Setup": [[946, "cross-toolchain-setup"]], "Download And Install Toolchain Archive": [[946, "download-and-install-toolchain-archive"]], "Establish CMake Toolchain File": [[946, "establish-cmake-toolchain-file"]], "Test Run": [[946, "test-run"]], "Zooming In: Separate Compilation, and Linking Statically": [[947, "zooming-in-separate-compilation-and-linking-statically"]], "Remember: All-In-One Build \u2026": [[947, "remember-all-in-one-build"]], "Adding Another main(): What About Shared Code?": [[947, "adding-another-main-what-about-shared-code"]], "Solution: Separate Compilation And Linking Steps": [[947, "solution-separate-compilation-and-linking-steps"]], "Complication: Modification Tracking": [[947, "complication-modification-tracking"]], "Enter Makefiles": [[947, "enter-makefiles"]], "Shared Libraries (Shared Objects)": [[948, "shared-libraries-shared-objects"]], "Problems With Static Libraries": [[948, "problems-with-static-libraries"]], "And Dynamic Libraries?": [[948, "and-dynamic-libraries"]], "Relocations": [[948, "relocations"]], "Building A Shared Library: Position Independent Code (PIC)": [[948, "building-a-shared-library-position-independent-code-pic"]], "Linking Executables Against Shared Libraries": [[948, "linking-executables-against-shared-libraries"]], "And Build Dependencies?": [[948, "and-build-dependencies"]], "And Runtime Dependencies?": [[948, "and-runtime-dependencies"]], "And Starting An Executable Having External Dependencies?": [[948, "and-starting-an-executable-having-external-dependencies"]], "This Is Not Simple: Library Search Path": [[948, "this-is-not-simple-library-search-path"]], "Summary: Static Versus Dynamic Libraries": [[948, "summary-static-versus-dynamic-libraries"]], "Object Code Archives/Static Libraries": [[949, "object-code-archives-static-libraries"]], "Code Bases Become Larger (1)": [[949, "code-bases-become-larger-1"]], "Code Bases Become Larger (2)": [[949, "code-bases-become-larger-2"]], "Problem: Structure": [[949, "problem-structure"]], "Build Instructions: Building A Library": [[949, "build-instructions-building-a-library"]], "Closures": [[950, "closures"]], "Today": [[950, "today"]], "def is a Statement": [[950, "def-is-a-statement"]], "Functions That Create Functions": [[950, "functions-that-create-functions"]], "Inner Function Reaches Out To Global Scope": [[950, "inner-function-reaches-out-to-global-scope"]], "And Intermediate Scope? \u27f6 Closure": [[950, "and-intermediate-scope-longrightarrow-closure"]], "A Less Theoretical \u201cUse Case\u201d": [[950, "a-less-theoretical-use-case"]], "Scope Issues: Assignment to Global Scope (global Keyword)": [[950, "scope-issues-assignment-to-global-scope-global-keyword"]], "Scope Issues: Assignment to Intermediate Scope (nonlocal Keyword)": [[950, "scope-issues-assignment-to-intermediate-scope-nonlocal-keyword"]], "Intro": [[951, "intro"]], "Simplest: List Comprehension": [[951, "simplest-list-comprehension"]], "Dictionary Comprehension": [[951, "dictionary-comprehension"]], "Context Managers: The with Statement": [[952, "context-managers-the-with-statement"]], "Example: Open File": [[952, "example-open-file"]], "Example: Temporary Directory": [[952, "example-temporary-directory"]], "Example: Multiple with Items": [[952, "example-multiple-with-items"]], "Under The Hood: Context Manager": [[952, "under-the-hood-context-manager"]], "Example: Monkeypatching The print Function": [[952, "example-monkeypatching-the-print-function"]], "Still Much Typing \u27f6 @contextlib.contextmanager": [[952, "still-much-typing-longrightarrow-contextlib-contextmanager"]], "More Involved: Using Closures To Implement PrefixPrint": [[952, "more-involved-using-closures-to-implement-prefixprint"]], "Decorators": [[953, "decorators"]], "The Ominous \u201c@\u201d": [[953, "the-ominous"]], "Decorators Overview": [[953, "decorators-overview"]], "Decorator Basics": [[953, "decorator-basics"]], "Decorators are Syntactic Sugar": [[953, "decorators-are-syntactic-sugar"]], "Problem: Arbitrary Function Arguments": [[953, "problem-arbitrary-function-arguments"]], "*args, **kwargs To The Rescue": [[953, "args-kwargs-to-the-rescue"]], "Sideways: functools.wraps": [[953, "sideways-functools-wraps"]], "Class Decorator: debug() with prefix": [[953, "class-decorator-debug-with-prefix"]], "Basic Exception Handling: try, except": [[954, "basic-exception-handling-try-except"]], "Catching Exceptions By Type": [[954, "catching-exceptions-by-type"]], "Exception Objects": [[954, "exception-objects"]], "Catching Multiple Exception Types: Exception List": [[954, "catching-multiple-exception-types-exception-list"]], "Catching Multiple Exception Types: Multiple except Clauses": [[954, "catching-multiple-exception-types-multiple-except-clauses"]], "Catching Multiple Exception Types: By Base Type": [[954, "catching-multiple-exception-types-by-base-type"]], "Important: Order Of except Clauses": [[954, "important-order-of-except-clauses"]], "Built-In Exception Hierarchy": [[954, "built-in-exception-hierarchy"]], "Raising Exceptions": [[954, "raising-exceptions"]], "Re-Raising Exceptions": [[954, "re-raising-exceptions"]], "User-Defined Exceptions": [[954, "user-defined-exceptions"]], "User-Defined Exceptions: More": [[954, "user-defined-exceptions-more"]], "else: Executed If No Exception": [[954, "else-executed-if-no-exception"]], "finally: Executed Regardless Of Exception": [[954, "finally-executed-regardless-of-exception"]], "The exec() Function": [[955, "the-exec-function"]], "Dictionaries Everywhere: Context": [[955, "dictionaries-everywhere-context"]], "Enter exec()": [[955, "enter-exec"]], "exec(), and Context": [[955, "exec-and-context"]], "And What Is This Used For, Realistically?": [[955, "and-what-is-this-used-for-realistically"]], "Python: More Language Features": [[956, "python-more-language-features"]], "Iteration, Comprehensions, and Generators": [[957, "iteration-comprehensions-and-generators"]], "Coverage Of This Topic": [[957, "coverage-of-this-topic"]], "for Recap: Sequential Datatypes": [[957, "for-recap-sequential-datatypes"]], "Primitive Transformation [1,2,3,4] \u27f6 [1,4,9,16]": [[957, "primitive-transformation-1-2-3-4-longrightarrow-1-4-9-16"]], "Larger Input List (Still Allocated)": [[957, "larger-input-list-still-allocated"]], "Input List \u27f6 range": [[957, "input-list-longrightarrow-range"]], "Output List \u27f6 yield": [[957, "output-list-longrightarrow-yield"]], "Generator Function \u27f6 Generator Expression": [[957, "generator-function-longrightarrow-generator-expression"]], "Implementing A Fibonacci Number Generator": [[958, "implementing-a-fibonacci-number-generator"]], "Fibonacci Numbers: Naive List": [[958, "fibonacci-numbers-naive-list"]], "Fibonacci Numbers: Naive List, Limited": [[958, "fibonacci-numbers-naive-list-limited"]], "Sideway: Infinity by Not Using Functions": [[958, "sideway-infinity-by-not-using-functions"]], "Fibonacci Numbers: Function Producing Infinite Sequence": [[958, "fibonacci-numbers-function-producing-infinite-sequence"]], "Common Pattern: Turn List into Generated Items": [[958, "common-pattern-turn-list-into-generated-items"]], "The Iterator Protocol": [[959, "the-iterator-protocol"], [959, "id1"]], "Iteration in Python": [[959, "iteration-in-python"]], "What\u2019s an Iterator?": [[959, "what-s-an-iterator"]], "What\u2019s an Iterable?": [[959, "what-s-an-iterable"]], "The Iterator Protocol: Manual Iteration": [[959, "the-iterator-protocol-manual-iteration"]], "The Iterator Protocol, And The for Loop": [[959, "the-iterator-protocol-and-the-for-loop"]], "Generators: Motivation": [[959, "generators-motivation"]], "Generators: How?": [[959, "generators-how"]], "Observations": [[959, "observations"]], "Iteration, Generators, And yield": [[960, "iteration-generators-and-yield"]], "Iterating Intelligently: Generators, and the Iterator Protocol": [[961, "iterating-intelligently-generators-and-the-iterator-protocol"]], "Modules are Objects": [[962, "modules-are-objects"]], "Other Forms (1)": [[962, "other-forms-1"]], "Other Forms (2)": [[962, "other-forms-2"]], "Packages": [[962, "packages"]], "Executing Modules as Scripts": [[962, "executing-modules-as-scripts"]], "Package Structure": [[962, "package-structure"]], "Relative Imports (1)": [[962, "relative-imports-1"]], "Relative Imports (2)": [[962, "relative-imports-2"]], "Multithreading (Python)": [[963, "multithreading-python"]], "What\u2019s a Thread?": [[963, "what-s-a-thread"]], "Threads: The Pythonic Way": [[963, "threads-the-pythonic-way"]], "Threads: The OO Way - Inheritance": [[963, "threads-the-oo-way-inheritance"]], "And Program Termination?": [[963, "and-program-termination"]], "Daemon Threads": [[963, "daemon-threads"]], "Race Conditions, and Mutexes": [[965, "race-conditions-and-mutexes"]], "Mother of All Race conditions: Integer Increment": [[965, "mother-of-all-race-conditions-integer-increment"]], "Load Modify Store Conflict": [[965, "load-modify-store-conflict"]], "Solution: Mutex (Explicit Acquire/Release)": [[965, "solution-mutex-explicit-acquire-release"]], "Solution: Mutex (with Statement)": [[965, "solution-mutex-with-statement"]], "Multithreading: Exam Questions": [[966, "multithreading-exam-questions"]], "Abstract Base Classes (abc), And Duck Typing": [[967, "abstract-base-classes-abc-and-duck-typing"]], "Duck Typing: Examples": [[967, "duck-typing-examples"]], "Duck Typing Problem: Late Errors": [[967, "duck-typing-problem-late-errors"]], "Intermediate Step: Common Base Class (\u201cInterface\u201d)": [[967, "intermediate-step-common-base-class-interface"]], "Enter Abstract Base Classes: Wish List": [[967, "enter-abstract-base-classes-wish-list"]], "Abtract Base Class": [[967, "abtract-base-class"]], "Classes And Dictionaries": [[968, "classes-and-dictionaries"]], "Facts Up-Front": [[968, "facts-up-front"]], "Using Raw Dictionaries As Objects": [[968, "using-raw-dictionaries-as-objects"]], "Enter Classes: An Empty Class, And Its Effects": [[968, "enter-classes-an-empty-class-and-its-effects"]], "Attributes": [[968, "attributes"], [1083, "attributes"]], "Summary: Classes Or Raw Dictionaries": [[968, "summary-classes-or-raw-dictionaries"]], "Dynamic Attribute Access": [[968, "dynamic-attribute-access"]], "Constructor": [[969, "constructor"]], "And self?": [[969, "and-self"]], "Interrelationships": [[970, "interrelationships"]], "Extending Existing Classes": [[971, "extending-existing-classes"]], "Additional Feature: Salary": [[971, "additional-feature-salary"]], "Want Manager": [[971, "want-manager"]], "Introspecting Inheritance: isinstance(), issubclass()": [[971, "introspecting-inheritance-isinstance-issubclass"]], "isinstance()": [[971, "isinstance"]], "issubclass()": [[971, "issubclass"]], "Add __str__(), Creatively, After The Fact": [[971, "add-str-creatively-after-the-fact"]], "Object Methods": [[972, "object-methods"]], "Class Methods (@classmethod)": [[972, "class-methods-classmethod"]], "Static Methods (@staticmethod)": [[972, "static-methods-staticmethod"]], "collections.namedtuple": [[973, "collections-namedtuple"]], "Shortcut For Simple Data-Holding Classes": [[973, "shortcut-for-simple-data-holding-classes"]], "Constructing From Iterable: _make()": [[973, "constructing-from-iterable-make"]], "Convert To dict: _asdict()": [[973, "convert-to-dict-asdict"]], "Operators Are \u201cDunder\u201d Methods": [[974, "operators-are-dunder-methods"]], "Hypothetical And Pointless class Number": [[974, "hypothetical-and-pointless-class-number"]], "Simplest: Equality Comparison (==)": [[974, "simplest-equality-comparison"]], "Comparing Against Incompatible Types? (Lotsa Magic!)": [[974, "comparing-against-incompatible-types-lotsa-magic"]], "Ordering: Less-Than (<) Operator": [[974, "ordering-less-than-operator"]], "Ordering Magic, Again: __gt__ in terms of __lt__": [[974, "ordering-magic-again-gt-in-terms-of-lt"]], "Table: Comparison Operators": [[974, "table-comparison-operators"]], "@functools.total_ordering To The Rescue": [[974, "functools-total-ordering-to-the-rescue"]], "Arithmetic Operators, Reverse Operations": [[974, "arithmetic-operators-reverse-operations"]], "Table: Operators And The Methods To Implement Them": [[974, "table-operators-and-the-methods-to-implement-them"]], "Readonly Attributes": [[975, "readonly-attributes"]], "And Write Access?": [[975, "and-write-access"]], "Calculated Attributes": [[975, "calculated-attributes"]], "str() And repr()": [[976, "str-and-repr"]], "Stringification And Representation": [[976, "stringification-and-representation"]], "Overloading str() And repr(): __str__(), __repr__()": [[976, "overloading-str-and-repr-str-repr"]], "Positional and Keyword Arguments": [[977, "positional-and-keyword-arguments"]], "Traditional Function Call": [[977, "traditional-function-call"]], "Supplying Function Arguments Dynamically": [[977, "supplying-function-arguments-dynamically"]], "Functions That Takes Arbitrary Number Of Positional Arguments": [[977, "functions-that-takes-arbitrary-number-of-positional-arguments"]], "Functions That Take Arbitrary Keyword Arguments": [[977, "functions-that-take-arbitrary-keyword-arguments"]], "And Arbitrary Positional And Keyword Arguments?": [[977, "and-arbitrary-positional-and-keyword-arguments"]], "Ultimate Dynamicity: Arbitrary Positional And Keyword Arguments": [[977, "ultimate-dynamicity-arbitrary-positional-and-keyword-arguments"]], "Use Case: A Better print()": [[977, "use-case-a-better-print"]], "The Python Programming Language": [[980, "the-python-programming-language"]], "A Little Bit of History": [[980, "a-little-bit-of-history"]], "Guido Van Rossum": [[980, "guido-van-rossum"]], "Hello World: Interactive Mode": [[981, "hello-world-interactive-mode"]], "Hello World: Script Files": [[981, "hello-world-script-files"]], "Running Python Programs": [[982, "running-python-programs"]], "The UNIX Way: Executable Bit, chmod": [[982, "the-unix-way-executable-bit-chmod"]], "The UNIX Way: Hash-Bang (She-Bang)": [[982, "the-unix-way-hash-bang-she-bang"]], "The UNIX Way: Running": [[982, "the-unix-way-running"]], "The Doze Way: Registry": [[982, "the-doze-way-registry"]], "Syntax: Indentation (1)": [[983, "syntax-indentation-1"]], "Syntax: Indentation (2)": [[983, "syntax-indentation-2"]], "Syntax: Statements and Lines": [[983, "syntax-statements-and-lines"]], "Comments vs. Documentation": [[983, "comments-vs-documentation"]], "Commandline Arguments (sys.argv)": [[984, "commandline-arguments-sys-argv"]], "Operating Systems and Programs": [[984, "operating-systems-and-programs"]], "Commandline Arguments in Python": [[984, "commandline-arguments-in-python"]], "Cosmetics: Rudimentary Argument Parsing": [[984, "cosmetics-rudimentary-argument-parsing"]], "Further information: argparse": [[984, null]], "Variables (1)": [[985, "variables-1"]], "Variables (2)": [[985, "variables-2"]], "Integer Numbers: Comparison": [[986, "integer-numbers-comparison"]], "Numbers: Python2 vs. Python 3 (1)": [[986, "numbers-python2-vs-python-3-1"]], "Numbers: Python2 vs. Python 3 (2)": [[986, "numbers-python2-vs-python-3-2"]], "Strings: Python 2": [[986, "strings-python-2"]], "Strings: Python 2 \u2014 Confusion": [[986, "strings-python-2-confusion"]], "Strings: Python 2 - unicode (1)": [[986, "strings-python-2-unicode-1"]], "Strings: Python 2 \u2014 unicode (2)": [[986, "strings-python-2-unicode-2"]], "Strings: Python 3": [[986, "strings-python-3"]], "Python 3, Generally": [[986, "python-3-generally"]], "Boolean Values": [[988, "boolean-values"]], "Boolean Operators": [[988, "boolean-operators"]], "The if Statement": [[989, "the-if-statement"], [989, "id1"]], "Looping Constructs": [[990, "looping-constructs"]], "Esoteric Feature: while/else": [[990, "esoteric-feature-while-else"]], "Sequence Elements": [[991, "sequence-elements"]], "Sequence Multiplication": [[991, "sequence-multiplication"]], "Indexing (1)": [[992, "indexing-1"]], "Indexing (2)": [[992, "indexing-2"]], "Slicing: Cutting Out": [[992, "slicing-cutting-out"]], "Slicing: Step Width": [[992, "slicing-step-width"]], "Iteration over \u2026 Something": [[993, "iteration-over-something"]], "break, continue, else": [[993, "break-continue-else"]], "Iteration over Numbers: range()": [[994, "iteration-over-numbers-range"]], "range(): Definition": [[994, "range-definition"]], "range(): Python 2 vs. Python 3": [[994, "range-python-2-vs-python-3"]], "Immutability: Numbers": [[995, "immutability-numbers"]], "Modifying An Integer In-Place? (Immutability)": [[995, "modifying-an-integer-in-place-immutability"]], "Immutability: Tuples": [[995, "immutability-tuples"]], "Mutability: Lists (1)": [[995, "mutability-lists-1"]], "Mutability: Lists (2)": [[995, "mutability-lists-2"]], "Shallow Copy": [[995, "shallow-copy"]], "Deep Copy": [[995, "deep-copy"]], "Functions: Global and Local Scope (Livehacking Screenplay)": [[996, "functions-global-and-local-scope-livehacking-screenplay"]], "Undefined Variable": [[996, "undefined-variable"]], "Local Variable": [[996, "local-variable"]], "Local and Global Variable With Same Name": [[996, "local-and-global-variable-with-same-name"]], "Assignment to Global Variable: global": [[996, "assignment-to-global-variable-global"]], "Functions (Slideshow)": [[997, "functions-slideshow"]], "Why Functions?": [[997, "why-functions"]], "Mutable Default Parameters: Attention!": [[997, "mutable-default-parameters-attention"]], "String Delimiters": [[999, "string-delimiters"]], "Escape Sequences": [[999, "escape-sequences"]], "More String Tricks": [[999, "more-string-tricks"]], "C-Style Formatting (1)": [[1000, "c-style-formatting-1"]], "C-Style Formatting: Conversions": [[1000, "c-style-formatting-conversions"]], "C-Style Formatting: Flags": [[1000, "c-style-formatting-flags"]], "C-Style Formatting: Examples": [[1000, "c-style-formatting-examples"]], "The format Method": [[1000, "the-format-method"]], "Cool Since 3.6: f-Strings": [[1000, "cool-since-3-6-f-strings"]], "Batteries Included: Checks": [[1001, "batteries-included-checks"]], "Batteries Included: Search": [[1001, "batteries-included-search"]], "Substring Search: Examples": [[1001, "substring-search-examples"]], "Split and Join (1)": [[1001, "split-and-join-1"]], "Split and Join (2)": [[1001, "split-and-join-2"]], "List Access": [[1002, "list-access"]], "List Methods: Examples": [[1002, "list-methods-examples"]], "Dictionary Access": [[1003, "dictionary-access"]], "Examples: Simple Access": [[1003, "examples-simple-access"]], "Examples: Shortcuts": [[1003, "examples-shortcuts"]], "Dictionary Iteration (1)": [[1003, "dictionary-iteration-1"]], "Dictionary Iteration (2)": [[1003, "dictionary-iteration-2"]], "Operations on Sets (1)": [[1004, "operations-on-sets-1"]], "Operations on Sets (2)": [[1004, "operations-on-sets-2"]], "Python 2 vs. Python 3": [[1005, "python-2-vs-python-3"]], "Opening Files": [[1005, "opening-files"]], "Reading Files": [[1005, "reading-files"]], "Reading Files: Pythonic": [[1005, "reading-files-pythonic"]], "Writing Files (1)": [[1005, "writing-files-1"]], "Writing Files (2)": [[1005, "writing-files-2"]], "File Modes": [[1005, "file-modes"]], "Text vs. Binary Mode": [[1005, "text-vs-binary-mode"]], "Standard Streams": [[1005, "standard-streams"]], "Function Objects": [[1006, "function-objects"]], "What\u2019s a Function?": [[1006, "what-s-a-function"]], "Function Objects?": [[1006, "id1"]], "Function Objects! (1)": [[1006, "function-objects-1"]], "Function Objects! (2)": [[1006, "function-objects-2"]], "Commandline Parsing with argparse": [[1007, "commandline-parsing-with-argparse"]], "Handling Positional Arguments": [[1007, "handling-positional-arguments"]], "Handling Named Arguments: --interval \u2026": [[1007, "handling-named-arguments-interval"]], "Python: Draft Topics": [[1008, "python-draft-topics"]], "Matplotlib": [[1009, "matplotlib"]], "Axis Ranges": [[1009, "axis-ranges"]], "Package Installation (setuptools)": [[1010, "package-installation-setuptools"]], "Files": [[1010, "files"]], "Test \u201cInstallation\u201d": [[1010, "test-installation"]], "Source Distribution": [[1010, "source-distribution"]], "Manifest": [[1010, "manifest"]], "Installing From Wheel File": [[1010, "installing-from-wheel-file"]], "Publishing On PyPI": [[1010, "publishing-on-pypi"]], "Exercise: Read CSV File, Write into Sqlite3 Database": [[1011, "exercise-read-csv-file-write-into-sqlite3-database"]], "Exercise: Read CSV File": [[1012, "exercise-read-csv-file"]], "Sample CSV File": [[1012, "sample-csv-file"]], "CSV and Databases": [[1013, "csv-and-databases"]], "Exercise: Boolean Expressions": [[1015, "exercise-boolean-expressions"]], "Exercise: Even Numbers (while)": [[1016, "exercise-even-numbers-while"]], "Exercise: Greeting, Depending on Time of Day": [[1017, "exercise-greeting-depending-on-time-of-day"]], "Exercises (External)": [[1018, "exercises-external"]], "Exercise: Swap Two Variables": [[1020, "exercise-swap-two-variables"]], "Exercise: Username/Password Check": [[1021, "exercise-username-password-check"]], "Exercise: Digit to English Word": [[1022, "exercise-digit-to-english-word"]], "Exercise: Dictionary: Errors?": [[1023, "exercise-dictionary-errors"]], "Exercise: Eliminate Empty/Comment-Only Lines": [[1024, "exercise-eliminate-empty-comment-only-lines"]], "Exercise: Generator: Fibonacci": [[1025, "exercise-generator-fibonacci"]], "Exercise: Primeness (for)": [[1026, "exercise-primeness-for"]], "Exercises (Legacy)": [[1027, "exercises-legacy"]], "Exercise: Functions: join()": [[1028, "exercise-functions-join"]], "Exercise: Determine Maximum of Two Numbers (Function)": [[1030, "exercise-determine-maximum-of-two-numbers-function"]], "Exercise: Mixed List (Executable Program)": [[1031, "exercise-mixed-list-executable-program"]], "Exercise: Mixed List (Interactive Interpreter)": [[1032, "exercise-mixed-list-interactive-interpreter"]], "Exercise: Parsing /etc/passwd": [[1033, "exercise-parsing-etc-passwd"]], "Sample /etc/passwd file": [[1033, null]], "Implementation Strategy": [[1033, "implementation-strategy"]], "Exercise: Primeness (Function)": [[1034, "exercise-primeness-function"]], "Exercise: Reverting Lines of a File": [[1035, "exercise-reverting-lines-of-a-file"]], "Exercise: String (Right-Justify)": [[1036, "exercise-string-right-justify"]], "Exercise: Function: uniq()": [[1037, "exercise-function-uniq"]], "Exercise: Generator: uniq()": [[1038, "exercise-generator-uniq"]], "Exercise: Counting Lines, Words, Characters": [[1039, "exercise-counting-lines-words-characters"]], "Exercise: Primeness (while)": [[1040, "exercise-primeness-while"]], "Sensors, And Data Acquisition (Exercise Series)": [[1041, "sensors-and-data-acquisition-exercise-series"]], "Setting Paths": [[1042, "setting-paths"]], "Create (And Activate) A Virtual Environment For The Project": [[1042, "create-and-activate-a-virtual-environment-for-the-project"]], "Install Requirements": [[1042, "install-requirements"]], "Exercise: Basic \u201cSensor\u201d": [[1043, "exercise-basic-sensor"]], "Specification, And Setup": [[1043, "specification-and-setup"]], "Verification": [[1043, "verification"]], "Unit Test": [[1043, "unit-test"]], "Exercise: Read CSV File (csv.dictreader)": [[1044, "exercise-read-csv-file-csv-dictreader"]], "Users-header-cp1252.csv": [[1044, "id1"]], "Exercise: Refactoring - Extract CSV Reading Into Function (csv.dictreader)": [[1045, "exercise-refactoring-extract-csv-reading-into-function-csv-dictreader"]], "Exercise: Read CSV File (csv.reader)": [[1046, "exercise-read-csv-file-csv-reader"]], "Users-noheader-cp1252.csv": [[1046, "id2"]], "Exercise: Refactoring - Extract CSV Reading Into Function (csv.reader)": [[1047, "exercise-refactoring-extract-csv-reading-into-function-csv-reader"]], "User Database (Exercise Series)": [[1048, "user-database-exercise-series"]], "Exercise: MQTT: Publish User Records": [[1049, "exercise-mqtt-publish-user-records"]], "Exercise: Away From Raw Dictionaries": [[1050, "exercise-away-from-raw-dictionaries"]], "Test Code": [[1050, "test-code"], [1051, "test-code"], [1052, "test-code"]], "Exercise: Convert User Record To JSON And Back": [[1051, "exercise-convert-user-record-to-json-and-back"]], "Exercise: Refactoring - Extract Both CSV Formats Into Module": [[1052, "exercise-refactoring-extract-both-csv-formats-into-module"]], "Python: All Material, Interrelated": [[1053, "python-all-material-interrelated"]], "Python Programming: From Absolute Beginner to Advanced Productivity": [[1054, "python-programming-from-absolute-beginner-to-advanced-productivity"]], "Sample Trainings": [[1054, "sample-trainings"]], "More Information": [[1054, "more-information"]], "Python Links": [[1055, "python-links"]], "Advanced Python": [[1055, "advanced-python"], [1120, "advanced-python"]], "David Beazley": [[1055, "david-beazley"]], "Raymond Hettinger": [[1055, "raymond-hettinger"]], "Machine Learning, Artificial Intelligence": [[1056, "machine-learning-artificial-intelligence"]], "K-Means": [[1057, "k-means"]], "Topic Overview": [[1057, "topic-overview"], [1061, "topic-overview"]], "Artifacts": [[1057, "artifacts"]], "Topic Dependencies": [[1057, "topic-dependencies"], [1061, "topic-dependencies"]], "Linear Regression: Running Code (no Notebook!)": [[1058, "linear-regression-running-code-no-notebook"]], "Weather History Dataset": [[1059, "weather-history-dataset"]], "Linear Regression: Jupyter Notebook": [[1060, "Linear-Regression:-Jupyter-Notebook"]], "pandas.DataFrame": [[1060, "pandas.DataFrame"]], "Reading Data": [[1060, "Reading-Data"]], "Relationship Between pandas.DataFrame and numpy.ndarray": [[1060, "Relationship-Between-pandas.DataFrame-and-numpy.ndarray"]], "Extracting Input and Output Features from a pandas.DataFrame": [[1060, "Extracting-Input-and-Output-Features-from-a-pandas.DataFrame"]], "Plotting with matplotlib": [[1060, "Plotting-with-matplotlib"]], "Data Splicing: Split into Training and Test Data": [[1060, "Data-Splicing:-Split-into-Training-and-Test-Data"]], "Creating the Model: Algorithm + Training Data": [[1060, "Creating-the-Model:-Algorithm-+-Training-Data"]], "Verify the Model": [[1060, "Verify-the-Model"]], "Linear Regression": [[1061, "linear-regression"]], "Running Code": [[1061, "running-code"]], "Dataset": [[1061, "dataset"]], "Machine Learning: Concepts and Terminology": [[1062, "machine-learning-concepts-and-terminology"]], "How Far Is Mankind from Creating God": [[1062, "how-far-is-mankind-from-creating-god"]], "Basic Terminology: Algorithm and Model": [[1062, "basic-terminology-algorithm-and-model"]], "Basic Terminology: Features and Data": [[1062, "basic-terminology-features-and-data"]], "Types of Machine Learning": [[1062, "types-of-machine-learning"]], "Problems Solved": [[1062, "problems-solved"], [1088, "problems-solved"], [1095, "problems-solved"]], "Context Managers (Livehacking Tutorial)": [[1063, "context-managers-livehacking-tutorial"]], "Exception Unsafety": [[1063, "exception-unsafety"]], "Exception Safety": [[1063, "exception-safety"]], "Solution: The with Statement": [[1064, "solution-the-with-statement"]], "Context Managers (the with Statement) (incomplete)": [[1065, "context-managers-the-with-statement-incomplete"]], "CSV Files": [[1066, "csv-files"]], "CSV in its Origins": [[1066, "csv-in-its-origins"]], "The csv Module: csv.reader": [[1066, "the-csv-module-csv-reader"]], "And Tuple Unpacking?": [[1066, "and-tuple-unpacking"]], "Going Insane: CSV? SCSV?": [[1066, "going-insane-csv-scsv"]], "More Tuning Needed: Quoting": [[1066, "more-tuning-needed-quoting"]], "Tuning Options": [[1066, "tuning-options"]], "And Headings?": [[1066, "and-headings"]], "Enter csv.DictReader": [[1066, "enter-csv-dictreader"]], "DBAPI 2": [[1067, "dbapi-2"]], "Database Interfaces": [[1067, "database-interfaces"]], "DBAPI 2.0": [[1067, "dbapi-2-0"]], "Caveat: Transaction Lifetime": [[1067, "caveat-transaction-lifetime"]], "Caveat: Isolation": [[1067, "caveat-isolation"]], "Databases": [[1068, "databases"]], "DBAPI 2: PostgreSQL": [[1069, "dbapi-2-postgresql"]], "DBAPI 2 Example: Postgres": [[1069, "dbapi-2-example-postgres"]], "DBAPI 2: sqlite3": [[1070, "dbapi-2-sqlite3"]], "SQLite3": [[1070, "sqlite3"]], "SQLite3 Connection": [[1070, "sqlite3-connection"]], "SQLite3: Cursors and Statements": [[1070, "sqlite3-cursors-and-statements"]], "SQLite3: Filling the Database": [[1070, "sqlite3-filling-the-database"]], "SQLite3: Queries - Result Set": [[1070, "sqlite3-queries-result-set"]], "SQLite3: Bind Parameters": [[1070, "sqlite3-bind-parameters"]], "ASCII": [[1071, "ascii"]], "ISO Latin 1 (ISO-8859-1)": [[1071, "iso-latin-1-iso-8859-1"]], "And Python?": [[1071, "and-python"]], "Liebe Gr\u00fc\u00dfe, J\u00f6rg": [[1071, "liebe-grusze-jorg"]], "A Better Encoding for Liebe Gr\u00fc\u00dfe, J\u00f6rg: ISO-8859-1": [[1071, "a-better-encoding-for-liebe-grusze-jorg-iso-8859-1"]], "Encoding Mess": [[1071, "encoding-mess"]], "And \u795d\u597d, J\u00f6rg? (1)": [[1071, "and-jorg-1"]], "And \u795d\u597d, J\u00f6rg? (2)": [[1071, "and-jorg-2"]], "Enter UTF-8": [[1071, "enter-utf-8"]], "Boundary Code": [[1071, "boundary-code"]], "Ah Yes: decode()": [[1071, "ah-yes-decode"]], "And Source Encoding?": [[1071, "and-source-encoding"]], "Python: Miscellaneous Topics": [[1072, "python-miscellaneous-topics"]], "The import Statement (incomplete)": [[1073, "the-import-statement-incomplete"]], "Server/Broker": [[1074, "server-broker"]], "Client": [[1074, "client"]], "Starting the Service": [[1074, "starting-the-service"]], "Publishing a Message in Python": [[1074, "publishing-a-message-in-python"]], "Subscribing a Topic in Python": [[1074, "subscribing-a-topic-in-python"]], "Message Payload?": [[1074, "message-payload"]], "Pandas: Adding Rows": [[1075, "pandas-adding-rows"]], "Add Rows: Assign To New Row Number": [[1075, "add-rows-assign-to-new-row-number"]], "Add Rows: append() (Deprecated)": [[1075, "add-rows-append-deprecated"]], "Add Rows: Concatenating Frames": [[1075, "add-rows-concatenating-frames"]], "Pandas: Basics (DataFrame And Series)": [[1076, "pandas-basics-dataframe-and-series"]], "Naive: Objects, And Collections Of Objects": [[1076, "naive-objects-and-collections-of-objects"]], "Inverted: Objects, And Collections Of Objects (\u27f6 DataFrame)": [[1076, "inverted-objects-and-collections-of-objects-longrightarrow-dataframe"]], "Enter pandas, DataFrame, Series": [[1076, "enter-pandas-dataframe-series"]], "Selecting A Column \u27f6 Series": [[1076, "selecting-a-column-longrightarrow-series"]], "Selecting Multiple Columns": [[1076, "selecting-multiple-columns"]], "To Copy Or Not To Copy": [[1076, "to-copy-or-not-to-copy"]], "Pandas: Filters": [[1077, "pandas-filters"]], "Basic Filter Example": [[1077, "basic-filter-example"]], "Filter? Bitmap!": [[1077, "filter-bitmap"]], "Confusion: Filter/Column Addressing": [[1077, "confusion-filter-column-addressing"]], "Column Selection And Filters": [[1077, "column-selection-and-filters"]], "Boolean Expressions: Bitwise Operators! Braces!": [[1077, "boolean-expressions-bitwise-operators-braces"]], "Negation: ~": [[1077, "negation"]], "Neat Helpers": [[1077, "neat-helpers"]], "Random Material": [[1078, "random-material"]], "Pandas: Selecting Rows (And Columns) With iloc[]": [[1079, "pandas-selecting-rows-and-columns-with-iloc"]], "Row By Number: iloc[]": [[1079, "row-by-number-iloc"]], "So What Is A Row, Then?": [[1079, "so-what-is-a-row-then"]], "Selecting Multiple Rows": [[1079, "selecting-multiple-rows"]], "Selecting Rows And Columns": [[1079, "selecting-rows-and-columns"]], "Pandas: Indexes": [[1080, "pandas-indexes"]], "Default Index: Row Number": [[1080, "default-index-row-number"]], "Setting Custom Index": [[1080, "setting-custom-index"]], "Setting Custom Index, inplace=True": [[1080, "setting-custom-index-inplace-true"]], "Custom Index, And loc[]": [[1080, "custom-index-and-loc"]], "Custom Index, And iloc[]": [[1080, "custom-index-and-iloc"]], "Sorting DataFrame Object By Index Column": [[1080, "sorting-dataframe-object-by-index-column"]], "Pandas: Selecting Rows (And Columns) With loc[]": [[1081, "pandas-selecting-rows-and-columns-with-loc"]], "Rows (And Columns) By Label": [[1081, "rows-and-columns-by-label"]], "Hiccup: Slices Are Inclusive": [[1081, "hiccup-slices-are-inclusive"]], "Column Selection By Label": [[1081, "column-selection-by-label"]], "Columns By Slicing: Inclusive": [[1081, "columns-by-slicing-inclusive"]], "Pandas: Adding/Modifying Columns": [[1082, "pandas-adding-modifying-columns"]], "Example 1: Lowercasing A Column Of Strings": [[1082, "example-1-lowercasing-a-column-of-strings"]], "Example 1: Modifying The email Column": [[1082, "example-1-modifying-the-email-column"]], "Example 2: Adding A normalized_email Column": [[1082, "example-2-adding-a-normalized-email-column"]], "What If No Prebuilt Functionality Exists? apply() To The Rescue!": [[1082, "what-if-no-prebuilt-functionality-exists-apply-to-the-rescue"]], "apply() -ing Custom Functions": [[1082, "apply-ing-custom-functions"]], "XML: ElementTree (etree)": [[1083, "xml-elementtree-etree"]], "SAX and DOM": [[1083, "sax-and-dom"]], "ElementTree": [[1083, "elementtree"]], "A Very Simple Document": [[1083, "a-very-simple-document"]], "Text (1)": [[1083, "text-1"]], "Text (2)": [[1083, "text-2"]], "Writing XML Documents": [[1083, "writing-xml-documents"]], "Reading XML Documents": [[1083, "reading-xml-documents"]], "Visual Studio Code for Python Programming": [[1084, "visual-studio-code-for-python-programming"]], "PCAP Exam": [[1085, "pcap-exam"]], "Syllabus": [[1085, "syllabus"]], "Exam block #1: Modules and Packages (12%)": [[1085, "exam-block-1-modules-and-packages-12"]], "Exam block #2: Exceptions (14%)": [[1085, "exam-block-2-exceptions-14"]], "Exam block #3: Strings (18%)": [[1085, "exam-block-3-strings-18"]], "Exam block #4: Object-Oriented Programming (34%)": [[1085, "exam-block-4-object-oriented-programming-34"]], "Exam block #5: Miscellaneous (List Comprehensions, Lambdas, Closures, and I/O Operations) (22%)": [[1085, "exam-block-5-miscellaneous-list-comprehensions-lambdas-closures-and-i-o-operations-22"]], "Sample Questions": [[1085, "sample-questions"]], "Python: Project/Package Management": [[1086, "python-project-package-management"]], "Python Package Index (Livehacking Screenplay)": [[1087, "python-package-index-livehacking-screenplay"]], "Invocation": [[1087, "invocation"]], "Help": [[1087, "help"]], "Most Used Subcommands": [[1087, "most-used-subcommands"]], "Subcommand Help": [[1087, "subcommand-help"]], "System vs. User": [[1087, "system-vs-user"]], "Search": [[1087, "search"]], "Python Package Index (Slideshow)": [[1088, "python-package-index-slideshow"]], "Python Package Index (PyPI)": [[1088, "python-package-index-pypi"]], "Python Package Index": [[1089, "python-package-index"]], "Packaging, PyPI Upload (Link Collection)": [[1090, "packaging-pypi-upload-link-collection"]], "PyTest": [[1091, "pytest"]], "pytest Introduction, By Example": [[1092, "pytest-introduction-by-example"]], "Sample Project Structure": [[1092, "sample-project-structure"]], "pytest: Installation, Documentation": [[1092, "pytest-installation-documentation"]], "And PYTHONPATH?": [[1092, "and-pythonpath"]], "A Simple Test": [[1092, "a-simple-test"]], "Failing Tests": [[1092, "failing-tests"]], "A More Realistic Example": [[1092, "a-more-realistic-example"]], "Fixtures": [[1092, "fixtures"]], "Temporary Test Directory": [[1092, "temporary-test-directory"]], "Marking Tests as Expected to Fail": [[1092, "marking-tests-as-expected-to-fail"]], "The unittest Module": [[1093, "the-unittest-module"]], "Simplest Example": [[1093, "simplest-example"]], "Using a Fixture": [[1093, "using-a-fixture"]], "Multiple Test Cases With Same Fixture": [[1093, "multiple-test-cases-with-same-fixture"]], "Auto Recognizing Test Methods": [[1093, "auto-recognizing-test-methods"]], "The Meat of a Test": [[1093, "the-meat-of-a-test"]], "Recommendations": [[1093, "recommendations"]], "Virtual Environments (Livehacking Screenplay)": [[1094, "virtual-environments-livehacking-screenplay"]], "First: Help": [[1094, "first-help"]], "Local Package Installation": [[1094, "local-package-installation"]], "Freezing an Environment": [[1094, "freezing-an-environment"]], "Destroying an Environment": [[1094, "destroying-an-environment"]], "Recreating an Environment": [[1094, "recreating-an-environment"]], "Using Virtual Environments With Visual Studio Code": [[1094, "using-virtual-environments-with-visual-studio-code"]], "Virtual Environments (Slideshow)": [[1095, "virtual-environments-slideshow"]], "Virtual Environments (Links)": [[1095, "virtual-environments-links"]], "Virtual Environments": [[1096, "virtual-environments"]], "Code: Unittest: GTest Basics": [[1098, "code-unittest-gtest-basics"]], "Screenplay: Unittest: GTest Basics": [[1099, "screenplay-unittest-gtest-basics"]], "Before We Start": [[1099, "before-we-start"]], "Simplest Test: No Test": [[1099, "simplest-test-no-test"]], "Next Simplest: Single File": [[1099, "next-simplest-single-file"]], "Executing Tests Selectively": [[1099, "executing-tests-selectively"]], "Fatal Failure": [[1099, "fatal-failure"]], "FAIL()": [[1099, "fail"]], "ASSERT_*()": [[1099, "assert"]], "Non-Fatal Failure": [[1099, "non-fatal-failure"]], "Custom Message Output": [[1099, "custom-message-output"]], "Last Not Least: Structure": [[1099, "last-not-least-structure"]], "Test Cases and Suites": [[1099, "test-cases-and-suites"]], "Unittest: GTest Basics": [[1100, "unittest-gtest-basics"]], "Screenplay: Unittest: GTest and CMake": [[1101, "screenplay-unittest-gtest-and-cmake"]], "Installed: to be found in Standard Paths": [[1101, "installed-to-be-found-in-standard-paths"]], "CMake: \u201cFind Modules\u201d": [[1101, "cmake-find-modules"]], "Executing Tests As Part of Build": [[1101, "executing-tests-as-part-of-build"]], "Tests That Are Expected to Fail": [[1101, "tests-that-are-expected-to-fail"]], "Unittest: GTest and CMake": [[1102, "unittest-gtest-and-cmake"]], "Code: Unittest: GTest Fixtures": [[1103, "code-unittest-gtest-fixtures"]], "Screenplay: Unittest: GTest Fixtures": [[1104, "screenplay-unittest-gtest-fixtures"]], "Predefined Environment for a Number of Tests": [[1104, "predefined-environment-for-a-number-of-tests"]], "Environment is Isolated Per Test": [[1104, "environment-is-isolated-per-test"]], "More Complex Environment: SetUp(), TearDown()": [[1104, "more-complex-environment-setup-teardown"]], "Unittest: GTest Fixtures": [[1105, "unittest-gtest-fixtures"]], "Organisatorisches: Buchung, Kursablauf": [[1106, "organisatorisches-buchung-kursablauf"]], "Online Schulungen": [[1106, null]], "Buchung": [[1106, "buchung"]], "Kursgestaltung": [[1106, "kursgestaltung"]], "\u00dcbungen": [[1106, "ubungen"]], "Unterlagen & Download": [[1106, "unterlagen-download"]], "Linux from Scratch, 16.9.2013, M\u00fcnchen": [[1107, "linux-from-scratch-16-9-2013-munchen"]], "GRUB 0.97": [[1107, "grub-0-97"]], "Cross Systeme Bauen": [[1107, "cross-systeme-bauen"]], "Init, oder der Prozess mit der ID 1": [[1107, "init-oder-der-prozess-mit-der-id-1"]], "Verschiedenes": [[1107, "verschiedenes"]], "Shell Scripting/Bourne Again Shell (Bash)": [[1108, "shell-scripting-bourne-again-shell-bash"]], "Zielpublikum": [[1108, "zielpublikum"], [1110, "zielpublikum"], [1111, "zielpublikum"], [1116, "zielpublikum"], [1118, "zielpublikum"], [1123, "zielpublikum"], [1124, "zielpublikum"], [1130, "zielpublikum"]], "Kursinhalt": [[1108, "kursinhalt"], [1110, "kursinhalt"], [1111, "kursinhalt"], [1116, "kursinhalt"], [1118, "kursinhalt"], [1119, "kursinhalt"], [1123, "kursinhalt"], [1124, "kursinhalt"], [1125, "kursinhalt"], [1126, "kursinhalt"], [1128, "kursinhalt"], [1129, "kursinhalt"], [1130, "kursinhalt"]], "Empfohlene Vorkenntnisse": [[1108, "empfohlene-vorkenntnisse"], [1110, "empfohlene-vorkenntnisse"], [1111, "empfohlene-vorkenntnisse"], [1116, "empfohlene-vorkenntnisse"], [1118, "empfohlene-vorkenntnisse"], [1119, "empfohlene-vorkenntnisse"], [1123, "empfohlene-vorkenntnisse"], [1124, "empfohlene-vorkenntnisse"], [1125, "empfohlene-vorkenntnisse"], [1126, "empfohlene-vorkenntnisse"], [1128, "empfohlene-vorkenntnisse"], [1129, "empfohlene-vorkenntnisse"], [1130, "empfohlene-vorkenntnisse"]], "C: Einf\u00fchrung": [[1109, "c-einfuhrung"]], "C f\u00fcr Fortgeschrittene": [[1110, "c-fur-fortgeschrittene"]], "C++: Einf\u00fchrung und \u00dcberblick": [[1111, "c-einfuhrung-und-uberblick"]], "An Introduction to Modern C++, In Three Days": [[1112, "an-introduction-to-modern-c-in-three-days"]], "C and C++ Programming": [[1113, "c-and-c-programming"]], "CMake": [[1114, "cmake"]], "The Course": [[1114, null]], "Target Audience": [[1114, "target-audience"]], "Recommended Prior Knowledge": [[1114, "recommended-prior-knowledge"]], "Design Patterns For Embedded C++ Developers": [[1115, "design-patterns-for-embedded-c-developers"]], "Embedded Software Development: Hardware, Realtime, and Memory Management": [[1116, "embedded-software-development-hardware-realtime-and-memory-management"]], "Linux Kernel Driver Development": [[1117, "linux-kernel-driver-development"], [734, "linux-kernel-driver-development"]], "Course Contents": [[1117, "course-contents"]], "Sample Project": [[1117, "sample-project"]], "Linux Basics: Eine Einf\u00fchrung Anhand von Beispielen": [[1118, "linux-basics-eine-einfuhrung-anhand-von-beispielen"]], "GNU Make: Die Mutter aller Build Tools": [[1119, "gnu-make-die-mutter-aller-build-tools"]], "Herdt": [[1122, "herdt"]], "Eine Woche mit dem Raspberry Pi": [[1123, "eine-woche-mit-dem-raspberry-pi"]], "Subversion (SVN)": [[1124, "subversion-svn"]], "Linux Systems Programming: Introduction": [[1125, "linux-systems-programming-introduction"]], "Linux Systems Programming: Virtual Memory, IPC, Shared Libraries": [[1126, "linux-systems-programming-virtual-memory-ipc-shared-libraries"]], "Linux Systems Programming: Multithreading": [[1128, "linux-systems-programming-multithreading"]], "Linux Systems Programming: Network Programming": [[1129, "linux-systems-programming-network-programming"]], "Unittesting and Test Driven Development": [[1130, "unittesting-and-test-driven-development"]], "Python Advanced (2023-09-25 - 2023-09-27)": [[276, "Python-Advanced-(2023-09-25---2023-09-27)"], [275, "python-advanced-2023-09-25-2023-09-27"], [319, "python-advanced-2023-09-25-2023-09-27"]], "Types, Operators, Expressions": [[354, "types-operators-expressions"]], "Program Flow": [[363, "program-flow"]], "Functions and Program Structure": [[370, "functions-and-program-structure"]], "Structures": [[380, "structures"]], "Memory": [[383, "memory"]], "Program Sanity": [[396, "program-sanity"]], "Performance": [[400, "performance"]], "Profiling": [[405, "profiling"]], "C++: Miscellaneous Live-Hacking": [[526, "c-miscellaneous-live-hacking"]], "Functions and Methods": [[549, "functions-and-methods"]], "C++ Template Basics": [[555, "c-template-basics"]], "Dynamic Memory Allocation, Resource Management": [[596, "dynamic-memory-allocation-resource-management"]], "The Standard Library: Miscellaneous Topics": [[605, "the-standard-library-miscellaneous-topics"]], "Functions, Functions": [[691, "functions-functions"]], "Topics and Dependencies": [[734, "topics-and-dependencies"]], "POSIX Threads": [[908, "posix-threads"]], "Python: The Language Fundamentals": [[978, "python-the-language-fundamentals"]], "Unit Testing With googletest": [[1097, "unit-testing-with-googletest"]], "Screenplay: Pointless Blinking With Python, asyncio, and libgpiod (and a Raspberry Pi of Course)": [[61, "screenplay-pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"]], "Setup Before Presentation": [[61, "setup-before-presentation"]], "Greeting": [[61, "greeting"]], "Multiple Background Threads": [[61, "multiple-background-threads"]], "Enter asyncio": [[61, "enter-asyncio"]], "Character Device Based GPIO": [[61, "character-device-based-gpio"]], "GPIO Device": [[61, "gpio-device"]], "Most Basic Feature: Setting GPIO Values": [[61, "most-basic-feature-setting-gpio-values"]], "Entire Matrix On/Off": [[61, "entire-matrix-on-off"]], "Bringing All Together": [[61, "bringing-all-together"]], "Modularize": [[61, "modularize"]], "Play A Bit: Blink Entire Rows": [[61, "play-a-bit-blink-entire-rows"]], "Coroutines?": [[61, "coroutines"]], "Not Enough: sequence()": [[61, "not-enough-sequence"]], "Looping: forever()": [[61, "looping-forever"]], "A Stripped-Down Program (\u27f6 Factory)": [[61, "a-stripped-down-program-longrightarrow-factory"]], "Turn blink() Into A Factory": [[61, "turn-blink-into-a-factory"]], "Anti-Clumsy Decorator: blink() Wrapper": [[61, "anti-clumsy-decorator-blink-wrapper"]], "@program, Finally": [[61, "program-finally"]], "Playground: cycle()": [[61, "playground-cycle"]], "Fast Forward: any(), And Cancellation": [[61, "fast-forward-any-and-cancellation"]], "Playground: on()": [[61, "playground-on"]], "Goodbye": [[61, "goodbye"]], "Project Management: Requirements, Sandboxing, Testing": [[275, "project-management-requirements-sandboxing-testing"]], "Recap": [[275, "recap"]], "More Details": [[275, "more-details"]], "OO Design: Inheritance, And Abstract Base Classes": [[275, "oo-design-inheritance-and-abstract-base-classes"]], "Into The Wild: Group Project Kickoff": [[275, "into-the-wild-group-project-kickoff"]], "Bisher Gehaltene": [[319, "bisher-gehaltene"]], "Python Advanced (2023-10-23 - 2023-10-25)": [[319, "python-advanced-2023-10-23-2023-10-25"]], "Clean Code Development With Python (2023-03-28 - 2023-03-30)": [[319, "clean-code-development-with-python-2023-03-28-2023-03-30"]], "C++ For Embedded Developers (2023-03-20 - 2023-03-22)": [[319, "c-for-embedded-developers-2023-03-20-2023-03-22"]], "C++: A New Language Starting In 2011 (2022-07-26 - 2022-07-27)": [[319, "c-a-new-language-starting-in-2011-2022-07-26-2022-07-27"]], "C++: A New Language Starting In 2011 (2022-06-14 - 2022-06-15)": [[319, "c-a-new-language-starting-in-2011-2022-06-14-2022-06-15"]], "Python Advanced (2022-03-15 - 2022-03-17)": [[319, "python-advanced-2022-03-15-2022-03-17"]], "Python Basics (2021-08-23 - 2021-08-25)": [[319, "python-basics-2021-08-23-2021-08-25"]], "Programmieren mit C++ (2021-07-12 - 2021-07-16)": [[319, "programmieren-mit-c-2021-07-12-2021-07-16"]], "Linux Basics, Shell Scripting (2019-03-29 - 1.4.2021)": [[319, "linux-basics-shell-scripting-2019-03-29-1-4-2021"]], "Python (22.3.2021 - 25.3.2021)": [[319, "python-22-3-2021-25-3-2021"]], "Python Advanced (15.3.2021 - 17.3.2021)": [[319, "python-advanced-15-3-2021-17-3-2021"]], "Linux Kernel Driver Development Basics (8.3.2021 - 12.3.2020)": [[319, "linux-kernel-driver-development-basics-8-3-2021-12-3-2020"]], "Programmierung Grundlagen, anhand von Python (13. und 14.1.2021)": [[319, "programmierung-grundlagen-anhand-von-python-13-und-14-1-2021"]], "Linux und Raspberry Pi (3.11.2020, 4.11.2020, 17.11.2020)": [[319, "linux-und-raspberry-pi-3-11-2020-4-11-2020-17-11-2020"]], "Python Basics (19.10.2020 - 22.10.2020)": [[319, "python-basics-19-10-2020-22-10-2020"]], "Python Advanced (13.5.2020 - 14.5.2020 bei einer Firma in Graz)": [[319, "python-advanced-13-5-2020-14-5-2020-bei-einer-firma-in-graz"]], "C++ f\u00fcr Embedded-Entwickler (30.3.2020 - 4.4.2020, bei einer Firma in Baden-W\u00fcrttemberg)": [[319, "c-fur-embedded-entwickler-30-3-2020-4-4-2020-bei-einer-firma-in-baden-wurttemberg"]], "IPC in Linux (10.1.2020, bei einer Firma in Graz)": [[319, "ipc-in-linux-10-1-2020-bei-einer-firma-in-graz"]], "Python/NumPy (12.11.2019 - 13.11.2019 in Graz)": [[319, "python-numpy-12-11-2019-13-11-2019-in-graz"]], "Python Advanced (9.10.2019 - 10.10.2019 bei einer Firma in Graz)": [[319, "python-advanced-9-10-2019-10-10-2019-bei-einer-firma-in-graz"]], "C f\u00fcr Fortgeschrittene (30.9.2019 - 4.10.2019 in Wiener Neustadt)": [[319, "c-fur-fortgeschrittene-30-9-2019-4-10-2019-in-wiener-neustadt"]], "Einf\u00fchrung in Raspberry Pi (8.7.2019 - 10.7.2019 in Graz)": [[319, "einfuhrung-in-raspberry-pi-8-7-2019-10-7-2019-in-graz"]], "Python Basics (24.6.2019 - 27.6.2019, bei einer Firma in Ober\u00f6sterreich)": [[319, "python-basics-24-6-2019-27-6-2019-bei-einer-firma-in-oberosterreich"]], "Linux Basics (13.6.2019 - 19.6.2019, bei einer Firma in Ober\u00f6sterreich)": [[319, "linux-basics-13-6-2019-19-6-2019-bei-einer-firma-in-oberosterreich"]], "Python Basics (3.6.2019 - 6.6.2019, bei einer Firma in Ober\u00f6sterreich)": [[319, "python-basics-3-6-2019-6-6-2019-bei-einer-firma-in-oberosterreich"]], "Linux Big Picture (27.5.2019 - 29.5.2019, bei einer Firma in Baden-W\u00fcrttemberg)": [[319, "linux-big-picture-27-5-2019-29-5-2019-bei-einer-firma-in-baden-wurttemberg"]], "Python Basics (23.5.2019 - 24.5.2019, bei einer Firma in der Obersteiermark)": [[319, "python-basics-23-5-2019-24-5-2019-bei-einer-firma-in-der-obersteiermark"]], "Korn Shell Scripting (20.5.2019 - 22.5.2019 bei einer Firma in Salzburg)": [[319, "korn-shell-scripting-20-5-2019-22-5-2019-bei-einer-firma-in-salzburg"]], "Linux Basics (13.5.2019 - 15.5.2019, bei einer Firma in Ober\u00f6sterreich)": [[319, "linux-basics-13-5-2019-15-5-2019-bei-einer-firma-in-oberosterreich"]], "C: Ausgew\u00e4hlte Themen (17.12.2018 - 19.12.2018 in Graz)": [[319, "c-ausgewahlte-themen-17-12-2018-19-12-2018-in-graz"]], "Python Basics (1.10.2018 - 4.10.2018, bei einer Firma in Ober\u00f6sterreich)": [[319, "python-basics-1-10-2018-4-10-2018-bei-einer-firma-in-oberosterreich"]], "Linux Basics, Shell Scripting (16.7.2018 - 20.7.2018, bei einer Firma in Ober\u00f6sterreich)": [[319, "linux-basics-shell-scripting-16-7-2018-20-7-2018-bei-einer-firma-in-oberosterreich"]], "Advanced C on Linux (9.7.2018 - 11.7.2018, Raum N\u00fcrnberg)": [[319, "advanced-c-on-linux-9-7-2018-11-7-2018-raum-nurnberg"]], "Linux f\u00fcr Fortgeschrittene (12.3.2018 - 16.3.2018, Oberb\u00fcren/Schweiz)": [[319, "linux-fur-fortgeschrittene-12-3-2018-16-3-2018-oberburen-schweiz"]], "Linux und Python (11.9.2017 - 13.9.2017, bei einer Firma im Raum M\u00fcnchen)": [[319, "linux-und-python-11-9-2017-13-9-2017-bei-einer-firma-im-raum-munchen"]], "Linux Lowlevel Programming (28.8.2017 - 30.8.2017, Raum N\u00fcrnberg)": [[319, "linux-lowlevel-programming-28-8-2017-30-8-2017-raum-nurnberg"]], "C Refresher (23.8.2017 - 24.8.2017, Raum N\u00fcrnberg)": [[319, "c-refresher-23-8-2017-24-8-2017-raum-nurnberg"]], "C++11: Ausgew\u00e4hlte Themen (6.6.2017 - 8.6.2017 bei einer Firma in Graz)": [[319, "c-11-ausgewahlte-themen-6-6-2017-8-6-2017-bei-einer-firma-in-graz"]], "Linux vom Programmiererstandpunkt (30.12.2016 in Wien)": [[319, "linux-vom-programmiererstandpunkt-30-12-2016-in-wien"]], "Embedded Linux anhand des Raspberry Pi (17.10.2016 - 21.10.2016 bei einer Firma in Baden-W\u00fcrttemberg)": [[319, "embedded-linux-anhand-des-raspberry-pi-17-10-2016-21-10-2016-bei-einer-firma-in-baden-wurttemberg"]], "Linux vom Programmiererstandpunkt (20.9.2016 in Wien)": [[319, "linux-vom-programmiererstandpunkt-20-9-2016-in-wien"]], "C for Advanced Users (5.7.2016 - 6.7.2016, Raum N\u00fcrnberg)": [[319, "c-for-advanced-users-5-7-2016-6-7-2016-raum-nurnberg"]], "Einf\u00fchrung in C++ (22.2.2016 - 26.2.2016 bei einer Firma in Graz)": [[319, "einfuhrung-in-c-22-2-2016-26-2-2016-bei-einer-firma-in-graz"]], "Advanced Python Workshop (20.2.2017 - 23.2.2017, bei einer Firma in Ober\u00f6sterreich)": [[319, "advanced-python-workshop-20-2-2017-23-2-2017-bei-einer-firma-in-oberosterreich"]], "Embedded Linux (30.11.2015 - 4.12.2015, Bodenseo, Hemmenhofen am Bodensee)": [[319, "embedded-linux-30-11-2015-4-12-2015-bodenseo-hemmenhofen-am-bodensee"]], "Linux Kernel, Realtime (17.11.2015 - 19.11.2015 bei einer Firma in Graz)": [[319, "linux-kernel-realtime-17-11-2015-19-11-2015-bei-einer-firma-in-graz"]], "Linux Basics (3.11.2015 - 5.11.2015 bei einer Firma in Graz)": [[319, "linux-basics-3-11-2015-5-11-2015-bei-einer-firma-in-graz"]], "Einf\u00fchrung in Python (5.10.2015 - 6.10.2015 in Wien)": [[319, "einfuhrung-in-python-5-10-2015-6-10-2015-in-wien"]], "Linux Basics, Systemnahe Programmierung (27.7.2015 - 31.7.2015, bei einer Firma in Ober\u00f6sterreich)": [[319, "linux-basics-systemnahe-programmierung-27-7-2015-31-7-2015-bei-einer-firma-in-oberosterreich"]], "Design Patterns and Test Driven Development (1.7.2015 - 3.7.2015, Raum N\u00fcrnberg)": [[319, "design-patterns-and-test-driven-development-1-7-2015-3-7-2015-raum-nurnberg"]], "C for Advanced Users (9.12.2014 - 11.12.2014, Raum N\u00fcrnberg)": [[319, "c-for-advanced-users-9-12-2014-11-12-2014-raum-nurnberg"]], "Python (1.6.2015 - 3.6.2015, Mathias Kettner in M\u00fcnchen)": [[319, "python-1-6-2015-3-6-2015-mathias-kettner-in-munchen"]], "Linux Basics, Kernel, Git (9.3.2015 - 13.3.2015, Siemens Braunschweig)": [[319, "linux-basics-kernel-git-9-3-2015-13-3-2015-siemens-braunschweig"]], "Embedded Linux (28.1.2015 - 30.1.2015, bei einer Firma im Raum M\u00fcnchen)": [[319, "embedded-linux-28-1-2015-30-1-2015-bei-einer-firma-im-raum-munchen"]], "C for Intermediate Users (9.12.2014 - 11.12.2014, Raum N\u00fcrnberg)": [[319, "c-for-intermediate-users-9-12-2014-11-12-2014-raum-nurnberg"]], "Linux from Scratch (1.12.2014 - 5.12.2014 LPD Hannover)": [[319, "linux-from-scratch-1-12-2014-5-12-2014-lpd-hannover"]], "Einf\u00fchrung in C++ (7.10.2014 - 10.10.2014 in Wien)": [[319, "einfuhrung-in-c-7-10-2014-10-10-2014-in-wien"]], "Systemnahe Programmierung unter Linux (14.4.2014 - 17.4.2014 in K\u00f6ln)": [[319, "systemnahe-programmierung-unter-linux-14-4-2014-17-4-2014-in-koln"]], "Einf\u00fchrung in C++ (3.3.2014 - 14.3.2014 in Wien)": [[319, "einfuhrung-in-c-3-3-2014-14-3-2014-in-wien"]], "Projektverwaltung mit Subversion und CMake (24.2.2014 - 27.2.2014 in Wien)": [[319, "projektverwaltung-mit-subversion-und-cmake-24-2-2014-27-2-2014-in-wien"]], "Einf\u00fchrung in Python (23.6.2014 - 26.6.2014, LKA Niedersachsen)": [[319, "einfuhrung-in-python-23-6-2014-26-6-2014-lka-niedersachsen"]], "Linux: Boot-Konfiguration und Systemnahe Programmierung (27.5.2014 - 30.5.2014 in Graz)": [[319, "linux-boot-konfiguration-und-systemnahe-programmierung-27-5-2014-30-5-2014-in-graz"]], "Einf\u00fchrung in C (11.11.2013 - 22.11.2013 in Wien)": [[319, "einfuhrung-in-c-11-11-2013-22-11-2013-in-wien"]], "Linux Basics (28.10.2013 - 31.10.2013 in Wien)": [[319, "linux-basics-28-10-2013-31-10-2013-in-wien"]], "Linux Basics, Embedded Linux (14.10.2013 - 15.10.2013 bei einer Firma im Raum M\u00fcnchen)": [[319, "linux-basics-embedded-linux-14-10-2013-15-10-2013-bei-einer-firma-im-raum-munchen"]], "Shell/Bash Scripting (7.10.2013 - 9.10.2013, bei einer Firma in Ober\u00f6sterreich)": [[319, "shell-bash-scripting-7-10-2013-9-10-2013-bei-einer-firma-in-oberosterreich"]], "Alles Linux (1.10.2013 - 4.10.2013, QualiVision in Z\u00fcrich)": [[319, "alles-linux-1-10-2013-4-10-2013-qualivision-in-zurich"]], "Linux from Scratch (16.9.2013 - 20.9.2013, Mathias Kettner in M\u00fcnchen)": [[319, "linux-from-scratch-16-9-2013-20-9-2013-mathias-kettner-in-munchen"]], "Linux Basics (2.7.2013 - 4.7.2013, bei einer Firma in Ober\u00f6sterreich)": [[319, "linux-basics-2-7-2013-4-7-2013-bei-einer-firma-in-oberosterreich"]], "Linux - Einf\u00fchrung und Programmierung (27.5.2013 - 29.5.2013, bei einer Firma im Raum M\u00fcnchen)": [[319, "linux-einfuhrung-und-programmierung-27-5-2013-29-5-2013-bei-einer-firma-im-raum-munchen"]], "GNU Make (23.4.2013 in Graz)": [[319, "gnu-make-23-4-2013-in-graz"]], "Linux Basics & Embedded (14.1.2013 - 18.1.2013, bei einer Firma in Ober\u00f6sterreich)": [[319, "linux-basics-embedded-14-1-2013-18-1-2013-bei-einer-firma-in-oberosterreich"]], "Linux Systemnah, Embedded, C++ (26.11.2012 - 28.11.2012, bei einer Firma in Hamburg)": [[319, "linux-systemnah-embedded-c-26-11-2012-28-11-2012-bei-einer-firma-in-hamburg"]], "Fehlerdiagnose unter Linux (19.11.2012 - 21.11.2012, Polizei Niedersachsen in Hannover)": [[319, "fehlerdiagnose-unter-linux-19-11-2012-21-11-2012-polizei-niedersachsen-in-hannover"]], "Systemnahe Programmierung unter Linux (29.10.2012 - 30.10.2012, bei einer Firma im Raum M\u00fcnchen)": [[319, "systemnahe-programmierung-unter-linux-29-10-2012-30-10-2012-bei-einer-firma-im-raum-munchen"]], "Einf\u00fchrung in Python (15.10.2012 - 17.10.2012, Mathias Kettner in M\u00fcnchen)": [[319, "einfuhrung-in-python-15-10-2012-17-10-2012-mathias-kettner-in-munchen"]], "Einf\u00fchrung in Python (25.9.2012 - 27.9.2012, STIA in Admont)": [[319, "einfuhrung-in-python-25-9-2012-27-9-2012-stia-in-admont"]], "Linux Systemnah (13.2.2012 bis 15.2.2012, bei einer Firma in Z\u00fcrich)": [[319, "linux-systemnah-13-2-2012-bis-15-2-2012-bei-einer-firma-in-zurich"]], "Einf\u00fchrung in Python (24.1.2012 - 26.1.2012, Mathias Kettner in M\u00fcnchen)": [[319, "einfuhrung-in-python-24-1-2012-26-1-2012-mathias-kettner-in-munchen"]], "Linux Systemnah (19.9.2011 - 22.9.2011, bei einer Firma in Ober\u00f6sterreich)": [[319, "linux-systemnah-19-9-2011-22-9-2011-bei-einer-firma-in-oberosterreich"]], "Linux Basics (13.9.2011 - 15.9.2011, bei einer Firma in Ober\u00f6sterreich)": [[319, "linux-basics-13-9-2011-15-9-2011-bei-einer-firma-in-oberosterreich"]], "Linux Systemnah (4.7.2011 - 7.7.2011, Bodenseo, Hemmenhofen am Bodensee)": [[319, "linux-systemnah-4-7-2011-7-7-2011-bodenseo-hemmenhofen-am-bodensee"]], "Linux Systemnah (14.2.2011 - 18.2.2011, Bodenseo, Hemmenhofen am Bodensee)": [[319, "linux-systemnah-14-2-2011-18-2-2011-bodenseo-hemmenhofen-am-bodensee"]], "Linux from Scratch (12.12.2010 - 17.12.2010, Mathias Kettner in M\u00fcnchen)": [[319, "linux-from-scratch-12-12-2010-17-12-2010-mathias-kettner-in-munchen"]], "Softwareentwicklung unter Linux (6.12.2010 - 10.12.2010, bei einer Firma in Darmstadt)": [[319, "softwareentwicklung-unter-linux-6-12-2010-10-12-2010-bei-einer-firma-in-darmstadt"]], "Softwareentwicklung unter Linux (24.11.2010 - 26.11.2010, bei einer Firma im Raum Ulm)": [[319, "softwareentwicklung-unter-linux-24-11-2010-26-11-2010-bei-einer-firma-im-raum-ulm"]], "Linux Kernel (25.10.2010 - 26.10.2010, Deutsche Bundeswehr in Wildflecken)": [[319, "linux-kernel-25-10-2010-26-10-2010-deutsche-bundeswehr-in-wildflecken"]], "Softwareentwicklung unter Linux (20.10.2010 - 24.10.2010, Mathias Kettner)": [[319, "softwareentwicklung-unter-linux-20-10-2010-24-10-2010-mathias-kettner"]]}, "indexentries": {}})