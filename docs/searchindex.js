Search.setIndex({"docnames": ["about/myself/contact", "about/myself/cv-de", "about/myself/index", "about/myself/projects-de", "about/myself/skills-de", "about/site/courses/angebot-2023-10-12", "about/site/courses/index", "about/site/courses/samples/detail/2021-04-12/Notebook", "about/site/courses/samples/detail/2021-04-12/index", "about/site/courses/samples/detail/2021-04-12/notebook-wrapper", "about/site/courses/samples/detail/index", "about/site/courses/samples/index", "about/site/courses/templates", "about/site/index", "about/site/opentraining/index", "about/site/opentraining/misc/draft-topics/index", "about/site/opentraining/misc/index", "about/site/opentraining/misc/s5/index", "about/site/opentraining/misc/s5/tests/index", "about/site/opentraining/misc/s5/tests/test-slides", "about/site/opentraining/misc/screencast", "about/site/opentraining/misc/topics-to-write", "about/site/opentraining/netidee/index", "about/site/opentraining/netidee/netidee-antrag", "about/site/opentraining/netidee/netidee-video-2min", "about/site/opentraining/usecases/agenda-subtract-known", "about/site/opentraining/usecases/duration", "about/site/opentraining/usecases/index", "about/site/opentraining/usecases/linking", "about/site/opentraining/usecases/menu", "about/site/opentraining/usecases/slides", "about/site/recipes/camera-ssh", "about/site/recipes/emoji", "about/site/recipes/index", "about/site/recipes/isoamsa", "about/site/recipes/isoamsr", "about/site/recipes/isonum", "about/site/recipes/layout-test", "about/site/recipes/mathml", "about/site/recipes/rst-cheatsheet", "about/site/recipes/sphinxish", "about/site/work-in-progress/2022-04-13/index", "about/site/work-in-progress/2022-04-13/seminar/block-before-googletest", "about/site/work-in-progress/2022-04-13/seminar/clean-code-craftsmanship", "about/site/work-in-progress/2022-04-13/seminar/enter-googletest", "about/site/work-in-progress/2022-04-13/seminar/index", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/find-error", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-existing-files", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-store-content-on-read", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/csv", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/other-indexes", "about/site/work-in-progress/2022-04-13/seminar/tasks/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-interface", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-monolithic", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/pass-store-in-ctor", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/store-enum-switch", "about/site/work-in-progress/blink/glt2023/index", "about/site/work-in-progress/blink/glt2023/installation", "about/site/work-in-progress/blink/glt2023/pycon-2023", "about/site/work-in-progress/blink/glt2023/screenplay", "about/site/work-in-progress/blink/glt2023/submission", "about/site/work-in-progress/blink/glt2024/index", "about/site/work-in-progress/blink/glt2024/submission", "about/site/work-in-progress/blink/glt2024/talk-sketch", "about/site/work-in-progress/blink/index", "about/site/work-in-progress/fh-joanneum/2019/cxx", "about/site/work-in-progress/fh-joanneum/2019/cxx_build", "about/site/work-in-progress/fh-joanneum/2019/cxx_iface", "about/site/work-in-progress/fh-joanneum/2019/cxx_oo_basics", "about/site/work-in-progress/fh-joanneum/2019/cxx_unittest", "about/site/work-in-progress/fh-joanneum/2019/ec", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-1", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-2", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race_fixed", "about/site/work-in-progress/fh-joanneum/2019/git", "about/site/work-in-progress/fh-joanneum/2019/index", "about/site/work-in-progress/fh-joanneum/2019/linux", "about/site/work-in-progress/fh-joanneum/2019/linux_basics", "about/site/work-in-progress/fh-joanneum/2019/linux_dev_mgmt", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor_parallel", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_led_display", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_sensors", "about/site/work-in-progress/fh-joanneum/2019/linux_gpio", "about/site/work-in-progress/fh-joanneum/2019/mt", "about/site/work-in-progress/fh-joanneum/2019/mt_lock", "about/site/work-in-progress/fh-joanneum/2019/mt_wait", "about/site/work-in-progress/fh-joanneum/2019/py_basics", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_avg_display", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_sensors", "about/site/work-in-progress/fh-joanneum/2019/py_web", "about/site/work-in-progress/fh-joanneum/2019/py_web_sensors", "about/site/work-in-progress/fh-joanneum/2019/python", "about/site/work-in-progress/fh-joanneum/2020/index", "about/site/work-in-progress/fh-joanneum/2020/ss2022", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-08", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10-homework", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-21", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-22,24", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-28", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-04-01", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/index", "about/site/work-in-progress/fh-joanneum/2020/ws2022", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-code-general", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-yesno", "about/site/work-in-progress/fh-joanneum/2020/ws2022/lab-exam-2023-01-17", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30-solved", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/exam-2024-01-26", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/exam-2024-02-02", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/exam-2024-02-02-sample", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/index", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/index", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-const", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-param-passing", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-solid--hysteresis-with-display", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-solid--sensor-with-id", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-virtual-method", "about/site/work-in-progress/fh-joanneum/2021/git/git", "about/site/work-in-progress/fh-joanneum/2021/index", "about/site/work-in-progress/fh-joanneum/2021/ss2023", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-basic-integration", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-display", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-full-integration", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-csv-sink", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-integration", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-mqtt-sink", "about/site/work-in-progress/fh-joanneum/2021/tasks/display-infrastructure", "about/site/work-in-progress/fh-joanneum/2021/tasks/group", "about/site/work-in-progress/fh-joanneum/2021/tasks/libgpiod-switch", "about/site/work-in-progress/fh-joanneum/2021/tasks/mqtt-tkinter", "about/site/work-in-progress/fh-joanneum/2021/tasks/pwm-display", "about/site/work-in-progress/fh-joanneum/2021/tasks/sensor-interface", "about/site/work-in-progress/fh-joanneum/2021/tasks/sensor-w1", "about/site/work-in-progress/fh-joanneum/2021/tasks/switch-interface", "about/site/work-in-progress/fh-joanneum/2021/tasks/sysfs-gpio-switch", "about/site/work-in-progress/fh-joanneum/2021/ws2023-2024", "about/site/work-in-progress/fh-joanneum/2022/index", "about/site/work-in-progress/fh-joanneum/2022/ss2024/gluehwein", "about/site/work-in-progress/fh-joanneum/2022/ss2024/index", "about/site/work-in-progress/fh-joanneum/2022/ss2024/material", "about/site/work-in-progress/fh-joanneum/2022/ss2024/syllabus", "about/site/work-in-progress/fh-joanneum/index", "about/site/work-in-progress/git", "about/site/work-in-progress/index", "about/site/work-in-progress/packaging/index", "about/site/work-in-progress/playground/gaphor/index", "about/site/work-in-progress/playground/hochkoenig/index", "about/site/work-in-progress/playground/index", "about/site/work-in-progress/playground/sphinx", "about/site/work-in-progress/project-xxx/audio-chip", "about/site/work-in-progress/project-xxx/debian-config", "about/site/work-in-progress/project-xxx/debian-kernel-package", "about/site/work-in-progress/project-xxx/hardware-bringup", "about/site/work-in-progress/project-xxx/index", "about/site/work-in-progress/project-xxx/kernel-upgrade-dirty", "about/site/work-in-progress/project-xxx/wait-hardware", "about/site/work-in-progress/project-xxx/yocto-kernel", "about/site/work-in-progress/python-training", "about/site/work-in-progress/screencast", "about/site/work-in-progress/seo", "about/site/work-in-progress/stacks", "about/site/work-in-progress/todo-misc", "about/site/work-in-progress/web", "blog/2010/07/beagleboard-how-to-repair-nand-also-known-as-40w", "blog/2011/01/porting-to-linux-there-s-always-a-better-way", "blog/2011/01/saving-solid-state-disk-life--gentoo", "blog/2012/04/Why-ps-sucks", "blog/2020/02/fedora-kernel-build", "blog/2020/03/custom-domain-gh-pages", "blog/2020/03/ms-teams-on-linux", "blog/2020/03/sphinx-gh-pages", "blog/2020/04/bbb", "blog/2020/09/traunstein", "blog/2021/08/grintovec", "blog/2021/09/xps13-shim-mok-brick/index", "blog/2022/09/cross-raspi", "blog/index", "index", "trainings/codex", "trainings/exercises", "trainings/index", "trainings/log/detail/2013-10-01/index", "trainings/log/detail/2015-11-30/index", "trainings/log/detail/2019-10-28/LiveHacking", "trainings/log/detail/2019-10-28/index", "trainings/log/detail/2019-11-12/code/BigPlan", "trainings/log/detail/2019-11-12/code/LiveHacking", "trainings/log/detail/2019-11-12/index", "trainings/log/detail/2020-01-10/Proposal", "trainings/log/detail/2020-01-10/index", "trainings/log/detail/2020-03-30/code/exercise-string/index", "trainings/log/detail/2020-03-30/index", "trainings/log/detail/2020-03-30/install-googletest", "trainings/log/detail/2020-03-30/setup", "trainings/log/detail/2020-03-30/vs-code", "trainings/log/detail/2020-05-12/code/index", "trainings/log/detail/2020-05-12/index", "trainings/log/detail/2020-05-18/Livehacking", "trainings/log/detail/2020-05-18/code/index", "trainings/log/detail/2020-05-18/index", "trainings/log/detail/2020-09-07/index", "trainings/log/detail/2020-09-28/index", "trainings/log/detail/2020-10-19/Notebook", "trainings/log/detail/2020-10-19/index", "trainings/log/detail/2020-11-03/index", "trainings/log/detail/2020-11-23/index", "trainings/log/detail/2020-11-30/index", "trainings/log/detail/2021-01-13/Notebook", "trainings/log/detail/2021-01-13/index", "trainings/log/detail/2021-01-13/notebook-wrapper", "trainings/log/detail/2021-02-22/index", "trainings/log/detail/2021-03-08/index", "trainings/log/detail/2021-03-15/Notebook", "trainings/log/detail/2021-03-15/index", "trainings/log/detail/2021-03-22/Notebook", "trainings/log/detail/2021-03-22/index", "trainings/log/detail/2021-03-29/index", "trainings/log/detail/2021-04-12/Notebook", "trainings/log/detail/2021-04-12/index", "trainings/log/detail/2021-04-12/notebook-wrapper", "trainings/log/detail/2021-05-03/Notebook", "trainings/log/detail/2021-05-03/index", "trainings/log/detail/2021-05-03/notebook-wrapper", "trainings/log/detail/2021-05-25/Notebook", "trainings/log/detail/2021-05-25/index", "trainings/log/detail/2021-06-14/index", "trainings/log/detail/2021-07-12/index", "trainings/log/detail/2021-08-02/index", "trainings/log/detail/2021-08-02/notebook", "trainings/log/detail/2021-08-23/Notebook", "trainings/log/detail/2021-08-23/exercises/sap-cleaned", "trainings/log/detail/2021-08-23/index", "trainings/log/detail/2021-08-23/notebook-wrapper", "trainings/log/detail/2021-08-31/Notebook", "trainings/log/detail/2021-08-31/index", "trainings/log/detail/2021-08-31/notebook-wrapper", "trainings/log/detail/2021-11-17/Notebook", "trainings/log/detail/2021-11-17/index", "trainings/log/detail/2021-11-17/notebook-wrapper", "trainings/log/detail/2021-12-01/2021-12-01", "trainings/log/detail/2021-12-01/index", "trainings/log/detail/2021-12-01/notebook-wrapper", "trainings/log/detail/2021-12-06/index", "trainings/log/detail/2022-01-17/index", "trainings/log/detail/2022-01-17/notebook", "trainings/log/detail/2022-01-17/notebook-wrapper", "trainings/log/detail/2022-02-23/Notebook", "trainings/log/detail/2022-02-23/index", "trainings/log/detail/2022-02-23/notebook-wrapper", "trainings/log/detail/2022-03-15/Notebook", "trainings/log/detail/2022-03-15/index", "trainings/log/detail/2022-03-15/notebook-wrapper", "trainings/log/detail/2022-03-23/Notebook", "trainings/log/detail/2022-03-23/index", "trainings/log/detail/2022-03-23/notebook-wrapper", "trainings/log/detail/2022-04-05/index", "trainings/log/detail/2022-04-05/notebook", "trainings/log/detail/2022-04-05/notebook-wrapper", "trainings/log/detail/2022-04-25/index", "trainings/log/detail/2022-04-25/notebook", "trainings/log/detail/2022-04-25/notebook-wrapper", "trainings/log/detail/2022-05-02/index", "trainings/log/detail/2022-05-02/notebook", "trainings/log/detail/2022-05-02/notebook-wrapper", "trainings/log/detail/2022-05-16/index", "trainings/log/detail/2022-05-16/notebook", "trainings/log/detail/2022-05-16/notebook-wrapper", "trainings/log/detail/2022-06-14/2022-05-11", "trainings/log/detail/2022-06-14/index", "trainings/log/detail/2022-07-26/index", "trainings/log/detail/2022-10-03/index", "trainings/log/detail/2022-10-11/index", "trainings/log/detail/2022-10-24/index", "trainings/log/detail/2022-11-07/index", "trainings/log/detail/2022-11-07/notebook", "trainings/log/detail/2022-11-07/notebook-wrapper", "trainings/log/detail/2022-11-16/index", "trainings/log/detail/2022-11-16/notebook", "trainings/log/detail/2022-11-16/notebook-wrapper", "trainings/log/detail/2023-01-23/index", "trainings/log/detail/2023-02-13/index", "trainings/log/detail/2023-03-13-Python-SAP/Demo/demo-notebook", "trainings/log/detail/2023-03-13-Python-SAP/demo", "trainings/log/detail/2023-03-13-Python-SAP/index", "trainings/log/detail/2023-03-13-Python-SAP/notebook", "trainings/log/detail/2023-03-13-Python-SAP/notebook-wrapper", "trainings/log/detail/2023-03-13-Python-SAP/original-agenda", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/index", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/sap-dataset", "trainings/log/detail/2023-03-20--C++-embedded/index", "trainings/log/detail/2023-03-28--Python-Clean-Code/index", "trainings/log/detail/2023-04-18--C++-embedded/index", "trainings/log/detail/2023-04-24--Python-Advanced/agenda", "trainings/log/detail/2023-04-24--Python-Advanced/index", "trainings/log/detail/2023-04-24--Python-Advanced/notebook", "trainings/log/detail/2023-04-24--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-05-15--Python-Basics/agenda", "trainings/log/detail/2023-05-15--Python-Basics/index", "trainings/log/detail/2023-05-15--Python-Basics/notebook", "trainings/log/detail/2023-05-15--Python-Basics/notebook-wrapper", "trainings/log/detail/2023-05-23--Linux-Basics/agenda", "trainings/log/detail/2023-05-23--Linux-Basics/index", "trainings/log/detail/2023-06-20--Python-Basics/agenda", "trainings/log/detail/2023-06-20--Python-Basics/index", "trainings/log/detail/2023-06-20--Python-Basics/notebook", "trainings/log/detail/2023-06-20--Python-Basics/notebook-wrapper", "trainings/log/detail/2023-07-03--CMake/agenda", "trainings/log/detail/2023-07-03--CMake/index", "trainings/log/detail/2023-09-25--Python-Advanced/index", "trainings/log/detail/2023-09-25--Python-Advanced/notebook", "trainings/log/detail/2023-09-25--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-10-09--Python-Advanced/index", "trainings/log/detail/2023-10-09--Python-Advanced/notebook", "trainings/log/detail/2023-10-09--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-10-24--Python-Advanced/agenda", "trainings/log/detail/2023-10-24--Python-Advanced/index", "trainings/log/detail/2023-10-24--Python-Advanced/notebook", "trainings/log/detail/2023-10-24--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-11-22--Python-Advanced/agenda", "trainings/log/detail/2023-11-22--Python-Advanced/index", "trainings/log/detail/2023-11-22--Python-Advanced/notebook", "trainings/log/detail/2023-11-22--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-11-27--CMake/agenda", "trainings/log/detail/2023-11-27--CMake/index", "trainings/log/detail/2023-11-29--Python-Basics/agenda", "trainings/log/detail/2023-11-29--Python-Basics/index", "trainings/log/detail/2023-11-29--Python-Basics/notebook", "trainings/log/detail/2023-11-29--Python-Basics/notebook-wrapper", "trainings/log/detail/2023-12-04--C++-Advanced/agenda", "trainings/log/detail/2023-12-04--C++-Advanced/index", "trainings/log/detail/2023-12-18--Python-Basics/agenda", "trainings/log/detail/2023-12-18--Python-Basics/index", "trainings/log/detail/2023-12-18--Python-Basics/notebook", "trainings/log/detail/2023-12-18--Python-Basics/notebook-wrapper", "trainings/log/detail/2023-XX-XX-C++-embedded/index", "trainings/log/detail/2023-XX-XX-Python-SAP/index", "trainings/log/detail/2024-01-15--Python-Advanced/agenda", "trainings/log/detail/2024-01-15--Python-Advanced/index", "trainings/log/detail/2024-01-15--Python-Advanced/notebook", "trainings/log/detail/2024-01-15--Python-Advanced/notebook-wrapper", "trainings/log/detail/2024-01-29--Python-Basics/agenda", "trainings/log/detail/2024-01-29--Python-Basics/index", "trainings/log/detail/2024-01-29--Python-Basics/notebook", "trainings/log/detail/2024-01-29--Python-Basics/notebook-wrapper", "trainings/log/detail/2024-03-11--Linux-Basics/agenda", "trainings/log/detail/2024-03-11--Linux-Basics/index", "trainings/log/detail/FH-ECE-19/EC1/2021-05-12/screenplay-checker", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-abc", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-oo", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-unittest", "trainings/log/detail/FH-ECE-19/EC1/Exercises/fh-group", "trainings/log/detail/FH-ECE-19/EC1/Exercises/file-read", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-20-G2", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-21", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Checker-Explanations", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Datatypes", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Functions", "trainings/log/detail/FH-ECE-19/EC1/cloud-computer", "trainings/log/detail/FH-ECE-19/EC1/formales", "trainings/log/detail/FH-ECE-19/EC1/index", "trainings/log/detail/FH-ECE-19/EC1/log", "trainings/log/detail/FH-ECE-19/EC1/lv-de", "trainings/log/detail/FH-ECE-19/EC1/lv-en", "trainings/log/detail/FH-ECE-19/EC1/plan", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-07", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-12", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-28", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-15", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-29", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-12-14", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-10", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-12", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-02-15", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/index", "trainings/log/detail/FH-ECE-19/EC2/index", "trainings/log/detail/FH-ECE-19/EC2/test-material", "trainings/log/detail/FH-ECE-19/index", "trainings/log/detail/index", "trainings/log/index", "trainings/material/index", "trainings/material/soup/c/010-introduction/000-installation/topic", "trainings/material/soup/c/010-introduction/010-introduction/topic", "trainings/material/soup/c/010-introduction/020-getting-started/topic", "trainings/material/soup/c/010-introduction/030-variables-and-arithmetic-expressions/topic", "trainings/material/soup/c/010-introduction/040-exercise-fahrenheit-float/topic", "trainings/material/soup/c/010-introduction/050-the-for-statement/topic", "trainings/material/soup/c/010-introduction/060-exercise-fahrenheit-for/topic", "trainings/material/soup/c/010-introduction/070-symbolic-constants/topic", "trainings/material/soup/c/010-introduction/080-exercise-fahrenheit-cpp/topic", "trainings/material/soup/c/010-introduction/090-character-input-and-output/topic", "trainings/material/soup/c/010-introduction/100-exercise-wc/topic", "trainings/material/soup/c/010-introduction/110-arrays/topic", "trainings/material/soup/c/010-introduction/120-exercise-histogram/topic", "trainings/material/soup/c/010-introduction/130-functions/topic", "trainings/material/soup/c/010-introduction/140-exercise-power-declaration/topic", "trainings/material/soup/c/010-introduction/150-character-arrays/topic", "trainings/material/soup/c/010-introduction/160-exercise-string-read-line/topic", "trainings/material/soup/c/010-introduction/170-external-variables-and-scope/topic", "trainings/material/soup/c/010-introduction/group", "trainings/material/soup/c/020-types-operators-expressions/010-introduction/topic", "trainings/material/soup/c/020-types-operators-expressions/020-variable-names/topic", "trainings/material/soup/c/020-types-operators-expressions/030-data-types-and-sizes/topic", "trainings/material/soup/c/020-types-operators-expressions/040-constants/topic", "trainings/material/soup/c/020-types-operators-expressions/050-declarations/topic", "trainings/material/soup/c/020-types-operators-expressions/060-arithmetic-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/070-relational-and-logical-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/080-type-conversions/topic", "trainings/material/soup/c/020-types-operators-expressions/090-increment-and-decrement-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/100-exercise-string-reduce/topic", "trainings/material/soup/c/020-types-operators-expressions/110-bitwise-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/120-assignment-operators-and-expressions/topic", "trainings/material/soup/c/020-types-operators-expressions/130-conditional-expressions/topic", "trainings/material/soup/c/020-types-operators-expressions/140-precedence-and-order-of-evaluation/topic", "trainings/material/soup/c/020-types-operators-expressions/group", "trainings/material/soup/c/030-program-flow/010-statements-and-blocks/topic", "trainings/material/soup/c/030-program-flow/020-if-else/topic", "trainings/material/soup/c/030-program-flow/030-else-if/topic", "trainings/material/soup/c/030-program-flow/040-switch/topic", "trainings/material/soup/c/030-program-flow/050-loops-while-and-for/topic", "trainings/material/soup/c/030-program-flow/060-loops-do-while/topic", "trainings/material/soup/c/030-program-flow/070-break-and-continue/topic", "trainings/material/soup/c/030-program-flow/080-goto-and-labels/topic", "trainings/material/soup/c/030-program-flow/group", "trainings/material/soup/c/040-functions-and-program-structure/010-basics-of-functions/topic", "trainings/material/soup/c/040-functions-and-program-structure/020-external-variables/topic", "trainings/material/soup/c/040-functions-and-program-structure/030-header-files/topic", "trainings/material/soup/c/040-functions-and-program-structure/040-static-variables/topic", "trainings/material/soup/c/040-functions-and-program-structure/050-c-preprocessor/topic", "trainings/material/soup/c/040-functions-and-program-structure/060-c-preprocessor-advanced/topic", "trainings/material/soup/c/040-functions-and-program-structure/group", "trainings/material/soup/c/050-pointers-and-arrays/010-pointers-and-addresses/topic", "trainings/material/soup/c/050-pointers-and-arrays/020-pointers-and-function-arguments/topic", "trainings/material/soup/c/050-pointers-and-arrays/030-exercise-swap/topic", "trainings/material/soup/c/050-pointers-and-arrays/040-pointers-and-arrays/topic", "trainings/material/soup/c/050-pointers-and-arrays/050-command-line-arguments/topic", "trainings/material/soup/c/050-pointers-and-arrays/group", "trainings/material/soup/c/060-structures/010-basics-of-structures/topic", "trainings/material/soup/c/060-structures/020-structures-and-functions/topic", "trainings/material/soup/c/060-structures/030-typedef/topic", "trainings/material/soup/c/060-structures/group", "trainings/material/soup/c/070-memory/010-malloc/topic", "trainings/material/soup/c/070-memory/020-exercise-linked-list/topic", "trainings/material/soup/c/070-memory/group", "trainings/material/soup/c/080-advanced-language-features/010-volatile/topic", "trainings/material/soup/c/080-advanced-language-features/020-atomic/topic", "trainings/material/soup/c/080-advanced-language-features/030-alignment/topic", "trainings/material/soup/c/080-advanced-language-features/group", "trainings/material/soup/c/090-program-sanity/010-introduction/topic", "trainings/material/soup/c/090-program-sanity/020-integral-types/topic", "trainings/material/soup/c/090-program-sanity/030-discrete-values/topic", "trainings/material/soup/c/090-program-sanity/040-static/topic", "trainings/material/soup/c/090-program-sanity/050-const/topic", "trainings/material/soup/c/090-program-sanity/060-struct-initialization/topic", "trainings/material/soup/c/090-program-sanity/070-explicit-type-safety/topic", "trainings/material/soup/c/090-program-sanity/080-valgrind/topic", "trainings/material/soup/c/090-program-sanity/group", "trainings/material/soup/c/100-performance/010-introduction/topic", "trainings/material/soup/c/100-performance/020-computebound/topic", "trainings/material/soup/c/100-performance/030-memory/topic", "trainings/material/soup/c/100-performance/group", "trainings/material/soup/c/110-profiling/010-introduction/topic", "trainings/material/soup/c/110-profiling/020-gprof/topic", "trainings/material/soup/c/110-profiling/030-callgrind/topic", "trainings/material/soup/c/110-profiling/040-oprofile/topic", "trainings/material/soup/c/110-profiling/group", "trainings/material/soup/c/group", "trainings/material/soup/clean-code/book-messages", "trainings/material/soup/clean-code/craft-sw", "trainings/material/soup/clean-code/group", "trainings/material/soup/clean-code/intro-python/livehacking", "trainings/material/soup/cmake/basics", "trainings/material/soup/cmake/configure_file", "trainings/material/soup/cmake/cxx-and-rants", "trainings/material/soup/cmake/external-dependencies", "trainings/material/soup/cmake/group", "trainings/material/soup/cmake/installation", "trainings/material/soup/cmake/libraries", "trainings/material/soup/cmake/optional-code-approach-1", "trainings/material/soup/cmake/optional-code-approach-2", "trainings/material/soup/cmake/optional-code-problem", "trainings/material/soup/cmake/shared-libraries", "trainings/material/soup/cmake/structure", "trainings/material/soup/cmake/targets-properties", "trainings/material/soup/cmake/testing", "trainings/material/soup/cxx-code/index", "trainings/material/soup/cxx-design-patterns/abstract-factory/abstract-factory", "trainings/material/soup/cxx-design-patterns/adapter/adapter", "trainings/material/soup/cxx-design-patterns/command/command", "trainings/material/soup/cxx-design-patterns/command/socialdb", "trainings/material/soup/cxx-design-patterns/composite/composite", "trainings/material/soup/cxx-design-patterns/decorator/decorator", "trainings/material/soup/cxx-design-patterns/group", "trainings/material/soup/cxx-design-patterns/heating-screenplay/heating-screenplay", "trainings/material/soup/cxx-design-patterns/interpreter/interpreter", "trainings/material/soup/cxx-design-patterns/observer/observer", "trainings/material/soup/cxx-design-patterns/oo-principles", "trainings/material/soup/cxx-design-patterns/proxy/proxy", "trainings/material/soup/cxx-design-patterns/sensor-hierarchy", "trainings/material/soup/cxx-design-patterns/singleton/singleton", "trainings/material/soup/cxx-design-patterns/uml/uml", "trainings/material/soup/cxx-exercises/design-patterns/abstract-factory", "trainings/material/soup/cxx-exercises/design-patterns/adapter", "trainings/material/soup/cxx-exercises/design-patterns/command", "trainings/material/soup/cxx-exercises/design-patterns/composite", "trainings/material/soup/cxx-exercises/design-patterns/decorator", "trainings/material/soup/cxx-exercises/design-patterns/group", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-and-adapter", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-basic", "trainings/material/soup/cxx-exercises/design-patterns/observer", "trainings/material/soup/cxx-exercises/design-patterns/proxy-remote", "trainings/material/soup/cxx-exercises/design-patterns/proxy-round", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible-strict", "trainings/material/soup/cxx-exercises/design-patterns/singleton-inflexible", "trainings/material/soup/cxx-exercises/design-patterns/solutions/abstract-factory", "trainings/material/soup/cxx-exercises/design-patterns/solutions/adapter", "trainings/material/soup/cxx-exercises/design-patterns/solutions/command", "trainings/material/soup/cxx-exercises/design-patterns/solutions/composite", "trainings/material/soup/cxx-exercises/design-patterns/solutions/decorator", "trainings/material/soup/cxx-exercises/design-patterns/solutions/group", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-and-adapter", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-basic", "trainings/material/soup/cxx-exercises/design-patterns/solutions/observer", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-remote", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-round", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible-strict", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-inflexible", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-loop-function", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-no-polymorphism", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-random-sensor", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/group", "trainings/material/soup/cxx-exercises/group", "trainings/material/soup/cxx-exercises/nopoly-display-led-stripe/display-led-stripe-nopoly", "trainings/material/soup/cxx-exercises/nopoly-hysteresis/hysteresis-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensor-avg/sensor-avg-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-const-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-mock-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-random-nopoly", "trainings/material/soup/cxx-exercises/nopoly-switch-mock/switch-mock-nopoly", "trainings/material/soup/cxx-exercises/oo-shapes/shapes", "trainings/material/soup/cxx-exercises/project-setup", "trainings/material/soup/cxx-exercises/sensor-interface/sensor-interface", "trainings/material/soup/cxx-exercises/sensor-w1-factory/sensor-w1-factory", "trainings/material/soup/cxx-exercises/sensor-w1/sensor-w1", "trainings/material/soup/cxx-exercises/stl/algo", "trainings/material/soup/cxx-exercises/stl/filter-generic", "trainings/material/soup/cxx-exercises/stl/filter-greater-10", "trainings/material/soup/cxx-exercises/stl/filter-odd", "trainings/material/soup/cxx-exercises/stl/group", "trainings/material/soup/cxx-exercises/stl/map", "trainings/material/soup/cxx-exercises/stl/sensor-repository/group", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-no-overwrite", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-sunny", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-not-found", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-sunny", "trainings/material/soup/cxx-exercises/stl/sensor-repository/no-memleak", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-not-found", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-sunny", "trainings/material/soup/cxx-exercises/stl/sensor-repository/size-const", "trainings/material/soup/cxx-exercises/stl/uniq", "trainings/material/soup/cxx-exercises/stl/vector", "trainings/material/soup/cxx-todo/index", "trainings/material/soup/cxx/cxx_class_templates/code/index", "trainings/material/soup/cxx/cxx_class_templates/screenplay", "trainings/material/soup/cxx/cxx_class_templates/topic", "trainings/material/soup/cxx/cxx_dynamic_memory/code/index", "trainings/material/soup/cxx/cxx_dynamic_memory/screenplay", "trainings/material/soup/cxx/cxx_dynamic_memory/topic", "trainings/material/soup/cxx/cxx_global_initialization/code/index", "trainings/material/soup/cxx/cxx_global_initialization/screenplay", "trainings/material/soup/cxx/cxx_global_initialization/topic", "trainings/material/soup/cxx/cxx_inheritance_virtual/code/index", "trainings/material/soup/cxx/cxx_inheritance_virtual/screenplay", "trainings/material/soup/cxx/cxx_inheritance_virtual/topic", "trainings/material/soup/cxx/cxx_ownership_raii/code/index", "trainings/material/soup/cxx/cxx_ownership_raii/screenplay", "trainings/material/soup/cxx/cxx_ownership_raii/topic", "trainings/material/soup/cxx/cxx_stl_container_intro/code/index", "trainings/material/soup/cxx/cxx_stl_container_intro/screenplay", "trainings/material/soup/cxx/cxx_stl_container_intro/topic", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/code/index", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/screenplay", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/topic", "trainings/material/soup/cxx/group", "trainings/material/soup/cxx03/001-introduction/topic", "trainings/material/soup/cxx03/020-data-encapsulation/c", "trainings/material/soup/cxx03/020-data-encapsulation/copy-basics", "trainings/material/soup/cxx03/020-data-encapsulation/cpp-introduction", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-custom", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-default", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-dtor", "trainings/material/soup/cxx03/020-data-encapsulation/group", "trainings/material/soup/cxx03/020-data-encapsulation/initializer-list", "trainings/material/soup/cxx03/020-data-encapsulation/object-copy", "trainings/material/soup/cxx03/030-functions-and-methods/010-overloading/topic", "trainings/material/soup/cxx03/030-functions-and-methods/020-methods/topic", "trainings/material/soup/cxx03/030-functions-and-methods/030-const/topic", "trainings/material/soup/cxx03/030-functions-and-methods/040-this/topic", "trainings/material/soup/cxx03/030-functions-and-methods/050-references/topic", "trainings/material/soup/cxx03/030-functions-and-methods/060-static/topic", "trainings/material/soup/cxx03/030-functions-and-methods/065-static-member-variables/topic", "trainings/material/soup/cxx03/030-functions-and-methods/070-operators/topic", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-cuboid", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point3d", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-rectangle", "trainings/material/soup/cxx03/030-functions-and-methods/group", "trainings/material/soup/cxx03/040-exceptions/010-basics/topic", "trainings/material/soup/cxx03/040-exceptions/020-try-catch/topic", "trainings/material/soup/cxx03/040-exceptions/group", "trainings/material/soup/cxx03/050-templates/010-function-templates/topic", "trainings/material/soup/cxx03/050-templates/020-class-templates/topic", "trainings/material/soup/cxx03/050-templates/group", "trainings/material/soup/cxx03/060-stl/010-basics/algo-copy", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-algo", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-basics", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-difference", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-out-of-range", "trainings/material/soup/cxx03/060-stl/010-basics/topic", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/topic", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-and-copy", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-basic", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-pointer-arith", "trainings/material/soup/cxx03/060-stl/020-algorithm/binary_search", "trainings/material/soup/cxx03/060-stl/020-algorithm/copy", "trainings/material/soup/cxx03/060-stl/020-algorithm/find", "trainings/material/soup/cxx03/060-stl/020-algorithm/find_if", "trainings/material/soup/cxx03/060-stl/020-algorithm/for_each", "trainings/material/soup/cxx03/060-stl/020-algorithm/group", "trainings/material/soup/cxx03/060-stl/020-algorithm/lower_bound", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse_copy", "trainings/material/soup/cxx03/060-stl/020-algorithm/sort", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/basics", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/group", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/list", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/vector", "trainings/material/soup/cxx03/060-stl/050-associative-containers/basics", "trainings/material/soup/cxx03/060-stl/050-associative-containers/group", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-init-fill", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-insert", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-remove", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-search", "trainings/material/soup/cxx03/060-stl/050-associative-containers/multimap", "trainings/material/soup/cxx03/060-stl/allocators/allocator_basics", "trainings/material/soup/cxx03/060-stl/allocators/group", "trainings/material/soup/cxx03/060-stl/exercises/group", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/exercise", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/group", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/solution", "trainings/material/soup/cxx03/060-stl/group", "trainings/material/soup/cxx03/070-dynamic-memory/000-todo/topic", "trainings/material/soup/cxx03/070-dynamic-memory/group", "trainings/material/soup/cxx03/100-inheritance-oo-design/basics", "trainings/material/soup/cxx03/100-inheritance-oo-design/destructor", "trainings/material/soup/cxx03/100-inheritance-oo-design/group", "trainings/material/soup/cxx03/100-inheritance-oo-design/interface", "trainings/material/soup/cxx03/100-inheritance-oo-design/polymorphism", "trainings/material/soup/cxx03/100-inheritance-oo-design/private-protected", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-destructor", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-method", "trainings/material/soup/cxx03/900-standard-library-miscellanea/group", "trainings/material/soup/cxx03/900-standard-library-miscellanea/string/topic", "trainings/material/soup/cxx03/exercises-misc/american-flag/exercise", "trainings/material/soup/cxx03/exercises-misc/fh-questions", "trainings/material/soup/cxx03/exercises-misc/group", "trainings/material/soup/cxx03/exercises-misc/sum-integers-from-stdin/exercise", "trainings/material/soup/cxx03/exercises-userdb/group", "trainings/material/soup/cxx03/exercises-userdb/user-access-methods/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-const-members/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-const/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-default-ctor/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-simple-method/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-to-cxx-ctor/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-insert/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-find_if/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-notfound-exception/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-search/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-vector/exercise", "trainings/material/soup/cxx03/group", "trainings/material/soup/cxx11/010-introduction/group", "trainings/material/soup/cxx11/010-introduction/history", "trainings/material/soup/cxx11/010-introduction/overview-livehacking", "trainings/material/soup/cxx11/020-new-language-features/010-strongly-typed-enums/topic", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/group", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/implementor-view", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/intro", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/mess", "trainings/material/soup/cxx11/020-new-language-features/050-delegating-ctor/topic", "trainings/material/soup/cxx11/020-new-language-features/055-constexpr/topic", "trainings/material/soup/cxx11/020-new-language-features/060-move/afterword", "trainings/material/soup/cxx11/020-new-language-features/060-move/group", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-smartptr-move", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-string-move", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-using-string-move", "trainings/material/soup/cxx11/020-new-language-features/060-move/overview", "trainings/material/soup/cxx11/020-new-language-features/070-miscellaneous/topic", "trainings/material/soup/cxx11/020-new-language-features/auto", "trainings/material/soup/cxx11/020-new-language-features/concepts/group", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-1-conceptless", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-2-conceptless-error", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-3-concept-integral", "trainings/material/soup/cxx11/020-new-language-features/concepts/links", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-1-good-old-func", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-2-need-template", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-4-concept-has-size", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-5-concept-index-ret-double", "trainings/material/soup/cxx11/020-new-language-features/coroutines/group", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibo-generator", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibonacci", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-h", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-hello", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/simplest", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-iter", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-next", "trainings/material/soup/cxx11/020-new-language-features/default", "trainings/material/soup/cxx11/020-new-language-features/delete", "trainings/material/soup/cxx11/020-new-language-features/final", "trainings/material/soup/cxx11/020-new-language-features/group", "trainings/material/soup/cxx11/020-new-language-features/lambda/group", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-capture", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor-pitfall", "trainings/material/soup/cxx11/020-new-language-features/modules", "trainings/material/soup/cxx11/020-new-language-features/override", "trainings/material/soup/cxx11/020-new-language-features/range-based-for", "trainings/material/soup/cxx11/020-new-language-features/range-based-for-map", "trainings/material/soup/cxx11/020-new-language-features/ranges/good-bad", "trainings/material/soup/cxx11/020-new-language-features/ranges/group", "trainings/material/soup/cxx11/020-new-language-features/ranges/intro", "trainings/material/soup/cxx11/020-new-language-features/ranges/links", "trainings/material/soup/cxx11/020-new-language-features/structured-binding", "trainings/material/soup/cxx11/030-smart-pointers/040-closing-words/topic", "trainings/material/soup/cxx11/030-smart-pointers/group", "trainings/material/soup/cxx11/030-smart-pointers/introduction", "trainings/material/soup/cxx11/030-smart-pointers/introduction-livehack", "trainings/material/soup/cxx11/030-smart-pointers/sharedptr", "trainings/material/soup/cxx11/030-smart-pointers/uniqueptr", "trainings/material/soup/cxx11/030-smart-pointers/weakptr", "trainings/material/soup/cxx11/035-perfect-forwarding/topic", "trainings/material/soup/cxx11/040-bind-function/010-bind/topic", "trainings/material/soup/cxx11/040-bind-function/020-function/topic", "trainings/material/soup/cxx11/040-bind-function/group", "trainings/material/soup/cxx11/050-multithreading/010-introduction/topic", "trainings/material/soup/cxx11/050-multithreading/020-thread/topic", "trainings/material/soup/cxx11/050-multithreading/030-race-conditions/topic", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/atomics", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/mutex", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/scoped-locking", "trainings/material/soup/cxx11/050-multithreading/condition-variable", "trainings/material/soup/cxx11/050-multithreading/group", "trainings/material/soup/cxx11/050-multithreading/promise-future", "trainings/material/soup/cxx11/100-miscellaneous/010-chrono/topic", "trainings/material/soup/cxx11/100-miscellaneous/any-variant-optional/variant", "trainings/material/soup/cxx11/100-miscellaneous/group", "trainings/material/soup/cxx11/drafts/crtp", "trainings/material/soup/cxx11/drafts/embedded-problems/allocator", "trainings/material/soup/cxx11/drafts/embedded-problems/classic-virtual", "trainings/material/soup/cxx11/drafts/embedded-problems/group", "trainings/material/soup/cxx11/drafts/embedded-problems/related-no-virtual", "trainings/material/soup/cxx11/drafts/embedded-problems/type-erasure", "trainings/material/soup/cxx11/drafts/embedded-problems/unrelated", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-automatic-visit", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-manual-if", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-manual-visit", "trainings/material/soup/cxx11/drafts/embedded-problems/why-replace-virtual", "trainings/material/soup/cxx11/drafts/group", "trainings/material/soup/cxx11/exercises/bag-copy", "trainings/material/soup/cxx11/exercises/bag-shared", "trainings/material/soup/cxx11/exercises/bag-unique", "trainings/material/soup/cxx11/exercises/group", "trainings/material/soup/cxx11/filesystem/topic", "trainings/material/soup/cxx11/group", "trainings/material/soup/graph", "trainings/material/soup/index", "trainings/material/soup/kernel/cdev-auto/screenplay", "trainings/material/soup/kernel/cdev-auto/slides", "trainings/material/soup/kernel/cdev-auto/topic", "trainings/material/soup/kernel/cdev-file-operations/screenplay", "trainings/material/soup/kernel/cdev-file-operations/slides", "trainings/material/soup/kernel/cdev-file-operations/topic", "trainings/material/soup/kernel/cdev-first-functionality/slides", "trainings/material/soup/kernel/cdev-first-functionality/topic", "trainings/material/soup/kernel/cdev-manual/screenplay", "trainings/material/soup/kernel/cdev-manual/slides", "trainings/material/soup/kernel/cdev-manual/topic", "trainings/material/soup/kernel/cdev-multiple-devices/slides", "trainings/material/soup/kernel/cdev-multiple-devices/topic", "trainings/material/soup/kernel/cdev-refactoring/screenplay", "trainings/material/soup/kernel/cdev-refactoring/slides", "trainings/material/soup/kernel/cdev-refactoring/topic", "trainings/material/soup/kernel/dma/slides", "trainings/material/soup/kernel/dma/topic", "trainings/material/soup/kernel/fedora-kernel-build/screenplay", "trainings/material/soup/kernel/fedora-kernel-build/topic", "trainings/material/soup/kernel/fedora-module-build/screenplay", "trainings/material/soup/kernel/fedora-module-build/topic", "trainings/material/soup/kernel/group", "trainings/material/soup/kernel/hello-world/slides", "trainings/material/soup/kernel/hello-world/topic", "trainings/material/soup/kernel/interrupt-coding/slides", "trainings/material/soup/kernel/interrupt-coding/topic", "trainings/material/soup/kernel/interrupt/slides", "trainings/material/soup/kernel/interrupt/topic", "trainings/material/soup/kernel/iomemory/slides", "trainings/material/soup/kernel/iomemory/topic", "trainings/material/soup/kernel/kmalloc/slides", "trainings/material/soup/kernel/kmalloc/topic", "trainings/material/soup/kernel/list/slides", "trainings/material/soup/kernel/list/topic", "trainings/material/soup/kernel/mutex-coding/slides", "trainings/material/soup/kernel/mutex-coding/topic", "trainings/material/soup/kernel/mutex/slides", "trainings/material/soup/kernel/mutex/topic", "trainings/material/soup/kernel/netdev/slides", "trainings/material/soup/kernel/netdev/topic", "trainings/material/soup/kernel/pci/slides", "trainings/material/soup/kernel/pci/topic", "trainings/material/soup/kernel/process-vs-atomic/slides", "trainings/material/soup/kernel/process-vs-atomic/topic", "trainings/material/soup/kernel/raspi-kernel-build/story", "trainings/material/soup/kernel/raspi-kernel-build/topic", "trainings/material/soup/kernel/sample-project", "trainings/material/soup/kernel/spinlock-coding/slides", "trainings/material/soup/kernel/spinlock-coding/topic", "trainings/material/soup/kernel/spinlock/slides", "trainings/material/soup/kernel/spinlock/topic", "trainings/material/soup/kernel/stub-sysprog-dup/topic", "trainings/material/soup/kernel/time_timer-coding/slides", "trainings/material/soup/kernel/time_timer-coding/topic", "trainings/material/soup/kernel/time_timer/slides", "trainings/material/soup/kernel/time_timer/topic", "trainings/material/soup/kernel/todo", "trainings/material/soup/kernel/usermem/screenplay", "trainings/material/soup/kernel/usermem/slides", "trainings/material/soup/kernel/usermem/topic", "trainings/material/soup/kernel/waitqueue/screenplay", "trainings/material/soup/kernel/waitqueue/slides", "trainings/material/soup/kernel/waitqueue/topic", "trainings/material/soup/kernel/workqueue/screenplay", "trainings/material/soup/kernel/workqueue/slides", "trainings/material/soup/kernel/workqueue/topic", "trainings/material/soup/linux/basics/archiving-compression/exercises", "trainings/material/soup/linux/basics/archiving-compression/group", "trainings/material/soup/linux/basics/archiving-compression/gzip", "trainings/material/soup/linux/basics/archiving-compression/overview", "trainings/material/soup/linux/basics/archiving-compression/tar", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G1", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G2", "trainings/material/soup/linux/basics/exercises/group", "trainings/material/soup/linux/basics/group", "trainings/material/soup/linux/basics/intro/demo-everything-is-a-file", "trainings/material/soup/linux/basics/intro/environment", "trainings/material/soup/linux/basics/intro/exercises/fh-questions", "trainings/material/soup/linux/basics/intro/group", "trainings/material/soup/linux/basics/intro/login", "trainings/material/soup/linux/basics/intro/overview", "trainings/material/soup/linux/basics/intro/process", "trainings/material/soup/linux/basics/intro/process-tree", "trainings/material/soup/linux/basics/intro/wsl", "trainings/material/soup/linux/basics/io-redirection-pipes/exercises", "trainings/material/soup/linux/basics/io-redirection-pipes/group", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection-swap-stdout-stderr", "trainings/material/soup/linux/basics/io-redirection-pipes/pipes", "trainings/material/soup/linux/basics/permissions/basics", "trainings/material/soup/linux/basics/permissions/exercises/credentials", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions-nocheat", "trainings/material/soup/linux/basics/permissions/exercises/group", "trainings/material/soup/linux/basics/permissions/exercises/private-directory", "trainings/material/soup/linux/basics/permissions/exercises/private-directory-question", "trainings/material/soup/linux/basics/permissions/exercises/public-directory", "trainings/material/soup/linux/basics/permissions/exercises/public-directory-question", "trainings/material/soup/linux/basics/permissions/exercises/shared-file", "trainings/material/soup/linux/basics/permissions/group", "trainings/material/soup/linux/basics/permissions/setuid", "trainings/material/soup/linux/basics/permissions/setuid-livedemo", "trainings/material/soup/linux/basics/permissions/sticky", "trainings/material/soup/linux/basics/permissions/umask", "trainings/material/soup/linux/basics/shell/commandline", "trainings/material/soup/linux/basics/shell/configfiles", "trainings/material/soup/linux/basics/shell/cp", "trainings/material/soup/linux/basics/shell/cwd", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/copy-tree", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-copy-files", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-create-files", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-move-files", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/group", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/mkdir-p-rm-r", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-rf", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-tree", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/verify-hierarchy", "trainings/material/soup/linux/basics/shell/exercises/fh-questions", "trainings/material/soup/linux/basics/shell/exercises/group", "trainings/material/soup/linux/basics/shell/exercises/ls/dev-types", "trainings/material/soup/linux/basics/shell/exercises/ls/etc-passwd-size", "trainings/material/soup/linux/basics/shell/exercises/ls/group", "trainings/material/soup/linux/basics/shell/exercises/ls/home-permissions", "trainings/material/soup/linux/basics/shell/file_dir_create_rm", "trainings/material/soup/linux/basics/shell/group", "trainings/material/soup/linux/basics/shell/links", "trainings/material/soup/linux/basics/shell/ls", "trainings/material/soup/linux/basics/shell/mv", "trainings/material/soup/linux/basics/shell/paths", "trainings/material/soup/linux/basics/text-tools/cat", "trainings/material/soup/linux/basics/text-tools/cut", "trainings/material/soup/linux/basics/text-tools/exercises", "trainings/material/soup/linux/basics/text-tools/find", "trainings/material/soup/linux/basics/text-tools/grep", "trainings/material/soup/linux/basics/text-tools/group", "trainings/material/soup/linux/basics/text-tools/head-tail", "trainings/material/soup/linux/basics/text-tools/less", "trainings/material/soup/linux/basics/text-tools/overview", "trainings/material/soup/linux/drafts/group", "trainings/material/soup/linux/drafts/yocto", "trainings/material/soup/linux/group", "trainings/material/soup/linux/hardware/brushless-motor/topic", "trainings/material/soup/linux/hardware/can/10-intro", "trainings/material/soup/linux/hardware/can/20-interfaces", "trainings/material/soup/linux/hardware/can/30-programming", "trainings/material/soup/linux/hardware/can/40-harware", "trainings/material/soup/linux/hardware/can/group", "trainings/material/soup/linux/hardware/group", "trainings/material/soup/linux/hardware/i2c/topic", "trainings/material/soup/linux/hardware/pwm/topic", "trainings/material/soup/linux/hardware/w1/topic", "trainings/material/soup/linux/ssh/basics", "trainings/material/soup/linux/ssh/exercises/copy-file", "trainings/material/soup/linux/ssh/exercises/copy-tree", "trainings/material/soup/linux/ssh/exercises/group", "trainings/material/soup/linux/ssh/exercises/pubkey", "trainings/material/soup/linux/ssh/group", "trainings/material/soup/linux/ssh/key-pair", "trainings/material/soup/linux/ssh/links", "trainings/material/soup/linux/ssh/portforwarding", "trainings/material/soup/linux/ssh/scp", "trainings/material/soup/linux/ssh/sshfs", "trainings/material/soup/linux/sysprog/basics/errorhandling", "trainings/material/soup/linux/sysprog/basics/group", "trainings/material/soup/linux/sysprog/basics/syscalls", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-file", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-network", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-timer", "trainings/material/soup/linux/sysprog/blocking-io/group", "trainings/material/soup/linux/sysprog/file-io/basics", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-copy", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-hole", "trainings/material/soup/linux/sysprog/file-io/duplicate", "trainings/material/soup/linux/sysprog/file-io/example-O_CREAT", "trainings/material/soup/linux/sysprog/file-io/example-O_EXCL", "trainings/material/soup/linux/sysprog/file-io/example-O_RDONLY", "trainings/material/soup/linux/sysprog/file-io/example-O_WRONLY", "trainings/material/soup/linux/sysprog/file-io/exercise-sensor-read", "trainings/material/soup/linux/sysprog/file-io/group", "trainings/material/soup/linux/sysprog/file-io/misc", "trainings/material/soup/linux/sysprog/group", "trainings/material/soup/linux/sysprog/intro-hw/get", "trainings/material/soup/linux/sysprog/intro-hw/group", "trainings/material/soup/linux/sysprog/intro-hw/sysfs-gpio", "trainings/material/soup/linux/sysprog/intro-hw/watch", "trainings/material/soup/linux/sysprog/posix-threads/010-introduction/topic", "trainings/material/soup/linux/sysprog/posix-threads/020-lifecycle/topic", "trainings/material/soup/linux/sysprog/posix-threads/030-exercise-pthcreate-race-condition/topic", "trainings/material/soup/linux/sysprog/posix-threads/040-mutex/topic", "trainings/material/soup/linux/sysprog/posix-threads/050-exercise-mutex/topic", "trainings/material/soup/linux/sysprog/posix-threads/060-condition-variable/topic", "trainings/material/soup/linux/sysprog/posix-threads/070-exercise-condition-variable/topic", "trainings/material/soup/linux/sysprog/posix-threads/080-miscellaneous/topic", "trainings/material/soup/linux/sysprog/posix-threads/090-last-warning/topic", "trainings/material/soup/linux/sysprog/posix-threads/group", "trainings/material/soup/linux/sysprog/posix-threads/locked-trylock", "trainings/material/soup/linux/sysprog/process/commandline", "trainings/material/soup/linux/sysprog/process/group", "trainings/material/soup/linux/sysprog/process/tree", "trainings/material/soup/linux/sysprog/scheduling/basics", "trainings/material/soup/linux/sysprog/scheduling/group", "trainings/material/soup/linux/sysprog/scheduling/processes-and-threads", "trainings/material/soup/linux/sysprog/scheduling/questions", "trainings/material/soup/linux/sysprog/scheduling/realtime", "trainings/material/soup/linux/sysprog/scheduling/realtime-api", "trainings/material/soup/linux/sysprog/scheduling/wakup-latency", "trainings/material/soup/linux/sysprog/sysprog_events/code/index", "trainings/material/soup/linux/sysprog/sysprog_events/screenplay", "trainings/material/soup/linux/sysprog/sysprog_events/topic", "trainings/material/soup/linux/sysprog/sysprog_ipc/code/index", "trainings/material/soup/linux/sysprog/sysprog_ipc/screenplay", "trainings/material/soup/linux/sysprog/sysprog_ipc/slides", "trainings/material/soup/linux/sysprog/sysprog_ipc/topic", "trainings/material/soup/linux/sysprog/sysprog_signals/code/index", "trainings/material/soup/linux/sysprog/sysprog_signals/screenplay", "trainings/material/soup/linux/sysprog/sysprog_signals/slides", "trainings/material/soup/linux/sysprog/sysprog_signals/topic", "trainings/material/soup/linux/toolchain/basics/topic", "trainings/material/soup/linux/toolchain/cmake/cross", "trainings/material/soup/linux/toolchain/cmake/local", "trainings/material/soup/linux/toolchain/cross/basics", "trainings/material/soup/linux/toolchain/cross/group", "trainings/material/soup/linux/toolchain/exercises/cross-build", "trainings/material/soup/linux/toolchain/exercises/fh-2022-questions", "trainings/material/soup/linux/toolchain/exercises/group", "trainings/material/soup/linux/toolchain/exercises/native-build", "trainings/material/soup/linux/toolchain/exercises/raspberry-toolchain", "trainings/material/soup/linux/toolchain/group", "trainings/material/soup/linux/toolchain/raspberry-pi/group", "trainings/material/soup/linux/toolchain/raspberry-pi/linaro", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-details", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-docker-fedora", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-setup", "trainings/material/soup/linux/toolchain/separate-compilation/topic", "trainings/material/soup/linux/toolchain/shared-libraries/topic", "trainings/material/soup/linux/toolchain/static-library/topic", "trainings/material/soup/python/advanced/closures/topic", "trainings/material/soup/python/advanced/comprehensions/topic", "trainings/material/soup/python/advanced/context-mgr/topic", "trainings/material/soup/python/advanced/decorators/topic", "trainings/material/soup/python/advanced/exceptions/topic", "trainings/material/soup/python/advanced/exec/topic", "trainings/material/soup/python/advanced/group", "trainings/material/soup/python/advanced/iteration-generation/iteration-generation/topic", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/fibonacci-generator", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/iterator-protocol", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/topic", "trainings/material/soup/python/advanced/iteration-generation/topic", "trainings/material/soup/python/advanced/modules", "trainings/material/soup/python/advanced/multithreading/basics", "trainings/material/soup/python/advanced/multithreading/group", "trainings/material/soup/python/advanced/multithreading/mutex", "trainings/material/soup/python/advanced/multithreading/questions", "trainings/material/soup/python/advanced/oo/abc/topic", "trainings/material/soup/python/advanced/oo/classes-and-dicts/topic", "trainings/material/soup/python/advanced/oo/constructor/topic", "trainings/material/soup/python/advanced/oo/group", "trainings/material/soup/python/advanced/oo/inheritance/topic", "trainings/material/soup/python/advanced/oo/methods/topic", "trainings/material/soup/python/advanced/oo/namedtuple/topic", "trainings/material/soup/python/advanced/oo/operator-overloading/topic", "trainings/material/soup/python/advanced/oo/properties/topic", "trainings/material/soup/python/advanced/oo/str-repr/topic", "trainings/material/soup/python/advanced/starargs/topic", "trainings/material/soup/python/basics/group", "trainings/material/soup/python/basics/installation", "trainings/material/soup/python/basics/python_0110_blahblah/topic", "trainings/material/soup/python/basics/python_0120_helloworld/topic", "trainings/material/soup/python/basics/python_0125_running/topic", "trainings/material/soup/python/basics/python_0130_syntax_etc/topic", "trainings/material/soup/python/basics/python_0139_commandline_argv/topic", "trainings/material/soup/python/basics/python_0140_variables/topic", "trainings/material/soup/python/basics/python_0150_datatypes_overview/topic", "trainings/material/soup/python/basics/python_0150_datatypes_overview_compound/topic", "trainings/material/soup/python/basics/python_0160_boolean/topic", "trainings/material/soup/python/basics/python_0170_if/topic", "trainings/material/soup/python/basics/python_0193_while/topic", "trainings/material/soup/python/basics/python_0200_sequential_types/topic", "trainings/material/soup/python/basics/python_0210_indexing_slicing/topic", "trainings/material/soup/python/basics/python_0220_for/topic", "trainings/material/soup/python/basics/python_0225_range/topic", "trainings/material/soup/python/basics/python_0250_refs_flat_deep_copy/topic", "trainings/material/soup/python/basics/python_0270_functions/screenplay-scoping", "trainings/material/soup/python/basics/python_0270_functions/slideshow", "trainings/material/soup/python/basics/python_0270_functions/topic", "trainings/material/soup/python/basics/python_0300_strings/topic", "trainings/material/soup/python/basics/python_0310_strings_formatting/topic", "trainings/material/soup/python/basics/python_0320_strings_methods/topic", "trainings/material/soup/python/basics/python_0400_lists/topic", "trainings/material/soup/python/basics/python_0450_dictionaries/topic", "trainings/material/soup/python/basics/python_0460_sets/topic", "trainings/material/soup/python/basics/python_0500_files/topic", "trainings/material/soup/python/basics/python_1000_function_objects/topic", "trainings/material/soup/python/drafts/argparse/topic", "trainings/material/soup/python/drafts/asyncio/topic", "trainings/material/soup/python/drafts/group", "trainings/material/soup/python/drafts/matplotlib/topic", "trainings/material/soup/python/drafts/setuptools/topic", "trainings/material/soup/python/exercises/csv/csv-db", "trainings/material/soup/python/exercises/csv/csv-module", "trainings/material/soup/python/exercises/csv/group", "trainings/material/soup/python/exercises/group", "trainings/material/soup/python/exercises/herdt/boolean", "trainings/material/soup/python/exercises/herdt/exercise_while_even_numbers", "trainings/material/soup/python/exercises/herdt/greet", "trainings/material/soup/python/exercises/herdt/group", "trainings/material/soup/python/exercises/herdt/max_numbers", "trainings/material/soup/python/exercises/herdt/swap", "trainings/material/soup/python/exercises/herdt/username_password", "trainings/material/soup/python/exercises/legacy/cmdline_digit", "trainings/material/soup/python/exercises/legacy/dict_keyerror", "trainings/material/soup/python/exercises/legacy/distill", "trainings/material/soup/python/exercises/legacy/fibonacci-generator", "trainings/material/soup/python/exercises/legacy/for_primeness", "trainings/material/soup/python/exercises/legacy/group", "trainings/material/soup/python/exercises/legacy/join_function", "trainings/material/soup/python/exercises/legacy/max_numbers", "trainings/material/soup/python/exercises/legacy/max_numbers_function", "trainings/material/soup/python/exercises/legacy/mixed_list_executable", "trainings/material/soup/python/exercises/legacy/mixed_list_interactive", "trainings/material/soup/python/exercises/legacy/passwd", "trainings/material/soup/python/exercises/legacy/primeness_function", "trainings/material/soup/python/exercises/legacy/revert", "trainings/material/soup/python/exercises/legacy/string-rightjustify", "trainings/material/soup/python/exercises/legacy/uniq_function", "trainings/material/soup/python/exercises/legacy/uniq_generator", "trainings/material/soup/python/exercises/legacy/wc", "trainings/material/soup/python/exercises/legacy/while_primeness", "trainings/material/soup/python/exercises/sensors/group", "trainings/material/soup/python/exercises/sensors/project-setup", "trainings/material/soup/python/exercises/sensors/sensor-const", "trainings/material/soup/python/exercises/userdb/csvdictreader", "trainings/material/soup/python/exercises/userdb/csvdictreader-function", "trainings/material/soup/python/exercises/userdb/csvreader", "trainings/material/soup/python/exercises/userdb/csvreader-function", "trainings/material/soup/python/exercises/userdb/group", "trainings/material/soup/python/exercises/userdb/mqtt-publish-csv", "trainings/material/soup/python/exercises/userdb/user-class-person", "trainings/material/soup/python/exercises/userdb/user_json", "trainings/material/soup/python/exercises/userdb/userdb_csv", "trainings/material/soup/python/graph", "trainings/material/soup/python/group", "trainings/material/soup/python/link-collection", "trainings/material/soup/python/misc/ai/group", "trainings/material/soup/python/misc/ai/k-means", "trainings/material/soup/python/misc/ai/linear-regression/code", "trainings/material/soup/python/misc/ai/linear-regression/history_data", "trainings/material/soup/python/misc/ai/linear-regression/linear_regression", "trainings/material/soup/python/misc/ai/linear-regression/topic", "trainings/material/soup/python/misc/ai/machine-learning-intro", "trainings/material/soup/python/misc/csv/topic", "trainings/material/soup/python/misc/db/dbapi2", "trainings/material/soup/python/misc/db/group", "trainings/material/soup/python/misc/db/postgres", "trainings/material/soup/python/misc/db/sqlite3", "trainings/material/soup/python/misc/encoding/topic", "trainings/material/soup/python/misc/group", "trainings/material/soup/python/misc/import", "trainings/material/soup/python/misc/mqtt/topic", "trainings/material/soup/python/misc/pandas/add_row", "trainings/material/soup/python/misc/pandas/basics", "trainings/material/soup/python/misc/pandas/filters", "trainings/material/soup/python/misc/pandas/group", "trainings/material/soup/python/misc/pandas/iloc", "trainings/material/soup/python/misc/pandas/indexes", "trainings/material/soup/python/misc/pandas/loc", "trainings/material/soup/python/misc/pandas/mod_col", "trainings/material/soup/python/misc/python_5550_xml_etree/topic", "trainings/material/soup/python/misc/vscode", "trainings/material/soup/python/swdev/group", "trainings/material/soup/python/swdev/pip/screenplay", "trainings/material/soup/python/swdev/pip/slides", "trainings/material/soup/python/swdev/pip/topic", "trainings/material/soup/python/swdev/pypi", "trainings/material/soup/python/swdev/pytest/group", "trainings/material/soup/python/swdev/pytest/intro", "trainings/material/soup/python/swdev/unittest", "trainings/material/soup/python/swdev/venv/screenplay", "trainings/material/soup/python/swdev/venv/slides", "trainings/material/soup/python/swdev/venv/topic", "trainings/material/soup/unittest/group", "trainings/material/soup/unittest/unittest_gtest_basics/code/index", "trainings/material/soup/unittest/unittest_gtest_basics/screenplay", "trainings/material/soup/unittest/unittest_gtest_basics/topic", "trainings/material/soup/unittest/unittest_gtest_cmake/screenplay", "trainings/material/soup/unittest/unittest_gtest_cmake/topic", "trainings/material/soup/unittest/unittest_gtest_fixture/code/index", "trainings/material/soup/unittest/unittest_gtest_fixture/screenplay", "trainings/material/soup/unittest/unittest_gtest_fixture/topic", "trainings/org", "trainings/repertoire/_hidden/kettner-lfs-2013-09-16", "trainings/repertoire/bash", "trainings/repertoire/c-like/c", "trainings/repertoire/c-like/c-advanced", "trainings/repertoire/c-like/cxx", "trainings/repertoire/c-like/cxx11", "trainings/repertoire/c-like/index", "trainings/repertoire/cmake", "trainings/repertoire/design-patterns/design-patterns", "trainings/repertoire/embedded", "trainings/repertoire/kernel-programming-basics", "trainings/repertoire/linux-basics", "trainings/repertoire/make", "trainings/repertoire/python/advanced", "trainings/repertoire/python/basics", "trainings/repertoire/python/herdt", "trainings/repertoire/raspi-hands-on", "trainings/repertoire/svn", "trainings/repertoire/sysprog/basics", "trainings/repertoire/sysprog/fortgeschrittenes", "trainings/repertoire/sysprog/index", "trainings/repertoire/sysprog/multithreading", "trainings/repertoire/sysprog/network", "trainings/repertoire/unittests"], "filenames": ["about/myself/contact.rst", "about/myself/cv-de.rst", "about/myself/index.rst", "about/myself/projects-de.rst", "about/myself/skills-de.rst", "about/site/courses/angebot-2023-10-12.rst", "about/site/courses/index.rst", "about/site/courses/samples/detail/2021-04-12/Notebook.ipynb", "about/site/courses/samples/detail/2021-04-12/index.rst", "about/site/courses/samples/detail/2021-04-12/notebook-wrapper.rst", "about/site/courses/samples/detail/index.rst", "about/site/courses/samples/index.rst", "about/site/courses/templates.rst", "about/site/index.rst", "about/site/opentraining/index.rst", "about/site/opentraining/misc/draft-topics/index.rst", "about/site/opentraining/misc/index.rst", "about/site/opentraining/misc/s5/index.rst", "about/site/opentraining/misc/s5/tests/index.rst", "about/site/opentraining/misc/s5/tests/test-slides.rst", "about/site/opentraining/misc/screencast.rst", "about/site/opentraining/misc/topics-to-write.rst", "about/site/opentraining/netidee/index.rst", "about/site/opentraining/netidee/netidee-antrag.rst", "about/site/opentraining/netidee/netidee-video-2min.rst", "about/site/opentraining/usecases/agenda-subtract-known.rst", "about/site/opentraining/usecases/duration.rst", "about/site/opentraining/usecases/index.rst", "about/site/opentraining/usecases/linking.rst", "about/site/opentraining/usecases/menu.rst", "about/site/opentraining/usecases/slides.rst", "about/site/recipes/camera-ssh.rst", "about/site/recipes/emoji.rst", "about/site/recipes/index.rst", "about/site/recipes/isoamsa.rst", "about/site/recipes/isoamsr.rst", "about/site/recipes/isonum.rst", "about/site/recipes/layout-test.rst", "about/site/recipes/mathml.rst", "about/site/recipes/rst-cheatsheet.rst", "about/site/recipes/sphinxish.rst", "about/site/work-in-progress/2022-04-13/index.rst", "about/site/work-in-progress/2022-04-13/seminar/block-before-googletest.rst", "about/site/work-in-progress/2022-04-13/seminar/clean-code-craftsmanship.rst", "about/site/work-in-progress/2022-04-13/seminar/enter-googletest.rst", "about/site/work-in-progress/2022-04-13/seminar/index.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/find-error.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-existing-files.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-store-content-on-read.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/csv.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/other-indexes.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-interface.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-monolithic.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/pass-store-in-ctor.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/store-enum-switch.rst", "about/site/work-in-progress/blink/glt2023/index.rst", "about/site/work-in-progress/blink/glt2023/installation.rst", "about/site/work-in-progress/blink/glt2023/pycon-2023.rst", "about/site/work-in-progress/blink/glt2023/screenplay.rst", "about/site/work-in-progress/blink/glt2023/submission.rst", "about/site/work-in-progress/blink/glt2024/index.rst", "about/site/work-in-progress/blink/glt2024/submission.rst", "about/site/work-in-progress/blink/glt2024/talk-sketch.rst", "about/site/work-in-progress/blink/index.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_build.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_iface.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_oo_basics.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_unittest.rst", "about/site/work-in-progress/fh-joanneum/2019/ec.rst", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-1.rst", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-2.rst", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race.rst", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race_fixed.rst", "about/site/work-in-progress/fh-joanneum/2019/git.rst", "about/site/work-in-progress/fh-joanneum/2019/index.rst", "about/site/work-in-progress/fh-joanneum/2019/linux.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_basics.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_dev_mgmt.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor_parallel.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_led_display.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_sensors.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_gpio.rst", "about/site/work-in-progress/fh-joanneum/2019/mt.rst", "about/site/work-in-progress/fh-joanneum/2019/mt_lock.rst", "about/site/work-in-progress/fh-joanneum/2019/mt_wait.rst", "about/site/work-in-progress/fh-joanneum/2019/py_basics.rst", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_avg_display.rst", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_sensors.rst", "about/site/work-in-progress/fh-joanneum/2019/py_web.rst", "about/site/work-in-progress/fh-joanneum/2019/py_web_sensors.rst", "about/site/work-in-progress/fh-joanneum/2019/python.rst", "about/site/work-in-progress/fh-joanneum/2020/index.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-08.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10-homework.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-21.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-22,24.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-28.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-04-01.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/index.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-code-general.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-yesno.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022/lab-exam-2023-01-17.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30-solved.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/exam-2024-01-26.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/exam-2024-02-02.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/exam-2024-02-02-sample.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/index.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/index.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-const.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-param-passing.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-solid--hysteresis-with-display.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-solid--sensor-with-id.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2024/questions/q-virtual-method.rst", "about/site/work-in-progress/fh-joanneum/2021/git/git.rst", "about/site/work-in-progress/fh-joanneum/2021/index.rst", "about/site/work-in-progress/fh-joanneum/2021/ss2023.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-basic-integration.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-display.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-full-integration.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-csv-sink.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-integration.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-mqtt-sink.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/display-infrastructure.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/group.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/libgpiod-switch.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/mqtt-tkinter.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/pwm-display.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/sensor-interface.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/sensor-w1.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/switch-interface.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/sysfs-gpio-switch.rst", "about/site/work-in-progress/fh-joanneum/2021/ws2023-2024.rst", "about/site/work-in-progress/fh-joanneum/2022/index.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/gluehwein.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/index.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/material.rst", "about/site/work-in-progress/fh-joanneum/2022/ss2024/syllabus.rst", "about/site/work-in-progress/fh-joanneum/index.rst", "about/site/work-in-progress/git.rst", "about/site/work-in-progress/index.rst", "about/site/work-in-progress/packaging/index.rst", "about/site/work-in-progress/playground/gaphor/index.rst", "about/site/work-in-progress/playground/hochkoenig/index.rst", "about/site/work-in-progress/playground/index.rst", "about/site/work-in-progress/playground/sphinx.rst", "about/site/work-in-progress/project-xxx/audio-chip.rst", "about/site/work-in-progress/project-xxx/debian-config.rst", "about/site/work-in-progress/project-xxx/debian-kernel-package.rst", "about/site/work-in-progress/project-xxx/hardware-bringup.rst", "about/site/work-in-progress/project-xxx/index.rst", "about/site/work-in-progress/project-xxx/kernel-upgrade-dirty.rst", "about/site/work-in-progress/project-xxx/wait-hardware.rst", "about/site/work-in-progress/project-xxx/yocto-kernel.rst", "about/site/work-in-progress/python-training.rst", "about/site/work-in-progress/screencast.rst", "about/site/work-in-progress/seo.rst", "about/site/work-in-progress/stacks.rst", "about/site/work-in-progress/todo-misc.rst", "about/site/work-in-progress/web.rst", "blog/2010/07/beagleboard-how-to-repair-nand-also-known-as-40w.rst", "blog/2011/01/porting-to-linux-there-s-always-a-better-way.rst", "blog/2011/01/saving-solid-state-disk-life--gentoo.rst", "blog/2012/04/Why-ps-sucks.rst", "blog/2020/02/fedora-kernel-build.rst", "blog/2020/03/custom-domain-gh-pages.rst", "blog/2020/03/ms-teams-on-linux.rst", "blog/2020/03/sphinx-gh-pages.rst", "blog/2020/04/bbb.rst", "blog/2020/09/traunstein.rst", "blog/2021/08/grintovec.rst", "blog/2021/09/xps13-shim-mok-brick/index.rst", "blog/2022/09/cross-raspi.rst", "blog/index.rst", "index.rst", "trainings/codex.rst", "trainings/exercises.rst", "trainings/index.rst", "trainings/log/detail/2013-10-01/index.rst", "trainings/log/detail/2015-11-30/index.rst", "trainings/log/detail/2019-10-28/LiveHacking.ipynb", "trainings/log/detail/2019-10-28/index.rst", "trainings/log/detail/2019-11-12/code/BigPlan.ipynb", "trainings/log/detail/2019-11-12/code/LiveHacking.ipynb", "trainings/log/detail/2019-11-12/index.rst", "trainings/log/detail/2020-01-10/Proposal.rst", "trainings/log/detail/2020-01-10/index.rst", "trainings/log/detail/2020-03-30/code/exercise-string/index.rst", "trainings/log/detail/2020-03-30/index.rst", "trainings/log/detail/2020-03-30/install-googletest.rst", "trainings/log/detail/2020-03-30/setup.rst", "trainings/log/detail/2020-03-30/vs-code.rst", "trainings/log/detail/2020-05-12/code/index.rst", "trainings/log/detail/2020-05-12/index.rst", "trainings/log/detail/2020-05-18/Livehacking.ipynb", "trainings/log/detail/2020-05-18/code/index.rst", "trainings/log/detail/2020-05-18/index.rst", "trainings/log/detail/2020-09-07/index.rst", "trainings/log/detail/2020-09-28/index.rst", "trainings/log/detail/2020-10-19/Notebook.ipynb", "trainings/log/detail/2020-10-19/index.rst", "trainings/log/detail/2020-11-03/index.rst", "trainings/log/detail/2020-11-23/index.rst", "trainings/log/detail/2020-11-30/index.rst", "trainings/log/detail/2021-01-13/Notebook.ipynb", "trainings/log/detail/2021-01-13/index.rst", "trainings/log/detail/2021-01-13/notebook-wrapper.rst", "trainings/log/detail/2021-02-22/index.rst", "trainings/log/detail/2021-03-08/index.rst", "trainings/log/detail/2021-03-15/Notebook.ipynb", "trainings/log/detail/2021-03-15/index.rst", "trainings/log/detail/2021-03-22/Notebook.ipynb", "trainings/log/detail/2021-03-22/index.rst", "trainings/log/detail/2021-03-29/index.rst", "trainings/log/detail/2021-04-12/Notebook.ipynb", "trainings/log/detail/2021-04-12/index.rst", "trainings/log/detail/2021-04-12/notebook-wrapper.rst", "trainings/log/detail/2021-05-03/Notebook.ipynb", "trainings/log/detail/2021-05-03/index.rst", "trainings/log/detail/2021-05-03/notebook-wrapper.rst", "trainings/log/detail/2021-05-25/Notebook.ipynb", "trainings/log/detail/2021-05-25/index.rst", "trainings/log/detail/2021-06-14/index.rst", "trainings/log/detail/2021-07-12/index.rst", "trainings/log/detail/2021-08-02/index.rst", "trainings/log/detail/2021-08-02/notebook.ipynb", "trainings/log/detail/2021-08-23/Notebook.ipynb", "trainings/log/detail/2021-08-23/exercises/sap-cleaned.rst", "trainings/log/detail/2021-08-23/index.rst", "trainings/log/detail/2021-08-23/notebook-wrapper.rst", "trainings/log/detail/2021-08-31/Notebook.ipynb", "trainings/log/detail/2021-08-31/index.rst", "trainings/log/detail/2021-08-31/notebook-wrapper.rst", "trainings/log/detail/2021-11-17/Notebook.ipynb", "trainings/log/detail/2021-11-17/index.rst", "trainings/log/detail/2021-11-17/notebook-wrapper.rst", "trainings/log/detail/2021-12-01/2021-12-01.ipynb", "trainings/log/detail/2021-12-01/index.rst", "trainings/log/detail/2021-12-01/notebook-wrapper.rst", "trainings/log/detail/2021-12-06/index.rst", "trainings/log/detail/2022-01-17/index.rst", "trainings/log/detail/2022-01-17/notebook.ipynb", "trainings/log/detail/2022-01-17/notebook-wrapper.rst", "trainings/log/detail/2022-02-23/Notebook.ipynb", "trainings/log/detail/2022-02-23/index.rst", "trainings/log/detail/2022-02-23/notebook-wrapper.rst", "trainings/log/detail/2022-03-15/Notebook.ipynb", "trainings/log/detail/2022-03-15/index.rst", "trainings/log/detail/2022-03-15/notebook-wrapper.rst", "trainings/log/detail/2022-03-23/Notebook.ipynb", "trainings/log/detail/2022-03-23/index.rst", "trainings/log/detail/2022-03-23/notebook-wrapper.rst", "trainings/log/detail/2022-04-05/index.rst", "trainings/log/detail/2022-04-05/notebook.ipynb", "trainings/log/detail/2022-04-05/notebook-wrapper.rst", "trainings/log/detail/2022-04-25/index.rst", "trainings/log/detail/2022-04-25/notebook.ipynb", "trainings/log/detail/2022-04-25/notebook-wrapper.rst", "trainings/log/detail/2022-05-02/index.rst", "trainings/log/detail/2022-05-02/notebook.ipynb", "trainings/log/detail/2022-05-02/notebook-wrapper.rst", "trainings/log/detail/2022-05-16/index.rst", "trainings/log/detail/2022-05-16/notebook.ipynb", "trainings/log/detail/2022-05-16/notebook-wrapper.rst", "trainings/log/detail/2022-06-14/2022-05-11.rst", "trainings/log/detail/2022-06-14/index.rst", "trainings/log/detail/2022-07-26/index.rst", "trainings/log/detail/2022-10-03/index.rst", "trainings/log/detail/2022-10-11/index.rst", "trainings/log/detail/2022-10-24/index.rst", "trainings/log/detail/2022-11-07/index.rst", "trainings/log/detail/2022-11-07/notebook.ipynb", "trainings/log/detail/2022-11-07/notebook-wrapper.rst", "trainings/log/detail/2022-11-16/index.rst", "trainings/log/detail/2022-11-16/notebook.ipynb", "trainings/log/detail/2022-11-16/notebook-wrapper.rst", "trainings/log/detail/2023-01-23/index.rst", "trainings/log/detail/2023-02-13/index.rst", "trainings/log/detail/2023-03-13-Python-SAP/Demo/demo-notebook.ipynb", "trainings/log/detail/2023-03-13-Python-SAP/demo.rst", "trainings/log/detail/2023-03-13-Python-SAP/index.rst", "trainings/log/detail/2023-03-13-Python-SAP/notebook.ipynb", "trainings/log/detail/2023-03-13-Python-SAP/notebook-wrapper.rst", "trainings/log/detail/2023-03-13-Python-SAP/original-agenda.rst", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/index.rst", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/sap-dataset.ipynb", "trainings/log/detail/2023-03-20--C++-embedded/index.rst", "trainings/log/detail/2023-03-28--Python-Clean-Code/index.rst", "trainings/log/detail/2023-04-18--C++-embedded/index.rst", "trainings/log/detail/2023-04-24--Python-Advanced/agenda.rst", "trainings/log/detail/2023-04-24--Python-Advanced/index.rst", "trainings/log/detail/2023-04-24--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-04-24--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-05-15--Python-Basics/agenda.rst", "trainings/log/detail/2023-05-15--Python-Basics/index.rst", "trainings/log/detail/2023-05-15--Python-Basics/notebook.ipynb", "trainings/log/detail/2023-05-15--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/2023-05-23--Linux-Basics/agenda.rst", "trainings/log/detail/2023-05-23--Linux-Basics/index.rst", "trainings/log/detail/2023-06-20--Python-Basics/agenda.rst", "trainings/log/detail/2023-06-20--Python-Basics/index.rst", "trainings/log/detail/2023-06-20--Python-Basics/notebook.ipynb", "trainings/log/detail/2023-06-20--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/2023-07-03--CMake/agenda.rst", "trainings/log/detail/2023-07-03--CMake/index.rst", "trainings/log/detail/2023-09-25--Python-Advanced/index.rst", "trainings/log/detail/2023-09-25--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-09-25--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-10-09--Python-Advanced/index.rst", "trainings/log/detail/2023-10-09--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-10-09--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-10-24--Python-Advanced/agenda.rst", "trainings/log/detail/2023-10-24--Python-Advanced/index.rst", "trainings/log/detail/2023-10-24--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-10-24--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-11-22--Python-Advanced/agenda.rst", "trainings/log/detail/2023-11-22--Python-Advanced/index.rst", "trainings/log/detail/2023-11-22--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-11-22--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-11-27--CMake/agenda.rst", "trainings/log/detail/2023-11-27--CMake/index.rst", "trainings/log/detail/2023-11-29--Python-Basics/agenda.rst", "trainings/log/detail/2023-11-29--Python-Basics/index.rst", "trainings/log/detail/2023-11-29--Python-Basics/notebook.ipynb", "trainings/log/detail/2023-11-29--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/2023-12-04--C++-Advanced/agenda.rst", "trainings/log/detail/2023-12-04--C++-Advanced/index.rst", "trainings/log/detail/2023-12-18--Python-Basics/agenda.rst", "trainings/log/detail/2023-12-18--Python-Basics/index.rst", "trainings/log/detail/2023-12-18--Python-Basics/notebook.ipynb", "trainings/log/detail/2023-12-18--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/2023-XX-XX-C++-embedded/index.rst", "trainings/log/detail/2023-XX-XX-Python-SAP/index.rst", "trainings/log/detail/2024-01-15--Python-Advanced/agenda.rst", "trainings/log/detail/2024-01-15--Python-Advanced/index.rst", "trainings/log/detail/2024-01-15--Python-Advanced/notebook.ipynb", "trainings/log/detail/2024-01-15--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2024-01-29--Python-Basics/agenda.rst", "trainings/log/detail/2024-01-29--Python-Basics/index.rst", "trainings/log/detail/2024-01-29--Python-Basics/notebook.ipynb", "trainings/log/detail/2024-01-29--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/2024-03-11--Linux-Basics/agenda.rst", "trainings/log/detail/2024-03-11--Linux-Basics/index.rst", "trainings/log/detail/FH-ECE-19/EC1/2021-05-12/screenplay-checker.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-abc.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-oo.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-unittest.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/fh-group.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/file-read.rst", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-20-G2.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-21.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Checker-Explanations.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Datatypes.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Functions.ipynb", "trainings/log/detail/FH-ECE-19/EC1/cloud-computer.rst", "trainings/log/detail/FH-ECE-19/EC1/formales.rst", "trainings/log/detail/FH-ECE-19/EC1/index.rst", "trainings/log/detail/FH-ECE-19/EC1/log.rst", "trainings/log/detail/FH-ECE-19/EC1/lv-de.rst", "trainings/log/detail/FH-ECE-19/EC1/lv-en.rst", "trainings/log/detail/FH-ECE-19/EC1/plan.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-07.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-12.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-28.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-15.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-29.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-12-14.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-10.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-12.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-02-15.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/index.rst", "trainings/log/detail/FH-ECE-19/EC2/index.rst", "trainings/log/detail/FH-ECE-19/EC2/test-material.rst", "trainings/log/detail/FH-ECE-19/index.rst", "trainings/log/detail/index.rst", "trainings/log/index.rst", "trainings/material/index.rst", "trainings/material/soup/c/010-introduction/000-installation/topic.rst", "trainings/material/soup/c/010-introduction/010-introduction/topic.rst", "trainings/material/soup/c/010-introduction/020-getting-started/topic.rst", "trainings/material/soup/c/010-introduction/030-variables-and-arithmetic-expressions/topic.rst", "trainings/material/soup/c/010-introduction/040-exercise-fahrenheit-float/topic.rst", "trainings/material/soup/c/010-introduction/050-the-for-statement/topic.rst", "trainings/material/soup/c/010-introduction/060-exercise-fahrenheit-for/topic.rst", "trainings/material/soup/c/010-introduction/070-symbolic-constants/topic.rst", "trainings/material/soup/c/010-introduction/080-exercise-fahrenheit-cpp/topic.rst", "trainings/material/soup/c/010-introduction/090-character-input-and-output/topic.rst", "trainings/material/soup/c/010-introduction/100-exercise-wc/topic.rst", "trainings/material/soup/c/010-introduction/110-arrays/topic.rst", "trainings/material/soup/c/010-introduction/120-exercise-histogram/topic.rst", "trainings/material/soup/c/010-introduction/130-functions/topic.rst", "trainings/material/soup/c/010-introduction/140-exercise-power-declaration/topic.rst", "trainings/material/soup/c/010-introduction/150-character-arrays/topic.rst", "trainings/material/soup/c/010-introduction/160-exercise-string-read-line/topic.rst", "trainings/material/soup/c/010-introduction/170-external-variables-and-scope/topic.rst", "trainings/material/soup/c/010-introduction/group.rst", "trainings/material/soup/c/020-types-operators-expressions/010-introduction/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/020-variable-names/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/030-data-types-and-sizes/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/040-constants/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/050-declarations/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/060-arithmetic-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/070-relational-and-logical-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/080-type-conversions/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/090-increment-and-decrement-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/100-exercise-string-reduce/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/110-bitwise-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/120-assignment-operators-and-expressions/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/130-conditional-expressions/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/140-precedence-and-order-of-evaluation/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/group.rst", "trainings/material/soup/c/030-program-flow/010-statements-and-blocks/topic.rst", "trainings/material/soup/c/030-program-flow/020-if-else/topic.rst", "trainings/material/soup/c/030-program-flow/030-else-if/topic.rst", "trainings/material/soup/c/030-program-flow/040-switch/topic.rst", "trainings/material/soup/c/030-program-flow/050-loops-while-and-for/topic.rst", "trainings/material/soup/c/030-program-flow/060-loops-do-while/topic.rst", "trainings/material/soup/c/030-program-flow/070-break-and-continue/topic.rst", "trainings/material/soup/c/030-program-flow/080-goto-and-labels/topic.rst", "trainings/material/soup/c/030-program-flow/group.rst", "trainings/material/soup/c/040-functions-and-program-structure/010-basics-of-functions/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/020-external-variables/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/030-header-files/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/040-static-variables/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/050-c-preprocessor/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/060-c-preprocessor-advanced/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/group.rst", "trainings/material/soup/c/050-pointers-and-arrays/010-pointers-and-addresses/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/020-pointers-and-function-arguments/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/030-exercise-swap/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/040-pointers-and-arrays/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/050-command-line-arguments/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/group.rst", "trainings/material/soup/c/060-structures/010-basics-of-structures/topic.rst", "trainings/material/soup/c/060-structures/020-structures-and-functions/topic.rst", "trainings/material/soup/c/060-structures/030-typedef/topic.rst", "trainings/material/soup/c/060-structures/group.rst", "trainings/material/soup/c/070-memory/010-malloc/topic.rst", "trainings/material/soup/c/070-memory/020-exercise-linked-list/topic.rst", "trainings/material/soup/c/070-memory/group.rst", "trainings/material/soup/c/080-advanced-language-features/010-volatile/topic.rst", "trainings/material/soup/c/080-advanced-language-features/020-atomic/topic.rst", "trainings/material/soup/c/080-advanced-language-features/030-alignment/topic.rst", "trainings/material/soup/c/080-advanced-language-features/group.rst", "trainings/material/soup/c/090-program-sanity/010-introduction/topic.rst", "trainings/material/soup/c/090-program-sanity/020-integral-types/topic.rst", "trainings/material/soup/c/090-program-sanity/030-discrete-values/topic.rst", "trainings/material/soup/c/090-program-sanity/040-static/topic.rst", "trainings/material/soup/c/090-program-sanity/050-const/topic.rst", "trainings/material/soup/c/090-program-sanity/060-struct-initialization/topic.rst", "trainings/material/soup/c/090-program-sanity/070-explicit-type-safety/topic.rst", "trainings/material/soup/c/090-program-sanity/080-valgrind/topic.rst", "trainings/material/soup/c/090-program-sanity/group.rst", "trainings/material/soup/c/100-performance/010-introduction/topic.rst", "trainings/material/soup/c/100-performance/020-computebound/topic.rst", "trainings/material/soup/c/100-performance/030-memory/topic.rst", "trainings/material/soup/c/100-performance/group.rst", "trainings/material/soup/c/110-profiling/010-introduction/topic.rst", "trainings/material/soup/c/110-profiling/020-gprof/topic.rst", "trainings/material/soup/c/110-profiling/030-callgrind/topic.rst", "trainings/material/soup/c/110-profiling/040-oprofile/topic.rst", "trainings/material/soup/c/110-profiling/group.rst", "trainings/material/soup/c/group.rst", "trainings/material/soup/clean-code/book-messages.rst", "trainings/material/soup/clean-code/craft-sw.rst", "trainings/material/soup/clean-code/group.rst", "trainings/material/soup/clean-code/intro-python/livehacking.rst", "trainings/material/soup/cmake/basics.rst", "trainings/material/soup/cmake/configure_file.rst", "trainings/material/soup/cmake/cxx-and-rants.rst", "trainings/material/soup/cmake/external-dependencies.rst", "trainings/material/soup/cmake/group.rst", "trainings/material/soup/cmake/installation.rst", "trainings/material/soup/cmake/libraries.rst", "trainings/material/soup/cmake/optional-code-approach-1.rst", "trainings/material/soup/cmake/optional-code-approach-2.rst", "trainings/material/soup/cmake/optional-code-problem.rst", "trainings/material/soup/cmake/shared-libraries.rst", "trainings/material/soup/cmake/structure.rst", "trainings/material/soup/cmake/targets-properties.rst", "trainings/material/soup/cmake/testing.rst", "trainings/material/soup/cxx-code/index.rst", "trainings/material/soup/cxx-design-patterns/abstract-factory/abstract-factory.rst", "trainings/material/soup/cxx-design-patterns/adapter/adapter.rst", "trainings/material/soup/cxx-design-patterns/command/command.rst", "trainings/material/soup/cxx-design-patterns/command/socialdb.rst", "trainings/material/soup/cxx-design-patterns/composite/composite.rst", "trainings/material/soup/cxx-design-patterns/decorator/decorator.rst", "trainings/material/soup/cxx-design-patterns/group.rst", "trainings/material/soup/cxx-design-patterns/heating-screenplay/heating-screenplay.rst", "trainings/material/soup/cxx-design-patterns/interpreter/interpreter.rst", "trainings/material/soup/cxx-design-patterns/observer/observer.rst", "trainings/material/soup/cxx-design-patterns/oo-principles.rst", "trainings/material/soup/cxx-design-patterns/proxy/proxy.rst", "trainings/material/soup/cxx-design-patterns/sensor-hierarchy.rst", "trainings/material/soup/cxx-design-patterns/singleton/singleton.rst", "trainings/material/soup/cxx-design-patterns/uml/uml.rst", "trainings/material/soup/cxx-exercises/design-patterns/abstract-factory.rst", "trainings/material/soup/cxx-exercises/design-patterns/adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/command.rst", "trainings/material/soup/cxx-exercises/design-patterns/composite.rst", "trainings/material/soup/cxx-exercises/design-patterns/decorator.rst", "trainings/material/soup/cxx-exercises/design-patterns/group.rst", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-and-adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-basic.rst", "trainings/material/soup/cxx-exercises/design-patterns/observer.rst", "trainings/material/soup/cxx-exercises/design-patterns/proxy-remote.rst", "trainings/material/soup/cxx-exercises/design-patterns/proxy-round.rst", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible.rst", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible-strict.rst", "trainings/material/soup/cxx-exercises/design-patterns/singleton-inflexible.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/abstract-factory.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/command.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/composite.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/decorator.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/group.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-and-adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-basic.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/observer.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-remote.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-round.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible-strict.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-inflexible.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-loop-function.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-no-polymorphism.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-random-sensor.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/group.rst", "trainings/material/soup/cxx-exercises/group.rst", "trainings/material/soup/cxx-exercises/nopoly-display-led-stripe/display-led-stripe-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-hysteresis/hysteresis-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensor-avg/sensor-avg-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-const-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-mock-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-random-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-switch-mock/switch-mock-nopoly.rst", "trainings/material/soup/cxx-exercises/oo-shapes/shapes.rst", "trainings/material/soup/cxx-exercises/project-setup.rst", "trainings/material/soup/cxx-exercises/sensor-interface/sensor-interface.rst", "trainings/material/soup/cxx-exercises/sensor-w1-factory/sensor-w1-factory.rst", "trainings/material/soup/cxx-exercises/sensor-w1/sensor-w1.rst", "trainings/material/soup/cxx-exercises/stl/algo.rst", "trainings/material/soup/cxx-exercises/stl/filter-generic.rst", "trainings/material/soup/cxx-exercises/stl/filter-greater-10.rst", "trainings/material/soup/cxx-exercises/stl/filter-odd.rst", "trainings/material/soup/cxx-exercises/stl/group.rst", "trainings/material/soup/cxx-exercises/stl/map.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/group.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-no-overwrite.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-sunny.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-not-found.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-sunny.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/no-memleak.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-not-found.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-sunny.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/size-const.rst", "trainings/material/soup/cxx-exercises/stl/uniq.rst", "trainings/material/soup/cxx-exercises/stl/vector.rst", "trainings/material/soup/cxx-todo/index.rst", "trainings/material/soup/cxx/cxx_class_templates/code/index.rst", "trainings/material/soup/cxx/cxx_class_templates/screenplay.rst", "trainings/material/soup/cxx/cxx_class_templates/topic.rst", "trainings/material/soup/cxx/cxx_dynamic_memory/code/index.rst", "trainings/material/soup/cxx/cxx_dynamic_memory/screenplay.rst", "trainings/material/soup/cxx/cxx_dynamic_memory/topic.rst", "trainings/material/soup/cxx/cxx_global_initialization/code/index.rst", "trainings/material/soup/cxx/cxx_global_initialization/screenplay.rst", "trainings/material/soup/cxx/cxx_global_initialization/topic.rst", "trainings/material/soup/cxx/cxx_inheritance_virtual/code/index.rst", "trainings/material/soup/cxx/cxx_inheritance_virtual/screenplay.rst", "trainings/material/soup/cxx/cxx_inheritance_virtual/topic.rst", "trainings/material/soup/cxx/cxx_ownership_raii/code/index.rst", "trainings/material/soup/cxx/cxx_ownership_raii/screenplay.rst", "trainings/material/soup/cxx/cxx_ownership_raii/topic.rst", "trainings/material/soup/cxx/cxx_stl_container_intro/code/index.rst", "trainings/material/soup/cxx/cxx_stl_container_intro/screenplay.rst", "trainings/material/soup/cxx/cxx_stl_container_intro/topic.rst", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/code/index.rst", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/screenplay.rst", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/topic.rst", "trainings/material/soup/cxx/group.rst", "trainings/material/soup/cxx03/001-introduction/topic.rst", "trainings/material/soup/cxx03/020-data-encapsulation/c.rst", "trainings/material/soup/cxx03/020-data-encapsulation/copy-basics.rst", "trainings/material/soup/cxx03/020-data-encapsulation/cpp-introduction.rst", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-custom.rst", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-default.rst", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-dtor.rst", "trainings/material/soup/cxx03/020-data-encapsulation/group.rst", "trainings/material/soup/cxx03/020-data-encapsulation/initializer-list.rst", "trainings/material/soup/cxx03/020-data-encapsulation/object-copy.rst", "trainings/material/soup/cxx03/030-functions-and-methods/010-overloading/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/020-methods/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/030-const/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/040-this/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/050-references/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/060-static/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/065-static-member-variables/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/070-operators/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-cuboid.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point3d.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-rectangle.rst", "trainings/material/soup/cxx03/030-functions-and-methods/group.rst", "trainings/material/soup/cxx03/040-exceptions/010-basics/topic.rst", "trainings/material/soup/cxx03/040-exceptions/020-try-catch/topic.rst", "trainings/material/soup/cxx03/040-exceptions/group.rst", "trainings/material/soup/cxx03/050-templates/010-function-templates/topic.rst", "trainings/material/soup/cxx03/050-templates/020-class-templates/topic.rst", "trainings/material/soup/cxx03/050-templates/group.rst", "trainings/material/soup/cxx03/060-stl/010-basics/algo-copy.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-algo.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-basics.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-difference.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-out-of-range.rst", "trainings/material/soup/cxx03/060-stl/010-basics/topic.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/topic.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-and-copy.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-basic.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-pointer-arith.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/binary_search.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/copy.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/find.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/find_if.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/for_each.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/group.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/lower_bound.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse_copy.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/sort.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/basics.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/group.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/list.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/vector.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/basics.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/group.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-init-fill.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-insert.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-remove.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-search.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/multimap.rst", "trainings/material/soup/cxx03/060-stl/allocators/allocator_basics.rst", "trainings/material/soup/cxx03/060-stl/allocators/group.rst", "trainings/material/soup/cxx03/060-stl/exercises/group.rst", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/exercise.rst", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/group.rst", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/solution.rst", "trainings/material/soup/cxx03/060-stl/group.rst", "trainings/material/soup/cxx03/070-dynamic-memory/000-todo/topic.rst", "trainings/material/soup/cxx03/070-dynamic-memory/group.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/basics.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/destructor.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/group.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/interface.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/polymorphism.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/private-protected.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-destructor.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-method.rst", "trainings/material/soup/cxx03/900-standard-library-miscellanea/group.rst", "trainings/material/soup/cxx03/900-standard-library-miscellanea/string/topic.rst", "trainings/material/soup/cxx03/exercises-misc/american-flag/exercise.rst", "trainings/material/soup/cxx03/exercises-misc/fh-questions.rst", "trainings/material/soup/cxx03/exercises-misc/group.rst", "trainings/material/soup/cxx03/exercises-misc/sum-integers-from-stdin/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/group.rst", "trainings/material/soup/cxx03/exercises-userdb/user-access-methods/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-const-members/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-const/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-default-ctor/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-simple-method/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-to-cxx-ctor/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-insert/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-find_if/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-notfound-exception/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-search/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-vector/exercise.rst", "trainings/material/soup/cxx03/group.rst", "trainings/material/soup/cxx11/010-introduction/group.rst", "trainings/material/soup/cxx11/010-introduction/history.rst", "trainings/material/soup/cxx11/010-introduction/overview-livehacking.rst", "trainings/material/soup/cxx11/020-new-language-features/010-strongly-typed-enums/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/group.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/implementor-view.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/mess.rst", "trainings/material/soup/cxx11/020-new-language-features/050-delegating-ctor/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/055-constexpr/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/afterword.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/group.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-smartptr-move.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-string-move.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-using-string-move.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/overview.rst", "trainings/material/soup/cxx11/020-new-language-features/070-miscellaneous/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/auto.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/group.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-1-conceptless.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-2-conceptless-error.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-3-concept-integral.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/links.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-1-good-old-func.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-2-need-template.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-4-concept-has-size.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-5-concept-index-ret-double.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/group.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibo-generator.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibonacci.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-h.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-hello.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/simplest.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-iter.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-next.rst", "trainings/material/soup/cxx11/020-new-language-features/default.rst", "trainings/material/soup/cxx11/020-new-language-features/delete.rst", "trainings/material/soup/cxx11/020-new-language-features/final.rst", "trainings/material/soup/cxx11/020-new-language-features/group.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/group.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-capture.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor-pitfall.rst", "trainings/material/soup/cxx11/020-new-language-features/modules.rst", "trainings/material/soup/cxx11/020-new-language-features/override.rst", "trainings/material/soup/cxx11/020-new-language-features/range-based-for.rst", "trainings/material/soup/cxx11/020-new-language-features/range-based-for-map.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/good-bad.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/group.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/links.rst", "trainings/material/soup/cxx11/020-new-language-features/structured-binding.rst", "trainings/material/soup/cxx11/030-smart-pointers/040-closing-words/topic.rst", "trainings/material/soup/cxx11/030-smart-pointers/group.rst", "trainings/material/soup/cxx11/030-smart-pointers/introduction.rst", "trainings/material/soup/cxx11/030-smart-pointers/introduction-livehack.rst", "trainings/material/soup/cxx11/030-smart-pointers/sharedptr.rst", "trainings/material/soup/cxx11/030-smart-pointers/uniqueptr.rst", "trainings/material/soup/cxx11/030-smart-pointers/weakptr.rst", "trainings/material/soup/cxx11/035-perfect-forwarding/topic.rst", "trainings/material/soup/cxx11/040-bind-function/010-bind/topic.rst", "trainings/material/soup/cxx11/040-bind-function/020-function/topic.rst", "trainings/material/soup/cxx11/040-bind-function/group.rst", "trainings/material/soup/cxx11/050-multithreading/010-introduction/topic.rst", "trainings/material/soup/cxx11/050-multithreading/020-thread/topic.rst", "trainings/material/soup/cxx11/050-multithreading/030-race-conditions/topic.rst", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/atomics.rst", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/mutex.rst", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/scoped-locking.rst", "trainings/material/soup/cxx11/050-multithreading/condition-variable.rst", "trainings/material/soup/cxx11/050-multithreading/group.rst", "trainings/material/soup/cxx11/050-multithreading/promise-future.rst", "trainings/material/soup/cxx11/100-miscellaneous/010-chrono/topic.rst", "trainings/material/soup/cxx11/100-miscellaneous/any-variant-optional/variant.rst", "trainings/material/soup/cxx11/100-miscellaneous/group.rst", "trainings/material/soup/cxx11/drafts/crtp.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/allocator.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/classic-virtual.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/group.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/related-no-virtual.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/type-erasure.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/unrelated.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-automatic-visit.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-manual-if.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-manual-visit.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/why-replace-virtual.rst", "trainings/material/soup/cxx11/drafts/group.rst", "trainings/material/soup/cxx11/exercises/bag-copy.rst", "trainings/material/soup/cxx11/exercises/bag-shared.rst", "trainings/material/soup/cxx11/exercises/bag-unique.rst", "trainings/material/soup/cxx11/exercises/group.rst", "trainings/material/soup/cxx11/filesystem/topic.rst", "trainings/material/soup/cxx11/group.rst", "trainings/material/soup/graph.rst", "trainings/material/soup/index.rst", "trainings/material/soup/kernel/cdev-auto/screenplay.rst", "trainings/material/soup/kernel/cdev-auto/slides.rst", "trainings/material/soup/kernel/cdev-auto/topic.rst", "trainings/material/soup/kernel/cdev-file-operations/screenplay.rst", "trainings/material/soup/kernel/cdev-file-operations/slides.rst", "trainings/material/soup/kernel/cdev-file-operations/topic.rst", "trainings/material/soup/kernel/cdev-first-functionality/slides.rst", "trainings/material/soup/kernel/cdev-first-functionality/topic.rst", "trainings/material/soup/kernel/cdev-manual/screenplay.rst", "trainings/material/soup/kernel/cdev-manual/slides.rst", "trainings/material/soup/kernel/cdev-manual/topic.rst", "trainings/material/soup/kernel/cdev-multiple-devices/slides.rst", "trainings/material/soup/kernel/cdev-multiple-devices/topic.rst", "trainings/material/soup/kernel/cdev-refactoring/screenplay.rst", "trainings/material/soup/kernel/cdev-refactoring/slides.rst", "trainings/material/soup/kernel/cdev-refactoring/topic.rst", "trainings/material/soup/kernel/dma/slides.rst", "trainings/material/soup/kernel/dma/topic.rst", "trainings/material/soup/kernel/fedora-kernel-build/screenplay.rst", "trainings/material/soup/kernel/fedora-kernel-build/topic.rst", "trainings/material/soup/kernel/fedora-module-build/screenplay.rst", "trainings/material/soup/kernel/fedora-module-build/topic.rst", "trainings/material/soup/kernel/group.rst", "trainings/material/soup/kernel/hello-world/slides.rst", "trainings/material/soup/kernel/hello-world/topic.rst", "trainings/material/soup/kernel/interrupt-coding/slides.rst", "trainings/material/soup/kernel/interrupt-coding/topic.rst", "trainings/material/soup/kernel/interrupt/slides.rst", "trainings/material/soup/kernel/interrupt/topic.rst", "trainings/material/soup/kernel/iomemory/slides.rst", "trainings/material/soup/kernel/iomemory/topic.rst", "trainings/material/soup/kernel/kmalloc/slides.rst", "trainings/material/soup/kernel/kmalloc/topic.rst", "trainings/material/soup/kernel/list/slides.rst", "trainings/material/soup/kernel/list/topic.rst", "trainings/material/soup/kernel/mutex-coding/slides.rst", "trainings/material/soup/kernel/mutex-coding/topic.rst", "trainings/material/soup/kernel/mutex/slides.rst", "trainings/material/soup/kernel/mutex/topic.rst", "trainings/material/soup/kernel/netdev/slides.rst", "trainings/material/soup/kernel/netdev/topic.rst", "trainings/material/soup/kernel/pci/slides.rst", "trainings/material/soup/kernel/pci/topic.rst", "trainings/material/soup/kernel/process-vs-atomic/slides.rst", "trainings/material/soup/kernel/process-vs-atomic/topic.rst", "trainings/material/soup/kernel/raspi-kernel-build/story.rst", "trainings/material/soup/kernel/raspi-kernel-build/topic.rst", "trainings/material/soup/kernel/sample-project.rst", "trainings/material/soup/kernel/spinlock-coding/slides.rst", "trainings/material/soup/kernel/spinlock-coding/topic.rst", "trainings/material/soup/kernel/spinlock/slides.rst", "trainings/material/soup/kernel/spinlock/topic.rst", "trainings/material/soup/kernel/stub-sysprog-dup/topic.rst", "trainings/material/soup/kernel/time_timer-coding/slides.rst", "trainings/material/soup/kernel/time_timer-coding/topic.rst", "trainings/material/soup/kernel/time_timer/slides.rst", "trainings/material/soup/kernel/time_timer/topic.rst", "trainings/material/soup/kernel/todo.rst", "trainings/material/soup/kernel/usermem/screenplay.rst", "trainings/material/soup/kernel/usermem/slides.rst", "trainings/material/soup/kernel/usermem/topic.rst", "trainings/material/soup/kernel/waitqueue/screenplay.rst", "trainings/material/soup/kernel/waitqueue/slides.rst", "trainings/material/soup/kernel/waitqueue/topic.rst", "trainings/material/soup/kernel/workqueue/screenplay.rst", "trainings/material/soup/kernel/workqueue/slides.rst", "trainings/material/soup/kernel/workqueue/topic.rst", "trainings/material/soup/linux/basics/archiving-compression/exercises.rst", "trainings/material/soup/linux/basics/archiving-compression/group.rst", "trainings/material/soup/linux/basics/archiving-compression/gzip.rst", "trainings/material/soup/linux/basics/archiving-compression/overview.rst", "trainings/material/soup/linux/basics/archiving-compression/tar.rst", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G1.rst", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G2.rst", "trainings/material/soup/linux/basics/exercises/group.rst", "trainings/material/soup/linux/basics/group.rst", "trainings/material/soup/linux/basics/intro/demo-everything-is-a-file.rst", "trainings/material/soup/linux/basics/intro/environment.rst", "trainings/material/soup/linux/basics/intro/exercises/fh-questions.rst", "trainings/material/soup/linux/basics/intro/group.rst", "trainings/material/soup/linux/basics/intro/login.rst", "trainings/material/soup/linux/basics/intro/overview.rst", "trainings/material/soup/linux/basics/intro/process.rst", "trainings/material/soup/linux/basics/intro/process-tree.rst", "trainings/material/soup/linux/basics/intro/wsl.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/exercises.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/group.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection-swap-stdout-stderr.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/pipes.rst", "trainings/material/soup/linux/basics/permissions/basics.rst", "trainings/material/soup/linux/basics/permissions/exercises/credentials.rst", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions.rst", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions-nocheat.rst", "trainings/material/soup/linux/basics/permissions/exercises/group.rst", "trainings/material/soup/linux/basics/permissions/exercises/private-directory.rst", "trainings/material/soup/linux/basics/permissions/exercises/private-directory-question.rst", "trainings/material/soup/linux/basics/permissions/exercises/public-directory.rst", "trainings/material/soup/linux/basics/permissions/exercises/public-directory-question.rst", "trainings/material/soup/linux/basics/permissions/exercises/shared-file.rst", "trainings/material/soup/linux/basics/permissions/group.rst", "trainings/material/soup/linux/basics/permissions/setuid.rst", "trainings/material/soup/linux/basics/permissions/setuid-livedemo.rst", "trainings/material/soup/linux/basics/permissions/sticky.rst", "trainings/material/soup/linux/basics/permissions/umask.rst", "trainings/material/soup/linux/basics/shell/commandline.rst", "trainings/material/soup/linux/basics/shell/configfiles.rst", "trainings/material/soup/linux/basics/shell/cp.rst", "trainings/material/soup/linux/basics/shell/cwd.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/copy-tree.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-copy-files.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-create-files.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-move-files.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/group.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/mkdir-p-rm-r.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-rf.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-tree.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/verify-hierarchy.rst", "trainings/material/soup/linux/basics/shell/exercises/fh-questions.rst", "trainings/material/soup/linux/basics/shell/exercises/group.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/dev-types.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/etc-passwd-size.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/group.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/home-permissions.rst", "trainings/material/soup/linux/basics/shell/file_dir_create_rm.rst", "trainings/material/soup/linux/basics/shell/group.rst", "trainings/material/soup/linux/basics/shell/links.rst", "trainings/material/soup/linux/basics/shell/ls.rst", "trainings/material/soup/linux/basics/shell/mv.rst", "trainings/material/soup/linux/basics/shell/paths.rst", "trainings/material/soup/linux/basics/text-tools/cat.rst", "trainings/material/soup/linux/basics/text-tools/cut.rst", "trainings/material/soup/linux/basics/text-tools/exercises.rst", "trainings/material/soup/linux/basics/text-tools/find.rst", "trainings/material/soup/linux/basics/text-tools/grep.rst", "trainings/material/soup/linux/basics/text-tools/group.rst", "trainings/material/soup/linux/basics/text-tools/head-tail.rst", "trainings/material/soup/linux/basics/text-tools/less.rst", "trainings/material/soup/linux/basics/text-tools/overview.rst", "trainings/material/soup/linux/drafts/group.rst", "trainings/material/soup/linux/drafts/yocto.rst", "trainings/material/soup/linux/group.rst", "trainings/material/soup/linux/hardware/brushless-motor/topic.rst", "trainings/material/soup/linux/hardware/can/10-intro.rst", "trainings/material/soup/linux/hardware/can/20-interfaces.rst", "trainings/material/soup/linux/hardware/can/30-programming.rst", "trainings/material/soup/linux/hardware/can/40-harware.rst", "trainings/material/soup/linux/hardware/can/group.rst", "trainings/material/soup/linux/hardware/group.rst", "trainings/material/soup/linux/hardware/i2c/topic.rst", "trainings/material/soup/linux/hardware/pwm/topic.rst", "trainings/material/soup/linux/hardware/w1/topic.rst", "trainings/material/soup/linux/ssh/basics.rst", "trainings/material/soup/linux/ssh/exercises/copy-file.rst", "trainings/material/soup/linux/ssh/exercises/copy-tree.rst", "trainings/material/soup/linux/ssh/exercises/group.rst", "trainings/material/soup/linux/ssh/exercises/pubkey.rst", "trainings/material/soup/linux/ssh/group.rst", "trainings/material/soup/linux/ssh/key-pair.rst", "trainings/material/soup/linux/ssh/links.rst", "trainings/material/soup/linux/ssh/portforwarding.rst", "trainings/material/soup/linux/ssh/scp.rst", "trainings/material/soup/linux/ssh/sshfs.rst", "trainings/material/soup/linux/sysprog/basics/errorhandling.rst", "trainings/material/soup/linux/sysprog/basics/group.rst", "trainings/material/soup/linux/sysprog/basics/syscalls.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-file.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-network.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-timer.rst", "trainings/material/soup/linux/sysprog/blocking-io/group.rst", "trainings/material/soup/linux/sysprog/file-io/basics.rst", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-copy.rst", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-hole.rst", "trainings/material/soup/linux/sysprog/file-io/duplicate.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_CREAT.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_EXCL.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_RDONLY.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_WRONLY.rst", "trainings/material/soup/linux/sysprog/file-io/exercise-sensor-read.rst", "trainings/material/soup/linux/sysprog/file-io/group.rst", "trainings/material/soup/linux/sysprog/file-io/misc.rst", "trainings/material/soup/linux/sysprog/group.rst", "trainings/material/soup/linux/sysprog/intro-hw/get.rst", "trainings/material/soup/linux/sysprog/intro-hw/group.rst", "trainings/material/soup/linux/sysprog/intro-hw/sysfs-gpio.rst", "trainings/material/soup/linux/sysprog/intro-hw/watch.rst", "trainings/material/soup/linux/sysprog/posix-threads/010-introduction/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/020-lifecycle/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/030-exercise-pthcreate-race-condition/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/040-mutex/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/050-exercise-mutex/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/060-condition-variable/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/070-exercise-condition-variable/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/080-miscellaneous/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/090-last-warning/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/group.rst", "trainings/material/soup/linux/sysprog/posix-threads/locked-trylock.rst", "trainings/material/soup/linux/sysprog/process/commandline.rst", "trainings/material/soup/linux/sysprog/process/group.rst", "trainings/material/soup/linux/sysprog/process/tree.rst", "trainings/material/soup/linux/sysprog/scheduling/basics.rst", "trainings/material/soup/linux/sysprog/scheduling/group.rst", "trainings/material/soup/linux/sysprog/scheduling/processes-and-threads.rst", "trainings/material/soup/linux/sysprog/scheduling/questions.rst", "trainings/material/soup/linux/sysprog/scheduling/realtime.rst", "trainings/material/soup/linux/sysprog/scheduling/realtime-api.rst", "trainings/material/soup/linux/sysprog/scheduling/wakup-latency.rst", "trainings/material/soup/linux/sysprog/sysprog_events/code/index.rst", "trainings/material/soup/linux/sysprog/sysprog_events/screenplay.rst", "trainings/material/soup/linux/sysprog/sysprog_events/topic.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/code/index.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/screenplay.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/slides.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/topic.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/code/index.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/screenplay.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/slides.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/topic.rst", "trainings/material/soup/linux/toolchain/basics/topic.rst", "trainings/material/soup/linux/toolchain/cmake/cross.rst", "trainings/material/soup/linux/toolchain/cmake/local.rst", "trainings/material/soup/linux/toolchain/cross/basics.rst", "trainings/material/soup/linux/toolchain/cross/group.rst", "trainings/material/soup/linux/toolchain/exercises/cross-build.rst", "trainings/material/soup/linux/toolchain/exercises/fh-2022-questions.rst", "trainings/material/soup/linux/toolchain/exercises/group.rst", "trainings/material/soup/linux/toolchain/exercises/native-build.rst", "trainings/material/soup/linux/toolchain/exercises/raspberry-toolchain.rst", "trainings/material/soup/linux/toolchain/group.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/group.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/linaro.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-details.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-docker-fedora.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-setup.rst", "trainings/material/soup/linux/toolchain/separate-compilation/topic.rst", "trainings/material/soup/linux/toolchain/shared-libraries/topic.rst", "trainings/material/soup/linux/toolchain/static-library/topic.rst", "trainings/material/soup/python/advanced/closures/topic.rst", "trainings/material/soup/python/advanced/comprehensions/topic.rst", "trainings/material/soup/python/advanced/context-mgr/topic.rst", "trainings/material/soup/python/advanced/decorators/topic.rst", "trainings/material/soup/python/advanced/exceptions/topic.rst", "trainings/material/soup/python/advanced/exec/topic.rst", "trainings/material/soup/python/advanced/group.rst", "trainings/material/soup/python/advanced/iteration-generation/iteration-generation/topic.rst", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/fibonacci-generator.rst", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/iterator-protocol.rst", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/topic.rst", "trainings/material/soup/python/advanced/iteration-generation/topic.rst", "trainings/material/soup/python/advanced/modules.rst", "trainings/material/soup/python/advanced/multithreading/basics.rst", "trainings/material/soup/python/advanced/multithreading/group.rst", "trainings/material/soup/python/advanced/multithreading/mutex.rst", "trainings/material/soup/python/advanced/multithreading/questions.rst", "trainings/material/soup/python/advanced/oo/abc/topic.rst", "trainings/material/soup/python/advanced/oo/classes-and-dicts/topic.rst", "trainings/material/soup/python/advanced/oo/constructor/topic.rst", "trainings/material/soup/python/advanced/oo/group.rst", "trainings/material/soup/python/advanced/oo/inheritance/topic.rst", "trainings/material/soup/python/advanced/oo/methods/topic.rst", "trainings/material/soup/python/advanced/oo/namedtuple/topic.rst", "trainings/material/soup/python/advanced/oo/operator-overloading/topic.rst", "trainings/material/soup/python/advanced/oo/properties/topic.rst", "trainings/material/soup/python/advanced/oo/str-repr/topic.rst", "trainings/material/soup/python/advanced/starargs/topic.rst", "trainings/material/soup/python/basics/group.rst", "trainings/material/soup/python/basics/installation.rst", "trainings/material/soup/python/basics/python_0110_blahblah/topic.rst", "trainings/material/soup/python/basics/python_0120_helloworld/topic.rst", "trainings/material/soup/python/basics/python_0125_running/topic.rst", "trainings/material/soup/python/basics/python_0130_syntax_etc/topic.rst", "trainings/material/soup/python/basics/python_0139_commandline_argv/topic.rst", "trainings/material/soup/python/basics/python_0140_variables/topic.rst", "trainings/material/soup/python/basics/python_0150_datatypes_overview/topic.rst", "trainings/material/soup/python/basics/python_0150_datatypes_overview_compound/topic.rst", "trainings/material/soup/python/basics/python_0160_boolean/topic.rst", "trainings/material/soup/python/basics/python_0170_if/topic.rst", "trainings/material/soup/python/basics/python_0193_while/topic.rst", "trainings/material/soup/python/basics/python_0200_sequential_types/topic.rst", "trainings/material/soup/python/basics/python_0210_indexing_slicing/topic.rst", "trainings/material/soup/python/basics/python_0220_for/topic.rst", "trainings/material/soup/python/basics/python_0225_range/topic.rst", "trainings/material/soup/python/basics/python_0250_refs_flat_deep_copy/topic.rst", "trainings/material/soup/python/basics/python_0270_functions/screenplay-scoping.rst", "trainings/material/soup/python/basics/python_0270_functions/slideshow.rst", "trainings/material/soup/python/basics/python_0270_functions/topic.rst", "trainings/material/soup/python/basics/python_0300_strings/topic.rst", "trainings/material/soup/python/basics/python_0310_strings_formatting/topic.rst", "trainings/material/soup/python/basics/python_0320_strings_methods/topic.rst", "trainings/material/soup/python/basics/python_0400_lists/topic.rst", "trainings/material/soup/python/basics/python_0450_dictionaries/topic.rst", "trainings/material/soup/python/basics/python_0460_sets/topic.rst", "trainings/material/soup/python/basics/python_0500_files/topic.rst", "trainings/material/soup/python/basics/python_1000_function_objects/topic.rst", "trainings/material/soup/python/drafts/argparse/topic.rst", "trainings/material/soup/python/drafts/asyncio/topic.rst", "trainings/material/soup/python/drafts/group.rst", "trainings/material/soup/python/drafts/matplotlib/topic.rst", "trainings/material/soup/python/drafts/setuptools/topic.rst", "trainings/material/soup/python/exercises/csv/csv-db.rst", "trainings/material/soup/python/exercises/csv/csv-module.rst", "trainings/material/soup/python/exercises/csv/group.rst", "trainings/material/soup/python/exercises/group.rst", "trainings/material/soup/python/exercises/herdt/boolean.rst", "trainings/material/soup/python/exercises/herdt/exercise_while_even_numbers.rst", "trainings/material/soup/python/exercises/herdt/greet.rst", "trainings/material/soup/python/exercises/herdt/group.rst", "trainings/material/soup/python/exercises/herdt/max_numbers.rst", "trainings/material/soup/python/exercises/herdt/swap.rst", "trainings/material/soup/python/exercises/herdt/username_password.rst", "trainings/material/soup/python/exercises/legacy/cmdline_digit.rst", "trainings/material/soup/python/exercises/legacy/dict_keyerror.rst", "trainings/material/soup/python/exercises/legacy/distill.rst", "trainings/material/soup/python/exercises/legacy/fibonacci-generator.rst", "trainings/material/soup/python/exercises/legacy/for_primeness.rst", "trainings/material/soup/python/exercises/legacy/group.rst", "trainings/material/soup/python/exercises/legacy/join_function.rst", "trainings/material/soup/python/exercises/legacy/max_numbers.rst", "trainings/material/soup/python/exercises/legacy/max_numbers_function.rst", "trainings/material/soup/python/exercises/legacy/mixed_list_executable.rst", "trainings/material/soup/python/exercises/legacy/mixed_list_interactive.rst", "trainings/material/soup/python/exercises/legacy/passwd.rst", "trainings/material/soup/python/exercises/legacy/primeness_function.rst", "trainings/material/soup/python/exercises/legacy/revert.rst", "trainings/material/soup/python/exercises/legacy/string-rightjustify.rst", "trainings/material/soup/python/exercises/legacy/uniq_function.rst", "trainings/material/soup/python/exercises/legacy/uniq_generator.rst", "trainings/material/soup/python/exercises/legacy/wc.rst", "trainings/material/soup/python/exercises/legacy/while_primeness.rst", "trainings/material/soup/python/exercises/sensors/group.rst", "trainings/material/soup/python/exercises/sensors/project-setup.rst", "trainings/material/soup/python/exercises/sensors/sensor-const.rst", "trainings/material/soup/python/exercises/userdb/csvdictreader.rst", "trainings/material/soup/python/exercises/userdb/csvdictreader-function.rst", "trainings/material/soup/python/exercises/userdb/csvreader.rst", "trainings/material/soup/python/exercises/userdb/csvreader-function.rst", "trainings/material/soup/python/exercises/userdb/group.rst", "trainings/material/soup/python/exercises/userdb/mqtt-publish-csv.rst", "trainings/material/soup/python/exercises/userdb/user-class-person.rst", "trainings/material/soup/python/exercises/userdb/user_json.rst", "trainings/material/soup/python/exercises/userdb/userdb_csv.rst", "trainings/material/soup/python/graph.rst", "trainings/material/soup/python/group.rst", "trainings/material/soup/python/link-collection.rst", "trainings/material/soup/python/misc/ai/group.rst", "trainings/material/soup/python/misc/ai/k-means.rst", "trainings/material/soup/python/misc/ai/linear-regression/code.rst", "trainings/material/soup/python/misc/ai/linear-regression/history_data.rst", "trainings/material/soup/python/misc/ai/linear-regression/linear_regression.ipynb", "trainings/material/soup/python/misc/ai/linear-regression/topic.rst", "trainings/material/soup/python/misc/ai/machine-learning-intro.rst", "trainings/material/soup/python/misc/csv/topic.rst", "trainings/material/soup/python/misc/db/dbapi2.rst", "trainings/material/soup/python/misc/db/group.rst", "trainings/material/soup/python/misc/db/postgres.rst", "trainings/material/soup/python/misc/db/sqlite3.rst", "trainings/material/soup/python/misc/encoding/topic.rst", "trainings/material/soup/python/misc/group.rst", "trainings/material/soup/python/misc/import.rst", "trainings/material/soup/python/misc/mqtt/topic.rst", "trainings/material/soup/python/misc/pandas/add_row.rst", "trainings/material/soup/python/misc/pandas/basics.rst", "trainings/material/soup/python/misc/pandas/filters.rst", "trainings/material/soup/python/misc/pandas/group.rst", "trainings/material/soup/python/misc/pandas/iloc.rst", "trainings/material/soup/python/misc/pandas/indexes.rst", "trainings/material/soup/python/misc/pandas/loc.rst", "trainings/material/soup/python/misc/pandas/mod_col.rst", "trainings/material/soup/python/misc/python_5550_xml_etree/topic.rst", "trainings/material/soup/python/misc/vscode.rst", "trainings/material/soup/python/swdev/group.rst", "trainings/material/soup/python/swdev/pip/screenplay.rst", "trainings/material/soup/python/swdev/pip/slides.rst", "trainings/material/soup/python/swdev/pip/topic.rst", "trainings/material/soup/python/swdev/pypi.rst", "trainings/material/soup/python/swdev/pytest/group.rst", "trainings/material/soup/python/swdev/pytest/intro.rst", "trainings/material/soup/python/swdev/unittest.rst", "trainings/material/soup/python/swdev/venv/screenplay.rst", "trainings/material/soup/python/swdev/venv/slides.rst", "trainings/material/soup/python/swdev/venv/topic.rst", "trainings/material/soup/unittest/group.rst", "trainings/material/soup/unittest/unittest_gtest_basics/code/index.rst", "trainings/material/soup/unittest/unittest_gtest_basics/screenplay.rst", "trainings/material/soup/unittest/unittest_gtest_basics/topic.rst", "trainings/material/soup/unittest/unittest_gtest_cmake/screenplay.rst", "trainings/material/soup/unittest/unittest_gtest_cmake/topic.rst", "trainings/material/soup/unittest/unittest_gtest_fixture/code/index.rst", "trainings/material/soup/unittest/unittest_gtest_fixture/screenplay.rst", "trainings/material/soup/unittest/unittest_gtest_fixture/topic.rst", "trainings/org.rst", "trainings/repertoire/_hidden/kettner-lfs-2013-09-16.rst", "trainings/repertoire/bash.rst", "trainings/repertoire/c-like/c.rst", "trainings/repertoire/c-like/c-advanced.rst", "trainings/repertoire/c-like/cxx.rst", "trainings/repertoire/c-like/cxx11.rst", "trainings/repertoire/c-like/index.rst", "trainings/repertoire/cmake.rst", "trainings/repertoire/design-patterns/design-patterns.rst", "trainings/repertoire/embedded.rst", "trainings/repertoire/kernel-programming-basics.rst", "trainings/repertoire/linux-basics.rst", "trainings/repertoire/make.rst", "trainings/repertoire/python/advanced.rst", "trainings/repertoire/python/basics.rst", "trainings/repertoire/python/herdt.rst", "trainings/repertoire/raspi-hands-on.rst", "trainings/repertoire/svn.rst", "trainings/repertoire/sysprog/basics.rst", "trainings/repertoire/sysprog/fortgeschrittenes.rst", "trainings/repertoire/sysprog/index.rst", "trainings/repertoire/sysprog/multithreading.rst", "trainings/repertoire/sysprog/network.rst", "trainings/repertoire/unittests.rst"], "titles": ["Kontakt", "Curriculum Vitae", "\u00dcber Mich", "Projekte", "Skills", "Angebot: In-House Schulungen", "Course Material", "Einleitung", "Python Basics (2021-xx-xx - 2021-yy-yy)", "Programmierung Grundlagen (Jupyter Notebook)", "Details", "Course List", "Templates for Course Descriptions", "About This Site", "OpenTraining", "Draft Topics", "Miscellaneous", "S5 Integration", "S5 Slide Tests", "Level 1 Heading", "Screencasts", "Topics to be Written", "Netidee F\u00f6rderantrag", "Netidee F\u00f6rderantrag: OpenTraining", "Video Screenplay", "Use Case: Custom Training, Subtract Known", "Use Case: Calculate Minimum Training Duration", "Use Cases", "Use Case: Use Training Material From Other Sites", "Use Case: Menu to Choose From", "Use Case: Slide Show Material as Plain-Text Files", "Sending A V4L Camera Device Output Over SSH", "Emoji Codes (<code class=\"docutils literal notranslate\"><span class=\"pre\">sphinxemoji</span></code>)", "Recipes", "<code class=\"docutils literal notranslate\"><span class=\"pre\">isoamsa.txt</span></code>: Added Mathematical Symbols: Arrows", "<code class=\"docutils literal notranslate\"><span class=\"pre\">isoamsr.txt</span></code>: Added Mathematical Symbols: Relations", "<code class=\"docutils literal notranslate\"><span class=\"pre\">isonum.txt</span></code>: Added Mathematical Symbols: Binary Operators", "Layout Test Page", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mmlalias.txt</span></code>: MathML aliases for entities from other sets", "reStructuredText Cheat Sheet", "Sphinxish", "Seminar on \u201cClean Code\u201d (2022-04-13)", "Live Hacking Before (Formal) Unit Testing", "Clean Code: Messages From The Book", "Live Hacking: Switch To <code class=\"docutils literal notranslate\"><span class=\"pre\">googletest</span></code>", "Is Software A Craft? Software Is A Craft!", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB::find()</span></code> Crashes If User Not Found", "Bugs", "Existing Files Are Overwritten", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB::read()</span></code>: What If Done Twice?", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB</span></code>: Alternative Output Format - CSV", "Features", "Search By Other Indexes", "Backlog: What Needs To Change, Or We Will All Die", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BackingStore</span></code> Has Too Many Responsibilities \u27f6 Interface", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB</span></code> Has Too Many Responsibilities \u27f6 <code class=\"docutils literal notranslate\"><span class=\"pre\">BackingStore</span></code>", "Refactoring", "Load From BackingStore in Constructor", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB::{read,write}()</span></code>: <code class=\"docutils literal notranslate\"><span class=\"pre\">bool</span></code>, Really?", "Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "Installation Notes", "Submission: Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "Screenplay: Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "GLT 2023 Submission: Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "Pointless Blinking: Evolution", "GLT 2024 Submission: Pointless Blinking: Evolution", "Talk Sketch: Pointless Blinking: Evolution", "Pointless Blinking", "C++", "C++: Building with CMake", "C++: Interfaces", "C++: OO Basics", "C++: Unit Testing", "Graph", "Embedded Computing 1", "Embedded Computing 2", "EX: Race Conditions", "EX: Avoiding Race Condition", "Git Introduction", "Embedded Computing (STECE-2019)", "Linux", "Introduction to Linux and Unix", "Linux Hardware Device Management", "EX: Averaging Sensor", "EX: Averaging Sensor (parallel)", "EX: LED Temperature Display", "EX: Temperature Sensors", "GPIO", "Multithreading", "Avoiding Race Conditions: Semaphore/Mutex", "Communication: Waiting for Something", "Python Basics", "EX: Averaging Sensor, Display", "EX: Temperature Sensors", "Simple Web Programming", "Sensors Web Pages", "Python", "Embedded Computing STECE-2020)", "SS2022", "2022-03-08", "2022-03-10", "2022-03-10 (Homework until 2022-03-21)", "2022-03-21", "2022-03-22, 2022-03-24 (KU)", "2022-03-28", "2022-04-01", "SS2022: Logs", "WS2022", "FH Joanneum (Embedded Computing): WS2022/2023 (Questions About Code)", "FH Joanneum (Embedded Computing): WS2022/2023 (Yes/No Questions)", "Lab Exam 2023-01-17", "SS2023: Exam 2023-06-30 (Handout)", "SS2023: Exam 2023-06-30 (Solved)", "Exam: Embedded Computing 2 (2024-01-26)", "Exam: Embedded Computing 2 (2024-02-02)", "WS2023/2024: Exam 2024-02-02 (Sample)", "Exam WS2023/2024", "Questions 2024", "<code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code> Objects", "Parameter Passing", "SOLID: Hysteresis With Display", "SOLID: Sensor Has ID", "To Be Or Not To Be Virtual", "Working with Git In Our <code class=\"docutils literal notranslate\"><span class=\"pre\">FH-ECE21</span></code> Project", "Embedded Computing (STECE-2021)", "SS2023", "(DONE) Boiling Pot (The Beginning)", "Boiling Pot: Basic Integration", "Boiling Pot: Display, And Status Reporting", "Boiling Pot: Full Integration (Display And IoT)", "(DONE) Data Logger", "Data Logger: CSV Sink", "Data Logger: Integration", "Data Logger: MQTT Sink", "Display Interface/Infrastructure", "WS2023/24: Group Project - Tasks", "<code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> Switch", "Python MQTT Subscriber", "Temperature Display: LED Via A PWM Controller", "(DONE) Sensor Interface", "(DONE) Onewire Sensor", "(DONE) Switch Interface", "SysFS GPIO Switch", "WS2023/24", "Embedded Computing (STECE-2022)", "Gl\u00fchwein Trinken?", "Embedded Computing 1 (STECE-2022): Summer", "Embedded Computing 1 (STECE-2022): Material", "Embedded Computing 1 (STECE-2022): Syllabus", "Embedded Computing (FH Joanneum Graz)", "Git Notes", "Work in Progress", "Packaging this Site on PyPI", "Gaphor", "Hochk\u00f6nig", "Playground", "Sphinx", "Audio Chip Bringup", "Get Debian 10 Kernel Config", "Finish: Debian Kernel Package etc.", "Yocto Kernel Bringup on Customer Hardware", "I2S Audio for a Kontron SMARC Module", "Dirty Upgrade Path", "Wait for Customer Hardware", "Extract Kernel from Intel Yocto BSP", "Python Training Improvements", "Creating Screencasts", "SEO", "Stacks (Hanging)", "Miscellaneous To Do", "Learning The Web", "Beagleboard: How to Repair NAND (also known as 40W)", "Porting to Linux (There\u2019s Always A Better Way)", "Saving Solid State Disk Life (Gentoo)", "\u201cWhy <code class=\"docutils literal notranslate\"><span class=\"pre\">ps</span></code> Sucks\u201d or \u201cCounting Memory Consumption\u201d", "Patching and Building the Fedora Kernel", "Adding a Custom Domain to a Github Pages Project Site", "Using Microsoft Teams on Linux", "Deploying Sphinx Generated Documentation to Github Pages", "Using BigBlueButton for Online Training", "Traunstein via Zierlersteig", "Grintovec (via Plan\u0161arsko Jezero, \u010ce\u0161ka Ko\u010da)", "How to Brick a \u20ac1399 Dell XPS 13", "Building A Cross Toolchain For The Raspberry Pi, Using <code class=\"docutils literal notranslate\"><span class=\"pre\">crosstool-ng</span></code>", "Posts", "Linux und Open Source", "Richtlinien zur Ver\u00f6ffentlichung von Kursmaterial", "Exercises", "Courses: Overview", "Qualivision, Z\u00fcrich, 1.10.2013", "Kursnotizen: Linux Embedded 2015-11-30", "Live Hacking", "Python Individualtraining (5 Tage, beginnend 28.10.2019)", "Goals of this Training", "Random Live Hacking", "Python (12.11.2019 - 14.11.2019 in Graz)", "Proposal", "IPC in Linux (10.1.2020 in Graz)", "\u00dcbung: handgestrickter String, um die Fallen von C++ lustvoll zu erleiden", "C++ f\u00fcr Embedded C Programmierer (30.3.2020 - 3.4.2020 Baden W\u00fcrttemberg)", "Installing <code class=\"docutils literal notranslate\"><span class=\"pre\">googletest</span></code> By Hand", "Software Setup, Build", "Argh: Using This Site With Visual Studio Code", "Code", "Python Grundlagen (13.5.2020 - 14.5.2020 bei einer Firma in Graz)", "Python Schulung 18. und 19.5.2020", "Code", "Python Individualtraining (18.5.2020 - 19.5.2020)", "Python Advanced (7.9.2020 - 10.9.2020)", "Python Basics (28.9.2020 - 30.9.2020)", "Iterables", "Python Basic and Advanced (19.10.2020 - 22.10.2020)", "Linux on Raspberry Pi", "Python Basics (23.11.2020 - 25.11.2020)", "Linux Basics (30.11.2020 - 3.12.2020)", "6 Grundlegende Sprachelemente", "Programmierung Grundlagen (13. und 14.1.2021)", "Programmierung Grundlagen (Jupyter Notebook)", "Python Basics (22.2.2021 - 24.2.2021)", "Linux Kernel Driver Development Basics (14.12.2020)", "Python Advanced", "2021-03-15", "Hallo Jupyter Notebook", "Python Basic and Advanced (22.3.2021 - 25.3.2021)", "Linux Basics, Shell Scripting (2021-03-29)", "Einleitung", "Programmierung Grundlagen (12. und 13.4.2021)", "Programmierung Grundlagen (Jupyter Notebook)", "Syntax etc.", "Python Grundlagen (2021-05-03 - 2021-05-05)", "Python Grundlagen (Jupyter Notebook)", "Das <code class=\"docutils literal notranslate\"><span class=\"pre\">with</span></code> Statement", "Python Advanced (2021-05-25 - 2021-05-27)", "Programmieren mit C (2021-06-14 - 2021-06-18)", "The C++ Programming Language (2021-07-12 - 2021-07-16)", "Programmierung Grundlagen, anhand von Python (2. und 3.8.2021)", "Datenstrukturen", "Compound Datatypes", "Read a Cleaned-Up SAP Export", "Python Grundlagen (2021-08-23 - 2021-08-25)", "Jupyter Notebook", "Initial Terminology", "Python Basics (2021-08-31 - 2021-09-01)", "Python Grundlagen (Jupyter Notebook)", "2021-11-17", "Python Basics (2021-11-17 - 2021-11-19)", "Python Grundlagen (Jupyter Notebook)", "Notebook", "Python Advanced (2021-12-01 - 2021-12-03)", "Python Grundlagen (Jupyter Notebook)", "C/C++ Programming (2021-12-06 - 2021-12-10, 2022-01-24 - 2022-02-04)", "Programmierung Grundlagen, anhand von Python (2022-01-17 - 2022-01-10)", "2022-01-17", "Programmierung Grundlagen (Jupyter Notebook)", "Datatypes", "Python Basics (2022-02-23 - 2022-02-25)", "Jupyter Notebook", "Wiederholung", "Python Advanced (2022-03-15 - 2022-03-17, 2022-03-31)", "Jupyter Notebook", "Hello World", "Python (2022-03-23, 2022-03-30, 2022-04-19 - 2022-03-21)", "Jupyter Notebook", "Programmierung Grundlagen, anhand von Python (2022-04-05 - 2022-04-08)", "BlahBlah", "Programmierung Grundlagen (Jupyter Notebook)", "Python Basics (2022-04-25 - 2022-04-27)", "BlahBlah", "Python Grundlagen (Jupyter Notebook)", "Python (2022-05-02 - 2022-05-05)", "Hello Jupyter Notebook", "Python Grundlagen (Jupyter Notebook)", "Python Advanced (2022-05-16 - 2022-05-18)", "Assert", "Python Grundlagen (Jupyter Notebook)", "Vorbesprechung 2022-05-11", "C++: A New Language Starting In 2011", "C++: A New Language Starting In 2011", "Linux Basics (2022-10-03 - 2022-10-05)", "C++: A New Language Starting In 2011 (2022-10-11 - 2022-10-13)", "Design- and Architectural Patterns With C++ (2022-10-24 - 2022-10-26)", "Python: Tour-De-Force (2022-11-07 - 2022-11-10, 2022-12-01)", "Python (2022-10-17)", "Python Grundlagen (Jupyter Notebook)", "Python (2022-11-16 - 2022-11-18)", "Python (2022-11-16 - 2022-11-18)", "Python Grundlagen (Jupyter Notebook)", "Linux Basics (2023-01-23 - 2023-01-26)", "Embedded Linux Systems Programming (2023-02-13 - 2023-02-17)", "Whetting Your Appetite (Jupyter Notebook)", "Whetting Your Appetite (Livehacking Demo)", "Python For SAP Developers (2023-03-13 - 2023-03-15)", "2023-03-13", "Python For SAP Developers (Jupyter Notebook)", "Original Agenda: Python For SAP Developers (2023-03-13 - 2023-03-15)", "Hacking About On A SAP Test Dataset", "Some Usecases On A Test Dataset From SAP", "C++ For Embedded Developers (2023-03-20 - 2023-03-23)", "Clean Code Development With Python (2023-03-28 - 2023-03-29)", "C++ For Embedded Developers (2023-04-18 - 2023-04-20)", "Agenda: Python Advanced (2023-04-24 - 2023-04-26)", "Python Advanced (2023-04-24 - 2023-04-26)", "Jupyter Notebook: Python Advanced (2023-04-24 - 2023-04-26)", "Jupyter Notebook (Structure): Python Advanced (2023-04-24 - 2023-04-26)", "Agenda: Python Basics (2023-05-15 - 2023-05-17)", "Python Basics (2023-05-15 - 2023-05-17)", "Python Basics (2023-05-15 - 2023-05-17)", "Python Grundlagen (Jupyter Notebook)", "Agenda: Linux Basics (2023-05-23 - 2023-05-25)", "Linux Basics (2023-05-23 - 2023-05-25)", "Agenda: Python Basics (2023-06-20 - 2023-06-22)", "Python Basics (2023-06-20 - 2023-06-22)", "Python Basics (2023-06-20 - 2023-06-22)", "Python Basics (Jupyter Notebook)", "Agenda: CMake (2023-07-03)", "CMake: An Introduction (2023-07-18)", "Python Advanced (2023-09-25 - 2023-09-27)", "Python Advanced (2023-09-25 - 2023-09-27)", "Python Advanced, Jupyter Notebook (2023-09-25 - 2023-09-27)", "Python Advanced (2023-10-09 - 2023-10-11)", "Python Advanced (2023-10-09 - 2023-10-09)", "Python Advanced, Jupyter Notebook (2023-09-25 - 2023-09-27)", "Agenda: Python Advanced (2023-10-24 - 2023-10-26)", "Python Advanced (2023-10-24 - 2023-10-26)", "Jupyter Notebook: Python Advanced", "Jupyter Notebook (Structure): Python Advanced (2023-10-24 - 2023-10-26)", "Agenda: Python Advanced (2023-11-22 - 2023-11-24)", "Python Advanced (2023-11-22 - 2023-22-24)", "Jupyter Notebook: Python Advanced (2023-11-22 - 2023-11-24)", "Jupyter Notebook (Structure): Python Advanced (2023-11-22 - 2023-11-24)", "Agenda: CMake (2023-11-27)", "CMake: An Introduction (2023-11-27)", "Agenda: Python Basics (2023-11-29 - 2023-12-01)", "Python Basics (2023-11-29 - 2023-12-01)", "Python Basics (2023-11-29 - 2023-12-01)", "Python Basics (Jupyter Notebook)", "Agenda: C++: Advanced Topics", "C++: Advanced Topics (2023-12-04 - 2023-12-06)", "Agenda: Python Basics (2023-12-18 - 2023-12-20)", "Python Basics (2023-12-18 - 2023-12-20)", "Python Basics (2023-12-18 - 2023-12-20)", "Python Basics (2023-12-18 - 2023-12-20)", "C++ For Embedded Developers (Beginning of 2023)", "Python/SAP", "Agenda: Python Advanced (2024-01-15 - 2024-01-17)", "Python Advanced (2024-01-15 - 2024-01-17)", "Python Advanced (2023-01-15 - 2024-01-17)", "Python Advanced (2024-01-15 - 2024-01-17)", "Agenda: Python Basics (2024-01-29 - 2024-01-31)", "Python Basics (2024-01-29 - 2024-01-31)", "Python Basics (2024-01-29 - 2024-01-31)", "Jupyter Notebook: Python Basics (2024-01-29 - 2024-01-31)", "Agenda: Linux Basics (2024-03-11 - 2024-03-13)", "Linux Basics (2024-03-11 - 2024-03-13)", "Screenplay Checker", "GPIO: Blinklicht", "GPIO: Blinklicht Interface", "GPIO: Object Oriented Blinklicht", "GPIO: Blinklicht Unittests", "ECE19: Exercises and Custom Topics", "Reading a File", "2021-05-20 (G2)", "2021-05-21", "Tuple Unpacking", "Basics", "An Example", "Cloud Computer, SSH Login", "Formalit\u00e4ten", "Embedded Computing 1 (ECE 19)", "Daily Log", "Embedded Computing 1 (Deutsch)", "Embedded Computing 1 (English)", "Plan for Summer 2021", "2021-10-07", "2021-10-12 (Bringing Newcomers Up-to-Date)", "2021-10-28", "2021-11-15", "2021-11-29", "2021-12-1{4,5}", "2022-01-10", "2022-01-12", "2022-02-15", "Agenda/Log", "Embedded Computing 2 (ECE 19)", "Exam Material Overview", "Embedded Computing 1+2, ECE 19", "Details", "Bisher Gehaltene", "Training Material: Overview and Download", "Installation", "Introduction", "Hello World", "Variables and Arithmetic", "Exercise: A Better Fahrenheit Table", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> Loops", "Exercise: Fahrenheit Table Using <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code>", "Symbolic Constants", "Exercise: Fahrenheit Table Using Macros", "Character I/O", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">wc</span></code> For The Poor", "Arrays", "Exercise: Character Histogram", "Functions", "Exercise: Forward Declaration", "Character Arrays", "Exercise: Read Line Into String from <code class=\"docutils literal notranslate\"><span class=\"pre\">stdin</span></code>", "Lifetime of Variables", "Introduction", "Type System", "Variable Names", "Data Types, Sizes", "Constants", "Variable Definitions", "Arithmetic Operators", "Relational and Logical Operators", "Type Conversions", "Increment, Decrement", "Exercise: Copy and Reduce String", "Bit-Operators", "Assignment with Calculation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">?:</span></code> - Conditional Expression", "Precedence, Associativity", "Types, Operators, Expressions", "Statements and Blocks", "<code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code> - <code class=\"docutils literal notranslate\"><span class=\"pre\">else</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">else</span></code> - <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">switch</span></code>", "Loops: <code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code>", "Loops: <code class=\"docutils literal notranslate\"><span class=\"pre\">do</span> <span class=\"pre\">-</span> <span class=\"pre\">while</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">break</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">continue</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">goto</span></code> and Labels", "Program Flow", "Basics", "Extern/Global Variables", "Header Files", "Static Variables", "C Preprocessor: Basics", "C Preprocessor: More", "Functions and Program Structure", "Pointers and Addresses", "Pointers as Function Parameters", "Exercise: Function That Swaps Two Variables", "Pointers and Arrays", "Commandline Arguments", "Pointers and Arrays", "<code class=\"docutils literal notranslate\"><span class=\"pre\">struct</span></code>: Basics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">struct</span></code>: Functions", "<code class=\"docutils literal notranslate\"><span class=\"pre\">typedef</span></code>: Type Alias", "Structures", "Dynamic Memory", "Singly Linked List", "Memory", "Volatile", "Compiler Intrinsics", "Alignment", "Advanced Language Features", "Sanity and Readabilty", "Know Your Integers", "Discrete Values - <code class=\"docutils literal notranslate\"><span class=\"pre\">enum</span></code>", "Visibility - <code class=\"docutils literal notranslate\"><span class=\"pre\">static</span></code>", "Correctness - <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "Struct Initialization", "Explict Type Safety", "<code class=\"docutils literal notranslate\"><span class=\"pre\">valgrind</span></code>", "Program Sanity", "Optimization", "Optimizations: Compute Bound Code", "Optimizations: Memory Optimizations", "Performance", "Introduction", "GNU Profiler - <code class=\"docutils literal notranslate\"><span class=\"pre\">gprof</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">callgrind</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">oprofile</span></code>", "Profiling", "The C Programming Language", "Messages From The Book", "What\u2019s There? What Have We Accomplished?", "Is Software A Craft? Software Is A Craft! \u27f6 <em>Clean Code</em>", "A Typical Project (Livehacking Screenplay: My Own Bookkeeping Effort)", "Basics: Boilerplate, And Executables", "\u201cConfigured\u201d Header Files", "C++, Debug/Release, CMake \u201cProgramming\u201d, Rants", "External Dependencies", "CMake: An Introduction", "Installation (\u201cDeployment\u201d)", "Libraries, And <em>Dependencies</em>", "Optional Code, Approach 1: Optional <code class=\"docutils literal notranslate\"><span class=\"pre\">blacklist</span></code>, C Macro  (Global Flags)", "Optional Code, Approach 2: Pushing Optionality Down In Module <em>Interface</em>", "Optional Code: Problem Definition, <code class=\"docutils literal notranslate\"><span class=\"pre\">OPTION()</span></code>", "Shared Libraries (Preview)", "Structure - Subdirectories, Dependencies, and Include Paths", "Targets, Properties, And More", "Running Tests", "C++ Code", "Abstract Factory", "Adapter", "Command", "SocialDB Source Code", "Composite", "Decorator", "Design Patterns With C++", "Case Study/Livehacking: Heating Control (Reading Sensors)", "Interpreter", "Observer", "OO Design Principles", "Proxy", "Exercise Foundation: <code class=\"docutils literal notranslate\"><span class=\"pre\">Sensor</span></code> Hierarchy", "Singleton", "UML Short Introduction", "Exercise: Abstract Factory", "Exercise: Adapter", "Exercise: Command", "Exercise: Composite", "Exercise: Decorator", "Exercises: Design Patterns", "Exercise: Interpreter Combined With Adapter (And A Proxy)", "Exercise: Arithmetic Expression Interpreter", "Exercise: Adapter", "Exercise: Proxy (Remote Thermometer)", "Exercise: Proxy (Rounding Thermometer)", "Exercise: Singleton (Flexible)", "Exercise: Singleton (Flexible <em>And</em> Strict)", "Exercise: Singleton (Inflexible)", "Solution: Abstract Factory", "Solution: Adapter", "Solution: Command", "Solution: Composite", "Solution: Decorator", "Solutions", "Solution: Interpreter Combined With Adapter (And A Proxy)", "Solution: Arithmetic Expression Interpreter", "Solution: Observer", "Solution: Proxy (Remote Thermometer)", "Solution: Proxy (Rounding Thermometer)", "Solution: Singleton (Flexible)", "Solution: Singleton (Flexible <em>And</em> Strict)", "Solution: Singleton (Inflexible)", "Exercise (FH): Introducing a Sensor Class", "Exercise (FH): Extract Measurement Loop Into Function", "Exercise (FH): Replace Sensor", "Exercise (FH): Write A Sensor Class: <code class=\"docutils literal notranslate\"><span class=\"pre\">RandomSensor</span></code>", "FH Sensor OO (First Try)", "C++ Exercises", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">LEDStripeDisplay_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">Hysteresis_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">AveragingSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">ConstantSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">MockSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">RandomSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: Mocking Switch (Non-Polymorphic)", "OO Basics, Interfaces (Shapes)", "Working On Exercise Projects", "Exercise: Sensor Interface", "Exercise: OneWire Sensor Factory", "Exercise: OneWire Sensor Class", "Exercise: Algorithms", "Exercise: Generic Filter", "Exercise: Filter Elements Greater Than 10", "Exercise: Filter Odd Elements", "C++ Exercises: Standard Template Library", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::map&lt;&gt;</span></code>", "Exercises: Sensor Repository (<code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code>)", "Insert - Not Overwriting Existing Elements", "Insert - Sunny Case", "Lookup - Not Found", "Lookup - Sunny Case", "Memory Leaks?", "Remove - Not Found", "Remove - Sunny Case", "<code class=\"docutils literal notranslate\"><span class=\"pre\">.size()</span></code> Is <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "Exercise: Uniquify A Sequence", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector&lt;&gt;</span></code>", "C++: TODO List", "Code: C++: Class Templates", "Screenplay: C++: Class Templates", "C++: Class Templates", "Code: C++: Dynamic Memory", "Screenplay: C++: Dynamic Memory", "C++: Dynamic Memory", "Code: C++: Global Objects Initialization", "Screenplay: C++: Global Objects Initialization", "C++: Global Objects Initialization", "Code: C++: Inheritance, Interfaces, <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>", "Screenplay: C++: Inheritance, Interfaces, <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>", "C++: Inheritance, Interfaces, <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>", "Code: C++: Ownership/RAII", "Screenplay: C++: Ownership/RAII", "C++: Ownership/RAII", "Code: C++: STL Containers (Intro)", "Screenplay: C++: STL Containers (Intro)", "C++: STL Containers (Intro)", "Code: C++: Templates vs. Interfaces", "Screenplay: C++: Templates vs. Interfaces", "C++: Templates vs. Interfaces", "C++: Miscellaneous Live-Hacking", "Introduction", "Object Oriented Programming In Good Ol\u2019 C", "Copy Constructor, Assignment Operator", "Classes and Objects", "Custom Constructor", "Default Constructor", "More Constructors, Destructors", "Data Encapsulation", "Constructors: Member Initialization", "Object Copy (And Resource Management): There Be Dragons", "Overloading", "Methods", "<code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">this</span></code>", "References", "<code class=\"docutils literal notranslate\"><span class=\"pre\">static</span></code> Methods", "<code class=\"docutils literal notranslate\"><span class=\"pre\">static</span></code> Member Variables", "Operator Overloading", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">cuboid</span></code>", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">point</span></code>", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">point3d</span></code>", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">rectangle</span></code>", "Functions and Methods", "Basics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">try</span></code> - <code class=\"docutils literal notranslate\"><span class=\"pre\">catch</span></code>", "Exceptions", "Function Templates", "Class Templates", "C++ Template Basics", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::copy&lt;&gt;()</span></code> From <code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;algorithm&gt;</span></code>", "Screenplay: Pointer Arithmetic, And Algorithms", "Screenplay: Pointer Arithmetic Basics", "Screenplay: Pointer Difference", "Screenplay: Out Of Range Errors", "Standard Template Library: Basics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code> (And <code class=\"docutils literal notranslate\"><span class=\"pre\">std::copy()</span></code>)", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">std::copy()</span></code>", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code> Basics", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code>, And Pointer Arithmetics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">binary_search&lt;&gt;</span></code>: On Sorted Sequence", "<code class=\"docutils literal notranslate\"><span class=\"pre\">copy&lt;&gt;</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find&lt;&gt;</span></code>: Sequential Search, by Equality", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find_if&lt;&gt;</span></code>: Sequential Search, Customizable", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for_each&lt;&gt;</span></code>", "Algorithms", "<code class=\"docutils literal notranslate\"><span class=\"pre\">lower_bound&lt;&gt;</span></code>: On Sorted Sequence", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reverse&lt;&gt;</span></code>: Reversing In-Place", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reverse_copy&lt;&gt;</span></code>: Copying <em>and</em> Reversing", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sort&lt;&gt;</span></code>", "Sequential Containers", "Sequential Containers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">list&lt;&gt;</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">vector&lt;&gt;</span></code>", "Associative Containers", "Associative Containers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code>", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code> Initialization And Inserting", "Screenplay: Inserting Elements", "Screenplay: Removing (Erasing) Elements", "Screenplay: Searching", "<code class=\"docutils literal notranslate\"><span class=\"pre\">multimap&lt;&gt;</span></code>", "Allocator Basics", "Allocators", "STL: Exercises", "Exercise: Reverse a String", "Exercise: Reverse A String", "Solution: Reverse a String", "Standard Template Library", "Dynamic Memory (To Be Done)", "Dynamic Memory Allocation, Resource Management", "Inheritance Basics", "Destructors And Inheritance", "Inheritance And Object Oriented Design", "C++ \u201cInterfaces\u201d", "<em>Polymorphic</em> Usage Of Objects", "Inheritance: <code class=\"docutils literal notranslate\"><span class=\"pre\">private</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">protected</span></code> (Implementation Inheritance)", "Virtual Destructors", "Virtual Methods", "The Standard Library: Miscellaneous Topics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::string</span></code>", "Exercise: Paint the American Flag Onto Standard Output", "FH/Moodle Quiz: C++", "Exercises: Miscellaneous", "Exercise: Sum of Integers Coming From <code class=\"docutils literal notranslate\"><span class=\"pre\">cin</span></code>", "Exercises: User Database", "Exercise: Access Methods for Members", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code> Members", "Exercise: Use <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "Exercise: Default Constructor (was: Arrays of Objects)", "Exercise: Simple Method (Users Age By <code class=\"docutils literal notranslate\"><span class=\"pre\">n</span></code> Years)", "Exercise: Transform <code class=\"docutils literal notranslate\"><span class=\"pre\">struct</span> <span class=\"pre\">User</span></code> Into A Class", "Exercise: Insert a User into UserDB", "Exercise: Search a User By Lastname (<code class=\"docutils literal notranslate\"><span class=\"pre\">std::find_if</span></code>)", "Exercise: Search, \u201cUser Not Found\u201d Exception", "Exercise: Search a User By Lastname", "Exercise: Use std::vector in UserDB", "C++", "Introduction", "History, Background", "A Live-Hacked Tour Around The New C++", "Strongly Typed <code class=\"docutils literal notranslate\"><span class=\"pre\">enum</span></code>", "Brace Initialization (Uniform Initialization)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::initializer_list</span></code>: Brace Initialization, Implementor\u2019s View", "Brace Initialization: Introduction", "Brace Initialization: A Mess", "Delegating Constructor", "<code class=\"docutils literal notranslate\"><span class=\"pre\">constexpr</span></code>", "Afterword, Further Reading", "Move Semantics, Rvalue References", "<code class=\"docutils literal notranslate\"><span class=\"pre\">SmartPtr</span></code> With Move Semantics", "Implementing Move Semantics (<code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">String</span></code>, Live Hacked)", "Using Move Semantics In Own Code", "Lvalues, Rvalues, And Moving", "Miscellaneous", "Duck Typing (Err, <code class=\"docutils literal notranslate\"><span class=\"pre\">auto</span></code>) Without A Duck", "Concepts", "Concepts: Overview", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toolcase-1-conceptless.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toolcase-2-conceptless-error.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toolcase-3-concept-integral.cpp</span></code>", "Concepts: Links", "Writing Your Own Concepts", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-1-good-old-func.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-2-need-template.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-4-concept-has-size.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-5-concept-index-ret-double.cpp</span></code>", "Coroutines", "Coroutines: An Overview", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fibo-generator.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fibonacci.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">generator.h</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">generator-hello.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">simplest.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">suspend.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">suspend-iter.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">suspend-next.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">=</span> <span class=\"pre\">default</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">=</span> <span class=\"pre\">delete</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">final</span></code>", "New Language Features", "Lambda", "Lambda", "Lambda: More Capturing", "Live Hacking: Handwritten Functors (Too Much Boilerplate)", "Live Hacking: Handwritten Functors, And Capturing By Reference (Pitfalls)", "Modules", "<code class=\"docutils literal notranslate\"><span class=\"pre\">override</span></code>", "Range Based <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> Loops: Introduction", "Case Study: Range Based <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> On <code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code>", "Ranges And Views: Good Or Bad?", "Ranges", "Ranges: Overview", "Ranges And Views: Links", "Tuple Unpacking (Err, Structured Binding)", "Smart Pointers: Closing Words", "Smart Pointers (<code class=\"docutils literal notranslate\"><span class=\"pre\">std::unique_ptr</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">std::shared_ptr</span></code>)", "Introduction", "(Trying To) Handwrite A Smart Pointer Class in C++ Before C++11", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::shared_ptr</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::unique_ptr</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::weak_ptr</span></code>", "Perfect Forwarding", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::bind</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::function</span></code>", "Functions, Functions", "Threads Introduction", "Threads in C++", "Race Conditions", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::atomic</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::mutex</span></code> And Friends", "Scoped Locking", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::condition_variable</span></code> (Live Hacking Multithreaded Queue)", "Multithreading", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::promise</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">std::future</span></code> (And Some <code class=\"docutils literal notranslate\"><span class=\"pre\">std::chrono</span></code>) (Some Live Hacking)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::chrono</span></code>", "New-Style Union: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::variant</span></code>", "Miscellaneous", "CRTP", "std::vector&lt;&gt;: Allocators (<em>Very</em> Incomplete)", "Classic Virtual", "Embedded Problems? Code Bloat? Type Erasure? Solutions?", "Non-Virtual, But Related", "Type Erasure (Static vs. Dynamic Polymorphism), CRTP", "Unrelated (Duck-Typed)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::variant</span></code> (Automatic Virtual Dispatch Using Template Method)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::variant</span></code> (Manual Virtual Dispatch, Using <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code>)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::variant</span></code> (Manual Virtual Dispatch, Using <code class=\"docutils literal notranslate\"><span class=\"pre\">std::visit</span></code>)", "Why Replace <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>?", "Drafts", "Exercise: Bag Of Items, By Copy", "Exercise: Bag Of Items, By Shared Reference", "Exercise: Bag Of Items, By Unique Reference", "Exercises", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::filesystem</span></code>", "The New C++ (11-\u2026)", "Generated Topic Graph", "Topics", "Modern Character Devices (Screenplay)", "Modern Character Devices (Slideshow)", "Modern Character Devices", "File Operations on Character Devices (Screenplay)", "File Operations on Character Devices (Slideshow)", "File Operations on Character Devices", "Coding: First Functionality (Slideshow)", "Coding: First Functionality", "Character Device Basics (Livehacking Screenplay)", "Character Device Basics (Slideshow)", "Character Device Basics", "Coding: Multiple Devices (Slideshow)", "Coding: Multiple Devices", "Coding: Refactoring (Screenplay)", "Coding: Refactoring (Slideshow)", "Coding: Refactoring", "DMA (Slideshow)", "DMA", "Building a Fedora Kernel (Screenplay)", "Fedora: Building the Kernel", "Fedora: Building External Kernel Modules (Screenplay)", "Fedora: Building External Kernel Modules", "Linux Kernel Driver Development", "Module Loading, Hello World (Slideshow)", "Module Loading, Hello World", "Coding: Raspi GPIO Interrupts (Slideshow)", "Coding: Raspi GPIO Interrupts", "Interrupts (Slideshow)", "Interrupts", "IO Memory (Slideshow)", "IO Memory", "Dynamic Memory: <code class=\"docutils literal notranslate\"><span class=\"pre\">kmalloc()</span></code> (Slideshow)", "Dynamic Memory: <code class=\"docutils literal notranslate\"><span class=\"pre\">kmalloc()</span></code>", "Doubly Linked Lists (Slideshow)", "Doubly Linked Lists", "Coding: Fix Race Condition (Mutex) (Slideshow)", "Coding: Fix Race Condition (Mutex)", "Mutex (and RT Mutex) (Slideshow)", "Mutex (and RT Mutex)", "Network Devices (Slideshow)", "Network Devices", "PCI (Slideshow)", "PCI", "Process vs.Atomic Context (Slideshow)", "Process vs.Atomic Context", "Rasperry Pi: Kernel Build", "Raspberry Pi: Building the Kernel", "Sample Code Maintenance", "Coding: Fix <em>Sleep While Atomic</em> (Slideshow)", "Coding: Fix <em>Sleep While Atomic</em>", "Spinlock (vs. Mutex) (Slideshow)", "Spinlock (vs. Mutex)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">dup()</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">fork()</span></code>, and Reference Counting (Stub)", "Coding: Timed Event (Slideshow)", "Coding: Timed Event", "Timer Management (Slideshow)", "Timer Management", "To Do List", "Accessing Userspace Memory (Screenplay)", "Accessing Userspace Memory (Slideshow)", "Accessing Userspace Memory", "Waiting for Something (Screenplay)", "Waiting for Something (Slideshow)", "Waiting for Something", "Workqueue (Screenplay)", "Workqueue (Slideshow)", "Workqueue", "Exercises: Archiving And Compression", "Archiving and Compression", "<code class=\"docutils literal notranslate\"><span class=\"pre\">gzip</span></code>", "Archiving and Compression", "<code class=\"docutils literal notranslate\"><span class=\"pre\">tar</span></code>", "Exam (ECE/SS2022/G1): Do A Lot With Files And Directories", "Exam (ECE/SS2022/G2): Do A Lot With Files And Directories", "Exercises/Exams: Linux Basics", "Linux Basics", "Everything Is A File (Live Demo)", "Environment (Variables)", "FH/Moodle Quiz: Linux Basics", "Introduction: Concepts and Terminology", "Login? What Is That?", "Overview", "Processes, Scheduling, Address Spaces", "Process Hierarchy (Parent, Child Process)", "Windows Subsystem for Linux (WSL)", "Exercises: IO-Redirection, Pipes", "I/O Redirection And Pipes", "I/O Redirection", "I/O Redirection: Swap <code class=\"docutils literal notranslate\"><span class=\"pre\">stdout</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">stderr</span></code>", "Pipes", "Permissions: Mode, User and Group Ownership", "Exercise: Determine Your User Credentials", "FH/Moodle Quiz: Permissions", "FH/Moodle Quiz: Permissions", "Exercises: File System Permissions", "Exercise: Create Private Directory", "Question: Private Directory", "Exercise: Create Public Directory", "Question: Public Directory", "Exercise: Create Group-Shared File", "File System Permissions", "SetUID Programs: <code class=\"docutils literal notranslate\"><span class=\"pre\">passwd</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">sudo</span></code>, \u2026", "SetUID: Live Demo", "Ugly Hack: Sticky Bit", "Default Permissions: <code class=\"docutils literal notranslate\"><span class=\"pre\">umask</span></code>", "Commandline", "Shell Configuration File: <code class=\"docutils literal notranslate\"><span class=\"pre\">~/.bashrc</span></code>", "Copying: <code class=\"docutils literal notranslate\"><span class=\"pre\">cp</span></code>", "Current Working Directory", "Exercise: Copy Directory Tree", "Exercise: Copy Files", "Exercise: Create Files (I/O Redirection)", "Exercise: Move Files", "Exercises: Create/Copy/Move/Remove", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">mkdir</span></code>", "Exercise: Funny Stuff", "Exercise: Remove Directory Tree", "Exercise: Verify, Repeat", "FH/Moodle Quiz: Shell", "The Shell - Exercises", "Exercise: File Types in <code class=\"docutils literal notranslate\"><span class=\"pre\">/dev</span></code>", "Exercise: Size of <code class=\"docutils literal notranslate\"><span class=\"pre\">/etc/passwd</span></code>", "Exercises: The <code class=\"docutils literal notranslate\"><span class=\"pre\">ls</span></code> Command", "Exercise: Permissions of Home Directory", "Creating And Removing Files and Directories", "The Shell (Bash - \u201cBourne Again Shell\u201d)", "Symbolic Links, Hard Links", "Directory Listings: The <code class=\"docutils literal notranslate\"><span class=\"pre\">ls</span></code> Command", "Moving and Renaming: <code class=\"docutils literal notranslate\"><span class=\"pre\">mv</span></code>", "Absolute and Relative Paths", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cat</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cut</span></code>", "Exercises: Inspecting Text Files", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">grep</span></code>", "Tools: Inspecting Text Files", "<code class=\"docutils literal notranslate\"><span class=\"pre\">head</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">tail</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">less</span></code>", "Overview", "Drafts", "Yocto", "Linux", "Controlling a Brushless Motor With Raspberry Pi", "CAN/Linux Basics", "CAN Interfaces", "Programming", "Hardware, Kernel", "CAN Bus With Linux And Python", "Linux Hardware Interfaces", "Linux and I2C (using LM73 Temperature Sensor as Slave)", "PWM Userspace Interface (using PCA9685)", "Linux and OneWire (using DS18B20 Temperature Sensor as Slave)", "SSH: Basics", "Exercise: Copy a File To Remote Machine, And Verify", "Exercise: Copy a Tree To Remote Machine (And Adjust Permissions)", "Exercises: SSH", "Exercise: Create SSH Key Pair", "SSH: Secure Shell", "SSH: Public Key Authentication", "SSH: Links", "SSH: Port Forwarding", "SSH: Secure Copy (<code class=\"docutils literal notranslate\"><span class=\"pre\">scp</span></code>)", "SSH File System (<code class=\"docutils literal notranslate\"><span class=\"pre\">sshfs</span></code>)", "Error Handling", "Linux Systems Programming: Basics", "System Calls vs. Library Functions", "Blocking I/O: What is That? (\u201cEverything is a file\u201d)", "Blocking I/O (On A File): What is That?", "Blocking I/O: On A Network Socket", "Blocking I/O: On A Timer? WTF?", "Blocking I/O: What Is That?", "File I/O: Basics", "Exercise: Copy A File", "Exercise: Create File With Hole", "Duplicating (Whats Going On?)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_CREAT</span></code>: Creating A File", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_EXCL</span></code>: Creating A File, But Failing If It Already Exists", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_RDONLY</span></code>: Reading a File", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_WRONLY</span></code>: Writing A File (Which Must Exist)", "Exercise: Read Temperature From Onewire Sensor", "File I/O", "Miscellaneous", "Linux Systems Programming", "Get Value Of GPIO", "Introductory Live Hacking, Hardware-Wise (<code class=\"docutils literal notranslate\"><span class=\"pre\">sysfs</span></code> GPIO)", "Intro: <code class=\"docutils literal notranslate\"><span class=\"pre\">sysfs</span></code> GPIO", "Interrupts In Userspace", "Basics", "Thread Life Cycle", "Thread Creation, Race Condition", "Synchronization", "Mutex: Solve Load/Modify/Store Conflict", "Communication: Condition Variable", "Condition Variable: Message Queue", "Miscellaneous", "Last Warning", "POSIX Threads", "Trylock/islocked", "Process: Arguments, Exit Status", "Processes", "The Process Tree (And Environment, And <code class=\"docutils literal notranslate\"><span class=\"pre\">procfs</span></code>)", "Scheduling (and Multitasking)", "Scheduling", "Tasks? Processes? Threads?", "Scheduling: Exam Questions", "Realtime", "Realtime API", "Wakeup Latency, CPU Frequency (Gotcha)", "Code: Sysprog: Event Driven Programming", "Screenplay: Sysprog: POSIX IPC", "Sysprog: Events", "Code: Sysprog: POSIX IPC", "Screenplay: Sysprog: POSIX IPC", "Slides: Sysprog: POSIX IPC", "Sysprog: POSIX IPC", "Code: Sysprog: Signals", "Screenplay: Sysprog: Signals", "Slides: Sysprog: Signals", "Sysprog: Signals", "Toolchain: Basics", "CMake: Cross Build", "CMake: Local Build", "Cross Development", "Cross Development", "Exercise: Build Software Package (Cross, Raspberry)", "FH/Moodle Quiz: Toolchain", "Exercises: Toolchain", "Exercise: Build Software Package (Native)", "Exercise: Install And Check Raspberry Toolchain", "Toolchain, And Cross Development", "Case Study: Raspberry Toolchain", "Linaro Toolchain For The Pi (Defunct)", "Building A Cross Toolchain For The Raspberry Pi, Using <code class=\"docutils literal notranslate\"><span class=\"pre\">crosstool-ng</span></code>", "Building A Toolchain <em>On</em> Fedora <em>For</em> Ubuntu 18.04 (WSL)", "Cross Toolchain Setup", "Zooming In: Separate Compilation, and Linking <em>Statically</em>", "Shared Libraries (Shared Objects)", "Object Code Archives/Static Libraries", "Closures", "Comprehensions (List, Dictionary, Set)", "Context Managers: The <code class=\"docutils literal notranslate\"><span class=\"pre\">with</span></code> Statement", "Decorators", "Exception Handling", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">exec()</span></code> Function", "Python: More Language Features", "Iteration, Comprehensions, and Generators", "Implementing A Fibonacci Number Generator", "The Iterator Protocol", "Iteration, Generators, And <code class=\"docutils literal notranslate\"><span class=\"pre\">yield</span></code>", "Iterating Intelligently: Generators, and the Iterator Protocol", "Modules and Packages", "Multithreading (Python)", "Multithreading", "Race Conditions, and Mutexes", "Multithreading: Exam Questions", "Abstract Base Classes (<code class=\"docutils literal notranslate\"><span class=\"pre\">abc</span></code>), And Duck Typing", "Classes And Dictionaries", "Constructor", "Object Oriented Programming", "Inheritance", "Methods", "<code class=\"docutils literal notranslate\"><span class=\"pre\">collections.namedtuple</span></code>", "Operator Overloading", "Properties", "<code class=\"docutils literal notranslate\"><span class=\"pre\">str()</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">repr()</span></code>", "Positional and Keyword Arguments", "Python: The Language Fundamentals", "Python Installation", "Blahblah", "Hello World", "Running Python Programs", "Syntax etc.", "Commandline Arguments (<code class=\"docutils literal notranslate\"><span class=\"pre\">sys.argv</span></code>)", "Variables", "Datatypes", "Compound Datatypes", "Boolean", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code> Statement", "<code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code> Loops", "Sequential Datatypes", "Indexing and Slicing", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> Loops", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">range</span></code> Function", "References, (Im)mutability", "Functions: Global and Local Scope (Livehacking Screenplay)", "Functions (Slideshow)", "Functions", "More About Strings", "String Formatting", "Miscellaneous String Methods", "More About Lists", "More About Dictionaries", "More About Sets", "File I/O", "Function Objects", "Commandline Parsing with <code class=\"docutils literal notranslate\"><span class=\"pre\">argparse</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>", "Python: Draft Topics", "Matplotlib", "Package Installation (<code class=\"docutils literal notranslate\"><span class=\"pre\">setuptools</span></code>)", "Exercise: Read CSV File, Write into Sqlite3 Database", "Exercise: Read CSV File", "CSV and Databases", "Exercises", "Exercise: Boolean Expressions", "Exercise: Even Numbers (<code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code>)", "Exercise: Greeting, Depending on Time of Day", "Exercises (External)", "Exercise: Determine Maximum of Two Numbers", "Exercise: Swap Two Variables", "Exercise: Username/Password Check", "Exercise: Digit to English Word", "Exercise: Dictionary: Errors?", "Exercise: Eliminate Empty/Comment-Only Lines", "Exercise: Generator: Fibonacci", "Exercise: Primeness (<code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code>)", "Exercises (Legacy)", "Exercise: Functions: <code class=\"docutils literal notranslate\"><span class=\"pre\">join()</span></code>", "Exercise: Determine Maximum of Two Numbers", "Exercise: Determine Maximum of Two Numbers (Function)", "Exercise: Mixed List (Executable Program)", "Exercise: Mixed List (Interactive Interpreter)", "Exercise: Parsing <code class=\"docutils literal notranslate\"><span class=\"pre\">/etc/passwd</span></code>", "Exercise: Primeness (Function)", "Exercise: Reverting Lines of a File", "Exercise: String (Right-Justify)", "Exercise: Function: <code class=\"docutils literal notranslate\"><span class=\"pre\">uniq()</span></code>", "Exercise: Generator: <code class=\"docutils literal notranslate\"><span class=\"pre\">uniq()</span></code>", "Exercise: Counting Lines, Words, Characters", "Exercise: Primeness (<code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code>)", "Sensors, And Data Acquisition (Exercise Series)", "Project Setup", "Exercise: Basic \u201cSensor\u201d", "Exercise: Read CSV File (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.dictreader</span></code>)", "Exercise: Refactoring - Extract CSV Reading Into Function (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.dictreader</span></code>)", "Exercise: Read CSV File (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.reader</span></code>)", "Exercise: Refactoring - Extract CSV Reading Into Function (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.reader</span></code>)", "User Database (Exercise Series)", "Exercise: MQTT: Publish User Records", "Exercise: Away From Raw Dictionaries", "Exercise: Convert User Record To JSON And Back", "Exercise: Refactoring - Extract Both CSV Formats Into Module", "Python: All Material, Interrelated", "Python Programming: From Absolute Beginner to Advanced Productivity", "Python Links", "Machine Learning, Artificial Intelligence", "K-Means", "Linear Regression: Running Code (<em>no Notebook!</em>)", "Weather History Dataset", "Linear Regression: Jupyter Notebook", "Linear Regression", "Machine Learning: Concepts and Terminology", "CSV Files", "DBAPI 2", "Databases", "DBAPI 2: PostgreSQL", "DBAPI 2: <code class=\"docutils literal notranslate\"><span class=\"pre\">sqlite3</span></code>", "Encoding", "Python: Miscellaneous Topics", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">import</span></code> Statement (incomplete)", "MQTT", "Pandas: Adding Rows", "Pandas: Basics (<code class=\"docutils literal notranslate\"><span class=\"pre\">DataFrame</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">Series</span></code>)", "Pandas: Filters", "Pandas", "Pandas: Selecting Rows (And Columns) With <code class=\"docutils literal notranslate\"><span class=\"pre\">iloc[]</span></code>", "Pandas: Indexes", "Pandas: Selecting Rows (And Columns) With <code class=\"docutils literal notranslate\"><span class=\"pre\">loc[]</span></code>", "Pandas: Adding/Modifying Columns", "XML: ElementTree (<code class=\"docutils literal notranslate\"><span class=\"pre\">etree</span></code>)", "Visual Studio Code for Python Programming", "Python: Project/Package Management", "Python Package Index (Livehacking Screenplay)", "Python Package Index (Slideshow)", "Python Package Index", "Packaging, PyPI Upload (Link Collection)", "PyTest", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pytest</span></code> Introduction, By Example", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">unittest</span></code> Module", "Virtual Environments (Livehacking Screenplay)", "Virtual Environments (Slideshow)", "Virtual Environments", "Unit Testing With <code class=\"docutils literal notranslate\"><span class=\"pre\">googletest</span></code>", "Code: Unittest: GTest Basics", "Screenplay: Unittest: GTest Basics", "Unittest: GTest Basics", "Screenplay: Unittest: GTest and CMake", "Unittest: GTest and CMake", "Code: Unittest: GTest Fixtures", "Screenplay: Unittest: GTest Fixtures", "Unittest: GTest Fixtures", "Organisatorisches: Buchung, Kursablauf", "Linux from Scratch, 16.9.2013, M\u00fcnchen", "Shell Scripting/Bourne Again Shell (Bash)", "C: Einf\u00fchrung", "C f\u00fcr Fortgeschrittene", "C++: Einf\u00fchrung und \u00dcberblick", "An Introduction to Modern C++, In Three Days", "C and C++ Programming", "CMake", "Design Patterns For C++ Developers", "Embedded Software Development: Hardware, Realtime, and Memory Management", "Linux Kernel Driver Development", "Linux Basics: Eine Einf\u00fchrung Anhand von Beispielen", "GNU Make: Die Mutter aller Build Tools", "Advanced Python", "Basic Python", "Herdt", "Eine Woche mit dem Raspberry Pi", "Subversion (SVN)", "Linux Systems Programming: Introduction", "Linux Systems Programming: Virtual Memory, IPC, Shared Libraries", "Linux Systems Programming", "Linux Systems Programming: Multithreading", "Linux Systems Programming: Network Programming", "Unittesting and Test Driven Development"], "terms": {"di": [0, 23, 186, 189, 257, 478, 1125, 1127, 1131, 1133], "j\u00f6rg": [0, 23, 148, 190, 224, 232, 236, 251, 254, 257, 267, 270, 285, 306, 312, 324, 327, 328, 334, 340, 346, 350, 360, 361, 363, 365, 430, 504, 1032, 1035, 1073, 1098, 1125, 1126, 1127, 1128, 1131, 1132, 1133], "faschingbau": [0, 12, 23, 37, 50, 61, 63, 65, 148, 150, 171, 178, 179, 187, 205, 208, 209, 211, 212, 213, 214, 224, 231, 236, 237, 244, 247, 252, 254, 257, 260, 264, 267, 270, 273, 285, 292, 302, 306, 312, 317, 324, 327, 328, 334, 340, 346, 360, 361, 363, 366, 369, 374, 430, 461, 478, 483, 496, 503, 504, 537, 553, 609, 655, 684, 685, 686, 687, 688, 689, 706, 864, 865, 872, 874, 879, 893, 909, 922, 928, 953, 990, 1032, 1035, 1036, 1048, 1049, 1051, 1052, 1053, 1055, 1056, 1058, 1064, 1086, 1091, 1114, 1125, 1126, 1127, 1128, 1131, 1132, 1133, 1135, 1144, 1150, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1163, 1183, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207], "offic": [0, 32, 177, 193], "co": [0, 12, 32, 37, 150, 168, 179, 208, 209, 211, 212, 213, 214, 275, 292, 296, 369, 374, 476, 483, 702, 1036, 1058, 1135, 1150, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1163, 1181, 1183, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207], "43": [0, 7, 175, 182, 194, 205, 215, 220, 222, 225, 228, 231, 236, 237, 241, 244, 247, 252, 254, 260, 264, 267, 270, 273, 282, 285, 289, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 361, 363, 364, 453, 466, 478, 637, 707, 757, 785, 919, 928, 941, 943, 982, 1045], "0": [0, 5, 7, 21, 23, 32, 60, 62, 108, 111, 112, 115, 120, 121, 122, 123, 130, 134, 138, 142, 148, 152, 158, 168, 171, 173, 174, 175, 177, 183, 187, 191, 192, 193, 194, 195, 205, 208, 210, 212, 215, 220, 222, 223, 224, 225, 228, 231, 232, 233, 236, 237, 241, 244, 245, 247, 250, 252, 254, 257, 260, 263, 264, 267, 270, 272, 273, 275, 277, 282, 285, 288, 289, 290, 292, 296, 300, 301, 302, 306, 312, 322, 324, 328, 334, 340, 346, 350, 355, 361, 362, 363, 364, 365, 366, 369, 391, 392, 394, 396, 398, 400, 401, 402, 404, 411, 412, 414, 415, 416, 424, 427, 429, 430, 436, 437, 439, 442, 457, 458, 459, 460, 462, 463, 466, 467, 470, 472, 476, 478, 479, 482, 486, 487, 489, 492, 495, 496, 501, 503, 506, 508, 515, 516, 518, 520, 521, 522, 523, 525, 526, 527, 530, 531, 534, 535, 536, 540, 543, 544, 548, 550, 551, 552, 553, 554, 562, 568, 569, 577, 580, 586, 589, 596, 597, 598, 600, 601, 604, 605, 606, 607, 609, 611, 612, 613, 614, 615, 616, 619, 624, 625, 626, 627, 628, 629, 631, 632, 633, 634, 635, 637, 638, 641, 642, 643, 647, 651, 652, 653, 654, 655, 659, 661, 665, 666, 668, 669, 671, 672, 674, 676, 678, 683, 684, 685, 686, 687, 688, 689, 690, 694, 698, 699, 702, 705, 706, 707, 709, 711, 712, 713, 714, 716, 717, 718, 719, 720, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 736, 738, 739, 741, 743, 744, 746, 748, 752, 753, 755, 756, 757, 758, 763, 766, 768, 770, 774, 776, 778, 780, 784, 788, 792, 795, 796, 800, 803, 815, 817, 827, 850, 851, 853, 868, 872, 874, 879, 882, 893, 894, 897, 919, 921, 922, 923, 928, 934, 937, 941, 942, 943, 952, 954, 957, 959, 960, 961, 963, 964, 966, 967, 968, 969, 970, 973, 975, 977, 978, 984, 992, 993, 995, 997, 998, 999, 1001, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1023, 1026, 1027, 1029, 1031, 1033, 1034, 1037, 1039, 1043, 1045, 1047, 1060, 1063, 1064, 1065, 1066, 1070, 1072, 1074, 1077, 1079, 1080, 1081, 1085, 1087, 1090, 1091, 1093, 1096, 1097, 1098, 1103, 1105, 1114, 1124, 1131, 1133, 1139, 1140, 1141, 1148, 1149, 1152, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1164, 1169, 1171, 1176, 1181], "664": [0, 247, 882], "5783814": 0, "gpg": 0, "kei": [0, 9, 32, 42, 98, 102, 103, 109, 125, 167, 169, 171, 183, 191, 200, 205, 210, 212, 213, 215, 220, 222, 224, 227, 228, 229, 231, 236, 237, 239, 241, 242, 244, 245, 247, 252, 254, 255, 257, 260, 264, 267, 269, 270, 274, 278, 281, 282, 285, 287, 288, 292, 302, 305, 306, 308, 309, 311, 312, 324, 328, 334, 339, 341, 346, 350, 352, 353, 363, 366, 369, 374, 402, 450, 650, 652, 655, 694, 743, 790, 864, 865, 872, 929, 933, 945, 946, 947, 949, 954, 1035, 1039, 1048, 1066, 1067, 1083, 1093, 1103, 1104, 1126, 1128, 1136, 1144, 1157, 1158, 1164, 1189, 1195], "prankergass": [0, 231, 252, 909], "33": [0, 7, 169, 182, 194, 205, 210, 215, 220, 222, 225, 228, 231, 236, 237, 241, 244, 247, 252, 254, 257, 260, 264, 267, 273, 282, 285, 289, 292, 296, 302, 306, 312, 324, 328, 334, 340, 346, 350, 363, 364, 365, 478, 499, 868, 909, 1011, 1140, 1141], "8020": [0, 231, 247, 252, 290, 478, 864, 865, 903, 909], "graz": [0, 1, 3, 23, 61, 63, 65, 151, 213, 231, 290, 323, 326, 386, 478, 864, 865, 903, 909, 1135], "uid": [0, 252, 257, 260, 328, 346, 369, 374, 788, 864, 865, 872, 882, 954, 969, 1025, 1114], "vat": [0, 216, 1199], "atu63522469": 0, "write": [0, 13, 16, 27, 29, 37, 43, 48, 53, 54, 55, 56, 57, 61, 62, 63, 71, 79, 98, 115, 119, 122, 126, 130, 131, 133, 134, 136, 138, 142, 143, 147, 156, 172, 173, 174, 183, 188, 192, 205, 208, 209, 211, 212, 213, 224, 229, 231, 232, 233, 234, 239, 241, 242, 245, 248, 250, 252, 258, 260, 269, 272, 279, 281, 288, 298, 305, 311, 323, 336, 355, 358, 360, 369, 371, 373, 375, 380, 396, 399, 400, 405, 417, 419, 441, 452, 456, 462, 463, 466, 476, 478, 501, 504, 516, 518, 521, 532, 541, 542, 553, 554, 556, 561, 572, 578, 583, 589, 594, 596, 597, 600, 610, 612, 659, 666, 675, 678, 680, 694, 699, 710, 722, 734, 743, 749, 758, 772, 778, 784, 788, 789, 790, 796, 798, 808, 810, 817, 821, 837, 853, 864, 865, 868, 874, 879, 880, 882, 883, 884, 885, 891, 893, 895, 898, 916, 928, 930, 933, 937, 941, 942, 943, 950, 957, 959, 960, 961, 964, 966, 967, 968, 969, 971, 972, 973, 974, 975, 977, 978, 981, 985, 991, 995, 1004, 1005, 1008, 1009, 1013, 1016, 1019, 1037, 1048, 1053, 1054, 1058, 1081, 1082, 1087, 1093, 1094, 1095, 1097, 1100, 1101, 1102, 1103, 1105, 1106, 1109, 1110, 1112, 1114, 1116, 1117, 1118, 1120, 1121, 1125, 1127, 1130, 1134, 1136, 1149, 1160, 1169, 1170, 1171, 1189, 1190, 1202], "review": [0, 173, 196, 207, 301, 393], "http": [0, 3, 4, 8, 13, 20, 23, 32, 37, 39, 44, 60, 61, 63, 65, 66, 86, 107, 123, 125, 137, 147, 152, 153, 158, 168, 176, 177, 178, 179, 183, 187, 189, 191, 199, 200, 201, 202, 208, 209, 212, 213, 221, 226, 232, 234, 235, 241, 247, 248, 250, 257, 260, 264, 272, 277, 279, 288, 291, 297, 298, 299, 301, 305, 311, 315, 316, 319, 323, 325, 327, 331, 333, 337, 339, 345, 349, 368, 369, 374, 389, 537, 551, 572, 614, 674, 747, 751, 756, 773, 777, 793, 808, 810, 814, 837, 838, 936, 938, 941, 977, 1023, 1025, 1080, 1091, 1147, 1149, 1164, 1165], "g": [0, 32, 48, 62, 98, 125, 138, 143, 175, 179, 183, 187, 192, 193, 195, 205, 220, 224, 233, 237, 241, 244, 247, 252, 254, 257, 260, 264, 282, 288, 296, 312, 337, 346, 391, 411, 415, 418, 421, 426, 432, 433, 434, 436, 439, 454, 458, 466, 470, 471, 478, 479, 481, 484, 490, 491, 504, 508, 516, 537, 550, 553, 596, 600, 601, 630, 650, 668, 669, 698, 702, 705, 707, 716, 736, 757, 765, 769, 774, 788, 796, 815, 837, 856, 875, 882, 897, 919, 926, 929, 936, 954, 963, 973, 993, 995, 997, 1008, 1009, 1011, 1012, 1013, 1014, 1025, 1030, 1032, 1034, 1042, 1054, 1056, 1057, 1075, 1080, 1081, 1145, 1149, 1160, 1171, 1176, 1192], "page": [0, 33, 39, 60, 73, 75, 79, 107, 125, 143, 167, 168, 169, 171, 172, 174, 175, 179, 184, 204, 209, 212, 233, 258, 288, 314, 330, 350, 376, 400, 401, 404, 449, 460, 500, 537, 790, 796, 815, 821, 823, 835, 861, 864, 865, 881, 930, 934, 943, 954, 964, 967, 995, 1143], "r": [0, 7, 13, 31, 32, 38, 43, 60, 153, 175, 177, 178, 182, 183, 191, 193, 194, 195, 204, 205, 208, 210, 211, 215, 220, 222, 225, 228, 231, 233, 237, 238, 241, 244, 247, 250, 252, 254, 257, 260, 264, 267, 270, 272, 273, 282, 285, 289, 290, 292, 302, 306, 312, 324, 328, 334, 337, 340, 346, 350, 361, 364, 369, 378, 390, 411, 436, 466, 478, 485, 499, 518, 519, 548, 552, 616, 643, 746, 754, 788, 801, 810, 815, 833, 837, 838, 868, 874, 879, 882, 893, 896, 897, 899, 919, 926, 934, 941, 942, 943, 945, 946, 954, 965, 968, 969, 977, 1011, 1012, 1013, 1023, 1025, 1026, 1033, 1054, 1059, 1062, 1068, 1079, 1085, 1091, 1123, 1149, 1171, 1207], "ctb02zug3crheb0": 0, "geboren": [1, 23], "am": [1, 3, 7, 17, 32, 37, 61, 63, 108, 150, 172, 173, 174, 175, 177, 178, 179, 180, 181, 191, 204, 216, 225, 261, 265, 292, 334, 346, 607, 744, 837, 876, 925, 930, 943, 952, 954, 969, 1079, 1183, 1184, 1186, 1199, 1202, 1206], "19": [1, 7, 23, 125, 182, 184, 193, 194, 195, 204, 210, 213, 215, 220, 222, 224, 225, 228, 231, 236, 237, 241, 244, 247, 248, 252, 254, 257, 260, 264, 267, 270, 273, 282, 285, 289, 292, 296, 302, 306, 312, 317, 324, 328, 334, 340, 346, 350, 362, 363, 364, 366, 374, 377, 386, 454, 478, 485, 754, 788, 897, 919, 943, 1014, 1023, 1055, 1061, 1125, 1126, 1127, 1128, 1131, 1132, 1133, 1135, 1140, 1141, 1145, 1153, 1164, 1169, 1171], "6": [1, 7, 32, 60, 62, 110, 123, 147, 153, 173, 175, 183, 187, 189, 192, 193, 194, 195, 205, 210, 212, 217, 220, 222, 223, 225, 228, 231, 232, 233, 235, 238, 240, 241, 244, 245, 247, 252, 254, 257, 260, 264, 267, 271, 273, 282, 285, 289, 292, 296, 302, 306, 312, 320, 324, 328, 334, 340, 346, 350, 361, 362, 364, 365, 369, 393, 394, 416, 453, 459, 470, 515, 516, 555, 556, 557, 558, 570, 589, 596, 598, 601, 604, 605, 608, 610, 613, 614, 615, 616, 634, 635, 636, 637, 643, 674, 675, 711, 757, 770, 788, 893, 916, 919, 923, 928, 934, 941, 942, 943, 957, 965, 978, 1011, 1023, 1025, 1028, 1033, 1034, 1037, 1043, 1047, 1066, 1067, 1070, 1072, 1074, 1081, 1091, 1097, 1114, 1121, 1125, 1126, 1127, 1128, 1131, 1132, 1133, 1140, 1141, 1145, 1149, 1164, 1169, 1170, 1171, 1176, 1200], "1966": [1, 23, 213, 247, 257, 267, 270, 1125, 1126, 1127, 1128, 1131, 1132, 1133, 1145], "diplom": [1, 23], "au": [1, 5, 8, 23, 32, 148, 180, 181, 189, 190, 191, 195, 205, 216, 226, 228, 235, 251, 254, 260, 261, 263, 275, 312, 328, 364, 369, 370, 387, 1184, 1186, 1187, 1188, 1193, 1199, 1202], "technisch": [1, 23, 387, 1201], "mathematik": [1, 23], "an": [1, 3, 5, 13, 17, 21, 23, 28, 31, 38, 40, 43, 45, 46, 48, 54, 55, 57, 58, 61, 63, 65, 70, 74, 75, 79, 83, 84, 86, 93, 108, 109, 111, 112, 115, 119, 122, 125, 130, 133, 138, 141, 142, 143, 160, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 202, 204, 205, 208, 210, 211, 212, 215, 223, 224, 228, 229, 231, 232, 233, 234, 236, 239, 241, 244, 245, 248, 249, 250, 252, 255, 257, 258, 260, 264, 270, 272, 273, 277, 279, 281, 288, 291, 294, 296, 297, 298, 299, 301, 305, 306, 316, 319, 323, 327, 334, 336, 345, 350, 355, 356, 380, 386, 388, 392, 394, 398, 401, 402, 415, 424, 432, 436, 439, 442, 443, 454, 457, 458, 459, 460, 462, 465, 472, 476, 478, 482, 485, 491, 494, 495, 496, 499, 500, 504, 505, 506, 515, 516, 518, 519, 520, 521, 537, 539, 543, 548, 550, 552, 553, 556, 557, 558, 570, 572, 596, 597, 599, 601, 604, 605, 606, 610, 612, 613, 614, 615, 616, 629, 634, 647, 650, 653, 654, 659, 665, 668, 669, 676, 681, 685, 687, 688, 689, 690, 694, 695, 698, 702, 706, 715, 721, 734, 736, 744, 746, 753, 754, 756, 757, 758, 764, 774, 775, 788, 789, 790, 791, 796, 801, 803, 806, 808, 815, 837, 845, 850, 863, 864, 865, 869, 870, 874, 882, 891, 896, 897, 900, 903, 922, 924, 934, 941, 943, 945, 946, 951, 954, 959, 960, 961, 962, 964, 968, 969, 970, 971, 975, 977, 978, 984, 990, 992, 993, 996, 997, 998, 999, 1005, 1009, 1011, 1012, 1017, 1021, 1026, 1027, 1030, 1031, 1034, 1040, 1041, 1042, 1046, 1047, 1051, 1052, 1054, 1056, 1057, 1058, 1062, 1063, 1064, 1066, 1070, 1076, 1085, 1086, 1087, 1091, 1093, 1106, 1112, 1113, 1114, 1130, 1136, 1138, 1140, 1141, 1142, 1143, 1148, 1149, 1152, 1157, 1158, 1162, 1164, 1169, 1170, 1172, 1181, 1183, 1184, 1186, 1187, 1188, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1200, 1202, 1203, 1207], "der": [1, 3, 5, 7, 8, 11, 154, 168, 180, 181, 182, 186, 189, 190, 191, 192, 195, 197, 199, 205, 207, 216, 217, 218, 221, 222, 225, 226, 228, 231, 235, 251, 252, 254, 260, 263, 264, 267, 275, 324, 350, 361, 369, 374, 1183, 1185, 1186, 1187, 1188, 1193, 1195, 1196, 1199, 1200, 1201, 1202, 1203, 1205, 1206, 1207], "tu": [1, 23], "iicm": [1, 23], "1993": [1, 23], "universit\u00e4tsassist": [1, 23], "ebendort": [1, 23], "bi": [1, 3, 23, 32, 180, 181, 205, 215, 312, 340, 1184, 1203], "1998": [1, 3, 23, 183, 191, 247, 595], "vorlesungen": 1, "programmieren": [1, 5, 148, 191, 195, 370, 386, 1188, 1193, 1196, 1200, 1202, 1206, 1207], "basi": [1, 3, 5, 7, 24, 79, 196, 204, 225, 234, 248, 260, 294, 364, 439, 1192, 1203, 1204], "c": [1, 3, 4, 6, 9, 12, 21, 23, 38, 42, 43, 62, 73, 74, 75, 79, 86, 88, 107, 110, 124, 133, 143, 148, 157, 167, 168, 171, 172, 173, 174, 175, 178, 185, 188, 190, 192, 200, 201, 205, 210, 211, 217, 220, 222, 227, 228, 231, 232, 241, 244, 245, 247, 251, 252, 254, 257, 260, 264, 267, 272, 273, 282, 285, 292, 298, 302, 306, 312, 315, 323, 324, 328, 331, 334, 340, 346, 350, 355, 364, 368, 370, 371, 376, 382, 383, 386, 388, 389, 390, 391, 392, 394, 398, 400, 402, 403, 404, 407, 410, 412, 414, 415, 416, 418, 422, 426, 427, 430, 431, 432, 433, 434, 438, 440, 442, 443, 444, 448, 449, 451, 452, 454, 455, 456, 458, 459, 460, 462, 463, 464, 466, 467, 468, 470, 471, 472, 473, 479, 482, 483, 484, 485, 488, 489, 490, 495, 496, 498, 499, 504, 508, 514, 516, 519, 525, 537, 540, 543, 544, 545, 546, 547, 549, 550, 552, 553, 555, 561, 595, 597, 599, 600, 601, 602, 606, 607, 608, 612, 613, 615, 617, 620, 625, 630, 632, 633, 637, 639, 643, 645, 647, 649, 650, 651, 652, 655, 657, 658, 659, 661, 662, 664, 665, 666, 667, 669, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 696, 702, 703, 707, 708, 709, 710, 711, 715, 721, 722, 733, 734, 735, 737, 738, 739, 740, 741, 742, 745, 746, 747, 748, 750, 751, 753, 754, 756, 757, 758, 759, 760, 762, 767, 768, 771, 772, 773, 774, 775, 778, 787, 788, 790, 791, 793, 796, 800, 801, 805, 806, 810, 812, 815, 817, 827, 837, 839, 840, 845, 853, 856, 861, 863, 869, 874, 876, 879, 894, 897, 919, 925, 928, 934, 935, 941, 942, 943, 955, 959, 960, 961, 966, 967, 968, 969, 970, 979, 982, 987, 995, 998, 1000, 1001, 1004, 1007, 1008, 1009, 1011, 1012, 1013, 1019, 1021, 1023, 1027, 1028, 1029, 1030, 1032, 1033, 1057, 1065, 1066, 1074, 1075, 1079, 1085, 1093, 1147, 1148, 1152, 1170, 1171, 1178, 1181, 1191, 1193, 1194, 1196, 1202, 1203, 1204, 1205, 1206, 1207], "und": [1, 3, 4, 5, 6, 7, 8, 37, 39, 148, 165, 180, 181, 186, 190, 191, 195, 197, 199, 207, 211, 217, 221, 223, 225, 230, 232, 236, 241, 252, 256, 257, 262, 264, 268, 274, 275, 292, 302, 312, 328, 341, 351, 364, 365, 369, 374, 386, 388, 424, 432, 877, 924, 925, 944, 1183, 1184, 1185, 1186, 1187, 1191, 1193, 1195, 1196, 1200, 1201, 1202, 1203, 1205, 1206, 1207], "\u00fcbertragungsprotokol": [1, 185], "forschungst\u00e4tigkeit": 1, "volltextsuch": 1, "hyperwav": [1, 3, 23], "2001": [1, 3, 23, 241, 247, 257, 260, 285], "leitung": 1, "serverprogrammierung": 1, "oo": [1, 43, 73, 74, 75, 79, 107, 125, 185, 208, 221, 223, 232, 251, 259, 262, 288, 292, 298, 300, 301, 305, 373, 382, 383, 478, 500, 542, 594, 595, 602, 665, 666, 669, 671, 672, 694, 758, 790, 829, 839, 1036, 1050, 1189, 1192], "design": [1, 3, 20, 23, 53, 57, 75, 79, 81, 83, 86, 107, 168, 169, 172, 185, 188, 208, 234, 235, 251, 297, 299, 377, 386, 388, 415, 445, 465, 466, 469, 477, 486, 493, 494, 495, 496, 498, 499, 501, 503, 515, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 542, 550, 552, 594, 595, 601, 603, 619, 691, 740, 753, 757, 758, 760, 775, 788, 789, 790, 791, 942, 1011, 1131, 1170, 1188, 1191], "analys": [1, 3, 185, 1186], "ration": [1, 3, 38, 178], "rose": [1, 3, 32], "f\u00fcr": [1, 3, 5, 148, 154, 180, 181, 186, 190, 192, 195, 216, 217, 228, 235, 251, 263, 275, 289, 369, 374, 386, 388, 899, 1183, 1184, 1186, 1193, 1199, 1200, 1202, 1205], "java": [1, 9, 215, 216, 227, 239, 248, 340, 655, 668, 753, 758, 765, 1047, 1060, 1066, 1075, 1199, 1207], "releasemanag": [1, 3, 23, 185, 1201], "cv": [1, 3, 23, 32, 168, 242, 1201], "subvers": [1, 3, 388, 919], "systemnah": [1, 3, 5, 23, 167, 185, 1001, 1004, 1008, 1202], "programmierung": [1, 3, 4, 5, 6, 8, 23, 165, 185, 239, 266, 275, 386, 1184, 1185, 1186, 1188, 1193, 1200, 1202, 1205], "unter": [1, 3, 23, 148, 154, 181, 189, 190, 207, 215, 370, 925, 1184, 1185, 1188, 1193, 1196, 1200, 1203, 1205, 1206], "unix": [1, 73, 74, 75, 79, 98, 124, 148, 169, 172, 201, 224, 288, 355, 369, 370, 371, 382, 383, 387, 404, 458, 504, 678, 769, 788, 790, 794, 796, 829, 862, 863, 864, 879, 881, 893, 921, 924, 930, 934, 937, 942, 954, 979, 995, 1005, 1061, 1085, 1114, 1184, 1185, 1187, 1191, 1193, 1195, 1196, 1200, 1202, 1203, 1204, 1206], "window": [1, 3, 32, 98, 99, 104, 105, 125, 147, 153, 160, 172, 177, 179, 189, 191, 204, 212, 229, 243, 245, 247, 258, 261, 272, 277, 279, 281, 287, 288, 300, 316, 322, 355, 366, 369, 372, 374, 387, 399, 466, 760, 763, 790, 867, 871, 897, 933, 963, 979, 984, 1059, 1061, 1062, 1085, 1136, 1171], "nt": 1, "salomon": [1, 3, 23], "friesach": [1, 3, 23], "bei": [1, 3, 5, 23, 180, 181, 186, 190, 195, 199, 205, 207, 216, 217, 220, 222, 260, 275, 361, 386, 997, 1183, 1184, 1199, 1201], "2006": [1, 3, 23, 247], "magicdraw": 1, "datenbankdesign": [1, 3], "einer": [1, 3, 148, 180, 181, 186, 191, 199, 205, 207, 216, 217, 222, 229, 364, 386, 925, 997, 1183, 1184, 1188, 1199, 1200, 1205], "objektrelationalen": [1, 3], "datenbankschnittstel": [1, 3], "sp\u00e4ter": [1, 180, 190, 261, 1186], "softwarearchitekt": 1, "leiter": [1, 23], "abteilung": [1, 216, 1199], "forschung": 1, "entwicklung": [1, 3, 4, 148, 370, 1195, 1201], "atron": [1, 3, 23], "unterpremst\u00e4tten": [1, 3, 23], "2010": [1, 3, 23, 168, 184, 247, 1060], "enterpris": 1, "architect": [1, 486, 1163], "softwarearchitektur": [1, 3, 23], "versionsmanag": 1, "ibm": 1, "clearcas": [1, 178, 1201], "massgeblich": 1, "portierung": [1, 3, 4, 185], "spielautomatensoftwar": 1, "von": [1, 3, 4, 5, 6, 7, 8, 148, 150, 154, 180, 181, 189, 190, 199, 207, 211, 212, 214, 216, 217, 220, 223, 225, 226, 228, 237, 254, 261, 266, 273, 282, 289, 324, 340, 346, 351, 369, 370, 374, 386, 388, 862, 924, 925, 1183, 1184, 1185, 1186, 1187, 1188, 1191, 1193, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206], "enea": [1, 3, 172], "os": [1, 3, 172], "nach": [1, 3, 4, 5, 148, 180, 181, 185, 186, 191, 195, 199, 215, 216, 222, 260, 261, 267, 346, 387, 859, 1183, 1199], "linux": [1, 3, 4, 6, 24, 37, 39, 43, 60, 61, 62, 63, 73, 74, 75, 79, 85, 86, 87, 88, 99, 104, 105, 107, 124, 127, 143, 148, 157, 164, 167, 168, 169, 171, 173, 174, 175, 179, 182, 183, 184, 189, 196, 199, 204, 211, 233, 234, 241, 247, 250, 257, 260, 261, 264, 269, 272, 277, 279, 281, 290, 297, 299, 300, 316, 322, 336, 340, 355, 366, 368, 369, 370, 371, 375, 376, 382, 383, 386, 388, 430, 452, 460, 469, 472, 489, 500, 514, 542, 543, 544, 545, 546, 547, 548, 549, 552, 553, 554, 580, 594, 761, 767, 788, 789, 790, 791, 793, 794, 796, 797, 799, 801, 802, 804, 806, 807, 808, 809, 810, 811, 813, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 828, 829, 830, 831, 832, 833, 834, 836, 837, 838, 841, 842, 843, 846, 847, 848, 851, 852, 854, 855, 857, 858, 860, 862, 863, 864, 865, 871, 873, 875, 878, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 897, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 917, 925, 927, 930, 934, 936, 937, 938, 942, 944, 945, 946, 947, 948, 949, 950, 952, 953, 954, 957, 959, 960, 961, 962, 963, 964, 969, 971, 972, 975, 976, 977, 978, 980, 988, 991, 994, 996, 1001, 1004, 1005, 1008, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1026, 1027, 1028, 1029, 1059, 1061, 1124, 1149, 1169, 1172, 1185, 1186, 1187, 1188, 1191, 1193, 1196, 1200], "beteiligt": [1, 23], "seit": [1, 5, 23, 199, 205, 215, 220, 1184, 1193], "april": [1, 3, 23], "selbstst\u00e4ndig": [1, 23], "fh": [1, 23, 98, 107, 110, 111, 112, 124, 125, 142, 143, 147, 151, 177, 224, 353, 366, 368, 369, 374, 375, 377, 542, 553, 574, 594, 602, 617, 677, 691, 790, 867, 871, 886, 892, 911, 917, 933, 1018, 1021, 1178], "joanneum": [1, 151, 177, 1178], "kapfenberg": 1, "2011": [1, 3, 5, 168, 169, 184, 297, 299, 386, 390, 595, 694], "2015": [1, 23, 232, 258, 296, 327, 386, 701, 1136], "lehrveranstaltung": [1, 370], "im": [1, 3, 5, 8, 29, 32, 38, 91, 148, 180, 181, 190, 191, 195, 199, 204, 205, 207, 208, 211, 213, 216, 217, 220, 222, 226, 228, 229, 235, 236, 239, 242, 243, 245, 248, 251, 255, 256, 257, 263, 264, 266, 268, 269, 271, 284, 286, 291, 293, 294, 298, 300, 301, 304, 305, 307, 310, 311, 313, 322, 323, 325, 326, 327, 329, 332, 338, 339, 344, 345, 347, 348, 349, 351, 355, 356, 357, 358, 359, 360, 369, 374, 790, 1036, 1058, 1093, 1094, 1095, 1105, 1108, 1116, 1117, 1119, 1120, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1141, 1149, 1150, 1171, 1184, 1187, 1193, 1195, 1199, 1200, 1202, 1203, 1206, 1207], "lehrgang": 1, "softwar": [1, 5, 13, 23, 24, 41, 46, 47, 51, 53, 55, 56, 69, 74, 75, 79, 86, 98, 105, 125, 136, 142, 148, 171, 179, 182, 183, 188, 199, 205, 211, 215, 224, 241, 247, 248, 257, 258, 260, 285, 297, 299, 300, 301, 314, 330, 366, 387, 388, 454, 486, 494, 495, 504, 506, 672, 758, 790, 791, 821, 868, 881, 933, 934, 941, 942, 957, 1009, 1018, 1021, 1091, 1138, 1191, 1192, 1194, 1207], "avl": [1, 23, 169], "2018": [1, 23, 175, 247, 699], "2019": [1, 40, 149, 168, 210, 232, 281, 305, 323, 326, 327, 386, 572, 699, 740, 919, 1135, 1136, 1138], "linuxexpert": [1, 23], "architekt": [1, 23], "build": [1, 4, 17, 28, 40, 42, 44, 50, 73, 74, 75, 79, 85, 88, 98, 105, 109, 125, 148, 152, 162, 168, 172, 177, 178, 184, 188, 199, 202, 212, 233, 250, 253, 277, 279, 281, 288, 297, 299, 302, 309, 314, 315, 330, 331, 336, 372, 375, 376, 387, 388, 391, 432, 445, 460, 472, 484, 485, 486, 488, 490, 500, 514, 520, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 572, 577, 580, 594, 685, 722, 742, 752, 766, 790, 794, 797, 799, 802, 804, 806, 807, 814, 816, 817, 818, 822, 828, 833, 834, 839, 841, 846, 852, 855, 858, 894, 933, 942, 943, 967, 968, 969, 970, 984, 1003, 1007, 1011, 1014, 1018, 1021, 1022, 1026, 1073, 1084, 1091, 1164, 1169, 1175, 1179, 1184, 1189, 1191], "manag": [1, 5, 14, 23, 29, 62, 69, 73, 74, 75, 79, 95, 98, 109, 148, 171, 173, 182, 187, 188, 196, 199, 201, 204, 208, 211, 212, 218, 219, 223, 228, 229, 232, 234, 244, 250, 253, 258, 260, 261, 267, 270, 285, 292, 299, 301, 302, 305, 306, 309, 327, 328, 334, 336, 337, 340, 346, 351, 372, 373, 375, 382, 383, 387, 388, 449, 466, 477, 495, 508, 566, 572, 597, 602, 691, 702, 703, 705, 734, 739, 750, 751, 753, 754, 755, 759, 767, 787, 789, 790, 808, 814, 821, 823, 846, 852, 855, 858, 868, 872, 873, 928, 933, 942, 950, 962, 995, 996, 1009, 1025, 1036, 1045, 1064, 1089, 1093, 1134, 1135, 1136, 1137, 1138, 1142, 1150, 1152, 1164, 1166, 1168, 1169, 1173, 1178, 1189, 1191, 1194, 1201], "schittstel": 1, "zum": [1, 3, 5, 148, 180, 181, 190, 195, 199, 205, 215, 228, 235, 252, 312, 387, 1184, 1186, 1187, 1188, 1200, 1203, 1205], "weiser": 1, "alter": [1, 207, 208, 258, 281, 387, 598, 606, 924, 1136], "mann": 1, "2020": [1, 23, 125, 143, 147, 149, 168, 169, 175, 179, 180, 184, 187, 191, 210, 212, 247, 386, 553, 554, 702, 715, 864, 865, 944, 953, 971, 1060, 1135, 1140, 1178, 1200], "embed": [1, 3, 4, 5, 23, 73, 88, 105, 116, 151, 167, 168, 169, 172, 174, 188, 212, 214, 237, 336, 367, 372, 374, 386, 388, 760, 770, 783, 789, 790, 825, 837, 875, 897, 943, 954, 995, 1011, 1038, 1079, 1185, 1186, 1187, 1191, 1192, 1195, 1196, 1200, 1204], "comput": [1, 23, 28, 29, 32, 73, 85, 88, 102, 116, 138, 151, 175, 214, 264, 273, 297, 299, 323, 324, 354, 367, 369, 372, 374, 386, 395, 468, 473, 474, 499, 596, 606, 609, 615, 648, 744, 757, 769, 790, 859, 866, 934, 942, 944, 945, 952, 979, 993, 996, 1060, 1149, 1164, 1194], "electron": [1, 177, 387, 942], "engin": [1, 148, 175, 248, 250, 316, 319, 387, 458, 462, 466, 476, 507, 540, 548, 942, 1058, 1207], "kontakt": [2, 23], "curriculum": [2, 5], "vita": [2, 5], "skill": [2, 86, 168, 995, 1058], "projekt": [2, 169, 190, 1196, 1200], "stand": [3, 182, 231, 372, 837, 943, 1027, 1144], "j\u00e4nner": [3, 23], "2014": [3, 169, 190, 211, 247, 281, 296, 305, 327, 939, 1136], "devicedriv": 3, "die": [3, 5, 7, 8, 37, 45, 61, 63, 65, 148, 154, 168, 181, 186, 189, 190, 191, 192, 195, 199, 205, 207, 215, 216, 218, 220, 222, 225, 226, 228, 231, 235, 244, 251, 254, 257, 260, 263, 264, 267, 292, 320, 346, 364, 369, 370, 374, 387, 388, 522, 536, 924, 925, 997, 1136, 1183, 1184, 1185, 1186, 1187, 1188, 1193, 1195, 1199, 1200, 1201, 1202, 1203, 1205, 1206, 1207], "pci": [3, 219, 790, 814, 815, 876, 933, 941, 977, 1194], "hardwar": [3, 5, 65, 70, 73, 74, 75, 79, 81, 138, 142, 157, 161, 171, 172, 175, 185, 188, 247, 248, 260, 297, 300, 301, 322, 326, 355, 370, 371, 372, 387, 388, 404, 415, 418, 454, 472, 476, 546, 547, 548, 549, 553, 769, 790, 817, 837, 868, 873, 874, 933, 934, 935, 936, 939, 942, 958, 960, 961, 974, 977, 1009, 1183, 1192, 1194, 1200], "ein": [3, 5, 7, 8, 37, 148, 180, 181, 186, 189, 190, 191, 192, 195, 197, 199, 207, 211, 212, 214, 215, 216, 218, 220, 222, 223, 225, 226, 228, 229, 231, 235, 237, 241, 244, 245, 251, 252, 254, 257, 260, 261, 263, 264, 267, 275, 282, 285, 292, 302, 306, 312, 320, 324, 328, 334, 340, 350, 361, 364, 369, 374, 387, 388, 432, 560, 863, 924, 925, 997, 1065, 1183, 1184, 1185, 1186, 1187, 1188, 1191, 1193, 1196, 1199, 1201, 1202, 1203, 1204, 1205, 1206, 1207], "messger\u00e4teherstel": 3, "de": [3, 5, 7, 8, 32, 37, 148, 168, 180, 182, 186, 189, 190, 195, 199, 205, 207, 215, 216, 225, 226, 235, 251, 260, 263, 267, 369, 386, 463, 756, 773, 777, 859, 861, 925, 938, 1135, 1161, 1183, 1184, 1185, 1186, 1188, 1193, 1195, 1199, 1200, 1202, 1203, 1205, 1206, 1207], "untenstehenden": 3, "zeit": [3, 5, 181, 216, 334, 1184, 1186, 1206], "dato": 3, "ort": 3, "raum": [3, 195], "anbindung": 3, "verschieden": [3, 23, 205, 387, 1185, 1186, 1187, 1193, 1200, 1205], "hardwareinterfac": 3, "i2c": [3, 4, 79, 82, 86, 157, 160, 172, 173, 199, 212, 288, 372, 375, 380, 387, 493, 523, 582, 583, 591, 790, 837, 933, 940, 942, 977, 1193, 1200], "spi": [3, 4, 79, 172, 190, 199, 387, 582, 583, 591, 935, 936, 937, 942, 977, 1193, 1200], "can": [3, 12, 17, 29, 57, 58, 65, 69, 76, 81, 84, 109, 111, 112, 125, 126, 133, 137, 153, 166, 169, 171, 172, 173, 174, 176, 177, 178, 179, 183, 187, 188, 189, 192, 194, 196, 200, 201, 202, 204, 208, 209, 210, 224, 231, 233, 241, 244, 247, 248, 250, 257, 260, 264, 267, 270, 288, 291, 294, 296, 297, 299, 302, 306, 312, 314, 327, 328, 330, 334, 340, 355, 361, 363, 366, 369, 374, 380, 387, 392, 394, 398, 402, 406, 412, 415, 426, 430, 436, 437, 440, 447, 452, 454, 458, 459, 460, 461, 462, 465, 466, 470, 471, 472, 476, 478, 479, 481, 487, 489, 490, 496, 501, 504, 505, 508, 515, 516, 520, 521, 522, 534, 538, 547, 554, 580, 586, 596, 598, 603, 605, 606, 611, 612, 619, 630, 634, 650, 651, 656, 665, 669, 672, 676, 681, 686, 688, 689, 690, 699, 701, 704, 705, 706, 707, 711, 716, 740, 743, 744, 746, 752, 753, 756, 757, 758, 761, 764, 766, 770, 786, 788, 790, 796, 808, 823, 827, 831, 835, 837, 842, 845, 851, 863, 864, 865, 868, 869, 870, 872, 874, 875, 876, 877, 879, 880, 882, 887, 889, 891, 893, 895, 897, 898, 933, 934, 940, 941, 942, 943, 946, 948, 950, 952, 953, 954, 961, 963, 967, 971, 980, 982, 993, 996, 997, 1005, 1009, 1013, 1023, 1028, 1030, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1042, 1045, 1046, 1047, 1054, 1055, 1057, 1058, 1063, 1066, 1067, 1070, 1075, 1077, 1083, 1085, 1087, 1091, 1093, 1100, 1110, 1121, 1131, 1132, 1133, 1135, 1141, 1143, 1148, 1149, 1155, 1157, 1162, 1164, 1169, 1189, 1191, 1193, 1200, 1204, 1206], "custom": [3, 27, 29, 32, 39, 98, 157, 161, 165, 168, 172, 175, 177, 178, 184, 188, 201, 209, 211, 213, 241, 247, 250, 257, 260, 261, 288, 290, 297, 299, 324, 355, 356, 357, 358, 360, 368, 369, 387, 476, 481, 500, 514, 542, 545, 548, 550, 552, 572, 594, 596, 602, 667, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 703, 722, 724, 734, 739, 750, 759, 767, 775, 787, 789, 790, 810, 837, 953, 984, 1009, 1135, 1177], "firmwar": [3, 127, 129, 143, 160, 172, 173, 175, 182, 191, 934, 941, 977], "kunden": [3, 5, 23, 186, 290, 387, 1183], "dezemb": [3, 23], "2012": [3, 23, 168, 184, 247], "backport": 3, "integr": [3, 16, 23, 38, 43, 65, 123, 135, 143, 169, 177, 179, 187, 199, 204, 224, 314, 323, 330, 371, 376, 377, 378, 466, 492, 495, 499, 711, 790, 810, 819, 876, 897, 934, 936, 942, 943, 1161, 1169, 1172, 1191, 1193, 1200], "touchcontrol": 3, "driver": [3, 5, 79, 86, 157, 160, 172, 175, 177, 185, 188, 189, 288, 370, 371, 386, 388, 472, 790, 791, 793, 794, 796, 797, 798, 799, 800, 801, 802, 804, 806, 807, 808, 809, 811, 812, 813, 816, 817, 818, 820, 821, 822, 824, 826, 828, 830, 831, 832, 834, 836, 837, 838, 841, 843, 846, 848, 852, 855, 858, 868, 873, 876, 933, 942, 943, 963, 977, 1184, 1204, 1206], "systemintegrationsfirma": 3, "stuttgart": 3, "mai": [3, 43, 109, 111, 112, 126, 142, 160, 172, 176, 178, 183, 187, 231, 241, 247, 254, 257, 260, 264, 270, 297, 306, 334, 350, 402, 409, 411, 415, 424, 481, 485, 518, 603, 656, 754, 764, 768, 788, 819, 821, 829, 837, 870, 879, 884, 885, 897, 942, 943, 965, 967, 968, 969, 971, 1026, 1027, 1035, 1077, 1161, 1171], "2013": [3, 23, 168, 386], "python": [3, 4, 6, 7, 10, 13, 21, 23, 24, 28, 29, 40, 60, 65, 67, 73, 75, 79, 86, 92, 93, 135, 147, 151, 152, 153, 167, 168, 169, 185, 187, 188, 191, 193, 201, 216, 217, 221, 224, 225, 226, 228, 231, 233, 240, 241, 247, 256, 257, 260, 264, 267, 288, 290, 299, 355, 356, 357, 358, 359, 360, 364, 365, 368, 370, 371, 376, 377, 378, 382, 383, 384, 386, 388, 400, 552, 693, 711, 730, 742, 748, 765, 790, 791, 897, 919, 933, 935, 940, 941, 982, 1030, 1031, 1032, 1033, 1035, 1037, 1038, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1050, 1054, 1055, 1061, 1065, 1069, 1070, 1076, 1078, 1080, 1081, 1083, 1086, 1087, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1137, 1138, 1139, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1151, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1167, 1168, 1169, 1171, 1172, 1173, 1189, 1193, 1199, 1200, 1207], "programm": [3, 61, 63, 190, 191, 195, 204, 215, 220, 224, 228, 260, 285, 297, 298, 299, 326, 340, 364, 370, 387, 436, 449, 456, 462, 466, 596, 598, 599, 668, 702, 736, 739, 873, 879, 930, 942, 963, 997, 1058, 1059, 1063, 1085, 1143, 1150, 1163, 1186, 1189, 1194, 1202, 1203, 1205, 1207], "zur": [3, 180, 195, 199, 207, 217, 228, 364, 369, 374, 387, 997, 1184, 1186, 1187, 1188, 1200, 1205, 1206, 1207], "IT": [3, 288, 290, 387, 600, 1088], "wie": [3, 5, 148, 180, 181, 189, 190, 191, 195, 199, 205, 207, 215, 220, 223, 230, 254, 350, 364, 387, 1183, 1184, 1186, 1187, 1188, 1193, 1196, 1200, 1201, 1203, 1205, 1206], "beispiel": [3, 5, 23, 148, 191, 215, 216, 238, 244, 265, 387, 1186, 1187, 1188, 1199, 1200, 1202, 1203, 1205, 1207], "e": [3, 5, 7, 32, 37, 38, 42, 48, 62, 98, 125, 137, 138, 143, 175, 177, 178, 179, 180, 181, 183, 186, 187, 189, 190, 191, 193, 194, 195, 199, 205, 207, 215, 216, 220, 222, 224, 225, 228, 231, 232, 233, 236, 237, 241, 244, 245, 247, 250, 252, 254, 257, 260, 261, 264, 267, 270, 273, 282, 285, 288, 289, 292, 294, 296, 302, 306, 312, 324, 328, 334, 337, 340, 346, 350, 362, 363, 364, 365, 369, 374, 387, 391, 408, 411, 415, 418, 421, 426, 436, 439, 454, 458, 462, 465, 466, 478, 479, 481, 484, 490, 491, 495, 504, 508, 516, 521, 525, 537, 550, 553, 554, 589, 596, 600, 601, 611, 619, 630, 650, 668, 669, 683, 688, 695, 698, 702, 705, 716, 722, 736, 757, 766, 768, 769, 774, 788, 796, 815, 856, 863, 864, 865, 874, 875, 879, 880, 881, 882, 897, 919, 926, 941, 942, 943, 954, 963, 973, 975, 993, 996, 997, 1008, 1009, 1011, 1013, 1014, 1025, 1030, 1034, 1042, 1054, 1056, 1057, 1075, 1080, 1081, 1105, 1145, 1149, 1154, 1157, 1160, 1163, 1169, 1171, 1183, 1184, 1186, 1188, 1192, 1193, 1199, 1200, 1202, 1203, 1205, 1207], "bill": [3, 292], "email": [3, 32, 42, 150, 173, 179, 183, 188, 212, 228, 292, 380, 950, 1149, 1153, 1154, 1155, 1157, 1158, 1159], "kommunik": [3, 23, 1200, 1203, 1205, 1206, 1207], "extrakt": 3, "attach": [3, 193, 241, 247, 257, 260, 499, 819, 942, 995, 1143], "signaturverifik": 3, "informationssystem": 3, "februar": 3, "juni": 3, "vollautomatisch": 3, "instal": [3, 29, 32, 45, 59, 91, 98, 99, 105, 125, 142, 147, 152, 168, 169, 172, 173, 177, 199, 202, 208, 209, 211, 213, 224, 239, 241, 242, 245, 247, 250, 255, 257, 260, 261, 269, 272, 281, 284, 291, 294, 297, 298, 299, 304, 305, 309, 310, 311, 315, 316, 326, 331, 332, 333, 338, 339, 344, 348, 349, 407, 422, 431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 482, 483, 489, 500, 514, 542, 543, 544, 545, 546, 547, 548, 549, 552, 559, 561, 566, 594, 602, 617, 620, 623, 639, 645, 649, 658, 661, 662, 667, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 696, 703, 734, 750, 759, 767, 775, 787, 789, 790, 810, 817, 833, 837, 838, 876, 933, 936, 941, 943, 1008, 1010, 1013, 1016, 1018, 1021, 1042, 1058, 1062, 1089, 1134, 1147, 1154, 1164, 1165, 1172, 1177, 1179], "serveranlagen": 3, "herstel": 3, "radar\u00fcberwachungssystemen": 3, "septemb": 3, "unterschleissheim": 3, "m\u00fcnchen": 3, "instandhaltungsarbeiten": 3, "hauseigenen": 3, "system": [3, 5, 14, 23, 37, 45, 74, 79, 81, 98, 102, 103, 109, 111, 112, 125, 138, 147, 148, 153, 168, 169, 172, 173, 178, 179, 183, 185, 187, 188, 189, 190, 196, 199, 201, 202, 212, 224, 229, 232, 239, 241, 244, 245, 249, 250, 255, 257, 258, 260, 267, 270, 276, 277, 278, 285, 287, 292, 297, 302, 305, 306, 308, 328, 334, 340, 347, 352, 366, 369, 370, 371, 372, 373, 374, 380, 382, 383, 386, 388, 422, 431, 438, 442, 444, 448, 451, 455, 462, 463, 464, 468, 469, 473, 474, 476, 481, 484, 486, 499, 500, 507, 520, 542, 553, 594, 629, 672, 696, 734, 767, 768, 769, 787, 788, 789, 790, 793, 796, 808, 810, 829, 835, 837, 867, 868, 869, 870, 871, 872, 873, 875, 876, 877, 880, 881, 883, 884, 885, 887, 888, 889, 890, 891, 894, 897, 923, 924, 928, 933, 937, 942, 943, 944, 949, 955, 959, 960, 961, 962, 964, 967, 969, 972, 973, 975, 976, 977, 978, 988, 991, 994, 996, 997, 999, 1005, 1008, 1009, 1011, 1012, 1013, 1034, 1035, 1046, 1062, 1091, 1136, 1171, 1185, 1192, 1194, 1195], "auf": [3, 5, 8, 23, 148, 154, 168, 173, 181, 186, 189, 190, 191, 195, 199, 205, 207, 215, 216, 220, 226, 228, 235, 236, 251, 254, 261, 263, 275, 350, 364, 369, 370, 374, 387, 925, 1183, 1184, 1185, 1186, 1187, 1188, 1193, 1195, 1196, 1199, 1203, 1206, 1207], "gentoo": [3, 168, 171, 184, 472, 1184], "updat": [3, 44, 137, 142, 171, 173, 187, 191, 219, 244, 252, 267, 277, 279, 285, 292, 297, 299, 306, 312, 324, 340, 346, 350, 369, 376, 551, 553, 614, 847, 995, 1025, 1026, 1027, 1028, 1029, 1083, 1085, 1160, 1172, 1178, 1201], "betriebssystem": [3, 1193, 1195, 1200, 1202], "usb": [3, 4, 62, 171, 172, 173, 175, 387, 465, 815, 868, 1193], "touchscreen": 3, "cheat": [3, 33, 212, 224, 469, 722, 897], "detect": [3, 32, 107, 192, 204, 434, 437, 471, 479, 577, 604, 707, 732, 753, 831, 942, 943, 969, 978, 1001, 1012, 1013, 1115], "m\u00fcnzeinwurf": 3, "via": [3, 17, 62, 86, 128, 134, 135, 148, 172, 175, 179, 184, 193, 208, 209, 231, 237, 258, 260, 288, 291, 294, 297, 306, 323, 368, 375, 387, 496, 501, 521, 606, 630, 741, 755, 790, 817, 837, 840, 868, 873, 879, 894, 930, 941, 952, 953, 960, 967, 977, 998, 1005, 1023, 1090, 1189], "gpio": [3, 4, 61, 63, 65, 73, 74, 75, 79, 85, 125, 126, 127, 129, 134, 135, 136, 147, 169, 288, 297, 327, 359, 372, 374, 378, 790, 814, 839, 841, 846, 852, 855, 858, 933, 938, 942, 974, 978, 1193, 1200], "interrupt": [3, 62, 87, 111, 112, 190, 219, 288, 472, 790, 808, 814, 829, 831, 832, 834, 835, 839, 840, 841, 845, 846, 849, 852, 855, 856, 858, 868, 870, 873, 876, 933, 938, 955, 957, 958, 959, 960, 961, 962, 974, 976, 977, 993, 996, 997, 999, 1008, 1009, 1193, 1194, 1200], "m\u00e4rz": 3, "firma": [3, 186, 195, 290, 386, 1183, 1193, 1200], "spielo": 3, "intern": [3, 57, 85, 126, 130, 131, 136, 142, 205, 210, 233, 241, 244, 245, 247, 257, 260, 291, 294, 323, 362, 376, 405, 435, 450, 465, 481, 490, 495, 609, 650, 697, 740, 784, 788, 815, 823, 849, 941, 942, 943, 984, 1035, 1039, 1083, 1093, 1149, 1154], "datenkonvertierung": 3, "einem": [3, 5, 23, 148, 180, 190, 191, 195, 199, 205, 207, 215, 216, 220, 222, 228, 254, 260, 267, 282, 369, 370, 374, 387, 1184, 1186, 1188, 1193, 1202, 1206, 1207], "konvertierung": [3, 23, 1186], "asterix": 3, "format": [3, 17, 23, 29, 30, 31, 42, 51, 53, 54, 55, 56, 91, 130, 131, 133, 150, 175, 191, 192, 194, 195, 202, 209, 211, 213, 216, 220, 229, 232, 239, 240, 242, 248, 253, 254, 258, 260, 261, 266, 269, 270, 281, 284, 285, 290, 304, 305, 306, 310, 311, 313, 319, 322, 323, 326, 327, 332, 333, 334, 339, 341, 344, 345, 348, 349, 392, 393, 398, 434, 478, 790, 791, 837, 868, 874, 897, 957, 1011, 1050, 1058, 1095, 1105, 1108, 1116, 1117, 1119, 1120, 1129, 1130, 1131, 1132, 1134, 1136, 1141, 1152, 1164, 1199, 1203], "zweck": [3, 205, 1200], "extern": [3, 13, 21, 23, 29, 62, 86, 171, 175, 179, 201, 204, 211, 233, 234, 239, 250, 255, 260, 269, 290, 305, 315, 323, 331, 369, 374, 402, 406, 432, 434, 436, 438, 444, 448, 451, 455, 459, 464, 468, 473, 474, 483, 484, 580, 696, 734, 740, 787, 789, 790, 794, 797, 799, 802, 804, 807, 810, 814, 815, 816, 818, 822, 828, 834, 837, 841, 846, 847, 852, 855, 858, 933, 943, 993, 1059, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1134, 1136, 1176, 1178, 1186, 1193, 1200], "datenquellen": 3, "export": [3, 40, 60, 138, 142, 172, 183, 208, 233, 234, 237, 239, 340, 355, 740, 793, 869, 898, 934, 942, 975, 977, 978, 1023, 1025, 1028, 1127, 1144], "daten": [3, 205, 207, 220, 230, 235, 320, 997, 1206], "soap": [3, 32], "ip": [3, 150, 176, 179, 189, 196, 224, 350, 366, 369, 375, 380, 577, 589, 936, 954, 960, 996, 1164, 1193, 1200, 1204, 1206], "kamera": 3, "einen": [3, 5, 23, 180, 181, 191, 195, 199, 205, 207, 215, 228, 264, 387, 655, 924, 1183, 1184, 1185, 1186, 1188, 1195, 1203, 1205, 1206, 1207], "videomautsystemen": 3, "implement": [3, 16, 23, 24, 28, 42, 50, 53, 54, 55, 61, 62, 63, 70, 83, 85, 86, 98, 111, 112, 115, 121, 123, 125, 141, 157, 172, 174, 177, 192, 200, 208, 210, 228, 233, 234, 241, 247, 251, 254, 255, 257, 262, 264, 279, 285, 294, 297, 298, 299, 300, 301, 306, 322, 326, 337, 356, 357, 362, 369, 380, 403, 405, 437, 447, 449, 450, 466, 476, 481, 488, 491, 492, 494, 495, 496, 498, 499, 500, 503, 504, 506, 515, 516, 520, 521, 522, 537, 541, 543, 544, 545, 546, 547, 549, 550, 551, 555, 556, 557, 558, 560, 562, 567, 570, 571, 595, 597, 601, 605, 613, 614, 615, 616, 621, 650, 656, 665, 667, 668, 669, 676, 684, 685, 686, 687, 688, 689, 690, 691, 697, 702, 703, 704, 706, 716, 731, 732, 733, 734, 740, 741, 743, 752, 756, 758, 760, 766, 781, 784, 785, 788, 789, 790, 796, 803, 806, 823, 851, 868, 870, 874, 876, 934, 941, 943, 954, 957, 963, 979, 984, 1005, 1029, 1033, 1034, 1039, 1040, 1041, 1047, 1051, 1075, 1111, 1115, 1124, 1131, 1136, 1145, 1148, 1152, 1189, 1194], "gige": 3, "vision": [3, 290, 387], "clientlibrari": 3, "softwarebasiert": 3, "kamerasimul": 3, "t\u00e4tigkeiten": 3, "hardwareteil": 3, "rs232": [3, 4, 212], "lagesensor": 3, "anpassung": 3, "cryptsetup": 3, "filesystemverschl\u00fcsselung": 3, "anforderungen": [3, 1183], "applik": [3, 189], "august": [3, 23], "logistik": 3, "autom": [3, 211, 224, 255, 269, 311, 387, 934, 945, 952, 1025, 1027, 1035, 1136], "beteiligten": 3, "protokol": [3, 4, 1193, 1200, 1205], "server": [3, 150, 176, 179, 185, 191, 212, 224, 235, 244, 260, 267, 270, 281, 285, 292, 302, 306, 328, 334, 340, 346, 472, 518, 532, 863, 937, 950, 952, 960, 1005, 1148, 1164, 1181, 1200], "zu": [3, 6, 8, 148, 180, 181, 186, 189, 190, 195, 199, 205, 216, 217, 220, 222, 226, 235, 236, 251, 252, 261, 263, 267, 275, 282, 369, 374, 387, 859, 1183, 1184, 1185, 1186, 1187, 1188, 1193, 1196, 1199, 1200, 1201, 1202, 1203, 1205, 1206, 1207], "sp": [3, 704], "tcp": [3, 172, 179, 196, 212, 317, 935, 960, 1152, 1193, 1200, 1204, 1206], "autonomen": 3, "fahrzeugen": 3, "kundenapplikationen": 3, "autonom": [3, 214, 934, 1143], "fahrzeug": 3, "mikrocontrol": 3, "seriel": [3, 4, 1193, 1195], "beratend": 3, "versionskontrol": [3, 23, 185, 1201], "architektur": [3, 23, 185, 387], "2008": [3, 183, 247, 1060], "ylog": [3, 23], "gmbh": [3, 23, 478], "dobl": [3, 23], "heizsystem": 3, "parametrisierung": 3, "anlag": [3, 220], "mit": [3, 4, 5, 7, 8, 23, 168, 180, 181, 189, 190, 191, 195, 197, 199, 207, 211, 212, 216, 217, 218, 221, 222, 225, 226, 228, 235, 236, 237, 238, 251, 260, 261, 263, 264, 267, 275, 306, 350, 365, 369, 370, 374, 386, 388, 924, 1091, 1183, 1185, 1186, 1187, 1188, 1193, 1195, 1199, 1201, 1202, 1203, 1205, 1206, 1207], "iar": 3, "arm": [3, 171, 183, 224, 410, 817, 837, 838, 941, 954, 1008, 1011, 1012, 1023], "workbench": 3, "segger": [3, 172], "embo": [3, 172], "vba": 3, "excel": [3, 79, 173, 211, 237, 1127, 1141], "verteilung": 3, "microsoft": [3, 11, 178, 179, 182, 184, 188, 199, 207, 277, 279, 288, 297, 299, 387, 389, 437, 453, 876, 1127, 1183], "net": [3, 23, 39, 43, 125, 143, 147, 158, 189, 190, 215, 267, 273, 340, 477, 553, 554, 831, 837, 864, 865, 925, 960, 1149], "versionskontrollinfrastruktur": 3, "assoziiert": [3, 191, 1202, 1203], "script": [3, 38, 60, 162, 165, 168, 171, 173, 178, 179, 188, 203, 211, 212, 214, 239, 241, 247, 257, 260, 287, 288, 308, 352, 360, 369, 386, 388, 470, 478, 489, 740, 837, 879, 882, 897, 1025, 1036, 1062, 1063, 1087, 1091, 1171, 1184, 1195], "shell": [3, 4, 32, 98, 100, 102, 105, 125, 147, 148, 188, 192, 211, 212, 214, 252, 260, 278, 287, 308, 328, 340, 352, 354, 355, 368, 369, 370, 371, 374, 386, 388, 390, 472, 478, 500, 514, 542, 543, 544, 545, 546, 547, 548, 549, 552, 594, 767, 788, 789, 790, 837, 860, 864, 865, 866, 867, 870, 871, 872, 874, 875, 878, 879, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 897, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 912, 913, 914, 915, 925, 926, 927, 930, 933, 934, 944, 945, 946, 947, 948, 956, 962, 963, 964, 972, 974, 977, 978, 988, 991, 994, 996, 1011, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1025, 1061, 1062, 1064, 1085, 1087, 1114, 1176, 1184, 1191, 1193, 1195, 1196, 1200, 1201, 1202, 1204], "oststeiermark": 3, "erweiterung": [3, 387], "buildumgebung": 3, "cmake": [3, 4, 5, 44, 73, 74, 75, 79, 88, 98, 107, 125, 169, 178, 183, 188, 199, 202, 234, 250, 277, 279, 297, 299, 372, 386, 388, 389, 480, 482, 484, 485, 488, 489, 490, 491, 492, 500, 514, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 594, 614, 790, 791, 933, 1021, 1174, 1196], "www": [3, 20, 23, 61, 63, 65, 86, 168, 178, 187, 189, 209, 212, 213, 285, 389, 756, 793, 808, 814, 838, 977, 1147, 1149], "org": [3, 4, 23, 60, 66, 153, 158, 164, 168, 171, 175, 179, 183, 189, 191, 202, 212, 215, 232, 241, 247, 248, 257, 260, 264, 285, 298, 325, 350, 373, 389, 793, 808, 810, 814, 837, 838, 977, 1023, 1025, 1059, 1080, 1091, 1130, 1147, 1164, 1165], "confix": [3, 169], "2009": [3, 1136], "schulungen": [3, 6, 23, 168, 169, 186], "dem": [3, 5, 8, 23, 148, 180, 181, 189, 190, 191, 195, 199, 212, 216, 226, 235, 238, 251, 252, 261, 263, 275, 306, 346, 369, 374, 387, 388, 997, 1183, 1184, 1185, 1187, 1188, 1193, 1195, 1202, 1203, 1205], "umkrei": 3, "softwareentwicklung": [3, 4, 185], "nicht": [3, 5, 7, 23, 37, 148, 180, 181, 186, 189, 195, 199, 216, 217, 220, 225, 228, 247, 252, 254, 260, 267, 273, 292, 302, 364, 369, 387, 925, 1184, 1185, 1186, 1187, 1188, 1193, 1195, 1196, 1199, 1200, 1201, 1202, 1205, 1206, 1207], "from": [3, 5, 8, 13, 21, 27, 33, 34, 35, 36, 39, 44, 53, 54, 56, 60, 62, 69, 74, 75, 79, 82, 83, 85, 87, 91, 98, 99, 100, 102, 103, 104, 107, 110, 111, 112, 115, 125, 126, 127, 128, 129, 131, 132, 137, 142, 147, 150, 153, 161, 165, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 185, 187, 188, 189, 191, 192, 194, 195, 200, 204, 205, 208, 209, 211, 212, 213, 214, 216, 222, 223, 224, 229, 231, 232, 233, 234, 236, 238, 239, 241, 245, 247, 248, 254, 255, 257, 258, 261, 262, 264, 267, 269, 272, 276, 277, 279, 281, 282, 284, 287, 290, 294, 297, 298, 299, 300, 301, 304, 306, 308, 309, 310, 311, 316, 319, 322, 324, 326, 327, 332, 333, 334, 336, 337, 338, 339, 344, 345, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 366, 368, 369, 371, 372, 373, 374, 376, 377, 390, 391, 397, 399, 400, 404, 407, 410, 413, 414, 415, 418, 422, 429, 431, 432, 437, 438, 444, 445, 448, 451, 452, 454, 455, 456, 458, 460, 464, 465, 466, 468, 472, 473, 474, 476, 477, 479, 480, 484, 487, 488, 489, 490, 492, 494, 495, 496, 501, 505, 515, 519, 521, 537, 538, 539, 540, 542, 545, 548, 550, 551, 552, 553, 554, 572, 580, 583, 589, 594, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 609, 611, 612, 614, 615, 625, 629, 630, 647, 659, 666, 669, 671, 677, 680, 687, 691, 694, 695, 696, 698, 702, 707, 711, 716, 722, 728, 733, 734, 746, 748, 752, 753, 754, 755, 758, 760, 766, 768, 772, 780, 785, 786, 787, 788, 789, 790, 791, 792, 793, 796, 806, 808, 812, 817, 819, 825, 829, 837, 838, 839, 840, 845, 847, 849, 857, 862, 863, 864, 865, 868, 869, 872, 873, 874, 876, 879, 880, 881, 887, 889, 894, 896, 897, 898, 899, 900, 902, 903, 916, 921, 929, 930, 933, 934, 936, 937, 938, 939, 942, 943, 946, 950, 954, 957, 958, 959, 960, 961, 964, 967, 969, 970, 972, 974, 977, 980, 985, 990, 991, 996, 997, 999, 1008, 1009, 1014, 1023, 1025, 1027, 1029, 1034, 1035, 1036, 1039, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1054, 1057, 1058, 1059, 1062, 1063, 1066, 1069, 1078, 1081, 1082, 1084, 1085, 1089, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1132, 1133, 1134, 1137, 1138, 1139, 1140, 1142, 1144, 1146, 1148, 1149, 1150, 1151, 1152, 1156, 1157, 1158, 1161, 1163, 1164, 1166, 1168, 1169, 1171, 1173, 1176, 1178, 1181, 1192, 1199], "scratch": [3, 42, 204, 941, 1143], "mathia": [3, 1184], "kettner": [3, 168], "novemb": [3, 23], "bodenseo": [3, 1200], "singen": 3, "bodense": [3, 1200], "spielesoftwar": 3, "entwurf": [3, 23], "systemschnittstellen": [3, 1202], "driverentwicklung": [3, 185], "powerpc": 3, "vanilla": [3, 175], "kernel": [3, 4, 5, 43, 60, 79, 111, 112, 150, 157, 161, 162, 167, 168, 169, 171, 172, 174, 182, 183, 184, 185, 188, 190, 205, 212, 244, 257, 260, 267, 270, 285, 288, 292, 302, 306, 328, 334, 340, 346, 355, 375, 386, 388, 430, 452, 465, 790, 791, 792, 793, 794, 796, 797, 798, 799, 800, 802, 804, 806, 807, 808, 809, 816, 817, 818, 820, 822, 823, 824, 825, 826, 827, 828, 830, 832, 833, 834, 835, 836, 841, 843, 846, 848, 849, 850, 851, 852, 855, 857, 858, 862, 868, 872, 874, 875, 876, 881, 925, 930, 933, 937, 939, 940, 942, 943, 954, 957, 960, 961, 963, 966, 977, 979, 980, 993, 995, 996, 999, 1004, 1008, 1009, 1011, 1184, 1193, 1204], "abteilungsleitung": 3, "ag": [3, 32, 177, 179, 191, 205, 247, 250, 292, 363, 461, 679, 680, 681, 682, 683, 685, 686, 687, 688, 689, 690, 691, 790, 862, 1011, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1161], "realtim": [4, 5, 79, 81, 148, 185, 188, 189, 288, 370, 371, 382, 383, 388, 766, 768, 790, 835, 839, 842, 845, 856, 933, 937, 942, 943, 974, 993, 994, 996, 1005, 1203, 1204, 1205], "hardwareintegr": [4, 185], "netzwerkprogrammierung": [4, 1193, 1206], "multithread": [4, 29, 61, 63, 73, 74, 75, 76, 79, 167, 168, 172, 174, 185, 204, 208, 239, 248, 258, 275, 297, 299, 327, 378, 382, 383, 387, 388, 453, 463, 694, 722, 760, 789, 790, 982, 987, 996, 1009, 1010, 1036, 1045, 1134, 1136, 1189, 1193, 1204], "kerneldriv": 4, "rs485": 4, "In": [4, 6, 7, 23, 42, 44, 50, 62, 65, 98, 104, 105, 107, 111, 112, 124, 125, 142, 143, 148, 153, 160, 171, 172, 173, 174, 176, 178, 181, 183, 185, 187, 188, 196, 200, 205, 210, 217, 220, 224, 225, 233, 241, 247, 250, 254, 257, 258, 260, 261, 264, 272, 288, 297, 299, 306, 315, 331, 337, 350, 354, 364, 369, 386, 410, 424, 477, 479, 482, 483, 489, 494, 499, 500, 501, 514, 515, 516, 518, 520, 521, 537, 540, 542, 543, 544, 545, 546, 547, 549, 550, 551, 552, 554, 559, 561, 594, 598, 601, 602, 605, 609, 610, 617, 620, 623, 639, 645, 649, 658, 661, 662, 667, 672, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 694, 695, 703, 707, 711, 716, 734, 741, 744, 750, 754, 759, 761, 767, 775, 787, 788, 789, 790, 798, 803, 810, 835, 837, 849, 866, 869, 870, 879, 881, 883, 887, 889, 891, 893, 908, 909, 933, 935, 941, 943, 946, 950, 953, 960, 968, 971, 974, 976, 984, 990, 995, 997, 1005, 1012, 1016, 1017, 1018, 1019, 1021, 1032, 1033, 1035, 1039, 1042, 1043, 1047, 1048, 1054, 1055, 1059, 1062, 1076, 1077, 1080, 1081, 1082, 1093, 1094, 1104, 1113, 1119, 1124, 1132, 1136, 1145, 1148, 1152, 1157, 1158, 1160, 1161, 1171, 1172, 1186, 1190, 1193, 1200, 1202], "userspac": [4, 82, 86, 87, 138, 143, 147, 157, 172, 173, 244, 260, 267, 270, 285, 288, 292, 302, 306, 328, 334, 340, 346, 387, 465, 472, 790, 795, 806, 814, 815, 823, 829, 835, 839, 845, 849, 853, 855, 873, 875, 933, 936, 940, 943, 954, 974, 976, 977, 995, 999, 1005, 1193, 1194], "host": [4, 109, 171, 178, 183, 340, 366, 380, 817, 838, 935, 941, 1012, 1014, 1023, 1147, 1152, 1164], "devic": [4, 33, 70, 73, 74, 75, 79, 85, 90, 120, 126, 143, 148, 157, 171, 172, 177, 190, 211, 219, 301, 370, 371, 372, 537, 553, 554, 764, 766, 768, 788, 790, 799, 806, 807, 808, 814, 815, 818, 819, 821, 828, 837, 839, 841, 846, 852, 853, 855, 856, 858, 870, 873, 876, 879, 919, 933, 942, 954, 957, 963, 971, 977, 996, 999, 1000, 1002, 1005, 1021, 1046, 1184, 1193, 1194, 1195, 1200], "libusb": [4, 172], "gadgetf": [4, 172], "modbu": [4, 189], "verschiedenen": [4, 23, 199, 216, 1186, 1187, 1199, 1205], "rto": [4, 172], "yocto": [4, 157, 161, 162, 183, 790, 837, 931, 1014, 1184], "programmiersprachen": [4, 8, 216, 226, 235, 251, 263, 1188, 1205], "incl": [4, 23, 169, 1195], "buildsystem": 4, "autoconf": [4, 60, 183], "automak": [4, 178, 183, 1025, 1196], "meson": [4, 178, 183, 1003, 1007, 1025], "ninja": [4, 32, 183, 479, 1013, 1025], "make": [4, 13, 17, 43, 44, 45, 60, 62, 69, 71, 79, 81, 110, 127, 128, 130, 138, 143, 153, 157, 162, 168, 169, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 187, 188, 192, 193, 196, 200, 201, 204, 208, 209, 210, 214, 223, 224, 231, 233, 234, 245, 248, 260, 264, 277, 279, 301, 306, 309, 314, 323, 330, 369, 372, 388, 421, 433, 437, 445, 452, 454, 456, 466, 472, 476, 479, 480, 481, 485, 487, 488, 490, 492, 494, 495, 496, 499, 515, 516, 521, 522, 539, 552, 554, 566, 572, 577, 583, 601, 612, 614, 616, 619, 631, 666, 668, 681, 694, 702, 707, 711, 748, 753, 754, 758, 768, 775, 784, 785, 798, 805, 806, 810, 812, 815, 817, 837, 838, 854, 866, 876, 880, 882, 903, 916, 935, 936, 941, 942, 943, 964, 967, 969, 990, 993, 995, 997, 999, 1004, 1008, 1011, 1023, 1025, 1026, 1027, 1028, 1032, 1036, 1039, 1042, 1054, 1085, 1093, 1106, 1114, 1141, 1154, 1191, 1192, 1202], "perl": [4, 183, 736, 926, 1062], "leider": [4, 180, 247, 260, 267, 282, 1184, 1186], "objektorientiert": [4, 387, 1188], "ooa": 4, "ood": 4, "unit": [4, 73, 74, 75, 79, 83, 85, 98, 107, 125, 126, 133, 147, 148, 174, 192, 207, 208, 211, 212, 223, 232, 250, 264, 289, 290, 297, 301, 314, 330, 378, 382, 383, 459, 478, 479, 492, 518, 541, 547, 551, 580, 611, 740, 768, 769, 790, 791, 943, 995, 1077, 1085, 1136, 1148, 1170, 1191, 1192], "test": [4, 16, 17, 33, 40, 73, 74, 75, 79, 83, 85, 98, 125, 128, 141, 143, 148, 168, 172, 174, 175, 177, 178, 179, 185, 188, 191, 192, 198, 199, 200, 203, 207, 208, 211, 223, 229, 232, 245, 247, 248, 250, 260, 277, 279, 299, 306, 315, 327, 331, 337, 378, 380, 382, 388, 389, 401, 463, 476, 477, 483, 487, 494, 495, 496, 497, 498, 499, 500, 503, 504, 506, 507, 516, 518, 519, 541, 543, 544, 545, 546, 547, 548, 549, 550, 552, 555, 556, 557, 558, 560, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 573, 577, 589, 591, 596, 597, 598, 609, 610, 612, 613, 615, 616, 674, 685, 686, 687, 688, 689, 690, 699, 701, 704, 705, 706, 737, 743, 748, 752, 753, 754, 755, 757, 770, 784, 785, 786, 788, 790, 791, 795, 827, 837, 840, 842, 845, 853, 897, 935, 936, 941, 964, 1019, 1027, 1058, 1067, 1077, 1081, 1084, 1105, 1130, 1136, 1142, 1143, 1148, 1156, 1175, 1177, 1179, 1182, 1192], "driven": [4, 45, 72, 79, 83, 172, 185, 188, 199, 208, 223, 250, 288, 290, 316, 319, 388, 476, 503, 613, 615, 616, 995, 1001, 1002, 1161, 1169, 1192], "develop": [4, 5, 21, 45, 72, 74, 79, 81, 83, 104, 105, 123, 148, 153, 173, 175, 177, 178, 179, 183, 185, 188, 196, 199, 207, 208, 211, 216, 223, 229, 234, 235, 242, 244, 245, 250, 255, 280, 285, 290, 315, 316, 319, 331, 368, 370, 371, 380, 386, 388, 454, 466, 472, 476, 481, 489, 500, 514, 542, 543, 544, 545, 546, 547, 548, 549, 552, 553, 554, 594, 613, 615, 616, 669, 693, 767, 789, 790, 791, 794, 797, 799, 800, 802, 804, 807, 809, 810, 811, 813, 816, 818, 820, 822, 824, 826, 828, 830, 832, 834, 836, 837, 838, 841, 843, 846, 848, 852, 855, 858, 867, 870, 871, 873, 876, 933, 935, 936, 956, 962, 964, 972, 974, 988, 991, 994, 996, 1012, 1013, 1016, 1017, 1018, 1019, 1020, 1022, 1028, 1060, 1091, 1093, 1136, 1169, 1170, 1191, 1204], "gui": [4, 126, 142, 171, 177, 183, 187, 250, 376, 377, 876, 979, 1202], "gtk": [4, 168], "qt": 4, "fast": [5, 43, 123, 179, 187, 211, 233, 248, 250, 264, 273, 323, 466, 572, 744, 758, 1083, 1165, 1201], "40": [5, 7, 23, 107, 148, 168, 175, 182, 194, 205, 215, 220, 222, 225, 228, 231, 236, 237, 241, 244, 247, 252, 254, 257, 260, 264, 267, 270, 272, 273, 282, 285, 289, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 361, 364, 400, 478, 499, 501, 515, 585, 586, 607, 753, 754, 755, 788, 919, 938, 941, 942, 943, 1023, 1037, 1038, 1062], "jahren": 5, "wesentlichen": [5, 23, 207, 1185], "programmier": [5, 37, 386, 387, 1187, 1188, 1193, 1195, 1196, 1201, 1202], "bin": [5, 13, 23, 50, 62, 123, 125, 126, 130, 133, 136, 138, 142, 168, 171, 173, 183, 192, 195, 205, 222, 232, 241, 244, 247, 252, 257, 260, 264, 267, 270, 282, 285, 290, 292, 302, 306, 328, 334, 340, 346, 350, 369, 377, 479, 480, 481, 482, 484, 485, 486, 487, 490, 492, 537, 552, 553, 815, 837, 869, 872, 874, 879, 882, 893, 897, 898, 922, 923, 928, 941, 943, 959, 966, 969, 975, 989, 990, 999, 1011, 1012, 1013, 1023, 1025, 1028, 1032, 1038, 1062, 1090, 1091, 1114, 1123, 1124, 1139, 1152, 1164, 1169, 1171, 1183], "ich": [5, 23, 154, 180, 181, 189, 190, 191, 195, 205, 215, 223, 254, 306, 369, 387, 1147, 1183, 1184, 1193, 1200, 1201, 1207], "heut": [5, 387, 1188, 1203], "feinen": 5, "situat": [5, 121, 123, 160, 172, 174, 183, 204, 231, 550, 551, 554, 566, 628, 705, 831, 837, 888, 890, 934, 950, 969, 997, 1014, 1023, 1026, 1027, 1075, 1184, 1189], "repertoir": [5, 8, 28, 187, 216, 226, 500], "schulungsmateri": [5, 23], "anbieten": 5, "k\u00f6nnen": [5, 23, 148, 186, 189, 199, 205, 217, 230, 369, 370, 374, 387, 925, 1183, 1185, 1186, 1196, 1206, 1207], "da": [5, 7, 8, 154, 180, 181, 186, 189, 190, 191, 192, 199, 207, 211, 215, 216, 220, 223, 225, 226, 228, 232, 235, 236, 237, 241, 244, 251, 252, 254, 257, 260, 261, 263, 265, 273, 275, 282, 292, 302, 306, 324, 327, 334, 336, 340, 350, 361, 364, 369, 374, 387, 925, 1183, 1184, 1185, 1186, 1187, 1188, 1193, 1195, 1199, 1200, 1201, 1202, 1203, 1206, 1207], "sich": [5, 23, 37, 148, 180, 181, 186, 189, 190, 191, 195, 205, 207, 215, 236, 254, 257, 267, 370, 1183, 1184, 1186, 1187, 1188, 1193, 1196, 1200, 1201, 1202, 1205, 1206, 1207], "jahrelangen": 5, "erfahrung": [5, 261, 1185], "entwickelt": [5, 199, 1193, 1200, 1202], "hat": [5, 8, 23, 37, 148, 175, 180, 181, 189, 190, 191, 192, 195, 199, 205, 207, 215, 216, 220, 222, 226, 237, 257, 312, 324, 362, 369, 387, 1061, 1183, 1186, 1188, 1193, 1200, 1201, 1202, 1205, 1206, 1207], "al": [5, 8, 23, 32, 98, 148, 180, 181, 186, 189, 190, 191, 195, 197, 199, 207, 216, 217, 224, 226, 228, 236, 254, 255, 257, 265, 269, 311, 370, 387, 604, 753, 862, 898, 919, 924, 925, 957, 1136, 1183, 1186, 1188, 1193, 1199, 1200, 1201, 1202, 1205], "einzelunternehm": [5, 23], "werd": [5, 1183], "erster": 5, "lini": 5, "firmen": [5, 23], "gebucht": [5, 11, 181, 195, 207, 387], "um": [5, 23, 32, 148, 180, 181, 189, 191, 195, 199, 205, 215, 216, 254, 267, 282, 346, 387, 1183, 1185, 1186, 1187, 1188, 1193, 1199, 1203], "mitarbeit": [5, 23], "weiterzubilden": 5, "entwickeln": [5, 199], "oder": [5, 23, 148, 168, 189, 195, 199, 205, 216, 217, 222, 236, 245, 254, 261, 897, 925, 1161, 1183, 1186, 1187, 1193, 1196, 1199, 1200, 1201, 1203, 1206, 1207], "damit": [5, 23, 180, 205, 235, 261, 369, 374, 387, 1184, 1202, 1206], "arbeiten": [5, 23, 205, 216, 1199], "softwaretest": 5, "produktingenieur": 5, "program": [5, 8, 29, 30, 42, 61, 63, 73, 74, 75, 77, 79, 85, 86, 91, 98, 102, 111, 112, 115, 116, 121, 124, 125, 126, 130, 133, 136, 138, 142, 143, 147, 148, 165, 167, 168, 169, 171, 172, 173, 174, 177, 179, 182, 183, 185, 187, 190, 192, 193, 195, 196, 200, 207, 208, 209, 211, 212, 213, 218, 223, 224, 229, 232, 233, 239, 241, 242, 245, 248, 251, 255, 258, 261, 262, 263, 269, 274, 278, 287, 290, 291, 294, 297, 299, 307, 308, 309, 311, 315, 331, 333, 339, 341, 352, 353, 354, 355, 356, 357, 358, 359, 360, 366, 368, 369, 370, 371, 372, 373, 374, 375, 380, 382, 383, 386, 388, 393, 395, 396, 399, 401, 402, 404, 405, 406, 407, 410, 412, 415, 417, 422, 435, 444, 448, 449, 451, 453, 455, 456, 463, 465, 468, 470, 471, 472, 473, 477, 478, 479, 483, 484, 488, 489, 492, 494, 500, 504, 514, 515, 516, 520, 521, 522, 537, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 552, 554, 559, 561, 583, 589, 594, 595, 601, 602, 617, 620, 623, 639, 645, 649, 658, 659, 661, 662, 667, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 696, 703, 734, 736, 739, 744, 749, 750, 754, 759, 761, 767, 775, 787, 789, 790, 791, 795, 806, 808, 817, 837, 851, 853, 854, 867, 869, 870, 871, 872, 873, 874, 877, 879, 880, 881, 892, 897, 900, 926, 930, 933, 934, 936, 939, 940, 941, 942, 950, 954, 957, 959, 960, 961, 962, 963, 964, 967, 968, 969, 970, 972, 976, 977, 981, 985, 988, 991, 994, 995, 996, 997, 1001, 1002, 1004, 1009, 1010, 1012, 1019, 1023, 1025, 1028, 1029, 1030, 1035, 1036, 1038, 1044, 1045, 1046, 1047, 1058, 1061, 1065, 1066, 1069, 1070, 1073, 1077, 1078, 1080, 1087, 1089, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1137, 1138, 1139, 1141, 1142, 1143, 1145, 1146, 1148, 1149, 1150, 1152, 1156, 1163, 1164, 1166, 1168, 1169, 1173, 1176, 1185, 1186, 1187, 1188, 1189, 1191, 1192, 1194, 1195, 1196], "gem\u00e4\u00df": [5, 23, 181], "herkunft": [5, 1207], "mein": [5, 23, 180, 181, 186, 190, 191, 205, 215, 216, 235, 340, 346, 387, 936, 1004, 1184, 1199], "muttersprach": [5, 23], "ist": [5, 7, 8, 148, 180, 181, 186, 189, 190, 191, 195, 199, 207, 215, 216, 220, 222, 225, 226, 228, 231, 235, 237, 241, 244, 245, 250, 251, 252, 254, 257, 260, 263, 267, 273, 282, 292, 306, 324, 334, 340, 350, 361, 364, 365, 369, 374, 387, 432, 997, 1154, 1183, 1184, 1185, 1186, 1187, 1188, 1193, 1196, 1199, 1200, 1201, 1202, 1203, 1205, 1206, 1207], "umfasst": [5, 181], "weiterf\u00fchrend": [5, 23], "materi": [5, 8, 12, 13, 14, 17, 23, 27, 98, 107, 146, 165, 168, 169, 172, 186, 187, 204, 207, 208, 209, 211, 213, 214, 216, 218, 219, 223, 226, 229, 232, 234, 235, 238, 239, 242, 245, 248, 250, 251, 263, 266, 269, 272, 276, 277, 279, 281, 284, 291, 294, 300, 301, 305, 311, 315, 316, 319, 322, 323, 326, 327, 331, 333, 339, 345, 349, 353, 369, 377, 387, 479, 481, 482, 483, 484, 485, 487, 488, 490, 492, 494, 495, 496, 497, 498, 499, 501, 503, 506, 515, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 550, 552, 555, 556, 557, 558, 560, 562, 563, 564, 565, 567, 568, 569, 570, 571, 594, 674, 754, 788, 791, 939, 950, 975, 978, 1035, 1036, 1038, 1058, 1059, 1087, 1138, 1150, 1151, 1163, 1174, 1178, 1186, 1188, 1191, 1193, 1194, 1200], "stark": 5, "gefragt": 5, "sind": [5, 7, 23, 148, 180, 181, 190, 191, 195, 199, 207, 216, 217, 222, 225, 228, 244, 261, 340, 369, 374, 387, 924, 925, 997, 1183, 1186, 1187, 1188, 1193, 1195, 1196, 1199, 1200, 1202, 1203, 1206, 1207], "letzter": 5, "betreffend": 5, "neuen": [5, 1188], "standard": [5, 34, 35, 36, 38, 107, 125, 148, 164, 179, 200, 204, 209, 211, 213, 234, 241, 247, 256, 257, 260, 264, 275, 288, 290, 314, 330, 337, 360, 369, 370, 371, 372, 374, 390, 391, 392, 398, 399, 404, 405, 409, 454, 542, 561, 580, 594, 595, 639, 645, 649, 656, 657, 658, 659, 661, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 693, 711, 716, 742, 744, 746, 747, 788, 790, 877, 880, 881, 897, 930, 944, 960, 966, 969, 982, 985, 1009, 1039, 1058, 1059, 1075, 1149, 1161, 1165, 1179, 1185, 1186, 1188, 1189, 1190, 1191, 1195], "absolut": [5, 8, 29, 91, 100, 125, 170, 174, 179, 185, 188, 195, 205, 208, 209, 211, 213, 224, 229, 233, 241, 247, 248, 255, 257, 258, 260, 261, 264, 269, 272, 278, 281, 284, 287, 288, 291, 294, 300, 301, 305, 308, 309, 311, 316, 319, 322, 323, 326, 327, 333, 339, 345, 349, 352, 353, 355, 356, 357, 358, 359, 360, 366, 368, 369, 372, 387, 472, 500, 514, 542, 543, 544, 545, 546, 547, 548, 549, 552, 594, 764, 767, 789, 790, 791, 835, 847, 863, 864, 865, 866, 867, 870, 871, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 897, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 917, 933, 953, 956, 962, 964, 972, 974, 988, 991, 994, 996, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1028, 1036, 1043, 1044, 1045, 1046, 1050, 1058, 1069, 1078, 1089, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1137, 1138, 1142, 1143, 1146, 1149, 1150, 1152, 1156, 1159, 1161, 1163, 1166, 1168, 1173], "beginn": [5, 8, 29, 32, 79, 91, 169, 170, 180, 185, 188, 199, 205, 208, 209, 211, 213, 224, 239, 242, 243, 245, 248, 255, 258, 261, 265, 272, 284, 291, 294, 300, 301, 311, 316, 319, 322, 323, 326, 327, 333, 339, 345, 349, 355, 356, 357, 358, 359, 360, 368, 369, 372, 414, 722, 790, 791, 1036, 1043, 1044, 1045, 1046, 1050, 1058, 1060, 1066, 1069, 1078, 1089, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1137, 1138, 1142, 1143, 1146, 1149, 1150, 1152, 1156, 1163, 1166, 1168, 1173], "advanc": [5, 8, 29, 79, 91, 169, 179, 185, 188, 193, 196, 199, 209, 213, 221, 224, 229, 239, 244, 245, 255, 269, 291, 311, 333, 339, 349, 355, 356, 357, 358, 359, 360, 368, 369, 370, 371, 372, 386, 464, 466, 468, 473, 474, 626, 696, 734, 769, 787, 789, 790, 791, 978, 1035, 1036, 1038, 1043, 1044, 1045, 1046, 1050, 1058, 1060, 1069, 1078, 1089, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1137, 1138, 1141, 1142, 1143, 1146, 1149, 1150, 1152, 1156, 1163, 1166, 1168, 1173, 1176, 1190], "product": [5, 8, 29, 38, 43, 79, 86, 91, 174, 185, 188, 208, 209, 211, 213, 229, 248, 255, 258, 261, 269, 272, 281, 284, 291, 294, 296, 300, 301, 305, 311, 316, 319, 322, 323, 326, 327, 333, 339, 345, 349, 355, 356, 357, 358, 359, 360, 368, 369, 372, 472, 476, 492, 775, 790, 791, 934, 943, 1014, 1028, 1036, 1043, 1044, 1045, 1046, 1050, 1058, 1069, 1078, 1089, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1137, 1138, 1142, 1143, 1146, 1149, 1150, 1152, 1156, 1163, 1166, 1168, 1173], "gro\u00dfe": [5, 37, 205, 1202], "thema": [5, 23, 190, 207, 261, 275, 369, 374, 1183], "einfach": [5, 191, 205, 216, 220, 302, 1187, 1188, 1193, 1199, 1201, 1203, 1205, 1207], "doch": [5, 228, 302, 312, 387, 1205], "m\u00e4chtig": 5, "vermutlich": [5, 205, 1205], "grund": [5, 1186, 1193], "warum": [5, 7, 23, 216, 217, 225, 267, 1193, 1199, 1200, 1205, 1207], "gern": [5, 205, 1183, 1193, 1200], "nachgefragt": 5, "werden": [5, 8, 37, 148, 180, 181, 186, 189, 190, 191, 199, 205, 207, 216, 217, 220, 226, 235, 236, 251, 263, 275, 925, 1183, 1184, 1185, 1186, 1187, 1188, 1193, 1195, 1196, 1199, 1200, 1202, 1203, 1205, 1206, 1207], "deren": [5, 23, 189, 211, 1188, 1201, 1205, 1206], "kernkompetenz": 5, "liegt": [5, 23, 180, 191, 195, 264, 1187, 1203], "sondern": [5, 191, 205, 216, 1184, 1193, 1196, 1199, 1206], "eher": [5, 180, 216, 1185, 1199], "beiwerk": 5, "ihrem": [5, 23, 1183], "eigentlichen": 5, "job": [5, 183, 204, 214, 273, 459, 934, 959, 960, 961, 1030, 1048, 1060, 1064, 1141, 1169], "schreiben": [5, 195, 217, 369, 370, 374, 1186, 1203, 1205], "physik": [5, 195], "z": [5, 38, 110, 191, 192, 195, 205, 215, 247, 248, 260, 263, 285, 312, 340, 350, 399, 409, 420, 421, 482, 615, 678, 748, 863, 924, 1009, 1061, 1184, 1193, 1195, 1200], "b": [5, 7, 21, 31, 32, 38, 62, 74, 75, 108, 115, 119, 122, 150, 175, 187, 191, 192, 193, 195, 205, 210, 215, 220, 222, 225, 228, 231, 238, 241, 244, 245, 247, 252, 254, 257, 260, 264, 267, 270, 273, 282, 285, 289, 292, 302, 306, 312, 317, 324, 328, 334, 340, 346, 350, 361, 363, 364, 365, 401, 409, 411, 420, 436, 450, 453, 466, 596, 598, 606, 607, 613, 614, 615, 616, 621, 665, 666, 671, 672, 701, 707, 741, 748, 758, 788, 837, 868, 880, 897, 919, 924, 925, 941, 942, 943, 982, 998, 1027, 1033, 1042, 1045, 1057, 1065, 1066, 1072, 1075, 1077, 1079, 1080, 1085, 1149, 1152, 1164, 1184, 1193, 1195, 1200], "guter": [5, 1184], "ersatz": [5, 216, 1199], "matlab": [5, 193, 195, 248, 387, 1135, 1138], "tester": [5, 169, 1169, 1195], "basic": [5, 10, 28, 29, 31, 73, 74, 75, 78, 79, 84, 98, 102, 104, 107, 111, 112, 125, 129, 130, 131, 132, 135, 138, 142, 143, 168, 169, 172, 174, 179, 182, 187, 188, 193, 196, 199, 208, 221, 234, 239, 250, 258, 260, 263, 264, 288, 290, 297, 298, 299, 307, 315, 325, 329, 331, 337, 368, 369, 370, 371, 372, 374, 376, 380, 386, 388, 438, 444, 448, 451, 455, 464, 466, 468, 470, 471, 473, 474, 481, 483, 484, 491, 498, 500, 501, 514, 542, 543, 544, 545, 546, 547, 548, 549, 552, 559, 561, 572, 588, 589, 594, 620, 628, 633, 645, 649, 657, 658, 661, 662, 666, 667, 668, 679, 686, 687, 688, 689, 690, 691, 696, 699, 700, 702, 705, 707, 734, 751, 767, 775, 785, 787, 789, 790, 794, 797, 799, 804, 807, 814, 818, 828, 837, 839, 841, 846, 852, 855, 857, 858, 860, 864, 865, 871, 873, 878, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 917, 927, 933, 939, 940, 945, 946, 947, 948, 949, 959, 960, 961, 962, 964, 969, 972, 974, 982, 988, 991, 994, 996, 1004, 1007, 1008, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1028, 1066, 1095, 1122, 1123, 1134, 1135, 1144, 1150, 1156, 1157, 1159, 1174, 1178, 1190, 1191, 1204], "einf\u00fchrung": [5, 195, 199, 212, 214, 388, 1058, 1185, 1190, 1191, 1193, 1202, 1204], "anhand": [5, 6, 190, 199, 212, 214, 216, 217, 266, 386, 388, 1185, 1191, 1199, 1204], "beispielen": [5, 8, 186, 212, 214, 216, 226, 235, 251, 263, 387, 388, 1191, 1204], "memori": [5, 42, 43, 49, 55, 74, 79, 81, 98, 110, 111, 112, 148, 167, 171, 172, 173, 175, 177, 184, 188, 192, 193, 194, 197, 199, 204, 210, 211, 219, 223, 224, 228, 241, 247, 250, 257, 260, 275, 297, 299, 301, 306, 323, 326, 351, 387, 388, 390, 404, 410, 432, 433, 439, 452, 454, 455, 457, 463, 464, 466, 468, 472, 473, 474, 501, 516, 518, 520, 521, 522, 524, 526, 527, 534, 535, 542, 559, 561, 562, 586, 594, 595, 600, 601, 611, 629, 630, 631, 647, 666, 676, 691, 694, 696, 705, 732, 734, 739, 746, 751, 753, 754, 755, 775, 787, 788, 789, 790, 799, 804, 807, 809, 814, 818, 828, 832, 833, 834, 837, 839, 841, 842, 846, 849, 855, 858, 868, 873, 875, 881, 933, 950, 959, 979, 981, 982, 995, 996, 1028, 1032, 1045, 1046, 1059, 1066, 1148, 1186, 1187, 1190, 1194, 1195, 1204], "weiter": [5, 23, 37, 180, 181, 205, 207, 216, 230, 254, 272, 302, 350, 925, 1183, 1193, 1199, 1200, 1202, 1203, 1207], "standbein": [5, 1193], "mehreren": [5, 148, 205, 221, 1206], "auspr\u00e4gungen": 5, "commandlin": [5, 8, 29, 31, 42, 81, 91, 100, 125, 165, 168, 190, 192, 212, 214, 224, 226, 229, 233, 239, 250, 251, 255, 261, 262, 263, 266, 269, 284, 291, 294, 300, 304, 305, 310, 311, 322, 332, 333, 338, 339, 344, 345, 348, 349, 369, 370, 371, 372, 373, 387, 444, 448, 451, 455, 464, 468, 473, 474, 477, 479, 489, 500, 514, 540, 542, 543, 544, 545, 546, 547, 548, 549, 552, 594, 696, 734, 767, 787, 789, 790, 806, 837, 860, 864, 865, 866, 867, 870, 871, 877, 878, 879, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 898, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 917, 927, 933, 934, 942, 956, 962, 964, 972, 974, 988, 990, 991, 994, 996, 1010, 1011, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1029, 1058, 1089, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1102, 1103, 1105, 1107, 1108, 1109, 1110, 1111, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1185, 1193, 1195, 1196, 1200, 1201, 1202], "konzept": [5, 23, 387, 1193, 1195, 1202], "zielpublikum": 5, "deckt": 5, "ungef\u00e4hr": [5, 180], "mehr": [5, 11, 23, 180, 189, 191, 215, 221, 241, 350, 387, 1183, 1184, 1186, 1188, 1193, 1200, 1201, 1202, 1207], "kernentwickl": 5, "themen": [5, 23, 186, 197, 199, 1193], "applikationsentwicklung": 5, "direkt": [5, 23, 199, 1186, 1202], "systemschnittstel": 5, "schritt": 5, "geht": [5, 7, 8, 23, 154, 180, 181, 189, 191, 199, 205, 215, 216, 220, 225, 226, 235, 236, 251, 257, 263, 273, 346, 364, 387, 925], "nur": [5, 23, 148, 180, 186, 190, 191, 195, 205, 207, 215, 216, 220, 222, 230, 252, 350, 364, 387, 1185, 1186, 1193, 1196, 1199, 1200, 1201, 1203, 1205, 1206, 1207], "mutig": 5, "pool": [5, 84, 233, 857, 996, 998], "absprach": [5, 1183], "individuel": [5, 23, 207, 1183], "zusammengestellt": 5, "schulungsverlauf": 5, "meisten": [5, 23, 199, 205, 387, 1184, 1205], "recht": [5, 7, 131, 154, 180, 181, 191, 199, 205, 216, 225, 340, 1199, 1200], "dynamisch": [5, 199, 230, 1186, 1188, 1203], "teilnehm": [5, 186, 195, 199, 207, 387, 1193, 1200], "haben": [5, 180, 181, 190, 195, 199, 207, 215, 216, 228, 387, 655, 1184, 1185, 1186, 1187, 1188, 1193, 1199, 1201, 1202, 1203, 1206], "oft": [5, 23, 180, 205, 207, 1187], "bed\u00fcrfniss": [5, 23, 207], "vorab": [5, 186, 199, 235], "bekannt": [5, 23, 205, 1188], "waren": [5, 190, 195, 1184, 1188], "wodurch": [5, 23], "auch": [5, 23, 148, 180, 181, 186, 191, 195, 205, 217, 220, 222, 228, 231, 236, 257, 261, 267, 292, 346, 364, 365, 387, 1183, 1184, 1185, 1186, 1187, 1193, 1196, 1200, 1205, 1207], "mal": [5, 181, 195, 205, 216, 267, 334, 387, 1184, 1188, 1199], "agenda": [5, 23, 27, 196, 301, 305, 309, 311, 315, 323, 327, 331, 333, 334, 337, 339, 345, 349, 353], "abgewichen": 5, "wird": [5, 7, 23, 148, 180, 181, 186, 189, 190, 191, 199, 205, 215, 216, 222, 225, 254, 340, 346, 350, 369, 374, 387, 1183, 1184, 1187, 1188, 1193, 1195, 1196, 1199, 1200, 1201, 1202, 1203, 1205, 1206, 1207], "verh\u00e4ltni": 5, "vortrag": [5, 190, 1183], "\u00fcbungen": [5, 8, 148, 186, 199, 207, 216, 217, 226, 235, 251, 263, 387, 1186, 1193, 1195, 1199, 1202], "ca": [5, 23, 32, 180, 182, 777, 1164], "50": [5, 7, 107, 110, 182, 193, 205, 210, 215, 220, 222, 225, 228, 231, 237, 241, 244, 247, 252, 254, 260, 264, 267, 270, 273, 282, 285, 289, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 361, 364, 365, 370, 371, 461, 463, 479, 550, 585, 586, 919, 941, 942, 943, 1037, 1060, 1080, 1093, 1140, 1141, 1153, 1169], "kleiner": [5, 7, 225, 924], "den": [5, 148, 181, 189, 190, 191, 195, 199, 205, 207, 215, 216, 221, 228, 235, 264, 312, 369, 370, 374, 387, 859, 1184, 1185, 1186, 1187, 1188, 1193, 1196, 1199, 1200, 1206, 1207], "teilnehmern": [5, 387, 1207], "pc": [5, 79, 109, 147, 168, 224, 288, 355, 372, 375, 554, 935, 936, 942, 1184], "erledigt": 5, "speziel": [5, 186, 215, 216, 275, 1196, 1199, 1202, 1206], "fortgeschrittenen": 5, "programmierthemen": 5, "gruppenprojekt": 5, "gegenstand": [5, 1183], "denen": [5, 23, 180, 1193], "zusammenarbeiten": 5, "austauschmedium": 5, "solch": 5, "set": [5, 9, 14, 21, 29, 33, 61, 63, 79, 86, 91, 109, 125, 126, 150, 172, 173, 174, 175, 176, 177, 178, 179, 183, 187, 188, 189, 192, 193, 204, 205, 208, 209, 211, 212, 213, 216, 217, 221, 222, 223, 227, 229, 230, 233, 235, 239, 240, 242, 243, 245, 246, 248, 249, 251, 253, 255, 256, 257, 262, 263, 265, 266, 268, 269, 271, 277, 279, 281, 283, 284, 286, 288, 290, 291, 293, 294, 297, 298, 299, 301, 303, 304, 305, 307, 310, 311, 313, 316, 319, 322, 323, 325, 326, 327, 329, 332, 333, 335, 338, 339, 341, 344, 345, 347, 348, 349, 351, 369, 374, 376, 387, 389, 404, 410, 427, 432, 433, 442, 445, 457, 458, 466, 472, 480, 481, 482, 484, 486, 488, 489, 491, 496, 499, 501, 516, 521, 530, 531, 535, 544, 545, 550, 551, 552, 553, 570, 598, 599, 613, 614, 615, 616, 629, 698, 707, 722, 752, 753, 768, 788, 790, 808, 821, 823, 833, 837, 842, 847, 869, 876, 882, 898, 934, 936, 941, 943, 950, 955, 957, 963, 971, 975, 979, 984, 992, 993, 996, 997, 1008, 1010, 1011, 1012, 1023, 1026, 1032, 1035, 1036, 1039, 1048, 1049, 1058, 1059, 1062, 1066, 1071, 1091, 1113, 1124, 1131, 1132, 1134, 1136, 1138, 1141, 1142, 1143, 1145, 1149, 1163, 1164, 1176, 1178, 1181, 1192, 1199], "gew\u00f6hnlich": [5, 23], "github": [5, 8, 23, 42, 44, 98, 107, 110, 125, 147, 150, 152, 153, 168, 169, 179, 183, 184, 186, 187, 190, 192, 199, 200, 201, 211, 213, 218, 219, 223, 224, 226, 233, 234, 235, 239, 241, 242, 245, 248, 250, 251, 255, 258, 261, 263, 266, 269, 272, 276, 277, 279, 280, 281, 284, 288, 291, 297, 298, 299, 301, 305, 309, 311, 315, 316, 319, 323, 327, 331, 333, 337, 339, 345, 349, 350, 368, 373, 374, 375, 376, 383, 388, 389, 541, 572, 614, 793, 796, 798, 801, 803, 806, 815, 817, 827, 829, 837, 838, 839, 840, 845, 849, 936, 941, 943, 1011, 1012, 1013, 1015, 1021, 1025, 1027, 1028, 1029], "endprodukt": 5, "bleibt": [5, 23, 1203], "homepag": [5, 13, 176, 178, 186, 189, 190, 204, 231, 239, 241, 276, 277, 279, 463, 1023, 1169], "erhalten": 5, "hier": [5, 8, 17, 23, 154, 180, 181, 186, 189, 190, 192, 195, 199, 207, 211, 215, 216, 222, 226, 232, 235, 236, 245, 251, 254, 263, 264, 306, 324, 387, 1183, 1186, 1193, 1199, 1200, 1202, 1203, 1205], "mix": [5, 29, 211, 218, 229, 232, 239, 242, 245, 246, 250, 252, 255, 284, 291, 304, 305, 310, 311, 313, 332, 333, 338, 339, 344, 345, 348, 349, 415, 454, 457, 458, 460, 462, 605, 790, 1063, 1066, 1082, 1085, 1095, 1105, 1108, 1109, 1110, 1111, 1115, 1116, 1117, 1118, 1119, 1120, 1134, 1135, 1149, 1154, 1160, 1204], "j\u00fcngeren": 5, "2023": [5, 59, 65, 97, 107, 124, 125, 289, 290, 293, 296, 307, 313, 324, 335, 345, 347, 386, 477, 478, 747], "10": [5, 7, 31, 62, 98, 103, 106, 107, 110, 125, 161, 168, 174, 175, 180, 182, 183, 193, 194, 205, 210, 212, 216, 217, 220, 222, 225, 228, 229, 231, 236, 237, 238, 239, 241, 242, 244, 245, 247, 252, 254, 257, 260, 264, 267, 269, 270, 272, 273, 283, 285, 290, 292, 299, 300, 301, 302, 305, 306, 311, 312, 317, 321, 324, 328, 334, 340, 346, 350, 355, 362, 363, 364, 365, 368, 382, 383, 386, 398, 400, 402, 404, 412, 430, 437, 454, 456, 470, 480, 490, 520, 540, 542, 543, 545, 548, 551, 556, 559, 579, 580, 585, 586, 588, 589, 594, 604, 607, 609, 616, 683, 684, 690, 694, 701, 705, 706, 732, 744, 753, 754, 755, 756, 766, 790, 827, 837, 845, 866, 868, 874, 893, 897, 899, 919, 921, 925, 928, 936, 941, 942, 943, 960, 969, 977, 1004, 1007, 1011, 1012, 1013, 1025, 1026, 1032, 1037, 1038, 1048, 1066, 1067, 1074, 1097, 1098, 1118, 1124, 1135, 1136, 1140, 1141, 1164, 1169, 1181, 1199], "09": [5, 98, 123, 168, 175, 184, 208, 224, 289, 324, 334, 366, 386, 478, 481, 919, 942, 943, 967, 1034, 1062, 1140], "11": [5, 7, 40, 62, 107, 125, 168, 169, 184, 193, 194, 199, 200, 204, 205, 210, 211, 212, 216, 217, 220, 222, 225, 228, 231, 234, 236, 237, 238, 241, 246, 247, 248, 252, 254, 257, 260, 264, 267, 270, 273, 276, 277, 282, 286, 289, 292, 296, 302, 306, 312, 320, 323, 324, 335, 336, 340, 346, 350, 361, 362, 363, 364, 365, 372, 375, 382, 383, 386, 388, 390, 404, 470, 472, 486, 498, 551, 579, 588, 589, 595, 597, 598, 600, 604, 606, 607, 613, 615, 625, 630, 632, 637, 650, 651, 652, 655, 668, 692, 696, 699, 702, 703, 708, 709, 710, 711, 721, 733, 734, 735, 736, 737, 738, 739, 741, 744, 745, 748, 750, 753, 754, 756, 757, 759, 766, 767, 768, 771, 773, 775, 787, 788, 790, 791, 862, 875, 919, 928, 982, 987, 1011, 1012, 1013, 1061, 1067, 1072, 1091, 1125, 1127, 1131, 1133, 1135, 1138, 1140, 1141, 1152, 1169, 1181, 1188, 1189, 1190, 1199], "introduct": [5, 29, 73, 74, 75, 79, 98, 99, 100, 107, 125, 143, 147, 148, 185, 188, 233, 234, 248, 250, 258, 261, 269, 272, 278, 280, 281, 287, 288, 290, 297, 300, 301, 305, 308, 316, 319, 322, 323, 326, 349, 352, 368, 373, 377, 386, 388, 422, 431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 514, 542, 543, 544, 545, 546, 547, 548, 549, 552, 559, 561, 572, 594, 602, 617, 620, 623, 639, 645, 649, 658, 661, 662, 667, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 694, 696, 703, 715, 722, 734, 750, 759, 767, 775, 787, 789, 790, 791, 839, 860, 864, 865, 866, 867, 870, 878, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 917, 927, 932, 933, 945, 946, 947, 948, 949, 956, 962, 964, 972, 974, 977, 988, 991, 994, 996, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1058, 1132, 1133, 1134, 1143, 1163, 1168, 1190, 1204], "07": [5, 98, 107, 125, 168, 182, 184, 195, 208, 237, 238, 272, 277, 289, 290, 296, 312, 368, 382, 383, 386, 484, 864, 865, 941, 1062, 1091, 1135, 1140], "18": [5, 7, 62, 147, 153, 175, 182, 183, 187, 193, 194, 210, 215, 220, 222, 225, 228, 231, 232, 236, 237, 241, 244, 245, 247, 253, 254, 260, 264, 267, 270, 273, 282, 286, 288, 289, 292, 296, 302, 306, 312, 317, 324, 328, 334, 346, 350, 362, 364, 365, 368, 386, 604, 669, 733, 741, 753, 790, 801, 810, 837, 874, 880, 882, 916, 919, 933, 943, 967, 969, 1003, 1014, 1021, 1022, 1023, 1026, 1054, 1055, 1091, 1098, 1140, 1141], "For": [5, 40, 123, 125, 170, 171, 172, 176, 179, 182, 184, 185, 187, 188, 193, 196, 201, 202, 204, 208, 224, 229, 232, 239, 242, 245, 250, 260, 263, 265, 269, 277, 279, 280, 281, 305, 311, 316, 327, 380, 386, 388, 400, 401, 407, 422, 431, 438, 444, 448, 451, 453, 455, 464, 468, 473, 474, 491, 516, 572, 597, 604, 608, 621, 630, 650, 696, 734, 741, 744, 748, 753, 758, 787, 789, 790, 808, 823, 837, 864, 865, 874, 897, 933, 934, 942, 943, 944, 953, 957, 984, 1005, 1012, 1013, 1014, 1021, 1022, 1026, 1059, 1060, 1070, 1077, 1085, 1109, 1114, 1136, 1139, 1141, 1143], "04": [5, 98, 106, 125, 147, 151, 168, 179, 182, 184, 199, 200, 224, 272, 288, 289, 292, 296, 324, 366, 368, 386, 479, 790, 933, 1014, 1021, 1022, 1026, 1140, 1169], "20": [5, 7, 8, 23, 62, 113, 114, 153, 168, 175, 177, 182, 191, 192, 193, 194, 205, 210, 215, 216, 220, 222, 225, 226, 228, 231, 236, 237, 241, 244, 247, 252, 254, 257, 260, 264, 267, 270, 272, 273, 282, 285, 289, 292, 296, 298, 302, 306, 313, 316, 317, 319, 324, 328, 334, 346, 350, 364, 365, 368, 386, 392, 394, 396, 412, 436, 476, 516, 544, 545, 550, 579, 580, 585, 586, 588, 589, 604, 701, 704, 705, 706, 715, 722, 744, 746, 747, 752, 753, 754, 755, 777, 856, 862, 882, 897, 919, 934, 941, 942, 943, 997, 1014, 1023, 1037, 1038, 1062, 1081, 1090, 1091, 1117, 1140, 1141, 1169, 1171, 1178], "clean": [5, 46, 47, 51, 53, 55, 56, 62, 134, 151, 187, 239, 258, 386, 454, 465, 466, 469, 475, 596, 694, 790, 791, 1011, 1013, 1023, 1032, 1085, 1135], "code": [5, 21, 23, 28, 29, 33, 40, 42, 46, 47, 51, 53, 55, 56, 62, 71, 74, 81, 86, 104, 105, 109, 115, 118, 125, 142, 151, 153, 157, 165, 169, 171, 172, 173, 174, 175, 178, 179, 186, 187, 190, 192, 195, 196, 197, 199, 200, 201, 204, 207, 208, 209, 211, 213, 218, 223, 224, 228, 232, 233, 234, 239, 241, 242, 244, 247, 250, 255, 257, 258, 260, 261, 269, 279, 281, 284, 288, 290, 291, 294, 297, 299, 302, 304, 305, 306, 310, 311, 312, 315, 316, 319, 322, 323, 327, 331, 332, 333, 334, 336, 337, 338, 339, 344, 348, 349, 354, 355, 364, 369, 374, 386, 389, 396, 398, 402, 406, 412, 426, 432, 437, 453, 454, 458, 460, 462, 468, 469, 471, 472, 473, 474, 475, 479, 481, 482, 483, 485, 490, 491, 492, 494, 495, 496, 498, 499, 500, 501, 503, 504, 506, 514, 515, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 555, 556, 557, 558, 560, 562, 563, 564, 565, 567, 568, 569, 570, 571, 575, 577, 578, 580, 581, 583, 584, 586, 587, 589, 590, 592, 593, 594, 595, 596, 597, 598, 600, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 616, 622, 624, 625, 626, 627, 628, 631, 632, 633, 634, 635, 637, 638, 641, 642, 643, 647, 651, 652, 653, 654, 655, 659, 665, 666, 668, 669, 671, 672, 674, 680, 683, 687, 688, 694, 695, 699, 701, 703, 704, 705, 707, 709, 711, 722, 731, 732, 733, 734, 736, 737, 738, 739, 741, 743, 748, 752, 753, 755, 756, 757, 758, 766, 768, 770, 772, 774, 776, 778, 779, 780, 781, 783, 784, 785, 786, 788, 789, 790, 791, 796, 801, 814, 815, 829, 835, 837, 842, 849, 852, 853, 855, 858, 876, 903, 933, 934, 942, 943, 958, 959, 975, 978, 982, 986, 995, 999, 1001, 1002, 1004, 1006, 1008, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1018, 1019, 1021, 1023, 1034, 1035, 1037, 1038, 1039, 1043, 1045, 1054, 1056, 1059, 1060, 1062, 1063, 1069, 1070, 1071, 1077, 1081, 1082, 1083, 1091, 1111, 1115, 1134, 1138, 1150, 1152, 1161, 1163, 1169, 1170, 1172, 1176, 1177, 1178, 1181, 1182, 1189, 1194, 1202, 1203, 1207], "With": [5, 29, 67, 113, 114, 116, 117, 124, 143, 160, 173, 179, 199, 260, 269, 288, 290, 291, 294, 299, 306, 314, 316, 319, 323, 327, 330, 344, 348, 349, 386, 427, 456, 472, 482, 492, 493, 502, 514, 528, 542, 594, 703, 734, 789, 790, 791, 837, 866, 867, 933, 940, 941, 972, 974, 991, 1009, 1012, 1023, 1054, 1058, 1134, 1150, 1154, 1156, 1158, 1165, 1189, 1191, 1192, 1194], "03": [5, 98, 106, 125, 147, 168, 169, 177, 182, 184, 191, 199, 234, 255, 257, 260, 289, 290, 293, 296, 302, 315, 334, 365, 368, 372, 386, 388, 470, 477, 478, 479, 540, 572, 589, 595, 597, 598, 600, 604, 605, 607, 609, 612, 693, 899, 1023, 1140, 1178, 1188], "28": [5, 7, 23, 98, 106, 126, 153, 168, 175, 182, 183, 193, 194, 205, 210, 215, 220, 222, 225, 228, 231, 236, 237, 241, 244, 247, 252, 254, 257, 260, 264, 267, 270, 273, 282, 285, 289, 292, 296, 302, 306, 312, 324, 328, 334, 340, 346, 350, 363, 364, 365, 382, 383, 386, 478, 490, 537, 553, 554, 577, 586, 669, 716, 827, 879, 919, 943, 971, 1012, 1013, 1025, 1093, 1140, 1181], "29": [5, 7, 98, 107, 148, 182, 183, 193, 194, 205, 210, 215, 220, 222, 225, 228, 231, 236, 237, 241, 244, 247, 252, 254, 260, 264, 267, 270, 273, 282, 285, 289, 292, 296, 302, 306, 312, 324, 328, 335, 340, 346, 361, 364, 368, 382, 383, 386, 478, 756, 801, 941, 943, 1011, 1014, 1023, 1140], "sap": [5, 239, 290, 386, 1156], "13": [5, 6, 7, 62, 107, 151, 165, 175, 177, 184, 191, 193, 194, 205, 210, 213, 217, 220, 222, 225, 228, 231, 236, 238, 241, 244, 245, 247, 252, 254, 257, 260, 264, 267, 270, 273, 282, 285, 289, 290, 293, 296, 302, 306, 312, 317, 324, 328, 334, 340, 346, 350, 364, 365, 386, 470, 477, 482, 485, 596, 711, 753, 801, 879, 919, 942, 967, 977, 997, 1025, 1032, 1034, 1075, 1086, 1140, 1141, 1164, 1199], "15": [5, 7, 60, 62, 107, 123, 125, 168, 171, 179, 182, 191, 193, 194, 202, 205, 208, 210, 216, 217, 220, 222, 224, 225, 228, 231, 236, 237, 241, 244, 247, 252, 254, 255, 257, 260, 264, 267, 270, 273, 282, 285, 289, 292, 296, 302, 307, 312, 316, 317, 319, 324, 328, 334, 340, 350, 362, 364, 365, 366, 368, 375, 382, 383, 386, 478, 544, 545, 562, 563, 564, 565, 567, 568, 671, 731, 754, 776, 778, 780, 788, 866, 880, 934, 968, 977, 1047, 1139, 1140, 1141, 1161, 1164, 1199], "02": [5, 98, 107, 116, 124, 125, 148, 168, 175, 182, 184, 191, 195, 221, 231, 258, 272, 289, 290, 296, 382, 383, 386, 470, 478, 479, 943, 1011, 1012, 1013, 1023, 1025, 1140], "17": [5, 7, 62, 97, 107, 125, 177, 183, 187, 191, 193, 194, 205, 210, 212, 215, 220, 222, 225, 228, 231, 236, 237, 241, 246, 248, 249, 253, 254, 255, 257, 260, 264, 267, 273, 276, 277, 283, 285, 289, 292, 296, 302, 307, 312, 316, 317, 319, 324, 328, 334, 340, 350, 361, 364, 365, 386, 604, 652, 693, 702, 711, 732, 744, 754, 773, 788, 801, 837, 868, 919, 943, 959, 965, 995, 999, 1026, 1055, 1098, 1140, 1141, 1149, 1161], "tour": [5, 180, 239, 276, 277, 279, 299, 336, 337, 386, 387, 540, 692, 789, 790, 1135, 1189, 1190], "forc": [5, 31, 35, 171, 173, 177, 200, 260, 386, 387, 461, 476, 504, 600, 872, 950, 979, 1013, 1135, 1189], "2022": [5, 98, 106, 107, 149, 151, 184, 247, 253, 257, 260, 276, 277, 283, 286, 334, 382, 383, 386, 478, 489, 551, 722, 747, 751, 772, 775, 788, 897, 899, 1013, 1023, 1091, 1135], "12": [5, 6, 7, 8, 40, 62, 107, 123, 125, 150, 153, 168, 177, 182, 183, 184, 193, 194, 198, 205, 210, 216, 217, 220, 222, 225, 228, 231, 232, 236, 237, 238, 241, 244, 245, 249, 252, 254, 257, 260, 264, 267, 270, 272, 273, 282, 285, 288, 289, 290, 292, 296, 302, 306, 312, 317, 320, 323, 324, 326, 328, 335, 346, 350, 363, 364, 368, 382, 383, 386, 454, 478, 479, 487, 572, 705, 711, 744, 788, 868, 879, 882, 897, 919, 921, 928, 941, 943, 945, 969, 977, 995, 1011, 1023, 1025, 1026, 1032, 1034, 1035, 1038, 1047, 1066, 1077, 1135, 1138, 1140, 1141, 1157, 1158, 1164, 1175, 1199], "01": [5, 62, 97, 98, 106, 107, 116, 124, 125, 168, 169, 177, 182, 184, 191, 195, 213, 224, 231, 238, 247, 253, 260, 272, 289, 290, 292, 296, 335, 366, 368, 382, 383, 386, 465, 478, 479, 492, 579, 580, 769, 866, 893, 943, 997, 999, 1026, 1124, 1135, 1140, 1169], "A": [5, 13, 20, 23, 27, 28, 29, 33, 38, 39, 40, 41, 46, 47, 51, 53, 55, 56, 60, 65, 70, 74, 75, 79, 83, 85, 86, 98, 99, 109, 110, 111, 112, 115, 119, 125, 126, 128, 130, 131, 132, 133, 134, 135, 142, 147, 159, 171, 174, 175, 176, 177, 179, 184, 187, 188, 189, 192, 193, 194, 208, 210, 211, 212, 220, 224, 231, 233, 235, 241, 244, 247, 251, 257, 258, 260, 264, 272, 278, 280, 284, 287, 288, 299, 301, 306, 308, 309, 312, 319, 322, 323, 326, 340, 352, 353, 355, 361, 366, 370, 371, 386, 391, 394, 395, 407, 408, 409, 422, 427, 431, 437, 438, 440, 443, 444, 448, 451, 452, 453, 454, 455, 458, 460, 461, 462, 464, 466, 468, 473, 474, 476, 482, 489, 492, 493, 494, 498, 499, 502, 504, 514, 516, 528, 541, 542, 551, 553, 559, 594, 599, 600, 605, 607, 608, 609, 658, 659, 661, 662, 665, 676, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 696, 698, 711, 722, 732, 734, 737, 742, 743, 744, 748, 750, 754, 756, 760, 769, 775, 786, 787, 788, 789, 790, 791, 798, 812, 814, 831, 854, 866, 867, 870, 871, 876, 879, 880, 884, 885, 890, 894, 900, 930, 933, 940, 941, 943, 958, 962, 963, 966, 972, 974, 979, 980, 981, 982, 991, 996, 997, 1008, 1009, 1012, 1014, 1019, 1021, 1022, 1023, 1026, 1027, 1034, 1035, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1065, 1066, 1073, 1075, 1080, 1086, 1091, 1092, 1093, 1098, 1121, 1124, 1127, 1138, 1142, 1144, 1145, 1148, 1152, 1155, 1156, 1162, 1164, 1170, 1171, 1181, 1189, 1190, 1191, 1192, 1194, 1204], "new": [5, 16, 32, 42, 44, 49, 50, 55, 62, 79, 108, 123, 130, 131, 169, 172, 174, 175, 176, 177, 178, 179, 182, 187, 199, 204, 224, 241, 245, 247, 257, 260, 264, 272, 282, 299, 305, 306, 323, 355, 380, 386, 388, 415, 445, 449, 450, 458, 462, 476, 479, 499, 501, 519, 523, 535, 537, 541, 550, 552, 553, 562, 563, 564, 565, 567, 568, 572, 578, 586, 595, 596, 601, 604, 650, 652, 663, 665, 666, 671, 688, 692, 696, 698, 699, 703, 704, 705, 707, 710, 721, 732, 735, 739, 741, 743, 745, 746, 750, 751, 752, 753, 754, 755, 759, 760, 767, 769, 771, 775, 779, 780, 781, 787, 790, 791, 794, 831, 837, 845, 869, 893, 916, 934, 937, 941, 943, 966, 967, 968, 977, 979, 980, 986, 998, 1029, 1048, 1063, 1066, 1075, 1115, 1140, 1141, 1158, 1164, 1169, 1188, 1189, 1190, 1192], "languag": [5, 12, 29, 43, 61, 63, 79, 91, 125, 143, 148, 168, 193, 195, 207, 208, 209, 211, 213, 216, 218, 223, 224, 226, 229, 231, 232, 233, 235, 251, 255, 258, 261, 263, 266, 291, 294, 297, 298, 299, 326, 355, 356, 357, 358, 359, 360, 369, 372, 386, 388, 390, 392, 404, 407, 418, 422, 431, 436, 438, 444, 448, 449, 451, 464, 468, 473, 476, 481, 483, 500, 514, 515, 516, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 559, 561, 594, 595, 602, 607, 609, 617, 620, 622, 623, 639, 645, 649, 658, 661, 662, 667, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 696, 698, 703, 710, 711, 721, 735, 740, 742, 745, 750, 754, 757, 758, 759, 767, 774, 775, 787, 789, 790, 791, 869, 926, 934, 935, 1011, 1013, 1030, 1039, 1043, 1044, 1045, 1046, 1047, 1050, 1055, 1059, 1063, 1065, 1066, 1069, 1078, 1086, 1089, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1137, 1138, 1142, 1146, 1149, 1150, 1152, 1156, 1161, 1163, 1166, 1168, 1173, 1178, 1186, 1189, 1190, 1191, 1192, 1194], "start": [5, 8, 42, 111, 112, 130, 131, 153, 166, 168, 171, 172, 173, 174, 177, 182, 183, 187, 191, 196, 201, 208, 209, 211, 212, 213, 214, 216, 218, 219, 220, 223, 224, 226, 229, 233, 234, 239, 245, 254, 260, 261, 270, 272, 285, 288, 290, 292, 294, 297, 299, 301, 306, 309, 324, 326, 327, 334, 337, 340, 346, 350, 353, 355, 372, 386, 389, 396, 399, 400, 409, 412, 426, 449, 470, 471, 484, 492, 496, 499, 506, 572, 583, 589, 655, 666, 671, 674, 694, 746, 769, 788, 798, 837, 850, 864, 865, 869, 870, 873, 875, 876, 897, 898, 910, 919, 921, 934, 960, 961, 970, 973, 980, 981, 985, 989, 990, 993, 995, 998, 1004, 1008, 1011, 1025, 1030, 1037, 1042, 1043, 1045, 1046, 1054, 1064, 1065, 1071, 1081, 1098, 1105, 1106, 1124, 1143, 1145, 1153, 1154, 1158, 1161, 1169, 1177, 1189, 1192], "schluss": [5, 7, 180, 205, 225], "noch": [5, 7, 180, 181, 191, 195, 199, 205, 215, 216, 220, 222, 225, 228, 231, 241, 254, 260, 261, 264, 285, 292, 387, 1188, 1199, 1206], "talk": [5, 42, 45, 50, 64, 65, 67, 85, 125, 126, 142, 172, 176, 187, 192, 196, 204, 208, 211, 216, 248, 250, 251, 327, 371, 476, 477, 739, 748, 837, 856, 934, 939, 943, 950, 1181], "heurigen": 5, "grazer": [5, 59, 190, 211, 327, 939], "linuxtagen": [5, 190], "pointless": [5, 151, 285, 299, 306, 323, 327, 336, 458, 605], "blink": [5, 60, 142, 151, 299, 302, 323, 327, 355, 358, 934, 975, 978], "sollt": [5, 23, 180, 181, 186, 189, 228, 1186, 1205], "interess": [5, 23, 261, 1184, 1195], "anderen": [5, 23, 205, 215, 220, 222, 387, 1183, 1184, 1186, 1188, 1207], "themenkomplex": 5, "bestehen": [5, 1202], "biet": 5, "folgend": [5, 148, 186, 205, 216, 261, 1199], "preisgestaltung": 5, "all": [5, 23, 24, 29, 35, 40, 42, 45, 57, 60, 61, 63, 71, 81, 89, 111, 112, 124, 126, 130, 142, 143, 153, 159, 165, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 186, 187, 188, 192, 193, 194, 199, 201, 204, 205, 207, 208, 210, 215, 220, 224, 230, 232, 233, 241, 244, 247, 248, 252, 257, 258, 260, 277, 279, 282, 285, 288, 290, 297, 299, 306, 323, 327, 354, 356, 357, 364, 380, 392, 396, 406, 410, 411, 414, 415, 416, 427, 435, 436, 442, 452, 454, 456, 458, 459, 462, 465, 466, 469, 471, 476, 478, 479, 480, 481, 482, 485, 486, 490, 491, 494, 495, 499, 501, 504, 506, 507, 515, 516, 521, 522, 543, 545, 553, 554, 572, 600, 601, 604, 606, 611, 629, 630, 647, 652, 665, 666, 680, 688, 690, 705, 707, 709, 722, 732, 736, 741, 742, 744, 754, 755, 758, 761, 763, 766, 781, 796, 798, 805, 808, 810, 815, 823, 827, 829, 833, 835, 837, 845, 851, 854, 863, 864, 865, 869, 870, 872, 873, 875, 877, 879, 880, 881, 882, 897, 898, 909, 916, 919, 921, 923, 924, 925, 926, 928, 934, 935, 936, 937, 941, 942, 943, 953, 954, 958, 960, 963, 969, 971, 980, 987, 993, 996, 997, 998, 1009, 1013, 1019, 1023, 1028, 1029, 1033, 1034, 1035, 1046, 1054, 1059, 1060, 1064, 1066, 1079, 1080, 1083, 1084, 1085, 1091, 1097, 1098, 1114, 1115, 1131, 1135, 1136, 1145, 1149, 1158, 1164, 1169, 1171, 1176, 1183, 1184, 1186, 1188, 1192, 1193, 1200, 1201, 1204, 1207], "onlin": [5, 11, 23, 148, 177, 184, 186, 187, 199, 204, 207, 387], "gehalten": [5, 8, 168, 195, 207, 216, 226, 235, 251, 263, 1183, 1188, 1199], "klarerweis": 5, "tagsatz": 5, "anf\u00e4llt": 5, "schulung": [5, 23, 167, 180, 181, 195, 204, 207, 387, 388, 793, 796, 801, 806, 815, 823, 1001, 1004, 1008, 1036, 1038, 1058, 1135, 1150, 1163, 1183, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1194, 1195, 1196, 1204], "980": [5, 244, 247, 260, 267, 270, 694], "reisekosten": [5, 23], "auto": [5, 131, 169, 181, 189, 193, 199, 275, 337, 496, 501, 525, 526, 530, 531, 534, 535, 536, 589, 597, 606, 607, 630, 652, 653, 655, 696, 697, 704, 711, 714, 716, 719, 722, 723, 724, 726, 727, 728, 729, 730, 734, 736, 737, 738, 739, 744, 746, 748, 753, 754, 755, 757, 768, 774, 776, 778, 779, 780, 784, 785, 786, 787, 788, 789, 790, 837, 1008, 1189, 1200, 1205], "42": [5, 7, 21, 42, 60, 131, 133, 189, 191, 192, 194, 205, 215, 220, 222, 225, 228, 231, 236, 237, 241, 244, 247, 252, 254, 257, 260, 264, 267, 270, 273, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 361, 364, 365, 411, 437, 439, 440, 442, 445, 453, 458, 460, 466, 480, 490, 495, 499, 516, 518, 547, 548, 552, 553, 554, 555, 556, 557, 558, 570, 577, 589, 596, 604, 605, 609, 611, 637, 640, 643, 650, 674, 678, 698, 699, 707, 709, 737, 744, 757, 758, 768, 770, 774, 776, 778, 780, 784, 785, 786, 800, 882, 919, 928, 936, 982, 990, 1004, 1011, 1012, 1013, 1033, 1034, 1035, 1042, 1045, 1063, 1065, 1066, 1075, 1076, 1077, 1080, 1100, 1181], "per": [5, 50, 79, 178, 205, 323, 360, 380, 410, 449, 454, 543, 774, 827, 833, 847, 851, 856, 857, 869, 873, 893, 919, 986, 995, 1012, 1182, 1207], "kilomet": [5, 174, 736, 897], "anderweitig": 5, "aufwand": [5, 23], "\u00fcbernachtung": [5, 180], "sampl": [6, 116, 124, 125, 133, 172, 183, 229, 232, 233, 245, 249, 255, 261, 264, 281, 297, 323, 340, 355, 472, 540, 766, 984, 1004, 1087], "log": [6, 97, 131, 153, 169, 177, 178, 187, 194, 199, 202, 211, 231, 241, 247, 257, 260, 288, 290, 302, 319, 340, 368, 481, 482, 501, 758, 800, 837, 866, 873, 875, 897, 934, 936, 944, 948, 950, 953, 954, 1135, 1138, 1164, 1178], "record": [6, 29, 40, 53, 143, 167, 168, 176, 178, 179, 205, 216, 217, 223, 233, 238, 245, 261, 281, 296, 316, 319, 360, 372, 471, 472, 790, 936, 1030, 1035, 1050, 1093, 1095, 1114, 1125, 1126, 1127, 1128, 1129, 1131, 1134, 1144, 1199], "grundlagen": [6, 8, 23, 148, 165, 266, 305, 386, 1186, 1188, 1195, 1196, 1199, 1200, 1202, 1203, 1206], "4": [6, 7, 8, 32, 60, 62, 107, 110, 113, 114, 123, 148, 153, 164, 169, 171, 175, 177, 183, 191, 192, 193, 194, 195, 198, 205, 210, 212, 216, 217, 220, 222, 225, 228, 231, 232, 236, 237, 238, 239, 241, 242, 244, 245, 247, 252, 254, 255, 257, 260, 264, 267, 269, 270, 273, 281, 282, 285, 289, 290, 292, 296, 302, 305, 306, 311, 312, 317, 324, 328, 334, 339, 340, 346, 350, 362, 363, 364, 366, 369, 382, 383, 386, 400, 416, 436, 439, 442, 459, 463, 466, 467, 477, 478, 480, 498, 501, 540, 544, 545, 546, 547, 548, 550, 552, 553, 555, 571, 573, 589, 596, 598, 606, 607, 610, 612, 613, 614, 615, 616, 628, 629, 637, 647, 697, 699, 701, 716, 717, 718, 720, 722, 731, 733, 737, 744, 746, 757, 770, 788, 837, 838, 875, 923, 926, 928, 936, 941, 942, 943, 965, 978, 995, 999, 1031, 1032, 1034, 1041, 1043, 1047, 1054, 1055, 1057, 1066, 1067, 1072, 1075, 1076, 1077, 1081, 1082, 1086, 1087, 1090, 1091, 1093, 1097, 1110, 1114, 1125, 1127, 1131, 1133, 1136, 1140, 1141, 1143, 1149, 1153, 1154, 1155, 1157, 1158, 1160, 1164, 1169, 1184, 1199], "2021": [6, 10, 23, 149, 165, 182, 184, 220, 222, 231, 237, 238, 241, 246, 249, 272, 366, 368, 382, 383, 386, 572, 715, 740, 775, 893, 897, 919, 920, 997, 1011, 1025, 1061, 1178], "templat": [6, 75, 107, 148, 199, 234, 275, 297, 302, 337, 371, 372, 480, 542, 561, 594, 595, 639, 645, 649, 650, 657, 658, 659, 661, 679, 686, 687, 688, 689, 690, 691, 698, 704, 709, 712, 713, 714, 715, 719, 720, 722, 725, 752, 756, 758, 766, 768, 774, 775, 776, 778, 780, 788, 789, 790, 982, 1188, 1190], "descript": [6, 8, 31, 39, 64, 67, 107, 123, 152, 174, 175, 187, 188, 204, 208, 209, 211, 212, 213, 214, 219, 234, 239, 241, 245, 247, 250, 257, 260, 264, 276, 277, 280, 314, 315, 330, 331, 388, 481, 491, 499, 509, 510, 511, 512, 513, 517, 527, 551, 746, 753, 754, 755, 764, 766, 768, 788, 837, 849, 861, 863, 872, 897, 899, 919, 926, 929, 930, 943, 955, 963, 1013, 1025, 1076, 1091, 1114, 1171, 1192], "sidebar": [6, 17, 169, 849], "metadata": [6, 28, 39, 168, 187, 285, 869, 872, 942, 945, 971, 1033, 1194], "angebot": [6, 186], "hous": [6, 32, 172], "meiner": [6, 23, 261, 387, 1184], "person": [6, 23, 115, 119, 179, 209, 228, 231, 270, 272, 274, 281, 285, 292, 323, 324, 376, 461, 496, 497, 500, 525, 609, 668, 775, 950, 1048, 1049, 1051, 1052, 1053, 1055, 1056, 1131, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1169, 1170], "schwerpunk": 6, "schulungsstil": 6, "preis": 6, "einr\u00fcckung": [7, 217, 225], "wichtig": [7, 225, 275, 369, 374, 1207], "1": [7, 32, 39, 42, 50, 60, 62, 73, 75, 88, 107, 110, 111, 112, 116, 121, 123, 124, 142, 144, 150, 153, 164, 165, 168, 173, 175, 178, 179, 181, 182, 183, 187, 188, 190, 191, 192, 193, 194, 195, 200, 201, 202, 205, 207, 210, 217, 220, 221, 222, 225, 228, 231, 232, 236, 237, 238, 241, 244, 247, 250, 252, 254, 257, 260, 264, 267, 270, 272, 273, 277, 282, 285, 289, 290, 292, 296, 302, 306, 312, 315, 317, 320, 324, 328, 331, 334, 339, 340, 346, 350, 354, 355, 361, 362, 363, 364, 365, 366, 367, 369, 372, 374, 382, 383, 386, 400, 401, 423, 430, 439, 443, 445, 453, 470, 477, 478, 479, 481, 482, 483, 484, 485, 487, 488, 489, 490, 492, 494, 495, 515, 516, 522, 532, 540, 541, 544, 548, 550, 552, 553, 554, 556, 560, 562, 563, 564, 565, 566, 567, 568, 573, 576, 579, 582, 585, 588, 589, 591, 596, 597, 598, 604, 606, 610, 612, 613, 614, 615, 616, 621, 626, 628, 634, 635, 636, 637, 638, 643, 647, 659, 661, 669, 671, 674, 678, 688, 694, 695, 697, 698, 699, 701, 704, 705, 707, 709, 711, 713, 714, 716, 718, 719, 720, 722, 723, 724, 731, 737, 739, 742, 743, 744, 746, 748, 749, 752, 753, 755, 756, 757, 766, 770, 774, 776, 777, 778, 780, 786, 788, 790, 795, 800, 806, 810, 815, 837, 854, 863, 864, 865, 868, 869, 870, 872, 873, 874, 875, 876, 879, 880, 881, 882, 883, 887, 889, 891, 893, 894, 898, 899, 900, 916, 919, 920, 921, 922, 923, 925, 926, 928, 929, 930, 932, 934, 941, 942, 944, 945, 953, 954, 955, 957, 959, 960, 961, 963, 964, 965, 967, 968, 969, 970, 975, 977, 978, 990, 992, 993, 995, 997, 999, 1000, 1001, 1004, 1007, 1008, 1010, 1011, 1014, 1023, 1025, 1026, 1027, 1028, 1030, 1031, 1033, 1034, 1035, 1038, 1039, 1041, 1043, 1045, 1047, 1048, 1054, 1055, 1057, 1059, 1060, 1061, 1062, 1064, 1067, 1068, 1069, 1070, 1071, 1074, 1076, 1077, 1082, 1087, 1090, 1091, 1093, 1098, 1101, 1104, 1114, 1118, 1121, 1124, 1125, 1127, 1131, 1132, 1133, 1139, 1140, 1141, 1142, 1148, 1153, 1154, 1155, 1157, 1158, 1159, 1163, 1164, 1169, 1170, 1171, 1176, 1180, 1183, 1189, 1191, 1192, 1196, 1199, 1201, 1206], "i": [7, 12, 13, 14, 17, 21, 27, 28, 29, 30, 31, 32, 38, 39, 40, 41, 42, 43, 46, 47, 49, 51, 53, 54, 55, 56, 57, 60, 61, 62, 63, 65, 69, 70, 79, 81, 83, 85, 86, 88, 90, 91, 92, 98, 99, 100, 101, 105, 107, 108, 109, 110, 111, 112, 115, 116, 120, 121, 123, 124, 125, 126, 130, 133, 134, 136, 137, 138, 142, 143, 147, 153, 156, 157, 159, 160, 165, 166, 168, 169, 171, 172, 175, 176, 177, 178, 179, 182, 183, 187, 188, 189, 192, 193, 194, 195, 196, 199, 200, 201, 202, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 220, 222, 223, 224, 225, 228, 229, 232, 233, 234, 236, 237, 239, 242, 243, 244, 245, 248, 249, 250, 251, 253, 254, 255, 258, 259, 261, 262, 263, 264, 266, 268, 271, 272, 273, 277, 278, 279, 281, 282, 284, 285, 287, 288, 289, 290, 291, 292, 294, 296, 297, 298, 299, 300, 301, 303, 304, 305, 307, 308, 310, 312, 314, 316, 317, 319, 320, 322, 323, 324, 326, 327, 328, 330, 332, 333, 334, 336, 338, 339, 341, 344, 345, 347, 348, 349, 350, 352, 354, 355, 356, 357, 358, 359, 360, 364, 365, 366, 369, 372, 374, 375, 377, 380, 382, 383, 387, 388, 390, 391, 392, 393, 394, 400, 401, 402, 404, 406, 407, 408, 410, 411, 414, 415, 416, 418, 419, 421, 422, 423, 426, 427, 428, 429, 430, 431, 433, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 491, 492, 494, 496, 498, 499, 500, 501, 504, 507, 508, 515, 516, 518, 519, 520, 521, 522, 535, 537, 538, 540, 542, 543, 544, 545, 546, 547, 548, 551, 552, 553, 554, 555, 556, 559, 561, 566, 570, 572, 577, 580, 583, 586, 589, 594, 595, 597, 598, 599, 600, 601, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 619, 621, 624, 625, 629, 630, 631, 632, 633, 634, 635, 637, 638, 643, 647, 650, 651, 652, 654, 656, 659, 661, 666, 668, 669, 674, 675, 676, 678, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 693, 694, 695, 696, 698, 699, 701, 702, 704, 705, 706, 708, 711, 716, 717, 718, 719, 720, 722, 733, 734, 737, 738, 742, 743, 746, 747, 748, 752, 754, 755, 756, 758, 760, 764, 766, 767, 768, 769, 774, 776, 778, 784, 787, 788, 789, 790, 791, 792, 793, 796, 798, 801, 803, 805, 806, 808, 812, 815, 819, 823, 825, 827, 829, 831, 833, 835, 837, 838, 839, 844, 845, 847, 849, 850, 851, 853, 854, 862, 863, 864, 865, 866, 867, 869, 870, 871, 874, 875, 876, 877, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 894, 896, 897, 898, 899, 900, 901, 902, 904, 905, 908, 909, 911, 912, 913, 917, 919, 921, 924, 926, 929, 930, 933, 934, 935, 936, 937, 939, 940, 941, 942, 944, 945, 946, 947, 948, 949, 950, 952, 957, 964, 967, 969, 971, 974, 975, 977, 978, 979, 980, 981, 982, 984, 985, 987, 988, 991, 994, 995, 996, 997, 998, 999, 1004, 1005, 1008, 1009, 1012, 1013, 1014, 1015, 1019, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1031, 1032, 1033, 1034, 1036, 1037, 1038, 1039, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1090, 1091, 1093, 1094, 1095, 1096, 1098, 1105, 1108, 1111, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1138, 1139, 1140, 1141, 1142, 1144, 1145, 1148, 1149, 1150, 1151, 1152, 1154, 1155, 1158, 1159, 1161, 1162, 1163, 1164, 1165, 1169, 1170, 1171, 1172, 1174, 1176, 1178, 1182, 1184, 1186, 1189, 1191, 1192, 1193, 1194, 1202, 1203, 1204, 1206], "41": [7, 177, 182, 193, 194, 205, 215, 220, 222, 225, 228, 231, 233, 236, 237, 241, 244, 247, 252, 254, 260, 264, 267, 270, 273, 282, 285, 289, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 361, 363, 364, 501, 757, 788, 827, 919, 942, 1047, 1091, 1093, 1140, 1171], "print": [7, 62, 168, 191, 192, 194, 195, 205, 208, 210, 211, 215, 220, 222, 223, 224, 225, 228, 231, 232, 236, 237, 238, 241, 244, 245, 247, 252, 254, 257, 260, 263, 264, 267, 270, 273, 282, 285, 289, 290, 292, 302, 306, 312, 317, 323, 324, 328, 334, 339, 340, 346, 350, 361, 362, 363, 364, 365, 395, 399, 401, 470, 481, 625, 652, 675, 722, 736, 744, 746, 874, 875, 881, 897, 899, 900, 941, 989, 999, 1030, 1033, 1034, 1035, 1037, 1038, 1039, 1043, 1045, 1047, 1048, 1051, 1053, 1056, 1061, 1062, 1063, 1064, 1069, 1070, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1085, 1086, 1101, 1103, 1113, 1114, 1115, 1117, 1118, 1124, 1139, 1144, 1148, 1152, 1161], "ja": [7, 23, 181, 205, 222, 225, 228, 241, 244, 273, 340], "basta": [7, 172, 225, 1066], "2": [7, 29, 32, 42, 50, 60, 62, 73, 105, 107, 116, 123, 124, 126, 148, 153, 165, 168, 173, 175, 181, 182, 183, 189, 191, 192, 193, 194, 195, 206, 210, 216, 217, 220, 221, 225, 228, 231, 232, 236, 237, 238, 241, 246, 247, 252, 254, 257, 258, 260, 264, 267, 270, 272, 273, 282, 285, 289, 290, 292, 296, 302, 306, 312, 315, 317, 320, 324, 328, 331, 334, 340, 346, 350, 355, 361, 362, 363, 364, 365, 366, 369, 370, 371, 372, 378, 386, 399, 400, 412, 418, 419, 439, 443, 470, 476, 477, 478, 479, 482, 483, 484, 488, 489, 490, 491, 492, 494, 516, 540, 541, 544, 550, 552, 553, 556, 560, 562, 563, 564, 565, 567, 568, 572, 587, 589, 596, 597, 598, 604, 606, 607, 610, 612, 613, 614, 615, 616, 621, 626, 630, 634, 635, 636, 637, 638, 643, 647, 651, 652, 653, 654, 659, 669, 674, 694, 697, 698, 699, 701, 704, 707, 709, 711, 712, 714, 716, 719, 720, 722, 732, 733, 736, 737, 742, 743, 744, 746, 748, 749, 752, 753, 754, 755, 756, 757, 766, 768, 770, 777, 788, 790, 796, 837, 864, 865, 872, 875, 876, 879, 880, 881, 893, 916, 919, 922, 923, 928, 930, 932, 934, 938, 941, 942, 954, 957, 959, 960, 961, 963, 964, 967, 968, 969, 970, 971, 973, 975, 977, 978, 990, 992, 995, 997, 999, 1010, 1011, 1026, 1028, 1030, 1031, 1033, 1034, 1036, 1039, 1041, 1043, 1047, 1051, 1054, 1055, 1057, 1058, 1059, 1060, 1061, 1062, 1064, 1067, 1068, 1069, 1071, 1076, 1077, 1082, 1087, 1090, 1092, 1093, 1094, 1095, 1097, 1101, 1104, 1114, 1118, 1121, 1124, 1125, 1126, 1127, 1128, 1131, 1132, 1133, 1134, 1136, 1139, 1140, 1141, 1146, 1153, 1154, 1155, 1157, 1158, 1159, 1163, 1164, 1169, 1170, 1171, 1175, 1176, 1183, 1191, 1192, 1199, 1202, 1203, 1205, 1206, 1207], "1234": [7, 32, 225, 228, 238, 247, 252, 254, 306, 334, 346, 364, 952, 960, 1009, 1066], "3": [7, 32, 60, 62, 107, 110, 111, 112, 113, 114, 116, 124, 130, 148, 150, 153, 168, 177, 182, 183, 187, 189, 191, 192, 193, 194, 195, 202, 204, 205, 210, 216, 217, 220, 221, 222, 225, 228, 231, 232, 236, 238, 240, 241, 246, 247, 250, 252, 254, 257, 260, 264, 267, 269, 271, 272, 273, 275, 282, 285, 289, 290, 292, 296, 302, 306, 312, 317, 319, 320, 325, 328, 334, 340, 346, 350, 362, 363, 364, 365, 369, 370, 371, 374, 386, 400, 412, 413, 414, 427, 436, 437, 458, 459, 467, 470, 472, 477, 478, 479, 482, 487, 498, 515, 516, 540, 541, 545, 548, 550, 551, 552, 553, 555, 556, 557, 558, 562, 563, 564, 565, 567, 568, 570, 572, 589, 596, 598, 604, 605, 606, 608, 609, 610, 612, 613, 614, 615, 616, 621, 624, 625, 626, 627, 628, 629, 630, 631, 633, 634, 635, 636, 637, 638, 643, 659, 669, 674, 676, 697, 698, 699, 701, 709, 711, 712, 716, 717, 718, 719, 720, 722, 737, 742, 744, 746, 748, 753, 754, 756, 757, 770, 773, 788, 795, 801, 837, 875, 880, 894, 897, 919, 921, 923, 928, 930, 936, 938, 941, 942, 943, 945, 954, 955, 957, 959, 960, 961, 964, 968, 969, 970, 978, 979, 980, 984, 990, 992, 995, 998, 999, 1000, 1003, 1005, 1008, 1009, 1011, 1012, 1013, 1031, 1033, 1034, 1036, 1039, 1041, 1043, 1047, 1054, 1057, 1058, 1059, 1060, 1061, 1064, 1065, 1067, 1069, 1071, 1072, 1075, 1077, 1082, 1083, 1084, 1086, 1090, 1091, 1093, 1110, 1114, 1118, 1124, 1125, 1127, 1131, 1133, 1136, 1139, 1140, 1141, 1144, 1147, 1153, 1154, 1155, 1157, 1158, 1160, 1164, 1169, 1170, 1171, 1178, 1183, 1185, 1187, 1189, 1192, 1195, 1199], "decim": [7, 225, 260, 264, 306, 334, 350, 355, 392, 478, 1066, 1080], "5": [7, 32, 60, 62, 113, 114, 115, 121, 131, 133, 138, 148, 164, 168, 175, 177, 183, 193, 194, 195, 200, 203, 206, 210, 216, 217, 220, 222, 223, 225, 228, 229, 231, 232, 235, 237, 238, 239, 241, 242, 244, 245, 247, 252, 254, 255, 257, 260, 264, 267, 269, 270, 272, 273, 277, 281, 282, 285, 289, 292, 296, 302, 305, 306, 311, 312, 317, 320, 324, 328, 334, 339, 340, 346, 350, 355, 361, 363, 364, 369, 374, 382, 383, 386, 392, 394, 399, 416, 418, 427, 454, 459, 463, 472, 477, 481, 484, 495, 498, 501, 516, 524, 540, 543, 545, 550, 551, 553, 554, 555, 556, 557, 558, 570, 571, 576, 589, 596, 597, 598, 604, 608, 609, 612, 613, 615, 616, 637, 647, 674, 694, 698, 701, 702, 704, 705, 711, 713, 714, 716, 731, 732, 744, 746, 753, 754, 755, 757, 770, 780, 788, 810, 815, 838, 866, 868, 919, 923, 928, 934, 941, 942, 943, 959, 961, 969, 978, 995, 1011, 1023, 1031, 1033, 1034, 1037, 1039, 1043, 1047, 1054, 1055, 1060, 1065, 1066, 1067, 1071, 1072, 1074, 1080, 1082, 1086, 1087, 1091, 1114, 1118, 1125, 1127, 1131, 1133, 1136, 1140, 1141, 1144, 1149, 1160, 1164, 1169, 1171, 1176, 1180, 1186, 1188, 1193, 1194, 1199, 1200], "hexadecim": [7, 225, 264, 411, 942, 1066, 1079, 1080], "16": [7, 62, 168, 177, 179, 180, 182, 191, 193, 194, 199, 200, 205, 210, 215, 220, 222, 225, 228, 231, 236, 237, 241, 244, 247, 252, 254, 257, 260, 264, 267, 270, 273, 282, 286, 289, 292, 296, 302, 306, 312, 317, 324, 328, 334, 340, 346, 350, 361, 362, 363, 364, 365, 369, 374, 375, 386, 410, 454, 461, 472, 479, 616, 674, 753, 815, 827, 919, 936, 941, 943, 954, 959, 960, 968, 977, 1011, 1013, 1025, 1026, 1031, 1038, 1041, 1066, 1093, 1140, 1141, 1171], "7": [7, 32, 42, 62, 169, 172, 175, 177, 182, 189, 192, 193, 194, 195, 205, 210, 217, 220, 222, 223, 225, 228, 229, 231, 235, 237, 238, 239, 241, 242, 244, 247, 252, 254, 257, 260, 264, 267, 269, 270, 272, 273, 281, 282, 285, 289, 290, 292, 296, 302, 306, 311, 312, 317, 320, 324, 328, 334, 340, 346, 350, 354, 363, 364, 369, 374, 375, 386, 400, 404, 418, 445, 454, 478, 479, 482, 487, 495, 515, 516, 540, 543, 548, 552, 553, 555, 556, 557, 558, 570, 577, 585, 589, 596, 604, 605, 609, 611, 612, 613, 615, 636, 640, 643, 652, 669, 678, 698, 706, 731, 732, 733, 737, 744, 770, 784, 785, 786, 868, 869, 880, 881, 897, 919, 928, 941, 942, 943, 960, 968, 992, 995, 1004, 1005, 1008, 1009, 1012, 1013, 1034, 1037, 1043, 1047, 1055, 1060, 1065, 1066, 1067, 1070, 1072, 1074, 1075, 1091, 1103, 1121, 1124, 1136, 1140, 1141, 1144, 1149, 1160, 1169], "0x1234": [7, 225, 1066], "4660": [7, 225, 247, 1066], "8": [7, 32, 62, 110, 168, 174, 175, 179, 183, 191, 192, 193, 194, 195, 199, 204, 205, 208, 210, 217, 220, 222, 223, 225, 228, 229, 231, 232, 237, 238, 239, 241, 242, 244, 245, 247, 251, 252, 254, 257, 260, 264, 267, 269, 270, 273, 281, 282, 285, 288, 289, 292, 296, 302, 306, 309, 311, 312, 317, 320, 323, 324, 328, 334, 340, 346, 350, 353, 361, 362, 363, 364, 369, 386, 410, 454, 466, 472, 478, 482, 484, 487, 515, 547, 582, 589, 596, 601, 604, 609, 613, 615, 616, 705, 753, 770, 788, 810, 833, 837, 868, 874, 882, 919, 921, 928, 934, 935, 936, 937, 941, 942, 1011, 1028, 1034, 1037, 1043, 1066, 1067, 1072, 1080, 1085, 1090, 1091, 1097, 1133, 1136, 1140, 1141, 1147, 1164, 1171], "bin\u00e4r": [7, 23, 225, 228], "9": [7, 8, 32, 60, 62, 123, 168, 173, 177, 180, 187, 191, 192, 193, 194, 195, 203, 205, 207, 210, 211, 212, 213, 214, 217, 218, 220, 222, 223, 224, 225, 226, 228, 229, 231, 232, 233, 235, 237, 238, 239, 241, 244, 245, 247, 252, 254, 257, 260, 261, 264, 267, 270, 272, 273, 282, 285, 288, 289, 292, 296, 297, 299, 302, 306, 312, 317, 324, 328, 334, 340, 346, 350, 361, 362, 364, 365, 369, 374, 386, 392, 394, 400, 409, 412, 470, 478, 495, 515, 524, 543, 589, 591, 607, 616, 706, 716, 744, 770, 815, 893, 916, 919, 941, 942, 943, 959, 995, 1031, 1034, 1041, 1047, 1060, 1061, 1067, 1072, 1074, 1082, 1086, 1091, 1098, 1103, 1140, 1141, 1149, 1158, 1164, 1169], "0b100110": [7, 225, 254, 1066], "38": [7, 23, 168, 175, 182, 194, 205, 215, 220, 222, 225, 228, 231, 236, 237, 241, 244, 247, 252, 254, 257, 260, 264, 267, 270, 273, 282, 285, 289, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 361, 364, 365, 499, 515, 540, 607, 753, 788, 919, 1014, 1023, 1140, 1141], "arithmet": [7, 109, 192, 225, 230, 250, 253, 265, 280, 297, 369, 393, 407, 414, 415, 421, 422, 431, 437, 438, 444, 448, 451, 453, 454, 455, 464, 468, 473, 474, 493, 502, 514, 515, 528, 542, 590, 594, 624, 628, 629, 632, 637, 694, 696, 734, 743, 744, 787, 789, 790], "man": [7, 32, 37, 125, 172, 174, 180, 181, 189, 195, 199, 205, 207, 215, 216, 222, 225, 228, 233, 235, 237, 248, 254, 261, 264, 288, 309, 328, 369, 374, 376, 387, 484, 577, 586, 598, 760, 788, 796, 815, 863, 864, 865, 868, 869, 872, 879, 880, 881, 882, 883, 887, 889, 891, 894, 898, 899, 900, 916, 919, 920, 922, 923, 925, 926, 928, 929, 943, 950, 953, 954, 955, 957, 959, 960, 961, 963, 964, 966, 967, 968, 969, 970, 973, 979, 980, 982, 984, 986, 987, 990, 992, 998, 1005, 1008, 1009, 1011, 1027, 1028, 1184, 1185, 1186, 1188, 1196, 1199, 1201, 1202, 1203, 1205, 1206, 1207], "behaviour": [7, 225, 233, 823, 969, 1085], "erzwingen": [7, 205, 217, 225], "floor": [7, 38, 217, 225, 228, 232, 244, 245, 247, 252, 254, 260, 264, 334, 364, 1054, 1066], "divis": [7, 36, 38, 217, 225, 228, 244, 247, 252, 254, 260, 364, 392, 413, 515, 516, 530, 1054, 1066, 1121], "modul": [7, 12, 21, 23, 29, 151, 162, 168, 175, 177, 182, 194, 200, 202, 204, 207, 208, 209, 210, 211, 218, 219, 225, 228, 232, 234, 239, 241, 242, 245, 247, 248, 251, 252, 254, 255, 257, 258, 260, 261, 263, 264, 266, 267, 271, 272, 275, 281, 283, 284, 285, 290, 292, 300, 301, 304, 306, 310, 311, 314, 315, 316, 319, 324, 326, 328, 330, 331, 332, 333, 334, 339, 340, 344, 345, 346, 348, 349, 350, 354, 355, 364, 370, 371, 372, 374, 380, 387, 432, 476, 478, 482, 483, 489, 491, 492, 504, 693, 734, 789, 790, 793, 794, 796, 797, 799, 801, 802, 803, 804, 806, 807, 814, 817, 818, 822, 828, 833, 834, 838, 839, 841, 846, 849, 852, 855, 858, 933, 934, 941, 943, 1035, 1036, 1050, 1059, 1060, 1063, 1064, 1075, 1077, 1083, 1086, 1087, 1089, 1092, 1093, 1094, 1095, 1129, 1130, 1131, 1132, 1134, 1135, 1137, 1138, 1142, 1145, 1146, 1148, 1149, 1150, 1151, 1152, 1163, 1164, 1166, 1168, 1169, 1172, 1173, 1179, 1191, 1193, 1194, 1200, 1204, 1207], "restklassen": [7, 225], "rest": [7, 17, 40, 179, 181, 191, 215, 225, 228, 232, 234, 252, 260, 292, 306, 324, 327, 364, 390, 400, 425, 479, 627, 628, 689, 746, 825, 876, 937, 967, 995, 1054, 1057, 1081, 1111, 1115, 1144, 1159, 1191, 1207], "14": [7, 62, 165, 169, 182, 193, 194, 205, 210, 217, 220, 222, 224, 225, 228, 231, 232, 236, 237, 241, 244, 245, 247, 252, 254, 257, 260, 264, 267, 270, 272, 273, 276, 282, 285, 289, 292, 296, 302, 306, 312, 323, 324, 326, 328, 334, 340, 346, 350, 361, 362, 364, 365, 366, 386, 478, 489, 490, 492, 501, 595, 669, 693, 705, 744, 746, 754, 756, 788, 879, 882, 894, 919, 921, 941, 942, 943, 945, 960, 969, 999, 1011, 1012, 1013, 1032, 1048, 1135, 1140, 1141, 1188, 1199], "oper": [7, 29, 33, 34, 35, 38, 74, 79, 81, 98, 109, 138, 142, 171, 172, 174, 178, 190, 191, 193, 196, 199, 204, 208, 209, 210, 211, 213, 217, 222, 225, 230, 231, 232, 233, 234, 239, 241, 245, 246, 249, 252, 254, 255, 259, 262, 265, 268, 270, 273, 275, 285, 292, 297, 298, 299, 300, 301, 302, 305, 306, 322, 326, 327, 329, 334, 340, 345, 346, 355, 369, 374, 392, 400, 410, 416, 431, 436, 437, 438, 442, 444, 445, 448, 451, 453, 455, 457, 460, 464, 466, 468, 473, 474, 496, 497, 516, 536, 542, 554, 559, 561, 589, 594, 595, 596, 601, 602, 606, 609, 613, 614, 615, 616, 617, 620, 621, 623, 629, 637, 638, 639, 645, 649, 650, 653, 658, 661, 662, 674, 679, 686, 687, 688, 689, 690, 691, 694, 696, 702, 704, 705, 707, 711, 716, 718, 719, 720, 722, 725, 729, 732, 734, 736, 737, 738, 739, 744, 746, 753, 754, 757, 764, 768, 770, 779, 780, 781, 787, 788, 789, 790, 799, 804, 807, 808, 814, 818, 828, 837, 839, 841, 846, 852, 853, 855, 858, 864, 865, 868, 897, 903, 928, 929, 933, 941, 942, 943, 954, 959, 960, 961, 962, 963, 964, 975, 978, 982, 984, 1004, 1008, 1012, 1025, 1028, 1036, 1039, 1046, 1047, 1050, 1067, 1071, 1075, 1080, 1081, 1086, 1101, 1134, 1136, 1145, 1154, 1176, 1181, 1188, 1194], "preced": [7, 35, 38, 225, 247, 252, 260, 265, 268, 392, 398, 413, 414, 422, 427, 431, 436, 438, 442, 444, 446, 448, 451, 455, 464, 468, 473, 474, 625, 629, 696, 734, 787, 789, 790, 897, 946], "implizit": [7, 205, 225, 302, 1186, 1203], "klammerung": [7, 225, 925], "durch": [7, 148, 180, 181, 189, 195, 199, 207, 215, 225, 257, 267, 350, 369, 374, 387, 925, 1183, 1184, 1186], "pr\u00e4zedenz": [7, 205, 217, 225], "6666666666666665": [7, 225], "frage": [7, 181, 191, 195, 222, 225, 228, 234, 254, 387, 1193, 1200, 1207], "6665": [7, 225], "6667": [7, 225], "ieee": [7, 225], "floatingpoint": [7, 225, 413, 414, 537, 837, 1113], "representaion": [7, 225], "true": [7, 35, 38, 50, 58, 62, 111, 112, 115, 119, 120, 121, 122, 153, 173, 175, 177, 182, 191, 192, 193, 194, 204, 205, 210, 215, 220, 222, 223, 225, 228, 231, 232, 236, 237, 241, 244, 245, 247, 252, 254, 257, 258, 260, 264, 267, 270, 273, 282, 285, 289, 292, 296, 302, 306, 312, 317, 324, 328, 334, 340, 346, 350, 355, 361, 364, 398, 414, 415, 427, 439, 442, 482, 540, 604, 612, 637, 665, 676, 678, 699, 722, 723, 724, 725, 727, 728, 729, 730, 755, 764, 766, 768, 770, 788, 825, 827, 857, 870, 897, 910, 978, 984, 989, 990, 993, 995, 996, 1004, 1005, 1008, 1017, 1032, 1038, 1039, 1043, 1045, 1046, 1047, 1048, 1051, 1054, 1067, 1068, 1070, 1071, 1072, 1075, 1081, 1084, 1085, 1149, 1153, 1155, 1160, 1175, 1176, 1178], "zahlen": [7, 215, 216, 225, 1186, 1199], "vergleichen": [7, 205, 225], "21": [7, 98, 100, 103, 106, 107, 125, 179, 182, 193, 194, 205, 210, 213, 215, 220, 222, 225, 228, 231, 236, 237, 241, 244, 247, 252, 254, 260, 264, 267, 270, 273, 282, 285, 289, 292, 296, 302, 306, 312, 317, 324, 328, 334, 340, 346, 350, 364, 368, 386, 478, 788, 827, 879, 919, 942, 943, 954, 1025, 1140, 1141], "ab": [7, 23, 32, 180, 182, 205, 215, 216, 225, 260, 264, 267, 282, 285, 306, 334, 596, 598, 606, 615, 701, 757, 1141, 1193, 1199], "0001": [7, 175, 193, 225], "aber": [7, 23, 37, 181, 189, 191, 195, 205, 215, 216, 220, 223, 225, 254, 257, 260, 312, 387, 925, 1184, 1186, 1188, 1195, 1202, 1206, 1207], "unendlich": [7, 8, 216, 225, 226], "lang": [7, 177, 180, 181, 190, 225, 360, 361, 378, 387, 481, 1185, 1201, 1206], "22": [7, 62, 98, 106, 107, 125, 174, 177, 182, 184, 193, 194, 205, 210, 212, 215, 220, 221, 222, 225, 228, 231, 232, 236, 237, 241, 244, 245, 247, 252, 254, 260, 264, 267, 270, 273, 282, 285, 289, 292, 296, 302, 306, 313, 316, 317, 319, 324, 334, 340, 346, 350, 361, 363, 364, 365, 386, 788, 882, 919, 943, 944, 952, 953, 968, 1012, 1013, 1098, 1135, 1140, 1141, 1200], "1000000": [7, 174, 205, 225, 302, 340, 364, 470, 934, 942], "23": [7, 62, 125, 175, 182, 183, 184, 190, 193, 194, 195, 205, 210, 212, 215, 220, 222, 225, 228, 231, 236, 237, 241, 244, 247, 252, 254, 257, 258, 260, 263, 264, 267, 273, 282, 285, 289, 292, 296, 302, 306, 312, 317, 324, 328, 334, 340, 346, 350, 386, 442, 478, 481, 722, 772, 882, 919, 941, 942, 1023, 1093, 1098, 1140, 1141, 1171, 1178], "32": [7, 182, 183, 189, 191, 194, 205, 210, 215, 220, 222, 225, 228, 231, 234, 236, 237, 241, 244, 247, 252, 254, 257, 260, 264, 267, 270, 273, 282, 285, 289, 292, 296, 302, 306, 312, 324, 328, 334, 340, 346, 350, 364, 392, 394, 410, 415, 454, 495, 501, 524, 540, 553, 833, 862, 868, 893, 919, 935, 937, 1012, 1013, 1023, 1091], "4294967295": [7, 225, 244, 252, 260], "24": [7, 62, 98, 106, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 142, 175, 182, 190, 193, 194, 195, 205, 210, 215, 220, 222, 225, 228, 231, 236, 237, 241, 244, 247, 252, 254, 257, 260, 264, 267, 270, 273, 282, 285, 289, 292, 296, 306, 312, 317, 324, 334, 340, 346, 350, 361, 362, 364, 365, 386, 489, 687, 689, 711, 753, 754, 790, 837, 864, 865, 919, 941, 1028, 1054, 1140, 1141], "64": [7, 174, 177, 182, 205, 210, 215, 220, 222, 225, 228, 231, 233, 234, 237, 241, 244, 247, 252, 254, 257, 260, 264, 267, 270, 273, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 364, 369, 374, 398, 410, 415, 439, 454, 460, 463, 489, 833, 975, 978, 1001, 1008, 1011, 1028, 1093, 1140, 1184], "18446744073709551615": [7, 205, 215, 225, 228, 241, 244, 252, 254, 260, 264, 267, 270, 292, 324, 346, 364], "overflow": [7, 42, 44, 50, 174, 215, 225, 241, 244, 245, 247, 250, 251, 257, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346, 415, 417, 453, 462, 874], "wenn": [7, 23, 180, 181, 186, 191, 199, 205, 207, 215, 216, 222, 225, 261, 267, 302, 924, 1183, 1185, 1186, 1193, 1195, 1196, 1199, 1202, 1207], "verwendet": [7, 23, 195, 199, 205, 225, 267, 346, 1184, 1186, 1196, 1200, 1202, 1207], "wert": [7, 23, 216, 217, 222, 225, 257, 260, 264, 267, 273, 302, 306, 312, 1199, 1207], "w\u00e4re": [7, 189, 215, 225, 261, 1188, 1195], "dort": [7, 148, 154, 181, 189, 191, 199, 215, 216, 225, 387, 1199, 1205, 1207], "25": [7, 62, 98, 182, 183, 193, 194, 195, 205, 210, 215, 220, 222, 225, 228, 231, 236, 237, 241, 244, 247, 252, 254, 257, 258, 260, 263, 264, 267, 270, 272, 273, 282, 285, 289, 292, 296, 302, 306, 312, 319, 324, 328, 334, 340, 346, 350, 355, 364, 365, 386, 588, 589, 711, 748, 772, 817, 919, 943, 1011, 1037, 1080, 1125, 1127, 1131, 1133, 1140, 1141, 1153, 1154, 1155, 1157, 1158, 1159, 1160], "18446744073709551616": [7, 205, 215, 225, 228, 241, 244, 252, 254, 264, 267, 285, 292, 302, 306, 312, 324, 328, 334, 340, 364], "26": [7, 116, 124, 175, 177, 182, 183, 184, 193, 194, 205, 215, 220, 222, 225, 228, 231, 236, 237, 241, 244, 247, 252, 254, 257, 260, 264, 267, 270, 273, 277, 282, 285, 289, 292, 296, 306, 312, 317, 324, 328, 334, 340, 346, 350, 364, 368, 386, 588, 589, 716, 732, 897, 919, 943, 975, 977, 978, 1011, 1013, 1054, 1140, 1141, 1164, 1200], "1000": [7, 23, 205, 215, 225, 228, 231, 241, 244, 247, 252, 254, 260, 264, 267, 270, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 361, 364, 553, 554, 572, 647, 694, 768, 847, 872, 874, 879, 893, 894, 921, 922, 926, 928, 954, 961, 969, 990, 995, 999, 1025, 1032, 1081, 1114], "10715086071862673209484250490600018105614048117055336074437503883703510511249361224931983788156958581275946729175531468251871452856923140435984577574698574803934567774824230985421074605062371141877954182153046474983581941267398767559165543946077062914571196477686542167660429831652624386837205668069376": [7, 205, 215, 225, 228, 241, 264, 267, 285, 312, 340], "27": [7, 62, 98, 125, 182, 184, 193, 194, 205, 215, 220, 222, 224, 225, 228, 231, 236, 237, 241, 244, 247, 252, 254, 257, 260, 263, 264, 267, 270, 272, 273, 282, 285, 289, 292, 296, 302, 306, 312, 319, 324, 328, 334, 340, 346, 350, 361, 363, 364, 366, 386, 478, 552, 577, 744, 919, 941, 943, 1011, 1140, 1153, 1154, 1155, 1157, 1158, 1159, 1160], "10000": [7, 45, 225, 244, 247, 260, 292, 334, 1035, 1051], "19950631168807583848837421626835850838234968318861924548520089498529438830221946631919961684036194597899331129423209124271556491349413781117593785932096323957855730046793794526765246551266059895520550086918193311542508608460618104685509074866089624888090489894838009253941633257850621568309473902556912388065225096643874441046759871626985453222868538161694315775629640762836880760732228535091641476183956381458969463899410840960536267821064621427333394036525565649530603142680234969400335934316651459297773279665775606172582031407994198179607378245683762280037302885487251900834464581454650557929601414833921615734588139257095379769119277800826957735674444123062018757836325502728323789270710373802866393031428133241401624195671690574061419654342324638801248856147305207431992259611796250130992860241708340807605932320161268492288496255841312844061536738951487114256315111089745514203313820202931640957596464756010405845841566072044962867016515061920631004186422275908670900574606417856951911456055068251250406007519842261898059237118054444788072906395242548339221982707404473162376760846613033778706039803413197133493654622700563169937455508241780972810983291314403571877524768509857276937926433221599399876886660808368837838027643282775172273657572744784112294389733810861607423253291974813120197604178281965697475898164531258434135959862784130128185406283476649088690521047580882615823961985770122407044330583075869039319604603404973156583208672105913300903752823415539745394397715257455290510212310947321610753474825740775273986348298498340756937955646638621874569499279016572103701364433135817214311791398222983845847334440270964182851005072927748364550578634501100852987812389473928699540834346158807043959118985815145779177143619698728131459483783202081474982171858011389071228250905826817436220577475921417653715687725614904582904992461028630081535583308130101987675856234343538955409175623400844887526162643568648833519463720377293240094456246923254350400678027273837755376406726898636241037491410966718557050759098100246789880178271925953381282421954028302759408448955014676668389697996886241636313376393903373455801407636741877711055384225739499110186468219696581651485130494222369947714763069155468217682876200362777257723781365331611196811280792669481887201298643660768551639860534602297871557517947385246369446923087894265948217008051120322365496288169035739121368338393591756418733850510970271613915439590991598154654417336311656936031122249937969999226781732358023111862644575299135758175008199839236284615249881088960232244362173771618086357015468484058622329792853875623486556440536962622018963571028812361567512543338303270029097668650568557157505516727518899194129711337690149916181315171544007728650573189557450920330185304847113818315407324053319038462084036421763703911550639789000742853672196280903477974533320468368795868580237952218629120080742819551317948157624448298518461509704888027274721574688131594750409732115080498190455803416826949787141316063210686391511681774304792596709376": [7, 225, 244, 260, 292, 334], "hallo": [7, 205, 215, 220, 223, 225, 228, 236, 244, 247, 254, 257, 260, 264, 267, 273, 285, 289, 292, 312, 324, 328, 334, 340, 364, 412, 604, 788, 868, 916, 944, 957, 960, 966], "39": [7, 153, 169, 182, 191, 193, 194, 205, 210, 215, 220, 222, 224, 225, 228, 231, 236, 237, 241, 244, 247, 252, 254, 257, 260, 264, 267, 270, 273, 282, 285, 289, 292, 296, 302, 306, 312, 317, 320, 324, 328, 334, 340, 346, 350, 361, 362, 363, 364, 365, 366, 515, 669, 716, 882, 1011, 1140, 1141], "30": [7, 23, 62, 98, 107, 110, 124, 125, 168, 169, 174, 182, 184, 194, 204, 205, 210, 215, 220, 222, 224, 225, 228, 231, 236, 237, 241, 244, 247, 252, 254, 257, 260, 264, 267, 270, 273, 282, 285, 292, 296, 302, 306, 309, 312, 324, 328, 334, 340, 346, 350, 361, 363, 364, 366, 386, 399, 413, 478, 540, 544, 579, 580, 585, 586, 588, 589, 705, 706, 753, 754, 755, 775, 777, 893, 919, 925, 941, 942, 943, 999, 1025, 1037, 1038, 1091, 1140, 1144, 1152, 1169, 1178], "eingebettet": [7, 225], "34": [7, 182, 183, 191, 194, 205, 210, 215, 220, 222, 224, 225, 228, 231, 232, 236, 237, 241, 244, 245, 247, 252, 254, 257, 260, 264, 267, 270, 272, 273, 282, 285, 289, 290, 292, 296, 302, 306, 312, 317, 320, 324, 328, 334, 340, 346, 350, 363, 364, 365, 366, 501, 515, 519, 520, 521, 522, 534, 535, 536, 634, 635, 636, 637, 638, 643, 675, 894, 897, 919, 1047, 1066, 1140, 1141], "31": [7, 107, 125, 175, 177, 182, 194, 205, 210, 215, 220, 222, 225, 228, 231, 236, 237, 241, 244, 247, 252, 254, 255, 257, 260, 264, 267, 270, 273, 282, 285, 289, 292, 296, 302, 306, 312, 324, 328, 334, 340, 346, 363, 364, 386, 450, 478, 485, 731, 919, 977, 1009, 1026, 1060, 1093, 1140], "eingenbettet": [7, 225], "mississippi": [7, 225, 228, 237, 241, 244, 252, 254, 260, 264, 270, 273, 285, 292, 306, 312, 324, 328, 334, 340, 346, 350, 674], "count": [7, 29, 62, 88, 90, 123, 130, 172, 184, 187, 225, 228, 229, 232, 237, 241, 244, 247, 252, 254, 257, 260, 264, 270, 273, 285, 291, 292, 306, 312, 324, 328, 334, 340, 346, 350, 398, 399, 400, 401, 414, 470, 526, 552, 580, 694, 744, 769, 790, 793, 796, 797, 798, 799, 801, 804, 807, 808, 814, 818, 828, 841, 846, 852, 855, 858, 868, 877, 897, 919, 930, 933, 963, 966, 973, 984, 1005, 1081, 1095, 1105, 1108, 1116, 1119, 1134, 1141, 1149, 1189], "ss": [7, 32, 225, 228, 237, 241, 244, 252, 254, 260, 264, 270, 273, 285, 292, 306, 312, 324, 328, 334, 340, 346, 350, 674], "35": [7, 168, 182, 194, 205, 212, 215, 220, 222, 225, 228, 231, 236, 237, 241, 244, 247, 252, 254, 257, 260, 264, 267, 270, 273, 282, 285, 289, 292, 296, 302, 306, 312, 324, 328, 334, 340, 346, 350, 361, 363, 364, 365, 515, 544, 687, 689, 705, 1047, 1140], "find": [7, 17, 42, 44, 47, 48, 53, 125, 171, 172, 173, 174, 178, 183, 188, 200, 201, 202, 212, 214, 225, 228, 232, 234, 237, 241, 245, 247, 250, 252, 254, 257, 260, 264, 267, 270, 273, 278, 285, 287, 290, 292, 297, 299, 306, 308, 309, 312, 314, 324, 326, 328, 330, 334, 336, 340, 346, 350, 352, 353, 354, 363, 369, 374, 457, 463, 470, 482, 490, 497, 504, 525, 530, 531, 534, 535, 536, 537, 542, 559, 560, 589, 594, 597, 611, 613, 615, 616, 637, 639, 650, 653, 655, 658, 662, 674, 687, 689, 691, 694, 737, 741, 786, 790, 803, 842, 863, 864, 865, 867, 872, 876, 877, 879, 880, 881, 883, 897, 924, 927, 930, 933, 942, 943, 954, 982, 1011, 1014, 1028, 1058, 1062, 1073, 1081, 1142, 1179, 1191, 1193, 1194, 1195, 1200], "36": [7, 115, 121, 168, 173, 177, 182, 194, 205, 215, 220, 222, 225, 228, 231, 236, 237, 241, 244, 247, 252, 254, 257, 260, 264, 267, 273, 282, 285, 289, 292, 296, 302, 306, 312, 324, 328, 334, 340, 346, 350, 361, 364, 369, 374, 482, 495, 501, 519, 543, 546, 547, 548, 552, 553, 554, 704, 753, 754, 755, 770, 788, 919, 941, 1047, 1124], "37": [7, 131, 133, 182, 193, 194, 205, 206, 210, 215, 220, 222, 225, 228, 231, 233, 236, 237, 241, 244, 247, 252, 254, 257, 260, 264, 267, 270, 273, 282, 285, 289, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 363, 364, 365, 519, 774, 776, 778, 780, 1047, 1140, 1153, 1154, 1155, 1157, 1158, 1159, 1160], "capit": [7, 38, 225, 228, 237, 244, 254, 260, 285, 306, 363, 897, 1093], "zeil": [7, 191, 205, 215, 222, 225, 228, 231, 237, 241, 260, 264, 282, 285, 324, 328, 340, 364], "nnoch": [7, 222, 225, 241], "some": [7, 17, 21, 107, 159, 171, 172, 173, 174, 176, 179, 182, 183, 187, 193, 196, 201, 204, 208, 211, 213, 224, 225, 231, 233, 241, 247, 248, 253, 259, 260, 264, 276, 277, 279, 285, 288, 291, 292, 294, 298, 300, 301, 308, 326, 327, 333, 334, 336, 352, 387, 411, 445, 456, 472, 495, 501, 572, 597, 599, 619, 637, 650, 653, 707, 716, 744, 752, 754, 764, 767, 789, 790, 796, 801, 810, 825, 833, 837, 854, 856, 874, 879, 934, 942, 943, 964, 967, 993, 995, 997, 1005, 1034, 1036, 1063, 1079, 1085, 1132, 1150, 1169, 1191, 1192], "name": [7, 23, 39, 40, 57, 111, 112, 113, 114, 115, 123, 125, 130, 143, 150, 153, 164, 168, 171, 172, 174, 175, 176, 179, 186, 187, 192, 194, 196, 201, 204, 205, 208, 211, 213, 215, 220, 225, 228, 231, 232, 243, 245, 246, 247, 250, 252, 254, 257, 262, 264, 267, 282, 285, 289, 290, 292, 296, 306, 328, 334, 340, 346, 350, 354, 360, 363, 364, 365, 380, 402, 416, 422, 430, 431, 437, 438, 444, 448, 451, 455, 456, 459, 461, 464, 468, 470, 472, 473, 474, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 499, 501, 516, 520, 521, 522, 527, 530, 534, 535, 536, 551, 553, 556, 561, 566, 598, 608, 610, 612, 676, 689, 695, 696, 706, 707, 716, 734, 736, 740, 746, 754, 787, 788, 789, 790, 793, 801, 805, 815, 819, 831, 833, 857, 863, 864, 865, 868, 876, 877, 879, 882, 883, 897, 903, 919, 925, 930, 937, 941, 942, 943, 945, 946, 953, 954, 957, 959, 963, 971, 1004, 1008, 1011, 1012, 1013, 1023, 1025, 1026, 1028, 1029, 1030, 1033, 1035, 1042, 1047, 1049, 1052, 1056, 1057, 1059, 1060, 1064, 1065, 1073, 1075, 1077, 1079, 1080, 1081, 1086, 1091, 1093, 1098, 1114, 1115, 1125, 1131, 1133, 1141, 1144, 1147, 1148, 1149, 1154, 1155, 1157, 1158, 1159, 1160, 1169, 1176, 1178, 1188, 1192, 1194, 1195], "directori": [7, 17, 44, 60, 98, 100, 101, 103, 110, 125, 138, 142, 168, 171, 172, 173, 174, 183, 187, 198, 203, 206, 212, 224, 225, 231, 232, 233, 234, 241, 244, 245, 247, 257, 260, 272, 277, 278, 279, 287, 288, 300, 301, 305, 308, 309, 314, 322, 326, 330, 340, 351, 352, 353, 354, 355, 369, 374, 380, 382, 383, 436, 470, 472, 477, 480, 484, 486, 488, 490, 491, 493, 496, 498, 500, 514, 515, 537, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 573, 576, 579, 582, 585, 588, 591, 594, 685, 767, 789, 790, 815, 837, 839, 859, 863, 866, 867, 868, 870, 871, 872, 874, 876, 877, 879, 880, 881, 883, 884, 885, 886, 891, 892, 894, 896, 897, 902, 903, 904, 905, 906, 907, 909, 910, 911, 912, 913, 914, 917, 921, 926, 933, 941, 942, 943, 945, 950, 954, 956, 959, 962, 969, 970, 971, 972, 974, 977, 979, 988, 991, 994, 996, 1000, 1003, 1007, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1026, 1027, 1028, 1034, 1042, 1062, 1114, 1123, 1124, 1171, 1175, 1180, 1191, 1195, 1204], "multilin": [7, 215, 225, 240, 243, 247, 252, 260, 264, 324, 335, 369, 437, 1035, 1063], "jetzt": [7, 180, 191, 195, 205, 215, 222, 225, 235, 264, 320, 340, 350], "l": [7, 32, 38, 60, 62, 100, 125, 175, 179, 183, 191, 192, 194, 195, 200, 205, 210, 215, 220, 222, 223, 224, 225, 228, 231, 236, 237, 241, 244, 247, 250, 252, 254, 257, 260, 264, 267, 270, 273, 278, 282, 285, 287, 288, 292, 302, 306, 308, 309, 312, 324, 328, 334, 337, 340, 346, 350, 352, 353, 361, 363, 364, 369, 374, 442, 443, 450, 454, 466, 471, 472, 478, 485, 488, 489, 504, 516, 542, 589, 594, 613, 643, 694, 767, 788, 789, 790, 801, 815, 837, 838, 864, 865, 866, 867, 868, 870, 871, 874, 876, 879, 880, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 901, 904, 905, 908, 909, 911, 912, 913, 915, 916, 917, 921, 926, 930, 933, 934, 936, 941, 942, 943, 944, 945, 952, 954, 959, 960, 962, 964, 965, 967, 968, 969, 972, 974, 977, 980, 988, 991, 994, 995, 996, 1005, 1009, 1011, 1012, 1013, 1014, 1023, 1025, 1026, 1031, 1033, 1054, 1062, 1064, 1067, 1068, 1072, 1074, 1082, 1091, 1118, 1178, 1195], "44": [7, 168, 175, 182, 194, 205, 215, 220, 222, 225, 228, 231, 236, 237, 241, 244, 247, 252, 254, 257, 260, 264, 267, 270, 273, 282, 285, 289, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 361, 364, 775, 943, 1164], "45": [7, 29, 51, 53, 55, 56, 73, 74, 75, 88, 91, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 142, 153, 161, 164, 177, 180, 182, 194, 204, 205, 208, 210, 215, 220, 222, 225, 228, 229, 231, 237, 241, 244, 247, 252, 254, 260, 264, 267, 270, 273, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 355, 356, 357, 358, 359, 360, 363, 364, 369, 374, 407, 422, 431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 483, 500, 514, 542, 543, 544, 545, 546, 547, 548, 549, 552, 559, 561, 594, 602, 617, 620, 623, 634, 635, 636, 637, 638, 639, 643, 645, 649, 658, 661, 662, 667, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 696, 703, 710, 721, 734, 735, 745, 750, 759, 767, 771, 775, 787, 788, 789, 790, 794, 797, 799, 802, 804, 807, 809, 813, 814, 816, 818, 820, 822, 828, 830, 832, 834, 841, 843, 846, 848, 852, 855, 858, 860, 864, 865, 866, 867, 870, 871, 878, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 917, 927, 933, 940, 945, 946, 947, 948, 949, 956, 962, 964, 972, 974, 976, 988, 991, 994, 996, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1036, 1043, 1044, 1045, 1046, 1050, 1058, 1069, 1078, 1089, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1136, 1137, 1138, 1140, 1142, 1146, 1149, 1150, 1152, 1156, 1163, 1166, 1168, 1173, 1174], "46": [7, 182, 205, 210, 215, 220, 222, 225, 228, 231, 237, 241, 244, 247, 252, 254, 257, 260, 264, 267, 270, 273, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 361, 364, 773, 919, 943, 959, 1140, 1141], "47": [7, 175, 177, 182, 205, 210, 215, 220, 222, 225, 228, 231, 237, 241, 244, 247, 252, 254, 260, 264, 267, 270, 273, 282, 285, 289, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 361, 364, 365, 744, 930, 995, 1023, 1080, 1140], "try": [7, 27, 125, 130, 138, 168, 171, 172, 174, 179, 191, 194, 204, 205, 208, 212, 215, 220, 222, 225, 228, 231, 234, 237, 239, 241, 244, 247, 250, 252, 254, 257, 260, 264, 267, 269, 270, 272, 273, 276, 277, 279, 281, 282, 285, 288, 289, 292, 299, 300, 301, 302, 305, 306, 312, 323, 324, 328, 334, 336, 340, 346, 350, 355, 362, 363, 364, 365, 369, 373, 374, 384, 462, 466, 492, 496, 503, 520, 525, 534, 542, 550, 559, 561, 594, 602, 620, 623, 639, 645, 649, 654, 658, 661, 662, 679, 681, 683, 686, 687, 688, 689, 690, 691, 722, 730, 734, 744, 750, 754, 768, 770, 784, 786, 788, 789, 790, 842, 845, 942, 963, 1008, 1032, 1039, 1093, 1136, 1142, 1153, 1154, 1158, 1171], "except": [7, 21, 29, 43, 46, 60, 62, 75, 111, 112, 153, 173, 177, 183, 191, 192, 199, 204, 205, 208, 209, 211, 213, 215, 220, 222, 225, 228, 232, 233, 234, 237, 239, 241, 244, 245, 248, 249, 252, 254, 258, 259, 262, 264, 267, 269, 270, 274, 282, 285, 289, 292, 300, 301, 302, 305, 306, 312, 322, 323, 324, 326, 327, 328, 334, 340, 346, 350, 354, 356, 362, 363, 364, 365, 369, 374, 382, 383, 402, 454, 457, 491, 496, 497, 504, 531, 542, 559, 561, 594, 623, 639, 645, 649, 658, 661, 662, 666, 679, 686, 687, 689, 690, 691, 695, 698, 722, 730, 751, 753, 754, 765, 770, 790, 805, 837, 870, 875, 941, 995, 1009, 1032, 1036, 1039, 1042, 1045, 1048, 1058, 1060, 1063, 1081, 1083, 1088, 1134, 1136, 1153, 1158, 1171, 1181, 1188], "index": [7, 13, 23, 29, 39, 51, 53, 91, 111, 112, 168, 169, 178, 191, 193, 198, 203, 205, 206, 208, 209, 211, 213, 217, 218, 220, 223, 225, 228, 229, 231, 232, 234, 237, 239, 242, 244, 245, 247, 248, 250, 251, 253, 254, 255, 258, 260, 261, 263, 265, 266, 267, 269, 270, 272, 281, 282, 284, 285, 290, 291, 292, 294, 296, 298, 300, 301, 304, 305, 306, 310, 311, 313, 316, 319, 322, 323, 324, 326, 327, 328, 332, 333, 334, 338, 339, 340, 344, 345, 346, 348, 349, 350, 369, 376, 400, 416, 442, 470, 478, 573, 576, 579, 582, 585, 588, 589, 591, 629, 630, 632, 637, 676, 716, 744, 756, 770, 790, 833, 1000, 1003, 1007, 1058, 1059, 1071, 1074, 1081, 1087, 1089, 1090, 1091, 1093, 1095, 1108, 1114, 1119, 1134, 1136, 1137, 1138, 1140, 1141, 1142, 1150, 1152, 1154, 1156, 1157, 1159, 1163, 1173, 1175, 1180], "out": [7, 31, 44, 45, 50, 55, 62, 76, 86, 107, 115, 121, 123, 125, 127, 130, 138, 142, 158, 164, 165, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 182, 183, 187, 192, 193, 200, 201, 204, 208, 211, 212, 220, 225, 228, 233, 241, 247, 248, 250, 257, 260, 264, 268, 297, 323, 324, 346, 350, 355, 369, 375, 380, 391, 412, 430, 436, 437, 445, 456, 463, 470, 471, 472, 476, 478, 479, 484, 489, 492, 494, 496, 521, 522, 537, 540, 550, 566, 572, 589, 596, 598, 612, 627, 669, 672, 707, 722, 741, 744, 757, 768, 786, 805, 806, 815, 837, 845, 850, 864, 865, 868, 872, 876, 879, 883, 893, 924, 930, 934, 941, 942, 943, 960, 961, 977, 995, 998, 1008, 1009, 1011, 1023, 1028, 1035, 1039, 1079, 1080, 1087, 1114, 1117, 1144, 1149, 1151, 1157, 1159, 1160, 1164, 1170, 1189], "rang": [7, 29, 42, 62, 91, 109, 125, 126, 179, 192, 193, 194, 199, 208, 211, 213, 216, 217, 220, 223, 225, 228, 229, 232, 239, 240, 242, 243, 245, 246, 247, 250, 251, 253, 255, 256, 259, 260, 265, 266, 268, 269, 271, 273, 275, 283, 284, 285, 291, 293, 294, 301, 302, 304, 305, 307, 310, 311, 313, 322, 324, 326, 327, 328, 332, 333, 334, 337, 338, 339, 341, 344, 345, 347, 348, 349, 351, 361, 415, 442, 458, 460, 506, 540, 543, 544, 548, 572, 588, 589, 625, 627, 630, 633, 734, 784, 787, 789, 790, 801, 934, 941, 990, 996, 999, 1031, 1034, 1036, 1041, 1043, 1045, 1047, 1057, 1058, 1066, 1070, 1087, 1092, 1093, 1094, 1095, 1105, 1107, 1108, 1109, 1111, 1115, 1116, 1117, 1118, 1119, 1120, 1134, 1146, 1149, 1157, 1159, 1188, 1189, 1199], "48": [7, 175, 182, 191, 205, 210, 215, 220, 222, 225, 228, 231, 237, 244, 247, 252, 254, 257, 260, 264, 267, 270, 273, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 361, 364, 365, 941], "append": [7, 153, 191, 192, 193, 194, 195, 205, 210, 212, 215, 220, 222, 223, 224, 225, 228, 231, 236, 237, 238, 241, 244, 245, 247, 252, 254, 257, 260, 264, 267, 270, 273, 282, 285, 289, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 364, 365, 478, 481, 571, 589, 631, 647, 659, 686, 798, 810, 825, 837, 864, 865, 879, 882, 903, 916, 941, 950, 963, 999, 1031, 1037, 1038, 1051, 1067, 1072, 1075, 1077, 1082, 1085, 1086, 1113, 1161, 1164], "one": [7, 21, 27, 32, 40, 44, 45, 50, 61, 62, 63, 81, 85, 86, 107, 111, 112, 123, 125, 126, 129, 130, 134, 138, 142, 143, 150, 156, 160, 162, 166, 171, 172, 173, 174, 175, 176, 178, 179, 182, 183, 187, 192, 193, 194, 196, 201, 204, 205, 208, 210, 212, 215, 220, 222, 223, 224, 225, 228, 231, 233, 234, 241, 244, 247, 252, 254, 255, 257, 258, 260, 263, 264, 267, 270, 272, 282, 285, 288, 291, 292, 294, 296, 298, 302, 306, 311, 312, 314, 323, 328, 330, 334, 340, 346, 350, 354, 355, 360, 361, 366, 369, 375, 387, 392, 399, 410, 415, 417, 425, 430, 432, 433, 437, 440, 442, 447, 450, 458, 459, 460, 462, 466, 470, 472, 478, 479, 481, 482, 484, 486, 490, 491, 494, 495, 496, 501, 503, 504, 506, 507, 515, 520, 522, 540, 543, 545, 546, 550, 551, 553, 572, 583, 589, 600, 601, 609, 610, 612, 613, 614, 615, 616, 627, 628, 636, 647, 650, 654, 669, 676, 693, 694, 697, 698, 699, 702, 711, 722, 741, 743, 744, 752, 754, 755, 756, 757, 758, 764, 766, 768, 775, 788, 798, 805, 812, 815, 825, 831, 837, 845, 853, 857, 862, 863, 864, 870, 879, 881, 882, 897, 916, 930, 934, 936, 937, 938, 941, 942, 943, 944, 946, 950, 953, 954, 960, 961, 963, 964, 967, 970, 971, 973, 979, 980, 981, 982, 984, 987, 990, 993, 995, 996, 997, 1004, 1008, 1011, 1014, 1017, 1023, 1026, 1027, 1029, 1030, 1032, 1034, 1035, 1037, 1043, 1045, 1046, 1048, 1059, 1060, 1063, 1064, 1065, 1067, 1071, 1072, 1074, 1076, 1077, 1081, 1083, 1085, 1086, 1094, 1104, 1107, 1114, 1115, 1140, 1141, 1142, 1143, 1145, 1149, 1150, 1152, 1154, 1160, 1161, 1162, 1165, 1169, 1171, 1176, 1178, 1191, 1194], "49": [7, 182, 191, 205, 210, 215, 220, 222, 225, 228, 231, 237, 241, 244, 247, 252, 254, 260, 264, 267, 270, 273, 282, 285, 289, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 361, 364, 365, 737, 882, 1023, 1037], "extend": [7, 65, 173, 174, 205, 222, 223, 225, 230, 236, 241, 244, 247, 252, 254, 260, 264, 267, 270, 282, 285, 292, 298, 302, 306, 312, 334, 340, 346, 350, 364, 499, 506, 515, 540, 613, 615, 616, 668, 798, 869, 1067, 1072, 1082, 1141, 1153], "slice": [7, 29, 91, 193, 195, 204, 208, 209, 211, 213, 218, 221, 222, 225, 232, 244, 245, 247, 248, 251, 255, 256, 262, 263, 265, 266, 267, 269, 281, 284, 286, 291, 294, 301, 304, 305, 307, 310, 311, 313, 322, 323, 326, 327, 332, 333, 338, 339, 344, 345, 348, 349, 790, 835, 996, 1058, 1071, 1075, 1095, 1108, 1119, 1134, 1150, 1154, 1156, 1158], "inclus": [7, 211, 225, 252, 264, 436, 629, 1097, 1157], "exclus": [7, 199, 225, 247, 264, 301, 418, 629, 764, 963, 996, 1045, 1081, 1085, 1097, 1157], "51": [7, 182, 205, 210, 215, 220, 222, 225, 228, 231, 237, 241, 244, 247, 252, 254, 260, 264, 267, 270, 273, 282, 285, 289, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 361, 364, 651, 652, 653, 654, 919, 921, 1140], "l\u00f6schen": [7, 215, 221, 225, 369], "52": [7, 182, 191, 205, 210, 215, 220, 222, 225, 228, 231, 237, 241, 244, 247, 252, 254, 260, 264, 267, 270, 273, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 364, 365, 943, 1140], "del": [7, 38, 191, 194, 195, 205, 220, 222, 225, 228, 236, 241, 244, 247, 252, 254, 260, 264, 267, 270, 273, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 362, 364, 1042, 1067, 1083], "53": [7, 175, 205, 210, 215, 220, 222, 225, 228, 231, 237, 241, 244, 247, 252, 254, 260, 264, 267, 270, 273, 282, 285, 289, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 361, 364, 376, 520, 521, 747, 817, 919, 941, 1011, 1023, 1140, 1141], "iter": [7, 24, 29, 62, 130, 131, 192, 195, 199, 204, 208, 209, 211, 213, 216, 217, 221, 223, 225, 229, 230, 232, 233, 235, 239, 240, 242, 243, 245, 246, 248, 249, 250, 251, 253, 255, 256, 259, 262, 264, 266, 267, 271, 283, 286, 292, 300, 301, 303, 307, 312, 322, 325, 326, 327, 329, 335, 341, 346, 351, 354, 369, 375, 427, 429, 442, 478, 503, 553, 572, 589, 631, 632, 633, 637, 640, 647, 650, 652, 654, 659, 709, 716, 725, 746, 784, 790, 960, 1032, 1036, 1038, 1047, 1060, 1070, 1084, 1085, 1092, 1093, 1094, 1095, 1108, 1119, 1131, 1134, 1136, 1146, 1148, 1158, 1161, 1199], "mittel": [7, 11, 23, 195, 205, 207, 223, 225, 230, 387, 1183, 1186, 1195, 1203], "54": [7, 182, 191, 205, 210, 215, 220, 222, 225, 228, 231, 237, 241, 244, 247, 252, 254, 257, 260, 264, 267, 270, 273, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 361, 363, 364, 376, 651, 652, 653, 654, 754, 827, 919, 941, 1023, 1140], "element": [7, 8, 35, 38, 107, 110, 111, 112, 125, 192, 194, 195, 205, 210, 211, 216, 217, 220, 222, 223, 225, 226, 228, 231, 235, 236, 237, 241, 244, 245, 247, 251, 253, 254, 260, 263, 264, 267, 271, 292, 296, 299, 302, 311, 324, 363, 364, 400, 427, 442, 450, 454, 457, 542, 556, 559, 561, 570, 589, 594, 626, 627, 628, 629, 630, 631, 632, 633, 634, 636, 640, 644, 647, 651, 654, 676, 694, 697, 699, 716, 730, 744, 746, 790, 798, 1005, 1037, 1039, 1056, 1067, 1072, 1073, 1082, 1084, 1118, 1144, 1161, 1169, 1192, 1199], "55": [7, 182, 191, 205, 210, 215, 220, 222, 225, 228, 231, 237, 241, 244, 247, 252, 254, 260, 264, 267, 270, 273, 282, 285, 289, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 361, 363, 364, 365, 376, 453, 478, 684, 685, 686, 687, 689, 788, 1011, 1093], "def": [7, 62, 191, 192, 195, 205, 210, 211, 215, 220, 222, 223, 225, 228, 231, 232, 237, 238, 241, 244, 245, 247, 252, 254, 257, 260, 264, 267, 270, 273, 282, 285, 290, 292, 302, 306, 312, 317, 320, 324, 328, 334, 340, 346, 350, 364, 365, 478, 736, 989, 1032, 1033, 1034, 1037, 1038, 1039, 1042, 1043, 1045, 1047, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1063, 1066, 1076, 1077, 1082, 1086, 1118, 1124, 1131, 1132, 1133, 1152, 1158, 1160, 1169, 1170], "is_integ": [7, 225, 282, 346], "elem": [7, 191, 195, 205, 210, 215, 220, 222, 225, 237, 244, 247, 252, 257, 282, 285, 292, 302, 306, 312, 328, 334, 340, 346, 350, 556, 653, 655, 702, 722, 724, 726, 729, 743, 744, 746, 766, 1039, 1082, 1086], "type": [7, 29, 50, 79, 84, 101, 111, 112, 143, 153, 164, 165, 168, 171, 172, 175, 177, 179, 187, 191, 192, 195, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 221, 222, 224, 225, 228, 231, 232, 233, 236, 237, 241, 246, 249, 250, 252, 254, 259, 262, 264, 268, 270, 272, 273, 275, 283, 285, 288, 289, 292, 300, 301, 302, 305, 306, 312, 317, 321, 322, 323, 325, 326, 327, 328, 333, 334, 337, 340, 345, 347, 350, 353, 361, 362, 363, 364, 369, 371, 372, 380, 402, 413, 414, 421, 426, 431, 432, 436, 438, 442, 444, 445, 448, 451, 452, 453, 454, 455, 458, 460, 461, 463, 464, 468, 473, 474, 478, 494, 496, 505, 508, 516, 522, 552, 556, 577, 586, 596, 598, 604, 605, 609, 611, 612, 622, 630, 659, 665, 669, 672, 674, 676, 678, 684, 696, 697, 702, 707, 708, 716, 722, 733, 734, 736, 741, 742, 743, 744, 753, 754, 756, 757, 758, 763, 773, 774, 776, 780, 781, 783, 785, 786, 787, 788, 789, 790, 793, 796, 798, 803, 806, 825, 837, 863, 867, 879, 882, 894, 897, 900, 911, 913, 914, 917, 925, 933, 934, 936, 941, 945, 950, 959, 960, 963, 966, 967, 968, 969, 970, 980, 992, 1001, 1004, 1008, 1009, 1011, 1028, 1030, 1033, 1036, 1039, 1043, 1048, 1049, 1050, 1057, 1061, 1063, 1065, 1066, 1067, 1071, 1073, 1074, 1075, 1080, 1081, 1083, 1085, 1087, 1101, 1112, 1113, 1131, 1134, 1136, 1141, 1145, 1149, 1154, 1155, 1157, 1164, 1169, 1171, 1189, 1190], "int": [7, 21, 46, 108, 111, 112, 115, 118, 121, 122, 138, 174, 183, 192, 194, 205, 211, 215, 220, 222, 223, 225, 228, 232, 233, 238, 241, 244, 245, 247, 250, 252, 254, 257, 260, 264, 267, 270, 273, 282, 285, 291, 292, 294, 302, 306, 312, 320, 324, 328, 334, 339, 340, 346, 350, 362, 364, 365, 391, 392, 394, 396, 398, 400, 401, 402, 404, 405, 406, 410, 411, 412, 414, 415, 416, 420, 430, 432, 433, 434, 435, 436, 437, 439, 440, 442, 443, 445, 446, 447, 450, 452, 453, 457, 458, 459, 460, 461, 462, 466, 467, 501, 508, 515, 516, 520, 521, 522, 523, 526, 529, 530, 532, 534, 535, 536, 538, 540, 548, 550, 552, 554, 555, 556, 557, 558, 560, 570, 572, 577, 580, 586, 589, 596, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 619, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 641, 642, 643, 647, 650, 651, 652, 653, 654, 655, 659, 661, 665, 666, 669, 671, 672, 674, 675, 676, 678, 683, 684, 685, 686, 687, 688, 689, 690, 694, 695, 697, 698, 701, 707, 708, 709, 711, 712, 713, 714, 716, 717, 718, 719, 720, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 736, 737, 738, 739, 741, 742, 743, 744, 746, 748, 755, 756, 757, 758, 761, 763, 766, 768, 770, 774, 776, 778, 780, 788, 793, 796, 801, 803, 808, 815, 817, 819, 821, 825, 829, 831, 833, 842, 847, 854, 874, 894, 937, 941, 955, 957, 959, 960, 961, 963, 966, 967, 968, 969, 970, 973, 975, 978, 980, 982, 984, 986, 992, 995, 998, 999, 1001, 1004, 1005, 1008, 1009, 1011, 1023, 1027, 1029, 1054, 1065, 1066, 1074, 1075, 1077, 1080, 1086, 1087, 1103, 1126, 1128, 1131, 1132, 1176, 1181], "return": [7, 21, 27, 62, 108, 115, 118, 121, 122, 168, 171, 173, 174, 175, 179, 183, 191, 192, 195, 205, 209, 211, 213, 215, 220, 222, 223, 225, 228, 231, 232, 233, 237, 238, 241, 244, 245, 247, 250, 252, 254, 257, 260, 264, 267, 270, 274, 275, 282, 285, 290, 292, 296, 302, 306, 317, 320, 323, 324, 328, 334, 341, 346, 350, 364, 365, 391, 392, 394, 398, 400, 402, 411, 420, 430, 436, 442, 443, 445, 452, 453, 456, 457, 459, 460, 462, 466, 478, 485, 494, 495, 496, 497, 501, 503, 506, 515, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 540, 547, 548, 552, 553, 556, 572, 580, 586, 589, 596, 597, 598, 600, 601, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 619, 621, 622, 624, 625, 626, 627, 628, 629, 631, 632, 633, 634, 635, 637, 638, 641, 642, 643, 647, 650, 651, 652, 653, 654, 655, 661, 665, 666, 669, 671, 672, 678, 682, 683, 684, 685, 686, 687, 688, 689, 690, 694, 699, 701, 702, 709, 711, 712, 713, 714, 716, 717, 718, 719, 720, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 736, 737, 738, 739, 740, 741, 744, 746, 751, 752, 754, 755, 756, 757, 758, 764, 766, 768, 774, 776, 778, 779, 780, 781, 784, 785, 786, 788, 793, 800, 808, 815, 819, 827, 829, 851, 853, 857, 874, 894, 941, 955, 957, 959, 960, 961, 963, 964, 966, 967, 968, 969, 970, 975, 978, 979, 980, 990, 992, 995, 1001, 1004, 1005, 1008, 1009, 1011, 1023, 1027, 1028, 1029, 1030, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1047, 1051, 1052, 1054, 1055, 1056, 1077, 1079, 1081, 1082, 1083, 1086, 1093, 1109, 1111, 1115, 1118, 1119, 1126, 1128, 1131, 1155, 1157, 1158, 1160, 1169, 1176, 1181], "els": [7, 21, 43, 50, 62, 111, 112, 120, 126, 142, 172, 174, 175, 178, 187, 192, 195, 205, 208, 211, 215, 223, 225, 228, 231, 232, 233, 237, 241, 244, 245, 248, 249, 250, 252, 256, 257, 262, 264, 267, 271, 273, 282, 284, 285, 290, 292, 302, 306, 312, 324, 334, 341, 346, 351, 354, 365, 376, 398, 404, 415, 420, 431, 437, 438, 444, 448, 451, 455, 456, 464, 468, 473, 474, 478, 486, 487, 501, 525, 532, 535, 589, 612, 636, 637, 647, 654, 668, 688, 696, 701, 734, 755, 757, 764, 768, 787, 789, 790, 819, 829, 853, 864, 865, 870, 889, 891, 894, 900, 921, 942, 955, 958, 963, 989, 990, 992, 995, 997, 1035, 1042, 1054, 1055, 1058, 1069, 1077, 1083, 1158, 1188], "fals": [7, 46, 111, 112, 115, 119, 120, 122, 175, 177, 191, 192, 205, 210, 215, 220, 222, 223, 225, 228, 231, 237, 241, 244, 245, 247, 252, 254, 257, 260, 264, 267, 270, 273, 282, 285, 289, 292, 296, 302, 306, 312, 317, 324, 328, 334, 340, 346, 350, 363, 378, 394, 398, 415, 452, 478, 612, 637, 669, 676, 699, 711, 764, 768, 770, 857, 870, 897, 989, 990, 995, 997, 1017, 1032, 1047, 1051, 1054, 1067, 1068, 1070, 1071, 1075, 1154, 1155, 1158, 1160, 1176], "56": [7, 168, 182, 205, 210, 215, 220, 222, 225, 228, 231, 237, 241, 244, 247, 252, 254, 260, 264, 267, 270, 273, 282, 285, 289, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 361, 363, 364, 376, 415, 519, 607, 788, 916, 941, 943, 1034, 1140, 1153, 1154, 1155, 1157, 1158, 1159, 1160], "x": [7, 23, 32, 42, 60, 62, 115, 118, 119, 122, 177, 183, 191, 192, 193, 195, 205, 215, 220, 222, 224, 225, 228, 231, 241, 244, 247, 248, 252, 254, 260, 264, 267, 270, 272, 273, 282, 285, 289, 292, 301, 302, 306, 328, 334, 340, 346, 350, 365, 369, 411, 414, 415, 421, 436, 437, 439, 442, 445, 446, 450, 452, 460, 462, 466, 489, 540, 550, 587, 596, 597, 598, 599, 601, 603, 604, 605, 606, 607, 608, 610, 612, 614, 615, 622, 629, 637, 697, 698, 699, 701, 716, 718, 719, 720, 737, 748, 757, 863, 864, 865, 868, 872, 874, 879, 882, 884, 885, 893, 894, 919, 922, 926, 928, 934, 941, 942, 943, 959, 969, 975, 977, 978, 986, 990, 1011, 1012, 1013, 1014, 1019, 1023, 1025, 1026, 1031, 1032, 1060, 1062, 1068, 1076, 1077, 1079, 1080, 1081, 1084, 1085, 1090, 1114, 1141, 1158, 1169, 1170, 1176], "filter": [7, 29, 107, 110, 125, 189, 192, 225, 232, 245, 262, 285, 291, 294, 298, 299, 306, 323, 325, 328, 335, 340, 344, 348, 349, 542, 559, 594, 752, 753, 790, 862, 881, 930, 1134, 1150, 1156, 1159, 1176], "57": [7, 168, 182, 205, 210, 215, 220, 222, 225, 228, 231, 237, 241, 244, 247, 252, 254, 260, 264, 267, 270, 273, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 361, 364, 365, 485, 490, 919, 941, 954, 1012, 1013, 1140], "zero": [7, 32, 38, 168, 174, 190, 192, 193, 195, 205, 215, 223, 225, 228, 241, 247, 252, 254, 257, 260, 264, 267, 282, 306, 340, 346, 369, 391, 400, 418, 743, 753, 757, 796, 808, 823, 868, 897, 912, 919, 943, 963, 984, 990, 993, 996, 999, 1004, 1005, 1071], "two": [7, 12, 17, 29, 32, 34, 35, 36, 38, 42, 44, 54, 70, 86, 107, 134, 160, 162, 165, 166, 171, 172, 173, 174, 187, 192, 193, 194, 200, 204, 205, 210, 215, 216, 218, 220, 222, 223, 225, 228, 229, 231, 233, 234, 235, 239, 241, 242, 245, 247, 250, 251, 252, 254, 255, 260, 261, 263, 264, 266, 268, 269, 270, 282, 284, 285, 288, 290, 291, 292, 300, 302, 304, 305, 306, 310, 311, 312, 316, 319, 328, 332, 333, 334, 338, 339, 340, 344, 345, 346, 348, 349, 350, 355, 361, 369, 375, 378, 387, 388, 399, 406, 436, 442, 444, 445, 448, 450, 451, 454, 455, 457, 459, 462, 464, 468, 473, 474, 476, 477, 478, 479, 488, 491, 504, 506, 516, 520, 521, 540, 550, 552, 572, 580, 583, 589, 605, 610, 612, 629, 652, 694, 695, 696, 697, 698, 734, 740, 743, 744, 746, 753, 756, 758, 787, 789, 790, 835, 837, 840, 902, 904, 924, 934, 936, 941, 942, 943, 960, 963, 964, 971, 981, 982, 990, 995, 1004, 1009, 1019, 1029, 1037, 1043, 1046, 1049, 1054, 1057, 1058, 1064, 1067, 1070, 1081, 1083, 1085, 1092, 1095, 1097, 1098, 1099, 1102, 1104, 1105, 1108, 1109, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1131, 1134, 1135, 1141, 1143, 1149, 1157, 1170, 1176, 1189, 1199, 1204], "58": [7, 175, 182, 205, 210, 215, 220, 222, 225, 228, 231, 237, 241, 244, 247, 252, 254, 260, 264, 267, 270, 273, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 364, 369, 374, 376, 478, 943, 1012, 1013, 1023, 1140, 1141], "59": [7, 182, 205, 210, 215, 220, 222, 225, 228, 231, 237, 241, 244, 247, 252, 254, 260, 264, 267, 270, 273, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 361, 364, 376, 1013, 1014, 1023, 1140], "three": [7, 12, 32, 36, 38, 43, 62, 111, 112, 130, 173, 185, 188, 192, 193, 204, 205, 208, 209, 215, 220, 222, 223, 225, 231, 239, 241, 244, 247, 252, 254, 257, 260, 264, 267, 270, 282, 285, 290, 291, 292, 294, 300, 301, 302, 306, 311, 312, 324, 328, 334, 340, 346, 350, 369, 387, 456, 631, 676, 870, 879, 882, 897, 934, 941, 943, 963, 995, 1004, 1039, 1049, 1067, 1071, 1081, 1083, 1085, 1098, 1104, 1135, 1136, 1190, 1204], "60": [7, 62, 107, 148, 182, 205, 210, 215, 220, 222, 225, 228, 231, 237, 241, 244, 247, 252, 254, 260, 264, 267, 270, 272, 273, 282, 285, 289, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 363, 364, 520, 521, 522, 534, 535, 536, 543, 879, 941, 942, 943, 1037, 1140, 1141], "61": [7, 62, 148, 182, 193, 205, 210, 215, 220, 222, 225, 228, 231, 237, 244, 247, 252, 254, 260, 264, 267, 273, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 361, 364, 369, 374, 1140, 1141], "62": [7, 182, 205, 210, 215, 220, 222, 225, 228, 231, 237, 241, 244, 247, 252, 254, 260, 264, 267, 270, 273, 282, 285, 289, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 364, 879, 1093, 1140], "63": [7, 182, 205, 210, 215, 220, 222, 225, 228, 231, 237, 244, 247, 252, 254, 260, 264, 267, 270, 273, 282, 285, 289, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 361, 364, 369, 374, 1093, 1140], "k": [7, 29, 174, 193, 195, 205, 208, 220, 222, 225, 228, 232, 233, 244, 247, 252, 254, 257, 260, 267, 270, 282, 285, 291, 292, 302, 312, 322, 324, 326, 328, 334, 340, 346, 350, 370, 371, 390, 518, 651, 694, 756, 774, 790, 897, 944, 979, 1134, 1137, 1143, 1150, 1169], "v": [7, 20, 23, 31, 32, 89, 123, 133, 150, 168, 172, 179, 193, 196, 199, 205, 209, 211, 213, 217, 219, 220, 223, 224, 225, 230, 232, 233, 234, 235, 241, 244, 245, 247, 248, 250, 251, 253, 259, 262, 263, 265, 268, 270, 274, 281, 282, 285, 288, 293, 301, 303, 307, 311, 312, 318, 324, 328, 334, 337, 340, 346, 350, 355, 369, 466, 490, 495, 516, 542, 576, 594, 651, 671, 694, 698, 702, 707, 708, 709, 716, 717, 718, 719, 720, 725, 728, 729, 730, 736, 742, 743, 744, 767, 770, 773, 775, 786, 789, 790, 799, 804, 807, 809, 814, 818, 820, 824, 828, 829, 830, 832, 834, 837, 839, 841, 845, 846, 848, 852, 855, 858, 863, 867, 870, 871, 874, 897, 899, 926, 933, 956, 962, 964, 972, 974, 988, 991, 994, 996, 1004, 1005, 1011, 1054, 1077, 1171, 1172, 1184, 1186, 1203, 1205], "65": [7, 205, 210, 215, 220, 222, 225, 228, 231, 237, 241, 244, 247, 252, 254, 260, 264, 267, 270, 273, 282, 285, 289, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 361, 364, 684, 999, 1140, 1141], "item": [7, 172, 192, 194, 205, 210, 215, 220, 222, 225, 228, 231, 232, 236, 237, 241, 244, 245, 247, 252, 254, 257, 260, 264, 267, 270, 272, 276, 277, 279, 282, 285, 290, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 363, 454, 458, 460, 479, 743, 787, 789, 790, 1004, 1005, 1039, 1040, 1041, 1047, 1073, 1080, 1083, 1085, 1124, 1169], "66": [7, 175, 182, 205, 210, 215, 220, 222, 225, 228, 231, 237, 244, 247, 252, 254, 260, 264, 267, 270, 273, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 364, 674, 1093, 1140, 1141], "": [7, 8, 14, 20, 23, 31, 35, 37, 38, 40, 43, 44, 45, 48, 55, 60, 61, 62, 63, 65, 79, 90, 105, 109, 110, 123, 125, 130, 138, 142, 143, 153, 156, 158, 168, 169, 171, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 189, 192, 193, 194, 196, 198, 199, 201, 202, 204, 205, 208, 210, 211, 215, 216, 220, 222, 223, 224, 225, 226, 228, 231, 233, 234, 237, 238, 241, 244, 245, 247, 248, 250, 251, 252, 254, 257, 258, 260, 264, 267, 270, 273, 276, 277, 279, 282, 285, 288, 289, 290, 291, 292, 294, 297, 298, 299, 300, 301, 302, 306, 309, 312, 314, 316, 319, 322, 323, 324, 326, 328, 330, 334, 336, 337, 339, 340, 346, 350, 354, 355, 363, 364, 366, 369, 372, 373, 387, 389, 402, 404, 410, 415, 436, 437, 440, 449, 454, 456, 458, 459, 460, 461, 462, 466, 477, 478, 479, 481, 482, 484, 486, 487, 490, 491, 494, 495, 496, 498, 499, 500, 501, 504, 505, 516, 518, 519, 521, 522, 526, 537, 539, 550, 551, 552, 553, 556, 562, 564, 565, 573, 576, 579, 580, 582, 585, 588, 591, 598, 600, 601, 604, 605, 608, 609, 611, 612, 621, 631, 641, 642, 652, 659, 661, 666, 668, 671, 672, 674, 678, 681, 685, 695, 696, 698, 700, 702, 705, 706, 707, 708, 711, 715, 716, 722, 731, 734, 736, 739, 743, 744, 746, 748, 752, 753, 754, 756, 758, 766, 768, 769, 770, 774, 776, 778, 779, 780, 781, 786, 788, 789, 790, 796, 805, 808, 810, 815, 821, 823, 833, 842, 845, 857, 862, 863, 864, 865, 868, 869, 872, 874, 875, 879, 880, 881, 883, 887, 889, 891, 893, 894, 895, 897, 899, 900, 916, 919, 920, 922, 923, 925, 926, 928, 929, 930, 934, 937, 941, 942, 943, 944, 945, 952, 953, 954, 955, 957, 958, 959, 960, 961, 963, 964, 966, 967, 968, 969, 970, 971, 973, 975, 977, 978, 980, 981, 982, 986, 987, 990, 992, 995, 996, 997, 999, 1000, 1001, 1003, 1005, 1007, 1008, 1009, 1014, 1023, 1025, 1026, 1027, 1028, 1029, 1030, 1032, 1033, 1034, 1037, 1038, 1040, 1041, 1042, 1046, 1047, 1054, 1058, 1059, 1060, 1063, 1067, 1068, 1074, 1077, 1080, 1081, 1084, 1085, 1088, 1093, 1098, 1105, 1116, 1123, 1124, 1125, 1127, 1135, 1142, 1144, 1145, 1148, 1149, 1152, 1159, 1160, 1161, 1162, 1163, 1164, 1169, 1170, 1175, 1178, 1180, 1181, 1184, 1189, 1191, 1194, 1207], "rot": [7, 225, 236], "gruen": [7, 225], "blau": [7, 225, 236], "67": [7, 182, 193, 205, 215, 220, 222, 225, 228, 231, 237, 244, 247, 252, 254, 260, 264, 267, 270, 273, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 364, 369, 374, 478, 543, 999, 1080, 1093, 1140, 1141], "69": [7, 60, 177, 182, 205, 210, 215, 220, 222, 225, 228, 231, 237, 241, 244, 247, 252, 254, 260, 264, 267, 270, 273, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 364, 1140, 1141, 1160], "schwarz": [7, 225, 236], "70": [7, 60, 148, 174, 182, 205, 210, 212, 215, 220, 222, 225, 228, 231, 237, 244, 247, 252, 254, 260, 264, 267, 270, 273, 282, 285, 289, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 364, 478, 543, 941, 942, 943, 1037, 1140, 1141, 1169], "add": [7, 23, 42, 44, 49, 65, 123, 130, 132, 143, 147, 150, 152, 167, 168, 172, 173, 174, 178, 179, 183, 187, 192, 201, 204, 205, 208, 211, 220, 222, 223, 225, 228, 231, 233, 237, 241, 244, 245, 247, 252, 257, 260, 264, 267, 270, 276, 277, 282, 285, 288, 292, 296, 302, 306, 312, 317, 319, 324, 328, 334, 337, 340, 346, 350, 369, 375, 417, 418, 457, 458, 466, 479, 480, 486, 489, 496, 498, 499, 515, 516, 520, 525, 526, 537, 545, 552, 554, 572, 586, 596, 609, 610, 612, 614, 683, 684, 685, 694, 702, 722, 733, 744, 752, 766, 768, 803, 805, 806, 810, 817, 825, 827, 837, 850, 853, 863, 936, 941, 942, 943, 971, 995, 997, 999, 1005, 1010, 1023, 1025, 1032, 1033, 1055, 1059, 1067, 1085, 1091, 1158, 1169, 1170, 1176], "71": [7, 148, 182, 205, 210, 215, 220, 222, 225, 228, 231, 237, 244, 247, 252, 254, 260, 264, 267, 270, 273, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 364, 369, 374, 1012, 1013, 1140, 1141], "72": [7, 182, 205, 210, 215, 220, 222, 225, 228, 231, 237, 244, 247, 252, 254, 260, 264, 267, 270, 273, 282, 285, 289, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 361, 364, 369, 374, 604, 928, 1023, 1093, 1140, 1141], "remov": [7, 57, 100, 110, 125, 130, 131, 178, 179, 192, 194, 205, 220, 225, 231, 237, 245, 247, 252, 254, 260, 264, 267, 271, 272, 278, 285, 287, 288, 302, 306, 308, 309, 312, 323, 324, 328, 334, 340, 350, 352, 353, 481, 482, 500, 514, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 559, 560, 561, 566, 570, 589, 594, 624, 630, 647, 680, 702, 755, 766, 767, 768, 785, 788, 789, 790, 798, 815, 825, 833, 856, 863, 864, 865, 866, 867, 870, 871, 884, 885, 887, 889, 890, 891, 892, 894, 895, 901, 902, 903, 904, 906, 907, 909, 911, 917, 933, 944, 954, 956, 962, 964, 967, 972, 974, 977, 988, 991, 994, 996, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1027, 1037, 1057, 1067, 1082, 1083, 1084, 1118], "73": [7, 182, 193, 205, 215, 220, 222, 225, 228, 231, 237, 244, 247, 252, 254, 260, 264, 267, 273, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 361, 364, 1140], "74": [7, 175, 177, 182, 205, 215, 220, 222, 225, 228, 231, 237, 244, 247, 252, 254, 260, 264, 267, 270, 273, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 364, 919, 928, 1093, 1140, 1141], "75": [7, 182, 205, 215, 220, 222, 225, 228, 231, 233, 237, 241, 244, 247, 252, 254, 260, 264, 267, 270, 273, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 364, 478, 1140, 1141], "sum": [7, 38, 62, 205, 225, 229, 230, 244, 245, 247, 250, 252, 260, 263, 264, 267, 270, 285, 292, 334, 340, 346, 350, 427, 442, 457, 459, 460, 462, 526, 552, 572, 596, 610, 612, 625, 629, 677, 691, 774, 776, 778, 780, 790, 996, 1054, 1070, 1154], "100": [7, 32, 123, 148, 153, 171, 172, 177, 187, 191, 192, 205, 215, 222, 225, 228, 231, 237, 241, 244, 247, 252, 254, 257, 260, 263, 264, 267, 270, 272, 273, 282, 285, 288, 289, 290, 292, 296, 302, 306, 312, 323, 324, 328, 334, 340, 346, 350, 364, 365, 369, 374, 427, 433, 434, 476, 479, 492, 501, 534, 535, 543, 562, 624, 625, 626, 627, 628, 630, 631, 632, 633, 647, 694, 711, 732, 808, 847, 893, 896, 919, 936, 975, 997, 999, 1003, 1004, 1012, 1013, 1038, 1070, 1074, 1093, 1124, 1169], "5050": [7, 205, 225, 247, 260, 267, 292, 334, 340, 346, 350], "bestimmen": [7, 225], "maximum": [7, 29, 165, 205, 215, 216, 218, 220, 223, 225, 228, 229, 235, 239, 241, 242, 244, 245, 247, 251, 252, 254, 255, 257, 260, 261, 263, 264, 266, 268, 269, 284, 285, 291, 292, 304, 305, 306, 310, 311, 332, 333, 338, 339, 340, 344, 345, 346, 348, 349, 350, 365, 417, 690, 768, 790, 798, 874, 934, 999, 1005, 1077, 1095, 1097, 1098, 1099, 1102, 1105, 1108, 1109, 1115, 1116, 1117, 1118, 1119, 1120, 1134, 1135, 1139, 1140, 1141, 1142, 1164, 1199], "zwei": [7, 148, 154, 181, 191, 199, 205, 217, 220, 222, 225, 228, 241, 244, 252, 257, 260, 264, 270, 292, 312, 320, 324, 328, 350, 364, 560, 651, 652, 653, 654, 924, 1186, 1203], "inlin": [7, 143, 193, 199, 211, 225, 241, 270, 273, 275, 297, 324, 328, 334, 437, 459, 462, 583, 598, 612, 651, 688, 740, 758, 774, 776, 778, 779, 780, 781, 788, 1031, 1111], "ohn": [7, 23, 189, 191, 199, 225, 228, 340, 859, 925, 1185, 1205, 1206, 1207], "funktion": [7, 23, 195, 199, 205, 216, 217, 218, 222, 225, 228, 231, 252, 254, 257, 260, 292, 324, 364, 1199], "666": [7, 42, 50, 108, 115, 121, 131, 133, 191, 192, 205, 215, 220, 222, 225, 228, 231, 237, 241, 244, 247, 252, 254, 257, 260, 264, 267, 270, 273, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 360, 361, 362, 364, 365, 400, 480, 499, 554, 555, 556, 557, 558, 562, 563, 564, 565, 567, 568, 570, 577, 589, 596, 600, 609, 611, 634, 635, 636, 637, 638, 640, 643, 651, 654, 674, 678, 707, 709, 716, 718, 719, 720, 724, 744, 748, 751, 753, 758, 761, 774, 776, 778, 784, 785, 786, 795, 796, 1030, 1034, 1076, 1077, 1080, 1181], "var1": [7, 215, 225, 1101], "var2": [7, 215, 225, 1101], "6712": [7, 225, 247], "isn": [7, 171, 187, 225, 291, 294, 377, 391, 442, 629, 633, 672, 695, 722, 742, 941, 1079, 1176], "fehler": [7, 199, 205, 225, 369, 374], "link": [7, 13, 17, 27, 32, 44, 104, 105, 125, 131, 136, 165, 168, 169, 171, 172, 178, 179, 180, 181, 182, 183, 189, 191, 199, 205, 212, 225, 248, 250, 278, 279, 287, 288, 296, 301, 308, 309, 314, 330, 340, 352, 353, 369, 382, 383, 432, 445, 451, 455, 459, 464, 468, 473, 474, 479, 482, 484, 485, 490, 500, 514, 537, 542, 543, 544, 545, 546, 547, 548, 549, 552, 572, 579, 580, 594, 609, 696, 702, 710, 734, 744, 745, 787, 788, 789, 790, 798, 799, 803, 804, 807, 815, 818, 827, 828, 837, 839, 841, 846, 852, 855, 858, 867, 917, 919, 924, 933, 942, 949, 979, 982, 984, 1011, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1021, 1023, 1029, 1135, 1163, 1173, 1176, 1183, 1184, 1191], "\u212c": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 74, 75, 98, 107, 116, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 208, 209, 211, 212, 213, 214, 216, 218, 219, 226, 229, 232, 233, 234, 235, 239, 242, 245, 248, 250, 251, 255, 258, 261, 263, 266, 272, 276, 277, 278, 279, 280, 287, 288, 290, 297, 298, 299, 300, 301, 308, 309, 314, 315, 316, 319, 322, 323, 326, 327, 330, 331, 336, 337, 342, 352, 353, 354, 355, 356, 357, 358, 360, 369, 376, 377, 378, 379, 380, 381, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 471, 472, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 515, 516, 523, 524, 525, 526, 527, 529, 530, 531, 537, 538, 539, 540, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 621, 622, 629, 630, 631, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 659, 661, 663, 665, 666, 668, 669, 670, 671, 672, 674, 675, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 693, 694, 695, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 715, 716, 721, 722, 731, 732, 733, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 774, 776, 778, 779, 780, 781, 788, 792, 793, 795, 796, 798, 800, 801, 803, 805, 806, 808, 814, 815, 817, 819, 821, 823, 825, 827, 829, 831, 833, 835, 839, 840, 842, 844, 845, 847, 850, 851, 853, 854, 856, 857, 859, 861, 862, 863, 868, 869, 872, 873, 874, 875, 876, 877, 879, 880, 881, 882, 893, 894, 895, 896, 897, 898, 899, 900, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 928, 929, 930, 935, 936, 937, 938, 941, 944, 950, 951, 952, 953, 954, 955, 957, 958, 959, 960, 961, 962, 963, 966, 967, 968, 969, 970, 973, 975, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 989, 990, 992, 993, 995, 997, 998, 999, 1011, 1012, 1013, 1014, 1019, 1023, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1039, 1042, 1043, 1045, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1091, 1092, 1093, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1144, 1145, 1147, 1148, 1149, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1161, 1165, 1169, 1170, 1171, 1172, 1199], "\u2145": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 74, 75, 98, 107, 116, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 208, 209, 211, 212, 213, 214, 216, 218, 219, 226, 229, 232, 233, 234, 235, 239, 242, 245, 248, 250, 251, 255, 258, 261, 263, 266, 272, 276, 277, 278, 279, 280, 287, 288, 290, 297, 298, 299, 300, 301, 308, 309, 314, 315, 316, 319, 322, 323, 326, 327, 330, 331, 336, 337, 342, 352, 353, 354, 355, 356, 357, 358, 360, 369, 376, 377, 378, 379, 380, 381, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 471, 472, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 515, 516, 523, 524, 525, 526, 527, 529, 530, 531, 537, 538, 539, 540, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 621, 622, 629, 630, 631, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 659, 661, 663, 665, 666, 668, 669, 670, 671, 672, 674, 675, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 693, 694, 695, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 715, 716, 721, 722, 731, 732, 733, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 774, 776, 778, 779, 780, 781, 788, 792, 793, 795, 796, 798, 800, 801, 803, 805, 806, 808, 814, 815, 817, 819, 821, 823, 825, 827, 829, 831, 833, 835, 839, 840, 842, 844, 845, 847, 850, 851, 853, 854, 856, 857, 859, 861, 862, 863, 868, 869, 872, 873, 874, 875, 876, 877, 879, 880, 881, 882, 893, 894, 895, 896, 897, 898, 899, 900, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 928, 929, 930, 935, 936, 937, 938, 941, 944, 950, 951, 952, 953, 954, 955, 957, 958, 959, 960, 961, 962, 963, 966, 967, 968, 969, 970, 973, 975, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 989, 990, 992, 993, 995, 997, 998, 999, 1011, 1012, 1013, 1014, 1019, 1023, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1039, 1042, 1043, 1045, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1091, 1092, 1093, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1144, 1145, 1147, 1148, 1149, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1161, 1165, 1169, 1170, 1171, 1172, 1199], "\u212d": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 74, 75, 98, 107, 116, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 208, 209, 211, 212, 213, 214, 216, 218, 219, 226, 229, 232, 233, 234, 235, 239, 242, 245, 248, 250, 251, 255, 258, 261, 263, 266, 272, 276, 277, 278, 279, 280, 287, 288, 290, 297, 298, 299, 300, 301, 308, 309, 314, 315, 316, 319, 322, 323, 326, 327, 330, 331, 336, 337, 342, 352, 353, 354, 355, 356, 357, 358, 360, 369, 376, 377, 378, 379, 380, 381, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 471, 472, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 515, 516, 523, 524, 525, 526, 527, 529, 530, 531, 537, 538, 539, 540, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 621, 622, 629, 630, 631, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 659, 661, 663, 665, 666, 668, 669, 670, 671, 672, 674, 675, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 693, 694, 695, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 715, 716, 721, 722, 731, 732, 733, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 774, 776, 778, 779, 780, 781, 788, 792, 793, 795, 796, 798, 800, 801, 803, 805, 806, 808, 814, 815, 817, 819, 821, 823, 825, 827, 829, 831, 833, 835, 839, 840, 842, 844, 845, 847, 850, 851, 853, 854, 856, 857, 859, 861, 862, 863, 868, 869, 872, 873, 874, 875, 876, 877, 879, 880, 881, 882, 893, 894, 895, 896, 897, 898, 899, 900, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 928, 929, 930, 935, 936, 937, 938, 941, 944, 950, 951, 952, 953, 954, 955, 957, 958, 959, 960, 961, 962, 963, 966, 967, 968, 969, 970, 973, 975, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 989, 990, 992, 993, 995, 997, 998, 999, 1011, 1012, 1013, 1014, 1019, 1023, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1039, 1042, 1043, 1045, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1091, 1092, 1093, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1144, 1145, 1147, 1148, 1149, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1161, 1165, 1169, 1170, 1171, 1172, 1199], "\u2102": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 74, 75, 98, 107, 116, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 208, 209, 211, 212, 213, 214, 216, 218, 219, 226, 229, 232, 233, 234, 235, 239, 242, 245, 248, 250, 251, 255, 258, 261, 263, 266, 272, 276, 277, 278, 279, 280, 287, 288, 290, 297, 298, 299, 300, 301, 308, 309, 314, 315, 316, 319, 322, 323, 326, 327, 330, 331, 336, 337, 342, 352, 353, 354, 355, 356, 357, 358, 360, 369, 376, 377, 378, 379, 380, 381, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 471, 472, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 515, 516, 523, 524, 525, 526, 527, 529, 530, 531, 537, 538, 539, 540, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 621, 622, 629, 630, 631, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 659, 661, 663, 665, 666, 668, 669, 670, 671, 672, 674, 675, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 693, 694, 695, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 715, 716, 721, 722, 731, 732, 733, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 774, 776, 778, 779, 780, 781, 788, 792, 793, 795, 796, 798, 800, 801, 803, 805, 806, 808, 814, 815, 817, 819, 821, 823, 825, 827, 829, 831, 833, 835, 839, 840, 842, 844, 845, 847, 850, 851, 853, 854, 856, 857, 859, 861, 862, 863, 868, 869, 872, 873, 874, 875, 876, 877, 879, 880, 881, 882, 893, 894, 895, 896, 897, 898, 899, 900, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 928, 929, 930, 935, 936, 937, 938, 941, 944, 950, 951, 952, 953, 954, 955, 957, 958, 959, 960, 961, 962, 963, 966, 967, 968, 969, 970, 973, 975, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 989, 990, 992, 993, 995, 997, 998, 999, 1011, 1012, 1013, 1014, 1019, 1023, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1039, 1042, 1043, 1045, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1091, 1092, 1093, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1144, 1145, 1147, 1148, 1149, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1161, 1165, 1169, 1170, 1171, 1172, 1199], "\u2146": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 74, 75, 98, 107, 116, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 208, 209, 211, 212, 213, 214, 216, 218, 219, 226, 229, 232, 233, 234, 235, 239, 242, 245, 248, 250, 251, 255, 258, 261, 263, 266, 272, 276, 277, 278, 279, 280, 287, 288, 290, 297, 298, 299, 300, 301, 308, 309, 314, 315, 316, 319, 322, 323, 326, 327, 330, 331, 336, 337, 342, 352, 353, 354, 355, 356, 357, 358, 360, 369, 376, 377, 378, 379, 380, 381, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 471, 472, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 515, 516, 523, 524, 525, 526, 527, 529, 530, 531, 537, 538, 539, 540, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 621, 622, 629, 630, 631, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 659, 661, 663, 665, 666, 668, 669, 670, 671, 672, 674, 675, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 693, 694, 695, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 715, 716, 721, 722, 731, 732, 733, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 774, 776, 778, 779, 780, 781, 788, 792, 793, 795, 796, 798, 800, 801, 803, 805, 806, 808, 814, 815, 817, 819, 821, 823, 825, 827, 829, 831, 833, 835, 839, 840, 842, 844, 845, 847, 850, 851, 853, 854, 856, 857, 859, 861, 862, 863, 868, 869, 872, 873, 874, 875, 876, 877, 879, 880, 881, 882, 893, 894, 895, 896, 897, 898, 899, 900, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 928, 929, 930, 935, 936, 937, 938, 941, 944, 950, 951, 952, 953, 954, 955, 957, 958, 959, 960, 961, 962, 963, 966, 967, 968, 969, 970, 973, 975, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 989, 990, 992, 993, 995, 997, 998, 999, 1011, 1012, 1013, 1014, 1019, 1023, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1039, 1042, 1043, 1045, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1091, 1092, 1093, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1144, 1145, 1147, 1148, 1149, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1161, 1165, 1169, 1170, 1171, 1172, 1199], "\u03dd": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 74, 75, 98, 107, 116, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 208, 209, 211, 212, 213, 214, 216, 218, 219, 226, 229, 232, 233, 234, 235, 239, 242, 245, 248, 250, 251, 255, 258, 261, 263, 266, 272, 276, 277, 278, 279, 280, 287, 288, 290, 297, 298, 299, 300, 301, 308, 309, 314, 315, 316, 319, 322, 323, 326, 327, 330, 331, 336, 337, 342, 352, 353, 354, 355, 356, 357, 358, 360, 369, 376, 377, 378, 379, 380, 381, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 471, 472, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 515, 516, 523, 524, 525, 526, 527, 529, 530, 531, 537, 538, 539, 540, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 621, 622, 629, 630, 631, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 659, 661, 663, 665, 666, 668, 669, 670, 671, 672, 674, 675, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 693, 694, 695, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 715, 716, 721, 722, 731, 732, 733, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 774, 776, 778, 779, 780, 781, 788, 792, 793, 795, 796, 798, 800, 801, 803, 805, 806, 808, 814, 815, 817, 819, 821, 823, 825, 827, 829, 831, 833, 835, 839, 840, 842, 844, 845, 847, 850, 851, 853, 854, 856, 857, 859, 861, 862, 863, 868, 869, 872, 873, 874, 875, 876, 877, 879, 880, 881, 882, 893, 894, 895, 896, 897, 898, 899, 900, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 928, 929, 930, 935, 936, 937, 938, 941, 944, 950, 951, 952, 953, 954, 955, 957, 958, 959, 960, 961, 962, 963, 966, 967, 968, 969, 970, 973, 975, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 989, 990, 992, 993, 995, 997, 998, 999, 1011, 1012, 1013, 1014, 1019, 1023, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1039, 1042, 1043, 1045, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1091, 1092, 1093, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1144, 1145, 1147, 1148, 1149, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1161, 1165, 1169, 1170, 1171, 1172, 1199], "\u2130": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 74, 75, 98, 107, 116, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 208, 209, 211, 212, 213, 214, 216, 218, 219, 226, 229, 232, 233, 234, 235, 239, 242, 245, 248, 250, 251, 255, 258, 261, 263, 266, 272, 276, 277, 278, 279, 280, 287, 288, 290, 297, 298, 299, 300, 301, 308, 309, 314, 315, 316, 319, 322, 323, 326, 327, 330, 331, 336, 337, 342, 352, 353, 354, 355, 356, 357, 358, 360, 369, 376, 377, 378, 379, 380, 381, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 471, 472, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 515, 516, 523, 524, 525, 526, 527, 529, 530, 531, 537, 538, 539, 540, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 621, 622, 629, 630, 631, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 659, 661, 663, 665, 666, 668, 669, 670, 671, 672, 674, 675, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 693, 694, 695, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 715, 716, 721, 722, 731, 732, 733, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 774, 776, 778, 779, 780, 781, 788, 792, 793, 795, 796, 798, 800, 801, 803, 805, 806, 808, 814, 815, 817, 819, 821, 823, 825, 827, 829, 831, 833, 835, 839, 840, 842, 844, 845, 847, 850, 851, 853, 854, 856, 857, 859, 861, 862, 863, 868, 869, 872, 873, 874, 875, 876, 877, 879, 880, 881, 882, 893, 894, 895, 896, 897, 898, 899, 900, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 928, 929, 930, 935, 936, 937, 938, 941, 944, 950, 951, 952, 953, 954, 955, 957, 958, 959, 960, 961, 962, 963, 966, 967, 968, 969, 970, 973, 975, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 989, 990, 992, 993, 995, 997, 998, 999, 1011, 1012, 1013, 1014, 1019, 1023, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1039, 1042, 1043, 1045, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1091, 1092, 1093, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1144, 1145, 1147, 1148, 1149, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1161, 1165, 1169, 1170, 1171, 1172, 1199], "\u2147": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 74, 75, 98, 107, 116, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 208, 209, 211, 212, 213, 214, 216, 218, 219, 226, 229, 232, 233, 234, 235, 239, 242, 245, 248, 250, 251, 255, 258, 261, 263, 266, 272, 276, 277, 278, 279, 280, 287, 288, 290, 297, 298, 299, 300, 301, 308, 309, 314, 315, 316, 319, 322, 323, 326, 327, 330, 331, 336, 337, 342, 352, 353, 354, 355, 356, 357, 358, 360, 369, 376, 377, 378, 379, 380, 381, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 471, 472, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 515, 516, 523, 524, 525, 526, 527, 529, 530, 531, 537, 538, 539, 540, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 621, 622, 629, 630, 631, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 659, 661, 663, 665, 666, 668, 669, 670, 671, 672, 674, 675, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 693, 694, 695, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 715, 716, 721, 722, 731, 732, 733, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 774, 776, 778, 779, 780, 781, 788, 792, 793, 795, 796, 798, 800, 801, 803, 805, 806, 808, 814, 815, 817, 819, 821, 823, 825, 827, 829, 831, 833, 835, 839, 840, 842, 844, 845, 847, 850, 851, 853, 854, 856, 857, 859, 861, 862, 863, 868, 869, 872, 873, 874, 875, 876, 877, 879, 880, 881, 882, 893, 894, 895, 896, 897, 898, 899, 900, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 928, 929, 930, 935, 936, 937, 938, 941, 944, 950, 951, 952, 953, 954, 955, 957, 958, 959, 960, 961, 962, 963, 966, 967, 968, 969, 970, 973, 975, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 989, 990, 992, 993, 995, 997, 998, 999, 1011, 1012, 1013, 1014, 1019, 1023, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1039, 1042, 1043, 1045, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1091, 1092, 1093, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1144, 1145, 1147, 1148, 1149, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1161, 1165, 1169, 1170, 1171, 1172, 1199], "\u2131": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 74, 75, 98, 107, 116, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 208, 209, 211, 212, 213, 214, 216, 218, 219, 226, 229, 232, 233, 234, 235, 239, 242, 245, 248, 250, 251, 255, 258, 261, 263, 266, 272, 276, 277, 278, 279, 280, 287, 288, 290, 297, 298, 299, 300, 301, 308, 309, 314, 315, 316, 319, 322, 323, 326, 327, 330, 331, 336, 337, 342, 352, 353, 354, 355, 356, 357, 358, 360, 369, 376, 377, 378, 379, 380, 381, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 471, 472, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 515, 516, 523, 524, 525, 526, 527, 529, 530, 531, 537, 538, 539, 540, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 621, 622, 629, 630, 631, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 659, 661, 663, 665, 666, 668, 669, 670, 671, 672, 674, 675, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 693, 694, 695, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 715, 716, 721, 722, 731, 732, 733, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 774, 776, 778, 779, 780, 781, 788, 792, 793, 795, 796, 798, 800, 801, 803, 805, 806, 808, 814, 815, 817, 819, 821, 823, 825, 827, 829, 831, 833, 835, 839, 840, 842, 844, 845, 847, 850, 851, 853, 854, 856, 857, 859, 861, 862, 863, 868, 869, 872, 873, 874, 875, 876, 877, 879, 880, 881, 882, 893, 894, 895, 896, 897, 898, 899, 900, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 928, 929, 930, 935, 936, 937, 938, 941, 944, 950, 951, 952, 953, 954, 955, 957, 958, 959, 960, 961, 962, 963, 966, 967, 968, 969, 970, 973, 975, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 989, 990, 992, 993, 995, 997, 998, 999, 1011, 1012, 1013, 1014, 1019, 1023, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1039, 1042, 1043, 1045, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1091, 1092, 1093, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1144, 1145, 1147, 1148, 1149, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1161, 1165, 1169, 1170, 1171, 1172, 1199], "\u02c7": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 74, 75, 98, 107, 116, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 208, 209, 211, 212, 213, 214, 216, 218, 219, 226, 229, 232, 233, 234, 235, 239, 242, 245, 248, 250, 251, 255, 258, 261, 263, 266, 272, 276, 277, 278, 279, 280, 287, 288, 290, 297, 298, 299, 300, 301, 308, 309, 314, 315, 316, 319, 322, 323, 326, 327, 330, 331, 336, 337, 342, 352, 353, 354, 355, 356, 357, 358, 360, 369, 376, 377, 378, 379, 380, 381, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 471, 472, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 515, 516, 523, 524, 525, 526, 527, 529, 530, 531, 537, 538, 539, 540, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 621, 622, 629, 630, 631, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 659, 661, 663, 665, 666, 668, 669, 670, 671, 672, 674, 675, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 693, 694, 695, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 715, 716, 721, 722, 731, 732, 733, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 774, 776, 778, 779, 780, 781, 788, 792, 793, 795, 796, 798, 800, 801, 803, 805, 806, 808, 814, 815, 817, 819, 821, 823, 825, 827, 829, 831, 833, 835, 839, 840, 842, 844, 845, 847, 850, 851, 853, 854, 856, 857, 859, 861, 862, 863, 868, 869, 872, 873, 874, 875, 876, 877, 879, 880, 881, 882, 893, 894, 895, 896, 897, 898, 899, 900, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 928, 929, 930, 935, 936, 937, 938, 941, 944, 950, 951, 952, 953, 954, 955, 957, 958, 959, 960, 961, 962, 963, 966, 967, 968, 969, 970, 973, 975, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 989, 990, 992, 993, 995, 997, 998, 999, 1011, 1012, 1013, 1014, 1019, 1023, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1039, 1042, 1043, 1045, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1091, 1092, 1093, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1144, 1145, 1147, 1148, 1149, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1161, 1165, 1169, 1170, 1171, 1172, 1199], "\u210f": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 74, 75, 98, 107, 116, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 208, 209, 211, 212, 213, 214, 216, 218, 219, 226, 229, 232, 233, 234, 235, 239, 242, 245, 248, 250, 251, 255, 258, 261, 263, 266, 272, 276, 277, 278, 279, 280, 287, 288, 290, 297, 298, 299, 300, 301, 308, 309, 314, 315, 316, 319, 322, 323, 326, 327, 330, 331, 336, 337, 342, 352, 353, 354, 355, 356, 357, 358, 360, 369, 376, 377, 378, 379, 380, 381, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 471, 472, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 515, 516, 523, 524, 525, 526, 527, 529, 530, 531, 537, 538, 539, 540, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 621, 622, 629, 630, 631, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 659, 661, 663, 665, 666, 668, 669, 670, 671, 672, 674, 675, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 693, 694, 695, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 715, 716, 721, 722, 731, 732, 733, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 774, 776, 778, 779, 780, 781, 788, 792, 793, 795, 796, 798, 800, 801, 803, 805, 806, 808, 814, 815, 817, 819, 821, 823, 825, 827, 829, 831, 833, 835, 839, 840, 842, 844, 845, 847, 850, 851, 853, 854, 856, 857, 859, 861, 862, 863, 868, 869, 872, 873, 874, 875, 876, 877, 879, 880, 881, 882, 893, 894, 895, 896, 897, 898, 899, 900, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 928, 929, 930, 935, 936, 937, 938, 941, 944, 950, 951, 952, 953, 954, 955, 957, 958, 959, 960, 961, 962, 963, 966, 967, 968, 969, 970, 973, 975, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 989, 990, 992, 993, 995, 997, 998, 999, 1011, 1012, 1013, 1014, 1019, 1023, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1039, 1042, 1043, 1045, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1091, 1092, 1093, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1144, 1145, 1147, 1148, 1149, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1161, 1165, 1169, 1170, 1171, 1172, 1199], "\u210b": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 74, 75, 98, 107, 116, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 208, 209, 211, 212, 213, 214, 216, 218, 219, 226, 229, 232, 233, 234, 235, 239, 242, 245, 248, 250, 251, 255, 258, 261, 263, 266, 272, 276, 277, 278, 279, 280, 287, 288, 290, 297, 298, 299, 300, 301, 308, 309, 314, 315, 316, 319, 322, 323, 326, 327, 330, 331, 336, 337, 342, 352, 353, 354, 355, 356, 357, 358, 360, 369, 376, 377, 378, 379, 380, 381, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 471, 472, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 515, 516, 523, 524, 525, 526, 527, 529, 530, 531, 537, 538, 539, 540, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 621, 622, 629, 630, 631, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 659, 661, 663, 665, 666, 668, 669, 670, 671, 672, 674, 675, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 693, 694, 695, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 715, 716, 721, 722, 731, 732, 733, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 774, 776, 778, 779, 780, 781, 788, 792, 793, 795, 796, 798, 800, 801, 803, 805, 806, 808, 814, 815, 817, 819, 821, 823, 825, 827, 829, 831, 833, 835, 839, 840, 842, 844, 845, 847, 850, 851, 853, 854, 856, 857, 859, 861, 862, 863, 868, 869, 872, 873, 874, 875, 876, 877, 879, 880, 881, 882, 893, 894, 895, 896, 897, 898, 899, 900, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 928, 929, 930, 935, 936, 937, 938, 941, 944, 950, 951, 952, 953, 954, 955, 957, 958, 959, 960, 961, 962, 963, 966, 967, 968, 969, 970, 973, 975, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 989, 990, 992, 993, 995, 997, 998, 999, 1011, 1012, 1013, 1014, 1019, 1023, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1039, 1042, 1043, 1045, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1091, 1092, 1093, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1144, 1145, 1147, 1148, 1149, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1161, 1165, 1169, 1170, 1171, 1172, 1199], "\u2111": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 74, 75, 98, 107, 116, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 208, 209, 211, 212, 213, 214, 216, 218, 219, 226, 229, 232, 233, 234, 235, 239, 242, 245, 248, 250, 251, 255, 258, 261, 263, 266, 272, 276, 277, 278, 279, 280, 287, 288, 290, 297, 298, 299, 300, 301, 308, 309, 314, 315, 316, 319, 322, 323, 326, 327, 330, 331, 336, 337, 342, 352, 353, 354, 355, 356, 357, 358, 360, 369, 376, 377, 378, 379, 380, 381, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 471, 472, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 515, 516, 523, 524, 525, 526, 527, 529, 530, 531, 537, 538, 539, 540, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 621, 622, 629, 630, 631, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 659, 661, 663, 665, 666, 668, 669, 670, 671, 672, 674, 675, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 693, 694, 695, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 715, 716, 721, 722, 731, 732, 733, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 774, 776, 778, 779, 780, 781, 788, 792, 793, 795, 796, 798, 800, 801, 803, 805, 806, 808, 814, 815, 817, 819, 821, 823, 825, 827, 829, 831, 833, 835, 839, 840, 842, 844, 845, 847, 850, 851, 853, 854, 856, 857, 859, 861, 862, 863, 868, 869, 872, 873, 874, 875, 876, 877, 879, 880, 881, 882, 893, 894, 895, 896, 897, 898, 899, 900, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 928, 929, 930, 935, 936, 937, 938, 941, 944, 950, 951, 952, 953, 954, 955, 957, 958, 959, 960, 961, 962, 963, 966, 967, 968, 969, 970, 973, 975, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 989, 990, 992, 993, 995, 997, 998, 999, 1011, 1012, 1013, 1014, 1019, 1023, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1039, 1042, 1043, 1045, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1091, 1092, 1093, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1144, 1145, 1147, 1148, 1149, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1161, 1165, 1169, 1170, 1171, 1172, 1199], "\u2148": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 74, 75, 98, 107, 116, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 208, 209, 211, 212, 213, 214, 216, 218, 219, 226, 229, 232, 233, 234, 235, 239, 242, 245, 248, 250, 251, 255, 258, 261, 263, 266, 272, 276, 277, 278, 279, 280, 287, 288, 290, 297, 298, 299, 300, 301, 308, 309, 314, 315, 316, 319, 322, 323, 326, 327, 330, 331, 336, 337, 342, 352, 353, 354, 355, 356, 357, 358, 360, 369, 376, 377, 378, 379, 380, 381, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 471, 472, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 515, 516, 523, 524, 525, 526, 527, 529, 530, 531, 537, 538, 539, 540, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 621, 622, 629, 630, 631, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 659, 661, 663, 665, 666, 668, 669, 670, 671, 672, 674, 675, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 693, 694, 695, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 715, 716, 721, 722, 731, 732, 733, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 774, 776, 778, 779, 780, 781, 788, 792, 793, 795, 796, 798, 800, 801, 803, 805, 806, 808, 814, 815, 817, 819, 821, 823, 825, 827, 829, 831, 833, 835, 839, 840, 842, 844, 845, 847, 850, 851, 853, 854, 856, 857, 859, 861, 862, 863, 868, 869, 872, 873, 874, 875, 876, 877, 879, 880, 881, 882, 893, 894, 895, 896, 897, 898, 899, 900, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 928, 929, 930, 935, 936, 937, 938, 941, 944, 950, 951, 952, 953, 954, 955, 957, 958, 959, 960, 961, 962, 963, 966, 967, 968, 969, 970, 973, 975, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 989, 990, 992, 993, 995, 997, 998, 999, 1011, 1012, 1013, 1014, 1019, 1023, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1039, 1042, 1043, 1045, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1091, 1092, 1093, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1144, 1145, 1147, 1148, 1149, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1161, 1165, 1169, 1170, 1171, 1172, 1199], "\u2110": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 74, 75, 98, 107, 116, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 208, 209, 211, 212, 213, 214, 216, 218, 219, 226, 229, 232, 233, 234, 235, 239, 242, 245, 248, 250, 251, 255, 258, 261, 263, 266, 272, 276, 277, 278, 279, 280, 287, 288, 290, 297, 298, 299, 300, 301, 308, 309, 314, 315, 316, 319, 322, 323, 326, 327, 330, 331, 336, 337, 342, 352, 353, 354, 355, 356, 357, 358, 360, 369, 376, 377, 378, 379, 380, 381, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 471, 472, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 515, 516, 523, 524, 525, 526, 527, 529, 530, 531, 537, 538, 539, 540, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 621, 622, 629, 630, 631, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 659, 661, 663, 665, 666, 668, 669, 670, 671, 672, 674, 675, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 693, 694, 695, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 715, 716, 721, 722, 731, 732, 733, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 774, 776, 778, 779, 780, 781, 788, 792, 793, 795, 796, 798, 800, 801, 803, 805, 806, 808, 814, 815, 817, 819, 821, 823, 825, 827, 829, 831, 833, 835, 839, 840, 842, 844, 845, 847, 850, 851, 853, 854, 856, 857, 859, 861, 862, 863, 868, 869, 872, 873, 874, 875, 876, 877, 879, 880, 881, 882, 893, 894, 895, 896, 897, 898, 899, 900, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 928, 929, 930, 935, 936, 937, 938, 941, 944, 950, 951, 952, 953, 954, 955, 957, 958, 959, 960, 961, 962, 963, 966, 967, 968, 969, 970, 973, 975, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 989, 990, 992, 993, 995, 997, 998, 999, 1011, 1012, 1013, 1014, 1019, 1023, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1039, 1042, 1043, 1045, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1091, 1092, 1093, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1144, 1145, 1147, 1148, 1149, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1161, 1165, 1169, 1170, 1171, 1172, 1199], "\u2124": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 74, 75, 98, 107, 116, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 208, 209, 211, 212, 213, 214, 216, 218, 219, 226, 229, 232, 233, 234, 235, 239, 242, 245, 248, 250, 251, 255, 258, 261, 263, 266, 272, 276, 277, 278, 279, 280, 287, 288, 290, 297, 298, 299, 300, 301, 308, 309, 314, 315, 316, 319, 322, 323, 326, 327, 330, 331, 336, 337, 342, 352, 353, 354, 355, 356, 357, 358, 360, 369, 376, 377, 378, 379, 380, 381, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 471, 472, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 515, 516, 523, 524, 525, 526, 527, 529, 530, 531, 537, 538, 539, 540, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 621, 622, 629, 630, 631, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 659, 661, 663, 665, 666, 668, 669, 670, 671, 672, 674, 675, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 693, 694, 695, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 715, 716, 721, 722, 731, 732, 733, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 774, 776, 778, 779, 780, 781, 788, 792, 793, 795, 796, 798, 800, 801, 803, 805, 806, 808, 814, 815, 817, 819, 821, 823, 825, 827, 829, 831, 833, 835, 839, 840, 842, 844, 845, 847, 850, 851, 853, 854, 856, 857, 859, 861, 862, 863, 868, 869, 872, 873, 874, 875, 876, 877, 879, 880, 881, 882, 893, 894, 895, 896, 897, 898, 899, 900, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 928, 929, 930, 935, 936, 937, 938, 941, 944, 950, 951, 952, 953, 954, 955, 957, 958, 959, 960, 961, 962, 963, 966, 967, 968, 969, 970, 973, 975, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 989, 990, 992, 993, 995, 997, 998, 999, 1011, 1012, 1013, 1014, 1019, 1023, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1039, 1042, 1043, 1045, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1091, 1092, 1093, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1144, 1145, 1147, 1148, 1149, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1161, 1165, 1169, 1170, 1171, 1172, 1199], "\u2112": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 74, 75, 98, 107, 116, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 208, 209, 211, 212, 213, 214, 216, 218, 219, 226, 229, 232, 233, 234, 235, 239, 242, 245, 248, 250, 251, 255, 258, 261, 263, 266, 272, 276, 277, 278, 279, 280, 287, 288, 290, 297, 298, 299, 300, 301, 308, 309, 314, 315, 316, 319, 322, 323, 326, 327, 330, 331, 336, 337, 342, 352, 353, 354, 355, 356, 357, 358, 360, 369, 376, 377, 378, 379, 380, 381, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 471, 472, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 515, 516, 523, 524, 525, 526, 527, 529, 530, 531, 537, 538, 539, 540, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 621, 622, 629, 630, 631, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 659, 661, 663, 665, 666, 668, 669, 670, 671, 672, 674, 675, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 693, 694, 695, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 715, 716, 721, 722, 731, 732, 733, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 774, 776, 778, 779, 780, 781, 788, 792, 793, 795, 796, 798, 800, 801, 803, 805, 806, 808, 814, 815, 817, 819, 821, 823, 825, 827, 829, 831, 833, 835, 839, 840, 842, 844, 845, 847, 850, 851, 853, 854, 856, 857, 859, 861, 862, 863, 868, 869, 872, 873, 874, 875, 876, 877, 879, 880, 881, 882, 893, 894, 895, 896, 897, 898, 899, 900, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 928, 929, 930, 935, 936, 937, 938, 941, 944, 950, 951, 952, 953, 954, 955, 957, 958, 959, 960, 961, 962, 963, 966, 967, 968, 969, 970, 973, 975, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 989, 990, 992, 993, 995, 997, 998, 999, 1011, 1012, 1013, 1014, 1019, 1023, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1039, 1042, 1043, 1045, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1091, 1092, 1093, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1144, 1145, 1147, 1148, 1149, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1161, 1165, 1169, 1170, 1171, 1172, 1199], "\u2133": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 74, 75, 98, 107, 116, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 208, 209, 211, 212, 213, 214, 216, 218, 219, 226, 229, 232, 233, 234, 235, 239, 242, 245, 248, 250, 251, 255, 258, 261, 263, 266, 272, 276, 277, 278, 279, 280, 287, 288, 290, 297, 298, 299, 300, 301, 308, 309, 314, 315, 316, 319, 322, 323, 326, 327, 330, 331, 336, 337, 342, 352, 353, 354, 355, 356, 357, 358, 360, 369, 376, 377, 378, 379, 380, 381, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 471, 472, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 515, 516, 523, 524, 525, 526, 527, 529, 530, 531, 537, 538, 539, 540, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 621, 622, 629, 630, 631, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 659, 661, 663, 665, 666, 668, 669, 670, 671, 672, 674, 675, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 693, 694, 695, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 715, 716, 721, 722, 731, 732, 733, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 774, 776, 778, 779, 780, 781, 788, 792, 793, 795, 796, 798, 800, 801, 803, 805, 806, 808, 814, 815, 817, 819, 821, 823, 825, 827, 829, 831, 833, 835, 839, 840, 842, 844, 845, 847, 850, 851, 853, 854, 856, 857, 859, 861, 862, 863, 868, 869, 872, 873, 874, 875, 876, 877, 879, 880, 881, 882, 893, 894, 895, 896, 897, 898, 899, 900, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 928, 929, 930, 935, 936, 937, 938, 941, 944, 950, 951, 952, 953, 954, 955, 957, 958, 959, 960, 961, 962, 963, 966, 967, 968, 969, 970, 973, 975, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 989, 990, 992, 993, 995, 997, 998, 999, 1011, 1012, 1013, 1014, 1019, 1023, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1039, 1042, 1043, 1045, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1091, 1092, 1093, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1144, 1145, 1147, 1148, 1149, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1161, 1165, 1169, 1170, 1171, 1172, 1199], "\u2115": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 74, 75, 98, 107, 116, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 208, 209, 211, 212, 213, 214, 216, 218, 219, 226, 229, 232, 233, 234, 235, 239, 242, 245, 248, 250, 251, 255, 258, 261, 263, 266, 272, 276, 277, 278, 279, 280, 287, 288, 290, 297, 298, 299, 300, 301, 308, 309, 314, 315, 316, 319, 322, 323, 326, 327, 330, 331, 336, 337, 342, 352, 353, 354, 355, 356, 357, 358, 360, 369, 376, 377, 378, 379, 380, 381, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 471, 472, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 515, 516, 523, 524, 525, 526, 527, 529, 530, 531, 537, 538, 539, 540, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 621, 622, 629, 630, 631, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 659, 661, 663, 665, 666, 668, 669, 670, 671, 672, 674, 675, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 693, 694, 695, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 715, 716, 721, 722, 731, 732, 733, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 774, 776, 778, 779, 780, 781, 788, 792, 793, 795, 796, 798, 800, 801, 803, 805, 806, 808, 814, 815, 817, 819, 821, 823, 825, 827, 829, 831, 833, 835, 839, 840, 842, 844, 845, 847, 850, 851, 853, 854, 856, 857, 859, 861, 862, 863, 868, 869, 872, 873, 874, 875, 876, 877, 879, 880, 881, 882, 893, 894, 895, 896, 897, 898, 899, 900, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 928, 929, 930, 935, 936, 937, 938, 941, 944, 950, 951, 952, 953, 954, 955, 957, 958, 959, 960, 961, 962, 963, 966, 967, 968, 969, 970, 973, 975, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 989, 990, 992, 993, 995, 997, 998, 999, 1011, 1012, 1013, 1014, 1019, 1023, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1039, 1042, 1043, 1045, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1091, 1092, 1093, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1144, 1145, 1147, 1148, 1149, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1161, 1165, 1169, 1170, 1171, 1172, 1199], "\u2134": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 74, 75, 98, 107, 116, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 208, 209, 211, 212, 213, 214, 216, 218, 219, 226, 229, 232, 233, 234, 235, 239, 242, 245, 248, 250, 251, 255, 258, 261, 263, 266, 272, 276, 277, 278, 279, 280, 287, 288, 290, 297, 298, 299, 300, 301, 308, 309, 314, 315, 316, 319, 322, 323, 326, 327, 330, 331, 336, 337, 342, 352, 353, 354, 355, 356, 357, 358, 360, 369, 376, 377, 378, 379, 380, 381, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 471, 472, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 515, 516, 523, 524, 525, 526, 527, 529, 530, 531, 537, 538, 539, 540, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 621, 622, 629, 630, 631, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 659, 661, 663, 665, 666, 668, 669, 670, 671, 672, 674, 675, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 693, 694, 695, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 715, 716, 721, 722, 731, 732, 733, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 774, 776, 778, 779, 780, 781, 788, 792, 793, 795, 796, 798, 800, 801, 803, 805, 806, 808, 814, 815, 817, 819, 821, 823, 825, 827, 829, 831, 833, 835, 839, 840, 842, 844, 845, 847, 850, 851, 853, 854, 856, 857, 859, 861, 862, 863, 868, 869, 872, 873, 874, 875, 876, 877, 879, 880, 881, 882, 893, 894, 895, 896, 897, 898, 899, 900, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 928, 929, 930, 935, 936, 937, 938, 941, 944, 950, 951, 952, 953, 954, 955, 957, 958, 959, 960, 961, 962, 963, 966, 967, 968, 969, 970, 973, 975, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 989, 990, 992, 993, 995, 997, 998, 999, 1011, 1012, 1013, 1014, 1019, 1023, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1039, 1042, 1043, 1045, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1091, 1092, 1093, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1144, 1145, 1147, 1148, 1149, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1161, 1165, 1169, 1170, 1171, 1172, 1199], "\u210c": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 74, 75, 98, 107, 116, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 208, 209, 211, 212, 213, 214, 216, 218, 219, 226, 229, 232, 233, 234, 235, 239, 242, 245, 248, 250, 251, 255, 258, 261, 263, 266, 272, 276, 277, 278, 279, 280, 287, 288, 290, 297, 298, 299, 300, 301, 308, 309, 314, 315, 316, 319, 322, 323, 326, 327, 330, 331, 336, 337, 342, 352, 353, 354, 355, 356, 357, 358, 360, 369, 376, 377, 378, 379, 380, 381, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 471, 472, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 515, 516, 523, 524, 525, 526, 527, 529, 530, 531, 537, 538, 539, 540, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 621, 622, 629, 630, 631, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 659, 661, 663, 665, 666, 668, 669, 670, 671, 672, 674, 675, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 693, 694, 695, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 715, 716, 721, 722, 731, 732, 733, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 774, 776, 778, 779, 780, 781, 788, 792, 793, 795, 796, 798, 800, 801, 803, 805, 806, 808, 814, 815, 817, 819, 821, 823, 825, 827, 829, 831, 833, 835, 839, 840, 842, 844, 845, 847, 850, 851, 853, 854, 856, 857, 859, 861, 862, 863, 868, 869, 872, 873, 874, 875, 876, 877, 879, 880, 881, 882, 893, 894, 895, 896, 897, 898, 899, 900, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 928, 929, 930, 935, 936, 937, 938, 941, 944, 950, 951, 952, 953, 954, 955, 957, 958, 959, 960, 961, 962, 963, 966, 967, 968, 969, 970, 973, 975, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 989, 990, 992, 993, 995, 997, 998, 999, 1011, 1012, 1013, 1014, 1019, 1023, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1039, 1042, 1043, 1045, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1091, 1092, 1093, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1144, 1145, 1147, 1148, 1149, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1161, 1165, 1169, 1170, 1171, 1172, 1199], "\u2119": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 74, 75, 98, 107, 116, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 208, 209, 211, 212, 213, 214, 216, 218, 219, 226, 229, 232, 233, 234, 235, 239, 242, 245, 248, 250, 251, 255, 258, 261, 263, 266, 272, 276, 277, 278, 279, 280, 287, 288, 290, 297, 298, 299, 300, 301, 308, 309, 314, 315, 316, 319, 322, 323, 326, 327, 330, 331, 336, 337, 342, 352, 353, 354, 355, 356, 357, 358, 360, 369, 376, 377, 378, 379, 380, 381, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 471, 472, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 515, 516, 523, 524, 525, 526, 527, 529, 530, 531, 537, 538, 539, 540, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 621, 622, 629, 630, 631, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 659, 661, 663, 665, 666, 668, 669, 670, 671, 672, 674, 675, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 693, 694, 695, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 715, 716, 721, 722, 731, 732, 733, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 774, 776, 778, 779, 780, 781, 788, 792, 793, 795, 796, 798, 800, 801, 803, 805, 806, 808, 814, 815, 817, 819, 821, 823, 825, 827, 829, 831, 833, 835, 839, 840, 842, 844, 845, 847, 850, 851, 853, 854, 856, 857, 859, 861, 862, 863, 868, 869, 872, 873, 874, 875, 876, 877, 879, 880, 881, 882, 893, 894, 895, 896, 897, 898, 899, 900, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 928, 929, 930, 935, 936, 937, 938, 941, 944, 950, 951, 952, 953, 954, 955, 957, 958, 959, 960, 961, 962, 963, 966, 967, 968, 969, 970, 973, 975, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 989, 990, 992, 993, 995, 997, 998, 999, 1011, 1012, 1013, 1014, 1019, 1023, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1039, 1042, 1043, 1045, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1091, 1092, 1093, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1144, 1145, 1147, 1148, 1149, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1161, 1165, 1169, 1170, 1171, 1172, 1199], "\u210d": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 74, 75, 98, 107, 116, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 208, 209, 211, 212, 213, 214, 216, 218, 219, 226, 229, 232, 233, 234, 235, 239, 242, 245, 248, 250, 251, 255, 258, 261, 263, 266, 272, 276, 277, 278, 279, 280, 287, 288, 290, 297, 298, 299, 300, 301, 308, 309, 314, 315, 316, 319, 322, 323, 326, 327, 330, 331, 336, 337, 342, 352, 353, 354, 355, 356, 357, 358, 360, 369, 376, 377, 378, 379, 380, 381, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 471, 472, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 515, 516, 523, 524, 525, 526, 527, 529, 530, 531, 537, 538, 539, 540, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 621, 622, 629, 630, 631, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 659, 661, 663, 665, 666, 668, 669, 670, 671, 672, 674, 675, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 693, 694, 695, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 715, 716, 721, 722, 731, 732, 733, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 774, 776, 778, 779, 780, 781, 788, 792, 793, 795, 796, 798, 800, 801, 803, 805, 806, 808, 814, 815, 817, 819, 821, 823, 825, 827, 829, 831, 833, 835, 839, 840, 842, 844, 845, 847, 850, 851, 853, 854, 856, 857, 859, 861, 862, 863, 868, 869, 872, 873, 874, 875, 876, 877, 879, 880, 881, 882, 893, 894, 895, 896, 897, 898, 899, 900, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 928, 929, 930, 935, 936, 937, 938, 941, 944, 950, 951, 952, 953, 954, 955, 957, 958, 959, 960, 961, 962, 963, 966, 967, 968, 969, 970, 973, 975, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 989, 990, 992, 993, 995, 997, 998, 999, 1011, 1012, 1013, 1014, 1019, 1023, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1039, 1042, 1043, 1045, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1091, 1092, 1093, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1144, 1145, 1147, 1148, 1149, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1161, 1165, 1169, 1170, 1171, 1172, 1199], "\u211a": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 74, 75, 98, 107, 116, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 208, 209, 211, 212, 213, 214, 216, 218, 219, 226, 229, 232, 233, 234, 235, 239, 242, 245, 248, 250, 251, 255, 258, 261, 263, 266, 272, 276, 277, 278, 279, 280, 287, 288, 290, 297, 298, 299, 300, 301, 308, 309, 314, 315, 316, 319, 322, 323, 326, 327, 330, 331, 336, 337, 342, 352, 353, 354, 355, 356, 357, 358, 360, 369, 376, 377, 378, 379, 380, 381, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 471, 472, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 515, 516, 523, 524, 525, 526, 527, 529, 530, 531, 537, 538, 539, 540, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 621, 622, 629, 630, 631, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 659, 661, 663, 665, 666, 668, 669, 670, 671, 672, 674, 675, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 693, 694, 695, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 715, 716, 721, 722, 731, 732, 733, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 774, 776, 778, 779, 780, 781, 788, 792, 793, 795, 796, 798, 800, 801, 803, 805, 806, 808, 814, 815, 817, 819, 821, 823, 825, 827, 829, 831, 833, 835, 839, 840, 842, 844, 845, 847, 850, 851, 853, 854, 856, 857, 859, 861, 862, 863, 868, 869, 872, 873, 874, 875, 876, 877, 879, 880, 881, 882, 893, 894, 895, 896, 897, 898, 899, 900, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 928, 929, 930, 935, 936, 937, 938, 941, 944, 950, 951, 952, 953, 954, 955, 957, 958, 959, 960, 961, 962, 963, 966, 967, 968, 969, 970, 973, 975, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 989, 990, 992, 993, 995, 997, 998, 999, 1011, 1012, 1013, 1014, 1019, 1023, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1039, 1042, 1043, 1045, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1091, 1092, 1093, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1144, 1145, 1147, 1148, 1149, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1161, 1165, 1169, 1170, 1171, 1172, 1199], "\u211c": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 74, 75, 98, 107, 116, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 208, 209, 211, 212, 213, 214, 216, 218, 219, 226, 229, 232, 233, 234, 235, 239, 242, 245, 248, 250, 251, 255, 258, 261, 263, 266, 272, 276, 277, 278, 279, 280, 287, 288, 290, 297, 298, 299, 300, 301, 308, 309, 314, 315, 316, 319, 322, 323, 326, 327, 330, 331, 336, 337, 342, 352, 353, 354, 355, 356, 357, 358, 360, 369, 376, 377, 378, 379, 380, 381, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 471, 472, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 515, 516, 523, 524, 525, 526, 527, 529, 530, 531, 537, 538, 539, 540, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 621, 622, 629, 630, 631, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 659, 661, 663, 665, 666, 668, 669, 670, 671, 672, 674, 675, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 693, 694, 695, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 715, 716, 721, 722, 731, 732, 733, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 774, 776, 778, 779, 780, 781, 788, 792, 793, 795, 796, 798, 800, 801, 803, 805, 806, 808, 814, 815, 817, 819, 821, 823, 825, 827, 829, 831, 833, 835, 839, 840, 842, 844, 845, 847, 850, 851, 853, 854, 856, 857, 859, 861, 862, 863, 868, 869, 872, 873, 874, 875, 876, 877, 879, 880, 881, 882, 893, 894, 895, 896, 897, 898, 899, 900, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 928, 929, 930, 935, 936, 937, 938, 941, 944, 950, 951, 952, 953, 954, 955, 957, 958, 959, 960, 961, 962, 963, 966, 967, 968, 969, 970, 973, 975, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 989, 990, 992, 993, 995, 997, 998, 999, 1011, 1012, 1013, 1014, 1019, 1023, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1039, 1042, 1043, 1045, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1091, 1092, 1093, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1144, 1145, 1147, 1148, 1149, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1161, 1165, 1169, 1170, 1171, 1172, 1199], "\u211b": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 74, 75, 98, 107, 116, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 208, 209, 211, 212, 213, 214, 216, 218, 219, 226, 229, 232, 233, 234, 235, 239, 242, 245, 248, 250, 251, 255, 258, 261, 263, 266, 272, 276, 277, 278, 279, 280, 287, 288, 290, 297, 298, 299, 300, 301, 308, 309, 314, 315, 316, 319, 322, 323, 326, 327, 330, 331, 336, 337, 342, 352, 353, 354, 355, 356, 357, 358, 360, 369, 376, 377, 378, 379, 380, 381, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 471, 472, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 515, 516, 523, 524, 525, 526, 527, 529, 530, 531, 537, 538, 539, 540, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 621, 622, 629, 630, 631, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 659, 661, 663, 665, 666, 668, 669, 670, 671, 672, 674, 675, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 693, 694, 695, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 715, 716, 721, 722, 731, 732, 733, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 774, 776, 778, 779, 780, 781, 788, 792, 793, 795, 796, 798, 800, 801, 803, 805, 806, 808, 814, 815, 817, 819, 821, 823, 825, 827, 829, 831, 833, 835, 839, 840, 842, 844, 845, 847, 850, 851, 853, 854, 856, 857, 859, 861, 862, 863, 868, 869, 872, 873, 874, 875, 876, 877, 879, 880, 881, 882, 893, 894, 895, 896, 897, 898, 899, 900, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 928, 929, 930, 935, 936, 937, 938, 941, 944, 950, 951, 952, 953, 954, 955, 957, 958, 959, 960, 961, 962, 963, 966, 967, 968, 969, 970, 973, 975, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 989, 990, 992, 993, 995, 997, 998, 999, 1011, 1012, 1013, 1014, 1019, 1023, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1039, 1042, 1043, 1045, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1091, 1092, 1093, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1144, 1145, 1147, 1148, 1149, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1161, 1165, 1169, 1170, 1171, 1172, 1199], "\u211d": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 74, 75, 98, 107, 116, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 208, 209, 211, 212, 213, 214, 216, 218, 219, 226, 229, 232, 233, 234, 235, 239, 242, 245, 248, 250, 251, 255, 258, 261, 263, 266, 272, 276, 277, 278, 279, 280, 287, 288, 290, 297, 298, 299, 300, 301, 308, 309, 314, 315, 316, 319, 322, 323, 326, 327, 330, 331, 336, 337, 342, 352, 353, 354, 355, 356, 357, 358, 360, 369, 376, 377, 378, 379, 380, 381, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 471, 472, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 515, 516, 523, 524, 525, 526, 527, 529, 530, 531, 537, 538, 539, 540, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 621, 622, 629, 630, 631, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 659, 661, 663, 665, 666, 668, 669, 670, 671, 672, 674, 675, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 693, 694, 695, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 715, 716, 721, 722, 731, 732, 733, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 774, 776, 778, 779, 780, 781, 788, 792, 793, 795, 796, 798, 800, 801, 803, 805, 806, 808, 814, 815, 817, 819, 821, 823, 825, 827, 829, 831, 833, 835, 839, 840, 842, 844, 845, 847, 850, 851, 853, 854, 856, 857, 859, 861, 862, 863, 868, 869, 872, 873, 874, 875, 876, 877, 879, 880, 881, 882, 893, 894, 895, 896, 897, 898, 899, 900, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 928, 929, 930, 935, 936, 937, 938, 941, 944, 950, 951, 952, 953, 954, 955, 957, 958, 959, 960, 961, 962, 963, 966, 967, 968, 969, 970, 973, 975, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 989, 990, 992, 993, 995, 997, 998, 999, 1011, 1012, 1013, 1014, 1019, 1023, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1039, 1042, 1043, 1045, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1091, 1092, 1093, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1144, 1145, 1147, 1148, 1149, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1161, 1165, 1169, 1170, 1171, 1172, 1199], "\u03f5": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 74, 75, 98, 107, 116, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 208, 209, 211, 212, 213, 214, 216, 218, 219, 226, 229, 232, 233, 234, 235, 239, 242, 245, 248, 250, 251, 255, 258, 261, 263, 266, 272, 276, 277, 278, 279, 280, 287, 288, 290, 297, 298, 299, 300, 301, 308, 309, 314, 315, 316, 319, 322, 323, 326, 327, 330, 331, 336, 337, 342, 352, 353, 354, 355, 356, 357, 358, 360, 369, 376, 377, 378, 379, 380, 381, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 471, 472, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 515, 516, 523, 524, 525, 526, 527, 529, 530, 531, 537, 538, 539, 540, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 621, 622, 629, 630, 631, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 659, 661, 663, 665, 666, 668, 669, 670, 671, 672, 674, 675, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 693, 694, 695, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 715, 716, 721, 722, 731, 732, 733, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 774, 776, 778, 779, 780, 781, 788, 792, 793, 795, 796, 798, 800, 801, 803, 805, 806, 808, 814, 815, 817, 819, 821, 823, 825, 827, 829, 831, 833, 835, 839, 840, 842, 844, 845, 847, 850, 851, 853, 854, 856, 857, 859, 861, 862, 863, 868, 869, 872, 873, 874, 875, 876, 877, 879, 880, 881, 882, 893, 894, 895, 896, 897, 898, 899, 900, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 928, 929, 930, 935, 936, 937, 938, 941, 944, 950, 951, 952, 953, 954, 955, 957, 958, 959, 960, 961, 962, 963, 966, 967, 968, 969, 970, 973, 975, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 989, 990, 992, 993, 995, 997, 998, 999, 1011, 1012, 1013, 1014, 1019, 1023, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1039, 1042, 1043, 1045, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1091, 1092, 1093, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1144, 1145, 1147, 1148, 1149, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1161, 1165, 1169, 1170, 1171, 1172, 1199], "\u03d5": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 74, 75, 98, 107, 116, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 208, 209, 211, 212, 213, 214, 216, 218, 219, 226, 229, 232, 233, 234, 235, 239, 242, 245, 248, 250, 251, 255, 258, 261, 263, 266, 272, 276, 277, 278, 279, 280, 287, 288, 290, 297, 298, 299, 300, 301, 308, 309, 314, 315, 316, 319, 322, 323, 326, 327, 330, 331, 336, 337, 342, 352, 353, 354, 355, 356, 357, 358, 360, 369, 376, 377, 378, 379, 380, 381, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 471, 472, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 515, 516, 523, 524, 525, 526, 527, 529, 530, 531, 537, 538, 539, 540, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 621, 622, 629, 630, 631, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 659, 661, 663, 665, 666, 668, 669, 670, 671, 672, 674, 675, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 693, 694, 695, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 715, 716, 721, 722, 731, 732, 733, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 774, 776, 778, 779, 780, 781, 788, 792, 793, 795, 796, 798, 800, 801, 803, 805, 806, 808, 814, 815, 817, 819, 821, 823, 825, 827, 829, 831, 833, 835, 839, 840, 842, 844, 845, 847, 850, 851, 853, 854, 856, 857, 859, 861, 862, 863, 868, 869, 872, 873, 874, 875, 876, 877, 879, 880, 881, 882, 893, 894, 895, 896, 897, 898, 899, 900, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 928, 929, 930, 935, 936, 937, 938, 941, 944, 950, 951, 952, 953, 954, 955, 957, 958, 959, 960, 961, 962, 963, 966, 967, 968, 969, 970, 973, 975, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 989, 990, 992, 993, 995, 997, 998, 999, 1011, 1012, 1013, 1014, 1019, 1023, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1039, 1042, 1043, 1045, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1091, 1092, 1093, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1144, 1145, 1147, 1148, 1149, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1161, 1165, 1169, 1170, 1171, 1172, 1199], "\u03c5": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 74, 75, 98, 107, 116, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 208, 209, 211, 212, 213, 214, 216, 218, 219, 226, 229, 232, 233, 234, 235, 239, 242, 245, 248, 250, 251, 255, 258, 261, 263, 266, 272, 276, 277, 278, 279, 280, 287, 288, 290, 297, 298, 299, 300, 301, 308, 309, 314, 315, 316, 319, 322, 323, 326, 327, 330, 331, 336, 337, 342, 352, 353, 354, 355, 356, 357, 358, 360, 369, 376, 377, 378, 379, 380, 381, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 471, 472, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 515, 516, 523, 524, 525, 526, 527, 529, 530, 531, 537, 538, 539, 540, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 621, 622, 629, 630, 631, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 659, 661, 663, 665, 666, 668, 669, 670, 671, 672, 674, 675, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 693, 694, 695, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 715, 716, 721, 722, 731, 732, 733, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 774, 776, 778, 779, 780, 781, 788, 792, 793, 795, 796, 798, 800, 801, 803, 805, 806, 808, 814, 815, 817, 819, 821, 823, 825, 827, 829, 831, 833, 835, 839, 840, 842, 844, 845, 847, 850, 851, 853, 854, 856, 857, 859, 861, 862, 863, 868, 869, 872, 873, 874, 875, 876, 877, 879, 880, 881, 882, 893, 894, 895, 896, 897, 898, 899, 900, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 928, 929, 930, 935, 936, 937, 938, 941, 944, 950, 951, 952, 953, 954, 955, 957, 958, 959, 960, 961, 962, 963, 966, 967, 968, 969, 970, 973, 975, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 989, 990, 992, 993, 995, 997, 998, 999, 1011, 1012, 1013, 1014, 1019, 1023, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1039, 1042, 1043, 1045, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1091, 1092, 1093, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1144, 1145, 1147, 1148, 1149, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1161, 1165, 1169, 1170, 1171, 1172, 1199], "\u03b5": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 74, 75, 98, 107, 116, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 208, 209, 211, 212, 213, 214, 216, 218, 219, 226, 229, 232, 233, 234, 235, 239, 242, 245, 248, 250, 251, 255, 258, 261, 263, 266, 272, 276, 277, 278, 279, 280, 287, 288, 290, 297, 298, 299, 300, 301, 308, 309, 314, 315, 316, 319, 322, 323, 326, 327, 330, 331, 336, 337, 342, 352, 353, 354, 355, 356, 357, 358, 360, 369, 376, 377, 378, 379, 380, 381, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 471, 472, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 515, 516, 523, 524, 525, 526, 527, 529, 530, 531, 537, 538, 539, 540, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 621, 622, 629, 630, 631, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 659, 661, 663, 665, 666, 668, 669, 670, 671, 672, 674, 675, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 693, 694, 695, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 715, 716, 721, 722, 731, 732, 733, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 774, 776, 778, 779, 780, 781, 788, 792, 793, 795, 796, 798, 800, 801, 803, 805, 806, 808, 814, 815, 817, 819, 821, 823, 825, 827, 829, 831, 833, 835, 839, 840, 842, 844, 845, 847, 850, 851, 853, 854, 856, 857, 859, 861, 862, 863, 868, 869, 872, 873, 874, 875, 876, 877, 879, 880, 881, 882, 893, 894, 895, 896, 897, 898, 899, 900, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 928, 929, 930, 935, 936, 937, 938, 941, 944, 950, 951, 952, 953, 954, 955, 957, 958, 959, 960, 961, 962, 963, 966, 967, 968, 969, 970, 973, 975, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 989, 990, 992, 993, 995, 997, 998, 999, 1011, 1012, 1013, 1014, 1019, 1023, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1039, 1042, 1043, 1045, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1091, 1092, 1093, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1144, 1145, 1147, 1148, 1149, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1161, 1165, 1169, 1170, 1171, 1172, 1199], "\u03f0": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 74, 75, 98, 107, 116, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 208, 209, 211, 212, 213, 214, 216, 218, 219, 226, 229, 232, 233, 234, 235, 239, 242, 245, 248, 250, 251, 255, 258, 261, 263, 266, 272, 276, 277, 278, 279, 280, 287, 288, 290, 297, 298, 299, 300, 301, 308, 309, 314, 315, 316, 319, 322, 323, 326, 327, 330, 331, 336, 337, 342, 352, 353, 354, 355, 356, 357, 358, 360, 369, 376, 377, 378, 379, 380, 381, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 471, 472, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 515, 516, 523, 524, 525, 526, 527, 529, 530, 531, 537, 538, 539, 540, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 621, 622, 629, 630, 631, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 659, 661, 663, 665, 666, 668, 669, 670, 671, 672, 674, 675, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 693, 694, 695, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 715, 716, 721, 722, 731, 732, 733, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 774, 776, 778, 779, 780, 781, 788, 792, 793, 795, 796, 798, 800, 801, 803, 805, 806, 808, 814, 815, 817, 819, 821, 823, 825, 827, 829, 831, 833, 835, 839, 840, 842, 844, 845, 847, 850, 851, 853, 854, 856, 857, 859, 861, 862, 863, 868, 869, 872, 873, 874, 875, 876, 877, 879, 880, 881, 882, 893, 894, 895, 896, 897, 898, 899, 900, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 928, 929, 930, 935, 936, 937, 938, 941, 944, 950, 951, 952, 953, 954, 955, 957, 958, 959, 960, 961, 962, 963, 966, 967, 968, 969, 970, 973, 975, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 989, 990, 992, 993, 995, 997, 998, 999, 1011, 1012, 1013, 1014, 1019, 1023, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1039, 1042, 1043, 1045, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1091, 1092, 1093, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1144, 1145, 1147, 1148, 1149, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1161, 1165, 1169, 1170, 1171, 1172, 1199], "\u03c6": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 74, 75, 98, 107, 116, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 208, 209, 211, 212, 213, 214, 216, 218, 219, 226, 229, 232, 233, 234, 235, 239, 242, 245, 248, 250, 251, 255, 258, 261, 263, 266, 272, 276, 277, 278, 279, 280, 287, 288, 290, 297, 298, 299, 300, 301, 308, 309, 314, 315, 316, 319, 322, 323, 326, 327, 330, 331, 336, 337, 342, 352, 353, 354, 355, 356, 357, 358, 360, 369, 376, 377, 378, 379, 380, 381, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 471, 472, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 515, 516, 523, 524, 525, 526, 527, 529, 530, 531, 537, 538, 539, 540, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 621, 622, 629, 630, 631, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 659, 661, 663, 665, 666, 668, 669, 670, 671, 672, 674, 675, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 693, 694, 695, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 715, 716, 721, 722, 731, 732, 733, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 774, 776, 778, 779, 780, 781, 788, 792, 793, 795, 796, 798, 800, 801, 803, 805, 806, 808, 814, 815, 817, 819, 821, 823, 825, 827, 829, 831, 833, 835, 839, 840, 842, 844, 845, 847, 850, 851, 853, 854, 856, 857, 859, 861, 862, 863, 868, 869, 872, 873, 874, 875, 876, 877, 879, 880, 881, 882, 893, 894, 895, 896, 897, 898, 899, 900, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 928, 929, 930, 935, 936, 937, 938, 941, 944, 950, 951, 952, 953, 954, 955, 957, 958, 959, 960, 961, 962, 963, 966, 967, 968, 969, 970, 973, 975, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 989, 990, 992, 993, 995, 997, 998, 999, 1011, 1012, 1013, 1014, 1019, 1023, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1039, 1042, 1043, 1045, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1091, 1092, 1093, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1144, 1145, 1147, 1148, 1149, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1161, 1165, 1169, 1170, 1171, 1172, 1199], "\u03d6": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 74, 75, 98, 107, 116, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 208, 209, 211, 212, 213, 214, 216, 218, 219, 226, 229, 232, 233, 234, 235, 239, 242, 245, 248, 250, 251, 255, 258, 261, 263, 266, 272, 276, 277, 278, 279, 280, 287, 288, 290, 297, 298, 299, 300, 301, 308, 309, 314, 315, 316, 319, 322, 323, 326, 327, 330, 331, 336, 337, 342, 352, 353, 354, 355, 356, 357, 358, 360, 369, 376, 377, 378, 379, 380, 381, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 471, 472, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 515, 516, 523, 524, 525, 526, 527, 529, 530, 531, 537, 538, 539, 540, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 621, 622, 629, 630, 631, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 659, 661, 663, 665, 666, 668, 669, 670, 671, 672, 674, 675, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 693, 694, 695, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 715, 716, 721, 722, 731, 732, 733, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 774, 776, 778, 779, 780, 781, 788, 792, 793, 795, 796, 798, 800, 801, 803, 805, 806, 808, 814, 815, 817, 819, 821, 823, 825, 827, 829, 831, 833, 835, 839, 840, 842, 844, 845, 847, 850, 851, 853, 854, 856, 857, 859, 861, 862, 863, 868, 869, 872, 873, 874, 875, 876, 877, 879, 880, 881, 882, 893, 894, 895, 896, 897, 898, 899, 900, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 928, 929, 930, 935, 936, 937, 938, 941, 944, 950, 951, 952, 953, 954, 955, 957, 958, 959, 960, 961, 962, 963, 966, 967, 968, 969, 970, 973, 975, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 989, 990, 992, 993, 995, 997, 998, 999, 1011, 1012, 1013, 1014, 1019, 1023, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1039, 1042, 1043, 1045, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1091, 1092, 1093, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1144, 1145, 1147, 1148, 1149, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1161, 1165, 1169, 1170, 1171, 1172, 1199], "\u03f1": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 74, 75, 98, 107, 116, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 208, 209, 211, 212, 213, 214, 216, 218, 219, 226, 229, 232, 233, 234, 235, 239, 242, 245, 248, 250, 251, 255, 258, 261, 263, 266, 272, 276, 277, 278, 279, 280, 287, 288, 290, 297, 298, 299, 300, 301, 308, 309, 314, 315, 316, 319, 322, 323, 326, 327, 330, 331, 336, 337, 342, 352, 353, 354, 355, 356, 357, 358, 360, 369, 376, 377, 378, 379, 380, 381, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 471, 472, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 515, 516, 523, 524, 525, 526, 527, 529, 530, 531, 537, 538, 539, 540, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 621, 622, 629, 630, 631, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 659, 661, 663, 665, 666, 668, 669, 670, 671, 672, 674, 675, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 693, 694, 695, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 715, 716, 721, 722, 731, 732, 733, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 774, 776, 778, 779, 780, 781, 788, 792, 793, 795, 796, 798, 800, 801, 803, 805, 806, 808, 814, 815, 817, 819, 821, 823, 825, 827, 829, 831, 833, 835, 839, 840, 842, 844, 845, 847, 850, 851, 853, 854, 856, 857, 859, 861, 862, 863, 868, 869, 872, 873, 874, 875, 876, 877, 879, 880, 881, 882, 893, 894, 895, 896, 897, 898, 899, 900, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 928, 929, 930, 935, 936, 937, 938, 941, 944, 950, 951, 952, 953, 954, 955, 957, 958, 959, 960, 961, 962, 963, 966, 967, 968, 969, 970, 973, 975, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 989, 990, 992, 993, 995, 997, 998, 999, 1011, 1012, 1013, 1014, 1019, 1023, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1039, 1042, 1043, 1045, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1091, 1092, 1093, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1144, 1145, 1147, 1148, 1149, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1161, 1165, 1169, 1170, 1171, 1172, 1199], "\u03c2": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 74, 75, 98, 107, 116, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 208, 209, 211, 212, 213, 214, 216, 218, 219, 226, 229, 232, 233, 234, 235, 239, 242, 245, 248, 250, 251, 255, 258, 261, 263, 266, 272, 276, 277, 278, 279, 280, 287, 288, 290, 297, 298, 299, 300, 301, 308, 309, 314, 315, 316, 319, 322, 323, 326, 327, 330, 331, 336, 337, 342, 352, 353, 354, 355, 356, 357, 358, 360, 369, 376, 377, 378, 379, 380, 381, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 471, 472, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 515, 516, 523, 524, 525, 526, 527, 529, 530, 531, 537, 538, 539, 540, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 621, 622, 629, 630, 631, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 659, 661, 663, 665, 666, 668, 669, 670, 671, 672, 674, 675, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 693, 694, 695, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 715, 716, 721, 722, 731, 732, 733, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 774, 776, 778, 779, 780, 781, 788, 792, 793, 795, 796, 798, 800, 801, 803, 805, 806, 808, 814, 815, 817, 819, 821, 823, 825, 827, 829, 831, 833, 835, 839, 840, 842, 844, 845, 847, 850, 851, 853, 854, 856, 857, 859, 861, 862, 863, 868, 869, 872, 873, 874, 875, 876, 877, 879, 880, 881, 882, 893, 894, 895, 896, 897, 898, 899, 900, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 928, 929, 930, 935, 936, 937, 938, 941, 944, 950, 951, 952, 953, 954, 955, 957, 958, 959, 960, 961, 962, 963, 966, 967, 968, 969, 970, 973, 975, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 989, 990, 992, 993, 995, 997, 998, 999, 1011, 1012, 1013, 1014, 1019, 1023, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1039, 1042, 1043, 1045, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1091, 1092, 1093, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1144, 1145, 1147, 1148, 1149, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1161, 1165, 1169, 1170, 1171, 1172, 1199], "\u03d1": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 74, 75, 98, 107, 116, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 208, 209, 211, 212, 213, 214, 216, 218, 219, 226, 229, 232, 233, 234, 235, 239, 242, 245, 248, 250, 251, 255, 258, 261, 263, 266, 272, 276, 277, 278, 279, 280, 287, 288, 290, 297, 298, 299, 300, 301, 308, 309, 314, 315, 316, 319, 322, 323, 326, 327, 330, 331, 336, 337, 342, 352, 353, 354, 355, 356, 357, 358, 360, 369, 376, 377, 378, 379, 380, 381, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 471, 472, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 515, 516, 523, 524, 525, 526, 527, 529, 530, 531, 537, 538, 539, 540, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 621, 622, 629, 630, 631, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 659, 661, 663, 665, 666, 668, 669, 670, 671, 672, 674, 675, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 693, 694, 695, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 715, 716, 721, 722, 731, 732, 733, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 774, 776, 778, 779, 780, 781, 788, 792, 793, 795, 796, 798, 800, 801, 803, 805, 806, 808, 814, 815, 817, 819, 821, 823, 825, 827, 829, 831, 833, 835, 839, 840, 842, 844, 845, 847, 850, 851, 853, 854, 856, 857, 859, 861, 862, 863, 868, 869, 872, 873, 874, 875, 876, 877, 879, 880, 881, 882, 893, 894, 895, 896, 897, 898, 899, 900, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 928, 929, 930, 935, 936, 937, 938, 941, 944, 950, 951, 952, 953, 954, 955, 957, 958, 959, 960, 961, 962, 963, 966, 967, 968, 969, 970, 973, 975, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 989, 990, 992, 993, 995, 997, 998, 999, 1011, 1012, 1013, 1014, 1019, 1023, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1039, 1042, 1043, 1045, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1091, 1092, 1093, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1144, 1145, 1147, 1148, 1149, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1161, 1165, 1169, 1170, 1171, 1172, 1199], "\u2128": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 62, 74, 75, 98, 107, 116, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 208, 209, 211, 212, 213, 214, 216, 218, 219, 226, 229, 232, 233, 234, 235, 239, 242, 245, 248, 250, 251, 255, 258, 261, 263, 266, 272, 276, 277, 278, 279, 280, 287, 288, 290, 297, 298, 299, 300, 301, 308, 309, 314, 315, 316, 319, 322, 323, 326, 327, 330, 331, 336, 337, 342, 352, 353, 354, 355, 356, 357, 358, 360, 369, 376, 377, 378, 379, 380, 381, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 471, 472, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 515, 516, 523, 524, 525, 526, 527, 529, 530, 531, 537, 538, 539, 540, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 621, 622, 629, 630, 631, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 659, 661, 663, 665, 666, 668, 669, 670, 671, 672, 674, 675, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 693, 694, 695, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 715, 716, 721, 722, 731, 732, 733, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 774, 776, 778, 779, 780, 781, 788, 792, 793, 795, 796, 798, 800, 801, 803, 805, 806, 808, 814, 815, 817, 819, 821, 823, 825, 827, 829, 831, 833, 835, 839, 840, 842, 844, 845, 847, 850, 851, 853, 854, 856, 857, 859, 861, 862, 863, 868, 869, 872, 873, 874, 875, 876, 877, 879, 880, 881, 882, 893, 894, 895, 896, 897, 898, 899, 900, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 928, 929, 930, 935, 936, 937, 938, 941, 944, 950, 951, 952, 953, 954, 955, 957, 958, 959, 960, 961, 962, 963, 966, 967, 968, 969, 970, 973, 975, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 989, 990, 992, 993, 995, 997, 998, 999, 1011, 1012, 1013, 1014, 1019, 1023, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1039, 1042, 1043, 1045, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1091, 1092, 1093, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1144, 1145, 1147, 1148, 1149, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1161, 1165, 1169, 1170, 1171, 1172, 1199], "mittwoch": [8, 216, 218, 226], "00": [8, 123, 153, 174, 175, 177, 182, 187, 195, 199, 207, 208, 209, 211, 212, 213, 214, 216, 218, 220, 222, 224, 226, 229, 233, 239, 241, 247, 257, 260, 261, 288, 289, 296, 297, 299, 362, 470, 478, 492, 747, 769, 773, 777, 788, 864, 865, 919, 941, 942, 943, 995, 1014, 1023, 1061, 1169], "cours": [8, 13, 40, 67, 105, 143, 147, 150, 168, 169, 170, 171, 172, 174, 187, 200, 201, 211, 219, 223, 229, 234, 239, 250, 261, 278, 280, 288, 297, 299, 300, 314, 315, 323, 326, 327, 330, 331, 369, 387, 388, 390, 439, 440, 456, 483, 494, 500, 506, 551, 788, 812, 837, 849, 864, 865, 926, 935, 964, 971, 1013, 1035, 1036, 1058, 1091, 1123, 1132, 1136, 1149, 1150, 1163, 1189, 1192, 1204], "tectrain": [8, 11, 195, 207, 216, 218, 226, 229, 232, 233, 234, 235, 239, 251, 263, 387], "html": [8, 17, 18, 23, 39, 40, 153, 169, 178, 191, 199, 216, 226, 229, 232, 236, 239, 242, 245, 248, 264, 295, 350, 364, 674, 793, 808, 814, 897, 919, 1005, 1009, 1080, 1147], "download": [8, 17, 62, 107, 153, 160, 171, 177, 179, 183, 187, 192, 195, 204, 211, 216, 224, 226, 229, 232, 233, 234, 239, 242, 245, 255, 258, 261, 263, 266, 269, 272, 281, 284, 291, 295, 302, 319, 339, 345, 349, 360, 389, 479, 482, 543, 544, 545, 546, 547, 548, 549, 552, 553, 598, 683, 685, 689, 690, 712, 713, 714, 717, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 729, 730, 744, 746, 897, 899, 919, 921, 934, 941, 942, 943, 953, 1019, 1025, 1059, 1093, 1105, 1114, 1124, 1125, 1127, 1138, 1140, 1142, 1164], "repositori": [8, 23, 78, 98, 110, 123, 150, 159, 168, 175, 178, 186, 190, 199, 201, 208, 209, 219, 224, 226, 229, 233, 234, 235, 239, 242, 245, 250, 251, 255, 258, 261, 263, 266, 272, 280, 288, 298, 299, 301, 305, 311, 315, 316, 319, 323, 327, 331, 333, 337, 339, 345, 349, 354, 368, 369, 374, 542, 559, 594, 790, 837, 1178, 1183], "kurssprach": [8, 216, 226, 235, 251, 263], "kurs": [8, 23, 169, 186, 207, 218, 226, 235, 251, 263, 1183, 1184, 1185, 1193, 1200, 1207], "viel": [8, 23, 190, 195, 199, 205, 216, 226, 235, 241, 251, 252, 263, 282, 1186, 1187, 1193, 1201, 1202], "spezifisch": [8, 216, 226, 235, 251, 263, 1184, 1203, 1206], "unterrichtet": [8, 216, 226, 235, 251, 263], "themenreihenfolg": [8, 216, 226, 235, 251, 263], "herdt": [8, 165, 226, 235, 251, 263], "skriptum": [8, 216, 226, 235, 251, 263, 1199], "\u00fcbernommen": [8, 216, 226, 235, 251, 263], "etwa": [8, 23, 180, 181, 190, 195, 205, 207, 216, 226, 228, 235, 251, 263, 387, 1184, 1186, 1193, 1199, 1200, 1202, 1207], "allgemein": [8, 216, 226, 235, 251, 263, 1199], "allgemeinen": [8, 216, 220, 226, 235, 251, 263, 1202], "dadurch": [8, 216, 226, 235, 251, 263, 387, 1186, 1206], "verwirrend": [8, 216, 226, 235, 251, 263, 1199], "weswegen": [8, 216, 226, 235, 251, 263], "vielen": [8, 23, 190, 215, 226, 235, 251, 263, 387, 1193, 1195], "f\u00e4llen": [8, 23, 148, 216, 226, 235, 251, 263], "ausnahmen": [8, 148, 216, 226, 235, 251, 263], "gemacht": [8, 23, 180, 186, 216, 226, 235, 251, 263, 1199, 1207], "kursstruktur": [8, 226], "sieh": [8, 23, 148, 189, 190, 191, 195, 199, 205, 216, 218, 221, 226, 235, 251, 263, 387, 1184, 1185, 1199], "jjj": [8, 136, 169, 213, 218, 226, 248, 296, 301, 378, 792, 793, 794, 798, 806], "hello": [8, 29, 62, 91, 165, 183, 205, 211, 215, 216, 218, 222, 226, 228, 229, 233, 235, 237, 239, 241, 242, 245, 247, 250, 251, 252, 254, 255, 261, 262, 263, 264, 266, 267, 269, 271, 284, 285, 291, 294, 302, 304, 305, 310, 311, 324, 332, 333, 334, 338, 339, 344, 345, 348, 349, 350, 355, 356, 357, 358, 359, 360, 364, 365, 369, 404, 407, 411, 422, 431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 492, 601, 604, 674, 696, 702, 705, 722, 727, 728, 729, 730, 734, 787, 789, 790, 794, 797, 799, 802, 804, 807, 814, 818, 822, 828, 834, 839, 841, 846, 849, 852, 855, 858, 864, 865, 868, 869, 901, 903, 908, 909, 916, 933, 944, 966, 990, 1011, 1012, 1013, 1023, 1025, 1027, 1028, 1029, 1036, 1043, 1044, 1045, 1046, 1050, 1058, 1062, 1063, 1069, 1072, 1074, 1078, 1079, 1089, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1146, 1149, 1150, 1156, 1160, 1163, 1185, 1199], "py": [8, 17, 21, 32, 40, 62, 152, 153, 168, 187, 191, 192, 195, 203, 204, 205, 208, 209, 211, 213, 223, 226, 232, 238, 241, 245, 247, 248, 251, 252, 255, 257, 258, 260, 261, 263, 264, 270, 272, 284, 290, 291, 292, 300, 301, 305, 306, 311, 322, 323, 328, 341, 349, 350, 354, 369, 478, 736, 941, 997, 999, 1032, 1035, 1037, 1038, 1042, 1043, 1045, 1061, 1062, 1064, 1070, 1087, 1090, 1091, 1092, 1093, 1097, 1098, 1100, 1101, 1103, 1105, 1110, 1114, 1116, 1118, 1120, 1121, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1138, 1139, 1144, 1152, 1157, 1158, 1169, 1170], "swap": [8, 29, 174, 210, 216, 226, 228, 235, 247, 250, 251, 263, 268, 269, 278, 287, 288, 308, 309, 350, 352, 353, 444, 448, 451, 455, 464, 468, 473, 474, 572, 696, 734, 787, 789, 790, 823, 867, 878, 879, 933, 1065, 1095, 1097, 1098, 1099, 1100, 1102, 1134, 1199, 1203], "exercis": [8, 29, 79, 94, 98, 103, 105, 107, 125, 126, 138, 141, 142, 143, 147, 169, 191, 199, 204, 211, 212, 216, 218, 223, 226, 229, 235, 239, 242, 245, 246, 248, 251, 255, 258, 261, 263, 266, 268, 269, 278, 280, 287, 291, 293, 294, 308, 309, 313, 327, 331, 338, 352, 354, 355, 356, 357, 358, 360, 368, 371, 374, 382, 383, 400, 407, 422, 431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 493, 501, 541, 562, 563, 564, 565, 567, 568, 569, 574, 594, 661, 662, 676, 696, 734, 762, 789, 790, 791, 798, 860, 864, 865, 867, 871, 878, 888, 890, 892, 917, 927, 933, 949, 972, 974, 983, 991, 1010, 1017, 1058, 1059, 1094, 1123, 1134, 1135, 1169, 1189, 1192, 1194, 1199, 1204], "greet": [8, 29, 205, 216, 226, 229, 235, 241, 242, 251, 252, 254, 260, 261, 263, 266, 269, 284, 285, 365, 488, 790, 1012, 1013, 1019, 1029, 1095, 1097, 1099, 1102, 1134, 1199], "depend": [8, 13, 28, 29, 62, 79, 115, 120, 121, 125, 143, 165, 168, 169, 172, 173, 179, 183, 202, 204, 216, 226, 229, 234, 235, 241, 242, 247, 248, 251, 257, 260, 261, 263, 266, 269, 284, 301, 309, 315, 331, 369, 384, 392, 408, 410, 418, 421, 437, 454, 466, 472, 476, 480, 484, 487, 491, 494, 501, 507, 541, 553, 579, 581, 589, 669, 695, 743, 766, 788, 790, 796, 849, 860, 867, 871, 878, 881, 892, 917, 927, 934, 942, 960, 1012, 1023, 1027, 1029, 1036, 1058, 1059, 1061, 1095, 1099, 1108, 1134, 1163, 1164, 1194, 1196, 1199], "time": [8, 29, 36, 38, 43, 53, 62, 74, 77, 86, 90, 99, 111, 112, 123, 125, 126, 130, 138, 143, 147, 153, 162, 171, 172, 173, 174, 176, 177, 179, 192, 193, 196, 204, 208, 210, 211, 212, 216, 222, 224, 226, 229, 231, 233, 234, 235, 241, 242, 244, 247, 248, 251, 252, 260, 261, 263, 266, 267, 269, 270, 284, 285, 288, 291, 292, 294, 297, 298, 300, 301, 302, 306, 309, 319, 322, 323, 326, 328, 333, 334, 339, 340, 346, 355, 376, 387, 404, 412, 426, 432, 435, 458, 460, 465, 466, 469, 470, 471, 472, 476, 481, 492, 494, 495, 498, 504, 553, 583, 596, 603, 605, 646, 647, 701, 708, 722, 736, 744, 746, 757, 764, 768, 788, 790, 808, 810, 814, 815, 817, 829, 835, 837, 839, 852, 855, 858, 862, 868, 869, 870, 876, 877, 881, 897, 928, 933, 934, 941, 942, 943, 953, 963, 969, 970, 971, 975, 978, 979, 981, 984, 987, 993, 995, 996, 997, 998, 999, 1004, 1026, 1027, 1033, 1037, 1043, 1046, 1047, 1058, 1059, 1060, 1063, 1070, 1073, 1076, 1077, 1095, 1097, 1099, 1102, 1134, 1140, 1149, 1154, 1164, 1194, 1199, 1205], "dai": [8, 12, 29, 173, 174, 176, 182, 185, 188, 191, 192, 196, 210, 216, 226, 229, 235, 237, 246, 251, 260, 261, 263, 266, 269, 284, 292, 296, 319, 375, 377, 378, 387, 477, 482, 483, 494, 515, 790, 854, 893, 958, 995, 1036, 1058, 1065, 1074, 1095, 1097, 1099, 1102, 1134, 1135, 1142, 1163, 1190, 1191, 1192, 1194, 1199, 1204], "hen": [8, 226], "vehikelkauf": [8, 226], "datentypen": [8, 195, 199, 216, 217, 223, 226, 257, 275, 370, 1186, 1199, 1206], "\u00fcbersicht": [8, 216, 226, 229, 239, 242, 245], "git": [8, 13, 23, 60, 73, 74, 75, 79, 124, 125, 126, 142, 151, 159, 164, 176, 178, 186, 199, 200, 201, 204, 221, 223, 224, 226, 248, 250, 261, 272, 277, 279, 297, 298, 299, 375, 376, 382, 383, 479, 540, 551, 614, 790, 812, 837, 838, 897, 936, 941, 1025, 1026, 1091, 1178, 1183], "scm": [8, 60, 175, 199, 226, 810], "com": [8, 13, 20, 23, 37, 42, 44, 50, 86, 107, 123, 125, 137, 147, 150, 152, 153, 168, 177, 178, 179, 183, 187, 199, 200, 201, 202, 208, 209, 212, 213, 221, 226, 228, 234, 248, 250, 260, 272, 277, 279, 285, 288, 291, 292, 297, 298, 299, 301, 305, 311, 315, 316, 319, 323, 327, 331, 333, 337, 339, 345, 349, 368, 369, 374, 380, 389, 537, 551, 572, 614, 634, 635, 636, 637, 638, 640, 641, 642, 643, 646, 655, 674, 756, 837, 838, 897, 936, 941, 944, 952, 953, 1025, 1091, 1149, 1153, 1154, 1155, 1157, 1158, 1159, 1160], "pep": [8, 168, 216, 226, 298, 300, 301, 322, 323], "The": [8, 13, 17, 29, 30, 40, 49, 53, 57, 61, 62, 63, 65, 79, 85, 91, 100, 107, 108, 109, 110, 111, 112, 120, 125, 127, 128, 129, 130, 131, 133, 135, 136, 142, 143, 147, 148, 151, 153, 165, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 184, 187, 188, 189, 192, 193, 195, 196, 200, 201, 202, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 223, 224, 226, 229, 232, 235, 239, 240, 241, 242, 245, 246, 247, 250, 251, 254, 255, 257, 258, 260, 263, 264, 266, 269, 271, 274, 276, 277, 278, 279, 281, 284, 287, 290, 291, 294, 297, 299, 301, 304, 305, 307, 308, 310, 311, 327, 329, 332, 333, 334, 338, 339, 341, 344, 345, 348, 349, 351, 352, 355, 356, 357, 358, 359, 360, 366, 369, 370, 371, 372, 374, 375, 386, 387, 388, 391, 393, 401, 407, 415, 417, 419, 420, 421, 422, 427, 431, 435, 438, 444, 448, 451, 454, 455, 458, 464, 466, 468, 473, 477, 479, 481, 494, 495, 496, 499, 500, 505, 514, 515, 516, 518, 520, 522, 537, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 554, 556, 559, 561, 594, 595, 597, 601, 602, 604, 613, 614, 615, 616, 617, 620, 623, 631, 639, 645, 649, 658, 661, 662, 667, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 695, 696, 699, 703, 705, 710, 715, 721, 734, 735, 744, 745, 746, 750, 759, 766, 767, 771, 775, 784, 787, 788, 790, 791, 798, 800, 810, 812, 815, 831, 837, 839, 842, 860, 862, 864, 865, 866, 867, 870, 871, 874, 875, 878, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 894, 896, 899, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 915, 927, 933, 937, 941, 942, 943, 956, 958, 962, 964, 967, 968, 969, 970, 972, 974, 977, 981, 982, 984, 985, 988, 991, 994, 995, 996, 1005, 1008, 1009, 1012, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1025, 1026, 1027, 1028, 1029, 1030, 1034, 1036, 1037, 1040, 1041, 1044, 1045, 1046, 1048, 1049, 1050, 1057, 1059, 1061, 1063, 1064, 1071, 1075, 1078, 1082, 1083, 1085, 1086, 1087, 1089, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1142, 1143, 1145, 1146, 1149, 1150, 1152, 1156, 1158, 1163, 1166, 1169, 1171, 1173, 1176, 1186, 1188, 1189, 1190, 1192, 1199], "zen": [8, 175, 216, 226, 254, 265, 298, 711], "corei": [8, 193, 204, 207, 208, 211, 213, 216, 218, 224, 226, 229, 232, 239, 242, 245, 255, 258, 269, 272, 281, 305, 311, 339, 369, 374, 1136, 1154, 1155, 1157, 1158, 1159, 1160, 1162, 1172], "schaefer": [8, 213, 216, 218, 224, 226], "youtub": [8, 20, 179, 193, 204, 207, 209, 211, 213, 216, 218, 226, 233, 300, 301, 322, 326, 340, 355], "channel": [8, 138, 147, 177, 193, 216, 226, 934, 942, 1004], "trainer": [8, 12, 23, 24, 61, 63, 65, 179, 198, 199, 204, 216, 226, 277, 279, 297, 481, 483, 551, 598, 746, 942, 1036, 1043, 1058, 1059, 1135, 1150, 1162, 1163, 1169, 1189, 1194], "hacker": [8, 216, 226, 1194], "schier": [8, 216, 226], "anzahl": [8, 216, 226], "sehr": [8, 23, 37, 148, 180, 181, 195, 199, 205, 207, 215, 216, 220, 226, 257, 387, 1184, 1186, 1193, 1196, 1199, 1200, 1202, 1207], "guten": [8, 195, 205, 207, 216, 226, 260, 264, 387, 1188], "tutori": [8, 153, 179, 193, 204, 207, 212, 216, 224, 226, 232, 233, 235, 242, 245, 255, 258, 281, 311, 323, 339, 355, 369, 374, 897, 943, 1087, 1090, 1154, 1155, 1157, 1158, 1159, 1160, 1162, 1172], "stil": [8, 216, 226], "besser": [8, 23, 180, 191, 215, 216, 226, 236, 1199], "ander": [8, 195, 205, 216, 226, 236, 244, 257, 364, 369, 374, 378, 387, 863, 1184, 1185, 1188, 1193, 1196, 1201, 1205, 1206], "auswahl": [8, 216, 226], "einleitung": [9, 227], "datatyp": [9, 29, 91, 165, 204, 208, 211, 216, 217, 218, 221, 223, 227, 229, 230, 235, 239, 240, 242, 243, 245, 246, 248, 249, 250, 251, 253, 255, 256, 261, 262, 263, 265, 266, 268, 271, 281, 283, 286, 293, 301, 303, 307, 313, 323, 325, 327, 329, 335, 341, 347, 351, 355, 356, 357, 358, 359, 360, 369, 374, 408, 415, 600, 629, 697, 790, 1004, 1036, 1041, 1043, 1044, 1045, 1046, 1050, 1058, 1069, 1078, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1146, 1149, 1150, 1156, 1163, 1199], "number": [9, 24, 27, 29, 36, 53, 57, 61, 62, 63, 65, 69, 79, 81, 83, 85, 86, 111, 112, 123, 126, 130, 132, 142, 162, 165, 171, 173, 174, 177, 179, 182, 183, 187, 190, 192, 195, 201, 204, 208, 211, 214, 215, 216, 218, 223, 224, 227, 229, 230, 232, 235, 239, 241, 242, 244, 245, 247, 248, 251, 253, 254, 255, 257, 260, 261, 263, 265, 266, 268, 269, 270, 272, 277, 279, 281, 284, 285, 291, 292, 297, 298, 299, 300, 301, 302, 304, 305, 306, 310, 311, 314, 322, 323, 326, 327, 328, 330, 332, 333, 334, 338, 339, 340, 344, 345, 348, 349, 350, 355, 360, 369, 376, 387, 392, 394, 396, 398, 400, 401, 402, 408, 412, 414, 415, 426, 437, 453, 457, 462, 466, 470, 476, 478, 488, 506, 507, 515, 540, 548, 550, 553, 555, 566, 572, 599, 619, 627, 630, 637, 653, 678, 687, 690, 699, 711, 737, 744, 746, 788, 790, 796, 798, 805, 808, 817, 819, 831, 833, 839, 847, 851, 862, 870, 877, 903, 922, 924, 926, 928, 930, 942, 953, 954, 957, 961, 962, 963, 968, 969, 970, 971, 990, 995, 996, 1004, 1005, 1009, 1011, 1014, 1034, 1035, 1037, 1039, 1040, 1041, 1051, 1063, 1064, 1065, 1070, 1071, 1081, 1082, 1083, 1085, 1086, 1095, 1098, 1099, 1102, 1105, 1106, 1108, 1109, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1130, 1134, 1135, 1136, 1139, 1144, 1162, 1164, 1169, 1182, 1191, 1194, 1199], "integ": [9, 38, 76, 77, 89, 190, 192, 194, 209, 210, 211, 213, 217, 221, 227, 230, 234, 241, 244, 245, 247, 250, 253, 256, 257, 258, 260, 265, 268, 274, 286, 293, 306, 313, 325, 329, 335, 341, 351, 369, 392, 393, 398, 408, 411, 413, 414, 415, 426, 437, 439, 441, 442, 453, 454, 458, 464, 468, 473, 474, 515, 516, 519, 537, 572, 600, 626, 629, 677, 691, 695, 696, 698, 734, 737, 763, 787, 789, 790, 796, 971, 981, 982, 983, 990, 1030, 1043, 1046, 1074, 1080, 1086, 1113, 1157, 1159, 1186, 1190, 1205], "string": [9, 29, 42, 50, 58, 91, 98, 107, 115, 119, 130, 131, 169, 174, 199, 209, 210, 211, 213, 216, 217, 220, 223, 227, 229, 230, 232, 233, 235, 239, 240, 242, 243, 245, 246, 248, 249, 250, 251, 253, 255, 256, 259, 261, 262, 263, 265, 266, 268, 271, 274, 276, 277, 279, 281, 283, 284, 286, 290, 291, 293, 294, 296, 304, 305, 307, 310, 311, 313, 322, 323, 325, 326, 327, 329, 332, 333, 335, 336, 337, 338, 339, 341, 344, 345, 347, 348, 349, 351, 354, 355, 356, 357, 358, 359, 360, 365, 369, 374, 380, 393, 396, 400, 407, 416, 422, 431, 437, 438, 444, 448, 451, 455, 460, 464, 468, 473, 474, 478, 486, 497, 501, 503, 518, 520, 521, 522, 525, 527, 530, 531, 532, 534, 535, 536, 537, 553, 554, 555, 560, 571, 572, 580, 586, 589, 595, 597, 600, 601, 604, 619, 621, 638, 641, 642, 643, 647, 650, 651, 652, 653, 654, 655, 658, 662, 673, 675, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 694, 696, 697, 698, 700, 702, 703, 707, 722, 726, 728, 729, 730, 731, 734, 736, 738, 739, 743, 753, 754, 755, 756, 758, 770, 775, 787, 788, 789, 790, 869, 960, 971, 975, 978, 982, 990, 995, 1004, 1008, 1035, 1036, 1039, 1047, 1056, 1058, 1063, 1071, 1085, 1093, 1094, 1095, 1100, 1105, 1108, 1109, 1110, 1113, 1116, 1119, 1120, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1136, 1147, 1148, 1149, 1150, 1152, 1155, 1186, 1199], "compound": [9, 29, 91, 165, 208, 211, 216, 217, 218, 227, 229, 235, 239, 240, 242, 243, 245, 246, 248, 249, 251, 253, 255, 256, 261, 262, 263, 265, 266, 268, 269, 271, 283, 284, 291, 294, 301, 303, 304, 305, 307, 310, 311, 313, 322, 323, 325, 326, 327, 329, 332, 333, 338, 339, 341, 344, 345, 347, 348, 349, 351, 355, 356, 357, 358, 359, 360, 369, 392, 423, 442, 790, 1036, 1043, 1044, 1045, 1046, 1050, 1058, 1092, 1093, 1094, 1095, 1103, 1104, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1146, 1149, 1150, 1156, 1163, 1199], "list": [9, 27, 29, 37, 62, 91, 100, 125, 152, 165, 168, 169, 172, 179, 183, 194, 199, 201, 204, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 220, 223, 224, 227, 229, 230, 232, 235, 239, 240, 242, 243, 245, 246, 248, 249, 250, 251, 253, 255, 256, 257, 262, 263, 265, 266, 268, 269, 271, 273, 277, 278, 281, 283, 284, 286, 287, 288, 291, 293, 294, 297, 298, 299, 303, 304, 305, 307, 308, 309, 310, 311, 313, 322, 323, 325, 326, 327, 328, 332, 333, 335, 338, 339, 341, 344, 345, 347, 348, 349, 351, 352, 353, 354, 361, 364, 366, 369, 373, 374, 375, 387, 445, 451, 455, 456, 464, 468, 470, 472, 473, 474, 478, 479, 482, 491, 498, 500, 501, 540, 542, 550, 553, 586, 588, 590, 594, 598, 599, 604, 629, 645, 658, 662, 681, 691, 696, 699, 734, 742, 748, 753, 766, 767, 787, 788, 789, 790, 791, 799, 803, 804, 807, 814, 815, 818, 828, 839, 841, 845, 846, 852, 855, 858, 863, 864, 865, 866, 867, 870, 871, 877, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 901, 904, 905, 908, 909, 911, 912, 913, 914, 915, 917, 925, 933, 942, 962, 964, 966, 972, 974, 982, 984, 988, 991, 994, 996, 1011, 1013, 1028, 1032, 1035, 1036, 1039, 1040, 1041, 1054, 1056, 1058, 1059, 1065, 1066, 1071, 1072, 1073, 1074, 1077, 1083, 1085, 1086, 1087, 1093, 1095, 1105, 1108, 1109, 1110, 1111, 1115, 1116, 1117, 1118, 1119, 1120, 1126, 1128, 1131, 1133, 1134, 1135, 1136, 1141, 1144, 1154, 1157, 1161, 1171, 1176, 1183, 1186, 1199, 1200], "arrai": [9, 98, 109, 125, 195, 216, 217, 222, 227, 229, 233, 234, 236, 242, 250, 255, 260, 269, 272, 276, 277, 297, 305, 311, 350, 392, 401, 407, 411, 422, 431, 438, 448, 451, 455, 457, 459, 460, 463, 464, 468, 473, 474, 552, 555, 578, 586, 589, 627, 628, 630, 632, 634, 637, 638, 643, 647, 659, 679, 686, 687, 688, 689, 690, 691, 694, 696, 734, 742, 757, 774, 787, 789, 790, 808, 869, 874, 990, 1067, 1071, 1083, 1136, 1139, 1141, 1164, 1199], "javascript": [9, 23, 170, 205, 215, 227, 236, 260, 265, 1030, 1076], "std": [9, 42, 50, 58, 107, 109, 110, 111, 112, 115, 119, 121, 122, 125, 130, 131, 134, 183, 199, 200, 227, 275, 288, 297, 299, 480, 481, 486, 494, 497, 499, 501, 503, 508, 515, 518, 520, 521, 522, 525, 526, 527, 530, 531, 532, 533, 534, 535, 536, 537, 540, 542, 543, 548, 550, 552, 553, 554, 556, 557, 558, 559, 570, 572, 580, 590, 594, 597, 598, 600, 605, 606, 607, 611, 619, 621, 625, 626, 627, 628, 629, 634, 635, 636, 637, 638, 640, 641, 642, 646, 647, 649, 652, 653, 654, 655, 658, 659, 662, 663, 665, 666, 669, 671, 672, 673, 675, 676, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 689, 691, 696, 698, 701, 702, 703, 704, 705, 707, 708, 709, 711, 712, 713, 714, 716, 717, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 734, 736, 738, 739, 741, 746, 749, 752, 756, 759, 761, 767, 771, 774, 776, 778, 784, 786, 787, 789, 790, 941, 975, 978, 982, 990, 992, 1004, 1008, 1141, 1176, 1181, 1189], "vector": [9, 13, 107, 109, 111, 112, 125, 130, 131, 134, 199, 227, 233, 250, 276, 277, 290, 296, 297, 299, 337, 350, 499, 501, 525, 526, 542, 543, 550, 556, 557, 558, 559, 570, 588, 590, 594, 598, 600, 605, 610, 634, 636, 637, 638, 640, 643, 645, 658, 662, 676, 678, 679, 686, 687, 688, 689, 691, 697, 698, 702, 707, 708, 709, 716, 717, 718, 719, 720, 722, 742, 743, 746, 775, 784, 786, 790, 1008, 1064, 1143, 1160, 1181], "dictionari": [9, 29, 62, 91, 194, 204, 209, 210, 211, 213, 216, 217, 218, 221, 223, 227, 229, 230, 235, 239, 240, 242, 243, 245, 246, 248, 249, 251, 253, 255, 256, 259, 262, 263, 265, 266, 268, 269, 271, 274, 281, 283, 284, 286, 291, 293, 294, 298, 300, 301, 303, 304, 305, 307, 310, 311, 313, 316, 319, 322, 323, 325, 326, 327, 329, 332, 333, 335, 338, 339, 341, 344, 345, 347, 348, 349, 351, 369, 374, 377, 743, 790, 1036, 1039, 1043, 1044, 1045, 1046, 1049, 1050, 1054, 1058, 1093, 1095, 1103, 1108, 1113, 1114, 1119, 1122, 1123, 1124, 1126, 1128, 1129, 1134, 1136, 1144, 1154, 1161, 1163, 1199], "valu": [9, 58, 65, 85, 109, 125, 126, 130, 131, 137, 142, 143, 147, 172, 174, 176, 187, 189, 191, 192, 193, 205, 209, 211, 213, 215, 220, 222, 227, 228, 229, 231, 232, 233, 234, 236, 237, 239, 241, 242, 244, 245, 247, 248, 250, 252, 254, 255, 257, 260, 264, 267, 269, 270, 281, 282, 285, 288, 290, 292, 302, 305, 306, 311, 312, 324, 328, 334, 337, 339, 341, 346, 350, 355, 363, 369, 391, 396, 398, 400, 401, 411, 414, 415, 416, 424, 426, 427, 435, 437, 439, 440, 445, 456, 460, 462, 464, 468, 473, 474, 478, 481, 486, 488, 491, 496, 499, 501, 515, 516, 518, 521, 525, 527, 530, 532, 533, 535, 546, 547, 548, 550, 553, 560, 572, 589, 598, 599, 600, 603, 609, 612, 650, 652, 654, 655, 696, 698, 699, 705, 707, 716, 722, 725, 728, 729, 730, 734, 743, 754, 768, 784, 787, 789, 790, 793, 796, 815, 817, 819, 821, 837, 847, 869, 882, 933, 942, 963, 971, 973, 974, 976, 977, 978, 981, 984, 990, 993, 1004, 1005, 1008, 1009, 1028, 1030, 1032, 1035, 1039, 1043, 1045, 1047, 1054, 1065, 1066, 1067, 1075, 1077, 1080, 1082, 1083, 1087, 1093, 1096, 1101, 1103, 1106, 1113, 1115, 1136, 1139, 1141, 1144, 1147, 1148, 1154, 1155, 1158, 1159, 1160, 1176], "map": [9, 32, 34, 42, 61, 63, 107, 109, 110, 130, 131, 174, 181, 199, 205, 219, 221, 223, 227, 229, 230, 232, 233, 236, 244, 245, 247, 262, 276, 277, 279, 285, 297, 299, 306, 325, 336, 339, 340, 369, 472, 497, 501, 530, 534, 535, 536, 542, 553, 559, 588, 590, 594, 649, 652, 653, 654, 655, 658, 662, 691, 694, 698, 702, 708, 734, 753, 754, 755, 757, 789, 790, 821, 833, 995, 1004, 1005, 1053, 1057, 1066, 1067, 1086, 1143, 1193, 1203], "mathematisch": [9, 227, 285], "mengen": [9, 216, 217, 227, 1199], "while": [9, 13, 29, 53, 54, 62, 91, 115, 121, 165, 176, 178, 179, 187, 193, 204, 208, 209, 211, 212, 213, 214, 216, 217, 218, 220, 222, 223, 224, 227, 228, 229, 231, 232, 235, 236, 237, 239, 241, 242, 245, 246, 247, 250, 251, 253, 255, 256, 258, 259, 261, 262, 263, 264, 266, 268, 269, 271, 281, 284, 285, 291, 293, 294, 298, 300, 304, 305, 306, 310, 311, 312, 322, 323, 324, 326, 332, 333, 335, 338, 339, 341, 344, 345, 347, 348, 349, 351, 355, 356, 357, 358, 359, 360, 361, 369, 372, 374, 392, 394, 398, 400, 402, 409, 414, 416, 430, 431, 437, 438, 442, 444, 448, 451, 452, 455, 457, 459, 464, 466, 468, 473, 474, 484, 496, 501, 515, 522, 540, 589, 625, 629, 630, 633, 635, 637, 640, 655, 678, 684, 694, 696, 707, 722, 723, 724, 730, 734, 755, 766, 768, 784, 787, 789, 790, 814, 817, 825, 827, 837, 839, 845, 846, 852, 855, 858, 870, 874, 881, 933, 934, 941, 942, 954, 959, 960, 961, 962, 969, 978, 984, 989, 990, 993, 995, 1001, 1004, 1008, 1023, 1028, 1036, 1037, 1038, 1039, 1043, 1046, 1058, 1059, 1063, 1068, 1073, 1085, 1092, 1093, 1094, 1095, 1099, 1105, 1107, 1108, 1109, 1111, 1115, 1116, 1117, 1118, 1119, 1120, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1136, 1142, 1143, 1146, 1150, 1163, 1186, 1190, 1192, 1194, 1199], "function": [9, 21, 29, 38, 50, 61, 62, 63, 79, 81, 83, 91, 98, 111, 112, 125, 126, 143, 147, 165, 169, 172, 174, 183, 191, 204, 205, 207, 208, 209, 211, 212, 213, 214, 216, 217, 218, 220, 223, 224, 227, 229, 230, 232, 233, 235, 239, 240, 242, 243, 245, 246, 247, 248, 250, 251, 253, 255, 256, 257, 258, 261, 262, 263, 265, 266, 267, 271, 274, 275, 282, 284, 286, 288, 290, 291, 293, 294, 297, 299, 300, 301, 302, 304, 305, 307, 310, 311, 312, 318, 325, 327, 328, 335, 341, 347, 351, 354, 364, 365, 371, 372, 374, 387, 391, 392, 398, 401, 405, 406, 407, 412, 417, 421, 422, 430, 431, 432, 433, 435, 437, 442, 444, 445, 448, 449, 450, 451, 453, 455, 456, 457, 459, 464, 466, 468, 470, 473, 474, 477, 485, 491, 499, 504, 516, 537, 541, 542, 553, 556, 557, 558, 559, 561, 570, 583, 589, 594, 598, 601, 604, 606, 607, 608, 609, 615, 620, 623, 625, 639, 645, 649, 658, 661, 662, 669, 672, 675, 676, 677, 679, 680, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 696, 698, 699, 702, 703, 711, 714, 720, 722, 731, 732, 733, 734, 736, 738, 739, 744, 750, 754, 756, 757, 767, 774, 775, 776, 778, 779, 780, 787, 788, 789, 790, 801, 804, 807, 808, 814, 818, 821, 825, 828, 831, 837, 839, 841, 846, 852, 853, 855, 856, 857, 858, 867, 870, 871, 933, 941, 954, 956, 962, 963, 964, 971, 972, 974, 979, 980, 981, 987, 988, 990, 991, 994, 996, 1009, 1011, 1019, 1029, 1036, 1039, 1040, 1041, 1042, 1050, 1058, 1060, 1063, 1064, 1068, 1070, 1092, 1093, 1094, 1095, 1098, 1101, 1102, 1105, 1106, 1107, 1108, 1113, 1116, 1117, 1119, 1120, 1121, 1129, 1130, 1131, 1132, 1133, 1134, 1136, 1141, 1146, 1152, 1165, 1169, 1181, 1189, 1190, 1191, 1199], "xx": [10, 241, 272, 306, 312, 328, 334, 350], "yy": 10, "kur": [11, 23, 190, 192, 195, 207, 387, 1184, 1185, 1186, 1187, 1188, 1193, 1195, 1196, 1202, 1203, 1205], "fand": [11, 207, 387], "team": [11, 123, 126, 143, 179, 184, 187, 188, 199, 207, 208, 209, 224, 233, 258, 300, 387, 876, 882, 889, 891, 1037, 1135, 1183, 1191], "statt": [11, 23, 148, 207, 387, 1200, 1201, 1207], "wurd": [11, 181, 195, 199, 205, 207, 216, 369, 374, 387, 1188, 1199, 1200, 1206], "\u00fcber": [11, 23, 148, 180, 181, 186, 190, 191, 195, 199, 207, 216, 217, 221, 230, 235, 261, 370, 387, 1183, 1193, 1199, 1200, 1205, 1206], "meinen": [11, 23, 207, 235, 251, 263, 387], "partner": [11, 23, 207, 387, 1183], "durat": [12, 27, 177, 187, 449, 483, 553, 764, 768, 769, 1036, 1058, 1135, 1163, 1191, 1192, 1194, 1204], "each": [12, 40, 62, 77, 107, 111, 112, 131, 134, 172, 173, 174, 187, 193, 211, 212, 224, 241, 244, 247, 257, 260, 264, 297, 299, 306, 354, 360, 366, 369, 374, 442, 467, 470, 472, 496, 504, 537, 551, 552, 608, 694, 769, 775, 788, 825, 833, 837, 864, 870, 891, 895, 897, 941, 942, 943, 981, 985, 993, 1027, 1039, 1042, 1047, 1053, 1114, 1135, 1141, 1143, 1144, 1145, 1160, 1164, 1194, 1204], "about": [12, 23, 29, 30, 39, 42, 43, 44, 45, 46, 49, 62, 69, 76, 81, 84, 85, 91, 98, 123, 125, 142, 143, 153, 160, 165, 166, 168, 172, 173, 174, 176, 179, 187, 196, 200, 201, 204, 208, 209, 210, 211, 212, 213, 216, 223, 224, 229, 232, 233, 234, 235, 239, 241, 242, 245, 248, 249, 250, 251, 253, 255, 257, 258, 260, 261, 263, 265, 266, 269, 278, 281, 283, 284, 286, 287, 288, 294, 298, 299, 304, 305, 308, 310, 311, 313, 322, 323, 326, 327, 332, 333, 335, 337, 338, 341, 344, 345, 347, 348, 351, 352, 355, 356, 357, 358, 359, 360, 369, 371, 374, 380, 410, 415, 424, 426, 454, 457, 458, 460, 466, 470, 472, 476, 490, 496, 589, 598, 599, 622, 629, 695, 704, 708, 709, 739, 743, 748, 757, 758, 788, 790, 806, 808, 837, 847, 856, 864, 865, 883, 900, 934, 941, 942, 943, 954, 958, 964, 979, 996, 1004, 1030, 1036, 1037, 1039, 1046, 1047, 1054, 1058, 1066, 1077, 1085, 1093, 1094, 1095, 1105, 1108, 1116, 1117, 1119, 1120, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1143, 1149, 1150, 1151, 1152, 1156, 1164, 1169, 1178, 1191, 1192, 1199, 1204], "book": [12, 29, 32, 168, 172, 177, 187, 188, 199, 208, 233, 255, 291, 300, 301, 387, 477, 483, 897, 1036, 1058, 1135, 1150, 1163, 1190, 1192, 1194, 1204], "separ": [12, 38, 79, 104, 105, 125, 172, 199, 201, 211, 231, 244, 250, 260, 264, 267, 270, 285, 288, 291, 292, 294, 302, 306, 314, 328, 330, 334, 340, 346, 399, 437, 458, 478, 481, 488, 500, 504, 514, 542, 543, 544, 545, 546, 547, 548, 549, 552, 572, 589, 594, 619, 740, 768, 788, 790, 805, 806, 839, 873, 877, 882, 928, 930, 933, 943, 979, 995, 1011, 1013, 1016, 1017, 1018, 1019, 1021, 1029, 1034, 1092, 1109, 1114, 1135, 1144, 1176, 1186, 1191, 1204], "requir": [12, 13, 27, 37, 39, 42, 60, 90, 109, 123, 125, 153, 164, 168, 172, 173, 174, 177, 179, 183, 192, 200, 202, 204, 208, 212, 220, 231, 234, 245, 248, 250, 252, 257, 258, 272, 288, 297, 299, 300, 323, 380, 391, 424, 454, 456, 479, 488, 491, 499, 519, 521, 541, 550, 553, 572, 621, 634, 650, 687, 698, 704, 705, 711, 714, 719, 720, 744, 751, 780, 781, 934, 942, 943, 954, 959, 995, 997, 1004, 1023, 1028, 1036, 1049, 1058, 1059, 1077, 1086, 1087, 1091, 1144, 1150, 1163, 1164, 1169, 1171, 1172, 1178, 1190, 1192, 1194, 1204, 1207], "particip": [12, 177, 179, 201, 204, 288, 319, 537, 936, 1059, 1073, 1094, 1204], "should": [12, 37, 43, 45, 55, 57, 78, 81, 123, 126, 127, 130, 142, 143, 153, 168, 173, 174, 177, 179, 183, 187, 194, 200, 204, 208, 233, 234, 248, 254, 260, 264, 288, 323, 326, 328, 355, 360, 375, 376, 390, 415, 437, 452, 462, 466, 476, 481, 488, 494, 499, 504, 505, 507, 508, 516, 553, 597, 604, 606, 702, 705, 707, 711, 722, 766, 796, 815, 827, 829, 833, 837, 862, 881, 897, 904, 909, 941, 942, 943, 950, 969, 985, 996, 1034, 1043, 1047, 1055, 1066, 1101, 1105, 1114, 1142, 1152, 1164, 1169, 1170, 1204], "fluent": [12, 311, 370, 371, 1136, 1204], "target": [12, 17, 40, 62, 109, 173, 175, 183, 224, 233, 315, 331, 371, 460, 463, 479, 482, 483, 489, 492, 505, 609, 790, 810, 812, 817, 837, 899, 964, 989, 1013, 1014, 1023, 1025, 1032, 1036, 1043, 1045, 1058, 1143, 1150, 1163, 1171, 1194], "audienc": [12, 172, 174, 204, 209, 326, 1036, 1058, 1091, 1150, 1163, 1189, 1194], "english": [12, 29, 107, 165, 192, 211, 218, 229, 239, 242, 251, 255, 261, 263, 266, 268, 269, 284, 291, 296, 304, 305, 310, 311, 323, 332, 333, 338, 339, 344, 345, 348, 349, 367, 368, 369, 374, 483, 790, 1036, 1058, 1095, 1105, 1108, 1109, 1111, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1134, 1135, 1149, 1150, 1163], "german": [12, 14, 483, 1036, 1058, 1135, 1149, 1150, 1152, 1163], "see": [12, 13, 23, 27, 29, 31, 42, 43, 45, 46, 50, 53, 55, 57, 62, 78, 79, 86, 90, 100, 107, 123, 125, 126, 128, 130, 131, 132, 133, 134, 136, 138, 141, 142, 143, 147, 153, 157, 158, 160, 165, 168, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 187, 189, 192, 193, 194, 202, 204, 208, 209, 218, 223, 224, 228, 231, 233, 234, 239, 241, 244, 245, 247, 248, 250, 251, 257, 260, 264, 269, 272, 281, 285, 288, 290, 294, 296, 297, 298, 299, 301, 305, 306, 314, 315, 323, 327, 330, 331, 342, 349, 355, 360, 369, 372, 373, 375, 380, 383, 388, 391, 400, 401, 402, 404, 410, 427, 440, 446, 449, 459, 465, 478, 479, 484, 488, 489, 490, 491, 495, 496, 499, 500, 501, 509, 510, 511, 512, 513, 517, 520, 521, 537, 540, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 560, 561, 570, 571, 572, 580, 586, 589, 594, 596, 597, 598, 599, 604, 606, 607, 612, 613, 615, 630, 634, 647, 661, 665, 666, 668, 669, 681, 685, 687, 688, 690, 694, 697, 702, 704, 705, 706, 707, 709, 716, 722, 736, 737, 739, 742, 743, 744, 746, 748, 752, 753, 754, 755, 756, 757, 766, 768, 774, 776, 778, 779, 780, 781, 785, 788, 791, 793, 796, 798, 800, 801, 803, 805, 806, 808, 810, 812, 815, 817, 823, 825, 827, 829, 831, 833, 837, 840, 844, 845, 851, 853, 863, 864, 865, 869, 872, 875, 876, 893, 897, 898, 900, 901, 903, 906, 908, 924, 934, 941, 942, 943, 964, 967, 969, 970, 971, 975, 978, 980, 982, 985, 992, 1004, 1008, 1011, 1012, 1013, 1014, 1019, 1021, 1024, 1025, 1026, 1027, 1028, 1029, 1032, 1033, 1034, 1035, 1036, 1039, 1047, 1048, 1051, 1052, 1054, 1057, 1059, 1061, 1064, 1072, 1075, 1076, 1077, 1087, 1091, 1094, 1103, 1107, 1110, 1121, 1132, 1133, 1139, 1141, 1144, 1149, 1150, 1152, 1154, 1157, 1158, 1159, 1163, 1166, 1169, 1174, 1176, 1181, 1191, 1192, 1194, 1204], "also": [12, 13, 23, 27, 31, 57, 62, 123, 126, 128, 131, 133, 134, 136, 138, 141, 142, 153, 168, 173, 174, 176, 177, 179, 180, 182, 183, 184, 191, 193, 194, 195, 196, 199, 201, 202, 204, 205, 208, 214, 216, 234, 241, 247, 257, 258, 260, 264, 270, 276, 277, 279, 288, 290, 297, 298, 299, 305, 306, 315, 323, 327, 331, 355, 387, 478, 479, 484, 489, 496, 505, 515, 518, 520, 521, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 560, 561, 571, 596, 597, 598, 599, 604, 606, 612, 630, 647, 650, 665, 666, 668, 694, 702, 705, 706, 707, 709, 722, 733, 736, 739, 742, 743, 744, 746, 748, 752, 754, 757, 758, 766, 768, 774, 779, 780, 781, 788, 827, 837, 842, 863, 875, 881, 882, 897, 901, 903, 906, 908, 928, 934, 944, 953, 954, 967, 971, 975, 982, 992, 1013, 1014, 1021, 1026, 1028, 1030, 1032, 1033, 1034, 1036, 1039, 1047, 1051, 1057, 1059, 1063, 1066, 1076, 1077, 1080, 1091, 1103, 1107, 1110, 1121, 1141, 1142, 1150, 1154, 1157, 1158, 1159, 1163, 1166, 1169, 1191, 1193, 1199, 1200, 1204], "train": [12, 13, 14, 23, 29, 30, 32, 37, 65, 107, 151, 167, 168, 173, 177, 184, 185, 187, 195, 196, 199, 200, 201, 204, 207, 231, 241, 247, 257, 260, 290, 297, 299, 302, 314, 330, 340, 377, 387, 479, 481, 482, 483, 484, 485, 487, 488, 490, 492, 494, 495, 496, 497, 498, 499, 501, 503, 506, 515, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 550, 552, 555, 556, 557, 558, 560, 562, 563, 564, 565, 567, 568, 569, 570, 571, 594, 674, 754, 788, 791, 793, 796, 801, 806, 812, 815, 823, 944, 950, 952, 953, 954, 975, 978, 1001, 1004, 1008, 1035, 1036, 1038, 1058, 1059, 1087, 1091, 1094, 1138, 1139, 1142, 1143, 1150, 1163, 1174, 1178, 1183, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207], "sourc": [13, 23, 28, 30, 39, 60, 69, 74, 87, 111, 112, 125, 143, 153, 171, 172, 173, 174, 177, 178, 179, 183, 187, 189, 190, 192, 193, 200, 213, 218, 223, 241, 247, 255, 257, 260, 264, 269, 277, 279, 281, 284, 285, 288, 309, 316, 432, 433, 436, 471, 480, 481, 482, 484, 485, 486, 487, 489, 490, 491, 500, 551, 554, 555, 669, 702, 705, 711, 716, 722, 752, 805, 835, 838, 849, 881, 897, 898, 930, 971, 1011, 1012, 1014, 1015, 1017, 1021, 1023, 1025, 1026, 1027, 1028, 1029, 1066, 1123, 1132, 1171, 1178, 1184, 1194, 1201], "under": [13, 21, 35, 55, 134, 138, 142, 171, 172, 174, 179, 200, 211, 213, 323, 387, 501, 516, 553, 873, 874, 941, 942, 943, 944, 945, 946, 953, 954, 996, 1011, 1035, 1042, 1049, 1083, 1169], "why": [13, 24, 28, 45, 50, 70, 116, 120, 121, 124, 125, 143, 156, 168, 172, 173, 178, 184, 204, 208, 209, 211, 213, 224, 233, 253, 291, 294, 300, 301, 322, 336, 369, 372, 373, 376, 390, 402, 408, 415, 418, 436, 447, 452, 453, 458, 462, 465, 472, 477, 515, 538, 597, 612, 630, 643, 669, 672, 688, 694, 695, 711, 742, 758, 761, 775, 786, 805, 817, 833, 837, 868, 874, 877, 934, 987, 990, 1008, 1023, 1025, 1033, 1034, 1037, 1083, 1085, 1136, 1141, 1151, 1159], "appli": [13, 77, 84, 169, 174, 213, 231, 290, 296, 323, 334, 419, 454, 460, 478, 609, 709, 744, 775, 810, 837, 877, 880, 897, 941, 942, 967, 1028, 1155], "websit": [13, 23, 173, 187, 1165, 1178], "contain": [13, 17, 29, 35, 38, 60, 107, 108, 109, 111, 112, 123, 125, 153, 168, 169, 175, 178, 183, 187, 192, 194, 199, 200, 202, 204, 205, 208, 211, 213, 231, 233, 234, 241, 247, 257, 258, 260, 264, 271, 272, 275, 276, 277, 290, 297, 306, 323, 340, 354, 355, 364, 371, 372, 378, 380, 417, 436, 450, 470, 472, 478, 480, 481, 485, 499, 515, 537, 540, 542, 551, 552, 553, 559, 560, 561, 594, 595, 597, 605, 614, 631, 634, 647, 658, 662, 676, 685, 690, 691, 697, 702, 742, 754, 757, 775, 784, 785, 786, 788, 790, 793, 798, 806, 808, 810, 831, 833, 837, 857, 864, 865, 868, 877, 879, 902, 903, 904, 909, 916, 941, 942, 943, 950, 971, 979, 980, 995, 1005, 1011, 1014, 1019, 1023, 1028, 1035, 1037, 1042, 1059, 1081, 1084, 1091, 1093, 1105, 1114, 1118, 1133, 1136, 1138, 1142, 1144, 1147, 1149, 1154, 1164, 1165, 1169, 1175, 1176, 1188, 1189], "give": [13, 27, 40, 53, 61, 63, 111, 112, 130, 165, 169, 171, 172, 174, 179, 182, 193, 196, 200, 201, 208, 213, 224, 232, 264, 269, 281, 297, 299, 327, 388, 402, 403, 418, 434, 437, 445, 470, 476, 478, 481, 496, 548, 550, 566, 583, 619, 634, 680, 688, 711, 740, 837, 863, 870, 888, 890, 942, 943, 962, 963, 975, 978, 997, 999, 1004, 1005, 1011, 1014, 1023, 1032, 1035, 1058, 1075, 1087, 1136, 1140, 1141, 1164, 1169, 1171, 1189, 1192, 1194], "structur": [13, 29, 79, 90, 109, 130, 172, 187, 209, 223, 250, 251, 258, 260, 261, 263, 266, 269, 272, 275, 284, 291, 294, 301, 305, 311, 315, 316, 319, 323, 327, 331, 333, 337, 339, 345, 369, 373, 375, 377, 392, 402, 410, 415, 444, 446, 450, 451, 455, 464, 467, 468, 473, 474, 478, 479, 483, 491, 498, 516, 541, 551, 570, 619, 652, 685, 694, 696, 734, 787, 789, 790, 825, 827, 831, 835, 837, 857, 893, 924, 960, 966, 982, 987, 1005, 1075, 1077, 1118, 1124, 1161, 1163, 1170, 1177, 1189], "much": [13, 27, 35, 38, 62, 65, 81, 130, 134, 136, 141, 147, 171, 172, 173, 174, 179, 182, 187, 196, 202, 204, 208, 209, 210, 212, 234, 245, 247, 248, 250, 252, 258, 272, 273, 276, 277, 279, 291, 294, 300, 301, 322, 323, 326, 336, 337, 372, 404, 415, 426, 462, 466, 476, 491, 516, 595, 605, 611, 630, 651, 671, 694, 695, 704, 705, 709, 722, 734, 735, 736, 740, 742, 744, 754, 758, 778, 779, 781, 789, 790, 793, 808, 815, 823, 825, 831, 833, 837, 876, 877, 926, 934, 937, 940, 942, 954, 996, 1005, 1008, 1009, 1011, 1013, 1023, 1030, 1033, 1034, 1047, 1048, 1053, 1054, 1057, 1066, 1083, 1136, 1142, 1143, 1169, 1171, 1189], "like": [13, 21, 27, 28, 30, 39, 43, 45, 55, 61, 62, 63, 78, 79, 115, 121, 125, 126, 130, 131, 133, 136, 138, 141, 143, 147, 165, 171, 172, 173, 174, 176, 177, 179, 182, 183, 187, 192, 195, 196, 200, 201, 202, 204, 208, 210, 213, 223, 224, 231, 233, 234, 241, 247, 248, 250, 251, 257, 260, 273, 275, 277, 279, 285, 288, 290, 291, 294, 297, 299, 323, 326, 350, 355, 360, 372, 380, 401, 404, 408, 430, 432, 437, 442, 454, 458, 466, 469, 476, 482, 486, 488, 491, 494, 495, 496, 516, 540, 550, 551, 552, 553, 554, 566, 572, 580, 583, 589, 598, 601, 604, 608, 609, 610, 612, 633, 650, 659, 666, 668, 671, 674, 675, 684, 685, 693, 694, 697, 698, 704, 705, 722, 740, 742, 743, 753, 754, 757, 758, 764, 779, 781, 786, 788, 791, 793, 795, 798, 806, 808, 810, 815, 821, 827, 829, 831, 833, 837, 842, 850, 853, 857, 865, 868, 869, 873, 874, 876, 879, 897, 899, 902, 904, 909, 926, 934, 935, 937, 941, 942, 943, 944, 953, 954, 958, 962, 964, 967, 971, 977, 979, 980, 998, 1005, 1009, 1011, 1013, 1014, 1027, 1030, 1032, 1034, 1037, 1039, 1047, 1052, 1057, 1059, 1061, 1063, 1065, 1067, 1071, 1075, 1077, 1080, 1081, 1084, 1087, 1090, 1093, 1101, 1104, 1114, 1115, 1118, 1124, 1125, 1126, 1127, 1128, 1130, 1135, 1138, 1141, 1143, 1144, 1152, 1154, 1155, 1160, 1169, 1170, 1171, 1176, 1178, 1189, 1194], "topic": [13, 16, 27, 28, 29, 61, 63, 70, 79, 91, 98, 107, 113, 114, 125, 147, 165, 169, 174, 178, 179, 192, 196, 209, 212, 213, 214, 216, 224, 229, 239, 242, 248, 258, 260, 261, 276, 277, 281, 299, 301, 305, 327, 355, 356, 357, 358, 360, 368, 369, 374, 375, 380, 382, 383, 386, 388, 572, 613, 615, 674, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 788, 837, 839, 849, 860, 867, 869, 871, 878, 883, 887, 889, 891, 892, 917, 927, 940, 942, 945, 946, 948, 964, 1014, 1023, 1024, 1028, 1036, 1041, 1058, 1059, 1063, 1091, 1093, 1094, 1095, 1105, 1108, 1116, 1119, 1120, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1139, 1143, 1149, 1163, 1166, 1169, 1173, 1191, 1192, 1199], "other": [13, 27, 29, 33, 39, 40, 51, 53, 61, 62, 63, 79, 81, 83, 111, 112, 123, 142, 150, 153, 160, 172, 173, 174, 175, 176, 179, 183, 187, 196, 200, 204, 208, 209, 211, 212, 213, 224, 232, 241, 247, 248, 257, 260, 264, 285, 306, 313, 314, 323, 326, 330, 350, 355, 372, 376, 380, 400, 406, 415, 424, 442, 445, 456, 472, 476, 479, 481, 487, 488, 491, 492, 493, 499, 580, 595, 597, 598, 604, 606, 607, 610, 611, 612, 622, 650, 672, 695, 704, 705, 736, 740, 752, 754, 756, 758, 769, 770, 775, 788, 790, 808, 827, 829, 863, 870, 873, 874, 890, 895, 897, 899, 919, 936, 941, 942, 943, 946, 950, 953, 962, 963, 969, 970, 982, 987, 990, 996, 1005, 1009, 1011, 1013, 1023, 1030, 1032, 1034, 1043, 1046, 1047, 1048, 1051, 1054, 1057, 1061, 1063, 1064, 1065, 1066, 1072, 1073, 1077, 1079, 1081, 1083, 1084, 1098, 1114, 1141, 1145, 1148, 1150, 1152, 1169, 1181, 1189, 1191, 1192, 1194, 1204], "exampl": [13, 17, 24, 29, 39, 40, 79, 88, 123, 125, 126, 143, 165, 166, 168, 171, 172, 173, 174, 179, 182, 183, 187, 191, 192, 193, 196, 200, 204, 208, 210, 212, 223, 231, 233, 237, 241, 244, 247, 248, 250, 256, 257, 258, 261, 262, 263, 265, 269, 272, 281, 288, 290, 291, 294, 298, 300, 301, 305, 306, 314, 316, 319, 322, 323, 326, 330, 336, 349, 357, 360, 369, 377, 380, 393, 399, 400, 401, 409, 415, 467, 479, 490, 491, 492, 499, 503, 505, 515, 516, 518, 520, 540, 541, 553, 572, 608, 610, 612, 621, 630, 637, 675, 684, 702, 711, 716, 731, 732, 736, 737, 741, 744, 748, 754, 758, 788, 790, 796, 808, 815, 837, 864, 865, 869, 874, 894, 897, 907, 919, 926, 934, 941, 942, 943, 944, 953, 957, 964, 967, 968, 969, 970, 971, 979, 986, 1005, 1008, 1010, 1011, 1012, 1013, 1014, 1015, 1021, 1027, 1028, 1029, 1030, 1033, 1034, 1035, 1039, 1046, 1053, 1056, 1058, 1059, 1060, 1062, 1070, 1075, 1084, 1091, 1093, 1109, 1114, 1132, 1133, 1134, 1142, 1143, 1149, 1151, 1157, 1158, 1163, 1168, 1176, 1178, 1191, 1192], "here": [13, 14, 62, 69, 74, 75, 78, 79, 81, 82, 86, 107, 115, 121, 123, 130, 147, 153, 158, 160, 169, 171, 172, 174, 175, 177, 178, 179, 182, 183, 187, 192, 194, 200, 201, 202, 204, 208, 210, 213, 223, 224, 228, 231, 232, 233, 234, 239, 242, 250, 251, 255, 258, 260, 264, 277, 279, 281, 285, 288, 290, 294, 297, 299, 306, 309, 324, 339, 342, 353, 355, 360, 366, 369, 372, 373, 375, 388, 391, 456, 458, 465, 472, 487, 488, 494, 496, 516, 521, 532, 535, 538, 540, 551, 553, 555, 570, 572, 580, 594, 597, 598, 601, 607, 613, 615, 619, 631, 659, 665, 685, 687, 688, 694, 705, 711, 716, 722, 732, 736, 741, 744, 746, 752, 754, 757, 766, 780, 791, 805, 810, 812, 815, 827, 833, 837, 863, 897, 934, 936, 941, 942, 943, 950, 954, 961, 967, 971, 977, 982, 995, 1004, 1008, 1009, 1020, 1023, 1027, 1029, 1032, 1033, 1034, 1035, 1047, 1050, 1054, 1059, 1062, 1063, 1070, 1076, 1086, 1087, 1094, 1115, 1118, 1135, 1141, 1142, 1143, 1144, 1149, 1169, 1171, 1174, 1178, 1192, 1194], "discuss": [13, 42, 50, 125, 204, 208, 209, 211, 213, 248, 258, 294, 298, 299, 322, 337, 369, 373, 376, 377, 380, 382, 383, 387, 489, 577, 580, 583, 586, 589, 592, 762, 768, 817, 850, 897, 1004, 1008, 1037, 1176, 1178, 1181, 1192], "over": [13, 33, 34, 35, 38, 42, 60, 90, 98, 130, 131, 143, 165, 168, 169, 171, 172, 174, 176, 177, 182, 192, 196, 204, 208, 210, 211, 212, 223, 228, 231, 233, 234, 241, 246, 247, 248, 250, 253, 256, 284, 288, 291, 294, 300, 301, 317, 322, 326, 337, 354, 369, 372, 415, 426, 427, 442, 456, 476, 486, 494, 504, 518, 595, 601, 629, 647, 659, 687, 694, 742, 743, 761, 784, 837, 934, 938, 942, 944, 950, 971, 985, 993, 996, 1011, 1023, 1025, 1030, 1033, 1070, 1083, 1087], "lwn": [13, 39, 189, 817, 829, 847, 1184], "attribut": [13, 121, 169, 172, 174, 189, 208, 222, 228, 232, 241, 244, 247, 252, 254, 259, 260, 264, 267, 270, 274, 275, 282, 285, 289, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 362, 364, 373, 380, 454, 470, 472, 484, 499, 766, 788, 869, 875, 896, 900, 967, 979, 980, 997, 998, 1005, 1009, 1033, 1034, 1047, 1049, 1060, 1086, 1141, 1205], "sharealik": 13, "cc": [13, 23, 32, 150, 190, 198, 199, 200, 277, 479, 501, 550, 552, 553, 573, 576, 579, 580, 582, 583, 585, 586, 588, 589, 591, 614, 752, 753, 758, 815, 1003, 1004, 1007, 1008, 1013, 1175, 1176, 1178, 1180, 1181], "BY": [13, 23, 35, 722], "sa": [13, 23, 32, 995], "don": [13, 24, 58, 60, 79, 85, 125, 130, 138, 160, 165, 171, 172, 173, 174, 177, 178, 179, 187, 202, 204, 208, 212, 223, 224, 234, 241, 245, 247, 248, 250, 257, 260, 312, 324, 353, 377, 401, 442, 454, 457, 458, 460, 466, 472, 476, 478, 495, 552, 580, 586, 595, 596, 611, 612, 619, 629, 665, 672, 702, 705, 707, 722, 736, 737, 749, 758, 763, 768, 805, 810, 829, 837, 842, 872, 897, 899, 904, 910, 921, 934, 937, 941, 942, 946, 954, 958, 959, 960, 961, 980, 981, 982, 987, 1008, 1009, 1014, 1035, 1043, 1045, 1059, 1062, 1066, 1091, 1145, 1151, 1158, 1164, 1175, 1181], "t": [13, 24, 43, 50, 58, 60, 62, 79, 85, 125, 130, 138, 142, 160, 165, 169, 171, 173, 174, 177, 178, 179, 182, 183, 187, 189, 191, 202, 204, 205, 208, 211, 212, 215, 220, 222, 223, 224, 228, 234, 237, 241, 244, 245, 247, 248, 250, 252, 254, 257, 258, 260, 264, 267, 270, 273, 279, 282, 285, 290, 291, 292, 294, 296, 302, 306, 312, 324, 327, 328, 334, 340, 346, 350, 353, 355, 361, 363, 364, 366, 377, 389, 391, 392, 394, 400, 401, 411, 426, 432, 434, 437, 442, 452, 454, 456, 457, 458, 460, 466, 472, 476, 478, 481, 495, 548, 550, 552, 572, 580, 586, 595, 596, 598, 605, 611, 612, 619, 621, 622, 629, 633, 665, 672, 694, 695, 697, 702, 704, 705, 707, 711, 712, 713, 714, 722, 725, 736, 737, 742, 748, 749, 752, 753, 754, 756, 758, 761, 763, 766, 768, 796, 805, 810, 817, 829, 831, 837, 842, 854, 857, 863, 864, 865, 872, 874, 897, 898, 899, 903, 904, 910, 916, 919, 921, 934, 937, 941, 942, 943, 946, 950, 954, 958, 959, 960, 961, 968, 980, 981, 982, 987, 997, 1004, 1005, 1008, 1009, 1011, 1012, 1014, 1023, 1026, 1029, 1035, 1036, 1043, 1045, 1047, 1059, 1062, 1065, 1066, 1067, 1073, 1079, 1083, 1085, 1086, 1087, 1091, 1093, 1140, 1145, 1149, 1151, 1158, 1164, 1175, 1176, 1181, 1191], "want": [13, 17, 27, 29, 30, 45, 50, 60, 62, 79, 85, 126, 131, 136, 138, 142, 150, 153, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 187, 192, 195, 200, 204, 208, 211, 212, 223, 224, 231, 234, 241, 248, 252, 254, 288, 290, 291, 294, 316, 355, 366, 380, 402, 414, 430, 458, 470, 472, 476, 480, 481, 496, 499, 520, 539, 548, 553, 572, 583, 596, 601, 604, 612, 637, 672, 688, 702, 707, 722, 743, 748, 754, 756, 757, 758, 776, 788, 793, 812, 837, 842, 872, 874, 876, 879, 894, 897, 898, 916, 934, 937, 941, 942, 943, 954, 958, 959, 960, 961, 966, 980, 995, 997, 998, 999, 1008, 1011, 1013, 1023, 1025, 1027, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1038, 1042, 1049, 1054, 1058, 1065, 1074, 1077, 1087, 1092, 1094, 1130, 1135, 1145, 1149, 1150, 1152, 1154, 1158, 1169, 1171, 1172, 1176, 1189, 1194], "anybodi": [13, 172, 177, 204, 223, 224, 459, 969, 980, 1181], "monei": [13, 173, 176, 179, 247, 876, 1093], "my": [13, 17, 24, 28, 32, 39, 61, 62, 63, 98, 123, 147, 150, 153, 160, 169, 171, 172, 173, 175, 176, 178, 179, 182, 183, 187, 200, 204, 208, 211, 224, 231, 258, 272, 274, 288, 298, 340, 366, 369, 374, 387, 466, 477, 499, 553, 589, 607, 618, 672, 754, 775, 788, 821, 833, 837, 839, 865, 872, 887, 889, 894, 900, 921, 934, 941, 943, 945, 946, 953, 954, 959, 960, 961, 970, 1005, 1035, 1038, 1047, 1066, 1090, 1130, 1152, 1157, 1158, 1169, 1189], "without": [13, 120, 171, 172, 173, 174, 182, 183, 208, 252, 316, 337, 402, 426, 433, 459, 462, 466, 471, 476, 487, 499, 504, 516, 583, 589, 595, 601, 665, 672, 694, 695, 696, 722, 734, 740, 742, 743, 748, 754, 760, 761, 768, 787, 789, 790, 808, 821, 837, 876, 877, 919, 943, 945, 954, 980, 999, 1004, 1005, 1009, 1032, 1033, 1036, 1037, 1039, 1046, 1047, 1048, 1050, 1052, 1054, 1061, 1066, 1083, 1169, 1171, 1189, 1194], "modif": [13, 55, 107, 143, 187, 250, 402, 404, 410, 415, 446, 476, 499, 504, 551, 609, 769, 788, 810, 837, 882, 898, 919, 1046, 1066, 1083, 1145, 1181], "back": [13, 29, 32, 62, 123, 156, 173, 174, 177, 183, 208, 210, 212, 237, 245, 250, 261, 263, 281, 296, 316, 319, 452, 467, 518, 543, 572, 592, 612, 626, 631, 669, 702, 716, 751, 758, 770, 790, 805, 810, 819, 837, 839, 868, 900, 934, 941, 954, 995, 1005, 1011, 1030, 1037, 1050, 1054, 1066, 1095, 1129, 1130, 1131, 1134, 1160], "m": [13, 23, 32, 38, 60, 65, 152, 153, 158, 173, 174, 175, 177, 179, 182, 187, 200, 205, 210, 215, 224, 228, 237, 238, 239, 241, 245, 260, 264, 270, 272, 277, 289, 324, 334, 350, 365, 369, 370, 371, 376, 390, 478, 501, 547, 550, 551, 552, 553, 589, 614, 722, 744, 753, 805, 806, 812, 815, 847, 874, 876, 897, 941, 954, 999, 1052, 1090, 1091, 1098, 1123, 1124, 1141, 1151, 1164, 1169, 1171, 1176], "lawyer": 13, "understand": [13, 125, 171, 172, 174, 178, 179, 182, 183, 187, 196, 204, 208, 233, 260, 291, 294, 297, 299, 300, 301, 316, 319, 322, 326, 371, 380, 408, 456, 465, 472, 504, 540, 681, 702, 711, 732, 743, 837, 876, 882, 934, 1054, 1093, 1136, 1141, 1142, 1159, 1189, 1190, 1191], "permit": [13, 174, 179, 224, 288, 366, 577, 598, 605, 941, 952, 996, 1060, 1161], "exactli": [13, 79, 172, 174, 196, 202, 231, 301, 360, 394, 434, 540, 551, 629, 705, 742, 837, 943, 968, 969, 1009, 1027, 1144, 1163], "gnu": [13, 183, 188, 224, 233, 366, 372, 388, 473, 474, 479, 481, 604, 753, 790, 817, 838, 897, 1012, 1013, 1023, 1025, 1027, 1187, 1191], "free": [13, 32, 178, 183, 199, 224, 366, 449, 463, 501, 578, 598, 604, 606, 666, 685, 686, 688, 689, 705, 732, 751, 752, 753, 773, 801, 808, 839, 959, 960, 961, 973, 996, 1009, 1011, 1142, 1152, 1161, 1186], "document": [13, 24, 40, 42, 79, 87, 125, 130, 153, 169, 172, 174, 176, 183, 184, 190, 193, 200, 212, 224, 230, 231, 239, 241, 246, 247, 248, 250, 257, 260, 264, 277, 279, 281, 290, 297, 299, 302, 323, 325, 343, 350, 355, 360, 369, 376, 377, 452, 453, 456, 463, 479, 480, 481, 482, 484, 487, 488, 489, 490, 491, 492, 504, 551, 570, 611, 615, 629, 630, 674, 685, 687, 697, 702, 709, 711, 716, 732, 733, 739, 741, 744, 746, 753, 754, 755, 757, 764, 765, 766, 768, 770, 784, 788, 808, 810, 833, 837, 838, 845, 849, 863, 869, 876, 883, 887, 889, 891, 921, 922, 923, 925, 926, 928, 929, 937, 941, 942, 943, 977, 984, 992, 1025, 1027, 1028, 1032, 1034, 1035, 1039, 1043, 1045, 1047, 1053, 1070, 1080, 1081, 1132, 1144, 1147, 1154, 1155, 1158, 1160, 1167, 1170, 1177, 1178, 1197, 1198], "ago": [13, 174, 178, 234, 862], "wa": [13, 37, 53, 79, 123, 131, 138, 143, 153, 168, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 187, 189, 191, 192, 193, 195, 199, 200, 205, 207, 208, 211, 215, 221, 222, 228, 231, 234, 237, 238, 248, 250, 252, 254, 261, 264, 273, 285, 292, 298, 301, 306, 324, 336, 340, 369, 374, 387, 390, 437, 462, 482, 586, 594, 595, 604, 605, 650, 679, 686, 687, 688, 689, 690, 691, 698, 702, 705, 760, 788, 790, 812, 819, 827, 833, 872, 894, 924, 926, 934, 943, 970, 990, 1009, 1034, 1066, 1141, 1155, 1158, 1164, 1169, 1171, 1174, 1184, 1186, 1187, 1188, 1189, 1201, 1207], "debian": [13, 79, 160, 161, 162, 179, 183, 187, 189, 201, 212, 224, 309, 366, 387, 566, 790, 837, 936, 1013, 1025, 1171, 1176], "resolut": [13, 262, 264, 459, 707, 769, 815, 847, 943], "us": [13, 14, 17, 21, 24, 39, 40, 45, 48, 54, 60, 61, 62, 63, 65, 69, 71, 72, 75, 78, 79, 82, 83, 85, 86, 87, 89, 90, 98, 107, 108, 125, 126, 127, 129, 130, 131, 132, 133, 136, 138, 141, 142, 143, 147, 164, 165, 167, 168, 169, 171, 172, 174, 175, 178, 182, 184, 187, 189, 192, 196, 198, 199, 201, 204, 208, 210, 211, 223, 224, 229, 232, 239, 241, 242, 244, 245, 248, 249, 251, 255, 257, 258, 260, 264, 267, 269, 270, 272, 277, 279, 281, 285, 288, 290, 291, 292, 294, 296, 297, 298, 299, 300, 301, 302, 305, 306, 311, 314, 319, 322, 323, 326, 327, 328, 330, 334, 336, 337, 340, 346, 354, 355, 360, 366, 369, 372, 374, 375, 378, 387, 398, 401, 402, 405, 406, 407, 410, 412, 421, 422, 424, 426, 427, 431, 432, 433, 436, 437, 438, 440, 444, 445, 448, 451, 455, 459, 460, 464, 466, 467, 468, 472, 473, 474, 476, 478, 479, 481, 486, 487, 488, 489, 492, 494, 495, 497, 498, 501, 504, 505, 506, 508, 515, 518, 519, 520, 538, 540, 541, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 566, 570, 571, 572, 573, 576, 579, 582, 585, 588, 591, 596, 598, 599, 603, 604, 607, 609, 611, 612, 613, 615, 616, 624, 625, 626, 627, 628, 630, 631, 632, 633, 634, 635, 638, 641, 642, 643, 647, 650, 651, 652, 653, 654, 655, 659, 665, 668, 669, 671, 672, 675, 676, 678, 679, 681, 683, 684, 685, 686, 687, 688, 689, 691, 693, 694, 696, 697, 698, 699, 701, 703, 705, 709, 711, 716, 722, 724, 731, 732, 734, 736, 737, 739, 741, 744, 749, 753, 754, 755, 756, 758, 760, 764, 766, 769, 774, 775, 784, 787, 788, 789, 790, 795, 796, 798, 800, 803, 805, 806, 808, 810, 812, 815, 817, 821, 823, 825, 829, 831, 833, 837, 838, 840, 842, 850, 851, 853, 856, 857, 863, 864, 865, 868, 872, 873, 876, 877, 879, 881, 883, 889, 894, 897, 899, 902, 903, 904, 906, 916, 922, 924, 928, 933, 934, 937, 938, 940, 944, 945, 946, 953, 954, 957, 963, 964, 967, 968, 969, 971, 975, 977, 978, 980, 982, 983, 984, 986, 987, 990, 992, 993, 996, 997, 1000, 1003, 1004, 1005, 1007, 1008, 1009, 1011, 1014, 1021, 1022, 1025, 1026, 1027, 1028, 1029, 1033, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1046, 1047, 1052, 1054, 1056, 1058, 1059, 1060, 1062, 1066, 1068, 1070, 1074, 1075, 1076, 1077, 1080, 1083, 1085, 1087, 1091, 1093, 1096, 1097, 1098, 1101, 1102, 1103, 1107, 1109, 1112, 1113, 1114, 1115, 1119, 1121, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1135, 1136, 1138, 1139, 1141, 1142, 1143, 1144, 1145, 1148, 1149, 1152, 1154, 1155, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1169, 1172, 1175, 1176, 1178, 1180, 1181, 1189, 1191, 1192, 1194], "gfdl": 13, "becaus": [13, 17, 38, 60, 81, 123, 153, 156, 166, 171, 172, 174, 183, 187, 196, 204, 208, 210, 224, 234, 241, 247, 257, 260, 394, 415, 454, 463, 466, 469, 476, 478, 487, 496, 499, 516, 550, 553, 596, 597, 604, 607, 647, 669, 688, 744, 752, 755, 806, 817, 835, 837, 876, 916, 934, 941, 942, 943, 952, 963, 964, 967, 970, 984, 990, 1005, 1008, 1009, 1032, 1035, 1061, 1092, 1149, 1164, 1171, 1176, 1189], "too": [13, 27, 53, 56, 62, 81, 138, 172, 174, 179, 188, 201, 204, 220, 231, 233, 250, 260, 264, 267, 276, 277, 279, 290, 292, 300, 301, 306, 322, 324, 336, 337, 411, 456, 466, 476, 490, 496, 595, 609, 716, 718, 722, 734, 735, 736, 742, 748, 754, 778, 788, 789, 790, 835, 837, 842, 869, 934, 943, 944, 950, 967, 980, 997, 1013, 1032, 1033, 1034, 1037, 1083, 1087, 1165, 1189], "restrict": [13, 173, 202, 212, 454, 459, 488, 496, 503, 538, 619, 788, 835, 864, 865, 953, 1149], "articl": [13, 187, 189, 817, 829, 847, 941, 943, 1023], "describ": [13, 108, 125, 127, 129, 169, 171, 172, 173, 174, 177, 179, 182, 183, 198, 224, 260, 264, 272, 298, 306, 309, 353, 366, 499, 508, 554, 573, 576, 579, 582, 585, 588, 591, 744, 758, 837, 847, 870, 897, 943, 948, 1000, 1003, 1007, 1012, 1020, 1026, 1027, 1056, 1141, 1175, 1178, 1180], "pretti": [13, 173, 174, 196, 210, 214, 233, 250, 260, 466, 481, 629, 686, 761, 1030, 1161], "same": [13, 17, 24, 28, 31, 39, 40, 43, 44, 130, 143, 172, 173, 174, 176, 178, 179, 182, 183, 187, 192, 193, 194, 196, 204, 205, 210, 213, 224, 232, 236, 241, 247, 250, 257, 258, 260, 263, 264, 282, 291, 294, 300, 301, 306, 322, 323, 324, 334, 350, 356, 357, 366, 373, 398, 402, 413, 414, 415, 432, 433, 437, 442, 445, 454, 456, 460, 462, 466, 467, 470, 471, 481, 499, 503, 506, 507, 518, 537, 538, 546, 550, 570, 572, 579, 581, 595, 598, 604, 607, 610, 629, 632, 638, 647, 650, 651, 652, 676, 687, 695, 700, 707, 709, 711, 714, 716, 740, 741, 744, 756, 757, 758, 764, 805, 806, 810, 815, 817, 819, 827, 829, 835, 837, 853, 869, 875, 881, 897, 898, 900, 924, 934, 941, 942, 943, 944, 953, 954, 960, 966, 980, 981, 982, 995, 999, 1005, 1009, 1011, 1027, 1033, 1034, 1037, 1042, 1043, 1046, 1048, 1052, 1054, 1070, 1072, 1075, 1080, 1082, 1083, 1084, 1118, 1126, 1128, 1142, 1144, 1145, 1148, 1149, 1152, 1154, 1157, 1158, 1159, 1169, 1171, 1176], "issu": [13, 153, 172, 175, 182, 183, 234, 299, 300, 301, 322, 337, 340, 389, 402, 460, 973, 999, 1008, 1025, 1043], "how": [13, 23, 24, 37, 42, 45, 50, 71, 72, 76, 78, 79, 82, 83, 85, 86, 87, 88, 89, 92, 105, 123, 125, 130, 137, 138, 147, 158, 160, 168, 169, 172, 175, 177, 178, 179, 183, 184, 187, 192, 194, 196, 200, 201, 207, 208, 209, 210, 211, 212, 213, 224, 229, 231, 232, 233, 239, 241, 242, 244, 245, 247, 248, 250, 253, 255, 258, 269, 272, 276, 277, 281, 288, 291, 294, 296, 297, 298, 299, 300, 301, 305, 311, 314, 316, 322, 323, 326, 327, 330, 355, 371, 372, 376, 387, 402, 408, 433, 440, 442, 443, 454, 456, 458, 460, 465, 469, 476, 478, 480, 487, 501, 507, 537, 540, 548, 551, 572, 589, 596, 604, 605, 608, 619, 629, 668, 672, 678, 688, 694, 716, 753, 756, 757, 758, 768, 772, 784, 785, 791, 798, 800, 801, 815, 827, 837, 842, 853, 864, 865, 870, 877, 897, 916, 924, 930, 934, 941, 942, 943, 951, 959, 960, 961, 964, 967, 970, 971, 977, 990, 993, 996, 997, 999, 1004, 1008, 1009, 1021, 1023, 1025, 1027, 1040, 1041, 1058, 1059, 1062, 1076, 1079, 1088, 1094, 1132, 1133, 1136, 1141, 1142, 1155, 1157, 1158, 1161, 1169, 1172, 1178, 1181, 1191, 1192, 1194], "do": [13, 27, 32, 40, 43, 45, 50, 58, 61, 62, 63, 65, 79, 84, 86, 90, 92, 98, 125, 126, 133, 138, 142, 143, 151, 153, 171, 172, 173, 174, 175, 176, 177, 178, 179, 183, 187, 188, 189, 191, 192, 193, 196, 200, 201, 204, 208, 209, 212, 222, 223, 224, 232, 234, 241, 244, 248, 250, 252, 254, 255, 258, 260, 263, 264, 270, 272, 274, 277, 279, 288, 291, 294, 323, 324, 355, 357, 364, 366, 369, 371, 405, 424, 426, 427, 429, 430, 431, 436, 437, 438, 444, 445, 448, 451, 454, 455, 462, 464, 468, 473, 474, 476, 478, 480, 496, 501, 504, 507, 515, 516, 537, 539, 551, 572, 580, 586, 589, 595, 597, 609, 613, 615, 616, 619, 656, 669, 672, 686, 687, 688, 696, 702, 707, 711, 733, 734, 740, 744, 746, 752, 753, 754, 756, 757, 758, 786, 787, 789, 790, 810, 814, 825, 829, 833, 835, 837, 862, 866, 867, 870, 874, 877, 881, 882, 891, 893, 898, 902, 904, 933, 934, 937, 941, 942, 943, 945, 946, 952, 954, 958, 959, 960, 961, 962, 963, 969, 980, 981, 983, 987, 993, 995, 996, 999, 1001, 1004, 1009, 1027, 1028, 1030, 1032, 1034, 1035, 1036, 1039, 1048, 1058, 1059, 1060, 1063, 1066, 1070, 1076, 1077, 1091, 1093, 1112, 1136, 1142, 1143, 1150, 1151, 1158, 1161, 1169, 1176, 1178, 1194], "choos": [13, 27, 171, 172, 183, 196, 204, 589, 837, 934, 941, 943, 1026, 1059, 1066, 1079, 1142, 1149, 1171], "altogeth": [13, 182, 231, 300, 301, 322, 705, 845, 1037], "have": [13, 27, 28, 30, 37, 43, 50, 70, 81, 83, 85, 103, 111, 112, 125, 126, 130, 134, 138, 141, 143, 150, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 187, 192, 193, 194, 196, 200, 201, 202, 204, 208, 211, 212, 223, 224, 229, 231, 232, 233, 234, 241, 244, 245, 247, 248, 255, 260, 264, 267, 277, 279, 281, 288, 290, 291, 294, 297, 298, 300, 301, 305, 306, 326, 327, 355, 360, 369, 372, 374, 401, 402, 406, 415, 434, 436, 456, 458, 461, 462, 466, 470, 472, 477, 479, 482, 486, 487, 491, 494, 495, 496, 500, 503, 504, 516, 537, 540, 550, 553, 562, 589, 595, 599, 603, 605, 607, 612, 613, 615, 616, 647, 653, 669, 676, 681, 687, 688, 689, 693, 694, 698, 706, 709, 711, 722, 731, 736, 740, 741, 743, 746, 749, 753, 754, 757, 758, 785, 801, 805, 806, 808, 810, 815, 817, 829, 837, 840, 845, 853, 862, 870, 874, 876, 879, 880, 882, 889, 904, 924, 934, 941, 942, 943, 944, 946, 950, 952, 954, 958, 959, 961, 966, 971, 973, 979, 987, 1004, 1008, 1009, 1012, 1013, 1021, 1025, 1026, 1029, 1030, 1032, 1035, 1043, 1047, 1048, 1052, 1062, 1065, 1066, 1070, 1077, 1084, 1096, 1100, 1110, 1115, 1131, 1136, 1141, 1143, 1144, 1145, 1149, 1152, 1154, 1158, 1161, 1164, 1169, 1171, 1176, 1178, 1191, 1192], "idea": [13, 14, 137, 171, 172, 232, 245, 254, 264, 297, 299, 300, 301, 316, 319, 326, 460, 684, 706, 744, 752, 772, 837, 934, 969, 979, 999, 1023, 1034, 1058, 1066, 1194], "choosealicens": 13, "appear": [13, 123, 172, 173, 174, 175, 176, 177, 178, 179, 182, 192, 196, 200, 202, 204, 205, 224, 233, 260, 300, 301, 322, 391, 434, 437, 481, 482, 499, 570, 611, 754, 775, 833, 837, 845, 861, 941, 942, 943, 954, 1012, 1034, 1107, 1108, 1118, 1127, 1153, 1158], "help": [13, 29, 127, 171, 172, 174, 175, 183, 187, 205, 224, 228, 233, 241, 247, 252, 254, 257, 260, 264, 267, 270, 272, 285, 292, 297, 301, 306, 324, 328, 334, 340, 346, 350, 360, 364, 369, 387, 437, 458, 460, 462, 463, 472, 481, 598, 601, 607, 694, 707, 742, 752, 754, 808, 876, 936, 941, 1026, 1058, 1061, 1087, 1091, 1161, 1169, 1176, 1191], "happen": [13, 27, 111, 112, 123, 126, 142, 171, 172, 174, 187, 204, 208, 212, 231, 250, 314, 330, 374, 442, 454, 458, 462, 476, 481, 601, 618, 690, 722, 736, 739, 761, 800, 833, 837, 854, 869, 870, 874, 943, 967, 969, 979, 984, 1008, 1046, 1047, 1086, 1101, 1104, 1118, 1135, 1141, 1169, 1178, 1191], "clone": [13, 60, 78, 110, 125, 150, 164, 174, 175, 178, 199, 201, 204, 221, 233, 234, 250, 277, 279, 309, 316, 319, 369, 374, 537, 540, 614, 810, 837, 838, 941, 1025, 1026], "jfasch": [13, 40, 43, 60, 107, 123, 125, 143, 147, 150, 153, 168, 169, 175, 176, 177, 182, 183, 187, 191, 200, 201, 202, 205, 208, 221, 231, 241, 244, 247, 248, 250, 252, 257, 260, 267, 270, 272, 277, 279, 285, 288, 290, 291, 292, 297, 298, 299, 301, 302, 305, 306, 311, 315, 316, 319, 323, 327, 328, 331, 333, 334, 337, 339, 340, 345, 346, 349, 368, 369, 374, 377, 479, 481, 482, 484, 485, 487, 488, 490, 492, 501, 537, 551, 552, 553, 554, 572, 614, 674, 752, 753, 754, 788, 810, 812, 837, 863, 864, 865, 868, 869, 872, 874, 879, 882, 893, 898, 899, 900, 916, 919, 921, 922, 926, 928, 930, 941, 944, 952, 953, 954, 959, 965, 967, 968, 969, 990, 995, 1011, 1012, 1013, 1014, 1023, 1025, 1026, 1027, 1028, 1029, 1032, 1034, 1035, 1038, 1062, 1081, 1087, 1091, 1114, 1157, 1158, 1169, 1171], "home": [13, 32, 40, 42, 43, 50, 60, 101, 123, 150, 153, 168, 169, 173, 175, 176, 177, 179, 183, 187, 200, 201, 202, 205, 224, 231, 241, 244, 245, 247, 252, 257, 260, 267, 270, 272, 277, 279, 285, 288, 290, 292, 302, 306, 328, 334, 340, 346, 353, 377, 472, 479, 481, 482, 484, 485, 487, 488, 490, 492, 501, 551, 552, 553, 554, 614, 674, 707, 752, 753, 754, 788, 790, 812, 837, 863, 864, 865, 867, 872, 874, 876, 877, 879, 882, 887, 889, 891, 893, 894, 897, 898, 900, 901, 902, 903, 904, 908, 911, 914, 917, 919, 921, 922, 928, 933, 944, 945, 950, 952, 953, 990, 992, 1008, 1011, 1012, 1013, 1023, 1025, 1026, 1027, 1028, 1029, 1032, 1035, 1038, 1087, 1114, 1123, 1157, 1158, 1169, 1171], "built": [13, 28, 125, 132, 171, 172, 174, 175, 178, 183, 200, 205, 207, 208, 216, 217, 229, 232, 241, 247, 252, 255, 257, 258, 260, 264, 272, 281, 285, 288, 290, 305, 314, 323, 327, 330, 334, 340, 350, 404, 408, 432, 453, 479, 487, 490, 491, 515, 537, 650, 707, 763, 768, 806, 810, 812, 837, 941, 943, 954, 1012, 1013, 1014, 1019, 1027, 1032, 1035, 1039, 1055, 1070, 1086, 1136, 1142, 1143, 1160, 1169, 1171, 1172, 1187, 1191, 1199], "wonder": [13, 805, 823, 850, 1037], "gener": [13, 23, 24, 29, 39, 69, 70, 79, 81, 82, 110, 111, 112, 153, 165, 169, 172, 176, 179, 184, 191, 194, 204, 208, 209, 211, 212, 213, 214, 223, 231, 239, 240, 241, 245, 246, 248, 249, 250, 251, 253, 255, 256, 257, 261, 262, 263, 264, 269, 270, 284, 286, 290, 299, 304, 306, 310, 311, 313, 325, 327, 332, 333, 335, 337, 338, 339, 341, 344, 345, 346, 348, 349, 350, 372, 375, 392, 402, 404, 410, 415, 426, 436, 454, 460, 463, 465, 466, 469, 479, 480, 481, 485, 540, 542, 548, 551, 559, 594, 601, 605, 621, 629, 630, 633, 684, 702, 705, 732, 746, 752, 758, 766, 817, 819, 821, 840, 870, 881, 897, 934, 936, 941, 954, 979, 1008, 1009, 1011, 1014, 1025, 1026, 1032, 1033, 1034, 1036, 1054, 1060, 1062, 1063, 1064, 1070, 1074, 1092, 1093, 1094, 1095, 1108, 1134, 1136, 1143, 1145, 1146, 1148, 1149, 1158, 1164, 1169, 1192, 1193, 1200], "content": [13, 27, 39, 49, 50, 57, 62, 123, 147, 204, 211, 212, 213, 224, 232, 250, 252, 260, 282, 288, 328, 361, 436, 439, 441, 554, 597, 647, 655, 743, 839, 842, 863, 864, 865, 879, 882, 884, 885, 919, 922, 930, 942, 946, 969, 1011, 1066, 1085, 1092, 1105, 1135, 1155, 1171, 1204], "which": [13, 14, 17, 28, 57, 65, 69, 79, 81, 84, 90, 111, 112, 115, 116, 120, 121, 124, 126, 142, 153, 157, 164, 165, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 183, 187, 192, 194, 200, 201, 202, 204, 208, 210, 212, 224, 231, 233, 241, 245, 247, 248, 260, 263, 264, 272, 273, 290, 291, 294, 296, 301, 306, 319, 323, 336, 387, 405, 410, 411, 417, 421, 442, 454, 466, 476, 477, 478, 479, 481, 484, 486, 487, 494, 496, 507, 537, 538, 539, 540, 543, 545, 546, 547, 548, 549, 551, 566, 577, 583, 596, 603, 605, 609, 611, 619, 666, 676, 680, 681, 687, 688, 690, 699, 705, 706, 744, 748, 749, 757, 758, 770, 778, 786, 788, 790, 806, 815, 837, 839, 857, 863, 870, 874, 876, 879, 880, 881, 882, 888, 890, 893, 897, 910, 921, 924, 933, 934, 937, 941, 942, 943, 954, 963, 964, 967, 969, 971, 972, 974, 979, 984, 991, 993, 995, 996, 1004, 1009, 1012, 1017, 1025, 1029, 1032, 1034, 1036, 1046, 1047, 1051, 1059, 1063, 1066, 1075, 1107, 1126, 1128, 1131, 1133, 1149, 1151, 1152, 1154, 1157, 1171, 1176, 1189], "differ": [13, 35, 38, 61, 63, 70, 77, 82, 86, 89, 159, 171, 172, 177, 179, 183, 193, 200, 204, 208, 220, 244, 245, 288, 290, 296, 297, 299, 306, 324, 336, 355, 390, 402, 410, 415, 416, 432, 433, 436, 454, 460, 462, 466, 476, 478, 495, 496, 540, 551, 553, 572, 579, 580, 589, 598, 599, 603, 609, 611, 612, 621, 625, 630, 669, 672, 676, 698, 711, 714, 741, 756, 769, 774, 788, 810, 815, 829, 835, 837, 857, 862, 868, 872, 873, 875, 894, 919, 934, 937, 941, 943, 950, 961, 969, 971, 984, 993, 995, 996, 1016, 1021, 1026, 1028, 1029, 1034, 1047, 1054, 1062, 1075, 1079, 1084, 1085, 1086, 1145, 1154, 1171, 1172, 1192, 1194], "so": [13, 17, 23, 32, 37, 39, 49, 55, 65, 123, 126, 131, 143, 147, 153, 156, 159, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 187, 191, 192, 193, 194, 195, 196, 200, 201, 202, 204, 205, 216, 217, 222, 230, 232, 233, 234, 243, 244, 245, 274, 288, 296, 298, 302, 314, 326, 330, 340, 346, 350, 355, 364, 369, 372, 387, 401, 405, 406, 414, 416, 432, 442, 443, 445, 454, 458, 460, 462, 463, 467, 477, 479, 482, 484, 489, 490, 494, 516, 518, 537, 553, 566, 605, 612, 616, 629, 652, 659, 668, 675, 684, 733, 743, 748, 751, 752, 754, 769, 796, 798, 801, 806, 810, 812, 815, 837, 850, 862, 876, 877, 879, 881, 887, 889, 891, 897, 901, 908, 934, 940, 941, 942, 943, 946, 948, 950, 958, 961, 964, 969, 971, 979, 997, 999, 1008, 1011, 1012, 1013, 1014, 1025, 1027, 1028, 1037, 1038, 1042, 1054, 1059, 1061, 1066, 1083, 1085, 1087, 1090, 1100, 1104, 1110, 1114, 1141, 1144, 1152, 1159, 1162, 1169, 1171, 1175, 1176, 1178, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1191, 1193, 1199, 1202, 1207], "ye": [13, 32, 50, 60, 115, 118, 174, 175, 178, 183, 224, 366, 652, 761, 864, 865, 882, 884, 885, 943, 954, 1011, 1079, 1113], "realli": [13, 21, 43, 50, 53, 55, 56, 143, 173, 174, 175, 177, 179, 193, 204, 208, 211, 495, 711, 748, 758, 770, 790, 829, 942, 943, 954, 977, 1136, 1143, 1149], "great": [13, 79, 177, 179, 234, 254, 264, 476, 595, 610, 766, 837, 942, 1189, 1194], "static": [13, 23, 98, 104, 105, 111, 112, 125, 153, 172, 174, 176, 178, 179, 189, 199, 233, 234, 241, 247, 250, 257, 260, 264, 288, 297, 299, 306, 369, 375, 438, 444, 448, 451, 453, 455, 462, 464, 466, 468, 473, 474, 479, 484, 485, 489, 491, 500, 514, 522, 534, 535, 536, 537, 538, 542, 543, 544, 545, 546, 547, 548, 549, 552, 559, 561, 580, 589, 594, 598, 601, 612, 617, 620, 623, 639, 643, 645, 649, 658, 661, 662, 679, 686, 687, 688, 689, 690, 691, 696, 705, 734, 736, 738, 739, 743, 754, 757, 763, 768, 774, 775, 776, 778, 779, 780, 781, 787, 788, 789, 790, 796, 815, 833, 837, 839, 933, 979, 982, 984, 986, 995, 1001, 1008, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1021, 1147, 1181, 1184, 1186, 1187, 1188], "It": [13, 21, 39, 43, 45, 55, 61, 63, 65, 79, 131, 138, 142, 160, 171, 172, 173, 174, 177, 178, 179, 182, 183, 192, 194, 196, 200, 201, 205, 210, 211, 224, 233, 234, 241, 247, 250, 257, 260, 264, 272, 277, 279, 288, 291, 294, 297, 323, 336, 382, 383, 399, 410, 414, 432, 437, 460, 462, 476, 494, 499, 504, 507, 516, 518, 540, 543, 544, 551, 552, 598, 678, 690, 707, 708, 744, 754, 775, 790, 801, 837, 864, 865, 876, 879, 894, 933, 934, 942, 943, 964, 969, 971, 972, 974, 987, 991, 996, 1012, 1013, 1023, 1028, 1033, 1035, 1046, 1054, 1058, 1059, 1093, 1109, 1114, 1118, 1121, 1127, 1142, 1148, 1160, 1169, 1170, 1189, 1191, 1192, 1194], "let": [13, 17, 42, 61, 62, 63, 126, 130, 172, 173, 174, 177, 178, 179, 182, 187, 194, 195, 196, 201, 202, 234, 248, 252, 254, 260, 264, 291, 294, 296, 298, 301, 316, 319, 327, 458, 466, 476, 478, 480, 487, 490, 494, 496, 498, 503, 516, 522, 539, 550, 551, 553, 556, 572, 586, 596, 597, 609, 613, 615, 616, 666, 672, 678, 684, 694, 711, 739, 743, 748, 752, 806, 810, 829, 837, 845, 872, 881, 894, 899, 934, 941, 942, 954, 967, 969, 970, 984, 993, 995, 1011, 1013, 1023, 1026, 1027, 1033, 1035, 1039, 1076, 1083, 1085, 1093, 1101, 1123, 1131, 1136, 1143, 1144, 1149, 1152, 1169, 1189], "me": [13, 23, 32, 37, 61, 63, 65, 125, 153, 166, 171, 172, 173, 174, 177, 178, 179, 182, 183, 187, 200, 201, 202, 204, 208, 231, 233, 234, 258, 309, 327, 353, 369, 458, 460, 461, 476, 479, 583, 607, 672, 707, 748, 754, 810, 872, 899, 934, 942, 943, 954, 958, 1011, 1014, 1023, 1039, 1042, 1083, 1136, 1140, 1170], "focu": [13, 175, 179, 182, 196, 204, 208, 291, 294, 465, 469, 501, 693, 722, 934, 942, 944, 1059, 1143, 1163, 1192], "myself": [13, 168, 169, 179, 200, 208, 223, 239, 810, 872, 894, 899, 916], "ey": [13, 32, 37, 257, 260, 270, 292, 334, 340, 346, 350, 1070], "toward": [13, 204, 375, 458, 518, 647], "consist": [13, 27, 204, 219, 260, 326, 360, 377, 391, 394, 432, 434, 472, 543, 551, 596, 897, 971, 1005, 1059, 1060, 1063, 1105, 1114, 1138, 1159], "won": [13, 142, 182, 183, 260, 290, 355, 389, 456, 481, 550, 552, 598, 748, 754, 805, 817, 942, 954, 961, 1014, 1036, 1085], "break": [13, 36, 38, 165, 195, 204, 205, 210, 217, 223, 224, 232, 244, 247, 253, 254, 257, 260, 263, 264, 267, 270, 285, 292, 306, 334, 340, 346, 350, 361, 426, 430, 431, 438, 444, 448, 451, 455, 458, 462, 464, 466, 468, 473, 474, 476, 637, 668, 678, 680, 687, 696, 722, 730, 734, 755, 768, 775, 787, 789, 790, 827, 959, 960, 969, 995, 1001, 1008, 1039, 1047, 1085, 1149], "move": [13, 54, 62, 100, 115, 119, 125, 138, 152, 160, 169, 173, 183, 201, 209, 212, 223, 234, 250, 275, 278, 287, 288, 299, 308, 309, 343, 352, 353, 354, 369, 372, 476, 477, 490, 534, 543, 572, 597, 598, 605, 606, 607, 608, 610, 656, 702, 722, 734, 744, 746, 750, 753, 755, 756, 759, 766, 767, 768, 786, 787, 789, 790, 806, 839, 861, 864, 865, 866, 867, 900, 901, 902, 903, 906, 907, 908, 909, 911, 917, 933, 934, 958, 959, 996, 1029, 1066, 1165, 1188, 1189, 1190, 1197, 1198], "around": [13, 24, 37, 61, 63, 65, 99, 125, 130, 133, 147, 172, 173, 174, 179, 183, 193, 204, 208, 232, 258, 269, 276, 277, 279, 299, 327, 336, 337, 415, 490, 504, 506, 515, 540, 596, 692, 695, 697, 747, 749, 789, 790, 837, 842, 969, 984, 1005, 1008, 1029, 1035, 1051, 1055, 1057, 1079, 1132, 1136, 1138, 1142, 1143, 1154, 1155, 1158], "last": [13, 61, 63, 123, 125, 168, 172, 173, 174, 189, 194, 204, 205, 211, 223, 224, 231, 239, 241, 244, 247, 248, 257, 260, 270, 285, 290, 292, 306, 328, 360, 366, 373, 375, 442, 460, 624, 626, 627, 628, 629, 633, 636, 725, 728, 729, 730, 788, 790, 837, 897, 900, 903, 919, 928, 930, 933, 961, 966, 974, 983, 988, 990, 995, 1010, 1021, 1032, 1033, 1034, 1035, 1039, 1043, 1047, 1048, 1054, 1055, 1060, 1068, 1076, 1077, 1081, 1083, 1086, 1087, 1098, 1125, 1131, 1133, 1144, 1149, 1157, 1158, 1170, 1177, 1207], "least": [13, 24, 37, 61, 63, 82, 174, 182, 196, 200, 202, 204, 211, 212, 231, 233, 234, 248, 250, 260, 264, 290, 294, 296, 306, 308, 352, 390, 408, 414, 415, 428, 454, 457, 458, 466, 482, 494, 566, 651, 694, 744, 746, 753, 758, 761, 770, 800, 833, 835, 869, 934, 936, 944, 982, 1005, 1009, 1030, 1039, 1043, 1059, 1060, 1070, 1094, 1142, 1177], "ha": [13, 21, 24, 27, 28, 43, 45, 53, 56, 62, 79, 111, 112, 113, 114, 115, 116, 117, 119, 123, 124, 126, 133, 136, 138, 142, 153, 159, 169, 171, 172, 173, 174, 175, 176, 177, 179, 182, 183, 187, 192, 194, 196, 200, 201, 204, 208, 210, 211, 212, 222, 224, 228, 229, 231, 232, 234, 241, 244, 247, 250, 252, 254, 255, 257, 260, 264, 267, 270, 273, 281, 282, 285, 288, 289, 290, 291, 292, 294, 296, 297, 299, 302, 305, 306, 312, 314, 323, 324, 327, 328, 330, 334, 337, 340, 343, 346, 350, 355, 362, 364, 366, 375, 389, 398, 401, 411, 414, 415, 424, 427, 435, 436, 443, 449, 450, 453, 457, 459, 460, 466, 472, 476, 478, 481, 487, 489, 490, 491, 492, 494, 495, 496, 499, 504, 505, 508, 516, 521, 535, 537, 547, 570, 580, 595, 597, 598, 599, 600, 603, 604, 605, 608, 609, 612, 619, 629, 650, 651, 668, 669, 672, 681, 682, 687, 688, 690, 699, 701, 704, 707, 716, 717, 718, 722, 731, 732, 733, 736, 744, 752, 754, 757, 758, 760, 766, 770, 788, 790, 791, 801, 806, 831, 833, 835, 837, 847, 850, 851, 853, 857, 864, 868, 869, 870, 872, 874, 875, 876, 882, 893, 895, 900, 926, 934, 940, 941, 942, 943, 952, 954, 957, 963, 969, 979, 981, 982, 984, 992, 993, 995, 996, 997, 998, 1005, 1009, 1011, 1025, 1027, 1028, 1030, 1032, 1033, 1034, 1037, 1039, 1042, 1047, 1048, 1049, 1055, 1057, 1059, 1062, 1065, 1066, 1070, 1075, 1076, 1080, 1098, 1118, 1133, 1135, 1136, 1142, 1143, 1144, 1145, 1149, 1157, 1158, 1160, 1162, 1169, 1171, 1176, 1178, 1189, 1191, 1192, 1194, 1197, 1198], "extens": [13, 14, 23, 28, 32, 37, 40, 153, 167, 182, 204, 231, 233, 241, 247, 257, 260, 340, 355, 436, 476, 504, 595, 733, 788, 791, 862, 874, 1011, 1042, 1059, 1062, 1164, 1169], "interfac": [13, 53, 56, 65, 73, 74, 75, 79, 81, 83, 86, 107, 115, 120, 121, 126, 127, 128, 129, 130, 131, 133, 135, 136, 138, 142, 143, 147, 168, 169, 172, 189, 191, 192, 199, 208, 234, 248, 250, 262, 280, 281, 288, 297, 315, 327, 331, 358, 359, 369, 370, 371, 375, 378, 387, 388, 476, 482, 483, 488, 493, 494, 495, 496, 499, 500, 506, 514, 518, 520, 521, 542, 546, 548, 572, 594, 619, 667, 669, 691, 733, 740, 741, 757, 758, 774, 775, 789, 790, 933, 934, 939, 941, 943, 977, 1011, 1033, 1148, 1188, 1193, 1194, 1200, 1203, 1206], "lot": [13, 70, 93, 98, 169, 171, 172, 174, 179, 183, 201, 204, 208, 224, 301, 372, 408, 457, 462, 466, 472, 486, 589, 666, 790, 821, 831, 837, 866, 867, 876, 897, 933, 942, 959, 1011, 1026, 1054, 1059, 1081, 1138, 1190], "littl": [13, 27, 44, 174, 176, 179, 182, 183, 192, 204, 232, 241, 247, 248, 250, 257, 260, 282, 288, 299, 387, 437, 465, 466, 477, 606, 609, 612, 668, 674, 754, 757, 793, 934, 936, 942, 990, 1012, 1082, 1152], "maintain": [13, 28, 30, 54, 71, 81, 169, 171, 172, 179, 201, 210, 231, 233, 241, 245, 247, 257, 260, 269, 369, 383, 462, 476, 644, 694, 705, 815, 837, 845, 847, 849, 980, 1011, 1012, 1013, 1015, 1021, 1026, 1027, 1028, 1029, 1077, 1141, 1191], "packag": [13, 21, 23, 29, 32, 60, 98, 105, 125, 148, 151, 161, 162, 168, 173, 187, 202, 204, 205, 208, 209, 211, 218, 223, 229, 231, 232, 233, 239, 241, 245, 247, 248, 251, 255, 257, 258, 260, 261, 263, 266, 269, 272, 290, 300, 301, 305, 309, 314, 319, 323, 326, 327, 330, 333, 340, 345, 349, 369, 370, 371, 372, 376, 387, 388, 479, 481, 484, 485, 790, 810, 933, 941, 942, 1013, 1018, 1021, 1036, 1059, 1066, 1089, 1090, 1092, 1093, 1094, 1095, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1142, 1146, 1150, 1151, 1152, 1157, 1158, 1168, 1169, 1170, 1172, 1173, 1178, 1191], "virtual": [13, 29, 70, 81, 107, 108, 113, 114, 115, 116, 117, 120, 121, 124, 134, 138, 143, 168, 174, 177, 179, 199, 204, 208, 219, 223, 239, 255, 258, 261, 272, 277, 279, 281, 288, 297, 298, 299, 300, 301, 305, 316, 319, 322, 323, 326, 327, 333, 337, 345, 349, 376, 387, 388, 491, 495, 497, 500, 501, 506, 508, 514, 518, 523, 525, 526, 527, 530, 531, 532, 533, 534, 535, 542, 552, 592, 594, 619, 666, 667, 668, 691, 733, 741, 752, 754, 758, 789, 790, 796, 868, 873, 876, 935, 941, 943, 952, 961, 977, 995, 1005, 1059, 1062, 1089, 1090, 1091, 1134, 1136, 1137, 1138, 1142, 1150, 1152, 1163, 1166, 1169, 1188, 1195, 1204], "environ": [13, 21, 29, 76, 79, 98, 105, 125, 147, 160, 168, 172, 183, 187, 208, 214, 223, 224, 229, 239, 242, 245, 255, 258, 261, 272, 278, 281, 287, 300, 301, 305, 308, 309, 316, 319, 322, 323, 326, 327, 333, 340, 345, 349, 350, 352, 353, 370, 371, 382, 383, 501, 521, 535, 550, 551, 552, 553, 614, 752, 753, 775, 790, 867, 871, 875, 876, 897, 898, 917, 933, 934, 974, 991, 996, 1012, 1021, 1022, 1023, 1028, 1030, 1042, 1062, 1064, 1089, 1090, 1091, 1134, 1136, 1137, 1138, 1142, 1143, 1150, 1152, 1157, 1158, 1163, 1164, 1166, 1169, 1170, 1176, 1180, 1182], "repo": [13, 123, 150, 183, 187, 199, 202, 213, 340, 355, 360, 369, 373, 374, 562, 563, 564, 565, 567, 568, 569, 810, 837, 839, 1025, 1178], "creat": [13, 17, 21, 24, 39, 42, 44, 54, 60, 61, 62, 63, 78, 100, 102, 103, 110, 115, 119, 125, 129, 130, 151, 158, 165, 168, 172, 173, 174, 176, 179, 182, 183, 187, 189, 191, 192, 193, 208, 209, 210, 211, 212, 213, 224, 229, 237, 242, 247, 248, 250, 255, 257, 260, 264, 269, 272, 277, 278, 279, 287, 288, 296, 299, 300, 301, 305, 306, 308, 309, 311, 316, 319, 323, 326, 327, 352, 353, 369, 374, 393, 470, 472, 478, 479, 492, 494, 496, 499, 500, 501, 514, 515, 516, 520, 522, 523, 537, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 594, 596, 599, 610, 650, 652, 668, 683, 686, 688, 697, 699, 722, 736, 739, 748, 754, 755, 767, 768, 775, 785, 786, 788, 789, 790, 793, 796, 800, 801, 806, 808, 810, 812, 815, 821, 833, 837, 866, 867, 868, 869, 870, 871, 877, 879, 880, 884, 885, 886, 888, 890, 892, 895, 901, 902, 904, 906, 907, 908, 909, 911, 917, 933, 941, 942, 943, 945, 946, 947, 949, 950, 952, 954, 956, 962, 963, 964, 971, 972, 973, 974, 979, 980, 981, 987, 988, 991, 994, 995, 996, 1003, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1026, 1027, 1032, 1033, 1035, 1037, 1039, 1043, 1047, 1048, 1049, 1051, 1065, 1066, 1075, 1076, 1077, 1086, 1090, 1091, 1092, 1104, 1112, 1113, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1136, 1138, 1139, 1140, 1142, 1145, 1148, 1152, 1161, 1169, 1171, 1172, 1191], "popul": [13, 174, 178, 264, 297, 793], "yourself": [13, 172, 179, 183, 194, 250, 421, 597, 614, 619, 842, 899, 982, 1005, 1058, 1194], "root": [13, 38, 62, 81, 125, 150, 171, 177, 179, 182, 183, 194, 199, 200, 201, 208, 212, 222, 244, 250, 260, 264, 267, 270, 285, 288, 292, 302, 306, 328, 334, 340, 346, 353, 354, 355, 360, 389, 456, 465, 469, 472, 481, 489, 495, 553, 615, 671, 788, 801, 837, 838, 839, 868, 872, 874, 893, 897, 909, 910, 916, 919, 921, 922, 923, 925, 926, 928, 934, 941, 942, 943, 945, 946, 950, 959, 964, 969, 977, 997, 1011, 1014, 1023, 1025, 1034, 1114, 1123, 1124, 1161, 1169], "activ": [13, 147, 177, 187, 189, 212, 272, 694, 817, 819, 823, 831, 872, 874, 929, 1090, 1169, 1171], "txt": [13, 33, 42, 44, 123, 125, 130, 143, 167, 174, 190, 191, 195, 198, 199, 200, 201, 202, 231, 233, 238, 241, 250, 251, 260, 272, 282, 316, 319, 350, 360, 361, 401, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 492, 537, 550, 551, 552, 553, 554, 573, 576, 579, 580, 582, 585, 588, 591, 685, 788, 808, 863, 864, 865, 877, 881, 891, 901, 902, 903, 904, 908, 909, 916, 937, 941, 942, 943, 977, 1000, 1003, 1007, 1012, 1013, 1023, 1034, 1081, 1105, 1123, 1171, 1172, 1175, 1178, 1180], "fedorish": [13, 810, 954, 1152], "your": [13, 43, 103, 110, 125, 142, 153, 171, 172, 174, 175, 176, 177, 178, 179, 182, 183, 187, 188, 201, 204, 207, 208, 212, 224, 232, 233, 250, 258, 264, 277, 279, 281, 288, 291, 294, 336, 353, 355, 366, 375, 377, 421, 456, 464, 466, 468, 473, 474, 476, 485, 495, 499, 520, 537, 540, 551, 553, 554, 611, 685, 686, 688, 689, 696, 702, 710, 734, 775, 787, 789, 790, 812, 829, 837, 842, 863, 864, 865, 867, 874, 876, 877, 886, 887, 888, 889, 890, 891, 892, 898, 901, 902, 903, 904, 906, 915, 933, 934, 941, 943, 945, 946, 950, 954, 969, 971, 1023, 1026, 1037, 1048, 1054, 1059, 1063, 1105, 1119, 1123, 1124, 1136, 1141, 1152, 1162, 1164, 1169, 1170, 1171, 1178, 1194], "mileag": [13, 277, 279, 1152, 1169], "might": [13, 27, 60, 61, 63, 123, 131, 136, 142, 171, 172, 173, 175, 177, 179, 182, 183, 187, 200, 202, 204, 212, 233, 241, 247, 252, 257, 260, 291, 294, 297, 323, 355, 380, 452, 466, 476, 481, 490, 491, 496, 499, 520, 553, 603, 612, 731, 741, 754, 755, 756, 788, 812, 823, 827, 833, 837, 879, 934, 941, 942, 943, 954, 959, 968, 990, 997, 1008, 1023, 1026, 1034, 1043, 1046, 1059, 1138, 1152, 1169, 1172, 1176], "vari": [13, 241, 247, 257, 260, 264, 277, 279, 300, 301, 322, 326, 392, 466, 650, 769, 837, 943, 1028, 1148, 1152, 1169, 1189], "dnf": [13, 60, 133, 153, 168, 175, 183, 187, 201, 340, 389, 482, 489, 566, 810, 838, 936, 954, 1013, 1025, 1152, 1176, 1178], "pandoc": 13, "graphviz": [13, 485, 1013], "dia": [13, 244, 302, 919, 1093], "gtest": [13, 44, 125, 199, 200, 201, 202, 389, 494, 495, 496, 498, 499, 501, 503, 516, 518, 519, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 560, 562, 563, 564, 565, 567, 568, 569, 570, 571, 589, 596, 597, 598, 609, 610, 612, 613, 614, 615, 616, 674, 699, 701, 704, 705, 706, 737, 743, 748, 752, 753, 754, 755, 757, 770, 784, 785, 786, 788, 790, 1174], "devel": [13, 133, 153, 168, 183, 201, 482, 484, 489, 810, 1176, 1178], "markdown": [13, 23, 364, 1091], "handl": [13, 21, 29, 46, 75, 130, 166, 172, 192, 204, 208, 209, 211, 213, 219, 232, 234, 239, 241, 245, 248, 249, 257, 262, 269, 281, 288, 298, 305, 306, 316, 319, 327, 332, 338, 344, 348, 369, 374, 376, 382, 383, 390, 430, 437, 442, 458, 462, 482, 542, 572, 594, 609, 619, 652, 656, 678, 687, 688, 689, 722, 724, 751, 754, 766, 767, 789, 790, 796, 800, 819, 831, 867, 870, 871, 933, 941, 956, 958, 959, 960, 961, 962, 963, 964, 966, 969, 971, 972, 974, 982, 988, 991, 994, 996, 999, 1005, 1008, 1036, 1054, 1059, 1060, 1075, 1085, 1088, 1134, 1136, 1188, 1194, 1203], "jupyt": [13, 187, 192, 193, 195, 204, 205, 207, 215, 255, 257, 258, 260, 261, 290, 291, 294, 295, 301, 305, 311, 316, 319, 323, 327, 333, 340, 350, 369, 374, 919, 1059, 1138, 1139, 1143, 1199], "notebook": [13, 32, 187, 191, 192, 193, 195, 204, 207, 215, 248, 255, 258, 260, 261, 263, 266, 269, 272, 281, 284, 290, 291, 294, 295, 301, 305, 311, 316, 319, 323, 327, 333, 334, 339, 345, 349, 350, 354, 374, 1059, 1138, 1143, 1199], "those": [13, 24, 79, 123, 134, 143, 165, 172, 173, 179, 182, 187, 202, 204, 208, 213, 231, 233, 234, 241, 245, 250, 251, 252, 254, 260, 264, 296, 297, 298, 299, 301, 316, 354, 366, 369, 375, 380, 401, 456, 466, 476, 478, 480, 481, 482, 495, 496, 499, 500, 566, 609, 631, 672, 675, 682, 697, 732, 748, 756, 758, 788, 803, 806, 837, 864, 865, 881, 882, 934, 941, 942, 943, 1008, 1027, 1028, 1029, 1030, 1034, 1035, 1036, 1042, 1047, 1058, 1100, 1110, 1131, 1141, 1149, 1150, 1155, 1157, 1169, 1191, 1192, 1194], "funki": [13, 17, 174], "graph": [13, 29, 79, 88, 143, 242, 255, 269, 272, 305, 311, 369, 376, 471, 485, 491, 1013, 1027, 1028, 1136, 1142], "histor": [13, 24, 79, 174, 196, 402, 415, 460, 693, 796, 875, 954, 1009, 1127, 1181], "baggag": [13, 402, 415, 693, 1009, 1127], "convert": [13, 17, 29, 42, 165, 193, 223, 231, 237, 241, 244, 247, 250, 254, 257, 260, 261, 264, 281, 306, 316, 319, 334, 354, 415, 437, 462, 472, 480, 485, 495, 550, 665, 672, 706, 707, 790, 791, 971, 1011, 1050, 1093, 1095, 1100, 1107, 1110, 1129, 1130, 1131, 1134, 1149], "draw": [13, 153, 169, 212, 323, 377, 412, 548, 746, 794, 798, 806, 827, 850], "svg": [13, 169], "ani": [13, 39, 45, 49, 120, 143, 152, 165, 168, 171, 172, 173, 174, 177, 179, 183, 187, 192, 196, 207, 210, 212, 224, 231, 233, 241, 247, 257, 260, 264, 275, 276, 277, 285, 301, 306, 323, 336, 355, 376, 377, 410, 454, 462, 476, 499, 504, 546, 547, 548, 549, 553, 554, 566, 583, 601, 604, 630, 668, 676, 681, 694, 697, 699, 716, 722, 740, 741, 744, 753, 754, 755, 757, 758, 766, 788, 795, 796, 808, 810, 829, 837, 847, 854, 864, 865, 874, 877, 884, 885, 888, 889, 890, 897, 909, 919, 934, 941, 942, 943, 946, 969, 980, 984, 1004, 1030, 1032, 1033, 1034, 1035, 1039, 1046, 1047, 1054, 1057, 1066, 1071, 1073, 1084, 1085, 1091, 1115, 1117, 1132, 1143, 1158, 1159, 1163, 1164, 1176, 1189, 1194], "That": [13, 85, 99, 100, 123, 125, 126, 130, 134, 171, 172, 173, 174, 177, 182, 183, 187, 196, 204, 208, 211, 250, 274, 278, 280, 294, 297, 299, 380, 444, 445, 448, 451, 455, 464, 468, 473, 474, 482, 495, 496, 506, 518, 520, 522, 538, 540, 553, 600, 604, 686, 696, 734, 760, 766, 767, 787, 789, 790, 864, 865, 867, 868, 870, 871, 873, 874, 883, 886, 887, 888, 889, 890, 891, 892, 897, 933, 934, 942, 945, 946, 947, 948, 949, 952, 970, 974, 988, 994, 996, 1021, 1022, 1033, 1059, 1066, 1126, 1128, 1133, 1162, 1169, 1179, 1189], "sloppili": [13, 967], "track": [13, 123, 175, 179, 187, 211, 231, 241, 247, 257, 260, 753, 810, 837, 838, 842, 874, 1046], "opentrain": [13, 22, 28, 152, 169, 209, 216, 234, 377, 388, 1169, 1199], "recip": [13, 39, 164, 168, 172, 173, 370, 371, 456, 621], "sphinx": [14, 17, 23, 39, 155, 168, 169, 184, 375, 791, 1169], "togeth": [14, 24, 43, 50, 105, 107, 111, 112, 130, 134, 162, 179, 182, 183, 187, 192, 202, 204, 208, 212, 224, 233, 250, 277, 279, 296, 297, 299, 314, 323, 326, 330, 377, 387, 433, 466, 467, 543, 553, 572, 594, 612, 613, 615, 616, 766, 768, 801, 814, 837, 864, 865, 923, 924, 942, 943, 973, 987, 1011, 1017, 1021, 1023, 1026, 1030, 1109, 1142, 1162, 1164, 1172, 1174, 1176, 1189, 1191], "form": [14, 29, 174, 179, 192, 196, 220, 241, 247, 248, 257, 260, 297, 299, 388, 453, 469, 508, 516, 518, 557, 558, 570, 668, 791, 837, 842, 845, 869, 919, 943, 1070, 1090, 1093, 1126, 1128, 1131, 1132, 1138, 1144, 1164, 1169, 1189], "short": [14, 32, 35, 43, 66, 107, 143, 172, 179, 187, 200, 204, 208, 211, 212, 213, 223, 224, 241, 245, 246, 247, 252, 255, 257, 258, 262, 280, 296, 297, 298, 299, 300, 301, 392, 408, 410, 415, 419, 420, 445, 454, 500, 514, 542, 554, 594, 599, 603, 790, 833, 839, 842, 876, 897, 922, 941, 943, 954, 961, 971, 993, 998, 1031, 1045, 1068, 1071, 1087, 1160, 1169, 1171, 1189], "video": [14, 22, 166, 175, 177, 179, 190, 204, 207, 208, 211, 216, 229, 232, 233, 255, 299, 302, 305, 477, 744, 934, 942, 1136, 1143, 1152], "explain": [14, 62, 98, 130, 166, 171, 177, 183, 196, 204, 208, 210, 234, 245, 250, 252, 254, 255, 263, 264, 301, 354, 384, 387, 456, 466, 586, 877, 897, 900, 934, 943, 999, 1082, 1136, 1169, 1194], "case": [14, 24, 43, 98, 105, 107, 110, 123, 128, 131, 143, 171, 172, 173, 176, 179, 182, 183, 187, 193, 196, 208, 210, 212, 214, 234, 247, 248, 254, 260, 264, 267, 276, 277, 279, 280, 288, 291, 294, 306, 323, 326, 336, 377, 399, 406, 425, 427, 458, 460, 478, 481, 484, 493, 500, 504, 507, 542, 550, 551, 553, 559, 561, 580, 594, 601, 611, 650, 656, 676, 688, 694, 711, 722, 734, 741, 744, 752, 766, 776, 778, 788, 789, 790, 810, 837, 850, 853, 865, 869, 872, 879, 893, 909, 926, 933, 934, 943, 953, 954, 960, 971, 990, 995, 1009, 1016, 1018, 1021, 1023, 1025, 1027, 1034, 1035, 1065, 1066, 1077, 1081, 1105, 1144, 1160, 1169, 1177, 1192], "netide": 14, "f\u00f6rderantrag": 14, "miscellan": [14, 29, 91, 151, 216, 229, 232, 239, 242, 243, 245, 251, 253, 255, 256, 261, 262, 263, 266, 269, 271, 279, 284, 286, 290, 291, 294, 304, 305, 307, 310, 313, 327, 332, 335, 337, 338, 339, 341, 344, 345, 348, 349, 351, 355, 356, 357, 358, 359, 360, 369, 377, 388, 500, 514, 542, 543, 544, 545, 546, 547, 548, 549, 552, 559, 561, 675, 676, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 703, 734, 750, 759, 767, 775, 787, 789, 790, 791, 933, 963, 964, 969, 972, 974, 988, 991, 1036, 1058, 1089, 1093, 1094, 1095, 1105, 1108, 1116, 1117, 1119, 1120, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1137, 1138, 1142, 1143, 1149, 1152, 1156, 1163, 1166, 1173, 1188, 1189, 1190, 1199], "s5": [16, 23, 168, 1005, 1009, 1203], "slide": [16, 23, 24, 27, 37, 168, 169, 172, 190, 197, 199, 204, 208, 212, 213, 214, 223, 224, 233, 234, 250, 276, 277, 288, 380, 383, 388, 589, 849, 1006, 1010, 1108, 1149, 1185, 1186, 1187, 1195, 1196, 1202, 1203, 1205, 1206, 1207], "work": [16, 24, 27, 40, 42, 43, 44, 57, 60, 72, 79, 81, 99, 100, 105, 107, 110, 124, 126, 128, 142, 143, 148, 150, 153, 157, 158, 168, 171, 172, 173, 175, 177, 178, 179, 182, 183, 187, 196, 200, 201, 202, 211, 212, 214, 224, 229, 231, 233, 241, 242, 245, 247, 248, 250, 255, 257, 260, 264, 269, 278, 281, 287, 288, 290, 291, 294, 301, 302, 305, 306, 308, 309, 311, 339, 340, 352, 353, 355, 369, 374, 375, 377, 382, 383, 388, 389, 433, 434, 454, 456, 466, 476, 478, 479, 481, 482, 484, 485, 487, 488, 490, 492, 495, 496, 499, 500, 501, 514, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 589, 594, 614, 643, 650, 683, 685, 687, 695, 697, 699, 742, 748, 752, 753, 754, 758, 760, 767, 786, 789, 790, 791, 800, 805, 815, 817, 821, 835, 837, 842, 845, 859, 863, 864, 865, 866, 867, 870, 871, 872, 874, 876, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 897, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 917, 919, 921, 930, 933, 934, 942, 946, 950, 954, 956, 961, 962, 964, 967, 970, 972, 974, 979, 988, 991, 993, 994, 996, 1009, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1026, 1028, 1034, 1057, 1060, 1061, 1062, 1081, 1087, 1090, 1091, 1113, 1123, 1124, 1136, 1143, 1152, 1154, 1155, 1157, 1158, 1160, 1169, 1178, 1189, 1194, 1195, 1201], "progress": [16, 142, 153, 168, 388, 791, 899, 1178], "web": [16, 23, 73, 75, 79, 151, 169, 179, 208, 211, 232, 235, 281, 305, 327, 790, 1136, 1143, 1149, 1152], "note": [16, 32, 36, 40, 44, 59, 62, 123, 125, 138, 142, 148, 151, 157, 171, 172, 174, 179, 192, 193, 204, 223, 231, 233, 244, 245, 247, 272, 301, 306, 323, 326, 327, 360, 361, 478, 482, 484, 488, 518, 566, 589, 598, 599, 605, 610, 669, 711, 731, 732, 733, 744, 746, 752, 753, 754, 756, 796, 837, 854, 864, 865, 924, 942, 960, 971, 1023, 1076, 1079, 1081, 1085, 1141, 1152, 1154, 1157, 1176], "screencast": [16, 23, 151, 1136], "written": [16, 42, 43, 79, 107, 126, 133, 171, 172, 177, 187, 210, 260, 371, 433, 436, 452, 460, 462, 466, 479, 516, 606, 672, 685, 705, 791, 876, 963, 970, 1005, 1012, 1013, 1021, 1053, 1060, 1091, 1191], "draft": [16, 29, 204, 789, 790, 933, 1087, 1134, 1135, 1150], "convers": [17, 211, 223, 230, 233, 234, 241, 246, 247, 250, 253, 256, 257, 262, 265, 268, 286, 297, 299, 303, 307, 313, 325, 329, 333, 335, 341, 347, 369, 393, 408, 422, 431, 438, 444, 448, 451, 455, 462, 464, 468, 473, 474, 478, 515, 577, 665, 669, 693, 695, 696, 698, 734, 787, 789, 790, 840, 1085, 1103, 1107, 1110, 1121], "old": [17, 29, 131, 169, 172, 174, 177, 202, 212, 244, 245, 260, 292, 302, 306, 331, 388, 411, 450, 471, 476, 499, 572, 625, 632, 637, 652, 684, 690, 693, 698, 699, 740, 758, 769, 794, 800, 810, 829, 934, 942, 998, 1074, 1080, 1093, 1114, 1160, 1190], "latex": [17, 23, 24, 572], "beamer": [17, 23, 24], "To": [17, 29, 45, 60, 79, 103, 113, 114, 116, 117, 123, 124, 131, 151, 171, 172, 174, 176, 187, 196, 200, 204, 219, 231, 241, 247, 257, 260, 261, 264, 268, 276, 277, 279, 281, 301, 316, 319, 323, 402, 405, 460, 472, 496, 541, 554, 650, 664, 675, 691, 693, 734, 750, 785, 789, 790, 810, 814, 825, 837, 866, 872, 933, 934, 941, 942, 947, 949, 962, 971, 1027, 1036, 1050, 1095, 1101, 1124, 1129, 1130, 1131, 1134, 1142, 1149], "put": [17, 58, 70, 81, 134, 138, 153, 165, 171, 172, 173, 200, 208, 323, 326, 478, 482, 486, 487, 550, 594, 680, 704, 740, 766, 806, 814, 827, 829, 854, 934, 942, 971, 996, 1011, 1026, 1029, 1034, 1093, 1174], "more": [17, 21, 27, 29, 43, 45, 61, 63, 65, 70, 79, 83, 91, 98, 102, 107, 115, 121, 125, 126, 129, 130, 133, 143, 165, 169, 172, 173, 176, 177, 179, 182, 183, 185, 187, 193, 194, 196, 201, 204, 208, 209, 210, 211, 212, 213, 214, 216, 218, 223, 224, 229, 231, 232, 233, 234, 235, 239, 242, 245, 246, 248, 249, 250, 251, 253, 254, 255, 258, 261, 262, 263, 265, 266, 268, 272, 276, 277, 278, 279, 283, 286, 287, 297, 298, 299, 306, 308, 309, 313, 315, 323, 327, 331, 335, 336, 337, 341, 347, 351, 352, 355, 356, 357, 358, 359, 360, 372, 374, 380, 387, 388, 399, 404, 408, 411, 415, 425, 426, 427, 436, 438, 444, 445, 448, 451, 455, 456, 461, 462, 464, 466, 468, 470, 471, 472, 473, 474, 478, 481, 483, 484, 487, 500, 507, 514, 516, 520, 521, 532, 537, 542, 550, 552, 572, 589, 594, 598, 602, 651, 665, 666, 667, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 693, 696, 703, 704, 715, 722, 731, 734, 735, 743, 744, 746, 748, 750, 751, 753, 754, 757, 759, 767, 768, 787, 788, 789, 790, 793, 796, 808, 810, 815, 821, 823, 825, 829, 831, 833, 837, 863, 868, 873, 897, 900, 930, 934, 936, 940, 941, 942, 943, 954, 960, 963, 966, 969, 980, 982, 993, 997, 999, 1005, 1009, 1011, 1012, 1013, 1021, 1023, 1027, 1028, 1029, 1035, 1037, 1039, 1043, 1044, 1045, 1046, 1050, 1053, 1054, 1058, 1059, 1061, 1065, 1066, 1077, 1089, 1092, 1093, 1094, 1095, 1105, 1107, 1108, 1114, 1116, 1117, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1136, 1137, 1138, 1141, 1142, 1143, 1145, 1146, 1149, 1150, 1152, 1155, 1159, 1163, 1164, 1166, 1168, 1170, 1171, 1173, 1178, 1182, 1189, 1191, 1192, 1199], "precis": [17, 204, 208, 264, 281, 305, 327, 334, 350, 392, 410, 674, 769, 837, 1080, 1136], "restructuredtext": [17, 23, 32, 33, 34, 35, 36, 38, 791], "turn": [17, 76, 111, 112, 172, 174, 177, 182, 183, 204, 208, 224, 233, 250, 296, 369, 466, 481, 482, 518, 543, 544, 701, 716, 893, 934, 941, 942, 943, 1011, 1013, 1017, 1027, 1035, 1040, 1041, 1051, 1053, 1162], "rst2s5": 17, "tool": [17, 32, 60, 69, 125, 179, 183, 188, 204, 212, 214, 224, 234, 260, 278, 287, 302, 307, 308, 325, 340, 352, 369, 372, 374, 387, 388, 389, 434, 469, 471, 472, 476, 668, 722, 740, 790, 861, 867, 868, 881, 933, 943, 954, 957, 1012, 1013, 1021, 1025, 1059, 1060, 1063, 1091, 1155, 1163, 1187, 1189, 1191, 1193, 1200], "thi": [17, 24, 28, 29, 30, 31, 39, 40, 43, 44, 45, 50, 53, 54, 57, 60, 61, 62, 63, 65, 70, 78, 79, 85, 86, 90, 91, 98, 105, 107, 110, 111, 112, 115, 121, 123, 125, 134, 143, 151, 153, 162, 166, 169, 171, 172, 173, 175, 176, 177, 178, 187, 189, 191, 192, 194, 196, 198, 199, 200, 201, 204, 208, 209, 210, 211, 212, 213, 214, 224, 231, 233, 234, 241, 244, 245, 247, 250, 252, 254, 255, 257, 260, 263, 264, 270, 273, 277, 279, 281, 288, 296, 297, 299, 301, 306, 316, 319, 323, 324, 326, 334, 337, 343, 350, 355, 360, 369, 372, 375, 387, 388, 390, 394, 401, 402, 415, 424, 425, 449, 453, 454, 456, 457, 458, 460, 465, 466, 476, 480, 481, 486, 487, 488, 492, 498, 506, 507, 518, 520, 522, 540, 542, 551, 552, 555, 556, 557, 558, 559, 560, 561, 562, 566, 567, 570, 571, 572, 573, 576, 579, 580, 582, 583, 585, 586, 588, 589, 591, 594, 596, 597, 598, 600, 601, 604, 606, 607, 609, 612, 617, 620, 623, 625, 627, 628, 631, 639, 643, 645, 649, 651, 656, 658, 659, 661, 662, 666, 669, 672, 676, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 694, 703, 704, 705, 716, 722, 724, 725, 728, 729, 730, 731, 732, 733, 734, 739, 742, 744, 746, 747, 750, 752, 754, 756, 757, 758, 759, 766, 767, 768, 769, 774, 775, 787, 788, 789, 790, 791, 796, 801, 806, 810, 812, 819, 833, 837, 842, 849, 857, 864, 865, 868, 869, 876, 879, 881, 882, 891, 893, 894, 897, 902, 904, 934, 939, 940, 941, 942, 943, 946, 953, 954, 960, 967, 968, 969, 970, 971, 975, 978, 987, 990, 999, 1000, 1003, 1004, 1007, 1009, 1012, 1013, 1015, 1021, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1036, 1039, 1041, 1043, 1045, 1047, 1054, 1057, 1058, 1059, 1061, 1063, 1070, 1073, 1075, 1076, 1077, 1080, 1081, 1083, 1085, 1086, 1087, 1092, 1108, 1123, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1149, 1150, 1151, 1152, 1153, 1154, 1158, 1161, 1163, 1164, 1169, 1171, 1174, 1175, 1176, 1178, 1180, 1181, 1189, 1191, 1192, 1194, 1197, 1198, 1204], "sens": [17, 79, 174, 176, 193, 196, 201, 204, 223, 491, 499, 516, 601, 612, 619, 666, 694, 707, 798, 837, 876, 943, 967, 990, 997, 1004, 1054, 1084, 1141, 1192], "entir": [17, 24, 30, 81, 111, 112, 153, 165, 169, 172, 173, 174, 177, 183, 187, 196, 201, 208, 211, 229, 232, 233, 241, 255, 258, 261, 264, 276, 277, 279, 281, 291, 298, 301, 305, 311, 316, 319, 323, 327, 333, 339, 345, 406, 435, 439, 446, 449, 454, 462, 470, 478, 496, 702, 733, 753, 837, 864, 865, 870, 894, 899, 908, 916, 934, 941, 943, 946, 952, 969, 980, 1013, 1042, 1046, 1060, 1065, 1066, 1083, 1085, 1105, 1136, 1169, 1172, 1175, 1192], "site": [17, 23, 27, 39, 60, 142, 151, 153, 168, 169, 172, 184, 187, 199, 200, 201, 205, 231, 241, 247, 257, 260, 323, 340, 611, 757, 876, 1140, 1157, 1158, 1164, 1171, 1178], "massag": [17, 32, 162, 183, 201, 277, 279, 791, 941, 1013], "itself": [17, 27, 130, 133, 143, 172, 174, 200, 204, 210, 241, 247, 257, 260, 306, 334, 358, 404, 436, 472, 481, 487, 515, 516, 538, 553, 599, 606, 665, 742, 757, 766, 769, 812, 815, 837, 857, 863, 864, 865, 879, 897, 926, 996, 1009, 1023, 1051, 1054, 1059, 1080, 1121, 1162, 1178], "upon": [17, 27, 70, 98, 174, 175, 204, 208, 212, 219, 258, 290, 297, 316, 319, 336, 458, 476, 504, 556, 572, 611, 629, 752, 769, 810, 943, 1009, 1098, 1162, 1169, 1189], "you": [17, 21, 43, 58, 61, 63, 110, 123, 125, 126, 130, 131, 133, 136, 138, 142, 153, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 187, 188, 192, 193, 194, 196, 200, 201, 204, 208, 210, 211, 212, 224, 229, 231, 232, 233, 234, 241, 244, 247, 248, 250, 254, 255, 257, 258, 260, 264, 272, 281, 288, 291, 294, 297, 299, 301, 305, 327, 336, 355, 360, 366, 369, 372, 374, 377, 400, 401, 414, 430, 456, 460, 476, 518, 537, 538, 539, 540, 544, 547, 550, 551, 553, 586, 597, 598, 604, 609, 612, 613, 615, 616, 630, 651, 659, 666, 672, 680, 681, 685, 702, 708, 736, 746, 757, 785, 786, 788, 810, 812, 829, 837, 842, 863, 864, 865, 868, 869, 872, 876, 877, 883, 887, 889, 891, 897, 898, 899, 901, 902, 903, 904, 908, 909, 934, 937, 941, 942, 943, 944, 945, 946, 948, 950, 953, 954, 958, 960, 964, 969, 971, 979, 980, 981, 982, 983, 987, 1011, 1012, 1013, 1014, 1016, 1019, 1023, 1026, 1027, 1030, 1035, 1036, 1045, 1047, 1058, 1059, 1063, 1066, 1079, 1085, 1093, 1102, 1104, 1119, 1123, 1124, 1133, 1136, 1142, 1149, 1152, 1158, 1169, 1170, 1171, 1178, 1181, 1189, 1194], "view": [17, 62, 177, 178, 182, 193, 195, 208, 210, 276, 277, 281, 288, 336, 337, 350, 387, 404, 406, 469, 696, 734, 743, 745, 789, 790, 864, 865, 874, 881, 934, 943, 945, 1066, 1135, 1189, 1192, 1194], "state": [17, 45, 120, 125, 130, 168, 179, 184, 204, 212, 234, 241, 244, 247, 257, 258, 260, 409, 426, 458, 476, 543, 544, 548, 549, 596, 702, 736, 766, 795, 833, 854, 868, 926, 936, 980, 984, 995, 996, 1033, 1039], "rather": [17, 86, 138, 142, 143, 172, 174, 175, 176, 177, 178, 179, 182, 183, 187, 196, 200, 204, 208, 224, 233, 251, 252, 326, 355, 380, 392, 434, 466, 467, 476, 494, 545, 546, 547, 548, 549, 554, 589, 596, 598, 612, 619, 630, 650, 675, 681, 695, 716, 766, 768, 810, 837, 842, 874, 876, 922, 934, 941, 942, 943, 945, 952, 957, 980, 981, 1008, 1012, 1027, 1052, 1059, 1062, 1070, 1111, 1112, 1115, 1126, 1128, 1143, 1150, 1171, 1176, 1189, 1191], "huge": [17, 178, 183, 193, 507, 743, 815, 833, 1058, 1060, 1165], "tabl": [17, 39, 62, 143, 165, 169, 171, 204, 210, 211, 228, 236, 241, 247, 248, 250, 251, 254, 255, 257, 260, 267, 272, 306, 388, 392, 407, 421, 422, 426, 427, 431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 674, 696, 734, 743, 787, 789, 790, 876, 1083, 1093, 1125, 1127, 1148, 1149], "isnot": 17, "big": [17, 105, 143, 169, 172, 173, 179, 204, 208, 228, 234, 248, 255, 258, 301, 327, 369, 415, 460, 472, 551, 601, 631, 694, 758, 957, 1136, 1148, 1204], "fat": [17, 143, 169, 171, 175, 179, 248, 688, 758, 868, 1148], "sai": [17, 24, 107, 134, 143, 156, 160, 171, 172, 173, 174, 176, 177, 178, 179, 182, 183, 187, 192, 193, 204, 208, 245, 250, 272, 291, 294, 298, 300, 301, 322, 323, 355, 369, 460, 466, 472, 482, 492, 496, 505, 516, 522, 537, 539, 551, 580, 589, 598, 608, 656, 669, 681, 690, 694, 722, 726, 728, 729, 730, 732, 737, 744, 747, 748, 753, 796, 810, 837, 876, 879, 881, 916, 934, 941, 943, 954, 958, 969, 971, 981, 993, 1004, 1008, 1014, 1023, 1026, 1027, 1033, 1037, 1059, 1075, 1087, 1093, 1123, 1144, 1178, 1192], "file": [17, 27, 29, 34, 35, 36, 38, 40, 44, 47, 50, 53, 54, 55, 56, 69, 79, 81, 86, 91, 92, 98, 99, 100, 101, 102, 103, 104, 105, 107, 109, 110, 111, 112, 123, 125, 126, 130, 131, 138, 142, 147, 148, 152, 153, 159, 164, 165, 168, 169, 171, 172, 173, 174, 177, 178, 183, 187, 191, 194, 196, 198, 199, 200, 201, 203, 204, 206, 208, 209, 211, 212, 213, 214, 219, 221, 222, 223, 224, 229, 232, 233, 234, 237, 238, 239, 242, 243, 245, 246, 247, 248, 250, 251, 254, 255, 257, 258, 261, 262, 263, 264, 266, 268, 271, 272, 276, 277, 278, 281, 285, 287, 290, 291, 293, 294, 300, 301, 303, 307, 308, 312, 314, 315, 322, 323, 326, 327, 329, 330, 331, 335, 338, 341, 347, 350, 352, 354, 355, 356, 357, 358, 359, 366, 369, 370, 371, 372, 373, 374, 380, 382, 383, 387, 398, 401, 402, 432, 433, 435, 436, 437, 438, 444, 448, 451, 455, 459, 464, 468, 470, 472, 473, 474, 477, 479, 481, 483, 484, 485, 490, 491, 494, 500, 514, 537, 538, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 573, 576, 579, 581, 582, 585, 588, 591, 594, 599, 601, 613, 614, 615, 616, 622, 674, 678, 685, 688, 696, 711, 734, 740, 744, 754, 767, 787, 788, 789, 790, 793, 798, 799, 803, 804, 806, 807, 814, 815, 818, 828, 833, 839, 841, 844, 846, 852, 853, 855, 858, 861, 862, 863, 866, 867, 869, 870, 871, 873, 874, 876, 877, 879, 880, 881, 882, 883, 884, 885, 887, 888, 889, 890, 893, 895, 896, 897, 901, 905, 906, 907, 908, 909, 911, 914, 917, 922, 925, 930, 933, 934, 937, 941, 942, 943, 944, 946, 947, 949, 950, 956, 957, 960, 961, 962, 971, 974, 975, 978, 979, 985, 988, 991, 994, 996, 1000, 1002, 1003, 1004, 1007, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1027, 1028, 1029, 1034, 1035, 1036, 1039, 1042, 1047, 1050, 1053, 1058, 1062, 1064, 1066, 1077, 1083, 1086, 1087, 1094, 1095, 1105, 1108, 1119, 1120, 1123, 1126, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1136, 1141, 1149, 1150, 1157, 1158, 1161, 1164, 1169, 1170, 1171, 1172, 1175, 1177, 1180, 1186, 1191, 1193, 1194, 1195, 1202, 1203, 1204, 1206], "rst": [17, 23, 32, 34, 35, 36, 38, 125, 152, 168, 191, 198, 203, 206, 212, 260, 270, 334, 377, 573, 576, 579, 582, 585, 588, 591, 1000, 1003, 1007, 1175, 1180], "render": [17, 40, 177, 340, 350], "dure": [17, 27, 45, 46, 105, 107, 162, 171, 172, 173, 174, 178, 179, 183, 187, 192, 204, 208, 260, 372, 435, 439, 440, 454, 466, 471, 515, 522, 548, 551, 632, 650, 707, 746, 833, 837, 842, 869, 875, 941, 943, 952, 1013, 1027, 1028, 1047, 1060, 1062, 1077, 1162, 1169], "regular": [17, 172, 196, 207, 221, 237, 244, 245, 252, 271, 272, 274, 276, 277, 286, 305, 306, 335, 341, 394, 460, 478, 609, 611, 743, 788, 825, 837, 882, 916, 919, 921, 930, 943, 954, 1004, 1005, 1047, 1077, 1079, 1136], "process": [17, 28, 60, 62, 74, 79, 81, 98, 100, 111, 112, 125, 147, 148, 177, 182, 189, 196, 202, 204, 211, 212, 214, 248, 278, 287, 300, 301, 308, 322, 352, 353, 371, 372, 379, 384, 437, 443, 472, 481, 500, 514, 542, 543, 544, 545, 546, 547, 548, 549, 552, 594, 761, 767, 788, 789, 790, 799, 804, 807, 809, 814, 818, 820, 823, 824, 827, 828, 829, 830, 832, 834, 837, 841, 842, 843, 846, 848, 851, 852, 854, 855, 857, 858, 864, 865, 866, 867, 868, 871, 872, 873, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 896, 898, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 917, 933, 942, 945, 946, 947, 948, 949, 952, 956, 957, 958, 962, 963, 964, 966, 967, 969, 971, 972, 974, 979, 980, 981, 988, 993, 994, 996, 997, 998, 1005, 1008, 1009, 1011, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1028, 1029, 1038, 1046, 1059, 1060, 1064, 1115, 1181, 1194, 1203, 1204], "mean": [17, 29, 74, 75, 111, 112, 125, 130, 172, 174, 177, 179, 193, 195, 196, 208, 228, 231, 232, 245, 247, 260, 264, 291, 306, 314, 322, 326, 330, 354, 355, 392, 413, 414, 415, 437, 456, 461, 466, 520, 598, 606, 609, 610, 676, 722, 744, 748, 756, 757, 790, 796, 812, 872, 879, 882, 884, 885, 893, 934, 941, 942, 943, 970, 977, 993, 997, 999, 1027, 1030, 1039, 1054, 1062, 1065, 1079, 1080, 1085, 1114, 1134, 1137, 1141, 1143, 1144, 1150, 1155, 1176, 1191, 1194], "specif": [17, 62, 123, 175, 241, 247, 248, 257, 260, 306, 312, 323, 355, 389, 437, 454, 466, 496, 543, 546, 548, 551, 697, 740, 754, 788, 796, 810, 833, 837, 863, 873, 934, 941, 943, 957, 963, 979, 980, 1005, 1011, 1023, 1034, 1042, 1043, 1145, 1161, 1169, 1204, 1205], "markup": [17, 39], "class": [17, 21, 29, 42, 44, 55, 58, 62, 70, 71, 74, 75, 86, 93, 98, 107, 108, 109, 111, 112, 115, 118, 119, 120, 121, 122, 125, 126, 130, 131, 133, 134, 136, 138, 142, 143, 148, 179, 190, 191, 192, 194, 199, 208, 209, 210, 211, 213, 215, 216, 228, 232, 234, 241, 244, 245, 247, 248, 252, 256, 258, 259, 262, 264, 267, 270, 272, 274, 276, 277, 279, 284, 285, 289, 291, 292, 294, 298, 299, 300, 301, 303, 304, 305, 306, 310, 312, 322, 323, 324, 326, 327, 328, 332, 334, 336, 337, 338, 339, 340, 344, 345, 346, 348, 349, 351, 355, 357, 363, 364, 371, 372, 373, 380, 406, 452, 476, 478, 486, 494, 495, 496, 497, 498, 500, 501, 503, 504, 508, 514, 515, 516, 518, 519, 521, 522, 523, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 552, 553, 559, 561, 566, 572, 580, 583, 586, 592, 594, 595, 596, 597, 599, 600, 601, 602, 603, 604, 607, 608, 610, 612, 617, 619, 620, 623, 629, 638, 639, 645, 649, 655, 658, 661, 662, 667, 668, 669, 671, 672, 676, 677, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 698, 699, 700, 701, 702, 703, 704, 707, 711, 716, 718, 719, 720, 722, 724, 725, 728, 729, 730, 731, 732, 733, 734, 736, 737, 739, 741, 748, 750, 753, 754, 757, 758, 759, 766, 767, 768, 774, 775, 776, 778, 780, 784, 785, 786, 787, 789, 790, 792, 934, 941, 942, 943, 975, 977, 978, 1032, 1034, 1036, 1042, 1043, 1044, 1045, 1046, 1049, 1050, 1055, 1056, 1057, 1058, 1060, 1063, 1065, 1066, 1074, 1095, 1122, 1123, 1124, 1129, 1131, 1134, 1149, 1163, 1169, 1170, 1181, 1189, 1199], "handout": [17, 124, 125], "warn": [17, 32, 40, 143, 168, 183, 224, 234, 285, 297, 366, 377, 402, 426, 457, 458, 460, 481, 495, 550, 552, 596, 600, 651, 695, 707, 790, 806, 812, 815, 874, 933, 963, 974, 988, 1010, 1034, 1085, 1164], "produc": [17, 109, 192, 194, 233, 247, 346, 454, 466, 471, 722, 728, 730, 766, 768, 954, 984, 985, 1003, 1011, 1014, 1027, 1040, 1041, 1074, 1077, 1079, 1144], "error": [17, 21, 27, 29, 46, 89, 98, 126, 130, 131, 142, 153, 168, 171, 172, 173, 174, 177, 178, 187, 191, 194, 202, 205, 208, 211, 218, 229, 233, 239, 241, 244, 248, 249, 250, 254, 257, 260, 264, 267, 269, 272, 281, 282, 285, 288, 291, 294, 305, 306, 319, 324, 354, 369, 374, 376, 380, 399, 402, 404, 411, 415, 429, 430, 436, 442, 443, 445, 458, 459, 460, 463, 480, 481, 482, 484, 485, 486, 487, 490, 497, 501, 520, 521, 522, 534, 542, 553, 572, 589, 594, 596, 598, 599, 603, 604, 605, 606, 607, 609, 611, 619, 622, 627, 669, 671, 672, 681, 688, 695, 698, 702, 704, 705, 706, 707, 711, 731, 732, 733, 741, 744, 746, 748, 753, 754, 756, 767, 768, 770, 788, 789, 790, 793, 800, 815, 825, 829, 833, 837, 853, 867, 870, 871, 877, 880, 933, 934, 942, 944, 956, 958, 959, 960, 961, 962, 963, 971, 972, 974, 982, 988, 990, 991, 994, 995, 996, 1004, 1008, 1009, 1013, 1014, 1023, 1028, 1034, 1064, 1065, 1076, 1077, 1081, 1085, 1087, 1088, 1095, 1108, 1134, 1136, 1143, 1164, 1169, 1171, 1176, 1189], "output": [17, 23, 33, 40, 51, 53, 55, 56, 60, 62, 86, 87, 108, 116, 124, 136, 142, 143, 168, 174, 176, 177, 178, 191, 194, 200, 212, 213, 224, 233, 241, 247, 250, 251, 257, 260, 288, 354, 369, 374, 392, 393, 398, 399, 400, 401, 405, 437, 471, 472, 478, 479, 480, 520, 522, 537, 552, 555, 556, 557, 558, 570, 572, 580, 583, 609, 659, 677, 678, 691, 739, 744, 752, 790, 795, 850, 861, 868, 877, 880, 881, 882, 893, 897, 919, 923, 924, 929, 930, 934, 944, 955, 963, 966, 969, 977, 980, 981, 985, 1005, 1008, 1009, 1011, 1041, 1080, 1085, 1086, 1097, 1098, 1100, 1101, 1102, 1103, 1105, 1110, 1116, 1118, 1120, 1125, 1126, 1127, 1128, 1139, 1142, 1143, 1148, 1152, 1161, 1164, 1177, 1184, 1200], "must": [17, 39, 43, 44, 111, 112, 125, 131, 175, 179, 194, 200, 204, 205, 207, 208, 211, 215, 216, 229, 231, 233, 241, 247, 248, 255, 257, 258, 260, 281, 306, 323, 392, 409, 412, 426, 434, 452, 454, 469, 476, 478, 482, 488, 499, 504, 505, 518, 521, 522, 535, 536, 550, 553, 556, 557, 558, 570, 580, 606, 607, 609, 611, 621, 622, 656, 669, 676, 683, 690, 698, 699, 701, 702, 722, 746, 748, 760, 764, 790, 815, 821, 829, 835, 842, 864, 865, 881, 891, 899, 933, 944, 950, 953, 963, 964, 967, 972, 974, 982, 991, 993, 995, 1005, 1011, 1014, 1029, 1034, 1035, 1052, 1057, 1063, 1076, 1077, 1079, 1080, 1082, 1085, 1115, 1136, 1170, 1181], "role": [17, 39, 175, 179, 472, 553, 934], "somewher": [17, 193, 212, 224, 231, 264, 276, 277, 354, 366, 437, 454, 456, 476, 501, 522, 589, 722, 980, 1037, 1062, 1149], "top": [17, 28, 32, 34, 35, 38, 39, 50, 171, 172, 174, 175, 187, 193, 195, 196, 212, 214, 241, 247, 250, 257, 260, 479, 840, 849, 934, 954, 993, 995, 1034, 1042, 1064, 1111, 1115, 1189, 1193, 1195, 1200], "insid": [17, 35, 39, 42, 50, 125, 130, 143, 171, 172, 200, 202, 224, 241, 247, 257, 260, 277, 297, 299, 314, 323, 330, 354, 369, 398, 402, 412, 430, 433, 435, 436, 454, 459, 478, 540, 551, 556, 604, 610, 612, 768, 788, 798, 808, 876, 906, 916, 941, 943, 966, 980, 999, 1025, 1030, 1033, 1042, 1079, 1085, 1154, 1157, 1161, 1172, 1191, 1194], "ideal": [17, 183, 199, 241, 247, 257, 260, 277, 279, 465, 481, 492, 499, 547, 668, 722, 796, 815, 833, 837, 930, 950, 1014, 1054, 1056], "slideshow": [17, 23, 251, 263, 290, 300, 311, 319, 322, 326, 332, 333, 338, 339, 344, 345, 348, 349, 794, 797, 799, 802, 804, 807, 809, 816, 818, 820, 822, 824, 826, 828, 830, 832, 834, 836, 841, 843, 846, 848, 852, 855, 858, 1078, 1166, 1173], "manual": [17, 60, 62, 126, 136, 138, 142, 169, 179, 187, 210, 211, 241, 242, 247, 250, 257, 260, 290, 292, 400, 401, 404, 411, 449, 454, 478, 595, 637, 687, 694, 705, 731, 743, 744, 775, 776, 778, 779, 789, 790, 792, 793, 796, 837, 864, 865, 934, 941, 942, 964, 967, 980, 982, 984, 1025, 1027, 1032, 1040, 1041, 1045, 1049, 1091], "theme": [17, 361, 1066, 1085], "url": [17, 169, 176, 178, 187, 199, 551, 1033, 1091], "_static": 17, "ui": [17, 32, 65, 179, 415, 674], "default": [17, 23, 58, 60, 98, 111, 112, 120, 123, 125, 133, 134, 172, 173, 178, 179, 183, 189, 200, 209, 211, 213, 220, 222, 233, 241, 244, 247, 250, 253, 256, 257, 260, 264, 267, 270, 275, 278, 285, 287, 288, 292, 296, 297, 299, 302, 306, 308, 309, 328, 334, 337, 340, 346, 352, 353, 362, 369, 415, 426, 458, 466, 472, 478, 479, 481, 484, 488, 491, 497, 500, 514, 516, 525, 526, 542, 552, 594, 596, 597, 602, 603, 606, 607, 631, 650, 651, 667, 672, 674, 676, 679, 680, 681, 682, 684, 686, 687, 688, 689, 690, 691, 694, 695, 702, 703, 732, 734, 750, 759, 764, 766, 767, 768, 774, 775, 780, 787, 789, 790, 833, 861, 864, 865, 867, 879, 892, 897, 916, 928, 929, 933, 934, 936, 941, 942, 944, 950, 953, 967, 971, 977, 980, 982, 984, 996, 1008, 1010, 1012, 1014, 1025, 1054, 1056, 1062, 1081, 1083, 1085, 1091, 1127, 1144, 1154, 1157, 1159, 1164, 1169, 1171, 1189], "given": [17, 39, 61, 63, 70, 82, 103, 107, 108, 111, 112, 115, 118, 119, 157, 172, 174, 177, 179, 183, 193, 241, 247, 257, 260, 264, 288, 296, 297, 299, 306, 334, 350, 355, 402, 417, 460, 519, 548, 551, 553, 572, 596, 665, 676, 701, 788, 798, 808, 819, 837, 874, 879, 888, 890, 897, 919, 941, 1021, 1033, 1121, 1130, 1136, 1138, 1144, 1155, 1158, 1192, 1204], "path": [17, 21, 98, 100, 125, 131, 160, 161, 168, 177, 200, 204, 212, 215, 232, 243, 244, 245, 249, 252, 256, 257, 260, 278, 287, 288, 308, 309, 312, 314, 315, 330, 331, 334, 341, 346, 351, 352, 353, 354, 355, 360, 362, 369, 374, 436, 472, 478, 480, 483, 484, 486, 500, 514, 542, 543, 544, 545, 546, 547, 548, 549, 552, 553, 554, 594, 619, 751, 767, 789, 790, 801, 815, 827, 837, 863, 864, 865, 866, 867, 870, 871, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 897, 898, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 917, 933, 953, 956, 962, 963, 964, 972, 973, 974, 988, 990, 991, 992, 994, 996, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1025, 1032, 1042, 1059, 1062, 1124, 1164, 1169, 1171, 1179, 1191], "commit": [17, 46, 78, 123, 150, 175, 178, 186, 187, 229, 233, 234, 245, 248, 258, 377, 810, 1136, 1145, 1148, 1169, 1201], "place": [17, 55, 125, 138, 160, 169, 173, 174, 176, 177, 178, 179, 187, 192, 201, 205, 228, 244, 250, 260, 296, 297, 392, 408, 430, 437, 454, 477, 486, 490, 494, 518, 520, 534, 553, 566, 611, 625, 627, 628, 639, 650, 658, 661, 662, 672, 691, 757, 760, 768, 785, 788, 790, 815, 837, 866, 887, 888, 889, 890, 941, 942, 950, 996, 1026, 1028, 1037, 1067, 1076, 1080, 1082, 1101, 1158, 1171], "_download": 17, "7a046b2e956b892f20b3485964f7b2cf": 17, "rel": [17, 79, 100, 125, 172, 179, 208, 224, 245, 278, 287, 288, 308, 309, 352, 353, 387, 500, 514, 542, 543, 544, 545, 546, 547, 548, 549, 552, 594, 711, 716, 767, 789, 790, 837, 864, 865, 866, 867, 870, 871, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 917, 933, 941, 953, 956, 962, 964, 972, 974, 988, 991, 994, 996, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1028, 1140, 1141, 1148, 1161], "up": [17, 21, 27, 32, 34, 35, 38, 43, 45, 53, 79, 123, 134, 138, 142, 162, 169, 171, 172, 173, 175, 177, 179, 182, 187, 191, 192, 223, 229, 234, 239, 241, 245, 247, 257, 260, 272, 277, 279, 288, 297, 323, 336, 354, 372, 376, 382, 383, 450, 457, 466, 467, 472, 476, 480, 481, 501, 550, 551, 552, 553, 566, 589, 613, 614, 615, 616, 619, 666, 671, 736, 739, 752, 753, 766, 788, 796, 800, 805, 806, 808, 819, 821, 829, 833, 837, 838, 876, 897, 898, 916, 929, 934, 936, 941, 942, 943, 950, 960, 993, 999, 1004, 1009, 1011, 1014, 1023, 1032, 1035, 1046, 1050, 1056, 1079, 1093, 1097, 1114, 1119, 1131, 1136, 1141, 1144, 1152, 1164, 1170, 1176, 1181, 1192], "uri": 17, "well": [17, 42, 172, 174, 177, 178, 179, 183, 196, 200, 208, 231, 233, 260, 296, 298, 306, 314, 323, 330, 355, 415, 437, 466, 476, 504, 544, 550, 553, 554, 577, 597, 601, 612, 626, 694, 701, 708, 731, 744, 754, 758, 862, 881, 897, 930, 937, 942, 943, 954, 967, 969, 987, 1011, 1013, 1026, 1034, 1035, 1038, 1042, 1045, 1049, 1052, 1055, 1066, 1070, 1080, 1139, 1141, 1149, 1165, 1191], "blah": [19, 23, 39, 61, 150, 172, 175, 194, 205, 212, 215, 220, 228, 231, 237, 241, 247, 248, 250, 252, 257, 260, 267, 270, 282, 289, 292, 302, 306, 324, 334, 340, 361, 362, 369, 377, 380, 460, 707, 770, 788, 793, 801, 960, 961, 1004, 1005, 1030, 1065, 1071, 1091, 1152], "watch": [20, 32, 173, 174, 175, 193, 200, 204, 208, 209, 213, 299, 301, 305, 477, 744, 934, 942, 978, 1038, 1059, 1162], "w5g8k7a2gbg": 20, "bore": [20, 233, 255, 269, 285, 311, 897, 1005, 1009, 1066, 1136], "good": [20, 27, 29, 43, 98, 125, 147, 169, 171, 172, 173, 174, 179, 187, 196, 204, 208, 211, 229, 232, 233, 241, 245, 250, 251, 252, 254, 255, 258, 264, 279, 281, 291, 294, 297, 299, 305, 306, 327, 336, 388, 411, 415, 456, 460, 462, 470, 471, 476, 499, 500, 514, 542, 543, 544, 545, 546, 547, 548, 549, 552, 559, 561, 577, 594, 598, 602, 603, 617, 620, 623, 639, 645, 649, 652, 658, 661, 662, 667, 671, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 703, 705, 734, 745, 750, 756, 759, 765, 767, 769, 775, 778, 787, 789, 790, 794, 796, 829, 837, 842, 862, 876, 880, 930, 934, 942, 943, 967, 969, 986, 995, 998, 999, 1005, 1008, 1034, 1047, 1065, 1066, 1077, 1080, 1082, 1085, 1098, 1108, 1135, 1136, 1143, 1162, 1191], "j2hzby8e4yq": 20, "pov": 20, "classmethod": [21, 285], "staticmethod": [21, 285], "member": [21, 35, 38, 43, 57, 62, 111, 112, 125, 187, 193, 194, 195, 205, 210, 232, 250, 262, 275, 290, 297, 306, 337, 373, 445, 454, 461, 498, 540, 542, 545, 548, 572, 586, 594, 596, 597, 599, 600, 601, 602, 608, 612, 613, 615, 617, 650, 651, 655, 676, 679, 682, 683, 684, 686, 687, 688, 689, 690, 691, 694, 702, 706, 707, 716, 722, 732, 748, 754, 775, 786, 788, 790, 798, 803, 805, 825, 833, 837, 850, 856, 863, 864, 865, 880, 881, 882, 883, 884, 885, 891, 926, 930, 941, 969, 1023, 1084, 1161, 1181], "final": [21, 38, 42, 60, 79, 107, 168, 194, 204, 208, 211, 231, 233, 241, 247, 248, 257, 262, 275, 281, 305, 327, 337, 478, 551, 553, 618, 619, 668, 694, 705, 734, 775, 789, 790, 800, 831, 837, 864, 865, 930, 942, 943, 1011, 1028, 1032, 1045, 1098, 1114, 1136, 1189], "exec": [21, 29, 179, 204, 213, 244, 258, 259, 267, 274, 286, 290, 292, 300, 301, 302, 306, 313, 322, 326, 333, 335, 790, 925, 930, 963, 966, 987, 1011, 1036, 1134, 1202], "dict": [21, 191, 204, 205, 209, 220, 222, 223, 228, 231, 245, 246, 247, 248, 251, 253, 256, 257, 258, 262, 268, 282, 285, 292, 302, 306, 312, 317, 324, 328, 334, 339, 341, 347, 350, 361, 364, 369, 694, 1032, 1035, 1047, 1048, 1057, 1083], "There": [21, 45, 55, 57, 69, 82, 98, 134, 169, 171, 173, 174, 175, 176, 179, 183, 184, 200, 201, 205, 207, 208, 211, 215, 216, 229, 234, 250, 253, 254, 255, 258, 264, 291, 294, 297, 298, 299, 300, 301, 322, 323, 337, 355, 390, 400, 406, 415, 430, 433, 454, 456, 463, 466, 477, 478, 482, 491, 496, 521, 522, 572, 580, 597, 602, 647, 672, 690, 691, 703, 705, 711, 734, 739, 750, 754, 758, 759, 767, 787, 789, 790, 810, 837, 842, 868, 897, 934, 941, 942, 987, 997, 1008, 1009, 1060, 1066, 1077, 1136, 1145, 1170, 1176], "half": [21, 36, 172, 173, 174, 234, 462, 481, 835, 876, 942, 995, 1032], "heart": [21, 32, 38, 162, 481, 876, 1142], "split": [21, 169, 192, 195, 228, 232, 237, 238, 241, 244, 245, 247, 252, 256, 262, 270, 273, 285, 290, 292, 306, 312, 328, 335, 340, 346, 350, 360, 369, 454, 478, 500, 572, 1032, 1142], "pimp": 21, "elabor": [21, 183, 248, 258, 456, 479, 942], "namespac": [21, 204, 241, 247, 254, 257, 260, 264, 275, 285, 501, 503, 518, 554, 555, 556, 557, 558, 560, 570, 571, 589, 611, 619, 624, 625, 626, 627, 628, 634, 635, 637, 638, 641, 642, 643, 647, 661, 678, 684, 685, 694, 709, 731, 741, 744, 766, 768, 769, 941, 975, 978, 990, 992, 1042], "__init__": [21, 62, 168, 191, 192, 203, 205, 208, 210, 228, 231, 232, 244, 245, 247, 254, 257, 260, 264, 270, 273, 282, 285, 292, 302, 306, 324, 328, 346, 350, 478, 1032, 1033, 1034, 1042, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1169], "__all__": [21, 260, 264], "etc": [21, 23, 29, 62, 91, 101, 125, 153, 161, 165, 169, 173, 177, 186, 189, 190, 194, 201, 208, 211, 215, 216, 218, 221, 222, 229, 230, 232, 233, 235, 239, 242, 244, 245, 247, 251, 252, 255, 261, 262, 263, 264, 266, 267, 269, 271, 274, 284, 285, 288, 291, 292, 294, 302, 304, 305, 307, 310, 311, 327, 328, 332, 333, 334, 338, 339, 340, 344, 345, 346, 348, 349, 353, 355, 356, 357, 358, 359, 360, 369, 374, 377, 387, 410, 415, 471, 481, 489, 503, 586, 674, 736, 742, 769, 788, 790, 796, 810, 837, 849, 859, 867, 869, 872, 874, 877, 879, 880, 881, 882, 893, 897, 900, 911, 914, 916, 917, 919, 921, 922, 923, 924, 925, 926, 928, 930, 933, 943, 944, 945, 953, 954, 957, 958, 959, 964, 970, 979, 990, 1004, 1005, 1009, 1011, 1032, 1034, 1036, 1043, 1044, 1045, 1046, 1050, 1058, 1069, 1078, 1081, 1085, 1089, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1146, 1149, 1150, 1156, 1161, 1163, 1184, 1185, 1193, 1195, 1199, 1200, 1203, 1205], "user": [21, 23, 29, 31, 47, 53, 62, 65, 85, 102, 103, 111, 112, 125, 131, 152, 153, 158, 168, 169, 171, 172, 173, 174, 176, 177, 179, 187, 194, 200, 203, 204, 205, 208, 212, 219, 228, 231, 233, 235, 244, 250, 252, 257, 258, 260, 261, 263, 264, 267, 270, 272, 281, 282, 285, 288, 291, 292, 294, 302, 306, 309, 316, 317, 319, 323, 328, 334, 336, 340, 346, 352, 353, 354, 366, 369, 378, 434, 465, 476, 478, 479, 481, 486, 494, 504, 521, 522, 542, 556, 572, 594, 597, 598, 604, 611, 655, 659, 678, 680, 681, 682, 683, 690, 691, 707, 711, 743, 754, 767, 789, 790, 796, 798, 808, 810, 835, 837, 850, 851, 864, 865, 867, 871, 875, 876, 877, 881, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 897, 921, 925, 928, 933, 934, 935, 944, 950, 957, 962, 963, 964, 967, 969, 972, 974, 979, 988, 991, 992, 994, 996, 997, 1008, 1011, 1025, 1027, 1028, 1029, 1032, 1049, 1050, 1087, 1095, 1097, 1098, 1102, 1114, 1115, 1121, 1126, 1128, 1131, 1133, 1134, 1147, 1152, 1155, 1159, 1162, 1171, 1178, 1189], "import": [21, 29, 62, 160, 168, 174, 179, 182, 192, 193, 194, 195, 204, 205, 208, 210, 211, 216, 220, 222, 223, 224, 232, 236, 237, 238, 243, 244, 245, 247, 252, 254, 257, 260, 264, 267, 270, 273, 276, 277, 282, 285, 289, 290, 291, 292, 294, 296, 302, 306, 312, 317, 320, 324, 328, 334, 339, 340, 346, 350, 362, 364, 392, 408, 478, 481, 482, 619, 636, 702, 740, 754, 757, 775, 790, 819, 837, 879, 897, 934, 937, 941, 950, 962, 989, 999, 1010, 1031, 1032, 1033, 1035, 1043, 1045, 1047, 1053, 1054, 1057, 1063, 1064, 1065, 1066, 1067, 1068, 1070, 1075, 1079, 1087, 1089, 1090, 1091, 1124, 1131, 1132, 1133, 1134, 1136, 1137, 1138, 1139, 1141, 1142, 1144, 1147, 1148, 1150, 1152, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1161, 1163, 1164, 1166, 1169, 1170, 1173, 1176, 1194, 1199], "pythonpath": [21, 40, 60, 204, 290, 1042, 1091], "goto": [21, 431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790, 1008], "orgi": [21, 486, 698], "perspect": [21, 38, 179, 201], "alwai": [21, 43, 81, 123, 168, 169, 174, 184, 201, 208, 231, 253, 264, 290, 291, 294, 336, 361, 369, 374, 392, 410, 436, 437, 449, 461, 462, 466, 467, 469, 470, 486, 487, 506, 516, 546, 595, 601, 611, 630, 633, 689, 694, 698, 709, 733, 742, 746, 749, 753, 758, 796, 815, 833, 837, 842, 863, 897, 898, 941, 942, 943, 957, 963, 969, 997, 1008, 1013, 1023, 1028, 1034, 1062, 1066, 1080, 1136, 1141, 1142, 1143, 1169, 1170, 1189], "valgrind": [21, 98, 199, 233, 387, 464, 468, 469, 471, 473, 474, 501, 566, 576, 578, 586, 589, 604, 739, 752, 753, 790, 1186, 1187], "supervis": [21, 1143], "hack": [21, 53, 61, 63, 98, 143, 166, 169, 187, 195, 199, 204, 208, 209, 233, 234, 248, 250, 258, 269, 276, 277, 278, 279, 287, 299, 300, 308, 309, 316, 319, 323, 336, 337, 352, 353, 369, 373, 377, 378, 380, 387, 388, 436, 479, 500, 501, 514, 540, 542, 543, 544, 545, 546, 547, 548, 549, 552, 559, 561, 572, 614, 629, 630, 650, 692, 703, 734, 735, 736, 740, 752, 767, 775, 788, 789, 790, 791, 867, 892, 893, 933, 974, 1021, 1059, 1156, 1162, 1169, 1188, 1189, 1203], "someth": [21, 43, 55, 65, 73, 74, 75, 79, 84, 85, 88, 130, 138, 156, 165, 171, 172, 174, 175, 177, 179, 183, 187, 193, 200, 204, 212, 220, 222, 223, 224, 234, 244, 248, 255, 270, 273, 297, 299, 316, 319, 336, 364, 427, 428, 442, 496, 518, 551, 553, 589, 600, 604, 609, 612, 619, 643, 687, 688, 689, 699, 702, 716, 746, 754, 756, 757, 784, 785, 786, 790, 798, 810, 814, 825, 833, 837, 839, 842, 857, 909, 933, 934, 937, 941, 942, 943, 958, 959, 967, 969, 970, 982, 993, 995, 996, 1008, 1023, 1030, 1032, 1033, 1035, 1039, 1056, 1063, 1065, 1070, 1080, 1086, 1118, 1143, 1194], "malloc": [21, 199, 449, 450, 463, 578, 823, 957, 1009, 1011, 1186], "seomth": 21, "cleanup": [21, 172, 191, 380, 595, 671, 707, 751, 1009, 1032, 1170], "obviou": [21, 57, 120, 179, 187, 193, 254, 264, 291, 294, 366, 437, 456, 478, 553, 595, 702, 711, 752, 758, 775, 963, 1005, 1030, 1066, 1077, 1192], "lead": [21, 111, 112, 115, 119, 130, 172, 174, 178, 179, 196, 233, 260, 264, 288, 306, 326, 396, 404, 414, 486, 676, 688, 837, 863, 876, 942, 995, 1004, 1005, 1023, 1050, 1076, 1087, 1098, 1149, 1163], "sever": [21, 88, 125, 172, 232, 233, 434, 503, 508, 682, 693, 835, 893, 934, 1034, 1060, 1071], "duplic": [21, 42, 49, 98, 126, 130, 142, 192, 205, 250, 258, 268, 290, 354, 396, 398, 459, 460, 503, 562, 570, 583, 604, 611, 622, 700, 757, 790, 844, 880, 933, 969, 972, 974, 991, 1118, 1169, 1171], "when": [21, 28, 30, 43, 62, 65, 76, 81, 111, 112, 133, 138, 143, 153, 159, 160, 169, 171, 172, 173, 174, 177, 179, 187, 189, 201, 204, 210, 233, 234, 241, 245, 247, 248, 250, 257, 258, 260, 263, 264, 277, 279, 288, 296, 297, 299, 306, 314, 330, 337, 355, 360, 369, 380, 387, 394, 402, 404, 410, 415, 426, 433, 437, 452, 457, 458, 459, 460, 461, 466, 476, 478, 481, 484, 488, 491, 492, 495, 496, 500, 520, 522, 553, 554, 598, 600, 601, 604, 612, 634, 650, 665, 666, 669, 671, 676, 678, 683, 687, 689, 694, 697, 699, 701, 702, 705, 722, 736, 741, 744, 749, 753, 754, 757, 761, 764, 766, 768, 788, 805, 808, 815, 819, 831, 833, 835, 837, 851, 870, 872, 876, 879, 881, 893, 897, 919, 930, 942, 943, 950, 954, 958, 959, 963, 966, 967, 985, 987, 993, 996, 997, 999, 1004, 1008, 1009, 1011, 1013, 1028, 1032, 1033, 1034, 1039, 1043, 1046, 1052, 1054, 1059, 1062, 1065, 1066, 1068, 1070, 1075, 1076, 1077, 1087, 1127, 1144, 1149, 1154, 1164, 1169, 1171, 1178, 1189, 1191, 1192], "void": [21, 42, 44, 55, 58, 108, 120, 122, 130, 134, 136, 138, 142, 174, 175, 183, 215, 233, 245, 369, 391, 392, 394, 398, 400, 402, 406, 412, 416, 430, 432, 433, 434, 435, 437, 440, 442, 443, 446, 449, 450, 452, 453, 459, 460, 463, 479, 486, 495, 496, 497, 501, 503, 507, 516, 525, 526, 530, 531, 534, 535, 536, 538, 550, 552, 553, 554, 577, 589, 596, 598, 599, 600, 601, 604, 605, 606, 607, 608, 609, 611, 612, 619, 625, 629, 638, 651, 665, 668, 669, 672, 674, 675, 684, 686, 694, 695, 700, 704, 707, 708, 722, 724, 725, 727, 728, 729, 730, 732, 733, 736, 737, 738, 739, 740, 741, 743, 744, 746, 751, 752, 753, 754, 756, 758, 761, 763, 766, 768, 770, 788, 798, 801, 808, 815, 817, 819, 821, 823, 831, 833, 842, 847, 851, 857, 874, 894, 955, 959, 960, 961, 963, 973, 980, 982, 984, 986, 990, 995, 1001, 1004, 1005, 1008, 1009, 1011, 1023, 1027, 1029, 1181], "f": [21, 31, 38, 43, 62, 110, 125, 137, 153, 158, 173, 174, 175, 183, 195, 205, 210, 211, 216, 217, 220, 222, 228, 229, 231, 232, 238, 240, 241, 244, 245, 247, 251, 253, 254, 257, 260, 264, 267, 269, 271, 273, 281, 282, 285, 289, 292, 297, 302, 306, 311, 313, 320, 324, 328, 335, 340, 346, 350, 361, 363, 365, 380, 406, 411, 421, 423, 432, 435, 440, 459, 460, 462, 466, 470, 478, 495, 601, 605, 621, 695, 701, 707, 708, 737, 758, 761, 796, 801, 863, 874, 881, 897, 916, 923, 925, 926, 941, 942, 943, 944, 966, 997, 999, 1004, 1019, 1023, 1026, 1030, 1032, 1033, 1034, 1035, 1047, 1049, 1051, 1052, 1055, 1056, 1057, 1076, 1077, 1085, 1093, 1098, 1131, 1133, 1136, 1144, 1169, 1199], "alloc": [21, 133, 174, 175, 192, 194, 233, 241, 244, 247, 257, 260, 282, 404, 433, 449, 454, 457, 460, 463, 501, 585, 587, 601, 603, 604, 611, 630, 635, 642, 647, 658, 662, 666, 691, 702, 705, 739, 744, 753, 754, 758, 788, 790, 793, 796, 798, 823, 825, 839, 842, 874, 880, 959, 960, 961, 981, 1041, 1093], "variabl": [21, 29, 88, 90, 91, 98, 105, 111, 112, 168, 173, 174, 183, 187, 191, 193, 194, 200, 204, 205, 208, 209, 210, 211, 213, 216, 217, 218, 223, 224, 229, 230, 232, 233, 235, 239, 242, 243, 245, 246, 247, 250, 251, 253, 255, 261, 262, 263, 264, 266, 268, 269, 271, 275, 278, 283, 284, 285, 287, 288, 291, 294, 297, 301, 303, 304, 305, 307, 308, 309, 310, 311, 317, 322, 323, 324, 326, 327, 329, 332, 333, 335, 338, 339, 341, 344, 345, 347, 348, 349, 351, 352, 353, 355, 356, 357, 358, 359, 360, 369, 371, 372, 391, 393, 394, 402, 407, 415, 422, 426, 427, 430, 431, 432, 436, 438, 439, 442, 444, 448, 449, 451, 452, 454, 455, 456, 462, 463, 464, 466, 468, 473, 474, 480, 482, 486, 488, 507, 515, 521, 530, 535, 540, 581, 586, 601, 609, 610, 617, 629, 669, 676, 691, 696, 702, 705, 707, 734, 736, 748, 767, 786, 787, 788, 789, 790, 806, 825, 837, 867, 868, 871, 874, 898, 917, 933, 974, 979, 982, 986, 987, 988, 993, 1011, 1021, 1022, 1023, 1028, 1030, 1032, 1035, 1036, 1042, 1043, 1044, 1045, 1046, 1050, 1058, 1062, 1064, 1069, 1073, 1075, 1077, 1078, 1081, 1086, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1143, 1146, 1149, 1150, 1156, 1158, 1163, 1164, 1190, 1192, 1199, 1205], "filenam": [21, 42, 50, 55, 58, 171, 191, 195, 220, 238, 241, 244, 245, 247, 252, 257, 260, 270, 285, 288, 301, 302, 306, 334, 340, 350, 361, 478, 537, 540, 554, 788, 837, 863, 864, 926, 964, 967, 968, 969, 970, 971, 975, 978, 1004, 1032, 1042, 1087, 1093, 1105, 1114, 1116, 1120, 1126, 1128], "getenv": [21, 535, 992], "fopen": 21, "read": [21, 29, 43, 47, 53, 55, 56, 57, 74, 75, 84, 86, 125, 147, 171, 172, 173, 174, 175, 177, 179, 182, 183, 187, 200, 204, 208, 209, 211, 213, 219, 229, 232, 239, 242, 245, 247, 248, 250, 252, 258, 260, 261, 266, 267, 269, 272, 279, 280, 281, 284, 288, 290, 292, 298, 302, 304, 305, 306, 309, 310, 311, 328, 332, 333, 334, 336, 337, 339, 340, 344, 345, 346, 348, 349, 354, 355, 356, 357, 358, 359, 369, 373, 375, 380, 399, 400, 407, 415, 422, 431, 438, 444, 448, 451, 452, 454, 455, 456, 458, 460, 463, 464, 468, 472, 473, 474, 477, 493, 500, 521, 537, 542, 553, 554, 577, 583, 594, 597, 598, 600, 603, 606, 609, 655, 659, 678, 681, 693, 696, 703, 711, 734, 748, 756, 784, 787, 788, 789, 790, 796, 810, 821, 837, 839, 863, 864, 865, 868, 874, 879, 880, 881, 882, 884, 885, 888, 897, 898, 930, 933, 937, 941, 942, 943, 950, 955, 957, 958, 960, 961, 964, 967, 970, 972, 973, 974, 975, 977, 978, 985, 987, 991, 995, 1001, 1004, 1005, 1008, 1009, 1028, 1034, 1035, 1050, 1053, 1055, 1063, 1071, 1094, 1095, 1105, 1114, 1124, 1129, 1130, 1131, 1132, 1133, 1134, 1136, 1142, 1144, 1152, 1159, 1202], "onli": [21, 29, 42, 43, 65, 90, 109, 111, 112, 125, 126, 130, 133, 143, 162, 168, 169, 171, 172, 174, 175, 176, 177, 178, 179, 182, 183, 187, 192, 193, 200, 204, 208, 210, 211, 229, 231, 234, 241, 244, 247, 250, 251, 252, 254, 257, 258, 260, 261, 263, 264, 269, 271, 272, 273, 284, 285, 288, 290, 291, 297, 301, 304, 306, 310, 311, 314, 323, 330, 332, 338, 339, 344, 345, 348, 349, 360, 363, 377, 384, 394, 400, 402, 403, 404, 406, 411, 412, 414, 419, 426, 427, 430, 432, 434, 435, 436, 437, 453, 454, 458, 459, 460, 461, 462, 471, 476, 478, 479, 481, 482, 485, 487, 490, 491, 495, 496, 497, 499, 507, 515, 516, 518, 520, 521, 522, 534, 535, 550, 551, 554, 557, 558, 572, 583, 596, 597, 598, 599, 601, 603, 605, 606, 609, 611, 612, 618, 632, 634, 650, 651, 655, 665, 666, 668, 672, 676, 680, 681, 688, 690, 694, 701, 705, 707, 711, 716, 722, 732, 736, 739, 743, 744, 748, 749, 753, 754, 760, 762, 764, 766, 768, 774, 778, 780, 781, 790, 793, 795, 798, 801, 806, 817, 823, 833, 837, 842, 845, 850, 854, 862, 863, 864, 865, 872, 875, 879, 881, 882, 887, 893, 897, 898, 919, 926, 934, 935, 936, 941, 942, 943, 944, 954, 959, 960, 963, 965, 966, 967, 971, 973, 977, 979, 982, 987, 990, 993, 995, 996, 997, 998, 1004, 1005, 1008, 1009, 1011, 1012, 1023, 1027, 1028, 1032, 1033, 1034, 1037, 1043, 1047, 1049, 1052, 1054, 1055, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1070, 1071, 1075, 1080, 1081, 1085, 1087, 1091, 1095, 1100, 1108, 1110, 1111, 1114, 1115, 1119, 1121, 1134, 1136, 1141, 1142, 1143, 1145, 1148, 1157, 1161, 1162, 1169, 1175, 1176, 1178, 1181, 1189, 1191, 1194, 1206], "bullshit": [21, 216, 228, 264, 481, 744, 1199], "everyon": [21, 172, 177, 187, 208, 476, 681, 732, 884, 885, 895, 997], "get": [21, 55, 62, 98, 111, 112, 153, 160, 161, 168, 169, 172, 174, 175, 182, 183, 191, 204, 205, 208, 210, 215, 222, 223, 224, 231, 233, 234, 241, 244, 247, 248, 250, 253, 254, 257, 260, 267, 273, 277, 279, 282, 285, 288, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 364, 369, 372, 374, 389, 415, 460, 469, 492, 496, 501, 516, 525, 530, 607, 614, 686, 694, 704, 722, 728, 748, 749, 752, 753, 754, 755, 757, 770, 780, 788, 790, 798, 803, 810, 837, 839, 853, 856, 870, 872, 876, 877, 897, 933, 943, 950, 953, 959, 960, 961, 974, 976, 981, 998, 1005, 1009, 1026, 1032, 1045, 1048, 1054, 1058, 1066, 1083, 1154, 1161, 1171, 1176, 1181, 1194], "point": [21, 34, 36, 38, 40, 60, 90, 98, 107, 110, 113, 114, 115, 118, 123, 125, 143, 171, 172, 173, 174, 176, 177, 178, 179, 182, 183, 187, 192, 193, 194, 195, 199, 204, 208, 209, 210, 211, 213, 231, 233, 234, 241, 244, 247, 250, 257, 260, 265, 268, 290, 299, 306, 323, 324, 326, 350, 355, 375, 376, 377, 380, 391, 392, 393, 398, 404, 406, 408, 410, 414, 436, 439, 442, 445, 446, 449, 450, 460, 462, 491, 496, 499, 506, 507, 515, 538, 540, 552, 572, 573, 574, 597, 599, 601, 603, 604, 605, 607, 608, 610, 613, 617, 628, 629, 637, 652, 653, 666, 671, 672, 691, 694, 697, 699, 701, 705, 711, 722, 744, 748, 753, 757, 769, 788, 790, 833, 837, 866, 874, 876, 880, 881, 897, 934, 935, 943, 953, 957, 960, 963, 996, 1009, 1012, 1025, 1029, 1030, 1031, 1033, 1037, 1045, 1071, 1075, 1077, 1080, 1143, 1145, 1147, 1149, 1169, 1171, 1178, 1181, 1186, 1190], "unobvi": [21, 837], "best": [21, 30, 39, 48, 57, 130, 172, 173, 174, 183, 196, 253, 402, 434, 456, 463, 466, 467, 476, 555, 599, 604, 668, 733, 746, 766, 825, 827, 829, 833, 835, 874, 897, 919, 935, 942, 943, 979, 993, 997, 1025, 1039, 1045, 1082, 1087, 1090, 1147, 1157], "resourc": [21, 81, 98, 111, 112, 172, 174, 177, 189, 199, 234, 250, 291, 294, 299, 336, 337, 372, 380, 508, 572, 586, 597, 601, 602, 666, 691, 702, 703, 705, 734, 739, 750, 751, 753, 754, 759, 766, 767, 787, 789, 790, 821, 823, 831, 870, 874, 875, 942, 959, 960, 961, 979, 993, 996, 1032, 1085], "leaki": 21, "erron": [21, 463, 1098], "worst": [21, 172, 434, 943, 995, 1008, 1189, 1192], "extract": [21, 29, 55, 98, 161, 165, 232, 258, 261, 266, 269, 281, 284, 304, 305, 310, 311, 332, 333, 339, 344, 345, 348, 349, 418, 437, 541, 542, 572, 583, 594, 788, 790, 837, 850, 863, 1025, 1050, 1072, 1095, 1129, 1130, 1131, 1132, 1134, 1142], "common": [21, 24, 164, 172, 229, 245, 246, 258, 264, 269, 340, 437, 446, 477, 552, 630, 757, 774, 778, 788, 862, 934, 935, 943, 967, 1004, 1034, 1039, 1040, 1041, 1057, 1066, 1067, 1071, 1077, 1081, 1084, 1136, 1144, 1145, 1169, 1192], "hm": [21, 32, 62, 212, 222, 241, 244, 247, 254, 361, 827, 853, 854, 961, 1054, 1140, 1171, 1176, 1178], "end": [21, 23, 32, 37, 42, 107, 166, 171, 174, 175, 177, 179, 182, 204, 205, 210, 211, 216, 220, 224, 244, 245, 247, 248, 250, 260, 264, 267, 270, 284, 285, 306, 312, 319, 324, 340, 346, 350, 360, 361, 398, 401, 405, 426, 442, 454, 458, 459, 460, 462, 465, 466, 469, 499, 521, 522, 530, 531, 534, 535, 536, 586, 589, 601, 625, 627, 629, 630, 631, 633, 634, 636, 637, 638, 640, 641, 643, 647, 650, 654, 655, 661, 678, 694, 722, 725, 729, 736, 742, 743, 744, 746, 751, 752, 765, 766, 829, 835, 837, 853, 880, 881, 882, 897, 925, 929, 930, 941, 943, 959, 960, 961, 963, 969, 985, 1004, 1037, 1057, 1061, 1063, 1070, 1073, 1077, 1081, 1085, 1157, 1159, 1161, 1164, 1199, 1202], "sketch": [21, 64, 67, 130, 143, 169, 175, 204, 211, 212, 224, 233, 234, 301, 323, 373, 377, 439, 440, 450, 462, 694, 794, 806, 1004], "clearest": 21, "ach": 21, "bad": [21, 43, 131, 168, 171, 174, 181, 196, 204, 229, 235, 251, 252, 254, 263, 264, 279, 300, 301, 322, 336, 415, 458, 462, 476, 618, 684, 734, 745, 752, 770, 789, 790, 805, 817, 842, 845, 954, 955, 980, 982, 986, 987, 1008, 1027, 1032, 1034, 1047, 1048, 1059, 1066, 1077, 1108, 1136, 1189], "earliest": 21, "noth": [21, 43, 62, 130, 162, 171, 172, 174, 177, 182, 187, 201, 212, 231, 244, 270, 323, 390, 429, 436, 460, 478, 485, 589, 668, 702, 709, 722, 736, 739, 805, 815, 833, 835, 869, 919, 934, 942, 943, 958, 960, 982, 1004, 1009, 1035, 1042, 1054, 1075, 1077, 1083, 1169, 1176, 1178], "jump": [21, 45, 105, 171, 426, 430, 589, 736, 739, 746, 876, 929, 1008, 1144], "outest": 21, "level": [21, 79, 172, 173, 183, 241, 247, 257, 260, 281, 314, 330, 380, 404, 430, 436, 476, 479, 481, 482, 488, 496, 504, 715, 716, 788, 819, 821, 833, 840, 849, 873, 934, 941, 950, 954, 1013, 1021, 1034, 1042, 1054, 1075, 1085, 1111, 1115, 1145, 1148, 1158, 1164, 1191], "cleanup_stage1": 21, "screenplai": [22, 59, 165, 174, 195, 199, 251, 263, 272, 290, 298, 300, 311, 319, 322, 323, 326, 327, 332, 333, 338, 339, 344, 345, 348, 349, 369, 477, 493, 501, 572, 575, 578, 581, 584, 587, 590, 593, 629, 630, 650, 794, 797, 802, 807, 811, 813, 849, 852, 855, 858, 1002, 1006, 1010, 1078, 1166, 1173, 1177, 1179, 1182], "dies": [23, 148, 180, 181, 186, 189, 190, 191, 199, 205, 215, 216, 220, 228, 235, 252, 254, 260, 261, 264, 369, 374, 387, 1184, 1186, 1187, 1188, 1193, 1199, 1200, 1202, 1206, 1207], "einreichungsunterlagen": 23, "diesem": [23, 181, 215, 1186, 1203], "formular": 23, "projekten": [23, 1200, 1201], "mehrer": [23, 148, 1193], "projektpartn": 23, "muss": [23, 195, 205, 215, 220, 261, 369, 374, 1184, 1186, 1193, 1200], "federf\u00fchrend": 23, "auftreten": 23, "projektleitung": 23, "projektabwicklung": 23, "seiten": 23, "f\u00f6rdergeb": 23, "erfolgtausschlie\u00dflich": 23, "federf\u00fchrenden": 23, "antragstel": 23, "s\u00e4mtlich": 23, "weiterenprojektpartn": 23, "innen": 23, "zus\u00e4tzlich": [23, 148, 180], "anzugeben": 23, "aufteilung": 23, "f\u00f6rdersumm": 23, "erfolgen": [23, 186, 216], "soll": [23, 181, 207, 236, 275, 1183], "punkt": [23, 148, 181, 191, 207, 217, 261], "erfolgreichemf\u00f6rderantrag": 23, "anschluss": 23, "f\u00f6rdervertrag": 23, "erstellt": 23, "derzuerkannten": 23, "\u00fcberweisungen": 23, "f\u00f6rderraten": 23, "anteil": 23, "dieprojektpartn": 23, "fall": [23, 148, 181, 190, 204, 207, 215, 220, 264, 275, 418, 426, 544, 716, 722, 819, 977, 978, 995, 1138, 1158], "allenprojektpartn": 23, "unterschreiben": 23, "verbindlich": 23, "vereinbart": 23, "privatperson": 23, "organis": [23, 233], "uni": 23, "contemporari": 23, "open": [23, 34, 35, 38, 39, 42, 48, 49, 54, 62, 69, 115, 120, 121, 125, 143, 171, 172, 175, 179, 187, 189, 193, 195, 209, 211, 213, 222, 231, 232, 234, 238, 241, 244, 245, 247, 252, 255, 260, 267, 270, 272, 285, 288, 290, 292, 297, 299, 302, 306, 328, 334, 340, 346, 350, 361, 376, 415, 476, 478, 484, 803, 831, 839, 864, 865, 873, 874, 876, 879, 881, 922, 941, 950, 958, 959, 964, 967, 969, 970, 973, 975, 978, 979, 1001, 1004, 1008, 1011, 1028, 1034, 1035, 1105, 1131, 1133, 1144, 1169, 1184, 1201, 1202], "wer": [23, 180], "unser": [23, 208, 216, 1184], "motiv": [23, 28, 98, 876, 895, 993, 1040, 1041], "300": [23, 191, 193, 205, 241, 244, 247, 252, 254, 260, 264, 267, 285, 306, 312, 328, 334, 340, 346, 350, 361, 392, 394, 396, 412, 436, 624, 625, 626, 627, 628, 630, 631, 632, 633, 647, 810], "zeichen": [23, 254], "lebe": 23, "einerseit": [23, 186], "kleineren": [23, 148], "gr\u00f6\u00dferen": [23, 1201], "andererseit": [23, 186], "haupts\u00e4chlich": [23, 216, 1199], "unternehmen": 23, "halt": [23, 111, 112, 215, 244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346, 870, 928, 943], "bringen": [23, 1184], "schulungsunterlagen": [23, 1183], "wartbarkeit": 23, "nichtverf\u00fcgbarkeit": 23, "problem": [23, 45, 57, 81, 108, 120, 125, 130, 160, 172, 179, 188, 191, 193, 195, 196, 202, 204, 205, 208, 209, 211, 213, 224, 228, 233, 250, 252, 258, 272, 277, 279, 290, 294, 297, 298, 300, 301, 309, 314, 315, 323, 326, 330, 331, 336, 337, 355, 376, 387, 415, 426, 436, 437, 440, 454, 460, 462, 478, 483, 507, 522, 566, 572, 607, 621, 634, 666, 669, 693, 766, 772, 783, 789, 790, 837, 876, 936, 997, 1021, 1023, 1027, 1032, 1037, 1039, 1042, 1043, 1054, 1066, 1080, 1131, 1136, 1138, 1142, 1161, 1169, 1170, 1184, 1191, 1192], "darstellt": 23, "wen": 23, "nutzen": [23, 1202], "400": [23, 169, 174, 191, 205, 215, 244, 247, 289, 306, 324, 340, 350, 478, 647, 1093, 1096], "stellen": [23, 186], "kursverlauf": 23, "vorhandenem": 23, "zusammen": [23, 148, 1183], "bereiten": [23, 215], "kursergebniss": 23, "editoren": 23, "kreieren": 23, "warten": 23, "kursmateri": 23, "endbenutz": 23, "konsumieren": 23, "usecas": [23, 954, 1057], "gel\u00f6st": [23, 205], "500": [23, 215, 222, 241, 244, 247, 289, 334, 340, 350, 647, 934, 961, 1093, 1096], "hierarchisch": 23, "gruppierung": 23, "einzelthemen": 23, "zuwenig": 23, "bauen": [23, 1186, 1196, 1205], "aufeinand": [23, 924], "explizit": [23, 189, 199, 205, 215, 275, 302, 1186, 1187, 1203], "abh\u00e4ngigkeitsbeziehungen": [23, 1196], "fehlen": 23, "extrem": [23, 172, 231, 252, 260, 267, 270, 292, 369, 374, 437, 476, 629, 698, 746, 837, 864, 865, 1148, 1184, 1196], "verringert": 23, "zusammenarbeit": [23, 1183], "trainern": 23, "fehlend": [23, 191], "aggregierbarkeit": 23, "bzw": [23, 180, 189, 195, 199, 221, 387, 1193, 1200, 1202], "referenzierbarkeit": 23, "fremdunterlagen": 23, "analog": [23, 205, 1004, 1154], "librari": [23, 62, 72, 75, 79, 86, 98, 104, 105, 107, 109, 111, 112, 125, 143, 148, 172, 174, 183, 191, 193, 195, 200, 201, 202, 209, 211, 213, 232, 234, 241, 247, 257, 260, 264, 276, 277, 288, 290, 314, 315, 330, 331, 337, 370, 371, 372, 387, 388, 391, 392, 401, 409, 432, 449, 459, 466, 472, 482, 483, 487, 488, 490, 491, 500, 514, 537, 540, 542, 543, 544, 545, 546, 547, 548, 549, 552, 554, 561, 580, 594, 595, 639, 645, 649, 657, 658, 659, 661, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 693, 711, 716, 742, 767, 788, 789, 790, 815, 867, 870, 871, 933, 954, 955, 956, 961, 962, 964, 971, 972, 974, 979, 982, 988, 991, 994, 996, 1008, 1011, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1021, 1023, 1058, 1060, 1075, 1077, 1080, 1148, 1165, 1178, 1186, 1188, 1190, 1191, 1202, 1204], "anfangen": 23, "geben": [23, 1187, 1188], "trainingsunterlagen": 23, "ging": [23, 180, 387], "funktioniert": [23, 205, 254], "projektergebni": 23, "basiert": [23, 275, 1184, 1187, 1196, 1203], "popul\u00e4ren": 23, "dokumentationstool": 23, "gestaltet": [23, 199, 1183, 1193], "eigentlich": [23, 191, 205, 1184, 1187], "kern": 23, "begleitet": [23, 207], "meinem": [23, 181, 190, 216, 925, 1199], "eigenen": [23, 1193, 1200], "quasi": [23, 148, 195, 199], "spin": [23, 766, 840, 874], "off": [23, 126, 133, 171, 173, 174, 177, 182, 193, 204, 224, 267, 415, 418, 457, 465, 466, 481, 487, 488, 543, 544, 549, 589, 669, 722, 757, 831, 842, 868, 893, 921, 934, 941, 943, 969, 978, 987, 997, 1004, 1063, 1081, 1116, 1141, 1194], "anwendbar": [23, 1206], "klarer": 23, "bezug": [23, 261], "f\u00f6rdervoraussetzung": 23, "bitt": [23, 180, 199, 205, 215, 216, 350, 1183, 1199], "gehen": 23, "folgenden": [23, 148, 199, 387, 925], "ausschlie\u00dflich": 23, "jene": 23, "aspekt": [23, 1185, 1193, 1200, 1203], "klaren": 23, "mehrwert": 23, "technologi": [23, 244, 995, 1011, 1093], "infrastruktur": [23, 1184, 1193, 1200], "sozial": 23, "gesellschaft": 23, "umwelt": 23, "wirtschaftlich": [23, 207], "wissenschaftlich": 23, "kooperationen": 23, "regionalpolitik": 23, "framework": [23, 79, 189, 199, 208, 234, 250, 492, 551, 941, 943, 1162, 1169, 1170, 1205, 1207], "jeglich": [23, 1193], "art": [23, 32, 45, 1023, 1192], "konsistenzgecheckt": 23, "crossreferenc": 23, "webseiten": 23, "hinweg": [23, 216, 1199], "erm\u00f6glicht": [23, 207, 387], "gesellschaftlich": 23, "\u00f6ffentlich": [23, 186, 1183], "verf\u00fcgbarkeit": 23, "erleichterung": 23, "machen": [23, 180, 191, 195, 205, 254, 364, 387, 1184, 1187, 1188, 1193, 1207], "commun": [23, 62, 73, 74, 75, 79, 82, 84, 88, 123, 157, 160, 172, 187, 196, 204, 219, 288, 323, 366, 375, 376, 452, 496, 767, 768, 789, 790, 796, 837, 849, 870, 933, 934, 941, 942, 943, 958, 963, 974, 979, 988, 995, 998, 1004, 1009, 1043, 1132, 1135, 1152, 1189, 1192, 1194, 1203, 1204], "trainerinnen": 23, "kann": [23, 37, 180, 181, 189, 195, 199, 205, 215, 228, 235, 275, 328, 369, 374, 387, 1183, 1184, 1186, 1188, 1193, 1200, 1201, 1202, 1205, 1207], "sch\u00f6pfen": 23, "trainerinnenn": 23, "gegeneinand": 23, "genau": [23, 189, 191, 205, 364, 925, 1186, 1203, 1205, 1206], "die_der": 23, "adressat_in": 23, "je": [23, 32, 181, 215], "konkret": 23, "eingrenzen": 23, "desto": 23, "dieser": [23, 37, 180, 199, 215, 267, 364, 387, 1183, 1184, 1185, 1193, 1195, 1196, 1202, 1203], "adressat_innen": 23, "ber\u00fccksichtigen": 23, "wahrscheinlich": [23, 195, 1193, 1200], "deshalb": 23, "nachhaltig": 23, "wirkung": 23, "weil": [23, 191, 205, 207, 228, 267, 324, 387, 1184, 1186, 1188], "speziellen": 23, "konzepten": 23, "unterschiedlich": [23, 216, 261, 1199], "zielgruppen": 23, "beziehung": [23, 199], "zueinand": 23, "stehen": [23, 205, 1205], "anbieter_innen": 23, "nachfrager_innen": 23, "drei": [23, 148, 180, 191, 199, 205, 215, 220, 222, 241, 244, 252, 254, 257, 260, 267, 270, 285, 292, 302, 306, 312, 324, 328, 346, 350, 364], "angeben": 23, "m\u00f6glichst": 23, "erheblich": 23, "ihrer": [23, 252, 369, 374, 1193, 1200], "jeweiligen": [23, 1183], "sein": [23, 181, 189, 190, 207, 215, 216, 228, 254, 292, 1184, 1186, 1199, 1200, 1202, 1205, 1206, 1207], "dann": [23, 181, 191, 199, 205, 216, 254, 260, 261, 267, 302, 387, 1184, 1196, 1199, 1207], "einzelnen": 23, "aussieht": [23, 1185], "erst": [23, 199, 215, 228, 254, 261, 267, 285, 324, 340, 364, 1184, 1186], "bestandteil": [23, 1205], "n": [23, 35, 38, 40, 50, 62, 112, 122, 153, 174, 183, 191, 192, 193, 199, 205, 215, 220, 222, 223, 231, 233, 236, 237, 238, 241, 244, 245, 247, 250, 252, 254, 257, 260, 264, 267, 270, 282, 285, 292, 296, 302, 306, 324, 328, 334, 340, 346, 350, 360, 361, 362, 364, 369, 391, 392, 394, 398, 400, 402, 404, 406, 411, 414, 424, 426, 432, 433, 437, 442, 450, 454, 459, 478, 479, 486, 553, 586, 605, 611, 629, 675, 676, 679, 680, 682, 683, 686, 687, 688, 689, 690, 691, 699, 701, 716, 790, 815, 851, 870, 874, 884, 894, 897, 910, 926, 928, 929, 943, 955, 957, 958, 959, 960, 961, 967, 968, 970, 995, 1001, 1005, 1008, 1011, 1017, 1023, 1027, 1029, 1054, 1055, 1057, 1072, 1074, 1079, 1080, 1085, 1086, 1131, 1133, 1169, 1181], "l\u00f6sen": 23, "wollen": [23, 37, 220, 387, 1188, 1193, 1196, 1200, 1202], "hilfestellung": 23, "abgrenzung": 23, "organisationen": 23, "privatpersonen": 23, "bestimmt": 23, "branch": [23, 50, 54, 60, 123, 153, 164, 175, 178, 187, 291, 294, 430, 471, 472, 780, 810, 837, 839, 849, 941, 943, 1070, 1201, 1207], "gruppen": 23, "staatlich": 23, "verwaltung": 23, "privat": [23, 57, 103, 108, 115, 120, 121, 125, 143, 174, 186, 187, 199, 201, 208, 209, 212, 232, 245, 250, 262, 281, 297, 299, 319, 353, 368, 369, 374, 486, 490, 495, 497, 501, 503, 508, 518, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 540, 580, 586, 595, 599, 601, 603, 604, 606, 607, 608, 610, 612, 622, 637, 638, 655, 665, 667, 668, 680, 691, 694, 697, 698, 700, 701, 704, 705, 716, 718, 719, 720, 722, 724, 725, 728, 729, 730, 731, 737, 738, 739, 752, 753, 754, 757, 758, 766, 768, 774, 776, 778, 780, 790, 831, 866, 867, 872, 886, 892, 933, 950, 1055, 1164, 1181, 1203], "verein": 23, "npo": 23, "wissenschaft": 23, "universit\u00e4t": 23, "fachhochschulen": 23, "richtungen": 23, "regionen": 23, "stadt": [23, 237], "land": [23, 484, 775], "bezirk": 23, "gemeinden": 23, "interessensgruppen": 23, "selbstvermarkter_innen": 23, "landwirtschaft": 23, "handwerk": 23, "u": [23, 32, 34, 35, 36, 38, 42, 53, 61, 63, 125, 150, 153, 174, 177, 182, 192, 202, 205, 208, 210, 216, 233, 244, 248, 252, 254, 257, 260, 282, 289, 306, 326, 414, 445, 470, 754, 806, 812, 847, 874, 882, 893, 894, 896, 897, 921, 934, 941, 943, 962, 999, 1008, 1011, 1021, 1029, 1066, 1068, 1093, 1144, 1148, 1152, 1164, 1169, 1176, 1192, 1199], "altersgrupp": 23, "genderspezifisch": 23, "frauen": 23, "region": [23, 172, 793, 821], "grupp": [23, 220, 378, 925], "sch\u00fcler_innen": 23, "lehrer_innen": 23, "thematisch": 23, "deutsch": [23, 236, 367, 368, 1183], "fl\u00fcchtling": 23, "posit": [23, 29, 62, 123, 179, 205, 208, 209, 211, 213, 215, 220, 228, 232, 241, 248, 252, 257, 258, 260, 267, 270, 281, 284, 291, 294, 296, 298, 300, 301, 304, 306, 310, 312, 316, 319, 322, 323, 326, 327, 328, 334, 340, 355, 400, 437, 450, 589, 630, 637, 646, 647, 770, 790, 897, 934, 942, 958, 959, 963, 1004, 1032, 1033, 1036, 1077, 1078, 1080, 1081, 1082, 1134, 1149, 1157, 1171, 1176], "zielgruppentyp": 23, "350": [23, 244, 247, 292, 306, 334, 340, 346, 350, 1093], "bereitet": 23, "vor": [23, 180, 181, 195, 205, 217, 252, 350, 1196, 1205], "lt": [23, 32, 35, 36, 174, 179, 191, 194, 199, 200, 205, 210, 215, 220, 222, 228, 231, 236, 241, 244, 247, 252, 254, 257, 260, 264, 267, 270, 273, 282, 285, 289, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 363, 364, 365, 542, 559, 561, 594, 639, 645, 649, 658, 661, 662, 691, 790], "zielvorgaben": 23, "basierend": [23, 191, 1183, 1188], "existierendem": 23, "f\u00fchrt": [23, 181, 1203], "jederzeit": [23, 186, 195, 387], "\u00fcberblick": [23, 195, 199, 261, 275, 387, 388, 1183, 1191, 1193, 1199, 1200, 1203, 1205], "behaltend": 23, "behandelten": 23, "fragen": [23, 207, 223, 369, 374, 387, 1183, 1193, 1200], "antworten": [23, 207], "info": [23, 182, 289, 290, 340, 466, 470, 471, 472, 478, 479, 481, 604, 753, 812, 942, 982, 1012, 1013, 1169], "bed\u00fcrfni": [23, 180], "schulungsagenden": 23, "erstellen": [23, 387, 1188, 1193], "zeitaufw\u00e4ndig": 23, "fehlertr\u00e4chtig": 23, "vom": [23, 154, 180, 189, 190, 191, 205, 215, 216, 235, 260, 264, 1193, 1199, 1200, 1207], "erwartet": [23, 181, 205], "w\u00e4hrend": [23, 148, 1183], "einzugehen": [23, 207, 1206], "geplanten": [23, 1183], "verlassen": [23, 859], "birgt": 23, "chao": [23, 895, 1066], "teilnehmerinnen": 23, "\u00fcbersichtlich": 23, "nachbearbeitung": 23, "hinterlassen": [23, 180], "absch\u00e4tzung": 23, "zielgruppengr\u00f6\u00df": 23, "affinem": 23, "background": [23, 183, 276, 277, 279, 336, 337, 692, 696, 722, 734, 761, 787, 789, 790, 812, 875, 942, 980, 989, 995, 1043], "inklus": [23, 192, 205, 215, 228, 340, 1183, 1188, 1193], "betroffen": 23, "eu": [23, 32], "20000": [23, 171, 247], "erkennung": 23, "abstand": 23, "erfordert": [23, 1193], "vgl": [23, 205, 1203, 1206], "frosch": 23, "wassergla": 23, "selbst": [23, 37, 195, 205, 215, 859, 1183, 1184, 1193, 1196, 1202, 1207], "umstellung": 23, "zus\u00e4tzlichen": 23, "bedeutet": [23, 336], "besten": [23, 195, 261, 1186], "einsatz": [23, 1184], "erw\u00e4gung": 23, "ziehen": 23, "angegebenen": [23, 148], "erheblichen": [23, 1186], "bed\u00fcrfnissen": 23, "kenntni": 23, "erlangt": 23, "mitgli": 23, "editor": [23, 30, 62, 187, 204, 355, 922, 1059, 1063, 1143, 1162], "verfasst": 23, "identisch": 23, "obig": 23, "behebt": 23, "inkonsistenzen": 23, "baut": [23, 1184, 1202], "neue": [23, 205, 215, 247, 275, 324, 340, 364, 387, 1203], "verliert": [23, 1207], "aufbaubeziehungen": 23, "verlangt": [23, 1183], "grundlag": 23, "folienmateri": 23, "meist": [23, 1202], "powerpoint": [23, 30], "propriet\u00e4r": 23, "formaten": 23, "praktisch": [23, 148, 191, 1183], "unm\u00f6glich": 23, "macht": [23, 189, 191, 195, 199, 205, 211, 215, 257, 261, 364, 1186, 1193, 1200, 1207], "artefakttypen": 23, "livehack": [23, 24, 59, 125, 165, 191, 197, 199, 208, 209, 216, 235, 248, 250, 251, 263, 272, 277, 279, 280, 288, 291, 298, 300, 305, 311, 316, 319, 322, 323, 326, 327, 332, 333, 338, 339, 344, 345, 348, 349, 369, 387, 477, 493, 500, 572, 788, 790, 802, 839, 1078, 1166, 1173, 1199], "st\u00fcckwerk": 23, "trainerin": 23, "oben": [23, 131, 148, 180, 205, 216, 222, 1199], "zielt": 23, "darauf": [23, 180, 191, 1183, 1186], "transpar": [23, 29, 37, 821, 823, 873, 1149], "wiederzuverwenden": 23, "sodass": [23, 37, 199, 1202, 1207], "aufgebrochen": 23, "schwer": [23, 195, 205, 387, 1193, 1200, 1205], "abzusch\u00e4tzen": 23, "abzielt": 23, "weg": [23, 180, 181, 191, 195, 207, 220, 235, 275, 387, 1184, 1186, 1187, 1188, 1200], "dorthin": 23, "m\u00fcssen": [23, 148, 205, 369, 374, 1193, 1200], "unterst\u00fctzt": [23, 1207], "kursf\u00fchrung": [23, 387], "fragt": [23, 181], "unklarheiten": 23, "weist": [23, 180], "etwaig": 23, "verwandt": [23, 1186], "hin": [23, 387], "plausibl": [23, 174], "realistisch": 23, "bzgl": 23, "kursdauer": 23, "strukturierten": [23, 216], "langweiligen": 23, "tatsachen": 23, "entsprechend": 23, "hunderttausend": 23, "allerd": [23, 205, 207, 1187, 1188, 1202, 1207], "keinen": [23, 180, 324, 1186], "einfluss": 23, "wahl": [23, 1207], "gespr\u00e4ch": 23, "betroffenen": 23, "assoziieren": 23, "metadaten": 23, "setzt": [23, 148, 189, 1184, 1193], "vorau": 23, "beziehungen": 23, "passt": [23, 215, 216, 1199], "ganz": [23, 180, 181, 190, 191, 195, 205, 207, 221, 222, 236, 253, 254, 350, 387, 1187, 1188, 1202], "gut": [23, 148, 180, 181, 205, 216, 387, 705, 1183, 1199], "y": [23, 112, 150, 153, 183, 192, 193, 195, 222, 231, 237, 238, 244, 245, 247, 248, 260, 270, 273, 282, 285, 292, 302, 306, 312, 328, 334, 346, 350, 415, 421, 439, 442, 445, 446, 450, 462, 466, 478, 540, 550, 596, 597, 598, 599, 601, 603, 604, 605, 606, 607, 608, 610, 612, 614, 615, 622, 629, 637, 676, 697, 698, 699, 701, 716, 718, 719, 720, 737, 748, 757, 805, 806, 837, 838, 870, 884, 897, 899, 910, 916, 941, 942, 943, 1017, 1025, 1031, 1090, 1093, 1141], "algorithmen": [23, 275, 1188], "automatisch": [23, 1203, 1207], "berechnen": 23, "semiautomatisch": 23, "kursnavig": 23, "nachbereitung": 23, "plaintext": 23, "artefakt": [23, 1188], "text": [23, 27, 39, 40, 59, 168, 182, 193, 204, 207, 212, 213, 220, 232, 233, 238, 245, 252, 254, 272, 275, 278, 285, 287, 306, 308, 350, 352, 411, 485, 790, 867, 929, 933, 960, 1011, 1059, 1066, 1072, 1081, 1091, 1114, 1148, 1155, 1160, 1162, 1196], "restrukturierung": 23, "o": [23, 29, 32, 38, 62, 79, 86, 91, 98, 99, 101, 108, 111, 112, 125, 138, 142, 147, 150, 165, 172, 174, 175, 182, 183, 191, 195, 199, 209, 211, 212, 213, 215, 220, 222, 223, 229, 232, 233, 237, 239, 242, 243, 244, 245, 248, 249, 250, 251, 256, 257, 261, 262, 263, 264, 266, 268, 271, 273, 275, 278, 282, 284, 287, 288, 289, 291, 292, 294, 297, 298, 301, 303, 304, 305, 307, 308, 310, 312, 322, 324, 326, 327, 332, 333, 334, 338, 339, 341, 344, 345, 347, 348, 351, 352, 354, 355, 356, 357, 358, 359, 360, 369, 374, 376, 387, 389, 391, 407, 422, 431, 437, 438, 442, 444, 448, 451, 454, 455, 464, 466, 468, 470, 471, 473, 474, 478, 479, 485, 490, 504, 531, 542, 553, 594, 612, 696, 734, 760, 766, 767, 768, 787, 788, 789, 790, 805, 806, 814, 815, 837, 844, 863, 864, 865, 866, 867, 868, 870, 871, 873, 874, 882, 894, 897, 901, 902, 904, 905, 908, 909, 911, 917, 925, 926, 930, 933, 934, 941, 942, 954, 964, 967, 968, 969, 970, 971, 974, 979, 980, 988, 991, 994, 995, 996, 1005, 1011, 1012, 1013, 1017, 1019, 1023, 1027, 1028, 1029, 1032, 1034, 1036, 1037, 1038, 1042, 1058, 1061, 1064, 1066, 1072, 1080, 1087, 1088, 1093, 1094, 1095, 1105, 1108, 1116, 1119, 1120, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1136, 1141, 1149, 1150, 1164, 1169, 1176, 1186, 1193, 1206], "konsistent": 23, "referenzierung": 23, "fremdmateri": 23, "speisekart": 23, "unterst\u00fctzung": 23, "themenauswahl": [23, 1183], "korrekt": [23, 1186], "vorbereitet": [23, 387], "ma\u00dfnahmen": 23, "sicherstellung": 23, "geplant": 23, "beispielsweis": [23, 186, 1206], "rahmen": 23, "webplattform": 23, "entsteht": 23, "erh\u00f6hung": 23, "sichtbarkeit": [23, 1186, 1203], "aktuel": 23, "inhalt": [23, 205, 207, 237, 370, 859, 1183, 1207], "wartung": 23, "performanceverbesserungen": 23, "plane": [23, 193, 195, 1138], "kein": [23, 148, 190, 191, 195, 205, 215, 222, 237, 273, 292, 350, 364, 387, 1201], "impactmein": 23, "sicherzustellen": 23, "erkl\u00e4rung": [23, 229], "erkl\u00e4ren": [23, 1186], "gew\u00fcnscht": [23, 205], "erreicht": [23, 180, 181, 1200], "hatt": [23, 180, 181, 195, 205, 207], "button": [23, 65, 125, 171, 179, 258, 934], "gew\u00e4hlt": [23, 180, 181], "dzugeh\u00f6rig": 23, "textfeld": 23, "l\u00e4sst": [23, 1202], "bearbeiten": 23, "daher": [23, 1207], "konvertiert": 23, "unten": [23, 131, 181, 195, 205, 1184], "beschriebenen": 23, "kan\u00e4len": 23, "promot": [23, 176], "angab": 23, "quellen": 23, "literatur": [23, 233, 609], "lightweight": [23, 162, 187, 204, 208, 224, 258, 260, 272, 697, 755, 758, 1136, 1148, 1189], "daringfirebal": 23, "project": [23, 24, 29, 30, 38, 42, 53, 61, 63, 65, 66, 69, 107, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 142, 147, 150, 153, 162, 168, 169, 172, 173, 175, 177, 178, 179, 184, 191, 193, 195, 201, 204, 208, 211, 218, 223, 232, 251, 255, 258, 261, 288, 291, 298, 305, 337, 373, 374, 380, 382, 387, 388, 458, 465, 469, 477, 479, 480, 481, 484, 485, 487, 489, 492, 493, 494, 500, 540, 541, 550, 553, 613, 615, 616, 760, 790, 837, 876, 932, 934, 936, 941, 942, 953, 971, 1011, 1012, 1013, 1026, 1027, 1035, 1038, 1089, 1095, 1122, 1124, 1134, 1135, 1137, 1138, 1142, 1150, 1152, 1166, 1168, 1172, 1173, 1178], "docutil": [23, 32, 34, 35, 36, 38], "sourceforg": 23, "io": [23, 32, 55, 62, 92, 138, 142, 172, 176, 178, 193, 195, 209, 211, 212, 213, 214, 221, 223, 224, 232, 233, 246, 262, 278, 285, 287, 293, 308, 309, 323, 329, 335, 352, 353, 357, 369, 372, 374, 376, 391, 595, 788, 790, 814, 833, 834, 849, 867, 870, 878, 933, 942, 943, 996, 1004, 1025, 1032, 1085, 1185, 1193, 1195, 1200, 1202, 1206], "generatoren": [23, 195, 262, 387], "staticgen": 23, "learn": [23, 29, 69, 71, 76, 78, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 151, 172, 174, 192, 193, 195, 204, 208, 212, 233, 242, 322, 326, 351, 355, 370, 372, 476, 740, 790, 879, 934, 942, 996, 1058, 1059, 1134, 1138, 1142, 1150, 1171], "moodl": [23, 107, 110, 111, 112, 125, 147, 148, 179, 353, 373, 375, 376, 677, 691, 790, 867, 871, 886, 892, 911, 917, 933, 1018, 1021], "schoologi": 23, "eduongo": 23, "produkt": 23, "dienstleistungen": 23, "recherch": [23, 195], "hinblick": [23, 1195], "ihnen": [23, 181, 924, 1183, 1193, 1200], "nennen": 23, "beschreiben": 23, "st\u00e4rken": [23, 1186], "schw\u00e4chen": [23, 1188], "konkurrierenden": 23, "relevant": [23, 195, 387, 1206], "anbiet": 23, "ziel": [23, 1184, 1200], "allumfassend": 23, "eh": [23, 32, 205, 215, 220, 228, 254, 260, 264, 267, 312, 334], "vielmehr": 23, "bietet": [23, 186, 189, 1202], "beim": [23, 180, 181, 191, 195, 205, 1186], "verfassen": 23, "kernthema": 23, "zwischen": [23, 189, 205, 215, 222, 228, 387, 1186, 1187, 1188, 1200, 1207], "benutz": [23, 1203], "vorgaben": 23, "existiert": [23, 205, 217], "wald": 23, "dass": [23, 180, 181, 189, 191, 195, 199, 205, 216, 220, 222, 236, 369, 374, 387, 1183, 1186, 1187, 1188, 1193, 1199, 1200, 1203, 1207], "beisteuert": 23, "eben": [23, 186, 189, 215], "\u00fcbergreifend": 23, "definiert": [23, 191, 205, 1183, 1186], "ansatz": 23, "mir": [23, 180, 181, 195, 205, 216, 220, 252, 369, 374, 387, 1186, 1199], "verfolgt": [23, 1200], "essentiel": 23, "gesundheit": 23, "unterlagen": [23, 168, 235, 251, 263, 387], "licht": 23, "lesen": [23, 189, 190, 191, 205, 217, 369, 374], "einig": [23, 181, 192, 207, 387, 1186, 1193], "plugin": [23, 174, 504, 741, 1025], "helfen": 23, "lieblo": 23, "halbherzig": 23, "On": [23, 98, 102, 107, 110, 111, 112, 125, 147, 150, 172, 174, 187, 208, 224, 234, 250, 266, 268, 276, 277, 279, 282, 288, 294, 297, 336, 350, 369, 454, 460, 469, 472, 504, 542, 550, 639, 658, 662, 691, 694, 734, 742, 761, 789, 790, 815, 838, 842, 867, 870, 871, 933, 935, 941, 943, 950, 954, 955, 958, 962, 969, 972, 974, 991, 999, 1009, 1014, 1021, 1022, 1026, 1064, 1152, 1156, 1171, 1189], "zentral": [23, 168], "ergebni": [23, 257], "niemand": 23, "doc": [23, 37, 39, 126, 138, 142, 153, 176, 178, 191, 192, 194, 224, 232, 239, 241, 247, 256, 257, 260, 264, 267, 282, 325, 354, 366, 369, 374, 377, 378, 389, 589, 793, 808, 814, 817, 897, 919, 977, 1080, 1147], "show": [23, 24, 27, 29, 43, 58, 62, 66, 120, 125, 134, 138, 143, 171, 172, 174, 175, 179, 200, 208, 211, 212, 224, 233, 241, 247, 250, 257, 258, 260, 288, 300, 301, 314, 322, 330, 336, 337, 350, 354, 355, 373, 375, 376, 377, 380, 439, 479, 481, 490, 521, 537, 543, 589, 678, 775, 800, 819, 821, 853, 864, 865, 897, 919, 922, 924, 926, 934, 936, 941, 942, 943, 962, 993, 995, 999, 1004, 1008, 1021, 1023, 1031, 1070, 1087, 1090, 1141, 1142, 1164, 1171, 1178, 1191], "revealj": 23, "option": [23, 31, 79, 166, 172, 173, 174, 178, 182, 187, 191, 196, 212, 224, 248, 260, 264, 272, 275, 276, 277, 285, 290, 294, 306, 314, 315, 323, 326, 330, 331, 336, 340, 369, 389, 398, 399, 415, 426, 427, 466, 479, 482, 483, 491, 492, 498, 525, 553, 775, 790, 806, 857, 861, 864, 865, 873, 925, 943, 944, 946, 954, 967, 971, 1005, 1013, 1069, 1087, 1091, 1164, 1171, 1178, 1186, 1191, 1204], "webslid": 23, "tv": [23, 32, 179], "sicht": [23, 190, 261, 1186], "entscheidend": 23, "usp": 23, "vorteilhaft": 23, "unterscheidet": [23, 1186], "600": [23, 241, 247, 647], "kernfeatur": 23, "inbeziehungsetzen": 23, "dessen": [23, 190, 205, 302, 387, 1184, 1188, 1201], "versagen": 23, "implementierung": 23, "solcher": [23, 189, 205], "featur": [23, 29, 42, 46, 55, 56, 65, 79, 81, 123, 125, 143, 177, 179, 189, 200, 205, 208, 209, 211, 213, 218, 223, 232, 241, 247, 250, 257, 258, 260, 261, 263, 264, 303, 336, 371, 387, 388, 464, 468, 473, 474, 476, 477, 479, 668, 693, 696, 703, 710, 721, 735, 745, 746, 750, 754, 759, 767, 786, 787, 789, 790, 829, 837, 934, 942, 943, 963, 995, 1005, 1012, 1013, 1029, 1043, 1044, 1045, 1046, 1050, 1053, 1060, 1072, 1073, 1089, 1092, 1093, 1094, 1095, 1108, 1119, 1122, 1123, 1124, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1137, 1138, 1139, 1142, 1146, 1150, 1152, 1154, 1163, 1166, 1168, 1169, 1173, 1184, 1186, 1187, 1189, 1193, 1200], "indem": [23, 215, 370, 1193], "foku": [23, 387], "schulbetrieb": 23, "legen": [23, 924], "ferner": 23, "schwere": 23, "abh\u00e4ngigkeiten": [23, 1196], "fett": [23, 205, 222], "datenbanken": [23, 228, 387], "webserv": [23, 942], "hintergrund": [23, 215], "redaktionel": 23, "arbeit": [23, 195, 1184], "offlin": 23, "laptop": [23, 173, 175, 182, 953], "zug": 23, "erledigen": [23, 1184], "einschr\u00e4nkung": 23, "geserv": 23, "erarbeitet": [23, 1183], "sinn": [23, 199, 1186], "prinzip": [23, 1203, 1205, 1207], "kostenlo": 23, "genutzt": [23, 189], "weiterentwickelt": [23, 1188, 1193], "f\u00f6rderbedingungen": 23, "projektseit": 23, "ver\u00f6ffentlichen": 23, "nachvollziehbar": 23, "strukturieren": 23, "f\u00f6rderzusag": 23, "hinwei": 23, "verpflichtend": 23, "gesondert": 23, "erw\u00e4hnen": 23, "projektzwischenbericht": 23, "projektzusammenfassung": 23, "projektendbericht": 23, "entwicklerdokument": 23, "anwenderdokument": 23, "dienstleistungsbeschreibung": 23, "abh\u00e4ngig": 23, "dokument": [23, 148, 190, 205, 216, 237, 252, 264, 324, 364, 1201], "externkommunik": 23, "erreichung": 23, "nachhaltigkeit": 23, "projektergebnistyp": 23, "haupteigenschaften": 23, "funktionalit\u00e4t": [23, 205], "sourcecod": [23, 189], "bestehend": 23, "unabh\u00e4ngigem": 23, "unitgetestetem": 23, "core": [23, 61, 63, 171, 172, 174, 175, 204, 207, 211, 216, 229, 244, 255, 258, 260, 267, 270, 285, 289, 292, 302, 306, 328, 334, 340, 346, 392, 404, 449, 493, 494, 501, 506, 520, 521, 552, 604, 609, 702, 732, 752, 808, 812, 837, 874, 912, 928, 993, 996, 997, 1008, 1009, 1025, 1093, 1136, 1141, 1154, 1155, 1157, 1158, 1169, 1204], "reih": [23, 186, 199, 207], "direct": [23, 37, 39, 62, 125, 142, 153, 169, 172, 233, 291, 294, 355, 426, 437, 472, 485, 612, 758, 796, 873, 930, 957, 959, 975, 977, 978, 1013, 1027, 1054, 1141, 1149, 1158, 1191, 1194], "generierten": 23, "kursagenda": 23, "graphen": 23, "lizenz": 23, "gpl": [23, 604, 753, 793], "pypi": [23, 66, 151, 168, 204, 208, 223, 239, 255, 281, 1163, 1164, 1169], "installierbar": 23, "paket": [23, 189, 1184], "generiert": [23, 205], "readthedoc": [23, 32, 39], "gehostet": 23, "verf\u00fcgbar": [23, 997, 1196], "obigen": 23, "bisherigen": [23, 1188], "aktuellen": [23, 215], "bereich": [23, 195, 387], "umfeld": 23, "projektantrag": 23, "bisher": [23, 168, 1183], "softwarebasi": 23, "grundlegend": [23, 217, 1188, 1193, 1200, 1202, 1205], "semiprofessionel": 23, "visualisierung": 23, "plan": [23, 42, 60, 171, 195, 204, 239, 248, 258, 323, 368, 369, 373, 377, 383, 476, 592, 702, 760, 837, 1169, 1176], "kurz": [23, 180, 181, 205, 207, 216, 221, 236, 261, 1185, 1199, 1202], "lebensl\u00e4uf": 23, "projektbeteiligten": 23, "sowi": [23, 1196], "ver\u00f6ffentlichungen": 23, "b\u00fccher": 23, "fachartikel": 23, "patent": 23, "vortr\u00e4g": 23, "gebiet": [23, 181, 1205], "projektinhalt": 23, "verdeutlichen": [23, 1184], "teamleitung": 23, "softwareprojekt": 23, "stefan": [23, 190], "walkner": 23, "1983": [23, 595], "hallein": 23, "master": [23, 60, 150, 175, 178, 187, 370, 371, 833, 837, 926, 938], "scienc": [23, 28, 79, 179, 193, 204, 208, 213, 242, 311, 325, 347, 371, 595, 648, 1060, 1140, 1141, 1142, 1143], "salzburg": 23, "consult": [23, 61, 63, 65, 169, 172, 185, 223, 241, 247, 257, 260, 264, 375, 501], "isamberth": 23, "adnet": 23, "2000": [23, 228, 231, 247, 252, 264, 285, 478, 504, 997], "2002": [23, 247, 604, 753], "divers": [23, 196, 1185], "2005": [23, 595], "2007": 23, "entwicklungsleit": 23, "nextsens": 23, "2016": [23, 207, 208, 229, 232, 247, 255, 281, 288, 296, 305, 327, 1136], "programmiererfahrung": [23, 1193, 1200, 1207], "bash": [23, 100, 125, 169, 179, 188, 212, 222, 224, 244, 252, 260, 267, 270, 278, 285, 287, 288, 292, 299, 302, 306, 308, 328, 334, 340, 346, 352, 369, 370, 371, 374, 376, 388, 500, 514, 542, 543, 544, 545, 546, 547, 548, 549, 552, 594, 744, 747, 767, 788, 789, 790, 860, 864, 865, 866, 867, 869, 870, 871, 872, 874, 875, 878, 879, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 897, 898, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 922, 927, 928, 933, 956, 959, 962, 964, 966, 969, 972, 974, 975, 988, 990, 991, 994, 996, 1011, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1025, 1032, 1114, 1184, 1195], "davon": [23, 180, 191, 1186, 1205], "teamleit": 23, "m\u00f6chten": [23, 1207], "ggf": 23, "kennenlernen": 23, "knackig": [23, 168], "darstellung": 23, "handelnden": 23, "personen": 23, "sendung": 23, "minuten": [23, 925], "millionen": 23, "ihren": [23, 205, 217], "antrag": 23, "nochmal": 23, "vorgelesen": 23, "bekommen": [23, 199, 387, 1183, 1196], "un": [23, 199, 207, 387, 815, 921, 1054, 1184], "hintergrundmusik": 23, "windger\u00e4usch": 23, "gerad": [23, 181, 215, 216, 387, 1186, 1199], "f\u00f6rdern": 23, "sollen": 23, "animiert": 23, "produktvideo": 23, "interessieren": 23, "sicher": [23, 191, 195], "mindesten": [23, 191], "vier": [23, 191, 205, 215, 220, 222, 237, 241, 244, 252, 254, 257, 264, 270, 282, 285, 289, 292, 302, 312, 324, 328, 340, 350, 364, 1193, 1206], "monat": 23, "einreichschluss": 23, "uneingeschr\u00e4nkt": 23, "aufrufbar": 23, "youtu": [23, 747, 751], "hobyb1zukdi": 23, "projektrisiken": 23, "sehen": [23, 181], "wenig": [23, 190, 205, 275, 387, 1184], "pflegen": 23, "frontalen": 23, "vortragsstil": 23, "starker": 23, "paradigmenwechsel": 23, "wechsel": 23, "jahrelang": 23, "gewohnten": 23, "verfahrensweisen": 23, "abrupt": 23, "gro\u00dfer": 23, "monolithisch": 23, "zerhacken": 23, "welchen": 23, "bewerten": 23, "messen": 23, "zielerreichung": 23, "kriterium": 23, "arbeitserleichterung": 23, "minimal": [23, 205], "erfolg": [23, 1186], "mindestkriterien": 23, "positiven": 23, "projekterfolg": 23, "jedenfal": 23, "abgedeckt": 23, "ausgezeichnet": 23, "kriterien": [23, 186, 199, 925], "angestrebten": 23, "ausgezeichneten": 23, "anerkennen": 23, "gesteigerten": 23, "effekt": [23, 205, 216, 1199, 1207], "bekundet": 23, "medien": [23, 1206], "berichtet": 23, "migrat": [23, 199], "zehn": [23, 215], "migrieren": 23, "verwenden": [23, 186, 199, 205, 211, 215, 220, 1206], "untereinand": 23, "zutun": 23, "zusammenzuarbeiten": 23, "kooperationspartner_innen": 23, "dienstleister_innen": 23, "mitwirkend": 23, "zielgruppenvertreter_innen": 23, "werbeagentur": 23, "schaar": 23, "logo": 23, "webdesign": 23, "wof\u00fcr": 23, "arbeitsstunden": 23, "geld": 23, "allem": [23, 180, 195, 205, 387, 1205], "eingesetzt": [23, 1184, 1201], "basisarbeit": 23, "workflow": [23, 123, 199, 233, 248, 810, 1005, 1201], "datenstrukturen": [23, 217, 235, 256, 1188], "zeitgem\u00e4\u00df": 23, "interakt": [23, 1085], "know": [23, 42, 61, 63, 70, 81, 85, 143, 169, 171, 172, 173, 174, 177, 178, 179, 187, 192, 193, 196, 200, 201, 204, 208, 212, 223, 224, 231, 234, 291, 294, 298, 323, 371, 402, 404, 410, 415, 432, 442, 454, 456, 458, 460, 464, 465, 466, 468, 472, 473, 474, 476, 485, 491, 495, 496, 508, 545, 553, 580, 596, 598, 604, 606, 610, 629, 666, 669, 672, 693, 694, 696, 705, 707, 709, 732, 734, 743, 752, 754, 758, 768, 787, 789, 790, 792, 808, 815, 837, 876, 897, 934, 937, 941, 943, 954, 959, 961, 970, 980, 1008, 1029, 1037, 1042, 1043, 1054, 1059, 1062, 1065, 1066, 1085, 1093, 1131, 1135, 1169, 1194], "welchem": [23, 191], "umfang": 23, "sachressourcen": 23, "ben\u00f6tigt": [23, 148, 216, 217, 1199], "zugekauft": 23, "backendprogrammierung": 23, "programmiersprach": [23, 1185, 1188, 1200, 1202], "200": [23, 168, 169, 191, 193, 205, 222, 224, 231, 238, 241, 244, 247, 252, 254, 260, 264, 267, 270, 282, 285, 289, 296, 306, 312, 324, 328, 334, 340, 346, 350, 361, 366, 624, 625, 626, 627, 628, 630, 631, 632, 633, 647, 701, 815, 995, 1110], "stunden": 23, "webprogrammierung": 23, "css": [23, 169, 170], "150": [23, 191, 205, 215, 222, 231, 241, 244, 247, 252, 254, 260, 264, 267, 270, 273, 282, 285, 302, 306, 312, 324, 328, 334, 340, 346, 350, 694], "kreativarbeit": 23, "erreichen": [23, 1200, 1203], "pers\u00f6nlich": [23, 387], "freund": 23, "ebenfal": [23, 148, 1201], "t\u00e4tig": 23, "mich": [23, 180, 195, 215, 223, 387, 1183], "ermutigt": 23, "\u00fcberhaupt": [23, 1193, 1200, 1207], "starten": [23, 1205], "repr\u00e4sent": 23, "post": [23, 94, 156, 168, 172, 174, 176, 177, 178, 179, 182, 233, 248, 297, 402, 416, 500, 596, 934, 1003, 1005, 1008, 1135], "facebookseit": 23, "relevanten": 23, "foren": 23, "linkedin": 23, "typisch": [23, 216, 1186], "projektbeginn": 23, "abschluss": [23, 181, 369], "oktob": 23, "projektdau": 23, "\u00fcberschreiten": 23, "mitarbeiter_innen": 23, "stundenanzahl": 23, "jeweilig": 23, "stundens\u00e4tz": 23, "senior": 23, "junior": 23, "programmierer_in": 23, "designer_in": 23, "contentmanager_in": 23, "projektmanager_in": 23, "assistenz": 23, "administr": [23, 179, 874, 941, 950, 957, 996], "sachbearbeiter_in": 23, "social": [23, 45, 496, 503, 507, 520, 521, 522, 525, 531, 534, 535, 536], "media": [23, 79, 189, 837, 942], "spzialist_in": 23, "firmeneigent\u00fcmer_innen": 23, "gesellschafter_innen": 23, "vereinsfunktion\u00e4r_innen": 23, "betr\u00e4gt": 23, "f\u00f6rderbar": 23, "stundensatz": 23, "brutto": 23, "nachweislich": 23, "angestellt": 23, "projektmitarbeiter_innen": 23, "errechnet": 23, "vollzeitvertrag": 23, "jahresstundenteil": 23, "1720": [23, 247], "teilzeitbesch\u00e4ftigten": 23, "aliquot": [23, 148], "reduziert": [23, 195, 350], "dienstgeberanteil": 23, "faktor": 23, "ber\u00fccksichtigt": 23, "kalkul": 23, "jahresbruttogehalt": 23, "hohe": 23, "risiko": 23, "h\u00f6herer": 23, "eigenmittelanteil": 23, "bedingung": 23, "festgelegt": 23, "erh\u00f6hen": 23, "gemeinkosten": 23, "gef\u00f6rdert": 23, "antr\u00e4gen": 23, "diplomarbeiten": 23, "betrag": 23, "8000": [23, 247], "frontendprogrammierung": 23, "4500": [23, 247], "sachkosten": 23, "projektbedingt": 23, "betriebskosten": 23, "unmittelbar": 23, "projektt\u00e4tigkeit": 23, "entstehen": [23, 361], "leistungen": 23, "reisen": 23, "gliedern": 23, "rechnung": [23, 181, 289], "enthalten": 23, "umsatzsteu": 23, "darf": [23, 369], "kostenabrechnung": 23, "f\u00f6rdernehmer_in": 23, "vorsteuerabzugsberechtigt": 23, "13500": [23, 247], "beantragt": 23, "differenz": [23, 267], "aufgliedern": 23, "eigenmittel": 23, "f\u00f6rderungseinrichtungen": 23, "fremdmittel": 23, "kredit": 23, "leas": 23, "pro": [23, 208, 774, 925, 1028], "bono": 23, "beitrag": 23, "restfinanzierung": 23, "gesamtbetrag": 23, "ber\u00fccksichtigten": 23, "einzelkosten": 23, "achtung": 23, "gesamtprojektkosten": 23, "h\u00f6her": 23, "auszuf\u00fcllen": 23, "leer": [23, 222, 228, 236, 292], "bleiben": [23, 181, 205, 215, 1193, 1200, 1203], "reich": [23, 205], "nein": [23, 216, 222, 228, 273, 282, 340, 1199], "neben": [23, 195], "antr\u00e4g": 23, "oderstipendium": 23, "laufenden": 23, "call": [23, 32, 42, 50, 62, 111, 112, 115, 119, 120, 131, 142, 156, 168, 171, 172, 173, 174, 175, 177, 182, 189, 192, 194, 202, 208, 210, 231, 239, 241, 247, 252, 255, 257, 262, 264, 269, 270, 273, 288, 290, 292, 305, 306, 314, 323, 328, 330, 369, 374, 376, 387, 391, 398, 402, 403, 406, 417, 433, 435, 439, 445, 446, 449, 459, 462, 463, 471, 479, 482, 494, 501, 505, 520, 521, 522, 538, 542, 547, 550, 551, 553, 554, 566, 580, 594, 598, 601, 604, 606, 610, 619, 665, 666, 669, 671, 672, 676, 678, 683, 690, 698, 699, 707, 711, 722, 725, 728, 729, 730, 731, 741, 744, 752, 757, 758, 766, 767, 768, 770, 774, 789, 790, 791, 805, 815, 817, 819, 823, 825, 827, 829, 831, 833, 835, 837, 842, 845, 851, 856, 857, 863, 867, 870, 871, 872, 873, 875, 877, 880, 881, 894, 897, 933, 937, 945, 955, 956, 959, 960, 961, 962, 964, 966, 972, 973, 974, 979, 980, 987, 988, 990, 991, 994, 995, 996, 1005, 1008, 1009, 1011, 1013, 1030, 1032, 1033, 1034, 1039, 1045, 1047, 1048, 1049, 1051, 1052, 1054, 1055, 1056, 1076, 1077, 1081, 1083, 1086, 1087, 1093, 1111, 1115, 1136, 1141, 1149, 1152, 1157, 1158, 1170, 1171, 1172, 1191, 1195, 1203, 1204, 1206], "weiteren": 23, "stipendium": 23, "imlaufenden": 23, "habe": [23, 180, 181, 190, 195, 211, 340, 387], "zuge": [23, 148], "projektantragsstellung": 23, "rundschreiben": 23, "expert": [23, 28, 176, 177, 182, 553, 876, 897, 943, 1140], "group": [23, 29, 102, 103, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 142, 143, 165, 187, 192, 204, 209, 211, 220, 223, 224, 231, 237, 244, 252, 261, 264, 270, 273, 285, 299, 306, 309, 312, 334, 340, 346, 352, 353, 369, 382, 383, 387, 398, 423, 466, 467, 542, 572, 790, 837, 864, 865, 867, 870, 871, 872, 883, 884, 885, 886, 887, 888, 889, 890, 892, 893, 919, 923, 924, 925, 926, 930, 933, 941, 953, 954, 962, 963, 964, 969, 972, 974, 988, 991, 996, 1009, 1032, 1088, 1114, 1169], "wirtschaftkamm": 23, "nehmen": [23, 181, 1185], "larg": [24, 30, 38, 79, 174, 177, 179, 204, 223, 224, 233, 244, 250, 291, 294, 445, 454, 456, 460, 466, 467, 506, 731, 740, 788, 831, 837, 1011, 1035, 1037, 1039, 1059, 1066, 1093, 1114, 1150, 1154, 1158, 1176], "amount": [24, 107, 111, 112, 172, 173, 174, 177, 183, 204, 211, 239, 289, 290, 466, 478, 609, 731, 732, 868, 870, 954, 971, 1059], "pdf": [24, 37, 197, 199, 204, 208, 211, 212, 214, 264, 278, 287, 288, 308, 309, 331, 352, 368, 369, 372, 374, 377, 388, 897, 919, 920, 943, 975, 1013, 1108, 1185, 1186, 1187, 1195, 1196, 1202, 1203, 1205, 1206, 1207], "Not": [24, 43, 47, 53, 81, 110, 113, 114, 116, 117, 124, 147, 174, 175, 176, 179, 182, 204, 207, 208, 248, 250, 251, 252, 265, 274, 301, 305, 406, 415, 437, 449, 452, 454, 460, 476, 479, 542, 559, 561, 594, 601, 603, 605, 610, 611, 679, 691, 711, 722, 726, 728, 729, 730, 748, 755, 758, 764, 769, 788, 790, 800, 808, 815, 819, 821, 935, 973, 993, 995, 997, 999, 1009, 1032, 1034, 1039, 1040, 1041, 1042, 1052, 1054, 1066, 1075, 1080, 1136, 1140, 1145, 1159, 1161, 1177, 1189], "satisfi": [24, 32, 208, 495, 611, 699, 711, 744], "colleagu": [24, 28, 183, 224, 456, 668, 1037, 1054, 1066], "aren": [24, 169, 254, 264, 707, 898, 987, 997], "either": [24, 39, 42, 43, 172, 174, 182, 183, 288, 291, 294, 454, 521, 694, 702, 705, 766, 864, 865, 894, 897, 929, 943, 1034, 1102, 1152, 1189], "nobodi": [24, 43, 172, 174, 193, 204, 244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346, 457, 459, 596, 637, 709, 792, 864, 865, 874, 889, 891, 897, 898, 950, 958, 1087, 1142, 1172, 1178], "doe": [24, 38, 45, 48, 49, 60, 70, 79, 84, 85, 111, 112, 115, 119, 123, 125, 143, 153, 168, 171, 172, 173, 176, 177, 178, 179, 182, 183, 187, 192, 200, 204, 208, 210, 222, 231, 234, 247, 264, 267, 273, 291, 292, 294, 297, 299, 301, 323, 336, 340, 369, 380, 396, 402, 410, 414, 415, 416, 417, 424, 433, 434, 443, 446, 449, 450, 452, 454, 456, 458, 460, 465, 466, 467, 470, 471, 472, 476, 478, 479, 480, 484, 490, 491, 494, 496, 499, 504, 508, 516, 518, 520, 546, 547, 548, 549, 550, 553, 554, 577, 586, 589, 596, 597, 598, 601, 604, 606, 607, 609, 612, 635, 642, 650, 656, 665, 668, 669, 675, 676, 683, 694, 699, 700, 702, 709, 711, 731, 733, 741, 742, 744, 748, 752, 753, 754, 757, 758, 760, 764, 765, 770, 786, 788, 800, 801, 805, 806, 808, 815, 829, 837, 842, 853, 863, 872, 876, 877, 879, 882, 930, 934, 941, 942, 943, 954, 959, 960, 962, 966, 969, 980, 984, 987, 993, 995, 996, 1005, 1009, 1011, 1012, 1013, 1014, 1019, 1023, 1027, 1028, 1030, 1032, 1033, 1034, 1035, 1037, 1039, 1048, 1052, 1054, 1055, 1059, 1062, 1065, 1083, 1084, 1085, 1105, 1113, 1115, 1142, 1144, 1145, 1147, 1154, 1155, 1158, 1159, 1160, 1162, 1164, 1169, 1189, 1191], "even": [24, 29, 61, 63, 65, 79, 123, 160, 172, 173, 174, 179, 183, 193, 194, 204, 208, 211, 212, 216, 218, 223, 229, 231, 232, 234, 235, 244, 248, 251, 252, 255, 258, 261, 263, 264, 266, 269, 270, 281, 291, 294, 305, 306, 324, 327, 334, 340, 346, 433, 442, 456, 462, 466, 494, 499, 595, 603, 606, 652, 699, 741, 744, 751, 760, 788, 790, 829, 837, 874, 893, 934, 942, 959, 960, 993, 995, 996, 1012, 1031, 1043, 1054, 1080, 1083, 1095, 1098, 1099, 1134, 1136, 1157, 1164, 1171, 1191, 1199], "tech": [24, 45, 171], "although": [24, 29, 79, 138, 142, 172, 174, 178, 183, 194, 204, 210, 234, 254, 264, 387, 550, 694, 695, 736, 758, 876, 879, 950, 1030, 1035, 1093, 1142], "gain": [24, 179, 291, 294, 466, 837, 876], "incred": 24, "momentum": 24, "expect": [24, 38, 50, 171, 174, 220, 241, 247, 248, 257, 260, 267, 292, 306, 324, 326, 328, 443, 481, 496, 539, 604, 669, 722, 731, 744, 810, 821, 934, 942, 943, 982, 999, 1008, 1054, 1064, 1077, 1108, 1118, 1141, 1175, 1176, 1179], "context": [24, 29, 61, 63, 111, 112, 172, 193, 196, 208, 211, 213, 215, 222, 253, 257, 258, 260, 264, 267, 273, 281, 285, 290, 300, 301, 302, 305, 312, 316, 319, 322, 323, 326, 327, 334, 387, 453, 515, 516, 530, 598, 604, 732, 753, 788, 790, 799, 804, 807, 809, 814, 817, 818, 819, 820, 823, 824, 828, 829, 830, 832, 833, 834, 841, 842, 843, 845, 846, 847, 848, 851, 852, 855, 857, 858, 870, 874, 933, 934, 957, 997, 1008, 1009, 1036, 1045, 1134, 1145], "defin": [24, 53, 126, 130, 133, 134, 138, 141, 143, 165, 175, 192, 194, 209, 211, 213, 215, 220, 228, 231, 232, 234, 241, 245, 247, 250, 254, 257, 260, 264, 272, 274, 285, 296, 306, 323, 324, 336, 340, 346, 364, 375, 396, 401, 406, 411, 412, 415, 432, 433, 434, 435, 436, 437, 450, 458, 459, 460, 462, 466, 479, 480, 485, 486, 487, 504, 508, 516, 537, 538, 550, 572, 580, 597, 598, 599, 601, 603, 604, 606, 607, 610, 611, 612, 619, 622, 643, 647, 668, 675, 694, 695, 704, 705, 706, 707, 708, 711, 731, 736, 740, 749, 752, 757, 758, 781, 796, 798, 810, 874, 894, 934, 935, 943, 954, 961, 979, 1001, 1011, 1013, 1027, 1029, 1033, 1035, 1037, 1049, 1054, 1066, 1076, 1132, 1145, 1149, 1181, 1189, 1191, 1194], "solv": [24, 45, 81, 90, 124, 125, 169, 172, 173, 202, 204, 208, 209, 211, 213, 224, 229, 242, 250, 255, 258, 269, 272, 294, 298, 305, 309, 311, 314, 326, 330, 355, 436, 478, 487, 693, 767, 772, 775, 789, 790, 837, 876, 933, 974, 988, 1021, 1023, 1025, 1054, 1131, 1136, 1142, 1191, 1192], "provid": [24, 27, 37, 58, 69, 153, 172, 174, 175, 176, 178, 179, 182, 183, 187, 200, 241, 247, 248, 257, 260, 264, 298, 314, 330, 452, 481, 486, 487, 496, 507, 515, 668, 731, 758, 837, 873, 876, 916, 942, 943, 950, 964, 996, 1005, 1037, 1046, 1064, 1077, 1141, 1163, 1171, 1191], "depth": [24, 204, 208, 229, 241, 247, 257, 258, 260, 456, 756, 1039, 1136, 1140, 1141], "repres": [24, 172, 174, 196, 241, 247, 257, 260, 264, 285, 296, 355, 465, 499, 516, 518, 605, 788, 808, 833, 870, 873, 941, 943, 971, 1066, 1093, 1131, 1135, 1154, 1161, 1194], "own": [24, 28, 40, 43, 111, 112, 147, 172, 173, 175, 176, 182, 187, 200, 204, 250, 274, 279, 288, 298, 323, 336, 337, 456, 462, 477, 491, 499, 516, 521, 585, 586, 595, 685, 686, 688, 689, 703, 707, 710, 722, 732, 734, 746, 754, 769, 788, 789, 790, 837, 870, 872, 873, 882, 884, 885, 893, 894, 916, 926, 941, 942, 954, 961, 979, 984, 995, 996, 1008, 1027, 1034, 1051, 1056, 1057, 1059, 1143, 1176, 1191, 1192, 1194], "yield": [24, 29, 191, 192, 205, 208, 209, 211, 220, 232, 239, 245, 249, 251, 253, 254, 260, 264, 269, 271, 281, 284, 285, 292, 300, 301, 302, 305, 306, 311, 313, 324, 327, 328, 334, 340, 344, 345, 346, 349, 350, 437, 506, 515, 722, 725, 728, 729, 730, 790, 1032, 1036, 1038, 1039, 1041, 1060, 1070, 1092, 1093, 1094, 1095, 1108, 1119, 1134, 1146], "multipl": [24, 35, 36, 61, 63, 77, 107, 111, 112, 172, 173, 175, 189, 204, 208, 211, 231, 232, 233, 245, 247, 264, 299, 323, 392, 394, 398, 399, 402, 411, 413, 416, 425, 432, 436, 454, 459, 472, 477, 484, 516, 530, 543, 598, 611, 669, 676, 689, 716, 722, 744, 746, 753, 761, 764, 768, 769, 788, 790, 806, 808, 814, 818, 819, 827, 828, 829, 837, 839, 841, 842, 845, 846, 852, 855, 858, 870, 873, 874, 877, 879, 884, 885, 930, 933, 942, 963, 979, 984, 1004, 1017, 1054, 1065, 1066, 1079, 1080, 1085, 1136, 1161], "artifact": [24, 178, 182, 196, 201, 314, 330, 472, 798, 1011, 1012, 1013, 1023, 1178, 1191], "complet": [24, 42, 62, 65, 79, 125, 126, 142, 168, 171, 172, 193, 204, 212, 220, 229, 242, 245, 248, 255, 269, 270, 272, 299, 305, 311, 316, 323, 336, 354, 355, 436, 453, 466, 479, 491, 543, 552, 597, 598, 672, 741, 756, 788, 831, 837, 864, 865, 875, 937, 943, 958, 995, 1032, 1036, 1058, 1059, 1136, 1141, 1142, 1144, 1150, 1152, 1163, 1164, 1181, 1189], "prepar": [27, 123, 125, 141, 168, 171, 204, 261, 369, 387, 500, 541, 572, 634, 671, 1004, 1028, 1132, 1141, 1170], "base": [27, 29, 30, 42, 45, 53, 79, 81, 98, 108, 122, 125, 138, 143, 147, 164, 172, 174, 175, 187, 194, 199, 204, 205, 208, 211, 212, 215, 219, 222, 224, 234, 248, 250, 253, 257, 258, 262, 267, 269, 275, 282, 285, 290, 292, 296, 297, 298, 299, 300, 301, 306, 311, 322, 323, 324, 326, 327, 328, 334, 337, 340, 345, 346, 350, 365, 369, 373, 380, 402, 410, 437, 454, 472, 477, 478, 496, 500, 505, 506, 508, 515, 540, 552, 556, 572, 583, 625, 627, 628, 629, 630, 632, 633, 637, 669, 671, 672, 674, 716, 733, 734, 741, 746, 753, 757, 769, 774, 776, 778, 780, 784, 787, 789, 790, 810, 817, 821, 833, 837, 839, 888, 890, 930, 934, 993, 1005, 1009, 1011, 1012, 1025, 1026, 1028, 1036, 1043, 1045, 1050, 1051, 1092, 1098, 1114, 1134, 1143, 1144, 1158, 1188, 1189, 1192], "exist": [27, 38, 46, 47, 53, 55, 56, 110, 111, 112, 153, 165, 168, 178, 183, 212, 224, 231, 297, 301, 354, 366, 369, 372, 454, 476, 478, 494, 499, 519, 522, 542, 553, 559, 561, 594, 604, 652, 687, 689, 698, 752, 788, 790, 837, 864, 865, 870, 872, 879, 888, 890, 899, 903, 904, 916, 933, 941, 943, 954, 959, 963, 969, 972, 974, 991, 998, 1005, 1023, 1027, 1028, 1033, 1034, 1043, 1048, 1083, 1085, 1104, 1145, 1153, 1154, 1164, 1169, 1171], "navig": [27, 1161], "through": [27, 34, 38, 60, 74, 79, 105, 169, 171, 172, 174, 179, 183, 187, 200, 204, 208, 210, 213, 224, 232, 233, 234, 239, 245, 298, 300, 301, 316, 319, 322, 327, 376, 380, 387, 406, 426, 445, 465, 469, 482, 491, 522, 544, 547, 613, 615, 616, 665, 666, 669, 672, 694, 709, 711, 736, 744, 748, 754, 758, 808, 835, 868, 876, 924, 934, 942, 943, 952, 1005, 1008, 1009, 1034, 1039, 1042, 1057, 1059, 1062, 1098, 1143, 1158, 1189, 1190, 1194], "deviat": [27, 179, 192, 200, 209, 233, 264, 387, 837], "after": [27, 43, 168, 169, 172, 173, 174, 179, 182, 192, 201, 204, 211, 224, 231, 241, 247, 257, 260, 263, 264, 270, 285, 290, 297, 299, 306, 334, 350, 355, 394, 402, 403, 436, 456, 463, 482, 484, 520, 521, 544, 551, 603, 606, 619, 654, 702, 704, 705, 707, 716, 722, 769, 788, 815, 819, 825, 877, 880, 897, 898, 930, 941, 981, 999, 1004, 1005, 1008, 1011, 1030, 1032, 1034, 1059, 1060, 1064, 1101, 1114, 1132, 1140, 1149, 1161, 1170, 1171, 1176], "writeup": [27, 183, 1023], "what": [27, 28, 43, 44, 47, 48, 55, 56, 57, 58, 61, 63, 70, 79, 84, 87, 88, 98, 99, 100, 105, 108, 122, 125, 130, 131, 138, 143, 169, 171, 172, 173, 174, 175, 176, 177, 178, 183, 187, 191, 192, 193, 194, 195, 196, 198, 200, 204, 205, 208, 209, 210, 211, 212, 213, 214, 223, 231, 233, 234, 248, 249, 250, 259, 264, 272, 278, 288, 291, 294, 298, 300, 301, 314, 319, 322, 330, 334, 336, 337, 354, 355, 361, 369, 372, 374, 376, 377, 380, 391, 399, 404, 414, 415, 417, 430, 439, 442, 449, 452, 454, 456, 457, 460, 461, 462, 466, 470, 472, 477, 478, 481, 486, 488, 495, 497, 499, 520, 521, 531, 537, 539, 548, 551, 572, 573, 576, 579, 582, 585, 588, 589, 591, 601, 604, 606, 607, 608, 609, 610, 612, 619, 622, 629, 665, 672, 681, 699, 702, 705, 711, 716, 722, 732, 743, 744, 752, 753, 754, 758, 761, 765, 767, 768, 774, 786, 788, 789, 790, 798, 801, 805, 808, 810, 815, 833, 840, 845, 850, 863, 864, 865, 867, 868, 870, 871, 873, 874, 876, 877, 879, 881, 882, 883, 886, 887, 888, 889, 890, 891, 892, 897, 912, 913, 915, 933, 934, 941, 942, 943, 945, 946, 947, 948, 949, 960, 961, 967, 968, 969, 970, 972, 974, 979, 980, 981, 982, 983, 988, 991, 994, 996, 997, 999, 1000, 1003, 1004, 1005, 1007, 1009, 1012, 1021, 1022, 1026, 1028, 1029, 1030, 1032, 1034, 1036, 1037, 1040, 1041, 1045, 1046, 1054, 1058, 1059, 1077, 1083, 1087, 1088, 1093, 1096, 1104, 1131, 1135, 1143, 1145, 1152, 1161, 1169, 1171, 1175, 1176, 1178, 1180, 1191, 1194], "collect": [27, 29, 168, 171, 173, 216, 223, 232, 238, 239, 256, 258, 259, 260, 272, 281, 283, 290, 298, 300, 301, 305, 316, 319, 322, 323, 326, 327, 339, 345, 349, 350, 354, 465, 472, 583, 629, 744, 753, 765, 790, 837, 868, 940, 1021, 1032, 1036, 1042, 1050, 1084, 1091, 1095, 1124, 1129, 1131, 1134, 1135, 1150, 1163, 1164, 1169, 1171, 1199], "question": [27, 29, 32, 35, 36, 38, 103, 124, 125, 137, 174, 179, 187, 192, 204, 208, 210, 232, 233, 234, 244, 245, 247, 248, 250, 270, 353, 369, 376, 383, 411, 440, 446, 458, 477, 480, 484, 488, 541, 605, 665, 672, 760, 764, 790, 815, 829, 845, 864, 865, 867, 886, 892, 916, 933, 941, 943, 954, 958, 974, 993, 994, 1027, 1035, 1036, 1039, 1044, 1134, 1136], "ask": [27, 172, 177, 179, 187, 204, 207, 208, 273, 305, 369, 376, 476, 495, 496, 518, 537, 589, 601, 612, 733, 755, 893, 948, 950, 1054, 1136], "answer": [27, 45, 115, 176, 179, 192, 204, 208, 210, 211, 234, 245, 252, 324, 334, 376, 480, 484, 541, 665, 672, 674, 744, 749, 768, 801, 845, 864, 865, 870, 882, 884, 885, 888, 890, 941, 943, 950, 954, 993, 996, 1027, 1034, 1035, 1039, 1046, 1063, 1066, 1136], "cover": [27, 79, 82, 126, 165, 179, 196, 204, 208, 212, 214, 232, 233, 245, 258, 297, 299, 327, 476, 495, 781, 941, 943, 1025, 1034, 1036, 1059, 1108, 1131, 1136, 1140, 1141, 1163, 1169, 1192, 1194], "been": [27, 61, 63, 65, 123, 153, 171, 172, 173, 174, 176, 177, 178, 183, 187, 192, 193, 204, 212, 241, 247, 257, 260, 291, 294, 296, 306, 323, 366, 375, 435, 449, 450, 479, 490, 499, 516, 572, 731, 791, 833, 851, 857, 862, 872, 876, 880, 900, 934, 941, 943, 954, 963, 973, 984, 1009, 1012, 1013, 1030, 1037, 1075, 1171, 1189, 1191, 1192], "further": [27, 169, 171, 178, 182, 198, 247, 279, 294, 323, 336, 337, 377, 442, 453, 491, 553, 573, 576, 579, 582, 585, 588, 591, 703, 734, 780, 789, 790, 808, 831, 837, 919, 944, 980, 1000, 1003, 1007, 1042, 1175, 1180, 1194], "inform": [27, 28, 29, 107, 153, 171, 174, 175, 177, 182, 191, 192, 193, 195, 200, 220, 241, 247, 257, 260, 285, 300, 301, 322, 326, 327, 453, 463, 470, 471, 481, 490, 758, 788, 796, 808, 872, 897, 930, 934, 941, 943, 945, 977, 1033, 1061, 1136, 1144, 1149, 1164, 1171], "internet": [27, 79, 171, 173, 176, 177, 179, 200, 212, 220, 248, 261, 300, 301, 316, 322, 326, 366, 478, 934, 935, 937, 995, 1035, 1192, 1206], "subtract": [27, 115, 241, 264, 296, 413, 516, 530, 744, 896, 996, 1046, 1054, 1066], "known": [27, 168, 173, 184, 224, 241, 247, 257, 260, 277, 279, 297, 314, 330, 366, 412, 414, 426, 433, 460, 466, 631, 808, 897, 1026, 1143, 1191, 1192], "calcul": [27, 83, 86, 174, 208, 232, 241, 264, 412, 414, 422, 431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 515, 545, 550, 552, 696, 701, 734, 761, 787, 789, 790, 979, 996, 1037, 1039, 1111, 1143, 1148, 1169], "minimum": [27, 62, 264, 716, 775, 837, 1032, 1139, 1140, 1141, 1142], "come": [27, 43, 79, 111, 112, 123, 131, 138, 142, 153, 168, 169, 171, 172, 173, 174, 177, 178, 179, 182, 183, 194, 200, 201, 204, 224, 250, 277, 279, 290, 297, 298, 323, 336, 360, 366, 390, 392, 393, 409, 436, 472, 479, 516, 550, 632, 669, 672, 677, 691, 743, 746, 748, 758, 768, 790, 805, 837, 868, 870, 874, 880, 893, 897, 934, 941, 942, 943, 969, 995, 1023, 1034, 1035, 1039, 1057, 1058, 1059, 1060, 1066, 1077, 1085, 1087, 1093, 1098, 1116, 1127, 1144, 1147, 1152, 1165, 1192], "she": [27, 231, 669, 702, 872, 874, 1079, 1087], "who": [27, 29, 45, 130, 169, 172, 176, 179, 183, 202, 204, 250, 260, 285, 316, 387, 462, 466, 476, 481, 504, 521, 553, 674, 744, 754, 810, 837, 845, 864, 865, 872, 876, 882, 893, 934, 942, 943, 958, 969, 1011, 1028, 1030, 1036, 1058, 1135, 1150, 1162, 1169, 1189, 1192, 1194], "repetit": [27, 285, 897, 1189], "prone": [27, 411, 599, 609, 629, 702, 746, 825, 1013, 1081, 1176, 1189], "possibl": [27, 60, 61, 63, 107, 122, 123, 125, 143, 150, 159, 162, 171, 172, 179, 182, 187, 194, 204, 208, 224, 234, 241, 247, 250, 252, 257, 258, 260, 277, 279, 288, 297, 300, 301, 306, 323, 327, 337, 401, 412, 415, 432, 445, 452, 458, 462, 466, 467, 470, 476, 482, 491, 494, 496, 499, 504, 508, 516, 518, 553, 586, 596, 598, 599, 604, 611, 612, 630, 647, 688, 694, 695, 702, 716, 720, 733, 744, 752, 753, 754, 758, 815, 842, 872, 881, 906, 935, 936, 941, 942, 952, 955, 984, 1032, 1033, 1034, 1042, 1047, 1055, 1057, 1066, 1075, 1080, 1082, 1083, 1085, 1135, 1136, 1145, 1157], "abl": [27, 28, 30, 43, 171, 172, 174, 175, 177, 179, 187, 204, 224, 231, 313, 456, 462, 488, 495, 499, 553, 701, 711, 864, 865, 882, 888, 890, 891, 934, 942, 943, 969, 1005, 1036, 1148, 1194], "fix": [27, 46, 62, 77, 108, 142, 168, 172, 185, 187, 208, 229, 234, 244, 245, 250, 269, 272, 299, 300, 301, 322, 369, 394, 417, 460, 476, 478, 484, 521, 554, 566, 577, 589, 595, 614, 630, 680, 687, 708, 790, 805, 810, 814, 817, 818, 838, 839, 845, 846, 852, 855, 858, 881, 933, 937, 957, 967, 998, 1008, 1028, 1030, 1033, 1060, 1093, 1136], "inconsist": [27, 596, 1159], "easi": [27, 69, 130, 160, 172, 174, 175, 176, 177, 178, 179, 183, 192, 193, 196, 208, 254, 264, 337, 415, 430, 456, 472, 694, 711, 753, 774, 817, 819, 823, 835, 842, 876, 941, 942, 943, 970, 987, 1005, 1014, 1028, 1054, 1058, 1066, 1075, 1077, 1142, 1169, 1170, 1194], "plain": [27, 133, 174, 234, 380, 572, 608, 611, 690, 743, 758, 840, 942, 1033, 1046], "happi": [27, 177, 204, 460, 604, 1141], "clear": [27, 43, 172, 174, 179, 191, 224, 234, 263, 324, 370, 371, 437, 462, 466, 481, 491, 497, 503, 610, 665, 698, 716, 753, 837, 845, 873, 876, 897, 957, 1031, 1046, 1066, 1068, 1140, 1141, 1171], "front": [27, 79, 169, 179, 204, 260, 306, 466, 647, 766, 1192], "later": [27, 81, 126, 142, 171, 172, 175, 182, 193, 204, 326, 392, 396, 402, 404, 406, 462, 466, 472, 479, 598, 599, 601, 613, 615, 616, 650, 705, 736, 739, 796, 798, 800, 805, 821, 823, 833, 840, 879, 941, 963, 979, 980, 982, 993, 997, 1047, 1055, 1065, 1068, 1070, 1149, 1155], "menu": [27, 168, 212, 837, 1184], "mine": [28, 171, 172, 175, 183, 200, 204, 208, 387, 586, 837], "hi": [28, 45, 187, 192, 204, 208, 211, 229, 255, 258, 459, 548, 1047, 1136], "data": [28, 29, 49, 71, 74, 79, 90, 109, 111, 112, 135, 143, 172, 173, 174, 175, 179, 182, 191, 193, 195, 204, 208, 209, 213, 221, 223, 228, 238, 241, 242, 247, 248, 250, 257, 260, 264, 270, 285, 289, 290, 291, 292, 294, 297, 299, 300, 301, 306, 311, 314, 316, 319, 325, 328, 330, 334, 340, 347, 350, 371, 372, 387, 401, 415, 422, 431, 438, 444, 445, 448, 450, 451, 455, 460, 464, 465, 467, 468, 473, 474, 477, 484, 500, 514, 542, 543, 544, 545, 546, 547, 548, 549, 552, 553, 559, 561, 570, 594, 595, 597, 601, 604, 617, 620, 622, 623, 634, 639, 645, 649, 658, 661, 662, 667, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 696, 700, 703, 734, 746, 750, 758, 759, 767, 768, 775, 787, 788, 789, 790, 792, 795, 796, 827, 831, 835, 842, 850, 868, 874, 879, 881, 889, 935, 937, 941, 942, 943, 944, 954, 958, 960, 968, 973, 979, 982, 985, 987, 999, 1023, 1032, 1034, 1039, 1043, 1046, 1059, 1060, 1071, 1073, 1074, 1075, 1083, 1095, 1123, 1124, 1134, 1138, 1139, 1140, 1142, 1144, 1145, 1149, 1150, 1154, 1155, 1158, 1160, 1161, 1164, 1169, 1190, 1191, 1205], "convinc": [28, 415], "him": [28, 204, 208, 211, 229, 232, 255, 281, 305, 327, 743, 984, 1136], "wai": [28, 43, 50, 61, 62, 63, 81, 82, 162, 168, 169, 171, 174, 179, 183, 184, 187, 193, 196, 200, 205, 207, 208, 210, 211, 212, 215, 216, 224, 229, 232, 244, 245, 250, 253, 254, 255, 257, 258, 262, 264, 272, 276, 277, 290, 291, 294, 298, 300, 301, 322, 323, 357, 361, 411, 415, 419, 420, 430, 436, 452, 453, 454, 462, 478, 479, 486, 496, 498, 499, 503, 519, 521, 540, 550, 554, 566, 572, 580, 596, 597, 604, 609, 612, 650, 652, 678, 684, 695, 711, 732, 742, 754, 758, 772, 793, 806, 815, 829, 831, 837, 864, 865, 873, 879, 881, 884, 885, 934, 942, 943, 954, 961, 969, 995, 998, 1008, 1009, 1013, 1019, 1023, 1034, 1046, 1051, 1057, 1060, 1061, 1064, 1075, 1079, 1080, 1082, 1085, 1087, 1093, 1121, 1136, 1154, 1162, 1169, 1176, 1194], "go": [28, 40, 42, 60, 61, 62, 63, 81, 98, 136, 142, 169, 172, 175, 176, 178, 179, 201, 204, 211, 215, 224, 233, 234, 250, 291, 294, 296, 326, 372, 476, 478, 496, 537, 698, 736, 748, 754, 766, 790, 798, 801, 805, 837, 839, 868, 880, 897, 899, 933, 934, 941, 942, 969, 972, 974, 979, 987, 991, 1011, 1014, 1028, 1059, 1094], "relev": [28, 174, 247, 272, 402, 491, 553, 758, 837, 850, 941, 942, 1034, 1135, 1151, 1164], "part": [28, 43, 81, 93, 107, 125, 165, 172, 173, 174, 175, 177, 179, 182, 193, 196, 204, 211, 212, 213, 234, 260, 272, 291, 294, 306, 371, 378, 392, 415, 449, 476, 499, 504, 518, 539, 553, 596, 694, 766, 788, 808, 815, 837, 857, 864, 865, 897, 932, 934, 941, 942, 943, 944, 959, 1011, 1058, 1059, 1072, 1077, 1079, 1126, 1128, 1142, 1143, 1154, 1155, 1157, 1158, 1159, 1160, 1179], "natur": [28, 38, 76, 172, 174, 179, 204, 258, 264, 306, 387, 392, 410, 454, 495, 496, 648, 650, 694, 754, 942, 1070], "straighforward": 28, "approach": [28, 35, 38, 171, 172, 211, 315, 331, 394, 478, 482, 483, 491, 752, 780, 790, 876, 942, 995, 997, 1153], "would": [28, 57, 105, 108, 115, 118, 119, 143, 171, 173, 174, 176, 177, 183, 192, 194, 201, 204, 208, 210, 223, 234, 247, 260, 264, 299, 301, 337, 426, 445, 452, 454, 465, 466, 480, 481, 484, 491, 494, 552, 566, 570, 604, 608, 610, 612, 659, 666, 675, 699, 705, 744, 754, 766, 786, 788, 837, 840, 864, 865, 888, 890, 893, 919, 942, 943, 953, 954, 970, 979, 987, 1008, 1027, 1028, 1032, 1034, 1035, 1055, 1066, 1070, 1074, 1077, 1083, 1087, 1093, 1114, 1141, 1144, 1154, 1161], "copi": [28, 36, 42, 50, 71, 98, 100, 102, 103, 115, 119, 125, 129, 133, 138, 142, 162, 164, 168, 172, 173, 174, 175, 178, 183, 187, 193, 199, 202, 212, 219, 222, 234, 244, 250, 256, 260, 264, 267, 270, 276, 277, 278, 279, 282, 287, 288, 292, 296, 297, 299, 306, 308, 309, 312, 324, 337, 346, 352, 353, 372, 402, 404, 416, 422, 431, 436, 438, 440, 444, 445, 448, 451, 455, 464, 468, 473, 474, 489, 521, 522, 535, 536, 537, 542, 559, 571, 572, 574, 583, 588, 590, 592, 594, 595, 596, 602, 612, 613, 615, 616, 625, 629, 639, 647, 656, 658, 661, 662, 674, 676, 682, 685, 688, 691, 696, 697, 698, 702, 703, 704, 722, 734, 736, 746, 750, 754, 755, 759, 767, 786, 787, 788, 789, 790, 812, 817, 837, 838, 853, 863, 864, 865, 866, 867, 868, 877, 897, 903, 904, 906, 907, 908, 909, 911, 917, 933, 944, 947, 949, 954, 966, 971, 972, 973, 974, 981, 982, 987, 991, 1004, 1021, 1022, 1023, 1025, 1027, 1028, 1032, 1033, 1067, 1082, 1085, 1149, 1153, 1158, 1171, 1176, 1178, 1189, 1201], "dumb": [28, 45, 192, 223, 354, 808, 982, 984], "reason": [28, 60, 143, 159, 174, 187, 193, 204, 233, 252, 366, 449, 456, 458, 460, 466, 469, 482, 494, 613, 615, 616, 650, 694, 737, 756, 805, 821, 833, 837, 888, 890, 987, 995, 996, 1009, 1023, 1028, 1066, 1075, 1077, 1141], "ar": [28, 32, 43, 45, 47, 53, 55, 56, 57, 58, 60, 61, 62, 63, 69, 79, 81, 82, 90, 107, 109, 110, 111, 112, 115, 120, 121, 123, 130, 138, 143, 152, 153, 159, 165, 166, 169, 171, 174, 175, 176, 178, 179, 182, 183, 187, 188, 189, 192, 193, 194, 196, 200, 202, 204, 208, 209, 210, 211, 212, 213, 224, 231, 232, 233, 234, 241, 244, 245, 247, 248, 250, 251, 253, 255, 256, 257, 258, 260, 264, 268, 272, 277, 279, 281, 288, 290, 291, 294, 296, 297, 298, 299, 301, 306, 309, 314, 318, 323, 324, 327, 328, 330, 337, 353, 354, 355, 356, 360, 366, 369, 371, 372, 374, 375, 391, 393, 394, 396, 399, 401, 402, 404, 406, 409, 410, 413, 414, 415, 421, 424, 427, 432, 433, 436, 440, 442, 443, 445, 446, 447, 452, 453, 454, 456, 457, 460, 463, 466, 469, 476, 477, 479, 481, 484, 485, 490, 491, 494, 495, 496, 506, 516, 518, 521, 540, 543, 550, 551, 552, 553, 554, 557, 561, 566, 570, 580, 586, 589, 596, 597, 598, 599, 601, 604, 605, 608, 609, 610, 612, 619, 622, 629, 630, 631, 634, 644, 650, 651, 656, 659, 666, 668, 669, 671, 672, 676, 682, 683, 684, 685, 689, 695, 697, 698, 699, 702, 705, 706, 707, 711, 716, 733, 736, 737, 742, 743, 744, 746, 748, 752, 753, 754, 755, 757, 758, 760, 763, 765, 769, 770, 788, 790, 792, 793, 796, 806, 808, 810, 815, 821, 823, 825, 829, 831, 833, 835, 837, 842, 856, 863, 864, 865, 868, 870, 872, 873, 875, 876, 877, 879, 880, 882, 883, 888, 890, 897, 898, 900, 910, 915, 919, 921, 924, 934, 935, 941, 942, 943, 944, 950, 952, 954, 957, 959, 960, 963, 964, 971, 977, 979, 980, 982, 984, 985, 987, 990, 996, 997, 998, 999, 1004, 1008, 1009, 1011, 1012, 1013, 1014, 1017, 1019, 1023, 1025, 1026, 1028, 1029, 1030, 1032, 1034, 1035, 1037, 1039, 1043, 1046, 1047, 1048, 1049, 1053, 1055, 1058, 1059, 1062, 1063, 1064, 1065, 1066, 1068, 1071, 1075, 1083, 1085, 1086, 1087, 1090, 1098, 1103, 1131, 1135, 1136, 1141, 1142, 1143, 1144, 1145, 1148, 1149, 1150, 1152, 1154, 1155, 1158, 1160, 1161, 1163, 1169, 1171, 1172, 1175, 1176, 1179, 1191, 1192, 1194], "need": [28, 43, 45, 60, 62, 105, 126, 128, 130, 133, 143, 172, 173, 174, 177, 179, 183, 187, 188, 193, 204, 211, 212, 214, 224, 234, 248, 250, 272, 316, 357, 369, 399, 401, 404, 424, 432, 433, 452, 458, 459, 465, 469, 471, 472, 476, 479, 481, 484, 486, 489, 491, 495, 496, 518, 548, 550, 551, 552, 553, 583, 589, 595, 596, 611, 631, 651, 665, 672, 676, 705, 711, 740, 754, 757, 763, 768, 770, 776, 796, 810, 812, 825, 829, 833, 837, 876, 880, 893, 898, 934, 935, 936, 937, 941, 942, 943, 950, 954, 960, 961, 964, 967, 978, 982, 993, 1014, 1023, 1027, 1028, 1029, 1033, 1038, 1051, 1059, 1060, 1062, 1065, 1074, 1079, 1091, 1092, 1141, 1142, 1149, 1163, 1171, 1192], "mechan": [28, 32, 90, 159, 172, 173, 196, 204, 208, 219, 234, 288, 494, 672, 984, 1005, 1043, 1136, 1164, 1189, 1194, 1204], "where": [28, 53, 90, 110, 123, 125, 143, 153, 157, 158, 168, 171, 172, 173, 174, 175, 177, 179, 182, 187, 192, 193, 200, 201, 204, 205, 208, 231, 232, 233, 234, 241, 244, 247, 248, 250, 257, 260, 264, 272, 281, 288, 306, 314, 323, 327, 330, 369, 374, 375, 410, 414, 424, 432, 433, 435, 436, 437, 450, 454, 465, 467, 477, 487, 500, 507, 538, 540, 551, 566, 572, 589, 608, 669, 672, 676, 694, 752, 753, 757, 775, 831, 835, 837, 849, 879, 880, 894, 897, 900, 921, 926, 934, 941, 942, 943, 950, 955, 961, 963, 966, 969, 970, 986, 996, 997, 1004, 1008, 1009, 1012, 1023, 1027, 1028, 1035, 1037, 1039, 1042, 1064, 1066, 1076, 1118, 1136, 1143, 1148, 1169, 1191, 1194], "could": [28, 50, 57, 111, 112, 125, 130, 138, 142, 168, 169, 172, 173, 177, 179, 183, 193, 202, 204, 210, 224, 233, 234, 244, 254, 260, 288, 298, 300, 301, 319, 322, 334, 387, 415, 459, 480, 482, 495, 496, 520, 553, 604, 612, 676, 688, 694, 707, 708, 716, 731, 741, 756, 791, 808, 837, 850, 876, 894, 942, 943, 950, 961, 967, 1004, 1066, 1118, 1132, 1148, 1158, 1164, 1176, 1189], "exchang": [28, 79, 201, 244, 334, 339, 341, 476, 504, 520, 550, 704, 705, 808, 881, 999, 1093, 1101], "meta": [28, 39, 164, 179, 837, 849, 897], "retriev": [28, 183, 722, 837, 1039, 1087], "check": [28, 29, 38, 89, 98, 105, 120, 123, 130, 157, 171, 172, 174, 175, 176, 177, 178, 183, 187, 192, 204, 208, 212, 216, 241, 247, 250, 257, 260, 264, 288, 301, 354, 377, 380, 402, 417, 426, 428, 429, 434, 442, 449, 453, 461, 463, 479, 543, 544, 566, 577, 589, 596, 604, 611, 612, 629, 650, 688, 704, 705, 716, 753, 788, 790, 810, 812, 817, 837, 853, 854, 856, 933, 934, 941, 942, 964, 969, 975, 978, 982, 1012, 1013, 1018, 1021, 1023, 1030, 1059, 1064, 1077, 1087, 1091, 1095, 1097, 1099, 1115, 1121, 1134, 1164, 1169, 1178, 1189, 1199], "everyth": [28, 42, 43, 99, 125, 138, 147, 165, 172, 178, 179, 196, 204, 208, 212, 223, 231, 249, 250, 278, 287, 288, 291, 294, 308, 309, 323, 326, 352, 353, 380, 387, 404, 424, 427, 452, 466, 472, 476, 537, 595, 596, 598, 605, 609, 614, 619, 669, 711, 740, 744, 760, 767, 788, 789, 790, 806, 815, 835, 839, 842, 867, 870, 871, 873, 874, 898, 919, 933, 934, 935, 941, 942, 943, 960, 962, 963, 974, 987, 988, 994, 996, 999, 1009, 1031, 1037, 1042, 1046, 1143, 1158, 1202, 1203, 1204, 1206], "clearli": [28, 43, 128, 187, 204, 454, 701, 722, 749, 837, 856, 970, 1035, 1066, 1087, 1191], "intersphinx": [28, 169], "spinx": 28, "possibli": [29, 78, 86, 132, 172, 204, 478, 612, 688, 702, 711, 716, 731, 743, 753, 765, 766, 882, 919, 942, 990, 1025, 1152], "arrang": [29, 85, 111, 112, 176, 319, 553, 758, 870, 930], "subgroup": [29, 35, 38, 572], "refer": [29, 91, 98, 111, 112, 125, 131, 143, 153, 156, 171, 177, 178, 192, 194, 199, 208, 211, 213, 216, 217, 228, 229, 231, 233, 234, 239, 242, 243, 245, 246, 248, 249, 250, 255, 256, 257, 260, 264, 266, 268, 269, 271, 275, 283, 284, 286, 291, 293, 294, 298, 299, 301, 304, 305, 307, 310, 311, 313, 314, 322, 323, 325, 326, 327, 330, 332, 337, 338, 339, 341, 344, 345, 347, 348, 349, 351, 353, 355, 356, 357, 358, 359, 360, 369, 433, 439, 446, 485, 542, 550, 559, 561, 572, 594, 595, 596, 597, 612, 613, 615, 616, 617, 620, 623, 639, 645, 649, 658, 661, 662, 663, 671, 676, 679, 682, 683, 686, 687, 688, 689, 690, 691, 702, 722, 734, 735, 743, 746, 750, 754, 759, 767, 787, 788, 789, 790, 796, 797, 799, 801, 804, 807, 814, 818, 828, 837, 841, 846, 849, 852, 855, 858, 880, 910, 919, 933, 934, 941, 942, 966, 1005, 1011, 1027, 1030, 1035, 1036, 1058, 1085, 1086, 1093, 1094, 1095, 1105, 1108, 1116, 1117, 1119, 1120, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1149, 1150, 1169, 1171, 1189, 1190, 1191, 1199], "veri": [29, 35, 37, 38, 65, 66, 171, 172, 174, 193, 204, 208, 211, 213, 224, 229, 232, 255, 258, 281, 305, 327, 380, 387, 408, 415, 425, 426, 446, 462, 463, 465, 471, 478, 481, 496, 583, 594, 607, 622, 640, 668, 697, 698, 736, 739, 742, 753, 756, 775, 837, 842, 847, 875, 876, 935, 940, 942, 943, 960, 961, 977, 982, 997, 1011, 1039, 1047, 1063, 1066, 1070, 1071, 1077, 1081, 1085, 1091, 1136, 1143, 1144, 1165, 1174, 1181, 1189], "unawar": [29, 187, 204, 211], "simpli": [29, 60, 130, 166, 172, 175, 177, 179, 183, 187, 196, 260, 261, 300, 301, 322, 323, 415, 457, 499, 537, 604, 613, 615, 616, 665, 675, 686, 722, 743, 744, 749, 754, 768, 815, 869, 882, 941, 963, 967, 1011, 1027, 1035], "interest": [29, 123, 173, 174, 187, 193, 204, 212, 369, 481, 496, 1034, 1036, 1155], "catalog": [29, 1192], "chapter": [29, 42, 143, 224, 233, 241, 247, 257, 260, 261, 349, 572, 897], "subchapt": 29, "cluster_python": [29, 91, 229, 355, 356, 357, 358, 359, 360, 369, 790, 1036, 1043, 1044, 1045, 1046, 1050, 1058, 1069, 1078, 1089, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1137, 1138, 1142, 1143, 1146, 1149, 1150, 1152, 1156, 1163, 1166, 1168, 1173], "cluster_python_exercis": [29, 229, 369, 790, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134], "cluster_python_exercises_legaci": [29, 229, 369, 790, 1095, 1103, 1104, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1134], "legaci": [29, 229, 369, 499, 790, 1095, 1103, 1104, 1105, 1109, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1134, 1184], "cluster_python_exercises_userdb": [29, 790, 1095, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134], "databas": [29, 42, 43, 55, 79, 169, 191, 192, 211, 233, 239, 244, 245, 248, 250, 251, 254, 258, 272, 300, 301, 322, 360, 496, 497, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 790, 893, 924, 945, 1053, 1093, 1095, 1114, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1134, 1150, 1154, 1165, 1181], "seri": [29, 101, 173, 244, 248, 289, 290, 291, 292, 294, 296, 298, 323, 328, 334, 456, 477, 506, 790, 946, 1060, 1093, 1095, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1134, 1135, 1141, 1150, 1155, 1156, 1157, 1159, 1160, 1204], "cluster_python_exercises_sensor": [29, 790, 1095, 1122, 1123, 1124, 1134], "sensor": [29, 70, 73, 74, 75, 79, 82, 85, 98, 107, 110, 113, 114, 115, 116, 117, 120, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 137, 141, 142, 143, 147, 199, 208, 212, 248, 269, 280, 288, 297, 300, 301, 316, 319, 322, 326, 337, 340, 369, 373, 375, 493, 498, 500, 508, 514, 515, 518, 519, 523, 529, 532, 538, 542, 543, 544, 545, 546, 547, 548, 559, 562, 563, 564, 565, 566, 567, 568, 569, 594, 602, 667, 704, 753, 754, 755, 779, 781, 790, 837, 933, 940, 972, 974, 991, 1047, 1095, 1123, 1134, 1200], "And": [29, 98, 100, 103, 104, 105, 107, 125, 135, 147, 172, 173, 174, 176, 179, 202, 208, 211, 231, 234, 239, 241, 250, 252, 261, 269, 276, 277, 278, 280, 281, 283, 284, 286, 287, 290, 294, 304, 305, 307, 308, 310, 315, 324, 329, 331, 332, 335, 338, 339, 341, 344, 345, 348, 349, 351, 352, 477, 483, 489, 493, 500, 502, 514, 528, 542, 543, 544, 545, 546, 547, 548, 549, 552, 555, 559, 571, 572, 594, 602, 624, 632, 637, 647, 650, 658, 662, 668, 691, 703, 734, 735, 736, 745, 750, 757, 759, 767, 778, 787, 788, 789, 790, 860, 866, 867, 870, 871, 875, 879, 887, 889, 891, 892, 901, 902, 903, 904, 905, 906, 907, 908, 909, 911, 917, 927, 933, 940, 947, 949, 956, 962, 964, 969, 972, 974, 978, 988, 991, 994, 996, 999, 1011, 1013, 1015, 1016, 1017, 1018, 1019, 1022, 1034, 1036, 1041, 1044, 1045, 1046, 1050, 1051, 1075, 1092, 1093, 1094, 1095, 1108, 1119, 1129, 1130, 1131, 1134, 1146, 1150, 1156, 1163, 1189], "acquisit": [29, 130, 172, 199, 300, 301, 316, 319, 322, 323, 326, 586, 790, 1091, 1095, 1123, 1124, 1134], "cluster_python_exercises_herdt": [29, 790, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1134], "cluster_python_exercises_csv": [29, 790, 1092, 1093, 1094, 1095, 1134], "csv": [29, 44, 51, 53, 54, 55, 56, 79, 107, 130, 132, 135, 208, 211, 220, 223, 229, 233, 234, 237, 239, 241, 242, 245, 246, 248, 252, 255, 258, 260, 266, 267, 270, 285, 289, 290, 292, 295, 296, 300, 301, 307, 312, 316, 319, 322, 324, 328, 334, 340, 346, 350, 477, 790, 879, 882, 897, 919, 1047, 1050, 1053, 1087, 1095, 1129, 1130, 1131, 1132, 1134, 1136, 1139, 1140, 1141, 1142, 1150], "cluster_python_bas": [29, 91, 229, 355, 356, 357, 358, 359, 360, 369, 790, 1036, 1043, 1044, 1045, 1046, 1050, 1058, 1069, 1078, 1089, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1146, 1149, 1150, 1156, 1163], "fundament": [29, 61, 63, 74, 91, 195, 204, 207, 209, 211, 213, 216, 218, 223, 226, 229, 232, 235, 245, 251, 255, 263, 266, 355, 356, 357, 358, 359, 360, 369, 387, 388, 476, 506, 790, 815, 1036, 1043, 1044, 1045, 1046, 1050, 1069, 1078, 1083, 1089, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1146, 1149, 1150, 1156, 1163, 1164], "cluster_python_db": [29, 790, 1092, 1094, 1095, 1134, 1146], "cluster_python_advanc": [29, 790, 1036, 1043, 1044, 1045, 1046, 1050, 1089, 1092, 1093, 1094, 1095, 1108, 1119, 1122, 1123, 1124, 1129, 1130, 1131, 1132, 1133, 1134, 1137, 1138, 1142, 1146, 1150, 1152, 1163, 1166, 1168, 1173], "cluster_python_advanced_oo": [29, 790, 1036, 1043, 1044, 1045, 1046, 1050, 1095, 1122, 1123, 1124, 1129, 1131, 1134, 1163], "object": [29, 62, 71, 74, 75, 79, 91, 98, 104, 105, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 119, 123, 124, 125, 126, 130, 131, 134, 143, 148, 165, 187, 189, 192, 194, 199, 204, 211, 220, 222, 223, 228, 231, 232, 234, 237, 239, 241, 244, 245, 248, 249, 250, 251, 252, 256, 257, 262, 263, 265, 267, 270, 274, 282, 286, 288, 289, 291, 292, 294, 296, 299, 302, 306, 312, 318, 324, 328, 334, 337, 339, 340, 346, 350, 356, 358, 359, 362, 364, 369, 370, 371, 372, 406, 432, 459, 477, 479, 484, 485, 489, 490, 491, 496, 498, 500, 505, 514, 516, 522, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 559, 561, 566, 572, 586, 594, 595, 597, 599, 602, 603, 605, 607, 608, 613, 615, 616, 617, 619, 620, 623, 639, 645, 649, 650, 651, 658, 661, 662, 665, 666, 668, 671, 672, 676, 677, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 694, 702, 703, 705, 706, 716, 722, 734, 736, 738, 739, 743, 744, 749, 750, 752, 754, 755, 758, 759, 765, 767, 768, 774, 775, 780, 784, 785, 787, 788, 789, 790, 880, 933, 1011, 1012, 1013, 1016, 1017, 1018, 1019, 1021, 1027, 1030, 1032, 1033, 1035, 1036, 1039, 1043, 1044, 1045, 1046, 1047, 1049, 1051, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1066, 1075, 1077, 1083, 1084, 1095, 1122, 1123, 1124, 1129, 1131, 1134, 1141, 1155, 1157, 1159, 1160, 1161, 1163, 1169, 1189, 1190, 1192, 1194], "orient": [29, 71, 74, 75, 79, 98, 125, 143, 192, 211, 223, 232, 234, 239, 245, 248, 251, 262, 263, 272, 274, 286, 291, 294, 297, 299, 337, 339, 356, 358, 359, 369, 370, 371, 404, 477, 500, 514, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 559, 561, 594, 595, 602, 617, 620, 623, 639, 645, 649, 658, 661, 662, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 703, 734, 750, 758, 759, 767, 775, 787, 789, 790, 1036, 1043, 1044, 1045, 1046, 1060, 1095, 1122, 1123, 1124, 1129, 1131, 1134, 1163, 1169, 1190, 1192], "cluster_python_advanced_multithread": [29, 790, 1036, 1043, 1044, 1045, 1046, 1134], "cluster_python_swdev": [29, 790, 1089, 1134, 1137, 1138, 1142, 1150, 1152, 1163, 1166, 1168, 1173], "cluster_python_swdev_pytest": [29, 790, 1134, 1163, 1168], "pytest": [29, 248, 258, 261, 269, 272, 281, 290, 298, 300, 305, 316, 319, 322, 323, 326, 327, 345, 377, 478, 790, 1124, 1132, 1133, 1134, 1163], "cluster_python_misc": [29, 91, 229, 355, 356, 357, 358, 359, 360, 369, 790, 1036, 1058, 1089, 1093, 1094, 1095, 1105, 1108, 1116, 1119, 1120, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1137, 1138, 1142, 1143, 1149, 1150, 1152, 1156, 1163, 1166, 1173], "cluster_python_misc_ai": [29, 790, 1134, 1137, 1138, 1142, 1143, 1150], "machin": [29, 103, 111, 112, 125, 164, 174, 179, 193, 208, 224, 231, 232, 241, 242, 245, 247, 257, 260, 314, 322, 326, 330, 340, 368, 372, 392, 408, 410, 418, 426, 454, 458, 472, 553, 554, 790, 837, 864, 865, 870, 873, 876, 926, 933, 947, 948, 949, 950, 952, 953, 954, 996, 1011, 1014, 1021, 1035, 1134, 1138, 1142, 1150, 1191], "artifici": [29, 208, 233, 291, 322, 326, 454, 688, 790, 954, 1027, 1134, 1138, 1142, 1143, 1150], "intellig": [29, 172, 208, 248, 284, 291, 294, 304, 310, 322, 326, 344, 345, 375, 790, 808, 1032, 1036, 1134, 1138, 1142, 1143, 1150], "cluster_python_misc_panda": [29, 790, 1134, 1150, 1156], "panda": [29, 193, 204, 223, 229, 242, 255, 269, 272, 290, 293, 305, 322, 324, 326, 329, 333, 335, 346, 387, 478, 790, 1059, 1134, 1136, 1139, 1142, 1150], "cluster_python_draft": [29, 790, 1089, 1134], "python_python_5550_xml_etre": [29, 790, 1134], "xml": [29, 130, 168, 169, 319, 340, 790, 1134, 1150], "elementtre": [29, 272, 790, 1134, 1150], "etre": [29, 272, 790, 1134, 1150], "python_basics_python_0220_for": [29, 91, 229, 355, 356, 357, 358, 359, 360, 369, 790, 1036, 1058, 1092, 1093, 1094, 1095, 1105, 1108, 1109, 1111, 1115, 1116, 1117, 1118, 1119, 1120, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1146, 1150], "loop": [29, 32, 34, 38, 42, 61, 63, 90, 91, 98, 111, 112, 125, 130, 134, 143, 160, 165, 172, 187, 196, 208, 211, 213, 216, 217, 218, 221, 229, 231, 232, 233, 235, 239, 242, 245, 250, 251, 253, 255, 256, 261, 263, 265, 266, 268, 269, 271, 281, 284, 291, 294, 301, 304, 305, 310, 311, 319, 323, 327, 332, 333, 335, 337, 338, 339, 344, 345, 348, 349, 351, 355, 356, 357, 358, 359, 360, 361, 369, 374, 392, 395, 398, 407, 410, 422, 429, 430, 431, 438, 444, 448, 451, 452, 455, 456, 464, 468, 473, 474, 541, 542, 583, 594, 625, 630, 687, 694, 696, 722, 734, 757, 768, 787, 789, 790, 825, 835, 840, 854, 868, 870, 874, 881, 937, 959, 960, 961, 969, 995, 999, 1005, 1008, 1009, 1036, 1037, 1040, 1041, 1046, 1058, 1092, 1093, 1094, 1095, 1097, 1099, 1105, 1107, 1108, 1109, 1111, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1136, 1146, 1150, 1152, 1188, 1189, 1190, 1199], "gt": [29, 32, 35, 36, 53, 55, 56, 73, 74, 75, 88, 91, 126, 127, 128, 129, 131, 133, 134, 135, 136, 142, 161, 191, 194, 205, 210, 215, 222, 228, 229, 231, 236, 241, 244, 247, 252, 254, 257, 260, 264, 267, 270, 273, 282, 285, 289, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 355, 356, 357, 358, 359, 360, 363, 364, 369, 407, 422, 431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 483, 500, 514, 542, 543, 544, 545, 546, 547, 548, 549, 552, 559, 561, 594, 602, 617, 620, 623, 639, 645, 649, 658, 661, 662, 667, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 696, 703, 710, 734, 735, 745, 750, 759, 767, 775, 787, 789, 790, 794, 797, 799, 802, 804, 807, 809, 813, 814, 816, 818, 820, 822, 828, 830, 832, 834, 841, 843, 846, 848, 852, 855, 858, 860, 864, 865, 866, 867, 870, 871, 878, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 917, 927, 933, 940, 945, 946, 947, 948, 949, 956, 962, 964, 972, 974, 976, 988, 991, 994, 996, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1036, 1043, 1044, 1045, 1046, 1050, 1058, 1069, 1078, 1089, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1137, 1138, 1142, 1146, 1149, 1150, 1152, 1156, 1163, 1166, 1168, 1173, 1174], "python_basics_python_0450_dictionari": [29, 91, 790, 1036, 1058, 1095, 1108, 1119, 1134], "python_advanced_modul": [29, 790, 1036, 1089, 1092, 1093, 1094, 1095, 1129, 1130, 1131, 1132, 1133, 1134, 1137, 1138, 1142, 1146, 1150, 1152, 1163, 1166, 1168, 1173], "python_exercises_legacy_for_prim": [29, 229, 790, 1095, 1105, 1108, 1109, 1111, 1115, 1116, 1117, 1118, 1119, 1120, 1134], "prime": [29, 38, 191, 192, 211, 215, 216, 218, 223, 229, 235, 239, 251, 255, 258, 263, 269, 284, 291, 304, 305, 310, 311, 332, 333, 338, 339, 344, 345, 348, 349, 351, 454, 790, 1095, 1105, 1108, 1109, 1111, 1116, 1117, 1118, 1119, 1120, 1134, 1199], "python_exercises_legacy_while_prim": [29, 229, 790, 1095, 1105, 1108, 1109, 1111, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1134], "python_basics_python_0225_rang": [29, 91, 229, 790, 1036, 1058, 1092, 1093, 1094, 1095, 1105, 1108, 1109, 1111, 1115, 1116, 1117, 1118, 1119, 1120, 1134, 1146], "python_exercises_legacy_join_funct": [29, 229, 790, 1095, 1105, 1108, 1109, 1116, 1117, 1119, 1120, 1134], "join": [29, 35, 62, 183, 211, 229, 231, 232, 237, 239, 241, 244, 245, 247, 252, 256, 262, 270, 285, 292, 302, 306, 312, 328, 335, 340, 346, 351, 354, 363, 478, 571, 694, 755, 761, 766, 768, 790, 980, 985, 1008, 1095, 1105, 1108, 1116, 1117, 1119, 1120, 1134, 1169], "python_exercises_legacy_uniq_funct": [29, 229, 790, 1095, 1105, 1108, 1109, 1116, 1117, 1118, 1119, 1120, 1134], "uniq": [29, 191, 192, 209, 211, 223, 229, 239, 242, 245, 251, 255, 261, 263, 266, 284, 291, 304, 305, 310, 311, 327, 332, 333, 338, 339, 344, 345, 348, 349, 570, 790, 930, 1095, 1105, 1108, 1109, 1116, 1117, 1120, 1134], "python_basics_python_0270_funct": [29, 91, 229, 790, 1036, 1058, 1078, 1092, 1093, 1094, 1095, 1105, 1108, 1109, 1111, 1115, 1116, 1117, 1118, 1119, 1120, 1126, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1146], "python_basics_python_0150_datatypes_overview_compound": [29, 91, 229, 355, 356, 357, 358, 359, 360, 369, 790, 1036, 1043, 1044, 1045, 1046, 1050, 1058, 1092, 1093, 1094, 1095, 1103, 1104, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1146, 1149, 1150, 1156, 1163], "python_basics_python_0150_datatypes_overview": [29, 91, 229, 355, 356, 357, 358, 359, 360, 369, 790, 1036, 1043, 1044, 1045, 1046, 1050, 1058, 1069, 1078, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1146, 1149, 1150, 1156, 1163], "python_exercises_legacy_max_numbers_funct": [29, 229, 790, 1095, 1105, 1108, 1109, 1111, 1115, 1116, 1117, 1118, 1119, 1120, 1134], "determin": [29, 103, 125, 165, 171, 195, 200, 202, 210, 211, 216, 218, 223, 229, 235, 239, 241, 242, 245, 251, 255, 261, 263, 266, 268, 269, 284, 291, 304, 305, 310, 311, 332, 333, 338, 339, 344, 345, 348, 349, 353, 672, 706, 707, 744, 790, 845, 867, 886, 887, 888, 889, 890, 891, 892, 929, 933, 942, 960, 997, 998, 1028, 1095, 1097, 1098, 1099, 1102, 1105, 1108, 1109, 1115, 1116, 1117, 1118, 1119, 1120, 1134, 1164, 1199], "python_exercises_legacy_max_numb": [29, 229, 790, 1095, 1105, 1108, 1109, 1110, 1111, 1115, 1116, 1117, 1118, 1119, 1120, 1134], "python_exercises_legacy_distil": [29, 229, 790, 1095, 1105, 1108, 1119, 1134], "elimin": [29, 58, 165, 229, 251, 258, 260, 261, 263, 269, 284, 291, 304, 310, 311, 332, 338, 339, 344, 345, 348, 349, 521, 566, 694, 757, 775, 776, 790, 930, 1037, 1095, 1108, 1119, 1134], "empti": [29, 38, 42, 48, 50, 172, 175, 182, 190, 210, 212, 229, 241, 244, 251, 252, 258, 260, 261, 263, 264, 267, 269, 270, 273, 284, 285, 290, 291, 292, 302, 304, 306, 310, 311, 328, 332, 334, 338, 339, 340, 344, 345, 346, 348, 349, 364, 398, 450, 589, 598, 599, 603, 613, 615, 631, 632, 650, 668, 688, 694, 743, 753, 754, 766, 788, 790, 800, 837, 864, 865, 877, 881, 891, 928, 937, 950, 984, 1004, 1042, 1083, 1095, 1108, 1109, 1113, 1119, 1134], "comment": [29, 34, 35, 36, 38, 44, 120, 121, 165, 174, 209, 229, 230, 232, 245, 251, 253, 257, 258, 261, 263, 268, 269, 284, 291, 293, 304, 310, 311, 332, 338, 339, 344, 345, 348, 349, 369, 392, 437, 456, 484, 521, 522, 550, 790, 942, 1080, 1095, 1108, 1119, 1134, 1149], "line": [29, 34, 35, 36, 38, 62, 123, 131, 153, 168, 169, 172, 174, 177, 187, 191, 194, 195, 208, 212, 222, 224, 228, 229, 231, 232, 237, 238, 241, 242, 244, 245, 247, 248, 250, 251, 252, 255, 257, 258, 260, 261, 263, 264, 267, 269, 270, 272, 273, 284, 285, 290, 291, 292, 294, 298, 302, 304, 305, 306, 310, 311, 312, 324, 328, 332, 334, 338, 339, 340, 344, 345, 346, 348, 349, 350, 360, 369, 392, 398, 399, 407, 411, 414, 416, 422, 431, 433, 438, 444, 448, 451, 455, 460, 464, 467, 468, 470, 473, 474, 478, 481, 484, 491, 521, 522, 672, 675, 678, 696, 734, 787, 789, 790, 806, 810, 817, 819, 837, 864, 865, 868, 877, 879, 881, 903, 924, 926, 928, 929, 930, 934, 938, 941, 942, 943, 985, 995, 1026, 1032, 1033, 1034, 1037, 1038, 1039, 1047, 1048, 1054, 1055, 1062, 1076, 1077, 1079, 1081, 1083, 1085, 1086, 1087, 1093, 1095, 1108, 1114, 1119, 1133, 1134, 1136, 1139, 1144, 1149, 1157, 1158, 1170], "python_exercises_legacy_revert": [29, 229, 790, 1095, 1105, 1108, 1116, 1119, 1134], "revert": [29, 142, 172, 229, 790, 815, 833, 995, 1054, 1095, 1105, 1108, 1119, 1134], "python_basics_python_0139_commandline_argv": [29, 91, 229, 369, 790, 1058, 1089, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1102, 1103, 1105, 1108, 1109, 1110, 1111, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134], "argument": [29, 57, 62, 91, 98, 125, 147, 165, 171, 174, 177, 191, 192, 205, 208, 220, 229, 232, 239, 241, 245, 247, 248, 250, 251, 253, 255, 257, 258, 261, 262, 263, 264, 266, 269, 284, 285, 288, 291, 294, 298, 300, 301, 304, 305, 306, 310, 311, 319, 322, 323, 326, 327, 328, 332, 333, 338, 339, 344, 345, 348, 349, 369, 391, 392, 437, 444, 448, 451, 455, 464, 468, 473, 474, 478, 540, 572, 596, 606, 607, 696, 711, 731, 734, 744, 756, 787, 788, 789, 790, 795, 796, 897, 919, 933, 967, 969, 971, 974, 991, 1029, 1032, 1036, 1058, 1060, 1061, 1078, 1086, 1089, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1102, 1103, 1105, 1107, 1108, 1109, 1110, 1111, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1147, 1169, 1171], "sy": [29, 32, 91, 126, 138, 142, 173, 190, 192, 194, 195, 220, 222, 223, 229, 232, 238, 241, 245, 247, 252, 255, 257, 260, 261, 263, 264, 266, 267, 269, 282, 284, 285, 290, 291, 294, 300, 304, 305, 306, 310, 311, 322, 326, 328, 332, 333, 338, 339, 340, 344, 345, 348, 349, 350, 354, 355, 362, 369, 465, 478, 537, 553, 554, 790, 792, 796, 817, 894, 923, 934, 941, 942, 943, 959, 960, 961, 963, 967, 968, 969, 970, 971, 973, 975, 977, 978, 992, 999, 1001, 1004, 1008, 1025, 1035, 1042, 1057, 1058, 1077, 1085, 1087, 1089, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1102, 1103, 1105, 1107, 1108, 1109, 1110, 1111, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1161, 1169, 1184], "argv": [29, 42, 50, 91, 174, 191, 192, 195, 205, 223, 229, 232, 233, 238, 241, 245, 247, 250, 251, 255, 257, 260, 261, 263, 266, 269, 284, 290, 291, 294, 300, 304, 305, 310, 311, 322, 326, 332, 333, 338, 339, 340, 344, 345, 348, 349, 354, 362, 369, 443, 478, 479, 501, 540, 790, 941, 967, 968, 969, 970, 971, 975, 978, 992, 999, 1008, 1029, 1035, 1042, 1058, 1087, 1089, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1102, 1103, 1105, 1107, 1108, 1109, 1110, 1111, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1176, 1181], "python_basics_python_0500_fil": [29, 91, 229, 355, 356, 357, 358, 359, 360, 369, 790, 1036, 1058, 1093, 1094, 1095, 1105, 1108, 1116, 1119, 1120, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1150], "python_exercises_legacy_function_prim": [29, 229, 790, 1095, 1105, 1108, 1109, 1115, 1116, 1117, 1118, 1119, 1120, 1134], "python_exercises_legacy_uniq_gener": [29, 790, 1095, 1108, 1119, 1134], "python_exercises_legacy_passwd": [29, 790, 1095, 1108, 1119, 1134], "pars": [29, 191, 228, 229, 239, 240, 242, 245, 251, 255, 260, 261, 263, 269, 272, 300, 305, 322, 326, 355, 360, 373, 790, 1089, 1095, 1108, 1119, 1134, 1136, 1161], "passwd": [29, 101, 102, 125, 212, 222, 231, 244, 245, 247, 251, 252, 255, 260, 261, 263, 267, 269, 270, 278, 285, 287, 288, 292, 302, 306, 308, 309, 328, 334, 340, 346, 352, 353, 788, 790, 867, 869, 872, 874, 877, 879, 881, 892, 911, 914, 916, 917, 919, 922, 924, 928, 930, 933, 934, 944, 945, 953, 954, 958, 959, 964, 970, 990, 1004, 1032, 1034, 1081, 1085, 1095, 1108, 1119, 1134, 1164], "python_advanced_python_1010_generators_yield": [29, 790, 1036, 1092, 1093, 1094, 1095, 1108, 1119, 1134, 1146], "python_exercises_legacy_wc": [29, 229, 790, 1095, 1105, 1108, 1116, 1119, 1120, 1134], "word": [29, 43, 165, 172, 192, 200, 204, 208, 211, 218, 223, 229, 233, 239, 242, 250, 251, 255, 258, 260, 261, 263, 266, 268, 269, 276, 277, 279, 284, 291, 298, 304, 305, 306, 310, 311, 323, 332, 333, 336, 337, 338, 339, 344, 345, 348, 349, 369, 374, 399, 452, 494, 499, 572, 672, 750, 759, 767, 789, 790, 877, 879, 926, 998, 1095, 1105, 1108, 1109, 1111, 1115, 1116, 1117, 1118, 1119, 1121, 1134], "charact": [29, 174, 190, 215, 220, 224, 229, 233, 237, 244, 250, 260, 267, 270, 288, 291, 306, 312, 328, 392, 393, 399, 407, 410, 416, 417, 422, 431, 438, 444, 448, 451, 454, 455, 459, 461, 464, 468, 473, 474, 659, 696, 734, 787, 788, 789, 790, 799, 804, 807, 814, 818, 828, 831, 839, 841, 846, 852, 853, 855, 858, 877, 879, 897, 919, 933, 941, 996, 1046, 1065, 1079, 1080, 1081, 1085, 1087, 1095, 1098, 1105, 1108, 1116, 1119, 1134, 1149, 1176], "python_exercises_legacy_cmdline_digit": [29, 229, 369, 790, 1095, 1103, 1105, 1108, 1109, 1111, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1134], "digit": [29, 165, 191, 192, 211, 218, 223, 229, 239, 242, 251, 255, 260, 261, 263, 264, 266, 268, 269, 284, 291, 304, 305, 306, 310, 311, 323, 332, 333, 334, 338, 339, 344, 345, 348, 349, 350, 354, 374, 400, 409, 790, 1095, 1105, 1108, 1109, 1111, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1134], "python_basics_python_0120_helloworld": [29, 91, 229, 355, 356, 357, 358, 359, 360, 369, 790, 1036, 1043, 1044, 1045, 1046, 1050, 1058, 1069, 1078, 1089, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1146, 1149, 1150, 1156, 1163], "world": [29, 79, 91, 132, 165, 168, 169, 172, 177, 183, 202, 211, 215, 216, 218, 222, 229, 233, 235, 237, 239, 241, 242, 245, 247, 250, 251, 252, 254, 255, 261, 262, 263, 264, 266, 267, 269, 272, 284, 285, 291, 294, 304, 305, 310, 311, 324, 332, 333, 334, 338, 339, 344, 345, 348, 349, 350, 355, 356, 357, 358, 359, 360, 364, 369, 402, 407, 411, 422, 431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 479, 484, 492, 515, 520, 522, 693, 696, 734, 760, 768, 787, 789, 790, 794, 797, 799, 802, 804, 807, 814, 818, 822, 828, 834, 839, 841, 846, 849, 852, 855, 858, 875, 888, 900, 933, 971, 982, 997, 998, 1011, 1023, 1025, 1027, 1028, 1029, 1036, 1043, 1044, 1045, 1046, 1050, 1058, 1062, 1063, 1069, 1072, 1074, 1078, 1079, 1089, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1136, 1141, 1146, 1149, 1150, 1156, 1163, 1185, 1189, 1199], "python_exercises_legacy_python_0350_exercis": [29, 229, 790, 1095, 1105, 1108, 1116, 1117, 1119, 1120, 1134], "right": [29, 34, 35, 36, 38, 42, 62, 81, 85, 130, 153, 165, 171, 172, 174, 177, 192, 212, 223, 224, 229, 234, 239, 252, 254, 260, 264, 272, 285, 298, 306, 349, 355, 361, 393, 413, 414, 415, 421, 432, 462, 492, 543, 551, 598, 613, 615, 616, 694, 706, 722, 748, 753, 758, 770, 790, 798, 817, 821, 837, 856, 879, 880, 882, 897, 952, 982, 1032, 1054, 1065, 1071, 1095, 1105, 1108, 1116, 1119, 1120, 1134], "justifi": [29, 192, 204, 229, 239, 260, 306, 393, 760, 790, 1059, 1095, 1105, 1108, 1116, 1119, 1120, 1134], "python_basics_python_0300_str": [29, 91, 229, 355, 356, 357, 358, 359, 360, 369, 790, 1036, 1058, 1093, 1094, 1095, 1105, 1108, 1116, 1117, 1119, 1120, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1149, 1150], "python_basics_python_0320_strings_method": [29, 91, 229, 355, 356, 357, 358, 359, 360, 369, 790, 1036, 1058, 1093, 1094, 1095, 1105, 1108, 1116, 1117, 1119, 1120, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1149, 1150], "method": [29, 42, 43, 54, 55, 57, 62, 70, 71, 74, 91, 98, 107, 108, 111, 112, 122, 130, 136, 138, 142, 143, 177, 208, 209, 210, 211, 213, 216, 229, 230, 232, 234, 239, 242, 243, 245, 250, 251, 253, 255, 256, 259, 261, 262, 263, 264, 266, 269, 271, 281, 284, 286, 290, 291, 294, 296, 298, 299, 300, 301, 304, 305, 307, 310, 311, 313, 316, 319, 322, 323, 325, 326, 327, 329, 332, 333, 335, 337, 338, 339, 341, 344, 345, 347, 348, 349, 351, 355, 356, 357, 358, 359, 360, 369, 373, 374, 450, 476, 496, 498, 500, 504, 514, 521, 522, 540, 542, 547, 552, 553, 554, 559, 561, 566, 572, 585, 587, 594, 595, 596, 599, 608, 620, 622, 623, 639, 645, 649, 655, 658, 661, 662, 665, 666, 667, 668, 671, 676, 677, 679, 682, 683, 686, 687, 688, 689, 690, 691, 694, 703, 716, 733, 734, 737, 741, 750, 758, 759, 767, 768, 774, 775, 781, 784, 785, 787, 788, 789, 790, 798, 800, 805, 806, 815, 817, 827, 839, 850, 982, 1032, 1033, 1036, 1039, 1043, 1047, 1048, 1049, 1050, 1051, 1055, 1058, 1063, 1072, 1075, 1093, 1094, 1095, 1105, 1108, 1116, 1117, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1136, 1141, 1145, 1149, 1150, 1155, 1158, 1160, 1192, 1199, 1206], "python_basics_python_0310_strings_format": [29, 91, 229, 790, 1058, 1095, 1105, 1108, 1116, 1117, 1119, 1120, 1134], "python_exercises_legacy_mixed_list_execut": [29, 229, 790, 1095, 1105, 1108, 1109, 1110, 1111, 1112, 1115, 1116, 1117, 1118, 1119, 1120, 1134], "execut": [29, 44, 62, 109, 111, 112, 125, 153, 165, 168, 172, 174, 182, 183, 187, 192, 199, 204, 211, 218, 224, 229, 239, 241, 242, 245, 247, 255, 257, 260, 284, 291, 304, 305, 310, 311, 314, 315, 330, 331, 332, 333, 338, 339, 344, 345, 348, 349, 354, 355, 362, 369, 391, 392, 426, 428, 432, 454, 459, 463, 472, 480, 483, 484, 496, 515, 518, 525, 532, 537, 551, 580, 604, 619, 722, 788, 790, 835, 837, 863, 864, 865, 872, 874, 879, 884, 885, 893, 897, 944, 953, 982, 995, 1009, 1011, 1012, 1013, 1014, 1017, 1021, 1023, 1027, 1029, 1035, 1039, 1043, 1046, 1059, 1069, 1070, 1073, 1093, 1095, 1105, 1108, 1109, 1110, 1111, 1115, 1116, 1117, 1118, 1119, 1120, 1134, 1145, 1148, 1177, 1179, 1191, 1202, 1203], "python_exercises_legacy_mixed_list_interact": [29, 229, 790, 1095, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1134], "interact": [29, 62, 86, 136, 138, 142, 147, 168, 179, 211, 212, 218, 229, 239, 241, 242, 245, 247, 255, 257, 260, 265, 284, 285, 291, 304, 305, 310, 311, 313, 332, 333, 338, 339, 344, 345, 348, 349, 790, 897, 945, 950, 953, 963, 1025, 1060, 1095, 1104, 1105, 1108, 1109, 1110, 1111, 1112, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1134, 1141, 1149], "interpret": [29, 62, 168, 174, 192, 193, 204, 208, 211, 218, 229, 232, 239, 241, 242, 245, 247, 255, 257, 260, 264, 280, 281, 284, 290, 291, 304, 305, 306, 310, 311, 313, 322, 323, 327, 332, 333, 338, 339, 344, 345, 348, 349, 369, 454, 489, 493, 500, 504, 514, 528, 542, 594, 790, 837, 921, 943, 964, 1011, 1012, 1059, 1060, 1061, 1062, 1093, 1095, 1104, 1105, 1108, 1109, 1110, 1111, 1112, 1115, 1116, 1117, 1118, 1119, 1120, 1134, 1136, 1149, 1171, 1192], "python_basics_python_0140_vari": [29, 91, 229, 355, 356, 357, 358, 359, 360, 369, 790, 1036, 1043, 1044, 1045, 1046, 1050, 1058, 1069, 1078, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1146, 1149, 1150, 1156, 1163], "python_basics_python_0160_boolean": [29, 91, 229, 355, 356, 357, 358, 359, 360, 369, 790, 1036, 1058, 1069, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1146, 1150], "boolean": [29, 58, 85, 91, 192, 193, 209, 211, 213, 216, 217, 218, 229, 235, 239, 242, 243, 245, 246, 247, 251, 253, 255, 256, 261, 262, 263, 265, 266, 268, 269, 284, 291, 294, 304, 305, 310, 311, 332, 333, 335, 338, 339, 341, 344, 345, 348, 349, 350, 355, 356, 357, 358, 359, 360, 369, 374, 398, 421, 437, 790, 984, 1036, 1058, 1066, 1069, 1070, 1081, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1146, 1148, 1150, 1199], "python_basics_python_0193_whil": [29, 91, 229, 355, 356, 357, 358, 359, 360, 369, 790, 1036, 1058, 1092, 1093, 1094, 1095, 1097, 1099, 1105, 1108, 1109, 1111, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1146, 1150], "python_basics_python_0170_if": [29, 91, 229, 355, 356, 357, 358, 359, 360, 369, 790, 1036, 1058, 1069, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1102, 1105, 1108, 1109, 1110, 1111, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1146, 1150], "statement": [29, 54, 91, 111, 112, 115, 119, 192, 204, 208, 209, 210, 211, 216, 218, 223, 229, 232, 233, 235, 239, 242, 245, 251, 255, 261, 263, 266, 269, 275, 281, 284, 291, 294, 298, 300, 301, 304, 305, 310, 311, 316, 319, 322, 323, 326, 327, 332, 333, 338, 339, 344, 345, 348, 349, 355, 356, 357, 358, 359, 360, 369, 374, 391, 394, 398, 411, 424, 426, 427, 430, 431, 436, 438, 444, 448, 451, 455, 458, 464, 468, 473, 474, 650, 676, 695, 696, 734, 787, 789, 790, 798, 870, 910, 996, 1017, 1031, 1034, 1036, 1037, 1042, 1046, 1048, 1058, 1065, 1068, 1070, 1077, 1089, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1102, 1105, 1108, 1109, 1110, 1111, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1137, 1138, 1142, 1146, 1150, 1152, 1163, 1166, 1169, 1173, 1199], "python_exercises_legacy_dict_keyerror": [29, 790, 1095, 1104, 1108, 1134], "python_basics_python_0210_indexing_sl": [29, 91, 790, 1058, 1095, 1108, 1119, 1134, 1150, 1156], "python_exercises_legacy_python_1011_generators_yield": [29, 790, 1095, 1108, 1134], "fibonacci": [29, 192, 195, 211, 232, 245, 284, 298, 300, 301, 305, 311, 322, 323, 326, 701, 723, 790, 1039, 1040, 1041, 1095, 1108, 1134], "python_exercises_userdb_csvread": [29, 790, 1095, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134], "reader": [29, 169, 244, 258, 261, 266, 269, 281, 284, 304, 305, 310, 311, 332, 333, 339, 340, 344, 345, 348, 349, 459, 478, 501, 790, 881, 1047, 1050, 1077, 1095, 1125, 1126, 1129, 1130, 1131, 1132, 1133, 1134], "python_misc_csv": [29, 790, 1093, 1094, 1095, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1150], "python_exercises_userdb_user_json": [29, 790, 1095, 1129, 1130, 1131, 1132, 1134], "json": [29, 79, 86, 93, 125, 130, 133, 169, 205, 211, 221, 235, 239, 240, 248, 249, 257, 260, 261, 265, 268, 274, 283, 316, 318, 319, 321, 323, 326, 340, 389, 790, 1050, 1095, 1129, 1130, 1131, 1134, 1152, 1165], "python_exercises_userdb_userdb_modul": [29, 790, 1095, 1129, 1130, 1131, 1132, 1133, 1134], "refactor": [29, 43, 55, 138, 169, 258, 261, 266, 269, 281, 284, 300, 304, 305, 310, 311, 332, 333, 339, 344, 345, 348, 349, 437, 477, 494, 741, 790, 798, 804, 814, 818, 828, 839, 841, 846, 852, 855, 858, 933, 1050, 1095, 1129, 1130, 1131, 1132, 1134], "both": [29, 54, 62, 86, 125, 126, 128, 134, 138, 142, 162, 172, 174, 179, 192, 204, 210, 231, 247, 250, 258, 261, 264, 266, 269, 281, 284, 296, 304, 305, 310, 311, 332, 333, 339, 344, 345, 348, 349, 470, 476, 478, 479, 504, 550, 552, 572, 604, 612, 685, 741, 752, 790, 808, 831, 837, 876, 977, 981, 985, 998, 1021, 1027, 1034, 1047, 1050, 1054, 1061, 1068, 1075, 1079, 1084, 1095, 1098, 1101, 1107, 1129, 1130, 1131, 1132, 1134, 1142, 1169, 1176, 1189], "Into": [29, 98, 250, 255, 258, 261, 266, 269, 281, 284, 290, 304, 305, 310, 311, 332, 333, 339, 344, 345, 348, 349, 407, 422, 431, 437, 438, 444, 448, 451, 455, 464, 468, 472, 473, 474, 541, 542, 594, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 696, 734, 787, 789, 790, 1025, 1050, 1095, 1129, 1130, 1131, 1132, 1134], "python_exercises_userdb_mqtt_publish_csv": [29, 790, 1095, 1129, 1130, 1134], "mqtt": [29, 123, 129, 130, 132, 135, 221, 223, 237, 239, 248, 261, 262, 266, 300, 301, 316, 319, 322, 375, 378, 380, 790, 1050, 1091, 1095, 1129, 1132, 1134, 1150], "publish": [29, 123, 133, 176, 178, 187, 248, 260, 261, 281, 323, 366, 375, 377, 790, 1050, 1095, 1129, 1132, 1134, 1136, 1167], "python_exercises_userdb_user_class_person": [29, 790, 1095, 1129, 1131, 1134], "awai": [29, 62, 78, 85, 171, 172, 173, 177, 196, 212, 233, 239, 247, 281, 284, 304, 305, 310, 316, 319, 332, 338, 339, 344, 348, 358, 490, 753, 790, 876, 897, 1008, 1032, 1050, 1095, 1129, 1134], "raw": [29, 62, 138, 217, 220, 223, 228, 240, 243, 252, 256, 262, 276, 277, 281, 283, 284, 288, 290, 304, 305, 310, 313, 316, 319, 323, 332, 338, 339, 344, 348, 354, 364, 390, 478, 479, 485, 508, 515, 553, 633, 754, 790, 873, 1050, 1066, 1071, 1087, 1095, 1129, 1134], "python_advanced_oo_namedtupl": [29, 790, 1036, 1050, 1095, 1129, 1131, 1134], "namedtupl": [29, 208, 216, 223, 238, 239, 241, 247, 257, 260, 281, 298, 300, 301, 305, 316, 319, 322, 323, 326, 327, 339, 345, 349, 350, 790, 1036, 1050, 1095, 1129, 1131, 1134, 1154, 1199], "python_exercises_userdb_csvdictreader_funct": [29, 790, 1095, 1126, 1129, 1130, 1131, 1132, 1133, 1134], "dictread": [29, 223, 244, 245, 258, 261, 266, 269, 281, 284, 304, 305, 310, 311, 328, 332, 333, 339, 344, 345, 348, 349, 790, 1050, 1093, 1095, 1129, 1130, 1131, 1132, 1133, 1134], "python_exercises_userdb_csvdictread": [29, 790, 1095, 1125, 1126, 1129, 1130, 1131, 1132, 1133, 1134], "python_exercises_userdb_csvreader_funct": [29, 790, 1095, 1128, 1129, 1134], "python_exercises_sensors_project_setup": [29, 790, 1095, 1122, 1123, 1124, 1134], "setup": [29, 107, 125, 138, 152, 160, 169, 187, 199, 203, 204, 242, 244, 260, 267, 270, 272, 277, 279, 285, 288, 292, 302, 306, 328, 334, 340, 346, 366, 369, 374, 375, 460, 493, 507, 518, 520, 534, 548, 551, 553, 554, 687, 689, 790, 805, 831, 928, 933, 941, 943, 958, 960, 971, 1008, 1012, 1016, 1018, 1021, 1022, 1032, 1039, 1047, 1091, 1095, 1122, 1134, 1170, 1180, 1182], "python_exercises_sensors_sensor_const": [29, 790, 1095, 1122, 1123, 1124, 1134], "python_advanced_oo_method": [29, 790, 1036, 1050, 1095, 1122, 1123, 1124, 1134], "python_exercises_herdt_boolean": [29, 790, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1134], "express": [29, 61, 63, 191, 207, 208, 210, 211, 221, 231, 240, 245, 246, 248, 252, 271, 272, 274, 275, 276, 277, 280, 281, 286, 305, 306, 311, 324, 335, 341, 392, 394, 398, 402, 411, 412, 414, 415, 416, 419, 421, 424, 426, 427, 429, 431, 437, 438, 444, 448, 451, 455, 464, 468, 473, 474, 478, 493, 502, 514, 515, 518, 522, 528, 529, 542, 550, 594, 596, 674, 696, 707, 711, 716, 734, 787, 789, 790, 897, 930, 1011, 1031, 1041, 1047, 1068, 1070, 1077, 1079, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1132, 1133, 1134, 1136, 1157, 1188, 1189, 1190], "python_exercises_herdt_while_even_numb": [29, 790, 1095, 1097, 1099, 1134], "python_exercises_herdt_username_password": [29, 790, 1095, 1097, 1099, 1102, 1134], "usernam": [29, 187, 216, 224, 245, 366, 790, 864, 872, 881, 944, 954, 1081, 1095, 1097, 1099, 1114, 1134, 1199], "password": [29, 179, 182, 187, 212, 216, 224, 245, 366, 369, 374, 790, 872, 894, 934, 944, 945, 950, 1095, 1097, 1099, 1114, 1134, 1147, 1199], "python_exercises_herdt_swap": [29, 790, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1134], "python_exercises_herdt_max_numb": [29, 790, 1095, 1097, 1098, 1099, 1100, 1102, 1134], "python_exercises_herdt_greet": [29, 790, 1095, 1097, 1098, 1099, 1102, 1134], "python_exercises_csv_csv_modul": [29, 790, 1093, 1094, 1095, 1134], "python_exercises_csv_csv_db": [29, 790, 1092, 1094, 1095, 1134], "sqlite3": [29, 86, 208, 239, 245, 251, 258, 790, 1094, 1095, 1134, 1145, 1146, 1150], "python_db_sqlite3": [29, 790, 1092, 1094, 1095, 1134, 1146], "dbapi": [29, 208, 239, 251, 790, 1092, 1094, 1095, 1134, 1146], "python_basics_python_0200_sequential_typ": [29, 91, 229, 355, 356, 357, 358, 359, 360, 369, 790, 1036, 1058, 1092, 1093, 1094, 1095, 1105, 1108, 1109, 1111, 1115, 1116, 1117, 1118, 1119, 1120, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1146, 1149, 1150, 1156], "sequenti": [29, 62, 91, 107, 109, 208, 209, 211, 213, 216, 217, 218, 221, 229, 234, 239, 242, 245, 250, 251, 253, 255, 263, 265, 266, 269, 273, 281, 284, 291, 294, 297, 299, 301, 302, 304, 305, 310, 311, 322, 323, 326, 327, 332, 333, 335, 337, 338, 339, 344, 345, 348, 349, 351, 355, 356, 357, 358, 359, 360, 369, 374, 467, 542, 555, 559, 594, 629, 639, 647, 658, 662, 691, 790, 941, 943, 973, 1036, 1041, 1058, 1092, 1093, 1094, 1095, 1105, 1108, 1109, 1111, 1115, 1116, 1117, 1118, 1119, 1120, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1146, 1149, 1150, 1156, 1199], "python_basics_python_0130_syntax_etc": [29, 91, 229, 355, 356, 357, 358, 359, 360, 369, 790, 1036, 1043, 1044, 1045, 1046, 1050, 1058, 1069, 1078, 1089, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1146, 1149, 1150, 1156, 1163], "syntax": [29, 69, 91, 165, 195, 204, 211, 212, 214, 216, 217, 218, 223, 229, 230, 235, 239, 242, 245, 251, 255, 257, 261, 262, 263, 266, 269, 271, 282, 284, 291, 293, 294, 304, 305, 307, 310, 311, 332, 333, 335, 336, 338, 339, 344, 345, 347, 348, 349, 355, 356, 357, 358, 359, 360, 369, 516, 595, 596, 699, 716, 743, 756, 790, 925, 1031, 1033, 1034, 1035, 1036, 1043, 1044, 1045, 1046, 1050, 1058, 1060, 1069, 1077, 1078, 1080, 1089, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1146, 1149, 1150, 1156, 1163, 1189, 1199], "python_basics_python_0250_refs_flat_deep_copi": [29, 91, 229, 355, 356, 357, 358, 359, 360, 369, 790, 1036, 1058, 1093, 1094, 1095, 1105, 1108, 1116, 1117, 1119, 1120, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1149, 1150], "mutabl": [29, 91, 204, 208, 209, 211, 213, 216, 217, 223, 229, 230, 239, 242, 243, 245, 246, 247, 248, 253, 255, 256, 259, 262, 266, 268, 269, 271, 274, 284, 286, 291, 293, 294, 298, 300, 301, 303, 304, 305, 307, 310, 311, 313, 322, 323, 325, 326, 327, 329, 332, 335, 338, 339, 344, 345, 347, 348, 349, 351, 355, 356, 357, 358, 359, 360, 369, 744, 790, 1036, 1058, 1067, 1071, 1093, 1094, 1095, 1105, 1108, 1116, 1117, 1119, 1120, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1149, 1150, 1199], "python_basics_python_0400_list": [29, 91, 790, 1058, 1134], "python_basics_instal": [29, 91, 790, 1058, 1134], "python_basics_python_0125_run": [29, 91, 229, 369, 790, 1058, 1089, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1102, 1103, 1105, 1108, 1109, 1110, 1111, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134], "run": [29, 42, 61, 62, 63, 91, 98, 109, 111, 112, 138, 153, 162, 165, 168, 171, 172, 173, 174, 175, 178, 179, 182, 183, 191, 203, 204, 211, 212, 224, 229, 233, 234, 239, 244, 252, 260, 261, 264, 267, 270, 272, 277, 284, 285, 288, 291, 292, 294, 302, 304, 305, 306, 310, 311, 315, 324, 328, 331, 332, 333, 334, 338, 339, 340, 344, 345, 346, 348, 349, 354, 369, 372, 394, 412, 454, 457, 465, 466, 470, 471, 483, 484, 496, 501, 520, 521, 522, 550, 552, 553, 554, 576, 603, 616, 625, 637, 694, 752, 753, 788, 790, 810, 825, 835, 837, 838, 847, 870, 872, 874, 875, 876, 877, 893, 894, 897, 898, 928, 941, 942, 943, 944, 952, 954, 962, 964, 980, 993, 995, 996, 997, 999, 1004, 1009, 1011, 1014, 1019, 1021, 1023, 1027, 1032, 1043, 1046, 1058, 1059, 1061, 1089, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1102, 1103, 1105, 1108, 1109, 1110, 1111, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1138, 1152, 1164, 1170, 1175, 1176, 1181, 1194], "python_basics_python_0110_blahblah": [29, 91, 229, 355, 356, 357, 358, 359, 360, 369, 790, 1036, 1043, 1044, 1045, 1046, 1050, 1058, 1069, 1078, 1089, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1146, 1149, 1150, 1156, 1163], "blahblah": [29, 91, 211, 216, 218, 229, 235, 239, 242, 245, 251, 255, 261, 262, 263, 265, 266, 268, 269, 271, 284, 291, 294, 304, 305, 310, 311, 332, 333, 335, 338, 339, 340, 344, 345, 348, 349, 355, 356, 357, 358, 359, 360, 369, 790, 1036, 1043, 1044, 1045, 1046, 1050, 1058, 1069, 1078, 1089, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1146, 1149, 1150, 1156, 1163, 1199], "python_basics_python_1000_function_object": [29, 91, 790, 1058, 1134], "python_basics_python_0460_set": [29, 91, 790, 1058, 1134], "python_misc_encod": [29, 91, 229, 355, 356, 357, 358, 359, 360, 369, 790, 1036, 1058, 1093, 1094, 1095, 1105, 1108, 1116, 1119, 1120, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1149, 1150], "encod": [29, 43, 91, 191, 208, 209, 211, 213, 229, 232, 239, 241, 244, 247, 248, 251, 257, 258, 260, 266, 268, 271, 285, 289, 290, 292, 305, 306, 313, 323, 324, 326, 327, 329, 334, 340, 346, 354, 355, 356, 357, 358, 359, 360, 374, 478, 790, 1036, 1058, 1066, 1071, 1085, 1093, 1094, 1095, 1105, 1108, 1116, 1119, 1120, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1136, 1144, 1150, 1152], "python_db_dbapi2": [29, 790, 1092, 1094, 1095, 1134, 1146], "python_db_postgr": [29, 790, 1134, 1146], "postgresql": [29, 790, 1134, 1145, 1146], "python_advanced_exec": [29, 790, 1036, 1134], "python_advanced_context_mgr": [29, 790, 1036, 1134], "python_advanced_iteration_gener": [29, 790, 1036, 1134], "comprehens": [29, 62, 69, 192, 193, 205, 208, 211, 217, 231, 232, 233, 240, 245, 246, 248, 249, 250, 253, 256, 262, 265, 281, 284, 286, 293, 298, 304, 305, 310, 311, 322, 323, 325, 326, 327, 332, 333, 335, 338, 339, 341, 344, 345, 347, 348, 349, 739, 790, 808, 825, 833, 1036, 1041, 1134, 1155], "python_advanced_except": [29, 790, 1036, 1134], "python_advanced_oo_classes_and_dict": [29, 790, 1036, 1043, 1044, 1045, 1046, 1050, 1095, 1122, 1123, 1124, 1129, 1131, 1134, 1163], "python_advanced_comprehens": [29, 790, 1036, 1134], "python_advanced_closur": [29, 790, 1036, 1134], "closur": [29, 61, 62, 63, 191, 204, 208, 216, 217, 232, 245, 248, 258, 291, 294, 323, 327, 738, 790, 1033, 1036, 1076, 1078, 1134, 1199], "python_advanced_decor": [29, 790, 1036, 1134], "decor": [29, 61, 63, 65, 192, 204, 207, 208, 223, 232, 248, 258, 272, 327, 493, 500, 514, 528, 542, 594, 790, 1032, 1036, 1047, 1054, 1055, 1057, 1078, 1134, 1136, 1169, 1192], "python_advanced_stararg": [29, 790, 1036, 1134], "keyword": [29, 39, 62, 152, 167, 205, 208, 209, 210, 211, 213, 232, 234, 248, 253, 258, 260, 281, 284, 285, 291, 294, 298, 300, 301, 304, 306, 310, 316, 319, 322, 323, 326, 327, 369, 436, 466, 609, 610, 612, 630, 681, 741, 790, 986, 1032, 1033, 1034, 1036, 1060, 1076, 1078, 1091, 1134, 1147, 1186, 1188], "python_advanced_oo_inherit": [29, 790, 1036, 1043, 1044, 1045, 1046, 1050, 1134, 1163], "inherit": [29, 70, 74, 107, 143, 189, 199, 208, 232, 245, 262, 264, 297, 298, 299, 300, 301, 305, 322, 323, 326, 327, 337, 345, 378, 500, 514, 542, 550, 552, 592, 594, 595, 619, 668, 671, 691, 733, 775, 789, 790, 829, 869, 872, 875, 896, 898, 1005, 1034, 1036, 1044, 1045, 1046, 1047, 1050, 1052, 1055, 1134, 1163, 1205], "python_advanced_oo_properti": [29, 790, 1036, 1050, 1134], "properti": [29, 40, 192, 208, 232, 245, 262, 264, 281, 285, 298, 300, 301, 305, 315, 316, 319, 322, 323, 326, 327, 331, 339, 345, 349, 373, 482, 483, 484, 489, 492, 790, 1036, 1050, 1134, 1175, 1178], "python_advanced_oo_str_repr": [29, 790, 1036, 1050, 1134], "str": [29, 153, 191, 194, 205, 215, 220, 222, 223, 228, 231, 233, 241, 244, 247, 252, 254, 257, 260, 264, 267, 270, 273, 281, 282, 284, 285, 289, 290, 291, 292, 294, 296, 298, 300, 301, 302, 304, 305, 306, 310, 312, 316, 317, 319, 320, 322, 323, 324, 326, 327, 328, 332, 334, 338, 339, 340, 344, 345, 346, 348, 350, 354, 360, 363, 364, 365, 369, 442, 460, 478, 527, 532, 613, 614, 615, 616, 731, 743, 790, 1034, 1036, 1048, 1050, 1051, 1054, 1063, 1065, 1066, 1077, 1081, 1085, 1093, 1101, 1103, 1134, 1149, 1155, 1160, 1161], "repr": [29, 222, 241, 247, 257, 260, 264, 267, 270, 281, 284, 285, 291, 294, 298, 300, 301, 304, 305, 306, 310, 316, 317, 319, 322, 323, 326, 327, 332, 338, 344, 345, 348, 790, 1034, 1036, 1050, 1051, 1134], "python_advanced_oo_constructor": [29, 790, 1036, 1043, 1044, 1045, 1046, 1050, 1134, 1163], "constructor": [29, 43, 53, 56, 71, 98, 111, 112, 120, 125, 130, 133, 136, 138, 142, 143, 199, 205, 211, 231, 232, 234, 245, 250, 258, 262, 281, 284, 286, 291, 294, 297, 298, 299, 300, 301, 302, 304, 305, 310, 316, 319, 322, 323, 326, 327, 332, 337, 338, 339, 344, 345, 348, 349, 371, 372, 373, 446, 500, 514, 540, 542, 545, 548, 552, 553, 572, 581, 587, 594, 595, 596, 602, 619, 650, 666, 667, 676, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 694, 702, 703, 704, 706, 732, 734, 750, 753, 754, 755, 759, 764, 765, 766, 767, 768, 775, 787, 789, 790, 796, 798, 829, 982, 1036, 1043, 1044, 1045, 1046, 1048, 1050, 1051, 1052, 1066, 1134, 1163, 1169, 1181, 1189], "python_advanced_oo_operator_overload": [29, 790, 1036, 1050, 1134], "overload": [29, 98, 143, 191, 199, 208, 234, 262, 297, 298, 299, 300, 301, 322, 326, 327, 329, 336, 345, 462, 542, 550, 559, 561, 594, 596, 617, 620, 621, 623, 629, 639, 645, 649, 650, 658, 661, 662, 676, 677, 679, 680, 682, 683, 684, 686, 687, 688, 689, 690, 691, 702, 703, 707, 734, 750, 759, 767, 787, 789, 790, 796, 1036, 1050, 1134, 1155, 1188], "python_advanced_oo_abc": [29, 790, 1036, 1050, 1134], "abstract": [29, 64, 67, 79, 85, 208, 248, 280, 297, 298, 299, 300, 301, 322, 323, 326, 327, 345, 373, 437, 476, 478, 493, 500, 504, 506, 508, 514, 516, 528, 542, 552, 594, 629, 668, 669, 746, 778, 790, 870, 874, 943, 958, 1036, 1050, 1134, 1192, 1194], "abc": [29, 32, 191, 205, 208, 210, 215, 220, 222, 228, 231, 233, 237, 241, 244, 247, 248, 252, 254, 257, 260, 264, 267, 270, 273, 281, 282, 285, 292, 298, 300, 301, 302, 306, 312, 316, 319, 322, 323, 324, 326, 327, 328, 334, 340, 345, 346, 350, 356, 364, 478, 552, 621, 642, 659, 661, 778, 790, 1036, 1050, 1066, 1134, 1158], "duck": [29, 32, 207, 208, 262, 281, 298, 300, 301, 305, 322, 323, 326, 327, 337, 345, 493, 552, 694, 696, 734, 742, 743, 748, 754, 775, 780, 787, 789, 790, 1036, 1043, 1050, 1134, 1136, 1141, 1189], "python_advanced_multithreading_exam_quest": [29, 790, 1036, 1044, 1046, 1134], "exam": [29, 97, 98, 107, 233, 249, 278, 287, 308, 352, 371, 383, 790, 867, 933, 974, 994, 1036, 1044, 1134], "python_advanced_multithreading_mutex": [29, 790, 1036, 1044, 1045, 1046, 1134], "race": [29, 73, 74, 75, 79, 88, 172, 190, 250, 276, 277, 279, 288, 299, 300, 301, 322, 323, 326, 336, 377, 378, 384, 453, 463, 572, 744, 760, 767, 789, 790, 814, 818, 839, 841, 846, 850, 852, 855, 858, 933, 963, 973, 974, 979, 987, 988, 994, 1036, 1044, 1046, 1134, 1194, 1204, 1205], "condit": [29, 73, 74, 75, 79, 88, 90, 142, 172, 183, 190, 231, 250, 270, 276, 277, 279, 288, 299, 300, 301, 322, 323, 326, 336, 377, 378, 384, 392, 394, 398, 421, 422, 424, 425, 427, 429, 431, 438, 444, 448, 451, 453, 455, 463, 464, 468, 473, 474, 481, 486, 487, 488, 572, 589, 678, 696, 734, 744, 754, 760, 767, 768, 787, 789, 790, 814, 818, 839, 841, 846, 850, 852, 854, 855, 858, 933, 963, 969, 973, 974, 979, 987, 988, 990, 994, 1036, 1044, 1046, 1069, 1070, 1085, 1134, 1140, 1155, 1194, 1204, 1205], "mutex": [29, 73, 74, 75, 77, 79, 88, 90, 190, 219, 250, 275, 276, 277, 279, 288, 299, 300, 301, 322, 323, 326, 336, 377, 378, 384, 572, 761, 763, 765, 766, 767, 789, 790, 814, 818, 835, 839, 840, 841, 846, 852, 855, 856, 858, 933, 974, 979, 984, 987, 988, 1036, 1044, 1046, 1134, 1189, 1194, 1205], "python_advanced_multithreading_bas": [29, 790, 1036, 1043, 1044, 1045, 1046, 1134], "python_swdev_pip": [29, 790, 1089, 1134, 1137, 1138, 1142, 1150, 1152, 1163, 1166, 1173], "python_misc_import": [29, 790, 1089, 1134, 1137, 1138, 1142, 1150, 1152, 1163, 1166, 1173], "incomplet": [29, 115, 118, 202, 241, 247, 257, 260, 264, 487, 594, 669, 775, 790, 940, 1089, 1134, 1137, 1138, 1142, 1150, 1152, 1163, 1166, 1173, 1174], "python_swdev_venv": [29, 790, 1089, 1134, 1137, 1138, 1142, 1150, 1152, 1163, 1173], "python_swdev_unittest": [29, 790, 1134, 1163], "unittest": [29, 125, 168, 169, 185, 188, 199, 201, 204, 207, 208, 218, 221, 232, 234, 239, 281, 290, 301, 359, 369, 377, 378, 387, 388, 788, 790, 1077, 1134, 1136, 1163, 1174], "python_swdev_pytest_intro": [29, 790, 1134, 1163, 1168], "By": [29, 51, 53, 172, 174, 179, 183, 187, 199, 205, 241, 247, 248, 250, 257, 258, 260, 261, 265, 269, 272, 276, 277, 279, 281, 290, 298, 300, 301, 305, 316, 319, 322, 323, 326, 336, 337, 349, 377, 409, 436, 459, 462, 679, 680, 682, 683, 686, 688, 690, 691, 734, 735, 787, 789, 790, 806, 879, 928, 941, 977, 996, 1012, 1023, 1047, 1054, 1132, 1133, 1134, 1143, 1163, 1168], "python_misc_vscod": [29, 790, 1134, 1150], "visual": [29, 79, 105, 199, 204, 208, 209, 211, 213, 224, 233, 234, 239, 242, 255, 261, 269, 272, 284, 288, 291, 294, 298, 304, 305, 310, 311, 332, 333, 338, 339, 344, 348, 349, 369, 374, 389, 790, 876, 942, 1013, 1059, 1093, 1134, 1150], "studio": [29, 105, 199, 204, 208, 209, 211, 213, 224, 233, 234, 239, 242, 255, 261, 269, 284, 288, 291, 294, 298, 304, 305, 310, 311, 332, 333, 338, 339, 344, 348, 349, 369, 374, 389, 790, 876, 1059, 1134, 1150], "python_misc_mqtt": [29, 790, 1134, 1150, 1152], "python_misc_ai_linear_regress": [29, 790, 1134, 1137, 1138, 1142, 1150], "linear": [29, 193, 195, 205, 208, 210, 228, 236, 291, 322, 326, 445, 467, 619, 744, 790, 873, 942, 1008, 1070, 1134, 1137, 1138, 1143, 1150], "regress": [29, 208, 260, 291, 322, 326, 790, 1134, 1137, 1138, 1143, 1150], "python_misc_ai_machine_learning_intro": [29, 790, 1134, 1137, 1138, 1142, 1143, 1150], "concept": [29, 79, 98, 99, 100, 124, 125, 147, 148, 172, 182, 196, 204, 208, 210, 212, 214, 224, 275, 278, 287, 288, 291, 308, 322, 326, 352, 371, 372, 387, 390, 437, 460, 500, 514, 542, 543, 544, 545, 546, 547, 548, 549, 552, 594, 636, 693, 734, 744, 767, 789, 790, 860, 864, 865, 866, 867, 870, 876, 878, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 917, 927, 933, 945, 946, 947, 948, 949, 956, 962, 964, 972, 974, 978, 988, 991, 994, 996, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1065, 1073, 1083, 1134, 1137, 1138, 1142, 1149, 1150, 1152, 1204], "terminologi": [29, 99, 100, 125, 147, 148, 178, 196, 208, 243, 278, 287, 288, 291, 308, 322, 326, 352, 427, 500, 514, 542, 543, 544, 545, 546, 547, 548, 549, 552, 594, 609, 767, 789, 790, 860, 864, 865, 866, 867, 870, 878, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 917, 926, 927, 933, 945, 946, 947, 948, 949, 956, 962, 964, 972, 974, 988, 991, 994, 995, 996, 1010, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1134, 1137, 1138, 1142, 1150, 1207], "python_misc_ai_k_mean": [29, 790, 1134, 1137, 1138, 1150], "python_misc_pandas_loc": [29, 790, 1134, 1150, 1156], "select": [29, 62, 171, 172, 174, 178, 231, 236, 244, 261, 291, 294, 323, 344, 348, 349, 415, 437, 790, 837, 881, 938, 943, 977, 978, 997, 1000, 1002, 1005, 1025, 1093, 1134, 1139, 1148, 1150, 1156, 1158, 1169, 1177, 1204, 1206], "row": [29, 173, 195, 211, 231, 244, 248, 250, 252, 264, 289, 290, 291, 294, 298, 311, 323, 324, 328, 334, 344, 346, 348, 349, 425, 467, 790, 877, 982, 1034, 1053, 1073, 1093, 1125, 1127, 1134, 1141, 1144, 1148, 1150, 1154, 1155, 1156, 1160], "column": [29, 62, 115, 119, 122, 165, 174, 177, 192, 195, 241, 260, 289, 290, 291, 292, 294, 298, 323, 324, 328, 334, 344, 346, 348, 349, 467, 478, 790, 877, 882, 893, 1093, 1105, 1117, 1134, 1141, 1144, 1150, 1156], "loc": [29, 192, 285, 289, 290, 291, 292, 294, 296, 298, 323, 344, 348, 349, 453, 790, 982, 1045, 1134, 1150, 1153, 1154, 1155, 1156, 1157], "python_misc_pandas_bas": [29, 790, 1134, 1150, 1156], "datafram": [29, 290, 291, 292, 294, 298, 301, 323, 328, 344, 348, 349, 478, 790, 1134, 1139, 1142, 1150, 1153, 1155, 1156, 1157, 1159, 1160], "python_misc_pandas_iloc": [29, 790, 1134, 1150, 1156], "iloc": [29, 291, 292, 294, 296, 298, 323, 328, 344, 348, 349, 478, 790, 1134, 1150, 1154, 1156, 1159], "python_misc_pandas_index": [29, 790, 1134, 1150, 1156], "python_misc_pandas_add_row": [29, 790, 1134, 1150, 1156], "ad": [29, 32, 33, 39, 86, 126, 130, 143, 178, 182, 183, 184, 187, 192, 212, 224, 234, 290, 291, 294, 298, 323, 344, 348, 349, 366, 417, 436, 458, 485, 495, 499, 504, 613, 615, 616, 651, 705, 741, 780, 781, 790, 806, 941, 943, 993, 997, 998, 1033, 1051, 1066, 1085, 1134, 1150, 1156, 1157, 1161, 1170], "python_misc_pandas_mod_col": [29, 790, 1134, 1150, 1156], "modifi": [29, 42, 76, 89, 111, 112, 126, 130, 141, 143, 174, 179, 187, 190, 192, 212, 231, 288, 290, 291, 294, 298, 299, 300, 301, 322, 323, 344, 348, 349, 380, 395, 397, 403, 440, 452, 459, 476, 478, 480, 489, 499, 501, 504, 520, 521, 541, 550, 553, 554, 556, 557, 558, 570, 583, 586, 596, 603, 606, 607, 609, 612, 624, 676, 680, 682, 685, 688, 702, 716, 739, 744, 756, 767, 769, 784, 785, 788, 789, 790, 810, 825, 845, 864, 865, 877, 882, 933, 946, 950, 955, 974, 982, 988, 1026, 1027, 1033, 1035, 1046, 1067, 1111, 1115, 1133, 1134, 1150, 1156, 1158, 1201, 1205], "python_misc_pandas_filt": [29, 790, 1134, 1150, 1156], "python_drafts_argpars": [29, 790, 1089, 1134], "argpars": [29, 248, 269, 300, 322, 326, 355, 790, 1089, 1134], "python_drafts_matplotlib": [29, 790, 1089, 1134], "matplotlib": [29, 204, 223, 242, 243, 255, 269, 270, 272, 274, 305, 324, 329, 333, 335, 346, 378, 790, 1031, 1089, 1134, 1136, 1142], "python_drafts_asyncio": [29, 790, 1089, 1134], "asyncio": [29, 64, 65, 67, 204, 208, 258, 299, 327, 722, 790, 1089, 1134, 1136], "python_drafts_setuptool": [29, 790, 1089, 1134], "setuptool": [29, 60, 168, 281, 316, 326, 790, 1089, 1134, 1171], "As": [30, 46, 69, 81, 125, 169, 172, 174, 179, 183, 189, 201, 204, 208, 239, 252, 314, 330, 372, 389, 427, 458, 461, 537, 539, 553, 604, 609, 611, 612, 689, 772, 810, 837, 863, 872, 941, 942, 950, 952, 969, 997, 1005, 1027, 1033, 1054, 1059, 1063, 1121, 1125, 1138, 1179, 1191], "follow": [30, 39, 43, 79, 107, 108, 110, 115, 118, 119, 120, 121, 122, 128, 131, 162, 171, 172, 174, 175, 176, 177, 179, 187, 192, 196, 200, 201, 204, 208, 212, 213, 224, 241, 247, 257, 258, 260, 264, 273, 277, 279, 296, 297, 299, 305, 306, 366, 388, 390, 393, 410, 411, 424, 427, 454, 456, 458, 460, 465, 466, 469, 477, 479, 484, 494, 495, 498, 499, 515, 516, 518, 519, 520, 521, 522, 540, 543, 544, 547, 548, 550, 551, 552, 553, 554, 566, 572, 598, 613, 614, 615, 616, 669, 676, 678, 683, 685, 686, 689, 690, 693, 711, 744, 784, 785, 788, 798, 800, 806, 837, 863, 864, 865, 870, 872, 874, 876, 888, 890, 891, 897, 901, 909, 910, 934, 941, 942, 943, 964, 967, 968, 969, 970, 979, 996, 1005, 1009, 1011, 1017, 1019, 1021, 1023, 1025, 1026, 1027, 1030, 1034, 1035, 1039, 1046, 1065, 1079, 1087, 1093, 1096, 1101, 1105, 1107, 1111, 1114, 1115, 1118, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1158, 1162, 1171, 1192], "version": [30, 60, 116, 124, 171, 175, 177, 178, 179, 182, 185, 187, 200, 201, 202, 204, 211, 220, 222, 231, 232, 241, 245, 247, 251, 257, 260, 267, 272, 275, 284, 290, 296, 297, 298, 299, 306, 339, 362, 377, 437, 476, 477, 479, 480, 482, 489, 492, 589, 686, 688, 689, 736, 740, 752, 775, 785, 810, 812, 829, 837, 838, 853, 897, 941, 942, 1012, 1013, 1023, 1025, 1026, 1028, 1059, 1060, 1066, 1091, 1164, 1171, 1172, 1178, 1184], "control": [30, 45, 61, 62, 63, 65, 87, 126, 128, 134, 135, 142, 143, 171, 178, 185, 187, 190, 201, 204, 209, 211, 212, 213, 214, 223, 224, 239, 242, 255, 260, 266, 280, 337, 370, 371, 372, 374, 377, 415, 429, 430, 476, 479, 493, 500, 543, 544, 547, 553, 595, 790, 810, 835, 837, 842, 897, 933, 935, 936, 940, 941, 943, 959, 1008, 1013, 1032, 1035, 1043, 1055, 1068, 1070, 1155, 1170, 1172, 1190, 1200, 1206], "done": [30, 42, 46, 47, 50, 53, 55, 56, 57, 62, 76, 85, 88, 92, 103, 111, 112, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 142, 143, 153, 159, 164, 168, 169, 171, 173, 174, 176, 177, 178, 179, 182, 187, 192, 193, 196, 200, 204, 211, 233, 248, 252, 258, 260, 276, 277, 279, 291, 294, 301, 306, 324, 355, 361, 372, 378, 393, 394, 442, 449, 450, 452, 454, 465, 476, 478, 479, 480, 484, 518, 537, 551, 554, 596, 608, 609, 637, 651, 659, 664, 688, 689, 691, 694, 701, 722, 725, 729, 730, 740, 746, 754, 758, 766, 768, 790, 796, 806, 808, 827, 829, 837, 839, 864, 865, 869, 870, 872, 873, 881, 893, 916, 934, 935, 937, 942, 943, 959, 960, 961, 971, 985, 993, 999, 1008, 1012, 1013, 1021, 1025, 1027, 1034, 1037, 1038, 1039, 1057, 1066, 1077, 1085, 1086, 1087, 1091, 1094, 1115, 1148, 1169, 1194], "No": [30, 43, 62, 81, 115, 118, 162, 168, 172, 174, 178, 179, 187, 214, 231, 247, 248, 264, 290, 380, 400, 402, 416, 432, 436, 443, 454, 459, 471, 476, 480, 481, 484, 486, 489, 490, 491, 492, 504, 550, 589, 599, 600, 612, 619, 629, 644, 647, 665, 683, 693, 695, 698, 702, 705, 709, 753, 754, 761, 768, 815, 817, 819, 821, 835, 837, 842, 854, 873, 879, 881, 884, 885, 900, 908, 916, 919, 935, 937, 943, 957, 964, 969, 970, 979, 980, 982, 984, 993, 997, 1005, 1008, 1014, 1028, 1030, 1047, 1054, 1060, 1063, 1066, 1067, 1075, 1079, 1083, 1085, 1143, 1144, 1148, 1149, 1158, 1161, 1169, 1171, 1177], "proprietari": 30, "accept": [30, 32, 59, 142, 174, 200, 296, 476, 478, 744, 754, 756, 805, 937, 963, 1033, 1057, 1204, 1206], "proven": [30, 465, 469, 613, 615, 616, 705], "difficult": [30, 69, 231, 421, 439, 589, 823, 835, 997], "ffmpeg": 31, "video4linux2": 31, "640x480": [31, 1031], "dev": [31, 62, 101, 133, 172, 173, 183, 189, 190, 200, 201, 244, 250, 260, 267, 270, 285, 288, 292, 297, 299, 302, 306, 328, 334, 340, 353, 375, 465, 484, 548, 790, 792, 793, 795, 801, 808, 817, 831, 833, 837, 850, 867, 868, 877, 879, 880, 897, 911, 914, 917, 919, 933, 936, 941, 942, 943, 966, 973, 993, 996, 999, 1001, 1004, 1005, 1025, 1176, 1178, 1194], "video0": 31, "500k": 31, "matroska": 31, "mk": [31, 32], "disabl": [31, 172, 175, 177, 183, 241, 247, 257, 260, 437, 829, 835, 840, 842, 997, 1164, 1184], "audio": [31, 151, 160, 174, 179, 790, 1193], "appar": [31, 57, 60, 62, 156, 174, 176, 177, 179, 183, 233, 244, 296, 481, 495, 666, 711, 722, 754, 805, 941, 999, 1149], "next": [31, 39, 42, 62, 99, 125, 147, 153, 168, 173, 174, 179, 187, 192, 194, 205, 210, 212, 220, 224, 231, 237, 241, 244, 245, 247, 250, 252, 254, 257, 260, 264, 270, 276, 277, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 354, 361, 375, 409, 427, 429, 450, 478, 516, 520, 534, 544, 553, 589, 626, 702, 715, 722, 724, 746, 827, 837, 856, 881, 897, 929, 941, 943, 963, 973, 993, 1012, 1038, 1039, 1042, 1070, 1073, 1088, 1141, 1177], "mention": [31, 143, 172, 173, 200, 204, 208, 234, 258, 300, 301, 322, 323, 327, 539, 553, 737, 849, 942, 1030, 1136, 1152], "frame": [31, 166, 177, 189, 211, 241, 247, 257, 260, 290, 296, 328, 449, 462, 466, 516, 707, 935, 936, 1154], "size": [31, 101, 110, 130, 171, 173, 174, 191, 193, 199, 241, 242, 247, 250, 255, 257, 260, 264, 269, 272, 288, 305, 306, 311, 353, 369, 400, 417, 422, 431, 438, 442, 444, 448, 449, 451, 454, 455, 457, 462, 463, 464, 466, 468, 473, 474, 496, 497, 503, 542, 554, 555, 559, 560, 561, 562, 563, 567, 568, 571, 577, 589, 594, 596, 600, 604, 609, 613, 615, 616, 629, 630, 631, 632, 637, 642, 643, 647, 651, 653, 654, 659, 661, 688, 690, 696, 699, 700, 705, 716, 717, 718, 720, 734, 744, 753, 757, 758, 766, 774, 787, 788, 789, 790, 796, 808, 823, 833, 853, 862, 867, 868, 874, 881, 911, 914, 917, 919, 925, 929, 933, 937, 942, 963, 965, 1004, 1005, 1011, 1028, 1031, 1136, 1149], "input": [31, 40, 65, 69, 87, 133, 192, 193, 194, 195, 205, 208, 211, 213, 235, 241, 247, 250, 257, 260, 263, 264, 285, 288, 369, 374, 398, 399, 405, 429, 437, 460, 465, 477, 555, 556, 557, 558, 570, 609, 659, 678, 701, 788, 808, 863, 881, 912, 930, 934, 944, 960, 963, 975, 977, 978, 985, 1041, 1056, 1085, 1098, 1102, 1103, 1115, 1118, 1121, 1127, 1130, 1138, 1139, 1142, 1143, 1200], "rate": [31, 182, 204, 264, 323, 458, 856, 995], "hz": [31, 847], "bitrat": [31, 936], "If": [31, 43, 45, 47, 53, 55, 56, 57, 90, 123, 125, 143, 171, 172, 173, 174, 177, 178, 179, 187, 188, 196, 204, 241, 247, 254, 257, 260, 264, 272, 277, 279, 288, 294, 306, 323, 369, 374, 415, 424, 454, 466, 486, 488, 494, 544, 550, 551, 566, 596, 601, 665, 672, 688, 689, 702, 707, 753, 757, 758, 766, 768, 790, 810, 815, 829, 837, 842, 854, 863, 872, 876, 879, 897, 898, 906, 909, 933, 934, 941, 942, 943, 944, 950, 964, 972, 974, 982, 987, 991, 1004, 1026, 1027, 1039, 1047, 1049, 1059, 1066, 1074, 1076, 1087, 1113, 1141, 1144, 1158, 1170, 1189], "instead": [31, 58, 62, 130, 137, 143, 165, 171, 172, 173, 174, 192, 193, 201, 233, 250, 252, 260, 290, 306, 354, 375, 380, 417, 466, 494, 537, 540, 554, 616, 632, 688, 690, 707, 711, 753, 754, 768, 775, 805, 806, 815, 868, 897, 919, 942, 984, 1004, 1011, 1013, 1023, 1029, 1060, 1107, 1119, 1131, 1155, 1176], "stdout": [31, 143, 191, 224, 228, 232, 241, 247, 257, 260, 270, 278, 285, 287, 288, 308, 309, 323, 352, 353, 354, 362, 364, 369, 373, 375, 665, 790, 861, 863, 867, 878, 879, 922, 925, 928, 933, 963, 1008, 1035, 1085, 1087, 1093, 1098, 1102, 1105, 1120, 1152, 1161, 1195], "hold": [31, 130, 171, 173, 192, 208, 210, 211, 231, 258, 392, 404, 424, 496, 626, 681, 688, 739, 744, 758, 766, 770, 775, 801, 835, 839, 840, 934, 941, 997, 1035, 1048, 1070, 1119, 1141], "mplayer": [31, 302, 340], "stdin": [31, 42, 224, 232, 241, 247, 250, 257, 260, 362, 369, 401, 407, 422, 431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790, 863, 879, 880, 912, 963, 1083, 1085, 1086, 1098, 1149, 1161, 1195], "unicod": [32, 34, 35, 36, 38, 232, 241, 245, 247, 257, 260, 282, 306, 340, 404, 1065, 1071, 1085, 1149], "sphinxemojicod": 32, "pip": [32, 60, 152, 153, 168, 204, 208, 229, 258, 272, 963, 1059, 1090, 1091, 1123, 1136, 1152, 1163, 1164, 1165, 1169, 1171, 1172], "conf": [32, 153, 173, 175, 177, 340, 489, 837, 943, 1035], "grimac": 32, "astonish": 32, "rolling_ey": 32, "face_with_raised_eyebrow": 32, "flush": [32, 285, 553, 796, 808], "innoc": [32, 178, 459, 760, 876, 1010, 1054], "kiss": 32, "kissing_heart": 32, "middle_fing": 32, "metal": [32, 79, 81, 88, 90, 172, 387, 934, 942, 943], "muscl": 32, "nerd": [32, 897], "ok_hand": 32, "penguin": 32, "pig": [32, 454], "point_up": 32, "sleep": [32, 62, 115, 121, 172, 247, 276, 277, 300, 301, 322, 355, 427, 436, 766, 790, 814, 817, 819, 829, 839, 842, 846, 852, 854, 855, 858, 933, 934, 942, 971, 975, 978, 993, 995, 996, 999, 1004, 1043], "sunglass": 32, "think": [32, 42, 43, 70, 172, 173, 187, 210, 234, 336, 437, 458, 459, 462, 548, 552, 599, 619, 694, 702, 704, 753, 864, 865, 868, 958, 1004, 1066], "thumbsdown": 32, "thumbsup": 32, "wink": 32, "1_tone1": 32, "1_tone2": 32, "1_tone3": 32, "1_tone4": 32, "1_tone5": 32, "1st_place_med": 32, "2nd_place_med": 32, "3rd_place_med": 32, "8ball": 32, "abacu": 32, "abcd": [32, 222, 228, 244, 264, 306], "ac": [32, 182, 220], "accordion": 32, "adhesive_bandag": 32, "admission_ticket": 32, "adult": [32, 1055], "adult_dark_skin_ton": 32, "adult_light_skin_ton": 32, "adult_medium_dark_skin_ton": 32, "adult_medium_light_skin_ton": 32, "adult_medium_skin_ton": 32, "adult_tone1": 32, "adult_tone2": 32, "adult_tone3": 32, "adult_tone4": 32, "adult_tone5": 32, "ae": [32, 182], "aerial_tramwai": 32, "af": [32, 182], "afghanistan": 32, "ai": [32, 208, 1143, 1150], "airplan": [32, 934], "airplane_arriv": 32, "airplane_departur": 32, "airplane_smal": 32, "aland_island": 32, "alarm_clock": 32, "albania": 32, "alemb": 32, "algeria": 32, "alien": 32, "ambul": 32, "american_samoa": 32, "amphora": 32, "anatomical_heart": 32, "anchor": 32, "andorra": 32, "angel": [32, 296], "angel_tone1": 32, "angel_tone2": 32, "angel_tone3": 32, "angel_tone4": 32, "angel_tone5": 32, "anger": 32, "anger_right": 32, "angola": 32, "angri": 32, "anguilla": 32, "anguish": 32, "ant": 32, "antarctica": 32, "antigua_barbuda": 32, "ao": 32, "appl": [32, 1011, 1077], "aq": 32, "aquariu": 32, "archeri": 32, "argentina": 32, "ari": [32, 35, 38], "armenia": 32, "arrow_backward": 32, "arrow_double_down": 32, "arrow_double_up": 32, "arrow_down": 32, "arrow_down_smal": 32, "arrow_forward": 32, "arrow_heading_down": 32, "arrow_heading_up": 32, "arrow_left": 32, "arrow_lower_left": 32, "arrow_lower_right": 32, "arrow_right": 32, "arrow_right_hook": 32, "arrow_up": 32, "arrow_up_down": 32, "arrow_up_smal": 32, "arrow_upper_left": 32, "arrow_upper_right": 32, "arrows_clockwis": 32, "arrows_counterclockwis": 32, "articulated_lorri": 32, "artificial_satellit": 32, "artist": 32, "artist_dark_skin_ton": 32, "artist_light_skin_ton": 32, "artist_medium_dark_skin_ton": 32, "artist_medium_light_skin_ton": 32, "artist_medium_skin_ton": 32, "artist_tone1": 32, "artist_tone2": 32, "artist_tone3": 32, "artist_tone4": 32, "artist_tone5": 32, "aruba": 32, "ascens": 32, "astronaut": 32, "astronaut_dark_skin_ton": 32, "astronaut_light_skin_ton": 32, "astronaut_medium_dark_skin_ton": 32, "astronaut_medium_light_skin_ton": 32, "astronaut_medium_skin_ton": 32, "astronaut_tone1": 32, "astronaut_tone2": 32, "astronaut_tone3": 32, "astronaut_tone4": 32, "astronaut_tone5": 32, "athletic_sho": 32, "atm": 32, "atom": [32, 77, 89, 195, 250, 275, 276, 277, 279, 288, 299, 336, 337, 572, 704, 753, 766, 767, 789, 790, 799, 804, 807, 809, 814, 817, 818, 820, 823, 824, 828, 829, 830, 832, 834, 839, 842, 843, 846, 847, 848, 852, 855, 857, 858, 933, 973, 983, 984, 1046, 1189], "atom_symbol": 32, "australia": 32, "austria": [32, 172, 387], "auto_rickshaw": 32, "avocado": 32, "aw": 32, "ax": [32, 193, 1031], "az": 32, "azerbaijan": 32, "ba": [32, 182], "babi": 32, "baby_bottl": 32, "baby_chick": 32, "baby_symbol": 32, "baby_tone1": 32, "baby_tone2": 32, "baby_tone3": 32, "baby_tone4": 32, "baby_tone5": 32, "back_of_hand": 32, "back_of_hand_tone1": 32, "back_of_hand_tone2": 32, "back_of_hand_tone3": 32, "back_of_hand_tone4": 32, "back_of_hand_tone5": 32, "bacon": 32, "badger": 32, "badminton": 32, "bagel": 32, "baggage_claim": 32, "baguette_bread": 32, "bahama": 32, "bahrain": 32, "balance_scal": 32, "bald": 32, "ballet_sho": 32, "balloon": 32, "ballot_box": 32, "ballot_box_with_ballot": 32, "ballot_box_with_check": 32, "bamboo": 32, "banana": 32, "bangbang": 32, "bangladesh": 32, "banjo": 32, "bank": [32, 478], "bar_chart": 32, "barbado": 32, "barber": 32, "basebal": 32, "basket": 32, "basketbal": 32, "basketball_man": 32, "basketball_play": 32, "basketball_player_tone1": 32, "basketball_player_tone2": 32, "basketball_player_tone3": 32, "basketball_player_tone4": 32, "basketball_player_tone5": 32, "basketball_woman": 32, "bat": [32, 1171], "bath": 32, "bath_tone1": 32, "bath_tone2": 32, "bath_tone3": 32, "bath_tone4": 32, "bath_tone5": 32, "bathtub": 32, "batteri": [32, 90, 204, 369, 934, 1058, 1059, 1060, 1086, 1165], "bb": [32, 164, 175, 941], "bd": [32, 182], "beach": 32, "beach_umbrella": 32, "beach_with_umbrella": 32, "bear": [32, 982, 1159], "bearded_person": 32, "bearded_person_dark_skin_ton": 32, "bearded_person_light_skin_ton": 32, "bearded_person_medium_dark_skin_ton": 32, "bearded_person_medium_light_skin_ton": 32, "bearded_person_medium_skin_ton": 32, "bearded_person_tone1": 32, "bearded_person_tone2": 32, "bearded_person_tone3": 32, "bearded_person_tone4": 32, "bearded_person_tone5": 32, "beaver": 32, "bed": 32, "bee": 32, "beer": [32, 456], "beetl": 32, "belaru": 32, "belgium": 32, "beliz": 32, "bell": [32, 1054, 1057], "bell_pepp": 32, "bellhop": 32, "bellhop_bel": 32, "benin": 32, "bento": 32, "bermuda": 32, "beverage_box": 32, "bf": [32, 182], "bg": [32, 478], "bh": 32, "bhutan": 32, "bicyclist": 32, "bicyclist_tone1": 32, "bicyclist_tone2": 32, "bicyclist_tone3": 32, "bicyclist_tone4": 32, "bicyclist_tone5": 32, "bike": 32, "biking_man": 32, "biking_woman": 32, "bikini": 32, "billed_cap": 32, "biohazard": 32, "biohazard_sign": 32, "bird": 32, "birthdai": [32, 213, 684], "bison": [32, 183, 817, 941, 1025], "bj": 32, "bl": 32, "black_cat": 32, "black_circl": 32, "black_flag": 32, "black_heart": 32, "black_jok": 32, "black_large_squar": 32, "black_medium_small_squar": 32, "black_medium_squar": 32, "black_nib": 32, "black_small_squar": 32, "black_square_button": 32, "blond": 32, "haired_man": 32, "haired_man_dark_skin_ton": 32, "haired_man_light_skin_ton": 32, "haired_man_medium_dark_skin_ton": 32, "haired_man_medium_light_skin_ton": 32, "haired_man_medium_skin_ton": 32, "haired_man_tone1": 32, "haired_man_tone2": 32, "haired_man_tone3": 32, "haired_man_tone4": 32, "haired_man_tone5": 32, "haired_woman": 32, "haired_woman_dark_skin_ton": 32, "haired_woman_light_skin_ton": 32, "haired_woman_medium_dark_skin_ton": 32, "haired_woman_medium_light_skin_ton": 32, "haired_woman_medium_skin_ton": 32, "haired_woman_tone1": 32, "haired_woman_tone2": 32, "haired_woman_tone3": 32, "haired_woman_tone4": 32, "haired_woman_tone5": 32, "blond_haired_person": 32, "blond_haired_person_tone1": 32, "blond_haired_person_tone2": 32, "blond_haired_person_tone3": 32, "blond_haired_person_tone4": 32, "blond_haired_person_tone5": 32, "blonde_man": 32, "blonde_woman": 32, "blossom": 32, "blowfish": 32, "blue_book": 32, "blue_car": 32, "blue_circl": 32, "blue_heart": 32, "blue_squar": 32, "blueberri": 32, "blush": 32, "bm": 32, "bn": 32, "bo": [32, 1048], "boar": 32, "boat": 32, "bolivia": 32, "bomb": 32, "bone": 32, "bookmark": [32, 1148], "bookmark_tab": 32, "boom": [32, 722, 739], "boomerang": 32, "boot": [32, 162, 173, 175, 179, 191, 292, 472, 769, 810, 815, 833, 837, 847, 875, 941, 942, 943, 1184], "bosnia_herzegovina": 32, "botswana": 32, "bottle_with_popping_cork": 32, "bouquet": 32, "bouvet_island": 32, "bow": 32, "bow_and_arrow": 32, "bow_tone1": 32, "bow_tone2": 32, "bow_tone3": 32, "bow_tone4": 32, "bow_tone5": 32, "bowing_man": 32, "bowing_woman": 32, "bowl_with_spoon": 32, "bowl": 32, "boxing_glov": 32, "boi": 32, "boy_tone1": 32, "boy_tone2": 32, "boy_tone3": 32, "boy_tone4": 32, "boy_tone5": 32, "bq": 32, "br": [32, 270, 328], "brain": [32, 61, 63], "brazil": 32, "bread": 32, "breast_feed": 32, "breast_feeding_dark_skin_ton": 32, "breast_feeding_light_skin_ton": 32, "breast_feeding_medium_dark_skin_ton": 32, "breast_feeding_medium_light_skin_ton": 32, "breast_feeding_medium_skin_ton": 32, "breast_feeding_tone1": 32, "breast_feeding_tone2": 32, "breast_feeding_tone3": 32, "breast_feeding_tone4": 32, "breast_feeding_tone5": 32, "brick": [32, 171, 184], "bride_with_veil": 32, "bride_with_veil_tone1": 32, "bride_with_veil_tone2": 32, "bride_with_veil_tone3": 32, "bride_with_veil_tone4": 32, "bride_with_veil_tone5": 32, "bridge_at_night": 32, "briefcas": 32, "brief": [32, 470, 897], "british_indian_ocean_territori": 32, "british_virgin_island": 32, "broccoli": 32, "broken_heart": 32, "broom": 32, "brown_circl": 32, "brown_heart": 32, "brown_squar": 32, "brunei": 32, "bt": 32, "bubble_tea": 32, "bucket": [32, 808], "bug": [32, 46, 55, 56, 108, 153, 173, 174, 175, 215, 234, 250, 261, 378, 434, 436, 437, 452, 457, 459, 463, 476, 481, 486, 577, 579, 581, 589, 595, 596, 599, 604, 666, 669, 722, 732, 751, 768, 790, 827, 955, 986, 995, 996, 1028, 1048, 1049, 1063, 1066], "building_construct": 32, "bulb": 32, "bulgaria": 32, "bullettrain_front": 32, "bullettrain_sid": 32, "burkina_faso": 32, "burrito": 32, "burundi": 32, "bu": [32, 82, 126, 219, 244, 260, 267, 269, 270, 285, 288, 292, 302, 306, 328, 334, 340, 346, 494, 508, 523, 537, 553, 554, 790, 808, 833, 897, 933, 935, 940, 941, 942, 971, 977, 1033, 1135, 1193, 1200, 1204, 1206], "business_suit_levit": 32, "busstop": 32, "bust_in_silhouett": 32, "busts_in_silhouett": 32, "butter": 32, "butterfli": 32, "bv": 32, "bw": 32, "bz": 32, "cactu": 32, "cake": 32, "calendar": 32, "calendar_spir": 32, "call_m": 32, "call_me_hand": 32, "call_me_hand_tone1": 32, "call_me_hand_tone2": 32, "call_me_hand_tone3": 32, "call_me_hand_tone4": 32, "call_me_hand_tone5": 32, "call_me_tone1": 32, "call_me_tone2": 32, "call_me_tone3": 32, "call_me_tone4": 32, "call_me_tone5": 32, "cambodia": 32, "camel": 32, "camera": [32, 33, 143, 147, 177, 179, 942], "camera_flash": 32, "camera_with_flash": 32, "cameroon": 32, "camp": 32, "canada": 32, "canary_island": 32, "cancer": 32, "candl": 32, "candi": 32, "canned_food": 32, "cano": 32, "cape_verd": 32, "capital_abcd": 32, "capricorn": 32, "car": [32, 290, 478, 934], "card_box": 32, "card_file_box": 32, "card_index": 32, "card_index_divid": 32, "caribbean_netherland": 32, "carousel_hors": 32, "carpentry_saw": 32, "carrot": 32, "cartwheel": 32, "cartwheel_tone1": 32, "cartwheel_tone2": 32, "cartwheel_tone3": 32, "cartwheel_tone4": 32, "cartwheel_tone5": 32, "cat2": 32, "cat": [32, 147, 153, 174, 178, 212, 224, 278, 287, 288, 290, 308, 309, 352, 353, 354, 355, 454, 478, 553, 790, 795, 800, 817, 837, 853, 864, 865, 867, 868, 877, 879, 881, 909, 916, 924, 925, 927, 928, 930, 933, 934, 941, 942, 943, 944, 968, 970, 971, 975, 999, 1005, 1008, 1195], "cayman_island": 32, "cd": [32, 60, 158, 175, 176, 178, 179, 182, 183, 187, 200, 201, 234, 244, 264, 272, 277, 279, 355, 369, 374, 479, 551, 554, 614, 810, 812, 837, 838, 861, 863, 864, 865, 868, 874, 882, 887, 889, 897, 921, 934, 941, 942, 950, 963, 1012, 1013, 1025, 1026, 1091], "central_african_republ": 32, "ceuta_melilla": 32, "cf": [32, 334, 863, 980], "cg": 32, "ch": 32, "chad": 32, "chain": [32, 165, 171, 182, 192, 254, 271, 456, 842, 990], "chair": [32, 204], "champagn": 32, "champagne_glass": 32, "chart": [32, 218, 233, 242, 255, 269, 272, 305, 311, 1136, 1143], "chart_with_downwards_trend": 32, "chart_with_upwards_trend": 32, "checkered_flag": 32, "chees": 32, "cheese_wedg": 32, "cherri": 32, "cherry_blossom": 32, "chess_pawn": 32, "chestnut": 32, "chicken": 32, "child": [32, 100, 189, 278, 287, 288, 308, 309, 352, 353, 788, 790, 867, 869, 871, 872, 883, 886, 887, 888, 889, 890, 891, 892, 901, 902, 903, 906, 908, 909, 933, 945, 946, 947, 948, 949, 974, 980, 987, 992, 1009, 1021, 1022, 1052, 1161], "child_dark_skin_ton": 32, "child_light_skin_ton": 32, "child_medium_dark_skin_ton": 32, "child_medium_light_skin_ton": 32, "child_medium_skin_ton": 32, "child_tone1": 32, "child_tone2": 32, "child_tone3": 32, "child_tone4": 32, "child_tone5": 32, "children_cross": 32, "chile": 32, "china": 32, "chipmunk": 32, "chocolate_bar": 32, "chopstick": 32, "christmas_island": 32, "christmas_tre": 32, "church": 32, "ci": [32, 1169], "cinema": 32, "circus_t": 32, "city_dusk": 32, "city_sunris": 32, "city_sunset": 32, "cityscap": 32, "ck": 32, "cl": [32, 260, 285, 1051, 1052], "clamp": 32, "clap": 32, "clap_tone1": 32, "clap_tone2": 32, "clap_tone3": 32, "clap_tone4": 32, "clap_tone5": 32, "clapper": 32, "classical_build": 32, "clinking_glass": 32, "clipboard": 32, "clipperton_island": 32, "clock1030": 32, "clock10": 32, "clock1130": 32, "clock11": 32, "clock1230": 32, "clock12": 32, "clock130": 32, "clock1": 32, "clock230": 32, "clock2": 32, "clock330": 32, "clock3": 32, "clock430": 32, "clock4": 32, "clock530": 32, "clock5": 32, "clock630": 32, "clock6": 32, "clock730": 32, "clock7": 32, "clock830": 32, "clock8": 32, "clock930": 32, "clock9": 32, "clock": [32, 137, 247, 248, 465, 941], "closed_book": 32, "closed_lock_with_kei": 32, "closed_umbrella": 32, "cloud": [32, 102, 179, 224, 248, 368, 369, 372, 697, 699, 950, 1140, 1141, 1164], "cloud_lightn": 32, "cloud_rain": 32, "cloud_snow": 32, "cloud_tornado": 32, "cloud_with_lightn": 32, "cloud_with_lightning_and_rain": 32, "cloud_with_rain": 32, "cloud_with_snow": 32, "cloud_with_tornado": 32, "clown": 32, "clown_fac": 32, "club": [32, 38], "cm": 32, "cn": [32, 182], "coat": 32, "cockroach": 32, "cocktail": 32, "coconut": [32, 296], "cocos_island": 32, "coffe": [32, 175, 669, 941], "coffin": 32, "coin": 32, "cold_fac": 32, "cold_sweat": 32, "colombia": 32, "comet": 32, "comoro": 32, "compass": 32, "compress": [32, 123, 173, 187, 278, 287, 288, 308, 352, 790, 861, 867, 933, 1021, 1022, 1023, 1026], "computer_mous": 32, "confetti_bal": 32, "confound": 32, "confus": [32, 172, 176, 204, 233, 411, 419, 465, 612, 622, 698, 709, 1077, 1162], "congo": 32, "congo_brazzavil": 32, "congo_kinshasa": 32, "congratul": 32, "construct": [32, 204, 210, 291, 294, 414, 427, 437, 466, 476, 580, 631, 650, 651, 707, 755, 1049, 1056, 1073, 1084], "construction_sit": 32, "construction_work": 32, "construction_worker_man": 32, "construction_worker_tone1": 32, "construction_worker_tone2": 32, "construction_worker_tone3": 32, "construction_worker_tone4": 32, "construction_worker_tone5": 32, "construction_worker_woman": 32, "control_knob": 32, "convenience_stor": 32, "cook": [32, 288], "cook_dark_skin_ton": 32, "cook_island": 32, "cook_light_skin_ton": 32, "cook_medium_dark_skin_ton": 32, "cook_medium_light_skin_ton": 32, "cook_medium_skin_ton": 32, "cook_tone1": 32, "cook_tone2": 32, "cook_tone3": 32, "cook_tone4": 32, "cook_tone5": 32, "cooki": [32, 819, 833], "cool": [32, 65, 158, 173, 174, 177, 179, 187, 192, 193, 204, 205, 208, 223, 288, 301, 387, 472, 478, 506, 515, 652, 694, 695, 711, 714, 733, 743, 746, 768, 837, 893, 943, 1028, 1032, 1035, 1052, 1071, 1085, 1136, 1143, 1148, 1189], "cop": 32, "cop_tone1": 32, "cop_tone2": 32, "cop_tone3": 32, "cop_tone4": 32, "cop_tone5": 32, "copyright": [32, 36, 183, 224, 241, 247, 257, 260, 285, 362, 366, 604, 753, 1061], "corn": 32, "costa_rica": 32, "cote_divoir": 32, "couch": 32, "couch_and_lamp": 32, "coupl": [32, 43, 143, 171, 172, 173, 174, 179, 192, 204, 208, 390, 427, 461, 466, 742, 930, 965, 984], "couple_mm": 32, "couple_with_heart": 32, "couple_with_heart_dark_skin_ton": 32, "couple_with_heart_light_skin_ton": 32, "couple_with_heart_man_man": 32, "couple_with_heart_man_man_dark_skin_ton": 32, "couple_with_heart_man_man_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_man_man_dark_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_man_man_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_man_man_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_man_man_light_skin_ton": 32, "couple_with_heart_man_man_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_man_man_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_man_man_light_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_man_man_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_man_man_medium_dark_skin_ton": 32, "couple_with_heart_man_man_medium_dark_skin_tone_dark_skin_ton": 32, "couple_with_heart_man_man_medium_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_man_man_medium_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_man_man_medium_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_man_man_medium_light_skin_ton": 32, "couple_with_heart_man_man_medium_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_man_man_medium_light_skin_tone_light_skin_ton": 32, "couple_with_heart_man_man_medium_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_man_man_medium_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_man_man_medium_skin_ton": 32, "couple_with_heart_man_man_medium_skin_tone_dark_skin_ton": 32, "couple_with_heart_man_man_medium_skin_tone_light_skin_ton": 32, "couple_with_heart_man_man_medium_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_man_man_medium_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_man_man_tone1": 32, "couple_with_heart_man_man_tone1_tone2": 32, "couple_with_heart_man_man_tone1_tone3": 32, "couple_with_heart_man_man_tone1_tone4": 32, "couple_with_heart_man_man_tone1_tone5": 32, "couple_with_heart_man_man_tone2": 32, "couple_with_heart_man_man_tone2_tone1": 32, "couple_with_heart_man_man_tone2_tone3": 32, "couple_with_heart_man_man_tone2_tone4": 32, "couple_with_heart_man_man_tone2_tone5": 32, "couple_with_heart_man_man_tone3": 32, "couple_with_heart_man_man_tone3_tone1": 32, "couple_with_heart_man_man_tone3_tone2": 32, "couple_with_heart_man_man_tone3_tone4": 32, "couple_with_heart_man_man_tone3_tone5": 32, "couple_with_heart_man_man_tone4": 32, "couple_with_heart_man_man_tone4_tone1": 32, "couple_with_heart_man_man_tone4_tone2": 32, "couple_with_heart_man_man_tone4_tone3": 32, "couple_with_heart_man_man_tone4_tone5": 32, "couple_with_heart_man_man_tone5": 32, "couple_with_heart_man_man_tone5_tone1": 32, "couple_with_heart_man_man_tone5_tone2": 32, "couple_with_heart_man_man_tone5_tone3": 32, "couple_with_heart_man_man_tone5_tone4": 32, "couple_with_heart_medium_dark_skin_ton": 32, "couple_with_heart_medium_light_skin_ton": 32, "couple_with_heart_medium_skin_ton": 32, "couple_with_heart_mm": 32, "couple_with_heart_person_person_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_person_person_dark_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_person_person_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_person_person_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_person_person_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_person_person_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_person_person_light_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_person_person_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_person_person_medium_dark_skin_tone_dark_skin_ton": 32, "couple_with_heart_person_person_medium_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_person_person_medium_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_person_person_medium_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_person_person_medium_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_person_person_medium_light_skin_tone_light_skin_ton": 32, "couple_with_heart_person_person_medium_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_person_person_medium_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_person_person_medium_skin_tone_dark_skin_ton": 32, "couple_with_heart_person_person_medium_skin_tone_light_skin_ton": 32, "couple_with_heart_person_person_medium_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_person_person_medium_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_person_person_tone1_tone2": 32, "couple_with_heart_person_person_tone1_tone3": 32, "couple_with_heart_person_person_tone1_tone4": 32, "couple_with_heart_person_person_tone1_tone5": 32, "couple_with_heart_person_person_tone2_tone1": 32, "couple_with_heart_person_person_tone2_tone3": 32, "couple_with_heart_person_person_tone2_tone4": 32, "couple_with_heart_person_person_tone2_tone5": 32, "couple_with_heart_person_person_tone3_tone1": 32, "couple_with_heart_person_person_tone3_tone2": 32, "couple_with_heart_person_person_tone3_tone4": 32, "couple_with_heart_person_person_tone3_tone5": 32, "couple_with_heart_person_person_tone4_tone1": 32, "couple_with_heart_person_person_tone4_tone2": 32, "couple_with_heart_person_person_tone4_tone3": 32, "couple_with_heart_person_person_tone4_tone5": 32, "couple_with_heart_person_person_tone5_tone1": 32, "couple_with_heart_person_person_tone5_tone2": 32, "couple_with_heart_person_person_tone5_tone3": 32, "couple_with_heart_person_person_tone5_tone4": 32, "couple_with_heart_tone1": 32, "couple_with_heart_tone2": 32, "couple_with_heart_tone3": 32, "couple_with_heart_tone4": 32, "couple_with_heart_tone5": 32, "couple_with_heart_woman_man": 32, "couple_with_heart_woman_man_dark_skin_ton": 32, "couple_with_heart_woman_man_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_man_dark_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_man_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_man_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_man_light_skin_ton": 32, "couple_with_heart_woman_man_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_man_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_man_light_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_man_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_man_medium_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_dark_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_man_medium_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_man_medium_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_man_medium_light_skin_ton": 32, "couple_with_heart_woman_man_medium_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_light_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_man_medium_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_man_medium_skin_ton": 32, "couple_with_heart_woman_man_medium_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_man_medium_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_man_tone1": 32, "couple_with_heart_woman_man_tone1_tone2": 32, "couple_with_heart_woman_man_tone1_tone3": 32, "couple_with_heart_woman_man_tone1_tone4": 32, "couple_with_heart_woman_man_tone1_tone5": 32, "couple_with_heart_woman_man_tone2": 32, "couple_with_heart_woman_man_tone2_tone1": 32, "couple_with_heart_woman_man_tone2_tone3": 32, "couple_with_heart_woman_man_tone2_tone4": 32, "couple_with_heart_woman_man_tone2_tone5": 32, "couple_with_heart_woman_man_tone3": 32, "couple_with_heart_woman_man_tone3_tone1": 32, "couple_with_heart_woman_man_tone3_tone2": 32, "couple_with_heart_woman_man_tone3_tone4": 32, "couple_with_heart_woman_man_tone3_tone5": 32, "couple_with_heart_woman_man_tone4": 32, "couple_with_heart_woman_man_tone4_tone1": 32, "couple_with_heart_woman_man_tone4_tone2": 32, "couple_with_heart_woman_man_tone4_tone3": 32, "couple_with_heart_woman_man_tone4_tone5": 32, "couple_with_heart_woman_man_tone5": 32, "couple_with_heart_woman_man_tone5_tone1": 32, "couple_with_heart_woman_man_tone5_tone2": 32, "couple_with_heart_woman_man_tone5_tone3": 32, "couple_with_heart_woman_man_tone5_tone4": 32, "couple_with_heart_woman_woman": 32, "couple_with_heart_woman_woman_dark_skin_ton": 32, "couple_with_heart_woman_woman_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_woman_dark_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_woman_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_woman_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_woman_light_skin_ton": 32, "couple_with_heart_woman_woman_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_woman_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_woman_light_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_woman_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_woman_medium_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_dark_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_woman_medium_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_woman_medium_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_woman_medium_light_skin_ton": 32, "couple_with_heart_woman_woman_medium_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_light_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_woman_medium_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_woman_medium_skin_ton": 32, "couple_with_heart_woman_woman_medium_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_woman_medium_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_woman_tone1": 32, "couple_with_heart_woman_woman_tone1_tone2": 32, "couple_with_heart_woman_woman_tone1_tone3": 32, "couple_with_heart_woman_woman_tone1_tone4": 32, "couple_with_heart_woman_woman_tone1_tone5": 32, "couple_with_heart_woman_woman_tone2": 32, "couple_with_heart_woman_woman_tone2_tone1": 32, "couple_with_heart_woman_woman_tone2_tone3": 32, "couple_with_heart_woman_woman_tone2_tone4": 32, "couple_with_heart_woman_woman_tone2_tone5": 32, "couple_with_heart_woman_woman_tone3": 32, "couple_with_heart_woman_woman_tone3_tone1": 32, "couple_with_heart_woman_woman_tone3_tone2": 32, "couple_with_heart_woman_woman_tone3_tone4": 32, "couple_with_heart_woman_woman_tone3_tone5": 32, "couple_with_heart_woman_woman_tone4": 32, "couple_with_heart_woman_woman_tone4_tone1": 32, "couple_with_heart_woman_woman_tone4_tone2": 32, "couple_with_heart_woman_woman_tone4_tone3": 32, "couple_with_heart_woman_woman_tone4_tone5": 32, "couple_with_heart_woman_woman_tone5": 32, "couple_with_heart_woman_woman_tone5_tone1": 32, "couple_with_heart_woman_woman_tone5_tone2": 32, "couple_with_heart_woman_woman_tone5_tone3": 32, "couple_with_heart_woman_woman_tone5_tone4": 32, "couple_with_heart_ww": 32, "couple_ww": 32, "couplekiss": 32, "couplekiss_man_man": 32, "couplekiss_man_woman": 32, "couplekiss_mm": 32, "couplekiss_woman_woman": 32, "couplekiss_ww": 32, "cow2": 32, "cow": 32, "cowboi": 32, "cowboy_hat_fac": 32, "cp": [32, 100, 125, 173, 175, 178, 212, 214, 278, 287, 288, 308, 309, 352, 353, 369, 374, 790, 837, 864, 865, 866, 867, 868, 897, 901, 902, 904, 905, 908, 909, 911, 917, 933, 941, 953, 964, 1025, 1195], "cr": [32, 1085], "crab": 32, "crayon": 32, "credit_card": 32, "crescent_moon": 32, "cricket": 32, "cricket_bat_bal": 32, "cricket_gam": 32, "croatia": 32, "crocodil": 32, "croissant": 32, "cross": [32, 38, 104, 105, 107, 133, 148, 171, 184, 208, 302, 314, 315, 330, 331, 370, 371, 372, 500, 514, 542, 543, 544, 545, 546, 547, 548, 549, 552, 553, 554, 594, 767, 789, 790, 867, 870, 871, 933, 956, 962, 964, 971, 972, 974, 988, 991, 994, 996, 1013, 1017, 1018, 1019, 1020, 1022, 1025, 1191], "crossed_fing": 32, "crossed_flag": 32, "crossed_sword": 32, "crown": 32, "cruise_ship": 32, "cry": [32, 172], "crying_cat_fac": 32, "crystal_bal": 32, "cu": 32, "cuba": 32, "cucumb": 32, "cup_with_straw": 32, "cupcak": 32, "cupid": 32, "curacao": 32, "curling_ston": 32, "curly_hair": 32, "curly_loop": 32, "currency_exchang": 32, "curri": [32, 233], "custard": 32, "cut_of_meat": 32, "cw": 32, "cx": 32, "cy": 32, "cyclon": 32, "cypru": 32, "cz": 32, "czech_republ": 32, "dagger": [32, 38], "dagger_knif": 32, "dancer": 32, "dancer_tone1": 32, "dancer_tone2": 32, "dancer_tone3": 32, "dancer_tone4": 32, "dancer_tone5": 32, "dancing_men": 32, "dancing_women": 32, "dango": 32, "dark_sunglass": 32, "dart": 32, "dash": [32, 34, 35, 38, 638], "date": [32, 123, 147, 169, 175, 183, 187, 204, 210, 240, 272, 288, 290, 333, 382, 383, 478, 838, 1030, 1125, 1127, 1131, 1133, 1140, 1145], "deaf_man": 32, "deaf_man_dark_skin_ton": 32, "deaf_man_light_skin_ton": 32, "deaf_man_medium_dark_skin_ton": 32, "deaf_man_medium_light_skin_ton": 32, "deaf_man_medium_skin_ton": 32, "deaf_man_tone1": 32, "deaf_man_tone2": 32, "deaf_man_tone3": 32, "deaf_man_tone4": 32, "deaf_man_tone5": 32, "deaf_person": 32, "deaf_person_dark_skin_ton": 32, "deaf_person_light_skin_ton": 32, "deaf_person_medium_dark_skin_ton": 32, "deaf_person_medium_light_skin_ton": 32, "deaf_person_medium_skin_ton": 32, "deaf_person_tone1": 32, "deaf_person_tone2": 32, "deaf_person_tone3": 32, "deaf_person_tone4": 32, "deaf_person_tone5": 32, "deaf_woman": 32, "deaf_woman_dark_skin_ton": 32, "deaf_woman_light_skin_ton": 32, "deaf_woman_medium_dark_skin_ton": 32, "deaf_woman_medium_light_skin_ton": 32, "deaf_woman_medium_skin_ton": 32, "deaf_woman_tone1": 32, "deaf_woman_tone2": 32, "deaf_woman_tone3": 32, "deaf_woman_tone4": 32, "deaf_woman_tone5": 32, "deciduous_tre": 32, "deer": 32, "denmark": 32, "department_stor": 32, "derelict_hous": 32, "derelict_house_build": 32, "desert": 32, "desert_island": 32, "desktop": [32, 153, 160, 172, 177, 233, 302, 919, 996, 1193, 1200], "desktop_comput": 32, "detective_tone1": 32, "detective_tone2": 32, "detective_tone3": 32, "detective_tone4": 32, "detective_tone5": 32, "dg": 32, "diamond_shape_with_a_dot_insid": 32, "diamond": [32, 34, 38, 232, 245], "diego_garcia": 32, "digit_eight": 32, "digit_f": 32, "digit_four": 32, "digit_nin": 32, "digit_on": 32, "digit_seven": 32, "digit_six": 32, "digit_thre": 32, "digit_two": 32, "digit_zero": 32, "disappoint": 32, "disappointed_reliev": 32, "disguised_fac": 32, "divid": [32, 35, 36, 38, 264, 1143], "diving_mask": 32, "diya_lamp": 32, "dizzi": 32, "dizzy_fac": 32, "dj": 32, "djibouti": 32, "dk": 32, "dm": 32, "dna": 32, "do_not_litt": 32, "dodo": 32, "dog2": 32, "dog": [32, 454], "dollar": [32, 36], "doll": 32, "dolphin": 32, "dominica": 32, "dominican_republ": 32, "door": [32, 250, 572, 827, 1045], "double_vertical_bar": 32, "doughnut": 32, "dove": 32, "dove_of_peac": 32, "dragon": [32, 98, 234, 250, 297, 299, 337, 572, 596, 597, 602, 691, 703, 705, 734, 739, 750, 754, 759, 767, 787, 789, 790, 1008], "dragon_fac": 32, "dress": [32, 169], "dromedary_camel": 32, "drool": 32, "drooling_fac": 32, "drop_of_blood": 32, "droplet": 32, "drum": 32, "drum_with_drumstick": 32, "dumpl": 32, "dvd": 32, "dz": 32, "mail": [32, 169, 244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346, 928, 1149, 1183], "ea": [32, 182], "eagl": [32, 244, 1093], "ear": 32, "ear_of_ric": 32, "ear_tone1": 32, "ear_tone2": 32, "ear_tone3": 32, "ear_tone4": 32, "ear_tone5": 32, "ear_with_hearing_aid": 32, "ear_with_hearing_aid_dark_skin_ton": 32, "ear_with_hearing_aid_light_skin_ton": 32, "ear_with_hearing_aid_medium_dark_skin_ton": 32, "ear_with_hearing_aid_medium_light_skin_ton": 32, "ear_with_hearing_aid_medium_skin_ton": 32, "ear_with_hearing_aid_tone1": 32, "ear_with_hearing_aid_tone2": 32, "ear_with_hearing_aid_tone3": 32, "ear_with_hearing_aid_tone4": 32, "ear_with_hearing_aid_tone5": 32, "earth_africa": 32, "earth_america": 32, "earth_asia": 32, "ec": [32, 98, 182, 224, 366, 369, 374, 377, 386, 790, 866, 867, 897, 933], "ecuador": 32, "ee": [32, 182], "eg": [32, 35, 130], "egg": [32, 60, 1079], "eggplant": 32, "egypt": 32, "eight": [32, 134, 174, 192, 205, 215, 223, 252, 254, 340, 369, 943, 1149], "eight_pointed_black_star": 32, "eight_spoked_asterisk": 32, "eject": 32, "eject_symbol": 32, "el_salvador": 32, "electric_plug": 32, "eleph": 32, "elev": 32, "elf": [32, 180, 183, 215, 231, 241, 484, 580, 980, 1011, 1012, 1028, 1062, 1203], "elf_dark_skin_ton": 32, "elf_light_skin_ton": 32, "elf_medium_dark_skin_ton": 32, "elf_medium_light_skin_ton": 32, "elf_medium_skin_ton": 32, "elf_tone1": 32, "elf_tone2": 32, "elf_tone3": 32, "elf_tone4": 32, "elf_tone5": 32, "england": 32, "envelop": [32, 837], "envelope_with_arrow": 32, "equatorial_guinea": 32, "er": [32, 181, 190, 205, 207, 215, 252, 1184, 1185, 1186], "eritrea": 32, "estonia": 32, "et": [32, 98, 604, 753, 957, 1012, 1013, 1054], "ethiopia": 32, "euro": [32, 520, 521, 522, 534, 535, 536], "european_castl": 32, "european_post_offic": 32, "european_union": 32, "evergreen_tre": 32, "exclam": [32, 36], "expecting_woman": 32, "expecting_woman_tone1": 32, "expecting_woman_tone2": 32, "expecting_woman_tone3": 32, "expecting_woman_tone4": 32, "expecting_woman_tone5": 32, "exploding_head": 32, "expressionless": 32, "eye_in_speech_bubbl": 32, "eye_speech_bubbl": 32, "eyeglass": 32, "face_exh": 32, "face_in_cloud": 32, "face_palm": 32, "face_palm_tone1": 32, "face_palm_tone2": 32, "face_palm_tone3": 32, "face_palm_tone4": 32, "face_palm_tone5": 32, "face_vomit": 32, "face_with_cowboy_hat": 32, "face_with_hand_over_mouth": 32, "face_with_head_bandag": 32, "face_with_monocl": 32, "face_with_rolling_ey": 32, "face_with_spiral_ey": 32, "face_with_symbols_over_mouth": 32, "face_with_thermomet": 32, "facepalm": 32, "facepalm_tone1": 32, "facepalm_tone2": 32, "facepalm_tone3": 32, "facepalm_tone4": 32, "facepalm_tone5": 32, "factori": [32, 107, 232, 245, 280, 299, 378, 493, 500, 514, 528, 542, 594, 790, 963, 1192], "factory_work": 32, "factory_worker_dark_skin_ton": 32, "factory_worker_light_skin_ton": 32, "factory_worker_medium_dark_skin_ton": 32, "factory_worker_medium_light_skin_ton": 32, "factory_worker_medium_skin_ton": 32, "factory_worker_tone1": 32, "factory_worker_tone2": 32, "factory_worker_tone3": 32, "factory_worker_tone4": 32, "factory_worker_tone5": 32, "fairi": 32, "fairy_dark_skin_ton": 32, "fairy_light_skin_ton": 32, "fairy_medium_dark_skin_ton": 32, "fairy_medium_light_skin_ton": 32, "fairy_medium_skin_ton": 32, "fairy_tone1": 32, "fairy_tone2": 32, "fairy_tone3": 32, "fairy_tone4": 32, "fairy_tone5": 32, "falafel": 32, "falkland_island": 32, "fallen_leaf": 32, "famili": [32, 196, 937, 943], "family_man_boi": 32, "family_man_boy_boi": 32, "family_man_girl": 32, "family_man_girl_boi": 32, "family_man_girl_girl": 32, "family_man_man_boi": 32, "family_man_man_boy_boi": 32, "family_man_man_girl": 32, "family_man_man_girl_boi": 32, "family_man_man_girl_girl": 32, "family_man_woman_boi": 32, "family_man_woman_boy_boi": 32, "family_man_woman_girl": 32, "family_man_woman_girl_boi": 32, "family_man_woman_girl_girl": 32, "family_mmb": 32, "family_mmbb": 32, "family_mmg": 32, "family_mmgb": 32, "family_mmgg": 32, "family_mwbb": 32, "family_mwg": 32, "family_mwgb": 32, "family_mwgg": 32, "family_woman_boi": 32, "family_woman_boy_boi": 32, "family_woman_girl": 32, "family_woman_girl_boi": 32, "family_woman_girl_girl": 32, "family_woman_woman_boi": 32, "family_woman_woman_boy_boi": 32, "family_woman_woman_girl": 32, "family_woman_woman_girl_boi": 32, "family_woman_woman_girl_girl": 32, "family_wwb": 32, "family_wwbb": 32, "family_wwg": 32, "family_wwgb": 32, "family_wwgg": 32, "farmer": 32, "farmer_dark_skin_ton": 32, "farmer_light_skin_ton": 32, "farmer_medium_dark_skin_ton": 32, "farmer_medium_light_skin_ton": 32, "farmer_medium_skin_ton": 32, "farmer_tone1": 32, "farmer_tone2": 32, "farmer_tone3": 32, "farmer_tone4": 32, "farmer_tone5": 32, "faroe_island": 32, "fast_forward": 32, "fax": 32, "fear": [32, 290, 971], "feather": 32, "feet": 32, "female_detect": 32, "female_sign": 32, "fencer": 32, "fenc": 32, "ferris_wheel": 32, "ferri": 32, "fi": [32, 967, 975, 990], "field_hockei": 32, "fiji": 32, "file_cabinet": 32, "file_fold": 32, "film_fram": 32, "film_projector": 32, "film_strip": 32, "fingers_cross": 32, "fingers_crossed_tone1": 32, "fingers_crossed_tone2": 32, "fingers_crossed_tone3": 32, "fingers_crossed_tone4": 32, "fingers_crossed_tone5": 32, "finland": 32, "fire": [32, 43, 62, 456], "fire_engin": 32, "fire_extinguish": 32, "firecrack": 32, "firefight": 32, "firefighter_dark_skin_ton": 32, "firefighter_light_skin_ton": 32, "firefighter_medium_dark_skin_ton": 32, "firefighter_medium_light_skin_ton": 32, "firefighter_medium_skin_ton": 32, "firefighter_tone1": 32, "firefighter_tone2": 32, "firefighter_tone3": 32, "firefighter_tone4": 32, "firefighter_tone5": 32, "firework": 32, "first_plac": 32, "first_place_med": 32, "first_quarter_moon": 32, "first_quarter_moon_with_fac": 32, "fish": [32, 34, 1171], "fish_cak": 32, "fishing_pole_and_fish": 32, "fist": 32, "fist_left": 32, "fist_oncom": 32, "fist_rais": 32, "fist_right": 32, "fist_tone1": 32, "fist_tone2": 32, "fist_tone3": 32, "fist_tone4": 32, "fist_tone5": 32, "five": [32, 36, 62, 115, 120, 121, 172, 192, 205, 215, 223, 244, 254, 260, 270, 285, 306, 324, 328, 336, 340, 346, 350, 369, 387, 1093, 1135], "fj": 32, "fk": 32, "flag_ac": 32, "flag_ad": 32, "flag_a": 32, "flag_af": 32, "flag_ag": 32, "flag_ai": 32, "flag_al": 32, "flag_am": 32, "flag_ao": 32, "flag_aq": 32, "flag_ar": 32, "flag_at": 32, "flag_au": 32, "flag_aw": 32, "flag_ax": 32, "flag_az": 32, "flag_ba": 32, "flag_bb": 32, "flag_bd": 32, "flag_b": 32, "flag_bf": 32, "flag_bg": 32, "flag_bh": 32, "flag_bi": 32, "flag_bj": 32, "flag_bl": 32, "flag_black": 32, "flag_bm": 32, "flag_bn": 32, "flag_bo": 32, "flag_bq": 32, "flag_br": 32, "flag_bt": 32, "flag_bv": 32, "flag_bw": 32, "flag_bz": 32, "flag_ca": 32, "flag_cc": 32, "flag_cd": 32, "flag_cf": 32, "flag_cg": 32, "flag_ch": 32, "flag_ci": 32, "flag_ck": 32, "flag_cl": 32, "flag_cm": 32, "flag_cn": 32, "flag_co": 32, "flag_cp": 32, "flag_cr": 32, "flag_cu": 32, "flag_cv": 32, "flag_cw": 32, "flag_cx": 32, "flag_cz": 32, "flag_d": 32, "flag_dg": 32, "flag_dj": 32, "flag_dk": 32, "flag_dm": 32, "flag_do": 32, "flag_dz": 32, "flag_ea": 32, "flag_ec": 32, "flag_e": 32, "flag_eg": 32, "flag_eh": 32, "flag_er": 32, "flag_": 32, "flag_et": 32, "flag_eu": 32, "flag_fi": 32, "flag_fj": 32, "flag_fk": 32, "flag_fm": 32, "flag_fo": 32, "flag_fr": 32, "flag_ga": 32, "flag_gb": 32, "flag_gd": 32, "flag_g": 32, "flag_gf": 32, "flag_gg": 32, "flag_gh": 32, "flag_gi": 32, "flag_gl": 32, "flag_gm": 32, "flag_gn": 32, "flag_gp": 32, "flag_gq": 32, "flag_gr": 32, "flag_gt": 32, "flag_gu": 32, "flag_gw": 32, "flag_hk": 32, "flag_hm": 32, "flag_hn": 32, "flag_hr": 32, "flag_ht": 32, "flag_hu": 32, "flag_ic": 32, "flag_id": 32, "flag_i": 32, "flag_il": 32, "flag_im": 32, "flag_in": 32, "flag_io": 32, "flag_iq": 32, "flag_ir": 32, "flag_it": 32, "flag_j": 32, "flag_jm": 32, "flag_jo": 32, "flag_jp": 32, "flag_k": 32, "flag_kg": 32, "flag_kh": 32, "flag_ki": 32, "flag_km": 32, "flag_kn": 32, "flag_kp": 32, "flag_kr": 32, "flag_kw": 32, "flag_kz": 32, "flag_la": 32, "flag_lb": 32, "flag_lc": 32, "flag_li": 32, "flag_lk": 32, "flag_lr": 32, "flag_l": 32, "flag_lt": 32, "flag_lu": 32, "flag_lv": 32, "flag_ma": 32, "flag_mc": 32, "flag_md": 32, "flag_m": 32, "flag_mf": 32, "flag_mg": 32, "flag_mh": 32, "flag_mk": 32, "flag_ml": 32, "flag_mm": 32, "flag_mn": 32, "flag_mo": 32, "flag_mp": 32, "flag_mq": 32, "flag_mr": 32, "flag_mt": 32, "flag_mu": 32, "flag_mv": 32, "flag_mw": 32, "flag_mx": 32, "flag_mi": 32, "flag_mz": 32, "flag_na": 32, "flag_nc": 32, "flag_n": 32, "flag_nf": 32, "flag_ng": 32, "flag_ni": 32, "flag_nl": 32, "flag_no": 32, "flag_np": 32, "flag_nr": 32, "flag_nu": 32, "flag_nz": 32, "flag_om": 32, "flag_pa": 32, "flag_p": 32, "flag_pf": 32, "flag_pg": 32, "flag_ph": 32, "flag_pk": 32, "flag_pl": 32, "flag_pm": 32, "flag_pn": 32, "flag_pr": 32, "flag_pt": 32, "flag_pw": 32, "flag_pi": 32, "flag_qa": 32, "flag_r": 32, "flag_ro": 32, "flag_ru": 32, "flag_rw": 32, "flag_sa": 32, "flag_sb": 32, "flag_sc": 32, "flag_sd": 32, "flag_s": 32, "flag_sg": 32, "flag_sh": 32, "flag_si": 32, "flag_sj": 32, "flag_sk": 32, "flag_sl": 32, "flag_sm": 32, "flag_sn": 32, "flag_so": 32, "flag_sr": 32, "flag_ss": 32, "flag_st": 32, "flag_sv": 32, "flag_sx": 32, "flag_sz": 32, "flag_ta": 32, "flag_tc": 32, "flag_td": 32, "flag_tf": 32, "flag_tg": 32, "flag_th": 32, "flag_tj": 32, "flag_tk": 32, "flag_tl": 32, "flag_tm": 32, "flag_tn": 32, "flag_to": 32, "flag_tr": 32, "flag_tt": 32, "flag_tv": 32, "flag_tw": 32, "flag_tz": 32, "flag_ua": 32, "flag_ug": 32, "flag_um": 32, "flag_u": 32, "flag_ui": 32, "flag_uz": 32, "flag_va": 32, "flag_vc": 32, "flag_v": 32, "flag_vg": 32, "flag_vi": 32, "flag_vn": 32, "flag_vu": 32, "flag_wf": 32, "flag_whit": 32, "flag_w": 32, "flag_xk": 32, "flag_y": 32, "flag_yt": 32, "flag_za": 32, "flag_zm": 32, "flag_zw": 32, "flag": [32, 48, 172, 174, 189, 200, 211, 241, 247, 250, 254, 257, 260, 285, 288, 299, 301, 315, 331, 362, 481, 482, 483, 488, 491, 677, 691, 768, 790, 796, 805, 819, 842, 845, 847, 935, 937, 966, 967, 968, 970, 984, 1005, 1009, 1070], "flame": [32, 175], "flamingo": 32, "flan": 32, "flashlight": 32, "flatbread": 32, "fleur": 32, "li": [32, 168, 264, 630], "fleur_de_li": 32, "flight_arriv": 32, "flight_departur": 32, "floppy_disk": 32, "flower_playing_card": 32, "fly": [32, 863, 934], "flying_disc": 32, "flying_sauc": 32, "fm": 32, "fo": 32, "fog": 32, "foggi": 32, "fondu": 32, "foot": [32, 70, 430, 899], "foot_dark_skin_ton": 32, "foot_light_skin_ton": 32, "foot_medium_dark_skin_ton": 32, "foot_medium_light_skin_ton": 32, "foot_medium_skin_ton": 32, "foot_tone1": 32, "foot_tone2": 32, "foot_tone3": 32, "foot_tone4": 32, "foot_tone5": 32, "footbal": 32, "footprint": [32, 204, 1059], "fork_and_knif": 32, "fork_and_knife_with_pl": 32, "fork_knife_pl": 32, "fortune_cooki": 32, "fountain": 32, "fountain_pen": 32, "four": [32, 35, 171, 176, 192, 204, 205, 208, 215, 222, 223, 231, 247, 252, 254, 264, 267, 270, 281, 285, 288, 302, 305, 306, 312, 327, 328, 334, 340, 346, 350, 369, 837, 903, 1073, 1081, 1135, 1136, 1144, 1169, 1192], "four_leaf_clov": 32, "fox": [32, 454], "fox_fac": 32, "fr": [32, 183], "frame_photo": 32, "frame_with_pictur": 32, "framed_pictur": 32, "franc": 32, "french_bread": 32, "french_guiana": 32, "french_polynesia": 32, "french_southern_territori": 32, "fried_egg": 32, "fried_shrimp": 32, "fri": 32, "frog": 32, "frowning2": 32, "frown": [32, 35, 70, 1189], "frowning_fac": 32, "frowning_man": 32, "frowning_woman": 32, "fuelpump": 32, "full_moon": 32, "full_moon_with_fac": 32, "funeral_urn": 32, "ga": [32, 340], "gabon": 32, "gambia": 32, "game_di": 32, "garlic": 32, "gay_pride_flag": 32, "gb": [32, 965], "gd": 32, "ge": [32, 35], "gear": 32, "gem": 32, "gemini": 32, "geni": 32, "georgia": 32, "germani": [32, 172, 173, 387], "gf": 32, "gg": [32, 35, 38], "gh": [32, 168, 1158], "ghana": 32, "ghost": 32, "gi": [32, 168, 255], "gibraltar": 32, "gift": [32, 208, 239], "gift_heart": 32, "giraff": 32, "girl": 32, "girl_tone1": 32, "girl_tone2": 32, "girl_tone3": 32, "girl_tone4": 32, "girl_tone5": 32, "gl": [32, 35], "glass_of_milk": 32, "globe_with_meridian": 32, "glove": 32, "gm": 32, "gn": 32, "goal": [32, 42, 69, 172, 291, 294, 354, 478, 488, 757, 776, 864, 865, 1027, 1036], "goal_net": 32, "goat": 32, "goggl": 32, "golf": 32, "golfer": 32, "golfing_man": 32, "golfing_woman": 32, "gorilla": 32, "gp": 32, "gq": 32, "gr": [32, 312, 328, 1149], "grandma": 32, "grandma_tone1": 32, "grandma_tone2": 32, "grandma_tone3": 32, "grandma_tone4": 32, "grandma_tone5": 32, "grape": 32, "great_britain": 32, "greec": 32, "green_appl": 32, "green_book": 32, "green_circl": 32, "green_heart": 32, "green_salad": 32, "green_squar": 32, "greenland": 32, "grenada": 32, "grey_exclam": 32, "grey_quest": 32, "grin": 32, "gu": 32, "guadeloup": 32, "guam": 32, "guard": [32, 234, 250, 486, 765, 766, 768], "guard_tone1": 32, "guard_tone2": 32, "guard_tone3": 32, "guard_tone4": 32, "guard_tone5": 32, "guardsman": 32, "guardsman_tone1": 32, "guardsman_tone2": 32, "guardsman_tone3": 32, "guardsman_tone4": 32, "guardsman_tone5": 32, "guardswoman": 32, "guatemala": 32, "guernsei": 32, "guide_dog": 32, "guinea": 32, "guinea_bissau": 32, "guitar": 32, "gun": 32, "guyana": 32, "gw": 32, "gy": 32, "haircut": 32, "haircut_man": 32, "haircut_tone1": 32, "haircut_tone2": 32, "haircut_tone3": 32, "haircut_tone4": 32, "haircut_tone5": 32, "haircut_woman": 32, "haiti": 32, "hamburg": 32, "hammer": [32, 172, 248, 288, 817, 827], "hammer_and_pick": 32, "hammer_and_wrench": 32, "hammer_pick": 32, "hamster": 32, "hand": [32, 168, 180, 187, 192, 199, 208, 223, 234, 250, 269, 296, 377, 404, 415, 434, 436, 499, 518, 586, 597, 613, 615, 616, 742, 881, 897, 942, 943, 959, 987, 1021, 1039, 1054, 1061, 1189, 1195, 1207], "hand_splai": 32, "hand_splayed_tone1": 32, "hand_splayed_tone2": 32, "hand_splayed_tone3": 32, "hand_splayed_tone4": 32, "hand_splayed_tone5": 32, "hand_with_index_and_middle_finger_cross": 32, "hand_with_index_and_middle_fingers_crossed_tone1": 32, "hand_with_index_and_middle_fingers_crossed_tone2": 32, "hand_with_index_and_middle_fingers_crossed_tone3": 32, "hand_with_index_and_middle_fingers_crossed_tone4": 32, "hand_with_index_and_middle_fingers_crossed_tone5": 32, "handbag": 32, "handbal": 32, "handball_tone1": 32, "handball_tone2": 32, "handball_tone3": 32, "handball_tone4": 32, "handball_tone5": 32, "handshak": [32, 766], "handshake_tone1": 32, "handshake_tone2": 32, "handshake_tone3": 32, "handshake_tone4": 32, "handshake_tone5": 32, "hankei": 32, "hash": [32, 204, 210, 211, 222, 228, 241, 247, 248, 251, 255, 257, 260, 264, 285, 292, 306, 346, 369, 489, 837, 1083, 1164], "hatched_chick": 32, "hatching_chick": 32, "head_bandag": 32, "headphon": 32, "headston": 32, "health_work": 32, "health_worker_dark_skin_ton": 32, "health_worker_light_skin_ton": 32, "health_worker_medium_dark_skin_ton": 32, "health_worker_medium_light_skin_ton": 32, "health_worker_medium_skin_ton": 32, "health_worker_tone1": 32, "health_worker_tone2": 32, "health_worker_tone3": 32, "health_worker_tone4": 32, "health_worker_tone5": 32, "hear_no_evil": 32, "heart_decor": 32, "heart_exclam": 32, "heart_ey": 32, "heart_eyes_cat": 32, "heart_on_fir": 32, "heartbeat": 32, "heartpuls": 32, "heavy_check_mark": 32, "heavy_division_sign": 32, "heavy_dollar_sign": 32, "heavy_heart_exclam": 32, "heavy_heart_exclamation_mark_orna": 32, "heavy_minus_sign": 32, "heavy_multiplication_x": 32, "heavy_plus_sign": 32, "hedgehog": 32, "helicopt": 32, "helmet_with_cross": 32, "helmet_with_white_cross": 32, "herb": 32, "hibiscu": 32, "high_bright": 32, "high_heel": 32, "hiking_boot": 32, "hindu_templ": 32, "hippopotamu": 32, "hk": 32, "hn": 32, "hocho": 32, "hockei": 32, "hole": [32, 250, 790, 933, 963, 972, 973, 974, 991, 1004], "hondura": 32, "honey_pot": 32, "hong_kong": 32, "hook": [32, 34, 38, 223, 241, 247, 257, 260, 290, 323, 470, 505, 761, 796], "hors": 32, "horse_rac": 32, "horse_racing_tone1": 32, "horse_racing_tone2": 32, "horse_racing_tone3": 32, "horse_racing_tone4": 32, "horse_racing_tone5": 32, "hospit": 32, "hot_dog": 32, "hot_fac": 32, "hot_pepp": 32, "hotdog": 32, "hotel": [32, 177, 387], "hotspr": 32, "hourglass": 32, "hourglass_flowing_sand": 32, "house_abandon": 32, "house_build": 32, "house_with_garden": 32, "hr": 32, "ht": 32, "hu": [32, 360, 361, 378], "hug": 32, "hugging_fac": 32, "hungari": 32, "hush": 32, "hut": 32, "ic": [32, 415, 496, 525, 1188], "ice_cream": 32, "ice_cub": 32, "ice_hockei": 32, "ice_sk": 32, "icecream": 32, "iceland": 32, "id": [32, 42, 46, 108, 111, 112, 113, 114, 115, 116, 117, 124, 153, 174, 177, 187, 191, 194, 204, 205, 215, 222, 228, 241, 244, 247, 254, 257, 258, 260, 267, 270, 274, 282, 285, 292, 298, 302, 306, 312, 317, 324, 329, 334, 340, 346, 350, 364, 485, 520, 521, 522, 534, 535, 536, 553, 801, 833, 835, 857, 864, 865, 870, 872, 881, 882, 883, 893, 900, 921, 923, 924, 935, 941, 943, 950, 969, 979, 1021, 1048, 1059, 1075, 1114, 1125, 1126, 1127, 1128, 1131, 1132, 1133, 1142, 1144, 1162, 1205], "ideograph_advantag": 32, "ie": 32, "il": [32, 182], "imp": 32, "inbox_trai": 32, "incoming_envelop": 32, "india": [32, 232, 281, 305, 327, 1136], "indonesia": 32, "infin": [32, 130, 211, 260, 333, 347, 1040, 1041], "information_desk_person": 32, "information_desk_person_tone1": 32, "information_desk_person_tone2": 32, "information_desk_person_tone3": 32, "information_desk_person_tone4": 32, "information_desk_person_tone5": 32, "\u2139": 32, "information_sourc": 32, "interrobang": 32, "iphon": 32, "iq": 32, "ir": [32, 897], "iran": 32, "iraq": 32, "ireland": 32, "island": 32, "isle_of_man": 32, "israel": [32, 232, 281, 1136], "itali": 32, "izakaya_lantern": 32, "jack_o_lantern": 32, "jamaica": 32, "japan": 32, "japanese_castl": 32, "japanese_goblin": 32, "japanese_ogr": 32, "jean": 32, "jersei": 32, "jigsaw": 32, "jm": 32, "jo": [32, 215, 228, 241, 244, 254, 257, 260, 264, 267, 306, 312, 340], "jordan": 32, "joi": 32, "joy_cat": 32, "joystick": 32, "jp": 32, "judg": 32, "judge_dark_skin_ton": 32, "judge_light_skin_ton": 32, "judge_medium_dark_skin_ton": 32, "judge_medium_light_skin_ton": 32, "judge_medium_skin_ton": 32, "judge_tone1": 32, "judge_tone2": 32, "judge_tone3": 32, "judge_tone4": 32, "judge_tone5": 32, "juggler": 32, "juggler_tone1": 32, "juggler_tone2": 32, "juggler_tone3": 32, "juggler_tone4": 32, "juggler_tone5": 32, "juggl": 32, "juggling_tone1": 32, "juggling_tone2": 32, "juggling_tone3": 32, "juggling_tone4": 32, "juggling_tone5": 32, "kaaba": 32, "kangaroo": 32, "karate_uniform": 32, "kayak": 32, "kazakhstan": 32, "ke": 32, "kenya": 32, "key2": 32, "keyboard": [32, 369, 879, 929], "keycap_ten": 32, "kg": 32, "kh": 32, "ki": [32, 213], "kick_scoot": 32, "kimono": 32, "kiribati": 32, "kiss_dark_skin_ton": 32, "kiss_light_skin_ton": 32, "kiss_man_man_dark_skin_ton": 32, "kiss_man_man_dark_skin_tone_light_skin_ton": 32, "kiss_man_man_dark_skin_tone_medium_dark_skin_ton": 32, "kiss_man_man_dark_skin_tone_medium_light_skin_ton": 32, "kiss_man_man_dark_skin_tone_medium_skin_ton": 32, "kiss_man_man_light_skin_ton": 32, "kiss_man_man_light_skin_tone_dark_skin_ton": 32, "kiss_man_man_light_skin_tone_medium_dark_skin_ton": 32, "kiss_man_man_light_skin_tone_medium_light_skin_ton": 32, "kiss_man_man_light_skin_tone_medium_skin_ton": 32, "kiss_man_man_medium_dark_skin_ton": 32, "kiss_man_man_medium_dark_skin_tone_dark_skin_ton": 32, "kiss_man_man_medium_dark_skin_tone_light_skin_ton": 32, "kiss_man_man_medium_dark_skin_tone_medium_light_skin_ton": 32, "kiss_man_man_medium_dark_skin_tone_medium_skin_ton": 32, "kiss_man_man_medium_light_skin_ton": 32, "kiss_man_man_medium_light_skin_tone_dark_skin_ton": 32, "kiss_man_man_medium_light_skin_tone_light_skin_ton": 32, "kiss_man_man_medium_light_skin_tone_medium_dark_skin_ton": 32, "kiss_man_man_medium_light_skin_tone_medium_skin_ton": 32, "kiss_man_man_medium_skin_ton": 32, "kiss_man_man_medium_skin_tone_dark_skin_ton": 32, "kiss_man_man_medium_skin_tone_light_skin_ton": 32, "kiss_man_man_medium_skin_tone_medium_dark_skin_ton": 32, "kiss_man_man_medium_skin_tone_medium_light_skin_ton": 32, "kiss_man_man_tone1": 32, "kiss_man_man_tone1_tone2": 32, "kiss_man_man_tone1_tone3": 32, "kiss_man_man_tone1_tone4": 32, "kiss_man_man_tone1_tone5": 32, "kiss_man_man_tone2": 32, "kiss_man_man_tone2_tone1": 32, "kiss_man_man_tone2_tone3": 32, "kiss_man_man_tone2_tone4": 32, "kiss_man_man_tone2_tone5": 32, "kiss_man_man_tone3": 32, "kiss_man_man_tone3_tone1": 32, "kiss_man_man_tone3_tone2": 32, "kiss_man_man_tone3_tone4": 32, "kiss_man_man_tone3_tone5": 32, "kiss_man_man_tone4": 32, "kiss_man_man_tone4_tone1": 32, "kiss_man_man_tone4_tone2": 32, "kiss_man_man_tone4_tone3": 32, "kiss_man_man_tone4_tone5": 32, "kiss_man_man_tone5": 32, "kiss_man_man_tone5_tone1": 32, "kiss_man_man_tone5_tone2": 32, "kiss_man_man_tone5_tone3": 32, "kiss_man_man_tone5_tone4": 32, "kiss_medium_dark_skin_ton": 32, "kiss_medium_light_skin_ton": 32, "kiss_medium_skin_ton": 32, "kiss_mm": 32, "kiss_person_person_dark_skin_tone_light_skin_ton": 32, "kiss_person_person_dark_skin_tone_medium_dark_skin_ton": 32, "kiss_person_person_dark_skin_tone_medium_light_skin_ton": 32, "kiss_person_person_dark_skin_tone_medium_skin_ton": 32, "kiss_person_person_light_skin_tone_dark_skin_ton": 32, "kiss_person_person_light_skin_tone_medium_dark_skin_ton": 32, "kiss_person_person_light_skin_tone_medium_light_skin_ton": 32, "kiss_person_person_light_skin_tone_medium_skin_ton": 32, "kiss_person_person_medium_dark_skin_tone_dark_skin_ton": 32, "kiss_person_person_medium_dark_skin_tone_light_skin_ton": 32, "kiss_person_person_medium_dark_skin_tone_medium_light_skin_ton": 32, "kiss_person_person_medium_dark_skin_tone_medium_skin_ton": 32, "kiss_person_person_medium_light_skin_tone_dark_skin_ton": 32, "kiss_person_person_medium_light_skin_tone_light_skin_ton": 32, "kiss_person_person_medium_light_skin_tone_medium_dark_skin_ton": 32, "kiss_person_person_medium_light_skin_tone_medium_skin_ton": 32, "kiss_person_person_medium_skin_tone_dark_skin_ton": 32, "kiss_person_person_medium_skin_tone_light_skin_ton": 32, "kiss_person_person_medium_skin_tone_medium_dark_skin_ton": 32, "kiss_person_person_medium_skin_tone_medium_light_skin_ton": 32, "kiss_person_person_tone1_tone2": 32, "kiss_person_person_tone1_tone3": 32, "kiss_person_person_tone1_tone4": 32, "kiss_person_person_tone1_tone5": 32, "kiss_person_person_tone2_tone1": 32, "kiss_person_person_tone2_tone3": 32, "kiss_person_person_tone2_tone4": 32, "kiss_person_person_tone2_tone5": 32, "kiss_person_person_tone3_tone1": 32, "kiss_person_person_tone3_tone2": 32, "kiss_person_person_tone3_tone4": 32, "kiss_person_person_tone3_tone5": 32, "kiss_person_person_tone4_tone1": 32, "kiss_person_person_tone4_tone2": 32, "kiss_person_person_tone4_tone3": 32, "kiss_person_person_tone4_tone5": 32, "kiss_person_person_tone5_tone1": 32, "kiss_person_person_tone5_tone2": 32, "kiss_person_person_tone5_tone3": 32, "kiss_person_person_tone5_tone4": 32, "kiss_tone1": 32, "kiss_tone2": 32, "kiss_tone3": 32, "kiss_tone4": 32, "kiss_tone5": 32, "kiss_woman_man": 32, "kiss_woman_man_dark_skin_ton": 32, "kiss_woman_man_dark_skin_tone_light_skin_ton": 32, "kiss_woman_man_dark_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_man_dark_skin_tone_medium_light_skin_ton": 32, "kiss_woman_man_dark_skin_tone_medium_skin_ton": 32, "kiss_woman_man_light_skin_ton": 32, "kiss_woman_man_light_skin_tone_dark_skin_ton": 32, "kiss_woman_man_light_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_man_light_skin_tone_medium_light_skin_ton": 32, "kiss_woman_man_light_skin_tone_medium_skin_ton": 32, "kiss_woman_man_medium_dark_skin_ton": 32, "kiss_woman_man_medium_dark_skin_tone_dark_skin_ton": 32, "kiss_woman_man_medium_dark_skin_tone_light_skin_ton": 32, "kiss_woman_man_medium_dark_skin_tone_medium_light_skin_ton": 32, "kiss_woman_man_medium_dark_skin_tone_medium_skin_ton": 32, "kiss_woman_man_medium_light_skin_ton": 32, "kiss_woman_man_medium_light_skin_tone_dark_skin_ton": 32, "kiss_woman_man_medium_light_skin_tone_light_skin_ton": 32, "kiss_woman_man_medium_light_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_man_medium_light_skin_tone_medium_skin_ton": 32, "kiss_woman_man_medium_skin_ton": 32, "kiss_woman_man_medium_skin_tone_dark_skin_ton": 32, "kiss_woman_man_medium_skin_tone_light_skin_ton": 32, "kiss_woman_man_medium_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_man_medium_skin_tone_medium_light_skin_ton": 32, "kiss_woman_man_tone1": 32, "kiss_woman_man_tone1_tone2": 32, "kiss_woman_man_tone1_tone3": 32, "kiss_woman_man_tone1_tone4": 32, "kiss_woman_man_tone1_tone5": 32, "kiss_woman_man_tone2": 32, "kiss_woman_man_tone2_tone1": 32, "kiss_woman_man_tone2_tone3": 32, "kiss_woman_man_tone2_tone4": 32, "kiss_woman_man_tone2_tone5": 32, "kiss_woman_man_tone3": 32, "kiss_woman_man_tone3_tone1": 32, "kiss_woman_man_tone3_tone2": 32, "kiss_woman_man_tone3_tone4": 32, "kiss_woman_man_tone3_tone5": 32, "kiss_woman_man_tone4": 32, "kiss_woman_man_tone4_tone1": 32, "kiss_woman_man_tone4_tone2": 32, "kiss_woman_man_tone4_tone3": 32, "kiss_woman_man_tone4_tone5": 32, "kiss_woman_man_tone5": 32, "kiss_woman_man_tone5_tone1": 32, "kiss_woman_man_tone5_tone2": 32, "kiss_woman_man_tone5_tone3": 32, "kiss_woman_man_tone5_tone4": 32, "kiss_woman_woman_dark_skin_ton": 32, "kiss_woman_woman_dark_skin_tone_light_skin_ton": 32, "kiss_woman_woman_dark_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_woman_dark_skin_tone_medium_light_skin_ton": 32, "kiss_woman_woman_dark_skin_tone_medium_skin_ton": 32, "kiss_woman_woman_light_skin_ton": 32, "kiss_woman_woman_light_skin_tone_dark_skin_ton": 32, "kiss_woman_woman_light_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_woman_light_skin_tone_medium_light_skin_ton": 32, "kiss_woman_woman_light_skin_tone_medium_skin_ton": 32, "kiss_woman_woman_medium_dark_skin_ton": 32, "kiss_woman_woman_medium_dark_skin_tone_dark_skin_ton": 32, "kiss_woman_woman_medium_dark_skin_tone_light_skin_ton": 32, "kiss_woman_woman_medium_dark_skin_tone_medium_light_skin_ton": 32, "kiss_woman_woman_medium_dark_skin_tone_medium_skin_ton": 32, "kiss_woman_woman_medium_light_skin_ton": 32, "kiss_woman_woman_medium_light_skin_tone_dark_skin_ton": 32, "kiss_woman_woman_medium_light_skin_tone_light_skin_ton": 32, "kiss_woman_woman_medium_light_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_woman_medium_light_skin_tone_medium_skin_ton": 32, "kiss_woman_woman_medium_skin_ton": 32, "kiss_woman_woman_medium_skin_tone_dark_skin_ton": 32, "kiss_woman_woman_medium_skin_tone_light_skin_ton": 32, "kiss_woman_woman_medium_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_woman_medium_skin_tone_medium_light_skin_ton": 32, "kiss_woman_woman_tone1": 32, "kiss_woman_woman_tone1_tone2": 32, "kiss_woman_woman_tone1_tone3": 32, "kiss_woman_woman_tone1_tone4": 32, "kiss_woman_woman_tone1_tone5": 32, "kiss_woman_woman_tone2": 32, "kiss_woman_woman_tone2_tone1": 32, "kiss_woman_woman_tone2_tone3": 32, "kiss_woman_woman_tone2_tone4": 32, "kiss_woman_woman_tone2_tone5": 32, "kiss_woman_woman_tone3": 32, "kiss_woman_woman_tone3_tone1": 32, "kiss_woman_woman_tone3_tone2": 32, "kiss_woman_woman_tone3_tone4": 32, "kiss_woman_woman_tone3_tone5": 32, "kiss_woman_woman_tone4": 32, "kiss_woman_woman_tone4_tone1": 32, "kiss_woman_woman_tone4_tone2": 32, "kiss_woman_woman_tone4_tone3": 32, "kiss_woman_woman_tone4_tone5": 32, "kiss_woman_woman_tone5": 32, "kiss_woman_woman_tone5_tone1": 32, "kiss_woman_woman_tone5_tone2": 32, "kiss_woman_woman_tone5_tone3": 32, "kiss_woman_woman_tone5_tone4": 32, "kiss_ww": 32, "kissing_cat": 32, "kissing_closed_ey": 32, "kissing_smiling_ey": 32, "kite": 32, "kiwi": 32, "kiwi_fruit": 32, "kiwifruit": 32, "km": [32, 193, 195, 350], "kn": 32, "knife": [32, 796, 963, 1189], "knot": 32, "koala": 32, "koko": 32, "korea": 32, "kosovo": 32, "kp": 32, "kr": 32, "kuwait": 32, "kw": [32, 241, 247, 257, 260], "ky": 32, "kyrgyzstan": 32, "kz": 32, "la": 32, "lab_coat": 32, "label": [32, 39, 40, 58, 193, 195, 242, 255, 269, 272, 305, 311, 350, 426, 431, 438, 444, 448, 451, 455, 458, 464, 468, 473, 474, 695, 696, 734, 787, 789, 790, 817, 1136, 1143, 1155, 1158], "lacross": 32, "ladder": 32, "lady_beetl": 32, "lao": 32, "large_blue_circl": 32, "large_blue_diamond": 32, "large_orange_diamond": 32, "last_quarter_moon": 32, "last_quarter_moon_with_fac": 32, "latin_cross": 32, "latvia": 32, "laugh": 32, "lb": 32, "lc": [32, 209], "leafy_green": 32, "leav": [32, 49, 120, 169, 172, 173, 179, 182, 212, 241, 264, 301, 380, 598, 600, 609, 610, 625, 627, 628, 785, 788, 800, 805, 815, 837, 942, 967, 987, 1075, 1149], "lebanon": 32, "ledger": 32, "left_facing_fist": 32, "left_facing_fist_tone1": 32, "left_facing_fist_tone2": 32, "left_facing_fist_tone3": 32, "left_facing_fist_tone4": 32, "left_facing_fist_tone5": 32, "left_fist": 32, "left_fist_tone1": 32, "left_fist_tone2": 32, "left_fist_tone3": 32, "left_fist_tone4": 32, "left_fist_tone5": 32, "left_luggag": 32, "left_right_arrow": 32, "left_speech_bubbl": 32, "leftwards_arrow_with_hook": 32, "leg": [32, 35], "leg_dark_skin_ton": 32, "leg_light_skin_ton": 32, "leg_medium_dark_skin_ton": 32, "leg_medium_light_skin_ton": 32, "leg_medium_skin_ton": 32, "leg_tone1": 32, "leg_tone2": 32, "leg_tone3": 32, "leg_tone4": 32, "leg_tone5": 32, "lemon": 32, "leo": [32, 360, 361, 378], "leopard": 32, "lesotho": 32, "level_slid": 32, "levit": 32, "levitate_tone1": 32, "levitate_tone2": 32, "levitate_tone3": 32, "levitate_tone4": 32, "levitate_tone5": 32, "liar": 32, "liberia": 32, "libra": 32, "libya": 32, "liechtenstein": 32, "lifter": 32, "lifter_tone1": 32, "lifter_tone2": 32, "lifter_tone3": 32, "lifter_tone4": 32, "lifter_tone5": 32, "light_rail": 32, "linked_paperclip": 32, "lion": 32, "lion_fac": 32, "lip": 32, "lipstick": 32, "lithuania": 32, "lizard": 32, "lk": 32, "llama": 32, "lobster": 32, "lock": [32, 172, 174, 204, 208, 241, 247, 250, 257, 260, 276, 277, 279, 288, 309, 322, 323, 336, 340, 378, 452, 492, 572, 755, 761, 764, 766, 767, 785, 789, 790, 827, 835, 840, 845, 874, 950, 982, 987, 989, 997, 1004, 1045, 1136, 1189, 1201, 1204], "lock_with_ink_pen": 32, "lollipop": 32, "long_drum": 32, "loud_sound": 32, "loudspeak": 32, "love_hotel": 32, "love_lett": 32, "love_you_gestur": 32, "love_you_gesture_dark_skin_ton": 32, "love_you_gesture_light_skin_ton": 32, "love_you_gesture_medium_dark_skin_ton": 32, "love_you_gesture_medium_light_skin_ton": 32, "love_you_gesture_medium_skin_ton": 32, "love_you_gesture_tone1": 32, "love_you_gesture_tone2": 32, "love_you_gesture_tone3": 32, "love_you_gesture_tone4": 32, "love_you_gesture_tone5": 32, "low_bright": 32, "lower_left_ballpoint_pen": 32, "lower_left_crayon": 32, "lower_left_fountain_pen": 32, "lower_left_paintbrush": 32, "lr": 32, "lu": 32, "luggag": 32, "lung": 32, "luxembourg": 32, "lv": 32, "ly": 32, "lying_fac": 32, "ma": 32, "macau": 32, "macedonia": 32, "madagascar": 32, "mag": 32, "mag_right": 32, "mage": 32, "mage_dark_skin_ton": 32, "mage_light_skin_ton": 32, "mage_medium_dark_skin_ton": 32, "mage_medium_light_skin_ton": 32, "mage_medium_skin_ton": 32, "mage_tone1": 32, "mage_tone2": 32, "mage_tone3": 32, "mage_tone4": 32, "mage_tone5": 32, "magic_wand": 32, "magnet": 32, "mahjong": 32, "mailbox": 32, "mailbox_clos": 32, "mailbox_with_mail": 32, "mailbox_with_no_mail": 32, "malawi": 32, "malaysia": 32, "maldiv": 32, "male_danc": 32, "male_dancer_tone1": 32, "male_dancer_tone2": 32, "male_dancer_tone3": 32, "male_dancer_tone4": 32, "male_dancer_tone5": 32, "male_detect": 32, "male_sign": 32, "mali": 32, "malta": 32, "mammoth": 32, "man_artist": 32, "man_artist_dark_skin_ton": 32, "man_artist_light_skin_ton": 32, "man_artist_medium_dark_skin_ton": 32, "man_artist_medium_light_skin_ton": 32, "man_artist_medium_skin_ton": 32, "man_artist_tone1": 32, "man_artist_tone2": 32, "man_artist_tone3": 32, "man_artist_tone4": 32, "man_artist_tone5": 32, "man_astronaut": 32, "man_astronaut_dark_skin_ton": 32, "man_astronaut_light_skin_ton": 32, "man_astronaut_medium_dark_skin_ton": 32, "man_astronaut_medium_light_skin_ton": 32, "man_astronaut_medium_skin_ton": 32, "man_astronaut_tone1": 32, "man_astronaut_tone2": 32, "man_astronaut_tone3": 32, "man_astronaut_tone4": 32, "man_astronaut_tone5": 32, "man_bald": 32, "man_bald_dark_skin_ton": 32, "man_bald_light_skin_ton": 32, "man_bald_medium_dark_skin_ton": 32, "man_bald_medium_light_skin_ton": 32, "man_bald_medium_skin_ton": 32, "man_bald_tone1": 32, "man_bald_tone2": 32, "man_bald_tone3": 32, "man_bald_tone4": 32, "man_bald_tone5": 32, "man_beard": 32, "man_bik": 32, "man_biking_dark_skin_ton": 32, "man_biking_light_skin_ton": 32, "man_biking_medium_dark_skin_ton": 32, "man_biking_medium_light_skin_ton": 32, "man_biking_medium_skin_ton": 32, "man_biking_tone1": 32, "man_biking_tone2": 32, "man_biking_tone3": 32, "man_biking_tone4": 32, "man_biking_tone5": 32, "man_bouncing_bal": 32, "man_bouncing_ball_dark_skin_ton": 32, "man_bouncing_ball_light_skin_ton": 32, "man_bouncing_ball_medium_dark_skin_ton": 32, "man_bouncing_ball_medium_light_skin_ton": 32, "man_bouncing_ball_medium_skin_ton": 32, "man_bouncing_ball_tone1": 32, "man_bouncing_ball_tone2": 32, "man_bouncing_ball_tone3": 32, "man_bouncing_ball_tone4": 32, "man_bouncing_ball_tone5": 32, "man_bow": 32, "man_bowing_dark_skin_ton": 32, "man_bowing_light_skin_ton": 32, "man_bowing_medium_dark_skin_ton": 32, "man_bowing_medium_light_skin_ton": 32, "man_bowing_medium_skin_ton": 32, "man_bowing_tone1": 32, "man_bowing_tone2": 32, "man_bowing_tone3": 32, "man_bowing_tone4": 32, "man_bowing_tone5": 32, "man_cartwheel": 32, "man_cartwheeling_dark_skin_ton": 32, "man_cartwheeling_light_skin_ton": 32, "man_cartwheeling_medium_dark_skin_ton": 32, "man_cartwheeling_medium_light_skin_ton": 32, "man_cartwheeling_medium_skin_ton": 32, "man_cartwheeling_tone1": 32, "man_cartwheeling_tone2": 32, "man_cartwheeling_tone3": 32, "man_cartwheeling_tone4": 32, "man_cartwheeling_tone5": 32, "man_climb": 32, "man_climbing_dark_skin_ton": 32, "man_climbing_light_skin_ton": 32, "man_climbing_medium_dark_skin_ton": 32, "man_climbing_medium_light_skin_ton": 32, "man_climbing_medium_skin_ton": 32, "man_climbing_tone1": 32, "man_climbing_tone2": 32, "man_climbing_tone3": 32, "man_climbing_tone4": 32, "man_climbing_tone5": 32, "man_construction_work": 32, "man_construction_worker_dark_skin_ton": 32, "man_construction_worker_light_skin_ton": 32, "man_construction_worker_medium_dark_skin_ton": 32, "man_construction_worker_medium_light_skin_ton": 32, "man_construction_worker_medium_skin_ton": 32, "man_construction_worker_tone1": 32, "man_construction_worker_tone2": 32, "man_construction_worker_tone3": 32, "man_construction_worker_tone4": 32, "man_construction_worker_tone5": 32, "man_cook": 32, "man_cook_dark_skin_ton": 32, "man_cook_light_skin_ton": 32, "man_cook_medium_dark_skin_ton": 32, "man_cook_medium_light_skin_ton": 32, "man_cook_medium_skin_ton": 32, "man_cook_tone1": 32, "man_cook_tone2": 32, "man_cook_tone3": 32, "man_cook_tone4": 32, "man_cook_tone5": 32, "man_curly_hair": 32, "man_curly_haired_dark_skin_ton": 32, "man_curly_haired_light_skin_ton": 32, "man_curly_haired_medium_dark_skin_ton": 32, "man_curly_haired_medium_light_skin_ton": 32, "man_curly_haired_medium_skin_ton": 32, "man_curly_haired_tone1": 32, "man_curly_haired_tone2": 32, "man_curly_haired_tone3": 32, "man_curly_haired_tone4": 32, "man_curly_haired_tone5": 32, "man_danc": 32, "man_dancing_tone1": 32, "man_dancing_tone2": 32, "man_dancing_tone3": 32, "man_dancing_tone4": 32, "man_dancing_tone5": 32, "man_dark_skin_tone_beard": 32, "man_detect": 32, "man_detective_dark_skin_ton": 32, "man_detective_light_skin_ton": 32, "man_detective_medium_dark_skin_ton": 32, "man_detective_medium_light_skin_ton": 32, "man_detective_medium_skin_ton": 32, "man_detective_tone1": 32, "man_detective_tone2": 32, "man_detective_tone3": 32, "man_detective_tone4": 32, "man_detective_tone5": 32, "man_elf": 32, "man_elf_dark_skin_ton": 32, "man_elf_light_skin_ton": 32, "man_elf_medium_dark_skin_ton": 32, "man_elf_medium_light_skin_ton": 32, "man_elf_medium_skin_ton": 32, "man_elf_tone1": 32, "man_elf_tone2": 32, "man_elf_tone3": 32, "man_elf_tone4": 32, "man_elf_tone5": 32, "man_facepalm": 32, "man_facepalming_dark_skin_ton": 32, "man_facepalming_light_skin_ton": 32, "man_facepalming_medium_dark_skin_ton": 32, "man_facepalming_medium_light_skin_ton": 32, "man_facepalming_medium_skin_ton": 32, "man_facepalming_tone1": 32, "man_facepalming_tone2": 32, "man_facepalming_tone3": 32, "man_facepalming_tone4": 32, "man_facepalming_tone5": 32, "man_factory_work": 32, "man_factory_worker_dark_skin_ton": 32, "man_factory_worker_light_skin_ton": 32, "man_factory_worker_medium_dark_skin_ton": 32, "man_factory_worker_medium_light_skin_ton": 32, "man_factory_worker_medium_skin_ton": 32, "man_factory_worker_tone1": 32, "man_factory_worker_tone2": 32, "man_factory_worker_tone3": 32, "man_factory_worker_tone4": 32, "man_factory_worker_tone5": 32, "man_fairi": 32, "man_fairy_dark_skin_ton": 32, "man_fairy_light_skin_ton": 32, "man_fairy_medium_dark_skin_ton": 32, "man_fairy_medium_light_skin_ton": 32, "man_fairy_medium_skin_ton": 32, "man_fairy_tone1": 32, "man_fairy_tone2": 32, "man_fairy_tone3": 32, "man_fairy_tone4": 32, "man_fairy_tone5": 32, "man_farm": 32, "man_farmer_dark_skin_ton": 32, "man_farmer_light_skin_ton": 32, "man_farmer_medium_dark_skin_ton": 32, "man_farmer_medium_light_skin_ton": 32, "man_farmer_medium_skin_ton": 32, "man_farmer_tone1": 32, "man_farmer_tone2": 32, "man_farmer_tone3": 32, "man_farmer_tone4": 32, "man_farmer_tone5": 32, "man_feeding_babi": 32, "man_feeding_baby_dark_skin_ton": 32, "man_feeding_baby_light_skin_ton": 32, "man_feeding_baby_medium_dark_skin_ton": 32, "man_feeding_baby_medium_light_skin_ton": 32, "man_feeding_baby_medium_skin_ton": 32, "man_feeding_baby_tone1": 32, "man_feeding_baby_tone2": 32, "man_feeding_baby_tone3": 32, "man_feeding_baby_tone4": 32, "man_feeding_baby_tone5": 32, "man_firefight": 32, "man_firefighter_dark_skin_ton": 32, "man_firefighter_light_skin_ton": 32, "man_firefighter_medium_dark_skin_ton": 32, "man_firefighter_medium_light_skin_ton": 32, "man_firefighter_medium_skin_ton": 32, "man_firefighter_tone1": 32, "man_firefighter_tone2": 32, "man_firefighter_tone3": 32, "man_firefighter_tone4": 32, "man_firefighter_tone5": 32, "man_frown": 32, "man_frowning_dark_skin_ton": 32, "man_frowning_light_skin_ton": 32, "man_frowning_medium_dark_skin_ton": 32, "man_frowning_medium_light_skin_ton": 32, "man_frowning_medium_skin_ton": 32, "man_frowning_tone1": 32, "man_frowning_tone2": 32, "man_frowning_tone3": 32, "man_frowning_tone4": 32, "man_frowning_tone5": 32, "man_geni": 32, "man_gesturing_no": 32, "man_gesturing_no_dark_skin_ton": 32, "man_gesturing_no_light_skin_ton": 32, "man_gesturing_no_medium_dark_skin_ton": 32, "man_gesturing_no_medium_light_skin_ton": 32, "man_gesturing_no_medium_skin_ton": 32, "man_gesturing_no_tone1": 32, "man_gesturing_no_tone2": 32, "man_gesturing_no_tone3": 32, "man_gesturing_no_tone4": 32, "man_gesturing_no_tone5": 32, "man_gesturing_ok": 32, "man_gesturing_ok_dark_skin_ton": 32, "man_gesturing_ok_light_skin_ton": 32, "man_gesturing_ok_medium_dark_skin_ton": 32, "man_gesturing_ok_medium_light_skin_ton": 32, "man_gesturing_ok_medium_skin_ton": 32, "man_gesturing_ok_tone1": 32, "man_gesturing_ok_tone2": 32, "man_gesturing_ok_tone3": 32, "man_gesturing_ok_tone4": 32, "man_gesturing_ok_tone5": 32, "man_getting_face_massag": 32, "man_getting_face_massage_dark_skin_ton": 32, "man_getting_face_massage_light_skin_ton": 32, "man_getting_face_massage_medium_dark_skin_ton": 32, "man_getting_face_massage_medium_light_skin_ton": 32, "man_getting_face_massage_medium_skin_ton": 32, "man_getting_face_massage_tone1": 32, "man_getting_face_massage_tone2": 32, "man_getting_face_massage_tone3": 32, "man_getting_face_massage_tone4": 32, "man_getting_face_massage_tone5": 32, "man_getting_haircut": 32, "man_getting_haircut_dark_skin_ton": 32, "man_getting_haircut_light_skin_ton": 32, "man_getting_haircut_medium_dark_skin_ton": 32, "man_getting_haircut_medium_light_skin_ton": 32, "man_getting_haircut_medium_skin_ton": 32, "man_getting_haircut_tone1": 32, "man_getting_haircut_tone2": 32, "man_getting_haircut_tone3": 32, "man_getting_haircut_tone4": 32, "man_getting_haircut_tone5": 32, "man_golf": 32, "man_golfing_dark_skin_ton": 32, "man_golfing_light_skin_ton": 32, "man_golfing_medium_dark_skin_ton": 32, "man_golfing_medium_light_skin_ton": 32, "man_golfing_medium_skin_ton": 32, "man_golfing_tone1": 32, "man_golfing_tone2": 32, "man_golfing_tone3": 32, "man_golfing_tone4": 32, "man_golfing_tone5": 32, "man_guard": 32, "man_guard_dark_skin_ton": 32, "man_guard_light_skin_ton": 32, "man_guard_medium_dark_skin_ton": 32, "man_guard_medium_light_skin_ton": 32, "man_guard_medium_skin_ton": 32, "man_guard_tone1": 32, "man_guard_tone2": 32, "man_guard_tone3": 32, "man_guard_tone4": 32, "man_guard_tone5": 32, "man_health_work": 32, "man_health_worker_dark_skin_ton": 32, "man_health_worker_light_skin_ton": 32, "man_health_worker_medium_dark_skin_ton": 32, "man_health_worker_medium_light_skin_ton": 32, "man_health_worker_medium_skin_ton": 32, "man_health_worker_tone1": 32, "man_health_worker_tone2": 32, "man_health_worker_tone3": 32, "man_health_worker_tone4": 32, "man_health_worker_tone5": 32, "man_in_business_suit_levit": 32, "man_in_business_suit_levitating_dark_skin_ton": 32, "man_in_business_suit_levitating_light_skin_ton": 32, "man_in_business_suit_levitating_medium_dark_skin_ton": 32, "man_in_business_suit_levitating_medium_light_skin_ton": 32, "man_in_business_suit_levitating_medium_skin_ton": 32, "man_in_business_suit_levitating_tone1": 32, "man_in_business_suit_levitating_tone2": 32, "man_in_business_suit_levitating_tone3": 32, "man_in_business_suit_levitating_tone4": 32, "man_in_business_suit_levitating_tone5": 32, "man_in_lotus_posit": 32, "man_in_lotus_position_dark_skin_ton": 32, "man_in_lotus_position_light_skin_ton": 32, "man_in_lotus_position_medium_dark_skin_ton": 32, "man_in_lotus_position_medium_light_skin_ton": 32, "man_in_lotus_position_medium_skin_ton": 32, "man_in_lotus_position_tone1": 32, "man_in_lotus_position_tone2": 32, "man_in_lotus_position_tone3": 32, "man_in_lotus_position_tone4": 32, "man_in_lotus_position_tone5": 32, "man_in_manual_wheelchair": 32, "man_in_manual_wheelchair_dark_skin_ton": 32, "man_in_manual_wheelchair_light_skin_ton": 32, "man_in_manual_wheelchair_medium_dark_skin_ton": 32, "man_in_manual_wheelchair_medium_light_skin_ton": 32, "man_in_manual_wheelchair_medium_skin_ton": 32, "man_in_manual_wheelchair_tone1": 32, "man_in_manual_wheelchair_tone2": 32, "man_in_manual_wheelchair_tone3": 32, "man_in_manual_wheelchair_tone4": 32, "man_in_manual_wheelchair_tone5": 32, "man_in_motorized_wheelchair": 32, "man_in_motorized_wheelchair_dark_skin_ton": 32, "man_in_motorized_wheelchair_light_skin_ton": 32, "man_in_motorized_wheelchair_medium_dark_skin_ton": 32, "man_in_motorized_wheelchair_medium_light_skin_ton": 32, "man_in_motorized_wheelchair_medium_skin_ton": 32, "man_in_motorized_wheelchair_tone1": 32, "man_in_motorized_wheelchair_tone2": 32, "man_in_motorized_wheelchair_tone3": 32, "man_in_motorized_wheelchair_tone4": 32, "man_in_motorized_wheelchair_tone5": 32, "man_in_steamy_room": 32, "man_in_steamy_room_dark_skin_ton": 32, "man_in_steamy_room_light_skin_ton": 32, "man_in_steamy_room_medium_dark_skin_ton": 32, "man_in_steamy_room_medium_light_skin_ton": 32, "man_in_steamy_room_medium_skin_ton": 32, "man_in_steamy_room_tone1": 32, "man_in_steamy_room_tone2": 32, "man_in_steamy_room_tone3": 32, "man_in_steamy_room_tone4": 32, "man_in_steamy_room_tone5": 32, "man_in_tuxedo": 32, "man_in_tuxedo_dark_skin_ton": 32, "man_in_tuxedo_light_skin_ton": 32, "man_in_tuxedo_medium_dark_skin_ton": 32, "man_in_tuxedo_medium_light_skin_ton": 32, "man_in_tuxedo_medium_skin_ton": 32, "man_in_tuxedo_tone1": 32, "man_in_tuxedo_tone2": 32, "man_in_tuxedo_tone3": 32, "man_in_tuxedo_tone4": 32, "man_in_tuxedo_tone5": 32, "man_judg": 32, "man_judge_dark_skin_ton": 32, "man_judge_light_skin_ton": 32, "man_judge_medium_dark_skin_ton": 32, "man_judge_medium_light_skin_ton": 32, "man_judge_medium_skin_ton": 32, "man_judge_tone1": 32, "man_judge_tone2": 32, "man_judge_tone3": 32, "man_judge_tone4": 32, "man_judge_tone5": 32, "man_juggl": 32, "man_juggling_dark_skin_ton": 32, "man_juggling_light_skin_ton": 32, "man_juggling_medium_dark_skin_ton": 32, "man_juggling_medium_light_skin_ton": 32, "man_juggling_medium_skin_ton": 32, "man_juggling_tone1": 32, "man_juggling_tone2": 32, "man_juggling_tone3": 32, "man_juggling_tone4": 32, "man_juggling_tone5": 32, "man_kneel": 32, "man_kneeling_dark_skin_ton": 32, "man_kneeling_light_skin_ton": 32, "man_kneeling_medium_dark_skin_ton": 32, "man_kneeling_medium_light_skin_ton": 32, "man_kneeling_medium_skin_ton": 32, "man_kneeling_tone1": 32, "man_kneeling_tone2": 32, "man_kneeling_tone3": 32, "man_kneeling_tone4": 32, "man_kneeling_tone5": 32, "man_lifting_weight": 32, "man_lifting_weights_dark_skin_ton": 32, "man_lifting_weights_light_skin_ton": 32, "man_lifting_weights_medium_dark_skin_ton": 32, "man_lifting_weights_medium_light_skin_ton": 32, "man_lifting_weights_medium_skin_ton": 32, "man_lifting_weights_tone1": 32, "man_lifting_weights_tone2": 32, "man_lifting_weights_tone3": 32, "man_lifting_weights_tone4": 32, "man_lifting_weights_tone5": 32, "man_light_skin_tone_beard": 32, "man_mag": 32, "man_mage_dark_skin_ton": 32, "man_mage_light_skin_ton": 32, "man_mage_medium_dark_skin_ton": 32, "man_mage_medium_light_skin_ton": 32, "man_mage_medium_skin_ton": 32, "man_mage_tone1": 32, "man_mage_tone2": 32, "man_mage_tone3": 32, "man_mage_tone4": 32, "man_mage_tone5": 32, "man_mechan": 32, "man_mechanic_dark_skin_ton": 32, "man_mechanic_light_skin_ton": 32, "man_mechanic_medium_dark_skin_ton": 32, "man_mechanic_medium_light_skin_ton": 32, "man_mechanic_medium_skin_ton": 32, "man_mechanic_tone1": 32, "man_mechanic_tone2": 32, "man_mechanic_tone3": 32, "man_mechanic_tone4": 32, "man_mechanic_tone5": 32, "man_medium_dark_skin_tone_beard": 32, "man_medium_light_skin_tone_beard": 32, "man_medium_skin_tone_beard": 32, "man_mountain_bik": 32, "man_mountain_biking_dark_skin_ton": 32, "man_mountain_biking_light_skin_ton": 32, "man_mountain_biking_medium_dark_skin_ton": 32, "man_mountain_biking_medium_light_skin_ton": 32, "man_mountain_biking_medium_skin_ton": 32, "man_mountain_biking_tone1": 32, "man_mountain_biking_tone2": 32, "man_mountain_biking_tone3": 32, "man_mountain_biking_tone4": 32, "man_mountain_biking_tone5": 32, "man_office_work": 32, "man_office_worker_dark_skin_ton": 32, "man_office_worker_light_skin_ton": 32, "man_office_worker_medium_dark_skin_ton": 32, "man_office_worker_medium_light_skin_ton": 32, "man_office_worker_medium_skin_ton": 32, "man_office_worker_tone1": 32, "man_office_worker_tone2": 32, "man_office_worker_tone3": 32, "man_office_worker_tone4": 32, "man_office_worker_tone5": 32, "man_pilot": 32, "man_pilot_dark_skin_ton": 32, "man_pilot_light_skin_ton": 32, "man_pilot_medium_dark_skin_ton": 32, "man_pilot_medium_light_skin_ton": 32, "man_pilot_medium_skin_ton": 32, "man_pilot_tone1": 32, "man_pilot_tone2": 32, "man_pilot_tone3": 32, "man_pilot_tone4": 32, "man_pilot_tone5": 32, "man_playing_handbal": 32, "man_playing_handball_dark_skin_ton": 32, "man_playing_handball_light_skin_ton": 32, "man_playing_handball_medium_dark_skin_ton": 32, "man_playing_handball_medium_light_skin_ton": 32, "man_playing_handball_medium_skin_ton": 32, "man_playing_handball_tone1": 32, "man_playing_handball_tone2": 32, "man_playing_handball_tone3": 32, "man_playing_handball_tone4": 32, "man_playing_handball_tone5": 32, "man_playing_water_polo": 32, "man_playing_water_polo_dark_skin_ton": 32, "man_playing_water_polo_light_skin_ton": 32, "man_playing_water_polo_medium_dark_skin_ton": 32, "man_playing_water_polo_medium_light_skin_ton": 32, "man_playing_water_polo_medium_skin_ton": 32, "man_playing_water_polo_tone1": 32, "man_playing_water_polo_tone2": 32, "man_playing_water_polo_tone3": 32, "man_playing_water_polo_tone4": 32, "man_playing_water_polo_tone5": 32, "man_police_offic": 32, "man_police_officer_dark_skin_ton": 32, "man_police_officer_light_skin_ton": 32, "man_police_officer_medium_dark_skin_ton": 32, "man_police_officer_medium_light_skin_ton": 32, "man_police_officer_medium_skin_ton": 32, "man_police_officer_tone1": 32, "man_police_officer_tone2": 32, "man_police_officer_tone3": 32, "man_police_officer_tone4": 32, "man_police_officer_tone5": 32, "man_pout": 32, "man_pouting_dark_skin_ton": 32, "man_pouting_light_skin_ton": 32, "man_pouting_medium_dark_skin_ton": 32, "man_pouting_medium_light_skin_ton": 32, "man_pouting_medium_skin_ton": 32, "man_pouting_tone1": 32, "man_pouting_tone2": 32, "man_pouting_tone3": 32, "man_pouting_tone4": 32, "man_pouting_tone5": 32, "man_raising_hand": 32, "man_raising_hand_dark_skin_ton": 32, "man_raising_hand_light_skin_ton": 32, "man_raising_hand_medium_dark_skin_ton": 32, "man_raising_hand_medium_light_skin_ton": 32, "man_raising_hand_medium_skin_ton": 32, "man_raising_hand_tone1": 32, "man_raising_hand_tone2": 32, "man_raising_hand_tone3": 32, "man_raising_hand_tone4": 32, "man_raising_hand_tone5": 32, "man_red_hair": 32, "man_red_haired_dark_skin_ton": 32, "man_red_haired_light_skin_ton": 32, "man_red_haired_medium_dark_skin_ton": 32, "man_red_haired_medium_light_skin_ton": 32, "man_red_haired_medium_skin_ton": 32, "man_red_haired_tone1": 32, "man_red_haired_tone2": 32, "man_red_haired_tone3": 32, "man_red_haired_tone4": 32, "man_red_haired_tone5": 32, "man_rowing_boat": 32, "man_rowing_boat_dark_skin_ton": 32, "man_rowing_boat_light_skin_ton": 32, "man_rowing_boat_medium_dark_skin_ton": 32, "man_rowing_boat_medium_light_skin_ton": 32, "man_rowing_boat_medium_skin_ton": 32, "man_rowing_boat_tone1": 32, "man_rowing_boat_tone2": 32, "man_rowing_boat_tone3": 32, "man_rowing_boat_tone4": 32, "man_rowing_boat_tone5": 32, "man_run": 32, "man_running_dark_skin_ton": 32, "man_running_light_skin_ton": 32, "man_running_medium_dark_skin_ton": 32, "man_running_medium_light_skin_ton": 32, "man_running_medium_skin_ton": 32, "man_running_tone1": 32, "man_running_tone2": 32, "man_running_tone3": 32, "man_running_tone4": 32, "man_running_tone5": 32, "man_scientist": 32, "man_scientist_dark_skin_ton": 32, "man_scientist_light_skin_ton": 32, "man_scientist_medium_dark_skin_ton": 32, "man_scientist_medium_light_skin_ton": 32, "man_scientist_medium_skin_ton": 32, "man_scientist_tone1": 32, "man_scientist_tone2": 32, "man_scientist_tone3": 32, "man_scientist_tone4": 32, "man_scientist_tone5": 32, "man_shrug": 32, "man_shrugging_dark_skin_ton": 32, "man_shrugging_light_skin_ton": 32, "man_shrugging_medium_dark_skin_ton": 32, "man_shrugging_medium_light_skin_ton": 32, "man_shrugging_medium_skin_ton": 32, "man_shrugging_tone1": 32, "man_shrugging_tone2": 32, "man_shrugging_tone3": 32, "man_shrugging_tone4": 32, "man_shrugging_tone5": 32, "man_sing": 32, "man_singer_dark_skin_ton": 32, "man_singer_light_skin_ton": 32, "man_singer_medium_dark_skin_ton": 32, "man_singer_medium_light_skin_ton": 32, "man_singer_medium_skin_ton": 32, "man_singer_tone1": 32, "man_singer_tone2": 32, "man_singer_tone3": 32, "man_singer_tone4": 32, "man_singer_tone5": 32, "man_stand": 32, "man_standing_dark_skin_ton": 32, "man_standing_light_skin_ton": 32, "man_standing_medium_dark_skin_ton": 32, "man_standing_medium_light_skin_ton": 32, "man_standing_medium_skin_ton": 32, "man_standing_tone1": 32, "man_standing_tone2": 32, "man_standing_tone3": 32, "man_standing_tone4": 32, "man_standing_tone5": 32, "man_stud": 32, "man_student_dark_skin_ton": 32, "man_student_light_skin_ton": 32, "man_student_medium_dark_skin_ton": 32, "man_student_medium_light_skin_ton": 32, "man_student_medium_skin_ton": 32, "man_student_tone1": 32, "man_student_tone2": 32, "man_student_tone3": 32, "man_student_tone4": 32, "man_student_tone5": 32, "man_superhero": 32, "man_superhero_dark_skin_ton": 32, "man_superhero_light_skin_ton": 32, "man_superhero_medium_dark_skin_ton": 32, "man_superhero_medium_light_skin_ton": 32, "man_superhero_medium_skin_ton": 32, "man_superhero_tone1": 32, "man_superhero_tone2": 32, "man_superhero_tone3": 32, "man_superhero_tone4": 32, "man_superhero_tone5": 32, "man_supervillain": 32, "man_supervillain_dark_skin_ton": 32, "man_supervillain_light_skin_ton": 32, "man_supervillain_medium_dark_skin_ton": 32, "man_supervillain_medium_light_skin_ton": 32, "man_supervillain_medium_skin_ton": 32, "man_supervillain_tone1": 32, "man_supervillain_tone2": 32, "man_supervillain_tone3": 32, "man_supervillain_tone4": 32, "man_supervillain_tone5": 32, "man_surf": 32, "man_surfing_dark_skin_ton": 32, "man_surfing_light_skin_ton": 32, "man_surfing_medium_dark_skin_ton": 32, "man_surfing_medium_light_skin_ton": 32, "man_surfing_medium_skin_ton": 32, "man_surfing_tone1": 32, "man_surfing_tone2": 32, "man_surfing_tone3": 32, "man_surfing_tone4": 32, "man_surfing_tone5": 32, "man_swim": 32, "man_swimming_dark_skin_ton": 32, "man_swimming_light_skin_ton": 32, "man_swimming_medium_dark_skin_ton": 32, "man_swimming_medium_light_skin_ton": 32, "man_swimming_medium_skin_ton": 32, "man_swimming_tone1": 32, "man_swimming_tone2": 32, "man_swimming_tone3": 32, "man_swimming_tone4": 32, "man_swimming_tone5": 32, "man_teach": 32, "man_teacher_dark_skin_ton": 32, "man_teacher_light_skin_ton": 32, "man_teacher_medium_dark_skin_ton": 32, "man_teacher_medium_light_skin_ton": 32, "man_teacher_medium_skin_ton": 32, "man_teacher_tone1": 32, "man_teacher_tone2": 32, "man_teacher_tone3": 32, "man_teacher_tone4": 32, "man_teacher_tone5": 32, "man_technologist": 32, "man_technologist_dark_skin_ton": 32, "man_technologist_light_skin_ton": 32, "man_technologist_medium_dark_skin_ton": 32, "man_technologist_medium_light_skin_ton": 32, "man_technologist_medium_skin_ton": 32, "man_technologist_tone1": 32, "man_technologist_tone2": 32, "man_technologist_tone3": 32, "man_technologist_tone4": 32, "man_technologist_tone5": 32, "man_tipping_hand": 32, "man_tipping_hand_dark_skin_ton": 32, "man_tipping_hand_light_skin_ton": 32, "man_tipping_hand_medium_dark_skin_ton": 32, "man_tipping_hand_medium_light_skin_ton": 32, "man_tipping_hand_medium_skin_ton": 32, "man_tipping_hand_tone1": 32, "man_tipping_hand_tone2": 32, "man_tipping_hand_tone3": 32, "man_tipping_hand_tone4": 32, "man_tipping_hand_tone5": 32, "man_tone1": 32, "man_tone1_beard": 32, "man_tone2": 32, "man_tone2_beard": 32, "man_tone3": 32, "man_tone3_beard": 32, "man_tone4": 32, "man_tone4_beard": 32, "man_tone5": 32, "man_tone5_beard": 32, "man_vampir": 32, "man_vampire_dark_skin_ton": 32, "man_vampire_light_skin_ton": 32, "man_vampire_medium_dark_skin_ton": 32, "man_vampire_medium_light_skin_ton": 32, "man_vampire_medium_skin_ton": 32, "man_vampire_tone1": 32, "man_vampire_tone2": 32, "man_vampire_tone3": 32, "man_vampire_tone4": 32, "man_vampire_tone5": 32, "man_walk": 32, "man_walking_dark_skin_ton": 32, "man_walking_light_skin_ton": 32, "man_walking_medium_dark_skin_ton": 32, "man_walking_medium_light_skin_ton": 32, "man_walking_medium_skin_ton": 32, "man_walking_tone1": 32, "man_walking_tone2": 32, "man_walking_tone3": 32, "man_walking_tone4": 32, "man_walking_tone5": 32, "man_wearing_turban": 32, "man_wearing_turban_dark_skin_ton": 32, "man_wearing_turban_light_skin_ton": 32, "man_wearing_turban_medium_dark_skin_ton": 32, "man_wearing_turban_medium_light_skin_ton": 32, "man_wearing_turban_medium_skin_ton": 32, "man_wearing_turban_tone1": 32, "man_wearing_turban_tone2": 32, "man_wearing_turban_tone3": 32, "man_wearing_turban_tone4": 32, "man_wearing_turban_tone5": 32, "man_white_hair": 32, "man_white_haired_dark_skin_ton": 32, "man_white_haired_light_skin_ton": 32, "man_white_haired_medium_dark_skin_ton": 32, "man_white_haired_medium_light_skin_ton": 32, "man_white_haired_medium_skin_ton": 32, "man_white_haired_tone1": 32, "man_white_haired_tone2": 32, "man_white_haired_tone3": 32, "man_white_haired_tone4": 32, "man_white_haired_tone5": 32, "man_with_chinese_cap": 32, "man_with_chinese_cap_tone1": 32, "man_with_chinese_cap_tone2": 32, "man_with_chinese_cap_tone3": 32, "man_with_chinese_cap_tone4": 32, "man_with_chinese_cap_tone5": 32, "man_with_gua_pi_mao": 32, "man_with_gua_pi_mao_tone1": 32, "man_with_gua_pi_mao_tone2": 32, "man_with_gua_pi_mao_tone3": 32, "man_with_gua_pi_mao_tone4": 32, "man_with_gua_pi_mao_tone5": 32, "man_with_probing_can": 32, "man_with_probing_cane_dark_skin_ton": 32, "man_with_probing_cane_light_skin_ton": 32, "man_with_probing_cane_medium_dark_skin_ton": 32, "man_with_probing_cane_medium_light_skin_ton": 32, "man_with_probing_cane_medium_skin_ton": 32, "man_with_probing_cane_tone1": 32, "man_with_probing_cane_tone2": 32, "man_with_probing_cane_tone3": 32, "man_with_probing_cane_tone4": 32, "man_with_probing_cane_tone5": 32, "man_with_turban": 32, "man_with_turban_tone1": 32, "man_with_turban_tone2": 32, "man_with_turban_tone3": 32, "man_with_turban_tone4": 32, "man_with_turban_tone5": 32, "man_with_veil": 32, "man_with_veil_dark_skin_ton": 32, "man_with_veil_light_skin_ton": 32, "man_with_veil_medium_dark_skin_ton": 32, "man_with_veil_medium_light_skin_ton": 32, "man_with_veil_medium_skin_ton": 32, "man_with_veil_tone1": 32, "man_with_veil_tone2": 32, "man_with_veil_tone3": 32, "man_with_veil_tone4": 32, "man_with_veil_tone5": 32, "man_zombi": 32, "mango": 32, "mans_sho": 32, "mantelpiece_clock": 32, "mantlepiece_clock": 32, "manual_wheelchair": 32, "maple_leaf": 32, "marshall_island": 32, "martial_arts_uniform": 32, "martiniqu": 32, "mask": [32, 193, 264, 418, 833, 884, 885, 896, 979, 1008, 1010], "massage_man": 32, "massage_tone1": 32, "massage_tone2": 32, "massage_tone3": 32, "massage_tone4": 32, "massage_tone5": 32, "massage_woman": 32, "mate": [32, 258, 889], "mauritania": 32, "mauritiu": 32, "mayott": 32, "mc": [32, 175, 290, 478], "md": [32, 152, 389, 838], "meat_on_bon": 32, "mechanic_dark_skin_ton": 32, "mechanic_light_skin_ton": 32, "mechanic_medium_dark_skin_ton": 32, "mechanic_medium_light_skin_ton": 32, "mechanic_medium_skin_ton": 32, "mechanic_tone1": 32, "mechanic_tone2": 32, "mechanic_tone3": 32, "mechanic_tone4": 32, "mechanic_tone5": 32, "mechanical_arm": 32, "mechanical_leg": 32, "medal": 32, "medal_militari": 32, "medal_sport": 32, "medical_symbol": 32, "mega": [32, 1032], "melon": 32, "memo": 32, "men_holding_hands_dark_skin_ton": 32, "men_holding_hands_dark_skin_tone_light_skin_ton": 32, "men_holding_hands_dark_skin_tone_medium_dark_skin_ton": 32, "men_holding_hands_dark_skin_tone_medium_light_skin_ton": 32, "men_holding_hands_dark_skin_tone_medium_skin_ton": 32, "men_holding_hands_light_skin_ton": 32, "men_holding_hands_light_skin_tone_dark_skin_ton": 32, "men_holding_hands_light_skin_tone_medium_dark_skin_ton": 32, "men_holding_hands_light_skin_tone_medium_light_skin_ton": 32, "men_holding_hands_light_skin_tone_medium_skin_ton": 32, "men_holding_hands_medium_dark_skin_ton": 32, "men_holding_hands_medium_dark_skin_tone_dark_skin_ton": 32, "men_holding_hands_medium_dark_skin_tone_light_skin_ton": 32, "men_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 32, "men_holding_hands_medium_dark_skin_tone_medium_skin_ton": 32, "men_holding_hands_medium_light_skin_ton": 32, "men_holding_hands_medium_light_skin_tone_dark_skin_ton": 32, "men_holding_hands_medium_light_skin_tone_light_skin_ton": 32, "men_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 32, "men_holding_hands_medium_light_skin_tone_medium_skin_ton": 32, "men_holding_hands_medium_skin_ton": 32, "men_holding_hands_medium_skin_tone_dark_skin_ton": 32, "men_holding_hands_medium_skin_tone_light_skin_ton": 32, "men_holding_hands_medium_skin_tone_medium_dark_skin_ton": 32, "men_holding_hands_medium_skin_tone_medium_light_skin_ton": 32, "men_holding_hands_tone1": 32, "men_holding_hands_tone1_tone2": 32, "men_holding_hands_tone1_tone3": 32, "men_holding_hands_tone1_tone4": 32, "men_holding_hands_tone1_tone5": 32, "men_holding_hands_tone2": 32, "men_holding_hands_tone2_tone1": 32, "men_holding_hands_tone2_tone3": 32, "men_holding_hands_tone2_tone4": 32, "men_holding_hands_tone2_tone5": 32, "men_holding_hands_tone3": 32, "men_holding_hands_tone3_tone1": 32, "men_holding_hands_tone3_tone2": 32, "men_holding_hands_tone3_tone4": 32, "men_holding_hands_tone3_tone5": 32, "men_holding_hands_tone4": 32, "men_holding_hands_tone4_tone1": 32, "men_holding_hands_tone4_tone2": 32, "men_holding_hands_tone4_tone3": 32, "men_holding_hands_tone4_tone5": 32, "men_holding_hands_tone5": 32, "men_holding_hands_tone5_tone1": 32, "men_holding_hands_tone5_tone2": 32, "men_holding_hands_tone5_tone3": 32, "men_holding_hands_tone5_tone4": 32, "men_with_bunny_ears_parti": 32, "men_wrestl": 32, "mending_heart": 32, "menorah": 32, "men": [32, 416, 472, 595], "mermaid": 32, "mermaid_dark_skin_ton": 32, "mermaid_light_skin_ton": 32, "mermaid_medium_dark_skin_ton": 32, "mermaid_medium_light_skin_ton": 32, "mermaid_medium_skin_ton": 32, "mermaid_tone1": 32, "mermaid_tone2": 32, "mermaid_tone3": 32, "mermaid_tone4": 32, "mermaid_tone5": 32, "merman": 32, "merman_dark_skin_ton": 32, "merman_light_skin_ton": 32, "merman_medium_dark_skin_ton": 32, "merman_medium_light_skin_ton": 32, "merman_medium_skin_ton": 32, "merman_tone1": 32, "merman_tone2": 32, "merman_tone3": 32, "merman_tone4": 32, "merman_tone5": 32, "merperson": 32, "merperson_dark_skin_ton": 32, "merperson_light_skin_ton": 32, "merperson_medium_dark_skin_ton": 32, "merperson_medium_light_skin_ton": 32, "merperson_medium_skin_ton": 32, "merperson_tone1": 32, "merperson_tone2": 32, "merperson_tone3": 32, "merperson_tone4": 32, "merperson_tone5": 32, "metal_tone1": 32, "metal_tone2": 32, "metal_tone3": 32, "metal_tone4": 32, "metal_tone5": 32, "metro": 32, "mexico": 32, "mf": [32, 244, 1093], "mg": 32, "mh": 32, "microb": 32, "micronesia": 32, "microphone2": 32, "microphon": [32, 177, 179], "microscop": 32, "middle_finger_tone1": 32, "middle_finger_tone2": 32, "middle_finger_tone3": 32, "middle_finger_tone4": 32, "middle_finger_tone5": 32, "military_helmet": 32, "military_med": 32, "milk": 32, "milk_glass": 32, "milky_wai": 32, "minibu": 32, "minidisc": 32, "mirror": 32, "ml": 32, "mm": [32, 477], "mn": 32, "mo": [32, 586], "mobile_phon": 32, "mobile_phone_off": 32, "moldova": 32, "monaco": 32, "money_mouth": 32, "money_mouth_fac": 32, "money_with_w": 32, "moneybag": 32, "mongolia": 32, "monkei": 32, "monkey_fac": 32, "monorail": 32, "montenegro": 32, "montserrat": 32, "moon": 32, "moon_cak": 32, "morocco": 32, "mortar_board": 32, "mosqu": 32, "mosquito": 32, "mother_christma": 32, "mother_christmas_tone1": 32, "mother_christmas_tone2": 32, "mother_christmas_tone3": 32, "mother_christmas_tone4": 32, "mother_christmas_tone5": 32, "motor_boat": 32, "motor_scoot": 32, "motorbik": 32, "motorboat": 32, "motorcycl": 32, "motorized_wheelchair": 32, "motorwai": 32, "mount_fuji": 32, "mountain": 32, "mountain_bicyclist": 32, "mountain_bicyclist_tone1": 32, "mountain_bicyclist_tone2": 32, "mountain_bicyclist_tone3": 32, "mountain_bicyclist_tone4": 32, "mountain_bicyclist_tone5": 32, "mountain_biking_man": 32, "mountain_biking_woman": 32, "mountain_cablewai": 32, "mountain_railwai": 32, "mountain_snow": 32, "mouse2": 32, "mous": [32, 172, 177, 350, 897, 1073, 1081], "mouse_three_button": 32, "mouse_trap": 32, "movie_camera": 32, "moyai": 32, "mozambiqu": 32, "mp": [32, 38], "mq": [32, 1003, 1004], "mr": [32, 125, 241, 252, 260, 264, 1098], "mrs_clau": 32, "mrs_claus_tone1": 32, "mrs_claus_tone2": 32, "mrs_claus_tone3": 32, "mrs_claus_tone4": 32, "mrs_claus_tone5": 32, "mt": [32, 378, 1007, 1008], "mu": [32, 264], "muscle_tone1": 32, "muscle_tone2": 32, "muscle_tone3": 32, "muscle_tone4": 32, "muscle_tone5": 32, "mushroom": 32, "musical_keyboard": 32, "musical_not": 32, "musical_scor": 32, "mute": 32, "mv": [32, 100, 125, 212, 214, 278, 287, 288, 308, 309, 352, 353, 369, 374, 790, 810, 867, 904, 917, 933, 1195], "mw": 32, "mx": 32, "mx_clau": 32, "mx_claus_dark_skin_ton": 32, "mx_claus_light_skin_ton": 32, "mx_claus_medium_dark_skin_ton": 32, "mx_claus_medium_light_skin_ton": 32, "mx_claus_medium_skin_ton": 32, "mx_claus_tone1": 32, "mx_claus_tone2": 32, "mx_claus_tone3": 32, "mx_claus_tone4": 32, "mx_claus_tone5": 32, "myanmar": 32, "mz": 32, "na": [32, 241, 244, 247, 260, 267, 285, 340], "nail_car": 32, "nail_care_tone1": 32, "nail_care_tone2": 32, "nail_care_tone3": 32, "nail_care_tone4": 32, "nail_care_tone5": 32, "name_badg": 32, "namibia": 32, "national_park": 32, "nauru": 32, "nauseated_fac": 32, "nazar_amulet": 32, "nc": [32, 212, 214, 287, 308, 309, 352, 398, 960], "ne": [32, 596, 614, 616, 975], "neckti": 32, "negative_squared_cross_mark": 32, "nepal": 32, "nerd_fac": 32, "nesting_dol": 32, "netherland": [32, 173, 1060], "neutral_fac": 32, "new_caledonia": 32, "new_moon": 32, "new_moon_with_fac": 32, "new_zealand": 32, "newspaper2": 32, "newspap": [32, 43], "newspaper_rol": 32, "next_track": 32, "next_track_button": 32, "nf": [32, 244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346, 954], "ng": [32, 173, 184, 288, 790, 933, 1012, 1014, 1021, 1022, 1023], "ni": 32, "nicaragua": 32, "niger": 32, "nigeria": 32, "night_with_star": 32, "nine": [32, 153, 192, 205, 215, 223, 241, 252, 340, 369], "ninja_dark_skin_ton": 32, "ninja_light_skin_ton": 32, "ninja_medium_dark_skin_ton": 32, "ninja_medium_light_skin_ton": 32, "ninja_medium_skin_ton": 32, "ninja_tone1": 32, "ninja_tone2": 32, "ninja_tone3": 32, "ninja_tone4": 32, "ninja_tone5": 32, "niue": 32, "nl": [32, 398], "no_bel": 32, "no_bicycl": 32, "no_entri": 32, "no_entry_sign": 32, "no_good": 32, "no_good_man": 32, "no_good_tone1": 32, "no_good_tone2": 32, "no_good_tone3": 32, "no_good_tone4": 32, "no_good_tone5": 32, "no_good_woman": 32, "no_mobile_phon": 32, "no_mouth": 32, "no_pedestrian": 32, "no_smok": 32, "non": [32, 79, 125, 126, 141, 143, 150, 168, 174, 175, 182, 199, 212, 234, 252, 260, 264, 269, 288, 297, 299, 306, 328, 432, 454, 472, 488, 491, 542, 585, 587, 594, 596, 599, 607, 611, 612, 651, 666, 701, 707, 748, 752, 753, 768, 775, 789, 790, 823, 829, 842, 853, 874, 877, 879, 919, 944, 945, 953, 971, 986, 990, 997, 1005, 1030, 1034, 1046, 1047, 1070, 1083, 1104, 1121, 1157, 1158, 1163, 1177, 1192], "potable_wat": 32, "norfolk_island": 32, "north_korea": 32, "northern_mariana_island": 32, "norwai": 32, "nose": 32, "nose_tone1": 32, "nose_tone2": 32, "nose_tone3": 32, "nose_tone4": 32, "nose_tone5": 32, "notebook_with_decorative_cov": 32, "notepad_spir": 32, "np": [32, 195, 222, 290, 324, 478, 1139, 1158], "nr": [32, 220, 264, 796], "nu": 32, "nut_and_bolt": 32, "nz": 32, "o2": [32, 466], "ocean": 32, "octagonal_sign": 32, "octopu": 32, "oden": 32, "office_work": 32, "office_worker_dark_skin_ton": 32, "office_worker_light_skin_ton": 32, "office_worker_medium_dark_skin_ton": 32, "office_worker_medium_light_skin_ton": 32, "office_worker_medium_skin_ton": 32, "office_worker_tone1": 32, "office_worker_tone2": 32, "office_worker_tone3": 32, "office_worker_tone4": 32, "office_worker_tone5": 32, "oil": 32, "oil_drum": 32, "ok": [32, 53, 131, 171, 173, 174, 178, 187, 204, 220, 250, 290, 365, 406, 442, 460, 462, 492, 501, 551, 552, 553, 598, 606, 609, 614, 619, 629, 681, 688, 699, 707, 722, 741, 744, 753, 754, 770, 851, 942, 969, 987, 1014, 1025, 1043, 1046, 1059, 1176], "ok_hand_tone1": 32, "ok_hand_tone2": 32, "ok_hand_tone3": 32, "ok_hand_tone4": 32, "ok_hand_tone5": 32, "ok_man": 32, "ok_woman": 32, "ok_woman_tone1": 32, "ok_woman_tone2": 32, "ok_woman_tone3": 32, "ok_woman_tone4": 32, "ok_woman_tone5": 32, "old_kei": 32, "older_adult": 32, "older_adult_dark_skin_ton": 32, "older_adult_light_skin_ton": 32, "older_adult_medium_dark_skin_ton": 32, "older_adult_medium_light_skin_ton": 32, "older_adult_medium_skin_ton": 32, "older_adult_tone1": 32, "older_adult_tone2": 32, "older_adult_tone3": 32, "older_adult_tone4": 32, "older_adult_tone5": 32, "older_man": 32, "older_man_tone1": 32, "older_man_tone2": 32, "older_man_tone3": 32, "older_man_tone4": 32, "older_man_tone5": 32, "older_woman": 32, "older_woman_tone1": 32, "older_woman_tone2": 32, "older_woman_tone3": 32, "older_woman_tone4": 32, "older_woman_tone5": 32, "oliv": [32, 236], "om": [32, 732], "om_symbol": 32, "oman": 32, "oncoming_automobil": 32, "oncoming_bu": 32, "oncoming_police_car": 32, "oncoming_taxi": 32, "one_piece_swimsuit": 32, "onion": 32, "open_file_fold": 32, "open_hand": 32, "open_hands_tone1": 32, "open_hands_tone2": 32, "open_hands_tone3": 32, "open_hands_tone4": 32, "open_hands_tone5": 32, "open_mouth": 32, "open_umbrella": 32, "ophiuchu": 32, "orange_book": 32, "orange_circl": 32, "orange_heart": 32, "orange_squar": 32, "orangutan": 32, "orthodox_cross": 32, "otter": 32, "outbox_trai": 32, "owl": 32, "ox": 32, "oyster": 32, "pa": [32, 241, 247, 257, 260, 442, 626, 628, 629], "paella": 32, "page_facing_up": 32, "page_with_curl": 32, "pager": [32, 929], "paintbrush": 32, "pakistan": 32, "palau": 32, "palestinian_territori": 32, "palm_tre": 32, "palms_up_togeth": 32, "palms_up_together_dark_skin_ton": 32, "palms_up_together_light_skin_ton": 32, "palms_up_together_medium_dark_skin_ton": 32, "palms_up_together_medium_light_skin_ton": 32, "palms_up_together_medium_skin_ton": 32, "palms_up_together_tone1": 32, "palms_up_together_tone2": 32, "palms_up_together_tone3": 32, "palms_up_together_tone4": 32, "palms_up_together_tone5": 32, "panama": 32, "pancak": 32, "panda_fac": 32, "paperclip": 32, "papua_new_guinea": 32, "parachut": 32, "paraguai": 32, "parasol_on_ground": 32, "park": 32, "parrot": 32, "part_alternation_mark": 32, "partly_sunni": 32, "partying_fac": 32, "passenger_ship": 32, "passport_control": 32, "pause_button": 32, "paw_print": 32, "pe": 32, "peac": 32, "peace_symbol": 32, "peach": 32, "peacock": 32, "peanut": 32, "pear": 32, "pen": 32, "pen_ballpoint": 32, "pen_fountain": 32, "pencil2": 32, "pencil": 32, "pensiv": 32, "people_holding_hand": 32, "people_holding_hands_dark_skin_ton": 32, "people_holding_hands_dark_skin_tone_light_skin_ton": 32, "people_holding_hands_dark_skin_tone_medium_dark_skin_ton": 32, "people_holding_hands_dark_skin_tone_medium_light_skin_ton": 32, "people_holding_hands_dark_skin_tone_medium_skin_ton": 32, "people_holding_hands_light_skin_ton": 32, "people_holding_hands_light_skin_tone_dark_skin_ton": 32, "people_holding_hands_light_skin_tone_medium_dark_skin_ton": 32, "people_holding_hands_light_skin_tone_medium_light_skin_ton": 32, "people_holding_hands_light_skin_tone_medium_skin_ton": 32, "people_holding_hands_medium_dark_skin_ton": 32, "people_holding_hands_medium_dark_skin_tone_dark_skin_ton": 32, "people_holding_hands_medium_dark_skin_tone_light_skin_ton": 32, "people_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 32, "people_holding_hands_medium_dark_skin_tone_medium_skin_ton": 32, "people_holding_hands_medium_light_skin_ton": 32, "people_holding_hands_medium_light_skin_tone_dark_skin_ton": 32, "people_holding_hands_medium_light_skin_tone_light_skin_ton": 32, "people_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 32, "people_holding_hands_medium_light_skin_tone_medium_skin_ton": 32, "people_holding_hands_medium_skin_ton": 32, "people_holding_hands_medium_skin_tone_dark_skin_ton": 32, "people_holding_hands_medium_skin_tone_light_skin_ton": 32, "people_holding_hands_medium_skin_tone_medium_dark_skin_ton": 32, "people_holding_hands_medium_skin_tone_medium_light_skin_ton": 32, "people_holding_hands_tone1": 32, "people_holding_hands_tone1_tone2": 32, "people_holding_hands_tone1_tone3": 32, "people_holding_hands_tone1_tone4": 32, "people_holding_hands_tone1_tone5": 32, "people_holding_hands_tone2": 32, "people_holding_hands_tone2_tone1": 32, "people_holding_hands_tone2_tone3": 32, "people_holding_hands_tone2_tone4": 32, "people_holding_hands_tone2_tone5": 32, "people_holding_hands_tone3": 32, "people_holding_hands_tone3_tone1": 32, "people_holding_hands_tone3_tone2": 32, "people_holding_hands_tone3_tone4": 32, "people_holding_hands_tone3_tone5": 32, "people_holding_hands_tone4": 32, "people_holding_hands_tone4_tone1": 32, "people_holding_hands_tone4_tone2": 32, "people_holding_hands_tone4_tone3": 32, "people_holding_hands_tone4_tone5": 32, "people_holding_hands_tone5": 32, "people_holding_hands_tone5_tone1": 32, "people_holding_hands_tone5_tone2": 32, "people_holding_hands_tone5_tone3": 32, "people_holding_hands_tone5_tone4": 32, "people_hug": 32, "people_with_bunny_ears_parti": 32, "people_wrestl": 32, "performing_art": 32, "persever": 32, "person_bald": 32, "person_bik": 32, "person_biking_tone1": 32, "person_biking_tone2": 32, "person_biking_tone3": 32, "person_biking_tone4": 32, "person_biking_tone5": 32, "person_bouncing_bal": 32, "person_bouncing_ball_tone1": 32, "person_bouncing_ball_tone2": 32, "person_bouncing_ball_tone3": 32, "person_bouncing_ball_tone4": 32, "person_bouncing_ball_tone5": 32, "person_bow": 32, "person_bowing_tone1": 32, "person_bowing_tone2": 32, "person_bowing_tone3": 32, "person_bowing_tone4": 32, "person_bowing_tone5": 32, "person_climb": 32, "person_climbing_dark_skin_ton": 32, "person_climbing_light_skin_ton": 32, "person_climbing_medium_dark_skin_ton": 32, "person_climbing_medium_light_skin_ton": 32, "person_climbing_medium_skin_ton": 32, "person_climbing_tone1": 32, "person_climbing_tone2": 32, "person_climbing_tone3": 32, "person_climbing_tone4": 32, "person_climbing_tone5": 32, "person_curly_hair": 32, "person_dark_skin_tone_bald": 32, "person_dark_skin_tone_curly_hair": 32, "person_dark_skin_tone_red_hair": 32, "person_dark_skin_tone_white_hair": 32, "person_doing_cartwheel": 32, "person_doing_cartwheel_tone1": 32, "person_doing_cartwheel_tone2": 32, "person_doing_cartwheel_tone3": 32, "person_doing_cartwheel_tone4": 32, "person_doing_cartwheel_tone5": 32, "person_facepalm": 32, "person_facepalming_tone1": 32, "person_facepalming_tone2": 32, "person_facepalming_tone3": 32, "person_facepalming_tone4": 32, "person_facepalming_tone5": 32, "person_feeding_babi": 32, "person_feeding_baby_dark_skin_ton": 32, "person_feeding_baby_light_skin_ton": 32, "person_feeding_baby_medium_dark_skin_ton": 32, "person_feeding_baby_medium_light_skin_ton": 32, "person_feeding_baby_medium_skin_ton": 32, "person_feeding_baby_tone1": 32, "person_feeding_baby_tone2": 32, "person_feeding_baby_tone3": 32, "person_feeding_baby_tone4": 32, "person_feeding_baby_tone5": 32, "person_fenc": 32, "person_frown": 32, "person_frowning_tone1": 32, "person_frowning_tone2": 32, "person_frowning_tone3": 32, "person_frowning_tone4": 32, "person_frowning_tone5": 32, "person_gesturing_no": 32, "person_gesturing_no_tone1": 32, "person_gesturing_no_tone2": 32, "person_gesturing_no_tone3": 32, "person_gesturing_no_tone4": 32, "person_gesturing_no_tone5": 32, "person_gesturing_ok": 32, "person_gesturing_ok_tone1": 32, "person_gesturing_ok_tone2": 32, "person_gesturing_ok_tone3": 32, "person_gesturing_ok_tone4": 32, "person_gesturing_ok_tone5": 32, "person_getting_haircut": 32, "person_getting_haircut_tone1": 32, "person_getting_haircut_tone2": 32, "person_getting_haircut_tone3": 32, "person_getting_haircut_tone4": 32, "person_getting_haircut_tone5": 32, "person_getting_massag": 32, "person_getting_massage_tone1": 32, "person_getting_massage_tone2": 32, "person_getting_massage_tone3": 32, "person_getting_massage_tone4": 32, "person_getting_massage_tone5": 32, "person_golf": 32, "person_golfing_dark_skin_ton": 32, "person_golfing_light_skin_ton": 32, "person_golfing_medium_dark_skin_ton": 32, "person_golfing_medium_light_skin_ton": 32, "person_golfing_medium_skin_ton": 32, "person_golfing_tone1": 32, "person_golfing_tone2": 32, "person_golfing_tone3": 32, "person_golfing_tone4": 32, "person_golfing_tone5": 32, "person_in_bed_dark_skin_ton": 32, "person_in_bed_light_skin_ton": 32, "person_in_bed_medium_dark_skin_ton": 32, "person_in_bed_medium_light_skin_ton": 32, "person_in_bed_medium_skin_ton": 32, "person_in_bed_tone1": 32, "person_in_bed_tone2": 32, "person_in_bed_tone3": 32, "person_in_bed_tone4": 32, "person_in_bed_tone5": 32, "person_in_lotus_posit": 32, "person_in_lotus_position_dark_skin_ton": 32, "person_in_lotus_position_light_skin_ton": 32, "person_in_lotus_position_medium_dark_skin_ton": 32, "person_in_lotus_position_medium_light_skin_ton": 32, "person_in_lotus_position_medium_skin_ton": 32, "person_in_lotus_position_tone1": 32, "person_in_lotus_position_tone2": 32, "person_in_lotus_position_tone3": 32, "person_in_lotus_position_tone4": 32, "person_in_lotus_position_tone5": 32, "person_in_manual_wheelchair": 32, "person_in_manual_wheelchair_dark_skin_ton": 32, "person_in_manual_wheelchair_light_skin_ton": 32, "person_in_manual_wheelchair_medium_dark_skin_ton": 32, "person_in_manual_wheelchair_medium_light_skin_ton": 32, "person_in_manual_wheelchair_medium_skin_ton": 32, "person_in_manual_wheelchair_tone1": 32, "person_in_manual_wheelchair_tone2": 32, "person_in_manual_wheelchair_tone3": 32, "person_in_manual_wheelchair_tone4": 32, "person_in_manual_wheelchair_tone5": 32, "person_in_motorized_wheelchair": 32, "person_in_motorized_wheelchair_dark_skin_ton": 32, "person_in_motorized_wheelchair_light_skin_ton": 32, "person_in_motorized_wheelchair_medium_dark_skin_ton": 32, "person_in_motorized_wheelchair_medium_light_skin_ton": 32, "person_in_motorized_wheelchair_medium_skin_ton": 32, "person_in_motorized_wheelchair_tone1": 32, "person_in_motorized_wheelchair_tone2": 32, "person_in_motorized_wheelchair_tone3": 32, "person_in_motorized_wheelchair_tone4": 32, "person_in_motorized_wheelchair_tone5": 32, "person_in_steamy_room": 32, "person_in_steamy_room_dark_skin_ton": 32, "person_in_steamy_room_light_skin_ton": 32, "person_in_steamy_room_medium_dark_skin_ton": 32, "person_in_steamy_room_medium_light_skin_ton": 32, "person_in_steamy_room_medium_skin_ton": 32, "person_in_steamy_room_tone1": 32, "person_in_steamy_room_tone2": 32, "person_in_steamy_room_tone3": 32, "person_in_steamy_room_tone4": 32, "person_in_steamy_room_tone5": 32, "person_in_tuxedo": 32, "person_in_tuxedo_tone1": 32, "person_in_tuxedo_tone2": 32, "person_in_tuxedo_tone3": 32, "person_in_tuxedo_tone4": 32, "person_in_tuxedo_tone5": 32, "person_juggl": 32, "person_juggling_tone1": 32, "person_juggling_tone2": 32, "person_juggling_tone3": 32, "person_juggling_tone4": 32, "person_juggling_tone5": 32, "person_kneel": 32, "person_kneeling_dark_skin_ton": 32, "person_kneeling_light_skin_ton": 32, "person_kneeling_medium_dark_skin_ton": 32, "person_kneeling_medium_light_skin_ton": 32, "person_kneeling_medium_skin_ton": 32, "person_kneeling_tone1": 32, "person_kneeling_tone2": 32, "person_kneeling_tone3": 32, "person_kneeling_tone4": 32, "person_kneeling_tone5": 32, "person_lifting_weight": 32, "person_lifting_weights_tone1": 32, "person_lifting_weights_tone2": 32, "person_lifting_weights_tone3": 32, "person_lifting_weights_tone4": 32, "person_lifting_weights_tone5": 32, "person_light_skin_tone_bald": 32, "person_light_skin_tone_curly_hair": 32, "person_light_skin_tone_red_hair": 32, "person_light_skin_tone_white_hair": 32, "person_medium_dark_skin_tone_bald": 32, "person_medium_dark_skin_tone_curly_hair": 32, "person_medium_dark_skin_tone_red_hair": 32, "person_medium_dark_skin_tone_white_hair": 32, "person_medium_light_skin_tone_bald": 32, "person_medium_light_skin_tone_curly_hair": 32, "person_medium_light_skin_tone_red_hair": 32, "person_medium_light_skin_tone_white_hair": 32, "person_medium_skin_tone_bald": 32, "person_medium_skin_tone_curly_hair": 32, "person_medium_skin_tone_red_hair": 32, "person_medium_skin_tone_white_hair": 32, "person_mountain_bik": 32, "person_mountain_biking_tone1": 32, "person_mountain_biking_tone2": 32, "person_mountain_biking_tone3": 32, "person_mountain_biking_tone4": 32, "person_mountain_biking_tone5": 32, "person_playing_handbal": 32, "person_playing_handball_tone1": 32, "person_playing_handball_tone2": 32, "person_playing_handball_tone3": 32, "person_playing_handball_tone4": 32, "person_playing_handball_tone5": 32, "person_playing_water_polo": 32, "person_playing_water_polo_tone1": 32, "person_playing_water_polo_tone2": 32, "person_playing_water_polo_tone3": 32, "person_playing_water_polo_tone4": 32, "person_playing_water_polo_tone5": 32, "person_pout": 32, "person_pouting_tone1": 32, "person_pouting_tone2": 32, "person_pouting_tone3": 32, "person_pouting_tone4": 32, "person_pouting_tone5": 32, "person_raising_hand": 32, "person_raising_hand_tone1": 32, "person_raising_hand_tone2": 32, "person_raising_hand_tone3": 32, "person_raising_hand_tone4": 32, "person_raising_hand_tone5": 32, "person_red_hair": 32, "person_rowing_boat": 32, "person_rowing_boat_tone1": 32, "person_rowing_boat_tone2": 32, "person_rowing_boat_tone3": 32, "person_rowing_boat_tone4": 32, "person_rowing_boat_tone5": 32, "person_run": 32, "person_running_tone1": 32, "person_running_tone2": 32, "person_running_tone3": 32, "person_running_tone4": 32, "person_running_tone5": 32, "person_shrug": 32, "person_shrugging_tone1": 32, "person_shrugging_tone2": 32, "person_shrugging_tone3": 32, "person_shrugging_tone4": 32, "person_shrugging_tone5": 32, "person_stand": 32, "person_standing_dark_skin_ton": 32, "person_standing_light_skin_ton": 32, "person_standing_medium_dark_skin_ton": 32, "person_standing_medium_light_skin_ton": 32, "person_standing_medium_skin_ton": 32, "person_standing_tone1": 32, "person_standing_tone2": 32, "person_standing_tone3": 32, "person_standing_tone4": 32, "person_standing_tone5": 32, "person_surf": 32, "person_surfing_tone1": 32, "person_surfing_tone2": 32, "person_surfing_tone3": 32, "person_surfing_tone4": 32, "person_surfing_tone5": 32, "person_swim": 32, "person_swimming_tone1": 32, "person_swimming_tone2": 32, "person_swimming_tone3": 32, "person_swimming_tone4": 32, "person_swimming_tone5": 32, "person_tipping_hand": 32, "person_tipping_hand_tone1": 32, "person_tipping_hand_tone2": 32, "person_tipping_hand_tone3": 32, "person_tipping_hand_tone4": 32, "person_tipping_hand_tone5": 32, "person_tone1_bald": 32, "person_tone1_curly_hair": 32, "person_tone1_red_hair": 32, "person_tone1_white_hair": 32, "person_tone2_bald": 32, "person_tone2_curly_hair": 32, "person_tone2_red_hair": 32, "person_tone2_white_hair": 32, "person_tone3_bald": 32, "person_tone3_curly_hair": 32, "person_tone3_red_hair": 32, "person_tone3_white_hair": 32, "person_tone4_bald": 32, "person_tone4_curly_hair": 32, "person_tone4_red_hair": 32, "person_tone4_white_hair": 32, "person_tone5_bald": 32, "person_tone5_curly_hair": 32, "person_tone5_red_hair": 32, "person_tone5_white_hair": 32, "person_walk": 32, "person_walking_tone1": 32, "person_walking_tone2": 32, "person_walking_tone3": 32, "person_walking_tone4": 32, "person_walking_tone5": 32, "person_wearing_turban": 32, "person_wearing_turban_tone1": 32, "person_wearing_turban_tone2": 32, "person_wearing_turban_tone3": 32, "person_wearing_turban_tone4": 32, "person_wearing_turban_tone5": 32, "person_white_hair": 32, "person_with_bal": 32, "person_with_ball_tone1": 32, "person_with_ball_tone2": 32, "person_with_ball_tone3": 32, "person_with_ball_tone4": 32, "person_with_ball_tone5": 32, "person_with_blond_hair": 32, "person_with_blond_hair_tone1": 32, "person_with_blond_hair_tone2": 32, "person_with_blond_hair_tone3": 32, "person_with_blond_hair_tone4": 32, "person_with_blond_hair_tone5": 32, "person_with_pouting_fac": 32, "person_with_pouting_face_tone1": 32, "person_with_pouting_face_tone2": 32, "person_with_pouting_face_tone3": 32, "person_with_pouting_face_tone4": 32, "person_with_pouting_face_tone5": 32, "person_with_probing_can": 32, "person_with_probing_cane_dark_skin_ton": 32, "person_with_probing_cane_light_skin_ton": 32, "person_with_probing_cane_medium_dark_skin_ton": 32, "person_with_probing_cane_medium_light_skin_ton": 32, "person_with_probing_cane_medium_skin_ton": 32, "person_with_probing_cane_tone1": 32, "person_with_probing_cane_tone2": 32, "person_with_probing_cane_tone3": 32, "person_with_probing_cane_tone4": 32, "person_with_probing_cane_tone5": 32, "person_with_veil": 32, "person_with_veil_tone1": 32, "person_with_veil_tone2": 32, "person_with_veil_tone3": 32, "person_with_veil_tone4": 32, "person_with_veil_tone5": 32, "peru": 32, "petri_dish": 32, "pf": [32, 175, 770], "pg": [32, 470], "ph": 32, "philippin": 32, "phone": 32, "pick": [32, 79, 165, 175, 182, 233, 480, 553, 993, 1023, 1028], "pickup_truck": 32, "pie": 32, "pig2": 32, "pig_nos": 32, "pill": 32, "pilot": 32, "pilot_dark_skin_ton": 32, "pilot_light_skin_ton": 32, "pilot_medium_dark_skin_ton": 32, "pilot_medium_light_skin_ton": 32, "pilot_medium_skin_ton": 32, "pilot_tone1": 32, "pilot_tone2": 32, "pilot_tone3": 32, "pilot_tone4": 32, "pilot_tone5": 32, "pinched_fing": 32, "pinched_fingers_dark_skin_ton": 32, "pinched_fingers_light_skin_ton": 32, "pinched_fingers_medium_dark_skin_ton": 32, "pinched_fingers_medium_light_skin_ton": 32, "pinched_fingers_medium_skin_ton": 32, "pinched_fingers_tone1": 32, "pinched_fingers_tone2": 32, "pinched_fingers_tone3": 32, "pinched_fingers_tone4": 32, "pinched_fingers_tone5": 32, "pinching_hand": 32, "pinching_hand_dark_skin_ton": 32, "pinching_hand_light_skin_ton": 32, "pinching_hand_medium_dark_skin_ton": 32, "pinching_hand_medium_light_skin_ton": 32, "pinching_hand_medium_skin_ton": 32, "pinching_hand_tone1": 32, "pinching_hand_tone2": 32, "pinching_hand_tone3": 32, "pinching_hand_tone4": 32, "pinching_hand_tone5": 32, "pineappl": [32, 296], "ping_pong": 32, "pirate_flag": 32, "pisc": 32, "pitcairn_island": 32, "pizza": 32, "pi\u00f1ata": 32, "pk": 32, "pl": 32, "placard": 32, "place_of_worship": 32, "plate_with_cutleri": 32, "play_or_pause_button": 32, "play_paus": 32, "pleading_fac": 32, "plunger": 32, "pm": [32, 38, 340], "pn": 32, "point_down": 32, "point_down_tone1": 32, "point_down_tone2": 32, "point_down_tone3": 32, "point_down_tone4": 32, "point_down_tone5": 32, "point_left": 32, "point_left_tone1": 32, "point_left_tone2": 32, "point_left_tone3": 32, "point_left_tone4": 32, "point_left_tone5": 32, "point_right": 32, "point_right_tone1": 32, "point_right_tone2": 32, "point_right_tone3": 32, "point_right_tone4": 32, "point_right_tone5": 32, "point_up_2": 32, "point_up_2_tone1": 32, "point_up_2_tone2": 32, "point_up_2_tone3": 32, "point_up_2_tone4": 32, "point_up_2_tone5": 32, "point_up_tone1": 32, "point_up_tone2": 32, "point_up_tone3": 32, "point_up_tone4": 32, "point_up_tone5": 32, "poland": 32, "polar_bear": 32, "police_car": 32, "police_offic": 32, "police_officer_tone1": 32, "police_officer_tone2": 32, "police_officer_tone3": 32, "police_officer_tone4": 32, "police_officer_tone5": 32, "policeman": 32, "policewoman": 32, "poo": 32, "poodl": 32, "poop": 32, "popcorn": 32, "portug": 32, "post_offic": 32, "postal_horn": 32, "postbox": 32, "potato": 32, "potted_pl": 32, "pouch": 32, "poultry_leg": 32, "pound": [32, 36], "pound_symbol": 32, "pouting_cat": 32, "pouting_man": 32, "pouting_woman": 32, "pr": [32, 35, 260, 275], "prai": 32, "pray_tone1": 32, "pray_tone2": 32, "pray_tone3": 32, "pray_tone4": 32, "pray_tone5": 32, "prayer_bead": 32, "pregnant_woman": 32, "pregnant_woman_tone1": 32, "pregnant_woman_tone2": 32, "pregnant_woman_tone3": 32, "pregnant_woman_tone4": 32, "pregnant_woman_tone5": 32, "pretzel": 32, "previous_track": 32, "previous_track_button": 32, "princ": 32, "prince_tone1": 32, "prince_tone2": 32, "prince_tone3": 32, "prince_tone4": 32, "prince_tone5": 32, "princess": 32, "princess_tone1": 32, "princess_tone2": 32, "princess_tone3": 32, "princess_tone4": 32, "princess_tone5": 32, "printer": 32, "probing_can": 32, "projector": 32, "p": [32, 38, 62, 115, 118, 125, 143, 147, 168, 172, 173, 177, 178, 184, 200, 212, 214, 215, 231, 244, 260, 264, 290, 292, 350, 402, 436, 442, 445, 446, 449, 450, 454, 525, 550, 551, 553, 554, 596, 598, 601, 606, 607, 608, 609, 610, 612, 614, 615, 629, 637, 697, 700, 701, 704, 706, 709, 718, 719, 720, 722, 724, 725, 728, 729, 730, 736, 738, 739, 748, 752, 757, 768, 785, 788, 801, 837, 856, 864, 865, 874, 897, 899, 916, 919, 926, 936, 944, 953, 960, 971, 980, 995, 1008, 1023, 1030, 1032, 1093, 1171, 1195], "pt": [32, 756, 868, 995], "pud": 32, "puerto_rico": 32, "punch": 32, "punch_tone1": 32, "punch_tone2": 32, "punch_tone3": 32, "punch_tone4": 32, "punch_tone5": 32, "purple_circl": 32, "purple_heart": 32, "purple_squar": 32, "purs": 32, "pushpin": 32, "put_litter_in_its_plac": 32, "pw": 32, "qa": 32, "qatar": 32, "rabbit2": 32, "rabbit": 32, "raccoon": 32, "race_car": 32, "racehors": 32, "racing_car": 32, "racing_motorcycl": 32, "radio": 32, "radio_button": 32, "radioact": 32, "radioactive_sign": 32, "rage": 32, "railroad_track": 32, "railway_car": 32, "railway_track": 32, "rainbow": 32, "rainbow_flag": 32, "raised_back_of_hand": 32, "raised_back_of_hand_tone1": 32, "raised_back_of_hand_tone2": 32, "raised_back_of_hand_tone3": 32, "raised_back_of_hand_tone4": 32, "raised_back_of_hand_tone5": 32, "raised_hand": 32, "raised_hand_tone1": 32, "raised_hand_tone2": 32, "raised_hand_tone3": 32, "raised_hand_tone4": 32, "raised_hand_tone5": 32, "raised_hand_with_fingers_splai": 32, "raised_hand_with_fingers_splayed_tone1": 32, "raised_hand_with_fingers_splayed_tone2": 32, "raised_hand_with_fingers_splayed_tone3": 32, "raised_hand_with_fingers_splayed_tone4": 32, "raised_hand_with_fingers_splayed_tone5": 32, "raised_hand_with_part_between_middle_and_ring_fing": 32, "raised_hand_with_part_between_middle_and_ring_fingers_tone1": 32, "raised_hand_with_part_between_middle_and_ring_fingers_tone2": 32, "raised_hand_with_part_between_middle_and_ring_fingers_tone3": 32, "raised_hand_with_part_between_middle_and_ring_fingers_tone4": 32, "raised_hand_with_part_between_middle_and_ring_fingers_tone5": 32, "raised_hands_tone1": 32, "raised_hands_tone2": 32, "raised_hands_tone3": 32, "raised_hands_tone4": 32, "raised_hands_tone5": 32, "raising_hand": 32, "raising_hand_man": 32, "raising_hand_tone1": 32, "raising_hand_tone2": 32, "raising_hand_tone3": 32, "raising_hand_tone4": 32, "raising_hand_tone5": 32, "raising_hand_woman": 32, "ram": [32, 174, 175, 179, 297, 837, 873, 875, 959], "ramen": 32, "rat": 32, "razor": 32, "re": [32, 38, 62, 123, 130, 132, 174, 179, 211, 220, 223, 224, 234, 237, 244, 245, 247, 252, 254, 260, 264, 270, 272, 273, 282, 285, 289, 305, 306, 312, 334, 340, 346, 369, 374, 432, 478, 479, 488, 496, 521, 551, 598, 604, 722, 744, 806, 842, 851, 856, 898, 987, 1008, 1023, 1027, 1032, 1037, 1056, 1079, 1131, 1136, 1158], "receipt": 32, "record_button": 32, "recycl": 32, "red_car": 32, "red_circl": 32, "red_envelop": 32, "red_hair": 32, "red_squar": 32, "regional_indicator_a": 32, "regional_indicator_b": 32, "regional_indicator_c": 32, "regional_indicator_d": 32, "regional_indicator_": 32, "regional_indicator_f": 32, "regional_indicator_g": 32, "regional_indicator_h": 32, "regional_indicator_i": 32, "regional_indicator_j": 32, "regional_indicator_k": 32, "regional_indicator_l": 32, "regional_indicator_m": 32, "regional_indicator_n": 32, "regional_indicator_o": 32, "regional_indicator_p": 32, "regional_indicator_q": 32, "regional_indicator_r": 32, "regional_indicator_t": 32, "regional_indicator_u": 32, "regional_indicator_v": 32, "regional_indicator_w": 32, "regional_indicator_x": 32, "regional_indicator_z": 32, "regist": [32, 36, 38, 172, 182, 190, 215, 219, 247, 260, 306, 355, 418, 452, 503, 531, 552, 554, 561, 793, 800, 808, 815, 821, 833, 924, 941, 957, 961, 1062, 1152], "relax": 32, "reliev": [32, 57], "reminder_ribbon": 32, "repeat": [32, 43, 101, 125, 143, 162, 178, 233, 288, 353, 376, 466, 478, 614, 790, 837, 867, 897, 901, 905, 908, 911, 916, 917, 933, 946, 973, 1070], "repeat_on": 32, "rescue_worker_helmet": 32, "restroom": 32, "reunion": 32, "reversed_hand_with_middle_finger_extend": 32, "reversed_hand_with_middle_finger_extended_tone1": 32, "reversed_hand_with_middle_finger_extended_tone2": 32, "reversed_hand_with_middle_finger_extended_tone3": 32, "reversed_hand_with_middle_finger_extended_tone4": 32, "reversed_hand_with_middle_finger_extended_tone5": 32, "revolving_heart": 32, "rewind": [32, 361, 744], "rhino": 32, "rhinocero": 32, "ribbon": 32, "rice": 32, "rice_bal": 32, "rice_crack": 32, "rice_scen": 32, "right_anger_bubbl": 32, "right_facing_fist": 32, "right_facing_fist_tone1": 32, "right_facing_fist_tone2": 32, "right_facing_fist_tone3": 32, "right_facing_fist_tone4": 32, "right_facing_fist_tone5": 32, "right_fist": 32, "right_fist_tone1": 32, "right_fist_tone2": 32, "right_fist_tone3": 32, "right_fist_tone4": 32, "right_fist_tone5": 32, "ring": [32, 35, 38, 897], "ringed_planet": 32, "ro": 32, "robot": [32, 260], "robot_fac": 32, "rock": [32, 301, 476, 1027, 1029, 1165], "rocket": [32, 179], "rofl": 32, "roll_ey": 32, "roll_of_pap": 32, "rolled_up_newspap": 32, "roller_coast": 32, "roller_sk": 32, "rolling_on_the_floor_laugh": 32, "romania": 32, "rooster": 32, "rosett": 32, "rotating_light": 32, "round_pushpin": 32, "rowboat": 32, "rowboat_tone1": 32, "rowboat_tone2": 32, "rowboat_tone3": 32, "rowboat_tone4": 32, "rowboat_tone5": 32, "rowing_man": 32, "rowing_woman": 32, "ru": 32, "rugby_footbal": 32, "runner": [32, 44, 1176, 1207], "runner_tone1": 32, "runner_tone2": 32, "runner_tone3": 32, "runner_tone4": 32, "runner_tone5": 32, "running_man": 32, "running_shirt_with_sash": 32, "running_woman": 32, "russia": [32, 1149], "rw": [32, 60, 62, 173, 174, 183, 191, 260, 270, 485, 788, 793, 801, 868, 879, 882, 893, 896, 916, 919, 934, 941, 942, 943, 945, 954, 965, 968, 969, 977, 1005, 1011, 1012, 1013, 1023, 1025, 1026, 1062, 1091], "rwanda": 32, "safety_pin": 32, "safety_vest": 32, "sagittariu": 32, "sailboat": 32, "saint_martin": 32, "sake": 32, "salad": 32, "salt": [32, 893], "samoa": 32, "san_marino": 32, "sandal": 32, "sandwich": 32, "santa": 32, "santa_tone1": 32, "santa_tone2": 32, "santa_tone3": 32, "santa_tone4": 32, "santa_tone5": 32, "sao_tome_princip": 32, "sari": 32, "satellit": 32, "satellite_orbit": 32, "saudi": 32, "saudi_arabia": 32, "saudiarabia": 32, "sauropod": 32, "saxophon": 32, "sb": [32, 289], "sc": [32, 35], "scale": [32, 79, 204, 250, 264, 466, 941, 1014, 1027], "scarf": 32, "school": [32, 264, 537, 572, 1158, 1190], "school_satchel": 32, "scientist": [32, 204, 387, 1059, 1141, 1142, 1143, 1150], "scientist_dark_skin_ton": 32, "scientist_light_skin_ton": 32, "scientist_medium_dark_skin_ton": 32, "scientist_medium_light_skin_ton": 32, "scientist_medium_skin_ton": 32, "scientist_tone1": 32, "scientist_tone2": 32, "scientist_tone3": 32, "scientist_tone4": 32, "scientist_tone5": 32, "scissor": 32, "scooter": 32, "scorpion": 32, "scorpiu": 32, "scotland": 32, "scream": [32, 233, 897], "scream_cat": 32, "screwdriv": 32, "scroll": [32, 178, 537], "sd": [32, 244, 260, 264, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346, 837], "se": [32, 601], "seal": 32, "seat": 32, "second_plac": 32, "second_place_med": 32, "secret": [32, 681, 702, 950, 1034, 1147], "see_no_evil": 32, "seedl": 32, "selfi": 32, "selfie_tone1": 32, "selfie_tone2": 32, "selfie_tone3": 32, "selfie_tone4": 32, "selfie_tone5": 32, "seneg": 32, "serbia": 32, "service_dog": 32, "seven": [32, 36, 85, 192, 205, 215, 223, 252, 340, 346, 369, 1103, 1114], "sewing_needl": 32, "seychel": 32, "sg": 32, "sh": [32, 60, 179, 183, 272, 810, 864, 865, 882, 943, 965, 975, 1123], "shaking_hand": 32, "shaking_hands_tone1": 32, "shaking_hands_tone2": 32, "shaking_hands_tone3": 32, "shaking_hands_tone4": 32, "shaking_hands_tone5": 32, "shallow_pan_of_food": 32, "shamrock": 32, "shark": 32, "shaved_ic": 32, "sheep": 32, "shelled_peanut": 32, "shield": [32, 172], "shinto_shrin": 32, "ship": [32, 177], "shirt": [32, 43, 169], "shit": [32, 231], "shop": [32, 296], "shopping_bag": 32, "shopping_cart": 32, "shopping_trollei": 32, "shower": 32, "shrimp": 32, "shrug": 32, "shrug_tone1": 32, "shrug_tone2": 32, "shrug_tone3": 32, "shrug_tone4": 32, "shrug_tone5": 32, "shushing_fac": 32, "si": 32, "sick": [32, 500], "sierra_leon": 32, "sign_of_the_horn": 32, "sign_of_the_horns_tone1": 32, "sign_of_the_horns_tone2": 32, "sign_of_the_horns_tone3": 32, "sign_of_the_horns_tone4": 32, "sign_of_the_horns_tone5": 32, "signal_strength": 32, "singapor": 32, "singer": 32, "singer_dark_skin_ton": 32, "singer_light_skin_ton": 32, "singer_medium_dark_skin_ton": 32, "singer_medium_light_skin_ton": 32, "singer_medium_skin_ton": 32, "singer_tone1": 32, "singer_tone2": 32, "singer_tone3": 32, "singer_tone4": 32, "singer_tone5": 32, "sint_maarten": 32, "six": [32, 192, 205, 215, 223, 241, 340, 346, 369, 1070], "six_pointed_star": 32, "sj": 32, "sk": 32, "skateboard": 32, "skeleton": [32, 175, 187, 479, 866], "ski": 32, "skier": 32, "skull": 32, "skull_and_crossbon": 32, "skull_crossbon": 32, "skunk": 32, "sl": [32, 361, 995], "sled": 32, "sleeping_accommod": 32, "sleeping_b": 32, "sleepi": 32, "sleuth_or_spi": 32, "sleuth_or_spy_tone1": 32, "sleuth_or_spy_tone2": 32, "sleuth_or_spy_tone3": 32, "sleuth_or_spy_tone4": 32, "sleuth_or_spy_tone5": 32, "slight_frown": 32, "slight_smil": 32, "slightly_frowning_fac": 32, "slightly_smiling_fac": 32, "slot_machin": 32, "sloth": 32, "slovakia": 32, "slovenia": [32, 239], "sm": 32, "small_airplan": 32, "small_blue_diamond": 32, "small_orange_diamond": 32, "small_red_triangl": 32, "small_red_triangle_down": 32, "smile": [32, 35], "smile_cat": 32, "smilei": [32, 62], "smiley_cat": 32, "smiling_face_with_3_heart": 32, "smiling_face_with_tear": 32, "smiling_imp": 32, "smirk": 32, "smirk_cat": 32, "smoke": 32, "sn": 32, "snail": 32, "snake": 32, "sneez": 32, "sneezing_fac": 32, "snow_capped_mountain": 32, "snowboard": 32, "snowboarder_dark_skin_ton": 32, "snowboarder_light_skin_ton": 32, "snowboarder_medium_dark_skin_ton": 32, "snowboarder_medium_light_skin_ton": 32, "snowboarder_medium_skin_ton": 32, "snowboarder_tone1": 32, "snowboarder_tone2": 32, "snowboarder_tone3": 32, "snowboarder_tone4": 32, "snowboarder_tone5": 32, "snowflak": 32, "snowman2": 32, "snowman": 32, "snowman_with_snow": 32, "sob": 32, "soccer": 32, "sock": 32, "softbal": 32, "solomon_island": 32, "somalia": 32, "soon": [32, 173, 174, 179, 601, 688, 837, 943, 995, 1009, 1152], "sound": [32, 61, 63, 171, 175, 178, 179, 248, 758, 879, 934, 942, 943, 1170], "south_africa": 32, "south_georgia_south_sandwich_island": 32, "south_sudan": 32, "space_invad": 32, "spade": [32, 38], "spaghetti": [32, 130, 466, 477], "spain": 32, "sparkl": 32, "sparkler": 32, "sparkling_heart": 32, "speak_no_evil": 32, "speaker": [32, 775], "speaking_head": 32, "speaking_head_in_silhouett": 32, "speech_balloon": 32, "speech_left": 32, "speedboat": 32, "spider": 32, "spider_web": 32, "spiral_calendar": 32, "spiral_calendar_pad": 32, "spiral_note_pad": 32, "spiral_notepad": 32, "spong": 32, "spoon": 32, "sports_med": 32, "spy": 32, "spy_tone1": 32, "spy_tone2": 32, "spy_tone3": 32, "spy_tone4": 32, "spy_tone5": 32, "squeeze_bottl": 32, "squid": 32, "sr": [32, 244, 1093], "sri_lanka": 32, "st": [32, 238, 478, 1005, 1007, 1008], "st_barthelemi": 32, "st_helena": 32, "st_kitts_nevi": 32, "st_lucia": 32, "st_pierre_miquelon": 32, "st_vincent_grenadin": 32, "stadium": 32, "star2": 32, "star": [32, 38, 638, 943, 1025], "star_and_cresc": 32, "star_of_david": 32, "star_struck": 32, "station": 32, "statue_of_liberti": 32, "steam_locomot": 32, "stethoscop": 32, "stew": 32, "stop_button": 32, "stop_sign": 32, "stopwatch": 32, "straight_rul": 32, "strawberri": 32, "stuck_out_tongu": 32, "stuck_out_tongue_closed_ey": 32, "stuck_out_tongue_winking_ey": 32, "student": [32, 102, 107, 125, 143, 179, 272, 354, 355, 360, 361, 369, 1035, 1171], "student_dark_skin_ton": 32, "student_light_skin_ton": 32, "student_medium_dark_skin_ton": 32, "student_medium_light_skin_ton": 32, "student_medium_skin_ton": 32, "student_tone1": 32, "student_tone2": 32, "student_tone3": 32, "student_tone4": 32, "student_tone5": 32, "studio_microphon": 32, "stuffed_flatbread": 32, "stuffed_pita": 32, "sudan": 32, "sun_behind_large_cloud": 32, "sun_behind_rain_cloud": 32, "sun_behind_small_cloud": 32, "sun_with_fac": 32, "sunflow": 32, "sunni": [32, 110, 291, 294, 542, 553, 559, 561, 594, 790, 990, 1034], "sunris": 32, "sunrise_over_mountain": 32, "superhero": 32, "superhero_dark_skin_ton": 32, "superhero_light_skin_ton": 32, "superhero_medium_dark_skin_ton": 32, "superhero_medium_light_skin_ton": 32, "superhero_medium_skin_ton": 32, "superhero_tone1": 32, "superhero_tone2": 32, "superhero_tone3": 32, "superhero_tone4": 32, "superhero_tone5": 32, "supervillain": 32, "supervillain_dark_skin_ton": 32, "supervillain_light_skin_ton": 32, "supervillain_medium_dark_skin_ton": 32, "supervillain_medium_light_skin_ton": 32, "supervillain_medium_skin_ton": 32, "supervillain_tone1": 32, "supervillain_tone2": 32, "supervillain_tone3": 32, "supervillain_tone4": 32, "supervillain_tone5": 32, "surfer": 32, "surfer_tone1": 32, "surfer_tone2": 32, "surfer_tone3": 32, "surfer_tone4": 32, "surfer_tone5": 32, "surfing_man": 32, "surfing_woman": 32, "surinam": 32, "sushi": 32, "suspension_railwai": 32, "sv": [32, 520, 521], "swan": 32, "swaziland": 32, "sweat": 32, "sweat_drop": 32, "sweat_smil": 32, "sweden": 32, "sweet_potato": 32, "swimmer": 32, "swimmer_tone1": 32, "swimmer_tone2": 32, "swimmer_tone3": 32, "swimmer_tone4": 32, "swimmer_tone5": 32, "swimming_man": 32, "swimming_woman": 32, "switzerland": 32, "sx": 32, "symbol": [32, 33, 38, 125, 183, 212, 233, 241, 247, 250, 257, 260, 278, 287, 288, 308, 309, 352, 353, 407, 422, 431, 438, 444, 448, 451, 455, 458, 459, 464, 468, 473, 474, 696, 734, 740, 787, 788, 789, 790, 793, 812, 815, 837, 867, 882, 897, 917, 919, 933, 942, 1042], "synagogu": 32, "syria": 32, "syring": 32, "sz": [32, 174, 177], "t_rex": 32, "ta": 32, "table_tenni": 32, "taco": 32, "tada": 32, "taiwan": 32, "tajikistan": 32, "takeout_box": 32, "tamal": 32, "tanabata_tre": 32, "tangerin": 32, "tanzania": 32, "tauru": 32, "taxi": 32, "tc": 32, "td": [32, 236], "tea": 32, "teacher": [32, 107, 177, 482, 484, 864, 865, 1023], "teacher_dark_skin_ton": 32, "teacher_light_skin_ton": 32, "teacher_medium_dark_skin_ton": 32, "teacher_medium_light_skin_ton": 32, "teacher_medium_skin_ton": 32, "teacher_tone1": 32, "teacher_tone2": 32, "teacher_tone3": 32, "teacher_tone4": 32, "teacher_tone5": 32, "teapot": 32, "technologist": 32, "technologist_dark_skin_ton": 32, "technologist_light_skin_ton": 32, "technologist_medium_dark_skin_ton": 32, "technologist_medium_light_skin_ton": 32, "technologist_medium_skin_ton": 32, "technologist_tone1": 32, "technologist_tone2": 32, "technologist_tone3": 32, "technologist_tone4": 32, "technologist_tone5": 32, "teddy_bear": 32, "telephon": 32, "telephone_receiv": 32, "telescop": 32, "ten": [32, 174, 195, 215, 254, 260, 346, 928], "tenni": 32, "tent": 32, "test_tub": 32, "tf": [32, 267, 863, 1032], "tg": 32, "th": [32, 208, 236, 400, 442, 551, 629, 1072, 1081], "thailand": 32, "thermomet": [32, 70, 83, 85, 86, 199, 208, 260, 280, 373, 375, 376, 378, 493, 500, 503, 505, 514, 515, 528, 542, 582, 583, 591, 594, 669, 672, 790, 943], "thermometer_fac": 32, "thinking_fac": 32, "third_plac": 32, "third_place_med": 32, "thong_sand": 32, "thought_balloon": 32, "thread": [32, 61, 63, 84, 90, 92, 177, 189, 190, 199, 204, 208, 219, 241, 247, 248, 250, 257, 260, 275, 276, 277, 279, 288, 297, 299, 323, 336, 337, 379, 382, 383, 384, 472, 501, 518, 532, 595, 736, 744, 753, 755, 762, 764, 767, 768, 789, 790, 819, 829, 835, 849, 857, 933, 955, 974, 982, 984, 985, 987, 989, 993, 994, 996, 1007, 1008, 1009, 1045, 1046, 1136, 1178, 1188, 1189, 1190, 1192, 1204, 1205, 1206], "three_button_mous": 32, "thumbdown": 32, "thumbdown_tone1": 32, "thumbdown_tone2": 32, "thumbdown_tone3": 32, "thumbdown_tone4": 32, "thumbdown_tone5": 32, "thumbsdown_tone1": 32, "thumbsdown_tone2": 32, "thumbsdown_tone3": 32, "thumbsdown_tone4": 32, "thumbsdown_tone5": 32, "thumbsup_tone1": 32, "thumbsup_tone2": 32, "thumbsup_tone3": 32, "thumbsup_tone4": 32, "thumbsup_tone5": 32, "thumbup": 32, "thumbup_tone1": 32, "thumbup_tone2": 32, "thumbup_tone3": 32, "thumbup_tone4": 32, "thumbup_tone5": 32, "thunder_cloud_and_rain": 32, "thunder_cloud_rain": 32, "ticket": 32, "tiger2": 32, "tiger": 32, "timer": [32, 61, 63, 125, 137, 196, 297, 457, 769, 790, 814, 839, 846, 852, 855, 856, 858, 870, 873, 933, 942, 958, 962, 974, 993, 999, 1001, 1009, 1203, 1206], "timer_clock": 32, "timor_lest": 32, "tipping_hand_man": 32, "tipping_hand_woman": 32, "tired_fac": 32, "tj": 32, "tk": 32, "tl": [32, 177], "tm": 32, "tn": [32, 212], "togo": 32, "toilet": [32, 250, 572, 827, 1045], "tokelau": 32, "tokyo_tow": 32, "tomato": 32, "tone1": 32, "tone2": 32, "tone3": 32, "tone4": 32, "tone5": 32, "tonga": 32, "tongu": [32, 1189], "toolbox": [32, 193], "tooth": 32, "toothbrush": 32, "tophat": 32, "tornado": 32, "tr": [32, 236], "track_next": 32, "track_previ": 32, "trackbal": 32, "tractor": 32, "traffic_light": 32, "train2": 32, "tram": 32, "transgender_flag": 32, "transgender_symbol": 32, "triangular_flag_on_post": 32, "triangular_rul": 32, "trident": 32, "trinidad_tobago": 32, "tristan_da_cunha": 32, "triumph": 32, "trolleybu": 32, "trophi": 32, "tropical_drink": 32, "tropical_fish": 32, "truck": 32, "trumpet": 32, "tt": 32, "tulip": 32, "tumbler_glass": 32, "tunisia": 32, "turkei": 32, "turkmenistan": 32, "turks_caicos_island": 32, "turtl": 32, "tuvalu": 32, "tuxedo_tone1": 32, "tuxedo_tone2": 32, "tuxedo_tone3": 32, "tuxedo_tone4": 32, "tuxedo_tone5": 32, "tw": 32, "twisted_rightwards_arrow": 32, "two_heart": 32, "two_men_holding_hand": 32, "two_women_holding_hand": 32, "tz": 32, "u5272": 32, "u5408": 32, "u55b6": 32, "u6307": 32, "u6708": 32, "u6709": 32, "u6e80": 32, "u7121": 32, "u7533": 32, "u7981": 32, "u7a7a": 32, "ua": [32, 239, 248, 323], "ug": 32, "uganda": 32, "ukrain": 32, "umbrella2": 32, "umbrella": 32, "umbrella_on_ground": 32, "unamus": 32, "underag": 32, "unicorn": 32, "unicorn_fac": 32, "united_arab_emir": 32, "united_n": 32, "united_st": 32, "unlock": [32, 764, 766, 768, 829, 835, 982, 1201], "upside_down": 32, "upside_down_fac": 32, "urn": 32, "uruguai": 32, "us_virgin_island": 32, "uz": 32, "uzbekistan": 32, "v_tone1": 32, "v_tone2": 32, "v_tone3": 32, "v_tone4": 32, "v_tone5": 32, "va": [32, 291, 294], "vampir": 32, "vampire_dark_skin_ton": 32, "vampire_light_skin_ton": 32, "vampire_medium_dark_skin_ton": 32, "vampire_medium_light_skin_ton": 32, "vampire_medium_skin_ton": 32, "vampire_tone1": 32, "vampire_tone2": 32, "vampire_tone3": 32, "vampire_tone4": 32, "vampire_tone5": 32, "vanuatu": 32, "vatican_c": 32, "vc": [32, 150, 178], "ve": [32, 172, 174, 879, 1170], "venezuela": 32, "vertical_traffic_light": 32, "vg": 32, "vh": 32, "vi": [32, 770], "vibration_mod": 32, "video_camera": 32, "video_gam": 32, "vietnam": 32, "violin": 32, "virgo": 32, "vn": 32, "volcano": 32, "volleybal": 32, "vu": 32, "vulcan": 32, "vulcan_salut": 32, "vulcan_tone1": 32, "vulcan_tone2": 32, "vulcan_tone3": 32, "vulcan_tone4": 32, "vulcan_tone5": 32, "waffl": 32, "wale": 32, "walk": [32, 171, 191, 204, 300, 301, 322, 349, 351, 376, 387, 694, 711, 881, 943, 1047], "walking_man": 32, "walking_tone1": 32, "walking_tone2": 32, "walking_tone3": 32, "walking_tone4": 32, "walking_tone5": 32, "walking_woman": 32, "wallis_futuna": 32, "waning_crescent_moon": 32, "waning_gibbous_moon": 32, "wastebasket": 32, "water_buffalo": 32, "water_polo": 32, "water_polo_tone1": 32, "water_polo_tone2": 32, "water_polo_tone3": 32, "water_polo_tone4": 32, "water_polo_tone5": 32, "watermelon": [32, 296], "wave": [32, 34, 38, 288, 305], "wave_tone1": 32, "wave_tone2": 32, "wave_tone3": 32, "wave_tone4": 32, "wave_tone5": 32, "waving_black_flag": 32, "waving_white_flag": 32, "wavy_dash": 32, "waxing_crescent_moon": 32, "waxing_gibbous_moon": 32, "wc": [32, 232, 233, 250, 270, 407, 422, 431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 478, 696, 734, 787, 789, 790, 877, 880, 930, 944, 1120], "weari": 32, "wed": [32, 231], "weight_lift": 32, "weight_lifter_tone1": 32, "weight_lifter_tone2": 32, "weight_lifter_tone3": 32, "weight_lifter_tone4": 32, "weight_lifter_tone5": 32, "weight_lifting_man": 32, "weight_lifting_woman": 32, "western_sahara": 32, "wf": 32, "whale2": 32, "whale": 32, "wheel_of_dharma": 32, "wheelchair": 32, "whiski": 32, "white_check_mark": 32, "white_circl": 32, "white_flag": 32, "white_flow": 32, "white_frowning_fac": 32, "white_hair": 32, "white_heart": 32, "white_large_squar": 32, "white_medium_small_squar": 32, "white_medium_squar": 32, "white_small_squar": 32, "white_square_button": 32, "white_sun_behind_cloud": 32, "white_sun_behind_cloud_with_rain": 32, "white_sun_cloud": 32, "white_sun_rain_cloud": 32, "white_sun_small_cloud": 32, "white_sun_with_small_cloud": 32, "wilted_flow": 32, "wilted_ros": 32, "wind_blowing_fac": 32, "wind_chim": 32, "wind_fac": 32, "wine_glass": 32, "wolf": 32, "woman": 32, "woman_and_man_holding_hands_dark_skin_ton": 32, "woman_and_man_holding_hands_dark_skin_tone_light_skin_ton": 32, "woman_and_man_holding_hands_dark_skin_tone_medium_dark_skin_ton": 32, "woman_and_man_holding_hands_dark_skin_tone_medium_light_skin_ton": 32, "woman_and_man_holding_hands_dark_skin_tone_medium_skin_ton": 32, "woman_and_man_holding_hands_light_skin_ton": 32, "woman_and_man_holding_hands_light_skin_tone_dark_skin_ton": 32, "woman_and_man_holding_hands_light_skin_tone_medium_dark_skin_ton": 32, "woman_and_man_holding_hands_light_skin_tone_medium_light_skin_ton": 32, "woman_and_man_holding_hands_light_skin_tone_medium_skin_ton": 32, "woman_and_man_holding_hands_medium_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_dark_skin_tone_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_dark_skin_tone_light_skin_ton": 32, "woman_and_man_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 32, "woman_and_man_holding_hands_medium_dark_skin_tone_medium_skin_ton": 32, "woman_and_man_holding_hands_medium_light_skin_ton": 32, "woman_and_man_holding_hands_medium_light_skin_tone_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_light_skin_tone_light_skin_ton": 32, "woman_and_man_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_light_skin_tone_medium_skin_ton": 32, "woman_and_man_holding_hands_medium_skin_ton": 32, "woman_and_man_holding_hands_medium_skin_tone_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_skin_tone_light_skin_ton": 32, "woman_and_man_holding_hands_medium_skin_tone_medium_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_skin_tone_medium_light_skin_ton": 32, "woman_and_man_holding_hands_tone1": 32, "woman_and_man_holding_hands_tone1_tone2": 32, "woman_and_man_holding_hands_tone1_tone3": 32, "woman_and_man_holding_hands_tone1_tone4": 32, "woman_and_man_holding_hands_tone1_tone5": 32, "woman_and_man_holding_hands_tone2": 32, "woman_and_man_holding_hands_tone2_tone1": 32, "woman_and_man_holding_hands_tone2_tone3": 32, "woman_and_man_holding_hands_tone2_tone4": 32, "woman_and_man_holding_hands_tone2_tone5": 32, "woman_and_man_holding_hands_tone3": 32, "woman_and_man_holding_hands_tone3_tone1": 32, "woman_and_man_holding_hands_tone3_tone2": 32, "woman_and_man_holding_hands_tone3_tone4": 32, "woman_and_man_holding_hands_tone3_tone5": 32, "woman_and_man_holding_hands_tone4": 32, "woman_and_man_holding_hands_tone4_tone1": 32, "woman_and_man_holding_hands_tone4_tone2": 32, "woman_and_man_holding_hands_tone4_tone3": 32, "woman_and_man_holding_hands_tone4_tone5": 32, "woman_and_man_holding_hands_tone5": 32, "woman_and_man_holding_hands_tone5_tone1": 32, "woman_and_man_holding_hands_tone5_tone2": 32, "woman_and_man_holding_hands_tone5_tone3": 32, "woman_and_man_holding_hands_tone5_tone4": 32, "woman_artist": 32, "woman_artist_dark_skin_ton": 32, "woman_artist_light_skin_ton": 32, "woman_artist_medium_dark_skin_ton": 32, "woman_artist_medium_light_skin_ton": 32, "woman_artist_medium_skin_ton": 32, "woman_artist_tone1": 32, "woman_artist_tone2": 32, "woman_artist_tone3": 32, "woman_artist_tone4": 32, "woman_artist_tone5": 32, "woman_astronaut": 32, "woman_astronaut_dark_skin_ton": 32, "woman_astronaut_light_skin_ton": 32, "woman_astronaut_medium_dark_skin_ton": 32, "woman_astronaut_medium_light_skin_ton": 32, "woman_astronaut_medium_skin_ton": 32, "woman_astronaut_tone1": 32, "woman_astronaut_tone2": 32, "woman_astronaut_tone3": 32, "woman_astronaut_tone4": 32, "woman_astronaut_tone5": 32, "woman_bald": 32, "woman_bald_dark_skin_ton": 32, "woman_bald_light_skin_ton": 32, "woman_bald_medium_dark_skin_ton": 32, "woman_bald_medium_light_skin_ton": 32, "woman_bald_medium_skin_ton": 32, "woman_bald_tone1": 32, "woman_bald_tone2": 32, "woman_bald_tone3": 32, "woman_bald_tone4": 32, "woman_bald_tone5": 32, "woman_beard": 32, "woman_bik": 32, "woman_biking_dark_skin_ton": 32, "woman_biking_light_skin_ton": 32, "woman_biking_medium_dark_skin_ton": 32, "woman_biking_medium_light_skin_ton": 32, "woman_biking_medium_skin_ton": 32, "woman_biking_tone1": 32, "woman_biking_tone2": 32, "woman_biking_tone3": 32, "woman_biking_tone4": 32, "woman_biking_tone5": 32, "woman_bouncing_bal": 32, "woman_bouncing_ball_dark_skin_ton": 32, "woman_bouncing_ball_light_skin_ton": 32, "woman_bouncing_ball_medium_dark_skin_ton": 32, "woman_bouncing_ball_medium_light_skin_ton": 32, "woman_bouncing_ball_medium_skin_ton": 32, "woman_bouncing_ball_tone1": 32, "woman_bouncing_ball_tone2": 32, "woman_bouncing_ball_tone3": 32, "woman_bouncing_ball_tone4": 32, "woman_bouncing_ball_tone5": 32, "woman_bow": 32, "woman_bowing_dark_skin_ton": 32, "woman_bowing_light_skin_ton": 32, "woman_bowing_medium_dark_skin_ton": 32, "woman_bowing_medium_light_skin_ton": 32, "woman_bowing_medium_skin_ton": 32, "woman_bowing_tone1": 32, "woman_bowing_tone2": 32, "woman_bowing_tone3": 32, "woman_bowing_tone4": 32, "woman_bowing_tone5": 32, "woman_cartwheel": 32, "woman_cartwheeling_dark_skin_ton": 32, "woman_cartwheeling_light_skin_ton": 32, "woman_cartwheeling_medium_dark_skin_ton": 32, "woman_cartwheeling_medium_light_skin_ton": 32, "woman_cartwheeling_medium_skin_ton": 32, "woman_cartwheeling_tone1": 32, "woman_cartwheeling_tone2": 32, "woman_cartwheeling_tone3": 32, "woman_cartwheeling_tone4": 32, "woman_cartwheeling_tone5": 32, "woman_climb": 32, "woman_climbing_dark_skin_ton": 32, "woman_climbing_light_skin_ton": 32, "woman_climbing_medium_dark_skin_ton": 32, "woman_climbing_medium_light_skin_ton": 32, "woman_climbing_medium_skin_ton": 32, "woman_climbing_tone1": 32, "woman_climbing_tone2": 32, "woman_climbing_tone3": 32, "woman_climbing_tone4": 32, "woman_climbing_tone5": 32, "woman_construction_work": 32, "woman_construction_worker_dark_skin_ton": 32, "woman_construction_worker_light_skin_ton": 32, "woman_construction_worker_medium_dark_skin_ton": 32, "woman_construction_worker_medium_light_skin_ton": 32, "woman_construction_worker_medium_skin_ton": 32, "woman_construction_worker_tone1": 32, "woman_construction_worker_tone2": 32, "woman_construction_worker_tone3": 32, "woman_construction_worker_tone4": 32, "woman_construction_worker_tone5": 32, "woman_cook": 32, "woman_cook_dark_skin_ton": 32, "woman_cook_light_skin_ton": 32, "woman_cook_medium_dark_skin_ton": 32, "woman_cook_medium_light_skin_ton": 32, "woman_cook_medium_skin_ton": 32, "woman_cook_tone1": 32, "woman_cook_tone2": 32, "woman_cook_tone3": 32, "woman_cook_tone4": 32, "woman_cook_tone5": 32, "woman_curly_hair": 32, "woman_curly_haired_dark_skin_ton": 32, "woman_curly_haired_light_skin_ton": 32, "woman_curly_haired_medium_dark_skin_ton": 32, "woman_curly_haired_medium_light_skin_ton": 32, "woman_curly_haired_medium_skin_ton": 32, "woman_curly_haired_tone1": 32, "woman_curly_haired_tone2": 32, "woman_curly_haired_tone3": 32, "woman_curly_haired_tone4": 32, "woman_curly_haired_tone5": 32, "woman_dark_skin_tone_beard": 32, "woman_detect": 32, "woman_detective_dark_skin_ton": 32, "woman_detective_light_skin_ton": 32, "woman_detective_medium_dark_skin_ton": 32, "woman_detective_medium_light_skin_ton": 32, "woman_detective_medium_skin_ton": 32, "woman_detective_tone1": 32, "woman_detective_tone2": 32, "woman_detective_tone3": 32, "woman_detective_tone4": 32, "woman_detective_tone5": 32, "woman_elf": 32, "woman_elf_dark_skin_ton": 32, "woman_elf_light_skin_ton": 32, "woman_elf_medium_dark_skin_ton": 32, "woman_elf_medium_light_skin_ton": 32, "woman_elf_medium_skin_ton": 32, "woman_elf_tone1": 32, "woman_elf_tone2": 32, "woman_elf_tone3": 32, "woman_elf_tone4": 32, "woman_elf_tone5": 32, "woman_facepalm": 32, "woman_facepalming_dark_skin_ton": 32, "woman_facepalming_light_skin_ton": 32, "woman_facepalming_medium_dark_skin_ton": 32, "woman_facepalming_medium_light_skin_ton": 32, "woman_facepalming_medium_skin_ton": 32, "woman_facepalming_tone1": 32, "woman_facepalming_tone2": 32, "woman_facepalming_tone3": 32, "woman_facepalming_tone4": 32, "woman_facepalming_tone5": 32, "woman_factory_work": 32, "woman_factory_worker_dark_skin_ton": 32, "woman_factory_worker_light_skin_ton": 32, "woman_factory_worker_medium_dark_skin_ton": 32, "woman_factory_worker_medium_light_skin_ton": 32, "woman_factory_worker_medium_skin_ton": 32, "woman_factory_worker_tone1": 32, "woman_factory_worker_tone2": 32, "woman_factory_worker_tone3": 32, "woman_factory_worker_tone4": 32, "woman_factory_worker_tone5": 32, "woman_fairi": 32, "woman_fairy_dark_skin_ton": 32, "woman_fairy_light_skin_ton": 32, "woman_fairy_medium_dark_skin_ton": 32, "woman_fairy_medium_light_skin_ton": 32, "woman_fairy_medium_skin_ton": 32, "woman_fairy_tone1": 32, "woman_fairy_tone2": 32, "woman_fairy_tone3": 32, "woman_fairy_tone4": 32, "woman_fairy_tone5": 32, "woman_farm": 32, "woman_farmer_dark_skin_ton": 32, "woman_farmer_light_skin_ton": 32, "woman_farmer_medium_dark_skin_ton": 32, "woman_farmer_medium_light_skin_ton": 32, "woman_farmer_medium_skin_ton": 32, "woman_farmer_tone1": 32, "woman_farmer_tone2": 32, "woman_farmer_tone3": 32, "woman_farmer_tone4": 32, "woman_farmer_tone5": 32, "woman_feeding_babi": 32, "woman_feeding_baby_dark_skin_ton": 32, "woman_feeding_baby_light_skin_ton": 32, "woman_feeding_baby_medium_dark_skin_ton": 32, "woman_feeding_baby_medium_light_skin_ton": 32, "woman_feeding_baby_medium_skin_ton": 32, "woman_feeding_baby_tone1": 32, "woman_feeding_baby_tone2": 32, "woman_feeding_baby_tone3": 32, "woman_feeding_baby_tone4": 32, "woman_feeding_baby_tone5": 32, "woman_firefight": 32, "woman_firefighter_dark_skin_ton": 32, "woman_firefighter_light_skin_ton": 32, "woman_firefighter_medium_dark_skin_ton": 32, "woman_firefighter_medium_light_skin_ton": 32, "woman_firefighter_medium_skin_ton": 32, "woman_firefighter_tone1": 32, "woman_firefighter_tone2": 32, "woman_firefighter_tone3": 32, "woman_firefighter_tone4": 32, "woman_firefighter_tone5": 32, "woman_frown": 32, "woman_frowning_dark_skin_ton": 32, "woman_frowning_light_skin_ton": 32, "woman_frowning_medium_dark_skin_ton": 32, "woman_frowning_medium_light_skin_ton": 32, "woman_frowning_medium_skin_ton": 32, "woman_frowning_tone1": 32, "woman_frowning_tone2": 32, "woman_frowning_tone3": 32, "woman_frowning_tone4": 32, "woman_frowning_tone5": 32, "woman_geni": 32, "woman_gesturing_no": 32, "woman_gesturing_no_dark_skin_ton": 32, "woman_gesturing_no_light_skin_ton": 32, "woman_gesturing_no_medium_dark_skin_ton": 32, "woman_gesturing_no_medium_light_skin_ton": 32, "woman_gesturing_no_medium_skin_ton": 32, "woman_gesturing_no_tone1": 32, "woman_gesturing_no_tone2": 32, "woman_gesturing_no_tone3": 32, "woman_gesturing_no_tone4": 32, "woman_gesturing_no_tone5": 32, "woman_gesturing_ok": 32, "woman_gesturing_ok_dark_skin_ton": 32, "woman_gesturing_ok_light_skin_ton": 32, "woman_gesturing_ok_medium_dark_skin_ton": 32, "woman_gesturing_ok_medium_light_skin_ton": 32, "woman_gesturing_ok_medium_skin_ton": 32, "woman_gesturing_ok_tone1": 32, "woman_gesturing_ok_tone2": 32, "woman_gesturing_ok_tone3": 32, "woman_gesturing_ok_tone4": 32, "woman_gesturing_ok_tone5": 32, "woman_getting_face_massag": 32, "woman_getting_face_massage_dark_skin_ton": 32, "woman_getting_face_massage_light_skin_ton": 32, "woman_getting_face_massage_medium_dark_skin_ton": 32, "woman_getting_face_massage_medium_light_skin_ton": 32, "woman_getting_face_massage_medium_skin_ton": 32, "woman_getting_face_massage_tone1": 32, "woman_getting_face_massage_tone2": 32, "woman_getting_face_massage_tone3": 32, "woman_getting_face_massage_tone4": 32, "woman_getting_face_massage_tone5": 32, "woman_getting_haircut": 32, "woman_getting_haircut_dark_skin_ton": 32, "woman_getting_haircut_light_skin_ton": 32, "woman_getting_haircut_medium_dark_skin_ton": 32, "woman_getting_haircut_medium_light_skin_ton": 32, "woman_getting_haircut_medium_skin_ton": 32, "woman_getting_haircut_tone1": 32, "woman_getting_haircut_tone2": 32, "woman_getting_haircut_tone3": 32, "woman_getting_haircut_tone4": 32, "woman_getting_haircut_tone5": 32, "woman_golf": 32, "woman_golfing_dark_skin_ton": 32, "woman_golfing_light_skin_ton": 32, "woman_golfing_medium_dark_skin_ton": 32, "woman_golfing_medium_light_skin_ton": 32, "woman_golfing_medium_skin_ton": 32, "woman_golfing_tone1": 32, "woman_golfing_tone2": 32, "woman_golfing_tone3": 32, "woman_golfing_tone4": 32, "woman_golfing_tone5": 32, "woman_guard": 32, "woman_guard_dark_skin_ton": 32, "woman_guard_light_skin_ton": 32, "woman_guard_medium_dark_skin_ton": 32, "woman_guard_medium_light_skin_ton": 32, "woman_guard_medium_skin_ton": 32, "woman_guard_tone1": 32, "woman_guard_tone2": 32, "woman_guard_tone3": 32, "woman_guard_tone4": 32, "woman_guard_tone5": 32, "woman_health_work": 32, "woman_health_worker_dark_skin_ton": 32, "woman_health_worker_light_skin_ton": 32, "woman_health_worker_medium_dark_skin_ton": 32, "woman_health_worker_medium_light_skin_ton": 32, "woman_health_worker_medium_skin_ton": 32, "woman_health_worker_tone1": 32, "woman_health_worker_tone2": 32, "woman_health_worker_tone3": 32, "woman_health_worker_tone4": 32, "woman_health_worker_tone5": 32, "woman_in_lotus_posit": 32, "woman_in_lotus_position_dark_skin_ton": 32, "woman_in_lotus_position_light_skin_ton": 32, "woman_in_lotus_position_medium_dark_skin_ton": 32, "woman_in_lotus_position_medium_light_skin_ton": 32, "woman_in_lotus_position_medium_skin_ton": 32, "woman_in_lotus_position_tone1": 32, "woman_in_lotus_position_tone2": 32, "woman_in_lotus_position_tone3": 32, "woman_in_lotus_position_tone4": 32, "woman_in_lotus_position_tone5": 32, "woman_in_manual_wheelchair": 32, "woman_in_manual_wheelchair_dark_skin_ton": 32, "woman_in_manual_wheelchair_light_skin_ton": 32, "woman_in_manual_wheelchair_medium_dark_skin_ton": 32, "woman_in_manual_wheelchair_medium_light_skin_ton": 32, "woman_in_manual_wheelchair_medium_skin_ton": 32, "woman_in_manual_wheelchair_tone1": 32, "woman_in_manual_wheelchair_tone2": 32, "woman_in_manual_wheelchair_tone3": 32, "woman_in_manual_wheelchair_tone4": 32, "woman_in_manual_wheelchair_tone5": 32, "woman_in_motorized_wheelchair": 32, "woman_in_motorized_wheelchair_dark_skin_ton": 32, "woman_in_motorized_wheelchair_light_skin_ton": 32, "woman_in_motorized_wheelchair_medium_dark_skin_ton": 32, "woman_in_motorized_wheelchair_medium_light_skin_ton": 32, "woman_in_motorized_wheelchair_medium_skin_ton": 32, "woman_in_motorized_wheelchair_tone1": 32, "woman_in_motorized_wheelchair_tone2": 32, "woman_in_motorized_wheelchair_tone3": 32, "woman_in_motorized_wheelchair_tone4": 32, "woman_in_motorized_wheelchair_tone5": 32, "woman_in_steamy_room": 32, "woman_in_steamy_room_dark_skin_ton": 32, "woman_in_steamy_room_light_skin_ton": 32, "woman_in_steamy_room_medium_dark_skin_ton": 32, "woman_in_steamy_room_medium_light_skin_ton": 32, "woman_in_steamy_room_medium_skin_ton": 32, "woman_in_steamy_room_tone1": 32, "woman_in_steamy_room_tone2": 32, "woman_in_steamy_room_tone3": 32, "woman_in_steamy_room_tone4": 32, "woman_in_steamy_room_tone5": 32, "woman_in_tuxedo": 32, "woman_in_tuxedo_dark_skin_ton": 32, "woman_in_tuxedo_light_skin_ton": 32, "woman_in_tuxedo_medium_dark_skin_ton": 32, "woman_in_tuxedo_medium_light_skin_ton": 32, "woman_in_tuxedo_medium_skin_ton": 32, "woman_in_tuxedo_tone1": 32, "woman_in_tuxedo_tone2": 32, "woman_in_tuxedo_tone3": 32, "woman_in_tuxedo_tone4": 32, "woman_in_tuxedo_tone5": 32, "woman_judg": 32, "woman_judge_dark_skin_ton": 32, "woman_judge_light_skin_ton": 32, "woman_judge_medium_dark_skin_ton": 32, "woman_judge_medium_light_skin_ton": 32, "woman_judge_medium_skin_ton": 32, "woman_judge_tone1": 32, "woman_judge_tone2": 32, "woman_judge_tone3": 32, "woman_judge_tone4": 32, "woman_judge_tone5": 32, "woman_juggl": 32, "woman_juggling_dark_skin_ton": 32, "woman_juggling_light_skin_ton": 32, "woman_juggling_medium_dark_skin_ton": 32, "woman_juggling_medium_light_skin_ton": 32, "woman_juggling_medium_skin_ton": 32, "woman_juggling_tone1": 32, "woman_juggling_tone2": 32, "woman_juggling_tone3": 32, "woman_juggling_tone4": 32, "woman_juggling_tone5": 32, "woman_kneel": 32, "woman_kneeling_dark_skin_ton": 32, "woman_kneeling_light_skin_ton": 32, "woman_kneeling_medium_dark_skin_ton": 32, "woman_kneeling_medium_light_skin_ton": 32, "woman_kneeling_medium_skin_ton": 32, "woman_kneeling_tone1": 32, "woman_kneeling_tone2": 32, "woman_kneeling_tone3": 32, "woman_kneeling_tone4": 32, "woman_kneeling_tone5": 32, "woman_lifting_weight": 32, "woman_lifting_weights_dark_skin_ton": 32, "woman_lifting_weights_light_skin_ton": 32, "woman_lifting_weights_medium_dark_skin_ton": 32, "woman_lifting_weights_medium_light_skin_ton": 32, "woman_lifting_weights_medium_skin_ton": 32, "woman_lifting_weights_tone1": 32, "woman_lifting_weights_tone2": 32, "woman_lifting_weights_tone3": 32, "woman_lifting_weights_tone4": 32, "woman_lifting_weights_tone5": 32, "woman_light_skin_tone_beard": 32, "woman_mag": 32, "woman_mage_dark_skin_ton": 32, "woman_mage_light_skin_ton": 32, "woman_mage_medium_dark_skin_ton": 32, "woman_mage_medium_light_skin_ton": 32, "woman_mage_medium_skin_ton": 32, "woman_mage_tone1": 32, "woman_mage_tone2": 32, "woman_mage_tone3": 32, "woman_mage_tone4": 32, "woman_mage_tone5": 32, "woman_mechan": 32, "woman_mechanic_dark_skin_ton": 32, "woman_mechanic_light_skin_ton": 32, "woman_mechanic_medium_dark_skin_ton": 32, "woman_mechanic_medium_light_skin_ton": 32, "woman_mechanic_medium_skin_ton": 32, "woman_mechanic_tone1": 32, "woman_mechanic_tone2": 32, "woman_mechanic_tone3": 32, "woman_mechanic_tone4": 32, "woman_mechanic_tone5": 32, "woman_medium_dark_skin_tone_beard": 32, "woman_medium_light_skin_tone_beard": 32, "woman_medium_skin_tone_beard": 32, "woman_mountain_bik": 32, "woman_mountain_biking_dark_skin_ton": 32, "woman_mountain_biking_light_skin_ton": 32, "woman_mountain_biking_medium_dark_skin_ton": 32, "woman_mountain_biking_medium_light_skin_ton": 32, "woman_mountain_biking_medium_skin_ton": 32, "woman_mountain_biking_tone1": 32, "woman_mountain_biking_tone2": 32, "woman_mountain_biking_tone3": 32, "woman_mountain_biking_tone4": 32, "woman_mountain_biking_tone5": 32, "woman_office_work": 32, "woman_office_worker_dark_skin_ton": 32, "woman_office_worker_light_skin_ton": 32, "woman_office_worker_medium_dark_skin_ton": 32, "woman_office_worker_medium_light_skin_ton": 32, "woman_office_worker_medium_skin_ton": 32, "woman_office_worker_tone1": 32, "woman_office_worker_tone2": 32, "woman_office_worker_tone3": 32, "woman_office_worker_tone4": 32, "woman_office_worker_tone5": 32, "woman_pilot": 32, "woman_pilot_dark_skin_ton": 32, "woman_pilot_light_skin_ton": 32, "woman_pilot_medium_dark_skin_ton": 32, "woman_pilot_medium_light_skin_ton": 32, "woman_pilot_medium_skin_ton": 32, "woman_pilot_tone1": 32, "woman_pilot_tone2": 32, "woman_pilot_tone3": 32, "woman_pilot_tone4": 32, "woman_pilot_tone5": 32, "woman_playing_handbal": 32, "woman_playing_handball_dark_skin_ton": 32, "woman_playing_handball_light_skin_ton": 32, "woman_playing_handball_medium_dark_skin_ton": 32, "woman_playing_handball_medium_light_skin_ton": 32, "woman_playing_handball_medium_skin_ton": 32, "woman_playing_handball_tone1": 32, "woman_playing_handball_tone2": 32, "woman_playing_handball_tone3": 32, "woman_playing_handball_tone4": 32, "woman_playing_handball_tone5": 32, "woman_playing_water_polo": 32, "woman_playing_water_polo_dark_skin_ton": 32, "woman_playing_water_polo_light_skin_ton": 32, "woman_playing_water_polo_medium_dark_skin_ton": 32, "woman_playing_water_polo_medium_light_skin_ton": 32, "woman_playing_water_polo_medium_skin_ton": 32, "woman_playing_water_polo_tone1": 32, "woman_playing_water_polo_tone2": 32, "woman_playing_water_polo_tone3": 32, "woman_playing_water_polo_tone4": 32, "woman_playing_water_polo_tone5": 32, "woman_police_offic": 32, "woman_police_officer_dark_skin_ton": 32, "woman_police_officer_light_skin_ton": 32, "woman_police_officer_medium_dark_skin_ton": 32, "woman_police_officer_medium_light_skin_ton": 32, "woman_police_officer_medium_skin_ton": 32, "woman_police_officer_tone1": 32, "woman_police_officer_tone2": 32, "woman_police_officer_tone3": 32, "woman_police_officer_tone4": 32, "woman_police_officer_tone5": 32, "woman_pout": 32, "woman_pouting_dark_skin_ton": 32, "woman_pouting_light_skin_ton": 32, "woman_pouting_medium_dark_skin_ton": 32, "woman_pouting_medium_light_skin_ton": 32, "woman_pouting_medium_skin_ton": 32, "woman_pouting_tone1": 32, "woman_pouting_tone2": 32, "woman_pouting_tone3": 32, "woman_pouting_tone4": 32, "woman_pouting_tone5": 32, "woman_raising_hand": 32, "woman_raising_hand_dark_skin_ton": 32, "woman_raising_hand_light_skin_ton": 32, "woman_raising_hand_medium_dark_skin_ton": 32, "woman_raising_hand_medium_light_skin_ton": 32, "woman_raising_hand_medium_skin_ton": 32, "woman_raising_hand_tone1": 32, "woman_raising_hand_tone2": 32, "woman_raising_hand_tone3": 32, "woman_raising_hand_tone4": 32, "woman_raising_hand_tone5": 32, "woman_red_hair": 32, "woman_red_haired_dark_skin_ton": 32, "woman_red_haired_light_skin_ton": 32, "woman_red_haired_medium_dark_skin_ton": 32, "woman_red_haired_medium_light_skin_ton": 32, "woman_red_haired_medium_skin_ton": 32, "woman_red_haired_tone1": 32, "woman_red_haired_tone2": 32, "woman_red_haired_tone3": 32, "woman_red_haired_tone4": 32, "woman_red_haired_tone5": 32, "woman_rowing_boat": 32, "woman_rowing_boat_dark_skin_ton": 32, "woman_rowing_boat_light_skin_ton": 32, "woman_rowing_boat_medium_dark_skin_ton": 32, "woman_rowing_boat_medium_light_skin_ton": 32, "woman_rowing_boat_medium_skin_ton": 32, "woman_rowing_boat_tone1": 32, "woman_rowing_boat_tone2": 32, "woman_rowing_boat_tone3": 32, "woman_rowing_boat_tone4": 32, "woman_rowing_boat_tone5": 32, "woman_run": 32, "woman_running_dark_skin_ton": 32, "woman_running_light_skin_ton": 32, "woman_running_medium_dark_skin_ton": 32, "woman_running_medium_light_skin_ton": 32, "woman_running_medium_skin_ton": 32, "woman_running_tone1": 32, "woman_running_tone2": 32, "woman_running_tone3": 32, "woman_running_tone4": 32, "woman_running_tone5": 32, "woman_scientist": 32, "woman_scientist_dark_skin_ton": 32, "woman_scientist_light_skin_ton": 32, "woman_scientist_medium_dark_skin_ton": 32, "woman_scientist_medium_light_skin_ton": 32, "woman_scientist_medium_skin_ton": 32, "woman_scientist_tone1": 32, "woman_scientist_tone2": 32, "woman_scientist_tone3": 32, "woman_scientist_tone4": 32, "woman_scientist_tone5": 32, "woman_shrug": 32, "woman_shrugging_dark_skin_ton": 32, "woman_shrugging_light_skin_ton": 32, "woman_shrugging_medium_dark_skin_ton": 32, "woman_shrugging_medium_light_skin_ton": 32, "woman_shrugging_medium_skin_ton": 32, "woman_shrugging_tone1": 32, "woman_shrugging_tone2": 32, "woman_shrugging_tone3": 32, "woman_shrugging_tone4": 32, "woman_shrugging_tone5": 32, "woman_sing": 32, "woman_singer_dark_skin_ton": 32, "woman_singer_light_skin_ton": 32, "woman_singer_medium_dark_skin_ton": 32, "woman_singer_medium_light_skin_ton": 32, "woman_singer_medium_skin_ton": 32, "woman_singer_tone1": 32, "woman_singer_tone2": 32, "woman_singer_tone3": 32, "woman_singer_tone4": 32, "woman_singer_tone5": 32, "woman_stand": 32, "woman_standing_dark_skin_ton": 32, "woman_standing_light_skin_ton": 32, "woman_standing_medium_dark_skin_ton": 32, "woman_standing_medium_light_skin_ton": 32, "woman_standing_medium_skin_ton": 32, "woman_standing_tone1": 32, "woman_standing_tone2": 32, "woman_standing_tone3": 32, "woman_standing_tone4": 32, "woman_standing_tone5": 32, "woman_stud": 32, "woman_student_dark_skin_ton": 32, "woman_student_light_skin_ton": 32, "woman_student_medium_dark_skin_ton": 32, "woman_student_medium_light_skin_ton": 32, "woman_student_medium_skin_ton": 32, "woman_student_tone1": 32, "woman_student_tone2": 32, "woman_student_tone3": 32, "woman_student_tone4": 32, "woman_student_tone5": 32, "woman_superhero": 32, "woman_superhero_dark_skin_ton": 32, "woman_superhero_light_skin_ton": 32, "woman_superhero_medium_dark_skin_ton": 32, "woman_superhero_medium_light_skin_ton": 32, "woman_superhero_medium_skin_ton": 32, "woman_superhero_tone1": 32, "woman_superhero_tone2": 32, "woman_superhero_tone3": 32, "woman_superhero_tone4": 32, "woman_superhero_tone5": 32, "woman_supervillain": 32, "woman_supervillain_dark_skin_ton": 32, "woman_supervillain_light_skin_ton": 32, "woman_supervillain_medium_dark_skin_ton": 32, "woman_supervillain_medium_light_skin_ton": 32, "woman_supervillain_medium_skin_ton": 32, "woman_supervillain_tone1": 32, "woman_supervillain_tone2": 32, "woman_supervillain_tone3": 32, "woman_supervillain_tone4": 32, "woman_supervillain_tone5": 32, "woman_surf": 32, "woman_surfing_dark_skin_ton": 32, "woman_surfing_light_skin_ton": 32, "woman_surfing_medium_dark_skin_ton": 32, "woman_surfing_medium_light_skin_ton": 32, "woman_surfing_medium_skin_ton": 32, "woman_surfing_tone1": 32, "woman_surfing_tone2": 32, "woman_surfing_tone3": 32, "woman_surfing_tone4": 32, "woman_surfing_tone5": 32, "woman_swim": 32, "woman_swimming_dark_skin_ton": 32, "woman_swimming_light_skin_ton": 32, "woman_swimming_medium_dark_skin_ton": 32, "woman_swimming_medium_light_skin_ton": 32, "woman_swimming_medium_skin_ton": 32, "woman_swimming_tone1": 32, "woman_swimming_tone2": 32, "woman_swimming_tone3": 32, "woman_swimming_tone4": 32, "woman_swimming_tone5": 32, "woman_teach": 32, "woman_teacher_dark_skin_ton": 32, "woman_teacher_light_skin_ton": 32, "woman_teacher_medium_dark_skin_ton": 32, "woman_teacher_medium_light_skin_ton": 32, "woman_teacher_medium_skin_ton": 32, "woman_teacher_tone1": 32, "woman_teacher_tone2": 32, "woman_teacher_tone3": 32, "woman_teacher_tone4": 32, "woman_teacher_tone5": 32, "woman_technologist": 32, "woman_technologist_dark_skin_ton": 32, "woman_technologist_light_skin_ton": 32, "woman_technologist_medium_dark_skin_ton": 32, "woman_technologist_medium_light_skin_ton": 32, "woman_technologist_medium_skin_ton": 32, "woman_technologist_tone1": 32, "woman_technologist_tone2": 32, "woman_technologist_tone3": 32, "woman_technologist_tone4": 32, "woman_technologist_tone5": 32, "woman_tipping_hand": 32, "woman_tipping_hand_dark_skin_ton": 32, "woman_tipping_hand_light_skin_ton": 32, "woman_tipping_hand_medium_dark_skin_ton": 32, "woman_tipping_hand_medium_light_skin_ton": 32, "woman_tipping_hand_medium_skin_ton": 32, "woman_tipping_hand_tone1": 32, "woman_tipping_hand_tone2": 32, "woman_tipping_hand_tone3": 32, "woman_tipping_hand_tone4": 32, "woman_tipping_hand_tone5": 32, "woman_tone1": 32, "woman_tone1_beard": 32, "woman_tone2": 32, "woman_tone2_beard": 32, "woman_tone3": 32, "woman_tone3_beard": 32, "woman_tone4": 32, "woman_tone4_beard": 32, "woman_tone5": 32, "woman_tone5_beard": 32, "woman_vampir": 32, "woman_vampire_dark_skin_ton": 32, "woman_vampire_light_skin_ton": 32, "woman_vampire_medium_dark_skin_ton": 32, "woman_vampire_medium_light_skin_ton": 32, "woman_vampire_medium_skin_ton": 32, "woman_vampire_tone1": 32, "woman_vampire_tone2": 32, "woman_vampire_tone3": 32, "woman_vampire_tone4": 32, "woman_vampire_tone5": 32, "woman_walk": 32, "woman_walking_dark_skin_ton": 32, "woman_walking_light_skin_ton": 32, "woman_walking_medium_dark_skin_ton": 32, "woman_walking_medium_light_skin_ton": 32, "woman_walking_medium_skin_ton": 32, "woman_walking_tone1": 32, "woman_walking_tone2": 32, "woman_walking_tone3": 32, "woman_walking_tone4": 32, "woman_walking_tone5": 32, "woman_wearing_turban": 32, "woman_wearing_turban_dark_skin_ton": 32, "woman_wearing_turban_light_skin_ton": 32, "woman_wearing_turban_medium_dark_skin_ton": 32, "woman_wearing_turban_medium_light_skin_ton": 32, "woman_wearing_turban_medium_skin_ton": 32, "woman_wearing_turban_tone1": 32, "woman_wearing_turban_tone2": 32, "woman_wearing_turban_tone3": 32, "woman_wearing_turban_tone4": 32, "woman_wearing_turban_tone5": 32, "woman_white_hair": 32, "woman_white_haired_dark_skin_ton": 32, "woman_white_haired_light_skin_ton": 32, "woman_white_haired_medium_dark_skin_ton": 32, "woman_white_haired_medium_light_skin_ton": 32, "woman_white_haired_medium_skin_ton": 32, "woman_white_haired_tone1": 32, "woman_white_haired_tone2": 32, "woman_white_haired_tone3": 32, "woman_white_haired_tone4": 32, "woman_white_haired_tone5": 32, "woman_with_headscarf": 32, "woman_with_headscarf_dark_skin_ton": 32, "woman_with_headscarf_light_skin_ton": 32, "woman_with_headscarf_medium_dark_skin_ton": 32, "woman_with_headscarf_medium_light_skin_ton": 32, "woman_with_headscarf_medium_skin_ton": 32, "woman_with_headscarf_tone1": 32, "woman_with_headscarf_tone2": 32, "woman_with_headscarf_tone3": 32, "woman_with_headscarf_tone4": 32, "woman_with_headscarf_tone5": 32, "woman_with_probing_can": 32, "woman_with_probing_cane_dark_skin_ton": 32, "woman_with_probing_cane_light_skin_ton": 32, "woman_with_probing_cane_medium_dark_skin_ton": 32, "woman_with_probing_cane_medium_light_skin_ton": 32, "woman_with_probing_cane_medium_skin_ton": 32, "woman_with_probing_cane_tone1": 32, "woman_with_probing_cane_tone2": 32, "woman_with_probing_cane_tone3": 32, "woman_with_probing_cane_tone4": 32, "woman_with_probing_cane_tone5": 32, "woman_with_turban": 32, "woman_with_veil": 32, "woman_with_veil_dark_skin_ton": 32, "woman_with_veil_light_skin_ton": 32, "woman_with_veil_medium_dark_skin_ton": 32, "woman_with_veil_medium_light_skin_ton": 32, "woman_with_veil_medium_skin_ton": 32, "woman_with_veil_tone1": 32, "woman_with_veil_tone2": 32, "woman_with_veil_tone3": 32, "woman_with_veil_tone4": 32, "woman_with_veil_tone5": 32, "woman_zombi": 32, "womans_cloth": 32, "womans_flat_sho": 32, "womans_hat": 32, "women_holding_hands_dark_skin_ton": 32, "women_holding_hands_dark_skin_tone_light_skin_ton": 32, "women_holding_hands_dark_skin_tone_medium_dark_skin_ton": 32, "women_holding_hands_dark_skin_tone_medium_light_skin_ton": 32, "women_holding_hands_dark_skin_tone_medium_skin_ton": 32, "women_holding_hands_light_skin_ton": 32, "women_holding_hands_light_skin_tone_dark_skin_ton": 32, "women_holding_hands_light_skin_tone_medium_dark_skin_ton": 32, "women_holding_hands_light_skin_tone_medium_light_skin_ton": 32, "women_holding_hands_light_skin_tone_medium_skin_ton": 32, "women_holding_hands_medium_dark_skin_ton": 32, "women_holding_hands_medium_dark_skin_tone_dark_skin_ton": 32, "women_holding_hands_medium_dark_skin_tone_light_skin_ton": 32, "women_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 32, "women_holding_hands_medium_dark_skin_tone_medium_skin_ton": 32, "women_holding_hands_medium_light_skin_ton": 32, "women_holding_hands_medium_light_skin_tone_dark_skin_ton": 32, "women_holding_hands_medium_light_skin_tone_light_skin_ton": 32, "women_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 32, "women_holding_hands_medium_light_skin_tone_medium_skin_ton": 32, "women_holding_hands_medium_skin_ton": 32, "women_holding_hands_medium_skin_tone_dark_skin_ton": 32, "women_holding_hands_medium_skin_tone_light_skin_ton": 32, "women_holding_hands_medium_skin_tone_medium_dark_skin_ton": 32, "women_holding_hands_medium_skin_tone_medium_light_skin_ton": 32, "women_holding_hands_tone1": 32, "women_holding_hands_tone1_tone2": 32, "women_holding_hands_tone1_tone3": 32, "women_holding_hands_tone1_tone4": 32, "women_holding_hands_tone1_tone5": 32, "women_holding_hands_tone2": 32, "women_holding_hands_tone2_tone1": 32, "women_holding_hands_tone2_tone3": 32, "women_holding_hands_tone2_tone4": 32, "women_holding_hands_tone2_tone5": 32, "women_holding_hands_tone3": 32, "women_holding_hands_tone3_tone1": 32, "women_holding_hands_tone3_tone2": 32, "women_holding_hands_tone3_tone4": 32, "women_holding_hands_tone3_tone5": 32, "women_holding_hands_tone4": 32, "women_holding_hands_tone4_tone1": 32, "women_holding_hands_tone4_tone2": 32, "women_holding_hands_tone4_tone3": 32, "women_holding_hands_tone4_tone5": 32, "women_holding_hands_tone5": 32, "women_holding_hands_tone5_tone1": 32, "women_holding_hands_tone5_tone2": 32, "women_holding_hands_tone5_tone3": 32, "women_holding_hands_tone5_tone4": 32, "women_with_bunny_ears_parti": 32, "women_wrestl": 32, "women": 32, "wood": 32, "woozy_fac": 32, "world_map": 32, "worm": [32, 489], "worri": [32, 457], "worship_symbol": 32, "wrench": 32, "wrestler": 32, "wrestlers_tone1": 32, "wrestlers_tone2": 32, "wrestlers_tone3": 32, "wrestlers_tone4": 32, "wrestlers_tone5": 32, "wrestl": 32, "wrestling_tone1": 32, "wrestling_tone2": 32, "wrestling_tone3": 32, "wrestling_tone4": 32, "wrestling_tone5": 32, "writing_hand": 32, "writing_hand_tone1": 32, "writing_hand_tone2": 32, "writing_hand_tone3": 32, "writing_hand_tone4": 32, "writing_hand_tone5": 32, "w": [32, 40, 208, 212, 215, 237, 241, 247, 257, 260, 267, 288, 302, 370, 371, 390, 478, 613, 674, 882, 896, 942, 943, 977, 1032, 1072, 1085, 1131, 1133, 1161, 1164, 1169], "xk": 32, "yarn": 32, "yawning_fac": 32, "yellow_circl": 32, "yellow_heart": 32, "yellow_squar": 32, "yemen": 32, "yen": [32, 36], "yin_yang": 32, "yo_yo": 32, "yt": 32, "yum": [32, 340], "za": [32, 312, 340, 409], "zambia": 32, "zany_fac": 32, "zap": 32, "zebra": 32, "zimbabw": 32, "zipper_mouth": 32, "zipper_mouth_fac": 32, "zm": 32, "zombi": 32, "zw": 32, "zzz": [32, 346], "sheet": [33, 173, 212, 224, 373, 375, 376, 722, 897, 941, 942], "layout": [33, 168, 189, 262, 454, 467, 1169], "emoji": 33, "sphinxemoji": 33, "mmlalia": 33, "mathml": 33, "alias": [33, 340, 410, 898], "entiti": [33, 172, 418, 432, 459, 476, 496, 504, 611, 806, 995, 1149], "isoamsa": 33, "mathemat": [33, 264, 1084], "arrow": [33, 35, 36, 38, 74, 75, 897, 1027], "isoamsr": 33, "relat": [33, 70, 160, 193, 204, 208, 229, 233, 288, 301, 422, 431, 438, 442, 444, 448, 451, 455, 464, 468, 473, 474, 481, 596, 696, 734, 751, 775, 787, 788, 789, 790, 805, 814, 862, 940, 995, 1005, 1136, 1169, 1170], "isonum": 33, "binari": [33, 42, 50, 54, 55, 58, 77, 88, 89, 168, 172, 178, 232, 233, 241, 245, 247, 248, 250, 255, 257, 260, 270, 377, 421, 454, 466, 634, 711, 774, 815, 829, 837, 882, 1011, 1014, 1027, 1039, 1066, 1071, 1149], "sphinxish": 33, "send": [33, 102, 125, 143, 150, 169, 172, 183, 208, 209, 211, 212, 213, 214, 247, 248, 267, 269, 270, 288, 309, 353, 369, 374, 518, 861, 877, 893, 936, 937, 941, 950, 960, 1008, 1010, 1132, 1149], "v4l": [33, 143], "ssh": [33, 98, 102, 103, 125, 143, 147, 148, 150, 169, 179, 183, 212, 244, 260, 267, 270, 278, 285, 287, 292, 302, 306, 308, 328, 334, 340, 346, 352, 355, 368, 369, 375, 376, 382, 383, 387, 553, 554, 790, 863, 864, 865, 872, 919, 928, 933, 934, 945, 946, 971, 1021, 1022, 1023, 1193, 1195, 1200], "taken": [34, 35, 36, 38, 40, 74, 75, 129, 153, 171, 175, 176, 183, 232, 353, 456, 488, 553, 562, 609, 764, 840, 862, 872, 897, 1011, 1062, 1149], "definit": [34, 35, 36, 38, 108, 115, 118, 119, 120, 133, 143, 168, 172, 174, 175, 177, 179, 192, 201, 204, 205, 210, 224, 231, 233, 297, 299, 315, 331, 369, 390, 391, 392, 422, 431, 434, 437, 438, 444, 448, 451, 455, 461, 462, 463, 464, 466, 467, 468, 473, 474, 481, 483, 487, 495, 496, 518, 540, 580, 598, 599, 600, 605, 606, 612, 613, 615, 624, 627, 628, 650, 676, 685, 696, 706, 722, 734, 736, 749, 753, 757, 787, 789, 790, 815, 837, 898, 942, 943, 1011, 1030, 1037, 1043, 1048, 1059, 1063, 1076, 1077, 1080, 1145, 1159, 1176, 1186, 1189], "includ": [34, 35, 36, 38, 44, 108, 115, 121, 122, 164, 174, 179, 183, 187, 189, 200, 204, 211, 223, 224, 233, 234, 241, 245, 247, 248, 250, 257, 260, 264, 285, 299, 306, 315, 327, 331, 366, 377, 391, 392, 394, 398, 400, 402, 433, 434, 449, 454, 457, 459, 463, 470, 479, 480, 482, 483, 484, 486, 491, 494, 495, 496, 497, 498, 499, 501, 503, 515, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 540, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 560, 562, 563, 564, 565, 567, 568, 569, 570, 571, 580, 586, 589, 596, 597, 598, 600, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 616, 621, 624, 625, 626, 627, 628, 629, 631, 632, 633, 634, 635, 637, 638, 641, 642, 643, 647, 651, 652, 653, 654, 655, 661, 665, 666, 669, 671, 672, 674, 678, 683, 684, 685, 686, 687, 688, 689, 690, 693, 694, 695, 697, 699, 701, 704, 705, 706, 707, 709, 711, 712, 713, 714, 717, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 736, 737, 738, 739, 741, 743, 744, 746, 748, 752, 753, 754, 755, 756, 757, 758, 761, 763, 766, 768, 769, 770, 774, 776, 778, 780, 784, 785, 786, 788, 790, 796, 801, 806, 808, 815, 817, 819, 821, 823, 825, 829, 831, 833, 842, 847, 851, 854, 857, 874, 894, 897, 903, 930, 935, 937, 941, 957, 959, 960, 961, 963, 966, 967, 968, 969, 970, 973, 975, 978, 986, 990, 992, 995, 1001, 1004, 1008, 1011, 1014, 1023, 1026, 1027, 1029, 1031, 1059, 1060, 1085, 1086, 1159, 1165, 1171, 1176, 1178, 1181, 1191], "substitut": [34, 35, 36, 38, 107, 115, 120, 121, 143, 224, 260, 306, 366, 460, 476, 480, 711, 954, 1148], "angzarr": 34, "0237c": 34, "angl": [34, 36, 38, 1192], "WITH": [34, 35, 38, 960], "downward": [34, 35, 36, 38, 488], "zigzag": 34, "cirmid": 34, "02aef": 34, "vertic": [34, 35, 36, 38, 411], "circl": [34, 35, 38, 234, 572, 877], "abov": [34, 35, 38, 79, 125, 130, 172, 174, 175, 176, 177, 179, 183, 187, 191, 210, 213, 224, 233, 241, 247, 257, 260, 264, 323, 380, 427, 450, 460, 470, 496, 516, 518, 540, 543, 544, 553, 554, 579, 589, 606, 607, 611, 612, 631, 675, 737, 798, 831, 837, 847, 864, 865, 881, 909, 941, 942, 943, 967, 971, 997, 1004, 1027, 1035, 1066, 1080, 1152, 1158, 1169, 1176], "cudarrl": 34, "02938": 34, "side": [34, 192, 214, 288, 297, 406, 415, 456, 518, 550, 589, 613, 615, 616, 766, 817, 821, 876, 897, 945, 1035, 1068, 1115, 1141, 1143, 1152], "arc": 34, "clockwis": [34, 38], "cudarrr": 34, "02935": 34, "rightward": [34, 35, 36, 38], "THEN": 34, "curv": [34, 35], "cularr": 34, "021b6": [34, 38], "anticlockwis": [34, 38], "semicircl": [34, 38], "cularrp": 34, "0293d": 34, "plu": [34, 35, 36, 38, 173, 179, 241, 247, 257, 260, 273, 427, 554, 580, 612, 614, 616, 837, 963], "curarr": 34, "021b7": [34, 38], "curarrm": 34, "0293c": 34, "minu": [34, 35, 36, 38, 252, 614, 757], "darr": [34, 36], "021a1": 34, "head": [34, 38, 40, 60, 123, 173, 175, 178, 212, 214, 224, 278, 287, 296, 308, 309, 352, 353, 766, 790, 867, 923, 924, 927, 930, 933, 958, 959, 1026, 1093], "021d3": [34, 38], "doubl": [34, 35, 36, 38, 115, 120, 121, 131, 134, 234, 250, 254, 260, 377, 392, 410, 411, 412, 415, 434, 454, 463, 495, 501, 506, 508, 515, 524, 526, 527, 532, 533, 534, 535, 536, 537, 540, 548, 550, 552, 553, 554, 565, 596, 598, 604, 606, 607, 611, 615, 647, 674, 698, 701, 704, 707, 711, 716, 717, 718, 719, 732, 751, 752, 754, 757, 766, 774, 776, 778, 779, 780, 781, 837, 897, 941, 1035, 1055, 1079, 1157], "darr2": 34, "021ca": [34, 38], "pair": [34, 38, 102, 103, 130, 131, 187, 229, 239, 242, 245, 250, 254, 255, 260, 267, 269, 281, 282, 305, 311, 339, 346, 497, 501, 504, 554, 572, 650, 651, 652, 655, 697, 743, 744, 748, 790, 801, 806, 933, 945, 946, 947, 949, 1029, 1039, 1083, 1136, 1147, 1164], "ddarr": 34, "ddotrahd": 34, "02911": 34, "dot": [34, 35, 36, 38, 176, 470, 485, 490, 919, 1013], "stem": [34, 806], "dfisht": 34, "0297f": 34, "down": [34, 35, 38, 171, 172, 175, 200, 277, 315, 331, 375, 396, 437, 482, 483, 494, 501, 543, 550, 551, 552, 553, 572, 614, 647, 672, 694, 711, 736, 753, 775, 790, 805, 806, 837, 883, 929, 936, 943, 1011, 1014, 1176, 1181], "tail": [34, 38, 173, 212, 214, 224, 278, 287, 308, 309, 352, 353, 766, 790, 825, 867, 924, 927, 930, 933, 1161], "dhar": 34, "02965": 34, "harpoon": [34, 38], "barb": [34, 38], "left": [34, 35, 36, 38, 62, 85, 111, 112, 130, 171, 172, 174, 192, 223, 234, 260, 306, 413, 414, 421, 427, 499, 543, 550, 596, 599, 603, 611, 612, 669, 676, 702, 879, 880, 897, 941, 950, 969, 1011, 1039, 1043, 1054, 1055, 1066, 1080, 1135, 1141, 1159], "besid": [34, 35, 38, 187], "dharl": 34, "021c3": [34, 38], "leftward": [34, 35, 36, 38], "dharr": 34, "021c2": [34, 38], "dlarr": 34, "02199": [34, 38], "south": [34, 38], "west": [34, 38, 181], "drarr": 34, "02198": [34, 38], "east": [34, 38], "duarr": 34, "021f5": [34, 38], "OF": [34, 35, 38, 175, 744], "upward": [34, 36, 38], "duhar": 34, "0296f": [34, 38], "dzigrarr": 34, "027ff": 34, "long": [34, 35, 38, 53, 138, 171, 172, 173, 174, 175, 179, 182, 200, 204, 212, 224, 241, 245, 247, 250, 257, 260, 268, 296, 369, 387, 398, 408, 410, 411, 415, 419, 420, 447, 454, 456, 465, 469, 471, 472, 491, 496, 553, 598, 599, 604, 609, 674, 744, 753, 763, 774, 776, 778, 780, 788, 796, 808, 817, 819, 835, 837, 842, 847, 851, 876, 897, 919, 943, 954, 960, 963, 993, 1001, 1030, 1037, 1077, 1087, 1136, 1143, 1154, 1161, 1189], "squiggl": 34, "erarr": 34, "02971": 34, "equal": [34, 35, 36, 38, 174, 196, 208, 224, 231, 234, 260, 264, 296, 297, 306, 318, 334, 392, 398, 414, 421, 426, 437, 462, 465, 542, 548, 555, 559, 594, 639, 658, 662, 689, 691, 757, 790, 872, 876, 930, 954, 993, 997, 998, 1066, 1121, 1176], "sign": [34, 35, 36, 38, 175, 182, 187, 250, 408, 410, 418, 462, 476, 500, 674, 737, 810, 1066, 1080, 1141, 1186, 1187], "harr": 34, "021d4": [34, 38], "02194": [34, 38], "harrcir": 34, "02948": 34, "small": [34, 38, 43, 107, 171, 173, 174, 204, 224, 228, 284, 323, 333, 390, 462, 466, 499, 551, 596, 708, 753, 934, 935, 941, 973, 1005, 1058, 1081, 1148, 1176], "harrw": 34, "021ad": [34, 38], "hoarr": 34, "021ff": 34, "imof": 34, "022b7": 34, "imag": [34, 35, 38, 166, 168, 171, 172, 173, 174, 182, 195, 257, 260, 264, 282, 346, 350, 369, 375, 472, 478, 485, 604, 815, 837, 934, 1138, 1143], "laarr": 34, "021da": [34, 38], "tripl": [34, 35, 38, 61, 63], "larr": [34, 36], "0219e": [34, 38], "larr2": 34, "021c7": [34, 38], "larrbf": 34, "0291f": 34, "bar": [34, 35, 36, 38, 178, 199, 219, 242, 255, 260, 269, 272, 302, 305, 306, 311, 324, 328, 334, 340, 346, 350, 378, 478, 543, 758, 1033, 1075, 1136], "TO": [34, 35, 38, 1091], "black": [34, 38, 177, 228, 236, 248, 251, 650, 1023], "larrf": 34, "0291d": 34, "larrhk": 34, "021a9": [34, 38], "larrlp": 34, "021ab": [34, 38], "larrpl": 34, "02939": 34, "larrsim": 34, "02973": 34, "tild": [34, 35, 38], "larrtl": 34, "021a2": [34, 38], "latail": 34, "0291b": 34, "02919": 34, "lbarr": 34, "0290e": 34, "0290c": 34, "ldca": 34, "02936": 34, "ldrdhar": 34, "02967": 34, "ldrushar": 34, "0294b": 34, "ldsh": 34, "021b2": 34, "tip": [34, 38, 229, 239, 242, 245, 269, 281, 305, 311, 1136], "lfisht": 34, "0297c": 34, "lhar": 34, "02962": 34, "lhard": 34, "021bd": [34, 38], "lharu": 34, "021bc": [34, 38], "lharul": 34, "0296a": 34, "llarr": 34, "llhard": 34, "0296b": 34, "below": [34, 35, 38, 133, 141, 153, 168, 172, 173, 174, 177, 179, 183, 192, 204, 213, 231, 264, 277, 323, 401, 403, 470, 477, 488, 521, 535, 543, 544, 550, 553, 688, 690, 704, 716, 736, 737, 753, 757, 766, 768, 785, 786, 788, 810, 831, 872, 876, 880, 897, 934, 943, 964, 1008, 1011, 1176], "loarr": 34, "021fd": 34, "lrarr": 34, "021c6": [34, 38], "lrarr2": 34, "lrhar": 34, "021cb": [34, 38], "lrhar2": 34, "lrhard": 34, "0296d": 34, "lsh": [34, 38], "021b0": [34, 38], "lurdshar": 34, "0294a": 34, "luruhar": 34, "02966": 34, "02905": 34, "021a6": [34, 38], "midcir": 34, "02af0": 34, "mumap": 34, "022b8": [34, 38], "multimap": [34, 38, 297, 572, 649, 658, 662, 691, 790], "nearhk": 34, "02924": 34, "north": [34, 38], "nearr": 34, "021d7": 34, "02197": [34, 38], "nesear": 34, "02928": [34, 38], "AND": [34, 35, 38, 398, 414, 437, 600, 925, 1054], "nharr": 34, "021ce": [34, 38], "stroke": [34, 38], "021ae": [34, 38], "nlarr": 34, "021cd": [34, 38], "0219a": [34, 38], "nrarr": 34, "021cf": [34, 38], "0219b": [34, 38], "nrarrc": 34, "02933": 34, "00338": [34, 38], "directli": [34, 40, 130, 168, 187, 273, 298, 355, 494, 611, 680, 808, 821, 833, 840, 851, 943, 953, 957, 1011, 1034, 1054, 1062, 1126, 1128, 1155], "slash": [34, 38, 921, 1005], "nrarrw": 34, "0219d": [34, 38], "nvharr": 34, "02904": 34, "nvlarr": 34, "02902": 34, "nvrarr": 34, "02903": 34, "nwarhk": 34, "02923": 34, "nwarr": 34, "021d6": 34, "02196": [34, 38], "nwnear": 34, "02927": 34, "olarr": 34, "021ba": [34, 38], "orarr": 34, "021bb": [34, 38], "origof": 34, "022b6": 34, "origin": [34, 35, 38, 60, 62, 123, 150, 169, 175, 177, 182, 187, 193, 205, 237, 241, 247, 250, 252, 257, 260, 285, 296, 301, 305, 306, 308, 309, 311, 315, 323, 327, 331, 333, 337, 339, 345, 349, 353, 436, 452, 496, 499, 550, 597, 605, 606, 607, 635, 686, 687, 689, 690, 748, 752, 755, 757, 768, 810, 837, 838, 861, 864, 865, 880, 894, 1032, 1138, 1149, 1171], "raarr": 34, "021db": [34, 38], "rarr": [34, 36], "021a0": [34, 38], "rarr2": 34, "021c9": [34, 38], "rarrap": 34, "02975": 34, "almost": [34, 35, 38, 61, 63, 174, 187, 196, 233, 415, 463, 465, 486, 601, 666, 694, 742, 758, 1005], "rarrbf": 34, "02920": 34, "rarrc": 34, "rarrf": 34, "0291e": 34, "rarrhk": 34, "021aa": [34, 38], "rarrlp": 34, "021ac": [34, 38], "rarrpl": 34, "02945": 34, "rarrsim": 34, "02974": 34, "rarrtl": 34, "02916": 34, "021a3": [34, 38], "rarrw": 34, "ratail": 34, "0291c": 34, "0291a": 34, "rbarr": 34, "02910": [34, 38], "0290f": [34, 38], "0290d": [34, 38], "rdca": 34, "02937": 34, "rdldhar": 34, "02969": 34, "rdsh": 34, "021b3": 34, "rfisht": 34, "0297d": 34, "rhar": 34, "02964": 34, "rhard": 34, "021c1": [34, 38], "rharu": 34, "021c0": [34, 38], "rharul": 34, "0296c": 34, "rlarr": 34, "021c4": [34, 38], "rlarr2": 34, "rlhar": 34, "021cc": [34, 38], "rlhar2": 34, "roarr": 34, "021fe": 34, "rrarr": 34, "rsh": [34, 38, 612, 944], "021b1": [34, 38], "ruluhar": 34, "02968": 34, "searhk": 34, "02925": [34, 38], "searr": 34, "021d8": 34, "seswar": 34, "02929": [34, 38], "simrarr": 34, "02972": 34, "slarr": 34, "02190": [34, 36, 38], "srarr": 34, "02192": [34, 36, 38], "swarhk": 34, "02926": [34, 38], "swarr": 34, "021d9": 34, "swnwar": 34, "0292a": 34, "uarr": [34, 36], "0219f": 34, "021d1": [34, 38], "uarr2": 34, "021c8": [34, 38], "uarrocir": 34, "02949": 34, "udarr": 34, "021c5": [34, 38], "udhar": 34, "0296e": [34, 38], "ufisht": 34, "0297e": 34, "uhar": 34, "02963": 34, "uharl": 34, "021bf": [34, 38], "uharr": 34, "021be": [34, 38], "uuarr": 34, "varr": 34, "021d5": [34, 38], "02195": [34, 38], "xharr": 34, "027fa": [34, 38], "027f7": [34, 38], "xlarr": 34, "027f8": [34, 38], "027f5": [34, 38], "xmap": 34, "027fc": [34, 38], "xrarr": 34, "027f9": [34, 38], "027f6": [34, 38], "zigrarr": 34, "021dd": 34, "ap": [35, 967], "02a70": 35, "approxim": [35, 38, 174, 270], "OR": [35, 38, 247, 398, 414, 437, 454, 925, 1054], "0224a": [35, 38], "apid": 35, "0224b": 35, "asymp": 35, "02248": [35, 38], "barv": 35, "02ae7": 35, "tack": [35, 38], "overbar": 35, "bcong": 35, "0224c": [35, 38], "bepsi": 35, "003f6": [35, 38], "greek": [35, 38], "revers": [35, 36, 38, 217, 244, 250, 267, 285, 292, 297, 306, 312, 334, 340, 350, 395, 572, 579, 580, 639, 643, 658, 662, 691, 736, 790, 792, 831, 870, 934, 995, 1082, 1116], "lunat": [35, 38], "epsilon": [35, 38], "bowti": 35, "022c8": 35, "bsim": 35, "0223d": [35, 38], "bsime": 35, "022cd": [35, 38], "bsolhsub": 35, "0005c": [35, 36], "02282": [35, 38], "solidu": [35, 36], "subset": [35, 38, 260, 1014, 1027, 1084], "bump": 35, "0224e": [35, 38], "geometr": [35, 38, 264], "equival": [35, 38, 79, 93, 107, 110, 260, 423, 427, 442, 447, 608, 685, 861, 863, 898, 930, 963, 1043, 1065, 1075, 1085], "02aae": 35, "bumpi": 35, "0224f": [35, 38], "between": [35, 38, 70, 90, 104, 138, 172, 173, 174, 176, 182, 183, 193, 208, 220, 233, 241, 244, 247, 252, 254, 257, 260, 264, 267, 282, 285, 292, 306, 311, 324, 334, 337, 340, 346, 355, 365, 399, 402, 415, 437, 442, 449, 462, 467, 476, 487, 508, 518, 540, 548, 612, 629, 688, 744, 754, 758, 769, 791, 792, 796, 842, 868, 869, 874, 934, 941, 971, 981, 995, 996, 997, 998, 1005, 1009, 1043, 1054, 1064, 1066, 1077, 1142, 1194], "cire": 35, "02257": [35, 38], "colon": [35, 36, 38, 1114], "02237": [35, 38], "proport": [35, 38, 173], "02a74": 35, "02254": [35, 38], "congdot": 35, "02a6d": 35, "congruent": [35, 38], "csub": 35, "02acf": 35, "close": [35, 54, 115, 120, 121, 143, 177, 183, 192, 204, 222, 231, 232, 245, 252, 276, 277, 279, 302, 306, 334, 336, 337, 442, 476, 481, 554, 572, 722, 750, 759, 767, 789, 790, 880, 941, 959, 960, 961, 963, 964, 966, 967, 968, 969, 970, 973, 975, 978, 1004, 1008, 1032, 1145, 1202], "csube": 35, "02ad1": 35, "csup": 35, "02ad0": 35, "superset": [35, 38, 1084, 1188], "csupe": 35, "02ad2": 35, "cuepr": 35, "022de": [35, 38], "cuesc": 35, "022df": [35, 38], "succe": [35, 38, 815, 916, 945, 1034], "cupr": 35, "0227c": [35, 38], "dashv": 35, "02ae4": [35, 38], "turnstil": [35, 38], "022a3": [35, 38], "easter": [35, 224], "02a6e": 35, "asterisk": [35, 36, 38], "ecir": 35, "02256": [35, 38], "IN": [35, 38, 176], "ecolon": 35, "02255": [35, 38], "eddot": 35, "02a77": [35, 38], "edot": 35, "02251": [35, 38], "efdot": 35, "02252": [35, 38], "THE": [35, 38, 960], "02a9a": 35, "greater": [35, 36, 38, 107, 125, 299, 414, 542, 548, 556, 559, 594, 736, 790, 823, 1066], "than": [35, 36, 38, 43, 69, 107, 123, 125, 133, 142, 143, 168, 172, 173, 177, 179, 182, 183, 187, 204, 208, 211, 215, 224, 231, 234, 241, 247, 252, 254, 257, 260, 264, 291, 294, 299, 323, 326, 355, 414, 415, 434, 436, 465, 466, 467, 478, 479, 481, 487, 494, 542, 550, 556, 559, 594, 598, 610, 613, 615, 616, 681, 694, 705, 731, 744, 768, 790, 793, 808, 823, 829, 833, 837, 897, 922, 926, 934, 942, 952, 953, 960, 963, 980, 1008, 1012, 1027, 1028, 1043, 1048, 1065, 1066, 1111, 1115, 1145, 1152, 1155, 1171, 1189], "02a96": [35, 38], "slant": [35, 38], "egsdot": 35, "02a98": 35, "el": [35, 220, 231, 267], "02a99": 35, "less": [35, 36, 38, 61, 63, 79, 168, 172, 173, 174, 179, 183, 233, 247, 264, 278, 287, 288, 294, 308, 309, 352, 353, 392, 414, 415, 419, 462, 465, 496, 548, 652, 672, 698, 744, 746, 768, 790, 808, 810, 837, 867, 881, 897, 924, 927, 928, 930, 933, 963, 1048, 1066, 1085, 1164, 1165, 1178, 1189, 1195], "02a95": [35, 38], "elsdot": 35, "02a97": 35, "equest": 35, "0225f": [35, 38], "equivdd": 35, "02a78": 35, "erdot": 35, "02253": [35, 38], "esdot": 35, "02250": [35, 38], "limit": [35, 38, 62, 172, 173, 189, 211, 241, 247, 257, 260, 306, 415, 457, 650, 694, 837, 874, 979, 998, 1040, 1041, 1066, 1140, 1162], "esim": 35, "02a73": 35, "02242": [35, 38], "fork": [35, 43, 142, 174, 189, 193, 790, 796, 797, 799, 804, 807, 814, 818, 828, 841, 846, 852, 855, 858, 933, 966, 979, 987, 1005, 1202], "022d4": [35, 38], "pitchfork": [35, 38], "forkv": 35, "02ad9": 35, "02322": 35, "gap": 35, "02a86": [35, 38], "02267": [35, 38], "gel": 35, "02a8c": [35, 38], "022db": [35, 38], "02a7e": [35, 38], "gescc": 35, "02aa9": 35, "gesdot": 35, "02a80": 35, "gesdoto": 35, "02a82": 35, "gesdotol": 35, "02a84": 35, "gesl": 35, "0fe00": [35, 38], "02a94": 35, "022d9": [35, 38], "02277": [35, 38], "gla": 35, "02aa5": 35, "gle": 35, "02a92": 35, "glj": 35, "02aa4": 35, "overlap": [35, 260, 264, 306, 788, 821, 1046], "gsdot": 35, "022d7": [35, 38], "gsim": 35, "02273": [35, 38], "gsime": 35, "02a8e": 35, "similar": [35, 61, 63, 131, 172, 174, 204, 208, 212, 214, 245, 258, 272, 417, 424, 495, 522, 551, 552, 583, 595, 604, 722, 757, 758, 785, 786, 808, 823, 837, 881, 1027, 1029, 1136], "gsiml": 35, "02a90": 35, "0226b": [35, 38], "gtcc": 35, "02aa7": 35, "gtcir": 35, "02a7a": 35, "gtdot": 35, "gtquest": 35, "02a7c": 35, "mark": [35, 36, 38, 231, 272, 370, 371, 411, 433, 733, 741, 853, 1043, 1045, 1164], "gtrarr": 35, "02978": 35, "homtht": 35, "0223b": 35, "homothet": 35, "lap": 35, "02a85": [35, 38], "lat": 35, "02aab": 35, "larger": [35, 69, 79, 204, 211, 234, 251, 264, 314, 330, 463, 466, 478, 516, 596, 613, 615, 808, 857, 879, 941, 943, 1008, 1028, 1041, 1191], "late": [35, 172, 174, 297, 299, 757, 758, 943, 999, 1043, 1060, 1077, 1192], "02aad": 35, "ldot": 35, "022d6": [35, 38], "le": [35, 516], "02266": [35, 38], "02a8b": [35, 38], "022da": [35, 38], "02a7d": [35, 38], "lescc": 35, "02aa8": 35, "lesdot": 35, "02a7f": 35, "lesdoto": 35, "02a81": 35, "lesdotor": 35, "02a83": 35, "lesg": 35, "02a93": 35, "lg": [35, 312, 328, 1149], "02276": [35, 38], "lge": 35, "02a91": 35, "ll": [35, 38, 61, 63, 65, 125, 171, 172, 173, 175, 177, 179, 182, 187, 188, 200, 202, 212, 214, 228, 257, 260, 288, 291, 294, 537, 551, 613, 615, 616, 837, 863, 934, 943, 954, 969, 1016, 1019, 1025, 1058, 1152], "022d8": 35, "lsim": 35, "02272": [35, 38], "lsime": 35, "02a8d": 35, "lsimg": 35, "02a8f": 35, "0226a": [35, 38], "ltcc": 35, "02aa6": 35, "ltcir": 35, "02a79": 35, "ltdot": 35, "ltlarr": 35, "02976": 35, "ltquest": 35, "02a7b": 35, "ltrie": 35, "022b4": [35, 38], "normal": [35, 38, 89, 153, 160, 172, 174, 179, 187, 190, 195, 204, 264, 454, 481, 486, 491, 610, 612, 853, 869, 874, 995, 1009, 1062, 1142, 1155, 1169, 1181], "mcomma": 35, "02a29": 35, "comma": [35, 36, 210, 223, 244, 324, 1144], "mddot": 35, "0223a": 35, "mid": 35, "02223": [35, 38], "mlcp": 35, "02adb": 35, "transvers": 35, "intersect": [35, 38, 228, 252, 324, 1084], "model": [35, 123, 275, 290, 296, 299, 453, 1066, 1139, 1142, 1161], "022a7": 35, "mstpo": 35, "0223e": 35, "invert": [35, 36, 62, 204, 977], "lazi": [35, 241, 247, 257, 260, 406, 753], "02abb": 35, "0227a": [35, 38], "prap": 35, "02ab7": [35, 38], "prcue": 35, "pre": [35, 174, 204, 233, 416, 598, 600, 604, 650, 651, 652, 702, 743, 744, 897, 1059, 1074, 1148], "02ab3": 35, "02aaf": [35, 38], "singl": [35, 36, 38, 44, 61, 62, 63, 85, 107, 111, 112, 115, 120, 121, 125, 130, 133, 143, 150, 172, 174, 192, 231, 232, 241, 245, 247, 253, 254, 257, 260, 264, 288, 392, 398, 410, 411, 423, 469, 472, 476, 478, 481, 507, 520, 605, 659, 733, 744, 752, 754, 765, 796, 806, 808, 870, 872, 873, 874, 897, 902, 903, 904, 906, 922, 934, 942, 946, 982, 993, 995, 996, 1005, 1008, 1012, 1014, 1017, 1023, 1027, 1028, 1029, 1042, 1079, 1080, 1087, 1103, 1109, 1142, 1149, 1157, 1160, 1164, 1169, 1170, 1177], "prsim": 35, "0227e": [35, 38], "prurel": 35, "022b0": 35, "ratio": [35, 264], "02236": 35, "rtrie": 35, "022b5": [35, 38], "AS": [35, 38, 960], "rtriltri": 35, "029ce": 35, "triangl": [35, 38, 572], "samalg": 35, "02210": [35, 38], "coproduct": [35, 38], "02abc": 35, "0227b": [35, 38], "scap": 35, "02ab8": [35, 38], "sccue": 35, "0227d": [35, 38], "sce": 35, "02ab4": 35, "02ab0": [35, 38], "scsim": 35, "0227f": [35, 38], "sdote": 35, "02a66": 35, "sfrown": 35, "simg": 35, "02a9e": 35, "02aa0": 35, "siml": 35, "02a9d": 35, "02a9f": 35, "smid": 35, "02323": 35, "smt": 35, "02aaa": 35, "smaller": [35, 250, 264, 392, 454, 463, 478, 1029], "smte": 35, "02aac": 35, "spar": [35, 290, 478], "02225": [35, 38], "parallel": [35, 38, 61, 63, 73, 74, 75, 79, 92, 178, 201, 204, 208, 210, 245, 300, 301, 322, 486, 766, 790, 827, 829, 837, 840, 873, 881, 982, 993, 996, 1043, 1045, 1046, 1131, 1136, 1193, 1194, 1201, 1205], "sqsub": 35, "0228f": [35, 38], "squar": [35, 36, 38, 62, 192, 205, 215, 231, 237, 244, 247, 252, 254, 260, 264, 273, 285, 299, 306, 324, 328, 334, 340, 346, 504, 615, 1037, 1086, 1090, 1157], "sqsube": 35, "02291": [35, 38], "sqsup": 35, "02290": [35, 38], "sqsupe": 35, "02292": [35, 38], "ssmile": 35, "sub": [35, 248, 260, 306, 499, 516, 596, 775, 1033, 1072, 1081, 1087, 1178], "022d0": [35, 38], "sube": 35, "02ac5": [35, 38], "subedot": 35, "02ac3": 35, "submult": 35, "02ac1": 35, "subplu": 35, "02abf": 35, "subrarr": 35, "02979": 35, "subsim": 35, "02ac7": 35, "subsub": 35, "02ad5": 35, "subsup": 35, "02ad3": 35, "sup": [35, 967], "022d1": [35, 38], "supdsub": 35, "02ad8": 35, "supe": 35, "02ac6": [35, 38], "supedot": 35, "02ac4": 35, "suphsol": 35, "02283": [35, 38], "0002f": [35, 36], "suphsub": 35, "02ad7": 35, "suplarr": 35, "0297b": 35, "supmult": 35, "02ac2": 35, "supplu": 35, "02ac0": 35, "supsim": 35, "02ac8": 35, "supsub": 35, "02ad4": 35, "supsup": 35, "02ad6": 35, "thkap": 35, "thksim": 35, "0223c": [35, 38], "topfork": 35, "02ada": 35, "tee": [35, 881], "trie": 35, "0225c": [35, 38], "delta": [35, 38, 123, 187, 237], "twixt": 35, "0226c": [35, 38], "vbar": 35, "02aeb": 35, "02ae8": 35, "underbar": 35, "vbarv": 35, "02ae9": 35, "vdash": 35, "022ab": 35, "022a9": 35, "022a8": [35, 38], "022a2": [35, 38], "vdashl": 35, "02ae6": 35, "veebar": 35, "022bb": 35, "xor": [35, 1054], "vltri": 35, "022b2": [35, 38], "vprop": 35, "0221d": [35, 38], "vrtri": 35, "022b3": [35, 38], "vvdash": 35, "022aa": 35, "\u00bd": 36, "\u00bc": 36, "\u215b": 36, "\u00be": 36, "\u215c": 36, "\u215d": 36, "\u215e": 36, "_": [36, 39, 62, 192, 193, 228, 241, 244, 245, 247, 254, 257, 260, 267, 270, 282, 306, 328, 350, 361, 409, 478, 608, 731, 827, 897, 999, 1025, 1043, 1045], "\u00b5": 36, "\u03c9": 36, "\u00aa": 36, "\u00ba": 36, "\u00b9": 36, "\u00b2": 36, "\u00b3": 36, "amp": [36, 244], "00026": 36, "ampersand": [36, 707], "apo": 36, "00027": 36, "apostroph": 36, "ast": [36, 516], "0002a": 36, "brvbar": 36, "000a6": 36, "broken": [36, 452, 453, 722, 829, 842, 1047, 1114, 1144], "bsol": 36, "cent": 36, "000a2": 36, "0003a": 36, "0002c": 36, "commat": 36, "00040": 36, "commerci": [36, 179, 815, 876], "AT": 36, "000a9": 36, "curren": 36, "000a4": 36, "currenc": [36, 290, 478], "02193": [36, 38], "deg": 36, "000b0": 36, "degre": [36, 495, 506, 537, 648, 943, 1060], "000f7": [36, 38], "00024": 36, "0003d": 36, "excl": 36, "00021": 36, "frac12": 36, "000bd": 36, "vulgar": 36, "fraction": [36, 264, 355], "ONE": [36, 695], "frac14": 36, "000bc": 36, "quarter": 36, "frac18": 36, "0215b": 36, "eighth": 36, "frac34": 36, "000be": 36, "frac38": 36, "0215c": 36, "frac58": 36, "0215d": 36, "frac78": 36, "0215e": 36, "0003e": 36, "horbar": 36, "02015": 36, "horizont": [36, 411], "hyphen": 36, "02010": 36, "iexcl": 36, "000a1": 36, "iquest": 36, "000bf": 36, "laquo": 36, "000ab": 36, "quotat": [36, 38], "lcub": 36, "0007b": [36, 38], "curli": [36, 38], "bracket": [36, 38, 1063], "ldquo": 36, "0201c": [36, 38], "lowbar": 36, "0005f": 36, "low": [36, 120, 126, 168, 215, 244, 264, 281, 404, 436, 472, 476, 481, 504, 527, 540, 543, 544, 548, 752, 754, 819, 833, 873, 941, 997, 1013, 1093, 1191], "lpar": 36, "00028": 36, "parenthesi": 36, "lsqb": 36, "0005b": [36, 38], "lsquo": 36, "02018": [36, 38], "0003c": 36, "micro": [36, 241, 247, 257, 260], "000b5": 36, "middot": 36, "000b7": [36, 38], "middl": [36, 38, 39, 62, 182, 193, 248, 264, 316, 319, 349, 350, 456, 476, 543, 572, 815, 934, 944, 950, 1011, 1045], "nbsp": [36, 350], "000a0": [36, 38], "NO": [36, 38, 143, 183, 224, 366, 675, 943, 1008], "space": [36, 38, 62, 79, 100, 111, 112, 125, 147, 168, 172, 173, 174, 179, 192, 195, 219, 233, 260, 278, 285, 287, 288, 306, 308, 309, 352, 353, 360, 371, 372, 380, 399, 418, 420, 439, 500, 505, 514, 518, 542, 543, 544, 545, 546, 547, 548, 549, 552, 594, 603, 612, 647, 767, 789, 790, 798, 835, 850, 864, 865, 866, 867, 871, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 911, 912, 913, 914, 915, 917, 933, 942, 945, 946, 947, 948, 949, 956, 960, 961, 962, 963, 964, 972, 974, 979, 987, 988, 990, 991, 994, 996, 1004, 1011, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1028, 1043, 1046, 1080], "000ac": 36, "NOT": [36, 38, 202, 398, 437, 482, 521, 522, 535, 536, 808, 925, 1155], "num": [36, 177, 191, 192, 205, 215, 231, 245, 247, 252, 254, 260, 264, 282, 285, 324, 328, 346, 350, 442, 627, 629, 711, 712, 713, 714, 723, 743, 774, 776, 778, 780, 925, 930, 1038, 1144], "00023": 36, "ohm": 36, "02126": 36, "ordf": 36, "000aa": 36, "feminin": 36, "ordin": [36, 260, 267, 270, 306, 312, 328, 334, 340, 1149], "indic": [36, 223, 241, 247, 252, 257, 260, 296, 650, 798], "ordm": 36, "000ba": 36, "masculin": 36, "para": 36, "000b6": 36, "pilcrow": 36, "percnt": 36, "00025": 36, "percent": [36, 264], "period": [36, 85, 134, 138, 189, 212, 470, 603, 769, 847, 934, 942, 961, 971, 993, 995, 1008, 1164], "0002e": 36, "full": [36, 135, 143, 153, 190, 235, 239, 285, 415, 430, 458, 463, 566, 577, 612, 716, 753, 766, 790, 876, 881, 942, 984, 990, 1035, 1054, 1087, 1144, 1152], "stop": [36, 166, 177, 233, 260, 297, 299, 301, 306, 324, 334, 354, 481, 521, 535, 831, 934, 1009, 1034, 1158, 1176], "0002b": 36, "plusmn": 36, "000b1": [36, 38], "000a3": 36, "quest": 36, "0003f": 36, "quot": [36, 192, 240, 243, 247, 254, 260, 268, 411, 862, 925, 926, 944, 1079], "00022": 36, "raquo": 36, "000bb": 36, "rcub": 36, "0007d": [36, 38], "rdquo": 36, "0201d": [36, 38], "reg": 36, "000ae": [36, 38], "rpar": 36, "00029": 36, "rsqb": 36, "0005d": [36, 38], "rsquo": 36, "02019": [36, 38], "sect": 36, "000a7": 36, "section": [36, 38, 89, 172, 176, 177, 178, 187, 196, 209, 233, 291, 294, 297, 387, 580, 598, 680, 765, 827, 829, 897, 940, 941, 957, 1011, 1012, 1013, 1015, 1021, 1027, 1028, 1029, 1169], "semi": [36, 292, 326, 508, 752, 979, 1030], "0003b": 36, "semicolon": [36, 481, 1144], "shy": 36, "000ad": 36, "soft": [36, 169, 376, 835], "sol": 36, "sung": 36, "0266a": 36, "sup1": 36, "000b9": 36, "superscript": 36, "sup2": 36, "000b2": 36, "sup3": 36, "000b3": 36, "000d7": 36, "trade": 36, "02122": 36, "02191": [36, 38], "verbar": 36, "0007c": [36, 38], "000a5": 36, "lorem": 37, "ipsum": 37, "h\u00f6dlmoser": 37, "anywai": [37, 43, 53, 60, 153, 171, 173, 174, 183, 202, 204, 224, 233, 234, 260, 418, 466, 472, 476, 482, 598, 604, 613, 615, 616, 694, 702, 705, 709, 743, 744, 754, 829, 837, 876, 897, 987, 1043, 1155, 1169], "hmm": [37, 169, 178, 191, 202, 583, 716, 1008], "annoi": [37, 43, 355, 478, 694, 1169], "thing": [37, 40, 42, 43, 49, 101, 138, 165, 171, 172, 174, 175, 176, 177, 178, 179, 183, 192, 196, 200, 203, 204, 208, 212, 224, 241, 247, 248, 250, 257, 260, 270, 323, 333, 358, 416, 432, 436, 460, 466, 469, 476, 500, 504, 572, 579, 580, 596, 598, 605, 610, 612, 634, 694, 716, 733, 757, 766, 788, 796, 801, 833, 837, 862, 876, 881, 930, 934, 935, 962, 967, 990, 995, 1011, 1023, 1027, 1028, 1034, 1048, 1062, 1085, 1176, 1194], "thin": [37, 38], "border": 37, "anfrag": [37, 1185, 1186, 1187, 1188, 1193, 1195, 1196, 1200, 1201, 1202, 1203, 1205, 1206, 1207], "dauer": [37, 1185, 1186, 1187, 1188, 1193, 1195, 1196, 1200, 1201, 1202, 1203, 1205, 1206, 1207], "tage": [37, 197, 199, 207, 386, 1185, 1186, 1187, 1188, 1193, 1195, 1196, 1200, 1202, 1203, 1205, 1206, 1207], "sysprog": [37, 168, 169, 288, 388, 790, 844, 849, 933, 974, 975, 978, 1202, 1203, 1205, 1206], "catcher": 37, "somehow": [37, 42, 131, 138, 142, 152, 153, 173, 326, 610, 845, 1164, 1165], "einf\u00fchrungskur": [37, 1185, 1202, 1203, 1205, 1206], "richtet": [37, 1187, 1202], "kennen": [37, 148, 370, 1202], "lernen": [37, 1202], "zusammenh\u00e4ng": [37, 1202], "grundpfeil": [37, 1202], "erkl\u00e4rt": [37, 192, 195, 199, 1186, 1202, 1206, 1207], "bild": [37, 195, 1202], "orientieren": [37, 1202], "zurechtfinden": [37, 148, 370, 1202], "somedai": 37, "better": [37, 57, 60, 115, 116, 124, 142, 153, 166, 168, 169, 173, 177, 183, 184, 194, 204, 205, 207, 208, 210, 211, 212, 215, 216, 229, 233, 239, 241, 242, 244, 245, 250, 251, 252, 254, 255, 258, 261, 264, 269, 273, 281, 288, 301, 305, 311, 349, 395, 407, 415, 422, 431, 436, 437, 438, 444, 448, 451, 455, 456, 464, 466, 468, 473, 474, 477, 481, 486, 487, 492, 494, 572, 599, 607, 621, 634, 651, 674, 686, 689, 694, 696, 734, 746, 757, 787, 789, 790, 837, 916, 942, 943, 963, 979, 982, 1008, 1009, 1037, 1048, 1066, 1080, 1093, 1132, 1133, 1136, 1141, 1143, 1148, 1154, 1169, 1178], "yet": [37, 79, 162, 172, 179, 182, 192, 194, 261, 262, 272, 285, 323, 433, 466, 494, 503, 516, 518, 553, 554, 566, 572, 665, 768, 837, 854, 864, 865, 942, 950, 954, 1008, 1035, 1065, 1093, 1160, 1169, 1178], "redefin": 37, "wrap": [37, 62, 231, 269, 323, 515, 754, 760, 837, 1161], "look": [37, 42, 43, 45, 61, 63, 83, 90, 103, 125, 130, 138, 143, 153, 165, 166, 171, 172, 173, 174, 175, 177, 179, 182, 187, 192, 200, 204, 208, 211, 223, 229, 233, 258, 288, 291, 294, 297, 298, 316, 319, 323, 337, 354, 387, 450, 458, 466, 472, 476, 478, 481, 482, 489, 537, 552, 553, 566, 583, 609, 621, 633, 685, 698, 722, 754, 760, 761, 791, 796, 806, 833, 837, 864, 865, 869, 873, 876, 887, 889, 894, 901, 909, 924, 935, 941, 942, 950, 967, 977, 1004, 1005, 1028, 1032, 1042, 1059, 1062, 1101, 1105, 1114, 1136, 1143, 1144, 1155, 1171, 1189, 1192], "mdbootstrap": 37, "jqueri": 37, "icon": 37, "longrightarrow": 38, "rightarrow": 38, "doubleleftrightarrow": 38, "02220": 38, "applyfunct": 38, "02061": 38, "applic": [38, 62, 79, 95, 138, 157, 172, 177, 189, 202, 224, 319, 323, 326, 366, 387, 462, 465, 472, 553, 630, 633, 701, 742, 875, 935, 942, 954, 979, 1143], "approx": [38, 1124, 1169], "approxeq": 38, "assign": [38, 98, 192, 193, 194, 199, 205, 215, 222, 230, 241, 244, 247, 250, 252, 256, 257, 262, 264, 268, 292, 296, 297, 299, 324, 329, 340, 347, 351, 369, 375, 376, 398, 415, 421, 422, 431, 438, 444, 445, 448, 451, 455, 460, 462, 464, 468, 473, 474, 508, 515, 521, 522, 530, 535, 536, 598, 599, 602, 609, 665, 674, 681, 691, 695, 696, 698, 702, 709, 732, 734, 739, 748, 754, 786, 787, 789, 790, 941, 943, 982, 993, 996, 998, 1075, 1086, 1158, 1160], "backcong": 38, "backepsilon": 38, "backprim": 38, "02035": 38, "backsim": 38, "backsimeq": 38, "backslash": [38, 411, 921, 1079], "02216": 38, "barwedg": 38, "02305": 38, "02235": 38, "bernoulli": 38, "0212c": 38, "bigcap": 38, "022c2": 38, "bigcirc": 38, "025ef": 38, "bigcup": 38, "022c3": 38, "union": [38, 228, 236, 252, 324, 454, 771, 775, 778, 779, 780, 781, 789, 790, 1084, 1190], "bigodot": 38, "02a00": 38, "bigoplu": 38, "02a01": 38, "bigotim": 38, "02a02": 38, "bigsqcup": 38, "02a06": 38, "bigstar": 38, "02605": 38, "bigtriangledown": 38, "025bd": 38, "white": [38, 296, 400], "bigtriangleup": 38, "025b3": 38, "biguplu": 38, "02a04": 38, "bigve": 38, "022c1": 38, "logic": [38, 126, 147, 174, 358, 406, 422, 431, 436, 438, 444, 448, 451, 455, 460, 464, 468, 473, 474, 501, 518, 696, 734, 787, 789, 790, 1155], "bigwedg": 38, "022c0": 38, "bkarow": 38, "blacklozeng": 38, "029eb": 38, "lozeng": 38, "blacksquar": 38, "025aa": 38, "blacktriangl": 38, "025b4": 38, "blacktriangledown": 38, "025be": 38, "blacktriangleleft": 38, "025c2": 38, "blacktriangleright": 38, "025b8": 38, "bot": [38, 1169], "022a5": 38, "boxminu": 38, "0229f": 38, "boxplu": 38, "0229e": 38, "boxtim": 38, "022a0": 38, "breve": 38, "002d8": 38, "bullet": [38, 174, 1143], "02022": 38, "bumpeq": 38, "capitaldifferentiald": 38, "02145": 38, "struck": 38, "ital": 38, "d": [38, 86, 98, 108, 122, 125, 172, 173, 174, 175, 191, 194, 202, 205, 210, 215, 220, 222, 228, 231, 234, 237, 238, 242, 244, 245, 247, 252, 254, 257, 260, 264, 267, 270, 282, 285, 288, 292, 301, 302, 305, 306, 312, 320, 324, 328, 334, 340, 346, 350, 361, 363, 364, 369, 392, 399, 400, 402, 406, 433, 437, 466, 476, 478, 492, 499, 504, 598, 604, 611, 665, 666, 671, 672, 674, 678, 704, 741, 753, 754, 766, 768, 810, 831, 845, 861, 864, 865, 874, 876, 880, 881, 894, 897, 898, 919, 923, 925, 930, 936, 941, 942, 943, 955, 960, 1008, 1011, 1033, 1035, 1061, 1067, 1072, 1074, 1075, 1079, 1080, 1083, 1104], "caylei": 38, "0212d": 38, "letter": [38, 409, 1065], "cedilla": 38, "000b8": 38, "centerdot": 38, "checkmark": 38, "02713": 38, "circeq": 38, "circlearrowleft": 38, "circlearrowright": 38, "circledast": 38, "0229b": 38, "circledcirc": 38, "0229a": 38, "circleddash": 38, "0229d": 38, "circledot": 38, "02299": 38, "circledr": 38, "024c8": 38, "latin": [38, 251, 312, 328], "circleminu": 38, "02296": 38, "circleplu": 38, "02295": 38, "circletim": 38, "02297": 38, "clockwisecontourintegr": 38, "02232": 38, "contour": 38, "closecurlydoublequot": 38, "closecurlyquot": 38, "clubsuit": 38, "02663": 38, "suit": [38, 44, 98, 130, 168, 208, 277, 281, 377, 454, 463, 494, 495, 496, 498, 499, 501, 503, 516, 518, 519, 537, 550, 551, 552, 553, 554, 613, 614, 615, 616, 705, 706, 743, 752, 753, 784, 785, 786, 788, 1170, 1177, 1192, 1207], "coloneq": 38, "complement": [38, 107, 415], "02201": 38, "complex": [38, 70, 172, 183, 187, 204, 210, 230, 247, 252, 254, 260, 264, 268, 270, 285, 292, 306, 334, 369, 390, 433, 445, 460, 769, 941, 942, 966, 982, 1005, 1066, 1075, 1182, 1192], "02102": 38, "02261": 38, "ident": [38, 256, 306, 318, 589, 1054, 1056, 1075], "contourintegr": 38, "0222e": 38, "counterclockwisecontourintegr": 38, "02233": 38, "cupcap": 38, "0224d": 38, "curlyeqprec": 38, "curlyeqsucc": 38, "curlyve": 38, "022ce": 38, "curlywedg": 38, "022cf": 38, "curvearrowleft": 38, "curvearrowright": 38, "dbkarow": 38, "ddagger": 38, "02021": 38, "ddotseq": 38, "02207": 38, "nabla": 38, "diacriticalacut": 38, "000b4": 38, "acut": 38, "accent": 38, "diacriticaldot": 38, "002d9": 38, "diacriticaldoubleacut": 38, "002dd": 38, "diacriticalgrav": 38, "00060": 38, "grave": 38, "diacriticaltild": 38, "002dc": 38, "022c4": 38, "diamondsuit": 38, "02666": 38, "differentiald": 38, "02146": 38, "digamma": 38, "003dd": 38, "div": [38, 466, 516], "divideontim": 38, "022c7": 38, "doteq": 38, "doteqdot": 38, "dotequ": 38, "dotminu": 38, "02238": 38, "dotplu": 38, "02214": 38, "dotsquar": 38, "022a1": 38, "doublebarwedg": 38, "02306": 38, "doublecontourintegr": 38, "0222f": 38, "surfac": [38, 204, 873, 941, 942, 1141, 1143], "doubledot": 38, "000a8": 38, "diaeresi": 38, "doubledownarrow": 38, "doubleleftarrow": 38, "021d0": 38, "doubleleftte": 38, "doublelongleftarrow": 38, "doublelongleftrightarrow": 38, "doublelongrightarrow": 38, "doublerightarrow": 38, "021d2": 38, "doublerightte": 38, "doubleuparrow": 38, "doubleupdownarrow": 38, "doubleverticalbar": 38, "downarrow": 38, "downarrowuparrow": 38, "downdownarrow": 38, "downharpoonleft": 38, "downharpoonright": 38, "downleftvector": 38, "downrightvector": 38, "downte": 38, "022a4": 38, "downteearrow": 38, "021a7": 38, "drbkarow": 38, "02208": 38, "emptyset": 38, "02205": 38, "eqcirc": 38, "eqcolon": 38, "eqsim": 38, "eqslantgtr": 38, "eqslantless": 38, "equaltild": 38, "equilibrium": 38, "02203": 38, "THERE": [38, 600], "02130": 38, "exponential": 38, "02147": 38, "fallingdotseq": 38, "foral": [38, 1086], "02200": 38, "FOR": [38, 183, 205, 212], "fouriertrf": 38, "02131": 38, "geq": 38, "02265": 38, "geqq": 38, "geqslant": 38, "ggg": 38, "gnapprox": 38, "02a8a": 38, "gneq": 38, "02a88": 38, "gneqq": 38, "02269": 38, "BUT": 38, "greaterequ": 38, "greaterequalless": 38, "greaterfullequ": 38, "greaterless": 38, "greaterslantequ": 38, "greatertild": 38, "gtrapprox": 38, "gtrdot": 38, "gtreqless": 38, "gtreqqless": 38, "gtrless": 38, "gtrsim": 38, "gvertneqq": 38, "hacek": 38, "002c7": 38, "caron": 38, "hbar": 38, "0210f": 38, "planck": 38, "constant": [38, 233, 241, 247, 250, 251, 252, 257, 260, 264, 302, 323, 398, 406, 407, 412, 422, 426, 431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 539, 646, 696, 707, 734, 744, 746, 787, 789, 790], "pi": [38, 67, 79, 107, 125, 143, 147, 184, 188, 214, 244, 247, 288, 327, 375, 386, 388, 412, 439, 442, 460, 550, 553, 554, 609, 629, 709, 770, 790, 814, 818, 841, 846, 852, 855, 858, 933, 940, 942, 943, 954, 999, 1012, 1014, 1021, 1022, 1025, 1066], "heartsuit": 38, "02665": 38, "hilbertspac": 38, "0210b": 38, "h": [38, 42, 44, 98, 115, 121, 125, 134, 138, 139, 140, 141, 143, 174, 179, 195, 198, 200, 205, 211, 215, 220, 233, 234, 241, 244, 245, 252, 254, 264, 277, 288, 299, 334, 337, 346, 350, 391, 392, 394, 398, 400, 402, 410, 433, 434, 436, 442, 449, 457, 459, 463, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 494, 495, 496, 497, 498, 499, 501, 503, 506, 515, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 539, 540, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 560, 562, 563, 564, 565, 567, 568, 569, 570, 571, 573, 579, 580, 582, 583, 586, 589, 591, 596, 597, 598, 599, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 616, 674, 683, 684, 685, 686, 687, 688, 689, 690, 699, 701, 704, 705, 706, 722, 723, 726, 737, 740, 743, 744, 748, 752, 753, 754, 755, 757, 766, 768, 770, 774, 776, 778, 779, 780, 781, 784, 785, 786, 788, 796, 801, 805, 806, 808, 815, 817, 819, 821, 823, 825, 829, 831, 833, 842, 847, 850, 851, 854, 856, 857, 863, 874, 881, 894, 897, 919, 925, 935, 937, 941, 957, 959, 960, 961, 963, 964, 966, 967, 968, 969, 970, 973, 975, 978, 992, 995, 999, 1001, 1003, 1004, 1008, 1009, 1011, 1012, 1013, 1014, 1019, 1023, 1026, 1027, 1029, 1072, 1087, 1164, 1171, 1176, 1178, 1181], "hksearow": 38, "hkswarow": 38, "hookleftarrow": 38, "hookrightarrow": 38, "hslash": 38, "humpdownhump": 38, "humpequ": 38, "iiiint": 38, "02a0c": 38, "quadrupl": 38, "iiint": 38, "0222d": 38, "02111": 38, "imaginaryi": 38, "02148": 38, "imaglin": 38, "02110": 38, "imagpart": 38, "impli": [38, 758, 1164], "02124": 38, "0222b": 38, "interc": 38, "022ba": 38, "intercal": 38, "intprod": 38, "02a3c": 38, "interior": 38, "invisiblecomma": 38, "02063": 38, "invis": [38, 522], "invisibletim": 38, "02062": 38, "langl": 38, "02329": 38, "laplacetrf": 38, "02112": 38, "lbrace": 38, "lbrack": 38, "leftanglebracket": 38, "leftarrow": 38, "leftarrowbar": 38, "021e4": 38, "leftarrowrightarrow": 38, "leftarrowtail": 38, "leftceil": 38, "02308": 38, "ceil": [38, 232, 245, 264, 334], "leftdoublebracket": 38, "0301a": 38, "leftdownvector": 38, "leftfloor": 38, "0230a": 38, "leftharpoondown": 38, "leftharpoonup": 38, "leftleftarrow": 38, "leftrightarrow": 38, "leftrightharpoon": 38, "leftrightsquigarrow": 38, "leftte": 38, "leftteearrow": 38, "021a4": 38, "leftthreetim": 38, "022cb": 38, "semidirect": 38, "lefttriangl": 38, "lefttriangleequ": 38, "leftupvector": 38, "leftvector": 38, "leq": 38, "02264": 38, "leqq": 38, "leqslant": 38, "lessapprox": 38, "lessdot": 38, "lesseqgtr": 38, "lesseqqgtr": 38, "lessequalgreat": 38, "lessfullequ": 38, "lessgreat": 38, "lessgtr": 38, "lesssim": 38, "lessslantequ": 38, "lesstild": 38, "llcorner": 38, "0231e": 38, "bottom": [38, 219, 323, 537, 550, 835, 897, 916, 934, 1034], "corner": [38, 233, 296, 387, 399, 479, 491, 550, 766], "lleftarrow": 38, "lmoustach": 38, "023b0": 38, "upper": [38, 205, 228, 252, 254, 260, 270, 285, 292, 306, 328, 340, 354, 363, 392, 396, 412, 436, 996, 1097], "lower": [38, 174, 228, 241, 247, 252, 257, 260, 264, 270, 285, 306, 354, 363, 392, 396, 412, 436, 496, 640, 997, 1005, 1054, 1160], "lnapprox": 38, "02a89": 38, "lneq": 38, "02a87": 38, "lneqq": 38, "02268": 38, "longleftarrow": 38, "longleftrightarrow": 38, "longmapsto": 38, "looparrowleft": 38, "looparrowright": 38, "lowerleftarrow": 38, "lowerrightarrow": 38, "025ca": 38, "lrcorner": 38, "0231f": 38, "lvertneqq": 38, "maltes": 38, "02720": 38, "mapsto": 38, "measuredangl": 38, "02221": 38, "measur": [38, 98, 130, 133, 143, 174, 264, 297, 301, 323, 333, 462, 469, 515, 519, 541, 542, 543, 544, 545, 546, 547, 548, 552, 553, 594, 672, 774, 790, 796, 863, 872, 963, 1004, 1028, 1141, 1143], "mellintrf": 38, "02133": 38, "minusplu": 38, "02213": 38, "napprox": 38, "02249": 38, "0266e": 38, "music": [38, 174, 302], "02115": 38, "nearrow": 38, "negativemediumspac": 38, "0200b": 38, "width": [38, 241, 247, 250, 251, 257, 260, 282, 290, 306, 392, 415, 504, 589, 613, 934, 1005, 1080, 1144, 1193, 1200], "negativethickspac": 38, "negativethinspac": 38, "negativeverythinspac": 38, "nestedgreatergreat": 38, "nestedlessless": 38, "nexist": 38, "02204": 38, "ngeq": 38, "02271": 38, "neither": [38, 192, 494, 521, 535, 705, 882, 884, 885, 967, 1076], "nor": [38, 192, 248, 521, 535, 605, 705, 882, 884, 885, 934, 954, 967, 1076], "ngeqq": 38, "ngeqslant": 38, "ngtr": 38, "0226f": 38, "nleftarrow": 38, "nleftrightarrow": 38, "nleq": 38, "02270": 38, "nleqq": 38, "nleqslant": 38, "nless": 38, "0226e": 38, "nonbreakingspac": 38, "notcongru": 38, "02262": 38, "notdoubleverticalbar": 38, "02226": 38, "notel": 38, "02209": 38, "notequ": 38, "02260": 38, "notequaltild": 38, "notexist": 38, "notgreat": 38, "notgreaterequ": 38, "notgreaterfullequ": 38, "notgreatergreat": 38, "notgreaterless": 38, "02279": 38, "notgreaterslantequ": 38, "notgreatertild": 38, "02275": 38, "nothumpdownhump": 38, "notlefttriangl": 38, "022ea": 38, "notlefttriangleequ": 38, "022ec": 38, "notless": 38, "notlessequ": 38, "notlessgreat": 38, "02278": 38, "notlessless": 38, "notlessslantequ": 38, "notlesstild": 38, "02274": 38, "notpreced": 38, "02280": 38, "notprecedesequ": 38, "notprecedesslantequ": 38, "022e0": 38, "notreverseel": 38, "0220c": 38, "notrighttriangl": 38, "022eb": 38, "notrighttriangleequ": 38, "022ed": 38, "notsquaresubsetequ": 38, "022e2": 38, "notsquaresupersetequ": 38, "022e3": 38, "notsubset": 38, "020d2": 38, "notsubsetequ": 38, "02288": 38, "notsucce": 38, "02281": 38, "notsucceedsequ": 38, "notsucceedsslantequ": 38, "022e1": 38, "notsuperset": 38, "notsupersetequ": 38, "02289": 38, "nottild": 38, "02241": 38, "nottildeequ": 38, "02244": 38, "asymptot": 38, "nottildefullequ": 38, "02247": 38, "actual": [38, 42, 43, 48, 60, 65, 174, 177, 182, 187, 204, 231, 241, 247, 250, 257, 260, 264, 291, 294, 296, 326, 372, 496, 506, 665, 672, 694, 752, 796, 934, 942, 966, 1009, 1032, 1048, 1057, 1091, 1139, 1141, 1143, 1162, 1176], "nottildetild": 38, "notverticalbar": 38, "02224": 38, "nparallel": 38, "nprec": 38, "npreceq": 38, "nrightarrow": 38, "nshortmid": 38, "nshortparallel": 38, "nsimeq": 38, "nsubset": 38, "nsubseteq": 38, "nsubseteqq": 38, "nsucc": 38, "nsucceq": 38, "nsupset": 38, "nsupseteq": 38, "nsupseteqq": 38, "ntriangleleft": 38, "ntrianglelefteq": 38, "ntriangleright": 38, "ntrianglerighteq": 38, "nwarrow": 38, "oint": 38, "opencurlydoublequot": 38, "opencurlyquot": 38, "orderof": 38, "02134": 38, "partiald": 38, "02202": 38, "partial": [38, 115, 119, 298, 327, 815, 1140], "differenti": [38, 70, 688, 756, 837, 882, 941, 1066, 1135, 1149], "plusminu": 38, "poincareplan": 38, "0210c": 38, "prec": 38, "precapprox": 38, "preccurlyeq": 38, "precedesequ": 38, "precedesslantequ": 38, "precedestild": 38, "preceq": 38, "precnapprox": 38, "02ab9": 38, "precneqq": 38, "02ab5": 38, "precnsim": 38, "022e8": 38, "precsim": 38, "02119": 38, "propto": 38, "quaternion": 38, "0210d": 38, "questeq": 38, "rangl": 38, "0232a": 38, "0211a": 38, "q": [38, 125, 212, 264, 436, 442, 596, 614, 615, 629, 757, 874, 897, 929, 1004, 1164], "rbrace": 38, "rbrack": 38, "0211c": 38, "realin": 38, "0211b": 38, "realpart": 38, "real": [38, 74, 126, 132, 136, 138, 141, 142, 143, 163, 179, 182, 187, 190, 192, 208, 229, 242, 247, 248, 255, 257, 260, 264, 269, 272, 282, 290, 296, 305, 311, 323, 346, 355, 416, 465, 472, 486, 492, 498, 515, 537, 545, 546, 547, 548, 549, 553, 595, 596, 601, 716, 731, 749, 752, 798, 837, 874, 875, 897, 934, 942, 954, 995, 1081, 1136, 1139, 1141, 1170, 1189, 1192], "0211d": 38, "reverseel": 38, "0220b": 38, "reverseequilibrium": 38, "reverseupequilibrium": 38, "rightanglebracket": 38, "rightarrowbar": 38, "021e5": 38, "rightarrowleftarrow": 38, "rightarrowtail": 38, "rightceil": 38, "02309": 38, "rightdoublebracket": 38, "0301b": 38, "rightdownvector": 38, "rightfloor": 38, "0230b": 38, "rightharpoondown": 38, "rightharpoonup": 38, "rightleftarrow": 38, "rightleftharpoon": 38, "rightrightarrow": 38, "rightsquigarrow": 38, "rightte": 38, "rightteearrow": 38, "rightthreetim": 38, "022cc": 38, "righttriangl": 38, "righttriangleequ": 38, "rightupvector": 38, "rightvector": 38, "risingdotseq": 38, "rmoustach": 38, "023b1": 38, "rrightarrow": 38, "searrow": 38, "setminu": 38, "shortdownarrow": 38, "shortleftarrow": 38, "shortmid": 38, "shortparallel": 38, "shortrightarrow": 38, "shortuparrow": 38, "simeq": 38, "02243": 38, "smallcircl": 38, "02218": 38, "smallsetminu": 38, "spadesuit": 38, "02660": 38, "sqrt": [38, 232, 245, 334, 596, 598, 606, 607, 615, 701, 716, 717, 718, 719, 720, 757], "0221a": 38, "sqsubset": 38, "sqsubseteq": 38, "sqsupset": 38, "sqsupseteq": 38, "025a1": 38, "squareintersect": 38, "02293": 38, "cap": [38, 244, 1093], "squaresubset": 38, "squaresubsetequ": 38, "squaresuperset": 38, "squaresupersetequ": 38, "squareunion": 38, "02294": 38, "cup": [38, 302, 340], "022c6": 38, "straightepsilon": 38, "003f5": 38, "straightphi": 38, "003d5": 38, "phi": 38, "subseteq": 38, "02286": 38, "subseteqq": 38, "subsetequ": 38, "subsetneq": 38, "0228a": 38, "subsetneqq": 38, "02acb": 38, "succ": 38, "succapprox": 38, "succcurlyeq": 38, "succeedsequ": 38, "succeedsslantequ": 38, "succeedstild": 38, "succeq": 38, "succnapprox": 38, "02aba": 38, "succneqq": 38, "02ab6": 38, "succnsim": 38, "022e9": 38, "succsim": 38, "suchthat": 38, "02211": 38, "summat": 38, "supersetequ": 38, "02287": 38, "supset": 38, "supseteq": 38, "supseteqq": 38, "supsetneq": 38, "0228b": 38, "supsetneqq": 38, "02acc": 38, "swarrow": 38, "therefor": [38, 162, 172], "02234": 38, "thickapprox": 38, "thicksim": 38, "thinspac": 38, "02009": 38, "tildeequ": 38, "tildefullequ": 38, "02245": 38, "tildetild": 38, "toea": 38, "tosa": 38, "025b5": 38, "triangledown": 38, "025bf": 38, "triangleleft": 38, "025c3": 38, "trianglelefteq": 38, "triangleq": 38, "triangleright": 38, "025b9": 38, "trianglerighteq": 38, "tripledot": 38, "020db": 38, "combin": [38, 86, 109, 111, 112, 147, 175, 193, 224, 280, 421, 432, 437, 454, 462, 493, 502, 514, 528, 542, 594, 629, 668, 746, 790, 819, 877, 879, 881, 897, 919, 930, 967, 968, 970, 1017, 1070, 1085, 1102, 1155, 1189], "twoheadleftarrow": 38, "twoheadrightarrow": 38, "ulcorn": 38, "0231c": 38, "unionplu": 38, "0228e": 38, "multiset": 38, "uparrow": 38, "uparrowdownarrow": 38, "updownarrow": 38, "upequilibrium": 38, "upharpoonleft": 38, "upharpoonright": 38, "upperleftarrow": 38, "upperrightarrow": 38, "upsilon": 38, "003c5": 38, "upte": 38, "upteearrow": 38, "021a5": 38, "upuparrow": 38, "urcorn": 38, "0231d": 38, "varepsilon": 38, "003b5": 38, "varkappa": 38, "003f0": 38, "kappa": 38, "varnoth": 38, "varphi": 38, "003c6": 38, "varpi": 38, "003d6": 38, "varpropto": 38, "varrho": 38, "003f1": 38, "rho": 38, "varsigma": 38, "003c2": 38, "sigma": [38, 264], "varsubsetneq": 38, "variant": [38, 115, 119, 216, 232, 245, 275, 276, 277, 336, 392, 408, 525, 589, 742, 746, 748, 771, 775, 778, 789, 790, 815, 1196, 1199], "varsubsetneqq": 38, "varsupsetneq": 38, "varsupsetneqq": 38, "vartheta": 38, "003d1": 38, "theta": 38, "vartriangleleft": 38, "vartriangleright": 38, "vee": 38, "02228": 38, "vert": 38, "02016": 38, "verticalbar": 38, "verticaltild": 38, "02240": 38, "wreath": 38, "verythinspac": 38, "0200a": 38, "hair": 38, "wedg": 38, "02227": 38, "wp": 38, "02118": 38, "wr": 38, "zeetrf": 38, "02128": 38, "restructured text": 39, "cheat sheet": 39, "restructur": 39, "guid": [39, 152, 177, 187, 208, 233, 389, 469, 547, 699, 808, 823, 876], "author": [39, 175, 182, 260, 612, 810, 941, 1091, 1145], "overridden": [39, 415, 666, 733, 1169], "titl": [39, 40, 168, 178, 242, 255, 260, 269, 272, 305, 306, 311, 1051, 1136, 1141], "favorit": [39, 204, 208, 211, 229, 233, 255, 258, 355, 837, 943, 995, 1059, 1136], "__": [39, 189, 191, 199, 306, 747, 751, 1055], "ref": [39, 125, 148, 187, 276, 277, 694, 709, 753, 785], "uniqu": [39, 187, 234, 276, 277, 279, 553, 572, 754, 766, 785, 787, 789, 790, 943, 957, 971, 1030, 1083, 1087, 1158], "across": [39, 43, 172, 179, 189, 241, 247, 257, 260, 290, 299, 323, 387, 415, 435, 459, 494, 499, 518, 581, 757, 768, 788, 864, 865, 876, 894, 941, 943, 963, 971, 1005, 1066, 1077, 1145], "tree": [39, 42, 101, 103, 125, 147, 162, 164, 173, 175, 178, 183, 187, 200, 201, 208, 232, 245, 248, 251, 255, 288, 316, 319, 353, 445, 467, 472, 484, 516, 551, 553, 650, 653, 790, 812, 815, 829, 839, 862, 864, 865, 867, 881, 897, 898, 905, 909, 911, 917, 926, 933, 942, 947, 949, 954, 974, 982, 991, 1014, 1019, 1039, 1051, 1143, 1161, 1169, 1171], "_dummi": 39, "dummi": [39, 178, 375, 376, 817, 856, 1176], "One": [39, 43, 61, 62, 63, 77, 81, 83, 98, 107, 116, 124, 172, 174, 183, 200, 211, 232, 250, 271, 272, 297, 350, 355, 369, 380, 396, 436, 449, 458, 461, 470, 472, 477, 483, 488, 494, 553, 572, 580, 595, 614, 619, 629, 634, 699, 733, 758, 768, 837, 842, 868, 870, 873, 881, 897, 941, 942, 943, 967, 979, 984, 995, 996, 1004, 1009, 1014, 1046, 1070, 1144, 1145, 1149, 1154, 1191, 1205], "a_footnot": 39, "footer": 39, "block": [39, 99, 111, 112, 148, 171, 172, 173, 174, 212, 214, 232, 239, 241, 245, 247, 257, 260, 269, 272, 281, 302, 305, 323, 354, 369, 374, 378, 392, 394, 412, 431, 437, 438, 444, 448, 451, 455, 463, 464, 466, 468, 473, 474, 501, 601, 604, 696, 722, 734, 753, 764, 765, 766, 767, 768, 787, 788, 789, 790, 823, 839, 849, 853, 867, 868, 870, 871, 873, 874, 919, 933, 942, 966, 973, 974, 979, 984, 988, 989, 994, 996, 1004, 1005, 1008, 1010, 1032, 1034, 1060, 1063, 1070, 1073, 1136], "rubric": 39, "nbsphinx": 40, "capabl": [40, 79, 172, 173, 179, 763, 837, 863, 926, 934, 942, 995, 1162, 1192], "nice": [40, 169, 172, 189, 212, 234, 299, 471, 472, 492, 540, 607, 694, 856, 863, 936, 942, 993, 1056, 1093, 1141, 1143, 1152, 1158, 1172], "few": [40, 126, 172, 173, 174, 175, 178, 179, 204, 208, 241, 390, 460, 711, 837, 875, 1034, 1038, 1170, 1194], "keep": [40, 43, 111, 112, 173, 174, 187, 196, 208, 211, 215, 231, 264, 337, 355, 380, 404, 460, 466, 467, 676, 716, 829, 837, 842, 861, 876, 879, 935, 987, 1023, 1026, 1046, 1063, 1141, 1142, 1189], "mind": [40, 131, 172, 173, 393, 760, 1063], "though": [40, 43, 45, 53, 69, 171, 172, 177, 179, 182, 183, 187, 188, 193, 200, 204, 208, 210, 211, 229, 232, 234, 245, 247, 248, 250, 255, 258, 272, 281, 290, 291, 294, 305, 326, 327, 355, 396, 406, 415, 427, 432, 494, 495, 496, 499, 508, 516, 518, 551, 552, 553, 572, 596, 598, 599, 603, 606, 609, 612, 613, 615, 616, 629, 630, 665, 672, 694, 702, 704, 711, 716, 722, 739, 743, 748, 753, 754, 757, 764, 776, 778, 791, 792, 796, 815, 829, 868, 875, 876, 879, 882, 916, 930, 934, 941, 942, 943, 953, 961, 963, 990, 995, 997, 999, 1005, 1014, 1032, 1034, 1035, 1038, 1043, 1045, 1052, 1054, 1062, 1066, 1079, 1105, 1136, 1143, 1144, 1157, 1164, 1165, 1169, 1171, 1189, 1192], "toplevel": [40, 44, 110, 125, 143, 200, 233, 282, 480, 482, 486, 487, 488, 490, 537, 810, 838, 863, 1032, 1178], "begin": [40, 42, 43, 123, 127, 128, 129, 133, 135, 136, 142, 143, 150, 171, 172, 182, 210, 231, 232, 244, 247, 260, 264, 276, 277, 281, 298, 306, 327, 386, 392, 400, 412, 415, 436, 442, 459, 460, 462, 492, 499, 589, 599, 612, 625, 627, 629, 630, 631, 633, 634, 636, 637, 638, 640, 641, 642, 643, 647, 650, 661, 694, 709, 722, 725, 729, 736, 742, 743, 746, 760, 790, 863, 897, 921, 929, 955, 963, 1039, 1063, 1085, 1136, 1170], "deeper": [40, 173, 204, 291, 294, 481, 990], "trail": [40, 176, 260, 302, 306, 324, 360, 361], "underscor": [40, 409, 1035, 1042, 1055, 1065], "ipynb": [40, 191, 211, 221, 223, 260, 270, 291, 295, 301, 305, 311, 316, 319, 323, 327, 333, 334, 339, 345, 349, 1138, 1142], "labels_": [40, 193, 195, 350], "result": [40, 79, 126, 131, 142, 165, 174, 183, 189, 191, 211, 215, 231, 241, 247, 250, 257, 260, 264, 273, 282, 302, 306, 399, 415, 450, 457, 459, 460, 466, 496, 521, 525, 612, 640, 701, 707, 716, 744, 808, 953, 999, 1027, 1039, 1054, 1068, 1074, 1086, 1144], "cluster": [40, 195, 350, 1138, 1143], "membership": [40, 193, 210, 211, 253, 508, 1067, 1084], "sequenc": [40, 107, 110, 115, 119, 165, 192, 193, 195, 205, 211, 232, 234, 243, 245, 246, 247, 250, 253, 257, 260, 264, 282, 297, 299, 306, 312, 351, 391, 445, 496, 542, 557, 558, 559, 594, 639, 658, 662, 678, 691, 699, 746, 790, 996, 1039, 1040, 1041, 1057, 1066, 1067, 1072, 1074, 1077, 1081, 1082, 1106, 1118, 1149, 1192], "bring": [40, 45, 123, 131, 143, 153, 165, 172, 174, 182, 183, 204, 208, 211, 214, 250, 288, 291, 294, 297, 299, 323, 326, 377, 382, 383, 387, 572, 611, 650, 674, 685, 693, 833, 837, 849, 941, 942, 943, 1012, 1059, 1108, 1131, 1149, 1189, 1192], "bigplan": [40, 195, 1138], "686": [40, 193, 247, 350, 1025], "unknown": [40, 290, 478, 775, 793, 942, 1048], "cmd": [40, 178, 831, 856, 1171], "color": [40, 177, 195, 350, 919, 1138, 1164], "tmp": [40, 150, 153, 168, 173, 175, 178, 215, 228, 231, 247, 252, 260, 264, 267, 270, 272, 277, 279, 282, 285, 292, 302, 306, 312, 328, 334, 340, 346, 350, 401, 443, 466, 479, 484, 485, 492, 553, 554, 674, 751, 770, 815, 837, 859, 863, 868, 877, 881, 882, 895, 896, 897, 899, 901, 902, 904, 906, 909, 916, 919, 920, 925, 946, 953, 964, 965, 967, 968, 970, 995, 1001, 1034, 1085, 1092, 1148, 1170, 1171], "craft": [41, 46, 47, 51, 53, 55, 56, 258, 300, 301, 476, 521, 758, 790, 791], "tar": [42, 60, 110, 125, 159, 168, 183, 212, 214, 278, 287, 288, 308, 309, 352, 472, 790, 837, 859, 860, 862, 867, 933, 1019, 1021, 1022, 1023, 1025, 1026, 1032, 1091, 1171, 1195], "xz": [42, 60, 175, 183, 288, 465, 1019, 1023, 1025, 1026], "push": [42, 78, 150, 176, 178, 187, 190, 233, 248, 258, 315, 331, 375, 437, 482, 483, 494, 518, 628, 631, 766, 790, 837, 979, 997, 1111, 1115, 1169], "cmakelist": [42, 44, 123, 125, 130, 143, 198, 199, 200, 201, 202, 233, 250, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 492, 537, 550, 551, 552, 553, 554, 573, 576, 579, 580, 582, 585, 588, 591, 685, 1000, 1003, 1007, 1012, 1013, 1175, 1178, 1180], "src": [42, 172, 173, 175, 233, 247, 277, 279, 285, 375, 404, 416, 466, 490, 491, 501, 537, 540, 550, 551, 552, 553, 555, 614, 631, 752, 753, 863, 881, 925, 1085, 1091, 1169], "load": [42, 43, 53, 56, 62, 76, 89, 171, 182, 183, 190, 191, 195, 211, 219, 220, 236, 237, 241, 247, 257, 260, 264, 267, 273, 282, 299, 300, 301, 317, 320, 322, 323, 340, 350, 452, 472, 484, 767, 789, 790, 793, 794, 796, 797, 799, 802, 804, 805, 807, 812, 814, 817, 818, 822, 828, 831, 833, 834, 837, 839, 841, 846, 849, 852, 855, 858, 873, 933, 942, 943, 974, 982, 988, 1011, 1028, 1136, 1154, 1194, 1203, 1205], "store": [42, 57, 62, 76, 89, 107, 130, 134, 171, 173, 190, 192, 200, 201, 231, 234, 241, 299, 300, 301, 322, 323, 400, 452, 496, 678, 722, 736, 739, 746, 767, 774, 776, 780, 789, 790, 803, 837, 876, 889, 933, 950, 974, 982, 988, 1012, 1030, 1034, 1035, 1039, 1083, 1114, 1148, 1164, 1205], "search": [42, 51, 53, 107, 153, 165, 167, 168, 172, 193, 196, 202, 204, 210, 211, 220, 231, 232, 234, 237, 241, 244, 245, 247, 250, 251, 252, 255, 257, 260, 273, 282, 285, 289, 292, 297, 302, 306, 312, 314, 330, 334, 340, 346, 436, 463, 466, 478, 542, 553, 555, 559, 594, 639, 644, 658, 662, 679, 691, 790, 815, 879, 897, 929, 990, 1012, 1025, 1042, 1071, 1142, 1169, 1191], "payload": [42, 798, 825, 935, 937], "primari": [42, 172, 183, 204, 290, 291, 294, 470, 835, 864, 865, 872, 874, 1114], "insert": [42, 62, 110, 123, 166, 171, 187, 191, 208, 210, 215, 245, 247, 250, 252, 254, 260, 264, 267, 285, 306, 312, 324, 340, 350, 369, 433, 450, 454, 470, 497, 503, 525, 531, 542, 559, 560, 561, 572, 589, 594, 630, 631, 644, 654, 655, 679, 687, 688, 689, 691, 698, 705, 707, 722, 743, 786, 788, 790, 815, 821, 831, 833, 837, 897, 941, 954, 985, 995, 1067, 1082, 1083, 1092, 1148, 1169], "const": [42, 58, 71, 98, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 121, 122, 124, 125, 130, 143, 199, 234, 250, 297, 299, 336, 404, 412, 416, 434, 436, 442, 450, 462, 464, 466, 468, 473, 474, 479, 495, 496, 497, 498, 499, 501, 503, 518, 519, 525, 526, 527, 530, 531, 532, 534, 535, 536, 542, 546, 550, 552, 553, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 568, 570, 571, 572, 580, 585, 587, 589, 594, 596, 597, 598, 599, 601, 603, 604, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 622, 623, 629, 633, 635, 636, 637, 638, 639, 645, 649, 651, 654, 655, 658, 661, 662, 665, 668, 669, 672, 674, 675, 676, 679, 680, 683, 684, 686, 687, 688, 689, 690, 691, 698, 700, 701, 702, 703, 704, 705, 706, 707, 716, 717, 718, 719, 720, 722, 724, 725, 728, 729, 730, 731, 732, 734, 736, 737, 738, 739, 741, 742, 744, 746, 750, 752, 753, 754, 755, 756, 759, 767, 768, 770, 776, 780, 784, 785, 786, 787, 788, 789, 790, 793, 796, 801, 817, 819, 823, 831, 833, 847, 851, 857, 955, 963, 967, 968, 969, 970, 973, 975, 978, 980, 982, 984, 992, 998, 1001, 1004, 1005, 1009, 1029, 1047, 1124, 1147, 1181, 1187, 1188], "care": [42, 46, 48, 81, 143, 171, 172, 174, 177, 179, 204, 212, 244, 360, 392, 415, 424, 426, 442, 466, 467, 490, 521, 522, 597, 611, 629, 672, 743, 744, 748, 757, 780, 781, 784, 791, 815, 827, 829, 837, 842, 863, 864, 865, 942, 950, 954, 966, 979, 987, 1013, 1035, 1059, 1063, 1075, 1082, 1085, 1086, 1093, 1116, 1140, 1148, 1161, 1171], "dump": [42, 172, 191, 220, 236, 237, 247, 260, 264, 267, 273, 282, 317, 320, 323, 501, 520, 521, 604, 609, 732, 752, 875, 1008, 1009], "db": [42, 50, 182, 208, 233, 234, 235, 239, 245, 258, 273, 482, 496, 497, 503, 525, 531, 686, 687, 688, 689, 690, 758, 1092], "pull": [42, 44, 50, 62, 78, 125, 126, 142, 176, 187, 224, 233, 234, 248, 354, 377, 478, 482, 494, 611, 694, 810, 837, 1039, 1042, 1160], "paramet": [42, 58, 62, 111, 112, 113, 114, 115, 116, 117, 120, 124, 130, 138, 171, 174, 179, 189, 192, 199, 200, 204, 209, 210, 211, 213, 215, 223, 224, 228, 231, 232, 233, 234, 241, 245, 247, 250, 251, 253, 256, 257, 260, 267, 270, 291, 292, 294, 296, 341, 355, 360, 369, 391, 400, 402, 406, 417, 421, 436, 437, 442, 444, 445, 448, 451, 455, 456, 462, 464, 468, 473, 474, 477, 479, 484, 540, 550, 556, 572, 586, 596, 598, 601, 605, 608, 609, 612, 616, 621, 622, 676, 682, 696, 699, 706, 722, 734, 736, 741, 754, 766, 775, 787, 789, 790, 795, 796, 803, 817, 840, 845, 850, 853, 856, 857, 877, 879, 942, 957, 980, 990, 1005, 1013, 1026, 1030, 1035, 1049, 1052, 1057, 1064, 1080, 1087, 1093, 1103, 1109, 1111, 1115, 1121, 1130, 1141, 1144, 1147, 1154, 1157, 1158, 1160, 1185, 1186], "entri": [42, 131, 169, 173, 174, 178, 236, 247, 391, 491, 507, 650, 652, 672, 825, 863, 876, 880, 881, 882, 919, 925, 957, 963, 977, 1028, 1035, 1083, 1147, 1178], "o_creat": [42, 790, 933, 963, 964, 968, 972, 974, 991, 1004], "o_trunc": [42, 48, 963], "o_wronli": [42, 790, 933, 963, 964, 966, 967, 968, 972, 973, 974, 975, 978, 991, 1004], "0666": [42, 896, 967, 968, 1004], "assert": [42, 46, 208, 232, 245, 257, 260, 274, 290, 323, 325, 478, 501, 643, 684, 687, 689, 695, 768, 961, 973, 975, 978, 1004, 1008, 1009, 1047, 1124, 1131, 1132, 1133, 1169, 1175, 1176, 1178, 1186], "ing": [42, 969], "mode": [42, 102, 125, 175, 187, 189, 224, 232, 241, 244, 245, 247, 257, 260, 264, 267, 285, 288, 292, 306, 309, 323, 340, 352, 353, 466, 542, 594, 767, 789, 790, 796, 829, 835, 863, 864, 865, 867, 870, 871, 874, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 897, 933, 936, 943, 957, 962, 963, 964, 972, 974, 988, 991, 994, 996, 1004, 1005, 1060, 1062, 1164], "binaryus": 42, "hton": [42, 960], "arpa": [42, 960], "inet": [42, 189, 960], "again": [42, 100, 125, 171, 172, 174, 177, 179, 183, 187, 188, 200, 204, 208, 210, 211, 212, 224, 233, 258, 263, 272, 278, 281, 287, 288, 305, 308, 311, 327, 352, 369, 370, 371, 374, 375, 380, 387, 388, 437, 478, 500, 504, 514, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 589, 594, 596, 598, 611, 612, 616, 626, 705, 716, 758, 766, 767, 785, 788, 789, 790, 857, 860, 864, 865, 866, 867, 870, 871, 878, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 927, 933, 943, 950, 953, 956, 958, 960, 961, 962, 964, 969, 972, 974, 975, 984, 988, 990, 991, 994, 996, 1005, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1032, 1052, 1057, 1075, 1080, 1085, 1136, 1154, 1157, 1189], "od": [42, 260], "hardwir": [42, 62, 337, 798, 959, 1052], "enter": [42, 111, 112, 134, 205, 212, 241, 246, 247, 257, 260, 269, 270, 272, 273, 290, 323, 324, 354, 369, 374, 394, 589, 612, 671, 705, 711, 722, 754, 815, 837, 853, 870, 893, 995, 996, 1070, 1123], "joerg": [42, 50, 150, 191, 205, 206, 208, 209, 211, 213, 220, 224, 228, 231, 237, 244, 247, 250, 252, 254, 257, 260, 264, 267, 270, 273, 282, 285, 292, 299, 301, 302, 306, 312, 317, 324, 328, 334, 340, 346, 350, 363, 366, 461, 488, 496, 503, 537, 553, 555, 571, 609, 643, 655, 674, 684, 685, 686, 687, 689, 706, 864, 865, 872, 874, 879, 893, 909, 922, 928, 953, 990, 1048, 1049, 1051, 1052, 1053, 1055, 1056, 1064, 1086, 1091, 1114, 1131, 1144, 1153, 1154, 1155, 1157, 1158, 1159, 1160], "huber": [42, 254, 260, 1144], "caro": [42, 244, 254, 257, 264, 267, 270, 273, 282, 285, 292, 306, 324, 334, 350, 496, 503, 555, 571, 643, 655, 687, 689, 1051, 1053, 1073, 1125, 1127, 1131, 1133, 1153, 1154, 1155, 1157, 1158, 1159, 1160], "johanna": [42, 244, 254, 257, 264, 267, 285, 292, 306, 324, 334, 350, 496, 555, 571, 643, 655, 1073, 1125, 1127, 1131, 1133, 1153, 1154, 1155, 1157, 1158, 1159, 1160], "bodi": [42, 50, 55, 111, 112, 178, 391, 392, 394, 398, 427, 437, 466, 556, 589, 598, 599, 603, 606, 676, 694, 695, 698, 757, 1039, 1170], "compil": [42, 43, 104, 105, 109, 111, 112, 115, 118, 125, 147, 173, 174, 183, 192, 199, 200, 201, 220, 234, 237, 250, 257, 273, 282, 285, 288, 289, 297, 306, 312, 314, 330, 334, 337, 340, 346, 377, 389, 402, 411, 412, 421, 424, 426, 433, 434, 443, 445, 452, 455, 458, 459, 460, 461, 462, 464, 465, 466, 468, 469, 470, 471, 473, 474, 478, 482, 485, 487, 490, 491, 494, 500, 514, 516, 521, 522, 535, 536, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 580, 586, 589, 594, 596, 599, 601, 605, 607, 611, 622, 650, 669, 676, 681, 683, 694, 695, 696, 697, 699, 701, 702, 704, 705, 707, 709, 711, 716, 719, 722, 731, 732, 734, 740, 743, 744, 746, 748, 752, 753, 787, 789, 790, 805, 806, 821, 933, 941, 1012, 1013, 1016, 1017, 1018, 1019, 1021, 1035, 1060, 1065, 1077, 1079, 1176, 1178, 1186, 1187, 1189, 1190, 1191, 1202], "still": [42, 54, 60, 160, 166, 171, 172, 173, 174, 182, 183, 192, 193, 194, 234, 244, 250, 288, 290, 360, 380, 389, 440, 452, 478, 481, 487, 540, 562, 583, 586, 604, 605, 626, 632, 665, 680, 705, 722, 739, 743, 748, 752, 753, 755, 756, 757, 800, 805, 837, 840, 880, 894, 916, 941, 942, 943, 993, 995, 997, 1008, 1030, 1038, 1041, 1047, 1060, 1063, 1066, 1091, 1127, 1150, 1158, 1178, 1186], "funni": [42, 44, 50, 101, 125, 204, 288, 353, 499, 790, 867, 905, 911, 917, 933, 1012], "temp": [42, 44, 260, 378, 752, 753, 754], "got": [42, 45, 172, 182, 234, 306, 328, 340, 436, 708, 963, 1036], "overwritten": [42, 47, 53, 55, 56, 631, 790, 964, 1042], "suspect": [42, 174, 176], "inmem": 42, "loos": [42, 43, 208, 224, 390, 415, 462, 827], "foolishli": 42, "main": [42, 50, 62, 108, 115, 121, 122, 134, 165, 174, 177, 178, 183, 211, 233, 245, 257, 258, 260, 277, 288, 296, 299, 301, 314, 316, 319, 323, 330, 369, 389, 391, 392, 394, 398, 400, 402, 403, 417, 432, 433, 434, 436, 440, 452, 459, 463, 466, 467, 470, 472, 478, 479, 481, 485, 501, 515, 520, 521, 522, 537, 538, 540, 548, 550, 552, 553, 572, 580, 583, 586, 600, 604, 605, 607, 609, 611, 612, 614, 624, 625, 626, 627, 628, 631, 632, 633, 634, 635, 637, 638, 641, 642, 643, 647, 651, 652, 653, 654, 655, 661, 665, 666, 669, 671, 672, 678, 683, 684, 685, 686, 687, 688, 689, 690, 694, 699, 709, 712, 713, 714, 717, 718, 719, 720, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 736, 738, 739, 741, 744, 746, 752, 753, 755, 756, 757, 758, 761, 766, 768, 788, 798, 805, 806, 808, 837, 874, 876, 894, 941, 943, 944, 957, 959, 960, 961, 967, 968, 969, 970, 975, 978, 979, 981, 985, 990, 992, 995, 996, 1001, 1004, 1005, 1008, 1011, 1019, 1023, 1029, 1043, 1046, 1061, 1126, 1128, 1176, 1181, 1194], "chang": [42, 45, 78, 81, 125, 127, 134, 141, 142, 171, 174, 176, 177, 178, 179, 182, 183, 187, 195, 208, 224, 233, 264, 272, 376, 415, 452, 454, 458, 461, 462, 466, 476, 479, 494, 539, 545, 550, 551, 553, 554, 605, 630, 687, 741, 766, 772, 788, 810, 815, 863, 872, 874, 876, 894, 903, 906, 921, 934, 936, 941, 942, 953, 957, 978, 1008, 1011, 1026, 1042, 1066, 1075, 1115, 1126, 1128, 1131, 1154, 1158, 1172, 1189], "errorhandl": 42, "just": [42, 46, 62, 70, 85, 109, 132, 133, 138, 162, 171, 172, 173, 174, 175, 176, 178, 179, 183, 187, 194, 196, 200, 204, 211, 234, 245, 248, 273, 314, 323, 330, 357, 398, 417, 442, 445, 454, 472, 476, 481, 491, 496, 537, 540, 550, 552, 553, 554, 577, 596, 597, 598, 604, 607, 608, 609, 612, 631, 659, 666, 672, 676, 680, 694, 701, 705, 707, 708, 722, 737, 740, 754, 756, 758, 774, 788, 795, 800, 808, 810, 817, 821, 827, 829, 837, 853, 876, 897, 900, 901, 930, 934, 942, 943, 958, 960, 961, 967, 968, 970, 979, 980, 990, 997, 1005, 1023, 1030, 1033, 1034, 1037, 1039, 1057, 1058, 1064, 1065, 1066, 1073, 1077, 1085, 1086, 1141, 1142, 1149, 1154, 1155, 1159, 1160, 1165, 1169, 1181, 1191], "silent": [42, 254, 264, 698, 941], "truncat": [42, 260, 306, 392, 413, 515, 879, 963, 1085], "faschingb": 42, "echo": [42, 147, 173, 224, 260, 288, 355, 553, 678, 810, 819, 837, 864, 865, 868, 869, 877, 881, 891, 900, 903, 907, 916, 934, 936, 941, 942, 943, 944, 964, 966, 975, 977, 978, 990, 993, 999, 1008, 1171], "success": [42, 201, 241, 247, 257, 260, 453, 482, 711, 764, 815, 819, 909, 1102], "failur": [42, 43, 241, 247, 257, 260, 272, 277, 306, 354, 462, 472, 478, 492, 550, 554, 1169, 1170, 1177, 1178, 1181], "renam": [42, 50, 57, 62, 100, 123, 125, 156, 165, 231, 278, 287, 288, 308, 309, 352, 353, 589, 741, 790, 805, 806, 867, 904, 917, 933, 1029, 1148], "most": [43, 44, 57, 61, 63, 88, 121, 123, 168, 171, 172, 174, 175, 178, 183, 194, 196, 202, 204, 208, 210, 232, 241, 244, 247, 248, 257, 258, 260, 264, 270, 290, 292, 306, 326, 327, 328, 354, 390, 398, 427, 430, 437, 452, 454, 460, 465, 466, 470, 471, 481, 495, 508, 551, 611, 612, 650, 702, 746, 751, 754, 760, 775, 815, 823, 837, 842, 862, 864, 865, 868, 875, 899, 930, 934, 941, 943, 955, 963, 969, 982, 997, 1005, 1008, 1009, 1011, 1032, 1033, 1034, 1039, 1046, 1047, 1048, 1054, 1055, 1063, 1065, 1066, 1067, 1070, 1073, 1076, 1077, 1081, 1083, 1086, 1087, 1093, 1135, 1136, 1145, 1149, 1153, 1157, 1158, 1163, 1165, 1169, 1170, 1176, 1191, 1192, 1194], "somebodi": [43, 179, 187, 200, 234, 404, 461, 482, 580, 604, 656, 716, 722, 733, 764, 827, 845, 999], "concis": [43, 171, 204, 208, 258, 327, 370, 371, 481, 837, 1136], "longer": [43, 187, 999, 1060, 1189], "necessari": [43, 60, 142, 165, 173, 179, 183, 192, 201, 215, 231, 234, 291, 294, 326, 327, 394, 404, 436, 476, 478, 482, 494, 540, 599, 603, 671, 697, 698, 732, 742, 754, 766, 833, 837, 872, 941, 943, 944, 959, 997, 1008, 1028, 1055, 1062, 1066, 1091, 1148, 1169], "gosh": [43, 168, 415, 460, 462, 656, 739, 987, 1032, 1033, 1039, 1066], "hungarian": [43, 456], "notat": [43, 199, 239, 255, 260, 265, 306, 456, 769, 942, 1048], "userdb": [43, 47, 48, 51, 53, 54, 56, 57, 234, 236, 250, 258, 305, 316, 319, 679, 687, 688, 689, 691, 790, 1125, 1126, 1127, 1128, 1133], "bolt": [43, 234], "onto": [43, 61, 63, 123, 131, 134, 182, 193, 234, 250, 323, 518, 600, 677, 691, 754, 790, 837, 922, 934, 942, 961, 993, 1016, 1023], "unclear": [43, 543, 1009], "semant": [43, 49, 82, 172, 196, 276, 277, 279, 297, 336, 447, 461, 462, 516, 597, 650, 656, 695, 702, 734, 750, 753, 754, 755, 756, 759, 767, 787, 789, 790, 796, 801, 829, 1008, 1009, 1066, 1145, 1189], "backingstor": [43, 53, 56, 790], "mangl": [43, 231, 232, 245, 262, 1060], "prefix": [43, 60, 168, 183, 241, 245, 247, 257, 260, 306, 362, 608, 638, 694, 837, 1023, 1025, 1032, 1054, 1055, 1080, 1087, 1171], "m_": 43, "enough": [43, 175, 179, 196, 204, 254, 264, 297, 306, 380, 404, 495, 671, 941, 954, 982, 1012, 1034, 1051, 1059, 1080, 1149, 1154, 1161, 1163, 1170, 1191], "take": [43, 48, 87, 103, 111, 112, 126, 131, 133, 165, 166, 171, 172, 173, 176, 177, 178, 179, 182, 187, 189, 192, 193, 195, 200, 204, 205, 210, 211, 212, 232, 245, 250, 252, 260, 264, 270, 294, 333, 354, 355, 360, 369, 399, 436, 439, 456, 458, 465, 467, 471, 472, 476, 477, 479, 494, 495, 518, 519, 521, 522, 540, 550, 553, 566, 572, 586, 598, 605, 609, 612, 614, 652, 676, 694, 699, 706, 707, 716, 744, 746, 752, 756, 766, 780, 781, 800, 827, 837, 863, 864, 865, 941, 971, 999, 1023, 1029, 1033, 1037, 1059, 1075, 1076, 1093, 1100, 1103, 1105, 1109, 1110, 1111, 1114, 1115, 1116, 1118, 1120, 1130, 1135, 1143, 1144, 1149, 1154, 1164, 1171], "dogmat": [43, 250, 387, 1149], "switch": [43, 45, 54, 58, 61, 63, 111, 112, 120, 123, 125, 126, 127, 128, 129, 133, 134, 135, 138, 173, 177, 179, 191, 192, 233, 241, 247, 257, 258, 260, 337, 355, 356, 358, 375, 378, 381, 411, 425, 429, 431, 438, 444, 448, 451, 453, 455, 464, 468, 471, 473, 474, 478, 481, 494, 508, 542, 543, 544, 594, 655, 695, 696, 734, 776, 778, 787, 789, 790, 817, 835, 842, 851, 854, 856, 870, 874, 934, 937, 995, 1028, 1186, 1190], "bool": [43, 50, 53, 55, 56, 120, 136, 142, 215, 222, 244, 247, 250, 252, 254, 257, 260, 267, 270, 285, 289, 290, 292, 296, 306, 334, 340, 486, 488, 555, 556, 560, 562, 567, 596, 598, 612, 613, 614, 615, 616, 634, 637, 643, 652, 699, 711, 712, 713, 714, 722, 725, 729, 736, 766, 768, 770, 790, 850, 857, 995, 1001, 1008, 1066, 1093, 1155, 1160], "wear": [43, 169, 173], "incorrect": [43, 241, 247, 257, 260, 264, 415, 434, 1161], "metaphor": 43, "But": [43, 172, 173, 174, 177, 188, 224, 233, 323, 398, 404, 433, 436, 442, 445, 458, 460, 466, 476, 595, 596, 604, 609, 610, 611, 629, 647, 665, 666, 704, 707, 743, 752, 756, 758, 775, 789, 790, 819, 821, 837, 847, 864, 865, 919, 933, 941, 942, 943, 950, 964, 972, 974, 979, 987, 991, 1014, 1028, 1030, 1051, 1054, 1060, 1141, 1144, 1155], "support": [43, 79, 131, 173, 175, 179, 183, 192, 196, 208, 220, 222, 241, 244, 247, 252, 254, 257, 260, 264, 267, 282, 285, 292, 324, 334, 340, 346, 365, 434, 458, 472, 478, 595, 596, 598, 702, 754, 758, 774, 784, 788, 793, 829, 919, 941, 942, 943, 953, 1005, 1011, 1039, 1047, 1054, 1060, 1077, 1091, 1141, 1143, 1158, 1176], "copy_process": 43, "law": [43, 224, 366, 409, 454, 1034, 1160], "tdd": [43, 125, 203, 208, 218, 258, 300, 316, 319, 323, 337, 388, 1169], "until": [43, 55, 98, 99, 100, 103, 106, 111, 112, 125, 130, 138, 142, 147, 160, 162, 172, 174, 176, 178, 223, 232, 244, 263, 281, 301, 327, 426, 432, 457, 460, 554, 614, 678, 722, 728, 766, 768, 805, 825, 835, 845, 847, 853, 870, 874, 881, 897, 909, 916, 958, 959, 960, 961, 984, 998, 1005, 1009, 1038, 1039, 1060, 1068, 1070, 1136], "fail": [43, 44, 153, 168, 172, 174, 182, 183, 187, 199, 204, 234, 260, 277, 309, 354, 380, 479, 482, 492, 496, 501, 503, 550, 681, 702, 704, 711, 716, 770, 788, 790, 815, 837, 916, 933, 943, 964, 969, 972, 974, 989, 990, 991, 1008, 1028, 1032, 1034, 1043, 1085, 1102, 1158, 1170, 1171, 1175, 1177, 1179], "suffici": [43, 127, 187, 192, 204, 355, 603, 631, 672, 676, 687, 695, 775, 810, 919, 1009, 1057, 1059, 1087, 1170], "pass": [43, 44, 48, 55, 57, 58, 62, 111, 112, 113, 114, 116, 117, 120, 124, 192, 200, 204, 209, 210, 211, 213, 220, 231, 233, 237, 241, 247, 250, 252, 254, 257, 260, 264, 267, 270, 272, 273, 277, 282, 285, 290, 291, 294, 302, 306, 324, 346, 350, 354, 380, 400, 402, 404, 415, 436, 440, 443, 445, 462, 492, 494, 499, 501, 540, 550, 551, 552, 553, 555, 556, 596, 606, 607, 613, 614, 615, 616, 625, 676, 682, 706, 736, 744, 749, 753, 756, 784, 785, 786, 803, 840, 881, 941, 967, 970, 981, 990, 1013, 1030, 1032, 1033, 1034, 1035, 1047, 1048, 1049, 1051, 1057, 1075, 1077, 1085, 1087, 1124, 1153, 1169, 1176], "current": [43, 100, 110, 125, 130, 158, 160, 173, 174, 175, 177, 179, 182, 183, 187, 212, 234, 241, 247, 257, 260, 278, 285, 287, 288, 306, 308, 309, 352, 353, 361, 380, 383, 388, 437, 470, 478, 494, 496, 500, 514, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 594, 684, 688, 753, 754, 767, 775, 789, 790, 806, 837, 845, 859, 863, 864, 865, 866, 867, 870, 871, 872, 874, 880, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 897, 898, 901, 902, 903, 904, 905, 906, 907, 908, 909, 911, 912, 913, 914, 915, 917, 919, 921, 933, 942, 956, 962, 963, 964, 972, 974, 979, 981, 988, 991, 994, 995, 996, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1028, 1033, 1038, 1059, 1062, 1070, 1073, 1195], "initi": [43, 45, 62, 111, 112, 115, 119, 123, 125, 136, 150, 171, 172, 175, 179, 187, 189, 199, 204, 208, 213, 219, 228, 232, 233, 243, 244, 245, 260, 264, 267, 270, 275, 285, 292, 297, 299, 302, 306, 319, 328, 334, 340, 346, 392, 394, 401, 445, 450, 460, 464, 468, 470, 473, 474, 496, 498, 516, 521, 522, 535, 536, 540, 542, 543, 544, 545, 546, 547, 550, 572, 586, 589, 594, 598, 599, 600, 602, 607, 609, 611, 613, 615, 630, 631, 632, 637, 650, 655, 676, 681, 683, 684, 685, 690, 691, 705, 716, 734, 742, 753, 754, 756, 768, 787, 789, 790, 795, 798, 800, 801, 808, 815, 823, 833, 837, 864, 865, 873, 898, 928, 942, 943, 958, 961, 979, 982, 995, 1004, 1005, 1011, 1046, 1049, 1079, 1141, 1145, 1189, 1194], "mess": [43, 172, 258, 277, 279, 334, 336, 337, 696, 734, 789, 790, 1066, 1079, 1170], "roughli": [43, 174, 179, 323, 465, 862, 995, 1004], "took": [43, 171, 178, 208, 1101], "our": [43, 53, 61, 63, 71, 78, 105, 124, 125, 136, 138, 142, 143, 150, 173, 174, 176, 178, 183, 187, 194, 208, 223, 224, 233, 234, 248, 250, 288, 299, 301, 337, 369, 462, 465, 476, 487, 495, 499, 504, 516, 520, 537, 548, 553, 687, 690, 810, 817, 837, 941, 942, 967, 970, 995, 1005, 1009, 1011, 1023, 1026, 1029, 1035, 1133, 1141, 1144], "craftsmanship": [43, 45], "anoth": [43, 62, 79, 123, 171, 172, 173, 174, 178, 179, 182, 183, 187, 194, 196, 201, 204, 210, 211, 234, 241, 247, 250, 257, 262, 264, 270, 285, 288, 291, 294, 297, 323, 406, 424, 425, 439, 447, 459, 466, 477, 494, 495, 498, 503, 518, 521, 522, 535, 536, 540, 545, 554, 606, 609, 610, 612, 694, 699, 722, 746, 754, 758, 768, 775, 780, 781, 825, 837, 863, 864, 865, 870, 879, 881, 893, 930, 941, 943, 953, 954, 968, 982, 984, 996, 1004, 1009, 1026, 1029, 1030, 1033, 1034, 1051, 1058, 1066, 1082, 1086, 1092, 1144, 1152, 1158, 1161, 1169, 1192], "isol": [43, 54, 202, 204, 208, 258, 272, 941, 995, 996, 1046, 1136, 1148, 1164, 1180, 1182], "wrong": [43, 79, 115, 172, 174, 297, 415, 437, 456, 672, 758, 810, 967, 982, 996, 1030, 1034, 1046, 1065, 1130, 1141], "oracl": [43, 1145], "conduct": [43, 1169], "serious": 43, "safeti": [43, 143, 250, 458, 461, 464, 468, 473, 474, 477, 572, 695, 765, 790, 796, 934, 1008, 1009, 1032], "architectur": [43, 109, 169, 179, 231, 386, 410, 437, 454, 477, 758, 798, 934, 961, 1011, 1012, 1021, 1023, 1192], "treat": [43, 82, 264, 402, 432, 879], "them": [43, 62, 111, 112, 156, 165, 169, 171, 172, 174, 177, 178, 179, 182, 183, 187, 192, 193, 194, 201, 204, 208, 209, 211, 213, 229, 231, 234, 245, 269, 272, 281, 301, 311, 323, 432, 454, 485, 496, 500, 516, 552, 613, 615, 616, 669, 676, 678, 681, 694, 744, 758, 837, 863, 869, 870, 876, 879, 904, 916, 943, 950, 995, 996, 1005, 1008, 1011, 1012, 1023, 1028, 1033, 1034, 1035, 1036, 1057, 1059, 1081, 1114, 1117, 1136, 1142, 1149, 1160, 1176], "carefulli": [43, 174, 187, 462, 521, 711, 1142], "independ": [43, 62, 252, 264, 404, 437, 609, 921, 935, 943, 1013], "self": [43, 61, 62, 63, 65, 153, 172, 173, 183, 191, 192, 199, 205, 208, 210, 228, 231, 232, 244, 245, 247, 254, 257, 262, 264, 270, 273, 285, 292, 302, 306, 312, 324, 328, 350, 470, 478, 596, 598, 702, 704, 705, 739, 752, 758, 764, 798, 829, 833, 992, 1028, 1032, 1033, 1034, 1043, 1047, 1048, 1051, 1052, 1053, 1054, 1055, 1056, 1066, 1157, 1158, 1170, 1175, 1176, 1178, 1189], "valid": [43, 171, 174, 182, 260, 263, 306, 380, 435, 442, 458, 462, 621, 629, 653, 688, 702, 739, 742, 768, 850, 1065, 1066, 1080, 1081, 1098, 1103, 1157, 1158, 1164], "first": [43, 53, 60, 62, 88, 130, 153, 162, 169, 171, 174, 175, 177, 178, 179, 183, 187, 192, 202, 204, 211, 231, 244, 245, 252, 254, 258, 260, 264, 288, 290, 301, 306, 323, 354, 360, 366, 390, 398, 421, 436, 437, 442, 450, 466, 467, 478, 479, 480, 481, 482, 484, 485, 486, 487, 489, 490, 492, 542, 583, 589, 594, 596, 602, 604, 608, 627, 628, 629, 633, 652, 655, 687, 689, 694, 716, 723, 724, 743, 744, 746, 784, 785, 786, 790, 804, 807, 814, 818, 828, 837, 839, 841, 846, 852, 855, 858, 875, 876, 877, 882, 893, 897, 903, 919, 921, 924, 928, 930, 933, 934, 941, 942, 960, 964, 984, 992, 995, 998, 1004, 1012, 1013, 1027, 1028, 1029, 1030, 1034, 1035, 1039, 1046, 1048, 1052, 1060, 1061, 1062, 1063, 1065, 1066, 1075, 1076, 1079, 1085, 1086, 1093, 1116, 1125, 1131, 1133, 1142, 1144, 1152, 1170, 1176, 1189, 1194], "debug": [43, 172, 173, 201, 231, 241, 247, 257, 260, 311, 315, 331, 369, 374, 387, 437, 463, 466, 470, 471, 472, 480, 482, 483, 499, 577, 722, 739, 790, 795, 817, 819, 879, 897, 963, 987, 1008, 1085, 1164, 1187, 1190, 1195, 1204], "fact": [43, 53, 172, 173, 204, 323, 434, 442, 466, 476, 837, 882, 967, 1005, 1145], "hard": [43, 71, 79, 86, 125, 130, 138, 142, 162, 172, 174, 177, 178, 183, 188, 193, 200, 204, 211, 233, 248, 254, 264, 278, 287, 288, 308, 309, 323, 352, 353, 415, 434, 463, 476, 504, 580, 788, 790, 837, 867, 873, 876, 917, 919, 933, 936, 942, 1023, 1032, 1034, 1054, 1071, 1085, 1138, 1159, 1189, 1205], "principl": [43, 53, 54, 84, 107, 115, 120, 121, 143, 168, 174, 183, 298, 299, 300, 301, 477, 500, 501, 790, 837, 941, 943, 954, 1014, 1144], "mayb": [43, 45, 57, 58, 60, 62, 79, 125, 130, 162, 165, 172, 173, 174, 177, 178, 187, 200, 204, 231, 247, 248, 298, 299, 300, 301, 316, 372, 375, 377, 378, 479, 498, 499, 500, 532, 585, 586, 656, 704, 786, 942, 1026, 1048, 1178], "overview": [43, 99, 125, 147, 168, 179, 196, 212, 214, 229, 233, 245, 278, 279, 287, 291, 294, 297, 299, 308, 309, 325, 352, 353, 383, 387, 500, 514, 542, 543, 544, 545, 546, 547, 548, 549, 552, 594, 614, 710, 721, 734, 745, 767, 789, 790, 860, 864, 865, 866, 867, 870, 871, 878, 880, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 897, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 917, 927, 933, 945, 946, 947, 948, 949, 956, 957, 960, 962, 964, 972, 974, 988, 991, 994, 996, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1026, 1058, 1136, 1189, 1190, 1192, 1194], "respons": [43, 53, 56, 90, 115, 120, 121, 138, 143, 157, 171, 182, 187, 235, 476, 518, 532, 540, 598, 606, 754, 790, 833, 845, 942, 943, 966, 995, 996, 1062, 1143, 1194], "googl": [44, 167, 172, 179, 181, 193, 196, 199, 200, 204, 205, 208, 229, 234, 389, 551, 752, 753, 926, 1060, 1136, 1176, 1178, 1207], "cloner": 44, "init": [44, 150, 171, 173, 189, 193, 270, 277, 279, 340, 400, 427, 525, 526, 548, 551, 579, 596, 614, 632, 792, 800, 805, 825, 827, 839, 873, 925, 1009], "cpp": [44, 50, 98, 123, 125, 126, 127, 128, 129, 130, 133, 134, 143, 183, 198, 208, 233, 234, 250, 277, 288, 297, 299, 389, 480, 481, 482, 487, 494, 495, 496, 498, 499, 501, 503, 515, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 534, 535, 536, 541, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 560, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 596, 597, 598, 599, 600, 604, 605, 607, 609, 610, 611, 612, 613, 614, 615, 616, 624, 625, 626, 627, 628, 631, 632, 633, 634, 635, 637, 638, 641, 642, 643, 647, 651, 652, 653, 654, 655, 661, 665, 666, 669, 671, 672, 674, 678, 683, 684, 685, 686, 687, 688, 689, 690, 694, 699, 701, 704, 705, 706, 709, 711, 716, 722, 731, 732, 733, 736, 737, 738, 739, 740, 741, 743, 744, 746, 748, 752, 753, 754, 755, 756, 757, 766, 768, 770, 774, 776, 778, 780, 784, 785, 786, 788, 941, 971, 975, 978, 990, 992, 995, 1011], "assert_eq": [44, 494, 496, 499, 503, 516, 543, 544, 550, 553, 554, 555, 556, 557, 558, 560, 562, 563, 564, 567, 568, 569, 570, 571, 589, 596, 597, 598, 609, 610, 612, 613, 614, 615, 616, 674, 699, 701, 704, 705, 706, 737, 748, 752, 753, 754, 755, 757, 770, 784, 785, 786, 788, 1176, 1181], "test_f": [44, 518, 553, 554, 788, 1181], "simplefixtur": 44, "public": [44, 55, 102, 103, 108, 115, 118, 119, 120, 121, 122, 125, 130, 134, 138, 169, 182, 187, 224, 232, 245, 273, 278, 287, 288, 296, 302, 308, 309, 352, 353, 366, 369, 374, 450, 486, 487, 488, 490, 495, 497, 501, 503, 506, 507, 508, 518, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 540, 553, 554, 566, 580, 586, 595, 596, 597, 599, 600, 601, 603, 604, 605, 606, 607, 608, 610, 611, 612, 619, 622, 637, 638, 655, 665, 666, 668, 669, 671, 672, 680, 681, 686, 688, 689, 694, 697, 698, 699, 700, 701, 704, 705, 707, 716, 718, 719, 720, 722, 724, 725, 728, 729, 730, 731, 732, 733, 737, 738, 739, 741, 752, 753, 754, 757, 758, 766, 768, 774, 776, 778, 780, 788, 790, 801, 805, 866, 867, 872, 886, 892, 933, 945, 946, 947, 948, 949, 954, 1055, 1060, 1181], "myfirstsuit": 44, "test_find": 44, "wtf": [44, 53, 125, 210, 241, 246, 247, 250, 252, 270, 309, 589, 604, 790, 933, 958, 962, 974, 1008, 1010, 1033], "tallk": 44, "morph": [44, 62, 199, 208, 233, 234, 299, 574, 586, 589, 592, 598, 694, 746, 839, 1037], "fixtur": [44, 199, 208, 300, 301, 316, 322, 323, 326, 327, 337, 377, 507, 518, 554, 790, 1174, 1207], "trivial": [44, 172, 183, 314, 330, 416, 432, 589, 606, 702, 707, 758, 842, 850, 943, 959, 995, 1191], "tempfil": [44, 1032], "crap": [44, 173, 248, 290, 346, 351, 462, 478, 481, 656, 695, 775, 943, 1008], "null": [44, 62, 120, 173, 174, 175, 190, 215, 231, 244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 391, 404, 411, 439, 450, 460, 465, 478, 553, 609, 708, 795, 801, 808, 833, 868, 877, 879, 880, 897, 912, 919, 961, 966, 973, 980, 982, 984, 986, 992, 995, 996, 1001, 1004, 1008], "deriv": [44, 108, 122, 126, 142, 194, 248, 260, 327, 356, 380, 554, 572, 598, 668, 669, 671, 672, 733, 741, 774, 1034, 1047, 1181], "seminar": [45, 151], "psycho": 45, "rule": [45, 173, 179, 204, 254, 260, 264, 297, 336, 377, 392, 411, 413, 414, 415, 430, 436, 454, 465, 466, 467, 469, 477, 479, 504, 516, 521, 622, 668, 702, 705, 709, 711, 731, 757, 758, 876, 897, 958, 1034, 1057, 1065, 1066, 1076, 1085, 1149, 1196], "dont": [45, 264, 476, 810], "scenario": [45, 174, 187, 196, 204, 208, 399, 520, 672, 766, 996, 997, 1004], "robert": [45, 504], "martin": [45, 476, 477, 504], "someon": [45, 127, 204, 245, 260, 267, 270, 301, 376, 611, 766, 829, 894, 900, 921, 943, 967, 1011, 1059], "mistak": [45, 172, 178, 179, 229, 245, 269, 941, 1136, 1149], "kill": [45, 173, 174, 250, 897, 951, 980, 999, 1008, 1009, 1038, 1195], "peopl": [45, 62, 169, 172, 174, 176, 177, 179, 187, 192, 204, 233, 267, 387, 476, 504, 522, 711, 837, 876, 1043, 1059, 1087, 1143, 1145], "polit": [45, 744], "thei": [45, 55, 79, 123, 160, 171, 172, 173, 174, 175, 176, 177, 178, 179, 183, 192, 194, 196, 200, 212, 234, 241, 245, 247, 250, 257, 260, 264, 306, 314, 330, 380, 406, 412, 432, 460, 463, 466, 472, 476, 477, 481, 490, 495, 496, 516, 521, 522, 550, 552, 572, 589, 599, 604, 630, 634, 666, 694, 695, 698, 705, 706, 753, 754, 760, 796, 810, 829, 837, 862, 872, 876, 898, 934, 941, 942, 943, 954, 979, 1008, 1009, 1014, 1029, 1039, 1047, 1054, 1057, 1108, 1131, 1138, 1141, 1142, 1149, 1152, 1155, 1169, 1175, 1191, 1194], "regul": 45, "ethic": 45, "everi": [45, 53, 61, 62, 63, 79, 90, 111, 112, 131, 165, 172, 178, 208, 231, 260, 301, 401, 458, 472, 476, 499, 504, 520, 539, 540, 609, 619, 671, 693, 695, 700, 788, 808, 821, 837, 862, 870, 872, 874, 875, 891, 898, 900, 942, 957, 992, 995, 1008, 1009, 1028, 1030, 1039, 1075, 1094, 1105, 1116, 1142, 1176, 1191], "particular": [45, 123, 171, 183, 204, 445, 470, 496, 520, 572, 788, 883, 1058, 1059], "electr": 45, "seem": [45, 160, 171, 173, 174, 193, 298, 495, 941, 943, 1008, 1191], "adher": [45, 879], "immedi": [45, 62, 172, 173, 178, 179, 250, 291, 294, 297, 299, 355, 437, 647, 761, 766, 819, 829, 833, 934, 984, 993, 996, 998, 1079, 1176], "survei": [45, 193], "had": [45, 123, 171, 173, 174, 178, 179, 183, 187, 192, 204, 208, 237, 239, 258, 406, 445, 516, 583, 595, 680, 694, 831, 864, 865, 876, 901, 941, 954, 1025, 1059, 1066, 1085, 1155, 1159], "life": [45, 136, 142, 168, 179, 184, 187, 190, 192, 200, 601, 731, 752, 767, 789, 790, 837, 876, 933, 974, 988, 994, 1060, 1081, 1139], "accomplish": [45, 57, 79, 212, 298, 300, 301, 462, 477, 941], "befor": [45, 126, 130, 138, 142, 168, 172, 173, 175, 176, 177, 179, 182, 187, 192, 208, 211, 215, 233, 260, 276, 277, 279, 300, 301, 306, 322, 323, 324, 327, 334, 336, 394, 402, 403, 412, 432, 481, 553, 583, 589, 628, 654, 669, 695, 707, 722, 734, 739, 740, 750, 754, 755, 760, 761, 766, 768, 769, 788, 789, 790, 801, 815, 825, 831, 837, 863, 899, 934, 943, 982, 997, 999, 1011, 1034, 1039, 1057, 1101, 1126, 1128, 1132, 1141, 1154, 1158, 1161, 1170, 1171, 1177], "formal": [45, 182, 196, 233, 234, 323, 326, 543, 1170], "googletest": [45, 98, 199, 201, 202, 234, 277, 279, 314, 330, 492, 501, 537, 550, 552, 553, 614, 752, 753, 754, 788, 790, 791, 1176, 1178, 1191], "messag": [45, 130, 153, 167, 169, 177, 178, 187, 190, 196, 202, 210, 211, 237, 241, 244, 247, 257, 260, 267, 270, 285, 292, 300, 301, 302, 306, 328, 334, 340, 346, 357, 369, 374, 477, 480, 482, 501, 606, 622, 681, 711, 716, 736, 738, 739, 748, 758, 766, 790, 812, 837, 870, 874, 879, 933, 955, 974, 984, 988, 1063, 1077, 1087, 1130, 1171, 1175, 1177, 1203, 1204, 1205], "saniti": [45, 468, 473, 474, 477, 481, 485, 611, 696, 734, 787, 789, 790], "perform": [45, 115, 119, 172, 178, 187, 189, 211, 230, 231, 260, 301, 328, 375, 416, 419, 442, 449, 454, 462, 465, 466, 469, 472, 473, 474, 480, 589, 629, 647, 650, 672, 693, 707, 749, 775, 790, 821, 999, 1016, 1026, 1027, 1085, 1169, 1187, 1190], "delici": [45, 53], "fearlessli": [45, 53], "backlog": 45, "Or": [45, 113, 114, 116, 117, 124, 126, 142, 172, 279, 336, 461, 477, 580, 708, 734, 745, 789, 790, 928, 954, 964, 990, 1065, 1079, 1157, 1161], "Will": [45, 172, 205, 264, 355, 798, 1011, 1077, 1088, 1164, 1178, 1184, 1203], "high": [46, 53, 120, 126, 193, 233, 247, 264, 476, 504, 527, 540, 544, 548, 752, 754, 769, 819, 831, 835, 847, 856], "speed": [46, 53, 162, 167, 172, 241, 245, 247, 257, 260, 264, 328, 467, 757, 831, 837, 997, 999, 1140, 1141], "hype": [46, 775], "we": [46, 50, 60, 61, 63, 69, 126, 130, 134, 138, 141, 142, 143, 150, 153, 162, 171, 172, 174, 175, 176, 177, 178, 179, 183, 187, 188, 191, 192, 193, 194, 195, 196, 200, 201, 204, 208, 209, 210, 211, 212, 214, 223, 224, 231, 232, 233, 234, 238, 241, 244, 245, 247, 248, 250, 277, 279, 281, 288, 291, 294, 296, 298, 300, 301, 319, 323, 326, 327, 355, 372, 375, 376, 380, 391, 406, 417, 424, 432, 445, 454, 456, 460, 462, 465, 470, 477, 479, 487, 488, 494, 495, 496, 499, 501, 503, 506, 515, 516, 520, 521, 537, 538, 539, 540, 548, 551, 552, 553, 583, 589, 598, 610, 634, 665, 669, 686, 687, 688, 689, 690, 694, 705, 716, 722, 748, 749, 754, 757, 768, 772, 798, 801, 805, 806, 810, 812, 815, 833, 837, 839, 845, 853, 864, 865, 879, 880, 894, 900, 901, 916, 934, 941, 942, 943, 950, 954, 959, 960, 961, 967, 968, 969, 970, 982, 995, 1004, 1021, 1025, 1026, 1027, 1035, 1054, 1059, 1085, 1087, 1092, 1094, 1123, 1130, 1131, 1132, 1136, 1141, 1142, 1143, 1144, 1151, 1152, 1158, 1161, 1177, 1178, 1194], "did": [46, 173, 174, 176, 178, 179, 182, 183, 191, 200, 204, 211, 296, 456, 460, 476, 501, 539, 687, 756, 758, 785, 810, 815, 837, 876, 934, 945, 954, 1035, 1189], "consequ": [46, 171, 172, 291, 294, 436, 457, 460, 461, 504, 967, 1054, 1155, 1189], "unsign": [46, 115, 121, 138, 245, 250, 408, 410, 418, 447, 450, 454, 462, 508, 523, 538, 552, 553, 554, 604, 674, 675, 684, 732, 766, 768, 774, 776, 778, 780, 788, 793, 796, 801, 808, 817, 819, 821, 827, 833, 842, 847, 851, 963, 1004, 1005, 1186, 1187], "introduc": [46, 58, 79, 98, 233, 250, 258, 299, 314, 330, 458, 466, 478, 494, 499, 521, 539, 540, 541, 542, 572, 594, 680, 790, 856, 1008, 1037, 1063, 1077, 1143, 1191], "throw": [46, 130, 176, 179, 250, 496, 520, 521, 525, 531, 532, 534, 535, 536, 554, 572, 650, 688, 730, 751, 754, 765, 768, 1181], "notfounderror": 46, "cbda1e98040d084c31ff6e83f04d78dbebf5c1c2": 46, "cluster_clean_cod": [46, 47, 51, 53, 55, 56, 790], "cluster_clean_code_bug": [46, 47, 53, 55, 56, 790], "clean_code_bugs_find_error": [46, 47, 53, 790], "twice": [47, 53, 55, 56, 57, 172, 398, 437, 459, 479, 702, 705, 764, 790, 857, 897, 934, 950, 982, 1027], "crash": [47, 53, 62, 111, 112, 170, 172, 173, 174, 177, 229, 231, 241, 247, 257, 260, 387, 427, 434, 520, 604, 631, 676, 752, 790, 995, 1009, 1136], "found": [47, 53, 109, 110, 131, 153, 159, 168, 171, 183, 192, 204, 237, 241, 244, 247, 250, 252, 254, 257, 260, 270, 285, 292, 306, 314, 324, 328, 330, 334, 340, 346, 350, 355, 369, 463, 472, 482, 484, 492, 530, 534, 535, 536, 542, 553, 555, 559, 560, 561, 589, 594, 634, 637, 640, 650, 654, 655, 679, 687, 689, 691, 699, 785, 790, 808, 869, 872, 879, 926, 943, 1011, 1014, 1023, 1028, 1034, 1042, 1051, 1081, 1114, 1140, 1143, 1179, 1191], "clean_code_bugs_overwrite_store_content_on_read": [47, 53, 55, 56, 790], "clean_code_bugs_overwrite_existing_fil": [47, 53, 55, 56, 790], "explicitli": [48, 173, 174, 178, 204, 244, 254, 264, 297, 414, 415, 433, 471, 477, 521, 598, 601, 609, 650, 699, 702, 705, 758, 770, 868, 996, 1005, 1033, 1043, 1062, 1149, 1157], "solut": [48, 125, 177, 179, 187, 188, 196, 198, 204, 223, 233, 234, 239, 242, 245, 250, 255, 261, 277, 280, 291, 300, 301, 305, 311, 336, 337, 349, 436, 437, 440, 459, 462, 480, 493, 520, 542, 572, 594, 600, 601, 621, 658, 660, 662, 669, 683, 691, 706, 711, 716, 742, 758, 783, 789, 790, 898, 899, 916, 979, 984, 997, 998, 1014, 1039, 1075, 1107, 1119, 1149, 1192], "force_overwrit": 48, "descriptor": [48, 172, 196, 228, 260, 264, 285, 306, 324, 376, 601, 796, 817, 853, 873, 879, 880, 937, 959, 960, 961, 1005], "mani": [49, 53, 56, 61, 63, 65, 90, 115, 121, 143, 172, 174, 178, 179, 196, 201, 204, 220, 231, 252, 262, 267, 288, 292, 296, 297, 299, 305, 324, 355, 376, 380, 404, 416, 418, 427, 442, 456, 458, 463, 478, 479, 491, 492, 495, 498, 503, 506, 545, 572, 619, 629, 648, 650, 669, 681, 693, 694, 702, 722, 743, 748, 756, 764, 790, 796, 798, 815, 823, 829, 833, 837, 863, 873, 874, 876, 877, 930, 942, 960, 961, 980, 990, 993, 1008, 1009, 1011, 1021, 1030, 1032, 1034, 1039, 1048, 1058, 1063, 1066, 1069, 1073, 1081, 1085, 1087, 1092, 1141, 1143, 1144, 1145, 1149, 1158, 1176, 1189, 1192], "overwrit": [49, 110, 520, 521, 534, 542, 559, 561, 594, 604, 650, 652, 681, 790, 837, 899, 904, 916, 968, 1083], "present": [49, 60, 143, 169, 175, 179, 183, 187, 192, 205, 260, 306, 314, 323, 330, 488, 600, 833, 837, 872, 943, 954, 973, 1034, 1118, 1158, 1191], "continu": [50, 53, 62, 65, 90, 100, 107, 111, 112, 123, 126, 143, 165, 173, 182, 183, 195, 204, 205, 208, 217, 222, 223, 224, 253, 258, 264, 270, 280, 366, 430, 431, 437, 438, 444, 448, 451, 455, 460, 464, 468, 473, 474, 476, 478, 481, 482, 499, 613, 615, 616, 676, 696, 704, 734, 785, 786, 787, 788, 789, 790, 934, 936, 940, 946, 969, 970, 1008, 1009, 1014, 1025, 1032, 1039, 1043, 1076, 1079, 1098, 1143, 1158, 1176], "expected_cont": 50, "fill": [50, 174, 175, 187, 209, 260, 261, 306, 418, 694, 698, 743, 753, 808, 833, 837, 903, 960, 1037], "strategi": [50, 244, 452, 942, 1093, 1169], "hurri": [50, 437], "read_fil": 50, "compar": [50, 125, 232, 234, 245, 260, 301, 306, 415, 457, 471, 472, 481, 550, 596, 753, 945, 980, 1077, 1082, 1107, 1111, 1141], "binaryfil": 50, "doesn": [50, 174, 177, 285, 334, 432, 434, 437, 452, 466, 748, 796, 857, 864, 865, 899, 903, 916, 1012, 1023, 1079], "belong": [50, 201, 204, 404, 424, 450, 477, 572, 596, 610, 612, 882, 890, 969, 1050, 1064], "test_write_csv": 50, "test_read_csv": [50, 1133], "ah": [50, 61, 63, 178, 194, 231, 233, 247, 651, 1011, 1087, 1152], "altern": [51, 53, 55, 56, 62, 69, 79, 84, 142, 171, 172, 179, 205, 224, 250, 311, 340, 411, 488, 596, 605, 619, 630, 633, 702, 751, 757, 778, 790, 837, 876, 897, 937, 941, 943, 955, 963, 969, 980, 986, 1004, 1011, 1059, 1079, 1082, 1157, 1161, 1164, 1171, 1181, 1184, 1200, 1201, 1203, 1206], "cluster_clean_code_featur": [51, 53, 55, 56, 790], "clean_code_features_other_index": [51, 53, 790], "clean_code_features_csv": [51, 53, 55, 56, 790], "establish": [53, 72, 212, 224, 288, 300, 301, 322, 326, 366, 476, 837, 995, 1192], "were": [53, 123, 142, 165, 172, 174, 178, 187, 204, 208, 387, 436, 492, 595, 604, 605, 631, 698, 737, 864, 865, 943, 970, 1025, 1033, 1057, 1066, 1085, 1091, 1149, 1155, 1189], "occas": [53, 90, 173, 753], "ourselv": [53, 204, 934], "gather": [53, 179, 211, 300, 301, 322, 323, 326, 354, 470, 472, 1120], "wreak": [53, 111, 112, 452, 676], "havoc": [53, 111, 112, 452, 676], "shoehorn": 53, "violat": [53, 115, 120, 121, 143, 172, 476, 504, 732, 754, 851, 995, 1009], "nearli": [53, 204, 210, 454, 987], "solid": [53, 113, 114, 115, 116, 117, 124, 143, 168, 184, 297, 299, 477, 504, 1187, 1188, 1202, 1203, 1205, 1206], "chanc": [53, 172, 174, 209, 456, 476, 792, 837, 962, 1194], "cluster_clean_code_refactor": [53, 55, 56, 790], "clean_code_refactoring_store_enum_switch": [53, 55, 56, 790], "clean_code_refactoring_backingstore_interfac": [53, 56, 790], "clean_code_refactoring_backingstore_monolith": [53, 55, 56, 790], "clean_code_refactoring_pass_store_in_ctor": [53, 56, 790], "now": [54, 60, 123, 171, 172, 173, 174, 175, 176, 178, 179, 187, 191, 200, 210, 220, 237, 244, 250, 254, 264, 272, 292, 296, 317, 355, 356, 369, 432, 445, 460, 465, 490, 496, 503, 516, 521, 543, 544, 551, 610, 634, 637, 643, 647, 655, 698, 749, 754, 769, 770, 795, 815, 837, 845, 847, 853, 869, 872, 934, 941, 942, 943, 969, 970, 978, 1023, 1025, 1030, 1033, 1048, 1051, 1075, 1131, 1141, 1143, 1161, 1170, 1189], "violatin": 54, "respect": [54, 61, 63, 120, 165, 173, 187, 234, 296, 298, 361, 408, 456, 476, 521, 539, 598, 605, 668, 702, 753, 754, 868, 876, 941, 995, 1009, 1054], "mainli": [55, 172, 208, 297, 306, 650, 788, 977, 1037], "bugfix": 55, "ongo": [55, 123, 997], "scene": [55, 1011, 1054], "pleas": [55, 125, 153, 173, 174, 177, 179, 183, 200, 204, 208, 209, 211, 212, 213, 214, 224, 250, 277, 279, 288, 309, 350, 353, 360, 402, 436, 466, 554, 611, 613, 614, 615, 616, 876, 934, 942, 943, 958, 987, 1005, 1013, 1014, 1059, 1162], "wait": [55, 73, 74, 75, 79, 84, 88, 138, 142, 161, 172, 173, 174, 175, 176, 178, 219, 323, 355, 666, 694, 761, 769, 790, 814, 829, 835, 839, 842, 845, 847, 870, 873, 881, 933, 934, 960, 962, 966, 978, 990, 993, 996, 1003, 1005, 1008, 1083, 1152, 1176, 1194, 1202], "unnecessarili": [55, 70, 1005], "conflict": [55, 76, 78, 123, 126, 142, 299, 300, 301, 322, 402, 453, 605, 695, 767, 789, 790, 793, 796, 806, 933, 942, 974, 982, 988, 1008, 1042, 1172], "rip": [55, 175, 478, 537, 995, 1151], "detail": [55, 85, 169, 174, 177, 182, 186, 187, 199, 205, 219, 230, 231, 233, 234, 241, 247, 257, 261, 262, 264, 268, 290, 301, 340, 347, 351, 369, 476, 481, 504, 541, 551, 553, 601, 753, 815, 897, 941, 943, 997, 1029, 1138, 1178, 1187], "instanc": [55, 57, 108, 111, 112, 133, 179, 220, 228, 232, 241, 244, 245, 252, 254, 259, 262, 264, 267, 282, 285, 292, 306, 324, 334, 340, 346, 365, 380, 494, 499, 507, 518, 520, 521, 522, 534, 535, 536, 539, 552, 665, 676, 683, 688, 736, 739, 798, 803, 806, 1004, 1005, 1032, 1034, 1048, 1049, 1051, 1054, 1077], "its": [55, 57, 61, 63, 85, 88, 109, 111, 112, 120, 138, 166, 171, 172, 173, 174, 176, 177, 178, 179, 182, 183, 189, 194, 196, 200, 201, 202, 204, 224, 231, 232, 234, 241, 245, 247, 257, 260, 264, 273, 288, 290, 291, 294, 297, 299, 306, 323, 360, 371, 402, 424, 435, 437, 452, 454, 456, 463, 465, 487, 495, 499, 518, 521, 522, 537, 538, 539, 540, 545, 550, 553, 595, 596, 597, 599, 601, 606, 636, 676, 694, 706, 716, 742, 761, 788, 801, 810, 815, 837, 842, 864, 865, 868, 870, 874, 879, 884, 885, 897, 898, 919, 921, 942, 945, 946, 953, 963, 964, 969, 984, 990, 993, 995, 996, 997, 1005, 1027, 1032, 1034, 1037, 1042, 1047, 1051, 1057, 1065, 1075, 1077, 1082, 1086, 1093, 1141, 1143, 1162, 1169, 1171, 1189, 1191, 1192, 1194], "replac": [55, 62, 98, 130, 177, 222, 233, 241, 244, 245, 247, 248, 250, 257, 260, 292, 306, 323, 354, 396, 411, 452, 478, 541, 542, 594, 627, 628, 687, 694, 722, 739, 753, 768, 775, 788, 790, 840, 943, 983, 995, 1009, 1033], "symptom": [57, 182], "mismatch": [57, 578], "onc": [57, 115, 120, 121, 126, 153, 171, 173, 174, 177, 178, 179, 182, 187, 192, 193, 354, 372, 394, 419, 428, 436, 466, 479, 495, 496, 497, 501, 506, 518, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 551, 553, 611, 629, 630, 684, 725, 736, 746, 764, 774, 776, 778, 779, 780, 781, 788, 798, 801, 833, 934, 943, 985, 1008, 1009, 1028, 1034, 1035, 1036, 1070, 1092, 1101, 1114, 1145, 1148, 1171], "sync": [57, 143, 173, 244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346, 452, 456, 837, 928], "imho": [57, 733], "forbidden": [58, 454], "accord": [58, 62, 125, 138, 171, 174, 260, 685, 881, 897, 930, 934, 942, 943], "uncl": [58, 387], "bob": [58, 260, 387, 476], "enum": [58, 233, 234, 337, 411, 426, 464, 468, 473, 474, 478, 481, 696, 734, 776, 778, 787, 789, 790, 796, 798, 806, 995, 1189], "submiss": [59, 64, 67], "submit": [59, 110, 831], "linuxtag": [59, 211, 327, 939], "pure": [60, 70, 133, 179, 369, 432, 505, 668, 694, 733, 758, 876, 1066, 1189], "local": [60, 148, 153, 172, 173, 175, 178, 187, 200, 204, 205, 212, 213, 217, 233, 234, 248, 250, 251, 257, 260, 263, 264, 285, 288, 300, 302, 311, 314, 322, 323, 326, 327, 330, 332, 333, 338, 339, 340, 344, 345, 346, 348, 349, 355, 369, 402, 406, 430, 432, 449, 487, 491, 500, 514, 516, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 594, 601, 619, 702, 705, 707, 736, 790, 810, 837, 842, 864, 865, 869, 919, 933, 941, 943, 944, 945, 946, 952, 954, 960, 971, 979, 1021, 1023, 1030, 1033, 1078, 1164, 1191, 1192, 1205], "easili": [60, 143, 166, 173, 179, 355, 411, 430, 463, 476, 495, 668, 744, 819, 835, 963, 993, 999, 1029, 1042, 1074, 1189], "guess": [60, 254, 264, 290, 456, 461, 711, 950, 1005], "autotool": [60, 183], "portabl": [60, 196, 404, 466, 761, 979, 986, 1005, 1009, 1066, 1145], "configur": [60, 61, 62, 63, 69, 74, 79, 83, 85, 86, 87, 105, 123, 125, 130, 136, 138, 142, 143, 157, 158, 171, 173, 174, 177, 179, 202, 212, 278, 287, 288, 297, 308, 309, 315, 316, 319, 323, 331, 352, 353, 369, 375, 479, 483, 484, 486, 487, 499, 501, 506, 543, 544, 545, 553, 790, 810, 817, 837, 851, 867, 868, 869, 872, 881, 917, 930, 933, 934, 942, 954, 961, 975, 977, 1005, 1012, 1013, 1025, 1035, 1106, 1144, 1148, 1157, 1164, 1192], "archiv": [60, 104, 105, 125, 183, 184, 212, 214, 278, 287, 288, 308, 352, 472, 485, 491, 500, 514, 542, 543, 544, 545, 546, 547, 548, 549, 552, 594, 790, 867, 897, 933, 1013, 1016, 1018, 1019, 1021, 1022, 1023, 1028, 1032, 1164], "m4": 60, "macro": [60, 250, 315, 331, 396, 407, 410, 422, 431, 438, 444, 448, 451, 455, 458, 464, 468, 473, 474, 482, 483, 487, 488, 491, 696, 734, 740, 787, 789, 790, 806, 825, 839, 879, 957, 963, 969, 979, 1013, 1085, 1176, 1181, 1186, 1190], "stock": [60, 244, 245, 1092, 1093], "sudo": [60, 102, 125, 133, 153, 168, 175, 177, 179, 187, 201, 212, 250, 278, 287, 288, 297, 299, 308, 309, 340, 352, 353, 482, 489, 566, 790, 867, 892, 894, 933, 934, 943, 997, 1025, 1171], "pwd": [60, 110, 123, 200, 277, 279, 340, 369, 374, 485, 551, 553, 614, 812, 815, 864, 865, 874, 919, 921, 934, 1012, 1013, 1026, 1028, 1169], "pub": [60, 175, 212, 810, 950, 1130], "lib": [60, 125, 168, 177, 183, 211, 231, 234, 244, 260, 267, 270, 285, 292, 299, 302, 306, 328, 334, 340, 346, 484, 550, 815, 827, 833, 837, 928, 943, 1008, 1012, 1014, 1023, 1025, 1164, 1171], "remot": [60, 103, 105, 148, 153, 175, 177, 179, 187, 224, 233, 280, 355, 493, 514, 528, 542, 594, 790, 810, 837, 838, 842, 863, 866, 933, 942, 944, 947, 948, 949, 952, 960, 1023, 1035, 1192, 1193, 1200], "v0": 60, "v1": [60, 290, 501, 516, 698], "v2": [60, 62, 179, 199, 290, 501, 516, 698], "autotooleri": 60, "autogen": 60, "step": [60, 62, 171, 172, 178, 179, 183, 187, 208, 247, 250, 251, 277, 279, 292, 296, 301, 324, 392, 394, 396, 412, 436, 478, 481, 498, 541, 551, 589, 614, 619, 752, 837, 864, 865, 1011, 1019, 1157, 1158, 1170], "noconfigur": 60, "suppress": [60, 178, 224, 470, 495, 604, 753, 916, 1164], "absorb": [60, 165, 210, 475, 477, 705, 1093], "Be": [60, 98, 113, 114, 116, 117, 124, 250, 297, 299, 337, 355, 409, 442, 551, 572, 597, 602, 664, 691, 703, 705, 734, 736, 739, 750, 759, 767, 787, 789, 790, 863, 1008, 1023], "awar": [60, 355, 453, 486, 997], "enabl": [60, 171, 177, 204, 212, 233, 241, 247, 257, 260, 288, 298, 415, 466, 492, 499, 521, 577, 835, 837, 842, 889, 934, 938, 942, 954, 997, 1021, 1025, 1035, 1194], "mkdir": [60, 101, 125, 158, 173, 178, 182, 200, 201, 277, 279, 288, 353, 369, 374, 551, 553, 554, 614, 788, 790, 837, 864, 865, 866, 867, 901, 902, 903, 904, 905, 908, 909, 911, 917, 933, 950, 954, 1004, 1023, 1025, 1026, 1032], "dist": [60, 152, 757, 1091], "406332": 60, "apr": [60, 62, 231, 241, 270, 362, 1012, 1013, 1026], "transfer": [60, 172, 234, 237, 314, 330, 355, 472, 554, 604, 705, 808, 837, 850, 851, 863, 864, 865, 924, 944, 950, 953, 1152, 1189, 1191], "scp": [60, 98, 102, 125, 158, 183, 212, 278, 287, 288, 308, 309, 352, 553, 554, 790, 810, 864, 865, 933, 944, 945, 946, 947, 949, 954, 971, 1021, 1022, 1023], "192": [60, 205, 212, 244, 247, 252, 254, 257, 260, 264, 267, 270, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 375, 810, 872, 954, 1206], "168": [60, 205, 212, 215, 222, 231, 244, 247, 252, 254, 257, 260, 264, 267, 270, 273, 282, 285, 302, 306, 312, 324, 328, 334, 340, 346, 350, 375, 810, 872, 954, 1023, 1206], "82": [60, 182, 191, 205, 215, 220, 222, 228, 231, 237, 244, 247, 252, 254, 260, 264, 267, 270, 273, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 364, 1093, 1140, 1141], "prerequisit": [60, 105, 250, 810, 941, 1062], "apt": [60, 133, 183, 187, 201, 250, 297, 299, 566, 817, 936, 941, 943, 954, 1013, 1025, 1171, 1176], "python3": [60, 62, 87, 152, 153, 168, 183, 192, 205, 211, 231, 241, 247, 257, 260, 264, 340, 989, 999, 1025, 1035, 1062, 1157, 1158, 1164, 1171], "along": [60, 153, 173, 179, 232, 245, 387, 436, 506, 788, 882, 990, 1011, 1042], "omit": [60, 62, 178, 187, 192, 241, 247, 257, 260, 261, 264, 334, 350, 373, 417, 454, 466, 478, 498, 672, 694, 741, 815, 831, 880, 941, 942, 943, 950, 966, 967, 971, 982, 1032, 1035, 1087, 1169], "bind": [60, 143, 173, 275, 297, 299, 327, 337, 414, 421, 652, 694, 707, 734, 758, 759, 761, 767, 789, 790, 937, 1011, 1043, 1047, 1066, 1077, 1155, 1189, 1204, 1206], "cxx": [60, 169, 479, 494, 495, 496, 497, 498, 499, 501, 503, 506, 515, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 550, 552, 555, 556, 557, 558, 560, 562, 563, 564, 565, 567, 568, 569, 570, 571, 788, 1012, 1013], "xf": [60, 183, 863, 1025], "ld_library_path": [60, 484, 1028], "gpiod": [60, 62, 64, 67, 817], "py3": [60, 152, 168, 1091], "aarch64": [60, 183, 1023], "born": [61, 63, 65, 875, 1060], "bound": [61, 62, 63, 65, 250, 254, 285, 297, 312, 453, 463, 468, 473, 474, 578, 606, 608, 610, 628, 707, 790, 875, 879, 935, 996, 999, 1052, 1073, 1097, 1157], "employe": [61, 63, 65, 199, 231, 1051], "year": [61, 63, 65, 171, 172, 173, 174, 178, 183, 204, 244, 250, 292, 296, 476, 595, 679, 680, 682, 683, 686, 687, 688, 689, 690, 691, 693, 740, 790, 1093], "emploi": [61, 63, 65, 173, 183, 208, 437, 837], "pattern": [61, 63, 83, 107, 143, 168, 169, 185, 188, 207, 208, 234, 237, 260, 299, 340, 377, 386, 388, 476, 493, 494, 495, 496, 498, 499, 501, 503, 504, 505, 515, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 542, 594, 757, 758, 775, 790, 791, 897, 926, 993, 1040, 1041, 1176, 1196], "led": [61, 63, 73, 74, 75, 79, 92, 127, 128, 129, 134, 135, 143, 190, 212, 288, 355, 378, 543, 790, 796, 934, 942], "hei": [61, 63, 172, 212, 264, 611, 612, 872, 958, 1080, 1149], "reinvent": [61, 63, 232, 281, 1136], "wheel": [61, 63, 126, 152, 168, 839, 874, 969, 1164], "admit": [61, 63, 179], "notori": [61, 63], "fun": [61, 63, 132, 172, 177, 230, 232, 268, 297, 387, 500, 737, 837, 876, 934, 941, 942, 1039, 1051, 1063, 1079, 1135, 1136, 1163, 1170, 1189], "live": [61, 63, 71, 98, 99, 125, 130, 147, 169, 173, 177, 195, 199, 204, 208, 213, 224, 232, 233, 234, 235, 248, 250, 258, 269, 276, 277, 278, 279, 281, 287, 289, 290, 297, 298, 299, 300, 301, 305, 308, 309, 323, 327, 336, 337, 352, 353, 369, 373, 377, 378, 380, 387, 388, 389, 449, 466, 478, 479, 484, 500, 505, 514, 516, 518, 540, 542, 543, 544, 545, 546, 547, 548, 549, 552, 559, 561, 572, 629, 630, 650, 692, 703, 734, 735, 736, 753, 767, 788, 789, 790, 791, 801, 837, 867, 870, 871, 876, 892, 893, 933, 974, 1042, 1059, 1093, 1136, 1162, 1170, 1188, 1189, 1203], "session": [61, 63, 168, 177, 179, 197, 204, 208, 212, 216, 241, 247, 257, 260, 272, 276, 277, 279, 290, 298, 375, 839, 868, 869, 951, 962, 1124, 1136, 1162, 1169, 1199], "simpl": [61, 63, 73, 75, 76, 79, 87, 123, 159, 168, 172, 176, 177, 179, 182, 183, 187, 192, 196, 199, 200, 204, 208, 211, 234, 250, 252, 254, 260, 264, 316, 319, 390, 391, 398, 437, 439, 453, 456, 463, 478, 479, 480, 481, 482, 486, 487, 489, 499, 597, 604, 605, 643, 671, 679, 680, 682, 683, 686, 687, 688, 689, 690, 691, 711, 744, 754, 763, 790, 796, 810, 817, 829, 837, 839, 847, 873, 926, 934, 935, 941, 942, 971, 977, 979, 982, 997, 1005, 1008, 1012, 1013, 1014, 1019, 1035, 1039, 1059, 1060, 1068, 1087, 1136, 1142, 1144, 1160, 1175, 1176], "thu": [61, 63, 172, 173, 174, 210, 421, 496, 810, 815, 857, 864, 967, 1148, 1194], "techniqu": [61, 63, 70, 71, 72, 456, 466, 552, 676, 937], "usag": [61, 63, 81, 107, 115, 121, 126, 143, 148, 174, 179, 224, 234, 245, 258, 272, 297, 299, 300, 322, 337, 355, 375, 387, 437, 462, 463, 470, 481, 485, 491, 500, 501, 514, 540, 541, 542, 594, 604, 611, 612, 630, 665, 667, 668, 671, 672, 691, 693, 705, 716, 722, 736, 743, 775, 789, 790, 839, 874, 897, 926, 929, 944, 975, 978, 993, 1029, 1034, 1037, 1087, 1130, 1132, 1164, 1171, 1178, 1189], "At": [61, 63, 138, 172, 173, 176, 179, 183, 187, 204, 208, 234, 244, 248, 250, 284, 401, 430, 434, 466, 494, 752, 829, 1030, 1047, 1136], "flow": [61, 63, 173, 204, 209, 211, 212, 213, 214, 218, 223, 224, 239, 242, 255, 266, 370, 371, 372, 374, 410, 430, 438, 444, 448, 451, 455, 464, 466, 468, 473, 474, 696, 734, 743, 787, 789, 790, 1008, 1043, 1068, 1070, 1077, 1155, 1190], "event": [61, 62, 63, 87, 133, 137, 175, 196, 232, 241, 245, 247, 257, 260, 288, 300, 301, 472, 722, 766, 773, 777, 790, 805, 806, 814, 839, 840, 852, 853, 854, 855, 858, 870, 874, 933, 937, 962, 974, 977, 993, 996, 997, 1001, 1005, 1046, 1152, 1161, 1194, 1203, 1205, 1206], "save": [61, 62, 63, 86, 153, 168, 171, 172, 184, 192, 195, 241, 247, 257, 260, 291, 294, 297, 350, 418, 420, 694, 725, 728, 729, 730, 881, 899, 953, 962, 999, 1028, 1032, 1038, 1048, 1081, 1141, 1171, 1189], "schedul": [61, 62, 63, 100, 111, 112, 125, 137, 147, 148, 172, 189, 212, 214, 278, 287, 288, 308, 352, 353, 382, 383, 494, 500, 514, 542, 543, 544, 545, 546, 547, 548, 549, 552, 594, 767, 789, 790, 819, 829, 835, 842, 857, 864, 865, 866, 867, 871, 873, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 911, 912, 913, 914, 915, 917, 933, 945, 946, 947, 948, 949, 956, 962, 964, 972, 974, 979, 988, 990, 991, 995, 999, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1148, 1184, 1194, 1195, 1205], "overhead": [61, 63, 466, 472, 583, 592, 757, 758], "usual": [61, 63, 85, 109, 125, 172, 173, 179, 182, 187, 192, 202, 204, 264, 298, 314, 330, 392, 432, 433, 459, 472, 476, 482, 484, 489, 494, 508, 516, 522, 551, 596, 612, 653, 707, 742, 743, 757, 766, 769, 788, 796, 808, 810, 815, 825, 831, 833, 837, 851, 853, 857, 873, 875, 879, 898, 934, 935, 942, 963, 977, 995, 996, 1011, 1012, 1013, 1014, 1023, 1032, 1033, 1034, 1035, 1039, 1042, 1045, 1046, 1052, 1054, 1056, 1057, 1059, 1062, 1068, 1073, 1135, 1142, 1143, 1149, 1171, 1172, 1178, 1191], "exhibit": [61, 63, 250, 688, 943, 964, 969], "glitch": [61, 63, 174, 179, 942, 943], "caus": [61, 63, 172, 175, 187, 241, 247, 257, 260, 264, 943, 990, 995, 1158], "hiccup": [61, 63, 179, 290, 1013], "twist": [61, 63, 821], "amazingli": [61, 63, 881], "multi": [62, 1142, 1149], "chmod": [62, 179, 369, 864, 865, 882, 887, 889, 891, 894, 946, 950], "snippet": [62, 115, 118, 192, 211, 333, 354, 659, 942, 1035], "subdirectori": [62, 143, 178, 187, 199, 201, 224, 315, 331, 479, 483, 484, 537, 551, 790, 812, 863, 864, 865, 877, 887, 889, 906, 921, 925, 942, 943, 1023, 1124, 1176], "stuff": [62, 71, 79, 101, 125, 134, 171, 174, 178, 187, 192, 204, 208, 211, 224, 233, 234, 255, 269, 288, 290, 311, 353, 355, 373, 472, 478, 580, 627, 788, 790, 796, 805, 837, 867, 897, 905, 911, 917, 933, 941, 971, 1032, 1034, 1091, 1131, 1136, 1138, 1169], "strace": [62, 98, 147, 172, 174, 387, 795, 800, 853, 960, 966, 979, 995, 1004, 1202], "pid": [62, 172, 174, 175, 471, 856, 869, 873, 875, 979, 995, 998, 1004, 1008, 1009], "4677": 62, "11hello": 62, "clock_gettime64": 62, "clock_monoton": [62, 769, 961, 995], "tv_sec": [62, 995], "164646": 62, "tv_nsec": [62, 995], "833862215": 62, "_newselect": 62, "tv_usec": 62, "500000": [62, 936, 942, 1141], "unfinish": [62, 174], "4679": 62, "resum": [62, 724, 725, 728, 729, 730, 833, 995], "timeout": [62, 764, 766, 768, 960, 1164], "mi": [62, 252], "845864201": 62, "4678": [62, 247], "fd": [62, 182, 244, 288, 554, 796, 941, 955, 959, 960, 961, 963, 967, 968, 969, 970, 973, 975, 978, 1001, 1004, 1008, 1093], "fourth": 62, "involv": [62, 79, 172, 175, 179, 182, 234, 288, 300, 301, 322, 375, 452, 460, 466, 472, 537, 604, 606, 695, 808, 837, 934, 1012, 1021, 1023], "occasion": [62, 160, 187, 204, 233, 250, 462, 476, 486, 688, 837, 881, 1059, 1073, 1150], "due": [62, 179, 204, 494, 758, 1164], "weird": [62, 288, 333, 341, 462, 732, 770, 796, 821, 990, 1008], "gil": [62, 204, 208, 300, 301, 322, 323, 326, 1136], "jitter": [62, 997, 999], "heavi": [62, 196, 204, 504, 943, 1059, 1194], "usr": [62, 153, 172, 173, 177, 183, 192, 195, 200, 202, 224, 231, 232, 241, 244, 247, 257, 260, 264, 267, 270, 285, 290, 292, 302, 306, 328, 334, 340, 346, 366, 369, 479, 481, 482, 484, 485, 489, 711, 744, 754, 788, 810, 837, 863, 869, 881, 893, 925, 928, 941, 943, 989, 999, 1008, 1011, 1012, 1013, 1014, 1023, 1026, 1028, 1035, 1038, 1062, 1124, 1139, 1152, 1164, 1171, 1178], "env": [62, 168, 173, 195, 290, 989, 999, 1062, 1090, 1124, 1139, 1152], "hello_left": 62, "hello_right": 62, "rjust": [62, 192, 260, 306], "hello_middl": 62, "center": [62, 195, 237, 252, 254, 260, 264, 285, 292, 306, 324, 328, 334, 340, 346, 350, 363, 470, 550], "t1": [62, 191, 254, 264, 285, 289, 306, 328, 340, 980], "t2": [62, 191, 247, 254, 264, 285, 328, 340, 980], "t3": 62, "async": [62, 65, 172, 204, 208, 241, 247, 257, 258, 260, 323, 327, 722, 987, 1010, 1136, 1204], "await": [62, 323], "epoll_wait": 62, "201": [62, 175, 205, 222, 231, 244, 247, 252, 254, 257, 260, 264, 267, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350], "multiplex": [62, 942, 961, 995, 1206], "create_task": 62, "sysf": [62, 125, 126, 127, 129, 135, 136, 147, 169, 219, 288, 356, 357, 553, 790, 793, 794, 839, 933, 934, 941, 943, 974, 975, 978, 1193, 1200], "unmaintain": [62, 278, 287, 288, 331, 388, 1013, 1077, 1186], "immun": [62, 611, 769], "hotplug": [62, 941], "reset": [62, 171, 501, 503, 753, 754, 755, 788, 1158, 1205], "pullup": 62, "pulldown": 62, "rpi": [62, 150, 183, 355, 837, 838, 941], "hope": [62, 172, 174, 177, 179, 183], "major": [62, 177, 190, 241, 247, 257, 260, 297, 299, 476, 480, 611, 796, 803, 868, 996, 1060, 1066, 1081], "releas": [62, 153, 175, 201, 315, 331, 340, 437, 483, 754, 765, 766, 768, 790, 796, 810, 934, 941, 984, 989, 1025, 1028, 1060, 1170, 1201], "ton": [62, 752, 876, 938, 963, 995, 999, 1189], "bartosz": 62, "golaszewski": 62, "gpiochip0": [62, 817, 977], "ioctl": [62, 288, 458, 803, 805, 831, 839, 840, 845, 851, 937, 941], "crw": [62, 801, 868, 919, 941, 942, 943], "254": [62, 193, 244, 247, 252, 254, 257, 264, 267, 285, 292, 302, 306, 312, 328, 340, 346, 350], "request": [62, 94, 99, 126, 142, 173, 174, 177, 234, 236, 261, 267, 323, 340, 477, 496, 518, 532, 701, 702, 705, 706, 795, 839, 963, 978, 1169], "request_lin": 62, "consum": [62, 143, 174, 177, 194, 244, 323, 470, 487, 516, 766, 768, 862, 870, 877, 984, 985, 996, 1001, 1003, 1005, 1008, 1035, 1057, 1066, 1093, 1148, 1194], "mytest": 62, "config": [62, 98, 130, 131, 161, 162, 168, 173, 175, 177, 183, 191, 285, 302, 306, 373, 380, 389, 553, 754, 790, 810, 838, 919, 941, 942, 943, 950, 1025, 1035, 1164], "lineset": 62, "set_valu": [62, 768], "all_io": 62, "transform": [62, 156, 192, 207, 208, 211, 213, 223, 228, 229, 231, 232, 239, 250, 252, 255, 258, 281, 288, 290, 299, 305, 323, 336, 354, 466, 557, 558, 570, 572, 625, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 722, 746, 790, 1021, 1041, 1085, 1119, 1136], "ntime": [62, 1045], "task": [62, 78, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 142, 187, 229, 242, 255, 269, 272, 275, 305, 311, 373, 376, 378, 379, 382, 383, 384, 387, 790, 864, 865, 882, 924, 933, 941, 944, 959, 974, 980, 993, 994, 996, 997, 1136, 1169], "interv": [62, 90, 130, 211, 241, 247, 248, 257, 260, 264, 285, 323, 373, 538, 540, 553, 554, 694, 768, 769, 961, 971, 995, 999], "none": [62, 138, 152, 168, 171, 172, 177, 182, 191, 193, 205, 215, 222, 223, 232, 237, 238, 241, 244, 247, 253, 254, 257, 260, 264, 267, 273, 282, 285, 289, 290, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 364, 456, 457, 478, 481, 601, 687, 689, 960, 977, 1005, 1032, 1035, 1057, 1083, 1091, 1161, 1176], "itertool": [62, 269, 271, 323, 1039], "cram": [62, 165, 202, 805, 995, 1032, 1149], "goe": [62, 86, 123, 133, 175, 177, 192, 297, 466, 501, 566, 669, 689, 698, 748, 801, 837, 879, 880, 966, 993, 999, 1009, 1012, 1019, 1062, 1065, 1085], "stuff_raw": 62, "mod": [62, 260, 285, 305, 815], "sidewai": [62, 208, 211, 266, 382, 383, 1040, 1041], "numpi": [62, 204, 208, 223, 242, 248, 255, 290, 296, 324, 326, 329, 351, 478, 1059, 1135, 1139, 1142, 1150, 1154, 1164, 1171], "transpos": [62, 897], "col": 62, "tolist": 62, "outsid": [62, 260, 505, 518, 598, 606, 611, 753, 754, 827, 898, 980, 996, 1035], "instanti": [62, 134, 231, 373, 496, 507, 521, 522, 535, 536, 537, 540, 622, 651, 669, 690, 716, 722, 744, 757, 758, 1047, 1048, 1139], "coro": [62, 722, 724, 725, 727, 728, 729, 730], "cannot": [62, 65, 111, 112, 168, 172, 173, 174, 179, 183, 194, 195, 201, 202, 204, 211, 231, 264, 291, 294, 328, 355, 432, 433, 436, 437, 456, 458, 460, 463, 466, 484, 487, 499, 522, 550, 589, 598, 601, 603, 606, 607, 630, 665, 666, 668, 669, 671, 672, 676, 695, 698, 701, 707, 733, 743, 744, 748, 754, 756, 766, 768, 775, 833, 837, 842, 857, 874, 879, 882, 893, 908, 916, 952, 996, 1005, 1027, 1028, 1029, 1033, 1035, 1047, 1052, 1059, 1067, 1068, 1074, 1075, 1085, 1155, 1157, 1158, 1169, 1194], "stuff_raw2": 62, "05": [62, 98, 125, 175, 182, 187, 231, 266, 289, 296, 307, 316, 319, 368, 386, 485, 1140], "runtimeerror": [62, 195, 231, 285, 354, 1032, 1034], "reus": [62, 123, 187, 193, 1027, 1077], "alreadi": [62, 81, 125, 134, 172, 173, 175, 183, 194, 196, 204, 208, 264, 291, 294, 449, 460, 466, 498, 518, 520, 531, 534, 553, 570, 650, 790, 796, 810, 817, 825, 835, 837, 840, 857, 933, 941, 942, 943, 950, 963, 964, 966, 971, 972, 974, 991, 1026, 1032, 1059, 1085, 1164, 1169, 1171, 1178], "bare": [62, 79, 81, 88, 90, 109, 150, 172, 387, 934, 942], "create_coro": 62, "ctor": [62, 199, 208, 257, 306, 339, 550, 572, 580, 597, 600, 601, 604, 614, 616, 651, 674, 698, 699, 701, 705, 706, 731, 739, 754, 770, 856], "nest": [62, 168, 232, 245, 254, 264, 271, 275, 292, 302, 400, 429, 430, 456, 716, 768, 784, 842, 1032, 1075], "_blink": 62, "coro_cr": 62, "creator": [62, 166, 183], "create_factory_for_blink": 62, "blinkfunc": 62, "blink_func": 62, "stuff_decorator_stage1": 62, "stage1": 62, "stararg": [62, 1033, 1036, 1057], "func": [62, 231, 241, 247, 257, 260, 291, 305, 556, 625, 694, 709, 716, 757, 1033, 1037], "becom": [62, 69, 79, 90, 93, 133, 138, 142, 172, 174, 200, 212, 291, 294, 314, 316, 319, 330, 415, 445, 447, 454, 457, 478, 494, 498, 537, 698, 753, 754, 755, 837, 874, 893, 926, 942, 943, 950, 993, 996, 997, 1032, 1038, 1068, 1170, 1176, 1191, 1192], "obsolet": [62, 204, 1059], "prog": [62, 245, 354], "demo": [62, 98, 99, 123, 125, 133, 143, 147, 172, 195, 199, 204, 207, 209, 212, 213, 216, 224, 231, 239, 242, 245, 248, 250, 255, 261, 278, 281, 284, 287, 288, 308, 309, 352, 353, 369, 387, 479, 480, 484, 485, 489, 492, 540, 548, 678, 755, 790, 867, 870, 871, 892, 893, 933, 962, 1004, 1013, 1059, 1142, 1175, 1195, 1199], "opposit": [62, 176, 430, 943, 996, 1149], "futur": [62, 125, 141, 179, 244, 264, 276, 277, 279, 288, 336, 360, 382, 383, 454, 518, 688, 722, 764, 766, 767, 789, 790, 847, 1189], "glt": [64, 67, 169], "2024": [64, 67, 124, 147, 148, 247, 386], "biographi": [64, 67, 232, 281, 327, 1136], "textual": [64, 65, 67, 202, 204, 551], "stori": [65, 172, 173, 174, 178, 179, 183, 200, 201, 233, 296, 447, 580, 598, 612, 775, 812, 815, 838, 876, 937, 954], "pointlessli": 65, "light": [65, 85, 182, 876, 1058, 1169], "focus": [65, 179], "beauti": [65, 193, 207, 208, 211, 229, 231, 232, 239, 250, 254, 255, 258, 264, 281, 305, 369, 442, 572, 630, 979, 1036, 1085, 1093, 1136], "love": [65, 153, 298, 1131], "creativ": [65, 171, 249], "edit": [65, 148, 175, 177, 178, 187, 219, 224, 260, 288, 390, 550, 810, 837, 942, 1091, 1162, 1202], "debounc": 65, "libgpiod": [65, 67, 135, 142, 150, 169, 327, 355, 357, 790], "toolkit": [65, 1058], "termin": [65, 130, 171, 173, 177, 191, 202, 224, 270, 272, 288, 291, 294, 297, 299, 301, 391, 394, 398, 401, 404, 411, 423, 429, 452, 472, 478, 490, 494, 520, 521, 553, 572, 601, 722, 728, 755, 761, 853, 872, 875, 879, 880, 881, 897, 919, 929, 930, 963, 981, 985, 990, 995, 1007, 1008, 1009, 1064, 1066, 1070, 1085, 1098, 1115, 1143, 1149, 1152, 1200], "perfectli": [65, 194, 250], "simul": [65, 137, 204, 375, 376, 553], "cute": [65, 1142], "imageview": 66, "raspberri": [67, 79, 98, 105, 107, 133, 147, 150, 167, 184, 188, 214, 288, 327, 372, 374, 375, 386, 388, 554, 790, 814, 818, 837, 841, 846, 852, 855, 858, 933, 940, 942, 943, 954, 999, 1012, 1014, 1018, 1021, 1023, 1025, 1036, 1058, 1062, 1150, 1152, 1163, 1184, 1193], "evolut": [67, 232, 281, 327, 897, 1136], "increasingli": 69, "whose": [69, 183, 241, 247, 257, 260, 296, 306, 382, 383, 516, 586, 689, 690, 934, 1035, 1169, 1176], "mainten": [69, 411, 437, 456, 1028], "easier": [69, 81, 86, 93, 193, 234, 478, 504, 609, 693, 837, 1189], "never": [69, 111, 112, 172, 173, 174, 179, 192, 254, 260, 264, 306, 324, 415, 436, 452, 463, 466, 476, 494, 516, 595, 676, 754, 775, 776, 778, 780, 876, 934, 957, 982, 1012], "simpler": [69, 183, 234, 298, 301, 394, 453, 487, 633, 833, 837, 942, 954], "wors": [69, 160, 175, 260, 462, 478, 716, 959, 1172], "makefil": [69, 98, 153, 234, 277, 279, 479, 490, 806, 810, 838, 839, 1016, 1019, 1021, 1028, 1029], "everytbodi": 70, "runtim": [70, 153, 172, 183, 205, 209, 233, 257, 260, 340, 391, 412, 460, 470, 471, 484, 489, 520, 521, 534, 548, 583, 592, 632, 650, 651, 694, 736, 743, 757, 758, 980, 1011, 1047, 1065, 1077, 1142, 1143], "dispatch": [70, 323, 340, 583, 592, 668, 671, 672, 774, 775, 776, 778, 789, 790], "hell": [70, 224, 258, 462, 495, 708, 739, 761, 827, 862, 987, 1149], "destructor": [70, 71, 98, 107, 133, 143, 234, 250, 271, 297, 299, 337, 371, 372, 500, 514, 542, 552, 566, 572, 581, 587, 594, 595, 596, 597, 602, 604, 619, 667, 668, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 703, 707, 734, 750, 759, 765, 767, 770, 775, 787, 789, 790, 798, 829, 842, 854, 1181], "opportun": [70, 179, 182, 192, 204, 223, 466, 685, 1048, 1192], "shoot": [70, 899], "oneself": [70, 1194], "encapsul": [71, 74, 232, 245, 250, 297, 299, 323, 355, 476, 496, 500, 514, 540, 542, 543, 544, 545, 546, 547, 548, 549, 552, 559, 561, 572, 594, 595, 617, 620, 623, 639, 645, 649, 658, 661, 662, 667, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 694, 703, 734, 750, 759, 767, 775, 787, 789, 790, 806, 839, 1005, 1060, 1190], "hide": [71, 233, 245, 301, 1060], "fanci": [71, 1080, 1142, 1162], "whatnot": [71, 248, 766, 837, 934, 942, 960, 990], "boost": [72, 250, 489, 492, 572, 722, 998, 1207], "feel": [72, 172, 174, 183, 204, 589, 686, 688, 689, 694, 979, 997, 1059], "cluster_ecpropos": [73, 74, 75, 88, 790], "cluster_ecproposal_ec2": [73, 75, 790], "cluster_ecproposal_ec2_python": [73, 75, 790], "cluster_ecproposal_ec1": [73, 74, 75, 88, 790], "cluster_ecproposal_ec1_mt": [73, 74, 75, 88, 790], "cluster_ecproposal_ec1_linux": [73, 74, 75, 790], "cluster_ecproposal_ec1_cxx": [73, 74, 75, 88, 790], "ecproposal_ec2_python_web_sensor": [73, 75, 790], "ecproposal_ec2_python_flask": [73, 75, 790], "ecproposal_ec2_python_exercise_avg_displai": [73, 75, 790], "ex": [73, 74, 75, 79, 88, 160, 232, 245, 566, 583, 744, 790, 882, 897, 1171], "averag": [73, 74, 75, 79, 85, 86, 208, 244, 248, 264, 299, 323, 499, 515, 545, 552, 790, 999, 1093], "displai": [73, 74, 75, 79, 113, 114, 116, 117, 124, 126, 135, 143, 177, 241, 247, 257, 260, 285, 288, 290, 292, 297, 302, 306, 328, 334, 340, 346, 378, 470, 543, 790, 872, 919, 928, 941, 995, 1171], "ecproposal_ec2_python_exercise_sensor": [73, 75, 790], "temperatur": [73, 74, 75, 79, 83, 92, 95, 98, 115, 120, 121, 125, 126, 127, 128, 133, 134, 135, 143, 147, 208, 241, 288, 323, 336, 337, 375, 378, 393, 395, 397, 495, 501, 506, 527, 541, 542, 543, 544, 545, 546, 547, 548, 552, 553, 554, 565, 583, 594, 672, 704, 774, 776, 778, 780, 790, 837, 933, 940, 972, 974, 991, 1047, 1124, 1139, 1140, 1141, 1142], "ecproposal_ec2_python_bas": [73, 75, 790], "ecproposal_ec1_linux_exercise_sensor": [73, 74, 75, 790], "ecproposal_ec1_linux_exercise_avg_sensor_parallel": [73, 74, 75, 790], "ecproposal_ec1_linux_exercise_led_displai": [73, 74, 75, 790], "ecproposal_ec1_linux_exercise_avg_sensor": [73, 74, 75, 790], "ecproposal_ec1_git": [73, 74, 75, 790], "ecproposal_ec1_mt_exercise_mt_race_fix": [73, 74, 75, 88, 790], "avoid": [73, 74, 75, 79, 88, 172, 179, 187, 264, 402, 437, 515, 550, 552, 562, 596, 600, 651, 790, 835, 926, 942, 1190], "ecproposal_ec1_mt_exercise_mt_rac": [73, 74, 75, 88, 790], "ecproposal_ec1_mt_lock": [73, 74, 75, 88, 790], "semaphor": [73, 74, 75, 77, 79, 88, 90, 167, 196, 197, 219, 241, 247, 257, 260, 387, 766, 790, 829, 984, 1194, 1204], "ecproposal_ec1_cxx_build": [73, 74, 75, 88, 790], "ecproposal_ec1_mt_wait": [73, 74, 75, 88, 790], "ecproposal_ec1_linux_bas": [73, 74, 75, 790], "ecproposal_ec1_linux_dev_mgmt": [73, 74, 75, 790], "ecproposal_ec1_cxx_ifac": [73, 74, 75, 790], "ecproposal_ec1_linux_gpio": [73, 74, 75, 790], "ecproposal_ec1_cxx_unittest": [73, 74, 75, 790], "ecproposal_ec1_cxx_oo_bas": [73, 74, 75, 790], "qualiti": [74, 179, 233, 296, 942, 1163], "assur": 74, "characterist": 74, "polymorph": [75, 107, 125, 126, 141, 231, 232, 245, 297, 299, 301, 316, 319, 478, 500, 514, 542, 594, 667, 668, 671, 672, 691, 752, 757, 774, 775, 776, 789, 790, 1189, 1192], "concurr": [75, 204, 208, 258, 327, 744, 827, 1043, 1136], "increment": [76, 190, 233, 247, 250, 273, 296, 394, 398, 402, 422, 431, 438, 442, 444, 448, 451, 455, 464, 468, 473, 474, 572, 589, 696, 734, 787, 789, 790, 869, 981, 982, 983, 1004, 1005, 1043], "lossi": 76, "access": [77, 79, 89, 111, 112, 115, 121, 130, 169, 173, 174, 175, 177, 179, 192, 202, 212, 219, 231, 241, 244, 247, 250, 257, 260, 267, 270, 285, 288, 292, 302, 306, 316, 328, 333, 334, 340, 346, 355, 369, 372, 374, 406, 445, 466, 467, 505, 521, 546, 547, 548, 549, 572, 595, 607, 609, 612, 613, 615, 616, 630, 655, 669, 676, 679, 682, 683, 686, 687, 688, 689, 690, 691, 705, 722, 737, 741, 753, 790, 795, 805, 808, 814, 825, 833, 837, 839, 855, 870, 873, 882, 884, 885, 908, 933, 943, 952, 953, 959, 963, 967, 969, 973, 977, 981, 995, 996, 1004, 1009, 1030, 1035, 1042, 1043, 1046, 1065, 1072, 1074, 1087, 1104, 1140, 1157, 1171, 1194], "flavor": [77, 88, 172, 479, 743, 748], "stash": 78, "resolv": [78, 123, 156, 183, 187, 241, 244, 247, 250, 257, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346, 433, 459, 608, 954, 1011, 1014, 1140, 1141], "suffic": [78, 179, 404, 454], "purpos": [78, 79, 81, 130, 141, 165, 173, 177, 183, 204, 223, 241, 247, 257, 260, 272, 285, 372, 400, 478, 490, 597, 629, 669, 758, 837, 870, 879, 942, 964, 969, 990, 1011, 1029, 1059, 1141, 1170, 1193, 1200], "unifi": [79, 138, 211, 622], "intention": [79, 233, 306, 709], "power": [79, 90, 171, 173, 188, 193, 233, 250, 370, 371, 372, 390, 402, 403, 445, 454, 837, 847, 854, 868, 934, 938, 941, 942, 943, 962, 977, 995, 999, 1036, 1054, 1058, 1060, 1066, 1071, 1083, 1088, 1159], "being": [79, 82, 126, 160, 172, 175, 176, 182, 196, 204, 210, 231, 260, 264, 323, 337, 369, 415, 442, 459, 495, 498, 583, 607, 650, 752, 754, 758, 760, 766, 788, 819, 833, 837, 872, 954, 969, 995, 1042, 1049, 1059, 1062, 1140, 1178, 1181, 1194], "address": [79, 100, 107, 111, 112, 125, 126, 147, 172, 174, 175, 176, 179, 212, 219, 224, 231, 233, 234, 250, 252, 278, 287, 288, 299, 308, 309, 350, 352, 353, 366, 371, 372, 380, 433, 435, 444, 448, 451, 454, 455, 463, 464, 468, 473, 474, 494, 500, 505, 508, 514, 516, 518, 523, 542, 543, 544, 545, 546, 547, 548, 549, 552, 553, 594, 604, 609, 696, 706, 707, 734, 748, 767, 787, 789, 790, 817, 821, 833, 835, 864, 865, 866, 867, 870, 871, 873, 877, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 911, 912, 913, 914, 915, 917, 933, 935, 937, 942, 943, 945, 946, 947, 948, 949, 954, 956, 960, 962, 964, 971, 972, 974, 979, 987, 988, 990, 991, 994, 996, 1004, 1011, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1028, 1043, 1046, 1140, 1141, 1160, 1169], "crucial": [79, 172, 196, 469, 631], "piec": [79, 165, 173, 456, 572, 624, 942, 973], "mmu": [79, 172, 808, 851, 874, 995], "sophist": [79, 241, 495, 516, 553, 690], "permiss": [79, 98, 101, 102, 103, 125, 148, 153, 207, 208, 212, 214, 224, 231, 247, 267, 278, 287, 302, 305, 308, 323, 352, 355, 364, 369, 370, 371, 372, 374, 542, 594, 680, 767, 788, 789, 790, 796, 837, 864, 865, 867, 870, 871, 874, 880, 883, 887, 888, 889, 890, 891, 893, 894, 895, 899, 911, 914, 916, 917, 919, 933, 934, 944, 947, 949, 950, 953, 954, 959, 962, 963, 964, 967, 969, 970, 972, 974, 988, 991, 994, 996, 997, 1009, 1034, 1136, 1164, 1171, 1195, 1204], "nativ": [79, 98, 105, 125, 171, 177, 179, 205, 241, 277, 279, 297, 376, 790, 837, 933, 1012, 1016, 1018, 1021, 1145, 1148, 1154], "varieti": [79, 472, 873, 1011, 1192], "storag": [79, 177, 182, 479, 707, 837, 873, 934, 942, 959, 979, 1205], "underli": [79, 153, 232, 239, 255, 264, 305, 369, 374, 744, 943, 1136, 1141, 1145], "platform": [79, 153, 179, 232, 241, 245, 247, 257, 260, 264, 272, 290, 340, 362, 371, 389, 817, 837, 942, 943, 977, 995, 1124, 1169, 1171], "offer": [79, 172, 182, 223, 298, 430, 607, 611], "popular": [79, 183, 196, 200, 425, 702, 862, 943, 995, 1011, 1027, 1053, 1138, 1144, 1152, 1165, 1192], "often": [79, 90, 171, 172, 173, 174, 204, 254, 264, 291, 294, 314, 330, 411, 421, 442, 481, 496, 508, 622, 744, 837, 897, 973, 1039, 1059, 1073, 1191, 1192], "appropri": [79, 127, 138, 159, 165, 172, 182, 187, 192, 224, 264, 411, 425, 437, 552, 758, 833, 941, 953, 1004, 1142, 1148, 1192], "prototyp": [79, 355, 402, 494, 556, 589, 705, 837, 934, 942, 955, 1032, 1148], "higher": [79, 172, 183, 241, 247, 257, 260, 788, 835, 934, 996, 998, 1005, 1013, 1021, 1148, 1191], "fulli": [79, 176, 179, 183, 208, 458, 553, 1005], "distribut": [79, 177, 182, 187, 199, 204, 224, 234, 252, 264, 366, 494, 540, 548, 761, 808, 837, 875, 876, 997, 1059], "en": [79, 153, 177, 189, 199, 260, 288, 674], "vogu": 79, "serial": [79, 171, 172, 182, 212, 247, 248, 260, 870, 872, 1193, 1200], "groundwork": 79, "lai": 79, "instruct": [79, 171, 175, 179, 202, 233, 288, 297, 299, 466, 537, 753, 768, 983, 995, 1026, 1124], "consolid": [79, 204], "makeri": 79, "everybodi": [79, 177, 298, 458, 504, 598, 637, 680, 868, 1062, 1066, 1169, 1189], "clarifi": 79, "earli": [79, 171, 204, 208, 213, 298, 842, 854, 869, 997, 1030, 1047, 1085, 1191], "matter": [79, 171, 176, 177, 179, 187, 204, 210, 212, 396, 440, 472, 479, 486, 496, 596, 597, 609, 612, 698, 737, 744, 754, 756, 812, 837, 839, 882, 893, 935, 941, 943, 954, 1034, 1059, 1161, 1171, 1181, 1192], "rewrit": [79, 81, 172, 478], "translat": [79, 92, 93, 192, 205, 223, 260, 264, 267, 270, 306, 743, 1103], "flask": [79, 94, 169, 208, 211, 1033], "network": [79, 111, 112, 158, 167, 168, 169, 172, 179, 189, 190, 212, 214, 219, 244, 260, 267, 270, 281, 285, 287, 288, 292, 302, 306, 308, 323, 328, 334, 340, 346, 352, 371, 387, 388, 472, 505, 790, 791, 814, 854, 870, 872, 873, 875, 933, 936, 937, 942, 943, 944, 954, 958, 959, 962, 963, 974, 993, 1200, 1204], "oppos": [81, 125, 171, 211, 245, 252, 262, 297, 437, 481, 486, 583, 921, 935, 942, 950, 984, 997, 1004, 1009, 1028, 1054, 1065, 1066, 1149, 1157], "ahead": [81, 187, 476, 1049], "optimz": 81, "donald": [81, 465], "knuth": [81, 465], "prematur": [81, 465, 469], "optim": [81, 173, 285, 297, 328, 452, 468, 469, 473, 474, 481, 775, 790, 821, 1148, 1188, 1190], "evil": [81, 250, 406, 456, 465, 469, 481, 609], "knowledg": [82, 86, 291, 294, 297, 553, 687, 689, 837, 935, 943, 1036, 1058, 1163], "onewir": [82, 86, 98, 107, 125, 126, 127, 135, 143, 147, 288, 299, 336, 369, 372, 541, 542, 594, 790, 933, 940, 941, 972, 974, 991], "protocol": [82, 164, 177, 210, 211, 221, 243, 246, 248, 249, 253, 256, 259, 262, 271, 284, 286, 291, 294, 300, 301, 303, 304, 307, 310, 322, 323, 325, 326, 327, 329, 333, 335, 341, 344, 345, 375, 378, 410, 418, 505, 518, 795, 924, 935, 937, 941, 943, 944, 952, 953, 973, 1032, 1036, 1040, 1047], "aspect": [82, 130, 204, 208, 234, 258, 297, 299, 327, 501, 868, 941, 943, 1136, 1163, 1169, 1194], "regard": [82, 179, 204, 355, 897, 1059, 1066, 1165, 1169], "filesystem": [82, 86, 107, 125, 171, 174, 183, 212, 214, 224, 275, 340, 369, 374, 553, 789, 790, 837, 863, 942, 954, 970, 977, 995, 1014, 1169, 1195, 1200, 1202, 1206], "hwmon": [82, 86, 126, 375, 378], "composit": [83, 107, 129, 132, 143, 208, 234, 280, 298, 299, 316, 493, 500, 514, 528, 542, 594, 790, 1039, 1192], "mock": [83, 125, 126, 141, 142, 143, 298, 300, 301, 322, 326, 337, 356, 358, 542, 543, 544, 545, 547, 583, 594, 790, 1176], "pin": [85, 142, 288, 355, 934, 938, 941, 942], "emit": [85, 156, 521, 522, 879], "linearli": [85, 264, 636, 873], "cold": [85, 223], "hot": [85, 174, 467, 470, 819], "queri": [85, 1067], "feed": [85, 169, 1141], "said": [85, 111, 112, 174, 187, 204, 291, 294, 301, 516, 629, 676, 760, 766, 798, 934, 942, 943, 954, 981, 996, 1039, 1059, 1079, 1149, 1162], "ds18s20": [86, 375, 1169], "datasheet": [86, 157, 833, 934, 943], "lm73": [86, 288, 375, 378, 790, 933, 940, 943], "ti": [86, 171, 476, 554, 598, 755], "hoc": [86, 234, 436], "report": [86, 126, 129, 135, 143, 153, 171, 174, 175, 187, 189, 191, 380, 462, 472, 595, 790, 955, 990, 1176, 1178], "sort": [86, 107, 109, 159, 172, 199, 205, 213, 217, 232, 234, 244, 245, 250, 252, 254, 255, 260, 268, 282, 285, 292, 297, 306, 312, 334, 340, 350, 466, 467, 470, 471, 481, 572, 630, 648, 658, 662, 691, 732, 736, 744, 757, 766, 768, 790, 877, 881, 919, 930, 943, 1034, 1082, 1083, 1138, 1164], "experi": [86, 160, 179, 204, 476, 481, 580, 942, 943, 1170], "subsystem": [87, 98, 99, 104, 105, 125, 147, 190, 212, 219, 224, 261, 277, 279, 281, 287, 288, 297, 299, 300, 316, 322, 790, 815, 833, 847, 867, 871, 873, 933, 934, 941, 942, 943, 977, 993, 1034, 1169, 1193, 1194, 1200], "especi": [87, 93, 123, 133, 173, 177, 196, 204, 288, 369, 387, 389, 415, 426, 456, 476, 698, 812, 943], "deprec": [87, 142, 147, 301, 663, 963, 977, 1189], "foremost": 88, "osen": [88, 90, 182, 760, 788, 995], "recurs": [88, 89, 208, 232, 241, 247, 257, 260, 764, 829, 842, 881, 882, 897, 909, 919, 926, 946, 953, 990, 1071, 1075, 1189], "mother": [89, 109, 188, 250, 572, 1052, 1189], "protect": [89, 143, 172, 174, 224, 232, 244, 297, 299, 417, 436, 534, 535, 595, 598, 609, 665, 667, 668, 691, 766, 790, 821, 829, 835, 874, 916, 942, 983, 984, 995, 1043, 1046, 1055, 1181, 1194], "critic": [89, 172, 182, 472, 765, 827, 829, 1164], "kind": [89, 120, 172, 174, 182, 187, 192, 204, 208, 241, 247, 248, 257, 258, 260, 272, 288, 300, 301, 322, 326, 501, 553, 601, 648, 698, 707, 752, 766, 868, 934, 941, 942, 1043, 1136, 1162, 1163, 1194], "poll": [90, 178, 189, 829, 831, 854, 977, 982, 984, 1001, 1005, 1193, 1200, 1204, 1206], "second": [90, 171, 174, 175, 179, 191, 204, 210, 231, 237, 241, 245, 247, 252, 257, 260, 264, 290, 292, 355, 390, 400, 454, 470, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 530, 534, 535, 536, 540, 543, 553, 589, 604, 652, 654, 655, 694, 723, 724, 743, 754, 755, 768, 769, 784, 785, 786, 847, 874, 879, 882, 942, 961, 964, 971, 995, 1004, 1008, 1012, 1013, 1027, 1028, 1029, 1079, 1087, 1164, 1176, 1189], "readi": [90, 171, 934, 1169], "rare": [90, 177, 194, 208, 479, 489, 551, 553, 604, 702, 753, 919, 941, 958, 1070, 1074, 1087, 1170], "btw": [90, 176, 182, 204, 210, 224, 231, 251, 254, 369, 453, 806, 872, 1125, 1127], "increas": [90, 174, 466, 934, 997, 999, 1027, 1192], "tight": [90, 196, 410, 768, 840, 1161], "bui": [90, 172, 495], "bigger": [90, 172, 204, 466, 1142], "avail": [90, 133, 138, 143, 171, 172, 174, 175, 177, 183, 187, 196, 200, 204, 224, 233, 241, 247, 257, 260, 314, 322, 323, 326, 330, 388, 480, 482, 487, 491, 496, 521, 522, 722, 758, 764, 768, 810, 837, 842, 869, 893, 934, 938, 941, 942, 993, 996, 997, 1014, 1025, 1030, 1035, 1042, 1066, 1084, 1085, 1135, 1144, 1161, 1164, 1171, 1172, 1191, 1194], "intro": [94, 125, 142, 143, 147, 169, 199, 223, 233, 242, 255, 256, 269, 272, 291, 294, 299, 305, 311, 323, 594, 694, 702, 722, 746, 790, 933, 957, 974, 976, 978, 1136, 1190, 1192, 1204], "rout": [94, 208, 1033], "jinja2": 94, "ss2022": [97, 790, 866, 867, 933], "ws2022": 97, "lab": [97, 107, 125, 369], "vo": [98, 107, 125, 375], "ku": [98, 106, 107, 125], "g1": [98, 790, 866, 867, 933], "g2": [98, 369, 790, 866, 867, 933], "08": [98, 100, 106, 125, 175, 182, 183, 184, 238, 241, 266, 270, 296, 334, 386, 490, 934, 941, 943, 965, 1026, 1140], "cont": [98, 125, 242, 305], "command": [98, 100, 123, 125, 168, 171, 176, 182, 212, 224, 229, 239, 241, 247, 248, 255, 257, 260, 269, 272, 278, 280, 287, 288, 305, 308, 309, 352, 353, 355, 369, 374, 387, 437, 458, 469, 481, 491, 492, 493, 500, 514, 518, 528, 542, 551, 594, 604, 753, 767, 789, 790, 837, 863, 864, 865, 866, 867, 870, 871, 872, 874, 875, 876, 877, 879, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 899, 900, 901, 902, 904, 905, 906, 908, 909, 911, 912, 913, 915, 917, 925, 930, 933, 942, 943, 944, 945, 946, 953, 957, 962, 964, 972, 974, 988, 990, 991, 994, 995, 996, 997, 1011, 1012, 1019, 1023, 1027, 1087, 1136, 1164, 1171, 1178, 1192], "wsl": [98, 99, 104, 105, 125, 147, 261, 281, 287, 300, 316, 322, 790, 867, 871, 933, 1014, 1021, 1022, 1026], "homework": [98, 103, 106, 125, 147, 174], "sshf": [98, 102, 125, 278, 287, 288, 308, 309, 352, 376, 790, 933, 944, 949, 1014, 1023], "toolchain": [98, 104, 105, 107, 109, 124, 125, 133, 148, 167, 184, 199, 201, 288, 387, 478, 479, 485, 500, 514, 542, 543, 544, 545, 546, 547, 548, 549, 552, 553, 554, 594, 767, 789, 790, 838, 867, 870, 871, 933, 956, 962, 964, 971, 972, 974, 988, 991, 994, 996, 1013, 1014, 1015, 1016, 1019, 1027, 1028, 1029, 1060, 1184, 1186, 1187, 1188, 1196, 1202, 1204], "bashrc": [98, 105, 125, 171, 183, 244, 278, 287, 288, 302, 308, 309, 340, 352, 353, 790, 867, 869, 917, 919, 933, 953, 1023, 1025], "studi": [98, 105, 147, 233, 276, 277, 279, 280, 288, 336, 493, 500, 694, 734, 789, 790, 933, 1016, 1018, 1021], "ds18b20": [98, 125, 127, 143, 147, 288, 336, 369, 790, 933, 940, 971], "slave": [98, 125, 127, 143, 147, 288, 336, 790, 933, 938, 940, 971], "redirect": [98, 101, 125, 173, 176, 212, 214, 224, 241, 247, 257, 260, 278, 287, 288, 308, 352, 354, 369, 374, 790, 864, 865, 866, 867, 881, 901, 902, 904, 905, 908, 909, 911, 917, 930, 933, 963, 1085, 1185, 1195, 1202], "pipe": [98, 172, 177, 179, 192, 212, 214, 224, 278, 287, 288, 290, 308, 352, 354, 369, 374, 788, 790, 867, 874, 879, 919, 924, 933, 963, 1007, 1008, 1009, 1023, 1085, 1185, 1195, 1202], "06": [98, 107, 124, 125, 182, 213, 257, 276, 289, 296, 313, 316, 319, 368, 386, 478, 489, 572, 788, 1062, 1140], "past": [98, 172, 176, 177, 234, 250, 442, 627, 629, 633, 636, 640, 705, 810, 812, 876, 1131, 1135, 1186], "2p": [98, 105], "3p": [98, 105], "5p": [98, 105], "pointer": [98, 109, 120, 125, 134, 143, 175, 199, 275, 336, 361, 370, 371, 372, 387, 400, 402, 404, 445, 446, 448, 449, 451, 453, 454, 455, 464, 468, 473, 474, 508, 553, 566, 583, 588, 590, 595, 596, 598, 606, 613, 615, 624, 628, 632, 636, 637, 640, 646, 650, 663, 696, 703, 704, 705, 732, 734, 739, 741, 743, 748, 753, 755, 758, 759, 767, 770, 774, 775, 778, 780, 785, 786, 787, 789, 790, 796, 803, 808, 819, 825, 854, 857, 955, 981, 1009, 1085, 1186, 1187, 1188, 1189, 1190, 1192], "exit": [98, 125, 147, 168, 172, 174, 202, 223, 241, 247, 250, 257, 260, 282, 288, 323, 362, 387, 391, 443, 485, 492, 501, 604, 671, 751, 753, 790, 800, 805, 839, 933, 943, 959, 960, 961, 963, 964, 969, 971, 974, 975, 991, 1001, 1008, 1009, 1028, 1034, 1042, 1043, 1061, 1064, 1077, 1087, 1098, 1115, 1164, 1171], "statu": [98, 125, 126, 135, 143, 147, 168, 173, 175, 187, 241, 247, 250, 257, 260, 272, 282, 288, 387, 391, 443, 481, 485, 492, 671, 788, 790, 839, 853, 933, 964, 969, 971, 974, 991, 995, 1008, 1028, 1064, 1091, 1150], "yai": [98, 168, 244, 252, 254, 267, 273, 292, 302, 334, 346, 350, 637, 688, 694, 990], "ol": [98, 125, 250, 297, 299, 306, 378, 500, 514, 542, 543, 544, 545, 546, 547, 548, 549, 552, 559, 561, 594, 598, 602, 617, 620, 623, 639, 645, 649, 658, 661, 662, 667, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 703, 734, 746, 750, 756, 759, 767, 775, 778, 787, 789, 790, 930, 1005, 1080, 1085, 1108], "randomsensor": [98, 143, 501, 506, 515, 527, 541, 542, 548, 552, 562, 563, 564, 565, 567, 568, 594, 752, 753, 754, 755, 790, 1047], "rectangl": [98, 165, 504, 572, 601, 617, 691, 790], "mystr": [98, 198, 250], "point3d": [98, 617, 691, 790], "cuboid": [98, 617, 691, 790], "hierarchi": [100, 107, 111, 112, 115, 121, 130, 208, 209, 211, 213, 231, 232, 245, 248, 260, 278, 287, 288, 308, 309, 319, 352, 353, 380, 467, 494, 495, 496, 499, 500, 514, 515, 519, 521, 542, 552, 594, 790, 867, 870, 871, 872, 883, 886, 887, 888, 889, 890, 891, 892, 897, 903, 909, 916, 933, 945, 946, 947, 948, 949, 974, 992, 1021, 1022], "parent": [100, 110, 111, 112, 174, 187, 189, 278, 287, 288, 308, 309, 352, 353, 788, 790, 817, 867, 869, 870, 871, 872, 873, 882, 883, 886, 887, 888, 889, 890, 891, 892, 900, 901, 902, 903, 904, 906, 908, 909, 910, 921, 933, 945, 946, 947, 948, 949, 974, 980, 1021, 1022], "login": [100, 125, 143, 147, 177, 179, 212, 224, 278, 340, 368, 369, 790, 864, 865, 867, 868, 869, 871, 873, 874, 875, 883, 886, 887, 888, 889, 890, 891, 892, 898, 933, 934, 942, 945, 946, 947, 948, 949, 950, 952, 954, 971, 1021, 1022, 1114, 1184, 1193, 1200], "bourn": [100, 125, 188, 212, 214, 278, 287, 288, 308, 352, 369, 370, 371, 374, 387, 388, 500, 514, 542, 543, 544, 545, 546, 547, 548, 549, 552, 594, 767, 788, 789, 790, 860, 864, 865, 866, 867, 870, 871, 878, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 927, 933, 956, 962, 964, 972, 974, 975, 988, 991, 994, 996, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022], "verifi": [101, 103, 125, 138, 142, 160, 182, 188, 200, 212, 224, 288, 353, 380, 589, 607, 790, 867, 872, 901, 904, 905, 908, 911, 917, 933, 946, 947, 949, 1102, 1139, 1142, 1164], "joke": [101, 172], "mostli": [101, 115, 120, 121, 258, 387, 392, 398, 410, 426, 456, 465, 610, 651, 753, 758, 805, 873, 876, 897, 963, 990, 993, 1014, 1191], "secur": [102, 125, 147, 148, 175, 177, 179, 224, 244, 250, 278, 287, 308, 340, 352, 353, 368, 790, 864, 865, 870, 872, 875, 893, 897, 933, 934, 944, 945, 946, 947, 948, 952, 963, 971, 1021, 1022, 1028, 1030, 1062, 1093], "account": [102, 111, 112, 125, 177, 179, 199, 204, 208, 209, 244, 250, 260, 267, 270, 285, 289, 290, 292, 302, 306, 328, 334, 340, 346, 369, 374, 399, 472, 478, 676, 694, 810, 941, 954, 1059, 1140], "authent": [102, 125, 212, 224, 233, 278, 287, 288, 308, 309, 352, 353, 366, 369, 790, 864, 865, 933, 944, 945, 946, 947, 948, 949, 954, 1102], "ownership": [102, 125, 199, 234, 288, 309, 323, 352, 353, 542, 562, 566, 572, 594, 707, 749, 752, 753, 767, 789, 790, 864, 865, 867, 870, 871, 874, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 933, 962, 963, 964, 972, 974, 988, 991, 994, 996, 1189, 1192], "setuid": [102, 125, 212, 278, 287, 288, 308, 309, 352, 353, 790, 867, 872, 892, 933], "quick": [103, 125, 204, 211, 229, 233, 239, 248, 255, 269, 281, 311, 521, 758, 924, 934, 1136, 1162], "credenti": [103, 125, 179, 272, 353, 790, 865, 866, 867, 872, 886, 887, 888, 889, 890, 891, 892, 933, 950, 979, 1032], "share": [103, 104, 107, 111, 112, 125, 150, 167, 172, 174, 179, 183, 187, 196, 197, 199, 200, 202, 205, 224, 234, 241, 244, 247, 257, 260, 264, 267, 270, 275, 276, 277, 279, 285, 288, 292, 302, 306, 315, 328, 331, 334, 336, 340, 346, 353, 366, 387, 388, 432, 459, 460, 466, 472, 479, 483, 490, 491, 495, 507, 552, 572, 580, 694, 755, 757, 758, 766, 768, 787, 789, 790, 815, 819, 835, 842, 866, 867, 870, 876, 886, 889, 890, 892, 928, 933, 942, 966, 979, 981, 987, 993, 999, 1011, 1014, 1021, 1023, 1043, 1046, 1178, 1193, 1194, 1202, 1204], "adjust": [103, 162, 166, 790, 837, 933, 942, 947, 949, 1005, 1012], "ubuntu": [104, 133, 173, 179, 183, 187, 199, 200, 201, 202, 212, 277, 279, 288, 387, 790, 876, 933, 936, 954, 1013, 1014, 1021, 1022, 1026, 1171, 1176], "zoom": [104, 105, 125, 179, 188, 204, 288, 302, 387, 479, 500, 514, 542, 543, 544, 545, 546, 547, 548, 549, 552, 594, 790, 919, 933, 1013, 1016, 1017, 1018, 1019, 1021, 1183], "recap": [105, 125, 208, 212, 221, 250, 297, 298, 325, 369, 590, 1041], "endeavor": 105, "hoop": [105, 876, 1008], "doze": [105, 178, 233, 234, 247, 369, 376, 454, 788, 876, 921, 1079, 1085, 1171], "pictur": [105, 169, 172, 193, 204, 208, 301, 302, 466, 472, 551, 849, 897, 899, 919, 934, 953, 957, 1204], "fit": [105, 183, 188, 193, 195, 350, 410, 415, 495, 619, 694, 716, 796, 837, 934, 1139, 1141, 1150], "theori": [107, 208, 439, 466, 1141], "Of": [107, 125, 143, 174, 177, 207, 208, 258, 276, 277, 279, 281, 288, 297, 299, 337, 500, 514, 542, 552, 594, 627, 667, 668, 678, 691, 775, 787, 789, 790, 866, 881, 928, 933, 971, 974, 976, 1041, 1136, 1149, 1192], "ece20": [107, 110, 537, 553, 614, 864, 865, 872], "uml": [107, 143, 280, 298, 300, 301, 500, 514, 542, 552, 594, 790], "foundat": [107, 255, 285, 500, 514, 542, 594, 790, 837, 1200], "adapt": [107, 143, 175, 208, 280, 298, 493, 500, 502, 503, 514, 518, 528, 532, 542, 594, 758, 790, 942, 943, 1192], "syllabu": [107, 146, 377], "vote": 107, "beurteilungsschema": 107, "grade": [107, 110, 125, 143, 373, 383, 1169], "total": [107, 110, 113, 114, 123, 174, 183, 187, 191, 244, 260, 270, 277, 465, 470, 478, 492, 501, 516, 550, 551, 552, 553, 604, 614, 753, 919, 921, 934, 941, 942, 943, 954, 977, 1005, 1012, 1013, 1014, 1023, 1026, 1091, 1093, 1176], "compos": [107, 129, 130, 150, 188, 250, 323, 404, 496, 675, 837, 1025, 1028, 1037, 1051, 1098, 1149], "practic": [107, 245, 254, 264, 439, 476, 629, 668, 705, 740, 747, 941, 967, 1009, 1144, 1189, 1192], "theoret": [107, 371, 390, 761], "semest": [107, 110, 147, 148, 373, 375], "addition": [107, 171, 174, 415, 499, 516], "deliv": [107, 172, 937, 1008, 1009], "variou": [107, 174, 250, 276, 277, 752, 766, 768, 837, 869, 1194], "weight": [107, 195, 204, 461, 831, 943, 1059], "decid": [107, 173, 174, 179, 204, 258, 465, 495, 556, 570, 634, 833, 837, 857, 941, 1042, 1059], "excerpt": [107, 208, 211, 371, 372, 1093, 1150], "w1": [107, 115, 121, 125, 126, 140, 288, 337, 537, 553, 554, 971], "soup": [107, 169, 479, 481, 482, 484, 485, 487, 488, 490, 492, 494, 495, 496, 497, 498, 499, 501, 503, 506, 515, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 550, 552, 555, 556, 557, 558, 560, 562, 563, 564, 565, 567, 568, 569, 570, 571, 674, 754, 788, 975, 978, 1035, 1038, 1087, 1169, 1178], "armv8": [107, 183, 288, 554, 1012, 1025, 1026], "rpi4": [107, 183, 288, 554, 1012, 1025, 1026], "gnueabihf": [107, 183, 288, 554, 837, 1012, 1023, 1025, 1026], "shape": [107, 165, 193, 195, 234, 296, 297, 328, 350, 542, 572, 594, 614, 694, 790, 837, 963, 1141, 1144, 1154], "algorithm": [107, 173, 182, 193, 241, 247, 255, 257, 260, 268, 270, 276, 277, 297, 306, 466, 542, 559, 583, 590, 594, 621, 632, 634, 635, 637, 638, 641, 642, 658, 661, 662, 691, 736, 744, 746, 757, 761, 790, 1115, 1138, 1142], "find_if": [107, 109, 234, 250, 297, 336, 636, 639, 658, 662, 679, 688, 691, 757, 790], "customiz": [107, 297, 639, 658, 662, 691, 790], "binary_search": [107, 109, 234, 250, 297, 639, 658, 662, 691, 790], "associ": [107, 183, 201, 209, 211, 213, 229, 234, 288, 291, 294, 297, 299, 337, 413, 414, 422, 427, 431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 542, 543, 559, 561, 594, 629, 658, 662, 691, 694, 696, 722, 734, 787, 789, 790, 796, 803, 861, 935, 963, 1035, 1065, 1066, 1067, 1083, 1085, 1143, 1192], "hour": [107, 177, 179, 204, 208, 241, 263, 281, 292, 305, 327, 375, 1098, 1136, 1143], "sent": [107, 172, 173, 212, 317, 472, 518, 877, 985, 1005, 1009, 1152], "015": 107, "voluntari": 107, "odd": [107, 125, 264, 299, 454, 542, 556, 559, 594, 790, 942, 1037, 1039], "char": [108, 174, 190, 233, 250, 260, 306, 392, 399, 404, 405, 408, 410, 411, 412, 415, 416, 429, 434, 437, 442, 443, 450, 454, 460, 461, 463, 479, 497, 501, 531, 535, 540, 554, 555, 586, 601, 604, 605, 609, 619, 659, 674, 675, 689, 705, 707, 732, 739, 756, 770, 788, 793, 796, 801, 817, 819, 831, 857, 941, 955, 959, 960, 963, 967, 968, 969, 970, 973, 975, 978, 992, 995, 1001, 1004, 1005, 1008, 1029, 1074, 1080, 1147, 1176, 1181], "cout": [108, 115, 118, 121, 122, 130, 183, 480, 486, 501, 515, 520, 521, 522, 534, 535, 536, 537, 540, 548, 552, 553, 580, 598, 600, 605, 607, 611, 624, 625, 626, 627, 628, 631, 632, 633, 634, 635, 636, 637, 638, 640, 641, 642, 643, 647, 651, 652, 653, 654, 655, 661, 665, 666, 669, 671, 672, 675, 678, 685, 688, 694, 699, 709, 711, 712, 713, 714, 717, 718, 719, 720, 722, 723, 724, 726, 727, 728, 729, 730, 731, 736, 738, 739, 741, 742, 744, 746, 755, 756, 757, 758, 766, 768, 769, 774, 776, 778, 780, 880, 941, 975, 978, 990, 992, 1004, 1008, 1176], "endl": [108, 115, 118, 121, 183, 480, 501, 515, 520, 521, 522, 534, 535, 536, 537, 540, 548, 552, 553, 580, 598, 600, 605, 607, 611, 612, 619, 624, 625, 626, 627, 628, 631, 632, 633, 634, 635, 636, 637, 638, 640, 641, 642, 643, 647, 651, 652, 653, 654, 655, 661, 665, 666, 669, 671, 672, 675, 678, 685, 688, 694, 709, 711, 712, 713, 714, 717, 718, 719, 720, 722, 723, 724, 726, 727, 728, 729, 730, 731, 736, 738, 739, 741, 742, 744, 746, 755, 756, 757, 758, 766, 768, 769, 774, 776, 778, 780, 941, 975, 978, 990, 992, 1004, 1008, 1176], "constitut": 108, "_id": [108, 115, 121], "objectcontain": 108, "add_object": 108, "_contain": [108, 744], "push_back": [108, 525, 526, 589, 630, 631, 632, 637, 640, 643, 647, 651, 698, 699, 702, 707, 766, 1008, 1181], "fragment": [108, 467, 1039, 1176], "iostream": [108, 115, 121, 122, 241, 247, 257, 260, 501, 515, 520, 521, 522, 530, 534, 535, 536, 537, 540, 548, 552, 580, 598, 600, 605, 607, 611, 612, 624, 625, 626, 627, 628, 631, 632, 633, 634, 635, 637, 638, 641, 642, 643, 647, 651, 652, 653, 654, 655, 661, 665, 666, 669, 671, 672, 678, 684, 685, 686, 687, 688, 689, 694, 699, 709, 712, 713, 714, 717, 718, 719, 720, 722, 723, 724, 726, 727, 728, 729, 730, 731, 736, 738, 739, 741, 744, 746, 755, 756, 757, 758, 766, 768, 774, 776, 778, 780, 788, 941, 975, 978, 982, 990, 992, 1004, 1008, 1009, 1176], "my_vector": 108, "sysroot": [109, 183, 1012, 1026], "intel": [109, 157, 161, 175, 790, 1011], "header": [109, 168, 200, 234, 250, 275, 305, 314, 315, 330, 331, 436, 437, 438, 444, 448, 451, 455, 459, 464, 468, 473, 474, 478, 483, 484, 485, 490, 491, 501, 622, 696, 711, 716, 734, 740, 787, 789, 790, 881, 938, 943, 1012, 1014, 1023, 1093, 1126, 1130, 1131, 1133, 1141, 1144, 1191], "match": [109, 153, 171, 178, 207, 220, 237, 244, 245, 247, 252, 260, 270, 272, 273, 282, 285, 305, 306, 312, 323, 334, 340, 346, 434, 478, 553, 707, 711, 731, 744, 748, 872, 881, 954, 1014, 1034, 1080, 1136, 1176], "linker": [109, 111, 112, 167, 199, 314, 330, 433, 459, 466, 470, 471, 482, 489, 611, 622, 837, 1011, 1014, 1017, 1021, 1028, 1186, 1187, 1188, 1191, 1196, 1202], "uniquifi": [110, 299, 542, 559, 594, 790], "lookup": [110, 131, 192, 209, 222, 241, 247, 252, 257, 260, 274, 306, 461, 516, 542, 559, 561, 594, 709, 790, 1047, 1076, 1083, 1114, 1149, 1158, 1206], "leak": [110, 174, 449, 463, 501, 521, 522, 542, 559, 561, 562, 578, 586, 589, 594, 595, 601, 666, 740, 751, 753, 790, 1035], "sure": [110, 171, 172, 173, 174, 175, 177, 178, 179, 182, 183, 212, 224, 231, 248, 250, 290, 366, 460, 495, 496, 499, 518, 521, 522, 551, 577, 674, 748, 785, 837, 942, 943, 964, 968, 1023, 1035, 1192], "gz": [110, 168, 837, 838, 861, 862, 863, 1091, 1171], "whatev": [110, 131, 138, 142, 171, 172, 174, 179, 195, 210, 270, 355, 472, 518, 597, 697, 722, 788, 902, 904, 954, 959, 995, 997, 1065, 1133, 1141, 1148, 1149, 1171], "quiz": [111, 112, 125, 147, 677, 691, 790, 867, 871, 886, 892, 911, 917, 933, 1018, 1021], "servic": [111, 112, 168, 177, 178, 179, 212, 244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346, 472, 478, 761, 829, 835, 840, 870, 873, 924, 943, 952, 954, 961, 997, 1064], "owner": [111, 112, 173, 212, 369, 374, 754, 796, 837, 870, 884, 885, 893, 919, 954, 982], "dimension": [111, 112, 193, 716, 870, 1141, 1142], "identifi": [111, 112, 173, 182, 241, 247, 257, 260, 306, 415, 437, 458, 460, 470, 685, 795, 835, 870, 941, 943, 1081, 1143], "pthread": [111, 112, 172, 183, 189, 241, 247, 257, 260, 760, 766, 870, 979, 984, 987, 995, 1009, 1014], "timeslic": [111, 112, 172, 870, 993, 998], "suspend": [111, 112, 172, 173, 346, 722, 724, 764, 833, 868, 870, 881, 984, 1009], "favor": [111, 112, 870, 996, 1189], "fair": [111, 112, 172, 835, 870, 996, 998], "ensur": [111, 112, 260, 496, 544, 870], "evenli": [111, 112, 252, 870], "cpu": [111, 112, 132, 147, 171, 172, 175, 179, 182, 205, 215, 219, 299, 346, 380, 384, 452, 453, 465, 467, 472, 630, 761, 768, 790, 808, 821, 835, 842, 847, 857, 868, 870, 873, 877, 933, 941, 942, 943, 957, 974, 982, 984, 994, 995, 996, 997, 998, 1045, 1062, 1194], "infinit": [111, 112, 172, 192, 211, 241, 245, 247, 250, 252, 257, 260, 268, 301, 305, 427, 445, 452, 870, 874, 993, 996, 1039, 1040, 1041, 1070, 1106], "illus": [111, 112, 870, 874, 993, 996, 1194], "action": [111, 112, 182, 211, 267, 479, 485, 597, 676, 896, 897, 958, 963, 995, 1008, 1010, 1143, 1164], "undefin": [111, 112, 233, 408, 415, 442, 485, 603, 611, 635, 642, 647, 671, 676, 707, 736, 1008], "behavior": [111, 112, 130, 172, 174, 177, 209, 231, 233, 260, 415, 635, 642, 647, 676, 707, 724, 870, 964, 968, 1009, 1012, 1032, 1037, 1054], "declar": [111, 112, 232, 233, 245, 250, 391, 407, 422, 431, 436, 438, 444, 445, 448, 451, 452, 455, 458, 459, 460, 464, 466, 468, 473, 474, 479, 599, 609, 669, 676, 685, 686, 696, 707, 716, 732, 734, 754, 787, 789, 790, 943, 963, 967, 969, 970, 996, 1178], "promis": [111, 112, 174, 276, 277, 279, 288, 336, 402, 460, 518, 586, 598, 607, 676, 722, 724, 725, 728, 729, 766, 767, 789, 790, 1008, 1060, 1189], "caller": [111, 112, 174, 250, 402, 404, 440, 446, 470, 472, 609, 676, 688, 705, 754, 756, 761, 764, 829, 840, 980, 984, 1035, 1115], "uniniti": [111, 112, 463, 589, 596, 598, 599, 600, 603, 676, 792], "guarante": [111, 112, 172, 210, 241, 260, 454, 499, 676, 801, 808, 942, 943, 996, 997, 1005, 1032], "contigu": [111, 112, 467, 630, 647, 676, 823, 973, 1157], "vec": [111, 112, 596, 598, 605, 612, 613, 614, 615, 616, 676], "hysteresi": [113, 114, 116, 117, 124, 126, 136, 141, 142, 143, 337, 378, 544], "_x": [115, 118, 540, 598, 599, 601, 603, 605, 606, 607, 608, 610, 612, 622, 637, 701, 716, 718, 719, 720], "firstnam": [115, 119, 125, 143, 147, 205, 231, 244, 252, 254, 257, 260, 264, 267, 270, 272, 273, 282, 285, 292, 306, 312, 317, 324, 340, 355, 360, 496, 497, 525, 531, 540, 541, 554, 609, 655, 681, 685, 687, 689, 706, 864, 865, 901, 902, 904, 906, 909, 1035, 1048, 1049, 1051, 1052, 1053, 1055, 1056, 1064, 1125, 1126, 1127, 1128, 1131, 1132, 1133, 1144, 1153, 1154, 1155, 1157, 1158, 1159, 1160], "lastnam": [115, 119, 125, 143, 147, 205, 234, 244, 250, 252, 254, 257, 260, 264, 267, 270, 272, 273, 285, 292, 306, 312, 317, 324, 340, 355, 360, 496, 497, 525, 531, 540, 541, 554, 609, 655, 679, 681, 685, 688, 691, 706, 790, 864, 865, 901, 902, 904, 906, 909, 1035, 1048, 1049, 1051, 1052, 1053, 1055, 1056, 1064, 1125, 1126, 1127, 1128, 1131, 1132, 1133, 1144, 1153, 1154, 1155, 1157, 1158, 1159, 1160], "chosen": [115, 119, 183, 481, 934, 941, 943, 969, 973, 993, 997, 1142, 1155], "shorter": [115, 119, 192, 1042, 1053, 1085, 1135], "temporari": [115, 119, 173, 182, 199, 241, 247, 250, 257, 260, 300, 301, 322, 326, 481, 553, 554, 702, 706, 707, 722, 736, 744, 788, 881, 1011, 1037, 1119], "consid": [115, 120, 121, 172, 174, 204, 208, 232, 241, 247, 257, 258, 260, 264, 288, 306, 327, 430, 457, 458, 466, 518, 672, 897, 941, 996, 1051, 1059, 1136, 1163, 1164, 1191], "imagin": [115, 121, 172, 174, 456, 461, 462, 494, 507, 837, 876, 893, 934, 943, 982, 1009], "w1sensor": [115, 121, 143, 538, 539, 540, 541, 553], "pragma": [115, 120, 121, 454, 495, 497, 501, 506, 518, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 553, 611, 628, 631, 725, 774, 776, 778, 779, 780, 781, 788], "get_temperatur": [115, 120, 121, 208, 260, 323, 495, 498, 499, 501, 506, 508, 518, 519, 524, 526, 527, 529, 532, 533, 537, 540, 545, 546, 547, 548, 552, 553, 554, 565, 583, 704, 752, 753, 754, 755, 774, 776, 778, 779, 780, 781, 1047, 1124], "unus": [115, 121, 460, 495, 550, 552, 596, 600, 611, 650, 651, 704, 815, 874, 990, 1004], "cstdint": [115, 121, 695, 723, 724], "uint64_t": [115, 121, 410, 447, 553, 723, 724, 758, 961, 1004], "w1_address": [115, 121], "_w1_address": [115, 121], "overrid": [115, 121, 122, 143, 168, 232, 245, 260, 275, 337, 495, 501, 503, 508, 523, 525, 526, 527, 529, 530, 532, 554, 668, 669, 733, 734, 774, 789, 790, 1032, 1047, 1181], "physic": [115, 121, 174, 177, 212, 219, 300, 301, 322, 326, 467, 672, 821, 873, 942, 961, 965, 995, 996], "samp": [115, 121], "unistd": [115, 121, 174, 457, 554, 586, 894, 941, 957, 959, 960, 961, 963, 966, 967, 968, 969, 970, 973, 975, 978, 992, 995, 1001, 1004, 1008], "0xdeadbe": [115, 121], "correct": [115, 171, 179, 183, 211, 231, 233, 244, 369, 415, 452, 456, 457, 464, 467, 468, 473, 474, 476, 504, 572, 604, 669, 671, 672, 704, 749, 752, 760, 790, 880, 884, 885, 909, 941, 942, 943, 996, 1038, 1046, 1141, 1164], "liskov": [115, 120, 121, 476], "segreg": [115, 120, 121, 143, 476], "invers": [115, 120, 121, 143, 264, 384, 476, 494, 501, 801, 996, 997, 1205], "question2": [116, 124], "set_stat": [120, 136, 142, 337], "nullptr": [120, 534, 535, 553, 564, 568, 694, 704, 705, 752, 753, 754, 766, 768, 770, 785, 786, 978, 1189], "_sensor": [120, 501, 508, 526, 527, 529, 532, 533, 754], "_switch": [120, 508], "_displai": 120, "_low": 120, "_high": 120, "current_temperatur": 120, "obvious": [121, 174, 175, 177, 183, 195, 392, 456, 460, 487, 516, 580, 606, 612, 650, 665, 666, 694, 705, 739, 743, 748, 775, 788, 835, 837, 850, 873, 874, 880, 894, 942, 943, 953, 969, 970, 997, 1009, 1011, 1027, 1048, 1051, 1191], "remain": [121, 172, 173, 183, 192, 205, 252, 260, 306, 557, 558, 570, 599, 647, 653, 684, 690, 695, 757, 765, 819, 950, 998, 1009, 1011, 1111, 1114, 1115, 1118, 1126, 1128, 1144, 1178], "carri": [123, 174, 179, 194, 458, 490, 499, 516, 788, 941, 998, 1011, 1034], "norm": [123, 250, 1149], "meantim": [123, 501, 958], "fresh": [123, 173], "made": [123, 130, 142, 165, 166, 171, 172, 173, 175, 178, 179, 183, 187, 224, 239, 264, 288, 323, 369, 401, 439, 440, 442, 445, 476, 496, 500, 516, 522, 722, 821, 837, 868, 869, 874, 934, 941, 967, 973, 978, 996, 1014, 1039, 1046, 1056, 1093, 1141], "arbitrari": [123, 172, 193, 260, 264, 396, 412, 430, 466, 481, 619, 646, 647, 699, 757, 769, 796, 938, 963, 967, 995, 1035, 1071, 1085, 1114], "sinc": [123, 150, 183, 189, 234, 240, 271, 365, 466, 469, 598, 606, 607, 637, 650, 693, 694, 722, 743, 748, 754, 769, 788, 837, 941, 954, 961, 967, 970, 982, 997, 1004, 1065, 1190], "whichev": 123, "enumer": [123, 187, 193, 195, 205, 211, 216, 217, 221, 223, 229, 230, 232, 253, 257, 262, 268, 282, 286, 303, 306, 325, 335, 347, 350, 411, 458, 478, 695, 798, 833, 943, 1199], "pack": [123, 183, 187, 233, 551, 572, 863, 897, 935, 937], "unpack": [123, 187, 191, 211, 217, 221, 223, 228, 232, 236, 241, 244, 249, 253, 254, 260, 265, 267, 271, 272, 283, 288, 290, 293, 302, 306, 324, 327, 329, 335, 337, 347, 350, 354, 369, 734, 789, 790, 837, 863, 935, 937, 941, 1012, 1019, 1025, 1026, 1065, 1083, 1189], "kib": [123, 187], "222": [123, 205, 244, 247, 252, 254, 260, 264, 267, 270, 282, 285, 302, 306, 312, 328, 334, 340, 346, 350, 485], "addit": [123, 174, 192, 204, 231, 260, 263, 354, 413, 460, 481, 515, 516, 530, 552, 598, 610, 616, 687, 837, 874, 950, 1054, 1066, 1082, 1084, 1164], "checkout": [123, 150, 164, 175, 187, 201, 810, 837, 838, 1201], "previou": [123, 176, 192, 323, 537, 589, 605, 687, 897, 929, 969, 1036, 1038, 1058, 1060, 1105, 1163], "9bfda12": 123, "mosquitto": [123, 244, 248, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 1130, 1152], "client": [123, 133, 150, 177, 179, 190, 235, 239, 267, 281, 476, 504, 505, 518, 757, 758, 937, 950, 952, 960, 1005, 1148, 1164], "smoothli": 123, "forward": [123, 187, 250, 276, 277, 278, 287, 308, 309, 336, 352, 407, 422, 431, 437, 438, 444, 448, 451, 455, 464, 468, 473, 474, 659, 696, 703, 734, 744, 787, 789, 790, 837, 897, 921, 929, 933, 934, 944, 949, 1189], "diverg": [123, 995], "00aea42": 123, "delet": [123, 199, 211, 241, 260, 275, 285, 306, 337, 364, 463, 494, 497, 536, 553, 562, 566, 578, 586, 601, 604, 663, 666, 671, 694, 704, 705, 706, 734, 739, 751, 752, 753, 754, 770, 780, 789, 790, 815, 845, 874, 1145, 1171, 1188, 1189], "footnot": [123, 175, 177, 178, 179, 182, 183, 188, 195, 201, 204, 207, 291, 294, 495, 522, 566, 613, 615, 616, 629, 659, 678, 806, 808, 869, 876, 891, 941, 942, 943, 964, 967, 1027, 1059, 1062, 1093, 1127, 1142, 1189, 1192], "term": [123, 130, 172, 174, 196, 224, 264, 297, 299, 366, 466, 609, 612, 676, 754, 757, 870, 943, 962, 996, 1008, 1141, 1176], "ss2023": 124, "ws2023": [124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 142, 790], "ece21": [124, 125, 142, 143], "bouncem": [125, 143, 147, 553, 554, 864, 865], "procf": [125, 147, 212, 214, 288, 790, 875, 933, 974, 991, 1193, 1200], "umask": [125, 278, 287, 288, 308, 309, 352, 353, 369, 374, 790, 867, 892, 916, 933, 967, 979], "diff": [125, 228, 247, 340, 596, 598, 1054, 1195], "raspi": [125, 168, 302, 369, 375, 790, 814, 837, 838, 839, 841, 846, 852, 855, 858, 933, 935, 936, 937, 938, 941, 942, 943, 1025, 1026], "spirit": [125, 430], "readm": [125, 152, 191, 297, 299, 941, 942], "modular": [125, 204, 209, 211, 239, 258, 290, 371, 372, 402, 479, 1011, 1038], "plc": 125, "sallok": 125, "constantsensor_nopoli": [125, 143, 542, 548, 594, 790], "randomsensor_nopoli": [125, 143, 542, 594, 790], "labexam": 125, "hysteresis_nopoli": [125, 126, 143, 542, 543, 594, 790], "upload": [125, 178, 897, 1091, 1163], "j": [125, 169, 177, 183, 220, 235, 237, 247, 252, 254, 257, 260, 264, 267, 270, 282, 285, 292, 306, 312, 324, 328, 340, 416, 419, 436, 460, 467, 516, 609, 698, 709, 757, 847, 863, 1019, 1023, 1039, 1149, 1155], "bz2": [125, 173, 472, 837, 859, 862, 1032], "influenc": [125, 1012, 1189], "felber": 125, "vscode": [125, 202, 375, 389, 919], "folder": [125, 178], "comprehend": [125, 258, 415, 421, 1008], "workspacefold": 125, "suppli": [125, 174, 212, 554, 556, 600, 796, 837, 853, 872, 934, 938, 941, 943, 958, 967, 1097], "cpprefer": [125, 634, 635, 636, 637, 638, 640, 641, 642, 643, 646, 655, 674], "averagingsensor_nopoli": [125, 143, 542, 594, 790], "toolcas": [125, 138, 143, 297, 299, 711], "mocksensor_nopoli": [125, 143, 542, 543, 544, 545, 594, 790], "figur": [125, 158, 164, 169, 177, 178, 193, 248, 1031], "specifi": [125, 172, 189, 260, 272, 306, 410, 478, 487, 540, 543, 548, 551, 600, 680, 694, 709, 733, 744, 837, 897, 954, 967, 971, 997, 1009, 1062, 1077, 1085, 1090, 1107, 1126, 1128, 1157, 1159, 1164], "hint": [125, 138, 187, 260, 272, 301, 393, 496, 556, 566, 570, 681, 864, 865, 877, 946, 995], "target_link_librari": [125, 200, 482, 484, 485, 486, 487, 491, 537, 573, 576, 582, 588, 591, 1007, 1012, 1013, 1175, 1178, 1180], "inter": [125, 172, 190, 196, 996, 1193, 1200, 1203, 1205], "likewis": [125, 247, 583, 614, 863, 882, 953, 969, 1019, 1141, 1178], "ledstripedisplay_nopoli": [125, 143, 542, 594, 790], "somewhat": [126, 192, 233, 466, 499], "02131d959eaa": [126, 537, 553, 554, 971], "heat": [126, 280, 493, 500, 544, 553, 790, 943, 1140, 1141], "hwmon2": [126, 346, 941], "temp1_input": [126, 941, 943], "boilingpot": [126, 128], "knob": [126, 1063], "steer": 126, "desir": [126, 177, 241, 247, 257, 260, 411, 415, 426, 548, 598, 600, 606, 688, 835, 968, 970, 1143], "hardcod": [126, 173, 373, 572, 796, 800, 1102], "ledstripedisplai": [126, 136, 138, 141, 142], "unreason": 126, "cluster_fh2021": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 142, 790], "fh2021_sensor_interfac": [126, 127, 128, 129, 135, 142, 790], "fh2021_sysfs_gpio_switch": [126, 127, 129, 135, 142, 790], "fh2021_switch_interfac": [126, 127, 128, 129, 134, 135, 136, 142, 790], "fh2021_boiling_pot": [126, 127, 128, 129, 135, 142, 790], "breadboard": [127, 129, 943, 1193, 1200], "acrobat": [127, 129], "boilingpot_suit": 128, "status_report": 128, "percentage_displai": 128, "fh2021_pwm_displai": [128, 134, 135, 138, 790], "pwm": [128, 129, 134, 135, 143, 147, 288, 297, 790, 837, 933, 934, 940, 977, 1193, 1200], "fh2021_display_infrastructur": [128, 134, 135, 790], "infrastructur": [128, 129, 135, 143, 172, 471, 790, 793, 1005], "fh2021_boiling_pot_displai": [128, 135, 790], "stripe": [129, 134, 138, 543], "style": [130, 168, 172, 177, 241, 247, 250, 257, 260, 299, 462, 477, 478, 572, 597, 598, 603, 637, 671, 674, 685, 694, 699, 730, 746, 771, 775, 779, 780, 781, 789, 790, 805, 854, 977, 1063, 1105, 1130, 1141], "reusabl": 130, "compon": [130, 232, 245, 337, 469, 921, 996], "dedic": [130, 172, 173, 204, 209, 258, 288, 291, 294, 462, 478, 805, 875, 876, 941, 942, 943, 977, 979, 1013, 1031, 1042, 1075, 1192], "constrain": [130, 775, 875], "decoupl": [130, 248, 494, 995], "sink": [130, 132, 135, 300, 301, 316, 319, 322, 326, 790], "datalogg": [130, 301, 323], "target_include_directori": [130, 487, 488, 490, 491], "announc": [130, 376, 487, 488, 665, 941, 942], "anyon": [130, 172, 586, 808], "node": [130, 165, 177, 182, 192, 450, 470, 487, 650, 793, 796, 800, 806, 815, 1027, 1152, 1169], "startlog": 130, "uint16_t": [130, 410], "special": [130, 165, 172, 219, 252, 254, 260, 264, 288, 391, 443, 504, 515, 518, 521, 522, 566, 589, 594, 707, 709, 763, 786, 863, 874, 879, 935, 957, 963, 985, 1009, 1028, 1033, 1052, 1054, 1062, 1071, 1073, 1077, 1138, 1143, 1174, 1194, 1195], "unif": [130, 595], "leftov": 130, "gettim": 130, "defer": [130, 172, 476, 835, 857], "timestamp": [130, 237, 247, 267, 296, 300, 301, 322, 324, 326, 328, 334, 478, 758, 798, 899, 919, 953, 1004], "sinkfil": 130, "sinkmock": 130, "usabl": [130, 260, 306, 420, 499, 550, 705, 944], "sensorconfig": [130, 143, 327], "sensorvalu": [130, 131, 133, 515, 529], "runtime_error": [130, 520, 521, 532, 534, 535, 536, 554, 768], "logger_suit": 130, "loggerbasictest": 130, "sensor_values_suit": 130, "sensor_config_suit": 130, "duplicate_sensor": 130, "outlook": [130, 143, 147, 876], "prebuilt": [130, 941], "order": [130, 159, 165, 171, 177, 178, 182, 183, 192, 204, 205, 208, 210, 241, 247, 252, 262, 264, 267, 297, 314, 330, 395, 421, 432, 454, 466, 481, 496, 515, 570, 572, 579, 581, 644, 690, 788, 792, 808, 821, 837, 926, 934, 941, 943, 959, 998, 1023, 1039, 1059, 1108, 1118, 1191], "acquisitionloop": [130, 323, 327], "n_iter": 130, "doit": [130, 244, 501], "write_measur": [130, 323], "mockingsink": 130, "receiv": [130, 173, 192, 247, 250, 288, 317, 402, 518, 609, 707, 796, 808, 829, 837, 897, 934, 937, 943, 950, 958, 963, 985, 993, 1008, 1009, 1032, 1035, 1085, 1117, 1132, 1149], "yaml": 130, "ini": [130, 152, 177, 191, 377, 380, 1169], "fh2021_datalogg": [130, 131, 132, 133, 135, 790], "predecessor": [131, 133, 258, 266, 272, 316, 319], "sinklogg": [131, 133], "csvsink": [131, 323], "logfil": [131, 173, 211, 879, 930], "linksoben": 131, "rechtsunten": 131, "addmeasur": 131, "rememb": [131, 177, 178, 193, 200, 210, 231, 421, 454, 504, 630, 631, 665, 668, 705, 706, 754, 833, 837, 879, 894, 897, 916, 941, 950, 952, 1033, 1100, 1110], "csvname": [131, 245, 290, 478], "valuenam": 131, "_config": 131, "sensor_valu": 131, "getmeasur": 131, "rotat": [131, 173, 934, 959], "backup": [131, 178, 212, 479, 866, 868, 950, 1154], "fh2021_datalogger_csv_sink": [131, 135, 790], "boil": [132, 133, 136, 142, 790, 837], "pot": [132, 133, 136, 142, 790], "struct": [133, 175, 199, 233, 234, 250, 351, 437, 442, 448, 449, 450, 451, 454, 455, 458, 460, 462, 464, 468, 473, 474, 496, 501, 518, 553, 554, 598, 599, 604, 606, 608, 609, 629, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 694, 696, 697, 698, 699, 706, 722, 725, 727, 728, 729, 730, 734, 739, 757, 758, 768, 770, 778, 779, 781, 787, 788, 789, 790, 796, 798, 801, 803, 805, 806, 808, 821, 825, 827, 829, 831, 833, 839, 840, 845, 847, 850, 854, 856, 857, 935, 937, 941, 960, 961, 973, 984, 995, 998, 1004, 1005, 1008, 1009, 1190], "sensor_config": 133, "getallmeasur": 133, "localhost": [133, 1147, 1152], "1883": [133, 1152], "port": [133, 168, 169, 174, 179, 184, 244, 278, 287, 308, 309, 323, 352, 355, 387, 790, 870, 876, 924, 933, 944, 949, 953, 971, 1093, 1148, 1152, 1164, 1193, 1200], "transport": [133, 196, 248, 250, 551, 768, 1132, 1152], "sensor1": [133, 282, 501, 774, 776, 778, 780, 781], "sensor2": [133, 501, 774, 776, 778, 780, 781], "api": [133, 172, 179, 196, 219, 233, 260, 380, 384, 790, 793, 800, 808, 815, 819, 831, 933, 974, 986, 994, 997, 1005, 1091, 1147, 1165, 1193, 1194], "burden": [133, 153, 478, 611, 1037, 1170], "handmad": 133, "fedora": [133, 153, 168, 177, 183, 184, 187, 201, 288, 340, 566, 790, 794, 797, 799, 802, 804, 807, 814, 816, 817, 818, 822, 828, 834, 838, 841, 846, 852, 855, 858, 893, 897, 933, 936, 1013, 1014, 1021, 1022, 1023, 1026, 1152, 1176], "mosquitto_new": 133, "mosquitto_connect": 133, "mosquitto_destroi": 133, "prohibit": [133, 606], "wide": [133, 179, 183, 392, 393, 869, 950, 1005, 1011], "iot": [133, 135, 143, 248, 288, 790], "broadcast": [133, 766, 935, 942, 984, 1009, 1206], "flexibl": [133, 280, 487, 493, 507, 514, 528, 542, 594, 640, 790, 980, 995, 1011, 1012, 1013, 1028, 1029, 1080, 1184], "fh2021_datalogger_mqtt_sink": [133, 135, 790], "percentag": [134, 138, 470], "show_percentag": [134, 138], "wire": [134, 934, 944, 1023], "connect": [134, 157, 172, 179, 192, 212, 224, 245, 288, 317, 366, 374, 375, 450, 768, 868, 930, 934, 935, 942, 943, 952, 957, 963, 977, 1145, 1147, 1152, 1164, 1192, 1204, 1206], "shown": [134, 177, 210, 360, 919, 1005, 1149], "src_demo": [134, 138], "fh2021_mqtt_tkinter": [135, 137, 790], "subscrib": [135, 169, 248, 260, 790], "logger": [135, 143, 301, 319, 323, 326, 758, 790], "fh2021_datalogger_integr": [135, 790], "fh2021_boiling_pot_full_integr": [135, 790], "fh2021_boiling_pot_basic_integr": [135, 790], "fh2021_libgpiod_switch": [135, 136, 790], "fh2021_sensor_w1": [135, 790], "mockswitch": [136, 141, 142], "libgpiodswitch": 136, "tkinter": 137, "stackoverflow": [137, 369, 374, 452], "2400262": 137, "random": [137, 143, 190, 192, 208, 220, 232, 244, 245, 248, 252, 254, 257, 260, 265, 267, 270, 292, 301, 334, 340, 346, 350, 364, 369, 412, 499, 501, 506, 515, 541, 552, 562, 563, 564, 565, 567, 568, 569, 599, 752, 868, 943, 954, 973, 1001, 1035, 1047, 1070, 1143, 1152], "pca9685": [138, 143, 147, 288, 790, 933, 934, 940], "pwmchip0": [138, 934, 942], "pwm0": [138, 934, 942], "danc": [138, 178, 553, 857, 1027], "phase": [138, 220, 520, 534, 1005, 1039], "cumbersom": [138, 174, 176, 211, 607, 630, 698, 742, 793, 979, 1005, 1176], "percentagedisplai": 138, "round": [138, 172, 239, 244, 254, 264, 280, 285, 334, 336, 350, 493, 500, 501, 503, 505, 514, 515, 528, 542, 594, 790, 998, 1205], "hood": [138, 174, 1011], "relationship": [138, 337, 369, 508, 541, 583, 665, 758, 980, 1013, 1027, 1043, 1047, 1142], "pwmdisplai": 138, "pwm_control": 138, "bit": [138, 142, 166, 171, 172, 174, 177, 179, 182, 183, 204, 205, 208, 215, 234, 245, 247, 248, 254, 278, 281, 287, 288, 291, 294, 308, 309, 327, 352, 353, 364, 369, 374, 380, 392, 398, 404, 410, 415, 422, 431, 438, 439, 444, 448, 451, 454, 455, 464, 468, 473, 474, 537, 551, 612, 696, 731, 734, 744, 754, 787, 788, 789, 790, 833, 837, 856, 867, 868, 892, 894, 896, 933, 934, 935, 937, 942, 944, 967, 995, 1012, 1021, 1031, 1071, 1136, 1149, 1184, 1189], "pwm5": 138, "visibl": [138, 142, 187, 213, 233, 299, 355, 402, 404, 406, 430, 432, 463, 464, 468, 473, 474, 538, 687, 790, 808, 941, 943, 1005, 1076, 1105, 1145], "10000000": [138, 174, 247, 418, 981, 1037, 1045], "set_percentag": 138, "duti": [138, 934, 942], "duty_cycl": [138, 934, 942], "unbuff": 138, "automat": [138, 142, 160, 174, 176, 178, 179, 187, 222, 224, 228, 234, 241, 247, 257, 260, 264, 297, 299, 406, 415, 442, 459, 462, 466, 478, 507, 508, 597, 600, 665, 669, 707, 736, 775, 789, 790, 793, 808, 837, 941, 943, 970, 1032, 1085, 1093, 1098], "serv": [141, 176, 178, 427, 1142, 1170, 1204], "ground": [141, 942, 943], "mocksensor": [141, 143], "upstream": [142, 175, 178, 183, 187, 815], "sysfsgpioswitch": 142, "wherea": 142, "gpio20": 142, "voltag": [142, 934, 941], "constructur": 142, "proid": 142, "lifecycl": 142, "avg": [143, 260, 340, 459, 498, 515, 526, 545, 552, 774, 776, 778, 780], "lifetim": [143, 173, 231, 233, 250, 262, 407, 422, 431, 438, 444, 448, 449, 451, 455, 464, 468, 473, 474, 508, 601, 684, 696, 707, 734, 787, 789, 790, 1030], "averagingsensor": [143, 498, 526], "scheme": [143, 260, 306, 323, 326, 610, 1030, 1034], "constantsensor": [143, 498, 501, 506, 518, 519, 527, 539, 546, 552, 562, 563, 564, 565, 567, 568, 704, 752, 753, 754, 755, 1047, 1124], "meet": [143, 177, 179, 204, 454, 881, 1023, 1036], "liskow": [143, 504], "gcc": [143, 173, 174, 200, 220, 222, 241, 247, 257, 260, 362, 389, 391, 415, 432, 436, 454, 457, 458, 460, 470, 471, 479, 481, 580, 628, 631, 763, 837, 838, 874, 894, 959, 960, 961, 967, 968, 969, 970, 979, 982, 1012, 1023, 1025, 1026, 1027, 1028, 1029, 1061, 1178, 1184], "cycl": [143, 234, 269, 476, 478, 722, 753, 767, 789, 790, 933, 934, 942, 974, 988, 994], "todai": [143, 173, 224, 232, 248, 281, 298, 314, 327, 330, 378, 404, 1136, 1191, 1194], "minut": [143, 172, 178, 179, 204, 208, 211, 248, 943, 1136, 1152], "suppos": [143, 187, 208, 264, 354, 518, 815, 837, 854, 876, 934, 982, 1130, 1169], "deploi": [143, 184, 212, 369, 374, 494, 827, 864, 865, 942, 943, 948, 950, 954], "leddisplai": 143, "pwmcontrol": 143, "minor": [143, 179, 183, 241, 247, 257, 260, 290, 796, 803, 868], "tweak": [143, 1169], "standup": 143, "followup": [143, 255, 316, 319, 539, 1125], "bonu": 143, "donat": [143, 935], "relai": 143, "board": [143, 171, 173, 837, 941], "cooker": 143, "gapher": 143, "tape": 143, "coordin": [143, 550, 596, 598, 605, 606, 716, 959], "notic": [143, 171, 172, 174, 187, 241, 247, 257, 260, 462, 481, 482, 539, 786, 877, 981, 983, 1043, 1158], "wikipedia": [143, 189, 250, 466, 609, 943, 954, 998, 1030, 1149], "summer": [144, 148, 368, 369, 375], "stece2022": 147, "winter": 147, "gl\u00fchwein": 147, "trinken": 147, "drive": [147, 157, 290, 456, 544, 942, 963, 1143], "deploy": [147, 148, 172, 204, 208, 229, 315, 331, 483, 489, 790, 812, 1136], "findet": [148, 190], "bachelorstudium": 148, "elektronik": [148, 1193, 1200], "semesterwochenstunden": 148, "ect": 148, "lehrveranstaltungsleit": 148, "studierenden": 148, "vorkenntniss": 148, "lehrveranstaltungen": 148, "vorausgesetzt": [148, 1185, 1187, 1188, 1196, 1202, 1203, 1205, 1206], "informatik": [148, 370], "wissen": [148, 189, 387, 1186, 1193], "grundaufgaben": 148, "betriebssystemen": [148, 387, 1195, 1200, 1202], "bescheid": 148, "abstraktionen": 148, "programmierparadigmen": 148, "gesamtnot": 148, "praktischen": 148, "theoretischen": 148, "teil": [148, 180, 190, 199, 207, 1184, 1186], "laborklausuren": 148, "klausur": 148, "besteht": 148, "m\u00f6glichkeit": [148, 186, 189, 207, 1186, 1205, 1206], "hausaufgaben": 148, "sammeln": 148, "diesen": [148, 387, 1203], "hinzugerechnet": 148, "ausfallsicherung": 148, "dienen": [148, 1186], "einzelergebniss": 148, "erfolgt": [148, 1193], "punkten": 148, "gesamtergebniss": 148, "umrechnung": 148, "prozent": 148, "notwendigen": 148, "unterricht": 148, "klausuren": 148, "abgehalten": 148, "endnot": 148, "ergibt": 148, "erreichten": 148, "wobei": [148, 215], "anwendung": [148, 186, 1205], "kommt": [148, 207, 222, 232, 235, 261, 1196, 1205, 1207], "91": [148, 191, 205, 215, 220, 222, 228, 231, 237, 241, 244, 247, 252, 254, 257, 260, 264, 267, 273, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 364, 369, 374, 1140, 1141], "81": [148, 182, 191, 193, 205, 215, 220, 222, 228, 231, 233, 237, 244, 247, 252, 254, 260, 264, 267, 270, 273, 282, 285, 289, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 364, 1013, 1037, 1140, 1141], "90": [148, 175, 182, 191, 215, 220, 222, 228, 231, 237, 244, 247, 252, 254, 260, 264, 267, 270, 273, 282, 285, 289, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 364, 478, 1140, 1141, 1169], "80": [148, 177, 182, 191, 205, 215, 220, 222, 228, 231, 237, 241, 244, 247, 252, 254, 260, 264, 267, 270, 273, 282, 285, 289, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 364, 470, 543, 919, 995, 1025, 1037, 1093, 1140, 1141, 1169], "befriedigend": 148, "gen\u00fcgend": 148, "einzuloggen": 148, "abschlussklausur": 148, "zugelassen": 148, "beschrieben": 148, "negativen": 148, "beurteilung": 148, "sowohl": [148, 1193, 1200], "laborklausur": 148, "theoretisch": 148, "schriftlich": [148, 370], "wiederholt": 148, "kommissionel": 148, "wiederholung": [148, 199, 216, 223, 259, 1199], "immer": [148, 180, 181, 195, 199, 205, 207, 220, 292, 1184, 1188, 1195, 1205], "gesamtpr\u00fcfung": 148, "vergleichbar": [148, 205], "antritt": 148, "bestanden": 148, "einmalig": 148, "positiv": 148, "absolvierten": 148, "innerhalb": [148, 997, 1206], "wochen": 148, "bekanntgab": 148, "pr\u00fcfungsergebniss": 148, "melden": 148, "teilleistungen": 148, "erbringen": 148, "legt": 148, "fest": [148, 181], "welch": [148, 205, 245], "wiederholen": [148, 195, 387], "anmeldung": [148, 387], "erforderlich": 148, "gesamtzahl": 148, "pr\u00fcfungsversuch": 148, "angerechnet": 148, "jeder": [148, 180, 1183, 1186, 1187, 1206], "wiederholungspr\u00fcfung": 148, "z\u00e4hlt": 148, "zumindest": [148, 180, 205, 1186], "besuchen": 148, "labor\u00fcbungen": [148, 370], "gilt": [148, 181, 195, 236, 387], "anwesenheitspflicht": 148, "begr\u00fcndeten": 148, "einzelf\u00e4llen": 148, "krankheit": 148, "m\u00f6glich": [148, 1188, 1193], "solchen": [148, 205, 215], "nachzuholen": 148, "ersatzleistungen": 148, "bjarn": [148, 595, 775], "stroustrup": [148, 595, 775], "4th": 148, "brian": [148, 370, 371, 390, 1186], "kernighan": [148, 390, 1186, 1187], "denni": [148, 390, 430, 629, 1186], "ritchi": [148, 390, 430, 629, 1186, 1187], "bl\u00f6cken": 148, "crossdevelop": 148, "tats\u00e4chlich": 148, "vorgetragen": [148, 207], "stoff": [148, 235], "tagesaktuel": 148, "verf\u00fcgung": [148, 186, 205, 1188, 1205], "gestellt": [148, 195, 205, 387, 1188], "stece": 149, "dir": [150, 205, 224, 232, 245, 254, 257, 264, 282, 285, 305, 306, 324, 346, 350, 354, 362, 443, 478, 479, 485, 490, 882, 1012, 1013, 1025, 1048, 1164, 1171], "wo": [150, 180, 190, 191, 199, 205, 207, 387, 1186, 1187, 1205], "jf": [150, 165, 179, 216, 217, 275, 292, 369, 374, 388, 518, 532, 812, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1194, 1199], "aon": 150, "biz": 150, "svn": [150, 168, 234, 387, 388], "recommend": [150, 183, 204, 212, 224, 257, 466, 619, 650, 837, 897, 942, 1091, 1145, 1153], "lokalen": 150, "fetch": [150, 173, 187, 837, 980, 1008], "myremot": 150, "orig": [150, 175, 222], "stia": 150, "improv": [151, 466, 469, 481, 737, 752, 788, 1030, 1088], "stack": [151, 193, 194, 195, 202, 216, 217, 235, 241, 244, 247, 257, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346, 460, 466, 516, 600, 631, 751, 870, 874, 942, 967, 979, 1199], "hang": [151, 215, 596, 840, 863], "seo": [151, 849], "playground": [151, 153], "i2": [151, 157, 162, 267, 302, 790], "kontron": [151, 164, 790], "smarc": [151, 164, 790], "proper": [152, 172, 200, 452, 812, 837, 969, 1054], "manifest": [152, 1023, 1172], "cfg": [152, 164, 340], "author_email": 152, "classifi": [152, 1091, 1138], "tox": 152, "travi": 152, "yml": 152, "upgrad": [152, 160, 161, 191, 790, 1164, 1171], "zip": [152, 164, 168, 232, 252, 258, 272, 285, 335, 340, 897, 903, 919], "zipfil": [152, 232], "99": [152, 182, 191, 205, 215, 222, 228, 231, 237, 244, 247, 252, 254, 257, 260, 264, 267, 270, 273, 282, 285, 289, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 364, 369, 374, 470, 998, 1074, 1110, 1140], "999": [152, 244, 247, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340], "whl": [152, 168, 1091, 1164], "uninstal": [152, 484, 1164, 1169], "pypa": 152, "sampleproject": 152, "gnome3": [153, 872], "fedoraproject": [153, 175, 810], "workstat": [153, 837], "redhat": [153, 187, 309, 340, 472], "thirti": 153, "flatpak": [153, 244, 260, 267, 270, 285, 292, 302, 306, 309, 328, 334, 340, 346, 928], "flathub": [153, 202], "x86_64": [153, 168, 175, 177, 224, 231, 340, 366, 389, 415, 553, 614, 810, 815, 1014, 1023], "stabl": [153, 162, 179, 183, 476, 815, 837, 876, 995, 1027, 1029, 1091, 1165], "gnome": [153, 160, 172, 177, 244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346, 472, 837, 872, 928, 996], "ipc": [153, 167, 168, 169, 172, 386, 388, 788, 790, 933, 974, 1002, 1204], "fallback": [153, 1034, 1054], "x11": [153, 160, 340], "wayland": [153, 160, 177], "dri": 153, "op": [153, 900, 1086], "kb": [153, 168, 174, 1171], "369": [153, 247, 292, 306, 334, 340], "mb": [153, 174, 875], "230": [153, 244, 247, 252, 254, 257, 260, 264, 267, 270, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350], "375": [153, 247, 254, 264, 292, 306, 324, 334, 340, 350, 465], "diagram": [153, 250, 498, 516, 518, 850, 934, 941, 943], "latest": [153, 183, 793, 808, 814, 1164], "first_model": 153, "unavail": [153, 764], "cairo": [153, 168], "gobject": [153, 168], "introspect": [153, 168, 995], "regogn": 153, "cental": 153, "phycial": 153, "gaphor_model": 153, "fh_source_sink": 153, "sourceandsink": 153, "steig": [154, 180], "normalweg": 154, "w\u00e4r": 154, "umst\u00e4nden": [154, 1184, 1188, 1203], "renat": 154, "beschreibung": [154, 216, 218, 226, 229, 232, 233, 235, 251, 263, 925], "bergfex": 154, "reden": 154, "sie": [154, 180, 186, 191, 195, 252, 257, 324, 364, 370, 387, 859, 924, 1183, 1185, 1186, 1187, 1193, 1203, 1205, 1206, 1207], "tagen": [154, 1193], "wir": [154, 190, 195, 199, 205, 207, 215, 216, 221, 235, 254, 260, 267, 320, 387, 655, 1184, 1199, 1200], "w\u00fcrden": 154, "denk": [154, 180, 236, 1203], "beiden": [154, 191, 205, 252, 260, 267], "h\u00fctten": [154, 181], "schlafen": 154, "gaphor": 155, "hochk\u00f6nig": 155, "buildenviron": 156, "resolve_refer": 156, "builder": [156, 244, 1093], "get_and_resolve_doctre": 156, "apply_post_transform": 156, "addnod": 156, "docstr": [156, 168, 228, 231, 241, 247, 253, 265, 268, 271, 293, 325, 347, 369, 1063], "doctre": 156, "devicetre": [157, 942], "signal": [157, 168, 169, 197, 299, 387, 470, 768, 790, 808, 829, 874, 933, 934, 942, 974, 979, 987, 995, 996, 1001, 1005, 1195, 1202, 1203, 1206], "audio_mck": 157, "i2s0_ck": 157, "i2s0_lrck": 157, "i2s0_sdout": 157, "alsa": [157, 175, 340], "tlv320dac3203irg": 157, "tlv320dac3203": 157, "suggest": [157, 171, 172, 174, 176, 178, 179, 187, 196, 204, 211, 212, 213, 214, 277, 279, 297, 299, 430, 1059, 1087, 1169], "tlv320aic32x4": 157, "compat": [157, 177, 193, 296, 605, 695, 711, 788, 793, 812, 1014, 1060, 1083, 1149, 1164, 1165], "tlv320aic31xxsw": 157, "tlv320aic31xx": 157, "wget": [158, 177, 179, 183, 302, 1023, 1025], "cdimag": 158, "amd64": [158, 224, 366, 410], "iso": [158, 232, 250, 251, 267, 270, 290, 312, 324, 328, 390, 478, 595, 611, 861], "netinst": 158, "img": [158, 193, 195, 350, 465, 837, 941], "qcow2": 158, "virtualdebian": 158, "30g": [158, 179], "kvm": [158, 175], "hda": 158, "cdrom": 158, "2048": [158, 182, 247], "nic": 158, "sic": [158, 183], "box": [158, 162, 204, 934, 941, 1059], "deliveri": [159, 163, 172, 1007, 1010], "outcom": [160, 208, 213, 299, 837, 896, 897, 1019, 1092], "dirti": [160, 161, 174, 188, 436, 501, 790], "forget": [160, 165, 172, 173, 174, 248, 401, 404, 449, 478, 1145, 1151, 1170, 1189], "graphic": [160, 471, 872, 873, 942], "plug": [160, 173, 175, 500], "monitor": [160, 175, 189], "4k": [160, 174, 995, 1004], "dual": [160, 162], "applianc": [160, 174, 472], "benchmark": 160, "glxgear": 160, "su": [160, 1025], "pect": 160, "cluster_project_xxx": [161, 790], "project_xxx_yocto_kernel": [161, 790], "bsp": [161, 790], "project_xxx_hardware_bringup": [161, 790], "bringup": [161, 162, 790], "project_xxx_wait_hardwar": [161, 790], "project_xxx_dirty_upgrad": [161, 790], "project_xxx_debian_config": [161, 790], "project_xxx_audio_chip": [161, 790], "chip": [161, 190, 244, 790, 934, 938, 941, 959, 961, 995, 1093], "project_xxx_debian_kernel_packag": [161, 790], "finish": [161, 204, 223, 761, 790, 847, 1046], "shot": [162, 179, 430, 694, 768, 788], "dac": 162, "massacr": [162, 191, 250, 369, 430, 436, 462, 486, 694, 1042], "distro": [162, 484, 1066, 1178], "bootload": [162, 171, 182, 472, 873, 941, 943], "oldconfig": [162, 173, 810, 817, 837, 838], "qemu": [162, 244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346], "grub": [162, 182, 340], "yoctoproject": 164, "v5": [164, 175], "bsp_smarc": 164, "sxal4_smarc": 164, "sxal_r1": 164, "0_combin": 164, "sxal4_5": 164, "sxal4": 164, "inc": [164, 175, 296, 453, 490, 491, 763, 982, 1045], "filesextrapaths_prepend": 164, "thisdir": 164, "linux_vers": 164, "linux_version_extens": 164, "linux_kernel_typ": 164, "kbranch": 164, "kmeta": 164, "lic_files_chksum": 164, "md5": 164, "bbea815ee2795b2f4230826c0c6b8814": 164, "srcrev_machine_pn": 164, "3604bc07c035939266d78d65084c6cd54ffc6d56": 164, "srcrev_meta_pn": 164, "8d42b14fe517ef036dc4e7b290f16d142f4f1d39": 164, "src_uri": 164, "bareclon": 164, "cach": [164, 168, 173, 299, 302, 340, 452, 466, 471, 472, 630, 647, 775, 919, 996, 1164, 1171, 1187], "destsuffix": 164, "scc": 164, "pv": 164, "srcpv": 164, "include_patch": 164, "patch": [164, 183, 184, 997, 1025, 1184], "compatible_machin": 164, "therebi": [165, 204, 702, 928, 1008, 1054, 1093], "simplifi": 165, "fine": [165, 174, 179, 208, 481, 482, 597, 709, 711, 817, 847, 954, 958, 1026, 1043, 1055, 1064, 1070, 1085, 1149], "grain": [165, 179, 478, 481, 847, 1055, 1070], "surround": [165, 695, 736, 748], "cut": [165, 193, 211, 224, 264, 278, 287, 308, 309, 352, 353, 415, 450, 790, 827, 867, 881, 927, 930, 933, 943], "linewis": 165, "wherev": [165, 394], "obs studio": 166, "video edit": 166, "screen record": 166, "These": [166, 174, 176, 177, 241, 247, 257, 260, 481, 494, 810, 837, 941, 1013], "offici": [166, 208, 209, 212, 213, 214, 219, 594, 1025, 1174], "jonathan": [166, 370, 371, 775, 1184], "thoma": 166, "himself": [166, 943], "paus": [166, 174, 995, 1008], "meanwhil": 166, "freez": [166, 1164, 1172], "photo": 166, "length": [166, 228, 231, 241, 247, 257, 260, 289, 296, 306, 328, 334, 346, 478, 550, 601, 613, 674, 808, 821, 833, 935, 937, 963, 973, 1005, 1141, 1149, 1153, 1160], "grab": [166, 934, 942], "neil": 167, "patel": 167, "insight": [167, 171, 481, 1023, 1163], "consol": [167, 224, 872, 875, 930, 1115, 1195], "crawlabl": 167, "dn": [167, 176, 179, 244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346, 1206], "domain": [167, 168, 178, 179, 184, 462, 476, 488, 996, 1135, 1138, 1204, 1206], "queue": [167, 168, 173, 182, 183, 190, 196, 216, 217, 219, 248, 276, 277, 279, 288, 300, 301, 322, 323, 326, 336, 518, 767, 789, 790, 831, 839, 857, 870, 874, 933, 974, 984, 988, 1199, 1203, 1204, 1205], "pydbu": 168, "openh": [168, 169, 190, 231], "blog": [168, 172, 175, 182, 187, 756], "traceback": [153, 168, 194, 241, 247, 257, 260, 270, 290, 292, 306, 328, 1032, 1033, 1034, 1039, 1047, 1048, 1054, 1055, 1076, 1077, 1081, 1083, 1086, 1087, 1149, 1157, 1158, 1170], "recent": [168, 171, 174, 179, 194, 202, 241, 247, 257, 260, 270, 290, 292, 306, 328, 390, 837, 916, 1032, 1033, 1034, 1039, 1047, 1048, 1054, 1055, 1076, 1077, 1081, 1083, 1086, 1087, 1149, 1157, 1158, 1170], "oh_test": 168, "easysuit": 168, "oh_dbus_easysuit": 168, "easysuite_error": 168, "error_suit": 168, "dbusheatingerror": 168, "modulenotfounderror": [168, 285, 290, 1034], "research": [168, 171, 172, 285, 1142], "pygobject": 168, "714": [168, 247], "venv": [168, 205, 231, 241, 247, 257, 258, 260, 272, 302, 340, 376, 377, 919, 1090, 1123, 1136, 1151, 1163, 1169, 1171, 1172], "standalon": [168, 454, 707, 1008, 1176], "ss_9wmug": 168, "__env_pip__": 168, "ignor": [168, 189, 201, 260, 306, 380, 416, 436, 466, 488, 496, 628, 631, 694, 709, 722, 744, 795, 879, 942, 967, 1009, 1032, 1164], "9lrqmi4l": 168, "overlai": [168, 837, 941, 942], "locat": [168, 169, 173, 178, 183, 204, 241, 247, 257, 260, 264, 314, 330, 369, 387, 439, 452, 460, 466, 494, 516, 609, 629, 705, 753, 812, 837, 941, 942, 943, 963, 981, 1005, 1012, 1032, 1140, 1157, 1191], "pycairo": 168, "cwd": [168, 340, 551, 788, 863, 874, 900, 919, 921, 925, 1013], "821": [168, 247], "py2": 168, "344": [168, 247, 260, 292, 306, 324, 334, 340, 346], "517": [168, 247, 292, 340], "tmpabab356k_in_process": 168, "build_wheel": 168, "tmpt1yod7mc": 168, "o4u45fjc": 168, "pycairo_33865a19ad6b4a719885f07926efe16d": 168, "bdist_wheel": [168, 1091], "build_pi": 168, "pyi": 168, "build_ext": 168, "pkg": 168, "perhap": [168, 264, 806, 1144], "pkg_config_path": 168, "cp39": 168, "linux_x86_64": 168, "lib64": [153, 168, 200, 205, 231, 241, 247, 257, 260, 264, 340, 472, 482, 484, 489, 1011, 1014, 1028, 1035, 1157, 1158, 1164, 1178], "_vendor": 168, "pep517": 168, "in_process": 168, "_in_process": 168, "tmpf2wjv23h": 168, "4rtfumdz": 168, "pygobject_beef4432e2454eb0b7facc57fadf42b8": 168, "pygtkcompat": 168, "generictreemodel": 168, "_signalhelp": 168, "_propertyhelp": 168, "_ossighelp": 168, "_option": 168, "_gtktemplat": 168, "_error": [168, 525], "_constant": 168, "keysym": 168, "pango": 168, "gio": 168, "gdkpixbuf": 168, "gdk": 168, "glib": 168, "gimarshallingtest": 168, "tmp56g_ixbz": 168, "bvay4iv4": 168, "pygobject_6777f13e15934fb2b13139399b143557": 168, "todo": [168, 213, 248, 276, 277, 382, 383, 552, 694, 775, 791], "summari": [168, 209, 501, 604, 753, 1169], "c1": [168, 182, 499, 613, 698], "misc": [168, 169, 191, 192, 351, 572, 806, 850, 1188], "w3school": 168, "howto": [168, 169, 808], "howto_css_image_transpar": 168, "asp": 168, "titelseit": 168, "mitt": 168, "howto_js_read_mor": 168, "subdir": [168, 350, 788, 1032], "gegen": [168, 1184], "clutter": [168, 201], "404": [168, 178, 247, 254, 292, 306, 324, 340, 350], "prio": [168, 210, 997, 998, 1004], "beagleboard": [168, 173, 184], "repair": [168, 184, 244], "nand": [168, 184], "40w": [168, 184], "suck": [168, 169, 184], "disk": [168, 171, 172, 175, 179, 184, 465, 873, 874, 894, 923, 958, 959, 1028, 1085, 1184], "contact": [168, 1191], "ssl": [168, 179, 340, 1164], "certif": [168, 179, 182, 229, 1164], "070": [168, 694], "fortgeschritten": [168, 388, 1186], "700": [168, 247, 647, 755, 950], "lf": [168, 231, 532, 1085], "descr": [168, 252, 328, 346], "050": [168, 694, 1007, 1008], "080": [168, 674, 694], "020": [168, 247, 288, 674, 694, 1003, 1004, 1007, 1008], "060": [168, 169, 208, 377, 694], "_hidden": 168, "010": [168, 334, 694, 896, 1000, 1001, 1003, 1004, 1007, 1008], "190": [168, 205, 222, 231, 244, 247, 252, 254, 257, 260, 264, 267, 270, 273, 282, 285, 292, 302, 306, 312, 324, 328, 340, 346, 350], "propos": [168, 462, 540], "030": [168, 694, 704, 754, 1003, 1004, 1007, 1008], "040": [168, 334, 694, 1003, 1004, 1007, 1008], "central": [169, 201, 234, 323, 326, 390, 434, 494, 788, 1028, 1073, 1085, 1192], "rstjinja": 169, "105": [169, 191, 205, 215, 220, 222, 228, 241, 244, 247, 252, 254, 260, 264, 267, 270, 273, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 364, 369, 374, 999], "110": [169, 176, 191, 205, 215, 222, 228, 237, 241, 244, 247, 252, 254, 260, 264, 267, 270, 282, 285, 289, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 364, 534, 535, 694, 896, 1003, 1004], "cxx_class_templ": [169, 594, 790], "cxx_dynamic_memori": [169, 594, 790], "cxx_global_initi": [169, 594, 790], "cxx_inheritance_virtu": [169, 594, 790], "cxx_ownership_raii": [169, 594, 790], "cxx_stl_container_intro": [169, 594, 790], "cxx_templates_vs_interfac": [169, 594, 790], "maj": [169, 794], "min": [169, 285, 772, 794, 1141], "cdev": [169, 793, 794, 796, 800, 801, 806], "fop": [169, 794, 801], "devtmpf": [169, 793, 794, 839], "dynam": [169, 199, 207, 208, 241, 247, 257, 258, 260, 303, 387, 451, 455, 464, 468, 473, 474, 484, 515, 552, 583, 592, 594, 601, 666, 668, 671, 672, 691, 696, 705, 734, 758, 774, 775, 776, 787, 789, 790, 794, 799, 804, 807, 809, 814, 818, 828, 832, 834, 839, 841, 846, 852, 855, 858, 863, 874, 933, 982, 984, 993, 1011, 1012, 1051, 1065, 1086, 1136, 1190, 1194], "sysprog_ev": 169, "sysprog_ipc": 169, "sysprog_sign": 169, "unittest_gtest_bas": [169, 790, 1174], "unittest_gtest_fixtur": [169, 790, 1174], "brows": [169, 171, 187, 876, 942], "rtd": 169, "blender": 169, "corda": 169, "figclass": 169, "homebrain": [169, 290, 302, 919, 920], "literalinclud": 169, "within": [169, 174, 250, 260, 306, 387, 543, 544, 548, 553, 598, 669, 732, 801, 934, 1046, 1063, 1075, 1160], "045": [169, 288, 334], "tex": 169, "055": 169, "056": 169, "910": [169, 247, 919], "virtmem": 169, "fart": 169, "ungern": 169, "lost": [169, 179, 244, 250, 463, 572, 694, 753, 950, 984, 987, 1004, 1046, 1169, 1170, 1176], "he": [169, 173, 187, 195, 204, 208, 211, 224, 229, 232, 234, 255, 258, 281, 300, 301, 305, 322, 327, 707, 709, 744, 747, 952, 985, 998, 1009, 1051, 1079, 1136, 1162], "friend": [171, 172, 219, 240, 276, 277, 279, 288, 299, 336, 337, 472, 535, 612, 767, 768, 789, 790, 808, 829, 934, 1178], "alia": [171, 176, 224, 250, 448, 451, 455, 464, 468, 473, 474, 482, 696, 734, 787, 789, 790, 897, 898, 1025], "rm": [171, 173, 177, 178, 212, 214, 369, 374, 944, 954, 1171], "rf": [171, 173, 897, 907, 1171], "variat": [171, 756, 842, 879], "thereof": [171, 288, 296, 499, 616, 1051], "happili": [171, 172, 250, 462, 611], "stage3": 171, "decad": [171, 179, 196, 837, 941, 943, 954, 1033, 1192], "busybox": [171, 172], "initramf": [171, 862], "resid": [171, 174], "flash": [171, 174, 179, 472, 875, 934, 995], "eras": [171, 531, 589, 650, 755, 784, 894], "hit": [171, 173, 174, 193, 196, 234, 788, 897, 926, 929, 1164], "sole": 171, "liter": [171, 194, 210, 215, 222, 232, 240, 241, 245, 252, 257, 260, 264, 267, 276, 277, 285, 292, 306, 324, 328, 334, 336, 340, 346, 361, 365, 369, 396, 404, 411, 460, 515, 530, 550, 694, 707, 837, 1009, 1066, 1079, 1083], "told": [171, 174, 482, 521, 934], "reboot": [171, 173, 190, 837, 898, 941, 942, 943], "fatal": [171, 199, 480, 490, 837, 1177], "saw": [171, 174, 204, 233, 380, 417, 598, 967, 969], "115200": 171, "8n1": 171, "remaind": [171, 172, 175, 177, 200, 204, 288, 815, 837, 934, 942, 1013], "recov": [171, 191], "fauxpa": 171, "explan": [171, 174, 200, 204, 211, 234, 265, 325, 369, 470, 491, 572, 772, 837, 868, 934, 942, 969, 999, 1004, 1139, 1142, 1171], "annot": [171, 232, 281, 321, 471, 595, 1136], "beagl": 171, "omap": 171, "rom": 171, "stage": [171, 187, 233, 1143], "processor": [171, 172, 231, 232, 245, 410, 454, 647, 758, 837, 842, 979, 996, 1011], "sram": 171, "dram": 171, "latter": [171, 174, 995, 1035, 1075, 1143], "abil": [171, 694], "press": [171, 817, 854, 897, 934], "wrote": [171, 174, 377, 1189], "ones": [171, 187, 194, 196, 260, 298, 306, 398, 466, 942, 943, 1068, 1153], "revis": [171, 175, 178, 275, 595, 693, 1189], "slightli": [171, 183, 204, 233, 250, 251, 572, 1063], "season": 171, "c4": [171, 182], "valuabl": [171, 470, 864, 865, 1027, 1029, 1035], "c3": [171, 175, 182], "angstrom": 171, "mlo": 171, "ift": 171, "fdisk": [171, 1184], "obvoiusli": 171, "fat32": [171, 837], "fat16": 171, "partit": [171, 172, 173, 260, 306, 837], "mount": [171, 173, 288, 375, 793, 837, 868, 977, 1004, 1005, 1014, 1023, 1025], "sector": [171, 244, 1093], "intend": [171, 177, 178, 179, 189, 224, 241, 247, 257, 260, 481, 810, 942, 969, 970, 1091], "slot": [171, 973, 1054], "partli": [171, 173, 458], "meaning": [171, 179, 819], "scr": 171, "omap3": 171, "mmc1": 171, "arch": [171, 175, 817, 837, 838, 941], "mach": [171, 233, 238, 254], "omap2": 171, "omap3beagl": 171, "Near": 171, "offset": [171, 788, 808, 966, 1028], "128k": 171, "0x80000": 171, "byte": [171, 174, 187, 189, 191, 241, 247, 257, 260, 267, 270, 285, 306, 312, 328, 334, 340, 346, 354, 369, 392, 400, 410, 411, 442, 445, 454, 457, 463, 467, 501, 596, 601, 604, 609, 616, 629, 753, 788, 851, 868, 874, 897, 928, 935, 941, 958, 959, 960, 963, 965, 967, 968, 969, 970, 993, 996, 1001, 1004, 1008, 1060, 1066, 1071, 1085, 1149], "reli": [171, 204, 743, 847, 1066], "ecc": [171, 175], "nandecc": 171, "hw": 171, "80000": 171, "0x0": [171, 941], "0x60000": 171, "unlik": [171, 224, 275, 758, 765, 934, 1074, 1154, 1194], "intermedi": [171, 192, 499, 1011, 1060], "nevertheless": [171, 172, 179, 291, 294, 837], "0x20000": 171, "fatload": 171, "80200000": 171, "20392": 171, "131072": [171, 795], "40000": 171, "0x40000": 171, "60000": 171, "incarn": [171, 179, 436, 742], "choic": [171, 172, 173, 196, 232, 245, 264, 466, 476, 486, 551, 599, 668, 753, 941, 995, 1023, 1152], "finger": [171, 182, 466, 876, 934], "sw": [171, 549], "0x1e0000": 171, "1e0000": 171, "0x240000": 171, "275928": 171, "1966080": 171, "prompt": [171, 179, 182, 192, 224, 235, 263, 272, 869, 897, 899, 950, 1060, 1061, 1098, 1102, 1115, 1121, 1171], "280000": 171, "400000": [171, 942, 1141], "month": [172, 234, 244, 292, 296, 411], "met": [172, 458, 943], "microcontrol": [172, 427, 934, 942, 995], "clue": 172, "minim": [172, 174, 183, 192, 460, 466, 619, 919, 1023, 1034], "vxwork": 172, "ce": [172, 182, 1025], "quit": [172, 174, 177, 299, 437, 452, 454, 672, 687, 838, 897, 898, 929, 934, 942, 985, 1008, 1023], "blob": [172, 288, 299, 389, 572, 837], "presenc": [172, 174, 488, 1194], "probabl": [172, 178, 204, 264, 294, 361, 487, 492, 597, 702, 837, 849, 897, 943, 995, 1071, 1085, 1149, 1152], "sooner": [172, 187, 462, 840], "chose": [172, 183, 250, 688, 921, 954, 1023], "opinion": [172, 183, 204, 258, 788, 876, 1043], "unless": [172, 254, 260, 264, 306, 666, 699, 863, 919, 980, 1066, 1085, 1157], "hire": 172, "cheap": [172, 174, 479, 609, 702, 707, 743, 744, 842, 1189], "misl": 172, "posix": [172, 174, 197, 760, 767, 769, 789, 790, 874, 933, 963, 974, 980, 984, 986, 994, 1002, 1085, 1203, 1204], "tell": [172, 173, 174, 177, 178, 179, 187, 201, 248, 459, 630, 863, 943, 1011], "pitfal": [172, 256, 276, 277, 279, 336, 337, 369, 630, 709, 734, 735, 736, 754, 789, 790, 934, 1189], "seen": [172, 174, 179, 192, 205, 233, 402, 421, 459, 494, 504, 808, 833, 862, 982, 1143, 1147, 1181], "didn": [172, 173, 174, 183, 204, 208, 224, 234, 258, 327, 837, 916, 968, 1085, 1087, 1136, 1140], "rtoss": 172, "commonli": [172, 241, 264, 291, 294, 508, 769, 788, 823, 857, 899, 963, 1011, 1161], "tear": [172, 277, 501, 550, 551, 552, 553, 614, 753, 806, 1011, 1176], "notif": [172, 177, 196, 766, 938, 1009], "dread": 172, "segment": [172, 174, 434, 543, 609, 732, 752, 995, 1005], "fault": [172, 174, 382, 383, 434, 609, 752, 995], "arriv": [172, 829, 854, 993, 1008], "handler": [172, 241, 247, 257, 260, 299, 306, 319, 470, 817, 819, 847, 979, 995, 1007, 1010], "pai": [172, 296, 465, 488, 868], "attent": [172, 228, 244, 252, 400, 421, 423, 452, 471, 481, 631, 636, 705, 736, 739, 829, 997, 1032, 1159, 1181], "safe": [172, 241, 247, 248, 257, 260, 270, 462, 702, 744, 746, 754, 768, 950, 955, 979, 982, 987, 1010], "pthread_": 172, "trick": [172, 229, 239, 242, 245, 269, 281, 305, 311, 437, 1136], "asynchron": [172, 241, 247, 257, 260, 327, 355, 958, 975, 978, 1008, 1009, 1088], "sigwait": [172, 1008], "sigwaitinfo": 172, "sigtimedwait": 172, "caught": [172, 241, 247, 257, 260, 469, 619], "synchron": [172, 244, 250, 260, 267, 270, 285, 292, 300, 301, 302, 306, 322, 323, 326, 328, 334, 340, 346, 761, 767, 789, 790, 928, 933, 958, 974, 980, 981, 988, 994, 995, 1005, 1007, 1010, 1194], "signalfd": [172, 963, 1001, 1203, 1204], "Its": [172, 174, 177, 550, 926, 996], "emb": 172, "among": [172, 196, 204, 241, 247, 257, 260, 459, 753, 882, 941, 963, 969, 993, 1009, 1059, 1144, 1145, 1169, 1192], "epol": [172, 977, 1001, 1005, 1204, 1206], "err": [153, 172, 211, 231, 296, 337, 553, 650, 694, 696, 734, 742, 754, 787, 789, 790, 801, 831, 833, 868, 935, 937, 941, 1054, 1158], "naiv": [172, 192, 247, 250, 314, 330, 454, 487, 496, 588, 590, 604, 671, 752, 786, 845, 979, 999, 1010, 1040, 1041, 1143, 1148, 1181, 1191], "intra": 172, "primit": [172, 216, 217, 297, 1041, 1189, 1199], "oss": 172, "synchronis": [172, 979, 1205], "pthread_mutex_init": [172, 766, 982], "critical_sect": 172, "closest": [172, 702], "pendant": [172, 589, 796], "expir": [172, 847, 961, 993, 995, 1009], "sometim": [172, 187, 264, 426, 442, 466, 603, 693, 868, 875, 968, 980, 1025, 1031, 1062, 1169], "setitim": 172, "timer_cr": [172, 995], "drawback": [172, 436, 453, 458, 463, 507, 630, 950], "unfortun": [172, 173, 196, 233, 521, 934, 1154], "straightforward": [172, 251, 716, 754, 805, 1037, 1054, 1072, 1141], "nanosleep": [172, 768, 995], "timerfd_cr": [172, 961, 963, 1203, 1204], "conjunct": 172, "emul": [172, 277, 279, 297, 454, 463, 469], "stupid": [172, 174, 231, 247, 250, 252, 411, 436, 442, 460, 466, 476, 702, 757, 854, 916, 958, 1039, 1085], "screw": [172, 656], "otherwis": [172, 173, 258, 260, 264, 301, 306, 334, 350, 360, 415, 426, 452, 462, 612, 650, 707, 736, 743, 758, 764, 808, 821, 829, 837, 845, 864, 865, 950, 979, 984, 990, 1005, 1034, 1063, 1066, 1083, 1085, 1105, 1116, 1158, 1181], "millisecond": [172, 241, 247, 257, 260, 755, 769, 845, 942], "etern": 172, "nowadai": [172, 174, 176, 177, 233, 300, 301, 322, 392, 410, 812, 847, 872, 875, 963, 1009, 1149], "moder": [172, 179, 239], "tri": [172, 173, 174, 183, 187, 193, 204, 252, 350, 380, 551, 681, 764, 788, 934, 943, 996, 1189], "achiev": [172, 231, 264, 672, 993, 1046], "albeit": [172, 516, 742, 990, 1071, 1189], "lose": [172, 223, 234, 254, 257, 260, 270, 334, 340, 346, 1070], "wealth": 172, "socket": [172, 190, 211, 281, 788, 790, 870, 873, 933, 958, 962, 963, 974, 1005, 1009, 1164, 1203, 1204, 1206], "uart": [172, 458, 870], "previous": [172, 241, 247, 257, 260, 264, 1009, 1189], "regardless": [172, 437, 942], "surpris": [172, 174, 288, 460, 665, 1030, 1054], "alon": [172, 173, 174, 187, 297, 299, 466, 470, 711, 1075, 1143, 1194], "advantag": [172, 458, 609], "regularli": [172, 463], "buffer": [172, 260, 285, 300, 301, 306, 322, 326, 398, 527, 532, 707, 853, 881, 955, 958, 959, 960, 961, 969, 1008, 1085], "ttys0": 172, "stream": [172, 177, 179, 219, 245, 260, 285, 595, 612, 881, 935, 993, 1039, 1161, 1206], "eventfd": [172, 963, 1001, 1203, 1204], "complic": [172, 173, 182, 211, 254, 264, 408, 427, 466, 491, 622, 705, 711, 731, 796, 833, 935, 943, 1008, 1011, 1039, 1152, 1191, 1194], "unregist": [172, 503], "callback": [172, 208, 241, 247, 257, 260, 378, 722, 847, 856, 1152], "comfort": [172, 224, 372, 746, 941, 1161], "excit": 172, "hundr": [172, 174, 179, 282, 285, 963], "panel": 172, "deal": [172, 248, 460, 606, 837, 943, 1064, 1138, 1149, 1189, 1194], "touch": [172, 178, 204, 241, 247, 257, 260, 478, 882, 891, 896, 941, 964, 970, 1194], "stai": [172, 196, 208, 239, 1008], "harder": [172, 758, 944], "buggi": [172, 604, 732, 744, 995], "examin": [172, 174, 462, 612, 753, 780, 897, 990], "debugg": [172, 241, 247, 257, 258, 260, 499, 1187, 1202], "gdb": [172, 224, 387, 1187], "spidev": 172, "bluntli": 172, "whether": [172, 192, 260, 264, 285, 296, 306, 401, 465, 556, 601, 634, 788, 833, 942, 1115, 1121, 1164], "deadlin": 172, "howev": [172, 182, 201, 264, 495, 810, 812, 934, 977, 979], "sched_setschedul": [172, 189, 998], "pthread_attr_setschedparam": [172, 998], "runnabl": [172, 835, 996, 997, 998], "prioriti": [172, 189, 260, 829, 835, 837, 839, 874, 996, 997, 1005, 1205], "anymor": [172, 178, 183, 196, 233, 250, 478, 482, 611, 705, 707, 716, 740, 753, 754, 758, 872, 941, 984, 995, 997, 1028, 1066, 1068, 1158], "potenti": [172, 479, 609, 716, 764, 954, 1034, 1046, 1092], "harm": [172, 430, 458, 754, 756, 1034], "polici": [172, 177, 189, 340, 478, 494, 668, 672, 815, 996, 997, 1205], "sched_fifo": [172, 997, 998, 1184], "sched_rr": [172, 174, 998, 1184], "robin": [172, 239, 998, 1205], "manner": [172, 436, 837, 941], "troubl": 172, "trigger": [172, 380, 819, 823, 941, 1054, 1145], "certain": [172, 204, 211, 457, 462, 520, 543, 544, 722, 744, 833, 868, 881, 984, 1011, 1059], "circumst": [172, 996], "deadlock": [172, 572, 764, 765, 829, 842, 982, 996, 997], "inspect": [172, 174, 241, 247, 257, 260, 278, 287, 298, 308, 323, 352, 790, 867, 933, 954], "uclibc": 172, "investig": 172, "spend": [172, 179, 193, 204, 208, 229, 232, 255, 281, 305, 327, 465, 1136], "browser": [173, 179, 191, 202, 235], "significantli": [173, 1008], "decreas": [173, 174, 454, 897, 999], "week": [173, 188, 456], "forth": [173, 467, 868, 941, 954, 1066], "spare": 173, "volum": 173, "undertak": 173, "indirectli": [173, 753], "pocket": 173, "purchas": [173, 264], "corsair": 173, "120": [173, 191, 205, 215, 222, 237, 241, 244, 247, 252, 254, 257, 260, 264, 267, 270, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 613, 694, 1003, 1004], "overhaul": 173, "reserv": [173, 179, 196, 208, 244, 260, 285, 306, 409, 631, 801, 833, 893, 998, 1093], "livecd": 173, "ssd": [173, 465, 959], "vanish": 173, "gone": [173, 194, 244, 722, 754, 817, 840, 898, 987], "nowher": [173, 312, 564], "depart": 173, "unusu": 173, "cope": 173, "bet": 173, "themselv": [173, 436, 476, 516], "aggress": 173, "harddisk": 173, "treatment": [173, 264, 897, 1028], "proud": 173, "120g": 173, "fresher": 173, "plenti": [173, 175, 470], "4g": [173, 174], "shouldn": [173, 694, 837, 1083], "hibern": 173, "fstab": [173, 340], "room": [173, 179, 208, 323, 496, 647, 831, 943, 1149, 1192], "swapon": 173, "sda1": 173, "swapoff": 173, "overal": 173, "mitig": [173, 831], "perfect": [173, 179, 187, 233, 281, 336, 390, 647, 703, 734, 757, 789, 790, 1037, 1091, 1136, 1167, 1189], "portag": [173, 837, 926], "openoffic": 173, "tmpdir": [173, 298, 327, 478, 553, 788, 1032, 1131, 1133, 1169], "500m": 173, "2g": 173, "6g": 173, "throwawai": 173, "1tb": 173, "sdc1": [173, 868], "mnt": [173, 868, 876, 1005], "emerg": 173, "umount": 173, "runnung": 173, "offend": [173, 175, 177, 187, 521, 995], "trap": [173, 234, 449, 454, 472, 600, 1188, 1190], "candid": [173, 192, 233, 466, 711, 731, 744, 1034, 1107], "destin": [173, 417, 484, 589, 630, 705, 953, 960], "app": [173, 177, 995, 1148], "admin": [173, 179, 369, 948, 952], "cron": [173, 880, 1064], "rc": [173, 340, 934], "grep": [173, 177, 183, 212, 214, 224, 278, 287, 308, 309, 352, 353, 790, 856, 861, 867, 872, 874, 879, 881, 893, 924, 927, 930, 933, 941, 943, 944, 980, 990, 995, 1152, 1193, 1195, 1200], "tune": [173, 174, 183, 466, 864, 865, 887, 889, 891, 898, 946, 1063], "exce": [173, 208, 798, 995, 1005], "20m": [173, 934, 993], "compresscmd": 173, "bzip2": [173, 183, 212, 214, 862, 863, 1025], "compressopt": 173, "compressext": 173, "missingok": 173, "sharedscript": 173, "postrot": 173, "reload": [173, 212], "endscript": 173, "adjac": [173, 376, 753, 808], "sda": [173, 941, 943], "cfq": 173, "noop": [173, 936], "believ": [173, 179, 934, 943, 971], "r5": 173, "menuconfig": [173, 183, 837, 941, 1025], "xorg": [173, 177], "emerge_log_dir": 173, "unionf": 173, "fuse": [173, 175, 340, 944, 954], "persist": [173, 189, 406, 410, 418, 488, 898, 942], "held": [174, 316, 319, 387, 775, 795, 829, 842], "compani": [174, 177, 178, 179, 214, 224, 264, 290, 301, 316, 387, 476, 494, 495, 876, 1091, 1138], "z\u00fcrich": [174, 386], "hardcor": 174, "attitud": [174, 179, 298], "began": 174, "dive": [174, 291, 294, 1150], "inevit": [174, 387, 746], "came": [174, 241, 245, 247, 257, 260, 894, 900, 941, 1066, 1119, 1189], "heap": [174, 449, 501, 601, 604, 656, 736, 753, 798, 823], "128": [174, 177, 191, 205, 215, 222, 228, 231, 237, 241, 244, 247, 250, 252, 254, 257, 260, 264, 267, 270, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 465, 609, 941, 969, 1026, 1149], "dead": [174, 183, 466], "attempt": [174, 179, 202, 260, 388, 702, 704, 775, 1164], "reject": [174, 187], "proof": [174, 196, 454, 465, 469, 499, 583], "evid": 174, "fortun": [174, 179, 466, 478, 707, 1141], "overnight": [174, 239], "night": [174, 208], "instinct": 174, "defens": [174, 408, 409], "grow": [174, 630, 874, 1027], "growth": [174, 244, 1093], "handi": [174, 1200], "tricki": 174, "alloca": 174, "essenti": [174, 201, 250, 297, 299, 684], "stdio": [174, 233, 245, 391, 392, 394, 398, 400, 402, 433, 459, 479, 605, 611, 874, 894, 941, 959, 960, 961, 963, 964, 967, 968, 969, 970, 982, 995, 1001, 1004, 1008, 1009, 1011, 1014, 1023, 1027, 1029, 1085], "stdlib": [174, 449, 463, 941, 959, 960, 961, 992, 1001, 1008], "size_t": [174, 449, 462, 497, 577, 586, 589, 632, 637, 643, 647, 653, 674, 688, 700, 705, 716, 717, 718, 719, 720, 784, 785, 786, 788, 796, 823, 955, 963, 973, 1005, 1008], "stack_growth": 174, "argc": [174, 443, 501, 540, 941, 967, 968, 969, 970, 975, 978, 992, 1008, 1029, 1176, 1181], "mem": [174, 190, 586, 801], "fprintf": [174, 424, 437, 955, 995, 1029], "stderr": [174, 223, 232, 241, 247, 257, 260, 270, 278, 287, 288, 308, 309, 352, 353, 362, 369, 424, 437, 481, 790, 867, 878, 879, 933, 955, 963, 995, 1029, 1064, 1077, 1085, 1195], "atoi": [174, 971], "printf": [174, 183, 233, 245, 391, 392, 394, 400, 402, 406, 432, 433, 436, 437, 459, 479, 605, 611, 874, 894, 957, 961, 1001, 1008, 1009, 1011, 1023, 1027, 1029, 1074, 1080], "getpid": [174, 1008], "memset": [174, 960, 995, 1004, 1008], "24299": 174, "vsz": 174, "rss": 174, "3944": [174, 247], "986": [174, 244, 247, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346, 928], "188": [174, 205, 222, 231, 244, 247, 252, 254, 257, 260, 264, 267, 282, 285, 292, 302, 306, 312, 324, 328, 340, 346, 350], "320": [174, 247, 257, 260, 285, 292, 306, 312, 324, 340, 346, 350], "exact": [174, 224, 264, 366, 430, 741, 758, 810, 812, 1164], "glibc": [174, 817, 1023, 1025, 1026, 1184], "presum": 174, "assum": [153, 174, 260, 264, 306, 460, 607, 768, 815, 897, 941, 943, 954, 1026, 1096, 1171], "writabl": [174, 460, 882, 897, 969], "eater": [174, 999], "1k": 174, "furthermor": 174, "188k": 174, "anyth": [174, 178, 179, 204, 231, 247, 251, 274, 296, 297, 376, 476, 487, 491, 508, 543, 618, 687, 707, 784, 785, 786, 934, 946, 954, 958, 964, 993, 1027, 1032, 1033, 1034, 1077, 1085, 1141, 1158, 1162], "proce": [174, 182, 261, 294, 375, 553], "million": [174, 210, 494, 672, 837, 1037], "24908": 174, "4800": [174, 247], "1200": [174, 247, 647], "1044": [174, 247], "1376": [174, 247], "grown": [174, 177], "reflect": [174, 837, 996, 1026, 1027, 1054], "greedi": 174, "24960": 174, "8mb": 174, "barrier": [174, 452, 753, 768, 821], "against": [174, 183, 224, 232, 244, 245, 436, 478, 482, 486, 537, 553, 769, 810, 812, 817, 821, 829, 872, 969, 1014, 1019, 1029, 1043, 1102, 1169, 1194], "ulimit": [174, 874], "8192": [174, 247, 437, 874], "8000000": 174, "25018": 174, "11632": [174, 247], "2908": [174, 247], "7876": [174, 247], "8236": [174, 247], "demand": [174, 177, 194, 294, 460, 837, 888, 890, 1039, 1074], "magic": [174, 176, 340, 443, 478, 722, 796, 837, 1039, 1169], "bother": [174, 954, 958], "pthread_attr_setstacks": 174, "2mb": 174, "rlimit_stack": 174, "pthread_creat": [174, 980, 995], "nthread": 174, "act": [174, 231, 561, 631, 943, 954, 957, 1009, 1045], "shut": [174, 805, 837], "sit": [174, 250, 375, 506, 881, 941, 942, 952, 954, 958, 1008, 1152], "stack_limit": 174, "thread_func": 174, "arg": [174, 191, 205, 231, 232, 241, 245, 247, 257, 258, 260, 264, 270, 285, 306, 324, 479, 796, 980, 1032, 1036, 1057, 1064, 1087, 1178, 1184], "pthread_attr_t": [174, 980, 998], "attr": [174, 189, 980, 982, 984, 998, 1004, 1005], "pthread_attr_init": 174, "ld": [174, 340, 485, 489, 580, 598, 671, 815, 837, 864, 865, 882, 895, 919, 1001, 1011, 1012, 1023, 1028], "strerror": [174, 247, 955, 964, 995, 1008], "p_attr": 174, "pthread_t": [174, 980, 995, 998], "rv": [174, 220, 282, 340, 346], "31524": 174, "825840": 174, "206460": 174, "819936": 174, "1404": [174, 247], "800mb": 174, "writeabl": [174, 893, 916], "worth": [174, 837, 943, 1063, 1135, 1189, 1204], "eaten": 174, "field": [174, 177, 179, 191, 196, 202, 238, 245, 252, 260, 270, 273, 290, 292, 296, 306, 340, 361, 380, 393, 776, 778, 872, 877, 896, 930, 1081, 1093, 1114, 1143, 1144], "alleg": 174, "wast": [174, 182, 183, 462, 749, 766, 1149], "moment": [174, 208, 462, 494, 496, 690, 739], "771": [174, 247, 334], "766604": 174, "aha": [174, 194, 205, 354, 800, 817, 942, 1149, 1176], "hasn": [174, 177, 178, 187, 831, 854, 1065], "effect": [174, 178, 199, 370, 371, 406, 456, 466, 518, 665, 792, 821, 893, 898, 941, 953, 954, 996, 1010, 1035, 1047, 1068, 1115, 1143, 1163, 1171], "4096": [174, 191, 247, 788, 864, 865, 934, 941, 942, 943, 954, 977, 1004], "1026": [174, 247], "invalid": [174, 215, 222, 252, 257, 258, 260, 264, 267, 285, 292, 299, 306, 324, 328, 334, 340, 346, 365, 380, 463, 521, 532, 535, 589, 604, 687, 688, 689, 702, 705, 711, 752, 754, 768, 795, 984, 1087], "insist": [174, 204, 611, 1178], "pthread_stack_min": 174, "16384": [174, 179, 247, 941, 942, 943], "1125": 174, "7840": [174, 247], "1960": [174, 247], "1936": [174, 247], "risk": [174, 494, 934, 952, 997, 1062], "512": [174, 247, 292, 324, 340, 350, 467, 874], "513": [174, 247, 292, 340, 753], "2212": [174, 247], "4210920": 174, "1052730": 174, "4205016": 174, "4576": [174, 247], "misunderstand": [174, 762], "overcommit": 174, "complain": [174, 183, 187, 201, 416, 589, 604, 605, 812, 840, 950], "kept": [174, 179, 204, 210, 437, 452, 874, 935, 1011, 1039], "plai": [174, 182, 224, 454, 472, 837, 934, 1052, 1055, 1143], "stutter": 174, "4353": 174, "red": [174, 175, 220, 222, 228, 236, 248, 251, 264, 296, 362, 650, 934, 1061, 1152], "chili": 174, "pepper": 174, "overli": [174, 880, 1038], "adob": 174, "riddanc": 174, "8462": [174, 247], "3284640": 174, "821160": 174, "3278736": 174, "3064580": 174, "lie": [174, 744], "constraint": [174, 182, 711, 714, 716, 943], "800": [174, 215, 247, 647, 1096], "4000000": 174, "11338": [174, 247], "900": [174, 247, 647], "12156": [174, 247], "shrink": [174, 630], "inadvert": 174, "3mb": 174, "nois": 174, "henc": [174, 179, 553, 607, 651, 959, 963, 1011], "14386": [174, 247], "child_stack": 174, "0x7f5813f22ff0": 174, "clone_vm": 174, "clone_f": 174, "clone_fil": 174, "clone_sigha": 174, "14413": 174, "mmap": [174, 1003, 1005, 1203], "8392704": 174, "prot_read": [174, 1004], "prot_writ": [174, 1004], "map_priv": [174, 1004], "map_anonym": 174, "map_stack": 174, "0x7fd14f9af000": 174, "mprotect": 174, "0x7fd14f1ae000": 174, "prot_non": 174, "placehold": [174, 522, 554, 709, 758, 943], "proc": [174, 244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346, 800, 817, 819, 821, 837, 838, 963, 980, 1004, 1008, 1202], "7fd14f1af000": 174, "7fd14f9af000": 174, "00000000": 174, "7fd14f9b0000": 174, "topmost": [174, 1169], "pseudo": [174, 192], "redund": [174, 437, 466], "smap": 174, "7fd14f1ae000": 174, "pss": 174, "shared_clean": 174, "shared_dirti": 174, "private_clean": 174, "private_dirti": 174, "referenc": [174, 192, 215, 323, 326, 493, 611, 753, 754, 755, 971, 1178], "anonym": [174, 496, 810, 1004], "anonhugepag": 174, "kernelpages": 174, "mmupages": 174, "miss": [174, 193, 200, 202, 204, 220, 247, 252, 257, 264, 323, 326, 369, 426, 471, 472, 480, 482, 490, 552, 583, 604, 695, 731, 812, 815, 961, 995, 1013, 1036], "shallow": [174, 244, 256, 346, 697], "extent": [174, 204, 211, 224, 366, 457, 462, 837, 1011, 1059], "8k": [174, 881], "swamp": 174, "panic": [174, 187, 845, 897], "meaningless": 174, "global": [174, 175, 193, 199, 204, 208, 213, 217, 220, 233, 241, 244, 247, 250, 251, 257, 260, 263, 274, 277, 285, 297, 300, 302, 306, 311, 315, 322, 326, 327, 331, 332, 333, 338, 339, 344, 345, 346, 348, 349, 364, 369, 415, 432, 438, 444, 448, 451, 455, 459, 462, 464, 468, 469, 473, 474, 482, 483, 488, 501, 507, 516, 550, 551, 552, 553, 594, 601, 614, 696, 734, 737, 752, 753, 763, 787, 789, 790, 806, 943, 979, 982, 986, 987, 989, 1011, 1032, 1035, 1043, 1045, 1078, 1093, 1136, 1164, 1172, 1176], "dig": [174, 176], "thorough": [174, 183, 1058, 1143, 1162, 1204], "counter": [174, 257, 394, 400, 401, 410, 466, 471, 472, 596, 705, 1004], "delai": [174, 241, 247, 257, 260, 942], "substanti": 174, "overcom": [174, 323, 369, 456], "beforehand": 174, "mlock": [174, 1203], "mlockal": [174, 1203], "contradictori": 174, "lengthi": 174, "felt": 174, "lucki": [174, 604], "agre": [174, 204, 208, 375, 504, 996, 1142], "glad": 174, "outdat": [175, 183, 837, 1164], "halfwai": 175, "procedur": [175, 183, 402, 746, 934, 1093], "thunderbolt": 175, "hdmi": 175, "unplug": 175, "oop": [175, 1188], "feb": [175, 220, 222, 224, 366, 411, 919, 977, 1023], "derefer": [175, 609], "0000000000000080": 175, "supervisor": 175, "error_cod": 175, "0x0000": 175, "pgd": 175, "p4d": 175, "0000": [175, 260, 306, 943], "smp": [175, 224, 231, 366], "pti": 175, "281": [175, 244, 247, 252, 254, 257, 260, 264, 267, 285, 292, 306, 312, 324, 334, 340, 346], "comm": 175, "kworker": 175, "taint": 175, "fc31": 175, "asustek": 175, "zenbook": 175, "ux391ua": 175, "bio": 175, "204": [175, 205, 231, 244, 247, 252, 254, 257, 260, 264, 267, 270, 282, 285, 292, 306, 312, 324, 328, 334, 340, 346, 350, 501], "workqueu": [175, 790, 814, 839, 852, 855, 933], "ucsi_connector_chang": 175, "typec_ucsi": 175, "0010": 175, "ucsi_displayport_remove_partn": 175, "0xa": 175, "0x20": [175, 827], "c7": [175, 182, 1164], "83": [175, 182, 191, 205, 215, 220, 222, 228, 231, 237, 241, 244, 247, 252, 254, 257, 260, 264, 267, 270, 273, 282, 285, 289, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 364, 788, 838, 1140, 1141], "5b": [175, 182], "e9": [175, 182], "6d": [175, 182, 393, 394], "f3": [175, 182], "3d": [175, 182, 193], "fb": [175, 182], "2e": [175, 182, 698], "0f": [175, 182], "1f": [175, 182], "84": [175, 182, 191, 205, 215, 220, 222, 228, 231, 237, 241, 244, 247, 252, 254, 257, 260, 264, 267, 270, 273, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 364, 369, 374, 1140, 1141], "85": [175, 182, 191, 205, 215, 220, 222, 228, 231, 237, 244, 247, 252, 254, 260, 264, 267, 270, 273, 282, 285, 289, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 364, 1012, 1013, 1140, 1141, 1176], "ff": [175, 182, 387, 777, 943], "8b": 175, "78": [175, 182, 205, 215, 220, 222, 228, 231, 237, 244, 247, 252, 254, 260, 264, 267, 273, 282, 285, 289, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 364, 550, 1140, 1141], "c6": 175, "rsp": [175, 244, 1093], "0018": 175, "ffff9daa002d3df8": 175, "eflag": 175, "00010202": 175, "rax": 175, "0000000000000008": 175, "rbx": 175, "ffff901f4ce35710": 175, "rcx": 175, "0000000000003c7d": 175, "rdx": 175, "0000000000003c7c": 175, "rsi": [175, 897], "0000000000000001": 175, "rdi": 175, "rbp": 175, "0000000000000000": [175, 1029], "r08": 175, "ffffffffbc7dbe60": 175, "r09": 175, "ffff9daa002d3cf0": 175, "r10": 175, "ffff901f54951a18": 175, "r11": 175, "ffff901f56a68a78": 175, "r12": 175, "r13": 175, "r14": 175, "ffff901f4ce35860": 175, "r15": 175, "ffff901f4ce355d8": 175, "ffff901f56a00000": 175, "knlg": 175, "cr0": 175, "0000000080050033": 175, "cr2": 175, "cr3": 175, "000000028fbbc003": 175, "cr4": 175, "00000000003606f0": 175, "trace": [175, 194, 241, 247, 257, 260, 481, 827], "ucsi_unregister_altmod": 175, "0x77": 175, "0x90": [175, 827], "ucsi_unregister_partn": 175, "0x13": 175, "0x30": [175, 418], "0x247": 175, "0x340": 175, "process_one_work": 175, "0x1b5": 175, "0x360": 175, "worker_thread": 175, "0x50": 175, "0x3c0": 175, "kthread": 175, "0xf9": 175, "0x130": 175, "kthread_park": 175, "ret_from_fork": 175, "0x35": 175, "0x40": [175, 942], "cdc_ether": 175, "usbnet": 175, "r8152": 175, "mii": 175, "rc_cec": 175, "typec_displayport": 175, "uinput": 175, "rfcomm": 175, "ccm": 175, "xt_checksum": 175, "xt_masquerad": 175, "nf_nat_tftp": 175, "nf_conntrack_tftp": 175, "tun": [175, 180, 195, 199, 215, 222, 261, 1186, 1187, 1188], "bridg": 175, "stp": 175, "llc": 175, "nf_conntrack_netbios_n": 175, "nf_conntrack_broadcast": 175, "xt_ct": 175, "ip6t_reject": 175, "nf_reject_ipv6": 175, "ip6t_rpfilt": 175, "ipt_reject": 175, "nf_reject_ipv4": 175, "xt_conntrack": 175, "ebtable_nat": 175, "ebtable_brout": 175, "ip6table_nat": 175, "ip6table_mangl": 175, "ip6table_raw": 175, "ip6table_secur": 175, "iptable_nat": 175, "nf_nat": 175, "iptable_mangl": 175, "iptable_raw": 175, "iptable_secur": 175, "nf_conntrack": 175, "nf_defrag_ipv6": 175, "nf_defrag_ipv4": 175, "libcrc32c": 175, "ip_set": 175, "nfnetlink": 175, "ebtable_filt": 175, "ebtabl": 175, "ip6table_filt": 175, "ip6_tabl": 175, "iptable_filt": 175, "cmac": 175, "bnep": 175, "sunrpc": 175, "vfat": [175, 837, 868], "snd_hda_codec_hdmi": 175, "snd_soc_skl": 175, "snd_soc_sst_ipc": 175, "snd_soc_sst_dsp": 175, "snd_hda_ext_cor": 175, "x86_pkg_temp_therm": 175, "intel_powerclamp": 175, "snd_soc_acpi_intel_match": 175, "coretemp": 175, "snd_soc_acpi": 175, "kvm_intel": 175, "snd_soc_cor": 175, "snd_hda_codec_realtek": 175, "snd_hda_codec_gener": 175, "snd_compress": 175, "ledtrig_audio": 175, "ac97_bu": 175, "snd_pcm_dmaengin": 175, "iwlmvm": 175, "snd_hda_intel": 175, "snd_intel_dspcfg": 175, "irqbypass": 175, "snd_hda_codec": 175, "uvcvideo": 175, "mac80211": 175, "btusb": 175, "itco_wdt": 175, "btrtl": 175, "crct10dif_pclmul": 175, "videobuf2_vmalloc": 175, "itco_vendor_support": 175, "videobuf2_memop": 175, "mei_hdcp": 175, "btbcm": 175, "btintel": 175, "crc32_pclmul": 175, "intel_rapl_msr": 175, "snd_hda_cor": 175, "videobuf2_v4l2": 175, "libarc4": 175, "ghash_clmulni_intel": 175, "videobuf2_common": 175, "snd_hwdep": 175, "intel_cst": 175, "bluetooth": [175, 340, 1193, 1206], "snd_seq": 175, "asus_nb_wmi": 175, "iwlwifi": 175, "videodev": 175, "snd_seq_devic": 175, "intel_uncor": 175, "asus_wmi": 175, "snd_pcm": 175, "intel_rapl_perf": 175, "cdc_acm": 175, "sparse_keymap": 175, "wmi_bmof": 175, "ecdh_gener": 175, "cfg80211": 175, "intel_wmi_thunderbolt": 175, "pcspkr": 175, "snd_timer": 175, "snd": 175, "i2c_i801": 175, "soundcor": 175, "joydev": 175, "idma64": 175, "intel_xhci_usb_role_switch": 175, "mei_m": 175, "ucsi_acpi": 175, "processor_thermal_devic": 175, "intel_rapl_common": 175, "mei": [175, 247], "intel_soc_dts_iosf": 175, "intel_pch_therm": 175, "typec": 175, "int3403_therm": 175, "int340x_thermal_zon": 175, "int3400_therm": 175, "acpi_thermal_rel": 175, "acpi_pad": 175, "binfmt_misc": 175, "ip_tabl": 175, "rfkill": 175, "i915": 175, "i2c_algo_bit": 175, "drm_kms_helper": 175, "hid_multitouch": 175, "drm": 175, "nvme": 175, "crc32c_intel": 175, "nvme_cor": 175, "serio_raw": 175, "wmi": 175, "i2c_hid": 175, "76d248e576fee192": 175, "deferenc": 175, "dp": 175, "ness": [175, 211, 296], "ucsi": 175, "displayport": 175, "linu": [175, 829, 837], "typec_altmod": 175, "alt": [175, 205, 897, 925, 1186, 1193, 1200], "ucsi_dp": 175, "typec_altmode_get_drvdata": 175, "271": [175, 244, 247, 252, 254, 260, 285, 292, 306, 312, 334, 340, 346, 350], "bugzilla": 175, "1785972": 175, "john": [175, 466], "stebbin": 175, "roundtrip": 175, "wiki": [175, 189, 300, 301, 322, 326, 810, 837], "explod": [175, 350, 812, 1074], "jwboyer": [175, 810], "f31": 175, "quiet": [175, 208, 1164], "4382f76bc8ef9fce5e7e96d4cdb0c073564ad249": 175, "tag": [175, 177, 180, 181, 205, 221, 223, 265, 481, 489, 810, 1025, 1028, 1201], "josh": 175, "boyer": 175, "mon": 175, "rpmdevtool": [175, 810], "koji": 175, "rpmdev": 175, "setuptre": 175, "spec": [175, 260, 810, 833], "srpm": 175, "unam": [175, 810, 815, 833, 837, 838], "correspond": [175, 187, 260, 391, 434, 942, 1019, 1027, 1066, 1103, 1138, 1164], "kenrel": 175, "ivh": [175, 177], "crypto": [175, 340], "ccp": 175, "sha": 175, "drop": [175, 187, 323, 497, 516, 525, 746, 753, 755, 856, 1004, 1009], "zips": 175, "ko": [175, 806, 815, 837], "endif": [175, 434, 436, 437, 479, 481, 486, 487, 580, 589, 598, 604, 606, 607, 647, 705, 706, 752, 768, 1011, 1027, 1029, 1178], "buildid": [175, 810, 1012], "primary_target": 175, "825": [175, 247], "asoc": 175, "patch601": 175, "patch999": 175, "roedel": [175, 551, 554, 1013, 1026, 1123, 1171], "patienc": [175, 204, 1059], "oldpackag": 175, "uefi": [175, 182], "market": [176, 179, 244, 288, 296, 1093], "unprofession": 176, "intent": [176, 178, 182, 183, 499, 754, 758, 810, 967, 969, 970], "remark": 176, "organ": [176, 201, 432, 467, 478, 506, 647, 873, 959, 1026], "numer": [176, 193, 209, 211, 213, 247, 257, 260, 264, 296, 306, 346, 481, 653, 954], "enforc": [176, 234, 454, 476, 611, 796, 943], "cname": [176, 178], "propag": [176, 408, 466, 482, 487, 490, 491, 672, 722, 944], "1100": [176, 241, 247, 264, 647], "3600": [176, 247], "185": [176, 205, 222, 244, 247, 252, 254, 260, 264, 267, 270, 273, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350], "199": [176, 205, 222, 244, 247, 252, 254, 257, 260, 264, 267, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 837, 1093], "109": [176, 191, 205, 215, 220, 222, 228, 241, 244, 247, 252, 254, 260, 264, 267, 270, 282, 285, 289, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 364, 369, 374], "153": [176, 191, 205, 215, 222, 231, 244, 247, 252, 254, 260, 264, 267, 270, 273, 282, 285, 302, 306, 312, 324, 328, 334, 340, 346, 350, 376], "111": [176, 191, 193, 205, 215, 222, 228, 244, 247, 252, 254, 257, 260, 264, 267, 270, 282, 285, 289, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 364], "108": [176, 191, 205, 215, 222, 228, 231, 237, 244, 247, 252, 254, 257, 260, 264, 267, 270, 282, 285, 289, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 364], "strip": [176, 195, 204, 238, 240, 241, 244, 252, 256, 257, 262, 264, 270, 273, 285, 292, 302, 306, 312, 328, 334, 340, 346, 350, 369, 378, 775, 1011, 1012, 1014, 1023, 1042, 1116, 1161], "breviti": 176, "fqdn": 176, "qualifi": [176, 460, 606, 607, 744], "surf": 176, "consequenti": [176, 179, 182, 210, 868, 941, 1031, 1052, 1178], "microsoft team": 177, "chrome": 177, "google chrom": 177, "confer": [177, 179, 208, 232, 255, 281, 327, 775, 1088], "virtual classroom": 177, "classroom": [177, 179], "remote train": 177, "dr": [177, 1026], "chromium": [177, 212, 340], "frequent": [177, 179, 187, 204, 264, 922, 942, 1059, 1080], "face": [177, 179, 204, 254, 264, 760], "travel": [177, 897], "corona": [177, 179, 204], "viru": [177, 179], "conferenc": 177, "dramat": 177, "march": 177, "spent": [177, 465, 769, 1033, 1142], "weston": 177, "invest": [177, 179, 183, 264], "smooth": 177, "layer": [177, 277, 279, 297, 796, 868, 942, 954, 964, 973], "cornercas": 177, "hover": 177, "sharer": 177, "gdm": [177, 244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346, 872, 928], "daemon": [177, 224, 244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346, 472, 872, 875, 922, 923, 926, 928, 944, 952, 957, 959, 989, 1045], "uncom": [177, 521, 522, 716, 941], "waylanden": 177, "defaultsess": 177, "deb": [177, 309], "5153": 177, "thank": [153, 177, 258, 285, 708, 744, 819, 979, 1141], "marjan": 177, "javorka": 177, "fashion": 177, "efl": [177, 856, 944, 995], "61762": 177, "1670": [177, 247], "947213": 177, "61764": 177, "98775": 177, "zygot": 177, "sandbox": [177, 204, 208, 258, 272, 290, 1136, 1171, 1172], "61800": 177, "239615": 177, "gpu": 177, "sharedarraybuff": 177, "sparerendererforsiteperprocess": 177, "prefer": [177, 254, 264, 410, 466, 508, 612, 699, 707, 711, 829, 881, 1087], "kaaaaaaaaacaaabaaqaaaaaaaaaaagaaaaaaaaaaaaaiaaaaaaaaaagaaaaaaaaa": 177, "token": [177, 234, 250, 396, 436, 872, 985, 1091, 1186], "4327801531638606376": 177, "61825": 177, "420846": 177, "autoplai": 177, "gestur": 177, "12993561460135093079": 177, "asar": 177, "agent": [177, 950, 1143], "mozilla": [177, 302, 919], "applewebkit": 177, "537": [177, 247, 334, 340, 350], "khtml": 177, "gecko": 177, "microsoftteam": 177, "preview": [177, 262, 315, 331, 483, 790], "3497": 177, "safari": 177, "webview": 177, "preload": 177, "preload_notif": 177, "fff": 177, "eyjjci5jb21wyw55ijoirwxly3ryb24ilcjjci5kdw1wcyi6iiisimnylmvuywjszwqiomzhbhnllcjjci5wcm9kdwn0ijoirwxly3ryb24ilcjjci5zzxnzaw9uijoiiiwiy3iudxjsijoiiiwiy3iudmvyc2lvbii6iny0ljiumtiifq": 177, "raster": 177, "v8_context_snapshot_data": 177, "v8_natives_data": 177, "101": [177, 191, 205, 215, 222, 228, 237, 244, 247, 252, 254, 257, 260, 264, 267, 273, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 364, 369, 374, 1070, 1140, 1141], "msteam": 177, "notificationsmanag": 177, "61973": 177, "790018": 177, "432557619363765409": 177, "mainwindow": 177, "62033": 177, "1259666": 177, "5585537623314398260": 177, "pluginhost": 177, "wish": [177, 179, 187, 208, 470, 479, 618, 685, 766, 1058, 1154, 1155, 1171], "insan": [177, 316, 868], "killal": [177, 999, 1009], "63500": 177, "298385": 177, "63502": 177, "blood": 177, "pressur": [177, 241], "rise": [177, 544, 819, 977, 978, 995], "wipe": 177, "logout": 177, "pop": [177, 190, 252, 254, 267, 282, 292, 302, 312, 324, 340, 346, 350, 437, 628, 631, 766, 1057, 1082], "morn": [177, 213, 223, 241, 250, 252, 258, 327, 1098], "webassembli": 177, "blow": 177, "water": [177, 296], "tab": [177, 178, 191, 260, 288, 306, 360, 411, 837, 897, 1079, 1105, 1195], "firefox": [177, 340, 472, 980, 1009, 1148], "dom": [177, 236], "gave": [177, 179, 192, 204, 939, 1141], "3987": 177, "132": [177, 191, 193, 205, 215, 222, 231, 244, 247, 252, 254, 257, 260, 264, 267, 270, 282, 285, 302, 306, 312, 324, 328, 334, 340, 346, 350], "plagu": 177, "invent": [177, 404, 436, 496, 518, 519, 1191, 1192], "game": [177, 244, 260, 267, 270, 285, 292, 302, 306, 323, 328, 334, 340, 346, 893, 957, 1073], "pornwatch": 177, "teamview": 177, "webpag": 178, "properli": [178, 690, 768, 837, 1023], "retrospect": 178, "jekyl": 178, "bend": [178, 548], "companion": [178, 296], "pollut": [178, 437, 460, 466, 499, 695, 1013], "distinguish": [178, 605, 758, 869, 1023], "handwritten": [178, 276, 277, 279, 336, 337, 604, 704, 734, 735, 736, 752, 789, 790], "remind": 178, "pile": [178, 187, 506, 1009], "incomprehens": [178, 258, 668, 775, 1189], "blame": [178, 943], "technic": [178, 179, 201, 337, 491, 495, 595, 650, 694, 1039, 1149, 1181], "nojekyl": 178, "eof": [178, 228, 231, 250, 251, 267, 361, 398, 399, 400, 401, 414, 678, 839, 853, 959, 960, 963, 969, 1001, 1008, 1061], "doctyp": 178, "constel": 178, "machineri": [178, 300, 301, 322, 326], "eventu": [178, 187, 469, 977, 1026], "click": [178, 179], "cri": [178, 757], "haven": [178, 179, 204, 572, 934, 941], "subdomain": 178, "afterthough": 178, "preserv": [178, 189, 210, 267, 454, 864, 865, 899, 953, 1161], "_build": 178, "restor": [178, 187, 194, 241, 247, 257, 260, 810, 1009, 1032], "shini": 178, "nervous": 178, "marketinges": [178, 288], "familiar": [178, 204, 260, 371, 372, 761, 942, 1059], "big blue button": 179, "strongli": [179, 241, 247, 257, 260, 291, 294, 337, 552, 650, 696, 734, 787, 789, 790, 1189], "shame": 179, "pursu": 179, "collabor": [179, 189, 196, 201, 208, 281], "moreov": 179, "teach": [179, 204, 387], "trust": [179, 182, 244, 300, 301, 322, 340, 350, 702, 950, 952, 1093, 1164, 1181], "benefit": [179, 291, 294, 297, 299, 460, 1131], "beat": [179, 254, 264, 775, 1135], "talent": [179, 387], "whiteboard": [179, 1004], "chat": 179, "breakout": [179, 941], "stabil": [179, 501, 943, 1165], "thousand": [179, 285, 334, 868], "curiou": [179, 1136], "curious": 179, "licens": [179, 285, 488, 793, 1061, 1091], "lgpl": 179, "blindsid": 179, "govern": [179, 823, 963], "html5": 179, "exception": [179, 943], "modern": [179, 183, 185, 188, 196, 199, 204, 211, 233, 255, 482, 756, 775, 790, 797, 799, 804, 807, 814, 818, 828, 839, 841, 846, 852, 855, 858, 933, 1011, 1030, 1060, 1136, 1162, 1190, 1192], "heavili": [179, 201, 204, 288, 290, 387, 552, 747, 837, 934, 943, 1059], "webrtc": 179, "pain": [179, 837, 1014, 1023], "death": [179, 231, 1009], "firewal": [179, 212, 952], "busi": [179, 323, 476, 486, 611, 842, 854, 866, 901, 903, 908, 909], "couldn": [179, 183, 208, 211, 350, 1073], "indefinit": [179, 684], "vm": [179, 372], "encrypt": [179, 872, 893, 944, 952, 953, 954, 1114, 1152], "bbb": [179, 191, 252, 270, 340], "provis": 179, "gcp": 179, "expertis": [179, 553], "n1": [179, 205, 264], "accordingli": [179, 212, 540, 550, 553, 583, 941, 943, 1028, 1063, 1066, 1161], "500gb": 179, "10gb": 179, "spars": [179, 254, 264, 614, 616, 833], "mandatori": [179, 943, 1060], "issuanc": 179, "udp": [179, 935, 937, 1204, 1206], "32768": 179, "clickabl": 179, "7443": 179, "755": [179, 247, 369, 882, 1062], "xenial": 179, "220": [179, 205, 220, 231, 241, 244, 247, 252, 254, 260, 264, 267, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350], "hostnam": [179, 340, 1164], "certbot": 179, "greenlight": 179, "letsencrypt": 179, "docker": [179, 183, 340], "bundl": [179, 202, 1148, 1164], "rake": 179, "succesfulli": 179, "screenshot": [179, 202, 369], "tryout": [179, 943], "kid": [179, 224, 242, 355], "layman": 179, "knew": [179, 208, 709, 1028], "reproduc": [179, 182, 298, 463, 943], "thought": [179, 437, 749, 837, 1149], "cite": [179, 193, 204, 326], "fred": [179, 935, 1035], "dixon": 179, "leader": 179, "aka": [179, 224, 247, 250, 252, 272, 572, 756], "canva": 179, "bradlei": 179, "schreffler": 179, "upfront": 179, "far": [179, 204, 212, 233, 239, 247, 250, 290, 406, 421, 442, 443, 445, 456, 460, 465, 490, 619, 629, 694, 757, 815, 879, 943, 1037, 1059, 1141, 1189], "exhaust": [179, 993, 996, 1039], "heard": 179, "tast": [179, 396, 612, 668, 694, 737, 757], "era": 179, "budget": [179, 228], "advertis": [179, 747], "viabl": 179, "shout": [179, 736, 739], "loud": [179, 415, 630, 698, 736, 742, 743], "gmunden": [180, 387], "traunse": 180, "hike": [180, 181, 208], "bergsteigen": [180, 181], "climb": [180, 181, 208, 239], "klettern": [180, 181], "outdoor": [180, 181], "donnerstag": 180, "geistigen": 180, "ersch\u00f6pfung": 180, "k\u00f6rperlich": 180, "erfahren": [180, 181, 387, 1187], "dazu": [180, 189, 190, 195, 199, 216, 369, 374, 387, 1185, 1199, 1207], "ausgesucht": [180, 181], "zwar": [180, 1184, 1188, 1200], "lo": [180, 181, 222, 260, 296, 548, 817, 1047], "gmundner": [180, 208], "h\u00fctte": [180, 181, 208], "n\u00e4chsten": 180, "naturfreundesteig": 180, "zusammenfassung": [180, 186], "wunsch": 180, "vollend": 180, "erf\u00fcllt": 180, "unversichert": 180, "unmarkiert": 180, "leicht": [180, 216, 1184, 1199, 1205, 1206], "panik": 180, "geraten": 180, "h\u00e4nde": [180, 181], "braucht": [180, 181], "fingern\u00e4gel": 180, "z\u00e4hne": 180, "mitunt": [180, 181, 1196], "verkoffert": 180, "augen": [180, 267], "offenhalten": 180, "spur": 180, "folgen": [180, 216, 217, 1186, 1199], "fr\u00fcher": [180, 261], "umdrehen": 180, "sackgass": 180, "erweist": 180, "vielleicht": [180, 205, 216, 267, 1188, 1199], "weggehen": 180, "stirnlamp": 180, "mitnehmen": 180, "war": [180, 190, 195, 197, 205, 216, 220, 387, 476, 1184, 1186, 1188, 1199, 1205, 1206], "sch\u00f6nsten": 180, "jemal": 180, "zuletzt": 180, "traumhaften": 180, "gegend": 180, "griffweit": 180, "erscheint": 180, "paar": [180, 190, 205, 207, 215, 222, 254, 369, 374, 1184, 1207], "eindr\u00fcck": 180, "m\u00fcder": 180, "abklatsch": 180, "erinnerungen": 180, "hirn": 180, "eingebrannt": 180, "einstieg": [180, 216, 1199], "traunsteinstra\u00df": 180, "hundert": [180, 191, 264], "meter": 180, "s\u00fcdlich": 180, "hoisn": [180, 208], "wirt": [180, 208], "markiert": [180, 181], "wanderweg": [180, 181], "wegweisern": [180, 181], "bergauf": [180, 181], "kupp": 180, "klamm": 180, "einsteigt": 180, "bergab": 180, "touristisch": 180, "erschlossen": 180, "trifft": 180, "familien": 180, "kindern": [180, 1200], "rechter": 180, "felsstock": 180, "adlerhorst": 180, "sieht": [180, 191, 195, 205], "rau": [180, 254], "touristenzon": 180, "rauf": 180, "schart": 180, "durchschnaufen": 180, "einstellen": 180, "gen\u00fcsslich": 180, "h\u00f6henmet": 180, "verspeisen": 180, "steinmanderl": 180, "verfehlen": 180, "erkennbar": [180, 191, 1202], "kamm": 180, "r\u00fcber": 180, "traunsteinfelsen": 180, "erstreckt": [180, 181], "sch\u00f6nste": 180, "meditativ": 180, "wundersch\u00f6n": [180, 181], "steil": 180, "voll": 180, "zecken": 180, "schon": [180, 181, 190, 205, 207, 215, 245, 387, 1186, 1188, 1193, 1200, 1202, 1205], "bl\u00fcht": 180, "rinnen": 180, "leichtest": [180, 191], "dahin": [180, 1184], "wieder": [180, 205, 207, 215, 220, 222, 236, 1186, 1200], "vertun": 180, "manderl": 180, "aufstellen": 180, "nachwelt": 180, "nemesi": 180, "bergverr\u00fcckten": 180, "gleich": [180, 191, 205, 215, 216, 220, 222, 254, 302, 334, 340, 350, 364, 1184, 1199, 1206], "schl\u00fcsselstel": 180, "quert": 180, "latschen": 180, "\u00f6fter": [180, 181], "festhalten": 180, "gel\u00e4nd": 180, "einsam": 180, "bohrhaken": 180, "verrotteten": 180, "schuhband": 180, "festh\u00e4lt": 180, "runterfallen": 180, "glaub": [180, 189, 190], "stell": [180, 205, 236], "umgehen": [180, 1193], "querung": 180, "hierher": 180, "st\u00fcck": 180, "reinzum\u00fcnden": 180, "scheint": [180, 189], "gibt": [180, 181, 186, 189, 191, 192, 195, 205, 216, 217, 228, 254, 364, 1183, 1184, 1185, 1186, 1188, 1193, 1199, 1205], "foto": [180, 899], "mittendrin": 180, "besch\u00e4ftigt": 180, "hose": 180, "kacken": 180, "gesagt": [180, 195, 205, 215, 387, 1184], "manderln": 180, "aufnahmen": 180, "zunehmenden": 180, "sonnenuntergang": 180, "unvergesslich": 180, "nacht": [180, 181], "geworden": 180, "halten": [180, 181], "hinauf": 180, "stund": [180, 924, 1207], "gekostet": 180, "exklus": [180, 205, 215], "schneck": 180, "j\u00e4gerbrot": 180, "schein": 180, "ausstieg": 180, "hernlersteig": 180, "m\u00fcndet": 180, "gmundnerh\u00fctt": 180, "gem\u00fctlich": [180, 181], "nett": [180, 181, 195, 306, 387, 1193, 1200], "wirtsleut": 180, "h\u00fcttenruh": 180, "ansitzen": 180, "schweinsbraten": 180, "reinkommt": 180, "k\u00fcche": 180, "geputzt": 180, "backerbsen": 180, "morgen": [180, 260, 264], "hochnebel": 180, "blick": [180, 181, 1185], "flugzeug": 180, "gipfel": [180, 181], "dolin": 180, "nebel": 180, "dabei": [180, 191, 195, 231, 350, 387, 1183], "verziehen": 180, "r\u00fcckweg": 180, "hoisnwirt": 180, "miesweg": 180, "karibik": 180, "steiner alpen": 181, "kamni\u0161ke alp": 181, "kamni\u0161ko savinjskih alp": 181, "alten": [181, 1188], "tradit": [181, 244, 247, 462, 477, 613, 615, 616, 618, 638, 879, 943, 1082, 1114, 1203], "bleiburg": [181, 239], "k\u00e4rnten": [181, 387], "umliegenden": 181, "bergen": 181, "interessantesten": 181, "2558m": [181, 239], "steiner": 181, "alpen": 181, "davor": [181, 223], "gekannt": 181, "nun": [181, 199, 205, 228, 235, 260, 655], "gesehen": [181, 205, 211, 245], "steht": [181, 205, 215, 216, 1196, 1199], "n\u00e4chste": [181, 199], "jahr": [181, 205], "\u00fcberschreitung": 181, "soweit": [181, 1193, 1200], "h\u00f6chst": 181, "interessant": [181, 1185], "steinhaufen": 181, "unge\u00fcbt": 181, "verloren": [181, 220, 223], "h\u00f6henangst": 181, "schauen": [181, 216, 1199], "helm": 181, "schaden": 181, "schottersurf": 181, "kommen": [181, 186, 254, 369, 374, 387, 925], "ihr": [181, 186, 190, 195, 205, 350, 859, 1183, 1185, 1187, 1188, 1193, 1200, 1206], "artikel": [181, 189], "rein": [181, 191, 216, 1199, 1200], "ins": [181, 190, 387, 763, 1184, 1200], "eisenkappel": 181, "seebergsattel": 181, "openstreetmap": 181, "klein": [181, 190, 191, 195, 1184, 1186, 1187], "dorf": 181, "uhren": 181, "stehengeblieben": 181, "scheinen": 181, "parkplatz": 181, "geparkt": 181, "wissend": 181, "hinten": 181, "tal": 181, "beginnt": [181, 215, 1207], "ahnen": 181, "stetig": 181, "verzagen": 181, "eingang": [181, 1184], "kar": 181, "pl\u00f6tzlich": 181, "freundlich": 181, "vorhanden": [181, 1193, 1200], "fr\u00fchst\u00fcck": 181, "lager": [181, 296], "respektvol": 181, "erklimmenden": 181, "zieht": 181, "haltend": 181, "wand": 181, "wiederum": [181, 205], "mittlerweil": [181, 1184, 1201], "akzeptiert": 181, "deswegen": [181, 215, 220, 1186], "schliesslich": [181, 1184], "stehend": 181, "denn": [181, 205, 215, 1205, 1207], "hinaufkomm": 181, "passiert": [181, 205, 222], "anf\u00e4ngern": 181, "geschehen": [181, 340], "jung": [181, 387], "izola": 181, "slowenien": 181, "stellten": 181, "ankam": 181, "ob": [181, 189, 215, 1188, 1207], "beantwortet": 181, "adoptivs\u00f6hn": 181, "gewonnen": 181, "nachbarberg": 181, "ko\u010dna": 181, "sichtlich": 181, "spa\u00df": [181, 261, 1202], "abstieg": 181, "erweitert": 181, "rund": 181, "fertig": [181, 215, 232, 260, 340, 715, 722], "empfehl": [181, 1184], "runterzugehen": 181, "raufgekommen": 181, "ostseitigen": 181, "westseitig": 181, "sch\u00f6ner": [181, 205], "langen": 181, "grat": 181, "felst\u00fcrm": 181, "daf\u00fcr": [181, 199, 205, 215, 216, 1184], "anstrengend": 181, "200m": 181, "pulverhangerl": 181, "zur\u00fcck": [181, 205, 217, 1193, 1200], "wohlverdient": 181, "la\u0161ko": 181, "geschmack": 181, "schroff": 181, "selektiv": 181, "jedermann": 181, "kett": 181, "2000m": 181, "umschlossen": 181, "gletschergeformten": 181, "karen": 181, "steilen": 181, "w\u00e4nden": 181, "ost": 181, "richtung": [181, 1195], "schlafm\u00f6glichkeiten": 181, "biwak": 181, "einladung": 181, "\u00fcberquerung": 181, "dringend": 181, "f\u00e4llig": [181, 387], "fu\u00dfnoten": [181, 1183], "belieben": 181, "gummi": 181, "reifen": 181, "fahren": 181, "mehrplatzlag": 181, "reserviert": 181, "h\u00fcttenschl\u00e4fer": 181, "ohrenst\u00f6psel": 181, "f\u00e4lle": 181, "eingetreten": 181, "fassen": [181, 260], "typ": [181, 217, 228, 238, 925, 1148], "geschnarcht": 181, "geschrien": 181, "modules sign": 182, "secure boot": 182, "shim": 182, "dell xps 13": 182, "unresolv": [182, 812, 815, 1011], "upset": [182, 747], "tendenc": 182, "vendor": [182, 183, 492, 494, 553, 833, 837, 941, 971], "efi": [182, 340], "implementor": [182, 276, 277, 279, 336, 337, 696, 734, 743, 789, 790, 796, 1169, 1189], "shine": 182, "stuck": [153, 182], "cryptographi": 182, "third": [182, 219, 231, 260, 306, 482, 610, 612, 723, 724, 815, 817, 882, 924, 967], "parti": [182, 187, 500, 612, 808, 815, 963, 1004, 1152], "signatur": [182, 228, 260, 264, 285, 306, 598, 694, 741, 757, 758, 1005], "openssl": [182, 893], "req": 182, "x509": 182, "newkei": 182, "rsa": [182, 950], "keyout": 182, "xps13": 182, "priv": [182, 831], "outform": 182, "36500": [182, 553], "subj": 182, "passphras": [182, 212, 950], "expiri": 182, "0x2": 182, "97": [182, 191, 205, 215, 220, 222, 228, 231, 244, 247, 252, 254, 257, 260, 264, 267, 273, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 364, 369, 374, 470, 1140], "e5": 182, "ef": 182, "88": [182, 191, 205, 215, 220, 222, 228, 231, 233, 237, 244, 247, 252, 254, 257, 260, 264, 267, 270, 273, 282, 285, 289, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 364, 369, 374, 472, 1079, 1140, 1141, 1176], "3a": 182, "b3": 182, "9c": 182, "1b": 182, "a4": 182, "d7": 182, "sha256withrsaencrypt": 182, "issuer": [182, 496], "sep": [182, 183, 211, 231, 244, 247, 252, 260, 264, 267, 285, 306, 324, 340, 351, 478, 675, 919, 941, 943, 954, 1011], "gmt": 182, "aug": [182, 247, 934, 942], "2121": 182, "subject": [182, 479, 798, 835, 1169], "rsaencrypt": 182, "modulu": [182, 241, 247, 257, 260], "b5": 182, "2d": [182, 234, 612, 1080], "5c": 182, "6f": [182, 340, 999], "b0": 182, "95": [182, 191, 205, 215, 220, 222, 228, 231, 237, 241, 244, 247, 252, 254, 257, 260, 264, 267, 270, 273, 282, 285, 289, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 364, 1140, 1141], "f6": 182, "9e": 182, "9d": 182, "0d": 182, "bc": [182, 817, 941], "f5": 182, "6e": 182, "fe": [182, 478], "94": [182, 191, 215, 220, 222, 228, 231, 237, 244, 247, 252, 254, 260, 264, 267, 270, 273, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 364, 521, 522, 1140], "2b": [182, 943], "e6": 182, "b2": 182, "a0": [182, 942], "f8": 182, "7d": 182, "1c": 182, "2c": 182, "9f": 182, "4d": [182, 1080], "86": [182, 191, 205, 215, 220, 222, 228, 231, 237, 244, 247, 252, 254, 260, 264, 267, 270, 273, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 364, 1140, 1141], "e3": [182, 515], "dd": [182, 868, 897, 1184], "7b": 182, "3f": 182, "aa": 182, "b8": 182, "a5": [182, 942], "d5": 182, "0b": 182, "d1": [182, 254, 317, 340, 669], "e8": 182, "dc": [182, 496], "c5": 182, "d2": [182, 254, 317, 346, 669], "c2": [182, 499, 613, 698], "0a": [182, 398], "a1": [182, 244, 289, 1093], "e1": [182, 232, 245, 515, 695], "89": [182, 191, 205, 215, 220, 222, 228, 231, 237, 241, 244, 247, 252, 254, 257, 260, 264, 267, 270, 273, 282, 285, 289, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 364, 470, 941, 942, 943, 1013, 1140, 1141], "4c": 182, "4a": 182, "77": [182, 205, 213, 215, 220, 222, 224, 228, 231, 237, 241, 244, 247, 252, 254, 260, 264, 267, 270, 273, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 364, 366, 369, 374, 1140, 1141], "a9": 182, "68": [182, 205, 210, 215, 220, 222, 228, 231, 237, 241, 244, 247, 252, 254, 260, 264, 267, 270, 273, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 361, 364, 919, 1140, 1141], "b6": 182, "a8": 182, "9b": 182, "d8": 182, "7f": [182, 943], "e2": [182, 232, 245, 515, 695], "a3": 182, "79": [182, 205, 215, 220, 222, 228, 231, 237, 241, 244, 247, 252, 254, 260, 264, 267, 270, 273, 282, 285, 289, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 364, 369, 374, 1140, 1141], "f4": 182, "96": [182, 191, 205, 215, 220, 222, 228, 231, 241, 244, 247, 252, 254, 260, 264, 267, 270, 273, 282, 285, 289, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 364, 470, 1012, 1013, 1140, 1141], "4f": [182, 1080], "1d": 182, "7e": 182, "4e": 182, "0e": 182, "d9": 182, "8c": 182, "d3": [182, 669], "c8": 182, "f7": 182, "8e": 182, "d6": 182, "3b": 182, "1e": 182, "4b": [182, 943, 999], "5e": [182, 1066], "5f": [182, 770], "7c": 182, "expon": [182, 1066], "65537": 182, "0x10001": 182, "x509v3": 182, "98": [182, 191, 205, 215, 222, 228, 231, 237, 244, 247, 252, 254, 257, 260, 264, 267, 270, 273, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 364, 369, 374, 595, 632, 1013], "0c": [182, 943], "keyid": 182, "c0": 182, "8f": 182, "b1": 182, "b7": 182, "9a": 182, "fa": 182, "7a": 182, "df": [182, 208, 324, 328, 334, 346, 478], "a6": 182, "c9": 182, "76": [182, 205, 215, 220, 222, 228, 231, 233, 237, 244, 247, 252, 254, 260, 264, 267, 270, 273, 282, 285, 289, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 364, 369, 374, 489, 490, 754, 788, 1093, 1140, 1141], "f0": 182, "b4": 182, "f9": 182, "eb": 182, "f1": 182, "6c": [182, 943], "2f": [182, 394, 1080], "5a": 182, "e0": 182, "d0": 182, "93": [182, 191, 205, 215, 220, 222, 228, 231, 237, 241, 244, 247, 252, 254, 260, 264, 267, 273, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 364, 1140], "8d": 182, "2a": 182, "fc": [182, 495, 496], "1a": 182, "b9": 182, "cb": [182, 659], "miidbtccae2gawibagiuarax5e9vn4g6eclb5bocbruks9cwdqyjkozihvcnaqel": 182, "bqawetepma0ga1ueawwgamzhc2nomcaxdtixmdkwnzeyntc1nloydzixmjewode0": 182, "mti1nzu2wjarmq8wdqydvqqddazqzmfzy2gwggeima0gcsqgsib3dqebaquaa4ib": 182, "dwawggekaoibaqc1lvzqb2aw15x2nlvnnmth6qxdnq1xvokb9vbu6zx": 182, "wl72mzqr": 182, "5rkvwabpeph9hcwdnwcm9mjnhupdexi": 182, "hmszvaowukuzi2kflrpvc": 182, "79gwnr4": 182, "jc": 182, "xdlzwnekcnuhsogjwxxttbydsghpd8q": 182, "valspcvotvjdokib4eyxnavjbdjdldd": 182, "rb8ueftirkn5abigzdoortik9jy1v2ocui5zqu8dkg4vph4mtkp": 182, "nb3kgq7zt5ym": 182, "b8ce2f": 182, "ettmprmfi94x": 182, "7i5tuqrbsylistict": 182, "rf1kw6": 182, "zuzvmwyow9cyzwc5rar": 182, "ys0exg3v": 182, "hyjl7vaxa23rb": 182, "xyiuztxqunxragmbaagjuzbrmb0ga1uddgqwbbqk": 182, "p1jr3huijl4otbwyvngmdz1idzafbgnvhsmegdawgbqkp1jr3huijl4otbwyvngm": 182, "dz1idzapbgnvhrmbaf8ebtadaqh": 182, "ma0gcsqgsib3dqebcwuaa4ibaqa5yke5gyfa": 182, "h49rsbdpobkbr5rv0hz693pljj02mn9hprusmgbygdujyx6odqbzcfah8ko0": 182, "xra": 182, "kdtflvc7uuvwtp": 182, "envqn8vx6twkd0r7maeyze8q6w2y1p1xcbrbwhmhemi": 182, "tjjadwenms9xosesipxkduey9oa6ep6indatkyt2lrw5tyagfocnxyiniybsvdtw": 182, "yqfvxbjphkw": 182, "dintokuzmazeiq3j0hi8o789xdyxlf2snsdshq5huaz67c5brli": 182, "ahemjzbycfiiq65b5x": 182, "y7aq": 182, "eg70tffm4fd8iys4tyxajdhcarqvfpdxazkhx": 182, "rk": 182, "b3lljngstu2g": 182, "mokutil": 182, "mokmanag": 182, "bloodi": [182, 1008, 1149], "fan": [182, 204, 208, 234, 258, 327, 1136], "highest": [182, 241, 247, 257, 260, 306, 421, 466, 942, 998], "melt": 182, "7390": [182, 247], "cross develop": 183, "raspberry pi": [183, 934, 935, 936, 937, 938, 941, 942, 943], "crosstool-ng": 183, "c++": [183, 185, 1188, 1189, 1190, 1192], "sadli": [183, 234, 460, 806, 941, 975, 978, 1012, 1034], "linaro": [183, 790, 933, 1021, 1022], "libstdc": [183, 1023, 1025], "unsatisfi": 183, "libpthread": [183, 1014], "feedback": [183, 199, 202, 211, 212, 213], "thankfulli": 183, "gperf": [183, 1025], "flex": [183, 817, 941, 1025], "texinfo": [183, 1025], "help2man": [183, 1025], "libtool": [183, 1025], "ncurs": [183, 810], "unzip": [183, 838, 1025], "rsync": [183, 1025], "diffutil": 183, "libncurses5": [183, 1025], "gawk": [183, 1025], "util": [183, 190, 211, 340, 493, 499, 518, 532, 647, 702, 705, 707, 788, 1025, 1032, 1164], "ct": [183, 1025], "zlib": [183, 1025], "extra": [183, 205, 215, 241, 427, 488, 580, 751, 837], "prior": [183, 863, 879, 904, 941, 1011, 1027, 1081], "bootstrap": [183, 1025, 1171], "yann": 183, "morin": 183, "warranti": [183, 224, 366], "merchant": 183, "rpi3": 183, "armv7": 183, "rpi2": 183, "23179": 183, "libc": [183, 1011, 1028], "glibc_2": [183, 1011], "ldd": [183, 482, 484, 1028], "0xb6e06000": 183, "invok": [183, 213, 232, 245, 355, 360, 496, 598, 610, 669, 699, 990, 1012, 1049, 1061, 1062, 1087], "rpt2": 183, "rpi1": 183, "deb10u1": 183, "quirk": [183, 934], "werror": [183, 402, 415, 458, 481, 496, 503, 788, 805, 806, 1178], "behind": [183, 223, 415, 466, 496, 518, 628, 837, 952, 1011, 1054, 1153], "glibcxx_3": 183, "libgcc_": 183, "downgrad": 183, "cmake_find_root_path": [183, 1012], "cmake_sysroot": [183, 1012], "viewpoint": 183, "bye": [183, 722, 726, 728, 729, 730, 1149], "relocat": 183, "fragil": 183, "sdk": 183, "buildroot": 183, "encount": [183, 212, 260, 264, 942, 943, 969], "ct_prefix": 183, "categori": [184, 196, 478, 1138], "crosstool": [184, 288, 790, 933, 1012, 1014, 1021, 1022, 1023], "1399": 184, "dell": 184, "xp": [184, 476], "grintovec": [184, 239], "plan\u0161arsko": 184, "jezero": 184, "\u010de\u0161ka": [184, 239], "ko\u010da": [184, 239], "traunstein": [184, 208, 387], "zierlersteig": [184, 208], "bigbluebutton": [184, 188, 1183], "consumpt": 184, "buildmanag": 185, "embeddedentwicklung": 185, "anpassungen": 185, "paketen": 185, "rootfilesystem": [185, 1014], "dient": 186, "vermarktung": 186, "referenz": [186, 275], "kursteilnehm": [186, 387], "beendigung": 186, "entstandenen": 186, "zur\u00fcckgreifen": 186, "finden": [186, 190, 199, 1183], "sofern": 186, "kund": [186, 199], "w\u00fcnscht": 186, "abstufungen": 186, "\u00f6ffentlichkeit": [186, 1200], "besprochen": 186, "hierbei": 186, "g\u00e4nzlich": 186, "abgesehen": 186, "ausdr\u00fccklich": 186, "zustimmt": 186, "namen": [186, 205, 215, 264, 324, 925, 1207], "individuen": 186, "prinzipiel": 186, "erw\u00e4hnt": [186, 199], "erlaubni": 186, "sollten": [186, 254, 292], "vorgehen": [186, 272, 1200, 1207], "anbietet": 186, "nie": [186, 195, 207, 387, 1188], "zug\u00e4nglich": 186, "onlinekursen": 186, "\u00fcbungsmateri": 186, "zustimmen": 186, "einzeln": [186, 199], "keinesfal": 186, "ver\u00f6ffentlicht": 186, "verschiedenst": 186, "m\u00f6glichkeiten": [186, 199, 1202, 1205], "entstanden": [186, 199, 207], "nichtsdestotrotz": [186, 1186], "accompani": [187, 208, 297, 299, 1139, 1194], "privaci": [187, 204, 208, 209], "guidelin": [187, 204, 323, 943], "certainli": [187, 969], "gitk": [187, 897], "traine": [187, 214], "respositori": [187, 199], "user1": 187, "user2": 187, "user3": 187, "untrack": 187, "beast": 187, "similarli": 187, "unstag": 187, "accident": [187, 609, 741, 821, 864, 865, 904, 968, 1076], "7434a5b": 187, "100755": 187, "cowork": 187, "employ": [187, 476], "favourit": 187, "869": [187, 247, 334], "124": [187, 191, 205, 212, 215, 222, 228, 231, 241, 244, 247, 252, 254, 257, 260, 264, 267, 270, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 1093], "a4b9666": 187, "bf5bb75": 187, "went": [187, 208], "retri": [187, 955, 1054, 1164], "noon": [187, 327, 997, 1085], "lack": [187, 456, 481, 553, 687, 689, 943, 1023], "unavoid": 187, "her": [187, 191, 216, 260, 263, 689, 872, 893, 1102, 1144, 1199], "confid": 187, "merg": [187, 233, 839, 997, 1083, 1201], "gentl": [188, 1190], "tinker": 188, "solder": 188, "sysv": [189, 1012], "grace": [189, 301, 761], "sigterm": [189, 1008, 1009], "sigkil": 189, "beeinflussen": 189, "shutdown": [189, 244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 337, 340, 346, 377, 815, 928, 1005, 1043], "herausgefunden": [189, 195, 387], "nachfolgend": [189, 1184], "manpag": 189, "verhindern": 189, "genehm": 189, "systemd": [189, 244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346, 837, 875, 928, 943, 1008, 1184], "inhibit": [189, 336, 694, 732], "children": [189, 470], "vererbt": 189, "attributen": 189, "setprior": 189, "execv": [189, 966, 1011], "sched_reset_on_fork": 189, "ORed": 189, "privileg": [189, 244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346, 893, 928], "playback": 189, "prevent": [189, 192, 241, 247, 250, 257, 260, 288, 452, 458, 462, 874, 963, 968, 997, 1008, 1034, 1046, 1076], "evad": 189, "rlimit_rttim": 189, "getr": 189, "anstel": 189, "prozessen": 189, "teilen": 189, "prozess": [189, 370, 1193, 1195, 1202, 1203, 1206], "startenden": 189, "gestarteten": 189, "weitergegeben": 189, "ausser": [189, 216, 364, 1199], "unterbunden": 189, "pthread_attr_setinheritsch": 189, "pthread_inherit_sch": 189, "pthread_explicit_sch": 189, "newli": [189, 458], "sowa": [189, 195, 387, 1184], "\u00e4hnlich": [189, 220], "filter_driv": 189, "offenbar": [189, 205, 387, 1186], "miser": [189, 647], "netzwerkdrivern": 189, "hoher": 189, "interruptlast": 189, "verbessern": 189, "n\u00f6tig": [189, 1195], "diesbez\u00fcglich": 189, "\u00fcberlegt": 189, "schaltet": 189, "netzwerkdriv": 189, "30107": 189, "linuxfound": 189, "workgroup": 189, "napi": [189, 219, 831], "implementationen": 189, "libmodbu": 189, "freemodbu": 189, "konfiguriert": [189, 190], "jumbo": 189, "jumbo_fram": 189, "mtu": [189, 936], "1500": [189, 247], "eth0": 189, "9000": [189, 247], "ifconfig": [189, 831], "abgelegt": 189, "konfigur": [189, 191], "ifac": [189, 521, 535, 758], "vorsicht": [189, 215, 925], "routern": 189, "fragmentieren": 189, "tracerout": 189, "netzwerkverbindung": 189, "g\u00fcte": 189, "sar": 189, "sysstat": 189, "schmerzvol": 189, "netter": 189, "ausprogrammiert": 190, "konflikt": [190, 1201], "parallelen": [190, 1205], "demonstr": [190, 192, 212, 284, 548, 597, 1138, 1142, 1181], "mutter": [190, 387, 388, 1205], "aller": [190, 199, 387, 388, 1184, 1205], "danach": [190, 1183], "hilf": [190, 215, 369, 374, 1195], "gefixt": 190, "kommunk": 190, "variablen": [190, 191, 216, 217, 220, 223, 228, 256, 274, 275, 361, 364, 370, 1185, 1195, 1196, 1199], "frontal": 190, "vorgef\u00fchrt": 190, "diskuss": [190, 199, 221, 387], "dank": [190, 195, 387, 1184], "beispielcod": 190, "h\u00e4ndisch": [190, 1187], "zweier": [190, 216, 1199], "bewundern": 190, "k\u00f6nnt": 190, "euch": 190, "erinnern": [190, 387], "blinken": 190, "liess": 190, "irgendwo": [190, 264], "hatten": [190, 195, 387], "edg": [190, 234, 819, 977, 978], "kleinen": 190, "empf": 190, "unbedingt": [190, 205, 1184], "beispielprogramm": 190, "horcht": 190, "gesprochen": 190, "ausf\u00fchrlich": [190, 275], "schamlos": 190, "eigenwerbung": 190, "\u00fcberbleibsel": 190, "ehemaligen": 190, "socketcan": [190, 935, 936], "absorbiert": 190, "worden": [190, 199, 1184], "enth\u00e4lt": [190, 205], "schnuckelig": 190, "aufzeichnen": 190, "replai": [190, 936], "folien": [190, 199, 207, 1183], "freitag": [190, 1184], "kerneldrivertag": 190, "sorri": [190, 196, 876], "emanuel": 190, "beispieldriv": 190, "han": 190, "angeboten": [190, 1183], "promin": [190, 751, 833], "implementiert": [190, 205, 236, 1193, 1207], "gute": [190, 207, 1193, 1200], "anfang": [190, 191, 199, 350], "mcp2515": [190, 837], "angesprochen": [190, 207], "fortgeschrittener": [190, 207], "einpflegt": 190, "agiert": 190, "mcp251x": 190, "at91": 190, "soc": [190, 941, 942, 943, 977], "deinem": 190, "stecker": 190, "verbaut": 190, "at91_can": 190, "lacht": 190, "zeilenweisen": 191, "nutzdaten": [191, 244], "extrahieren": [191, 218], "wollend": [191, 1200], "spalt": 191, "offensichtlich": [191, 1187], "separiert": 191, "felder": 191, "antwort": [191, 292, 334], "stdtype": 191, "gscheitesten": 191, "aufeinanderfolgend": 191, "whitespac": [191, 252, 260, 306, 400, 1081, 1105, 1161], "nimmt": [191, 216, 228, 252, 254, 260, 292, 1186, 1199], "tupl": [191, 204, 209, 211, 213, 217, 221, 223, 229, 230, 232, 236, 239, 242, 243, 245, 246, 248, 249, 253, 255, 256, 257, 262, 265, 268, 269, 271, 281, 283, 286, 289, 290, 293, 303, 305, 307, 311, 312, 324, 327, 329, 335, 337, 339, 341, 347, 350, 354, 369, 525, 734, 789, 790, 1039, 1057, 1058, 1065, 1066, 1071, 1080, 1083, 1113, 1136, 1189], "weiss": [191, 195, 205, 324, 1202, 1207], "rauskommen": 191, "aaa": [191, 252, 264, 270, 306, 340], "tbbb": 191, "tccc": 191, "feld0": 191, "feld1": 191, "feld2": 191, "ccc": [191, 270], "optional": [191, 1186], "splittet": 191, "bearbeitet": [191, 1206], "manuel": [191, 215, 220], "ddd": 191, "eee": 191, "maxsplit": [191, 260, 306, 478], "restfield": 191, "len": [191, 192, 193, 195, 205, 215, 220, 222, 223, 228, 231, 232, 236, 237, 241, 244, 247, 252, 254, 257, 260, 264, 267, 270, 282, 285, 292, 302, 306, 313, 324, 328, 334, 340, 346, 350, 361, 364, 478, 833, 937, 1038, 1051, 1064, 1066, 1072, 1074, 1081, 1083, 1085, 1086, 1131, 1149, 1153, 1157, 1160], "10101010": 191, "switchnumb": 191, "rsplit": [191, 260, 306, 478, 1081], "l1": [191, 194, 205, 222, 228, 231, 241, 244, 247, 252, 254, 260, 264, 267, 270, 273, 282, 285, 289, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 516], "l2": [191, 194, 205, 222, 228, 231, 236, 241, 244, 247, 254, 260, 264, 267, 270, 273, 282, 285, 289, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350], "\u00e4nderung": [191, 205, 1207], "87": [191, 205, 215, 220, 222, 228, 231, 237, 244, 247, 252, 254, 260, 264, 267, 270, 273, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 364, 369, 374, 1093, 1140, 1141], "zeigen": [191, 924], "dasselb": 191, "objekt": [191, 205, 215, 306], "140070310441600": 191, "ver\u00e4ndert": 191, "140070371015728": 191, "92": [191, 192, 215, 220, 222, 224, 228, 231, 237, 244, 247, 252, 254, 257, 260, 264, 267, 270, 273, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 364, 369, 374, 921, 1140, 1141], "attributeerror": [191, 205, 241, 247, 252, 254, 257, 260, 264, 267, 270, 273, 282, 285, 289, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 1034, 1047, 1048, 1055], "gottseidank": 191, "alternativ": [191, 350], "aufruf": [191, 205, 211, 215, 260, 365], "paaren": 191, "keyerror": [191, 194, 205, 215, 222, 231, 241, 244, 247, 252, 254, 257, 260, 267, 270, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 364, 1034, 1083, 1158], "nix": [191, 192, 205, 223, 231, 252, 254, 257, 282, 302, 334, 340, 364, 554], "umstaendlich": 191, "102": [191, 205, 215, 220, 222, 228, 237, 241, 244, 247, 252, 254, 257, 260, 264, 267, 270, 273, 282, 285, 289, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 364, 369, 374], "103": [191, 205, 215, 222, 228, 237, 244, 247, 252, 254, 257, 260, 264, 267, 270, 273, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 364], "104": [191, 193, 205, 215, 220, 222, 228, 241, 244, 247, 252, 254, 257, 260, 264, 267, 270, 273, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 364, 1093], "106": [191, 205, 215, 220, 222, 228, 231, 237, 241, 244, 247, 252, 254, 257, 260, 264, 267, 270, 282, 285, 289, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 364, 919], "setdefault": [191, 232, 252, 267, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 1083], "107": [191, 205, 215, 220, 222, 224, 228, 231, 244, 247, 252, 254, 260, 264, 267, 270, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 364, 366, 465], "meinvoelligsinnlosertyp": 191, "sinnlose_addit": 191, "sinnlobj": 191, "112": [191, 205, 212, 215, 220, 222, 228, 237, 241, 244, 247, 252, 254, 260, 264, 267, 270, 282, 285, 289, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 364, 919], "113": [191, 205, 215, 220, 222, 228, 231, 241, 244, 247, 252, 254, 260, 264, 267, 270, 273, 282, 285, 289, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 501], "__main__": [191, 195, 205, 210, 228, 231, 241, 244, 245, 247, 252, 254, 257, 260, 264, 267, 270, 273, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 364, 369, 1035, 1038, 1042, 1048, 1056, 1164, 1170], "0x7f64a8934890": 191, "114": [191, 193, 205, 215, 222, 228, 237, 241, 244, 247, 252, 254, 260, 264, 267, 270, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350], "115": [191, 205, 215, 220, 222, 228, 241, 244, 247, 252, 254, 260, 264, 267, 270, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350], "116": [191, 205, 215, 222, 228, 237, 241, 244, 247, 252, 254, 257, 260, 264, 267, 270, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350], "nochwenigersinnvol": 191, "der_absolute_unsinn": 191, "super": [191, 207, 208, 215, 229, 231, 232, 247, 255, 258, 262, 281, 285, 296, 305, 327, 346, 515, 1032, 1034, 1051, 1136, 1143], "unsinn": 191, "uebertreibs_jetzt_bitt": 191, "117": [191, 205, 215, 222, 228, 241, 244, 247, 252, 254, 257, 260, 264, 267, 270, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350], "118": [191, 205, 215, 222, 237, 241, 244, 247, 252, 254, 257, 260, 264, 267, 270, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 919, 1093], "0x7f64a894a790": 191, "119": [191, 205, 215, 222, 224, 231, 244, 247, 252, 254, 260, 264, 267, 270, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 366], "121": [191, 193, 205, 215, 222, 228, 231, 237, 244, 247, 252, 254, 260, 264, 267, 270, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350], "1335": 191, "122": [191, 193, 205, 215, 220, 222, 228, 231, 241, 244, 247, 252, 254, 257, 260, 264, 267, 270, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 1013], "819508": 191, "123": [191, 205, 215, 222, 223, 228, 231, 237, 241, 244, 247, 252, 254, 257, 260, 264, 267, 270, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 411, 936, 1093, 1100, 1170], "uptim": 191, "timedelta": [191, 210, 237, 239, 292], "358": [191, 247, 292, 306, 324, 334, 340, 350, 472], "125": [191, 215, 220, 222, 228, 231, 241, 244, 247, 252, 254, 260, 264, 267, 270, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350], "irgendwann_einmal_gewesen": 191, "834972": 191, "126": [191, 205, 215, 220, 222, 228, 231, 244, 247, 252, 254, 257, 260, 264, 267, 270, 282, 285, 302, 306, 312, 324, 328, 334, 340, 346, 350], "datetime_from_batteri": 191, "840837": 191, "127": [191, 205, 215, 220, 222, 228, 231, 237, 244, 247, 252, 254, 260, 264, 267, 270, 282, 285, 302, 306, 312, 324, 328, 334, 340, 346, 350, 952, 960], "846889": 191, "woher": [191, 254], "ausschauen": 191, "sinnlo": [191, 254], "sinnlos": [191, 228, 306], "repraesent": 191, "129": [191, 205, 215, 222, 224, 231, 241, 244, 247, 252, 254, 257, 260, 264, 267, 270, 273, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 366], "130": [191, 205, 215, 222, 237, 244, 247, 252, 254, 257, 260, 264, 267, 270, 282, 285, 292, 296, 302, 306, 312, 324, 328, 334, 340, 346, 350, 694, 810, 1079], "completedprocess": [191, 260, 270], "returncod": [191, 260, 270], "erfolgreich": 191, "beendet": [191, 1205], "schau": 191, "du": [191, 205, 260, 267, 273, 960, 965], "verwendest": 191, "anzuzeigen": [191, 346], "cell": [191, 204, 351, 934, 1032, 1033, 1034, 1039, 1047, 1048, 1054, 1055, 1059, 1076, 1077, 1081, 1141, 1157, 1158], "gesendet": 191, "ausf\u00fchrt": 191, "krieg": 191, "131": [191, 205, 215, 222, 231, 237, 244, 247, 252, 254, 260, 264, 267, 270, 282, 285, 302, 306, 312, 324, 328, 334, 340, 346, 350, 744], "capture_output": [191, 270], "ndrwxrwxr": [191, 270], "mar": [191, 260, 411, 864, 865, 868, 882, 894, 916, 919, 921, 945, 959, 969, 1011, 1014, 1023, 1034], "2607": 191, "33768": 191, "ndrwxr": 191, "xr": [191, 489, 864, 865, 882, 884, 885, 893, 894, 919, 934, 941, 942, 943, 1011, 1023, 1025, 1026, 1062], "switchzeug": 191, "keiner": [191, 205, 324, 1188], "seinen": [191, 205], "formuliert": [191, 199], "logisch": [191, 215], "irgendwa": [191, 237, 252, 254], "konverti": 191, "musst": 191, "dich": 191, "festlegen": 191, "133": [191, 205, 215, 222, 244, 247, 252, 254, 260, 264, 267, 270, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350], "stdout_as_utf8": 191, "utf": [191, 232, 241, 244, 245, 247, 251, 257, 260, 270, 292, 306, 312, 324, 328, 334, 340, 346, 1066, 1085, 1133], "134": [191, 205, 215, 222, 231, 244, 247, 252, 254, 257, 260, 264, 267, 270, 273, 282, 285, 302, 306, 312, 324, 328, 334, 340, 346, 350, 753], "135": [191, 205, 215, 222, 231, 244, 247, 252, 254, 260, 264, 267, 270, 273, 282, 285, 302, 306, 312, 324, 328, 334, 340, 346, 350], "drwxrwxr": [191, 270, 919, 977, 1012, 1013, 1014, 1023, 1025], "drwxr": [191, 864, 865, 882, 919, 934, 941, 942, 943, 1023, 1025], "136": [191, 193, 205, 215, 222, 231, 244, 247, 252, 254, 257, 260, 264, 267, 270, 282, 285, 302, 306, 312, 324, 328, 334, 340, 346, 350, 490], "fuer": [191, 252, 257, 264], "listdir": [191, 298, 302, 334, 340, 351, 376, 478], "ipynb_checkpoint": [191, 270, 334], "gitignor": [191, 479, 1013], "137": [191, 202, 205, 215, 222, 244, 247, 252, 254, 257, 260, 264, 267, 270, 273, 282, 285, 302, 306, 312, 324, 328, 334, 340, 346, 350], "rekurs": 191, "iterieren": [191, 195, 205, 220, 228], "dirpath": 191, "dirnam": [191, 244, 247, 298, 478, 553, 788, 1169], "checkpoint": [191, 241, 247, 257, 260], "itg": 191, "scope": [191, 199, 205, 216, 217, 220, 251, 263, 276, 277, 279, 288, 300, 311, 322, 326, 327, 332, 333, 336, 338, 339, 344, 345, 348, 349, 369, 406, 412, 516, 566, 586, 599, 601, 610, 695, 736, 748, 751, 766, 767, 789, 790, 1033, 1078, 1189, 1199, 1203], "getter": [191, 607, 655], "setter": [191, 231, 1055], "fibo": [191, 192, 211, 231, 245, 722, 724, 1038], "listcomprehens": 191, "generatorexpress": [191, 192], "switchdb": 191, "schema": [191, 272, 596, 1092], "michi": 191, "pyexec": 191, "ifadminstatu": 191, "ifdescr": 191, "iflastchang": 191, "snmpenginetim": 191, "ifoperstatu": 191, "fein": [191, 215], "helferlein": 191, "hochtrabend": 191, "nennt": 191, "funktional": 191, "138": [191, 205, 215, 222, 231, 244, 247, 252, 254, 260, 264, 267, 270, 282, 285, 302, 306, 312, 324, 328, 334, 340, 346, 350, 1093], "139": [191, 205, 215, 222, 231, 244, 247, 252, 254, 260, 264, 267, 270, 282, 285, 302, 306, 312, 324, 328, 334, 340, 346, 350], "140": [191, 205, 215, 222, 231, 244, 247, 252, 254, 257, 260, 264, 267, 270, 273, 282, 285, 289, 302, 306, 312, 324, 328, 334, 340, 346, 350, 694], "l_quadrat": 191, "141": [191, 205, 215, 222, 244, 247, 252, 254, 260, 264, 267, 270, 273, 282, 285, 302, 306, 312, 324, 328, 334, 340, 346, 350, 411, 919], "kompliziert": [191, 205, 257, 260, 282, 1184, 1203], "anm": 191, "versionen": [191, 261], "aufgebaut": 191, "rausnehmen": 191, "konfigurationsfil": 191, "configpars": 191, "142": [191, 205, 215, 222, 231, 244, 247, 252, 254, 260, 264, 267, 270, 282, 285, 289, 302, 306, 312, 324, 328, 334, 340, 346, 350, 954, 999], "143": [191, 205, 215, 222, 231, 244, 247, 252, 254, 257, 260, 264, 267, 270, 273, 282, 285, 302, 306, 312, 324, 328, 334, 340, 346, 350], "liste_als_str": 191, "144": [191, 205, 215, 222, 231, 238, 244, 247, 252, 254, 257, 260, 264, 267, 270, 273, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 490], "145": [191, 205, 215, 222, 231, 244, 247, 252, 254, 257, 260, 264, 267, 270, 273, 282, 285, 302, 306, 312, 324, 328, 334, 340, 346, 350, 1154], "herbert": 191, "146": [191, 205, 215, 222, 231, 244, 247, 252, 254, 260, 264, 267, 270, 273, 282, 285, 302, 306, 312, 324, 328, 334, 340, 346, 350], "heraussen": 191, "147": [191, 205, 215, 222, 231, 244, 247, 252, 254, 257, 260, 264, 267, 270, 282, 285, 302, 306, 312, 324, 328, 334, 340, 346, 350, 872], "148": [191, 205, 215, 222, 231, 244, 247, 252, 254, 260, 264, 267, 270, 273, 282, 285, 302, 306, 312, 324, 328, 334, 340, 346, 350, 613], "149": [191, 205, 215, 222, 244, 247, 252, 254, 257, 260, 264, 267, 270, 273, 282, 285, 302, 306, 312, 324, 328, 334, 340, 346, 350], "151": [191, 205, 215, 222, 231, 244, 247, 252, 254, 260, 264, 267, 270, 273, 282, 285, 302, 306, 312, 324, 328, 334, 340, 346, 350, 376], "152": [191, 205, 215, 222, 231, 244, 247, 252, 254, 260, 264, 267, 270, 282, 285, 302, 306, 312, 324, 328, 334, 340, 346, 350, 376, 1158], "mein_dict": 191, "gerhard": 191, "175": [191, 205, 222, 231, 244, 247, 252, 254, 257, 260, 264, 267, 270, 282, 285, 306, 312, 324, 328, 334, 340, 346, 350], "154": [191, 205, 215, 222, 231, 244, 247, 252, 254, 260, 264, 267, 270, 282, 285, 302, 306, 312, 324, 328, 334, 340, 346, 350, 919], "dict_as_json_str": 191, "155": [191, 205, 215, 222, 231, 244, 247, 252, 254, 257, 260, 264, 267, 270, 273, 282, 285, 302, 306, 312, 324, 328, 334, 340, 346, 350, 376], "gelesenes_dict_von_json": 191, "nahm": 192, "woch": [192, 212, 387, 388, 1184], "anspruch": 192, "platz": 192, "gesammelten": 192, "notizen": 192, "schnell": [192, 195, 215, 236, 261, 1187], "sachen": [192, 218], "is_prim": [192, 215, 218, 223, 1115], "divisor": [192, 223, 350, 788, 1107], "unmodifi": [192, 205, 241, 252, 499, 550, 596, 610, 941, 943, 1034, 1047, 1118], "randomnumb": 192, "howmani": 192, "randrang": [192, 220, 244, 252, 254, 257, 260, 264, 267, 270, 292, 334, 340, 346, 350, 364, 1035, 1070], "prev": [192, 827], "cur": [192, 312, 416], "fibonum": 192, "tend": [192, 291, 294, 301, 466, 810, 876, 1026], "input_list_str": 192, "input_list": [192, 267, 1118], "__n": [192, 788], "__lt__": [192, 254, 257, 260, 264, 282, 285, 306, 324, 346], "rh": [192, 241, 245, 260, 350, 404, 446, 462, 516, 530, 596, 610, 612, 736], "__le__": [192, 254, 257, 260, 264, 282, 285, 306, 324, 346, 1054], "__eq__": [192, 254, 257, 260, 264, 282, 285, 306, 324, 346, 1054], "__iadd__": 192, "iadd": 192, "__add__": [192, 257, 260, 264, 282, 306, 324, 346, 1054], "new_numb": [192, 247], "__radd__": [192, 257, 264, 282, 346, 1054], "radd": 192, "lh": [192, 241, 245, 350, 404, 446, 462, 516, 530, 586, 596, 610, 612, 736, 868], "makesnosens": 192, "__number": 192, "input_numb": 192, "numnber": 192, "list_of_squar": 192, "compehens": 192, "effort": [192, 264, 298, 459, 460, 477, 942], "local_assign": 192, "read_global_vari": 192, "enclos": [192, 260, 429], "local_shadows_glob": 192, "explicit_global_assign": 192, "creation": [192, 301, 323, 760, 762, 767, 789, 790, 896, 933, 963, 974, 979, 988, 994, 1005, 1014, 1076, 1085, 1086, 1171], "captur": [192, 275, 276, 277, 279, 299, 336, 337, 354, 369, 734, 735, 738, 789, 790, 934, 1030, 1189], "create_funct": 192, "inner_funct": 192, "whic": 192, "f_one": 192, "f_two": 192, "launch": [192, 208], "discov": [192, 204, 211], "area": [192, 201, 234, 264, 833, 942, 1200, 1206], "scikit": [193, 195, 242, 351, 1171], "manipul": [193, 481, 630, 753, 788, 835, 941, 954, 963, 998, 1010, 1073, 1092], "appreci": [193, 244, 876, 1093], "spectral": [193, 1138], "mat": 193, "matrix": [193, 195, 296, 376, 378, 467], "scipi": [193, 195, 223, 242, 1171], "loadmat": [193, 195], "sklearn": [193, 195, 350, 1139, 1141, 1171], "pixel": [193, 350], "rgb": [193, 195, 350, 378], "dimens": [193, 195, 1141, 1192], "xkcd": 193, "schafer": [193, 204, 207, 208, 211, 229, 232, 239, 242, 245, 255, 258, 269, 272, 281, 305, 311, 339, 369, 374, 1136, 1154, 1155, 1157, 1158, 1159, 1160, 1162, 1172], "keith": [193, 204, 208, 229, 242, 255, 269, 272, 305, 311, 1136], "galli": [193, 204, 208, 229, 242, 255, 269, 272, 305, 311, 1136], "sci": 193, "kit": [193, 378], "spyder": [193, 204, 1059], "pycharm": [193, 204, 298, 1059], "retain": [193, 435, 1077], "invoc": [193, 516], "comparison": [193, 210, 233, 247, 250, 260, 268, 306, 411, 415, 421, 572, 736, 1068, 1111], "misfeatur": 193, "png": [193, 195, 340, 350, 485, 1013, 1138], "imgfil": 193, "veggi": [193, 195, 350, 1138], "pillow": [193, 195], "welcom": 193, "cooper": [193, 761], "477x686": 193, "imgarrai": [193, 195], "ndim": [193, 1141], "477": [193, 247, 292, 340, 350], "dtype": [193, 195, 289, 292, 296, 328, 334, 346, 350, 1141, 1154, 1155, 1157, 1158, 1159, 1160], "uint8": [193, 350], "255": [193, 228, 244, 247, 252, 254, 257, 260, 264, 267, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 990], "172": [193, 205, 222, 244, 247, 252, 254, 257, 260, 264, 267, 270, 273, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 461], "nrow": [193, 195], "ncol": [193, 195], "reshap": [193, 195, 229, 242, 255, 269, 272, 305, 311, 350, 1136, 1139, 1141], "irrelev": [193, 210, 215, 248, 411, 453, 476, 882, 1066, 1149], "colorspac": 193, "mpl_toolkit": 193, "mplot3d": 193, "axes3d": 193, "pyplot": [193, 222, 241, 270, 273, 324, 328, 334, 346, 1031, 1090, 1141], "plt": [193, 222, 241, 270, 273, 324, 328, 334, 346, 1031, 1090, 1141], "fig": 193, "add_subplot": 193, "set_xlabel": 193, "set_ylabel": 193, "set_zlabel": 193, "ndindex": 193, "scatter": [193, 808], "rgb_linear": [193, 350], "n_cluster": [193, 195, 350], "copy_x": 193, "max_it": 193, "n_init": 193, "n_job": 193, "precompute_dist": 193, "random_st": [193, 1139, 1141], "tol": 193, "verbos": [193, 200, 481, 754, 863, 897, 899, 1070, 1164], "cluster_cent": 193, "int32": [193, 350, 462], "327222": 193, "cluster_centers_": [193, 195, 350], "20529747": 193, "50360681": 193, "3796182": 193, "94408609": 193, "75471018": 193, "53133237": 193, "226": [193, 205, 224, 244, 247, 252, 254, 257, 260, 264, 267, 270, 285, 292, 302, 306, 312, 324, 328, 340, 346, 350, 366], "64913628": 193, "76939951": 193, "92569235": 193, "71464963": 193, "47333306": 193, "60640492": 193, "8888303": 193, "92275244": 193, "84313209": 193, "157": [193, 205, 215, 222, 244, 247, 252, 254, 260, 264, 267, 270, 282, 285, 302, 306, 312, 324, 328, 334, 340, 346, 350], "30685398": 193, "43988931": 193, "03959132": 193, "225": [193, 205, 244, 247, 252, 254, 260, 264, 267, 270, 285, 292, 306, 312, 328, 334, 340, 346, 350, 485, 1093], "55934051": 193, "182": [193, 205, 222, 244, 247, 252, 254, 257, 260, 264, 267, 273, 282, 285, 302, 306, 312, 324, 328, 334, 340, 346, 350], "98255893": 193, "3232048": 193, "241": [193, 244, 247, 252, 254, 257, 260, 267, 270, 285, 302, 306, 312, 328, 340, 346, 350, 1093], "37322907": 193, "159": [193, 205, 215, 222, 244, 247, 252, 254, 257, 260, 264, 267, 270, 282, 285, 302, 306, 312, 324, 328, 334, 340, 346, 350], "54158234": 193, "51775529": 193, "idx": [193, 195, 260, 346, 350], "cube": [193, 350], "concaten": [193, 195, 232, 244, 245, 252, 260, 306, 334, 350, 363, 411, 477, 922, 1071, 1079], "axi": [193, 195, 296, 350, 1157, 1158], "reduced_img": [193, 195, 350], "fromarrai": [193, 195, 350], "float": [194, 205, 209, 211, 213, 215, 222, 223, 228, 231, 241, 244, 245, 247, 250, 252, 254, 257, 260, 265, 268, 282, 285, 290, 302, 306, 312, 323, 325, 328, 334, 340, 346, 350, 364, 365, 392, 393, 394, 398, 408, 410, 411, 415, 445, 454, 459, 478, 506, 515, 621, 622, 711, 770, 941, 999, 1009, 1047, 1065, 1080, 1087, 1093, 1186, 1190], "franziska": [194, 195], "baseexcept": [194, 231, 260, 264, 285, 1034], "callabl": [194, 208, 244, 257, 267, 270, 285, 292, 302, 306, 313, 340, 694, 736, 758, 766, 1048, 1049, 1086], "forev": [194, 436, 437], "rescu": [194, 252, 609, 630, 752, 754, 837, 1032], "pooh": [194, 622], "hex": [194, 205, 215, 222, 237, 247, 257, 270, 282, 285, 292, 302, 312, 328, 334, 340, 350, 364, 380, 553, 943, 1080], "0x7f03d41165f0": 194, "nonexist": 194, "react": [194, 209, 211, 213, 314, 330, 458, 619, 941, 958, 1034, 1191], "ensu": 194, "catch": [194, 234, 250, 273, 299, 354, 380, 496, 503, 525, 542, 559, 561, 594, 620, 623, 639, 645, 649, 654, 658, 661, 662, 679, 686, 687, 688, 689, 690, 691, 722, 730, 768, 770, 788, 790, 1009], "jessa": [194, 215, 222, 244, 273, 324], "verdammt": [194, 369], "ipython": [194, 231, 241, 247, 257, 260, 285, 302, 340, 919], "bd3a1af9b474": 194, "issubclass": [194, 231, 247, 260, 285], "rais": [153, 194, 195, 209, 211, 213, 231, 232, 241, 245, 247, 248, 252, 254, 257, 258, 260, 264, 272, 273, 306, 323, 354, 380, 1032, 1039, 1045, 1055, 1081, 1083, 1157, 1158], "bummer": [194, 247, 768, 1079], "peter": [194, 217, 254, 264, 360, 361, 1072], "paul": [194, 360, 361, 1072], "mari": [194, 1072], "pet": 194, "bloh": [194, 231], "blech": [194, 302, 707, 1152], "range_iter": [194, 205, 220, 237, 244, 252, 254, 257, 260, 270, 282, 285, 292, 302, 350], "0x7f03d402e570": 194, "stopiter": [194, 205, 220, 231, 237, 241, 244, 247, 252, 254, 257, 260, 264, 270, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 722, 730, 1034, 1039], "beantwortung": [195, 387], "herrschaft": [195, 387], "schulungsr\u00e4umen": [195, 387], "platzhirsch": [195, 387], "schlagen": [195, 387], "spass": [195, 387, 1193, 1195, 1200], "unglaublich": [195, 387], "lustig": [195, 216, 387, 1184, 1195], "vermittelt": [195, 387, 1205], "gelernt": [195, 387, 1193], "anwend": [195, 387], "beachten": [195, 216, 387, 1199], "zudem": [195, 387], "kursleit": [195, 387], "sympathisch": [195, 387], "kompet": [195, 387], "w\u00fcrde": [195, 205, 387], "weiterempfehlen": [195, 387], "christoph": [195, 237, 387], "jemand": [195, 387], "lassen": [195, 205, 216, 387, 1187, 1193, 1199, 1203, 1207], "bevor": [195, 1193, 1200, 1207], "anf\u00e4ngerthemen": 195, "vorbei": [195, 254, 260, 1196], "herumzureiten": 195, "gehackt": [195, 235], "zeug": [195, 324, 1202], "chef": 195, "vorgespr\u00e4ch": 195, "\u00fcbungsbeispiel": [195, 205], "mitgegeben": 195, "ausgehend": [195, 216, 387], "spektralbild": 195, "sagt": [195, 252], "verwend": [195, 228, 387], "clusteringalgorithmu": 195, "kategorisieren": 195, "abgebildeten": 195, "st\u00fccke": [195, 199], "erkennen": [195, 1188], "hab": 195, "erlaubt": [195, 205, 1184], "kursvorbereitung": 195, "appet": 195, "reduzieren": 195, "farbredukt": 195, "farben": 195, "bilddaten": 195, "interoperiert": 195, "nahtlo": [195, 1193, 1200], "zufal": [195, 221, 1187], "alpha": [195, 260, 306, 350, 1091], "ausgangsbild": 195, "abzuschneiden": 195, "restoren": 195, "algorithmu": [195, 215, 260, 264, 267], "reduc": [195, 350, 422, 431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 494, 696, 734, 787, 789, 790, 943, 1138], "acht": [195, 215, 216, 260, 292, 312, 340, 1199], "\u00fcberschaubar": 195, "ausdrucksst\u00e4rk": 195, "bemerkbar": 195, "wegschneiden": 195, "pil": [195, 350], "kmean": [195, 350], "nrgba": 195, "disregard": [195, 415], "arbitrarili": [195, 796, 969, 973, 1032], "linear_rgb": 195, "rgba": 195, "ergeben": 195, "testprogramm": 195, "imndata": 195, "teilzeitmitarbeiterin": 195, "studiert": 195, "folgendem": [195, 237, 1207], "bekackten": 195, "inputformat": 195, "parsen": [195, 220], "zwischendurch": 195, "gruppenarbeit": 195, "h2o": 195, "dat": 195, "mass": [195, 301], "0000000e": 195, "2662399e": 195, "5994910e": 195, "4391972e": 195, "0048070e": 195, "0078250e": 195, "hessian": 195, "hartre": 195, "bohr": 195, "kamu": 195, "05054e": 195, "61610e": 195, "00000e": 195, "20781e": 195, "08051e": 195, "83024e": 195, "06829e": 195, "42629e": 195, "65256e": 195, "52600e": 195, "69570e": 195, "91733e": 195, "04388e": 195, "34292e": 195, "04780e": 195, "63758e": 195, "19019e": 195, "41217e": 195, "11622e": 195, "21912e": 195, "11752e": 195, "04198e": 195, "36702e": 195, "14839e": 195, "71613e": 195, "96373e": 195, "40456e": 195, "21369e": 195, "24236e": 195, "60956e": 195, "84350e": 195, "29686e": 195, "92365e": 195, "einigen": [195, 216, 387], "runden": [195, 205], "nachdenken": 195, "einigerma\u00dfen": 195, "zufrieden": 195, "load_dat": 195, "matrix_lin": 195, "readlin": [195, 222, 224, 231, 232, 244, 245, 251, 260, 267, 292, 302, 328, 334, 340, 346, 361, 897, 1085], "vergeigt": 195, "matrix_el": 195, "unnecessari": [195, 406, 436], "triangular": 195, "max": [195, 205, 223, 228, 241, 247, 250, 252, 254, 257, 262, 267, 285, 339, 340, 350, 420, 436, 572, 621, 874, 935, 1141], "row_no": 195, "__name__": [195, 231, 232, 245, 254, 260, 264, 285, 302, 306, 362, 369, 1033, 1035, 1038, 1042], "bildverarbeitung": 195, "ahnung": [195, 237], "beeeeeep": 196, "broad": [196, 495, 1143, 1189, 1190], "histori": [196, 232, 250, 276, 277, 279, 281, 327, 336, 337, 415, 692, 696, 698, 734, 787, 789, 790, 796, 839, 868, 874, 925, 1136, 1142, 1148, 1191, 1195, 1202], "responsibl": [196, 996, 1169], "sane": [196, 340, 380, 874, 1144, 1169], "interfer": [196, 466, 479, 942], "paradigm": [196, 873, 881, 934, 942, 1204], "breakag": [196, 817], "nontrivi": [196, 204, 208, 371, 1059, 1163], "inappropri": [196, 393, 398, 499, 795], "conclus": [196, 204, 211, 835], "awkward": 196, "encourag": [196, 796], "hear": 196, "predat": [196, 800, 926, 1005], "doubt": [196, 241, 247, 257, 260, 264, 753, 1066], "schulungsbeschreibung": [197, 1183], "drehbuch": 197, "workshop": 197, "infolgedessen": 197, "virtuel": [197, 261, 1193, 1203, 1204], "konzipiert": [197, 207, 387], "add_subdirectori": [198, 486, 490, 1003, 1178], "group1": 198, "group2": 198, "montag": [199, 207, 208, 229, 233, 1184], "vorbereitung": [199, 387, 1186], "mitbringen": 199, "teilzunehmen": 199, "stattfinden": [199, 275], "folgt": 199, "hierzu": 199, "privatheitsrichtlinien": 199, "bauanleitung": 199, "ausprobieren": 199, "willkommen": 199, "schulungsbeschreibungen": 199, "raii": [199, 301, 594, 790], "stl": [199, 378, 442, 555, 556, 557, 558, 560, 562, 563, 564, 565, 567, 568, 569, 570, 571, 594, 595, 633, 637, 659, 661, 662, 676, 691, 702, 790, 1188, 1189, 1190], "scott": [199, 701, 756], "meyer": [199, 504, 756], "primer": [199, 1176], "sonstig": 199, "argh": [199, 437, 688, 716, 1034, 1164, 1176], "kursanforderung": 199, "erg\u00e4nzend": 199, "lasst": 199, "testgetrieben": 199, "testcas": [199, 1170], "aufgab": [199, 205, 235, 1196], "hacken": 199, "diskutieren": 199, "niederschrift": 199, "geschehenen": 199, "geh\u00f6renden": 199, "privaten": 199, "verl\u00e4uft": 199, "ansehen": 199, "clonen": 199, "wann": [199, 207], "zugeh\u00f6rigen": 199, "entspricht": 199, "unbetr\u00e4chtlich": 199, "gcc5": 199, "laufen": [199, 1184], "darau": [199, 207], "installationsanleitung": 199, "benutzung": [199, 369, 374], "zuerst": [199, 1207], "aggreg": [199, 467, 478, 596, 849, 1154, 1176], "klassen": [199, 205, 211, 370, 1188], "konstruktoren": [199, 223, 275, 370, 1188], "methoden": [199, 205, 217, 364, 1188], "referenzen": [199, 205, 216, 217, 275, 1188, 1199], "klass": [199, 228, 324], "\u00e4quival": 199, "\u00fcbergab": 199, "langsam": [199, 205, 254], "ausbauen": 199, "dynmem": 199, "demonstrieren": 199, "alloziert": [199, 205, 222], "konstruktor": 199, "destruktor": 199, "vermeiden": [199, 205, 1205], "dtor": [199, 494, 580, 666, 671, 702, 705, 739], "ausflug": [199, 215, 256], "capac": [199, 647], "\u00fcbung": [199, 216, 217, 1199], "handgestrickt": 199, "fallen": [199, 1187, 1188], "lustvol": 199, "erleiden": 199, "teufel": [199, 1187], "smart": [199, 275, 297, 336, 370, 371, 372, 387, 476, 553, 663, 703, 704, 734, 754, 759, 767, 775, 787, 789, 790, 1189, 1192], "shared_ptr": [199, 234, 250, 276, 277, 279, 297, 299, 336, 337, 508, 572, 663, 694, 703, 734, 749, 755, 756, 759, 767, 787, 789, 790, 1189], "unique_ptr": [199, 234, 250, 276, 277, 279, 297, 299, 336, 337, 494, 501, 508, 534, 535, 572, 663, 702, 703, 734, 749, 752, 759, 767, 786, 787, 788, 789, 790, 1189], "demonstriert": 199, "vorgriff": 199, "sortieren": [199, 1188], "employeerecord": 199, "parametrisierbarem": 199, "koordinatentyp": 199, "102ff": 199, "arten": [199, 1186], "containern": 199, "pointerarithmetik": 199, "iteratoren": [199, 262], "laufzeitverhalten": [199, 217], "verbesserungen": 199, "gegen\u00fcb": [199, 1186], "6ff": 199, "lambda": [199, 231, 232, 245, 247, 250, 262, 275, 282, 299, 302, 307, 324, 328, 340, 478, 572, 637, 709, 734, 739, 744, 746, 758, 761, 766, 789, 790, 1030, 1188, 1189, 1190], "gegen\u00fcberstellung": 199, "sort_algorithm_reverse_lambda": 199, "vererbung": [199, 1188], "fallstudi": 199, "livegehackt": 199, "angebunden": 199, "komplex": [199, 252, 254, 260, 267, 292, 1205], "aufbauen": 199, "vergleichbaren": 199, "anbinden": 199, "wurden": [199, 207], "eigen": [199, 218, 1188, 1193, 1200, 1205, 1206], "kapitel": [199, 369, 374, 1186], "behandelt": [199, 1183], "vorbeigehen": 199, "dcmake_cxx_flag": 200, "dcmake_install_prefix": [200, 484], "libgtest": [200, 201, 297, 299, 1176, 1178], "claim": [200, 404, 613, 615, 616, 872, 965], "simlp": 200, "concret": [200, 208, 234, 297, 494, 501, 506, 521, 583, 669, 671, 766, 774, 1047, 1143], "find_packag": [200, 202, 1178], "add_execut": [200, 479, 485, 491, 537, 573, 576, 579, 582, 585, 588, 591, 685, 1000, 1007, 1012, 1013, 1175, 1178, 1180], "add_test": [200, 492, 576, 1175, 1178], "emphasi": 200, "ultim": [200, 231, 251, 604, 769, 942], "luke": [200, 260, 1178], "thetoplevel": 200, "findgtest": [200, 202, 1178], "gtest_root": 200, "dgtest_root": 200, "paranoidli": 200, "bitrot": [201, 1178], "var": [201, 205, 244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346, 530, 837, 869, 899, 919, 924, 925, 928, 1025], "libgmock": [201, 297, 299], "gmock": [201, 1176], "dcmake_build_typ": [201, 481], "loudli": [201, 604, 840, 950], "appstream": [202, 340], "visualstudio": [202, 261, 389], "flatpakref": 202, "stone": 202, "snap": 202, "hate": [202, 598], "findpackagehandlestandardarg": 202, "gtest_librari": 202, "gtest_include_dir": 202, "gtest_main_librari": 202, "378": [202, 244, 247, 254, 292, 334, 340, 350, 1093], "_fphsa_failure_messag": 202, "197": [202, 205, 222, 231, 244, 247, 252, 254, 257, 260, 264, 267, 273, 285, 302, 306, 312, 324, 328, 334, 340, 346, 350], "find_package_handle_standard_arg": 202, "occur": [153, 202, 264, 396, 411, 416, 417, 463, 487, 570, 764, 835, 897, 926, 996, 1080, 1081, 1085, 1194], "gessmann": 202, "cpoint_demo": 202, "cmakefil": [202, 479, 485, 490, 1012, 1013], "cmakeoutput": 202, "sigh": [202, 234, 553, 756, 1127], "jail": 202, "dict_extensions_suit": 203, "thing_suit": 203, "xsv": 203, "dict_extens": 203, "wednesdai": [204, 212, 294], "thursdai": [204, 208], "publicli": [204, 586], "freedom": [204, 466, 672], "spontan": 204, "cost": 204, "agil": [204, 218, 476, 1163], "methodologi": 204, "formul": [204, 300, 478, 711, 769, 960, 1192], "diadact": [204, 1059], "anaconda": [204, 298, 340, 1059], "dictat": [204, 314, 330, 415, 454, 1005, 1059, 1060, 1145, 1162, 1164, 1191], "volumin": [204, 1059], "nodepad": [204, 1059], "configurabilti": [204, 1162], "eclips": [204, 1059, 1152], "pydev": [204, 1059], "seemingli": [204, 208, 1011, 1059, 1136], "strang": [204, 941, 1059], "emac": [204, 224, 302, 897, 919, 1011, 1059, 1162], "immutabilii": 204, "crisi": 204, "slept": 204, "lunch": 204, "squeez": 204, "Such": [204, 283, 1011, 1169], "takeawai": 204, "nonverb": 204, "antenna": 204, "Being": [204, 880, 921, 943, 1075], "stubborn": 204, "greybeard": 204, "distutil": 204, "azur": 204, "devop": [204, 1058], "heavyweight": [204, 375, 758], "reach": [204, 252, 678, 753, 776, 778, 796, 801, 868, 969, 1080], "afternoon": [204, 327], "simplic": [204, 516, 868, 935, 958, 1032], "paral": 204, "imposs": [204, 264, 462, 498, 722, 733, 835, 987], "expand": [204, 260, 306, 436, 437, 940, 969, 1011, 1013], "entertain": [204, 208, 229, 232, 255, 281, 305, 327, 1136], "david": [204, 207, 208, 216, 229, 232, 255, 281, 296, 300, 301, 305, 322, 326, 327, 370, 371, 702, 751], "beazlei": [204, 207, 208, 216, 229, 232, 255, 281, 300, 301, 305, 322, 326, 327, 370, 371], "freelanc": 204, "raymond": [204, 207, 208, 211, 215, 216, 229, 232, 239, 255, 258, 281, 305, 327], "hetting": [204, 207, 208, 211, 215, 216, 229, 232, 239, 255, 258, 281, 305, 327], "bias": 204, "humor": [204, 941, 1080], "emphas": [204, 211, 233, 589, 792, 800, 817, 1164], "hehe": [204, 211], "dissect": [204, 208, 296, 739, 1039, 1136], "multiprocess": [204, 208, 258, 300, 301, 327, 1136, 1193, 1200, 1204], "truli": [204, 208, 1136], "chri": [204, 208, 229, 1136], "wilcox": [204, 208, 229, 1136], "frontier": [204, 208, 281, 305, 327, 1136], "whop": [204, 208, 281, 305, 327, 1026, 1136, 1143], "covid": 204, "apart": [204, 264, 301, 429, 695, 935, 1037], "ipykernel_launch": [205, 257, 260, 340], "57bd7d77": 205, "6e54": 205, "4dcd": 205, "b7a8": 205, "452f82f88569": 205, "welt": [205, 215, 228, 364, 387, 1184, 1205], "doku": [205, 215, 282], "aeh": 205, "__doc__": [205, 228, 231, 241, 244, 247, 252, 254, 257, 260, 264, 267, 270, 273, 282, 285, 292, 306, 324, 328, 334, 340, 346, 362, 364, 1035, 1063, 1086], "interaktiven": 205, "modu": 205, "formatierung": [205, 215, 275], "\u00fcbernimmt": 205, "nachdem": [205, 215], "hamma": 205, "bieten": [205, 1203], "sech": [205, 215, 228, 260, 267, 292, 306], "zurueck": [205, 264, 302], "objektidentit\u00e4t": [205, 223], "0x7fe9d8578dc0": 205, "referenzieren": 205, "wechselt": 205, "zeigt": [205, 215, 1200], "identit\u00e4t": 205, "0x7fe9c4454d90": 205, "listen": [205, 211, 216, 217, 221, 256, 275, 328, 369, 821, 936, 952, 1152, 1199, 1204, 1206], "ausdrucksstark": 205, "trotzdem": [205, 1193, 1200], "lesbar": [205, 254], "beid": [205, 220, 236, 340, 1207], "modifizieren": 205, "modifik": 205, "sichtbar": [205, 387], "gerechnet": 205, "valueerror": [153, 205, 215, 231, 237, 244, 252, 254, 257, 260, 264, 267, 270, 273, 285, 292, 306, 324, 328, 334, 340, 346, 350, 1034, 1081], "typeerror": [205, 241, 244, 247, 252, 254, 257, 260, 264, 267, 270, 282, 285, 292, 302, 306, 324, 328, 334, 340, 346, 363, 1033, 1034, 1047, 1054, 1077, 1086, 1157, 1158], "gel\u00f6scht": 205, "retten": 205, "uff": 205, "140641996429568": 205, "\u00e4ndern": [205, 217, 1207], "erzeugt": [205, 215], "operanden": 205, "unver\u00e4ndert": 205, "new_l": [205, 260, 1067], "140641996429632": 205, "hurra": [205, 222, 285], "killerfeatur": 205, "abcabc": [205, 244], "sequentiel": [205, 215, 254, 259, 1188], "suche": 205, "Suche": [205, 217, 228, 236, 254], "umst\u00e4ndlich": [205, 215], "andrea": [205, 206, 264, 715, 722], "pfeifer": 205, "gefundener_us": 205, "glauben": 205, "klammern": 205, "begrenz": 205, "interpretiert": 205, "overriden": 205, "ausdruck": 205, "evaluierungsreihenfolg": 205, "9223372036854775808": 205, "einstellig": 205, "schreibt": [205, 925, 1207], "datenmengen": 205, "abzulegen": 205, "sucht": 205, "vorstellungsvermoegen": 205, "milliarden": 205, "sebastian": 205, "hugo": [205, 247], "machma": 205, "behandeln": 205, "nichtvorhandensein": 205, "ausnahm": 205, "regel": 205, "mim": 205, "victor": 205, "festzustellen": 205, "evaluiert": 205, "aufgerufen": 205, "operand": [205, 222, 241, 244, 270, 413, 414, 415, 421, 612, 613, 615, 616, 711, 744, 1054, 1068], "bereit": [205, 216, 1183, 1188, 1199], "gesamtergebni": 205, "jaja": [205, 260], "rechten": 205, "sparen": 205, "potschert": [205, 217, 220, 223, 247, 254, 267, 334, 346], "berechnung": [205, 254], "summ": [205, 228, 254, 260, 264, 267, 292, 317, 340, 346, 350], "einzig": [205, 522, 536, 1202, 1205], "iteriert": [205, 215], "bildet": [205, 260], "primitiveren": 205, "intelligenteren": 205, "0x7fe9c43c3c90": 205, "letzt": [205, 220, 265], "schleif": [205, 216, 217, 221, 1199], "jede": [205, 369, 374, 1183, 1206, 1207], "selb": [205, 215], "k\u00fcrzer": 205, "vergleicht": 205, "objektidentit\u00e4ten": 205, "objektinhalt": 205, "modifiziert": 205, "kopieren": [205, 369, 374, 1188], "vermeintlich": 205, "modifiktionen": 205, "sch\u00fctzen": 205, "l3": [205, 222, 254, 260, 270, 282, 292, 302, 312, 334, 516], "kopi": [205, 254], "klar": [205, 215, 1184], "geschachtelt": [205, 216, 217, 1199], "gleicher": 205, "referenziert": [205, 215], "erachtet": 205, "ersparst": 205, "kopien": 205, "ran": [205, 277, 327, 484, 501, 550, 551, 552, 553, 614, 753, 1028, 1176], "parametern": [205, 228], "beliebigen": [205, 925], "definieren": 205, "unterst\u00fctzen": 205, "ihn": [205, 264], "\u00e4pfel": 205, "birnen": 205, "verglichen": 205, "hingegen": [205, 215, 1202], "php": [205, 235, 251, 756], "falschem": 205, "uebergeben": 205, "vergleich": [205, 228, 236, 265, 275], "aepfeln": 205, "140641996137808": 205, "add_to_list": 205, "__defaults__": [205, 254, 264, 285, 306, 1077], "meine_list": [205, 215], "defaultwert": 205, "benutzt": [205, 1193], "allerhand": 205, "seiteneffekten": 205, "aufpassen": 205, "ewig": 205, "existierend": 205, "unf\u00e4ll": 205, "wechselwirkungen": 205, "eventuellen": 205, "globalen": [205, 215], "156": [205, 215, 222, 244, 247, 252, 254, 257, 260, 264, 267, 270, 282, 285, 302, 306, 312, 324, 328, 334, 340, 346, 350], "erzwingt": 205, "158": [205, 215, 222, 231, 244, 247, 252, 254, 257, 260, 264, 267, 270, 273, 282, 285, 289, 302, 306, 312, 324, 328, 334, 340, 346, 350], "160": [205, 215, 222, 231, 244, 247, 252, 254, 260, 264, 267, 282, 285, 296, 302, 306, 312, 324, 328, 334, 340, 346, 350, 483, 790], "gesucht": 205, "genauer": 205, "n\u00e4chst\u00e4u\u00dferen": 205, "162": [205, 215, 222, 244, 247, 252, 254, 257, 260, 264, 267, 270, 282, 285, 302, 306, 312, 324, 328, 334, 340, 346, 350], "nirgend": 205, "163": [205, 215, 222, 238, 244, 247, 252, 254, 260, 264, 267, 270, 282, 285, 302, 306, 312, 324, 328, 334, 340, 346, 350], "gibtsnetglob": 205, "gibtsnet": 205, "164": [205, 215, 222, 231, 244, 247, 252, 254, 260, 264, 267, 270, 282, 285, 302, 306, 312, 324, 328, 334, 340, 346, 350], "nameerror": [205, 220, 254, 260, 285, 306, 312, 340, 346, 1034, 1076], "aufgabenstellung": 205, "kandidat": 205, "ersten": [205, 207, 220, 312, 361, 1185, 1205, 1207], "unsportlich": 205, "zweiten": [205, 207, 312], "unnachhaltig": 205, "dritten": [205, 312], "gelegenheit": 205, "gab": [205, 207], "erz\u00e4hlen": [205, 1186], "165": [205, 215, 222, 244, 247, 252, 254, 257, 260, 264, 267, 270, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 1093], "seq": [205, 223, 285, 340, 350, 827, 999, 1037], "fromkei": [205, 251, 256, 268, 340], "166": [205, 215, 222, 244, 247, 252, 254, 260, 264, 267, 282, 285, 302, 306, 312, 324, 328, 334, 340, 346, 350], "167": [205, 215, 222, 244, 247, 252, 254, 257, 260, 264, 267, 270, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350], "xxx": [205, 222, 244, 252, 254, 260, 270, 292, 324, 328, 334, 340, 346, 363, 365, 445, 521], "kksvjhbsk": 205, "sgkysdudsvvc": 205, "dict_kei": [205, 273, 302, 1083], "diesmal": 205, "169": [205, 215, 222, 231, 244, 247, 252, 254, 257, 260, 264, 267, 273, 282, 285, 302, 306, 312, 324, 328, 334, 340, 346, 350], "170": [205, 222, 231, 238, 244, 247, 252, 254, 257, 260, 264, 267, 270, 282, 285, 302, 306, 312, 324, 328, 334, 340, 346, 350], "irgendein": [205, 237], "171": [205, 222, 224, 231, 244, 247, 252, 254, 260, 264, 267, 270, 273, 282, 285, 302, 306, 312, 324, 328, 334, 340, 346, 350, 366], "sonst": [205, 215, 252, 254, 267], "kategori": 205, "number_str": 205, "173": [205, 222, 244, 247, 252, 254, 257, 260, 264, 267, 270, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 928], "ihm": [205, 207, 216], "174": [205, 222, 244, 247, 252, 254, 257, 260, 264, 267, 273, 282, 285, 302, 306, 312, 324, 328, 334, 340, 346, 350, 919], "176": [205, 222, 244, 247, 252, 254, 257, 260, 264, 267, 270, 282, 285, 306, 312, 324, 328, 334, 340, 346, 350], "177": [205, 222, 244, 247, 252, 254, 260, 264, 267, 270, 282, 285, 302, 306, 312, 324, 328, 334, 340, 346, 350], "178": [205, 222, 231, 244, 247, 252, 254, 260, 264, 267, 273, 282, 285, 302, 306, 312, 324, 328, 334, 340, 346, 350], "179": [205, 212, 222, 244, 247, 252, 254, 257, 260, 264, 267, 270, 273, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350], "180": [205, 222, 244, 247, 252, 254, 257, 260, 264, 267, 270, 273, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 478, 821], "181": [205, 222, 244, 247, 252, 254, 260, 264, 267, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 478, 1158], "heisst": [205, 217, 221, 222, 1187, 1193], "sequenz": 205, "kopiert": 205, "unterschi": [205, 222, 228, 252], "sobald": [205, 207], "183": [205, 222, 231, 244, 247, 252, 254, 260, 264, 267, 270, 273, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350], "\u00fcbergeben": 205, "184": [205, 222, 244, 247, 252, 254, 257, 260, 264, 267, 273, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350], "it1": 205, "it2": 205, "multipli": [205, 232, 245, 264, 306, 701], "n2": [205, 264], "combined_iter": 205, "186": [205, 222, 231, 244, 247, 252, 254, 257, 260, 264, 267, 270, 273, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350], "schlecht": 205, "simplen": 205, "transformationen": 205, "generieren": 205, "quadratzahlen": [205, 254], "187": [205, 244, 247, 252, 254, 260, 264, 267, 270, 273, 282, 285, 292, 302, 306, 312, 324, 328, 340, 346, 350], "quadrat": 205, "naeherung": 205, "performant": 205, "gen_squar": 205, "189": [205, 222, 244, 247, 252, 254, 257, 260, 264, 267, 273, 282, 285, 302, 306, 312, 324, 328, 340, 346, 350], "syntaktisch": [205, 228], "191": [205, 222, 231, 244, 247, 252, 254, 260, 264, 267, 270, 273, 282, 285, 302, 306, 312, 324, 328, 340, 346, 350], "genexpr": [205, 231, 324, 334, 340], "0x7fe9c43f2900": 205, "193": [205, 222, 231, 244, 247, 252, 254, 260, 264, 267, 270, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350], "194": [205, 222, 231, 244, 247, 252, 254, 257, 260, 264, 267, 273, 282, 285, 292, 306, 312, 324, 328, 334, 340, 346, 350], "195": [205, 222, 244, 247, 252, 254, 257, 260, 264, 267, 273, 285, 306, 312, 324, 328, 334, 340, 346, 350], "indent": [205, 220, 238, 245, 251, 260, 261, 424, 1057, 1060, 1070, 1161], "196": [205, 222, 231, 244, 247, 252, 254, 257, 260, 264, 267, 273, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350], "userlist": 205, "nochwa": [205, 254, 292, 350], "dropdown": 205, "dropdownlist": 205, "fehleranf\u00e4llig": 205, "198": [205, 222, 231, 244, 247, 252, 254, 257, 260, 264, 267, 273, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350], "202": [205, 222, 231, 241, 244, 247, 252, 254, 257, 260, 264, 267, 270, 282, 285, 292, 306, 312, 324, 328, 340, 346, 350, 478, 501], "203": [205, 222, 231, 233, 244, 247, 252, 254, 257, 260, 264, 267, 282, 285, 306, 312, 324, 328, 334, 340, 346, 350], "205": [205, 231, 244, 247, 252, 254, 257, 260, 264, 267, 270, 282, 285, 302, 306, 312, 324, 328, 334, 340, 346, 350], "206": [205, 244, 247, 252, 254, 260, 264, 267, 270, 282, 285, 306, 312, 324, 328, 334, 340, 346, 350], "207": [205, 231, 244, 247, 252, 254, 260, 264, 267, 270, 285, 306, 312, 328, 334, 340, 346, 350], "208": [205, 244, 247, 252, 254, 260, 264, 267, 270, 285, 306, 312, 324, 328, 334, 340, 346, 350], "209": [205, 231, 244, 247, 252, 254, 260, 264, 267, 270, 282, 285, 306, 312, 324, 328, 334, 340, 346, 350], "user_a": 205, "user_b": 205, "n\u00e4herung": 205, "nackten": [205, 1186], "210": [205, 231, 244, 247, 252, 254, 260, 264, 267, 285, 292, 306, 312, 324, 328, 334, 340, 346, 350], "hantiert": [205, 1187], "anderem": [205, 1193, 1200], "211": [205, 231, 244, 247, 252, 254, 260, 264, 267, 270, 282, 285, 302, 306, 312, 328, 334, 340, 346, 350], "reviewten": 205, "funktionsaufruf": [205, 267], "sonder": 205, "stackoverflowprogrammierung": 205, "entgegenwirken": 205, "ausholen": 205, "212": [205, 231, 244, 247, 252, 254, 257, 260, 264, 267, 270, 282, 285, 306, 312, 324, 334, 340, 346, 350], "veloc": [205, 231, 365, 1077], "length_m": [205, 231, 365, 1077], "time_": [205, 231, 365, 1077], "213": [205, 244, 247, 252, 254, 257, 260, 264, 267, 270, 282, 285, 306, 312, 334, 340, 346, 350], "spiel": 205, "214": [205, 244, 247, 252, 254, 260, 264, 267, 270, 282, 285, 306, 312, 324, 334, 340, 346, 350], "liegen": 205, "positionel": 205, "215": [205, 244, 247, 252, 254, 260, 264, 267, 270, 282, 285, 292, 306, 312, 334, 340, 346, 350], "param": [205, 215, 228, 245, 273, 306, 707, 756, 757, 942, 998], "216": [205, 231, 244, 247, 252, 254, 260, 264, 267, 282, 285, 292, 306, 312, 324, 328, 334, 340, 346, 350], "217": [205, 244, 247, 252, 254, 257, 260, 264, 267, 270, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350], "218": [205, 244, 247, 252, 254, 257, 260, 264, 267, 270, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350], "219": [205, 231, 244, 247, 252, 254, 260, 264, 267, 270, 282, 285, 302, 306, 312, 324, 334, 340, 346, 350], "entpacken": 205, "positionellen": 205, "221": [205, 231, 244, 247, 252, 254, 260, 264, 267, 270, 282, 285, 292, 302, 306, 312, 324, 328, 340, 346, 350], "kwarg": [205, 231, 258, 260, 264, 285, 306, 1032, 1036, 1057], "explizi": 205, "rauskletzeln": 205, "223": [205, 244, 247, 252, 254, 257, 260, 264, 267, 270, 285, 292, 306, 312, 324, 328, 334, 340, 346, 350, 1149], "celebrate_another_birthdai": 205, "224": [205, 244, 247, 252, 254, 257, 260, 264, 267, 270, 285, 292, 306, 312, 328, 334, 340, 346, 350], "227": [205, 244, 247, 252, 254, 260, 264, 267, 270, 285, 292, 302, 306, 312, 324, 334, 340, 346, 350], "228": [205, 244, 247, 252, 254, 257, 260, 264, 267, 270, 285, 292, 306, 312, 324, 334, 340, 346, 350], "zeiterfassung": 206, "__pycache__": [206, 232, 245], "supp": 206, "cpython": [206, 231, 241, 247, 257, 260], "pyc": 206, "dienstag": 207, "anleitung": 207, "offen": [207, 387, 1183], "vorwissen": [207, 1188], "konkreten": [207, 387], "aufgabenstellungen": 207, "dienstgeb": 207, "mitgebracht": 207, "quickstart": [207, 1194], "wenngleich": [207, 387, 1193, 1203, 1205, 1206], "un\u00fcblichen": 207, "reihenfolg": [207, 1184], "verbrachten": 207, "firmenprojekt": 207, "entspringenden": 207, "festgehalten": 207, "empfehlungen": 207, "weitergehen": 207, "k\u00f6nnte": [207, 1207], "idiomat": [207, 208, 211, 229, 232, 239, 255, 258, 281, 305, 1136], "lieblingsphras": 207, "bringt": [207, 1186, 1205], "forgiv": [207, 208, 305, 1136], "eafp": [207, 208, 305, 1136], "begriff": [207, 221], "viertelstund": 207, "regex": [207, 220, 245, 247, 272, 273, 282, 305, 312, 340, 1079, 1136], "unumg\u00e4nglich": [207, 1201], "textuel": 207, "analysieren": 207, "hero": [207, 208, 229, 232, 255, 281, 305, 327, 1136], "unterhaltsamen": 207, "keynot": [207, 208, 229, 232, 255, 258, 281, 305, 327, 1136], "konferenz": 207, "pydata": [207, 208, 229, 232, 255, 281, 305, 327, 1136], "chicago": [207, 208, 229, 232, 255, 281, 305, 327, 1136], "witzig": 207, "selten": 207, "l\u00e4nge": 207, "ganzen": [207, 216, 1199], "abend": 207, "totalschaden": 207, "\u00fcbertragen": 207, "jedem": 207, "angemeldet": 207, "experienc": [208, 297, 299, 326, 387, 1063, 1194], "machinelearn": 208, "fuzzi": [208, 247], "improvis": 208, "shall": 208, "jango": 208, "rush": 208, "strong": [208, 258, 414, 1143, 1145], "claus": [208, 211, 241, 247, 257, 262, 284, 716, 1037, 1070, 1073], "whet": [208, 291], "appetit": [208, 291], "__dict__": [208, 228, 231, 232, 244, 245, 254, 257, 260, 264, 273, 285, 302, 306, 324, 346, 1048, 1054], "con": [208, 774, 922, 1028], "fiction": 208, "get_temperature_celsiu": 208, "competitor": 208, "eana": 208, "get_temperature_fahrenheit": 208, "eanaadapt": 208, "unserthermomet": 208, "revisit": [208, 250, 258, 281, 299, 323, 629], "shift": [208, 249, 454, 466, 598, 647, 942, 1054], "visitor": [208, 770, 779, 781], "gang": [208, 1192], "idiom": [208, 595, 732], "classic": [208, 453, 504, 595, 775, 789, 790, 829, 1192], "travers": [208, 467, 740, 752, 1034, 1039, 1075], "convolut": 208, "__call__": [208, 254, 264, 285, 306, 312, 1033], "__str__": [208, 231, 232, 245, 254, 257, 260, 264, 282, 285, 306, 323, 324, 346, 380, 1034], "__repr__": [208, 254, 257, 260, 264, 282, 285, 306, 324, 346], "poor": [208, 250, 407, 422, 431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790, 827, 934, 964, 1009], "deleg": [208, 337, 604, 734, 789, 790, 1189], "deck": [208, 233, 572], "sensordata": 208, "sensordata_test": 208, "historydata": 208, "slowli": [208, 589, 694, 819, 934], "csvreport": 208, "csv2sqlite3": 208, "frontend": [208, 605, 1011, 1029, 1165], "flaskerl": 208, "reiter": [208, 229, 248, 250, 255, 258, 377, 606, 1136], "phrase": [208, 211, 229, 252, 254, 255, 258, 260, 285, 864, 865, 1052, 1136], "impress": [208, 452], "brought": [208, 466, 1043], "cloth": 208, "extraordinari": 208, "mondai": [209, 211, 213, 214, 239, 288, 294, 297, 299, 353], "preliminari": [209, 211, 212, 213, 214], "homogen": [209, 387], "versu": [209, 211, 213], "immut": [209, 211, 213, 215, 216, 223, 230, 232, 243, 244, 245, 247, 253, 259, 262, 268, 274, 283, 291, 293, 294, 307, 324, 328, 335, 341, 364, 436, 1058, 1065, 1066, 1067, 1071, 1199], "datastructur": [209, 233, 251, 1071], "exercise4": 209, "uh2ebfw8oym": [209, 213], "f26namfjggw": 209, "5qqq3yzbkp8": 209, "ugharkscop9uthgcoaec": 209, "pairwis": [210, 244, 611], "vale": 210, "bewar": [210, 415, 941, 1009, 1141, 1143], "simplest": [210, 272, 479, 496, 629, 636, 743, 764, 842, 872, 926, 990, 1023, 1061, 1066, 1169, 1177], "cheaper": [210, 466, 613, 615, 616, 694], "memorywis": 210, "johann": 210, "syntact": [210, 231, 423, 566, 606, 694, 746], "sugar": [210, 694, 746], "allow": [210, 211, 231, 260, 409, 476, 681, 754, 788, 819, 842, 1098, 1169, 1189], "retval": [210, 462, 652, 980], "dlc": 210, "msg1": 210, "readabl": [210, 254, 264, 298, 402, 433, 437, 457, 458, 459, 466, 476, 478, 537, 651, 672, 687, 695, 698, 733, 744, 746, 752, 757, 758, 872, 882, 888, 893, 897, 919, 944, 1011, 1037, 1056, 1077, 1085, 1087, 1107], "0x7f41f5ff26a0": 210, "msglist": 210, "0x7f41f5ff4160": 210, "0x7f41f5ff41c0": 210, "291130": 210, "now_timestamp": 210, "1603884859": 210, "3412576": 210, "fromtimestamp": 210, "341258": 210, "372": [210, 247, 254, 292, 340, 350], "45259": 210, "microsecond": [210, 457, 874], "programmverweis": 211, "xy": [211, 254, 257, 292, 614, 1075], "zab": 211, "eventcodefil": 211, "definedlisaev": 211, "event_id": 211, "bla": [211, 334, 340], "blubb": 211, "verbessert": 211, "stringformatierung": 211, "ctype": 211, "headerfil": [211, 925], "lst": [211, 247, 879, 1184], "callbackfunc": 211, "datetim": [211, 232, 238, 239, 240, 245, 293, 296, 333, 334, 1093], "observ": [211, 280, 298, 354, 493, 500, 514, 517, 528, 542, 594, 790, 1040, 1041, 1148, 1192], "longish": 211, "resurrect": [211, 479, 897], "outputsequ": 211, "resist": 211, "uncondition": [211, 840, 1034], "suitabl": [211, 260, 306, 810, 934, 983, 1047, 1056], "analysi": [211, 466, 775, 1138, 1141, 1154], "cp1252": [211, 1130, 1131, 1133], "csvlog": 211, "csv_reader": 211, "recv": [211, 212, 937], "tuesdai": [212, 294, 309], "246": [212, 244, 247, 252, 254, 257, 260, 267, 285, 302, 306, 312, 334, 340, 346, 350, 1149], "corpor": [212, 285], "commandin": [212, 214], "comress": [212, 214], "gzip": [212, 214, 278, 287, 308, 309, 352, 790, 837, 860, 862, 863, 867, 933, 1021, 1022, 1195], "diagnos": [212, 214, 370, 371, 1193, 1200], "netstat": [212, 214, 287, 308, 309, 352, 1152, 1193, 1200], "netcat": [212, 214, 287, 308, 309, 352], "subshel": [212, 214, 224], "telnetd": 212, "insecur": [212, 950], "proto": 212, "foreign": [212, 288, 437], "34490": 212, "56062": 212, "sshd": [212, 244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346, 869, 873, 875, 928, 944, 954], "systemctl": [212, 1025, 1152], "freedesktop": 212, "systemd1": 212, "quickli": [212, 299, 314, 326, 327, 330, 372, 436, 496, 942, 1191], "unprivileg": 212, "putti": [212, 224, 366], "puttygen": 212, "id_rsa": [212, 950], "authorized_kei": [212, 950], "trivia": 212, "hoorai": [212, 257, 270, 292, 346, 1070], "idiot": 212, "blinker": 212, "briana": 212, "mac": [212, 229, 245, 897, 1061, 1136, 1172], "wakeup": [213, 250, 327, 346, 380, 384, 766, 790, 833, 933, 942, 961, 974, 984, 994, 996], "patrick": 213, "1996": [213, 247], "wagna": 213, "gernot": 213, "1982": [213, 247], "birthplac": 213, "txt2json": 213, "equip": [214, 288, 377, 934, 1193, 1200], "deppert": [215, 228, 364], "sidestep": 215, "builtin_function_or_method": [215, 285, 312, 334], "sozusagen": 215, "genauso": [215, 1183], "aufrufen": [215, 925], "zaehler": 215, "initialwert": 215, "zaehlen": 215, "naechsten": 215, "schleifendurchlauf": 215, "locker": [215, 835], "mein_integ": 215, "1024": [215, 247, 868, 874, 897, 959], "sch\u00fctzt": 215, "passen": [215, 282], "gehandhabt": 215, "1267650600228229401496703205376": [215, 241, 244, 252, 264, 270, 292], "hoch": 215, "rechnen": [215, 369, 374], "tut": [215, 324, 364, 1186], "ausschliesslich": [215, 1195], "ganzzahldivis": 215, "ganzzahligen": 215, "resultat": 215, "gleichen": [215, 1193, 1206], "vorrang": 215, "ghi": [215, 254, 340, 346], "viert": 215, "nwelt": 215, "nwie": 215, "linefe": [215, 224, 245, 252, 398, 399, 1079, 1085, 1116, 1161], "bedeutung": [215, 1188, 1195], "unangetastet": 215, "glump": 215, "nebenlaeufigkeitsdemo": 215, "ebenlaeufigkeitsdemo": 215, "l\u00f6sung": [215, 228, 237, 387, 936], "formatierungsm\u00f6glichkeit": 215, "pfx_var1": 215, "pfx_var2": 215, "ausgab": [215, 1186], "notwendig": [215, 1185, 1201, 1202], "abzubrechen": 215, "ignorieren": [215, 216, 222, 1199], "gefunden": [215, 285, 925], "value1": [215, 1096], "501": [215, 247, 340, 350, 1096], "value2": [215, 1096], "799": [215, 244, 247, 1093, 1096], "value3": [215, 1096], "sprachen": [215, 216, 1186, 1199], "neg": [215, 260, 264, 334, 350, 415, 457, 462, 674, 815, 928, 1176], "indiz": 215, "erscheinen": 215, "komisch": 215, "bequem": 215, "mapping_t": 215, "f\u00fcnf": [215, 1193], "sieben": [215, 228, 254, 652], "neun": [215, 340, 350], "explicit": [215, 234, 241, 245, 254, 262, 264, 412, 421, 449, 462, 466, 479, 521, 522, 535, 536, 572, 598, 600, 601, 625, 651, 694, 695, 704, 711, 716, 724, 731, 736, 751, 754, 808, 963, 977, 1009, 1029, 1030, 1060, 1063, 1066, 1144, 1157], "implicit": [215, 241, 254, 264, 402, 408, 412, 577, 693, 695, 711, 897, 966, 1052, 1066], "primzahlen": 215, "checken": 215, "primzahl": [215, 216, 1199], "checkenden": 215, "zahl": [215, 222, 228, 253, 254, 257, 267, 364], "probier": 215, "gach": [215, 254], "teiler": 215, "teiler_kandidaten": 215, "prim": 215, "gleichema\u00dfen": 215, "vollst\u00e4ndigkeit": 215, "halber": 215, "startend": [215, 254], "schrittweit": 215, "0x7f24f2ac0e50": 215, "ablegen": 215, "0x7f24f2ac0e70": 215, "arschlangsam": 215, "num_comparison": 215, "datenstruktur": [215, 236], "suchen": [215, 236, 924, 1188, 1195], "einf\u00fcgen": [215, 1193], "optimiert": [215, 228], "perfekt": 215, "einitreten": 215, "himmi": 215, "list_reverseiter": [215, 244, 267, 292], "0x7f24ec31d190": 215, "bricht": 215, "beinhart": 215, "liefert": [215, 1195], "lieber": 215, "zweit": [215, 228, 254, 285, 324, 340, 364, 1193], "po": [215, 254, 260, 264, 285, 290, 302, 306, 328, 334, 350, 478, 554, 647, 674], "wirklichkeit": 215, "ordin\u00e4r": 215, "alternativen": 215, "fruit": 215, "gemma": 215, "divisor_candid": [215, 350], "161": [215, 222, 244, 247, 252, 254, 257, 260, 264, 267, 270, 282, 285, 302, 306, 312, 324, 328, 334, 340, 346, 350], "wegen": 215, "dogma": 215, "zugewiesen": 215, "meine_vari": 215, "eine_vari": [215, 292, 302, 334], "angelegt": 215, "streng": 215, "obigem": 215, "dazusagen": 215, "noch_eine_globale_vari": 215, "increment_diese_vari": 215, "offiziel": [216, 218, 226, 229, 232, 233, 235, 251, 263], "leitfaden": 216, "kommentar": [216, 217, 228, 292, 364, 1199], "platziert": [216, 236], "hackereien": 216, "gleicherma\u00dfen": 216, "sogenannten": 216, "semantik": [216, 217, 1199], "sprach": [216, 217, 1186, 1187, 1188, 1199, 1200, 1207], "standarddatentypen": [216, 217, 1199], "literal": [216, 217, 275, 1199], "python2": [216, 254, 1199], "endg\u00fcltig": [216, 1199], "rausl\u00f6schen": [216, 1199], "konstanten": [216, 217, 1199], "typen": [216, 222, 1195, 1199, 1205], "operatoren": [216, 217, 925, 1188, 1199], "angeschnitten": [216, 1199], "vertiefung": [216, 232, 1199], "nocheinm": [216, 387, 1199], "ausdr\u00fcck": [216, 217, 275, 1199], "operatorrangfolgen": [216, 217, 1199], "grundlegenden": [216, 370, 1195, 1199], "sprachelementen": [216, 1199], "rede": [216, 1199], "syntaxdiagramm": [216, 1199], "gespritzt": [216, 1199], "gesamt": [216, 1199], "sperrig": [216, 1199], "n\u00fctzt": [216, 1199], "menschlich": [216, 1199], "abzubilden": [216, 1199], "tabel": [216, 1199], "anweisungen": [216, 217, 1199], "gro\u00dfen": [216, 1199], "fisch": [216, 1199], "instruktiv": [216, 1199], "bedingungen": [216, 217, 1185, 1199], "verzweigungen": [216, 217, 1199], "bedingt": [216, 217, 1186, 1199], "anweisung": [216, 217, 1199], "formulierungen": [216, 1199], "mehrfach": [216, 217, 1199], "fallauswahl": [216, 217, 1199], "benutzereingaben": [216, 1199], "\u00fcberpr\u00fcfen": [216, 1199], "schleifenkonstrukt": [216, 1199], "weitgehend": [216, 1199], "unserem": [216, 1199], "vehikel": [216, 1199], "hilfreich": [216, 1195, 1199], "klarstellung": [216, 1199], "fu\u00dfgesteuert": [216, 217, 1199], "z\u00e4hlergesteuert": [216, 217, 1199], "auslassen": [216, 1199], "kopfgesteuert": [216, 217, 1199], "gewinnt": [216, 1199], "konsol": [216, 1199], "anzeigen": [216, 1195, 1199], "voraussetzung": [216, 1199], "ausblick": [216, 1199], "schnell\u00fcbersicht": [216, 217, 1199], "sprunganweisungen": [216, 217, 1199], "endlosschleifen": [216, 217, 1199], "naja": [216, 1199], "reinschauen": [216, 1199], "mager": [216, 1199], "ausgelassen": [216, 1199], "eindimensional": [216, 217, 1199], "gefolgt": [216, 254, 1199], "zeichenketten": [216, 217, 1199], "tupel": [216, 217, 220, 1199], "besonder": [216, 217, 1199], "stapel": [216, 217, 1199], "schlangen": [216, 217, 1199], "tempo": [216, 1199], "schauma": [216, 222, 1199], "fallt": [216, 1199], "gscheit": [216, 223, 334, 1199], "gemeinsam": [216, 1183, 1185, 1199, 1202], "dr\u00fcber": [216, 1199], "vielzahl": [216, 1199, 1203, 1206], "l\u00f6sungsm\u00f6glichkeiten": [216, 1199], "eingegangen": [216, 1183, 1199, 1203], "pythonischst": [216, 1199], "bestritten": [216, 1199], "unterprogramm": [216, 217, 1199], "parameter\u00fcbergab": [216, 217, 1199], "r\u00fcckgabewert": [216, 217, 1199], "inner": [216, 217, 237, 346, 478, 1033, 1199], "standardbibliotheken": [216, 217, 1199], "funktionalit\u00e4ten": [216, 217, 1199], "berechnet": [216, 252, 260, 1199], "satz": 216, "gepr\u00e4gt": 216, "konferenzen": 216, "definitiv": 216, "sehenswert": 216, "anf\u00e4nger": [216, 1202], "hochinteress": 216, "sprachelement": 217, "elementar": 217, "beliebig": [217, 252, 1200], "gro\u00df": [217, 1205], "vergleichsoperatoren": 217, "strichrechnung": 217, "modulo": [217, 228, 241, 247, 252, 260, 364, 413, 1054, 1066], "un\u00e4rer": 217, "negat": [217, 241, 264, 926, 1054, 1066, 1084], "konvertierungen": [217, 1186], "pr\u00e4zendenzregeln": 217, "vertauschen": [217, 228, 364], "kontrollstrukturen": [217, 253, 1186], "verzweigung": 217, "schleifen": [217, 275, 1185], "versuch": [217, 229, 340, 346], "hybrid": [217, 668], "supergscheit": 217, "prozeduren": 217, "funktionen": [217, 221, 275, 370, 1185, 1186, 1188, 1196], "funktionspoint": 217, "funktionsobjekt": 217, "primzahlenbeispiel": 217, "laufzeitfehl": 217, "lokal": [217, 228, 274, 275, 1206], "zuweisen": 217, "fehlerfal": 217, "anschliessend": 218, "interaktiv": 218, "uebungen": 218, "idealerweis": [218, 292], "ueblichen": 218, "negoti": 219, "deiniti": [219, 815, 1194], "unload": [219, 817, 831, 833, 1194], "synchronizt": 219, "spinlock": [219, 790, 814, 829, 835, 839, 841, 845, 846, 852, 855, 856, 858, 933, 997, 1194], "rcu": 219, "halv": 219, "softirq": 219, "tasklet": [219, 835], "irss": 219, "kmalloc": [219, 790, 799, 804, 807, 808, 809, 814, 818, 827, 828, 832, 834, 841, 846, 849, 852, 855, 858, 933], "dma": [219, 790, 814, 832, 834, 876, 933, 958, 959, 960, 1194], "coher": [219, 808], "20201125": [220, 222], "unbekannten": 220, "lookup_t": [220, 223, 364], "12345": [220, 252, 264, 292, 340, 1170], "noch_eine_list": 220, "gesamte_list": 220, "vorl\u00e4ufig": 220, "letz": 220, "indented_text": 220, "nebenbei": [220, 222, 364], "eine_zum_sterben_verurteilte_vari": 220, "ein_set": 220, "sequenzen": 220, "grottenlangsam": 220, "subscript": [220, 254, 324, 346, 442, 629, 650, 654, 1157], "multiple_return_valu": 220, "xyz": [220, 222, 228, 247, 254, 285], "mein_formatierter_str": 220, "my_rang": [220, 260, 306, 312, 334], "retlist": 220, "zeichenkett": 220, "funktionieren": [220, 1188, 1206], "my_list": [220, 231, 273], "airms_eth": 220, "simplizistisch": 220, "bl\u00f6d": 220, "i_oder_v": 220, "iv": 220, "rms_eth": 220, "vorcompilieren": 220, "acirms_eth": 220, "my_regex": 220, "zeilennumm": 220, "dazuhaben": 220, "meine_zu_sendenden_daten": 220, "345": [220, 241, 247, 260, 292, 324, 334, 340, 346, 350], "234": [220, 244, 247, 252, 254, 257, 260, 264, 267, 270, 285, 302, 306, 312, 324, 328, 334, 340, 346, 350, 364], "meine_zu_sendenden_daten_in_string_form": 220, "ueblicherweis": 220, "ueber": 220, "verschickt": 220, "empfangen": [220, 235], "geschrieben": [220, 1206], "empfaeng": 220, "empfangenen": 220, "natuerlich": 220, "zurueckkonvertieren": 220, "meine_empfangenen_daten_python_form": 220, "gegangen": [220, 273], "wurscht": [220, 260, 334, 925], "returnwerten": 221, "containerdatentypen": 221, "untypisiert": 221, "zeilen": [222, 264, 1195], "neiner": 222, "nund": [222, 241], "nb": 222, "stoppt": 222, "newlin": [222, 224, 237, 260, 285, 302, 360, 391, 398, 411, 1063, 1079], "ndrin": 222, "drin": [222, 223, 228, 264, 292, 302, 340, 364, 369], "zuviel": [222, 1188], "mischt": 222, "unsupport": [222, 244, 270, 1054], "140546731085392": 222, "0x7fd395fb0e50": 222, "0x7fd3900395b0": 222, "new_t": [222, 1067], "0x7fd390052800": 222, "667": [222, 244, 247, 267, 273, 589], "2923750584022716461": 222, "529344067295497451": 222, "unhash": [222, 282, 292, 306, 334, 346], "fuenf": [222, 244, 254, 282, 292, 306, 324, 340, 350, 364], "verschluckt": 222, "6000000": 222, "elementen": [222, 236], "nonetyp": [222, 232, 246, 247, 302, 312, 324, 340, 346], "_io": [222, 241, 244, 247, 257, 260, 292, 306, 340, 361, 839], "textiowrapp": [222, 241, 244, 247, 257, 260, 292, 306, 340, 361, 1032], "oi": 222, "456": [222, 223, 247, 254, 292, 340, 411], "hansi": [222, 260, 264, 267], "linspac": [222, 328], "11111111": 222, "22222222": 222, "33333333": 222, "44444444": 222, "55555556": 222, "66666667": 222, "77777778": 222, "88888889": 222, "sin": 222, "8961922": 222, "79522006": 222, "19056796": 222, "96431712": 222, "66510151": 222, "37415123": 222, "99709789": 222, "51060568": 222, "54402111": 222, "plot": [222, 241, 270, 273, 324, 328, 334, 346, 1031, 1090, 1142, 1143], "line2d": [222, 270, 273, 324, 328, 334, 346], "0x7fd35cd3ef40": 222, "splev": 222, "splrep": 222, "spline": 222, "represent": [222, 241, 260, 350, 740, 847, 941, 942], "spl": 222, "evalu": [222, 241, 246, 252, 262, 394, 414, 419, 421, 429, 436, 437, 515, 516, 529, 530, 701, 711, 880, 897, 1034, 1068, 1070, 1077, 1176], "x2": [222, 264], "y2": 222, "0x7fd341a486d0": 222, "speicher": [223, 1186, 1193, 1200], "sch\u00fctze": 223, "gemischten": 223, "operationen": [223, 1205], "interpol": [223, 264, 1141], "lag": 223, "gib": [223, 302], "depp": [223, 252], "ret_l": 223, "uniq_l": 223, "read_excel": [223, 1141], "invit": [224, 668], "effici": [224, 269, 323, 426, 465, 467, 469, 630, 634, 644, 647, 749, 881, 928, 930, 1039, 1143, 1154, 1157, 1194], "expans": [224, 925, 926, 1185], "ecdsa": [224, 366], "fingerprint": [224, 366, 945, 996], "sha256": [224, 366, 945], "in22o4vcd400x0bb4flcb5": [224, 366], "vqnrvkvoirgfqq6mapo": [224, 366], "perman": [224, 366], "individu": [224, 366, 418, 476], "sat": [224, 366], "straight": [224, 716, 1158], "startung": 224, "standpoint": 224, "suboptim": [224, 273], "pwned": 224, "hidden": [224, 507, 702, 810, 1011], "clumsi": [224, 250, 251, 291, 294, 492, 496, 596, 604, 612, 625, 652, 694, 757, 1031, 1032, 1048, 1049, 1157, 1189], "clumsier": 224, "dumpbin": 224, "hmoe": 224, "frcoll": 224, "bunch": [224, 758, 864, 1023, 1047], "oom": [224, 244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346, 1038], "killer": [224, 244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346, 1072], "amoc": 224, "snapshot": [224, 736, 769, 875, 1023], "tinkernut": 224, "raspberi": 224, "awesom": [224, 1169], "tunnel": [224, 290, 944, 952, 963], "centric": [224, 1194], "virtualbox": [224, 876], "cygwin": [224, 277, 279, 297, 876], "assort": 224, "nano": 224, "univers": [224, 299, 553, 963, 1060, 1194], "scripe": 224, "voellig": 228, "wohl": [228, 312, 1186, 1207], "selbsterklaerend": 228, "printet": 228, "builtin": [228, 234, 241, 247, 248, 257, 260, 264, 285, 306, 323, 324, 334, 340, 350, 897, 1035], "accur": [228, 260, 264, 285, 306, 471], "__weakref__": [228, 244, 254, 257, 260, 264, 273, 285, 306, 324], "weak": [228, 260, 264, 285, 306, 324, 755, 1143], "_abc": [228, 241, 247, 257, 260], "_1": [228, 757, 758], "a123": 228, "vernichten": 228, "laufzeit": 228, "140032702361168": 228, "refcount": [228, 753, 755, 1032, 1189], "dezim": 228, "oktal": 228, "0o755": [228, 264, 364], "493": [228, 247, 264, 340, 350], "0b11": [228, 264, 267], "sql": [228, 239, 251, 1145, 1148], "0b11111111": 228, "ordnung": 228, "uhrzeit": 228, "vormittag": 228, "6666666666666666": [228, 264], "nda": [228, 282], "python_dir": 228, "jan": [228, 257, 260, 360, 361, 378, 411, 775, 801, 893, 919, 977, 1011, 1025, 1062], "lowercas": [228, 260, 306, 897, 944, 1080, 1098, 1103], "140032636418048": 228, "ein_iterierbares_d": 228, "extraw\u00fcrschtl": 228, "sex": [228, 241, 263, 264, 1098], "diver": 228, "translation_t": [228, 264, 267, 270, 340], "bag": [228, 276, 277, 279, 479, 489, 787, 789, 790, 1005, 1067], "green": [228, 264, 518, 553, 554, 614, 934], "blue": [228, 236, 244, 264, 1093], "mengenoperationen": 228, "set1": 228, "set2": 228, "symm_diff": 228, "lisa": 228, "eugeni": [228, 231], "okan": 228, "mcguir": 228, "sinner": 228, "implicitli": [228, 233, 244, 443, 493, 601, 609, 699, 707, 800, 967, 1032, 1064, 1149], "vornam": [228, 236, 237], "nachnam": [228, 236, 237], "persnr": 228, "personalnumm": 228, "5000": [228, 241, 247, 1051], "4000": [228, 247], "3000": [228, 241, 247, 267, 306], "15000": [228, 247], "uppercas": [228, 260, 306, 897, 1080, 1098], "verfuegbar": 228, "restlichen": 228, "gehaelt": 228, "konstant": [228, 236, 259], "unexpect": [228, 456], "pcap": [229, 249], "certifi": 229, "math": [229, 232, 242, 244, 245, 247, 255, 264, 269, 272, 305, 311, 334, 596, 598, 1060, 1136], "statist": [229, 242, 255, 264, 269, 272, 305, 311, 470, 999, 1120, 1136, 1141, 1169], "undo": [229, 897, 1136], "brad": [229, 1136], "traversi": [229, 1136], "evaluierung": 230, "eval": [230, 258, 259, 268, 286, 300, 301, 306, 313, 322, 325, 326, 1056], "openfil": 231, "hanld": 231, "soemth": [231, 851], "zf": [231, 340], "namelist": 231, "zipdemo": 231, "extracted_nam": 231, "isinst": [231, 232, 245, 247, 260, 273, 285, 1054, 1158], "superclass": [231, 232, 245, 260], "subclass": [231, 232, 245, 260, 264, 1034, 1051], "class1": 231, "class2": 231, "salari": 231, "selina": 231, "orgl": 231, "8010": [231, 247, 478], "birth": [231, 257, 270, 596, 788, 1125, 1126, 1127, 1128, 1131, 1132, 1133], "1622102062": 231, "4778333": 231, "019427776336669922": 231, "009679079055786133": 231, "daniel": [231, 234, 360, 361, 378], "ortner": 231, "num_employe": 231, "__first": 231, "__last": 231, "__address": 231, "_person__first": 231, "_person__last": 231, "_person__address": 231, "_first": 231, "_last": 231, "_address": 231, "do_debug": 231, "val": [231, 260, 757, 942], "ueberhaupt": 231, "l_float": 231, "0x7fd9881b04a0": 231, "functool": [231, 298], "wrapper": [231, 260, 270, 275, 312, 334, 499, 697, 722, 957, 1005, 1033, 1054, 1138], "komplexen": 231, "testfil": 231, "nzeil": [231, 260, 328], "seek": [231, 306, 340, 361], "nth_fibo": 231, "accomod": 231, "0x7fd9801cec10": 231, "0x7fd9801b8d60": 231, "0x7fd9801b4900": 231, "0x7fd98014cd40": 231, "gen": [231, 306], "sequenceno": 231, "kv_pair": 231, "permissionerror": [231, 247, 267, 285, 302, 1034], "deni": [231, 247, 267, 302, 340, 521, 535, 880, 916, 944, 952, 964, 969, 970, 1034, 1164], "eacc": 231, "filenotfounderror": [231, 247, 285, 1034], "64bit": 231, "utc": 231, "python_implement": [231, 232, 245], "python_version_tupl": [231, 232, 245], "python39": 231, "dynload": [231, 340], "isfil": [231, 354, 478], "isdir": [231, 478], "my_path": 231, "hopefulli": 231, "the_except": 231, "__class__": [231, 254, 257, 260, 264, 273, 282, 285, 306, 324, 346], "__bases__": [231, 232, 245, 262], "distrust": 231, "guido": [231, 1160], "incompet": 231, "precondit": [231, 866], "abdefg": 231, "beg": [231, 437, 1035], "bdefg": 231, "stringifi": 231, "0x7ffa9c2ac3a0": 231, "formatstr": 231, "ding": [231, 261, 1004], "formatierter_str": 231, "oserror": [232, 260, 285, 1034], "errno": [232, 245, 247, 267, 302, 462, 815, 964, 979, 1008, 1009, 1026, 1034, 1164], "assertionerror": [232, 257, 273, 285, 324, 1034, 1047, 1169, 1170], "jjjj": [232, 382, 383, 475], "line_count": 232, "aud": 232, "qualifii": [232, 245], "trunc": [232, 245], "hypot": [232, 245], "seed": [232, 245, 264, 548], "ascii": [232, 245, 260, 267, 270, 285, 306, 312, 328, 334, 340, 398, 401, 404, 410, 1065, 1066, 1079, 1085, 1144], "codepoint": [232, 245], "escap": [232, 245, 252, 260, 282, 391, 1144], "ord": [232, 245, 264, 285, 1074], "chr": [232, 245, 285], "isxxx": [232, 245], "rfind": [232, 245, 260, 306, 312, 346, 1081], "grammar": [232, 245], "instrospect": [232, 245], "hasattr": [232, 245, 260, 273, 285, 1048, 1054], "__module__": [232, 244, 245, 254, 257, 260, 264, 273, 285, 306, 324], "bytearrai": [232, 245, 260, 285], "histogram": [232, 233, 250, 407, 422, 431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 582, 583, 591, 696, 734, 787, 789, 790], "defaultdict": [232, 258, 259, 283], "make_histogram": [232, 583, 592], "fileobj": 232, "stringio": [232, 260], "8859": [232, 250, 251, 267, 270, 290, 312, 324, 328, 478], "pycon": [232, 258, 281, 305, 327, 1136], "2017": [232, 258, 281, 327, 604, 702, 753, 1136], "metaprogram": [232, 259, 281, 711, 1047, 1136, 1190], "contract": [232, 234, 281, 1136], "unauthor": [232, 281, 327, 1136], "lesson": [232, 281, 327, 366, 372, 477, 740, 1027, 1136], "evolv": [232, 281, 327, 737, 1136], "assembli": [232, 281, 305, 327, 1011, 1013, 1136, 1191], "revolv": [232, 258, 327, 1136, 1142], "mro": [232, 258, 262, 327, 1136], "cpa": 233, "fahr": [233, 392, 394], "tomorrow": [233, 248, 376, 377], "correctli": [233, 323, 355, 454, 941, 964, 1087, 1144], "consecut": [233, 417, 746, 930], "becam": [233, 319], "44ff": 233, "gig": 233, "upcom": 233, "msi": 233, "wswitch": [233, 458, 695, 806], "wall": [233, 247, 248, 415, 465, 481, 769, 805, 806, 1178], "77ff": 233, "skip": [233, 260, 361, 479, 481, 812, 942, 1012, 1013, 1034, 1171], "89ff": 233, "alongsid": [233, 831], "num_us": 233, "199ff": 233, "204ff": 233, "208ff": 233, "220ff": 233, "222ff": 233, "db_get_user_at_index": 233, "298ff": 233, "strcpy": [233, 250, 404, 450, 586, 601, 604, 705, 739, 937, 995], "strlen": [233, 404, 429, 457, 601, 604, 705, 739, 975, 978, 1008], "bahavior": 233, "dest": [233, 404], "strtol": 233, "stringif": [233, 1186], "db_error_str": 233, "sexi": [233, 987], "caleb": 233, "discret": [234, 264, 323, 464, 468, 473, 474, 696, 734, 787, 789, 790], "bleed": 234, "rect": [234, 445, 572], "sphere": [234, 572], "preprocessor": [234, 250, 411, 438, 444, 448, 451, 455, 460, 464, 468, 473, 474, 693, 696, 734, 787, 789, 790, 1011, 1176, 1190], "julia": 234, "yesterdai": [234, 250, 258, 298], "distanc": [234, 598, 606, 607, 627, 744, 757], "has_lastnam": 234, "botton": 234, "mingw": [234, 277, 279, 297, 376, 389, 876], "resembl": 234, "tortur": 234, "functor": [234, 276, 277, 279, 336, 337, 638, 734, 735, 789, 790], "rudimentarili": [234, 1064, 1139], "gotten": [234, 770], "recourc": 234, "outright": [234, 290, 452, 1039, 1070], "geniu": [234, 290, 629, 1039, 1070], "livehackingli": 234, "zuordnung": [235, 251, 263], "bissl": 235, "commandlineargument": [235, 1185], "summenbeispiel": 235, "showcas": 235, "datenbank": 235, "formulieren": 235, "verbindung": [235, 1183, 1193, 1200, 1206], "schicken": [235, 1183], "schickman": 235, "muessen": 235, "verwandlen": 235, "fractal": [235, 251], "schatzi": 236, "zeitkomplexit\u00e4t": 236, "foreach": 236, "assozi": [236, 1188], "color_transl": 236, "gelb": 236, "yellow": 236, "hashtabl": [236, 1158], "englisch": [236, 1183], "sack": 236, "my_color": 236, "her_color": 236, "pink": 236, "gr\u00fcn": 236, "beig": 236, "vereiningungsmeng": 236, "schnittmeng": 236, "symmetrisch": 236, "differenzmeng": 236, "sei": 236, "gewesen": 236, "waer": [236, 312], "1037190666": [236, 252, 254, 260, 264, 267, 270, 273, 496, 503, 520, 521, 522, 534, 535, 536, 655, 1048], "6666010185": 236, "schwarzbauer": 236, "json_string_fuer_den_brows": 236, "response_dict": 236, "svnr": [236, 244, 247, 254, 260, 264, 267, 270, 272, 273, 312, 497, 503, 525, 531, 1048, 1153], "pprint": [236, 238, 245, 247, 282, 1035, 1144], "formatieren": 236, "endlich": 236, "transfer_string_in_php_am_serv": 236, "u00f6rg": 236, "transfer_string_in_js_am_brows": 236, "response_dict_am_brows": 236, "verwandeln": [236, 1202], "schlussendlich": 236, "geeignet": [236, 1184], "platzieren": 236, "meine_t": 236, "sozialversicherungsnumm": 236, "simmer": 237, "mein_str": 237, "sq": [237, 244, 247, 254, 264, 285, 306, 324, 328, 340], "docu": 237, "nmehrzeilig": 237, "nvon": 237, "mehrzeilig": 237, "deppertem": 237, "irrelevant": 237, "quargel": [237, 238], "190666": 237, "inkorrekt": 237, "geburtsdatum": 237, "endswith": [237, 252, 254, 260, 270, 285, 289, 292, 306, 312, 328, 334, 340, 346, 350, 1081], "sss": 237, "isalpha": [237, 241, 252, 254, 260, 264, 285, 306, 312, 334, 350, 1081], "isidentifi": [237, 241, 254, 260, 270, 285, 306, 312, 1081], "islow": [237, 260, 270, 285, 306, 340, 346, 1081], "arg1": 237, "arg2": 237, "arg3": 237, "abcblah": 237, "blahabcbcabcc": 237, "lah": 237, "rstrip": [237, 241, 245, 252, 256, 257, 260, 270, 285, 302, 306, 312, 328, 346, 350, 360, 369], "lstrip": [237, 252, 256, 260, 285, 306, 312, 346, 350, 369], "wieviel": [237, 1193, 1200], "995237": 237, "datestr": 237, "dt": [237, 334, 837, 941], "strptime": [237, 238, 239, 245, 334], "uuid": 237, "msg_aussi": 237, "sea": [237, 252, 285, 365, 715], "oida": [237, 254, 257, 306, 481], "msgid": 237, "uuid4": 237, "345654325678": 237, "json_aussi": 237, "6563515ef0824d42b459389cefd09127": 237, "json_eini": 237, "sender": [237, 1009], "msg_eini": 237, "sauberestextfil": 238, "12345678": 238, "2270": [238, 247], "20333": 238, "360": [238, 247, 324, 334, 340, 346, 350], "91011121": 238, "30333": 238, "36756788": 238, "1112": [238, 247], "1244": [238, 247], "31333": 238, "45011121": 238, "44444": 238, "340": [238, 247, 254, 260, 292, 306, 334, 340, 346, 350], "sauber": 238, "read_sauberes_text_fil": 238, "item1": [238, 334], "item13": 238, "werk": 238, "lort": 238, "charg": [238, 500, 507, 520, 521, 522, 534, 535, 536], "sonderbestandsnumm": 238, "materialkurztext": 238, "lagerplatz": 238, "verfueg_bestand": 238, "bme": 238, "we_datum": 238, "verf\u00fcg": 238, "bestand": 238, "datum": [238, 1143], "api2": 239, "opc": [239, 248, 323], "rrdtool": 239, "rrd": 239, "subprocess": [239, 255, 260, 269, 271, 281, 305, 354, 369, 374, 1136], "commmon": [241, 437], "140576769461632": 241, "simplicit": 241, "inputfil": [241, 478], "450": [241, 247, 254, 289, 292, 340, 350], "paragraph": [241, 491], "highli": [241, 387, 553], "pathnam": [241, 247, 257, 260, 796, 963, 967, 1079], "displayhook": [241, 247, 257, 260, 362], "excepthook": [241, 247, 257, 260, 362], "uncaught": [241, 247, 257, 260, 572], "systemexit": [241, 247, 257, 260, 282, 285, 362, 1034], "behav": [241, 247, 250, 257, 260, 551, 572, 698, 753, 754, 785, 853, 879, 999], "last_typ": [241, 247, 257, 260, 362], "last_valu": [241, 247, 257, 260, 362, 722, 725, 728, 729, 730], "last_traceback": [241, 247, 257, 260, 362], "builtin_module_nam": [241, 247, 257, 260, 362], "pertain": [241, 247, 257, 260], "exec_prefix": [241, 247, 257, 260, 362], "float_info": [241, 247, 257, 260, 362], "float_repr_styl": [241, 247, 257, 260, 362], "hash_info": [241, 247, 257, 260, 362], "hexvers": [241, 247, 257, 260, 362], "int_info": [241, 247, 257, 260, 362], "maxsiz": [241, 247, 257, 260, 362], "largest": [241, 247, 257, 260, 454], "maxunicod": [241, 247, 257, 260, 362], "thread_info": [241, 247, 257, 260, 362], "version_info": [241, 247, 257, 260, 362], "__stdin__": [241, 247, 257, 260, 362], "__stdout__": [241, 247, 257, 260, 362], "__stderr__": [241, 247, 257, 260, 362], "__displayhook__": [241, 247, 257, 260, 362], "__excepthook__": [241, 247, 257, 260, 362], "screen": [241, 247, 257, 260, 873, 879, 897], "exc_info": [241, 247, 257, 260, 362], "getdlopenflag": [241, 247, 257, 260, 362], "dlopen": [241, 247, 257, 260, 1203], "getprofil": [241, 247, 257, 260, 362], "profil": [241, 247, 257, 260, 340, 387, 465, 471, 474, 790, 837, 869, 1187, 1190], "getrefcount": [241, 247, 257, 260, 267, 362], "getrecursionlimit": [241, 247, 257, 260, 362], "getsizeof": [241, 247, 257, 260, 282, 285, 328, 350, 362], "gettrac": [241, 247, 257, 260, 362], "setdlopenflag": [241, 247, 257, 260, 362], "setprofil": [241, 247, 257, 260, 362], "setrecursionlimit": [241, 247, 257, 260, 362], "settrac": [241, 247, 257, 260, 362], "__breakpointhook__": [241, 247, 257, 260, 362], "breakpointhook": [241, 247, 257, 260, 362], "breakpoint": [241, 247, 257, 260, 285], "exctyp": [241, 247, 257, 260], "__unraisablehook__": [241, 247, 257, 260, 362], "unraisablehook": [241, 247, 257, 260, 362], "unrais": [241, 247, 257, 260], "exc_typ": [241, 247, 257, 260, 1032], "exc_valu": [241, 247, 257, 260, 1032], "exc_traceback": [241, 247, 257, 260, 1032], "err_msg": [241, 247, 257, 260], "addaudithook": [241, 247, 257, 260, 362], "audit": [241, 247, 257, 260, 340, 362], "call_trac": [241, 247, 257, 260, 362], "afterward": [241, 247, 257, 260, 416, 466, 603, 753, 754, 755, 768, 833, 1005, 1170], "older": [241, 247, 257, 260, 862, 1005], "get_asyncgen_hook": [241, 247, 257, 260, 362], "firstit": [241, 247, 257, 260], "get_coroutine_origin_tracking_depth": [241, 247, 257, 260, 362], "coroutin": [241, 247, 257, 260, 336, 724, 725, 727, 728, 729, 730, 734, 789, 790, 1136], "getallocatedblock": [241, 247, 257, 260, 362], "getdefaultencod": [241, 247, 257, 260, 306, 362], "getfilesystemencodeerror": [241, 247, 257, 260, 362], "getfilesystemencod": [241, 247, 257, 260, 362], "getswitchinterv": [241, 247, 257, 260, 362], "setswitchinterv": [241, 247, 257, 260, 362], "is_fin": [241, 247, 257, 260, 362], "set_asyncgen_hook": [241, 247, 257, 260, 362], "set_coroutine_origin_tracking_depth": [241, 247, 257, 260, 362], "cr_origin": [241, 247, 257, 260], "rtld_global": [241, 247, 257, 260], "rtld_xxx": [241, 247, 257, 260], "rtld_lazi": [241, 247, 257, 260], "frequenc": [241, 247, 257, 260, 264, 300, 301, 322, 326, 355, 380, 384, 790, 933, 934, 942, 974, 994, 996], "uninterrupt": [241, 247, 257, 260, 829], "workload": [241, 247, 257, 260], "typic": [241, 247, 257, 260, 288, 298, 314, 326, 330, 437, 477, 481, 498, 522, 551, 678, 808, 857, 882, 1012, 1057, 1067, 1189, 1191], "005": [241, 247, 257, 260], "abiflag": [241, 247, 257, 260, 362], "api_vers": [241, 247, 257, 260, 362], "1013": [241, 247, 257, 260], "ipyk": 241, "base_exec_prefix": [241, 247, 257, 260, 362], "base_prefix": [241, 247, 257, 260, 362], "_ast": [241, 247, 257, 260], "_codec": [241, 247, 257, 260], "_collect": [241, 247, 257, 260], "_f": [241, 247, 257, 260], "byteord": [241, 247, 257, 260, 282, 362, 935], "foundati": [241, 247, 257, 260], "emati": [241, 247, 257, 260], "ipykernel": [241, 247, 257, 260, 285], "zmqshelldisplayhook": [241, 247, 257, 260], "dont_write_bytecod": [241, 247, 257, 260, 362], "opt": [241, 247, 257, 260, 340, 443], "ation": [241, 247, 257, 260], "7976931348623157e": [241, 247, 257, 260], "308": [241, 247, 254, 257, 260, 302, 312, 324, 334, 340, 346], "max_": [241, 247, 257, 260], "epsilo": [241, 247, 257, 260], "2305843009213693": [241, 247, 257, 260], "iphash2": [241, 247, 257, 260], "50922736": 241, "cache_tag": [241, 247, 257, 260], "xv": [241, 247, 257, 260], "bits_per_digit": [241, 247, 257, 260], "sizeof_digit": [241, 247, 257, 260], "syntaxerror": [241, 257, 264, 285, 1034], "eol": [241, 264], "scan": [241, 264, 267, 334, 941, 943], "9223372036854775807": [241, 247, 257, 260, 788], "1114111": [241, 247, 257, 260], "meta_path": [241, 247, 257, 260, 362], "_frozen_importlib": [241, 247, 257, 260, 285], "builtinimport": [241, 247, 257, 260, 285], "_fro": [241, 247, 257, 260], "homepa": 241, "path_hook": [241, 247, 257, 260, 362], "zipimport": [241, 247, 257, 260], "filefind": [241, 247, 257, 260], "path_importer_cach": [241, 247, 257, 260, 362], "jfa": [241, 247, 257, 260], "platlibdir": [241, 247, 257, 260, 362], "ps1": [241, 247, 257, 260, 362, 1171], "ps2": [241, 247, 257, 260, 362], "ps3": [241, 247, 257, 260, 362], "pycache_prefix": [241, 247, 257, 260, 362], "outstream": [241, 247, 257, 260], "versio": [241, 247, 257, 260], "202103": 241, "releaselev": [241, 247, 257, 260], "warnopt": [241, 247, 257, 260, 362], "isdigit": [241, 252, 260, 264, 285, 292, 306, 312, 340, 350, 1081], "pp": [241, 292, 442, 629], "list_of_str": 241, "tensorflow": 242, "kesselfal": 242, "rettenbachklamm": 242, "hochtor": 242, "hochschwab": 242, "_a": [244, 260, 285], "_123": 244, "140575811317328": 244, "140575811316208": 244, "0xffffffff": [244, 245, 350, 415], "4294967296": [244, 252], "0x48": [244, 941], "330": [244, 247, 260, 285, 292, 306, 324, 334, 340, 346], "332": [244, 247, 260, 292, 306, 324, 340, 346], "333": [244, 247, 260, 292, 306, 334, 340, 346, 365], "334": [244, 247, 260, 292, 334, 340, 346], "dstr": 244, "777": [244, 247, 334], "aliv": [244, 435, 987, 1030], "bcd": 244, "dusan": 244, "alex": [244, 258, 1052], "mist": [244, 292], "span": [244, 270, 273, 275, 282, 306, 340, 392, 411, 435, 812], "141592653589793": [244, 247], "roll": [244, 263, 284, 300, 301, 1070, 1186], "dice": [244, 263, 284, 300, 301, 1070], "win": [244, 260, 270, 334, 346, 928, 995, 1070], "rnd": [244, 267], "convention": 244, "wise": [244, 288, 460, 604, 676, 707, 775, 788, 790, 805, 815, 835, 933, 974, 1034], "resultset": [244, 247, 1148], "sbin": [244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346, 869, 873, 875, 922, 928, 959, 969], "nologin": [244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346, 922, 928, 959, 969], "adm": [244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346, 923, 926, 928], "lp": [244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346, 928], "spool": [244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346, 928], "lpd": [244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346, 928], "ftp": [244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346, 924, 1025], "65534": [244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346], "apach": [244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346], "httpd": [244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346], "coredump": [244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346, 928, 1008], "997": [244, 247, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346], "dumper": [244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346, 928], "998": [244, 247, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346], "996": [244, 247, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346], "timesync": [244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346, 928], "995": [244, 247, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346], "tss": [244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346], "tpm": [244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346], "dbu": [244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346, 875], "polkitd": [244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346, 875], "994": [244, 247, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346], "avahi": [244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346, 875], "mdn": [244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346], "unbound": [244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346, 1066], "992": [244, 247, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346], "dnsmasq": [244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346, 875], "991": [244, 247, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346], "dhcp": [244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346], "nm": [244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346, 472, 605, 837, 1023, 1029], "openconnect": [244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346], "993": [244, 247, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346], "989": [244, 247, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346], "networkmanag": [244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346, 472, 875], "usbmuxd": [244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346], "gluster": [244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346], "988": [244, 247, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346], "glusterf": [244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346], "rtkit": [244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346], "realtimekit": [244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346], "pipewir": [244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346], "987": [244, 247, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346], "geoclu": [244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346], "990": [244, 247, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346], "chroni": [244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346], "984": [244, 247, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346, 928], "saslauth": [244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346], "saslauthd": [244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346], "radvd": [244, 260, 267, 270], "rpc": [244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346], "rpcbind": [244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346], "openvpn": [244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346], "982": [244, 247, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346, 928], "981": [244, 247, 260, 267, 270, 346], "spawn": [244, 260, 267, 270, 285, 292, 302, 306, 323, 328, 334, 340, 346], "colord": [244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346], "985": [244, 247, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346, 928], "rpcuser": [244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346], "abrt": [244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346, 875, 928], "979": [244, 247, 260, 267, 270], "helper": [244, 260, 264, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346, 410, 604, 668, 716, 757, 831, 928, 1161, 1164], "983": [244, 247, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346, 928], "978": [244, 247, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 928], "vboxadd": [244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346, 928], "tcpdump": [244, 260, 267, 270, 285, 292, 302, 306, 328, 334, 340, 346, 928], "974": [244, 247, 260, 267, 270], "broker": [244, 248, 260, 267, 270, 285, 292, 302, 306, 323, 328, 334, 340, 875, 1130], "mappingproxi": [244, 260, 273], "229": [244, 247, 252, 254, 260, 264, 267, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350], "231": [244, 247, 252, 254, 257, 260, 264, 267, 285, 292, 306, 312, 328, 334, 340, 346, 350, 520, 521, 522, 534, 535, 536], "232": [244, 247, 252, 254, 257, 260, 264, 267, 270, 285, 306, 312, 328, 334, 340, 346, 350], "233": [244, 247, 252, 254, 260, 264, 267, 270, 285, 292, 302, 306, 312, 328, 334, 340, 346, 350], "inputlist": [244, 1037], "ret": [244, 247, 252, 478, 716, 1001, 1037, 1082], "235": [244, 247, 252, 254, 257, 260, 264, 267, 270, 285, 292, 302, 306, 312, 324, 328, 340, 346, 350], "236": [244, 247, 252, 254, 257, 260, 264, 267, 270, 285, 306, 312, 324, 328, 334, 340, 346, 350, 463], "237": [244, 247, 252, 254, 260, 264, 267, 270, 285, 302, 306, 312, 328, 334, 340, 346, 350], "238": [244, 247, 252, 254, 257, 260, 264, 267, 270, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350], "239": [244, 247, 252, 254, 260, 264, 267, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350], "240": [244, 247, 252, 254, 257, 260, 264, 267, 270, 285, 302, 306, 312, 328, 334, 340, 346, 350], "242": [244, 247, 252, 254, 257, 260, 267, 270, 285, 302, 306, 312, 324, 328, 334, 340, 346, 350], "243": [244, 247, 252, 254, 260, 267, 270, 285, 302, 306, 312, 324, 334, 340, 346, 350], "244": [244, 247, 252, 254, 257, 260, 267, 270, 285, 306, 312, 324, 334, 340, 346, 350], "245": [244, 247, 252, 254, 267, 285, 302, 306, 312, 324, 334, 340, 346, 350], "247": [244, 247, 252, 254, 260, 264, 267, 285, 302, 306, 312, 328, 334, 340, 346, 350], "248": [244, 247, 252, 254, 257, 264, 267, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350], "249": [244, 247, 252, 254, 260, 264, 267, 270, 285, 292, 306, 312, 324, 328, 334, 340, 346, 350], "250": [244, 247, 252, 254, 260, 264, 267, 270, 285, 292, 296, 302, 306, 312, 334, 340, 346, 350, 926], "251": [244, 247, 252, 254, 257, 260, 264, 267, 285, 292, 302, 306, 312, 324, 328, 340, 346, 350], "252": [244, 247, 252, 254, 257, 264, 267, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 1149], "253": [244, 247, 252, 254, 257, 260, 267, 270, 285, 292, 306, 312, 328, 340, 346, 350], "256": [244, 247, 252, 254, 260, 267, 270, 285, 292, 302, 306, 312, 328, 334, 340, 346, 350, 401, 609, 1138, 1149], "257": [244, 247, 252, 254, 257, 260, 264, 267, 270, 285, 292, 302, 306, 312, 334, 340, 346, 350], "258": [244, 247, 252, 254, 257, 260, 264, 267, 285, 292, 302, 306, 312, 340, 346, 350], "0x7fda5444e6a0": 244, "259": [244, 247, 252, 254, 257, 260, 267, 285, 292, 302, 306, 312, 334, 340, 346, 350], "260": [244, 247, 252, 254, 257, 260, 267, 285, 292, 302, 306, 312, 324, 334, 340, 346, 350], "261": [244, 247, 252, 254, 260, 264, 270, 285, 292, 302, 306, 312, 340, 346, 350], "262": [244, 247, 252, 254, 260, 270, 285, 292, 302, 306, 312, 324, 334, 340, 346, 350], "263": [244, 247, 252, 254, 260, 264, 267, 270, 285, 292, 302, 306, 312, 324, 340, 346, 350], "264": [244, 247, 252, 254, 257, 260, 267, 270, 285, 292, 306, 312, 324, 334, 340, 346, 350], "265": [244, 247, 252, 254, 260, 267, 285, 292, 306, 312, 324, 334, 340, 346, 350], "266": [244, 247, 252, 254, 257, 260, 264, 270, 285, 306, 312, 340, 346, 350], "267": [244, 247, 252, 254, 257, 260, 267, 270, 285, 292, 306, 312, 324, 340, 346, 350], "268": [244, 247, 252, 254, 260, 267, 270, 285, 292, 306, 312, 334, 340, 346, 350], "269": [244, 247, 252, 254, 257, 260, 264, 267, 285, 292, 302, 306, 312, 340, 346, 350, 1013], "270": [244, 247, 252, 254, 260, 264, 267, 285, 292, 302, 306, 312, 324, 334, 340, 346, 350], "other_map": 244, "272": [244, 247, 252, 254, 257, 260, 264, 267, 285, 292, 302, 306, 312, 324, 340, 346, 350], "273": [244, 247, 252, 254, 260, 264, 285, 292, 306, 312, 334, 340, 346, 350, 544, 562, 563, 564, 565, 567, 568, 776, 778, 780, 1047], "274": [244, 247, 252, 254, 257, 260, 264, 267, 285, 292, 302, 306, 312, 334, 340, 346, 350], "140575811316304": 244, "275": [244, 247, 252, 254, 260, 264, 267, 285, 292, 302, 306, 312, 324, 340, 346, 350], "276": [244, 247, 252, 254, 257, 267, 285, 292, 302, 306, 312, 324, 340, 346, 350], "277": [244, 247, 252, 254, 257, 260, 264, 267, 285, 302, 306, 312, 334, 340, 346], "278": [244, 247, 252, 254, 260, 267, 285, 292, 306, 312, 324, 334, 340, 346], "279": [244, 247, 252, 254, 257, 260, 264, 267, 285, 292, 306, 312, 324, 340, 346], "280": [244, 247, 252, 254, 257, 260, 264, 285, 292, 306, 312, 324, 340, 346, 1012, 1013], "140575692459008": 244, "282": [244, 247, 252, 254, 257, 260, 264, 267, 285, 292, 306, 312, 324, 340, 346], "283": [244, 247, 252, 254, 257, 260, 264, 267, 285, 306, 312, 340, 346], "284": [244, 247, 252, 254, 260, 264, 267, 285, 289, 312, 324, 334, 340, 346], "elementwis": 244, "285": [244, 247, 252, 254, 257, 260, 285, 292, 306, 312, 324, 340, 346], "286": [244, 247, 252, 254, 257, 260, 264, 285, 306, 312, 324, 340, 346], "287": [244, 247, 252, 254, 257, 260, 264, 267, 285, 292, 312, 324, 334, 340, 346], "140575692438848": 244, "288": [244, 247, 252, 254, 260, 264, 267, 285, 292, 306, 312, 324, 334, 340, 346], "140575692448960": 244, "289": [244, 247, 252, 254, 260, 285, 292, 306, 312, 324, 334, 340, 346], "290": [244, 247, 252, 254, 260, 285, 292, 306, 312, 340, 346], "292": [244, 247, 252, 260, 264, 285, 292, 302, 306, 340, 346], "293": [244, 247, 252, 254, 260, 285, 292, 302, 306, 312, 340, 346], "295": [244, 247, 252, 254, 260, 264, 285, 292, 302, 306, 340, 346], "296": [244, 247, 252, 254, 260, 285, 292, 302, 306, 312, 340, 346], "298": [244, 247, 252, 260, 264, 285, 292, 302, 306, 312, 334, 340, 346], "deep": [244, 256, 324, 711, 716, 999], "301": [244, 247, 252, 257, 260, 264, 285, 292, 302, 306, 312, 324, 340, 346], "302": [244, 247, 252, 254, 260, 264, 285, 292, 306, 312, 324, 340, 346, 1093], "deepcopi": [244, 254, 267, 292, 312, 324, 1075], "303": [244, 247, 252, 254, 257, 260, 292, 306, 312, 324, 334, 340, 346, 1013], "304": [244, 247, 252, 254, 257, 260, 264, 324, 340, 346], "305": [244, 247, 257, 260, 285, 302, 306, 312, 324, 340, 346], "314": [244, 247, 254, 257, 260, 285, 292, 302, 306, 312, 334, 340, 346], "315": [244, 247, 260, 285, 306, 312, 334, 340, 346], "rdr": [244, 245, 328, 478, 501, 1144], "delimit": [244, 245, 260, 289, 290, 306, 328, 334, 346, 625, 923, 1063, 1144], "fund_nam": [244, 245, 1093], "fund_isin": [244, 245, 1093], "fund_tick": [244, 245, 1093], "as_of_d": [244, 245, 1093], "fund_in_univers": [244, 245, 1093], "fund_of_fund": [244, 245, 1093], "fund_holdings_count": [244, 245, 1093], "fund_holding_funds_count": [244, 245, 1093], "american": [244, 250, 677, 691, 790, 1093, 1149], "fund": [244, 1093], "balanc": [244, 248, 445, 1093], "us0240711020": [244, 1093], "abalx": [244, 1093], "20210103": [244, 1093], "084": [244, 1093], "dodg": [244, 1093], "cox": [244, 1093], "us2562011047": [244, 1093], "dodbx": [244, 1093], "410": [244, 247, 292, 306, 340, 350, 1093], "us2562191062": [244, 1093], "dodgx": [244, 1093], "franklin": [244, 1093], "incom": [244, 260, 323, 1093, 1152], "us3534963000": [244, 1093], "fkinx": [244, 1093], "america": [244, 1093], "us3998741066": [244, 1093], "agthx": [244, 1093], "price": [244, 264, 471, 494, 1093], "us7414791092": [244, 1093], "prgfx": [244, 1093], "fidel": [244, 1093], "puritan": [244, 1093], "us3163451079": [244, 1093], "fpurx": [244, 1093], "contrafund": [244, 1093], "us3160711095": [244, 1093], "fcntx": [244, 1093], "363": [244, 247, 292, 306, 324, 334, 340, 346, 350, 1093], "us77954m1053": [244, 1093], "prwcx": [244, 1093], "westburi": [244, 1093], "us6804141090": [244, 1093], "owlsx": [244, 1093], "us1401931035": [244, 1093], "caibx": [244, 1093], "582": [244, 247, 340, 1093], "harbor": [244, 1093], "institut": [244, 245, 507, 522, 1093], "us4115115044": [244, 1093], "hacax": [244, 1093], "us77954q1067": [244, 1093], "trbcx": [244, 1093], "dreyfu": [244, 1093], "treasuri": [244, 1093], "cash": [244, 1093], "inst": [244, 1093], "us2619411083": [244, 1093], "dirxx": [244, 1093], "blackrock": [244, 1093], "us09251t5092": [244, 1093], "malox": [244, 1093], "us3163453059": [244, 1093], "flpsx": [244, 1093], "liquid": [244, 1093], "us09248u5517": [244, 1093], "tttxx": [244, 1093], "dfa": [244, 1093], "portfolio": [244, 264, 1093], "us2332038841": [244, 1093], "dfgbx": [244, 1093], "feder": [244, 1093], "herm": [244, 1093], "us60934n6821": [244, 1093], "utixx": [244, 1093], "oakmark": [244, 1093], "investor": [244, 264, 1093], "us4138382027": [244, 1093], "oakix": [244, 1093], "asset": [244, 1093], "us00767h4939": [244, 1093], "787": [244, 247, 1093], "fpa": [244, 1093], "crescent": [244, 1093], "us30254t7596": [244, 1093], "fpacx": [244, 1093], "us3534968058": [244, 1093], "fcisx": [244, 1093], "us5529836943": [244, 1093], "meiix": [244, 1093], "goldman": [244, 1093], "sach": [244, 1093, 1207], "instrument": [244, 469, 471, 941, 1093], "us38142b5003": [244, 1093], "ftixx": [244, 1093], "schwab": [244, 1093], "us8085098551": [244, 1093], "swppx": [244, 1093], "508": [244, 247, 292, 324, 340, 1093], "templeton": [244, 1093], "bond": [244, 1093], "advisor": [244, 1093], "us8802084009": [244, 1093], "tgbax": [244, 1093], "us32008f6060": [244, 1093], "sgiix": [244, 1093], "ishar": [244, 1093], "etf": [244, 1093], "us4642872000": [244, 1093], "ivv": [244, 1093], "507": [244, 247, 324, 1093], "vanguard": [244, 1093], "admir": [244, 1093], "us9229087104": [244, 1093], "vfiax": [244, 1093], "510": [244, 247, 324, 334, 340, 1093], "us9229087286": [244, 1093], "vtsax": [244, 1093], "370": [244, 247, 292, 306, 334, 340, 346, 350, 1093], "spdr": [244, 1093], "midcap": [244, 1093], "us78467y1073": [244, 1093], "mdy": [244, 1093], "dow": [244, 1093], "jone": [244, 370, 371, 1093], "industri": [244, 837, 1093], "us78467x1090": [244, 1093], "health": [244, 1093], "us81369y2090": [244, 1093], "xlv": [244, 1093], "discretionari": [244, 1093], "us81369y4070": [244, 1093], "xly": [244, 1093], "energi": [244, 1093], "us81369y5069": [244, 1093], "xle": [244, 1093], "financi": [244, 1093], "us81369y6059": [244, 1093], "xlf": [244, 1093], "us81369y8030": [244, 1093], "xlk": [244, 1093], "invesco": [244, 1093], "qqq": [244, 1093], "us46090e1038": [244, 1093], "us2562061034": [244, 1093], "dodfx": [244, 1093], "msci": [244, 1093], "eaf": [244, 1093], "us4642874659": [244, 1093], "efa": [244, 1093], "897": [244, 247, 1093], "jpmorgan": [244, 1093], "sec": [244, 492, 995, 1093, 1164], "mny": [244, 1093], "mkt": [244, 1093], "us4812a28358": [244, 1093], "jtsxx": [244, 1093], "eql": [244, 1093], "wght": [244, 1093], "us46137v3574": [244, 1093], "us4812a03757": [244, 1093], "cjtxx": [244, 1093], "us00143w8753": [244, 1093], "odvyx": [244, 1093], "dividend": [244, 1093], "us78464a7634": [244, 1093], "sdy": [244, 1093], "equiti": [244, 1093], "us2332033719": [244, 1093], "dfiex": [244, 1093], "888": [244, 247, 1093], "edgewood": [244, 1093], "us0075w07594": [244, 1093], "egfix": [244, 1093], "prudenti": [244, 1093], "us00767h7585": [244, 1093], "r6": [244, 1093], "us55273h3536": [244, 1093], "meikx": [244, 1093], "327": [244, 247, 260, 285, 292, 302, 334, 340, 346, 350], "328": [244, 247, 254, 260, 292, 340, 346, 350], "geschieht": [245, 387, 924], "wunder": 245, "groesser": 245, "jave": 245, "shorthand": [245, 402, 916, 1048], "lin": 245, "lout": 245, "faster": [245, 264, 323, 454, 466, 999, 1005], "outputlist": 245, "getus": [245, 1114], "userdatabas": [245, 1114], "userid": [245, 257], "groupid": 245, "loginshel": [245, 346], "userrecord": 245, "dens": [245, 254, 264], "pratic": 245, "_fix_float_numb": 245, "fieldnam": [245, 1144], "_fix_bool": 245, "elif": [245, 252, 328, 400, 437, 478, 1054, 1069, 1070], "_fix_dat": 245, "read_stock": [245, 1093], "csvfile": [245, 1047], "converted_record": 245, "dbname": [245, 1147], "stmt": 245, "predefin": [245, 969, 1004, 1009, 1182], "circuit": [246, 252, 262, 942, 1068, 1193, 1200], "windows_path": [247, 252], "festplatt": [247, 1203], "eue": [247, 324, 340, 364], "lehrer": 247, "50923504": 247, "202107": 247, "140106795875920": 247, "140106669190640": 247, "669": [247, 264], "140106669191024": 247, "0j": 247, "copied_l": [247, 254], "140106669249856": 247, "copied_t": 247, "tuple_containing_one_el": 247, "tran": 247, "satan": [247, 257], "queen": [247, 267, 1125, 1127, 1131, 1133, 1144], "10000000000": [247, 302, 364], "prod": 247, "resultset_to_local_db": 247, "my_local_db": 247, "basenam": 247, "normalized_path": 247, "normpath": [247, 254, 1042], "291": [247, 252, 260, 285, 302, 312, 324, 334, 340, 346, 470], "294": [247, 252, 260, 285, 302, 306, 312, 340, 346], "297": [247, 252, 254, 260, 264, 306, 334, 340, 346], "299": [247, 252, 257, 260, 264, 285, 292, 302, 306, 312, 334, 340, 346], "306": [247, 257, 264, 285, 302, 306, 312, 324, 334, 340, 346], "307": [247, 254, 260, 285, 302, 306, 312, 324, 334, 340, 346], "309": [247, 254, 257, 260, 292, 302, 306, 312, 324, 328, 340, 346, 350], "310": [247, 254, 257, 260, 306, 312, 324, 340, 346, 415], "311": [247, 254, 285, 306, 312, 334, 340, 346], "312": [247, 254, 260, 285, 292, 302, 312, 334, 340, 346], "313": [247, 254, 260, 292, 306, 312, 334, 340, 346], "316": [247, 254, 257, 260, 285, 306, 324, 334, 340, 346], "317": [247, 254, 257, 285, 292, 302, 306, 324, 334, 340, 346], "318": [247, 257, 260, 292, 306, 334, 340, 346], "319": [247, 254, 257, 260, 285, 302, 306, 324, 334, 340, 346], "321": [247, 257, 260, 292, 302, 306, 312, 324, 340, 346, 350], "322": [247, 257, 260, 292, 312, 324, 334, 340, 346], "323": [247, 254, 257, 260, 285, 306, 312, 324, 334, 340, 346], "324": [247, 257, 260, 285, 302, 306, 312, 324, 334, 340, 346, 553], "325": [247, 254, 260, 292, 302, 312, 334, 340, 346], "326": [247, 254, 260, 285, 302, 312, 324, 334, 340, 346], "329": [247, 260, 285, 292, 324, 340, 346, 350], "331": [247, 254, 260, 285, 306, 340, 346, 350], "335": [247, 254, 260, 292, 306, 334, 340, 346], "336": [247, 254, 260, 306, 334, 340, 346, 485], "337": [247, 260, 292, 306, 334, 340, 346, 350], "338": [247, 254, 292, 306, 334, 340, 346], "339": [247, 254, 260, 306, 334, 340, 346, 350], "341": [247, 254, 260, 292, 306, 324, 334, 340, 346, 350], "342": [247, 254, 260, 292, 312, 334, 340, 346], "343": [247, 260, 292, 306, 324, 340, 346, 350], "346": [247, 260, 306, 324, 334, 340, 346, 651, 652, 653, 654], "347": [247, 292, 306, 324, 334, 340, 346], "348": [247, 260, 324, 334, 340, 346], "349": [247, 260, 306, 324, 334, 340, 346, 465], "351": [247, 254, 260, 306, 334, 340, 346], "352": [247, 254, 260, 292, 306, 334, 340, 346], "353": [247, 254, 260, 292, 306, 334, 340, 346], "354": [247, 260, 306, 334, 340, 346, 499], "355": [247, 292, 306, 334, 340, 346, 350], "356": [247, 267, 306, 324, 340, 346, 350], "357": [247, 292, 306, 324, 334, 340, 346, 350], "359": [247, 306, 334, 340], "361": [247, 306, 324, 334, 340, 350], "362": [247, 292, 306, 324, 334, 340], "364": [247, 306, 340, 346, 350], "365": [247, 324, 340, 346], "366": [247, 292, 306, 340, 346, 350], "367": [247, 306, 324, 334, 340, 346, 350], "368": [247, 306, 334, 340, 346, 350], "371": [247, 292, 334, 340, 346, 350], "373": [247, 254, 292, 324, 334, 340, 350], "374": [247, 254, 306, 324, 340, 350], "376": [247, 292, 306, 324, 334, 340, 350], "377": [247, 254, 292, 306, 324, 334, 340], "379": [247, 292, 306, 324, 334, 340], "380": [247, 292, 306, 324, 340], "381": [247, 254, 292, 306, 340], "382": [247, 292, 306, 324, 340], "383": [247, 254, 292, 296, 324, 334, 340], "384": [247, 292, 306, 324, 334, 340, 350], "385": [247, 292, 306, 324, 340, 350], "386": [247, 292, 306, 324, 340, 350], "387": [247, 340, 350], "388": [247, 292, 306, 324, 340, 350], "389": [247, 324, 340, 350], "390": [247, 306, 324, 340, 350], "391": [247, 292, 324, 340], "392": [247, 292, 340, 350], "393": [247, 254, 292, 306, 324, 340, 350], "394": [247, 254, 292, 306, 324, 340, 350], "395": [247, 254, 292, 306, 324, 334, 340, 350], "396": [247, 254, 292, 340, 350, 882], "397": [247, 254, 306, 324, 340, 350], "398": [247, 254, 306, 340, 350], "399": [247, 254, 306, 324, 340, 350], "401": [247, 254, 292, 306, 340, 350], "402": [247, 292, 324, 340, 350], "403": [247, 254, 306, 324, 340, 350], "405": [247, 306, 340, 350], "406": [247, 254, 292, 306, 324, 340], "407": [247, 292, 306, 324, 340, 350], "408": [247, 254, 292, 306, 324, 340, 350], "409": [247, 254, 292, 306, 324, 334, 340, 350], "411": [247, 254, 292, 306, 334, 340], "412": [247, 306, 340], "413": [247, 254, 292, 306, 340], "414": [247, 254, 292, 306, 324, 340], "415": [247, 306, 324, 340], "416": [247, 254, 292, 324, 340], "417": [247, 254, 292, 306, 340], "418": [247, 254, 292, 324, 340, 350], "419": [247, 254, 292, 306, 324, 340], "420": [247, 254, 292, 306, 324, 340], "421": [247, 254, 292, 306, 324, 340], "422": [247, 254, 334, 340, 350], "423": [247, 292, 306, 324, 340, 350, 788], "424": [247, 254, 292, 306, 340, 350], "425": [247, 292, 340], "426": [247, 324], "427": [247, 254, 292, 324, 340, 350], "428": [247, 254, 292, 324, 340, 350], "429": [247, 292, 324, 340, 350], "430": [247, 254, 292, 324, 340, 350], "431": [247, 292, 324, 334, 340, 350, 788], "432": [247, 254, 292, 324, 350], "433": [247, 292, 324, 334, 350], "434": [247, 292, 340, 350], "435": [247, 350], "436": [247, 292, 324, 340, 350], "437": [247, 254, 292, 324, 334, 340, 350], "438": [247, 254, 324, 340, 350], "439": [247, 292, 340, 350], "440": [247, 254, 292, 340, 350], "441": [247, 254, 292, 340, 350], "442": [247, 254, 292, 334, 350], "443": [247, 254, 324, 340, 350], "444": [247, 254, 324, 340, 350], "445": [247, 254, 324, 334, 340, 350], "446": [247, 292, 350], "447": [247, 254, 292, 324, 334, 340, 350], "448": [247, 292, 340, 350], "449": [247, 254, 340], "451": [247, 254, 324, 340], "452": [247, 254, 292, 340, 350], "453": [247, 254, 324, 340, 350], "454": [247, 254, 292, 340, 350], "455": [247, 254, 340, 350], "457": 247, "458": [247, 292, 340, 350], "459": [247, 334], "460": [247, 292], "461": [247, 292, 350], "462": [247, 292, 350], "463": [247, 340], "464": [247, 292, 340, 350], "465": [247, 292, 296, 334, 340, 350], "466": [247, 292, 350], "467": [247, 292, 334, 340, 350], "468": [247, 292, 340, 350], "469": [247, 292, 340, 350, 754], "470": [247, 292, 340], "471": [247, 292, 334, 340, 350], "472": [247, 292, 340, 350], "473": [247, 340], "474": [247, 292, 340, 350], "475": [247, 292, 340, 350], "476": [247, 292, 334, 340, 350], "478": [247, 350], "479": [247, 292, 340, 350], "480": [247, 292, 340, 350], "481": [247, 292, 340], "482": [247, 292, 334, 350], "483": [247, 292, 334, 340, 350], "484": [247, 350], "485": [247, 350], "486": [247, 292, 340, 350], "487": [247, 292, 340, 350], "488": [247, 292, 340, 350], "489": 247, "490": [247, 340, 919], "491": [247, 340], "492": [247, 340, 350], "494": [247, 292, 340], "495": [247, 350], "496": [247, 350], "497": [247, 292, 340], "498": [247, 292, 340], "499": [247, 340, 350], "502": [247, 292, 340, 350], "503": [247, 340], "504": [247, 292], "505": [247, 260, 292, 340], "506": [247, 292, 340], "509": [247, 324, 350], "511": [247, 324, 334, 340], "514": [247, 340], "515": [247, 292, 340, 753], "516": [247, 292], "518": [247, 292, 340, 350], "519": [247, 340, 350], "520": [247, 292, 350], "521": [247, 292, 350, 773, 777], "522": 247, "523": 247, "524": [247, 292], "525": [247, 292, 340], "526": 247, "527": [247, 340], "528": 247, "529": [247, 334, 340], "530": 247, "531": [247, 292, 340, 350], "532": [247, 350, 788], "533": [247, 340, 350], "534": [247, 340, 350], "535": [247, 340, 350], "536": [247, 919], "538": [247, 340], "539": [247, 340], "540": [247, 334, 350], "541": [247, 340], "542": [247, 340], "543": [247, 350], "544": [247, 334, 340, 350], "545": [247, 334, 340], "546": [247, 340], "547": [247, 340, 350], "548": [247, 296, 340], "549": [247, 340], "550": [247, 340], "551": 247, "552": [247, 334, 340, 350], "553": [247, 334, 340, 350], "554": [247, 921], "555": [247, 350], "556": [247, 334], "557": [247, 340], "558": [247, 340], "559": [247, 340], "560": [247, 350], "561": [247, 340, 350], "562": [247, 340, 350], "563": [247, 340, 350], "564": [247, 340, 350], "565": [247, 340], "566": 247, "567": [247, 340, 350], "568": [247, 350], "569": [247, 340, 350], "570": 247, "571": 247, "572": 247, "573": 247, "574": [247, 340], "575": [247, 340], "576": 247, "577": [247, 340], "578": [247, 340], "579": [247, 340], "580": [247, 340], "581": [247, 340], "583": [247, 334], "584": 247, "585": [247, 340], "586": 247, "587": 247, "588": [247, 328, 340], "589": [247, 340], "590": [247, 340], "591": [247, 334], "592": 247, "593": [247, 340], "594": [247, 334], "595": [247, 340], "596": [247, 1025], "597": 247, "598": 247, "599": 247, "601": 247, "602": 247, "603": 247, "604": 247, "605": 247, "606": 247, "607": [247, 334], "608": 247, "609": [247, 334], "610": [247, 919], "611": 247, "612": [247, 882], "613": 247, "614": 247, "615": [247, 334], "616": 247, "617": 247, "618": 247, "619": 247, "620": 247, "621": 247, "622": 247, "623": 247, "624": 247, "625": [247, 264], "626": 247, "627": 247, "628": 247, "629": 247, "630": 247, "631": 247, "632": 247, "633": 247, "634": 247, "635": 247, "636": 247, "637": 247, "638": 247, "639": 247, "640": [247, 604], "641": 247, "642": 247, "643": 247, "644": [247, 1062], "645": 247, "646": 247, "647": 247, "648": 247, "649": 247, "650": [247, 334], "651": 247, "652": 247, "653": 247, "654": 247, "655": [247, 334], "656": 247, "657": [247, 334], "658": 247, "659": 247, "660": 247, "661": 247, "662": 247, "663": 247, "665": [247, 334], "668": [247, 334, 1066], "670": 247, "671": [247, 334], "672": 247, "673": 247, "674": 247, "675": 247, "676": 247, "677": 247, "678": 247, "679": 247, "680": [247, 334], "681": [247, 334], "682": [153, 247, 919], "683": 247, "684": 247, "685": 247, "687": 247, "688": 247, "689": 247, "690": 247, "691": 247, "692": 247, "693": 247, "694": 247, "695": [247, 334], "696": 247, "697": [247, 334], "698": [247, 919, 959], "699": 247, "701": [247, 334], "702": 247, "703": [247, 300, 301, 322], "704": 247, "705": 247, "706": [247, 334], "707": 247, "708": [247, 260], "709": 247, "710": [247, 604], "711": 247, "712": 247, "713": 247, "715": [247, 678], "716": [247, 334], "717": 247, "718": 247, "719": 247, "720": 247, "721": 247, "722": 247, "723": 247, "724": 247, "725": 247, "726": 247, "727": [247, 334], "728": 247, "729": 247, "730": [247, 289], "731": 247, "732": 247, "733": 247, "734": 247, "735": 247, "736": 247, "737": 247, "738": 247, "739": 247, "740": 247, "741": 247, "742": 247, "743": 247, "744": 247, "745": 247, "746": [247, 334, 1013], "747": 247, "748": 247, "749": 247, "750": 247, "751": 247, "752": 247, "753": 247, "754": 247, "756": 247, "757": 247, "758": 247, "759": 247, "760": 247, "761": 247, "762": 247, "763": 247, "764": 247, "765": 247, "766": 247, "767": 247, "768": [247, 334], "769": 247, "770": [247, 334], "772": 247, "773": 247, "774": [247, 334], "775": 247, "776": 247, "778": 247, "779": 247, "780": 247, "781": [247, 334], "782": [247, 296], "783": 247, "784": 247, "785": 247, "786": 247, "788": [247, 334], "789": [247, 254], "790": 247, "791": [247, 753], "792": 247, "793": 247, "794": 247, "795": 247, "796": 247, "797": 247, "798": 247, "801": [247, 289], "802": 247, "803": 247, "804": [247, 334], "805": 247, "806": 247, "807": 247, "808": 247, "809": [247, 328], "810": 247, "811": [247, 334], "812": [247, 334], "813": [247, 334], "814": 247, "815": [247, 264], "816": [247, 270, 334], "817": 247, "818": 247, "819": 247, "820": 247, "822": 247, "823": 247, "824": 247, "826": 247, "827": [247, 334], "828": [247, 296, 334], "829": 247, "830": 247, "831": 247, "832": 247, "833": 247, "834": 247, "835": 247, "836": 247, "837": 247, "838": 247, "839": [247, 334], "840": 247, "841": 247, "842": 247, "843": 247, "844": [247, 334], "845": 247, "846": 247, "847": 247, "848": 247, "849": 247, "850": 247, "851": 247, "852": 247, "853": 247, "854": 247, "855": 247, "856": 247, "857": 247, "858": 247, "859": 247, "860": 247, "861": 247, "862": [247, 334], "863": 247, "864": 247, "865": 247, "866": 247, "867": 247, "868": 247, "870": 247, "871": 247, "872": 247, "873": 247, "874": [247, 501], "875": 247, "876": 247, "877": [247, 334], "878": 247, "879": [247, 465], "880": 247, "881": [247, 334], "882": 247, "883": [247, 334], "884": 247, "885": 247, "886": 247, "887": [247, 334], "889": 247, "890": 247, "891": [247, 334], "892": 247, "893": 247, "894": 247, "895": 247, "896": 247, "898": [247, 334], "899": 247, "901": 247, "902": [247, 919], "903": 247, "904": 247, "905": 247, "906": 247, "907": 247, "908": 247, "909": [247, 334], "911": 247, "912": 247, "913": 247, "914": 247, "915": 247, "916": 247, "917": [247, 296], "918": [247, 334], "919": 247, "920": 247, "921": [247, 334], "922": [247, 334], "923": 247, "924": 247, "925": 247, "926": [247, 334], "927": 247, "928": 247, "929": [247, 334], "930": 247, "931": 247, "932": 247, "933": [247, 334], "934": 247, "935": [247, 334], "936": 247, "937": 247, "938": 247, "939": [247, 334], "940": [247, 334], "941": [247, 334], "942": 247, "943": 247, "944": 247, "945": 247, "946": [247, 334], "947": 247, "948": 247, "949": [247, 334], "950": 247, "951": [247, 328], "952": 247, "953": 247, "954": 247, "955": 247, "956": 247, "957": 247, "958": 247, "959": 247, "960": 247, "961": 247, "962": 247, "963": 247, "964": [247, 334], "965": 247, "966": 247, "967": [247, 334], "968": 247, "969": 247, "970": 247, "971": [247, 334], "972": 247, "973": 247, "975": 247, "976": [247, 285, 292, 302, 306, 328, 334, 340], "977": [247, 285, 292, 302, 306, 328, 334, 340, 928], "timeaxi": 247, "myrang": 247, "1002": [247, 651, 652, 653, 654, 882], "1004": 247, "1006": 247, "1008": 247, "1010": 247, "1012": 247, "1014": 247, "1016": 247, "1018": 247, "1020": [247, 864, 865, 872], "1022": 247, "1028": 247, "1030": 247, "1032": 247, "1034": 247, "1036": 247, "1038": 247, "1040": 247, "1042": [247, 999], "1046": 247, "1048": 247, "1050": 247, "1052": 247, "1054": 247, "1056": 247, "1058": 247, "1060": 247, "1062": 247, "1064": 247, "1066": 247, "1068": [247, 296], "1070": [247, 296], "1072": [247, 296], "1074": 247, "1076": 247, "1078": 247, "1080": 247, "1082": 247, "1084": 247, "1086": 247, "1088": 247, "1090": 247, "1092": 247, "1094": 247, "1096": 247, "1098": 247, "1102": 247, "1104": 247, "1106": 247, "1108": 247, "1110": 247, "1114": 247, "1116": 247, "1118": 247, "1120": 247, "1122": 247, "1124": 247, "1126": 247, "1128": 247, "1130": 247, "1132": 247, "1134": 247, "1136": 247, "1138": 247, "1140": 247, "1142": 247, "1144": 247, "1146": 247, "1148": 247, "1150": [247, 1157, 1158], "1152": [247, 1157, 1158], "1154": 247, "1156": 247, "1158": 247, "1160": 247, "1162": 247, "1164": 247, "1166": 247, "1168": 247, "1170": 247, "1172": 247, "1174": 247, "1176": 247, "1178": 247, "1180": 247, "1182": 247, "1184": 247, "1186": 247, "1188": 247, "1190": 247, "1192": 247, "1194": 247, "1196": 247, "1198": 247, "1202": 247, "1204": 247, "1206": 247, "1208": 247, "1210": 247, "1212": 247, "1214": 247, "1216": 247, "1218": 247, "1220": 247, "1222": 247, "1224": 247, "1226": 247, "1228": 247, "1230": 247, "1232": 247, "1236": 247, "1238": 247, "1240": 247, "1242": 247, "1246": 247, "1248": 247, "1250": 247, "1252": 247, "1254": [247, 520, 521, 522, 534, 535, 536], "1256": 247, "1258": 247, "1260": [247, 485], "1262": 247, "1264": 247, "1266": 247, "1268": 247, "1270": 247, "1272": 247, "1274": 247, "1276": 247, "1278": 247, "1280": 247, "1282": 247, "1284": 247, "1286": 247, "1288": 247, "1290": 247, "1292": 247, "1294": 247, "1296": 247, "1298": 247, "1300": 247, "1302": 247, "1304": 247, "1306": 247, "1308": 247, "1310": 247, "1312": 247, "1314": 247, "1316": 247, "1318": 247, "1320": 247, "1322": 247, "1324": 247, "1326": 247, "1328": 247, "1330": 247, "1332": 247, "1334": 247, "1336": 247, "1338": 247, "1340": 247, "1342": [247, 1158], "1344": 247, "1346": 247, "1348": 247, "1350": 247, "1352": [247, 969], "1354": 247, "1356": 247, "1358": 247, "1360": 247, "1362": 247, "1364": 247, "1366": 247, "1368": 247, "1370": 247, "1372": 247, "1374": 247, "1378": 247, "1380": 247, "1382": 247, "1384": 247, "1386": 247, "1388": 247, "1390": 247, "1392": [247, 501, 1158], "1394": 247, "1396": 247, "1398": 247, "1400": 247, "1402": 247, "1406": 247, "1408": 247, "1410": 247, "1412": 247, "1414": 247, "1416": [247, 1080], "1418": 247, "1420": 247, "1422": 247, "1424": 247, "1426": 247, "1428": 247, "1430": 247, "1432": 247, "1434": 247, "1436": 247, "1438": 247, "1440": 247, "1442": 247, "1444": 247, "1446": 247, "1448": 247, "1450": 247, "1452": 247, "1454": 247, "1456": 247, "1458": 247, "1460": 247, "1462": 247, "1464": 247, "1466": 247, "1468": 247, "1470": 247, "1472": 247, "1474": 247, "1476": 247, "1478": 247, "1480": 247, "1482": 247, "1484": 247, "1486": 247, "1488": 247, "1490": 247, "1492": 247, "1494": 247, "1496": 247, "1498": 247, "1502": 247, "1504": 247, "1506": 247, "1508": 247, "1510": 247, "1512": 247, "1514": 247, "1516": 247, "1518": 247, "1520": 247, "1522": 247, "1524": 247, "1526": 247, "1528": 247, "1530": 247, "1532": 247, "1534": 247, "1536": [247, 1011], "1538": 247, "1540": 247, "1542": 247, "1544": 247, "1546": 247, "1548": 247, "1550": 247, "1552": 247, "1554": 247, "1556": 247, "1558": [247, 880], "1560": 247, "1562": 247, "1564": 247, "1566": 247, "1568": 247, "1570": 247, "1572": 247, "1574": 247, "1576": 247, "1578": 247, "1580": 247, "1582": 247, "1584": 247, "1586": 247, "1588": 247, "1590": 247, "1592": 247, "1594": 247, "1596": 247, "1598": 247, "1600": 247, "1602": 247, "1604": [247, 1005], "1606": 247, "1608": 247, "1610": 247, "1612": 247, "1614": 247, "1616": 247, "1618": 247, "1620": 247, "1622": 247, "1624": 247, "1626": 247, "1628": 247, "1630": 247, "1632": 247, "1634": [247, 520, 521], "1636": 247, "1638": 247, "1640": 247, "1642": 247, "1644": 247, "1646": [247, 1157], "1648": 247, "1650": 247, "1652": 247, "1654": 247, "1656": 247, "1658": 247, "1660": 247, "1662": 247, "1664": 247, "1666": 247, "1668": 247, "1672": 247, "1674": 247, "1676": 247, "1678": 247, "1680": 247, "1682": 247, "1684": 247, "1686": 247, "1688": [247, 1012, 1013], "1690": 247, "1692": 247, "1694": 247, "1696": 247, "1698": 247, "1700": 247, "1702": 247, "1704": 247, "1706": [247, 1023], "1708": 247, "1710": 247, "1712": 247, "1714": [247, 1157], "1716": [247, 1157], "1718": 247, "1722": 247, "1724": 247, "1726": 247, "1728": 247, "1730": 247, "1732": 247, "1734": 247, "1736": 247, "1738": 247, "1740": 247, "1742": 247, "1744": 247, "1746": 247, "1748": 247, "1750": 247, "1752": 247, "1754": 247, "1756": 247, "1758": 247, "1760": 247, "1762": 247, "1764": [247, 306], "1766": 247, "1768": 247, "1770": 247, "1772": 247, "1774": 247, "1776": 247, "1778": 247, "1780": 247, "1782": 247, "1784": 247, "1786": 247, "1788": 247, "1790": 247, "1792": 247, "1794": 247, "1796": 247, "1798": 247, "1800": [247, 1011], "1802": 247, "1804": 247, "1806": 247, "1808": 247, "1810": 247, "1812": 247, "1814": 247, "1816": 247, "1818": 247, "1820": 247, "1822": 247, "1824": 247, "1826": 247, "1828": 247, "1830": 247, "1832": 247, "1834": 247, "1836": 247, "1838": 247, "1840": 247, "1842": 247, "1844": 247, "1846": 247, "1848": 247, "1850": 247, "1852": 247, "1854": 247, "1856": 247, "1858": 247, "1860": 247, "1862": 247, "1864": 247, "1866": 247, "1868": 247, "1870": 247, "1872": 247, "1874": 247, "1876": 247, "1878": 247, "1880": 247, "1882": 247, "1884": 247, "1886": 247, "1888": 247, "1890": 247, "1892": 247, "1894": 247, "1896": 247, "1898": 247, "1900": [247, 257, 1125, 1127, 1131, 1133], "1902": 247, "1904": 247, "1906": 247, "1908": 247, "1910": 247, "1912": 247, "1914": 247, "1916": 247, "1918": 247, "1920": 247, "1922": 247, "1924": 247, "1926": 247, "1928": 247, "1930": 247, "1932": 247, "1934": 247, "1938": 247, "1940": 247, "1942": 247, "1944": 247, "1946": 247, "1948": 247, "1950": 247, "1952": 247, "1954": [247, 1091], "1956": [247, 1060], "1958": 247, "1962": 247, "1964": 247, "1968": [247, 430], "1970": [247, 769], "1972": 247, "1974": 247, "1976": 247, "1978": [247, 390], "1980": [247, 595, 1011], "1984": 247, "1986": [247, 1125, 1127, 1131, 1133], "1988": [247, 390, 504], "1990": [247, 595], "1992": 247, "1994": 247, "2004": 247, "2026": 247, "2028": 247, "2030": 247, "2032": 247, "2034": 247, "2036": 247, "2038": 247, "2040": 247, "2042": 247, "2044": 247, "2046": 247, "2050": 247, "2052": 247, "2054": 247, "2056": 247, "2058": 247, "2060": 247, "2062": 247, "2064": 247, "2066": 247, "2068": 247, "2070": 247, "2072": 247, "2074": 247, "2076": 247, "2078": 247, "2080": 247, "2082": 247, "2084": 247, "2086": 247, "2088": 247, "2090": 247, "2092": 247, "2094": 247, "2096": 247, "2098": 247, "2100": 247, "2102": 247, "2104": 247, "2106": 247, "2108": 247, "2110": 247, "2112": 247, "2114": 247, "2116": 247, "2118": 247, "2120": 247, "2122": 247, "2124": 247, "2126": 247, "2128": 247, "2130": 247, "2132": 247, "2134": 247, "2136": 247, "2138": 247, "2140": 247, "2142": 247, "2144": 247, "2146": 247, "2148": 247, "2150": 247, "2152": 247, "2154": 247, "2156": 247, "2158": 247, "2160": 247, "2162": 247, "2164": 247, "2166": 247, "2168": 247, "2170": 247, "2172": 247, "2174": 247, "2176": 247, "2178": 247, "2180": 247, "2182": 247, "2184": 247, "2186": 247, "2188": 247, "2190": 247, "2192": 247, "2194": 247, "2196": [247, 788], "2198": 247, "2200": 247, "2202": 247, "2204": 247, "2206": 247, "2208": 247, "2210": 247, "2214": 247, "2216": 247, "2218": 247, "2220": 247, "2222": 247, "2224": 247, "2226": 247, "2228": 247, "2230": 247, "2232": 247, "2234": 247, "2236": 247, "2238": 247, "2240": 247, "2242": 247, "2244": 247, "2246": 247, "2248": 247, "2250": 247, "2252": 247, "2254": 247, "2256": 247, "2258": 247, "2260": 247, "2262": 247, "2264": 247, "2266": 247, "2268": 247, "2272": 247, "2274": 247, "2276": 247, "2278": 247, "2280": 247, "2282": 247, "2284": 247, "2286": 247, "2288": 247, "2290": 247, "2292": 247, "2294": 247, "2296": 247, "2298": 247, "2300": 247, "2302": 247, "2304": 247, "2306": 247, "2308": 247, "2310": 247, "2312": 247, "2314": 247, "2316": 247, "2318": 247, "2320": 247, "2322": 247, "2324": 247, "2326": 247, "2328": 247, "2330": 247, "2332": [247, 919], "2334": 247, "2336": 247, "2338": 247, "2340": 247, "2342": 247, "2344": 247, "2346": 247, "2348": 247, "2350": 247, "2352": 247, "2354": 247, "2356": 247, "2358": 247, "2360": 247, "2362": 247, "2364": 247, "2366": 247, "2368": 247, "2370": 247, "2372": 247, "2374": 247, "2376": 247, "2378": 247, "2380": 247, "2382": 247, "2384": 247, "2386": 247, "2388": 247, "2390": 247, "2392": 247, "2394": 247, "2396": 247, "2398": 247, "2400": 247, "2402": 247, "2404": 247, "2406": 247, "2408": 247, "2410": 247, "2412": 247, "2414": 247, "2416": 247, "2418": 247, "2420": 247, "2422": 247, "2424": 247, "2426": 247, "2428": 247, "2430": 247, "2432": 247, "2434": 247, "2436": 247, "2438": 247, "2440": [247, 328, 334, 340], "2442": 247, "2444": 247, "2446": 247, "2448": 247, "2450": 247, "2452": 247, "2454": 247, "2456": 247, "2458": 247, "2460": [247, 744], "2462": 247, "2464": 247, "2466": 247, "2468": 247, "2470": 247, "2472": 247, "2474": 247, "2476": 247, "2478": 247, "2480": 247, "2482": 247, "2484": 247, "2486": 247, "2488": 247, "2490": 247, "2492": 247, "2494": 247, "2496": 247, "2498": 247, "2500": 247, "2502": 247, "2504": 247, "2506": 247, "2508": 247, "2510": 247, "2512": 247, "2514": 247, "2516": 247, "2518": 247, "2520": 247, "2522": 247, "2524": 247, "2526": 247, "2528": 247, "2530": 247, "2532": 247, "2534": 247, "2536": 247, "2538": 247, "2540": 247, "2542": 247, "2544": 247, "2546": 247, "2548": 247, "2550": 247, "2552": 247, "2554": 247, "2556": 247, "2558": 247, "2560": 247, "2562": 247, "2564": 247, "2566": 247, "2568": 247, "2570": 247, "2572": 247, "2574": 247, "2576": 247, "2578": 247, "2580": 247, "2582": 247, "2584": 247, "2586": 247, "2588": 247, "2590": 247, "2592": 247, "2594": 247, "2596": 247, "2598": 247, "2600": 247, "2602": 247, "2604": 247, "2606": 247, "2608": 247, "2610": 247, "2612": 247, "2614": 247, "2616": 247, "2618": 247, "2620": 247, "2622": 247, "2624": 247, "2626": 247, "2628": 247, "2630": 247, "2632": 247, "2634": 247, "2636": 247, "2638": 247, "2640": [247, 306], "2642": 247, "2644": 247, "2646": 247, "2648": 247, "2650": 247, "2652": 247, "2654": 247, "2656": 247, "2658": 247, "2660": 247, "2662": 247, "2664": 247, "2666": 247, "2668": 247, "2670": 247, "2672": 247, "2674": 247, "2676": 247, "2678": 247, "2680": 247, "2682": 247, "2684": 247, "2686": 247, "2688": 247, "2690": 247, "2692": 247, "2694": 247, "2696": 247, "2698": 247, "2700": 247, "2702": 247, "2704": 247, "2706": [247, 252], "2708": 247, "2710": 247, "2712": 247, "2714": 247, "2716": 247, "2718": 247, "2720": 247, "2722": 247, "2724": 247, "2726": 247, "2728": 247, "2730": [247, 302], "2732": 247, "2734": 247, "2736": 247, "2738": 247, "2740": 247, "2742": 247, "2744": 247, "2746": [247, 919, 945, 969], "2748": [247, 267, 285, 292, 324, 328, 334, 340], "2750": 247, "2752": 247, "2754": 247, "2756": 247, "2758": 247, "2760": 247, "2762": 247, "2764": 247, "2766": 247, "2768": 247, "2770": 247, "2772": 247, "2774": 247, "2776": 247, "2778": 247, "2780": 247, "2782": 247, "2784": 247, "2786": 247, "2788": 247, "2790": 247, "2792": 247, "2794": 247, "2796": 247, "2798": 247, "2800": [247, 290, 478], "2802": [247, 478], "2804": 247, "2806": 247, "2808": 247, "2810": 247, "2812": 247, "2814": 247, "2816": 247, "2818": 247, "2820": 247, "2822": 247, "2824": 247, "2826": 247, "2828": [247, 472], "2830": 247, "2832": 247, "2834": 247, "2836": 247, "2838": 247, "2840": 247, "2842": 247, "2844": 247, "2846": 247, "2848": 247, "2850": 247, "2852": 247, "2854": 247, "2856": 247, "2858": 247, "2860": 247, "2862": 247, "2864": 247, "2866": 247, "2868": 247, "2870": 247, "2872": 247, "2874": 247, "2876": 247, "2878": 247, "2880": 247, "2882": 247, "2884": 247, "2886": 247, "2888": 247, "2890": 247, "2892": 247, "2894": 247, "2896": 247, "2898": 247, "2900": 247, "2902": 247, "2904": 247, "2906": 247, "2910": 247, "2912": 247, "2914": 247, "2916": 247, "2918": 247, "2920": 247, "2922": 247, "2924": 247, "2926": 247, "2928": 247, "2930": 247, "2932": 247, "2934": 247, "2936": 247, "2938": 247, "2940": 247, "2942": 247, "2944": 247, "2946": 247, "2948": 247, "2950": 247, "2952": 247, "2954": 247, "2956": 247, "2958": 247, "2960": 247, "2962": 247, "2964": 247, "2966": 247, "2968": 247, "2970": 247, "2972": 247, "2974": 247, "2976": 247, "2978": 247, "2980": 247, "2982": 247, "2984": 247, "2986": 247, "2988": 247, "2990": 247, "2992": 247, "2994": 247, "2996": 247, "2998": 247, "3002": 247, "3004": 247, "3006": 247, "3008": 247, "3010": 247, "3012": 247, "3014": 247, "3016": 247, "3018": 247, "3020": 247, "3022": 247, "3024": 247, "3026": 247, "3028": 247, "3030": 247, "3032": 247, "3034": 247, "3036": 247, "3038": 247, "3040": 247, "3042": 247, "3044": 247, "3046": 247, "3048": 247, "3050": 247, "3052": 247, "3054": 247, "3056": 247, "3058": 247, "3060": 247, "3062": 247, "3064": 247, "3066": 247, "3068": 247, "3070": 247, "3072": 247, "3074": 247, "3076": 247, "3078": 247, "3080": 247, "3082": 247, "3084": 247, "3086": 247, "3088": 247, "3090": 247, "3092": 247, "3094": 247, "3096": 247, "3098": 247, "3100": 247, "3102": 247, "3104": 247, "3106": 247, "3108": 247, "3110": [247, 296], "3112": 247, "3114": 247, "3116": 247, "3118": 247, "3120": 247, "3122": 247, "3124": 247, "3126": 247, "3128": 247, "3130": 247, "3132": 247, "3134": 247, "3136": 247, "3138": 247, "3140": 247, "3142": 247, "3144": 247, "3146": 247, "3148": 247, "3150": 247, "3152": 247, "3154": 247, "3156": 247, "3158": 247, "3160": 247, "3162": 247, "3164": 247, "3166": 247, "3168": 247, "3170": 247, "3172": 247, "3174": 247, "3176": 247, "3178": 247, "3180": 247, "3182": 247, "3184": 247, "3186": 247, "3188": 247, "3190": 247, "3192": 247, "3194": 247, "3196": 247, "3198": 247, "3200": 247, "3202": 247, "3204": 247, "3206": 247, "3208": 247, "3210": 247, "3212": 247, "3214": 247, "3216": 247, "3218": 247, "3220": 247, "3222": 247, "3224": 247, "3226": 247, "3228": 247, "3230": 247, "3232": 247, "3234": 247, "3236": 247, "3238": 247, "3240": 247, "3242": 247, "3244": 247, "3246": 247, "3248": 247, "3250": 247, "3252": 247, "3254": 247, "3256": 247, "3258": 247, "3260": 247, "3262": 247, "3264": 247, "3266": 247, "3268": 247, "3270": 247, "3272": 247, "3274": 247, "3276": 247, "3278": 247, "3280": 247, "3282": 247, "3284": 247, "3286": 247, "3288": 247, "3290": 247, "3292": 247, "3294": 247, "3296": 247, "3298": 247, "3300": 247, "3302": 247, "3304": 247, "3306": 247, "3308": 247, "3310": 247, "3312": 247, "3314": 247, "3316": 247, "3318": 247, "3320": 247, "3322": 247, "3324": 247, "3326": 247, "3328": 247, "3330": 247, "3332": 247, "3334": 247, "3336": 247, "3338": 247, "3340": 247, "3342": 247, "3344": 247, "3346": 247, "3348": 247, "3350": 247, "3352": 247, "3354": 247, "3356": 247, "3358": 247, "3360": 247, "3362": 247, "3364": 247, "3366": 247, "3368": 247, "3370": 247, "3372": 247, "3374": 247, "3376": 247, "3378": 247, "3380": 247, "3382": 247, "3384": 247, "3386": 247, "3388": 247, "3390": 247, "3392": 247, "3394": 247, "3396": 247, "3398": 247, "3400": 247, "3402": 247, "3404": 247, "3406": 247, "3408": 247, "3410": 247, "3412": 247, "3414": 247, "3416": 247, "3418": 247, "3420": 247, "3422": 247, "3424": 247, "3426": 247, "3428": 247, "3430": 247, "3432": 247, "3434": 247, "3436": 247, "3438": 247, "3440": 247, "3442": 247, "3444": 247, "3446": 247, "3448": 247, "3450": 247, "3452": 247, "3454": 247, "3456": 247, "3458": 247, "3460": 247, "3462": 247, "3464": 247, "3466": 247, "3468": 247, "3470": 247, "3472": 247, "3474": 247, "3476": 247, "3478": 247, "3480": 247, "3482": 247, "3484": 247, "3486": 247, "3488": 247, "3490": 247, "3492": 247, "3494": 247, "3496": 247, "3498": 247, "3500": 247, "3502": 247, "3504": 247, "3506": 247, "3508": 247, "3510": 247, "3512": 247, "3514": 247, "3516": 247, "3518": 247, "3520": 247, "3522": 247, "3524": 247, "3526": 247, "3528": 247, "3530": 247, "3532": 247, "3534": 247, "3536": 247, "3538": 247, "3540": 247, "3542": 247, "3544": 247, "3546": 247, "3548": 247, "3550": 247, "3552": 247, "3554": 247, "3556": 247, "3558": 247, "3560": 247, "3562": 247, "3564": 247, "3566": 247, "3568": 247, "3570": 247, "3572": 247, "3574": 247, "3576": 247, "3578": 247, "3580": 247, "3582": 247, "3584": 247, "3586": 247, "3588": 247, "3590": 247, "3592": 247, "3594": 247, "3596": 247, "3598": 247, "3602": 247, "3604": 247, "3606": 247, "3608": 247, "3610": 247, "3612": 247, "3614": 247, "3616": 247, "3618": 247, "3620": 247, "3622": 247, "3624": 247, "3626": 247, "3628": 247, "3630": 247, "3632": 247, "3634": 247, "3636": 247, "3638": 247, "3640": 247, "3642": 247, "3644": 247, "3646": 247, "3648": 247, "3650": 247, "3652": 247, "3654": 247, "3656": 247, "3658": 247, "3660": 247, "3662": 247, "3664": 247, "3666": 247, "3668": 247, "3670": 247, "3672": 247, "3674": 247, "3676": 247, "3678": 247, "3680": 247, "3682": 247, "3684": 247, "3686": 247, "3688": 247, "3690": 247, "3692": 247, "3694": 247, "3696": 247, "3698": 247, "3700": 247, "3702": 247, "3704": 247, "3706": 247, "3708": 247, "3710": 247, "3712": 247, "3714": 247, "3716": 247, "3718": 247, "3720": 247, "3722": [247, 966], "3724": 247, "3726": 247, "3728": 247, "3730": 247, "3732": 247, "3734": 247, "3736": 247, "3738": 247, "3740": 247, "3742": 247, "3744": 247, "3746": 247, "3748": 247, "3750": 247, "3752": 247, "3754": 247, "3756": 247, "3758": 247, "3760": 247, "3762": 247, "3764": 247, "3766": 247, "3768": 247, "3770": [247, 296], "3772": 247, "3774": 247, "3776": 247, "3778": 247, "3780": 247, "3782": 247, "3784": 247, "3786": 247, "3788": 247, "3790": [247, 1158], "3792": [247, 1158], "3794": [247, 1158], "3796": [247, 1158], "3798": [247, 1158], "3800": [247, 1158], "3802": [247, 1158], "3804": 247, "3806": 247, "3808": 247, "3810": 247, "3812": 247, "3814": 247, "3816": 247, "3818": 247, "3820": 247, "3822": 247, "3824": 247, "3826": 247, "3828": 247, "3830": 247, "3832": 247, "3834": 247, "3836": 247, "3838": 247, "3840": 247, "3842": 247, "3844": 247, "3846": 247, "3848": 247, "3850": 247, "3852": 247, "3854": 247, "3856": 247, "3858": 247, "3860": 247, "3862": 247, "3864": 247, "3866": 247, "3868": 247, "3870": 247, "3872": 247, "3874": 247, "3876": 247, "3878": 247, "3880": 247, "3882": 247, "3884": 247, "3886": 247, "3888": 247, "3890": 247, "3892": 247, "3894": 247, "3896": 247, "3898": 247, "3900": 247, "3902": 247, "3904": 247, "3906": 247, "3908": 247, "3910": 247, "3912": 247, "3914": 247, "3916": 247, "3918": 247, "3920": 247, "3922": 247, "3924": 247, "3926": 247, "3928": 247, "3930": 247, "3932": 247, "3934": 247, "3936": 247, "3938": 247, "3940": 247, "3942": 247, "3946": 247, "3948": 247, "3950": 247, "3952": 247, "3954": 247, "3956": 247, "3958": 247, "3960": 247, "3962": 247, "3964": 247, "3966": 247, "3968": 247, "3970": 247, "3972": 247, "3974": 247, "3976": 247, "3978": 247, "3980": 247, "3982": 247, "3984": 247, "3986": 247, "3988": 247, "3990": 247, "3992": 247, "3994": 247, "3996": 247, "3998": 247, "4002": 247, "4004": 247, "4006": 247, "4008": 247, "4010": 247, "4012": 247, "4014": 247, "4016": 247, "4018": 247, "4020": 247, "4022": 247, "4024": 247, "4026": 247, "4028": 247, "4030": 247, "4032": 247, "4034": 247, "4036": 247, "4038": 247, "4040": 247, "4042": 247, "4044": 247, "4046": 247, "4048": 247, "4050": 247, "4052": 247, "4054": 247, "4056": 247, "4058": 247, "4060": 247, "4062": 247, "4064": 247, "4066": 247, "4068": 247, "4070": 247, "4072": 247, "4074": 247, "4076": 247, "4078": 247, "4080": 247, "4082": 247, "4084": 247, "4086": 247, "4088": 247, "4090": 247, "4092": 247, "4094": 247, "4098": 247, "4100": 247, "4102": 247, "4104": 247, "4106": 247, "4108": 247, "4110": 247, "4112": 247, "4114": 247, "4116": 247, "4118": 247, "4120": 247, "4122": 247, "4124": 247, "4126": 247, "4128": 247, "4130": 247, "4132": 247, "4134": 247, "4136": 247, "4138": 247, "4140": 247, "4142": 247, "4144": 247, "4146": 247, "4148": 247, "4150": 247, "4152": 247, "4154": 247, "4156": 247, "4158": 247, "4160": 247, "4162": 247, "4164": 247, "4166": 247, "4168": 247, "4170": 247, "4172": 247, "4174": 247, "4176": 247, "4178": 247, "4180": 247, "4182": 247, "4184": 247, "4186": 247, "4188": 247, "4190": 247, "4192": 247, "4194": 247, "4196": 247, "4198": 247, "4200": 247, "4202": 247, "4204": 247, "4206": 247, "4208": 247, "4210": 247, "4212": 247, "4214": 247, "4216": 247, "4218": 247, "4220": 247, "4222": 247, "4224": 247, "4226": 247, "4228": 247, "4230": 247, "4232": 247, "4234": [247, 1158], "4236": [247, 1158], "4238": [247, 1158], "4240": 247, "4242": 247, "4244": 247, "4246": 247, "4248": 247, "4250": 247, "4252": 247, "4254": 247, "4256": 247, "4258": 247, "4260": 247, "4262": 247, "4264": 247, "4266": 247, "4268": 247, "4270": 247, "4272": 247, "4274": 247, "4276": 247, "4278": 247, "4280": 247, "4282": 247, "4284": 247, "4286": 247, "4288": 247, "4290": 247, "4292": 247, "4294": 247, "4296": 247, "4298": 247, "4300": 247, "4302": 247, "4304": 247, "4306": 247, "4308": 247, "4310": 247, "4312": 247, "4314": 247, "4316": 247, "4318": 247, "4320": 247, "4322": 247, "4324": 247, "4326": 247, "4328": 247, "4330": 247, "4332": 247, "4334": 247, "4336": 247, "4338": 247, "4340": 247, "4342": 247, "4344": 247, "4346": 247, "4348": 247, "4350": 247, "4352": 247, "4354": 247, "4356": 247, "4358": 247, "4360": 247, "4362": 247, "4364": 247, "4366": 247, "4368": 247, "4370": 247, "4372": 247, "4374": 247, "4376": 247, "4378": 247, "4380": 247, "4382": 247, "4384": 247, "4386": 247, "4388": 247, "4390": 247, "4392": 247, "4394": 247, "4396": 247, "4398": 247, "4400": 247, "4402": 247, "4404": 247, "4406": 247, "4408": 247, "4410": 247, "4412": 247, "4414": 247, "4416": 247, "4418": 247, "4420": 247, "4422": 247, "4424": 247, "4426": 247, "4428": 247, "4430": 247, "4432": 247, "4434": 247, "4436": 247, "4438": 247, "4440": 247, "4442": 247, "4444": 247, "4446": 247, "4448": 247, "4450": 247, "4452": 247, "4454": 247, "4456": 247, "4458": 247, "4460": 247, "4462": 247, "4464": 247, "4466": 247, "4468": 247, "4470": 247, "4472": 247, "4474": 247, "4476": 247, "4478": 247, "4480": 247, "4482": 247, "4484": 247, "4486": 247, "4488": 247, "4490": 247, "4492": 247, "4494": 247, "4496": 247, "4498": 247, "4502": 247, "4504": 247, "4506": 247, "4508": 247, "4510": 247, "4512": 247, "4514": 247, "4516": 247, "4518": 247, "4520": 247, "4522": 247, "4524": 247, "4526": 247, "4528": 247, "4530": 247, "4532": 247, "4534": 247, "4536": 247, "4538": 247, "4540": 247, "4542": 247, "4544": 247, "4546": 247, "4548": 247, "4550": 247, "4552": 247, "4554": 247, "4556": 247, "4558": 247, "4560": 247, "4562": 247, "4564": 247, "4566": 247, "4568": 247, "4570": 247, "4572": 247, "4574": 247, "4578": 247, "4580": 247, "4582": 247, "4584": 247, "4586": 247, "4588": 247, "4590": 247, "4592": 247, "4594": 247, "4596": 247, "4598": 247, "4600": 247, "4602": 247, "4604": 247, "4606": 247, "4608": 247, "4610": 247, "4612": 247, "4614": 247, "4616": 247, "4618": 247, "4620": 247, "4622": 247, "4624": 247, "4626": 247, "4628": [247, 260], "4630": [247, 472], "4632": 247, "4634": 247, "4636": 247, "4638": 247, "4640": 247, "4642": 247, "4644": 247, "4646": 247, "4648": 247, "4650": 247, "4652": 247, "4654": 247, "4656": 247, "4658": 247, "4662": 247, "4664": 247, "4666": 247, "4668": 247, "4670": 247, "4672": 247, "4674": 247, "4676": 247, "4680": 247, "4682": 247, "4684": 247, "4686": 247, "4688": 247, "4690": 247, "4692": 247, "4694": 247, "4696": 247, "4698": 247, "4700": 247, "4702": 247, "4704": 247, "4706": 247, "4708": 247, "4710": 247, "4712": 247, "4714": 247, "4716": 247, "4718": 247, "4720": 247, "4722": 247, "4724": 247, "4726": 247, "4728": 247, "4730": 247, "4732": 247, "4734": 247, "4736": 247, "4738": 247, "4740": 247, "4742": 247, "4744": 247, "4746": 247, "4748": 247, "4750": 247, "4752": 247, "4754": 247, "4756": 247, "4758": 247, "4760": 247, "4762": 247, "4764": 247, "4766": 247, "4768": 247, "4770": 247, "4772": 247, "4774": 247, "4776": 247, "4778": 247, "4780": 247, "4782": 247, "4784": 247, "4786": 247, "4788": 247, "4790": 247, "4792": 247, "4794": 247, "4796": 247, "4798": 247, "4802": 247, "4804": 247, "4806": 247, "4808": 247, "4810": 247, "4812": 247, "4814": 247, "4816": 247, "4818": 247, "4820": 247, "4822": 247, "4824": 247, "4826": 247, "4828": 247, "4830": 247, "4832": 247, "4834": 247, "4836": 247, "4838": 247, "4840": 247, "4842": 247, "4844": 247, "4846": 247, "4848": 247, "4850": 247, "4852": 247, "4854": 247, "4856": 247, "4858": 247, "4860": 247, "4862": 247, "4864": 247, "4866": [247, 257], "4868": 247, "4870": 247, "4872": 247, "4874": 247, "4876": 247, "4878": 247, "4880": 247, "4882": [247, 882], "4884": 247, "4886": 247, "4888": 247, "4890": 247, "4892": 247, "4894": 247, "4896": 247, "4898": 247, "4900": 247, "4902": 247, "4904": 247, "4906": 247, "4908": 247, "4910": 247, "4912": 247, "4914": 247, "4916": 247, "4918": 247, "4920": 247, "4922": 247, "4924": 247, "4926": [247, 260], "4928": 247, "4930": 247, "4932": 247, "4934": 247, "4936": 247, "4938": 247, "4940": 247, "4942": 247, "4944": 247, "4946": 247, "4948": 247, "4950": [247, 264], "4952": 247, "4954": 247, "4956": 247, "4958": 247, "4960": 247, "4962": 247, "4964": 247, "4966": 247, "4968": 247, "4970": 247, "4972": 247, "4974": 247, "4976": 247, "4978": 247, "4980": 247, "4982": 247, "4984": 247, "4986": 247, "4988": 247, "4990": 247, "4992": 247, "4994": 247, "4996": 247, "4998": 247, "5002": 247, "5004": 247, "5006": 247, "5008": 247, "5010": 247, "5012": 247, "5014": 247, "5016": 247, "5018": 247, "5020": 247, "5022": 247, "5024": 247, "5026": 247, "5028": 247, "5030": 247, "5032": 247, "5034": 247, "5036": 247, "5038": 247, "5040": 247, "5042": 247, "5044": 247, "5046": 247, "5048": 247, "5052": 247, "5054": 247, "5056": 247, "5058": 247, "5060": 247, "5062": 247, "5064": 247, "5066": 247, "5068": 247, "5070": 247, "5072": 247, "5074": 247, "5076": 247, "5078": 247, "5080": [247, 919], "5082": 247, "5084": 247, "5086": 247, "5088": 247, "5090": 247, "5092": 247, "5094": 247, "5096": 247, "5098": 247, "5100": 247, "5102": 247, "5104": 247, "5106": 247, "5108": 247, "5110": 247, "5112": 247, "5114": 247, "5116": 247, "5118": 247, "5120": 247, "5122": 247, "5124": 247, "5126": 247, "5128": 247, "5130": 247, "5132": 247, "5134": 247, "5136": 247, "5138": 247, "5140": 247, "5142": 247, "5144": 247, "5146": 247, "5148": 247, "5150": 247, "5152": 247, "5154": 247, "5156": 247, "5158": 247, "5160": 247, "5162": 247, "5164": 247, "5166": 247, "5168": 247, "5170": 247, "5172": 247, "5174": 247, "5176": 247, "5178": 247, "5180": 247, "5182": 247, "5184": 247, "5186": 247, "5188": 247, "5190": 247, "5192": 247, "5194": 247, "5196": 247, "5198": 247, "5200": 247, "5202": 247, "5204": 247, "5206": 247, "5208": 247, "5210": 247, "5212": 247, "5214": 247, "5216": 247, "5218": 247, "5220": 247, "5222": 247, "5224": 247, "5226": 247, "5228": 247, "5230": 247, "5232": 247, "5234": 247, "5236": 247, "5238": 247, "5240": 247, "5242": 247, "5244": 247, "5246": 247, "5248": 247, "5250": 247, "5252": 247, "5254": 247, "5256": 247, "5258": 247, "5260": 247, "5262": 247, "5264": 247, "5266": 247, "5268": 247, "5270": 247, "5272": 247, "5274": 247, "5276": 247, "5278": 247, "5280": 247, "5282": 247, "5284": 247, "5286": 247, "5288": 247, "5290": 247, "5292": 247, "5294": 247, "5296": 247, "5298": 247, "5300": 247, "5302": 247, "5304": 247, "5306": 247, "5308": 247, "5310": 247, "5312": 247, "5314": 247, "5316": 247, "5318": 247, "5320": 247, "5322": 247, "5324": 247, "5326": 247, "5328": 247, "5330": 247, "5332": 247, "5334": 247, "5336": 247, "5338": 247, "5340": 247, "5342": 247, "5344": 247, "5346": 247, "5348": 247, "5350": 247, "5352": 247, "5354": 247, "5356": 247, "5358": 247, "5360": 247, "5362": [247, 290, 478], "5364": 247, "5366": 247, "5368": 247, "5370": 247, "5372": 247, "5374": 247, "5376": 247, "5378": 247, "5380": 247, "5382": 247, "5384": 247, "5386": 247, "5388": 247, "5390": 247, "5392": 247, "5394": 247, "5396": 247, "5398": 247, "5400": 247, "5402": 247, "5404": 247, "5406": 247, "5408": 247, "5410": [247, 472], "5412": 247, "5414": 247, "5416": 247, "5418": 247, "5420": 247, "5422": 247, "5424": 247, "5426": 247, "5428": 247, "5430": 247, "5432": 247, "5434": 247, "5436": 247, "5438": 247, "5440": 247, "5442": 247, "5444": 247, "5446": 247, "5448": 247, "5450": 247, "5452": 247, "5454": 247, "5456": 247, "5458": 247, "5460": 247, "5462": 247, "5464": 247, "5466": 247, "5468": 247, "5470": 247, "5472": 247, "5474": 247, "5476": 247, "5478": 247, "5480": 247, "5482": 247, "5484": 247, "5486": 247, "5488": 247, "5490": 247, "5492": 247, "5494": 247, "5496": 247, "5498": 247, "5500": 247, "5502": 247, "5504": 247, "5506": 247, "5508": 247, "5510": 247, "5512": 247, "5514": 247, "5516": 247, "5518": 247, "5520": 247, "5522": 247, "5524": 247, "5526": 247, "5528": 247, "5530": 247, "5532": 247, "5534": 247, "5536": 247, "5538": 247, "5540": 247, "5542": 247, "5544": 247, "5546": 247, "5548": 247, "5550": 247, "5552": 247, "5554": 247, "5556": 247, "5558": 247, "5560": 247, "5562": 247, "5564": 247, "5566": 247, "5568": 247, "5570": 247, "5572": 247, "5574": 247, "5576": 247, "5578": 247, "5580": 247, "5582": 247, "5584": 247, "5586": 247, "5588": 247, "5590": 247, "5592": 247, "5594": 247, "5596": 247, "5598": 247, "5600": 247, "5602": 247, "5604": 247, "5606": 247, "5608": 247, "5610": 247, "5612": 247, "5614": 247, "5616": 247, "5618": 247, "5620": 247, "5622": 247, "5624": 247, "5626": 247, "5628": 247, "5630": 247, "5632": 247, "5634": 247, "5636": 247, "5638": 247, "5640": 247, "5642": 247, "5644": 247, "5646": 247, "5648": 247, "5650": 247, "5652": 247, "5654": 247, "5656": 247, "5658": 247, "5660": 247, "5662": 247, "5664": 247, "5666": 247, "5668": 247, "5670": 247, "5672": 247, "5674": 247, "5676": 247, "5678": [247, 952], "5680": 247, "5682": 247, "5684": 247, "5686": 247, "5688": 247, "5690": 247, "5692": 247, "5694": 247, "5696": 247, "5698": 247, "5700": 247, "5702": 247, "5704": 247, "5706": 247, "5708": 247, "5710": 247, "5712": 247, "5714": 247, "5716": 247, "5718": 247, "5720": 247, "5722": 247, "5724": 247, "5726": 247, "5728": 247, "5730": 247, "5732": 247, "5734": 247, "5736": 247, "5738": 247, "5740": 247, "5742": 247, "5744": 247, "5746": 247, "5748": 247, "5750": 247, "5752": 247, "5754": 247, "5756": 247, "5758": 247, "5760": 247, "5762": 247, "5764": 247, "5766": 247, "5768": 247, "5770": 247, "5772": 247, "5774": 247, "5776": 247, "5778": 247, "5780": 247, "5782": 247, "5784": 247, "5786": 247, "5788": 247, "5790": 247, "5792": 247, "5794": 247, "5796": 247, "5798": 247, "5800": 247, "5802": 247, "5804": 247, "5806": 247, "5808": 247, "5810": 247, "5812": 247, "5814": 247, "5816": 247, "5818": 247, "5820": 247, "5822": 247, "5824": 247, "5826": 247, "5828": 247, "5830": 247, "5832": [247, 257], "5834": 247, "5836": 247, "5838": 247, "5840": 247, "5842": 247, "5844": 247, "5846": 247, "5848": 247, "5850": 247, "5852": 247, "5854": 247, "5856": 247, "5858": 247, "5860": 247, "5862": 247, "5864": 247, "5866": 247, "5868": 247, "5870": 247, "5872": 247, "5874": 247, "5876": 247, "5878": 247, "5880": 247, "5882": 247, "5884": 247, "5886": 247, "5888": 247, "5890": 247, "5892": 247, "5894": 247, "5896": 247, "5898": 247, "5900": 247, "5902": 247, "5904": 247, "5906": 247, "5908": 247, "5910": 247, "5912": 247, "5914": 247, "5916": 247, "5918": 247, "5920": 247, "5922": 247, "5924": 247, "5926": 247, "5928": 247, "5930": 247, "5932": 247, "5934": 247, "5936": 247, "5938": 247, "5940": 247, "5942": 247, "5944": 247, "5946": 247, "5948": 247, "5950": 247, "5952": 247, "5954": 247, "5956": 247, "5958": 247, "5960": 247, "5962": 247, "5964": 247, "5966": 247, "5968": 247, "5970": 247, "5972": 247, "5974": 247, "5976": 247, "5978": 247, "5980": 247, "5982": 247, "5984": 247, "5986": 247, "5988": 247, "5990": 247, "5992": 247, "5994": 247, "5996": 247, "5998": 247, "6000": [247, 1051], "6002": 247, "6004": 247, "6006": 247, "6008": 247, "6010": 247, "6012": 247, "6014": 247, "6016": 247, "6018": 247, "6020": 247, "6022": 247, "6024": 247, "6026": 247, "6028": 247, "6030": 247, "6032": 247, "6034": 247, "6036": 247, "6038": 247, "6040": 247, "6042": 247, "6044": 247, "6046": 247, "6048": 247, "6050": 247, "6052": 247, "6054": 247, "6056": 247, "6058": 247, "6060": 247, "6062": 247, "6064": 247, "6066": 247, "6068": 247, "6070": 247, "6072": 247, "6074": 247, "6076": 247, "6078": 247, "6080": 247, "6082": 247, "6084": 247, "6086": 247, "6088": 247, "6090": 247, "6092": 247, "6094": 247, "6096": 247, "6098": 247, "6100": 247, "6102": 247, "6104": 247, "6106": 247, "6108": 247, "6110": 247, "6112": 247, "6114": 247, "6116": 247, "6118": 247, "6120": 247, "6122": 247, "6124": 247, "6126": 247, "6128": 247, "6130": 247, "6132": 247, "6134": 247, "6136": 247, "6138": 247, "6140": 247, "6142": 247, "6144": 247, "6146": 247, "6148": 247, "6150": 247, "6152": 247, "6154": 247, "6156": 247, "6158": 247, "6160": 247, "6162": 247, "6164": 247, "6166": 247, "6168": 247, "6170": 247, "6172": 247, "6174": 247, "6176": 247, "6178": 247, "6180": 247, "6182": 247, "6184": 247, "6186": 247, "6188": 247, "6190": 247, "6192": 247, "6194": 247, "6196": 247, "6198": 247, "6200": 247, "6202": 247, "6204": 247, "6206": 247, "6208": 247, "6210": 247, "6212": 247, "6214": 247, "6216": 247, "6218": 247, "6220": 247, "6222": 247, "6224": 247, "6226": 247, "6228": 247, "6230": 247, "6232": 247, "6234": 247, "6236": 247, "6238": 247, "6240": 247, "6242": 247, "6244": 247, "6246": 247, "6248": 247, "6250": 247, "6252": 247, "6254": 247, "6256": 247, "6258": 247, "6260": 247, "6262": 247, "6264": 247, "6266": 247, "6268": 247, "6270": 247, "6272": 247, "6274": 247, "6276": 247, "6278": 247, "6280": 247, "6282": 247, "6284": 247, "6286": 247, "6288": 247, "6290": 247, "6292": 247, "6294": 247, "6296": 247, "6298": 247, "6300": 247, "6302": 247, "6304": 247, "6306": 247, "6308": 247, "6310": 247, "6312": 247, "6314": 247, "6316": 247, "6318": 247, "6320": 247, "6322": 247, "6324": 247, "6326": 247, "6328": 247, "6330": 247, "6332": 247, "6334": 247, "6336": 247, "6338": 247, "6340": 247, "6342": 247, "6344": 247, "6346": 247, "6348": 247, "6350": 247, "6352": 247, "6354": 247, "6356": 247, "6358": [247, 1035], "6360": 247, "6362": 247, "6364": 247, "6366": 247, "6368": 247, "6370": 247, "6372": 247, "6374": 247, "6376": 247, "6378": 247, "6380": 247, "6382": 247, "6384": 247, "6386": 247, "6388": 247, "6390": 247, "6392": 247, "6394": 247, "6396": 247, "6398": 247, "6400": 247, "6402": 247, "6404": 247, "6406": 247, "6408": 247, "6410": 247, "6412": 247, "6414": 247, "6416": 247, "6418": 247, "6420": 247, "6422": 247, "6424": 247, "6426": 247, "6428": 247, "6430": 247, "6432": 247, "6434": 247, "6436": 247, "6438": 247, "6440": 247, "6442": 247, "6444": 247, "6446": 247, "6448": 247, "6450": 247, "6452": 247, "6454": 247, "6456": 247, "6458": 247, "6460": 247, "6462": 247, "6464": 247, "6466": 247, "6468": 247, "6470": 247, "6472": 247, "6474": 247, "6476": 247, "6478": 247, "6480": 247, "6482": 247, "6484": 247, "6486": 247, "6488": 247, "6490": 247, "6492": 247, "6494": 247, "6496": 247, "6498": 247, "6500": 247, "6502": 247, "6504": 247, "6506": 247, "6508": 247, "6510": 247, "6512": 247, "6514": 247, "6516": 247, "6518": 247, "6520": 247, "6522": 247, "6524": 247, "6526": 247, "6528": 247, "6530": 247, "6532": 247, "6534": 247, "6536": 247, "6538": 247, "6540": 247, "6542": 247, "6544": 247, "6546": 247, "6548": 247, "6550": 247, "6552": 247, "6554": 247, "6556": 247, "6558": 247, "6560": 247, "6562": 247, "6564": 247, "6566": 247, "6568": 247, "6570": 247, "6572": 247, "6574": 247, "6576": 247, "6578": 247, "6580": 247, "6582": 247, "6584": 247, "6586": 247, "6588": 247, "6590": 247, "6592": 247, "6594": 247, "6596": 247, "6598": 247, "6600": 247, "6602": 247, "6604": 247, "6606": 247, "6608": 247, "6610": 247, "6612": 247, "6614": 247, "6616": 247, "6618": 247, "6620": 247, "6622": 247, "6624": 247, "6626": 247, "6628": 247, "6630": 247, "6632": 247, "6634": 247, "6636": 247, "6638": 247, "6640": 247, "6642": 247, "6644": 247, "6646": 247, "6648": 247, "6650": 247, "6652": 247, "6654": 247, "6656": 247, "6658": 247, "6660": 247, "6662": 247, "6664": 247, "6666": 247, "6668": 247, "6670": 247, "6672": 247, "6674": 247, "6676": 247, "6678": 247, "6680": 247, "6682": 247, "6684": 247, "6686": 247, "6688": 247, "6690": 247, "6692": 247, "6694": 247, "6696": 247, "6698": 247, "6700": 247, "6702": 247, "6704": 247, "6706": 247, "6708": 247, "6710": 247, "6714": 247, "6716": [247, 270], "6718": 247, "6720": 247, "6722": 247, "6724": 247, "6726": 247, "6728": 247, "6730": 247, "6732": 247, "6734": 247, "6736": 247, "6738": 247, "6740": 247, "6742": 247, "6744": 247, "6746": 247, "6748": 247, "6750": 247, "6752": 247, "6754": 247, "6756": 247, "6758": 247, "6760": 247, "6762": 247, "6764": 247, "6766": 247, "6768": 247, "6770": 247, "6772": 247, "6774": 247, "6776": 247, "6778": 247, "6780": 247, "6782": 247, "6784": 247, "6786": 247, "6788": 247, "6790": 247, "6792": 247, "6794": 247, "6796": 247, "6798": 247, "6800": 247, "6802": 247, "6804": 247, "6806": 247, "6808": 247, "6810": 247, "6812": 247, "6814": 247, "6816": 247, "6818": 247, "6820": 247, "6822": 247, "6824": 247, "6826": 247, "6828": 247, "6830": 247, "6832": 247, "6834": 247, "6836": 247, "6838": 247, "6840": 247, "6842": 247, "6844": 247, "6846": 247, "6848": 247, "6850": 247, "6852": 247, "6854": 247, "6856": 247, "6858": [247, 296], "6860": 247, "6862": 247, "6864": 247, "6866": 247, "6868": 247, "6870": 247, "6872": 247, "6874": 247, "6876": 247, "6878": 247, "6880": 247, "6882": 247, "6884": 247, "6886": 247, "6888": 247, "6890": 247, "6892": 247, "6894": 247, "6896": 247, "6898": 247, "6900": 247, "6902": 247, "6904": 247, "6906": 247, "6908": 247, "6910": 247, "6912": 247, "6914": 247, "6916": 247, "6918": 247, "6920": 247, "6922": 247, "6924": 247, "6926": 247, "6928": 247, "6930": 247, "6932": 247, "6934": [247, 1035], "6936": 247, "6938": 247, "6940": 247, "6942": 247, "6944": 247, "6946": 247, "6948": 247, "6950": 247, "6952": 247, "6954": 247, "6956": 247, "6958": 247, "6960": 247, "6962": 247, "6964": 247, "6966": 247, "6968": 247, "6970": 247, "6972": 247, "6974": 247, "6976": 247, "6978": 247, "6980": 247, "6982": 247, "6984": 247, "6986": 247, "6988": 247, "6990": 247, "6992": 247, "6994": 247, "6996": 247, "6998": 247, "7000": 247, "7002": 247, "7004": 247, "7006": 247, "7008": 247, "7010": 247, "7012": 247, "7014": 247, "7016": 247, "7018": 247, "7020": 247, "7022": 247, "7024": 247, "7026": 247, "7028": 247, "7030": 247, "7032": 247, "7034": 247, "7036": 247, "7038": 247, "7040": 247, "7042": 247, "7044": 247, "7046": 247, "7048": 247, "7050": 247, "7052": 247, "7054": 247, "7056": 247, "7058": 247, "7060": 247, "7062": 247, "7064": 247, "7066": 247, "7068": 247, "7070": 247, "7072": 247, "7074": 247, "7076": 247, "7078": 247, "7080": [247, 1158], "7082": 247, "7084": 247, "7086": 247, "7088": [247, 1158], "7090": 247, "7092": 247, "7094": 247, "7096": 247, "7098": 247, "7100": 247, "7102": 247, "7104": 247, "7106": 247, "7108": 247, "7110": 247, "7112": 247, "7114": 247, "7116": 247, "7118": 247, "7120": 247, "7122": 247, "7124": 247, "7126": 247, "7128": 247, "7130": 247, "7132": 247, "7134": 247, "7136": 247, "7138": 247, "7140": 247, "7142": 247, "7144": 247, "7146": 247, "7148": 247, "7150": 247, "7152": 247, "7154": 247, "7156": 247, "7158": 247, "7160": 247, "7162": 247, "7164": 247, "7166": 247, "7168": 247, "7170": 247, "7172": 247, "7174": 247, "7176": 247, "7178": 247, "7180": 247, "7182": 247, "7184": 247, "7186": 247, "7188": 247, "7190": 247, "7192": 247, "7194": 247, "7196": 247, "7198": 247, "7200": 247, "7202": 247, "7204": 247, "7206": 247, "7208": 247, "7210": 247, "7212": 247, "7214": 247, "7216": 247, "7218": 247, "7220": 247, "7222": 247, "7224": 247, "7226": 247, "7228": 247, "7230": 247, "7232": 247, "7234": 247, "7236": 247, "7238": 247, "7240": 247, "7242": 247, "7244": 247, "7246": 247, "7248": 247, "7250": 247, "7252": 247, "7254": 247, "7256": 247, "7258": 247, "7260": 247, "7262": 247, "7264": 247, "7266": 247, "7268": 247, "7270": 247, "7272": 247, "7274": 247, "7276": 247, "7278": 247, "7280": 247, "7282": 247, "7284": 247, "7286": 247, "7288": 247, "7290": 247, "7292": 247, "7294": 247, "7296": 247, "7298": 247, "7300": 247, "7302": 247, "7304": 247, "7306": 247, "7308": 247, "7310": 247, "7312": 247, "7314": 247, "7316": 247, "7318": 247, "7320": 247, "7322": 247, "7324": 247, "7326": 247, "7328": 247, "7330": 247, "7332": 247, "7334": 247, "7336": 247, "7338": 247, "7340": 247, "7342": 247, "7344": 247, "7346": 247, "7348": 247, "7350": 247, "7352": 247, "7354": 247, "7356": 247, "7358": 247, "7360": 247, "7362": 247, "7364": 247, "7366": 247, "7368": 247, "7370": 247, "7372": 247, "7374": 247, "7376": 247, "7378": 247, "7380": 247, "7382": 247, "7384": 247, "7386": 247, "7388": 247, "7392": 247, "7394": 247, "7396": 247, "7398": 247, "7400": 247, "7402": 247, "7404": 247, "7406": 247, "7408": 247, "7410": 247, "7412": 247, "7414": 247, "7416": 247, "7418": 247, "7420": 247, "7422": 247, "7424": 247, "7426": 247, "7428": 247, "7430": 247, "7432": 247, "7434": 247, "7436": 247, "7438": 247, "7440": 247, "7442": 247, "7444": 247, "7446": 247, "7448": 247, "7450": 247, "7452": 247, "7454": 247, "7456": 247, "7458": 247, "7460": 247, "7462": 247, "7464": 247, "7466": 247, "7468": 247, "7470": 247, "7472": 247, "7474": 247, "7476": 247, "7478": 247, "7480": 247, "7482": 247, "7484": 247, "7486": 247, "7488": 247, "7490": 247, "7492": 247, "7494": 247, "7496": 247, "7498": 247, "7500": 247, "7502": 247, "7504": 247, "7506": 247, "7508": 247, "7510": 247, "7512": 247, "7514": 247, "7516": 247, "7518": 247, "7520": 247, "7522": 247, "7524": 247, "7526": 247, "7528": 247, "7530": 247, "7532": 247, "7534": 247, "7536": 247, "7538": 247, "7540": 247, "7542": 247, "7544": 247, "7546": 247, "7548": 247, "7550": 247, "7552": 247, "7554": 247, "7556": 247, "7558": 247, "7560": 247, "7562": 247, "7564": 247, "7566": 247, "7568": 247, "7570": 247, "7572": 247, "7574": 247, "7576": 247, "7578": 247, "7580": 247, "7582": 247, "7584": 247, "7586": 247, "7588": 247, "7590": 247, "7592": 247, "7594": 247, "7596": 247, "7598": 247, "7600": 247, "7602": 247, "7604": 247, "7606": 247, "7608": 247, "7610": 247, "7612": 247, "7614": 247, "7616": 247, "7618": 247, "7620": 247, "7622": 247, "7624": 247, "7626": 247, "7628": 247, "7630": 247, "7632": 247, "7634": 247, "7636": 247, "7638": 247, "7640": 247, "7642": 247, "7644": 247, "7646": 247, "7648": 247, "7650": 247, "7652": 247, "7654": 247, "7656": 247, "7658": 247, "7660": 247, "7662": 247, "7664": 247, "7666": 247, "7668": 247, "7670": 247, "7672": 247, "7674": 247, "7676": 247, "7678": 247, "7680": 247, "7682": 247, "7684": 247, "7686": 247, "7688": 247, "7690": 247, "7692": 247, "7694": 247, "7696": 247, "7698": 247, "7700": 247, "7702": 247, "7704": 247, "7706": 247, "7708": 247, "7710": 247, "7712": 247, "7714": 247, "7716": 247, "7718": 247, "7720": 247, "7722": 247, "7724": 247, "7726": 247, "7728": 247, "7730": 247, "7732": 247, "7734": 247, "7736": 247, "7738": 247, "7740": 247, "7742": 247, "7744": 247, "7746": 247, "7748": 247, "7750": 247, "7752": 247, "7754": 247, "7756": 247, "7758": 247, "7760": 247, "7762": 247, "7764": 247, "7766": 247, "7768": 247, "7770": 247, "7772": 247, "7774": 247, "7776": 247, "7778": 247, "7780": 247, "7782": 247, "7784": 247, "7786": 247, "7788": 247, "7790": 247, "7792": 247, "7794": 247, "7796": 247, "7798": 247, "7800": 247, "7802": 247, "7804": 247, "7806": 247, "7808": 247, "7810": 247, "7812": 247, "7814": 247, "7816": 247, "7818": 247, "7820": 247, "7822": 247, "7824": 247, "7826": 247, "7828": 247, "7830": 247, "7832": 247, "7834": 247, "7836": 247, "7838": 247, "7842": 247, "7844": 247, "7846": 247, "7848": 247, "7850": 247, "7852": 247, "7854": 247, "7856": 247, "7858": 247, "7860": 247, "7862": 247, "7864": 247, "7866": 247, "7868": 247, "7870": 247, "7872": 247, "7874": 247, "7878": 247, "7880": 247, "7882": 247, "7884": 247, "7886": 247, "7888": 247, "7890": 247, "7892": 247, "7894": 247, "7896": 247, "7898": 247, "7900": 247, "7902": 247, "7904": 247, "7906": 247, "7908": 247, "7910": 247, "7912": 247, "7914": 247, "7916": 247, "7918": 247, "7920": 247, "7922": 247, "7924": 247, "7926": 247, "7928": 247, "7930": 247, "7932": 247, "7934": 247, "7936": 247, "7938": 247, "7940": 247, "7942": 247, "7944": 247, "7946": 247, "7948": 247, "7950": 247, "7952": 247, "7954": 247, "7956": 247, "7958": 247, "7960": 247, "7962": 247, "7964": 247, "7966": 247, "7968": 247, "7970": 247, "7972": 247, "7974": 247, "7976": 247, "7978": 247, "7980": 247, "7982": 247, "7984": 247, "7986": 247, "7988": 247, "7990": 247, "7992": 247, "7994": 247, "7996": 247, "7998": 247, "8002": 247, "8004": 247, "8006": 247, "8008": 247, "8012": 247, "8014": 247, "8016": 247, "8018": 247, "8022": 247, "8024": 247, "8026": 247, "8028": 247, "8030": 247, "8032": 247, "8034": 247, "8036": 247, "8038": 247, "8040": 247, "8042": 247, "8044": 247, "8046": 247, "8048": 247, "8050": 247, "8052": 247, "8054": 247, "8056": 247, "8058": 247, "8060": 247, "8062": 247, "8064": 247, "8066": 247, "8068": 247, "8070": 247, "8072": 247, "8074": 247, "8076": 247, "8078": 247, "8080": 247, "8082": 247, "8084": 247, "8086": 247, "8088": 247, "8090": 247, "8092": 247, "8094": 247, "8096": 247, "8098": 247, "8100": 247, "8102": [247, 1012, 1013], "8104": 247, "8106": 247, "8108": 247, "8110": 247, "8112": 247, "8114": 247, "8116": 247, "8118": 247, "8120": 247, "8122": 247, "8124": 247, "8126": 247, "8128": 247, "8130": 247, "8132": 247, "8134": 247, "8136": 247, "8138": 247, "8140": 247, "8142": 247, "8144": 247, "8146": 247, "8148": 247, "8150": 247, "8152": 247, "8154": 247, "8156": 247, "8158": 247, "8160": 247, "8162": 247, "8164": 247, "8166": 247, "8168": 247, "8170": 247, "8172": 247, "8174": 247, "8176": 247, "8178": 247, "8180": 247, "8182": 247, "8184": 247, "8186": 247, "8188": 247, "8190": 247, "8194": 247, "8196": 247, "8198": 247, "8200": 247, "8202": 247, "8204": 247, "8206": 247, "8208": 247, "8210": 247, "8212": 247, "8214": 247, "8216": 247, "8218": 247, "8220": 247, "8222": 247, "8224": 247, "8226": 247, "8228": 247, "8230": 247, "8232": 247, "8234": 247, "8238": 247, "8240": 247, "8242": 247, "8244": 247, "8246": 247, "8248": 247, "8250": 247, "8252": 247, "8254": 247, "8256": 247, "8258": 247, "8260": [247, 837], "8262": 247, "8264": 247, "8266": 247, "8268": 247, "8270": 247, "8272": 247, "8274": 247, "8276": 247, "8278": 247, "8280": 247, "8282": 247, "8284": 247, "8286": 247, "8288": 247, "8290": 247, "8292": 247, "8294": 247, "8296": 247, "8298": 247, "8300": 247, "8302": 247, "8304": 247, "8306": 247, "8308": 247, "8310": 247, "8312": 247, "8314": 247, "8316": 247, "8318": 247, "8320": 247, "8322": 247, "8324": 247, "8326": 247, "8328": 247, "8330": 247, "8332": 247, "8334": 247, "8336": 247, "8338": 247, "8340": 247, "8342": 247, "8344": 247, "8346": 247, "8348": 247, "8350": 247, "8352": 247, "8354": 247, "8356": 247, "8358": 247, "8360": 247, "8362": 247, "8364": 247, "8366": 247, "8368": 247, "8370": 247, "8372": 247, "8374": 247, "8376": 247, "8378": 247, "8380": 247, "8382": 247, "8384": 247, "8386": 247, "8388": 247, "8390": 247, "8392": 247, "8394": 247, "8396": 247, "8398": 247, "8400": 247, "8402": 247, "8404": 247, "8406": 247, "8408": 247, "8410": 247, "8412": 247, "8414": 247, "8416": 247, "8418": 247, "8420": 247, "8422": 247, "8424": 247, "8426": 247, "8428": 247, "8430": 247, "8432": 247, "8434": 247, "8436": 247, "8438": 247, "8440": 247, "8442": 247, "8444": 247, "8446": 247, "8448": 247, "8450": 247, "8452": 247, "8454": 247, "8456": 247, "8458": 247, "8460": 247, "8464": 247, "8466": 247, "8468": 247, "8470": 247, "8472": 247, "8474": 247, "8476": 247, "8478": 247, "8480": 247, "8482": 247, "8484": 247, "8486": 247, "8488": 247, "8490": 247, "8492": 247, "8494": 247, "8496": 247, "8498": 247, "8500": 247, "8502": 247, "8504": 247, "8506": 247, "8508": 247, "8510": 247, "8512": 247, "8514": 247, "8516": 247, "8518": 247, "8520": 247, "8522": 247, "8524": 247, "8526": 247, "8528": 247, "8530": 247, "8532": 247, "8534": 247, "8536": 247, "8538": 247, "8540": 247, "8542": 247, "8544": 247, "8546": 247, "8548": 247, "8550": 247, "8552": 247, "8554": 247, "8556": 247, "8558": 247, "8560": 247, "8562": 247, "8564": 247, "8566": 247, "8568": 247, "8570": 247, "8572": 247, "8574": 247, "8576": 247, "8578": 247, "8580": 247, "8582": 247, "8584": 247, "8586": 247, "8588": 247, "8590": 247, "8592": 247, "8594": 247, "8596": 247, "8598": 247, "8600": 247, "8602": 247, "8604": 247, "8606": 247, "8608": 247, "8610": 247, "8612": 247, "8614": 247, "8616": 247, "8618": 247, "8620": 247, "8622": 247, "8624": 247, "8626": 247, "8628": 247, "8630": 247, "8632": 247, "8634": 247, "8636": 247, "8638": 247, "8640": 247, "8642": 247, "8644": 247, "8646": 247, "8648": 247, "8650": 247, "8652": 247, "8654": 247, "8656": 247, "8658": 247, "8660": 247, "8662": 247, "8664": 247, "8666": 247, "8668": 247, "8670": 247, "8672": 247, "8674": 247, "8676": 247, "8678": 247, "8680": 247, "8682": 247, "8684": 247, "8686": 247, "8688": 247, "8690": 247, "8692": 247, "8694": 247, "8696": 247, "8698": 247, "8700": 247, "8702": 247, "8704": 247, "8706": 247, "8708": 247, "8710": 247, "8712": 247, "8714": 247, "8716": 247, "8718": 247, "8720": 247, "8722": 247, "8724": 247, "8726": 247, "8728": 247, "8730": 247, "8732": 247, "8734": 247, "8736": 247, "8738": 247, "8740": 247, "8742": 247, "8744": 247, "8746": 247, "8748": 247, "8750": 247, "8752": 247, "8754": 247, "8756": 247, "8758": 247, "8760": 247, "8762": 247, "8764": 247, "8766": 247, "8768": 247, "8770": 247, "8772": 247, "8774": 247, "8776": 247, "8778": 247, "8780": 247, "8782": 247, "8784": 247, "8786": 247, "8788": 247, "8790": 247, "8792": 247, "8794": 247, "8796": 247, "8798": 247, "8800": 247, "8802": 247, "8804": 247, "8806": 247, "8808": 247, "8810": 247, "8812": 247, "8814": 247, "8816": 247, "8818": 247, "8820": 247, "8822": 247, "8824": 247, "8826": 247, "8828": 247, "8830": 247, "8832": 247, "8834": 247, "8836": 247, "8838": 247, "8840": 247, "8842": 247, "8844": 247, "8846": 247, "8848": 247, "8850": 247, "8852": 247, "8854": 247, "8856": 247, "8858": 247, "8860": 247, "8862": 247, "8864": 247, "8866": 247, "8868": 247, "8870": 247, "8872": 247, "8874": 247, "8876": 247, "8878": 247, "8880": 247, "8882": 247, "8884": 247, "8886": 247, "8888": 247, "8890": 247, "8892": 247, "8894": 247, "8896": 247, "8898": 247, "8900": 247, "8902": 247, "8904": 247, "8906": 247, "8908": 247, "8910": 247, "8912": 247, "8914": 247, "8916": 247, "8918": 247, "8920": 247, "8922": 247, "8924": 247, "8926": 247, "8928": 247, "8930": 247, "8932": 247, "8934": 247, "8936": 247, "8938": 247, "8940": 247, "8942": 247, "8944": 247, "8946": 247, "8948": 247, "8950": 247, "8952": 247, "8954": 247, "8956": 247, "8958": 247, "8960": 247, "8962": 247, "8964": 247, "8966": 247, "8968": 247, "8970": 247, "8972": 247, "8974": 247, "8976": 247, "8978": 247, "8980": 247, "8982": 247, "8984": 247, "8986": 247, "8988": 247, "8990": 247, "8992": 247, "8994": 247, "8996": 247, "8998": 247, "9002": 247, "9004": 247, "9006": 247, "9008": 247, "9010": 247, "9012": 247, "9014": 247, "9016": 247, "9018": 247, "9020": 247, "9022": 247, "9024": 247, "9026": 247, "9028": 247, "9030": 247, "9032": 247, "9034": 247, "9036": 247, "9038": 247, "9040": 247, "9042": 247, "9044": 247, "9046": 247, "9048": 247, "9050": 247, "9052": 247, "9054": 247, "9056": 247, "9058": 247, "9060": 247, "9062": 247, "9064": 247, "9066": 247, "9068": 247, "9070": 247, "9072": 247, "9074": 247, "9076": 247, "9078": 247, "9080": 247, "9082": 247, "9084": 247, "9086": 247, "9088": 247, "9090": 247, "9092": 247, "9094": 247, "9096": 247, "9098": 247, "9100": 247, "9102": 247, "9104": 247, "9106": 247, "9108": 247, "9110": 247, "9112": 247, "9114": 247, "9116": 247, "9118": 247, "9120": 247, "9122": 247, "9124": 247, "9126": 247, "9128": 247, "9130": 247, "9132": 247, "9134": 247, "9136": 247, "9138": 247, "9140": 247, "9142": 247, "9144": 247, "9146": 247, "9148": 247, "9150": 247, "9152": 247, "9154": 247, "9156": 247, "9158": 247, "9160": 247, "9162": 247, "9164": 247, "9166": 247, "9168": 247, "9170": 247, "9172": 247, "9174": 247, "9176": 247, "9178": 247, "9180": 247, "9182": 247, "9184": 247, "9186": 247, "9188": 247, "9190": 247, "9192": 247, "9194": 247, "9196": 247, "9198": 247, "9200": 247, "9202": 247, "9204": 247, "9206": 247, "9208": 247, "9210": 247, "9212": 247, "9214": 247, "9216": 247, "9218": 247, "9220": 247, "9222": 247, "9224": 247, "9226": 247, "9228": 247, "9230": 247, "9232": 247, "9234": 247, "9236": 247, "9238": 247, "9240": 247, "9242": 247, "9244": 247, "9246": 247, "9248": 247, "9250": 247, "9252": 247, "9254": 247, "9256": 247, "9258": 247, "9260": 247, "9262": 247, "9264": 247, "9266": 247, "9268": 247, "9270": 247, "9272": 247, "9274": 247, "9276": 247, "9278": 247, "9280": 247, "9282": 247, "9284": 247, "9286": 247, "9288": 247, "9290": 247, "9292": 247, "9294": 247, "9296": 247, "9298": 247, "9300": 247, "9302": 247, "9304": 247, "9306": 247, "9308": 247, "9310": 247, "9312": 247, "9314": 247, "9316": 247, "9318": 247, "9320": 247, "9322": 247, "9324": 247, "9326": 247, "9328": 247, "9330": 247, "9332": 247, "9334": 247, "9336": 247, "9338": 247, "9340": 247, "9342": 247, "9344": 247, "9346": 247, "9348": 247, "9350": 247, "9352": 247, "9354": 247, "9356": 247, "9358": 247, "9360": 247, "9362": 247, "9364": 247, "9366": 247, "9368": 247, "9370": 247, "9372": 247, "9374": 247, "9376": 247, "9378": 247, "9380": 247, "9382": 247, "9384": 247, "9386": 247, "9388": 247, "9390": 247, "9392": 247, "9394": [247, 897], "9396": 247, "9398": 247, "9400": 247, "9402": 247, "9404": 247, "9406": 247, "9408": 247, "9410": 247, "9412": 247, "9414": 247, "9416": 247, "9418": 247, "9420": 247, "9422": 247, "9424": 247, "9426": 247, "9428": 247, "9430": 247, "9432": 247, "9434": 247, "9436": 247, "9438": 247, "9440": 247, "9442": 247, "9444": 247, "9446": 247, "9448": 247, "9450": 247, "9452": 247, "9454": 247, "9456": 247, "9458": 247, "9460": 247, "9462": 247, "9464": 247, "9466": 247, "9468": 247, "9470": 247, "9472": 247, "9474": 247, "9476": 247, "9478": 247, "9480": 247, "9482": 247, "9484": 247, "9486": 247, "9488": 247, "9490": 247, "9492": 247, "9494": 247, "9496": 247, "9498": 247, "9500": 247, "9502": 247, "9504": 247, "9506": 247, "9508": 247, "9510": 247, "9512": 247, "9514": 247, "9516": 247, "9518": 247, "9520": 247, "9522": 247, "9524": 247, "9526": 247, "9528": 247, "9530": 247, "9532": 247, "9534": 247, "9536": 247, "9538": 247, "9540": 247, "9542": 247, "9544": 247, "9546": 247, "9548": 247, "9550": 247, "9552": 247, "9554": 247, "9556": 247, "9558": 247, "9560": 247, "9562": 247, "9564": 247, "9566": 247, "9568": 247, "9570": 247, "9572": 247, "9574": 247, "9576": 247, "9578": 247, "9580": 247, "9582": 247, "9584": 247, "9586": 247, "9588": 247, "9590": 247, "9592": 247, "9594": 247, "9596": 247, "9598": 247, "9600": 247, "9602": 247, "9604": 247, "9606": 247, "9608": 247, "9610": 247, "9612": 247, "9614": 247, "9616": 247, "9618": 247, "9620": 247, "9622": 247, "9624": 247, "9626": 247, "9628": 247, "9630": 247, "9632": 247, "9634": 247, "9636": 247, "9638": 247, "9640": 247, "9642": 247, "9644": 247, "9646": 247, "9648": 247, "9650": 247, "9652": 247, "9654": 247, "9656": 247, "9658": 247, "9660": 247, "9662": 247, "9664": 247, "9666": 247, "9668": 247, "9670": 247, "9672": 247, "9674": 247, "9676": 247, "9678": 247, "9680": 247, "9682": 247, "9684": 247, "9686": 247, "9688": 247, "9690": 247, "9692": 247, "9694": 247, "9696": 247, "9698": 247, "9700": 247, "9702": 247, "9704": 247, "9706": 247, "9708": 247, "9710": 247, "9712": 247, "9714": 247, "9716": 247, "9718": 247, "9720": 247, "9722": 247, "9724": 247, "9726": 247, "9728": 247, "9730": 247, "9732": 247, "9734": 247, "9736": 247, "9738": 247, "9740": 247, "9742": 247, "9744": 247, "9746": 247, "9748": 247, "9750": 247, "9752": 247, "9754": 247, "9756": 247, "9758": 247, "9760": 247, "9762": 247, "9764": 247, "9766": 247, "9768": [247, 257], "9770": 247, "9772": 247, "9774": 247, "9776": 247, "9778": 247, "9780": 247, "9782": 247, "9784": 247, "9786": 247, "9788": 247, "9790": 247, "9792": 247, "9794": 247, "9796": 247, "9798": 247, "9800": 247, "9802": 247, "9804": 247, "9806": 247, "9808": 247, "9810": 247, "9812": 247, "9814": 247, "9816": 247, "9818": 247, "9820": 247, "9822": 247, "9824": 247, "9826": 247, "9828": 247, "9830": 247, "9832": 247, "9834": 247, "9836": 247, "9838": 247, "9840": 247, "9842": 247, "9844": 247, "9846": 247, "9848": 247, "9850": 247, "9852": 247, "9854": 247, "9856": 247, "9858": 247, "9860": 247, "9862": 247, "9864": 247, "9866": 247, "9868": 247, "9870": 247, "9872": 247, "9874": 247, "9876": 247, "9878": 247, "9880": 247, "9882": 247, "9884": 247, "9886": 247, "9888": 247, "9890": 247, "9892": 247, "9894": 247, "9896": 247, "9898": 247, "9900": 247, "9902": 247, "9904": 247, "9906": 247, "9908": 247, "9910": 247, "9912": 247, "9914": 247, "9916": 247, "9918": 247, "9920": 247, "9922": 247, "9924": 247, "9926": 247, "9928": 247, "9930": 247, "9932": 247, "9934": 247, "9936": 247, "9938": 247, "9940": 247, "9942": 247, "9944": 247, "9946": 247, "9948": 247, "9950": 247, "9952": 247, "9954": 247, "9956": 247, "9958": 247, "9960": 247, "9962": 247, "9964": 247, "9966": 247, "9968": 247, "9970": 247, "9972": 247, "9974": 247, "9976": 247, "9978": 247, "9980": 247, "9982": 247, "9984": 247, "9986": 247, "9988": 247, "9990": 247, "9992": 247, "9994": 247, "9996": 247, "9998": 247, "10002": 247, "10004": 247, "10006": 247, "10008": 247, "10010": 247, "10012": 247, "10014": 247, "10016": 247, "10018": 247, "10020": 247, "10022": 247, "10024": 247, "10026": 247, "10028": 247, "10030": 247, "10032": 247, "10034": 247, "10036": 247, "10038": 247, "10040": 247, "10042": 247, "10044": 247, "10046": 247, "10048": 247, "10050": 247, "10052": 247, "10054": 247, "10056": 247, "10058": 247, "10060": 247, "10062": 247, "10064": 247, "10066": 247, "10068": 247, "10070": 247, "10072": 247, "10074": 247, "10076": 247, "10078": 247, "10080": 247, "10082": 247, "10084": 247, "10086": 247, "10088": 247, "10090": 247, "10092": 247, "10094": 247, "10096": 247, "10098": 247, "10100": 247, "10102": 247, "10104": 247, "10106": 247, "10108": 247, "10110": 247, "10112": 247, "10114": 247, "10116": 247, "10118": 247, "10120": 247, "10122": 247, "10124": 247, "10126": 247, "10128": 247, "10130": 247, "10132": 247, "10134": 247, "10136": 247, "10138": 247, "10140": 247, "10142": 247, "10144": 247, "10146": 247, "10148": 247, "10150": 247, "10152": 247, "10154": 247, "10156": 247, "10158": 247, "10160": 247, "10162": 247, "10164": 247, "10166": 247, "10168": 247, "10170": 247, "10172": 247, "10174": 247, "10176": 247, "10178": 247, "10180": 247, "10182": 247, "10184": 247, "10186": 247, "10188": 247, "10190": 247, "10192": 247, "10194": 247, "10196": 247, "10198": 247, "10200": 247, "10202": 247, "10204": 247, "10206": 247, "10208": 247, "10210": 247, "10212": 247, "10214": 247, "10216": 247, "10218": 247, "10220": 247, "10222": 247, "10224": 247, "10226": [247, 296], "10228": 247, "10230": 247, "10232": 247, "10234": 247, "10236": 247, "10238": 247, "10240": 247, "10242": 247, "10244": 247, "10246": 247, "10248": 247, "10250": 247, "10252": 247, "10254": 247, "10256": 247, "10258": 247, "10260": 247, "10262": 247, "10264": 247, "10266": 247, "10268": 247, "10270": 247, "10272": 247, "10274": 247, "10276": 247, "10278": 247, "10280": 247, "10282": 247, "10284": 247, "10286": 247, "10288": 247, "10290": 247, "10292": 247, "10294": 247, "10296": 247, "10298": 247, "10300": 247, "10302": 247, "10304": 247, "10306": 247, "10308": 247, "10310": 247, "10312": 247, "10314": 247, "10316": 247, "10318": 247, "10320": 247, "10322": 247, "10324": 247, "10326": 247, "10328": 247, "10330": 247, "10332": 247, "10334": 247, "10336": 247, "10338": 247, "10340": 247, "10342": 247, "10344": 247, "10346": 247, "10348": 247, "10350": 247, "10352": 247, "10354": 247, "10356": 247, "10358": 247, "10360": 247, "10362": 247, "10364": 247, "10366": 247, "10368": 247, "10370": 247, "10372": 247, "10374": 247, "10376": 247, "10378": 247, "10380": 247, "10382": 247, "10384": 247, "10386": 247, "10388": 247, "10390": 247, "10392": 247, "10394": 247, "10396": 247, "10398": 247, "10400": 247, "10402": 247, "10404": 247, "10406": 247, "10408": 247, "10410": 247, "10412": 247, "10414": 247, "10416": 247, "10418": 247, "10420": 247, "10422": 247, "10424": 247, "10426": 247, "10428": 247, "10430": 247, "10432": 247, "10434": 247, "10436": 247, "10438": 247, "10440": 247, "10442": 247, "10444": 247, "10446": 247, "10448": 247, "10450": 247, "10452": 247, "10454": 247, "10456": 247, "10458": 247, "10460": 247, "10462": 247, "10464": 247, "10466": 247, "10468": 247, "10470": 247, "10472": 247, "10474": 247, "10476": 247, "10478": 247, "10480": 247, "10482": 247, "10484": 247, "10486": 247, "10488": 247, "10490": 247, "10492": 247, "10494": 247, "10496": 247, "10498": 247, "10500": 247, "10502": 247, "10504": 247, "10506": 247, "10508": 247, "10510": 247, "10512": 247, "10514": 247, "10516": 247, "10518": 247, "10520": 247, "10522": 247, "10524": 247, "10526": 247, "10528": 247, "10530": 247, "10532": 247, "10534": 247, "10536": 247, "10538": 247, "10540": 247, "10542": 247, "10544": 247, "10546": 247, "10548": 247, "10550": 247, "10552": [247, 1023], "10554": 247, "10556": 247, "10558": 247, "10560": 247, "10562": 247, "10564": 247, "10566": 247, "10568": 247, "10570": 247, "10572": 247, "10574": 247, "10576": 247, "10578": 247, "10580": 247, "10582": 247, "10584": 247, "10586": 247, "10588": 247, "10590": 247, "10592": 247, "10594": 247, "10596": 247, "10598": 247, "10600": 247, "10602": 247, "10604": 247, "10606": 247, "10608": 247, "10610": 247, "10612": 247, "10614": 247, "10616": 247, "10618": 247, "10620": 247, "10622": 247, "10624": 247, "10626": 247, "10628": 247, "10630": 247, "10632": 247, "10634": 247, "10636": 247, "10638": 247, "10640": 247, "10642": 247, "10644": 247, "10646": 247, "10648": 247, "10650": 247, "10652": 247, "10654": 247, "10656": 247, "10658": 247, "10660": 247, "10662": 247, "10664": 247, "10666": 247, "10668": 247, "10670": 247, "10672": 247, "10674": 247, "10676": 247, "10678": 247, "10680": 247, "10682": 247, "10684": 247, "10686": 247, "10688": 247, "10690": 247, "10692": 247, "10694": 247, "10696": 247, "10698": 247, "10700": 247, "10702": 247, "10704": 247, "10706": 247, "10708": 247, "10710": 247, "10712": 247, "10714": 247, "10716": 247, "10718": 247, "10720": 247, "10722": 247, "10724": 247, "10726": 247, "10728": 247, "10730": 247, "10732": 247, "10734": 247, "10736": 247, "10738": 247, "10740": 247, "10742": 247, "10744": 247, "10746": 247, "10748": 247, "10750": 247, "10752": 247, "10754": 247, "10756": 247, "10758": 247, "10760": 247, "10762": 247, "10764": 247, "10766": 247, "10768": 247, "10770": 247, "10772": 247, "10774": 247, "10776": 247, "10778": 247, "10780": 247, "10782": 247, "10784": 247, "10786": 247, "10788": 247, "10790": 247, "10792": 247, "10794": 247, "10796": 247, "10798": 247, "10800": 247, "10802": 247, "10804": 247, "10806": 247, "10808": 247, "10810": 247, "10812": 247, "10814": 247, "10816": 247, "10818": 247, "10820": 247, "10822": 247, "10824": 247, "10826": 247, "10828": 247, "10830": 247, "10832": 247, "10834": 247, "10836": 247, "10838": 247, "10840": 247, "10842": 247, "10844": 247, "10846": 247, "10848": 247, "10850": 247, "10852": 247, "10854": 247, "10856": 247, "10858": 247, "10860": 247, "10862": 247, "10864": 247, "10866": 247, "10868": 247, "10870": 247, "10872": 247, "10874": 247, "10876": 247, "10878": 247, "10880": 247, "10882": 247, "10884": 247, "10886": 247, "10888": 247, "10890": 247, "10892": 247, "10894": 247, "10896": 247, "10898": 247, "10900": 247, "10902": 247, "10904": 247, "10906": 247, "10908": 247, "10910": 247, "10912": 247, "10914": 247, "10916": 247, "10918": 247, "10920": 247, "10922": 247, "10924": 247, "10926": 247, "10928": 247, "10930": 247, "10932": 247, "10934": 247, "10936": 247, "10938": 247, "10940": 247, "10942": 247, "10944": 247, "10946": 247, "10948": 247, "10950": 247, "10952": 247, "10954": 247, "10956": 247, "10958": 247, "10960": 247, "10962": 247, "10964": 247, "10966": 247, "10968": 247, "10970": 247, "10972": 247, "10974": 247, "10976": 247, "10978": 247, "10980": 247, "10982": 247, "10984": 247, "10986": 247, "10988": 247, "10990": 247, "10992": 247, "10994": 247, "10996": 247, "10998": 247, "11000": 247, "11002": 247, "11004": 247, "11006": 247, "11008": 247, "11010": 247, "11012": 247, "11014": 247, "11016": 247, "11018": 247, "11020": 247, "11022": 247, "11024": 247, "11026": 247, "11028": 247, "11030": 247, "11032": 247, "11034": 247, "11036": 247, "11038": 247, "11040": 247, "11042": 247, "11044": 247, "11046": 247, "11048": 247, "11050": 247, "11052": 247, "11054": 247, "11056": 247, "11058": 247, "11060": 247, "11062": 247, "11064": 247, "11066": 247, "11068": 247, "11070": 247, "11072": 247, "11074": 247, "11076": 247, "11078": 247, "11080": 247, "11082": 247, "11084": 247, "11086": 247, "11088": 247, "11090": 247, "11092": 247, "11094": 247, "11096": 247, "11098": 247, "11100": 247, "11102": 247, "11104": 247, "11106": 247, "11108": 247, "11110": 247, "11112": 247, "11114": 247, "11116": 247, "11118": 247, "11120": 247, "11122": 247, "11124": 247, "11126": 247, "11128": 247, "11130": 247, "11132": 247, "11134": 247, "11136": 247, "11138": 247, "11140": 247, "11142": 247, "11144": 247, "11146": 247, "11148": 247, "11150": 247, "11152": 247, "11154": 247, "11156": 247, "11158": 247, "11160": 247, "11162": 247, "11164": 247, "11166": 247, "11168": 247, "11170": 247, "11172": 247, "11174": 247, "11176": 247, "11178": 247, "11180": 247, "11182": 247, "11184": 247, "11186": 247, "11188": 247, "11190": 247, "11192": 247, "11194": 247, "11196": 247, "11198": 247, "11200": 247, "11202": 247, "11204": 247, "11206": 247, "11208": 247, "11210": 247, "11212": 247, "11214": 247, "11216": 247, "11218": 247, "11220": 247, "11222": 247, "11224": 247, "11226": 247, "11228": 247, "11230": 247, "11232": 247, "11234": 247, "11236": 247, "11238": 247, "11240": 247, "11242": 247, "11244": 247, "11246": 247, "11248": 247, "11250": 247, "11252": 247, "11254": 247, "11256": 247, "11258": 247, "11260": 247, "11262": 247, "11264": 247, "11266": 247, "11268": 247, "11270": 247, "11272": 247, "11274": 247, "11276": 247, "11278": 247, "11280": 247, "11282": 247, "11284": 247, "11286": 247, "11288": 247, "11290": 247, "11292": 247, "11294": 247, "11296": 247, "11298": 247, "11300": 247, "11302": 247, "11304": 247, "11306": 247, "11308": 247, "11310": 247, "11312": 247, "11314": 247, "11316": 247, "11318": 247, "11320": 247, "11322": 247, "11324": 247, "11326": 247, "11328": 247, "11330": 247, "11332": 247, "11334": 247, "11336": 247, "11340": 247, "11342": 247, "11344": 247, "11346": 247, "11348": [247, 296], "11350": 247, "11352": 247, "11354": 247, "11356": 247, "11358": 247, "11360": 247, "11362": 247, "11364": 247, "11366": 247, "11368": 247, "11370": 247, "11372": 247, "11374": 247, "11376": 247, "11378": 247, "11380": 247, "11382": 247, "11384": 247, "11386": 247, "11388": 247, "11390": 247, "11392": 247, "11394": 247, "11396": 247, "11398": 247, "11400": 247, "11402": 247, "11404": 247, "11406": 247, "11408": 247, "11410": 247, "11412": 247, "11414": 247, "11416": 247, "11418": 247, "11420": 247, "11422": 247, "11424": 247, "11426": 247, "11428": 247, "11430": 247, "11432": 247, "11434": 247, "11436": 247, "11438": 247, "11440": 247, "11442": 247, "11444": 247, "11446": 247, "11448": 247, "11450": 247, "11452": 247, "11454": 247, "11456": 247, "11458": 247, "11460": 247, "11462": 247, "11464": 247, "11466": 247, "11468": 247, "11470": 247, "11472": 247, "11474": 247, "11476": 247, "11478": 247, "11480": 247, "11482": 247, "11484": 247, "11486": 247, "11488": 247, "11490": 247, "11492": 247, "11494": 247, "11496": 247, "11498": 247, "11500": 247, "11502": 247, "11504": 247, "11506": 247, "11508": 247, "11510": 247, "11512": 247, "11514": 247, "11516": 247, "11518": 247, "11520": 247, "11522": 247, "11524": 247, "11526": 247, "11528": 247, "11530": 247, "11532": 247, "11534": 247, "11536": 247, "11538": 247, "11540": 247, "11542": 247, "11544": 247, "11546": 247, "11548": 247, "11550": 247, "11552": 247, "11554": 247, "11556": 247, "11558": 247, "11560": 247, "11562": 247, "11564": 247, "11566": 247, "11568": 247, "11570": 247, "11572": 247, "11574": 247, "11576": 247, "11578": 247, "11580": 247, "11582": 247, "11584": 247, "11586": 247, "11588": 247, "11590": 247, "11592": 247, "11594": 247, "11596": 247, "11598": 247, "11600": 247, "11602": 247, "11604": 247, "11606": 247, "11608": 247, "11610": 247, "11612": 247, "11614": 247, "11616": 247, "11618": 247, "11620": 247, "11622": 247, "11624": 247, "11626": 247, "11628": 247, "11630": 247, "11634": 247, "11636": 247, "11638": 247, "11640": 247, "11642": 247, "11644": 247, "11646": 247, "11648": 247, "11650": 247, "11652": 247, "11654": 247, "11656": 247, "11658": 247, "11660": 247, "11662": 247, "11664": 247, "11666": 247, "11668": 247, "11670": 247, "11672": 247, "11674": 247, "11676": 247, "11678": 247, "11680": 247, "11682": 247, "11684": 247, "11686": 247, "11688": 247, "11690": 247, "11692": 247, "11694": 247, "11696": 247, "11698": 247, "11700": 247, "11702": 247, "11704": 247, "11706": 247, "11708": 247, "11710": 247, "11712": 247, "11714": 247, "11716": 247, "11718": 247, "11720": 247, "11722": 247, "11724": 247, "11726": 247, "11728": 247, "11730": 247, "11732": 247, "11734": 247, "11736": 247, "11738": 247, "11740": 247, "11742": 247, "11744": 247, "11746": 247, "11748": 247, "11750": 247, "11752": 247, "11754": 247, "11756": 247, "11758": 247, "11760": 247, "11762": 247, "11764": 247, "11766": 247, "11768": 247, "11770": 247, "11772": 247, "11774": 247, "11776": 247, "11778": 247, "11780": 247, "11782": 247, "11784": 247, "11786": 247, "11788": 247, "11790": 247, "11792": 247, "11794": 247, "11796": 247, "11798": 247, "11800": 247, "11802": 247, "11804": 247, "11806": 247, "11808": 247, "11810": 247, "11812": 247, "11814": 247, "11816": 247, "11818": 247, "11820": 247, "11822": 247, "11824": 247, "11826": 247, "11828": 247, "11830": 247, "11832": 247, "11834": 247, "11836": 247, "11838": 247, "11840": 247, "11842": 247, "11844": 247, "11846": 247, "11848": 247, "11850": 247, "11852": 247, "11854": 247, "11856": 247, "11858": 247, "11860": 247, "11862": 247, "11864": 247, "11866": 247, "11868": 247, "11870": 247, "11872": 247, "11874": 247, "11876": 247, "11878": 247, "11880": 247, "11882": 247, "11884": 247, "11886": 247, "11888": 247, "11890": 247, "11892": 247, "11894": 247, "11896": 247, "11898": 247, "11900": 247, "11902": 247, "11904": 247, "11906": 247, "11908": 247, "11910": 247, "11912": 247, "11914": 247, "11916": 247, "11918": 247, "11920": 247, "11922": 247, "11924": 247, "11926": 247, "11928": 247, "11930": 247, "11932": 247, "11934": 247, "11936": 247, "11938": 247, "11940": 247, "11942": 247, "11944": 247, "11946": 247, "11948": 247, "11950": 247, "11952": 247, "11954": 247, "11956": 247, "11958": 247, "11960": 247, "11962": 247, "11964": 247, "11966": 247, "11968": 247, "11970": 247, "11972": 247, "11974": 247, "11976": 247, "11978": 247, "11980": 247, "11982": 247, "11984": 247, "11986": 247, "11988": 247, "11990": 247, "11992": 247, "11994": 247, "11996": 247, "11998": 247, "12000": 247, "12002": 247, "12004": 247, "12006": 247, "12008": 247, "12010": 247, "12012": 247, "12014": 247, "12016": 247, "12018": 247, "12020": 247, "12022": 247, "12024": 247, "12026": 247, "12028": 247, "12030": 247, "12032": 247, "12034": 247, "12036": 247, "12038": 247, "12040": 247, "12042": 247, "12044": 247, "12046": 247, "12048": 247, "12050": 247, "12052": 247, "12054": 247, "12056": 247, "12058": 247, "12060": 247, "12062": 247, "12064": 247, "12066": 247, "12068": 247, "12070": 247, "12072": 247, "12074": 247, "12076": 247, "12078": 247, "12080": 247, "12082": 247, "12084": 247, "12086": 247, "12088": 247, "12090": 247, "12092": 247, "12094": 247, "12096": 247, "12098": 247, "12100": 247, "12102": 247, "12104": 247, "12106": 247, "12108": 247, "12110": 247, "12112": 247, "12114": 247, "12116": 247, "12118": 247, "12120": 247, "12122": 247, "12124": 247, "12126": 247, "12128": 247, "12130": 247, "12132": 247, "12134": 247, "12136": 247, "12138": 247, "12140": 247, "12142": 247, "12144": 247, "12146": 247, "12148": 247, "12150": 247, "12152": 247, "12154": 247, "12158": 247, "12160": 247, "12162": 247, "12164": 247, "12166": 247, "12168": 247, "12170": 247, "12172": 247, "12174": 247, "12176": 247, "12178": 247, "12180": 247, "12182": 247, "12184": 247, "12186": 247, "12188": 247, "12190": 247, "12192": 247, "12194": 247, "12196": 247, "12198": 247, "12200": 247, "12202": 247, "12204": 247, "12206": 247, "12208": 247, "12210": 247, "12212": 247, "12214": 247, "12216": 247, "12218": 247, "12220": 247, "12222": 247, "12224": 247, "12226": 247, "12228": 247, "12230": 247, "12232": 247, "12234": 247, "12236": 247, "12238": 247, "12240": 247, "12242": 247, "12244": 247, "12246": 247, "12248": 247, "12250": 247, "12252": 247, "12254": 247, "12256": 247, "12258": 247, "12260": 247, "12262": 247, "12264": 247, "12266": 247, "12268": 247, "12270": 247, "12272": 247, "12274": 247, "12276": 247, "12278": 247, "12280": 247, "12282": 247, "12284": 247, "12286": 247, "12288": 247, "12290": 247, "12292": 247, "12294": 247, "12296": 247, "12298": 247, "12300": 247, "12302": 247, "12304": 247, "12306": 247, "12308": 247, "12310": 247, "12312": 247, "12314": 247, "12316": 247, "12318": 247, "12320": 247, "12322": 247, "12324": 247, "12326": 247, "12328": 247, "12330": 247, "12332": 247, "12334": 247, "12336": 247, "12338": 247, "12340": 247, "12342": 247, "12344": 247, "12346": 247, "12348": 247, "12350": 247, "12352": 247, "12354": 247, "12356": 247, "12358": 247, "12360": 247, "12362": 247, "12364": 247, "12366": 247, "12368": 247, "12370": 247, "12372": 247, "12374": 247, "12376": 247, "12378": 247, "12380": 247, "12382": 247, "12384": 247, "12386": 247, "12388": 247, "12390": 247, "12392": 247, "12394": 247, "12396": 247, "12398": 247, "12400": 247, "12402": 247, "12404": 247, "12406": 247, "12408": 247, "12410": 247, "12412": 247, "12414": 247, "12416": 247, "12418": 247, "12420": 247, "12422": 247, "12424": 247, "12426": 247, "12428": 247, "12430": 247, "12432": 247, "12434": 247, "12436": 247, "12438": 247, "12440": 247, "12442": 247, "12444": 247, "12446": 247, "12448": 247, "12450": 247, "12452": 247, "12454": 247, "12456": 247, "12458": 247, "12460": 247, "12462": 247, "12464": 247, "12466": 247, "12468": 247, "12470": 247, "12472": 247, "12474": 247, "12476": 247, "12478": 247, "12480": 247, "12482": 247, "12484": 247, "12486": 247, "12488": 247, "12490": 247, "12492": 247, "12494": 247, "12496": 247, "12498": 247, "12500": 247, "12502": 247, "12504": 247, "12506": 247, "12508": 247, "12510": 247, "12512": 247, "12514": 247, "12516": 247, "12518": 247, "12520": 247, "12522": 247, "12524": 247, "12526": 247, "12528": 247, "12530": 247, "12532": 247, "12534": 247, "12536": 247, "12538": 247, "12540": 247, "12542": 247, "12544": 247, "12546": 247, "12548": 247, "12550": 247, "12552": 247, "12554": 247, "12556": 247, "12558": 247, "12560": 247, "12562": 247, "12564": 247, "12566": 247, "12568": 247, "12570": 247, "12572": 247, "12574": 247, "12576": 247, "12578": 247, "12580": 247, "12582": 247, "12584": 247, "12586": 247, "12588": 247, "12590": 247, "12592": 247, "12594": 247, "12596": 247, "12598": 247, "12600": 247, "12602": 247, "12604": 247, "12606": 247, "12608": 247, "12610": 247, "12612": 247, "12614": 247, "12616": 247, "12618": 247, "12620": 247, "12622": 247, "12624": 247, "12626": 247, "12628": 247, "12630": 247, "12632": 247, "12634": 247, "12636": 247, "12638": 247, "12640": 247, "12642": 247, "12644": 247, "12646": 247, "12648": 247, "12650": 247, "12652": 247, "12654": 247, "12656": 247, "12658": 247, "12660": 247, "12662": 247, "12664": 247, "12666": 247, "12668": 247, "12670": 247, "12672": 247, "12674": 247, "12676": 247, "12678": 247, "12680": 247, "12682": 247, "12684": 247, "12686": 247, "12688": 247, "12690": 247, "12692": 247, "12694": 247, "12696": 247, "12698": 247, "12700": 247, "12702": 247, "12704": 247, "12706": 247, "12708": 247, "12710": 247, "12712": 247, "12714": 247, "12716": 247, "12718": 247, "12720": 247, "12722": 247, "12724": 247, "12726": 247, "12728": 247, "12730": 247, "12732": 247, "12734": 247, "12736": 247, "12738": 247, "12740": 247, "12742": 247, "12744": 247, "12746": 247, "12748": 247, "12750": 247, "12752": 247, "12754": 247, "12756": 247, "12758": 247, "12760": 247, "12762": 247, "12764": 247, "12766": 247, "12768": 247, "12770": 247, "12772": 247, "12774": 247, "12776": 247, "12778": 247, "12780": 247, "12782": 247, "12784": 247, "12786": 247, "12788": 247, "12790": 247, "12792": 247, "12794": 247, "12796": 247, "12798": 247, "12800": 247, "12802": 247, "12804": 247, "12806": 247, "12808": 247, "12810": 247, "12812": 247, "12814": 247, "12816": 247, "12818": 247, "12820": 247, "12822": 247, "12824": 247, "12826": 247, "12828": 247, "12830": 247, "12832": 247, "12834": 247, "12836": 247, "12838": 247, "12840": 247, "12842": 247, "12844": 247, "12846": 247, "12848": 247, "12850": 247, "12852": 247, "12854": 247, "12856": 247, "12858": 247, "12860": 247, "12862": 247, "12864": 247, "12866": 247, "12868": 247, "12870": 247, "12872": 247, "12874": 247, "12876": 247, "12878": 247, "12880": 247, "12882": 247, "12884": 247, "12886": 247, "12888": 247, "12890": 247, "12892": 247, "12894": 247, "12896": 247, "12898": 247, "12900": 247, "12902": 247, "12904": 247, "12906": 247, "12908": 247, "12910": 247, "12912": 247, "12914": 247, "12916": 247, "12918": 247, "12920": 247, "12922": 247, "12924": 247, "12926": 247, "12928": 247, "12930": 247, "12932": 247, "12934": 247, "12936": 247, "12938": 247, "12940": 247, "12942": 247, "12944": 247, "12946": 247, "12948": 247, "12950": 247, "12952": 247, "12954": 247, "12956": 247, "12958": 247, "12960": 247, "12962": 247, "12964": 247, "12966": 247, "12968": 247, "12970": 247, "12972": 247, "12974": 247, "12976": 247, "12978": 247, "12980": 247, "12982": 247, "12984": 247, "12986": 247, "12988": 247, "12990": 247, "12992": 247, "12994": 247, "12996": 247, "12998": 247, "13000": 247, "13002": 247, "13004": 247, "13006": 247, "13008": 247, "13010": 247, "13012": 247, "13014": 247, "13016": 247, "13018": 247, "13020": 247, "13022": 247, "13024": 247, "13026": 247, "13028": 247, "13030": 247, "13032": 247, "13034": 247, "13036": 247, "13038": 247, "13040": 247, "13042": 247, "13044": 247, "13046": 247, "13048": 247, "13050": 247, "13052": 247, "13054": 247, "13056": 247, "13058": 247, "13060": 247, "13062": 247, "13064": 247, "13066": 247, "13068": 247, "13070": 247, "13072": 247, "13074": 247, "13076": 247, "13078": 247, "13080": 247, "13082": 247, "13084": 247, "13086": 247, "13088": 247, "13090": 247, "13092": 247, "13094": 247, "13096": 247, "13098": 247, "13100": 247, "13102": 247, "13104": 247, "13106": 247, "13108": 247, "13110": 247, "13112": 247, "13114": 247, "13116": 247, "13118": 247, "13120": 247, "13122": 247, "13124": 247, "13126": 247, "13128": 247, "13130": 247, "13132": 247, "13134": 247, "13136": 247, "13138": 247, "13140": 247, "13142": 247, "13144": 247, "13146": 247, "13148": 247, "13150": 247, "13152": 247, "13154": 247, "13156": 247, "13158": 247, "13160": 247, "13162": 247, "13164": 247, "13166": 247, "13168": 247, "13170": 247, "13172": 247, "13174": 247, "13176": 247, "13178": 247, "13180": 247, "13182": 247, "13184": 247, "13186": 247, "13188": 247, "13190": 247, "13192": 247, "13194": 247, "13196": 247, "13198": 247, "13200": 247, "13202": 247, "13204": 247, "13206": 247, "13208": 247, "13210": 247, "13212": 247, "13214": 247, "13216": 247, "13218": 247, "13220": 247, "13222": 247, "13224": 247, "13226": 247, "13228": 247, "13230": 247, "13232": 247, "13234": 247, "13236": 247, "13238": 247, "13240": 247, "13242": 247, "13244": 247, "13246": 247, "13248": 247, "13250": 247, "13252": 247, "13254": 247, "13256": 247, "13258": 247, "13260": 247, "13262": 247, "13264": 247, "13266": 247, "13268": 247, "13270": 247, "13272": 247, "13274": 247, "13276": 247, "13278": 247, "13280": 247, "13282": 247, "13284": 247, "13286": 247, "13288": 247, "13290": 247, "13292": 247, "13294": 247, "13296": 247, "13298": 247, "13300": 247, "13302": 247, "13304": 247, "13306": 247, "13308": 247, "13310": 247, "13312": 247, "13314": 247, "13316": 247, "13318": 247, "13320": 247, "13322": 247, "13324": 247, "13326": 247, "13328": 247, "13330": 247, "13332": 247, "13334": 247, "13336": 247, "13338": 247, "13340": 247, "13342": 247, "13344": 247, "13346": 247, "13348": 247, "13350": 247, "13352": 247, "13354": 247, "13356": 247, "13358": 247, "13360": 247, "13362": 247, "13364": 247, "13366": 247, "13368": 247, "13370": 247, "13372": 247, "13374": 247, "13376": 247, "13378": 247, "13380": 247, "13382": 247, "13384": 247, "13386": 247, "13388": 247, "13390": 247, "13392": 247, "13394": 247, "13396": 247, "13398": 247, "13400": 247, "13402": 247, "13404": 247, "13406": 247, "13408": 247, "13410": 247, "13412": 247, "13414": 247, "13416": 247, "13418": 247, "13420": 247, "13422": 247, "13424": 247, "13426": 247, "13428": 247, "13430": 247, "13432": 247, "13434": 247, "13436": 247, "13438": 247, "13440": 247, "13442": 247, "13444": 247, "13446": 247, "13448": 247, "13450": 247, "13452": 247, "13454": 247, "13456": 247, "13458": 247, "13460": 247, "13462": 247, "13464": 247, "13466": 247, "13468": 247, "13470": 247, "13472": 247, "13474": 247, "13476": 247, "13478": 247, "13480": 247, "13482": 247, "13484": 247, "13486": 247, "13488": 247, "13490": 247, "13492": 247, "13494": 247, "13496": 247, "13498": 247, "13502": 247, "13504": 247, "13506": 247, "13508": 247, "13510": 247, "13512": 247, "13514": 247, "13516": 247, "13518": 247, "13520": 247, "13522": 247, "13524": 247, "13526": 247, "13528": 247, "13530": 247, "13532": 247, "13534": 247, "13536": 247, "13538": 247, "13540": 247, "13542": 247, "13544": 247, "13546": 247, "13548": 247, "13550": 247, "13552": 247, "13554": 247, "13556": 247, "13558": 247, "13560": 247, "13562": 247, "13564": 247, "13566": 247, "13568": 247, "13570": 247, "13572": 247, "13574": 247, "13576": 247, "13578": 247, "13580": 247, "13582": 247, "13584": 247, "13586": 247, "13588": 247, "13590": 247, "13592": 247, "13594": 247, "13596": 247, "13598": 247, "13600": 247, "13602": 247, "13604": 247, "13606": 247, "13608": 247, "13610": 247, "13612": 247, "13614": 247, "13616": 247, "13618": 247, "13620": 247, "13622": 247, "13624": 247, "13626": 247, "13628": 247, "13630": 247, "13632": 247, "13634": 247, "13636": 247, "13638": 247, "13640": 247, "13642": 247, "13644": 247, "13646": 247, "13648": 247, "13650": 247, "13652": 247, "13654": 247, "13656": 247, "13658": 247, "13660": 247, "13662": 247, "13664": 247, "13666": 247, "13668": 247, "13670": 247, "13672": 247, "13674": 247, "13676": 247, "13678": 247, "13680": 247, "13682": 247, "13684": 247, "13686": 247, "13688": 247, "13690": 247, "13692": 247, "13694": 247, "13696": 247, "13698": 247, "13700": 247, "13702": 247, "13704": 247, "13706": 247, "13708": 247, "13710": 247, "13712": 247, "13714": 247, "13716": 247, "13718": 247, "13720": 247, "13722": 247, "13724": 247, "13726": 247, "13728": 247, "13730": 247, "13732": 247, "13734": 247, "13736": 247, "13738": 247, "13740": 247, "13742": 247, "13744": 247, "13746": 247, "13748": 247, "13750": 247, "13752": 247, "13754": 247, "13756": 247, "13758": 247, "13760": 247, "13762": 247, "13764": 247, "13766": 247, "13768": 247, "13770": 247, "13772": 247, "13774": 247, "13776": 247, "13778": 247, "13780": 247, "13782": 247, "13784": 247, "13786": 247, "13788": 247, "13790": 247, "13792": 247, "13794": 247, "13796": 247, "13798": 247, "13800": 247, "13802": 247, "13804": 247, "13806": 247, "13808": 247, "13810": 247, "13812": 247, "13814": 247, "13816": 247, "13818": 247, "13820": 247, "13822": 247, "13824": 247, "13826": 247, "13828": 247, "13830": 247, "13832": 247, "13834": 247, "13836": 247, "13838": 247, "13840": 247, "13842": 247, "13844": 247, "13846": 247, "13848": 247, "13850": 247, "13852": 247, "13854": 247, "13856": 247, "13858": 247, "13860": 247, "13862": 247, "13864": 247, "13866": 247, "13868": 247, "13870": 247, "13872": 247, "13874": 247, "13876": 247, "13878": 247, "13880": 247, "13882": 247, "13884": 247, "13886": 247, "13888": 247, "13890": 247, "13892": 247, "13894": 247, "13896": 247, "13898": 247, "13900": 247, "13902": 247, "13904": 247, "13906": 247, "13908": 247, "13910": 247, "13912": 247, "13914": 247, "13916": 247, "13918": 247, "13920": 247, "13922": 247, "13924": 247, "13926": 247, "13928": 247, "13930": 247, "13932": 247, "13934": 247, "13936": 247, "13938": 247, "13940": 247, "13942": 247, "13944": 247, "13946": 247, "13948": 247, "13950": 247, "13952": 247, "13954": 247, "13956": 247, "13958": 247, "13960": [247, 980], "13962": 247, "13964": 247, "13966": 247, "13968": 247, "13970": 247, "13972": 247, "13974": 247, "13976": 247, "13978": 247, "13980": 247, "13982": 247, "13984": 247, "13986": 247, "13988": 247, "13990": 247, "13992": 247, "13994": 247, "13996": 247, "13998": 247, "14000": 247, "14002": 247, "14004": 247, "14006": 247, "14008": 247, "14010": 247, "14012": 247, "14014": 247, "14016": 247, "14018": 247, "14020": 247, "14022": 247, "14024": 247, "14026": 247, "14028": 247, "14030": 247, "14032": 247, "14034": 247, "14036": 247, "14038": 247, "14040": 247, "14042": 247, "14044": 247, "14046": 247, "14048": 247, "14050": 247, "14052": 247, "14054": 247, "14056": 247, "14058": 247, "14060": 247, "14062": 247, "14064": 247, "14066": 247, "14068": 247, "14070": 247, "14072": 247, "14074": 247, "14076": 247, "14078": 247, "14080": 247, "14082": 247, "14084": 247, "14086": 247, "14088": 247, "14090": 247, "14092": 247, "14094": 247, "14096": 247, "14098": 247, "14100": 247, "14102": 247, "14104": 247, "14106": 247, "14108": 247, "14110": 247, "14112": 247, "14114": 247, "14116": 247, "14118": 247, "14120": 247, "14122": 247, "14124": 247, "14126": 247, "14128": 247, "14130": 247, "14132": 247, "14134": 247, "14136": 247, "14138": 247, "14140": 247, "14142": 247, "14144": 247, "14146": 247, "14148": 247, "14150": 247, "14152": 247, "14154": 247, "14156": 247, "14158": 247, "14160": 247, "14162": 247, "14164": 247, "14166": 247, "14168": 247, "14170": 247, "14172": 247, "14174": 247, "14176": 247, "14178": 247, "14180": 247, "14182": 247, "14184": 247, "14186": 247, "14188": 247, "14190": 247, "14192": 247, "14194": 247, "14196": 247, "14198": 247, "14200": 247, "14202": 247, "14204": 247, "14206": 247, "14208": 247, "14210": 247, "14212": 247, "14214": 247, "14216": 247, "14218": 247, "14220": 247, "14222": 247, "14224": 247, "14226": 247, "14228": 247, "14230": 247, "14232": 247, "14234": 247, "14236": 247, "14238": 247, "14240": 247, "14242": 247, "14244": 247, "14246": 247, "14248": 247, "14250": 247, "14252": 247, "14254": 247, "14256": 247, "14258": 247, "14260": 247, "14262": 247, "14264": 247, "14266": 247, "14268": 247, "14270": 247, "14272": 247, "14274": 247, "14276": 247, "14278": 247, "14280": 247, "14282": 247, "14284": 247, "14286": 247, "14288": 247, "14290": 247, "14292": 247, "14294": 247, "14296": 247, "14298": 247, "14300": 247, "14302": 247, "14304": 247, "14306": 247, "14308": 247, "14310": 247, "14312": 247, "14314": 247, "14316": 247, "14318": 247, "14320": 247, "14322": 247, "14324": 247, "14326": 247, "14328": 247, "14330": 247, "14332": 247, "14334": 247, "14336": 247, "14338": 247, "14340": 247, "14342": 247, "14344": 247, "14346": 247, "14348": 247, "14350": 247, "14352": 247, "14354": 247, "14356": 247, "14358": 247, "14360": 247, "14362": 247, "14364": 247, "14366": 247, "14368": 247, "14370": 247, "14372": 247, "14374": 247, "14376": 247, "14378": 247, "14380": 247, "14382": 247, "14384": 247, "14388": 247, "14390": 247, "14392": 247, "14394": 247, "14396": 247, "14398": 247, "14400": 247, "14402": 247, "14404": 247, "14406": 247, "14408": 247, "14410": 247, "14412": 247, "14414": 247, "14416": 247, "14418": 247, "14420": 247, "14422": 247, "14424": 247, "14426": 247, "14428": 247, "14430": 247, "14432": 247, "14434": 247, "14436": 247, "14438": 247, "14440": 247, "14442": 247, "14444": 247, "14446": 247, "14448": 247, "14450": 247, "14452": 247, "14454": 247, "14456": 247, "14458": 247, "14460": 247, "14462": 247, "14464": 247, "14466": 247, "14468": 247, "14470": 247, "14472": 247, "14474": 247, "14476": 247, "14478": 247, "14480": 247, "14482": 247, "14484": 247, "14486": 247, "14488": 247, "14490": 247, "14492": 247, "14494": 247, "14496": 247, "14498": 247, "14500": 247, "14502": 247, "14504": 247, "14506": 247, "14508": 247, "14510": 247, "14512": 247, "14514": 247, "14516": 247, "14518": 247, "14520": 247, "14522": 247, "14524": 247, "14526": 247, "14528": 247, "14530": 247, "14532": 247, "14534": 247, "14536": 247, "14538": 247, "14540": 247, "14542": 247, "14544": 247, "14546": 247, "14548": 247, "14550": 247, "14552": 247, "14554": 247, "14556": 247, "14558": 247, "14560": 247, "14562": 247, "14564": 247, "14566": 247, "14568": 247, "14570": 247, "14572": 247, "14574": 247, "14576": 247, "14578": 247, "14580": 247, "14582": 247, "14584": 247, "14586": 247, "14588": 247, "14590": 247, "14592": 247, "14594": 247, "14596": 247, "14598": 247, "14600": 247, "14602": 247, "14604": 247, "14606": 247, "14608": 247, "14610": 247, "14612": 247, "14614": 247, "14616": 247, "14618": 247, "14620": 247, "14622": 247, "14624": 247, "14626": 247, "14628": 247, "14630": 247, "14632": 247, "14634": 247, "14636": 247, "14638": 247, "14640": 247, "14642": 247, "14644": 247, "14646": 247, "14648": 247, "14650": 247, "14652": 247, "14654": 247, "14656": 247, "14658": 247, "14660": 247, "14662": 247, "14664": 247, "14666": 247, "14668": 247, "14670": 247, "14672": 247, "14674": 247, "14676": 247, "14678": 247, "14680": 247, "14682": 247, "14684": 247, "14686": 247, "14688": 247, "14690": 247, "14692": 247, "14694": 247, "14696": 247, "14698": 247, "14700": 247, "14702": 247, "14704": 247, "14706": 247, "14708": 247, "14710": 247, "14712": 247, "14714": 247, "14716": 247, "14718": 247, "14720": 247, "14722": 247, "14724": 247, "14726": 247, "14728": 247, "14730": 247, "14732": 247, "14734": 247, "14736": 247, "14738": 247, "14740": 247, "14742": 247, "14744": 247, "14746": 247, "14748": 247, "14750": 247, "14752": 247, "14754": 247, "14756": 247, "14758": 247, "14760": 247, "14762": 247, "14764": 247, "14766": 247, "14768": 247, "14770": 247, "14772": 247, "14774": 247, "14776": 247, "14778": 247, "14780": 247, "14782": 247, "14784": 247, "14786": 247, "14788": 247, "14790": 247, "14792": 247, "14794": 247, "14796": 247, "14798": 247, "14800": 247, "14802": 247, "14804": 247, "14806": 247, "14808": 247, "14810": 247, "14812": 247, "14814": 247, "14816": 247, "14818": 247, "14820": 247, "14822": 247, "14824": 247, "14826": 247, "14828": 247, "14830": 247, "14832": 247, "14834": 247, "14836": 247, "14838": 247, "14840": 247, "14842": 247, "14844": 247, "14846": 247, "14848": 247, "14850": 247, "14852": 247, "14854": 247, "14856": 247, "14858": 247, "14860": 247, "14862": 247, "14864": 247, "14866": 247, "14868": 247, "14870": 247, "14872": 247, "14874": 247, "14876": 247, "14878": 247, "14880": 247, "14882": [247, 595], "14884": 247, "14886": 247, "14888": 247, "14890": 247, "14892": 247, "14894": 247, "14896": 247, "14898": 247, "14900": 247, "14902": 247, "14904": 247, "14906": 247, "14908": 247, "14910": 247, "14912": 247, "14914": 247, "14916": 247, "14918": 247, "14920": 247, "14922": 247, "14924": 247, "14926": 247, "14928": 247, "14930": 247, "14932": 247, "14934": 247, "14936": 247, "14938": 247, "14940": 247, "14942": 247, "14944": 247, "14946": 247, "14948": 247, "14950": 247, "14952": 247, "14954": 247, "14956": 247, "14958": 247, "14960": 247, "14962": 247, "14964": 247, "14966": 247, "14968": 247, "14970": 247, "14972": 247, "14974": 247, "14976": 247, "14978": 247, "14980": 247, "14982": 247, "14984": 247, "14986": 247, "14988": 247, "14990": [247, 296], "14992": 247, "14994": 247, "14996": 247, "14998": 247, "15002": 247, "15004": 247, "15006": 247, "15008": 247, "15010": 247, "15012": 247, "15014": 247, "15016": 247, "15018": 247, "15020": 247, "15022": 247, "15024": 247, "15026": 247, "15028": 247, "15030": 247, "15032": 247, "15034": 247, "15036": 247, "15038": 247, "15040": 247, "15042": 247, "15044": 247, "15046": 247, "15048": 247, "15050": 247, "15052": 247, "15054": 247, "15056": 247, "15058": 247, "15060": 247, "15062": 247, "15064": 247, "15066": 247, "15068": 247, "15070": 247, "15072": 247, "15074": 247, "15076": 247, "15078": 247, "15080": 247, "15082": 247, "15084": 247, "15086": 247, "15088": 247, "15090": 247, "15092": 247, "15094": 247, "15096": 247, "15098": 247, "15100": 247, "15102": 247, "15104": 247, "15106": 247, "15108": 247, "15110": 247, "15112": 247, "15114": 247, "15116": 247, "15118": 247, "15120": 247, "15122": 247, "15124": 247, "15126": 247, "15128": 247, "15130": 247, "15132": 247, "15134": 247, "15136": 247, "15138": 247, "15140": 247, "15142": 247, "15144": 247, "15146": 247, "15148": 247, "15150": 247, "15152": 247, "15154": 247, "15156": 247, "15158": 247, "15160": 247, "15162": 247, "15164": 247, "15166": 247, "15168": 247, "15170": 247, "15172": 247, "15174": 247, "15176": 247, "15178": 247, "15180": 247, "15182": 247, "15184": 247, "15186": 247, "15188": 247, "15190": 247, "15192": 247, "15194": 247, "15196": 247, "15198": 247, "15200": 247, "15202": 247, "15204": 247, "15206": 247, "15208": 247, "15210": 247, "15212": 247, "15214": 247, "15216": 247, "15218": 247, "15220": 247, "15222": 247, "15224": 247, "15226": 247, "15228": 247, "15230": 247, "15232": 247, "15234": 247, "15236": 247, "15238": 247, "15240": 247, "15242": 247, "15244": [247, 1025], "15246": 247, "15248": 247, "15250": 247, "15252": 247, "15254": 247, "15256": 247, "15258": 247, "15260": 247, "15262": 247, "15264": 247, "15266": 247, "15268": 247, "15270": 247, "15272": 247, "15274": 247, "15276": 247, "15278": 247, "15280": 247, "15282": 247, "15284": 247, "15286": 247, "15288": 247, "15290": 247, "15292": 247, "15294": 247, "15296": 247, "15298": 247, "15300": 247, "15302": 247, "15304": 247, "15306": 247, "15308": 247, "15310": 247, "15312": 247, "15314": 247, "15316": 247, "15318": 247, "15320": 247, "15322": 247, "15324": 247, "15326": 247, "15328": 247, "15330": 247, "15332": 247, "15334": 247, "15336": 247, "15338": 247, "15340": 247, "15342": 247, "15344": 247, "15346": 247, "15348": 247, "15350": 247, "15352": 247, "15354": 247, "15356": 247, "15358": 247, "15360": 247, "15362": 247, "15364": 247, "15366": 247, "15368": 247, "15370": 247, "15372": 247, "15374": 247, "15376": 247, "15378": 247, "15380": 247, "15382": 247, "15384": 247, "15386": 247, "15388": 247, "15390": 247, "15392": 247, "15394": 247, "15396": 247, "15398": 247, "15400": 247, "15402": 247, "15404": 247, "15406": 247, "15408": 247, "15410": 247, "15412": 247, "15414": 247, "15416": 247, "15418": 247, "15420": 247, "15422": 247, "15424": 247, "15426": 247, "15428": 247, "15430": 247, "15432": 247, "15434": 247, "15436": 247, "15438": 247, "15440": 247, "15442": 247, "15444": 247, "15446": 247, "15448": 247, "15450": 247, "15452": 247, "15454": 247, "15456": 247, "15458": 247, "15460": 247, "15462": 247, "15464": 247, "15466": 247, "15468": 247, "15470": 247, "15472": 247, "15474": 247, "15476": 247, "15478": 247, "15480": 247, "15482": 247, "15484": 247, "15486": 247, "15488": 247, "15490": 247, "15492": 247, "15494": 247, "15496": 247, "15498": 247, "15500": 247, "15502": 247, "15504": 247, "15506": 247, "15508": 247, "15510": 247, "15512": 247, "15514": 247, "15516": 247, "15518": 247, "15520": 247, "15522": 247, "15524": 247, "15526": 247, "15528": 247, "15530": 247, "15532": 247, "15534": 247, "15536": 247, "15538": 247, "15540": 247, "15542": 247, "15544": 247, "15546": 247, "15548": 247, "15550": 247, "15552": 247, "15554": 247, "15556": 247, "15558": 247, "15560": 247, "15562": 247, "15564": 247, "15566": 247, "15568": 247, "15570": 247, "15572": 247, "15574": 247, "15576": 247, "15578": 247, "15580": 247, "15582": 247, "15584": 247, "15586": 247, "15588": 247, "15590": 247, "15592": 247, "15594": 247, "15596": 247, "15598": 247, "15600": 247, "15602": 247, "15604": 247, "15606": 247, "15608": 247, "15610": 247, "15612": 247, "15614": 247, "15616": 247, "15618": 247, "15620": 247, "15622": 247, "15624": 247, "15626": 247, "15628": 247, "15630": 247, "15632": 247, "15634": 247, "15636": 247, "15638": 247, "15640": 247, "15642": 247, "15644": 247, "15646": 247, "15648": 247, "15650": 247, "15652": 247, "15654": 247, "15656": 247, "15658": 247, "15660": 247, "15662": 247, "15664": 247, "15666": 247, "15668": 247, "15670": 247, "15672": 247, "15674": 247, "15676": 247, "15678": 247, "15680": 247, "15682": 247, "15684": 247, "15686": 247, "15688": 247, "15690": 247, "15692": 247, "15694": 247, "15696": 247, "15698": 247, "15700": 247, "15702": 247, "15704": 247, "15706": 247, "15708": 247, "15710": 247, "15712": 247, "15714": 247, "15716": 247, "15718": 247, "15720": 247, "15722": 247, "15724": 247, "15726": 247, "15728": 247, "15730": 247, "15732": 247, "15734": 247, "15736": 247, "15738": 247, "15740": 247, "15742": 247, "15744": 247, "15746": 247, "15748": 247, "15750": 247, "15752": 247, "15754": 247, "15756": 247, "15758": 247, "15760": 247, "15762": 247, "15764": 247, "15766": 247, "15768": 247, "15770": 247, "15772": 247, "15774": 247, "15776": 247, "15778": 247, "15780": 247, "15782": 247, "15784": 247, "15786": 247, "15788": 247, "15790": 247, "15792": 247, "15794": 247, "15796": 247, "15798": 247, "15800": 247, "15802": 247, "15804": 247, "15806": 247, "15808": 247, "15810": 247, "15812": 247, "15814": 247, "15816": 247, "15818": 247, "15820": 247, "15822": 247, "15824": 247, "15826": 247, "15828": 247, "15830": 247, "15832": 247, "15834": 247, "15836": 247, "15838": 247, "15840": 247, "15842": 247, "15844": 247, "15846": 247, "15848": 247, "15850": 247, "15852": 247, "15854": 247, "15856": 247, "15858": 247, "15860": 247, "15862": 247, "15864": 247, "15866": 247, "15868": 247, "15870": 247, "15872": 247, "15874": 247, "15876": 247, "15878": 247, "15880": 247, "15882": 247, "15884": 247, "15886": 247, "15888": 247, "15890": 247, "15892": 247, "15894": 247, "15896": 247, "15898": 247, "15900": 247, "15902": 247, "15904": 247, "15906": 247, "15908": 247, "15910": 247, "15912": 247, "15914": 247, "15916": 247, "15918": 247, "15920": 247, "15922": 247, "15924": 247, "15926": 247, "15928": 247, "15930": 247, "15932": 247, "15934": 247, "15936": 247, "15938": 247, "15940": 247, "15942": 247, "15944": 247, "15946": 247, "15948": 247, "15950": 247, "15952": 247, "15954": 247, "15956": 247, "15958": 247, "15960": 247, "15962": 247, "15964": 247, "15966": 247, "15968": 247, "15970": 247, "15972": 247, "15974": 247, "15976": 247, "15978": 247, "15980": 247, "15982": 247, "15984": 247, "15986": 247, "15988": 247, "15990": 247, "15992": 247, "15994": 247, "15996": 247, "15998": 247, "16000": 247, "16002": 247, "16004": 247, "16006": 247, "16008": 247, "16010": 247, "16012": 247, "16014": 247, "16016": 247, "16018": 247, "16020": 247, "16022": 247, "16024": 247, "16026": 247, "16028": 247, "16030": 247, "16032": 247, "16034": 247, "16036": 247, "16038": 247, "16040": 247, "16042": 247, "16044": 247, "16046": 247, "16048": 247, "16050": 247, "16052": 247, "16054": 247, "16056": 247, "16058": 247, "16060": 247, "16062": 247, "16064": 247, "16066": 247, "16068": 247, "16070": 247, "16072": 247, "16074": 247, "16076": 247, "16078": 247, "16080": 247, "16082": 247, "16084": 247, "16086": 247, "16088": 247, "16090": 247, "16092": 247, "16094": 247, "16096": 247, "16098": 247, "16100": 247, "16102": 247, "16104": 247, "16106": 247, "16108": 247, "16110": 247, "16112": 247, "16114": 247, "16116": 247, "16118": 247, "16120": 247, "16122": 247, "16124": 247, "16126": 247, "16128": 247, "16130": 247, "16132": 247, "16134": 247, "16136": 247, "16138": 247, "16140": 247, "16142": 247, "16144": 247, "16146": 247, "16148": 247, "16150": 247, "16152": 247, "16154": 247, "16156": 247, "16158": 247, "16160": 247, "16162": 247, "16164": 247, "16166": 247, "16168": 247, "16170": 247, "16172": 247, "16174": 247, "16176": 247, "16178": 247, "16180": 247, "16182": 247, "16184": 247, "16186": 247, "16188": 247, "16190": 247, "16192": 247, "16194": 247, "16196": 247, "16198": 247, "16200": 247, "16202": 247, "16204": 247, "16206": 247, "16208": 247, "16210": 247, "16212": 247, "16214": 247, "16216": 247, "16218": 247, "16220": 247, "16222": 247, "16224": 247, "16226": 247, "16228": 247, "16230": 247, "16232": 247, "16234": 247, "16236": 247, "16238": 247, "16240": 247, "16242": 247, "16244": 247, "16246": 247, "16248": 247, "16250": 247, "16252": 247, "16254": 247, "16256": 247, "16258": 247, "16260": 247, "16262": 247, "16264": 247, "16266": 247, "16268": 247, "16270": 247, "16272": 247, "16274": 247, "16276": 247, "16278": 247, "16280": 247, "16282": 247, "16284": 247, "16286": 247, "16288": 247, "16290": 247, "16292": 247, "16294": 247, "16296": 247, "16298": 247, "16300": 247, "16302": 247, "16304": 247, "16306": 247, "16308": 247, "16310": 247, "16312": 247, "16314": 247, "16316": 247, "16318": 247, "16320": 247, "16322": 247, "16324": 247, "16326": 247, "16328": 247, "16330": 247, "16332": 247, "16334": 247, "16336": 247, "16338": 247, "16340": 247, "16342": 247, "16344": 247, "16346": 247, "16348": 247, "16350": 247, "16352": 247, "16354": 247, "16356": 247, "16358": 247, "16360": 247, "16362": 247, "16364": 247, "16366": 247, "16368": 247, "16370": 247, "16372": 247, "16374": 247, "16376": 247, "16378": 247, "16380": 247, "16382": 247, "16386": 247, "16388": 247, "16390": 247, "16392": 247, "16394": 247, "16396": 247, "16398": 247, "16400": 247, "16402": 247, "16404": 247, "16406": 247, "16408": 247, "16410": 247, "16412": 247, "16414": 247, "16416": 247, "16418": 247, "16420": 247, "16422": 247, "16424": 247, "16426": 247, "16428": 247, "16430": 247, "16432": 247, "16434": 247, "16436": 247, "16438": 247, "16440": 247, "16442": 247, "16444": 247, "16446": 247, "16448": 247, "16450": 247, "16452": 247, "16454": 247, "16456": 247, "16458": 247, "16460": 247, "16462": 247, "16464": 247, "16466": 247, "16468": 247, "16470": 247, "16472": 247, "16474": 247, "16476": 247, "16478": 247, "16480": 247, "16482": 247, "16484": 247, "16486": 247, "16488": 247, "16490": 247, "16492": 247, "16494": 247, "16496": 247, "16498": 247, "16500": 247, "16502": 247, "16504": 247, "16506": 247, "16508": 247, "16510": 247, "16512": 247, "16514": 247, "16516": 247, "16518": 247, "16520": 247, "16522": 247, "16524": 247, "16526": 247, "16528": 247, "16530": 247, "16532": 247, "16534": 247, "16536": 247, "16538": 247, "16540": 247, "16542": 247, "16544": 247, "16546": 247, "16548": 247, "16550": 247, "16552": 247, "16554": 247, "16556": 247, "16558": 247, "16560": 247, "16562": 247, "16564": 247, "16566": 247, "16568": 247, "16570": 247, "16572": 247, "16574": 247, "16576": 247, "16578": 247, "16580": 247, "16582": 247, "16584": 247, "16586": 247, "16588": 247, "16590": 247, "16592": 247, "16594": 247, "16596": 247, "16598": 247, "16600": 247, "16602": 247, "16604": 247, "16606": 247, "16608": 247, "16610": 247, "16612": 247, "16614": 247, "16616": 247, "16618": 247, "16620": 247, "16622": 247, "16624": 247, "16626": 247, "16628": 247, "16630": 247, "16632": 247, "16634": 247, "16636": 247, "16638": 247, "16640": 247, "16642": 247, "16644": 247, "16646": 247, "16648": 247, "16650": 247, "16652": 247, "16654": 247, "16656": 247, "16658": 247, "16660": 247, "16662": 247, "16664": 247, "16666": 247, "16668": 247, "16670": 247, "16672": 247, "16674": 247, "16676": 247, "16678": 247, "16680": 247, "16682": 247, "16684": 247, "16686": 247, "16688": 247, "16690": 247, "16692": 247, "16694": 247, "16696": 247, "16698": 247, "16700": 247, "16702": 247, "16704": 247, "16706": 247, "16708": 247, "16710": 247, "16712": 247, "16714": 247, "16716": 247, "16718": 247, "16720": 247, "16722": 247, "16724": 247, "16726": 247, "16728": 247, "16730": 247, "16732": 247, "16734": 247, "16736": 247, "16738": 247, "16740": 247, "16742": 247, "16744": 247, "16746": 247, "16748": 247, "16750": 247, "16752": 247, "16754": 247, "16756": 247, "16758": 247, "16760": 247, "16762": 247, "16764": 247, "16766": 247, "16768": 247, "16770": 247, "16772": 247, "16774": 247, "16776": 247, "16778": 247, "16780": 247, "16782": 247, "16784": 247, "16786": 247, "16788": 247, "16790": 247, "16792": 247, "16794": 247, "16796": 247, "16798": 247, "16800": 247, "16802": 247, "16804": 247, "16806": 247, "16808": 247, "16810": 247, "16812": 247, "16814": 247, "16816": 247, "16818": 247, "16820": 247, "16822": 247, "16824": 247, "16826": 247, "16828": 247, "16830": 247, "16832": 247, "16834": 247, "16836": 247, "16838": 247, "16840": 247, "16842": 247, "16844": 247, "16846": 247, "16848": 247, "16850": 247, "16852": 247, "16854": 247, "16856": 247, "16858": 247, "16860": 247, "16862": 247, "16864": 247, "16866": 247, "16868": 247, "16870": 247, "16872": 247, "16874": 247, "16876": 247, "16878": 247, "16880": 247, "16882": 247, "16884": 247, "16886": 247, "16888": 247, "16890": 247, "16892": 247, "16894": 247, "16896": 247, "16898": 247, "16900": 247, "16902": 247, "16904": 247, "16906": 247, "16908": 247, "16910": 247, "16912": 247, "16914": 247, "16916": 247, "16918": 247, "16920": 247, "16922": 247, "16924": 247, "16926": 247, "16928": 247, "16930": 247, "16932": 247, "16934": 247, "16936": 247, "16938": 247, "16940": 247, "16942": 247, "16944": 247, "16946": 247, "16948": 247, "16950": 247, "16952": 247, "16954": 247, "16956": 247, "16958": 247, "16960": 247, "16962": 247, "16964": 247, "16966": 247, "16968": 247, "16970": 247, "16972": 247, "16974": 247, "16976": 247, "16978": 247, "16980": 247, "16982": 247, "16984": 247, "16986": 247, "16988": 247, "16990": 247, "16992": 247, "16994": 247, "16996": 247, "16998": 247, "17000": 247, "17002": 247, "17004": 247, "17006": 247, "17008": 247, "17010": 247, "17012": 247, "17014": 247, "17016": 247, "17018": 247, "17020": 247, "17022": 247, "17024": 247, "17026": 247, "17028": 247, "17030": 247, "17032": 247, "17034": 247, "17036": 247, "17038": 247, "17040": 247, "17042": 247, "17044": 247, "17046": 247, "17048": 247, "17050": 247, "17052": 247, "17054": 247, "17056": 247, "17058": 247, "17060": 247, "17062": 247, "17064": 247, "17066": 247, "17068": 247, "17070": 247, "17072": 247, "17074": 247, "17076": 247, "17078": 247, "17080": 247, "17082": 247, "17084": 247, "17086": 247, "17088": 247, "17090": 247, "17092": 247, "17094": 247, "17096": 247, "17098": 247, "17100": 247, "17102": 247, "17104": 247, "17106": 247, "17108": 247, "17110": 247, "17112": 247, "17114": 247, "17116": 247, "17118": 247, "17120": 247, "17122": 247, "17124": 247, "17126": [247, 296], "17128": 247, "17130": 247, "17132": 247, "17134": 247, "17136": 247, "17138": 247, "17140": 247, "17142": 247, "17144": 247, "17146": 247, "17148": 247, "17150": 247, "17152": 247, "17154": 247, "17156": 247, "17158": 247, "17160": 247, "17162": 247, "17164": 247, "17166": 247, "17168": 247, "17170": 247, "17172": 247, "17174": 247, "17176": 247, "17178": 247, "17180": 247, "17182": 247, "17184": 247, "17186": 247, "17188": 247, "17190": 247, "17192": 247, "17194": 247, "17196": 247, "17198": 247, "17200": 247, "17202": 247, "17204": 247, "17206": 247, "17208": 247, "17210": 247, "17212": 247, "17214": 247, "17216": 247, "17218": 247, "17220": 247, "17222": 247, "17224": 247, "17226": 247, "17228": 247, "17230": 247, "17232": 247, "17234": 247, "17236": 247, "17238": 247, "17240": 247, "17242": 247, "17244": 247, "17246": 247, "17248": 247, "17250": 247, "17252": 247, "17254": 247, "17256": 247, "17258": 247, "17260": 247, "17262": 247, "17264": 247, "17266": 247, "17268": 247, "17270": 247, "17272": 247, "17274": 247, "17276": 247, "17278": 247, "17280": 247, "17282": 247, "17284": 247, "17286": 247, "17288": 247, "17290": 247, "17292": 247, "17294": 247, "17296": 247, "17298": 247, "17300": 247, "17302": 247, "17304": 247, "17306": 247, "17308": 247, "17310": 247, "17312": 247, "17314": 247, "17316": 247, "17318": 247, "17320": 247, "17322": 247, "17324": 247, "17326": 247, "17328": 247, "17330": 247, "17332": 247, "17334": 247, "17336": 247, "17338": 247, "17340": 247, "17342": 247, "17344": 247, "17346": 247, "17348": 247, "17350": 247, "17352": 247, "17354": 247, "17356": 247, "17358": 247, "17360": 247, "17362": 247, "17364": 247, "17366": 247, "17368": 247, "17370": 247, "17372": 247, "17374": 247, "17376": 247, "17378": 247, "17380": 247, "17382": 247, "17384": 247, "17386": 247, "17388": 247, "17390": 247, "17392": 247, "17394": 247, "17396": 247, "17398": 247, "17400": 247, "17402": 247, "17404": 247, "17406": 247, "17408": 247, "17410": 247, "17412": 247, "17414": 247, "17416": 247, "17418": 247, "17420": 247, "17422": 247, "17424": 247, "17426": 247, "17428": 247, "17430": 247, "17432": 247, "17434": 247, "17436": 247, "17438": 247, "17440": 247, "17442": 247, "17444": 247, "17446": 247, "17448": 247, "17450": 247, "17452": 247, "17454": 247, "17456": 247, "17458": 247, "17460": 247, "17462": 247, "17464": 247, "17466": 247, "17468": 247, "17470": 247, "17472": 247, "17474": 247, "17476": 247, "17478": 247, "17480": 247, "17482": 247, "17484": 247, "17486": 247, "17488": 247, "17490": 247, "17492": 247, "17494": 247, "17496": 247, "17498": 247, "17500": 247, "17502": 247, "17504": 247, "17506": 247, "17508": 247, "17510": 247, "17512": 247, "17514": 247, "17516": 247, "17518": 247, "17520": 247, "17522": 247, "17524": 247, "17526": 247, "17528": 247, "17530": 247, "17532": 247, "17534": 247, "17536": 247, "17538": 247, "17540": 247, "17542": 247, "17544": 247, "17546": 247, "17548": 247, "17550": 247, "17552": 247, "17554": 247, "17556": 247, "17558": 247, "17560": 247, "17562": 247, "17564": 247, "17566": 247, "17568": 247, "17570": 247, "17572": 247, "17574": 247, "17576": 247, "17578": 247, "17580": 247, "17582": 247, "17584": 247, "17586": 247, "17588": 247, "17590": 247, "17592": 247, "17594": 247, "17596": 247, "17598": 247, "17600": 247, "17602": 247, "17604": 247, "17606": 247, "17608": 247, "17610": 247, "17612": 247, "17614": 247, "17616": 247, "17618": 247, "17620": 247, "17622": 247, "17624": 247, "17626": 247, "17628": 247, "17630": 247, "17632": 247, "17634": 247, "17636": 247, "17638": 247, "17640": 247, "17642": 247, "17644": 247, "17646": 247, "17648": 247, "17650": 247, "17652": 247, "17654": 247, "17656": 247, "17658": 247, "17660": 247, "17662": 247, "17664": 247, "17666": 247, "17668": 247, "17670": 247, "17672": 247, "17674": 247, "17676": 247, "17678": 247, "17680": 247, "17682": 247, "17684": 247, "17686": 247, "17688": 247, "17690": 247, "17692": 247, "17694": 247, "17696": 247, "17698": 247, "17700": 247, "17702": 247, "17704": 247, "17706": 247, "17708": 247, "17710": 247, "17712": 247, "17714": 247, "17716": 247, "17718": 247, "17720": 247, "17722": 247, "17724": 247, "17726": 247, "17728": 247, "17730": 247, "17732": 247, "17734": 247, "17736": 247, "17738": 247, "17740": 247, "17742": 247, "17744": 247, "17746": 247, "17748": 247, "17750": 247, "17752": 247, "17754": 247, "17756": 247, "17758": 247, "17760": 247, "17762": 247, "17764": 247, "17766": 247, "17768": 247, "17770": 247, "17772": 247, "17774": 247, "17776": 247, "17778": 247, "17780": 247, "17782": 247, "17784": 247, "17786": 247, "17788": 247, "17790": 247, "17792": 247, "17794": 247, "17796": 247, "17798": 247, "17800": 247, "17802": 247, "17804": 247, "17806": 247, "17808": 247, "17810": 247, "17812": 247, "17814": 247, "17816": 247, "17818": 247, "17820": 247, "17822": 247, "17824": 247, "17826": 247, "17828": 247, "17830": 247, "17832": 247, "17834": 247, "17836": 247, "17838": 247, "17840": 247, "17842": 247, "17844": 247, "17846": 247, "17848": 247, "17850": 247, "17852": 247, "17854": 247, "17856": 247, "17858": 247, "17860": 247, "17862": 247, "17864": 247, "17866": 247, "17868": 247, "17870": 247, "17872": 247, "17874": 247, "17876": 247, "17878": 247, "17880": 247, "17882": 247, "17884": 247, "17886": 247, "17888": 247, "17890": 247, "17892": 247, "17894": 247, "17896": 247, "17898": 247, "17900": 247, "17902": 247, "17904": 247, "17906": 247, "17908": 247, "17910": 247, "17912": 247, "17914": 247, "17916": 247, "17918": 247, "17920": 247, "17922": 247, "17924": 247, "17926": 247, "17928": 247, "17930": 247, "17932": 247, "17934": 247, "17936": 247, "17938": 247, "17940": 247, "17942": 247, "17944": 247, "17946": 247, "17948": 247, "17950": 247, "17952": 247, "17954": 247, "17956": 247, "17958": 247, "17960": 247, "17962": 247, "17964": 247, "17966": 247, "17968": 247, "17970": 247, "17972": 247, "17974": 247, "17976": 247, "17978": 247, "17980": 247, "17982": 247, "17984": 247, "17986": 247, "17988": 247, "17990": 247, "17992": 247, "17994": 247, "17996": 247, "17998": 247, "18000": [247, 943], "18002": 247, "18004": 247, "18006": 247, "18008": 247, "18010": 247, "18012": 247, "18014": 247, "18016": 247, "18018": 247, "18020": 247, "18022": 247, "18024": 247, "18026": 247, "18028": 247, "18030": 247, "18032": 247, "18034": 247, "18036": 247, "18038": 247, "18040": 247, "18042": 247, "18044": 247, "18046": 247, "18048": 247, "18050": 247, "18052": 247, "18054": 247, "18056": 247, "18058": 247, "18060": 247, "18062": 247, "18064": 247, "18066": 247, "18068": 247, "18070": 247, "18072": 247, "18074": 247, "18076": 247, "18078": 247, "18080": 247, "18082": 247, "18084": 247, "18086": 247, "18088": 247, "18090": 247, "18092": 247, "18094": 247, "18096": 247, "18098": 247, "18100": 247, "18102": 247, "18104": 247, "18106": 247, "18108": 247, "18110": 247, "18112": 247, "18114": 247, "18116": 247, "18118": 247, "18120": 247, "18122": 247, "18124": 247, "18126": 247, "18128": 247, "18130": 247, "18132": 247, "18134": 247, "18136": 247, "18138": 247, "18140": 247, "18142": 247, "18144": 247, "18146": 247, "18148": 247, "18150": 247, "18152": 247, "18154": 247, "18156": 247, "18158": 247, "18160": 247, "18162": 247, "18164": 247, "18166": 247, "18168": 247, "18170": 247, "18172": 247, "18174": 247, "18176": 247, "18178": 247, "18180": 247, "18182": 247, "18184": 247, "18186": 247, "18188": 247, "18190": 247, "18192": 247, "18194": 247, "18196": 247, "18198": 247, "18200": 247, "18202": 247, "18204": 247, "18206": 247, "18208": 247, "18210": 247, "18212": 247, "18214": 247, "18216": 247, "18218": 247, "18220": 247, "18222": 247, "18224": 247, "18226": 247, "18228": 247, "18230": 247, "18232": 247, "18234": 247, "18236": 247, "18238": 247, "18240": 247, "18242": 247, "18244": 247, "18246": 247, "18248": 247, "18250": 247, "18252": 247, "18254": 247, "18256": 247, "18258": 247, "18260": 247, "18262": 247, "18264": 247, "18266": 247, "18268": 247, "18270": 247, "18272": 247, "18274": 247, "18276": 247, "18278": 247, "18280": 247, "18282": 247, "18284": 247, "18286": 247, "18288": 247, "18290": 247, "18292": 247, "18294": 247, "18296": 247, "18298": 247, "18300": 247, "18302": 247, "18304": 247, "18306": 247, "18308": 247, "18310": 247, "18312": 247, "18314": 247, "18316": 247, "18318": 247, "18320": 247, "18322": 247, "18324": 247, "18326": 247, "18328": 247, "18330": 247, "18332": 247, "18334": 247, "18336": 247, "18338": 247, "18340": 247, "18342": 247, "18344": 247, "18346": 247, "18348": 247, "18350": 247, "18352": 247, "18354": 247, "18356": 247, "18358": 247, "18360": 247, "18362": 247, "18364": 247, "18366": 247, "18368": 247, "18370": 247, "18372": 247, "18374": 247, "18376": 247, "18378": 247, "18380": 247, "18382": 247, "18384": [247, 1011], "18386": 247, "18388": 247, "18390": 247, "18392": 247, "18394": 247, "18396": 247, "18398": 247, "18400": 247, "18402": 247, "18404": 247, "18406": 247, "18408": 247, "18410": 247, "18412": 247, "18414": 247, "18416": 247, "18418": 247, "18420": 247, "18422": 247, "18424": 247, "18426": 247, "18428": 247, "18430": 247, "18432": 247, "18434": 247, "18436": 247, "18438": 247, "18440": 247, "18442": 247, "18444": 247, "18446": 247, "18448": 247, "18450": 247, "18452": 247, "18454": 247, "18456": 247, "18458": 247, "18460": 247, "18462": 247, "18464": 247, "18466": 247, "18468": 247, "18470": 247, "18472": 247, "18474": 247, "18476": 247, "18478": 247, "18480": 247, "18482": 247, "18484": 247, "18486": 247, "18488": 247, "18490": 247, "18492": 247, "18494": 247, "18496": 247, "18498": 247, "18500": 247, "18502": 247, "18504": 247, "18506": 247, "18508": 247, "18510": 247, "18512": 247, "18514": 247, "18516": 247, "18518": 247, "18520": 247, "18522": 247, "18524": 247, "18526": 247, "18528": 247, "18530": 247, "18532": 247, "18534": 247, "18536": 247, "18538": 247, "18540": 247, "18542": 247, "18544": 247, "18546": 247, "18548": 247, "18550": 247, "18552": 247, "18554": 247, "18556": 247, "18558": 247, "18560": 247, "18562": 247, "18564": 247, "18566": 247, "18568": 247, "18570": 247, "18572": 247, "18574": 247, "18576": 247, "18578": 247, "18580": 247, "18582": 247, "18584": 247, "18586": 247, "18588": 247, "18590": 247, "18592": 247, "18594": 247, "18596": 247, "18598": 247, "18600": 247, "18602": 247, "18604": 247, "18606": 247, "18608": 247, "18610": 247, "18612": 247, "18614": 247, "18616": 247, "18618": 247, "18620": 247, "18622": 247, "18624": 247, "18626": 247, "18628": 247, "18630": 247, "18632": 247, "18634": 247, "18636": 247, "18638": 247, "18640": 247, "18642": 247, "18644": 247, "18646": 247, "18648": 247, "18650": 247, "18652": 247, "18654": 247, "18656": 247, "18658": 247, "18660": 247, "18662": 247, "18664": 247, "18666": 247, "18668": 247, "18670": 247, "18672": 247, "18674": 247, "18676": 247, "18678": 247, "18680": 247, "18682": 247, "18684": 247, "18686": 247, "18688": 247, "18690": 247, "18692": 247, "18694": 247, "18696": 247, "18698": 247, "18700": 247, "18702": 247, "18704": 247, "18706": 247, "18708": 247, "18710": 247, "18712": 247, "18714": 247, "18716": 247, "18718": 247, "18720": 247, "18722": 247, "18724": 247, "18726": 247, "18728": 247, "18730": 247, "18732": 247, "18734": 247, "18736": 247, "18738": 247, "18740": 247, "18742": 247, "18744": 247, "18746": 247, "18748": 247, "18750": 247, "18752": 247, "18754": 247, "18756": 247, "18758": 247, "18760": 247, "18762": 247, "18764": 247, "18766": 247, "18768": 247, "18770": 247, "18772": 247, "18774": 247, "18776": 247, "18778": 247, "18780": 247, "18782": 247, "18784": 247, "18786": 247, "18788": 247, "18790": 247, "18792": 247, "18794": 247, "18796": 247, "18798": 247, "18800": 247, "18802": 247, "18804": 247, "18806": 247, "18808": 247, "18810": 247, "18812": 247, "18814": 247, "18816": 247, "18818": 247, "18820": 247, "18822": 247, "18824": 247, "18826": 247, "18828": 247, "18830": 247, "18832": 247, "18834": 247, "18836": 247, "18838": 247, "18840": 247, "18842": 247, "18844": 247, "18846": 247, "18848": 247, "18850": 247, "18852": 247, "18854": 247, "18856": 247, "18858": 247, "18860": 247, "18862": 247, "18864": 247, "18866": 247, "18868": 247, "18870": 247, "18872": 247, "18874": 247, "18876": 247, "18878": 247, "18880": 247, "18882": 247, "18884": 247, "18886": 247, "18888": 247, "18890": 247, "18892": 247, "18894": 247, "18896": 247, "18898": 247, "18900": 247, "18902": 247, "18904": 247, "18906": 247, "18908": 247, "18910": 247, "18912": 247, "18914": 247, "18916": 247, "18918": 247, "18920": 247, "18922": 247, "18924": 247, "18926": 247, "18928": 247, "18930": 247, "18932": 247, "18934": 247, "18936": 247, "18938": 247, "18940": 247, "18942": 247, "18944": 247, "18946": 247, "18948": 247, "18950": 247, "18952": 247, "18954": 247, "18956": 247, "18958": 247, "18960": 247, "18962": 247, "18964": 247, "18966": 247, "18968": 247, "18970": 247, "18972": 247, "18974": 247, "18976": 247, "18978": 247, "18980": 247, "18982": 247, "18984": 247, "18986": 247, "18988": 247, "18990": 247, "18992": 247, "18994": 247, "18996": 247, "18998": 247, "19000": 247, "19002": 247, "19004": 247, "19006": 247, "19008": 247, "19010": 247, "19012": 247, "19014": 247, "19016": 247, "19018": 247, "19020": 247, "19022": 247, "19024": 247, "19026": 247, "19028": 247, "19030": 247, "19032": 247, "19034": 247, "19036": 247, "19038": 247, "19040": 247, "19042": 247, "19044": 247, "19046": 247, "19048": 247, "19050": 247, "19052": 247, "19054": 247, "19056": 247, "19058": 247, "19060": 247, "19062": 247, "19064": 247, "19066": 247, "19068": 247, "19070": 247, "19072": 247, "19074": 247, "19076": 247, "19078": 247, "19080": 247, "19082": 247, "19084": 247, "19086": 247, "19088": 247, "19090": 247, "19092": 247, "19094": 247, "19096": 247, "19098": 247, "19100": 247, "19102": 247, "19104": 247, "19106": 247, "19108": 247, "19110": 247, "19112": 247, "19114": 247, "19116": 247, "19118": 247, "19120": 247, "19122": 247, "19124": 247, "19126": 247, "19128": 247, "19130": 247, "19132": 247, "19134": 247, "19136": 247, "19138": 247, "19140": 247, "19142": 247, "19144": 247, "19146": 247, "19148": 247, "19150": 247, "19152": 247, "19154": 247, "19156": 247, "19158": 247, "19160": 247, "19162": 247, "19164": 247, "19166": 247, "19168": 247, "19170": 247, "19172": 247, "19174": 247, "19176": 247, "19178": 247, "19180": 247, "19182": 247, "19184": 247, "19186": 247, "19188": 247, "19190": 247, "19192": 247, "19194": 247, "19196": 247, "19198": 247, "19200": 247, "19202": 247, "19204": 247, "19206": 247, "19208": 247, "19210": 247, "19212": 247, "19214": 247, "19216": 247, "19218": 247, "19220": 247, "19222": 247, "19224": 247, "19226": 247, "19228": 247, "19230": 247, "19232": 247, "19234": 247, "19236": 247, "19238": 247, "19240": 247, "19242": 247, "19244": 247, "19246": 247, "19248": 247, "19250": 247, "19252": 247, "19254": 247, "19256": 247, "19258": 247, "19260": 247, "19262": 247, "19264": 247, "19266": 247, "19268": 247, "19270": 247, "19272": 247, "19274": 247, "19276": 247, "19278": 247, "19280": 247, "19282": 247, "19284": 247, "19286": 247, "19288": 247, "19290": 247, "19292": 247, "19294": 247, "19296": 247, "19298": 247, "19300": 247, "19302": 247, "19304": 247, "19306": 247, "19308": 247, "19310": 247, "19312": 247, "19314": 247, "19316": 247, "19318": 247, "19320": 247, "19322": 247, "19324": 247, "19326": 247, "19328": 247, "19330": 247, "19332": 247, "19334": 247, "19336": 247, "19338": 247, "19340": 247, "19342": 247, "19344": 247, "19346": 247, "19348": 247, "19350": 247, "19352": 247, "19354": 247, "19356": 247, "19358": 247, "19360": 247, "19362": 247, "19364": 247, "19366": 247, "19368": 247, "19370": 247, "19372": 247, "19374": 247, "19376": 247, "19378": 247, "19380": 247, "19382": 247, "19384": 247, "19386": 247, "19388": 247, "19390": 247, "19392": 247, "19394": 247, "19396": 247, "19398": 247, "19400": 247, "19402": 247, "19404": 247, "19406": 247, "19408": 247, "19410": 247, "19412": 247, "19414": 247, "19416": 247, "19418": 247, "19420": 247, "19422": 247, "19424": 247, "19426": 247, "19428": 247, "19430": 247, "19432": 247, "19434": 247, "19436": 247, "19438": 247, "19440": 247, "19442": 247, "19444": 247, "19446": 247, "19448": 247, "19450": 247, "19452": 247, "19454": 247, "19456": 247, "19458": 247, "19460": 247, "19462": 247, "19464": 247, "19466": 247, "19468": 247, "19470": 247, "19472": 247, "19474": 247, "19476": 247, "19478": 247, "19480": 247, "19482": 247, "19484": 247, "19486": 247, "19488": 247, "19490": 247, "19492": 247, "19494": 247, "19496": 247, "19498": 247, "19500": 247, "19502": 247, "19504": 247, "19506": 247, "19508": 247, "19510": 247, "19512": 247, "19514": 247, "19516": 247, "19518": 247, "19520": 247, "19522": 247, "19524": 247, "19526": 247, "19528": 247, "19530": 247, "19532": 247, "19534": 247, "19536": 247, "19538": 247, "19540": 247, "19542": 247, "19544": 247, "19546": 247, "19548": 247, "19550": 247, "19552": 247, "19554": 247, "19556": 247, "19558": 247, "19560": 247, "19562": 247, "19564": 247, "19566": 247, "19568": 247, "19570": 247, "19572": 247, "19574": 247, "19576": 247, "19578": 247, "19580": 247, "19582": 247, "19584": 247, "19586": 247, "19588": 247, "19590": 247, "19592": 247, "19594": 247, "19596": 247, "19598": 247, "19600": 247, "19602": 247, "19604": 247, "19606": 247, "19608": 247, "19610": 247, "19612": 247, "19614": 247, "19616": 247, "19618": 247, "19620": 247, "19622": 247, "19624": 247, "19626": 247, "19628": 247, "19630": 247, "19632": 247, "19634": 247, "19636": 247, "19638": 247, "19640": 247, "19642": 247, "19644": 247, "19646": 247, "19648": 247, "19650": 247, "19652": 247, "19654": 247, "19656": 247, "19658": 247, "19660": 247, "19662": 247, "19664": 247, "19666": 247, "19668": 247, "19670": 247, "19672": 247, "19674": 247, "19676": 247, "19678": 247, "19680": 247, "19682": 247, "19684": 247, "19686": 247, "19688": 247, "19690": 247, "19692": 247, "19694": 247, "19696": 247, "19698": 247, "19700": 247, "19702": 247, "19704": 247, "19706": 247, "19708": 247, "19710": 247, "19712": 247, "19714": 247, "19716": 247, "19718": 247, "19720": 247, "19722": 247, "19724": 247, "19726": 247, "19728": 247, "19730": 247, "19732": 247, "19734": 247, "19736": 247, "19738": 247, "19740": 247, "19742": 247, "19744": 247, "19746": 247, "19748": 247, "19750": 247, "19752": 247, "19754": 247, "19756": 247, "19758": 247, "19760": 247, "19762": 247, "19764": 247, "19766": 247, "19768": 247, "19770": 247, "19772": 247, "19774": 247, "19776": 247, "19778": 247, "19780": 247, "19782": 247, "19784": 247, "19786": 247, "19788": 247, "19790": 247, "19792": 247, "19794": 247, "19796": 247, "19798": 247, "19800": 247, "19802": 247, "19804": 247, "19806": 247, "19808": 247, "19810": 247, "19812": 247, "19814": 247, "19816": 247, "19818": 247, "19820": 247, "19822": 247, "19824": 247, "19826": 247, "19828": 247, "19830": 247, "19832": 247, "19834": 247, "19836": 247, "19838": 247, "19840": 247, "19842": 247, "19844": 247, "19846": 247, "19848": 247, "19850": 247, "19852": 247, "19854": 247, "19856": 247, "19858": 247, "19860": 247, "19862": 247, "19864": 247, "19866": 247, "19868": 247, "19870": 247, "19872": 247, "19874": 247, "19876": 247, "19878": 247, "19880": 247, "19882": 247, "19884": 247, "19886": 247, "19888": 247, "19890": 247, "19892": 247, "19894": 247, "19896": 247, "19898": 247, "19900": 247, "19902": 247, "19904": 247, "19906": 247, "19908": 247, "19910": 247, "19912": 247, "19914": 247, "19916": 247, "19918": 247, "19920": 247, "19922": 247, "19924": 247, "19926": 247, "19928": 247, "19930": 247, "19932": 247, "19934": 247, "19936": 247, "19938": 247, "19940": 247, "19942": 247, "19944": 247, "19946": 247, "19948": 247, "19950": 247, "19952": 247, "19954": 247, "19956": 247, "19958": 247, "19960": 247, "19962": 247, "19964": 247, "19966": 247, "19968": 247, "19970": 247, "19972": 247, "19974": 247, "19976": 247, "19978": 247, "19980": 247, "19982": 247, "19984": 247, "19986": 247, "19988": 247, "19990": 247, "19992": 247, "19994": 247, "19996": 247, "19998": 247, "l_to_send": 247, "json_to_send": 247, "json_receiv": 247, "l_receiv": 247, "sine": [247, 288, 305], "140106668681968": 247, "wallclock_axi": 247, "1638538131": 247, "1975703": 247, "2978473": 247, "3981225": 247, "498449": 247, "5987027": 247, "698947": 247, "7996597": 247, "899947": 247, "1638538132": 247, "0001943": 247, "1010473": 247, "0b10110": 247, "0x16": [247, 827], "0b1011": [247, 282], "bit_3": 247, "0b00001": 247, "0b1": [247, 264, 334], "0b1000": [247, 264], "0b11110": 247, "bitwis": [247, 421, 454, 963, 967, 1054], "num1": [247, 264], "0b110101101": 247, "num2": [247, 264], "0b101110100": 247, "0b100100100": 247, "0b111111101": 247, "0b1010": 247, "0b10100": [247, 264], "1fuzzi2fuzzi3fuzzi4": 247, "0b11011001": 247, "abcdef": [247, 254, 260, 264], "cde": 247, "lexic": [247, 481, 788], "indexerror": [247, 264, 267, 285, 324, 346, 350, 369, 1034, 1087, 1157], "auer": 247, "aue": 247, "zerodivisionerror": [247, 260, 285, 1034], "lst1": 247, "lst2": 247, "toc": 248, "treeset": 248, "searchabl": [248, 251], "diesel": 248, "vibrat": 248, "lighter": 248, "sensorrandom": 248, "sensorsin": 248, "sensorconst": 248, "wild": [248, 250, 255, 290], "yesterai": 248, "deseri": [248, 260], "decod": [248, 260, 267, 270, 306, 312, 323, 326, 328, 334, 340, 1085, 1132], "swallow": [248, 868, 1034], "walkthrough": [248, 250, 255, 1204], "1h": 248, "exchangeformat": 248, "test_mqtt_format": 248, "parser": [248, 260, 314, 330, 380, 708, 1087, 1191], "mosquitto_sub": [248, 1152], "writer": [248, 796, 881], "deserializeerror": 248, "dangl": [248, 424, 595, 609], "fahrenheit": [250, 392, 394, 407, 422, 431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 495, 696, 734, 787, 789, 790], "nonconst": [250, 607], "getchar": [250, 398, 400, 405, 414], "dry": 250, "verif": [250, 1141], "umlaut": [250, 251, 354, 1066, 1149], "\u00f6": [250, 270, 1149], "canari": 250, "asid": [250, 432, 433, 445, 707, 996], "brainfuck": 250, "nok": [250, 744, 990], "singli": [250, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "typedef": [250, 448, 451, 455, 464, 468, 473, 474, 694, 696, 734, 742, 758, 787, 789, 790, 857, 1005], "commonplac": [250, 1194], "boundari": [250, 260, 306, 454, 768, 935], "neighborhood": 250, "signed": [250, 408, 457], "unsigned": 250, "excurs": [250, 498, 1135], "pointerarith": 250, "lower_bound": [250, 297, 336, 634, 639, 658, 662, 691, 790], "for_each": [250, 297, 639, 658, 662, 691, 742, 790], "search_by_lastnam": [250, 687, 688, 689], "const_iter": [250, 589, 633, 636, 637, 638, 640, 655, 694, 709, 742, 743], "calloper": [250, 572], "exc": [250, 572], "ostream": [250, 572, 598, 758, 788, 1176], "paint": [250, 677, 691, 790], "reverse_copi": [250, 297, 572, 639, 658, 662, 691, 790], "cin": [250, 641, 659, 661, 677, 691, 790], "accumul": [250, 572], "raci": [250, 572], "wsl2": [250, 277, 279, 297, 299, 376], "libsqlite3": [250, 482], "libboost": 250, "libgtk": 250, "prosaic": 250, "roman": 250, "mad": [250, 456], "wxwidget": 250, "whole": [251, 263, 264, 266, 269, 272, 281, 284, 323, 354, 478, 707, 716, 758, 812, 815, 837, 882, 964, 1033, 1105, 1192], "lieb": [251, 312, 328], "gr\u00fc\u00dfe": [251, 312, 328], "utf8": 251, "distil": [251, 311, 341, 349, 355, 1032, 1105], "4j": 252, "unlimitxdeadbeef": [252, 254, 260, 306, 312, 364, 553], "3735928559": [252, 254, 260, 264, 306, 312, 364], "0b10010011": 252, "ippi": 252, "0b0101": 252, "0101": 252, "teifl": [252, 340], "fun1": 252, "fun2": 252, "nsecond": [252, 1079], "rline": 252, "carriag": [252, 411, 1079], "linet": 252, "neuer": 252, "ordner": 252, "euer": 252, "syntaxwarn": [252, 285, 1034], "ipykernel_258993": 252, "837361033": 252, "regex_str": [252, 270], "calim": 252, "yaaai": 252, "needl": [252, 350, 1073, 1081], "haystack": [252, 350, 1073, 1081], "finit": [252, 301, 426, 926], "haystack_s": 252, "0x7fe78c576ee0": 252, "list_iter": [252, 270, 324, 334, 340, 350], "0x7fe78c577910": 252, "unicode_code_point": 252, "l_new": 252, "ijk": 252, "mengenlehr": 252, "s1": [252, 260, 264, 267, 270, 285, 292, 302, 312, 324, 334, 340, 350, 498, 515, 545, 604, 698, 704, 752, 774, 776, 778, 780, 1084], "s2": [252, 260, 264, 267, 270, 285, 292, 302, 312, 324, 334, 340, 350, 498, 515, 545, 604, 698, 704, 752, 774, 776, 778, 1084], "gunnar": 252, "liam": 252, "maximumum": 252, "variable2": 252, "maximum2": 252, "mrmr": 252, "einser": 252, "square_numb": [252, 1082], "squares_gener": 252, "other_d": [252, 285], "nove": 252, "isspac": [252, 254, 257, 260, 285, 306, 334, 340, 1081], "buchhaltung": [252, 897, 919, 920], "startswith": [252, 260, 289, 290, 292, 306, 346, 478, 1081, 1155], "buch": [252, 1186], "oooo": 252, "isupp": [252, 260, 270, 306, 340, 346, 350, 1081], "zz": 252, "traurig": 252, "substr": [252, 254, 260, 270, 285, 292, 306, 324, 328, 334, 340, 346, 350, 1176], "gid": [252, 260, 328, 346, 788, 864, 865, 872, 874, 882, 954, 969, 1114], "count_byt": 252, "nbyte": 252, "miscellanea": [253, 957], "brace": [253, 260, 306, 398, 421, 424, 436, 496, 589, 598, 630, 632, 637, 650, 651, 694, 734, 743, 787, 789, 790, 1063, 1066], "hour_of_dai": 253, "ein_str": 254, "ein_anderer_str": 254, "fghjgfgh": 254, "dfghgfgh": 254, "do_someth": [254, 273, 364, 427, 429, 437, 452, 466, 751, 1063], "komplett": [254, 340], "returnwert": [254, 1186], "sinnloser": 254, "weis": [254, 1207], "vorgenommen": 254, "obacht": 254, "140672599989840": 254, "140672464974720": 254, "hoechst": [254, 292], "rechnern": 254, "100000": [254, 270, 707, 942, 1141], "": [254, 270], "exponenti": [254, 1066, 1080], "__annotations__": [254, 264, 285, 306, 320, 1035], "__closure__": [254, 264, 285, 306], "__code__": [254, 264, 285, 306], "__delattr__": [254, 257, 260, 264, 282, 285, 306, 324, 346], "__dir__": [254, 257, 264, 282, 285, 306, 324, 346], "__format__": [254, 257, 260, 264, 282, 285, 306, 324, 346], "__ge__": [254, 257, 260, 264, 282, 285, 306, 324, 346, 1054], "__get__": [254, 264, 285, 306], "__getattribute__": [254, 257, 260, 264, 282, 285, 306, 324, 346], "__globals__": [254, 264, 285, 306], "__gt__": [254, 257, 260, 264, 282, 285, 306, 324, 346], "__hash__": [254, 257, 260, 264, 282, 285, 306, 324, 334, 346], "__init_subclass__": [254, 257, 264, 282, 285, 306, 324, 346], "__kwdefaults__": [254, 264, 285, 306], "__ne__": [254, 257, 260, 264, 282, 285, 306, 324, 346, 1054], "__new__": [254, 257, 260, 264, 282, 285, 306, 324, 346], "__qualname__": [254, 264, 285, 306], "__reduce__": [254, 257, 260, 264, 282, 285, 306, 324, 346], "__reduce_ex__": [254, 257, 264, 282, 285, 306, 324, 346], "__setattr__": [254, 257, 260, 264, 282, 285, 306, 324, 346], "__sizeof__": [254, 257, 260, 264, 282, 285, 306, 324, 346], "__subclasshook__": [254, 257, 264, 282, 285, 306, 324, 346], "karteikart": 254, "my_formatted_person": 254, "123425041997": 254, "caros_str": 254, "joergs_str": 254, "0x7ff0dc48b490": 254, "next_po": 254, "tim": [254, 264, 360, 361], "ugli": [254, 264, 278, 287, 288, 301, 308, 309, 352, 353, 393, 398, 572, 790, 862, 867, 892, 893, 933, 1032, 1033], "flat": [254, 264, 445, 471, 472, 1004, 1005], "puriti": [254, 264], "silenc": [254, 264, 437, 880], "ambigu": [254, 264, 424, 459, 460, 461, 608, 708, 897], "refus": [254, 264, 273, 488, 810, 863, 934, 950, 1009], "temptat": [254, 264], "dutch": [254, 264], "honk": [254, 264], "wahr": 254, "falsch": [254, 267, 1193], "kriegt": 254, "nachkommastellen": 254, "moeglichkeit": 254, "f_str": 254, "punkt_po": 254, "nachkomma_str": 254, "praezedenz": 254, "wandel": 254, "vorn": 254, "anhaengen": 254, "wuenschen": 254, "wuerd": 254, "appendleft": 254, "extendleft": 254, "relem": 254, "popleft": 254, "sorted_l": 254, "sorted_t": 254, "sorted_": 254, "subtext": 254, "ssissippi": 254, "140672464726576": 254, "copied_text": 254, "140672464784832": 254, "140672464784064": 254, "140672599989872": 254, "140672464751872": 254, "140672464768512": 254, "140672464594880": 254, "jkl": 254, "suesser": [254, 260, 267, 270, 273, 289], "sechser_gewuerfelt": 254, "n_tri": [254, 257, 292, 334, 340, 346, 350, 1070], "versag": [254, 292], "eva": [254, 306, 350, 1073], "xrang": [254, 1074], "0x7ff0dc48bed0": 254, "hann": 254, "gruess": 254, "gott": [254, 285, 387], "fill_in_us": 254, "scho": 254, "my_db": 254, "uniq_dict": 254, "konfigurierbaren": 254, "startwert": 254, "ausgibt": 254, "sqnum": 254, "0x7ff014b01820": 254, "xslx": 254, "yz": 254, "lret": 254, "ochwa": 254, "unbalanc": 255, "geospati": 255, "gdal": 255, "sweigart": [255, 269, 311, 1136], "datenypen": 256, "libarari": 256, "chainmap": 256, "dequ": [256, 766], "suchalgorithmen": 256, "51139385": 257, "77397a312b47": 257, "50924272": [257, 260], "20210728": [257, 260, 1061], "eine_komplizierte_funkt": 257, "endeffekt": 257, "zusammenzuzaehlen": 257, "tarnt": 257, "vergeblich": 257, "komplexitaet": 257, "zahl_als_str": 257, "bledsinn": 257, "try_no": 257, "blahblahblah": 257, "cxyxyyyyxi": 257, "table_str": 257, "table_dict": 257, "139769175732912": 257, "139769175738624": 257, "satan_str": 257, "satan_int": 257, "result_of_print": 257, "result_of_evald_print": 257, "code_str": [257, 267], "compiled_cod": 257, "woswasi": [257, 264], "0x7f1e91eb42f0": 257, "philipp": [257, 264, 267, 285, 292, 306, 324, 334, 496, 571, 643, 655, 687, 689, 1125, 1127, 1131, 1133, 1153, 1154, 1155, 1157, 1158, 1159, 1160], "lastnma": 257, "0x7f1e8c0fe2e0": 257, "__abs__": [257, 264, 282, 346], "__and__": [257, 264, 324, 346, 1054], "__bool__": [257, 264, 282, 346], "__ceil__": [257, 264, 282, 346], "__divmod__": [257, 264, 282, 346], "__float__": [257, 264, 282, 306, 346], "__floor__": [257, 264, 282, 346], "__floordiv__": [257, 264, 282, 346, 1054], "__getnewargs__": [257, 260, 264, 282, 306, 346], "__index__": [257, 264, 346], "__int__": [257, 264, 282, 306, 323, 346], "__invert__": [257, 264, 346], "__lshift__": [257, 264, 346, 1054], "__mod__": [257, 260, 264, 282, 306, 346, 1054], "__mul__": [257, 260, 264, 282, 306, 346, 1054], "__neg__": [257, 264, 282, 346], "__or__": [257, 264, 324, 346, 1054], "__pos__": [257, 264, 282, 346], "__pow__": [257, 264, 282, 346, 1054], "__rand__": [257, 264, 324, 346], "__rdivmod__": [257, 264, 282, 346], "__rfloordiv__": [257, 264, 282, 346], "__rlshift__": [257, 264, 346], "__rmod__": [257, 260, 264, 282, 306, 346], "__rmul__": [257, 260, 264, 282, 306, 346], "__ror__": [257, 264, 324, 346], "__round__": [257, 264, 282, 346], "__rpow__": [257, 264, 282, 346], "__rrshift__": [257, 264, 346, 1054], "__rshift__": [257, 264, 346, 1054], "__rsub__": [257, 264, 282, 324, 328, 346, 1054], "__rtruediv__": [257, 264, 282, 346], "__rxor__": [257, 264, 324, 346], "__sub__": [257, 264, 282, 324, 328, 346, 1054], "__truediv__": [257, 264, 282, 346, 1054], "__trunc__": [257, 264, 282, 346], "__xor__": [257, 264, 324, 346, 1054], "as_integer_ratio": [257, 264, 282, 346], "bit_length": [257, 264, 346], "conjug": [257, 264, 282, 346], "denomin": [257, 264, 346], "from_byt": [257, 264, 346], "to_byt": [257, 264, 346], "0x7f1e8c0b3130": 257, "int_list": 257, "0x7f1e8c0fe340": 257, "0x7f1e8c0fe760": 257, "u1": 257, "u2": 257, "type_of_us": 257, "scrambl": 257, "hansj\u00f6rg": [257, 478], "gr\u00f6jsnah": 257, "class_str": 257, "1997": [257, 267, 1060, 1125, 1127, 1131, 1133], "0x7f1e8c1c2e50": 257, "joleckmi": 257, "cmdline": 258, "excess": [258, 427], "provocantli": 258, "pybai": [258, 327, 1136], "suchzeit": 259, "everywher": [259, 274, 457, 472, 488, 698, 849, 987, 1073], "d_as_str": 260, "received_d": 260, "1939": 260, "145415": 260, "bytes_or_buff": [260, 306], "expos": [260, 306, 586, 672, 868, 934, 942, 943, 977], "strict": [260, 280, 306, 324, 493, 507, 514, 528, 542, 594, 790, 1084, 1165], "__contains__": [260, 306, 324], "format_spec": [260, 285, 306], "getattr": [260, 264, 285, 306, 1048], "__getitem__": [260, 306, 1157, 1158], "__iter__": [260, 306, 324, 1039], "__len__": [260, 306, 324], "casefold": [260, 306], "caseless": [260, 306], "fillchar": [260, 306], "pad": [260, 306, 1080], "occurr": [260, 306, 401], "codec": [260, 267, 270, 306, 312, 328, 334, 340, 1149], "unicodeencodeerror": [260, 267, 270, 285, 306, 312, 328, 1034, 1149], "xmlcharrefreplac": [260, 306], "register_error": [260, 306], "suffix": [260, 306], "expandtab": [260, 285, 306, 334], "tabsiz": [260, 306], "lowest": [260, 306, 421, 427, 997, 998, 1085], "format_map": [260, 306], "isalnum": [260, 306, 346, 1081], "alphabet": [260, 306, 401, 456, 478, 881, 1149], "isascii": [260, 306], "007f": [260, 306], "isdecim": [260, 306], "iskeyword": [260, 270, 306], "isnumer": [260, 306], "isprint": [260, 306, 401, 429], "printabl": [260, 306, 401, 1034], "istitl": [260, 306], "uncas": [260, 306], "pq": [260, 306], "ljust": [260, 306], "removeprefix": [260, 306], "removesuffix": [260, 306], "rindex": [260, 306, 1081], "rpartit": [260, 306], "discard": [260, 306, 324, 460, 606, 607, 744, 879, 880], "splitlin": [260, 306], "keepend": [260, 306], "swapcas": [260, 306], "titlecas": [260, 306], "lookuperror": [260, 285, 306, 1034], "untouch": [260, 306, 837], "zfill": [260, 306], "maketran": [260, 306], "numerischen": 260, "ecma": 260, "3rd": [260, 796], "interchang": [260, 676, 758, 1149], "marshal": 260, "pickl": [260, 264], "simplejson": 260, "foo": [260, 292, 302, 306, 324, 328, 334, 340, 346, 350, 566, 707, 740, 758, 770, 1034, 1075], "baz": 260, "u1234": 260, "sort_kei": 260, "getvalu": 260, "compact": [260, 427], "mydict": 260, "obj": [260, 285, 328, 340, 534, 805, 806, 815, 1048, 1056, 1157, 1158], "x08ar": 260, "as_complex": 260, "dct": 260, "__complex__": 260, "object_hook": 260, "2j": 260, "parse_float": 260, "encode_complex": 260, "serializ": 260, "1j": 260, "jsonencod": 260, "iterencod": 260, "scanner": 260, "jsondecodeerror": 260, "jsondecod": 260, "msg": [260, 273, 334, 346, 412, 497, 501, 1001, 1003, 1004, 1008, 1030, 1033, 1034], "unformat": 260, "lineno": [260, 267, 334], "colno": 260, "delattr": [260, 264, 285], "setattr": [260, 264, 285, 1048], "__setstate__": [260, 264], "with_traceback": [260, 264], "tb": [260, 264, 340], "__traceback__": [260, 264], "__cause__": [260, 264], "__context__": [260, 264], "__suppress_context__": [260, 264], "parse_int": 260, "parse_const": 260, "object_pairs_hook": 260, "nan": [260, 292, 1141, 1153], "num_str": 260, "_w": 260, "0x7f99fff1bb70": 260, "raw_decod": 260, "extran": 260, "skipkei": 260, "ensure_ascii": 260, "check_circular": 260, "allow_nan": 260, "recogn": [260, 622, 943, 1192], "sensibl": 260, "circular": 260, "recursionerror": [260, 285, 1034], "compliant": [260, 1047], "item_separ": 260, "key_separ": 260, "_one_shot": 260, "chunk": [260, 369, 457, 831, 969, 1138, 1149], "bigobject": 260, "mysocket": 260, "fp": 260, "inf": 260, "complianc": 260, "ippolito": 260, "redivi": 260, "140299267714496": 260, "140299267930496": 260, "schweissparameter_aussi": 260, "strom_ma": 260, "200004": 260, "spannung_v": 260, "aufs_kabel": 260, "maschine_112": 260, "kabel": [260, 264], "vom_kabel": 260, "schweissparameter_eini": 260, "strom_a": 260, "hal": 260, "2c445fb3": 260, "6ca4": 260, "b9d9": 260, "7cfbbff55326": 260, "doesnt_exist": 260, "_a666": 260, "140299402960464": 260, "0b10000000000000000000000000000000000000000000000000000000000000000": [260, 264, 285, 302, 340, 346, 350], "140299327492352": 260, "func_fals": 260, "func_tru": 260, "sex_opt": 260, "140298898107648": 260, "t_mit_einem_el": 260, "supi": 260, "squares_map": 260, "squares_set": 260, "numtri": 260, "even_numb": [260, 324], "mississppi": 260, "xxxx": 260, "nbin": [260, 267, 292, 306, 328], "ndaemon": [260, 267, 292, 306, 328], "nadm": [260, 267, 292, 306, 328, 340, 346], "nlp": [260, 267, 292, 306, 328, 340, 346], "nsync": [260, 267, 292, 306, 328, 340, 346], "nshutdown": [260, 267, 292, 306, 328, 340, 346], "nhalt": [260, 267, 292, 306, 328, 340, 346], "nmail": [260, 267, 292, 306, 328, 340, 346], "noper": [260, 267, 292, 306, 328, 340, 346], "ngame": [260, 267, 292, 306, 328, 340, 346], "nftp": [260, 267, 292, 306, 328, 340, 346], "nnobodi": [260, 267, 292, 306, 328, 340, 346], "napach": [260, 267, 292, 306, 328, 340, 346], "nsystemd": [260, 267, 292, 306, 328, 340, 346], "ntss": [260, 267, 292, 306, 328, 340, 346], "ndbu": [260, 267, 292, 306, 328, 340, 346], "npolkitd": [260, 267, 292, 306, 328, 340, 346], "navahi": [260, 267, 292, 306, 328, 340, 346], "nunbound": [260, 267, 292, 306, 328, 340, 346], "ndnsmasq": [260, 267, 292, 306, 328, 340, 346], "nnm": [260, 267, 292, 306, 328, 340, 346], "nusbmuxd": [260, 267, 292, 306, 328, 340, 346], "ngluster": [260, 267, 292, 306, 328, 340, 346], "nrtkit": [260, 267, 292, 306, 328, 340, 346], "npipewir": [260, 267, 292, 306, 328, 340, 346], "ngeoclu": [260, 267, 292, 306, 328, 340, 346], "nchroni": [260, 267, 292, 306, 328, 340, 346], "nsaslauth": [260, 267, 292, 306, 328, 340, 346], "nradvd": [260, 267], "nrpc": [260, 267, 292, 306, 328, 340, 346], "nqemu": [260, 267, 292, 306, 328, 340, 346], "nopenvpn": [260, 267, 292, 306, 328, 340, 346], "ncolord": [260, 267, 292, 306, 328, 340, 346, 959], "nrpcuser": [260, 267, 292, 306, 328, 340, 346], "nabrt": [260, 267, 292, 306, 328, 340, 346], "nflatpak": [260, 267, 292, 306, 328, 340, 346], "ngdm": [260, 267, 292, 306, 328, 340, 346], "ngnome": [260, 267, 292, 306, 328, 340, 346], "nvboxadd": [260, 267, 292, 306, 328, 340, 346], "nsshd": [260, 267, 292, 306, 328, 340, 346], "ntcpdump": [260, 267, 292, 306, 328, 340, 346], "njfasch": [260, 267, 292, 306, 328, 340, 346], "nmosquitto": [260, 267, 292, 306, 328, 340], "nsomeon": [260, 267], "1001": [260, 267, 270, 651, 652, 653, 654, 882, 894, 925, 954], "move_to_end": 260, "thermometera": 260, "thermometerb": 260, "get_average_temperatur": 260, "th_list": 260, "ipykernel_9164": 260, "859664274": 260, "2942790015": 260, "0x7fac83797be0": 260, "basisklass": 260, "level2_1": 260, "l21": 260, "level2_2": 260, "level3": 260, "jedi": 260, "blueey": 260, "droid": 260, "r2d2": 260, "derivednoctor": 260, "dnoctor": 260, "derivedctorcallingsup": 260, "derivedctorcallingbasector": 260, "__firstnam": 260, "__lastnam": 260, "_user__firstnam": 260, "_user__lastnam": 260, "lightsab": 260, "padawan": 260, "arithmeticerror": [260, 285, 1034], "waaah": 260, "abgebrannt": 260, "puh": 260, "intakt": 260, "is_even": [260, 264, 334, 340, 711, 712, 713, 714], "0x7fac81f52df0": 260, "0x7fac81cb5700": 260, "progamm": 260, "tumpfback": 260, "och": 260, "umpfback": 260, "rt": [260, 790, 814, 818, 828, 839, 841, 846, 849, 852, 855, 858, 933], "wholefil": 260, "notepad": 261, "betreiben": [261, 1193, 1200, 1201], "unterschiedlichen": 261, "sinnvol": 261, "umgebungen": 261, "unausweichlich": 261, "installationsverzeichni": 261, "verzeichniss": [261, 1195], "ausf\u00fchren": 261, "hernimmt": 261, "wei\u00df": 261, "rennt": 261, "ordereddict": 262, "__mro__": 262, "udemi": 262, "successor": [263, 421], "repeatedli": [263, 651, 1148], "kantenlaeng": 264, "ipykernel_101004": 264, "2437887948": 264, "0x10": [264, 267, 350, 485], "0b1111111111111111111111111111111111111111111111111111111111111111": [264, 285, 302, 306, 334, 340, 346, 350], "1267650600228229401496703205381": 264, "735611673": 264, "ndigit": [264, 285, 334, 350, 400], "0b101": 264, "0b100": [264, 267], "register_statu": 264, "0b1001000": 264, "0b00001000": 264, "strom": [264, 334], "liegt_strom_an": 264, "0b00111110": 264, "ever": [264, 324, 476, 485, 516, 876, 942, 1065, 1189], "deadbeef": [264, 553, 936], "gross": 264, "doktor": 264, "jawui": 264, "akademik": 264, "ndef": [264, 334], "tdef": [264, 285], "geh": 264, "hochkomplex": [264, 340], "verendet": 264, "euler": 264, "sche": 264, "dokumentiern": 264, "koennt": 264, "varianc": 264, "fmean": 264, "geometric_mean": 264, "harmonic_mean": 264, "harmon": 264, "median": 264, "median_low": 264, "median_high": 264, "median_group": 264, "50th": 264, "percentil": 264, "multimod": 264, "quantil": 264, "centr": 264, "nearest": [264, 519, 1143], "doctest": 264, "ellipsi": [264, 285], "8333333333": 264, "8333": 264, "spread": 264, "pvarianc": 264, "pstdev": 264, "stdev": [264, 997, 999], "38961843444": 264, "recalcul": 264, "statisticserror": 264, "normaldist": 264, "x1": 264, "unchang": [264, 695, 1028], "jointli": 264, "rescal": 264, "cdf": 264, "cumul": [264, 470], "inv_cdf": 264, "coeffici": 264, "ovl": 264, "agreement": 264, "densiti": 264, "8035050657330205": 264, "dx": 264, "quartil": 264, "decil": 264, "zscore": 264, "score": 264, "from_sampl": 264, "readonli": 264, "dataset": [264, 1139, 1141, 1154, 1156, 1158, 1160], "subcontrari": 264, "reciproc": 264, "quantiti": [264, 296, 1143], "earn": 264, "5625": 264, "midpoint": 264, "estim": 264, "nomin": 264, "taught": [264, 1058, 1194], "aabbbbbbbbcc": 264, "aabbbbccddddeeffffgg": 264, "986893273527251": 264, "0th": 264, "100th": 264, "xbar": 264, "0810874155219827": 264, "3720238095238095": 264, "01875": 264, "gesamter_gruss": 264, "excelsheet": 264, "hinters": 264, "gabali": 264, "helen": 264, "fischer": 264, "sssklndkfgv": 264, "fosvh": 264, "worl": [264, 267, 1072], "lowr": 264, "dlrow": [264, 1072], "olleh": [264, 1072], "even_numbers_fun": 264, "even_numbers_gen": 264, "evennum": 264, "even_filt": 264, "tausend": 264, "1234250497": [264, 267, 270, 273, 496, 503, 655], "1234250597": 264, "users_json_str": 264, "liest": 264, "kontrah": 264, "verwandelt": 264, "gelesenes_ding_wieder_als_dict": 264, "schatz": 264, "erich": 264, "koxi": 264, "hatkeinenwert": 264, "fn": [264, 461, 478, 788, 1160], "ul": [264, 415], "ln": [264, 461], "1st": [265, 1178], "einschub": 265, "filterketten": 265, "datensatz": 265, "letzten": 265, "recapitul": 266, "naeherungsverfahren": 267, "addieren": 267, "140606563548752": 267, "wirklich": [267, 1184], "0o10": 267, "teilbar": 267, "00001": 267, "abd": [267, 621], "i1": [267, 302], "140606428182128": 267, "140606428182896": 267, "2345010101": 267, "elizabeth": [267, 1125, 1127, 1131, 1133, 1144], "1901": 267, "evi": 267, "maxim": [267, 476, 943], "wuerfeln": [267, 351], "freuen": 267, "sechser": 267, "faellt": 267, "jammern": 267, "versuch_numm": 267, "versuchen": 267, "jammert": 267, "hlo": [267, 1072], "output_list": [267, 1118], "nullt": 267, "34567654567": 267, "gsd": 267, "another_t": 267, "symmetisch": 267, "netzwerkkommunik": 267, "request_to_send": 267, "request_str_to_send": 267, "1651046407": 267, "3633313": 267, "cabl": [267, 868], "request_str_from_c": 267, "request_from_c": 267, "1651046335": 267, "8477345": 267, "139909434561408": 267, "139909544402512": 267, "139909544402544": 267, "139909543772528": 267, "139909433666288": 267, "roo": [267, 306, 928], "xf6": [267, 270, 312, 1066, 1149], "joerg_latin": 267, "xf6rg": [267, 270, 312, 324, 328, 1149], "j\u0456rg": [267, 270, 312, 328, 1149], "cyclic": 269, "140616191009600": 270, "140616191012720": 270, "140116274372176": 270, "0x7f6f5cc2de50": 270, "0x7f6f5cc2df30": 270, "18446744073709551617": 270, "multi_dict": 270, "ipykernel_189565": 270, "1743780635": 270, "140115753096128": 270, "ntri": 270, "bytes_joerg": 270, "bytes_joerg_iso_latin_1": 270, "bytes_joerg_utf_32": 270, "xff": [270, 312, 328], "xfe": [270, 312, 328], "x00": [270, 312, 328, 941], "x00j": [270, 312], "x00r": [270, 312], "x00g": [270, 312], "bytes_joerg_utf_16": 270, "xfej": 270, "bytes_joerg_utf_8": 270, "xc3": [270, 306, 312, 328, 1066, 1149], "xb6rg": [270, 306, 312, 328, 1149], "iso_latin_1": 270, "russian": 270, "bytes_received_by_russian": 270, "2435": 270, "010d": 270, "0000000666": 270, "ssi": 270, "garbag": [270, 471, 478, 494, 753, 765, 943, 970, 1032], "ipykernel_4000": 270, "3227798639": 270, "ahja": 270, "24000": 270, "24500": 270, "25000": 270, "25500": 270, "26000": 270, "26500": 270, "__del__": 270, "whe": 270, "13397": 270, "116985": 270, "120725": 270, "118110": 270, "0x7fe3a392aa30": 270, "test_person_bas": 272, "pluggi": [272, 290, 1124, 1169], "rootdir": [272, 290, 837, 1124, 1169], "test_persondb_bas": 272, "test_pytest_demo": 272, "xfail": [272, 1169], "test_persondb": 272, "test_duplicate_svnr": 272, "test_update_sunnycas": 272, "test_update_notexist": 272, "test_update_exact_dupl": 272, "former": [272, 1075], "persondb": 272, "sqlite": [272, 482, 1092, 1145], "ics_demand": 272, "maco": [272, 369, 374], "woe": 272, "homebrew": 272, "brew": 272, "flaviocop": 272, "str_mit_666": 273, "140240419976192": 273, "140240419593568": 273, "aclass": 273, "almostempti": 273, "beenther": 273, "kuckucksei": 273, "chirp": 273, "some_bullshit": 273, "bad_thing_happen": 273, "do_some_bullshit": 273, "boah": [273, 334], "python_cod": 273, "a_global_vari": 273, "globale_vari": 273, "140240513015376": 273, "140240513014256": 273, "140240419270768": 273, "140240419271792": 273, "storesanintegerandmodifiesit": 273, "the_int": 273, "my_int": 273, "saiami": 273, "storesalistandmodifiesit": 273, "the_list": 273, "append_someth": 273, "salami": 273, "compute_squar": 273, "satanicerror": 273, "jess": 273, "invalidsvnr": 273, "rex_lin": 273, "json_str": [273, 1132], "python_l": 273, "0x7f8c0551f490": 273, "behandlung": 275, "kurzer": 275, "reicht": [275, 1184], "unwichtig": 275, "weggelassen": 275, "\u00fc": [275, 1149], "jeden": 275, "teilnehmer\u00fcbung": 275, "kernsprach": 275, "rvalu": [275, 297, 337, 597, 702, 734, 744, 750, 753, 754, 755, 756, 759, 767, 787, 789, 790, 1188, 1189, 1190], "constexpr": [275, 276, 277, 297, 299, 337, 734, 744, 768, 788, 789, 790, 1189], "uniform": [275, 276, 277, 279, 336, 476, 496, 598, 630, 650, 651, 694, 734, 743, 787, 789, 790, 1047, 1189], "initialisierung": [275, 1205], "infer": 275, "speichermodel": 275, "atomar": [275, 1187, 1205], "standardbibliothek": 275, "regu\u00e4r": 275, "trait": 275, "zufallszahlen": 275, "zeitbibliothek": 275, "sprachsyntax": 275, "deduct": [275, 709, 711], "erweiterungen": 275, "ge\u00e4ndert": 275, "definitionen": 275, "bibliothek": 275, "zusatzvari": 275, "constinit": 275, "modularisierung": [275, 370, 1186], "versionierung": 275, "routinen": 275, "synchronisierung": 275, "werkzeug": [275, 1186, 1193, 1195, 1200, 1203], "kalend": [275, 1183], "zeitzonen": 275, "zus\u00e4tz": 275, "chrono": [275, 276, 277, 279, 288, 336, 501, 694, 755, 766, 767, 771, 789, 790], "initializer_list": [276, 277, 279, 336, 337, 497, 498, 525, 526, 694, 696, 734, 789, 790], "handwrit": [276, 277, 279, 336, 734, 750, 789, 790], "weak_ptr": [276, 277, 279, 336, 337, 750, 787, 789, 790], "boilerpl": [276, 277, 279, 315, 331, 336, 337, 483, 734, 735, 736, 754, 789, 790, 1013, 1185], "condition_vari": [276, 277, 279, 288, 336, 767, 789, 790, 1189], "emplace_back": [276, 277, 630], "cref": [276, 277], "interoper": [277, 279, 297, 299], "wazoo": [277, 279, 297, 299], "anviron": [277, 279], "submodul": [277, 279, 551, 614], "chdir": [277, 279, 340], "gtest_main": [277, 501, 550, 552, 553, 573, 576, 588, 614, 752, 753, 1175, 1180], "dummy_suit": 277, "sticki": [278, 287, 288, 308, 309, 352, 353, 369, 374, 790, 867, 892, 933], "insod": 279, "lvalu": [279, 336, 337, 702, 703, 706, 734, 744, 750, 754, 759, 767, 787, 789, 790], "afterword": [279, 336, 337, 703, 734, 789, 790], "ain": [279, 476, 1062], "singleton": [280, 340, 493, 494, 500, 514, 528, 542, 594, 790, 1192], "inflex": [280, 396, 493, 507, 514, 520, 521, 528, 542, 594, 790], "proxi": [280, 298, 300, 301, 322, 326, 375, 493, 500, 502, 503, 514, 528, 542, 594, 790, 1164, 1192], "serverthread": [280, 518, 532], "my_si": [282, 1042], "function_returns_two_valu": 282, "140134238766608": 282, "sizeof": [282, 400, 410, 421, 442, 449, 450, 454, 457, 577, 589, 601, 629, 695, 757, 937, 955, 959, 960, 961, 967, 968, 969, 970, 995, 1001, 1004, 1008, 1074], "__getformat__": 282, "__setformat__": 282, "fromhex": 282, "0b0010": 282, "0b1001": 282, "key_list": 282, "key_tupl": 282, "evil_list": 282, "evil_list_2": 282, "neinem": 282, "nviel": 282, "doze_path": [282, 285], "compiled_regex": 282, "l_json": 282, "l_json_sent": 282, "received_data": 282, "0x7f73869f06c0": 282, "create_avg_item": 282, "ninetynin": 282, "koppel": 284, "netzwerk": [284, 370, 1193, 1203, 1206], "condens": [284, 339, 477], "nprint": 285, "noption": 285, "nfile": 285, "nsep": 285, "nend": 285, "nflush": 285, "forcibli": 285, "didact": [285, 387, 390, 613, 615, 616, 1192], "fullnam": [285, 292, 1051, 1055], "nerst": 285, "nzweit": [285, 340, 364], "andere_list": 285, "neue_list": 285, "140323934455312": 285, "140323934455344": 285, "140323934455376": 285, "140323852147712": 285, "140323933649904": 285, "140323833601584": 285, "frozenset": [285, 302, 323], "__builtins__": [285, 306, 340, 1035], "gr\u00fc\u00df": 285, "nocheinprogramm": 285, "ocheinprogramm": 285, "dfghgfdfghj": 285, "jhghgh": 285, "matchstr": 285, "compiled_match": 285, "tprint": 285, "num_ss": 285, "isi": [285, 350, 555, 571, 1153], "strippeditem": 285, "yet_another_d": 285, "s3": [285, 292, 515], "s4": 285, "isdisjoint": [285, 292, 324, 1084], "nnoteworthi": 285, "nil": 285, "__package__": [285, 362, 1035], "__loader__": [285, 362, 1035], "__spec__": [285, 362, 1035], "modulespec": 285, "loader": [285, 466, 484, 489, 1011, 1028, 1203], "__build_class__": 285, "__import__": 285, "dont_inherit": 285, "_feature_vers": 285, "divmod": 285, "raw_input": 285, "ipkernel": 285, "ipythonkernel": 285, "0x7f9fb16abcd0": 285, "class_or_tupl": 285, "aiter": 285, "async_iter": 285, "anext": 285, "oct": [285, 919, 941, 943], "pow": [285, 606, 607, 757], "exp": [285, 530], "notimpl": [285, 324, 328, 346, 1054], "memoryview": 285, "__debug__": 285, "stopasynciter": [285, 1034], "generatorexit": [285, 1034], "keyboardinterrupt": [285, 301, 1034], "importerror": [285, 1034], "environmenterror": [285, 1164], "ioerror": [285, 1170], "eoferror": [285, 1034], "notimplementederror": [285, 1034], "unboundlocalerror": [285, 1034], "indentationerror": [285, 1034], "taberror": [285, 1034], "unicodeerror": [285, 1034], "unicodedecodeerror": [285, 328, 334, 340, 1034], "unicodetranslateerror": [285, 1034], "floatingpointerror": [285, 1034], "overflowerror": [285, 1034], "systemerror": [285, 1034], "referenceerror": [285, 1034], "memoryerror": [285, 1034], "buffererror": [285, 1034], "userwarn": [285, 1034], "encodingwarn": [285, 1034], "deprecationwarn": [285, 1034], "pendingdeprecationwarn": [285, 1034], "runtimewarn": [285, 1034], "futurewarn": [285, 1034, 1153], "importwarn": [285, 1034], "unicodewarn": [285, 1034], "byteswarn": [285, 1034], "resourcewarn": [285, 1034], "connectionerror": [285, 1034], "blockingioerror": [285, 1034], "brokenpipeerror": [285, 1034], "childprocesserror": [285, 1034], "connectionabortederror": [285, 1034], "connectionrefusederror": [285, 1034], "connectionreseterror": [285, 1034], "fileexistserror": [285, 1034], "isadirectoryerror": [285, 1034], "notadirectoryerror": [285, 1034], "interruptederror": [285, 1034], "processlookuperror": [285, 1034], "timeouterror": [285, 1034], "closefd": 285, "beopen": 285, "1995": [285, 504, 1125, 1127, 1131, 1133], "nation": [285, 941], "1991": [285, 1060], "sticht": 285, "centrum": 285, "amsterdam": [285, 1060], "credit": [285, 808, 1061], "cwi": 285, "cnri": 285, "zope": 285, "cast": [285, 421, 577, 665, 672, 796], "execfil": 285, "_pydev_imp": 285, "_pydev_execfil": 285, "glob": [285, 453, 925, 982, 1030, 1045, 1176], "runfil": 285, "_pydev_bundl": 285, "pydev_umd": 285, "wdir": 285, "__ipython__": 285, "exclud": [285, 472, 599], "transient": 285, "display_id": 285, "get_ipython": 285, "interactiveshel": 285, "zmqshell": 285, "zmqinteractiveshel": 285, "0x7f9fb1516200": 285, "config_fil": 285, "srcdir": 285, "dstdir": 285, "dst": [285, 416, 466, 555, 596, 615, 624, 625, 631, 1085], "untrust": 288, "lan": 288, "programmat": [288, 522, 934, 942, 990, 1010, 1161], "stty": 288, "termio": 288, "ioctl_tti": 288, "setseri": 288, "tty": [288, 868, 923, 995, 1001, 1025], "tty_io": 288, "bidirection": 288, "nake": 288, "tiocgseri": 288, "tiocsseri": 288, "async_low_lat": 288, "cfmakeraw": 288, "ttyusb0": [288, 868], "low_lat": 288, "serial_struct": 288, "bidir": 288, "advantec": 288, "nonetheless": [288, 291, 294, 323, 711, 1176], "mycat": 288, "mimick": [288, 752], "make_realtim": 288, "interfaceri": 288, "cif": [288, 340], "samba": [288, 340], "automationadmin": 288, "gsc": 288, "pd": [289, 290, 292, 296, 324, 478, 1139, 1141, 1153, 1154, 1155, 1157, 1158, 1159, 1160], "read_csv": [289, 290, 296, 324, 328, 334, 346, 478, 1139, 1141], "txn": 289, "iso8859": 289, "time_book": [289, 290, 478], "time_valuta": [289, 290, 478], "at66666666666666": 289, "bezahlung": [289, 290, 292, 478], "kart": [289, 290, 292, 478], "eur": [289, 290, 478], "95111243": [289, 478], "abbuchung": [289, 478], "onlinebank": [289, 478], "gutschrift": 289, "000000144919": 289, "339099446722187": 289, "000": [289, 324, 328, 334, 478, 896, 934], "card_pay": 289, "filt": 289, "9325008697": 289, "339099446790254": 289, "og": [289, 466], "237811001182": 289, "auszahlung": 289, "200075787001": 289, "tzb": 289, "anl": 289, "347159strom": 289, "200004871820": 289, "200004876265": 289, "200004848862": 289, "200004871863": 289, "dauerauftrag": 289, "qsnng6xau": 289, "00121672661": 289, "120016487112": [289, 478], "bx": 289, "000009219": 289, "entgelt": 289, "nichtdurchf\u00fchrung": 289, "032300005522384": 289, "saldo": 289, "messtechnik": 289, "602674240071": 289, "0004325259000023": 289, "oeamtc": 289, "mitgliedschaft": 289, "re_liv": 289, "billa": [289, 292, 478], "rew": 289, "dankt": [289, 290, 292, 478], "pipe_stag": 290, "max_colwidth": 290, "max_column": 290, "max_row": 290, "039": 290, "consolut": 290, "insuffici": [290, 708], "categor": [290, 477, 1143], "fuction": 290, "filt_uncat": 290, "uncat_row": 290, "unspecif": [290, 380, 815], "useless": [290, 702, 760, 881, 928, 984, 1056], "food": [290, 296], "luxuri": 290, "categorize_card_pay": 290, "jet": 290, "uncertainti": 290, "categorize_v1": 290, "categorize_v2": 290, "secondari": 290, "test_categori": [290, 478], "test_bas": [290, 1124], "000009258": 290, "k002": [290, 478], "impos": [291, 294], "hurt": [291, 294, 415], "strength": [291, 294, 442, 1058], "overengin": [291, 294, 415, 476, 477, 1184, 1192], "140480285361680": 292, "0xffffffffffffffff": [292, 312, 328], "0x10000000000000000": [292, 312, 328], "140479638276224": 292, "140480203220736": 292, "140480210406176": 292, "7940943354778932823": 292, "0x7fc4189e7c90": 292, "28800": 292, "237988": 292, "produce_dai": 292, "374557": 292, "l_mal_2": 292, "140480285361712": 292, "140479638477760": 292, "140479638427520": 292, "l4": 292, "l5": 292, "140480202528192": 292, "140479638428736": 292, "140480203212992": 292, "l6": 292, "140479598069936": 292, "is_old": 292, "ipykernel_370861": 292, "4290492544": 292, "abc123": [292, 346], "0x7fc4189e5030": 292, "yyi": [292, 334, 346], "lichtenberg": [292, 496, 655, 687, 689, 1125, 1127, 1131, 1133, 1153, 1154, 1155, 1157, 1158, 1159, 1160], "persons2": [292, 1153, 1154], "set_index": [292, 1158], "sort_valu": 292, "inplac": [292, 296, 950, 1154], "flt": [292, 1155], "isin": [292, 1155], "reset_index": 292, "dropna": 292, "value_count": [292, 296], "int64": [292, 296, 1160], "conversiosn": 293, "9am": 294, "woven": [294, 298], "pipelin": [294, 387, 862, 877, 880, 881, 930, 944, 1023], "accountid": 296, "accountdescript": 296, "accountparentid": 296, "storeid": 296, "storedescript": 296, "locationid": 296, "locationdescript": 296, "productid": 296, "productdescript": 296, "sales_managerid": 296, "dateyear": 296, "datequart": 296, "datemonth": 296, "datedai": 296, "categoryvers": 296, "categorycategori": 296, "categorytyp": 296, "valueunit": 296, "original_sales_pric": 296, "sale": 296, "st43": 296, "franchescini": 296, "ct14": 296, "salem": 296, "pd23": 296, "ipa": 296, "sm1": 296, "20144": 296, "201412": 296, "1779": 296, "763910": 296, "usd": 296, "st35": 296, "pd2": 296, "pepsi": 296, "sm4": 296, "201410": 296, "957113": 296, "st98": 296, "walter": 296, "pd24": 296, "amber": 296, "20142": 296, "201406": 296, "449395": 296, "st188": 296, "arrowhead": 296, "ct1": 296, "pd19": 296, "sm8": 296, "20164": 296, "201611": 296, "078689": 296, "st107": 296, "spire": 296, "ct5": 296, "san": 296, "jose": 296, "pd15": 296, "juic": 296, "sm5": 296, "20154": 296, "201512": 296, "303679": 296, "quantity_sold": 296, "sold": 296, "st4": 296, "gstore": 296, "ct13": 296, "portland": 296, "pd26": 296, "wine": 296, "000000": [296, 1141], "1069": 296, "st49": 296, "bai": 296, "depot": 296, "ct4": 296, "sacramento": 296, "pd27": 296, "20151": 296, "201501": 296, "592904": 296, "discount": 296, "st36": 296, "pricelow": 296, "arena": [296, 773, 775], "ct10": 296, "reno": 296, "pd22": 296, "sm3": 296, "20162": 296, "201605": 296, "4351": 296, "045830": 296, "1071": 296, "st7": 296, "street": [296, 903], "pd16": 296, "7905": 296, "590606": 296, "pd12": 296, "lemonad": 296, "20153": 296, "201507": 296, "1073": 296, "modified_model": 296, "sales_managerdescript": 296, "janet": 296, "buri": 296, "nanci": 296, "miller": 296, "setp": 296, "nan_field": 296, "bitfield": 296, "bitfi": 296, "nan_column": 296, "gabriel": [296, 740], "walton": 296, "carl": 296, "jjjjj": 296, "ref_t": 296, "datetime64": 296, "damn": 296, "ref_2015_12_04": 296, "flt_before_2015_12_04": 296, "rows_before_2015_12_04": 296, "st119": 296, "ct2": 296, "francisco": 296, "pd11": 296, "orang": [296, 1077], "pulp": 296, "sm7": 296, "kiran": 296, "raj": 296, "201503": 296, "226847": 296, "13627": 296, "793342": 296, "3427": 296, "896898": 296, "15569": 296, "353983": 296, "float64": [296, 328, 334, 346, 1141], "1957": 296, "740301": 296, "572676": 296, "686587": 296, "289381": 296, "flt_product_pd2": 296, "flt_2015": 296, "flt_only_sold": 296, "flt_combin": 296, "st139": 296, "farlo": 296, "ct15": 296, "eugen": 296, "sm11": 296, "jame": 296, "frank": 296, "201511": 296, "st178": 296, "rai": 296, "ct8": 296, "beverli": 296, "hill": 296, "201508": 296, "facet": [297, 299, 650], "rich": [297, 299, 1154, 1163], "toolset": [297, 299, 668], "conceptu": [297, 299, 467, 808, 815, 953], "undergon": [297, 299], "revolut": [297, 299], "odr": [297, 740], "explor": [297, 942], "rodata": [297, 1028], "unspecifi": [297, 421, 508, 580, 1008, 1009], "bookkeep": [298, 477], "fewer": 298, "closer": 298, "augment": [298, 837, 1150], "test_blah": 298, "monkeypatch": [298, 300, 301, 316, 322, 323, 326], "contextlib": 298, "chatgpt": 299, "ludwig": 299, "registri": [299, 561], "memleak": 299, "jason": [300, 301, 322], "brownle": [300, 301, 322], "contriv": [300, 301, 322, 499, 1035, 1070], "subthread": [300, 301], "introductori": [300, 301, 322, 327, 790, 933, 974, 1142, 1143, 1189], "mindset": [300, 301, 322, 326, 837], "develp": 300, "10am": 301, "reopen": 301, "drei_millionen_int": 302, "3_000_000": 302, "odd_numb": [302, 1039], "odd_numbers_func": 302, "ret_num": 302, "0x7f32ccc4c610": 302, "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000": [302, 350, 364], "139855258515840": 302, "139856078033344": 302, "139856078226432": 302, "139856160540176": 302, "i3": 302, "i4": 302, "nope": [302, 990], "0101010101010": 302, "bash_logout": [302, 919], "bash_profil": [302, 919], "thunderbird": [302, 340, 899, 919], "gnupg": [302, 340, 919], "hst": 302, "gitconfig": [302, 919], "pki": [302, 340, 919], "daham": 302, "20230403": 302, "222915": 302, "bash_histori": [302, 919], "python_histori": [302, 919], "lesshst": [302, 919], "139855258795072": 302, "139855260513728": 302, "139856085569920": 302, "doppelt": 302, "gemoppelt": 302, "trag": 302, "exakt": 302, "paarweis": 302, "read_lines_of_fil": 302, "0x7f32c7d8d390": 302, "nohead": [305, 1130, 1131, 1133], "userdb_csv": [305, 1131, 1132, 1133], "interleav": 305, "dosometh": 306, "0x7fe7fbf80df0": 306, "140634424624656": 306, "140634424623536": 306, "0o644": 306, "0b01110101": 306, "setting_blah": 306, "setting_foo": 306, "config_context": 306, "140634341074320": 306, "140634424624688": 306, "140634341076688": 306, "140634341077776": 306, "140634343012864": 306, "140634341099856": 306, "ipykernel_61373": 306, "1125713270": 306, "1234567876543234567654321234565432123456": 306, "140634281233520": 306, "140634341798400": 306, "140634341995008": 306, "140634341576640": 306, "140634341773312": 306, "140634281802304": 306, "global_vari": 306, "bar2": 306, "bar3": 306, "bar4": 306, "bar5": 306, "bar6": 306, "0x7fe7f869b7d0": 306, "0x7fe7f869b920": 306, "0x7fe7f869bbc0": 306, "punctuat": 306, "abcabcabcabcabc": [306, 334], "rex": [306, 340], "cba": [306, 659], "another_d": 306, "rb": [306, 346], "30000": 306, "coreutil": 309, "autopoint": 309, "rpm": [309, 340, 489], "fcntl": [309, 941, 959, 963, 967, 968, 969, 970, 975, 978, 1001, 1004, 1008], "luciano": [311, 370, 371, 1136], "ramalho": [311, 370, 371, 1136], "140640823526928": 312, "0x7fe97e53c610": 312, "140640823526960": 312, "140640741310912": 312, "140640741034048": 312, "140640741341184": 312, "wasjetzt": 312, "140640722624768": 312, "140640722715136": 312, "l1_copi": [312, 340], "my_funky_gener": 312, "meine_dumme_sequenz": 312, "0x7fe9785083a0": 312, "0x7fe98c21bce0": 312, "greeter": [312, 480, 481, 482, 486, 487, 1027], "0x7fe9796976d0": 312, "140640740502720": 312, "140640722823952": 312, "140640741119552": 312, "l_copi": 312, "140640741312256": 312, "140640722734080": 312, "140640722760768": 312, "140640722739712": 312, "140640741402496": 312, "owher": 312, "0000042": [312, 1080], "bled": 312, "xfc": [312, 328, 1066, 1149], "xdfe": [312, 328, 1149], "gr\u045c\u043fe": [312, 328, 1149], "\u795d\u597d": [312, 328], "big5": [312, 328, 1149], "xaf": [312, 328], "xac": [312, 328], "xa6n": [312, 328], "unterschrift": 312, "illeg": [312, 458, 1149], "multibyt": [312, 404, 1149], "xe7": [312, 328, 1149], "xa5": [312, 328, 1149], "x9d": [312, 328, 1149], "xe5": [312, 328, 1149], "xbd": [312, 328, 1149], "incorpor": [314, 330, 1191], "tradition": [314, 330, 744, 936, 1057, 1191], "lexer": [314, 330, 1191], "aris": [314, 330, 507, 1191], "compili": [314, 330, 1191], "rant": [315, 331, 483, 790, 1159], "blacklist": [315, 331, 340, 482, 483, 488, 491, 790], "acquaint": [316, 319], "data_to_send": 317, "data_receiv": 317, "user_receiv": [317, 1132], "140048588115008": 317, "140048588341376": 317, "d_str": [320, 674], "uebertragen": 320, "d_str_receiv": 320, "d_receiv": 320, "ala": [323, 326, 521, 612, 893, 959, 999, 1164], "frozendict": [323, 324], "filesensor": 323, "sergei": 323, "test_acquisition_loop": 323, "test_mock_csv_sink": 323, "mymockedth": 323, "nonloc": [323, 1076], "millcelsiu": 323, "acquisition_loop_util": 323, "ont": 323, "necessarili": [323, 442, 472, 629, 788, 823, 837, 874, 954, 1052, 1171, 1178], "10m": [323, 999], "acquir": [323, 378, 768, 842, 984, 989, 998], "slower": [323, 466, 874], "packet": [323, 518, 831, 937, 960, 993], "transmit": 323, "datatim": 323, "read_measur": 323, "fourier": 323, "fft": 323, "011": [323, 334], "ifft": 323, "print_": 324, "0x7f0b165fdf00": 324, "dos_path": [324, 340, 364], "vernuenftigen": 324, "__class_getitem__": 324, "__iand__": 324, "__ior__": 324, "__isub__": 324, "__ixor__": 324, "difference_upd": 324, "intersection_upd": 324, "issubset": 324, "issuperset": 324, "symmetric_differ": 324, "symmetric_difference_upd": 324, "hallohallohallohallohallo": 324, "139685905188368": 324, "139685905188400": 324, "0x7f0b14487be0": 324, "fasschingbau": 324, "139685602274352": 324, "139685561461616": 324, "139685561690240": 324, "139685561316032": 324, "139685595970464": 324, "139685561151488": 324, "30000000": 324, "my_iter": 324, "my_print": [324, 1057], "my_arg": [324, 1032], "even_squar": [324, 334, 346], "squares_fun": 324, "squares_gen": 324, "0x7f0aefb94f20": 324, "0x7f0aefb955b0": 324, "squares_list": 324, "foobar": 324, "expr_str": 324, "expr": [324, 427, 437, 897], "skiprow": 324, "hz2": 324, "hz3_5": 324, "000566": 324, "000729": 324, "132363": 324, "229977": 324, "260597": 324, "444942": 324, "385433": 324, "638212": 324, "502710": 324, "796519": 324, "936250": 324, "972326": 324, "974442": 324, "999992": 324, "995683": 324, "973719": 324, "999245": 324, "895850": 324, "985202": 324, "768778": 324, "arang": 324, "001": [324, 334, 418], "002": 324, "003": 324, "004": 324, "0x7f0ad44b8f70": 324, "0x7f0ad23371f0": 324, "aaarghhh": 325, "expresss": 325, "realist": [326, 953], "postpon": [326, 857], "coverag": [327, 1041], "hackin": 327, "mocksink": 327, "139680347735568": 328, "0x10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000": 328, "0xabc": 328, "convert_to_int": 328, "konvertieren": 328, "drei_int": 328, "fooabc": 328, "userlin": 328, "tjr": 328, "\u00f6rg": 328, "0xc3": [328, 334, 340], "enc_": 328, "enc_s_recvd": 328, "ipykernel_81650": 328, "1521975281": 328, "lg_joerg": 328, "concat": [328, 478, 1153], "linksunten": 328, "rechtsoben": 328, "meinsinussensor": 328, "sinvalu": 328, "ndarrai": [328, 1142, 1158], "0x7f67142f53c0": 328, "timeit": 333, "0x64": 334, "0b1100100": 334, "0b100101100": 334, "0b0": 334, "type_of_i": 334, "schade": 334, "worldhello": 334, "140572055569936": 334, "500001": 334, "499999999999999999999999": 334, "4999": 334, "my_round": 334, "diff_to_next": 334, "5001": 334, "500000001": 334, "str_i": 334, "int_i": 334, "float_i": 334, "nocheinelist": 334, "140571746172800": 334, "140571753417312": 334, "my_": 334, "2282548071841868421": 334, "oioi": 334, "ueberbleibsel": 334, "my_sum": 334, "doom": 334, "0x7f48e8543060": 334, "doedel": 334, "sdhcbdhcb": 334, "kjsdskbh": 334, "akjsdhvksb": 334, "item2": [334, 785, 786], "line_r": 334, "tyyi": 334, "mp_left": 334, "mp_top": 334, "mp_right": 334, "mp_righ": 334, "brenner": 334, "kupfer": 334, "koax": 334, "oberflaech": 334, "gasdues": 334, "fsc": 334, "zellentemp": 334, "raumtemp": 334, "vdc": 334, "077": 334, "090": [334, 694], "76220": 334, "77849": 334, "086": 334, "81216": 334, "99354": 334, "92051": 334, "035": [334, 1007, 1008], "82874": 334, "075": 334, "006": 334, "78855": 334, "098": 334, "036": 334, "007": 334, "76466": 334, "091": 334, "64736": 334, "65062": 334, "transform_t": 334, "transformed_timestamp": 334, "646126e": 334, "646130e": 334, "mpleft_1": 334, "mpleft_2": 334, "0x7f48ab74abf0": 334, "0x7f48a96648b0": 334, "noch_eine_vari": 334, "even_pr": 334, "0x7f48a9505b40": 334, "0x7f48a95250e0": 334, "squaredict": 334, "squaresset": 334, "bloat": [336, 337, 454, 774, 783, 789, 790, 1054], "ugh": 336, "urgh": 336, "nodiscard": 336, "fallthrough": [336, 1008], "noexcept": [336, 497, 531, 702, 705, 707, 722, 724, 725, 727, 728, 729, 730, 744, 754, 768], "string_view": 336, "hierachi": 337, "conveni": [337, 401, 485, 863, 943, 1008, 1028, 1141], "powercontrol": 337, "temperaturecontrol": 337, "get_target_temperatur": 337, "copyabl": [337, 597], "_run": 337, "kochtopftemperaturecontrol": 337, "get_current_temperatur": 337, "debt": [337, 520, 521, 522, 534, 535, 536], "erasur": [337, 774, 783, 789, 790], "align": [337, 387, 455, 464, 468, 473, 474, 696, 734, 773, 787, 789, 790, 935, 937, 1004, 1080, 1187, 1190], "98f8b9be": 340, "ad8f": 340, "4023": 340, "81a2": 340, "d1dc67d0282c": 340, "python310": 340, "139783143835152": 340, "0x7f21cca24610": 340, "0b10000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000": 340, "1_000_000": 340, "3267": 340, "139782834179584": 340, "139783143835184": 340, "meng": 340, "m1": 340, "m2": 340, "leeres_set": 340, "d_revers": 340, "yaai": 340, "my_deppertes_rang": 340, "mdr": 340, "objeckt": 340, "139782799029888": 340, "139782798781696": 340, "139782798895952": 340, "139782798895792": 340, "139782798980096": 340, "schuld": 340, "300000": [340, 942, 1141], "compiled_pattern": 340, "__builtin__": 340, "139782799135312": 340, "0x7f21b81bbe60": 340, "getcwd": 340, "extlinux": 340, "favicon": 340, "grub2": 340, "opensc": 340, "packagekit": 340, "upow": 340, "authselect": 340, "bash_complet": 340, "binfmt": 340, "brltty": 340, "ceph": [340, 863], "chkconfig": 340, "cupshelp": 340, "dconf": 340, "debuginfod": 340, "depmod": [340, 815, 833], "dracut": 340, "egl": 340, "firewalld": [340, 875], "flexiblasrc": 340, "font": 340, "fwupd": [340, 875], "gcrypt": 340, "gdbinit": 340, "glvnd": 340, "groff": 340, "gss": 340, "gssproxi": 340, "hp": 340, "iproute2": 340, "iscsi": 340, "jvm": 340, "kdump": 340, "krb5": 340, "libblockdev": 340, "libibverb": 340, "libnl": 340, "libpap": 340, "libreport": 340, "libssh": 340, "libvirt": 340, "logrot": 340, "lvm": 340, "mcelog": 340, "mdevctl": 340, "modprob": [340, 815, 837, 838, 936, 941, 942, 943], "motd": 340, "cnf": 340, "ndctl": 340, "nftabl": 340, "openldap": 340, "ostre": 340, "pam": 340, "pkcs11": 340, "pkgconfig": 340, "plymouth": 340, "polkit": 340, "popt": 340, "ppp": 340, "puls": [340, 934, 1193, 1200], "rwtab": 340, "sasl2": 340, "selinux": 340, "sgml": 340, "skel": 340, "speech": 340, "sssd": 340, "statetab": 340, "sudoer": [340, 880], "swid": 340, "sysconfig": 340, "sysctl": 340, "terminfo": 340, "thermald": 340, "tmpfile": 340, "tpm2": 340, "udev": 340, "udisks2": 340, "vmware": [340, 876], "vpnc": 340, "vulkan": 340, "wireplumb": 340, "wpa_supplic": 340, "xdg": 340, "dir_color": 340, "lightbgcolor": 340, "grep_color": 340, "adjtim": 340, "bindresvport": 340, "brlapi": 340, "dleyna": 340, "fprintd": 340, "jwhoi": 340, "libaudit": 340, "libus": 340, "mailcap": 340, "man_db": 340, "mime": 340, "mke2f": 340, "nanorc": 340, "netconfig": 340, "papers": 340, "passwdqc": 340, "pinforc": 340, "sestatu": 340, "tcsd": 340, "usb_modeswitch": 340, "vconsol": 340, "wgetrc": 340, "xattr": 340, "crypttab": 340, "localtim": 340, "mtab": 340, "subuid": 340, "subgid": 340, "timid": 340, "vdpau_wrapp": 340, "asound": 340, "idmapd": 340, "mtool": 340, "rsyncd": 340, "anthi": 340, "trolltech": 340, "rygel": 340, "virc": 340, "swtpm": 340, "localca": 340, "swtpm_setup": 340, "uresourc": 340, "ethertyp": 340, "inputrc": 340, "printcap": 340, "csh": [340, 1171], "nfsmount": 340, "nsswitch": 340, "gshadow": 340, "shadow": [340, 872, 893, 969, 1076, 1114], "rhashrc": 340, "imagemagick": 340, "cshrc": 340, "gimp": 340, "updatedb": 340, "dl": 340, "containerd": [340, 1025], "lftp": 340, "rc0": 340, "rc1": 340, "rc2": 340, "rc3": 340, "rc4": 340, "rc5": 340, "rc6": 340, "cpe": 340, "inittab": 340, "makedumpfil": 340, "sensors3": 340, "posixpath": [340, 350], "kadjckk": 340, "xxddjh": 340, "blahblahblahblah": 340, "schuetzen": 341, "pathlib": [153, 341, 349, 351, 1169], "regexen": 341, "afterthought": [345, 1066], "__getstate__": 346, "bit_count": 346, "maximum_numb": 346, "140526007219432": 346, "0x42": 346, "0x7fceb0516c20": 346, "cnt": [346, 1037], "140525696085312": 346, "create_print_funct": [346, 736, 738, 739], "140526007219464": 346, "140525697462832": 346, "140525697462736": 346, "140525697463408": 346, "140525697463280": 346, "match_express": 346, "compiled_express": 346, "joined_l": 346, "hwmon4": 346, "hwmon5": 346, "hwmon7": 346, "hwmon8": 346, "0x7fce70506000": 346, "varibl": 350, "139818180670696": 350, "0x7f29f4fdf4e8": 350, "139817897762928": 350, "0b11111111111111111111111111111111": 350, "0b100000000000000000000000000000000": 350, "139817896921728": 350, "139817466913504": 350, "142334567876545678765456787654": 350, "max_tri": 350, "fuck": [350, 808], "straw": [350, 1073, 1081], "ipaddress": 350, "addr": [350, 808, 821, 833, 937, 942, 960, 1004, 1169], "ip_address": 350, "ipv4address": 350, "is_loopback": 350, "gueltig": 350, "a_tupl": [350, 1072], "139818180670728": 350, "139817467481600": 350, "modifyit": 350, "sjdgosi": 350, "gfosvbsisvbsok": 350, "file1": [350, 788, 806, 922], "file2": [350, 788, 806, 922], "csv_file": 350, "subdir1": [350, 788], "subdir2": [350, 788], "mein_dir": 350, "mein_csv_fil": 350, "null_eins_zwei": 350, "0x7f296befbc40": 350, "shuffl": 350, "kvpair": 350, "reduct": 350, "img_arrai": 350, "rerun": [350, 604, 753], "unabl": [350, 944], "nbviewer": 350, "kmeansifittedkmean": 350, "18423981": 350, "51866902": 350, "40779841": 350, "94278979": 350, "7484102": 350, "52017749": 350, "71821931": 350, "48415009": 350, "61361798": 350, "10754686": 350, "97606427": 350, "93141702": 350, "5569347": 350, "5296816": 350, "4875877": 350, "85174112": 350, "87099894": 350, "85349982": 350, "35345614": 350, "73043954": 350, "19387197": 350, "7373525": 350, "19961382": 350, "95700493": 350, "richtigen": [350, 1184], "bildern": 350, "austauschen": 350, "einzelenen": 350, "urspruenglich": 350, "veraendert": 350, "reduced_arrai": 350, "datatyo": 351, "einlesen": 351, "commmandlin": 354, "omg": [354, 436, 796, 1170], "checker": [355, 360, 369], "horribl": 355, "gpio25": [355, 938], "embarass": 355, "winscp": 355, "cluster_ece19": [355, 356, 357, 358, 359, 360, 369, 790], "ece19": [355, 356, 357, 358, 360, 368, 369, 375, 376, 380, 790], "ece19_file_read": [355, 356, 357, 358, 359, 360, 369, 790], "ece19_blinklicht": [355, 356, 357, 358, 359, 369, 790], "ece19_blinklicht_oo": [356, 357, 358, 359, 369, 790], "ece19_blinklicht_abc": [358, 359, 369, 790], "ece19_blinklicht_unittest": [358, 359, 369, 790], "blinklicht": [359, 369, 374, 790], "1910420003": [360, 361], "corinna": [360, 361], "baumgartn": [360, 361, 378], "1910420002": [360, 361], "anzhelika": [360, 361, 369], "chernykh": [360, 361, 369, 378], "1910420005": [360, 361], "simon": [360, 361], "1910420006": [360, 361], "matthia": [360, 361, 378], "kappel": [360, 361, 378], "1810420009": [360, 361], "kolter": [360, 361], "1920420033": [360, 361], "kornberg": [360, 361, 378, 381], "1910420007": [360, 361], "lui": [360, 361, 378], "kraker": [360, 361, 378, 381], "1810420010": [360, 361], "leonid": [360, 361], "kudriaschov": [360, 361], "1910420008": [360, 361], "michael": [360, 361, 370, 371], "1910420010": [360, 361], "sonja": [360, 361, 378], "luka": [360, 361, 378, 381], "1910420013": [360, 361], "behnaz": [360, 361], "mehrabadi": [360, 361, 378], "1910420014": [360, 361], "moser": [360, 361, 378], "1910420015": [360, 361], "moritz": [360, 361], "nagelschmi": [360, 361, 378], "1910420018": [360, 361], "bianca": [360, 361], "reimer": [360, 361], "1910420020": [360, 361], "schmid": [360, 361, 378], "1910420021": [360, 361], "sch\u00fcttler": [360, 361], "1910420022": [360, 361], "schweiger": [360, 361, 378], "1910420024": [360, 361], "sinabel": [360, 361], "1910420025": [360, 361], "slovik": [360, 361, 378], "1910420026": [360, 361], "s\u00f6l": [360, 361, 378], "1910420027": [360, 361], "stangl": [360, 361, 378], "1910420028": [360, 361], "felix": [360, 361, 378], "themessl": [360, 361, 378], "1920420035": [360, 361], "astrid": [360, 361], "vogel": [360, 361, 378], "1810420029": [360, 361], "florian": [360, 361, 378], "zwittnigg": [360, 361], "matricul": [360, 1035], "studentdb": 360, "greatli": [360, 462, 1189], "matnr": 360, "rid": [360, 460, 501, 839, 856], "zuweisung": 361, "n1910420002": 361, "n1910420005": 361, "n1910420006": 361, "n1810420009": 361, "n1920420033": 361, "n1910420007": 361, "n1810420010": 361, "n1910420008": 361, "n1910420010": 361, "n1910420013": 361, "n1910420014": 361, "n1910420015": 361, "n1910420018": 361, "n1910420020": 361, "n1910420021": 361, "n1910420022": 361, "n1910420024": 361, "n1910420025": 361, "n1910420026": 361, "n1910420027": 361, "n1910420028": 361, "n1920420035": 361, "n1810420029": 361, "n666": 361, "5g": 361, "n19": 361, "10420013": 361, "n181": 361, "0420029": 361, "20210324": 362, "orig_si": 362, "__interactivehook__": 362, "_base_execut": 362, "_clear_type_cach": 362, "_current_fram": 362, "_debugmallocstat": 362, "_framework": 362, "_getfram": 362, "_git": 362, "_home": 362, "_xoption": 362, "flo": 363, "ted": 363, "rainer": 363, "rg": 363, "some_numb": [364, 1063], "auszuspucken": 364, "eine_neue_vari": 364, "klassisch": 364, "140705292246608": 364, "register_cont": 364, "0b11010001110101000": 364, "107432": 364, "erzwungen": 364, "0x1249ad2594c37ceb0b2784c4ce0bf38ace408e211a7caab24308a82e8f10000000000000000000000000": 364, "groesst": 364, "darstellbar": 364, "ein_string_der_aussieht_wie_ein_integ": 364, "ein_integ": 364, "ver\u00e4ndernd": 364, "say_hello": [365, 1052], "333333333333336": 365, "disclos": [366, 950], "formalit\u00e4ten": 368, "daili": [368, 880], "organiz": 369, "shortcut": [369, 446, 897, 929, 1066, 1195], "baustein": [369, 374], "navigieren": [369, 374], "sitzen": [369, 374], "nat\u00fcrlich": [369, 374, 387, 1183], "verstehen": [369, 374, 387, 1196], "pr\u00fcfung": [369, 374], "trocken": [369, 374], "pfade": [369, 374, 1184, 1195], "symbolisch": [369, 374, 924], "verschieben": [369, 374], "textfil": [369, 374], "113ff": [369, 374], "ansatzweis": [369, 374], "durchgegangen": [369, 374], "133ff": [369, 374], "durchgemacht": [369, 374], "wirkungsweis": [369, 374], "verstanden": [369, 374, 1186], "verkn\u00fcpfen": [369, 374], "aufw\u00e4rmen": 369, "fremden": 369, "fragerund": 369, "tire": [369, 374], "transact": [369, 374], "wertebereich": 369, "vpn": [369, 944], "gitlab": 369, "sidenot": 369, "swoop": [369, 495], "hashbang": 369, "student1": 369, "student2": 369, "student3": 369, "undescript": 369, "contribut": [369, 1011], "crlf": 369, "bang": [369, 489], "trial": [369, 1014, 1023, 1143], "systemkonzept": [370, 387, 1202], "adressr\u00e4um": [370, 387, 1193], "ger\u00e4t": 370, "destruktoren": [370, 1188], "containertempl": 370, "ausz\u00fcg": 370, "absolventinnen": 370, "absolventen": 370, "entwicklungsplatform": 370, "zielplattform": [370, 1188], "dortigen": 370, "betriebssystemkonzept": [370, 1193, 1200], "verinnerlichen": 370, "eckpfeil": [370, 1188], "ansteuern": 370, "merkmal": 370, "nichttrivial": 370, "kerrisk": [370, 371], "handbook": [370, 371], "corbet": [370, 371, 1184], "allessandro": [370, 371], "rubini": [370, 371], "greg": [370, 371], "kroah": [370, 371], "hartman": [370, 371], "richard": [370, 371, 1011], "steven": [370, 371, 466], "stephen": [370, 371], "rago": [370, 371], "cookbook": [370, 371, 1176], "lutz": [370, 371], "integriert": 370, "\u00fcbungsanteil": 370, "einzelpr\u00fcfung": 370, "vorlesung": 370, "graduat": 371, "copver": 371, "warm": 372, "briefli": [373, 934], "filethermomet": 373, "ue": 375, "arduino": [375, 377, 934, 942, 1152], "homedirectori": [375, 925], "vbox": 375, "subnet": 375, "mgmt": 376, "64ff": 376, "readdir": [376, 788], "ow": [376, 520, 521, 522, 534, 535, 536], "readlink": 376, "tracker": [153, 377, 378], "thermometers_docu": 377, "toctre": 377, "execconfig": 377, "wacom": [377, 439, 440], "schuettler": 378, "zwittnig": 378, "simu": 378, "kudriaschow": 378, "hysteres": 378, "impl": 378, "marku": 378, "stepper": 378, "motor": [378, 790, 933, 940], "wasserfal": 378, "influxdb": 378, "grafana": 378, "nachmittag": 378, "multitask": [379, 384, 767, 789, 790, 933, 974, 988, 994, 996, 997, 999, 1200], "latenc": [380, 384, 768, 790, 835, 933, 974, 994, 996], "gotcha": [380, 384, 669, 790, 933, 954, 974, 994, 996, 1004], "type_from_ini": 380, "ece19error": 380, "configfil": [380, 1035], "prettier": [380, 611], "support_address": 380, "invalidtypeerror": 380, "newcom": [382, 383], "individualtrain": 386, "baden": 386, "w\u00fcrttemberg": 386, "beginnend": 386, "kursnotizen": 386, "qualivis": 386, "logbuch": 387, "kursteilnehmern": 387, "zustandegekommen": 387, "zukommen": 387, "potentiellen": 387, "zuk\u00fcnftigen": 387, "eindruck": [387, 1183], "zukommt": 387, "publizieren": 387, "einverst\u00e4ndni": 387, "richtlinien": 387, "raaba": 387, "thalheim": 387, "aachen": 387, "herzogenrath": 387, "mixtur": [387, 630], "gr\u00e4felf": 387, "wel": 387, "regensburg": 387, "pr\u00e4sent": 387, "inhous": [387, 1138, 1183], "linuxcampu": 387, "sch\u00f6nen": 387, "aktiv": 387, "mitgestaltet": 387, "kursabschluss": 387, "dran": 387, "provok": 387, "kam": 387, "zustand": 387, "freiheiten": 387, "gestanden": 387, "zusatzaufgab": 387, "gef\u00fchrt": [387, 1183], "einschr\u00e4nkungen": [387, 1201], "eintagesworkshop": 387, "leuten": 387, "kenn": 387, "einhergehend": 387, "l\u00f6sungen": [387, 1183, 1184], "darauffolgend": 387, "vertiefen": 387, "ausgew\u00e4hlten": 387, "bereichen": 387, "dbapi2": [387, 1148], "objektorientierung": 387, "r\u00e4umen": 387, "zweit\u00e4gig": 387, "gemisch": 387, "kursen": 387, "ziemlich": 387, "eingemacht": 387, "bestellt": 387, "neugier": 387, "leichtfertig": 387, "tief": 387, "hinabgestiegen": 387, "feiner": 387, "internen": 387, "forschungsprojekt": 387, "gebracht": 387, "zusammenschnitt": 387, "workshopcharakt": [387, 1207], "angegraut": 387, "bewusst": [387, 1205], "verwendung": 387, "wunderbar": 387, "automatisieren": 387, "zurerst": 387, "shellbenutzung": 387, "angeordnet": 387, "ge\u00fcbt": 387, "herk\u00f6mmlichen": [387, 1188], "auffrischung": 387, "eingerostet": 387, "neuigkeiten": 387, "querbeet": 387, "aufbauend": 387, "zuvor": 387, "grundkur": 387, "wichtigsten": 387, "neuerungen": [387, 1188], "tobak": 387, "lieblingsschulungen": 387, "basiswissen": 387, "hoeri": 387, "bastelwoch": 387, "betrachtung": 387, "realtimef\u00e4higkeit": 387, "xenomai": [387, 1184], "fad": 387, "auszugsweis": 387, "richtig": [387, 1203], "n\u00e4chten": 387, "schulungstagen": 387, "kurzweil": 387, "beschert": 387, "einf\u00fchrungscharakt": 387, "kernelprogrammierung": 387, "auftrag": 387, "hardwarenah": [387, 1193, 1200], "ausgew\u00e4ht": 387, "kernelstruktur": 387, "crosscompil": 387, "newer": [388, 791, 954, 1027, 1192], "msys2": 389, "5595": 389, "17619": 389, "pacman": 389, "mingw64": 389, "w64": 389, "x64": 389, "medium": [389, 479, 756, 1009, 1206], "swlh": 389, "2b2e66352456": 389, "ansi": 390, "iec": [390, 595], "9899": 390, "c11": 390, "pdp": [390, 404], "ken": 390, "thompson": 390, "tabul": [391, 399], "celsiu": [392, 393, 495, 506, 537, 941, 943], "brutal": [392, 411, 415, 436, 694, 711, 997], "ordinari": [392, 612, 666, 716, 821, 829, 900, 977, 1057, 1064], "everytim": [394, 412, 941], "ascend": [395, 1158], "unread": [396, 414, 471, 757, 1012, 1013, 1033, 1077], "putchar": 398, "caution": [398, 604, 863, 937], "obscur": [398, 406, 551, 672, 854, 963, 1005], "alright": [398, 424], "inequ": [398, 612], "word1": [399, 571], "word2": [399, 571], "word3": [399, 571], "word4": 399, "word5": 399, "unixen": [399, 788, 1005, 1171, 1184], "nonsens": [400, 418, 437, 597, 601, 604, 694, 753, 900, 995, 1032, 1142, 1181], "illustr": [400, 1035], "countchar": 400, "nwhite": 400, "nother": 400, "stat": [400, 788, 959, 967, 968, 969, 970, 995, 1001, 1004, 1008, 1169], "nonprint": [401, 429], "decis": [401, 476, 556, 603, 619, 753, 934, 997, 1037, 1143, 1192], "xxxxxxxxxxxxxxxxxxxxxxxxx": 401, "xxxxxxxxxxxxxxxxxx": 401, "subroutin": [402, 470], "outer": [402, 429], "wimplicit": [402, 805], "hygien": 402, "dear": 402, "assembl": [404, 1011], "contradict": [404, 699], "640k": 404, "a_str": 404, "strncpy": 404, "maxlen": [404, 405], "strcat": 404, "strncat": 404, "strcmp": [404, 705, 706], "strncmp": 404, "another_str": 404, "nonsensi": 405, "read_lin": 405, "longest": 405, "confin": [406, 1035], "cluster_c": [407, 422, 431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 500, 514, 542, 543, 544, 545, 546, 547, 548, 549, 552, 559, 561, 594, 602, 617, 620, 623, 639, 645, 649, 658, 661, 662, 667, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 696, 703, 734, 750, 759, 767, 775, 787, 789, 790], "cluster_c_introduct": [407, 422, 431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 500, 514, 542, 543, 544, 545, 546, 547, 548, 549, 552, 559, 561, 594, 602, 617, 620, 623, 639, 645, 649, 658, 661, 662, 667, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 696, 703, 734, 750, 759, 767, 775, 787, 789, 790], "c_introduction_exercise_fahrenheit_float": [407, 422, 431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "c_introduction_variables_and_arithmetic_express": [407, 422, 431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "c_introduction_external_variables_and_scop": [407, 422, 431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "c_introduction_exercise_string_read_lin": [407, 422, 431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "c_introduction_cpp_symbolic_const": [407, 422, 431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "c_introduction_exercise_fahrenheit_for": [407, 422, 431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "c_introduction_introduct": [407, 422, 431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "c_introduction_instal": [407, 422, 431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 500, 514, 542, 543, 544, 545, 546, 547, 548, 549, 552, 559, 561, 594, 602, 617, 620, 623, 639, 645, 649, 658, 661, 662, 667, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 696, 703, 734, 750, 759, 767, 775, 787, 789, 790], "c_introduction_for_loop": [407, 422, 431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "c_introduction_hello_world": [407, 422, 431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "c_introduction_exercise_histogram": [407, 422, 431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "c_introduction_arrai": [407, 422, 431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "c_introduction_character_io": [407, 422, 431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "c_introduction_exercise_fahrenheit_cpp": [407, 422, 431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "c_introduction_exercise_power_declar": [407, 422, 431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "c_introduction_funct": [407, 422, 431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "c_introduction_character_arrai": [407, 422, 431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "c_introduction_exercise_wc": [407, 422, 431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "z0": 409, "abbrevi": [410, 711, 714, 716, 720, 774, 776, 778, 779, 780], "char_bit": 410, "x86": [410, 489, 1011, 1028], "stdint": [410, 941, 961, 1004], "int8_t": 410, "uint8_t": [410, 508, 523, 695, 941], "int16_t": 410, "int32_t": 410, "uint32_t": 410, "int64_t": 410, "052": 411, "0x2a": 411, "0b010010": 411, "42l": 411, "456f": 411, "456l": 411, "x61": 411, "alert": [411, 454, 460, 754, 1066, 1074, 1083, 1085], "backspac": [411, 897, 1079], "formfe": 411, "ooo": 411, "octal": [411, 1066, 1079, 1080], "xhh": 411, "some_funct": 412, "some_vari": 412, "1415926535897932": 412, "some_nonsensical_numb": 412, "legal": [414, 458, 604, 702, 967, 1009], "truth": [414, 964, 990], "eleg": [414, 757], "blank": 414, "num_lf": 414, "narrow": [415, 1143], "4294967295u": 415, "wsign": [415, 457], "wconvers": 415, "4294967296u": 415, "unscrupul": 415, "0x100000000": 415, "weaker": 415, "stronger": [415, 1047, 1155], "1l": 415, "1u": 415, "losslessli": 415, "1ul": 415, "wtype": [415, 457], "wextra": [415, 457], "pedant": 415, "anti": [415, 842, 979], "sloppi": 415, "advic": [415, 1066], "immens": [415, 1009], "hazard": 415, "messi": [415, 486], "subtl": [416, 436, 459, 551, 1060], "copy_and_omit": 416, "0x4b": 418, "01001011": 418, "0x0c": 418, "00001100": 418, "0x08": 418, "00001000": 418, "0x4f": 418, "01001111": 418, "0x47": 418, "01000111": 418, "0x03": 418, "00000011": 418, "0x80": 418, "00110000": 418, "0x4c": [418, 827], "01001100": 418, "0xb3": 418, "10110011": 418, "arr": [419, 698], "unari": [421, 1066], "strongest": [421, 1066], "intuit": [421, 469], "danger": [421, 439, 597, 837, 987, 1008, 1075, 1189], "decrement": [422, 431, 438, 442, 444, 448, 451, 455, 464, 468, 473, 474, 647, 696, 734, 753, 787, 789, 790, 796], "cluster_c_types_operators_express": [422, 431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "c_types_operators_expressions_type_convers": [422, 431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "c_types_operators_expressions_relational_logical_oper": [422, 431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "c_types_operators_expressions_datatypes_s": [422, 431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "c_types_operators_expressions_variable_nam": [422, 431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "c_types_operators_expressions_assignment_operators_and_express": [422, 431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "c_types_operators_expressions_bit_oper": [422, 431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "c_types_operators_expressions_conditional_express": [422, 431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "c_types_operators_expressions_arithmetic_oper": [422, 431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "c_types_operators_expressions_declar": [422, 431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "c_types_operators_expressions_introduct": [422, 431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "c_types_operators_expressions_exercise_string_reduc": [422, 431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "c_types_operators_expressions_precedence_and_order_of_evalu": [422, 431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "c_types_operators_expressions_const": [422, 431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "c_types_operators_expressions_increment_decrement_oper": [422, 431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "doabl": 427, "cond": [427, 984], "precedenceof": 427, "innermost": [429, 666, 671], "concern": [429, 430, 478, 796, 873, 943, 1034, 1191], "edsger": 430, "dijkstra": 430, "plea": 430, "manifold": 430, "judici": [430, 466, 1191], "do_complicated_stuff": 430, "cleanup_mess": 430, "cluster_c_program_flow": [431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "c_program_flow_loops_do_whil": [431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "c_program_flow_loops_while_and_for": [431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "c_program_flow_goto_and_label": [431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "c_program_flow_break_and_continu": [431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "c_program_flow_switch": [431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "c_program_flow_else_if": [431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "c_program_flow_if_els": [431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "c_program_flow_statements_and_block": [431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "vice": 432, "versa": 432, "g_lobal": [433, 434, 436], "print_g": [433, 434], "linkag": 434, "percept": [434, 873], "disciplin": [434, 456, 466, 476, 1142], "convent": [434, 478, 853, 897, 919, 957, 1034, 1049], "ifndef": [434, 436, 437, 479, 486, 580, 598, 604, 606, 607, 705, 706, 752, 1011, 1027, 1029], "g_h": 434, "programx": 435, "cautious": 436, "c99": [436, 1187], "slow": [436, 467, 471, 647, 943, 954], "have_c_h": 436, "clash": [436, 459], "include_onc": 436, "newbi": [436, 698], "hurdl": 436, "ifdef": [437, 494, 647], "defined": 437, "unequ": 437, "tempt": 437, "horror": 437, "do_much": 437, "do_thi": [437, 758], "do_that": [437, 758], "do_less": 437, "__pragma": 437, "4127": 437, "warn_if": 437, "statem": 437, "function_help": 437, "function_quit": 437, "function_": 437, "inject_viru": 437, "doomed_process": 437, "win32": [437, 1205], "foreign_mem": 437, "virtualallocex": 437, "mem_commit": 437, "page_execut": 437, "page_readwrit": 437, "infect": 437, "__file__": [437, 1035, 1169], "__line__": 437, "smell": [437, 491], "pest": 437, "cluster_c_functions_and_program_structur": [438, 444, 448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "c_functions_and_program_structure_c_preprocessor_advanc": [438, 444, 448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "c_functions_and_program_structure_c_preprocessor": [438, 444, 448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "c_functions_and_program_structure_bas": [438, 444, 448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "c_functions_and_program_structure_external_vari": [438, 444, 448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "c_functions_and_program_structure_static_vari": [438, 444, 448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "c_functions_and_program_structure_header_fil": [438, 444, 448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "dereferenc": [439, 707, 742, 746], "35129": 439, "calle": [440, 470, 472, 609, 1030], "tablet": 440, "excang": 441, "pa1": 442, "pa2": 442, "cluster_c_pointers_and_arrai": [444, 448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "c_pointers_and_arrays_exercise_swap": [444, 448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "c_pointers_and_arrays_pointers_and_function_argu": [444, 448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "c_pointers_and_arrays_pointers_and_address": [444, 448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "c_pointers_and_arrays_pointers_and_arrai": [444, 448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "c_pointers_and_arrays_command_line_argu": [444, 448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "scalar": [445, 460, 1083], "fantasi": [445, 934, 936], "p1": [445, 550, 596, 598, 604, 610, 612, 614, 615, 699], "p2": [445, 550, 596, 598, 604, 610, 612, 615, 699], "laid": 445, "makepoint": 446, "addpoint": [446, 462], "addtopoint": 446, "pid_t": [447, 980, 998, 1009], "cluster_c_structur": [448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "c_structures_bas": [448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "c_structures_structures_and_funct": [448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "c_structures_typedef": [448, 451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "dealloc": [449, 587, 739, 798, 825, 831], "ptr": [449, 572, 704, 752, 753, 754, 755], "do_something_with": [449, 697, 743], "list_init": 450, "list_destroi": 450, "list_insert": 450, "list_remov": 450, "list_count": 450, "list_print": 450, "keylen": 450, "cluster_c_memori": [451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "c_memory_exercise_linked_list": [451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "c_memory_malloc": [451, 455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "corollari": [452, 454, 760, 1043], "reorder": [452, 768, 821], "use_count": [452, 453, 753, 755, 785], "use_resourc": [452, 453], "do_something_with_shared_resourc": [452, 453], "conceiv": [452, 1060], "completion_flag": 452, "out_word": 452, "in_word": 452, "unforese": 452, "volatil": [453, 455, 464, 468, 473, 474, 696, 734, 762, 787, 789, 790, 847, 1009, 1187, 1190], "instr": [453, 471, 982, 1045], "pthread_mutex_t": [453, 766, 829, 982, 984], "use_count_mutex": 453, "pthread_mutex_initi": [453, 982], "pthread_mutex_lock": [453, 766, 982, 984], "pthread_mutex_unlock": [453, 766, 982, 984], "expens": [453, 460, 596, 609, 612, 702, 707, 743, 744, 753, 842, 979, 1189], "fetch_and_add": [453, 982], "__sync_fetch_and_add": [453, 763, 982, 983], "sheer": [453, 599], "neglig": 454, "penalti": 454, "memcpi": 454, "freeli": 454, "rearrang": [454, 646], "anim": 454, "textit": 454, "bogu": [454, 466, 607, 705, 706, 732, 943, 1009], "__pad0": 454, "__pad1": 454, "misalign": 454, "intrins": [455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "cluster_c_advanced_language_featur": [455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "c_advanced_language_features_volatil": [455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "c_advanced_language_features_atom": [455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "c_advanced_language_features_align": [455, 464, 468, 473, 474, 696, 734, 787, 789, 790], "matur": 456, "odditi": 456, "rectifi": 456, "fortran": 456, "lazy": [456, 737], "meant": [456, 1008], "shortcom": [456, 521, 682, 687, 690], "holidai": 456, "handcraft": [456, 504, 1070], "clariti": [457, 461, 966], "baud": 458, "idl": 458, "writing_request": 458, "reading_respons": 458, "wait_retri": 458, "protocol_engin": [458, 462], "deduc": [458, 694, 697, 722], "obligatori": 458, "anyhow": 458, "forgot": 458, "unambigu": [458, 694], "protocol_error": 458, "eat": [458, 466], "unintend": 460, "wwrite": 460, "max_bucket": 460, "pj": 460, "pointe": 460, "ppi": 460, "height": [461, 504, 613], "beman": 461, "daw": 461, "obfusc": 462, "ssize_t": [462, 554, 796, 955, 959, 960, 961, 963, 967, 968, 969, 970, 973, 975, 978, 1001, 1004, 1005, 1008], "send_fram": 462, "eng": 462, "send_sum": 462, "v_int32": 462, "spectacular": 462, "adequ": 462, "unix_error": 462, "app_error": 462, "unix_error_cr": 462, "unix_error_ok": 462, "uerr": 462, "app_error_cr": 462, "app_os_error": 462, "impact": [462, 466], "enhanc": [462, 870], "beyond": [463, 963], "consider": [463, 897], "slowdown": 463, "0x400552": 463, "0x51bb072": 463, "0x4c28c6d": 463, "vg_replace_malloc": [463, 604], "0x400545": 463, "loss": [463, 945], "rec": [463, 1126, 1128], "uncov": 463, "readabilti": [464, 468, 473, 474, 696, 734, 787, 789, 790], "explict": [464, 468, 473, 474, 790], "cluster_c_program_san": [464, 468, 473, 474, 696, 734, 787, 789, 790], "c_program_sanity_stat": [464, 468, 473, 474, 790], "c_program_sanity_discrete_valu": [464, 468, 473, 474, 696, 734, 787, 789, 790], "c_program_sanity_explicit_type_safeti": [464, 468, 473, 474, 790], "c_program_sanity_struct_initi": [464, 468, 473, 474, 790], "c_program_sanity_valgrind": [464, 468, 473, 474, 790], "c_program_sanity_integral_typ": [464, 468, 473, 474, 696, 734, 787, 789, 790], "c_program_sanity_introduct": [464, 468, 473, 474, 696, 734, 787, 789, 790], "c_program_sanity_const": [464, 468, 473, 474, 790], "hotspot": [465, 469], "checksum": [465, 945, 993], "externel": 465, "sha1sum": [465, 993, 996, 999], "8g": 465, "0m38": 465, "0m3": 465, "0m0": 465, "perceiv": 465, "daze": 465, "mp3": 465, "018": 465, "mult": 466, "rumour": 466, "uncondit": 466, "finlin": 466, "o3": [466, 481, 788, 1178], "heurist": 466, "o1": 466, "magnitud": [466, 467], "overus": [466, 508, 1048, 1189], "spill": 466, "fira": 466, "rtfm": [466, 1081, 1176], "compromis": [466, 476, 504], "transit": [466, 491], "fmove": 466, "outweigh": 466, "thrash": [466, 996, 1187], "understood": [466, 476, 553, 758, 837, 1191], "misnom": [466, 1085], "o0": [466, 481], "unagress": 466, "chew": [466, 768], "agress": 466, "muchnik": 466, "levin": 466, "nearbi": 467, "bounc": [467, 856], "4x3": 467, "rectangular": 467, "cluster_c_perform": [468, 473, 474, 790], "c_performance_memori": [468, 473, 474, 790], "c_performance_computebound": [468, 473, 474, 790], "c_performance_introduct": [468, 473, 474, 790], "bust": 469, "haul": 469, "cheater": 469, "fallibl": 469, "supplement": 469, "gprof": [469, 471, 472, 473, 474, 790, 1187], "callgrind": [469, 472, 473, 474, 790, 1187], "oprofil": [469, 473, 474, 790, 1187], "gmon": 470, "spot": 470, "38000000": 470, "find_dupl": [470, 472], "criterion": [470, 637], "37000000": 470, "luck": [470, 941, 1032, 1034], "gprof2dot": 470, "tjpeg": 470, "predict": [471, 472, 1139, 1141, 1142], "sluggishli": 471, "16761": 471, "callgrind_annot": 471, "atstart": 471, "callgrind_control": 471, "nmi": 472, "ophelp": 472, "operf": 472, "oprofile_data": 472, "opreport": 472, "opannot": 472, "oparch": 472, "opgprof": 472, "Their": 472, "2085": 472, "2505": 472, "maskabl": 472, "callgraph": 472, "pxe": 472, "vmlinux": [472, 812], "debuginfo": 472, "userland": [472, 796], "routin": [472, 478, 583, 788, 829, 835, 840, 961, 997, 1029, 1130, 1132], "analyz": 472, "jcf": [472, 837, 863], "jxf": [472, 837, 863], "gdf": 472, "op2calltre": 472, "oprof": 472, "applet": 472, "viewabl": [472, 485], "kcachegrind": 472, "cluster_c_profil": [473, 474, 790], "c_profiling_oprofil": [473, 474, 790], "c_profiling_callgrind": [473, 474, 790], "c_profiling_gprof": [473, 474, 790], "c_profiling_introduct": [473, 474, 790], "worker": [476, 702], "consensu": [476, 499], "consent": [476, 1055], "male": [476, 1098], "prcess": 476, "obei": [476, 478], "antipattern": [476, 504], "gonna": 476, "indecis": [476, 1192], "road": 476, "manufactur": [476, 943], "pcb": [476, 941], "bom": 476, "requiremenet": 476, "yyyi": 477, "testabl": [477, 1170], "yagni": 477, "fraunhof": 477, "make_categori": 478, "outputfil": 478, "to_datetim": 478, "make_float": 478, "orpheum": 478, "goingout": 478, "hervi": 478, "sport": 478, "card": [478, 837, 866, 901, 903, 908, 909], "to_csv": 478, "read_from_csv": 478, "write_to_csv": 478, "clean_data": 478, "csvname_or_list_thereof": 478, "workaround": [478, 695, 698, 810, 1169], "read_from_dir": 478, "re_yyyy_mm": 478, "inputdir": 478, "libreoffic": 478, "monolith": [478, 1011], "factor": [478, 805, 806, 837], "test_data_clean": 478, "test_make_float": 478, "1999": 478, "test_date_convers": 478, "at666666666666666666": 478, "000009173": 478, "bawaatwwxxx": 478, "at211420020010848041": 478, "ausgleich": 478, "firmenkonto": 478, "test_input": 478, "read_from_csv_singl": 478, "read_from_csv_multipl": 478, "deliber": 478, "test_read_csv_singl": 478, "000009284": 478, "2371": 478, "000009283": 478, "at613400000005077508": 478, "world4you": 478, "writelin": [478, 1085, 1131, 1133], "test_read_csv_multipl": 478, "lines_2023_02": 478, "lines_2023_01": 478, "000009229": 478, "4111": 478, "bp": 478, "tankstel": 478, "000009228": 478, "at081400086210003454": 478, "\u00f6sterreichisch": 478, "gesundheitskass": 478, "_write_csv": 478, "read_from_csv_dir": 478, "test_read_csv_dir": 478, "testutil": 478, "write_csv": 478, "test_category_csv": 478, "000009168": 478, "000009169": 478, "2801": 478, "strassenbahn": 478, "eas": [478, 1148], "finer": 478, "refact": 478, "str_categori": 478, "cardunknown": 478, "flughafen": 478, "wien": 478, "test_more_of_it": 478, "000009153": 478, "parken": 478, "fl": 478, "inputread": 478, "recursivecsvinputread": 478, "singlecsvinputread": 478, "compositeinputread": 478, "input_abc": 478, "abstractmethod": [478, 1047], "multiplecsvinputread": 478, "test_input_abc": 478, "cmake_minimum_requir": [479, 1013, 1178], "identif": [479, 941, 1012, 1013], "abi": [479, 489, 815, 817, 957, 1012, 1013], "hello_nam": [479, 485], "hello_name_h": 479, "democonfig": [480, 482, 486, 487, 488], "libhello": [480, 481, 482, 484, 487, 490], "configure_fil": 480, "demo_version_major": 480, "demo_version_minor": 480, "cmake_current_binary_dir": 480, "demo_major": 480, "demo_minor": 480, "include_directori": [480, 491], "overkil": 480, "cmake_cxx_standard": [481, 1178], "dndebug": 481, "cmake_": 481, "_compiler_id": 481, "IF": [481, 486, 487, 488], "g3": 481, "strequal": 481, "cmake_c_compiler_id": 481, "cmake_c_flag": [481, 1178], "cmake_cxx_compiler_id": 481, "cmake_cxx_flag": [481, 1178], "howdi": [481, 605, 736, 738, 739, 877, 881, 967, 968, 970, 1052], "bullshithowdi": 481, "fatal_error": 481, "send_error": 481, "attract": [481, 698], "findsqlite3": 482, "sqlite3_include_dir": 482, "sqlite3_librari": 482, "typo": [482, 1048, 1049], "sqlite3_vers": 482, "sqlite3_found": 482, "olden": 482, "0x00007f76ae011000": 482, "libz": 482, "0x00007f76adef7000": 482, "cluster_cmak": [483, 790], "cmake_bas": [483, 790], "cmake_shared_libraries_preview": [483, 790], "cmake_librari": [483, 790], "cmake_optional_code_approach_1": [483, 790], "cmake_optional_code_problem": [483, 790], "cmake_cxx_and_r": [483, 790], "cmake_structur": [483, 790], "cmake_optional_code_approach_2": [483, 790], "cmake_targets_properti": [483, 790], "cmake_instal": [483, 790, 1012, 1013], "cmake_configure_fil": [483, 790], "cmake_external_depend": [483, 790], "cmake_test": [483, 790], "cmake_install_prefix": 484, "set_properti": [484, 489], "dbuild_shared_lib": [484, 489], "ON": [484, 487, 488, 489, 543, 544, 549, 995], "readelf": [484, 1011, 1023, 1028], "0x0000000000000001": [484, 1028], "0x000000000000001d": 484, "0x00007f773aefe000": 484, "ldconfig": [484, 1184], "sonam": [484, 489], "add_librari": [485, 487, 489, 491, 537, 582, 591, 1012, 1013], "0x29": 485, "collect2": [485, 671, 1028], "acycl": [485, 1013, 1027], "dag": 485, "jul": [485, 489], "tpng": [485, 1013], "descend": [486, 487, 488, 490, 537, 898, 1005], "use_blacklist": [486, 487], "macro_use_blacklist": [486, 488], "demo_use_blacklist": [486, 487], "namegreet": 486, "_blacklist": 486, "implic": [486, 821, 893, 954], "sayhello": 486, "is_forbidden": 486, "_name": [486, 527, 530, 534, 535, 536], "goodby": [486, 1009], "use_backlist": 486, "condition": 486, "duse_blacklist": [487, 488], "target_compile_opt": [487, 491], "manyfold": 488, "target_compile_definit": [488, 491], "lightli": 488, "symlink": [489, 788, 941, 1171, 1195], "build_shared_lib": 489, "qf": 489, "libboost_regex": 489, "lrwxrwxrwx": [489, 919, 941, 942, 943, 977, 1011], "rwxr": [489, 882, 884, 885, 894, 1011, 1023, 1062], "289264": 489, "temporarili": [489, 998, 1011], "project_vers": 489, "makefile2": 490, "compile_definit": 491, "dname": 491, "compile_opt": 491, "widest": 491, "asymmetr": 491, "enable_test": 492, "toplavel": 492, "set_tests_properti": [492, 1175, 1178], "pass_regular_express": 492, "ctest": 492, "cdash": 492, "kitwar": 492, "socialdb": [493, 496, 500, 525, 531], "i2csensor_vendor1": [494, 523], "0x37": 494, "suddenli": [494, 837, 877, 1144], "vener": [494, 515, 597, 612, 740], "pour": [494, 863], "damag": [494, 1158], "slip": 494, "cascad": 494, "i2csensor": [494, 508, 523], "create_i2c_sensor": 494, "i2csensorfactori": 494, "speak": [494, 924, 942, 1039, 1064], "vendor1": [494, 523], "abstract_factory_suit": 494, "instantiate_vendor1": 494, "i2csensorfactory_vendor1": 494, "i2c_factory_vendor1": 494, "i2c_sensor": 494, "assert_tru": [494, 549, 550, 555, 560, 562, 567, 596, 598, 613, 614, 615, 616, 699, 753, 754, 770, 788, 1176], "dynamic_cast": [494, 521, 535], "a_sensor": [494, 704], "vendor2": [494, 523], "instantiate_vendor2": 494, "i2csensorfactory_vendor2": [494, 523], "i2c_factory_vendor2": 494, "i2csensor_vendor2": [494, 523], "pu": 494, "tinto": 494, "fahrenheitsensor": [495, 524], "get_temperature_f": [495, 524], "formula": 495, "adapter_suit": 495, "constantfahrenheitsensor": 495, "assert_float_eq": [495, 498, 499, 501, 518, 519, 545, 546, 547, 548, 550, 553, 554, 565, 596, 598, 615, 701, 704, 770], "fahrenheitsensor_adapt": [495, 524], "adapter__is_a__sensor": 495, "adapter__knows__an_a_sensor": 495, "variablefahrenheitsensor": 495, "initial_valu": 495, "_valu": [495, 530], "change_temperatur": [495, 545, 553, 554], "adapter__definitely_knows__a_sensor__hel": 495, "multitud": 496, "socialdbcommand": [496, 525], "command_suit": 496, "2345110695": [496, 655], "socialdbinsertcommand": [496, 525], "3456060486": [496, 655], "insert_by_bas": 496, "socialdbfindcommand": [496, 525], "socialdbdropcommand": [496, 525], "notfound": [496, 497, 525, 687, 688, 689], "assert_throw": [496, 503, 788], "notinsert": [496, 497, 525], "bulkinsert": 496, "bulk_insert": 496, "socialdbbulkinsertcommand": [496, 525], "bic": 496, "std_initializer_list": 496, "bulk_insert__std_initializer_list": 496, "_msg": 497, "c_str": [497, 532, 554, 700, 705, 706, 1008], "_db": 497, "hypthet": 498, "composite_suit": 498, "cs1": 498, "cs2": 498, "recompil": [499, 1028], "decorator_suit": 499, "average_with_base_sensor": 499, "decoratedsensor": [499, 527], "propon": 499, "diagnost": [499, 628, 631], "decorated_sensor_const_added_function": 499, "decorated_sensor_random_added_function": 499, "decorated_sensor_const__is_a__sensor": 499, "decorated_sensor_random__is_a__sensor": 499, "assert_g": [499, 548, 565], "assert_l": [499, 548, 565], "average_with_decorated_sensor": 499, "mtqueue": [500, 518], "devis": 500, "notifi": [500, 766, 958, 1005, 1152], "cluster_cxx_design_pattern": [500, 514, 542, 594, 790], "cluster_cxx03": [500, 514, 542, 543, 544, 545, 546, 547, 548, 549, 552, 559, 561, 594, 602, 617, 620, 623, 639, 645, 649, 657, 658, 659, 661, 662, 664, 667, 673, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 703, 734, 750, 759, 767, 775, 787, 789, 790], "cluster_cxx03_inheritance_oo": [500, 514, 542, 552, 594, 667, 691, 775, 789, 790], "cluster_cxx03_data_encapsul": [500, 514, 542, 543, 544, 545, 546, 547, 548, 549, 552, 559, 561, 594, 602, 617, 620, 623, 639, 645, 649, 658, 661, 662, 667, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 703, 734, 750, 759, 767, 775, 787, 789, 790], "cluster_linux": [500, 514, 542, 543, 544, 545, 546, 547, 548, 549, 552, 594, 767, 789, 790, 794, 797, 799, 802, 804, 807, 809, 811, 813, 814, 816, 818, 820, 822, 824, 826, 828, 830, 832, 834, 836, 838, 841, 843, 846, 848, 852, 855, 858, 860, 864, 865, 866, 867, 870, 871, 878, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 917, 927, 933, 939, 940, 945, 946, 947, 948, 949, 956, 962, 964, 972, 974, 976, 988, 991, 994, 996, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022], "cluster_linux_bas": [500, 514, 542, 543, 544, 545, 546, 547, 548, 549, 552, 594, 767, 789, 790, 860, 864, 865, 866, 867, 870, 871, 878, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 917, 927, 933, 945, 946, 947, 948, 949, 956, 962, 964, 972, 974, 988, 991, 994, 996, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022], "cluster_linux_basics_intro": [500, 514, 542, 543, 544, 545, 546, 547, 548, 549, 552, 594, 767, 789, 790, 860, 864, 865, 866, 867, 870, 871, 878, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 917, 927, 933, 945, 946, 947, 948, 949, 956, 962, 964, 972, 974, 988, 991, 994, 996, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022], "cluster_linux_basics_shel": [500, 514, 542, 543, 544, 545, 546, 547, 548, 549, 552, 594, 767, 789, 790, 860, 864, 865, 866, 867, 870, 871, 878, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 917, 927, 933, 956, 962, 964, 972, 974, 988, 991, 994, 996, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022], "cluster_linux_toolchain": [500, 514, 542, 543, 544, 545, 546, 547, 548, 549, 552, 594, 767, 789, 790, 867, 870, 871, 933, 956, 962, 964, 972, 974, 988, 991, 994, 996, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022], "cluster_cxx": [500, 514, 542, 543, 544, 545, 546, 547, 548, 549, 552, 559, 561, 594, 790], "cluster_cxx_exercis": [500, 514, 542, 543, 544, 545, 546, 547, 548, 549, 552, 559, 561, 594, 790], "cluster_cxx_exercises_design_pattern": [500, 514, 542, 594, 790], "cxx_design_patterns_oo_principl": [500, 790], "cxx_design_patterns_uml": [500, 514, 542, 594, 790], "cxx03_inheritance_oo_interfac": [500, 514, 542, 552, 594, 667, 691, 775, 789, 790], "cxx_design_patterns_heating_screenplai": [500, 790], "cxx_design_patterns_adapt": [500, 514, 542, 594, 790], "cxx_design_patterns_sensor_hierarchi": [500, 514, 542, 594, 790], "cxx_design_patterns_proxi": [500, 514, 542, 594, 790], "cxx_design_patterns_singleton": [500, 514, 542, 594, 790], "cxx_design_patterns_observ": [500, 514, 542, 594, 790], "cxx_design_patterns_decor": [500, 514, 542, 594, 790], "cxx_design_patterns_abstract_factori": [500, 514, 542, 594, 790], "cxx_design_patterns_command": [500, 514, 542, 594, 790], "cxx_design_patterns_composit": [500, 514, 542, 594, 790], "cxx_exercises_design_patterns_proxy_round": [500, 514, 542, 594, 790], "cxx_design_patterns_interpret": [500, 514, 542, 594, 790], "cxx03_introduct": [500, 514, 542, 543, 544, 545, 546, 547, 548, 549, 552, 559, 561, 594, 602, 617, 620, 623, 639, 645, 649, 658, 661, 662, 667, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 703, 734, 750, 759, 767, 775, 787, 789, 790], "cxx03_inheritance_oo_virtual_method": [500, 514, 542, 552, 594, 667, 691, 775, 789, 790], "cxx03_inheritance_oo_bas": [500, 514, 542, 552, 594, 667, 691, 775, 789, 790], "cxx03_inheritance_oo_polymorph": [500, 514, 542, 552, 594, 667, 691, 775, 789, 790], "cxx03_inheritance_oo_virtual_destructor": [500, 514, 542, 552, 594, 667, 691, 775, 789, 790], "cxx03_data_encapsulation_classes_object": [500, 514, 542, 543, 544, 545, 546, 547, 548, 549, 552, 559, 561, 594, 602, 617, 620, 623, 639, 645, 649, 658, 661, 662, 667, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 703, 734, 750, 759, 767, 775, 787, 789, 790], "cxx03_inheritance_oo_destructor": [500, 514, 542, 552, 594, 667, 691, 775, 789, 790], "cxx03_data_encapsulation_ctor_dtor": [500, 514, 542, 552, 594, 602, 667, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 703, 734, 750, 759, 767, 775, 787, 789, 790], "cxx03_data_encapsulation_c": [500, 514, 542, 543, 544, 545, 546, 547, 548, 549, 552, 559, 561, 594, 602, 617, 620, 623, 639, 645, 649, 658, 661, 662, 667, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 703, 734, 750, 759, 767, 775, 787, 789, 790], "cxx03_data_encapsulation_ctor_custom": [500, 514, 542, 545, 548, 552, 594, 602, 667, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 703, 734, 750, 759, 767, 775, 787, 789, 790], "cxx03_data_encapsulation_ctor_default": [500, 514, 542, 552, 594, 602, 667, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 703, 734, 750, 759, 767, 775, 787, 789, 790], "linux_basics_intro_process": [500, 514, 542, 543, 544, 545, 546, 547, 548, 549, 552, 594, 767, 789, 790, 864, 865, 866, 867, 870, 871, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 901, 902, 903, 904, 905, 906, 907, 908, 909, 911, 912, 913, 914, 915, 917, 933, 945, 946, 947, 948, 949, 956, 962, 964, 972, 974, 988, 991, 994, 996, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022], "linux_basics_intro_overview": [500, 514, 542, 543, 544, 545, 546, 547, 548, 549, 552, 594, 767, 789, 790, 860, 864, 865, 866, 867, 870, 871, 878, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 917, 927, 933, 945, 946, 947, 948, 949, 956, 962, 964, 972, 974, 988, 991, 994, 996, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022], "linux_basics_shell_commandlin": [500, 514, 542, 543, 544, 545, 546, 547, 548, 549, 552, 594, 767, 789, 790, 860, 864, 865, 866, 867, 870, 871, 878, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 917, 927, 933, 956, 962, 964, 972, 974, 988, 991, 994, 996, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022], "linux_basics_shell_path": [500, 514, 542, 543, 544, 545, 546, 547, 548, 549, 552, 594, 767, 789, 790, 864, 865, 866, 867, 870, 871, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 917, 933, 956, 962, 964, 972, 974, 988, 991, 994, 996, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022], "linux_basics_shell_file_dir_create_rm": [500, 514, 542, 543, 544, 545, 546, 547, 548, 549, 552, 594, 767, 789, 790, 864, 865, 866, 867, 870, 871, 892, 901, 902, 903, 904, 905, 906, 907, 908, 909, 911, 917, 933, 956, 962, 964, 972, 974, 988, 991, 994, 996, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022], "linux_basics_shell_cwd": [500, 514, 542, 543, 544, 545, 546, 547, 548, 549, 552, 594, 767, 789, 790, 864, 865, 866, 867, 870, 871, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 901, 902, 903, 904, 905, 906, 907, 908, 909, 911, 912, 913, 914, 915, 917, 933, 956, 962, 964, 972, 974, 988, 991, 994, 996, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022], "linux_toolchain_cmake_loc": [500, 514, 542, 543, 544, 545, 546, 547, 548, 549, 552, 594, 790, 933, 1013, 1021], "linux_toolchain_static_librari": [500, 514, 542, 543, 544, 545, 546, 547, 548, 549, 552, 594, 790, 933, 1013, 1016, 1018, 1019, 1021], "linux_toolchain_separate_compil": [500, 514, 542, 543, 544, 545, 546, 547, 548, 549, 552, 594, 790, 933, 1013, 1016, 1017, 1018, 1019, 1021], "linux_toolchain_bas": [500, 514, 542, 543, 544, 545, 546, 547, 548, 549, 552, 594, 767, 789, 790, 867, 870, 871, 933, 956, 962, 964, 972, 974, 988, 991, 994, 996, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022], "cxx_exercises_sensor_interfac": [500, 514, 542, 552, 594, 790], "sensorread": 501, "chrono_liter": [501, 694, 766, 768, 769], "demologg": 501, "cerr": [501, 540, 619, 688, 758, 768, 941, 975, 978], "demovaluestor": 501, "_store": 501, "namedsensor": 501, "_logger": 501, "_value_stor": 501, "sensora": 501, "sensorb": 501, "sensorc": 501, "200000": [501, 942, 1141], "this_thread": [501, 694, 755, 766, 768], "sleep_for": [501, 694, 755, 766, 768], "12597": 501, "valuestor": 501, "2895": 501, "158243": 501, "cassert": [501, 643, 684, 687, 689, 695, 768], "boss": 501, "v3": 501, "abort": [501, 520, 521, 604, 732, 955], "mocklogg": 501, "lines_log": 501, "mockvaluestor": 501, "sensorreader_suit": 501, "141320": 501, "memcheck": [501, 604, 753], "detector": [501, 604, 753], "myobserv": 503, "socialdb_observ": [503, 531], "newcitizenobserv": [503, 531], "new_citizen": 503, "_new_citizen_svnr": 503, "new_citizen_ad": [503, 531], "observer_suit": 503, "register_on": 503, "register_new_citizen_notif": [503, 531], "register_mani": 503, "observer1": 503, "observer2": 503, "register_dupl": 503, "observeralreadyregist": [503, 531], "unregister_new_citizen_notif": [503, 531], "unregister_not_regist": 503, "observernotregist": [503, 531], "addict": [504, 876, 897, 1162, 1170], "bertrand": 504, "barbara": 504, "polish": 504, "be_sick": 507, "insur": [507, 520, 521, 522, 534, 535, 536], "teardown": [507, 554, 1032, 1170, 1180, 1182], "purest": 508, "lightest": 508, "pidcontrol": 508, "cluster_cxx_exercises_design_patterns_solut": [514, 542, 594, 790], "cxx_exercises_design_patterns_proxy_remot": [514, 542, 594, 790], "cxx_exercises_design_patterns_adapt": [514, 542, 594, 790], "cxx_exercises_design_patterns_singleton_flex": [514, 542, 594, 790], "cxx_exercises_design_patterns_singleton_inflex": [514, 542, 594, 790], "cxx_exercises_design_patterns_observ": [514, 542, 594, 790], "cxx_exercises_design_patterns_interpreter_bas": [514, 542, 594, 790], "cxx_exercises_design_patterns_singleton_flexible_strict": [514, 542, 594, 790], "cxx_exercises_design_patterns_command": [514, 542, 594, 790], "cxx_exercises_design_patterns_abstract_factori": [514, 542, 594, 790], "cxx_exercises_design_patterns_composit": [514, 542, 594, 790], "cxx_exercises_design_patterns_interpreter_and_adapt": [514, 542, 594, 790], "cxx_exercises_design_patterns_decor": [514, 542, 594, 790], "cxx_exercises_design_patterns_solutions_proxy_remot": [514, 542, 594, 790], "cxx_exercises_design_patterns_solutions_singleton_flexible_strict": [514, 542, 594, 790], "cxx_exercises_design_patterns_solutions_abstract_factori": [514, 542, 594, 790], "cxx_exercises_design_patterns_solutions_interpreter_and_adapt": [514, 542, 594, 790], "cxx_exercises_design_patterns_solutions_singleton_inflex": [514, 542, 594, 790], "cxx_exercises_design_patterns_solutions_composit": [514, 542, 594, 790], "cxx_exercises_design_patterns_solutions_adapt": [514, 542, 594, 790], "cxx_exercises_design_patterns_solutions_proxy_round": [514, 542, 594, 790], "cxx_exercises_design_patterns_solutions_singleton_flex": [514, 542, 594, 790], "cxx_exercises_design_patterns_solutions_observ": [514, 542, 594, 790], "cxx_exercises_design_patterns_solutions_interpreter_bas": [514, 542, 594, 790], "cxx_exercises_design_patterns_solutions_decor": [514, 542, 594, 790], "cxx_exercises_design_patterns_solutions_command": [514, 542, 594, 790], "cla": 515, "roundingsensor": [515, 519, 533], "r1": [515, 616, 707], "r2": [515, 616, 707], "r3": 515, "sensorvalueexpress": [515, 529], "e1_e2": 515, "e1_e2_e3": 515, "num_measur": 515, "v_avg": 515, "v_ass": 515, "combinatin": 516, "interpreter_suit": 516, "e_lh": 516, "e_rh": 516, "e_add": 516, "e_sub": 516, "mul": 516, "e_mul": 516, "e_div": 516, "arithemet": 516, "arith": [516, 588, 589, 625, 626, 627, 628, 633], "combined_arith": 516, "l7": 516, "a_7_plus_3": 516, "s_3_minus_1": 516, "variable_not_set": 516, "analogi": [516, 540, 943, 1005, 1045], "assignment_valu": 516, "variable_assign": 516, "ass": 516, "variable_used_as_express": 516, "ass_v1": 516, "ass_v2": 516, "reachabl": [518, 753, 941, 943], "remoteadapt": [518, 532], "response_promis": 518, "_adapt": 518, "_queue": [518, 766], "_thread": 518, "fulfil": [518, 553], "proxy_remote_suit": 518, "_c": 518, "remotesensoradapt": [518, 532], "remotesensor": [518, 532], "remote_sensor__is_a__sensor": 518, "somth": 518, "simplist": 518, "fullfil": 519, "proxy_round_suit": 519, "round_down": 519, "round_up": 519, "rouding_sensor__is_a__sensor": 519, "advis": [520, 1132], "hypothet": [520, 552, 553, 603, 934], "fee": 520, "socialinsur": [520, 521, 522, 536], "oegk": [520, 521], "startup": [520, 521, 522, 534, 869, 1005, 1011, 1043], "set_inst": [520, 521, 534], "make_uniqu": [520, 534, 786], "socinsur": [521, 535], "inisur": 521, "reimplement": [521, 690], "compiabl": [521, 535], "iface_inst": [521, 535], "svs_instanc": [521, 535], "oegk_inst": [521, 535], "another_inst": [521, 522, 535, 536], "1485": [521, 522], "unset": [521, 984], "sozialversicherung": [522, 536], "unrealist": 522, "adapte": 524, "_adapte": 524, "_svnr": 525, "_firstnam": [525, 655, 1055], "_lastnam": [525, 655, 1055], "_result": 525, "_command": 525, "get_if": [525, 780], "decoratedconstantsensor": 527, "sstream": [527, 532, 614, 616], "iomanip": 527, "ostringstream": [527, 532, 613, 614, 615, 616], "decoratedrandomsensor": 527, "_variabl": 530, "_lh": 530, "_rh": 530, "_context": 530, "_var": 530, "_exp": 530, "stdexcept": [530, 532, 534, 535, 536, 554, 788], "_new_citizen_observ": 531, "num_eras": 531, "_server": 532, "cstdio": 532, "num_item": 532, "sscanf": 532, "cmath": [533, 598, 606, 607, 615, 701, 717, 718, 719, 720, 757], "_instanc": [534, 535, 536], "_databas": [534, 535, 536], "0l": [534, 535], "cstdlib": [535, 554], "ssocinsur": 535, "toi": [537, 694, 1009], "millidegre": 537, "parameteriz": [538, 1138], "loop_and_measur": 538, "niter": 538, "counterpart": 539, "stod": 540, "uniform_real_distribut": [540, 548, 752], "default_random_engin": [540, 548, 752], "random_devic": [540, 548, 752], "_distribut": [540, 752], "_engin": [540, 752, 1158], "_y": [540, 598, 599, 601, 603, 605, 606, 607, 608, 610, 612, 622, 637, 701, 716, 718, 719, 720], "spit": [540, 1144], "cluster_cxx03_stl": [542, 559, 561, 594, 639, 645, 649, 657, 658, 659, 661, 662, 679, 686, 687, 688, 689, 690, 691, 790], "cluster_cxx03_stl_algorithm": [542, 559, 594, 639, 658, 661, 662, 691, 790], "cluster_cxx03_stl_associative_contain": [542, 559, 561, 594, 649, 658, 662, 691, 790], "cluster_cxx03_templ": [542, 559, 561, 594, 623, 639, 645, 649, 658, 661, 662, 679, 686, 687, 688, 689, 690, 691, 790], "cluster_cxx03_functions_and_method": [542, 559, 561, 594, 617, 620, 623, 639, 645, 649, 658, 661, 662, 676, 677, 679, 680, 682, 683, 684, 686, 687, 688, 689, 690, 691, 703, 734, 750, 759, 767, 787, 789, 790], "cluster_cxx03_except": [542, 559, 561, 594, 620, 623, 639, 645, 649, 658, 661, 662, 679, 686, 687, 688, 689, 690, 691, 790], "cluster_linux_basics_permiss": [542, 594, 767, 789, 790, 867, 870, 871, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 933, 962, 964, 972, 974, 988, 991, 994, 996], "cluster_linux_sysprog": [542, 594, 767, 789, 790, 867, 870, 871, 933, 956, 962, 964, 972, 974, 976, 988, 991, 994, 996], "cluster_linux_sysprog_bas": [542, 594, 767, 789, 790, 867, 870, 871, 933, 956, 962, 964, 972, 974, 988, 991, 994, 996], "cluster_linux_sysprog_fileio": [542, 594, 767, 789, 790, 867, 870, 871, 933, 962, 964, 972, 974, 988, 991, 994, 996], "cluster_cxx_exercises_stl": [542, 559, 561, 594, 790], "cluster_cxx_exercises_stl_sensor_repositori": [542, 559, 561, 594, 790], "cluster_cxx_exercises_fh_sensor_first_tri": [542, 594, 790], "cxx03_stl_basic": [542, 559, 561, 594, 639, 645, 649, 658, 661, 662, 679, 686, 687, 688, 689, 690, 691, 790], "cxx03_templates_class_templ": [542, 559, 561, 594, 623, 639, 645, 649, 658, 661, 662, 679, 686, 687, 688, 689, 690, 691, 790], "cxx03_stl_vector_copy_etc": [542, 559, 594, 658, 662, 691, 790], "cxx03_stl_algorithm_copi": [542, 559, 594, 639, 658, 662, 691, 790], "cxx03_stl_algorithm_find": [542, 559, 594, 639, 658, 662, 691, 790], "cxx03_stl_associative_containers_map": [542, 559, 561, 594, 649, 658, 662, 691, 790], "cxx03_stl_associative_containers_bas": [542, 559, 561, 594, 649, 658, 662, 691, 790], "cxx03_templates_function_templ": [542, 559, 561, 594, 623, 639, 645, 649, 658, 661, 662, 679, 686, 687, 688, 689, 690, 691, 790], "cxx03_exceptions_try_catch": [542, 559, 561, 594, 620, 623, 639, 645, 649, 658, 661, 662, 679, 686, 687, 688, 689, 690, 691, 790], "cxx03_functions_and_methods_const": [542, 559, 561, 594, 617, 620, 623, 639, 645, 649, 658, 661, 662, 679, 682, 683, 686, 687, 688, 689, 690, 691, 703, 734, 750, 759, 767, 787, 789, 790], "cxx03_functions_and_methods_method": [542, 559, 561, 594, 617, 620, 623, 639, 645, 649, 658, 661, 662, 679, 680, 682, 683, 684, 686, 687, 688, 689, 690, 691, 703, 734, 750, 759, 767, 787, 789, 790], "cxx03_functions_and_methods_overload": [542, 559, 561, 594, 617, 620, 623, 639, 645, 649, 658, 661, 662, 676, 677, 679, 680, 682, 683, 684, 686, 687, 688, 689, 690, 691, 703, 734, 750, 759, 767, 787, 789, 790], "cxx03_functions_and_methods_stat": [542, 559, 561, 594, 617, 620, 623, 639, 645, 649, 658, 661, 662, 679, 686, 687, 688, 689, 690, 691, 790], "cxx03_functions_and_methods_refer": [542, 559, 561, 594, 617, 620, 623, 639, 645, 649, 658, 661, 662, 679, 682, 683, 686, 687, 688, 689, 690, 691, 703, 734, 750, 759, 767, 787, 789, 790], "cxx03_functions_and_methods_thi": [542, 559, 561, 594, 617, 620, 623, 639, 645, 649, 658, 661, 662, 679, 682, 683, 686, 687, 688, 689, 690, 691, 703, 734, 750, 759, 767, 787, 789, 790], "cxx03_functions_and_methods_oper": [542, 559, 561, 594, 617, 620, 623, 639, 645, 649, 658, 661, 662, 679, 686, 687, 688, 689, 690, 691, 790], "cxx03_data_encapsulation_initializer_list": [542, 545, 548, 594, 602, 691, 790], "cxx03_exceptions_bas": [542, 559, 561, 594, 620, 623, 639, 645, 649, 658, 661, 662, 679, 686, 687, 688, 689, 690, 691, 790], "linux_basics_permissions_bas": [542, 594, 767, 789, 790, 867, 870, 871, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 933, 962, 964, 972, 974, 988, 991, 994, 996], "linux_basics_shell_l": [542, 594, 767, 789, 790, 864, 865, 866, 867, 870, 871, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 901, 904, 905, 908, 909, 911, 912, 913, 914, 915, 917, 933, 962, 964, 972, 974, 988, 991, 994, 996], "linux_sysprog_basics_syscal": [542, 594, 767, 789, 790, 867, 870, 871, 933, 956, 962, 964, 972, 974, 988, 991, 994, 996], "linux_sysprog_basics_groupnod": [542, 594, 767, 789, 790, 867, 870, 871, 933, 956, 962, 964, 972, 974, 988, 991, 994, 996], "linux_sysprog_basics_errorhandl": [542, 594, 767, 789, 790, 867, 870, 871, 933, 956, 962, 964, 972, 974, 988, 991, 994, 996], "linux_sysprog_fileio_exercise_w1_sensor": [542, 594, 790, 933, 972, 974, 991], "linux_sysprog_fileio_bas": [542, 594, 767, 789, 790, 867, 870, 871, 933, 962, 964, 972, 974, 988, 991, 994, 996], "cxx_exercises_oo_shap": [542, 594, 790], "cxx_exercises_sensor_w1_factori": [542, 594, 790], "cxx_exercises_sensor_w1": [542, 594, 790], "cxx_exercises_sensor_mock_nopoli": [542, 543, 544, 545, 547, 594, 790], "cxx_exercises_hysteresis_nopoli": [542, 544, 594, 790], "cxx_exercises_switch_mock_nopoli": [542, 543, 544, 549, 594, 790], "cxx_exercises_sensor_const_nopoli": [542, 546, 548, 594, 790], "cxx_exercises_display_led_stripe_nopoli": [542, 543, 594, 790], "cxx_exercises_sensor_avg_nopoli": [542, 545, 594, 790], "cxx_exercises_sensor_random_nopoli": [542, 548, 594, 790], "cxx_exercises_stl_algo": [542, 559, 594, 790], "cxx_exercises_stl_vector": [542, 559, 594, 790], "cxx_exercises_stl_uniq": [542, 559, 594, 790], "cxx_exercises_stl_filter_gener": [542, 559, 594, 790], "cxx_exercises_stl_filter_odd": [542, 559, 594, 790], "cxx_exercises_stl_filter_greater_10": [542, 559, 594, 790], "cxx_exercises_stl_map": [542, 559, 561, 594, 790], "cxx_exercises_stl_sensor_repository_insert_no_overwrit": [542, 559, 561, 594, 790], "cxx_exercises_stl_sensor_repository_insert_sunni": [542, 559, 561, 594, 790], "cxx_exercises_stl_sensor_repository_remove_not_found": [542, 559, 561, 594, 790], "cxx_exercises_stl_sensor_repository_remove_sunni": [542, 559, 561, 594, 790], "cxx_exercises_stl_sensor_repository_lookup_sunni": [542, 559, 561, 594, 790], "cxx_exercises_stl_sensor_repository_memory_leak": [542, 559, 561, 594, 790], "cxx_exercises_stl_sensor_repository_size_const": [542, 559, 561, 594, 790], "cxx_exercises_stl_sensor_repository_lookup_not_found": [542, 559, 561, 594, 790], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo_loop_funct": [542, 594, 790], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo": [542, 594, 790], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo_random_sensor": [542, 594, 790], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo_no_polymorph": [542, 594, 790], "mockswitch_nopoli": [543, 544, 549], "display_led_stripe_nopoly_suite__somewhere_in_the_middl": 543, "nopoli": [543, 544, 545, 546, 547, 548, 549], "display_led_stripe_nopoly_suit": 543, "somewhere_in_the_middl": 543, "sw0": 543, "sw1": 543, "sw2": 543, "sw3": 543, "sw4": 543, "sw5": 543, "sw6": 543, "sw7": 543, "display_led_stripe_nopoly_suite__below_rang": 543, "below_rang": 543, "display_led_stripe_nopoly_suite__above_rang": 543, "above_rang": 543, "display_led_stripe_nopoly_suite__mov": 543, "movement": [543, 934], "set_temperatur": [543, 544, 545, 547], "display_led_stripe_nopoly_suite__vari": 543, "variation_2_switch": 543, "variation_interval_not_from_0": 543, "thermostat": 544, "threshold": 544, "nop_when_within_rang": 544, "hysteresis_suit": 544, "hyst": 544, "falls_below_rang": 544, "rises_above_rang": 544, "rises_above_range_when_on": 544, "sensor_avg_nopoly_suit": 545, "sensor_const_nopoly_suit": 546, "subsequ": 547, "sensor_mock_nopoly_suit": 547, "sensor_random_suit": [548, 552, 553], "uniformli": 548, "rd": 548, "obtain": [548, 765, 1085], "rng": 548, "tailor": 548, "switch_mock_suit": 549, "initial_st": [549, 1181], "set_on_off": 549, "initial_failur": 550, "failit": 550, "point_suit": [550, 614], "ctor_and_gett": 550, "ctor_and_getters_const": 550, "default_ctor": [550, 613, 614, 615, 616, 770], "equal_method": 550, "p3": 550, "p4": [550, 897], "assert_fals": [550, 555, 560, 562, 567, 596, 613, 614, 615, 616, 788], "equal_method_const": 550, "operator_equ": 550, "operator_equals_const": 550, "move_method": 550, "operator_plus_equ": 550, "add_method": 550, "new_p": 550, "add_method_const": 550, "operator_plu": [550, 613, 614, 615], "operator_plus_const": 550, "radiu": 550, "circle_suit": 550, "ctor_and_getters_using_operator_equ": 550, "14159": 550, "53981634": 550, "area_const": 550, "square_suit": 550, "bottom_left": [550, 616], "side_length": 550, "shape_suit": 550, "circle_is_a_shap": 550, "square_is_a_shap": 550, "area_is_shape_functionality__circl": 550, "area_is_shape_functionality__squar": 550, "human": [551, 553, 758, 897, 919, 1011, 1056, 1143], "ineffici": [551, 674, 854, 973], "epath": 551, "bag_copy_suit": [551, 784], "find_by_int_ok": [551, 784, 785, 786], "find_by_int_nok": [551, 784, 785, 786], "remove_by_int_ok": [551, 784, 785, 786], "bag_unique_suit": [551, 786], "bag_shared_suit": [551, 785], "insert_const_ref": [551, 785], "insert_mov": [551, 785], "unrel": [552, 583, 592, 758, 775, 776, 780, 789, 790, 995, 1005, 1034, 1051, 1150], "tyo": 552, "sensor_const_suit": [552, 553], "is_a_sensor": [552, 553], "5731": 552, "aptli": 553, "23062": 553, "w1sensorfactori": 553, "find_by_address": 553, "sensor_w1_factory_suit": 553, "fstream": [553, 788], "tmpdir_fixtur": 553, "device_dir": 553, "create_directori": 553, "ofstream": [553, 788], "42459": 553, "temp_milli": [553, 554], "w1_fs_root": 553, "sensor_factori": 553, "0x02131d959eaa": 553, "assert_n": [553, 589, 612, 613, 748, 770, 785, 786], "horizon": 553, "0x012345678901": 553, "w1_sensor_suit": [553, 554], "test_read_sensor": [553, 554], "36700": 553, "basedir": 553, "0x2131d959eaa": 553, "dcmake_toolchain_fil": [554, 1012, 1026], "20687": 554, "write_temperatur": 554, "thaht": 554, "filename_pattern": 554, "xxxxxx": 554, "mkstemp": 554, "unlink": [554, 1003, 1005], "to_str": [554, 674], "off_t": [554, 963, 973, 978, 1004], "lseek": [554, 973, 978, 1004], "seek_set": [554, 963, 978, 1004], "nwritten": [554, 967, 968, 969, 970, 975, 978, 1004, 1008], "algo": [555, 588, 589, 624, 625], "copy_into_vector": 555, "stl_exercises_suit": [555, 556, 557, 558, 560, 562, 563, 564, 565, 567, 568, 569, 570, 571], "required_cont": 555, "find_in_vector": 555, "my_vec": [555, 571], "wladimir": 555, "sort_in_plac": 555, "required_output": [555, 556, 557, 558, 570], "orig_input": [555, 556, 557, 558, 570], "alement": 556, "is_odd": 556, "filter_greater_10": 557, "filter_odd": 558, "map_insert": 560, "my_map": [560, 650, 651, 652, 653, 654], "map_insert_simpl": 560, "insert_check_dupl": 560, "map_insert_check_dupl": 560, "insert_remove_by_kei": 560, "map_insert_remove_by_kei": 560, "map_remove_by_kei": 560, "map_find": 560, "sensorrepositori": [561, 562, 563, 564, 565, 566, 567, 568, 569], "decript": 561, "sensor_repository_insert_dupl": 562, "add_sensor": [562, 563, 564, 565, 567, 568], "ofen": [562, 563, 564, 565, 567, 568], "weltraum": [562, 563, 564, 565, 567, 568], "mond": [562, 567], "sucess": 562, "sensor_repository_insert": 563, "sensor_repository_lookup_neg": 564, "get_sensor": [564, 565, 568], "sensor_repository_lookup_posit": 565, "complaint": 566, "ish": 566, "sensor_repository_remove_nonexist": 567, "remove_sensor": [567, 568], "sensor_repository_remov": 568, "sensor_repository_size_const": 569, "vector_append": 571, "vector_join": 571, "joined_cont": 571, "userdb_map": 572, "userdb_vector": 572, "dan": 572, "sak": 572, "cppcon": [572, 699, 701, 702, 715, 722, 740, 751, 772, 775], "transcrib": 572, "mallocfre": 577, "arrayofinteg": 577, "memoryleak": 577, "arrayboundswrit": 577, "newdelet": 577, "singleinteg": 577, "deletemismatch": 577, "thing1": [579, 580], "thing2": [579, 580], "global_str": 580, "__have_thing_h__": 580, "_content": 580, "denstruct": 580, "destruct": [580, 601, 671, 702, 752, 879], "essenc": [580, 1176], "collaps": 583, "thoroughli": [583, 941], "_mem": [586, 732], "determinist": [586, 751, 765, 1032, 1083], "maybeown": 586, "pointerarithmet": 589, "bugp": 589, "105ff": 589, "num_el": 589, "another_arrai": 589, "yet_another_arrai": 589, "108ff": 589, "basics_cxx03": 589, "basics_cxx11": 589, "cbegin": [589, 642, 661, 698, 709], "my_copi": 589, "naivecopi": 589, "cend": [589, 642, 661, 698], "algocopi": 589, "backinsert": 589, "back_insert_iter": [589, 630], "nah": [589, 1178], "insertfind": 589, "make_pair": [589, 652, 655, 743], "erasebyposit": 589, "erasebykei": 589, "domin": 595, "1985": 595, "2003": [595, 1189], "point_c_suit": [596, 598], "struct_initi": 596, "point_init_default": 596, "c_default_constructor_init": 596, "point_create_default": 596, "c_default_constructor_cr": 596, "point_creat": [596, 598], "c_constructor": [596, 598], "eq": [596, 612, 614, 616], "point_equ": 596, "point_not_equ": 596, "eq_n": 596, "point_mov": [596, 598, 606, 608], "point_add": 596, "point_sub": 596, "add_sub": 596, "point_dist": 596, "point_ab": [596, 598], "hyp": [596, 598, 606], "unwant": [596, 647, 743, 815, 1034, 1055, 1079], "cpp_copy_suit": 597, "generated_copy_ctor": 597, "copy1": [597, 753], "copy2": [597, 753], "copy3": 597, "manual_copy_suit": 597, "copy_ctor": [597, 752], "assignment_oper": 597, "earlier": 598, "point_h": [598, 606, 607], "point_cpp_suit": 598, "constructor_coordin": 598, "inaccessibil": 598, "move_op_pluseq": 598, "whenev": [599, 606, 616, 702], "sth": 600, "dirty_stack": 600, "use_uniniti": 600, "onward": [600, 604, 611], "nw": 601, "memberwis": 601, "_c_str": [601, 604, 705], "cxx03_data_encapsulation_object_copi": [602, 691, 703, 734, 750, 759, 767, 787, 789, 790], "cxx03_data_encapsulation_copy_bas": [602, 691, 790], "string_h": [604, 705], "cstring": [604, 705, 706, 739], "tcach": [604, 732], "221601": 604, "julian": [604, 753], "seward": [604, 753], "libvex": [604, 753], "realloc": [604, 647], "0x484465b": 604, "1103": 604, "0x401210": 604, "0x401194": 604, "0x4dc8c80": 604, "0x401188": 604, "0x484222f": 604, "0x4011c5": 604, "0x40116f": 604, "freed": [604, 796, 966, 1032], "destroi": [604, 666, 688, 707, 724, 739, 754, 765, 827], "221807": 604, "twostr": 604, "twotwostr": 604, "s21": 604, "s22": 604, "segfault": [604, 851, 1009], "paraamet": 605, "__pretty_function__": 605, "0000000000401176": 605, "_z1fi": 605, "00000000004011a0": 605, "_z1fpc": 605, "demangl": 605, "anywher": [606, 1030], "fab": [606, 607], "distance_origin": [606, 607, 757], "hid": 606, "standardes": 606, "d_orig": 607, "fpermiss": [607, 744], "arrog": 607, "goodi": [607, 935], "pascal": 609, "uninitil": 609, "pass_by_copi": 609, "references_suit": 609, "voila": [609, 941, 999, 1012, 1013, 1023, 1054], "tediou": [609, 960, 1013, 1087], "pass_by_point": 609, "pass_by_refer": 609, "pass_by_const_point": 609, "const_point": 609, "pass_by_const_refer": 609, "const_refer": 609, "pass_by_copy_expens": 609, "copy_expens": 609, "pass_by_const_reference_cheap": 609, "const_reference_cheap": 609, "addend": [610, 737, 757], "straightforwardli": [610, 1093], "add_point": 610, "static_suit": 610, "global_funct": 610, "static_method": 610, "bss": 611, "definition1": 611, "definition2": 611, "forbid": 611, "trickeri": 611, "points_equ": 612, "oddli": 612, "operators_suit": 612, "equals_glob": 612, "difficulti": 612, "equals_object": 612, "vector_addition_glob": 612, "vector_addition_object": 612, "point_plus_equ": 612, "combo": [613, 615], "cuboid_suit": 613, "front_bottom_left": 613, "point_whl_ctor": 613, "operator_eq_n": [613, 614, 615, 616], "operator_pluseq": [613, 614, 615], "operator_minuseq": [613, 615], "operator_minu": [613, 615], "operator_ostream": [613, 614, 615, 616], "buf": [613, 614, 615, 616, 955, 963, 973], "entirei": [613, 615, 616], "starting_point": 614, "implementation_in_cpp_fil": 614, "rectangle_suit": [614, 616], "pluseq": 614, "operator_unary_minu": [614, 615], "minus_p": [614, 615], "point3d_suit": 615, "coordinates_ctor": 615, "071067812": 615, "69041576": 615, "top_right": 616, "top_left": 616, "bottom_right": 616, "rational": [616, 650], "operator_plus_equal_vec": 616, "plus_vec": 616, "cxx03_functions_and_methods_exercise_class_rectangl": [617, 691, 790], "cxx03_functions_and_methods_exercise_class_point": [617, 691, 790], "cxx03_functions_and_methods_exercise_class_cuboid": [617, 691, 790], "cxx03_functions_and_methods_exercise_class_point3d": [617, 691, 790], "cxx03_functions_and_methods_static_member_vari": [617, 691, 790], "dothat": [618, 619], "dothi": [618, 619], "dothos": [618, 619], "dammit": [618, 619, 698], "thisexcept": 619, "thatexcept": 619, "thrown": [619, 1008], "myexcept": 619, "error_detect": 619, "granular": [619, 808, 995], "typenam": [621, 622, 704, 711, 712, 713, 714, 716, 718, 719, 720, 725, 746, 752, 756, 766, 768], "a_begin": [625, 627], "a_end": [625, 627], "src_begin": [625, 629], "src_end": [625, 629], "dst_begin": [625, 629], "decai": 626, "zeroth": 626, "warrai": 628, "unflex": 630, "shrink_to_fit": 630, "prealloc": [630, 631], "wnonnul": 631, "gool": [632, 699], "cplusplu": [634, 635, 636, 637, 638, 640, 641, 642, 643, 646, 655], "int_arrai": [634, 636, 640, 643], "binarili": 634, "is_el": 634, "original_begin": 635, "original_end": 635, "copy_run": 635, "original_run": 635, "int_array_c": 636, "match_666": 637, "match_42": 637, "x_equals_666": 637, "x_equals_4": 637, "x_equal": 637, "_criterion": 637, "yesno": [637, 864, 865], "output_stern": 638, "output_bindestrich": 638, "output_with_prefix": 638, "_prefix": 638, "cxx03_stl_algorithm_find_if": [639, 658, 662, 691, 790], "cxx03_stl_algorithm_sort": [639, 658, 662, 691, 790], "cxx03_stl_algorithm_reverse_copi": [639, 658, 661, 662, 691, 790], "cxx03_stl_algorithm_revers": [639, 658, 661, 662, 691, 790], "cxx03_stl_algorithm_binary_search": [639, 658, 662, 691, 790], "cxx03_stl_algorithm_for_each": [639, 658, 662, 691, 790], "cxx03_stl_algorithm_lower_bound": [639, 658, 662, 691, 790], "reversed_": [642, 661], "less_revers": 643, "greater_than": 643, "cluster_cxx03_stl_sequential_contain": [645, 658, 662, 691, 790], "cxx03_stl_sequential_containers_list": [645, 658, 662, 691, 790], "cxx03_stl_sequential_containers_bas": [645, 658, 662, 691, 790], "cxx03_stl_sequential_containers_vector": [645, 658, 662, 691, 790], "liek": 647, "logarithm": 647, "mein_int_arrai": 647, "insert_po": 647, "new_elems_as_vector": 647, "elems_to_insert": 647, "cxx03_stl_associative_containers_multimap": [649, 658, 662, 691, 790], "realiz": [650, 1083], "parameter": [650, 756, 761, 1019, 1033], "keytyp": [650, 694], "valuetyp": [650, 694], "some_map": 650, "key_typ": [650, 651], "mapped_typ": [650, 651], "value_typ": [650, 651], "emplac": 650, "collis": 650, "zweiundvierzig": 650, "out_of_rang": [650, 654], "mymap": [651, 652, 653, 654], "sechshundersechsundsechzig": 651, "kv": 651, "pre11": [651, 652], "einundfuenfzig": [651, 652, 653, 654], "vierundfuenfzig": [651, 652, 653, 654], "dreihundertsechsundvierzig": [651, 652, 653, 654], "tausendein": [651, 652, 653, 654], "tausendzwei": [651, 652, 653, 654], "retval_7": 652, "retval_2": 652, "n_remov": 653, "found_value_1001": 654, "found_value_666": 654, "found_valu": 654, "joerg_svnr": 655, "caro_svnr": 655, "johanna_svnr": 655, "philipp_svnr": 655, "datenzwilling_von_joerg": 655, "faschingzwil": 655, "meine_map": 655, "datenzwil": 655, "equal_rang": 655, "found_rang": 655, "svnr_notexist": 655, "1234567": 655, "memory_resourc": 656, "cluster_cxx03_stl_alloc": [657, 658, 662, 691, 790], "cxx03_stl_allocator_bas": [657, 658, 662, 691, 790], "cluster_cxx03_stl_exercis": [658, 659, 661, 662, 691, 790], "cluster_cxx03_stl_exercises_reverse_str": [658, 659, 661, 662, 691, 790], "cxx03_stl_exercises_reverse_string_exercis": [658, 659, 661, 662, 691, 790], "cxx03_stl_exercises_reverse_string_solut": [658, 661, 662, 691, 790], "auto_ptr": [663, 702, 1189], "cluster_cxx03_dynamic_memori": [664, 691, 790], "cxx03_dynamic_memory_todo": [664, 691, 790], "inher": [665, 666, 669, 671, 672, 997, 1085], "novirtu": [665, 666, 672], "mantra": [666, 862], "spoiler": [666, 1043], "cxx03_inheritance_oo_private_protect": [667, 691, 790], "derived1": 669, "derived2": 669, "countless": 669, "derived3": 669, "unimpl": [669, 1047], "polymorp": [671, 774], "strictli": [671, 941, 942, 1043], "indirect": [672, 758, 874, 1028], "cluster_cxx03_standard_library_miscellanea": [673, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 790], "cxx03_standard_library_miscellanea_str": [673, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 790], "string_suit": 674, "another_hello": 674, "greeting1": 674, "greeting2": 674, "convert_to_signed_integ": 674, "stol": 674, "stoll": 674, "numstr": 674, "stoi": [674, 975, 978], "convert_to_unsigned_integ": 674, "stoull": 674, "stoui": 674, "stoul": 674, "convert_from_someth": 674, "basic_str": [674, 756, 788], "i_str": 674, "ui_str": 674, "666000": 674, "sprintf": [674, 975, 978, 1008, 1009], "print_char": 675, "cluster_cxx03_exercises_misc": [675, 676, 677, 678, 691, 790], "cxx03_exercises_misc_american_flag": [675, 677, 691, 790], "cxx03_exercises_misc_fh_moodle_quiz": [676, 677, 691, 790], "cxx03_exercises_misc_sum_integers_from_stdin": [677, 678, 691, 790], "ctrl": [678, 1009, 1061], "cluster_cxx03_exercises_userdb": [679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 790], "cxx03_exercises_userdb_user_simple_method": [679, 680, 682, 683, 684, 686, 687, 688, 689, 690, 691, 790], "cxx03_exercises_userdb_user_const_memb": [679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 790], "cxx03_exercises_userdb_user_access_method": [679, 680, 682, 683, 686, 687, 688, 689, 690, 691, 790], "cxx03_exercises_userdb_userdb_search": [679, 687, 688, 689, 691, 790], "cxx03_exercises_userdb_userdb_insert": [679, 686, 687, 688, 689, 691, 790], "cxx03_exercises_userdb_userdb_vector_bas": [679, 686, 687, 688, 689, 690, 691, 790], "cxx03_exercises_userdb_userdb_search_find_if": [679, 687, 688, 691, 790], "cxx03_exercises_userdb_user_default_ctor": [679, 686, 687, 688, 689, 690, 691, 790], "cxx03_exercises_userdb_user_const": [679, 682, 683, 686, 687, 688, 689, 690, 691, 790], "cxx03_exercises_userdb_userdb_search_notfound_except": [679, 688, 691, 790], "cxx03_exercises_userdb_user_ctor": [679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 790], "architecton": 681, "celebr": 684, "trittsich": [684, 685], "age_by_n_year": 684, "user_init": 685, "userdb_insert": 686, "doesnotexist": [687, 689], "isvalid": [687, 688, 689], "unnatur": 688, "_user": [688, 839], "thereaft": 688, "wrinkl": 688, "usernotfound": 688, "unreach": [688, 952], "userdb_search_by_lastnam": 689, "undetect": 689, "userdb_init": 690, "cluster_cxx11": [692, 696, 703, 710, 721, 734, 735, 745, 750, 759, 767, 771, 775, 787, 789, 790], "cluster_cxx11_introduct": [692, 696, 734, 787, 789, 790], "cxx11_introduction_histori": [692, 696, 734, 787, 789, 790], "cxx11_introduction_overview_livehack": [692, 789, 790], "ugliest": 693, "todo_list": 694, "tdl": 694, "desc": 694, "key_value_pair": 694, "up_1_to_10": 694, "down_1000_to_980": 694, "todo_item": 694, "make_shar": [694, 755, 785], "todolist": 694, "nocopi": 694, "add_item": 694, "_list": 694, "evangelist": 694, "wchar_t": 695, "cluster_cxx11_new_language_featur": [696, 703, 710, 721, 734, 735, 745, 750, 759, 767, 787, 789, 790], "cluster_cxx11_new_language_features_brace_initi": [696, 734, 787, 789, 790], "cxx11_new_language_features_auto": [696, 734, 787, 789, 790], "cxx11_new_language_features_strongly_typed_enum": [696, 734, 787, 789, 790], "cxx11_new_language_features_brace_initialization_implementor_view": [696, 734, 789, 790], "cxx11_new_language_features_brace_initialization_intro": [696, 734, 787, 789, 790], "cxx11_new_language_features_brace_initialization_mess": [696, 734, 789, 790], "pointcloud": [697, 699], "_point": 697, "data_": [698, 700], "memoriz": 698, "brace_initialization_suit": 699, "explicit_ctor_cal": 699, "initlist_ctor_cal": 699, "explicit_ctor": 699, "initlist_ctor": 699, "disabigu": 699, "nightmar": [699, 702, 1028], "size_": 700, "constexpr_suit": 701, "basic_const_is_constexpr": 701, "constexpr_function_request": 701, "constexpr_function_not_request": 701, "constexpr_recursive_funct": 701, "6765": 701, "constexpr_ctor": 701, "schurr": 701, "olsen": [702, 751], "nicolai": [702, 744, 747], "josutti": [702, 744, 747], "smartptr": [703, 734, 752, 753, 789, 790], "cluster_cxx11_new_language_features_move_pf": [703, 734, 750, 759, 767, 787, 789, 790], "cluster_cxx11_smart_point": [703, 734, 750, 759, 767, 787, 789, 790], "cxx11_perfect_forward": [703, 734, 789, 790], "cxx11_new_language_features_move_pf_overview": [703, 734, 750, 759, 767, 787, 789, 790], "cxx11_new_language_features_miscellan": [703, 734, 750, 759, 767, 787, 789, 790], "cxx11_new_language_features_move_pf_livehack_string_mov": [703, 734, 789, 790], "cxx11_new_language_features_move_pf_afterword": [703, 734, 789, 790], "cxx11_new_language_features_move_pf_livehack_using_string_mov": [703, 734, 789, 790], "cxx11_smart_pointers_unique_ptr": [703, 734, 750, 759, 767, 787, 789, 790], "cxx11_smart_pointers_introduct": [703, 734, 750, 759, 767, 787, 789, 790], "_p": [704, 752], "handwritten_suit": [704, 752], "explicit_mov": [704, 752], "assert_double_eq": [704, 752, 753], "create_constant_sensor": [704, 754], "prove": [704, 876], "return_by_copi": 704, "another_sensor": 704, "assigne": 704, "dubiou": 704, "bugfre": 705, "string_move_suit": 705, "make_a_string_from": 705, "ret_": 705, "move_return": 705, "move_assign": 705, "assig": 705, "person_h": 706, "person_suit": 706, "contructor": 706, "outliv": [707, 1030], "rvr": 707, "ado": [709, 980, 1145], "mytyp": 709, "spellabl": 709, "0x7ffcd604846c": 709, "0x7ffcd6048468": 709, "iref": 709, "0x7ffffefe2b54": 709, "0x7ffffefe2b50": 709, "0x7ffc59ebd7bc": 709, "ciref": 709, "0x7ffc23e46284": 709, "0x7ffe4a148064": 709, "0x7ffc528e013c": 709, "cluster_cxx11_new_language_features_concept": [710, 734, 789, 790], "cxx11_new_language_features_concepts_link": [710, 734, 789, 790], "cxx11_new_language_features_concepts_intro": [710, 734, 789, 790], "cxx11_new_language_features_concepts_writing_concept": [710, 734, 789, 790], "conceptless": 711, "4ul": [711, 712], "4l": [711, 712], "satisfact": 711, "is_integral_v": 711, "_tp": [711, 744, 754], "hendrik": 715, "niemey": 715, "hypotenus": [716, 717, 718, 719, 720], "sumsq": [716, 717, 718, 719, 720], "point2d": [716, 718, 719, 720], "dozen": 716, "ruin": 716, "5l": 716, "same_a": 716, "commone_reference_with": 716, "common_reference_with": [716, 720], "has_siz": [719, 720], "index_returns_doubl": 720, "cluster_cxx11_new_language_features_coroutin": [721, 734, 789, 790], "cxx11_new_language_features_coroutines_intro": [721, 734, 789, 790], "stackless": 722, "asio": 722, "co_return": [722, 726, 727, 728, 729, 730], "hello_inst": [722, 726, 727, 728, 729, 730], "promise_typ": [722, 724, 725, 727, 728, 729, 730], "get_return_object": [722, 724, 725, 727, 728, 729, 730], "suspend_alwai": [722, 724, 725, 727, 728, 729, 730], "initial_suspend": [722, 724, 725, 727, 728, 729, 730], "final_suspend": [722, 724, 725, 727, 728, 729, 730], "return_void": [722, 725, 727, 728, 729, 730], "unhandled_except": [722, 724, 725, 727, 728, 729, 730], "suspend_nev": [722, 724, 725, 729], "coroutine_handl": [722, 724, 725, 728, 729, 730], "from_promis": [722, 724, 725, 728, 729, 730], "_coro": [722, 724], "yield_valu": [722, 724, 725, 728, 729, 730], "sentinel": [722, 725, 729, 730, 744], "_promis": [722, 725, 728, 729, 730], "glue": 722, "deciph": 722, "diagrammat": 722, "wei": 722, "co_yield": [723, 724, 725, 726, 728, 729, 730], "_elem": 724, "ed": [725, 728, 729, 730, 926, 963], "lackingdefaultconstructor": 731, "ldc": 731, "hasdefaultconstructor": 731, "hmpf": 731, "hdc": 731, "ownsmemori": 732, "om_copi": 732, "incontin": 733, "leaf": [733, 916], "method1": 733, "method2": 733, "cluster_cxx11_new_language_features_rang": [734, 745, 789, 790], "cluster_cxx11_new_language_features_lambda": [734, 735, 789, 790], "cxx11_new_language_features_delet": [734, 789, 790], "cxx11_new_language_features_modul": [734, 789, 790], "cxx11_new_language_features_structured_bind": [734, 789, 790], "cxx11_new_language_features_default": [734, 789, 790], "cxx11_new_language_features_constexpr": [734, 789, 790], "cxx11_new_language_features_range_based_for_map": [734, 789, 790], "cxx11_new_language_features_range_based_for": [734, 787, 789, 790], "cxx11_new_language_features_livehack_smartptr_mov": [734, 789, 790], "cxx11_smart_pointers_introduction_livehack": [734, 750, 789, 790], "cxx11_new_language_features_delegating_ctor": [734, 789, 790], "cxx11_new_language_features_overrid": [734, 789, 790], "cxx11_new_language_features_fin": [734, 789, 790], "cxx11_new_language_features_ranges_good_bad": [734, 745, 789, 790], "cxx11_new_language_features_ranges_intro": [734, 745, 789, 790], "cxx11_new_language_features_ranges_link": [734, 745, 789, 790], "cxx11_new_language_features_lambda_lambda_captur": [734, 735, 789, 790], "cxx11_new_language_features_lambda_lambda": [734, 735, 789, 790], "cxx11_new_language_features_lambda_lambda_is_functor_pitfal": [734, 735, 789, 790], "cxx11_new_language_features_lambda_lambda_is_functor": [734, 735, 789, 790], "elsewher": [736, 837, 1037], "lamda": 736, "print_messag": [736, 738, 739], "constantli": [737, 854, 996], "mere": 737, "catur": 737, "akin": 737, "lambda_capture_suit": 737, "explicit_by_copi": 737, "lambda_capure_suit": 737, "explicit_by_refer": 737, "dubio": 737, "explicit_mix": 737, "initialized_captur": 737, "all_by_refer": 737, "all_by_copi": 737, "all_by_copy_except": 737, "this_captur": 737, "_i": [737, 757], "add_to_yourself_and_guarantee_programmers_job_secur": 737, "print_message_func": [738, 739], "_messag": [738, 739], "piti": 739, "mpp": 740, "precompil": [740, 837, 1011], "speedup": 740, "rei": 740, "bori": 740, "kolpackov": 740, "abandon": 740, "inde": 742, "range_based_for_suit": 743, "map_pre_11": 743, "map_bas": 743, "map_basic_const_auto_refer": 743, "ific": [743, 748], "map_unpack_copi": 743, "map_unpack_refer": 743, "map_unpack_const_refer": 743, "min_el": 744, "forward_rang": [744, 746], "drop_view": 744, "filter_view": 744, "ref_view": 744, "ranges_util": 744, "view_interfac": 744, "_deriv": 744, "sized_sentinel_for": 744, "decltyp": 744, "__cust": 744, "declval": 744, "__cust_access": 744, "__begin": 744, "_s_size": 744, "_m_deriv": 744, "forward_iter": 744, "coll": 744, "2nd": [744, 1178], "__cxx11": [744, 756, 788], "_vp": 744, "__simple_view": 744, "random_access_rang": [744, 746], "sized_rang": 744, "pretend": 744, "comitte": [744, 747], "lazili": 746, "first_two_drop": 746, "first_two_dropped_next_two_taken": 746, "oldstyl": 746, "inspir": 746, "refin": 746, "input_rang": 746, "bidirectional_rang": 746, "backward": [746, 812, 897, 929, 934, 1060, 1165], "contiguous_rang": 746, "tristan": 747, "brindl": 747, "cppnorth": 747, "l0bhzp6hmdm": 747, "nico": 747, "accu": 747, "rust": [747, 1011], "parrai": 748, "decompos": 748, "structured_binding_suit": 748, "struct_copi": 748, "struct_refer": 748, "struct_const_refer": 748, "tuple_copi": 748, "make_tupl": 748, "affect": 748, "tuple_refer": 748, "tuple_const_refer": 748, "array_copi": 748, "array_refer": 748, "array_const_refer": 748, "suspici": 748, "designwis": 749, "uptr": 749, "cxx11_smart_pointers_weak_ptr": [750, 787, 789, 790], "cxx11_smart_pointers_shared_ptr": [750, 759, 767, 787, 789, 790], "cxx11_smart_pointers_closing_word": [750, 759, 767, 789, 790], "myclass": [751, 753], "unwind": 751, "yoky6hzlkx": 751, "steal": [752, 997], "cxx11_unique_ptr_sensors_h": 752, "_temp": 752, "basic_const": 752, "raw_": 752, "raw_s_ref": 752, "copy_ctor_bad": 752, "assignment_operator_bad": 752, "gtest_filt": [752, 753, 1176], "reveal": [752, 1030], "vtabl": 752, "autoptr": 752, "copy_ctor_good_autoptr_styl": 752, "unexpectedli": 752, "assignment_operator_good_autoptr_styl": 752, "destiat": 752, "excus": 753, "shared_ptr_suit": 753, "rs1": [753, 754], "rs2": [753, 754], "rand1": [753, 754, 755], "rand2": [753, 754, 755], "cann": 753, "basic_make_shar": 753, "set_refer": 753, "_ref": 753, "cyclic_refer": 753, "303549": 753, "unique_ptr_suit": 754, "threw": 754, "ownership_error": 754, "cxx11": [754, 788], "unique_ptr_suite_ownership_error_test": 754, "testbodi": 754, "_dp": 754, "default_delet": 754, "verbose_ctor": 754, "make_unique_auto": 754, "tranfer": 754, "create_random_sensor": 754, "implicit_ownership_transf": 754, "holdsasensor": 754, "taking_ownership_in_own_cod": 754, "sompil": 754, "raw1": 754, "tie": 755, "unti": 755, "weak_ptr_suit": 755, "borrowed_sensor": 755, "another_refer": 755, "sensor_ref": 755, "measurement_thread": 755, "rvref": 756, "lo_funct": 756, "adventur": 756, "grimm": 756, "jaud": 756, "factset": 756, "570f242261f8": 756, "suffer": [757, 942], "origin_dist": 757, "criteria": [757, 881, 1165], "predic": 757, "void_funct": 757, "bind_suit": 757, "plain_void_funct": 757, "one_parameter_funct": 757, "plain_one_parameter_funct": 757, "minus_hardcod": 757, "_1_minus_2": 757, "minus_swap_paramet": 757, "second_minus_first": 757, "_2": [757, 758], "minus_hardcode_first_paramet": 757, "_42_minus_param": 757, "funcfunc": 757, "tradeoff": [757, 842], "oneimplement": 758, "anotherimplement": 758, "do_much_work": 758, "c_using_on": 758, "c_using_anoth": 758, "explanatori": 758, "trampolin": 758, "rtti": 758, "pod": 758, "metaphys": 758, "ostreamlogg": 758, "databaselogg": 758, "logfunc_t": 758, "funcptrlogg": 758, "somebusinessclasswithneedforlog": 758, "successfulli": [758, 857, 872, 1164, 1171], "do_stupid_log": 758, "ostream_logg": 758, "database_logg": 758, "funcptr_logg": 758, "busy_logging_to_ostream": 758, "busy_logging_to_databas": 758, "busy_logging_to_funcptr": 758, "foo_func": 758, "explos": 758, "cluster_cxx11_functions_funct": [759, 767, 789, 790], "cxx11_functions_functions_funct": [759, 767, 789, 790], "cxx11_functions_functions_bind": [759, 767, 789, 790], "msdn": 760, "devil": 760, "singlethread": 760, "god": 760, "paralleliz": 761, "cancel": [761, 987], "interlockedincr": 763, "mutual": [764, 1045], "try_lock": 764, "try_lock_for": 764, "try_lock_until": 764, "time_point": [764, 769], "do_something_errorpron": 765, "do_more_of_it": 765, "wake": [766, 819, 829, 960, 984, 993, 999], "waiter": [766, 829, 854, 984], "stop_wait": 766, "wait_for": [766, 768], "wait_until": [766, 768], "notify_on": 766, "notify_al": 766, "thunder": 766, "herd": 766, "condvar": 766, "threadsafequeu": 766, "maxelem": 766, "_maxelem": 766, "dur": [766, 768], "scoped_lock": [766, 768], "_lock": [766, 768], "pop_front": 766, "2m": [766, 768, 934], "1m": [766, 862, 934], "consumer1": 766, "consumer2": 766, "pthread_cond_init": [766, 984], "_not_empti": 766, "_not_ful": 766, "pthread_cond_wait": [766, 984], "pthread_cond_sign": [766, 984], "pthread_cond_t": [766, 984], "unique_lock": 766, "cluster_linux_sysprog_posix_thread": [767, 789, 790, 933, 974, 988, 994], "cluster_linux_sysprog_blocking_io": [767, 789, 790, 867, 870, 871, 933, 962, 974, 988, 994, 996], "cluster_linux_sysprog_schedul": [767, 789, 790, 933, 974, 988, 994, 996], "cluster_cxx11_multithread": [767, 789, 790], "linux_sysprog_posix_threads_exercise_mutex": [767, 789, 790, 933, 974, 988], "linux_sysprog_posix_threads_mutex": [767, 789, 790, 933, 974, 988, 994], "linux_sysprog_posix_threads_exercise_pthcreate_racecondit": [767, 789, 790, 933, 974, 988, 994], "linux_sysprog_posix_threads_lifecycl": [767, 789, 790, 933, 974, 988, 994], "linux_sysprog_posix_threads_bas": [767, 789, 790, 933, 974, 988, 994], "linux_sysprog_scheduling_bas": [767, 789, 790, 933, 974, 988, 994, 996], "linux_sysprog_posix_threads_condition_vari": [767, 789, 790, 933, 974, 988], "linux_sysprog_blocking_io_blocking_io": [767, 789, 790, 867, 870, 871, 933, 962, 974, 988, 994, 996], "cxx11_multithreading_introduct": [767, 789, 790], "cxx11_multithreading_thread": [767, 789, 790], "cxx11_multithreading_mutex": [767, 789, 790], "cxx11_multithreading_race_condit": [767, 789, 790], "cxx11_multithreading_scoped_lock": [767, 789, 790], "cxx11_multithreading_chrono": [767, 789, 790], "cxx11_multithreading_atom": [767, 789, 790], "cxx11_multithreading_promise_futur": [767, 789, 790], "cxx11_multithreading_condition_vari": [767, 789, 790], "get_futur": 768, "set_except": 768, "exception_ptr": 768, "shared_futur": 768, "uncoordin": 768, "ten_million_years_": 768, "answer_poll_interval_m": 768, "answer_valid": 768, "chew_answ": 768, "timespec": [768, 984, 995, 1005], "reaction": [768, 952, 1034], "answer_computation_tim": 768, "answer_poll_interv": 768, "ten_million_year": 768, "lockguard": 768, "_answer_valid": 768, "_answer": 768, "_data": [768, 1025], "binary_semaphor": 768, "__cplusplu": 768, "202001l": 768, "_notifi": 768, "answer_promis": 768, "answer_futur": 768, "make_exception_ptr": 768, "epoch": [769, 1004], "time_t": 769, "notion": 769, "system_clock": 769, "monoton": [769, 845, 847], "ntp": 769, "steady_clock": 769, "timepoint": 769, "steadili": 769, "high_resolution_clock": 769, "brand": 769, "spent_milli": 769, "duration_cast": 769, "variant_suit": 770, "holds_altern": 770, "converting_ctor": 770, "bad_access": 770, "visit": [770, 775, 779, 789, 790], "int_seen": 770, "float_seen": 770, "charp": 770, "string_charp": 770, "no_default_ctor": 770, "cluster_cxx11_miscellan": [771, 775, 789, 790], "cxx11_miscellaneous_vari": [771, 775, 789, 790], "timur": 772, "doumler": 772, "aligned_alloc": 773, "alignof": 773, "pmr": 773, "heis": [773, 777], "_temperatur": [774, 776, 778, 780], "klau": 775, "iglberg": 775, "steve": 775, "bush": 775, "bielak": 775, "gopel": 775, "cluster_cxx11_embedded_problem": [775, 789, 790], "cxx11_embedded_problems_related_no_virtu": [775, 789, 790], "cxx11_embedded_problems_classic_virtu": [775, 789, 790], "cxx11_embedded_problems_variant_manual_if": [775, 789, 790], "cxx11_embedded_problems_unrel": [775, 789, 790], "cxx11_embedded_problems_variant_automatic_visit": [775, 789, 790], "cxx11_embedded_problems_variant_manual_visit": [775, 789, 790], "static_cast": [776, 788], "derivedtyp": 776, "sensorptr": 778, "get_temperature_visitor": [779, 781], "crtp": 783, "bagcopi": 784, "find_by_int": [784, 785, 786], "remove_by_int": [784, 785, 786], "nremov": [784, 785, 786], "bagshar": 785, "weakref": 785, "sharedref": 785, "baguniqu": 786, "constbag": 786, "cluster_cxx11_exercis": [787, 789, 790], "cxx11_exercises_bag_shar": [787, 789, 790], "cxx11_exercises_bag_uniqu": [787, 789, 790], "cxx11_exercises_bag_copi": [787, 789, 790], "withing": 788, "filesystem_suit": 788, "cd_to_tmpdir_fixtur": 788, "path_compose_compar": 788, "path_compose_compare_2": 788, "is_absolut": 788, "is_rel": 788, "path_abs_rel": 788, "abspath": 788, "relpath": 788, "parent_path": 788, "remove_filenam": 788, "replace_filenam": 788, "replace_extens": 788, "path_component_access": 788, "filename_part": 788, "dir_part": 788, "path_iter": 788, "current_directori": 788, "cwd_chdir": 788, "current_path": 788, "create_directory_error": 788, "filesystem_error": 788, "char_trait": 788, "char_typ": 788, "_chart": 788, "_trait": 788, "_alloc": 788, "_s_copi": 788, "size_typ": 788, "_m_replac": 788, "tcc": 788, "2171": 788, "canonicalizeforstdlibvers": 788, "__builtin_memcpi": 788, "9223372036854775810": 788, "9223372036854775813": 788, "__s1": 788, "__s2": 788, "create_directory_singl": 788, "is_regular_fil": 788, "create_directory_multipl": 788, "is_directori": 788, "is_block_fil": 788, "is_character_fil": 788, "is_empti": 788, "is_fifo": 788, "is_oth": 788, "is_socket": 788, "is_symlink": 788, "greatest": 788, "2691": [788, 893], "nov": [788, 827, 893, 919, 941, 1025, 1061, 1091], "inod": [788, 796, 803], "919153": 788, "0644": [788, 882, 896], "system_u": 788, "object_r": 788, "passwd_file_t": 788, "s0": 788, "111282886": 788, "0100": 788, "737858445": 788, "743858359": 788, "file_s": 788, "hard_link_count": 788, "last_write_tim": 788, "ext4": [788, 837], "btrf": 788, "ntf": 788, "directory_iter": 788, "dirit": 788, "recursive_directory_iter": 788, "cxx11_filesystem": [789, 790], "cluster_linux_basics_permissions_exercis": [790, 867, 883, 886, 887, 888, 889, 890, 891, 892, 933], "cluster_linux_basics_shell_exercis": [790, 864, 865, 866, 867, 901, 902, 903, 904, 905, 906, 907, 908, 909, 911, 912, 913, 914, 915, 917, 933], "cluster_linux_basics_shell_exercises_cp_mv_mkdir_rm": [790, 864, 865, 866, 867, 901, 902, 903, 904, 905, 906, 907, 908, 909, 911, 917, 933], "cluster_linux_basics_shell_exercises_l": [790, 867, 911, 912, 913, 914, 915, 917, 933], "cluster_linux_basics_archiving_compress": [790, 860, 867, 933, 1021, 1022], "cluster_linux_basics_exercis": [790, 864, 865, 866, 867, 933], "cluster_linux_basics_io_redir_pip": [790, 867, 878, 933], "cluster_linux_basics_text_tool": [790, 867, 927, 933], "cluster_linux_sysprog_process": [790, 933, 974], "cluster_linux_sysprog_intro_hw": [790, 933, 974, 976], "cluster_linux_toolchain_raspi": [790, 933, 1016, 1018, 1021, 1022], "cluster_linux_toolchain_cross": [790, 933, 1015, 1016, 1018, 1020, 1021, 1022], "cluster_linux_toolchain_exercis": [790, 933, 1016, 1017, 1018, 1019, 1020, 1021], "cluster_linux_ssh": [790, 933, 945, 946, 947, 948, 949, 1021, 1022], "cluster_linux_ssh_exercis": [790, 933, 945, 946, 947, 948, 949], "cluster_linux_hardwar": [790, 933, 939, 940], "cluster_linux_hardware_can": [790, 933, 939, 940], "cluster_linux_kernel": [790, 794, 797, 799, 802, 804, 807, 809, 811, 813, 814, 816, 818, 820, 822, 824, 826, 828, 830, 832, 834, 836, 838, 841, 843, 846, 848, 852, 855, 858, 933], "cluster_unittest": [790, 1174], "linux_basics_permissions_fh_moodle_quiz": [790, 867, 884, 892, 933], "linux_basics_permissions_fh_moodle_quiz_nocheat": [790, 867, 885, 892, 933], "linux_basics_permissions_umask": [790, 867, 892, 933], "linux_basics_permissions_setuid_livedemo": [790, 867, 892, 933], "linux_basics_permissions_setuid": [790, 867, 892, 933], "linux_basics_permissions_sticki": [790, 867, 892, 933], "linux_basics_permissions_exercises_credenti": [790, 867, 883, 886, 887, 888, 889, 890, 891, 892, 933], "linux_basics_intro_login": [790, 867, 871, 883, 886, 887, 888, 889, 890, 891, 892, 933, 945, 946, 947, 948, 949, 1021, 1022], "linux_basics_permissions_exercises_private_directori": [790, 867, 886, 887, 888, 892, 933], "linux_basics_permissions_exercises_private_directory_quest": [790, 867, 886, 888, 892, 933], "linux_basics_permissions_exercises_public_directory_quest": [790, 867, 886, 890, 892, 933], "linux_basics_permissions_exercises_public_directori": [790, 867, 886, 889, 890, 892, 933], "linux_basics_permissions_exercises_shared_fil": [790, 867, 886, 891, 892, 933], "linux_basics_intro_process_tre": [790, 867, 871, 883, 886, 887, 888, 889, 890, 891, 892, 933, 945, 946, 947, 948, 949, 974, 1021, 1022], "linux_basics_intro_wsl": [790, 867, 871, 933], "linux_basics_intro_environ": [790, 867, 871, 917, 933, 974, 1021, 1022], "linux_basics_intro_fh_moodle_quiz": [790, 867, 870, 871, 933], "linux_basics_intro_demo_everything_is_a_fil": [790, 867, 870, 871, 933], "linux_sysprog_blocking_io_blocking_io_fil": [790, 867, 870, 871, 933, 962, 974], "linux_basics_shell_cp": [790, 864, 865, 866, 867, 901, 902, 904, 905, 908, 909, 911, 917, 933], "linux_basics_shell_mv": [790, 867, 917, 933], "linux_basics_shell_configfil": [790, 867, 917, 933], "linux_basics_shell_fh_moodle_quiz": [790, 867, 910, 917, 933], "linux_basics_shell_link": [790, 867, 917, 933], "linux_basics_shell_exercises_cp_mv_mkdir_rm_mkdir_p_rm_r": [790, 864, 865, 866, 867, 901, 902, 903, 904, 905, 906, 908, 909, 911, 917, 933], "linux_basics_shell_exercises_cp_mv_mkdir_rm_echo_create_fil": [790, 864, 865, 866, 867, 901, 902, 903, 904, 905, 908, 909, 911, 917, 933], "linux_basics_shell_exercises_cp_mv_mkdir_rm_verify_hierarchi": [790, 867, 901, 905, 908, 909, 911, 917, 933], "linux_basics_shell_exercises_cp_mv_mkdir_rm_echo_copy_fil": [790, 867, 901, 902, 905, 908, 909, 911, 917, 933], "linux_basics_shell_exercises_cp_mv_mkdir_rm_echo_move_fil": [790, 867, 901, 904, 905, 908, 909, 911, 917, 933], "linux_basics_shell_exercises_cp_mv_mkdir_rm_rm_tre": [790, 867, 905, 908, 911, 917, 933], "linux_basics_shell_exercises_cp_mv_mkdir_rm_copy_tre": [790, 867, 901, 905, 908, 911, 917, 933], "linux_basics_shell_exercises_cp_mv_mkdir_rm_rm_rf": [790, 867, 905, 907, 911, 917, 933], "linux_basics_shell_exercises_ls_dev_typ": [790, 867, 911, 912, 914, 917, 933], "linux_basics_shell_exercises_ls_home_permiss": [790, 867, 911, 914, 915, 917, 933], "linux_basics_shell_exercises_ls_etc_passwd_s": [790, 867, 911, 913, 914, 917, 933], "linux_basics_archiving_compression_gzip": [790, 860, 867, 933, 1021, 1022], "linux_basics_archiving_compression_overview": [790, 860, 867, 933, 1021, 1022], "linux_basics_archiving_compression_exercis": [790, 860, 867, 933], "linux_basics_archiving_compression_tar": [790, 860, 867, 933, 1021, 1022], "linux_basics_exercises_fh_ss2022_exam_01_g2": [790, 865, 866, 867, 933], "linux_basics_exercises_fh_ss2022_exam_01_g1": [790, 864, 866, 867, 933], "linux_basics_io_redir_pipes_pip": [790, 867, 878, 933], "linux_basics_io_redir_pipes_io_redir": [790, 867, 878, 933], "linux_basics_io_redir_pipes_exercis": [790, 867, 878, 933], "linux_basics_io_redir_pipes_io_redir_swap_stdout_stderr": [790, 867, 878, 933], "linux_basics_text_tools_overview": [790, 867, 927, 933], "linux_basics_text_tools_head_tail": [790, 867, 927, 933], "linux_basics_text_tools_cat": [790, 867, 927, 933], "linux_basics_text_tools_less": [790, 867, 927, 933], "linux_basics_text_tools_exercis": [790, 867, 927, 933], "linux_basics_text_tools_cut": [790, 867, 927, 933], "linux_basics_text_tools_grep": [790, 867, 927, 933], "linux_basics_text_tools_find": [790, 867, 927, 933], "linux_sysprog_ipc": [790, 933, 974], "linux_sysprog_sign": [790, 933, 974], "linux_sysprog_ev": [790, 933, 974], "linux_sysprog_blocking_io_blocking_io_network": [790, 933, 962, 974], "linux_sysprog_blocking_io_blocking_io_tim": [790, 933, 962, 974], "linux_sysprog_fileio_basics_exercise_copi": [790, 933, 964, 972, 974, 991], "linux_sysprog_fileio_fileio_group": [790, 933, 972, 974, 991], "linux_sysprog_fileio_example_o_rdonli": [790, 933, 972, 974, 991], "o_rdonli": [790, 795, 933, 959, 963, 964, 967, 970, 971, 972, 974, 975, 978, 991, 1001, 1004, 1008], "linux_sysprog_fileio_example_o_wronli": [790, 933, 972, 974, 991], "linux_sysprog_fileio_basics_exercise_hol": [790, 933, 972, 974, 991], "linux_sysprog_fileio_dupl": [790, 933, 972, 974, 991], "linux_sysprog_fileio_misc": [790, 933, 972, 974, 991], "linux_sysprog_fileio_example_o_creat": [790, 933, 972, 974, 991], "linux_sysprog_fileio_example_o_excl": [790, 933, 972, 974, 991], "o_excl": [790, 933, 963, 964, 972, 974, 991, 1004], "linux_sysprog_posix_threads_exercise_condition_vari": [790, 933, 974, 988], "linux_sysprog_posix_threads_last_warn": [790, 933, 974, 988], "linux_sysprog_posix_threads_miscellan": [790, 933, 974, 988], "linux_sysprog_posix_threads_mutex_trylock": [790, 933, 974, 988], "trylock": [790, 933, 974, 982, 988], "islock": [790, 933, 974, 982, 988], "linux_sysprog_scheduling_realtime_api": [790, 933, 974, 994], "linux_sysprog_scheduling_realtim": [790, 933, 974, 994, 996], "linux_sysprog_scheduling_wakeup_lat": [790, 933, 974, 994, 996], "linux_sysprog_scheduling_processes_and_thread": [790, 933, 974, 994, 996], "linux_sysprog_scheduling_exam_quest": [790, 933, 974, 994, 996], "linux_sysprog_process_commandlin": [790, 933, 974], "linux_sysprog_process_tre": [790, 933, 974], "linux_sysprog_intro_hw_get": [790, 933, 974, 976], "linux_sysprog_intro_hw_sysfs_gpio": [790, 933, 974, 976], "linux_sysprog_intro_hw_watch": [790, 933, 974, 976], "linux_toolchain_cmake_cross": [790, 933, 1021], "linux_toolchain_shared_librari": [790, 933, 1021], "linux_toolchain_raspi_docker_fedora_wsl": [790, 933, 1021, 1022], "linux_toolchain_raspi_detail": [790, 933, 1021, 1022], "linux_toolchain_cross_bas": [790, 933, 1015, 1016, 1018, 1020, 1021, 1022], "linux_ssh_bas": [790, 933, 945, 946, 947, 948, 949, 1021, 1022], "linux_ssh_scp": [790, 933, 945, 946, 947, 949, 1021, 1022], "linux_toolchain_raspi_linaro_pi": [790, 933, 1021, 1022], "defunct": [790, 933, 1021, 1022], "linux_toolchain_raspi_toolchain_setup": [790, 933, 1016, 1018, 1021, 1022], "linux_toolchain_exercises_raspberry_toolchain": [790, 933, 1018, 1020, 1021], "linux_toolchain_exercises_native_build": [790, 933, 1018, 1019, 1021], "linux_toolchain_exercises_fh_moodle_quiz": [790, 933, 1017, 1018, 1021], "linux_toolchain_exercises_cross_build": [790, 933, 1016, 1018, 1021], "linux_ssh_key_pair": [790, 933, 945, 946, 947, 948, 949], "linux_ssh_link": [790, 933, 949], "linux_ssh_portforward": [790, 933, 949], "linux_ssh_sshf": [790, 933, 949], "linux_ssh_exercises_copy_tre": [790, 933, 946, 947, 949], "linux_ssh_exercises_copy_fil": [790, 933, 945, 946, 947, 949], "linux_ssh_exercises_pubkei": [790, 933, 945, 946, 947, 948, 949], "linux_hardware_pwm": [790, 933, 940], "linux_hardware_w1": [790, 933, 940], "linux_hardware_i2c": [790, 933, 940], "linux_hardware_brushless_motor": [790, 933, 940], "brushless": [790, 933, 940], "linux_hardware_can_program": [790, 933, 939, 940], "linux_hardware_can_intro": [790, 933, 939, 940], "linux_hardware_can_interfac": [790, 933, 939, 940], "linux_hardware_can_hardwar": [790, 933, 939, 940], "linux_kernel_spinlock_cod": [790, 814, 841, 846, 852, 855, 858, 933], "linux_kernel_interrupt_cod": [790, 814, 818, 841, 846, 852, 855, 858, 933], "linux_kernel_spinlock": [790, 814, 841, 843, 846, 852, 855, 858, 933], "linux_kernel_mutex_cod": [790, 814, 818, 828, 841, 846, 852, 855, 858, 933], "linux_kernel_interrupt": [790, 814, 818, 820, 832, 834, 841, 846, 852, 855, 858, 933], "linux_kernel_raspi_kernel_build": [790, 814, 818, 838, 841, 846, 852, 855, 858, 933], "linux_kernel_process_vs_atom": [790, 799, 804, 807, 809, 814, 818, 820, 824, 828, 830, 832, 834, 836, 841, 843, 846, 848, 852, 855, 858, 933], "linux_kernel_kmalloc": [790, 799, 804, 807, 809, 814, 818, 828, 832, 834, 841, 846, 852, 855, 858, 933], "linux_kernel_multiple_devic": [790, 804, 814, 818, 828, 841, 846, 852, 855, 858, 933], "linux_kernel_mutex": [790, 814, 818, 828, 830, 841, 846, 852, 855, 858, 933], "linux_kernel_cdev_refactor": [790, 804, 807, 814, 818, 828, 841, 846, 852, 855, 858, 933], "linux_kernel_workqueu": [790, 814, 852, 855, 858, 933], "linux_kernel_timer_cod": [790, 814, 846, 852, 855, 858, 933], "linux_kernel_tim": [790, 814, 846, 848, 852, 855, 858, 933], "linux_kernel_cdev_auto": [790, 794, 797, 799, 804, 807, 814, 818, 828, 841, 846, 852, 855, 858, 933], "linux_kernel_cdev_manu": [790, 794, 797, 799, 802, 804, 807, 814, 818, 828, 841, 846, 852, 855, 858, 933], "linux_kernel_modules_hello_world": [790, 794, 797, 799, 802, 804, 807, 814, 816, 818, 822, 828, 834, 841, 846, 852, 855, 858, 933], "linux_kernel_fedora_module_build": [790, 794, 797, 799, 802, 804, 807, 813, 814, 816, 818, 822, 828, 834, 841, 846, 852, 855, 858, 933], "linux_kernel_fedora_kernel_build": [790, 794, 797, 799, 802, 804, 807, 811, 813, 814, 816, 818, 822, 828, 834, 841, 846, 852, 855, 858, 933], "linux_kernel_usermem": [790, 814, 852, 855, 933], "linux_kernel_cdev_first_function": [790, 799, 804, 807, 814, 818, 828, 841, 846, 852, 855, 858, 933], "linux_kernel_netdev": [790, 814, 832, 933], "linux_kernel_dma": [790, 809, 814, 832, 834, 933], "linux_kernel_list": [790, 799, 804, 807, 814, 818, 826, 828, 841, 846, 852, 855, 858, 933], "doubli": [790, 799, 803, 804, 807, 814, 818, 827, 828, 839, 841, 846, 852, 855, 858, 933], "linux_kernel_cdev_file_oper": [790, 797, 799, 804, 807, 814, 818, 828, 841, 846, 852, 855, 858, 933], "linux_kernel_waitqueu": [790, 814, 855, 933], "linux_kernel_stub_sysprog_dup": [790, 797, 799, 804, 807, 814, 818, 828, 841, 846, 852, 855, 858, 933], "dup": [790, 796, 797, 799, 804, 807, 814, 818, 828, 841, 846, 852, 855, 858, 880, 933, 966, 1005], "stub": [790, 797, 799, 804, 807, 814, 818, 828, 841, 846, 852, 855, 858, 933, 1024], "linux_kernel_iomemori": [790, 814, 822, 834, 933], "linux_kernel_pci": [790, 814, 834, 933], "unittest_gtest_cmak": [790, 1174], "interconnect": 791, "device_cr": [792, 793, 796], "cdev_init": [792, 800, 801], "cdev_add": [792, 800, 801], "unhappi": 792, "device_destroi": 792, "my_class": 792, "my_driv": [792, 795, 805, 806, 817, 827, 833, 839, 845, 856], "mknod": [792, 800, 801], "character devic": [793, 796, 801, 1194], "relatim": 793, "register_chrdev_region": [793, 800, 801], "alloc_chrdev_region": [793, 801], "htmldoc": 793, "chrdev": 793, "dev_t": [793, 801], "baseminor": 793, "highlight": 793, "bug_on": 793, "module_licens": [793, 815], "openat": [795, 959], "at_fdcwd": [795, 959], "0x7f3d11330000": 795, "einval": [795, 800, 815, 853], "enotti": 795, "file_oper": [796, 800, 801, 839], "citizenship": 796, "__user": [796, 851], "loff_t": 796, "unlocked_ioctl": 796, "my_op": 796, "this_modul": 796, "my_open": 796, "my_read": 796, "my_writ": 796, "my_ioctl": [796, 827], "mode_t": [796, 963, 967, 1005], "filp": [796, 839, 853], "vf": 796, "swiss": [796, 963, 1189], "armi": [796, 963, 1189], "my_ioctl_request": [796, 798], "my_request_such": 796, "my_request_such_and_such": 796, "laden": [796, 1203], "endod": 796, "_iow": 796, "_ior": 796, "_ioc": 796, "_ioc_non": 796, "_ioc_read": 796, "_ioc_typecheck": 796, "_ioc_writ": 796, "_iowr": 796, "my_ev": [798, 805, 806, 845, 850], "my_event_typ": 798, "my_event_ioctl": 798, "jiffi": [798, 839, 845], "my_event_list": [798, 805, 806, 827], "list_head": [798, 825, 827, 850], "num_ev": 798, "my_event_list_init": 798, "my_event_list_destroi": 798, "my_event_list_add": [798, 827, 840, 845, 856], "my_ioctl_add_ev": 798, "printk": [798, 815, 817, 856], "unregister_chrdev_region": [800, 801], "caveat": [800, 839, 942], "register_chrdev": 800, "unregister_chrdev": 800, "kern_err": 800, "cdev_del": [800, 801], "my_driver_henkel": 800, "kmem": 801, "opaqu": 801, "majmin": 801, "mkdev": 801, "drivernam": 801, "my_fop": 801, "my_cdev": 801, "devicefil": 801, "ndevic": 803, "module_param": 803, "my_devic": [803, 805, 806, 817, 833, 845], "private_data": [803, 833, 839], "kbuild": [805, 806], "torn": [805, 1181], "ccflag": [805, 806], "container_of": [806, 857], "file3": 806, "distinct": [806, 873, 957, 1084], "my_device_init": 806, "my_device_destroi": [806, 845], "everyt": 808, "vmalloc": 808, "ioremap": [808, 821], "iommu": 808, "pysic": 808, "dma_addr_t": 808, "alloc_pag": 808, "gfp_mask": 808, "get_free_pag": 808, "__get_free_pag": 808, "2order": 808, "__get_dma_pag": 808, "zone": 808, "__free_pag": 808, "free_pag": 808, "dma_handl": 808, "cpu_addr": [808, 833], "dma_alloc_coher": 808, "gfp": [808, 823, 849], "dma_free_coher": 808, "pci_dev": [808, 833], "gfp_kernel": [808, 823, 840], "gfp_atom": [808, 823], "dma_bidirect": 808, "dma_to_devic": 808, "dma_from_devic": 808, "dma_map_singl": 808, "dma_mapping_error": 808, "dma_unmap_singl": 808, "dma_map_pag": 808, "dma_unmap_pag": 808, "dma_address": 808, "sglist": 808, "sg_run": 808, "dma_map_sg": 808, "for_each_sg": 808, "hw_address": 808, "sg_dma_address": 808, "hw_len": 808, "sg_dma_len": 808, "dma_unmap_sg": 808, "nent": 808, "unmap": [808, 833], "recreat": [808, 909, 1027], "dma_sync_single_for_cpu": 808, "dma_sync_sg_for_cpu": 808, "mel": [808, 823], "gorman": [808, 823], "incredibli": 808, "transcript": [810, 837, 1135], "building_a_custom_kernel": 810, "fc33": [810, 815], "extravers": [810, 838], "cleanli": 810, "uncommit": 810, "j6": 810, "fedpkg": 810, "pesign": 810, "grubbi": 810, "33rd": 810, "f33": 810, "builddep": 810, "libexec": [810, 1023], "symver": [812, 815], "modpost": [812, 815], "module_src": 812, "kernel_build": 812, "install_mod_path": [812, 837], "modules_instal": [812, 837, 941], "fedora_kernel_build": 814, "fedora_module_build": 814, "modules_hello_world": 814, "cdev_manu": 814, "process_vs_atom": 814, "stub_sysprog_dup": 814, "cdev_auto": 814, "cdev_file_oper": 814, "cdev_first_function": 814, "cdev_refactor": 814, "multiple_devic": 814, "mutex_cod": 814, "raspi_kernel_build": 814, "interrupt_cod": 814, "spinlock_cod": 814, "timer_cod": 814, "iomemori": 814, "usermem": 814, "netdev": 814, "waitqueu": [814, 1194], "ldd3": [814, 825], "reilli": [814, 926], "probe": [815, 941, 942, 943], "hello_init": 815, "kern_debug": 815, "hello_exit": 815, "module_init": 815, "module_exit": 815, "exot": 815, "currect": [353, 815, 910], "lsmod": [815, 941, 942, 943], "insmod": 815, "rmmod": [815, 845], "dep": 815, "softdep": 815, "rebuilt": 815, "cross_compil": [817, 837, 838], "libssl": [817, 941], "gpio_request": 817, "gpio_fre": 817, "gpio_direction_input": 817, "gpio_direction_output": 817, "gpio_to_irq": 817, "my_device_activate_gpio": 817, "_destroi": 817, "3f200000": 817, "pinctrl": 817, "bcm2835": [817, 938], "request_irq": [817, 819, 833], "free_irq": [817, 819, 833], "priorit": [819, 835, 935, 993, 1005], "preempt_rt": [819, 829, 1184], "mainlin": [819, 837, 997, 1184], "irqreturn_t": [819, 833], "irq_handl": [819, 833], "irq": [819, 833, 835, 839, 995], "opqu": 819, "irq_non": 819, "irq_wake_thread": 819, "irq_handler_t": 819, "irqf_shar": [819, 833], "irqf_trigger_ris": 819, "irqf_trigger_fal": 819, "irqf_trigger_high": 819, "irqf_trigger_low": 819, "iomem": 821, "ioport": 821, "request_mem_region": 821, "0x20200000": 821, "release_mem_region": 821, "asm": [821, 1026], "iounmap": 821, "ioread8": 821, "ioread16": 821, "ioread32": 821, "iowrite8": 821, "u8": 821, "iowrite16": 821, "u16": 821, "iowrite32": 821, "u32": 821, "kmalloc kfre": 823, "dynamic memori": 823, "slab": 823, "gfp_t": [823, 840, 856], "kzalloc": 823, "kfree": 823, "scarc": 823, "discourag": 823, "stolen": [825, 934], "some_list": 825, "init_list_head": 825, "some_data": 825, "list_add": 825, "list_add_tail": 825, "new_payload": 825, "existing_payload": 825, "prepend": [825, 837, 869, 1072], "list_for_each": 825, "list_entri": 825, "cursor": [825, 897, 1145], "run_payload": 825, "list_empti": 825, "list_first_entri": 825, "list_del": [825, 827], "a_payload": 825, "inject": [827, 840, 845, 1148], "opfer": 827, "corrupt": 827, "ffff91285ae68f00": 827, "ffff9128406cec00": 827, "list_debug": 827, "0x70": [827, 942], "0xb0": 827, "0xdd": 827, "ksys_ioctl": 827, "0x82": 827, "0xc0": 827, "__x64_sys_ioctl": 827, "do_syscall_64": 827, "0x4d": 827, "entry_syscall_64_after_hwfram": 827, "0x44": 827, "0xa9": 827, "unprotect": [827, 839, 1055], "nevent": [827, 850], "my_device_list": 827, "preemptibl": [829, 997], "preemption": [829, 835, 842, 942, 993, 996, 997], "holder": [829, 1053], "mutex_init": 829, "mutex_destroi": 829, "mutex_lock": 829, "mutex_lock_interrupt": 829, "eintr": [829, 955, 1008, 1009], "mutex_lock_interruptible_nest": 829, "mutex_trylock": 829, "eagain": [829, 839, 853], "mutex_unlock": 829, "torvald": [829, 837], "trickl": 829, "rtmutex": 829, "rt_mutex": 829, "net_devic": 831, "alloc_netdev": 831, "sizeof_priv": 831, "netdev_priv": 831, "funcion": 831, "ethernet": 831, "etherdevic": 831, "alloc_etherdev": 831, "free_netdev": 831, "register_netdev": 831, "unregister_netdev": 831, "devinc": 831, "hard_start_xmit": 831, "sk_buff": 831, "skb": 831, "transmiss": [831, 960, 1132], "tx_timeout": 831, "quota": [831, 863], "stead": 831, "do_ioctl": 831, "ifreq": [831, 937], "ifr": [831, 937], "netif_start_queu": 831, "netif_stop_queu": 831, "netif_wake_queu": 831, "udevd": 833, "pci_device_id": 833, "my_id": 833, "pci_devic": 833, "0xdead": 833, "0xbeef": 833, "0xbeee": 833, "module_device_t": 833, "my_prob": 833, "my_remov": 833, "my_suspend": 833, "pm_message_t": 833, "my_resum": 833, "my_shutdown": 833, "pci_driv": 833, "id_tabl": 833, "my_init": 833, "pci_register_driv": 833, "my_exit": [833, 1042], "pci_unregister_driv": 833, "subsystem_vendor": 833, "subsystem_devic": 833, "u64": [833, 847], "dma_mask": 833, "device_count_resourc": 833, "pci_enable_devic": 833, "pdev": 833, "wizardri": 833, "pci_request_region": 833, "pci_set_mast": 833, "pci_clear_mast": 833, "pci_set_dma_mask": 833, "pci_set_drvdata": 833, "ioread": 833, "iowrit": 833, "pci_resource_len": 833, "bar_no": 833, "__iomem": 833, "pci_iomap": 833, "pci_iounmap": 833, "pci_alloc_consist": 833, "os_devic": 833, "_o": 833, "dma_addr": 833, "pci_free_consist": 833, "_size": 833, "_cpu_addr": 833, "t_os_dma_addr__get_n": 833, "_dma_addr": 833, "_os_devic": 833, "dma_bit_mask": 833, "pci_set_consistent_dma_mask": 833, "config_debug_atomic_sleep": [835, 840], "cross compil": 837, "educ": 837, "raspberrypi": [837, 838, 941, 1013, 1020], "borrow": 837, "pi2": 837, "1gb": 837, "canon": [837, 954], "hf": 837, "armv6j": 837, "hardfloat": 837, "gnueabi": 837, "objcopi": 837, "raspberry_pi": 837, "local_overlai": 837, "ebuild": 837, "binutil": [837, 838], "repo_nam": 837, "9999": 837, "sourcedir": 837, "builddir": 837, "buildparam": 837, "kconfig": 837, "zconf": 837, "raspbian": 837, "bootdir": 837, "bootf": 837, "rootf": 837, "kernel7": 837, "Then": [837, 952, 1152], "assimil": 837, "bcmrpi_defconfig": 837, "bcm2709_defconfig": 837, "config_localvers": 837, "config_ikconfig": 837, "eveytim": 837, "config_can_mcp251x": 837, "config_sensors_lm73": 837, "zimag": [837, 838, 941], "dtb": [837, 838, 941], "j3": 837, "mkknlimg": 837, "te": 837, "superus": 837, "jtf": 837, "bcm2709": 837, "smi": 837, "ft5406": 837, "can1": [837, 936], "v7": [837, 838], "ipv4": [837, 1206], "xfrm4_mode_beet": 837, "inet_lro": 837, "esp4": 837, "xfrm4_mode_transport": 837, "udp_tunnel": 837, "sdb": 837, "57344": 837, "sdb1": 837, "4162560": 837, "sdb2": 837, "enjoi": 837, "ec2aa3d2": 837, "eee7": 837, "454e": 837, "d145df5ddcba": 837, "agnost": 837, "urg": 837, "rasperri": [838, 941, 943, 1193, 1200], "patchlevel": 838, "sublevel": 838, "_morph": [839, 849], "my_driver_hello": 839, "my_driver_cdev_manu": 839, "my_driver_cdev_dynamic_major": 839, "my_driver_cdev_file_oper": 839, "my_driver_cdev_first_function": 839, "my_driver_cdev_refactor": 839, "my_driver_multiple_devic": 839, "my_driver_mutex": 839, "my_driver_interrupt": 839, "my_driver_spinlock_atom": 839, "my_driver_time_tim": 839, "my_driver_workqueu": 839, "my_driver_usermem": 839, "copy_": 839, "my_driver_waitqueu": 839, "nonblock": [839, 853, 1005, 1206], "spinlock_t": [840, 842], "isr": [840, 997, 1194], "spin_unlock": [840, 842], "reenabl": 840, "uniprocessor": 842, "multiprocessor": 842, "spin_lock_init": 842, "spin_lock": 842, "spin_trylock": 842, "irqflag": 842, "spin_lock_irqsav": 842, "spin_unlock_irqrestor": 842, "pend": [845, 874, 997, 1010], "my_inject_deferred_ev": 845, "my_device_add_deferred_ev": 845, "del_timer_sync": [845, 847], "paranoia": 845, "symmetri": 845, "my_device_add_ev": 845, "my_inject_ev": 845, "tick": 847, "config_hz": 847, "friendli": [847, 1085, 1155, 1159], "hrtimer": 847, "jiffies_to_msec": 847, "jiffies_to_usec": 847, "jiffies_to_nsec": 847, "msecs_to_jiffi": 847, "usecs_to_jiffi": 847, "timespec64_to_jiffi": 847, "timespec64": 847, "jiffies_to_timespec64": 847, "timer_list": 847, "my_tim": 847, "timerfunc": 847, "timer_setup": 847, "add_tim": 847, "del_tim": 847, "0520": 849, "0521": 849, "0525": 849, "0532": 849, "0710": 849, "preempt": [849, 993, 997], "caption": 849, "backlink": 849, "my_event_nod": 850, "my_get_one_ev": [850, 853], "my_device_get_one_ev": 850, "my_event_get_one_ev": 850, "efault": [850, 851], "uaccess": 851, "copy_to_us": 851, "copy_from_us": 851, "enosi": 853, "timerfd": [853, 961, 1001], "f_flag": 853, "wait_queue_head_t": 854, "wq": [854, 856, 857], "init_waitqueue_head": 854, "sched": 854, "wait_ev": 854, "wait_event_interrupt": 854, "wait_event_timeout": 854, "timeout_jiffi": 854, "wait_event_interruptible_timeout": 854, "wake_up": 854, "wake_up_interrupt": 854, "task_interrupt": 854, "create_workqueu": [856, 857], "destroy_workqueu": [856, 857], "eo": 856, "rtprio": 856, "work_struct": [856, 857], "init_work": [856, 857], "chrt": [856, 997], "workqueue_struct": 857, "work_func_t": 857, "queue_work": 857, "packen": 859, "gunzip": 861, "zgrep": 861, "zcat": 861, "zless": 861, "intact": [861, 1111, 1115], "viro": 862, "cpio": 862, "cleaner": 862, "archivformat": 862, "lzma": 862, "430mb": 862, "95mb": 862, "74mb": 862, "5m": [862, 934], "64mb": 862, "togeht": 863, "gfs2": 863, "zcf": 863, "decompress": [863, 1023], "zxf": 863, "ztf": 863, "dirt": 863, "livingroom": 863, "grumbl": 863, "reat": 863, "tract": 863, "ell": [863, 897], "vv": 863, "supplementari": [864, 865, 872, 874], "1021": [864, 865, 872], "somefil": [864, 865, 903], "chgrp": [864, 865, 882, 889, 891], "fellow": [864, 865], "picki": [864, 865, 1047], "ttyusb1": 868, "stick": [868, 872], "2006854": 868, "sdc": 868, "2006823": 868, "deserv": [868, 926, 987, 1013], "trash": [868, 897], "burn": [868, 943], "1mib": 868, "1mibf": 868, "0m": [868, 919, 995], "mkf": 868, "entropi": 868, "my_vari": 869, "1034184": 869, "1035812": 869, "ancestor": [869, 875, 953], "decriptor": [870, 969], "getti": 872, "kerbero": [872, 874], "agetti": 872, "cleartext": [872, 893], "brute": [872, 950, 1013], "crack": 872, "attack": [872, 950, 1028, 1148, 1192], "hierarch": 873, "peripher": [873, 1193, 1200], "grand": 873, "ten_integ": 874, "unfair": [874, 997], "dialout": [874, 969], "seg": 874, "kbyte": 874, "62715": 874, "819200": 874, "pstree": 875, "modemmanag": 875, "journ": 875, "abrtd": 875, "auditd": 875, "bluetoothd": 875, "cupsd": 875, "lau": 875, "tini": [875, 1011], "enemi": 876, "guidanc": 876, "dicdat": 876, "acknowledg": [876, 934], "fight": 876, "seamless": [876, 1161], "exampk": 876, "altruism": 876, "mkfifo": [877, 881], "stdin_fileno": [879, 963, 973, 1009, 1085], "stdout_fileno": [879, 959, 960, 963, 969, 995, 1004, 1008, 1009, 1085], "stderr_fileno": [879, 963, 1085], "religi": 879, "fed": 879, "filefor": 879, "weekli": 880, "compet": [881, 942], "award": [881, 928], "plumber": 881, "sniff": 881, "fifo": [881, 963, 1205], "rendezv": 881, "unnam": 881, "chown": [882, 894, 1025], "useradd": [882, 1025], "groupadd": 882, "usermod": 882, "groupmod": 882, "teammember42": 882, "manfromthestreet": 882, "jun": [882, 1013], "triplet": 882, "1003": 882, "110100100": 882, "110000000": 882, "0600": 882, "111101101": 882, "0755": 882, "bitmask": [882, 893, 1009], "1317": 893, "mdmckqvpfaqquqypvzjjkihsbkkcniogknxtiobvbfw8u7zuf3": 893, "0g2rqr9cnydnqq5unt": 893, "wpu8jyzeuxktapl0": 893, "burnout": 893, "retyp": 893, "rwsr": [893, 894], "32712": 893, "rwxrwxrwx": 893, "4755": [893, 894], "uid_t": 894, "getuid": 894, "geteuid": 894, "rwxrwxr": [894, 959, 1011, 1012, 1013], "24456": 894, "drwxrwxrwt": 895, "0022": 896, "strain": 897, "injuri": 897, "diseas": 897, "outout": 897, "20k": 897, "olevel": 897, "debugopt": 897, "expr1": 897, "expr2": 897, "daystart": 897, "regextyp": 897, "synopsi": 897, "findu": 897, "til": 897, "findutil": 897, "pression": 897, "print0": 897, "keystrok": 897, "noob": [897, 1058], "pos1": 897, "misconfigur": 897, "esc": 897, "freak": 897, "cvsserver": 897, "gitview": 897, "oesterreich": 897, "clearanc": 897, "e7d76d19": 897, "dd3d": 897, "4d52": 897, "2c16dc73f9d1_vstv_921302213705_2021___vstvf": 897, "boardingpass_1d9xf3dvd1uzt00tsswu68duh": 897, "gif": [897, 1149], "einkommensteuerbescheid1": 897, "boardingpass_b6uy9xqgeojspx1hxshogcbbq": 897, "einkommensteuervorauszahlungsbescheid1": 897, "immobilienbewertung": 897, "etw": 897, "confirm": 897, "ova": 897, "umsatzsteuerbescheid1": [897, 919, 920], "h0020211105124337": 897, "vk9vst311192021_0022021": 897, "img_": 899, "jpg": 899, "bilder": 899, "121751": 900, "garbage1": [901, 902, 904, 908, 909], "garbage2": [901, 902, 904, 908, 909], "diretori": 903, "sweetheart": [903, 909, 916, 990], "citi": 903, "mqueue": [912, 1004], "leavel": 916, "hintingx": 919, "1048576": 919, "drwx": [919, 921], "36817": 919, "umsatzsteuerbescheid": 920, "finanzamt": 920, "abgab": 920, "neighbor": [921, 1143], "enat": 922, "dereferenzieren": 924, "50k": [924, 925], "rekursiv": 925, "eintr\u00e4g": 925, "unterhalb": 925, "gefiltert": 925, "un\u00fcblich": 925, "gebr\u00e4uchlich": 925, "geh\u00f6ren": 925, "mmin": 925, "h\u00f6chsten": 925, "gefundenem": 925, "eintrag": 925, "heissen": 925, "beginnen": 925, "versteht": 925, "vergessen": 925, "j\u00fcnger": 925, "verkn\u00fcpft": 925, "metacharact": [925, 944], "gr\u00f6\u00dfer": 925, "lobal": 926, "egular": 926, "xpression": 926, "rint": 926, "sed": [926, 1193, 1200], "tream": 926, "itor": 926, "verb": 926, "insensit": [926, 1160], "entor": 926, "perlr": 926, "perlretut": 926, "perlrequick": 926, "jeffrei": 926, "friedl": 926, "philosopi": 930, "toether": 930, "hc": 930, "325324": 930, "xarg": 930, "bitbak": 932, "behan": 932, "webster": 932, "drone": 934, "electronic speed control": 934, "vehicl": 934, "rack": 934, "recognit": [934, 1143], "flight": 934, "fritz": [934, 942], "brigh": 934, "heinrich": 934, "polar": 934, "uevent": [934, 941, 942, 943, 977], "cheapest": 934, "quicrun": 934, "16bl30": 934, "brake": 934, "11v": 934, "conclud": [934, 942], "lipo": 934, "madli": 934, "transmitt": 934, "throttl": 934, "neutral": [934, 1145], "chop": 934, "kindli": [934, 1149], "mechatron": 934, "50hz": 934, "nanosecond": [934, 942, 961], "20000000": [934, 1045], "oscil": 934, "10bl60": 934, "000n": 934, "1500000": [934, 999], "2000000": 934, "1550000": 934, "1600000": 934, "acceler": 934, "1650000": 934, "1700000": 934, "1750000": 934, "1800000": 934, "1850000": 934, "1900000": 934, "1950000": 934, "logist": [934, 1143], "hobbi": 934, "can bu": [935, 936, 937, 938], "sinowatz": [935, 1035], "volkswagen": 935, "traffic": 935, "octet": 935, "arbitr": 935, "can_fram": [935, 937], "canid_t": [935, 937], "can_id": [935, 937], "eff": [935, 937], "rtr": [935, 937], "__u8": [935, 937], "can_dlc": [935, 937], "__attribute__": [935, 937], "can0": [936, 937], "noarp": 936, "qdisc": 936, "qlen": 936, "relic": 936, "cansend": 936, "candump": 936, "canplay": 936, "cangen": 936, "snif": 936, "loopback": 936, "pf_can": 937, "sockaddr_can": 937, "sock_raw": 937, "can_raw": 937, "ifr_nam": 937, "siocgifindex": 937, "can_famili": 937, "af_can": 937, "can_ifindex": 937, "ifr_ifindex": 937, "sockaddr": [937, 960], "can_socket": 937, "packt": 937, "frame_layout": 937, "ib3x8": 937, "frame_s": 937, "calcsiz": 937, "recvfrom": 937, "sendto": 937, "lnxpp": 938, "can2udp": 938, "openwrt": 938, "asymmetrisch": 938, "mosi": 938, "miso": 938, "sclk": 938, "broadcom": 938, "ce0": 938, "3v": [938, 941], "5v": [938, 941], "transceiv": 938, "inter intergrated circuit": 941, "lm-sensor": 941, "handwork": [941, 943], "texa": 941, "maker": 941, "dtparam": [941, 942, 943], "i2c_arm": [941, 942, 943], "gpio2": 941, "gpio3": 941, "i2c_bcm2835": [941, 942, 943], "fe804000": [941, 943, 977], "i2c_dev": [941, 942], "sot": 941, "7v": 941, "rail": 941, "capacitor": 941, "idc": 941, "gnd": [941, 943], "vdd": 941, "smbdat": 941, "smbclk": 941, "unconnect": 941, "0x49": 941, "0x4a": 941, "jumper": 941, "3v3": [941, 943], "scl": [941, 943], "probl": 941, "i2c_slav": 941, "0x0703": 941, "o_rdwr": [941, 963, 970, 1004], "msb_lsb": 941, "msb": 941, "lsb": [941, 1012], "65535": 941, "dev_fd": 941, "perror": [941, 955, 959, 960, 961, 967, 968, 969, 970, 975, 978, 995, 1001, 1004, 1008], "libncurs": 941, "bcm2711_defconfig": 941, "v7l": 941, "semiconductor": 941, "j4": 941, "kernel7l": 941, "fake": 941, "new_devic": [941, 943], "0048": 941, "modalia": 941, "preinstal": 941, "hwmon0": 941, "thermal": 941, "thermal_zone0": 941, "hwmon1": [941, 943], "temp1_max": 941, "temp1_max_alarm": 941, "temp1_min": 941, "temp1_min_alarm": 941, "update_interv": 941, "milli": [941, 943], "22000": 941, "randomli": [941, 943], "nomenclatur": 941, "pulse width modul": 942, "resistor": 942, "bright": 942, "potentiomet": 942, "ssop": 942, "0b1000000": 942, "buse": [942, 943], "i2cdetect": [942, 943], "charactr": 942, "pca": 942, "simultan": [942, 1008], "peculiar": 942, "pca9685a": 942, "nxp": 942, "dtoverlai": [942, 943], "pwm_pca9685": 942, "regmap_i2c": 942, "3f804000": 942, "0040": [942, 977], "npwm": 942, "unexport": [942, 977], "butt": [942, 1023], "intercept": [942, 1034], "dim": 942, "fade": 942, "800000": [942, 1141], "600000": [942, 1141], "50000": 942, "apolog": 942, "kenel": 942, "devlop": 942, "pleasur": 942, "cornerston": 943, "unstabl": 943, "parasit": 943, "bitbang": 943, "gpiopin": 943, "profession": 943, "addon": 943, "pinout": 943, "01144fe43baa": 943, "w1_bus_master8": 943, "w1_bus_master1": 943, "amaz": 943, "400000000000": 943, "800000000000": 943, "behalf": [943, 957, 1011], "ad0": 943, "ad1": 943, "ad2": 943, "vcc": 943, "0x18": 943, "0b0011000": 943, "shortli": [943, 1034], "execstart": 943, "36864": 943, "w1_bus_master2": 943, "w1_bus_master3": 943, "w1_bus_master4": 943, "w1_bus_master5": 943, "w1_bus_master6": 943, "w1_bus_master7": 943, "busno": 943, "abtract": 943, "prepackag": 943, "afford": 943, "alarm": [943, 1007, 1010], "conv_tim": 943, "w1_slave_driv": 943, "eeprom": 943, "ext_pow": 943, "w1_slave": 943, "22750": 943, "crc": 943, "rpi_volt": 943, "isa": 943, "in0": 943, "cpu_therm": 943, "temp1": 943, "w1_slave_temp": 943, "reliabl": 943, "radiou": 943, "disappear": 943, "0c4000000000": 943, "0x28": 943, "dalla": [943, 971], "02131d9920aa": 943, "5d": 943, "011432f138f9": 943, "misbehavior": 943, "instabl": 943, "pump": 943, "nuclear": 943, "plant": 943, "ssh-keygen": [944, 950], "password authent": [944, 950], "key based authent": [944, 950], "remote login": [944, 950], "unencrypt": 944, "rlogin": 944, "telnet": 944, "nsa": 944, "primarili": [944, 1037, 1157], "sftp": 944, "portno": 944, "propaget": 944, "sha256sum": 945, "72c18232434d0551af75f964ea66ae5d9271faba895f40a929fb17f19d7ab44c": 945, "mitm": 950, "uncomfort": 950, "keygen": 950, "safeguard": 950, "unrespons": 951, "port forward": 952, "portforward": 952, "secure copi": [952, 953], "hmmm": 952, "whateer": 952, "mydocu": 953, "recus": 953, "mobil": 953, "bandwidth": 953, "mediat": 953, "descriptiotn": 953, "file system": 954, "network file system": 954, "smb": 954, "crawl": 954, "debianish": 954, "mountpoint": 954, "grant": 954, "idmap": 954, "errnum": 955, "strerror_r": 955, "buflen": 955, "cleanest": 955, "_r": 955, "reentrant": 955, "syscal": 957, "getaddrinfo": 957, "ri": 959, "nbytes_read": [959, 960, 961], "24608": 959, "1024root": 959, "nager": 959, "698nager": 959, "gatewai": 960, "peer": [960, 963], "netinet": 960, "af_inet": 960, "sock_stream": 960, "sockaddr_in": 960, "sin_famili": 960, "sin_port": 960, "inet_aton": 960, "sin_addr": 960, "ipproto_ip": 960, "sa_famili": 960, "inet_addr": 960, "10hallo": 960, "16thi": 960, "ong": 960, "14ong": 960, "timerfd_settim": 961, "itimerspec": [961, 995], "nasti": [962, 995], "ingenu": 963, "smae": 963, "o_append": 963, "o_cloexec": 963, "sigpip": [963, 1009], "whenc": 963, "seek_cur": 963, "seek_end": 963, "occupi": [963, 965, 966], "status": 964, "srcfile": 964, "dstfile": 964, "1073741825": 965, "0k": 965, "texttt": 966, "dup2": 966, "oldfd": 966, "newfd": 966, "o_": 966, "bytes_to_writ": [967, 968, 970], "wxr": 967, "o_tmpfil": 967, "speci": 967, "pli": 967, "nread": [969, 975, 978, 1001, 1004, 1008], "thats": [969, 970], "litter": 970, "misspel": 970, "24625": 971, "24562": 971, "pread": 973, "pwrite": 973, "readv": 973, "writev": 973, "uio": 973, "iovec": 973, "iov": 973, "iovcnt": 973, "preadv": 973, "pwritev": 973, "ftruncat": [973, 1004, 1005], "filedescriptor": 973, "gpio26": [975, 977, 978], "subtre": 977, "fe200000": 977, "gpiochip488": 977, "gpiochip504": 977, "active_low": 977, "fd_set": [978, 1001], "exc_fd": 978, "fd_zero": [978, 1001], "nreadi": 978, "fd_isset": [978, 1001], "eek": 978, "intens": 979, "ppid": 979, "tid": 979, "tsd": 979, "spezif": 979, "_reentrant": 979, "lpthread": [979, 995, 1014], "start_routin": 980, "pthread_exit": 980, "pthread_cancel": 980, "pthread_attr_setdetachst": 980, "detachst": 980, "pthread_create_detach": 980, "pthread_detach": 980, "pthread_self": 980, "pthread_equ": 980, "30650": 980, "13961": 980, "correl": 980, "gettid": 980, "pthread_mutexattr_t": [982, 998], "pthread_mutex_destroi": 982, "pthread_mutex_trylock": 982, "global_mutex": 982, "pthread_mutexattr_settyp": 982, "pthread_mutex_norm": 982, "pthread_mutex_errorcheck": 982, "pthread_mutex_recurs": 982, "pthread_mutex_default": 982, "pthread_cond_destroi": 984, "pthread_cond_broadcast": 984, "parlanc": 984, "set_autoreset_ev": 984, "ev": 984, "is_set": 984, "wait_autoreset_ev": 984, "acquiriert": 984, "autoreset": 984, "spuriou": 984, "woken": 984, "pthread_condattr_t": 984, "pthread_cond_initi": 984, "pthread_cond_timedwait": 984, "abstim": 984, "use_glob": 986, "pthread_once_t": 986, "global_onc": 986, "pthread_once_init": 986, "init_glob": 986, "pthread_onc": 986, "once_control": 986, "init_routin": 986, "pthread_key_cr": 986, "__thread": 986, "pthread_atfork": 987, "legales": 987, "lock_rac": 989, "succeed": [989, 1176], "foreground": [990, 1043], "huh": 990, "paradox": 990, "setenv": 992, "putenv": 992, "unsetenv": 992, "clearenv": 992, "customvar": 992, "timesl": 993, "starv": 993, "throughput": 993, "sha1": [993, 996, 1012], "voluntarili": [993, 996], "lrt": 995, "app_statu": 995, "tick_count": 995, "update_statu": 995, "sigact": [995, 1008, 1009], "sa_handl": [995, 1008, 1009], "sigrtmin": 995, "sigev": [995, 1005], "sev": 995, "sigev_notifi": 995, "sigev_sign": 995, "sigev_signo": 995, "timer_t": 995, "tspec": 995, "nsec": 995, "timer_settim": 995, "show_statu": 995, "freerto": [995, 998], "syncron": 995, "update_status_func": 995, "initial_t": 995, "interval_t": 995, "show_status_func": 995, "update_task": 995, "show_task": 995, "231765": 995, "225819": 995, "5635": 995, "lwp": 995, "231766": 995, "231767": 995, "tracer": 995, "restart_syscal": 995, "clock_nanosleep": 995, "clock_realtim": 995, "500000000": 995, "033": 995, "7m": 995, "flash_func": 995, "is_revers": 995, "flash_task": 995, "flasher": 995, "indepen": 995, "toggl": 995, "fore": [995, 1045], "particularli": 996, "suscept": 996, "nicer": 997, "renic": 997, "din": 997, "44300": 997, "echtzeitbetrieb": 997, "betrieb": 997, "rechensystem": 997, "verarbeitung": 997, "anfallend": 997, "st\u00e4ndig": 997, "derart": 997, "betriebsbereit": 997, "da\u00df": 997, "verarbeitungsergebniss": 997, "vorgegebenen": 997, "zeitspann": 997, "000014": 997, "013914m": 997, "91410827636698u": 997, "000002": [997, 999], "002382m": 997, "3820173632900326u": 997, "intrus": 997, "controversi": 997, "sched_oth": 998, "relinquish": 998, "sched_param": 998, "sched_getschedul": 998, "sched_prior": 998, "pthread_setschedparam": 998, "pthread_getschedparam": 998, "predefini": 998, "pthread_attr_setschedpolici": 998, "spoken": 998, "pthread_mutexattr_setprotocol": 998, "pthread_prio_inherit": 998, "pthread_prio_protect": 998, "risen": 998, "pthread_mutexattr_setprioceil": 998, "000105": 999, "105247m": 999, "24749755859354u": 999, "000015": 999, "014643m": 999, "64260525619006u": 999, "105u": 999, "000067": 999, "067263m": 999, "2626495361326u": 999, "000003": 999, "002883m": 999, "8827592917392217u": 999, "ondemand": 999, "governor": 999, "cpufreq": 999, "scaling_governor": 999, "cpuinfo_cur_freq": 999, "067036m": 999, "03615188598611u": 999, "000001": 999, "001257m": 999, "2571678380193383u": 999, "000065": 999, "065188m": 999, "188407897949u": 999, "002376m": 999, "3758434034066656u": 999, "001042": 999, "042438m": 999, "4375534057617u": 999, "000017": 999, "017123m": 999, "123423079175748u": 999, "000143": 999, "142646m": 999, "6458358764593u": 999, "000005": 999, "004995m": 999, "994855006705264u": 999, "_syse": 1001, "exit_failur": 1001, "consume_fd": 1001, "random_fd": 1001, "tty_fd": 1001, "nfd": 1001, "ttys4": 1001, "in_fd": 1001, "eof_detect": 1001, "shm": [1003, 1004, 1005], "099": 1003, "sem": [1003, 1004, 1005], "shared memori": 1004, "message queu": 1004, "mman": 1004, "fstat": 1004, "st_size": 1004, "map_fail": 1004, "shm_open": [1004, 1005], "tmpf": [1004, 1005], "resiz": 1004, "4095": 1004, "weigh": 1004, "map_shar": 1004, "counter_loc": 1004, "sem_t": [1004, 1005], "sem_open": 1004, "sem_fail": 1004, "sem_wait": 1004, "sem_post": 1004, "mq_attr": [1004, 1005], "mq_maxmsg": [1004, 1005], "mq_msgsize": [1004, 1005], "mqd_t": [1004, 1005], "mq_open": 1004, "mq_send": 1004, "mq_receiv": 1004, "shm_unlink": 1005, "overtak": 1005, "mq_overview": 1005, "oflag": 1005, "mq_flag": 1005, "mqde": 1005, "msg_ptr": 1005, "msg_len": 1005, "msg_prio": 1005, "sevp": 1005, "disturb": [1005, 1008], "elegantli": 1005, "qsize": 1005, "signo": 1005, "notify_pid": 1005, "goiven": 1005, "sem_overview": 1005, "sem_trywait": 1005, "sem_timedwait": 1005, "abs_timeout": 1005, "shm_close": 1005, "shm_overview": 1005, "051": [1007, 1008], "segv": [1008, 1009], "mortem": [1008, 1135], "core_pattern": 1008, "termination_handl": 1008, "sigint": [1008, 1009], "sig_atomic_t": [1008, 1009], "term_act": 1008, "alarm_handl": 1008, "alarm_act": 1008, "sigset_t": [1008, 1010], "termination_sign": 1008, "sigemptyset": [1008, 1009], "sigaddset": [1008, 1009], "sigquit": 1008, "sigprocmask": [1008, 1009], "sig_block": 1008, "impolit": 1008, "sig": [1008, 1009], "consume_pip": 1008, "pipenam": 1008, "puzzl": 1008, "pthread_sigmask": [1008, 1009], "sigtstp": 1009, "sigalrm": [1009, 1010], "sigchld": 1009, "abnorm": 1009, "sigabrt": 1009, "sigsegv": 1009, "sigbu": 1009, "sigil": 1009, "sigfp": 1009, "unblock": 1009, "oldset": 1009, "sigpend": 1009, "sigfillset": 1009, "signum": 1009, "sigdelset": 1009, "sigismemb": 1009, "sigsetop": 1009, "recept": 1009, "sa_mask": 1009, "sa_flag": 1009, "oldact": 1009, "sig_ign": 1009, "sig_dfl": 1009, "sighandler_t": 1009, "_exit": 1009, "barebon": 1010, "louder": 1010, "stallman": 1011, "risc": 1011, "llvm": 1011, "24360": 1011, "hello_h": [1011, 1027, 1029], "24416": 1011, "linkabl": [1011, 1148, 1203], "0000000000401040": 1011, "_start": 1011, "0000000000401000": 1011, "_init": 1011, "00000000004011b8": 1011, "_fini": 1011, "crt": 1011, "crt1": 1011, "crti": 1011, "crtn": 1011, "0000000000404000": 1011, "_global_offset_table_": 1011, "reloc": 1011, "1762320": 1011, "0000000000401126": 1011, "1224008": 1011, "greetdemo": 1012, "cmake_system_nam": 1012, "toolchain_base_dir": [1012, 1026], "cmake_c_compil": 1012, "cmake_cxx_compil": 1012, "find_xxx": 1012, "cmake_find_root_path_mode_program": 1012, "cmake_find_root_path_mode_librari": 1012, "cmake_find_root_path_mode_includ": 1012, "toolchian": 1012, "cmake_toolchain_fil": 1012, "libgreet": [1012, 1013, 1019, 1028, 1029], "13921": [1012, 1013], "cmakecach": [1012, 1013], "26192": [1012, 1013], "27920": [1012, 1013], "8503": [1012, 1013], "eabi5": 1012, "armhf": 1012, "5db807d9b005b19e1e0c957755fa7ca7b771edcb": 1012, "debug_info": 1012, "armv7l": 1014, "challeng": 1014, "metadistribut": 1014, "miniumum": 1014, "realiti": 1014, "rasberri": 1016, "clickabout": 1021, "workabl": 1023, "tarbal": 1023, "lastest": 1023, "x86_64_arm": 1023, "precompos": 1023, "uncompress": 1023, "73812": 1023, "1107168": 1023, "1481768": 1023, "1968456": 1023, "1091864": 1023, "1030432": 1023, "1221816": 1023, "lynxbe": 1025, "y3p9kn7mjei": 1025, "cli": 1025, "dockerhub": 1025, "hub": 1025, "sh_18_04": 1025, "78683068": 1025, "1292296": 1025, "70mb": 1026, "73018472": 1026, "auxvec": 1026, "bitsperlong": 1026, "bpf_perf_ev": 1026, "rapidli": 1027, "phoni": [1027, 1028, 1029], "origaniz": 1028, "relink": 1028, "0x2e20": 1028, "vdso": 1028, "0x00007fffe9fa7000": 1028, "0x00007f75ca289000": 1028, "0x00007f75ca46d000": 1028, "r_x86_64_32": 1028, "fpic": 1028, "whom": 1029, "hello_flex": 1029, "hello_flexible_h": 1029, "cq": 1029, "lisp": 1030, "create_f": 1030, "create_print": 1030, "print_blah": 1030, "print_someth": 1030, "sytax": 1031, "shutil": 1032, "tarfil": 1032, "temporarydirectori": 1032, "tmpd": 1032, "tarnam": 1032, "expandvar": 1032, "contrain": 1032, "__enter__": 1032, "__exit__": 1032, "openforread": 1032, "myprint": 1032, "orig_print": 1032, "exc_val": 1032, "exc_tb": 1032, "myarg": 1032, "total_ord": 1033, "a_vari": 1034, "baseexceptiongroup": 1034, "exceptiongroup": 1034, "subtyp": 1034, "maybe_fail": 1034, "lone": 1034, "mysubsystemerror": 1034, "reallybaderror": 1034, "someothererror": 1034, "definitelybad": 1034, "evenwors": 1034, "collapsingtheworld": 1034, "errorcod": 1034, "__cached__": 1035, "_frozen_importlib_extern": 1035, "sourcefileload": 1035, "0x7fbaca5fc3e0": [], "blindli": 1035, "ansibl": 1035, "matno": 1035, "conffil": 1035, "confcod": 1035, "confdict": 1035, "2187": [], "object ori": [1036, 1192], "keyword argu": 1036, "starstararg": [1036, 1057], "for loop": 1036, "iterator protocol": 1036, "operator overload": 1036, "drawn": 1037, "inputrang": 1037, "disgust": 1037, "gentli": 1037, "smarter": 1037, "nolimit": 1038, "fibo_numb": 1038, "jerki": 1038, "max_numb": 1038, "satisfactori": 1038, "python_1010_generators_yield": 1038, "glossari": 1039, "breadth": 1039, "subnamespac": 1042, "mysupermodul": 1042, "mysuperfunct": 1042, "subpackage1": 1042, "module1": 1042, "module2": 1042, "subpackage2": 1042, "disambigu": 1042, "increment_background": [1043, 1045], "background_integ": 1043, "foreground_integ": 1043, "runn": 1043, "backgroundincrement": 1043, "uncool": 1043, "14784035": 1045, "quack": 1047, "mockup": 1047, "91795524196443": [], "621687522813275": [], "30073313125571": [], "524900714874434": [], "19890124863636": [], "__next__": 1047, "brokensensor": 1047, "gettemperatur": 1047, "refect": 1048, "emp": 1051, "add_employe": 1051, "mgr": 1051, "isold": [1051, 1052, 1153], "haubentauch": [1051, 1052, 1055, 1153], "parentcl": 1051, "funnili": 1051, "make_child": 1052, "parent1": 1052, "parent2": 1052, "vvv": 1052, "father": 1052, "vvvvvv": 1052, "tabular": 1053, "someclass": 1053, "persons_from_csv": 1053, "person_dict": 1053, "operators object oriented program": 1054, "behaivor": 1054, "number2": 1054, "int2": 1054, "whistl": [1054, 1057], "symmetr": [1054, 1084], "commut": 1054, "summar": 1054, "attrnam": 1055, "meier": 1055, "expicitli": 1056, "0x7f1b32f11340": [], "marker": 1060, "eighti": 1060, "monti": 1060, "incompat": [1060, 1066, 1074, 1085], "benevol": 1060, "bdfl": [1060, 1145], "overse": 1060, "januari": 1060, "dropbox": 1060, "awk": 1062, "sensit": 1065, "throughout": 1065, "0o01234": 1066, "14159265359": [1066, 1080], "3e12": 1066, "\u00e4\u00f6\u00fc": 1066, "xa4": 1066, "xb6": 1066, "xbc": 1066, "xe4": 1066, "compel": 1066, "codebas": 1066, "ancient": 1066, "sequencish": 1070, "sixtim": 1070, "seen_sixey": 1070, "blahblahblahblahblah": 1071, "aah": 1072, "a_list": 1072, "hlow": 1072, "hlowrd": 1072, "heritag": 1074, "139774285182888": [], "139774285182920": [], "139774285183144": [], "139774001782528": [], "139774001546320": [], "parameterizab": 1077, "program_exit": 1077, "exitstatu": 1077, "spam": [1079, 1143], "dec": 1079, "x58": 1079, "07d": 1080, "0x": 1080, "5x": 1080, "0x2f": 1080, "4x": 1080, "0x002f": 1080, "5o": 1080, "0o31": 1080, "04d": 1080, "0042": 1080, "05d": 1080, "00042": 1080, "thistl": 1081, "thorn": 1081, "annoy": 1081, "sqn": 1082, "defval": 1083, "iterkei": 1083, "keyiter": 1083, "0x7ff2e8753418": 1083, "unord": 1084, "tunabl": 1085, "shoudn": 1085, "0x7fca2c785b70": 1086, "tof": 1086, "outputfilenam": 1087, "argumentpars": 1087, "add_argu": 1087, "parse_arg": 1087, "ou": 1087, "\u0142ukasz": 1088, "langa": 1088, "yuri": 1088, "selivanov": 1088, "pybay2018": 1088, "ylabel": [1090, 1141], "xmin": 1090, "xmax": 1090, "ymin": 1090, "ymax": 1090, "twine": 1091, "lotsa": [1091, 1164], "long_descript": 1091, "long_description_content_typ": 1091, "beta": 1091, "osi": 1091, "approv": 1091, "package_dir": 1091, "python_requir": 1091, "install_requir": 1091, "paho": [1091, 1152], "pyproject": 1091, "toml": 1091, "backend": 1091, "build_meta": 1091, "yadda": 1091, "sdist": 1091, "python_course_2022_11_07": 1091, "12549": 1091, "BE": 1091, "mydb": 1092, "hardli": 1093, "femal": 1098, "miracl": [1101, 1118], "previouslin": 1105, "ifi": 1118, "uniqifi": 1119, "sensor_const": 1124, "test_sensor_const": 1124, "ii": [1125, 1127, 1131, 1133, 1144], "user_record": [1126, 1128], "read_csv_head": [1126, 1133], "read_csv_nohead": [1128, 1132, 1133], "csvfilenam": 1130, "test_noheader_person": 1131, "read_noheader_person": 1131, "test_must_not_use_global_variables_as_return_object": 1131, "filename1": 1131, "noheader1": 1131, "filename2": 1131, "noheader2": 1131, "users1": 1131, "users2": 1131, "test_header_person": 1131, "read_header_person": 1131, "test_user_json_person": 1131, "userdb_json": [1131, 1132], "test_person_to_json": 1131, "joerg_sent": 1131, "to_json_person": 1131, "joerg_receiv": 1131, "from_json_person": 1131, "envis": [1132, 1190], "to_json": 1132, "test_user_json": 1132, "test_user_to_json": 1132, "user_s": 1132, "json_user_s": 1132, "from_json": 1132, "test_nohead": 1133, "test_head": 1133, "lectur": [1135, 1204], "unsupervis": [1138, 1143], "conveyor": 1138, "belt": 1138, "linear_regress": [1139, 1142], "model_select": [1139, 1141], "train_test_split": [1139, 1141], "linear_model": [1139, 1141], "linearregress": [1139, 1141], "history_data": [1139, 1140, 1141, 1142], "inputfeatur": [1139, 1141], "outputfeatur": [1139, 1141], "input_train": [1139, 1141], "input_test": [1139, 1141], "output_train": [1139, 1141], "output_test": [1139, 1141], "test_siz": [1139, 1141], "output_predict": [1139, 1141], "visualcross": 1140, "york": [1140, 1141], "wind": [1140, 1141], "chill": [1140, 1141], "precipit": [1140, 1141], "snow": [1140, 1141], "gust": [1140, 1141], "humid": [1140, 1141], "rain": 1140, "cloudi": 1140, "995833": 1141, "688889": 1141, "287500": 1141, "327273": 1141, "012222": 1141, "690278": 1141, "470769": 1141, "369444": 1141, "513421": 1141, "946106": 1141, "574023": 1141, "313256": 1141, "994536": 1141, "070695": 1141, "025980": 1141, "302423": 1141, "214825": 1141, "665492": 1141, "900000": 1141, "700000": 1141, "090000": 1141, "050000": 1141, "377500": 1141, "750000": 1141, "950000": 1141, "650000": 1141, "330000": 1141, "325000": 1141, "850000": 1141, "425000": 1141, "825000": 1141, "715000": 1141, "470000": 1141, "970000": 1141, "multidimension": 1141, "xlabel": 1141, "coef_": 1141, "80189231": 1141, "intercept_": 1141, "95355086": 1141, "609608": 1141, "571879": 1141, "736988": 1141, "170933": 1141, "798254": 1141, "189739": 1141, "180394": 1141, "449230": 1141, "661530": 1141, "057745": 1141, "850176": 1141, "284120": 1141, "685067": 1141, "weather": [1142, 1143], "splice": [1142, 1143], "paper": 1142, "aspir": [1142, 1169], "dilig": 1143, "bite": 1143, "forecast": 1143, "agi": 1143, "asi": 1143, "forest": 1143, "predictor": 1143, "accuraci": 1143, "classif": 1143, "unlabel": 1143, "reinforc": 1143, "reward": 1143, "bay": 1143, "sepp": 1144, "tupleunpack": 1144, "spell": 1144, "redundantli": 1144, "quotechar": 1144, "spreadsheet": 1144, "odbc": 1145, "mysql": 1145, "informix": 1145, "berkeleydb": 1145, "mongodb": 1145, "rollback": 1145, "initd": 1147, "psycopg": 1147, "libpq": 1147, "conninfo": 1147, "psycopg2": 1147, "schwammerldb": 1147, "android": 1148, "schwammerln": 1148, "giftig": 1148, "geniessbar": 1148, "dbm": 1148, "steinpilz": 1148, "roehren": 1148, "speisetaeubl": 1148, "lamellen": 1148, "speitaeubl": 1148, "eierschwammerl": 1148, "teufelsroehrl": 1148, "overcod": 1149, "512119": 1149, "european": 1149, "steroid": 1149, "htmlhelp": 1149, "charset": 1149, "latin1": 1149, "chines": 1149, "enc": 1149, "0xfc": 1149, "0xdf": 1149, "0xf6": 1149, "\u00df": 1149, "cyril": 1149, "received_enc": 1149, "lg_enc": 1149, "bye_enc": 1149, "artificial intellig": 1150, "postgr": 1150, "mssql": 1150, "data sci": 1150, "ecosystem": 1150, "antp": 1152, "53767": 1152, "tcp6": 1152, "mosquitto_pub": 1152, "easiest": 1152, "message_receiv": 1152, "userdata": 1152, "on_messag": 1152, "loop_forev": 1152, "mosqitto_pub": 1152, "styrian": 1152, "esp": 1152, "666608091972": 1153, "ignore_index": 1153, "new_person": 1153, "saskia": 1153, "456710042003": 1153, "irrevers": 1154, "1153": [1157, 1158], "_locationindex": [1157, 1158], "maybe_cal": [1157, 1158], "apply_if_cal": [1157, 1158], "_getitem_axi": [1157, 1158], "_ilocindex": 1157, "1711": 1157, "1713": 1157, "_validate_integ": 1157, "_ix": 1157, "1647": 1157, "1645": 1157, "len_axi": 1157, "_get_axi": 1157, "rangeindex": 1158, "3791": 1158, "get_loc": 1158, "casted_kei": 1158, "pyx": 1158, "_lib": 1158, "indexengin": 1158, "hashtable_class_help": 1158, "pxi": 1158, "pyobjecthasht": 1158, "get_item": 1158, "1393": 1158, "_locindex": 1158, "1391": 1158, "thru": 1158, "_validate_kei": 1158, "_get_label": 1158, "1343": 1158, "1341": 1158, "axisint": 1158, "5567": 1158, "ndframe": 1158, "drop_level": 1158, "new_index": 1158, "4235": 1158, "4239": 1158, "bool_": 1158, "3793": 1158, "3795": 1158, "3797": 1158, "invalidindexerror": 1158, "3799": 1158, "listlik": 1158, "_check_indexing_error": 1158, "3801": 1158, "3803": 1158, "sort_index": 1158, "multiindex": 1158, "contrari": 1159, "lower_email": 1160, "rentner": 1160, "is_palindrom": 1160, "facto": [1161, 1185], "subel": 1161, "attrib": 1161, "getroot": 1161, "package manag": 1163, "project manag": [1163, 1191], "unit test": 1163, "virtual environ": 1163, "affin": 1163, "witch": 1164, "gnore": 1164, "ackup": 1164, "bort": 1164, "cert": 1164, "pem": 1164, "pythonhost": 1164, "e17846ef3601dcb6f118ea447439650e0c35cb4fe60274fbe24214156df2": 1164, "cp38": 1164, "manylinux2010_x86_64": 1164, "ext": 1164, "argcomplet": 1164, "asn1crypto": 1164, "ensurepip": [1165, 1171], "test_project": 1169, "test_soup": 1169, "test_task": 1169, "stringent": 1169, "discoveri": 1169, "syndrom": [1169, 1170, 1176], "test_person_point": 1169, "deselect": 1169, "test_": 1169, "test_simpl": 1169, "test_trivi": 1169, "test_trivial_but_fail": 1169, "___________________________": 1169, "____________________________": 1169, "test_stat": 1169, "implementation_point": 1169, "implementor1": 1169, "implementor2": 1169, "documentation_point": 1169, "integration_point": 1169, "implementation_perc": 1169, "documentation_perc": 1169, "integration_perc": 1169, "total_perc": 1169, "total_point": 1169, "gathered_point": 1169, "test_another_task_aspect": 1169, "test_ini_file_pars": 1169, "my_test_fil": 1169, "mytestcas": 1170, "runtest": 1170, "assertequ": 1170, "texttestrunn": 1170, "__db": 1170, "create_databas": 1170, "fill_test_data": 1170, "remove_databas": 1170, "testfeature1": 1170, "testfeature2": 1170, "testsuit": 1170, "addtest": 1170, "testload": 1170, "loadtestsfromtestcas": 1170, "testsometh": 1170, "failif": 1170, "failunless": 1170, "failunlessequ": 1170, "failifequ": 1170, "failunlessalmostequ": 1170, "failunlessrais": 1170, "env_dir": 1171, "my_venv": 1171, "easy_instal": 1171, "pip3": 1171, "powershel": 1171, "joblib": 1171, "threadpoolctl": 1171, "deactiv": 1171, "my_recreated_venv": 1171, "persuad": 1171, "will_fail": [1175, 1178], "initgoogletest": [1176, 1181], "run_all_test": [1176, 1181], "lgtest": [1176, 1178], "onesuit": 1176, "test1": 1176, "test2": 1176, "anothersuit": 1176, "postive_pattern": 1176, "negative_pattern": 1176, "gtest_list_test": 1176, "faildemo": 1176, "failisfat": 1176, "assertdemo": 1176, "assertisfat": 1176, "expect_": 1176, "expectdemo": 1176, "expectisnonfat": 1176, "expect_tru": 1176, "expect_eq": 1176, "0x58": 1176, "0x55": 1176, "assert_": 1177, "repoqueri": 1178, "dpkg": 1178, "listfil": 1178, "joergfaschingbau": 1178, "cmake_compiler_is_gnucc": 1178, "ggdb": 1178, "googlebenchmark": 1178, "predef": [1180, 1181], "predefinedtestenviron": 1181, "paranoidtest": 1181, "untechn": 1181, "thefixtur": 1181, "testthatmodifiesst": 1181, "complexfixtur": 1181, "first_n": 1181, "sometest": 1181, "egal": 1183, "welcher": 1183, "schulungstyp": 1183, "problemlo": 1183, "verifiziert": 1183, "formlos": 1183, "anliegen": 1183, "umgehend": 1183, "setzen": 1183, "besprechen": 1183, "gestaltung": 1183, "schl\u00fcssigkeit": 1183, "chronologisch": 1183, "gehaltenen": 1183, "querzulesen": 1183, "roter": 1183, "faden": 1183, "ablaufen": 1183, "\u00e4nderungen": 1183, "kursgeschehen": 1183, "passieren": 1183, "detailliert": 1183, "kosten": 1183, "terminen": 1183, "inhouseschulungen": 1183, "buchenden": 1183, "terminisiert": 1183, "zustandekommt": 1183, "zeitlich": 1183, "\u00f6rtlich": 1183, "flexibel": [1183, 1184], "zul\u00e4sst": 1183, "besond": 1183, "onlineschulungen": 1183, "erwiesen": 1183, "dedizierten": 1183, "implementieren": [1183, 1188], "instruktionen": [1183, 1187], "datenschutzrichtlinien": 1183, "genug": 1183, "durchweg": 1183, "wahlweis": 1183, "offenen": 1183, "anmelden": 1183, "inhouseschulung": 1183, "exklusiv": 1183, "\u00fcblicherweis": 1183, "firmenstandort": 1183, "basteln": [1183, 1200], "schwierig": 1183, "z\u00fcgig": 1184, "uhr": 1184, "punktlandung": 1184, "mbr": 1184, "bootet": 1184, "nachs\u00e4tz": 1184, "wahllos": 1184, "reinen": [1184, 1200], "gebastelt": 1184, "leichtfertigerweis": 1184, "richtigerweis": 1184, "multilib": 1184, "ausgestattet": [1184, 1193, 1200, 1207], "l\u00e4uft": 1184, "seltsamerweis": 1184, "dar\u00fcber": 1184, "zeitersparnisgr\u00fcnden": 1184, "hinweggeholfen": 1184, "vorcompilierten": 1184, "statisch": [1184, 1202], "gelinkten": 1184, "christof": 1184, "sourcen": 1184, "crosszucompilieren": 1184, "gescheitert": 1184, "ungl\u00fccklichen": 1184, "umstand": 1184, "schulungsrechn": 1184, "neu": 1184, "aufzusetzen": 1184, "kompil": 1184, "verschwunden": 1184, "buildscript": 1184, "konnt": 1184, "kreativen": 1184, "wiederhergestellt": 1184, "v\u00f6llig": 1184, "sinnfrei": 1184, "distributionen": 1184, "compilieren": [1184, 1186], "architekturen": 1184, "versucht": [1184, 1185, 1187], "leben": [1184, 1200], "anzuwenden": 1184, "leut": 1184, "anzusehen": 1184, "wort": [1184, 1186], "gefallen": 1184, "hart": 1184, "garantien": 1184, "durchau": 1184, "gerechtfertigt": 1184, "gesch\u00fctz": 1184, "auffahren": 1184, "enthaltenen": 1184, "n\u00fctzen": 1184, "stichwort": [1184, 1193, 1200], "mittelweg": 1184, "diffundieren": 1184, "aufruft": 1184, "startet": 1184, "ausgekl\u00fcgelt": 1184, "funktionsweis": 1184, "jeher": 1184, "kennt": [1184, 1206], "gewaltig": 1184, "geschichtsbelastet": 1184, "tr\u00e4gt": 1184, "intelligent": [1184, 1193, 1200], "trotz": 1184, "behauptungen": 1184, "gar": 1184, "lieblingsseit": 1184, "linuxthemen": 1184, "zentrisch": 1184, "bourne shel": [1185, 1195], "\u00fcbel": 1185, "sprechen": [1185, 1193, 1200], "vollst\u00e4ndig": 1185, "shellprogrammierung": 1185, "ruf": 1185, "schmutzigen": 1185, "stattdessen": 1185, "hauch": 1185, "pervers": 1185, "\u00e4sthetik": 1185, "verpassen": 1185, "geschicht": 1185, "kram": 1185, "environmentvariablen": 1185, "kontrollkonstrukt": [1185, 1186], "hauptteil": 1185, "stringmanipul": 1185, "obskur": 1185, "konstrukt": [1185, 1195], "auskommt": 1185, "umgang": [1185, 1195], "bibel": 1186, "hinzuf\u00fcgen": 1186, "erfind": 1186, "tickt": 1186, "wozu": 1186, "grenzen": 1186, "vorlag": 1186, "didaktik": 1186, "erg\u00e4nzt": 1186, "kontext": 1186, "heutigen": 1186, "sprachkern": 1186, "unterrichten": 1186, "standardlibrari": 1186, "zugunsten": 1186, "bequemeren": 1186, "verzichten": 1186, "sprachdesign": 1186, "geachtet": 1186, "isoliert": 1186, "abseit": [1186, 1188, 1206], "mitbringt": 1186, "h\u00e4lt": 1186, "eignet": 1186, "hervorragend": [1186, 1193, 1201, 1206], "systemprogrammierung": 1186, "weglassen": 1186, "programmiert": [1186, 1188], "dementsprechend": [1186, 1206], "sinngem\u00e4ss": 1186, "aufgeteilt": 1186, "manipulieren": [1186, 1195], "maschineninstruktionen": 1186, "ausgef\u00fchrt": [1186, 1187], "geschwindigkeitsvorteil": 1186, "interpretierten": 1186, "nachteil": 1186, "verst\u00e4ndni": [1186, 1195, 1205], "speicherverwaltung": [1186, 1188, 1203], "integral": 1186, "zusammengesetzt": 1186, "speicherlayout": 1186, "wenigst": 1186, "worin": 1186, "programmstrukturierung": 1186, "deklar": 1186, "beliebtest": 1186, "unmeng": 1186, "flexibilit\u00e4t": [1186, 1203], "einbringen": 1186, "unbeliebtest": 1186, "fehlerm\u00f6glichkeiten": 1186, "verkettet": 1186, "fehlerszenarien": [1186, 1206], "absturz": 1186, "dahinsiechen": 1186, "debugginghilfen": 1186, "typumwandlungen": 1186, "hauptkritikpunkt": 1186, "sorglos": 1186, "integertypen": 1186, "breit": [1186, 1193], "regelwerk": 1186, "historisch": 1186, "aufarbeitung": 1186, "historischem": 1186, "ballast": 1186, "compileroptionen": 1186, "pr\u00e4prozessor": [1186, 1187], "leid": 1186, "grundz\u00fcgen": 1186, "gezeigt": [1186, 1195, 1200], "compilierung": 1186, "heutzutag": 1186, "wegzudenken": [1186, 1193], "damal": [1186, 1188], "programmen": [1186, 1187, 1202], "separat": 1186, "verbinden": 1186, "spielt": 1186, "archivieren": 1186, "linken": 1186, "programmgesundheit": 1186, "bedeutungen": 1186, "optimierungsm\u00f6glichkeiten": 1186, "memoryfehlern": 1186, "verwalten": 1186, "formatiert": 1186, "_und_": 1186, "komfort": 1186, "m\u00e4chtige": [1186, 1203], "jedoch": [1186, 1193, 1200, 1206], "weit": 1186, "fehlerimmunit\u00e4t": 1186, "allein": 1186, "verdienen": 1186, "erw\u00e4hnung": 1186, "stringbearbeitung": 1186, "heutig": 1186, "eigenwillig": 1186, "f\u00fclle": 1186, "erleichtern": 1186, "lauern": [1186, 1205], "gefahren": [1186, 1205, 1206], "sprachumfang": 1187, "angeht": 1187, "compiliert": 1187, "maschinencod": 1187, "pointern": 1187, "sofort": 1187, "beipflichten": 1187, "einmal": [1187, 1202, 1203, 1207], "beinharten": 1187, "typenkonvertierungen": 1187, "aufgesessen": 1187, "beleuchtet": [1187, 1205], "beschrittenen": 1187, "dunklen": 1187, "ecken": 1187, "widmet": 1187, "intensiv": 1187, "fehlersuch": 1187, "erkl\u00e4rungen": 1187, "sprachdefinit": 1187, "greifbar": 1187, "verdacht": 1187, "manch": 1187, "typkonversionen": 1187, "l\u00fccken": 1187, "typensystem": [1187, 1188], "techniken": [1187, 1193], "typensicherheit": 1187, "dunkl": 1187, "unn\u00f6tig": 1187, "programmhygien": 1187, "wege": 1187, "sauberen": 1187, "weisen": 1187, "optimierungstechniken": 1187, "anwenden": 1187, "optimierung": 1187, "erschweren": 1187, "lesbarkeit": 1187, "memoryzugriff": 1187, "ur": 1187, "beziehungsweis": 1187, "hardwareunterst\u00fctzung": 1187, "Ins": 1187, "kenntniss": [1187, 1188, 1196, 1202, 1203, 1205, 1206], "urspr\u00fcnglich": 1188, "erfunden": 1188, "leichter": 1188, "handhabbar": 1188, "erm\u00f6glichen": [1188, 1203], "ressourcenverwaltung": 1188, "kontrolliert": 1188, "mainstream": 1188, "einzug": 1188, "hie\u00df": 1188, "treffend": 1188, "seitdem": 1188, "vereinzelt": 1188, "soviel": 1188, "dampflokomot": 1188, "stellt": [1188, 1206], "vielfalt": 1188, "sprachkonstrukt": 1188, "genial": 1188, "gewagt": 1188, "behaupten": 1188, "anbelangt": 1188, "sprachmittel": 1188, "wichtigst": 1188, "n\u00e4mlich": 1188, "reichlich": [1188, 1193, 1200], "umstieg": 1188, "erw\u00e4gen": 1188, "embeddedbetriebssystem": 1188, "einsetzen": 1188, "vielerort": 1188, "datenkapselung": 1188, "objekten": 1188, "fallstrick": 1188, "korrektheit": 1188, "100ste": 1188, "strukturiert": 1188, "fehlerbehandlung": 1188, "generisch": 1188, "mechanismen": [1188, 1203, 1205, 1207], "mehrfachvererbung": 1188, "teilweis": 1188, "kapiteln": 1188, "unterschied": 1188, "erl\u00e4utert": [1188, 1193], "c++ 11": 1189, "enjoy": 1189, "overrrid": 1189, "coolest": 1189, "optinion": 1189, "oneshot": 1189, "communict": 1189, "unlearn": 1189, "inventor": 1190, "weren": 1191, "intricaci": 1191, "interdepend": 1191, "rudimentari": 1191, "graviti": 1192, "vocabulari": 1192, "confront": 1192, "reusab": 1192, "nicknam": 1192, "zentrum": [1193, 1200], "vollwertig": 1193, "selben": 1193, "betriessystemkonzept": 1193, "jahrzehnten": 1193, "bew\u00e4hrt": 1193, "automot": 1193, "sektor": 1193, "vertreten": 1193, "altbew\u00e4hrten": 1193, "konsequ": [1193, 1203], "ausbaut": 1193, "hardwareschnittstellen": 1193, "echtzeitf\u00e4higkeit": 1193, "dahint": 1193, "rundet": 1193, "hardwarebastelworkshop": 1193, "embeddedprogrammier": [1193, 1200], "l\u00e4nger": [1193, 1200], "normalen": [1193, 1200], "dateisystem": [1193, 1200], "versagt": [1193, 1200], "teuer": [1193, 1200], "erkauft": [1193, 1200], "testen": [1193, 1200, 1207], "hostsoftwar": [1193, 1200], "architekten": [1193, 1200], "plattformzusammensetzung": [1193, 1200], "entscheiden": [1193, 1200, 1207], "rechtfertigen": [1193, 1200], "logik": [1193, 1200], "steck": [1193, 1200], "beantworten": [1193, 1200, 1207], "eingeladen": [1193, 1200], "l\u00f6tmateri": [1193, 1200], "mitzubringen": [1193, 1200], "bastelei": 1193, "vorhandenen": [1193, 1200, 1207], "minicomputern": 1193, "prototypen": 1193, "desktopbetriebssystem": [1193, 1200], "verh\u00e4ltniss": [1193, 1200], "512mb": [1193, 1200], "m\u00fchsam": [1193, 1200], "produktivsystem": [1193, 1200], "ohnehin": [1193, 1200], "unangebracht": [1193, 1200], "anf\u00e4ng": [1193, 1200], "filesystemen": [1193, 1200], "durchzuf\u00fchren": 1193, "filedeskriptoren": [1193, 1195], "getrennt": 1193, "abl\u00e4uf": 1193, "adressraum": 1193, "sorgfalt": 1193, "bloss": 1193, "gef\u00e4chert": 1193, "gewissen": 1193, "szenarien": 1193, "steuerungen": 1193, "gef\u00e4hrlich": 1193, "umfangreich": 1193, "hauptthema": 1193, "dennoch": 1193, "n\u00fctzlich": 1193, "haub": 1193, "schalten": [1193, 1200], "ausg\u00e4ngen": [1193, 1200], "abfragen": [1193, 1200], "eing\u00e4ngen": [1193, 1200], "dumm": [1193, 1200], "ereignisgesteuert": [1193, 1200], "mikrocontrollern": [1193, 1200], "aufgaben": [1193, 1200], "temperaturmessung": [1193, 1200], "expandierung": [1193, 1200], "ausgelagert": [1193, 1200, 1203], "dediziert": [1193, 1200], "angesteuert": [1193, 1200], "gegeben": [1193, 1200, 1202, 1203], "driverframework": 1193, "netzwerkstack": [1193, 1200], "einpasst": [1193, 1200], "schnittstellen": [1193, 1203], "implementationssprachen": 1193, "hardwareerfahrung": [1193, 1200], "linux kernel": 1194, "kernel driv": [1194, 1204], "wait queu": 1194, "block devic": 1194, "interrupt handl": 1194, "dose": 1194, "curios": 1194, "userpac": 1194, "massiv": 1194, "vital": 1194, "einblick": 1195, "gingen": 1195, "vieler": 1195, "demosess": 1195, "vertrackt": 1195, "entmystifiziert": 1195, "gef\u00fcrchteten": 1195, "erlernt": 1195, "inbetriebsetz": 1195, "hardwareingenieur": 1195, "angehend": 1195, "administratoren": 1195, "editieren": 1195, "bl\u00e4ttern": 1195, "textdateien": 1195, "schnittstel": 1195, "kombinationen": 1195, "kombin": 1195, "abschweifen": 1195, "programmierkenntniss": 1195, "zwingend": [1195, 1202], "make gnu": 1196, "gnu mak": 1196, "build manag": 1196, "seiner": [1196, 1203, 1207], "m\u00e4chtigen": 1196, "daran": 1196, "wendet": 1196, "interessiert": 1196, "gr\u00f6\u00dfere": 1196, "gebaut": 1196, "komplizierten": 1196, "griff": 1196, "regeln": 1196, "selbstdefiniert": 1196, "gewiss": [1196, 1201, 1203], "fertigkeit": 1196, "hemmenhofen": 1200, "gleichnamigen": 1200, "gerufen": 1200, "produktivem": 1200, "n\u00e4herzubringen": 1200, "spielekonsumenten": 1200, "kinder": 1200, "enden": 1200, "erstem": 1200, "breiteren": 1200, "drauf": 1200, "vorhandensein": 1200, "basisinfrastruktur": 1200, "vielem": 1200, "hervorragenden": 1200, "gestandenen": 1200, "obwohl": [1200, 1203], "sprachunabh\u00e4ngig": 1200, "brauchen": 1200, "computerspielen": 1200, "spielerischen": 1200, "f\u00fchren": 1200, "w\u00e4hlt": 1200, "lm": 1200, "netzwerkprotokol": [1200, 1206], "behaupt": 1201, "allen": 1201, "gro\u00dfkopferten": 1201, "kommerziellen": 1201, "systemen": 1201, "perforc": 1201, "etabliert": 1201, "erh\u00e4ltlich": 1201, "nachfolg": 1201, "abgel\u00f6st": 1201, "prim\u00e4r": 1201, "publikum": 1201, "sekund\u00e4r": 1201, "versionieren": 1201, "arbeitsweis": 1201, "bereinigung": 1201, "strategien": 1201, "programmierern": 1201, "vertrautheit": 1201, "vorteil": [1201, 1202], "umsteig": 1202, "\u00e4rgerni": 1202, "schl\u00e4gt": 1202, "ausgekl\u00fcgeltst": 1202, "systemcal": [1202, 1203, 1206], "sogenannt": 1202, "inspizieren": 1202, "grundprinzip": [1202, 1206], "sammlung": [1202, 1203], "ausf\u00fchrbar": 1202, "bedient": 1202, "handhabung": 1202, "gew\u00f6hnungsbed\u00fcrftig": 1202, "filedescriptoren": 1202, "lowlevel": 1202, "tiefen": 1203, "steigen": 1203, "alltagsprogrammier": 1203, "normalerweis": 1203, "verborgen": 1203, "hochperformant": 1203, "anwendungen": 1203, "modernen": [1203, 1205], "bertriebssystemen": 1203, "sogenanntem": 1203, "virtuellen": 1203, "speicherbereich": 1203, "instanzen": 1203, "desselben": 1203, "hauptspeich": 1203, "speicherzugriff": 1203, "schutzmechanismen": 1203, "miteinand": 1203, "kommunizieren": [1203, 1206], "semaphoren": 1203, "steinalt": 1203, "\u00fcberlebt": 1203, "keinesweg": 1203, "fehlerfrei": 1203, "benutzen": 1203, "verpasst": 1203, "beruht": 1203, "ladbar": 1203, "ressourcenschonung": 1203, "wasserdichten": 1203, "upgradepfad": 1203, "grundkenntni": [1203, 1205, 1206], "memory manag": 1204, "tcp-ip": 1204, "unverst\u00e4ndlich": 1205, "ungeachtet": 1205, "effizient": 1205, "propagiert": 1205, "soliden": 1205, "unbedacht": 1205, "handeln": 1205, "lebenszyklu": 1205, "gestartet": 1205, "versuchung": 1205, "gewalt": 1205, "terminieren": 1205, "konsequenzen": 1205, "joinabl": 1205, "detach": 1205, "eigenschaften": 1205, "racecondit": 1205, "vermeidung": 1205, "\u00fcberal": 1205, "vermutet": 1205, "integeroperationen": 1205, "kommunikationsmechanismen": 1205, "werkzeugkasten": 1205, "kommunikationskan\u00e4l": 1205, "niemal": 1205, "reihen": 1205, "traditionellen": 1205, "aufgenommen": 1205, "codebasi": 1205, "verzweigt": 1205, "ansehnlich": 1205, "realtimef\u00e4higkeiten": 1205, "priorit\u00e4ten": 1205, "f\u00fcgt": 1206, "benutzend": 1206, "programmierparadigma": 1206, "dar": 1206, "beschr\u00e4nkt": 1206, "streamverbindungen": 1206, "verbindungsaufnahm": 1206, "datagramm": 1206, "verbindungslos": 1206, "adressfamilien": 1206, "auffassung": 1206, "adress": 1206, "endpoint": 1206, "nummern": 1206, "adressen": 1206, "verbindungen": 1206, "hilfsfunktionen": 1206, "adresskonvertierung": 1206, "ipv6": 1206, "\u00e4quivalent": 1206, "ungleich": 1206, "ressourcenschonend": 1206, "pfadnamen": 1206, "bedienbar": 1206, "mittlerweis": 1206, "eingepasst": 1206, "angenehm": 1206, "umzugehen": 1206, "widmen": 1206, "verbundenen": 1206, "auszusetzen": 1206, "reagiert": 1206, "gelesen": 1206, "eventgetrieben": 1206, "knopfdruck": 1207, "abnimmt": 1207, "zahlreichen": 1207, "abgeklopft": 1207, "angst": 1207, "kaputtmachen": 1207, "konstruktiv": 1207, "einfachheit": 1207, "klarzumachen": 1207, "umzusetzen": 1207, "anstatt": 1207, "auszustatten": 1207, "gedanken": 1207, "erkannt": 1207, "entscheidung": 1207, "verbockt": 1207, "softwareentwickl": 1207, "jedwed": 1207, "stabilen": 1207, "abliefern": 1207, "entscheidungstr\u00e4g": 1207, "vorgesetzt": 1207, "schl\u00fcssige": 1207, "kan\u00e4l": 1207, "etablieren": 1207, "unittestframework": 1207, "tragen": 1207, "schwerf\u00e4llig": 1207, "halben": 1207, "\u00fcbrige": 1207, "zurechtzufinden": 1207, "vortragend": 1207, "aufgrund": 1207, "aufwarten": 1207, "beibringen": 1207, "\u00fcppigen": 1207, "verbergen": 1207, "pr\u00e4ferierten": 1207, "vortragenden": 1207, "relative_to": 153, "subpath": 153, "niho62fg": 153, "0x7f578e1fc3e0": 1035, "57214793211426": 1047, "64773189102983": 1047, "70708931159429": 1047, "729677582899576": 1047, "98847628964383": 1047, "0x7ff4da7089e0": 1056, "140291761633192": 1075, "140291761633224": 1075, "140291761633448": 1075, "140291477283072": 1075, "140291479127440": 1075, "00am": 353, "young": 387, "physicist": 387}, "objects": {}, "objtypes": {}, "objnames": {}, "titleterms": {"kontakt": 0, "navig": [0, 897], "googl": 0, "map": [0, 7, 143, 220, 225, 228, 231, 234, 250, 260, 324, 364, 560, 561, 589, 650, 651, 742, 743, 808, 954], "streetview": 0, "curriculum": [1, 74, 75], "vita": 1, "\u00fcber": [2, 205, 215, 220, 228, 236], "mich": [2, 222], "projekt": [3, 23], "au": 3, "selbstst\u00e4ndig": 3, "t\u00e4tigkeit": 3, "nichtselbstst\u00e4ndig": 3, "skill": [4, 169], "angebot": 5, "In": [5, 32, 45, 123, 155, 177, 179, 180, 182, 212, 215, 276, 277, 279, 298, 300, 323, 336, 387, 478, 480, 486, 487, 548, 553, 555, 596, 600, 611, 612, 613, 614, 615, 616, 641, 698, 702, 706, 736, 737, 743, 756, 815, 864, 865, 872, 928, 978, 1011, 1013, 1027, 1034, 1075, 1189], "hous": 5, "schulungen": [5, 1183], "zu": [5, 23, 198, 215], "meiner": 5, "person": [5, 273, 507, 706], "schwerpunk": 5, "c": [5, 7, 68, 69, 70, 71, 72, 98, 108, 109, 111, 112, 125, 147, 169, 183, 198, 199, 215, 225, 233, 234, 250, 275, 276, 277, 279, 280, 288, 297, 299, 336, 337, 342, 372, 378, 387, 396, 436, 437, 474, 481, 486, 493, 500, 542, 548, 559, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 598, 604, 605, 609, 610, 611, 623, 629, 631, 668, 676, 691, 693, 694, 695, 698, 699, 731, 732, 736, 743, 744, 752, 761, 766, 770, 789, 937, 957, 975, 978, 1080, 1186, 1187, 1188, 1189, 1190, 1192], "python": [5, 8, 11, 59, 61, 62, 63, 91, 96, 137, 165, 192, 195, 204, 205, 207, 208, 209, 211, 213, 215, 218, 220, 223, 229, 230, 232, 235, 237, 239, 242, 243, 244, 245, 246, 248, 249, 251, 254, 255, 258, 261, 263, 266, 268, 269, 270, 271, 272, 274, 276, 277, 279, 281, 282, 283, 284, 285, 286, 291, 293, 294, 298, 300, 301, 302, 303, 304, 305, 306, 307, 310, 311, 312, 313, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 369, 372, 374, 387, 694, 722, 736, 743, 937, 939, 1036, 1039, 1043, 1058, 1059, 1060, 1062, 1064, 1066, 1074, 1085, 1089, 1134, 1135, 1136, 1149, 1150, 1152, 1162, 1163, 1164, 1165, 1166, 1197, 1198], "linux": [5, 80, 81, 82, 98, 111, 112, 125, 147, 172, 177, 185, 187, 188, 190, 197, 212, 214, 219, 224, 278, 287, 288, 308, 309, 352, 353, 372, 374, 387, 389, 814, 866, 867, 870, 876, 933, 935, 939, 940, 941, 943, 956, 974, 997, 1184, 1194, 1195, 1202, 1203, 1204, 1205, 1206], "schulungsstil": 5, "preis": 5, "cours": [6, 11, 12, 59, 61, 62, 63, 79, 165, 167, 188, 224, 233, 277, 279, 287, 316, 319, 371, 477, 1135, 1191, 1194], "materi": [6, 24, 28, 30, 124, 147, 195, 197, 212, 233, 368, 383, 384, 388, 477, 1134, 1135, 1156], "einleitung": [7, 225], "datatyp": [7, 215, 220, 222, 225, 228, 237, 241, 244, 247, 252, 254, 260, 264, 267, 269, 270, 282, 284, 285, 291, 292, 294, 302, 304, 305, 306, 310, 311, 312, 322, 324, 326, 328, 332, 333, 334, 338, 339, 340, 344, 345, 346, 348, 349, 350, 364, 392, 442, 445, 1037, 1066, 1067, 1071], "number": [7, 225, 228, 231, 252, 264, 267, 364, 722, 793, 800, 801, 964, 1038, 1054, 1057, 1066, 1074, 1075, 1097, 1100, 1110, 1111, 1153, 1157, 1158, 1181], "integ": [7, 205, 215, 220, 225, 228, 252, 254, 264, 267, 273, 285, 292, 312, 324, 328, 334, 340, 350, 364, 410, 457, 462, 678, 1045, 1066, 1075], "string": [7, 191, 192, 198, 205, 215, 222, 225, 228, 231, 236, 237, 241, 244, 247, 252, 254, 257, 260, 264, 267, 269, 270, 273, 282, 285, 289, 292, 306, 312, 324, 328, 334, 340, 346, 350, 361, 363, 364, 391, 404, 405, 411, 417, 481, 659, 660, 661, 674, 705, 706, 1066, 1079, 1080, 1081, 1117, 1160], "compound": [7, 215, 225, 237, 241, 244, 247, 252, 254, 260, 264, 267, 270, 282, 302, 306, 312, 324, 328, 340, 346, 350, 445, 1067], "list": [7, 11, 23, 191, 192, 205, 215, 222, 225, 228, 231, 236, 237, 241, 244, 247, 252, 254, 260, 264, 267, 270, 282, 285, 292, 302, 306, 312, 324, 334, 340, 346, 350, 450, 481, 548, 572, 589, 603, 646, 694, 707, 744, 798, 825, 826, 827, 849, 919, 1031, 1034, 1037, 1038, 1047, 1067, 1075, 1082, 1112, 1113, 1164], "arrai": [7, 193, 215, 225, 391, 400, 404, 442, 444, 454, 467, 577, 629, 631, 639, 683, 698, 709, 748], "javascript": [7, 225, 264], "std": [7, 108, 143, 225, 234, 250, 276, 277, 279, 336, 337, 496, 555, 560, 561, 571, 589, 612, 613, 614, 615, 616, 624, 630, 631, 632, 633, 643, 650, 651, 661, 674, 687, 690, 694, 697, 699, 706, 742, 743, 744, 748, 750, 753, 754, 755, 757, 758, 763, 764, 765, 766, 768, 769, 770, 773, 775, 779, 780, 781, 785, 788], "vector": [7, 108, 225, 555, 571, 589, 596, 612, 630, 631, 632, 633, 647, 690, 699, 744, 773, 990], "java": [7, 225], "dictionari": [7, 191, 205, 215, 220, 222, 225, 228, 236, 237, 241, 244, 247, 252, 254, 257, 260, 264, 267, 270, 273, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 364, 1031, 1035, 1048, 1067, 1083, 1104, 1131], "kei": [7, 182, 225, 273, 340, 364, 653, 654, 897, 948, 950], "valu": [7, 62, 210, 225, 296, 297, 340, 364, 402, 458, 615, 975, 997, 1068], "set": [7, 38, 62, 210, 215, 220, 225, 228, 236, 237, 241, 244, 247, 252, 254, 260, 264, 267, 270, 282, 285, 292, 302, 306, 312, 324, 328, 334, 340, 346, 350, 893, 894, 1009, 1031, 1067, 1084, 1123, 1148, 1158], "mathematisch": [7, 225], "mengen": [7, 215, 225], "while": [7, 192, 205, 215, 225, 244, 252, 254, 257, 260, 267, 270, 292, 334, 340, 346, 350, 427, 428, 835, 840, 841, 1070, 1097, 1121], "function": [7, 43, 179, 192, 210, 215, 225, 228, 231, 234, 237, 241, 244, 252, 254, 260, 264, 269, 270, 273, 276, 277, 279, 281, 285, 292, 298, 306, 316, 317, 319, 322, 323, 324, 326, 332, 333, 334, 336, 337, 338, 339, 340, 344, 345, 346, 348, 349, 350, 369, 402, 404, 409, 436, 438, 440, 441, 446, 478, 479, 538, 572, 596, 605, 610, 612, 617, 621, 637, 694, 701, 704, 705, 706, 707, 716, 746, 758, 759, 798, 799, 861, 955, 957, 995, 1030, 1032, 1033, 1035, 1037, 1038, 1057, 1074, 1076, 1077, 1078, 1086, 1109, 1111, 1115, 1118, 1126, 1128, 1160], "basic": [8, 62, 71, 91, 127, 171, 183, 192, 204, 209, 211, 212, 213, 214, 218, 219, 223, 224, 233, 242, 245, 248, 255, 261, 266, 269, 272, 278, 284, 287, 291, 294, 301, 304, 305, 306, 308, 309, 310, 311, 312, 313, 316, 319, 322, 323, 324, 326, 327, 328, 332, 333, 334, 335, 338, 339, 340, 341, 344, 345, 348, 349, 350, 351, 352, 353, 364, 387, 432, 436, 439, 445, 472, 479, 495, 496, 550, 553, 618, 623, 626, 629, 630, 632, 636, 639, 650, 656, 665, 701, 709, 743, 748, 752, 753, 754, 755, 788, 800, 801, 802, 863, 866, 867, 870, 880, 919, 930, 935, 944, 956, 963, 971, 979, 1011, 1033, 1034, 1087, 1090, 1124, 1143, 1154, 1155, 1175, 1176, 1177, 1195, 1198], "2021": [8, 11, 124, 216, 218, 221, 223, 224, 226, 229, 232, 233, 234, 235, 239, 242, 244, 245, 247, 248, 250, 361, 362, 369, 372, 373, 374, 375, 376, 377, 378, 387], "xx": 8, "yy": 8, "train": [8, 24, 25, 26, 27, 28, 165, 169, 179, 188, 193, 208, 209, 211, 212, 213, 214, 216, 218, 219, 223, 226, 229, 232, 233, 234, 235, 239, 242, 251, 255, 258, 261, 263, 266, 269, 272, 281, 284, 291, 294, 388, 1135, 1141], "inform": [8, 39, 157, 167, 179, 204, 207, 208, 209, 211, 212, 213, 214, 216, 218, 219, 223, 226, 229, 232, 233, 234, 235, 239, 242, 251, 255, 258, 261, 263, 266, 269, 272, 281, 284, 291, 294, 360, 369, 472, 756, 1064, 1135], "\u00fcberblick": [8, 216, 226, 235, 251, 263, 1188], "log": [8, 106, 152, 173, 208, 209, 212, 213, 221, 223, 224, 226, 229, 233, 235, 239, 242, 251, 263, 272, 369, 382, 383, 864, 865, 872], "tag": [8, 199, 218, 222, 226, 229, 235, 251, 263, 264], "1": [8, 19, 23, 37, 74, 79, 98, 108, 115, 118, 119, 122, 125, 146, 147, 148, 174, 177, 189, 197, 199, 204, 208, 209, 211, 212, 213, 215, 216, 218, 223, 224, 226, 229, 233, 234, 235, 239, 242, 245, 248, 251, 255, 263, 288, 291, 294, 297, 298, 299, 300, 301, 305, 309, 311, 316, 322, 323, 326, 327, 337, 349, 353, 368, 370, 371, 378, 385, 387, 390, 391, 392, 394, 398, 402, 411, 413, 414, 415, 416, 420, 421, 424, 427, 433, 434, 435, 436, 437, 440, 442, 446, 450, 452, 454, 457, 458, 459, 460, 462, 463, 465, 466, 472, 486, 496, 499, 501, 537, 599, 601, 608, 619, 622, 629, 631, 712, 717, 758, 763, 769, 784, 785, 796, 801, 808, 819, 829, 897, 936, 937, 943, 952, 966, 979, 980, 982, 984, 986, 987, 998, 1005, 1009, 1012, 1013, 1029, 1037, 1042, 1063, 1065, 1066, 1072, 1075, 1080, 1081, 1083, 1084, 1085, 1086, 1149, 1160, 1161, 1184], "2": [8, 19, 23, 37, 75, 79, 98, 108, 113, 114, 115, 118, 122, 125, 147, 174, 177, 199, 204, 205, 208, 209, 211, 212, 213, 215, 218, 222, 223, 224, 226, 229, 233, 234, 235, 239, 242, 244, 245, 248, 251, 255, 263, 288, 291, 294, 297, 298, 299, 300, 301, 305, 309, 316, 322, 323, 326, 327, 333, 337, 349, 353, 383, 385, 387, 390, 391, 392, 394, 398, 402, 411, 413, 414, 415, 416, 420, 421, 424, 427, 433, 434, 436, 437, 440, 442, 446, 450, 452, 454, 457, 458, 459, 460, 462, 463, 465, 466, 472, 487, 496, 499, 501, 537, 586, 599, 601, 608, 619, 622, 629, 631, 713, 718, 758, 763, 769, 784, 785, 801, 808, 829, 897, 936, 937, 943, 952, 966, 979, 980, 982, 984, 986, 987, 998, 1005, 1009, 1012, 1013, 1025, 1029, 1037, 1042, 1063, 1065, 1066, 1072, 1074, 1075, 1081, 1083, 1084, 1085, 1086, 1145, 1147, 1148, 1149, 1160, 1161], "live": [8, 42, 44, 45, 191, 194, 216, 226, 229, 239, 288, 594, 634, 635, 637, 638, 641, 642, 643, 655, 694, 705, 738, 739, 766, 768, 868, 894, 958, 976], "hack": [8, 42, 44, 45, 191, 194, 216, 226, 229, 239, 288, 291, 295, 298, 301, 327, 594, 634, 635, 637, 638, 641, 642, 643, 655, 694, 705, 738, 739, 766, 768, 895, 976], "jupyt": [8, 9, 40, 153, 216, 217, 221, 222, 223, 226, 227, 229, 230, 239, 240, 242, 243, 245, 246, 249, 251, 253, 256, 259, 262, 265, 268, 270, 271, 274, 283, 286, 289, 293, 302, 303, 307, 313, 318, 321, 324, 325, 328, 329, 335, 351, 364, 1141, 1142], "notebook": [8, 9, 40, 153, 211, 216, 217, 221, 222, 223, 226, 227, 229, 230, 232, 239, 240, 242, 243, 245, 246, 247, 249, 251, 253, 256, 259, 262, 265, 268, 270, 271, 274, 283, 286, 289, 293, 302, 303, 307, 313, 318, 321, 324, 325, 328, 329, 335, 351, 364, 369, 1139, 1141, 1142], "link": [8, 23, 39, 152, 153, 175, 193, 204, 207, 209, 211, 213, 216, 218, 223, 224, 226, 235, 239, 242, 245, 251, 258, 269, 272, 305, 311, 374, 376, 450, 452, 701, 715, 722, 740, 747, 751, 814, 825, 826, 876, 897, 918, 936, 943, 951, 1027, 1028, 1059, 1090, 1091, 1136, 1152, 1154, 1155, 1157, 1158, 1159, 1160, 1167, 1172], "programmierung": [9, 11, 191, 216, 217, 226, 227, 235, 251, 253, 263, 265, 387], "grundlagen": [9, 11, 204, 215, 216, 217, 226, 227, 229, 230, 235, 239, 243, 246, 249, 251, 253, 263, 265, 268, 271, 274, 283, 286, 307, 387], "detail": [10, 79, 224, 228, 260, 267, 299, 346, 350, 364, 386, 462, 540, 630, 1065], "content": [11, 24, 37, 167, 169, 171, 172, 173, 174, 175, 176, 177, 178, 187, 196, 200, 201, 231, 371, 475, 577, 580, 586, 589, 595, 677, 754, 866, 886, 899, 905, 911, 914, 931, 939, 940, 947, 956, 972, 974, 976, 991, 1001, 1004, 1018, 1038, 1094, 1095, 1099, 1108, 1122, 1129, 1176, 1178, 1181, 1189, 1192, 1194], "anhand": [11, 215, 235, 251, 263, 387, 1195], "von": [11, 23, 186, 191, 195, 198, 205, 215, 222, 235, 236, 251, 263, 350, 364, 387, 1195], "12": [11, 23, 45, 126, 127, 130, 138, 143, 195, 214, 215, 219, 226, 234, 247, 248, 250, 281, 332, 333, 334, 337, 338, 339, 340, 341, 369, 374, 378, 380, 387], "und": [11, 23, 185, 189, 205, 215, 216, 220, 222, 226, 228, 231, 235, 251, 254, 260, 263, 267, 273, 340, 350, 370, 387, 412, 421, 1188, 1199], "13": [11, 23, 41, 45, 182, 204, 215, 216, 226, 279, 288, 291, 292, 294, 352, 353, 387], "4": [11, 23, 108, 174, 199, 208, 211, 215, 223, 224, 226, 229, 233, 234, 251, 263, 288, 378, 387, 392, 450, 454, 460, 496, 499, 601, 719, 1037], "templat": [12, 143, 233, 250, 299, 559, 572, 573, 574, 575, 591, 592, 593, 621, 622, 623, 629, 662, 708, 711, 716, 718, 746, 779], "descript": [12, 61, 63, 65, 407, 422, 431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 507, 594, 602, 617, 620, 623, 659, 664, 673, 675, 678, 680, 681, 682, 683, 684, 685, 686, 687, 689, 690, 692, 734, 735, 759, 767, 771, 783, 787, 789, 931, 939, 940, 994], "sidebar": [12, 37], "metadata": [12, 276, 277, 279, 919], "about": [13, 108, 169, 188, 247, 252, 264, 282, 285, 291, 295, 312, 319, 334, 339, 340, 346, 349, 350, 489, 699, 736, 926, 1027, 1079, 1082, 1083, 1084], "thi": [13, 32, 37, 126, 130, 131, 133, 136, 138, 142, 152, 174, 179, 180, 182, 183, 193, 202, 608, 622, 737, 856, 935, 958, 1011, 1028, 1035, 1037], "site": [13, 28, 32, 152, 176, 178, 202], "licens": 13, "gplv3": 13, "github": [13, 123, 143, 176, 178, 208, 209, 221, 229, 369, 537, 551, 1136], "sphinx": [13, 40, 153, 156, 178], "instal": [13, 60, 133, 153, 175, 179, 183, 187, 200, 201, 204, 229, 233, 234, 314, 330, 369, 374, 389, 484, 812, 954, 1009, 1020, 1025, 1026, 1059, 1090, 1091, 1123, 1136, 1152, 1169, 1171, 1176, 1178, 1191], "instruct": [13, 453, 763, 982, 1012, 1029], "pip": [13, 305], "venv": [13, 305], "work": [13, 17, 98, 123, 125, 147, 151, 155, 160, 174, 208, 239, 277, 279, 296, 297, 298, 299, 376, 470, 471, 472, 551, 622, 788, 856, 857, 893, 896, 900, 1025], "progress": [13, 17, 151], "more": [13, 174, 192, 205, 244, 247, 252, 260, 264, 267, 269, 281, 282, 284, 285, 288, 290, 291, 294, 300, 301, 304, 305, 310, 311, 312, 319, 322, 326, 332, 333, 334, 338, 339, 340, 344, 345, 346, 348, 349, 350, 369, 392, 398, 421, 437, 439, 453, 463, 479, 489, 491, 601, 611, 614, 621, 634, 640, 694, 736, 737, 741, 758, 775, 845, 874, 875, 876, 880, 881, 926, 953, 995, 1032, 1034, 1036, 1079, 1082, 1083, 1084, 1135, 1144, 1169, 1181], "opentrain": [14, 23], "draft": [15, 783, 931, 1089], "topic": [15, 21, 74, 75, 99, 100, 102, 103, 104, 105, 143, 168, 204, 208, 211, 232, 233, 234, 245, 250, 269, 272, 288, 291, 294, 297, 298, 322, 326, 336, 337, 359, 373, 377, 378, 387, 407, 422, 431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 500, 543, 544, 545, 546, 547, 548, 549, 552, 594, 602, 617, 620, 623, 639, 645, 649, 657, 662, 664, 667, 673, 691, 692, 696, 703, 710, 721, 734, 735, 745, 750, 759, 767, 771, 783, 787, 789, 790, 791, 814, 934, 949, 967, 969, 988, 994, 1015, 1021, 1022, 1037, 1042, 1050, 1089, 1138, 1142, 1146, 1150, 1152, 1156, 1168, 1174], "miscellan": [16, 150, 165, 169, 188, 192, 212, 241, 252, 254, 260, 270, 276, 277, 281, 285, 288, 297, 300, 301, 306, 311, 312, 322, 323, 326, 333, 334, 336, 340, 350, 572, 594, 673, 677, 708, 771, 973, 984, 986, 1081, 1150], "s5": [17, 18, 169], "integr": [17, 127, 129, 132, 698, 714], "web": [17, 94, 95, 170], "slide": [17, 18, 30, 45, 192, 372, 384, 1005, 1009], "implement": [17, 126, 130, 131, 133, 134, 136, 138, 142, 143, 260, 323, 336, 355, 361, 501, 508, 518, 523, 533, 534, 535, 536, 540, 548, 553, 554, 598, 599, 604, 610, 612, 670, 694, 705, 795, 798, 817, 853, 1032, 1038, 1054, 1114], "note": [17, 37, 60, 137, 150, 187, 355, 494, 882], "todo": [17, 169, 198, 201, 212, 218, 356, 357, 358, 375, 477, 572, 573, 576, 579, 582, 585, 588, 591, 794, 798, 806, 838, 1000, 1003, 1007, 1088, 1151, 1175, 1180], "test": [18, 37, 42, 43, 44, 45, 50, 72, 126, 130, 131, 133, 134, 136, 138, 142, 183, 204, 234, 258, 269, 272, 281, 290, 291, 294, 295, 296, 300, 301, 314, 316, 319, 322, 323, 326, 330, 349, 377, 383, 387, 478, 492, 501, 521, 537, 551, 553, 554, 614, 798, 817, 850, 942, 971, 1023, 1026, 1091, 1124, 1131, 1132, 1133, 1141, 1169, 1170, 1174, 1176, 1178, 1181, 1191, 1207], "level": [19, 466], "head": [19, 37, 825, 928, 1144], "imag": [19, 193, 212, 1025], "screencast": [20, 166], "written": [21, 125, 597, 600], "new": [21, 134, 143, 168, 234, 250, 276, 277, 279, 336, 337, 387, 540, 577, 693, 694, 734, 770, 789, 817, 850, 1153], "write": [21, 42, 50, 58, 171, 540, 577, 604, 716, 731, 754, 795, 963, 970, 1055, 1085, 1092, 1161], "netide": [22, 23], "f\u00f6rderantrag": [22, 23], "daten": [23, 228, 236], "antragsteller_in": 23, "allgemein": 23, "projektnam": 23, "untertitel": 23, "3": [23, 98, 108, 115, 125, 143, 147, 174, 199, 208, 209, 211, 212, 213, 214, 215, 218, 223, 224, 229, 233, 234, 235, 237, 239, 244, 245, 248, 251, 255, 263, 270, 288, 291, 294, 297, 299, 300, 301, 305, 309, 311, 322, 323, 324, 326, 327, 333, 337, 349, 387, 392, 442, 446, 450, 454, 460, 462, 463, 465, 466, 496, 499, 501, 537, 601, 714, 785, 966, 982, 986, 987, 1037, 1066, 1074, 1080, 1085], "allgemeinverst\u00e4ndlich": 23, "kurzbeschreibung": 23, "de": [23, 281, 387, 863], "anschlussf\u00f6rderung": 23, "die": [23, 53, 180, 198, 236, 1196], "besonder": [23, 215], "bedeutung": 23, "ihr": 23, "f\u00fcr": [23, 199, 205, 215, 387, 1187], "da": [23, 195, 205, 222, 231, 264], "internet": 23, "internetnutzung": 23, "IN": 23, "\u00f6sterreich": 23, "zielgrupp": 23, "projektziel": 23, "5": [23, 174, 192, 199, 204, 205, 207, 215, 233, 234, 236, 288, 378, 387, 450, 460, 496, 499, 720, 864, 865], "l\u00f6sung": [23, 205], "beschreibung": 23, "der": [23, 148, 215, 220, 236, 370, 387, 1184], "probleml\u00f6sung": 23, "wesentlich": 23, "element": [23, 215, 252, 270, 272, 555, 557, 558, 562, 650, 652, 653, 1071], "ein": [23, 205, 236, 1195, 1200], "nachhaltigen": 23, "impact": 23, "nach": [23, 272], "projektend": 23, "6": [23, 143, 215, 216, 236, 237, 270, 387, 450, 460, 496, 499, 1080, 1199], "umfeldanalys": 23, "wa": [23, 204, 220, 683], "ist": [23, 205], "stand": 23, "technik": 23, "method": [23, 228, 231, 241, 252, 254, 257, 260, 270, 285, 297, 306, 312, 324, 328, 334, 340, 346, 350, 361, 363, 371, 550, 586, 598, 605, 606, 607, 610, 612, 614, 617, 669, 672, 680, 684, 752, 753, 754, 755, 756, 779, 796, 831, 833, 847, 1052, 1054, 1080, 1081, 1082, 1170], "wissen": 23, "welch": 23, "ander": [23, 191, 370], "l\u00f6sungen": 23, "vorhaben": 23, "den": [23, 180, 220, 236], "genannten": 23, "problemen": 23, "gibt": [23, 215], "e": [23, 469, 753], "schon": 23, "7": [23, 208, 215, 216, 236, 387, 450, 460, 1199], "alleinstellungsmerkm": 23, "8": [23, 215, 216, 235, 236, 387, 450, 460, 943, 1149, 1199], "projektergebniss": 23, "erforderlich": 23, "lizenzen": 23, "dritter": 23, "9": [23, 208, 209, 215, 216, 236, 387, 450, 460, 1037, 1184, 1199], "erfolgreich": 23, "projektabschluss": 23, "sonstigen": 23, "aktivit\u00e4ten": 23, "im": [23, 215, 241, 254, 267, 270, 285, 292, 306, 312, 324, 328, 346, 350, 387, 1075], "projektbereich": 23, "angaben": [23, 148], "zur": [23, 148, 186, 205, 215], "fachlichen": 23, "eignung": 23, "mitarbeiterinnen": 23, "projektkernteam": 23, "erfahrung": 23, "vorgesehenen": 23, "projektleiterin": 23, "zum": [23, 191, 236], "maxim": 23, "min\u00fctigen": 23, "video": [23, 24, 31, 223, 281, 311, 327, 702], "risiken": 23, "erfolgskriterien": 23, "am": [23, 205, 264, 387], "angestrebt": 23, "jahr": 23, "10": [23, 45, 100, 101, 143, 158, 189, 192, 197, 208, 211, 215, 250, 251, 278, 279, 280, 281, 282, 296, 319, 320, 322, 323, 325, 369, 373, 374, 375, 379, 387, 450, 557, 864, 865], "umsetzung": 23, "einj\u00e4hrig": 23, "wichtig": 23, "partner_innen": 23, "arbeitsschwerpunkt": 23, "ressourcen": 23, "nutzer_innen": 23, "kommunikationskan\u00e4l": 23, "11": [23, 45, 126, 130, 138, 142, 143, 190, 195, 213, 214, 215, 244, 245, 250, 275, 279, 281, 284, 285, 319, 326, 327, 328, 329, 330, 331, 332, 333, 334, 352, 353, 376, 377, 387, 450, 572, 695, 698, 731, 732, 743, 752, 789], "projekttermin": 23, "termin": [23, 868, 980, 1043], "projektstart": 23, "kosten": 23, "finanzierung": 23, "projektkosten": 23, "personalkosten": 23, "sonstig": 23, "gesamtkosten": 23, "wir": [23, 220, 236], "beantragen": 23, "folgend": 23, "f\u00f6rderung": 23, "restlichen": 23, "werden": [23, 215], "finanziert": 23, "durch": [23, 205], "sonderprei": 23, "14": [23, 45, 126, 127, 130, 138, 143, 195, 204, 215, 216, 219, 233, 275, 387], "erg\u00e4nzend": 23, "transparenz": 23, "mehrfachantr\u00e4g": 23, "nutzung": 23, "whataventur": 23, "plattform": 23, "eingereicht": 23, "teil": 23, "einer": [23, 195, 204, 215, 387], "schulischen": 23, "verpflichtung": 23, "z": 23, "b": 23, "htl": 23, "diplomarbeit": 23, "wie": [23, 222, 228], "haben": [23, 205], "sie": [23, 205], "erfahren": 23, "mehrfachnennungen": 23, "m\u00f6glich": 23, "16": [23, 234, 258, 272, 284, 285, 387, 1037, 1184], "datenschutz": 23, "screenplai": [24, 62, 354, 478, 574, 577, 580, 583, 586, 589, 592, 624, 625, 626, 627, 628, 631, 632, 633, 651, 652, 653, 654, 792, 795, 800, 805, 810, 812, 850, 853, 856, 1001, 1004, 1008, 1076, 1164, 1171, 1176, 1178, 1181], "The": [24, 39, 43, 45, 60, 101, 123, 126, 170, 183, 215, 231, 234, 237, 244, 261, 270, 273, 288, 296, 298, 300, 306, 309, 316, 319, 322, 323, 326, 328, 336, 337, 340, 350, 353, 390, 398, 399, 436, 437, 452, 459, 460, 469, 470, 474, 475, 484, 552, 553, 605, 629, 650, 651, 673, 693, 694, 702, 707, 709, 711, 736, 754, 757, 768, 789, 833, 863, 872, 873, 880, 897, 900, 911, 914, 917, 919, 928, 930, 934, 950, 952, 954, 955, 957, 963, 971, 975, 990, 992, 999, 1011, 1013, 1014, 1023, 1024, 1032, 1033, 1035, 1039, 1043, 1051, 1054, 1058, 1060, 1062, 1069, 1074, 1080, 1123, 1144, 1151, 1160, 1170, 1191], "problem": [24, 434, 456, 479, 480, 488, 494, 495, 496, 499, 505, 552, 553, 695, 707, 711, 731, 732, 741, 757, 770, 775, 793, 827, 874, 893, 952, 954, 958, 1013, 1028, 1029, 1033, 1047, 1143, 1165, 1172], "And": [24, 42, 60, 62, 123, 128, 129, 143, 183, 279, 282, 285, 288, 291, 296, 297, 298, 299, 300, 301, 306, 309, 311, 314, 316, 319, 322, 323, 326, 327, 328, 330, 334, 336, 337, 340, 350, 353, 410, 454, 478, 479, 481, 484, 485, 490, 491, 492, 498, 501, 507, 515, 516, 521, 529, 535, 550, 597, 598, 604, 609, 625, 629, 630, 631, 633, 651, 666, 667, 671, 674, 699, 705, 707, 709, 722, 739, 742, 743, 744, 746, 747, 752, 764, 766, 768, 770, 775, 785, 801, 859, 863, 864, 865, 869, 872, 878, 880, 916, 928, 930, 935, 939, 945, 946, 957, 970, 992, 1020, 1021, 1023, 1025, 1026, 1027, 1028, 1030, 1035, 1039, 1040, 1043, 1047, 1048, 1049, 1054, 1055, 1056, 1057, 1122, 1123, 1124, 1132, 1144, 1149, 1154, 1155, 1157, 1158, 1159, 1169, 1191], "me": [24, 176, 336, 969], "open": [24, 160, 185, 301, 504, 795, 796, 960, 963, 966, 968, 1005, 1032, 1085], "sourc": [24, 40, 175, 185, 201, 479, 497, 793, 796, 798, 801, 803, 806, 810, 815, 817, 827, 829, 837, 840, 845, 964, 1013, 1091, 1149], "walk": [24, 288, 350, 369], "through": [24, 288, 369], "us": [25, 26, 27, 28, 29, 30, 31, 32, 38, 42, 153, 173, 177, 179, 183, 193, 194, 200, 202, 212, 231, 233, 234, 247, 250, 395, 397, 400, 415, 430, 452, 462, 470, 471, 480, 482, 496, 499, 516, 537, 637, 661, 682, 690, 702, 706, 707, 743, 757, 768, 779, 780, 781, 929, 941, 942, 943, 979, 995, 1012, 1013, 1023, 1024, 1030, 1032, 1035, 1038, 1048, 1057, 1164, 1170, 1171], "case": [25, 26, 27, 28, 29, 30, 233, 426, 430, 501, 563, 565, 568, 742, 743, 964, 968, 969, 970, 1022, 1030, 1057, 1170, 1176], "custom": [25, 160, 163, 176, 359, 598, 599, 613, 619, 643, 697, 1158, 1160, 1176], "subtract": [25, 596], "known": [25, 171], "calcul": [26, 231, 419, 498, 1055], "minimum": [26, 815], "durat": 26, "trainer": [27, 187], "editor": [27, 224], "end": [27, 708], "user": [27, 42, 46, 234, 236, 387, 600, 679, 684, 685, 686, 687, 688, 689, 801, 869, 870, 872, 873, 874, 882, 883, 894, 954, 1034, 1125, 1127, 1129, 1130, 1132, 1164], "audienc": [27, 1191], "from": [28, 29, 31, 38, 40, 42, 43, 45, 57, 101, 123, 143, 158, 164, 183, 193, 201, 202, 210, 250, 260, 288, 291, 296, 305, 323, 387, 405, 427, 433, 475, 478, 621, 624, 665, 674, 678, 704, 705, 744, 805, 810, 851, 856, 941, 953, 971, 995, 1004, 1011, 1053, 1091, 1131, 1135, 1136, 1141, 1143, 1184], "other": [28, 38, 52, 231, 300, 312, 371, 702, 815, 837, 882, 1042], "menu": 29, "choos": 29, "show": 30, "plain": [30, 637, 665, 666, 694], "text": [30, 309, 353, 436, 924, 927, 930, 1085, 1161], "file": [30, 31, 42, 48, 193, 195, 231, 241, 244, 260, 267, 269, 270, 284, 288, 292, 302, 304, 305, 306, 309, 310, 311, 328, 332, 333, 334, 339, 340, 344, 345, 346, 348, 349, 353, 360, 361, 376, 434, 478, 480, 486, 501, 580, 611, 795, 796, 797, 805, 837, 864, 865, 868, 886, 891, 892, 898, 899, 902, 903, 904, 912, 916, 919, 920, 924, 927, 929, 945, 953, 954, 958, 959, 963, 964, 965, 966, 967, 968, 969, 970, 972, 973, 977, 1001, 1005, 1011, 1012, 1026, 1032, 1061, 1085, 1091, 1092, 1093, 1114, 1116, 1125, 1127, 1144, 1176], "send": [31, 1005, 1009], "A": [31, 45, 62, 123, 138, 143, 153, 172, 183, 250, 276, 277, 279, 291, 295, 296, 297, 298, 300, 305, 336, 337, 339, 387, 393, 402, 432, 459, 477, 478, 481, 495, 515, 529, 537, 540, 550, 555, 570, 596, 611, 612, 621, 630, 660, 671, 672, 685, 694, 699, 707, 709, 736, 739, 752, 755, 757, 864, 865, 868, 882, 893, 916, 920, 953, 955, 959, 960, 961, 964, 967, 968, 969, 970, 977, 990, 995, 998, 1011, 1024, 1025, 1028, 1029, 1030, 1033, 1038, 1057, 1060, 1123, 1149, 1154, 1157, 1160, 1161, 1169], "v4l": 31, "camera": 31, "devic": [31, 62, 82, 98, 125, 147, 792, 793, 794, 795, 796, 797, 800, 801, 802, 803, 804, 805, 827, 831, 832, 833, 868, 941, 943, 1001], "output": [31, 50, 122, 131, 193, 205, 360, 492, 675, 879, 1037, 1141, 1176], "over": [31, 244, 252, 254, 788, 943, 1073, 1074], "ssh": [31, 224, 288, 309, 353, 366, 374, 944, 947, 948, 949, 950, 951, 952, 953, 954], "captur": [31, 736, 737, 739], "To": [31, 37, 39, 42, 44, 53, 122, 169, 267, 296, 336, 500, 501, 516, 537, 663, 674, 694, 698, 707, 709, 711, 722, 736, 744, 752, 754, 756, 757, 768, 808, 849, 851, 864, 865, 945, 946, 953, 1013, 1023, 1025, 1030, 1032, 1033, 1053, 1054, 1132, 1153, 1154, 1160], "plai": [31, 62, 722], "remot": [31, 98, 123, 125, 147, 150, 505, 518, 532, 864, 865, 945, 946, 950, 953, 954], "system": [31, 174, 247, 288, 309, 346, 353, 376, 387, 408, 472, 669, 760, 886, 892, 954, 956, 957, 958, 963, 974, 992, 995, 998, 1064, 1164, 1184, 1202, 1203, 1204, 1205, 1206], "emoji": 32, "code": [32, 41, 43, 45, 108, 202, 203, 205, 206, 229, 245, 298, 300, 301, 314, 330, 387, 456, 466, 476, 477, 478, 480, 486, 487, 488, 493, 497, 573, 576, 579, 582, 585, 588, 591, 621, 706, 754, 775, 798, 799, 803, 804, 805, 806, 807, 817, 818, 827, 828, 839, 840, 841, 845, 846, 969, 1000, 1003, 1007, 1027, 1028, 1029, 1131, 1132, 1133, 1136, 1139, 1142, 1149, 1162, 1171, 1175, 1180, 1191], "sphinxemoji": 32, "setup": [32, 62, 79, 110, 175, 179, 201, 208, 209, 211, 212, 213, 234, 284, 290, 291, 294, 297, 299, 301, 304, 305, 309, 310, 311, 332, 333, 338, 339, 344, 348, 349, 353, 492, 550, 552, 934, 942, 950, 961, 1025, 1026, 1059, 1123, 1124, 1171, 1181], "most": [32, 38, 62, 709, 1164], "here": [32, 173, 501, 953], "all": [32, 38, 53, 62, 116, 228, 231, 250, 296, 326, 337, 387, 668, 694, 702, 737, 757, 856, 874, 1011, 1027, 1045, 1134], "recip": 33, "isoamsa": 34, "txt": [34, 35, 36, 38], "ad": [34, 35, 36, 176, 1027, 1153, 1160], "mathemat": [34, 35, 36], "symbol": [34, 35, 36, 396, 411, 472, 918, 1011], "arrow": 34, "isoamsr": 35, "relat": [35, 188, 291, 294, 414, 776], "isonum": 36, "binari": [36, 516, 1085], "oper": [36, 192, 205, 215, 228, 244, 247, 250, 257, 260, 264, 267, 281, 296, 316, 328, 364, 398, 413, 414, 415, 418, 419, 421, 422, 427, 439, 550, 572, 597, 598, 604, 612, 652, 752, 760, 766, 795, 796, 797, 879, 958, 995, 1054, 1064, 1066, 1068, 1084, 1155], "layout": [37, 260, 445], "page": [37, 95, 176, 178, 808, 897, 929, 957], "admonit": 37, "i": [37, 45, 119, 173, 174, 191, 231, 241, 247, 252, 257, 260, 267, 269, 270, 302, 306, 309, 311, 340, 346, 353, 361, 373, 398, 424, 471, 477, 495, 550, 569, 596, 603, 665, 671, 672, 707, 709, 732, 736, 741, 744, 753, 757, 761, 765, 775, 810, 821, 842, 857, 868, 872, 873, 878, 879, 880, 893, 903, 916, 943, 953, 954, 955, 958, 959, 960, 961, 962, 963, 966, 968, 970, 972, 973, 990, 993, 1011, 1028, 1030, 1035, 1085, 1143, 1157, 1181], "an": [37, 176, 247, 300, 315, 322, 326, 331, 365, 369, 387, 483, 488, 598, 707, 722, 798, 916, 942, 953, 958, 995, 1028, 1039, 1048, 1075, 1077, 1171, 1189], "tip": 37, "hint": [37, 518, 548], "import": [37, 183, 191, 231, 241, 250, 369, 603, 1009, 1034, 1042, 1151], "attent": [37, 1077], "caution": [37, 672], "error": [37, 43, 183, 247, 300, 301, 322, 323, 326, 437, 462, 496, 618, 628, 629, 713, 716, 879, 943, 955, 964, 968, 969, 970, 1047, 1104], "danger": [37, 404, 765, 894], "blech": 37, "titl": 37, "blah": 37, "kursdaten": [37, 1185, 1186, 1187, 1188, 1193, 1195, 1196, 1200, 1201, 1202, 1203, 1205, 1206, 1207], "local": [37, 39, 98, 123, 125, 147, 150, 192, 215, 435, 467, 484, 505, 950, 953, 986, 1013, 1076, 1171], "bleh": 37, "do": [37, 42, 169, 231, 273, 336, 428, 465, 484, 495, 694, 827, 849, 864, 865, 880, 1011], "mmlalia": 38, "mathml": 38, "alias": 38, "entiti": [38, 980], "restructuredtext": 39, "cheat": [39, 369], "sheet": [39, 369], "further": [39, 157, 196, 232, 233, 255, 360, 369, 466, 702, 756, 1064], "document": [39, 178, 228, 244, 324, 364, 634, 635, 636, 637, 638, 640, 641, 642, 643, 646, 647, 650, 655, 801, 817, 819, 823, 825, 847, 851, 854, 864, 865, 868, 872, 879, 880, 881, 882, 897, 898, 899, 900, 916, 919, 920, 953, 955, 957, 959, 960, 961, 963, 966, 967, 968, 969, 970, 973, 1011, 1012, 1063, 1087, 1088, 1098, 1161, 1169, 1176], "extern": [39, 314, 330, 355, 433, 482, 611, 812, 813, 942, 1028, 1099, 1191], "section": 39, "refer": [39, 169, 172, 215, 241, 244, 247, 254, 267, 270, 276, 277, 279, 282, 285, 289, 292, 297, 300, 306, 312, 324, 336, 340, 346, 350, 402, 440, 467, 609, 703, 706, 707, 709, 736, 737, 739, 748, 753, 755, 756, 785, 786, 844, 1075], "That": [39, 273, 276, 277, 279, 296, 323, 441, 499, 596, 603, 694, 697, 707, 736, 754, 755, 837, 872, 943, 953, 958, 959, 962, 1030, 1057, 1178], "we": [39, 42, 45, 53, 336, 476, 478, 827, 856, 1023, 1176], "anoth": [39, 260, 476, 995, 1027], "contain": [39, 143, 250, 270, 296, 299, 337, 572, 588, 589, 590, 629, 630, 644, 645, 648, 649, 650, 694, 698, 746, 825, 1025], "abov": 39, "footnot": 39, "sphinxish": 40, "run": [40, 158, 177, 492, 551, 614, 845, 934, 959, 960, 961, 1025, 1026, 1062, 1139, 1142, 1169], "seminar": 41, "clean": [41, 43, 45, 238, 298, 300, 301, 387, 477, 478], "2022": [41, 99, 100, 101, 102, 103, 104, 105, 144, 146, 147, 148, 250, 251, 252, 255, 258, 261, 263, 266, 269, 272, 275, 278, 279, 280, 281, 282, 284, 285, 379, 380, 381, 387], "04": [41, 105, 177, 250, 261, 263, 266, 299, 300, 301, 302, 303, 337, 369, 387, 1025], "agenda": [41, 208, 209, 211, 212, 213, 214, 219, 223, 224, 261, 266, 278, 287, 291, 294, 300, 304, 308, 310, 314, 316, 322, 326, 330, 332, 336, 338, 344, 348, 352, 382, 383, 1191], "timelin": 41, "befor": [42, 62, 160, 193, 316, 319, 752, 1176], "formal": [42, 398], "unit": [42, 43, 45, 72, 204, 234, 272, 281, 291, 294, 349, 377, 537, 553, 614, 1124, 1174], "initi": [42, 241, 276, 277, 279, 336, 337, 400, 412, 461, 548, 579, 580, 581, 596, 603, 614, 651, 674, 694, 696, 697, 698, 699, 743, 765, 770, 831, 842, 854, 984, 986], "structur": [42, 43, 143, 165, 169, 192, 255, 276, 277, 279, 281, 303, 314, 325, 329, 330, 336, 430, 438, 445, 448, 454, 490, 537, 572, 743, 748, 768, 805, 833, 1029, 1042, 1169, 1176, 1191], "snippet": [42, 44, 50], "userdb": [42, 46, 49, 50, 55, 58, 233, 572, 686, 690], "bin": 42, "binaryfil": 42, "cpp": [42, 486, 537, 540, 712, 713, 714, 717, 718, 719, 720, 723, 724, 726, 727, 728, 729, 730], "extend": [42, 228, 614, 1051], "read": [42, 49, 50, 58, 231, 238, 360, 361, 371, 405, 466, 478, 501, 702, 744, 795, 853, 959, 963, 969, 971, 1085, 1092, 1093, 1125, 1126, 1127, 1128, 1141, 1161], "iter": [42, 194, 205, 210, 215, 220, 222, 228, 231, 236, 237, 241, 244, 247, 252, 254, 257, 260, 269, 270, 281, 282, 284, 285, 291, 294, 298, 302, 304, 305, 306, 310, 311, 323, 324, 328, 332, 333, 334, 338, 339, 340, 344, 345, 348, 349, 350, 361, 629, 630, 653, 694, 722, 729, 742, 743, 744, 788, 825, 1037, 1039, 1040, 1041, 1053, 1073, 1074, 1083], "bug": [42, 47, 53, 415, 580, 744], "faschingbau": [42, 176], "As": [42, 153, 499, 516, 707, 746, 943, 977, 1011, 1048, 1178], "last": [42, 415, 436, 437, 466, 619, 622, 758, 987, 1009, 1176], "name": [42, 43, 131, 241, 244, 260, 409, 447, 605, 694, 837, 881, 899, 1005, 1076, 1087], "wrap": [42, 204, 462, 694, 1033], "up": [42, 174, 204, 238, 281, 299, 300, 322, 374, 462, 694, 1048], "what": [42, 45, 49, 53, 179, 182, 247, 257, 424, 465, 476, 600, 669, 688, 694, 706, 707, 736, 757, 806, 827, 837, 853, 857, 872, 880, 898, 937, 950, 953, 954, 958, 959, 962, 966, 998, 1011, 1023, 1027, 1035, 1039, 1043, 1086, 1157, 1160], "have": [42, 45, 476, 827, 1023, 1028], "messag": [43, 172, 173, 475, 481, 985, 1004, 1005, 1152, 1176], "book": [43, 45, 219, 269, 311, 390, 475, 1136], "survei": [43, 476], "comment": [43, 228, 252, 267, 292, 364, 1063, 1105], "format": [43, 50, 231, 237, 252, 312, 340, 1080, 1133], "object": [43, 118, 205, 210, 247, 254, 260, 264, 272, 273, 281, 284, 285, 297, 298, 300, 301, 304, 305, 310, 316, 317, 319, 322, 323, 326, 327, 332, 338, 344, 345, 348, 349, 357, 476, 494, 499, 579, 580, 581, 596, 598, 601, 604, 606, 610, 612, 667, 669, 683, 698, 701, 704, 707, 753, 1005, 1028, 1029, 1034, 1042, 1048, 1050, 1052, 1086, 1154, 1158], "data": [43, 130, 131, 132, 133, 192, 194, 220, 229, 255, 269, 272, 281, 305, 322, 323, 324, 326, 346, 348, 410, 454, 457, 478, 602, 606, 629, 748, 872, 986, 1053, 1122, 1136, 1141, 1143], "handl": [43, 247, 250, 260, 272, 291, 294, 299, 300, 301, 322, 323, 326, 380, 488, 496, 618, 955, 1034, 1087], "boundari": [43, 1149], "class": [43, 205, 231, 250, 254, 257, 260, 273, 281, 297, 302, 316, 319, 350, 481, 499, 506, 507, 524, 525, 537, 540, 554, 573, 574, 575, 598, 605, 606, 611, 613, 614, 615, 616, 622, 637, 665, 666, 685, 694, 695, 697, 705, 706, 738, 752, 793, 1033, 1047, 1048, 1051, 1052, 1053, 1054], "switch": [44, 136, 141, 142, 143, 426, 458, 549], "googletest": [44, 200, 551, 1174], "git": [44, 78, 123, 143, 150, 175, 183, 187, 229, 233, 234, 288, 369, 374, 387, 810, 1136], "submodul": 44, "establish": [44, 45, 1026], "demo": [44, 134, 290, 291, 298, 482, 501, 738, 753, 868, 894, 958, 993, 997], "straightforward": [44, 205], "main": [44, 123, 443, 534, 535, 536, 774, 776, 778, 780, 1027], "convers": [44, 228, 244, 252, 254, 260, 264, 267, 285, 296, 302, 306, 312, 324, 328, 334, 340, 346, 364, 415, 442, 666, 674, 1066, 1080], "fix": [44, 175, 183, 276, 277, 279, 296, 361, 604, 722, 768, 827, 828, 840, 841], "shortcom": 44, "softwar": [45, 143, 201, 298, 476, 477, 943, 1016, 1019, 1193], "craft": [45, 298, 477], "09": [45, 143, 177, 232, 242, 250, 316, 317, 318, 319, 320, 321, 387], "00": 45, "15": [45, 215, 221, 258, 291, 294, 304, 305, 306, 344, 345, 346, 347, 369, 376, 381, 387, 864, 865], "introductori": [45, 288, 722, 976], "word": [45, 267, 436, 437, 466, 469, 619, 622, 749, 758, 897, 1103, 1120], "engin": [45, 269, 943], "disciplin": 45, "coffe": 45, "break": [45, 215, 252, 429, 1070, 1073], "project": [45, 110, 123, 135, 143, 176, 192, 233, 234, 248, 272, 277, 279, 281, 297, 299, 300, 301, 314, 316, 319, 322, 323, 326, 327, 330, 345, 349, 375, 376, 377, 381, 383, 476, 478, 537, 542, 551, 552, 614, 1123, 1163, 1169, 1191, 1194], "enter": [45, 62, 244, 629, 672, 707, 733, 742, 756, 840, 929, 997, 1027, 1035, 1047, 1048, 1144, 1149, 1154], "framework": 45, "lunch": 45, "cornerston": 45, "45": 45, "keep": [45, 177, 899], "small": 45, "23": [45, 213, 239, 255, 261, 279, 287, 297, 308, 309, 387], "59": 45, "extrem": 45, "program": [45, 50, 62, 94, 122, 134, 188, 204, 210, 231, 234, 250, 260, 272, 273, 281, 284, 288, 298, 300, 301, 304, 305, 306, 310, 316, 319, 322, 323, 326, 327, 332, 338, 340, 344, 345, 348, 349, 376, 387, 391, 392, 394, 430, 431, 432, 438, 464, 469, 474, 476, 481, 501, 534, 535, 536, 540, 596, 757, 774, 776, 778, 780, 798, 850, 882, 893, 894, 935, 937, 956, 971, 974, 975, 978, 990, 1000, 1008, 1011, 1043, 1050, 1059, 1060, 1062, 1064, 1112, 1124, 1135, 1162, 1190, 1202, 1203, 1204, 1205, 1206], "session": 45, "find": [46, 157, 175, 193, 496, 555, 636, 654, 784, 925, 1178], "crash": [46, 175], "If": [46, 49, 600, 694, 709, 853, 967, 968, 1034, 1160], "Not": [46, 62, 122, 126, 130, 131, 133, 136, 138, 142, 155, 183, 264, 273, 562, 564, 567, 636, 672, 688, 694, 716, 731, 732, 744, 753, 827, 853, 893, 964, 967, 968, 969, 970, 990, 1011, 1028, 1038, 1154, 1176], "found": [46, 564, 567, 636, 688, 1178], "state": [46, 173, 233, 722, 840, 842], "exist": [48, 134, 169, 562, 964, 967, 968, 970, 1051, 1160], "ar": [48, 172, 173, 252, 254, 267, 317, 462, 478, 600, 606, 694, 722, 995, 1005, 1033, 1042, 1054, 1159, 1178], "overwritten": 48, "done": [49, 123, 126, 130, 139, 140, 141, 337, 500, 663, 757], "twice": 49, "altern": [50, 703], "csv": [50, 131, 143, 244, 261, 269, 272, 281, 284, 304, 305, 306, 310, 311, 326, 332, 333, 339, 344, 345, 348, 349, 478, 1092, 1093, 1094, 1125, 1126, 1127, 1128, 1133, 1144], "frontend": 50, "featur": [51, 53, 62, 284, 300, 301, 302, 304, 305, 310, 322, 326, 337, 455, 478, 734, 1036, 1051, 1070, 1141, 1143], "search": [52, 634, 636, 637, 640, 650, 654, 674, 687, 688, 689, 926, 1028, 1081, 1164], "By": [52, 200, 264, 296, 402, 609, 653, 684, 687, 689, 711, 722, 733, 736, 737, 739, 744, 748, 756, 784, 785, 786, 1034, 1067, 1157, 1158, 1159, 1169], "index": [52, 215, 233, 252, 264, 312, 467, 720, 937, 1072, 1158, 1164, 1165, 1166], "backlog": 53, "need": [53, 361, 501, 716, 718, 995, 1144], "chang": [53, 123, 882, 893, 900], "Or": [53, 122, 478, 486, 487, 501, 705, 744, 957, 1048, 1154], "Will": 53, "refactor": [53, 56, 478, 554, 805, 806, 807, 845, 1126, 1128, 1133], "after": [53, 208, 239, 428, 856, 872, 1051], "backingstor": [54, 55, 57], "ha": [54, 55, 121, 719], "too": [54, 55, 472, 487, 694, 738, 761], "mani": [54, 55, 260, 466, 488, 744, 774, 776, 778, 780, 919, 999], "respons": [54, 55, 236, 504], "interfac": [54, 70, 87, 134, 139, 141, 212, 260, 299, 337, 356, 487, 491, 501, 504, 508, 516, 527, 534, 535, 550, 552, 582, 583, 584, 591, 592, 593, 668, 796, 868, 936, 937, 940, 942, 1047, 1145], "load": [57, 193, 453, 489, 815, 816, 941, 983, 1045], "constructor": [57, 210, 260, 276, 277, 279, 285, 336, 550, 580, 586, 597, 598, 599, 600, 601, 603, 604, 613, 614, 615, 616, 683, 698, 699, 700, 705, 707, 731, 751, 752, 1049], "bool": 58, "realli": [58, 694, 756], "pointless": [59, 61, 62, 63, 64, 65, 66, 67, 1054], "blink": [59, 61, 62, 63, 64, 65, 66, 67, 369], "With": [59, 61, 62, 63, 98, 120, 125, 147, 202, 233, 280, 296, 298, 300, 322, 326, 387, 471, 479, 500, 515, 529, 551, 622, 704, 757, 770, 863, 864, 865, 926, 929, 934, 939, 965, 1028, 1076, 1157, 1159, 1170, 1171, 1174], "asyncio": [59, 61, 62, 63, 66, 1088], "libgpiod": [59, 60, 61, 62, 63, 136], "raspberri": [59, 61, 62, 63, 183, 212, 355, 387, 817, 838, 934, 938, 941, 1016, 1020, 1022, 1024, 1200], "pi": [59, 60, 61, 62, 63, 183, 212, 387, 817, 837, 838, 934, 941, 1023, 1024, 1200], "fedora": [60, 175, 182, 810, 811, 812, 813, 1025], "prepar": [60, 175, 193, 208, 209, 211, 212, 213, 214, 224, 233, 248, 277, 279, 287, 537, 614, 837], "tarbal": [60, 183], "On": [60, 62, 123, 233, 267, 269, 291, 295, 296, 300, 322, 326, 389, 551, 553, 598, 629, 630, 634, 640, 743, 768, 880, 959, 960, 961, 966, 971, 975, 998, 1025, 1091], "build": [60, 69, 173, 175, 183, 200, 201, 234, 252, 479, 481, 489, 537, 551, 613, 614, 615, 616, 805, 810, 811, 812, 813, 815, 837, 838, 941, 959, 960, 961, 971, 1012, 1013, 1016, 1019, 1023, 1024, 1025, 1027, 1028, 1029, 1083, 1178, 1196], "submiss": [61, 63, 65, 110], "biographi": [61, 63, 65], "abstract": [61, 63, 65, 281, 316, 319, 494, 509, 523, 873, 959, 960, 961, 1047], "present": 62, "start": [62, 250, 276, 277, 279, 387, 501, 704, 716, 1028, 1152, 1176], "point": [62, 264, 267, 550, 596, 598, 606, 612, 614, 615, 616, 622, 704, 716, 768, 864, 865, 1023, 1066], "greet": [62, 323, 1098], "multipl": [62, 123, 210, 437, 478, 479, 803, 804, 805, 899, 953, 1011, 1032, 1034, 1071, 1154, 1157, 1170], "background": [62, 177, 179, 595, 693], "thread": [62, 172, 174, 183, 300, 301, 378, 572, 694, 760, 761, 766, 979, 980, 981, 986, 988, 995, 998, 1043], "charact": [62, 391, 398, 401, 404, 411, 792, 793, 794, 795, 796, 797, 800, 801, 802, 1120], "base": [62, 183, 252, 260, 276, 277, 279, 281, 316, 319, 336, 499, 665, 666, 694, 707, 722, 742, 743, 1029, 1034, 1047], "gpio": [62, 87, 142, 143, 190, 212, 355, 356, 357, 358, 369, 817, 818, 941, 943, 975, 976, 977], "entir": [62, 296, 810, 812, 897, 953], "matrix": 62, "off": [62, 233], "bring": [62, 150, 374, 668], "togeth": [62, 484, 668, 899], "modular": [62, 250, 432], "bit": [62, 305, 339, 418, 882, 893, 895, 1060, 1062], "row": [62, 296, 1153, 1157, 1158, 1159], "coroutin": [62, 279, 721, 722], "enough": [62, 596, 672], "sequenc": [62, 241, 244, 252, 284, 291, 294, 304, 305, 310, 311, 332, 333, 338, 339, 344, 345, 348, 349, 350, 411, 570, 634, 640, 1038, 1071, 1079], "loop": [62, 192, 194, 205, 215, 220, 252, 254, 264, 267, 270, 276, 277, 279, 298, 300, 322, 326, 334, 336, 350, 394, 427, 428, 466, 538, 742, 978, 1039, 1070, 1073], "forev": 62, "strip": [62, 237, 254, 260, 361], "down": [62, 487], "factori": [62, 494, 509, 523, 553], "turn": [62, 1038], "Into": [62, 123, 294, 316, 319, 322, 405, 501, 538, 555, 631, 685, 694, 738, 1126, 1128, 1133], "anti": [62, 766, 768], "clumsi": [62, 768], "decor": [62, 231, 281, 291, 294, 298, 300, 301, 316, 322, 323, 326, 499, 513, 527, 1033], "wrapper": [62, 133], "final": [62, 260, 276, 277, 279, 336, 733, 872, 876, 1034], "playground": [62, 155], "cycl": [62, 126, 130, 131, 133, 136, 138, 142, 980], "fast": [62, 210], "forward": [62, 279, 403, 467, 756, 952], "ani": [62, 296, 495, 550, 990], "cancel": 62, "goodby": 62, "glt": [63, 65], "2023": [63, 108, 109, 110, 111, 112, 126, 127, 130, 138, 142, 143, 279, 287, 288, 291, 292, 294, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 346, 387], "evolut": [64, 65, 66, 107], "2024": [65, 113, 114, 115, 116, 117, 143, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 387], "talk": [66, 229, 305, 935, 941, 942, 1136], "sketch": 66, "gpiod": [66, 87], "textual": 66, "cmake": [69, 200, 201, 233, 288, 314, 315, 330, 331, 387, 479, 481, 483, 487, 537, 551, 971, 1012, 1013, 1026, 1178, 1179, 1191], "oo": [71, 109, 143, 205, 231, 234, 250, 257, 260, 269, 272, 276, 277, 279, 281, 291, 294, 297, 299, 316, 319, 323, 327, 336, 337, 339, 378, 504, 541, 550, 572, 1043], "graph": [73, 74, 75, 470, 472, 677, 790, 838, 1094, 1095, 1099, 1108, 1122, 1129], "embed": [74, 75, 79, 97, 98, 108, 109, 113, 114, 124, 125, 144, 146, 147, 148, 149, 190, 199, 288, 297, 299, 337, 342, 368, 370, 371, 383, 385, 387, 775, 1193], "comput": [74, 75, 79, 97, 108, 109, 113, 114, 124, 144, 146, 147, 148, 149, 366, 368, 370, 371, 383, 385, 465, 466, 550, 864, 865, 873], "current": [74, 75, 499, 770, 788, 900], "depend": [74, 75, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 142, 201, 314, 316, 330, 355, 356, 357, 358, 360, 482, 483, 485, 486, 490, 500, 504, 514, 537, 542, 559, 561, 572, 580, 639, 645, 649, 657, 659, 662, 667, 675, 676, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 696, 703, 710, 721, 745, 750, 775, 814, 815, 864, 865, 866, 870, 884, 885, 886, 905, 910, 911, 914, 947, 949, 956, 962, 964, 972, 974, 976, 988, 991, 1013, 1015, 1017, 1018, 1021, 1022, 1028, 1043, 1045, 1092, 1093, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1109, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1138, 1142, 1146, 1149, 1152, 1156, 1168, 1174, 1191], "ex": [76, 77, 83, 84, 85, 86, 92, 93], "race": [76, 77, 89, 762, 827, 828, 835, 981, 982, 1045], "condit": [76, 77, 89, 420, 428, 437, 762, 766, 827, 828, 835, 981, 982, 984, 985, 1045], "avoid": [77, 89], "goal": [77, 83, 84, 85, 86, 88, 89, 90, 92, 157, 159, 160, 162, 193, 297, 299, 1189, 1192], "outcom": [77, 83, 84, 85, 86, 211, 319, 371], "introduct": [78, 81, 192, 276, 277, 279, 291, 294, 298, 299, 309, 314, 315, 330, 331, 336, 337, 353, 372, 387, 390, 407, 465, 469, 483, 500, 508, 595, 692, 698, 742, 751, 760, 817, 837, 871, 1034, 1169, 1189, 1191, 1202], "stece": [79, 97, 124, 144, 146, 147, 148], "2019": [79, 192, 195, 387], "overview": [79, 143, 188, 288, 300, 301, 324, 336, 384, 388, 704, 711, 722, 746, 752, 766, 768, 774, 776, 778, 779, 780, 781, 788, 808, 862, 873, 899, 930, 941, 942, 943, 944, 979, 1011, 1033, 1138, 1142], "knowledg": [79, 1191], "transfer": [79, 754], "unix": [81, 111, 112, 196, 374, 390, 452, 462, 498, 1062], "hardwar": [82, 85, 86, 143, 160, 163, 288, 452, 938, 940, 941, 943, 976, 1193], "manag": [82, 174, 222, 252, 272, 281, 291, 294, 297, 298, 300, 316, 319, 322, 323, 326, 349, 350, 376, 377, 381, 476, 604, 664, 752, 847, 848, 1013, 1032, 1051, 1163, 1193], "averag": [83, 84, 92, 498, 526, 774, 776, 778, 780], "sensor": [83, 84, 86, 92, 93, 95, 121, 139, 140, 299, 323, 336, 494, 495, 499, 501, 506, 524, 526, 527, 533, 537, 539, 540, 541, 552, 553, 554, 561, 752, 774, 776, 778, 780, 941, 943, 971, 1122, 1124], "parallel": 84, "led": [85, 138, 369], "temperatur": [85, 86, 93, 138, 537, 540, 941, 943, 971], "displai": [85, 92, 120, 128, 129, 134, 138], "sysf": [87, 142, 143, 212, 355, 369, 942, 976, 977], "multithread": [88, 190, 250, 276, 277, 279, 288, 322, 323, 326, 336, 377, 384, 766, 767, 1008, 1043, 1044, 1046, 1205], "semaphor": [89, 172, 768, 1004, 1005], "mutex": [89, 172, 453, 764, 768, 827, 828, 829, 830, 842, 843, 982, 983, 998, 1045], "commun": [90, 269, 518, 766, 984, 1005], "wait": [90, 163, 766, 768, 853, 854, 855, 984, 1004], "someth": [90, 205, 596, 694, 768, 853, 854, 855, 1073], "simpl": [94, 210, 492, 596, 606, 621, 672, 684, 840, 842, 868, 882, 1011, 1028, 1033, 1053, 1083, 1161, 1169], "2020": [97, 177, 197, 199, 204, 205, 207, 208, 209, 211, 213, 214, 219, 387], "ss2022": [98, 106, 864, 865], "block": [98, 125, 147, 423, 619, 958, 959, 960, 961, 962, 1009], "cross": [98, 109, 125, 147, 183, 288, 817, 837, 1012, 1014, 1015, 1016, 1021, 1023, 1024, 1026, 1184], "develop": [98, 109, 125, 126, 130, 131, 133, 136, 138, 142, 143, 147, 204, 219, 233, 236, 258, 269, 272, 288, 291, 293, 294, 297, 298, 299, 300, 301, 322, 323, 326, 342, 372, 387, 814, 1014, 1015, 1021, 1192, 1193, 1194, 1207], "03": [99, 100, 101, 102, 103, 104, 143, 221, 224, 229, 248, 250, 258, 261, 278, 291, 292, 294, 297, 298, 314, 352, 353, 369, 387, 694, 695], "08": [99, 143, 239, 242, 250, 263, 387], "homework": [99, 100, 101, 102, 105], "until": 101, "21": [101, 102, 261, 362, 369, 387], "exercis": [101, 110, 165, 187, 192, 193, 205, 208, 209, 213, 221, 222, 224, 233, 234, 244, 250, 267, 272, 276, 277, 279, 281, 284, 288, 292, 297, 299, 300, 304, 305, 310, 311, 312, 316, 319, 322, 323, 326, 332, 333, 339, 344, 345, 348, 349, 353, 359, 361, 369, 375, 393, 395, 397, 399, 401, 403, 405, 417, 441, 450, 494, 495, 496, 498, 499, 500, 502, 503, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 570, 571, 572, 602, 613, 614, 615, 616, 617, 658, 659, 660, 667, 675, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 756, 784, 785, 786, 787, 859, 866, 877, 883, 886, 887, 889, 891, 901, 902, 903, 904, 905, 906, 907, 908, 909, 911, 912, 913, 914, 915, 924, 945, 946, 947, 948, 964, 965, 971, 1005, 1009, 1016, 1018, 1019, 1020, 1021, 1050, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133], "creat": [101, 123, 150, 166, 171, 175, 178, 200, 201, 551, 694, 761, 857, 863, 864, 865, 882, 887, 889, 891, 899, 903, 905, 916, 948, 965, 967, 968, 970, 1004, 1005, 1023, 1025, 1030, 1123, 1141, 1143], "copi": [101, 205, 254, 289, 336, 417, 555, 589, 597, 604, 609, 624, 630, 631, 635, 642, 694, 705, 707, 732, 737, 739, 743, 748, 752, 753, 784, 851, 899, 901, 902, 905, 945, 946, 953, 964, 1075, 1154], "move": [101, 276, 277, 279, 297, 336, 337, 550, 596, 612, 703, 704, 705, 706, 707, 752, 754, 785, 817, 897, 904, 905, 920], "remov": [101, 270, 487, 567, 568, 650, 653, 784, 905, 908, 916, 1005], "l": [101, 914, 919], "command": [101, 496, 511, 525, 815, 882, 893, 897, 914, 919, 934, 1025], "22": [103, 211, 218, 223, 310, 311, 312, 326, 327, 328, 329, 387], "24": [103, 135, 143, 218, 250, 280, 300, 301, 302, 303, 322, 323, 325, 326, 327, 328, 329, 387], "ku": 103, "28": [104, 192, 209, 250, 298, 375, 387], "01": [105, 110, 113, 143, 242, 248, 250, 251, 252, 281, 287, 332, 333, 334, 344, 345, 346, 347, 348, 349, 350, 351, 369, 379, 380, 387, 864, 865], "ws2022": [107, 108, 109], "plan": [107, 143, 261, 372], "fh": [108, 109, 123, 149, 537, 538, 539, 540, 541, 613, 614, 615, 616, 676, 870, 884, 885, 910, 1017], "joanneum": [108, 109, 149], "question": [108, 109, 115, 116, 117, 118, 119, 160, 231, 384, 478, 492, 537, 676, 870, 884, 885, 888, 890, 910, 996, 1017, 1046], "inherit": [108, 191, 231, 260, 281, 316, 319, 508, 582, 583, 584, 665, 666, 667, 670, 694, 966, 1043, 1051], "memori": [108, 174, 196, 222, 350, 442, 445, 449, 451, 453, 460, 467, 566, 576, 577, 578, 604, 663, 664, 808, 821, 822, 823, 824, 850, 851, 852, 870, 874, 1004, 1005, 1193, 1203], "leak": [108, 566, 577, 604, 754], "ye": [109, 1149], "No": [109, 173, 212, 516, 694, 711, 757, 1034, 1160, 1176], "lab": 110, "exam": [110, 111, 112, 113, 114, 115, 116, 124, 125, 143, 232, 245, 247, 369, 384, 550, 864, 865, 866, 996, 1046], "17": [110, 143, 244, 245, 247, 251, 252, 258, 275, 282, 288, 304, 305, 306, 344, 345, 346, 347, 387, 611], "ss2023": [111, 112, 125], "06": [111, 112, 232, 233, 250, 279, 310, 311, 312, 337, 369, 387], "30": [111, 112, 190, 199, 209, 214, 261, 387], "handout": 111, "concept": [111, 112, 279, 309, 336, 353, 710, 711, 714, 715, 716, 719, 720, 746, 871, 1143], "toolchain": [111, 112, 183, 234, 314, 330, 837, 1011, 1012, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1191], "solv": [112, 983, 1143, 1165, 1172], "26": [113, 250, 280, 287, 300, 301, 302, 303, 322, 323, 325, 369, 387], "02": [114, 115, 143, 250, 255, 269, 288, 381, 387, 876], "ws2023": [115, 116, 135, 143], "sampl": [115, 143, 247, 757, 839, 894, 1093, 1114, 1135, 1169, 1194], "why": [115, 119, 174, 175, 183, 252, 476, 504, 596, 599, 603, 604, 751, 757, 782, 810, 856, 881, 935, 942, 950, 954, 979, 1032, 1077], "const": [118, 460, 569, 586, 606, 607, 609, 681, 682, 694, 709, 743, 748], "paramet": [119, 205, 252, 254, 298, 340, 365, 404, 440, 443, 446, 460, 478, 482, 707, 711, 746, 757, 837, 967, 1012, 1077, 1148], "pass": [119, 369, 609], "which": [119, 504, 970, 1011], "One": [119, 231, 270, 296, 361, 418, 437, 476, 478, 611, 744, 757, 850, 935, 953, 986, 1011, 1027], "better": [119, 172, 393, 478, 847, 1057, 1149], "question2": 119, "solid": [120, 121, 173, 476], "hysteresi": 120, "id": [121, 273, 301, 328, 874, 894, 954, 980, 992, 1184], "Be": [122, 234, 495, 499, 500, 604, 609, 663, 755, 760], "virtual": [122, 196, 269, 290, 582, 583, 584, 669, 671, 672, 774, 775, 776, 778, 779, 780, 781, 782, 808, 870, 874, 936, 1004, 1123, 1171, 1172, 1173, 1203], "version": [122, 183, 478, 481, 484, 694, 722, 967], "our": [123, 200, 943], "ece21": 123, "fork": [123, 143, 844], "pull": [123, 143, 501], "request": [123, 143, 478, 796, 798, 817, 819, 977], "upstream": [123, 143, 150], "sync": [123, 808], "onli": [123, 270, 296, 442, 709, 757, 810, 1105], "onc": [123, 369], "updat": [123, 143, 177], "It": [123, 175, 204, 296, 373, 442, 668, 893, 954, 967, 968, 1011], "Its": [123, 1048], "fetch": 123, "your": [123, 196, 289, 290, 457, 716, 883], "clone": [123, 183, 187, 200, 551], "merg": 123, "push": [123, 487], "two": [124, 267, 441, 534, 535, 596, 615, 699, 1005, 1100, 1101, 1110, 1111], "semest": 124, "support": [124, 212, 224, 697, 833], "finish": [125, 159, 168, 234, 856], "boil": [126, 127, 128, 129, 135, 143], "pot": [126, 127, 128, 129, 135, 143], "begin": [126, 342, 390, 744], "standup": [126, 127, 128, 129, 130, 134, 138, 142], "record": [126, 127, 128, 129, 130, 134, 138, 142, 215, 1130, 1132], "20": [126, 130, 138, 142, 143, 261, 275, 279, 297, 299, 310, 311, 312, 336, 338, 339, 340, 341, 361, 369, 387, 1025], "requir": [126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 138, 142, 238, 269, 316, 319, 371, 482, 494, 515, 518, 537, 538, 539, 543, 544, 545, 546, 547, 548, 549, 716, 964, 971, 1092, 1093, 1114, 1123, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133], "futur": [126, 130, 131, 133, 136, 138, 142, 378, 768], "part": [126, 130, 131, 133, 136, 138, 142, 261, 1178], "Of": [126, 130, 131, 133, 136, 138, 142, 296, 305, 316, 319, 339, 479, 550, 596, 628, 629, 669, 707, 739, 744, 754, 756, 766, 784, 785, 786, 864, 865, 872, 964, 975, 999, 1013, 1034, 1037, 1057, 1154, 1160], "statu": [128, 944, 980, 990], "report": 128, "full": [129, 236], "iot": 129, "logger": [130, 131, 132, 133, 501], "sink": [131, 133, 143, 323], "column": [131, 296, 1154, 1155, 1157, 1158, 1159, 1160], "configur": [131, 176, 178, 183, 480, 898, 936, 941, 943, 978], "mqtt": [133, 137, 143, 260, 323, 326, 1130, 1152], "mosquitto": 133, "infrastructur": 134, "percentagedisplai": 134, "composit": [134, 498, 508, 512, 526, 788], "breadboard": 134, "acrobat": 134, "group": [135, 233, 234, 248, 281, 288, 300, 301, 316, 319, 322, 323, 326, 327, 345, 375, 407, 422, 431, 438, 444, 448, 451, 455, 464, 468, 473, 474, 594, 602, 617, 620, 623, 664, 673, 692, 734, 735, 759, 767, 771, 783, 787, 789, 874, 882, 891, 931, 939, 940, 994], "task": [135, 143, 375, 995], "datalogg": [135, 143], "peripher": [135, 143], "client": [135, 236, 532, 1152], "subscrib": [137, 1152], "via": [138, 143, 180, 181, 366, 943], "pwm": [138, 942], "control": [138, 269, 284, 291, 294, 304, 305, 310, 311, 332, 333, 338, 339, 344, 345, 348, 349, 501, 722, 934, 942], "onewir": [140, 537, 553, 554, 943, 971], "05": [143, 229, 232, 263, 269, 272, 275, 278, 304, 305, 306, 308, 309, 361, 362, 369, 387], "vo": 143, "recap": [143, 220, 233, 234, 248, 281, 301, 316, 319, 323, 324, 589, 751, 1011, 1037], "polymorph": [143, 234, 337, 543, 544, 545, 546, 547, 548, 549, 552, 669, 758, 777], "collabor": 143, "necessarili": 143, "first": [143, 205, 234, 391, 541, 757, 798, 799, 833, 1171], "round": [143, 519, 533], "organiz": 143, "design": [143, 280, 298, 300, 301, 316, 319, 337, 387, 404, 461, 476, 500, 504, 514, 667, 1192], "At": 143, "larg": 143, "07": [143, 234, 250, 281, 314, 315, 369, 373, 387], "renam": [143, 920], "relev": 143, "gl\u00fchwein": 145, "trinken": 145, "summer": [146, 316, 319, 372], "syllabu": [148, 232, 245], "lehrveranstaltungsbeschreibung": 148, "umfang": 148, "lehrveranstaltung": 148, "inhalt": [148, 192, 195, 1008, 1186], "inhaltlich": 148, "voraussetzungen": [148, 370], "ziel": 148, "pr\u00fcfung": 148, "beurteilungsschema": 148, "bewertung": 148, "leistungen": 148, "bewertungsschl\u00fcssel": 148, "hilfsmittel": 148, "bei": [148, 204, 215, 387], "schriftlichen": 148, "pr\u00fcfungen": 148, "wiederholungsm\u00f6glichkeiten": 148, "anwesenheitsvorgab": 148, "zusatzinformationen": 148, "empfohlen": [148, 370, 1185, 1187, 1188, 1193, 1195, 1196, 1200, 1201, 1202, 1203, 1205, 1206, 1207], "fachliteratur": [148, 370], "einzelnen": 148, "lehreinheiten": 148, "graz": [149, 195, 197, 204, 242, 387], "branch": [150, 424], "track": [150, 1027], "submit": [150, 856, 857], "appli": [150, 175, 1160], "patch": [150, 175], "packag": [152, 159, 177, 183, 200, 281, 298, 316, 322, 362, 837, 1016, 1019, 1042, 1091, 1163, 1164, 1165, 1166, 1167, 1171], "pypi": [152, 229, 269, 1091, 1136, 1165, 1167], "gaphor": 153, "decad": 153, "manual": [153, 597, 600, 604, 757, 780, 781, 897, 957, 975, 978, 1039], "model": [153, 250, 1141, 1143], "librari": [153, 233, 245, 250, 269, 297, 299, 305, 404, 479, 484, 485, 489, 559, 619, 629, 662, 673, 702, 957, 1028, 1029, 1136, 1203], "hochk\u00f6nig": 154, "k\u00f6nigsjodl": 154, "klettersteig": 154, "tour": [154, 281, 694], "werfen": 154, "ostpreussenh\u00fctt": 154, "matrashau": 154, "yet": [155, 260], "pending_xref": 156, "audio": [157, 161], "chip": [157, 942], "bringup": [157, 160, 943], "get": [158, 171, 201, 252, 337, 768, 825, 850, 975], "debian": [158, 159], "kernel": [158, 159, 160, 164, 173, 175, 219, 387, 472, 801, 810, 811, 812, 813, 814, 815, 829, 831, 837, 838, 870, 873, 938, 941, 1194], "config": [158, 837], "within": 158, "qemu": 158, "extract": [158, 164, 231, 538, 1126, 1128, 1133, 1141], "boot": [158, 171, 182, 387, 873], "etc": [159, 220, 228, 231, 260, 270, 273, 306, 913, 941, 969, 1063, 1114], "yocto": [160, 164, 932], "everyth": [160, 188, 247, 484, 868, 879, 958], "like": [160, 336, 596, 990], "i2": 161, "kontron": 161, "smarc": 161, "modul": [161, 205, 229, 231, 269, 270, 282, 298, 305, 322, 323, 362, 369, 472, 487, 551, 740, 805, 810, 812, 813, 815, 816, 831, 837, 942, 1042, 1133, 1136, 1144, 1170, 1178], "dirti": 162, "upgrad": 162, "path": [162, 183, 231, 241, 247, 254, 340, 349, 350, 490, 788, 869, 921, 1023, 1028, 1123, 1178], "step": [162, 496, 499, 501, 537, 629, 722, 784, 785, 1012, 1013, 1027, 1047, 1072], "intel": 164, "bsp": 164, "improv": 165, "beginn": [165, 229, 241, 264, 269, 281, 305, 1135, 1136], "split": [165, 191, 254, 260, 334, 361, 1081, 1141], "openshot": 166, "seo": [167, 168], "sitemap": 167, "meta": [167, 168], "stack": [168, 174, 215, 236, 449, 707], "hang": 168, "dbu": [168, 501], "stuff": [168, 337, 369, 462, 873, 907], "extens": 169, "rest": [169, 231, 326, 337, 963], "style": [169, 425, 476, 596, 698, 752, 770, 1080], "convert": [169, 192, 296, 1053, 1132], "rst": 169, "exampl": [169, 254, 260, 264, 365, 398, 402, 437, 439, 459, 462, 498, 537, 622, 647, 698, 699, 717, 718, 719, 720, 746, 755, 861, 879, 881, 882, 930, 954, 958, 963, 966, 984, 1009, 1032, 1047, 1067, 1077, 1080, 1081, 1082, 1083, 1105, 1147, 1155, 1160, 1169, 1170], "add": [169, 290, 488, 492, 550, 798, 845, 856, 1008, 1051, 1153], "miss": [169, 281, 698, 967], "past": [169, 437], "blog": 169, "learn": [170, 291, 349, 350, 371, 1137, 1143], "beagleboard": 171, "how": [171, 174, 182, 204, 234, 252, 406, 445, 470, 471, 472, 606, 744, 754, 880, 893, 896, 1039, 1143], "repair": 171, "nand": 171, "also": [171, 443, 868, 873, 874, 879, 880, 959, 960, 961, 963, 990, 993, 997, 999, 1078, 1143], "40w": 171, "x": [171, 234, 586], "loader": 171, "u": [171, 954], "bootabl": 171, "mmc": 171, "sd": [171, 212], "card": [171, 212, 290, 865], "port": [172, 952], "There": [172, 252, 476, 604, 760, 853, 943, 953, 958, 969, 970], "": [172, 187, 212, 418, 442, 476, 596, 688, 694, 697, 757, 801, 806, 825, 837, 853, 882, 898, 950, 998, 1011, 1039, 1043, 1086], "alwai": [172, 252, 272, 732, 968], "wai": [172, 231, 252, 260, 466, 999, 1043, 1062], "process": [172, 174, 193, 288, 309, 835, 836, 869, 870, 874, 875, 990, 991, 992, 995, 999], "signal": [172, 196, 452, 766, 984, 1007, 1008, 1009, 1010], "aren": 172, "t": [172, 229, 744, 1136], "queue": [172, 215, 766, 854, 985, 1004, 1005], "timer": [172, 845, 847, 848, 961, 995], "poll": [172, 766, 768], "event": [172, 798, 817, 827, 845, 846, 850, 978, 984, 1000, 1002], "dispatch": [172, 779, 780, 781], "interrupt": [172, 817, 818, 819, 820, 833, 842, 978, 995], "realtim": [172, 174, 380, 384, 387, 829, 997, 998, 1184, 1193], "save": [173, 754], "disk": [173, 212, 868], "life": [173, 755, 980], "gentoo": [173, 837], "rant": [173, 193, 481, 1013], "swap": [173, 267, 441, 757, 880, 1101], "tmpf": 173, "instanc": [173, 231, 257, 260], "syslog": 173, "var": 173, "mountpoint": 173, "logrot": 173, "o": [173, 231, 241, 247, 254, 255, 260, 267, 269, 270, 302, 306, 309, 311, 340, 346, 349, 350, 353, 361, 398, 821, 878, 879, 880, 903, 916, 958, 959, 960, 961, 962, 963, 972, 973, 993, 1085], "schedul": [173, 309, 379, 380, 384, 870, 874, 980, 993, 994, 996, 997, 998], "ram": 173, "thing": [173, 234, 255, 276, 277, 279], "left": [173, 418, 609], "p": 174, "suck": [174, 817], "count": [174, 753, 844, 880, 1120], "consumpt": 174, "conclus": [174, 842, 934, 942], "pthread": 174, "experi": 174, "100": 174, "default": [174, 205, 252, 254, 276, 277, 279, 336, 365, 550, 598, 600, 601, 613, 614, 615, 616, 683, 731, 752, 770, 896, 1009, 1077, 1158], "eat": 174, "limit": [174, 1038], "than": [174, 557, 1054], "my": [174, 177, 273, 391, 392, 478, 805, 876, 893], "could": [174, 755], "take": [174, 443, 754, 1057], "doe": [174, 622, 880, 893, 896, 964, 967, 968], "differ": [174, 205, 442, 627, 629, 899, 953], "rpm": [175, 177, 202, 810], "prerequisit": [175, 183, 201, 300, 322, 326, 371, 812, 1091], "rpmbuild": 175, "directori": [175, 200, 201, 350, 376, 478, 479, 551, 788, 864, 865, 882, 887, 888, 889, 890, 899, 900, 901, 908, 915, 916, 919, 920, 925, 953, 964, 1012, 1013, 1032, 1169], "download": [175, 221, 223, 369, 374, 388, 554, 1023, 1026, 1183], "For": [175, 177, 183, 261, 264, 288, 291, 293, 294, 297, 299, 342, 387, 399, 524, 598, 609, 694, 722, 743, 768, 872, 958, 1023, 1024, 1025, 1035, 1053, 1123, 1192], "domain": [176, 196, 294, 769], "subdomain": 176, "www": 176, "apex": 176, "microsoft": 177, "team": 177, "screen": [177, 929], "share": [177, 484, 489, 749, 753, 756, 785, 864, 865, 891, 1004, 1005, 1027, 1028, 1203], "x11": 177, "reviv": 177, "meh": 177, "annoy": 177, "re": [177, 1034], "regist": [177, 466], "itself": 177, "autostart": 177, "browser": [177, 236], "recommend": [177, 208, 371, 1170, 1191], "deploi": 178, "gener": [178, 182, 192, 201, 205, 210, 237, 244, 247, 252, 254, 260, 279, 281, 285, 291, 294, 298, 300, 301, 305, 312, 314, 322, 323, 324, 326, 330, 334, 340, 427, 556, 597, 600, 604, 722, 723, 725, 726, 731, 790, 943, 950, 977, 1012, 1013, 1037, 1038, 1039, 1040, 1041, 1066, 1106, 1119, 1191], "public": [178, 231, 491, 598, 864, 865, 889, 890, 950], "repo": [178, 200], "jfasch": [178, 894], "home": [178, 869, 899, 915, 954], "time": [178, 187, 191, 296, 482, 769, 845, 846, 874, 986, 1098], "deploy": [178, 314, 330, 484, 837, 1191], "bigbluebutton": 179, "onlin": [179, 188, 1183], "articl": [179, 180, 182, 183], "tl": 179, "dr": 179, "host": [179, 224, 837, 1025], "check": [179, 492, 516, 882, 943, 984, 1020, 1081, 1102], "els": [179, 247, 254, 260, 270, 300, 322, 326, 340, 350, 400, 424, 425, 426, 603, 618, 920, 937, 950, 1034, 1070, 1073], "traunstein": 180, "zierlersteig": 180, "kaltenbachwildni": 180, "anstieg": 180, "auf": [180, 221], "zierlerberg": 180, "rinn": 180, "abstieg": 180, "grintovec": 181, "plan\u0161arsko": 181, "jezero": 181, "\u010de\u0161ka": 181, "ko\u010da": 181, "anreis": 181, "hinauf": 181, "runter": 181, "zusammenfassung": 181, "brick": 182, "1399": 182, "dell": 182, "xp": 182, "happen": 182, "virtualbox": 182, "secur": [182, 212, 288, 309, 366, 949, 953], "enrol": 182, "machin": [182, 212, 233, 291, 366, 945, 946, 971, 1137, 1143], "owner": [182, 882], "mok": 182, "pair": [182, 694, 948, 950], "stage": 182, "reboot": 182, "diagnost": [182, 941], "crosstool": [183, 1024, 1025], "ng": [183, 1024, 1025], "prebuilt": [183, 1160], "repositori": [183, 187, 383, 551, 561], "releas": [183, 481, 819, 829, 1045], "glibc": 183, "gcc": [183, 453, 466, 1011], "simplest": [183, 722, 727, 765, 1031, 1054, 1170, 1176], "stdio": 183, "h": [183, 725, 929], "iostream": 183, "distribut": [183, 1091], "afterword": [183, 702], "post": [184, 193, 1004], "schulung": [185, 205], "entwicklung": 185, "beratung": 185, "richtlinien": 186, "ver\u00f6ffentlichung": 186, "kursmateri": 186, "window": [187, 224, 241, 297, 299, 389, 876], "workflow": [187, 234], "conflict": [187, 983, 1045], "individu": 188, "languag": [188, 204, 234, 250, 276, 277, 279, 284, 304, 305, 310, 336, 337, 387, 455, 474, 734, 990, 1036, 1058, 1060], "qualivis": [189, 387], "z\u00fcrich": [189, 387], "2013": [189, 387, 1184], "fragen": [189, 222], "antworten": 189, "kursnotizen": 190, "2015": [190, 387], "userspac": [190, 796, 798, 850, 851, 852, 941, 942, 978], "can": [190, 211, 234, 269, 443, 495, 499, 550, 609, 694, 754, 935, 936, 937, 939], "bu": [190, 211, 501, 936, 939, 943], "driver": [190, 219, 290, 387, 814, 815, 833, 941, 1194], "beispiel": [190, 205, 264, 925], "heizungssteuerung": 190, "k\u00f6nnen": [191, 215, 228], "viel": 191, "mutabl": [191, 194, 205, 215, 222, 228, 241, 244, 252, 254, 257, 260, 267, 270, 273, 285, 292, 302, 306, 312, 324, 328, 334, 346, 350, 1075, 1077], "immut": [191, 194, 205, 222, 228, 241, 252, 257, 260, 267, 273, 282, 289, 292, 306, 334, 340, 607, 1075], "kann": [191, 236], "man": [191, 236, 897], "nicht": [191, 205, 215], "oft": 191, "genug": 191, "wiederholen": 191, "hart": 191, "indizieren": 191, "weich": 191, "nettfragen": 191, "shortcut": [191, 1053, 1083], "objektorientiert": 191, "date": [191, 237, 296, 374], "delta": 191, "datetim": [191, 210, 231, 237, 292], "bissl": 191, "potschert": [191, 215], "schreiben": [191, 215], "scho": 191, "formen": 191, "represent": [191, 1056], "__str__": [191, 1051, 1056], "subprocess": [191, 270], "enumer": [191, 215, 220, 222, 228, 231, 252, 260, 267, 285, 302, 324, 334, 346], "zip": [191, 231, 334], "comprehens": [191, 215, 237, 244, 247, 252, 254, 260, 264, 285, 291, 292, 294, 324, 334, 340, 346, 1031, 1037, 1082], "exec": [191, 257, 273, 281, 285, 312, 334, 1035], "eval": [191, 192, 228, 257, 267, 285, 312, 324], "umgebend": 191, "context": [191, 252, 291, 294, 298, 835, 836, 856, 1032, 1035], "eigen": 191, "json": [191, 213, 220, 236, 237, 247, 264, 267, 273, 281, 282, 317, 320, 1132], "individualtrain": [192, 207, 387], "tage": [192, 387], "beginnend": [192, 387], "51": 192, "58": 192, "94": [192, 205], "121": 192, "famou": [192, 469], "overload": [192, 250, 260, 281, 316, 328, 572, 598, 605, 612, 752, 1054, 1056], "getter": [192, 550, 606], "setter": 192, "listcomprehens": 192, "express": [192, 205, 220, 237, 244, 270, 273, 285, 334, 340, 420, 422, 498, 516, 530, 701, 926, 1037, 1096, 1155], "global": [192, 205, 215, 273, 323, 406, 412, 433, 435, 449, 486, 579, 580, 581, 610, 611, 612, 955, 1030, 1076], "scope": [192, 215, 323, 765, 768, 1030, 1076], "variabl": [192, 215, 228, 231, 241, 244, 252, 260, 267, 270, 282, 302, 306, 328, 334, 340, 346, 350, 364, 392, 406, 409, 412, 433, 435, 441, 460, 516, 580, 607, 611, 737, 766, 869, 955, 984, 985, 992, 1065, 1076, 1101], "closur": [192, 215, 281, 298, 300, 301, 316, 322, 326, 736, 1030, 1032], "between": [192, 615, 1141], "walkthrough": 193, "reduc": [193, 417], "eight": 193, "color": 193, "pil": 193, "numpi": [193, 195, 222, 229, 269, 272, 291, 294, 305, 311, 323, 328, 344, 349, 350, 387, 1136, 1141], "cluster": 193, "excurs": [193, 269, 736], "matplotlib": [193, 222, 241, 273, 311, 328, 334, 1090, 1141], "now": [193, 205], "come": [193, 229, 484, 678, 1011, 1136], "let": 193, "kmean": 193, "result": [193, 470, 1148], "properti": [193, 231, 260, 490, 491, 1055], "center": 193, "restor": 193, "alpha": 193, "back": [193, 647, 1132], "rgba": 193, "random": [194, 231, 264, 269, 527, 540, 548, 1156], "type": [194, 220, 244, 247, 257, 260, 267, 276, 277, 279, 281, 282, 296, 298, 316, 319, 320, 324, 336, 346, 365, 408, 410, 411, 415, 422, 447, 457, 462, 481, 491, 600, 629, 650, 651, 694, 695, 698, 709, 711, 748, 770, 775, 777, 778, 808, 817, 912, 919, 982, 1032, 1034, 1047, 1054, 1077, 1143], "except": [194, 231, 247, 250, 257, 260, 272, 273, 281, 291, 294, 298, 299, 316, 319, 332, 338, 344, 348, 380, 572, 619, 620, 688, 737, 744, 768, 1034], "demonstr": 194, "dict": [194, 244, 252, 254, 260, 267, 340, 346, 1053], "access": [194, 233, 400, 453, 454, 598, 606, 614, 680, 770, 774, 776, 778, 779, 780, 781, 788, 821, 850, 851, 852, 1048, 1055, 1082, 1083], "indic": [194, 222], "slice": [194, 205, 220, 231, 254, 260, 264, 285, 306, 312, 874, 1072, 1157, 1159], "protocol": [194, 205, 220, 241, 244, 247, 252, 254, 257, 260, 270, 285, 298, 302, 306, 324, 328, 334, 340, 722, 934, 998, 1039, 1041], "standardthemen": 195, "hauptthema": 195, "numerik": 195, "lesen": [195, 215], "mat": 195, "l\u00f6sen": 195, "uni": 195, "\u00fcbung": [195, 198, 215], "propos": 196, "posix": [196, 766, 979, 988, 1001, 1003, 1004, 1005, 1006], "ipc": [196, 197, 387, 1001, 1003, 1004, 1005, 1006, 1203], "socket": [196, 937, 960], "applic": [196, 995], "compani": 196, "thought": 196, "handgestrickt": 198, "um": 198, "fallen": 198, "lustvol": 198, "erleiden": 198, "programmier": 199, "baden": [199, 387], "w\u00fcrttemberg": [199, 387], "kursinform": 199, "kursaufbau": 199, "kursverlauf": [199, 207], "hand": 200, "privat": [200, 231, 260, 491, 598, 670, 732, 864, 865, 887, 888], "makefil": [201, 551, 805, 815, 1012, 1013, 1027], "argh": 202, "visual": [202, 229, 245, 470, 485, 1136, 1162, 1171], "studio": [202, 229, 245, 1136, 1162, 1171], "flatpak": 202, "issu": [202, 1030], "m": 202, "firma": [204, 387], "environ": [204, 269, 277, 279, 288, 290, 297, 298, 299, 376, 869, 992, 1059, 1123, 1171, 1172, 1173, 1181], "driven": [204, 233, 258, 269, 272, 300, 301, 322, 323, 326, 387, 1000, 1207], "dai": [204, 208, 209, 211, 212, 213, 223, 224, 233, 234, 239, 242, 244, 245, 248, 255, 288, 291, 294, 297, 298, 299, 300, 301, 305, 309, 311, 316, 322, 323, 326, 327, 333, 337, 349, 353, 743, 1098, 1189], "advanc": [204, 208, 211, 220, 223, 232, 248, 258, 261, 272, 281, 284, 294, 300, 301, 302, 303, 304, 305, 310, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 336, 337, 344, 345, 346, 347, 387, 455, 1135, 1136, 1197], "18": [205, 207, 233, 252, 272, 284, 285, 299, 315, 338, 339, 340, 341, 369, 387, 1025], "19": [205, 207, 211, 245, 261, 368, 369, 383, 385, 387], "sy": [205, 231, 868, 1064], "multilin": [205, 237, 241, 334, 364, 1079], "docstr": [205, 252, 264, 267, 270, 292, 324, 346, 364], "datentypen": [205, 215, 222, 235, 251, 263], "ausflug": [205, 254], "variablen": [205, 215, 222, 235, 251, 254, 263, 273], "deren": 205, "unterbau": 205, "zuweisung": 205, "mit": [205, 215, 220, 233, 387, 925, 1184, 1200], "hilf": 205, "tupl": [205, 210, 215, 220, 222, 228, 231, 241, 244, 247, 252, 254, 260, 264, 267, 270, 276, 277, 279, 282, 285, 292, 302, 306, 328, 334, 336, 340, 346, 363, 364, 694, 743, 748, 1067, 1075, 1144], "unpack": [205, 210, 215, 220, 222, 231, 247, 252, 264, 270, 276, 277, 279, 282, 292, 328, 334, 336, 346, 363, 364, 694, 743, 748, 1023, 1144], "unendlich": 205, "breit": 205, "divis": [205, 215], "floor": [205, 215], "konvertierung": 205, "konstruktoren": [205, 222], "welchen": 205, "typ": [205, 215], "typen": 205, "besser": 205, "laufzeitverhalten": [205, 215], "geeigneter": 205, "datenstrukturen": [205, 215, 216, 236, 254, 1199], "boolean": [205, 215, 241, 244, 252, 254, 260, 264, 267, 334, 340, 414, 498, 1068, 1096, 1155], "short": [205, 244, 260, 414, 508, 817], "circuit": [205, 244, 260, 414], "evalu": [205, 244, 260], "warum": [205, 215], "sind": [205, 215], "mehr": [205, 220], "rang": [205, 210, 215, 222, 231, 237, 241, 244, 252, 254, 257, 264, 267, 270, 276, 277, 279, 282, 292, 306, 312, 323, 336, 340, 346, 350, 628, 629, 694, 722, 742, 743, 744, 745, 746, 747, 1037, 1074, 1090], "foli": 205, "161": 205, "shallow": [205, 254, 1075], "deep": [205, 254, 1075], "dem": [205, 1200], "deepcopi": 205, "funktionen": [205, 215, 216, 220, 1199], "gotcha": [205, 815, 845, 999], "90": 205, "ff": 205, "lokal": [205, 215, 273], "92": 205, "uniq": [205, 1118, 1119], "punkt": [205, 215], "zusammengefasst": 205, "hier": 205, "sch\u00f6nere": 205, "al": [205, 215, 264], "comprens": 205, "125": 205, "lesbarkeit": 205, "perform": [205, 228, 468, 744], "review": [205, 234], "pprint": 205, "praktisch": 205, "debug": [205, 481, 835, 1033], "datentransform": 205, "127ff": 205, "complet": [205, 572, 897], "collect": [205, 254, 257, 282, 1011, 1053, 1154, 1167], "namedtupl": [205, 1053], "parameter\u00fcbergab": [205, 215], "variabel": 205, "lang": 205, "argumentlisten": 205, "erst": 205, "klass": 205, "weiterf\u00fchrend": [207, 229], "workspac": [208, 209, 211, 213], "core": [208, 245, 288, 1012], "special": [208, 327, 921], "tutori": [208, 211, 223, 229, 239, 269, 272, 305, 1136], "parti": [208, 239], "v": [210, 215, 222, 228, 231, 252, 257, 260, 264, 267, 273, 289, 292, 302, 306, 317, 363, 364, 402, 411, 423, 426, 430, 432, 481, 484, 591, 592, 593, 607, 753, 761, 777, 815, 835, 836, 842, 843, 957, 993, 1063, 1066, 1074, 1085, 1164], "return": [210, 273, 340, 446, 704, 705, 707, 722], "orient": [210, 260, 273, 281, 284, 285, 298, 300, 301, 304, 305, 310, 316, 319, 322, 323, 326, 327, 332, 338, 344, 345, 348, 349, 357, 476, 596, 667, 1050], "addit": [211, 596, 612, 674, 1051], "brought": 211, "thoma": 211, "cloud": [212, 337, 366], "particip": 212, "desk": 212, "interlud": [212, 817], "bloodi": 212, "wild": [212, 261, 316, 319, 322], "watchdog": 212, "25": [213, 223, 232, 239, 250, 255, 266, 308, 309, 316, 317, 318, 321, 387], "grundlegend": [215, 216, 1199], "sprachelement": [215, 216, 1199], "syntax": [215, 222, 228, 260, 270, 292, 306, 334, 346, 364, 737, 746, 1063], "semantik": 215, "einr\u00fcckung": 215, "ihren": 215, "\u00e4ndern": 215, "kommentar": 215, "sprach": 215, "standarddatentypen": 215, "elementar": [215, 216, 1199], "beliebig": 215, "gro\u00df": 215, "vergleichsoperatoren": 215, "pr\u00e4zedenz": 215, "vor": 215, "strichrechnung": 215, "modulo": 215, "un\u00e4rer": 215, "negat": [215, 1155], "erzwingen": 215, "auch": 215, "zeichenketten": 215, "raw": [215, 222, 237, 241, 254, 260, 282, 312, 1048, 1079, 1131], "f": [215, 237, 252, 270, 312, 334, 1080], "konvertierungen": 215, "pr\u00e4zendenzregeln": 215, "literal": 215, "primit": [215, 760, 1037], "konstanten": 215, "operatoren": 215, "ausdr\u00fcck": 215, "operatorrangfolgen": 215, "\u00fcbungen": [215, 1183], "zwei": 215, "vertauschen": 215, "kontrollstrukturen": [215, 216, 235, 251, 252, 263, 1199], "anweisungen": 215, "folgen": 215, "bedingungen": 215, "verzweigungen": 215, "bedingt": 215, "anweisung": 215, "verzweigung": [215, 216, 1199], "geschachtelt": 215, "mehrfach": 215, "fallauswahl": 215, "schleifen": [215, 216, 1199], "z\u00e4hlergesteuert": 215, "kopfgesteuert": 215, "schleif": [215, 220], "fu\u00dfgesteuert": 215, "jf": 215, "continu": [215, 250, 252, 291, 299, 301, 323, 333, 429, 1070, 1073], "sequenti": [215, 220, 252, 264, 334, 350, 636, 637, 644, 645, 1037, 1071], "schnell\u00fcbersicht": 215, "sprunganweisungen": 215, "endlosschleifen": 215, "ben\u00f6tigt": 215, "Suche": 215, "eindimensional": 215, "tupel": 215, "listen": [215, 220, 254, 364], "sort": [215, 267, 555, 634, 639, 640, 643, 1158], "revers": [215, 641, 642, 659, 660, 661, 1054], "stapel": 215, "schlangen": 215, "versuch": 215, "zur\u00fcck": 215, "hybrid": 215, "supergscheit": 215, "methoden": [215, 216, 1199], "prozeduren": [215, 216, 1199], "funktionspoint": 215, "so": [215, 228, 231, 241, 273, 297, 476, 596, 694, 707, 709, 736, 1157], "heisst": [215, 220], "funktionsobjekt": 215, "primzahlenbeispiel": 215, "funktion": 215, "laufzeitfehl": 215, "existiert": 215, "zuweisen": 215, "fehlerfal": 215, "peter": 215, "unterprogramm": 215, "wert": 215, "referenzen": 215, "r\u00fcckgabewert": 215, "oder": [215, 370, 1184], "inner": [215, 1030], "standardbibliotheken": 215, "built": [215, 298, 600, 698, 815, 1034], "funktionalit\u00e4ten": 215, "struktur": 216, "herdt": [216, 1199], "kapitel": [216, 1199], "ganz": [220, 252], "kurz": 220, "mehreren": 220, "returnwerten": 220, "bzw": [220, 370], "containerdatentypen": 220, "untypisiert": 220, "l\u00f6schen": 220, "begriff": 220, "zufal": 220, "regular": [220, 233, 234, 270, 273, 285, 334, 340, 926], "hallo": 222, "speicher": 222, "sch\u00fctze": 222, "ich": 222, "davor": 222, "aber": 222, "gemischten": 222, "wiederholung": [222, 257], "objektidentit\u00e4t": 222, "statement": [222, 231, 423, 437, 1030, 1032, 1045, 1063, 1069, 1148, 1151], "operationen": 222, "verloren": 222, "interpol": 222, "mittel": [222, 228], "scipi": 222, "shell": [224, 288, 309, 353, 366, 387, 869, 880, 882, 898, 910, 911, 917, 949, 966, 975, 990, 1185], "script": [224, 309, 387, 944, 975, 1042, 1061, 1185], "29": [224, 298, 332, 333, 334, 348, 349, 350, 351, 369, 377, 387], "assign": [228, 254, 260, 267, 328, 346, 350, 364, 419, 516, 597, 603, 604, 704, 705, 707, 752, 1030, 1065, 1072, 1076, 1153], "fun": [228, 267, 281, 1065], "arithmet": [228, 233, 252, 264, 364, 392, 413, 442, 516, 530, 589, 612, 625, 626, 630, 633, 1054, 1066], "complex": [228, 267, 364, 1181], "nur": 228, "sum": [228, 678], "weiter": 228, "dynamisch": 228, "evaluierung": 228, "scienc": [229, 255, 269, 272, 305, 322, 323, 324, 326, 346, 348, 1136], "don": [229, 744, 1136], "batteri": [229, 364, 1081, 1136], "confer": [229, 305, 1136], "zipfil": 231, "member": [231, 260, 598, 603, 604, 606, 611, 680, 681, 698, 770], "attribut": [231, 257, 273, 336, 874, 977, 1048, 1055, 1161], "protect": [231, 670, 744, 827], "posit": [231, 596, 1028, 1057, 1087], "keyword": [231, 252, 276, 277, 279, 336, 365, 459, 460, 1030, 1057, 1077], "argument": [231, 252, 260, 281, 316, 365, 443, 964, 990, 1033, 1057, 1064, 1077, 1087], "mix": [231, 244, 312, 737, 1112, 1113], "yield": [231, 247, 252, 270, 298, 312, 1037, 1040], "filter": [231, 260, 289, 290, 296, 324, 334, 556, 557, 558, 744, 1155], "nonetyp": [231, 244], "none": [231, 252], "recurs": [231, 445, 604, 701, 788, 899], "fibonacci": [231, 722, 724, 1038, 1106], "sever": 231, "same": [231, 580, 605, 611, 736, 1076, 1170], "oserror": 231, "errno": [231, 955], "platform": [231, 941], "assert": [231, 273, 324], "assertionerror": 231, "27": [232, 250, 266, 316, 317, 318, 321, 330, 331, 387], "predefin": [232, 437, 1181], "stream": [232, 808, 879, 1085], "pcap": [232, 245, 247], "programmieren": [233, 387], "tool": [233, 306, 309, 324, 353, 371, 862, 927, 930, 941, 1196], "massacr": 233, "kick": 233, "encapsul": [233, 462, 602, 768], "flow": [233, 263, 269, 284, 291, 294, 304, 305, 310, 311, 332, 333, 338, 339, 344, 345, 348, 349, 431], "pointer": [233, 234, 250, 276, 277, 279, 297, 299, 337, 439, 440, 442, 444, 460, 572, 589, 604, 608, 609, 625, 626, 627, 629, 630, 633, 653, 694, 709, 749, 750, 751, 752, 754], "standard": [233, 245, 250, 254, 269, 297, 299, 305, 410, 457, 481, 559, 619, 629, 662, 673, 675, 702, 879, 963, 1085, 1136, 1178], "stl": [233, 572, 588, 589, 590, 621, 629, 630, 658], "kid": 234, "recapitul": 234, "some": [234, 252, 257, 296, 299, 309, 737, 768], "jump": [234, 442], "complic": [234, 521, 1027], "toolbox": 234, "databas": [234, 326, 679, 815, 1092, 1094, 1129, 1145, 1146, 1148], "gtest": [234, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182], "smart": [234, 250, 276, 277, 279, 299, 337, 572, 749, 750, 751, 752], "datenbank": 236, "showcas": 236, "kommt": 236, "db": 236, "aufgab": 236, "formulieren": 236, "damit": 236, "dies": 236, "http": [236, 324], "verbindung": 236, "schicken": 236, "jetzt": 236, "schickman": 236, "weg": 236, "vom": [236, 387], "server": [236, 1152], "php": 236, "j": 236, "empfangen": 236, "nun": 236, "muessen": 236, "verwandlen": 236, "liter": [237, 364, 516, 768, 769], "quot": [237, 241, 267, 1144], "friend": [237, 764], "sinc": [237, 270, 276, 277, 279, 611, 1080], "pars": [237, 1064, 1087, 1114], "sap": [238, 291, 293, 294, 295, 296, 343, 387], "export": 238, "solut": [238, 434, 456, 479, 488, 494, 495, 496, 499, 500, 505, 514, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 604, 631, 661, 698, 700, 707, 731, 732, 741, 775, 874, 893, 952, 954, 958, 1027, 1029, 1045, 1172], "terminologi": [241, 309, 353, 871, 1009, 1143], "31": [242, 250, 258, 348, 349, 350, 351, 387], "numer": [242, 344], "ai": 242, "mountain": 242, "io": [244, 260, 288, 292, 328, 334, 349, 465, 821, 822, 877, 977], "common": [244, 466, 478, 644, 1038, 1047], "wtf": [244, 961, 1009], "creativ": [247, 863, 1051], "shift": [247, 418, 612], "hmmm": 248, "undefin": [250, 1076], "behavior": [250, 746], "again": [250, 298, 309, 353, 606, 693, 917, 1054, 1185], "repeat": [250, 909], "quickli": 250, "algorithm": [250, 267, 291, 299, 336, 337, 442, 555, 572, 589, 624, 625, 629, 630, 639, 643, 1141, 1143], "functor": [250, 572, 637, 736, 738, 739, 757], "unifi": 250, "uml": [250, 508], "todai": [250, 1030], "associ": [250, 421, 508, 648, 649], "dynam": [250, 281, 300, 301, 302, 322, 326, 449, 576, 577, 578, 630, 663, 664, 777, 793, 823, 824, 1028, 1048, 1057], "alloc": [250, 336, 466, 586, 631, 656, 657, 664, 773, 775, 808, 831, 973, 1037], "week": 250, "zahl": 252, "miscellanea": 252, "brace": [252, 276, 277, 279, 336, 337, 696, 697, 698, 699, 1155], "singl": [252, 479, 504, 953, 1011, 1176], "hour_of_dai": 252, "membership": [252, 1071], "best": 252, "intro": [254, 288, 369, 588, 589, 590, 977, 1031], "doc": [254, 324], "ident": [254, 317], "datenypen": 254, "libarari": 254, "chainmap": 254, "dequ": 254, "suchalgorithmen": 254, "pitfal": [254, 297, 300, 365, 600, 669, 694, 722, 739], "fromkei": [254, 267], "join": [254, 260, 334, 349, 350, 1081, 1109], "lstrip": [254, 361], "rstrip": [254, 361], "sequentiel": 257, "konstant": 257, "suchzeit": 257, "metaprogram": 257, "everywher": [257, 273, 604, 1035], "defaultdict": [257, 282], "hello": [260, 270, 391, 726, 815, 816, 1061], "world": [260, 391, 398, 815, 816, 1061], "blahblah": [260, 264, 267, 270, 334, 629, 1060], "commandlin": [260, 288, 326, 355, 360, 443, 471, 478, 897, 952, 975, 1009, 1064, 1087], "lifetim": [260, 406, 435, 739, 753, 761, 1145], "preview": [260, 489], "explicit": [260, 400, 596, 608, 699, 737, 739, 752, 765, 1045], "max": 260, "iteratoren": 260, "generatoren": 260, "ordereddict": 260, "duck": [260, 276, 277, 279, 316, 319, 336, 709, 778, 1047], "resolut": 260, "order": [260, 580, 1034, 1054], "mro": 260, "super": 260, "__bases__": 260, "__mro__": 260, "self": [260, 604, 1049], "call": [260, 436, 440, 466, 470, 472, 572, 840, 957, 963, 992, 998, 1057], "mangl": [260, 605], "udemi": 260, "claus": [260, 300, 322, 326, 1034], "lambda": [260, 276, 277, 279, 306, 336, 337, 694, 735, 736, 737, 738, 757], "oppos": 260, "discuss": [263, 300, 301, 375, 400, 402, 766, 840, 845, 853], "chart": 263, "interact": [264, 312, 1061, 1113], "1st": 264, "explan": [264, 324], "preced": [264, 267, 421, 1066], "float": [264, 267, 324, 1066], "einschub": 264, "vergleich": 264, "filterketten": 264, "zen": 264, "datensatz": 264, "notat": 264, "letzt": 264, "letzten": 264, "infinit": [267, 1038], "long": [267, 694], "comparison": [267, 596, 643, 788, 862, 1054, 1066], "digit": [267, 369, 1103], "english": [267, 371, 1103], "determin": [267, 883, 1100, 1110, 1111], "maximum": [267, 1100, 1110, 1111], "out": [267, 300, 301, 501, 599, 628, 629, 999, 1013, 1030, 1072], "duplic": [267, 479, 621, 966], "encod": [267, 269, 270, 281, 291, 311, 312, 328, 369, 1149], "nest": [270, 432, 445], "itertool": 270, "chain": [270, 840], "destructor": [270, 580, 586, 601, 666, 671, 751], "prient": 272, "next": [272, 465, 730, 1176], "standesregist": 272, "sqlite3": [272, 482, 1092, 1148], "xml": [272, 1161], "tree": [272, 810, 837, 875, 901, 908, 946, 953, 992], "projektabschlusstag": 272, "anyth": 273, "defin": [273, 488, 600, 737, 1034], "own": [273, 478, 706, 716, 874], "lookup": [273, 564, 565], "vorbesprechung": 275, "legend": 275, "neuerungen": 275, "seit": 275, "2011": [275, 276, 277, 279, 387], "ausblick": 275, "thank": [276, 277, 279], "you": [276, 277, 279, 709], "readablil": [276, 277, 279], "writabl": [276, 277, 279, 964], "err": [276, 277, 279, 336, 653, 709, 743, 748], "bind": [276, 277, 279, 336, 743, 748, 756, 757, 1148], "auto": [276, 277, 279, 336, 694, 709, 742, 743, 984, 1170], "without": [276, 277, 279, 336, 610, 631, 705, 709, 973], "simpli": [276, 277, 279, 337, 954], "deserv": [276, 277, 279], "ag": [276, 277, 279, 684], "overrid": [276, 277, 279, 336, 741], "delet": [276, 277, 279, 336, 577, 646, 732, 897], "strongli": [276, 277, 279, 336, 695], "enum": [276, 277, 279, 336, 458, 695, 805], "deleg": [276, 277, 279, 336, 700], "nullptr": [276, 277, 279, 336, 708], "rvalu": [276, 277, 279, 336, 703, 706, 707], "skeleton": [277, 279, 297, 299, 614, 864, 865], "perfect": [279, 416, 458, 756], "view": [279, 697, 744, 746, 747, 801, 863], "architectur": [280, 387, 476, 694, 733, 837], "pattern": [280, 298, 300, 301, 387, 500, 514, 1038, 1192], "mondai": 280, "tuesdai": 280, "wednesdai": 280, "forc": [281, 415], "front": [281, 300, 322, 1048], "seri": [281, 284, 304, 305, 310, 311, 332, 333, 339, 344, 345, 348, 349, 572, 1122, 1129, 1154], "piec": 281, "go": [281, 966, 1144], "kickoff": [281, 300, 301, 316, 319, 323, 326], "livehack": [281, 290, 478, 501, 703, 800, 1076, 1164, 1171], "Such": [282, 674], "noob": 284, "wsl": [288, 297, 299, 876, 1025], "quick": 288, "permiss": [288, 309, 353, 882, 884, 885, 886, 892, 896, 915, 946], "uart": [288, 868], "susi": 288, "untold": [288, 291, 297, 298, 301, 337], "whet": [289, 290], "appetit": [289, 290], "panda": [289, 291, 292, 294, 296, 298, 311, 323, 328, 334, 344, 348, 349, 1141, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160], "regex": 289, "pipelin": 290, "categori": 290, "payment": 290, "select": [290, 296, 298, 934, 941, 1001, 1154, 1155, 1157, 1159, 1176], "uncategor": 290, "dataset": [291, 295, 296, 1140, 1142], "origin": [291, 294, 621, 738, 739, 847, 1144], "automat": [291, 294, 314, 330, 412, 435, 731, 779, 1191], "cleanup": [291, 294, 845, 856], "conversiosn": 292, "outlook": [294, 336], "specif": [294, 986, 1124], "usecas": 296, "drop": [296, 496, 744], "nan": 296, "datafram": [296, 1141, 1154, 1158], "isna": 296, "to_datetim": 296, "dated": 296, "workabl": 296, "usag": [296, 301, 336, 445, 449, 472, 488, 492, 537, 552, 598, 635, 636, 642, 669, 697, 701, 709, 753, 754, 755, 796, 840, 880, 919, 936, 943, 967, 1011, 1090], "modifi": [296, 453, 460, 537, 983, 1045, 1075, 1160], "increas": 296, "price": 296, "particular": 296, "store": [296, 453, 501, 983, 1045], "readabl": [296, 456, 768, 969], "combin": [296, 419, 515, 516, 529], "prefer": [297, 299], "ubuntu": [297, 299, 1025], "under": [297, 299, 899, 959, 1032], "unsupport": 297, "heavi": [297, 299, 873], "weight": [297, 299], "resourc": [297, 371, 604, 664, 752, 765, 833], "r": [297, 916, 953], "littl": [297, 427, 478, 1060], "concurr": 297, "far": [297, 761, 1143], "fact": [298, 819, 881, 1048, 1051], "fixtur": [298, 553, 788, 1169, 1170, 1180, 1181, 1182], "omin": [298, 1033], "warm": 299, "resolv": 299, "cont": 299, "d": [299, 501], "insid": [300, 301, 606, 611, 706, 707], "construct": [300, 322, 326, 1053, 1070], "emphasi": [300, 322, 326], "recoveri": [300, 301, 322, 323, 326], "broader": 300, "sens": 300, "morn": [301, 305, 309, 311, 323, 333, 337, 349, 353], "pytest": [301, 349, 1168, 1169], "awaken": [305, 333, 349], "bash": [309, 353, 387, 917, 1185], "bourn": [309, 353, 917, 1185], "inspect": [309, 353, 924, 927], "wakeup": [309, 311, 337, 353, 997, 999], "redirect": [309, 353, 877, 878, 879, 880, 903, 916, 966], "pipe": [309, 353, 746, 863, 877, 878, 880, 881, 928, 930], "archiv": [309, 859, 860, 862, 863, 1025, 1026, 1029], "compress": [309, 859, 860, 862, 863], "network": [309, 518, 831, 832, 935, 960, 1206], "least": [309, 1176], "day2": 311, "interpret": [312, 470, 502, 515, 516, 529, 530, 1113], "len": 312, "abl": 312, "callabl": [312, 757], "sandbox": [316, 319], "equal": [317, 550, 596, 612, 613, 614, 615, 616, 636, 1054], "spoiler": 319, "annot": 320, "multiprocess": 322, "idea": 322, "veri": [323, 741, 773, 1161], "leftov": 323, "yesterdai": 323, "ifi": 323, "toolcas": [323, 336, 712, 713, 714], "arg": [323, 1033], "kwarg": [323, 1033], "includ": [323, 436, 490, 1081], "receiv": [323, 1005], "udp": 323, "datagram": [323, 935], "compositesink": 323, "timestamp": [323, 845], "org": [324, 369], "aaarghhh": 324, "expresss": 324, "constexpr": [336, 701], "constinit": 336, "constev": 336, "want": [336, 669, 694, 705, 709, 732, 805, 810, 968, 1051], "erasur": [336, 775, 777], "classic": [337, 758, 774], "semant": [337, 703, 704, 705, 706, 707, 1005], "kochtopf": 337, "roundup": 337, "still": [337, 499, 694, 1032, 1037], "weird": 340, "exchang": [340, 935], "schuetzen": 340, "pathlib": [340, 350], "regexen": 340, "distil": 340, "py": 340, "infin": [346, 1038], "listdir": [349, 350], "option": [349, 424, 471, 486, 487, 488, 863, 897, 899, 919, 926, 941, 953, 1144], "scikit": [349, 350], "struct": [350, 445, 446, 461, 596, 685, 748], "cell": 350, "wuerfeln": 350, "prime": [350, 1107, 1115, 1121], "misc": 350, "crap": 350, "datatyo": 350, "einlesen": 350, "sep": 350, "checker": 354, "blinklicht": [355, 356, 357, 358], "electron": [355, 934], "aspect": 355, "circuitri": 355, "header": [355, 434, 480, 486, 611, 941, 1125], "pinout": [355, 941], "unittest": [358, 1170, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1207], "ece19": 359, "g2": [361, 865], "big": [361, 387, 825], "swoop": 361, "size": [361, 410, 569, 719, 913], "chunk": 361, "line": [361, 405, 437, 599, 880, 897, 1063, 1105, 1116, 1120], "str": [361, 1056], "byte": 363, "btw": 364, "wertebereich": 364, "sidenot": [365, 1077], "pure": [365, 669, 671, 1077], "beauti": [365, 472, 868, 943, 1077], "login": [366, 872, 944], "formalit\u00e4ten": 367, "ec": [368, 383, 385, 864, 865], "daili": 369, "fail": [369, 968, 1169, 1176, 1178], "reiter": 369, "argpars": [369, 1064, 1087], "deutsch": [370, 387], "lehrinhalt": 370, "lernergebniss": 370, "lv": 370, "verpflichtend": 370, "lernressourcen": 370, "instrument": 370, "art": 370, "vermittlung": 370, "begleitbedingungen": 370, "pr\u00fcfungsmethod": 370, "beurteilungskriterien": 370, "mode": [371, 481, 882, 934, 967, 1061, 1085], "deliveri": [371, 1008, 1009], "co": 371, "requisit": 371, "assess": 371, "criteria": [371, 993], "whose": 373, "fault": 373, "newcom": 374, "jjjj": 377, "sidewai": [378, 611, 757, 768, 1033, 1038], "bisher": 387, "gehalten": 387, "entwickl": 387, "fortgeschritten": [387, 1187], "wiener": 387, "neustadt": 387, "einf\u00fchrung": [387, 1186, 1188, 1195], "ober\u00f6sterreich": 387, "pictur": [387, 825], "obersteiermark": 387, "korn": 387, "salzburg": 387, "ausgew\u00e4hlt": 387, "themen": 387, "2018": 387, "raum": 387, "n\u00fcrnberg": 387, "oberb\u00fcren": 387, "schweiz": 387, "2017": 387, "m\u00fcnchen": [387, 1184], "lowlevel": 387, "refresh": 387, "programmiererstandpunkt": 387, "2016": 387, "wien": 387, "workshop": 387, "bodenseo": 387, "hemmenhofen": 387, "bodense": 387, "systemnah": 387, "2014": 387, "mathia": 387, "kettner": 387, "siemen": 387, "braunschweig": 387, "intermedi": [387, 527, 1030, 1047], "scratch": [387, 1184], "lpd": 387, "hannov": 387, "unter": 387, "k\u00f6ln": 387, "projektverwaltung": 387, "subvers": [387, 1201], "lka": 387, "niedersachsen": 387, "konfigur": 387, "gnu": [387, 470, 1011, 1196], "make": [387, 484, 551, 693, 732, 821, 864, 865, 1012, 1013, 1196], "2012": 387, "hamburg": 387, "fehlerdiagnos": 387, "polizei": 387, "stia": 387, "admont": 387, "bi": 387, "2010": 387, "softwareentwicklung": 387, "darmstadt": 387, "ulm": 387, "bundeswehr": 387, "wildflecken": 387, "cool": [390, 1080], "gui": 390, "Their": [390, 410], "hobbi": 390, "histori": [390, 595, 693, 801, 1005, 1030, 1060, 1140], "second": [392, 394], "fahrenheit": [393, 395, 397, 524], "tabl": [393, 395, 397, 550, 1054], "simplif": 394, "revisit": [394, 462, 705], "constant": [396, 411, 436, 466, 527], "preprocessor": [396, 436, 437], "macro": [397, 436, 437, 486, 796, 817], "outsid": 398, "cat": [398, 922], "poor": [398, 399], "wc": 399, "definit": [400, 402, 404, 412, 430, 432, 433, 436, 488, 611, 694, 774, 776, 778, 780, 796, 997, 1074], "memset": 400, "histogram": 401, "nonsens": 402, "signatur": 402, "declar": [402, 403, 432, 433, 434, 611], "mistak": 404, "stdin": [405, 930, 944], "variant": [410, 499, 505, 694, 770, 779, 780, 781, 1005], "qualifi": 410, "width": [410, 442, 616, 629, 942, 1072], "escap": [411, 1079], "logic": 414, "implicit": [415, 754], "sign": 415, "truncat": [415, 973], "propag": 415, "unsign": 415, "compil": [415, 432, 437, 453, 454, 479, 480, 481, 597, 600, 604, 733, 754, 817, 837, 1011, 1014, 1023, 1027], "warn": [415, 421, 437, 987, 1009], "cast": 415, "increment": [416, 629, 722, 1045], "decrement": [416, 629], "confus": [416, 1066, 1155], "manipul": [418, 754, 973, 1009], "bitwis": [418, 1155], "AND": 418, "OR": 418, "xor": 418, "right": [418, 1117], "invert": [418, 1154], "complement": 418, "summari": [421, 596, 757, 837, 863, 1028, 1048, 1157, 1159], "true": [424, 499, 609, 1158], "fals": 424, "truth": 424, "matter": 425, "distinct": 426, "purpos": [427, 977], "closer": 427, "comma": 427, "infam": 427, "idiom": 427, "bodi": 428, "goto": 430, "label": [430, 1159], "monolith": [432, 479, 501, 554], "separ": [432, 433, 479, 501, 766, 921, 1027], "static": [435, 459, 550, 610, 611, 777, 1027, 1028, 1029, 1052], "visibl": [435, 459], "replac": [436, 539, 782], "inlin": [436, 466, 599, 611], "guard": 436, "rule": [437, 476, 597, 600, 611, 699, 707, 744, 875], "span": 437, "stringif": [437, 1056], "token": 437, "address": [439, 808, 851, 874, 941, 995, 1155], "arbitrari": [442, 629, 1033, 1057], "see": [443, 868, 873, 874, 879, 880, 959, 960, 961, 963, 990, 993, 997, 999, 1078, 1143], "typedef": 447, "alia": 447, "singli": 450, "volatil": [452, 898], "lie": 452, "valid": 452, "handler": [452, 1008, 1009], "intrins": 453, "atom": [453, 763, 768, 835, 836, 840, 841, 856, 982], "builtin": 453, "align": 454, "unalign": 454, "pad": 454, "saniti": [456, 464, 478], "readabilti": 456, "shoot": 456, "offens": 456, "unobvi": 456, "ambigu": [456, 462, 699], "smell": 456, "know": 457, "size_t": 457, "discret": 458, "tradit": [458, 476, 1057], "approach": [458, 486, 487, 488], "wishlist": 458, "close": [458, 504, 749, 1005], "somewhat": 459, "contriv": 459, "hoorai": 459, "correct": [460, 607, 741], "non": [460, 543, 544, 545, 546, 547, 548, 549, 586, 606, 770, 776, 1176], "good": [461, 486, 487, 596, 611, 629, 698, 707, 716, 717, 744, 746], "old": [461, 611, 629, 694, 707, 716, 717, 746], "c99": 461, "explict": 462, "safeti": [462, 478], "scheme": 462, "artifici": [462, 1137], "valgrind": [463, 577], "action": [463, 1009], "optim": [465, 466, 467], "bound": [465, 466, 577, 993], "unnecessari": 466, "peephol": 466, "subexpress": 466, "elimin": [466, 754, 1105], "strength": 466, "reduct": 466, "fold": 466, "invari": 466, "unrol": 466, "tail": [466, 928], "cpu": [466, 874, 993, 999], "cach": [467, 488, 744], "multidimension": 467, "thrash": 467, "profil": [469, 470, 472, 473], "donald": 469, "knuth": 469, "toni": 469, "hoar": 469, "larri": 469, "wall": 469, "practic": 469, "brian": 469, "w": 469, "kernighan": 469, "rob": 469, "pike": 469, "gprof": 470, "flat": 470, "callgrind": 471, "analysi": 471, "per": [471, 805, 845, 1181], "kcachegrind": 471, "oprofil": 472, "much": [472, 487, 738, 1032], "wide": 472, "offlin": 472, "graphic": 472, "accomplish": 476, "disclaim": [476, 876], "principl": [476, 504], "yagni": 476, "uncl": 477, "bob": 477, "typic": [478, 875, 979, 995], "bookkeep": 478, "effort": 478, "spaghetti": 478, "concaten": [478, 1153], "input": [478, 879, 1037, 1141], "yyyi": 478, "mm": 478, "where": [478, 484, 873, 1011], "testabl": 478, "explicitli": [478, 737, 754], "categor": 478, "net": 478, "place": [478, 555, 600, 641, 864, 865, 1075], "overengin": [478, 611], "boilerpl": [479, 738, 833], "execut": [479, 485, 882, 1028, 1034, 1042, 1062, 1112, 1176, 1178], "consist": [479, 808], "paus": 481, "diagram": 481, "cmake_build_typ": 481, "k": [481, 1138], "printf": [481, 598], "popular": [481, 869], "find_packag": 482, "prefix": [484, 1033], "target": [484, 485, 487, 490, 491, 553, 971, 1012, 1191], "runpath": 484, "abi": 484, "blacklist": [486, 487], "flag": [486, 675, 823, 963, 1080], "libhello": 486, "bad": [486, 487, 744, 775, 806], "target_compile_definit": 487, "backlist": 487, "availablil": 487, "use_blacklist": 488, "normal": 489, "subdirectori": 490, "reorgan": 490, "i2c": [494, 941, 943], "subhierarchi": 494, "instanti": [494, 501, 650, 711, 770, 803], "adapt": [495, 501, 510, 515, 517, 524, 529, 757], "must": [495, 970], "adapte": 495, "asensor": 495, "real": [495, 603, 694, 755, 894], "measur": [495, 538, 769, 997, 999], "motiv": [496, 499, 515, 516, 612, 695, 698, 700, 709, 711, 736, 742, 857, 1039, 1049, 1055], "insert": [496, 562, 563, 646, 647, 650, 651, 652, 686, 756, 784, 785, 825], "bulk": 496, "6a": 496, "initializer_list": [496, 697, 699], "socialdb": 497, "filesystem": [498, 788, 1005], "thermomet": [498, 518, 519, 532, 533, 552], "aggreg": [499, 508, 698], "conret": 499, "realiz": 499, "situat": [499, 954], "constantsensor": 499, "decoratedconstantsensor": 499, "randomsensor": [499, 540], "decoratedrandomsensor": 499, "verifi": [499, 909, 943, 945, 1141], "hold": [499, 1053], "studi": [501, 742, 743, 1022], "heat": 501, "dbuslogg": 501, "dbusvaluestor": 501, "either": 501, "stop": [501, 752], "help": [501, 897, 929, 1164, 1171], "observ": [503, 531, 1039], "liskov": 504, "substitut": [504, 609], "segreg": 504, "invers": [504, 998], "proxi": [505, 515, 518, 519, 529, 532, 533], "foundat": 506, "hierarchi": [506, 619, 875, 1034], "hypothet": [506, 1054], "singleton": [507, 520, 521, 522, 534, 535, 536], "connector": 508, "uniniti": [516, 609], "flexibl": [520, 521, 534, 535], "strict": [521, 535], "inflex": [522, 536], "i2csensorfactori": 523, "concret": [523, 534, 535], "i2csensorfactory_vendor1": 523, "stub": [532, 844], "socialinsur": [534, 535], "oegk": [534, 535], "sv": [534, 535], "introduc": [537, 598, 744], "relationship": [537, 671, 672, 1141], "firstnam": 537, "lastnam": [537, 687, 689], "w1sensor": [537, 554], "answer": [537, 736], "try": [541, 619, 752, 1034], "ledstripedisplay_nopoli": 543, "cover": [543, 544, 545, 546, 547, 548, 549, 552], "hysteresis_nopoli": 544, "averagingsensor_nopoli": 545, "constantsensor_nopoli": 546, "mocksensor_nopoli": 547, "randomsensor_nopoli": 548, "mock": 549, "shape": [550, 897], "procedur": 550, "circl": 550, "area": [550, 616], "squar": 550, "massag": 551, "sub": 551, "notfound": 553, "find_is_const": 553, "isol": [553, 1145, 1181], "realiti": 553, "pc": 553, "greater": 557, "odd": 558, "overwrit": 562, "sunni": [563, 565, 568, 964, 968, 969, 970], "uniquifi": 570, "transcript": 572, "malloc": 577, "free": 577, "mismatch": [577, 954], "across": [580, 774, 776, 778, 780], "ownership": [585, 586, 587, 754, 882], "raii": [585, 586, 587, 765], "dealloc": 586, "naiv": [589, 610, 661, 853, 1008, 1038, 1154], "ol": [596, 743], "look": [596, 959, 960, 961], "distanc": [596, 615], "length": 596, "specifi": [598, 964], "otherwis": 598, "lifecycl": 601, "dragon": [604, 760], "memberwis": 604, "straighforward": 604, "correctli": 604, "underli": [605, 695], "mechan": 605, "just": 605, "pollut": 607, "hidden": [608, 919], "cannot": 609, "easili": 609, "odr": 611, "litt": 611, "defnit": 611, "ostream": [612, 613, 614, 615, 616], "cout": 612, "cuboid": 613, "upon": [613, 615, 616], "point3d": [613, 615], "surfac": 613, "volum": [613, 1025], "unari": [614, 615], "rectangl": [615, 616], "coordin": [615, 616], "absolut": [615, 788, 921, 1135], "height": 616, "catch": [619, 1034], "throw": [619, 770], "spirit": [629, 753, 754, 755], "pre": [631, 698], "destin": [631, 964], "back_insert_iter": 631, "binary_search": 634, "intellig": [634, 640, 1041, 1137], "find_if": [637, 687], "customiz": 637, "for_each": 638, "lower_bound": 640, "reverse_copi": [642, 661], "characterist": [644, 647], "modif": [647, 1027], "fill": [650, 1148], "definin": 651, "subscript": 652, "eras": 653, "multimap": 655, "deriv": [665, 666], "larger": [669, 1029, 1037], "substr": [674, 1081], "paint": 675, "american": 675, "onto": 675, "moodl": [676, 870, 884, 885, 910, 1017], "quiz": [353, 676, 870, 884, 885, 910, 1017], "cin": 678, "n": 684, "year": 684, "transform": [685, 757, 785, 1037], "wrong": [688, 768, 964], "great": [693, 995], "around": [694, 722], "school": 694, "item": [694, 756, 784, 785, 786, 1032, 1038], "inevit": 694, "union": [694, 770], "consider": [694, 995], "uniform": 696, "implementor": 697, "direct": [697, 808], "inconsist": 698, "heap": 698, "refus": 698, "narrow": 698, "mess": [699, 1149], "realist": [699, 1035, 1169], "int": [699, 990], "nicolai": 699, "josutti": 699, "complain": 699, "said": 702, "guidelin": 702, "well": 702, "smartptr": 704, "lvalu": [707, 756], "wish": [707, 1047], "theori": 707, "Ones": 707, "sai": [709, 899], "decai": 709, "chosen": 711, "rescu": [711, 736, 758, 1013, 1033, 1054, 1160], "syntact": [711, 1033], "variat": [711, 743, 748, 837], "conceptless": [712, 713], "fulfil": 716, "has_siz": 716, "index_returns_doubl": 716, "func": 717, "ret": 720, "doubl": 720, "foreword": 722, "prototyp": 722, "examp": 722, "explain": 722, "drive": [722, 934], "anatomi": [722, 815], "resum": 722, "suspens": 722, "caller": 722, "co_yield": 722, "mimick": 722, "fibo": 723, "suspend": [728, 729, 730], "decis": [733, 993], "cleanli": 733, "care": 736, "handwritten": [738, 739], "proggi": 738, "morph": 738, "possibl": 739, "temporari": [739, 1032, 1169], "made": 739, "hard": [741, 918], "aris": 741, "gool": 743, "prevent": [743, 754], "accident": [743, 785], "dangl": 744, "easi": [744, 761], "constraint": 744, "dogmat": 744, "sigh": 744, "storag": [746, 986], "abbrevi": 746, "avail": [746, 796], "compat": 748, "unique_ptr": [750, 753, 754], "shared_ptr": [750, 753, 785], "handwrit": 752, "ctor": 752, "auto_ptr": 752, "mayb": 752, "uniqu": [753, 786], "But": [753, 776, 968], "juggl": 753, "make_shar": 753, "cyclic": 753, "chanc": 754, "leakag": 754, "keystrok": 754, "make_uniqu": 754, "acknowledg": 754, "prove": 754, "weak_ptr": [755, 785], "borrow": 755, "invalid": 755, "univers": 756, "dual": 756, "bag": [756, 784, 785, 786], "null": 757, "pointlessli": 757, "hardcod": [757, 801], "placehold": 757, "upsid": 758, "technic": 758, "downsid": 758, "joinabl": 761, "detach": [761, 980], "cornercas": 761, "recursive_mutex": 764, "timed_mutex": 764, "recursive_timed_mutex": 764, "lock": [765, 768, 829, 842], "unlock": [765, 842], "consid": 765, "acquisit": [765, 1122], "lock_guard": 765, "condition_vari": 766, "safe": [766, 1009], "predic": [766, 984], "concern": 766, "promis": 768, "chrono": [768, 769], "utterli": 768, "becom": [768, 1029], "readi": 768, "minim": 768, "pro": 768, "clock": 769, "sleep": [769, 835, 840, 841], "bad_variant_access": 770, "accessor": 770, "get_if": 770, "fundament": [770, 1058], "crtp": [772, 775, 777], "incomplet": [773, 1151], "bloat": 775, "string_view": 775, "unrel": 778, "visit": 781, "rel": [788, 921, 1042], "compon": 788, "creation": [788, 869, 980, 981], "create_directori": 788, "entri": 788, "classif": 788, "is_xxx": 788, "directory_entri": 788, "modern": [792, 793, 794, 1189], "slideshow": [793, 796, 798, 801, 803, 806, 808, 815, 817, 819, 821, 823, 825, 827, 829, 831, 833, 835, 840, 842, 845, 847, 851, 854, 857, 1005, 1009, 1077, 1165, 1172], "hook": 795, "necessari": 795, "ioctl": [795, 796, 798, 817, 850, 963], "vtabl": 796, "kernelspac": 796, "_io": [796, 817], "major": [800, 801], "minor": [800, 801], "space": [801, 851, 870, 873, 874, 995], "hair": 805, "pretti": 805, "wswitch": 805, "dma": [808, 809, 833], "physic": 808, "scatterlist": 808, "when": 810, "explod": 810, "loadabl": 815, "init": [815, 833, 875, 1184], "exit": [815, 944, 980, 990], "unload": 815, "raspi": [817, 818, 954], "legaci": [817, 1108], "api": [817, 847, 979, 998], "my_activate_gpio": 817, "servic": [819, 875, 1152], "routin": [819, 833], "reserv": 821, "kmalloc": [823, 824, 840], "doubli": [825, 826], "node": [825, 966], "empti": [825, 916, 1048, 1105], "consequ": 827, "rt": [829, 830], "mutual": [829, 842], "exclus": [829, 842], "registr": 831, "layer": 831, "util": [831, 936], "pci": [833, 834], "foremost": 833, "probe": 833, "bar": 833, "rasperri": 837, "crossdev": 837, "artifact": [837, 1138], "bootload": 837, "jjj": 838, "mainten": 839, "spinlock": [840, 842, 843], "spin_lock": 840, "irq": 840, "spin_lock_irqsav": 840, "spin_unlock_irqrestor": 840, "ah": [840, 1149], "bulletproof": 842, "dup": 844, "defer": [845, 856], "jiffi": 847, "wheel": [847, 1091], "get_one_ev": 850, "copy_to_us": 850, "noth": 853, "o_nonblock": 853, "wake": 854, "workqueu": [856, 857, 858], "did": 856, "destroi": [857, 1171], "gzip": 861, "tar": 863, "etiquett": 863, "Being": 863, "g1": 864, "lot": [864, 865], "precondit": [864, 865], "credenti": [864, 883], "backup": [864, 865, 899], "busi": 865, "ok": [868, 990], "serial": 868, "pseudo": 868, "partit": 868, "proc": 868, "authent": [872, 950], "prompt": 872, "verif": [872, 1124], "success": 872, "imperson": 872, "uid": [874, 893, 894], "parent": [875, 992], "child": 875, "subsystem": 876, "0": [876, 990, 1145, 1184], "stdout": [880, 930, 944, 966], "stderr": 880, "trick": [880, 1079], "teacher": 882, "constel": 882, "root": [882, 894], "octal": 882, "tune": [882, 997, 1144], "setuid": [893, 894], "passwd": [893, 913, 969, 1114], "sudo": 893, "password": [893, 1102], "chmod": [893, 1062], "toi": 893, "effect": [894, 1009, 1048], "ugli": 895, "sticki": 895, "umask": 896, "edit": 897, "tabul": 897, "filenam": 897, "bashrc": [898, 899], "cp": 899, "similar": 899, "its": [899, 1144], "pwd": 900, "cd": 900, "mkdir": [906, 916], "funni": 907, "dev": 912, "touch": 916, "rm": 916, "rmdir": 916, "mv": 920, "somewher": 920, "cut": [923, 1072], "durchsuchen": 925, "optionen": 925, "verkn\u00fcpfungen": 925, "grep": 926, "less": [929, 1030, 1054], "brushless": 934, "motor": 934, "speed": 934, "esc": 934, "fwd": 934, "rev": 934, "calibr": 934, "packet": 935, "vcan": 936, "frame": [937, 1153], "mcp2515": 938, "schemat": 938, "solder": 938, "spi": 938, "lm73": 941, "slave": [941, 943], "master": [941, 943], "enabl": [941, 943], "bcm2835": 941, "datasheet": 941, "connect": [941, 960, 1148], "i2cdetect": 941, "detect": 941, "hwmon": [941, 943], "monitor": [941, 943], "pca9685": 942, "puls": 942, "wire": [942, 943], "ds18b20": 943, "alter": 943, "w1": 943, "attach": 943, "pin": [943, 977], "ds2482": 943, "800": 943, "channel": 943, "announc": 943, "hotplug": 943, "lm": 943, "caveat": [943, 1145], "topologi": 943, "symptom": 943, "adjust": [946, 1023], "wear": 950, "admin": 950, "hat": 950, "scp": 953, "sshf": 954, "mount": 954, "logdata": 954, "unmount": 954, "fusermount": 954, "umount": 954, "helper": [955, 1155], "simplic": [959, 960, 961], "watch": 959, "strace": 959, "supervis": 959, "descriptor": [963, 966, 973], "filedescriptor": 963, "offset": [963, 973], "lseek": 963, "hole": 965, "o_creat": 967, "bogu": 967, "o_excl": 968, "alreadi": 968, "o_rdonli": 969, "even": [969, 970, 1097], "o_wronli": 970, "writeabl": 970, "implicitli": 970, "scatter": 973, "gather": 973, "retriev": 975, "wise": 976, "legal": 979, "pthread_join": 980, "synchron": [982, 1008], "win32": 984, "reset": 984, "trylock": 989, "islock": 989, "argc": 990, "char": 990, "argv": [990, 1064], "procf": 992, "pid": 992, "ppid": 992, "getpid": 992, "getppid": 992, "multitask": 993, "fair": [993, 997], "runnabl": [993, 999], "bare": 995, "metal": 995, "hm": 995, "awai": [995, 1131], "stabil": 995, "latenc": [997, 999], "nice": 997, "inexact": 997, "immedi": 997, "preempt_rt": 997, "polici": 998, "prioriti": 998, "runn": 998, "frequenc": 999, "scale": 999, "mysteri": 999, "remain": 999, "sysprog": [1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010], "mmap": 1004, "segment": 1004, "produc": [1004, 1038], "consum": 1004, "mq_open": 1005, "mq_send": 1005, "mq_receiv": 1005, "mq_close": 1005, "mq_unlink": 1005, "notif": 1005, "mq_notifi": 1005, "mqueue": 1005, "sem_open": 1005, "sem_wait": 1005, "sem_post": 1005, "sem_clos": 1005, "sem_unlink": 1005, "barebon": 1008, "alarm": 1008, "louder": 1008, "innoc": 1008, "sigalrm": 1008, "programmat": 1009, "mask": 1009, "pend": 1009, "sigset_t": 1009, "async": 1009, "seem": 1011, "nm": 1011, "agnost": 1012, "goodi": 1013, "nativ": [1014, 1019], "sysroot": [1014, 1023], "linaro": 1023, "defunct": 1023, "patienc": 1023, "against": [1023, 1028, 1054], "docker": 1025, "autoconf": 1025, "71": 1025, "zoom": 1027, "rememb": 1027, "reloc": 1028, "independ": 1028, "pic": 1028, "runtim": 1028, "versu": 1028, "def": 1030, "reach": 1030, "theoret": 1030, "nonloc": 1030, "hood": 1032, "monkeypatch": 1032, "print": [1032, 1057], "contextlib": 1032, "contextmanag": 1032, "involv": 1032, "prefixprint": 1032, "mind": 1033, "sugar": 1033, "functool": [1033, 1054], "rais": 1034, "regardless": 1034, "coverag": 1037, "form": 1042, "daemon": 1043, "mother": 1045, "acquir": 1045, "abc": 1047, "late": 1047, "abtract": 1047, "interrelationship": 1050, "salari": 1051, "introspect": 1051, "isinst": 1051, "issubclass": 1051, "classmethod": 1052, "staticmethod": 1052, "_make": 1053, "_asdict": 1053, "dunder": 1054, "compar": 1054, "incompat": 1054, "lotsa": 1054, "magic": 1054, "__gt__": 1054, "term": 1054, "__lt__": 1054, "total_ord": 1054, "them": 1054, "readonli": 1055, "repr": 1056, "__repr__": 1056, "suppli": 1057, "ultim": 1057, "guido": 1060, "van": 1060, "rossum": 1060, "hash": 1062, "bang": 1062, "she": 1062, "doze": 1062, "registri": 1062, "indent": 1063, "cosmet": 1064, "rudimentari": 1064, "python2": 1066, "unicod": 1066, "esoter": 1070, "delimit": 1079, "interv": 1087, "axi": 1090, "setuptool": 1091, "manifest": 1091, "publish": [1091, 1130, 1152], "usernam": 1102, "strategi": 1114, "revert": 1116, "justifi": 1117, "activ": 1123, "dictread": [1125, 1126, 1144], "cp1252": [1125, 1127], "reader": [1127, 1128, 1144], "nohead": 1127, "both": 1133, "interrel": 1134, "product": 1135, "david": 1136, "beazlei": 1136, "raymond": 1136, "hetting": 1136, "mean": 1138, "linear": [1139, 1141, 1142], "regress": [1139, 1141, 1142], "weather": 1140, "ndarrai": 1141, "plot": 1141, "splice": 1141, "mankind": 1143, "god": 1143, "insan": 1144, "scsv": 1144, "dbapi": [1145, 1147, 1148], "transact": 1145, "postgresql": 1147, "postgr": 1147, "cursor": 1148, "queri": 1148, "ascii": 1149, "iso": 1149, "latin": 1149, "8859": 1149, "lieb": 1149, "gr\u00fc\u00dfe": 1149, "j\u00f6rg": 1149, "\u795d\u597d": 1149, "utf": 1149, "decod": 1149, "broker": 1152, "payload": 1152, "append": 1153, "deprec": 1153, "bitmap": 1155, "neat": 1155, "iloc": [1157, 1158], "Then": 1157, "inplac": 1158, "loc": [1158, 1159], "hiccup": 1159, "inclus": 1159, "lowercas": 1160, "email": 1160, "normalized_email": 1160, "ing": 1160, "elementtre": 1161, "etre": 1161, "sax": 1161, "dom": 1161, "invoc": 1164, "subcommand": 1164, "upload": 1167, "pythonpath": 1169, "mark": 1169, "expect": [1169, 1178], "recogn": 1170, "meat": 1170, "freez": 1171, "recreat": 1171, "fatal": 1176, "failur": 1176, "assert_": 1176, "suit": 1176, "teardown": 1181, "organisatorisch": 1183, "buchung": 1183, "kursablauf": 1183, "kursgestaltung": 1183, "unterlagen": 1183, "grub": 1184, "97": 1184, "bauen": 1184, "prozess": 1184, "verschieden": 1184, "zielpublikum": [1185, 1187, 1188, 1193, 1195, 1200, 1201, 1207], "kursinhalt": [1185, 1187, 1188, 1193, 1195, 1196, 1200, 1201, 1202, 1203, 1205, 1206, 1207], "vorkenntniss": [1185, 1187, 1188, 1193, 1195, 1196, 1200, 1201, 1202, 1203, 1205, 1206, 1207], "three": 1189, "prior": 1191, "beispielen": 1195, "mutter": 1196, "aller": 1196, "woch": 1200, "svn": 1201, "putti": 353}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"Kontakt": [[0, "kontakt"]], "Navigation": [[0, "navigation"]], "Google Maps": [[0, "google-maps"]], "Google Streetview": [[0, "google-streetview"]], "Curriculum Vitae": [[1, "curriculum-vitae"]], "\u00dcber Mich": [[2, "uber-mich"]], "Projekte": [[3, "projekte"]], "Projekte aus selbstst\u00e4ndiger T\u00e4tigkeit": [[3, "projekte-aus-selbststandiger-tatigkeit"]], "Projekte aus nichtselbstst\u00e4ndiger T\u00e4tigkeit": [[3, "projekte-aus-nichtselbststandiger-tatigkeit"]], "Skills": [[4, "skills"], [169, "skills"]], "Angebot: In-House Schulungen": [[5, "angebot-in-house-schulungen"]], "Zu meiner Person": [[5, "zu-meiner-person"]], "Schwerpunke": [[5, "schwerpunke"]], "C/C++": [[5, "c-c"]], "Python": [[5, "python"], [96, "python"], [369, "python"], [374, "python"]], "Linux": [[5, "linux"], [80, "linux"], [187, "linux"], [933, "linux"]], "Schulungsstil": [[5, "schulungsstil"]], "Preise": [[5, "preise"]], "Course Material": [[6, "course-material"], [477, "course-material"], [1135, "course-material"]], "Einleitung": [[7, "Einleitung"], [225, "Einleitung"]], "Datatypes": [[7, "Datatypes"], [222, "Datatypes"], [225, "Datatypes"], [228, "Datatypes"], [241, "Datatypes"], [244, "Datatypes"], [252, "Datatypes"], [254, "Datatypes"], [260, "Datatypes"], [264, "Datatypes"], [267, "Datatypes"], [270, "Datatypes"], [284, "datatypes"], [291, "datatypes"], [294, "datatypes"], [302, "Datatypes"], [304, "datatypes"], [305, "datatypes"], [306, "Datatypes"], [310, "datatypes"], [311, "datatypes"], [328, "Datatypes"], [332, "datatypes"], [333, "datatypes"], [338, "datatypes"], [339, "datatypes"], [340, "Datatypes"], [344, "datatypes"], [345, "datatypes"], [348, "datatypes"], [349, "datatypes"], [350, "Datatypes"], [364, "Datatypes"], [1066, "datatypes"]], "Numbers": [[7, "Numbers"], [225, "Numbers"], [228, "Numbers"], [252, "Numbers"], [364, "Numbers"], [1066, "numbers"]], "Integer Numbers": [[7, "Integer-Numbers"], [225, "Integer-Numbers"], [1066, "integer-numbers"]], "Strings": [[7, "Strings"], [222, "Strings"], [225, "Strings"], [228, "Strings"], [237, "Strings"], [241, "Strings"], [241, "id3"], [244, "Strings"], [252, "Strings"], [264, "Strings"], [282, "Strings"], [285, "Strings"], [285, "id1"], [285, "id3"], [292, "Strings"], [328, "Strings"], [364, "Strings"]], "Compound Datatypes": [[7, "Compound-Datatypes"], [225, "Compound-Datatypes"], [237, "Compound-Datatypes"], [241, "Compound-Datatypes"], [244, "Compound-Datatypes"], [247, "Compound-Datatypes"], [252, "Compound-Datatypes"], [254, "Compound-Datatypes"], [260, "Compound-Datatypes"], [264, "Compound-Datatypes"], [267, "Compound-Datatypes"], [270, "Compound-Datatypes"], [282, "Compound-Datatypes"], [306, "Compound-Datatypes"], [312, "Compound-Datatypes"], [324, "Compound-Datatypes"], [328, "Compound-Datatypes"], [340, "Compound-Datatypes"], [346, "Compound-Datatypes"], [350, "Compound-Datatypes"], [1067, "compound-datatypes"]], "Lists (Array in JavaScript, std::vector<> in C++, Array in Java)": [[7, "Lists-(Array-in-JavaScript,-std::vector<>-in-C++,-Array-in-Java)"], [225, "Lists-(Array-in-JavaScript,-std::vector<>-in-C++,-Array-in-Java)"]], "Dictionary (Key/Value Map in Javascript)": [[7, "Dictionary-(Key/Value-Map-in-Javascript)"], [225, "Dictionary-(Key/Value-Map-in-Javascript)"]], "Set: mathematische Mengen": [[7, "Set:-mathematische-Mengen"], [225, "Set:-mathematische-Mengen"]], "while": [[7, "while"], [225, "while"], [244, "while"], [260, "while"], [292, "while"], [346, "while"]], "Functions": [[7, "Functions"], [43, "functions"], [225, "Functions"], [228, "Functions"], [241, "Functions"], [252, "Functions"], [254, "Functions"], [260, "Functions"], [264, "Functions"], [269, "functions"], [285, "Functions"], [292, "Functions"], [306, "Functions"], [322, "functions"], [326, "functions"], [332, "functions"], [333, "functions"], [334, "Functions"], [338, "functions"], [339, "functions"], [340, "Functions"], [344, "functions"], [345, "functions"], [346, "Functions"], [348, "functions"], [349, "functions"], [350, "Functions"], [402, "functions"], [402, "id1"], [1078, "functions"]], "Python Basics (2021-xx-xx - 2021-yy-yy)": [[8, "python-basics-2021-xx-xx-2021-yy-yy"]], "Training Information": [[8, null], [208, null], [209, null], [211, null], [212, null], [213, null], [214, null], [216, null], [218, null], [219, null], [223, null], [226, null], [229, null], [232, null], [233, null], [234, null], [235, null], [239, null], [242, null], [251, null], [255, null], [258, null], [261, null], [263, null], [266, null], [269, null], [272, null], [281, null], [284, null], [291, null], [294, null]], "\u00dcberblick": [[8, "uberblick"], [216, "uberblick"], [226, "uberblick"], [235, "uberblick"], [251, "uberblick"], [263, "uberblick"]], "Log": [[8, "log"], [152, "log"], [208, "log"], [209, "log"], [212, "log"], [213, "log"], [221, "log"], [223, "log"], [224, "log"], [226, "log"], [229, "log"], [233, "log"], [235, "log"], [239, "log"], [242, "log"], [251, "log"], [263, "log"], [272, "log"]], "Tag 1": [[8, "tag-1"], [199, "tag-1"], [218, "tag-1"], [226, "tag-1"], [229, "tag-1"], [235, "tag-1"], [251, "tag-1"], [263, "tag-1"]], "Tag 2": [[8, "tag-2"], [199, "tag-2"], [218, "tag-2"], [226, "tag-2"], [229, "tag-2"], [235, "tag-2"], [251, "tag-2"], [263, "tag-2"]], "Live-Hacking (Jupyter Notebook)": [[8, "live-hacking-jupyter-notebook"], [216, "live-hacking-jupyter-notebook"], [226, "live-hacking-jupyter-notebook"], [229, "live-hacking-jupyter-notebook"], [239, "live-hacking-jupyter-notebook"]], "Links": [[8, "links"], [39, "links"], [152, "links"], [153, "links"], [193, "Links"], [204, "links"], [209, "links"], [211, "links"], [213, "links"], [216, "links"], [223, "links"], [224, "links"], [226, "links"], [235, "links"], [239, "links"], [242, "links"], [245, "links"], [251, "links"], [258, "links"], [269, "links"], [272, "links"], [305, "links"], [311, "links"], [374, "links"], [452, "links"], [701, "links"], [722, "links"], [740, "links"], [751, "links"], [876, "links"], [897, "links"], [936, null], [943, "links"], [1059, null], [1090, null], [1091, "links"], [1152, "links"], [1154, "links"], [1155, "links"], [1157, "links"], [1158, "links"], [1159, "links"], [1160, "links"], [1172, "links"], [814, "links"]], "Programmierung Grundlagen (Jupyter Notebook)": [[9, "programmierung-grundlagen-jupyter-notebook"], [217, "programmierung-grundlagen-jupyter-notebook"], [227, "programmierung-grundlagen-jupyter-notebook"], [253, "programmierung-grundlagen-jupyter-notebook"], [265, "programmierung-grundlagen-jupyter-notebook"]], "Details": [[10, "details"], [79, "details"], [386, "details"]], "Course List": [[11, "course-list"]], "Contents": [[11, null], [24, null], [167, null], [169, null], [171, null], [172, null], [173, null], [174, null], [175, null], [176, null], [177, null], [178, null], [187, null], [196, null], [200, "contents"], [201, null], [475, "contents"], [577, null], [580, null], [586, null], [589, null], [677, "id1"], [866, "id1"], [886, "id1"], [905, "id1"], [911, "id1"], [914, "id1"], [931, "id1"], [939, "id1"], [940, "id1"], [947, "id1"], [956, "id1"], [972, "id1"], [974, "id1"], [976, "id1"], [991, "id1"], [1001, null], [1004, null], [1018, "id1"], [1038, null], [1094, "id1"], [1095, "id1"], [1099, "id1"], [1108, "id1"], [1122, "id1"], [1129, "id1"], [1176, null], [1178, null], [1181, null], [1189, "id2"], [1192, "contents"]], "Programmierung Grundlagen, anhand von Python (12. und 13.4.2021)": [[11, "programmierung-grundlagen-anhand-von-python-12-und-13-4-2021"], [387, "programmierung-grundlagen-anhand-von-python-12-und-13-4-2021"]], "Templates for Course Descriptions": [[12, "templates-for-course-descriptions"]], "Sidebar: Course Metadata": [[12, "sidebar-course-metadata"]], "About This Site": [[13, "about-this-site"]], "License: GPLv3": [[13, "license-gplv3"]], "Github": [[13, "github"], [369, "github"]], "Sphinx": [[13, "sphinx"], [153, "sphinx"], [156, "sphinx"]], "Installation Instructions": [[13, "installation-instructions"]], "pip and venv": [[13, null]], "Work in Progress": [[13, "work-in-progress"], [151, "work-in-progress"]], "More": [[13, "more"], [775, "more"]], "OpenTraining": [[14, "opentraining"]], "Draft Topics": [[15, "draft-topics"]], "Miscellaneous": [[16, "miscellaneous"], [150, "miscellaneous"], [165, "miscellaneous"], [192, "miscellaneous"], [212, "miscellaneous"], [276, "miscellaneous"], [277, "miscellaneous"], [297, "miscellaneous"], [311, "miscellaneous"], [322, "miscellaneous"], [323, "miscellaneous"], [326, "miscellaneous"], [333, "miscellaneous"], [336, "miscellaneous"], [572, "miscellaneous"], [572, "id1"], [708, "miscellaneous"], [973, "miscellaneous"], [986, "miscellaneous"], [771, "miscellaneous"]], "S5 Integration": [[17, "s5-integration"]], "Work in Progress: S5 Web Slides": [[17, "work-in-progress-s5-web-slides"]], "Implementation Notes": [[17, "implementation-notes"], [355, "implementation-notes"]], "Todo": [[17, "id1"], [169, null], [169, null], [169, null], [169, null], [169, null], [169, null], [169, null], [169, null], [169, null], [169, null], [169, null], [169, null], [169, null], [169, null], [169, null], [169, null], [169, null], [169, null], [169, null], [198, "id1"], [201, "id2"], [201, "id3"], [477, "todo"], [573, "id1"], [576, "id1"], [579, "id1"], [582, "id1"], [585, "id1"], [588, "id1"], [591, "id1"], [794, "id1"], [798, "id1"], [806, "id2"], [1000, "id1"], [1003, "id1"], [1007, "id1"], [1175, "id1"], [1180, "id1"]], "S5 Slide Tests": [[18, "s5-slide-tests"]], "Level 1 Heading": [[19, "level-1-heading"]], "Level 2 Heading": [[19, "level-2-heading"]], "Level 2 Heading, Image": [[19, "level-2-heading-image"]], "Screencasts": [[20, "screencasts"]], "Topics to be Written": [[21, "topics-to-be-written"]], "New Topics to Write": [[21, "new-topics-to-write"]], "Netidee F\u00f6rderantrag": [[22, "netidee-forderantrag"]], "Netidee F\u00f6rderantrag: OpenTraining": [[23, "netidee-forderantrag-opentraining"]], "1. DATEN ANTRAGSTELLER_IN": [[23, "daten-antragsteller-in"]], "2. ALLGEMEINES": [[23, "allgemeines"]], "2.1 Projektname": [[23, "projektname"]], "2.2 Projekt-Untertitel": [[23, "projekt-untertitel"]], "2.3 Allgemeinverst\u00e4ndliche KURZbeschreibung des Projektes": [[23, "allgemeinverstandliche-kurzbeschreibung-des-projektes"]], "2.4 Anschlussf\u00f6rderung": [[23, "anschlussforderung"]], "3. DIE BESONDERE BEDEUTUNG IHRES PROJEKTES F\u00dcR DAS INTERNET (DIE INTERNETNUTZUNG) IN \u00d6STERREICH?": [[23, "die-besondere-bedeutung-ihres-projektes-fur-das-internet-die-internetnutzung-in-osterreich"]], "4. ZIELGRUPPE UND PROJEKTZIEL": [[23, "zielgruppe-und-projektziel"]], "5. L\u00d6SUNG": [[23, "losung"]], "5.1 Beschreibung der Probleml\u00f6sung": [[23, "beschreibung-der-problemlosung"]], "5.2 Wesentliche Elemente eines nachhaltigen Impact NACH netidee Projektende": [[23, "wesentliche-elemente-eines-nachhaltigen-impact-nach-netidee-projektende"]], "6. UMFELDANALYSE": [[23, "umfeldanalyse"]], "6.1 Was ist der Stand der Technik / Methode / des Wissens?": [[23, "was-ist-der-stand-der-technik-methode-des-wissens"]], "6.2 Welche andere L\u00f6sungen/Vorhaben zu den genannten Problemen gibt es schon?": [[23, "welche-andere-losungen-vorhaben-zu-den-genannten-problemen-gibt-es-schon"]], "7. ALLEINSTELLUNGSMERKMAL": [[23, "alleinstellungsmerkmal"]], "8. PROJEKTERGEBNISSE": [[23, "projektergebnisse"]], "8.1 Liste der Projektergebnisse": [[23, "liste-der-projektergebnisse"]], "8.2 Erforderliche Lizenzen Dritter": [[23, "erforderliche-lizenzen-dritter"]], "9. ERFOLGREICHER PROJEKTABSCHLUSS": [[23, "erfolgreicher-projektabschluss"]], "9.1 Ihre sonstigen Aktivit\u00e4ten im Projektbereich": [[23, "ihre-sonstigen-aktivitaten-im-projektbereich"]], "9.2 Angaben zur fachlichen Eignung der MitarbeiterInnen im Projektkernteam": [[23, "angaben-zur-fachlichen-eignung-der-mitarbeiterinnen-im-projektkernteam"]], "9.3 Erfahrung des/der vorgesehenen ProjektleiterIn": [[23, "erfahrung-des-der-vorgesehenen-projektleiterin"]], "9.4 Link zum maximal 2-min\u00fctigen Video des Projektkernteams": [[23, "link-zum-maximal-2-minutigen-video-des-projektkernteams"]], "9.5 Risiken": [[23, "risiken"]], "9.6 Erfolgskriterien am netidee-Projektende": [[23, "erfolgskriterien-am-netidee-projektende"]], "9.7 Angestrebter Impact 3 Jahre nach netidee-Projektende": [[23, "angestrebter-impact-3-jahre-nach-netidee-projektende"]], "10. UMSETZUNG (EINJ\u00c4HRIGES NETIDEE PROJEKT)": [[23, "umsetzung-einjahriges-netidee-projekt"]], "10.1 Wichtige Partner_innen": [[23, "wichtige-partner-innen"]], "10.2 Arbeitsschwerpunkte": [[23, "arbeitsschwerpunkte"]], "10.3 Wesentliche Ressourcen": [[23, "wesentliche-ressourcen"]], "10.4 Nutzer_innen-Kommunikationskan\u00e4le": [[23, "nutzer-innen-kommunikationskanale"]], "11. PROJEKTTERMINE": [[23, "projekttermine"]], "11.1 Termine Projektstart - Projektende": [[23, "termine-projektstart-projektende"]], "Projektstart": [[23, "projektstart"]], "12. KOSTEN UND FINANZIERUNG": [[23, "kosten-und-finanzierung"]], "12.1 Projektkosten": [[23, "projektkosten"]], "Personalkosten": [[23, "personalkosten"]], "Sonstige Kosten": [[23, "sonstige-kosten"]], "Gesamtkosten in \u20ac": [[23, "gesamtkosten-in"]], "12.2 Wir beantragen folgende netidee-F\u00f6rderung": [[23, "wir-beantragen-folgende-netidee-forderung"]], "13.3 Die restlichen Kosten werden finanziert durch": [[23, "die-restlichen-kosten-werden-finanziert-durch"]], "13. SONDERPREIS": [[23, "sonderpreis"]], "14. ERG\u00c4NZENDE ANGABEN": [[23, "erganzende-angaben"]], "14.1 Transparenz Mehrfachantr\u00e4ge": [[23, "transparenz-mehrfachantrage"]], "14.2 Nutzung der WhatAVenture-Plattform": [[23, "nutzung-der-whataventure-plattform"]], "14.3 Das eingereichte Projekt ist Teil einer schulischen Verpflichtung (z.B. HTL Diplomarbeit)": [[23, "das-eingereichte-projekt-ist-teil-einer-schulischen-verpflichtung-z-b-htl-diplomarbeit"]], "14.4 Wie haben Sie von der netidee erfahren? (Mehrfachnennungen m\u00f6glich)": [[23, "wie-haben-sie-von-der-netidee-erfahren-mehrfachnennungen-moglich"]], "16. DATENSCHUTZ": [[23, "datenschutz"]], "Video Screenplay": [[24, "video-screenplay"]], "The Problem And Me": [[24, "the-problem-and-me"]], "Open Source Training Material": [[24, "open-source-training-material"]], "Walk-Through": [[24, "walk-through"]], "Use Case: Custom Training, Subtract Known": [[25, "use-case-custom-training-subtract-known"]], "Use Case: Calculate Minimum Training Duration": [[26, "use-case-calculate-minimum-training-duration"]], "Use Cases": [[27, "use-cases"]], "Trainer": [[27, "trainer"]], "Editor": [[27, "editor"]], "End User (Training Audience)": [[27, "end-user-training-audience"]], "Use Case: Use Training Material From Other Sites": [[28, "use-case-use-training-material-from-other-sites"]], "Use Case: Menu to Choose From": [[29, "use-case-menu-to-choose-from"]], "Use Case: Slide Show Material as Plain-Text Files": [[30, "use-case-slide-show-material-as-plain-text-files"]], "Sending A V4L Camera Device Output Over SSH": [[31, "sending-a-v4l-camera-device-output-over-ssh"]], "Capture Video To File": [[31, "capture-video-to-file"]], "Play Video From Remote System, Using SSH": [[31, "play-video-from-remote-system-using-ssh"]], "Emoji Codes (sphinxemoji)": [[32, "emoji-codes-sphinxemoji"]], "Setup": [[32, "setup"], [284, "setup"], [291, "setup"], [294, "setup"], [304, "setup"], [305, "setup"], [309, "setup"], [310, "setup"], [311, "setup"], [332, "setup"], [333, "setup"], [338, "setup"], [339, "setup"], [344, "setup"], [348, "setup"], [349, "setup"], [934, "setup"], [1059, "setup"], [1171, "setup"]], "Most Used Here In This Site": [[32, "most-used-here-in-this-site"]], "All Codes": [[32, "all-codes"]], "Recipes": [[33, "recipes"]], "isoamsa.txt: Added Mathematical Symbols: Arrows": [[34, "isoamsa-txt-added-mathematical-symbols-arrows"]], "isoamsr.txt: Added Mathematical Symbols: Relations": [[35, "isoamsr-txt-added-mathematical-symbols-relations"]], "isonum.txt: Added Mathematical Symbols: Binary Operators": [[36, "isonum-txt-added-mathematical-symbols-binary-operators"]], "Layout Test Page": [[37, "layout-test-page"]], "Admonitions": [[37, "admonitions"]], "Admonition": [[37, "admonition"]], "This is an .. admonition::": [[37, null]], "Tip": [[37, "tip"]], "Note": [[37, "note"]], "Hint": [[37, "hint"]], "Important": [[37, "important"]], "Attention": [[37, "attention"]], "Caution": [[37, "caution"]], "Error": [[37, "error"]], "Danger": [[37, "danger"]], "Sidebar": [[37, "sidebar"]], "Blech Sidebar Title Blah": [[37, null]], "Sidebar \u201cKursdaten\u201d": [[37, "sidebar-kursdaten"]], "Kursdaten": [[37, null], [1185, null], [1186, null], [1187, null], [1188, null], [1193, null], [1195, null], [1196, null], [1200, null], [1201, null], [1202, null], [1203, null], [1205, null], [1206, null], [1207, null]], "Local Content": [[37, "local-content"]], "Local Heading 1": [[37, "local-heading-1"], [37, "id3"]], "Local Heading 1.1": [[37, "local-heading-1-1"], [37, "id4"]], "Local Heading 1.2": [[37, "local-heading-1-2"], [37, "id5"]], "Local Heading 2": [[37, "local-heading-2"], [37, "id6"]], "Sidebar with Local Content": [[37, "sidebar-with-local-content"]], "Bleh Content Blah": [[37, null]], "To Do": [[37, "to-do"]], "mmlalias.txt: MathML aliases for entities from other sets": [[38, "mmlalias-txt-mathml-aliases-for-entities-from-other-sets"]], "Most used": [[38, "id1"]], "All": [[38, "id2"]], "reStructuredText Cheat Sheet": [[39, "restructuredtext-cheat-sheet"]], "Further Information": [[39, "further-information"], [157, "further-information"], [232, "further-information"], [233, "further-information"], [255, "further-information"], [360, "further-information"], [369, "further-information"], [756, "further-information"]], "Local Documents": [[39, "local-documents"]], "External Links": [[39, "external-links"]], "Section References": [[39, "section-references"]], "Section That We Refer To": [[39, "section-that-we-refer-to"]], "Another Section Contains a Link To The Referred Section Above": [[39, "another-section-contains-a-link-to-the-referred-section-above"]], "Footnotes": [[39, "footnotes"]], "Sphinxish": [[40, "sphinxish"]], "Jupyter Notebooks": [[40, "jupyter-notebooks"]], "Running Sphinx From Source": [[40, "running-sphinx-from-source"]], "Seminar on \u201cClean Code\u201d (2022-04-13)": [[41, "seminar-on-clean-code-2022-04-13"]], "Seminar Agenda and Timeline": [[41, "seminar-agenda-and-timeline"]], "Live Hacking Before (Formal) Unit Testing": [[42, "live-hacking-before-formal-unit-testing"]], "Initial Structure": [[42, "initial-structure"]], "Snippets": [[42, null], [42, null], [42, null], [42, null], [42, null], [42, null], [44, null], [44, null], [50, null], [50, null]], "User": [[42, "user"]], "UserDB": [[42, "userdb"]], "bin/userdb-write-binaryfile.cpp": [[42, "bin-userdb-write-binaryfile-cpp"]], "Extend UserDB To Write": [[42, "extend-userdb-to-write"]], "Extend UserDB To Read From File, And Iterate": [[42, "extend-userdb-to-read-from-file-and-iterate"]], "Bug: Use \u201cFaschingbauer\u201d As Last Name": [[42, "bug-use-faschingbauer-as-last-name"]], "Wrap Up: What Do We Have?": [[42, "wrap-up-what-do-we-have"]], "Clean Code: Messages From The Book": [[43, "clean-code-messages-from-the-book"]], "Survey": [[43, null], [476, null]], "Names": [[43, "names"]], "Comments": [[43, "comments"]], "Formatting": [[43, "formatting"], [340, "Formatting"]], "Objects and Data Structures": [[43, "objects-and-data-structures"]], "Error Handling": [[43, "error-handling"], [955, "error-handling"]], "Boundaries": [[43, "boundaries"]], "Unit Tests": [[43, "unit-tests"], [553, "unit-tests"]], "Classes": [[43, "classes"], [231, "Classes"], [316, "classes"]], "Live Hacking: Switch To googletest": [[44, "live-hacking-switch-to-googletest"]], "Git Submodule": [[44, "git-submodule"]], "Establish Tests: Demo": [[44, "establish-tests-demo"]], "Straightforward main() Conversion": [[44, "straightforward-main-conversion"]], "Fix Shortcomings": [[44, "fix-shortcomings"]], "Is Software A Craft? Software Is A Craft!": [[45, "is-software-a-craft-software-is-a-craft"]], "09:00-09:15 Introductory Words": [[45, "introductory-words"]], "09:15-10:00 Software Engineering: A Discipline? (What Have We Established?)": [[45, "software-engineering-a-discipline-what-have-we-established"]], "10:00-10:15 Coffee Break": [[45, "coffee-break"]], "10:15-11:00 Establishing \u201cThe Project\u201d (Live Hacking, Slides)": [[45, "establishing-the-project-live-hacking-slides"]], "11:00-12:00 Enter Unit Testing Frameworks": [[45, "enter-unit-testing-frameworks"]], "12:00-13:00 Lunch Break": [[45, "lunch-break"]], "13:00-14:00 Cornerstones From The \u201cClean Code\u201d Book": [[45, "cornerstones-from-the-clean-code-book"]], "14:00-14:45 Keeping Code Clean In The Small": [[45, "keeping-code-clean-in-the-small"]], "14:45-15:00 Coffee Break": [[45, "id1"]], "15:00-23:59 \u201cExtreme Programming\u201d Session": [[45, "extreme-programming-session"]], "UserDB::find() Crashes If User Not Found": [[46, "userdb-find-crashes-if-user-not-found"]], "State": [[46, "state"]], "Bugs": [[47, "bugs"], [53, "bugs"]], "Existing Files Are Overwritten": [[48, "existing-files-are-overwritten"]], "UserDB::read(): What If Done Twice?": [[49, "userdb-read-what-if-done-twice"]], "UserDB: Alternative Output Format - CSV": [[50, "userdb-alternative-output-format-csv"]], "Write CSV: Test": [[50, "write-csv-test"]], "Write CSV: Frontend Program": [[50, "write-csv-frontend-program"], [50, "id1"]], "Read CSV: Test": [[50, "read-csv-test"]], "Features": [[51, "features"]], "Search By Other Indexes": [[52, "search-by-other-indexes"]], "Backlog: What Needs To Change, Or We Will All Die": [[53, "backlog-what-needs-to-change-or-we-will-all-die"]], "Refactoring After Featuritis": [[53, "refactoring-after-featuritis"]], "BackingStore Has Too Many Responsibilities \u27f6 Interface": [[54, "backingstore-has-too-many-responsibilities-longrightarrow-interface"]], "UserDB Has Too Many Responsibilities \u27f6 BackingStore": [[55, "userdb-has-too-many-responsibilities-longrightarrow-backingstore"]], "BackingStore": [[55, "backingstore"]], "Refactoring": [[56, "refactoring"], [554, "refactoring"], [845, "refactoring"]], "Load From BackingStore in Constructor": [[57, "load-from-backingstore-in-constructor"]], "UserDB::{read,write}(): bool, Really?": [[58, "userdb-read-write-bool-really"]], "Pointless Blinking With Python, asyncio, and libgpiod (and a Raspberry Pi of Course)": [[59, "pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"]], "Installation Notes": [[60, "installation-notes"]], "libgpiod": [[60, "libgpiod"]], "Fedora: Prepare Tarballs": [[60, "fedora-prepare-tarballs"]], "On The Pi: Build And Install": [[60, "on-the-pi-build-and-install"]], "Submission: Pointless Blinking With Python, asyncio, and libgpiod (and a Raspberry Pi of Course)": [[61, "submission-pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"]], "Biography": [[61, "biography"], [63, "biography"], [65, "biography"]], "Abstract": [[61, "abstract"], [63, "abstract"], [65, "abstract"]], "Description": [[61, "description"], [63, "description"], [65, "description"], [507, "description"], [659, "description"], [675, "description"], [678, "description"], [680, "description"], [681, "description"], [682, "description"], [683, "description"], [684, "description"], [685, "description"], [686, "description"], [687, "description"], [689, "description"], [690, "description"]], "Screenplay: Pointless Blinking With Python, asyncio, and libgpiod (and a Raspberry Pi of Course)": [[62, "screenplay-pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"]], "Setup Before Presentation": [[62, "setup-before-presentation"]], "Starting Point": [[62, "starting-point"], [704, "starting-point"]], "Greeting": [[62, "greeting"]], "Multiple Background Threads": [[62, "multiple-background-threads"]], "Enter asyncio": [[62, "enter-asyncio"]], "Character Device Based GPIO": [[62, "character-device-based-gpio"]], "GPIO Device": [[62, "gpio-device"]], "Most Basic Feature: Setting GPIO Values": [[62, "most-basic-feature-setting-gpio-values"]], "Entire Matrix On/Off": [[62, "entire-matrix-on-off"]], "Bringing All Together": [[62, "bringing-all-together"]], "Modularize": [[62, "modularize"]], "Play A Bit: Blink Entire Rows": [[62, "play-a-bit-blink-entire-rows"]], "Coroutines?": [[62, "coroutines"]], "Not Enough: sequence()": [[62, "not-enough-sequence"]], "Looping: forever()": [[62, "looping-forever"]], "A Stripped-Down Program (\u27f6 Factory)": [[62, "a-stripped-down-program-longrightarrow-factory"]], "Turn blink() Into A Factory": [[62, "turn-blink-into-a-factory"]], "Anti-Clumsy Decorator: blink() Wrapper": [[62, "anti-clumsy-decorator-blink-wrapper"]], "@program, Finally": [[62, "program-finally"]], "Playground: cycle()": [[62, "playground-cycle"]], "Fast Forward: any(), And Cancellation": [[62, "fast-forward-any-and-cancellation"]], "Playground: on()": [[62, "playground-on"]], "Goodbye": [[62, "goodbye"]], "GLT 2023 Submission: Pointless Blinking With Python, asyncio, and libgpiod (and a Raspberry Pi of Course)": [[63, "glt-2023-submission-pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"]], "Pointless Blinking: Evolution": [[64, "pointless-blinking-evolution"]], "GLT 2024 Submission: Pointless Blinking: Evolution": [[65, "glt-2024-submission-pointless-blinking-evolution"]], "Talk Sketch: Pointless Blinking: Evolution": [[66, "talk-sketch-pointless-blinking-evolution"]], "gpiod": [[66, "gpiod"]], "asyncio": [[66, "asyncio"], [1088, "asyncio"]], "textual": [[66, "textual"]], "Pointless Blinking": [[67, "pointless-blinking"]], "C++": [[68, "c"], [111, "c"], [112, "c"], [169, "c"], [691, "c"]], "C++: Building with CMake": [[69, "c-building-with-cmake"]], "C++: Interfaces": [[70, "c-interfaces"]], "C++: OO Basics": [[71, "c-oo-basics"]], "C++: Unit Testing": [[72, "c-unit-testing"]], "Graph": [[73, "graph"], [677, "graph"], [838, "graph"], [1094, "graph"], [1095, "graph"], [1099, "graph"], [1108, "graph"], [1122, "graph"], [1129, "graph"]], "Embedded Computing 1": [[74, "embedded-computing-1"], [79, "embedded-computing-1"]], "Current Curriculum": [[74, "current-curriculum"], [75, "current-curriculum"]], "Topics": [[74, "topics"], [75, "topics"], [99, "topics"], [100, "topics"], [102, "topics"], [103, "topics"], [104, "topics"], [105, "topics"], [168, "topics"], [204, "topics"], [204, "id2"], [232, "topics"], [269, "topics"], [272, null], [373, "topics"], [377, "topics"], [474, "topics"], [602, "topics"], [639, "topics"], [645, "topics"], [649, "topics"], [657, "topics"], [662, "topics"], [667, "topics"], [691, "topics"], [692, "topics"], [696, "topics"], [703, "topics"], [710, "topics"], [721, "topics"], [734, "topics"], [735, "topics"], [745, "topics"], [750, "topics"], [783, "topics"], [787, "topics"], [789, "topics"], [791, "topics"], [949, "topics"], [967, null], [969, null], [969, null], [1015, "topics"], [1021, "topics"], [1022, "topics"], [1042, null], [1050, "topics"], [1146, "topics"], [1156, "topics"], [1168, "topics"], [407, "topics"], [422, "topics"], [431, "topics"], [438, "topics"], [444, "topics"], [448, "topics"], [451, "topics"], [455, "topics"], [464, "topics"], [468, "topics"], [473, "topics"], [594, "topics"], [617, "topics"], [620, "topics"], [623, "topics"], [664, "topics"], [673, "topics"], [759, "topics"], [767, "topics"], [771, "topics"], [988, "topics"], [994, "topics"], [1174, "topics"]], "Dependency Graph": [[74, "dependency-graph"], [75, "dependency-graph"]], "Embedded Computing 2": [[75, "embedded-computing-2"], [79, "embedded-computing-2"]], "EX: Race Conditions": [[76, "ex-race-conditions"]], "EX: Avoiding Race Condition": [[77, "ex-avoiding-race-condition"]], "Goals": [[77, "goals"], [83, "goals"], [84, "goals"], [85, "goals"], [86, "goals"], [88, "goals"], [89, "goals"], [90, "goals"], [92, "goals"]], "Outcome": [[77, "outcome"], [83, "outcome"], [84, "outcome"], [85, "outcome"], [86, "outcome"], [211, "outcome"]], "Git Introduction": [[78, "git-introduction"]], "Embedded Computing (STECE-2019)": [[79, "embedded-computing-stece-2019"]], "Overview": [[79, "overview"], [704, "overview"], [752, "overview"], [766, "overview"], [768, "overview"], [774, "overview"], [776, "overview"], [778, "overview"], [779, "overview"], [780, "overview"], [781, "overview"], [788, "overview"], [862, "overview"], [873, "overview"], [941, "overview"], [942, "overview"], [943, "overview"], [943, "id1"], [944, "overview"], [979, "overview"], [930, "overview"]], "Knowledge Transferred": [[79, "knowledge-transferred"]], "Course Setup": [[79, "course-setup"]], "Introduction to Linux and Unix": [[81, "introduction-to-linux-and-unix"]], "Linux Hardware Device Management": [[82, "linux-hardware-device-management"]], "EX: Averaging Sensor": [[83, "ex-averaging-sensor"]], "EX: Averaging Sensor (parallel)": [[84, "ex-averaging-sensor-parallel"]], "EX: LED Temperature Display": [[85, "ex-led-temperature-display"]], "Hardware": [[85, "hardware"], [86, "hardware"]], "EX: Temperature Sensors": [[86, "ex-temperature-sensors"], [93, "ex-temperature-sensors"]], "GPIO": [[87, "gpio"]], "sysfs Interface": [[87, "sysfs-interface"]], "gpiod Interface": [[87, "gpiod-interface"]], "Multithreading": [[88, "multithreading"], [190, "multithreading"], [250, "multithreading"], [276, "multithreading"], [277, "multithreading"], [279, "multithreading"], [322, "multithreading"], [323, "multithreading"], [326, "multithreading"], [336, "multithreading"], [377, "multithreading"], [384, "multithreading"], [1008, "multithreading"], [1044, "multithreading"], [767, "multithreading"]], "Avoiding Race Conditions: Semaphore/Mutex": [[89, "avoiding-race-conditions-semaphore-mutex"]], "Communication: Waiting for Something": [[90, "communication-waiting-for-something"]], "Python Basics": [[91, "python-basics"]], "EX: Averaging Sensor, Display": [[92, "ex-averaging-sensor-display"]], "Simple Web Programming": [[94, "simple-web-programming"]], "Sensors Web Pages": [[95, "sensors-web-pages"]], "Embedded Computing STECE-2020)": [[97, "embedded-computing-stece-2020"]], "SS2022": [[98, "ss2022"]], "Block 1: Linux, and Working With Remote/Embedded Devices": [[98, "block-1-linux-and-working-with-remote-embedded-devices"], [125, "block-1-linux-and-working-with-remote-embedded-devices"], [147, "block-1-linux-and-working-with-remote-embedded-devices"]], "Block 2: C on Linux: Local and Cross Development": [[98, "block-2-c-on-linux-local-and-cross-development"], [125, "block-2-c-on-linux-local-and-cross-development"], [147, "block-2-c-on-linux-local-and-cross-development"]], "Block 3: C++": [[98, "block-3-c"], [125, "block-3-c"], [147, "block-3-c"]], "2022-03-08": [[99, "id1"]], "Homework": [[99, "homework"], [100, "homework"], [102, "homework"], [105, "homework"]], "2022-03-10": [[100, "id1"]], "2022-03-10 (Homework until 2022-03-21)": [[101, "homework-until-2022-03-21"]], "From Exercises: Create/Copy/Move/Remove": [[101, "from-trainings-material-soup-linux-basics-shell-exercises-cp-mv-mkdir-rm-group"]], "From  Exercises: The ls Command": [[101, "from-trainings-material-soup-linux-basics-shell-exercises-ls-group"]], "2022-03-21": [[102, "id1"]], "2022-03-22, 2022-03-24 (KU)": [[103, "ku"]], "2022-03-28": [[104, "id1"]], "2022-04-01": [[105, "id1"]], "SS2022: Logs": [[106, "ss2022-logs"]], "WS2022": [[107, "ws2022"]], "Plan: Evolution": [[107, "plan-evolution"]], "FH Joanneum (Embedded Computing): WS2022/2023 (Questions About Code)": [[108, "fh-joanneum-embedded-computing-ws2022-2023-questions-about-code"]], "Question 1: C++ Inheritance": [[108, "question-1-c-inheritance"]], "Question 2: C++ Inheritance": [[108, "question-2-c-inheritance"]], "Question 3: Memory Leak": [[108, "question-3-memory-leak"]], "Question 4: std::vector": [[108, "question-4-std-vector"]], "FH Joanneum (Embedded Computing): WS2022/2023 (Yes/No Questions)": [[109, "fh-joanneum-embedded-computing-ws2022-2023-yes-no-questions"]], "Cross Development": [[109, "cross-development"], [288, "cross-development"], [1014, "cross-development"], [1015, "cross-development"]], "C++, OO": [[109, "c-oo"]], "Lab Exam 2023-01-17": [[110, "lab-exam-2023-01-17"]], "Project Setup": [[110, "project-setup"], [552, "project-setup"], [1123, "project-setup"]], "Exercises": [[110, "exercises"], [187, "exercises"], [192, "exercises"], [224, "exercises"], [234, "exercises"], [234, "id1"], [234, "id3"], [292, "Exercises"], [297, "exercises"], [316, "exercises"], [316, "id1"], [319, "exercises"], [323, "exercises"], [505, "exercises"], [507, "exercises"], [514, "exercises"], [542, "exercises"], [559, "exercises"], [561, "exercises"], [602, "exercises"], [667, "exercises"], [691, "exercises"], [787, "exercises"], [1021, "exercises"], [1050, "exercises"], [1095, "exercises"], [617, "exercises"], [353, "exercises"], [353, "id1"]], "Exam Submission": [[110, "exam-submission"]], "SS2023: Exam 2023-06-30 (Handout)": [[111, "ss2023-exam-2023-06-30-handout"]], "UNIX/Linux Concepts": [[111, "unix-linux-concepts"], [112, "unix-linux-concepts"]], "Toolchain": [[111, "toolchain"], [112, "toolchain"]], "SS2023: Exam 2023-06-30 (Solved)": [[112, "ss2023-exam-2023-06-30-solved"]], "Exam: Embedded Computing 2 (2024-01-26)": [[113, "exam-embedded-computing-2-2024-01-26"]], "Exam: Embedded Computing 2 (2024-02-02)": [[114, "exam-embedded-computing-2-2024-02-02"]], "WS2023/2024: Exam 2024-02-02 (Sample)": [[115, "ws2023-2024-exam-2024-02-02-sample"]], "Question 1": [[115, "question-1"], [118, "question-1"]], "Question 1.1": [[115, "question-1-1"]], "Question 1.2": [[115, "question-1-2"]], "Question 2": [[115, "question-2"], [118, "question-2"]], "Question 2.1": [[115, "question-2-1"]], "Question 2.2 (Why?)": [[115, "question-2-2-why"]], "Question 3": [[115, "question-3"]], "Exam WS2023/2024": [[116, "exam-ws2023-2024"]], "All Questions": [[116, "all-questions"]], "All questions": [[116, null]], "Exams": [[116, "exams"], [124, "exams"]], "Questions 2024": [[117, "questions-2024"]], "const Objects": [[118, "const-objects"]], "Parameter Passing": [[119, "parameter-passing"]], "Question 1: Which One Is Better?": [[119, "question-1-which-one-is-better"]], "Question2: Why?": [[119, "question2-why"]], "SOLID: Hysteresis With Display": [[120, "solid-hysteresis-with-display"]], "SOLID: Sensor Has ID": [[121, "solid-sensor-has-id"]], "To Be Or Not To Be Virtual": [[122, "to-be-or-not-to-be-virtual"]], "Program Output, Version 1": [[122, "program-output-version-1"]], "Program Output, Version 2": [[122, "program-output-version-2"]], "Working with Git In Our FH-ECE21 Project": [[123, "working-with-git-in-our-fh-ece21-project"]], "Forks And Pull Requests": [[123, "forks-and-pull-requests"]], "Multiple Pull Requests: Pulling Upstream Changes (\u201cSyncing\u201d A Fork)": [[123, "multiple-pull-requests-pulling-upstream-changes-syncing-a-fork"]], "Creating A Remote for Upstream (Done Only Once)": [[123, "creating-a-remote-for-upstream-done-only-once"]], "Updating The Fork (\u201cSyncing\u201d It From Its Upstream)": [[123, "updating-the-fork-syncing-it-from-its-upstream"]], "Fetch upstream Into Your Clone": [[123, "fetch-upstream-into-your-clone"]], "Merge upstream/main Into Local main": [[123, "merge-upstream-main-into-local-main"]], "Push Into Fork On Github": [[123, "push-into-fork-on-github"]], "Embedded Computing (STECE-2021)": [[124, "embedded-computing-stece-2021"]], "Two Semesters": [[124, "two-semesters"]], "Supporting Material": [[124, "supporting-material"]], "SS2023": [[125, "ss2023"]], "Finish: Written Exam": [[125, "finish-written-exam"]], "(DONE) Boiling Pot (The Beginning)": [[126, "done-boiling-pot-the-beginning"]], "Standup Records": [[126, "standup-records"], [127, "standup-records"], [128, "standup-records"], [129, "standup-records"], [130, "standup-records"], [134, "standup-records"], [138, "standup-records"], [142, "standup-records"]], "2023-11-20": [[126, "id1"], [130, "id1"], [138, "id1"], [142, "id1"]], "2023-12-14": [[126, "id2"], [127, "id1"], [130, "id2"], [138, "id2"]], "Requirements": [[126, "requirements"], [127, "requirements"], [128, "requirements"], [129, "requirements"], [130, "requirements"], [131, "requirements"], [132, "requirements"], [133, "requirements"], [134, "requirements"], [136, "requirements"], [138, "requirements"], [142, "requirements"], [494, "requirements"], [518, "requirements"], [549, "requirements"]], "Implementation": [[126, "implementation"], [130, "implementation"], [131, "implementation"], [133, "implementation"], [136, "implementation"], [138, "implementation"], [142, "implementation"], [553, "implementation"]], "Testing": [[126, "testing"], [130, "testing"], [131, "testing"], [133, "testing"], [136, "testing"], [138, "testing"], [142, "testing"], [290, "testing"]], "Future (Not Part Of This Development Cycle)": [[126, "future-not-part-of-this-development-cycle"], [130, "future-not-part-of-this-development-cycle"], [131, "future-not-part-of-this-development-cycle"], [133, "future-not-part-of-this-development-cycle"], [136, "future-not-part-of-this-development-cycle"], [138, "future-not-part-of-this-development-cycle"], [142, "future-not-part-of-this-development-cycle"]], "Dependencies": [[126, "dependencies"], [127, "dependencies"], [128, "dependencies"], [129, "dependencies"], [130, "dependencies"], [131, "dependencies"], [132, "dependencies"], [133, "dependencies"], [134, "dependencies"], [135, "dependencies"], [136, "dependencies"], [137, "dependencies"], [138, "dependencies"], [142, "dependencies"], [355, "dependencies"], [356, "dependencies"], [357, "dependencies"], [358, "dependencies"], [360, "dependencies"], [483, "dependencies"], [500, "dependencies"], [514, "dependencies"], [542, "dependencies"], [559, "dependencies"], [561, "dependencies"], [572, "dependencies"], [639, "dependencies"], [645, "dependencies"], [649, "dependencies"], [657, "dependencies"], [659, "dependencies"], [662, "dependencies"], [667, "dependencies"], [675, "dependencies"], [676, "dependencies"], [678, "dependencies"], [680, "dependencies"], [681, "dependencies"], [682, "dependencies"], [683, "dependencies"], [684, "dependencies"], [685, "dependencies"], [686, "dependencies"], [687, "dependencies"], [688, "dependencies"], [689, "dependencies"], [690, "dependencies"], [696, "dependencies"], [703, "dependencies"], [710, "dependencies"], [721, "dependencies"], [745, "dependencies"], [750, "dependencies"], [775, "dependencies"], [864, "dependencies"], [865, "dependencies"], [866, "dependencies"], [870, "dependencies"], [884, "dependencies"], [885, "dependencies"], [886, "dependencies"], [905, "dependencies"], [910, "dependencies"], [911, "dependencies"], [914, "dependencies"], [947, "dependencies"], [949, "dependencies"], [956, "dependencies"], [962, "dependencies"], [964, "dependencies"], [972, "dependencies"], [974, "dependencies"], [976, "dependencies"], [991, "dependencies"], [1015, "dependencies"], [1017, "dependencies"], [1018, "dependencies"], [1021, "dependencies"], [1022, "dependencies"], [1043, "dependencies"], [1045, "dependencies"], [1092, "dependencies"], [1093, "dependencies"], [1096, "dependencies"], [1097, "dependencies"], [1098, "dependencies"], [1100, "dependencies"], [1101, "dependencies"], [1102, "dependencies"], [1103, "dependencies"], [1104, "dependencies"], [1105, "dependencies"], [1109, "dependencies"], [1110, "dependencies"], [1111, "dependencies"], [1112, "dependencies"], [1113, "dependencies"], [1115, "dependencies"], [1116, "dependencies"], [1117, "dependencies"], [1118, "dependencies"], [1119, "dependencies"], [1120, "dependencies"], [1121, "dependencies"], [1123, "dependencies"], [1124, "dependencies"], [1125, "dependencies"], [1126, "dependencies"], [1127, "dependencies"], [1128, "dependencies"], [1130, "dependencies"], [1131, "dependencies"], [1132, "dependencies"], [1133, "dependencies"], [1146, "dependencies"], [1149, "dependencies"], [1152, "dependencies"], [1156, "dependencies"], [1168, "dependencies"], [988, "dependencies"], [1174, "dependencies"]], "Boiling Pot: Basic Integration": [[127, "boiling-pot-basic-integration"]], "Boiling Pot: Display, And Status Reporting": [[128, "boiling-pot-display-and-status-reporting"]], "Boiling Pot: Full Integration (Display And IoT)": [[129, "boiling-pot-full-integration-display-and-iot"]], "(DONE) Data Logger": [[130, "done-data-logger"]], "Data Logger: CSV Sink": [[131, "data-logger-csv-sink"]], "Column name configuration": [[131, "column-name-configuration"]], "output()": [[131, "output"]], "Data Logger: Integration": [[132, "data-logger-integration"]], "Data Logger: MQTT Sink": [[133, "data-logger-mqtt-sink"]], "MQTT Implementation: mosquitto": [[133, "mqtt-implementation-mosquitto"]], "Installation": [[133, "installation"], [153, "installation"], [389, "installation"], [954, "installation"], [1090, "installation"], [1152, "installation"], [1176, "installation"]], "Wrapper": [[133, "wrapper"]], "Display Interface/Infrastructure": [[134, "display-interface-infrastructure"]], "New Interface PercentageDisplay": [[134, "new-interface-percentagedisplay"]], "Existing Implementations": [[134, "existing-implementations"]], "Composite Display": [[134, "composite-display"]], "Testing: Breadboard Acrobatics, Demo Program": [[134, "testing-breadboard-acrobatics-demo-program"]], "WS2023/24: Group Project - Tasks": [[135, "ws2023-24-group-project-tasks"]], "Tasks": [[135, "tasks"], [143, "tasks"], [995, "tasks"]], "Datalogger": [[135, "datalogger"], [143, "datalogger"]], "Boiling Pot": [[135, "boiling-pot"], [143, "boiling-pot"]], "Peripherals": [[135, "peripherals"], [143, "peripherals"]], "Client": [[135, "client"], [1152, "client"]], "libgpiod Switch": [[136, "libgpiod-switch"]], "Python MQTT Subscriber": [[137, "python-mqtt-subscriber"]], "Notes": [[137, "notes"], [494, "notes"]], "Temperature Display: LED Via A PWM Controller": [[138, "temperature-display-led-via-a-pwm-controller"]], "(DONE) Sensor Interface": [[139, "done-sensor-interface"]], "(DONE) Onewire Sensor": [[140, "done-onewire-sensor"]], "(DONE) Switch Interface": [[141, "done-switch-interface"]], "SysFS GPIO Switch": [[142, "sysfs-gpio-switch"], [143, "sysfs-gpio-switch"]], "WS2023/24": [[143, "ws2023-24"]], "2023-10-05 (6 VO)": [[143, "vo"]], "OO: Recap": [[143, "oo-recap"]], "Plan \ud83d\udcaa": [[143, "plan-muscle"]], "OO: Polymorphism": [[143, "oo-polymorphism"]], "Git Collaboration (via Github, but not necessarily): Forks And Pull Request": [[143, "git-collaboration-via-github-but-not-necessarily-forks-and-pull-request"]], "Tasks, First Round": [[143, "tasks-first-round"]], "2023-11-03 (6 VO)": [[143, "id1"]], "Organizational": [[143, "organizational"]], "OO: Design?": [[143, "oo-design"]], "Project": [[143, "project"], [143, "id3"], [143, "id5"], [143, "id7"], [143, "id9"], [143, "id11"], [143, "id13"], [143, "id15"], [143, "id17"], [192, "project"]], "Hardware Overview": [[143, "hardware-overview"]], "2023-11-09 (3 VO)": [[143, "id2"]], "2023-11-10 (3 VO)": [[143, "id4"]], "2023-11-17 (3 VO)": [[143, "id6"]], "OO, And Software Development At Large": [[143, "oo-and-software-development-at-large"]], "Updating A Fork From Upstream": [[143, "updating-a-fork-from-upstream"]], "2023-11-20 (6 VO)": [[143, "id8"]], "Container Templates (std::map)": [[143, "container-templates-std-map"]], "New Tasks: MQTT And CSV Sink Implementations": [[143, "new-tasks-mqtt-and-csv-sink-implementations"]], "Datalogger Pull Request": [[143, "datalogger-pull-request"]], "Boiling Pot, Switches": [[143, "boiling-pot-switches"]], "2023-12-07 (6 VO)": [[143, "id10"]], "Structure": [[143, "structure"], [169, "structure"], [537, "structure"]], "Renames": [[143, "renames"]], "2023-12-14 (6 VO)": [[143, "id12"]], "2024-01-08 (6 VO)": [[143, "id14"]], "2024-01-11 (6 VO)": [[143, "id16"]], "2024-02-02 (Exam)": [[143, "exam"]], "Relevant Topics": [[143, "relevant-topics"]], "A Sample Exam": [[143, "a-sample-exam"]], "Embedded Computing (STECE-2022)": [[144, "embedded-computing-stece-2022"]], "Gl\u00fchwein Trinken?": [[145, "gluhwein-trinken"]], "Embedded Computing 1 (STECE-2022): Summer": [[146, "embedded-computing-1-stece-2022-summer"]], "Embedded Computing 1 (STECE-2022): Material": [[147, "embedded-computing-1-stece-2022-material"]], "Embedded Computing 1 (STECE-2022): Syllabus": [[148, "embedded-computing-1-stece-2022-syllabus"]], "Lehrveranstaltungsbeschreibung": [[148, "lehrveranstaltungsbeschreibung"]], "Umfang der Lehrveranstaltung": [[148, "umfang-der-lehrveranstaltung"]], "Inhalte": [[148, "inhalte"]], "Inhaltliche Voraussetzungen": [[148, "inhaltliche-voraussetzungen"]], "Ziel": [[148, "ziel"]], "Angaben zur Pr\u00fcfung": [[148, "angaben-zur-prufung"]], "Beurteilungsschema": [[148, "beurteilungsschema"]], "Bewertung der Leistungen": [[148, "bewertung-der-leistungen"]], "Bewertungsschl\u00fcssel": [[148, "bewertungsschlussel"]], "Hilfsmittel bei schriftlichen Pr\u00fcfungen": [[148, "hilfsmittel-bei-schriftlichen-prufungen"]], "Wiederholungsm\u00f6glichkeiten": [[148, "wiederholungsmoglichkeiten"]], "Anwesenheitsvorgabe": [[148, "anwesenheitsvorgabe"]], "Zusatzinformationen": [[148, "zusatzinformationen"]], "Empfohlene Fachliteratur": [[148, "empfohlene-fachliteratur"]], "Inhalte der einzelnen Lehreinheiten": [[148, "inhalte-der-einzelnen-lehreinheiten"]], "Embedded Computing (FH Joanneum Graz)": [[149, "embedded-computing-fh-joanneum-graz"]], "Git Notes": [[150, "git-notes"]], "Bring Local Branch Upstream": [[150, "bring-local-branch-upstream"]], "Create Remote Tracking Branch": [[150, "create-remote-tracking-branch"]], "Create, Submit, Apply Patches": [[150, "create-submit-apply-patches"]], "Packaging this Site on PyPI": [[152, "packaging-this-site-on-pypi"]], "Gaphor": [[153, "gaphor"]], "Decadent": [[153, "decadent"]], "Manual": [[153, "manual"]], "Modeling": [[153, "modeling"]], "Using Gaphor As A Library": [[153, "using-gaphor-as-a-library"]], "Install": [[153, "install"]], "Jupyter Notebook": [[153, "jupyter-notebook"], [221, "jupyter-notebook"], [223, "jupyter-notebook"], [240, "jupyter-notebook"], [242, "jupyter-notebook"], [245, "jupyter-notebook"], [251, "jupyter-notebook"], [256, "jupyter-notebook"], [259, "jupyter-notebook"], [262, "jupyter-notebook"], [364, "Jupyter-Notebook"], [1142, "jupyter-notebook"]], "Hochk\u00f6nig": [[154, "hochkonig"]], "K\u00f6nigsjodler (Klettersteig)": [[154, "konigsjodler-klettersteig"]], "Tour: Werfen - Ostpreussenh\u00fctte - Matrashaus - Werfen": [[154, "tour-werfen-ostpreussenhutte-matrashaus-werfen"]], "Playground": [[155, "playground"]], "In the Works": [[155, "in-the-works"]], "Not Yet in the Works": [[155, "not-yet-in-the-works"]], "pending_xref": [[156, "pending-xref"]], "Audio Chip Bringup": [[157, "audio-chip-bringup"]], "Goal": [[157, "goal"], [159, "goal"], [160, "goal"], [162, "goal"], [297, "goal"], [299, "goal"], [1189, "goal"], [1192, "goal"]], "Findings": [[157, "findings"]], "Get Debian 10 Kernel Config": [[158, "get-debian-10-kernel-config"]], "Run Debian within Qemu": [[158, "run-debian-within-qemu"]], "Extract Kernel Config from /boot": [[158, "extract-kernel-config-from-boot"]], "Finish: Debian Kernel Package etc.": [[159, "finish-debian-kernel-package-etc"]], "Yocto Kernel Bringup on Customer Hardware": [[160, "yocto-kernel-bringup-on-customer-hardware"]], "Open Questions: Everything Works Like Before?": [[160, "open-questions-everything-works-like-before"]], "I2S Audio for a Kontron SMARC Module": [[161, "i2s-audio-for-a-kontron-smarc-module"]], "Dirty Upgrade Path": [[162, "dirty-upgrade-path"]], "Steps": [[162, "steps"]], "Wait for Customer Hardware": [[163, "wait-for-customer-hardware"]], "Extract Kernel from Intel Yocto BSP": [[164, "extract-kernel-from-intel-yocto-bsp"]], "Python Training Improvements": [[165, "python-training-improvements"]], "Beginner Course": [[165, "beginner-course"]], "Exercise Structure": [[165, "exercise-structure"]], "Split Exercises": [[165, "split-exercises"]], "Creating Screencasts": [[166, "creating-screencasts"]], "OpenShot": [[166, "openshot"]], "SEO": [[167, "seo"]], "Sitemap": [[167, "sitemap"]], "Meta Information": [[167, "meta-information"]], "Courses": [[167, "courses"]], "Stacks (Hanging)": [[168, "stacks-hanging"]], "DBus (New Topic)": [[168, "dbus-new-topic"]], "Finish Meta/SEO and Stuff": [[168, "finish-meta-seo-and-stuff"]], "Miscellaneous To Do": [[169, "miscellaneous-to-do"]], "Extensions": [[169, "extensions"]], "reST Todos": [[169, "rest-todos"]], "Styling": [[169, "styling"]], "Convert to RST/S5": [[169, "convert-to-rst-s5"]], "Examples": [[169, "examples"], [498, "examples"], [698, "examples"], [746, "examples"], [861, "examples"], [963, null]], "Convert Existing Content": [[169, "convert-existing-content"]], "Add Missing": [[169, "add-missing"]], "References, Past Trainings": [[169, "references-past-trainings"]], "About": [[169, "about"]], "Blog": [[169, "blog"]], "Learning The Web": [[170, "learning-the-web"]], "Beagleboard: How to Repair NAND (also known as 40W)": [[171, "beagleboard-how-to-repair-nand-also-known-as-40w"]], "Basics": [[171, "basics"], [242, "basics"], [269, "basics"], [284, "basics"], [304, "basics"], [305, "basics"], [305, "id1"], [310, "basics"], [311, "basics"], [311, "id1"], [332, "basics"], [338, "basics"], [344, "basics"], [345, "basics"], [348, "basics"], [349, "basics"], [364, "Basics"], [432, "basics"], [618, "basics"], [630, "basics"], [650, "basics"], [748, "basics"], [863, "basics"], [979, "basics"], [1087, "basics"]], "Getting X-Loader and U-Boot": [[171, "getting-x-loader-and-u-boot"]], "Creating a Bootable MMC/SD card": [[171, "creating-a-bootable-mmc-sd-card"]], "Repairing the NAND": [[171, "repairing-the-nand"]], "Writing X-Loader to NAND": [[171, "writing-x-loader-to-nand"]], "Writing U-Boot to NAND": [[171, "writing-u-boot-to-nand"]], "Porting to Linux (There\u2019s Always A Better Way)": [[172, "porting-to-linux-there-s-always-a-better-way"]], "Processes are Threads": [[172, "processes-are-threads"]], "Signals Aren\u2019t Messages": [[172, "signals-aren-t-messages"]], "References": [[172, null], [172, null], [172, null], [244, "References"], [247, "References"], [609, "references"]], "Message Queues aren\u2019t Message Queues": [[172, "message-queues-aren-t-message-queues"]], "Semaphores and Mutexes": [[172, "semaphores-and-mutexes"]], "Timers": [[172, "timers"]], "Polling": [[172, "polling"]], "Event Dispatching": [[172, "event-dispatching"]], "Interrupts": [[172, "interrupts"], [820, "interrupts"]], "Realtime": [[172, "realtime"], [997, "realtime"], [1184, "realtime"]], "Saving Solid State Disk Life (Gentoo)": [[173, "saving-solid-state-disk-life-gentoo"]], "Rant": [[173, "rant"], [193, "Rant"], [1013, null]], "No Swap": [[173, "no-swap"]], "tmpfs instances here and there": [[173, "tmpfs-instances-here-and-there"]], "Syslog, /var/log/messages": [[173, "syslog-var-log-messages"]], "Mountpoint for messages": [[173, "mountpoint-for-messages"]], "Logrotate": [[173, "logrotate"]], "Kernel I/O Scheduler": [[173, "kernel-i-o-scheduler"]], "Use RAM for the Kernel Build": [[173, "use-ram-for-the-kernel-build"]], "Things that are left": [[173, "things-that-are-left"]], "\u201cWhy ps Sucks\u201d or \u201cCounting Memory Consumption\u201d": [[174, "why-ps-sucks-or-counting-memory-consumption"]], "Process Stack Management": [[174, "process-stack-management"]], "Conclusion": [[174, "conclusion"], [174, "id1"], [934, "conclusion"], [942, "conclusion"]], "Thread (pthread) Stack Management": [[174, "thread-pthread-stack-management"]], "Experiment #1: 100 default threads, eating no stack": [[174, "experiment-1-100-default-threads-eating-no-stack"]], "Experiment #2: 100 default threads, eating up stack": [[174, "experiment-2-100-default-threads-eating-up-stack"]], "Experiment #3: 100 threads with limited stack": [[174, "experiment-3-100-threads-with-limited-stack"]], "Experiment #4: more threads than my system could take (eat no stack)": [[174, "experiment-4-more-threads-than-my-system-could-take-eat-no-stack"]], "Experiment #5: more threads than my system could take (eat stack)": [[174, "experiment-5-more-threads-than-my-system-could-take-eat-stack"]], "How does this work?": [[174, "how-does-this-work"]], "Realtime is different": [[174, "realtime-is-different"]], "Patching and Building the Fedora Kernel": [[175, "patching-and-building-the-fedora-kernel"]], "Why?": [[175, "why"], [950, "why"], [1032, "why"]], "Find Kernel Source (Git), Fix It, and Create Patch": [[175, "find-kernel-source-git-fix-it-and-create-patch"]], "Link": [[175, null], [175, null]], "Prepare the RPM Build": [[175, "prepare-the-rpm-build"]], "Install Prerequisites": [[175, "install-prerequisites"]], "Setup rpmbuild Directory": [[175, "setup-rpmbuild-directory"]], "Download and Install Source RPM For Crashing Kernel": [[175, "download-and-install-source-rpm-for-crashing-kernel"]], "Apply the Patch": [[175, "apply-the-patch"]], "Build the Kernel RPMs": [[175, "build-the-kernel-rpms"]], "Install Kernel": [[175, "install-kernel"]], "Adding a Custom Domain to a Github Pages Project Site": [[176, "adding-a-custom-domain-to-a-github-pages-project-site"]], "Configure a Subdomain, www.faschingbauer.me": [[176, "configure-a-subdomain-www-faschingbauer-me"]], "Configure an Apex Domain, faschingbauer.me": [[176, "configure-an-apex-domain-faschingbauer-me"]], "Using Microsoft Teams on Linux": [[177, "using-microsoft-teams-on-linux"]], "Screen Sharing: X11 Revival": [[177, "screen-sharing-x11-revival"]], "RPM Package (Meh!)": [[177, "rpm-package-meh"]], "Updated on 2020-04-09": [[177, null]], "Annoyance #1: Keeps Running in Background": [[177, "annoyance-1-keeps-running-in-background"]], "Annoyance #2: (Re)Registers Itself For Autostart": [[177, "annoyance-2-re-registers-itself-for-autostart"]], "Run In Browser (My Recommendation)": [[177, "run-in-browser-my-recommendation"]], "Deploying Sphinx Generated Documentation to Github Pages": [[178, "deploying-sphinx-generated-documentation-to-github-pages"]], "Create \u201cSite Publication Repo\u201d": [[178, "create-site-publication-repo"]], "Configure Github Pages for jfasch-home-pages": [[178, "configure-github-pages-for-jfasch-home-pages"]], "Time for Deployment": [[178, "time-for-deployment"]], "Using BigBlueButton for Online Training": [[179, "using-bigbluebutton-for-online-training"]], "In this Article": [[179, null], [180, null], [182, null]], "TL;DR": [[179, "tl-dr"]], "Background Information": [[179, "background-information"]], "Hosting Setup": [[179, "hosting-setup"]], "BigBlueButton Installation": [[179, "bigbluebutton-installation"]], "Functionality Check": [[179, "functionality-check"]], "What Else?": [[179, "what-else"], [937, "what-else"], [950, "what-else"]], "Traunstein via Zierlersteig": [[180, "traunstein-via-zierlersteig"]], "Kaltenbachwildnis": [[180, "kaltenbachwildnis"]], "Anstieg auf den Zierlerberg": [[180, "anstieg-auf-den-zierlerberg"]], "Die Rinne": [[180, "die-rinne"]], "Abstieg": [[180, "abstieg"]], "Grintovec (via Plan\u0161arsko Jezero, \u010ce\u0161ka Ko\u010da)": [[181, "grintovec-via-plansarsko-jezero-ceska-koca"]], "Anreise": [[181, "anreise"]], "\u010ce\u0161ka Ko\u010da": [[181, "ceska-koca"]], "Hinauf": [[181, "hinauf"]], "Runter": [[181, "runter"]], "Zusammenfassung": [[181, "zusammenfassung"]], "How to Brick a \u20ac1399 Dell XPS 13": [[182, "how-to-brick-a-1399-dell-xps-13"]], "What Happened?": [[182, "what-happened"]], "VirtualBox, Fedora, and Secure Boot": [[182, "virtualbox-fedora-and-secure-boot"]], "Enrolling Machine Owner Key (MOK)": [[182, "enrolling-machine-owner-key-mok"]], "Generate Key Pair": [[182, "generate-key-pair"]], "Stage Key for Enrollment": [[182, "stage-key-for-enrollment"]], "Reboot, Brick": [[182, "reboot-brick"]], "Diagnostics": [[182, "diagnostics"]], "Building A Cross Toolchain For The Raspberry Pi, Using crosstool-ng": [[183, "building-a-cross-toolchain-for-the-raspberry-pi-using-crosstool-ng"], [1024, "building-a-cross-toolchain-for-the-raspberry-pi-using-crosstool-ng"]], "Why This Article? Why Not Use A Prebuilt Toolchain?": [[183, "why-this-article-why-not-use-a-prebuilt-toolchain"]], "Installing crosstool-ng": [[183, "installing-crosstool-ng"]], "Prerequisites": [[183, "prerequisites"], [1091, "prerequisites"]], "Installing From Cloned Git Repository": [[183, "installing-from-cloned-git-repository"]], "Installing From Release Tarball": [[183, "installing-from-release-tarball"]], "PATH, And Basic Test": [[183, "path-and-basic-test"]], "Configure Toolchain Build": [[183, "configure-toolchain-build"]], "Base Configuration For The Raspberry": [[183, "base-configuration-for-the-raspberry"]], "Important: glibc Version": [[183, "important-glibc-version"]], "The Error": [[183, "the-error"], [183, "id4"]], "The Fix": [[183, "the-fix"], [183, "id5"]], "Important: GCC Version": [[183, "important-gcc-version"]], "Toolchain Build/Install": [[183, "toolchain-build-install"]], "Test": [[183, "test"], [817, "test"]], "Simplest: C, <stdio.h>": [[183, "simplest-c-stdio-h"]], "C++, <iostream>": [[183, "c-iostream"]], "C++, <thread>": [[183, "c-thread"]], "Packaging/Distributing The Toolchain": [[183, "packaging-distributing-the-toolchain"]], "Afterword": [[183, "afterword"]], "Posts": [[184, "posts"]], "Linux und Open Source": [[185, "linux-und-open-source"]], "Schulung": [[185, "schulung"]], "Entwicklung": [[185, "entwicklung"]], "Beratung": [[185, "beratung"]], "Richtlinien zur Ver\u00f6ffentlichung von Kursmaterial": [[186, "richtlinien-zur-veroffentlichung-von-kursmaterial"]], "Installing Git": [[187, "installing-git"]], "Windows": [[187, "windows"]], "Workflow": [[187, "workflow"]], "Cloning the Repository": [[187, "cloning-the-repository"]], "Exercise Time": [[187, "exercise-time"]], "Conflicts": [[187, "conflicts"]], "Trainer\u2019s Notes": [[187, "trainer-s-notes"]], "Courses: Overview": [[188, "courses-overview"]], "Online Trainings": [[188, null]], "Individual Trainings": [[188, null]], "Everything About Linux": [[188, "everything-about-linux"]], "Programming Languages": [[188, "programming-languages"]], "Miscellaneous but Related": [[188, "miscellaneous-but-related"]], "Qualivision, Z\u00fcrich, 1.10.2013": [[189, "qualivision-zurich-1-10-2013"]], "Fragen und Antworten": [[189, "fragen-und-antworten"]], "Kursnotizen: Linux Embedded 2015-11-30": [[190, "kursnotizen-linux-embedded-2015-11-30"]], "GPIOs in Userspace": [[190, "gpios-in-userspace"]], "CAN Bus": [[190, "can-bus"], [211, "can-bus"]], "Driver Beispiele": [[190, "driver-beispiele"]], "Heizungssteuerung": [[190, "heizungssteuerung"]], "Live Hacking": [[191, "Live-Hacking"], [634, "live-hacking"], [635, "live-hacking"], [637, "live-hacking"], [638, "live-hacking"], [641, "live-hacking"], [642, "live-hacking"], [643, "live-hacking"], [655, "live-hacking"]], "Strings k\u00f6nnen viel: split()": [[191, "Strings-k\u00f6nnen-viel:-split()"]], "Mutability, Immutability: kann man nicht oft genug wiederholen": [[191, "Mutability,-Immutability:-kann-man-nicht-oft-genug-wiederholen"]], "Dictionaries": [[191, "Dictionaries"], [220, "Dictionaries"], [292, "Dictionaries"], [306, "Dictionaries"], [364, "Dictionaries"], [1083, "dictionaries"]], "\u201cHartes\u201d Indizieren \u2026": [[191, "%22Hartes%22-Indizieren-..."]], "\u201cWeiches\u201d Nettfragen \u2026": [[191, "%22Weiches%22-Nettfragen-..."]], "Shortcuts": [[191, "Shortcuts"]], "Objektorientierte Programmierung": [[191, "Objektorientierte-Programmierung"]], "Inheritance": [[191, "Inheritance"], [231, "Inheritance"], [1051, "inheritance"]], "Date and Time and Time Deltas - datetime": [[191, "Date-and-Time-and-Time-Deltas---datetime"]], "Bissl potschert zum Schreiben is scho \u2026 (andere Formen von import)": [[191, "Bissl-potschert-zum-Schreiben-is-scho-...-(andere-Formen-von-import)"]], "String Representations: __str__()": [[191, "String-Representations:-__str__()"]], "subprocess": [[191, "subprocess"], [270, "subprocess"]], "enumerate(), zip()": [[191, "enumerate(),-zip()"]], "List Comprehension": [[191, "List-Comprehension"], [215, "List-Comprehension"], [254, "List-Comprehension"], [324, "List-Comprehension"], [334, "List-Comprehension"], [340, "List-Comprehension"], [1037, "list-comprehension"], [1082, "list-comprehension"]], "exec(), eval()": [[191, "exec(),-eval()"]], "Umgebender Context": [[191, "Umgebender-Context"]], "Eigener Context": [[191, "Eigener-Context"]], "json": [[191, "json"], [267, "json"]], "Python Individualtraining (5 Tage, beginnend 28.10.2019)": [[192, "python-individualtraining-5-tage-beginnend-28-10-2019"], [387, "python-individualtraining-5-tage-beginnend-28-10-2019"]], "Inhalt": [[192, null], [195, null], [1008, null], [1186, "inhalt"]], "Slide 51, \u201cExercises: Basics\u201d": [[192, "slide-51-exercises-basics"]], "Slide 58, \u201cExercises: While Loop\u201d": [[192, "slide-58-exercises-while-loop"]], "Slide 94, \u201cExercises: Lists, Loops, Functions\u201d": [[192, "slide-94-exercises-lists-loops-functions"]], "Slide 121, \u201cExercises: Strings\u201d": [[192, "slide-121-exercises-strings"]], "Famous Generator Introduction": [[192, "famous-generator-introduction"]], "eval(): Convert a String into a Python Data Structure": [[192, "eval-convert-a-string-into-a-python-data-structure"]], "Operator Overloading": [[192, "operator-overloading"], [250, "operator-overloading"], [260, "Operator-Overloading"], [281, "operator-overloading"], [316, "operator-overloading"], [572, "operator-overloading"], [598, "operator-overloading"], [612, "operator-overloading"], [1054, "operator-overloading"]], "Getters and Setters": [[192, "getters-and-setters"]], "More on Listcomprehensions and Generator Expressions": [[192, "more-on-listcomprehensions-and-generator-expressions"]], "More on Local and Global Scope and Global Variables": [[192, "more-on-local-and-global-scope-and-global-variables"]], "Closures: Between Local and Global": [[192, "closures-between-local-and-global"]], "Goals of this Training": [[193, "Goals-of-this-Training"]], "Exercise": [[193, "Exercise"], [234, "exercise"], [276, "exercise"], [276, "id1"], [277, "exercise"], [279, "exercise"], [288, "exercise"], [297, "exercise"], [319, "exercise"], [369, "exercise"], [375, "exercise"], [494, "exercise"], [495, "exercise"], [496, "exercise"], [498, "exercise"], [499, "exercise"], [502, "exercise"], [503, "exercise"], [688, "exercise"], [353, "exercise"]], "Walkthrough: Reduce Image to Eight Colors": [[193, "Walkthrough:-Reduce-Image-to-Eight-Colors"]], "Load Image from File: PIL": [[193, "Load-Image-from-File:-PIL"]], "Image as NumPy Array": [[193, "Image-as-NumPy-Array"]], "Preparation before Clustering": [[193, "Preparation-before-Clustering"]], "Excursion: matplotlib": [[193, "Excursion:-matplotlib"]], "Now Comes the Clustering": [[193, "Now-Comes-the-Clustering"]], "Let KMeans find eight clusters \u2026": [[193, "Let-KMeans-find-eight-clusters-..."]], "Use the result: output-properties": [[193, "Use-the-result:-output-properties"]], "Clusters be their Centers": [[193, "Clusters-be-their-Centers"]], "Post Processing: Restore Alpha, Back into RGBA": [[193, "Post-Processing:-Restore-Alpha,-Back-into-RGBA"]], "Random Live Hacking": [[194, "Random-Live-Hacking"]], "Data Types": [[194, "Data-Types"], [324, "Data-Types"]], "Mutable, Immutable": [[194, "Mutable,-Immutable"]], "Exception, demonstrated using dict access": [[194, "Exception,-demonstrated-using-dict-access"]], "Indices and Slicing": [[194, "Indices-and-Slicing"]], "for loops": [[194, "for-loops"]], "Iterator protocol": [[194, "Iterator-protocol"], [257, "Iterator-protocol"]], "Python (12.11.2019 - 14.11.2019 in Graz)": [[195, "python-12-11-2019-14-11-2019-in-graz"]], "Material": [[195, null], [197, null], [368, null]], "Standardthemen": [[195, "standardthemen"]], "Das Hauptthema: Numerik, NumPy": [[195, "das-hauptthema-numerik-numpy"]], "Lesen von .mat Files": [[195, "lesen-von-mat-files"]], "L\u00f6sen einer Uni-\u00dcbung": [[195, "losen-einer-uni-ubung"]], "Proposal": [[196, "proposal"]], "Signals": [[196, "signals"]], "Posix IPC (and Virtual Memory)": [[196, "posix-ipc-and-virtual-memory"]], "Unix Domain Sockets": [[196, "unix-domain-sockets"]], "Application in your Company": [[196, "application-in-your-company"]], "Further Thoughts": [[196, "further-thoughts"]], "IPC in Linux (10.1.2020 in Graz)": [[197, "ipc-in-linux-10-1-2020-in-graz"]], "\u00dcbung: handgestrickter String, um die Fallen von C++ lustvoll zu erleiden": [[198, "ubung-handgestrickter-string-um-die-fallen-von-c-lustvoll-zu-erleiden"]], "C++ f\u00fcr Embedded C Programmierer (30.3.2020 - 3.4.2020 Baden W\u00fcrttemberg)": [[199, "c-fur-embedded-c-programmierer-30-3-2020-3-4-2020-baden-wurttemberg"]], "Kursinformation": [[199, null]], "Kursaufbau": [[199, "kursaufbau"]], "Kursverlauf": [[199, "kursverlauf"], [207, "kursverlauf"]], "Tag 3": [[199, "tag-3"], [218, "tag-3"], [229, "tag-3"], [251, "tag-3"], [263, "tag-3"]], "Tag 4": [[199, "tag-4"], [229, "tag-4"], [251, "tag-4"], [263, "tag-4"]], "Tag 5": [[199, "tag-5"]], "Installing googletest By Hand": [[200, "installing-googletest-by-hand"]], "Clone googletest Repo": [[200, "clone-googletest-repo"]], "Create Build Directory": [[200, "create-build-directory"], [201, "create-build-directory"], [551, "create-build-directory"]], "CMake, Build and Install": [[200, "cmake-build-and-install"]], "Build Packages to Use Our Private googletest Install": [[200, "build-packages-to-use-our-private-googletest-install"]], "Software Setup, Build": [[201, "software-setup-build"]], "Getting the Source": [[201, "getting-the-source"]], "Install Prerequisites and Dependencies": [[201, "install-prerequisites-and-dependencies"]], "Generate Makefile Build from CMake Sources": [[201, "generate-makefile-build-from-cmake-sources"]], "Argh: Using This Site With Visual Studio Code": [[202, "argh-using-this-site-with-visual-studio-code"]], "Flatpak": [[202, "flatpak"]], "Issues": [[202, "issues"]], "RPM From M$": [[202, "rpm-from-m"]], "Code": [[203, "code"], [206, "code"]], "Python Grundlagen (13.5.2020 - 14.5.2020 bei einer Firma in Graz)": [[204, "python-grundlagen-13-5-2020-14-5-2020-bei-einer-firma-in-graz"]], "Information": [[204, null], [207, null]], "Environment": [[204, "environment"], [869, "environment"]], "Unit Testing and Test Driven Development": [[204, "unit-testing-and-test-driven-development"]], "Python Installation": [[204, "python-installation"], [1059, "python-installation"]], "Programming Environment": [[204, "programming-environment"], [288, "programming-environment"], [1059, "programming-environment"]], "Day 1: Language Basics": [[204, "day-1-language-basics"]], "Day 2: Advanced Topics": [[204, "day-2-advanced-topics"]], "Wrap-Up": [[204, "wrap-up"]], "How Was It?": [[204, "how-was-it"]], "Python Schulung 18. und 19.5.2020": [[205, "Python-Schulung-18.-und-19.5.2020"]], "Das sys Modul": [[205, "Das-sys-Modul"]], "Multiline Strings und Docstrings": [[205, "Multiline-Strings-und-Docstrings"]], "Datentypen (Ausflug)": [[205, "Datentypen-(Ausflug)"]], "Variablen und deren Unterbau": [[205, "Variablen-und-deren-Unterbau"]], "Ausflug \u201cPythonic\u201d: Zuweisung mit Hilfe von \u201cTuple Unpacking\u201d": [[205, "Ausflug-%22Pythonic%22:-Zuweisung-mit-Hilfe-von-%22Tuple-Unpacking%22"]], "Mutability am Beispiel list": [[205, "Mutability-am-Beispiel-list"]], "Integers haben unendliche Breite": [[205, "Integers-haben-unendliche-Breite"]], "Division und Floor Division": [[205, "Division-und-Floor-Division"]], "Konvertierung durch Konstruktoren": [[205, "Konvertierung-durch-Konstruktoren"]], "Welchen Typ haben Typen?": [[205, "Welchen-Typ-haben-Typen?"]], "list und Mutability": [[205, "list-und-Mutability"]], "Tuple und Immutability": [[205, "Tuple-und-Immutability"]], "Besseres Laufzeitverhalten durch Geeignetere Datenstrukturen": [[205, "Besseres-Laufzeitverhalten-durch-Geeignetere-Datenstrukturen"]], "Boolean: Short Circuit Evaluation": [[205, "Boolean:-Short-Circuit-Evaluation"]], "while Loops, und warum sie nicht Pythonic sind": [[205, "while-Loops,-und-warum-sie-nicht-Pythonic-sind"]], "Mehr \u00fcber range(): Iterator Protocol (Folie 161)": [[205, "Mehr-\u00fcber-range():-Iterator-Protocol-(Folie-161)"]], "Mutability, Shallow und Deep Copy": [[205, "Mutability,-Shallow-und-Deep-Copy"]], "Shallow Copy mit dem Slice-Operator": [[205, "Shallow-Copy-mit-dem-Slice-Operator"]], "Deep Copy (copy.deepcopy())": [[205, "Deep-Copy-(copy.deepcopy())"]], "Funktionen": [[205, "Funktionen"]], "Funktionen sind \u201cFirst Class Objects\u201d": [[205, "Funktionen-sind-%22First-Class-Objects%22"]], "Gotcha: Mutable Default Parameters (Folie 90 ff.)": [[205, "Gotcha:-Mutable-Default-Parameters-(Folie-90-ff.)"]], "Globale und lokale Variablen (Folie 92)": [[205, "Globale-und-lokale-Variablen-(Folie-92)"]], "Exercise: uniq() (Folie 94, Punkt 2)": [[205, "Exercise:-uniq()-(Folie-94,-Punkt-2)"]], "Zusammengefasst: hier eine \u201csch\u00f6nere\u201d L\u00f6sung": [[205, "Zusammengefasst:-hier-eine-%22sch\u00f6nere%22-L\u00f6sung"]], "Funktionen als Parameter": [[205, "Funktionen-als-Parameter"]], "List Comprensions (Folie 125)": [[205, "List-Comprensions-(Folie-125)"]], "Generator Expressions: Lesbarkeit und Performance": [[205, "Generator-Expressions:-Lesbarkeit-und-Performance"]], "Code Review": [[205, "Code-Review"]], "pprint() ist praktisch f\u00fcr Debug-Output": [[205, "pprint()-ist-praktisch-f\u00fcr-Debug-Output"]], "Straightforward Datentransformation": [[205, "Straightforward-Datentransformation"]], "Ausflug: More on Dictionaries (Folie 127ff.)": [[205, "Ausflug:-More-on-Dictionaries-(Folie-127ff.)"]], "Now for something completely different: collections.namedtuple": [[205, "Now-for-something-completely-different:-collections.namedtuple"]], "Mehr zur Parameter\u00fcbergabe: variabel lange Argumentlisten": [[205, "Mehr-zur-Parameter\u00fcbergabe:-variabel-lange-Argumentlisten"]], "OO: eine erste Klasse": [[205, "OO:-eine-erste-Klasse"]], "Python Individualtraining (18.5.2020 - 19.5.2020)": [[207, "python-individualtraining-18-5-2020-19-5-2020"], [387, "python-individualtraining-18-5-2020-19-5-2020"]], "Weiterf\u00fchrende Links": [[207, "weiterfuhrende-links"]], "Python Advanced (7.9.2020 - 10.9.2020)": [[208, "python-advanced-7-9-2020-10-9-2020"], [387, "python-advanced-7-9-2020-10-9-2020"]], "Preparation": [[208, "preparation"], [209, "preparation"], [211, "preparation"], [212, "preparation"], [213, "preparation"], [214, "preparation"], [614, "preparation"]], "Workspace Setup": [[208, "workspace-setup"], [209, "workspace-setup"], [211, "workspace-setup"], [213, "workspace-setup"]], "Github for Exercises": [[208, "github-for-exercises"], [209, "github-for-exercises"]], "Agenda": [[208, "agenda"], [209, "agenda"], [211, "agenda"], [212, "agenda"], [213, "agenda"], [214, "agenda"], [219, "agenda"], [223, "agenda"], [224, "agenda"], [261, "agenda"], [266, "agenda"], [278, "agenda"], [287, "agenda"], [308, "agenda"], [316, "agenda"], [1191, "agenda"], [352, "agenda"]], "Advanced Core Python Topics": [[208, "advanced-core-python-topics"]], "Special Topics": [[208, "special-topics"]], "Day 1": [[208, "day-1"], [209, "day-1"], [211, "day-1"], [212, "day-1"], [213, "day-1"], [223, "day-1"], [224, "day-1"], [233, "day-1"], [234, "day-1"], [239, "day-1"], [242, "day-1"], [245, "day-1"], [248, "day-1"], [255, "day-1"], [297, "day-1"], [298, "day-1"], [299, "day-1"], [305, "day-1"], [309, "day-1"], [311, "day-1"], [316, "day-1"], [323, "day-1"], [349, "day-1"], [353, "day-1"]], "Day 2": [[208, "day-2"], [209, "day-2"], [211, "day-2"], [212, "day-2"], [213, "day-2"], [223, "day-2"], [224, "day-2"], [233, "day-2"], [234, "day-2"], [239, "day-2"], [242, "day-2"], [244, "Day-2"], [245, "day-2"], [248, "day-2"], [255, "day-2"], [288, "day-2"], [297, "day-2"], [299, "day-2"], [305, "day-2"], [309, "day-2"], [316, "day-2"], [323, "day-2"], [349, "day-2"], [353, "day-2"]], "Day 3": [[208, "day-3"], [209, "day-3"], [211, "day-3"], [212, "day-3"], [213, "day-3"], [223, "day-3"], [224, "day-3"], [233, "day-3"], [234, "day-3"], [239, "day-3"], [244, "Day-3"], [245, "day-3"], [248, "day-3"], [255, "day-3"], [288, "day-3"], [291, "day-3"], [297, "day-3"], [299, "day-3"], [305, "day-3"], [309, "day-3"], [311, "day-3"], [323, "day-3"], [349, "day-3"]], "Day 4": [[208, "day-4"], [211, "day-4"], [223, "day-4"], [224, "day-4"], [233, "day-4"], [234, "day-4"], [288, "day-4"]], "Recommended Tutorials": [[208, "recommended-tutorials"]], "After Work Party": [[208, "after-work-party"], [239, "after-work-party"]], "Python Basics (28.9.2020 - 30.9.2020)": [[209, "python-basics-28-9-2020-30-9-2020"], [387, "python-basics-28-9-2020-30-9-2020"]], "Iterables": [[210, "Iterables"]], "set constructor": [[210, "set-constructor"]], "Fast vs. Simple": [[210, "Fast-vs.-Simple"]], "for, Iterables, range and Generators": [[210, "for,-Iterables,-range-and-Generators"]], "Tuples, Tuple Unpacking, Returning Multiple Values from Functions": [[210, "Tuples,-Tuple-Unpacking,-Returning-Multiple-Values-from-Functions"]], "Object Oriented Programming": [[210, "Object-Oriented-Programming"], [260, "Object-Oriented-Programming"], [273, "Object-Oriented-Programming"], [284, "object-oriented-programming"], [298, "object-oriented-programming"], [300, "object-oriented-programming"], [301, "object-oriented-programming"], [304, "object-oriented-programming"], [305, "object-oriented-programming"], [310, "object-oriented-programming"], [316, "object-oriented-programming"], [319, "object-oriented-programming"], [322, "object-oriented-programming"], [323, "object-oriented-programming"], [326, "object-oriented-programming"], [332, "object-oriented-programming"], [338, "object-oriented-programming"], [344, "object-oriented-programming"], [345, "object-oriented-programming"], [348, "object-oriented-programming"], [349, "object-oriented-programming"], [476, "object-oriented-programming"], [1050, "object-oriented-programming"]], "datetime": [[210, "datetime"], [237, "datetime"], [292, "datetime"]], "Python Basic and Advanced (19.10.2020 - 22.10.2020)": [[211, "python-basic-and-advanced-19-10-2020-22-10-2020"]], "Additional Topics, brought in by Thomas": [[211, "additional-topics-brought-in-by-thomas"]], "Notebook": [[211, "notebook"], [232, "notebook"], [247, "Notebook"], [369, "notebook"]], "Tutorials": [[211, "tutorials"], [239, "tutorials"]], "Linux on Raspberry Pi": [[212, "linux-on-raspberry-pi"]], "Cloud Machine": [[212, "cloud-machine"]], "Raspberry on Participant\u2019s Desks": [[212, "raspberry-on-participant-s-desks"]], "Basic security": [[212, "basic-security"]], "Interlude: SD Card Setup (No Bloody Disk Imager)": [[212, "interlude-sd-card-setup-no-bloody-disk-imager"]], "GPIO, using sysfs interface": [[212, "gpio-using-sysfs-interface"]], "In the Wild: Watchdog": [[212, "in-the-wild-watchdog"]], "TODO": [[212, "todo"], [356, "todo"], [357, "todo"], [358, "todo"], [1088, "todo"], [1151, "todo"]], "Support Material": [[212, "support-material"]], "Python Basics (23.11.2020 - 25.11.2020)": [[213, "python-basics-23-11-2020-25-11-2020"], [387, "python-basics-23-11-2020-25-11-2020"]], "Exercise: JSON": [[213, "exercise-json"]], "Linux Basics (30.11.2020 - 3.12.2020)": [[214, "linux-basics-30-11-2020-3-12-2020"], [387, "linux-basics-30-11-2020-3-12-2020"]], "6 Grundlegende Sprachelemente": [[215, "6-Grundlegende-Sprachelemente"]], "6.1 Syntax und Semantik": [[215, "6.1-Syntax-und-Semantik"]], "Zur Syntax mit der Einr\u00fcckung \u2026": [[215, "Zur-Syntax-mit-der-Einr\u00fcckung-..."]], "In Python k\u00f6nnen Variablen ihren Typ \u00e4ndern": [[215, "In-Python-k\u00f6nnen-Variablen-ihren-Typ-\u00e4ndern"]], "Kommentare": [[215, "Kommentare"]], "6.2 Grundlegende Elemente einer Sprache": [[215, "6.2-Grundlegende-Elemente-einer-Sprache"]], "6.3 Standarddatentypen (elementare Datentypen)": [[215, "6.3-Standarddatentypen-(elementare-Datentypen)"]], "Integers sind beliebig gro\u00df": [[215, "Integers-sind-beliebig-gro\u00df"]], "Vergleichsoperatoren": [[215, "Vergleichsoperatoren"]], "Operator Pr\u00e4zedenz: Punkt vor Strichrechnung": [[215, "Operator-Pr\u00e4zedenz:-Punkt-vor-Strichrechnung"]], "Floor Division": [[215, "Floor-Division"]], "Modulo Operator: %": [[215, "Modulo-Operator:-%"]], "(Un\u00e4rer) Negations Operator": [[215, "(Un\u00e4rer)-Negations-Operator"]], "Operator Pr\u00e4zedenz erzwingen": [[215, "Operator-Pr\u00e4zedenz-erzwingen"]], "Strings gibts auch (Zeichenketten)": [[215, "Strings-gibts-auch-(Zeichenketten)"]], "Raw Strings": [[215, "Raw-Strings"], [237, "Raw-Strings"], [254, "Raw-Strings"], [260, "Raw-Strings"], [282, "Raw-Strings"], [312, "Raw-Strings"], [1079, "raw-strings"]], "f-Strings": [[215, "f-Strings"], [334, "f-Strings"]], "Konvertierungen": [[215, "Konvertierungen"]], "Boolean": [[215, "Boolean"], [241, "Boolean"], [244, "Boolean"], [252, "Boolean"], [254, "Boolean"], [264, "Boolean"], [267, "Boolean"], [340, "Boolean"], [1068, "boolean"]], "Pr\u00e4zendenzregeln: and vor or": [[215, "Pr\u00e4zendenzregeln:-and-vor-or"]], "6.4 Literale f\u00fcr primitive Datentypen": [[215, "6.4-Literale-f\u00fcr-primitive-Datentypen"]], "6.5 Variablen und Konstanten": [[215, "6.5-Variablen-und-Konstanten"]], "6.6 Operatoren": [[215, "6.6-Operatoren"]], "6.7 Ausdr\u00fccke und Operatorrangfolgen": [[215, "6.7-Ausdr\u00fccke-und-Operatorrangfolgen"]], "6.8 \u00dcbungen": [[215, "6.8-\u00dcbungen"]], "Zwei Variablen vertauschen": [[215, "Zwei-Variablen-vertauschen"]], "Zwei Variablen vertauschen mit Tuple Unpacking": [[215, "Zwei-Variablen-vertauschen-mit-Tuple-Unpacking"]], "\u00dcbung 1, 5.": [[215, "\u00dcbung-1,-5."]], "7 Kontrollstrukturen": [[215, "7-Kontrollstrukturen"]], "7.1 Anweisungen und Folgen": [[215, "7.1-Anweisungen-und-Folgen"]], "7.2 Bedingungen und Kontrollstrukturen": [[215, "7.2-Bedingungen-und-Kontrollstrukturen"]], "7.3 Grundlagen zu Verzweigungen": [[215, "7.3-Grundlagen-zu-Verzweigungen"]], "7.4 Bedingte Anweisung": [[215, "7.4-Bedingte-Anweisung"]], "7.5 Verzweigung": [[215, "7.5-Verzweigung"]], "7.6 Geschachtelte Verzweigung": [[215, "7.6-Geschachtelte-Verzweigung"]], "7.7 Mehrfache Verzweigung (Fallauswahl)": [[215, "7.7-Mehrfache-Verzweigung-(Fallauswahl)"]], "7.8 Schleifen": [[215, "7.8-Schleifen"]], "7.9 Z\u00e4hlergesteuerte Schleifen (Iteration)": [[215, "7.9-Z\u00e4hlergesteuerte-Schleifen-(Iteration)"]], "7.10 Kopfgesteuerte bedingte Schleife": [[215, "7.10-Kopfgesteuerte-bedingte-Schleife"]], "7.11 Fu\u00dfgesteuerte bedingte Schleife": [[215, "7.11-Fu\u00dfgesteuerte-bedingte-Schleife"]], "(jf) break und continue": [[215, "(jf)-break-und-continue"]], "(jf) Sequential Datatypes": [[215, "(jf)-Sequential-Datatypes"]], "(jf) for Loops": [[215, "(jf)-for-Loops"]], "Iteration mit Dictionaries": [[215, "Iteration-mit-Dictionaries"]], "(jf) The range() Function": [[215, "(jf)-The-range()-Function"]], "7.12 Schnell\u00fcbersicht": [[215, "7.12-Schnell\u00fcbersicht"]], "7.13 Sprunganweisungen": [[215, "7.13-Sprunganweisungen"]], "7.14 Endlosschleifen": [[215, "7.14-Endlosschleifen"]], "7.15 \u00dcbungen": [[215, "7.15-\u00dcbungen"]], "8 Elementare Datenstrukturen": [[215, "8-Elementare-Datenstrukturen"]], "8.1 Warum werden Datenstrukturen ben\u00f6tigt?": [[215, "8.1-Warum-werden-Datenstrukturen-ben\u00f6tigt?"]], "(jf) Compound Datatypes": [[215, "(jf)-Compound-Datatypes"]], "(jf) References, (Im)mutability": [[215, "(jf)-References,-(Im)mutability"]], "(jf) Laufzeitverhalten bei der Suche (der in Operator)": [[215, "(jf)-Laufzeitverhalten-bei-der-Suche-(der-in-Operator)"]], "Liste": [[215, "Liste"]], "Set": [[215, "Set"], [236, "Set"], [237, "Set"], [241, "Set"], [241, "id1"], [244, "Set"], [247, "Set"], [247, "id1"], [254, "Set"], [267, "Set"], [270, "Set"], [282, "Set"], [285, "Set"], [285, "id5"], [292, "Set"], [302, "Set"], [306, "Set"], [324, "Set"], [328, "Set"], [340, "Set"], [350, "Set"]], "8.2 Arrays": [[215, "8.2-Arrays"]], "8.3 Eindimensionale Arrays": [[215, "8.3-Eindimensionale-Arrays"]], "8.4 Records": [[215, "8.4-Records"]], "8.5 Zeichenketten": [[215, "8.5-Zeichenketten"]], "8.6 Tupel und Listen": [[215, "8.6-Tupel-und-Listen"]], "sorted, reversed": [[215, "sorted,-reversed"]], "8.7 Dictionaries": [[215, "8.7-Dictionaries"]], "(jf) Records in Python": [[215, "(jf)-Records-in-Python"]], "8.8 Mengen": [[215, "8.8-Mengen"]], "8.9 Besondere Datenstrukturen anhand von Stapel (Stack) und Schlangen (Queue)": [[215, "8.9-Besondere-Datenstrukturen-anhand-von-Stapel-(Stack)-und-Schlangen-(Queue)"]], "8.10 \u00dcbungen": [[215, "8.10-\u00dcbungen"]], "\u00dcbung 1": [[215, "\u00dcbung-1"]], "Versuch 1: in und index()": [[215, "Versuch-1:-in-und-index()"]], "Versuch 2: Zur\u00fcck zu while \u2026": [[215, "Versuch-2:-Zur\u00fcck-zu-while-..."]], "Versuch 3: hybrid potschert mit for": [[215, "Versuch-3:-hybrid-potschert-mit-for"]], "Versuch 4: supergscheit mit for und enumerate()": [[215, "Versuch-4:-supergscheit-mit-for-und-enumerate()"]], "9 Methoden, Prozeduren und Funktionen": [[215, "9-Methoden,-Prozeduren-und-Funktionen"]], "Funktionspointer (so heissts in C): Funktionsobjekte (Python)": [[215, "Funktionspointer-(so-heissts-in-C):-Funktionsobjekte-(Python)"]], "(jf) Primzahlenbeispiel mit Funktion": [[215, "(jf)-Primzahlenbeispiel-mit-Funktion"]], "(jf) Local vs. Global Scope": [[215, "(jf)-Local-vs.-Global-Scope"]], "Laufzeitfehler: Variable existiert nicht": [[215, "Laufzeitfehler:-Variable-existiert-nicht"]], "Lokale Variable": [[215, "Lokale-Variable"]], "Globale Variable (lesen)": [[215, "Globale-Variable-(lesen)"]], "Globale Variable (schreiben/zuweisen)": [[215, "Globale-Variable-(schreiben/zuweisen)"]], "Fehlerfall von Peter": [[215, "Fehlerfall-von-Peter"]], "9.1 Unterprogramme": [[215, "9.1-Unterprogramme"]], "9.2 Parameter\u00fcbergabe": [[215, "9.2-Parameter\u00fcbergabe"]], "9.3 Parameter\u00fcbergabe als Wert": [[215, "9.3-Parameter\u00fcbergabe-als-Wert"]], "9.4 Parameter\u00fcbergabe \u00fcber Referenzen": [[215, "9.4-Parameter\u00fcbergabe-\u00fcber-Referenzen"]], "9.5 R\u00fcckgabewerte von Funktionen oder Methoden": [[215, "9.5-R\u00fcckgabewerte-von-Funktionen-oder-Methoden"]], "9.6 Innere Funktionen - Closures": [[215, "9.6-Innere-Funktionen---Closures"]], "9.7 Standardbibliotheken und Built-in-Funktionalit\u00e4ten": [[215, "9.7-Standardbibliotheken-und-Built-in-Funktionalit\u00e4ten"]], "9.8 \u00dcbungen": [[215, "9.8-\u00dcbungen"]], "Programmierung Grundlagen (13. und 14.1.2021)": [[216, "programmierung-grundlagen-13-und-14-1-2021"]], "Struktur": [[216, "struktur"]], "Herdt Kapitel 6: Grundlegende Sprachelemente": [[216, "herdt-kapitel-6-grundlegende-sprachelemente"], [1199, "herdt-kapitel-6-grundlegende-sprachelemente"]], "Herdt Kapitel 7: Kontrollstrukturen": [[216, "herdt-kapitel-7-kontrollstrukturen"], [1199, "herdt-kapitel-7-kontrollstrukturen"]], "Verzweigung": [[216, "verzweigung"], [1199, "verzweigung"]], "Schleifen": [[216, "schleifen"], [1199, "schleifen"]], "Herdt Kapitel 8: Elementare Datenstrukturen": [[216, "herdt-kapitel-8-elementare-datenstrukturen"], [1199, "herdt-kapitel-8-elementare-datenstrukturen"]], "Herdt Kapitel 9: Methoden, Prozeduren und Funktionen": [[216, "herdt-kapitel-9-methoden-prozeduren-und-funktionen"], [1199, "herdt-kapitel-9-methoden-prozeduren-und-funktionen"]], "Python Basics (22.2.2021 - 24.2.2021)": [[218, "python-basics-22-2-2021-24-2-2021"], [387, "python-basics-22-2-2021-24-2-2021"]], "Links (ToDo)": [[218, "links-todo"]], "Linux Kernel Driver Development Basics (14.12.2020)": [[219, "linux-kernel-driver-development-basics-14-12-2020"]], "Books": [[219, "books"], [269, "books"], [311, "books"], [1136, "books"]], "Python Advanced": [[220, "Python-Advanced"]], "Data Types Recap": [[220, "Data-Types-Recap"]], "Sequential Datatypes": [[220, "Sequential-Datatypes"], [252, "Sequential-Datatypes"], [264, "Sequential-Datatypes"], [334, "Sequential-Datatypes"], [1071, "sequential-datatypes"], [1071, "id1"]], "Slicing etc.": [[220, "Slicing-etc."]], "Mapping Types (Dictionary, und mehr)": [[220, "Mapping-Types-(Dictionary,-und-mehr)"]], "Sets": [[220, "Sets"], [220, "id1"], [228, "Sets"], [346, "Sets"], [1084, "sets"]], "for Schleife, ganz kurz": [[220, "for-Schleife,-ganz-kurz"]], "Tuple": [[220, "Tuple"], [244, "Tuple"], [247, "Tuple"], [254, "Tuple"], [267, "Tuple"], [270, "Tuple"], [282, "Tuple"], [340, "Tuple"], [346, "Tuple"]], "Funktionen mit mehreren Returnwerten (bzw. Tuple Unpacking)": [[220, "Funktionen-mit-mehreren-Returnwerten-(bzw.-Tuple-Unpacking)"]], "Iteration \u00fcber Containerdatentypen": [[220, "Iteration-\u00fcber-Containerdatentypen"]], "Listen": [[220, "Listen"], [254, "Listen"], [364, "Listen"]], "Was heisst \u201cUntypisiert\u201d?": [[220, "Was-heisst-%22Untypisiert%22?"]], "Wir l\u00f6schen den Integer": [[220, "Wir-l\u00f6schen-den-Integer"]], "Iterator Protocol, for Loops": [[220, "Iterator-Protocol,-for-Loops"]], "Iterable: Der Begriff": [[220, "Iterable:-Der-Begriff"]], "Zufall": [[220, "Zufall"]], "Regular Expressions": [[220, "Regular-Expressions"], [273, "Regular-Expressions"], [285, "Regular-Expressions"], [334, "Regular-Expressions"], [340, "Regular-Expressions"], [926, "regular-expressions"]], "enumerate()": [[220, "enumerate()"], [228, "enumerate()"], [231, "enumerate()"], [267, "enumerate()"], [285, "enumerate()"], [302, "enumerate()"], [324, "enumerate()"], [346, "enumerate()"]], "JSON": [[220, "JSON"], [237, "JSON"], [247, "JSON"], [273, "JSON"], [282, "JSON"], [317, "JSON"], [320, "JSON"]], "2021-03-15": [[221, "id1"]], "Exercises (auf Github)": [[221, "exercises-auf-github"]], "Download": [[221, null], [223, null]], "Hallo Jupyter Notebook": [[222, "Hallo-Jupyter-Notebook"]], "Syntax": [[222, "Syntax"], [292, "Syntax"], [334, "Syntax"], [346, "Syntax"], [364, "Syntax"], [364, "id1"]], "Raw strings": [[222, "Raw-strings"]], "Variablen": [[222, "Variablen"], [254, "Variablen"]], "Tuple Unpacking": [[222, "Tuple-Unpacking"], [264, "Tuple-Unpacking"], [282, "Tuple-Unpacking"], [292, "Tuple-Unpacking"], [328, "Tuple-Unpacking"], [334, "Tuple-Unpacking"], [346, "Tuple-Unpacking"], [363, "Tuple-Unpacking"], [364, "Tuple-Unpacking"], [364, "id2"]], "Speicher, Memory Management": [[222, "Speicher,-Memory-Management"]], "Mutable vs. Immutable": [[222, "Mutable-vs.-Immutable"], [273, "Mutable-vs.-Immutable"]], "Wie sch\u00fctze ich mich davor?": [[222, "Wie-sch\u00fctze-ich-mich-davor?"]], "Aber!!!!": [[222, "Aber!!!!"]], "Dictionary": [[222, "Dictionary"], [228, "Dictionary"], [236, "Dictionary"], [237, "Dictionary"], [241, "Dictionary"], [241, "id2"], [244, "Dictionary"], [247, "Dictionary"], [247, "id2"], [254, "Dictionary"], [267, "Dictionary"], [270, "Dictionary"], [282, "Dictionary"], [285, "Dictionary"], [285, "id4"], [292, "Dictionary"], [302, "Dictionary"], [306, "Dictionary"], [312, "Dictionary"], [324, "Dictionary"], [328, "Dictionary"], [340, "Dictionary"], [346, "Dictionary"], [350, "Dictionary"]], "Exercise: Liste von gemischten Datentypen": [[222, "Exercise:-Liste-von-gemischten-Datentypen"]], "Konstruktoren": [[222, "Konstruktoren"]], "Tag 2: Wiederholung, Fragen": [[222, "Tag-2:-Wiederholung,-Fragen"]], "for und range()": [[222, "for-und-range()"]], "Objektidentit\u00e4t": [[222, "Objektidentit\u00e4t"]], "Das with Statement": [[222, "Das-with-Statement"], [231, "Das-with-Statement"]], "Tuple Unpacking, Dictionary Iteration": [[222, "Tuple-Unpacking,-Dictionary-Iteration"]], "String Operationen": [[222, "String-Operationen"]], "enumerate(), und verlorene Indices": [[222, "enumerate(),-und-verlorene-Indices"]], "NumPy, matplotlib": [[222, "NumPy,-matplotlib"]], "Interpolation mittels scipy": [[222, "Interpolation-mittels-scipy"]], "Python Basic and Advanced (22.3.2021 - 25.3.2021)": [[223, "python-basic-and-advanced-22-3-2021-25-3-2021"]], "(Tutorial) Videos": [[223, "tutorial-videos"]], "Linux Basics, Shell Scripting (2021-03-29)": [[224, "linux-basics-shell-scripting-2021-03-29"]], "Course Details": [[224, null]], "Course Preparation": [[224, "course-preparation"], [277, "course-preparation"], [279, "course-preparation"], [287, "course-preparation"]], "SSH": [[224, "ssh"], [374, "ssh"]], "Linux and/or Shell on Windows Host": [[224, "linux-and-or-shell-on-windows-host"]], "Editor Support for Shell Scripting": [[224, "editor-support-for-shell-scripting"]], "Programmierung Grundlagen (12. und 13.4.2021)": [[226, "programmierung-grundlagen-12-und-13-4-2021"]], "Syntax etc.": [[228, "Syntax-etc."], [260, "Syntax-etc."], [306, "Syntax-etc."], [1063, "syntax-etc"]], "Comments vs. Documentation": [[228, "Comments-vs.-Documentation"], [1063, "comments-vs-documentation"]], "Variables": [[228, "Variables"], [241, "Variables"], [244, "Variables"], [260, "Variables"], [270, "Variables"], [302, "Variables"], [306, "Variables"], [328, "Variables"], [334, "Variables"], [340, "Variables"], [346, "Variables"], [350, "Variables"], [364, "Variables"], [1065, "variables"]], "Assignment Fun": [[228, "Assignment-Fun"], [267, "Assignment-Fun"], [1065, "assignment-fun"]], "Assignment Details": [[228, "Assignment-Details"], [260, "Assignment-Details"], [267, "Assignment-Details"], [346, "Assignment-Details"], [350, "Assignment-Details"], [364, "Assignment-Details"], [1065, "assignment-details"]], "Operators": [[228, "Operators"], [264, "Operators"]], "Integer Arithmetic": [[228, "Integer-Arithmetic"]], "String Methods": [[228, "String-Methods"], [346, "String-Methods"], [363, "String-Methods"]], "Datatype Conversions": [[228, "Datatype-Conversions"], [252, "Datatype-Conversions"], [254, "Datatype-Conversions"], [260, "Datatype-Conversions"], [264, "Datatype-Conversions"], [267, "Datatype-Conversions"], [285, "Datatype-Conversions"], [302, "Datatype-Conversions"], [306, "Datatype-Conversions"], [312, "Datatype-Conversions"], [324, "Datatype-Conversions"], [328, "Datatype-Conversions"], [334, "Datatype-Conversions"], [346, "Datatype-Conversions"], [364, "Datatype-Conversions"], [1066, "datatype-conversions"]], "Strings k\u00f6nnen alles!": [[228, "Strings-k\u00f6nnen-alles!"]], "Complex Datatypes": [[228, "Complex-Datatypes"], [364, "Complex-Datatypes"]], "List (mutable)": [[228, "List-(mutable)"], [241, "List-(mutable)"], [334, "List-(mutable)"]], "extend()? Iterable?": [[228, "extend()?-Iterable?"]], "Tuple (wie Liste, nur immutable)": [[228, "Tuple-(wie-Liste,-nur-immutable)"]], "in Operator": [[228, "in-Operator"], [267, "in-Operator"]], "Iteration \u00fcber Daten: mittels for": [[228, "Iteration-\u00fcber-Daten:-mittels-for"]], "enumerate(), sum(), map(), und so weiter": [[228, "enumerate(),-sum(),-map(),-und-so-weiter"]], "sum()": [[228, "sum()"]], "map()": [[228, "map()"], [231, "map()"]], "list() function": [[228, "list()-function"]], "Performance: in Operator, und list und set": [[228, "Performance:-in-Operator,-und-list-und-set"]], "Dynamische Evaluierung: eval()": [[228, "Dynamische-Evaluierung:-eval()"]], "Python Grundlagen (2021-05-03 - 2021-05-05)": [[229, "python-grundlagen-2021-05-03-2021-05-05"], [387, "python-grundlagen-2021-05-03-2021-05-05"]], "Weiterf\u00fchrende Information": [[229, "weiterfuhrende-information"]], "Visual Studio Code": [[229, "visual-studio-code"], [245, "visual-studio-code"], [1136, "visual-studio-code"]], "Python Beginner Tutorials": [[229, "python-beginner-tutorials"], [269, "python-beginner-tutorials"], [1136, "python-beginner-tutorials"]], "NumPy and Data Science Tutorials": [[229, "numpy-and-data-science-tutorials"], [269, "numpy-and-data-science-tutorials"], [272, "numpy-and-data-science-tutorials"], [305, "numpy-and-data-science-tutorials"], [1136, "numpy-and-data-science-tutorials"]], "PyPI (Installing Modules that don\u2019t come as Batteries)": [[229, "pypi-installing-modules-that-don-t-come-as-batteries"], [1136, "pypi-installing-modules-that-don-t-come-as-batteries"]], "Git, and Github": [[229, "git-and-github"], [1136, "git-and-github"]], "Conference Talks": [[229, "conference-talks"], [305, "conference-talks"], [1136, "conference-talks"]], "Python Grundlagen (Jupyter Notebook)": [[230, "python-grundlagen-jupyter-notebook"], [243, "python-grundlagen-jupyter-notebook"], [246, "python-grundlagen-jupyter-notebook"], [249, "python-grundlagen-jupyter-notebook"], [268, "python-grundlagen-jupyter-notebook"], [271, "python-grundlagen-jupyter-notebook"], [274, "python-grundlagen-jupyter-notebook"], [283, "python-grundlagen-jupyter-notebook"], [286, "python-grundlagen-jupyter-notebook"], [307, "python-grundlagen-jupyter-notebook"]], "import zipfile": [[231, "import-zipfile"]], "Read Contents \u2026": [[231, "Read-Contents-..."]], "Extract One Member": [[231, "Extract-One-Member"]], "All in One, Using with": [[231, "All-in-One,-Using-with"]], "Functionality: Methods": [[231, "Functionality:-Methods"]], "Class Attributes vs. Instance Attributes (not Variables)": [[231, "Class-Attributes-vs.-Instance-Attributes-(not-Variables)"]], "Instance Attributes": [[231, "Instance-Attributes"]], "Class Attributes": [[231, "Class-Attributes"]], "Public, Protected, Private": [[231, "Public,-Protected,-Private"]], "Properties": [[231, "Properties"], [260, "Properties"], [491, "properties"], [1055, "properties"]], "Functions, Positional and Keyword Arguments": [[231, "Functions,-Positional-and-Keyword-Arguments"]], "Positional Arguments": [[231, "Positional-Arguments"]], "Keyword Arguments": [[231, "Keyword-Arguments"], [252, "Keyword-Arguments"], [365, "Keyword-Arguments"], [1077, "keyword-arguments"]], "Mixing Positional and Keyword Arguments": [[231, "Mixing-Positional-and-Keyword-Arguments"]], "The range() Function": [[231, "The-range()-Function"], [237, "The-range()-Function"], [244, "The-range()-Function"]], "Functional Programming, Iteration, yield, map(), filter(), \u2026": [[231, "Functional-Programming,-Iteration,-yield,-map(),-filter(),-..."]], "Iterable": [[231, "Iterable"], [247, "Iterable"]], "list(), and iterable?": [[231, "list(),-and-iterable?"]], "Tuple Unpacking and the Rest": [[231, "Tuple-Unpacking-and-the-Rest"]], "Decorators, etc.": [[231, "Decorators,-etc."]], "NoneType and None": [[231, "NoneType-and-None"]], "File I/O": [[231, "File-I/O"], [260, "File-I/O"], [267, "File-I/O"], [270, "File-I/O"], [302, "File-I/O"], [306, "File-I/O"], [340, "File-I/O"], [346, "File-I/O"], [361, "File-I/O"], [972, "file-i-o"], [1085, "file-i-o"]], "Iteration, yield, Recursion": [[231, "Iteration,-yield,-Recursion"]], "Recursion": [[231, "Recursion"]], "Iteratively Calculating Fibonacci Numbers -> yield": [[231, "Iteratively-Calculating-Fibonacci-Numbers-->-yield"]], "map(), filter(), zip(), enumerate() \u2026": [[231, "map(),-filter(),-zip(),-enumerate()-..."]], "map(), and several other ways to do the same": [[231, "map(),-and-several-other-ways-to-do-the-same"]], "zip()": [[231, "zip()"]], "filter(), and several other methods to do the same": [[231, "filter(),-and-several-other-methods-to-do-the-same"]], "OSError, errno": [[231, "OSError,-errno"]], "The platform Module, sys.path": [[231, "The-platform-Module,-sys.path"]], "os.path": [[231, "os.path"], [247, "os.path"], [254, "os.path"]], "Exceptions und so (assert())": [[231, "Exceptions-und-so-(assert())"]], "AssertionError": [[231, "AssertionError"]], "Random Questions": [[231, "Random-Questions"]], "Slicing": [[231, "Slicing"], [254, "Slicing"], [260, "Slicing"], [285, "Slicing"], [306, "Slicing"], [1157, "slicing"]], "OO": [[231, "OO"], [299, "oo"], [378, "oo"], [572, "oo"]], "String Formatting": [[231, "String-Formatting"], [237, "String-Formatting"], [1080, "string-formatting"]], "import datetime": [[231, "import-datetime"]], "Python Advanced (2021-05-25 - 2021-05-27)": [[232, "python-advanced-2021-05-25-2021-05-27"]], "Predefined streams": [[232, "predefined-streams"]], "PCAP Exam Syllabus": [[232, "pcap-exam-syllabus"], [245, "pcap-exam-syllabus"]], "2021-06-09": [[232, "id1"]], "Programmieren mit C (2021-06-14 - 2021-06-18)": [[233, "programmieren-mit-c-2021-06-14-2021-06-18"], [387, "programmieren-mit-c-2021-06-14-2021-06-18"]], "Preparation: Tools": [[233, "preparation-tools"]], "State machine": [[233, "state-machine"]], "Regular Course Topics": [[233, "regular-course-topics"]], "Development Tools (Git & CMake) Installation Massacre": [[233, "development-tools-git-cmake-installation-massacre"]], "Regular Course Material": [[233, "regular-course-material"], [233, "id1"]], "Group Project Kick-Off :-)": [[233, "group-project-kick-off"]], "Exercise: Encapsulate Index Access to userdb": [[233, "exercise-encapsulate-index-access-to-userdb"]], "Group Project (Use Case Driven Course Flow :-) )": [[233, "group-project-use-case-driven-course-flow"]], "Day 5": [[233, "day-5"], [234, "day-5"], [288, "day-5"]], "Pointer Recap": [[233, "pointer-recap"]], "On With Group Project": [[233, "on-with-group-project"]], "C++ Basics": [[233, "c-basics"]], "Pointers, Pointer Arithmetic, and the Standard Template Library (STL)": [[233, "pointers-pointer-arithmetic-and-the-standard-template-library-stl"]], "The C++ Programming Language (2021-07-12 - 2021-07-16)": [[234, "the-c-programming-language-2021-07-12-2021-07-16"]], "Setup for the new kids": [[234, "setup-for-the-new-kids"]], "Recapitulate some C": [[234, "recapitulate-some-c"]], "Group project review": [[234, "group-project-review"]], "Jump into C++": [[234, "jump-into-c"]], "Regular Topics": [[234, "regular-topics"], [234, "id2"], [234, "id4"]], "Toolchain: C/C++ Build (How Complicated Can Things Be?)": [[234, "toolchain-c-c-build-how-complicated-can-things-be"]], "Exercises: Using the C++ Toolbox": [[234, "exercises-using-the-c-toolbox"]], "Finish First \u201cUser Database\u201d Functionality": [[234, "finish-first-user-database-functionality"]], "Unit Testing": [[234, "unit-testing"], [291, "unit-testing"], [294, "unit-testing"], [377, "unit-testing"]], "GTest Installation": [[234, "gtest-installation"]], "Git Workflows": [[234, "git-workflows"]], "Day X": [[234, "day-x"]], "Smart Pointers, Recap": [[234, "smart-pointers-recap"]], "std::map": [[234, "std-map"], [650, "std-map"]], "OO, and Polymorphism": [[234, "oo-and-polymorphism"]], "Programmierung Grundlagen, anhand von Python (2. und 3.8.2021)": [[235, "programmierung-grundlagen-anhand-von-python-2-und-3-8-2021"], [387, "programmierung-grundlagen-anhand-von-python-2-und-3-8-2021"]], "Variablen und Datentypen": [[235, "variablen-und-datentypen"], [251, "variablen-und-datentypen"], [263, "variablen-und-datentypen"]], "Kontrollstrukturen": [[235, "kontrollstrukturen"], [251, "kontrollstrukturen"], [252, "Kontrollstrukturen"], [263, "kontrollstrukturen"]], "Datenstrukturen": [[236, "Datenstrukturen"]], "List": [[236, "List"], [237, "List"], [244, "List"], [247, "List"], [267, "List"], [270, "List"], [282, "List"], [285, "List"], [312, "List"], [324, "List"], [340, "List"], [350, "List"], [1164, "list"]], "Iteration": [[236, "Iteration"], [236, "id1"], [237, "Iteration"], [237, "id1"], [247, "Iteration"], [270, "Iteration"], [282, "Iteration"], [324, "Iteration"], [350, "Iteration"], [350, "id1"]], "User Datenbank: Showcase Full Stack Development": [[236, "User-Datenbank:-Showcase-Full-Stack-Development"]], "5: Response kommt von der DB": [[236, "5:-Response-kommt-von-der-DB"]], "6: Aufgabe: Formulieren eines JSON Strings, damit man diese Daten \u00fcber die HTTP Verbindung zum Client/Browser schicken kann.": [[236, "6:-Aufgabe:-Formulieren-eines-JSON-Strings,-damit-man-diese-Daten-\u00fcber-die-HTTP-Verbindung-zum-Client/Browser-schicken-kann."]], "7. Jetzt schickman weg: vom Server (PHP) zum Browser (JS)": [[236, "7.-Jetzt-schickman-weg:-vom-Server-(PHP)-zum-Browser-(JS)"]], "8. in JS JSON string empfangen": [[236, "8.-in-JS-JSON-string-empfangen"]], "9. Nun muessen wir den JSON-String in JS verwandlen": [[236, "9.-Nun-muessen-wir-den-JSON-String-in-JS-verwandlen"]], "Iterable?": [[237, "Iterable?"]], "List Comprehension, Generator Expression": [[237, "List-Comprehension,-Generator-Expression"]], "Literals": [[237, "Literals"], [516, "literals"]], "Quoting?": [[237, "Quoting?"], [241, "Quoting?"]], "Multiline Strings": [[237, "Multiline-Strings"], [241, "Multiline-Strings"], [334, "Multiline-Strings"], [1079, "multiline-strings"]], "Functionality": [[237, "Functionality"], [861, "functionality"]], "strip() and friends": [[237, "strip()-and-friends"]], "f-Strings (since Python 3.6)": [[237, "f-Strings-(since-Python-3.6)"]], "Parsing date formats": [[237, "Parsing-date-formats"]], "Read a Cleaned-Up SAP Export": [[238, "read-a-cleaned-up-sap-export"]], "Requirement": [[238, "requirement"], [515, "requirement"], [537, "requirement"], [538, "requirement"], [539, "requirement"], [543, "requirement"], [544, "requirement"], [545, "requirement"], [546, "requirement"], [547, "requirement"], [548, "requirement"], [964, "requirement"], [971, "requirement"], [1092, "requirement"], [1093, "requirement"], [1114, "requirement"], [1125, "requirement"], [1126, "requirement"], [1127, "requirement"], [1128, "requirement"], [1130, "requirement"], [1131, "requirement"], [1132, "requirement"], [1133, "requirement"]], "Solution": [[238, "solution"], [494, "solution"], [496, "solution"], [499, "solution"], [1172, "solution"]], "Python Grundlagen (2021-08-23 - 2021-08-25)": [[239, "python-grundlagen-2021-08-23-2021-08-25"]], "Initial Terminology": [[241, "Initial-Terminology"]], "Sequence": [[241, "Sequence"]], "Tuple (immutable)": [[241, "Tuple-(immutable)"], [334, "Tuple-(immutable)"]], "References, (Im)mutability": [[241, "References,-(Im)mutability"], [254, "References,-(Im)mutability"], [267, "References,-(Im)mutability"], [270, "References,-(Im)mutability"], [285, "References,-(Im)mutability"], [292, "References,-(Im)mutability"], [306, "References,-(Im)mutability"], [312, "References,-(Im)mutability"], [312, "id1"], [324, "References,-(Im)mutability"], [346, "References,-(Im)mutability"], [1075, "references-im-mutability"]], "Iteration, for, and range()": [[241, "Iteration,-for,-and-range()"]], "Iterator Protocol (not so important for beginners)": [[241, "Iterator-Protocol-(not-so-important-for-beginners)"]], "Iteration, and Compound Datatypes": [[241, "Iteration,-and-Compound-Datatypes"]], "List and Tuple": [[241, "List-and-Tuple"]], "matplotlib": [[241, "matplotlib"], [273, "matplotlib"]], "File I/O, and Strings": [[241, "File-I/O,-and-Strings"]], "Raw strings: Windows path names": [[241, "Raw-strings:-Windows-path-names"]], "Miscellaneous String Methods": [[241, "Miscellaneous-String-Methods"], [252, "Miscellaneous-String-Methods"], [254, "Miscellaneous-String-Methods"], [260, "Miscellaneous-String-Methods"], [270, "Miscellaneous-String-Methods"], [285, "Miscellaneous-String-Methods"], [306, "Miscellaneous-String-Methods"], [312, "Miscellaneous-String-Methods"], [334, "Miscellaneous-String-Methods"], [340, "Miscellaneous-String-Methods"], [350, "Miscellaneous-String-Methods"], [1081, "miscellaneous-string-methods"]], "Python Basics (2021-08-31 - 2021-09-01)": [[242, "python-basics-2021-08-31-2021-09-01"], [387, "python-basics-2021-08-31-2021-09-01"]], "Numerics, and AI": [[242, "numerics-and-ai"]], "Mountains near Graz": [[242, "mountains-near-graz"]], "2021-11-17": [[244, "2021-11-17"]], "Enter Tuples": [[244, "Enter-Tuples"]], "Datatype Conversions, Type Names": [[244, "Datatype-Conversions,-Type-Names"]], "NoneType": [[244, "NoneType"]], "Short Circuit Evaluation of Boolean Expression": [[244, "Short-Circuit-Evaluation-of-Boolean-Expression"]], "Exercise: Mixed List": [[244, "Exercise:-Mixed-List"]], "Python Documentation": [[244, "Python-Documentation"]], "for": [[244, "for"], [306, "for"], [350, "for"], [364, "for"]], "Iteration over Compound Datatypes": [[244, "Iteration-over-Compound-Datatypes"], [254, "Iteration-over-Compound-Datatypes"]], "File IO": [[244, "File-IO"], [260, "File-IO"], [288, "file-io"], [292, "File-IO"], [328, "File-IO"], [334, "File-IO"]], "Generators, Iterator Protocol, for": [[244, "Generators,-Iterator-Protocol,-for"]], "Common Sequence Operation": [[244, "Common-Sequence-Operation"]], "Comprehensions": [[244, "Comprehensions"], [247, "Comprehensions"], [260, "Comprehensions"], [292, "Comprehensions"], [324, "Comprehensions"]], "List, Iterable? WTF?": [[244, "List,-Iterable?-WTF?"]], "Dict and iterable": [[244, "Dict-and-iterable"]], "More on Lists": [[244, "More-on-Lists"], [252, "More-on-Lists"], [267, "More-on-Lists"]], "More on Dictionaries": [[244, "More-on-Dictionaries"], [252, "More-on-Dictionaries"]], "References, Mutability": [[244, "References,-Mutability"]], "CSV": [[244, "CSV"], [261, "csv"], [269, "csv"], [306, "CSV"]], "Python Basics (2021-11-17 - 2021-11-19)": [[245, "python-basics-2021-11-17-2021-11-19"], [387, "python-basics-2021-11-17-2021-11-19"]], "Python (Core Topics)": [[245, "python-core-topics"]], "Python Standard Library": [[245, "python-standard-library"]], "More About Strings": [[247, "More-About-Strings"], [264, "More-About-Strings"], [312, "More-About-Strings"], [334, "More-About-Strings"], [340, "More-About-Strings"], [346, "More-About-Strings"], [1079, "more-about-strings"]], "List, Tuple": [[247, "List,-Tuple"], [302, "List,-Tuple"], [306, "List,-Tuple"]], "Tuple Unpacking: What Else": [[247, "Tuple-Unpacking:-What-Else"]], "Iterator Protocol": [[247, "Iterator-Protocol"], [254, "Iterator-Protocol"], [285, "Iterator-Protocol"], [302, "Iterator-Protocol"], [306, "Iterator-Protocol"], [334, "Iterator-Protocol"]], "yield": [[247, "yield"], [270, "yield"]], "Everything is an Object of a Type": [[247, "Everything-is-an-Object-of-a-Type"]], "Generators, used more creatively": [[247, "Generators,-used-more-creatively"]], "Exception Handling and Exception Types": [[247, "Exception-Handling-and-Exception-Types"]], "2021-12-17": [[247, "2021-12-17"]], "Shift Operators": [[247, "Shift-Operators"]], "PCAP Sample Exam": [[247, "PCAP-Sample-Exam"]], "System Errors": [[247, "System-Errors"]], "Python Advanced (2021-12-01 - 2021-12-03)": [[248, "python-advanced-2021-12-01-2021-12-03"], [387, "python-advanced-2021-12-01-2021-12-03"]], "Basics Recap": [[248, "basics-recap"], [301, "basics-recap"]], "Group Project Preparation": [[248, "group-project-preparation"]], "Hmmm?": [[248, "hmmm"]], "C/C++ Programming (2021-12-06 - 2021-12-10, 2022-01-24 - 2022-02-04)": [[250, "c-c-programming-2021-12-06-2021-12-10-2022-01-24-2022-02-04"], [387, "c-c-programming-2021-12-06-2021-12-10-2022-01-24-2022-02-04"]], "2021-12-06": [[250, "id1"]], "2021-12-07": [[250, "id2"]], "2021-12-08": [[250, "id3"]], "2021-12-09": [[250, "id4"]], "2022-01-24": [[250, "id5"]], "Undefined Behavior": [[250, "undefined-behavior"]], "Modularization": [[250, "modularization"], [432, "modularization"]], "2022-01-25": [[250, "id6"]], "C++ and OO (Classes)": [[250, "c-and-oo-classes"]], "Modularization (again)": [[250, "modularization-again"]], "2022-01-26": [[250, "id7"]], "Modularization: Repeating Important Topics (Quickly)": [[250, "modularization-repeating-important-topics-quickly"]], "Classes (continued)": [[250, "classes-continued"]], "2022-01-27": [[250, "id8"]], "2022-01-28": [[250, "id9"]], "Standard Template Library: Container Templates": [[250, "standard-template-library-container-templates"]], "2022-01-31": [[250, "id10"]], "2022-02-01": [[250, "id11"]], "Algorithms": [[250, "algorithms"], [639, "algorithms"]], "Functors": [[250, "functors"]], "Unified Modeling Language (UML)": [[250, "unified-modeling-language-uml"]], "Exercise (Using All From Today)": [[250, "exercise-using-all-from-today"]], "2022-02-02": [[250, "id12"]], "Associative Container: std::map": [[250, "associative-container-std-map"]], "Exceptions, and Exception Handling": [[250, "exceptions-and-exception-handling"]], "2022-02-03": [[250, "id13"]], "2022-02-04": [[250, "id14"]], "C++11: A New Language": [[250, "c-11-a-new-language"]], "Dynamic Allocation, Smart Pointers": [[250, "dynamic-allocation-smart-pointers"]], "2022-02-07: Start of Exercise Week": [[250, "start-of-exercise-week"]], "Programmierung Grundlagen, anhand von Python (2022-01-17 - 2022-01-10)": [[251, "programmierung-grundlagen-anhand-von-python-2022-01-17-2022-01-10"], [387, "programmierung-grundlagen-anhand-von-python-2022-01-17-2022-01-10"]], "2022-01-17": [[252, "2022-01-17"]], "Variables and Datatypes": [[252, "Variables-and-Datatypes"]], "Comments vs Docstrings": [[252, "Comments-vs-Docstrings"]], "Integer (Ganze Zahl)": [[252, "Integer-(Ganze-Zahl)"]], "Integer Numbers: Arithmetic": [[252, "Integer-Numbers:-Arithmetic"], [264, "Integer-Numbers:-Arithmetic"], [1066, "integer-numbers-arithmetic"]], "Some Methods": [[252, "Some-Methods"]], "String Formatting: f-Strings": [[252, "String-Formatting:-f-Strings"]], "More about Strings": [[252, "More-about-Strings"]], "if": [[252, "if"], [292, "if"]], "2022-01-18": [[252, "2022-01-18"]], "Miscellanea": [[252, "Miscellanea"]], "Braces: Single Element Tuples?": [[252, "Braces:-Single-Element-Tuples?"]], "Ranges -> range() (hour_of_day)": [[252, "Ranges-->-range()-(hour_of_day)"]], "while Loops": [[252, "while-Loops"], [254, "while-Loops"], [267, "while-Loops"], [334, "while-Loops"], [350, "while-Loops"], [1070, "while-loops"], [1070, "id1"]], "break and continue": [[252, "break-and-continue"], [429, "break-and-continue"], [429, "id1"], [1070, "break-and-continue"]], "yield, Generator, Iteration Protocol": [[252, "yield,-Generator,-Iteration-Protocol"]], "Sequence Membership": [[252, "Sequence-Membership"], [1071, "sequence-membership"]], "list (mutable)": [[252, "list-(mutable)"]], "tuple (immutable)": [[252, "tuple-(immutable)"]], "dict (mutable)": [[252, "dict-(mutable)"]], "set (mutable)": [[252, "set-(mutable)"]], "Why Index Based Iteration is not Always the Best Way to Iterate": [[252, "Why-Index-Based-Iteration-is-not-Always-the-Best-Way-to-Iterate"]], "How to get Indexes if There are None? (enumerate(), and Tuple Unpacking)": [[252, "How-to-get-Indexes-if-There-are-None?-(enumerate(),-and-Tuple-Unpacking)"]], "Default Parameters": [[252, "Default-Parameters"], [254, "Default-Parameters"], [365, "Default-Parameters"], [1077, "default-parameters"]], "List Comprehensions": [[252, "List-Comprehensions"], [264, "List-Comprehensions"]], "Iteration over Dictionaries": [[252, "Iteration-over-Dictionaries"]], "Building Dictionaries": [[252, "Building-Dictionaries"], [1083, "building-dictionaries"]], "More on Sets": [[252, "More-on-Sets"]], "with: Context Managers": [[252, "with:-Context-Managers"]], "Strings Intro": [[254, "Strings-Intro"]], "Doc Strings": [[254, "Doc-Strings"]], "Object Identity": [[254, "Object-Identity"]], "Integers": [[254, "Integers"], [264, "Integers"], [267, "Integers"], [285, "Integers"], [292, "Integers"], [312, "Integers"], [328, "Integers"], [334, "Integers"], [340, "Integers"], [350, "Integers"]], "Variablen? Datenypen?": [[254, "Variablen?-Datenypen?"]], "Objects, Classes": [[254, "Objects,-Classes"]], "Python Standard Libarary Examples": [[254, "Python-Standard-Libarary-Examples"]], "collections": [[254, "collections"]], "ChainMap": [[254, "ChainMap"]], "deque": [[254, "deque"]], "Suchalgorithmen und Datenstrukturen (Ausflug)": [[254, "Suchalgorithmen-und-Datenstrukturen-(Ausflug)"]], "Slice Assignment": [[254, "Slice-Assignment"], [1072, "slice-assignment"]], "Lists are mutable": [[254, "Lists-are-mutable"]], "Shallow copy and deep copy": [[254, "Shallow-copy-and-deep-copy"]], "else": [[254, "else"], [260, "else"], [350, "else"]], "for Loops, range()": [[254, "for-Loops,-range()"]], "Default Parameters: Pitfalls": [[254, "Default-Parameters:-Pitfalls"]], "dict.fromkeys()": [[254, "dict.fromkeys()"], [267, "dict.fromkeys()"]], "Generators": [[254, "Generators"], [260, "Generators"], [300, "generators"], [301, "generators"], [305, "generators"], [322, "generators"], [326, "generators"]], "join, split": [[254, "join,-split"]], "strip, lstrip, rstrip": [[254, "strip,-lstrip,-rstrip"]], "Python Basics (2022-02-23 - 2022-02-25)": [[255, "python-basics-2022-02-23-2022-02-25"], [387, "python-basics-2022-02-23-2022-02-25"]], "Data Structures": [[255, "data-structures"]], "OS Things": [[255, "os-things"]], "Data Science": [[255, "data-science"], [323, "data-science"], [324, "Data-Science"], [346, "Data-Science"]], "Wiederholung": [[257, "Wiederholung"]], "Mutable/Immutable": [[257, "Mutable/Immutable"]], "Attribute": [[257, "Attribute"]], "Sequentielle vs. Konstante Suchzeit": [[257, "Sequentielle-vs.-Konstante-Suchzeit"]], "Exceptions": [[257, "Exceptions"], [273, "Exceptions"], [298, "exceptions"], [332, "exceptions"], [338, "exceptions"], [344, "exceptions"], [348, "exceptions"], [572, "exceptions"], [619, "exceptions"], [620, "exceptions"]], "for vs. while, range()": [[257, "for-vs.-while,-range()"]], "String Methods (some)": [[257, "String-Methods-(some)"]], "eval()": [[257, "eval()"], [267, "eval()"], [324, "eval()"]], "exec()": [[257, "exec()"], [273, "exec()"], [334, "exec()"]], "Dictionary Iteration": [[257, "Dictionary-Iteration"], [350, "Dictionary-Iteration"]], "Classes, Attributes, OO": [[257, "Classes,-Attributes,-OO"]], "Types and Instances": [[257, "Types-and-Instances"]], "Metaprogramming? Types? What is a Type?": [[257, "Metaprogramming?-Types?-What-is-a-Type?"]], "OO Everywhere": [[257, "OO-Everywhere"]], "Dictionary Operations": [[257, "Dictionary-Operations"]], "collections.defaultdict": [[257, "collections.defaultdict"], [282, "collections.defaultdict"]], "Python Advanced (2022-03-15 - 2022-03-17, 2022-03-31)": [[258, "python-advanced-2022-03-15-2022-03-17-2022-03-31"]], "2022-03-15": [[258, "id1"]], "2022-03-16": [[258, "id2"]], "Test Driven Development": [[258, "test-driven-development"], [300, "test-driven-development"], [322, "test-driven-development"], [323, "test-driven-development"]], "2022-03-17": [[258, "id3"]], "2022-03-31": [[258, "id4"]], "Hello World": [[260, "Hello-World"], [391, "hello-world"], [1061, "hello-world"]], "Blahblah": [[260, "Blahblah"], [629, "blahblah"], [1060, "blahblah"]], "Object Oriented?": [[260, "Object-Oriented?"]], "MQTT": [[260, "MQTT"], [326, "mqtt"], [1152, "mqtt"]], "Commandline Arguments": [[260, "Commandline-Arguments"], [443, "commandline-arguments"], [443, "id1"]], "Object Lifetime": [[260, "Object-Lifetime"]], "Boolean, Short Circuit Evaluation": [[260, "Boolean,-Short-Circuit-Evaluation"]], "More String Methods": [[260, "More-String-Methods"], [260, "id1"]], "Dictionary Preview": [[260, "Dictionary-Preview"]], "list: Mutable": [[260, "list:-Mutable"]], "list(): explicit constructor": [[260, "list():-explicit-constructor"]], "tuple: Immutable": [[260, "tuple:-Immutable"]], "dict: Mutable": [[260, "dict:-Mutable"]], "set: Mutable": [[260, "set:-Mutable"]], "List comprehension": [[260, "List-comprehension"]], "DIctionary Comprehension": [[260, "DIctionary-Comprehension"]], "Set Comprehension": [[260, "Set-Comprehension"], [324, "Set-Comprehension"], [334, "Set-Comprehension"], [1031, "set-comprehension"]], "max": [[260, "max"]], "for, enumerate()": [[260, "for,-enumerate()"]], "Iteratoren, Generatoren": [[260, "Iteratoren,-Generatoren"]], "Generatoren": [[260, "Generatoren"]], "split und join": [[260, "split-und-join"]], "strip()": [[260, "strip()"]], "dict vs. OrderedDict": [[260, "dict-vs.-OrderedDict"]], "Duck Typing": [[260, "Duck-Typing"], [1047, "duck-typing"]], "Interfaces": [[260, "Interfaces"], [668, "interfaces"]], "Implementation Inheritance": [[260, "Implementation-Inheritance"]], "Method Resolution Order (MRO), and super()": [[260, "Method-Resolution-Order-(MRO),-and-super()"]], "__bases__": [[260, "__bases__"]], "__mro__": [[260, "__mro__"]], "Object Layout (self)": [[260, "Object-Layout-(self)"]], "More from OO": [[260, "More-from-OO"]], "Calling Base Class Constructor (Many Ways)": [[260, "Calling-Base-Class-Constructor-(Many-Ways)"]], "Name Mangling (\u201cprivate\u201d Members)": [[260, "Name-Mangling-(%22private%22-Members)"]], "Yet Another Example From Udemy": [[260, "Yet-Another-Example-From-Udemy"]], "Exception Handling": [[260, "Exception-Handling"], [291, "exception-handling"], [294, "exception-handling"], [299, "exception-handling"], [380, "exception-handling"], [1034, "exception-handling"]], "Order of except Clauses": [[260, "Order-of-except-Clauses"]], "finally": [[260, "finally"]], "lambda": [[260, "lambda"]], "map(), filter()": [[260, "map(),-filter()"], [324, "map(),-filter()"]], "Generators, Iteration Protocol": [[260, "Generators,-Iteration-Protocol"]], "Class Variables (as Opposed to Instance Variables)": [[260, "Class-Variables-(as-Opposed-to-Instance-Variables)"]], "Python (2022-03-23, 2022-03-30, 2022-04-19 - 2022-03-21)": [[261, "python-2022-03-23-2022-03-30-2022-04-19-2022-03-21"], [387, "python-2022-03-23-2022-03-30-2022-04-19-2022-03-21"]], "2022-03-23: Basics": [[261, "basics"]], "2022-03-30: Basics": [[261, "id1"]], "2022-04-19, 2022-04-20, 2022-04-21: Advanced": [[261, "advanced"]], "Plan For The Wild Part": [[261, "plan-for-the-wild-part"]], "Programmierung Grundlagen, anhand von Python (2022-04-05 - 2022-04-08)": [[263, "programmierung-grundlagen-anhand-von-python-2022-04-05-2022-04-08"], [387, "programmierung-grundlagen-anhand-von-python-2022-04-05-2022-04-08"]], "Discussion: Flow Charts?": [[263, "discussion-flow-charts"]], "BlahBlah": [[264, "BlahBlah"], [267, "BlahBlah"], [270, "BlahBlah"], [334, "BlahBlah"]], "Interactive": [[264, "Interactive"]], "For Beginners": [[264, "For-Beginners"]], "Not For Beginners?": [[264, "Not-For-Beginners?"]], "Strings, 1st Explanation": [[264, "Strings,-1st-Explanation"]], "Operator Precedence": [[264, "Operator-Precedence"], [267, "Operator-Precedence"], [1066, "operator-precedence"]], "Floating Point Numbers": [[264, "Floating-Point-Numbers"], [1066, "floating-point-numbers"]], "Docstrings": [[264, "Docstrings"], [270, "Docstrings"], [364, "Docstrings"]], "Einschub: String-Vergleich vs. Integer-Vergleich": [[264, "Einschub:-String-Vergleich-vs.-Integer-Vergleich"]], "Random Numbers": [[264, "Random-Numbers"]], "Indexing and Slicing": [[264, "Indexing-and-Slicing"], [312, "Indexing-and-Slicing"], [1072, "indexing-and-slicing"]], "for Loops": [[264, "for-Loops"], [334, "for-Loops"], [394, "for-loops"], [1073, "for-loops"]], "range()": [[264, "range()"], [292, "range()"], [340, "range()"], [346, "range()"], [350, "range()"]], "Filterketten": [[264, "Filterketten"]], "Zen": [[264, "Zen"]], "Compound Datatypes By Example: List, Tuple": [[264, "Compound-Datatypes-By-Example:-List,-Tuple"], [1067, "compound-datatypes-by-example-list-tuple"]], "Compound Datatypes By Example: Dictionary": [[264, "Compound-Datatypes-By-Example:-Dictionary"], [1067, "compound-datatypes-by-example-dictionary"]], "Datensatz als Dictionary?": [[264, "Datensatz-als-Dictionary?"]], "JSON (Javascript Object Notation)": [[264, "JSON-(Javascript-Object-Notation)"]], "Compound Datatypes By Example: Set": [[264, "Compound-Datatypes-By-Example:-Set"], [1067, "compound-datatypes-by-example-set"]], "Das Letzte Beispiel am Letzten Tag": [[264, "Das-Letzte-Beispiel-am-Letzten-Tag"]], "Python Basics (2022-04-25 - 2022-04-27)": [[266, "python-basics-2022-04-25-2022-04-27"], [387, "python-basics-2022-04-25-2022-04-27"]], "Strings und Quotes": [[267, "Strings-und-Quotes"]], "Comments vs. Docstrings": [[267, "Comments-vs.-Docstrings"]], "Variables and Types": [[267, "Variables-and-Types"]], "Swap": [[267, "Swap"]], "Integers are Infinitely long": [[267, "Integers-are-Infinitely-long"]], "Floating Point Comparison": [[267, "Floating-Point-Comparison"]], "Mutability/Immutability": [[267, "Mutability/Immutability"]], "Exercise: Digit To English Word": [[267, "Exercise:-Digit-To-English-Word"]], "Exercise: Determine Maximum of Two Numbers": [[267, "Exercise:-Determine-Maximum-of-Two-Numbers"], [1100, "exercise-determine-maximum-of-two-numbers"], [1110, "exercise-determine-maximum-of-two-numbers"]], "Ranges": [[267, "Ranges"], [745, "ranges"]], "Exercise: Sort out Duplicates": [[267, "Exercise:-Sort-out-Duplicates"]], "Algorithmic Complexity": [[267, "Algorithmic-Complexity"]], "More On Dictionaries": [[267, "More-On-Dictionaries"]], "More On Sets": [[267, "More-On-Sets"]], "eval(), json": [[267, "eval(),-json"]], "Encoding": [[267, "Encoding"], [291, "encoding"], [312, "Encoding"], [328, "Encoding"], [328, "id1"], [369, "encoding"], [1149, "encoding"]], "Python (2022-05-02 - 2022-05-05)": [[269, "python-2022-05-02-2022-05-05"], [387, "python-2022-05-02-2022-05-05"]], "Control Flow and Iteration": [[269, "control-flow-and-iteration"]], "Encoding, Strings, and File I/O": [[269, "encoding-strings-and-file-i-o"]], "Excursion: CAN Communication, OO, Modules": [[269, "excursion-can-communication-oo-modules"]], "Modules": [[269, "modules"], [282, "Modules"], [323, "modules"], [369, "modules"], [740, "modules"], [1042, "modules"]], "CSV, Functions": [[269, "csv-functions"]], "PyPI, Virtual Environments": [[269, "pypi-virtual-environments"]], "Requirements Engineering, Test Driven Development": [[269, "requirements-engineering-test-driven-development"]], "More On DataTypes": [[269, "more-on-datatypes"]], "Random Topics": [[269, "random-topics"]], "Standard Library": [[269, "standard-library"]], "Hello Jupyter Notebook": [[270, "Hello-Jupyter-Notebook"]], "Syntax etc": [[270, "Syntax-etc"]], "Mutability": [[270, "Mutability"], [302, "Mutability"]], "Removing Elements": [[270, "Removing-Elements"], [650, "removing-elements"]], "Nested Lists?": [[270, "Nested-Lists?"]], "while loops, and else": [[270, "while-loops,-and-else"]], "for loops (and else)": [[270, "for-loops-(and-else)"]], "The range() Function, Iterator Protocol": [[270, "The-range()-Function,-Iterator-Protocol"]], "Encoding, and String": [[270, "Encoding,-and-String"]], "Regular Expression": [[270, "Regular-Expression"]], "f-Strings (since Python 3.6 !!)": [[270, "f-Strings-(since-Python-3.6-!!)"]], "Tuples Containing Only One Element": [[270, "Tuples-Containing-Only-One-Element"]], "Iterables, Lists, and the itertools Modules": [[270, "Iterables,-Lists,-and-the-itertools-Modules"]], "itertools.chain()": [[270, "itertools.chain()"]], "Destructor?": [[270, "Destructor?"]], "Tuple Unpacking on Dictionaries": [[270, "Tuple-Unpacking-on-Dictionaries"]], "Python Advanced (2022-05-16 - 2022-05-18)": [[272, "python-advanced-2022-05-16-2022-05-18"], [387, "python-advanced-2022-05-16-2022-05-18"]], "Project Management": [[272, "project-management"], [323, "project-management"], [376, "project-management"], [377, "project-management"], [381, "project-management"]], "Unit Testing, Test Driven Development": [[272, "unit-testing-test-driven-development"]], "Object Priented Programming": [[272, "object-priented-programming"]], "OO: next exercise (CSV as always \ud83d\ude44)": [[272, "oo-next-exercise-csv-as-always-rolling-eyes"]], "Exercise: Exception Handling": [[272, "exercise-exception-handling"]], "Standesregister nach SQLite3": [[272, "standesregister-nach-sqlite3"]], "XML/Element Tree": [[272, "xml-element-tree"]], "Projektabschlusstag": [[272, "projektabschlusstag"]], "Basic Python": [[272, "basic-python"], [1198, "basic-python"]], "Assert": [[273, "Assert"]], "The id() function": [[273, "The-id()-function"]], "class Person": [[273, "class-Person"]], "Functions That Do Not Return Anything": [[273, "Functions-That-Do-Not-Return-Anything"]], "Classes, Attributes, und so (Dictionaries Everywhere!)": [[273, "Classes,-Attributes,-und-so-(Dictionaries-Everywhere!)"]], "Globale, lokale, und Class Variablen": [[273, "Globale,-lokale,-und-Class-Variablen"]], "Defining my Own Exceptions": [[273, "Defining-my-Own-Exceptions"]], "Dictionary Lookup, keys() etc.": [[273, "Dictionary-Lookup,-keys()-etc."]], "Integers, Strings, und so": [[273, "Integers,-Strings,-und-so"]], "Vorbesprechung 2022-05-11": [[275, "vorbesprechung-2022-05-11"]], "Legende": [[275, "legende"]], "Neuerungen in C++ seit 2011": [[275, "neuerungen-in-c-seit-2011"]], "Neuerungen in C++ 14": [[275, "neuerungen-in-c-14"]], "Neuerungen in C++ 17": [[275, "neuerungen-in-c-17"]], "Neuerungen in C++ 20 (Ausblick)": [[275, "neuerungen-in-c-20-ausblick"]], "C++: A New Language Starting In 2011": [[276, "c-a-new-language-starting-in-2011"], [277, "c-a-new-language-starting-in-2011"]], "Metadata": [[276, "metadata"], [277, "metadata"], [279, "metadata"], [919, "metadata"]], "Introduction": [[276, "introduction"], [277, "introduction"], [279, "introduction"], [298, "introduction"], [299, "introduction"], [390, "introduction"], [469, "introduction"], [500, "introduction"], [595, "introduction"], [692, "introduction"], [751, "introduction"], [837, "introduction"], [1034, "introduction"], [407, "introduction"]], "Pythonicity (Thank You: Readablility and Writability)": [[276, "pythonicity-thank-you-readablility-and-writability"], [277, "pythonicity-thank-you-readablility-and-writability"], [279, "pythonicity-thank-you-readablility-and-writability"]], "Range Based for Loops": [[276, "range-based-for-loops"], [277, "range-based-for-loops"], [279, "range-based-for-loops"], [336, "range-based-for-loops"]], "Tuple Unpacking (err, Structured Binding)": [[276, "tuple-unpacking-err-structured-binding"], [277, "tuple-unpacking-err-structured-binding"], [279, "tuple-unpacking-err-structured-binding"], [336, "tuple-unpacking-err-structured-binding"]], "Duck Typing (err, auto) Without A Duck": [[276, "duck-typing-err-auto-without-a-duck"], [277, "duck-typing-err-auto-without-a-duck"], [279, "duck-typing-err-auto-without-a-duck"], [336, "duck-typing-err-auto-without-a-duck"]], "Things That Simply Deserved Fixing Since Ages": [[276, "things-that-simply-deserved-fixing-since-ages"], [277, "things-that-simply-deserved-fixing-since-ages"], [279, "things-that-simply-deserved-fixing-since-ages"]], "Brace Initialization": [[276, "brace-initialization"], [277, "brace-initialization"], [279, "brace-initialization"], [336, "brace-initialization"], [337, "brace-initialization"]], "New OO keywords: override, final, default, delete": [[276, "new-oo-keywords-override-final-default-delete"], [277, "new-oo-keywords-override-final-default-delete"], [279, "new-oo-keywords-override-final-default-delete"], [336, "new-oo-keywords-override-final-default-delete"]], "Strongly Typed enum": [[276, "strongly-typed-enum"], [277, "strongly-typed-enum"], [279, "strongly-typed-enum"], [336, "strongly-typed-enum"], [695, "strongly-typed-enum"]], "Delegating Constructor": [[276, "delegating-constructor"], [277, "delegating-constructor"], [279, "delegating-constructor"], [336, "delegating-constructor"], [700, "delegating-constructor"]], "nullptr": [[276, "nullptr"], [277, "nullptr"], [279, "nullptr"], [336, "nullptr"], [708, "nullptr"]], "Smart Pointers": [[276, "smart-pointers"], [277, "smart-pointers"], [279, "smart-pointers"], [299, "smart-pointers"], [337, "smart-pointers"], [572, "smart-pointers"]], "Moving, \u201cRValue References\u201d": [[276, "moving-rvalue-references"], [277, "moving-rvalue-references"]], "Functions (std::bind<>, std::function<>, Lambdas)": [[276, "functions-std-bind-std-function-lambdas"], [277, "functions-std-bind-std-function-lambdas"], [279, "functions-std-bind-std-function-lambdas"]], "Work Environment": [[277, "work-environment"], [279, "work-environment"], [297, "work-environment"], [298, "work-environment"], [299, "work-environment"], [376, "work-environment"]], "Skeleton Project": [[277, "skeleton-project"], [279, "skeleton-project"], [614, "skeleton-project"]], "Linux Basics (2022-10-03 - 2022-10-05)": [[278, "linux-basics-2022-10-03-2022-10-05"], [387, "linux-basics-2022-10-03-2022-10-05"]], "C++: A New Language Starting In 2011 (2022-10-11 - 2022-10-13)": [[279, "c-a-new-language-starting-in-2011-2022-10-11-2022-10-13"], [387, "c-a-new-language-starting-in-2011-2022-10-11-2022-10-13"]], "Moving, \u201cRValue References\u201d, And Perfect Forwarding": [[279, "moving-rvalue-references-and-perfect-forwarding"]], "News in C++20 (2023-06-13)": [[279, "news-in-c-20-2023-06-13"]], "Coroutines and C++23 Generators": [[279, "coroutines-and-c-23-generators"]], "Ranges And Views": [[279, "ranges-and-views"]], "Concepts": [[279, "concepts"], [336, "concepts"], [710, "concepts"]], "Design- and Architectural Patterns With C++ (2022-10-24 - 2022-10-26)": [[280, "design-and-architectural-patterns-with-c-2022-10-24-2022-10-26"], [387, "design-and-architectural-patterns-with-c-2022-10-24-2022-10-26"]], "Monday": [[280, "monday"]], "Tuesday": [[280, "tuesday"]], "Wednesday": [[280, "wednesday"]], "Python: Tour-De-Force (2022-11-07 - 2022-11-10, 2022-12-01)": [[281, "python-tour-de-force-2022-11-07-2022-11-10-2022-12-01"]], "Up Front: Project Management": [[281, "up-front-project-management"], [300, "up-front-project-management"], [322, "up-front-project-management"]], "Object Oriented Programming: Classes": [[281, "object-oriented-programming-classes"]], "Exercise Series: CSV": [[281, "exercise-series-csv"]], "Missing Pieces: Encoding, Unit Testing": [[281, "missing-pieces-encoding-unit-testing"]], "Exercise Series: CSV, JSON": [[281, "exercise-series-csv-json"]], "Iteration, Generators": [[281, "iteration-generators"]], "Going Dynamic: type(), exec()": [[281, "going-dynamic-type-exec"]], "More OO: Inheritance, Abstract Base Classes": [[281, "more-oo-inheritance-abstract-base-classes"]], "Group Project Kickoff": [[281, "group-project-kickoff"], [301, "group-project-kickoff"], [323, "group-project-kickoff"], [326, "group-project-kickoff"]], "Data Structures Recap": [[281, "data-structures-recap"]], "Miscellaneous Livehacking": [[281, "miscellaneous-livehacking"]], "Function Arguments, Closures, Decorators": [[281, "function-arguments-closures-decorators"], [316, "function-arguments-closures-decorators"]], "Exceptions, with": [[281, "exceptions-with"], [316, "exceptions-with"], [319, "exceptions-with"]], "Package Management": [[281, "package-management"]], "Videos": [[281, "videos"], [327, "videos"]], "Beginner": [[281, "beginner"], [305, "beginner"]], "Advanced": [[281, "advanced"], [305, "advanced"]], "Fun": [[281, "fun"]], "Python (2022-10-17)": [[282, "Python-(2022-10-17)"]], "Tuple Unpacking, Lists Iteration, And Such": [[282, "Tuple-Unpacking,-Lists-Iteration,-And-Such"]], "Variables, Types": [[282, "Variables,-Types"]], "Immutable? References?": [[282, "Immutable?-References?"]], "And range()?": [[282, "And-range()?"]], "More About Dictionaries": [[282, "More-About-Dictionaries"], [282, "id1"], [285, "More-About-Dictionaries"], [312, "More-About-Dictionaries"], [334, "More-About-Dictionaries"], [340, "More-About-Dictionaries"], [346, "More-About-Dictionaries"], [350, "More-About-Dictionaries"], [1083, "more-about-dictionaries"]], "More About Lists": [[282, "More-About-Lists"], [285, "More-About-Lists"], [312, "More-About-Lists"], [334, "More-About-Lists"], [340, "More-About-Lists"], [346, "More-About-Lists"], [350, "More-About-Lists"], [1082, "more-about-lists"]], "Python (2022-11-16 - 2022-11-18)": [[284, "python-2022-11-16-2022-11-18"], [285, "Python-(2022-11-16---2022-11-18)"], [387, "python-2022-11-16-2022-11-18"]], "Control Flow, Sequences, Iteration": [[284, "control-flow-sequences-iteration"], [291, "control-flow-sequences-iteration"], [294, "control-flow-sequences-iteration"], [304, "control-flow-sequences-iteration"], [305, "control-flow-sequences-iteration"], [310, "control-flow-sequences-iteration"], [311, "control-flow-sequences-iteration"], [311, "id2"], [332, "control-flow-sequences-iteration"], [333, "control-flow-sequences-iteration"], [338, "control-flow-sequences-iteration"], [339, "control-flow-sequences-iteration"], [344, "control-flow-sequences-iteration"], [345, "control-flow-sequences-iteration"], [348, "control-flow-sequences-iteration"], [349, "control-flow-sequences-iteration"]], "More Datatypes": [[284, "more-datatypes"], [291, "more-datatypes"], [294, "more-datatypes"], [304, "more-datatypes"], [305, "more-datatypes"], [305, "id2"], [310, "more-datatypes"], [311, "more-datatypes"], [332, "more-datatypes"], [333, "more-datatypes"], [338, "more-datatypes"], [344, "more-datatypes"], [345, "more-datatypes"], [348, "more-datatypes"], [392, "more-datatypes"]], "Exercise Series: CSV Files": [[284, "exercise-series-csv-files"], [304, "exercise-series-csv-files"], [305, "exercise-series-csv-files"], [310, "exercise-series-csv-files"], [311, "exercise-series-csv-files"], [332, "exercise-series-csv-files"], [333, "exercise-series-csv-files"], [339, "exercise-series-csv-files"], [344, "exercise-series-csv-files"], [345, "exercise-series-csv-files"], [348, "exercise-series-csv-files"]], "Advanced Language Features": [[284, "advanced-language-features"], [304, "advanced-language-features"], [305, "advanced-language-features"], [310, "advanced-language-features"], [455, "advanced-language-features"]], "Noob Exercises": [[284, "noob-exercises"]], "Object Oriented": [[285, "Object-Oriented"]], "Lists and Tuples": [[285, "Lists-and-Tuples"]], "for, and Iteration, and Generators": [[285, "for,-and-Iteration,-and-Generators"]], "Lists, Dictionaries, Generators, Constructors": [[285, "Lists,-Dictionaries,-Generators,-Constructors"]], "And Lists? Mutable!": [[285, "And-Lists?-Mutable!"]], "Tuples?": [[285, "Tuples?"]], "set": [[285, "set"]], "More About Sets": [[285, "More-About-Sets"], [312, "More-About-Sets"], [340, "More-About-Sets"], [346, "More-About-Sets"], [350, "More-About-Sets"], [1084, "more-about-sets"]], "Comprehensions (List, Dictionary, Set)": [[285, "Comprehensions-(List,-Dictionary,-Set)"], [334, "Comprehensions-(List,-Dictionary,-Set)"], [346, "Comprehensions-(List,-Dictionary,-Set)"], [1031, "comprehensions-list-dictionary-set"]], "Generator Expressions": [[285, "Generator-Expressions"]], "eval and exec": [[285, "eval-and-exec"]], "Linux Basics (2023-01-23 - 2023-01-26)": [[287, "linux-basics-2023-01-23-2023-01-26"], [387, "linux-basics-2023-01-23-2023-01-26"]], "Embedded Linux Systems Programming (2023-02-13 - 2023-02-17)": [[288, "embedded-linux-systems-programming-2023-02-13-2023-02-17"], [387, "embedded-linux-systems-programming-2023-02-13-2023-02-17"]], "WSL For Core Linux Topics": [[288, "wsl-for-core-linux-topics"]], "Cross Development For Hardware Topics": [[288, "cross-development-for-hardware-topics"]], "Day 1: Overview": [[288, "day-1-overview"]], "Introductory Live Hacking": [[288, "introductory-live-hacking"]], "The Shell": [[288, "the-shell"]], "Processes Quick Walk-Through": [[288, "processes-quick-walk-through"]], "Permissions": [[288, "permissions"]], "Development: CMake Quick Intro, And Git Quick Intro": [[288, "development-cmake-quick-intro-and-git-quick-intro"]], "UART": [[288, "uart"]], "SUSI": [[288, "susi"]], "Secure Shell (SSH)": [[288, "secure-shell-ssh"]], "Miscellaneous Hardware": [[288, "miscellaneous-hardware"]], "Group Exercise": [[288, "group-exercise"]], "Untold": [[288, "untold"], [298, "untold"], [301, "untold"]], "More From The Commandline": [[288, "more-from-the-commandline"]], "Multithreading (And C++)": [[288, "multithreading-and-c"]], "Whetting Your Appetite (Jupyter Notebook)": [[289, "Whetting-Your-Appetite-(Jupyter-Notebook)"]], "Filter in Pandas": [[289, "Filter-in-Pandas"]], "Copy vs Reference": [[289, "Copy-vs-Reference"]], "Immutable": [[289, "Immutable"]], "String": [[289, "String"]], "Regex": [[289, "Regex"]], "Whetting Your Appetite (Livehacking Demo)": [[290, "whetting-your-appetite-livehacking-demo"]], "Pipeline Driver": [[290, "pipeline-driver"]], "Virtual Environment Setup": [[290, "virtual-environment-setup"]], "Filter: Add Category: card-payment": [[290, "filter-add-category-card-payment"]], "Filter: Select Uncategorized": [[290, "filter-select-uncategorized"]], "More Categories": [[290, "more-categories"]], "Python For SAP Developers (2023-03-13 - 2023-03-15)": [[291, "python-for-sap-developers-2023-03-13-2023-03-15"], [387, "python-for-sap-developers-2023-03-13-2023-03-15"]], "Day 1 (Basics)": [[291, "day-1-basics"]], "Demo": [[291, "demo"]], "Day 2 (Basics, Continued)": [[291, "day-2-basics-continued"]], "Pandas": [[291, "pandas"], [292, "Pandas"], [294, "pandas"], [298, "pandas"], [323, "pandas"], [1156, "pandas"]], "Hacking About On A SAP Test Dataset": [[291, "hacking-about-on-a-sap-test-dataset"], [295, "hacking-about-on-a-sap-test-dataset"]], "Untold (From Original Agenda)": [[291, "untold-from-original-agenda"]], "OO Introduction": [[291, "oo-introduction"], [294, "oo-introduction"]], "Context Managers (Automatic Cleanup)": [[291, "context-managers-automatic-cleanup"], [294, "context-managers-automatic-cleanup"]], "Iteration, Generators, Comprehensions": [[291, "iteration-generators-comprehensions"], [294, "iteration-generators-comprehensions"]], "Decorators, and Related Topics": [[291, "decorators-and-related-topics"], [294, "decorators-and-related-topics"]], "Machine Learning: Pandas, NumPy, And Algorithms": [[291, "machine-learning-pandas-numpy-and-algorithms"]], "2023-03-13": [[292, "2023-03-13"]], "Comment vs Docstring": [[292, "Comment-vs-Docstring"]], "Mutable? Immutable?": [[292, "Mutable?-Immutable?"]], "Lists": [[292, "Lists"], [292, "id2"], [306, "Lists"], [346, "Lists"]], "Tuples": [[292, "Tuples"]], "DataType Conversiosn": [[292, "DataType-Conversiosn"]], "String, File IO Exercise": [[292, "String,-File-IO-Exercise"]], "Python For SAP Developers (Jupyter Notebook)": [[293, "python-for-sap-developers-jupyter-notebook"]], "Original Agenda: Python For SAP Developers (2023-03-13 - 2023-03-15)": [[294, "original-agenda-python-for-sap-developers-2023-03-13-2023-03-15"]], "Day 1: Basics": [[294, "day-1-basics"], [327, "day-1-basics"]], "Day 2: Outlook Into Advanced Python": [[294, "day-2-outlook-into-advanced-python"]], "Day 3: Domain Specifics": [[294, "day-3-domain-specifics"]], "NumPy": [[294, "numpy"], [323, "numpy"]], "Some Usecases On A Test Dataset From SAP": [[296, "Some-Usecases-On-A-Test-Dataset-From-SAP"]], "Dropping Columns That Contain Only NaN Values": [[296, "Dropping-Columns-That-Contain-Only-NaN-Values"]], "DataFrame.isna()": [[296, "DataFrame.isna()"]], "DataFrame.all() (and any())": [[296, "DataFrame.all()-(and-any())"]], "Column Selection": [[296, "Column-Selection"]], "Dropping Columns": [[296, "Dropping-Columns"]], "Fixing Date Values/Columns, And Operating With Date And Time": [[296, "Fixing-Date-Values/Columns,-And-Operating-With-Date-And-Time"]], "pandas.to_datetime()": [[296, "pandas.to_datetime()"]], "Converting The Entire DateDATE Column To A Workable Type (And Working With It)": [[296, "Converting-The-Entire-DateDATE-Column-To-A-Workable-Type-(And-Working-With-It)"]], "Conversion": [[296, "Conversion"]], "Usage: A Filter": [[296, "Usage:-A-Filter"]], "Modify Rows: Increase All Prices Of One Particular Store By 10%": [[296, "Modify-Rows:-Increase-All-Prices-Of-One-Particular-Store-By-10%"]], "Filter Readability: Combining Filters": [[296, "Filter-Readability:-Combining-Filters"]], "C++ For Embedded Developers (2023-03-20 - 2023-03-23)": [[297, "c-for-embedded-developers-2023-03-20-2023-03-23"]], "Preferred: Ubuntu under Windows (WSL)": [[297, "preferred-ubuntu-under-windows-wsl"], [299, "preferred-ubuntu-under-windows-wsl"]], "Unsupported Environments": [[297, "unsupported-environments"]], "Skeleton Project Setup": [[297, "skeleton-project-setup"], [299, "skeleton-project-setup"]], "Classes, Objects, Methods": [[297, "classes-objects-methods"]], "Heavy Weight OO \ud83d\udcaa": [[297, "heavy-weight-oo-muscle"], [299, "heavy-weight-oo-muscle"]], "Resource Management Pitfalls": [[297, "resource-management-pitfalls"]], "R-Value References/Moving, And Managed Pointers": [[297, "r-value-references-moving-and-managed-pointers"]], "A Little Concurrency": [[297, "a-little-concurrency"]], "Untold So Far": [[297, "untold-so-far"]], "C++ Standard Library": [[297, "c-standard-library"]], "Miscellaneous Topics": [[297, "miscellaneous-topics"]], "Clean Code Development With Python (2023-03-28 - 2023-03-29)": [[298, "clean-code-development-with-python-2023-03-28-2023-03-29"]], "Clean Code?": [[298, "clean-code"], [300, "clean-code"], [301, "clean-code"]], "Demo Hacking": [[298, "demo-hacking"]], "Python Development: Select Topics": [[298, "python-development-select-topics"]], "Built-In Types: Facts": [[298, "built-in-types-facts"]], "for Loops, And The Iterator Protocol": [[298, "for-loops-and-the-iterator-protocol"]], "Day 2: Clean Code? (Software Development: A Craft)": [[298, "day-2-clean-code-software-development-a-craft"]], "Closures, And Function Parameters": [[298, "closures-and-function-parameters"]], "Generators (Again), yield Fixtures, And yield Context Managers": [[298, "generators-again-yield-fixtures-and-yield-context-managers"]], "Decorators (The Ominous @)": [[298, "decorators-the-ominous"]], "Modules And Packages": [[298, "modules-and-packages"], [322, "modules-and-packages"]], "Design Patterns": [[298, "design-patterns"]], "C++ For Embedded Developers (2023-04-18 - 2023-04-20)": [[299, "c-for-embedded-developers-2023-04-18-2023-04-20"], [387, "c-for-embedded-developers-2023-04-18-2023-04-20"]], "Some Details": [[299, "some-details"]], "Standard Template Library": [[299, "standard-template-library"], [662, "standard-template-library"]], "Warm-Up": [[299, "warm-up"]], "Sensor Exercise, Resolved": [[299, "sensor-exercise-resolved"]], "OO, Cont\u2019d": [[299, "oo-cont-d"]], "Smart Pointers (Continued)": [[299, "smart-pointers-continued"]], "Exercises: Containers And Algorithms": [[299, "exercises-containers-and-algorithms"]], "Exercises: OO And Interfaces": [[299, "exercises-oo-and-interfaces"]], "Agenda: Python Advanced (2023-04-24 - 2023-04-26)": [[300, "agenda-python-advanced-2023-04-24-2023-04-26"]], "Day 1: Python Inside Out": [[300, "day-1-python-inside-out"], [301, "day-1-python-inside-out"]], "Exercise Prerequisites": [[300, "exercise-prerequisites"], [322, "exercise-prerequisites"]], "References And Other Pitfalls": [[300, "references-and-other-pitfalls"]], "Looping Constructs (With An Emphasis On The else Clause)": [[300, "looping-constructs-with-an-emphasis-on-the-else-clause"], [322, "looping-constructs-with-an-emphasis-on-the-else-clause"], [326, "looping-constructs-with-an-emphasis-on-the-else-clause"]], "Closures, Decorators And More": [[300, "closures-decorators-and-more"], [301, "closures-decorators-and-more"], [322, "closures-decorators-and-more"], [326, "closures-decorators-and-more"]], "Dynamic Features": [[300, "dynamic-features"], [301, "dynamic-features"], [302, "Dynamic-Features"], [322, "dynamic-features"], [326, "dynamic-features"]], "Error Handling And Recovery": [[300, "error-handling-and-recovery"], [301, "error-handling-and-recovery"], [322, "error-handling-and-recovery"], [323, "error-handling-and-recovery"], [326, "error-handling-and-recovery"]], "Miscellaneous Threading": [[300, "miscellaneous-threading"], [301, "miscellaneous-threading"]], "Day 2: Clean Code (In A Broader Sense), Group Project Kickoff": [[300, "day-2-clean-code-in-a-broader-sense-group-project-kickoff"]], "Group Project: Discussion": [[300, "group-project-discussion"]], "Design Patterns Overview": [[300, "design-patterns-overview"], [301, "design-patterns-overview"]], "Day 3: Group Project": [[300, "day-3-group-project"], [301, "day-3-group-project"]], "Python Advanced (2023-04-24 - 2023-04-26)": [[301, "python-advanced-2023-04-24-2023-04-26"], [387, "python-advanced-2023-04-24-2023-04-26"]], "Day 2: Object Oriented Programming, And Miscellaneous Discussion": [[301, "day-2-object-oriented-programming-and-miscellaneous-discussion"]], "Morning Opening": [[301, "morning-opening"]], "Object Oriented Programming (Continued)": [[301, "object-oriented-programming-continued"]], "Project Setup (IDE Usage?)": [[301, "project-setup-ide-usage"]], "Continue Hacking": [[301, "continue-hacking"]], "Test Driven Development, pytest": [[301, "test-driven-development-pytest"]], "Jupyter Notebook: Python Advanced (2023-04-24 - 2023-04-26)": [[302, "Jupyter-Notebook:-Python-Advanced-(2023-04-24---2023-04-26)"]], "is vs. ==": [[302, "is-vs.-=="]], "Compound DataTypes": [[302, "Compound-DataTypes"]], "class": [[302, "class"]], "Jupyter Notebook (Structure): Python Advanced (2023-04-24 - 2023-04-26)": [[303, "jupyter-notebook-structure-python-advanced-2023-04-24-2023-04-26"]], "Agenda: Python Basics (2023-05-15 - 2023-05-17)": [[304, "agenda-python-basics-2023-05-15-2023-05-17"]], "Python Basics (2023-05-15 - 2023-05-17)": [[305, "python-basics-2023-05-15-2023-05-17"], [306, "Python-Basics-(2023-05-15---2023-05-17)"], [387, "python-basics-2023-05-15-2023-05-17"]], "Morning Awakening": [[305, "morning-awakening"], [349, "morning-awakening"]], "A Bit Of venv, A Bit Of pip": [[305, "a-bit-of-venv-a-bit-of-pip"]], "Modules from Standard Library": [[305, "modules-from-standard-library"], [1136, "modules-from-standard-library"]], "Immutable vs. Mutable": [[306, "Immutable-vs.-Mutable"]], "The range Function": [[306, "The-range-Function"], [1074, "the-range-function"]], "Lambda, And Functional Programming Tools": [[306, "Lambda,-And-Functional-Programming-Tools"]], "Agenda: Linux Basics (2023-05-23 - 2023-05-25)": [[308, "agenda-linux-basics-2023-05-23-2023-05-25"]], "Linux Basics (2023-05-23 - 2023-05-25)": [[309, "linux-basics-2023-05-23-2023-05-25"], [387, "linux-basics-2023-05-23-2023-05-25"]], "Introduction: Concepts and Terminology": [[309, "introduction-concepts-and-terminology"], [871, "introduction-concepts-and-terminology"], [353, "introduction-concepts-and-terminology"]], "The Shell (Bash - \u201cBourne Again Shell\u201d)": [[309, "the-shell-bash-bourne-again-shell"], [309, "id1"], [917, "the-shell-bash-bourne-again-shell"], [353, "the-shell-bash-bourne-again-shell"]], "Tools: Inspecting Text Files": [[309, "tools-inspecting-text-files"], [927, "tools-inspecting-text-files"], [353, "tools-inspecting-text-files"]], "File System Permissions": [[309, "file-system-permissions"], [309, "id2"], [892, "file-system-permissions"], [353, "file-system-permissions"]], "Morning Wakeup": [[309, "morning-wakeup"], [311, "morning-wakeup"], [337, "morning-wakeup"], [353, "morning-wakeup"]], "I/O Redirection And Pipes": [[309, "i-o-redirection-and-pipes"], [878, "i-o-redirection-and-pipes"], [353, "i-o-redirection-and-pipes"]], "Archiving and Compression": [[309, "archiving-and-compression"], [860, "archiving-and-compression"], [862, "archiving-and-compression"]], "Networking": [[309, "networking"]], "Processes And Scheduling": [[309, "processes-and-scheduling"]], "SSH: Secure Shell": [[309, "ssh-secure-shell"], [949, "ssh-secure-shell"]], "Shell Scripting (at least some of it)": [[309, "shell-scripting-at-least-some-of-it"]], "Agenda: Python Basics (2023-06-20 - 2023-06-22)": [[310, "agenda-python-basics-2023-06-20-2023-06-22"]], "Python Basics (2023-06-20 - 2023-06-22)": [[311, "python-basics-2023-06-20-2023-06-22"], [312, "Python-Basics-(2023-06-20---2023-06-22)"], [387, "python-basics-2023-06-20-2023-06-22"]], "Day2": [[311, "day2"]], "File I/O, And Encoding": [[311, "file-i-o-and-encoding"]], "Python Videos": [[311, "python-videos"]], "NumPy, Pandas, Matplotlib": [[311, "numpy-pandas-matplotlib"]], "DataTypes": [[312, "DataTypes"], [334, "DataTypes"]], "(Im)mutable?": [[312, "(Im)mutable?"]], "Exercise: Mixed List, Interactive Interpreter": [[312, "Exercise:-Mixed-List,-Interactive-Interpreter"]], "len(), range(), for": [[312, "len(),-range(),-for"]], "Generators, yield": [[312, "Generators,-yield"]], "Other -ables: Callable": [[312, "Other--ables:-Callable"]], "exec() (and eval())": [[312, "exec()-(and-eval())"]], "Formatting (f-Strings)": [[312, "Formatting-(f-Strings)"]], "Python Basics (Jupyter Notebook)": [[313, "python-basics-jupyter-notebook"], [335, "python-basics-jupyter-notebook"]], "Agenda: CMake (2023-07-03)": [[314, "agenda-cmake-2023-07-03"]], "Toolchain Introduction": [[314, "toolchain-introduction"], [330, "toolchain-introduction"], [1191, "toolchain-introduction"]], "Project Structure, Dependencies": [[314, "project-structure-dependencies"], [330, "project-structure-dependencies"], [1191, "project-structure-dependencies"]], "External Dependencies": [[314, "external-dependencies"], [330, "external-dependencies"], [482, "external-dependencies"], [1191, "external-dependencies"]], "Code Generators": [[314, "code-generators"], [330, "code-generators"], [1191, "code-generators"]], "Automatic Testing": [[314, "automatic-testing"], [330, "automatic-testing"], [1191, "automatic-testing"]], "Installation And Deployment": [[314, "installation-and-deployment"], [330, "installation-and-deployment"], [1191, "installation-and-deployment"]], "CMake: An Introduction (2023-07-18)": [[315, "cmake-an-introduction-2023-07-18"], [387, "cmake-an-introduction-2023-07-18"]], "Python Advanced (2023-09-25 - 2023-09-27)": [[316, "python-advanced-2023-09-25-2023-09-27"], [317, "Python-Advanced-(2023-09-25---2023-09-27)"], [387, "python-advanced-2023-09-25-2023-09-27"]], "Recap Of Python Basics Course (Before Summer)": [[316, "recap-of-python-basics-course-before-summer"], [319, "recap-of-python-basics-course-before-summer"]], "Project Management: Requirements, Sandboxing, Testing": [[316, "project-management-requirements-sandboxing-testing"], [319, "project-management-requirements-sandboxing-testing"]], "Into The Wild: Group Project Kickoff": [[316, "into-the-wild-group-project-kickoff"], [319, "into-the-wild-group-project-kickoff"]], "OO Design: Duck Typing, Inheritance, And Abstract Base Classes": [[316, "oo-design-duck-typing-inheritance-and-abstract-base-classes"], [319, "oo-design-duck-typing-inheritance-and-abstract-base-classes"]], "Package And Dependency Management": [[316, "package-and-dependency-management"]], "Equality vs. Identity": [[317, "Equality-vs.-Identity"]], "Functions Are Objects": [[317, "Functions-Are-Objects"]], "Python Advanced, Jupyter Notebook (2023-09-25 - 2023-09-27)": [[318, "python-advanced-jupyter-notebook-2023-09-25-2023-09-27"], [321, "python-advanced-jupyter-notebook-2023-09-25-2023-09-27"]], "Python Advanced (2023-10-09 - 2023-10-11)": [[319, "python-advanced-2023-10-09-2023-10-11"], [387, "python-advanced-2023-10-09-2023-10-11"]], "Classes: Basics": [[319, "classes-basics"]], "Classes: More": [[319, "classes-more"]], "Spoiler: Group Project Outcome": [[319, "spoiler-group-project-outcome"]], "More About Functions": [[319, "more-about-functions"]], "Python Advanced (2023-10-09 - 2023-10-09)": [[320, "Python-Advanced-(2023-10-09---2023-10-09)"]], "Type Annotations": [[320, "Type-Annotations"]], "Agenda: Python Advanced (2023-10-24 - 2023-10-26)": [[322, "agenda-python-advanced-2023-10-24-2023-10-26"]], "Day 1: Basic Python": [[322, "day-1-basic-python"], [326, "day-1-basic-python"]], "Datatypes, Datatypes": [[322, "datatypes-datatypes"], [326, "datatypes-datatypes"]], "Day 2: Advanced Python Features": [[322, "day-2-advanced-python-features"]], "Multiprocessing": [[322, "multiprocessing"]], "Day 3: Into The Wild": [[322, "day-3-into-the-wild"]], "Data Science Topics": [[322, "data-science-topics"], [326, "data-science-topics"]], "Group Project: An Idea": [[322, "group-project-an-idea"]], "Python Advanced (2023-10-24 - 2023-10-26)": [[323, "python-advanced-2023-10-24-2023-10-26"], [387, "python-advanced-2023-10-24-2023-10-26"]], "Python Basics Recap": [[323, "python-basics-recap"], [324, "Python-Basics-Recap"]], "The Very Basics": [[323, "the-very-basics"]], "range(), And Iteration In General": [[323, "range-and-iteration-in-general"]], "Leftovers From Yesterday": [[323, "leftovers-from-yesterday"]], "Object Oriented Programming, Continued": [[323, "object-oriented-programming-continued"], [323, "id1"]], "Group Project, OO-ified": [[323, "group-project-oo-ified"]], "Decorator Toolcase: *args, **kwargs": [[323, "decorator-toolcase-args-kwargs"]], "Morning Greeting": [[323, "morning-greeting"]], "Decorator Toolcase, Continued (Including Function Scoping and global)": [[323, "decorator-toolcase-continued-including-function-scoping-and-global"]], "Sensor Implementation That Receives UDP Datagrams": [[323, "sensor-implementation-that-receives-udp-datagrams"]], "CompositeSink": [[323, "compositesink"]], "MQTT Sink Implementation": [[323, "mqtt-sink-implementation"]], "Timestamps?": [[323, "timestamps"]], "Jupyter Notebook: Python Advanced": [[324, "Jupyter-Notebook:-Python-Advanced"]], "Jupyter Notebook Explanation": [[324, "Jupyter-Notebook-Explanation"]], "Integers and Floats": [[324, "Integers-and-Floats"]], "Strings: String Methods, Docstrings, \u2026": [[324, "Strings:-String-Methods,-Docstrings,-..."]], "Python Documentation Overview: https://docs.python.org/3/": [[324, "Python-Documentation-Overview:-https://docs.python.org/3/"]], "assert": [[324, "assert"]], "Iteration, Generators, Iterator Protocol": [[324, "Iteration,-Generators,-Iterator-Protocol"]], "AAARGHHH": [[324, "AAARGHHH"]], "Generator Expresssions": [[324, "Generator-Expresssions"]], "Dictionary Comprehension": [[324, "Dictionary-Comprehension"], [334, "Dictionary-Comprehension"], [1031, "dictionary-comprehension"]], "Functional Tools": [[324, "Functional-Tools"]], "filter()": [[324, "filter()"], [334, "filter()"]], "Jupyter Notebook (Structure): Python Advanced (2023-10-24 - 2023-10-26)": [[325, "jupyter-notebook-structure-python-advanced-2023-10-24-2023-10-26"]], "Agenda: Python Advanced (2023-11-22 - 2023-11-24)": [[326, "agenda-python-advanced-2023-11-22-2023-11-24"]], "Exercise Prerequisites: The Commandline": [[326, "exercise-prerequisites-the-commandline"]], "Day 2: Group Project Kickoff, Advanced Topics": [[326, "day-2-group-project-kickoff-advanced-topics"]], "Project Management, Test Driven Development": [[326, "project-management-test-driven-development"]], "Day 3: More Advanced Topics (All The Rest, And More)": [[326, "day-3-more-advanced-topics-all-the-rest-and-more"]], "CSV And Databases": [[326, "csv-and-databases"]], "Python Advanced (2023-11-22 - 2023-22-24)": [[327, "python-advanced-2023-11-22-2023-22-24"]], "Day 2: Group Project, And Object Oriented Programming": [[327, "day-2-group-project-and-object-oriented-programming"]], "Day 3: OO, Hacking, Python Specials": [[327, "day-3-oo-hacking-python-specials"]], "Jupyter Notebook: Python Advanced (2023-11-22 - 2023-11-24)": [[328, "Jupyter-Notebook:-Python-Advanced-(2023-11-22---2023-11-24)"]], "Assignment, And IDs": [[328, "Assignment,-And-IDs"]], "(Im)Mutability": [[328, "(Im)Mutability"]], "Operator Overloading (Basics)": [[328, "Operator-Overloading-(Basics)"]], "And Iterables? The Iterator Protocol!": [[328, "And-Iterables?-The-Iterator-Protocol!"]], "Methods": [[328, "Methods"], [606, "methods"], [753, "methods"], [754, "methods"], [755, "methods"], [1052, "methods"]], "numpy, pandas, matplotlib": [[328, "numpy,-pandas,-matplotlib"]], "Jupyter Notebook (Structure): Python Advanced (2023-11-22 - 2023-11-24)": [[329, "jupyter-notebook-structure-python-advanced-2023-11-22-2023-11-24"]], "Agenda: CMake (2023-11-27)": [[330, "agenda-cmake-2023-11-27"]], "CMake: An Introduction (2023-11-27)": [[331, "cmake-an-introduction-2023-11-27"], [387, "cmake-an-introduction-2023-11-27"]], "Agenda: Python Basics (2023-11-29 - 2023-12-01)": [[332, "agenda-python-basics-2023-11-29-2023-12-01"]], "Python Basics (2023-11-29 - 2023-12-01)": [[333, "python-basics-2023-11-29-2023-12-01"], [334, "Python-Basics-(2023-11-29---2023-12-01)"], [387, "python-basics-2023-11-29-2023-12-01"]], "Day 2, Morning Awakening": [[333, "day-2-morning-awakening"]], "Control Flow, Sequences, Iteration (Continued)": [[333, "control-flow-sequences-iteration-continued"]], "Day 3, Morning Awakening": [[333, "day-3-morning-awakening"]], "Dictionary (mutable)": [[334, "Dictionary-(mutable)"]], "Set (mutable)": [[334, "Set-(mutable)"]], "Boolean (immutable)": [[334, "Boolean-(immutable)"]], "split() and join()": [[334, "split()-and-join()"]], "Pythonicity (enumerate())": [[334, "Pythonicity-(enumerate())"]], "pandas, matplotlib": [[334, "pandas,-matplotlib"]], "Generator Expression": [[334, "Generator-Expression"]], "zip(), And Dictionaries": [[334, "zip(),-And-Dictionaries"]], "Agenda: C++: Advanced Topics": [[336, "agenda-c-advanced-topics"]], "Introduction: A New Language To Me": [[336, "introduction-a-new-language-to-me"]], "constexpr, constinit, consteval": [[336, "constexpr-constinit-consteval"]], "Functions: std::function<>, Lambdas": [[336, "functions-std-function-lambdas"], [337, "functions-std-function-lambdas"]], "Moving, RValue References: Do We Want To Copy Sensors?": [[336, "moving-rvalue-references-do-we-want-to-copy-sensors"]], "Moving: Usage": [[336, "moving-usage"]], "Moving: Implementation": [[336, "moving-implementation"]], "Type Erasure": [[336, "type-erasure"]], "Allocators": [[336, "allocators"], [657, "allocators"], [775, "allocators"]], "C++ Pythonic Toolcase": [[336, "c-pythonic-toolcase"]], "Outlook In >=20": [[336, "outlook-in-20"]], "Attributes And The Like": [[336, "attributes-and-the-like"]], "<algorithm> Overview": [[336, "algorithm-overview"]], "Miscellaneous Miscellaneous": [[336, "miscellaneous-miscellaneous"]], "C++: Advanced Topics (2023-12-04 - 2023-12-06)": [[337, "c-advanced-topics-2023-12-04-2023-12-06"], [387, "c-advanced-topics-2023-12-04-2023-12-06"]], "Day 1: Introduction: C++, A New Language": [[337, "day-1-introduction-c-a-new-language"]], "Pythonicity": [[337, "pythonicity"]], "New OO Features": [[337, "new-oo-features"]], "Day 2: Simply Getting Stuff Done": [[337, "day-2-simply-getting-stuff-done"]], "Classic Polymorphism: Interfaces": [[337, "classic-polymorphism-interfaces"]], "Move Semantics": [[337, "move-semantics"]], "Day 3: All The Rest": [[337, "day-3-all-the-rest"]], "Interfaces, And OO Design: Kochtopf And The Cloud": [[337, "interfaces-and-oo-design-kochtopf-and-the-cloud"]], "Moving, Roundup": [[337, "moving-roundup"]], "Containers And Algorithms": [[337, "containers-and-algorithms"]], "And Embedded?": [[337, "and-embedded"]], "Still Untold": [[337, "still-untold"]], "Agenda: Python Basics (2023-12-18 - 2023-12-20)": [[338, "agenda-python-basics-2023-12-18-2023-12-20"]], "Python Basics (2023-12-18 - 2023-12-20)": [[339, "python-basics-2023-12-18-2023-12-20"], [340, "Python-Basics-(2023-12-18---2023-12-20)"], [341, "python-basics-2023-12-18-2023-12-20"], [387, "python-basics-2023-12-18-2023-12-20"]], "More About Datatypes": [[339, "more-about-datatypes"], [340, "More-About-Datatypes"], [349, "more-about-datatypes"]], "A Bit Of OO": [[339, "a-bit-of-oo"]], "Datatype Conversion": [[340, "Datatype-Conversion"]], "Weirdness (Comprehensions)": [[340, "Weirdness-(Comprehensions)"]], "Dictionary Comprehension (Exchange key and Value of dict)": [[340, "Dictionary-Comprehension-(Exchange-key-and-Value-of-dict)"]], "Functional Programming": [[340, "Functional-Programming"]], "set(), list(), dict()": [[340, "set(),-list(),-dict()"]], "while (and else)": [[340, "while-(and-else)"]], "range(), And Generators, The Iterator Protocol": [[340, "range(),-And-Generators,-The-Iterator-Protocol"]], "Return Value? Parameters?": [[340, "Return-Value?-Parameters?"]], "References, Immutability": [[340, "References,-Immutability"]], "Und Schuetzen?": [[340, "Und-Schuetzen?"]], "Comprehensions (Generator Expressions)": [[340, "Comprehensions-(Generator-Expressions)"]], "pathlib, os.path": [[340, "pathlib,-os.path"]], "Regexen": [[340, "Regexen"]], "distill.py": [[340, "distill.py"]], "C++ For Embedded Developers (Beginning of 2023)": [[342, "c-for-embedded-developers-beginning-of-2023"]], "Python/SAP": [[343, "python-sap"]], "Agenda: Python Advanced (2024-01-15 - 2024-01-17)": [[344, "agenda-python-advanced-2024-01-15-2024-01-17"]], "Numerics: Pandas, NumPy": [[344, "numerics-pandas-numpy"]], "Python Advanced (2024-01-15 - 2024-01-17)": [[345, "python-advanced-2024-01-15-2024-01-17"], [347, "python-advanced-2024-01-15-2024-01-17"], [387, "python-advanced-2024-01-15-2024-01-17"]], "Group Project": [[345, "group-project"], [375, "group-project"]], "Python Advanced (2023-01-15 - 2024-01-17)": [[346, "Python-Advanced-(2023-01-15---2024-01-17)"]], "DocStrings": [[346, "DocStrings"]], "Type System": [[346, "Type-System"], [408, "type-system"]], "Infinity?": [[346, "Infinity?"]], "dict, and enumerate()": [[346, "dict,-and-enumerate()"]], "Agenda: Python Basics (2024-01-29 - 2024-01-31)": [[348, "agenda-python-basics-2024-01-29-2024-01-31"]], "Pandas (Data Science Basics)": [[348, "pandas-data-science-basics"]], "Python Basics (2024-01-29 - 2024-01-31)": [[349, "python-basics-2024-01-29-2024-01-31"], [350, "Python-Basics-(2024-01-29---2024-01-31)"], [387, "python-basics-2024-01-29-2024-01-31"]], "More Datatypes, File IO": [[349, "more-datatypes-file-io"]], "os.listdir(), os.path.join()": [[349, "os-listdir-os-path-join"]], "Unit Testing (pytest), Project Management": [[349, "unit-testing-pytest-project-management"]], "(Optional) Exercise Series: CSV Files": [[349, "optional-exercise-series-csv-files"]], "pandas, numpy, scikit-learn": [[349, "pandas-numpy-scikit-learn"]], "Classes? Struct? Cell?": [[350, "Classes?-Struct?-Cell?"]], "Wuerfeln": [[350, "Wuerfeln"]], "Primeness, while": [[350, "Primeness,-while"]], "The range function": [[350, "The-range-function"]], "Sequences": [[350, "Sequences"]], "Misc Crap": [[350, "Misc-Crap"]], "Sequential Datatyoes": [[350, "Sequential-Datatyoes"]], "References, (Im)mutability, And Memory Management": [[350, "References,-(Im)mutability,-And-Memory-Management"]], "os, Und Einlesen Von Directories": [[350, "os,-Und-Einlesen-Von-Directories"]], "os.listdir(), os.path.join(), os.sep": [[350, "os.listdir(),-os.path.join(),-os.sep"]], "os.walk()": [[350, "os.walk()"]], "pathlib": [[350, "pathlib"]], "numpy, scikit-learn": [[350, "numpy,-scikit-learn"]], "Jupyter Notebook: Python Basics (2024-01-29 - 2024-01-31)": [[351, "jupyter-notebook-python-basics-2024-01-29-2024-01-31"]], "Screenplay Checker": [[354, "screenplay-checker"]], "GPIO: Blinklicht": [[355, "gpio-blinklicht"]], "Commandline": [[355, "commandline"], [360, "commandline"], [897, "commandline"]], "sysfs GPIO": [[355, "sysfs-gpio"]], "Electronic Aspect": [[355, "electronic-aspect"]], "External Circuitry": [[355, "external-circuitry"]], "Raspberry Header Pinout": [[355, "raspberry-header-pinout"]], "GPIO: Blinklicht Interface": [[356, "gpio-blinklicht-interface"]], "GPIO: Object Oriented Blinklicht": [[357, "gpio-object-oriented-blinklicht"]], "GPIO: Blinklicht Unittests": [[358, "gpio-blinklicht-unittests"]], "ECE19: Exercises and Custom Topics": [[359, "ece19-exercises-and-custom-topics"]], "Reading a File": [[360, "reading-a-file"], [959, "reading-a-file"]], "Output": [[360, "output"]], "2021-05-20 (G2)": [[361, "2021-05-20-(G2)"]], "Reading File in One Big Swoop": [[361, "Reading-File-in-One-Big-Swoop"]], "Reading File in Fixed Sized Chunks": [[361, "Reading-File-in-Fixed-Sized-Chunks"]], "Reading File Line by Line": [[361, "Reading-File-Line-by-Line"]], "Iterating a File": [[361, "Iterating-a-File"]], "String Methods (Needed to Implement the Exercise)": [[361, "String-Methods-(Needed-to-Implement-the-Exercise)"]], "str.strip(), str.rstrip(), str.lstrip()": [[361, "str.strip(),-str.rstrip(),-str.lstrip()"]], "str.split()": [[361, "str.split()"]], "2021-05-21": [[362, "2021-05-21"], [369, "id11"]], "Modules and Packages": [[362, "Modules-and-Packages"], [1042, "modules-and-packages"]], "Strings vs. Bytes": [[363, "Strings-vs.-Bytes"]], "Batteries": [[364, "Batteries"]], "Key Value Map": [[364, "Key-Value-Map"]], "Comments vs Documentation": [[364, "Comments-vs-Documentation"]], "Multiline String (btw.)": [[364, "Multiline-String-(btw.)"]], "Integer Numbers (Literals)": [[364, "Integer-Numbers-(Literals)"]], "Arithmetic Operators": [[364, "Arithmetic-Operators"], [413, "arithmetic-operators"], [1054, "arithmetic-operators"]], "Wertebereich von Integers": [[364, "Wertebereich-von-Integers"]], "An Example": [[365, "An-Example"], [1077, "an-example"]], "Sidenote: Pure Beauty": [[365, "Sidenote:-Pure-Beauty"], [1077, "sidenote-pure-beauty"]], "Parameters and Types": [[365, "Parameters-and-Types"], [1077, "parameters-and-types"]], "Pitfalls": [[365, "Pitfalls"]], "Cloud Computer, SSH Login": [[366, "cloud-computer-ssh-login"]], "Machine, Logins": [[366, "machine-logins"]], "Login via Secure Shell (SSH)": [[366, "login-via-secure-shell-ssh"]], "Formalit\u00e4ten": [[367, "formalitaten"]], "Embedded Computing 1 (ECE 19)": [[368, "embedded-computing-1-ece-19"]], "Daily Log": [[369, "daily-log"]], "2021-03-04": [[369, "id1"]], "2021-03-05": [[369, "id2"]], "Cheat Sheets": [[369, null]], "2021-03-18": [[369, "id3"]], "2021-03-26": [[369, "id4"]], "2021-04-15": [[369, "id5"]], "2021-04-21": [[369, "id6"]], "Git Intro": [[369, "git-intro"]], "Download and Installation": [[369, null], [374, null]], "2021-04-29": [[369, "id7"]], "2021-05-10": [[369, "id8"]], "Org Stuff": [[369, "org-stuff"]], "Python: Functions": [[369, "python-functions"]], "2021-05-12": [[369, "id9"]], "Python: Walk-Through Passing and Failing an Exam": [[369, "python-walk-through-passing-and-failing-an-exam"]], "2021-05-{19,20}": [[369, "id10"]], "Reiterating on Exercise": [[369, "reiterating-on-exercise"]], "import argparse": [[369, "import-argparse"]], "Exercise digit (Once More)": [[369, "exercise-digit-once-more"]], "2021-06-01": [[369, "id12"]], "sysfs GPIO: Blinking an LED": [[369, "sysfs-gpio-blinking-an-led"]], "2021-06-07": [[369, "id13"]], "Embedded Computing 1 (Deutsch)": [[370, "embedded-computing-1-deutsch"]], "Lehrinhalte": [[370, "lehrinhalte"]], "Lernergebnisse der LV": [[370, "lernergebnisse-der-lv"]], "Empfohlene oder verpflichtende Fachliteratur und andere Lernressourcen bzw. \u2013instrumente": [[370, "empfohlene-oder-verpflichtende-fachliteratur-und-andere-lernressourcen-bzw-instrumente"]], "Art der Vermittlung": [[370, "art-der-vermittlung"]], "Voraussetzungen und Begleitbedingungen": [[370, "voraussetzungen-und-begleitbedingungen"]], "Pr\u00fcfungsmethode und Beurteilungskriterien": [[370, "prufungsmethode-und-beurteilungskriterien"]], "Embedded Computing 1 (English)": [[371, "embedded-computing-1-english"]], "Course Content": [[371, "course-content"]], "Learning Outcome": [[371, "learning-outcome"]], "Recommended or Required Reading and Other Learning Resources / Tools": [[371, "recommended-or-required-reading-and-other-learning-resources-tools"]], "Mode of delivery": [[371, "mode-of-delivery"]], "Prerequisites and Co-Requisites": [[371, "prerequisites-and-co-requisites"]], "Assessment Methods and Criteria": [[371, "assessment-methods-and-criteria"]], "Plan for Summer 2021": [[372, "plan-for-summer-2021"]], "Linux Introduction": [[372, "linux-introduction"]], "Slides": [[372, null], [372, null], [372, null]], "C/C++ Development": [[372, "c-c-development"]], "Python Development": [[372, "python-development"]], "2021-10-07": [[373, "id1"]], "Whose Fault It Is": [[373, "whose-fault-it-is"]], "2021-10-12 (Bringing Newcomers Up-to-Date)": [[374, "bringing-newcomers-up-to-date"]], "Linux/UNIX": [[374, "linux-unix"]], "Git": [[374, "git"]], "2021-10-28": [[375, "id1"]], "Discussion of Tasks": [[375, "discussion-of-tasks"]], "TODOs": [[375, "todos"]], "2021-11-15": [[376, "id1"]], "Systems Programming: Files, Directories, Links \u2026": [[376, "systems-programming-files-directories-links"]], "2021-11-29": [[377, "id1"]], "jjjj": [[377, "jjjj"]], "2021-12-1{4,5}": [[378, "id1"]], "Future Topics": [[378, "future-topics"]], "Threading": [[378, "threading"]], "C++ Sideways": [[378, "c-sideways"]], "2022-01-10": [[379, "id1"]], "Scheduling": [[379, "scheduling"], [993, "scheduling"], [994, "scheduling"]], "2022-01-12": [[380, "id1"]], "Scheduling and Realtime": [[380, "scheduling-and-realtime"], [384, "scheduling-and-realtime"]], "2022-02-15": [[381, "id1"]], "Agenda/Log": [[382, "agenda-log"], [383, "agenda-log"]], "Embedded Computing 2 (ECE 19)": [[383, "embedded-computing-2-ece-19"]], "Project Repository": [[383, "project-repository"]], "Test Material": [[383, "test-material"]], "Exam Material Overview": [[384, "exam-material-overview"]], "Questions": [[384, "questions"], [384, "id1"], [676, "questions"], [870, "questions"], [884, "questions"], [885, "questions"], [910, "questions"], [1017, "questions"]], "Slide Material": [[384, "slide-material"], [384, "id2"]], "Embedded Computing 1+2, ECE 19": [[385, "embedded-computing-1-2-ece-19"]], "Training Material: Overview and Download": [[388, "training-material-overview-and-download"]], "On Windows": [[389, "on-windows"]], "On Linux": [[389, "on-linux"]], "The Book (1)": [[390, "the-book-1"]], "The Book (2)": [[390, "the-book-2"]], "The Beginning": [[390, "the-beginning"]], "Cool Guys and Their Hobby": [[390, "cool-guys-and-their-hobby"]], "History of UNIX": [[390, "history-of-unix"]], "My First Program (1)": [[391, "my-first-program-1"]], "My First Program (2)": [[391, "my-first-program-2"]], "Character Arrays - Strings": [[391, "character-arrays-strings"]], "Variables and Arithmetic": [[392, "variables-and-arithmetic"]], "My Second Program (1)": [[392, "my-second-program-1"]], "My Second Program (2)": [[392, "my-second-program-2"]], "My Second Program (3)": [[392, "my-second-program-3"]], "My Second Program (4)": [[392, "my-second-program-4"]], "Exercise: A Better Fahrenheit Table": [[393, "exercise-a-better-fahrenheit-table"]], "for: Loop Simplification (1)": [[394, "for-loop-simplification-1"]], "for: Loop Simplification (2)": [[394, "for-loop-simplification-2"]], "Second Program, revisited": [[394, "second-program-revisited"]], "Exercise: Fahrenheit Table Using for": [[395, "exercise-fahrenheit-table-using-for"]], "Symbolic Constants": [[396, "symbolic-constants"]], "C Preprocessor: Symbolic Constants": [[396, "c-preprocessor-symbolic-constants"]], "Exercise: Fahrenheit Table Using Macros": [[397, "exercise-fahrenheit-table-using-macros"]], "Character I/O": [[398, "character-i-o"]], "The Outside World": [[398, "the-outside-world"]], "cat for the Poor (1)": [[398, "cat-for-the-poor-1"]], "cat for the Poor (2)": [[398, "cat-for-the-poor-2"]], "More Examples \u2026": [[398, "more-examples"]], "More Examples - if": [[398, "more-examples-if"]], "if, Formally": [[398, "if-formally"]], "Operators, Formally": [[398, "operators-formally"]], "Exercise: wc For The Poor": [[399, "exercise-wc-for-the-poor"]], "Arrays": [[400, "arrays"]], "Array Definition, Explicit Initialization": [[400, "array-definition-explicit-initialization"]], "Array Access": [[400, "array-access"]], "Discussion: Initialization": [[400, "discussion-initialization"]], "Discussion: if, else": [[400, "discussion-if-else"]], "Array Initializer": [[400, "array-initializer"]], "Discussion: Initializer": [[400, "discussion-initializer"]], "Initialization using memset()": [[400, "initialization-using-memset"]], "Discussion: memset()": [[400, "discussion-memset"]], "Exercise: Character Histogram": [[401, "exercise-character-histogram"]], "A Nonsensical Example": [[402, "a-nonsensical-example"]], "Function Signature": [[402, "function-signature"]], "Discussion": [[402, "discussion"]], "Definition vs. Declaration (1)": [[402, "definition-vs-declaration-1"]], "Definition vs. Declaration (2)": [[402, "definition-vs-declaration-2"]], "By Value / By Reference": [[402, "by-value-by-reference"]], "Exercise: Forward Declaration": [[403, "exercise-forward-declaration"]], "Character Arrays": [[404, "character-arrays"]], "Strings: Mistake by Design?": [[404, "strings-mistake-by-design"]], "Strings: Definition": [[404, "strings-definition"]], "Strings: Library Functions": [[404, "strings-library-functions"]], "Strings as Parameters": [[404, "strings-as-parameters"]], "Strings: Dangers": [[404, "strings-dangers"]], "Exercise: Read Line Into String from stdin": [[405, "exercise-read-line-into-string-from-stdin"]], "Lifetime of Variables": [[406, "lifetime-of-variables"]], "Lifetime": [[406, "lifetime"]], "Global Variables": [[406, "global-variables"], [580, "global-variables"]], "Global Variables: How?": [[406, "global-variables-how"]], "Variable Names": [[409, "variable-names"]], "Variable- and Function Names": [[409, "variable-and-function-names"]], "Data Types, Sizes": [[410, "data-types-sizes"]], "Standard Data Types And Their Sizes": [[410, "standard-data-types-and-their-sizes"]], "Integer Variants (\u201cQualifiers\u201d)": [[410, "integer-variants-qualifiers"]], "Widths": [[410, "widths"]], "Constants": [[411, "constants"]], "Constants and Types": [[411, "constants-and-types"]], "Character Constants: Escape Sequences": [[411, "character-constants-escape-sequences"]], "String Constants": [[411, "string-constants"]], "Character vs. String Constants": [[411, "character-vs-string-constants"]], "Symbolic Constants (1)": [[411, "symbolic-constants-1"]], "Symbolic Constants (2)": [[411, "symbolic-constants-2"]], "Variable Definitions": [[412, "variable-definitions"]], "Definitions und Initialization": [[412, "definitions-und-initialization"]], "Initialization of Automatic Variables": [[412, "initialization-of-automatic-variables"]], "Initialization of Global Variables": [[412, "initialization-of-global-variables"]], "Arithmetic Operators (1)": [[413, "arithmetic-operators-1"]], "Arithmetic Operators (2)": [[413, "arithmetic-operators-2"]], "Relational and Logical Operators": [[414, "relational-and-logical-operators"]], "Relational Operators (1)": [[414, "relational-operators-1"]], "Relational Operators (2)": [[414, "relational-operators-2"]], "Logical (Boolean) Operators": [[414, "logical-boolean-operators"]], "Boolean Operators: Short-Circuit": [[414, "boolean-operators-short-circuit"]], "Type Conversions": [[415, "type-conversions"]], "Implicit Type Conversions": [[415, "implicit-type-conversions"]], "Sign Bugs": [[415, "sign-bugs"]], "Truncation": [[415, "truncation"]], "Sign Propagation": [[415, "sign-propagation"]], "Conversion Using Operators": [[415, "conversion-using-operators"]], "Conversion and unsigned (1)": [[415, "conversion-and-unsigned-1"]], "Conversion and unsigned (2)": [[415, "conversion-and-unsigned-2"]], "Compiler Warnings": [[415, "compiler-warnings"]], "Last Warning": [[415, "last-warning"], [987, "last-warning"]], "Forced Conversion - Cast": [[415, "forced-conversion-cast"]], "Increment, Decrement": [[416, "increment-decrement"]], "Confusion: ++, --": [[416, "confusion"]], "Confused to perfection (1)": [[416, "confused-to-perfection-1"]], "Confused to perfection (2)": [[416, "confused-to-perfection-2"]], "Exercise: Copy and Reduce String": [[417, "exercise-copy-and-reduce-string"]], "Bit-Operators": [[418, "bit-operators"]], "Bit Manipulation": [[418, "bit-manipulation"]], "Bitwise AND and OR": [[418, "bitwise-and-and-or"]], "Bitwise XOR": [[418, "bitwise-xor"]], "Shift Left": [[418, "shift-left"]], "Shift Right": [[418, "shift-right"]], "Inverting (\u201cOne\u2019s-Complement\u201d)": [[418, "inverting-one-s-complement"]], "Assignment with Calculation": [[419, "assignment-with-calculation"]], "Combined Operators": [[419, "combined-operators"]], "?: - Conditional Expression": [[420, "conditional-expression"]], "?: - Conditional Expression (1)": [[420, "conditional-expression-1"]], "?: - Conditional Expression (2)": [[420, "conditional-expression-2"]], "Precedence, Associativity": [[421, "precedence-associativity"]], "Summary: Operators": [[421, "summary-operators"]], "Operators: Precedence und Associativity (1)": [[421, "operators-precedence-und-associativity-1"]], "Operators: Precedence und Associativity (2)": [[421, "operators-precedence-und-associativity-2"]], "More Warnings": [[421, "more-warnings"]], "Statements and Blocks": [[423, "statements-and-blocks"]], "Statement vs. Block": [[423, "statement-vs-block"]], "if - else": [[424, "if-else"]], "Branches": [[424, "branches"]], "True or False? What is Truth?": [[424, "true-or-false-what-is-truth"]], "else is optional (1)": [[424, "else-is-optional-1"]], "else is optional (2)": [[424, "else-is-optional-2"]], "else - if": [[425, "else-if"]], "Style Matters": [[425, "style-matters"]], "switch": [[426, "switch"], [426, "id1"]], "Case Distinctions": [[426, "case-distinctions"]], "if - else if vs. switch": [[426, "if-else-if-vs-switch"]], "Loops: while and for": [[427, "loops-while-and-for"]], "while: general purpose loop": [[427, "while-general-purpose-loop"]], "From while to for (1)": [[427, "from-while-to-for-1"]], "From while to for (2)": [[427, "from-while-to-for-2"]], "for, a Little Closer": [[427, "for-a-little-closer"]], "Comma Operator": [[427, "comma-operator"]], "for: Infamous Idioms": [[427, "for-infamous-idioms"]], "Loops: do - while": [[428, "loops-do-while"]], "do - while: Condition After Body": [[428, "do-while-condition-after-body"]], "goto and Labels": [[430, "goto-and-labels"]], "Structured Programming vs. goto": [[430, "structured-programming-vs-goto"]], "goto: Definition": [[430, "goto-definition"]], "goto: Use Cases": [[430, "goto-use-cases"]], "Nesting": [[432, "nesting"]], "Declaration vs. Definition": [[432, "declaration-vs-definition"]], "A Monolithic Program": [[432, "a-monolithic-program"]], "Separate Compilation": [[432, "separate-compilation"]], "Extern/Global Variables": [[433, "extern-global-variables"]], "Variables: Declaration and Definition": [[433, "variables-declaration-and-definition"]], "Variables: Separating Declaration from Definition (1)": [[433, "variables-separating-declaration-from-definition-1"]], "Variables: Separating Declaration from Definition (2)": [[433, "variables-separating-declaration-from-definition-2"]], "Header Files": [[434, "header-files"]], "Declarations: Problems (1)": [[434, "declarations-problems-1"]], "Declarations: Problems (2)": [[434, "declarations-problems-2"]], "Declarations: Solutions": [[434, "declarations-solutions"]], "Static Variables": [[435, "static-variables"]], "Lifetime and Visibility (1)": [[435, "lifetime-and-visibility-1"]], "Automatic Variables": [[435, "automatic-variables"]], "Local static Variable": [[435, "local-static-variable"]], "Global static Variable": [[435, "global-static-variable"]], "Global Variable": [[435, "global-variable"], [1076, "global-variable"]], "C Preprocessor: Basics": [[436, "c-preprocessor-basics"]], "#include": [[436, "include"]], "Macros: Text Replacement": [[436, "macros-text-replacement"]], "Macros: Constant Definition": [[436, "macros-constant-definition"]], "Macros: Inline Replacement as Function Call (1)": [[436, "macros-inline-replacement-as-function-call-1"]], "Macros: Inline Replacement as Function Call (2)": [[436, "macros-inline-replacement-as-function-call-2"]], "Include Guards (1)": [[436, "include-guards-1"]], "Include Guards (2)": [[436, "include-guards-2"]], "The C Preprocessor: Last Words": [[436, "the-c-preprocessor-last-words"], [437, "the-c-preprocessor-last-words"]], "C Preprocessor: More": [[437, "c-preprocessor-more"]], "Conditional Compilation: Rules": [[437, "conditional-compilation-rules"]], "Conditional Compilation: Examples": [[437, "conditional-compilation-examples"]], "Conditional Compilation: Last Words": [[437, "conditional-compilation-last-words"]], "Macros: Spanning Multiple Lines": [[437, "macros-spanning-multiple-lines"]], "Macros: Multiple Statements as One Statement (1)": [[437, "macros-multiple-statements-as-one-statement-1"]], "Macros: Multiple Statements as One Statement (2)": [[437, "macros-multiple-statements-as-one-statement-2"]], "Stringification (1)": [[437, "stringification-1"]], "Stringification (2)": [[437, "stringification-2"]], "Token Pasting (1)": [[437, "token-pasting-1"]], "Token Pasting (2)": [[437, "token-pasting-2"]], "Warnings and Errors": [[437, "warnings-and-errors"]], "Predefined Macros (1)": [[437, "predefined-macros-1"]], "Pointers and Addresses": [[439, "pointers-and-addresses"]], "Pointers: Basics": [[439, "pointers-basics"]], "Pointer: Operators": [[439, "pointer-operators"]], "More Examples": [[439, "more-examples"]], "Pointers as Function Parameters": [[440, "pointers-as-function-parameters"]], "Call by Reference (1)": [[440, "call-by-reference-1"]], "Call by Reference (2)": [[440, "call-by-reference-2"]], "Exercise: Function That Swaps Two Variables": [[441, "exercise-function-that-swaps-two-variables"]], "Pointers and Arrays": [[442, "pointers-and-arrays"], [444, "pointers-and-arrays"]], "It\u2019s Only Memory": [[442, "it-s-only-memory"]], "Conversion Array \u27f6 Pointer": [[442, "conversion-array-longrightarrow-pointer"]], "Pointer Arithmetic (1)": [[442, "pointer-arithmetic-1"]], "Pointer Arithmetic (2)": [[442, "pointer-arithmetic-2"]], "Pointer Arithmetic (3)": [[442, "pointer-arithmetic-3"]], "Pointer Arithmetic: Difference": [[442, "pointer-arithmetic-difference"]], "Pointer Arithmetic: Array Algorithms": [[442, "pointer-arithmetic-array-algorithms"]], "Pointer Arithmetic: Jump Width? (1)": [[442, "pointer-arithmetic-jump-width-1"]], "Pointer Arithmetic: Jump Width? (2)": [[442, "pointer-arithmetic-jump-width-2"]], "Pointer Arithmetic: Arbitrary Datatypes": [[442, "pointer-arithmetic-arbitrary-datatypes"]], "See also": [[443, null], [868, null], [873, null], [873, null], [874, null], [874, null], [874, null], [879, null], [880, null], [963, null], [990, null], [993, null], [997, null], [999, null], [1078, null]], "main() Can Take Parameters": [[443, "main-can-take-parameters"]], "struct: Basics": [[445, "struct-basics"]], "struct: Compound Datatypes": [[445, "struct-compound-datatypes"]], "struct: How?": [[445, "struct-how"]], "Usage": [[445, "usage"], [635, "usage"], [642, "usage"]], "Nested Structures": [[445, "nested-structures"]], "Memory Layout": [[445, "memory-layout"]], "Recursive Structures?": [[445, "recursive-structures"]], "struct: Functions": [[446, "struct-functions"]], "Parameters and Return (1)": [[446, "parameters-and-return-1"]], "Parameters and Return (2)": [[446, "parameters-and-return-2"]], "Parameters and Return (3)": [[446, "parameters-and-return-3"]], "typedef: Type Alias": [[447, "typedef-type-alias"]], "Alias for Type Names": [[447, "alias-for-type-names"]], "Dynamic Memory": [[449, "dynamic-memory"], [449, "id1"]], "Stack and Global Memory": [[449, "stack-and-global-memory"]], "Dynamic Memory - Usage": [[449, "dynamic-memory-usage"]], "Singly Linked List": [[450, "singly-linked-list"]], "Exercises (1)": [[450, "exercises-1"]], "Exercises (2)": [[450, "exercises-2"]], "Exercises (3)": [[450, "exercises-3"]], "Exercises (4)": [[450, "exercises-4"]], "Exercises (5)": [[450, "exercises-5"]], "Exercises (6)": [[450, "exercises-6"]], "Exercises (7)": [[450, "exercises-7"]], "Exercises (8)": [[450, "exercises-8"]], "Exercises (9)": [[450, "exercises-9"]], "Exercises (10)": [[450, "exercises-10"]], "Exercises (11)": [[450, "exercises-11"]], "Volatile": [[452, "volatile"]], "volatile: The Lie (1)": [[452, "volatile-the-lie-1"]], "volatile: The Lie (2)": [[452, "volatile-the-lie-2"]], "volatile: Valid Use: Hardware": [[452, "volatile-valid-use-hardware"]], "volatile: Valid Use: Unix Signal Handlers": [[452, "volatile-valid-use-unix-signal-handlers"]], "Compiler Intrinsics": [[453, "compiler-intrinsics"]], "Atomic Memory Access": [[453, "atomic-memory-access"]], "Atomic Memory Access: Load/Modify/Store": [[453, "atomic-memory-access-load-modify-store"]], "Load/Modify/Store: Mutex": [[453, "load-modify-store-mutex"]], "Atomic Instructions": [[453, "atomic-instructions"], [982, "atomic-instructions"]], "More GCC \u201cBuiltins\u201d": [[453, "more-gcc-builtins"]], "Alignment": [[454, "alignment"]], "Data Alignment": [[454, "data-alignment"]], "Data Alignment, Compilers": [[454, "data-alignment-compilers"]], "Unaligned Data Access (1)": [[454, "unaligned-data-access-1"]], "Unaligned Data Access (2)": [[454, "unaligned-data-access-2"]], "Padding (1)": [[454, "padding-1"]], "Padding (2)": [[454, "padding-2"]], "Padding (3)": [[454, "padding-3"]], "Padding (4)": [[454, "padding-4"]], "Structure Alignment (1)": [[454, "structure-alignment-1"]], "Structure Alignment (2)": [[454, "structure-alignment-2"]], "And Arrays? (1)": [[454, "and-arrays-1"]], "And Arrays? (2)": [[454, "and-arrays-2"]], "And Arrays? (3)": [[454, "and-arrays-3"]], "Sanity and Readabilty": [[456, "sanity-and-readabilty"]], "Shooting Offense: Unobvious Solution": [[456, "shooting-offense-unobvious-solution"]], "Shooting Offense: Unobvious Problem": [[456, "shooting-offense-unobvious-problem"]], "Shooting Offenses": [[456, "shooting-offenses"]], "Ambiguity": [[456, "ambiguity"]], "Readability": [[456, "readability"]], "Code Smells": [[456, "code-smells"]], "Know Your Integers": [[457, "know-your-integers"]], "Standard Data Types: size_t (1)": [[457, "standard-data-types-size-t-1"]], "Standard Data Types: size_t (2)": [[457, "standard-data-types-size-t-2"]], "Discrete Values - enum": [[458, "discrete-values-enum"], [458, "id1"]], "Discrete Values": [[458, "discrete-values"]], "Discrete Values - Traditional Approach (1)": [[458, "discrete-values-traditional-approach-1"]], "Discrete Values - Traditional Approach (2)": [[458, "discrete-values-traditional-approach-2"]], "Discrete Values - Wishlist": [[458, "discrete-values-wishlist"]], "Discrete Values - enum and switch": [[458, "discrete-values-enum-and-switch"], [458, "id2"]], "Discrete Values - Close to Perfection": [[458, "discrete-values-close-to-perfection"]], "Visibility - static": [[459, "visibility-static"]], "Visibility": [[459, "visibility"]], "A Somewhat Contrived Example (1)": [[459, "a-somewhat-contrived-example-1"]], "A Somewhat Contrived Example (2)": [[459, "a-somewhat-contrived-example-2"]], "The static Keyword (Hooray!)": [[459, "the-static-keyword-hooray"]], "Correctness - const": [[460, "correctness-const"]], "Non-Modifiable Memory (1)": [[460, "non-modifiable-memory-1"]], "Non-Modifiable Memory (2)": [[460, "non-modifiable-memory-2"]], "The const Keyword (1)": [[460, "the-const-keyword-1"]], "The const Keyword (2)": [[460, "the-const-keyword-2"]], "const Variables": [[460, "const-variables"]], "const Parameters (1)": [[460, "const-parameters-1"]], "const Parameters (2)": [[460, "const-parameters-2"]], "Pointers, Pointers, Pointers \u2026 (1)": [[460, "pointers-pointers-pointers-1"]], "Pointers, Pointers, Pointers \u2026 (2)": [[460, "pointers-pointers-pointers-2"]], "Pointers, Pointers, Pointers \u2026 (3)": [[460, "pointers-pointers-pointers-3"]], "Pointers, Pointers, Pointers \u2026 (4)": [[460, "pointers-pointers-pointers-4"]], "Pointers, Pointers, Pointers \u2026 (5)": [[460, "pointers-pointers-pointers-5"]], "Pointers, Pointers, Pointers \u2026 (6)": [[460, "pointers-pointers-pointers-6"]], "Pointers, Pointers, Pointers \u2026 (7)": [[460, "pointers-pointers-pointers-7"]], "Pointers, Pointers, Pointers \u2026 (8)": [[460, "pointers-pointers-pointers-8"]], "Pointers, Pointers, Pointers \u2026 (9)": [[460, "pointers-pointers-pointers-9"]], "Struct Initialization": [[461, "struct-initialization"]], "Good Old Struct Initialization": [[461, "good-old-struct-initialization"]], "C99 Designated Initializer": [[461, "c99-designated-initializer"]], "Explict Type Safety": [[462, "explict-type-safety"]], "Integer Types Are Ambiguous": [[462, "integer-types-are-ambiguous"]], "Example: Ambiguous Error Schemes (1)": [[462, "example-ambiguous-error-schemes-1"]], "Example: Ambiguous Error Schemes (2)": [[462, "example-ambiguous-error-schemes-2"]], "Example: Ambiguous Error Schemes (3)": [[462, "example-ambiguous-error-schemes-3"]], "Artificial Integer Type Safety": [[462, "artificial-integer-type-safety"]], "Error Schemes, Revisited": [[462, "error-schemes-revisited"]], "Error Schemes: Encapsulating Unix Details": [[462, "error-schemes-encapsulating-unix-details"]], "Error Schemes: Using Encapsulated Stuff": [[462, "error-schemes-using-encapsulated-stuff"]], "Wrap-Up: Artificial Type Safety": [[462, "wrap-up-artificial-type-safety"]], "valgrind": [[463, "valgrind"]], "Valgrind": [[463, "id1"]], "Valgrind in Action (1)": [[463, "valgrind-in-action-1"]], "Valgrind in Action (2)": [[463, "valgrind-in-action-2"]], "Valgrind in Action (3)": [[463, "valgrind-in-action-3"]], "Valgrind: more \u2026": [[463, "valgrind-more"]], "Optimization": [[465, "optimization"]], "Optimization - Introduction": [[465, "optimization-introduction"]], "Compute Bound or IO Bound? (1)": [[465, "compute-bound-or-io-bound-1"]], "Compute Bound or IO Bound? (2)": [[465, "compute-bound-or-io-bound-2"]], "Compute Bound or IO Bound? (3)": [[465, "compute-bound-or-io-bound-3"]], "What to do Next?": [[465, "what-to-do-next"]], "Optimizations: Compute Bound Code": [[466, "optimizations-compute-bound-code"]], "Many Ways of Optimization": [[466, "many-ways-of-optimization"]], "Unnecessary Optimizations": [[466, "unnecessary-optimizations"]], "Inlining (1)": [[466, "inlining-1"]], "Inlining (2)": [[466, "inlining-2"]], "Inlining (3)": [[466, "inlining-3"]], "Register Allocation (1)": [[466, "register-allocation-1"]], "Register Allocation (2)": [[466, "register-allocation-2"]], "Peephole Optimization": [[466, "peephole-optimization"]], "Peephole Optimization: Common Subexpression Elimination": [[466, "peephole-optimization-common-subexpression-elimination"]], "Peephole Optimization: Strength Reduction": [[466, "peephole-optimization-strength-reduction"]], "Peephole Optimization: Constant Folding": [[466, "peephole-optimization-constant-folding"]], "Loop Invariants": [[466, "loop-invariants"]], "Loop Unrolling": [[466, "loop-unrolling"]], "Tail Call Optimization": [[466, "tail-call-optimization"]], "CPU Optimization, Last Words": [[466, "cpu-optimization-last-words"]], "GCC: Optimization \u201cLevels\u201d": [[466, "gcc-optimization-levels"]], "Further Reading": [[466, "further-reading"]], "Optimizations: Memory Optimizations": [[467, "optimizations-memory-optimizations"]], "Memory: Caches": [[467, "memory-caches"]], "Locality of reference": [[467, "locality-of-reference"]], "Multidimensional Arrays": [[467, "multidimensional-arrays"]], "Multidimensional Arrays: Cache Thrashing": [[467, "multidimensional-arrays-cache-thrashing"]], "Multidimensional Arrays: Forward Indexing": [[467, "multidimensional-arrays-forward-indexing"]], "Profiling - Famous Words": [[469, "profiling-famous-words"]], "Donald E. Knuth": [[469, null]], "Tony Hoare": [[469, null]], "Larry Wall": [[469, null]], "The Practice of Programming, Brian W. Kernighan and\n             Rob Pike": [[469, null]], "Profiling - Introduction": [[469, "profiling-introduction"]], "GNU Profiler - gprof": [[470, "gnu-profiler-gprof"]], "gprof - How it Works": [[470, "gprof-how-it-works"]], "Using gprof": [[470, "using-gprof"]], "gprof: Flat Profile": [[470, "gprof-flat-profile"]], "gprof: Call Graph": [[470, "gprof-call-graph"]], "gprof: Interpreting The Results": [[470, "gprof-interpreting-the-results"]], "gprof: Visualization": [[470, "gprof-visualization"]], "callgrind": [[471, "callgrind"]], "callgrind - How it Works": [[471, "callgrind-how-it-works"]], "callgrind - How it is Used": [[471, "callgrind-how-it-is-used"]], "callgrind - Analysis Per Commandline": [[471, "callgrind-analysis-per-commandline"]], "callgrind - Analysis With kcachegrind": [[471, "callgrind-analysis-with-kcachegrind"]], "callgrind - Useful Options": [[471, "callgrind-useful-options"]], "oprofile": [[472, "oprofile"]], "oprofile - How it Works": [[472, "oprofile-how-it-works"]], "oprofile - Basic Usage (1)": [[472, "oprofile-basic-usage-1"]], "oprofile - Basic Usage (2)": [[472, "oprofile-basic-usage-2"]], "oprofile - Too Much Information": [[472, "oprofile-too-much-information"]], "oprofile - Call Graph": [[472, "oprofile-call-graph"]], "oprofile - Kernel Symbols (1)": [[472, "oprofile-kernel-symbols-1"]], "oprofile - Kernel Symbols (2)": [[472, "oprofile-kernel-symbols-2"]], "oprofile - Kernel Modules": [[472, "oprofile-kernel-modules"]], "oprofile - System-Wide Profiling": [[472, "oprofile-system-wide-profiling"]], "oprofile - Offline Profiling": [[472, "oprofile-offline-profiling"]], "oprofile - Graphical Beauty": [[472, "oprofile-graphical-beauty"]], "The C Programming Language": [[474, "the-c-programming-language"]], "Group Description": [[474, "group-description"], [602, "group-description"], [692, "group-description"], [734, "group-description"], [735, "group-description"], [783, "group-description"], [787, "group-description"], [789, "group-description"], [931, "group-description"], [939, "group-description"], [940, "group-description"], [407, "group-description"], [422, "group-description"], [431, "group-description"], [438, "group-description"], [444, "group-description"], [448, "group-description"], [451, "group-description"], [455, "group-description"], [464, "group-description"], [468, "group-description"], [473, "group-description"], [594, "group-description"], [617, "group-description"], [620, "group-description"], [623, "group-description"], [664, "group-description"], [673, "group-description"], [759, "group-description"], [767, "group-description"], [771, "group-description"], [994, "group-description"]], "Messages From The Book": [[475, "messages-from-the-book"]], "What\u2019s There? What Have We Accomplished?": [[476, "what-s-there-what-have-we-accomplished"]], "Rules? Why Rules?": [[476, "rules-why-rules"]], "Coding Style": [[476, "coding-style"]], "Disclaimer": [[476, null]], "Design Principles: SOLID": [[476, "design-principles-solid"]], "Another One: YAGNI": [[476, "another-one-yagni"]], "Architecture": [[476, "architecture"]], "Project Management: Traditional": [[476, "project-management-traditional"]], "Project Management: Software": [[476, "project-management-software"]], "So What?": [[476, "so-what"]], "Is Software A Craft? Software Is A Craft! \u27f6 Clean Code": [[477, "is-software-a-craft-software-is-a-craft-longrightarrow-clean-code"]], "Uncle Bob": [[477, "uncle-bob"]], "A Typical Project (Livehacking Screenplay: My Own Bookkeeping Effort)": [[478, "a-typical-project-livehacking-screenplay-my-own-bookkeeping-effort"]], "Spaghetti Version": [[478, "spaghetti-version"]], "A Little Better: Functions (And Commandline Parameters)": [[478, "a-little-better-functions-and-commandline-parameters"]], "Feature Request: Concatenate Input Data From Multiple CSV Files": [[478, "feature-request-concatenate-input-data-from-multiple-csv-files"]], "Feature Request: Concatenate Input Data From YYYY-MM.csv Files": [[478, "feature-request-concatenate-input-data-from-yyyy-mm-csv-files"]], "Where Are We? Questions!": [[478, "where-are-we-questions"]], "Testability: Input Cleaning": [[478, "testability-input-cleaning"]], "Testability: Reading Input (One Or Multiple Files, Explicitly)": [[478, "testability-reading-input-one-or-multiple-files-explicitly"]], "Test Sanity: Common Code": [[478, "test-sanity-common-code"]], "Testability: Reading Input From Directory": [[478, "testability-reading-input-from-directory"]], "Testability: Categorization": [[478, "testability-categorization"]], "Safety Net In Place \u27f6 Refactoring Categorization": [[478, "safety-net-in-place-longrightarrow-refactoring-categorization"]], "Refactoring Input Reading (\u27f6 Overengineering)": [[478, "refactoring-input-reading-longrightarrow-overengineering"]], "Basics: Boilerplate, And Executables": [[479, "basics-boilerplate-and-executables"]], "Single Monolithic Executable": [[479, "single-monolithic-executable"]], "Building With CMake": [[479, "building-with-cmake"]], "Building With CMake: Separate Source And Build Directories": [[479, "building-with-cmake-separate-source-and-build-directories"]], "Executables Consisting Of Multiple Sources": [[479, "executables-consisting-of-multiple-sources"]], "Problem: Duplicate Compilation": [[479, "problem-duplicate-compilation"]], "Problem: More Functionality": [[479, "problem-more-functionality"]], "Solution: Libraries": [[479, "solution-libraries"], [1029, "solution-libraries"]], "\u201cConfigured\u201d Header Files": [[480, "configured-header-files"]], "Problem": [[480, "problem"], [488, "problem"], [494, "problem"], [495, "problem"], [496, "problem"], [499, "problem"], [505, "problem"], [553, "problem"], [827, "problem"], [958, "problem"]], "Configured Files": [[480, "configured-files"]], "Use In Compiled Code": [[480, "use-in-compiled-code"]], "C++, Debug/Release, CMake \u201cProgramming\u201d, Rants": [[481, "c-debug-release-cmake-programming-rants"]], "Pause": [[481, "pause"]], "Class Diagram": [[481, "class-diagram"]], "C++ Standard Version": [[481, "c-standard-version"]], "Debug Vs. Release Builds: CMAKE_BUILD_TYPE": [[481, "debug-vs-release-builds-cmake-build-type"]], "Compiler Type": [[481, "compiler-type"]], "Strings And Lists": [[481, "strings-and-lists"]], "MESSAGE() (A.k.a printf() Debugging)": [[481, "message-a-k-a-printf-debugging"]], "MESSAGE(): Popular \u201cModes\u201d": [[481, "message-popular-modes"]], "FIND_PACKAGE()": [[482, "find-package"]], "FIND_PACKAGE(... REQUIRED)": [[482, "find-package-required"]], "SQLite3 Parameters": [[482, "sqlite3-parameters"]], "Using SQLite3 Parameters": [[482, "using-sqlite3-parameters"]], "Demo Time": [[482, "demo-time"]], "CMake: An Introduction": [[483, "cmake-an-introduction"]], "Installation (\u201cDeployment\u201d)": [[484, "installation-deployment"]], "\u201cPrefix\u201d: Where Everything Comes Together": [[484, "prefix-where-everything-comes-together"]], "Installing Targets": [[484, "installing-targets"]], "Doing The Installation (make install)": [[484, "doing-the-installation-make-install"]], "And Shared Libraries?": [[484, "and-shared-libraries"]], "Shared Libraries: Installed Vs. Local (RUNPATH)": [[484, "shared-libraries-installed-vs-local-runpath"]], "Shared Libraries: ABI Versions": [[484, "shared-libraries-abi-versions"]], "Libraries, And Dependencies": [[485, "libraries-and-dependencies"]], "Libraries And Executables": [[485, "libraries-and-executables"]], "Targets And Dependencies": [[485, "targets-and-dependencies"]], "Visualizing Dependencies": [[485, "visualizing-dependencies"]], "Optional Code, Approach 1: Optional blacklist, C Macro  (Global Flags)": [[486, "optional-code-approach-1-optional-blacklist-c-macro-global-flags"]], "Optional blacklist, C Macro": [[486, "optional-blacklist-c-macro"]], "Optional Dependency In libhello": [[486, "optional-dependency-in-libhello"]], "Optional Dependency In libhello Header File": [[486, "optional-dependency-in-libhello-header-file"]], "Optional Dependency In libhello CPP File": [[486, "optional-dependency-in-libhello-cpp-file"]], "Good Or Bad?": [[486, "good-or-bad"], [487, "good-or-bad"]], "Optional Code, Approach 2: Pushing Optionality Down In Module Interface": [[487, "optional-code-approach-2-pushing-optionality-down-in-module-interface"]], "Remove Too Much CMake Optionality": [[487, "remove-too-much-cmake-optionality"]], "TARGET_COMPILE_DEFINITIONS() (backlist Availablility)": [[487, "target-compile-definitions-backlist-availablility"]], "Push Optionality Down In blacklist (\u27f6 INTERFACE Targets)": [[487, "push-optionality-down-in-blacklist-longrightarrow-interface-targets"]], "Optional Code: Problem Definition, OPTION()": [[488, "optional-code-problem-definition-option"]], "Solution: Add An Option": [[488, "solution-add-an-option"]], "Define Option USE_BLACKLIST; Option Usage, Cache": [[488, "define-option-use-blacklist-option-usage-cache"]], "Option Handling: Many Approaches": [[488, "option-handling-many-approaches"]], "Shared Libraries (Preview)": [[489, "shared-libraries-preview"]], "\u201cNormal\u201d Libraries": [[489, "normal-libraries"]], "Building Shared Libraries": [[489, "building-shared-libraries"]], "More About Loading": [[489, "more-about-loading"]], "Structure - Subdirectories, Dependencies, and Include Paths": [[490, "structure-subdirectories-dependencies-and-include-paths"]], "Reorganization": [[490, "reorganization"]], "Dependencies, And Target Properties": [[490, "dependencies-and-target-properties"]], "Targets, Properties, And More": [[491, "targets-properties-and-more"]], "Target Types": [[491, "target-types"]], "Properties: PRIVATE, PUBLIC, INTERFACE?": [[491, "properties-private-public-interface"]], "Running Tests": [[492, "running-tests"], [1169, "running-tests"]], "Setup And Usage": [[492, "setup-and-usage"]], "Add Simple Test": [[492, "add-simple-test"]], "Checking Test Output": [[492, "checking-test-output"]], "Questionability": [[492, "questionability"]], "C++ Code": [[493, "c-code"]], "Abstract Factory": [[494, "abstract-factory"]], "I2C Sensor Subhierarchy": [[494, "i2c-sensor-subhierarchy"]], "Problem: I2C Sensor Instantiation": [[494, "problem-i2c-sensor-instantiation"]], "Solution: Factory Objects": [[494, "solution-factory-objects"]], "Adapter": [[495, "adapter"]], "Solution: Adaptation": [[495, "solution-adaptation"]], "Basic Adaptation": [[495, "basic-adaptation"]], "Adapter Must Be-A Sensor": [[495, "adapter-must-be-a-sensor"]], "Adaptee Can Be-Any ASensor": [[495, "adaptee-can-be-any-asensor"]], "Adapter Is Doing Real Measurements": [[495, "adapter-is-doing-real-measurements"]], "Command": [[496, "command"]], "Motivation": [[496, "motivation"], [499, "motivation"], [515, "motivation"], [516, "motivation"], [612, "motivation"], [709, "motivation"], [711, "motivation"], [736, "motivation"], [742, "motivation"], [1049, "motivation"], [1055, "motivation"]], "Step 1: Basic insert()": [[496, "step-1-basic-insert"]], "Step 2: Basic find()": [[496, "step-2-basic-find"]], "Step 3: drop()": [[496, "step-3-drop"]], "Step 4: Handle find() Errors": [[496, "step-4-handle-find-errors"]], "Step 5: Handle insert() Errors": [[496, "step-5-handle-insert-errors"]], "Step 6: Bulk Insert?": [[496, "step-6-bulk-insert"]], "Step 6a: Bulk Insert Using std::initializer_list?": [[496, "step-6a-bulk-insert-using-std-initializer-list"]], "SocialDB Source Code": [[497, "socialdb-source-code"]], "Composite": [[498, "composite"]], "Unix Filesystem": [[498, "unix-filesystem"]], "Boolean Expressions": [[498, "boolean-expressions"]], "Thermometers, And Average Calculation": [[498, "thermometers-and-average-calculation"]], "Decorator": [[499, "decorator"]], "Variant 1: Aggregate Base Class Objects": [[499, "variant-1-aggregate-base-class-objects"]], "Variant 2: Aggregate Conrete Class Objects": [[499, "variant-2-aggregate-conrete-class-objects"]], "Step 1: Realize Current Situation": [[499, "step-1-realize-current-situation"]], "Step 2: Decorate ConstantSensor \u27f6 DecoratedConstantSensor": [[499, "step-2-decorate-constantsensor-longrightarrow-decoratedconstantsensor"]], "Step 3: Decorate RandomSensor \u27f6 DecoratedRandomSensor": [[499, "step-3-decorate-randomsensor-longrightarrow-decoratedrandomsensor"]], "Step 4: Verify That DecoratedConstantSensor Can Be Used As Sensor": [[499, "step-4-verify-that-decoratedconstantsensor-can-be-used-as-sensor"]], "Step 5: Verify That DecoratedRandomSensor Can Be Used As Sensor": [[499, "step-5-verify-that-decoratedrandomsensor-can-be-used-as-sensor"]], "Step 6: Verify That Current Situation Still Holds True": [[499, "step-6-verify-that-current-situation-still-holds-true"]], "Design Patterns With C++": [[500, "design-patterns-with-c"]], "Topics/Exercises": [[500, "topics-exercises"]], "Solutions": [[500, "solutions"], [514, "solutions"], [528, "solutions"]], "To Be Done": [[500, "to-be-done"]], "Case Study/Livehacking: Heating Control (Reading Sensors)": [[501, "case-study-livehacking-heating-control-reading-sensors"]], "Step 1: Monolithic": [[501, "step-1-monolithic"]], "Step 2: And D-Bus? \u27f6 Interfaces": [[501, "step-2-and-d-bus-longrightarrow-interfaces"]], "Step 3: Start D-Bus Implementation": [[501, "step-3-start-d-bus-implementation"]], "Pull Demo Logger/Store Out Into Separate Files": [[501, "pull-demo-logger-store-out-into-separate-files"]], "Adapter: DBusLogger": [[501, "adapter-dbuslogger"]], "Adapter: DBusValueStore": [[501, "adapter-dbusvaluestore"]], "Demo Program To Instantiate Either Demo Or DBus": [[501, "demo-program-to-instantiate-either-demo-or-dbus"]], "Stop Here, Need Help": [[501, "stop-here-need-help"]], "Tests": [[501, "tests"], [521, "tests"]], "Interpreter": [[502, "interpreter"]], "Observer": [[503, "observer"]], "OO Design Principles": [[504, "oo-design-principles"]], "Principles: Why? Which?": [[504, "principles-why-which"]], "Single Responsibility": [[504, "single-responsibility"]], "Open/Closed": [[504, "open-closed"]], "Liskov Substitution": [[504, "liskov-substitution"]], "Interface Segregation": [[504, "interface-segregation"]], "Dependency Inversion": [[504, "dependency-inversion"]], "Proxy": [[505, "proxy"]], "Solution: Proxy": [[505, "solution-proxy"]], "Local Variant": [[505, "local-variant"]], "Remote Variant": [[505, "remote-variant"]], "Exercise Foundation: Sensor Hierarchy": [[506, "exercise-foundation-sensor-hierarchy"]], "Hypothetical": [[506, "hypothetical"]], "Class Hierarchy": [[506, "class-hierarchy"]], "Singleton": [[507, "singleton"]], "And class Person?": [[507, "and-class-person"]], "UML Short Introduction": [[508, "uml-short-introduction"]], "Interface": [[508, "interface"]], "Interface Implementation, Inheritance": [[508, "interface-implementation-inheritance"]], "Connectors: Association, Aggregation, Composition": [[508, "connectors-association-aggregation-composition"]], "Association": [[508, "association"]], "Aggregation": [[508, "aggregation"]], "Composition": [[508, "composition"]], "Exercise: Abstract Factory": [[509, "exercise-abstract-factory"]], "Exercise: Adapter": [[510, "exercise-adapter"], [517, "exercise-adapter"]], "Exercise: Command": [[511, "exercise-command"]], "Exercise: Composite": [[512, "exercise-composite"]], "Exercise: Decorator": [[513, "exercise-decorator"]], "Exercises: Design Patterns": [[514, "exercises-design-patterns"]], "Exercise: Interpreter Combined With Adapter (And A Proxy)": [[515, "exercise-interpreter-combined-with-adapter-and-a-proxy"]], "Exercise: Arithmetic Expression Interpreter": [[516, "exercise-arithmetic-expression-interpreter"]], "Expression Interface": [[516, "expression-interface"]], "Arithmetic (Binary) Expressions": [[516, "arithmetic-binary-expressions"]], "Check: Combined Arithmetic Expressions": [[516, "check-combined-arithmetic-expressions"]], "And Variables?": [[516, "and-variables"]], "No Uninitialized Variables!!": [[516, "no-uninitialized-variables"]], "Assigning To Variables": [[516, "assigning-to-variables"]], "Using Variables As Expressions": [[516, "using-variables-as-expressions"]], "Exercise: Proxy (Remote Thermometer)": [[518, "exercise-proxy-remote-thermometer"]], "Network Communication": [[518, "network-communication"]], "Implementation Hints": [[518, "implementation-hints"]], "Exercise: Proxy (Rounding Thermometer)": [[519, "exercise-proxy-rounding-thermometer"]], "Exercise: Singleton (Flexible)": [[520, "exercise-singleton-flexible"]], "Exercise: Singleton (Flexible And Strict)": [[521, "exercise-singleton-flexible-and-strict"]], "Complications": [[521, "complications"]], "Exercise: Singleton (Inflexible)": [[522, "exercise-singleton-inflexible"]], "Solution: Abstract Factory": [[523, "solution-abstract-factory"]], "I2CSensorFactory Abstract Factory": [[523, "i2csensorfactory-abstract-factory"]], "Concrete Factory Implementations": [[523, "concrete-factory-implementations"]], "I2CSensorFactory_Vendor1": [[523, "i2csensorfactory-vendor1"], [523, "id1"]], "Solution: Adapter": [[524, "solution-adapter"]], "Adapter Class For Fahrenheit Sensors": [[524, "adapter-class-for-fahrenheit-sensors"]], "Solution: Command": [[525, "solution-command"]], "Command Classes": [[525, "command-classes"]], "Solution: Composite": [[526, "solution-composite"]], "Averaging (Composite) Sensor": [[526, "averaging-composite-sensor"]], "Solution: Decorator": [[527, "solution-decorator"]], "Decorated Sensor (Intermediate Interface)": [[527, "decorated-sensor-intermediate-interface"]], "Decorated Constant Sensor": [[527, "decorated-constant-sensor"]], "Decorated Random Sensor": [[527, "decorated-random-sensor"]], "Solution: Interpreter Combined With Adapter (And A Proxy)": [[529, "solution-interpreter-combined-with-adapter-and-a-proxy"]], "Solution: Arithmetic Expression Interpreter": [[530, "solution-arithmetic-expression-interpreter"]], "Solution: Observer": [[531, "solution-observer"]], "Solution: Proxy (Remote Thermometer)": [[532, "solution-proxy-remote-thermometer"]], "Client (Proxy) Thermometer": [[532, "client-proxy-thermometer"]], "Remote Stub": [[532, "remote-stub"]], "Solution: Proxy (Rounding Thermometer)": [[533, "solution-proxy-rounding-thermometer"]], "Rounding Sensor (Proxy) Implementation": [[533, "rounding-sensor-proxy-implementation"]], "Solution: Singleton (Flexible)": [[534, "solution-singleton-flexible"]], "Main Program": [[534, "main-program"], [535, "main-program"], [536, "main-program"], [774, "main-program"], [776, "main-program"], [778, "main-program"], [780, "main-program"]], "SocialInsurance Interface": [[534, "socialinsurance-interface"], [535, "socialinsurance-interface"]], "Two Concrete Implementations": [[534, "two-concrete-implementations"], [535, "two-concrete-implementations"]], "OEGK": [[534, "oegk"], [535, "oegk"]], "SVS": [[534, "svs"], [535, "svs"]], "Solution: Singleton (Flexible And Strict)": [[535, "solution-singleton-flexible-and-strict"]], "Solution: Singleton (Inflexible)": [[536, "solution-singleton-inflexible"]], "Singleton Implementation": [[536, "singleton-implementation"]], "Exercise (FH): Introducing a Sensor Class": [[537, "exercise-fh-introducing-a-sensor-class"]], "Github Project": [[537, "github-project"]], "CMake Build": [[537, "cmake-build"], [971, "cmake-build"]], "Dependencies/Usage Relationships": [[537, "dependencies-usage-relationships"]], "Onewire Sensor Usage: Example/Unit-Test": [[537, "onewire-sensor-usage-example-unit-test"]], "Step 1: Preparation": [[537, "step-1-preparation"]], "Step 2: Modify onewire-temperature-<firstname>-<lastname>.cpp To Use class W1Sensor": [[537, "step-2-modify-onewire-temperature-firstname-lastname-cpp-to-use-class-w1sensor"]], "Step 3: Answer A Question": [[537, "step-3-answer-a-question"]], "Exercise (FH): Extract Measurement Loop Into Function": [[538, "exercise-fh-extract-measurement-loop-into-function"]], "Exercise (FH): Replace Sensor": [[539, "exercise-fh-replace-sensor"]], "Exercise (FH): Write A Sensor Class: RandomSensor": [[540, "exercise-fh-write-a-sensor-class-randomsensor"]], "New Sensor Class: RandomSensor": [[540, "new-sensor-class-randomsensor"]], "Implementation Details": [[540, "implementation-details"]], "New Program: random-temperature.cpp": [[540, "new-program-random-temperature-cpp"]], "FH Sensor OO (First Try)": [[541, "fh-sensor-oo-first-try"]], "C++ Exercises": [[542, "c-exercises"]], "Exercise Projects": [[542, "exercise-projects"]], "Exercise: LEDStripeDisplay_nopoly (Non-Polymorphic)": [[543, "exercise-ledstripedisplay-nopoly-non-polymorphic"]], "Topics Covered": [[543, "topics-covered"], [544, "topics-covered"], [545, "topics-covered"], [546, "topics-covered"], [547, "topics-covered"], [548, "topics-covered"], [549, "topics-covered"], [552, "topics-covered"]], "Exercise: Hysteresis_nopoly (Non-Polymorphic)": [[544, "exercise-hysteresis-nopoly-non-polymorphic"]], "Exercise: AveragingSensor_nopoly (Non-Polymorphic)": [[545, "exercise-averagingsensor-nopoly-non-polymorphic"]], "Exercise: ConstantSensor_nopoly (Non-Polymorphic)": [[546, "exercise-constantsensor-nopoly-non-polymorphic"]], "Exercise: MockSensor_nopoly (Non-Polymorphic)": [[547, "exercise-mocksensor-nopoly-non-polymorphic"]], "Exercise: RandomSensor_nopoly (Non-Polymorphic)": [[548, "exercise-randomsensor-nopoly-non-polymorphic"]], "Implementation Hint: Randomicity In C++": [[548, "implementation-hint-randomicity-in-c"]], "Implementation Hint: Initializer Lists": [[548, "implementation-hint-initializer-lists"]], "Exercise: Mocking Switch (Non-Polymorphic)": [[549, "exercise-mocking-switch-non-polymorphic"]], "OO Basics, Interfaces (Shapes)": [[550, "oo-basics-interfaces-shapes"]], "Exercise Table": [[550, "exercise-table"]], "Setup, Exam Procedure": [[550, "setup-exam-procedure"]], "Point": [[550, "point"]], "Point: Constructor and Getter Methods": [[550, "point-constructor-and-getter-methods"]], "Point: Default Constructor": [[550, "point-default-constructor"]], "Point: Static Method: equal()": [[550, "point-static-method-equal"]], "Point: operator==()": [[550, "point-operator"]], "Point: Method: move()": [[550, "point-method-move"]], "Point: operator+=()": [[550, "point-suite-operator-plus-equals"]], "Point: Static Method: add()": [[550, "point-static-method-add"]], "Point: operator+()": [[550, "point-suite-operator-plus"]], "Circle": [[550, "circle"]], "Circle: Constructor": [[550, "circle-constructor"]], "Circle: operator==()": [[550, "circle-operator"]], "Circle: Method: area()": [[550, "circle-method-area"]], "Square": [[550, "square"]], "Square: Constructor": [[550, "square-constructor"]], "Square: operator==()": [[550, "square-operator"]], "Square: Method: area()": [[550, "square-method-area"]], "Interface: Shape": [[550, "interface-shape"]], "Interface: Circle And Square Is-A Shape": [[550, "interface-circle-and-square-is-a-shape"]], "Interface: Can Compute Area Of Any Shape": [[550, "interface-can-compute-area-of-any-shape"]], "Working On Exercise Projects": [[551, "working-on-exercise-projects"]], "Clone Github Repository": [[551, "clone-github-repository"]], "Massage googletest Sub-Module": [[551, "massage-googletest-sub-module"]], "Build Directory: Create Makefiles With cmake": [[551, "build-directory-create-makefiles-with-cmake"]], "Build Directory: Build With make": [[551, "build-directory-build-with-make"]], "Build Directory: Run Tests": [[551, "build-directory-run-tests"]], "Exercise: Sensor Interface": [[552, "exercise-sensor-interface"]], "Problem: Polymorphic Thermometer Usage": [[552, "problem-polymorphic-thermometer-usage"]], "The Exercise": [[552, "the-exercise"]], "Exercise: OneWire Sensor Factory": [[553, "exercise-onewire-sensor-factory"]], "Fixture": [[553, "fixture"], [788, "fixture"]], "basic": [[553, "basic"]], "notfound": [[553, "notfound"]], "find_is_const": [[553, "find-is-const"]], "Testing In Isolation": [[553, "testing-in-isolation"]], "Testing In Reality": [[553, "testing-in-reality"]], "On The PC": [[553, "on-the-pc"]], "On The Target": [[553, "on-the-target"]], "Exercise: OneWire Sensor Class": [[554, "exercise-onewire-sensor-class"]], "Download Monolithic Sensor Implementation": [[554, "download-monolithic-sensor-implementation"]], "Test Monolithic Implementation": [[554, "test-monolithic-implementation"]], "class W1Sensor": [[554, "class-w1sensor"]], "Exercise: Algorithms": [[555, "exercise-algorithms"]], "Copy Into std::vector": [[555, "copy-into-std-vector"]], "Find Element In std::vector": [[555, "find-element-in-std-vector"]], "Sort In-Place": [[555, "sort-in-place"]], "Sort Into A Copy": [[555, "sort-into-a-copy"]], "Exercise: Generic Filter": [[556, "exercise-generic-filter"]], "Exercise: Filter Elements Greater Than 10": [[557, "exercise-filter-elements-greater-than-10"]], "Exercise: Filter Odd Elements": [[558, "exercise-filter-odd-elements"]], "C++ Exercises: Standard Template Library": [[559, "c-exercises-standard-template-library"]], "Exercise: std::map<>": [[560, "exercise-std-map"]], "Exercises: Sensor Repository (std::map)": [[561, "exercises-sensor-repository-std-map"]], "Insert - Not Overwriting Existing Elements": [[562, "insert-not-overwriting-existing-elements"]], "Insert - Sunny Case": [[563, "insert-sunny-case"]], "Lookup - Not Found": [[564, "lookup-not-found"]], "Lookup - Sunny Case": [[565, "lookup-sunny-case"]], "Memory Leaks?": [[566, "memory-leaks"]], "Remove - Not Found": [[567, "remove-not-found"]], "Remove - Sunny Case": [[568, "remove-sunny-case"]], ".size() Is const": [[569, "size-is-const"]], "Exercise: Uniquify A Sequence": [[570, "exercise-uniquify-a-sequence"]], "Exercise: std::vector<>": [[571, "exercise-std-vector"]], "C++: TODO List": [[572, "c-todo-list"]], "Structural": [[572, "structural"]], "STL, Containers and Algorithms": [[572, "stl-containers-and-algorithms"]], "Templates/Overloading": [[572, "templates-overloading"]], "Functors: Overloading the Function Call Operator": [[572, "functors-overloading-the-function-call-operator"]], "Threads": [[572, "threads"]], "C++ >= 11": [[572, "c-11"]], "UserDB Exercise": [[572, "userdb-exercise"]], "Complete Transcription of C++11": [[572, "complete-transcription-of-c-11"]], "Exercise series": [[572, "exercise-series"]], "Code: C++: Class Templates": [[573, "code-c-class-templates"]], "Screenplay: C++: Class Templates": [[574, "screenplay-c-class-templates"]], "C++: Class Templates": [[575, "c-class-templates"]], "Code: C++: Dynamic Memory": [[576, "code-c-dynamic-memory"]], "Screenplay: C++: Dynamic Memory": [[577, "screenplay-c-dynamic-memory"]], "C: malloc()/free()": [[577, "c-malloc-free"]], "valgrind: Memory Leak": [[577, "valgrind-memory-leak"]], "valgrind: Array Bounds Write": [[577, "valgrind-array-bounds-write"]], "C++: new, delete": [[577, "c-new-delete"]], "C++: new, delete on Arrays": [[577, "c-new-delete-on-arrays"]], "valgrind: delete Mismatch": [[577, "valgrind-delete-mismatch"]], "C++: Dynamic Memory": [[578, "c-dynamic-memory"]], "Code: C++: Global Objects Initialization": [[579, "code-c-global-objects-initialization"]], "Screenplay: C++: Global Objects Initialization": [[580, "screenplay-c-global-objects-initialization"]], "Constructor and Destructor Order in Same File": [[580, "constructor-and-destructor-order-in-same-file"]], "Constructor and Destructor Order Across Files": [[580, "constructor-and-destructor-order-across-files"]], "Constructor and Destructor Order Across Files: Dependencies, Bugs": [[580, "constructor-and-destructor-order-across-files-dependencies-bugs"]], "C++: Global Objects Initialization": [[581, "c-global-objects-initialization"]], "Code: C++: Inheritance, Interfaces, virtual": [[582, "code-c-inheritance-interfaces-virtual"]], "Screenplay: C++: Inheritance, Interfaces, virtual": [[583, "screenplay-c-inheritance-interfaces-virtual"]], "C++: Inheritance, Interfaces, virtual": [[584, "c-inheritance-interfaces-virtual"]], "Code: C++: Ownership/RAII": [[585, "code-c-ownership-raii"]], "Screenplay: C++: Ownership/RAII": [[586, "screenplay-c-ownership-raii"]], "Allocate in Constructor": [[586, "allocate-in-constructor"]], "Deallocate in Destructor - Ownership": [[586, "deallocate-in-destructor-ownership"]], "Ownership: 2 x non-const": [[586, "ownership-2-x-non-const"]], "Ownership: const Method": [[586, "ownership-const-method"]], "Ownership: 2 x const": [[586, "ownership-2-x-const"]], "C++: Ownership/RAII": [[587, "c-ownership-raii"]], "Code: C++: STL Containers (Intro)": [[588, "code-c-stl-containers-intro"]], "Screenplay: C++: STL Containers (Intro)": [[589, "screenplay-c-stl-containers-intro"]], "Pointer Arithmetics Recap": [[589, "pointer-arithmetics-recap"]], "Container: std::vector": [[589, "container-std-vector"]], "Algorithm: std::vector and Naive Copy": [[589, "algorithm-std-vector-and-naive-copy"]], "Algorithm: std::vector and std::copy<>": [[589, "algorithm-std-vector-and-std-copy"]], "Container: std::list": [[589, "container-std-list"]], "Container: std::map": [[589, "container-std-map"]], "C++: STL Containers (Intro)": [[590, "c-stl-containers-intro"]], "Code: C++: Templates vs. Interfaces": [[591, "code-c-templates-vs-interfaces"]], "Screenplay: C++: Templates vs. Interfaces": [[592, "screenplay-c-templates-vs-interfaces"]], "C++: Templates vs. Interfaces": [[593, "c-templates-vs-interfaces"]], "Background": [[595, "background"]], "History": [[595, "history"], [1030, "history"]], "Content": [[595, "content"]], "Object Oriented Programming In Good Ol\u2019 C": [[596, "object-oriented-programming-in-good-ol-c"]], "C Is Simple, So Why C++?": [[596, "c-is-simple-so-why-c"]], "struct point: Something That Looks Like A Point": [[596, "struct-point-something-that-looks-like-a-point"]], "Good Style: Explicit Initialization Functions": [[596, "good-style-explicit-initialization-functions"]], "Comparison Functions: (In)Equality": [[596, "comparison-functions-in-equality"]], "Moving Points": [[596, "moving-points"]], "Vector Addition and Subtraction": [[596, "vector-addition-and-subtraction"]], "Distance Of Two Points": [[596, "distance-of-two-points"]], "Length Of A Point\u2019s Position Vector": [[596, "length-of-a-point-s-position-vector"]], "Summary: Is C Good Enough?": [[596, "summary-is-c-good-enough"]], "Copy Constructor, Assignment Operator": [[597, "copy-constructor-assignment-operator"]], "Compiler Generated Copy Constructor": [[597, "compiler-generated-copy-constructor"]], "Rule": [[597, null], [600, null], [699, "rule"]], "Manually Written Copy Constructor And Assignment Operator": [[597, "manually-written-copy-constructor-and-assignment-operator"]], "Classes and Objects": [[598, "classes-and-objects"]], "Introducing C++: class point": [[598, "introducing-c-class-point"]], "Access Specifiers: public And private": [[598, "access-specifiers-public-and-private"]], "Default Constructor": [[598, "default-constructor"], [600, "default-constructor"], [613, "default-constructor"], [614, "default-constructor"], [615, "default-constructor"], [616, "default-constructor"]], "Custom Constructor: Usage": [[598, "custom-constructor-usage"]], "Custom Constructor: Implementation": [[598, "custom-constructor-implementation"]], "Access Methods For Otherwise Private Members": [[598, "access-methods-for-otherwise-private-members"]], "Methods: Operations On An Object": [[598, "methods-operations-on-an-object"]], "And printf()?!": [[598, "and-printf"]], "Custom Constructor": [[599, "custom-constructor"], [613, "custom-constructor"]], "Constructors: why? (1)": [[599, "constructors-why-1"]], "Constructors: why? (2)": [[599, "constructors-why-2"]], "Constructors: Implementation - Inline": [[599, "constructors-implementation-inline"]], "Constructors: Implementation - Out-of-Line": [[599, "constructors-implementation-out-of-line"]], "Compiler Generated Default Constructor": [[600, "compiler-generated-default-constructor"]], "Compiler Generated Default Constructor: Pitfall: Built-In Types": [[600, "compiler-generated-default-constructor-pitfall-built-in-types"]], "Manually Written Default Constructor": [[600, "manually-written-default-constructor"]], "What If User-Defined Constructors Are In Place?": [[600, "what-if-user-defined-constructors-are-in-place"]], "More Constructors, Destructors": [[601, "more-constructors-destructors"]], "Default Constructor (1)": [[601, "default-constructor-1"]], "Default Constructor (2)": [[601, "default-constructor-2"]], "Object Lifecycle - Destructor": [[601, "object-lifecycle-destructor"]], "Destructors (1)": [[601, "destructors-1"]], "Destructors (2)": [[601, "destructors-2"]], "Destructors (3)": [[601, "destructors-3"]], "Destructors (4)": [[601, "destructors-4"]], "Data Encapsulation": [[602, "data-encapsulation"]], "Constructors: Member Initialization": [[603, "constructors-member-initialization"]], "Member Initialization? Assignment?": [[603, "member-initialization-assignment"]], "Real Initialization: Initializer List": [[603, "real-initialization-initializer-list"]], "Why Is That Important?": [[603, "why-is-that-important"]], "Why Else Is That Important?": [[603, "why-else-is-that-important"]], "Object Copy (And Resource Management): There Be Dragons": [[604, "object-copy-and-resource-management-there-be-dragons"]], "Copy in C": [[604, "copy-in-c"]], "Copy Constructor": [[604, "copy-constructor"]], "Pointer Members, And Compiler Generated Copy": [[604, "pointer-members-and-compiler-generated-copy"]], "Why? Dragons Everywhere!": [[604, "why-dragons-everywhere"]], "Solution: Write Copy Constructor Manually": [[604, "solution-write-copy-constructor-manually"]], "Copy Constructor: Recursive/Memberwise": [[604, "copy-constructor-recursive-memberwise"]], "Assignment Operator": [[604, "assignment-operator"]], "Assignment Operator and Pointer Members: Memory Leak": [[604, "assignment-operator-and-pointer-members-memory-leak"]], "Assignment Operator and Pointer Members: Memory Leak, Straighforward Fix": [[604, "assignment-operator-and-pointer-members-memory-leak-straighforward-fix"]], "Assignment Operator and Pointer Members: Self-Assignment": [[604, "assignment-operator-and-pointer-members-self-assignment"]], "Assignment Operator: Self Assignment, Correctly Implemented": [[604, "assignment-operator-self-assignment-correctly-implemented"]], "Overloading": [[605, "overloading"]], "Functions in C": [[605, "functions-in-c"]], "Functions in C++ \u2014 Overloading": [[605, "functions-in-c-overloading"]], "Underlying Mechanism: Name Mangling": [[605, "underlying-mechanism-name-mangling"]], "Overloading Class Methods: Just The Same": [[605, "overloading-class-methods-just-the-same"]], "Objects - Data and Methods": [[606, "objects-data-and-methods"]], "class point Again": [[606, "class-point-again"]], "Simple Methods: Access Methods (\u201cGetters\u201d)": [[606, "simple-methods-access-methods-getters"]], "How Are Members Accessed Inside Methods?": [[606, "how-are-members-accessed-inside-methods"]], "const Methods": [[606, "const-methods"], [607, "const-methods"]], "Non const Methods": [[606, "non-const-methods"]], "const": [[607, "const"]], "const: Immutable Variable": [[607, "const-immutable-variable"]], "const Correctness vs. Pollution": [[607, "const-correctness-vs-pollution"]], "this": [[608, "this"]], "Hidden Pointer: this (1)": [[608, "hidden-pointer-this-1"]], "Hidden Pointer: this (2)": [[608, "hidden-pointer-this-2"]], "Explicit this Pointer": [[608, "explicit-this-pointer"]], "Pass By Copy/Reference": [[609, "pass-by-copy-reference"]], "Pointers Can Be Left Uninitialized": [[609, "pointers-can-be-left-uninitialized"]], "References Cannot (Easily) Be Left Uninitialized": [[609, "references-cannot-easily-be-left-uninitialized"]], "Copy? Reference? C? Pointers!": [[609, "copy-reference-c-pointers"]], "C++: True References": [[609, "c-true-references"]], "And const? Pointers?": [[609, "and-const-pointers"]], "const References": [[609, "const-references"]], "const Reference: Substitute For \u201cPass by Copy\u201d": [[609, "const-reference-substitute-for-pass-by-copy"]], "static Methods": [[610, "static-methods"]], "Methods without Object": [[610, "methods-without-object"]], "Naive Implementation: Global Function": [[610, "naive-implementation-global-function"]], "C++: static Method": [[610, "c-static-method"]], "static Member Variables": [[611, "static-member-variables"]], "Good Old C: extern Global Variables": [[611, "good-old-c-extern-global-variables"]], "ODR: One Definition Rule": [[611, "odr-one-definition-rule"]], "(A Litte) More Overengineered: Declaration In Header File": [[611, "a-litte-more-overengineered-declaration-in-header-file"]], "Same Inside A Class: static Member Variable": [[611, "same-inside-a-class-static-member-variable"]], "Sideway: Definition In A Header File?": [[611, "sideway-definition-in-a-header-file"]], "static inline Member Defnition (Since C++17)": [[611, "static-inline-member-defnition-since-c-17"]], "Implementing (In)Equality": [[612, "implementing-in-equality"]], "Implementing (In)Equality: Global Function": [[612, "implementing-in-equality-global-function"]], "Implementing (In)Equality: Object Method": [[612, "implementing-in-equality-object-method"]], "Implementing Arithmetic: + (Vector Addition)": [[612, "implementing-arithmetic-vector-addition"]], "Implementing Arithmetic: + (Vector Addition): Global Function": [[612, "implementing-arithmetic-vector-addition-global-function"]], "Implementing Arithmetic: + (Vector Addition): Object Method": [[612, "implementing-arithmetic-vector-addition-object-method"]], "Implementing Arithmetic: += (Moving A Point)": [[612, "implementing-arithmetic-moving-a-point"]], "Implementing ostream Shift: std::cout << ...": [[612, "implementing-ostream-shift-std-cout"]], "Exercise (FH): class cuboid": [[613, "exercise-fh-class-cuboid"]], "Building class cuboid Upon class point3d": [[613, "building-class-cuboid-upon-class-point3d"]], "(In-)Equality": [[613, "in-equality"], [614, "in-equality"], [615, "in-equality"], [616, "in-equality"]], "+=": [[613, "id2"], [614, "id1"], [615, "id2"], [616, "id2"]], "-=": [[613, "id4"], [615, "id4"]], "+": [[613, "id6"], [614, "id2"], [615, "id6"], [616, "id3"]], "-": [[613, "id8"], [615, "id8"]], "<< (std::ostream)": [[613, "std-ostream"], [614, "std-ostream"], [615, "std-ostream"], [616, "std-ostream"]], "Surface": [[613, "surface"]], "Volume": [[613, "volume"]], "Exercise (FH): class point": [[614, "exercise-fh-class-point"]], "Initial Build": [[614, "initial-build"]], "Initial Test Run": [[614, "initial-test-run"]], "Extending class point: More Unit Tests": [[614, "extending-class-point-more-unit-tests"]], "Access Methods": [[614, "access-methods"]], "Unary -": [[614, "unary"], [615, "unary"]], "Exercise (FH): class point3d": [[615, "exercise-fh-class-point3d"]], "Building class rectangle Upon class point": [[615, "building-class-rectangle-upon-class-point"], [616, "building-class-rectangle-upon-class-point"]], "Coordinates": [[615, "coordinates"], [616, "coordinates"]], "Absolute Value": [[615, "absolute-value"]], "Distance Between Two Points": [[615, "distance-between-two-points"]], "Exercise (FH): class rectangle": [[616, "exercise-fh-class-rectangle"]], "Width, Height, Area": [[616, "width-height-area"]], "Error Handling: if - else if - else": [[618, "error-handling-if-else-if-else"]], "try - catch": [[619, "try-catch"]], "try - Block": [[619, "try-block"]], "catch - Block": [[619, "catch-block"]], "Standard Library: Exception-Hierarchy": [[619, "standard-library-exception-hierarchy"]], "Custom Exceptions (1)": [[619, "custom-exceptions-1"]], "Custom Exceptions (2)": [[619, "custom-exceptions-2"]], "Throwing Exceptions - throw": [[619, "throwing-exceptions-throw"]], "Last Words": [[619, "last-words"], [622, "last-words"]], "Function Templates": [[621, "function-templates"]], "Origin: Duplicated Code": [[621, "origin-duplicated-code"]], "A simple Function-Template": [[621, "a-simple-function-template"]], "More Templates from the STL": [[621, "more-templates-from-the-stl"]], "Class Templates": [[622, "class-templates"]], "Does This Work With Classes?": [[622, "does-this-work-with-classes"]], "Example: point as a Class Template (1)": [[622, "example-point-as-a-class-template-1"]], "Example: point as a Class Template (2)": [[622, "example-point-as-a-class-template-2"]], "Screenplay: std::copy<>() From <algorithm>": [[624, "screenplay-std-copy-from-algorithm"]], "Screenplay: Pointer Arithmetic, And Algorithms": [[625, "screenplay-pointer-arithmetic-and-algorithms"]], "Screenplay: Pointer Arithmetic Basics": [[626, "screenplay-pointer-arithmetic-basics"]], "Screenplay: Pointer Difference": [[627, "screenplay-pointer-difference"]], "Screenplay: Out Of Range Errors": [[628, "screenplay-out-of-range-errors"]], "Standard Template Library: Basics": [[629, "standard-template-library-basics"]], "Containers, Iterators, Algorithms": [[629, "containers-iterators-algorithms"]], "Pointer Increment and Decrement": [[629, "pointer-increment-and-decrement"]], "Out Of Range Errors (The Spirit Of C)": [[629, "out-of-range-errors-the-spirit-of-c"]], "Pointer Difference": [[629, "pointer-difference"]], "Step Width? (1)": [[629, "step-width-1"]], "Step Width? (2)": [[629, "step-width-2"]], "And Arbitrary Data Types?": [[629, "and-arbitrary-data-types"]], "Enter Algorithms (On Good Old C Arrays)": [[629, "enter-algorithms-on-good-old-c-arrays"]], "STL Algorithms": [[629, "stl-algorithms"]], "STL Containers": [[629, "stl-containers"]], "std::vector (And std::copy())": [[630, "std-vector-and-std-copy"]], "Dynamicity Details": [[630, "dynamicity-details"]], "STL Iterators: Pointer Arithmetic On A std::vector<>": [[630, "stl-iterators-pointer-arithmetic-on-a-std-vector"]], "Algorithms And Containers : std::copy": [[630, "algorithms-and-containers-std-copy"]], "Screenplay: std::vector And std::copy()": [[631, "screenplay-std-vector-and-std-copy"]], "std::vector<> Into C Array": [[631, "std-vector-into-c-array"]], "Copying Into std::vector (Without Allocation)": [[631, "copying-into-std-vector-without-allocation"]], "Solution 1: Pre-allocate Destination": [[631, "solution-1-pre-allocate-destination"]], "Solution 2: std::back_insert_iterator": [[631, "solution-2-std-back-insert-iterator"]], "Screenplay: std::vector Basics": [[632, "screenplay-std-vector-basics"]], "Screenplay: std::vector, And Pointer Arithmetics": [[633, "screenplay-std-vector-and-pointer-arithmetics"]], "Documentation": [[634, null], [635, null], [636, null], [637, null], [638, null], [640, null], [641, null], [642, null], [643, null], [646, null], [647, null], [650, null], [655, null], [801, null], [801, null], [817, null], [819, "documentation"], [819, null], [823, "documentation"], [825, null], [825, null], [825, null], [851, "documentation"], [854, "documentation"], [864, null], [865, null], [868, null], [872, null], [872, null], [879, null], [880, null], [881, null], [881, null], [881, null], [882, null], [897, null], [897, null], [897, null], [898, null], [899, null], [900, null], [916, null], [916, null], [916, null], [919, null], [920, null], [953, null], [955, null], [957, null], [959, null], [960, null], [961, null], [963, null], [963, null], [963, null], [963, null], [963, null], [963, null], [966, null], [967, null], [968, null], [969, null], [969, null], [970, null], [973, null], [973, null], [973, null], [973, null], [1011, null], [1011, null], [1012, null], [1087, null], [1088, null], [1098, null], [1176, "documentation"]], "binary_search<>: On Sorted Sequence": [[634, "binary-search-on-sorted-sequence"]], "More Intelligent Search": [[634, "more-intelligent-search"], [640, "more-intelligent-search"]], "copy<>": [[635, "copy"]], "find<>: Sequential Search, by Equality": [[636, "find-sequential-search-by-equality"]], "Basic Usage": [[636, "basic-usage"], [755, "basic-usage"], [919, "basic-usage"], [1090, "basic-usage"]], "Not Found?": [[636, "not-found"]], "find_if<>: Sequential Search, Customizable": [[637, "find-if-sequential-search-customizable"]], "if, Using a Plain Function": [[637, "if-using-a-plain-function"]], "if, Using a Functor Class": [[637, "if-using-a-functor-class"]], "for_each<>": [[638, "for-each"]], "Basic Algorithms": [[639, "basic-algorithms"]], "Sorted Arrays": [[639, "sorted-arrays"]], "lower_bound<>: On Sorted Sequence": [[640, "lower-bound-on-sorted-sequence"]], "reverse<>: Reversing In-Place": [[641, "reverse-reversing-in-place"]], "reverse_copy<>: Copying and Reversing": [[642, "reverse-copy-copying-and-reversing"]], "sort<>": [[643, "sort"]], "Algorithm: std::sort": [[643, "algorithm-std-sort"]], "Algorithm: std::sort, custom comparison": [[643, "algorithm-std-sort-custom-comparison"]], "Sequential Containers": [[644, "sequential-containers"], [645, "sequential-containers"]], "Common Characteristics": [[644, "common-characteristics"]], "list<>": [[646, "list"]], "Insertion and Deletion": [[646, "insertion-and-deletion"]], "vector<>": [[647, "vector"]], "Characteristics": [[647, "characteristics"]], "Modification at the Back": [[647, "modification-at-the-back"]], "Insertion": [[647, "insertion"]], "Example": [[647, "example"], [1105, "example"]], "Associative Containers": [[648, "associative-containers"], [649, "associative-containers"]], "Type Instantiation": [[650, "type-instantiation"]], "Filling The Container": [[650, "filling-the-container"]], "Inserting Elements": [[650, "inserting-elements"]], "Searching": [[650, "searching"], [674, "searching"]], "Screenplay: std::map Initialization And Inserting": [[651, "screenplay-std-map-initialization-and-inserting"]], "Definining The Type": [[651, "definining-the-type"]], "Initialization": [[651, "initialization"], [674, "initialization"]], "Screenplay: Inserting Elements": [[652, "screenplay-inserting-elements"]], "Subscript Operator": [[652, "subscript-operator"]], "insert()": [[652, "insert"]], "Screenplay: Removing (Erasing) Elements": [[653, "screenplay-removing-erasing-elements"]], "By Pointer (Err, Iterator)": [[653, "by-pointer-err-iterator"]], "By Key": [[653, "by-key"]], "Screenplay: Searching": [[654, "screenplay-searching"]], "find(key)": [[654, "find-key"]], "[key]": [[654, "key"]], "at(key)": [[654, "at-key"]], "multimap<>": [[655, "multimap"]], "Allocator Basics": [[656, "allocator-basics"]], "STL: Exercises": [[658, "stl-exercises"]], "Exercise: Reverse a String": [[659, "exercise-reverse-a-string"]], "Exercise: Reverse A String": [[660, "exercise-reverse-a-string"]], "Solution: Reverse a String": [[661, "solution-reverse-a-string"]], "Naive": [[661, "naive"]], "Using std::reverse<>": [[661, "using-std-reverse"]], "Using std::reverse_copy<>": [[661, "using-std-reverse-copy"]], "Dynamic Memory (To Be Done)": [[663, "dynamic-memory-to-be-done"]], "Inheritance Basics": [[665, "inheritance-basics"]], "Plain (Base) Class": [[665, "plain-base-class"], [666, "plain-base-class"]], "Inheriting (Deriving) From Base": [[665, "inheriting-deriving-from-base"]], "Derived is-a Base?": [[665, "derived-is-a-base"]], "Destructors And Inheritance": [[666, "destructors-and-inheritance"]], "Derived Class, And Destructor": [[666, "derived-class-and-destructor"]], "And Base Class Conversion?": [[666, "and-base-class-conversion"]], "Inheritance And Object Oriented Design": [[667, "inheritance-and-object-oriented-design"]], "C++ \u201cInterfaces\u201d": [[668, "c-interfaces"]], "Bringing It All Together": [[668, "bringing-it-all-together"]], "Polymorphic Usage Of Objects": [[669, "polymorphic-usage-of-objects"]], "What Larger Systems Want": [[669, "what-larger-systems-want"]], "Pitfall \u27f6 Pure Virtual Methods": [[669, "pitfall-longrightarrow-pure-virtual-methods"]], "Pure Virtual Method": [[669, "pure-virtual-method"]], "Inheritance: private, protected (Implementation Inheritance)": [[670, "inheritance-private-protected-implementation-inheritance"]], "Virtual Destructors": [[671, "virtual-destructors"]], "Is-A Relationships And Destructors": [[671, "is-a-relationships-and-destructors"]], "Pure Virtual Destructor?": [[671, "pure-virtual-destructor"]], "Virtual Methods": [[672, "virtual-methods"]], "Simple Is-A Relationship Is Not Enough": [[672, "simple-is-a-relationship-is-not-enough"]], "Enter virtual": [[672, "enter-virtual"]], "Caution: virtual": [[672, "caution-virtual"]], "std::string": [[674, "std-string"]], "Addition, And Such": [[674, "addition-and-such"]], "Conversion From String": [[674, "conversion-from-string"]], "Conversion To String": [[674, "conversion-to-string"]], "Substrings": [[674, "substrings"]], "Exercise: Paint the American Flag Onto Standard Output": [[675, "exercise-paint-the-american-flag-onto-standard-output"]], "FH/Moodle Quiz: C++": [[676, "fh-moodle-quiz-c"]], "Exercises: Miscellaneous": [[677, "exercises-miscellaneous"]], "Exercise: Sum of Integers Coming From cin": [[678, "exercise-sum-of-integers-coming-from-cin"]], "Exercises: User Database": [[679, "exercises-user-database"]], "Exercise: Access Methods for Members": [[680, "exercise-access-methods-for-members"]], "Exercise: const Members": [[681, "exercise-const-members"]], "Exercise: Use const": [[682, "exercise-use-const"]], "Exercise: Default Constructor (was: Arrays of Objects)": [[683, "exercise-default-constructor-was-arrays-of-objects"]], "Exercise: Simple Method (Users Age By n Years)": [[684, "exercise-simple-method-users-age-by-n-years"]], "Exercise: Transform struct User Into A Class": [[685, "exercise-transform-struct-user-into-a-class"]], "Exercise: Insert a User into UserDB": [[686, "exercise-insert-a-user-into-userdb"]], "Exercise: Search a User By Lastname (std::find_if)": [[687, "exercise-search-a-user-by-lastname-std-find-if"]], "Exercise: Search, \u201cUser Not Found\u201d Exception": [[688, "exercise-search-user-not-found-exception"]], "What\u2019s Wrong?": [[688, "what-s-wrong"]], "Exercise: Search a User By Lastname": [[689, "exercise-search-a-user-by-lastname"]], "Exercise: Use std::vector in UserDB": [[690, "exercise-use-std-vector-in-userdb"]], "History, Background": [[693, "history-background"]], "Make C++ Great Again": [[693, "make-c-great-again"]], "The \u201cNew\u201d C++": [[693, "the-new-c"]], "A Live-Hacked Tour Around The New C++": [[694, "a-live-hacked-tour-around-the-new-c"]], "C++03 To-Do List Version": [[694, "c-03-to-do-list-version"]], "Real Container Initialization": [[694, "real-container-initialization"]], "Long iterator Type Names \u27f6 auto": [[694, "long-iterator-type-names-longrightarrow-auto"]], "More auto: Unpacking std::pair": [[694, "more-auto-unpacking-std-pair"]], "Pitfall: Plain auto Creates Copy \u27f6 const auto&": [[694, "pitfall-plain-auto-creates-copy-longrightarrow-const-auto"]], "Iterators Are So Old-School: Range Based For": [[694, "iterators-are-so-old-school-range-based-for"]], "Still Too Old-School: Want Python\u2019s Tuple Unpacking": [[694, "still-too-old-school-want-python-s-tuple-unpacking"]], "What If To-Do List Items Can Really Do Something? \u27f6 Functions": [[694, "what-if-to-do-list-items-can-really-do-something-longrightarrow-functions"]], "Function Pointers Are Old-School \u27f6 std::function": [[694, "function-pointers-are-old-school-longrightarrow-std-function"]], "Definitely Not Old-School: Lambda": [[694, "definitely-not-old-school-lambda"]], "Inevitable: Threads": [[694, "inevitable-threads"]], "Unions? std::variant!": [[694, "unions-std-variant"]], "Wrapping All That Into A Class": [[694, "wrapping-all-that-into-a-class"]], "Architectural Considerations: No Implementation Inheritance Wanted": [[694, "architectural-considerations-no-implementation-inheritance-wanted"]], "Wrapping Up: Initializer": [[694, "wrapping-up-initializer"]], "C++03 enum Types: Motivation": [[695, "c-03-enum-types-motivation"]], "C++03 enum Types: Problems": [[695, "c-03-enum-types-problems"]], "C++11 enum class": [[695, "c-11-enum-class"]], "C++11 enum class: Underlying Type": [[695, "c-11-enum-class-underlying-type"]], "Brace Initialization (Uniform Initialization)": [[696, "brace-initialization-uniform-initialization"]], "std::initializer_list: Brace Initialization, Implementor\u2019s View": [[697, "std-initializer-list-brace-initialization-implementor-s-view"]], "std::initializer_list": [[697, "std-initializer-list"]], "Direct Usage": [[697, "direct-usage"]], "Custom Class That Supports Brace Initialization": [[697, "custom-class-that-supports-brace-initialization"]], "Brace Initialization: Introduction": [[698, "brace-initialization-introduction"]], "Motivation: Inconsistent Initialization Styles": [[698, "motivation-inconsistent-initialization-styles"]], "Motivation: Integral Types Initialization": [[698, "motivation-integral-types-initialization"]], "Motivation: Aggregate Initialization": [[698, "motivation-aggregate-initialization"]], "Motivation: Object Initialization/Constructor": [[698, "motivation-object-initialization-constructor"]], "Motivation: Container Initialization (Missing Pre C++11)": [[698, "motivation-container-initialization-missing-pre-c-11"]], "Motivation: Member Array Initialization": [[698, "motivation-member-array-initialization"]], "Motivation: Heap Array Initialization": [[698, "motivation-heap-array-initialization"]], "Solution: Brace Initialization In C++11": [[698, "solution-brace-initialization-in-c-11"]], "Good: Refuses To Narrow Built-In Types": [[698, "good-refuses-to-narrow-built-in-types"]], "Brace Initialization: A Mess": [[699, "brace-initialization-a-mess"]], "Explicit Constructor And Brace Initialization": [[699, "explicit-constructor-and-brace-initialization"]], "Ambiguity: Explicit And std::initializer_list Constructor": [[699, "ambiguity-explicit-and-std-initializer-list-constructor"]], "Realistic Example: std::vector: Two int (Explicit)": [[699, "realistic-example-std-vector-two-int-explicit"]], "Realistic Example: std::vector: Two int (std::initializer_list)": [[699, "realistic-example-std-vector-two-int-std-initializer-list"]], "Nicolai Josuttis, Complaining About C++": [[699, "nicolai-josuttis-complaining-about-c"]], "Delegating Constructor: Motivation": [[700, "delegating-constructor-motivation"]], "Delegating Constructor: Solution": [[700, "delegating-constructor-solution"]], "constexpr": [[701, "constexpr"]], "Basic Usage: Expressions": [[701, "basic-usage-expressions"]], "constexpr Functions": [[701, "constexpr-functions"]], "Recursive constexpr": [[701, "recursive-constexpr"]], "constexpr Objects": [[701, "constexpr-objects"]], "Afterword, Further Reading": [[702, "afterword-further-reading"]], "Uses In The Standard Library": [[702, "uses-in-the-standard-library"]], "Other Uses": [[702, "other-uses"]], "All Said \u27f6 Guidelines": [[702, "all-said-longrightarrow-guidelines"]], "Further Reading (Well, Videos \ud83d\ude09)": [[702, "further-reading-well-videos-wink"]], "Move Semantics, Rvalue References": [[703, "move-semantics-rvalue-references"]], "Alternative Livehacking": [[703, "alternative-livehacking"]], "SmartPtr With Move Semantics": [[704, "smartptr-with-move-semantics"]], "Return SmartPtr Object From Function": [[704, "return-smartptr-object-from-function"]], "Assign SmartPtr Object \u27f6 Moved": [[704, "assign-smartptr-object-longrightarrow-moved"]], "Implementing Move Semantics (class String, Live Hacked)": [[705, "implementing-move-semantics-class-string-live-hacked"]], "Copy Semantics, Revisited": [[705, "copy-semantics-revisited"]], "class String, Without Copy": [[705, "class-string-without-copy"]], "Return From Function: Copy (Or Move) Wanted": [[705, "return-from-function-copy-or-move-wanted"]], "Move Constructor? Move?": [[705, "move-constructor-move"]], "Implementing Move Constructor": [[705, "implementing-move-constructor"]], "And Move Assignment?": [[705, "and-move-assignment"]], "Implementing Move Assignment": [[705, "implementing-move-assignment"]], "Using Move Semantics In Own Code": [[706, "using-move-semantics-in-own-code"]], "Using String: class Person": [[706, "using-string-class-person"]], "What?": [[706, "what"], [880, "what"]], "Using Rvalue References Inside Function: std::move": [[706, "using-rvalue-references-inside-function-std-move"]], "Lvalues, Rvalues, And Moving": [[707, "lvalues-rvalues-and-moving"]], "Return Object Problem: Reference To Stack-Based Object": [[707, "return-object-problem-reference-to-stack-based-object"]], "Return Object Problem: Solution: Copy": [[707, "return-object-problem-solution-copy"]], "Move Semantics: Wish List": [[707, "move-semantics-wish-list"]], "Theory: Lvalues": [[707, "theory-lvalues"]], "Theory: Rvalues": [[707, "theory-rvalues"]], "Lvalue References (The Good Old Ones)": [[707, "lvalue-references-the-good-old-ones"]], "Rvalue References: So What Is That?": [[707, "rvalue-references-so-what-is-that"]], "Rvalue References As Function Parameters": [[707, "rvalue-references-as-function-parameters"]], "Use Of Rvalue References Parameter Inside A Function: Is An Lvalue": [[707, "use-of-rvalue-references-parameter-inside-a-function-is-an-lvalue"]], "Enter Move Constructor And Move Assignment": [[707, "enter-move-constructor-and-move-assignment"]], "Rules": [[707, null]], "Templates end with \u201c>>\u201d": [[708, "templates-end-with"]], "Duck Typing (Err, auto) Without A Duck": [[709, "duck-typing-err-auto-without-a-duck"]], "Most Basic Usage": [[709, "most-basic-usage"]], "auto Is Only The Basic Type": [[709, "auto-is-only-the-basic-type"]], "If You Want Reference, Say So!": [[709, "if-you-want-reference-say-so"]], "If You Want Const-Reference, Say So!": [[709, "if-you-want-const-reference-say-so"]], "If You Want Pointer, Say So!": [[709, "if-you-want-pointer-say-so"]], "And Arrays? Decay To Pointers!": [[709, "and-arrays-decay-to-pointers"]], "Concepts: Overview": [[711, "concepts-overview"]], "No Problem: Template Instantiation Chosen By Parameter Type": [[711, "no-problem-template-instantiation-chosen-by-parameter-type"]], "Problem: Template Instantiation Chosen By Parameter Type": [[711, "problem-template-instantiation-chosen-by-parameter-type"]], "Concepts To The Rescue": [[711, "concepts-to-the-rescue"]], "Syntactic Variations": [[711, "syntactic-variations"]], "toolcase-1-conceptless.cpp": [[712, "toolcase-1-conceptless-cpp"]], "toolcase-2-conceptless-error.cpp": [[713, "toolcase-2-conceptless-error-cpp"]], "toolcase-3-concept-integral.cpp": [[714, "toolcase-3-concept-integral-cpp"]], "Concepts: Links": [[715, "concepts-links"]], "Writing Your Own Concepts": [[716, "writing-your-own-concepts"]], "Starting Point: Good Old Function": [[716, "starting-point-good-old-function"]], "Need Template": [[716, "need-template"]], "Error: Requirement Not Fulfilled": [[716, "error-requirement-not-fulfilled"]], "Concept: has_size": [[716, "concept-has-size"]], "Concept: index_returns_double": [[716, "concept-index-returns-double"]], "example-1-good-old-func.cpp": [[717, "example-1-good-old-func-cpp"]], "example-2-need-template.cpp": [[718, "example-2-need-template-cpp"]], "example-4-concept-has-size.cpp": [[719, "example-4-concept-has-size-cpp"]], "example-5-concept-index-ret-double.cpp": [[720, "example-5-concept-index-ret-double-cpp"]], "Coroutines": [[721, "coroutines"]], "Coroutines: An Overview": [[722, "coroutines-an-overview"]], "Foreword": [[722, "foreword"]], "Prototypical Introductory Exampe: Fibonacci Numbers": [[722, "prototypical-introductory-exampe-fibonacci-numbers"]], "Step By Step: Simplest": [[722, "step-by-step-simplest"]], "Simplest: Incremental Fixing And Explaining": [[722, "simplest-incremental-fixing-and-explaining"]], "Driving Coroutines: Coroutine Anatomy": [[722, "driving-coroutines-coroutine-anatomy"]], "Driving Coroutines: Resuming": [[722, "driving-coroutines-resuming"]], "Suspension: Returning Control To Caller (co_yield)": [[722, "suspension-returning-control-to-caller-co-yield"]], "Playing Around: Iteration, Mimicking Python Iterator Protocol": [[722, "playing-around-iteration-mimicking-python-iterator-protocol"]], "Playing Around: Iteration, Range-Based-For": [[722, "playing-around-iteration-range-based-for"]], "Playing Around: Generic Generator": [[722, "playing-around-generic-generator"]], "Playing Around: Fibonacci Numbers, Generator Version": [[722, "playing-around-fibonacci-numbers-generator-version"]], "Pitfalls: Coroutines Are Stateful!": [[722, "pitfalls-coroutines-are-stateful"]], "fibo-generator.cpp": [[723, "fibo-generator-cpp"]], "fibonacci.cpp": [[724, "fibonacci-cpp"]], "generator.h": [[725, "generator-h"]], "generator-hello.cpp": [[726, "generator-hello-cpp"]], "simplest.cpp": [[727, "simplest-cpp"]], "suspend.cpp": [[728, "suspend-cpp"]], "suspend-iter.cpp": [[729, "suspend-iter-cpp"]], "suspend-next.cpp": [[730, "suspend-next-cpp"]], "= default": [[731, "default"]], "Problem: Default Constructor Not Automatically Generated": [[731, "problem-default-constructor-not-automatically-generated"]], "C++ < 11 Solution: Write Default Constructor \ud83d\ude20 \ud83d\udc4e": [[731, "c-11-solution-write-default-constructor-angry-thumbsdown"]], "C++ >= 11 Solution: = default": [[731, "c-11-solution-default"]], "= delete": [[732, "delete"]], "Problem: Copy Is Not Always Wanted": [[732, "problem-copy-is-not-always-wanted"]], "C++ < 11 Solution: Make Copy private": [[732, "c-11-solution-make-copy-private"]], "C++ >= 11 Solution: = delete Copy": [[732, "c-11-solution-delete-copy"]], "final": [[733, "final"]], "Architectural Decisions": [[733, "architectural-decisions"]], "Enter final: Architectural Cleanliness By Compiler": [[733, "enter-final-architectural-cleanliness-by-compiler"]], "New Language Features": [[734, "new-language-features"]], "Lambda": [[735, "lambda"], [736, "lambda"]], "Lambda To The Rescue": [[736, "lambda-to-the-rescue"]], "Excursion: Python Closures": [[736, "excursion-python-closures"]], "Same In C++: Capturing": [[736, "same-in-c-capturing"]], "So What Is That? (Answer: A Functor)": [[736, "so-what-is-that-answer-a-functor"]], "Capturing By Reference \u27f6 Careful!": [[736, "capturing-by-reference-longrightarrow-careful"]], "More About Capturing": [[736, "more-about-capturing"]], "Lambda: More Capturing": [[737, "lambda-more-capturing"]], "More Capture Syntax": [[737, "more-capture-syntax"]], "Capturing Explicitly, By Copy": [[737, "capturing-explicitly-by-copy"]], "Capturing Explicitly, By Reference": [[737, "capturing-explicitly-by-reference"]], "Mixed Explicit Capture": [[737, "mixed-explicit-capture"]], "Define Variables In Capture": [[737, "define-variables-in-capture"]], "Capturing All By Reference": [[737, "capturing-all-by-reference"]], "Capturing All By Copy": [[737, "capturing-all-by-copy"]], "Capturing All By Copy, Except Some By Reference": [[737, "capturing-all-by-copy-except-some-by-reference"]], "Capturing this": [[737, "capturing-this"]], "Live Hacking: Handwritten Functors (Too Much Boilerplate)": [[738, "live-hacking-handwritten-functors-too-much-boilerplate"]], "Original Lambda Demo Proggy": [[738, "original-lambda-demo-proggy"]], "Morph Lambda Into Handwritten Functor Class": [[738, "morph-lambda-into-handwritten-functor-class"]], "Live Hacking: Handwritten Functors, And Capturing By Reference (Pitfalls)": [[739, "live-hacking-handwritten-functors-and-capturing-by-reference-pitfalls"]], "Original, Handwritten Functor (By Copy)": [[739, "original-handwritten-functor-by-copy"]], "Possible Pitfall: Capturing A Reference": [[739, "possible-pitfall-capturing-a-reference"]], "Lifetime Of Temporary, Made Explicit": [[739, "lifetime-of-temporary-made-explicit"]], "Lifetime Of Temporary, Made Explicit \u27f6 \ud83d\ude91": [[739, "lifetime-of-temporary-made-explicit-longrightarrow-ambulance"]], "override": [[741, "override"]], "Correct Overriding \u2026": [[741, "correct-overriding"]], "\u2026 Is Very Hard": [[741, "is-very-hard"]], "More Problems Arise": [[741, "more-problems-arise"]], "Solution: override": [[741, "solution-override"]], "Range Based for Loops: Introduction": [[742, "range-based-for-loops-introduction"]], "Enter Range Based for Loops": [[742, "enter-range-based-for-loops"]], "Range Based for Loops, And auto": [[742, "range-based-for-loops-and-auto"]], "Case Study: std::map Iteration": [[742, "case-study-std-map-iteration"]], "Case Study: Range Based for On std::map": [[743, "case-study-range-based-for-on-std-map"]], "Gool Ol\u2019 Days: Iteration In C++ < 11": [[743, "gool-ol-days-iteration-in-c-11"]], "Basic C++11 Iteration: Range Based For, auto, And Initialization": [[743, "basic-c-11-iteration-range-based-for-auto-and-initialization"]], "Variation: Preventing Accidental Copy Using const auto&": [[743, "variation-preventing-accidental-copy-using-const-auto"]], "Pythonicity: Tuple Unpacking, err Structured Binding": [[743, "pythonicity-tuple-unpacking-err-structured-binding"]], "Structured Binding - Preventing Accidental Copy": [[743, "structured-binding-preventing-accidental-copy"]], "Ranges And Views: Good Or Bad?": [[744, "ranges-and-views-good-or-bad"]], "Dangling Iterator Protection": [[744, "dangling-iterator-protection"]], "Performance: views::drop Is Easy": [[744, "performance-views-drop-is-easy"]], "Performance: views::filter Is Not Easy": [[744, "performance-views-filter-is-not-easy"]], "Constraints: How To Read?": [[744, "constraints-how-to-read"]], "And drop()? std::vector Is Easy": [[744, "and-drop-std-vector-is-easy"]], "And drop()? std::list Is Not Easy": [[744, "and-drop-std-list-is-not-easy"]], "One Of Many Bugs, Introduced By .begin() Caching": [[744, "one-of-many-bugs-introduced-by-begin-caching"]], "Exceptions From Rules \u27f6 Dogmatic Don\u2019ts (Sigh, C++)": [[744, "exceptions-from-rules-longrightarrow-dogmatic-don-ts-sigh-c"]], "Ranges: Overview": [[746, "ranges-overview"]], "Ranges?": [[746, "ranges"]], "Containers And Views (Storage Behavior)": [[746, "containers-and-views-storage-behavior"]], "Pipe Syntax": [[746, "pipe-syntax"]], "Views As Parameters: Good Old Template": [[746, "views-as-parameters-good-old-template"]], "Views As Parameters: Abbreviated Function Template": [[746, "views-as-parameters-abbreviated-function-template"]], "Views As Parameters: Concepts": [[746, "views-as-parameters-concepts"]], "Available <ranges> Concepts": [[746, "available-ranges-concepts"]], "Ranges And Views: Links": [[747, "ranges-and-views-links"]], "Tuple Unpacking (Err, Structured Binding)": [[748, "tuple-unpacking-err-structured-binding"]], "Variations, Compatible Data Types": [[748, "variations-compatible-data-types"]], "struct: By Copy": [[748, "struct-by-copy"]], "struct: Reference": [[748, "struct-reference"]], "struct: By const Reference": [[748, "struct-by-const-reference"]], "std::tuple: By Copy": [[748, "std-tuple-by-copy"]], "std::tuple: By Reference": [[748, "std-tuple-by-reference"]], "std::tuple: By const Reference": [[748, "std-tuple-by-const-reference"]], "Arrays: By Copy": [[748, "arrays-by-copy"]], "Arrays: By Reference": [[748, "arrays-by-reference"]], "Arrays: By const Reference": [[748, "arrays-by-const-reference"]], "Smart Pointers: Closing Words": [[749, "smart-pointers-closing-words"]], "Shared Pointers: Closing Words": [[749, "shared-pointers-closing-words"]], "Smart Pointers (std::unique_ptr, std::shared_ptr)": [[750, "smart-pointers-std-unique-ptr-std-shared-ptr"]], "Why Smart Pointers?": [[751, "why-smart-pointers"]], "Recap: Constructors and Destructors": [[751, "recap-constructors-and-destructors"]], "(Trying To) Handwrite A Smart Pointer Class in C++ Before C++11": [[752, "trying-to-handwrite-a-smart-pointer-class-in-c-before-c-11"]], "Sensors To Manage": [[752, "sensors-to-manage"]], "Basic Resource Management, Operator Overloading": [[752, "basic-resource-management-operator-overloading"]], "Copy Constructor And Assignment Operator (And Default Ctor)": [[752, "copy-constructor-and-assignment-operator-and-default-ctor"]], "auto_ptr Style": [[752, "auto-ptr-style"]], "Explicit move() Method Maybe?": [[752, "explicit-move-method-maybe"]], "Stop!!!": [[752, "stop"]], "std::shared_ptr": [[753, "std-shared-ptr"]], "Spirit: Not Unique, But Shared (i.e. Reference Counted)": [[753, "spirit-not-unique-but-shared-i-e-reference-counted"]], "std::shared_ptr: Copy": [[753, "std-shared-ptr-copy"]], "std::shared_ptr vs. std::unique_ptr": [[753, "std-shared-ptr-vs-std-unique-ptr"]], "std::shared_ptr: Object Lifetime": [[753, "std-shared-ptr-object-lifetime"]], "std::shared_ptr: Juggling": [[753, "std-shared-ptr-juggling"]], "Demo: Basic Usage": [[753, "demo-basic-usage"]], "Demo: std::make_shared": [[753, "demo-std-make-shared"]], "Demo: Cyclic References": [[753, "demo-cyclic-references"]], "std::unique_ptr": [[754, "std-unique-ptr"]], "The Spirit Of std::unique_ptr": [[754, "the-spirit-of-std-unique-ptr"]], "Basic Usage: Prevent Leaks": [[754, "basic-usage-prevent-leaks"]], "Eliminate Chance Of Leakage \u27f6 Ownership": [[754, "eliminate-chance-of-leakage-longrightarrow-ownership"]], "Saving Keystrokes: std::make_unique<>()": [[754, "saving-keystrokes-std-make-unique"]], "Explicitly Acknowledging Ownership Transfer: std::move()": [[754, "explicitly-acknowledging-ownership-transfer-std-move"]], "Compiler Can Prove: Implicit Ownership Transfer": [[754, "compiler-can-prove-implicit-ownership-transfer"]], "How To Write Code That Can Take Ownership?": [[754, "how-to-write-code-that-can-take-ownership"]], "Manipulating Pointer Content": [[754, "manipulating-pointer-content"]], "std::weak_ptr": [[755, "std-weak-ptr"]], "Spirit: Borrowed Reference That Could Be Invalid": [[755, "spirit-borrowed-reference-that-could-be-invalid"]], "A Real-Life Example": [[755, "a-real-life-example"]], "Perfect Forwarding": [[756, "perfect-forwarding"]], "Universal References? Forwarding References? REALLY?": [[756, "universal-references-forwarding-references-really"]], "Universal Reference? Binds To Lvalues?": [[756, "universal-reference-binds-to-lvalues"]], "Enter Forwarding": [[756, "enter-forwarding"]], "Exercise: Dual insert() Method In Exercise: Bag Of Items, By Shared Reference": [[756, "exercise-dual-insert-method-in-trainings-material-soup-cxx11-exercises-bag-shared"]], "std::bind": [[757, "std-bind"]], "Why? What\u2019s The Problem?": [[757, "why-what-s-the-problem"]], "Sample Program: All Done Manually": [[757, "sample-program-all-done-manually"]], "Sideway: std::transform": [[757, "sideway-std-transform"]], "Sample Program: Using std::transform": [[757, "sample-program-using-std-transform"]], "std::bind: Null Adaptation, Pointlessly": [[757, "std-bind-null-adaptation-pointlessly"]], "std::bind: Adapting One Parameter To No Parameter": [[757, "std-bind-adapting-one-parameter-to-no-parameter"]], "std::bind: Hardcoding Parameters": [[757, "std-bind-hardcoding-parameters"]], "std::bind: Swapping Parameters \u27f6 std::placeholders": [[757, "std-bind-swapping-parameters-longrightarrow-std-placeholders"]], "std::bind: Hardcoding Only First Parameter \u27f6 std::placeholders": [[757, "std-bind-hardcoding-only-first-parameter-longrightarrow-std-placeholders"]], "std::bind: Functor (Is-A Callable)": [[757, "std-bind-functor-is-a-callable"]], "std::bind: Lambda (Is-A Callable)": [[757, "std-bind-lambda-is-a-callable"]], "Sample Program: Using std::transform With std::bind": [[757, "sample-program-using-std-transform-with-std-bind"]], "Summary": [[757, "summary"], [837, "summary"], [837, "id1"], [1157, "summary"], [1159, "summary"]], "std::function": [[758, "std-function"]], "Classic Polymorphism": [[758, "classic-polymorphism"]], "Classic Polymorphism: Upsides": [[758, "classic-polymorphism-upsides"]], "Classic Polymorphism: Technical Downsides": [[758, "classic-polymorphism-technical-downsides"]], "Classic Polymorphism: More Downsides": [[758, "classic-polymorphism-more-downsides"]], "std::function to the Rescue (1)": [[758, "std-function-to-the-rescue-1"]], "std::function to the Rescue (2)": [[758, "std-function-to-the-rescue-2"]], "std::function: Last Words": [[758, "std-function-last-words"]], "Threads Introduction": [[760, "threads-introduction"]], "Operating System Primitives": [[760, "operating-system-primitives"]], "There Be Dragons": [[760, "there-be-dragons"]], "Threads in C++": [[761, "threads-in-c"]], "Creating Threads is Far Too Easy": [[761, "creating-threads-is-far-too-easy"]], "Joinable vs. Detached": [[761, "joinable-vs-detached"]], "Cornercases in Thread Lifetime": [[761, "cornercases-in-thread-lifetime"]], "Race Conditions": [[762, "race-conditions"], [835, "race-conditions"]], "std::atomic": [[763, "std-atomic"]], "Atomic Instructions (1)": [[763, "atomic-instructions-1"]], "Atomic Instructions (2)": [[763, "atomic-instructions-2"]], "std::mutex And Friends": [[764, "std-mutex-and-friends"]], "std::mutex": [[764, "std-mutex"]], "std::recursive_mutex": [[764, "std-recursive-mutex"]], "std::timed_mutex": [[764, "std-timed-mutex"]], "std::recursive_timed_mutex": [[764, "std-recursive-timed-mutex"]], "Scoped Locking": [[765, "scoped-locking"]], "Explicit Unlocking Considered Dangerous": [[765, "explicit-unlocking-considered-dangerous"]], "RAII - Resource Acquisition Is Initialization": [[765, "raii-resource-acquisition-is-initialization"]], "Simplest: std::lock_guard": [[765, "simplest-std-lock-guard"]], "std::condition_variable (Live Hacking Multithreaded Queue)": [[766, "std-condition-variable-live-hacking-multithreaded-queue"]], "Overview: Operations": [[766, "overview-operations"]], "Communication, Polling: Thread-Safe Queue": [[766, "communication-polling-thread-safe-queue"]], "Anti-Polling: Thread-Safe Queue, And POSIX Condition Variables": [[766, "anti-polling-thread-safe-queue-and-posix-condition-variables"]], "Discussion: Signalling And Waiting, Predicates: Separation Of Concerns": [[766, "discussion-signalling-and-waiting-predicates-separation-of-concerns"]], "Thread-Safe Queue, And C++ Condition Variables": [[766, "thread-safe-queue-and-c-condition-variables"]], "std::promise and std::future (And Some std::chrono) (Some Live Hacking)": [[768, "std-promise-and-std-future-and-some-std-chrono-some-live-hacking"]], "Overview: std::promise": [[768, "overview-std-promise"]], "Overview: std::future": [[768, "overview-std-future"]], "Utterly Wrong: Waiting For Something To Become Ready": [[768, "utterly-wrong-waiting-for-something-to-become-ready"]], "Sideways: std::chrono, And Literals": [[768, "sideways-std-chrono-and-literals"]], "Minimal Fix: Use std::mutex": [[768, "minimal-fix-use-std-mutex"]], "Anti-Clumsiness: Scoped Locking": [[768, "anti-clumsiness-scoped-locking"]], "Pro-Readability: Encapsulate": [[768, "pro-readability-encapsulate"]], "Atomics On Structures?": [[768, "atomics-on-structures"]], "Anti-Polling: Semaphore": [[768, "anti-polling-semaphore"]], "Getting To The Point: std::promise And std::future": [[768, "getting-to-the-point-std-promise-and-std-future"]], "And Exceptions?": [[768, "and-exceptions"]], "std::chrono": [[769, "std-chrono"], [769, "id1"]], "Clock Domains": [[769, "clock-domains"]], "Measuring Time (1)": [[769, "measuring-time-1"]], "Measuring Time (2)": [[769, "measuring-time-2"]], "Sleeping, and Literals": [[769, "sleeping-and-literals"]], "New-Style Union: std::variant": [[770, "new-style-union-std-variant"]], "Problems With C Unions, And C++ Types": [[770, "problems-with-c-unions-and-c-types"]], "Instantiation, Default Initialization, Member Access": [[770, "instantiation-default-initialization-member-access"]], "Non-Default Initialization": [[770, "non-default-initialization"]], "Accessing Non-Current Member: std::bad_variant_access": [[770, "accessing-non-current-member-std-bad-variant-access"]], "Non-Throwing Accessor: std::get_if<>": [[770, "non-throwing-accessor-std-get-if"]], "And Non-Fundamental Types?": [[770, "and-non-fundamental-types"]], "CRTP": [[772, "crtp"], [777, "crtp"]], "std::vector<>: Allocators (Very Incomplete)": [[773, "std-vector-allocators-very-incomplete"]], "Classic Virtual": [[774, "classic-virtual"]], "Sensor Definitions": [[774, "sensor-definitions"], [776, "sensor-definitions"], [778, "sensor-definitions"], [780, "sensor-definitions"]], "Virtual Access": [[774, "virtual-access"], [776, "virtual-access"], [778, "virtual-access"], [779, "virtual-access"], [780, "virtual-access"], [781, "virtual-access"]], "Average Across Many": [[774, "average-across-many"], [776, "average-across-many"], [778, "average-across-many"], [780, "average-across-many"]], "Embedded Problems? Code Bloat? Type Erasure? Solutions?": [[775, "embedded-problems-code-bloat-type-erasure-solutions"]], "virtual Is Bad. Is virtual Bad? (Type Erasure)": [[775, "virtual-is-bad-is-virtual-bad-type-erasure"]], "And CRTP?": [[775, "and-crtp"]], "std::string_view": [[775, "std-string-view"]], "Non-Virtual, But Related": [[776, "non-virtual-but-related"]], "Type Erasure (Static vs. Dynamic Polymorphism), CRTP": [[777, "type-erasure-static-vs-dynamic-polymorphism-crtp"]], "Unrelated (Duck-Typed)": [[778, "unrelated-duck-typed"]], "std::variant (Automatic Virtual Dispatch Using Template Method)": [[779, "std-variant-automatic-virtual-dispatch-using-template-method"]], "std::variant (Manual Virtual Dispatch, Using if)": [[780, "std-variant-manual-virtual-dispatch-using-if"]], "std::variant (Manual Virtual Dispatch, Using std::visit)": [[781, "std-variant-manual-virtual-dispatch-using-std-visit"]], "Why Replace virtual?": [[782, "why-replace-virtual"]], "Drafts": [[783, "drafts"], [931, "drafts"]], "Exercise: Bag Of Items, By Copy": [[784, "exercise-bag-of-items-by-copy"]], "Step 1: Insert, Find": [[784, "step-1-insert-find"]], "Step 2: Remove": [[784, "step-2-remove"]], "Exercise: Bag Of Items, By Shared Reference": [[785, "exercise-bag-of-items-by-shared-reference"]], "Step 1: Transform into std::shared_ptr": [[785, "step-1-transform-into-std-shared-ptr"]], "Step 2: Accidental Move-Insert?": [[785, "step-2-accidental-move-insert"]], "Step 3: Move-Insert, And std::weak_ptr": [[785, "step-3-move-insert-and-std-weak-ptr"]], "Exercise: Bag Of Items, By Unique Reference": [[786, "exercise-bag-of-items-by-unique-reference"]], "std::filesystem": [[788, "std-filesystem"]], "Paths: Composition, Comparison": [[788, "paths-composition-comparison"]], "Absolute and Relative Paths": [[788, "absolute-and-relative-paths"], [921, "absolute-and-relative-paths"]], "Path Component Access": [[788, "path-component-access"]], "Iterating Over Path Components": [[788, "iterating-over-path-components"]], "Current Working Directory": [[788, "current-working-directory"], [900, "current-working-directory"]], "Directory Creation: std::filesystem::create_directory()": [[788, "directory-creation-std-filesystem-create-directory"]], "Directory Creation: std::filesystem::create_directories()": [[788, "directory-creation-std-filesystem-create-directories"]], "Directory Entry Classification: std::filesystem::is_xxx()": [[788, "directory-entry-classification-std-filesystem-is-xxx"]], "Directory Entries: Basics": [[788, "directory-entries-basics"]], "Directory Entries: std::filesystem::directory_entry": [[788, "directory-entries-std-filesystem-directory-entry"]], "Iterating Over Directory Entries": [[788, "iterating-over-directory-entries"]], "Recursive Directory Iteration": [[788, "recursive-directory-iteration"]], "The New C++ (11-\u2026)": [[789, "the-new-c-11"]], "Generated Topic Graph": [[790, "generated-topic-graph"]], "Modern Character Devices (Screenplay)": [[792, "modern-character-devices-screenplay"]], "Modern Character Devices (Slideshow)": [[793, "modern-character-devices-slideshow"]], "Source": [[793, null], [796, null], [798, null], [801, null], [803, null], [806, null], [815, null], [817, null], [827, null], [829, null], [840, null], [845, null]], "Character Devices: Problems": [[793, "character-devices-problems"]], "Dynamic Device Numbers": [[793, "dynamic-device-numbers"]], "Device Classes": [[793, "device-classes"]], "Devices": [[793, "devices"]], "Modern Character Devices": [[794, "modern-character-devices"]], "File Operations on Character Devices (Screenplay)": [[795, "file-operations-on-character-devices-screenplay"]], "Hooks Necessary": [[795, "hooks-necessary"]], "Implement open(), read(), write()": [[795, "implement-open-read-write"]], "ioctl()": [[795, "ioctl"]], "File Operations on Character Devices (Slideshow)": [[796, "file-operations-on-character-devices-slideshow"]], "File Operations: Interface Definition (\u201cvtable\u201d) (1)": [[796, "file-operations-interface-definition-vtable-1"]], "Available Methods": [[796, "available-methods"]], "open(): Userspace": [[796, "open-userspace"]], "open(): Kernelspace": [[796, "open-kernelspace"]], "ioctl(): Userspace": [[796, "ioctl-userspace"]], "ioctl(): Kernelspace": [[796, "ioctl-kernelspace"]], "ioctl(): Requests": [[796, "ioctl-requests"]], "_IO*() Macros": [[796, "io-macros"]], "_IO*() Macros: Usage": [[796, "io-macros-usage"]], "File Operations on Character Devices": [[797, "file-operations-on-character-devices"]], "Coding: First Functionality (Slideshow)": [[798, "coding-first-functionality-slideshow"]], "Implement Event List": [[798, "implement-event-list"]], "Implement ioctl Request to Add an Event": [[798, "implement-ioctl-request-to-add-an-event"]], "Implement a Userspace Test Program": [[798, "implement-a-userspace-test-program"]], "Coding: First Functionality": [[799, "coding-first-functionality"]], "Character Device Basics (Livehacking Screenplay)": [[800, "character-device-basics-livehacking-screenplay"]], "Major and Minor Numbers": [[800, "major-and-minor-numbers"]], "Character Device": [[800, "character-device"]], "Character Device Basics (Slideshow)": [[801, "character-device-basics-slideshow"]], "Major and Minor Numbers: User\u2019s View": [[801, "major-and-minor-numbers-user-s-view"]], "Major and Minor Numbers: Kernel Space": [[801, "major-and-minor-numbers-kernel-space"]], "History: Hardcoded Device Numbers (1)": [[801, "history-hardcoded-device-numbers-1"]], "History: Hardcoded Device Numbers (2)": [[801, "history-hardcoded-device-numbers-2"]], "Character Device (1)": [[801, "character-device-1"]], "Character Device (2)": [[801, "character-device-2"]], "And User Space?": [[801, "and-user-space"]], "Character Device Basics": [[802, "character-device-basics"]], "Coding: Multiple Devices (Slideshow)": [[803, "coding-multiple-devices-slideshow"]], "Instantiate Multiple Devices": [[803, "instantiate-multiple-devices"]], "Coding: Multiple Devices": [[804, "coding-multiple-devices"]], "Coding: Refactoring (Screenplay)": [[805, "coding-refactoring-screenplay"]], "Build Module From Multiple Files": [[805, "build-module-from-multiple-files"]], "Per-Device Structure": [[805, "per-device-structure"]], "Want My Hair Pretty": [[805, "want-my-hair-pretty"]], "Makefile: -Wswitch-enum": [[805, "makefile-wswitch-enum"]], "Coding: Refactoring (Slideshow)": [[806, "coding-refactoring-slideshow"]], "What\u2019s Bad?": [[806, "what-s-bad"]], "Coding: Refactoring": [[807, "coding-refactoring"]], "DMA (Slideshow)": [[808, "dma-slideshow"]], "Address Types": [[808, "address-types"]], "Physical Memory Allocation": [[808, "physical-memory-allocation"]], "DMA Mappings: Overview": [[808, "dma-mappings-overview"]], "Consistent DMA Mappings": [[808, "consistent-dma-mappings"]], "Streaming Mappings: Direction": [[808, "streaming-mappings-direction"]], "Streaming Mappings: To Virtual Address": [[808, "streaming-mappings-to-virtual-address"]], "Streaming Mappings: To Page": [[808, "streaming-mappings-to-page"]], "Streaming Mappings: Scatterlists (1)": [[808, "streaming-mappings-scatterlists-1"]], "Streaming Mappings: Scatterlists (2)": [[808, "streaming-mappings-scatterlists-2"]], "Streaming Mappings: Syncing": [[808, "streaming-mappings-syncing"]], "DMA": [[809, "dma"]], "Building a Fedora Kernel (Screenplay)": [[810, "building-a-fedora-kernel-screenplay"]], "Why Build the Entire Kernel When I Only Want to Build a Module": [[810, "why-build-the-entire-kernel-when-i-only-want-to-build-a-module"]], "Building from \u201cExploded Git Tree\u201d": [[810, "building-from-exploded-git-tree"]], "Building from the RPM Source": [[810, "building-from-the-rpm-source"]], "Fedora: Building the Kernel": [[811, "fedora-building-the-kernel"]], "Fedora: Building External Kernel Modules (Screenplay)": [[812, "fedora-building-external-kernel-modules-screenplay"]], "Prerequisite: Build Entire Kernel": [[812, "prerequisite-build-entire-kernel"]], "Build Modules": [[812, "build-modules"]], "Install Modules": [[812, "install-modules"]], "Fedora: Building External Kernel Modules": [[813, "fedora-building-external-kernel-modules"]], "Module Loading, Hello World (Slideshow)": [[815, "module-loading-hello-world-slideshow"]], "Kernel Driver Anatomy": [[815, "kernel-driver-anatomy"]], "Built-In vs. Loadable Module": [[815, "built-in-vs-loadable-module"]], "Minimum Module Source": [[815, "minimum-module-source"]], "Gotchas: init() and exit()": [[815, "gotchas-init-and-exit"]], "Module Build": [[815, "module-build"]], "Minimum Makefile, Building": [[815, "minimum-makefile-building"]], "Modules: Load/Unload Commands": [[815, "modules-load-unload-commands"]], "Modules: Dependency (and other) Databases": [[815, "modules-dependency-and-other-databases"]], "Module Loading, Hello World": [[816, "module-loading-hello-world"]], "Coding: Raspi GPIO Interrupts (Slideshow)": [[817, "coding-raspi-gpio-interrupts-slideshow"]], "Move to Raspberry Pi, Cross Compiling": [[817, "move-to-raspberry-pi-cross-compiling"]], "Cross Compilation": [[817, "cross-compilation"]], "Cross Compilation Sucks": [[817, "cross-compilation-sucks"]], "Short (Legacy) GPIO API Introduction": [[817, "short-legacy-gpio-api-introduction"]], "Implement New Event Type: Interrupt": [[817, "implement-new-event-type-interrupt"]], "New ioctl: MY_ACTIVATE_GPIO": [[817, "new-ioctl-my-activate-gpio"]], "Interlude: _IO*() Macros": [[817, "interlude-io-macros"]], "Request GPIO": [[817, "request-gpio"]], "Request Interrupt": [[817, "request-interrupt"]], "Coding: Raspi GPIO Interrupts": [[818, "coding-raspi-gpio-interrupts"]], "Interrupts (Slideshow)": [[819, "interrupts-slideshow"]], "Interrupt Facts": [[819, "interrupt-facts"]], "Interrupt Service Routine": [[819, "interrupt-service-routine"]], "Requesting (and Releasing) Interrupts (1)": [[819, "requesting-and-releasing-interrupts-1"]], "IO Memory (Slideshow)": [[821, "io-memory-slideshow"]], "I/O Memory": [[821, "i-o-memory"]], "I/O Memory: Reservation": [[821, "i-o-memory-reservation"]], "Making I/O Memory Accessible": [[821, "making-i-o-memory-accessible"]], "Accessing I/O Memory": [[821, "accessing-i-o-memory"]], "IO Memory": [[822, "io-memory"]], "Dynamic Memory: kmalloc() (Slideshow)": [[823, "dynamic-memory-kmalloc-slideshow"]], "Dynamic Memory: kmalloc()": [[823, "dynamic-memory-kmalloc"], [824, "dynamic-memory-kmalloc"]], "Dynamic Memory: Flags": [[823, "dynamic-memory-flags"]], "Doubly Linked Lists (Slideshow)": [[825, "doubly-linked-lists-slideshow"]], "Big Picture": [[825, "big-picture"]], "List Head": [[825, "list-head"]], "Insert a Node": [[825, "insert-a-node"]], "Iteration, and Getting a Node\u2019s Container": [[825, "iteration-and-getting-a-node-s-container"]], "Emptying a List": [[825, "emptying-a-list"]], "Doubly Linked Lists": [[826, "doubly-linked-lists"]], "Coding: Fix Race Condition (Mutex) (Slideshow)": [[827, "coding-fix-race-condition-mutex-slideshow"]], "What Do We Have?": [[827, "what-do-we-have"]], "Consequences of Not Protecting": [[827, "consequences-of-not-protecting"]], "Protect Event List": [[827, "protect-event-list"]], "Protect Device List": [[827, "protect-device-list"]], "Coding: Fix Race Condition (Mutex)": [[828, "coding-fix-race-condition-mutex"]], "Mutex (and RT Mutex) (Slideshow)": [[829, "mutex-and-rt-mutex-slideshow"]], "Locking in the Kernel": [[829, "locking-in-the-kernel"]], "Mutual Exclusion: Mutex": [[829, "mutual-exclusion-mutex"]], "Mutex: Locking (1)": [[829, "mutex-locking-1"]], "Mutex: Locking (2)": [[829, "mutex-locking-2"]], "Mutex: Releasing": [[829, "mutex-releasing"]], "Realtime Mutex": [[829, "realtime-mutex"]], "Mutex (and RT Mutex)": [[830, "mutex-and-rt-mutex"]], "Network Devices (Slideshow)": [[831, "network-devices-slideshow"]], "Module Initialization: Device Allocation": [[831, "module-initialization-device-allocation"]], "Module Initialization: Device Registration": [[831, "module-initialization-device-registration"]], "Device Methods": [[831, "device-methods"]], "Kernel Networking Layer Utilities": [[831, "kernel-networking-layer-utilities"]], "Network Devices": [[832, "network-devices"]], "PCI (Slideshow)": [[833, "pci-slideshow"]], "First and Foremost": [[833, "first-and-foremost"]], "PCI Driver Methods": [[833, "pci-driver-methods"]], "PCI Driver Structure, and the init() Method": [[833, "pci-driver-structure-and-the-init-method"]], "PCI Device Structure, and the probe() Method": [[833, "pci-device-structure-and-the-probe-method"]], "The probe() Method: Boilerplate": [[833, "the-probe-method-boilerplate"]], "The probe() Method: Interrupt": [[833, "the-probe-method-interrupt"]], "The probe() Method: PCI Resources (BARs)": [[833, "the-probe-method-pci-resources-bars"]], "DMA Support Routines": [[833, "dma-support-routines"]], "PCI": [[834, "pci"]], "Process vs.Atomic Context (Slideshow)": [[835, "process-vs-atomic-context-slideshow"]], "Process Context": [[835, "process-context"]], "Atomic Context": [[835, "atomic-context"]], "Atomic vs. Process Context": [[835, "atomic-vs-process-context"]], "\u201cSleep While Atomic\u201d Debugging": [[835, "sleep-while-atomic-debugging"]], "Process vs.Atomic Context": [[836, "process-vs-atomic-context"]], "Rasperry Pi: Kernel Build": [[837, "rasperry-pi-kernel-build"]], "Cross Toolchain on Host": [[837, "cross-toolchain-on-host"]], "Architecture Name - What\u2019s That?": [[837, "architecture-name-what-s-that"]], "Building a Toolchain with Gentoo\u2019s crossdev": [[837, "building-a-toolchain-with-gentoo-s-crossdev"]], "Other Toolchains": [[837, "other-toolchains"]], "Kernel Source": [[837, "kernel-source"]], "Kernel Compilation": [[837, "kernel-compilation"]], "Parameters for the Build": [[837, "parameters-for-the-build"]], "Preparing the Kernel .config File": [[837, "preparing-the-kernel-config-file"]], "Building the Kernel Artifacts": [[837, "building-the-kernel-artifacts"]], "Packaging": [[837, "packaging"], [1091, "packaging"]], "Bootloader Artifacts": [[837, "bootloader-artifacts"]], "Module Tree": [[837, "module-tree"]], "Deployment": [[837, "deployment"]], "Variation": [[837, "variation"]], "Raspberry Pi: Building the Kernel": [[838, "raspberry-pi-building-the-kernel"]], "Todo jjj": [[838, "todo-jjj"]], "Sample Code Maintenance": [[839, "sample-code-maintenance"]], "Coding: Fix Sleep While Atomic (Slideshow)": [[840, "coding-fix-sleep-while-atomic-slideshow"]], "Simple Spinlock Usage: spin_lock()": [[840, "simple-spinlock-usage-spin-lock"]], "Discuss Call Chain, IRQ State": [[840, "discuss-call-chain-irq-state"]], "Enter spin_lock_irqsave(), spin_unlock_irqrestore()": [[840, "enter-spin-lock-irqsave-spin-unlock-irqrestore"]], "Ah, kmalloc()": [[840, "ah-kmalloc"]], "Coding: Fix Sleep While Atomic": [[841, "coding-fix-sleep-while-atomic"]], "Spinlock (vs. Mutex) (Slideshow)": [[842, "spinlock-vs-mutex-slideshow"]], "Mutual Exclusion: Spinlock": [[842, "mutual-exclusion-spinlock"]], "Spinlock Initialization": [[842, "spinlock-initialization"]], "Simple Lock/Unlock": [[842, "simple-lock-unlock"]], "Simple is not Bulletproof: Interrupt State": [[842, "simple-is-not-bulletproof-interrupt-state"]], "Mutual Exclusion: Conclusion": [[842, "mutual-exclusion-conclusion"]], "Spinlock (vs. Mutex)": [[843, "spinlock-vs-mutex"]], "dup(), fork(), and Reference Counting (Stub)": [[844, "dup-fork-and-reference-counting-stub"]], "Coding: Timed Event (Slideshow)": [[845, "coding-timed-event-slideshow"]], "Per-Event Timestamp": [[845, "per-event-timestamp"]], "Discussion: Deferred Events": [[845, "discussion-deferred-events"]], "Add Timer": [[845, "add-timer"]], "Gotcha: Cleanup Running Timer": [[845, "gotcha-cleanup-running-timer"]], "More Gotchas": [[845, "more-gotchas"]], "Coding: Timed Event": [[846, "coding-timed-event"]], "Timer Management (Slideshow)": [[847, "timer-management-slideshow"]], "Original Timer API": [[847, "original-timer-api"]], "jiffies": [[847, "jiffies"]], "\u201cTimer Wheel\u201d Methods": [[847, "timer-wheel-methods"]], "Better Documentation": [[847, "better-documentation"]], "Timer Management": [[848, "timer-management"]], "To Do List": [[849, "to-do-list"]], "Accessing Userspace Memory (Screenplay)": [[850, "accessing-userspace-memory-screenplay"]], "New ioctl: GET_ONE_EVENT": [[850, "new-ioctl-get-one-event"]], "Getting One Event": [[850, "getting-one-event"]], "copy_to_user()": [[850, "copy-to-user"]], "Userspace Test Program": [[850, "userspace-test-program"]], "Accessing Userspace Memory (Slideshow)": [[851, "accessing-userspace-memory-slideshow"]], "Address Spaces": [[851, "address-spaces"]], "Copying To and From Userspace": [[851, "copying-to-and-from-userspace"]], "Accessing Userspace Memory": [[852, "accessing-userspace-memory"]], "Waiting for Something (Screenplay)": [[853, "waiting-for-something-screenplay"]], "read() Not Implemented": [[853, "read-not-implemented"]], "Implementing read() Naively": [[853, "implementing-read-naively"]], "Discussion: What If Nothing\u2019s There?": [[853, "discussion-what-if-nothing-s-there"]], "Implementing O_NONBLOCK": [[853, "implementing-o-nonblock"]], "Waiting for Something (Slideshow)": [[854, "waiting-for-something-slideshow"]], "Waiting for Something": [[854, "waiting-for-something"], [855, "waiting-for-something"]], "Wait Queues: Initializing": [[854, "wait-queues-initializing"]], "Wait Queue: Waiting": [[854, "wait-queue-waiting"]], "Wait Queue: Waking": [[854, "wait-queue-waking"]], "Workqueue (Screenplay)": [[856, "workqueue-screenplay"]], "Add Workqueue": [[856, "add-workqueue"]], "Submit/Defer Work From Atomic Context": [[856, "submit-defer-work-from-atomic-context"]], "Cleanup (Why We Did This, After All)": [[856, "cleanup-why-we-did-this-after-all"]], "Finish": [[856, "finish"]], "Workqueue (Slideshow)": [[857, "workqueue-slideshow"]], "Workqueue: Motivation": [[857, "workqueue-motivation"]], "Creating/Destroying a Workqueue": [[857, "creating-destroying-a-workqueue"]], "What is Work?": [[857, "what-is-work"]], "Submitting Work": [[857, "submitting-work"]], "Workqueue": [[858, "workqueue"]], "Exercises: Archiving And Compression": [[859, "exercises-archiving-and-compression"]], "gzip": [[861, "gzip"]], "Compression Tools: Comparison": [[862, "compression-tools-comparison"]], "tar": [[863, "tar"]], "Creating And Viewing Archives": [[863, "creating-and-viewing-archives"]], "(De)Compression": [[863, "de-compression"]], "Etiquette": [[863, "etiquette"]], "Option Summary": [[863, "option-summary"]], "Being Creative With The Pipe": [[863, "being-creative-with-the-pipe"]], "Exam (ECE/SS2022/G1): Do A Lot With Files And Directories": [[864, "exam-ece-ss2022-g1-do-a-lot-with-files-and-directories"]], "Precondition: Logged-In To Remote/Exam Computer": [[864, "precondition-logged-in-to-remote-exam-computer"], [865, "precondition-logged-in-to-remote-exam-computer"]], "Create Exam Skeleton (5 Points)": [[864, "create-exam-skeleton-5-points"], [865, "create-exam-skeleton-5-points"]], "Create Credentials Files (10 Points)": [[864, "create-credentials-files-10-points"]], "Public Place (10 Points)": [[864, "public-place-10-points"], [865, "public-place-10-points"]], "Private Place (10 Points)": [[864, "private-place-10-points"], [865, "private-place-10-points"]], "Shared File in Public Place (10 Points)": [[864, "shared-file-in-public-place-10-points"], [865, "shared-file-in-public-place-10-points"]], "Make A Backup Of ~/exam-01 (15 Points)": [[864, "make-a-backup-of-exam-01-15-points"], [865, "make-a-backup-of-exam-01-15-points"]], "Exam (ECE/SS2022/G2): Do A Lot With Files And Directories": [[865, "exam-ece-ss2022-g2-do-a-lot-with-files-and-directories"]], "Create Business Cards (10 Points)": [[865, "create-business-cards-10-points"]], "Exercises/Exams: Linux Basics": [[866, "exercises-exams-linux-basics"]], "Linux Basics": [[867, "linux-basics"]], "Everything Is A File (Live Demo)": [[868, "everything-is-a-file-live-demo"]], "Simple is beautiful": [[868, "simple-is-beautiful"]], "Ok: a File is a File": [[868, "ok-a-file-is-a-file"]], "Is a Serial Interface (UART) a File?": [[868, "is-a-serial-interface-uart-a-file"]], "Pseudo Terminals": [[868, "pseudo-terminals"]], "Disks and Partitions": [[868, "disks-and-partitions"]], "/proc and /sys": [[868, "proc-and-sys"]], "Pseudo Devices": [[868, "pseudo-devices"]], "Environment (Variables)": [[869, "environment-variables"]], "Shell: Environment Variables, And Process Creation": [[869, "shell-environment-variables-and-process-creation"]], "Popular Environment Variables: HOME, SHELL, USER": [[869, "popular-environment-variables-home-shell-user"]], "Popular Environment Variables: PATH": [[869, "popular-environment-variables-path"]], "FH/Moodle Quiz: Linux Basics": [[870, "fh-moodle-quiz-linux-basics"]], "User Space, Kernel Space": [[870, "user-space-kernel-space"]], "Processes, Scheduling, and Virtual Memory": [[870, "processes-scheduling-and-virtual-memory"]], "Login? What Is That?": [[872, "login-what-is-that"]], "Authentication: Prompting The User For Login Data": [[872, "authentication-prompting-the-user-for-login-data"]], "Authentication: Verification Of Login Data": [[872, "authentication-verification-of-login-data"]], "And After Successful Authentication?": [[872, "and-after-successful-authentication"]], "Impersonation": [[872, "impersonation"]], "Logged In, Finally": [[872, "logged-in-finally"]], "User Space, Kernel Space?": [[873, "user-space-kernel-space"]], "User Space: Abstractions": [[873, "user-space-abstractions"]], "Kernel: Where The Heavy Stuff Is": [[873, "kernel-where-the-heavy-stuff-is"]], "Booting a Computer": [[873, "booting-a-computer"]], "Processes, Scheduling, Address Spaces": [[874, "processes-scheduling-address-spaces"]], "Problem: Owning the CPU?": [[874, "problem-owning-the-cpu"]], "Solution: Scheduling (Time Slices)": [[874, "solution-scheduling-time-slices"]], "Problem: Owning all Memory?": [[874, "problem-owning-all-memory"]], "Solution: Virtual Memory": [[874, "solution-virtual-memory"]], "Process Attributes: User ID (UID)": [[874, "process-attributes-user-id-uid"]], "Process Attributes: Groups": [[874, "process-attributes-groups"]], "Processes: More Attributes": [[874, "processes-more-attributes"]], "Process Hierarchy (Parent, Child Process)": [[875, "process-hierarchy-parent-child-process"]], "More Process Rules": [[875, "more-process-rules"]], "Typical Process Tree": [[875, "typical-process-tree"]], "Services, init": [[875, "services-init"]], "Windows Subsystem for Linux (WSL)": [[876, "windows-subsystem-for-linux-wsl"]], "Disclaimer!": [[876, null]], "More Links": [[876, "more-links"]], "My $0.02": [[876, "my-0-02"]], "WSL, Finally": [[876, "wsl-finally"]], "Exercises: IO-Redirection, Pipes": [[877, "exercises-io-redirection-pipes"]], "I/O Redirection": [[879, "i-o-redirection"]], "Standard I/O Streams": [[879, "standard-i-o-streams"]], "I/O Redirection Operators": [[879, "i-o-redirection-operators"]], "Example: Standard Output Redirection": [[879, "example-standard-output-redirection"]], "Example: Standard Input Redirection": [[879, "example-standard-input-redirection"]], "Example: Standard Error Redirection": [[879, "example-standard-error-redirection"]], "Example: Everything Redirection": [[879, "example-everything-redirection"]], "I/O Redirection: Swap stdout And stderr": [[880, "i-o-redirection-swap-stdout-and-stderr"]], "Basic Pipe Usage": [[880, "basic-pipe-usage"]], "Basic Pipe Usage: What The Shell Does": [[880, "basic-pipe-usage-what-the-shell-does"]], "And How Do I Count Lines On stderr?": [[880, "and-how-do-i-count-lines-on-stderr"]], "More Tricks": [[880, "more-tricks"]], "Pipes": [[881, "pipes"]], "Why Pipes?": [[881, "why-pipes"]], "Pipe Facts": [[881, "pipe-facts"]], "Pipe Examples": [[881, "pipe-examples"]], "More Pipe Examples": [[881, "more-pipe-examples"]], "Named Pipes": [[881, "named-pipes"]], "Permissions: Mode, User and Group Ownership": [[882, "permissions-mode-user-and-group-ownership"]], "Owner and Permissions": [[882, "owner-and-permissions"]], "A Simple Example": [[882, "a-simple-example"]], "Teacher\u2019s note: create that constellation (as root)": [[882, null]], "Permission Check: User": [[882, "permission-check-user"]], "Permission Check: Group": [[882, "permission-check-group"]], "Permission Check: Others": [[882, "permission-check-others"]], "Programs: Execute Permissions": [[882, "programs-execute-permissions"]], "Directory Permissions": [[882, "directory-permissions"]], "Permission Bits, octal": [[882, "permission-bits-octal"]], "Shell Commands: Tuning Permissions": [[882, "shell-commands-tuning-permissions"]], "Shell Commands: Changing User/Group Ownership": [[882, "shell-commands-changing-user-group-ownership"]], "Exercise: Determine Your User Credentials": [[883, "exercise-determine-your-user-credentials"]], "FH/Moodle Quiz: Permissions": [[884, "fh-moodle-quiz-permissions"], [885, "fh-moodle-quiz-permissions"]], "Exercises: File System Permissions": [[886, "exercises-file-system-permissions"]], "Exercise: Create Private Directory": [[887, "exercise-create-private-directory"]], "Question: Private Directory": [[888, "question-private-directory"]], "Exercise: Create Public Directory": [[889, "exercise-create-public-directory"]], "Question: Public Directory": [[890, "question-public-directory"]], "Exercise: Create Group-Shared File": [[891, "exercise-create-group-shared-file"]], "SetUID Programs: passwd, sudo, \u2026": [[893, "setuid-programs-passwd-sudo"]], "Problem: Change My Password": [[893, "problem-change-my-password"]], "Solution: Set-UID Bit": [[893, "solution-set-uid-bit"]], "Set-UID: How Does It Work?": [[893, "set-uid-how-does-it-work"]], "Command: chmod": [[893, "command-chmod"]], "Set-UID Is Not A Toy!": [[893, "set-uid-is-not-a-toy"]], "SetUID: Live Demo": [[894, "setuid-live-demo"]], "Real and Effective User ID": [[894, "real-and-effective-user-id"]], "Sample Program": [[894, "sample-program"]], "Set-UID jfasch?": [[894, "set-uid-jfasch"]], "Set-UID root? Danger!": [[894, "set-uid-root-danger"]], "Ugly Hack: Sticky Bit": [[895, "ugly-hack-sticky-bit"]], "Sticky Bit": [[895, "sticky-bit"]], "Default Permissions: umask": [[896, "default-permissions-umask"]], "Default Permissions - umask": [[896, "id1"]], "umask: How Does it Work?": [[896, "umask-how-does-it-work"]], "Shape (1)": [[897, "shape-1"]], "Shape (2)": [[897, "shape-2"]], "Options": [[897, "options"], [926, "options"]], "Help and Manual": [[897, "help-and-manual"]], "Man Pages: Navigation": [[897, "man-pages-navigation"]], "Commandline Editing: Moving, Deleting": [[897, "commandline-editing-moving-deleting"]], "Commandline Editing: Entire Words": [[897, "commandline-editing-entire-words"]], "Commandline Editing: Entire Lines": [[897, "commandline-editing-entire-lines"]], "The Tabulator Key: Command Completion": [[897, "the-tabulator-key-command-completion"]], "The Tabulator Key: Filename Completion": [[897, "the-tabulator-key-filename-completion"]], "Shell Configuration File: ~/.bashrc": [[898, "shell-configuration-file-bashrc"]], "What\u2019s Volatile?": [[898, "what-s-volatile"]], "Copying: cp": [[899, "copying-cp"]], "Option Overview": [[899, "option-overview"]], "Creating backup copy of, say, .bashrc in the home directory": [[899, "creating-backup-copy-of-say-bashrc-in-the-home-directory"]], "Similar: copy a file into a different directory, under a different name": [[899, "similar-copy-a-file-into-a-different-directory-under-a-different-name"]], "Similar: copy a file into a different directory, keeping its name": [[899, "similar-copy-a-file-into-a-different-directory-keeping-its-name"]], "Copy multiple files into a directory": [[899, "copy-multiple-files-into-a-directory"]], "Copying a directory, together with its contents \u27f6 recursive copy": [[899, "copying-a-directory-together-with-its-contents-longrightarrow-recursive-copy"]], "Current Working Directory: pwd": [[900, "current-working-directory-pwd"]], "Changing The Current Working Directory: cd": [[900, "changing-the-current-working-directory-cd"]], "Exercise: Copy Directory Tree": [[901, "exercise-copy-directory-tree"]], "Exercise: Copy Files": [[902, "exercise-copy-files"]], "Exercise: Create Files (I/O Redirection)": [[903, "exercise-create-files-i-o-redirection"]], "Exercise: Move Files": [[904, "exercise-move-files"]], "Exercises: Create/Copy/Move/Remove": [[905, "exercises-create-copy-move-remove"]], "Exercise: mkdir": [[906, "exercise-mkdir"]], "Exercise: Funny Stuff": [[907, "exercise-funny-stuff"]], "Exercise: Remove Directory Tree": [[908, "exercise-remove-directory-tree"]], "Exercise: Verify, Repeat": [[909, "exercise-verify-repeat"]], "FH/Moodle Quiz: Shell": [[910, "fh-moodle-quiz-shell"]], "The Shell - Exercises": [[911, "the-shell-exercises"]], "Exercise: File Types in /dev": [[912, "exercise-file-types-in-dev"]], "Exercise: Size of /etc/passwd": [[913, "exercise-size-of-etc-passwd"]], "Exercises: The ls Command": [[914, "exercises-the-ls-command"]], "Exercise: Permissions of Home Directory": [[915, "exercise-permissions-of-home-directory"]], "Creating And Removing Files and Directories": [[916, "creating-and-removing-files-and-directories"]], "Creating a Directory: mkdir": [[916, "creating-a-directory-mkdir"]], "Creating a File: I/O redirection": [[916, "creating-a-file-i-o-redirection"]], "Creating an Empty File: touch": [[916, "creating-an-empty-file-touch"]], "Removing A File: rm": [[916, "removing-a-file-rm"]], "Removing A Directory: rmdir, rm -r": [[916, "removing-a-directory-rmdir-rm-r"]], "Symbolic Links, Hard Links": [[918, "symbolic-links-hard-links"]], "Directory Listings: The ls Command": [[919, "directory-listings-the-ls-command"]], "Many Options": [[919, "many-options"]], "Hidden Files": [[919, "hidden-files"]], "File Types": [[919, "file-types"]], "Moving and Renaming: mv": [[920, "moving-and-renaming-mv"]], "Renaming A File (or Directory)": [[920, "renaming-a-file-or-directory"]], "Moving a File to Somewhere Else": [[920, "moving-a-file-to-somewhere-else"]], "Moving a Directory to Somewhere Else": [[920, "moving-a-directory-to-somewhere-else"]], "Path Separator": [[921, "path-separator"]], "Relative Paths": [[921, "relative-paths"]], "Absolute Paths": [[921, "absolute-paths"]], "Special Paths": [[921, "special-paths"]], "cat": [[922, "cat"], [922, "id1"]], "cut": [[923, "cut"], [923, "id1"]], "Exercises: Inspecting Text Files": [[924, "exercises-inspecting-text-files"]], "find": [[925, "find"]], "Directories durchsuchen mit find": [[925, "directories-durchsuchen-mit-find"]], "find: Optionen": [[925, "find-optionen"]], "find: Beispiele": [[925, "find-beispiele"]], "find: Verkn\u00fcpfungen": [[925, "find-verknupfungen"]], "find: Verkn\u00fcpfungen: Beispiele": [[925, "find-verknupfungen-beispiele"]], "grep": [[926, "grep"]], "Searching With grep": [[926, "searching-with-grep"]], "More About Regular Expressions": [[926, "more-about-regular-expressions"]], "head And tail": [[928, "head-and-tail"]], "head": [[928, "head"]], "tail": [[928, "tail"]], "head And tail In The Pipe": [[928, "head-and-tail-in-the-pipe"]], "less": [[929, "less"]], "Paging Files Using less": [[929, "paging-files-using-less"]], "Help Screen (Enter With h)": [[929, "help-screen-enter-with-h"]], "Yocto": [[932, "yocto"]], "Controlling a Brushless Motor With Raspberry Pi": [[934, "controlling-a-brushless-motor-with-raspberry-pi"]], "Topic": [[934, null]], "Electronic Speed Controller (ESC)": [[934, "electronic-speed-controller-esc"]], "Select Running Mode: \u201cFwd/Rev\u201d": [[934, "select-running-mode-fwd-rev"]], "The \u201cCommand Protocol\u201d, and Calibration": [[934, "the-command-protocol-and-calibration"]], "Driving the Motor": [[934, "driving-the-motor"]], "CAN/Linux Basics": [[935, "can-linux-basics"]], "Why This Talk?": [[935, "why-this-talk"]], "Network Programming: Datagram Exchange": [[935, "network-programming-datagram-exchange"]], "And CAN?": [[935, "and-can"]], "One CAN Network Packet \u2026": [[935, "one-can-network-packet"]], "CAN Interfaces": [[936, "can-interfaces"]], "CAN-Interface: Configuration": [[936, "can-interface-configuration"]], "CAN Utils": [[936, "can-utils"]], "CAN Utils: Usage (1)": [[936, "can-utils-usage-1"]], "CAN Utils: Usage (2)": [[936, "can-utils-usage-2"]], "vcan: Virtual CAN-Bus": [[936, "vcan-virtual-can-bus"]], "Programming": [[937, "programming"]], "CAN Programming": [[937, "can-programming"]], "CAN in C - Socket, Interface Index": [[937, "can-in-c-socket-interface-index"]], "CAN in Python - Socket, Interface Index": [[937, "can-in-python-socket-interface-index"]], "CAN in C - Frames (1)": [[937, "can-in-c-frames-1"]], "CAN in C - Frames (2)": [[937, "can-in-c-frames-2"]], "CAN in Python - Frames": [[937, "can-in-python-frames"]], "Hardware, Kernel": [[938, "hardware-kernel"]], "MCP2515: Schematic": [[938, "mcp2515-schematic"]], "MCP2515: Soldering": [[938, "mcp2515-soldering"]], "MCP2515: SPI": [[938, "mcp2515-spi"]], "MCP2515: Raspberry": [[938, "mcp2515-raspberry"]], "CAN Bus With Linux And Python": [[939, "can-bus-with-linux-and-python"]], "Linux Hardware Interfaces": [[940, "linux-hardware-interfaces"]], "Linux and I2C (using LM73 Temperature Sensor as Slave)": [[941, "linux-and-i2c-using-lm73-temperature-sensor-as-slave"]], "Configuring I2C Master": [[941, "configuring-i2c-master"]], "Enable I2C, Load BCM2835 Platform Driver": [[941, "enable-i2c-load-bcm2835-platform-driver"]], "Raspberry Pi GPIO header pinout": [[941, null]], "Enable Userspace I2C": [[941, "enable-userspace-i2c"]], "Slave Device: LM73": [[941, "slave-device-lm73"]], "Datasheet etc.": [[941, null]], "Optional: Address Selection": [[941, "optional-address-selection"]], "Connecting LM73 to Raspberry Pi": [[941, "connecting-lm73-to-raspberry-pi"]], "i2c-tools/i2cdetect: Diagnostics, Detecting Devices": [[941, "i2c-tools-i2cdetect-diagnostics-detecting-devices"]], "Using the Device: Talking I2C from Userspace": [[941, "using-the-device-talking-i2c-from-userspace"]], "Using the Device: hwmon - Hardware Monitoring": [[941, "using-the-device-hwmon-hardware-monitoring"]], "Building the Kernel, Enabling LM73": [[941, "building-the-kernel-enabling-lm73"]], "Loading the Driver": [[941, "loading-the-driver"]], "Hardware Monitoring (hwmon) Devices": [[941, "hardware-monitoring-hwmon-devices"]], "PWM Userspace Interface (using PCA9685)": [[942, "pwm-userspace-interface-using-pca9685"]], "Pulse Width Modulation (PWM)": [[942, "pulse-width-modulation-pwm"]], "Why An External PWM Controller?": [[942, "why-an-external-pwm-controller"]], "Wiring, Setup, and Testing": [[942, "wiring-setup-and-testing"]], "Talk to Chip Using the sysfs Interface": [[942, "talk-to-chip-using-the-sysfs-interface"]], "Linux and OneWire (using DS18B20 Temperature Sensor as Slave)": [[943, "linux-and-onewire-using-ds18b20-temperature-sensor-as-slave"]], "Master Device, Alterative 1: w1-gpio - OneWire Master in Software": [[943, "master-device-alterative-1-w1-gpio-onewire-master-in-software"]], "Wiring: Attach OneWire Device to GPIO Pin": [[943, "wiring-attach-onewire-device-to-gpio-pin"]], "Master Device, Alterative 2: DS2482 - I2C OneWire Master in Hardware": [[943, "master-device-alterative-2-ds2482-i2c-onewire-master-in-hardware"]], "DS2482-800: 8-Channel 1-Wire Master": [[943, null]], "Wiring: Attach DS2482-800 via I2C": [[943, "wiring-attach-ds2482-800-via-i2c"]], "Configure Software": [[943, "configure-software"]], "Enable I2C, and Check": [[943, "enable-i2c-and-check"]], "Verify That Our Device Is There": [[943, "verify-that-our-device-is-there"]], "Announce (\u201cHotplug\u201d) DS2482 to Linux": [[943, "announce-hotplug-ds2482-to-linux"]], "Wiring: Attach OneWire Device to DS2482-800": [[943, "wiring-attach-onewire-device-to-ds2482-800"]], "Over-Engineering? Beauty?": [[943, "over-engineering-beauty"]], "Hardware Bringup": [[943, "hardware-bringup"]], "Device Usage": [[943, "device-usage"]], "Slave Device: DS18B20 Temperature Sensor": [[943, "slave-device-ds18b20-temperature-sensor"]], "Using the Device": [[943, "using-the-device"]], "As a Generic OneWire Device": [[943, "as-a-generic-onewire-device"]], "As a Hardware Monitoring (hwmon) Device": [[943, "as-a-hardware-monitoring-hwmon-device"]], "lm-sensors": [[943, "lm-sensors"]], "OneWire Caveats": [[943, "onewire-caveats"]], "Bus Topology": [[943, "bus-topology"]], "Error Symptoms": [[943, "error-symptoms"]], "SSH: Basics": [[944, "ssh-basics"]], "Login": [[944, "login"]], "Exit Status, stdin, stdout: Scripting": [[944, "exit-status-stdin-stdout-scripting"]], "Exercise: Copy a File To Remote Machine, And Verify": [[945, "exercise-copy-a-file-to-remote-machine-and-verify"]], "Exercise: Copy a Tree To Remote Machine (And Adjust Permissions)": [[946, "exercise-copy-a-tree-to-remote-machine-and-adjust-permissions"]], "Exercises: SSH": [[947, "exercises-ssh"]], "Exercise: Create SSH Key Pair": [[948, "exercise-create-ssh-key-pair"]], "SSH: Public Key Authentication": [[950, "ssh-public-key-authentication"]], "Local Setup, Key Generation": [[950, "local-setup-key-generation"]], "Key Pair?": [[950, "key-pair"]], "Remote Setup (Wearing The Remote Admin\u2019s Hat)": [[950, "remote-setup-wearing-the-remote-admin-s-hat"]], "SSH: Links": [[951, "ssh-links"]], "SSH: Port Forwarding": [[952, "ssh-port-forwarding"]], "Port Forwarding - The Problem (1)": [[952, "port-forwarding-the-problem-1"]], "Port Forwarding - The Problem (2)": [[952, "port-forwarding-the-problem-2"]], "Port Forwarding - The Solution (1)": [[952, "port-forwarding-the-solution-1"]], "Port Forwarding - The Solution (2)": [[952, "port-forwarding-the-solution-2"]], "Port Forwarding - The Commandline": [[952, "port-forwarding-the-commandline"]], "SSH: Secure Copy (scp)": [[953, "ssh-secure-copy-scp"]], "What Is That?": [[953, "what-is-that"]], "Copy Single File From Local To Remote": [[953, "copy-single-file-from-local-to-remote"]], "Copy Single File from Remote To Local": [[953, "copy-single-file-from-remote-to-local"]], "Copy An Entire Directory Tree (-r)": [[953, "copy-an-entire-directory-tree-r"]], "Copy Multiple File From Here To There": [[953, "copy-multiple-file-from-here-to-there"]], "Copy From One Remote To A Different Remote": [[953, "copy-from-one-remote-to-a-different-remote"]], "More Options": [[953, "more-options"]], "SSH File System (sshfs)": [[954, "ssh-file-system-sshfs"]], "What Is It?": [[954, "what-is-it"]], "Why Is It?": [[954, "why-is-it"]], "Example Situation: The Raspi": [[954, "example-situation-the-raspi"]], "Mounting Remote  $HOME/logdata": [[954, "mounting-remote-home-logdata"]], "Unmounting: fusermount -u, or Simply umount": [[954, "unmounting-fusermount-u-or-simply-umount"]], "User ID Mismatch: Problem": [[954, "user-id-mismatch-problem"]], "User ID Mismatch: Solution (User Mapping)": [[954, "user-id-mismatch-solution-user-mapping"]], "The errno Variable": [[955, "the-errno-variable"]], "errno Is A Global Variable": [[955, "errno-is-a-global-variable"]], "Helper Functions": [[955, "helper-functions"]], "Linux Systems Programming: Basics": [[956, "linux-systems-programming-basics"]], "System Calls vs. Library Functions": [[957, "system-calls-vs-library-functions"]], "System Calls": [[957, "system-calls"]], "System Calls And The C-Library": [[957, "system-calls-and-the-c-library"]], "Library Function Or System Call?": [[957, "library-function-or-system-call"]], "Manual Pages": [[957, "manual-pages"]], "Blocking I/O: What is That? (\u201cEverything is a file\u201d)": [[958, "blocking-i-o-what-is-that-everything-is-a-file"]], "Examples/Live Demos": [[958, null]], "Solution: This Is What An Operating System Is There For": [[958, "solution-this-is-what-an-operating-system-is-there-for"]], "Blocking I/O (On A File): What is That?": [[959, "blocking-i-o-on-a-file-what-is-that"]], "See Also": [[959, null], [960, null], [961, null], [1143, "see-also"]], "Abstractions": [[959, "abstractions"], [960, "abstractions"], [961, "abstractions"]], "Simplicity": [[959, "simplicity"], [960, "simplicity"], [961, "simplicity"]], "Build, Run, Look": [[959, "build-run-look"], [960, "build-run-look"], [961, "build-run-look"]], "Watch: Run Under strace Supervision": [[959, "watch-run-under-strace-supervision"]], "Blocking I/O: On A Network Socket": [[960, "blocking-i-o-on-a-network-socket"]], "Opening a Network Connection": [[960, "opening-a-network-connection"]], "Blocking I/O: On A Timer? WTF?": [[961, "blocking-i-o-on-a-timer-wtf"]], "Setup A Timer": [[961, "setup-a-timer"]], "Blocking I/O: What Is That?": [[962, "blocking-i-o-what-is-that"]], "File I/O: Basics": [[963, "file-i-o-basics"]], "File Descriptors": [[963, "file-descriptors"]], "Standard Filedescriptors": [[963, "standard-filedescriptors"]], "File I/O: System Calls": [[963, "file-i-o-system-calls"]], "open()": [[963, "open"]], "open() Flags": [[963, "open-flags"]], "read()": [[963, "read"]], "write()": [[963, "write"]], "File Offset: lseek()": [[963, "file-offset-lseek"]], "The Rest: ioctl()": [[963, "the-rest-ioctl"]], "Exercise: Copy A File": [[964, "exercise-copy-a-file"]], "Sunny Case: Source File Exists, Destination Does Not Exist": [[964, "sunny-case-source-file-exists-destination-does-not-exist"]], "Error: Wrong Number Of Arguments Specified": [[964, "error-wrong-number-of-arguments-specified"]], "Error: Source File Does Not Exist": [[964, "error-source-file-does-not-exist"]], "Error: Destination File Exists": [[964, "error-destination-file-exists"]], "Error: Destination Directory Not Writable": [[964, "error-destination-directory-not-writable"]], "Exercise: Create File With Hole": [[965, "exercise-create-file-with-hole"]], "Duplicating (Whats Going On?)": [[966, "duplicating-whats-going-on"]], "File Descriptors, Open File, I-Node": [[966, "file-descriptors-open-file-i-node"]], "File Descriptors and Inheritance": [[966, "file-descriptors-and-inheritance"]], "Duplicating File Descriptors": [[966, "duplicating-file-descriptors"]], "Example: Shell Stdout-Redirection (1)": [[966, "example-shell-stdout-redirection-1"]], "Example: Shell Stdout-Redirection (2)": [[966, "example-shell-stdout-redirection-2"]], "Example: Shell Stdout-Redirection (3)": [[966, "example-shell-stdout-redirection-3"]], "O_CREAT: Creating A File": [[967, "o-creat-creating-a-file"]], "Creating A File If It Does Not Exist (Bogus Version)": [[967, "creating-a-file-if-it-does-not-exist-bogus-version"]], "Bogus O_CREAT Usage: Mode Parameter Missing": [[967, "bogus-o-creat-usage-mode-parameter-missing"]], "Creating A File If It Does Not Exist": [[967, "creating-a-file-if-it-does-not-exist"]], "O_EXCL: Creating A File, But Failing If It Already Exists": [[968, "o-excl-creating-a-file-but-failing-if-it-already-exists"]], "Is \u201cCreate or Open\u201d Always Wanted?": [[968, "is-create-or-open-always-wanted"]], "Sunny Case: File Does Not Exist": [[968, "sunny-case-file-does-not-exist"]], "Error: File Exists": [[968, "error-file-exists"]], "O_RDONLY: Reading a File": [[969, "o-rdonly-reading-a-file"]], "Me and /etc/passwd": [[969, "me-and-etc-passwd"]], "Code: Reading A File": [[969, "code-reading-a-file"]], "Sunny Case: Reading /etc/passwd": [[969, "sunny-case-reading-etc-passwd"]], "Error: File Not Readable": [[969, "error-file-not-readable"]], "Error: File Not Even There": [[969, "error-file-not-even-there"]], "O_WRONLY: Writing A File (Which Must Exist)": [[970, "o-wronly-writing-a-file-which-must-exist"]], "Writing (And Not Creating) A File": [[970, "writing-and-not-creating-a-file"]], "Error: File Not Writeable": [[970, "error-file-not-writeable"]], "Error: File Not Even There \u27f6 Not Implicitly Created": [[970, "error-file-not-even-there-longrightarrow-not-implicitly-created"]], "Sunny Case: File Exists, And Is Writeable": [[970, "sunny-case-file-exists-and-is-writeable"]], "Exercise: Read Temperature From Onewire Sensor": [[971, "exercise-read-temperature-from-onewire-sensor"]], "Onewire Basics": [[971, "onewire-basics"]], "Program": [[971, "program"], [1124, "program"]], "Test On The Target Machine": [[971, "test-on-the-target-machine"]], "I/O without Offset Manipulation": [[973, "i-o-without-offset-manipulation"]], "Scatter/Gather I/O": [[973, "scatter-gather-i-o"]], "Scatter/Gather I/O, without Offset Manipulation": [[973, "scatter-gather-i-o-without-offset-manipulation"]], "Truncating Files": [[973, "truncating-files"]], "File Descriptors - Allocation": [[973, "file-descriptors-allocation"]], "Linux Systems Programming": [[974, "linux-systems-programming"], [1204, "linux-systems-programming"]], "Get Value Of GPIO": [[975, "get-value-of-gpio"]], "Retrieving Value Manually, On The Commandline": [[975, "retrieving-value-manually-on-the-commandline"]], "Shell Script": [[975, "shell-script"]], "C Program": [[975, "c-program"]], "Introductory Live Hacking, Hardware-Wise (sysfs GPIO)": [[976, "introductory-live-hacking-hardware-wise-sysfs-gpio"]], "Intro: sysfs GPIO": [[977, "intro-sysfs-gpio"]], "sysfs?": [[977, "sysfs"]], "General Purpose IO (GPIO)": [[977, "general-purpose-io-gpio"]], "Requesting A GPIO Pin": [[977, "requesting-a-gpio-pin"]], "GPIO Attributes As Files": [[977, "gpio-attributes-as-files"]], "Interrupts In Userspace": [[978, "interrupts-in-userspace"]], "Manual Configuration": [[978, "manual-configuration"]], "C Program: Configuration, Event Loop": [[978, "c-program-configuration-event-loop"]], "Why Threads?": [[979, "why-threads"]], "Typical Uses": [[979, "typical-uses"]], "Legal (1)": [[979, "legal-1"]], "Legal (2)": [[979, "legal-2"]], "POSIX Thread API": [[979, "posix-thread-api"]], "Thread Life Cycle": [[980, "thread-life-cycle"], [980, "id1"]], "Thread Creation": [[980, "thread-creation"]], "Thread Termination (1)": [[980, "thread-termination-1"]], "Thread Termination (2)": [[980, "thread-termination-2"]], "Exit Status, pthread_join()": [[980, "exit-status-pthread-join"]], "Detached Threads": [[980, "detached-threads"]], "Thread ID": [[980, "thread-id"]], "Scheduled Entities (1)": [[980, "scheduled-entities-1"]], "Scheduled Entities (2)": [[980, "scheduled-entities-2"]], "Thread Creation, Race Condition": [[981, "thread-creation-race-condition"]], "Synchronization": [[982, "synchronization"]], "Race Conditions (1)": [[982, "race-conditions-1"]], "Race Conditions (2)": [[982, "race-conditions-2"]], "Mutex (1)": [[982, "mutex-1"]], "Mutex (2)": [[982, "mutex-2"]], "Mutex (3)": [[982, "mutex-3"]], "Mutex Types": [[982, "mutex-types"]], "Mutex: Solve Load/Modify/Store Conflict": [[983, "mutex-solve-load-modify-store-conflict"]], "Communication: Condition Variable": [[984, "communication-condition-variable"]], "Condition Variable (1)": [[984, "condition-variable-1"]], "Condition Variable (2)": [[984, "condition-variable-2"]], "Condition Variable: wait()": [[984, "condition-variable-wait"]], "Condition Variable: signal()": [[984, "condition-variable-signal"]], "Example: WIN32 Auto Reset Event (1)": [[984, "example-win32-auto-reset-event-1"]], "Example: WIN32 Auto Reset Event (2)": [[984, "example-win32-auto-reset-event-2"]], "Condition Variable: Checking the Predicate": [[984, "condition-variable-checking-the-predicate"]], "Condition Variable: Initialization": [[984, "condition-variable-initialization"]], "Condition Variable: Miscellaneous": [[984, "condition-variable-miscellaneous"]], "Condition Variable: Message Queue": [[985, "condition-variable-message-queue"]], "One-Time Initialization (1)": [[986, "one-time-initialization-1"]], "One-Time Initialization (2)": [[986, "one-time-initialization-2"]], "One-Time Initialization (3)": [[986, "one-time-initialization-3"]], "Thread Specific Data, Thread Local Storage": [[986, "thread-specific-data-thread-local-storage"]], "Last Warning (1)": [[987, "last-warning-1"]], "Last Warning (2)": [[987, "last-warning-2"]], "Last Warning (3)": [[987, "last-warning-3"]], "Trylock/islocked": [[989, "trylock-islocked"]], "Process: Arguments, Exit Status": [[990, "process-arguments-exit-status"]], "The Shell: A Program Like Any Program": [[990, "the-shell-a-program-like-any-program"]], "The Shell: A Programming Language": [[990, "the-shell-a-programming-language"]], "Exit Status": [[990, "exit-status"]], "Exit Status: 0 is \u201cOK\u201d": [[990, "exit-status-0-is-ok"]], "Exit Status: != 0 is \u201cNot OK\u201d": [[990, "exit-status-0-is-not-ok"]], "Argument Vector (int argc, char** argv)": [[990, "argument-vector-int-argc-char-argv"]], "Processes": [[991, "processes"]], "The Process Tree (And Environment, And procfs)": [[992, "the-process-tree-and-environment-and-procfs"]], "Process ID (PID) And Parent Process ID (PPID)": [[992, "process-id-pid-and-parent-process-id-ppid"]], "System Calls: getpid(), getppid()": [[992, "system-calls-getpid-getppid"]], "Environment Variables": [[992, "environment-variables"]], "Scheduling (and Multitasking)": [[993, "scheduling-and-multitasking"]], "Fairness Criteria": [[993, "fairness-criteria"]], "CPU bound vs. I/O bound": [[993, "cpu-bound-vs-i-o-bound"]], "Demo: I/O vs CPU bound": [[993, "demo-i-o-vs-cpu-bound"]], "Scheduling Decision, Runnability": [[993, "scheduling-decision-runnability"]], "Tasks? Processes? Threads?": [[995, "tasks-processes-threads"]], "A Typical Bare Metal Application": [[995, "a-typical-bare-metal-application"]], "Hm. Need Another Timer Interrupt!": [[995, "hm-need-another-timer-interrupt"]], "Away From Interrupts: Use An Operating System": [[995, "away-from-interrupts-use-an-operating-system"]], "Tasks?": [[995, "id1"]], "Threads Are Great: More Functionality": [[995, "threads-are-great-more-functionality"]], "Are Threads Great?": [[995, "are-threads-great"]], "Stability Considerations": [[995, "stability-considerations"]], "Processes, Address Spaces": [[995, "processes-address-spaces"]], "Stabilizing": [[995, "stabilizing"]], "Scheduling: Exam Questions": [[996, "scheduling-exam-questions"]], "Wakeup Latency, and Fair Scheduling": [[997, "wakeup-latency-and-fair-scheduling"]], "Nice Value: Inexact Tuning": [[997, "nice-value-inexact-tuning"]], "Enter Realtime: Definition": [[997, "enter-realtime-definition"]], "Realtime on Linux": [[997, "realtime-on-linux"]], "Demo: Measuring Wakeup Latency": [[997, "demo-measuring-wakeup-latency"]], "Immediately?": [[997, "immediately"]], "Immediately! \u27f6 PREEMPT_RT": [[997, "immediately-longrightarrow-preempt-rt"]], "Realtime API": [[998, "realtime-api"]], "Scheduling Policies": [[998, "scheduling-policies"]], "Scheduling Priorities": [[998, "scheduling-priorities"]], "What\u2019s Runnning On A System?": [[998, "what-s-runnning-on-a-system"]], "Scheduling: System Calls": [[998, "scheduling-system-calls"]], "Scheduling: Threads (1)": [[998, "scheduling-threads-1"]], "Scheduling: Threads (2)": [[998, "scheduling-threads-2"]], "Priority Inversion": [[998, "priority-inversion"]], "Priority Inversion: Mutex Protocols (1)": [[998, "priority-inversion-mutex-protocols-1"]], "Wakeup Latency, CPU Frequency (Gotcha)": [[999, "wakeup-latency-cpu-frequency-gotcha"]], "Measuring Wakeup Latency": [[999, "measuring-wakeup-latency"]], "Many Runnable Processes (Gotcha: CPU Frequency Scaling)": [[999, "many-runnable-processes-gotcha-cpu-frequency-scaling"]], "CPU Frequency Scaling Out Of The Way": [[999, "cpu-frequency-scaling-out-of-the-way"]], "Mysteries Remaining": [[999, "mysteries-remaining"]], "Code: Sysprog: Event Driven Programming": [[1000, "code-sysprog-event-driven-programming"]], "Screenplay: Sysprog: POSIX IPC": [[1001, "screenplay-sysprog-posix-ipc"], [1004, "screenplay-sysprog-posix-ipc"]], "select on Device Files": [[1001, "select-on-device-files"]], "Sysprog: Events": [[1002, "sysprog-events"]], "Code: Sysprog: POSIX IPC": [[1003, "code-sysprog-posix-ipc"]], "Virtual Memory, mmap()": [[1004, "virtual-memory-mmap"]], "POSIX Shared Memory": [[1004, "posix-shared-memory"]], "Create Shared Memory Segment": [[1004, "create-shared-memory-segment"]], "Produce into Shared Memory": [[1004, "produce-into-shared-memory"]], "Consume from Shared Memory": [[1004, "consume-from-shared-memory"]], "POSIX Semaphores": [[1004, "posix-semaphores"]], "Create Semaphore": [[1004, "create-semaphore"]], "Wait": [[1004, "wait"]], "Post": [[1004, "post"]], "POSIX Message Queues": [[1004, "posix-message-queues"]], "Create": [[1004, "create"]], "Produce": [[1004, "produce"]], "Consume": [[1004, "consume"]], "Slides: Sysprog: POSIX IPC": [[1005, "slides-sysprog-posix-ipc"]], "Slideshow": [[1005, null], [1009, null]], "History: Two IPC Variants": [[1005, "history-two-ipc-variants"]], "Object Names": [[1005, "object-names"]], "File Semantics": [[1005, "file-semantics"]], "Message Queues": [[1005, "message-queues"]], "Open/Create: mq_open()": [[1005, "open-create-mq-open"]], "Sending/Receiving: mq_send(), mq_receive()": [[1005, "sending-receiving-mq-send-mq-receive"]], "Closing/Removing: mq_close(), mq_unlink()": [[1005, "closing-removing-mq-close-mq-unlink"]], "Notification: mq_notify()": [[1005, "notification-mq-notify"]], "Message Queues are Files": [[1005, "message-queues-are-files"]], "Message Queue Filesystem: mqueue": [[1005, "message-queue-filesystem-mqueue"]], "Semaphores": [[1005, "semaphores"]], "Open/Create: sem_open()": [[1005, "open-create-sem-open"]], "Communication: sem_wait(), sem_post()": [[1005, "communication-sem-wait-sem-post"]], "Closing/Removing: sem_close(), ``sem_unlink()": [[1005, "closing-removing-sem-close-sem-unlink"]], "Semaphores are Files": [[1005, "semaphores-are-files"]], "Shared Memory (1)": [[1005, "shared-memory-1"]], "Shared Memory (2)": [[1005, "shared-memory-2"]], "Exercise: POSIX Message Queues": [[1005, "exercise-posix-message-queues"]], "Sysprog: POSIX IPC": [[1006, "sysprog-posix-ipc"]], "Code: Sysprog: Signals": [[1007, "code-sysprog-signals"]], "Screenplay: Sysprog: Signals": [[1008, "screenplay-sysprog-signals"]], "Barebones Naive Program": [[1008, "barebones-naive-program"]], "Signal Handler": [[1008, "signal-handler"]], "Alarm": [[1008, "alarm"]], "Alarm (Louder)": [[1008, "alarm-louder"]], "Synchronous Delivery": [[1008, "synchronous-delivery"]], "Innocent Multithreaded Program": [[1008, "innocent-multithreaded-program"]], "Add SIGALRM": [[1008, "add-sigalrm"]], "Slides: Sysprog: Signals": [[1009, "slides-sysprog-signals"]], "Example Signals": [[1009, "example-signals"]], "Terminology": [[1009, "terminology"]], "Default Actions": [[1009, "default-actions"]], "Important Signals": [[1009, "important-signals"]], "Sending, Commandline": [[1009, "sending-commandline"]], "Sending Signals, Programmatically": [[1009, "sending-signals-programmatically"]], "Warning!": [[1009, "warning"]], "Blocking Signals: Signal Mask": [[1009, "blocking-signals-signal-mask"]], "Signal Mask Manipulation": [[1009, "signal-mask-manipulation"]], "Pending Signals": [[1009, "pending-signals"]], "Signal Set: sigset_t": [[1009, "signal-set-sigset-t"]], "Signal Handlers": [[1009, "signal-handlers"]], "Installing a Signal Handler (1)": [[1009, "installing-a-signal-handler-1"]], "Installing a Signal Handler (2)": [[1009, "installing-a-signal-handler-2"]], "Effects of Signal Delivery": [[1009, "effects-of-signal-delivery"]], "Last Warning!": [[1009, "last-warning"]], "WTF Async Signal Safe?": [[1009, "wtf-async-signal-safe"]], "Exercise: Signals": [[1009, "exercise-signals"]], "Sysprog: Signals": [[1010, "sysprog-signals"]], "Toolchain: Basics": [[1011, "toolchain-basics"]], "GCC - GNU Compiler Collection": [[1011, "gcc-gnu-compiler-collection"]], "All-In-One Usage: Single File": [[1011, "all-in-one-usage-single-file"]], "All-In-One Usage: Multiple Files": [[1011, "all-in-one-usage-multiple-files"]], "This Is Not As Simple As It Seems!": [[1011, "this-is-not-as-simple-as-it-seems"]], "What\u2019s In A Program? \u27f6 Symbols (nm)": [[1011, "what-s-in-a-program-longrightarrow-symbols-nm"]], "Overview: Where Do Which Symbols Come From (\u27f6 The Toolchain)": [[1011, "overview-where-do-which-symbols-come-from-longrightarrow-the-toolchain"]], "Recap: Toolchain": [[1011, "recap-toolchain"]], "CMake: Cross Build": [[1012, "cmake-cross-build"]], "Cross Build: Parameters": [[1012, "cross-build-parameters"]], "Core Build Instructions: Target Agnostic": [[1012, "core-build-instructions-target-agnostic"]], "Toolchain Files": [[1012, "toolchain-files"]], "Step 1: Generate Makefile in Build Directory": [[1012, "step-1-generate-makefile-in-build-directory"]], "Step 2: Build Using make": [[1012, "step-2-build-using-make"], [1013, "step-2-build-using-make"]], "CMake: Local Build": [[1013, "cmake-local-build"]], "make: Problems": [[1013, "make-problems"]], "CMake To The Rescue": [[1013, "cmake-to-the-rescue"]], "Out-Of-Source Build": [[1013, "out-of-source-build"]], "Step 1: Generate Makefile In Build Directory": [[1013, "step-1-generate-makefile-in-build-directory"]], "Goodie: Dependency Management": [[1013, "goodie-dependency-management"]], "Native Compilation": [[1014, "native-compilation"]], "Cross?": [[1014, "cross"]], "The sysroot": [[1014, "the-sysroot"]], "Exercise: Build Software Package (Cross, Raspberry)": [[1016, "exercise-build-software-package-cross-raspberry"]], "FH/Moodle Quiz: Toolchain": [[1017, "fh-moodle-quiz-toolchain"]], "Exercises: Toolchain": [[1018, "exercises-toolchain"]], "Exercise: Build Software Package (Native)": [[1019, "exercise-build-software-package-native"]], "Exercise: Install And Check Raspberry Toolchain": [[1020, "exercise-install-and-check-raspberry-toolchain"]], "Toolchain, And Cross Development": [[1021, "toolchain-and-cross-development"]], "Case Study: Raspberry Toolchain": [[1022, "case-study-raspberry-toolchain"]], "Linaro Toolchain For The Pi (Defunct)": [[1023, "linaro-toolchain-for-the-pi-defunct"]], "Download And Unpack Linaro Toolchain": [[1023, "download-and-unpack-linaro-toolchain"]], "Create a sysroot": [[1023, "create-a-sysroot"]], "Patience!": [[1023, null]], "Test Cross Build": [[1023, "test-cross-build"]], "What We Have": [[1023, "what-we-have"]], "Use Cross Compiler To Build Against sysroot": [[1023, "use-cross-compiler-to-build-against-sysroot"]], "Adjust $PATH To Point To Toolchain": [[1023, "adjust-path-to-point-to-toolchain"]], "Building A Toolchain On Fedora For Ubuntu 18.04 (WSL)": [[1025, "building-a-toolchain-on-fedora-for-ubuntu-18-04-wsl"]], "Install And Run Docker": [[1025, "install-and-run-docker"]], "Create Ubuntu Images (18.04 and 20.04)": [[1025, "create-ubuntu-images-18-04-and-20-04"]], "Create Docker Volume": [[1025, "create-docker-volume"]], "Container Work": [[1025, "container-work"]], "Command To Run Container On Volumes": [[1025, "command-to-run-container-on-volumes"]], "Setup container": [[1025, "setup-container"]], "Install autoconf 2.71": [[1025, "install-autoconf-2-71"]], "Install crosstool-ng": [[1025, "install-crosstool-ng"]], "Build Toolchain": [[1025, "build-toolchain"]], "crosstool-ng Toolchain Build": [[1025, "crosstool-ng-toolchain-build"]], "Create Toolchain Archive": [[1025, "create-toolchain-archive"]], "Install Toolchain On Host": [[1025, "install-toolchain-on-host"]], "Cross Toolchain Setup": [[1026, "cross-toolchain-setup"]], "Download And Install Toolchain Archive": [[1026, "download-and-install-toolchain-archive"]], "Establish CMake Toolchain File": [[1026, "establish-cmake-toolchain-file"]], "Test Run": [[1026, "test-run"]], "Zooming In: Separate Compilation, and Linking Statically": [[1027, "zooming-in-separate-compilation-and-linking-statically"]], "Remember: All-In-One Build \u2026": [[1027, "remember-all-in-one-build"]], "Adding Another main(): What About Shared Code?": [[1027, "adding-another-main-what-about-shared-code"]], "Solution: Separate Compilation And Linking Steps": [[1027, "solution-separate-compilation-and-linking-steps"]], "Complication: Modification Tracking": [[1027, "complication-modification-tracking"]], "Enter Makefiles": [[1027, "enter-makefiles"]], "Shared Libraries (Shared Objects)": [[1028, "shared-libraries-shared-objects"]], "Problems With Static Libraries": [[1028, "problems-with-static-libraries"]], "And Dynamic Libraries?": [[1028, "and-dynamic-libraries"]], "Relocations": [[1028, "relocations"]], "Building A Shared Library: Position Independent Code (PIC)": [[1028, "building-a-shared-library-position-independent-code-pic"]], "Linking Executables Against Shared Libraries": [[1028, "linking-executables-against-shared-libraries"]], "And Build Dependencies?": [[1028, "and-build-dependencies"]], "And Runtime Dependencies?": [[1028, "and-runtime-dependencies"]], "And Starting An Executable Having External Dependencies?": [[1028, "and-starting-an-executable-having-external-dependencies"]], "This Is Not Simple: Library Search Path": [[1028, "this-is-not-simple-library-search-path"]], "Summary: Static Versus Dynamic Libraries": [[1028, "summary-static-versus-dynamic-libraries"]], "Object Code Archives/Static Libraries": [[1029, "object-code-archives-static-libraries"]], "Code Bases Become Larger (1)": [[1029, "code-bases-become-larger-1"]], "Code Bases Become Larger (2)": [[1029, "code-bases-become-larger-2"]], "Problem: Structure": [[1029, "problem-structure"]], "Build Instructions: Building A Library": [[1029, "build-instructions-building-a-library"]], "Closures": [[1030, "closures"]], "Today": [[1030, "today"]], "def is a Statement": [[1030, "def-is-a-statement"]], "Functions That Create Functions": [[1030, "functions-that-create-functions"]], "Inner Function Reaches Out To Global Scope": [[1030, "inner-function-reaches-out-to-global-scope"]], "And Intermediate Scope? \u27f6 Closure": [[1030, "and-intermediate-scope-longrightarrow-closure"]], "A Less Theoretical \u201cUse Case\u201d": [[1030, "a-less-theoretical-use-case"]], "Scope Issues: Assignment to Global Scope (global Keyword)": [[1030, "scope-issues-assignment-to-global-scope-global-keyword"]], "Scope Issues: Assignment to Intermediate Scope (nonlocal Keyword)": [[1030, "scope-issues-assignment-to-intermediate-scope-nonlocal-keyword"]], "Intro": [[1031, "intro"]], "Simplest: List Comprehension": [[1031, "simplest-list-comprehension"]], "Context Managers: The with Statement": [[1032, "context-managers-the-with-statement"]], "Example: Open File": [[1032, "example-open-file"]], "Example: Temporary Directory": [[1032, "example-temporary-directory"]], "Example: Multiple with Items": [[1032, "example-multiple-with-items"]], "Under The Hood: Context Manager": [[1032, "under-the-hood-context-manager"]], "Example: Monkeypatching The print Function": [[1032, "example-monkeypatching-the-print-function"]], "Still Much Typing \u27f6 @contextlib.contextmanager": [[1032, "still-much-typing-longrightarrow-contextlib-contextmanager"]], "More Involved: Using Closures To Implement PrefixPrint": [[1032, "more-involved-using-closures-to-implement-prefixprint"]], "Decorators": [[1033, "decorators"]], "The Ominous \u201c@\u201d": [[1033, "the-ominous"]], "Decorators Overview": [[1033, "decorators-overview"]], "A Simple Minded Function": [[1033, "a-simple-minded-function"]], "Decorator Basics": [[1033, "decorator-basics"]], "Decorators are Syntactic Sugar": [[1033, "decorators-are-syntactic-sugar"]], "Problem: Arbitrary Function Arguments": [[1033, "problem-arbitrary-function-arguments"]], "*args, **kwargs To The Rescue": [[1033, "args-kwargs-to-the-rescue"]], "Sideways: functools.wraps": [[1033, "sideways-functools-wraps"]], "Class Decorator: debug() with prefix": [[1033, "class-decorator-debug-with-prefix"]], "Basic Exception Handling: try, except": [[1034, "basic-exception-handling-try-except"]], "Catching Exceptions By Type": [[1034, "catching-exceptions-by-type"]], "Exception Objects": [[1034, "exception-objects"]], "Catching Multiple Exception Types: Exception List": [[1034, "catching-multiple-exception-types-exception-list"]], "Catching Multiple Exception Types: Multiple except Clauses": [[1034, "catching-multiple-exception-types-multiple-except-clauses"]], "Catching Multiple Exception Types: By Base Type": [[1034, "catching-multiple-exception-types-by-base-type"]], "Important: Order Of except Clauses": [[1034, "important-order-of-except-clauses"]], "Built-In Exception Hierarchy": [[1034, "built-in-exception-hierarchy"]], "Raising Exceptions": [[1034, "raising-exceptions"]], "Re-Raising Exceptions": [[1034, "re-raising-exceptions"]], "User-Defined Exceptions": [[1034, "user-defined-exceptions"]], "User-Defined Exceptions: More": [[1034, "user-defined-exceptions-more"]], "else: Executed If No Exception": [[1034, "else-executed-if-no-exception"]], "finally: Executed Regardless Of Exception": [[1034, "finally-executed-regardless-of-exception"]], "The exec() Function": [[1035, "the-exec-function"]], "Dictionaries Everywhere: Context": [[1035, "dictionaries-everywhere-context"]], "Enter exec()": [[1035, "enter-exec"]], "exec(), and Context": [[1035, "exec-and-context"]], "And What Is This Used For, Realistically?": [[1035, "and-what-is-this-used-for-realistically"]], "Python: More Language Features": [[1036, "python-more-language-features"]], "Iteration, Comprehensions, and Generators": [[1037, "iteration-comprehensions-and-generators"]], "Coverage Of This Topic": [[1037, "coverage-of-this-topic"]], "for Recap: Sequential Datatypes": [[1037, "for-recap-sequential-datatypes"]], "Primitive Transformation [1,2,3,4] \u27f6 [1,4,9,16]": [[1037, "primitive-transformation-1-2-3-4-longrightarrow-1-4-9-16"]], "Larger Input List (Still Allocated)": [[1037, "larger-input-list-still-allocated"]], "Input List \u27f6 range": [[1037, "input-list-longrightarrow-range"]], "Output List \u27f6 yield": [[1037, "output-list-longrightarrow-yield"]], "Generator Function \u27f6 Generator Expression": [[1037, "generator-function-longrightarrow-generator-expression"]], "Implementing A Fibonacci Number Generator": [[1038, "implementing-a-fibonacci-number-generator"]], "Fibonacci Numbers: Naive List": [[1038, "fibonacci-numbers-naive-list"]], "Fibonacci Numbers: Naive List, Limited": [[1038, "fibonacci-numbers-naive-list-limited"]], "Sideway: Infinity by Not Using Functions": [[1038, "sideway-infinity-by-not-using-functions"]], "Fibonacci Numbers: Function Producing Infinite Sequence": [[1038, "fibonacci-numbers-function-producing-infinite-sequence"]], "Common Pattern: Turn List into Generated Items": [[1038, "common-pattern-turn-list-into-generated-items"]], "The Iterator Protocol": [[1039, "the-iterator-protocol"], [1039, "id1"]], "Iteration in Python": [[1039, "iteration-in-python"]], "What\u2019s an Iterator?": [[1039, "what-s-an-iterator"]], "What\u2019s an Iterable?": [[1039, "what-s-an-iterable"]], "The Iterator Protocol: Manual Iteration": [[1039, "the-iterator-protocol-manual-iteration"]], "The Iterator Protocol, And The for Loop": [[1039, "the-iterator-protocol-and-the-for-loop"]], "Generators: Motivation": [[1039, "generators-motivation"]], "Generators: How?": [[1039, "generators-how"]], "Observations": [[1039, "observations"]], "Iteration, Generators, And yield": [[1040, "iteration-generators-and-yield"]], "Iterating Intelligently: Generators, and the Iterator Protocol": [[1041, "iterating-intelligently-generators-and-the-iterator-protocol"]], "Modules are Objects": [[1042, "modules-are-objects"]], "Other Forms (1)": [[1042, "other-forms-1"]], "Other Forms (2)": [[1042, "other-forms-2"]], "Packages": [[1042, "packages"]], "Executing Modules as Scripts": [[1042, "executing-modules-as-scripts"]], "Package Structure": [[1042, "package-structure"]], "Relative Imports (1)": [[1042, "relative-imports-1"]], "Relative Imports (2)": [[1042, "relative-imports-2"]], "Multithreading (Python)": [[1043, "multithreading-python"]], "What\u2019s a Thread?": [[1043, "what-s-a-thread"]], "Threads: The Pythonic Way": [[1043, "threads-the-pythonic-way"]], "Threads: The OO Way - Inheritance": [[1043, "threads-the-oo-way-inheritance"]], "And Program Termination?": [[1043, "and-program-termination"]], "Daemon Threads": [[1043, "daemon-threads"]], "Race Conditions, and Mutexes": [[1045, "race-conditions-and-mutexes"]], "Mother of All Race conditions: Integer Increment": [[1045, "mother-of-all-race-conditions-integer-increment"]], "Load Modify Store Conflict": [[1045, "load-modify-store-conflict"]], "Solution: Mutex (Explicit Acquire/Release)": [[1045, "solution-mutex-explicit-acquire-release"]], "Solution: Mutex (with Statement)": [[1045, "solution-mutex-with-statement"]], "Multithreading: Exam Questions": [[1046, "multithreading-exam-questions"]], "Abstract Base Classes (abc), And Duck Typing": [[1047, "abstract-base-classes-abc-and-duck-typing"]], "Duck Typing: Examples": [[1047, "duck-typing-examples"]], "Duck Typing Problem: Late Errors": [[1047, "duck-typing-problem-late-errors"]], "Intermediate Step: Common Base Class (\u201cInterface\u201d)": [[1047, "intermediate-step-common-base-class-interface"]], "Enter Abstract Base Classes: Wish List": [[1047, "enter-abstract-base-classes-wish-list"]], "Abtract Base Class": [[1047, "abtract-base-class"]], "Classes And Dictionaries": [[1048, "classes-and-dictionaries"]], "Facts Up-Front": [[1048, "facts-up-front"]], "Using Raw Dictionaries As Objects": [[1048, "using-raw-dictionaries-as-objects"]], "Enter Classes: An Empty Class, And Its Effects": [[1048, "enter-classes-an-empty-class-and-its-effects"]], "Attributes": [[1048, "attributes"], [1161, "attributes"]], "Summary: Classes Or Raw Dictionaries": [[1048, "summary-classes-or-raw-dictionaries"]], "Dynamic Attribute Access": [[1048, "dynamic-attribute-access"]], "Constructor": [[1049, "constructor"]], "And self?": [[1049, "and-self"]], "Interrelationships": [[1050, "interrelationships"]], "Extending Existing Classes": [[1051, "extending-existing-classes"]], "Additional Feature: Salary": [[1051, "additional-feature-salary"]], "Want Manager": [[1051, "want-manager"]], "Introspecting Inheritance: isinstance(), issubclass()": [[1051, "introspecting-inheritance-isinstance-issubclass"]], "isinstance()": [[1051, "isinstance"]], "issubclass()": [[1051, "issubclass"]], "Add __str__(), Creatively, After The Fact": [[1051, "add-str-creatively-after-the-fact"]], "Object Methods": [[1052, "object-methods"]], "Class Methods (@classmethod)": [[1052, "class-methods-classmethod"]], "Static Methods (@staticmethod)": [[1052, "static-methods-staticmethod"]], "collections.namedtuple": [[1053, "collections-namedtuple"]], "Shortcut For Simple Data-Holding Classes": [[1053, "shortcut-for-simple-data-holding-classes"]], "Constructing From Iterable: _make()": [[1053, "constructing-from-iterable-make"]], "Convert To dict: _asdict()": [[1053, "convert-to-dict-asdict"]], "Operators Are \u201cDunder\u201d Methods": [[1054, "operators-are-dunder-methods"]], "Hypothetical And Pointless class Number": [[1054, "hypothetical-and-pointless-class-number"]], "Simplest: Equality Comparison (==)": [[1054, "simplest-equality-comparison"]], "Comparing Against Incompatible Types? (Lotsa Magic!)": [[1054, "comparing-against-incompatible-types-lotsa-magic"]], "Ordering: Less-Than (<) Operator": [[1054, "ordering-less-than-operator"]], "Ordering Magic, Again: __gt__ in terms of __lt__": [[1054, "ordering-magic-again-gt-in-terms-of-lt"]], "Table: Comparison Operators": [[1054, "table-comparison-operators"]], "@functools.total_ordering To The Rescue": [[1054, "functools-total-ordering-to-the-rescue"]], "Arithmetic Operators, Reverse Operations": [[1054, "arithmetic-operators-reverse-operations"]], "Table: Operators And The Methods To Implement Them": [[1054, "table-operators-and-the-methods-to-implement-them"]], "Readonly Attributes": [[1055, "readonly-attributes"]], "And Write Access?": [[1055, "and-write-access"]], "Calculated Attributes": [[1055, "calculated-attributes"]], "str() And repr()": [[1056, "str-and-repr"]], "Stringification And Representation": [[1056, "stringification-and-representation"]], "Overloading str() And repr(): __str__(), __repr__()": [[1056, "overloading-str-and-repr-str-repr"]], "Positional and Keyword Arguments": [[1057, "positional-and-keyword-arguments"]], "Traditional Function Call": [[1057, "traditional-function-call"]], "Supplying Function Arguments Dynamically": [[1057, "supplying-function-arguments-dynamically"]], "Functions That Takes Arbitrary Number Of Positional Arguments": [[1057, "functions-that-takes-arbitrary-number-of-positional-arguments"]], "Functions That Take Arbitrary Keyword Arguments": [[1057, "functions-that-take-arbitrary-keyword-arguments"]], "And Arbitrary Positional And Keyword Arguments?": [[1057, "and-arbitrary-positional-and-keyword-arguments"]], "Ultimate Dynamicity: Arbitrary Positional And Keyword Arguments": [[1057, "ultimate-dynamicity-arbitrary-positional-and-keyword-arguments"]], "Use Case: A Better print()": [[1057, "use-case-a-better-print"]], "The Python Programming Language": [[1060, "the-python-programming-language"]], "A Little Bit of History": [[1060, "a-little-bit-of-history"]], "Guido Van Rossum": [[1060, "guido-van-rossum"]], "Hello World: Interactive Mode": [[1061, "hello-world-interactive-mode"]], "Hello World: Script Files": [[1061, "hello-world-script-files"]], "Running Python Programs": [[1062, "running-python-programs"]], "The UNIX Way: Executable Bit, chmod": [[1062, "the-unix-way-executable-bit-chmod"]], "The UNIX Way: Hash-Bang (She-Bang)": [[1062, "the-unix-way-hash-bang-she-bang"]], "The UNIX Way: Running": [[1062, "the-unix-way-running"]], "The Doze Way: Registry": [[1062, "the-doze-way-registry"]], "Syntax: Indentation (1)": [[1063, "syntax-indentation-1"]], "Syntax: Indentation (2)": [[1063, "syntax-indentation-2"]], "Syntax: Statements and Lines": [[1063, "syntax-statements-and-lines"]], "Commandline Arguments (sys.argv)": [[1064, "commandline-arguments-sys-argv"]], "Operating Systems and Programs": [[1064, "operating-systems-and-programs"]], "Commandline Arguments in Python": [[1064, "commandline-arguments-in-python"]], "Cosmetics: Rudimentary Argument Parsing": [[1064, "cosmetics-rudimentary-argument-parsing"]], "Further information: argparse": [[1064, null]], "Variables (1)": [[1065, "variables-1"]], "Variables (2)": [[1065, "variables-2"]], "Integer Numbers: Comparison": [[1066, "integer-numbers-comparison"]], "Numbers: Python2 vs. Python 3 (1)": [[1066, "numbers-python2-vs-python-3-1"]], "Numbers: Python2 vs. Python 3 (2)": [[1066, "numbers-python2-vs-python-3-2"]], "Strings: Python 2": [[1066, "strings-python-2"]], "Strings: Python 2 \u2014 Confusion": [[1066, "strings-python-2-confusion"]], "Strings: Python 2 - unicode (1)": [[1066, "strings-python-2-unicode-1"]], "Strings: Python 2 \u2014 unicode (2)": [[1066, "strings-python-2-unicode-2"]], "Strings: Python 3": [[1066, "strings-python-3"]], "Python 3, Generally": [[1066, "python-3-generally"]], "Boolean Values": [[1068, "boolean-values"]], "Boolean Operators": [[1068, "boolean-operators"]], "The if Statement": [[1069, "the-if-statement"], [1069, "id1"]], "Looping Constructs": [[1070, "looping-constructs"]], "Esoteric Feature: while/else": [[1070, "esoteric-feature-while-else"]], "Sequence Elements": [[1071, "sequence-elements"]], "Sequence Multiplication": [[1071, "sequence-multiplication"]], "Indexing (1)": [[1072, "indexing-1"]], "Indexing (2)": [[1072, "indexing-2"]], "Slicing: Cutting Out": [[1072, "slicing-cutting-out"]], "Slicing: Step Width": [[1072, "slicing-step-width"]], "Iteration over \u2026 Something": [[1073, "iteration-over-something"]], "break, continue, else": [[1073, "break-continue-else"]], "Iteration over Numbers: range()": [[1074, "iteration-over-numbers-range"]], "range(): Definition": [[1074, "range-definition"]], "range(): Python 2 vs. Python 3": [[1074, "range-python-2-vs-python-3"]], "Immutability: Numbers": [[1075, "immutability-numbers"]], "Modifying An Integer In-Place? (Immutability)": [[1075, "modifying-an-integer-in-place-immutability"]], "Immutability: Tuples": [[1075, "immutability-tuples"]], "Mutability: Lists (1)": [[1075, "mutability-lists-1"]], "Mutability: Lists (2)": [[1075, "mutability-lists-2"]], "Shallow Copy": [[1075, "shallow-copy"]], "Deep Copy": [[1075, "deep-copy"]], "Functions: Global and Local Scope (Livehacking Screenplay)": [[1076, "functions-global-and-local-scope-livehacking-screenplay"]], "Undefined Variable": [[1076, "undefined-variable"]], "Local Variable": [[1076, "local-variable"]], "Local and Global Variable With Same Name": [[1076, "local-and-global-variable-with-same-name"]], "Assignment to Global Variable: global": [[1076, "assignment-to-global-variable-global"]], "Functions (Slideshow)": [[1077, "functions-slideshow"]], "Why Functions?": [[1077, "why-functions"]], "Mutable Default Parameters: Attention!": [[1077, "mutable-default-parameters-attention"]], "String Delimiters": [[1079, "string-delimiters"]], "Escape Sequences": [[1079, "escape-sequences"]], "More String Tricks": [[1079, "more-string-tricks"]], "C-Style Formatting (1)": [[1080, "c-style-formatting-1"]], "C-Style Formatting: Conversions": [[1080, "c-style-formatting-conversions"]], "C-Style Formatting: Flags": [[1080, "c-style-formatting-flags"]], "C-Style Formatting: Examples": [[1080, "c-style-formatting-examples"]], "The format Method": [[1080, "the-format-method"]], "Cool Since 3.6: f-Strings": [[1080, "cool-since-3-6-f-strings"]], "Batteries Included: Checks": [[1081, "batteries-included-checks"]], "Batteries Included: Search": [[1081, "batteries-included-search"]], "Substring Search: Examples": [[1081, "substring-search-examples"]], "Split and Join (1)": [[1081, "split-and-join-1"]], "Split and Join (2)": [[1081, "split-and-join-2"]], "List Access": [[1082, "list-access"]], "List Methods: Examples": [[1082, "list-methods-examples"]], "Dictionary Access": [[1083, "dictionary-access"]], "Examples: Simple Access": [[1083, "examples-simple-access"]], "Examples: Shortcuts": [[1083, "examples-shortcuts"]], "Dictionary Iteration (1)": [[1083, "dictionary-iteration-1"]], "Dictionary Iteration (2)": [[1083, "dictionary-iteration-2"]], "Operations on Sets (1)": [[1084, "operations-on-sets-1"]], "Operations on Sets (2)": [[1084, "operations-on-sets-2"]], "Python 2 vs. Python 3": [[1085, "python-2-vs-python-3"]], "Opening Files": [[1085, "opening-files"]], "Reading Files": [[1085, "reading-files"]], "Reading Files: Pythonic": [[1085, "reading-files-pythonic"]], "Writing Files (1)": [[1085, "writing-files-1"]], "Writing Files (2)": [[1085, "writing-files-2"]], "File Modes": [[1085, "file-modes"]], "Text vs. Binary Mode": [[1085, "text-vs-binary-mode"]], "Standard Streams": [[1085, "standard-streams"]], "Function Objects": [[1086, "function-objects"]], "What\u2019s a Function?": [[1086, "what-s-a-function"]], "Function Objects?": [[1086, "id1"]], "Function Objects! (1)": [[1086, "function-objects-1"]], "Function Objects! (2)": [[1086, "function-objects-2"]], "Commandline Parsing with argparse": [[1087, "commandline-parsing-with-argparse"]], "Handling Positional Arguments": [[1087, "handling-positional-arguments"]], "Handling Named Arguments: --interval \u2026": [[1087, "handling-named-arguments-interval"]], "Python: Draft Topics": [[1089, "python-draft-topics"]], "Matplotlib": [[1090, "matplotlib"]], "Axis Ranges": [[1090, "axis-ranges"]], "Package Installation (setuptools)": [[1091, "package-installation-setuptools"]], "Files": [[1091, "files"]], "Test \u201cInstallation\u201d": [[1091, "test-installation"]], "Source Distribution": [[1091, "source-distribution"]], "Manifest": [[1091, "manifest"]], "Installing From Wheel File": [[1091, "installing-from-wheel-file"]], "Publishing On PyPI": [[1091, "publishing-on-pypi"]], "Exercise: Read CSV File, Write into Sqlite3 Database": [[1092, "exercise-read-csv-file-write-into-sqlite3-database"]], "Exercise: Read CSV File": [[1093, "exercise-read-csv-file"]], "Sample CSV File": [[1093, "sample-csv-file"]], "CSV and Databases": [[1094, "csv-and-databases"]], "Exercise: Boolean Expressions": [[1096, "exercise-boolean-expressions"]], "Exercise: Even Numbers (while)": [[1097, "exercise-even-numbers-while"]], "Exercise: Greeting, Depending on Time of Day": [[1098, "exercise-greeting-depending-on-time-of-day"]], "Exercises (External)": [[1099, "exercises-external"]], "Exercise: Swap Two Variables": [[1101, "exercise-swap-two-variables"]], "Exercise: Username/Password Check": [[1102, "exercise-username-password-check"]], "Exercise: Digit to English Word": [[1103, "exercise-digit-to-english-word"]], "Exercise: Dictionary: Errors?": [[1104, "exercise-dictionary-errors"]], "Exercise: Eliminate Empty/Comment-Only Lines": [[1105, "exercise-eliminate-empty-comment-only-lines"]], "Exercise: Generator: Fibonacci": [[1106, "exercise-generator-fibonacci"]], "Exercise: Primeness (for)": [[1107, "exercise-primeness-for"]], "Exercises (Legacy)": [[1108, "exercises-legacy"]], "Exercise: Functions: join()": [[1109, "exercise-functions-join"]], "Exercise: Determine Maximum of Two Numbers (Function)": [[1111, "exercise-determine-maximum-of-two-numbers-function"]], "Exercise: Mixed List (Executable Program)": [[1112, "exercise-mixed-list-executable-program"]], "Exercise: Mixed List (Interactive Interpreter)": [[1113, "exercise-mixed-list-interactive-interpreter"]], "Exercise: Parsing /etc/passwd": [[1114, "exercise-parsing-etc-passwd"]], "Sample /etc/passwd file": [[1114, null]], "Implementation Strategy": [[1114, "implementation-strategy"]], "Exercise: Primeness (Function)": [[1115, "exercise-primeness-function"]], "Exercise: Reverting Lines of a File": [[1116, "exercise-reverting-lines-of-a-file"]], "Exercise: String (Right-Justify)": [[1117, "exercise-string-right-justify"]], "Exercise: Function: uniq()": [[1118, "exercise-function-uniq"]], "Exercise: Generator: uniq()": [[1119, "exercise-generator-uniq"]], "Exercise: Counting Lines, Words, Characters": [[1120, "exercise-counting-lines-words-characters"]], "Exercise: Primeness (while)": [[1121, "exercise-primeness-while"]], "Sensors, And Data Acquisition (Exercise Series)": [[1122, "sensors-and-data-acquisition-exercise-series"]], "Setting Paths": [[1123, "setting-paths"]], "Create (And Activate) A Virtual Environment For The Project": [[1123, "create-and-activate-a-virtual-environment-for-the-project"]], "Install Requirements": [[1123, "install-requirements"]], "Exercise: Basic \u201cSensor\u201d": [[1124, "exercise-basic-sensor"]], "Specification, And Setup": [[1124, "specification-and-setup"]], "Verification": [[1124, "verification"]], "Unit Test": [[1124, "unit-test"]], "Exercise: Read CSV File (csv.dictreader)": [[1125, "exercise-read-csv-file-csv-dictreader"]], "Users-header-cp1252.csv": [[1125, "id1"]], "Exercise: Refactoring - Extract CSV Reading Into Function (csv.dictreader)": [[1126, "exercise-refactoring-extract-csv-reading-into-function-csv-dictreader"]], "Exercise: Read CSV File (csv.reader)": [[1127, "exercise-read-csv-file-csv-reader"]], "Users-noheader-cp1252.csv": [[1127, "id2"]], "Exercise: Refactoring - Extract CSV Reading Into Function (csv.reader)": [[1128, "exercise-refactoring-extract-csv-reading-into-function-csv-reader"]], "User Database (Exercise Series)": [[1129, "user-database-exercise-series"]], "Exercise: MQTT: Publish User Records": [[1130, "exercise-mqtt-publish-user-records"]], "Exercise: Away From Raw Dictionaries": [[1131, "exercise-away-from-raw-dictionaries"]], "Test Code": [[1131, "test-code"], [1132, "test-code"], [1133, "test-code"]], "Exercise: Convert User Record To JSON And Back": [[1132, "exercise-convert-user-record-to-json-and-back"]], "Exercise: Refactoring - Extract Both CSV Formats Into Module": [[1133, "exercise-refactoring-extract-both-csv-formats-into-module"]], "Python: All Material, Interrelated": [[1134, "python-all-material-interrelated"]], "Python Programming: From Absolute Beginner to Advanced Productivity": [[1135, "python-programming-from-absolute-beginner-to-advanced-productivity"]], "Sample Trainings": [[1135, "sample-trainings"]], "More Information": [[1135, "more-information"]], "Python Links": [[1136, "python-links"]], "Advanced Python": [[1136, "advanced-python"], [1197, "advanced-python"]], "David Beazley": [[1136, "david-beazley"]], "Raymond Hettinger": [[1136, "raymond-hettinger"]], "Machine Learning, Artificial Intelligence": [[1137, "machine-learning-artificial-intelligence"]], "K-Means": [[1138, "k-means"]], "Topic Overview": [[1138, "topic-overview"], [1142, "topic-overview"]], "Artifacts": [[1138, "artifacts"]], "Topic Dependencies": [[1138, "topic-dependencies"], [1142, "topic-dependencies"]], "Linear Regression: Running Code (no Notebook!)": [[1139, "linear-regression-running-code-no-notebook"]], "Weather History Dataset": [[1140, "weather-history-dataset"]], "Linear Regression: Jupyter Notebook": [[1141, "Linear-Regression:-Jupyter-Notebook"]], "pandas.DataFrame": [[1141, "pandas.DataFrame"]], "Reading Data": [[1141, "Reading-Data"]], "Relationship Between pandas.DataFrame and numpy.ndarray": [[1141, "Relationship-Between-pandas.DataFrame-and-numpy.ndarray"]], "Extracting Input and Output Features from a pandas.DataFrame": [[1141, "Extracting-Input-and-Output-Features-from-a-pandas.DataFrame"]], "Plotting with matplotlib": [[1141, "Plotting-with-matplotlib"]], "Data Splicing: Split into Training and Test Data": [[1141, "Data-Splicing:-Split-into-Training-and-Test-Data"]], "Creating the Model: Algorithm + Training Data": [[1141, "Creating-the-Model:-Algorithm-+-Training-Data"]], "Verify the Model": [[1141, "Verify-the-Model"]], "Linear Regression": [[1142, "linear-regression"]], "Running Code": [[1142, "running-code"]], "Dataset": [[1142, "dataset"]], "Machine Learning: Concepts and Terminology": [[1143, "machine-learning-concepts-and-terminology"]], "How Far Is Mankind from Creating God": [[1143, "how-far-is-mankind-from-creating-god"]], "Basic Terminology: Algorithm and Model": [[1143, "basic-terminology-algorithm-and-model"]], "Basic Terminology: Features and Data": [[1143, "basic-terminology-features-and-data"]], "Types of Machine Learning": [[1143, "types-of-machine-learning"]], "Problems Solved": [[1143, "problems-solved"], [1165, "problems-solved"], [1172, "problems-solved"]], "CSV Files": [[1144, "csv-files"]], "CSV in its Origins": [[1144, "csv-in-its-origins"]], "The csv Module: csv.reader": [[1144, "the-csv-module-csv-reader"]], "And Tuple Unpacking?": [[1144, "and-tuple-unpacking"]], "Going Insane: CSV? SCSV?": [[1144, "going-insane-csv-scsv"]], "More Tuning Needed: Quoting": [[1144, "more-tuning-needed-quoting"]], "Tuning Options": [[1144, "tuning-options"]], "And Headings?": [[1144, "and-headings"]], "Enter csv.DictReader": [[1144, "enter-csv-dictreader"]], "DBAPI 2": [[1145, "dbapi-2"]], "Database Interfaces": [[1145, "database-interfaces"]], "DBAPI 2.0": [[1145, "dbapi-2-0"]], "Caveat: Transaction Lifetime": [[1145, "caveat-transaction-lifetime"]], "Caveat: Isolation": [[1145, "caveat-isolation"]], "Databases": [[1146, "databases"]], "DBAPI 2: PostgreSQL": [[1147, "dbapi-2-postgresql"]], "DBAPI 2 Example: Postgres": [[1147, "dbapi-2-example-postgres"]], "DBAPI 2: sqlite3": [[1148, "dbapi-2-sqlite3"]], "SQLite3": [[1148, "sqlite3"]], "SQLite3 Connection": [[1148, "sqlite3-connection"]], "SQLite3: Cursors and Statements": [[1148, "sqlite3-cursors-and-statements"]], "SQLite3: Filling the Database": [[1148, "sqlite3-filling-the-database"]], "SQLite3: Queries - Result Set": [[1148, "sqlite3-queries-result-set"]], "SQLite3: Bind Parameters": [[1148, "sqlite3-bind-parameters"]], "ASCII": [[1149, "ascii"]], "ISO Latin 1 (ISO-8859-1)": [[1149, "iso-latin-1-iso-8859-1"]], "And Python?": [[1149, "and-python"]], "Liebe Gr\u00fc\u00dfe, J\u00f6rg": [[1149, "liebe-grusze-jorg"]], "A Better Encoding for Liebe Gr\u00fc\u00dfe, J\u00f6rg: ISO-8859-1": [[1149, "a-better-encoding-for-liebe-grusze-jorg-iso-8859-1"]], "Encoding Mess": [[1149, "encoding-mess"]], "And \u795d\u597d, J\u00f6rg? (1)": [[1149, "and-jorg-1"]], "And \u795d\u597d, J\u00f6rg? (2)": [[1149, "and-jorg-2"]], "Enter UTF-8": [[1149, "enter-utf-8"]], "Boundary Code": [[1149, "boundary-code"]], "Ah Yes: decode()": [[1149, "ah-yes-decode"]], "And Source Encoding?": [[1149, "and-source-encoding"]], "Python: Miscellaneous Topics": [[1150, "python-miscellaneous-topics"]], "The import Statement (incomplete)": [[1151, "the-import-statement-incomplete"]], "Server/Broker": [[1152, "server-broker"]], "Starting the Service": [[1152, "starting-the-service"]], "Publishing a Message in Python": [[1152, "publishing-a-message-in-python"]], "Subscribing a Topic in Python": [[1152, "subscribing-a-topic-in-python"]], "Message Payload?": [[1152, "message-payload"]], "Pandas: Adding Rows": [[1153, "pandas-adding-rows"]], "Add Rows: Assign To New Row Number": [[1153, "add-rows-assign-to-new-row-number"]], "Add Rows: append() (Deprecated)": [[1153, "add-rows-append-deprecated"]], "Add Rows: Concatenating Frames": [[1153, "add-rows-concatenating-frames"]], "Pandas: Basics (DataFrame And Series)": [[1154, "pandas-basics-dataframe-and-series"]], "Naive: Objects, And Collections Of Objects": [[1154, "naive-objects-and-collections-of-objects"]], "Inverted: Objects, And Collections Of Objects (\u27f6 DataFrame)": [[1154, "inverted-objects-and-collections-of-objects-longrightarrow-dataframe"]], "Enter pandas, DataFrame, Series": [[1154, "enter-pandas-dataframe-series"]], "Selecting A Column \u27f6 Series": [[1154, "selecting-a-column-longrightarrow-series"]], "Selecting Multiple Columns": [[1154, "selecting-multiple-columns"]], "To Copy Or Not To Copy": [[1154, "to-copy-or-not-to-copy"]], "Pandas: Filters": [[1155, "pandas-filters"]], "Basic Filter Example": [[1155, "basic-filter-example"]], "Filter? Bitmap!": [[1155, "filter-bitmap"]], "Confusion: Filter/Column Addressing": [[1155, "confusion-filter-column-addressing"]], "Column Selection And Filters": [[1155, "column-selection-and-filters"]], "Boolean Expressions: Bitwise Operators! Braces!": [[1155, "boolean-expressions-bitwise-operators-braces"]], "Negation: ~": [[1155, "negation"]], "Neat Helpers": [[1155, "neat-helpers"]], "Random Material": [[1156, "random-material"]], "Pandas: Selecting Rows (And Columns) With iloc[]": [[1157, "pandas-selecting-rows-and-columns-with-iloc"]], "Row By Number: iloc[]": [[1157, "row-by-number-iloc"]], "So What Is A Row, Then?": [[1157, "so-what-is-a-row-then"]], "Selecting Multiple Rows": [[1157, "selecting-multiple-rows"]], "Selecting Rows And Columns": [[1157, "selecting-rows-and-columns"]], "Pandas: Indexes": [[1158, "pandas-indexes"]], "Default Index: Row Number": [[1158, "default-index-row-number"]], "Setting Custom Index": [[1158, "setting-custom-index"]], "Setting Custom Index, inplace=True": [[1158, "setting-custom-index-inplace-true"]], "Custom Index, And loc[]": [[1158, "custom-index-and-loc"]], "Custom Index, And iloc[]": [[1158, "custom-index-and-iloc"]], "Sorting DataFrame Object By Index Column": [[1158, "sorting-dataframe-object-by-index-column"]], "Pandas: Selecting Rows (And Columns) With loc[]": [[1159, "pandas-selecting-rows-and-columns-with-loc"]], "Rows (And Columns) By Label": [[1159, "rows-and-columns-by-label"]], "Hiccup: Slices Are Inclusive": [[1159, "hiccup-slices-are-inclusive"]], "Column Selection By Label": [[1159, "column-selection-by-label"]], "Columns By Slicing: Inclusive": [[1159, "columns-by-slicing-inclusive"]], "Pandas: Adding/Modifying Columns": [[1160, "pandas-adding-modifying-columns"]], "Example 1: Lowercasing A Column Of Strings": [[1160, "example-1-lowercasing-a-column-of-strings"]], "Example 1: Modifying The email Column": [[1160, "example-1-modifying-the-email-column"]], "Example 2: Adding A normalized_email Column": [[1160, "example-2-adding-a-normalized-email-column"]], "What If No Prebuilt Functionality Exists? apply() To The Rescue!": [[1160, "what-if-no-prebuilt-functionality-exists-apply-to-the-rescue"]], "apply() -ing Custom Functions": [[1160, "apply-ing-custom-functions"]], "XML: ElementTree (etree)": [[1161, "xml-elementtree-etree"]], "SAX and DOM": [[1161, "sax-and-dom"]], "ElementTree": [[1161, "elementtree"]], "A Very Simple Document": [[1161, "a-very-simple-document"]], "Text (1)": [[1161, "text-1"]], "Text (2)": [[1161, "text-2"]], "Writing XML Documents": [[1161, "writing-xml-documents"]], "Reading XML Documents": [[1161, "reading-xml-documents"]], "Visual Studio Code for Python Programming": [[1162, "visual-studio-code-for-python-programming"]], "Python: Project/Package Management": [[1163, "python-project-package-management"]], "Python Package Index (Livehacking Screenplay)": [[1164, "python-package-index-livehacking-screenplay"]], "Invocation": [[1164, "invocation"]], "Help": [[1164, "help"]], "Most Used Subcommands": [[1164, "most-used-subcommands"]], "Subcommand Help": [[1164, "subcommand-help"]], "System vs. User": [[1164, "system-vs-user"]], "Search": [[1164, "search"]], "Python Package Index (Slideshow)": [[1165, "python-package-index-slideshow"]], "Python Package Index (PyPI)": [[1165, "python-package-index-pypi"]], "Python Package Index": [[1166, "python-package-index"]], "Packaging, PyPI Upload (Link Collection)": [[1167, "packaging-pypi-upload-link-collection"]], "PyTest": [[1168, "pytest"]], "pytest Introduction, By Example": [[1169, "pytest-introduction-by-example"]], "Sample Project Structure": [[1169, "sample-project-structure"]], "pytest: Installation, Documentation": [[1169, "pytest-installation-documentation"]], "And PYTHONPATH?": [[1169, "and-pythonpath"]], "A Simple Test": [[1169, "a-simple-test"]], "Failing Tests": [[1169, "failing-tests"]], "A More Realistic Example": [[1169, "a-more-realistic-example"]], "Fixtures": [[1169, "fixtures"]], "Temporary Test Directory": [[1169, "temporary-test-directory"]], "Marking Tests as Expected to Fail": [[1169, "marking-tests-as-expected-to-fail"]], "The unittest Module": [[1170, "the-unittest-module"]], "Simplest Example": [[1170, "simplest-example"]], "Using a Fixture": [[1170, "using-a-fixture"]], "Multiple Test Cases With Same Fixture": [[1170, "multiple-test-cases-with-same-fixture"]], "Auto Recognizing Test Methods": [[1170, "auto-recognizing-test-methods"]], "The Meat of a Test": [[1170, "the-meat-of-a-test"]], "Recommendations": [[1170, "recommendations"]], "Virtual Environments (Livehacking Screenplay)": [[1171, "virtual-environments-livehacking-screenplay"]], "First: Help": [[1171, "first-help"]], "Local Package Installation": [[1171, "local-package-installation"]], "Freezing an Environment": [[1171, "freezing-an-environment"]], "Destroying an Environment": [[1171, "destroying-an-environment"]], "Recreating an Environment": [[1171, "recreating-an-environment"]], "Using Virtual Environments With Visual Studio Code": [[1171, "using-virtual-environments-with-visual-studio-code"]], "Virtual Environments (Slideshow)": [[1172, "virtual-environments-slideshow"]], "Virtual Environments (Links)": [[1172, "virtual-environments-links"]], "Virtual Environments": [[1173, "virtual-environments"]], "Code: Unittest: GTest Basics": [[1175, "code-unittest-gtest-basics"]], "Screenplay: Unittest: GTest Basics": [[1176, "screenplay-unittest-gtest-basics"]], "Before We Start": [[1176, "before-we-start"]], "Simplest Test: No Test": [[1176, "simplest-test-no-test"]], "Next Simplest: Single File": [[1176, "next-simplest-single-file"]], "Executing Tests Selectively": [[1176, "executing-tests-selectively"]], "Fatal Failure": [[1176, "fatal-failure"]], "FAIL()": [[1176, "fail"]], "ASSERT_*()": [[1176, "assert"]], "Non-Fatal Failure": [[1176, "non-fatal-failure"]], "Custom Message Output": [[1176, "custom-message-output"]], "Last Not Least: Structure": [[1176, "last-not-least-structure"]], "Test Cases and Suites": [[1176, "test-cases-and-suites"]], "Unittest: GTest Basics": [[1177, "unittest-gtest-basics"]], "Screenplay: Unittest: GTest and CMake": [[1178, "screenplay-unittest-gtest-and-cmake"]], "Installed: to be found in Standard Paths": [[1178, "installed-to-be-found-in-standard-paths"]], "CMake: \u201cFind Modules\u201d": [[1178, "cmake-find-modules"]], "Executing Tests As Part of Build": [[1178, "executing-tests-as-part-of-build"]], "Tests That Are Expected to Fail": [[1178, "tests-that-are-expected-to-fail"]], "Unittest: GTest and CMake": [[1179, "unittest-gtest-and-cmake"]], "Code: Unittest: GTest Fixtures": [[1180, "code-unittest-gtest-fixtures"]], "Screenplay: Unittest: GTest Fixtures": [[1181, "screenplay-unittest-gtest-fixtures"]], "Predefined Environment for a Number of Tests": [[1181, "predefined-environment-for-a-number-of-tests"]], "Environment is Isolated Per Test": [[1181, "environment-is-isolated-per-test"]], "More Complex Environment: SetUp(), TearDown()": [[1181, "more-complex-environment-setup-teardown"]], "Unittest: GTest Fixtures": [[1182, "unittest-gtest-fixtures"]], "Organisatorisches: Buchung, Kursablauf": [[1183, "organisatorisches-buchung-kursablauf"]], "Online Schulungen": [[1183, null]], "Buchung": [[1183, "buchung"]], "Kursgestaltung": [[1183, "kursgestaltung"]], "\u00dcbungen": [[1183, "ubungen"]], "Unterlagen & Download": [[1183, "unterlagen-download"]], "Linux from Scratch, 16.9.2013, M\u00fcnchen": [[1184, "linux-from-scratch-16-9-2013-munchen"]], "GRUB 0.97": [[1184, "grub-0-97"]], "Cross Systeme Bauen": [[1184, "cross-systeme-bauen"]], "Init, oder der Prozess mit der ID 1": [[1184, "init-oder-der-prozess-mit-der-id-1"]], "Verschiedenes": [[1184, "verschiedenes"]], "Shell Scripting/Bourne Again Shell (Bash)": [[1185, "shell-scripting-bourne-again-shell-bash"]], "Zielpublikum": [[1185, "zielpublikum"], [1187, "zielpublikum"], [1188, "zielpublikum"], [1193, "zielpublikum"], [1195, "zielpublikum"], [1200, "zielpublikum"], [1201, "zielpublikum"], [1207, "zielpublikum"]], "Kursinhalt": [[1185, "kursinhalt"], [1187, "kursinhalt"], [1188, "kursinhalt"], [1193, "kursinhalt"], [1195, "kursinhalt"], [1196, "kursinhalt"], [1200, "kursinhalt"], [1201, "kursinhalt"], [1202, "kursinhalt"], [1203, "kursinhalt"], [1205, "kursinhalt"], [1206, "kursinhalt"], [1207, "kursinhalt"]], "Empfohlene Vorkenntnisse": [[1185, "empfohlene-vorkenntnisse"], [1187, "empfohlene-vorkenntnisse"], [1188, "empfohlene-vorkenntnisse"], [1193, "empfohlene-vorkenntnisse"], [1195, "empfohlene-vorkenntnisse"], [1196, "empfohlene-vorkenntnisse"], [1200, "empfohlene-vorkenntnisse"], [1201, "empfohlene-vorkenntnisse"], [1202, "empfohlene-vorkenntnisse"], [1203, "empfohlene-vorkenntnisse"], [1205, "empfohlene-vorkenntnisse"], [1206, "empfohlene-vorkenntnisse"], [1207, "empfohlene-vorkenntnisse"]], "C: Einf\u00fchrung": [[1186, "c-einfuhrung"]], "C f\u00fcr Fortgeschrittene": [[1187, "c-fur-fortgeschrittene"]], "C++: Einf\u00fchrung und \u00dcberblick": [[1188, "c-einfuhrung-und-uberblick"]], "An Introduction to Modern C++, In Three Days": [[1189, "an-introduction-to-modern-c-in-three-days"]], "C and C++ Programming": [[1190, "c-and-c-programming"]], "CMake": [[1191, "cmake"]], "The Course": [[1191, null]], "Target Audience": [[1191, "target-audience"]], "Recommended Prior Knowledge": [[1191, "recommended-prior-knowledge"]], "Design Patterns For C++ Developers": [[1192, "design-patterns-for-c-developers"]], "Embedded Software Development: Hardware, Realtime, and Memory Management": [[1193, "embedded-software-development-hardware-realtime-and-memory-management"]], "Linux Kernel Driver Development": [[1194, "linux-kernel-driver-development"], [814, "linux-kernel-driver-development"]], "Course Contents": [[1194, "course-contents"]], "Sample Project": [[1194, "sample-project"]], "Linux Basics: Eine Einf\u00fchrung Anhand von Beispielen": [[1195, "linux-basics-eine-einfuhrung-anhand-von-beispielen"]], "GNU Make: Die Mutter aller Build Tools": [[1196, "gnu-make-die-mutter-aller-build-tools"]], "Herdt": [[1199, "herdt"]], "Eine Woche mit dem Raspberry Pi": [[1200, "eine-woche-mit-dem-raspberry-pi"]], "Subversion (SVN)": [[1201, "subversion-svn"]], "Linux Systems Programming: Introduction": [[1202, "linux-systems-programming-introduction"]], "Linux Systems Programming: Virtual Memory, IPC, Shared Libraries": [[1203, "linux-systems-programming-virtual-memory-ipc-shared-libraries"]], "Linux Systems Programming: Multithreading": [[1205, "linux-systems-programming-multithreading"]], "Linux Systems Programming: Network Programming": [[1206, "linux-systems-programming-network-programming"]], "Unittesting and Test Driven Development": [[1207, "unittesting-and-test-driven-development"]], "Types, Operators, Expressions": [[422, "types-operators-expressions"]], "Program Flow": [[431, "program-flow"]], "Functions and Program Structure": [[438, "functions-and-program-structure"]], "Structures": [[448, "structures"]], "Memory": [[451, "memory"]], "Program Sanity": [[464, "program-sanity"]], "Performance": [[468, "performance"]], "Profiling": [[473, "profiling"]], "C++: Miscellaneous Live-Hacking": [[594, "c-miscellaneous-live-hacking"]], "Functions and Methods": [[617, "functions-and-methods"]], "C++ Template Basics": [[623, "c-template-basics"]], "Dynamic Memory Allocation, Resource Management": [[664, "dynamic-memory-allocation-resource-management"]], "The Standard Library: Miscellaneous Topics": [[673, "the-standard-library-miscellaneous-topics"]], "Functions, Functions": [[759, "functions-functions"]], "Topics and Dependencies": [[814, "topics-and-dependencies"]], "POSIX Threads": [[988, "posix-threads"]], "Python: The Language Fundamentals": [[1058, "python-the-language-fundamentals"]], "Unit Testing With googletest": [[1174, "unit-testing-with-googletest"]], "Linux Basics (2024-03-11 - 2024-03-13)": [[387, "linux-basics-2024-03-11-2024-03-13"], [353, "linux-basics-2024-03-11-2024-03-13"]], "Bisher Gehaltene": [[387, "bisher-gehaltene"]], "Python Advanced (2023-11-22 - 2023-11-24)": [[387, "python-advanced-2023-11-22-2023-11-24"]], "Clean Code Development With Python (2023-03-28 - 2023-03-30)": [[387, "clean-code-development-with-python-2023-03-28-2023-03-30"]], "C++ For Embedded Developers (2023-03-20 - 2023-03-22)": [[387, "c-for-embedded-developers-2023-03-20-2023-03-22"]], "Python (2022-11-07 - 2022-11-10, 2022-12-01)": [[387, "python-2022-11-07-2022-11-10-2022-12-01"]], "C++: A New Language Starting In 2011 (2022-07-26 - 2022-07-27)": [[387, "c-a-new-language-starting-in-2011-2022-07-26-2022-07-27"]], "C++: A New Language Starting In 2011 (2022-06-14 - 2022-06-15)": [[387, "c-a-new-language-starting-in-2011-2022-06-14-2022-06-15"]], "Python Advanced (2022-03-15 - 2022-03-17)": [[387, "python-advanced-2022-03-15-2022-03-17"]], "Python Basics (2021-08-23 - 2021-08-25)": [[387, "python-basics-2021-08-23-2021-08-25"]], "Programmieren mit C++ (2021-07-12 - 2021-07-16)": [[387, "programmieren-mit-c-2021-07-12-2021-07-16"]], "Linux Basics, Shell Scripting (2019-03-29 - 1.4.2021)": [[387, "linux-basics-shell-scripting-2019-03-29-1-4-2021"]], "Python (22.3.2021 - 25.3.2021)": [[387, "python-22-3-2021-25-3-2021"]], "Python Advanced (15.3.2021 - 17.3.2021)": [[387, "python-advanced-15-3-2021-17-3-2021"]], "Linux Kernel Driver Development Basics (8.3.2021 - 12.3.2020)": [[387, "linux-kernel-driver-development-basics-8-3-2021-12-3-2020"]], "Programmierung Grundlagen, anhand von Python (13. und 14.1.2021)": [[387, "programmierung-grundlagen-anhand-von-python-13-und-14-1-2021"]], "Linux und Raspberry Pi (3.11.2020, 4.11.2020, 17.11.2020)": [[387, "linux-und-raspberry-pi-3-11-2020-4-11-2020-17-11-2020"]], "Python Basics (19.10.2020 - 22.10.2020)": [[387, "python-basics-19-10-2020-22-10-2020"]], "Python Advanced (13.5.2020 - 14.5.2020 bei einer Firma in Graz)": [[387, "python-advanced-13-5-2020-14-5-2020-bei-einer-firma-in-graz"]], "C++ f\u00fcr Embedded-Entwickler (30.3.2020 - 4.4.2020, bei einer Firma in Baden-W\u00fcrttemberg)": [[387, "c-fur-embedded-entwickler-30-3-2020-4-4-2020-bei-einer-firma-in-baden-wurttemberg"]], "IPC in Linux (10.1.2020, bei einer Firma in Graz)": [[387, "ipc-in-linux-10-1-2020-bei-einer-firma-in-graz"]], "Python/NumPy (12.11.2019 - 13.11.2019 in Graz)": [[387, "python-numpy-12-11-2019-13-11-2019-in-graz"]], "Python Advanced (9.10.2019 - 10.10.2019 bei einer Firma in Graz)": [[387, "python-advanced-9-10-2019-10-10-2019-bei-einer-firma-in-graz"]], "C f\u00fcr Fortgeschrittene (30.9.2019 - 4.10.2019 in Wiener Neustadt)": [[387, "c-fur-fortgeschrittene-30-9-2019-4-10-2019-in-wiener-neustadt"]], "Einf\u00fchrung in Raspberry Pi (8.7.2019 - 10.7.2019 in Graz)": [[387, "einfuhrung-in-raspberry-pi-8-7-2019-10-7-2019-in-graz"]], "Python Basics (24.6.2019 - 27.6.2019, bei einer Firma in Ober\u00f6sterreich)": [[387, "python-basics-24-6-2019-27-6-2019-bei-einer-firma-in-oberosterreich"]], "Linux Basics (13.6.2019 - 19.6.2019, bei einer Firma in Ober\u00f6sterreich)": [[387, "linux-basics-13-6-2019-19-6-2019-bei-einer-firma-in-oberosterreich"]], "Python Basics (3.6.2019 - 6.6.2019, bei einer Firma in Ober\u00f6sterreich)": [[387, "python-basics-3-6-2019-6-6-2019-bei-einer-firma-in-oberosterreich"]], "Linux Big Picture (27.5.2019 - 29.5.2019, bei einer Firma in Baden-W\u00fcrttemberg)": [[387, "linux-big-picture-27-5-2019-29-5-2019-bei-einer-firma-in-baden-wurttemberg"]], "Python Basics (23.5.2019 - 24.5.2019, bei einer Firma in der Obersteiermark)": [[387, "python-basics-23-5-2019-24-5-2019-bei-einer-firma-in-der-obersteiermark"]], "Korn Shell Scripting (20.5.2019 - 22.5.2019 bei einer Firma in Salzburg)": [[387, "korn-shell-scripting-20-5-2019-22-5-2019-bei-einer-firma-in-salzburg"]], "Linux Basics (13.5.2019 - 15.5.2019, bei einer Firma in Ober\u00f6sterreich)": [[387, "linux-basics-13-5-2019-15-5-2019-bei-einer-firma-in-oberosterreich"]], "C: Ausgew\u00e4hlte Themen (17.12.2018 - 19.12.2018 in Graz)": [[387, "c-ausgewahlte-themen-17-12-2018-19-12-2018-in-graz"]], "Python Basics (1.10.2018 - 4.10.2018, bei einer Firma in Ober\u00f6sterreich)": [[387, "python-basics-1-10-2018-4-10-2018-bei-einer-firma-in-oberosterreich"]], "Linux Basics, Shell Scripting (16.7.2018 - 20.7.2018, bei einer Firma in Ober\u00f6sterreich)": [[387, "linux-basics-shell-scripting-16-7-2018-20-7-2018-bei-einer-firma-in-oberosterreich"]], "Advanced C on Linux (9.7.2018 - 11.7.2018, Raum N\u00fcrnberg)": [[387, "advanced-c-on-linux-9-7-2018-11-7-2018-raum-nurnberg"]], "Linux f\u00fcr Fortgeschrittene (12.3.2018 - 16.3.2018, Oberb\u00fcren/Schweiz)": [[387, "linux-fur-fortgeschrittene-12-3-2018-16-3-2018-oberburen-schweiz"]], "Linux und Python (11.9.2017 - 13.9.2017, bei einer Firma im Raum M\u00fcnchen)": [[387, "linux-und-python-11-9-2017-13-9-2017-bei-einer-firma-im-raum-munchen"]], "Linux Lowlevel Programming (28.8.2017 - 30.8.2017, Raum N\u00fcrnberg)": [[387, "linux-lowlevel-programming-28-8-2017-30-8-2017-raum-nurnberg"]], "C Refresher (23.8.2017 - 24.8.2017, Raum N\u00fcrnberg)": [[387, "c-refresher-23-8-2017-24-8-2017-raum-nurnberg"]], "C++11: Ausgew\u00e4hlte Themen (6.6.2017 - 8.6.2017 bei einer Firma in Graz)": [[387, "c-11-ausgewahlte-themen-6-6-2017-8-6-2017-bei-einer-firma-in-graz"]], "Linux vom Programmiererstandpunkt (30.12.2016 in Wien)": [[387, "linux-vom-programmiererstandpunkt-30-12-2016-in-wien"]], "Embedded Linux anhand des Raspberry Pi (17.10.2016 - 21.10.2016 bei einer Firma in Baden-W\u00fcrttemberg)": [[387, "embedded-linux-anhand-des-raspberry-pi-17-10-2016-21-10-2016-bei-einer-firma-in-baden-wurttemberg"]], "Linux vom Programmiererstandpunkt (20.9.2016 in Wien)": [[387, "linux-vom-programmiererstandpunkt-20-9-2016-in-wien"]], "C for Advanced Users (5.7.2016 - 6.7.2016, Raum N\u00fcrnberg)": [[387, "c-for-advanced-users-5-7-2016-6-7-2016-raum-nurnberg"]], "Einf\u00fchrung in C++ (22.2.2016 - 26.2.2016 bei einer Firma in Graz)": [[387, "einfuhrung-in-c-22-2-2016-26-2-2016-bei-einer-firma-in-graz"]], "Advanced Python Workshop (20.2.2017 - 23.2.2017, bei einer Firma in Ober\u00f6sterreich)": [[387, "advanced-python-workshop-20-2-2017-23-2-2017-bei-einer-firma-in-oberosterreich"]], "Embedded Linux (30.11.2015 - 4.12.2015, Bodenseo, Hemmenhofen am Bodensee)": [[387, "embedded-linux-30-11-2015-4-12-2015-bodenseo-hemmenhofen-am-bodensee"]], "Linux Kernel, Realtime (17.11.2015 - 19.11.2015 bei einer Firma in Graz)": [[387, "linux-kernel-realtime-17-11-2015-19-11-2015-bei-einer-firma-in-graz"]], "Linux Basics (3.11.2015 - 5.11.2015 bei einer Firma in Graz)": [[387, "linux-basics-3-11-2015-5-11-2015-bei-einer-firma-in-graz"]], "Einf\u00fchrung in Python (5.10.2015 - 6.10.2015 in Wien)": [[387, "einfuhrung-in-python-5-10-2015-6-10-2015-in-wien"]], "Linux Basics, Systemnahe Programmierung (27.7.2015 - 31.7.2015, bei einer Firma in Ober\u00f6sterreich)": [[387, "linux-basics-systemnahe-programmierung-27-7-2015-31-7-2015-bei-einer-firma-in-oberosterreich"]], "Design Patterns and Test Driven Development (1.7.2015 - 3.7.2015, Raum N\u00fcrnberg)": [[387, "design-patterns-and-test-driven-development-1-7-2015-3-7-2015-raum-nurnberg"]], "C for Advanced Users (9.12.2014 - 11.12.2014, Raum N\u00fcrnberg)": [[387, "c-for-advanced-users-9-12-2014-11-12-2014-raum-nurnberg"]], "Python (1.6.2015 - 3.6.2015, Mathias Kettner in M\u00fcnchen)": [[387, "python-1-6-2015-3-6-2015-mathias-kettner-in-munchen"]], "Linux Basics, Kernel, Git (9.3.2015 - 13.3.2015, Siemens Braunschweig)": [[387, "linux-basics-kernel-git-9-3-2015-13-3-2015-siemens-braunschweig"]], "Embedded Linux (28.1.2015 - 30.1.2015, bei einer Firma im Raum M\u00fcnchen)": [[387, "embedded-linux-28-1-2015-30-1-2015-bei-einer-firma-im-raum-munchen"]], "C for Intermediate Users (9.12.2014 - 11.12.2014, Raum N\u00fcrnberg)": [[387, "c-for-intermediate-users-9-12-2014-11-12-2014-raum-nurnberg"]], "Linux from Scratch (1.12.2014 - 5.12.2014 LPD Hannover)": [[387, "linux-from-scratch-1-12-2014-5-12-2014-lpd-hannover"]], "Einf\u00fchrung in C++ (7.10.2014 - 10.10.2014 in Wien)": [[387, "einfuhrung-in-c-7-10-2014-10-10-2014-in-wien"]], "Systemnahe Programmierung unter Linux (14.4.2014 - 17.4.2014 in K\u00f6ln)": [[387, "systemnahe-programmierung-unter-linux-14-4-2014-17-4-2014-in-koln"]], "Einf\u00fchrung in C++ (3.3.2014 - 14.3.2014 in Wien)": [[387, "einfuhrung-in-c-3-3-2014-14-3-2014-in-wien"]], "Projektverwaltung mit Subversion und CMake (24.2.2014 - 27.2.2014 in Wien)": [[387, "projektverwaltung-mit-subversion-und-cmake-24-2-2014-27-2-2014-in-wien"]], "Einf\u00fchrung in Python (23.6.2014 - 26.6.2014, LKA Niedersachsen)": [[387, "einfuhrung-in-python-23-6-2014-26-6-2014-lka-niedersachsen"]], "Linux: Boot-Konfiguration und Systemnahe Programmierung (27.5.2014 - 30.5.2014 in Graz)": [[387, "linux-boot-konfiguration-und-systemnahe-programmierung-27-5-2014-30-5-2014-in-graz"]], "Einf\u00fchrung in C (11.11.2013 - 22.11.2013 in Wien)": [[387, "einfuhrung-in-c-11-11-2013-22-11-2013-in-wien"]], "Linux Basics (28.10.2013 - 31.10.2013 in Wien)": [[387, "linux-basics-28-10-2013-31-10-2013-in-wien"]], "Linux Basics, Embedded Linux (14.10.2013 - 15.10.2013 bei einer Firma im Raum M\u00fcnchen)": [[387, "linux-basics-embedded-linux-14-10-2013-15-10-2013-bei-einer-firma-im-raum-munchen"]], "Shell/Bash Scripting (7.10.2013 - 9.10.2013, bei einer Firma in Ober\u00f6sterreich)": [[387, "shell-bash-scripting-7-10-2013-9-10-2013-bei-einer-firma-in-oberosterreich"]], "Alles Linux (1.10.2013 - 4.10.2013, QualiVision in Z\u00fcrich)": [[387, "alles-linux-1-10-2013-4-10-2013-qualivision-in-zurich"]], "Linux from Scratch (16.9.2013 - 20.9.2013, Mathias Kettner in M\u00fcnchen)": [[387, "linux-from-scratch-16-9-2013-20-9-2013-mathias-kettner-in-munchen"]], "Linux Basics (2.7.2013 - 4.7.2013, bei einer Firma in Ober\u00f6sterreich)": [[387, "linux-basics-2-7-2013-4-7-2013-bei-einer-firma-in-oberosterreich"]], "Linux - Einf\u00fchrung und Programmierung (27.5.2013 - 29.5.2013, bei einer Firma im Raum M\u00fcnchen)": [[387, "linux-einfuhrung-und-programmierung-27-5-2013-29-5-2013-bei-einer-firma-im-raum-munchen"]], "GNU Make (23.4.2013 in Graz)": [[387, "gnu-make-23-4-2013-in-graz"]], "Linux Basics & Embedded (14.1.2013 - 18.1.2013, bei einer Firma in Ober\u00f6sterreich)": [[387, "linux-basics-embedded-14-1-2013-18-1-2013-bei-einer-firma-in-oberosterreich"]], "Linux Systemnah, Embedded, C++ (26.11.2012 - 28.11.2012, bei einer Firma in Hamburg)": [[387, "linux-systemnah-embedded-c-26-11-2012-28-11-2012-bei-einer-firma-in-hamburg"]], "Fehlerdiagnose unter Linux (19.11.2012 - 21.11.2012, Polizei Niedersachsen in Hannover)": [[387, "fehlerdiagnose-unter-linux-19-11-2012-21-11-2012-polizei-niedersachsen-in-hannover"]], "Systemnahe Programmierung unter Linux (29.10.2012 - 30.10.2012, bei einer Firma im Raum M\u00fcnchen)": [[387, "systemnahe-programmierung-unter-linux-29-10-2012-30-10-2012-bei-einer-firma-im-raum-munchen"]], "Einf\u00fchrung in Python (15.10.2012 - 17.10.2012, Mathias Kettner in M\u00fcnchen)": [[387, "einfuhrung-in-python-15-10-2012-17-10-2012-mathias-kettner-in-munchen"]], "Einf\u00fchrung in Python (25.9.2012 - 27.9.2012, STIA in Admont)": [[387, "einfuhrung-in-python-25-9-2012-27-9-2012-stia-in-admont"]], "Linux Systemnah (13.2.2012 bis 15.2.2012, bei einer Firma in Z\u00fcrich)": [[387, "linux-systemnah-13-2-2012-bis-15-2-2012-bei-einer-firma-in-zurich"]], "Einf\u00fchrung in Python (24.1.2012 - 26.1.2012, Mathias Kettner in M\u00fcnchen)": [[387, "einfuhrung-in-python-24-1-2012-26-1-2012-mathias-kettner-in-munchen"]], "Linux Systemnah (19.9.2011 - 22.9.2011, bei einer Firma in Ober\u00f6sterreich)": [[387, "linux-systemnah-19-9-2011-22-9-2011-bei-einer-firma-in-oberosterreich"]], "Linux Basics (13.9.2011 - 15.9.2011, bei einer Firma in Ober\u00f6sterreich)": [[387, "linux-basics-13-9-2011-15-9-2011-bei-einer-firma-in-oberosterreich"]], "Linux Systemnah (4.7.2011 - 7.7.2011, Bodenseo, Hemmenhofen am Bodensee)": [[387, "linux-systemnah-4-7-2011-7-7-2011-bodenseo-hemmenhofen-am-bodensee"]], "Linux Systemnah (14.2.2011 - 18.2.2011, Bodenseo, Hemmenhofen am Bodensee)": [[387, "linux-systemnah-14-2-2011-18-2-2011-bodenseo-hemmenhofen-am-bodensee"]], "Linux from Scratch (12.12.2010 - 17.12.2010, Mathias Kettner in M\u00fcnchen)": [[387, "linux-from-scratch-12-12-2010-17-12-2010-mathias-kettner-in-munchen"]], "Softwareentwicklung unter Linux (6.12.2010 - 10.12.2010, bei einer Firma in Darmstadt)": [[387, "softwareentwicklung-unter-linux-6-12-2010-10-12-2010-bei-einer-firma-in-darmstadt"]], "Softwareentwicklung unter Linux (24.11.2010 - 26.11.2010, bei einer Firma im Raum Ulm)": [[387, "softwareentwicklung-unter-linux-24-11-2010-26-11-2010-bei-einer-firma-im-raum-ulm"]], "Linux Kernel (25.10.2010 - 26.10.2010, Deutsche Bundeswehr in Wildflecken)": [[387, "linux-kernel-25-10-2010-26-10-2010-deutsche-bundeswehr-in-wildflecken"]], "Softwareentwicklung unter Linux (20.10.2010 - 24.10.2010, Mathias Kettner)": [[387, "softwareentwicklung-unter-linux-20-10-2010-24-10-2010-mathias-kettner"]], "stdin, stdout, And The Pipe": [[930, "stdin-stdout-and-the-pipe"]], "stdin, stdout: Examples": [[930, "stdin-stdout-examples"]], "Pipe: Examples": [[930, "pipe-examples"]], "Basics Text Tools": [[930, "basics-text-tools"]], "Agenda: Linux Basics (2024-03-11 - 2024-03-13)": [[352, "agenda-linux-basics-2024-03-11-2024-03-13"]], "SSH/Putty Setup": [[353, "ssh-putty-setup"]], "Quiz \ud83e\udd77": [[353, "quiz-ninja"]]}, "indexentries": {}})